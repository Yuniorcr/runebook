<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="http">
    <body>
      <group id="http">
        <trans-unit id="44cba524f054d5d6640a40b11e1c3c0dd2b2e81c" translate="yes" xml:space="preserve">
          <source>HTTP/0.9 was very limited and both browsers and servers quickly extended it to be more versatile:</source>
          <target state="translated">HTTP/0.9 был очень ограничен,и браузеры и серверы быстро расширили его,чтобы он стал более универсальным:</target>
        </trans-unit>
        <trans-unit id="17104213d7caf462f808b5202b6b3bf53c6f9e5c" translate="yes" xml:space="preserve">
          <source>HTTP/1.0 &amp;ndash; Building extensibility</source>
          <target state="translated">HTTP / 1.0 - создание расширяемости</target>
        </trans-unit>
        <trans-unit id="8cfcb01eada0b8cfd065017e118d423b8f745b23" translate="yes" xml:space="preserve">
          <source>HTTP/1.0 connections are not persistent by default. Setting &lt;a href=&quot;headers/connection&quot;&gt;&lt;code&gt;Connection&lt;/code&gt;&lt;/a&gt; to anything other than &lt;code&gt;close&lt;/code&gt;, usually &lt;code&gt;retry-after&lt;/code&gt;, will make them persistent.</source>
          <target state="translated">По умолчанию соединения HTTP / 1.0 не являются постоянными. Установка для &lt;a href=&quot;headers/connection&quot;&gt; &lt;code&gt;Connection&lt;/code&gt; &lt;/a&gt; любого другого значения, кроме &lt;code&gt;close&lt;/code&gt; , обычно &lt;code&gt;retry-after&lt;/code&gt; , сделает их постоянными.</target>
        </trans-unit>
        <trans-unit id="c0e8fb29ae930b0d157a9f98acea4150c0686f37" translate="yes" xml:space="preserve">
          <source>HTTP/1.0 opened a TCP connection for each request/response exchange, introducing two major flaws: opening a connection needs several round-trips of messages and therefore slow, but becomes more efficient when several messages are sent, and regularly sent: &lt;em&gt;warm&lt;/em&gt; connections are more efficient than &lt;em&gt;cold&lt;/em&gt; ones.</source>
          <target state="translated">HTTP / 1.0 открывал TCP-соединение для каждого обмена запросом / ответом, представляя два основных недостатка: для открытия соединения требуется несколько циклов передачи сообщений и, следовательно, медленное, но становится более эффективным, когда несколько сообщений отправляются и регулярно отправляются: &lt;em&gt;теплые&lt;/em&gt; соединения эффективнее &lt;em&gt;холодных&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="0d0b58bbcdf0ad6dac8b90fb47db84cff63b6a65" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &amp;ndash; The standardized protocol</source>
          <target state="translated">HTTP / 1.1 - стандартизованный протокол</target>
        </trans-unit>
        <trans-unit id="b6ed95efc2e54e41776e64eab2beb02be978d4fe" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 allows a client to request that only part (a range of) the
   response entity be included within the response. HTTP/1.1 uses range
   units in the Range (&lt;a href=&quot;#section-14.35&quot;&gt;section 14.35&lt;/a&gt;) and Content-Range (&lt;a href=&quot;#section-14.16&quot;&gt;section 14.16&lt;/a&gt;)
   header fields. An entity can be broken down into subranges according
   to various structural units.

      range-unit       = bytes-unit | other-range-unit
      bytes-unit       = &quot;bytes&quot;
      other-range-unit = token

   The only range unit defined by HTTP/1.1 is &quot;bytes&quot;. HTTP/1.1
   implementations MAY ignore ranges specified using other units. 

   HTTP/1.1 has been designed to allow implementations of applications
   that do not depend on knowledge of ranges.</source>
          <target state="translated">HTTP / 1.1 позволяет клиенту запрашивать, чтобы в ответ была включена только часть (диапазон) объекта ответа. HTTP / 1.1 использует единицы диапазона в полях заголовка Range ( &lt;a href=&quot;#section-14.35&quot;&gt;раздел 14.35&lt;/a&gt; ) и Content-Range ( &lt;a href=&quot;#section-14.16&quot;&gt;раздел 14.16&lt;/a&gt; ). Сущность может быть разбита на поддиапазоны согласно различным структурным единицам. диапазон-блок = байтовый-блок | other-range-unit bytes-unit = &quot;bytes&quot; other-range-unit = token Единственная единица диапазона, определяемая HTTP / 1.1, - это &quot;байты&quot;. Реализации HTTP / 1.1 МОГУТ игнорировать диапазоны, указанные с использованием других модулей. HTTP / 1.1 был разработан, чтобы позволить реализации приложений, которые не зависят от знания диапазонов.</target>
        </trans-unit>
        <trans-unit id="8cf11b6afbfe5a73402d4b60de58fb9f5e3c6400" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 and earlier HTTP messages are human-readable. In HTTP/2, these messages are embedded into a new binary structure, a frame, allowing optimizations like compression of headers and multiplexing. Even if only part of the original HTTP message is sent in this version of HTTP, the semantics of each message is unchanged and the client reconstitutes (virtually) the original HTTP/1.1 request. It is therefore useful to comprehend HTTP/2 messages in the HTTP/1.1 format.</source>
          <target state="translated">HTTP/1.1 и более ранние HTTP-сообщения читаются человеком.В HTTP/2 эти сообщения встроены в новую двоичную структуру-фрейм,позволяющий оптимизировать,например,сжатие заголовков и мультиплексирование.Даже если в этой версии HTTP отправляется только часть оригинального сообщения HTTP,семантика каждого сообщения остается неизменной,и клиент воссоздает (фактически)оригинальный запрос HTTP/1.1.Поэтому полезно понимать сообщения HTTP/2 в формате HTTP/1.1.</target>
        </trans-unit>
        <trans-unit id="340b2a6e6c85c293b668779af15231ac0ac5f995" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 clarified ambiguities and introduced numerous improvements:</source>
          <target state="translated">HTTP/1.1 уточнил неясности и внес многочисленные улучшения:</target>
        </trans-unit>
        <trans-unit id="aaede2afb4e2e830b4b4156c5fed71c83597729d" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 defaults to the use of &quot;persistent connections&quot;, allowing
   multiple requests and responses to be carried over a single
   connection.  The &quot;close&quot; connection option is used to signal that a
   connection will not persist after the current request/response.  HTTP
   implementations SHOULD support persistent connections. 

   A recipient determines whether a connection is persistent or not
   based on the most recently received message's protocol version and
   Connection header field (if any):

   o  If the &quot;close&quot; connection option is present, the connection will
      not persist after the current response; else,

   o  If the received protocol is HTTP/1.1 (or later), the connection
      will persist after the current response; else,

   o  If the received protocol is HTTP/1.0, the &quot;keep-alive&quot; connection
      option is present, the recipient is not a proxy, and the recipient
      wishes to honor the HTTP/1.0 &quot;keep-alive&quot; mechanism, the
      connection will persist after the current response; otherwise,

   o  The connection will close after the current response.

   A client MAY send additional requests on a persistent connection
   until it sends or receives a &quot;close&quot; connection option or receives an
   HTTP/1.0 response without a &quot;keep-alive&quot; connection option.

   In order to remain persistent, all messages on a connection need to
   have a self-defined message length (i.e., one not defined by closure
   of the connection), as described in &lt;a href=&quot;#section-3.3&quot;&gt;Section 3.3&lt;/a&gt;.  A server MUST read
   the entire request message body or close the connection after sending
   its response, since otherwise the remaining data on a persistent
   connection would be misinterpreted as the next request.  Likewise, a
   client MUST read the entire response message body if it intends to
   reuse the same connection for a subsequent request.

   A proxy server MUST NOT maintain a persistent connection with an
   HTTP/1.0 client (see &lt;a href=&quot;https://tools.ietf.org/html/rfc2068#section-19.7.1&quot;&gt;Section&amp;nbsp;19.7.1 of [RFC2068]&lt;/a&gt; for information and
   discussion of the problems with the Keep-Alive header field
   implemented by many HTTP/1.0 clients).

   See &lt;a href=&quot;#appendix-A.1.2&quot;&gt;Appendix A.1.2&lt;/a&gt; for more information on backwards compatibility
   with HTTP/1.0 clients.</source>
          <target state="translated">HTTP / 1.1 по умолчанию использует &amp;laquo;постоянные соединения&amp;raquo;, что позволяет передавать несколько запросов и ответов по одному соединению. Параметр &amp;laquo;закрыть&amp;raquo; соединение используется для обозначения того, что соединение не будет сохраняться после текущего запроса / ответа. Реализации HTTP ДОЛЖНЫ поддерживать постоянные соединения. Получатель определяет, является ли соединение постоянным или нет, на основе версии протокола самого последнего полученного сообщения и поля заголовка соединения (если есть): o Если присутствует опция &amp;laquo;закрыть&amp;raquo; соединение, соединение не будет сохраняться после текущего ответа; иначе: o Если получен протокол HTTP / 1.1 (или более поздний), соединение будет сохраняться после текущего ответа; иначе, o Если полученный протокол - HTTP / 1.0, &quot;присутствует опция соединения keep-alive &quot;, получатель не является прокси-сервером, и получатель желает соблюдать механизм HTTP / 1.0&quot; keep-alive &quot;, соединение будет сохраняться после текущего ответа; в противном случае соединение будет закрыто после текущий ответ. Клиент МОЖЕТ отправлять дополнительные запросы по постоянному соединению до тех пор, пока он не отправит или не получит параметр &quot;закрыть&quot; соединение или не получит ответ HTTP / 1.0 без параметра соединения &quot;keep-alive&quot;. Чтобы оставаться постоянным, все сообщения в соединении должна иметь самостоятельно определяемую длину сообщения (т. е. длину, не определяемую закрытием соединения), как описано вмеханизм, соединение будет сохраняться после текущего ответа; в противном случае o соединение будет закрыто после текущего ответа. Клиент МОЖЕТ отправлять дополнительные запросы по постоянному соединению до тех пор, пока он не отправит или не получит параметр соединения &amp;laquo;закрыть&amp;raquo; или не получит ответ HTTP / 1.0 без параметра соединения &amp;laquo;поддерживать активность&amp;raquo;. Чтобы оставаться постоянными, все сообщения в соединении должны иметь самостоятельно определяемую длину сообщения (т. Е. Длину, не определяемую закрытием соединения), как описано вмеханизм, соединение будет сохраняться после текущего ответа; в противном случае o соединение будет закрыто после текущего ответа. Клиент МОЖЕТ отправлять дополнительные запросы по постоянному соединению до тех пор, пока он не отправит или не получит параметр соединения &amp;laquo;закрыть&amp;raquo; или не получит ответ HTTP / 1.0 без параметра соединения &amp;laquo;поддерживать активность&amp;raquo;. Чтобы оставаться постоянными, все сообщения в соединении должны иметь самостоятельно определяемую длину сообщения (т. Е. Длину, не определяемую закрытием соединения), как описано в0 без опции подключения &quot;keep-alive&quot;. Чтобы оставаться постоянными, все сообщения в соединении должны иметь самостоятельно определяемую длину сообщения (то есть длину, не определяемую закрытием соединения), как описано в0 без опции подключения &quot;keep-alive&quot;. Чтобы оставаться постоянными, все сообщения в соединении должны иметь самостоятельно определяемую длину сообщения (то есть длину, не определяемую закрытием соединения), как описано в&lt;a href=&quot;#section-3.3&quot;&gt;Раздел 3.3&lt;/a&gt; . Сервер ДОЛЖЕН прочитать весь текст сообщения запроса или закрыть соединение после отправки своего ответа, так как в противном случае оставшиеся данные в постоянном соединении будут ошибочно интерпретированы как следующий запрос. Аналогичным образом, клиент ДОЛЖЕН прочитать весь текст ответного сообщения, если он намеревается повторно использовать то же соединение для последующего запроса. Прокси-сервер НЕ ДОЛЖЕН поддерживать постоянное соединение с клиентом HTTP / 1.0 (см. &lt;a href=&quot;https://tools.ietf.org/html/rfc2068#section-19.7.1&quot;&gt;Раздел 19.7.1 [RFC2068]&lt;/a&gt; для информации и обсуждения проблем с полем заголовка Keep-Alive, реализуемого многими клиентами HTTP / 1.0). См. &lt;a href=&quot;#appendix-A.1.2&quot;&gt;Приложение A.1.2&lt;/a&gt; для получения дополнительной информации об обратной совместимости с клиентами HTTP / 1.0.</target>
        </trans-unit>
        <trans-unit id="b235442975ba302869396fe0ff4cdaebf53c2643" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 introduces the Transfer-Encoding header field
   (&lt;a href=&quot;#section-3.3.1&quot;&gt;Section 3.3.1&lt;/a&gt;).  Transfer codings need to be decoded prior to
   forwarding an HTTP message over a MIME-compliant protocol.</source>
          <target state="translated">HTTP / 1.1 представляет поле заголовка Transfer-Encoding ( &lt;a href=&quot;#section-3.3.1&quot;&gt;раздел 3.3.1&lt;/a&gt; ). Перед отправкой сообщения HTTP по протоколу, совместимому с MIME, необходимо декодировать кодирование передачи.</target>
        </trans-unit>
        <trans-unit id="b7bc6b9e5b12ebbdf628d83f676eae2e25277f50" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 introduces the Transfer-Encoding header field (&lt;a href=&quot;#section-14.41&quot;&gt;section&lt;/a&gt;&lt;a href=&quot;#section-14.41&quot;&gt;14.41&lt;/a&gt;). Proxies/gateways MUST remove any transfer-coding prior to
   forwarding a message via a MIME-compliant protocol.

   A process for decoding the &quot;chunked&quot; transfer-coding (&lt;a href=&quot;#section-3.6&quot;&gt;section 3.6&lt;/a&gt;)
   can be represented in pseudo-code as:

       length := 0
       read chunk-size, chunk-extension (if any) and CRLF
       while (chunk-size &amp;gt; 0) {
          read chunk-data and CRLF
          append chunk-data to entity-body
          length := length + chunk-size
          read chunk-size and CRLF
       }
       read entity-header
       while (entity-header not empty) {
          append entity-header to existing header fields
          read entity-header
       }
       Content-Length := length
       Remove &quot;chunked&quot; from Transfer-Encoding</source>
          <target state="translated">HTTP / 1.1 представляет поле заголовка Transfer-Encoding ( &lt;a href=&quot;#section-14.41&quot;&gt;раздел &lt;/a&gt;&lt;a href=&quot;#section-14.41&quot;&gt;14.41&lt;/a&gt; ). Прокси-серверы / шлюзы ДОЛЖНЫ удалить любое кодирование передачи перед пересылкой сообщения по протоколу, совместимому с MIME. Процесс декодирования &quot;фрагментированного&quot; кодирования передачи ( &lt;a href=&quot;#section-3.6&quot;&gt;раздел 3.6.&lt;/a&gt;) может быть представлен в псевдокоде как: length: = 0 читать размер блока, расширение блока (если есть) и CRLF while (размер блока&amp;gt; 0) {читать данные блока и CRLF добавляет данные блока в объект- длина тела: = длина + размер блока читать размер блока и CRLF} читать заголовок объекта, в то время как (заголовок объекта не пустой) {добавить заголовок объекта к существующим полям заголовка читать заголовок объекта} Длина содержимого: = длина Удалить &quot; фрагментировано &quot;из Transfer-Encoding</target>
        </trans-unit>
        <trans-unit id="55f1d0e9c7b192d39b6bf47cece53fe18cddfa5c" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 servers SHOULD maintain persistent connections and use TCP's
   flow control mechanisms to resolve temporary overloads, rather than
   terminating connections with the expectation that clients will retry.
   The latter technique can exacerbate network congestion.</source>
          <target state="translated">HTTP/1.1 серверы SHOULD поддерживают постоянные соединения и используют механизмы управления потоком TCP для разрешения временных перегрузок,а не для прерывания соединений с ожиданием повторных попыток клиентов.Последняя техника может усугубить перегрузку сети.</target>
        </trans-unit>
        <trans-unit id="5bde47938358e96d6b78dd50b25535a7c82c1d43" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 uses a restricted set of date formats (&lt;a href=&quot;#section-3.3.1&quot;&gt;section 3.3.1&lt;/a&gt;) to
   simplify the process of date comparison. Proxies and gateways from
   other protocols SHOULD ensure that any Date header field present in a
   message conforms to one of the HTTP/1.1 formats and rewrite the date
   if necessary.</source>
          <target state="translated">HTTP / 1.1 использует ограниченный набор форматов даты ( &lt;a href=&quot;#section-3.3.1&quot;&gt;раздел 3.3.1&lt;/a&gt; ), чтобы упростить процесс сравнения дат. Прокси-серверы и шлюзы из других протоколов ДОЛЖНЫ гарантировать, что любое поле заголовка Date, присутствующее в сообщении, соответствует одному из форматов HTTP / 1.1, и при необходимости переписать дату.</target>
        </trans-unit>
        <trans-unit id="f983729fa70af1e90d7ea6dbb4afb3d7c8f79cd6" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 uses a restricted set of date formats (&lt;a href=&quot;#section-7.1.1.1&quot;&gt;Section 7.1.1.1&lt;/a&gt;) to
   simplify the process of date comparison.  Proxies and gateways from
   other protocols ought to ensure that any Date header field present in
   a message conforms to one of the HTTP/1.1 formats and rewrite the
   date if necessary.</source>
          <target state="translated">HTTP / 1.1 использует ограниченный набор форматов даты ( &lt;a href=&quot;#section-7.1.1.1&quot;&gt;раздел 7.1.1.1&lt;/a&gt; ), чтобы упростить процесс сравнения дат. Прокси-серверы и шлюзы из других протоколов должны гарантировать, что любое поле заголовка Date, присутствующее в сообщении, соответствует одному из форматов HTTP / 1.1, и при необходимости перезаписывать дату.</target>
        </trans-unit>
        <trans-unit id="87f9910f16689f67ad3946ec5476c5e20370823d" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 uses many of the constructs defined for Internet Mail (&lt;a href=&quot;https://tools.ietf.org/html/rfc822&quot;&gt;RFC&lt;/a&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc822&quot;&gt;822&lt;/a&gt; [&lt;a href=&quot;#ref-9&quot;&gt;9&lt;/a&gt;]) and the Multipurpose Internet Mail Extensions (MIME [&lt;a href=&quot;#ref-7&quot;&gt;7&lt;/a&gt;]) to
   allow entities to be transmitted in an open variety of
   representations and with extensible mechanisms. However, &lt;a href=&quot;https://tools.ietf.org/html/rfc2045&quot;&gt;RFC 2045&lt;/a&gt;
   discusses mail, and HTTP has a few features that are different from
   those described in &lt;a href=&quot;https://tools.ietf.org/html/rfc2045&quot;&gt;RFC 2045&lt;/a&gt;. These differences were carefully chosen
   to optimize performance over binary connections, to allow greater
   freedom in the use of new media types, to make date comparisons
   easier, and to acknowledge the practice of some early HTTP servers
   and clients.

   This appendix describes specific areas where HTTP differs from &lt;a href=&quot;https://tools.ietf.org/html/rfc2045&quot;&gt;RFC&lt;/a&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc2045&quot;&gt;2045&lt;/a&gt;. Proxies and gateways to strict MIME environments SHOULD be
   aware of these differences and provide the appropriate conversions
   where necessary. Proxies and gateways from MIME environments to HTTP
   also need to be aware of the differences because some conversions
   might be required.</source>
          <target state="translated">HTTP / 1.1 использует многие конструкции, определенные для Интернет-почты ( &lt;a href=&quot;https://tools.ietf.org/html/rfc822&quot;&gt;RFC &lt;/a&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc822&quot;&gt;822&lt;/a&gt; [ &lt;a href=&quot;#ref-9&quot;&gt;9&lt;/a&gt; ]) и многоцелевых расширений Интернет-почты (MIME [ &lt;a href=&quot;#ref-7&quot;&gt;7&lt;/a&gt; ]), чтобы позволить объектам передаваться в различных открытых представлениях и с расширяемыми механизмами. Однако в &lt;a href=&quot;https://tools.ietf.org/html/rfc2045&quot;&gt;RFC 2045&lt;/a&gt; обсуждается почта, а HTTP имеет несколько функций, которые отличаются от описанных в &lt;a href=&quot;https://tools.ietf.org/html/rfc2045&quot;&gt;RFC 2045&lt;/a&gt; . Эти различия были тщательно выбраны для оптимизации производительности по бинарным соединениям, чтобы предоставить большую свободу в использовании новых типов носителей, упростить сравнение дат и признать практику некоторых ранних HTTP-серверов и клиентов. В этом приложении описаны конкретные области, в которых HTTP отличается от&lt;a href=&quot;https://tools.ietf.org/html/rfc2045&quot;&gt;RFC &lt;/a&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc2045&quot;&gt;2045&lt;/a&gt; . Прокси-серверы и шлюзы к средам со строгим MIME ДОЛЖНЫ быть в курсе этих различий и обеспечивать соответствующие преобразования там, где это необходимо. Прокси-серверы и шлюзы из сред MIME в HTTP также должны знать о различиях, потому что могут потребоваться некоторые преобразования.</target>
        </trans-unit>
        <trans-unit id="7ba038961de66fab4bc0d4ca5f738bb4971581c5" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 uses many of the constructs defined for the Internet Message
   Format [&lt;a href=&quot;https://tools.ietf.org/html/rfc5322&quot;&gt;RFC5322&lt;/a&gt;] and the Multipurpose Internet Mail Extensions (MIME)
   [&lt;a href=&quot;https://tools.ietf.org/html/rfc2045&quot;&gt;RFC2045&lt;/a&gt;] to allow a message body to be transmitted in an open
   variety of representations and with extensible header fields.
   However, &lt;a href=&quot;https://tools.ietf.org/html/rfc2045&quot;&gt;RFC 2045&lt;/a&gt; is focused only on email; applications of HTTP have
   many characteristics that differ from email; hence, HTTP has features
   that differ from MIME.  These differences were carefully chosen to
   optimize performance over binary connections, to allow greater
   freedom in the use of new media types, to make date comparisons
   easier, and to acknowledge the practice of some early HTTP servers
   and clients.

   This appendix describes specific areas where HTTP differs from MIME.
   Proxies and gateways to and from strict MIME environments need to be
   aware of these differences and provide the appropriate conversions
   where necessary.</source>
          <target state="translated">HTTP / 1.1 использует многие конструкции, определенные для формата Интернет-сообщений [ &lt;a href=&quot;https://tools.ietf.org/html/rfc5322&quot;&gt;RFC5322&lt;/a&gt; ] и многоцелевых расширений Интернет-почты (MIME) [ &lt;a href=&quot;https://tools.ietf.org/html/rfc2045&quot;&gt;RFC2045&lt;/a&gt; ], что позволяет передавать тело сообщения в различных открытых представлениях и с расширяемыми полями заголовка. Однако &lt;a href=&quot;https://tools.ietf.org/html/rfc2045&quot;&gt;RFC 2045&lt;/a&gt;ориентирован только на электронную почту; приложения HTTP имеют много характеристик, которые отличаются от электронной почты; следовательно, HTTP имеет функции, которые отличаются от MIME. Эти различия были тщательно выбраны для оптимизации производительности по бинарным соединениям, чтобы предоставить большую свободу в использовании новых типов носителей, упростить сравнение дат и признать практику некоторых ранних HTTP-серверов и клиентов. В этом приложении описаны конкретные области, в которых HTTP отличается от MIME. Прокси-серверы и шлюзы в строгие среды MIME и обратно должны знать об этих различиях и при необходимости обеспечивать соответствующие преобразования.</target>
        </trans-unit>
        <trans-unit id="26857a3eb014d1c446a022b99900a2e1fa1f388e" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 was first published as &lt;a href=&quot;https://tools.ietf.org/html/rfc2068&quot;&gt;RFC 2068&lt;/a&gt; in January 1997.</source>
          <target state="translated">HTTP / 1.1 был впервые опубликован как &lt;a href=&quot;https://tools.ietf.org/html/rfc2068&quot;&gt;RFC 2068&lt;/a&gt; в январе 1997 года.</target>
        </trans-unit>
        <trans-unit id="d5072f3723c431d48c51e0f349be99684fbc90ba" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 was the first version of HTTP to support persistent connection and pipelining. This article explains both concepts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd63c4dcb6457bcb6fd3cf072cc949e847bb34c1" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 was the first version of HTTP to support persistent connection and pipelining. This article explains these two concepts.</source>
          <target state="translated">HTTP/1.1 был первой версией HTTP для поддержки постоянных соединений и трубопроводов.В этой статье объясняются эти два понятия.</target>
        </trans-unit>
        <trans-unit id="1503342ea4d0a3a7deec2528731a5bc064211705" translate="yes" xml:space="preserve">
          <source>HTTP/1.1: Authentication</source>
          <target state="translated">HTTP/1.1:Аутентификация</target>
        </trans-unit>
        <trans-unit id="0c4a2c0ccd4801b8e3ca9529c7a252503dccdf00" translate="yes" xml:space="preserve">
          <source>HTTP/1.1: Semantics and Content</source>
          <target state="translated">HTTP/1.1:Семантика и содержание</target>
        </trans-unit>
        <trans-unit id="c0b298b6e63b8ce602677a51d4f1e6436079232f" translate="yes" xml:space="preserve">
          <source>HTTP/1.1: Status Code Definitions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21663f5aa54f6135626b598bc6ce1bf03ec7513b" translate="yes" xml:space="preserve">
          <source>HTTP/1.x messages have a few drawbacks for performance:</source>
          <target state="translated">Сообщения HTTP/1.x имеют несколько недостатков для производительности:</target>
        </trans-unit>
        <trans-unit id="682ec4f8ae7cf90f4fab0685ba322176bdd4f593" translate="yes" xml:space="preserve">
          <source>HTTP/2 &amp;ndash; A protocol for greater performance</source>
          <target state="translated">HTTP / 2 - протокол для большей производительности</target>
        </trans-unit>
        <trans-unit id="a9820b1d6f7a1eb33859fc438f4a30a55193154b" translate="yes" xml:space="preserve">
          <source>HTTP/2 Frames</source>
          <target state="translated">HTTP/2 фреймы</target>
        </trans-unit>
        <trans-unit id="b9a1cc9ca8b3b857841ac45f6cab101cd76b0608" translate="yes" xml:space="preserve">
          <source>HTTP/2 adds additional models for connection management.</source>
          <target state="translated">HTTP/2 добавляет дополнительные модели для управления соединениями.</target>
        </trans-unit>
        <trans-unit id="54eb672058f3fe82f9b7ac710f7c24cca641a933" translate="yes" xml:space="preserve">
          <source>HTTP/2 allows a server to pre-emptively send (or &quot;push&quot;) responses
   (along with corresponding &quot;promised&quot; requests) to a client in
   association with a previous client-initiated request.  This can be
   useful when the server knows the client will need to have those
   responses available in order to fully process the response to the
   original request. 

   A client can request that server push be disabled, though this is
   negotiated for each hop independently.  The SETTINGS_ENABLE_PUSH
   setting can be set to 0 to indicate that server push is disabled.

   Promised requests MUST be cacheable (see &lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-4.2.3&quot;&gt;[RFC7231], Section&amp;nbsp;4.2.3&lt;/a&gt;),
   MUST be safe (see &lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-4.2.1&quot;&gt;[RFC7231], Section&amp;nbsp;4.2.1&lt;/a&gt;), and MUST NOT include a
   request body.  Clients that receive a promised request that is not
   cacheable, that is not known to be safe, or that indicates the
   presence of a request body MUST reset the promised stream with a
   stream error (&lt;a href=&quot;#section-5.4.2&quot;&gt;Section 5.4.2&lt;/a&gt;) of type PROTOCOL_ERROR.  Note this could
   result in the promised stream being reset if the client does not
   recognize a newly defined method as being safe.

   Pushed responses that are cacheable (see &lt;a href=&quot;https://tools.ietf.org/html/rfc7234#section-3&quot;&gt;[RFC7234], Section&amp;nbsp;3&lt;/a&gt;) can be
   stored by the client, if it implements an HTTP cache.  Pushed
   responses are considered successfully validated on the origin server
   (e.g., if the &quot;no-cache&quot; cache response directive is present
   (&lt;a href=&quot;https://tools.ietf.org/html/rfc7234#section-5.2.2&quot;&gt;[RFC7234], Section&amp;nbsp;5.2.2&lt;/a&gt;)) while the stream identified by the
   promised stream ID is still open.

   Pushed responses that are not cacheable MUST NOT be stored by any
   HTTP cache.  They MAY be made available to the application
   separately.

   The server MUST include a value in the &quot;:authority&quot; pseudo-header
   field for which the server is authoritative (see &lt;a href=&quot;#section-10.1&quot;&gt;Section 10.1&lt;/a&gt;).  A
   client MUST treat a PUSH_PROMISE for which the server is not
   authoritative as a stream error (&lt;a href=&quot;#section-5.4.2&quot;&gt;Section 5.4.2&lt;/a&gt;) of type
   PROTOCOL_ERROR.

   An intermediary can receive pushes from the server and choose not to
   forward them on to the client.  In other words, how to make use of
   the pushed information is up to that intermediary.  Equally, the
   intermediary might choose to make additional pushes to the client,
   without any action taken by the server.

   A client cannot push.  Thus, servers MUST treat the receipt of a
   PUSH_PROMISE frame as a connection error (&lt;a href=&quot;#section-5.4.1&quot;&gt;Section 5.4.1&lt;/a&gt;) of type
   PROTOCOL_ERROR.  Clients MUST reject any attempt to change the
   SETTINGS_ENABLE_PUSH setting to a value other than 0 by treating the
   message as a connection error (&lt;a href=&quot;#section-5.4.1&quot;&gt;Section 5.4.1&lt;/a&gt;) of type PROTOCOL_ERROR.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de5c597058c2601a65efadc88f948c586a1ffe49" translate="yes" xml:space="preserve">
          <source>HTTP/2 completely revisited how connections are created and maintained. This article explains how HTTP frames allow multiplexing and solve the 'head-of-line' blocking problem of former HTTP versions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5d84f8ae615e7ecf29c3c866e9ab8e4f31fe842" translate="yes" xml:space="preserve">
          <source>HTTP/2 completely revisited how connections are created and maintained: this article explains how HTTP frames allow multiplexing and solve the 'head-of-line' blocking problem of former HTTP versions.</source>
          <target state="translated">HTTP/2 полностью пересмотрел то,как создаются и поддерживаются соединения:эта статья объясняет,как HTTP фреймы позволяют мультиплексировать и решают проблему блокировки &quot;заголовков&quot; бывших версий HTTP.</target>
        </trans-unit>
        <trans-unit id="2e8a1b1988d920e971547beb51740f33d132de14" translate="yes" xml:space="preserve">
          <source>HTTP/2 connections are persistent.  For best performance, it is
   expected that clients will not close connections until it is
   determined that no further communication with a server is necessary
   (for example, when a user navigates away from a particular web page)
   or until the server closes the connection.

   Clients SHOULD NOT open more than one HTTP/2 connection to a given
   host and port pair, where the host is derived from a URI, a selected
   alternative service [&lt;a href=&quot;#ref-ALT-SVC&quot;&gt;ALT-SVC&lt;/a&gt;], or a configured proxy.

   A client can create additional connections as replacements, either to
   replace connections that are near to exhausting the available stream
   identifier space (&lt;a href=&quot;#section-5.1.1&quot;&gt;Section 5.1.1&lt;/a&gt;), to refresh the keying material for
   a TLS connection, or to replace connections that have encountered
   errors (&lt;a href=&quot;#section-5.4.1&quot;&gt;Section 5.4.1&lt;/a&gt;).

   A client MAY open multiple connections to the same IP address and TCP
   port using different Server Name Indication [&lt;a href=&quot;#ref-TLS-EXT&quot;&gt;TLS-EXT&lt;/a&gt;] values or to
   provide different TLS client certificates but SHOULD avoid creating
   multiple connections with the same configuration.

   Servers are encouraged to maintain open connections for as long as
   possible but are permitted to terminate idle connections if
   necessary.  When either endpoint chooses to close the transport-layer
   TCP connection, the terminating endpoint SHOULD first send a GOAWAY
   (&lt;a href=&quot;#section-6.8&quot;&gt;Section 6.8&lt;/a&gt;) frame so that both endpoints can reliably determine
   whether previously sent frames have been processed and gracefully
   complete or terminate any necessary remaining tasks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1efc25584aecfa2add3f9dc3f180c8c930b17062" translate="yes" xml:space="preserve">
          <source>HTTP/2 does not use the Connection header field to indicate
   connection-specific header fields; in this protocol, connection-
   specific metadata is conveyed by other means.  An endpoint MUST NOT
   generate an HTTP/2 message containing connection-specific header
   fields; any message containing connection-specific header fields MUST
   be treated as malformed (&lt;a href=&quot;#section-8.1.2.6&quot;&gt;Section 8.1.2.6&lt;/a&gt;).

   The only exception to this is the TE header field, which MAY be
   present in an HTTP/2 request; when it is, it MUST NOT contain any
   value other than &quot;trailers&quot;.

   This means that an intermediary transforming an HTTP/1.x message to
   HTTP/2 will need to remove any header fields nominated by the
   Connection header field, along with the Connection header field
   itself.  Such intermediaries SHOULD also remove other connection-
   specific header fields, such as Keep-Alive, Proxy-Connection,
   Transfer-Encoding, and Upgrade, even if they are not nominated by the
   Connection header field.

      Note: HTTP/2 purposefully does not support upgrade to another
      protocol.  The handshake methods described in &lt;a href=&quot;#section-3&quot;&gt;Section 3&lt;/a&gt; are
      believed sufficient to negotiate the use of alternative protocols.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f0a10f9ce0b6e8be8176a0d0cf459883c237676" translate="yes" xml:space="preserve">
          <source>HTTP/2 encapsulates and represents HTTP/1.x messages in a binary frame. This article explains the frame structure, its purpose and the way it is encoded.</source>
          <target state="translated">HTTP/2 инкапсулирует и представляет сообщения HTTP/1.x в двоичном фрейме.Эта статья объясняет структуру фрейма,его назначение и способ кодирования.</target>
        </trans-unit>
        <trans-unit id="8b89d94c6825e208193b0c3215145db1ad533fe7" translate="yes" xml:space="preserve">
          <source>HTTP/2 encapsulates and represents HTTP/1.x messages in a binary frame. This article explains the frame structure, its purpose, and the way it's encoded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba56fda18c2bd152dfb61f66462a8db0fe469c40" translate="yes" xml:space="preserve">
          <source>HTTP/2 explicitly disallows the use of this mechanism/header; it is specific to HTTP/1.1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c2199ec4bbb69f26ef0e867c04766b55d384a12" translate="yes" xml:space="preserve">
          <source>HTTP/2 framing permits two classes of error:

   o  An error condition that renders the entire connection unusable is
      a connection error.

   o  An error in an individual stream is a stream error.

   A list of error codes is included in &lt;a href=&quot;#section-7&quot;&gt;Section 7&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f6c2df4a46eb441a1cda15f98cf3c5243cca600" translate="yes" xml:space="preserve">
          <source>HTTP/2 introduces an extra step: it divides HTTP/1.x messages into frames which are embedded in a stream. Data and header frames are separated, this allows header compression. Several streams can be combined together, a process called &lt;em&gt;multiplexing&lt;/em&gt;, allowing more efficient underlying TCP connections.</source>
          <target state="translated">HTTP / 2 вводит дополнительный шаг: он разделяет сообщения HTTP / 1.x на фреймы, которые встраиваются в поток. Кадры данных и заголовки разделены, это позволяет сжать заголовок. Несколько потоков можно объединить вместе, этот процесс называется &lt;em&gt;мультиплексированием&lt;/em&gt; , что позволяет более эффективно использовать базовые TCP-соединения.</target>
        </trans-unit>
        <trans-unit id="bc53da359a0e569373e6fa4412bc22e2cf58dd05" translate="yes" xml:space="preserve">
          <source>HTTP/2 is intended to be as compatible as possible with current uses
   of HTTP.  This means that, from the application perspective, the
   features of the protocol are largely unchanged.  To achieve this, all
   request and response semantics are preserved, although the syntax of
   conveying those semantics has changed.

   Thus, the specification and requirements of HTTP/1.1 Semantics and
   Content [&lt;a href=&quot;https://tools.ietf.org/html/rfc7231&quot;&gt;RFC7231&lt;/a&gt;], Conditional Requests [&lt;a href=&quot;https://tools.ietf.org/html/rfc7232&quot;&gt;RFC7232&lt;/a&gt;], Range Requests
   [&lt;a href=&quot;https://tools.ietf.org/html/rfc7233&quot;&gt;RFC7233&lt;/a&gt;], Caching [&lt;a href=&quot;https://tools.ietf.org/html/rfc7234&quot;&gt;RFC7234&lt;/a&gt;], and Authentication [&lt;a href=&quot;https://tools.ietf.org/html/rfc7235&quot;&gt;RFC7235&lt;/a&gt;] are
   applicable to HTTP/2.  Selected portions of HTTP/1.1 Message Syntax 

   and Routing [&lt;a href=&quot;https://tools.ietf.org/html/rfc7230&quot;&gt;RFC7230&lt;/a&gt;], such as the HTTP and HTTPS URI schemes, are
   also applicable in HTTP/2, but the expression of those semantics for
   this protocol are defined in the sections below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9edb835c33550cd700f0b5e17b2557aefdd2e70" translate="yes" xml:space="preserve">
          <source>HTTP/2 permits extension of the protocol.  Within the limitations
   described in this section, protocol extensions can be used to provide
   additional services or alter any aspect of the protocol.  Extensions
   are effective only within the scope of a single HTTP/2 connection.

   This applies to the protocol elements defined in this document.  This
   does not affect the existing options for extending HTTP, such as
   defining new methods, status codes, or header fields.

   Extensions are permitted to use new frame types (&lt;a href=&quot;#section-4.1&quot;&gt;Section 4.1&lt;/a&gt;), new
   settings (&lt;a href=&quot;#section-6.5.2&quot;&gt;Section 6.5.2&lt;/a&gt;), or new error codes (&lt;a href=&quot;#section-7&quot;&gt;Section 7&lt;/a&gt;).  Registries
   are established for managing these extension points: frame types
   (&lt;a href=&quot;#section-11.2&quot;&gt;Section 11.2&lt;/a&gt;), settings (&lt;a href=&quot;#section-11.3&quot;&gt;Section 11.3&lt;/a&gt;), and error codes
   (&lt;a href=&quot;#section-11.4&quot;&gt;Section 11.4&lt;/a&gt;).

   Implementations MUST ignore unknown or unsupported values in all
   extensible protocol elements.  Implementations MUST discard frames
   that have unknown or unsupported types.  This means that any of these
   extension points can be safely used by extensions without prior
   arrangement or negotiation.  However, extension frames that appear in
   the middle of a header block (&lt;a href=&quot;#section-4.3&quot;&gt;Section 4.3&lt;/a&gt;) are not permitted; these
   MUST be treated as a connection error (&lt;a href=&quot;#section-5.4.1&quot;&gt;Section 5.4.1&lt;/a&gt;) of type
   PROTOCOL_ERROR.

   Extensions that could change the semantics of existing protocol
   components MUST be negotiated before being used.  For example, an
   extension that changes the layout of the HEADERS frame cannot be used
   until the peer has given a positive signal that this is acceptable.
   In this case, it could also be necessary to coordinate when the
   revised layout comes into effect.  Note that treating any frames
   other than DATA frames as flow controlled is such a change in
   semantics and can only be done through negotiation.

   This document doesn't mandate a specific method for negotiating the
   use of an extension but notes that a setting (&lt;a href=&quot;#section-6.5.2&quot;&gt;Section 6.5.2&lt;/a&gt;) could be
   used for that purpose.  If both peers set a value that indicates
   willingness to use the extension, then the extension can be used.  If 

   a setting is used for extension negotiation, the initial value MUST
   be defined in such a fashion that the extension is initially
   disabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22c5a1b25e6a4fea1e7bbf65b201a3854ef9fe0d" translate="yes" xml:space="preserve">
          <source>HTTP/2 provides an optimized transport for HTTP semantics.  HTTP/2
   supports all of the core features of HTTP/1.1 but aims to be more
   efficient in several ways.

   The basic protocol unit in HTTP/2 is a frame (&lt;a href=&quot;#section-4.1&quot;&gt;Section 4.1&lt;/a&gt;).  Each
   frame type serves a different purpose.  For example, HEADERS and DATA
   frames form the basis of HTTP requests and responses (&lt;a href=&quot;#section-8.1&quot;&gt;Section 8.1&lt;/a&gt;);
   other frame types like SETTINGS, WINDOW_UPDATE, and PUSH_PROMISE are
   used in support of other HTTP/2 features.

   Multiplexing of requests is achieved by having each HTTP request/
   response exchange associated with its own stream (&lt;a href=&quot;#section-5&quot;&gt;Section 5&lt;/a&gt;).
   Streams are largely independent of each other, so a blocked or
   stalled request or response does not prevent progress on other
   streams.

   Flow control and prioritization ensure that it is possible to
   efficiently use multiplexed streams.  Flow control (&lt;a href=&quot;#section-5.2&quot;&gt;Section 5.2&lt;/a&gt;)
   helps to ensure that only data that can be used by a receiver is
   transmitted.  Prioritization (&lt;a href=&quot;#section-5.3&quot;&gt;Section 5.3&lt;/a&gt;) ensures that limited
   resources can be directed to the most important streams first.

   HTTP/2 adds a new interaction mode whereby a server can push
   responses to a client (&lt;a href=&quot;#section-8.2&quot;&gt;Section 8.2&lt;/a&gt;).  Server push allows a server to
   speculatively send data to a client that the server anticipates the
   client will need, trading off some network usage against a potential
   latency gain.  The server does this by synthesizing a request, which
   it sends as a PUSH_PROMISE frame.  The server is then able to send a
   response to the synthetic request on a separate stream.

   Because HTTP header fields used in a connection can contain large
   amounts of redundant data, frames that contain them are compressed
   (&lt;a href=&quot;#section-4.3&quot;&gt;Section 4.3&lt;/a&gt;).  This has especially advantageous impact upon request
   sizes in the common case, allowing many requests to be compressed
   into one packet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6d3d6527a518220064866c33fee8ad8d1d0d9e1" translate="yes" xml:space="preserve">
          <source>HTTP/2 relies on the HTTP/1.1 definition of authority for determining
   whether a server is authoritative in providing a given response (see
   &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-9.1&quot;&gt;[RFC7230], Section&amp;nbsp;9.1&lt;/a&gt;).  This relies on local name resolution for
   the &quot;http&quot; URI scheme and the authenticated server identity for the
   &quot;https&quot; scheme (see &lt;a href=&quot;https://tools.ietf.org/html/rfc2818#section-3&quot;&gt;[RFC2818], Section&amp;nbsp;3&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09a20a6daa697cc2c8f65f130ec7eeb86fda81cc" translate="yes" xml:space="preserve">
          <source>HTTP/2 removes support for the 101 (Switching Protocols)
   informational status code (&lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-6.2.2&quot;&gt;[RFC7231], Section&amp;nbsp;6.2.2&lt;/a&gt;).

   The semantics of 101 (Switching Protocols) aren't applicable to a
   multiplexed protocol.  Alternative protocols are able to use the same
   mechanisms that HTTP/2 uses to negotiate their use (see &lt;a href=&quot;#section-3&quot;&gt;Section 3&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6307824ad0a5d4b71efa2a434d199cfb09c04ad" translate="yes" xml:space="preserve">
          <source>HTTP/2 stream flow control aims to allow a variety of flow-control
   algorithms to be used without requiring protocol changes.  Flow
   control in HTTP/2 has the following characteristics:

   1.  Flow control is specific to a connection.  Both types of flow
       control are between the endpoints of a single hop and not over
       the entire end-to-end path.

   2.  Flow control is based on WINDOW_UPDATE frames.  Receivers
       advertise how many octets they are prepared to receive on a
       stream and for the entire connection.  This is a credit-based
       scheme.

   3.  Flow control is directional with overall control provided by the
       receiver.  A receiver MAY choose to set any window size that it
       desires for each stream and for the entire connection.  A sender
       MUST respect flow-control limits imposed by a receiver.  Clients,
       servers, and intermediaries all independently advertise their
       flow-control window as a receiver and abide by the flow-control
       limits set by their peer when sending.

   4.  The initial value for the flow-control window is 65,535 octets
       for both new streams and the overall connection.

   5.  The frame type determines whether flow control applies to a
       frame.  Of the frames specified in this document, only DATA
       frames are subject to flow control; all other frame types do not
       consume space in the advertised flow-control window.  This
       ensures that important control frames are not blocked by flow
       control.

   6.  Flow control cannot be disabled.

   7.  HTTP/2 defines only the format and semantics of the WINDOW_UPDATE
       frame (&lt;a href=&quot;#section-6.9&quot;&gt;Section 6.9&lt;/a&gt;).  This document does not stipulate how a
       receiver decides when to send this frame or the value that it
       sends, nor does it specify how a sender chooses to send packets.
       Implementations are able to select any algorithm that suits their
       needs.

   Implementations are also responsible for managing how requests and
   responses are sent based on priority, choosing how to avoid head-of-
   line blocking for requests, and managing the creation of new streams.
   Algorithm choices for these could interact with any flow-control
   algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a496c90d2f1f8118ed8e04e7a7acf8027e245b96" translate="yes" xml:space="preserve">
          <source>HTTP/3 - HTTP over QUIC</source>
          <target state="translated">HTTP/3-HTTP over QUIC</target>
        </trans-unit>
        <trans-unit id="2e6205295940162ec6f356951c335bcb251f4584" translate="yes" xml:space="preserve">
          <source>HTTPS &lt;em&gt;host:port&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Хост&lt;/em&gt; HTTPS &lt;em&gt;: порт&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9b1b03288626a4932189c45619afd52b616640ff" translate="yes" xml:space="preserve">
          <source>Handling CORS on the server (Java example)</source>
          <target state="translated">Обработка CORS на сервере (пример Java)</target>
        </trans-unit>
        <trans-unit id="76ccff916d0696e0db6e0e63211aa5d404b177bb" translate="yes" xml:space="preserve">
          <source>Handshake</source>
          <target state="translated">Handshake</target>
        </trans-unit>
        <trans-unit id="ef63c9de46b2633531f80d09b249c8177fb13159" translate="yes" xml:space="preserve">
          <source>Header field name:  SLUG

   Applicable protocol:  http [&lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;RFC2616&lt;/a&gt;]

   Status:  standard.

   Author/Change controller:  IETF (iesg@ietf.org) Internet Engineering
      Task Force

   Specification document(s):  &lt;a href=&quot;https://tools.ietf.org/html/rfc5023&quot;&gt;RFC 5023&lt;/a&gt;.

   Related information:  None.</source>
          <target state="translated">Имя поля заголовка: SLUG Применимый протокол: http [ &lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;RFC2616&lt;/a&gt; ] Статус: стандартный. Автор / ответственный за изменения: IETF (iesg@ietf.org) Документ (ы) Спецификации Инженерной группы Интернета: &lt;a href=&quot;https://tools.ietf.org/html/rfc5023&quot;&gt;RFC 5023&lt;/a&gt; . Связанная информация: Нет.</target>
        </trans-unit>
        <trans-unit id="16c88366423875ffcd832b0568164659af366f76" translate="yes" xml:space="preserve">
          <source>Header field name: DAV

   Applicable protocol: http

   Status: standard 

   Author/Change controller: IETF

   Specification document: this specification (&lt;a href=&quot;#section-10.1&quot;&gt;Section 10.1&lt;/a&gt;)</source>
          <target state="translated">Имя поля заголовка: DAV Применимый протокол: http Статус: стандартный Автор / Контроллер изменений: Документ спецификации IETF: эта спецификация ( &lt;a href=&quot;#section-10.1&quot;&gt;раздел 10.1&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="0a425ee275ccc8dc88e573145d9bc8f251db402b" translate="yes" xml:space="preserve">
          <source>Header field name: Depth

   Applicable protocol: http

   Status: standard

   Author/Change controller: IETF

   Specification document: this specification (&lt;a href=&quot;#section-10.2&quot;&gt;Section 10.2&lt;/a&gt;)</source>
          <target state="translated">Имя поля заголовка: Глубина Применимый протокол: http Статус: стандартный Автор / Контроллер изменений: Документ спецификации IETF: эта спецификация ( &lt;a href=&quot;#section-10.2&quot;&gt;раздел 10.2&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="0b05ddbc40717bf61ebce12546f2a61a4a13a71f" translate="yes" xml:space="preserve">
          <source>Header field name: Destination

   Applicable protocol: http

   Status: standard

   Author/Change controller: IETF

   Specification document: this specification (&lt;a href=&quot;#section-10.3&quot;&gt;Section 10.3&lt;/a&gt;)</source>
          <target state="translated">Имя поля заголовка: Назначение Применимый протокол: http Статус: стандартный Автор / Контроллер изменений: Документ спецификации IETF: эта спецификация ( &lt;a href=&quot;#section-10.3&quot;&gt;раздел 10.3&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="80f31a912be49327cab8cfb0f3ab988e1efad182" translate="yes" xml:space="preserve">
          <source>Header field name: If

   Applicable protocol: http

   Status: standard

   Author/Change controller: IETF

   Specification document: this specification (&lt;a href=&quot;#section-10.4&quot;&gt;Section 10.4&lt;/a&gt;)</source>
          <target state="translated">Имя поля заголовка: Если Применимый протокол: http Статус: стандартный Автор / Контроллер изменений: Документ спецификации IETF: эта спецификация ( &lt;a href=&quot;#section-10.4&quot;&gt;раздел 10.4&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="405cc2ed9285599fe7b4ed659f2f3efef397c235" translate="yes" xml:space="preserve">
          <source>Header field name: Lock-Token

   Applicable protocol: http

   Status: standard 

   Author/Change controller: IETF

   Specification document: this specification (&lt;a href=&quot;#section-10.5&quot;&gt;Section 10.5&lt;/a&gt;)</source>
          <target state="translated">Имя поля заголовка: Lock-Token Применимый протокол: http Статус: стандартный Автор / Контроллер изменений: Документ спецификации IETF: эта спецификация ( &lt;a href=&quot;#section-10.5&quot;&gt;раздел 10.5&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="0ef45169928c0bea57455212198061a9ab1aac96" translate="yes" xml:space="preserve">
          <source>Header field name: Overwrite

   Applicable protocol: http

   Status: standard

   Author/Change controller: IETF

   Specification document: this specification (&lt;a href=&quot;#section-10.6&quot;&gt;Section 10.6&lt;/a&gt;)</source>
          <target state="translated">Имя поля заголовка: Перезаписать Применимый протокол: http Статус: стандартный Автор / Контроллер изменений: Документ спецификации IETF: эта спецификация ( &lt;a href=&quot;#section-10.6&quot;&gt;раздел 10.6&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="ebc42438bb349fc70f9ce54ef8a83a2205114a92" translate="yes" xml:space="preserve">
          <source>Header field name: Timeout

   Applicable protocol: http

   Status: standard

   Author/Change controller: IETF

   Specification document: this specification (&lt;a href=&quot;#section-10.7&quot;&gt;Section 10.7&lt;/a&gt;)</source>
          <target state="translated">Имя поля заголовка: Тайм-аут Применимый протокол: http Статус: стандартный Автор / Контроллер изменений: Документ спецификации IETF: эта спецификация ( &lt;a href=&quot;#section-10.7&quot;&gt;раздел 10.7&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="4ab8eed7600b67916da46088b86ba4f2a325716b" translate="yes" xml:space="preserve">
          <source>Header fields are fully extensible: there is no limit on the
   introduction of new field names, each presumably defining new
   semantics, nor on the number of header fields used in a given
   message.  Existing fields are defined in each part of this
   specification and in many other specifications outside this document
   set.

   New header fields can be defined such that, when they are understood
   by a recipient, they might override or enhance the interpretation of
   previously defined header fields, define preconditions on request
   evaluation, or refine the meaning of responses.

   A proxy MUST forward unrecognized header fields unless the field-name
   is listed in the Connection header field (&lt;a href=&quot;#section-6.1&quot;&gt;Section 6.1&lt;/a&gt;) or the proxy
   is specifically configured to block, or otherwise transform, such
   fields.  Other recipients SHOULD ignore unrecognized header fields.
   These requirements allow HTTP's functionality to be enhanced without
   requiring prior update of deployed intermediaries.

   All defined header fields ought to be registered with IANA in the
   &quot;Message Headers&quot; registry, as described in &lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-8.3&quot;&gt;Section&amp;nbsp;8.3 of [RFC7231]&lt;/a&gt;.</source>
          <target state="translated">Поля заголовка полностью расширяемы: нет ограничений на введение новых имен полей, каждое из которых предположительно определяет новую семантику, или на количество полей заголовков, используемых в данном сообщении. Существующие поля определены в каждой части этой спецификации и во многих других спецификациях за пределами этого набора документов. Новые поля заголовка могут быть определены таким образом, что, когда они будут понятны получателю, они могут переопределить или улучшить интерпретацию ранее определенных полей заголовка, определить предварительные условия при оценке запроса или уточнить смысл ответов. Прокси-сервер ДОЛЖЕН пересылать нераспознанные поля заголовка, если имя поля не указано в поле заголовка соединения ( &lt;a href=&quot;#section-6.1&quot;&gt;раздел 6.1.&lt;/a&gt;) или прокси-сервер специально настроен для блокировки или иного преобразования таких полей. Другим получателям СЛЕДУЕТ игнорировать нераспознанные поля заголовка. Эти требования позволяют расширять функциональность HTTP без предварительного обновления развернутых посредников. Все определенные поля заголовков должны быть зарегистрированы IANA в реестре &amp;laquo;Заголовки сообщений&amp;raquo;, как описано в &lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-8.3&quot;&gt;разделе 8.3 [RFC7231]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a40e00de254d23c5e44ccdfe307162d5d4ecbef3" translate="yes" xml:space="preserve">
          <source>Header fields are key:value pairs that can be used to communicate
   data about the message, its payload, the target resource, or the
   connection (i.e., control data).  See &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2&quot;&gt;Section&amp;nbsp;3.2 of [RFC7230]&lt;/a&gt; for a
   general definition of header field syntax in HTTP messages.

   The requirements for header field names are defined in [&lt;a href=&quot;#ref-BCP90&quot;&gt;BCP90&lt;/a&gt;].

   Authors of specifications defining new fields are advised to keep the
   name as short as practical and not to prefix the name with &quot;X-&quot;
   unless the header field will never be used on the Internet.  (The
   &quot;X-&quot; prefix idiom has been extensively misused in practice; it was
   intended to only be used as a mechanism for avoiding name collisions
   inside proprietary software or intranet processing, since the prefix
   would ensure that private names never collide with a newly registered
   Internet name; see [&lt;a href=&quot;#ref-BCP178&quot;&gt;BCP178&lt;/a&gt;] for further information).

   New header field values typically have their syntax defined using
   ABNF ([&lt;a href=&quot;https://tools.ietf.org/html/rfc5234&quot;&gt;RFC5234&lt;/a&gt;]), using the extension defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-7&quot;&gt;Section&amp;nbsp;7 of
   [RFC7230]&lt;/a&gt; as necessary, and are usually constrained to the range of
   US-ASCII characters.  Header fields needing a greater range of
   characters can use an encoding such as the one defined in [&lt;a href=&quot;https://tools.ietf.org/html/rfc5987&quot;&gt;RFC5987&lt;/a&gt;].

   Leading and trailing whitespace in raw field values is removed upon
   field parsing (&lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.4&quot;&gt;Section&amp;nbsp;3.2.4 of [RFC7230]&lt;/a&gt;).  Field definitions where
   leading or trailing whitespace in values is significant will have to
   use a container syntax such as quoted-string (&lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.6&quot;&gt;Section&amp;nbsp;3.2.6 of
   [RFC7230]&lt;/a&gt;).

   Because commas (&quot;,&quot;) are used as a generic delimiter between
   field-values, they need to be treated with care if they are allowed
   in the field-value.  Typically, components that might contain a comma
   are protected with double-quotes using the quoted-string ABNF
   production.

   For example, a textual date and a URI (either of which might contain
   a comma) could be safely carried in field-values like these:

     Example-URI-Field: &quot;http://example.com/a.html,foo&quot;,
                        &quot;http://without-a-comma.example.com/&quot;
     Example-Date-Field: &quot;Sat, 04 May 1996&quot;, &quot;Wed, 14 Sep 2005&quot;

   Note that double-quote delimiters almost always are used with the
   quoted-string production; using a different syntax inside
   double-quotes will likely cause unnecessary confusion. 

   Many header fields use a format including (case-insensitively) named
   parameters (for instance, Content-Type, defined in &lt;a href=&quot;#section-3.1.1.5&quot;&gt;Section 3.1.1.5&lt;/a&gt;).
   Allowing both unquoted (token) and quoted (quoted-string) syntax for
   the parameter value enables recipients to use existing parser
   components.  When allowing both forms, the meaning of a parameter
   value ought to be independent of the syntax used for it (for an
   example, see the notes on parameter handling for media types in
   &lt;a href=&quot;#section-3.1.1.1&quot;&gt;Section 3.1.1.1&lt;/a&gt;).

   Authors of specifications defining new header fields are advised to
   consider documenting:

   o  Whether the field is a single value or whether it can be a list
      (delimited by commas; see &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2&quot;&gt;Section&amp;nbsp;3.2 of [RFC7230]&lt;/a&gt;).

      If it does not use the list syntax, document how to treat messages
      where the field occurs multiple times (a sensible default would be
      to ignore the field, but this might not always be the right
      choice).

      Note that intermediaries and software libraries might combine
      multiple header field instances into a single one, despite the
      field's definition not allowing the list syntax.  A robust format
      enables recipients to discover these situations (good example:
      &quot;Content-Type&quot;, as the comma can only appear inside quoted
      strings; bad example: &quot;Location&quot;, as a comma can occur inside a
      URI).

   o  Under what conditions the header field can be used; e.g., only in
      responses or requests, in all messages, only on responses to a
      particular request method, etc.

   o  Whether the field should be stored by origin servers that
      understand it upon a PUT request.

   o  Whether the field semantics are further refined by the context,
      such as by existing request methods or status codes.

   o  Whether it is appropriate to list the field-name in the Connection
      header field (i.e., if the header field is to be hop-by-hop; see
      &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-6.1&quot;&gt;Section&amp;nbsp;6.1 of [RFC7230]&lt;/a&gt;).

   o  Under what conditions intermediaries are allowed to insert,
      delete, or modify the field's value. 

   o  Whether it is appropriate to list the field-name in a Vary
      response header field (e.g., when the request header field is used
      by an origin server's content selection algorithm; see
      &lt;a href=&quot;#section-7.1.4&quot;&gt;Section 7.1.4&lt;/a&gt;).

   o  Whether the header field is useful or allowable in trailers (see
      &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-4.1&quot;&gt;Section&amp;nbsp;4.1 of [RFC7230]&lt;/a&gt;).

   o  Whether the header field ought to be preserved across redirects.

   o  Whether it introduces any additional security considerations, such
      as disclosure of privacy-related data.</source>
          <target state="translated">Поля заголовка - это пары ключ: значение, которые могут использоваться для передачи данных о сообщении, его полезной нагрузке, целевом ресурсе или соединении (т. Е. Управляющих данных). См. &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2&quot;&gt;Раздел 3.2 [RFC7230]&lt;/a&gt; для общего определения синтаксиса поля заголовка в сообщениях HTTP. Требования к именам полей заголовка определены в [ &lt;a href=&quot;#ref-BCP90&quot;&gt;BCP90&lt;/a&gt;]. Авторам спецификаций, определяющих новые поля, рекомендуется сохранять имя как можно более коротким и не ставить перед именем префикс &amp;laquo;X-&amp;raquo;, если только поле заголовка никогда не будет использоваться в Интернете. (Идиома префикса &amp;laquo;X-&amp;raquo; широко использовалась на практике; она была предназначена для использования только в качестве механизма для предотвращения конфликтов имен внутри проприетарного программного обеспечения или обработки в интрасети, поскольку префикс гарантировал, что частные имена никогда не будут конфликтовать с недавно зарегистрированными Интернет-имя; дополнительную информацию см. [ &lt;a href=&quot;#ref-BCP178&quot;&gt;BCP178&lt;/a&gt; ]). Синтаксис новых значений полей заголовка обычно определяется с помощью ABNF ([ &lt;a href=&quot;https://tools.ietf.org/html/rfc5234&quot;&gt;RFC5234&lt;/a&gt; ]) с использованием расширения, определенного в &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-7&quot;&gt;разделе 7 [RFC7230].&lt;/a&gt;по мере необходимости и обычно ограничиваются диапазоном символов US-ASCII. Поля заголовка, для которых требуется больший диапазон символов, могут использовать кодировку, такую ​​как определенная в [ &lt;a href=&quot;https://tools.ietf.org/html/rfc5987&quot;&gt;RFC5987&lt;/a&gt; ]. Начальные и конечные пробелы в необработанных значениях поля удаляются при синтаксическом анализе поля ( &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.4&quot;&gt;раздел 3.2.4 [RFC7230]&lt;/a&gt; ). В определениях полей, в которых &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.6&quot;&gt;важны начальные&lt;/a&gt; или конечные пробелы в значениях, необходимо использовать синтаксис контейнера, например строку в кавычках ( раздел 3.2.6 [RFC7230])). Поскольку запятые (&quot;,&quot;) используются в качестве общего разделителя между значениями поля, с ними нужно обращаться осторожно, если они разрешены в значении поля. Как правило, компоненты, которые могут содержать запятую, защищаются двойными кавычками с использованием строки в кавычках ABNF. Например, текстовая дата и URI (любой из которых может содержать запятую) могут безопасно переноситься в таких значениях полей: Example-URI-Field: &quot;http://example.com/a.html,foo&quot; , &quot;http://without-a-comma.example.com/&quot; Example-Date-Field: &quot;Sat, 04 May 1996&quot;, &quot;Wed, 14 Sep 2005&quot; Обратите внимание, что разделители двойных кавычек почти всегда используются с производство кавычек; использование другого синтаксиса в двойных кавычках может вызвать ненужную путаницу.Многие поля заголовка используют формат, включающий (без учета регистра) именованные параметры (например, Content-Type, определенный в&lt;a href=&quot;#section-3.1.1.5&quot;&gt;Раздел 3.1.1.5&lt;/a&gt; ). Разрешение синтаксиса в кавычках (токен) и в кавычках (строка в кавычках) для значения параметра позволяет получателям использовать существующие компоненты анализатора. Если разрешены обе формы, значение значения параметра не должно зависеть от синтаксиса, используемого для него (например, см. Примечания по обработке параметров для типов мультимедиа в &lt;a href=&quot;#section-3.1.1.1&quot;&gt;разделе 3.1.1.1&lt;/a&gt; ). Авторам спецификаций, определяющих новые поля заголовка, рекомендуется рассмотреть возможность документирования: o Является ли поле одним значением или может быть списком (разделенным запятыми; см. &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2&quot;&gt;Раздел 3.2 [RFC7230]&lt;/a&gt;). Если он не использует синтаксис списка, задокументируйте, как обрабатывать сообщения, в которых поле встречается несколько раз (разумным по умолчанию было бы игнорировать поле, но это не всегда может быть правильным выбором). Обратите внимание, что посредники и программные библиотеки могут объединять несколько экземпляров поля заголовка в один, несмотря на то, что определение поля не разрешает синтаксис списка. Надежный формат позволяет получателям обнаруживать такие ситуации (хороший пример: &amp;laquo;Content-Type&amp;raquo;, поскольку запятая может появляться только внутри строк в кавычках; плохой пример: &amp;laquo;Location&amp;raquo;, поскольку запятая может встречаться внутри URI). o При каких условиях можно использовать поле заголовка; например, только в ответах или запросах, во всех сообщениях, только в ответах на определенный метод запроса и т. д.o Должно ли поле храниться исходными серверами, которые понимают его при запросе PUT. o уточняется ли семантика поля в дальнейшем контекстом, например, существующими методами запроса или кодами состояния. o Уместно ли указывать имя поля в поле заголовка соединения (т. е., если поле заголовка должно быть поэтапным; см. &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-6.1&quot;&gt;Раздел 6.1 [RFC7230]&lt;/a&gt; ). o При каких условиях посредникам разрешено вставлять, удалять или изменять значение поля. o Уместно ли указывать имя поля в поле заголовка ответа Vary (например, когда поле заголовка запроса используется алгоритмом выбора содержимого исходного сервера; см. &lt;a href=&quot;#section-7.1.4&quot;&gt;раздел 7.1.4&lt;/a&gt; ). o Является ли поле заголовка полезным или допустимым в трейлерах (см. &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-4.1&quot;&gt;раздел 4.1 [RFC7230]&lt;/a&gt; ). o Следует ли сохранять поле заголовка при переадресации. o вводит ли он какие-либо дополнительные соображения безопасности, такие как раскрытие данных, связанных с конфиденциальностью.</target>
        </trans-unit>
        <trans-unit id="73ce89b0c8df0a7ed4d98060b2c7c611ac330135" translate="yes" xml:space="preserve">
          <source>Header fields that regulate the use of trailers: &lt;a href=&quot;te&quot;&gt;&lt;code&gt;TE&lt;/code&gt;&lt;/a&gt; (requests) and &lt;a href=&quot;trailer&quot;&gt;&lt;code&gt;Trailer&lt;/code&gt;&lt;/a&gt; (responses).</source>
          <target state="translated">Поля заголовка, регулирующие использование трейлеров: &lt;a href=&quot;te&quot;&gt; &lt;code&gt;TE&lt;/code&gt; &lt;/a&gt; (запросы) и &lt;a href=&quot;trailer&quot;&gt; &lt;code&gt;Trailer&lt;/code&gt; &lt;/a&gt; (ответы).</target>
        </trans-unit>
        <trans-unit id="e786c2ccea456dd4299b1abe9aaa7e4b2aa14b90" translate="yes" xml:space="preserve">
          <source>Header to indicate that the content served varies by &lt;code&gt;Save-Data&lt;/code&gt;: &lt;a href=&quot;vary&quot;&gt;&lt;code&gt;Vary&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf858dd7754f89623471d452d85365f43194c795" translate="yes" xml:space="preserve">
          <source>Header type</source>
          <target state="translated">Тип заголовка</target>
        </trans-unit>
        <trans-unit id="2e31dbd5f484d5c1a3e787a044871e878213d50e" translate="yes" xml:space="preserve">
          <source>Header with the result of the content negotiation: &lt;a href=&quot;content-encoding&quot;&gt;&lt;code&gt;Content-Encoding&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Заголовок с результатом согласования содержимого: &lt;a href=&quot;content-encoding&quot;&gt; &lt;code&gt;Content-Encoding&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6e46dedc85812b44c40eda61d963afafe6e17ec8" translate="yes" xml:space="preserve">
          <source>Header with the result of the content negotiation: &lt;a href=&quot;content-language&quot;&gt;&lt;code&gt;Content-Language&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Заголовок с результатом согласования содержимого: &lt;a href=&quot;content-language&quot;&gt; &lt;code&gt;Content-Language&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="04db11046ac45baaf2858c147c0d0da0d83dfe2b" translate="yes" xml:space="preserve">
          <source>Header with the result of the content negotiation: &lt;a href=&quot;content-type&quot;&gt;&lt;code&gt;Content-Type&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Заголовок с результатом согласования содержимого: &lt;a href=&quot;content-type&quot;&gt; &lt;code&gt;Content-Type&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="520de7443d00d6ff4dc3ababbbf6cfbe0b74f4ec" translate="yes" xml:space="preserve">
          <source>Headers</source>
          <target state="translated">Headers</target>
        </trans-unit>
        <trans-unit id="d43cdd47172ebbec83d46dc0929904cbc0e5ba83" translate="yes" xml:space="preserve">
          <source>Headers are often very similar from one message to the next one, yet still repeated across connections.</source>
          <target state="translated">Заголовки часто очень похожи от одного сообщения к другому,но все равно повторяются через соединения.</target>
        </trans-unit>
        <trans-unit id="b9f5a636b75216c81304804a9a45004630234515" translate="yes" xml:space="preserve">
          <source>Headers can also be grouped according to how &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Proxy_server&quot;&gt;proxies&lt;/a&gt; handle them:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="953e087d7da0e93f2114e33931a9fff08ea7dde9" translate="yes" xml:space="preserve">
          <source>Headers can also be grouped according to how proxies handle them:</source>
          <target state="translated">Заголовки также могут быть сгруппированы в соответствии с тем,как с ними работают прокси-серверы:</target>
        </trans-unit>
        <trans-unit id="7e731d99aaf73e73a84db12018da22acb10f8eaf" translate="yes" xml:space="preserve">
          <source>Headers can be grouped according to their contexts:</source>
          <target state="translated">Заголовки могут быть сгруппированы в соответствии с их контекстом:</target>
        </trans-unit>
        <trans-unit id="62484b23e54725c71a2263f18277c31549662db4" translate="yes" xml:space="preserve">
          <source>Headers, unlike bodies, are uncompressed.</source>
          <target state="translated">Заголовки,в отличие от тел,несжаты.</target>
        </trans-unit>
        <trans-unit id="75afc7047fc121a2847ce8f1120ed041aca66234" translate="yes" xml:space="preserve">
          <source>Help Your Users `Save-Data` - CSS Tricks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5da9db7ae87281e3e1ab3c768b9be45ae8134d50" translate="yes" xml:space="preserve">
          <source>Helpful tools and resources for understanding and debugging HTTP.</source>
          <target state="translated">Полезные инструменты и ресурсы для понимания и отладки HTTP.</target>
        </trans-unit>
        <trans-unit id="2ed70bbb1a3a5c498b113f52c1548cee8ea9cc2d" translate="yes" xml:space="preserve">
          <source>Here again, be sure to take the right token for the browser you are looking for, as there is no guarantee that others will contain a valid number.</source>
          <target state="translated">Здесь опять же,не забудьте взять правильный токен для браузера,который Вы ищете,так как нет никакой гарантии,что другие будут содержать действительный номер.</target>
        </trans-unit>
        <trans-unit id="d5227ab359118de929fda02e4ed8472790aeba2d" translate="yes" xml:space="preserve">
          <source>Here is a JavaScript regular expression that will detect all mobile devices, including devices with a device id in their UA string:</source>
          <target state="translated">Вот JavaScript регулярное выражение,которое будет обнаруживать все мобильные устройства,включая устройства с идентификатором устройства в строке UA:</target>
        </trans-unit>
        <trans-unit id="4e3866c880875ee1ff8235362e89c76b5139a9ee" translate="yes" xml:space="preserve">
          <source>Here is a list of MIME types, associated by type of documents, ordered by their common extensions.</source>
          <target state="translated">Вот список MIME-типов,связанных по типам документов,упорядоченных по их общим расширениям.</target>
        </trans-unit>
        <trans-unit id="d20b00cd2016c9a232dbd3f29c2f2897e9fcffac" translate="yes" xml:space="preserve">
          <source>Here is a list of common features controllable with HTTP.</source>
          <target state="translated">Вот список общих функций,управляемых с помощью HTTP.</target>
        </trans-unit>
        <trans-unit id="5c9905f596ccef64e1269e49689d1a73c07dd5b6" translate="yes" xml:space="preserve">
          <source>Here is a sample exchange between client and server:</source>
          <target state="translated">Вот пример обмена между клиентом и сервером:</target>
        </trans-unit>
        <trans-unit id="9501e397bcbf8b4862fe537468cb6a0753bdae2b" translate="yes" xml:space="preserve">
          <source>Here is an example in PHP of handling a &lt;a href=&quot;cors#Preflighted_requests&quot;&gt;preflighted request&lt;/a&gt;:</source>
          <target state="translated">Вот пример обработки предварительного &lt;a href=&quot;cors#Preflighted_requests&quot;&gt;запроса&lt;/a&gt; на PHP :</target>
        </trans-unit>
        <trans-unit id="75207f8e8ffefa8d462dd3fb2a1a65ea217d704b" translate="yes" xml:space="preserve">
          <source>Here is an example of the Slug header that uses percent-encoding to
   represent the Unicode character U+00E8 (LATIN SMALL LETTER E WITH
   GRAVE):

       POST /myblog/entries HTTP/1.1
       Host: example.org
       Content-Type: image/png
       Slug: The Beach at S%C3%A8te
       Authorization: Basic ZGFmZnk6c2VjZXJldA==
       Content-Length: nnn

       ...binary data

   See &lt;a href=&quot;#section-9.2.1&quot;&gt;Section 9.2.1&lt;/a&gt; for an example of the Slug header applied to the
   creation of an Entry Resource.</source>
          <target state="translated">Вот пример заголовка Slug, который использует процентное кодирование для представления символа Юникода U + 00E8 (СТРОЧНАЯ ЛАТИНСКАЯ БУКВА E С ТЯЖЕЛЫМ): POST / myblog / entries HTTP / 1.1 Host: example.org Content-Type: image / png Слаг: Пляж в S% C3% A8te Авторизация: Базовая ZGFmZnk6c2VjZXJldA == Content-Length: nnn ... двоичные данные См. В &lt;a href=&quot;#section-9.2.1&quot;&gt;Разделе 9.2.1&lt;/a&gt; пример заголовка Slug, применяемого для создания ресурса входа.</target>
        </trans-unit>
        <trans-unit id="2797fafb9211cc2c051dcda055704a3e4e30b8b0" translate="yes" xml:space="preserve">
          <source>Here is an example of this process with a shared cache proxy:</source>
          <target state="translated">Вот пример этого процесса с прокси-сервером общего кэша:</target>
        </trans-unit>
        <trans-unit id="540ee2aaf7182c6dfc449b18e5accb694e3b0894" translate="yes" xml:space="preserve">
          <source>Here is an example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef5dd834bb2835bdbfb70e682c19ccc9767516af" translate="yes" xml:space="preserve">
          <source>Here is some PHP that handles credentialed requests:</source>
          <target state="translated">Вот некоторые PHP,которые работают с авторизованными запросами:</target>
        </trans-unit>
        <trans-unit id="8ef8c73e17b07ff09f65fb9ccc55b532e81935c5" translate="yes" xml:space="preserve">
          <source>Here we look at the most common use cases for the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Upgrade&quot;&gt;&lt;code&gt;Upgrade&lt;/code&gt;&lt;/a&gt; header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a21888f07518ae7a0759573f20d4642440f36a52" translate="yes" xml:space="preserve">
          <source>Here we look at the most common use cases for the &lt;code&gt;Upgrade&lt;/code&gt; header.</source>
          <target state="translated">Здесь мы рассмотрим наиболее распространенные варианты использования заголовка &lt;code&gt;Upgrade&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9ab6627dc7da6cad243b3faca054a977b46dce0f" translate="yes" xml:space="preserve">
          <source>Here's an example of what an &lt;code&gt;Access-Control-Allow-Headers&lt;/code&gt; header might look like. It indicates that a custom header named &lt;code&gt;X-Custom-Header&lt;/code&gt; is supported by CORS requests to the server (in addition to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/CORS-safelisted_request_header&quot;&gt;CORS-safelisted request headers&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f377abe687f3f604805ed4c41cf044b1a5eecca7" translate="yes" xml:space="preserve">
          <source>Here's an example of what an &lt;code&gt;Access-Control-Allow-Headers&lt;/code&gt; header might look like. It indicates that in addition to the &quot;simple&quot; headers, a custom header named &lt;code&gt;X-Custom-Header&lt;/code&gt; is supported by CORS requests to the server.</source>
          <target state="translated">Вот пример того, как может выглядеть заголовок &lt;code&gt;Access-Control-Allow-Headers&lt;/code&gt; . Он указывает на то, что в дополнение к &amp;laquo;простым&amp;raquo; заголовкам, запросами CORS к серверу поддерживается настраиваемый заголовок с именем &lt;code&gt;X-Custom-Header&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="29ece426131fe65594c0f74862a88481dffe1b6d" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;&amp;lt;type&amp;gt;&lt;/code&gt; is the authentication scheme (&quot;Basic&quot; is the most common scheme and &lt;a href=&quot;authentication#Basic_authentication_scheme&quot;&gt;introduced below&lt;/a&gt;). The &lt;em&gt;realm&lt;/em&gt; is used to describe the protected area or to indicate the scope of protection. This could be a message like &quot;Access to the staging site&quot; or similar, so that the user knows to which space they are trying to get access to.</source>
          <target state="translated">Здесь &lt;code&gt;&amp;lt;type&amp;gt;&lt;/code&gt; - это схема аутентификации (&amp;laquo;Базовая&amp;raquo; - наиболее распространенная схема, &lt;a href=&quot;authentication#Basic_authentication_scheme&quot;&gt;представленная ниже&lt;/a&gt; ). &lt;em&gt;Область&lt;/em&gt; используется для описания охраняемого района или указать сферу защиты. Это может быть сообщение типа &amp;laquo;Доступ к промежуточному сайту&amp;raquo; или подобное, чтобы пользователь знал, к какому пространству он пытается получить доступ.</target>
        </trans-unit>
        <trans-unit id="eb29f0c2d2f88776ddd04a11566426842fc746ff" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;base64EncodedSettings&lt;/code&gt; is an HTTP/2 &lt;code&gt;&quot;SETTINGS&quot;&lt;/code&gt; frame's payload which has been base64url encoded and all trailing &lt;code&gt;&quot;=&quot;&lt;/code&gt; (equals) characters removed in order to safely include it in this textual header format.</source>
          <target state="translated">Здесь &lt;code&gt;base64EncodedSettings&lt;/code&gt; - это полезная нагрузка кадра &lt;code&gt;&quot;SETTINGS&quot;&lt;/code&gt; HTTP / 2 , который был закодирован base64url, и все завершающие символы &lt;code&gt;&quot;=&quot;&lt;/code&gt; (равно) удалены, чтобы безопасно включить его в этот текстовый формат заголовка.</target>
        </trans-unit>
        <trans-unit id="a17f358e1ad5338444563c68bbadc2878e955302" translate="yes" xml:space="preserve">
          <source>Here, &lt;em&gt;x.y&lt;/em&gt; is the version of Mac OS X (for instance, Mac OS X 10.6).</source>
          <target state="translated">Здесь &lt;em&gt;xy&lt;/em&gt; - это версия Mac OS X (например, Mac OS X 10.6).</target>
        </trans-unit>
        <trans-unit id="ef77ad6909e7752d9aa6373842d49849209611c6" translate="yes" xml:space="preserve">
          <source>Here, by default, content is only permitted from the document's origin, with the following exceptions:</source>
          <target state="translated">Здесь,по умолчанию,содержимое разрешается только из источника документа,за следующими исключениями:</target>
        </trans-unit>
        <trans-unit id="fa2977eeb67774d5a0dd09ff4ec5ec0a36ef8155" translate="yes" xml:space="preserve">
          <source>Here, we present three scenarios that illustrate how Cross-Origin Resource Sharing works. All of these examples use the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest&quot;&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;&lt;/a&gt; object, which can be used to make cross-site invocations in any supporting browser.</source>
          <target state="translated">Здесь мы представляем три сценария, которые иллюстрируют, как работает совместное использование ресурсов между источниками. Во всех этих примерах используется объект &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest&quot;&gt; &lt;code&gt;XMLHttpRequest&lt;/code&gt; &lt;/a&gt; , который можно использовать для межсайтовых вызовов в любом поддерживающем браузере.</target>
        </trans-unit>
        <trans-unit id="b282bf1d7028f07f3c3e1a14dbfcb71697111c5d" translate="yes" xml:space="preserve">
          <source>Heroku's proxy library Vegur</source>
          <target state="translated">прокси-библиотека Героку Вегур</target>
        </trans-unit>
        <trans-unit id="ddf9efd09112f93ec00fa54e8c4c84c765c17139" translate="yes" xml:space="preserve">
          <source>Heuristic Expiration</source>
          <target state="translated">эвристическое истечение срока годности</target>
        </trans-unit>
        <trans-unit id="f2bddb211b435d77bdcd54be12a624bcbd764aed" translate="yes" xml:space="preserve">
          <source>Heuristic freshness checking</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1724e0bfe29683a06f3fb0d140956360664db86b" translate="yes" xml:space="preserve">
          <source>Historic specification of HTTP State Management Mechanism, obsoleted by &lt;a href=&quot;https://tools.ietf.org/html/rfc6265&quot;&gt;RFC 6265&lt;/a&gt;</source>
          <target state="translated">Историческая спецификация механизма управления состоянием HTTP, устарела &lt;a href=&quot;https://tools.ietf.org/html/rfc6265&quot;&gt;RFC 6265&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="90ccd6497400b5576aeca1bd94af74aae1e0a250" translate="yes" xml:space="preserve">
          <source>History</source>
          <target state="translated">History</target>
        </trans-unit>
        <trans-unit id="d2fc15fa26334cc66ab95bf51b30e486fe93e127" translate="yes" xml:space="preserve">
          <source>History Lists (RFC 7234)</source>
          <target state="translated">Списки истории (RFC 7234)</target>
        </trans-unit>
        <trans-unit id="2b89425faff6de6dc314db782d45b8bad9965067" translate="yes" xml:space="preserve">
          <source>History and implementation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8224b406bb9fcf1d12ea7ebecf7258a153c52d79" translate="yes" xml:space="preserve">
          <source>Hop-by-hop compression</source>
          <target state="translated">Хоп-хоп компрессия</target>
        </trans-unit>
        <trans-unit id="77f5c2d41f116e38295977a86465e5e9e801702a" translate="yes" xml:space="preserve">
          <source>Hop-by-hop compression, though similar to end-to-end compression, differs by one fundamental element: the compression doesn't happen on the resource in the server, creating a specific representation that is then transmitted, but on the body of the message between any two nodes on the path between the client and the server. Connections between successive intermediate nodes may apply a &lt;em&gt;different&lt;/em&gt; compression.</source>
          <target state="translated">Поэтапное сжатие, хотя и похоже на сквозное сжатие, отличается одним фундаментальным элементом: сжатие происходит не на ресурсе на сервере, создавая конкретное представление, которое затем передается, а на теле файла. сообщение между любыми двумя узлами на пути между клиентом и сервером. Соединения между последовательными промежуточными узлами могут применять &lt;em&gt;различное&lt;/em&gt; сжатие.</target>
        </trans-unit>
        <trans-unit id="78458c6f2f912b6d6875b5a660931222e51353f1" translate="yes" xml:space="preserve">
          <source>Hop-by-hop headers</source>
          <target state="translated">Заголовки хоп-хопа</target>
        </trans-unit>
        <trans-unit id="3960ec4ca5fb5e5d8cdb2cc1c5121c003e426517" translate="yes" xml:space="preserve">
          <source>Host</source>
          <target state="translated">Host</target>
        </trans-unit>
        <trans-unit id="f3680c389a985b1c29ff7e674003c4ba66aee02b" translate="yes" xml:space="preserve">
          <source>Host (RFC 2616)</source>
          <target state="translated">Хост (RFC 2616)</target>
        </trans-unit>
        <trans-unit id="5406f06c65b376c58dac6bf71408ae1944750e32" translate="yes" xml:space="preserve">
          <source>Host names and ports of reverse proxies (load balancers, CDNs) may differ from the origin server handling the request, in that case the &lt;code&gt;X-Forwarded-Host&lt;/code&gt; header is useful to determine which Host was originally used.</source>
          <target state="translated">Имена хостов и порты обратных прокси-серверов (балансировщики нагрузки, CDN) могут отличаться от исходного сервера, обрабатывающего запрос, в этом случае заголовок &lt;code&gt;X-Forwarded-Host&lt;/code&gt; полезен для определения того, какой хост был первоначально использован.</target>
        </trans-unit>
        <trans-unit id="f4b4c2643126c467ddef65e6b67d5f8c8b5bdc1a" translate="yes" xml:space="preserve">
          <source>Host to which the cookie will be sent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34a6082579e4930c27da3887804287a2a53f1624" translate="yes" xml:space="preserve">
          <source>Host-specific file names</source>
          <target state="translated">Имена файлов,специфичных для конкретного хоста</target>
        </trans-unit>
        <trans-unit id="2ec76d41d987ae559f5e3a7f7fd514508f4dcf54" translate="yes" xml:space="preserve">
          <source>Hosted CSP reporting for HTTPS migrations</source>
          <target state="translated">Хостинговая отчетность CSP для миграции HTTPS</target>
        </trans-unit>
        <trans-unit id="1367a4331a65542cf39c8a9d5b8961997d49502b" translate="yes" xml:space="preserve">
          <source>Hostname based conditions</source>
          <target state="translated">Условия,основанные на имени хоста</target>
        </trans-unit>
        <trans-unit id="39e32117a3b52cca1d492b875f026756fb25597f" translate="yes" xml:space="preserve">
          <source>How Browsers Work</source>
          <target state="translated">Как работают браузеры</target>
        </trans-unit>
        <trans-unit id="4c91ae122f1612df59f2a23941f9e79f1d970ecc" translate="yes" xml:space="preserve">
          <source>How cookies work is defined by &lt;a href=&quot;https://tools.ietf.org/html/rfc6265&quot;&gt;RFC 6265&lt;/a&gt;. When serving an HTTP request, a server can send a &lt;code&gt;Set-Cookie&lt;/code&gt; HTTP header with the response. The client then returns the cookie's value with every request to the same server in the form of a &lt;code&gt;Cookie&lt;/code&gt; request header. The cookie can also be set to expire on a certain date, or restricted to a specific domain and path.</source>
          <target state="translated">Как работают файлы cookie, определено в &lt;a href=&quot;https://tools.ietf.org/html/rfc6265&quot;&gt;RFC 6265&lt;/a&gt; . При обслуживании HTTP-запроса сервер может отправить HTTP-заголовок &lt;code&gt;Set-Cookie&lt;/code&gt; с ответом. Затем клиент возвращает значение файла cookie с каждым запросом к тому же серверу в форме заголовка запроса &lt;code&gt;Cookie&lt;/code&gt; . Срок действия файла cookie также может быть установлен на определенную дату или ограничен определенным доменом и путем.</target>
        </trans-unit>
        <trans-unit id="326d6840506a3e0e685440ecd35aff457aa45373" translate="yes" xml:space="preserve">
          <source>How documents are cached can be controlled by HTTP. The server can instruct proxies and clients, about what to cache and for how long. The client can instruct intermediate cache proxies to ignore the stored document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="785a4091642b3107a87eb0510aa18c744ad3bd77" translate="yes" xml:space="preserve">
          <source>How documents are cached can be controlled by HTTP. The server can instruct proxies, and clients, what to cache and for how long. The client can instruct intermediate cache proxies to ignore the stored document.</source>
          <target state="translated">Как документы кэшируются,можно управлять с помощью HTTP.Сервер может инструктировать прокси-серверы и клиентов,что кэшировать и как долго.Клиент может инструктировать промежуточных прокси-серверов кэшировать,чтобы они игнорировали сохраненный документ.</target>
        </trans-unit>
        <trans-unit id="9a92fcc6dda054aa8ba041f16e995c47ecf3e087" translate="yes" xml:space="preserve">
          <source>How much detail to include is an interesting balance to strike; exposing the OS version is probably a bad idea, as mentioned in the earlier warning about overly-detailed values. However, exposed Apache versions helped browsers work around a bug those versions had with &lt;a href=&quot;content-encoding&quot;&gt;&lt;code&gt;Content-Encoding&lt;/code&gt;&lt;/a&gt; combined with &lt;a href=&quot;range&quot;&gt;&lt;code&gt;Range&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1a6840353bc46a78f9536e0c4ba600c96425f56" translate="yes" xml:space="preserve">
          <source>How the browser handles it</source>
          <target state="translated">Как браузер справляется с этим</target>
        </trans-unit>
        <trans-unit id="68bee7ceae58ef9dd68bebd7e8624e01362fe458" translate="yes" xml:space="preserve">
          <source>How to Fix 405 Method Not Allowed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2bbcaa9a058613fa1a50456a0aabfa3b3df0140" translate="yes" xml:space="preserve">
          <source>How to avoid the CORS preflight</source>
          <target state="translated">Как избежать предполета CORS</target>
        </trans-unit>
        <trans-unit id="778498eaac84dd627c8fe8e2869a7fc961933c44" translate="yes" xml:space="preserve">
          <source>How to fix &lt;em&gt;&amp;ldquo;Access-Control-Allow-Origin header must not be the wildcard&amp;rdquo;&lt;/em&gt;</source>
          <target state="translated">Как исправить &lt;em&gt;&amp;laquo;Заголовок Access-Control-Allow-Origin не должен быть подстановочным знаком&amp;raquo;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cc108c55cd0ff984c9ac45ce8cdb74f88f1a0654" translate="yes" xml:space="preserve">
          <source>How to fix CORS issue?</source>
          <target state="translated">Как исправить проблему CORS?</target>
        </trans-unit>
        <trans-unit id="c305fbaf8d1dd662dd884c22cf15416371345003" translate="yes" xml:space="preserve">
          <source>How to run Chrome browser without CORS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd427ecf132d3e2cc23ee42d32690dc605d28a0f" translate="yes" xml:space="preserve">
          <source>How to use a CORS proxy to get around &lt;em&gt;&amp;ldquo;No Access-Control-Allow-Origin header&amp;rdquo;&lt;/em&gt;</source>
          <target state="translated">Как использовать CORS-прокси для обхода &lt;em&gt;заголовка &amp;laquo;No Access-Control-Allow-Origin&amp;raquo;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7f79e53c0a139eb96378c7ba89f9dd8fbfb330c0" translate="yes" xml:space="preserve">
          <source>However, if the request is one that triggers a preflight due to the presence of the &lt;code&gt;Authorization&lt;/code&gt; header in the request, you won&amp;rsquo;t be able to work around the limitation using the steps above. And you won&amp;rsquo;t be able to work around it at all unless you have control over the server the request is being made to.</source>
          <target state="translated">Однако, если запрос запускает предполетную проверку из-за наличия в запросе заголовка &lt;code&gt;Authorization&lt;/code&gt; , вы не сможете обойти ограничение, используя описанные выше действия. И вы вообще не сможете обойти это, если у вас нет контроля над сервером, к которому отправляется запрос.</target>
        </trans-unit>
        <trans-unit id="aa3bacea776742f9f4ee0b04c2738bf1f2acd22e" translate="yes" xml:space="preserve">
          <source>However, scripts without integrity won't load anymore:</source>
          <target state="translated">Однако,скрипты без целостности больше не будут загружаться:</target>
        </trans-unit>
        <trans-unit id="4784e9a56ee26ccc58e9b47e0384d44d80f5b536" translate="yes" xml:space="preserve">
          <source>However, styles properties that are set directly on the element's &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style&quot;&gt;&lt;code&gt;style&lt;/code&gt;&lt;/a&gt; property will not be blocked, allowing users to safely manipulate styles via JavaScript:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6363c2d9cd37774dbf6ea52a71d3cc4b1d69edf1" translate="yes" xml:space="preserve">
          <source>However, styles properties that are set directly on the element's &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style&quot;&gt;&lt;code&gt;style&lt;/code&gt;&lt;/a&gt; property will not be blocked, allowing users to safely manipulate styles via Javascript:</source>
          <target state="translated">Однако свойства стилей, которые устанавливаются непосредственно в свойстве &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style&quot;&gt; &lt;code&gt;style&lt;/code&gt; &lt;/a&gt; элемента, не будут заблокированы, что позволяет пользователям безопасно управлять стилями через Javascript:</target>
        </trans-unit>
        <trans-unit id="712efc901d5948d1ddc85420dd7828b2c028e889" translate="yes" xml:space="preserve">
          <source>However, the above code is absolutely terrible and ill-conceived. What if Chrome removes this look behind feature? What if another browser implements look behind regexps? What if another browser uses &lt;em&gt;Chrome &lt;/em&gt;in their user agent string? The list goes on and on of things that could go terribly wrong. Thus, you should instead use feature detection like the following.</source>
          <target state="translated">Однако приведенный выше код абсолютно ужасен и непродуман. Что, если Chrome уберет эту функцию просмотра назад? Что, если другой браузер реализует просмотр регулярных выражений? Что, если другой браузер использует &lt;em&gt;Chrome&lt;/em&gt; в строке своего пользовательского агента? Список вещей, которые могут пойти не так, можно продолжать и продолжать. Таким образом, вы должны вместо этого использовать обнаружение функций, как показано ниже.</target>
        </trans-unit>
        <trans-unit id="3e339ee7e7a8e7da017468304e92dc515e180b71" translate="yes" xml:space="preserve">
          <source>However, this won't wildcard the &lt;a href=&quot;authorization&quot;&gt;&lt;code&gt;Authorization&lt;/code&gt;&lt;/a&gt; header, so if you need to expose that, you will need to list it explicitly:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="343d2ce245a31249b1c892a011a302e47c95d5d0" translate="yes" xml:space="preserve">
          <source>Http method &lt;a href=&quot;../methods/patch&quot;&gt;&lt;code&gt;PATCH&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acb4f9f51d2117c863cd7510741572ef29c65c1c" translate="yes" xml:space="preserve">
          <source>Http method &lt;a href=&quot;../methods/post&quot;&gt;&lt;code&gt;POST&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="872b5517c0f6559afa3677ba893bb97024b2ecc2" translate="yes" xml:space="preserve">
          <source>HttpOnly Optional</source>
          <target state="translated">HttpOnly опционально</target>
        </trans-unit>
        <trans-unit id="abd954b086bab88cb87ec4cda040e14953ecce8f" translate="yes" xml:space="preserve">
          <source>Hyper Text Coffee Pot Control Protocol (HTCPCP/1.0)</source>
          <target state="translated">Протокол управления гипертекстовым кофейником (HTCPCP/1.0)</target>
        </trans-unit>
        <trans-unit id="9cb22c4629a969af0720c560a54790780d479542" translate="yes" xml:space="preserve">
          <source>Hyper Text Coffee Pot Control Protocol (HTCPCP/1.0): Semantics and Content</source>
          <target state="translated">Протокол управления гипертекстовым кофейником (HTCPCP/1.0):Семантика и содержание</target>
        </trans-unit>
        <trans-unit id="126116b4ff4ad54a45b5f2a945491694cc39450d" translate="yes" xml:space="preserve">
          <source>Hyper text transfer protocol (Secure)</source>
          <target state="translated">Гиперпротокол передачи текста (Безопасный)</target>
        </trans-unit>
        <trans-unit id="a40ca5dd3664e7e5fbc9868906e198fe122b47b2" translate="yes" xml:space="preserve">
          <source>HyperText Markup Language (HTML)</source>
          <target state="translated">Язык гипертекстовой разметки (HTML)</target>
        </trans-unit>
        <trans-unit id="3aabdc98f3e181618def85f1876081249a0e4138" translate="yes" xml:space="preserve">
          <source>HyperText Transport Protocol Keep-Alive Header</source>
          <target state="translated">Транспортный протокол HyperText Сохраняйте живым заголовок</target>
        </trans-unit>
        <trans-unit id="caec6dcaeb81aa6d4af95da6ddc9afca1f3451f8" translate="yes" xml:space="preserve">
          <source>Hypertext Preprocessor (&lt;strong&gt;Personal Home Page&lt;/strong&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8bf740d859a72ca5b146b5d3c7c57e9e44dbdab" translate="yes" xml:space="preserve">
          <source>Hypertext Transfer Protocol (HTTP) Keep-Alive Header</source>
          <target state="translated">Гипертекстовый протокол передачи данных (HTTP)Сохраняйте спокойствие заголовка</target>
        </trans-unit>
        <trans-unit id="18c750541be3062c47621490bab7ee6a43ed0176" translate="yes" xml:space="preserve">
          <source>Hypertext Transfer Protocol (HTTP) clients often encounter
   interrupted data transfers as a result of canceled requests or
   dropped connections.  When a client has stored a partial
   representation, it is desirable to request the remainder of that
   representation in a subsequent request rather than transfer the
   entire representation.  Likewise, devices with limited local storage
   might benefit from being able to request only a subset of a larger
   representation, such as a single page of a very large document, or
   the dimensions of an embedded image.

   This document defines HTTP/1.1 range requests, partial responses, and
   the multipart/byteranges media type.  Range requests are an OPTIONAL
   feature of HTTP, designed so that recipients not implementing this
   feature (or not supporting it for the target resource) can respond as
   if it is a normal GET request without impacting interoperability.
   Partial responses are indicated by a distinct status code to not be
   mistaken for full responses by caches that might not implement the
   feature.

   Although the range request mechanism is designed to allow for
   extensible range types, this specification only defines requests for
   byte ranges.</source>
          <target state="translated">Клиенты гипертекстового протокола передачи данных (HTTP)часто сталкиваются с прерванной передачей данных в результате отмененных запросов или прерванных соединений.Когда клиент хранит частичное представление,желательно запросить остаток этого представления в последующем запросе,а не передавать все представление.Аналогичным образом,устройства с ограниченным локальным хранилищем могут выиграть от возможности запросить только подмножество более крупного представления,например,одну страницу очень большого документа,или размеры встроенного изображения.Этот документ определяет запросы диапазона HTTP/1.1,частичные ответы и тип носителя,состоящего из нескольких частей/байтералей.Запросы диапазона являются ФАКУЛЬТАТИВНОЙ функцией HTTP,разработанной таким образом,чтобы получатели,не реализующие эту функцию (или не поддерживающие ее для целевого ресурса),могли отвечать так,как если бы это был обычный GET-запрос,не влияя на функциональную совместимость.Частичные ответы обозначаются отдельным кодом состояния,чтобы не быть ошибочно принятым за полные ответы кэшами,которые могут не реализовывать эту функцию.Хотя механизм запроса диапазона спроектирован так,что позволяет использовать расширяемые типы диапазонов,эта спецификация определяет запросы только для байтовых диапазонов.</target>
        </trans-unit>
        <trans-unit id="eaebf91177666f1aaca9207bce21f241c2d6aa1c" translate="yes" xml:space="preserve">
          <source>Hypertext Transfer Protocol (HTTP/1.1): Authentication</source>
          <target state="translated">Протокол передачи гипертекста (HTTP/1.1):Аутентификация</target>
        </trans-unit>
        <trans-unit id="cf04e8c69e3ace21820abada8b4f0bf8440a50a6" translate="yes" xml:space="preserve">
          <source>Hypertext Transfer Protocol (HTTP/1.1): Caching</source>
          <target state="translated">Протокол передачи гипертекста (HTTP/1.1):Кэширование</target>
        </trans-unit>
        <trans-unit id="565eb02fb9f4c2b506e298c3e3bd17146e8b9b29" translate="yes" xml:space="preserve">
          <source>Hypertext Transfer Protocol (HTTP/1.1): Conditional Requests</source>
          <target state="translated">Протокол передачи гипертекста (HTTP/1.1):Условные запросы</target>
        </trans-unit>
        <trans-unit id="5ffac3f427873675e5fda46ed9caffb674838583" translate="yes" xml:space="preserve">
          <source>Hypertext Transfer Protocol (HTTP/1.1): Message Syntax and Routing</source>
          <target state="translated">Протокол передачи гипертекста (HTTP/1.1):синтаксис и маршрутизация сообщений</target>
        </trans-unit>
        <trans-unit id="067dc1d00ea2a2c2813ac9db731d6b354882d326" translate="yes" xml:space="preserve">
          <source>Hypertext Transfer Protocol (HTTP/1.1): Range Requests</source>
          <target state="translated">Протокол передачи гипертекста (HTTP/1.1):Запросы диапазона</target>
        </trans-unit>
        <trans-unit id="67726549543e0d1b42d751ebf670ca915f452bde" translate="yes" xml:space="preserve">
          <source>Hypertext Transfer Protocol (HTTP/1.1): Semantics and Content</source>
          <target state="translated">Протокол передачи гипертекста (HTTP/1.1):Семантика и содержание</target>
        </trans-unit>
        <trans-unit id="dadde9e82bc152463510002167edd8589458e39b" translate="yes" xml:space="preserve">
          <source>Hypertext Transfer Protocol (HTTP/1.1): Semantics and Context</source>
          <target state="translated">Протокол передачи гипертекста (HTTP/1.1):Семантика и контекст</target>
        </trans-unit>
        <trans-unit id="0464d55671763178e4bb9bf689fd75c3b2bf90ee" translate="yes" xml:space="preserve">
          <source>Hypertext Transfer Protocol -- HTTP/1.1</source>
          <target state="translated">Протокол передачи гипертекста --HTTP/1.1</target>
        </trans-unit>
        <trans-unit id="14001adc995acbe66bc7906c7030f074a23e21ec" translate="yes" xml:space="preserve">
          <source>Hypertext Transfer Protocol Version 2 (HTTP/2)</source>
          <target state="translated">Протокол передачи гипертекста версия 2 (HTTP/2)</target>
        </trans-unit>
        <trans-unit id="e0899b85bb34ecad597f88ef93fbf5180bd78fc6" translate="yes" xml:space="preserve">
          <source>IANA Considerations (RFC 7230)</source>
          <target state="translated">Соображения ИАНА (RFC 7230)</target>
        </trans-unit>
        <trans-unit id="fb05bb988d2b3042dacb51c3209a976e89fd65b7" translate="yes" xml:space="preserve">
          <source>IANA Considerations (RFC 7231)</source>
          <target state="translated">Соображения ИАНА (RFC 7231)</target>
        </trans-unit>
        <trans-unit id="faddb1a82ba7e7645aff6b957bbe064fd752dd69" translate="yes" xml:space="preserve">
          <source>IANA Considerations (RFC 7232)</source>
          <target state="translated">Соображения ИАНА (RFC 7232)</target>
        </trans-unit>
        <trans-unit id="4cbf2a520cf53d1cedf62323be093a069cfdcece" translate="yes" xml:space="preserve">
          <source>IANA Considerations (RFC 7233)</source>
          <target state="translated">Соображения ИАНА (RFC 7233)</target>
        </trans-unit>
        <trans-unit id="2ce28868e82be3265aeb20b44d3fbb587c2a23ce" translate="yes" xml:space="preserve">
          <source>IANA Considerations (RFC 7234)</source>
          <target state="translated">Соображения ИАНА (RFC 7234)</target>
        </trans-unit>
        <trans-unit id="98a74c9cf29e82d02e581eb12c22dda292d5ee17" translate="yes" xml:space="preserve">
          <source>IANA Considerations (RFC 7235)</source>
          <target state="translated">Соображения ИАНА (RFC 7235)</target>
        </trans-unit>
        <trans-unit id="4bb8022eff5067ab10c4c96ad85499b49bef742d" translate="yes" xml:space="preserve">
          <source>IANA HTTP Range Unit Registry</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5904c4ee52524bdc80934ad4f9a7950c63e23ee8" translate="yes" xml:space="preserve">
          <source>IANA has added a reference to this specification in the
   'application/atom+xml' media type registration.</source>
          <target state="translated">IANA добавила ссылку на эту спецификацию при регистрации типа носителя 'application/atom+xml'.</target>
        </trans-unit>
        <trans-unit id="69ea11543f5de3dd2cb43742c8f141e34bd0847d" translate="yes" xml:space="preserve">
          <source>IANA is the official registry of MIME media types and maintains a &lt;a href=&quot;http://www.iana.org/assignments/media-types/media-types.xhtml&quot;&gt;list of all the official MIME types&lt;/a&gt;. This table lists some important MIME types for the Web:</source>
          <target state="translated">IANA - это официальный реестр типов носителей MIME, который ведет &lt;a href=&quot;http://www.iana.org/assignments/media-types/media-types.xhtml&quot;&gt;список всех официальных типов MIME&lt;/a&gt; . В этой таблице перечислены некоторые важные типы MIME для Интернета:</target>
        </trans-unit>
        <trans-unit id="89c07cdbd61e19ece57d06075ba79aecfe00c78b" translate="yes" xml:space="preserve">
          <source>IANA list of URI schemes</source>
          <target state="translated">список схем ИАНА</target>
        </trans-unit>
        <trans-unit id="78740b079f8a9346faaa07edbf050f52dc47fc13" translate="yes" xml:space="preserve">
          <source>IANA maintains the &quot;HTTP Content Coding Registry&quot; at
   &amp;lt;&lt;a href=&quot;http://www.iana.org/assignments/http-parameters&quot;&gt;http://www.iana.org/assignments/http-parameters&lt;/a&gt;&amp;gt;.

   The &quot;HTTP Content Coding Registry&quot; has been updated with the
   registrations below:

   +------------+--------------------------------------+---------------+
   | Name       | Description                          | Reference     |
   +------------+--------------------------------------+---------------+
   | compress   | UNIX &quot;compress&quot; data format [&lt;a href=&quot;#ref-Welch&quot;&gt;Welch&lt;/a&gt;]  | &lt;a href=&quot;#section-4.2.1&quot;&gt;Section 4.2.1&lt;/a&gt; |
   | deflate    | &quot;deflate&quot; compressed data            | &lt;a href=&quot;#section-4.2.2&quot;&gt;Section 4.2.2&lt;/a&gt; |
   |            | ([&lt;a href=&quot;https://tools.ietf.org/html/rfc1951&quot;&gt;RFC1951&lt;/a&gt;]) inside the &quot;zlib&quot; data   |               |
   |            | format ([&lt;a href=&quot;https://tools.ietf.org/html/rfc1950&quot;&gt;RFC1950&lt;/a&gt;])                   |               |
   | gzip       | GZIP file format [&lt;a href=&quot;https://tools.ietf.org/html/rfc1952&quot;&gt;RFC1952&lt;/a&gt;]           | &lt;a href=&quot;#section-4.2.3&quot;&gt;Section 4.2.3&lt;/a&gt; |
   | x-compress | Deprecated (alias for compress)      | &lt;a href=&quot;#section-4.2.1&quot;&gt;Section 4.2.1&lt;/a&gt; |
   | x-gzip     | Deprecated (alias for gzip)          | &lt;a href=&quot;#section-4.2.3&quot;&gt;Section 4.2.3&lt;/a&gt; |
   +------------+--------------------------------------+---------------+</source>
          <target state="translated">IANA ведет &amp;laquo;Реестр кодирования содержимого HTTP&amp;raquo; по адресу &amp;lt; &lt;a href=&quot;http://www.iana.org/assignments/http-parameters&quot;&gt;http://www.iana.org/assignments/http-parameters&lt;/a&gt; &amp;gt;. В &amp;laquo;Реестр кодирования содержимого HTTP&amp;raquo; добавлены следующие регистрации: + ------------ + --------------------- ----------------- + --------------- + | Имя | Описание | Справка | + ------------ + ------------------------------------ - + --------------- + | сжать | UNIX &quot;сжимает&quot; формат данных [ &lt;a href=&quot;#ref-Welch&quot;&gt;Велч&lt;/a&gt; ] | &lt;a href=&quot;#section-4.2.1&quot;&gt;Раздел 4.2.1&lt;/a&gt; | | сдуть | &quot;сдуть&quot; сжатые данные | &lt;a href=&quot;#section-4.2.2&quot;&gt;Раздел 4.2.2&lt;/a&gt; | | | ([ &lt;a href=&quot;https://tools.ietf.org/html/rfc1951&quot;&gt;RFC1951&lt;/a&gt; ]) внутри данных &quot;zlib&quot; | | | | формат ([ &lt;a href=&quot;https://tools.ietf.org/html/rfc1950&quot;&gt;RFC1950&lt;/a&gt;]) | | | gzip | Формат файла GZIP [ &lt;a href=&quot;https://tools.ietf.org/html/rfc1952&quot;&gt;RFC1952&lt;/a&gt; ] | &lt;a href=&quot;#section-4.2.3&quot;&gt;Раздел 4.2.3&lt;/a&gt; | | x-compress | Устарело (псевдоним для сжатия) | &lt;a href=&quot;#section-4.2.1&quot;&gt;Раздел 4.2.1&lt;/a&gt; | | x-gzip | Устарело (псевдоним для gzip) | &lt;a href=&quot;#section-4.2.3&quot;&gt;Раздел 4.2.3&lt;/a&gt; | + ------------ + ------------------------------------ - + --------------- +</target>
        </trans-unit>
        <trans-unit id="2f3aef98e61cefd59e70d51a0d54a7f7880c7e4d" translate="yes" xml:space="preserve">
          <source>IANA maintains the registry of Internet media types [&lt;a href=&quot;#ref-BCP13&quot;&gt;BCP13&lt;/a&gt;] at
   &amp;lt;&lt;a href=&quot;http://www.iana.org/assignments/media-types&quot;&gt;http://www.iana.org/assignments/media-types&lt;/a&gt;&amp;gt;.

   This document serves as the specification for the Internet media
   types &quot;message/http&quot; and &quot;application/http&quot;.  The following has been
   registered with IANA.</source>
          <target state="translated">IANA ведет реестр типов Интернет-носителей [ &lt;a href=&quot;#ref-BCP13&quot;&gt;BCP13&lt;/a&gt; ] по адресу &amp;lt; &lt;a href=&quot;http://www.iana.org/assignments/media-types&quot;&gt;http://www.iana.org/assignments/media-types&lt;/a&gt; &amp;gt;. Этот документ служит спецификацией для типов Интернет-носителей &amp;laquo;message / http&amp;raquo; и &amp;laquo;application / http&amp;raquo;. Следующее было зарегистрировано в IANA.</target>
        </trans-unit>
        <trans-unit id="57560e1f2062a0d9e41b59e9de0cd89dfc775402" translate="yes" xml:space="preserve">
          <source>IANA maintains the registry of Internet media types [&lt;a href=&quot;#ref-BCP13&quot;&gt;BCP13&lt;/a&gt;] at
   &amp;lt;&lt;a href=&quot;http://www.iana.org/assignments/media-types&quot;&gt;http://www.iana.org/assignments/media-types&lt;/a&gt;&amp;gt;.

   This document serves as the specification for the Internet media type
   &quot;multipart/byteranges&quot;.  The following has been registered with IANA.</source>
          <target state="translated">IANA ведет реестр типов Интернет-носителей [ &lt;a href=&quot;#ref-BCP13&quot;&gt;BCP13&lt;/a&gt; ] по адресу &amp;lt; &lt;a href=&quot;http://www.iana.org/assignments/media-types&quot;&gt;http://www.iana.org/assignments/media-types&lt;/a&gt; &amp;gt;. Этот документ служит спецификацией для типа Интернет-носителя &quot;multipart / byteranges&quot;. Следующее было зарегистрировано в IANA.</target>
        </trans-unit>
        <trans-unit id="2f25bf5a2ef40ce000fcbfb953c618138d7e6d92" translate="yes" xml:space="preserve">
          <source>IANA maintains the registry of URI Schemes [&lt;a href=&quot;#ref-BCP115&quot;&gt;BCP115&lt;/a&gt;] at
   &amp;lt;&lt;a href=&quot;http://www.iana.org/assignments/uri-schemes/&quot;&gt;http://www.iana.org/assignments/uri-schemes/&lt;/a&gt;&amp;gt;.

   This document defines the following URI schemes, so the &quot;Permanent
   URI Schemes&quot; registry has been updated accordingly.

   +------------+------------------------------------+---------------+
   | URI Scheme | Description                        | Reference     |
   +------------+------------------------------------+---------------+
   | http       | Hypertext Transfer Protocol        | &lt;a href=&quot;#section-2.7.1&quot;&gt;Section 2.7.1&lt;/a&gt; |
   | https      | Hypertext Transfer Protocol Secure | &lt;a href=&quot;#section-2.7.2&quot;&gt;Section 2.7.2&lt;/a&gt; |
   +------------+------------------------------------+---------------+</source>
          <target state="translated">IANA ведет реестр схем URI [ &lt;a href=&quot;#ref-BCP115&quot;&gt;BCP115&lt;/a&gt; ] по адресу &amp;lt; &lt;a href=&quot;http://www.iana.org/assignments/uri-schemes/&quot;&gt;http://www.iana.org/assignments/uri-schemes/&lt;/a&gt; &amp;gt;. В этом документе определены следующие схемы URI, поэтому реестр &amp;laquo;Постоянных схем URI&amp;raquo; был обновлен соответствующим образом. + ------------ + ------------------------------------ + --------------- + | Схема URI | Описание | Справка | + ------------ + ------------------------------------ + --------------- + | http | Протокол передачи гипертекста | &lt;a href=&quot;#section-2.7.1&quot;&gt;Раздел 2.7.1&lt;/a&gt; | | https | Безопасный протокол передачи гипертекста | &lt;a href=&quot;#section-2.7.2&quot;&gt;Раздел 2.7.2&lt;/a&gt; | + ------------ + ------------------------------------ + --------------- +</target>
        </trans-unit>
        <trans-unit id="70d5ce962c5520d83534599071460204e3f79a4c" translate="yes" xml:space="preserve">
          <source>IANA official registry of HTTP status codes</source>
          <target state="translated">IANA официальный реестр кодов статуса HTTP</target>
        </trans-unit>
        <trans-unit id="052ea052e8c19248acaf0e57ba16070d89e5f3f2" translate="yes" xml:space="preserve">
          <source>IANA registry</source>
          <target state="translated">реестр IANA</target>
        </trans-unit>
        <trans-unit id="3ec2a8d54523fcf678717117536e9db1ddb9d0ec" translate="yes" xml:space="preserve">
          <source>IANA registry of Authentication schemes</source>
          <target state="translated">Реестр схем аутентификации IANA</target>
        </trans-unit>
        <trans-unit id="433dbaf6332943984d6516e68b5f7fa26960c972" translate="yes" xml:space="preserve">
          <source>ICO</source>
          <target state="translated">ICO</target>
        </trans-unit>
        <trans-unit id="1c424db78d6168d4e4112d7ef44078d6e5cc90ef" translate="yes" xml:space="preserve">
          <source>IETF Draft</source>
          <target state="translated">проект IETF</target>
        </trans-unit>
        <trans-unit id="8017c92650b8189e940d94d4098c59d4b86b1c4b" translate="yes" xml:space="preserve">
          <source>IETF RFC</source>
          <target state="translated">КСФМ IETF</target>
        </trans-unit>
        <trans-unit id="8571cc2c4258545210a5b00473280039ad4b84d4" translate="yes" xml:space="preserve">
          <source>IIS</source>
          <target state="translated">IIS</target>
        </trans-unit>
        <trans-unit id="863b6ddbf8a4aa095ca888b978a73ba1efc7811f" translate="yes" xml:space="preserve">
          <source>Icon format</source>
          <target state="translated">формат иконки</target>
        </trans-unit>
        <trans-unit id="ca9f65841299353702f59413c67b4d41e934a6e4" translate="yes" xml:space="preserve">
          <source>Ideally, there is one location, and therefore one URL, for each resource. But there are reasons for alternative names for a resource:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dc4507a76928b989abe5a6100c9511b38bd00d7" translate="yes" xml:space="preserve">
          <source>Ideally, there is one location, and therefore one URL, for one resource. But there are reasons for wanting to have alternative names for a resource (several domains, like with and without the www prefix or shorter and easy to remember URLs, &amp;hellip;). In these cases, rather than duplicating the resource, it is useful to use a redirect to the one true (canonical) URL.</source>
          <target state="translated">В идеале для одного ресурса должно быть одно место и, следовательно, один URL. Но есть причины для желания иметь альтернативные имена для ресурса (несколько доменов, например, с префиксом www и без него или более короткие и легко запоминающиеся URL-адреса,&amp;hellip;). В этих случаях вместо дублирования ресурса полезно использовать перенаправление на один истинный (канонический) URL.</target>
        </trans-unit>
        <trans-unit id="f1df7d15a8112ad87203fcb0cb507f4b96b72bbd" translate="yes" xml:space="preserve">
          <source>Idempotent</source>
          <target state="translated">Idempotent</target>
        </trans-unit>
        <trans-unit id="b6a2413ad63489a62e13c1cef9ff703c77e3aa0f" translate="yes" xml:space="preserve">
          <source>Idempotent Methods (RFC 7231)</source>
          <target state="translated">Идемпотентные методы (RFC 7231)</target>
        </trans-unit>
        <trans-unit id="526430255f19421715307947f2ff84df60c93896" translate="yes" xml:space="preserve">
          <source>Identifies the original host requested that a client used to connect to your proxy or load balancer.</source>
          <target state="translated">Определяет оригинальный хост,запрошенный клиентом для подключения к прокси-серверу или балансировщику нагрузки.</target>
        </trans-unit>
        <trans-unit id="b108c524c313085aeda694b0f180ecea370efb15" translate="yes" xml:space="preserve">
          <source>Identifies the originating IP addresses of a client connecting to a web server through an HTTP proxy or a load balancer.</source>
          <target state="translated">Определяет исходные IP-адреса клиента,подключающегося к веб-серверу через HTTP-прокси или балансировщик нагрузки.</target>
        </trans-unit>
        <trans-unit id="4728d359ae99afe818be6f9dc7667972f09461f4" translate="yes" xml:space="preserve">
          <source>Identifies the protocol (HTTP or HTTPS) that a client used to connect to your proxy or load balancer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b059dd235df4bbca4880938a5c1bb58a2acfaacc" translate="yes" xml:space="preserve">
          <source>Identifying allowed request methods</source>
          <target state="translated">Определение разрешенных методов запроса</target>
        </trans-unit>
        <trans-unit id="a11a4c57a7f8dccbb14cb41b82dc14540c9e4cbe" translate="yes" xml:space="preserve">
          <source>Identifying resources on the Web</source>
          <target state="translated">Идентификация ресурсов в Интернете</target>
        </trans-unit>
        <trans-unit id="2ddba376a063bd16e86e27e7bafe3713c58a5850" translate="yes" xml:space="preserve">
          <source>Identifying the issue</source>
          <target state="translated">Выявление проблемы</target>
        </trans-unit>
        <trans-unit id="5411f86a7d04f9bc55dfc770d7c059832dab58c1" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;../status/303&quot;&gt;&lt;code&gt;303&lt;/code&gt;&lt;/a&gt; (See Also) responses always lead to the use of a &lt;a href=&quot;../methods/get&quot;&gt;&lt;code&gt;GET&lt;/code&gt;&lt;/a&gt; method, &lt;a href=&quot;../status/307&quot;&gt;&lt;code&gt;307&lt;/code&gt;&lt;/a&gt; (Temporary Redirect) and &lt;a href=&quot;../status/308&quot;&gt;&lt;code&gt;308&lt;/code&gt;&lt;/a&gt; (Permanent Redirect) don't change the method used in the original request;</source>
          <target state="translated">Если ответы &lt;a href=&quot;../status/303&quot;&gt; &lt;code&gt;303&lt;/code&gt; &lt;/a&gt; (см. Также) всегда приводят к использованию метода &lt;a href=&quot;../methods/get&quot;&gt; &lt;code&gt;GET&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../status/307&quot;&gt; &lt;code&gt;307&lt;/code&gt; &lt;/a&gt; (временное перенаправление) и &lt;a href=&quot;../status/308&quot;&gt; &lt;code&gt;308&lt;/code&gt; &lt;/a&gt; (постоянное перенаправление) не изменяют метод, использованный в исходном запросе;</target>
        </trans-unit>
        <trans-unit id="203f83a39c006e96b0372879695a48c384f5a98d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;Viewport-Width&lt;/code&gt; occurs in a message more than once, the last value overrides all previous occurrences.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d42bc610b058bcee9d44ddc50eaef50c5549ec14" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;Want-Digest&lt;/code&gt; does not include any digest algorithms that the server supports, the server may respond with:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeff268bfa6cc58c2072be3b70c8ada2ff1e8f56" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;display-capture&lt;/code&gt; is disabled in a document, the document will not be able to initiate screen capture via &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getDisplayMedia&quot;&gt;&lt;code&gt;getDisplayMedia()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7ade11e64845f3fc5c7bc101765fbb13c18d967" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;script-src-attr&lt;/code&gt; is absent, User Agent falls back to the &lt;a href=&quot;script-src&quot;&gt;&lt;code&gt;script-src&lt;/code&gt;&lt;/a&gt; directive, and if that is absent as well, to &lt;a href=&quot;default-src&quot;&gt;&lt;code&gt;default-src&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63609d6bc405969d35b2060eab7a8fb70825c6a2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;script-src-elem&lt;/code&gt; is absent, User Agent falls back to the &lt;a href=&quot;script-src&quot;&gt;&lt;code&gt;script-src&lt;/code&gt;&lt;/a&gt; directive, and if that is absent as well, to &lt;a href=&quot;default-src&quot;&gt;&lt;code&gt;default-src&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67e6f0a239dfb82509e36ca577925e74a83f28f9" translate="yes" xml:space="preserve">
          <source>If = &quot;If&quot; &quot;:&quot; ( 1*No-tag-list | 1*Tagged-list )

     No-tag-list = List
     Tagged-list = Resource-Tag 1*List

     List = &quot;(&quot; 1*Condition &quot;)&quot;
     Condition = [&quot;Not&quot;] (State-token | &quot;[&quot; entity-tag &quot;]&quot;)
     ; entity-tag: see &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-3.11&quot;&gt;Section&amp;nbsp;3.11 of [RFC2616]&lt;/a&gt;
     ; No LWS allowed between &quot;[&quot;, entity-tag and &quot;]&quot; 

     State-token = Coded-URL

     Resource-Tag = &quot;&amp;lt;&quot; Simple-ref &quot;&amp;gt;&quot;
     ; Simple-ref: see &lt;a href=&quot;#section-8.3&quot;&gt;Section 8.3&lt;/a&gt;
     ; No LWS allowed in Resource-Tag

   The syntax distinguishes between untagged lists (&quot;No-tag-list&quot;) and
   tagged lists (&quot;Tagged-list&quot;).  Untagged lists apply to the resource
   identified by the Request-URI, while tagged lists apply to the
   resource identified by the preceding Resource-Tag.

   A Resource-Tag applies to all subsequent Lists, up to the next
   Resource-Tag.

   Note that the two list types cannot be mixed within an If header.
   This is not a functional restriction because the No-tag-list syntax
   is just a shorthand notation for a Tagged-list production with a
   Resource-Tag referring to the Request-URI.

   Each List consists of one or more Conditions.  Each Condition is
   defined in terms of an entity-tag or state-token, potentially negated
   by the prefix &quot;Not&quot;.

   Note that the If header syntax does not allow multiple instances of
   If headers in a single request.  However, the HTTP header syntax
   allows extending single header values across multiple lines, by
   inserting a line break followed by whitespace (see [&lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;RFC2616&lt;/a&gt;], &lt;a href=&quot;#section-4.2&quot;&gt;Section&lt;/a&gt;&lt;a href=&quot;#section-4.2&quot;&gt;4.2&lt;/a&gt;).</source>
          <target state="translated">If = &quot;If&quot; &quot;:&quot; (1 * Список-без тегов | 1 * Список-тегов) Список-без-тегов = Список-тегов = Тег-ресурса 1 * Список-список = &quot;(&quot; 1 * Условие &quot;) &quot;Condition = [&quot; Not &quot;] (State-token |&quot; [&quot;entity-tag&quot;] &quot;); entity-tag: см. &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-3.11&quot;&gt;раздел 3.11 [RFC2616]&lt;/a&gt; ; Не допускается использование LWS между &quot;[&quot;, entity-tag и &quot;]&quot; State-token = Coded-URL Resource-Tag = &quot;&amp;lt;&quot; Simple-ref &quot;&amp;gt;&quot;; Simple-ref: см. &lt;a href=&quot;#section-8.3&quot;&gt;Раздел 8.3&lt;/a&gt; ; В теге ресурса не допускается использование LWS. Синтаксис различает списки без тегов (&quot;Список без тегов&quot;) и списки с тегами (&quot;Список с тегами&quot;). Списки без тегов применяются к ресурсу, указанному в Request-URI, а списки с тегами применяются к ресурсу, указанному предыдущим тегом ресурса. Тег ресурса применяется ко всем последующим спискам до следующего тега ресурса. Обратите внимание, что два типа списков нельзя смешивать в заголовке If. Это не функциональное ограничение, потому что синтаксис No-tag-list - это просто сокращенная запись для создания Tagged-list с Resource-Tag, относящимся к Request-URI. Каждый список состоит из одного или нескольких условий. Каждое Условие определяется с помощью тега объекта или токена состояния, потенциально отменяемого префиксом &amp;laquo;Не&amp;raquo;.Обратите внимание, что синтаксис заголовка If не позволяет использовать несколько экземпляров заголовков If в одном запросе. Однако синтаксис заголовка HTTP позволяет расширить значения одного заголовка на несколько строк, вставив разрыв строки, за которым следует пробел (см. [&lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;RFC2616&lt;/a&gt; ], &lt;a href=&quot;#section-4.2&quot;&gt;раздел &lt;/a&gt;&lt;a href=&quot;#section-4.2&quot;&gt;4.2&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="00bde6a2609129ada06a88cb9a7d89333869670f" translate="yes" xml:space="preserve">
          <source>If HTTP pipelining is activated, several requests can be sent without waiting for the first response to be fully received. HTTP pipelining has proven difficult to implement in existing networks, where old pieces of software coexist with modern versions. HTTP pipelining has been superseded in HTTP/2 with more robust multiplexing requests within a frame.</source>
          <target state="translated">Если HTTP-трубопровод активирован,несколько запросов могут быть отправлены,не дожидаясь получения первого ответа в полном объеме.HTTP-трубопровод оказался труднореализуемым в существующих сетях,где старые части программного обеспечения сосуществуют с современными версиями.HTTP-трубопровод был заменен в HTTP/2 с более надежным мультиплексированием запросов в рамках.</target>
        </trans-unit>
        <trans-unit id="748bef436e961cb49a985af369e84e4c57fb5faa" translate="yes" xml:space="preserve">
          <source>If a (proxy) server receives valid credentials that are inadequate to access a given resource, the server should respond with the &lt;a href=&quot;status/403&quot;&gt;&lt;code&gt;403&lt;/code&gt;&lt;/a&gt;&lt;code&gt;Forbidden&lt;/code&gt; status code. Unlike &lt;a href=&quot;status/401&quot;&gt;&lt;code&gt;401&lt;/code&gt;&lt;/a&gt;&lt;code&gt;Unauthorized&lt;/code&gt; or &lt;a href=&quot;status/407&quot;&gt;&lt;code&gt;407&lt;/code&gt;&lt;/a&gt;&lt;code&gt;Proxy Authentication Required&lt;/code&gt;, authentication is impossible for this user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2712ef523f505fe38f908ee1d8ecd4882dfa22c9" translate="yes" xml:space="preserve">
          <source>If a (proxy) server receives valid credentials that are not adequate to gain access for a given resource, the server should respond with the &lt;a href=&quot;status/403&quot;&gt;&lt;code&gt;403&lt;/code&gt;&lt;/a&gt;&lt;code&gt;Forbidden&lt;/code&gt; status code. Unlike &lt;a href=&quot;status/401&quot;&gt;&lt;code&gt;401&lt;/code&gt;&lt;/a&gt;&lt;code&gt;Unauthorized&lt;/code&gt; or &lt;a href=&quot;status/407&quot;&gt;&lt;code&gt;407&lt;/code&gt;&lt;/a&gt;&lt;code&gt;Proxy Authentication Required&lt;/code&gt;, authentication is impossible for this user.</source>
          <target state="translated">Если (прокси) сервер получает действительные учетные данные, которых недостаточно для получения доступа к данному ресурсу, сервер должен ответить кодом состояния &lt;a href=&quot;status/403&quot;&gt; &lt;code&gt;403&lt;/code&gt; &lt;/a&gt; &lt;code&gt;Forbidden&lt;/code&gt; . В отличие от &lt;a href=&quot;status/401&quot;&gt; &lt;code&gt;401&lt;/code&gt; &lt;/a&gt; &lt;code&gt;Unauthorized&lt;/code&gt; или &lt;a href=&quot;status/407&quot;&gt; &lt;code&gt;407&lt;/code&gt; &lt;/a&gt; &lt;code&gt;Proxy Authentication Required&lt;/code&gt; , аутентификация для этого пользователя невозможна.</target>
        </trans-unit>
        <trans-unit id="9c01487d51a7abfed59147d7589b11bd17b56929" translate="yes" xml:space="preserve">
          <source>If a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Sec-WebSocket-Key&quot;&gt;&lt;code&gt;Sec-WebSocket-Key&lt;/code&gt;&lt;/a&gt; header was provided, the value of this header is computed by taking the value of the key, concatenating the string &quot;258EAFA5-E914-47DA-95CA-C5AB0DC85B11&quot; to it, taking the &lt;a href=&quot;https://en.wikipedia.org/wiki/SHA-1&quot;&gt;SHA-1&lt;/a&gt; hash of that concatenated string, resulting in a 20-byte value. That value is then &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding&quot;&gt;base64&lt;/a&gt; encoded to obtain the value of this property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="326ac990ab0dffc2412d939867b01ccdcb920f4c" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;DELETE&lt;/code&gt; method is successfully applied, there are several response status codes possible:</source>
          <target state="translated">Если метод &lt;code&gt;DELETE&lt;/code&gt; успешно применен, возможны несколько кодов состояния ответа:</target>
        </trans-unit>
        <trans-unit id="e0abfc5dd0ca6cc561a0c1e9018bd30b2988a7b7" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;Sec-WebSocket-Key&lt;/code&gt; header was provided, the value of this header is computed by taking the value of the key, concatenating the string &quot;258EAFA5-E914-47DA-95CA-C5AB0DC85B11&quot; to it, taking the &lt;a href=&quot;https://en.wikipedia.org/wiki/SHA-1&quot;&gt;SHA-1&lt;/a&gt; hash of that concatenated string, resulting in a 20-byte value. That value is then &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding&quot;&gt;base64&lt;/a&gt; encoded to obtain the value of this property.</source>
          <target state="translated">Если был предоставлен заголовок &lt;code&gt;Sec-WebSocket-Key&lt;/code&gt; , значение этого заголовка вычисляется путем взятия значения ключа, присоединения к нему строки &amp;laquo;258EAFA5-E914-47DA-95CA-C5AB0DC85B11&amp;raquo;, взяв хэш &lt;a href=&quot;https://en.wikipedia.org/wiki/SHA-1&quot;&gt;SHA-1&lt;/a&gt; эта объединенная строка, в результате чего получается 20-байтовое значение. Затем это значение кодируется в кодировке &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding&quot;&gt;base64&lt;/a&gt; для получения значения этого свойства.</target>
        </trans-unit>
        <trans-unit id="34536e055c95da8db601f072a295ac2e4e5c6957" translate="yes" xml:space="preserve">
          <source>If a COPY request has an Overwrite header with a value of &quot;F&quot;, and a
   resource exists at the Destination URL, the server MUST fail the
   request.

   When a server executes a COPY request and overwrites a destination
   resource, the exact behavior MAY depend on many factors, including
   WebDAV extension capabilities (see particularly [&lt;a href=&quot;https://tools.ietf.org/html/rfc3253&quot;&gt;RFC3253&lt;/a&gt;]).  For 

   example, when an ordinary resource is overwritten, the server could
   delete the target resource before doing the copy, or could do an in-
   place overwrite to preserve live properties.

   When a collection is overwritten, the membership of the destination
   collection after the successful COPY request MUST be the same
   membership as the source collection immediately before the COPY.
   Thus, merging the membership of the source and destination
   collections together in the destination is not a compliant behavior.

   In general, if clients require the state of the destination URL to be
   wiped out prior to a COPY (e.g., to force live properties to be
   reset), then the client could send a DELETE to the destination before
   the COPY request to ensure this reset.</source>
          <target state="translated">Если запрос COPY имеет заголовок Overwrite со значением &amp;laquo;F&amp;raquo; и ресурс существует в URL-адресе назначения, сервер ДОЛЖЕН отклонить запрос. Когда сервер выполняет запрос COPY и перезаписывает целевой ресурс, точное поведение МОЖЕТ зависеть от многих факторов, включая возможности расширения WebDAV (см., В частности, [ &lt;a href=&quot;https://tools.ietf.org/html/rfc3253&quot;&gt;RFC3253&lt;/a&gt;]). Например, при перезаписи обычного ресурса сервер может удалить целевой ресурс перед копированием или выполнить перезапись на месте, чтобы сохранить текущие свойства. Когда коллекция перезаписывается, членство в целевой коллекции после успешного запроса COPY ДОЛЖНО быть таким же, как у исходной коллекции непосредственно перед COPY. Таким образом, объединение членства исходной и целевой коллекций в место назначения не является совместимым поведением. В общем, если клиенты требуют, чтобы состояние URL-адреса назначения было стерто до КОПИРОВАНИЯ (например, чтобы принудительно сбросить текущие свойства), то клиент может отправить УДАЛЕНИЕ в пункт назначения перед запросом КОПИРОВАТЬ, чтобы гарантировать этот сброс. ,</target>
        </trans-unit>
        <trans-unit id="0fb0c405e8ed86db97633eff664cd93d6b990ee4" translate="yes" xml:space="preserve">
          <source>If a cache receives a value greater than it can represent, or if any of its subsequent calculations overflows, the cache will consider the value to be either 2147483648 (2^31) or the greatest positive integer it can conveniently represent.</source>
          <target state="translated">Если кэш получит значение больше,чем может представлять,или если какое-либо из его последующих вычислений переполнится,то кэш будет считать значение либо 2147483648 (2^31),либо наибольшее положительное целое число,которое он может удобно представлять.</target>
        </trans-unit>
        <trans-unit id="f48cab758bf32db6fab20e2d919807414feba7e5" translate="yes" xml:space="preserve">
          <source>If a cache receives a value greater than it can represent, or if any of its subsequent calculations overflows, the cache will consider this value to be either 2,147,483,648 (2&lt;sup&gt;31&lt;/sup&gt;) or the greatest positive integer it can represent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45f89453dd62bad0eede5073e7bfa49271c65312" translate="yes" xml:space="preserve">
          <source>If a client has a partial copy of a representation and wishes to have
   an up-to-date copy of the entire representation, it could use the
   Range header field with a conditional GET (using either or both of
   If-Unmodified-Since and If-Match.)  However, if the precondition
   fails because the representation has been modified, the client would
   then have to make a second request to obtain the entire current
   representation.

   The &quot;If-Range&quot; header field allows a client to &quot;short-circuit&quot; the
   second request.  Informally, its meaning is as follows: if the
   representation is unchanged, send me the part(s) that I am requesting
   in Range; otherwise, send me the entire representation.

     If-Range = entity-tag / HTTP-date

   A client MUST NOT generate an If-Range header field in a request that
   does not contain a Range header field.  A server MUST ignore an
   If-Range header field received in a request that does not contain a
   Range header field.  An origin server MUST ignore an If-Range header
   field received in a request for a target resource that does not
   support Range requests.

   A client MUST NOT generate an If-Range header field containing an
   entity-tag that is marked as weak.  A client MUST NOT generate an
   If-Range header field containing an HTTP-date unless the client has
   no entity-tag for the corresponding representation and the date is a
   strong validator in the sense defined by &lt;a href=&quot;https://tools.ietf.org/html/rfc7232#section-2.2.2&quot;&gt;Section&amp;nbsp;2.2.2 of [RFC7232]&lt;/a&gt;.

   A server that evaluates an If-Range precondition MUST use the strong
   comparison function when comparing entity-tags (&lt;a href=&quot;https://tools.ietf.org/html/rfc7232#section-2.3.2&quot;&gt;Section&amp;nbsp;2.3.2 of
   [RFC7232]&lt;/a&gt;) and MUST evaluate the condition as false if an HTTP-date 

   validator is provided that is not a strong validator in the sense
   defined by &lt;a href=&quot;https://tools.ietf.org/html/rfc7232#section-2.2.2&quot;&gt;Section&amp;nbsp;2.2.2 of [RFC7232]&lt;/a&gt;.  A valid entity-tag can be
   distinguished from a valid HTTP-date by examining the first two
   characters for a DQUOTE.

   If the validator given in the If-Range header field matches the
   current validator for the selected representation of the target
   resource, then the server SHOULD process the Range header field as
   requested.  If the validator does not match, the server MUST ignore
   the Range header field.  Note that this comparison by exact match,
   including when the validator is an HTTP-date, differs from the
   &quot;earlier than or equal to&quot; comparison used when evaluating an
   If-Unmodified-Since conditional.</source>
          <target state="translated">Если у клиента есть частичная копия представления и он хочет иметь обновленную копию всего представления, он может использовать поле заголовка Range с условным GET (используя один или оба из If-Unmodified-Since и If -Match.) Однако, если предварительное условие не выполняется из-за изменения представления, клиент должен будет сделать второй запрос, чтобы получить все текущее представление. Поле заголовка &amp;laquo;If-Range&amp;raquo; позволяет клиенту &amp;laquo;замкнуть&amp;raquo; второй запрос. Неформально его значение таково: если представление не изменилось, пришлите мне запрошенные в Range части; в противном случае пришлите мне все представление.If-Range = entity-tag / HTTP-date. Клиент НЕ ДОЛЖЕН генерировать поле заголовка If-Range в запросе, не содержащем поля заголовка Range. Сервер ДОЛЖЕН игнорировать поле заголовка If-Range, полученное в запросе, не содержащем поля заголовка Range. Исходный сервер ДОЛЖЕН игнорировать поле заголовка If-Range, полученное в запросе целевого ресурса, который не поддерживает запросы Range. Клиент НЕ ДОЛЖЕН создавать поле заголовка If-Range, содержащее тег объекта, помеченный как слабый. Клиент НЕ ДОЛЖЕН генерировать поле заголовка If-Range, содержащее HTTP-дату, если только у клиента нет тега объекта для соответствующего представления и дата является сильным валидатором в смысле, определенномСервер ДОЛЖЕН игнорировать поле заголовка If-Range, полученное в запросе, не содержащем поля заголовка Range. Исходный сервер ДОЛЖЕН игнорировать поле заголовка If-Range, полученное в запросе целевого ресурса, который не поддерживает запросы Range. Клиент НЕ ДОЛЖЕН создавать поле заголовка If-Range, содержащее тег объекта, помеченный как слабый. Клиент НЕ ДОЛЖЕН генерировать поле заголовка If-Range, содержащее HTTP-дату, если только у клиента нет тега объекта для соответствующего представления и дата является сильным валидатором в смысле, определенномСервер ДОЛЖЕН игнорировать поле заголовка If-Range, полученное в запросе, не содержащем поля заголовка Range. Исходный сервер ДОЛЖЕН игнорировать поле заголовка If-Range, полученное в запросе целевого ресурса, который не поддерживает запросы Range. Клиент НЕ ДОЛЖЕН создавать поле заголовка If-Range, содержащее тег объекта, помеченный как слабый. Клиент НЕ ДОЛЖЕН генерировать поле заголовка If-Range, содержащее HTTP-дату, если только у клиента нет тега объекта для соответствующего представления и дата является сильным валидатором в смысле, определенномКлиент НЕ ДОЛЖЕН создавать поле заголовка If-Range, содержащее тег объекта, помеченный как слабый. Клиент НЕ ДОЛЖЕН генерировать поле заголовка If-Range, содержащее HTTP-дату, если только у клиента нет тега объекта для соответствующего представления и дата является сильным валидатором в смысле, определенномКлиент НЕ ДОЛЖЕН создавать поле заголовка If-Range, содержащее тег объекта, помеченный как слабый. Клиент НЕ ДОЛЖЕН генерировать поле заголовка If-Range, содержащее HTTP-дату, если только у клиента нет тега объекта для соответствующего представления и дата является сильным валидатором в смысле, определенном&lt;a href=&quot;https://tools.ietf.org/html/rfc7232#section-2.2.2&quot;&gt;Раздел 2.2.2 [RFC7232]&lt;/a&gt; . Сервер, который оценивает предварительное условие If-Range, ДОЛЖЕН использовать функцию &lt;a href=&quot;https://tools.ietf.org/html/rfc7232#section-2.3.2&quot;&gt;строгого&lt;/a&gt; сравнения при сравнении тегов объектов ( раздел 2.3.2 [RFC7232] ) и ДОЛЖЕН оценивать условие как ложное, если предоставлен валидатор даты HTTP, который не является строгим. валидатор в смысле, определенном в &lt;a href=&quot;https://tools.ietf.org/html/rfc7232#section-2.2.2&quot;&gt;разделе 2.2.2 [RFC7232]&lt;/a&gt;, Допустимый тег объекта можно отличить от действительной даты HTTP, проверив первые два символа DQUOTE. Если валидатор, указанный в поле заголовка If-Range, совпадает с текущим валидатором для выбранного представления целевого ресурса, то серверу СЛЕДУЕТ обработать поле заголовка Range по запросу. Если валидатор не соответствует, сервер ДОЛЖЕН игнорировать поле заголовка Range. Обратите внимание, что это сравнение по точному совпадению, в том числе когда валидатором является HTTP-дата, отличается от сравнения &amp;laquo;раньше или равно&amp;raquo;, используемого при оценке условного выражения If-Unmodified-Since.</target>
        </trans-unit>
        <trans-unit id="9d82e70ce9faffba2758cddebc66060093cca8ab" translate="yes" xml:space="preserve">
          <source>If a client has a partial copy of an entity in its cache, and wishes
   to have an up-to-date copy of the entire entity in its cache, it
   could use the Range request-header with a conditional GET (using
   either or both of If-Unmodified-Since and If-Match.) However, if the
   condition fails because the entity has been modified, the client
   would then have to make a second request to obtain the entire current
   entity-body.

   The If-Range header allows a client to &quot;short-circuit&quot; the second
   request. Informally, its meaning is `if the entity is unchanged, send
   me the part(s) that I am missing; otherwise, send me the entire new
   entity'.

        If-Range = &quot;If-Range&quot; &quot;:&quot; ( entity-tag | HTTP-date ) 

   If the client has no entity tag for an entity, but does have a Last-
   Modified date, it MAY use that date in an If-Range header. (The
   server can distinguish between a valid HTTP-date and any form of
   entity-tag by examining no more than two characters.) The If-Range
   header SHOULD only be used together with a Range header, and MUST be
   ignored if the request does not include a Range header, or if the
   server does not support the sub-range operation.

   If the entity tag given in the If-Range header matches the current
   entity tag for the entity, then the server SHOULD provide the
   specified sub-range of the entity using a 206 (Partial content)
   response. If the entity tag does not match, then the server SHOULD
   return the entire entity using a 200 (OK) response.</source>
          <target state="translated">Если клиент имеет частичную копию сущности в кэше и хочет иметь обновленную копию всей сущности в кэше,он может использовать заголовок запроса Range с условным GET (используя либо один,либо оба If-Unmodified-Since и If-Match).Однако,если условие не удаётся из-за того,что сущность была изменена,то клиенту придётся сделать второй запрос,чтобы получить всю текущую сущность-тело.Заголовок If-диапазона позволяет клиенту &quot;замыкать&quot; второй запрос.Информально,его смысл в том,что если сущность не изменилась,отправьте мне ту часть (части),которую я пропустил;в противном случае,отправьте мне всю новую сущность&quot;.If-диапазон=&quot;If-диапазон&quot; &quot;:&quot;(тег | HTTP-дата)Если у клиента нет тега сущности для сущности,но есть Last-Mодифицированная дата,он МОЖЕТ использовать эту дату в заголовке If-диапазона.(Сервер может отличить действительную HTTP-дату от любой формы тега сущности,рассмотрев не более двух символов).Заголовок If-диапазона ДОЛЖЕН использоваться только вместе с заголовком Range,и ДОЛЖЕН быть проигнорирован,если запрос не включает в себя заголовок Range,или если сервер не поддерживает операцию поддиапазона.Если тег сущности,указанный в заголовке If-диапазона,совпадает с текущим тегом сущности для данной сущности,то сервер SHOULD предоставляет указанный поддиапазон сущности,используя ответ 206 (Частичное содержимое).Если тег сущности не совпадает,то сервер SHOULD возвращает всю сущность,используя ответ 200 (OK).</target>
        </trans-unit>
        <trans-unit id="3088b6387af36bd48fbfec162964786d9f1bdf8a" translate="yes" xml:space="preserve">
          <source>If a cookie name has this prefix, it is accepted in a &lt;a href=&quot;headers/set-cookie&quot;&gt;&lt;code&gt;Set-Cookie&lt;/code&gt;&lt;/a&gt; header only if it is also marked with the &lt;code&gt;Secure&lt;/code&gt; attribute, was sent from a secure origin, does &lt;em&gt;not&lt;/em&gt; include a &lt;code&gt;Domain&lt;/code&gt; attribute, and has the &lt;code&gt;Path&lt;/code&gt; attribute set to &lt;code&gt;/&lt;/code&gt;. In this way, these cookies can be seen as &quot;domain-locked&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c034021e921f0e666de945c6149637ed216dc323" translate="yes" xml:space="preserve">
          <source>If a cookie name has this prefix, it is accepted in a &lt;a href=&quot;headers/set-cookie&quot;&gt;&lt;code&gt;Set-Cookie&lt;/code&gt;&lt;/a&gt; header only if it is marked with the &lt;code&gt;Secure&lt;/code&gt; attribute and was sent from a secure origin. This is weaker than the &lt;code&gt;__Host-&lt;/code&gt; prefix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b817618a3c57a329ff611f0cc5c3c6f52c5cf77" translate="yes" xml:space="preserve">
          <source>If a cross origin resource supports CORS, the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/crossorigin&quot;&gt;crossorigin&lt;/a&gt;&lt;/code&gt; attribute or the &lt;a href=&quot;cross-origin-resource-policy&quot;&gt;&lt;code&gt;Cross-Origin-Resource-Policy&lt;/code&gt;&lt;/a&gt; header must be used to load it without being blocked by COEP.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07dcaab0a8d92362a3236a9f15a9d5cd4082d7fa" translate="yes" xml:space="preserve">
          <source>If a cross-origin document with COOP is opened in a new window, the opening document will not have a reference to it, and the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/opener&quot;&gt;window.opener&lt;/a&gt;&lt;/code&gt; property of the new window will be &lt;code&gt;null&lt;/code&gt;. This allows you to have more control over references to a window than &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Link_types/noopener&quot;&gt;rel=noopener&lt;/a&gt;&lt;/code&gt;, which only affects outgoing navigations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6c875512b44481b0aec708d6ca539f3bb79d246" translate="yes" xml:space="preserve">
          <source>If a new cacheable (see sections &lt;a href=&quot;#section-14.9.2&quot;&gt;14.9.2&lt;/a&gt;, &lt;a href=&quot;#section-13.2.5&quot;&gt;13.2.5&lt;/a&gt;, &lt;a href=&quot;#section-13.2.6&quot;&gt;13.2.6&lt;/a&gt; and &lt;a href=&quot;#section-13.8&quot;&gt;13.8&lt;/a&gt;)
   response is received from a resource while any existing responses for
   the same resource are cached, the cache SHOULD use the new response
   to reply to the current request. It MAY insert it into cache storage
   and MAY, if it meets all other requirements, use it to respond to any
   future requests that would previously have caused the old response to
   be returned. If it inserts the new response into cache storage  the
   rules in &lt;a href=&quot;#section-13.5.3&quot;&gt;section 13.5.3&lt;/a&gt; apply.

      Note: a new response that has an older Date header value than
      existing cached responses is not cacheable.</source>
          <target state="translated">Если новый кэшируемый ответ (см. Разделы &lt;a href=&quot;#section-14.9.2&quot;&gt;14.9.2&lt;/a&gt; , &lt;a href=&quot;#section-13.2.5&quot;&gt;13.2.5&lt;/a&gt; , &lt;a href=&quot;#section-13.2.6&quot;&gt;13.2.6&lt;/a&gt; и &lt;a href=&quot;#section-13.8&quot;&gt;13.8&lt;/a&gt; ) получен от ресурса, в то время как любые существующие ответы для того же ресурса кэшируются, кеш ДОЛЖЕН использовать новый ответ для ответа на текущий запрос. Он МОЖЕТ вставить его в кеш-хранилище и МОЖЕТ, если он отвечает всем другим требованиям, использовать его для ответа на любые будущие запросы, которые ранее вызвали возврат старого ответа. Если он вставляет новый ответ в кэш-память, применяются правила из &lt;a href=&quot;#section-13.5.3&quot;&gt;раздела 13.5.3&lt;/a&gt; . Примечание: новый ответ, имеющий более старое значение заголовка Date, чем существующие кэшированные ответы, не кэшируется.</target>
        </trans-unit>
        <trans-unit id="e58c73fa3ef27580bf7799dda53dd96a70453ff2" translate="yes" xml:space="preserve">
          <source>If a request goes through multiple proxies, the IP addresses of each successive proxy is listed. This means, the right-most IP address is the IP address of the most recent proxy and the left-most IP address is the IP address of the originating client.</source>
          <target state="translated">Если запрос проходит через несколько прокси-серверов,то IP-адреса каждого последовательного прокси-сервера перечисляются.Это означает,что самый правый IP-адрес-это IP-адрес последнего прокси,а самый левый IP-адрес-это IP-адрес клиента-инициатора.</target>
        </trans-unit>
        <trans-unit id="e2c3c58894ac3aaacdbb37189725a1f26ce869ef" translate="yes" xml:space="preserve">
          <source>If a resource exists at the destination and the Overwrite header is
   &quot;T&quot;, then prior to performing the move, the server MUST perform a
   DELETE with &quot;Depth: infinity&quot; on the destination resource.  If the
   Overwrite header is set to &quot;F&quot;, then the operation will fail.</source>
          <target state="translated">Если ресурс существует в месте назначения,а заголовок &quot;Overwrite&quot; имеет значение &quot;T&quot;,то перед выполнением перемещения сервер ДОЛЖЕН выполнить DELETE с &quot;Depth:бесконечность&quot; на ресурсе назначения.Если заголовок &quot;Overwrite header&quot; имеет значение &quot;F&quot;,то операция будет неудачной.</target>
        </trans-unit>
        <trans-unit id="22db687e87d90b4a5b61ae1c9f192564fbed5581" translate="yes" xml:space="preserve">
          <source>If a same-site cookie has this attribute, the browser will only send cookies if the request originated from the website that set the cookie. If the request originated from a different URL than the URL of the current location, none of the cookies tagged with the &lt;code&gt;strict&lt;/code&gt; attribute will be included.</source>
          <target state="translated">Если у файла cookie того же сайта есть этот атрибут, браузер будет отправлять файлы cookie только в том случае, если запрос исходит от веб-сайта, который установил файл cookie. Если запрос исходит от URL-адреса, отличного от URL-адреса текущего местоположения, ни один из файлов cookie, помеченных атрибутом &lt;code&gt;strict&lt;/code&gt; , не будет включен.</target>
        </trans-unit>
        <trans-unit id="a78f222e9151b20e3fa58d2b5922efdfbb1c1a0f" translate="yes" xml:space="preserve">
          <source>If a server returns such an error status, the body of the message should contain the list of the available representations of the resources, allowing the user to choose among them.</source>
          <target state="translated">Если сервер возвращает такой статус ошибки,то тело сообщения должно содержать список доступных представлений ресурсов,позволяющих пользователю выбирать из них.</target>
        </trans-unit>
        <trans-unit id="acb751d12ffe14eea97f1844541379bb1e82d026" translate="yes" xml:space="preserve">
          <source>If a single server supports multiple organizations that do not trust
   one another, then it MUST check the values of Location and Content-
   Location headers in responses that are generated under control of
   said organizations to make sure that they do not attempt to
   invalidate resources over which they have no authority.</source>
          <target state="translated">Если один сервер поддерживает несколько организаций,которые не доверяют друг другу,то он ДОЛЖЕН проверять значения заголовков Location и Content-Location в ответах,которые генерируются под контролем указанных организаций,чтобы убедиться,что они не пытаются сделать недействительными ресурсы,на которые у них нет полномочий.</target>
        </trans-unit>
        <trans-unit id="0034277126e29616d67034416858786a6bf01601" translate="yes" xml:space="preserve">
          <source>If a user signs out of your website or service, you might want to remove locally stored data. You can achieve that by adding the &lt;code&gt;Clear-Site-Data&lt;/code&gt; header to the response of https://example.com/logout:</source>
          <target state="translated">Если пользователь выходит из вашего веб-сайта или службы, вы можете удалить локально сохраненные данные. Вы можете добиться этого, добавив заголовок &lt;code&gt;Clear-Site-Data&lt;/code&gt; в ответ https://example.com/logout:</target>
        </trans-unit>
        <trans-unit id="28708bd5ed063a05bc0c1ffae01007cff1ddad84" translate="yes" xml:space="preserve">
          <source>If a user signs out of your website or service, you might want to remove locally stored data. You can achieve that by adding the &lt;code&gt;Clear-Site-Data&lt;/code&gt; header when sending the page confirming that logging out from the site has been accomplished successfully (https://example.com/logout, for example):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c5c04bfd2a5924b2636ab2156504c08859b88e5" translate="yes" xml:space="preserve">
          <source>If a website accepts a connection through HTTP and redirects to HTTPS, visitors may initially communicate with the non-encrypted version of the site before being redirected, if, for example, the visitor types http://www.foo.com/ or even just foo.com. This creates an opportunity for a man-in-the-middle attack. The redirect could be exploited to direct visitors to a malicious site instead of the secure version of the original site.</source>
          <target state="translated">Если веб-сайт принимает соединение через HTTP и перенаправляет на HTTPS,посетители могут сначала связаться с незашифрованной версией сайта,прежде чем перенаправляться,если,например,посетитель набирает http://www.foo.com/или даже просто foo.com.Это создает возможность для атаки типа &quot;человек в середине&quot;.Редирект может быть использован для направления посетителей на вредоносный сайт вместо безопасной версии оригинального сайта.</target>
        </trans-unit>
        <trans-unit id="c5d743f58d38a06b0efb87624e4399a8e4fa3b88" translate="yes" xml:space="preserve">
          <source>If all proxies are down, and there was no DIRECT option specified, the browser will ask if proxies should be temporarily ignored, and direct connections attempted. After 20 minutes, the browser will ask if proxies should be retried, asking again after an additional 40 minutes. Queries will continue, always adding 20 minutes to the elapsed time between queries.</source>
          <target state="translated">Если все прокси не работают,и не указана опция DIRECT,браузер спросит,следует ли временно игнорировать прокси,а также делать попытки прямого подключения.Через 20 минут браузер спросит,следует ли перепробовать прокси,и спросит еще раз через 40 минут.Запросы будут продолжаться,всегда добавляя 20 минут к истекшему времени между запросами.</target>
        </trans-unit>
        <trans-unit id="24f0c3aae5a8cb6b90479558f98a655abee38832" translate="yes" xml:space="preserve">
          <source>If an HTTP/1.1 client sends a request which includes a request body,
   but which does not include an Expect request-header field with the
   &quot;100-continue&quot; expectation, and if the client is not directly
   connected to an HTTP/1.1 origin server, and if the client sees the
   connection close before receiving any status from the server, the
   client SHOULD retry the request.  If the client does retry this
   request, it MAY use the following &quot;binary exponential backoff&quot;
   algorithm to be assured of obtaining a reliable response:

      1. Initiate a new connection to the server

      2. Transmit the request-headers

      3. Initialize a variable R to the estimated round-trip time to the
         server (e.g., based on the time it took to establish the
         connection), or to a constant value of 5 seconds if the round-
         trip time is not available.

      4. Compute T = R * (2**N), where N is the number of previous
         retries of this request.

      5. Wait either for an error response from the server, or for T
         seconds (whichever comes first)

      6. If no error response is received, after T seconds transmit the
         body of the request.

      7. If client sees that the connection is closed prematurely,
         repeat from step 1 until the request is accepted, an error
         response is received, or the user becomes impatient and
         terminates the retry process. 

   If at any point an error status is received, the client

      - SHOULD NOT continue and

      - SHOULD close the connection if it has not completed sending the
        request message.</source>
          <target state="translated">Если клиент HTTP/1.1 посылает запрос,который включает в себя тело запроса,но не содержит поля Expect request-header с ожиданием &quot;100-continue&quot;,и если клиент не соединен напрямую с сервером-источником HTTP/1.1,и если клиент видит соединение закрытым до получения какого-либо статуса от сервера,то клиент ДОЛЖЕН повторить запрос.Если клиент все же повторит запрос,он МОЖЕТ использовать следующий алгоритм &quot;двоичной экспоненциальной обратной связи&quot;,чтобы быть уверенным в получении надежного ответа:1.Инициировать новое соединение с сервером 2.Передать заголовки запроса 3.Инициализировать переменную R на расчетное время обхода сервера (например,исходя из времени,затраченного на установление соединения),или на постоянное значение 5 секунд,если время обхода недоступно.4.Вычислить T=R*(2**N),где N-число предыдущих повторных попыток этого запроса.5.Дождаться либо ответа сервера на ошибку,либо T секунд (в зависимости от того,что наступит раньше)6.Если ответ об ошибке не получен,через T секунд передайте тело запроса.7.Если клиент видит,что соединение преждевременно закрыто,повторите с шага 1 до тех пор,пока запрос не будет принят,ответ об ошибке не будет получен,или пользователь станет нетерпеливым и прекратит процесс повторной попытки.Если в какой-то момент получен ошибочный статус,клиент-НЕ ДОЛЖЕН продолжать и-ПОКАЗАТЬ соединение,если он не завершил отправку сообщения с запросом.</target>
        </trans-unit>
        <trans-unit id="787c64d4a2d625599ff698430e64f8f08ddeb6a2" translate="yes" xml:space="preserve">
          <source>If an origin server does not explicitly specify freshness (e.g. using &lt;a href=&quot;headers/cache-control&quot;&gt;&lt;code&gt;Cache-Control&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;headers/expires&quot;&gt;&lt;code&gt;Expires&lt;/code&gt;&lt;/a&gt; header) then a heuristic approach may be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf50575579d857df6c5f0e97dcbebb456e6ad37f" translate="yes" xml:space="preserve">
          <source>If another principal locks a resource that a principal wishes to
   access, it is useful for the second principal to be able to find out
   who the first principal is.  For this purpose the DAV:lockdiscovery
   property is provided.  This property lists all outstanding locks,
   describes their type, and MAY even provide the lock tokens.

   Any DAV-compliant resource that supports the LOCK method MUST support
   the DAV:lockdiscovery property.</source>
          <target state="translated">Если другой директор блокирует ресурс,к которому хочет получить доступ директор,полезно,чтобы второй директор смог узнать,кто первый директор.Для этой цели предоставляется свойство DAV:lock-discovery.Это свойство перечисляет все незавершенные блокировки,описывает их тип,и MAY даже предоставляет маркеры блокировки.Любой DAV-совместимый ресурс,поддерживающий метод блокировки,ДОЛЖЕН поддерживать свойство DAV:lockdiscovery.</target>
        </trans-unit>
        <trans-unit id="4e1966a722bf8f31efed779517aa3c6a04a51ec9" translate="yes" xml:space="preserve">
          <source>If both &lt;strong&gt;wd1 &lt;/strong&gt;and &lt;strong&gt;wd1 &lt;/strong&gt;are defined, the condition is true if the current weekday is in between those two &lt;em&gt;ordered &lt;/em&gt;weekdays. Bounds are inclusive, &lt;em&gt;but the bounds are ordered&lt;/em&gt;. If the &quot;GMT&quot; parameter is specified, times are taken to be in GMT. Otherwise, the local timezone is used.</source>
          <target state="translated">Если определены и &lt;strong&gt;wd1,&lt;/strong&gt; и &lt;strong&gt;wd1&lt;/strong&gt; , условие истинно, если текущий день недели находится между этими двумя &lt;em&gt;упорядоченными&lt;/em&gt; днями недели. Границы инклюзивные, &lt;em&gt;но упорядоченные&lt;/em&gt; . Если указан параметр &amp;laquo;GMT&amp;raquo;, время считается в GMT. В противном случае используется местный часовой пояс.</target>
        </trans-unit>
        <trans-unit id="9452662d9180b8ba3efe3a780c450ae27e07209e" translate="yes" xml:space="preserve">
          <source>If both a &lt;a href=&quot;headers/content-security-policy-report-only&quot;&gt;&lt;code&gt;Content-Security-Policy-Report-Only&lt;/code&gt;&lt;/a&gt; header and a &lt;a href=&quot;headers/content-security-policy&quot;&gt;&lt;code&gt;Content-Security-Policy&lt;/code&gt;&lt;/a&gt; header are present in the same response, both policies are honored. The policy specified in &lt;code&gt;Content-Security-Policy&lt;/code&gt; headers is enforced while the &lt;code&gt;Content-Security-Policy-Report-Only&lt;/code&gt; policy generates reports but is not enforced.</source>
          <target state="translated">Если в одном ответе присутствуют как заголовок &lt;a href=&quot;headers/content-security-policy-report-only&quot;&gt; &lt;code&gt;Content-Security-Policy-Report-Only&lt;/code&gt; ,так и&lt;/a&gt; заголовок &lt;a href=&quot;headers/content-security-policy&quot;&gt; &lt;code&gt;Content-Security-Policy&lt;/code&gt; &lt;/a&gt; , обе политики соблюдаются. Политика, указанная в заголовках &lt;code&gt;Content-Security-Policy&lt;/code&gt; , применяется, в то время как политика &lt;code&gt;Content-Security-Policy-Report-Only&lt;/code&gt; генерирует отчеты, но не применяется.</target>
        </trans-unit>
        <trans-unit id="d126e6f1349def738aa84d3d7ade4189f1674e03" translate="yes" xml:space="preserve">
          <source>If both this directive (i.e. via the &lt;code&gt;allow&lt;/code&gt; attribute) and the &lt;code&gt;allowfullscreen&lt;/code&gt; attribute are present on an &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; element, this directive takes precedence. There was a bug whereby the &lt;code&gt;fullscreen&lt;/code&gt; directive didn't work unless the &lt;code&gt;allowfullscreen&lt;/code&gt; attribute was also present, but this has been fixed as of Firefox 80 (&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1608358&quot;&gt;bug 1608358&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7feb971c53a1e3363d82fc1ef6da1a87db0cb6b" translate="yes" xml:space="preserve">
          <source>If both this directive and the &lt;code&gt;allowfullscreen&lt;/code&gt; attribute are present on an &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; element, this directive takes precedence.</source>
          <target state="translated">Если и эта директива, и атрибут &lt;code&gt;allowfullscreen&lt;/code&gt; присутствуют в элементе &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; , эта директива имеет приоритет.</target>
        </trans-unit>
        <trans-unit id="62b0316637ce393c10dfd9b58aa37bf2f0a42cdc" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;Content-Language&lt;/code&gt; is specified, the default is that the content is intended for all language audiences. Multiple language tags are also possible, as well as applying the &lt;code&gt;Content-Language&lt;/code&gt; header to various media types and not only to textual documents.</source>
          <target state="translated">Если &lt;code&gt;Content-Language&lt;/code&gt; не указан, по умолчанию контент предназначен для всех языковых аудиторий. Также возможны несколько языковых тегов, а также применение заголовка &lt;code&gt;Content-Language&lt;/code&gt; к различным типам мультимедиа, а не только к текстовым документам.</target>
        </trans-unit>
        <trans-unit id="5f0faef3900e1d15f4d91c1fcfcd5a68d9578e75" translate="yes" xml:space="preserve">
          <source>If no URL scheme is specified for a &lt;code&gt;host-source&lt;/code&gt; and the iframe is loaded from an &lt;code&gt;https&lt;/code&gt; URL, the URL for the page loading the iframe must also be &lt;code&gt;https&lt;/code&gt;, per the W3C spec on &lt;a href=&quot;https://w3c.github.io/webappsec-csp/2/#match-source-expression&quot;&gt;matching source expressions&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2432969974e0bf99b152d397b2c719d44cd0439e" translate="yes" xml:space="preserve">
          <source>If no port is given, the default port for the service requested (e.g., &quot;80&quot; for an HTTP URL) is implied.</source>
          <target state="translated">Если порт не указан,подразумевается порт по умолчанию для запрашиваемой службы (например,&quot;80&quot; для HTTP URL).</target>
        </trans-unit>
        <trans-unit id="9619fd8159a262a6e7f8b156f3e9ea6322194094" translate="yes" xml:space="preserve">
          <source>If no port is included, the default port for the service requested (e.g., &lt;code&gt;443&lt;/code&gt; for an HTTPS URL, and &lt;code&gt;80&lt;/code&gt; for an HTTP URL) is implied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e478b06858c696e70a28213656753916abc92ba3" translate="yes" xml:space="preserve">
          <source>If omitted, defaults to the host of the current document URL, not including subdomains.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="219c745dfe181251ec5c580abc0c14da79c6b291" translate="yes" xml:space="preserve">
          <source>If only a single value is specified (from each category: day, month, year), the function returns a true value only on days that match that specification. If both values are specified, the result is true between those times, including bounds, &lt;em&gt;but the bounds are ordered&lt;/em&gt;.</source>
          <target state="translated">Если указано только одно значение (из каждой категории: день, месяц, год), функция возвращает истинное значение только в дни, соответствующие этой спецификации. Если указаны оба значения, результат будет истинным между этими временами, включая границы, &lt;em&gt;но границы упорядочены&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="ebc918364962297bbe2d03e861cdada5a4d5d17c" translate="yes" xml:space="preserve">
          <source>If only a single value is specified (from each category: hour, minute, second), the function returns a true value only at times that match that specification. If both values are specified, the result is true between those times, including bounds, &lt;em&gt;but the bounds are ordered&lt;/em&gt;.</source>
          <target state="translated">Если указано только одно значение (из каждой категории: час, минута, секунда), функция возвращает истинное значение только в моменты времени, соответствующие этой спецификации. Если указаны оба значения, результат будет истинным между этими временами, включая границы, &lt;em&gt;но границы упорядочены&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="7ad3b8639eddeee4168cd5b47edae6dcb2df2c3c" translate="yes" xml:space="preserve">
          <source>If only one parameter is present, the function returns a value of true on the weekday that the parameter represents. If the string &quot;GMT&quot; is specified as a second parameter, times are taken to be in GMT. Otherwise, they are assumed to be in the local timezone.</source>
          <target state="translated">Если присутствует только один параметр,функция возвращает значение true в день недели,который представляет параметр.Если в качестве второго параметра указана строка &quot;GMT&quot;,то время принимается равным GMT.В противном случае предполагается,что они находятся в локальном часовом поясе.</target>
        </trans-unit>
        <trans-unit id="b64b7edace3c1de8eea4e9f7cb502c7f66cbbfc3" translate="yes" xml:space="preserve">
          <source>If several ranges are sent back, the &lt;a href=&quot;../headers/content-type&quot;&gt;&lt;code&gt;Content-Type&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;multipart/byteranges&lt;/code&gt; and each fragment covers one range, with &lt;a href=&quot;../headers/content-range&quot;&gt;&lt;code&gt;Content-Range&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../headers/content-type&quot;&gt;&lt;code&gt;Content-Type&lt;/code&gt;&lt;/a&gt; describing it.</source>
          <target state="translated">Если несколько диапазонов отправляются обратно, &lt;a href=&quot;../headers/content-type&quot;&gt; &lt;code&gt;Content-Type&lt;/code&gt; &lt;/a&gt; устанавливается на &lt;code&gt;multipart/byteranges&lt;/code&gt; , и каждый фрагмент охватывает один диапазон, с &lt;a href=&quot;../headers/content-range&quot;&gt; &lt;code&gt;Content-Range&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;../headers/content-type&quot;&gt; &lt;code&gt;Content-Type&lt;/code&gt; ,&lt;/a&gt; описывающими его.</target>
        </trans-unit>
        <trans-unit id="78a2139f59af3c201e14f90fe9cef770569b0d29" translate="yes" xml:space="preserve">
          <source>If sites omit the &lt;code&gt;Accept-Ranges&lt;/code&gt; header, they likely don't support for partial requests. Some sites also explicitly send &quot;&lt;code&gt;none&lt;/code&gt;&quot; as a value, indicating no support. In some apps, download managers disable their pause buttons in that case.</source>
          <target state="translated">Если на сайтах &lt;code&gt;Accept-Ranges&lt;/code&gt; заголовок Accept-Ranges , скорее всего, они не поддерживают частичные запросы. Некоторые сайты также явно отправляют &amp;laquo; &lt;code&gt;none&lt;/code&gt; &amp;raquo; в качестве значения, что указывает на отсутствие поддержки. В некоторых приложениях менеджеры загрузок в этом случае отключают свои кнопки паузы.</target>
        </trans-unit>
        <trans-unit id="c8a2e2bc49a74014d19dc3e20faf6d47f4b2c5fb" translate="yes" xml:space="preserve">
          <source>If sites omit the &lt;code&gt;Accept-Ranges&lt;/code&gt; header, they likely don't support partial requests. Some sites also explicitly send &quot;&lt;code&gt;none&lt;/code&gt;&quot; as a value, indicating no support. In some apps, download managers disable their pause buttons in that case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="091a0218219abd0cdbbefc8a401d17bce706512c" translate="yes" xml:space="preserve">
          <source>If that's not possible, then another way is to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7832c9e8ca11a0dc4da645bd06786210e575896b" translate="yes" xml:space="preserve">
          <source>If the &quot;Basic&quot; authentication scheme is used, the credentials are constructed like this:</source>
          <target state="translated">Если используется &quot;Базовая&quot; схема аутентификации,то учетные данные строятся таким образом:</target>
        </trans-unit>
        <trans-unit id="f91174398d0cf4de63fc9e0993886a3f7ebd8264" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;headers/accept-ranges&quot;&gt;&lt;code&gt;Accept-Ranges&lt;/code&gt;&lt;/a&gt; is present in HTTP responses (and its value isn't &quot;&lt;code&gt;none&lt;/code&gt;&quot;), the server supports range requests. You can check this by issuing a &lt;a href=&quot;methods/head&quot;&gt;&lt;code&gt;HEAD&lt;/code&gt;&lt;/a&gt; request and cURL, for example.</source>
          <target state="translated">Если &lt;a href=&quot;headers/accept-ranges&quot;&gt; &lt;code&gt;Accept-Ranges&lt;/code&gt; &lt;/a&gt; присутствует в HTTP-ответах (и его значение не &amp;laquo; &lt;code&gt;none&lt;/code&gt; &amp;raquo;), сервер поддерживает запросы диапазона. Вы можете проверить это , например, &lt;a href=&quot;methods/head&quot;&gt; &lt;code&gt;HEAD&lt;/code&gt; &lt;/a&gt; запрос HEAD и cURL.</target>
        </trans-unit>
        <trans-unit id="1e2bd82bb2d016fc76410dd12a3b0342a93316e7" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;headers/accept-ranges&quot;&gt;&lt;code&gt;Accept-Ranges&lt;/code&gt;&lt;/a&gt; is present in HTTP responses (and its value isn't &quot;&lt;code&gt;none&lt;/code&gt;&quot;), the server supports range requests. You can check this by issuing a &lt;a href=&quot;methods/head&quot;&gt;&lt;code&gt;HEAD&lt;/code&gt;&lt;/a&gt; request with cURL, for example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0c9cc929b4bd0a174617d37fdb2ef2438aa90fc" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;user agent&lt;/a&gt; can't detect any value specified for this header&amp;mdash;even though the header is included in the response&amp;mdash;this error occurs.</source>
          <target state="translated">Если &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;пользовательский агент&lt;/a&gt; не может обнаружить какое-либо значение, указанное для этого заголовка, даже если заголовок включен в ответ, возникает эта ошибка.</target>
        </trans-unit>
        <trans-unit id="37fea5e541c03ceff1dd1b298e2c8a47aff43276" translate="yes" xml:space="preserve">
          <source>If the CORS configuration isn't setup correctly, the browser console will present an error like &lt;code&gt;&quot;Cross-Origin Request Blocked: The Same Origin Policy disallows reading the remote resource at $somesite&quot;&lt;/code&gt; indicating that the request was blocked due to violating the CORS security rules. This might not necessarily be a set-up mistake, though. It's possible that the request is in fact intentionally being disallowed by the user's web application and remote external service. However, If the endpoint is meant to be available, some debugging is needed to succeed.</source>
          <target state="translated">Если конфигурация CORS настроена неправильно, в консоли браузера будет отображаться сообщение об ошибке типа &lt;code&gt;&quot;Cross-Origin Request Blocked: The Same Origin Policy disallows reading the remote resource at $somesite&quot;&lt;/code&gt; что указывает на то, что запрос был заблокирован из-за нарушения безопасности CORS. правила. Однако это не обязательно может быть ошибкой настройки. Возможно, что запрос на самом деле намеренно запрещен веб-приложением пользователя и удаленной внешней службой. Однако, если конечная точка должна быть доступна, для успешного выполнения потребуется некоторая отладка.</target>
        </trans-unit>
        <trans-unit id="dc9c7b7249ed9c2cd26babda62bc7a605dd20286" translate="yes" xml:space="preserve">
          <source>If the CORS request indicated by the preflight request is authorized, the server will respond to the preflight request with a message that indicates the allowed origin, methods and headers. Below we see that &lt;a href=&quot;access-control-allow-headers&quot;&gt;&lt;code&gt;Access-Control-Allow-Headers&lt;/code&gt;&lt;/a&gt; includes the headers that were requested.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3f8c214b695d6473d07dc8643ad150f467962dc" translate="yes" xml:space="preserve">
          <source>If the TCP connection is closed or reset while streams remain in
   &quot;open&quot; or &quot;half-closed&quot; state, then the affected streams cannot be
   automatically retried (see &lt;a href=&quot;#section-8.1.4&quot;&gt;Section 8.1.4&lt;/a&gt; for details).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8ffab7457821dbf47b42281a4936c9c518bf014" translate="yes" xml:space="preserve">
          <source>If the attribute is set to lax, same-site cookies are withheld on cross-domain subrequests, such as calls to load images or frames, but will be sent when a user naviates to the URL from an external site, for example, by following a link.</source>
          <target state="translated">Если атрибут установлен в lax,то куки-файлы с одного и того же сайта удерживаются в междоменных подзапросах,таких как вызовы для загрузки изображений или фреймов,но будут отправлены,когда пользователь перейдет на URL с внешнего сайта,например,по ссылке.</target>
        </trans-unit>
        <trans-unit id="5d7a35532093cac38ce9488b4579d2ba232c9fa7" translate="yes" xml:space="preserve">
          <source>If the client has performed a conditional GET request and access is
   allowed, but the document has not been modified, the server SHOULD
   respond with this status code. The 304 response MUST NOT contain a
   message-body, and thus is always terminated by the first empty line
   after the header fields.

   The response MUST include the following header fields:

      - Date, unless its omission is required by &lt;a href=&quot;#section-14.18.1&quot;&gt;section 14.18.1&lt;/a&gt; 

   If a clockless origin server obeys these rules, and proxies and
   clients add their own Date to any response received without one (as
   already specified by &lt;a href=&quot;https://tools.ietf.org/html/rfc2068#section-14.19&quot;&gt;[RFC 2068], section&amp;nbsp;14.19&lt;/a&gt;), caches will operate
   correctly.

      - ETag and/or Content-Location, if the header would have been sent
        in a 200 response to the same request

      - Expires, Cache-Control, and/or Vary, if the field-value might
        differ from that sent in any previous response for the same
        variant

   If the conditional GET used a strong cache validator (see &lt;a href=&quot;#section-13.3.3&quot;&gt;section&lt;/a&gt;&lt;a href=&quot;#section-13.3.3&quot;&gt;13.3.3&lt;/a&gt;), the response SHOULD NOT include other entity-headers.
   Otherwise (i.e., the conditional GET used a weak validator), the
   response MUST NOT include other entity-headers; this prevents
   inconsistencies between cached entity-bodies and updated headers.

   If a 304 response indicates an entity not currently cached, then the
   cache MUST disregard the response and repeat the request without the
   conditional.

   If a cache uses a received 304 response to update a cache entry, the
   cache MUST update the entry to reflect any new field values given in
   the response.</source>
          <target state="translated">Если клиент выполнил условный запрос GET и доступ разрешен, но документ не был изменен, сервер ДОЛЖЕН ответить этим кодом состояния. Ответ 304 НЕ ДОЛЖЕН содержать тело сообщения и, следовательно, всегда заканчивается первой пустой строкой после полей заголовка. Ответ ДОЛЖЕН включать следующие поля заголовка: - Дата, если ее пропуск не требуется в соответствии с &lt;a href=&quot;#section-14.18.1&quot;&gt;разделом 14.18.1.&lt;/a&gt; Если исходный сервер без часов подчиняется этим правилам, а прокси-серверы и клиенты добавляют свою собственную дату к любому ответу, полученному без такового (как уже указано &lt;a href=&quot;https://tools.ietf.org/html/rfc2068#section-14.19&quot;&gt;[RFC 2068], раздел 14.19&lt;/a&gt;) кеши будут работать правильно. - ETag и / или Content-Location, если заголовок был бы отправлен в ответе 200 на тот же запрос - Expires, Cache-Control и / или Vary, если значение поля может отличаться от отправленного в любом предыдущем ответе для того же варианта Если условный GET использовал сильный валидатор кеша (см. &lt;a href=&quot;#section-13.3.3&quot;&gt;раздел &lt;/a&gt;&lt;a href=&quot;#section-13.3.3&quot;&gt;13.3.3&lt;/a&gt;), ответ НЕ ДОЛЖЕН включать другие заголовки объектов. В противном случае (т. Е. Условный GET использовал слабый валидатор) ответ НЕ ДОЛЖЕН включать другие заголовки объектов; это предотвращает несоответствия между кэшированными телами объектов и обновленными заголовками. Если ответ 304 указывает на объект, который в настоящее время не кэширован, то кэш ДОЛЖЕН игнорировать ответ и повторять запрос без условного обозначения. Если кэш использует полученный ответ 304 для обновления записи кэша, кэш ДОЛЖЕН обновить запись, чтобы отразить любые новые значения полей, указанные в ответе.</target>
        </trans-unit>
        <trans-unit id="1b16cb43ac59e1398b6bbb6871dcb2c0b0c8621f" translate="yes" xml:space="preserve">
          <source>If the client receiving the &lt;code&gt;&quot;426 Upgrade Required&quot;&lt;/code&gt; response is willing and able to upgrade to TLS, it should then start the same process covered above under &lt;a href=&quot;#Client-initiated_upgrade_to_TLS&quot;&gt;Client-initiated upgrade to TLS&lt;/a&gt;.</source>
          <target state="translated">Если клиент, получивший ответ &lt;code&gt;&quot;426 Upgrade Required&quot;&lt;/code&gt; желает и может выполнить обновление до TLS, он должен затем запустить тот же процесс, описанный выше в разделе &amp;laquo; &lt;a href=&quot;#Client-initiated_upgrade_to_TLS&quot;&gt;Инициированное клиентом обновление до TLS&amp;raquo;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="280f043319dde7fe251e1850244792cbea213b6e" translate="yes" xml:space="preserve">
          <source>If the data is textual, you can simply embed the text (using the appropriate entities or escapes based on the enclosing document's type). Otherwise, you can specify &lt;code&gt;base64&lt;/code&gt; to embed base64-encoded binary data.</source>
          <target state="translated">Если данные являются текстовыми, вы можете просто встроить текст (используя соответствующие сущности или экраны в зависимости от типа включающего документа). В противном случае вы можете указать &lt;code&gt;base64&lt;/code&gt; для внедрения двоичных данных в кодировке base64.</target>
        </trans-unit>
        <trans-unit id="32b1f46a0b7b90a86ae9e9f167e9ef7cf8038c9c" translate="yes" xml:space="preserve">
          <source>If the data is textual, you can simply embed the text (using the appropriate entities or escapes based on the enclosing document's type). Otherwise, you can specify &lt;code&gt;base64&lt;/code&gt; to embed base64-encoded binary data. You can find more info on MIME types &lt;a href=&quot;mime_types&quot;&gt;here&lt;/a&gt; and &lt;a href=&quot;mime_types/complete_list_of_mime_types&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8559d1d219606090271c33a621201ee02497f80" translate="yes" xml:space="preserve">
          <source>If the desired resource width is not known at the time of the request or the resource does not have a display width, the &lt;code&gt;Width&lt;/code&gt; header field can be omitted. If &lt;code&gt;Width&lt;/code&gt; occurs in a message more than once, the last value overrides all previous occurrences</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c18b5decb40c51cfed52abf66cbdc2d7b99ae4e9" translate="yes" xml:space="preserve">
          <source>If the device is large enough that it's not marked with &amp;ldquo;Mobi&amp;rdquo;, you should serve your desktop site (which, as a best practice, should support touch input anyway, as more desktop machines are appearing with touchscreens).</source>
          <target state="translated">Если устройство достаточно велико, чтобы на нем не было пометки &amp;laquo;Mobi&amp;raquo;, вам следует обслуживать свой настольный сайт (который, как правило, в любом случае должен поддерживать сенсорный ввод, так как все больше настольных компьютеров появляется с сенсорными экранами).</target>
        </trans-unit>
        <trans-unit id="0bbaf264d9f0d932c54c0e04e65ebace7f115760" translate="yes" xml:space="preserve">
          <source>If the hashes don't match, it means that the document has been edited in-between and a &lt;a href=&quot;../status/412&quot;&gt;&lt;code&gt;412&lt;/code&gt;&lt;/a&gt;&lt;code&gt; Precondition Failed&lt;/code&gt; error is thrown.</source>
          <target state="translated">Если хэши не совпадают, это означает, что документ был отредактирован между ними, и &lt;code&gt; Precondition Failed&lt;/code&gt; ошибка &lt;a href=&quot;../status/412&quot;&gt; &lt;code&gt;412&lt;/code&gt; &lt;/a&gt; Precondition Failed .</target>
        </trans-unit>
        <trans-unit id="277939955257bc43f4243fef87536e0654d15a25" translate="yes" xml:space="preserve">
          <source>If the hashes don't match, it means that the document has been edited in-between and a &lt;a href=&quot;../status/412&quot;&gt;&lt;code&gt;412&lt;/code&gt;&lt;/a&gt;&lt;code&gt;Precondition Failed&lt;/code&gt; error is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fd651b3de41c4c0939b139c2bcd1ec691c3efd5" translate="yes" xml:space="preserve">
          <source>If the hashes don't match, it means that the document has been edited in-between and a &lt;a href=&quot;412&quot;&gt;&lt;code&gt;412&lt;/code&gt;&lt;/a&gt;&lt;code&gt;Precondition Failed&lt;/code&gt; error is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bde6b2f02854c6b43c647e825f2d4a1429eb84b" translate="yes" xml:space="preserve">
          <source>If the request is being issued using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest&quot;&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;&lt;/a&gt;, make sure you're not setting &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/withCredentials&quot;&gt;&lt;code&gt;withCredentials&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Если запрос отправляется с использованием &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest&quot;&gt; &lt;code&gt;XMLHttpRequest&lt;/code&gt; &lt;/a&gt; , убедитесь, что вы не устанавливаете для параметра &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/withCredentials&quot;&gt; &lt;code&gt;withCredentials&lt;/code&gt; &lt;/a&gt; значение &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7f1a69e15b2780621067297dd234a0594b2b2ffc" translate="yes" xml:space="preserve">
          <source>If the requested method isn't supported, the server will respond with an error.</source>
          <target state="translated">Если запрашиваемый метод не поддерживается,сервер ответит ошибкой.</target>
        </trans-unit>
        <trans-unit id="bd63754e6e7fd0ed5e66293b22c5760094fd4fcf" translate="yes" xml:space="preserve">
          <source>If the resource at a given URL changes, a new &lt;code&gt;Etag&lt;/code&gt; value &lt;em&gt;must&lt;/em&gt; be generated. A comparison of them can determine whether two representations of a resource are the same. Etags are therefore similar to fingerprints, and might also be used for tracking purposes by some servers. They might also be set to persist indefinitely by a tracking server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e618a8054c6dfe27daf59e1f19b56a3219ec450e" translate="yes" xml:space="preserve">
          <source>If the resource at a given URL changes, a new &lt;code&gt;Etag&lt;/code&gt; value must be generated. Etags are therefore similar to fingerprints and might also be used for tracking purposes by some servers. A comparison of them allows to quickly determine whether two representations of a resource are the same, but they might also be set to persist indefinitely by a tracking server.</source>
          <target state="translated">Если ресурс по данному URL-адресу изменяется, необходимо сгенерировать новое значение &lt;code&gt;Etag&lt;/code&gt; . Таким образом, Etags похожи на отпечатки пальцев и также могут использоваться для отслеживания некоторыми серверами. Их сравнение позволяет быстро определить, являются ли два представления ресурса одинаковыми, но они также могут быть настроены на неопределенное время с помощью сервера отслеживания.</target>
        </trans-unit>
        <trans-unit id="6df0a809ea7c0e16c3b4c1d61decdfe31ac868f4" translate="yes" xml:space="preserve">
          <source>If the resource has changed, the server just sends back a &lt;a href=&quot;status/200&quot;&gt;&lt;code&gt;200&lt;/code&gt;&lt;/a&gt;&lt;code&gt; OK&lt;/code&gt; response, with the new version of the resource, like if the request wasn't conditional and the client uses this new resource (and caches it).</source>
          <target state="translated">Если ресурс изменился, сервер просто отправляет ответ &lt;a href=&quot;status/200&quot;&gt; &lt;code&gt;200&lt;/code&gt; &lt;/a&gt; &lt;code&gt; OK&lt;/code&gt; с новой версией ресурса, например, если запрос не был условным, и клиент использует этот новый ресурс (и кэширует его).</target>
        </trans-unit>
        <trans-unit id="28dabd823abd95eebd0c73b38250e390477657ad" translate="yes" xml:space="preserve">
          <source>If the resource has not changed, the server sends back a &lt;a href=&quot;status/304&quot;&gt;&lt;code&gt;304&lt;/code&gt;&lt;/a&gt;&lt;code&gt;Not Modified&lt;/code&gt; response. This makes the cache fresh again, and the client uses the cached resource. Although there is a response/request round-trip that consumes some resources, this is more efficient than to transmit the whole resource over the wire again.</source>
          <target state="translated">Если ресурс не изменился, сервер отправляет ответ &lt;a href=&quot;status/304&quot;&gt; &lt;code&gt;304&lt;/code&gt; &lt;/a&gt; &lt;code&gt;Not Modified&lt;/code&gt; . Это делает кеш снова свежим, и клиент использует кэшированный ресурс. Хотя существует круговая передача ответа / запроса, которая потребляет некоторые ресурсы, это более эффективно, чем повторная передача всего ресурса по сети.</target>
        </trans-unit>
        <trans-unit id="96d3b1fd891c66341051bdd2445935c9e27b47b5" translate="yes" xml:space="preserve">
          <source>If the resource in question is meant to be widely accessed (just like any HTTP resource accessed by GET), then sending back the &lt;a href=&quot;headers/access-control-allow-origin&quot;&gt;&lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt;&lt;/a&gt;&lt;code&gt;: *&lt;/code&gt; header will be sufficient, &lt;strong&gt;unless&lt;/strong&gt; the resource needs credentials such as &lt;a href=&quot;cookies&quot;&gt;Cookies&lt;/a&gt; and HTTP Authentication information.</source>
          <target state="translated">Если рассматриваемый ресурс предназначен для широкого доступа (как и любой HTTP-ресурс, к которому имеет доступ GET), тогда будет достаточно отправки заголовка &lt;a href=&quot;headers/access-control-allow-origin&quot;&gt; &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; &lt;/a&gt; &lt;code&gt;: *&lt;/code&gt; , &lt;strong&gt;если только&lt;/strong&gt; этому ресурсу не требуются учетные данные, такие как &lt;a href=&quot;cookies&quot;&gt;файлы cookie&lt;/a&gt; и HTTP. Информация для аутентификации.</target>
        </trans-unit>
        <trans-unit id="5afbe977f3fe9a82606049c55808c60ca15cfb67" translate="yes" xml:space="preserve">
          <source>If the resource should be kept restricted based on requester domain, &lt;strong&gt;OR&lt;/strong&gt; if the resource needs to be accessed with credentials (or sets credentials), then filtering by the request's &lt;a href=&quot;headers/origin&quot;&gt;&lt;code&gt;Origin&lt;/code&gt;&lt;/a&gt; header may be necessary, or at least echoing back the requester's &lt;code&gt;Origin&lt;/code&gt; (e.g. &lt;a href=&quot;headers/access-control-allow-origin&quot;&gt;&lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt;&lt;/a&gt;&lt;code&gt;: &lt;a href=&quot;http://arunranga.com&quot;&gt;http://arunranga.com&lt;/a&gt;&lt;/code&gt;). Additionally, the &lt;a href=&quot;headers/access-control-allow-credentials&quot;&gt;&lt;code&gt;Access-Control-Allow-Credentials&lt;/code&gt;&lt;/a&gt;&lt;code&gt;: true&lt;/code&gt; header will have to be sent. This is discussed in a &lt;a href=&quot;#Credentialed_Requests&quot;&gt;subsequent section&lt;/a&gt;.</source>
          <target state="translated">Если ресурс должен быть ограничен на основе домена реквестере, &lt;strong&gt;или&lt;/strong&gt; если потребности в ресурсах , которые будут доступны с учетными данными (или наборы учетных данных), то фильтрация по запросу в &lt;a href=&quot;headers/origin&quot;&gt; &lt;code&gt;Origin&lt;/code&gt; &lt;/a&gt; заголовке может быть необходимым, или по крайней мере , вторя назад реквестера &lt;code&gt;Origin&lt;/code&gt; (например , &lt;a href=&quot;headers/access-control-allow-origin&quot;&gt; &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; &lt;/a&gt; &lt;code&gt;: &lt;a href=&quot;http://arunranga.com&quot;&gt;http://arunranga.com&lt;/a&gt;&lt;/code&gt; ). Кроме того, необходимо будет отправить заголовок &lt;a href=&quot;headers/access-control-allow-credentials&quot;&gt; &lt;code&gt;Access-Control-Allow-Credentials&lt;/code&gt; &lt;/a&gt; &lt;code&gt;: true&lt;/code&gt; . Это обсуждается в &lt;a href=&quot;#Credentialed_Requests&quot;&gt;следующем разделе&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9c8e2ffc70a619ab233773bc1539c19cb10a2bc1" translate="yes" xml:space="preserve">
          <source>If the response to a &lt;code&gt;HEAD&lt;/code&gt; request shows that a cached URL response is now outdated, the cached copy is invalidated even if no &lt;code&gt;GET&lt;/code&gt; request was made.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85a622ab8c535a47b0b491a95d39cc072896a324" translate="yes" xml:space="preserve">
          <source>If the result of a &lt;code&gt;HEAD&lt;/code&gt; request shows that a cached resource after a &lt;a href=&quot;get&quot;&gt;&lt;code&gt;GET&lt;/code&gt;&lt;/a&gt; request is now outdated, the cache is invalidated, even if no &lt;code&gt;GET&lt;/code&gt; request has been made.</source>
          <target state="translated">Если результат запроса &lt;code&gt;HEAD&lt;/code&gt; показывает, что кэшированный ресурс после запроса &lt;a href=&quot;get&quot;&gt; &lt;code&gt;GET&lt;/code&gt; &lt;/a&gt; теперь устарел, кеш становится недействительным, даже если запрос &lt;code&gt;GET&lt;/code&gt; не был сделан.</target>
        </trans-unit>
        <trans-unit id="8883378b1d0c73e1288f1ade4a8139bb08b162fd" translate="yes" xml:space="preserve">
          <source>If the selection of the best representation for a response is made by
   an algorithm located at the server, it is called server-driven
   negotiation. Selection is based on the available representations of
   the response (the dimensions over which it can vary; e.g. language,
   content-coding, etc.) and the contents of particular header fields in
   the request message or on other information pertaining to the request
   (such as the network address of the client).

   Server-driven negotiation is advantageous when the algorithm for
   selecting from among the available representations is difficult to
   describe to the user agent, or when the server desires to send its
   &quot;best guess&quot; to the client along with the first response (hoping to
   avoid the round-trip delay of a subsequent request if the &quot;best
   guess&quot; is good enough for the user). In order to improve the server's
   guess, the user agent MAY include request header fields (Accept,
   Accept-Language, Accept-Encoding, etc.) which describe its
   preferences for such a response.

   Server-driven negotiation has disadvantages:

      1. It is impossible for the server to accurately determine what
         might be &quot;best&quot; for any given user, since that would require
         complete knowledge of both the capabilities of the user agent
         and the intended use for the response (e.g., does the user want
         to view it on screen or print it on paper?).

      2. Having the user agent describe its capabilities in every
         request can be both very inefficient (given that only a small
         percentage of responses have multiple representations) and a
         potential violation of the user's privacy.

      3. It complicates the implementation of an origin server and the
         algorithms for generating responses to a request. 

      4. It may limit a public cache's ability to use the same response
         for multiple user's requests.

   HTTP/1.1 includes the following request-header fields for enabling
   server-driven negotiation through description of user agent
   capabilities and user preferences: Accept (&lt;a href=&quot;#section-14.1&quot;&gt;section 14.1&lt;/a&gt;), Accept-
   Charset (&lt;a href=&quot;#section-14.2&quot;&gt;section 14.2&lt;/a&gt;), Accept-Encoding (&lt;a href=&quot;#section-14.3&quot;&gt;section 14.3&lt;/a&gt;), Accept-
   Language (&lt;a href=&quot;#section-14.4&quot;&gt;section 14.4&lt;/a&gt;), and User-Agent (&lt;a href=&quot;#section-14.43&quot;&gt;section 14.43&lt;/a&gt;). However, an
   origin server is not limited to these dimensions and MAY vary the
   response based on any aspect of the request, including information
   outside the request-header fields or within extension header fields
   not defined by this specification.

   The Vary  header field can be used to express the parameters the
   server uses to select a representation that is subject to server-
   driven negotiation. See &lt;a href=&quot;#section-13.6&quot;&gt;section 13.6&lt;/a&gt; for use of the Vary header field
   by caches and &lt;a href=&quot;#section-14.44&quot;&gt;section 14.44&lt;/a&gt; for use of the Vary header field by
   servers.</source>
          <target state="translated">Если выбор наилучшего представления для ответа выполняется алгоритмом, расположенным на сервере, это называется согласованием, управляемым сервером. Выбор основан на доступных представлениях ответа (размеры, по которым он может варьироваться; например, язык, кодирование содержимого и т. Д.) И содержимом определенных полей заголовка в сообщении запроса или другой информации, относящейся к запросу (например, как сетевой адрес клиента). Управляемое сервером согласование выгодно, когда алгоритм выбора из доступных представлений трудно описать пользовательскому агенту, или когда сервер желает отправить клиенту свое &amp;laquo;лучшее предположение&amp;raquo; вместе с первым ответом (надеясь избежать двусторонняя задержка последующего запроса, если &quot;наилучшая догадка&quot;достаточно хорош для пользователя). Чтобы улучшить предположение сервера, пользовательский агент МОЖЕТ включать поля заголовка запроса (Accept, Accept-Language, Accept-Encoding и т. Д.), Которые описывают его предпочтения для такого ответа. Управляемое сервером согласование имеет недостатки: 1. Сервер не может точно определить, что может быть &quot;лучшим&quot; для любого данного пользователя, так как это потребует полного знания как возможностей пользовательского агента, так и предполагаемого использования ответа. (например, хочет ли пользователь просмотреть его на экране или распечатать на бумаге?). 2.Если пользовательский агент описывает свои возможности в каждом запросе, это может быть как очень неэффективным (учитывая, что только небольшой процент ответов имеет несколько представлений), так и потенциальным нарушением конфиденциальности пользователя. 3. Это усложняет реализацию исходного сервера и алгоритмов генерации ответов на запрос. 4. Это может ограничить возможность общедоступного кэша использовать один и тот же ответ для запросов нескольких пользователей. HTTP / 1.1 включает следующие поля заголовка запроса для включения согласования, управляемого сервером, посредством описания возможностей пользовательского агента и пользовательских предпочтений: Accept (4. Это может ограничить возможность общедоступного кэша использовать один и тот же ответ для запросов нескольких пользователей. HTTP / 1.1 включает следующие поля заголовка запроса для включения согласования, управляемого сервером, посредством описания возможностей пользовательского агента и пользовательских предпочтений: Accept (4. Это может ограничить возможность общедоступного кэша использовать один и тот же ответ для запросов нескольких пользователей. HTTP / 1.1 включает следующие поля заголовка запроса для включения согласования, управляемого сервером, посредством описания возможностей пользовательского агента и пользовательских предпочтений: Accept (&lt;a href=&quot;#section-14.1&quot;&gt;раздел 14.1&lt;/a&gt; ), Accept-Charset ( &lt;a href=&quot;#section-14.2&quot;&gt;раздел 14.2&lt;/a&gt; ), Accept-Encoding ( &lt;a href=&quot;#section-14.3&quot;&gt;раздел 14.3&lt;/a&gt; ), Accept-Language ( &lt;a href=&quot;#section-14.4&quot;&gt;раздел 14.4&lt;/a&gt; ) и User-Agent ( &lt;a href=&quot;#section-14.43&quot;&gt;раздел 14.43&lt;/a&gt; ). Однако исходный сервер не ограничен этими размерами и МОЖЕТ изменять ответ в зависимости от любого аспекта запроса, включая информацию за пределами полей заголовка запроса или внутри полей заголовка расширения, не определенных в этой спецификации. Поле заголовка Vary может использоваться для выражения параметров, которые сервер использует для выбора представления, которое является предметом согласования, управляемого сервером. См. &lt;a href=&quot;#section-13.6&quot;&gt;Раздел 13.6&lt;/a&gt; для использования поля заголовка Vary кешами и &lt;a href=&quot;#section-14.44&quot;&gt;раздел 14.44.&lt;/a&gt; для использования серверами поля заголовка Vary.</target>
        </trans-unit>
        <trans-unit id="a97009ed5a171d3f2d00627248f02de9b1bd4edb" translate="yes" xml:space="preserve">
          <source>If the server &lt;em&gt;does not&lt;/em&gt; support TLS upgrade, or is unable to upgrade to TLS at the time, it responds with a standard HTTP/1.1 response, such as:</source>
          <target state="translated">Если сервер &lt;em&gt;не&lt;/em&gt; поддерживает обновление TLS или не может выполнить обновление до TLS в данный момент, он отвечает стандартным ответом HTTP / 1.1, например:</target>
        </trans-unit>
        <trans-unit id="2c4956e2baa89a364f68e36f2540d46e391032b0" translate="yes" xml:space="preserve">
          <source>If the server &lt;em&gt;does&lt;/em&gt; recognize the method, but intentionally does not support it, the appropriate response is &lt;a href=&quot;405&quot;&gt;&lt;code&gt;405 Method Not Allowed&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b4ec0bc4d37ddaf3aac7f70b029b83445ca56f2" translate="yes" xml:space="preserve">
          <source>If the server &lt;em&gt;does&lt;/em&gt; support TLS upgrade and wishes to permit the upgrade, it responds with the &lt;code&gt;&quot;101 Switching Protocols&quot;&lt;/code&gt; response code, like this:</source>
          <target state="translated">Если сервер &lt;em&gt;выполняет&lt;/em&gt; обновление поддержки TLS и желает , чтобы разрешить обновление, он отвечает с &lt;code&gt;&quot;101 Switching Protocols&quot;&lt;/code&gt; код ответа, как это:</target>
        </trans-unit>
        <trans-unit id="a57f9acb3600d5372bf47b96b972a2c0b7a106b1" translate="yes" xml:space="preserve">
          <source>If the server allows CORS requests to use the &lt;a href=&quot;../methods/delete&quot;&gt;&lt;code&gt;DELETE&lt;/code&gt;&lt;/a&gt; method, it responds with an &lt;a href=&quot;access-control-allow-methods&quot;&gt;&lt;code&gt;Access-Control-Allow-Methods&lt;/code&gt;&lt;/a&gt; response header, which lists &lt;code&gt;DELETE&lt;/code&gt; along with the other methods it supports:</source>
          <target state="translated">Если сервер разрешает запросам CORS использовать метод &lt;a href=&quot;../methods/delete&quot;&gt; &lt;code&gt;DELETE&lt;/code&gt; &lt;/a&gt; , он отвечает заголовком ответа &lt;a href=&quot;access-control-allow-methods&quot;&gt; &lt;code&gt;Access-Control-Allow-Methods&lt;/code&gt; &lt;/a&gt; , в котором перечисляется &lt;code&gt;DELETE&lt;/code&gt; вместе с другими поддерживаемыми им методами:</target>
        </trans-unit>
        <trans-unit id="be2369485a151abd59881e4ba1cc5463e20c789a" translate="yes" xml:space="preserve">
          <source>If the server can't communicate using the specified version of the WebSocket protocol, it will respond with an error (such as 426 Upgrade Required) that includes in its headers a &lt;code&gt;Sec-WebSocket-Version&lt;/code&gt; header with a comma-separated list of the supported protocol versions. If the server does support the requested protocol version, no &lt;code&gt;Sec-WebSocket-Version&lt;/code&gt; header is included in the response.</source>
          <target state="translated">Если сервер не может взаимодействовать с использованием указанной версии протокола WebSocket, он ответит ошибкой (например, 426 Upgrade Required), которая включает в свои заголовки заголовок &lt;code&gt;Sec-WebSocket-Version&lt;/code&gt; со списком поддерживаемых файлов, разделенных запятыми. версии протокола. Если сервер поддерживает запрошенную версию протокола, в ответ не включается заголовок &lt;code&gt;Sec-WebSocket-Version&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8bfc654fb667ab7a47e06dc70b7def2a7620c972" translate="yes" xml:space="preserve">
          <source>If the server cannot serve any character encoding from this request header, it can theoretically send back a &lt;a href=&quot;../status/406&quot;&gt;&lt;code&gt;406 Not Acceptable&lt;/code&gt;&lt;/a&gt; error code. But for a better user experience, this is rarely done and the &lt;code&gt;Accept-Charset&lt;/code&gt; header is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae753ebfa7e739c1ebf4391f5ee391f4e94ee3ce" translate="yes" xml:space="preserve">
          <source>If the server cannot serve any matching character set, it can theoretically send back a &lt;a href=&quot;../status/406&quot;&gt;&lt;code&gt;406&lt;/code&gt;&lt;/a&gt; (Not Acceptable) error code. But, for a better user experience, this is rarely done and the more common way is to ignore the &lt;code&gt;Accept-Charset&lt;/code&gt; header in this case.</source>
          <target state="translated">Если сервер не может обслуживать какой-либо соответствующий набор символов, он теоретически может отправить обратно код ошибки &lt;a href=&quot;../status/406&quot;&gt; &lt;code&gt;406&lt;/code&gt; &lt;/a&gt; (неприемлемо). Но для лучшего взаимодействия с пользователем это делается редко, и в этом случае более распространенным способом является игнорирование заголовка &lt;code&gt;Accept-Charset&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d8ca646db299a164f8eaec324da4187a3dc7c934" translate="yes" xml:space="preserve">
          <source>If the server cannot serve any matching language, it can theoretically send back a &lt;a href=&quot;../status/406&quot;&gt;&lt;code&gt;406&lt;/code&gt;&lt;/a&gt; (Not Acceptable) error code. But, for a better user experience, this is rarely done and more common way is to ignore the &lt;code&gt;Accept-Language&lt;/code&gt; header in this case.</source>
          <target state="translated">Если сервер не может обслуживать какой-либо соответствующий язык, он теоретически может отправить обратно код ошибки &lt;a href=&quot;../status/406&quot;&gt; &lt;code&gt;406&lt;/code&gt; &lt;/a&gt; (неприемлемо). Но для лучшего взаимодействия с пользователем это делается редко, и в этом случае более распространенным способом является игнорирование заголовка &lt;code&gt;Accept-Language&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6bdcb29bf81310454b85262c7363f76b72c53d49" translate="yes" xml:space="preserve">
          <source>If the server decides to upgrade the connection, it must:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5785d405909bd735e16eff8d00e42ade5e8499d9" translate="yes" xml:space="preserve">
          <source>If the server decides to upgrade the connection, it sends back a &lt;a href=&quot;status/101&quot;&gt;&lt;code&gt;101 Switching Protocols&lt;/code&gt;&lt;/a&gt; response status with an Upgrade header that specifies the protocol(s) being switched to. If it does not (or cannot) upgrade the connection, it ignores the &lt;code&gt;Upgrade&lt;/code&gt; header and sends back a regular response (for example, a &lt;a href=&quot;status/200&quot;&gt;&lt;code&gt;200 OK&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d3214eaff9a427b272921bccd27c1fd179422db" translate="yes" xml:space="preserve">
          <source>If the server has a preferred choice, it should generate a &lt;a href=&quot;../headers/location&quot;&gt;&lt;code&gt;Location&lt;/code&gt;&lt;/a&gt; header.</source>
          <target state="translated">Если у сервера есть предпочтительный выбор, он должен сгенерировать заголовок &lt;a href=&quot;../headers/location&quot;&gt; &lt;code&gt;Location&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e05c84402fda441286aba0b966f3789dbf6191c3" translate="yes" xml:space="preserve">
          <source>If the server is unable to switch to HTTP/2 for any reason, it will reply with a standard HTTP/1 reply after handling the request as normal. So if the request was to fetch a web page which does in fact exist, you would get a standard &lt;code&gt;&quot;HTTP/1.1 200 OK&quot;&lt;/code&gt; response with the web page following the remainder of the header. If the server is able to switch to HTTP/2, a &quot;&lt;code&gt;HTTP/1.1 101 Switching Protocols&quot;&lt;/code&gt; response is sent, which will look like this:</source>
          <target state="translated">Если сервер не может переключиться на HTTP / 2 по какой-либо причине, он ответит стандартным ответом HTTP / 1 после обычной обработки запроса. Таким образом, если бы запрос был на получение веб-страницы, которая действительно существует, вы бы получили стандартный ответ &lt;code&gt;&quot;HTTP/1.1 200 OK&quot;&lt;/code&gt; с веб-страницей, следующей за оставшейся частью заголовка. Если сервер может переключиться на HTTP / 2, будет отправлен ответ &amp;laquo; &lt;code&gt;HTTP/1.1 101 Switching Protocols&quot;&lt;/code&gt; , который будет выглядеть следующим образом:</target>
        </trans-unit>
        <trans-unit id="b5c0cece345dde55b15ad1ad49b64cab5f6ed8d2" translate="yes" xml:space="preserve">
          <source>If the server is under your control, add the origin of the requesting site to the set of domains permitted access by adding it to the &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; header's value.</source>
          <target state="translated">Если сервер находится под вашим контролем, добавьте источник запрашивающего сайта в набор доменов, которым разрешен доступ, добавив его к значению заголовка &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="62963ebedd2ff72d3bb4b415143d2ac0443881d2" translate="yes" xml:space="preserve">
          <source>If the server sends a response with an &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; value that is an explicit origin (rather than the &quot;&lt;code&gt;*&lt;/code&gt;&quot; wildcard), then the response should also include a &lt;a href=&quot;vary&quot;&gt;&lt;code&gt;Vary&lt;/code&gt;&lt;/a&gt; response header with the value &lt;code&gt;Origin&lt;/code&gt; &amp;mdash; to indicate to browsers that server responses can differ based on the value of the &lt;code&gt;Origin&lt;/code&gt; request header.</source>
          <target state="translated">Если сервер отправляет ответ со значением &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; , которое является явным источником (а не подстановочным знаком &amp;laquo; &lt;code&gt;*&lt;/code&gt; &amp;raquo;), то ответ также должен включать заголовок ответа &lt;a href=&quot;vary&quot;&gt; &lt;code&gt;Vary&lt;/code&gt; &lt;/a&gt; со значением &lt;code&gt;Origin&lt;/code&gt; - для указания браузерам ответы сервера могут отличаться в зависимости от значения заголовка запроса &lt;code&gt;Origin&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="40ae9d31a1c63c02ebcd60debd2f8b97d5dd7ac9" translate="yes" xml:space="preserve">
          <source>If the server specifies a single origin (that may dynamically change based on the requesting origin as part of a white-list) rather than the &quot;&lt;code&gt;*&lt;/code&gt;&quot; wildcard, then the server should also include &lt;code&gt;Origin&lt;/code&gt; in the &lt;a href=&quot;headers/vary&quot;&gt;&lt;code&gt;Vary&lt;/code&gt;&lt;/a&gt; response header &amp;mdash; to indicate to clients that server responses will differ based on the value of the &lt;a href=&quot;headers/origin&quot;&gt;&lt;code&gt;Origin&lt;/code&gt;&lt;/a&gt; request header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="035b5ed82a9b1755b686239ae88f8e1ef4f77e51" translate="yes" xml:space="preserve">
          <source>If the server specifies a single origin rather than the &quot;&lt;code&gt;*&lt;/code&gt;&quot; wildcard, then the server should also include &lt;code&gt;Origin&lt;/code&gt; in the &lt;a href=&quot;headers/vary&quot;&gt;&lt;code&gt;Vary&lt;/code&gt;&lt;/a&gt; response header &amp;mdash; to indicate to clients that server responses will differ based on the value of the &lt;a href=&quot;headers/origin&quot;&gt;&lt;code&gt;Origin&lt;/code&gt;&lt;/a&gt; request header.</source>
          <target state="translated">Если сервер указывает одно происхождение, а не подстановочный знак &amp;laquo; &lt;code&gt;*&lt;/code&gt; &amp;raquo;, то сервер также должен включить &lt;code&gt;Origin&lt;/code&gt; в заголовок ответа &lt;a href=&quot;headers/vary&quot;&gt; &lt;code&gt;Vary&lt;/code&gt; &lt;/a&gt; - чтобы указать клиентам, что ответы сервера будут отличаться в зависимости от значения заголовка запроса &lt;a href=&quot;headers/origin&quot;&gt; &lt;code&gt;Origin&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bdd4b87fdc6a81c461da6befd7c1928bb2e1a6e5" translate="yes" xml:space="preserve">
          <source>If the server supports range requests, you can issue such a request by using the &lt;a href=&quot;headers/range&quot;&gt;&lt;code&gt;Range&lt;/code&gt;&lt;/a&gt; header. It indicates the part(s) of a document that the server should return.</source>
          <target state="translated">Если сервер поддерживает запросы диапазона, вы можете отправить такой запрос с помощью заголовка &lt;a href=&quot;headers/range&quot;&gt; &lt;code&gt;Range&lt;/code&gt; &lt;/a&gt; . Он указывает части документа, которые сервер должен вернуть.</target>
        </trans-unit>
        <trans-unit id="6199750daad48ff639691648a086a49c0a3fd0a7" translate="yes" xml:space="preserve">
          <source>If the server wishes a faster Web site or application response, it is possible for the server to force the opening of more connections. For example, Instead of having all resources on the same domain, say &lt;code&gt;www.example.com&lt;/code&gt;, it could split over several domains, &lt;code&gt;www1.example.com&lt;/code&gt;, &lt;code&gt;www2.example.com&lt;/code&gt;, &lt;code&gt;www3.example.com&lt;/code&gt;. Each of these domains resolve to the &lt;em&gt;same&lt;/em&gt; server, and the Web browser will open 6 connections to each (in our example, boosting the connections to 18). This technique is called &lt;em&gt;domain sharding&lt;/em&gt;.</source>
          <target state="translated">Если серверу требуется более быстрый ответ веб-сайта или приложения, он может принудительно открыть больше соединений. Например, вместо того, чтобы &lt;code&gt;www1.example.com&lt;/code&gt; все ресурсы в одном домене, скажем &lt;code&gt;www.example.com&lt;/code&gt; , он может быть разделен на несколько доменов, www1.example.com , &lt;code&gt;www2.example.com&lt;/code&gt; , &lt;code&gt;www3.example.com&lt;/code&gt; . Каждый из этих доменов относится к &lt;em&gt;одному&lt;/em&gt; и тому &lt;em&gt;же&lt;/em&gt; серверу, и веб-браузер откроет 6 подключений к каждому (в нашем примере количество подключений увеличится до 18). Этот метод называется &lt;em&gt;сегментированием домена&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="633be8e65041e6f678ba0a69d47e73981a12258e" translate="yes" xml:space="preserve">
          <source>If the service your code is accessing using a CORS request is under your control, make sure that it's configured to include your origin in its &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; header, and that only one such header is included in responses. The header itself accepts a comma-delineated list of origins, so adding a new origin is not difficult.</source>
          <target state="translated">Если служба, к которой ваш код обращается с помощью запроса CORS, находится под вашим контролем, убедитесь, что она настроена для включения вашего источника в свой заголовок &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; и что в ответы включен только один такой заголовок. Сам заголовок принимает список источников, разделенных запятыми, поэтому добавить новое происхождение не сложно.</target>
        </trans-unit>
        <trans-unit id="d5f87d2c5913a57c8787a092105a04dbd9842ee7" translate="yes" xml:space="preserve">
          <source>If the string is null, no proxies should be used</source>
          <target state="translated">Если строка нулевая,прокси-серверы не должны использоваться</target>
        </trans-unit>
        <trans-unit id="ee70fc1642248dcddd5b4e8e2c3aa5e1fa8b3482" translate="yes" xml:space="preserve">
          <source>If the target resource does have a current representation and that representation is successfully modified in accordance with the state of the enclosed representation, then the origin server must send either a &lt;a href=&quot;../status/200&quot;&gt;&lt;code&gt;200&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;OK&lt;/code&gt;) or a &lt;a href=&quot;../status/204&quot;&gt;&lt;code&gt;204&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;No Content&lt;/code&gt;) response to indicate successful completion of the request.</source>
          <target state="translated">Если целевой ресурс действительно имеет текущее представление и это представление успешно модифицируется в соответствии с состоянием вложенного представления, то исходный сервер должен отправить ответ &lt;a href=&quot;../status/200&quot;&gt; &lt;code&gt;200&lt;/code&gt; &lt;/a&gt; ( &lt;code&gt;OK&lt;/code&gt; ) или &lt;a href=&quot;../status/204&quot;&gt; &lt;code&gt;204&lt;/code&gt; &lt;/a&gt; ( &lt;code&gt;No Content&lt;/code&gt; ), чтобы указать на успешное завершение запрос.</target>
        </trans-unit>
        <trans-unit id="2e56a40e542286dd3f5f24ab9d9b357b4b9363fa" translate="yes" xml:space="preserve">
          <source>If the target resource does not have a current representation and the &lt;code&gt;PUT&lt;/code&gt; request successfully creates one, then the origin server must inform the user agent by sending a &lt;a href=&quot;../status/201&quot;&gt;&lt;code&gt;201&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;Created&lt;/code&gt;) response.</source>
          <target state="translated">Если целевой ресурс не имеет текущего представления и запрос &lt;code&gt;PUT&lt;/code&gt; успешно создает его, то исходный сервер должен проинформировать пользовательский агент, отправив ответ &lt;a href=&quot;../status/201&quot;&gt; &lt;code&gt;201&lt;/code&gt; &lt;/a&gt; ( &lt;code&gt;Created&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="a21b80ceb96b8a7d43dede98629becf487c2e6a3" translate="yes" xml:space="preserve">
          <source>If the upgrade to TLS succeeds, the server will respond with &lt;code&gt;&quot;101 Switching Protocols&quot;&lt;/code&gt; as described in the previous section. If the upgrade fails, the HTTP/1.1 connection will fail.</source>
          <target state="translated">Если обновление до TLS прошло успешно, сервер ответит &lt;code&gt;&quot;101 Switching Protocols&quot;&lt;/code&gt; как описано в предыдущем разделе. Если обновление завершится неудачно, соединение HTTP / 1.1 не удастся.</target>
        </trans-unit>
        <trans-unit id="27db56e6fbfb8552acb661ab2ec13d5567a5150c" translate="yes" xml:space="preserve">
          <source>If there are hosts (such as the main Web server) that belong to the local domain but are outside the firewall and are only reachable through the proxy server, those exceptions can be handled using the &lt;code&gt;localHostOrDomainIs()&lt;/code&gt; function:</source>
          <target state="translated">Если есть хосты (например, главный веб-сервер), которые принадлежат локальному домену, но находятся за пределами брандмауэра и доступны только через прокси-сервер, эти исключения можно обрабатывать с помощью функции &lt;code&gt;localHostOrDomainIs()&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="d24ef4f84cb249bfa31f9902d7ae003a91952701" translate="yes" xml:space="preserve">
          <source>If there are multiple semicolon-separated settings, the left-most setting will be used, until Firefox fails to establish the connection to the proxy. In that case, the next value will be used, etc.</source>
          <target state="translated">Если есть несколько настроек с точкой с запятой,то будет использоваться крайняя левая настройка,пока Firefox не установит соединение с прокси-сервером.В этом случае будет использовано следующее значение и т.д.</target>
        </trans-unit>
        <trans-unit id="d35d9172db4121106bcca6f82d93219ec641178d" translate="yes" xml:space="preserve">
          <source>If there are other directives specified, &lt;code&gt;default-src&lt;/code&gt; does not influence them. The following header</source>
          <target state="translated">Если указаны другие директивы, &lt;code&gt;default-src&lt;/code&gt; на них не влияет. Следующий заголовок</target>
        </trans-unit>
        <trans-unit id="f3a3fb9e88e16c02dae3ebc873862c5294ca1f14" translate="yes" xml:space="preserve">
          <source>If there are other directives specified, &lt;code&gt;default-src&lt;/code&gt; does not influence them. The following header:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6ef483d4374adee5323181a48fbe2db2ede05c8" translate="yes" xml:space="preserve">
          <source>If there is a &lt;a href=&quot;cache-control&quot;&gt;&lt;code&gt;Cache-Control&lt;/code&gt;&lt;/a&gt; header with the &quot;max-age&quot; or &quot;s-maxage&quot; directive in the response, the &lt;code&gt;Expires&lt;/code&gt; header is ignored.</source>
          <target state="translated">Если в ответе есть заголовок &lt;a href=&quot;cache-control&quot;&gt; &lt;code&gt;Cache-Control&lt;/code&gt; &lt;/a&gt; с директивой &amp;laquo;max-age&amp;raquo; или &amp;laquo;s-maxage&amp;raquo;, заголовок &lt;code&gt;Expires&lt;/code&gt; игнорируется.</target>
        </trans-unit>
        <trans-unit id="3dc7a417b9985cacb686b59815968d89411858de" translate="yes" xml:space="preserve">
          <source>If there is a &lt;a href=&quot;cache-control&quot;&gt;&lt;code&gt;Cache-Control&lt;/code&gt;&lt;/a&gt; header with the &lt;code&gt;max-age&lt;/code&gt; or &lt;code&gt;s-maxage&lt;/code&gt; directive in the response, the &lt;code&gt;Expires&lt;/code&gt; header is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="872be7b4525857f39211419c11efc3edbf6a5a96" translate="yes" xml:space="preserve">
          <source>If there is only one range, the &lt;a href=&quot;../headers/content-type&quot;&gt;&lt;code&gt;Content-Type&lt;/code&gt;&lt;/a&gt; of the whole response is set to the type of the document, and a &lt;a href=&quot;../headers/content-range&quot;&gt;&lt;code&gt;Content-Range&lt;/code&gt;&lt;/a&gt; is provided.</source>
          <target state="translated">Если есть только один диапазон, &lt;a href=&quot;../headers/content-type&quot;&gt; &lt;code&gt;Content-Type&lt;/code&gt; &lt;/a&gt; всего ответа устанавливается на тип документа, и предоставляется &lt;a href=&quot;../headers/content-range&quot;&gt; &lt;code&gt;Content-Range&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5b03947840333522631fcad82cab8f29beea0376" translate="yes" xml:space="preserve">
          <source>If this directive is absent, the user agent will first look for the &lt;a href=&quot;child-src&quot;&gt;&lt;code&gt;child-src&lt;/code&gt;&lt;/a&gt; directive, then the &lt;a href=&quot;script-src&quot;&gt;&lt;code&gt;script-src&lt;/code&gt;&lt;/a&gt; directive, then finally for the &lt;a href=&quot;default-src&quot;&gt;&lt;code&gt;default-src&lt;/code&gt;&lt;/a&gt; directive, when governing worker execution.</source>
          <target state="translated">Если эта директива отсутствует, пользовательский агент сначала будет искать директиву &lt;a href=&quot;child-src&quot;&gt; &lt;code&gt;child-src&lt;/code&gt; &lt;/a&gt; , затем директиву &lt;a href=&quot;script-src&quot;&gt; &lt;code&gt;script-src&lt;/code&gt; &lt;/a&gt; , а затем, наконец, директиву &lt;a href=&quot;default-src&quot;&gt; &lt;code&gt;default-src&lt;/code&gt; &lt;/a&gt; , управляя выполнением worker.</target>
        </trans-unit>
        <trans-unit id="84255b47da2e8395f8cff0945ef69aa9944b73b4" translate="yes" xml:space="preserve">
          <source>If this directive is absent, the user agent will look for the &lt;a href=&quot;child-src&quot;&gt;&lt;code&gt;child-src&lt;/code&gt;&lt;/a&gt; directive (which falls back to the &lt;a href=&quot;default-src&quot;&gt;&lt;code&gt;default-src&lt;/code&gt;&lt;/a&gt; directive).</source>
          <target state="translated">Если эта директива отсутствует, пользовательский агент будет искать директиву &lt;a href=&quot;child-src&quot;&gt; &lt;code&gt;child-src&lt;/code&gt; &lt;/a&gt; (которая возвращается к директиве &lt;a href=&quot;default-src&quot;&gt; &lt;code&gt;default-src&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="905e23650e04dd97cd87c8f1b4781aae080cf34e" translate="yes" xml:space="preserve">
          <source>If this header is delivered with the response at https://example.com/clear-cookies, all cookies on the same domain https://example.com and any subdomains (like https://stage.example.com, etc), will be cleared out.</source>
          <target state="translated">Если этот заголовок будет доставлен с ответом по адресу https://example.com/clear-cookies,то все куки-файлы на одном и том же домене https://example.com и на любых субдоменах (например,https://stage.example.com и т.д.)будут удалены.</target>
        </trans-unit>
        <trans-unit id="84639588f8530b0b81f649bf1306849d6885af93" translate="yes" xml:space="preserve">
          <source>If this optional parameter is specified, pin validation failures are reported to the given URL.</source>
          <target state="translated">Если этот необязательный параметр указан,то по заданному URL будут поступать сообщения о сбоях проверки выводов.</target>
        </trans-unit>
        <trans-unit id="cf9ff6207f9f440fe5c66b863c0c644f87236017" translate="yes" xml:space="preserve">
          <source>If this optional parameter is specified, this rule applies to all of the site's subdomains as well.</source>
          <target state="translated">Если этот необязательный параметр указан,то данное правило распространяется и на все поддомены сайта.</target>
        </trans-unit>
        <trans-unit id="fb2426a1d151abc1dd5f8cd6ca02a6b7b48d09c2" translate="yes" xml:space="preserve">
          <source>If true, the policy applies to all subdomains under the origin that the policy header is set. The reporting group should also be set to include subdomains, if this option is to be enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbeccd91304096ae1ada0d103a494be1d6ecd504" translate="yes" xml:space="preserve">
          <source>If unspecified, the cookie becomes a &lt;strong&gt;session cookie&lt;/strong&gt;. A session finishes when the client shuts down, and session cookies will be removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6baa688a2748366ccc3dde62ab07310d89508f6a" translate="yes" xml:space="preserve">
          <source>If using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events&quot;&gt;Server-sent events&lt;/a&gt;, make sure &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/EventSource/withCredentials&quot;&gt;&lt;code&gt;EventSource.withCredentials&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;false&lt;/code&gt; (it's the default value).</source>
          <target state="translated">При использовании &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events&quot;&gt;событий&lt;/a&gt; , отправленных сервером , убедитесь, что &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/EventSource/withCredentials&quot;&gt; &lt;code&gt;EventSource.withCredentials&lt;/code&gt; &lt;/a&gt; имеет значение &lt;code&gt;false&lt;/code&gt; (это значение по умолчанию).</target>
        </trans-unit>
        <trans-unit id="bb9e740256ba82627b9a0ee6fa47dc9b15df8b15" translate="yes" xml:space="preserve">
          <source>If using the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API&quot;&gt;Fetch API&lt;/a&gt;, make sure &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Request/credentials&quot;&gt;&lt;code&gt;Request.credentials&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;&quot;omit&quot;&lt;/code&gt;.</source>
          <target state="translated">При использовании &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API&quot;&gt;Fetch API&lt;/a&gt; убедитесь, что &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Request/credentials&quot;&gt; &lt;code&gt;Request.credentials&lt;/code&gt; &lt;/a&gt; имеет значение &lt;code&gt;&quot;omit&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="da0002cfebb5073d0fedbf25422e03f2884be38b" translate="yes" xml:space="preserve">
          <source>If you are not disclosing third-party cookies, consumer trust might get harmed if cookie use is discovered. A clear disclosure (such as in a privacy policy) tends to eliminate any negative effects of a cookie discovery. Some countries also have legislation about cookies. See for example Wikimedia Foundation's &lt;a href=&quot;https://wikimediafoundation.org/wiki/Cookie_statement&quot;&gt;cookie statement&lt;/a&gt;.</source>
          <target state="translated">Если вы не раскрываете сторонние файлы cookie, доверие потребителей может пострадать в случае обнаружения использования файлов cookie. Четкое раскрытие информации (например, в политике конфиденциальности) устраняет любые негативные последствия обнаружения файлов cookie. В некоторых странах также есть законы о файлах cookie. См., Например, &lt;a href=&quot;https://wikimediafoundation.org/wiki/Cookie_statement&quot;&gt;заявление&lt;/a&gt; о файлах cookie Фонда Викимедиа .</target>
        </trans-unit>
        <trans-unit id="bfae6e8214b89d3d41028b5ed5468c1096365497" translate="yes" xml:space="preserve">
          <source>If you are running a robotic user agent (e.g. a crawler), the &lt;code&gt;From&lt;/code&gt; header should be sent, so you can be contacted if problems occur on servers, such as if the robot is sending excessive, unwanted, or invalid requests.</source>
          <target state="translated">Если вы запускаете роботизированный пользовательский агент (например, поисковый робот), должен быть отправлен заголовок &lt;code&gt;From&lt;/code&gt; , чтобы с вами можно было связаться в случае возникновения проблем на серверах, например, если робот отправляет чрезмерные, нежелательные или недопустимые запросы.</target>
        </trans-unit>
        <trans-unit id="9a96db39060f5e3f83ad7fb3b0569b07c25f59e0" translate="yes" xml:space="preserve">
          <source>If you don't know whether this condition is temporary or permanent, a &lt;a href=&quot;404&quot;&gt;&lt;code&gt;404&lt;/code&gt;&lt;/a&gt; status code should be used instead.</source>
          <target state="translated">Если вы не знаете, является ли это состояние временным или постоянным, вместо этого следует использовать код состояния &lt;a href=&quot;404&quot;&gt; &lt;code&gt;404&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b65a6981b33c89d11ed83bceadd2cf2695bfb77d" translate="yes" xml:space="preserve">
          <source>If you don't want a temporary redirect, an extra parameter (either the HTTP status code to use or the &lt;code&gt;permanent&lt;/code&gt; keyword) can be used to set up a different redirect:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="104043725295eb7cc9f3df2d7c830d6c1a7855ab" translate="yes" xml:space="preserve">
          <source>If you don't want to set up a temporary redirect, an extra parameter (either the HTTP status code to use or the &lt;code&gt;permanent&lt;/code&gt; keyword) can be used to set up a different redirect:</source>
          <target state="translated">Если вы не хотите настраивать временное перенаправление, можно использовать дополнительный параметр (либо используемый код состояния HTTP, либо &lt;code&gt;permanent&lt;/code&gt; ключевое слово) для настройки другого перенаправления:</target>
        </trans-unit>
        <trans-unit id="6c9d45e2f476536f0d331642a282a111a65455ac" translate="yes" xml:space="preserve">
          <source>If you enable COEP using &lt;code&gt;require-corp&lt;/code&gt; and have a cross origin resource that needs to be loaded, it needs to support &lt;a href=&quot;../cors&quot;&gt;CORS&lt;/a&gt; and you need to explicitly mark the resource as loadable from another origin to avoid blockage from COEP. For example, you can use the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/crossorigin&quot;&gt;crossorigin&lt;/a&gt;&lt;/code&gt; attribute for this image from a third-party site:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbff3207b07c23fc192059f1baabdc3df63a21a1" translate="yes" xml:space="preserve">
          <source>If you have access to the server you can change your implementation to echo back an origin in the &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; header. You cannot send back a list of origins, because browsers only accept a value that is either a single origin or null</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29e7b5fc4c6d4409c9fc727d5416d3a635b2f290" translate="yes" xml:space="preserve">
          <source>If you need to create a WebSocket connection from scratch, you'll have to handle the handshaking process yourself. After creating the initial HTTP/1.1 session, you need to request the upgrade by adding to a standard request the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Upgrade&quot;&gt;&lt;code&gt;Upgrade&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;headers/connection&quot;&gt;&lt;code&gt;Connection&lt;/code&gt;&lt;/a&gt; headers, as follows:</source>
          <target state="translated">Если вам нужно создать соединение WebSocket с нуля, вам придется самостоятельно обрабатывать процесс установления связи. После создания начального сеанса HTTP / 1.1 вам необходимо запросить обновление, добавив к стандартному запросу заголовки &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Upgrade&quot;&gt; &lt;code&gt;Upgrade&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;headers/connection&quot;&gt; &lt;code&gt;Connection&lt;/code&gt; &lt;/a&gt; , как показано ниже:</target>
        </trans-unit>
        <trans-unit id="95ee0117fd829b54190ed2ff0616a236aeb84cf5" translate="yes" xml:space="preserve">
          <source>If you receive a response that is not in this list, it is a non-standard response, possibly custom to the server's software.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e8f0fd26b3474ef31bc91624748a9e6528cbeb2" translate="yes" xml:space="preserve">
          <source>If you set your site to require SRI for script and styles using this directive:</source>
          <target state="translated">Если вы установили на вашем сайте требование SRI для скриптов и стилей,используя эту директиву:</target>
        </trans-unit>
        <trans-unit id="4990c5b1cf1cb465433d28094a3e92abdf6422d0" translate="yes" xml:space="preserve">
          <source>If you specify &lt;code&gt;DENY&lt;/code&gt;, not only will attempts to load the page in a frame fail when loaded from other sites, attempts to do so will fail when loaded from the same site. On the other hand, if you specify &lt;code&gt;SAMEORIGIN&lt;/code&gt;, you can still use the page in a frame as long as the site including it in a frame is the same as the one serving the page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0907d966acc8c427e8ea343762038d9ac612b1e1" translate="yes" xml:space="preserve">
          <source>If you specify &lt;code&gt;deny&lt;/code&gt;, not only will attempts to load the page in a frame fail when loaded from other sites, attempts to do so will fail when loaded from the same site. On the other hand, if you specify &lt;code&gt;sameorigin&lt;/code&gt;, you can still use the page in a frame as long as the site including it in a frame is the same as the one serving the page.</source>
          <target state="translated">Если вы укажете &lt;code&gt;deny&lt;/code&gt; , попытки загрузить страницу во фрейме будут не только неудачными при загрузке с других сайтов, но и попытки сделать это не удастся при загрузке с того же сайта. С другой стороны, если вы укажете &lt;code&gt;sameorigin&lt;/code&gt; , вы все равно можете использовать страницу во фрейме, если сайт, включающий ее во фрейм, совпадает с тем, который обслуживает страницу.</target>
        </trans-unit>
        <trans-unit id="76a40e879843d64bc7dc4946b5e5671cdab0ec07" translate="yes" xml:space="preserve">
          <source>If you still want to receive reporting, but also want to enforce a policy, use the &lt;a href=&quot;content-security-policy&quot;&gt;&lt;code&gt;Content-Security-Policy&lt;/code&gt;&lt;/a&gt; header with the &lt;a href=&quot;content-security-policy/report-uri&quot;&gt;&lt;code&gt;report-uri&lt;/code&gt;&lt;/a&gt; directive.</source>
          <target state="translated">Если вы по-прежнему хотите получать отчеты, но также хотите применить политику, используйте заголовок &lt;a href=&quot;content-security-policy&quot;&gt; &lt;code&gt;Content-Security-Policy&lt;/code&gt; &lt;/a&gt; с директивой &lt;a href=&quot;content-security-policy/report-uri&quot;&gt; &lt;code&gt;report-uri&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6fa8f50d92b7325e18f060f06fa0a5d25f9ef058" translate="yes" xml:space="preserve">
          <source>If you want clients to be able to access other headers, you have to list them using the &lt;code&gt;Access-Control-Expose-Headers&lt;/code&gt; header.</source>
          <target state="translated">Если вы хотите, чтобы клиенты имели доступ к другим заголовкам, вы должны перечислить их с помощью заголовка &lt;code&gt;Access-Control-Expose-Headers&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ea06dd402f2e9e7e165d67b2c899ce9957d05866" translate="yes" xml:space="preserve">
          <source>If you want clients to be able to access other headers, you have to list them using the &lt;code&gt;Access-Control-Expose-Headers&lt;/code&gt; header. &lt;a href=&quot;content-length&quot;&gt;&lt;code&gt;Content-Length&lt;/code&gt;&lt;/a&gt; was not part of the original set safelisted response headers [&lt;a href=&quot;https://github.com/whatwg/fetch/pull/626&quot;&gt;ref&lt;/a&gt;].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29f7d5936f9e8e985a3e0dca82679038018eac65" translate="yes" xml:space="preserve">
          <source>If you want to avoid using user agent detection, you have options!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4dd6049dead6031953d458d3c0344045b4e4cbe" translate="yes" xml:space="preserve">
          <source>If you want to specify a fallback policy in any case the desired policy hasn't got wide enough browser support, use a comma-separated list with the desired policy specified last:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21412475687382be49c1ab666d1bf865da6de6a3" translate="yes" xml:space="preserve">
          <source>If you want to try to avoid using user agent detection, there are options in some cases!</source>
          <target state="translated">Если вы хотите попытаться избежать использования определения пользовательских агентов,в некоторых случаях есть варианты!</target>
        </trans-unit>
        <trans-unit id="0a038ab727911ca95eaa7cfa94eb4a630d6d412b" translate="yes" xml:space="preserve">
          <source>If your application, server, or proxy supports the standardized &lt;code&gt;Forwarded&lt;/code&gt; header, the &lt;a href=&quot;x-forwarded-for&quot;&gt;&lt;code&gt;X-Forwarded-For&lt;/code&gt;&lt;/a&gt; header can be replaced. Note that IPv6 address are quoted and enclosed in square brackets in &lt;code&gt;Forwarded&lt;/code&gt;.</source>
          <target state="translated">Если ваше приложение, сервер или прокси-сервер поддерживает стандартизованный заголовок &lt;code&gt;Forwarded&lt;/code&gt; -, заголовок &lt;a href=&quot;x-forwarded-for&quot;&gt; &lt;code&gt;X-Forwarded-For&lt;/code&gt; &lt;/a&gt; можно заменить. Обратите внимание, что IPv6-адреса заключены в кавычки и квадратные скобки в &lt;code&gt;Forwarded&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="90a08b947a2957fe434f390c98a9142e831d9a0f" translate="yes" xml:space="preserve">
          <source>If your site authenticates users, it should regenerate and resend session cookies, even ones that already exist, whenever the user authenticates. This technique helps prevent &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Security/Types_of_attacks#Session_fixation&quot;&gt;session fixation attacks&lt;/a&gt;, where a third party can reuse a user's session.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49d1c453e83057e2df00a9ddb4d5028bf92c87b6" translate="yes" xml:space="preserve">
          <source>If, instead, you need to adjust the server's behavior, you'll need to change the value of &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; to grant access to the origin from which the client is loaded.</source>
          <target state="translated">Если вместо этого вам нужно настроить поведение сервера, вам нужно будет изменить значение &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; , чтобы предоставить доступ к источнику, из которого загружается клиент.</target>
        </trans-unit>
        <trans-unit id="c4eca4702bbd3334f2af696c9113056ad66a8d93" translate="yes" xml:space="preserve">
          <source>If-Match</source>
          <target state="translated">If-Match</target>
        </trans-unit>
        <trans-unit id="347825cb2f6b585363c705da713b0a01a89c0771" translate="yes" xml:space="preserve">
          <source>If-Match (RFC 2616)</source>
          <target state="translated">If-Match (RFC 2616)</target>
        </trans-unit>
        <trans-unit id="258eadb23d36147c17ca65c583464f10d8beefd5" translate="yes" xml:space="preserve">
          <source>If-Match (RFC 7232)</source>
          <target state="translated">If-Match (RFC 7232)</target>
        </trans-unit>
        <trans-unit id="de1338853da05e0b2ef334c6d2a1bd4efd32b464" translate="yes" xml:space="preserve">
          <source>If-Modified-Since</source>
          <target state="translated">If-Modified-Since</target>
        </trans-unit>
        <trans-unit id="434516b07ea046bbb5c4ac151f7538b608531da2" translate="yes" xml:space="preserve">
          <source>If-Modified-Since (RFC 2616)</source>
          <target state="translated">If-Modified-Since (RFC 2616)</target>
        </trans-unit>
        <trans-unit id="33cf8486927b13aa3ae6d7b4b5c2ba9856f2354e" translate="yes" xml:space="preserve">
          <source>If-Modified-Since (RFC 7232)</source>
          <target state="translated">If-Modified-Since (RFC 7232)</target>
        </trans-unit>
        <trans-unit id="2c743ca76b5ff26374732b33a172bc6386b3aab3" translate="yes" xml:space="preserve">
          <source>If-None-Match</source>
          <target state="translated">If-None-Match</target>
        </trans-unit>
        <trans-unit id="afb97058113ea8024c2b1e30396497276d9e7529" translate="yes" xml:space="preserve">
          <source>If-None-Match (RFC 2616)</source>
          <target state="translated">If-None-Match (RFC 2616)</target>
        </trans-unit>
        <trans-unit id="9d29af1e2a7a4f8c799fff50073e73e2ee90bbe7" translate="yes" xml:space="preserve">
          <source>If-None-Match (RFC 7232)</source>
          <target state="translated">If-None-Match (RFC 7232)</target>
        </trans-unit>
        <trans-unit id="3e610a822745a7648a28ddc376bb31e9d961b787" translate="yes" xml:space="preserve">
          <source>If-Range</source>
          <target state="translated">If-Range</target>
        </trans-unit>
        <trans-unit id="0db4229b3fe70c3cd52654ba3a313677c557a2f3" translate="yes" xml:space="preserve">
          <source>If-Range (RFC 2616)</source>
          <target state="translated">If-диапазон (RFC 2616)</target>
        </trans-unit>
        <trans-unit id="63c9a90407687da95ffa628c724bc3b45d1f6b45" translate="yes" xml:space="preserve">
          <source>If-Range (RFC 7232)</source>
          <target state="translated">If-диапазон (RFC 7232)</target>
        </trans-unit>
        <trans-unit id="d239314fe40c1036bb99b7c1a04ab1559ed5e25b" translate="yes" xml:space="preserve">
          <source>If-Range (RFC 7233)</source>
          <target state="translated">If-диапазон (RFC 7233)</target>
        </trans-unit>
        <trans-unit id="f07ea20e44175d8597a0629b88839dc18660c130" translate="yes" xml:space="preserve">
          <source>If-Unmodified-Since</source>
          <target state="translated">If-Unmodified-Since</target>
        </trans-unit>
        <trans-unit id="bd06e3f28f4c3da6f75241cead3ad85962385407" translate="yes" xml:space="preserve">
          <source>If-Unmodified-Since (RFC 2616)</source>
          <target state="translated">If-Unmodified-Since (RFC 2616)</target>
        </trans-unit>
        <trans-unit id="dc5f0278046c847aae6cb54bbb6bf9f7d5e45609" translate="yes" xml:space="preserve">
          <source>If-Unmodified-Since (RFC 7232)</source>
          <target state="translated">If-Unmodified-Since (RFC 7232)</target>
        </trans-unit>
        <trans-unit id="ae9940a55ac6950c887c90446b032a2b825302da" translate="yes" xml:space="preserve">
          <source>If: (&amp;lt;urn:uuid:181d4fae-7d8c-11d0-a765-00a0c91e6bf2&amp;gt;
       [&quot;I am an ETag&quot;])
       ([&quot;I am another ETag&quot;])

   The previous header would require that the resource identified in the
   Request-URI be locked with the specified lock token and be in the
   state identified by the &quot;I am an ETag&quot; ETag or in the state
   identified by the second ETag &quot;I am another ETag&quot;.

   To put the matter more plainly one can think of the previous If
   header as expressing the condition below:

     (
       is-locked-with(urn:uuid:181d4fae-7d8c-11d0-a765-00a0c91e6bf2) AND
       matches-etag(&quot;I am an ETag&quot;)
     )
     OR
     (
       matches-etag(&quot;I am another ETag&quot;)
     )</source>
          <target state="translated">Если: (&amp;lt;urn: uuid: 181d4fae-7d8c-11d0-a765-00a0c91e6bf2&amp;gt; [&quot;Я - ETag&quot;]) ([&quot;Я - еще один ETag&quot;]) Предыдущий заголовок потребовал бы, чтобы ресурс, указанный в Request- URI должен быть заблокирован указанным токеном блокировки и находиться в состоянии, определенном ETag &amp;laquo;Я - ETag&amp;raquo;, или в состоянии, определенном вторым ETag &amp;laquo;Я еще один ETag&amp;raquo;. Проще говоря, можно представить предыдущий заголовок If как выражение следующего условия: (is-locked-with (urn: uuid: 181d4fae-7d8c-11d0-a765-00a0c91e6bf2) И соответствует-etag (&quot;Я ETag &quot;)) OR (соответствует-etag (&quot; Я еще один ETag &quot;))</target>
        </trans-unit>
        <trans-unit id="e179e2a27f46763d373e2f3b6cb41b4cc29be61b" translate="yes" xml:space="preserve">
          <source>If: (Not &amp;lt;urn:uuid:181d4fae-7d8c-11d0-a765-00a0c91e6bf2&amp;gt;
     &amp;lt;urn:uuid:58f202ac-22cf-11d1-b12d-002035b29092&amp;gt;)

   This If header requires that the resource must not be locked with a
   lock having the lock token
   urn:uuid:181d4fae-7d8c-11d0-a765-00a0c91e6bf2 and must be locked by a
   lock with the lock token
   urn:uuid:58f202ac-22cf-11d1-b12d-002035b29092.</source>
          <target state="translated">Если: (Не &amp;lt;urn: uuid: 181d4fae-7d8c-11d0-a765-00a0c91e6bf2&amp;gt; &amp;lt;urn: uuid: 58f202ac-22cf-11d1-b12d-002035b29092&amp;gt;) Этот заголовок If требует, чтобы ресурс не был заблокирован блокировкой, имеющей урна токена блокировки: uuid: 181d4fae-7d8c-11d0-a765-00a0c91e6bf2 и должна быть заблокирована замком с урной токена блокировки: uuid: 58f202ac-22cf-11d1-b12d-002035b29092.</target>
        </trans-unit>
        <trans-unit id="90f12c5f5060f3384dd9dd32310436416b8fcc0b" translate="yes" xml:space="preserve">
          <source>Image or graphical data including both bitmap and vector still images as well as animated versions of still image formats such as animated &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/GIF&quot;&gt;GIF&lt;/a&gt; or APNG. Common examples are &lt;code&gt;image/jpeg&lt;/code&gt;, &lt;code&gt;image/png&lt;/code&gt;, and &lt;code&gt;image/svg+xml&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01602140e2a7c5c326242ee266afd5572f9bb02d" translate="yes" xml:space="preserve">
          <source>Image type</source>
          <target state="translated">Тип изображения</target>
        </trans-unit>
        <trans-unit id="6ae89c7f31fe68afd0052be4204a1384141e4bde" translate="yes" xml:space="preserve">
          <source>Image types</source>
          <target state="translated">Типы изображений</target>
        </trans-unit>
        <trans-unit id="7769fde23e24138d1e8d5303368e943a1ccb83f4" translate="yes" xml:space="preserve">
          <source>Images may load from anywhere (note the &quot;*&quot; wildcard).</source>
          <target state="translated">Изображения могут загружаться откуда угодно (обратите внимание на спецсимвол &quot;*&quot;).</target>
        </trans-unit>
        <trans-unit id="4c18ce69b9abb0f85c6c4dd561b8fa929e369a90" translate="yes" xml:space="preserve">
          <source>Images/video frames drawn to a canvas using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/drawImage&quot;&gt;&lt;code&gt;drawImage()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Кадры изображений / видео, нарисованные на холсте с помощью &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/drawImage&quot;&gt; &lt;code&gt;drawImage()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f257a0723093d9a811b4ad768559384cb6bd8ec4" translate="yes" xml:space="preserve">
          <source>Implementation notes for applications, vendors, and extensions</source>
          <target state="translated">Примечания по внедрению для приложений,поставщиков и расширений</target>
        </trans-unit>
        <trans-unit id="da02a5e4655c1c65c2babb044e19b5d72a9968f1" translate="yes" xml:space="preserve">
          <source>Implementation-specific header that may have various effects anywhere along the request-response chain. Used for backwards compatibility with HTTP/1.0 caches where the &lt;code&gt;Cache-Control&lt;/code&gt; header is not yet present.</source>
          <target state="translated">Зависящий от реализации заголовок, который может иметь различные эффекты в любом месте цепочки запрос-ответ. Используется для обратной совместимости с кешами HTTP / 1.0, где заголовок &lt;code&gt;Cache-Control&lt;/code&gt; еще не присутствует.</target>
        </trans-unit>
        <trans-unit id="e1eb8fc6775c68df3e1147c016e8f5a910aa93c4" translate="yes" xml:space="preserve">
          <source>Implementations of HTTP origin servers SHOULD be careful to restrict
   the documents returned by HTTP requests to be only those that were
   intended by the server administrators. If an HTTP server translates
   HTTP URIs directly into file system calls, the server MUST take
   special care not to serve files that were not intended to be
   delivered to HTTP clients. For example, UNIX, Microsoft Windows, and
   other operating systems use &quot;..&quot; as a path component to indicate a
   directory level above the current one. On such a system, an HTTP
   server MUST disallow any such construct in the Request-URI if it
   would otherwise allow access to a resource outside those intended to
   be accessible via the HTTP server. Similarly, files intended for
   reference only internally to the server (such as access control
   files, configuration files, and script code) MUST be protected from
   inappropriate retrieval, since they might contain sensitive
   information. Experience has shown that minor bugs in such HTTP server
   implementations have turned into security risks.</source>
          <target state="translated">Введение HTTP серверов происхождения ДОЛЖНО быть осторожным,чтобы документы,возвращаемые HTTP-запросами,были только теми,которые были предназначены администраторами сервера.Если HTTP-сервер транслирует HTTP-адреса непосредственно в вызовы файловой системы,то сервер ДОЛЖЕН позаботиться о том,чтобы не обслуживать файлы,которые не были предназначены для передачи HTTP-клиентам.Например,UNIX,Microsoft Windows и другие операционные системы используют &quot;...&quot; в качестве компонента пути для указания уровня каталога выше текущего.В такой системе HTTP-сервер ДОЛЖЕН запрещать любую такую конструкцию в Request-URI,если в противном случае он разрешил бы доступ к ресурсу,не предназначенному для доступа через HTTP-сервер.Аналогичным образом,файлы,предназначенные для ссылки только внутри сервера (такие как файлы контроля доступа,конфигурационные файлы и код сценария)ДОЛЖНЫ быть защищены от ненадлежащего поиска,так как они могут содержать конфиденциальную информацию.Опыт показывает,что незначительные ошибки в реализации таких HTTP-серверов превращаются в риск для безопасности.</target>
        </trans-unit>
        <trans-unit id="02431df0d7457d0f94a64ba6def9dc24dd976c81" translate="yes" xml:space="preserve">
          <source>Implementations of HTTP/2 MUST use TLS version 1.2 [&lt;a href=&quot;#ref-TLS12&quot;&gt;TLS12&lt;/a&gt;] or higher
   for HTTP/2 over TLS.  The general TLS usage guidance in [&lt;a href=&quot;#ref-TLSBCP&quot;&gt;TLSBCP&lt;/a&gt;]
   SHOULD be followed, with some additional restrictions that are
   specific to HTTP/2.

   The TLS implementation MUST support the Server Name Indication (SNI)
   [&lt;a href=&quot;#ref-TLS-EXT&quot;&gt;TLS-EXT&lt;/a&gt;] extension to TLS.  HTTP/2 clients MUST indicate the target
   domain name when negotiating TLS.

   Deployments of HTTP/2 that negotiate TLS 1.3 or higher need only
   support and use the SNI extension; deployments of TLS 1.2 are subject
   to the requirements in the following sections.  Implementations are
   encouraged to provide defaults that comply, but it is recognized that
   deployments are ultimately responsible for compliance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14daa0dc1eaa5670a20dd5d15e7e163107880fe7" translate="yes" xml:space="preserve">
          <source>Implemented as X-Content-Security-Policy header in Firefox 4.</source>
          <target state="translated">Реализовано как заголовок X-Content-Security-Policy в Firefox 4.</target>
        </trans-unit>
        <trans-unit id="603ce634b762f92f6e05c3f3e6b9b238a85f5318" translate="yes" xml:space="preserve">
          <source>Implemented as X-Content-Security-Policy header, only supporting 'sandbox' directive.</source>
          <target state="translated">Реализовано в виде заголовка X-Content-Security-Policy,поддерживает только директиву 'sandbox'.</target>
        </trans-unit>
        <trans-unit id="3b13dd24d3dc6eaf8faafe83a8f22898c5b86d5d" translate="yes" xml:space="preserve">
          <source>Implemented as X-Webkit-CSP header in Chrome 14.</source>
          <target state="translated">Реализовано как заголовок X-Webkit-CSP в Chrome 14.</target>
        </trans-unit>
        <trans-unit id="b0eba0ad36d67027ac7933274e7042a9d3fc6e6f" translate="yes" xml:space="preserve">
          <source>Implemented as X-Webkit-CSP header in Safari 6.</source>
          <target state="translated">Реализовано в качестве заголовка X-Webkit-CSP в Safari 6.</target>
        </trans-unit>
        <trans-unit id="cb60fa324f738059434ec9f563fd92bd6eb364fe" translate="yes" xml:space="preserve">
          <source>Implemented as X-Webkit-CSP header in iOS 5.1.</source>
          <target state="translated">Реализовано в качестве заголовка X-Webkit-CSP в iOS 5.1.</target>
        </trans-unit>
        <trans-unit id="60d472d41f188e74df2d9f7da2711afae460cd86" translate="yes" xml:space="preserve">
          <source>Implementers are advised to pay attention to cache controls and to
   make use of the mechanisms available in HTTP when editing Resources,
   in particular, entity-tags as outlined in [&lt;a href=&quot;#ref-NOTE-detect-lost-update&quot;&gt;NOTE-detect-lost-update&lt;/a&gt;].
   Clients are not assured to receive the most recent representations of
   Collection Members using GET if the server is authorizing
   intermediaries to cache them.</source>
          <target state="translated">Разработчикам рекомендуется обращать внимание на элементы управления кешем и использовать механизмы, доступные в HTTP, при редактировании ресурсов, в частности, теги объектов, как описано в [ &lt;a href=&quot;#ref-NOTE-detect-lost-update&quot;&gt;NOTE-detect-lost-update&lt;/a&gt; ]. Клиенты не уверены в получении самых последних представлений членов коллекции с помощью GET, если сервер разрешает посредникам их кэшировать.</target>
        </trans-unit>
        <trans-unit id="e3af5ce8ec47b166e13f8ce8cbe13ad9af1cdf60" translate="yes" xml:space="preserve">
          <source>Implementors should be aware that the software represents the user in
   their interactions over the Internet, and should be careful to allow
   the user to be aware of any actions they might take which may have an
   unexpected significance to themselves or others.

   In particular, the convention has been established that the GET and
   HEAD methods SHOULD NOT have the significance of taking an action
   other than retrieval. These methods ought to be considered &quot;safe&quot;.
   This allows user agents to represent other methods, such as POST, PUT
   and DELETE, in a special way, so that the user is made aware of the
   fact that a possibly unsafe action is being requested.

   Naturally, it is not possible to ensure that the server does not
   generate side-effects as a result of performing a GET request; in
   fact, some dynamic resources consider that a feature. The important
   distinction here is that the user did not request the side-effects,
   so therefore cannot be held accountable for them.</source>
          <target state="translated">Исполнители должны знать,что программное обеспечение представляет пользователя в его взаимодействиях через Интернет,и должны быть осторожны,чтобы позволить пользователю быть в курсе любых действий,которые они могут предпринять,которые могут иметь неожиданное значение для себя или других.В частности,было установлено,что методы GET и HEAD НЕ ДОЛЖНЫ иметь значения для других действий,кроме поиска.Эти методы следует считать &quot;безопасными&quot;.Это позволяет агентам пользователя представлять другие методы,такие как POST,PUT и DELETE,особым образом,чтобы пользователь знал о том,что запрашивается возможно небезопасное действие.Естественно,невозможно гарантировать,что сервер не сгенерирует побочные эффекты в результате выполнения GET запроса;на самом деле,некоторые динамические ресурсы считают это свойством.Важным отличием здесь является то,что пользователь не запрашивал побочные эффекты,поэтому не может нести за них ответственность.</target>
        </trans-unit>
        <trans-unit id="9f5bcb265afe8c10a0333f200168f39077ccb2a2" translate="yes" xml:space="preserve">
          <source>Importance of setting the correct MIME type</source>
          <target state="translated">Важность установки правильного MIME-типа</target>
        </trans-unit>
        <trans-unit id="50b4adf7a95c03b87b497db3ec73f7756f713782" translate="yes" xml:space="preserve">
          <source>Important MIME types for Web developers</source>
          <target state="translated">Важные MIME-типы для веб-разработчиков</target>
        </trans-unit>
        <trans-unit id="a9147f5aaafb06475c8b837fee41cebfad64027d" translate="yes" xml:space="preserve">
          <source>Improved connection management allows considerable boosting of performance in HTTP. With HTTP/1.1 or HTTP/1.0, using a persistent connection &amp;ndash; at least until it becomes idle &amp;ndash; leads to the best performance. However, the failure of pipelining has lead to designing superior connection management models, which have been incorporated into HTTP/2.</source>
          <target state="translated">Улучшенное управление соединениями позволяет значительно повысить производительность HTTP. В HTTP / 1.1 или HTTP / 1.0 использование постоянного соединения - по крайней мере, до тех пор, пока оно не станет незанятым, - обеспечивает лучшую производительность. Однако отказ конвейерной обработки привел к разработке превосходных моделей управления соединениями, которые были включены в HTTP / 2.</target>
        </trans-unit>
        <trans-unit id="ed3056eb7dfdbbf414ed2c77758a13ddb4dea4dc" translate="yes" xml:space="preserve">
          <source>In 1989, while he was working at CERN, Tim Berners-Lee wrote a proposal to build a hypertext system over the Internet. Initially calling it the &lt;em&gt;Mesh&lt;/em&gt;, it was later renamed to &lt;em&gt;World Wide Web&lt;/em&gt; during its implementation in 1990. Built over the existing TCP and IP protocols, it consisted of 4 building blocks:</source>
          <target state="translated">В 1989 году, когда он работал в ЦЕРНе, Тим Бернерс-Ли написал предложение о создании гипертекстовой системы через Интернет. Первоначально он &lt;em&gt;назывался Mesh&lt;/em&gt; , но позже был переименован во &lt;em&gt;World Wide Web&lt;/em&gt; во время реализации в 1990 году. Построенный на основе существующих протоколов TCP и IP, он состоял из 4 строительных блоков:</target>
        </trans-unit>
        <trans-unit id="bc75911a51c61595cb9f9517b6870c9ae4a76b47" translate="yes" xml:space="preserve">
          <source>In 200 (OK) responses to GET or HEAD, an origin server:

   o  SHOULD send an entity-tag validator unless it is not feasible to
      generate one.

   o  MAY send a weak entity-tag instead of a strong entity-tag, if
      performance considerations support the use of weak entity-tags, or
      if it is unfeasible to send a strong entity-tag.

   o  SHOULD send a Last-Modified value if it is feasible to send one.

   In other words, the preferred behavior for an origin server is to
   send both a strong entity-tag and a Last-Modified value in successful
   responses to a retrieval request.

   A client:

   o  MUST send that entity-tag in any cache validation request (using
      If-Match or If-None-Match) if an entity-tag has been provided by
      the origin server. 

   o  SHOULD send the Last-Modified value in non-subrange cache
      validation requests (using If-Modified-Since) if only a
      Last-Modified value has been provided by the origin server.

   o  MAY send the Last-Modified value in subrange cache validation
      requests (using If-Unmodified-Since) if only a Last-Modified value
      has been provided by an HTTP/1.0 origin server.  The user agent
      SHOULD provide a way to disable this, in case of difficulty.

   o  SHOULD send both validators in cache validation requests if both
      an entity-tag and a Last-Modified value have been provided by the
      origin server.  This allows both HTTP/1.0 and HTTP/1.1 caches to
      respond appropriately.</source>
          <target state="translated">В 200 ответах (OK)на GET или HEAD сервер отправителя:o ПОЖАЛУЙСТА отправьте валидатор тегов правок,если его невозможно сгенерировать.o ПОЖАЛУЙСТА отправьте слабый тег правок вместо сильного тега,если соображения производительности поддерживают использование слабых тегов правок,или если отправить сильный тег правок невозможно.o ПОЖАЛУЙСТА отправьте наименее измененное значение,если его можно отправить.Другими словами,предпочтительным поведением для исходного сервера является отправка как сильных тегов правок,так и наименее модифицированных значений в успешных ответах на запрос на получение.Клиент:o ДОЛЖЕН отправлять метку Last-Modified в любом запросе на проверку кэша (используя If-Match или If-None-Match),если метка была предоставлена сервером происхождения.o ДОЛЖЕН отправлять Last-Modified значение в не-поддиапазонных запросах на проверку кэша (используя If-Modified-Since),если только Last-Modified значение было предоставлено сервером происхождения.o MAY отправлять Last-Modified значение в поддиапазонных запросах на проверку кэша (используя If-Unmodified-Since),если только Last-Modified значение было предоставлено сервером происхождения HTTP/1.0.Пользовательский агент SHOULD предоставляет способ отключить эту функцию в случае возникновения проблем.o ПОЖАЛУЙСТА отправьте оба валидатора в кэш-запросах на валидацию,если исходный сервер предоставил как тег,так и Last-Modified значение.Это позволяет кэшу HTTP/1.0 и HTTP/1.1 отвечать соответствующим образом.</target>
        </trans-unit>
        <trans-unit id="296574e47729d1eae5c728c2cee0ace56802d4ed" translate="yes" xml:space="preserve">
          <source>In 2000, a new pattern for using HTTP was designed: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/REST&quot;&gt;representational state transfer&lt;/a&gt; (or REST). The actions induced by the API were no more conveyed by new HTTP methods, but only by accessing specific URIs with basic HTTP/1.1 methods. This allowed any Web application to provide an API to allow retrieval and modification of its data without having to update the browsers or the servers: all what is needed was embedded in the files served by the Web sites through standard HTTP/1.1. The drawback of the REST model resides in the fact that each website defines its own non-standard RESTful API and has total control on it; unlike the *DAV extensions were clients and servers are interoperable. RESTful APIs became very common in the 2010s.</source>
          <target state="translated">В 2000 году был разработан новый образец использования HTTP: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/REST&quot;&gt;передача репрезентативного состояния&lt;/a&gt; (или REST). Действия, вызванные API, больше не передавались новыми методами HTTP, а только путем доступа к определенным URI с помощью основных методов HTTP / 1.1. Это позволяло любому веб-приложению предоставлять API, позволяющий извлекать и изменять свои данные без необходимости обновлять браузеры или серверы: все, что необходимо, было встроено в файлы, обслуживаемые веб-сайтами через стандартный HTTP / 1.1. Недостаток модели REST заключается в том, что каждый веб-сайт определяет собственный нестандартный RESTful API и полностью контролирует его; в отличие от расширений * DAV, где клиенты и серверы взаимодействуют. API-интерфейсы RESTful стали очень распространенными в 2010-х годах.</target>
        </trans-unit>
        <trans-unit id="53750ef40f057be1a7ae8ba66d6a43963e269f50" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;../cors&quot;&gt;CORS&lt;/a&gt;, a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Preflight_request&quot;&gt;preflight request&lt;/a&gt; is sent with the &lt;code&gt;OPTIONS&lt;/code&gt; method so that the server can respond if it is acceptable to send the request. In this example, we will request permission for these parameters:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97be88d1cc954daadbfa1c4539779b9d17810aba" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;../cors&quot;&gt;CORS&lt;/a&gt;, a preflight request with the &lt;code&gt;OPTIONS&lt;/code&gt; method is sent, so that the server can respond whether it is acceptable to send the request with these parameters. The &lt;a href=&quot;../headers/access-control-request-method&quot;&gt;&lt;code&gt;Access-Control-Request-Method&lt;/code&gt;&lt;/a&gt; header notifies the server as part of a preflight request that when the actual request is sent, it will be sent with a &lt;code&gt;POST&lt;/code&gt; request method. The &lt;a href=&quot;../headers/access-control-request-headers&quot;&gt;&lt;code&gt;Access-Control-Request-Headers&lt;/code&gt;&lt;/a&gt; header notifies the server that when the actual request is sent, it will be sent with a &lt;code&gt;X-PINGOTHER&lt;/code&gt; and &lt;code&gt;Content-Type&lt;/code&gt; custom headers. The server now has an opportunity to determine whether it wishes to accept a request under these circumstances.</source>
          <target state="translated">В &lt;a href=&quot;../cors&quot;&gt;CORS&lt;/a&gt; , предполетный запрос с &lt;code&gt;OPTIONS&lt;/code&gt; метода передается, так что сервер может ответить , является ли приемлемым для отправки запроса с этими параметрами. В &lt;a href=&quot;../headers/access-control-request-method&quot;&gt; &lt;code&gt;Access-Control-Request-Method&lt;/code&gt; &lt;/a&gt; оповещает заголовок сервер в качестве части предполетной просьбы о том , когда фактический запрос отправляется, он будет отправлен с &lt;code&gt;POST&lt;/code&gt; методом запроса. В &lt;a href=&quot;../headers/access-control-request-headers&quot;&gt; &lt;code&gt;Access-Control-Request-Headers&lt;/code&gt; &lt;/a&gt; оповещает заголовок сервера , на котором , когда фактический запрос отправляется, он будет отправлен с &lt;code&gt;X-PINGOTHER&lt;/code&gt; и &lt;code&gt;Content-Type&lt;/code&gt; пользовательских заголовков. Теперь у сервера есть возможность определить, желает ли он принять запрос в этих обстоятельствах.</target>
        </trans-unit>
        <trans-unit id="22094d906cb0cb930d1261041451d23d682d9443" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/HTTP&quot;&gt;HTTP&lt;/a&gt;, &lt;em&gt;&lt;strong&gt;content negotiation&lt;/strong&gt;&lt;/em&gt; is the mechanism that is used for serving different representations of a resource at the same URI, so that the user agent can specify which is best suited for the user (for example, which language of a document, which image format, or which content encoding).</source>
          <target state="translated">В &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/HTTP&quot;&gt;HTTP&lt;/a&gt; , &lt;em&gt;&lt;strong&gt;согласование содержания&lt;/strong&gt;&lt;/em&gt; является механизм , который используется для обслуживания различных представлений ресурса в то же URI, так что агент пользователя может определить , какие лучше всего подходит для пользователя (например, на каком языке документа, который формат изображения , или какая кодировка содержимого).</target>
        </trans-unit>
        <trans-unit id="540a387e018d2b957b00f9cf9c29e94b9b95ff1e" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;https://tools.ietf.org/html/rfc7231&quot;&gt;RFC 7231&lt;/a&gt; terms this is the &lt;em&gt;selected representation&lt;/em&gt; of a resource. The selected representation depends on the &lt;code&gt;&lt;a href=&quot;content-type&quot;&gt;Content-Type&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;content-encoding&quot;&gt;Content-Encoding&lt;/a&gt;&lt;/code&gt; header values: so a single resource may have multiple different digest values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14de70e40c9e2cf5302c938ea374541877e07084" translate="yes" xml:space="preserve">
          <source>In &lt;em&gt;server-driven content negotiation&lt;/em&gt;, or proactive content negotiation, the browser (or any other kind of user-agent) sends several HTTP headers along with the URL. These headers describe the preferred choice of the user. The server uses them as hints and an internal algorithm chooses the best content to serve to the client. If it cannot provide a suitable resource, as a fallback it might respond with &lt;a href=&quot;status/406&quot;&gt;&lt;code&gt;406&lt;/code&gt;&lt;/a&gt; (Not Acceptable) or &lt;a href=&quot;status/415&quot;&gt;&lt;code&gt;415&lt;/code&gt;&lt;/a&gt; (Unsupported Media Type) and set headers for the types of media that it does support (e.g. using the &lt;a href=&quot;headers/accept-post&quot;&gt;&lt;code&gt;Accept-Post&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;headers/accept-patch&quot;&gt;&lt;code&gt;Accept-Patch&lt;/code&gt;&lt;/a&gt; for POST and PATCH requests, respectively). The algorithm is server-specific and not defined in the standard. See, for example, the &lt;a href=&quot;http://httpd.apache.org/docs/current/en/content-negotiation.html#algorithm&quot;&gt;Apache negotiation algorithm&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6df737fe0a6a8b38fe1752df0541af98393864b5" translate="yes" xml:space="preserve">
          <source>In &lt;em&gt;server-driven content negotiation&lt;/em&gt;, or proactive content negotiation, the browser (or any other kind of user-agent) sends several HTTP headers along with the URL. These headers describe the preferred choice of the user. The server uses them as hints and an internal algorithm chooses the best content to serve to the client. The algorithm is server-specific and not defined in the standard. See, for example, the &lt;a href=&quot;http://httpd.apache.org/docs/2.2/en/content-negotiation.html#algorithm&quot;&gt;Apache 2.2 negotiation algorithm&lt;/a&gt;.</source>
          <target state="translated">При &lt;em&gt;согласовании содержимого на основе сервера&lt;/em&gt; или упреждающем согласовании содержимого браузер (или любой другой пользовательский агент) отправляет несколько заголовков HTTP вместе с URL-адресом. Эти заголовки описывают предпочтительный выбор пользователя. Сервер использует их как подсказки, а внутренний алгоритм выбирает лучший контент для обслуживания клиента. Алгоритм зависит от сервера и не определен в стандарте. См., Например, &lt;a href=&quot;http://httpd.apache.org/docs/2.2/en/content-negotiation.html#algorithm&quot;&gt;алгоритм согласования Apache 2.2&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3e9a7352b90de016d5e9b783df62c3686f4fe3ba" translate="yes" xml:space="preserve">
          <source>In Firefox 65 and earlier, this value can be modified using the &lt;a href=&quot;http://kb.mozillazine.org/Network.http.accept.default&quot;&gt;&lt;code&gt;network.http.accept.default&lt;/code&gt;&lt;/a&gt; parameter. (&lt;a href=&quot;https://hg.mozilla.org/mozilla-central/file/tip/modules/libpref/init/all.js#l1750&quot;&gt;source)&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36ba735989d6fe47e4bb59a9a9e8824168509fbe" translate="yes" xml:space="preserve">
          <source>In Firefox 66, the default &lt;code&gt;Accept&lt;/code&gt; header value changed to &lt;code&gt;*/*&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8513ce94ddf5be70926f38324a0c5067702e67d" translate="yes" xml:space="preserve">
          <source>In Firefox, the preference that disables CORS is &lt;code&gt;content.cors.disable&lt;/code&gt;. Setting this to &lt;code&gt;true&lt;/code&gt; disables CORS, so whenever that's the case, CORS requests will always fail with this error.</source>
          <target state="translated">В Firefox предпочтение, отключающее CORS, - &lt;code&gt;content.cors.disable&lt;/code&gt; . Установка этого значения в значение &lt;code&gt;true&lt;/code&gt; отключает CORS, поэтому в любом случае запросы CORS всегда завершаются сбоем с этой ошибкой.</target>
        </trans-unit>
        <trans-unit id="77ae93055516fe4030d75a83ef29b37fe614cda5" translate="yes" xml:space="preserve">
          <source>In HTTP, a redirection is triggered by the server by sending special responses to a request: &lt;em&gt;redirects&lt;/em&gt;. HTTP redirects are responses with a status code of &lt;code&gt;3xx&lt;/code&gt;. A browser, when receiving a redirect response, uses the new URL provided and immediately loads it: most of the time, the redirection is transparent to the user, besides a small performance hit.</source>
          <target state="translated">В HTTP перенаправление запускается сервером путем отправки специальных ответов на запрос: &lt;em&gt;перенаправления&lt;/em&gt; . Перенаправления HTTP - это ответы с кодом состояния &lt;code&gt;3xx&lt;/code&gt; . Браузер при получении ответа о перенаправлении использует новый предоставленный URL-адрес и немедленно загружает его: в большинстве случаев перенаправление прозрачно для пользователя, за исключением небольшого снижения производительности.</target>
        </trans-unit>
        <trans-unit id="de2ff1ebd7f691f8616060d0addc5c76e9eb2d6a" translate="yes" xml:space="preserve">
          <source>In HTTP, redirection is triggered by a server sending a special &lt;em&gt;redirect&lt;/em&gt; response to a request. Redirect responses have &lt;a href=&quot;status&quot;&gt;status codes&lt;/a&gt; that start with &lt;code&gt;3&lt;/code&gt;, and a &lt;a href=&quot;headers/location&quot;&gt;&lt;code&gt;Location&lt;/code&gt;&lt;/a&gt; header holding the URL to redirect to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37f3f173cc83c393621e6b6a49dbe5d27a1b2c33" translate="yes" xml:space="preserve">
          <source>In HTTP/1.0, each connection is established by the client prior to
   the request and closed by the server after sending the response.
   However, some implementations implement the explicitly negotiated
   (&quot;Keep-Alive&quot;) version of persistent connections described in &lt;a href=&quot;https://tools.ietf.org/html/rfc2068#section-19.7.1&quot;&gt;Section&lt;/a&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc2068#section-19.7.1&quot;&gt;19.7.1 of [RFC2068]&lt;/a&gt;.

   Some clients and servers might wish to be compatible with these
   previous approaches to persistent connections, by explicitly
   negotiating for them with a &quot;Connection: keep-alive&quot; request header
   field.  However, some experimental implementations of HTTP/1.0
   persistent connections are faulty; for example, if an HTTP/1.0 proxy
   server doesn't understand Connection, it will erroneously forward
   that header field to the next inbound server, which would result in a
   hung connection.

   One attempted solution was the introduction of a Proxy-Connection
   header field, targeted specifically at proxies.  In practice, this
   was also unworkable, because proxies are often deployed in multiple
   layers, bringing about the same problem discussed above.

   As a result, clients are encouraged not to send the Proxy-Connection
   header field in any requests.

   Clients are also encouraged to consider the use of Connection:
   keep-alive in requests carefully; while they can enable persistent
   connections with HTTP/1.0 servers, clients using them will need to
   monitor the connection for &quot;hung&quot; requests (which indicate that the
   client ought stop sending the header field), and this mechanism ought
   not be used by clients at all when a proxy is being used.</source>
          <target state="translated">В HTTP / 1.0 каждое соединение устанавливается клиентом до запроса и закрывается сервером после отправки ответа. Однако в некоторых реализациях реализована явно согласованная (&amp;laquo;Keep-Alive&amp;raquo;) версия постоянных соединений, описанная в &lt;a href=&quot;https://tools.ietf.org/html/rfc2068#section-19.7.1&quot;&gt;разделе &lt;/a&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc2068#section-19.7.1&quot;&gt;19.7.1 [RFC2068]&lt;/a&gt;, Некоторые клиенты и серверы могут пожелать быть совместимыми с этими предыдущими подходами к постоянным соединениям, явно согласовывая их с полем заголовка запроса &amp;laquo;Connection: keep-alive&amp;raquo;. Однако некоторые экспериментальные реализации постоянных соединений HTTP / 1.0 ошибочны; например, если прокси-сервер HTTP / 1.0 не понимает Connection, он по ошибке перенаправит это поле заголовка на следующий входящий сервер, что приведет к зависанию соединения. Одним из предложенных решений было введение поля заголовка Proxy-Connection, предназначенного специально для прокси. На практике это также было невозможно, потому что прокси-серверы часто развертываются на нескольких уровнях, вызывая ту же проблему, о которой говорилось выше. В следствии,клиентам рекомендуется не отправлять поле заголовка Proxy-Connection в любых запросах. Клиентам также рекомендуется тщательно рассмотреть возможность использования Connection: keep-alive в запросах; хотя они могут обеспечивать постоянные соединения с серверами HTTP / 1.0, клиенты, использующие их, должны будут отслеживать соединение на предмет &amp;laquo;зависших&amp;raquo; запросов (которые указывают на то, что клиенту следует прекратить отправку поля заголовка), и этот механизм не должен использоваться клиентами в все, когда используется прокси.запросы (которые указывают, что клиенту следует прекратить отправку поля заголовка), и этот механизм вообще не должен использоваться клиентами при использовании прокси.запросы (которые указывают, что клиенту следует прекратить отправку поля заголовка), и этот механизм вообще не должен использоваться клиентами при использовании прокси.</target>
        </trans-unit>
        <trans-unit id="9ffd86097b1c5adb86cfedee2cc99d4dbaaa41d5" translate="yes" xml:space="preserve">
          <source>In HTTP/1.1, an HTTP client is unable to retry a non-idempotent
   request when an error occurs because there is no means to determine
   the nature of the error.  It is possible that some server processing
   occurred prior to the error, which could result in undesirable
   effects if the request were reattempted.

   HTTP/2 provides two mechanisms for providing a guarantee to a client
   that a request has not been processed:

   o  The GOAWAY frame indicates the highest stream number that might
      have been processed.  Requests on streams with higher numbers are
      therefore guaranteed to be safe to retry.

   o  The REFUSED_STREAM error code can be included in a RST_STREAM
      frame to indicate that the stream is being closed prior to any
      processing having occurred.  Any request that was sent on the
      reset stream can be safely retried.

   Requests that have not been processed have not failed; clients MAY
   automatically retry them, even those with non-idempotent methods.

   A server MUST NOT indicate that a stream has not been processed
   unless it can guarantee that fact.  If frames that are on a stream
   are passed to the application layer for any stream, then
   REFUSED_STREAM MUST NOT be used for that stream, and a GOAWAY frame
   MUST include a stream identifier that is greater than or equal to the
   given stream identifier.

   In addition to these mechanisms, the PING frame provides a way for a
   client to easily test a connection.  Connections that remain idle can
   become broken as some middleboxes (for instance, network address
   translators or load balancers) silently discard connection bindings.
   The PING frame allows a client to safely test whether a connection is
   still active without sending a request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="252a80be2932a5745af0ff3008231856ec0831a7" translate="yes" xml:space="preserve">
          <source>In HTTP/1.1, method parameter information was exclusively encoded in
   HTTP headers.  Unlike HTTP/1.1, WebDAV encodes method parameter
   information either in an XML ([&lt;a href=&quot;#ref-REC-XML&quot;&gt;REC-XML&lt;/a&gt;]) request entity body, or in
   an HTTP header.  The use of XML to encode method parameters was
   motivated by the ability to add extra XML elements to existing
   structures, providing extensibility; and by XML's ability to encode
   information in ISO 10646 character sets, providing
   internationalization support.

   In addition to encoding method parameters, XML is used in WebDAV to
   encode the responses from methods, providing the extensibility and
   internationalization advantages of XML for method output, as well as
   input.

   When XML is used for a request or response body, the Content-Type
   type SHOULD be application/xml.  Implementations MUST accept both
   text/xml and application/xml in request and response bodies.  Use of
   text/xml is deprecated.

   All DAV-compliant clients and resources MUST use XML parsers that are
   compliant with [&lt;a href=&quot;#ref-REC-XML&quot;&gt;REC-XML&lt;/a&gt;] and [&lt;a href=&quot;#ref-REC-XML-NAMES&quot;&gt;REC-XML-NAMES&lt;/a&gt;].  All XML used in either
   requests or responses MUST be, at minimum, well formed and use
   namespaces correctly.  If a server receives XML that is not well-
   formed, then the server MUST reject the entire request with a 400
   (Bad Request).  If a client receives XML that is not well-formed in a
   response, then the client MUST NOT assume anything about the outcome
   of the executed method and SHOULD treat the server as malfunctioning.

   Note that processing XML submitted by an untrusted source may cause
   risks connected to privacy, security, and service quality (see
   &lt;a href=&quot;#section-20&quot;&gt;Section 20&lt;/a&gt;).  Servers MAY reject questionable requests (even though
   they consist of well-formed XML), for instance, with a 400 (Bad
   Request) status code and an optional response body explaining the
   problem.</source>
          <target state="translated">В HTTP / 1.1 информация о параметрах метода была закодирована исключительно в заголовках HTTP. В отличие от HTTP / 1.1, WebDAV кодирует информацию о параметрах метода либо в XML ([ &lt;a href=&quot;#ref-REC-XML&quot;&gt;REC-XML&lt;/a&gt;]) в теле объекта запроса или в заголовке HTTP. Использование XML для кодирования параметров метода было мотивировано возможностью добавлять дополнительные XML-элементы к существующим структурам, обеспечивая расширяемость; а также способностью XML кодировать информацию в наборах символов ISO 10646, обеспечивая поддержку интернационализации. Помимо параметров метода кодирования, XML используется в WebDAV для кодирования ответов от методов, обеспечивая преимущества расширяемости и интернационализации XML для вывода и ввода методов. Когда XML используется для тела запроса или ответа, типом Content-Type СЛЕДУЕТ быть application / xml. Реализации ДОЛЖНЫ принимать как text / xml, так и application / xml в теле запроса и ответа. Использование text / xml не рекомендуется.Все клиенты и ресурсы, совместимые с DAV, ДОЛЖНЫ использовать синтаксические анализаторы XML, совместимые с [&lt;a href=&quot;#ref-REC-XML&quot;&gt;REC-XML&lt;/a&gt; ] и [ &lt;a href=&quot;#ref-REC-XML-NAMES&quot;&gt;REC-XML-NAMES&lt;/a&gt; ]. Весь XML, используемый в запросах или ответах, ДОЛЖЕН быть, как минимум, правильно сформирован и правильно использовать пространства имен. Если сервер получает XML, который не имеет правильного формата, то сервер ДОЛЖЕН отклонить весь запрос с помощью 400 (неверный запрос). Если клиент получает XML, который не имеет правильного формата в ответе, то клиент НЕ ДОЛЖЕН предполагать ничего о результате выполненного метода и ДОЛЖЕН рассматривать сервер как неисправный. Обратите внимание, что обработка XML, отправленного из ненадежного источника, может вызвать риски, связанные с конфиденциальностью, безопасностью и качеством обслуживания (см. &lt;a href=&quot;#section-20&quot;&gt;Раздел 20.&lt;/a&gt;). Серверы МОГУТ отклонять сомнительные запросы (даже если они состоят из правильно сформированного XML), например, с кодом состояния 400 (неверный запрос) и дополнительным телом ответа, объясняющим проблему.</target>
        </trans-unit>
        <trans-unit id="04b117019d6e8bc547e56f34a1e382befb6df3b1" translate="yes" xml:space="preserve">
          <source>In HTTP/1.1, persistence is the default, and the header is no longer needed (but it is often added as a defensive measure against cases requiring a fallback to HTTP/1.0).</source>
          <target state="translated">В HTTP/1.1 по умолчанию используется персистентность,и заголовок больше не нужен (но он часто добавляется в качестве меры защиты от случаев,требующих отката к HTTP/1.0).</target>
        </trans-unit>
        <trans-unit id="d692e156c4939ed8150ce5ebd6b39b65ad2fc836" translate="yes" xml:space="preserve">
          <source>In HTTP/1.x, the pseudo-method CONNECT (&lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-4.3.6&quot;&gt;[RFC7231], Section&amp;nbsp;4.3.6&lt;/a&gt;) is
   used to convert an HTTP connection into a tunnel to a remote host.
   CONNECT is primarily used with HTTP proxies to establish a TLS
   session with an origin server for the purposes of interacting with
   &quot;https&quot; resources.

   In HTTP/2, the CONNECT method is used to establish a tunnel over a
   single HTTP/2 stream to a remote host for similar purposes.  The HTTP
   header field mapping works as defined in &lt;a href=&quot;#section-8.1.2.3&quot;&gt;Section 8.1.2.3&lt;/a&gt; (&quot;Request
   Pseudo-Header Fields&quot;), with a few differences.  Specifically:

   o  The &quot;:method&quot; pseudo-header field is set to &quot;CONNECT&quot;.

   o  The &quot;:scheme&quot; and &quot;:path&quot; pseudo-header fields MUST be omitted.

   o  The &quot;:authority&quot; pseudo-header field contains the host and port to
      connect to (equivalent to the authority-form of the request-target
      of CONNECT requests (see &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-5.3&quot;&gt;[RFC7230], Section&amp;nbsp;5.3&lt;/a&gt;)).

   A CONNECT request that does not conform to these restrictions is
   malformed (&lt;a href=&quot;#section-8.1.2.6&quot;&gt;Section 8.1.2.6&lt;/a&gt;).

   A proxy that supports CONNECT establishes a TCP connection [&lt;a href=&quot;#ref-TCP&quot;&gt;TCP&lt;/a&gt;] to
   the server identified in the &quot;:authority&quot; pseudo-header field.  Once
   this connection is successfully established, the proxy sends a
   HEADERS frame containing a 2xx series status code to the client, as
   defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-4.3.6&quot;&gt;[RFC7231], Section&amp;nbsp;4.3.6&lt;/a&gt;.

   After the initial HEADERS frame sent by each peer, all subsequent
   DATA frames correspond to data sent on the TCP connection.  The
   payload of any DATA frames sent by the client is transmitted by the
   proxy to the TCP server; data received from the TCP server is
   assembled into DATA frames by the proxy.  Frame types other than DATA
   or stream management frames (RST_STREAM, WINDOW_UPDATE, and PRIORITY)
   MUST NOT be sent on a connected stream and MUST be treated as a
   stream error (&lt;a href=&quot;#section-5.4.2&quot;&gt;Section 5.4.2&lt;/a&gt;) if received.

   The TCP connection can be closed by either peer.  The END_STREAM flag
   on a DATA frame is treated as being equivalent to the TCP FIN bit.  A
   client is expected to send a DATA frame with the END_STREAM flag set
   after receiving a frame bearing the END_STREAM flag.  A proxy that
   receives a DATA frame with the END_STREAM flag set sends the attached
   data with the FIN bit set on the last TCP segment.  A proxy that
   receives a TCP segment with the FIN bit set sends a DATA frame with
   the END_STREAM flag set.  Note that the final TCP segment or DATA
   frame could be empty. 

   A TCP connection error is signaled with RST_STREAM.  A proxy treats
   any error in the TCP connection, which includes receiving a TCP
   segment with the RST bit set, as a stream error (&lt;a href=&quot;#section-5.4.2&quot;&gt;Section 5.4.2&lt;/a&gt;) of
   type CONNECT_ERROR.  Correspondingly, a proxy MUST send a TCP segment
   with the RST bit set if it detects an error with the stream or the
   HTTP/2 connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dad8ae742410e88380cfba396cb4fa1d4e9131d" translate="yes" xml:space="preserve">
          <source>In HTTP/2 - the &lt;code&gt;TE&lt;/code&gt; header field is only accepted if the &lt;code&gt;trailers&lt;/code&gt; value is set.</source>
          <target state="translated">В HTTP / 2 - поле заголовка &lt;code&gt;TE&lt;/code&gt; принимается, только если установлено значение &lt;code&gt;trailers&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0d7657f51a7437fb2490923cf1c33fdce91a2c29" translate="yes" xml:space="preserve">
          <source>In HTTP/2, each endpoint is required to send a connection preface as
   a final confirmation of the protocol in use and to establish the
   initial settings for the HTTP/2 connection.  The client and server
   each send a different connection preface.

   The client connection preface starts with a sequence of 24 octets,
   which in hex notation is:

     0x505249202a20485454502f322e300d0a0d0a534d0d0a0d0a

   That is, the connection preface starts with the string &quot;PRI *
   HTTP/2.0\r\n\r\nSM\r\n\r\n&quot;).  This sequence MUST be followed by a
   SETTINGS frame (&lt;a href=&quot;#section-6.5&quot;&gt;Section 6.5&lt;/a&gt;), which MAY be empty.  The client sends
   the client connection preface immediately upon receipt of a 101
   (Switching Protocols) response (indicating a successful upgrade) or
   as the first application data octets of a TLS connection.  If
   starting an HTTP/2 connection with prior knowledge of server support
   for the protocol, the client connection preface is sent upon
   connection establishment.

      Note: The client connection preface is selected so that a large
      proportion of HTTP/1.1 or HTTP/1.0 servers and intermediaries do
      not attempt to process further frames.  Note that this does not
      address the concerns raised in [&lt;a href=&quot;#ref-TALKING&quot;&gt;TALKING&lt;/a&gt;].

   The server connection preface consists of a potentially empty
   SETTINGS frame (&lt;a href=&quot;#section-6.5&quot;&gt;Section 6.5&lt;/a&gt;) that MUST be the first frame the server
   sends in the HTTP/2 connection.

   The SETTINGS frames received from a peer as part of the connection
   preface MUST be acknowledged (see &lt;a href=&quot;#section-6.5.3&quot;&gt;Section 6.5.3&lt;/a&gt;) after sending the
   connection preface. 

   To avoid unnecessary latency, clients are permitted to send
   additional frames to the server immediately after sending the client
   connection preface, without waiting to receive the server connection
   preface.  It is important to note, however, that the server
   connection preface SETTINGS frame might include parameters that
   necessarily alter how a client is expected to communicate with the
   server.  Upon receiving the SETTINGS frame, the client is expected to
   honor any parameters established.  In some configurations, it is
   possible for the server to transmit SETTINGS before the client sends
   additional frames, providing an opportunity to avoid this issue.

   Clients and servers MUST treat an invalid connection preface as a
   connection error (&lt;a href=&quot;#section-5.4.1&quot;&gt;Section 5.4.1&lt;/a&gt;) of type PROTOCOL_ERROR.  A GOAWAY
   frame (&lt;a href=&quot;#section-6.8&quot;&gt;Section 6.8&lt;/a&gt;) MAY be omitted in this case, since an invalid
   preface indicates that the peer is not using HTTP/2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf70ecd71ae33feef50c75a643497aa1f8c4c6bc" translate="yes" xml:space="preserve">
          <source>In IIS, you use the &lt;code&gt;&lt;a href=&quot;https://www.iis.net/configreference/system.webserver/httpredirect&quot;&gt;&amp;lt;httpRedirect&amp;gt;&lt;/a&gt;&lt;/code&gt; element to configure redirections.</source>
          <target state="translated">В IIS вы используете элемент &lt;code&gt;&lt;a href=&quot;https://www.iis.net/configreference/system.webserver/httpredirect&quot;&gt;&amp;lt;httpRedirect&amp;gt;&lt;/a&gt;&lt;/code&gt; для настройки перенаправления.</target>
        </trans-unit>
        <trans-unit id="a73ab14a2ec5bf02be9050f108c718d592c94a24" translate="yes" xml:space="preserve">
          <source>In Nginx, you create a specific server block for the content you want to redirect:</source>
          <target state="translated">В Nginx вы создаете специальный серверный блок для контента,который вы хотите перенаправить:</target>
        </trans-unit>
        <trans-unit id="24471cf4aea973802e7f0eb0517d9a17c92a5dcd" translate="yes" xml:space="preserve">
          <source>In PROPFIND responses, information about individual properties is
   returned inside 'propstat' elements (see &lt;a href=&quot;#section-14.22&quot;&gt;Section 14.22&lt;/a&gt;), each
   containing an individual 'status' element containing information
   about the properties appearing in it.  The list below summarizes the
   most common status codes used inside 'propstat'; however, clients
   should be prepared to handle other 2/3/4/5xx series status codes as
   well.

   200 OK - A property exists and/or its value is successfully returned.

   401 Unauthorized - The property cannot be viewed without appropriate
   authorization.

   403 Forbidden - The property cannot be viewed regardless of
   authentication.

   404 Not Found - The property does not exist.</source>
          <target state="translated">В ответах PROPFIND информация об отдельных свойствах возвращается внутри элементов propstat (см. &lt;a href=&quot;#section-14.22&quot;&gt;Раздел 14.22&lt;/a&gt; ), каждый из которых содержит отдельный элемент status, содержащий информацию о свойствах, появляющихся в нем. В приведенном ниже списке перечислены наиболее распространенные коды состояния, используемые в propstat; однако клиенты должны быть готовы обрабатывать и другие коды состояния серий 2/3/4 / 5xx. 200 OK - свойство существует и / или его значение успешно возвращено. 401 Unauthorized - просмотр объекта без соответствующего разрешения невозможен. 403 Forbidden - свойство нельзя просмотреть независимо от аутентификации. 404 Not Found - свойство не существует.</target>
        </trans-unit>
        <trans-unit id="86628559f615b8ba5dc79d241d665acce969377c" translate="yes" xml:space="preserve">
          <source>In PROPPATCH responses, information about individual properties is
   returned inside 'propstat' elements (see &lt;a href=&quot;#section-14.22&quot;&gt;Section 14.22&lt;/a&gt;), each
   containing an individual 'status' element containing information
   about the properties appearing in it.  The list below summarizes the
   most common status codes used inside 'propstat'; however, clients
   should be prepared to handle other 2/3/4/5xx series status codes as
   well. 

   200 (OK) - The property set or change succeeded.  Note that if this
   appears for one property, it appears for every property in the
   response, due to the atomicity of PROPPATCH.

   403 (Forbidden) - The client, for reasons the server chooses not to
   specify, cannot alter one of the properties.

   403 (Forbidden): The client has attempted to set a protected
   property, such as DAV:getetag.  If returning this error, the server
   SHOULD use the precondition code 'cannot-modify-protected-property'
   inside the response body.

   409 (Conflict) - The client has provided a value whose semantics are
   not appropriate for the property.

   424 (Failed Dependency) - The property change could not be made
   because of another property change that failed.

   507 (Insufficient Storage) - The server did not have sufficient space
   to record the property.</source>
          <target state="translated">В ответах PROPPATCH информация об отдельных свойствах возвращается внутри элементов propstat (см. &lt;a href=&quot;#section-14.22&quot;&gt;Раздел 14.22.&lt;/a&gt;), each containing an individual 'status' element containing information about the properties appearing in it. The list below summarizes the most common status codes used inside 'propstat'; however, clients should be prepared to handle other 2/3/4/5xx series status codes as well. 200 (OK) - The property set or change succeeded. Note that if this appears for one property, it appears for every property in the response, due to the atomicity of PROPPATCH. 403 (Forbidden) - The client, for reasons the server chooses not to specify, cannot alter one of the properties. 403 (Forbidden): The client has attempted to set a protected property, such as DAV:getetag. If returning this error, the server SHOULD use the precondition code 'cannot-modify-protected-property' inside the response body. 409 (Conflict) - The client has provided a value whose semantics are not appropriate for the property. 424 (Failed Dependency) - The property change could not be made because of another property change that failed. 507 (Insufficient Storage) - The server did not have sufficient space to record the property.</target>
        </trans-unit>
        <trans-unit id="4287fa4592630c32398d87b197eab0ac7661318b" translate="yes" xml:space="preserve">
          <source>In a &lt;a href=&quot;../methods/post&quot;&gt;&lt;code&gt;POST&lt;/code&gt;&lt;/a&gt; request, resulting from an HTML form submission, the &lt;code&gt;Content-Type&lt;/code&gt; of the request is specified by the &lt;code&gt;enctype&lt;/code&gt; attribute on the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form&quot;&gt;&lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt;&lt;/a&gt; element.</source>
          <target state="translated">В запросе &lt;a href=&quot;../methods/post&quot;&gt; &lt;code&gt;POST&lt;/code&gt; &lt;/a&gt; , полученном в результате &lt;code&gt;enctype&lt;/code&gt; HTML-формы, &lt;code&gt;Content-Type&lt;/code&gt; запроса указывается атрибутом enctype в элементе &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form&quot;&gt; &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b96a6a626ade04f611b917e292048082979c2db6" translate="yes" xml:space="preserve">
          <source>In a &lt;a href=&quot;cors#Simple_requests&quot;&gt;Simple Request&lt;/a&gt; scenario, the request will be sent with Cookies (e.g. if the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/withCredentials&quot;&gt;withCredentials&lt;/a&gt;&lt;/code&gt; flag is set on &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest&quot;&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;&lt;/a&gt;). If the server responds with &lt;a href=&quot;headers/access-control-allow-credentials&quot;&gt;&lt;code&gt;Access-Control-Allow-Credentials&lt;/code&gt;&lt;/a&gt;&lt;code&gt;: true&lt;/code&gt; attached to the credentialed response, then the response is accepted by the client and exposed to web content. In a &lt;a href=&quot;cors#Preflighted_requests&quot;&gt;Preflighted Request&lt;/a&gt;, the server can respond with &lt;code&gt;Access-Control-Allow-Credentials: true&lt;/code&gt; to the &lt;code&gt;OPTIONS&lt;/code&gt; request.</source>
          <target state="translated">В сценарии &lt;a href=&quot;cors#Simple_requests&quot;&gt;простого запроса&lt;/a&gt; запрос будет отправлен с &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/withCredentials&quot;&gt;withCredentials&lt;/a&gt;&lt;/code&gt; cookie (например, если флаг withCredentials установлен в &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest&quot;&gt; &lt;code&gt;XMLHttpRequest&lt;/code&gt; &lt;/a&gt; ). Если сервер отвечает с помощью &lt;a href=&quot;headers/access-control-allow-credentials&quot;&gt; &lt;code&gt;Access-Control-Allow-Credentials&lt;/code&gt; &lt;/a&gt; &lt;code&gt;: true&lt;/code&gt; прикрепленного к ответу с учетными данными, то ответ принимается клиентом и предоставляется веб-контенту. В предварительном &lt;a href=&quot;cors#Preflighted_requests&quot;&gt;запросе&lt;/a&gt; сервер может ответить с помощью &lt;code&gt;Access-Control-Allow-Credentials: true&lt;/code&gt; на запрос &lt;code&gt;OPTIONS&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="268020b94aef4013d8492a7be59945867c54beea" translate="yes" xml:space="preserve">
          <source>In a &lt;code&gt;multipart/form-data&lt;/code&gt; body, the HTTP &lt;code&gt;Content-Disposition&lt;/code&gt; general header is a header that can be used on the subpart of a multipart body to give information about the field it applies to. The subpart is delimited by the &lt;em&gt;boundary&lt;/em&gt; defined in the &lt;a href=&quot;content-type&quot;&gt;&lt;code&gt;Content-Type&lt;/code&gt;&lt;/a&gt; header. Used on the body itself, &lt;code&gt;Content-Disposition&lt;/code&gt; has no effect.</source>
          <target state="translated">В теле &lt;code&gt;multipart/form-data&lt;/code&gt; общий заголовок HTTP &lt;code&gt;Content-Disposition&lt;/code&gt; - это заголовок, который можно использовать в части тела multipart, чтобы предоставить информацию о поле, к которому он применяется. Подчасть ограничена &lt;em&gt;границей,&lt;/em&gt; определенной в заголовке &lt;a href=&quot;content-type&quot;&gt; &lt;code&gt;Content-Type&lt;/code&gt; &lt;/a&gt; . При использовании на самом теле &lt;code&gt;Content-Disposition&lt;/code&gt; не имеет никакого эффекта.</target>
        </trans-unit>
        <trans-unit id="722fd850ce8884571159d774606e9c7c439cbf02" translate="yes" xml:space="preserve">
          <source>In a &lt;code&gt;multipart/form-data&lt;/code&gt; body, the HTTP &lt;code&gt;Content-Disposition&lt;/code&gt; general header is a header that must be used on each subpart of a multipart body to give information about the field it applies to. The subpart is delimited by the &lt;em&gt;boundary&lt;/em&gt; defined in the &lt;a href=&quot;content-type&quot;&gt;&lt;code&gt;Content-Type&lt;/code&gt;&lt;/a&gt; header. Used on the body itself, &lt;code&gt;Content-Disposition&lt;/code&gt; has no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="205c117fa86b98a94b5278af3d27ff4834e8a8cf" translate="yes" xml:space="preserve">
          <source>In a Web page, using JavaScript</source>
          <target state="translated">На веб-странице,с помощью JavaScript</target>
        </trans-unit>
        <trans-unit id="761a2afb550fd29de9f2fe5ccca651beeaf9ee84" translate="yes" xml:space="preserve">
          <source>In a cross-protocol attack, an attacker causes a client to initiate a
   transaction in one protocol toward a server that understands a
   different protocol.  An attacker might be able to cause the
   transaction to appear as a valid transaction in the second protocol.
   In combination with the capabilities of the web context, this can be
   used to interact with poorly protected servers in private networks.

   Completing a TLS handshake with an ALPN identifier for HTTP/2 can be
   considered sufficient protection against cross-protocol attacks.
   ALPN provides a positive indication that a server is willing to
   proceed with HTTP/2, which prevents attacks on other TLS-based
   protocols.

   The encryption in TLS makes it difficult for attackers to control the
   data that could be used in a cross-protocol attack on a cleartext
   protocol.

   The cleartext version of HTTP/2 has minimal protection against cross-
   protocol attacks.  The connection preface (&lt;a href=&quot;#section-3.5&quot;&gt;Section 3.5&lt;/a&gt;) contains a
   string that is designed to confuse HTTP/1.1 servers, but no special
   protection is offered for other protocols.  A server that is willing
   to ignore parts of an HTTP/1.1 request containing an Upgrade header
   field in addition to the client connection preface could be exposed
   to a cross-protocol attack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="217ea5cca9699504b57fcecb48b0029845d1abba" translate="yes" xml:space="preserve">
          <source>In a nutshell</source>
          <target state="translated">В двух словах</target>
        </trans-unit>
        <trans-unit id="2761e7950da20aac090169d0c4a8c94e9c82afce" translate="yes" xml:space="preserve">
          <source>In a regular HTTP response, the &lt;code&gt;&lt;strong&gt;Content-Disposition&lt;/strong&gt;&lt;/code&gt; response header is a header indicating if the content is expected to be displayed &lt;em&gt;inline&lt;/em&gt; in the browser, that is, as a Web page or as part of a Web page, or as an &lt;em&gt;attachment&lt;/em&gt;, that is downloaded and saved locally.</source>
          <target state="translated">В обычном HTTP &lt;code&gt;&lt;strong&gt;Content-Disposition&lt;/strong&gt;&lt;/code&gt; ответе заголовок ответа &lt;strong&gt;Content-Disposition&lt;/strong&gt; представляет собой заголовок, указывающий, будет ли контент отображаться &lt;em&gt;встроенным&lt;/em&gt; в браузере, то есть как веб-страница, или как часть веб-страницы, или как &lt;em&gt;вложение&lt;/em&gt; , которое загружается и сохраняется локально.</target>
        </trans-unit>
        <trans-unit id="95ef9f1f98a924832244a2938c1f564593efc504" translate="yes" xml:space="preserve">
          <source>In addition to defining the HTTP/1.1 protocol, this document serves
   as the specification for the Internet media type &quot;message/http&quot; and
   &quot;application/http&quot;. The message/http type can be used to enclose a
   single HTTP request or response message, provided that it obeys the
   MIME restrictions for all &quot;message&quot; types regarding line length and
   encodings. The application/http type can be used to enclose a
   pipeline of one or more HTTP request or response messages (not
   intermixed). The following is to be registered with IANA [&lt;a href=&quot;#ref-17&quot;&gt;17&lt;/a&gt;].

       Media Type name:         message
       Media subtype name:      http
       Required parameters:     none
       Optional parameters:     version, msgtype
        version: The HTTP-Version number of the enclosed message
                 (e.g., &quot;1.1&quot;). If not present, the version can be
                 determined from the first line of the body.
        msgtype: The message type -- &quot;request&quot; or &quot;response&quot;. If not
                 present, the type can be determined from the first
                 line of the body.
       Encoding considerations: only &quot;7bit&quot;, &quot;8bit&quot;, or &quot;binary&quot; are
                                permitted
       Security considerations: none

       Media Type name:         application
       Media subtype name:      http
       Required parameters:     none
       Optional parameters:     version, msgtype
        version: The HTTP-Version number of the enclosed messages
                 (e.g., &quot;1.1&quot;). If not present, the version can be
                 determined from the first line of the body.
        msgtype: The message type -- &quot;request&quot; or &quot;response&quot;. If not
                 present, the type can be determined from the first
                 line of the body.
       Encoding considerations: HTTP messages enclosed by this type
                 are in &quot;binary&quot; format; use of an appropriate
                 Content-Transfer-Encoding is required when
                 transmitted via E-mail.
       Security considerations: none</source>
          <target state="translated">Помимо определения протокола HTTP / 1.1, этот документ служит спецификацией для типов Интернет-носителей &amp;laquo;message / http&amp;raquo; и &amp;laquo;application / http&amp;raquo;. Тип message / http может использоваться для включения одного HTTP-запроса или ответного сообщения при условии, что он подчиняется ограничениям MIME для всех типов &amp;laquo;сообщений&amp;raquo; относительно длины строки и кодировок. Тип application / http может использоваться для включения конвейера из одного или нескольких HTTP-запросов или сообщений ответа (не смешанных). Следующее должно быть зарегистрировано в IANA [ &lt;a href=&quot;#ref-17&quot;&gt;17&lt;/a&gt;]. Имя типа носителя: сообщение Имя подтипа носителя: http Обязательные параметры: нет Необязательные параметры: версия, тип сообщения версия: номер HTTP-версии вложенного сообщения (например, &amp;laquo;1.1&amp;raquo;). Если нет, версию можно определить по первой строке тела. msgtype: Тип сообщения - &amp;laquo;запрос&amp;raquo; или &amp;laquo;ответ&amp;raquo;. Если нет, тип можно определить по первой строке тела. Соображения по кодированию: разрешены только &amp;laquo;7-битные&amp;raquo;, &amp;laquo;8-битные&amp;raquo; или &amp;laquo;двоичные&amp;raquo; Соображения безопасности: нет Имя типа носителя: приложение Имя подтипа носителя: http Обязательные параметры:нет Необязательные параметры: version, msgtype version: Номер HTTP-версии вложенных сообщений (например, &amp;laquo;1.1&amp;raquo;). Если нет, версию можно определить по первой строке тела. msgtype: Тип сообщения - &amp;laquo;запрос&amp;raquo; или &amp;laquo;ответ&amp;raquo;. Если нет, тип можно определить по первой строке тела. Замечания по кодированию: сообщения HTTP, заключенные в этот тип, имеют &amp;laquo;двоичный&amp;raquo; формат; при передаче по электронной почте требуется использование соответствующего Content-Transfer-Encoding. Соображения безопасности: нетНомер HTTP-версии вложенных сообщений (например, &amp;laquo;1.1&amp;raquo;). Если нет, версию можно определить по первой строке тела. msgtype: Тип сообщения - &amp;laquo;запрос&amp;raquo; или &amp;laquo;ответ&amp;raquo;. Если нет, тип можно определить по первой строке тела. Замечания по кодированию: сообщения HTTP, заключенные в этот тип, имеют &amp;laquo;двоичный&amp;raquo; формат; при передаче по электронной почте требуется использование соответствующего Content-Transfer-Encoding. Соображения безопасности: нетНомер HTTP-версии вложенных сообщений (например, &amp;laquo;1.1&amp;raquo;). Если нет, версию можно определить по первой строке тела. msgtype: Тип сообщения - &amp;laquo;запрос&amp;raquo; или &amp;laquo;ответ&amp;raquo;. Если нет, тип можно определить по первой строке тела. Замечания по кодированию: сообщения HTTP, заключенные в этот тип, имеют &amp;laquo;двоичный&amp;raquo; формат; при передаче по электронной почте требуется использование соответствующего Content-Transfer-Encoding. Соображения безопасности: нетответ &amp;raquo;. Если нет, тип можно определить по первой строке тела. Замечания по кодированию: HTTP-сообщения, заключенные в этот тип, имеют&amp;laquo; двоичный &amp;raquo;формат; требуется использование соответствующего Content-Transfer-Encoding при передаче через Электронная почта. Соображения безопасности: нетответ &amp;raquo;. Если нет, тип можно определить по первой строке тела. Замечания по кодированию: HTTP-сообщения, заключенные в этот тип, имеют&amp;laquo; двоичный &amp;raquo;формат; требуется использование соответствующего Content-Transfer-Encoding при передаче через Электронная почта. Соображения безопасности: нет</target>
        </trans-unit>
        <trans-unit id="ba23aa0ff8e4e6c04210bb32cbc84ce861b595e8" translate="yes" xml:space="preserve">
          <source>In addition to having &lt;code&gt;Server-Timing&lt;/code&gt; header metrics appear in the developer tools of the browser, the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PerformanceServerTiming&quot;&gt;&lt;code&gt;PerformanceServerTiming&lt;/code&gt;&lt;/a&gt; interface enables tools to automatically collect and process metrics from JavaScript. This interface is restricted to the same origin, but you can use the &lt;a href=&quot;timing-allow-origin&quot;&gt;&lt;code&gt;Timing-Allow-Origin&lt;/code&gt;&lt;/a&gt; header to specify the domains that are allowed to access the server metrics. The interface is only available in secure contexts (HTTPS) in some browsers.</source>
          <target state="translated">Помимо отображения метрик заголовка &lt;code&gt;Server-Timing&lt;/code&gt; в инструментах разработчика браузера, интерфейс &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PerformanceServerTiming&quot;&gt; &lt;code&gt;PerformanceServerTiming&lt;/code&gt; &lt;/a&gt; позволяет инструментам автоматически собирать и обрабатывать метрики из JavaScript. Этот интерфейс ограничен одним и тем же источником, но вы можете использовать заголовок &lt;a href=&quot;timing-allow-origin&quot;&gt; &lt;code&gt;Timing-Allow-Origin&lt;/code&gt; ,&lt;/a&gt; чтобы указать домены, которым разрешен доступ к метрикам сервера. Интерфейс доступен только в защищенном контексте (HTTPS) в некоторых браузерах.</target>
        </trans-unit>
        <trans-unit id="a2dac2ae6a62ade1de285c71b6058d61de36159d" translate="yes" xml:space="preserve">
          <source>In addition to restricting the domains from which content can be loaded, the server can specify which protocols are allowed to be used; for example (and ideally, from a security standpoint), a server can specify that all content must be loaded using HTTPS. A complete data transmission security strategy includes not only enforcing HTTPS for data transfer, but also marking all &lt;a href=&quot;cookies&quot;&gt;cookies with the &lt;code&gt;secure&lt;/code&gt; attribute&lt;/a&gt; and providing automatic redirects from HTTP pages to their HTTPS counterparts. Sites may also use the &lt;a href=&quot;headers/strict-transport-security&quot;&gt;&lt;code&gt;Strict-Transport-Security&lt;/code&gt;&lt;/a&gt; HTTP header to ensure that browsers connect to them only over an encrypted channel&lt;strong&gt;.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad2112dae19cc7c327768fb0823cb8c15ee2b0a2" translate="yes" xml:space="preserve">
          <source>In addition to restricting the domains from which content can be loaded, the server can specify which protocols are allowed to be used; for example (and ideally, from a security standpoint), a server can specify that all content must be loaded using HTTPS. A complete data transmission security strategy includes not only enforcing HTTPS for data transfer, but also marking all &lt;a href=&quot;cookies&quot;&gt;cookies with the secure flag&lt;/a&gt; and providing automatic redirects from HTTP pages to their HTTPS counterparts. Sites may also use the &lt;a href=&quot;headers/strict-transport-security&quot;&gt;&lt;code&gt;Strict-Transport-Security&lt;/code&gt;&lt;/a&gt; HTTP header to ensure that browsers connect to them only over an encrypted channel&lt;strong&gt;.&lt;/strong&gt;</source>
          <target state="translated">Помимо ограничения доменов, из которых может быть загружен контент, сервер может указать, какие протоколы разрешено использовать; например (и в идеале с точки зрения безопасности) сервер может указать, что весь контент должен загружаться с использованием HTTPS. Полная стратегия безопасности передачи данных включает в себя не только принудительное использование HTTPS для передачи данных, но также пометку всех &lt;a href=&quot;cookies&quot;&gt;файлов cookie с помощью флажка безопасности&lt;/a&gt; и обеспечение автоматического перенаправления со страниц HTTP на их аналоги HTTPS. Сайты также могут использовать HTTP-заголовок &lt;a href=&quot;headers/strict-transport-security&quot;&gt; &lt;code&gt;Strict-Transport-Security&lt;/code&gt; ,&lt;/a&gt; чтобы браузеры подключались к ним только по зашифрованному каналу &lt;strong&gt;.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8cc3248a0c52202ec569f1b1018d21d9a3d88bcc" translate="yes" xml:space="preserve">
          <source>In addition to the general status codes possible, the following
   status codes have specific applicability to COPY:

   201 (Created) - The source resource was successfully copied.  The
   COPY operation resulted in the creation of a new resource.

   204 (No Content) - The source resource was successfully copied to a
   preexisting destination resource.

   207 (Multi-Status) - Multiple resources were to be affected by the
   COPY, but errors on some of them prevented the operation from taking
   place.  Specific error messages, together with the most appropriate
   of the source and destination URLs, appear in the body of the multi-
   status response.  For example, if a destination resource was locked
   and could not be overwritten, then the destination resource URL
   appears with the 423 (Locked) status.

   403 (Forbidden) - The operation is forbidden.  A special case for
   COPY could be that the source and destination resources are the same
   resource.

   409 (Conflict) - A resource cannot be created at the destination
   until one or more intermediate collections have been created.  The
   server MUST NOT create those intermediate collections automatically.

   412 (Precondition Failed) - A precondition header check failed, e.g.,
   the Overwrite header is &quot;F&quot; and the destination URL is already mapped
   to a resource. 

   423 (Locked) - The destination resource, or resource within the
   destination collection, was locked.  This response SHOULD contain the
   'lock-token-submitted' precondition element.

   502 (Bad Gateway) - This may occur when the destination is on another
   server, repository, or URL namespace.  Either the source namespace
   does not support copying to the destination namespace, or the
   destination namespace refuses to accept the resource.  The client may
   wish to try GET/PUT and PROPFIND/PROPPATCH instead.

   507 (Insufficient Storage) - The destination resource does not have
   sufficient space to record the state of the resource after the
   execution of this method.</source>
          <target state="translated">В дополнение к общим возможным кодам статуса,следующие коды статуса имеют специфическую применимость к COPY:201 (Создан)-Исходный ресурс был успешно скопирован.В результате работы COPY был создан новый ресурс.204 (Содержания нет)-Исходный ресурс был успешно скопирован на уже существующий ресурс-получатель.207 (Мульти-статус)-COPY должен был воздействовать на несколько ресурсов,но ошибки на некоторых из них не позволили выполнить операцию.Конкретные сообщения об ошибках вместе с наиболее подходящими URL-адресами источника и назначения появляются в теле ответа на множественный статус.Например,если ресурс назначения был заблокирован и не мог быть перезаписан,то URL ресурса назначения появляется со статусом 423 (Заблокирован).403 (Запрещено)-операция запрещена.Особым случаем для COPY может быть то,что ресурсы источника и назначения являются одним и тем же ресурсом.409 (Конфликт)-Ресурс не может быть создан по назначению,пока не будет создана одна или несколько промежуточных коллекций.Сервер НЕ ДОЛЖЕН автоматически создавать эти промежуточные коллекции.412 (Не удалось выполнить предварительное условие)-Проверка заголовка предварительного условия не прошла успешно,например,заголовок &quot;Перезапись&quot; имеет значение &quot;F&quot;,а URL назначения уже привязан к ресурсу.423 (Заблокировано)-Ресурс назначения или ресурс из коллекции назначения был заблокирован.Этот ответ SHOULD содержит элемент предусловия 'lock-token-submitted'.502 (Плохой шлюз)-Это может произойти,когда получатель находится на другом сервере,репозитории или пространстве имён URL.Либо пространство имён источника не поддерживает копирование в пространство имён назначения,либо пространство имён назначения отказывается принять ресурс.Клиент может захотеть попробовать GET/PUT и PROPFIND/PROPPATCH вместо этого.507 (Недостаточное хранилище)-Ресурс назначения не имеет достаточного пространства для записи состояния ресурса после выполнения этого метода.</target>
        </trans-unit>
        <trans-unit id="ee897ff0362cf4245c71fb432f38bd23904179b3" translate="yes" xml:space="preserve">
          <source>In addition to the general status codes possible, the following
   status codes have specific applicability to LOCK:

   200 (OK) - The LOCK request succeeded and the value of the DAV:
   lockdiscovery property is included in the response body.

   201 (Created) - The LOCK request was to an unmapped URL, the request
   succeeded and resulted in the creation of a new resource, and the
   value of the DAV:lockdiscovery property is included in the response
   body. 

   409 (Conflict) - A resource cannot be created at the destination
   until one or more intermediate collections have been created.  The
   server MUST NOT create those intermediate collections automatically.

   423 (Locked), potentially with 'no-conflicting-lock' precondition
   code - There is already a lock on the resource that is not compatible
   with the requested lock (see lock compatibility table above).

   412 (Precondition Failed), with 'lock-token-matches-request-uri'
   precondition code - The LOCK request was made with an If header,
   indicating that the client wishes to refresh the given lock.
   However, the Request-URI did not fall within the scope of the lock
   identified by the token.  The lock may have a scope that does not
   include the Request-URI, or the lock could have disappeared, or the
   token may be invalid.</source>
          <target state="translated">В дополнение к общим возможным кодам статуса,следующие коды статуса имеют специфическую применимость к БЛОКИРОВКЕ:200 (OK)-Запрос на БЛОКИРОВКУ удался,а значение свойства DAV:блокировка-раскрытие включено в тело ответа.201 (Создан)-Запрос на БЛОКИРОВКУ был к нераскрытому URL,запрос удался и привел к созданию нового ресурса,а значение свойства DAV:lockdiscovery включено в тело ответа.409 (Конфликт)-Ресурс не может быть создан по назначению,пока не будет создана одна или несколько промежуточных коллекций.Сервер НЕ ДОЛЖЕН автоматически создавать эти промежуточные коллекции.423 (Заблокирован),потенциально с кодом предусловия 'no-conflicting-lock'-На ресурсе уже есть блокировка,не совместимая с запрошенной блокировкой (см.таблицу совместимости блокировок выше).412 (Precondition Failed),с кодом предусловия 'lock-token-matches-request-uri'-Запрос на блокировку был сделан с заголовком If,указывающим,что клиент хочет обновить данную блокировку.Однако запрос Request-URI не подпадал под действие блокировки,идентифицируемой маркером.Замок может иметь рамки,не включающие Запрос-URI,или замок мог исчезнуть,или же токен может быть недействительным.</target>
        </trans-unit>
        <trans-unit id="a26231e92d79838933371916af08188230312c93" translate="yes" xml:space="preserve">
          <source>In addition to the general status codes possible, the following
   status codes have specific applicability to MKCOL:

   201 (Created) - The collection was created.

   403 (Forbidden) - This indicates at least one of two conditions: 1)
   the server does not allow the creation of collections at the given
   location in its URL namespace, or 2) the parent collection of the
   Request-URI exists but cannot accept members.

   405 (Method Not Allowed) - MKCOL can only be executed on an unmapped
   URL.

   409 (Conflict) - A collection cannot be made at the Request-URI until
   one or more intermediate collections have been created.  The server
   MUST NOT create those intermediate collections automatically.

   415 (Unsupported Media Type) - The server does not support the
   request body type (although bodies are legal on MKCOL requests, since
   this specification doesn't define any, the server is likely not to
   support any given body type).

   507 (Insufficient Storage) - The resource does not have sufficient
   space to record the state of the resource after the execution of this
   method.</source>
          <target state="translated">В дополнение к возможным общим кодам статусов,следующие коды статусов имеют специфическую применимость для MKCOL:201 (Создано)-Коллекция была создана.403 (Запрещено)-Это указывает,по крайней мере,на одно из двух условий:1)сервер не позволяет создавать коллекции в заданном месте в пространстве имён URL,или 2)родительская коллекция Request-URI существует,но не может принимать членов.405 (Метод не разрешен)-MKCOL может быть выполнен только на не отображенном URL.409 (Конфликт)-Коллекция Request-URI не может быть выполнена в Request-URI до тех пор,пока не будет создана одна или несколько промежуточных коллекций.Сервер НЕ ДОЛЖЕН создавать эти промежуточные коллекции автоматически.415 (Неподдерживаемый тип носителя)-Сервер не поддерживает тип тела запроса (хотя тела легальны на запросы MKCOL,так как эта спецификация не определяет никаких,сервер,скорее всего,не будет поддерживать любой данный тип тела).507 (Недостаточное хранилище)-Ресурс не имеет достаточного места для записи состояния ресурса после выполнения данного метода.</target>
        </trans-unit>
        <trans-unit id="abd88f2d1d87ef7a1f30945f9393736f0e9efad8" translate="yes" xml:space="preserve">
          <source>In addition to the general status codes possible, the following
   status codes have specific applicability to MOVE:

   201 (Created) - The source resource was successfully moved, and a new
   URL mapping was created at the destination.

   204 (No Content) - The source resource was successfully moved to a
   URL that was already mapped.

   207 (Multi-Status) - Multiple resources were to be affected by the
   MOVE, but errors on some of them prevented the operation from taking
   place.  Specific error messages, together with the most appropriate
   of the source and destination URLs, appear in the body of the multi-
   status response.  For example, if a source resource was locked and
   could not be moved, then the source resource URL appears with the 423
   (Locked) status.

   403 (Forbidden) - Among many possible reasons for forbidding a MOVE
   operation, this status code is recommended for use when the source
   and destination resources are the same.

   409 (Conflict) - A resource cannot be created at the destination
   until one or more intermediate collections have been created.  The
   server MUST NOT create those intermediate collections automatically.
   Or, the server was unable to preserve the behavior of the live
   properties and still move the resource to the destination (see
   'preserved-live-properties' postcondition).

   412 (Precondition Failed) - A condition header failed.  Specific to
   MOVE, this could mean that the Overwrite header is &quot;F&quot; and the
   destination URL is already mapped to a resource.

   423 (Locked) - The source or the destination resource, the source or
   destination resource parent, or some resource within the source or
   destination collection, was locked.  This response SHOULD contain the
   'lock-token-submitted' precondition element.

   502 (Bad Gateway) - This may occur when the destination is on another
   server and the destination server refuses to accept the resource.
   This could also occur when the destination is on another sub-section
   of the same server namespace.</source>
          <target state="translated">В дополнение к общим возможным кодам статуса,следующие коды статуса имеют специфическую применимость к MOVE:201 (Создан)-Исходный ресурс был успешно перемещен,и в месте назначения было создано новое отображение URL-адреса.204 (Содержания нет)-Исходный ресурс был успешно перемещен на уже отображенный URL.207 (Multi-Status)-MOVE должен был воздействовать на несколько ресурсов,но ошибки на некоторых из них не позволили выполнить операцию.Конкретные сообщения об ошибках вместе с наиболее подходящими URL-адресами источника и назначения появляются в теле ответа на множественный статус.Например,если исходный ресурс был заблокирован и не мог быть перемещен,то URL исходного ресурса появляется со статусом 423 (Заблокирован).403 (Запрещенный)-Среди многих возможных причин запрета работы MOVE этот код статуса рекомендуется использовать,когда ресурсы источника и назначения одинаковы.409 (Конфликт)-Ресурс не может быть создан по назначению,пока не будет создана одна или несколько промежуточных коллекций.Сервер НЕ ДОЛЖЕН автоматически создавать эти промежуточные коллекции.Или же сервер не смог сохранить поведение живых свойств и все равно переместить ресурс к месту назначения (см.постусловие &quot;сохраненные свойства&quot;).412 (Precondition Failed)-Не удалось создать заголовок условия.Специально для MOVE это может означать,что заголовок &quot;Overwrite&quot; равен &quot;F&quot;,а URL назначения уже привязан к ресурсу.423 (Заблокировано)-Ресурс-источник или ресурс-получатель,родительский ресурс-источник или ресурс-получатель,или какой-то ресурс из коллекции-источник или ресурс-получатель был заблокирован.Этот ответ SHOULD содержит элемент предварительных условий 'lock-token-submitted'.502 (Плохой шлюз)-Это может произойти,когда получатель находится на другом сервере,а сервер-получатель отказывается принять ресурс.Это также может произойти,когда получатель находится на другом подразделе того же пространства имен сервера.</target>
        </trans-unit>
        <trans-unit id="4629e09c06eba402676b36f28c77b568459e792b" translate="yes" xml:space="preserve">
          <source>In addition to the general status codes possible, the following
   status codes have specific applicability to UNLOCK:

   204 (No Content) - Normal success response (rather than 200 OK, since
   200 OK would imply a response body, and an UNLOCK success response
   does not normally contain a body).

   400 (Bad Request) - No lock token was provided.

   403 (Forbidden) - The currently authenticated principal does not have
   permission to remove the lock.

   409 (Conflict), with 'lock-token-matches-request-uri' precondition -
   The resource was not locked, or the request was made to a Request-URI
   that was not within the scope of the lock.</source>
          <target state="translated">В дополнение к возможным общим кодам статуса,следующие коды статуса имеют специфическую применимость к UNLOCK:204 (Без содержания)-Нормальная реакция на успех (а не 200 ОК,поскольку 200 ОК подразумевает орган ответа,а реакция на успех UNLOCK,как правило,не содержит тела).400 (Плохой запрос)-Токен блокировки не был предоставлен.403 (Запрещенный)-Нынешний аутентифицированный директор не имеет права снимать блокировку.409 (Конфликт),с предварительным условием 'lock-token-matches-request-uri'-Ресурс не был заблокирован,или запрос был сделан к Request-URI,который не подпадал под действие блокировки.</target>
        </trans-unit>
        <trans-unit id="9e2b59b56283e49cf87a4756ab287a316a572fba" translate="yes" xml:space="preserve">
          <source>In addition to these large extensions, numerous other headers have been added, sometimes experimentally only. Notable headers are Do Not Track (&lt;a href=&quot;../headers/dnt&quot;&gt;&lt;code&gt;DNT&lt;/code&gt;&lt;/a&gt;) header to control privacy, &lt;a href=&quot;../headers/x-frame-options&quot;&gt;&lt;code&gt;X-Frame-Options&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;../headers/upgrade-insecure-requests&quot;&gt;&lt;code&gt;Upgrade-Insecure-Requests&lt;/code&gt;&lt;/a&gt; but many more exist.</source>
          <target state="translated">В дополнение к этим большим расширениям было добавлено множество других заголовков, иногда только экспериментально. Известными заголовками являются заголовок Do Not Track ( &lt;a href=&quot;../headers/dnt&quot;&gt; &lt;code&gt;DNT&lt;/code&gt; &lt;/a&gt; ) для управления конфиденциальностью, &lt;a href=&quot;../headers/x-frame-options&quot;&gt; &lt;code&gt;X-Frame-Options&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;../headers/upgrade-insecure-requests&quot;&gt; &lt;code&gt;Upgrade-Insecure-Requests&lt;/code&gt; ,&lt;/a&gt; но существует еще много других.</target>
        </trans-unit>
        <trans-unit id="3b131cf2fd0e3eeeeb8387fc020ce526e5bb2a21" translate="yes" xml:space="preserve">
          <source>In addition to these usual redirections, there are two specific redirections. The &lt;a href=&quot;status/304&quot;&gt;&lt;code&gt;304&lt;/code&gt;&lt;/a&gt; (Not Modified) redirects a page to the locally cached copy (that was stale), and &lt;a href=&quot;status/300&quot;&gt;&lt;code&gt;300&lt;/code&gt;&lt;/a&gt; (Multiple Choice) is a manual redirection: the body, presented by the browser as a Web page, lists the possible redirections and the user clicks on one to select it.</source>
          <target state="translated">В дополнение к этим обычным перенаправлениям существует два особых перенаправления. &lt;a href=&quot;status/304&quot;&gt; &lt;code&gt;304&lt;/code&gt; &lt;/a&gt; (Not Modified) перенаправляет страницу локально сохраненную копию (это было несвежим) и &lt;a href=&quot;status/300&quot;&gt; &lt;code&gt;300&lt;/code&gt; &lt;/a&gt; (множественный выбор) является ручной Перенаправление: корпус, представленный браузером как веб - страницы, списки возможных переназначения и пользователь щелкает по одному, чтобы выбрать его.</target>
        </trans-unit>
        <trans-unit id="d635ae50b7ab2f51933a439ac178e121013926c5" translate="yes" xml:space="preserve">
          <source>In addition to these, there is an experimental proposal to add more headers to the list of available headers, called &lt;em&gt;client hints&lt;/em&gt;. Client hints advertise what kind of device the user agent runs on (for example, if it is a desktop computer or a mobile device).</source>
          <target state="translated">В дополнение к этому, есть экспериментальное предложение добавить больше заголовков в список доступных заголовков, называемых &lt;em&gt;подсказками клиента&lt;/em&gt; . Подсказки клиента рекламируют, на каком устройстве работает пользовательский агент (например, если это настольный компьютер или мобильное устройство).</target>
        </trans-unit>
        <trans-unit id="6be73b5e595cfda1b190216eea697e1e081f8638" translate="yes" xml:space="preserve">
          <source>In addition, cookies with the &lt;code&gt;__Host-&lt;/code&gt; prefix must have a path of &lt;code&gt;/&lt;/code&gt; (meaning any path at the host) and must not have a &lt;code&gt;Domain&lt;/code&gt; attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="452c8d06b2f6623a8650c4fa111cc03980282cde" translate="yes" xml:space="preserve">
          <source>In an HTTP URL, the first substring that follows the initial &lt;code&gt;http://&lt;/code&gt; or &lt;code&gt;https://&lt;/code&gt; is called the domain name. This domain name is hosted on a server where the document resides.</source>
          <target state="translated">В URL-адресе HTTP первая подстрока, следующая за начальным &lt;code&gt;http://&lt;/code&gt; или &lt;code&gt;https://&lt;/code&gt; , называется именем домена. Это доменное имя размещено на сервере, на котором находится документ.</target>
        </trans-unit>
        <trans-unit id="c6a374d59d054a3737c0b7d32f324c37547cb7c5" translate="yes" xml:space="preserve">
          <source>In both cases it's clear, conditional requests are a fundamental feature behind the Web.</source>
          <target state="translated">В обоих случаях понятно,что условные запросы являются фундаментальной особенностью Сети.</target>
        </trans-unit>
        <trans-unit id="b7d3d4c052ce3a72008b8168b5362d9899fce376" translate="yes" xml:space="preserve">
          <source>In both cases, the user can't do much (unless a corruption is happening on their side, like a mismatch of cache or cookies).</source>
          <target state="translated">В обоих случаях пользователь не может многого добиться (если только на его стороне не происходит повреждение,например,несовпадение кэша или куки-файлов).</target>
        </trans-unit>
        <trans-unit id="891082881f414bc74764d1a5ea2c1afe84e85946" translate="yes" xml:space="preserve">
          <source>In browsers that support &lt;a href=&quot;content-security-policy/report-to&quot;&gt;&lt;code&gt;report-to&lt;/code&gt;&lt;/a&gt;, the &lt;code&gt;&lt;strong&gt;report-uri&lt;/strong&gt;&lt;/code&gt; directive will be ignored.</source>
          <target state="translated">В браузерах, поддерживающих &lt;a href=&quot;content-security-policy/report-to&quot;&gt; &lt;code&gt;report-to&lt;/code&gt; &lt;/a&gt; , директива &lt;code&gt;&lt;strong&gt;report-uri&lt;/strong&gt;&lt;/code&gt; будет игнорироваться.</target>
        </trans-unit>
        <trans-unit id="99d503921123b6885340a4372a8a6b0ea5626e01" translate="yes" xml:space="preserve">
          <source>In browsers that support &lt;a href=&quot;report-to&quot;&gt;&lt;code&gt;report-to&lt;/code&gt;&lt;/a&gt;, the &lt;code&gt;&lt;strong&gt;report-uri&lt;/strong&gt;&lt;/code&gt; directive will be ignored.</source>
          <target state="translated">В браузерах, поддерживающих &lt;a href=&quot;report-to&quot;&gt; &lt;code&gt;report-to&lt;/code&gt; &lt;/a&gt; , директива &lt;code&gt;&lt;strong&gt;report-uri&lt;/strong&gt;&lt;/code&gt; будет игнорироваться.</target>
        </trans-unit>
        <trans-unit id="7c5dd7c6036bb963177d127d1d450d8f1e98dec9" translate="yes" xml:space="preserve">
          <source>In case of a range request that is out of bounds (none of the range values overlap the extent of the resource, i.e first-byte-pos of all ranges is greater than the resource length), the server responds with a &lt;a href=&quot;status/416&quot;&gt;&lt;code&gt;416&lt;/code&gt;&lt;/a&gt;&lt;code&gt;Requested Range Not Satisfiable&lt;/code&gt; status.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2eeb5d5719bfe66a723ed9a7de204a618f713d1f" translate="yes" xml:space="preserve">
          <source>In case of a range request that is out of bounds (range values overlap the extent of the resource), the server responds with a &lt;a href=&quot;status/416&quot;&gt;&lt;code&gt;416&lt;/code&gt;&lt;/a&gt;&lt;code&gt;Requested Range Not Satisfiable&lt;/code&gt; status.</source>
          <target state="translated">В случае запроса диапазона, который выходит за границы (значения диапазона перекрывают экстент ресурса), сервер отвечает статусом &lt;a href=&quot;status/416&quot;&gt; &lt;code&gt;416&lt;/code&gt; &lt;/a&gt; &lt;code&gt;Requested Range Not Satisfiable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fe1bbb314fd4c01d67a4a1927444c74b1ecc3b84" translate="yes" xml:space="preserve">
          <source>In case of a successful range request, the &lt;a href=&quot;status/206&quot;&gt;&lt;code&gt;206&lt;/code&gt;&lt;/a&gt;&lt;code&gt;Partial Content&lt;/code&gt; status is sent back from a server.</source>
          <target state="translated">В случае успешного запроса диапазона, статус &lt;a href=&quot;status/206&quot;&gt; &lt;code&gt;206&lt;/code&gt; &lt;/a&gt; &lt;code&gt;Partial Content&lt;/code&gt; отправляется обратно с сервера.</target>
        </trans-unit>
        <trans-unit id="aedd7950da9e5893c670001b73efaf8f02facdd1" translate="yes" xml:space="preserve">
          <source>In case of no support of range requests, the &lt;a href=&quot;status/200&quot;&gt;&lt;code&gt;200&lt;/code&gt;&lt;/a&gt;&lt;code&gt;OK&lt;/code&gt; status is sent back from a server.</source>
          <target state="translated">В случае отсутствия поддержки запросов диапазона, статус &lt;a href=&quot;status/200&quot;&gt; &lt;code&gt;200&lt;/code&gt; &lt;/a&gt; &lt;code&gt;OK&lt;/code&gt; отправляется обратно с сервера.</target>
        </trans-unit>
        <trans-unit id="73542c18d725b27c3411be51053fdddc86d53fc0" translate="yes" xml:space="preserve">
          <source>In cases of redirection, the HTTP method used to make the new request to fetch the page pointed to by &lt;code&gt;Location&lt;/code&gt; depends of the original method and of the kind of redirection:</source>
          <target state="translated">В случаях перенаправления метод HTTP, используемый для создания нового запроса на выборку страницы, на которую указывает &lt;code&gt;Location&lt;/code&gt; , зависит от исходного метода и типа перенаправления:</target>
        </trans-unit>
        <trans-unit id="400b65ba68994eae44783d4597cd6426d0ef1020" translate="yes" xml:space="preserve">
          <source>In cases of resource creation, it indicates the URL to the newly created resource.</source>
          <target state="translated">В случае создания ресурса,он указывает URL к вновь созданному ресурсу.</target>
        </trans-unit>
        <trans-unit id="83f79ebc079d3c0c0d4572bcf4378eb80a9d0af2" translate="yes" xml:space="preserve">
          <source>In client-server protocols, it is the client which establishes the connection. Opening a connection in HTTP means initiating a connection in the underlying transport layer, usually this is TCP.</source>
          <target state="translated">В протоколах клиент-сервер именно клиент устанавливает соединение.Открытие соединения в HTTP означает инициирование соединения на базовом транспортном уровне,обычно это TCP.</target>
        </trans-unit>
        <trans-unit id="8c10db7321992e2a8f17abad3e89745464a5099e" translate="yes" xml:space="preserve">
          <source>In client-server protocols, like HTTP, sessions consist of three phases:</source>
          <target state="translated">В протоколах клиент-сервер,таких как HTTP,сеансы состоят из трех фаз:</target>
        </trans-unit>
        <trans-unit id="3f9a70e3c7b55315e54b4db55bc22d039b7ec58c" translate="yes" xml:space="preserve">
          <source>In conjunction with a range request with a &lt;a href=&quot;if-range&quot;&gt;&lt;code&gt;If-Range&lt;/code&gt;&lt;/a&gt; header, it can be used to ensure that the new fragment requested comes from an unmodified document.</source>
          <target state="translated">В сочетании с запросом диапазона с заголовком &lt;a href=&quot;if-range&quot;&gt; &lt;code&gt;If-Range&lt;/code&gt; &lt;/a&gt; его можно использовать, чтобы гарантировать, что новый запрошенный фрагмент исходит из неизмененного документа.</target>
        </trans-unit>
        <trans-unit id="e9ab6733bb319a29784b72221a4697f634e9bdd1" translate="yes" xml:space="preserve">
          <source>In conjunction with non-&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/safe&quot;&gt;safe&lt;/a&gt; methods, like &lt;a href=&quot;../methods/post&quot;&gt;&lt;code&gt;POST&lt;/code&gt;&lt;/a&gt;, it can be used to implement an &lt;a href=&quot;https://en.wikipedia.org/wiki/Optimistic_concurrency_control&quot;&gt;optimistic concurrency control&lt;/a&gt;, like done by some wikis: editions are rejected if the stored document has been modified since the original has been retrieved.</source>
          <target state="translated">В сочетании с &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/safe&quot;&gt;небезопасными&lt;/a&gt; методами, такими как &lt;a href=&quot;../methods/post&quot;&gt; &lt;code&gt;POST&lt;/code&gt; &lt;/a&gt; , его можно использовать для реализации &lt;a href=&quot;https://en.wikipedia.org/wiki/Optimistic_concurrency_control&quot;&gt;оптимистичного управления параллелизмом&lt;/a&gt; , как это делается в некоторых вики: редакции отклоняются, если сохраненный документ был изменен с момента получения оригинала.</target>
        </trans-unit>
        <trans-unit id="d493128c05add224d7034b297ae0a98230512595" translate="yes" xml:space="preserve">
          <source>In contrast to the previous &lt;code&gt;Accept-*&lt;/code&gt; headers, which are sent by the client, the &lt;a href=&quot;headers/vary&quot;&gt;&lt;code&gt;Vary&lt;/code&gt;&lt;/a&gt; HTTP header is sent by the web server in its response. It indicates the list of headers used by the server during the server-driven content negotiation phase. The header is needed in order to inform the cache of the decision criteria so that it can reproduce it, allowing the cache to be functional while preventing serving erroneous content to the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a08f16f3855aa1f6d298ed8409da0b0dbfdf4c6d" translate="yes" xml:space="preserve">
          <source>In early 2018, two side-channel hardware vulnerabilities known as &lt;em&gt;Meltdown&lt;/em&gt; and &lt;em&gt;Spectre&lt;/em&gt; were disclosed. These vulnerabilities allowed sensitive data disclosure due to a race condition which arose as part of speculative execution functionality, designed to improve performance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0701242525f77ea41dea13da7a10fb9576b0aa7f" translate="yes" xml:space="preserve">
          <source>In early versions of HTTP/1.1, a default character encoding was defined: ISO-8859-1. This is no longer recommended, and now each content-type may have its own default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbebaf8ae5ad813c6e5579cad204cc0afeb3f2a6" translate="yes" xml:space="preserve">
          <source>In early versions of HTTP/1.1, a default charset (&lt;code&gt;ISO-8859-1&lt;/code&gt;) was defined. This is no more the case and now each content type may have its own default.</source>
          <target state="translated">В ранних версиях HTTP / 1.1 была определена кодировка по умолчанию ( &lt;code&gt;ISO-8859-1&lt;/code&gt; ). Это больше не так, и теперь каждый тип контента может иметь собственное значение по умолчанию.</target>
        </trans-unit>
        <trans-unit id="76b87dd4cff176256a7ffd91b11051848e914ccf" translate="yes" xml:space="preserve">
          <source>In general, you don't need to do anything to manage prefetching. However, the user may wish to disable prefetching. On Firefox, this can be done by setting the &lt;code&gt;network.dns.disablePrefetch&lt;/code&gt; preference to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">В общем, вам не нужно ничего делать для управления предварительной выборкой. Однако пользователь может пожелать отключить предварительную выборку. В Firefox это можно сделать, установив для параметра &lt;code&gt;network.dns.disablePrefetch&lt;/code&gt; значение &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="663b0e3712ad97e7d9fa6a474afdbfa58ef61280" translate="yes" xml:space="preserve">
          <source>In many cases, it is caused by a browser plugin (e.g. an ad blocker or privacy protector) blocking the request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="674099d2a81c401b8baaba7396a1a690e7a583af" translate="yes" xml:space="preserve">
          <source>In most cases, the policy-controlled features represent functionality that when used will negatively impact the user experience. To avoid breaking existing web content, the default for such policy-controlled features is to allow the functionality to be used by all origins. Best practices are then enforced by using policies that disable the policy-controlled features. For more details see &quot;Enforcing best practices for good user experiences&quot;.</source>
          <target state="translated">В большинстве случаев функции,контролируемые политикой,представляют собой функциональность,которая при их использовании отрицательно влияет на работу пользователей.Чтобы избежать взлома существующего веб контента,по умолчанию такие функции,контролируемые политикой,позволяют использовать эту функциональность для всех источников.Лучшие методики затем применяются с помощью политик,которые отключают функции,контролируемые политикой.Для дополнительной информации смотрите раздел &quot;Внедрение лучших методик для хорошего пользовательского опыта&quot;.</target>
        </trans-unit>
        <trans-unit id="5408e40c9a5920880e7570b54ae2fe87a76b064d" translate="yes" xml:space="preserve">
          <source>In opposition to the previous &lt;code&gt;Accept-*&lt;/code&gt; headers which are sent by the client, the &lt;a href=&quot;headers/vary&quot;&gt;&lt;code&gt;Vary&lt;/code&gt;&lt;/a&gt; HTTP header is sent by the web server in its response. It indicates the list of headers used by the server during the server-driven content negotiation phase. The header is needed in order to inform the cache of the decision criteria so that it can reproduce it, allowing the cache to be functional while preventing serving erroneous content to the user.</source>
          <target state="translated">В &lt;code&gt;Accept-*&lt;/code&gt; от предыдущих заголовков Accept- *, которые отправлялись клиентом, HTTP-заголовок &lt;a href=&quot;headers/vary&quot;&gt; &lt;code&gt;Vary&lt;/code&gt; &lt;/a&gt; отправляется веб-сервером в своем ответе. Он указывает список заголовков, используемых сервером во время фазы согласования содержимого, управляемого сервером. Заголовок необходим для того, чтобы информировать кэш о критериях принятия решения, чтобы он мог его воспроизвести, позволяя кешу работать, предотвращая при этом обслуживание ошибочного содержимого для пользователя.</target>
        </trans-unit>
        <trans-unit id="badfc139e7e8ad666da707d60e16523bcd32cfa3" translate="yes" xml:space="preserve">
          <source>In order to decide whether a response is fresh or stale, we need to
   compare its freshness lifetime to its age. The age is calculated as
   described in &lt;a href=&quot;#section-13.2.3&quot;&gt;section 13.2.3&lt;/a&gt;; this section describes how to calculate
   the freshness lifetime, and to determine if a response has expired.
   In the discussion below, the values can be represented in any form
   appropriate for arithmetic operations.

   We use the term &quot;expires_value&quot; to denote the value of the Expires
   header. We use the term &quot;max_age_value&quot; to denote an appropriate
   value of the number of seconds carried by the &quot;max-age&quot; directive of
   the Cache-Control header in a response (see &lt;a href=&quot;#section-14.9.3&quot;&gt;section 14.9.3&lt;/a&gt;).

   The max-age directive takes priority over Expires, so if max-age is
   present in a response, the calculation is simply:

      freshness_lifetime = max_age_value

   Otherwise, if Expires is present in the response, the calculation is:

      freshness_lifetime = expires_value - date_value

   Note that neither of these calculations is vulnerable to clock skew,
   since all of the information comes from the origin server.

   If none of Expires, Cache-Control: max-age, or Cache-Control: s-
   maxage (see &lt;a href=&quot;#section-14.9.3&quot;&gt;section 14.9.3&lt;/a&gt;) appears in the response, and the response
   does not include other restrictions on caching, the cache MAY compute
   a freshness lifetime using a heuristic. The cache MUST attach Warning
   113 to any response whose age is more than 24 hours if such warning
   has not already been added.

   Also, if the response does have a Last-Modified time, the heuristic
   expiration value SHOULD be no more than some fraction of the interval
   since that time. A typical setting of this fraction might be 10%.

   The calculation to determine if a response has expired is quite
   simple:

      response_is_fresh = (freshness_lifetime &amp;gt; current_age)</source>
          <target state="translated">Чтобы решить, является ли ответ свежим или устаревшим, нам нужно сравнить время его свежести с возрастом. Возраст рассчитывается, как описано в &lt;a href=&quot;#section-13.2.3&quot;&gt;разделе 13.2.3&lt;/a&gt; ; в этом разделе описывается, как рассчитать срок действия свежести и определить, истек ли срок ответа. В нижеследующем обсуждении значения могут быть представлены в любой форме, подходящей для арифметических операций. Мы используем термин &amp;laquo;expires_value&amp;raquo; для обозначения значения заголовка Expires. Мы используем термин &amp;laquo;max_age_value&amp;raquo; для обозначения подходящего значения количества секунд, переносимых директивой &amp;laquo;max-age&amp;raquo; заголовка Cache-Control в ответе (см. &lt;a href=&quot;#section-14.9.3&quot;&gt;Раздел 14.9.3.&lt;/a&gt;). Директива max-age имеет приоритет над Expires, поэтому, если max-age присутствует в ответе, вычисление просто: freshness_lifetime = max_age_value В противном случае, если Expires присутствует в ответе, вычисление будет следующим: freshness_lifetime = expires_value - date_value Обратите внимание, что ни один из этих расчетов не подвержен перекосу часов, поскольку вся информация поступает с исходного сервера. Если ни один из Expires не указан, Cache-Control: max-age или Cache-Control: s- maxage (см. &lt;a href=&quot;#section-14.9.3&quot;&gt;Раздел 14.9.3&lt;/a&gt;) появляется в ответе, и ответ не включает других ограничений на кэширование, кеш МОЖЕТ вычислить время жизни актуальности с помощью эвристики. Кэш ДОЛЖЕН прикрепить Предупреждение 113 к любому ответу, возраст которого превышает 24 часа, если такое предупреждение еще не было добавлено. Кроме того, если у ответа действительно есть время последнего изменения, эвристическое значение срока действия ДОЛЖНО быть не более некоторой доли интервала с этого времени. Типичная установка этой доли может составлять 10%. Расчет, позволяющий определить, истек ли срок ответа, довольно прост: response_is_fresh = (freshness_lifetime&amp;gt; current_age)</target>
        </trans-unit>
        <trans-unit id="d03e66527d9041fe3d196b0602d934ec30eb980d" translate="yes" xml:space="preserve">
          <source>In order to fix this problem, Mozilla changed the behavior of loading resource: URIs in &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=863246&quot;&gt;bug 863246&lt;/a&gt;, which landed in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Firefox/Releases/57&quot;&gt;Firefox 57 (Quantum)&lt;/a&gt;.</source>
          <target state="translated">Чтобы решить эту проблему, Mozilla изменила поведение загрузки ресурса: URI в &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=863246&quot;&gt;ошибке 863246&lt;/a&gt; , которая возникла в &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Firefox/Releases/57&quot;&gt;Firefox 57 (Quantum)&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e3cacbc626f64e05a875aafa03b69d5da76a91ff" translate="yes" xml:space="preserve">
          <source>In order to know if a cached entry is fresh, a cache needs to know if
   its age exceeds its freshness lifetime. We discuss how to calculate
   the latter in &lt;a href=&quot;#section-13.2.4&quot;&gt;section 13.2.4&lt;/a&gt;; this section describes how to calculate
   the age of a response or cache entry.

   In this discussion, we use the term &quot;now&quot; to mean &quot;the current value
   of the clock at the host performing the calculation.&quot; Hosts that use
   HTTP, but especially hosts running origin servers and caches, SHOULD
   use NTP [&lt;a href=&quot;#ref-28&quot;&gt;28&lt;/a&gt;] or some similar protocol to synchronize their clocks to
   a globally accurate time standard. 

   HTTP/1.1 requires origin servers to send a Date header, if possible,
   with every response, giving the time at which the response was
   generated (see &lt;a href=&quot;#section-14.18&quot;&gt;section 14.18&lt;/a&gt;). We use the term &quot;date_value&quot; to denote
   the value of the Date header, in a form appropriate for arithmetic
   operations.

   HTTP/1.1 uses the Age response-header to convey the estimated age of
   the response message when obtained from a cache. The Age field value
   is the cache's estimate of the amount of time since the response was
   generated or revalidated by the origin server.

   In essence, the Age value is the sum of the time that the response
   has been resident in each of the caches along the path from the
   origin server, plus the amount of time it has been in transit along
   network paths.

   We use the term &quot;age_value&quot; to denote the value of the Age header, in
   a form appropriate for arithmetic operations.

   A response's age can be calculated in two entirely independent ways:

      1. now minus date_value, if the local clock is reasonably well
         synchronized to the origin server's clock. If the result is
         negative, the result is replaced by zero.

      2. age_value, if all of the caches along the response path
         implement HTTP/1.1.

   Given that we have two independent ways to compute the age of a
   response when it is received, we can combine these as

       corrected_received_age = max(now - date_value, age_value)

   and as long as we have either nearly synchronized clocks or all-
   HTTP/1.1 paths, one gets a reliable (conservative) result.

   Because of network-imposed delays, some significant interval might
   pass between the time that a server generates a response and the time
   it is received at the next outbound cache or client. If uncorrected,
   this delay could result in improperly low ages.

   Because the request that resulted in the returned Age value must have
   been initiated prior to that Age value's generation, we can correct
   for delays imposed by the network by recording the time at which the
   request was initiated. Then, when an Age value is received, it MUST
   be interpreted relative to the time the request was initiated, not 

   the time that the response was received. This algorithm results in
   conservative behavior no matter how much delay is experienced. So, we
   compute:

      corrected_initial_age = corrected_received_age
                            + (now - request_time)

   where &quot;request_time&quot; is the time (according to the local clock) when
   the request that elicited this response was sent.

   Summary of age calculation algorithm, when a cache receives a
   response:

      /*
       * age_value
       *      is the value of Age: header received by the cache with
       *              this response.
       * date_value
       *      is the value of the origin server's Date: header
       * request_time
       *      is the (local) time when the cache made the request
       *              that resulted in this cached response
       * response_time
       *      is the (local) time when the cache received the
       *              response
       * now
       *      is the current (local) time
       */

      apparent_age = max(0, response_time - date_value);
      corrected_received_age = max(apparent_age, age_value);
      response_delay = response_time - request_time;
      corrected_initial_age = corrected_received_age + response_delay;
      resident_time = now - response_time;
      current_age   = corrected_initial_age + resident_time;

   The current_age of a cache entry is calculated by adding the amount
   of time (in seconds) since the cache entry was last validated by the
   origin server to the corrected_initial_age. When a response is
   generated from a cache entry, the cache MUST include a single Age
   header field in the response with a value equal to the cache entry's
   current_age.

   The presence of an Age header field in a response implies that a
   response is not first-hand. However, the converse is not true, since
   the lack of an Age header field in a response does not imply that the 

   response is first-hand unless all caches along the request path are
   compliant with HTTP/1.1 (i.e., older HTTP caches did not implement
   the Age header field).</source>
          <target state="translated">Чтобы узнать, является ли кэшированная запись свежей, кеш должен знать, превышает ли ее возраст время жизни свежести. Мы обсудим, как рассчитать последний в &lt;a href=&quot;#section-13.2.4&quot;&gt;разделе 13.2.4&lt;/a&gt; ; в этом разделе описывается, как рассчитать возраст ответа или записи кэша. В этом обсуждении мы используем термин &amp;laquo;сейчас&amp;raquo; для обозначения &amp;laquo;текущего значения часов на хосте, выполняющем расчет&amp;raquo;. Хосты, использующие HTTP, но особенно хосты с исходными серверами и кешами, ДОЛЖНЫ использовать NTP [ &lt;a href=&quot;#ref-28&quot;&gt;28&lt;/a&gt; ] или какой-либо аналогичный протокол для синхронизации своих часов с глобально точным стандартом времени. HTTP / 1.1 требует, чтобы исходные серверы отправляли заголовок Date, если это возможно, с каждым ответом, указывая время, в которое был сгенерирован ответ (см. &lt;a href=&quot;#section-14.18&quot;&gt;Раздел 14.18&lt;/a&gt;). Мы используем термин &amp;laquo;date_value&amp;raquo; для обозначения значения заголовка Date в форме, подходящей для арифметических операций. HTTP / 1.1 использует заголовок ответа Age для передачи предполагаемого возраста ответного сообщения при получении из кеша. Значение поля Age - это оценка кэша количества времени, прошедшего с момента создания или повторной проверки ответа исходным сервером. По сути, значение Age - это сумма времени, в течение которого ответ находился в каждом из кешей на пути от исходного сервера, плюс время, в течение которого он находился в пути по сетевым путям. Мы используем термин age_value для обозначения значения заголовка Age в форме, подходящей для арифметических операций. Возраст ответа можно рассчитать двумя совершенно независимыми способами: 1.теперь минус date_value, если локальные часы достаточно хорошо синхронизированы с часами исходного сервера. Если результат отрицательный, результат заменяется нулем. 2. age_value, если все кеши на пути ответа реализуют HTTP / 1.1. Учитывая, что у нас есть два независимых способа вычисления возраста ответа, когда он получен, мы можем объединить их как corrected_received_age = max (now - date_value, age_value) и пока у нас есть либо почти синхронизированные часы, либо все - HTTP / 1.1 путей, получается надежный (консервативный) результат. Из-за задержек, вызванных сетью, между моментом, когда сервер генерирует ответ, и временем его получения в следующем исходящем кэше или на клиенте может пройти некоторый значительный интервал. Если не исправить,эта задержка может привести к слишком низкому возрасту. Поскольку запрос, который привел к возвращенному значению Age, должен быть инициирован до генерации этого значения Age, мы можем исправить задержки, наложенные сетью, записав время, в которое был инициирован запрос. Затем, когда значение Age получено, оно ДОЛЖНО интерпретироваться относительно времени, когда запрос был инициирован, а не времени, когда был получен ответ. Этот алгоритм приводит к консервативному поведению независимо от того, сколько задержки происходит. Итак, мы вычисляем: corrected_initial_age = corrected_received_age + (теперь - request_time), где &amp;laquo;request_time&amp;raquo; - это время (по локальным часам), когда был отправлен запрос, вызвавший этот ответ. Резюме алгоритма расчета возраста,когда кеш получает ответ: / * * age_value * - это значение заголовка Age:, полученное кешем с * этим ответом. * date_value * - значение даты исходного сервера: заголовок * request_time * - (локальное) время, когда кеш сделал запрос *, результатом которого стал этот кешированный ответ * response_time * - (локальное) время, когда кеш получил * response * now * - текущее (местное) время * / visible_age = max (0, response_time - date_value); corrected_received_age = max (кажущийся возраст, возрастное значение); response_delay = response_time - время_запроса; corrected_initial_age = исправленный_received_age + response_delay;resident_time = now - response_time; current_age = исправленный_initial_age + resident_time; Current_age записи кэша вычисляется путем добавления количества времени (в секундах) с момента последней проверки записи кэша исходным сервером к corrected_initial_age. Когда ответ генерируется из записи кэша, кеш ДОЛЖЕН включать в ответ одно поле заголовка Age со значением, равным current_age записи кэша. Наличие поля заголовка Age в ответе означает, что ответ не из первых рук. Однако обратное неверно, поскольку отсутствие поля заголовка Age в ответе не означает, что ответ был получен из первых рук, если только все кеши на пути запроса не соответствуют HTTP / 1.1 (т. Е. Более старые кэши HTTP не реализовать поле заголовка Age).</target>
        </trans-unit>
        <trans-unit id="93eea119dacd0c2679005705eb05947c3bbce8c5" translate="yes" xml:space="preserve">
          <source>In order to mitigate these flaws, HTTP/1.1 introduced pipelining (which proved difficult to implement) and persistent connections: the underlying TCP connection can be partially controlled using the &lt;a href=&quot;headers/connection&quot;&gt;&lt;code&gt;Connection&lt;/code&gt;&lt;/a&gt; header. HTTP/2 went a step further by multiplexing messages over a single connection, helping keep the connection warm, and more efficient.</source>
          <target state="translated">Чтобы смягчить эти недостатки, HTTP / 1.1 представил конвейерную обработку (которую оказалось трудно реализовать) и постоянные соединения: базовое TCP-соединение можно частично контролировать с помощью заголовка &lt;a href=&quot;headers/connection&quot;&gt; &lt;code&gt;Connection&lt;/code&gt; &lt;/a&gt; . HTTP / 2 пошел еще дальше, мультиплексировав сообщения через одно соединение, что помогло сохранить соединение теплым и более эффективным.</target>
        </trans-unit>
        <trans-unit id="58bad13cde4243caa4f445a82bf628be18579594" translate="yes" xml:space="preserve">
          <source>In order to mitigate this flaw, HTTP/1.1 introduced &lt;em&gt;pipelining&lt;/em&gt; (which proved difficult to implement) and &lt;em&gt;persistent connections&lt;/em&gt;: the underlying TCP connection can be partially controlled using the &lt;a href=&quot;headers/connection&quot;&gt;&lt;code&gt;Connection&lt;/code&gt;&lt;/a&gt; header. HTTP/2 went a step further by multiplexing messages over a single connection, helping keep the connection warm and more efficient.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d06ed585978c0a513808590b8c6743bd98c74164" translate="yes" xml:space="preserve">
          <source>In parallel to the somewhat chaotic use of the diverse implementations of HTTP/1.0, and since 1995, well before the publication of HTTP/1.0 document the next year, proper standardization was in progress. The first standardized version of HTTP, HTTP/1.1 was published in early 1997, only a few months after HTTP/1.0.</source>
          <target state="translated">Параллельно с несколько хаотичным использованием различных реализаций HTTP/1.0,а также с 1995 года,задолго до публикации документа HTTP/1.0 в следующем году,осуществлялась надлежащая стандартизация.Первая стандартизированная версия HTTP,HTTP/1.1,была опубликована в начале 1997 г.,всего через несколько месяцев после HTTP/1.0.</target>
        </trans-unit>
        <trans-unit id="4a373ca506ac7942c288749c8f149a921b16adb3" translate="yes" xml:space="preserve">
          <source>In particular, a request is preflighted if &lt;strong&gt;any of the following conditions&lt;/strong&gt; is true:</source>
          <target state="translated">В частности, предварительная проверка запроса выполняется, если выполняется &lt;strong&gt;одно из следующих условий&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="6d1e5ffefab8e49049390586276d922518d4d867" translate="yes" xml:space="preserve">
          <source>In particular, the request &lt;em&gt;requires&lt;/em&gt; these two additional headers:</source>
          <target state="translated">В частности, для запроса &lt;em&gt;требуются&lt;/em&gt; эти два дополнительных заголовка:</target>
        </trans-unit>
        <trans-unit id="32f825d053979b2bbea746eee217de968d1740ce" translate="yes" xml:space="preserve">
          <source>In practice, hop-by-hop compression is transparent for the server and the client, and is rarely used. &lt;a href=&quot;headers/te&quot;&gt;&lt;code&gt;TE&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;headers/transfer-encoding&quot;&gt;&lt;code&gt;Transfer-Encoding&lt;/code&gt;&lt;/a&gt; are mostly used to send a response by chunks, allowing to start transmitting a resource without knowing its length.</source>
          <target state="translated">На практике поэтапное сжатие прозрачно для сервера и клиента и используется редко. &lt;a href=&quot;headers/te&quot;&gt; &lt;code&gt;TE&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;headers/transfer-encoding&quot;&gt; &lt;code&gt;Transfer-Encoding&lt;/code&gt; &lt;/a&gt; в основном используются для отправки ответа по частям, что позволяет начать передачу ресурса, не зная его длины.</target>
        </trans-unit>
        <trans-unit id="6fb0378e9b8c8212e3d2de953dca5265e4ca3124" translate="yes" xml:space="preserve">
          <source>In practice, this error is very rarely used. Instead of responding using this error code, which would be cryptic for the end user and difficult to fix, servers ignore the relevant header and serve an actual page to the user. It is assumed that even if the user won't be completely happy, they will prefer this to an error code.</source>
          <target state="translated">На практике эта ошибка используется очень редко.Вместо того,чтобы отвечать с помощью этого кода ошибки,который был бы загадочным для конечного пользователя и который было бы трудно исправить,серверы игнорируют соответствующий заголовок и подают действительную страницу пользователю.Предполагается,что даже если пользователь не будет полностью доволен,он предпочтет это коду ошибки.</target>
        </trans-unit>
        <trans-unit id="5897a27e39859a1490a88859d07dae77805526ee" translate="yes" xml:space="preserve">
          <source>In practice, web developers don't need to implement compression mechanisms, both browsers and servers have it implemented already, but they have to be sure that the server is configured adequately. Compression happens at three different levels:</source>
          <target state="translated">На практике веб-разработчикам не нужно реализовывать механизмы сжатия,как браузеры,так и серверы уже реализовали его,но они должны быть уверены,что сервер настроен должным образом.Сжатие происходит на трех различных уровнях:</target>
        </trans-unit>
        <trans-unit id="495136708e3b335d9a535e1968ab6547efcb7046" translate="yes" xml:space="preserve">
          <source>In presence of an &lt;code&gt;Accept-Ranges&lt;/code&gt; header, the browser may try to &lt;em&gt;resume&lt;/em&gt; an interrupted download, rather than to start it from the start again.</source>
          <target state="translated">При наличии заголовка &lt;code&gt;Accept-Ranges&lt;/code&gt; браузер может попытаться &lt;em&gt;возобновить&lt;/em&gt; прерванную загрузку, а не запускать ее с самого начала.</target>
        </trans-unit>
        <trans-unit id="b7c4393bb4e04346146f3edbaf7c8cd5fd81dd69" translate="yes" xml:space="preserve">
          <source>In reality, there are more computers between a browser and the server handling the request: there are routers, modems, and more. Thanks to the layered design of the Web, these are hidden in the network and transport layers. HTTP is on top at the application layer. Although important to diagnose network problems, the underlying layers are mostly irrelevant to the description of HTTP.</source>
          <target state="translated">В реальности между браузером и сервером,обрабатывающим запрос,находится больше компьютеров:есть маршрутизаторы,модемы и многое другое.Благодаря многоуровневому дизайну Web,они скрыты в сетевом и транспортном уровнях.HTTP находится сверху на прикладном уровне.Хотя это и важно для диагностики сетевых проблем,основные уровни в основном не имеют отношения к описанию HTTP.</target>
        </trans-unit>
        <trans-unit id="6a1a0787f92838b7783a71a3a4c2afe47df40a00" translate="yes" xml:space="preserve">
          <source>In reality, there are more computers between a browser and the server handling the request: there are routers, modems, and more. Thanks to the layered design of the Web, these are hidden in the network and transport layers. HTTP is on top, at the application layer. Although important to diagnose network problems, the underlying layers are mostly irrelevant to the description of HTTP.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1441977c1eecf0cbb90000197c29c7bf7c86dab2" translate="yes" xml:space="preserve">
          <source>In requests without credentials, you can also use a wildcard value:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bf5f583aa5451ac94eabad6345a75ed78fe4350" translate="yes" xml:space="preserve">
          <source>In requests, (such as &lt;a href=&quot;../methods/post&quot;&gt;&lt;code&gt;POST&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../methods/put&quot;&gt;&lt;code&gt;PUT&lt;/code&gt;&lt;/a&gt;), the client tells the server what type of data is actually sent.</source>
          <target state="translated">В запросах (таких как &lt;a href=&quot;../methods/post&quot;&gt; &lt;code&gt;POST&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;../methods/put&quot;&gt; &lt;code&gt;PUT&lt;/code&gt; &lt;/a&gt; ) клиент сообщает серверу, какой тип данных фактически отправляется.</target>
        </trans-unit>
        <trans-unit id="8a90c9dffff8f7d42978681a49c1181c2ea1638f" translate="yes" xml:space="preserve">
          <source>In response to &lt;a href=&quot;https://www.mozilla.org/en-US/security/advisories/mfsa2019-21/#CVE-2019-11730&quot;&gt;CVE-2019-11730&lt;/a&gt;, Firefox 68 and later define the origin of a page opened using a &lt;code&gt;file:///&lt;/code&gt; URI as unique. Therefore, other resources in the same directory or its subdirectories no longer satisfy the CORS same-origin rule. This new behavior is enabled by default using the &lt;code&gt;privacy.file_unique_origin&lt;/code&gt; preference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="205212e02d3ed8aca2b00bcaaead0dc09052b8b2" translate="yes" xml:space="preserve">
          <source>In response, Chromium shipped &lt;a href=&quot;https://fetch.spec.whatwg.org/#corb&quot;&gt;Cross-Origin Read Blocking&lt;/a&gt;, which automatically protects certain resources (of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f09312a5e29c9ecda7f1b42ac4b9044bcc540aa1" translate="yes" xml:space="preserve">
          <source>In response, the server sends back an &lt;a href=&quot;headers/access-control-allow-origin&quot;&gt;&lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt;&lt;/a&gt; header with &lt;code&gt;Access-Control-Allow-Origin: *&lt;/code&gt;, which means that the resource can be accessed by &lt;strong&gt;any&lt;/strong&gt; origin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d41bda365255372b63ef811da0c711c5a50b4a0" translate="yes" xml:space="preserve">
          <source>In responses, a &lt;code&gt;Content-Type&lt;/code&gt; header tells the client what the content type of the returned content actually is. Browsers will do MIME sniffing in some cases and will not necessarily follow the value of this header; to prevent this behavior, the header &lt;a href=&quot;x-content-type-options&quot;&gt;&lt;code&gt;X-Content-Type-Options&lt;/code&gt;&lt;/a&gt; can be set to &lt;code&gt;nosniff&lt;/code&gt;.</source>
          <target state="translated">В ответах заголовок &lt;code&gt;Content-Type&lt;/code&gt; сообщает клиенту, какой на самом деле тип содержимого возвращаемого содержимого. В некоторых случаях браузеры будут выполнять сниффинг MIME и не обязательно следовать значению этого заголовка; чтобы предотвратить такое поведение, заголовок &lt;a href=&quot;x-content-type-options&quot;&gt; &lt;code&gt;X-Content-Type-Options&lt;/code&gt; &lt;/a&gt; может быть установлен на &lt;code&gt;nosniff&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7328d876f6eb63e7721164796f1284534dc9f3db" translate="yes" xml:space="preserve">
          <source>In short the EU directive means that before somebody can store or retrieve any information from a computer, mobile phone or other device, the user must give informed consent to do so. Many websites have added banners (AKA &quot;cookie banners&quot;) since then to inform the user about the use of cookies.</source>
          <target state="translated">Короче говоря,директива ЕС означает,что прежде чем кто-либо сможет хранить или получать какую-либо информацию с компьютера,мобильного телефона или другого устройства,пользователь должен дать информированное согласие на это.С тех пор многие сайты добавили баннеры (AKA &quot;баннеры cookie&quot;)для информирования пользователя об использовании cookie-файлов.</target>
        </trans-unit>
        <trans-unit id="1d12b916e1ea56872beecbf2e4e9757af03ec500" translate="yes" xml:space="preserve">
          <source>In some cases, the operator of a cache MAY choose to configure it to
   return stale responses even when not requested by clients. This
   decision ought not be made lightly, but may be necessary for reasons
   of availability or performance, especially when the cache is poorly
   connected to the origin server. Whenever a cache returns a stale
   response, it MUST mark it as such (using a Warning header) enabling
   the client software to alert the user that there might be a potential
   problem. 

   It also allows the user agent to take steps to obtain a first-hand or
   fresh response. For this reason, a cache SHOULD NOT return a stale
   response if the client explicitly requests a first-hand or fresh one,
   unless it is impossible to comply for technical or policy reasons.</source>
          <target state="translated">В некоторых случаях оператор кэша MAY предпочитает настроить его на возврат несвежих ответов,даже если они не запрашиваются клиентами.Такое решение не должно приниматься легкомысленно,но может быть необходимо по причинам доступности или производительности,особенно когда кэш плохо связан с исходным сервером.Всякий раз,когда кэш возвращает неактуальные ответы,он ДОЛЖЕН пометить его как таковой (используя Предупреждающий заголовок),позволяющий клиентскому ПО предупреждать пользователя о том,что может возникнуть потенциальная проблема.Это также позволяет пользовательскому агенту предпринимать шаги для получения из первых рук или свежего ответа.По этой причине кэш НЕ ДОЛЖЕН возвращать залежавшийся ответ,если клиент явно запрашивает из первых рук или свежий ответ,за исключением случаев,когда это невозможно по техническим или политическим причинам.</target>
        </trans-unit>
        <trans-unit id="d9444a4e91ad14c01e9590e0bedd4b5d6e8c782c" translate="yes" xml:space="preserve">
          <source>In summary, we recommend looking for the string &amp;ldquo;Mobi&amp;rdquo; anywhere in the User Agent to detect a mobile device.</source>
          <target state="translated">Таким образом, мы рекомендуем искать строку &amp;laquo;Mobi&amp;raquo; в любом месте в User Agent, чтобы обнаружить мобильное устройство.</target>
        </trans-unit>
        <trans-unit id="b4e56f9ae18c2388ab7193bb81f5a1535e68eead" translate="yes" xml:space="preserve">
          <source>In that specification a client may send a request that contains an extension declaration, that describes the extension to be used. If the server receives such a request, but any described extensions are not supported for the request, then the server responds with the 510 status code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10ded161d3ab76c69e065e7f428e51b119cc26b8" translate="yes" xml:space="preserve">
          <source>In the above scenario, &lt;code&gt;no-referrer&lt;/code&gt; will only be used if &lt;code&gt;strict-origin-when-cross-origin&lt;/code&gt; is not supported by the browser.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32c2d5256e5dc0b53e01514a025fbdaca4825463" translate="yes" xml:space="preserve">
          <source>In the absence of a MIME type, or in certain cases where browsers believe they are incorrect, browsers may perform &lt;em&gt;MIME sniffing&lt;/em&gt; &amp;mdash; guessing the correct MIME type by looking at the bytes of the resource.</source>
          <target state="translated">При отсутствии типа MIME или в некоторых случаях, когда браузеры считают, что они неверны, браузеры могут выполнять &lt;em&gt;сниффинг MIME,&lt;/em&gt; угадывая правильный тип MIME, просматривая байты ресурса.</target>
        </trans-unit>
        <trans-unit id="cdc3e1dfd2d8a54df8817aa9e2334a8c551dfaed" translate="yes" xml:space="preserve">
          <source>In the case of a &quot;Basic&quot; authentication like shown in the figure, the exchange &lt;strong&gt;must&lt;/strong&gt; happen over an HTTPS (TLS) connection to be secure.</source>
          <target state="translated">В случае &amp;laquo;базовой&amp;raquo; аутентификации, как показано на рисунке, обмен &lt;strong&gt;должен&lt;/strong&gt; происходить через соединение HTTPS (TLS), чтобы быть безопасным.</target>
        </trans-unit>
        <trans-unit id="9597ab40baf818d41d5819712b2c6f8aebbfee81" translate="yes" xml:space="preserve">
          <source>In the cases where you want the method used to be changed to &lt;a href=&quot;../methods/get&quot;&gt;&lt;code&gt;GET&lt;/code&gt;&lt;/a&gt;, use &lt;a href=&quot;303&quot;&gt;&lt;code&gt;303 See Other&lt;/code&gt;&lt;/a&gt; instead. This is useful when you want to give a response to a &lt;a href=&quot;../methods/put&quot;&gt;&lt;code&gt;PUT&lt;/code&gt;&lt;/a&gt; method that is not the uploaded resource but a confirmation message such as: 'you successfully uploaded XYZ'.</source>
          <target state="translated">В случаях, когда вы хотите, чтобы используемый метод был изменен на &lt;a href=&quot;../methods/get&quot;&gt; &lt;code&gt;GET&lt;/code&gt; &lt;/a&gt; , используйте вместо этого &lt;a href=&quot;303&quot;&gt; &lt;code&gt;303 See Other&lt;/code&gt; &lt;/a&gt; . Это полезно, если вы хотите дать ответ на метод &lt;a href=&quot;../methods/put&quot;&gt; &lt;code&gt;PUT&lt;/code&gt; ,&lt;/a&gt; который не является загруженным ресурсом, а будет выдать подтверждающее сообщение, например: &amp;laquo;вы успешно загрузили XYZ&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="8606d0b35470c00c20840dcc3a06c5fbe9904c62" translate="yes" xml:space="preserve">
          <source>In the collected ABNF below, list rules are expanded as per &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-1.2&quot;&gt;Section&lt;/a&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-1.2&quot;&gt;1.2 of [RFC7230]&lt;/a&gt;.

   Accept = [ ( &quot;,&quot; / ( media-range [ accept-params ] ) ) *( OWS &quot;,&quot; [
    OWS ( media-range [ accept-params ] ) ] ) ]
   Accept-Charset = *( &quot;,&quot; OWS ) ( ( charset / &quot;*&quot; ) [ weight ] ) *( OWS
    &quot;,&quot; [ OWS ( ( charset / &quot;*&quot; ) [ weight ] ) ] )
   Accept-Encoding = [ ( &quot;,&quot; / ( codings [ weight ] ) ) *( OWS &quot;,&quot; [ OWS
    ( codings [ weight ] ) ] ) ]
   Accept-Language = *( &quot;,&quot; OWS ) ( language-range [ weight ] ) *( OWS
    &quot;,&quot; [ OWS ( language-range [ weight ] ) ] )
   Allow = [ ( &quot;,&quot; / method ) *( OWS &quot;,&quot; [ OWS method ] ) ]

   BWS = &amp;lt;BWS, see &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.3&quot;&gt;[RFC7230], Section&amp;nbsp;3.2.3&lt;/a&gt;&amp;gt;

   Content-Encoding = *( &quot;,&quot; OWS ) content-coding *( OWS &quot;,&quot; [ OWS
    content-coding ] )
   Content-Language = *( &quot;,&quot; OWS ) language-tag *( OWS &quot;,&quot; [ OWS
    language-tag ] )
   Content-Location = absolute-URI / partial-URI
   Content-Type = media-type

   Date = HTTP-date

   Expect = &quot;100-continue&quot;

   From = mailbox

   GMT = %x47.4D.54 ; GMT

   HTTP-date = IMF-fixdate / obs-date

   IMF-fixdate = day-name &quot;,&quot; SP date1 SP time-of-day SP GMT

   Location = URI-reference

   Max-Forwards = 1*DIGIT

   OWS = &amp;lt;OWS, see &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.3&quot;&gt;[RFC7230], Section&amp;nbsp;3.2.3&lt;/a&gt;&amp;gt;

   RWS = &amp;lt;RWS, see &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.3&quot;&gt;[RFC7230], Section&amp;nbsp;3.2.3&lt;/a&gt;&amp;gt;
   Referer = absolute-URI / partial-URI
   Retry-After = HTTP-date / delay-seconds 

   Server = product *( RWS ( product / comment ) )

   URI-reference = &amp;lt;URI-reference, see &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-2.7&quot;&gt;[RFC7230], Section&amp;nbsp;2.7&lt;/a&gt;&amp;gt;
   User-Agent = product *( RWS ( product / comment ) )

   Vary = &quot;*&quot; / ( *( &quot;,&quot; OWS ) field-name *( OWS &quot;,&quot; [ OWS field-name ]
    ) )

   absolute-URI = &amp;lt;absolute-URI, see &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-2.7&quot;&gt;[RFC7230], Section&amp;nbsp;2.7&lt;/a&gt;&amp;gt;
   accept-ext = OWS &quot;;&quot; OWS token [ &quot;=&quot; ( token / quoted-string ) ]
   accept-params = weight *accept-ext
   asctime-date = day-name SP date3 SP time-of-day SP year

   charset = token
   codings = content-coding / &quot;identity&quot; / &quot;*&quot;
   comment = &amp;lt;comment, see &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.6&quot;&gt;[RFC7230], Section&amp;nbsp;3.2.6&lt;/a&gt;&amp;gt;
   content-coding = token

   date1 = day SP month SP year
   date2 = day &quot;-&quot; month &quot;-&quot; 2DIGIT
   date3 = month SP ( 2DIGIT / ( SP DIGIT ) )
   day = 2DIGIT
   day-name = %x4D.6F.6E ; Mon
    / %x54.75.65 ; Tue
    / %x57.65.64 ; Wed
    / %x54.68.75 ; Thu
    / %x46.72.69 ; Fri
    / %x53.61.74 ; Sat
    / %x53.75.6E ; Sun
   day-name-l = %x4D.6F.6E.64.61.79 ; Monday
    / %x54.75.65.73.64.61.79 ; Tuesday
    / %x57.65.64.6E.65.73.64.61.79 ; Wednesday
    / %x54.68.75.72.73.64.61.79 ; Thursday
    / %x46.72.69.64.61.79 ; Friday
    / %x53.61.74.75.72.64.61.79 ; Saturday
    / %x53.75.6E.64.61.79 ; Sunday
   delay-seconds = 1*DIGIT

   field-name = &amp;lt;comment, see &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2&quot;&gt;[RFC7230], Section&amp;nbsp;3.2&lt;/a&gt;&amp;gt;

   hour = 2DIGIT

   language-range = &amp;lt;language-range, see &lt;a href=&quot;https://tools.ietf.org/html/rfc4647#section-2.1&quot;&gt;[RFC4647], Section&amp;nbsp;2.1&lt;/a&gt;&amp;gt;
   language-tag = &amp;lt;Language-Tag, see &lt;a href=&quot;https://tools.ietf.org/html/rfc5646#section-2.1&quot;&gt;[RFC5646], Section&amp;nbsp;2.1&lt;/a&gt;&amp;gt;

   mailbox = &amp;lt;mailbox, see &lt;a href=&quot;https://tools.ietf.org/html/rfc5322#section-3.4&quot;&gt;[RFC5322], Section&amp;nbsp;3.4&lt;/a&gt;&amp;gt;
   media-range = ( &quot;*/*&quot; / ( type &quot;/*&quot; ) / ( type &quot;/&quot; subtype ) ) *( OWS
    &quot;;&quot; OWS parameter ) 

   media-type = type &quot;/&quot; subtype *( OWS &quot;;&quot; OWS parameter )
   method = token
   minute = 2DIGIT
   month = %x4A.61.6E ; Jan
    / %x46.65.62 ; Feb
    / %x4D.61.72 ; Mar
    / %x41.70.72 ; Apr
    / %x4D.61.79 ; May
    / %x4A.75.6E ; Jun
    / %x4A.75.6C ; Jul
    / %x41.75.67 ; Aug
    / %x53.65.70 ; Sep
    / %x4F.63.74 ; Oct
    / %x4E.6F.76 ; Nov
    / %x44.65.63 ; Dec

   obs-date = &lt;a href=&quot;https://tools.ietf.org/html/rfc850&quot;&gt;rfc850&lt;/a&gt;-date / asctime-date

   parameter = token &quot;=&quot; ( token / quoted-string )
   partial-URI = &amp;lt;partial-URI, see &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-2.7&quot;&gt;[RFC7230], Section&amp;nbsp;2.7&lt;/a&gt;&amp;gt;
   product = token [ &quot;/&quot; product-version ]
   product-version = token
   quoted-string = &amp;lt;quoted-string, see &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.6&quot;&gt;[RFC7230], Section&amp;nbsp;3.2.6&lt;/a&gt;&amp;gt;
   qvalue = ( &quot;0&quot; [ &quot;.&quot; *3DIGIT ] ) / ( &quot;1&quot; [ &quot;.&quot; *3&quot;0&quot; ] )

   &lt;a href=&quot;https://tools.ietf.org/html/rfc850&quot;&gt;rfc850&lt;/a&gt;-date = day-name-l &quot;,&quot; SP date2 SP time-of-day SP GMT

   second = 2DIGIT
   subtype = token

   time-of-day = hour &quot;:&quot; minute &quot;:&quot; second
   token = &amp;lt;token, see &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.6&quot;&gt;[RFC7230], Section&amp;nbsp;3.2.6&lt;/a&gt;&amp;gt;
   type = token

   weight = OWS &quot;;&quot; OWS &quot;q=&quot; qvalue

   year = 4DIGIT 

Index

   1
      1xx Informational (status code class)  50

   2
      2xx Successful (status code class)  51

   3
      3xx Redirection (status code class)  54

   4
      4xx Client Error (status code class)  58

   5
      5xx Server Error (status code class)  62

   1
      100 Continue (status code)  50
      100-continue (expect value)  34
      101 Switching Protocols (status code)  50

   2
      200 OK (status code)  51
      201 Created (status code)  52
      202 Accepted (status code)  52
      203 Non-Authoritative Information (status code)  52
      204 No Content (status code)  53
      205 Reset Content (status code)  53

   3
      300 Multiple Choices (status code)  55
      301 Moved Permanently (status code)  56
      302 Found (status code)  56
      303 See Other (status code)  57
      305 Use Proxy (status code)  58
      306 (Unused) (status code)  58
      307 Temporary Redirect (status code)  58

   4
      400 Bad Request (status code)  58
      402 Payment Required (status code)  59
      403 Forbidden (status code)  59
      404 Not Found (status code)  59
      405 Method Not Allowed (status code)  59
      406 Not Acceptable (status code)  59
      408 Request Timeout (status code)  60
      409 Conflict (status code)  60 

      410 Gone (status code)  60
      411 Length Required (status code)  61
      413 Payload Too Large (status code)  61
      414 URI Too Long (status code)  61
      415 Unsupported Media Type (status code)  62
      417 Expectation Failed (status code)  62
      426 Upgrade Required (status code)  62

   5
      500 Internal Server Error (status code)  63
      501 Not Implemented (status code)  63
      502 Bad Gateway (status code)  63
      503 Service Unavailable (status code)  63
      504 Gateway Timeout (status code)  63
      505 HTTP Version Not Supported (status code)  64

   A
      Accept header field  38
      Accept-Charset header field  40
      Accept-Encoding header field  41
      Accept-Language header field  42
      Allow header field  72

   C
      cacheable  24
      compress (content coding)  11
      conditional request  36
      CONNECT method  30
      content coding  11
      content negotiation  6
      Content-Encoding header field  12
      Content-Language header field  13
      Content-Location header field  15
      Content-Transfer-Encoding header field  89
      Content-Type header field  10

   D
      Date header field  67
      deflate (content coding)  11
      DELETE method  29

   E
      Expect header field  34

   F
      From header field  44 

   G
      GET method  24
      Grammar
         Accept  38
         Accept-Charset  40
         Accept-Encoding  41
         accept-ext  38
         Accept-Language  42
         accept-params  38
         Allow  72
         asctime-date  66
         charset  9
         codings  41
         content-coding  11
         Content-Encoding  12
         Content-Language  13
         Content-Location  15
         Content-Type  10
         Date  67
         date1  65
         day  65
         day-name  65
         day-name-l  65
         delay-seconds  69
         Expect  34
         From  44
         GMT  65
         hour  65
         HTTP-date  65
         IMF-fixdate  65
         language-range  42
         language-tag  13
         Location  68
         Max-Forwards  36
         media-range  38
         media-type  8
         method  21
         minute  65
         month  65
         obs-date  66
         parameter  8
         product  46
         product-version  46
         qvalue  38
         Referer  45
         Retry-After  69
         &lt;a href=&quot;https://tools.ietf.org/html/rfc850&quot;&gt;rfc850&lt;/a&gt;-date  66
         second  65 

         Server  73
         subtype  8
         time-of-day  65
         type  8
         User-Agent  46
         Vary  70
         weight  38
         year  65
      gzip (content coding)  11

   H
      HEAD method  25

   I
      idempotent  23

   L
      Location header field  68

   M
      Max-Forwards header field  36
      MIME-Version header field  89

   O
      OPTIONS method  31

   P
      payload  17
      POST method  25
      PUT method  26

   R
      Referer header field  45
      representation  7
      Retry-After header field  69

   S
      safe  22
      selected representation  7, 71
      Server header field  73
      Status Codes Classes
         1xx Informational  50
         2xx Successful  51
         3xx Redirection  54
         4xx Client Error  58
         5xx Server Error  62 

   T
      TRACE method  32

   U
      User-Agent header field  46

   V
      Vary header field  70

   X
      x-compress (content coding)  11
      x-gzip (content coding)  11

Authors' Addresses

   Roy T. Fielding (editor)
   Adobe Systems Incorporated
   345 Park Ave
   San Jose, CA  95110
   USA

   EMail: fielding@gbiv.com
   URI:   &lt;a href=&quot;http://roy.gbiv.com/&quot;&gt;http://roy.gbiv.com/&lt;/a&gt;


   Julian F. Reschke (editor)
   greenbytes GmbH
   Hafenweg 16
   Muenster, NW  48155
   Germany

   EMail: julian.reschke@greenbytes.de
   URI:   &lt;a href=&quot;http://greenbytes.de/tech/webdav/&quot;&gt;http://greenbytes.de/tech/webdav/&lt;/a&gt;


Fielding &amp;amp; Reschke           Standards Track                  [Page 101]</source>
          <target state="translated">В собранном ниже ABNF правила списка расширены в соответствии с &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-1.2&quot;&gt;разделом &lt;/a&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-1.2&quot;&gt;1.2 [RFC7230]&lt;/a&gt; . Accept = [(&quot;,&quot; / (media-range [accept-params])) * (OWS &quot;,&quot; [OWS (media-range [accept-params])]]] Accept-Charset = * (&quot;,&quot; OWS ) ((charset / &quot;*&quot;) [вес]) * (OWS &quot;,&quot; [OWS ((charset / &quot;*&quot;) [weight])]) Accept-Encoding = [(&quot;,&quot; / (кодировки [вес] )) * (OWS &quot;,&quot; [OWS (codings [weight])]]]] Accept-Language = * (&quot;,&quot; OWS) (language-range [weight]) * (OWS &quot;,&quot; [OWS (language-range [вес])]) Allow = [(&quot;,&quot; / method) * (OWS &quot;,&quot; [OWS method])] BWS = &amp;lt;BWS, см. &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.3&quot;&gt;[RFC7230], раздел 3.2.3.&lt;/a&gt;&amp;gt; Content-Encoding = * (&quot;,&quot; OWS) content-coding * (OWS &quot;,&quot; [OWS content-coding]) Content-Language = * (&quot;,&quot; OWS) language-tag * (OWS &quot;,&quot; [OWS языковой тег]) Content-Location = absolute-URI / partial-URI Content-Type = media-type Date = HTTP-date Expect = &quot;100-continue&quot; From = mailbox GMT =% x47.4D.54; GMT HTTP-date = IMF-fixdate / obs-date IMF-fixdate = day-name &quot;,&quot; SP date1 SP time-of-day SP GMT Location = URI-reference Max-Forwards = 1 * DIGIT OWS = &amp;lt;OWS, см. &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.3&quot;&gt;[RFC7230], раздел 3.2.3&lt;/a&gt; &amp;gt; RWS = &amp;lt;RWS, см. &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.3&quot;&gt;[RFC7230], раздел 3.2.3&lt;/a&gt; &amp;gt;Referer = absolute-URI / partial-URI Retry-After = HTTP-date / delay-seconds Server = product * (RWS (product / comment)) URI-reference = &amp;lt;URI-reference, см.&lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-2.7&quot;&gt;[RFC7230], раздел 2.7&lt;/a&gt; &amp;gt; User-Agent = product * (RWS (product / comment)) Vary = &quot;*&quot; / (* (&quot;,&quot; OWS) имя-поля * (OWS &quot;,&quot; [имя-поля OWS] )) absolute-URI = &amp;lt;absolute-URI, см. &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-2.7&quot;&gt;[RFC7230], раздел 2.7&lt;/a&gt; &amp;gt; accept-ext = OWS &quot;;&quot; Токен OWS [&quot;=&quot; (токен / строка в кавычках)] accept-params = weight * accept-ext asctime-date = day-name SP date3 SP time-of-day SP year charset = token codings = content-coding / &quot; identity &quot;/&quot; * &quot;comment = &amp;lt;comment, см. &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.6&quot;&gt;[RFC7230], раздел 3.2.6&lt;/a&gt;&amp;gt; content-coding = токен date1 = день SP месяц SP год date2 = день &quot;-&quot; месяц &quot;-&quot; 2DIGIT date3 = месяц SP (2DIGIT / (SP DIGIT)) день = 2DIGIT имя-дня =% x4D.6F.6E; Пн /% x54,75,65; Вт /% x57.65.64; Ср /% x54,68,75; Чт /% х46,72,69; Пт /% х53,61,74; Сб /% x53.75.6E; Солнце день-имя-l =% x4D.6F.6E.64.61.79; Понедельник /% x54.75.65.73.64.61.79; Вторник /% x57.65.64.6E.65.73.64.61.79; Среда /% x54.68.75.72.73.64.61.79; Четверг /% x46.72.69.64.61.79; Пятница /% x53.61.74.75.72.64.61.79; Суббота /% x53.75.6E.64.61.79; Воскресные секунды задержки = 1 * DIGIT field-name = &amp;lt;комментарий, см. &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2&quot;&gt;[RFC7230], раздел 3.2&lt;/a&gt; &amp;gt; час = 2DIGIT language-range = &amp;lt;диапазон языков, см. &lt;a href=&quot;https://tools.ietf.org/html/rfc4647#section-2.1&quot;&gt;[RFC4647], раздел 2.1&lt;/a&gt;&amp;gt; language-tag = &amp;lt;Language-Tag, см. &lt;a href=&quot;https://tools.ietf.org/html/rfc5646#section-2.1&quot;&gt;[RFC5646], раздел 2.1&lt;/a&gt; &amp;gt; mailbox = &amp;lt;mailbox, см. &lt;a href=&quot;https://tools.ietf.org/html/rfc5322#section-3.4&quot;&gt;[RFC5322], раздел 3.4&lt;/a&gt; &amp;gt; media-range = (&quot;* / *&quot; / (type &quot;/ *&quot;) / (тип &quot;/&quot; подтип)) * (OWS &quot;;&quot; параметр OWS) media-type = type &quot;/&quot; подтип * (OWS &quot;;&quot; параметр OWS) метод = токен минута = 2DIGIT месяц =% x4A.61.6E; Янв /% x46,65,62; Фев /% x4D.61.72; Мар /% x41.70.72; Апр /% x4D.61.79; May /% x4A.75.6E; Июн /% x4A.75.6C; Июл /% x41.75.67; Авг /% x53.65.70; Сен /% x4F.63.74; Октябрь /% x4E.6F.76; Ноя /% x44.65.63; Dec obs-date = &lt;a href=&quot;https://tools.ietf.org/html/rfc850&quot;&gt;rfc850&lt;/a&gt; -date / asctime-date параметр = токен &quot;=&quot;(токен / строка в кавычках) partial-URI = &amp;lt;partial-URI, см. &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-2.7&quot;&gt;[RFC7230], раздел 2.7&lt;/a&gt;&amp;gt; product = token [&quot;/&quot; product-version] product-version = token quoted-string = &amp;lt;quoted-string, см. &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.6&quot;&gt;[RFC7230], раздел 3.2.6&lt;/a&gt; &amp;gt; qvalue = (&quot;0&quot; [&quot;.&quot; * 3DIGIT]) / (&quot;1&quot; [&quot;.&quot; * 3 &quot;0&quot;]) &lt;a href=&quot;https://tools.ietf.org/html/rfc850&quot;&gt;rfc850&lt;/a&gt; -date = day-name-l &quot;,&quot; SP date2 SP time-of-day SP GMT second = 2DIGIT subtype = token time-of-day = час &quot;:&quot; минута &quot;:&quot; второй токен = &amp;lt;токен, см. &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.6&quot;&gt;[RFC7230], раздел 3.2.6.&lt;/a&gt;&amp;gt; type = вес токена = OWS &quot;;&quot; OWS &quot;q =&quot;qvalue год = 4DIGIT Индекс 1 1xx Информационный (класс кода состояния) 50 2 2xx Успешно (класс кода состояния) 51 3 3xx Перенаправление (класс кода состояния) 54 4 4xx Ошибка клиента (класс кода состояния) 58 5 5xx Ошибка сервера (класс кода состояния) ) 62 1 100 Продолжить (код состояния) 50 100-продолжить (ожидаемое значение) 34 101 Протоколы коммутации (код состояния) 50 2 200 ОК (код состояния) 51 201 Создано (код состояния) 52 202 Принято (код состояния) 52 203 Нет -Авторизованная информация (код состояния) 52 204 Нет содержимого (код состояния) 53 205 Сброс содержимого (код состояния) 53 3 300 Множественные варианты выбора (код состояния) 55 301 Перемещено навсегда (код состояния) 56 302 Найдено (код состояния) 56 303 См. Другое (код состояния) 57 305 ИспользованиеПрокси-сервер (код состояния) 58 306 (Не используется) (код состояния) 58 307 Временное перенаправление (код состояния) 58 4 400 Неверный запрос (код состояния) 58 402 Требуется оплата (код состояния) 59 403 Запрещено (код состояния) 59 404 Не найдено (код состояния) 59 405 Метод запрещен (код состояния) 59 406 Недопустим (код состояния) 59 408 Тайм-аут запроса (код состояния) 60 409 Конфликт (код состояния) 60 410 Gone (код состояния) 60 411 Требуется длина (код состояния) ) 61413 Слишком большая полезная нагрузка (код состояния) 61414 Слишком длинный URI (код состояния) 61415 Неподдерживаемый тип носителя (код состояния) 62417 Ошибка ожидания (код состояния) 62 426 Требуется обновление (код состояния) 62 5 500 Внутренняя ошибка сервера (код состояния) 63501 Не реализовано (код состояния) 63502 Bad Gateway (код состояния) 63 503 Service Unavailable (код состояния) 63 504 Gateway Timeout (код состояния) 63 505 Версия HTTP не поддерживается (код состояния) 64 A Поле заголовка Accept 38 Поле заголовка Accept-Charset 40 Поле заголовка Accept-Encoding 41 Поле заголовка Accept-Language 42 Разрешить поле заголовка 72 C кэшируемое 24 сжатие (кодирование содержимого) 11 условный запрос 36 Метод CONNECT 30 кодирование содержимого 11 согласование содержимого 6 Поле заголовка Content-Encoding 12 Поле заголовка Content-Language 13 Поле заголовка Content-Location 15 Поле заголовка Content-Transfer-Encoding 89 Поле заголовка Content-Type 10 D Поле заголовка даты 67 deflate (кодирование содержимого) 11 Метод DELETE 29 E Ожидаемый заголовокполе 34 F Поле заголовка From 44 G Метод GET 24 Grammar Accept 38 Accept-Charset 40 Accept-Encoding 41 accept-ext 38 Accept-Language 42 accept-params 38 Allow 72 asctime-date 66 charset 9 codings 41 content-coding 11 Content- Кодировка 12 Content-Language 13 Content-Location 15 Content-Type 10 Date 67 date1 65 day 65 day-name 65 day-name-l 65 delay-seconds 69 Expect 34 From 44 GMT 65 часов 65 HTTP-date 65 IMF-fixdate 65 language-range 42 language-tag 13 Расположение 68 Max-Forwards 36 media-range 38media-type 8 method 21 минута 65 месяц 65 obs-date 66 параметр 8 product 46 product-version 46 qvalue 38 Referer 45 Retry-After 69 &lt;a href=&quot;https://tools.ietf.org/html/rfc850&quot;&gt;RFC850&lt;/a&gt;-date 66 секунд 65 Сервер 73 подтип 8 время дня 65 тип 8 User-Agent 46 Варьировать 70 вес 38 год 65 gzip (кодирование содержимого) 11 H HEAD метод 25 I idempotent 23 L Поле заголовка местоположения 68 M Заголовок Max-Forwards поле 36 поле заголовка MIME-версии 89 O OPTIONS метод 31 P полезная нагрузка 17 метод POST 25 метод PUT 26 R поле заголовка Referer 45 представление 7 поле заголовка Retry-After 69 S safe 22 выбранное представление 7,71 Поле заголовка сервера 73 Коды состояния Классы 1xx Информационный 50 2xx Успешно 51 3xx Перенаправление 54 4xx Ошибка клиента 58 5xx Ошибка сервера 62 T Метод TRACE 32 U Поле заголовка User-Agent 46 V Изменение поля заголовка 70 X x-compress (кодирование содержимого) 11 x-gzip (кодирование содержимого) 11 Адреса авторов Рой Т. Филдинг (редактор) Adobe Systems Incorporated 345 Park Ave San Jose, CA 95110 США Электронная почта: fielding@gbiv.com URI:CA 95110 США Электронная почта: fielding@gbiv.com URI:CA 95110 США Электронная почта: fielding@gbiv.com URI: &lt;a href=&quot;http://roy.gbiv.com/&quot;&gt;http://roy.gbiv.com/&lt;/a&gt; Джулиан Ф. Решке (редактор) greenbytes GmbH Hafenweg 16 Muenster, NW 48155 Германия Электронная почта: julian.reschke@greenbytes.de URI: &lt;a href=&quot;http://greenbytes.de/tech/webdav/&quot;&gt;http://greenbytes.de/tech/webdav/&lt;/a&gt; Fielding &amp;amp; Reschke Standards Track [Стр. 101]</target>
        </trans-unit>
        <trans-unit id="e5c21a021da725c4cf94f0a415f9a51eddeeff8c" translate="yes" xml:space="preserve">
          <source>In the collected ABNF below, list rules are expanded as per &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-1.2&quot;&gt;Section&lt;/a&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-1.2&quot;&gt;1.2 of [RFC7230]&lt;/a&gt;.

   Accept-Ranges = acceptable-ranges

   Content-Range = byte-content-range / other-content-range

   HTTP-date = &amp;lt;HTTP-date, see &lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-7.1.1.1&quot;&gt;[RFC7231], Section&amp;nbsp;7.1.1.1&lt;/a&gt;&amp;gt;

   If-Range = entity-tag / HTTP-date

   OWS = &amp;lt;OWS, see &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.3&quot;&gt;[RFC7230], Section&amp;nbsp;3.2.3&lt;/a&gt;&amp;gt;

   Range = byte-ranges-specifier / other-ranges-specifier

   acceptable-ranges = ( *( &quot;,&quot; OWS ) range-unit *( OWS &quot;,&quot; [ OWS
    range-unit ] ) ) / &quot;none&quot;

   byte-content-range = bytes-unit SP ( byte-range-resp /
    unsatisfied-range )
   byte-range = first-byte-pos &quot;-&quot; last-byte-pos
   byte-range-resp = byte-range &quot;/&quot; ( complete-length / &quot;*&quot; )
   byte-range-set = *( &quot;,&quot; OWS ) ( byte-range-spec /
    suffix-byte-range-spec ) *( OWS &quot;,&quot; [ OWS ( byte-range-spec /
    suffix-byte-range-spec ) ] )
   byte-range-spec = first-byte-pos &quot;-&quot; [ last-byte-pos ]
   byte-ranges-specifier = bytes-unit &quot;=&quot; byte-range-set
   bytes-unit = &quot;bytes&quot;

   complete-length = 1*DIGIT

   entity-tag = &amp;lt;entity-tag, see &lt;a href=&quot;https://tools.ietf.org/html/rfc7232#section-2.3&quot;&gt;[RFC7232], Section&amp;nbsp;2.3&lt;/a&gt;&amp;gt;

   first-byte-pos = 1*DIGIT

   last-byte-pos = 1*DIGIT

   other-content-range = other-range-unit SP other-range-resp
   other-range-resp = *CHAR
   other-range-set = 1*VCHAR
   other-range-unit = token
   other-ranges-specifier = other-range-unit &quot;=&quot; other-range-set

   range-unit = bytes-unit / other-range-unit

   suffix-byte-range-spec = &quot;-&quot; suffix-length 

   suffix-length = 1*DIGIT

   token = &amp;lt;token, see &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.6&quot;&gt;[RFC7230], Section&amp;nbsp;3.2.6&lt;/a&gt;&amp;gt;

   unsatisfied-range = &quot;*/&quot; complete-length

Index

   2
      206 Partial Content (status code)  10

   4
      416 Range Not Satisfiable (status code)  15

   A
      Accept-Ranges header field  7

   C
      Content-Range header field  12

   G
      Grammar
         Accept-Ranges  7
         acceptable-ranges  7
         byte-content-range  12
         byte-range  12
         byte-range-resp  12
         byte-range-set  5
         byte-range-spec  5
         byte-ranges-specifier  5
         bytes-unit  5
         complete-length  12
         Content-Range  12
         first-byte-pos  5
         If-Range  9
         last-byte-pos  5
         other-content-range  12
         other-range-resp  12
         other-range-unit  5, 7
         Range  8
         range-unit  5
         ranges-specifier  5
         suffix-byte-range-spec  6
         suffix-length  6
         unsatisfied-range  12 

   I
      If-Range header field  9

   M
      Media Type
         multipart/byteranges  18, 21
         multipart/x-byteranges  19
      multipart/byteranges Media Type  18, 21
      multipart/x-byteranges Media Type  21

   R
      Range header field  8

Authors' Addresses

   Roy T. Fielding (editor)
   Adobe Systems Incorporated
   345 Park Ave
   San Jose, CA  95110
   USA

   EMail: fielding@gbiv.com
   URI:   &lt;a href=&quot;http://roy.gbiv.com/&quot;&gt;http://roy.gbiv.com/&lt;/a&gt;


   Yves Lafon (editor)
   World Wide Web Consortium
   W3C / ERCIM
   2004, rte des Lucioles
   Sophia-Antipolis, AM  06902
   France

   EMail: ylafon@w3.org
   URI:   &lt;a href=&quot;http://www.raubacapeu.net/people/yves/&quot;&gt;http://www.raubacapeu.net/people/yves/&lt;/a&gt;


   Julian F. Reschke (editor)
   greenbytes GmbH
   Hafenweg 16
   Muenster, NW  48155
   Germany

   EMail: julian.reschke@greenbytes.de
   URI:   &lt;a href=&quot;http://greenbytes.de/tech/webdav/&quot;&gt;http://greenbytes.de/tech/webdav/&lt;/a&gt;


Fielding, et al.             Standards Track                   [Page 25]</source>
          <target state="translated">В собранном ниже ABNF правила списка расширены в соответствии с &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-1.2&quot;&gt;разделом &lt;/a&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-1.2&quot;&gt;1.2 [RFC7230]&lt;/a&gt; . Accept-Ranges = допустимые-диапазоны Content-Range = byte-content-range / other-content-range HTTP-date = &amp;lt;HTTP-date, см. &lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-7.1.1.1&quot;&gt;[RFC7231], раздел 7.1.1.1&lt;/a&gt; &amp;gt; If-Range = entity-tag / HTTP -date OWS = &amp;lt;OWS, см. &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.3&quot;&gt;[RFC7230], раздел 3.2.3&lt;/a&gt;&amp;gt; Диапазон = спецификатор-байтов-диапазонов / спецификатор-других-диапазонов Допустимые-диапазоны = (* (&quot;,&quot; OWS) диапазон-единица * (OWS &quot;,&quot; [OWS-диапазон-блок])) / &quot;нет&quot; байтового содержимого -range = bytes-unit SP (byte-range-resp / unsatisfied-range) byte-range = first-byte-pos &quot;-&quot; last-byte-pos byte-range-resp = byte-range &quot;/&quot; (complete- length / &quot;*&quot;) byte-range-set = * (&quot;,&quot; OWS) (byte-range-spec / суффикс-byte-range-spec) * (OWS &quot;,&quot; [OWS (byte-range-spec / суффикс -byte-range-spec)]) byte-range-spec = first-byte-pos &quot;-&quot; [last-byte-pos] byte-range-specier = bytes-unit &quot;=&quot; набор-байтов байтов = &quot;bytes&quot; &lt;a href=&quot;https://tools.ietf.org/html/rfc7232#section-2.3&quot;&gt;full&lt;/a&gt; -length = 1 * DIGIT entity-tag = &amp;lt;entity-tag, см. [RFC7232],Раздел 2.3&amp;gt; first-byte-pos = 1 * DIGIT last-byte-pos = 1 * DIGIT other-content-range = other-range-unit SP другой диапазон-resp другой диапазон-resp = * CHAR другой-диапазон-набор = 1 * VCHAR other-range-unit = токен другой-диапазон-спецификатор = другой-диапазон-единица &quot;=&quot; другой-диапазон-набор-единицы диапазона = байты-единицы / другой-диапазон-единицы суффикс-байт-диапазон-спецификация = &quot;-&quot; суффикс-длина суффикс-длина = 1 * DIGIT token = &amp;lt;token, см. &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.6&quot;&gt;[RFC7230], раздел 3.2.6&lt;/a&gt;&amp;gt; unsatisfied-range = &quot;* /&quot; full-length Index 2 206 Partial Content (код состояния) 10 4 416 Range Not Satisfiable (код состояния) 15 A Поле заголовка Accept-Ranges 7 C Поле заголовка Content-Range 12 Грамматика Accept- Диапазоны 7 допустимых диапазонов 7 байт-диапазон-содержимого 12-байтовый диапазон 12-байтовый диапазон или 12 байтовый диапазон-набор 5 байтовый диапазон-спецификация 5 байтовый диапазон-спецификатор 5 байтовый блок 5 полная длина 12 Контент- Диапазон 12 first-byte-pos 5 If-Range 9 last-byte-pos 5 other-content-range 12 other-range-resp 12 other-range-unit 5,7 Диапазон 8 единица диапазона 5 спецификатор диапазона 5 суффикс-байт-спецификация диапазона 6 длина суффикса 6 неудовлетворенный диапазон 12 I Поле заголовка If-Range 9 M Тип носителя multipart / byteranges 18, 21 multipart / x-byteranges 19 multipart / byteranges Тип носителя 18, 21 multipart / x-byteranges Тип носителя 21 Поле заголовка диапазона R 8 Адреса авторов Рой Т. Филдинг (редактор) Adobe Systems Incorporated 345 Park Ave San Jose, CA 95110 США Электронная почта: fielding@gbiv.com URI :21 multipart / x-byteranges Тип носителя 21 Поле заголовка диапазона R 8 Адреса авторов Рой Т. Филдинг (редактор) Adobe Systems Incorporated 345 Park Ave San Jose, CA 95110 США Электронная почта: fielding@gbiv.com URI:21 multipart / x-byteranges Тип носителя 21 Поле заголовка диапазона R 8 Адреса авторов Рой Т. Филдинг (редактор) Adobe Systems Incorporated 345 Park Ave San Jose, CA 95110 США Электронная почта: fielding@gbiv.com URI: &lt;a href=&quot;http://roy.gbiv.com/&quot;&gt;http://roy.gbiv.com/&lt;/a&gt; Ив Лафон (редактор) Консорциум World Wide Web W3C / ERCIM 2004, rte des Lucioles Sophia-Antipolis, AM 06902, Франция Электронная почта: ylafon@w3.org URI: &lt;a href=&quot;http://www.raubacapeu.net/people/yves/&quot;&gt;http: //www.raubacapeu .net / people / yves /&lt;/a&gt; Julian F. Reschke (редактор) greenbytes GmbH Hafenweg 16 Muenster, NW 48155, Германия Электронная почта: julian.reschke@greenbytes.de URI: &lt;a href=&quot;http://greenbytes.de/tech/webdav/&quot;&gt;http://greenbytes.de/tech/webdav/&lt;/a&gt; Fielding, et al. , Standards Track [Страница 25]</target>
        </trans-unit>
        <trans-unit id="7f7187563510f7b95d508990280bc6d64358c455" translate="yes" xml:space="preserve">
          <source>In the collected ABNF below, list rules are expanded as per &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-1.2&quot;&gt;Section&lt;/a&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-1.2&quot;&gt;1.2 of [RFC7230]&lt;/a&gt;.

   Age = delta-seconds

   Cache-Control = *( &quot;,&quot; OWS ) cache-directive *( OWS &quot;,&quot; [ OWS
    cache-directive ] )

   Expires = HTTP-date

   HTTP-date = &amp;lt;HTTP-date, see &lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-7.1.1.1&quot;&gt;[RFC7231], Section&amp;nbsp;7.1.1.1&lt;/a&gt;&amp;gt;

   OWS = &amp;lt;OWS, see &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.3&quot;&gt;[RFC7230], Section&amp;nbsp;3.2.3&lt;/a&gt;&amp;gt;

   Pragma = *( &quot;,&quot; OWS ) pragma-directive *( OWS &quot;,&quot; [ OWS
    pragma-directive ] )

   Warning = *( &quot;,&quot; OWS ) warning-value *( OWS &quot;,&quot; [ OWS warning-value ]
    )

   cache-directive = token [ &quot;=&quot; ( token / quoted-string ) ]

   delta-seconds = 1*DIGIT

   extension-pragma = token [ &quot;=&quot; ( token / quoted-string ) ]

   field-name = &amp;lt;field-name, see &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2&quot;&gt;[RFC7230], Section&amp;nbsp;3.2&lt;/a&gt;&amp;gt;

   port = &amp;lt;port, see &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-2.7&quot;&gt;[RFC7230], Section&amp;nbsp;2.7&lt;/a&gt;&amp;gt;
   pragma-directive = &quot;no-cache&quot; / extension-pragma
   pseudonym = &amp;lt;pseudonym, see &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-5.7.1&quot;&gt;[RFC7230], Section&amp;nbsp;5.7.1&lt;/a&gt;&amp;gt;

   quoted-string = &amp;lt;quoted-string, see &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.6&quot;&gt;[RFC7230], Section&amp;nbsp;3.2.6&lt;/a&gt;&amp;gt;

   token = &amp;lt;token, see &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.6&quot;&gt;[RFC7230], Section&amp;nbsp;3.2.6&lt;/a&gt;&amp;gt;

   uri-host = &amp;lt;uri-host, see &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-2.7&quot;&gt;[RFC7230], Section&amp;nbsp;2.7&lt;/a&gt;&amp;gt;

   warn-agent = ( uri-host [ &quot;:&quot; port ] ) / pseudonym
   warn-code = 3DIGIT
   warn-date = DQUOTE HTTP-date DQUOTE
   warn-text = quoted-string
   warning-value = warn-code SP warn-agent SP warn-text [ SP warn-date
    ] 

Index

   1
      110 (warn-code)  31
      111 (warn-code)  31
      112 (warn-code)  31
      113 (warn-code)  31
      199 (warn-code)  32

   2
      214 (warn-code)  32
      299 (warn-code)  32

   A
      age  11
      Age header field  21

   C
      cache  4
      cache entry  5
      cache key  5-6
      Cache-Control header field  21

   D
      Disconnected Operation (warn-text)  31

   E
      Expires header field  28
      explicit expiration time  11

   F
      fresh  11
      freshness lifetime  11

   G
      Grammar
         Age  21
         Cache-Control  22
         cache-directive  22
         delta-seconds  5
         Expires  28
         extension-pragma  29
         Pragma  29
         pragma-directive  29
         warn-agent  29
         warn-code  29
         warn-date  29
         warn-text  29 

         Warning  29
         warning-value  29

   H
      Heuristic Expiration (warn-text)  31
      heuristic expiration time  11
   M
      max-age (cache directive)  22, 26
      max-stale (cache directive)  22
      min-fresh (cache directive)  22
      Miscellaneous Persistent Warning (warn-text)  32
      Miscellaneous Warning (warn-text)  32
      must-revalidate (cache directive)  24

   N
      no-cache (cache directive)  23, 25
      no-store (cache directive)  23, 24
      no-transform (cache directive)  23, 25

   O
      only-if-cached (cache directive)  23

   P
      Pragma header field  29
      private (cache directive)  25
      private cache  4
      proxy-revalidate (cache directive)  26
      public (cache directive)  25

   R
      Response is Stale (warn-text)  30
      Revalidation Failed (warn-text)  31

   S
      s-maxage (cache directive)  27
      shared cache  4
      stale  11
      strong validator  18

   T
      Transformation Applied (warn-text)  32

   V
      validator  16

   W
      Warning header field  29 

Authors' Addresses

   Roy T. Fielding (editor)
   Adobe Systems Incorporated
   345 Park Ave
   San Jose, CA  95110
   USA

   EMail: fielding@gbiv.com
   URI:   &lt;a href=&quot;http://roy.gbiv.com/&quot;&gt;http://roy.gbiv.com/&lt;/a&gt;


   Mark Nottingham (editor)
   Akamai

   EMail: mnot@mnot.net
   URI:   &lt;a href=&quot;http://www.mnot.net/&quot;&gt;http://www.mnot.net/&lt;/a&gt;


   Julian F. Reschke (editor)
   greenbytes GmbH
   Hafenweg 16
   Muenster, NW  48155
   Germany

   EMail: julian.reschke@greenbytes.de
   URI:   &lt;a href=&quot;http://greenbytes.de/tech/webdav/&quot;&gt;http://greenbytes.de/tech/webdav/&lt;/a&gt;


Fielding, et al.             Standards Track                   [Page 43]</source>
          <target state="translated">В собранном ниже ABNF правила списка расширены в соответствии с &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-1.2&quot;&gt;разделом &lt;/a&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-1.2&quot;&gt;1.2 [RFC7230]&lt;/a&gt; . Возраст = дельта-секунды Cache-Control = * (&quot;,&quot; OWS) cache-directive * (OWS &quot;,&quot; [OWS cache-directive]) Expires = HTTP-date HTTP-date = &amp;lt;HTTP-date, см. &lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-7.1.1.1&quot;&gt;[RFC7231] , Раздел 7.1.1.1&lt;/a&gt; &amp;gt; OWS = &amp;lt;OWS, см. &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.3&quot;&gt;[RFC7230], Раздел 3.2.3&lt;/a&gt; &amp;gt; Pragma = * (&quot;,&quot; OWS) pragma-directive * (OWS &quot;,&quot; [OWS pragma-directive]) Предупреждение = * ( &quot;,&quot; OWS) значение-предупреждения * (OWS &quot;,&quot; [OWS-предупреждение-значение]) cache-directive = token [&quot;=&quot; (токен / строка-кавычки)] delta-seconds = 1 * DIGIT extension-pragma = token [&quot;=&quot; (токен / строка в кавычках)] имя-поля = &amp;lt;имя-поля,см. &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2&quot;&gt;[RFC7230], раздел 3.2&lt;/a&gt; &amp;gt; порт = &amp;lt;порт, см.&lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-2.7&quot;&gt;[RFC7230], раздел 2.7&lt;/a&gt; &amp;gt; pragma-directive = &quot;no-cache&quot; / extension-pragma pseudonym = &amp;lt;псевдоним, см. &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-5.7.1&quot;&gt;[RFC7230], раздел 5.7.1&lt;/a&gt; &amp;gt; quoted-string = &amp;lt;quoted-string, см. &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.6&quot;&gt;[RFC7230], раздел 3.2.6&lt;/a&gt; &amp;gt; token = &amp;lt;токен, см. &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.6&quot;&gt;[RFC7230], раздел 3.2.6&lt;/a&gt; &amp;gt; uri-host = &amp;lt;uri-host, см. &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-2.7&quot;&gt;[RFC7230], раздел 2.7&lt;/a&gt;&amp;gt; warn-agent = (uri-host [&quot;:&quot;порт]) / псевдоним warn-code = 3DIGIT warn-date = DQUOTE HTTP-date DQUOTE warn-text = строка в кавычках значение-предупреждения = код-предупреждения SP warn-agent SP warn-text [SP warn-date] Индекс 1 110 (код предупреждения) 31 111 (код предупреждения) 31 112 (код предупреждения) 31 113 (код предупреждения) 31 199 (код предупреждения) 32 2 214 (код предупреждения) 32 299 (код предупреждения) 32 A age 11 Поле заголовка Age 21 C cache 4 запись кеша 5 ключ кеша 5-6 Поле заголовка Cache-Control 21 D Disconnected Operation (warn-text) 31 E Expires header field 28 явное время истечения 11 F fresh 11 freshness life 11 Grammar Age 21 Cache-Control 22 директива cache 22 дельта-секунды 5 Истекает 28extension-pragma 29 Pragma 29 pragma-directive 29 warn-agent 29 warn-code 29 warn-date 29 warn-text 29 Warning 29 warning-value 29 H Heuristic Expiration (warn-text) 31 эвристическое время истечения 11 M max-age ( директива cache) 22, 26 max-stale (директива cache) 22 min-fresh (директива cache) 22 Miscellaneous Persistent Warning (warn-text) 32 Miscellaneous Warning (warn-text) 32 must-revalidate (директива cache) 24 N no- cache (директива cache) 23, 25 no-store (директива cache) 23, 24 no-transform (директива cache) 23,25 O only-if-cached (директива cache) 23 P Поле заголовка Pragma 29 private (директива cache) 25 приватный кеш 4 proxy-revalidate (директива cache) 26 public (директива cache) 25 R Ответ устарел (текст предупреждения) 30 Ошибка повторной проверки (текст предупреждения) 31 S s-maxage (директива кеширования) 27 общий кеш 4 устаревший 11 строгий валидатор 18 T Применено преобразование (текст предупреждения) 32 В валидатор 16 Вт Поле заголовка предупреждения 29 Адреса авторов Рой Т. Филдинг ( редактор) Adobe Systems Incorporated 345 Park Ave San Jose, CA 95110 USA Электронная почта: fielding@gbiv.com URI:Филдинг (редактор) Adobe Systems Incorporated 345 Park Ave San Jose, CA 95110 USA Электронная почта: fielding@gbiv.com URI:Филдинг (редактор) Adobe Systems Incorporated 345 Park Ave San Jose, CA 95110 USA Электронная почта: fielding@gbiv.com URI: &lt;a href=&quot;http://roy.gbiv.com/&quot;&gt;http://roy.gbiv.com/&lt;/a&gt; Марк Ноттингем (редактор) Akamai EMail: mnot@mnot.net URI: &lt;a href=&quot;http://www.mnot.net/&quot;&gt;http://www.mnot.net/&lt;/a&gt; Джулиан Ф. Решке (редактор) greenbytes GmbH Hafenweg 16 Muenster, NW 48155 Электронная почта Германии: julian.reschke@greenbytes.de URI: &lt;a href=&quot;http://greenbytes.de/tech/webdav/&quot;&gt;http://greenbytes.de/tech/webdav/&lt;/a&gt; Fielding, et al. Standards Track [Страница 43]</target>
        </trans-unit>
        <trans-unit id="847bccd23d1c7feafc0bf9bbe4823064cad9878a" translate="yes" xml:space="preserve">
          <source>In the collected ABNF below, list rules are expanded as per &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-1.2&quot;&gt;Section&lt;/a&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-1.2&quot;&gt;1.2 of [RFC7230]&lt;/a&gt;.

   Authorization = credentials

   BWS = &amp;lt;BWS, see &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.3&quot;&gt;[RFC7230], Section&amp;nbsp;3.2.3&lt;/a&gt;&amp;gt;

   OWS = &amp;lt;OWS, see &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.3&quot;&gt;[RFC7230], Section&amp;nbsp;3.2.3&lt;/a&gt;&amp;gt;

   Proxy-Authenticate = *( &quot;,&quot; OWS ) challenge *( OWS &quot;,&quot; [ OWS
    challenge ] )
   Proxy-Authorization = credentials

   WWW-Authenticate = *( &quot;,&quot; OWS ) challenge *( OWS &quot;,&quot; [ OWS challenge
    ] )

   auth-param = token BWS &quot;=&quot; BWS ( token / quoted-string )
   auth-scheme = token

   challenge = auth-scheme [ 1*SP ( token68 / [ ( &quot;,&quot; / auth-param ) *(
    OWS &quot;,&quot; [ OWS auth-param ] ) ] ) ]
   credentials = auth-scheme [ 1*SP ( token68 / [ ( &quot;,&quot; / auth-param )
    *( OWS &quot;,&quot; [ OWS auth-param ] ) ] ) ]

   quoted-string = &amp;lt;quoted-string, see &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.6&quot;&gt;[RFC7230], Section&amp;nbsp;3.2.6&lt;/a&gt;&amp;gt;

   token = &amp;lt;token, see &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.6&quot;&gt;[RFC7230], Section&amp;nbsp;3.2.6&lt;/a&gt;&amp;gt;
   token68 = 1*( ALPHA / DIGIT / &quot;-&quot; / &quot;.&quot; / &quot;_&quot; / &quot;~&quot; / &quot;+&quot; / &quot;/&quot; )
    *&quot;=&quot; 

Index

   4
      401 Unauthorized (status code)  6
      407 Proxy Authentication Required (status code)  6

   A
      Authorization header field  8

   C
      Canonical Root URI  5

   G
      Grammar
         auth-param  4
         auth-scheme  4
         Authorization  8
         challenge  4
         credentials  5
         Proxy-Authenticate  8
         Proxy-Authorization  9
         token68  4
         WWW-Authenticate  7

   P
      Protection Space  5
      Proxy-Authenticate header field  8
      Proxy-Authorization header field  9

   R
      Realm  5

   W
      WWW-Authenticate header field  7 

Authors' Addresses

   Roy T. Fielding (editor)
   Adobe Systems Incorporated
   345 Park Ave
   San Jose, CA  95110
   USA

   EMail: fielding@gbiv.com
   URI:   &lt;a href=&quot;http://roy.gbiv.com/&quot;&gt;http://roy.gbiv.com/&lt;/a&gt;


   Julian F. Reschke (editor)
   greenbytes GmbH
   Hafenweg 16
   Muenster, NW  48155
   Germany

   EMail: julian.reschke@greenbytes.de
   URI:   &lt;a href=&quot;http://greenbytes.de/tech/webdav/&quot;&gt;http://greenbytes.de/tech/webdav/&lt;/a&gt;


Fielding &amp;amp; Reschke           Standards Track                   [Page 19]</source>
          <target state="translated">В собранном ниже ABNF правила списка расширены в соответствии с &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-1.2&quot;&gt;разделом &lt;/a&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-1.2&quot;&gt;1.2 [RFC7230]&lt;/a&gt; . Авторизация = учетные данные BWS = &amp;lt;BWS, см. &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.3&quot;&gt;[RFC7230], раздел 3.2.3&lt;/a&gt; &amp;gt; OWS = &amp;lt;OWS, см. &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.3&quot;&gt;[RFC7230], раздел 3.2.3&lt;/a&gt;&amp;gt; Proxy-Authenticate = * (&quot;,&quot; OWS) вызов * (OWS &quot;,&quot; [OWS вызов]) Proxy-Authorization = credentials WWW-Authenticate = * (&quot;,&quot; OWS) вызов * (OWS &quot;,&quot; [OWS вызов ]) auth-param = token BWS &quot;=&quot; BWS (токен / строка в кавычках) auth-scheme = token проблема = auth-scheme [1 * SP (token68 / [(&quot;,&quot; / auth-param) * (OWS &quot; , &quot;[OWS auth-param])])] credentials = auth-scheme [1 * SP (token68 / [(&quot;, &quot;/ auth-param) * (OWS&quot;, &quot;[OWS auth-param])])] quoted-string = &amp;lt;quoted-string, см. &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.6&quot;&gt;[RFC7230], раздел 3.2.6&lt;/a&gt; &amp;gt; token = &amp;lt;token, см. &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.6&quot;&gt;[RFC7230], раздел 3.2.6&lt;/a&gt;&amp;gt; token68 = 1 * (ALPHA / DIGIT / &quot;-&quot; / &quot;.&quot; / &quot;_&quot; / &quot;~&quot; / &quot;+&quot; / &quot;/&quot;) * &quot;=&quot; Индекс 4 401 Неавторизован (код состояния) 6 407 Аутентификация прокси Обязательно (код состояния) 6 A Поле заголовка авторизации 8 C Канонический корневой URI 5 G Грамматика auth-param 4 auth-scheme 4 Авторизация 8 запрос 4 учетные данные 5 Proxy-Authenticate 8 Proxy-Authorization 9 token68 4 WWW-Authenticate 7 P Protection Space 5 Поле заголовка Proxy-Authenticate 8 Поле заголовка Proxy-Authorization 9 R Область 5 W Поле заголовка WWW-Authenticate 7 Адреса авторов Рой Т.Филдинг (редактор) Adobe Systems Incorporated 345 Park Ave San Jose, CA 95110 USA Электронная почта: fielding@gbiv.com URI: &lt;a href=&quot;http://roy.gbiv.com/&quot;&gt;http://roy.gbiv.com/&lt;/a&gt; Джулиан Ф. Решке (редактор) greenbytes GmbH Hafenweg 16 Muenster, NW 48155 Германия Электронная почта: julian.reschke@greenbytes.de URI: &lt;a href=&quot;http://greenbytes.de/tech/webdav/&quot;&gt;http://greenbytes.de/tech/webdav/&lt;/a&gt; Fielding &amp;amp; Reschke Standards Track [Страница 19]</target>
        </trans-unit>
        <trans-unit id="feeba52d99d5a0008f5d811bd13452d39d2497a5" translate="yes" xml:space="preserve">
          <source>In the collected ABNF below, list rules are expanded as per &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-1.2&quot;&gt;Section&lt;/a&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-1.2&quot;&gt;1.2 of [RFC7230]&lt;/a&gt;.

   ETag = entity-tag

   HTTP-date = &amp;lt;HTTP-date, see &lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-7.1.1.1&quot;&gt;[RFC7231], Section&amp;nbsp;7.1.1.1&lt;/a&gt;&amp;gt;

   If-Match = &quot;*&quot; / ( *( &quot;,&quot; OWS ) entity-tag *( OWS &quot;,&quot; [ OWS
    entity-tag ] ) )
   If-Modified-Since = HTTP-date
   If-None-Match = &quot;*&quot; / ( *( &quot;,&quot; OWS ) entity-tag *( OWS &quot;,&quot; [ OWS
    entity-tag ] ) )
   If-Unmodified-Since = HTTP-date

   Last-Modified = HTTP-date

   OWS = &amp;lt;OWS, see &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.3&quot;&gt;[RFC7230], Section&amp;nbsp;3.2.3&lt;/a&gt;&amp;gt;

   entity-tag = [ weak ] opaque-tag
   etagc = &quot;!&quot; / %x23-7E ; '#'-'~'
    / obs-text

   obs-text = &amp;lt;obs-text, see &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.6&quot;&gt;[RFC7230], Section&amp;nbsp;3.2.6&lt;/a&gt;&amp;gt;
   opaque-tag = DQUOTE *etagc DQUOTE

   weak = %x57.2F ; W/ 

Index

   3
      304 Not Modified (status code)  19

   4
      412 Precondition Failed (status code)  18

   E
      ETag header field  9

   G
      Grammar
         entity-tag  9
         ETag  9
         etagc  9
         If-Match  13
         If-Modified-Since  15
         If-None-Match  14
         If-Unmodified-Since  17
         Last-Modified  7
         opaque-tag  9
         weak  9

   I
      If-Match header field  13
      If-Modified-Since header field  16
      If-None-Match header field  14
      If-Unmodified-Since header field  17

   L
      Last-Modified header field  7

   M
      metadata  5

   S
      selected representation  4

   V
      validator  5
         strong  5
         weak  5 

Authors' Addresses

   Roy T. Fielding (editor)
   Adobe Systems Incorporated
   345 Park Ave
   San Jose, CA  95110
   USA

   EMail: fielding@gbiv.com
   URI:   &lt;a href=&quot;http://roy.gbiv.com/&quot;&gt;http://roy.gbiv.com/&lt;/a&gt;


   Julian F. Reschke (editor)
   greenbytes GmbH
   Hafenweg 16
   Muenster, NW  48155
   Germany

   EMail: julian.reschke@greenbytes.de
   URI:   &lt;a href=&quot;http://greenbytes.de/tech/webdav/&quot;&gt;http://greenbytes.de/tech/webdav/&lt;/a&gt;


Fielding &amp;amp; Reschke           Standards Track                   [Page 28]</source>
          <target state="translated">В собранном ниже ABNF правила списка расширены в соответствии с &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-1.2&quot;&gt;разделом &lt;/a&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-1.2&quot;&gt;1.2 [RFC7230]&lt;/a&gt; . ETag = entity-tag HTTP-date = &amp;lt;HTTP-date, см. &lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-7.1.1.1&quot;&gt;[RFC7231], раздел 7.1.1.1&lt;/a&gt; &amp;gt; If-Match = &quot;*&quot; / (* (&quot;,&quot; OWS) entity-tag * (OWS &quot;,&quot; [ OWS entity-tag])) If-Modified-Since = HTTP-date If-None-Match = &quot;*&quot; / (* (&quot;,&quot; OWS) entity-tag * (OWS &quot;,&quot; [OWS entity-tag]) ) If-Unmodified-Since = HTTP-date Last-Modified = HTTP-date OWS = &amp;lt;OWS, см. &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.3&quot;&gt;[RFC7230], раздел 3.2.3&lt;/a&gt; &amp;gt; entity-tag = [weak] opaque-tag etagc = &quot;!&quot; /% x23-7E; '#' - '~' / obs-text obs-text = &amp;lt;obs-text, см. &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.6&quot;&gt;[RFC7230], раздел 3.2.6.&lt;/a&gt;&amp;gt; opaque-tag = DQUOTE * etagc DQUOTE weak =% x57.2F; W / Index 3 304 Not Modified (код состояния) 19 4 412 Precondition Failed (status code) 18 E Поле заголовка ETag 9 Grammar entity-tag 9 ETag 9 etagc 9 If-Match 13 If-Modified-Since 15 If-None- Match 14 If-Unmodified-Since 17 Last-Modified 7 opaque-tag 9 weak 9 I Поле заголовка If-Match 13 Поле заголовка If-Modified-Since 16 If-None-Match поле заголовка 14 Поле заголовка If-Unmodified-Since 17 L Поле заголовка Last-Modified 7 M метаданных 5 S выбранное представление 4 V валидатор 5 сильный 5 слабый 5 Адреса авторов Roy T.Филдинг (редактор) Adobe Systems Incorporated 345 Park Ave San Jose, CA 95110 USA Электронная почта: fielding@gbiv.com URI: &lt;a href=&quot;http://roy.gbiv.com/&quot;&gt;http://roy.gbiv.com/&lt;/a&gt; Джулиан Ф. Решке (редактор) greenbytes GmbH Hafenweg 16 Muenster, NW 48155 Германия Электронная почта: julian.reschke@greenbytes.de URI: &lt;a href=&quot;http://greenbytes.de/tech/webdav/&quot;&gt;http://greenbytes.de/tech/webdav/&lt;/a&gt; Fielding &amp;amp; Reschke Standards Track [Страница 28]</target>
        </trans-unit>
        <trans-unit id="472f98def3eac77e06a2358d336b65f3adb470f7" translate="yes" xml:space="preserve">
          <source>In the example above, line 3 creates an XML body to send with the &lt;code&gt;POST&lt;/code&gt; request in line 8. Also, on line 9, a &quot;customized&quot; (non-standard) HTTP request header is set (&lt;code&gt;X-PINGOTHER: pingpong&lt;/code&gt;). Such headers are not part of the HTTP/1.1 protocol, but are generally useful to web applications. Since the request uses a Content-Type of &lt;code&gt;application/xml&lt;/code&gt;, and since a custom header is set, this request is preflighted.</source>
          <target state="translated">В приведенном выше примере строка 3 создает тело XML для отправки с запросом &lt;code&gt;POST&lt;/code&gt; в строке 8. Кроме того, в строке 9 устанавливается &amp;laquo;настроенный&amp;raquo; (нестандартный) заголовок HTTP-запроса ( &lt;code&gt;X-PINGOTHER: pingpong&lt;/code&gt; ). Такие заголовки не являются частью протокола HTTP / 1.1, но обычно полезны для веб-приложений. Поскольку в запросе используется Content-Type &lt;code&gt;application/xml&lt;/code&gt; и установлен настраиваемый заголовок, этот запрос выполняется заранее.</target>
        </trans-unit>
        <trans-unit id="09022b0e85e69204da784160f58571ee0eaec54e" translate="yes" xml:space="preserve">
          <source>In the example below a &lt;a href=&quot;../status/204&quot;&gt;&lt;code&gt;204&lt;/code&gt;&lt;/a&gt; response code is used, because the response does not carry a payload body. A &lt;a href=&quot;../status/200&quot;&gt;&lt;code&gt;200&lt;/code&gt;&lt;/a&gt; response could have contained a payload body.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90a33fcc28f73464c7c1ed80b477376d44e96863" translate="yes" xml:space="preserve">
          <source>In the first half of the 2010s, Google demonstrated an alternative way of exchanging data between client and server, by implementing an experimental protocol SPDY. This amassed interest from developers working on both browsers and servers. Defining an increase in responsiveness, and solving the problem of duplication of data transmitted, SPDY served as the foundations of the HTTP/2 protocol.</source>
          <target state="translated">В первой половине 2010-х годов компания Google продемонстрировала альтернативный способ обмена данными между клиентом и сервером,реализовав экспериментальный протокол SPDY.Это вызвало большой интерес со стороны разработчиков,работающих как над браузерами,так и над серверами.Определяя увеличение скорости отклика и решая проблему дублирования передаваемых данных,SPDY послужила основой протокола HTTP/2.</target>
        </trans-unit>
        <trans-unit id="4f83336e929fe39e857341053bf53bb9d367a72d" translate="yes" xml:space="preserve">
          <source>In the following example, &lt;code&gt;max-age&lt;/code&gt; is set to 2 years, raised from what was a former limit &lt;code&gt;max-age&lt;/code&gt; of 1 year. Note that 1 year is acceptable for a domain to be included in browsers' HSTS preload lists. 2 years is, however, the recommended goal as a website's final HSTS configuration as explained on &lt;a href=&quot;https://hstspreload.org&quot;&gt;https://hstspreload.org&lt;/a&gt;. It also suffixed with &lt;code&gt;preload&lt;/code&gt; which is necessary for inclusion in most major web browsers' HSTS preload lists, e.g. Chromium, Edge, &amp;amp; Firefox.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20562e67671b5bf845611bfa4f3b14fd6e956c7a" translate="yes" xml:space="preserve">
          <source>In the past, specific plug-ins, add-ons or extensions added user agent parts to notify sites they were installed. The recommended way to do this, if it's absolutely necessary (remember that it slows down every request) is to &lt;a href=&quot;https://developer.mozilla.org/en/Setting_HTTP_request_headers&quot;&gt;set a custom HTTP header&lt;/a&gt;.</source>
          <target state="translated">В прошлом определенные подключаемые модули, надстройки или расширения добавляли части пользовательского агента для уведомления сайтов о том, что они были установлены. Рекомендуемый способ сделать это, если это абсолютно необходимо (помните, что он замедляет каждый запрос), - &lt;a href=&quot;https://developer.mozilla.org/en/Setting_HTTP_request_headers&quot;&gt;установить собственный HTTP-заголовок&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="312bfeb98e09b0ebf786270e4655ffbe98874e6b" translate="yes" xml:space="preserve">
          <source>In the past, web content was able to access whatever &lt;code&gt;resource:&lt;/code&gt; URIs were desired &amp;mdash; not only Firefox&amp;rsquo;s internal resources, but also extensions&amp;rsquo; assets. Now this behavior is prohibited by default.</source>
          <target state="translated">В прошлом веб-контент мог получить доступ к любому &lt;code&gt;resource:&lt;/code&gt; требовались URI - не только внутренние ресурсы Firefox, но и активы расширений. Теперь такое поведение запрещено по умолчанию.</target>
        </trans-unit>
        <trans-unit id="75008cbe2513d02694dbb1b988119207d90d0106" translate="yes" xml:space="preserve">
          <source>In the realm of internationalization, this specification complies
   with the IETF Character Set Policy [&lt;a href=&quot;https://tools.ietf.org/html/rfc2277&quot;&gt;RFC2277&lt;/a&gt;].  In this specification,
   human-readable fields can be found either in the value of a property,
   or in an error message returned in a response entity body.  In both
   cases, the human-readable content is encoded using XML, which has
   explicit provisions for character set tagging and encoding, and
   requires that XML processors read XML elements encoded, at minimum,
   using the UTF-8 [&lt;a href=&quot;https://tools.ietf.org/html/rfc3629&quot;&gt;RFC3629&lt;/a&gt;] and UTF-16 [&lt;a href=&quot;https://tools.ietf.org/html/rfc2781&quot;&gt;RFC2781&lt;/a&gt;] encodings of the ISO
   10646 multilingual plane.  XML examples in this specification
   demonstrate use of the charset parameter of the Content-Type header
   (defined in [&lt;a href=&quot;https://tools.ietf.org/html/rfc3023&quot;&gt;RFC3023&lt;/a&gt;]), as well as XML charset declarations.

   XML also provides a language tagging capability for specifying the
   language of the contents of a particular XML element.  The &quot;xml:lang&quot;
   attribute appears on an XML element to identify the language of its
   content and attributes.  See [&lt;a href=&quot;#ref-REC-XML&quot;&gt;REC-XML&lt;/a&gt;] for definitions of values and
   scoping.

   WebDAV applications MUST support the character set tagging, character
   set encoding, and the language tagging functionality of the XML
   specification.  Implementors of WebDAV applications are strongly
   encouraged to read &quot;XML Media Types&quot; [&lt;a href=&quot;https://tools.ietf.org/html/rfc3023&quot;&gt;RFC3023&lt;/a&gt;] for instruction on
   which MIME media type to use for XML transport, and on use of the
   charset parameter of the Content-Type header.

   Names used within this specification fall into four categories: names
   of protocol elements such as methods and headers, names of XML
   elements, names of properties, and names of conditions.  Naming of
   protocol elements follows the precedent of HTTP, using English names
   encoded in US-ASCII for methods and headers.  Since these protocol
   elements are not visible to users, and are simply long token
   identifiers, they do not need to support multiple languages.
   Similarly, the names of XML elements used in this specification are
   not visible to the user and hence do not need to support multiple
   languages.

   WebDAV property names are qualified XML names (pairs of XML namespace
   name and local name).  Although some applications (e.g., a generic
   property viewer) will display property names directly to their users,
   it is expected that the typical application will use a fixed set of
   properties, and will provide a mapping from the property name and
   namespace to a human-readable field when displaying the property name 

   to a user.  It is only in the case where the set of properties is not
   known ahead of time that an application need display a property name
   to a user.  We recommend that applications provide human-readable
   property names wherever feasible.

   For error reporting, we follow the convention of HTTP/1.1 status
   codes, including with each status code a short, English description
   of the code (e.g., 423 (Locked)).  While the possibility exists that
   a poorly crafted user agent would display this message to a user,
   internationalized applications will ignore this message, and display
   an appropriate message in the user's language and character set.

   Since interoperation of clients and servers does not require locale
   information, this specification does not specify any mechanism for
   transmission of this information.</source>
          <target state="translated">В области интернационализации эта спецификация соответствует политике набора символов IETF [ &lt;a href=&quot;https://tools.ietf.org/html/rfc2277&quot;&gt;RFC2277&lt;/a&gt; ]. В этой спецификации удобочитаемые поля можно найти либо в значении свойства, либо в сообщении об ошибке, возвращаемом в теле объекта ответа. В обоих случаях удобочитаемый контент кодируется с использованием XML, который имеет явные положения для маркировки и кодирования набора символов и требует, чтобы процессоры XML читали элементы XML, закодированные, как минимум, с использованием UTF-8 [ &lt;a href=&quot;https://tools.ietf.org/html/rfc3629&quot;&gt;RFC3629&lt;/a&gt; ] и UTF-16. [ &lt;a href=&quot;https://tools.ietf.org/html/rfc2781&quot;&gt;RFC2781&lt;/a&gt; ] кодировки многоязычной плоскости ISO 10646. Примеры XML в этой спецификации демонстрируют использование параметра charset заголовка Content-Type (определенного в [ &lt;a href=&quot;https://tools.ietf.org/html/rfc3023&quot;&gt;RFC3023&lt;/a&gt;]), а также объявления кодировки XML. XML также предоставляет возможность языковой разметки для указания языка содержимого конкретного элемента XML. Атрибут &amp;laquo;xml: lang&amp;raquo; появляется в элементе XML для определения языка его содержимого и атрибутов. См. [ &lt;a href=&quot;#ref-REC-XML&quot;&gt;REC-XML&lt;/a&gt; ] для определения значений и области действия. Приложения WebDAV ДОЛЖНЫ поддерживать маркировку набора символов, кодировку набора символов и функциональность маркировки языков, указанную в спецификации XML. Разработчикам приложений WebDAV настоятельно рекомендуется прочитать &amp;laquo;Типы мультимедиа XML&amp;raquo; [ &lt;a href=&quot;https://tools.ietf.org/html/rfc3023&quot;&gt;RFC3023&lt;/a&gt;] для инструкций о том, какой тип мультимедиа MIME использовать для транспорта XML, и об использовании параметра charset заголовка Content-Type. Имена, используемые в этой спецификации, делятся на четыре категории: имена элементов протокола, таких как методы и заголовки, имена элементов XML, имена свойств и имена условий. Именование элементов протокола следует прецеденту HTTP, используя английские имена, закодированные в US-ASCII для методов и заголовков. Поскольку эти элементы протокола не видны пользователям и представляют собой просто длинные идентификаторы токенов, они не должны поддерживать несколько языков. Точно так же имена элементов XML, используемых в этой спецификации, не видны пользователю и, следовательно, не нуждаются в поддержке нескольких языков.Имена свойств WebDAV - это квалифицированные имена XML (пары имени пространства имен XML и локального имени). Хотя некоторые приложения (например, универсальная программа просмотра свойств) будут отображать имена свойств непосредственно для своих пользователей, ожидается, что типичное приложение будет использовать фиксированный набор свойств и обеспечит сопоставление имени свойства и пространства имен с человеком. читаемое поле при отображении имени свойства пользователю. Только в том случае, если набор свойств не известен заранее, приложение должно отображать имя свойства для пользователя. Мы рекомендуем, чтобы приложения по возможности предоставляли удобочитаемые имена свойств. Для отчетов об ошибках мы следуем соглашению о кодах состояния HTTP / 1.1, включая в каждый код состояния краткое описание кода на английском языке (например, 423 (заблокировано)).Хотя существует вероятность того, что плохо созданный пользовательский агент отобразит это сообщение пользователю, интернационализированные приложения будут игнорировать это сообщение и отображать соответствующее сообщение на языке пользователя и наборе символов. Поскольку для взаимодействия клиентов и серверов не требуется информация о языковом стандарте, эта спецификация не определяет какой-либо механизм передачи этой информации.</target>
        </trans-unit>
        <trans-unit id="0c7caf7be6ba6f74cd1c7e69b2965145b991a7b6" translate="yes" xml:space="preserve">
          <source>In these examples, the entire reporting API payload is shown. The top-level &lt;code&gt;&quot;body&quot;&lt;/code&gt; key contains the network error report.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08819ce444413d248ed409d1bf3d59a094d39073" translate="yes" xml:space="preserve">
          <source>In this article, we focus on resource URIs, which are used internally by Firefox to point to built-in resources.</source>
          <target state="translated">В этой статье мы сконцентрируемся на URI ресурсов,которые используются внутри Firefox для указания на встроенные ресурсы.</target>
        </trans-unit>
        <trans-unit id="4a9daa27d7ffde10bb20032aa2c669c7114837b2" translate="yes" xml:space="preserve">
          <source>In this case look for a &lt;a href=&quot;headers/last-modified&quot;&gt;&lt;code&gt;Last-Modified&lt;/code&gt;&lt;/a&gt; header. If this header is present, then the cache's freshness lifetime is equal to the value of the &lt;code&gt;Date&lt;/code&gt; header minus the value of the &lt;code&gt;Last-modified&lt;/code&gt; header divided by 10. The expiration time is computed as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0238c032fe8b075e22eb8b6c9fa8e03afd0be1e7" translate="yes" xml:space="preserve">
          <source>In this case, responses can be sent back based on some considerations.</source>
          <target state="translated">В этом случае ответы могут быть отправлены обратно по некоторым соображениям.</target>
        </trans-unit>
        <trans-unit id="9c09df89aeef1f40e2d786af81ae2b5377bc9307" translate="yes" xml:space="preserve">
          <source>In this case, the server can send back a &lt;a href=&quot;status/303&quot;&gt;&lt;code&gt;303&lt;/code&gt;&lt;/a&gt; (See Other) response for a URL that will contain the right information. If the reload button is pressed, only that page is redisplayed, without replaying the unsafe requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06b277eb0332b7d0f528bc488b7a6ac8fc32ac6b" translate="yes" xml:space="preserve">
          <source>In this case, the server can send back a &lt;a href=&quot;status/303&quot;&gt;&lt;code&gt;303&lt;/code&gt;&lt;/a&gt; (See Other) response that will contain the right information, but if the reload button is pressed, only this page is redisplayed, without replaying the unsafe requests.</source>
          <target state="translated">В этом случае сервер может отправить ответ &lt;a href=&quot;status/303&quot;&gt; &lt;code&gt;303&lt;/code&gt; &lt;/a&gt; (см. Прочее), который будет содержать правильную информацию, но при нажатии кнопки перезагрузки повторно отображается только эта страница без повторного воспроизведения небезопасных запросов.</target>
        </trans-unit>
        <trans-unit id="18d9fe67ef95cf5048b92cb9c02dafef0b4ac177" translate="yes" xml:space="preserve">
          <source>In this case, you need to configure the server receiving the HTTP requests (which is most likely the same for www and non-www URLs) to respond with an adequate HTTP &lt;a href=&quot;../status/301&quot;&gt;&lt;code&gt;301&lt;/code&gt;&lt;/a&gt; response to any request to the non-canonical domain. This will redirect the browser trying to access the non-canonical URLs to their canonical equivalent. For example, if you've chosen to use non-www URLs as the canonical type, you should redirect all www URLs to their equivalent URL without the www.</source>
          <target state="translated">В этом случае вам необходимо настроить сервер, получающий HTTP-запросы (что, скорее всего, одинаково для URL-адресов с www и без www), чтобы он отвечал адекватным ответом HTTP &lt;a href=&quot;../status/301&quot;&gt; &lt;code&gt;301&lt;/code&gt; &lt;/a&gt; на любой запрос к неканоническому домену. Это перенаправит браузер, пытающийся получить доступ к неканоническим URL-адресам, на их канонические эквиваленты. Например, если вы выбрали использование URL-адресов без www в качестве канонического типа, вам следует перенаправить все URL-адреса с www на их эквивалентные URL без www.</target>
        </trans-unit>
        <trans-unit id="7847050425f6d076cc4ad765d4143b2fe451ad2c" translate="yes" xml:space="preserve">
          <source>In this example all of the hosts in a given subnet are connected-to directly, others are connected through the proxy:</source>
          <target state="translated">В данном примере все хосты в данной подсети подключены напрямую,остальные-через прокси:</target>
        </trans-unit>
        <trans-unit id="463b3c56a942948bf5001ffa290aad288ddfa0e2" translate="yes" xml:space="preserve">
          <source>In this example, &lt;strong&gt;pin-sha256=&quot;cUPcTAZWKaASuYWhhneDttWpY3oBAkE3h2+soZS7sWs=&quot;&lt;/strong&gt; pins the server's public key used in production. The second pin declaration &lt;strong&gt;pin-sha256=&quot;M8HztCzM3elUxkcjR2S5P4hhyBNf6lHkmjAHKhpGPWE=&quot;&lt;/strong&gt; also pins the backup key. &lt;strong&gt;max-age=5184000&lt;/strong&gt; tells the client to store this information for two months, which is a reasonable time limit according to the IETF RFC. This key pinning is also valid for all subdomains, which is told by the &lt;strong&gt;includeSubDomains&lt;/strong&gt; declaration. Finally, &lt;strong&gt;report-uri=&quot;https://www.example.net/hpkp-report&quot;&lt;/strong&gt; explains where to report pin validation failures.</source>
          <target state="translated">В этом примере &lt;strong&gt;pin-sha256 = &quot;cUPcTAZWKaASuYWhhneDttWpY3oBAkE3h2 + soZS7sWs =&quot; закрепляет&lt;/strong&gt; открытый ключ сервера, используемый в производстве. Второе объявление &lt;strong&gt;вывода pin-sha256 = &quot;M8HztCzM3elUxkcjR2S5P4hhyBNf6lHkmjAHKhpGPWE =&quot;&lt;/strong&gt; также &lt;strong&gt;закрепляет&lt;/strong&gt; резервный ключ. &lt;strong&gt;max-age = 5184000&lt;/strong&gt; указывает клиенту хранить эту информацию в течение двух месяцев, что является разумным сроком в соответствии с IETF RFC. Это закрепление ключа также действует для всех поддоменов, о чем &lt;strong&gt;сообщает&lt;/strong&gt; объявление &lt;strong&gt;includeSubDomains&lt;/strong&gt; . Наконец, &lt;strong&gt;report-uri = &quot;https://www.example.net/hpkp-report&quot;&lt;/strong&gt; объясняет, где сообщать об ошибках проверки PIN-кода.</target>
        </trans-unit>
        <trans-unit id="15fe4fb824d6da70afb6414abaf5dbbc417ed391" translate="yes" xml:space="preserve">
          <source>In this example, &lt;strong&gt;pin-sha256=&quot;cUPcTAZWKaASuYWhhneDttWpY3oBAkE3h2+soZS7sWs=&quot;&lt;/strong&gt; pins the server's public key used in production. The second pin declaration &lt;strong&gt;pin-sha256=&quot;M8HztCzM3elUxkcjR2S5P4hhyBNf6lHkmjAHKhpGPWE=&quot;&lt;/strong&gt; also pins the backup key. &lt;strong&gt;max-age=5184000&lt;/strong&gt; tells the client to store this information for two months, which is a reasonable time limit according to the IETF RFC. This key pinning is also valid for all subdomains, which is told by the &lt;strong&gt;includeSubDomains&lt;/strong&gt; declaration. Finally, &lt;strong&gt;report-uri=&quot;https://www.example.org/hpkp-report&quot;&lt;/strong&gt; explains where to report pin validation failures.</source>
          <target state="translated">В этом примере &lt;strong&gt;pin-sha256 = &quot;cUPcTAZWKaASuYWhhneDttWpY3oBAkE3h2 + soZS7sWs =&quot; закрепляет&lt;/strong&gt; открытый ключ сервера, используемый в производстве. Второе объявление &lt;strong&gt;вывода pin-sha256 = &quot;M8HztCzM3elUxkcjR2S5P4hhyBNf6lHkmjAHKhpGPWE =&quot;&lt;/strong&gt; также &lt;strong&gt;закрепляет&lt;/strong&gt; резервный ключ. &lt;strong&gt;max-age = 5184000&lt;/strong&gt; указывает клиенту хранить эту информацию в течение двух месяцев, что является разумным сроком в соответствии с IETF RFC. Это закрепление ключа также действует для всех поддоменов, о чем &lt;strong&gt;сообщает&lt;/strong&gt; объявление &lt;strong&gt;includeSubDomains&lt;/strong&gt; . Наконец, &lt;strong&gt;report-uri = &quot;https://www.example.org/hpkp-report&quot;&lt;/strong&gt; объясняет, где сообщать об ошибках проверки PIN-кода.</target>
        </trans-unit>
        <trans-unit id="7b4d6bd9abca71a4536572bc7fcac564f95ec372" translate="yes" xml:space="preserve">
          <source>In this example, &lt;strong&gt;pin-sha256=&quot;cUPcTAZWKaASuYWhhneDttWpY3oBAkE3h2+soZS7sWs=&quot;&lt;/strong&gt; pins the server's public key used in production. The second pin declaration &lt;strong&gt;pin-sha256=&quot;M8HztCzM3elUxkcjR2S5P4hhyBNf6lHkmjAHKhpGPWE=&quot;&lt;/strong&gt; also pins the backup key. This key pinning is also valid for all subdomains, which is told by the &lt;strong&gt;includeSubDomains&lt;/strong&gt; declaration. Finally, &lt;strong&gt;report-uri=&quot;https://www.example.org/hpkp-report&quot;&lt;/strong&gt; explains where to report pin validation failures.</source>
          <target state="translated">В этом примере &lt;strong&gt;pin-sha256 = &quot;cUPcTAZWKaASuYWhhneDttWpY3oBAkE3h2 + soZS7sWs =&quot; закрепляет&lt;/strong&gt; открытый ключ сервера, используемый в производстве. Второе объявление &lt;strong&gt;вывода pin-sha256 = &quot;M8HztCzM3elUxkcjR2S5P4hhyBNf6lHkmjAHKhpGPWE =&quot;&lt;/strong&gt; также &lt;strong&gt;закрепляет&lt;/strong&gt; резервный ключ. Это закрепление ключа также действует для всех поддоменов, о чем &lt;strong&gt;сообщает&lt;/strong&gt; объявление &lt;strong&gt;includeSubDomains&lt;/strong&gt; . Наконец, &lt;strong&gt;report-uri = &quot;https://www.example.org/hpkp-report&quot;&lt;/strong&gt; объясняет, где сообщать об ошибках проверки PIN-кода.</target>
        </trans-unit>
        <trans-unit id="26e35d19a2c9f9c005f9c384d2fca94ef727d3c6" translate="yes" xml:space="preserve">
          <source>In this example, content originally loaded from &lt;code&gt;http://foo.example&lt;/code&gt; makes a simple GET request to a resource on &lt;code&gt;http://bar.other&lt;/code&gt; which sets Cookies. Content on foo.example might contain JavaScript like this:</source>
          <target state="translated">В этом примере контент, изначально загруженный с &lt;code&gt;http://foo.example&lt;/code&gt; , выполняет простой запрос GET к ресурсу на &lt;code&gt;http://bar.other&lt;/code&gt; , который устанавливает файлы cookie. Контент на foo.example может содержать такой JavaScript:</target>
        </trans-unit>
        <trans-unit id="1bad895874eb650b248a44ce79a14ea76d8467d2" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;a href=&quot;expires&quot;&gt;&lt;code&gt;Expires&lt;/code&gt;&lt;/a&gt; header is used at the end of the chunked message and serves as a trailing header.</source>
          <target state="translated">В этом примере заголовок &lt;a href=&quot;expires&quot;&gt; &lt;code&gt;Expires&lt;/code&gt; &lt;/a&gt; используется в конце фрагментированного сообщения и служит завершающим заголовком.</target>
        </trans-unit>
        <trans-unit id="d3619c052570e6c7b13df3247db7eb34508081c2" translate="yes" xml:space="preserve">
          <source>In this example, the domain name &quot;&lt;a href=&quot;http://www.spreadfirefox.com&quot;&gt;www.spreadfirefox.com&lt;/a&gt;&quot; will be pre-resolved.</source>
          <target state="translated">В этом примере будет предварительно разрешено доменное имя &amp;laquo; &lt;a href=&quot;http://www.spreadfirefox.com&quot;&gt;www.spreadfirefox.com&lt;/a&gt; &amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="87dc9881299868d18d5f581592c04cfda6647192" translate="yes" xml:space="preserve">
          <source>In this example, the domain name &quot;&lt;a href=&quot;https://www.mozilla.org/contribute/&quot;&gt;www.mozilla.org/contribute&lt;/a&gt;&quot; will be pre-resolved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f69eca7e9cf725cc07d70aadad7696549a869cd3" translate="yes" xml:space="preserve">
          <source>In this example, the user agent string is mobile Safari&amp;rsquo;s version. It contains the word &lt;code&gt;&quot;Mobile&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ece92baae1897d8ad92e5e7a0a62d4670b062563" translate="yes" xml:space="preserve">
          <source>In this example, the user agent string is mobile safari version. It contains the word &quot;Mobile&quot;.</source>
          <target state="translated">В данном примере строка агента пользователя является мобильной версией сафари.Она содержит слово &quot;мобильная&quot;.</target>
        </trans-unit>
        <trans-unit id="bb7d3fc0025e51622cf41c74720e5e287c75d33c" translate="yes" xml:space="preserve">
          <source>In this response, &lt;code&gt;Accept-Ranges: bytes&lt;/code&gt; indicates that bytes can be used as unit to define a range. Here the &lt;a href=&quot;headers/content-length&quot;&gt;&lt;code&gt;Content-Length&lt;/code&gt;&lt;/a&gt; header is also useful as it indicates the full size of the image to retrieve.</source>
          <target state="translated">В этом ответе &lt;code&gt;Accept-Ranges: bytes&lt;/code&gt; указывает, что байты могут использоваться как единица измерения для определения диапазона. Здесь также полезен заголовок &lt;a href=&quot;headers/content-length&quot;&gt; &lt;code&gt;Content-Length&lt;/code&gt; ,&lt;/a&gt; поскольку он указывает полный размер изображения для извлечения.</target>
        </trans-unit>
        <trans-unit id="795b5c095ca34b9eb4357638cfdaae755baa1753" translate="yes" xml:space="preserve">
          <source>In this section, the final line of each section gives the element
   type declaration using the format defined in [&lt;a href=&quot;#ref-REC-XML&quot;&gt;REC-XML&lt;/a&gt;].  The &quot;Value&quot;
   field, where present, specifies further restrictions on the allowable
   contents of the XML element using BNF (i.e., to further restrict the
   values of a PCDATA element).  Note that all of the elements defined
   here may be extended according to the rules defined in &lt;a href=&quot;#section-17&quot;&gt;Section 17&lt;/a&gt;.
   All elements defined here are in the &quot;DAV:&quot; namespace.</source>
          <target state="translated">В этом разделе последняя строка каждого раздела дает объявление типа элемента с использованием формата, определенного в [ &lt;a href=&quot;#ref-REC-XML&quot;&gt;REC-XML&lt;/a&gt; ]. Поле &amp;laquo;Значение&amp;raquo;, если оно присутствует, определяет дополнительные ограничения на допустимое содержимое элемента XML с использованием BNF (т. Е. Для дальнейшего ограничения значений элемента PCDATA). Обратите внимание, что все элементы, определенные здесь, могут быть расширены в соответствии с правилами, определенными в &lt;a href=&quot;#section-17&quot;&gt;Разделе 17&lt;/a&gt; . Все определенные здесь элементы находятся в пространстве имен &amp;laquo;DAV:&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="179432a2d14c1874e18b6638eed524eeb5842b02" translate="yes" xml:space="preserve">
          <source>Included in the response message from the server during the opening handshake process when the server is willing to initiate a WebSocket connection. It will appear no more than once in the response headers.</source>
          <target state="translated">Включается в ответное сообщение от сервера при открытии процесса рукопожатия,когда сервер готов инициировать WebSocket соединение.Оно будет появляться не более одного раза в заголовках ответов.</target>
        </trans-unit>
        <trans-unit id="9cab054870dbf49daaae3aee35de09e7abf09a42" translate="yes" xml:space="preserve">
          <source>Incomplete results: a &lt;a href=&quot;status/206&quot;&gt;&lt;code&gt;206&lt;/code&gt;&lt;/a&gt; (Partial Content) response.</source>
          <target state="translated">Неполные результаты: ответ &lt;a href=&quot;status/206&quot;&gt; &lt;code&gt;206&lt;/code&gt; &lt;/a&gt; (частичное содержимое).</target>
        </trans-unit>
        <trans-unit id="c2df9b932637fe9d32a0f16da1c11873398f873d" translate="yes" xml:space="preserve">
          <source>Index</source>
          <target state="translated">Index</target>
        </trans-unit>
        <trans-unit id="522b16bedc865c8cbd64e7b9adb9223fbc62cbb9" translate="yes" xml:space="preserve">
          <source>IndexedDB (for each database execute &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/IDBFactory/deleteDatabase&quot;&gt;&lt;code&gt;IDBFactory.deleteDatabase&lt;/code&gt;&lt;/a&gt;),</source>
          <target state="translated">IndexedDB (для каждой базы данных выполнить &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/IDBFactory/deleteDatabase&quot;&gt; &lt;code&gt;IDBFactory.deleteDatabase&lt;/code&gt; &lt;/a&gt; ),</target>
        </trans-unit>
        <trans-unit id="77a0f0c640c4020f67d5dbd8adc3745275738665" translate="yes" xml:space="preserve">
          <source>Indicates a URL path that must exist in the requested resource before sending the Cookie header. The %x2F (&quot;/&quot;) character is interpreted as a directory separator and sub directories will be matched as well (e.g. path=/docs, &quot;/docs&quot;, &quot;/docs/Web/&quot;, or &quot;/docs/Web/HTTP&quot; will all be matched).</source>
          <target state="translated">Указывает путь URL,который должен существовать в запрашиваемом ресурсе перед отправкой заголовка Cookie.Символ %x2F (&quot;/&quot;)интерпретируется как разделитель каталогов,и подкаталоги также будут сопоставлены (например,путь=/docs,&quot;/docs&quot;,&quot;/docs/Web/&quot; или &quot;/docs/Web/HTTP&quot;).</target>
        </trans-unit>
        <trans-unit id="2cd7bebabc246b7398c2557d2f27d3f5dfbfc228" translate="yes" xml:space="preserve">
          <source>Indicates an alternate location for the returned data.</source>
          <target state="translated">Указывает альтернативное местоположение для возвращаемых данных.</target>
        </trans-unit>
        <trans-unit id="9bf3af3031e2a167d607e233517fe07840ad0ce2" translate="yes" xml:space="preserve">
          <source>Indicates expectations that need to be fulfilled by the server in order to properly handle the request.</source>
          <target state="translated">Указывает на ожидания,которые должны быть выполнены сервером,чтобы правильно обработать запрос.</target>
        </trans-unit>
        <trans-unit id="c20b7c7e190c02dcd980a59596037eefb0d9d410" translate="yes" xml:space="preserve">
          <source>Indicates expectations that need to be fulfilled by the server to properly handle the request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="552935b2453887e59cf2e4f3e94e2e9ac12d93ef" translate="yes" xml:space="preserve">
          <source>Indicates how long the results of a preflight request can be cached.</source>
          <target state="translated">Показывает,как долго результаты предполетного запроса могут быть кэшированы.</target>
        </trans-unit>
        <trans-unit id="7c9b44d689ef4104318af0511c11748dc3967c95" translate="yes" xml:space="preserve">
          <source>Indicates how long the user agent should wait before making a follow-up request.</source>
          <target state="translated">Указывает,как долго пользовательский агент должен ждать,прежде чем делать последующий запрос.</target>
        </trans-unit>
        <trans-unit id="f6191c2fea1dc7665f3e010c435506f712c18963" translate="yes" xml:space="preserve">
          <source>Indicates if the resource transmitted should be displayed inline (default behavior without the header), or if it should be handled like a download and the browser should present a &amp;ldquo;Save As&amp;rdquo; dialog.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad3a4c007f7db3dfac95c3ba5f703c8f8dd59961" translate="yes" xml:space="preserve">
          <source>Indicates if the server supports range requests and if so, in which unit the range can be expressed.</source>
          <target state="translated">Указывает,поддерживает ли сервер запросы диапазона,и если да,то в какой единице можно выразить диапазон.</target>
        </trans-unit>
        <trans-unit id="46923176567e6f9182bcf4bbdd4ca07d5b57ade9" translate="yes" xml:space="preserve">
          <source>Indicates if the server supports range requests, and if so in which unit the range can be expressed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3430ae2cd395b1c94c2f79f53999b8989357367e" translate="yes" xml:space="preserve">
          <source>Indicates that either the client or the server would like to close the connection. This is the default on HTTP/1.0 requests.</source>
          <target state="translated">Указывает,что либо клиент,либо сервер хотели бы закрыть соединение.По умолчанию это относится к запросам HTTP/1.0.</target>
        </trans-unit>
        <trans-unit id="e484e47b9ff40bcaf3bfce679a53ef13604e1c95" translate="yes" xml:space="preserve">
          <source>Indicates that once a resource becomes stale, caches must not use their stale copy without successful &lt;a href=&quot;../caching#Cache_validation&quot;&gt;validation&lt;/a&gt; on the origin server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c99b1484ee170cc3fd51d8eb0f92ba2eff8fc73e" translate="yes" xml:space="preserve">
          <source>Indicates that the browser (Internet Explorer) should not display the option to &quot;Open&quot; a file that has been downloaded from an application, to prevent phishing attacks as the file otherwise would gain access to execute in the context of the application.</source>
          <target state="translated">Указывает,что браузер (Internet Explorer)не должен показывать опцию &quot;Открыть&quot; файл,который был загружен из приложения,чтобы предотвратить фишинговые атаки,так как в противном случае файл получит доступ для выполнения в контексте приложения.</target>
        </trans-unit>
        <trans-unit id="c4f79f8a6a3c8718f3618cea1550c9060b2c9c67" translate="yes" xml:space="preserve">
          <source>Indicates that the client is willing to accept a response that has exceeded its expiration time. Optionally, you can assign a value in seconds, indicating the time the response must not be expired by.</source>
          <target state="translated">Указывает на то,что клиент готов принять ответ,срок действия которого истек.Опционально,вы можете назначить значение в секундах,указывающее время,в течение которого срок действия ответа не должен истечь.</target>
        </trans-unit>
        <trans-unit id="06f0d192853b0ab8b3406d2dd070fa47ec20ae34" translate="yes" xml:space="preserve">
          <source>Indicates that the client is willing to accept a stale response if the check for a fresh one fails. The seconds value indicates for how long the client is willing to accept the stale response after the initial expiration.</source>
          <target state="translated">Указывает на то,что клиент готов принять несвежий ответ,если проверка на свежий не удается.Значение секунды показывает,как долго клиент готов принять несвежий ответ после первоначального истечения срока годности.</target>
        </trans-unit>
        <trans-unit id="deaef90dde647ea30a46f347a0d9e248199a5f91" translate="yes" xml:space="preserve">
          <source>Indicates that the client is willing to accept a stale response while asynchronously checking in the background for a fresh one. The seconds value indicates for how long the client is willing to accept a stale response.</source>
          <target state="translated">Указывает на то,что клиент готов принять застоявшийся ответ,асинхронно проверяя в фоновом режиме на наличие свежего.Значение секунды показывает,как долго клиент готов принять несвежий ответ.</target>
        </trans-unit>
        <trans-unit id="33fbfac7a3753ad2fc4a262b8c0b818d20d43473" translate="yes" xml:space="preserve">
          <source>Indicates that the client is willing to accept trailer fields in a chunked transfer coding.</source>
          <target state="translated">Указывает,что клиент готов принять поля трейлера в кодировке передачи.</target>
        </trans-unit>
        <trans-unit id="a44c16e62480d86b3a9b9458e2ea45fed4f4e530" translate="yes" xml:space="preserve">
          <source>Indicates that the client wants a response that will still be fresh for at least the specified number of seconds.</source>
          <target state="translated">Указывает,что клиент хочет получить ответ,который будет свежим,по крайней мере,в течение указанного количества секунд.</target>
        </trans-unit>
        <trans-unit id="b642df972d92ffd9369fe8f647cb5c9e563d0505" translate="yes" xml:space="preserve">
          <source>Indicates that the client would like to keep the connection open. Having a persistent connection is the default on HTTP/1.1 requests. The list of headers are the name of the header to be removed by the first non-transparent proxy or cache in-between: these headers define the connection between the emitter and the first entity, not the destination node.</source>
          <target state="translated">Указывает на то,что клиент хотел бы сохранить соединение открытым.Наличие постоянного соединения по умолчанию для запросов HTTP/1.1.Список заголовков-это имя заголовка,который должен быть удален первым непрозрачным прокси или кэшем между ними:эти заголовки определяют соединение между излучателем и первым сущностью,а не узлом назначения.</target>
        </trans-unit>
        <trans-unit id="f97447000dd6a21db07563d6ef729be734f5e4a3" translate="yes" xml:space="preserve">
          <source>Indicates that the request has been conveyed in early data.</source>
          <target state="translated">Указывает на то,что запрос был передан в ранних данных.</target>
        </trans-unit>
        <trans-unit id="0f74606c348d1fa1dbb5218dbab55ec440f2a48f" translate="yes" xml:space="preserve">
          <source>Indicates that the response body &lt;strong&gt;will not change&lt;/strong&gt; over time. The resource, if &lt;em&gt;unexpired&lt;/em&gt;, is unchanged on the server and therefore the client should not send a conditional revalidation for it (e.g. &lt;code&gt;If-None-Match&lt;/code&gt; or &lt;code&gt;If-Modified-Since&lt;/code&gt;) to check for updates, even when the user explicitly refreshes the page. Clients that aren't aware of this extension must ignore them as per the HTTP specification. In Firefox, &lt;code&gt;immutable&lt;/code&gt; is only honored on &lt;code&gt;https://&lt;/code&gt; transactions. For more information, see also this &lt;a href=&quot;https://bitsup.blogspot.de/2016/05/cache-control-immutable.html&quot;&gt;blog post&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5955a042968bb418bc770fb1ac84f6a1e3b04e52" translate="yes" xml:space="preserve">
          <source>Indicates that the response body will not change over time. The resource, if unexpired, is unchanged on the server and therefore the client should not send a conditional revalidation for it (e.g. &lt;code&gt;If-None-Match&lt;/code&gt; or &lt;code&gt;If-Modified-Since&lt;/code&gt;) to check for updates, even when the user explicitly refreshes the page. Clients that aren't aware of this extension must ignore them as per the HTTP specification. In Firefox, &lt;code&gt;immutable&lt;/code&gt; is only honored on &lt;code&gt;https://&lt;/code&gt; transactions. For more information, see also this &lt;a href=&quot;http://bitsup.blogspot.de/2016/05/cache-control-immutable.html&quot;&gt;blog post&lt;/a&gt;.</source>
          <target state="translated">Указывает, что тело ответа со временем не изменится. Ресурс, если срок его действия не истек, не изменяется на сервере, и поэтому клиент не должен отправлять для него условную повторную проверку (например, &lt;code&gt;If-None-Match&lt;/code&gt; или &lt;code&gt;If-Modified-Since&lt;/code&gt; ) для проверки обновлений, даже если пользователь явно обновляет страницу. , Клиенты, которые не знают об этом расширении, должны игнорировать их в соответствии со спецификацией HTTP. В Firefox &lt;code&gt;immutable&lt;/code&gt; выполняется только для транзакций &lt;code&gt;https://&lt;/code&gt; . Для получения дополнительной информации см. Также это &lt;a href=&quot;http://bitsup.blogspot.de/2016/05/cache-control-immutable.html&quot;&gt;сообщение в блоге&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7d6f6e0f4b09d76d1dc1ccd2d2b141f2a442a1d2" translate="yes" xml:space="preserve">
          <source>Indicates that the response is intended for a single user and must not be stored by a shared cache. A private cache may store the response.</source>
          <target state="translated">Указывает,что ответ предназначен для одного пользователя и не должен храниться в общем кэше.Частный кэш может хранить ответ.</target>
        </trans-unit>
        <trans-unit id="619c7b97c107a9d7b9f0f9a1bf6f8d31f3066053" translate="yes" xml:space="preserve">
          <source>Indicates that the response may be cached by any cache.</source>
          <target state="translated">Указывает,что ответ может быть кэширован любым кэшем.</target>
        </trans-unit>
        <trans-unit id="0a024414359139c546eb2b06d1c63cbb97a90599" translate="yes" xml:space="preserve">
          <source>Indicates that the server is unwilling to risk processing a request that might be replayed.</source>
          <target state="translated">Указывает на то,что сервер не желает рисковать обработкой запроса,который может быть воспроизведен.</target>
        </trans-unit>
        <trans-unit id="1764f0a2dc1d82d92287ff0957396522996daa3d" translate="yes" xml:space="preserve">
          <source>Indicates that the server wishes to clear all types of data for the origin of the response. If more data types are added in future versions of this header, they will also be covered by it.</source>
          <target state="translated">Указывает,что сервер хочет очистить все типы данных для происхождения ответа.Если в будущих версиях этого заголовка будет добавлено больше типов данных,то они также будут охвачены этим заголовком.</target>
        </trans-unit>
        <trans-unit id="d0874c17bb0051bdad46f81276a7a676b678ee89" translate="yes" xml:space="preserve">
          <source>Indicates that the server wishes to reload all browsing contexts for the origin of the response (&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Location/reload&quot;&gt;&lt;code&gt;Location.reload&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">Указывает, что сервер желает перезагрузить все контексты просмотра для источника ответа ( &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Location/reload&quot;&gt; &lt;code&gt;Location.reload&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="cc5b7853c11f1c815426aacf326e6a5f1048b0f0" translate="yes" xml:space="preserve">
          <source>Indicates that the server wishes to remove all DOM storage for the origin of the response URL. This includes storage mechanisms such as:</source>
          <target state="translated">Указывает,что сервер хочет удалить все хранилища DOM для источника URL ответа.Это включает в себя такие механизмы хранения,как:</target>
        </trans-unit>
        <trans-unit id="ef7e1742a157a2de2bf388f99e235ed9711fd524" translate="yes" xml:space="preserve">
          <source>Indicates that the server wishes to remove all cookies for the origin of the response URL. HTTP authentication credentials are also cleared out. This affects the entire registered domain, including subdomains. So https://example.com as well as https://stage.example.com, will have cookies cleared.</source>
          <target state="translated">Указывает на то,что сервер желает удалить все куки-файлы для URL-адреса ответа.Учетные данные HTTP-аутентификации также удаляются.Это влияет на весь зарегистрированный домен,включая субдомены.Таким образом,https://example.com,а также https://stage.example.com,будут очищены от куки-файлов.</target>
        </trans-unit>
        <trans-unit id="ac63007b3c6f50bd4fa2b0ef581a82efee07a128" translate="yes" xml:space="preserve">
          <source>Indicates that the server wishes to remove locally cached data (i.e. the browser cache, see &lt;a href=&quot;../caching&quot;&gt;HTTP caching&lt;/a&gt;) for the origin of the response URL. Depending on the browser, this might also clear out things like pre-rendered pages, script caches, WebGL shader caches, or address bar suggestions.</source>
          <target state="translated">Указывает, что сервер желает удалить локально кэшированные данные (т. Е. Кеш браузера, см. &lt;a href=&quot;../caching&quot;&gt;Кеширование HTTP&lt;/a&gt; ) для источника URL-адреса ответа. В зависимости от браузера это также может очищать такие вещи, как предварительно обработанные страницы, кеши сценариев, кеши шейдеров WebGL или предложения адресной строки.</target>
        </trans-unit>
        <trans-unit id="cf528554c916e8834415e263fe337623229bfac2" translate="yes" xml:space="preserve">
          <source>Indicates the URL to redirect a page to.</source>
          <target state="translated">Указывает URL для перенаправления страницы.</target>
        </trans-unit>
        <trans-unit id="c8fbcc1100e604b3e848463d05946c3ca0c4fdb5" translate="yes" xml:space="preserve">
          <source>Indicates the approximate amount of device RAM. This value is an approximation given by rounding to the nearest power of 2 and dividing that number by 1024. For example, 512 megabytes will be reported as &lt;code&gt;0.5&lt;/code&gt;.</source>
          <target state="translated">Указывает приблизительный объем оперативной памяти устройства. Это значение является приближением, полученным путем округления до ближайшей степени 2 и деления этого числа на 1024. Например, 512 мегабайт будут представлены как &lt;code&gt;0.5&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ae0c2dd829c8b5d8d4e242e3869d139f81ef6d4f" translate="yes" xml:space="preserve">
          <source>Indicates the client wants a response that will still be fresh for &lt;em&gt;at least&lt;/em&gt; the specified number of seconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3b0306391348f832a38528343b5bbe9c4441f9b" translate="yes" xml:space="preserve">
          <source>Indicates the client will accept a stale response if the check for a fresh one fails. The &lt;em&gt;seconds&lt;/em&gt; value indicates how long the client will accept the stale response after the initial expiration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a3143e8d1d08e6bc3f0bc2cf897fbeba771a630" translate="yes" xml:space="preserve">
          <source>Indicates the client will accept a stale response, while asynchronously checking in the background for a fresh one. The &lt;em&gt;seconds&lt;/em&gt; value indicates how long the client will accept a stale response. See &quot;&lt;a href=&quot;https://web.dev/stale-while-revalidate&quot;&gt;Keeping things fresh with &lt;code&gt;stale-while-revalidate&lt;/code&gt;&lt;/a&gt;&quot; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca02cf1f3493509e01b7edcf83dc8689814598fc" translate="yes" xml:space="preserve">
          <source>Indicates the client will accept a stale response. An optional value in seconds indicates the upper limit of staleness the client will accept.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79a4facd7bfa2752abc2651ad8a22d1290f85fac" translate="yes" xml:space="preserve">
          <source>Indicates the client's device pixel ratio.</source>
          <target state="translated">Указывает соотношение пикселей устройства клиента.</target>
        </trans-unit>
        <trans-unit id="7c99e10959087264a8f9f76bbe0fb6c6616be7db" translate="yes" xml:space="preserve">
          <source>Indicates the identity function (i.e. no compression, nor modification). This token, except if explicitly specified, is always deemed acceptable.</source>
          <target state="translated">Указывает на функцию идентификации (т.е.никакого сжатия или модификации).Этот токен,за исключением случаев,когда он явно указан,всегда считается приемлемым.</target>
        </trans-unit>
        <trans-unit id="300e6bcab08b44f020c00b953beb914707cf781f" translate="yes" xml:space="preserve">
          <source>Indicates the identity function (i.e. no compression, nor modification). This value is always considered as acceptable, even if not present.</source>
          <target state="translated">Указывает на функцию идентификации (т.е.никакого сжатия или модификации).Это значение всегда считается приемлемым,даже если оно отсутствует.</target>
        </trans-unit>
        <trans-unit id="4412b21a02fb471172b40a65fca71a926bc03433" translate="yes" xml:space="preserve">
          <source>Indicates the identity function (i.e., no compression or modification). This token, except if explicitly specified, is always deemed acceptable.</source>
          <target state="translated">Указывает на функцию идентификации (т.е.отсутствие сжатия или модификации).Этот токен,за исключением случаев,когда он явно указан,всегда считается приемлемым.</target>
        </trans-unit>
        <trans-unit id="76a871a5c993107287ac4f26321af85411e97af4" translate="yes" xml:space="preserve">
          <source>Indicates the layout viewport width in CSS pixels.</source>
          <target state="translated">Указывает ширину вью-порта макета в пикселях CSS.</target>
        </trans-unit>
        <trans-unit id="13225f32edcd936d283f2308a7685081e9a67758" translate="yes" xml:space="preserve">
          <source>Indicates the media type of the resource.</source>
          <target state="translated">Указывает тип носителя ресурса.</target>
        </trans-unit>
        <trans-unit id="fc5582911590b64a930b456a56b69a37cf02610d" translate="yes" xml:space="preserve">
          <source>Indicates the part of a document that the server should return.</source>
          <target state="translated">Указывает на ту часть документа,которую сервер должен вернуть.</target>
        </trans-unit>
        <trans-unit id="d639acdf32e7294320e546fc64936adb232d2c83" translate="yes" xml:space="preserve">
          <source>Indicates the resource width in physical pixels (in other words the intrinsic size of an image).</source>
          <target state="translated">Указывает ширину ресурса в физических пикселях (т.е.собственный размер изображения).</target>
        </trans-unit>
        <trans-unit id="b493750d584250a2156de56f689aa3919765f8d9" translate="yes" xml:space="preserve">
          <source>Indicates the tracking status of the corresponding response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7befcc9a5a8e27a8f507455ba0c663658e48c7d6" translate="yes" xml:space="preserve">
          <source>Indicates the tracking status that applied to the corresponding request.</source>
          <target state="translated">Указывает статус отслеживания,который применялся к соответствующему запросу.</target>
        </trans-unit>
        <trans-unit id="9743929feee03e6db93823d546a5b6519ece671b" translate="yes" xml:space="preserve">
          <source>Indicates to not retrieve new data. This being the case, the server wishes the client to obtain a response only once and then cache. From this moment the client should keep releasing a cached copy and avoid contacting the origin-server to see if a newer copy exists.</source>
          <target state="translated">Показывает не извлекать новые данные.В этом случае сервер хочет,чтобы клиент получил ответ только один раз,а затем кэшировать.С этого момента клиент должен продолжать выпускать кэшированную копию и избегать обращения к серверу-источнику,чтобы узнать,существует ли более новая копия.</target>
        </trans-unit>
        <trans-unit id="c3f04a324f464c13b3de7ed6c10ccdaea39b71f5" translate="yes" xml:space="preserve">
          <source>Indicates where a fetch originates from.</source>
          <target state="translated">Указывает,откуда берется добыча.</target>
        </trans-unit>
        <trans-unit id="850af2d2f10fe8221618b8b2b077bcf0329a3edf" translate="yes" xml:space="preserve">
          <source>Indicates where in a full body message a partial message belongs.</source>
          <target state="translated">Указывает,к какому полному телу относится частичное сообщение.</target>
        </trans-unit>
        <trans-unit id="be2f75e053430254664cae4d27f3e51d38721d53" translate="yes" xml:space="preserve">
          <source>Indicates whether a browser should be allowed to render a page in a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/frame&quot;&gt;&lt;code&gt;&amp;lt;frame&amp;gt;&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt;&lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/object&quot;&gt;&lt;code&gt;&amp;lt;object&amp;gt;&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Указывает, следует ли разрешить браузеру отображать страницу в &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/frame&quot;&gt; &lt;code&gt;&amp;lt;frame&amp;gt;&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt; &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/object&quot;&gt; &lt;code&gt;&amp;lt;object&amp;gt;&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6967405f8a783a33baf1dce6db1454c9b6f37b69" translate="yes" xml:space="preserve">
          <source>Indicates whether a browser should be allowed to render a page in a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/frame&quot;&gt;&lt;code&gt;&amp;lt;frame&amp;gt;&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt;&lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/embed&quot;&gt;&lt;code&gt;&amp;lt;embed&amp;gt;&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/object&quot;&gt;&lt;code&gt;&amp;lt;object&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f69a3c7ddba822bcbbe58dfda37543497c04707b" translate="yes" xml:space="preserve">
          <source>Indicates whether the response can be shared.</source>
          <target state="translated">Показывает,можно ли обменяться ответами.</target>
        </trans-unit>
        <trans-unit id="b1d669ea27317208a9d7ef5173080a7f6aeec565" translate="yes" xml:space="preserve">
          <source>Indicates whether the response to the request can be exposed when the credentials flag is true.</source>
          <target state="translated">Указывает,можно ли выставлять ответ на запрос,если флаг учетных данных равен true.</target>
        </trans-unit>
        <trans-unit id="5fc014b0691c6356400a50c33337bc3eb5a7b831" translate="yes" xml:space="preserve">
          <source>Indicates which headers can be exposed as part of the response by listing their names.</source>
          <target state="translated">Указывает,какие заголовки можно выставлять как часть ответа,перечисляя их имена.</target>
        </trans-unit>
        <trans-unit id="99d7331d101ff2b635886de75d335f15281ec8b0" translate="yes" xml:space="preserve">
          <source>Indicates which protocol was used to make the request (typically &quot;http&quot; or &quot;https&quot;).</source>
          <target state="translated">Указывает,по какому протоколу был сделан запрос (обычно &quot;http&quot; или &quot;https&quot;).</target>
        </trans-unit>
        <trans-unit id="0c0dafad80f67d7e9dd4f5b440cd064e7a6c1c13" translate="yes" xml:space="preserve">
          <source>Indicating a target audience for a resource</source>
          <target state="translated">Указание целевой аудитории ресурса</target>
        </trans-unit>
        <trans-unit id="5a9618787236f752551e7febb8e28aa6e4ab7345" translate="yes" xml:space="preserve">
          <source>Indicating the URL of a transaction's result</source>
          <target state="translated">Указание URL-адреса результата транзакции</target>
        </trans-unit>
        <trans-unit id="fca6301092f0f25b345065ddc8bcf56276e0afd5" translate="yes" xml:space="preserve">
          <source>Indicating the language a document is written in</source>
          <target state="translated">Указание языка,на котором написан документ</target>
        </trans-unit>
        <trans-unit id="d2ba3b92f81a378a79261a6178d8927104366f37" translate="yes" xml:space="preserve">
          <source>Inferring the policy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f8525ef38cab4390ca786bdef36f2a78190d70f" translate="yes" xml:space="preserve">
          <source>Information regarding the HSTS preload list in Chrome : &lt;a href=&quot;https://www.chromium.org/hsts&quot;&gt;https://www.chromium.org/hsts&lt;/a&gt;</source>
          <target state="translated">Информация о списке предварительной загрузки HSTS в Chrome: &lt;a href=&quot;https://www.chromium.org/hsts&quot;&gt;https://www.chromium.org/hsts&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a98006b47abdad4b8d9d147e829058b52579a85e" translate="yes" xml:space="preserve">
          <source>Information responses</source>
          <target state="translated">Информационные ответы</target>
        </trans-unit>
        <trans-unit id="05f417a1323b0c40bcc8b6cef74f7ddad2f42684" translate="yes" xml:space="preserve">
          <source>Information should be stored in cookies with the understanding that all cookie values are visible to, and can be changed by, the end-user. Depending on the application, it may be desirable to use an opaque identifier which is looked-up by the server or to investigate alternative authentication/confidentiality mechanisms such as JSON Web Tokens.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeecc3d4ea7b1d20860b0092324c40322c7b585f" translate="yes" xml:space="preserve">
          <source>Informational</source>
          <target state="translated">Informational</target>
        </trans-unit>
        <trans-unit id="9e7c1323910f2b5174a834226f71b3b7aee441c8" translate="yes" xml:space="preserve">
          <source>Informational (Expired)</source>
          <target state="translated">Информационный (истекший)</target>
        </trans-unit>
        <trans-unit id="485d91f1d2933394df2618e86ac2b0b86484e6e6" translate="yes" xml:space="preserve">
          <source>Informational responses (&lt;code&gt;100&lt;/code&gt;&amp;ndash;&lt;code&gt;199&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1af57283b2cb4e6ccf06b8fbe5453fc2d6fbb913" translate="yes" xml:space="preserve">
          <source>Informs recipients that the client is about to send a (presumably large) message body in this request and wishes to receive a &lt;a href=&quot;../status/100&quot;&gt;&lt;code&gt;100&lt;/code&gt;&lt;/a&gt; (Continue) interim response.</source>
          <target state="translated">Сообщает получателям, что клиент собирается отправить (предположительно большой) тело сообщения в этом запросе и желает получить промежуточный ответ &lt;a href=&quot;../status/100&quot;&gt; &lt;code&gt;100&lt;/code&gt; &lt;/a&gt; (Продолжить).</target>
        </trans-unit>
        <trans-unit id="cd5eddf712118b9e10b11441a5d8a43d84753b52" translate="yes" xml:space="preserve">
          <source>Informs the server about the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/MIME_type&quot;&gt;types&lt;/a&gt; of data that can be sent back.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59f3ea8d1fb37b159cf5cc21991810bccf67d68b" translate="yes" xml:space="preserve">
          <source>Informs the server about the encoding algorithm, usually a compression algorithm, that can be used on the resource sent back.</source>
          <target state="translated">Информирует сервер об алгоритме кодирования,обычно алгоритме сжатия,который может быть использован на ресурсе,отправленном обратно.</target>
        </trans-unit>
        <trans-unit id="7d1c901efc56627410e469547e2e02c56e5888bd" translate="yes" xml:space="preserve">
          <source>Informs the server about the human language the server is expected to send back. This is a hint and is not necessarily under the full control of the user: the server should always pay attention not to override an explicit user choice (like selecting a language from a dropdown).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddb5e7a065792d4b30e1cbf2d728a2ac83ecc7bb" translate="yes" xml:space="preserve">
          <source>Informs the server about the language the server is expected to send back. This is a hint and is not necessarily under the full control of the user: the server should always pay attention not to override an explicit user choice (like selecting a language in a drop down list).</source>
          <target state="translated">Информирует сервер о языке,который сервер должен отправить обратно.Это подсказка и не обязательно находится под полным контролем пользователя:сервер всегда должен обращать внимание на то,чтобы не переопределить явный выбор пользователя (например,выбор языка в выпадающем списке).</target>
        </trans-unit>
        <trans-unit id="87b0141515a7b36be28ca5afb9e3d2f36da758a0" translate="yes" xml:space="preserve">
          <source>Informs the server about the types of data that can be sent back. It is MIME-type.</source>
          <target state="translated">Информирует сервер о типах данных,которые могут быть отправлены обратно.Это MIME-тип.</target>
        </trans-unit>
        <trans-unit id="eee6e27810ba2393a1392a0340b18fa6717ec6eb" translate="yes" xml:space="preserve">
          <source>Informs the server about which character set the client is able to understand.</source>
          <target state="translated">Информирует сервер о том,какой набор символов клиент способен понять.</target>
        </trans-unit>
        <trans-unit id="42cf6c04980a1ce5076cbc436e3d8fd8f9bd1eaa" translate="yes" xml:space="preserve">
          <source>Inheritance of policy for embedded content</source>
          <target state="translated">Наследование политики для встроенного контента</target>
        </trans-unit>
        <trans-unit id="9e915d7086e42ba7ad8fb470ce6fd37be732353b" translate="yes" xml:space="preserve">
          <source>Initial definition</source>
          <target state="translated">Первоначальное определение</target>
        </trans-unit>
        <trans-unit id="7b309a69a69c83b16df2d7ed3a933148fd03e854" translate="yes" xml:space="preserve">
          <source>Initial definition of &lt;code&gt;screen-wake-lock&lt;/code&gt; feature directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c20ea0f7a5e6485b35d3ff374d22c887ebf5ccf" translate="yes" xml:space="preserve">
          <source>Initial definition of &lt;code&gt;wake-lock&lt;/code&gt; feature directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1996078361460df53a1d2f9e9930c7c26d7f873c" translate="yes" xml:space="preserve">
          <source>Initial definition.</source>
          <target state="translated">Первоначальное определение.</target>
        </trans-unit>
        <trans-unit id="e33acc0f454b7bc534181d5c180450e08b663048" translate="yes" xml:space="preserve">
          <source>Initial definition. Defines the &lt;a href=&quot;headers/feature-policy&quot;&gt;&lt;code&gt;Feature-Policy&lt;/code&gt;&lt;/a&gt; header. Directives are defined in the specs for the features they control. See individual directive pages for details.</source>
          <target state="translated">Первоначальное определение. Определяет заголовок &lt;a href=&quot;headers/feature-policy&quot;&gt; &lt;code&gt;Feature-Policy&lt;/code&gt; &lt;/a&gt; . Директивы определены в спецификациях для контролируемых ими функций. Подробности смотрите на страницах отдельных директив.</target>
        </trans-unit>
        <trans-unit id="edd05a55e87a0a4d81fe6d4260b5996b65256986" translate="yes" xml:space="preserve">
          <source>Inline style attributes are also blocked:</source>
          <target state="translated">Атрибуты стиля онлайн также заблокированы:</target>
        </trans-unit>
        <trans-unit id="b1392fca8ed54aab0cc2cacc082edcfe0d478690" translate="yes" xml:space="preserve">
          <source>Inspecting cookies using the Storage Inspector</source>
          <target state="translated">Проверка cookie-файлов с помощью программы Storage Inspector.</target>
        </trans-unit>
        <trans-unit id="888016dc3b8bc43c7d35e5a67e82071570e7e662" translate="yes" xml:space="preserve">
          <source>Instantiation of an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/embed&quot;&gt;&lt;code&gt;&amp;lt;embed&amp;gt;&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/object&quot;&gt;&lt;code&gt;&amp;lt;object&amp;gt;&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/applet&quot;&gt;&lt;code&gt;&amp;lt;applet&amp;gt;&lt;/code&gt;&lt;/a&gt; element will fail if:</source>
          <target state="translated">Создание экземпляра элемента &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/embed&quot;&gt; &lt;code&gt;&amp;lt;embed&amp;gt;&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/object&quot;&gt; &lt;code&gt;&amp;lt;object&amp;gt;&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/applet&quot;&gt; &lt;code&gt;&amp;lt;applet&amp;gt;&lt;/code&gt; &lt;/a&gt; завершится ошибкой, если:</target>
        </trans-unit>
        <trans-unit id="fcd90298324aef5e8378a11b58c0458589479afd" translate="yes" xml:space="preserve">
          <source>Instead of &lt;code&gt;child-src&lt;/code&gt;, authors who wish to regulate nested browsing contexts and workers should use the &lt;a href=&quot;content-security-policy/frame-src&quot;&gt;&lt;code&gt;frame-src&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;content-security-policy/worker-src&quot;&gt;&lt;code&gt;worker-src&lt;/code&gt;&lt;/a&gt; directives, respectively.</source>
          <target state="translated">Вместо &lt;code&gt;child-src&lt;/code&gt; авторы, которые хотят регулировать вложенные контексты просмотра и рабочие процессы, должны использовать директивы &lt;a href=&quot;content-security-policy/frame-src&quot;&gt; &lt;code&gt;frame-src&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;content-security-policy/worker-src&quot;&gt; &lt;code&gt;worker-src&lt;/code&gt; &lt;/a&gt; соответственно.</target>
        </trans-unit>
        <trans-unit id="a7d972ef39c5afd44ac2beb99c854651c87a78a6" translate="yes" xml:space="preserve">
          <source>Instead of &lt;code&gt;child-src&lt;/code&gt;, authors who wish to regulate nested browsing contexts and workers should use the &lt;a href=&quot;frame-src&quot;&gt;&lt;code&gt;frame-src&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;worker-src&quot;&gt;&lt;code&gt;worker-src&lt;/code&gt;&lt;/a&gt; directives, respectively.</source>
          <target state="translated">Вместо &lt;code&gt;child-src&lt;/code&gt; авторы, которые хотят регулировать вложенные контексты просмотра и рабочие процессы, должны использовать директивы &lt;a href=&quot;frame-src&quot;&gt; &lt;code&gt;frame-src&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;worker-src&quot;&gt; &lt;code&gt;worker-src&lt;/code&gt; &lt;/a&gt; соответственно.</target>
        </trans-unit>
        <trans-unit id="084aab59ba07fd42914dc61a350dfb0f10e90306" translate="yes" xml:space="preserve">
          <source>Instead of &lt;code&gt;child-src&lt;/code&gt;, if you want to regulate nested browsing contexts and workers, you should use the &lt;a href=&quot;content-security-policy/frame-src&quot;&gt;&lt;code&gt;frame-src&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;content-security-policy/worker-src&quot;&gt;&lt;code&gt;worker-src&lt;/code&gt;&lt;/a&gt; directives, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2c345c2bb8c9ae2f11a593aebecd152fbd0acd7" translate="yes" xml:space="preserve">
          <source>Instead of expiring when the client closes,&lt;em&gt;permanent cookies&lt;/em&gt; expire at a specific date (&lt;code&gt;Expires&lt;/code&gt;) or after a specific length of time (&lt;code&gt;Max-Age&lt;/code&gt;).</source>
          <target state="translated">Вместо истечения срока действия при закрытии клиента &lt;em&gt;постоянные файлы cookie&lt;/em&gt; истекают в определенную дату ( &lt;code&gt;Expires&lt;/code&gt; ) или через определенный промежуток времени ( &lt;code&gt;Max-Age&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="ddeb6a9e31213f28e884fd04ed1dcca7829587e3" translate="yes" xml:space="preserve">
          <source>Instead of expiring when the client is closed, &lt;strong&gt;permanent cookies&lt;/strong&gt; expire at a specific date (&lt;code&gt;Expires&lt;/code&gt;) or after a specific length of time (&lt;code&gt;Max-Age&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="687abe5b976f19cc45e08804dc047a80872035fb" translate="yes" xml:space="preserve">
          <source>Instead of expiring when the client is closed, permanent cookies expire at a specific date (&lt;code&gt;Expires&lt;/code&gt;) or after a specific length of time (&lt;code&gt;Max-Age&lt;/code&gt;).</source>
          <target state="translated">Вместо истечения срока действия при закрытии клиента постоянные файлы cookie истекают в определенную дату ( &lt;code&gt;Expires&lt;/code&gt; ) или через определенный период времени ( &lt;code&gt;Max-Age&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="36cf82c2a961317e1eff83740cd0b4132837ed88" translate="yes" xml:space="preserve">
          <source>Instead of using a &lt;a href=&quot;headers/public-key-pins&quot;&gt;&lt;code&gt;Public-Key-Pins&lt;/code&gt;&lt;/a&gt; header you can also use a &lt;a href=&quot;headers/public-key-pins-report-only&quot;&gt;&lt;code&gt;Public-Key-Pins-Report-Only&lt;/code&gt;&lt;/a&gt; header. This header only sends reports to the &lt;code&gt;report-uri&lt;/code&gt; specified in the header and does still allow browsers to connect to the webserver even if the pinning is violated.</source>
          <target state="translated">Вместо использования заголовка &lt;a href=&quot;headers/public-key-pins&quot;&gt; &lt;code&gt;Public-Key-Pins&lt;/code&gt; &lt;/a&gt; вы также можете использовать заголовок &lt;a href=&quot;headers/public-key-pins-report-only&quot;&gt; &lt;code&gt;Public-Key-Pins-Report-Only&lt;/code&gt; &lt;/a&gt; . Этот заголовок отправляет отчеты только на &lt;code&gt;report-uri&lt;/code&gt; указанный в заголовке, и по-прежнему позволяет браузерам подключаться к веб-серверу, даже если закрепление нарушено.</target>
        </trans-unit>
        <trans-unit id="3750ed931b77d473b6340fb847310a94be2c064d" translate="yes" xml:space="preserve">
          <source>Instructs the user agent to report attempts to violate the Content Security Policy. These violation reports consist of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/JSON&quot;&gt;JSON&lt;/a&gt; documents sent via an HTTP &lt;code&gt;POST&lt;/code&gt; request to the specified URI.</source>
          <target state="translated">Дает указание агенту пользователя сообщать о попытках нарушения Политики безопасности содержимого. Эти отчеты о нарушениях состоят из документов &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/JSON&quot;&gt;JSON,&lt;/a&gt; отправленных через HTTP- запрос &lt;code&gt;POST&lt;/code&gt; на указанный URI.</target>
        </trans-unit>
        <trans-unit id="da42a3abb7f8b91ffc4fd5c08ba6b30c83141085" translate="yes" xml:space="preserve">
          <source>Instructs user agents to treat all of a site's insecure URLs (those served over HTTP) as though they have been replaced with secure URLs (those served over HTTPS). This directive is intended for web sites with large numbers of insecure legacy URLs that need to be rewritten.</source>
          <target state="translated">Инструктирует пользовательских агентов относиться ко всем небезопасным URL-адресам сайта (которые обслуживаются по HTTP)так,как будто они были заменены безопасными URL-адресами (которые обслуживаются по HTTPS).Эта директива предназначена для веб сайтов с большим количеством небезопасных старых URL,которые необходимо переписать.</target>
        </trans-unit>
        <trans-unit id="206bbd6a7b7d6a23df99e3ac10a5c7e4495332dd" translate="yes" xml:space="preserve">
          <source>Integration with CSS</source>
          <target state="translated">Интеграция с CSS</target>
        </trans-unit>
        <trans-unit id="eded9e1af9c609a228692b23c36ea0973e62cf9c" translate="yes" xml:space="preserve">
          <source>Integration with HTML</source>
          <target state="translated">Интеграция с HTML</target>
        </trans-unit>
        <trans-unit id="241c7e4997c321b689e3324be2a21f7dbf1a7358" translate="yes" xml:space="preserve">
          <source>Integrity of a partial download</source>
          <target state="translated">Целостность частичной загрузки</target>
        </trans-unit>
        <trans-unit id="d7339840c521459441002b60ebbff7f9e4807175" translate="yes" xml:space="preserve">
          <source>Internet Draft</source>
          <target state="translated">интернет-проект</target>
        </trans-unit>
        <trans-unit id="a6663b7c68906c9f926b00ce9838f57dafd1e9c7" translate="yes" xml:space="preserve">
          <source>Internet Engineering Task Force (IETF)                         M. Belshe
Request for Comments: 7540                                         BitGo
Category: Standards Track                                        R. Peon
ISSN: 2070-1721                                              Google, Inc
                                                         M. Thomson, Ed.
                                                                 Mozilla
                                                                May 2015</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="944b611c46b28ffd8244fb42daaa4b9496b1cf13" translate="yes" xml:space="preserve">
          <source>Internet Engineering Task Force (IETF)                  R. Fielding, Ed.
Request for Comments: 7230                                         Adobe
Obsoletes: &lt;a href=&quot;https://tools.ietf.org/html/rfc2145&quot;&gt;2145&lt;/a&gt;, &lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;2616&lt;/a&gt;                                    J. Reschke, Ed.
Updates: &lt;a href=&quot;https://tools.ietf.org/html/rfc2817&quot;&gt;2817&lt;/a&gt;, &lt;a href=&quot;https://tools.ietf.org/html/rfc2818&quot;&gt;2818&lt;/a&gt;                                           greenbytes
Category: Standards Track                                      June 2014
ISSN: 2070-1721</source>
          <target state="translated">Инженерная группа Интернета (IETF) R. Fielding, Ed. Запрос комментариев: 7230 Adobe Устарело: &lt;a href=&quot;https://tools.ietf.org/html/rfc2145&quot;&gt;2145&lt;/a&gt; , &lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;2616&lt;/a&gt; J. Reschke, Ed. Обновления: &lt;a href=&quot;https://tools.ietf.org/html/rfc2817&quot;&gt;2817&lt;/a&gt; , &lt;a href=&quot;https://tools.ietf.org/html/rfc2818&quot;&gt;2818&lt;/a&gt; гринбайт Категория: Standards Track июнь 2014 ISSN: 2070-1721</target>
        </trans-unit>
        <trans-unit id="a37f9383c64e54f8eb287b01c2b6207a20637c11" translate="yes" xml:space="preserve">
          <source>Internet Engineering Task Force (IETF)                  R. Fielding, Ed.
Request for Comments: 7231                                         Adobe
Obsoletes: &lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;2616&lt;/a&gt;                                          J. Reschke, Ed.
Updates: &lt;a href=&quot;https://tools.ietf.org/html/rfc2817&quot;&gt;2817&lt;/a&gt;                                                 greenbytes
Category: Standards Track                                      June 2014
ISSN: 2070-1721</source>
          <target state="translated">Инженерная группа Интернета (IETF) R. Fielding, Ed. Запрос комментариев: 7231 Adobe Устарело: &lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;2616&lt;/a&gt; J. Reschke, Ed. Обновления: &lt;a href=&quot;https://tools.ietf.org/html/rfc2817&quot;&gt;2817&lt;/a&gt; гринбайт Категория: Standards Track июнь 2014 ISSN: 2070-1721</target>
        </trans-unit>
        <trans-unit id="ac7e3a4b626b90a8dbd99bacd4566ca932b34a3b" translate="yes" xml:space="preserve">
          <source>Internet Engineering Task Force (IETF)                  R. Fielding, Ed.
Request for Comments: 7232                                         Adobe
Obsoletes: &lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;2616&lt;/a&gt;                                          J. Reschke, Ed.
Category: Standards Track                                     greenbytes
ISSN: 2070-1721                                                June 2014</source>
          <target state="translated">Инженерная группа Интернета (IETF) R. Fielding, Ed. Запрос комментариев: 7232 Adobe Устарело: &lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;2616&lt;/a&gt; J. Reschke, Ed. Категория: Стандарты Track greenbytes ISSN: 2070-1721 июнь 2014</target>
        </trans-unit>
        <trans-unit id="f19a38d04cab53923494c67976d4e498a99f2c29" translate="yes" xml:space="preserve">
          <source>Internet Engineering Task Force (IETF)                  R. Fielding, Ed.
Request for Comments: 7233                                         Adobe
Obsoletes: &lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;2616&lt;/a&gt;                                            Y. Lafon, Ed.
Category: Standards Track                                            W3C
ISSN: 2070-1721                                          J. Reschke, Ed.
                                                              greenbytes
                                                              June 2014</source>
          <target state="translated">Инженерная группа Интернета (IETF) Р. Филдинг, под ред. Запрос комментариев: 7233 Adobe Устарело: &lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;2616&lt;/a&gt; Ю. Лафон, Ред. Категория: Стандарты Track W3C ISSN: 2070-1721 J. Reschke, Ed. greenbytes июнь 2014</target>
        </trans-unit>
        <trans-unit id="abf0c52384302c538626557887406ff5785b7493" translate="yes" xml:space="preserve">
          <source>Internet Engineering Task Force (IETF)                  R. Fielding, Ed.
Request for Comments: 7234                                         Adobe
Obsoletes: &lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;2616&lt;/a&gt;                                       M. Nottingham, Ed.
Category: Standards Track                                         Akamai
ISSN: 2070-1721                                          J. Reschke, Ed.
                                                              greenbytes
                                                               June 2014</source>
          <target state="translated">Инженерная группа Интернета (IETF) Р. Филдинг, под ред. Запрос комментариев: 7234 Adobe Устарело: &lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;2616&lt;/a&gt; M. Nottingham, Ed. Категория: Стандарты Track Akamai ISSN: 2070-1721 J. Reschke, Ed. greenbytes июнь 2014</target>
        </trans-unit>
        <trans-unit id="4cf7cbfbbfccd70ae7ed26796d1828c5ad2463df" translate="yes" xml:space="preserve">
          <source>Internet Engineering Task Force (IETF)                  R. Fielding, Ed.
Request for Comments: 7235                                         Adobe
Obsoletes: &lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;2616&lt;/a&gt;                                          J. Reschke, Ed.
Updates: &lt;a href=&quot;https://tools.ietf.org/html/rfc2617&quot;&gt;2617&lt;/a&gt;                                                 greenbytes
Category: Standards Track                                      June 2014
ISSN: 2070-1721</source>
          <target state="translated">Инженерная группа Интернета (IETF) R. Fielding, Ed. Запрос комментариев: 7235 Adobe Устарело: &lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;2616&lt;/a&gt; J. Reschke, Ed. Обновления: &lt;a href=&quot;https://tools.ietf.org/html/rfc2617&quot;&gt;2617&lt;/a&gt; гринбайт Категория: Standards Track июнь 2014 ISSN: 2070-1721</target>
        </trans-unit>
        <trans-unit id="76d5733b82b9b85e7c7c9538c8b1cbf395dc743e" translate="yes" xml:space="preserve">
          <source>Internet Explorer</source>
          <target state="translated">Internet Explorer</target>
        </trans-unit>
        <trans-unit id="ee29687168fb4fd84a3acc654a9db5d9db8c1813" translate="yes" xml:space="preserve">
          <source>Internet Explorer 8</source>
          <target state="translated">Internet Explorer 8</target>
        </trans-unit>
        <trans-unit id="400856455193d5665422e0bfcbb69ad86eadd5de" translate="yes" xml:space="preserve">
          <source>Internet Explorer 8 and 9 expose CORS via the &lt;code&gt;XDomainRequest&lt;/code&gt; object, but have a full implementation in IE 10</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b50d4fdd010f7da47bc090ba56b32ab192bd7efd" translate="yes" xml:space="preserve">
          <source>Internet Explorer 8 and 9 expose CORS via the &lt;code&gt;XDomainRequest&lt;/code&gt; object, but have a full implementation in IE 10.</source>
          <target state="translated">Internet Explorer 8 и 9 предоставляют CORS через объект &lt;code&gt;XDomainRequest&lt;/code&gt; , но полностью реализованы в IE 10.</target>
        </trans-unit>
        <trans-unit id="f09fc55fe960cdc577a491b6af400c7ecc717639" translate="yes" xml:space="preserve">
          <source>Internet Explorer 8 or earlier</source>
          <target state="translated">Internet Explorer 8 или более ранняя версия</target>
        </trans-unit>
        <trans-unit id="9df82ce454660e2e95801528c257a56a7c65b8f4" translate="yes" xml:space="preserve">
          <source>Internet Explorer 9</source>
          <target state="translated">Internet Explorer 9</target>
        </trans-unit>
        <trans-unit id="ab3ccd4c44d2e9f7601c41c05c58eb093f7971c4" translate="yes" xml:space="preserve">
          <source>Internet Explorer UA string</source>
          <target state="translated">Строка Internet Explorer UA</target>
        </trans-unit>
        <trans-unit id="935b07a4771d1ecca905a5712a8abb0cb5f5eebd" translate="yes" xml:space="preserve">
          <source>Internet Explorer doesn't put its name in the &lt;em&gt;BrowserName/VersionNumber&lt;/em&gt; format</source>
          <target state="translated">Internet Explorer не помещает свое имя в формате &lt;em&gt;BrowserName / VersionNumber.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b2b280e0cd215dee60eed1d1e3dbd22fa9b08456" translate="yes" xml:space="preserve">
          <source>Internet Explorer put this token in the &lt;em&gt;comment&lt;/em&gt; part of the User Agent String</source>
          <target state="translated">Internet Explorer поместил этот токен в часть &lt;em&gt;комментария&lt;/em&gt; строки пользовательского агента.</target>
        </trans-unit>
        <trans-unit id="a1ee7fdf2dfeeebbbf381e7307a8cb5b69c060fd" translate="yes" xml:space="preserve">
          <source>Internet Standard</source>
          <target state="translated">интернет-стандарт</target>
        </trans-unit>
        <trans-unit id="097b71887b4219ceb51b23addafcc7413a4278f3" translate="yes" xml:space="preserve">
          <source>Internet hosts by name or IP address, as well as an optional &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/URIs_and_URLs&quot;&gt;URL scheme&lt;/a&gt; and/or port number, separated by spaces. The site's address may include an optional leading wildcard (the asterisk character, &lt;code&gt;'*'&lt;/code&gt;), and you may use a wildcard (again, &lt;code&gt;'*'&lt;/code&gt;) as the port number, indicating that all legal ports are valid for the source. Single quotes surrounding the host are not allowed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3dfded56299e82b9ecd1b36148982d1169af1c0" translate="yes" xml:space="preserve">
          <source>Internet hosts by name or IP address, as well as an optional &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/URIs_and_URLs&quot;&gt;URL scheme&lt;/a&gt; and/or port number. The site's address may include an optional leading wildcard (the asterisk character, &lt;code&gt;'*'&lt;/code&gt;), and you may use a wildcard (again, &lt;code&gt;'*'&lt;/code&gt;) as the port number, indicating that all legal ports are valid for the source.</source>
          <target state="translated">Интернет-хосты по имени или IP-адресу, а также по необязательной &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/URIs_and_URLs&quot;&gt;схеме URL-адреса&lt;/a&gt; и / или номеру порта. Адрес сайта может включать необязательный начальный подстановочный знак (символ звездочки, &lt;code&gt;'*'&lt;/code&gt; ), и вы можете использовать подстановочный знак (снова &lt;code&gt;'*'&lt;/code&gt; ) в качестве номера порта, указывая, что все допустимые порты действительны для источника.</target>
        </trans-unit>
        <trans-unit id="037a2067974b5b1a90e1e346b9991a68825acb64" translate="yes" xml:space="preserve">
          <source>Internet media types are registered with a canonical form in order to
   be interoperable among systems with varying native encoding formats.
   Representations selected or transferred via HTTP ought to be in
   canonical form, for many of the same reasons described by the
   Multipurpose Internet Mail Extensions (MIME) [&lt;a href=&quot;https://tools.ietf.org/html/rfc2045&quot;&gt;RFC2045&lt;/a&gt;].  However, the
   performance characteristics of email deployments (i.e., store and
   forward messages to peers) are significantly different from those
   common to HTTP and the Web (server-based information services).
   Furthermore, MIME's constraints for the sake of compatibility with
   older mail transfer protocols do not apply to HTTP (see &lt;a href=&quot;#appendix-A&quot;&gt;Appendix A&lt;/a&gt;). 

   MIME's canonical form requires that media subtypes of the &quot;text&quot; type
   use CRLF as the text line break.  HTTP allows the transfer of text
   media with plain CR or LF alone representing a line break, when such
   line breaks are consistent for an entire representation.  An HTTP
   sender MAY generate, and a recipient MUST be able to parse, line
   breaks in text media that consist of CRLF, bare CR, or bare LF.  In
   addition, text media in HTTP is not limited to charsets that use
   octets 13 and 10 for CR and LF, respectively.  This flexibility
   regarding line breaks applies only to text within a representation
   that has been assigned a &quot;text&quot; media type; it does not apply to
   &quot;multipart&quot; types or HTTP elements outside the payload body (e.g.,
   header fields).

   If a representation is encoded with a content-coding, the underlying
   data ought to be in a form defined above prior to being encoded.</source>
          <target state="translated">Типы Интернет-мультимедиа регистрируются в канонической форме для обеспечения возможности взаимодействия между системами с различными собственными форматами кодирования. Представления, выбранные или переданные через HTTP, должны быть в канонической форме по многим из тех же причин, которые описаны в многоцелевых расширениях Интернет-почты (MIME) [ &lt;a href=&quot;https://tools.ietf.org/html/rfc2045&quot;&gt;RFC2045&lt;/a&gt; ]. Однако характеристики производительности развертываний электронной почты (т. Е. Хранение и пересылка сообщений одноранговым узлам) значительно отличаются от характеристик, общих для HTTP и Интернета (серверные информационные службы). Кроме того, ограничения MIME ради совместимости со старыми протоколами передачи почты не применяются к HTTP (см. &lt;a href=&quot;#appendix-A&quot;&gt;Приложение A&lt;/a&gt;). Каноническая форма MIME требует, чтобы подтипы мультимедиа типа &amp;laquo;текст&amp;raquo; использовали CRLF в качестве разрыва строки текста. HTTP позволяет передавать текстовые носители только с обычным CR или LF, представляющим разрыв строки, когда такие разрывы строк согласованы для всего представления. Отправитель HTTP МОЖЕТ генерировать, а получатель ДОЛЖЕН иметь возможность анализировать разрывы строк в текстовых носителях, которые состоят из CRLF, чистого CR или чистого LF. Кроме того, текстовые носители в HTTP не ограничиваются наборами символов, которые используют октеты 13 и 10 для CR и LF соответственно. Эта гибкость в отношении разрывов строк применяется только к тексту в представлении, которому был назначен медиа-тип &amp;laquo;текст&amp;raquo;; он не применяется к &quot;составным&quot; типам или элементам HTTP вне тела полезной нагрузки (например, полям заголовка).Если представление закодировано с помощью кодирования содержимого, лежащие в основе данные должны быть в форме, определенной выше, до кодирования.</target>
        </trans-unit>
        <trans-unit id="23ce3ccc1ff356540fdaac404f8bf64e60f80ef1" translate="yes" xml:space="preserve">
          <source>Internet media types are registered with a canonical form. An
   entity-body transferred via HTTP messages MUST be represented in the
   appropriate canonical form prior to its transmission except for
   &quot;text&quot; types, as defined in the next paragraph.

   When in canonical form, media subtypes of the &quot;text&quot; type use CRLF as
   the text line break. HTTP relaxes this requirement and allows the
   transport of text media with plain CR or LF alone representing a line
   break when it is done consistently for an entire entity-body. HTTP
   applications MUST accept CRLF, bare CR, and bare LF as being
   representative of a line break in text media received via HTTP. In
   addition, if the text is represented in a character set that does not
   use octets 13 and 10 for CR and LF respectively, as is the case for
   some multi-byte character sets, HTTP allows the use of whatever octet
   sequences are defined by that character set to represent the
   equivalent of CR and LF for line breaks. This flexibility regarding
   line breaks applies only to text media in the entity-body; a bare CR
   or LF MUST NOT be substituted for CRLF within any of the HTTP control
   structures (such as header fields and multipart boundaries).

   If an entity-body is encoded with a content-coding, the underlying
   data MUST be in a form defined above prior to being encoded.

   The &quot;charset&quot; parameter is used with some media types to define the
   character set (&lt;a href=&quot;#section-3.4&quot;&gt;section 3.4&lt;/a&gt;) of the data. When no explicit charset
   parameter is provided by the sender, media subtypes of the &quot;text&quot;
   type are defined to have a default charset value of &quot;ISO-8859-1&quot; when
   received via HTTP. Data in character sets other than &quot;ISO-8859-1&quot; or
   its subsets MUST be labeled with an appropriate charset value. See
   &lt;a href=&quot;#section-3.4.1&quot;&gt;section 3.4.1&lt;/a&gt; for compatibility problems.</source>
          <target state="translated">Типы интернет-СМИ регистрируются по канонической форме. Тело объекта, передаваемое через сообщения HTTP, ДОЛЖНО быть представлено в соответствующей канонической форме до его передачи, за исключением &amp;laquo;текстовых&amp;raquo; типов, как определено в следующем абзаце. В канонической форме подтипы мультимедиа типа &amp;laquo;текст&amp;raquo; используют CRLF в качестве разрыва строки текста. HTTP ослабляет это требование и позволяет транспортировать текстовые носители только с обычным CR или LF, представляющим разрыв строки, когда это делается последовательно для всего тела объекта. Приложения HTTP ДОЛЖНЫ принимать CRLF, чистый CR и простой LF как представляющие разрыв строки в текстовом носителе, полученном через HTTP. Кроме того, если текст представлен в наборе символов, в котором не используются октеты 13 и 10 для CR и LF соответственно,как и в случае некоторых многобайтовых наборов символов, HTTP позволяет использовать любые последовательности октетов, определенные этим набором символов, для представления эквивалента CR и LF для разрывов строк. Эта гибкость в отношении разрывов строк применяется только к текстовым носителям в теле объекта; просто CR или LF НЕ ДОЛЖНЫ заменяться на CRLF в любой из управляющих структур HTTP (таких как поля заголовка и составные границы). Если тело объекта кодируется с помощью кодирования содержимого, базовые данные ДОЛЖНЫ быть в форме, определенной выше, до кодирования. Параметр &quot;charset&quot; используется с некоторыми типами мультимедиа для определения набора символов (Эта гибкость в отношении разрывов строк применяется только к текстовым носителям в теле объекта; просто CR или LF НЕ ДОЛЖНЫ заменяться на CRLF в любой из управляющих структур HTTP (таких как поля заголовка и составные границы). Если тело объекта кодируется с помощью кодирования содержимого, базовые данные ДОЛЖНЫ быть в форме, определенной выше, до кодирования. Параметр &quot;charset&quot; используется с некоторыми типами мультимедиа для определения набора символов (Эта гибкость в отношении разрывов строк применяется только к текстовым носителям в теле объекта; просто CR или LF НЕ ДОЛЖНЫ заменяться на CRLF в любой из управляющих структур HTTP (таких как поля заголовка и составные границы). Если тело объекта кодируется с помощью кодирования содержимого, базовые данные ДОЛЖНЫ быть в форме, определенной выше, до кодирования. Параметр &quot;charset&quot; используется с некоторыми типами мультимедиа для определения набора символов (Параметр используется с некоторыми типами мультимедиа для определения набора символов (Параметр используется с некоторыми типами мультимедиа для определения набора символов (&lt;a href=&quot;#section-3.4&quot;&gt;раздел 3.4&lt;/a&gt; ) данных. Когда отправитель не предоставляет явного параметра кодировки, подтипы мультимедиа типа &amp;laquo;текст&amp;raquo; определяются как имеющие значение кодировки по умолчанию &amp;laquo;ISO-8859-1&amp;raquo; при получении через HTTP. Данные в наборах символов, отличных от &amp;laquo;ISO-8859-1&amp;raquo; или его подмножеств, ДОЛЖНЫ быть помечены соответствующим значением набора символов. См. &lt;a href=&quot;#section-3.4.1&quot;&gt;Раздел 3.4.1&lt;/a&gt; о проблемах совместимости.</target>
        </trans-unit>
        <trans-unit id="ded9c72dfd997c4640e3e4defef803106231f1f6" translate="yes" xml:space="preserve">
          <source>Introduced in HTTP/1.0, &lt;a href=&quot;headers&quot;&gt;HTTP headers&lt;/a&gt; made this protocol easy to extend and experiment with. New functionality can even be introduced by a simple agreement between a client and a server about a new header's semantics.</source>
          <target state="translated">&lt;a href=&quot;headers&quot;&gt;Заголовки HTTP,&lt;/a&gt; представленные в HTTP / 1.0, позволили легко расширять этот протокол и экспериментировать с ним. Новые функции могут быть даже введены путем простого соглашения между клиентом и сервером о семантике нового заголовка.</target>
        </trans-unit>
        <trans-unit id="408ce1469d35c3a1c9fa2b8075ea8921344fc2af" translate="yes" xml:space="preserve">
          <source>Introduced in HTTP/1.0, &lt;a href=&quot;headers&quot;&gt;HTTP headers&lt;/a&gt; make this protocol easy to extend and experiment with. New functionality can even be introduced by a simple agreement between a client and a server about a new header's semantics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1117753f6df6a46418e743d7060ef1767501957d" translate="yes" xml:space="preserve">
          <source>Introduction to Feature Policy</source>
          <target state="translated">Введение в художественную политику</target>
        </trans-unit>
        <trans-unit id="80e829c3a10d9e489ea935dbe19658e50845954c" translate="yes" xml:space="preserve">
          <source>Invalid dates, like the value 0, represent a date in the past and mean that the resource is already expired.</source>
          <target state="translated">Недействительные даты,как и значение 0,представляют собой дату в прошлом и означают,что ресурс уже истек.</target>
        </trans-unit>
        <trans-unit id="dfa60022094016d57bd557254bafb6ff9bbe3d2a" translate="yes" xml:space="preserve">
          <source>Invalid domains</source>
          <target state="translated">Недействительные домены</target>
        </trans-unit>
        <trans-unit id="9032ed3737ead87641e8c9fd63add1c68fa832be" translate="yes" xml:space="preserve">
          <source>Invalid parameters in media, or typos when specifying &lt;code&gt;'base64'&lt;/code&gt;, are ignored, but no error is provided.</source>
          <target state="translated">Недействительные параметры в носителе или опечатки при указании &lt;code&gt;'base64'&lt;/code&gt; игнорируются, но ошибки не выводятся.</target>
        </trans-unit>
        <trans-unit id="db5e158a717067d22e2fe4cb88250953ddf29eb6" translate="yes" xml:space="preserve">
          <source>Invalidation (RFC 7234)</source>
          <target state="translated">Дисквалификация (RFC 7234)</target>
        </trans-unit>
        <trans-unit id="380eceb118a2210931ae6c7c6f4918fcad2be151" translate="yes" xml:space="preserve">
          <source>Invention of the World Wide Web</source>
          <target state="translated">Изобретение всемирной паутины</target>
        </trans-unit>
        <trans-unit id="b00395d65a2e0cb5e4f72accad98e9c2d13dd4ca" translate="yes" xml:space="preserve">
          <source>Invocations of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest&quot;&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API&quot;&gt;Fetch APIs&lt;/a&gt;, as discussed above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96fe62d1784a07fd038cfab3bf1502f6c16a7790" translate="yes" xml:space="preserve">
          <source>Invocations of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest&quot;&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API&quot;&gt;Fetch&lt;/a&gt; APIs in a cross-site manner, as discussed above.</source>
          <target state="translated">Вызов API &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest&quot;&gt; &lt;code&gt;XMLHttpRequest&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API&quot;&gt;Fetch&lt;/a&gt; между сайтами, как обсуждалось выше.</target>
        </trans-unit>
        <trans-unit id="2422fcd418c687b013805ec7620a6399f1372c7e" translate="yes" xml:space="preserve">
          <source>Is a response header if the resource transmitted should be displayed inline (default behavior when the header is not present), or it should be handled like a download and the browser should present a 'Save As' window.</source>
          <target state="translated">Это заголовок ответа,если передаваемый ресурс должен быть отображен в строке (поведение по умолчанию,когда заголовок отсутствует),или он должен быть обработан как скачать,а браузер должен представить окно 'Save As' (Сохранить как).</target>
        </trans-unit>
        <trans-unit id="54e9ec692a56ffab91bf47f24b6f5f04f83ce33b" translate="yes" xml:space="preserve">
          <source>Is either the string &quot;GMT&quot; or is left out.</source>
          <target state="translated">Это либо строка &quot;GMT&quot;,либо она пропущена.</target>
        </trans-unit>
        <trans-unit id="a64fa4c3a913c82e4add144ea7fbfd9cf3825b6d" translate="yes" xml:space="preserve">
          <source>Is either the string &quot;GMT&quot;, which makes time comparison occur in GMT timezone, or is left out. If left unspecified, times are taken to be in the local timezone.</source>
          <target state="translated">Либо строка &quot;GMT&quot;,которая делает сравнение времени происходящим в часовом поясе GMT,либо пропущена.Если оставить без указания,время принимается за локальный часовой пояс.</target>
        </trans-unit>
        <trans-unit id="2fda418b4e57fb88a74dfec63a3a823a7276ce48" translate="yes" xml:space="preserve">
          <source>Is followed by a string containing the name of the HTML field in the form that the content of this subpart refers to. When dealing with multiple files in the same field (for example, the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-multiple&quot;&gt;multiple&lt;/a&gt;&lt;/code&gt; attribute of an &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input&quot;&gt;&amp;lt;input type=&quot;file&quot;&amp;gt;&lt;/a&gt;&lt;/code&gt; element), there can be several subparts with the same name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ba85fc81b8929d8f78e20fd1bc753c0fb30e0fc" translate="yes" xml:space="preserve">
          <source>Is followed by a string containing the name of the HTML field in the form that the content of this subpart refers to. When dealing with multiple files in the same field (for example, the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-multiple&quot;&gt;multiple&lt;/a&gt;&lt;/code&gt; attribute of an &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input&quot;&gt;&amp;lt;input type=file&amp;gt;&lt;/a&gt;&lt;/code&gt; element), there can be several subparts with the same name.</source>
          <target state="translated">За ним следует строка, содержащая имя поля HTML в форме, на которую ссылается содержимое этой части. При работе с несколькими файлами в одном поле (например, с атрибутом &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-multiple&quot;&gt;multiple&lt;/a&gt;&lt;/code&gt; элемента &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input&quot;&gt;&amp;lt;input type=file&amp;gt;&lt;/a&gt;&lt;/code&gt; ) может быть несколько подразделов с одинаковым именем.</target>
        </trans-unit>
        <trans-unit id="3e092b4d92d6c6e47005b961bfdf49f31576121c" translate="yes" xml:space="preserve">
          <source>Is followed by a string containing the original name of the file transmitted. The filename is always optional and must not be used blindly by the application: path information should be stripped, and conversion to the server file system rules should be done. This parameter provides mostly indicative information. When used in combination with &lt;code&gt;Content-Disposition: attachment&lt;/code&gt;, it is used as the default filename for an eventual &quot;Save As&quot; dialog presented to the user.</source>
          <target state="translated">За ним следует строка, содержащая исходное имя переданного файла. Имя файла всегда является необязательным и не должно использоваться приложением вслепую: информация о пути должна быть удалена, и должно быть выполнено преобразование в правила файловой системы сервера. Этот параметр предоставляет в основном ориентировочную информацию. При использовании в сочетании с &lt;code&gt;Content-Disposition: attachment&lt;/code&gt; он используется как имя файла по умолчанию для возможного диалогового окна &amp;laquo;Сохранить как&amp;raquo;, представляемого пользователю.</target>
        </trans-unit>
        <trans-unit id="ad350b49b6105f7ba408d2cd47de12fe45080a69" translate="yes" xml:space="preserve">
          <source>Is one of the ordered month strings below.</source>
          <target state="translated">Это одна из строк заказанного месяца внизу.</target>
        </trans-unit>
        <trans-unit id="77e28a9350d45487207b84bc262233bfb40e6bc5" translate="yes" xml:space="preserve">
          <source>Is the domain name to test the hostname against.</source>
          <target state="translated">Это доменное имя для проверки имени хоста.</target>
        </trans-unit>
        <trans-unit id="5e530d4a48748eedf183a271fc2d6561b7e57883" translate="yes" xml:space="preserve">
          <source>Is the hostname from the URL.</source>
          <target state="translated">Это имя хоста с URL-адреса.</target>
        </trans-unit>
        <trans-unit id="2e041ae111b4fa679b2480031c90505ef7ed4674" translate="yes" xml:space="preserve">
          <source>Is the hour from 0 to 23. (0 is midnight, 23 is 11 pm.)</source>
          <target state="translated">это час с 0 до 23.(0-полночь,23-11 вечера.)</target>
        </trans-unit>
        <trans-unit id="76bc382859db96f13208fadcaadcd35c9c7d32d7" translate="yes" xml:space="preserve">
          <source>Is the ordered day of the month between 1 and 31 (as an integer).</source>
          <target state="translated">Это упорядоченный день месяца между 1 и 31 (в виде целого числа).</target>
        </trans-unit>
        <trans-unit id="7165ac45c85ea0d30878e33d1b544beb92ad0407" translate="yes" xml:space="preserve">
          <source>Is the ordered full year integer number. For example, 2016 (&lt;strong&gt;not&lt;/strong&gt; 16).</source>
          <target state="translated">Заказанное целое число за полный год. Например, 2016 (а &lt;strong&gt;не&lt;/strong&gt; 16).</target>
        </trans-unit>
        <trans-unit id="0331e5317c1a5353192cf6b448ec4dc07116aaba" translate="yes" xml:space="preserve">
          <source>Is true if the hostname matches &lt;em&gt;exactly&lt;/em&gt; the specified hostname, or if there is no domain name part in the hostname, but the unqualified hostname matches.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecffee78fc03e20a569b23ceac7747629660f84c" translate="yes" xml:space="preserve">
          <source>Is true if the hostname matches exactly the specified hostname, or if there is no domain name part in the hostname, but the unqualified hostname matches.</source>
          <target state="translated">Верно,если имя хоста точно совпадает с указанным именем хоста,или если в имени хоста нет части доменного имени,но совпадает безоговорочное имя хоста.</target>
        </trans-unit>
        <trans-unit id="dc64e475d99a6f7197d18d5097b7b8434838014d" translate="yes" xml:space="preserve">
          <source>Isolates the browsing context exclusively to same-origin documents. Cross-origin documents are not loaded in the same browsing context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bea60d3e6673895b89b3e27ba8883ed44567185" translate="yes" xml:space="preserve">
          <source>It allows a server to populate data in a client cache, in advance of it being required, through a mechanism called the server push.</source>
          <target state="translated">Он позволяет серверу заполнять данные в клиентском кэше до того,как они понадобятся,с помощью механизма,называемого server push.</target>
        </trans-unit>
        <trans-unit id="f43fd22d2b5777ebb739889216138bbc5cbb86d9" translate="yes" xml:space="preserve">
          <source>It also needs to have a MIME type of its parsed value (ignoring parameters) of either &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt;, &lt;code&gt;multipart/form-data&lt;/code&gt;, or &lt;code&gt;text/plain&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f005d0f75fee252497145808a577cd8d55b04051" translate="yes" xml:space="preserve">
          <source>It assumed that all user agent strings that include the substring &quot;Chrome&quot; are Chrome. UA strings are notoriously misleading.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00298a3bb5b667d923ae54e34aa323fff850e2de" translate="yes" xml:space="preserve">
          <source>It assumed that the lookbehind feature would always be available if the browser was Chrome. The agent might be an older version of Chrome, from before support was added, or (because the feature was experimental at the time) it could be a later version of Chrome that removed it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f46736fbac23773dd54664bce214c5dc4f10a2c6" translate="yes" xml:space="preserve">
          <source>It can be used when the total number of request header fields is too large, or when a single header field is at too large.</source>
          <target state="translated">Он может использоваться,когда общее количество полей заголовка запроса слишком велико,или когда одно поле заголовка слишком велико.</target>
        </trans-unit>
        <trans-unit id="c1727a3eed7f9b9c35a928b776172744af8666f3" translate="yes" xml:space="preserve">
          <source>It compresses headers. As these are often similar among a set of requests, this removes duplication and overhead of data transmitted.</source>
          <target state="translated">Он сжимает заголовки.Так как они часто бывают похожими среди множества запросов,это устраняет дублирование и накладные расходы на передаваемые данные.</target>
        </trans-unit>
        <trans-unit id="03150c53b496ba5d7d08bbe9124ae9e71723e36b" translate="yes" xml:space="preserve">
          <source>It indicates that a method could not be performed because the server cannot store the representation needed to successfully complete the request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc98200fb5d715ddd3a57296b4af83524c9f7ff0" translate="yes" xml:space="preserve">
          <source>It indicates that the server terminated an operation because it encountered an infinite loop while processing a request with &quot;Depth: infinity&quot;. This status indicates that the entire operation failed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b480764290e819516d7c049141dbc95445b3642" translate="yes" xml:space="preserve">
          <source>It is a binary protocol rather than text. It can no longer be read and created manually. Despite this hurdle, improved optimization techniques can now be implemented.</source>
          <target state="translated">Это двоичный протокол,а не текст.Он больше не может быть прочитан и создан вручную.Несмотря на это препятствие,теперь могут быть реализованы улучшенные методы оптимизации.</target>
        </trans-unit>
        <trans-unit id="bad2ad311f9d8d7e181ed23c4b923cbf915ec8c4" translate="yes" xml:space="preserve">
          <source>It is a multiplexed protocol. Parallel requests can be handled over the same connection, removing the order and blocking constraints of the HTTP/1.x protocol.</source>
          <target state="translated">Это мультиплексированный протокол.Параллельные запросы могут обрабатываться по одному и тому же соединению,удаляя ограничения по порядку и блокируя протокол HTTP/1.x.</target>
        </trans-unit>
        <trans-unit id="a6445c1ff39b5450a5feef25fe2084062f1d4500" translate="yes" xml:space="preserve">
          <source>It is a request header that indicates the relationship between a request initiator's origin and its target's origin. It is a Structured Header whose value is a token with possible values &lt;code&gt;cross-site&lt;/code&gt;, &lt;code&gt;same-origin&lt;/code&gt;, &lt;code&gt;same-site&lt;/code&gt;, and &lt;code&gt;none&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c11dc9b7ef22fb60dba4ef500da2f01db7a4466" translate="yes" xml:space="preserve">
          <source>It is a request header that indicates the request's destination to a server. It is a Structured Header whose value is a token with possible values &lt;code&gt;audio&lt;/code&gt;, &lt;code&gt;audioworklet&lt;/code&gt;, &lt;code&gt;document&lt;/code&gt;, &lt;code&gt;embed&lt;/code&gt;, &lt;code&gt;empty&lt;/code&gt;, &lt;code&gt;font&lt;/code&gt;, &lt;code&gt;image&lt;/code&gt;, &lt;code&gt;manifest&lt;/code&gt;, &lt;code&gt;object&lt;/code&gt;, &lt;code&gt;paintworklet&lt;/code&gt;, &lt;code&gt;report&lt;/code&gt;, &lt;code&gt;script&lt;/code&gt;, &lt;code&gt;serviceworker&lt;/code&gt;, &lt;code&gt;sharedworker&lt;/code&gt;, &lt;code&gt;style&lt;/code&gt;, &lt;code&gt;track&lt;/code&gt;, &lt;code&gt;video&lt;/code&gt;, &lt;code&gt;worker&lt;/code&gt;, &lt;code&gt;xslt&lt;/code&gt;, and &lt;code&gt;nested-document&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d36eba61499c051f255d5b1dd6e9cfd50aa960c2" translate="yes" xml:space="preserve">
          <source>It is a request header that indicates the request's mode to a server. It is a Structured Header whose value is a token with possible values &lt;code&gt;cors&lt;/code&gt;, &lt;code&gt;navigate&lt;/code&gt;, &lt;code&gt;nested-navigate&lt;/code&gt;, &lt;code&gt;no-cors&lt;/code&gt;, &lt;code&gt;same-origin&lt;/code&gt;, and &lt;code&gt;websocket&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dadb148c476fc24dc7e1218baf0d8439e45ce0fd" translate="yes" xml:space="preserve">
          <source>It is a request header that indicates whether or not a navigation request was triggered by user activation. It is a Structured Header whose value is a boolean so possible values are &lt;code&gt;?0&lt;/code&gt; for false and &lt;code&gt;?1&lt;/code&gt; for true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7b12c882112937be30ce15f7fdc909be28edb8f" translate="yes" xml:space="preserve">
          <source>It is a validator, a unique string identifying the version of the resource. Conditional requests using &lt;a href=&quot;headers/if-match&quot;&gt;&lt;code&gt;If-Match&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;headers/if-none-match&quot;&gt;&lt;code&gt;If-None-Match&lt;/code&gt;&lt;/a&gt; use this value to change the behavior of the request.</source>
          <target state="translated">Это валидатор, уникальная строка, определяющая версию ресурса. В условных запросах с использованием &lt;a href=&quot;headers/if-match&quot;&gt; &lt;code&gt;If-Match&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;headers/if-none-match&quot;&gt; &lt;code&gt;If-None-Match&lt;/code&gt; &lt;/a&gt; это значение используется для изменения поведения запроса.</target>
        </trans-unit>
        <trans-unit id="5cdf965cca7cbedbb40498332c66597692a803a9" translate="yes" xml:space="preserve">
          <source>It is a validator, the last modification date of the resource, used to compare several versions of the same resource. It is less accurate than &lt;a href=&quot;headers/etag&quot;&gt;&lt;code&gt;ETag&lt;/code&gt;&lt;/a&gt;, but easier to calculate in some environments. Conditional requests using &lt;a href=&quot;headers/if-modified-since&quot;&gt;&lt;code&gt;If-Modified-Since&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;headers/if-unmodified-since&quot;&gt;&lt;code&gt;If-Unmodified-Since&lt;/code&gt;&lt;/a&gt; use this value to change the behavior of the request.</source>
          <target state="translated">Это валидатор, дата последней модификации ресурса, используемый для сравнения нескольких версий одного и того же ресурса. Он менее точен, чем &lt;a href=&quot;headers/etag&quot;&gt; &lt;code&gt;ETag&lt;/code&gt; &lt;/a&gt; , но его легче вычислить в некоторых средах. В условных запросах с использованием &lt;a href=&quot;headers/if-modified-since&quot;&gt; &lt;code&gt;If-Modified-Since&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;headers/if-unmodified-since&quot;&gt; &lt;code&gt;If-Unmodified-Since&lt;/code&gt; &lt;/a&gt; это значение используется для изменения поведения запроса.</target>
        </trans-unit>
        <trans-unit id="9785aaf5047339a17ab49de4a65661f34c75c502" translate="yes" xml:space="preserve">
          <source>It is beyond the scope of a protocol specification to mandate
   compliance with previous versions. HTTP/1.1 was deliberately
   designed, however, to make supporting previous versions easy. It is
   worth noting that, at the time of composing this specification
   (1996), we would expect commercial HTTP/1.1 servers to:

      - recognize the format of the Request-Line for HTTP/0.9, 1.0, and
        1.1 requests; 

      - understand any valid request in the format of HTTP/0.9, 1.0, or
        1.1;

      - respond appropriately with a message in the same major version
        used by the client.

   And we would expect HTTP/1.1 clients to:

      - recognize the format of the Status-Line for HTTP/1.0 and 1.1
        responses;

      - understand any valid response in the format of HTTP/0.9, 1.0, or
        1.1.

   For most implementations of HTTP/1.0, each connection is established
   by the client prior to the request and closed by the server after
   sending the response. Some implementations implement the Keep-Alive
   version of persistent connections described in section 19.7.1 of &lt;a href=&quot;https://tools.ietf.org/html/rfc2068&quot;&gt;RFC&lt;/a&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc2068&quot;&gt;2068&lt;/a&gt; [&lt;a href=&quot;#ref-33&quot;&gt;33&lt;/a&gt;].</source>
          <target state="translated">Требование соответствия предыдущим версиям выходит за рамки спецификации протокола. Однако HTTP / 1.1 был специально разработан, чтобы упростить поддержку предыдущих версий. Стоит отметить, что на момент составления этой спецификации (1996 г.) мы ожидали, что коммерческие серверы HTTP / 1.1: - распознают формат строки запроса для запросов HTTP / 0.9, 1.0 и 1.1; - понимать любой действительный запрос в формате HTTP / 0.9, 1.0 или 1.1; - ответить соответствующим образом сообщением той же основной версии, которая используется клиентом. И мы ожидаем, что клиенты HTTP / 1.1: - распознают формат строки состояния для ответов HTTP / 1.0 и 1.1; - понимать любой действительный ответ в формате HTTP / 0.9, 1.0 или 1.1.Для большинства реализаций HTTP / 1.0 каждое соединение устанавливается клиентом до запроса и закрывается сервером после отправки ответа. Некоторые реализации реализуют версию постоянных подключений Keep-Alive, описанную в разделе 19.7.1.&lt;a href=&quot;https://tools.ietf.org/html/rfc2068&quot;&gt;RFC &lt;/a&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc2068&quot;&gt;2068&lt;/a&gt; [ &lt;a href=&quot;#ref-33&quot;&gt;33&lt;/a&gt; ].</target>
        </trans-unit>
        <trans-unit id="8259fef778fc701ed117ff363698b323da319cfd" translate="yes" xml:space="preserve">
          <source>It is beyond the scope of this specification to describe how
   connections are established via various transport- or session-layer
   protocols.  Each connection applies to only one transport link.</source>
          <target state="translated">Описание того,как устанавливаются соединения по различным протоколам транспортного или сеансового уровня,выходит за рамки данной спецификации.Каждое соединение относится только к одному транспортному каналу.</target>
        </trans-unit>
        <trans-unit id="f2d087e11ffd49739b77d44827cb4d007b8288ad" translate="yes" xml:space="preserve">
          <source>It is especially important that proxies correctly implement the
   properties of the Connection header field as specified in &lt;a href=&quot;#section-14.10&quot;&gt;section&lt;/a&gt;&lt;a href=&quot;#section-14.10&quot;&gt;14.10&lt;/a&gt;.

   The proxy server MUST signal persistent connections separately with
   its clients and the origin servers (or other proxy servers) that it
   connects to. Each persistent connection applies to only one transport
   link.

   A proxy server MUST NOT establish a HTTP/1.1 persistent connection
   with an HTTP/1.0 client (but see &lt;a href=&quot;https://tools.ietf.org/html/rfc2068&quot;&gt;RFC 2068&lt;/a&gt; [&lt;a href=&quot;#ref-33&quot;&gt;33&lt;/a&gt;] for information and
   discussion of the problems with the Keep-Alive header implemented by
   many HTTP/1.0 clients).</source>
          <target state="translated">Особенно важно, чтобы прокси правильно реализовали свойства поля заголовка соединения, как указано в &lt;a href=&quot;#section-14.10&quot;&gt;разделе &lt;/a&gt;&lt;a href=&quot;#section-14.10&quot;&gt;14.10&lt;/a&gt; . Прокси-сервер ДОЛЖЕН сигнализировать о постоянных соединениях отдельно со своими клиентами и исходными серверами (или другими прокси-серверами), к которым он подключается. Каждое постоянное соединение применяется только к одному транспортному каналу. Прокси-сервер НЕ ДОЛЖЕН устанавливать постоянное соединение HTTP / 1.1 с клиентом HTTP / 1.0 (но см. &lt;a href=&quot;https://tools.ietf.org/html/rfc2068&quot;&gt;RFC 2068&lt;/a&gt; [ &lt;a href=&quot;#ref-33&quot;&gt;33&lt;/a&gt; ] для информации и обсуждения проблем с заголовком Keep-Alive, реализуемых многими клиентами HTTP / 1.0).</target>
        </trans-unit>
        <trans-unit id="b498c25fadce9f183d82dd50870c277f51907a88" translate="yes" xml:space="preserve">
          <source>It is however still necessary for Firefox to load resources in web content under certain circumstances. For example, if you open the view source page (View Page Source or View Selection Source), you will find it requires &lt;code&gt;viewsource.css&lt;/code&gt; through a &lt;code&gt;resource:&lt;/code&gt; URI. Resources that have to be exposed to web content have been moved to a new location named &lt;code&gt;resource://content-accessible/&lt;/code&gt;, which is isolated and only contains non-sensitive resources. In this way we can keep essential resources exposed and have most threats eliminated.</source>
          <target state="translated">Однако Firefox по-прежнему необходимо загружать ресурсы в веб-контент при определенных обстоятельствах. Например, если вы откроете страницу источника просмотра (источник страницы просмотра или источник выбора просмотра), вы обнаружите, что для нее требуется &lt;code&gt;viewsource.css&lt;/code&gt; через &lt;code&gt;resource:&lt;/code&gt; URI. Ресурсы, которые должны быть доступны веб-контенту, были перемещены в новое место с именем &lt;code&gt;resource://content-accessible/&lt;/code&gt; , которое изолировано и содержит только нечувствительные ресурсы. Таким образом мы сможем сохранить доступ к важнейшим ресурсам и устранить большинство угроз.</target>
        </trans-unit>
        <trans-unit id="a7d678015e6dbddd6cd806a3a207ba38d15b32ae" translate="yes" xml:space="preserve">
          <source>It is important to avoid redirection loops as they completely break the user experience.</source>
          <target state="translated">Важно избегать циклов перенаправления,так как они полностью нарушают работу пользователя.</target>
        </trans-unit>
        <trans-unit id="9e2cb912ee31c4907225a745ba6545337d221db7" translate="yes" xml:space="preserve">
          <source>It is important to avoid redirection loops, as they completely break the user experience.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7abd5b5646d7b956a07aef0207e3f862399863c2" translate="yes" xml:space="preserve">
          <source>It is possible to add a special HTML &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link&quot;&gt;&lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt;&lt;/a&gt; element to a page to indicate what the canonical address of a page is. This has no impact on the human reader of the page, but tells search engine crawlers where the page actually lives. This way, search engines don't index the same page several times, potentially leading to it being considered as duplicate content or spam, and even removing or lowering your page from the search engine result pages.</source>
          <target state="translated">Можно добавить на страницу специальный HTML- элемент &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link&quot;&gt; &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; ,&lt;/a&gt; чтобы указать канонический адрес страницы. Это не влияет на человека, читающего страницу, но сообщает сканерам поисковых систем, где на самом деле находится страница. Таким образом, поисковые системы не индексируют одну и ту же страницу несколько раз, что может привести к тому, что она будет рассматриваться как дублированный контент или спам, и даже удалит или опустит вашу страницу со страниц результатов поисковой системы.</target>
        </trans-unit>
        <trans-unit id="8a360170218e1e7d2c6f7cc097d32c2f58946eee" translate="yes" xml:space="preserve">
          <source>It is possible to deploy &lt;code&gt;strict-dynamic&lt;/code&gt; in a backwards compatible way, without requiring user-agent sniffing.</source>
          <target state="translated">Можно развернуть &lt;code&gt;strict-dynamic&lt;/code&gt; обратно совместимым способом, не требуя сниффинга пользовательского агента.</target>
        </trans-unit>
        <trans-unit id="d542c890e06636447b6f6b9d8af60c44ef672877" translate="yes" xml:space="preserve">
          <source>It is quite difficult to have a unique identifier for strong validation with &lt;a href=&quot;headers/last-modified&quot;&gt;&lt;code&gt;Last-Modified&lt;/code&gt;&lt;/a&gt;. Often this is done using an &lt;a href=&quot;headers/etag&quot;&gt;&lt;code&gt;ETag&lt;/code&gt;&lt;/a&gt; with the MD5 hash of the resource (or a derivative).</source>
          <target state="translated">Довольно сложно иметь уникальный идентификатор для строгой проверки с помощью &lt;a href=&quot;headers/last-modified&quot;&gt; &lt;code&gt;Last-Modified&lt;/code&gt; &lt;/a&gt; . Часто это делается с помощью &lt;a href=&quot;headers/etag&quot;&gt; &lt;code&gt;ETag&lt;/code&gt; &lt;/a&gt; с хешем MD5 ресурса (или производного инструмента).</target>
        </trans-unit>
        <trans-unit id="67317fd8b8bf14b0a6bd9419d261f53ed7a8e4f3" translate="yes" xml:space="preserve">
          <source>It takes three possible values: &lt;code&gt;Strict&lt;/code&gt;, &lt;code&gt;Lax&lt;/code&gt;, and &lt;code&gt;None&lt;/code&gt;. With &lt;code&gt;Strict&lt;/code&gt;, the cookie is sent only to the same site as the one that originated it; &lt;code&gt;Lax&lt;/code&gt; is similar, with an exception for when the user navigates to a URL from an external site, such as by following a link; &lt;code&gt;None&lt;/code&gt; has no restrictions on cross-site requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98ff32d0856e5c15bbca04673b6c6f97714c4530" translate="yes" xml:space="preserve">
          <source>It's difficult to build a website that uses all the latest best practices and provides great performance and user experiences. As the website evolves, it can become even harder to maintain the user experience over time. You can use feature policies to specify the desired best practices, and rely on the browser to enforce the policies to prevent regressions.</source>
          <target state="translated">Сложно построить сайт,который использует все новейшие лучшие практики и обеспечивает отличную производительность и удобство работы для пользователей.По мере развития сайта может стать еще труднее поддерживать пользовательский опыт с течением времени.Вы можете использовать функциональные политики для определения желаемых лучших практик,и полагаться на браузер для применения политик,чтобы предотвратить регрессии.</target>
        </trans-unit>
        <trans-unit id="efa57fd9b104487236e3d21ead681f7448b30db9" translate="yes" xml:space="preserve">
          <source>It's easy to find the correspondences by looking at the &lt;a href=&quot;https://hg.mozilla.org/releases&quot;&gt;Mercurial repository names&lt;/a&gt;: repositories starting by &lt;code&gt;mozilla-b2g&lt;/code&gt; are the release repositories for Firefox OS, and have both Firefox OS and Gecko versions in their names.</source>
          <target state="translated">Соответствия легко найти, посмотрев на &lt;a href=&quot;https://hg.mozilla.org/releases&quot;&gt;имена&lt;/a&gt; репозиториев Mercurial : репозитории, начинающиеся с &lt;code&gt;mozilla-b2g&lt;/code&gt; , являются репозиториями выпусков для Firefox OS, и в их названиях есть версии Firefox OS и Gecko.</target>
        </trans-unit>
        <trans-unit id="5250b829db5c42c7a082fb33c46a6aed6b45b478" translate="yes" xml:space="preserve">
          <source>It's important point to note that connection management in HTTP applies to the connection between two consecutive nodes, which is &lt;a href=&quot;headers#hbh&quot;&gt;hop-by-hop&lt;/a&gt; and not &lt;a href=&quot;headers#e2e&quot;&gt;end-to-end&lt;/a&gt;. The model used in connections between a client and its first proxy may differ from the model between a proxy and the destination server (or any intermediate proxies). The HTTP headers involved in defining the connection model, like &lt;a href=&quot;headers/connection&quot;&gt;&lt;code&gt;Connection&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;headers/keep-alive&quot;&gt;&lt;code&gt;Keep-Alive&lt;/code&gt;&lt;/a&gt;, are &lt;a href=&quot;headers#hbh&quot;&gt;hop-by-hop&lt;/a&gt; headers with their values able to be changed by intermediary nodes.</source>
          <target state="translated">Важно отметить, что управление соединениями в HTTP применяется к соединению между двумя последовательными узлами, которое является &lt;a href=&quot;headers#hbh&quot;&gt;пошаговым,&lt;/a&gt; а не &lt;a href=&quot;headers#e2e&quot;&gt;сквозным&lt;/a&gt; . Модель, используемая в соединениях между клиентом и его первым прокси, может отличаться от модели между прокси и конечным сервером (или любыми промежуточными прокси). Заголовки HTTP, участвующие в определении модели подключения, такие как &lt;a href=&quot;headers/connection&quot;&gt; &lt;code&gt;Connection&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;headers/keep-alive&quot;&gt; &lt;code&gt;Keep-Alive&lt;/code&gt; &lt;/a&gt; , представляют &lt;a href=&quot;headers#hbh&quot;&gt;собой&lt;/a&gt; заголовки по этапам, значения которых могут быть изменены промежуточными узлами.</target>
        </trans-unit>
        <trans-unit id="739ff299232862f99e9340517c687340775d8925" translate="yes" xml:space="preserve">
          <source>It's standard procedure to start a connection using HTTP/1.1, due to its broad support, then request an upgrade to HTTP/2. This way, you have a functioning connection still even if HTTP/2 isn't supported by the server. However, you can only upgrade to an insecure (cleartext) HTTP/2 connection. This is done using the target protocol name &lt;code&gt;h2c&lt;/code&gt;, which stands for &quot;HTTP/2 Cleartext&quot;. This also &lt;em&gt;requires&lt;/em&gt; the specification of the &lt;code&gt;HTTP2-Settings&lt;/code&gt; header field.</source>
          <target state="translated">Это стандартная процедура для запуска соединения с использованием HTTP / 1.1 из-за его широкой поддержки, а затем запроса обновления до HTTP / 2. Таким образом, у вас будет работающее соединение, даже если HTTP / 2 не поддерживается сервером. Однако вы можете выполнить обновление только до незащищенного (открытого текста) соединения HTTP / 2. Это делается с использованием имени целевого протокола &lt;code&gt;h2c&lt;/code&gt; , что означает &amp;laquo;HTTP / 2 Открытый текст&amp;raquo;. Это также &lt;em&gt;требует&lt;/em&gt; указания поля заголовка &lt;code&gt;HTTP2-Settings&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8bea6d61f9c2501d81011d81f34e205f8686dfa5" translate="yes" xml:space="preserve">
          <source>It's worth re-iterating: it's very rarely a good idea to use user agent sniffing. You can almost always find a better, more broadly compatible way to solve your problem!</source>
          <target state="translated">Стоит повторить:это очень редко является хорошей идеей,чтобы использовать пользовательский агент нюхать.Почти всегда можно найти лучший,более широко совместимый способ решения проблемы!</target>
        </trans-unit>
        <trans-unit id="a45885aac538290762a4f7f3317abf411bb16059" translate="yes" xml:space="preserve">
          <source>JPEG</source>
          <target state="translated">JPEG</target>
        </trans-unit>
        <trans-unit id="1eed6d58a74c7c8d582fdf2be8d22bcb2c8939ca" translate="yes" xml:space="preserve">
          <source>JPEG images</source>
          <target state="translated">изображения в формате JPEG</target>
        </trans-unit>
        <trans-unit id="5766bfd5841dee1b6f2aaf89bbb921f60e7d1b6f" translate="yes" xml:space="preserve">
          <source>JSON format</source>
          <target state="translated">формат JSON</target>
        </trans-unit>
        <trans-unit id="a66f05ea5cca9de68a33b0638207bfbcd5641141" translate="yes" xml:space="preserve">
          <source>JSON-LD format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb7b5a55874bccbd5415aa333ebe2f4d5bc10f49" translate="yes" xml:space="preserve">
          <source>Java Archive (JAR)</source>
          <target state="translated">Java-архив (JAR)</target>
        </trans-unit>
        <trans-unit id="ee620923ff5fc510555dc37083a135ee93b5404b" translate="yes" xml:space="preserve">
          <source>JavaScript</source>
          <target state="translated">JavaScript</target>
        </trans-unit>
        <trans-unit id="0bd88372ee65c120d42e02af79e6d6a3eb158cea" translate="yes" xml:space="preserve">
          <source>JavaScript (&lt;a href=&quot;https://www.iana.org/assignments/media-types/application/javascript&quot;&gt;&lt;em&gt;&lt;abbr&gt;IANA&lt;/abbr&gt; Specification&lt;/em&gt;&lt;/a&gt;) (&lt;a href=&quot;https://tools.ietf.org/html/rfc4329#section-8.2&quot;&gt;RFC 4329 Section 8.2&lt;/a&gt;)</source>
          <target state="translated">JavaScript ( &lt;a href=&quot;https://www.iana.org/assignments/media-types/application/javascript&quot;&gt;&lt;em&gt;спецификация &lt;/em&gt;&lt;/a&gt;&lt;em&gt;&lt;abbr&gt;IANA&lt;/abbr&gt;&lt;/em&gt; ) ( &lt;a href=&quot;https://tools.ietf.org/html/rfc4329#section-8.2&quot;&gt;RFC 4329, раздел 8.2&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="14198645a38762965b009588906bec6466424e7f" translate="yes" xml:space="preserve">
          <source>JavaScript access using &lt;code&gt;Document.cookie&lt;/code&gt;</source>
          <target state="translated">Доступ к JavaScript с использованием &lt;code&gt;Document.cookie&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f2e6e6231b726f3003de6b6cd95b2a1228b3c146" translate="yes" xml:space="preserve">
          <source>JavaScript access using Document.cookie</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02726ffcb85ce089b78555f5977ff60b7b1e1236" translate="yes" xml:space="preserve">
          <source>JavaScript files</source>
          <target state="translated">файлы JavaScript</target>
        </trans-unit>
        <trans-unit id="0394a047be98486e114cae8247a6233e345b8672" translate="yes" xml:space="preserve">
          <source>JavaScript module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3be64216bdf0b966d93ddd891c18c487fb2b9ae8" translate="yes" xml:space="preserve">
          <source>JavaScript redirections</source>
          <target state="translated">перенаправления JavaScript</target>
        </trans-unit>
        <trans-unit id="9495512a0ffe6408bf56b96c0f685997352e9772" translate="yes" xml:space="preserve">
          <source>JavaScript redirections via the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model&quot;&gt;DOM&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a908fed06c72f5e490a9950a8717a85839ac02f" translate="yes" xml:space="preserve">
          <source>JavaScript redirects are used as the last resort, and only if JavaScript is enabled on the client side.</source>
          <target state="translated">JavaScript перенаправления используются как последнее средство,и только в том случае,если JavaScript включен на стороне клиента.</target>
        </trans-unit>
        <trans-unit id="047107c9d905d625d42fe9a86dcfdf5bbd7aed84" translate="yes" xml:space="preserve">
          <source>JavaScript redirects execute last, and only if JavaScript is enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a51f0d37d8a868b09fd7045118623248a30aff4" translate="yes" xml:space="preserve">
          <source>JavaScript types</source>
          <target state="translated">типы JavaScript</target>
        </trans-unit>
        <trans-unit id="25e0c3834572e2b5f374c1a40ffbd07f94e13112" translate="yes" xml:space="preserve">
          <source>Joint Photographic Expert Group image</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2bea8b7008e2db2d0b0548f31cebaf54a8e8d9f" translate="yes" xml:space="preserve">
          <source>Julian Reschke
   &amp;lt;green/&amp;gt;bytes GmbH
   Hafenweg 16, 48155 Muenster, Germany
   EMail: julian.reschke@greenbytes.de


   Elias Sinderson
   University of California, Santa Cruz
   1156 High Street, Santa Cruz, CA 95064
   EMail: elias@cse.ucsc.edu


   Jim Whitehead
   University of California, Santa Cruz
   1156 High Street, Santa Cruz, CA 95064
   EMail: ejw@soe.ucsc.edu</source>
          <target state="translated">Джулиан Решке &amp;lt;green /&amp;gt; bytes GmbH Hafenweg 16, 48155 Мюнстер, Германия Электронная почта: julian.reschke@greenbytes.de Калифорнийский университет имени Элиаса Синдерсона, Санта-Крус, 1156 Хай-стрит, Санта-Крус, Калифорния 95064 Электронная почта: elias@cse.ucsc.edu Калифорнийский университет Джима Уайтхеда, Санта-Крус 1156 High Street, Санта-Крус, Калифорния 95064 Электронная почта: ejw@soe.ucsc.edu</target>
        </trans-unit>
        <trans-unit id="9c89e4dc68bedeca878534384b26901da1f8442a" translate="yes" xml:space="preserve">
          <source>Just as in HTTP/1, a header field in HTTP/2 is a name with one or
   more associated values.  Header fields are used within HTTP request
   and response messages as well as in server push operations (see
   &lt;a href=&quot;#section-8.2&quot;&gt;Section 8.2&lt;/a&gt;).

   Header lists are collections of zero or more header fields.  When
   transmitted over a connection, a header list is serialized into a
   header block using HTTP header compression [&lt;a href=&quot;#ref-COMPRESSION&quot;&gt;COMPRESSION&lt;/a&gt;].  The
   serialized header block is then divided into one or more octet
   sequences, called header block fragments, and transmitted within the
   payload of HEADERS (&lt;a href=&quot;#section-6.2&quot;&gt;Section 6.2&lt;/a&gt;), PUSH_PROMISE (&lt;a href=&quot;#section-6.6&quot;&gt;Section 6.6&lt;/a&gt;), or
   CONTINUATION (&lt;a href=&quot;#section-6.10&quot;&gt;Section 6.10&lt;/a&gt;) frames.

   The Cookie header field [&lt;a href=&quot;#ref-COOKIE&quot;&gt;COOKIE&lt;/a&gt;] is treated specially by the HTTP
   mapping (see &lt;a href=&quot;#section-8.1.2.5&quot;&gt;Section 8.1.2.5&lt;/a&gt;).

   A receiving endpoint reassembles the header block by concatenating
   its fragments and then decompresses the block to reconstruct the
   header list.

   A complete header block consists of either:

   o  a single HEADERS or PUSH_PROMISE frame, with the END_HEADERS flag
      set, or

   o  a HEADERS or PUSH_PROMISE frame with the END_HEADERS flag cleared
      and one or more CONTINUATION frames, where the last CONTINUATION
      frame has the END_HEADERS flag set.

   Header compression is stateful.  One compression context and one
   decompression context are used for the entire connection.  A decoding
   error in a header block MUST be treated as a connection error
   (&lt;a href=&quot;#section-5.4.1&quot;&gt;Section 5.4.1&lt;/a&gt;) of type COMPRESSION_ERROR.

   Each header block is processed as a discrete unit.  Header blocks
   MUST be transmitted as a contiguous sequence of frames, with no
   interleaved frames of any other type or from any other stream.  The
   last frame in a sequence of HEADERS or CONTINUATION frames has the 

   END_HEADERS flag set.  The last frame in a sequence of PUSH_PROMISE
   or CONTINUATION frames has the END_HEADERS flag set.  This allows a
   header block to be logically equivalent to a single frame.

   Header block fragments can only be sent as the payload of HEADERS,
   PUSH_PROMISE, or CONTINUATION frames because these frames carry data
   that can modify the compression context maintained by a receiver.  An
   endpoint receiving HEADERS, PUSH_PROMISE, or CONTINUATION frames
   needs to reassemble header blocks and perform decompression even if
   the frames are to be discarded.  A receiver MUST terminate the
   connection with a connection error (&lt;a href=&quot;#section-5.4.1&quot;&gt;Section 5.4.1&lt;/a&gt;) of type
   COMPRESSION_ERROR if it does not decompress a header block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e8b1d0fc088bb90dbbe8a2dbd8d00105aebfdf3" translate="yes" xml:space="preserve">
          <source>Keep-Alive</source>
          <target state="translated">Keep-Alive</target>
        </trans-unit>
        <trans-unit id="6146b34bc65ee03e10bb0d16dc15637d8d926be2" translate="yes" xml:space="preserve">
          <source>Keep-Alive Header (IETF Internet Draft)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="518fe23acc32b680b6c7064b18768ce9a4edc6c7" translate="yes" xml:space="preserve">
          <source>Keeping links alive</source>
          <target state="translated">Сохранение живых ссылок</target>
        </trans-unit>
        <trans-unit id="0b80404ac1f938e0ad58d9a575e0e0aa00a66dd0" translate="yes" xml:space="preserve">
          <source>Kind of document</source>
          <target state="translated">Вид документа</target>
        </trans-unit>
        <trans-unit id="471e7dd9c2f2d4bd1722ed06bd63bae32d792b07" translate="yes" xml:space="preserve">
          <source>Klar Version (Rendering Engine)</source>
          <target state="translated">Версия Клара (двигатель-рендер)</target>
        </trans-unit>
        <trans-unit id="53a344b79c8c2c1639455bd4ca9631b250cbb736" translate="yes" xml:space="preserve">
          <source>Klar for Android</source>
          <target state="translated">Клар для Android</target>
        </trans-unit>
        <trans-unit id="1cfc0d8b05e463c4269f42611f344e37e54aaf18" translate="yes" xml:space="preserve">
          <source>Konqueror 4.6</source>
          <target state="translated">Завоеватель 4,6</target>
        </trans-unit>
        <trans-unit id="1971c93380e2bf924d413b56239bd916d71c69a0" translate="yes" xml:space="preserve">
          <source>Lack of error handling</source>
          <target state="translated">Отсутствие обработки ошибок</target>
        </trans-unit>
        <trans-unit id="3df68e70fa194f3c844cf64d5417d8356ae60b51" translate="yes" xml:space="preserve">
          <source>Large message body</source>
          <target state="translated">Тело большого сообщения</target>
        </trans-unit>
        <trans-unit id="aba1a47c51ae2e1013a1da8b769f84aea5b8154d" translate="yes" xml:space="preserve">
          <source>Large-Allocation</source>
          <target state="translated">Large-Allocation</target>
        </trans-unit>
        <trans-unit id="4312b9cdc22a0d8cf25ab213c9d034cee9ce16ee" translate="yes" xml:space="preserve">
          <source>Last-Modified</source>
          <target state="translated">Last-Modified</target>
        </trans-unit>
        <trans-unit id="5ad73a8c3ddef48b03c719ec7b68bf049b1d82e3" translate="yes" xml:space="preserve">
          <source>Last-Modified (RFC 2616)</source>
          <target state="translated">Последняя модификация (RFC 2616)</target>
        </trans-unit>
        <trans-unit id="99e5db4754c5b7e5f7aa2bb6b93799f72088bd2e" translate="yes" xml:space="preserve">
          <source>Last-Modified (RFC 7232)</source>
          <target state="translated">Последняя модификация (RFC 7232)</target>
        </trans-unit>
        <trans-unit id="47055864cbe7192dae27bdfff260957e5075db67" translate="yes" xml:space="preserve">
          <source>Lastly, the above code snippets bring about a critical issue with cross-browser coding that must always be taken into account. Don't unintentionally use the API you are testing for in unsupported browsers. This may sound obvious and simple, but sometimes it is not. For example, in the above code snippets, using lookbehind in short-regexp notation (e.g. /reg/igm) will cause a parser error in unsupported browsers. Thus, in the above example, you would use &lt;em&gt;new RegExp(&quot;(?&amp;lt;=look_behind_stuff)&quot;);&lt;/em&gt; instead of &lt;em&gt;/(?&amp;lt;=look_behind_stuff)/&lt;/em&gt;, even in the lookbehind supported section of your code.</source>
          <target state="translated">Наконец, приведенные выше фрагменты кода вызывают критическую проблему с кроссбраузерным кодированием, которую всегда необходимо учитывать. Не используйте случайно тестируемый API в неподдерживаемых браузерах. Это может показаться очевидным и простым, но иногда это не так. Например, в приведенных выше фрагментах кода использование ретроспективы в нотации с коротким регулярным выражением (например, / reg / igm) вызовет ошибку парсера в неподдерживаемых браузерах. Таким образом, в приведенном выше примере вы должны использовать &lt;em&gt;new RegExp (&quot;(? &amp;lt;= Look_behind_stuff)&quot;);&lt;/em&gt; вместо &lt;em&gt;/ (? &amp;lt;= look_behind_stuff) /&lt;/em&gt; даже в поддерживаемом разделе вашего кода.</target>
        </trans-unit>
        <trans-unit id="eafc1856088b0c25b5dc46fcf0e9827359916eb5" translate="yes" xml:space="preserve">
          <source>Layout-inducing Animations</source>
          <target state="translated">Анимация,вызывающая увлечение</target>
        </trans-unit>
        <trans-unit id="2c4b740fafd105be97b958562b8d0b2c61b96ad1" translate="yes" xml:space="preserve">
          <source>Layout-inducing animations</source>
          <target state="translated">Анимация в стиле layou inducing</target>
        </trans-unit>
        <trans-unit id="002f595b3413c96ece78e3ec6628adfe5d342941" translate="yes" xml:space="preserve">
          <source>Lazyload</source>
          <target state="translated">Lazyload</target>
        </trans-unit>
        <trans-unit id="a40fd5847ed3e1026e0e2408645ee12816f7b517" translate="yes" xml:space="preserve">
          <source>Learn about: Content Security Policy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c1df5a82059a1ccfbe352d4ab0834213813478b" translate="yes" xml:space="preserve">
          <source>Learn how to use HTTP with guides and tutorials.</source>
          <target state="translated">Узнайте,как использовать HTTP с руководствами и учебниками.</target>
        </trans-unit>
        <trans-unit id="14b20b4a9f9427cb013c488330c0a01cc370bf8c" translate="yes" xml:space="preserve">
          <source>Legacy image formats</source>
          <target state="translated">Форматы изображений старого образца</target>
        </trans-unit>
        <trans-unit id="55585bc793f35049b20c241f9615d3aad00963a1" translate="yes" xml:space="preserve">
          <source>Legislation or regulations that cover the use of cookies include:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="657da249aededaf980a2d1ed290fee63a37d340e" translate="yes" xml:space="preserve">
          <source>Length limitations</source>
          <target state="translated">Ограничения по длине</target>
        </trans-unit>
        <trans-unit id="abe8b1855b255aecb73e65c60887adb2dd17eb4f" translate="yes" xml:space="preserve">
          <source>Length limited to 4096 bytes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5084aa81ee35e345974545e25d8c6c32ab615e45" translate="yes" xml:space="preserve">
          <source>Let us look at what the browser will send to the server in this case, and let's see how the server responds:</source>
          <target state="translated">Давайте посмотрим,что браузер отправит на сервер в этом случае,и посмотрим,как сервер ответит:</target>
        </trans-unit>
        <trans-unit id="fa210c261a8eda6a3085253bdfc33931dfb0a50f" translate="yes" xml:space="preserve">
          <source>Let's consider a page located at &lt;code&gt;&lt;a href=&quot;http://example.com/signup.html&quot;&gt;http://example.com/signup.html&lt;/a&gt;&lt;/code&gt;. It uses the following policy, disallowing everything but stylesheets from &lt;code&gt;cdn.example.com&lt;/code&gt;.</source>
          <target state="translated">Рассмотрим страницу, расположенную по адресу &lt;code&gt;&lt;a href=&quot;http://example.com/signup.html&quot;&gt;http://example.com/signup.html&lt;/a&gt;&lt;/code&gt; . Он использует следующую политику, запрещающую все, кроме таблиц стилей с &lt;code&gt;cdn.example.com&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="152516c7d9cfd6fae5d3a79c8e35a362dbc55ac2" translate="yes" xml:space="preserve">
          <source>Let's consider a page located at &lt;code&gt;http://example.com/signup.html&lt;/code&gt;. It uses the following policy, disallowing everything but stylesheets from &lt;code&gt;cdn.example.com&lt;/code&gt;.</source>
          <target state="translated">Рассмотрим страницу, расположенную по адресу &lt;code&gt;http://example.com/signup.html&lt;/code&gt; . Он использует следующую политику, запрещающую все, кроме таблиц стилей с &lt;code&gt;cdn.example.com&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="adad50c91bb6c2e681c25e53578bd93aba54f1ba" translate="yes" xml:space="preserve">
          <source>Let's look at an example of a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/preflight_request&quot;&gt;preflight request&lt;/a&gt; involving &lt;code&gt;Access-Control-Allow-Headers&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="442acc84011b22aa128b910d7dd61aeabb2c24b6" translate="yes" xml:space="preserve">
          <source>Let's look at an example of a preflight request involving &lt;code&gt;Access-Control-Allow-Headers&lt;/code&gt;.</source>
          <target state="translated">Давайте посмотрим на пример предполетного запроса с участием &lt;code&gt;Access-Control-Allow-Headers&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a6f2cc4219a3b1353640b6f36885fb2d82681621" translate="yes" xml:space="preserve">
          <source>Let's look at the full exchange between client and server. The first exchange is the &lt;em&gt;preflight request/response&lt;/em&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e42d1be5f2d0916b7b05c410c632eba10326aa68" translate="yes" xml:space="preserve">
          <source>Let's look at what the browser will send to the server in this case, and let's see how the server responds:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="928b6441798d4590009f5cc1febcd4f4cc9b6912" translate="yes" xml:space="preserve">
          <source>Let's say a site's API can return data in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/JSON&quot;&gt;JSON&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/XML&quot;&gt;XML&lt;/a&gt;, or &lt;a href=&quot;https://en.wikipedia.org/wiki/Comma-separated_values&quot;&gt;CSV&lt;/a&gt; formats. If the URL for a particular document is at &lt;code&gt;https://example.com/documents/foo&lt;/code&gt;, the site could return different URLs for &lt;code&gt;Content-Location&lt;/code&gt; depending on the request's &lt;a href=&quot;accept&quot;&gt;&lt;code&gt;Accept&lt;/code&gt;&lt;/a&gt; header:</source>
          <target state="translated">Допустим, API сайта может возвращать данные в форматах &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/JSON&quot;&gt;JSON&lt;/a&gt; , &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/XML&quot;&gt;XML&lt;/a&gt; или &lt;a href=&quot;https://en.wikipedia.org/wiki/Comma-separated_values&quot;&gt;CSV&lt;/a&gt; . Если URL-адрес определенного документа находится по адресу &lt;code&gt;https://example.com/documents/foo&lt;/code&gt; , сайт может возвращать разные URL-адреса для &lt;code&gt;Content-Location&lt;/code&gt; в зависимости от заголовка &lt;a href=&quot;accept&quot;&gt; &lt;code&gt;Accept&lt;/code&gt; &lt;/a&gt; запроса:</target>
        </trans-unit>
        <trans-unit id="a649ee77f17b9ff4d60ac31c6bda763b09061da1" translate="yes" xml:space="preserve">
          <source>Let's take a look at the full exchange between client and server. The first exchange is the &lt;em&gt;preflight request/response&lt;/em&gt;:</source>
          <target state="translated">Давайте посмотрим на полный обмен между клиентом и сервером. Первый обмен - это &lt;em&gt;предполетный запрос / ответ&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="e07eff52aa81cb70622273914da9f4d944a0a8a8" translate="yes" xml:space="preserve">
          <source>Lets the resource navigate the top-level browsing context, but only if initiated by a user gesture.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e749390204ffe84807c0bf8aa779eaba96be86a5" translate="yes" xml:space="preserve">
          <source>Lets the resource request access to the parent's storage capabilities with the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Storage_Access_API&quot;&gt;Storage Access API&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="095cbdfe7047e224c585adc3fd8460ae3e349338" translate="yes" xml:space="preserve">
          <source>Library and net tool UA strings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76d8e88746aed29c5732084d86f85c42f51868b5" translate="yes" xml:space="preserve">
          <source>Licensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.</source>
          <target state="translated">Лицензия Creative Commons Attribution-ShareAlike License v2.5 или более поздняя.</target>
        </trans-unit>
        <trans-unit id="8a762e028503c19597a52f977263fd61a8df56e0" translate="yes" xml:space="preserve">
          <source>Lighttpd</source>
          <target state="translated">Lighttpd</target>
        </trans-unit>
        <trans-unit id="9f3f4cf072da64f11ef4837f26d8ed4cef440ef9" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;must-revalidate&lt;/code&gt;, but only for shared caches (e.g., proxies). Ignored by private caches.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b82d716bd3bf87fe044e3e34804e6da8259e4d37" translate="yes" xml:space="preserve">
          <source>Like HTML redirections, this can't work on all resources, and obviously, this will only work on clients that execute JavaScript. On the other hand, there are more possibilities: for example, you can trigger the redirect only if some conditions are met.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db10ddafdbaf44fe84055e66ecf49ecd6e6f7755" translate="yes" xml:space="preserve">
          <source>Like HTML redirections, this can't work on all resources, and obviously, this will only work on clients that execute JavaScript. On the other side, there are more possibilities as you can trigger the redirection only if some conditions are met, for example.</source>
          <target state="translated">Как и HTML перенаправления,это не может работать на всех ресурсах,и очевидно,что это будет работать только на тех клиентах,которые выполняют JavaScript.С другой стороны,возможностей больше,так как вы можете вызвать перенаправление только при выполнении некоторых условий,например.</target>
        </trans-unit>
        <trans-unit id="70be75ce577f3ebafccca55b5df13ee8aef2157c" translate="yes" xml:space="preserve">
          <source>Like any generic data transfer protocol, HTTP cannot regulate the
   content of the data that is transferred, nor is there any a priori
   method of determining the sensitivity of any particular piece of
   information within the context of any given request. Therefore,
   applications SHOULD supply as much control over this information as
   possible to the provider of that information. Four header fields are
   worth special mention in this context: Server, Via, Referer and From.

   Revealing the specific software version of the server might allow the
   server machine to become more vulnerable to attacks against software
   that is known to contain security holes. Implementors SHOULD make the
   Server header field a configurable option.

   Proxies which serve as a portal through a network firewall SHOULD
   take special precautions regarding the transfer of header information
   that identifies the hosts behind the firewall. In particular, they
   SHOULD remove, or replace with sanitized versions, any Via fields
   generated behind the firewall.

   The Referer header allows reading patterns to be studied and reverse
   links drawn. Although it can be very useful, its power can be abused
   if user details are not separated from the information contained in 

   the Referer. Even when the personal information has been removed, the
   Referer header might indicate a private document's URI whose
   publication would be inappropriate.

   The information sent in the From field might conflict with the user's
   privacy interests or their site's security policy, and hence it
   SHOULD NOT be transmitted without the user being able to disable,
   enable, and modify the contents of the field. The user MUST be able
   to set the contents of this field within a user preference or
   application defaults configuration.

   We suggest, though do not require, that a convenient toggle interface
   be provided for the user to enable or disable the sending of From and
   Referer information.

   The User-Agent (&lt;a href=&quot;#section-14.43&quot;&gt;section 14.43&lt;/a&gt;) or Server (&lt;a href=&quot;#section-14.38&quot;&gt;section 14.38&lt;/a&gt;) header
   fields can sometimes be used to determine that a specific client or
   server have a particular security hole which might be exploited.
   Unfortunately, this same information is often used for other valuable
   purposes for which HTTP currently has no better mechanism.</source>
          <target state="translated">Как и любой общий протокол передачи данных, HTTP не может регулировать содержимое передаваемых данных, и нет никакого априорного метода определения чувствительности какой-либо конкретной части информации в контексте любого данного запроса. Следовательно, приложения ДОЛЖНЫ предоставлять как можно больший контроль над этой информацией поставщику этой информации. В этом контексте заслуживают особого упоминания четыре поля заголовка: Server, Via, Referer и From. Выявление конкретной версии программного обеспечения сервера может сделать серверный компьютер более уязвимым для атак на программное обеспечение, которое, как известно, содержит дыры в безопасности. Разработчикам СЛЕДУЕТ сделать поле заголовка сервера настраиваемой опцией.Прокси-серверы, которые служат порталом через сетевой брандмауэр, ДОЛЖНЫ принимать особые меры предосторожности в отношении передачи информации заголовка, которая идентифицирует хосты за брандмауэром. В частности, они ДОЛЖНЫ удалить или заменить очищенными версиями любые поля Via, созданные за брандмауэром. Заголовок Referer позволяет изучать шаблоны чтения и рисовать обратные ссылки. Хотя он может быть очень полезным, его мощью можно злоупотребить, если данные пользователя не отделены от информации, содержащейся в Referer. Даже когда личная информация была удалена, заголовок Referer может указывать на URI частного документа, публикация которого была бы неприемлемой. Информация, отправляемая в поле От, может противоречить интересам конфиденциальности пользователя или политике безопасности их сайта.и, следовательно, его НЕ СЛЕДУЕТ передавать без возможности отключения, включения и изменения содержимого поля пользователем. Пользователь ДОЛЖЕН иметь возможность устанавливать содержимое этого поля в рамках пользовательских предпочтений или настроек приложения по умолчанию. Мы предлагаем, хотя и не требуем, чтобы пользователю был предоставлен удобный интерфейс переключения для включения или отключения отправки информации From и Referer. Пользователь-агент (чтобы пользователю был предоставлен удобный интерфейс переключения для включения или отключения отправки информации From и Referer. Пользователь-агент (чтобы пользователю был предоставлен удобный интерфейс переключения для включения или отключения отправки информации From и Referer. Пользователь-агент (&lt;a href=&quot;#section-14.43&quot;&gt;раздел 14.43&lt;/a&gt; ) или поля заголовка Server ( &lt;a href=&quot;#section-14.38&quot;&gt;раздел 14.38&lt;/a&gt; ) иногда можно использовать для определения того, что конкретный клиент или сервер имеет определенную дыру в безопасности, которая может быть использована. К сожалению, эта же информация часто используется для других ценных целей, для которых в настоящее время HTTP не имеет лучшего механизма.</target>
        </trans-unit>
        <trans-unit id="de09479df824aa67e637b0690aa7154dd273d917" translate="yes" xml:space="preserve">
          <source>Like images, HTML doesn't define supported types for the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio&quot;&gt;&lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt;&lt;/a&gt; and&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; elements, so only some can be used on the Web. &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Supported_media_formats&quot;&gt;Media formats supported by the HTML audio and video elements&lt;/a&gt; explains both the codecs and container formats which can be used.</source>
          <target state="translated">Как и изображения, HTML не определяет поддерживаемые типы для элементов &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio&quot;&gt; &lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt; &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; &lt;/a&gt; , поэтому только некоторые из них могут использоваться в Интернете. &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Supported_media_formats&quot;&gt;Мультимедийные форматы, поддерживаемые элементами аудио и видео HTML,&lt;/a&gt; объясняют как кодеки, так и форматы контейнеров, которые можно использовать.</target>
        </trans-unit>
        <trans-unit id="b17f9b3a3f5f94964505eae8dc076c8167b437f2" translate="yes" xml:space="preserve">
          <source>Like in all cases, these strings may change in the future, one should use them only in conjunction with the detection of already released browsers. A technological survey must be in place to adapt the script when new browser versions are coming out.</source>
          <target state="translated">Как и во всех случаях,эти строки могут измениться в будущем,их следует использовать только в связи с обнаружением уже выпущенных браузеров.При выходе новых версий браузеров необходимо провести технологическое исследование для адаптации скрипта.</target>
        </trans-unit>
        <trans-unit id="c3f7813f6513530fae5d20c357e1018dfbdab752" translate="yes" xml:space="preserve">
          <source>Like the compress program, which has disappeared from most UNIX distributions, this content-encoding is used by almost no browsers today, partly because of a patent issue (which expired in 2003).</source>
          <target state="translated">Как и программа compress,которая исчезла из большинства дистрибутивов UNIX,это кодирование контента сегодня почти не используется ни одним браузером,отчасти из-за проблемы с патентом (срок действия которого истек в 2003 году).</target>
        </trans-unit>
        <trans-unit id="c924aeab714bffe66c4c22bc5d8bd00099533380" translate="yes" xml:space="preserve">
          <source>Limiting the possible &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; values to a set of allowed origins requires code on the server side to check the value of the &lt;a href=&quot;origin&quot;&gt;&lt;code&gt;Origin&lt;/code&gt;&lt;/a&gt; request header, compare that to a list of allowed origins, and then if the &lt;a href=&quot;origin&quot;&gt;&lt;code&gt;Origin&lt;/code&gt;&lt;/a&gt; value is in the list, to set the &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; value to the same value as the &lt;a href=&quot;origin&quot;&gt;&lt;code&gt;Origin&lt;/code&gt;&lt;/a&gt; value.</source>
          <target state="translated">Для ограничения возможных значений &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; набором разрешенных источников требуется код на стороне сервера для проверки значения заголовка запроса &lt;a href=&quot;origin&quot;&gt; &lt;code&gt;Origin&lt;/code&gt; &lt;/a&gt; , сравнения его со списком разрешенных источников, а затем, если значение &lt;a href=&quot;origin&quot;&gt; &lt;code&gt;Origin&lt;/code&gt; &lt;/a&gt; находится в список, чтобы установить значение &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; на то же значение, что и значение &lt;a href=&quot;origin&quot;&gt; &lt;code&gt;Origin&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a118fb8cb53f5dd1fc14f29be01804384762f7e9" translate="yes" xml:space="preserve">
          <source>Line 7 shows the flag on &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest&quot;&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;&lt;/a&gt; that has to be set in order to make the invocation with Cookies, namely the &lt;code&gt;withCredentials&lt;/code&gt; boolean value. By default, the invocation is made without Cookies. Since this is a simple &lt;code&gt;GET&lt;/code&gt; request, it is not preflighted, but the browser will &lt;strong&gt;reject&lt;/strong&gt; any response that does not have the &lt;a href=&quot;headers/access-control-allow-credentials&quot;&gt;&lt;code&gt;Access-Control-Allow-Credentials&lt;/code&gt;&lt;/a&gt;&lt;code&gt;: true&lt;/code&gt; header, and &lt;strong&gt;not&lt;/strong&gt; make the response available to the invoking web content.</source>
          <target state="translated">В строке 7 показан флаг &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest&quot;&gt; &lt;code&gt;XMLHttpRequest&lt;/code&gt; ,&lt;/a&gt; который должен быть установлен для вызова с помощью файлов cookie, а именно логическое значение &lt;code&gt;withCredentials&lt;/code&gt; . По умолчанию вызов осуществляется без файлов cookie. Поскольку это простой &lt;code&gt;GET&lt;/code&gt; , он не запускается заранее, но браузер &lt;strong&gt;отклоняет&lt;/strong&gt; любой ответ, не имеющий заголовка &lt;a href=&quot;headers/access-control-allow-credentials&quot;&gt; &lt;code&gt;Access-Control-Allow-Credentials&lt;/code&gt; &lt;/a&gt; &lt;code&gt;: true&lt;/code&gt; , и &lt;strong&gt;не&lt;/strong&gt; делает ответ доступным для вызывающего веб-контента.</target>
        </trans-unit>
        <trans-unit id="afff9baac3ee3d5a86ba3d479a5d4eb896a2ee71" translate="yes" xml:space="preserve">
          <source>Lines 1 - 10 above represent the preflight request with the &lt;a href=&quot;methods/options&quot;&gt;&lt;code&gt;OPTIONS&lt;/code&gt;&lt;/a&gt; method. The browser determines that it needs to send this based on the request parameters that the JavaScript code snippet above was using, so that the server can respond whether it is acceptable to send the request with the actual request parameters. OPTIONS is an HTTP/1.1 method that is used to determine further information from servers, and is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/safe&quot;&gt;safe&lt;/a&gt; method, meaning that it can't be used to change the resource. Note that along with the OPTIONS request, two other request headers are sent (lines 9 and 10 respectively):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e4ad5eac403df09e0c0c7d48c364588c499b639" translate="yes" xml:space="preserve">
          <source>Lines 1 - 10 are headers sent. The main HTTP request header of note here is the &lt;a href=&quot;headers/origin&quot;&gt;&lt;code&gt;Origin&lt;/code&gt;&lt;/a&gt; header on line 10 above, which shows that the invocation is coming from content on the domain &lt;code&gt;http://foo.example&lt;/code&gt;.</source>
          <target state="translated">Строки 1-10 - это отправленные заголовки. Обратите внимание, что основной заголовок HTTP-запроса - это заголовок &lt;a href=&quot;headers/origin&quot;&gt; &lt;code&gt;Origin&lt;/code&gt; &lt;/a&gt; в строке 10 выше, который показывает, что вызов исходит из содержимого в домене &lt;code&gt;http://foo.example&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a288b2c5ce1d7dc2f4906f2097cd01bf3ad43ed7" translate="yes" xml:space="preserve">
          <source>Lines 1 - 12 above represent the preflight request with the &lt;a href=&quot;methods/options&quot;&gt;&lt;code&gt;OPTIONS&lt;/code&gt;&lt;/a&gt; method. The browser determines that it needs to send this based on the request parameters that the JavaScript code snippet above was using, so that the server can respond whether it is acceptable to send the request with the actual request parameters. OPTIONS is an HTTP/1.1 method that is used to determine further information from servers, and is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/safe&quot;&gt;safe&lt;/a&gt; method, meaning that it can't be used to change the resource. Note that along with the OPTIONS request, two other request headers are sent (lines 10 and 11 respectively):</source>
          <target state="translated">Строки 1&amp;ndash;12 выше представляют запрос предварительной &lt;a href=&quot;methods/options&quot;&gt; &lt;code&gt;OPTIONS&lt;/code&gt; &lt;/a&gt; методом OPTIONS . Браузер определяет, что ему необходимо отправить это, на основе параметров запроса, которые использовались в приведенном выше фрагменте кода JavaScript, чтобы сервер мог ответить, допустимо ли отправлять запрос с фактическими параметрами запроса. OPTIONS - это метод HTTP / 1.1, который используется для определения дополнительной информации с серверов и является &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/safe&quot;&gt;безопасным&lt;/a&gt; методом, то есть его нельзя использовать для изменения ресурса. Обратите внимание, что вместе с запросом OPTIONS отправляются два других заголовка запроса (строки 10 и 11 соответственно):</target>
        </trans-unit>
        <trans-unit id="755ba040dbf11df7afee309c945c9ca76a93a22e" translate="yes" xml:space="preserve">
          <source>Lines 13 - 22 above are the response that the server sends back, which indicate that the request method (&lt;code&gt;POST&lt;/code&gt;) and request headers (&lt;code&gt;X-PINGOTHER&lt;/code&gt;) are acceptable. In particular, let's look at lines 16-19:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="656e5cef78d93570c111bd1f498ea5a75f7e0f4b" translate="yes" xml:space="preserve">
          <source>Lines 13 - 22 show the HTTP response from the server on domain &lt;code&gt;http://bar.other&lt;/code&gt;. In response, the server sends back an &lt;a href=&quot;headers/access-control-allow-origin&quot;&gt;&lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt;&lt;/a&gt; header, shown above in line 16. The use of the &lt;a href=&quot;headers/origin&quot;&gt;&lt;code&gt;Origin&lt;/code&gt;&lt;/a&gt; header and of &lt;a href=&quot;headers/access-control-allow-origin&quot;&gt;&lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt;&lt;/a&gt; show the access control protocol in its simplest use. In this case, the server responds with a &lt;code&gt;Access-Control-Allow-Origin: *&lt;/code&gt; which means that the resource can be accessed by &lt;strong&gt;any&lt;/strong&gt; domain in a cross-site manner. If the resource owners at &lt;code&gt;http://bar.other&lt;/code&gt; wished to restrict access to the resource to requests only from &lt;code&gt;http://foo.example&lt;/code&gt;, they would send back:</source>
          <target state="translated">В строках &lt;code&gt;http://bar.other&lt;/code&gt; показан ответ HTTP от сервера в домене http: //bar.other . В ответ сервер отправляет обратно заголовок &lt;a href=&quot;headers/access-control-allow-origin&quot;&gt; &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; &lt;/a&gt; , показанный выше в строке 16. Использование заголовка &lt;a href=&quot;headers/origin&quot;&gt; &lt;code&gt;Origin&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;headers/access-control-allow-origin&quot;&gt; &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; &lt;/a&gt; показывает протокол управления доступом в его простейшем использовании. В этом случае сервер отвечает &lt;code&gt;Access-Control-Allow-Origin: *&lt;/code&gt; что означает, что к ресурсу может получить доступ &lt;strong&gt;любой&lt;/strong&gt; домен в межсайтовой манере. Если владельцы ресурса &lt;code&gt;http://bar.other&lt;/code&gt; захотят ограничить доступ к ресурсу только для запросов от &lt;code&gt;http://foo.example&lt;/code&gt; , они отправят обратно:</target>
        </trans-unit>
        <trans-unit id="0936ed44f0ff243a8948b7ff1f3424ae3dd946dd" translate="yes" xml:space="preserve">
          <source>Lines 14 - 26 above are the response that the server sends back indicating that the request method (&lt;code&gt;POST&lt;/code&gt;) and request headers (&lt;code&gt;X-PINGOTHER&lt;/code&gt;) are acceptable. In particular, let's look at lines 17-20:</source>
          <target state="translated">Строки &lt;code&gt;X-PINGOTHER&lt;/code&gt; выше представляют собой ответ, который сервер отправляет обратно, указывая, что метод запроса ( &lt;code&gt;POST&lt;/code&gt; ) и заголовки запроса ( X-PINGOTHER ) приемлемы. В частности, давайте посмотрим на строки 17-20:</target>
        </trans-unit>
        <trans-unit id="d0517071aa376e797705058bbad4b658954b9930" translate="yes" xml:space="preserve">
          <source>Link</source>
          <target state="translated">Link</target>
        </trans-unit>
        <trans-unit id="aa65b658f4f7a0604beb1fd4219975007f50e35a" translate="yes" xml:space="preserve">
          <source>Linked Data Platform 1.0, Section 7.1: The Accept-Post Response Header</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82027c0f9c7057e65bf210d13353910e8d71c0f4" translate="yes" xml:space="preserve">
          <source>Links generated code to a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Tools/Debugger/How_to/Use_a_source_map&quot;&gt;source map&lt;/a&gt;.</source>
          <target state="translated">Связывает сгенерированный код с &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Tools/Debugger/How_to/Use_a_source_map&quot;&gt;исходной картой&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="83ad8510bbd3f22363d068e1c96f82fd0fcccd31" translate="yes" xml:space="preserve">
          <source>Linux</source>
          <target state="translated">Linux</target>
        </trans-unit>
        <trans-unit id="319f6b56be87378e2eef2436fa7e744a9edd1729" translate="yes" xml:space="preserve">
          <source>Linux desktop on i686 CPU</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e761763f3a77622bf4eba6f67716c21b35193a4" translate="yes" xml:space="preserve">
          <source>Linux desktop on x86_64 CPU</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="549589564fb88551ce209cf08bbdd821d0b56959" translate="yes" xml:space="preserve">
          <source>Linux desktop, i686</source>
          <target state="translated">рабочий стол Linux,i686</target>
        </trans-unit>
        <trans-unit id="2c1006c548ffce988561b572ae63ee4b2e4e044d" translate="yes" xml:space="preserve">
          <source>Linux desktop, i686 running on x86_64</source>
          <target state="translated">Linux desktop,i686 на x86_64</target>
        </trans-unit>
        <trans-unit id="7162da293f4c110abd9006ea0fe9502688b6d134" translate="yes" xml:space="preserve">
          <source>Linux desktop, x86_64</source>
          <target state="translated">рабочий стол Linux,x86_64</target>
        </trans-unit>
        <trans-unit id="ceb42a6047d0fbee0d6dbc845c8b0bf73fb0ee1b" translate="yes" xml:space="preserve">
          <source>Linux is a more diverse platform. A few common examples are given below.</source>
          <target state="translated">Linux является более разнообразной платформой.Несколько распространенных примеров приведены ниже.</target>
        </trans-unit>
        <trans-unit id="d420ef77bdfa54732d5aecb6c40af8088cd0093b" translate="yes" xml:space="preserve">
          <source>Linux is a more diverse platform. Your distribution of Linux might include an extension that changes your user-agent. A few common examples are given below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="065f1e3b7da760e47bd326f001407c11b87dca01" translate="yes" xml:space="preserve">
          <source>Linux version</source>
          <target state="translated">версия Linux</target>
        </trans-unit>
        <trans-unit id="f35d685de7aa50ed56af00a2c8d048a65fb3313a" translate="yes" xml:space="preserve">
          <source>List of HTTP status codes on Wikipedia</source>
          <target state="translated">Список кодов статуса HTTP в Википедии</target>
        </trans-unit>
        <trans-unit id="c7facdad0c38a8be559aae543266310890041f74" translate="yes" xml:space="preserve">
          <source>Lists the set of HTTP request methods support by a resource.</source>
          <target state="translated">Перечисляет набор методов HTTP-запроса,поддерживаемых ресурсом.</target>
        </trans-unit>
        <trans-unit id="bf846e5d6a49925e3756fb19a1fc2ca1fb129084" translate="yes" xml:space="preserve">
          <source>Lists the set of HTTP request methods supported by a resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59afca4aa349dcb2585efb358d932b086d06c52a" translate="yes" xml:space="preserve">
          <source>Live properties described in this document SHOULD be moved along with
   the resource, such that the resource has identically behaving live
   properties at the destination resource, but not necessarily with the
   same values.  Note that some live properties are defined such that
   the absence of the property has a specific meaning (e.g., a flag with
   one meaning if present, and the opposite if absent), and in these
   cases, a successful MOVE might result in the property being reported
   as &quot;Not Found&quot; in subsequent requests.  If the live properties will
   not work the same way at the destination, the server MAY fail the
   request.

   MOVE is frequently used by clients to rename a file without changing
   its parent collection, so it's not appropriate to reset all live
   properties that are set at resource creation.  For example, the DAV:
   creationdate property value SHOULD remain the same after a MOVE.

   Dead properties MUST be moved along with the resource.</source>
          <target state="translated">Живые свойства,описанные в этом документе ДОЛЖНЫ быть перемещены вместе с ресурсом так,чтобы ресурс имел одинаковое поведение живых свойств на целевом ресурсе,но не обязательно с одинаковыми значениями.Обратите внимание,что некоторые &quot;живые&quot; свойства определяются таким образом,что отсутствие свойства имеет определенное значение (например,флаг с одним значением,если присутствует,и обратное,если отсутствует),и в этих случаях успешное MOVE может привести к тому,что в последующих запросах свойство будет сообщено как &quot;Не найдено&quot;.Если живые свойства не будут работать одинаково в месте назначения,сервер MAY провалит запрос.MOVE часто используется клиентами для переименования файла без изменения его родительской коллекции,поэтому сбрасывать все live-свойства,установленные при создании ресурса,нецелесообразно.Например,значение свойства DAV:creationdate SHOULD остается неизменным после MOVE.Мертвые свойства ДОЛЖНЫ быть перемещены вместе с ресурсом.</target>
        </trans-unit>
        <trans-unit id="d81b072a609cb829f45333cb83e086a659ba9738" translate="yes" xml:space="preserve">
          <source>Living Standard</source>
          <target state="translated">Уровень жизни</target>
        </trans-unit>
        <trans-unit id="6a7b5bd9c1e9247bb26bc70611e9ed0c08ee1e45" translate="yes" xml:space="preserve">
          <source>Load balancing/routing based on URL patterns</source>
          <target state="translated">Балансировка/маршрутизация нагрузки на основе шаблонов URL-адресов</target>
        </trans-unit>
        <trans-unit id="2bf154fc59dbac071e95bfd447b96ee4cb26055c" translate="yes" xml:space="preserve">
          <source>Load balancing: distribute the load to several web servers,</source>
          <target state="translated">Балансировка нагрузки:распределение нагрузки на несколько веб-серверов,</target>
        </trans-unit>
        <trans-unit id="780b9308173b538a799446bb3515d17b56539241" translate="yes" xml:space="preserve">
          <source>Local File Security in Firefox 68</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d219c68101f532de10add2cf42fb9dbeca73d3be" translate="yes" xml:space="preserve">
          <source>Location</source>
          <target state="translated">Location</target>
        </trans-unit>
        <trans-unit id="a65e984205ab4c0ed633ba5ae6a32d6c797cec2d" translate="yes" xml:space="preserve">
          <source>Location (RFC 2616)</source>
          <target state="translated">Аренда (RFC 2616)</target>
        </trans-unit>
        <trans-unit id="a192553dfc610dd4624b27cebff4825c0c7e9331" translate="yes" xml:space="preserve">
          <source>Location (RFC 7231)</source>
          <target state="translated">Аренда (RFC 7231)</target>
        </trans-unit>
        <trans-unit id="c6e7ecfb5bf0d5af9da443ea9b5d77cb9bee2bce" translate="yes" xml:space="preserve">
          <source>Lock-Token = &quot;Lock-Token&quot; &quot;:&quot; Coded-URL

   The Lock-Token request header is used with the UNLOCK method to
   identify the lock to be removed.  The lock token in the Lock-Token
   request header MUST identify a lock that contains the resource
   identified by Request-URI as a member.

   The Lock-Token response header is used with the LOCK method to
   indicate the lock token created as a result of a successful LOCK
   request to create a new lock.</source>
          <target state="translated">Lock-Token=&quot;Lock-Token&quot; &quot;:&quot; Кодируется-URL Заголовок запроса Lock-Token используется методом UNLOCK для идентификации снимаемого замка.Токен блокировки в заголовке запроса Lock-Token ДОЛЖЕН идентифицировать блокировку,содержащую ресурс,идентифицируемый Request-URI в качестве члена.Заголовок ответа Lock-Token используется вместе с методом LOCK для идентификации маркера блокировки,созданного в результате успешного запроса LOCK на создание новой блокировки.</target>
        </trans-unit>
        <trans-unit id="55430a651698b7d81aef1e04d11d9a2d806ddbab" translate="yes" xml:space="preserve">
          <source>Logging utility</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a4b53727bcb9a035c59d80c57451cf3de2a5c3e" translate="yes" xml:space="preserve">
          <source>Logins, shopping carts, game scores, or anything else the server should remember</source>
          <target state="translated">Логины,тележки,игровые очки,или что-нибудь еще сервер должен помнить</target>
        </trans-unit>
        <trans-unit id="bf49284c6e80b1a37a4cb9aa4fa17eb56ebba27b" translate="yes" xml:space="preserve">
          <source>Look, or ask, in specialized forums: you're unlikely to be the first to hit this problem. Also, experts, or simply people with another point of view, can give you ideas for working around the bug. If the problem seems uncommon, it's worth checking if this bug has been reported to the browser vendor via their bug tracking system (&lt;a href=&quot;https://bugzilla.mozilla.org&quot;&gt;Mozilla&lt;/a&gt;; &lt;a href=&quot;http://bugs.webkit.org&quot;&gt;WebKit&lt;/a&gt;; &lt;a href=&quot;https://www.chromium.org/issue-tracking&quot;&gt;Blink&lt;/a&gt;; &lt;a href=&quot;https://bugs.opera.com/&quot;&gt;Opera&lt;/a&gt;). Browser makers do pay attention to bug reports, and the analysis may hint about other workarounds for the bug.</source>
          <target state="translated">Посмотрите или спросите на специализированных форумах: вряд ли вы первый столкнетесь с этой проблемой. Кроме того, эксперты или просто люди, придерживающиеся другой точки зрения, могут подсказать вам, как можно обойти ошибку. Если проблема кажется необычной, стоит проверить, было ли сообщено об этой ошибке поставщику браузера через их систему отслеживания ошибок ( &lt;a href=&quot;https://bugzilla.mozilla.org&quot;&gt;Mozilla&lt;/a&gt; ; &lt;a href=&quot;http://bugs.webkit.org&quot;&gt;WebKit&lt;/a&gt; ; &lt;a href=&quot;https://www.chromium.org/issue-tracking&quot;&gt;Blink&lt;/a&gt; ; &lt;a href=&quot;https://bugs.opera.com/&quot;&gt;Opera&lt;/a&gt; ). Создатели браузеров обращают внимание на отчеты об ошибках, и анализ может намекнуть о других способах решения этой ошибки.</target>
        </trans-unit>
        <trans-unit id="682f96fa9b4131718e0aecf2b0551b2c7792bb34" translate="yes" xml:space="preserve">
          <source>Look, or ask, in specialized forums: you're unlikely to be the first to hit this problem. Also, experts, or simply people with another point of view, can give you ideas for working around the bug. If the problem seems uncommon, it's worth checking if this bug has been reported to the browser vendor via their bug tracking system (&lt;a href=&quot;https://bugzilla.mozilla.org&quot;&gt;Mozilla&lt;/a&gt;; &lt;a href=&quot;https://bugs.webkit.org&quot;&gt;WebKit&lt;/a&gt;; &lt;a href=&quot;https://www.chromium.org/issue-tracking&quot;&gt;Blink&lt;/a&gt;; &lt;a href=&quot;https://bugs.opera.com/&quot;&gt;Opera&lt;/a&gt;). Browser makers do pay attention to bug reports, and the analysis may hint about other workarounds for the bug.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6909ecb298632f0b40975bb7028079f6f4501940" translate="yes" xml:space="preserve">
          <source>Lossy compression algorithms are usually more efficient than loss-less ones.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43ddda7cc2412992344e22fd844143dbcfe3bfc3" translate="yes" xml:space="preserve">
          <source>Lossy compression algorithms are usually more efficient that loss-less ones.</source>
          <target state="translated">Алгоритмы сжатия с потерями обычно более эффективны,чем без потерь.</target>
        </trans-unit>
        <trans-unit id="ac2665911917ab5f698cf6ff5ed62343c6057a6a" translate="yes" xml:space="preserve">
          <source>MIME Type</source>
          <target state="translated">MIME-тип</target>
        </trans-unit>
        <trans-unit id="403274b7a1852e5261e595fa61397d41178bdb18" translate="yes" xml:space="preserve">
          <source>MIME Types</source>
          <target state="translated">MIME-типы</target>
        </trans-unit>
        <trans-unit id="8e48cee9b67b50e883f2ce1444b5166e76e1cf17" translate="yes" xml:space="preserve">
          <source>MIME does not include any concept equivalent to HTTP/1.1's
   Content-Encoding header field.  Since this acts as a modifier on the
   media type, proxies and gateways from HTTP to MIME-compliant
   protocols ought to either change the value of the Content-Type header
   field or decode the representation before forwarding the message.
   (Some experimental applications of Content-Type for Internet mail
   have used a media-type parameter of &quot;;conversions=&amp;lt;content-coding&amp;gt;&quot;
   to perform a function equivalent to Content-Encoding.  However, this
   parameter is not part of the MIME standards).</source>
          <target state="translated">MIME не включает никакой концепции, эквивалентной полю заголовка HTTP / 1.1 Content-Encoding. Поскольку это действует как модификатор для типа носителя, прокси-серверы и шлюзы из HTTP в протоколы, совместимые с MIME, должны либо изменить значение поля заголовка Content-Type, либо декодировать представление перед пересылкой сообщения. (Некоторые экспериментальные приложения Content-Type для интернет-почты использовали параметр медиа-типа &quot;; conversions = &amp;lt;content-coding&amp;gt;&quot; для выполнения функции, эквивалентной Content-Encoding. Однако этот параметр не является частью стандартов MIME. ).</target>
        </trans-unit>
        <trans-unit id="969c21cbc7a0aaa20e68f4d797544fee58a73005" translate="yes" xml:space="preserve">
          <source>MIME media types define what kind of document a specific resource is. This article presents both the syntax and the most useful MIME types for use on the Web.</source>
          <target state="translated">MIME-типы носителей определяют тип документа,который является конкретным ресурсом.В этой статье представлен как синтаксис,так и наиболее полезные MIME типы для использования в Web.</target>
        </trans-unit>
        <trans-unit id="6bd9c9b5a57f317bcf5534bd7d83b023a8ee7df7" translate="yes" xml:space="preserve">
          <source>MIME provides for a number of &quot;multipart&quot; types -- encapsulations of
   one or more entities within a single message-body. All multipart
   types share a common syntax, as defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc2046#section-5.1.1&quot;&gt;section&amp;nbsp;5.1.1 of RFC 2046&lt;/a&gt; 

   [&lt;a href=&quot;#ref-40&quot;&gt;40&lt;/a&gt;], and MUST include a boundary parameter as part of the media type
   value. The message body is itself a protocol element and MUST
   therefore use only CRLF to represent line breaks between body-parts.
   Unlike in &lt;a href=&quot;https://tools.ietf.org/html/rfc2046&quot;&gt;RFC 2046&lt;/a&gt;, the epilogue of any multipart message MUST be
   empty; HTTP applications MUST NOT transmit the epilogue (even if the
   original multipart contains an epilogue). These restrictions exist in
   order to preserve the self-delimiting nature of a multipart message-
   body, wherein the &quot;end&quot; of the message-body is indicated by the
   ending multipart boundary.

   In general, HTTP treats a multipart message-body no differently than
   any other media type: strictly as payload. The one exception is the
   &quot;multipart/byteranges&quot; type (appendix 19.2) when it appears in a 206
   (Partial Content) response, which will be interpreted by some HTTP
   caching mechanisms as described in sections &lt;a href=&quot;#section-13.5.4&quot;&gt;13.5.4&lt;/a&gt; and &lt;a href=&quot;#section-14.16&quot;&gt;14.16&lt;/a&gt;. In all
   other cases, an HTTP user agent SHOULD follow the same or similar
   behavior as a MIME user agent would upon receipt of a multipart type.
   The MIME header fields within each body-part of a multipart message-
   body do not have any significance to HTTP beyond that defined by
   their MIME semantics.

   In general, an HTTP user agent SHOULD follow the same or similar
   behavior as a MIME user agent would upon receipt of a multipart type.
   If an application receives an unrecognized multipart subtype, the
   application MUST treat it as being equivalent to &quot;multipart/mixed&quot;.

      Note: The &quot;multipart/form-data&quot; type has been specifically defined
      for carrying form data suitable for processing via the POST
      request method, as described in &lt;a href=&quot;https://tools.ietf.org/html/rfc1867&quot;&gt;RFC 1867&lt;/a&gt; [&lt;a href=&quot;#ref-15&quot;&gt;15&lt;/a&gt;].</source>
          <target state="translated">MIME предоставляет несколько &quot;составных&quot; типов - инкапсуляцию одной или нескольких сущностей в одном теле сообщения. Все multipart-типы имеют общий синтаксис, как определено в &lt;a href=&quot;https://tools.ietf.org/html/rfc2046#section-5.1.1&quot;&gt;разделе 5.1.1 RFC 2046&lt;/a&gt; [ &lt;a href=&quot;#ref-40&quot;&gt;40&lt;/a&gt; ], и ДОЛЖНЫ включать граничный параметр как часть значения медиа-типа. Тело сообщения само по себе является элементом протокола и поэтому ДОЛЖНО использовать только CRLF для представления разрывов строк между частями тела. В отличие от &lt;a href=&quot;https://tools.ietf.org/html/rfc2046&quot;&gt;RFC 2046&lt;/a&gt;, эпилог любого составного сообщения ДОЛЖЕН быть пустым; Приложения HTTP НЕ ДОЛЖНЫ передавать эпилог (даже если исходный multipart содержит эпилог). Эти ограничения существуют для того, чтобы сохранить саморазграничивающуюся природу составного тела сообщения, где &amp;laquo;конец&amp;raquo; тела сообщения указывается конечной границей составного сообщения. В общем, HTTP обрабатывает составное тело сообщения не иначе, чем любой другой тип носителя: строго как полезную нагрузку. Единственным исключением является тип &amp;laquo;multipart / byteranges&amp;raquo; (приложение 19.2), когда он появляется в ответе 206 (частичное содержимое), который будет интерпретироваться некоторыми механизмами кэширования HTTP, как описано в разделах &lt;a href=&quot;#section-13.5.4&quot;&gt;13.5.4&lt;/a&gt; и &lt;a href=&quot;#section-14.16&quot;&gt;14.16.&lt;/a&gt;, Во всех других случаях пользовательский агент HTTP ДОЛЖЕН следовать тому же или аналогичному поведению, что и пользовательский агент MIME при получении многостраничного типа. Поля заголовка MIME в каждой части тела составного сообщения не имеют никакого значения для HTTP, кроме того, что определено их семантикой MIME. Как правило, пользовательский агент HTTP ДОЛЖЕН следовать тому же или аналогичному поведению, что и пользовательский агент MIME при получении многостраничного типа. Если приложение получает нераспознанный подтип multipart, приложение ДОЛЖНО рассматривать его как эквивалент &amp;laquo;multipart / mixed&amp;raquo;. Примечание. Тип multipart / form-data был специально определен для переноса данных формы, пригодных для обработки с помощью метода запроса POST,как описано в &lt;a href=&quot;https://tools.ietf.org/html/rfc1867&quot;&gt;RFC 1867&lt;/a&gt; [ &lt;a href=&quot;#ref-15&quot;&gt;15&lt;/a&gt; ].</target>
        </trans-unit>
        <trans-unit id="4a0b826ef29a7a4a5fcb4cc1856fb5706a1d940c" translate="yes" xml:space="preserve">
          <source>MIME provides for a number of &quot;multipart&quot; types -- encapsulations of
   one or more representations within a single message body.  All
   multipart types share a common syntax, as defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc2046#section-5.1.1&quot;&gt;Section&amp;nbsp;5.1.1 of
   [RFC2046]&lt;/a&gt;, and include a boundary parameter as part of the media type
   value.  The message body is itself a protocol element; a sender MUST
   generate only CRLF to represent line breaks between body parts.

   HTTP message framing does not use the multipart boundary as an
   indicator of message body length, though it might be used by
   implementations that generate or process the payload.  For example,
   the &quot;multipart/form-data&quot; type is often used for carrying form data
   in a request, as described in [&lt;a href=&quot;https://tools.ietf.org/html/rfc2388&quot;&gt;RFC2388&lt;/a&gt;], and the &quot;multipart/
   byteranges&quot; type is defined by this specification for use in some 206
   (Partial Content) responses [&lt;a href=&quot;https://tools.ietf.org/html/rfc7233&quot;&gt;RFC7233&lt;/a&gt;].</source>
          <target state="translated">MIME предоставляет несколько &quot;составных&quot; типов - инкапсуляцию одного или нескольких представлений в одном теле сообщения. Все multipart-типы имеют общий синтаксис, как определено в &lt;a href=&quot;https://tools.ietf.org/html/rfc2046#section-5.1.1&quot;&gt;разделе 5.1.1 [RFC2046]&lt;/a&gt; , и включают граничный параметр как часть значения медиа-типа. Тело сообщения само по себе является элементом протокола; отправитель ДОЛЖЕН генерировать только CRLF для представления разрывов строк между частями тела. При формировании кадра HTTP-сообщения многостраничная граница не используется в качестве индикатора длины тела сообщения, хотя она может использоваться реализациями, которые генерируют или обрабатывают полезные данные. Например, тип &amp;laquo;multipart / form-data&amp;raquo; часто используется для переноса данных формы в запросе, как описано в [ &lt;a href=&quot;https://tools.ietf.org/html/rfc2388&quot;&gt;RFC2388&lt;/a&gt;], а тип &amp;laquo;multipart / byteranges&amp;raquo; определен данной спецификацией для использования в некоторых ответах 206 (частичное содержимое) [ &lt;a href=&quot;https://tools.ietf.org/html/rfc7233&quot;&gt;RFC7233&lt;/a&gt; ].</target>
        </trans-unit>
        <trans-unit id="c8e0f31f1df09630671c1f651e4e3b3a2f9c9629" translate="yes" xml:space="preserve">
          <source>MIME requires that an Internet mail body part be converted to
   canonical form prior to being transferred, as described in &lt;a href=&quot;https://tools.ietf.org/html/rfc2049#section-4&quot;&gt;Section&amp;nbsp;4
   of [RFC2049]&lt;/a&gt;.  &lt;a href=&quot;#section-3.1.1.3&quot;&gt;Section 3.1.1.3&lt;/a&gt; of this document describes the forms
   allowed for subtypes of the &quot;text&quot; media type when transmitted over
   HTTP.  [&lt;a href=&quot;https://tools.ietf.org/html/rfc2046&quot;&gt;RFC2046&lt;/a&gt;] requires that content with a type of &quot;text&quot;
   represent line breaks as CRLF and forbids the use of CR or LF outside
   of line break sequences.  HTTP allows CRLF, bare CR, and bare LF to
   indicate a line break within text content.

   A proxy or gateway from HTTP to a strict MIME environment ought to
   translate all line breaks within the text media types described in
   &lt;a href=&quot;#section-3.1.1.3&quot;&gt;Section 3.1.1.3&lt;/a&gt; of this document to the &lt;a href=&quot;https://tools.ietf.org/html/rfc2049&quot;&gt;RFC 2049&lt;/a&gt; canonical form of
   CRLF.  Note, however, this might be complicated by the presence of a
   Content-Encoding and by the fact that HTTP allows the use of some
   charsets that do not use octets 13 and 10 to represent CR and LF,
   respectively. 

   Conversion will break any cryptographic checksums applied to the
   original content unless the original content is already in canonical
   form.  Therefore, the canonical form is recommended for any content
   that uses such checksums in HTTP.</source>
          <target state="translated">MIME требует, чтобы перед передачей часть тела Интернет-почты была преобразована в каноническую форму, как описано в &lt;a href=&quot;https://tools.ietf.org/html/rfc2049#section-4&quot;&gt;разделе 4 [RFC2049]&lt;/a&gt; . &lt;a href=&quot;#section-3.1.1.3&quot;&gt;В разделе 3.1.1.3&lt;/a&gt; этого документа описаны формы, разрешенные для подтипов &amp;laquo;текстового&amp;raquo; медиа-типа при передаче по HTTP. [ &lt;a href=&quot;https://tools.ietf.org/html/rfc2046&quot;&gt;RFC2046&lt;/a&gt; ] требует, чтобы контент с типом &amp;laquo;текст&amp;raquo; представлял разрывы строк как CRLF, и запрещает использование CR или LF вне последовательностей разрыва строки. HTTP позволяет использовать CRLF, чистый CR и простой LF для обозначения разрыва строки в текстовом содержимом. Прокси-сервер или шлюз из HTTP в среду строгого MIME должен переводить все разрывы строк в типах текстовых носителей, описанных в &lt;a href=&quot;#section-3.1.1.3&quot;&gt;разделе 3.1.1.3&lt;/a&gt; этого документа, в &lt;a href=&quot;https://tools.ietf.org/html/rfc2049&quot;&gt;RFC 2049.&lt;/a&gt;каноническая форма CRLF. Обратите внимание, однако, это может быть осложнено наличием Content-Encoding и тем фактом, что HTTP позволяет использовать некоторые наборы символов, которые не используют октеты 13 и 10 для представления CR и LF соответственно. Преобразование нарушит все криптографические контрольные суммы, примененные к исходному контенту, если исходный контент уже не имеет каноническую форму. Поэтому каноническая форма рекомендуется для любого контента, который использует такие контрольные суммы в HTTP.</target>
        </trans-unit>
        <trans-unit id="dc3173f339d6234c3d312054225c8bdaf39b65b0" translate="yes" xml:space="preserve">
          <source>MIME sniffing</source>
          <target state="translated">MIME-обнюхивание</target>
        </trans-unit>
        <trans-unit id="8c6307bfb3b795f533739b8404318fa008b26432" translate="yes" xml:space="preserve">
          <source>MIME type</source>
          <target state="translated">MIME-тип</target>
        </trans-unit>
        <trans-unit id="a4195024d58b7afd14c9753b91c2a9db35d2b08f" translate="yes" xml:space="preserve">
          <source>MIME types</source>
          <target state="translated">MIME-типы</target>
        </trans-unit>
        <trans-unit id="85b225fe3d478022bad59031409ac72b140a5366" translate="yes" xml:space="preserve">
          <source>MIME types are case-insensitive but are traditionally written in lowercase, with the exception of parameter values, whose case may or may not have specific meaning.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3957f21878ad7ce2b26fefff8051376805431e8" translate="yes" xml:space="preserve">
          <source>MIME types are case-insensitive but traditionally written in lowercase.</source>
          <target state="translated">MIME-типы не чувствительны к регистру,но традиционно пишутся в нижнем регистре.</target>
        </trans-unit>
        <trans-unit id="b860a02c04e9037685ceb44ac49fc8833ef95f3c" translate="yes" xml:space="preserve">
          <source>MIME types are not the only way to convey document type information:</source>
          <target state="translated">MIME-типы-не единственный способ передачи информации о типах документов:</target>
        </trans-unit>
        <trans-unit id="4da8182b81c1bb802c3acafa674af9adc81313c0" translate="yes" xml:space="preserve">
          <source>MIME types: Complete list of MIME types</source>
          <target state="translated">MIME-типы:Полный список типов MIME</target>
        </trans-unit>
        <trans-unit id="148704e082bf337e21217553e9d3d3709aea42bf" translate="yes" xml:space="preserve">
          <source>MKCOL creates a new collection resource at the location specified by
   the Request-URI.  If the Request-URI is already mapped to a resource,
   then the MKCOL MUST fail.  During MKCOL processing, a server MUST
   make the Request-URI an internal member of its parent collection,
   unless the Request-URI is &quot;/&quot;.  If no such ancestor exists, the
   method MUST fail.  When the MKCOL operation creates a new collection
   resource, all ancestors MUST already exist, or the method MUST fail
   with a 409 (Conflict) status code.  For example, if a request to
   create collection /a/b/c/d/ is made, and /a/b/c/ does not exist, the
   request must fail.

   When MKCOL is invoked without a request body, the newly created
   collection SHOULD have no members. 

   A MKCOL request message may contain a message body.  The precise
   behavior of a MKCOL request when the body is present is undefined,
   but limited to creating collections, members of a collection, bodies
   of members, and properties on the collections or members.  If the
   server receives a MKCOL request entity type it does not support or
   understand, it MUST respond with a 415 (Unsupported Media Type)
   status code.  If the server decides to reject the request based on
   the presence of an entity or the type of an entity, it should use the
   415 (Unsupported Media Type) status code.

   This method is idempotent, but not safe (see &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-9.1&quot;&gt;Section&amp;nbsp;9.1 of
   [RFC2616]&lt;/a&gt;).  Responses to this method MUST NOT be cached.</source>
          <target state="translated">MKCOL создает новый ресурс коллекции в местоположении, указанном Request-URI. Если Request-URI уже сопоставлен с ресурсом, то MKCOL ДОЛЖЕН дать сбой. Во время обработки MKCOL сервер ДОЛЖЕН сделать Request-URI внутренним членом своей родительской коллекции, если Request-URI не равен &quot;/&quot;. Если такого предка не существует, метод ДОЛЖЕН дать сбой. Когда операция MKCOL создает новый ресурс коллекции, все предки ДОЛЖНЫ уже существовать, или метод ДОЛЖЕН дать сбой с кодом состояния 409 (конфликт). Например, если сделан запрос на создание коллекции / a / b / c / d /, а / a / b / c / не существует, запрос должен завершиться ошибкой. Когда MKCOL вызывается без тела запроса, вновь созданная коллекция НЕ ДОЛЖНА иметь членов. Сообщение запроса MKCOL может содержать тело сообщения.Точное поведение запроса MKCOL при наличии тела не определено, но ограничивается созданием коллекций, членов коллекции, тел членов и свойств коллекций или членов. Если сервер получает тип объекта запроса MKCOL, который он не поддерживает или не понимает, он ДОЛЖЕН ответить кодом состояния 415 (неподдерживаемый тип носителя). Если сервер решает отклонить запрос на основании наличия объекта или типа объекта, он должен использовать код состояния 415 (неподдерживаемый тип носителя). Этот метод идемпотентен, но небезопасен (см.Если сервер получает тип объекта запроса MKCOL, который он не поддерживает или не понимает, он ДОЛЖЕН ответить кодом состояния 415 (неподдерживаемый тип носителя). Если сервер решает отклонить запрос на основании наличия объекта или типа объекта, он должен использовать код состояния 415 (неподдерживаемый тип носителя). Этот метод идемпотентен, но небезопасен (см.Если сервер получает тип объекта запроса MKCOL, который он не поддерживает или не понимает, он ДОЛЖЕН ответить кодом состояния 415 (неподдерживаемый тип носителя). Если сервер решает отклонить запрос на основании наличия объекта или типа объекта, он должен использовать код состояния 415 (неподдерживаемый тип носителя). Этот метод идемпотентен, но небезопасен (см.&lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-9.1&quot;&gt;Раздел 9.1 [RFC2616]&lt;/a&gt; ). Ответы на этот метод НЕ ДОЛЖНЫ кэшироваться.</target>
        </trans-unit>
        <trans-unit id="d34f4fbf660e43b546f36ad8f422be2614555dcd" translate="yes" xml:space="preserve">
          <source>MP3 audio</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a7163944345c31e87c18d422da826101ae9abe5" translate="yes" xml:space="preserve">
          <source>MPEG Video</source>
          <target state="translated">MPEG Video</target>
        </trans-unit>
        <trans-unit id="76ffb6887eba7a2790b86a61c748c98d3d1e8f9c" translate="yes" xml:space="preserve">
          <source>MPEG transport stream</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6856eb8cd7bbe158e86b90aca7643f9eb2028c7e" translate="yes" xml:space="preserve">
          <source>MS Embedded OpenType fonts</source>
          <target state="translated">Встроенные шрифты MS OpenType</target>
        </trans-unit>
        <trans-unit id="6ee635274712baef8781c8d8f996b059e9c0d4e0" translate="yes" xml:space="preserve">
          <source>Mac OS X on Intel x86 or x86_64</source>
          <target state="translated">Mac OS X на Intel x86 или x86_64</target>
        </trans-unit>
        <trans-unit id="973e3aaf5ab321c24d7296e6f425c45df453a860" translate="yes" xml:space="preserve">
          <source>Mac OS X on PowerPC</source>
          <target state="translated">Mac OS X на PowerPC</target>
        </trans-unit>
        <trans-unit id="70bafc26930c7270181eba7fdab16bde2ac8ad22" translate="yes" xml:space="preserve">
          <source>Mac OS X version</source>
          <target state="translated">версия Mac OS X</target>
        </trans-unit>
        <trans-unit id="c0fd8053739db52e4d7f47348c57c75e3099c202" translate="yes" xml:space="preserve">
          <source>Macintosh</source>
          <target state="translated">Macintosh</target>
        </trans-unit>
        <trans-unit id="cd1cb4ddbb5f5f302fe8ca08ece123325b6c28dd" translate="yes" xml:space="preserve">
          <source>Magic numbers. The syntax of different formats allows file-type inference by looking at their byte structure. For example, GIF files start with the &lt;code&gt;47 49 46 38 39&lt;/code&gt; hexadecimal value (&lt;code&gt;GIF89&lt;/code&gt;), and PNG files with &lt;code&gt;89 50 4E 47&lt;/code&gt; (&lt;code&gt;.PNG&lt;/code&gt;). Not all file types have magic numbers, so this is not 100% reliable either.</source>
          <target state="translated">Магические числа. Синтаксис различных форматов позволяет делать вывод о типах файлов, глядя на их байтовую структуру. Например, файлы GIF начинаются с шестнадцатеричного значения &lt;code&gt;47 49 46 38 39&lt;/code&gt; ( &lt;code&gt;GIF89&lt;/code&gt; ), а файлы PNG - с &lt;code&gt;89 50 4E 47&lt;/code&gt; ( &lt;code&gt;.PNG&lt;/code&gt; ). Не все типы файлов имеют магические числа, так что это тоже не на 100% надежно.</target>
        </trans-unit>
        <trans-unit id="09abc5b909a0fed32e43a7d4b0340a7125fc3cd6" translate="yes" xml:space="preserve">
          <source>Magnetometer</source>
          <target state="translated">Magnetometer</target>
        </trans-unit>
        <trans-unit id="37e6025eda2c374b5e1db64db721c1f61e0d7e8c" translate="yes" xml:space="preserve">
          <source>Make a &lt;a href=&quot;#Simple_requests&quot;&gt;simple request&lt;/a&gt; (using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Response/url&quot;&gt;&lt;code&gt;Response.url&lt;/code&gt;&lt;/a&gt; for the Fetch API, or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseURL&quot;&gt;&lt;code&gt;XMLHttpRequest.responseURL&lt;/code&gt;&lt;/a&gt;) to determine what URL the real preflighted request would end up at.</source>
          <target state="translated">Сделайте &lt;a href=&quot;#Simple_requests&quot;&gt;простой запрос&lt;/a&gt; (используя &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Response/url&quot;&gt; &lt;code&gt;Response.url&lt;/code&gt; &lt;/a&gt; для Fetch API или &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseURL&quot;&gt; &lt;code&gt;XMLHttpRequest.responseURL&lt;/code&gt; &lt;/a&gt; ), чтобы определить, по какому URL-адресу окажется реальный предварительный запрос.</target>
        </trans-unit>
        <trans-unit id="db608f8e24798e21b8d041453cb94e74e2d2499f" translate="yes" xml:space="preserve">
          <source>Make another request (the &amp;ldquo;real&amp;rdquo; request) using the URL you obtained from &lt;code&gt;Response.url&lt;/code&gt; or &lt;code&gt;XMLHttpRequest.responseURL&lt;/code&gt; in the first step.</source>
          <target state="translated">Сделайте другой запрос (&amp;laquo;настоящий&amp;raquo; запрос), используя URL-адрес, полученный из &lt;code&gt;Response.url&lt;/code&gt; или &lt;code&gt;XMLHttpRequest.responseURL&lt;/code&gt; на первом этапе.</target>
        </trans-unit>
        <trans-unit id="05029130870878b79b7335852828d865e01799dc" translate="yes" xml:space="preserve">
          <source>Make sure your code only uses the permitted HTTP methods when accessing the service.</source>
          <target state="translated">Убедитесь,что ваш код использует только разрешенные методы HTTP при доступе к службе.</target>
        </trans-unit>
        <trans-unit id="85896aa2638b32ee0bc92737649fbc2fda06cf32" translate="yes" xml:space="preserve">
          <source>Make your page work for both</source>
          <target state="translated">Заставьте вашу страницу работать для обоих</target>
        </trans-unit>
        <trans-unit id="f989199f5291676ea54cc4b082182819742c121f" translate="yes" xml:space="preserve">
          <source>Makes the request conditional and applies the method only if the stored resource doesn't match any of the given ETags. This is used to update caches (for safe requests), or to prevent to upload a new resource when one is already existing.</source>
          <target state="translated">Делает запрос условным и применяет метод только в том случае,если хранимый ресурс не соответствует ни одному из заданных ETag.Это используется для обновления кэша (для безопасных запросов),или для предотвращения загрузки нового ресурса,когда он уже существует.</target>
        </trans-unit>
        <trans-unit id="44bbd70969c3a3e1d64163feeed015fad79d423a" translate="yes" xml:space="preserve">
          <source>Makes the request conditional and applies the method only if the stored resource matches one of the given ETags.</source>
          <target state="translated">Делает запрос условным и применяет метод только в том случае,если хранимый ресурс соответствует одному из заданных тегов ETag.</target>
        </trans-unit>
        <trans-unit id="169b3478c02104479a6e6958b18af330ce9e16b1" translate="yes" xml:space="preserve">
          <source>Makes the request conditional and expects the entity to be transmitted only if it has been modified after the given date. This is used to transmit data only when the cache is out of date.</source>
          <target state="translated">Делает запрос условным и ожидает,что сущность будет передана только в том случае,если она была изменена после заданной даты.Это используется для передачи данных только тогда,когда кэш устарел.</target>
        </trans-unit>
        <trans-unit id="09d74b4e76e350446f9d2ba5e44f9fb97d8901cd" translate="yes" xml:space="preserve">
          <source>Makes the request conditional and expects the entity to be transmitted only if it has not been modified after the given date. This is used to ensure the coherence of a new fragment of a specific range with previous ones, or to implement an optimistic concurrency control system when modifying existing documents.</source>
          <target state="translated">Делает запрос условным и ожидает,что сущность будет передана только в том случае,если она не была изменена после данной даты.Это используется для обеспечения согласованности нового фрагмента конкретного диапазона с предыдущими или для реализации оптимистичной системы параллельного контроля при модификации существующих документов.</target>
        </trans-unit>
        <trans-unit id="7f7a333068288562b3d5298c97a47ff5d31cad69" translate="yes" xml:space="preserve">
          <source>Makes the request conditional, and applies the method only if the stored resource &lt;em&gt;doesn't&lt;/em&gt; match any of the given ETags. This is used to update caches (for safe requests), or to prevent to upload a new resource when one already exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="096d2ea5d3c4755584b006d2100bd34959cc8db1" translate="yes" xml:space="preserve">
          <source>Makes the request conditional, and applies the method only if the stored resource matches one of the given ETags.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dbe6e81622971be5c832e4b1e9abaa33bb8ba48" translate="yes" xml:space="preserve">
          <source>Makes the request conditional, and expects the entity to be transmitted only if it has been modified after the given date. This is used to transmit data only when the cache is out of date.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee09c9d066e168f9305938a8aef194729c4bca51" translate="yes" xml:space="preserve">
          <source>Makes the request conditional, and expects the entity to be transmitted only if it has not been modified after the given date. This ensures the coherence of a new fragment of a specific range with previous ones, or to implement an optimistic concurrency control system when modifying existing documents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0eae6a4d1eb4ec4b7a532a8a7ad3964da33fdb3a" translate="yes" xml:space="preserve">
          <source>Making the best of user agent sniffing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee449b1a1e7a790032bd3390fdea7fc50fbb85e5" translate="yes" xml:space="preserve">
          <source>Mandatory upgrade</source>
          <target state="translated">Обязательное обновление</target>
        </trans-unit>
        <trans-unit id="aa95526dca52047ea17840984f5ae03c1700be81" translate="yes" xml:space="preserve">
          <source>Many &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Tools/Network_Monitor&quot;&gt;developer tools' network panels&lt;/a&gt; of browsers create extraneous requests leading to &lt;code&gt;304&lt;/code&gt; responses, so that access to the local cache is visible to developers.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Tools/Network_Monitor&quot;&gt;Сетевые панели&lt;/a&gt; браузеров многих инструментов разработчика создают посторонние запросы, ведущие к &lt;code&gt;304&lt;/code&gt; откликам, так что доступ к локальному кешу виден разработчикам.</target>
        </trans-unit>
        <trans-unit id="a0c2d53d901c528a1965720abe35932f4bbca17a" translate="yes" xml:space="preserve">
          <source>Many WebDAV clients that have already been implemented have account
   settings (similar to the way email clients store IMAP account
   settings).  Thus, the WebDAV client would be able to authenticate
   with its first couple requests to the server, provided it had a way
   to get the authentication challenge from the server with realm name, 

   nonce, and other challenge information.  Note that the results of
   some requests might vary according to whether or not the client is
   authenticated -- a PROPFIND might return more visible resources if
   the client is authenticated, yet not fail if the client is anonymous.

   There are a number of ways the client might be able to trigger the
   server to provide an authentication challenge.  This appendix
   describes a couple approaches that seem particularly likely to work.

   The first approach is to perform a request that ought to require
   authentication.  However, it's possible that a server might handle
   any request even without authentication, so to be entirely safe, the
   client could add a conditional header to ensure that even if the
   request passes permissions checks, it's not actually handled by the
   server.  An example of following this approach would be to use a PUT
   request with an &quot;If-Match&quot; header with a made-up ETag value.  This
   approach might fail to result in an authentication challenge if the
   server does not test authorization before testing conditionals as is
   required (see &lt;a href=&quot;#section-8.5&quot;&gt;Section 8.5&lt;/a&gt;), or if the server does not need to test
   authorization.

   Example - forcing auth challenge with write request

   &amp;gt;&amp;gt;Request

     PUT /forceauth.txt HTTP/1.1
     Host: www.example.com
     If-Match: &quot;xxx&quot;
     Content-Type: text/plain
     Content-Length: 0


   The second approach is to use an Authorization header (defined in
   [&lt;a href=&quot;https://tools.ietf.org/html/rfc2617&quot;&gt;RFC2617&lt;/a&gt;]), which is likely to be rejected by the server but which
   will then prompt a proper authentication challenge.  For example, the
   client could start with a PROPFIND request containing an
   Authorization header containing a made-up Basic userid:password
   string or with actual plausible credentials.  This approach relies on
   the server responding with a &quot;401 Unauthorized&quot; along with a
   challenge if it receives an Authorization header with an unrecognized
   username, invalid password, or if it doesn't even handle Basic
   authentication.  This seems likely to work because of the
   requirements of &lt;a href=&quot;https://tools.ietf.org/html/rfc2617&quot;&gt;RFC 2617&lt;/a&gt;: 

   &quot;If the origin server does not wish to accept the credentials sent
   with a request, it SHOULD return a 401 (Unauthorized) response.  The
   response MUST include a WWW-Authenticate header field containing at
   least one (possibly new) challenge applicable to the requested
   resource.&quot;

   There's a slight problem with implementing that recommendation in
   some cases, because some servers do not even have challenge
   information for certain resources.  Thus, when there's no way to
   authenticate to a resource or the resource is entirely publicly
   available over all accepted methods, the server MAY ignore the
   Authorization header, and the client will presumably try again later.

   Example - forcing auth challenge with Authorization header

   &amp;gt;&amp;gt;Request

     PROPFIND /docs/ HTTP/1.1
     Host: www.example.com
     Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==
     Content-type: application/xml; charset=&quot;utf-8&quot;
     Content-Length: xxxx

     [body omitted]</source>
          <target state="translated">Многие клиенты WebDAV, которые уже реализованы, имеют настройки учетной записи (аналогично тому, как почтовые клиенты хранят настройки учетной записи IMAP). Таким образом, клиент WebDAV сможет аутентифицироваться с помощью своей первой пары запросов к серверу, при условии, что у него есть способ получить запрос аутентификации с сервера с именем области, одноразовым номером и другой информацией о вызове. Обратите внимание, что результаты некоторых запросов могут различаться в зависимости от того, аутентифицирован ли клиент или нет - PROPFIND может возвращать больше видимых ресурсов, если клиент аутентифицирован, но не терпит неудачу, если клиент анонимен. Существует несколько способов, которыми клиент может запустить сервер для запроса аутентификации. В этом приложении описывается пара подходов, которые кажутся наиболее эффективными.Первый подход - выполнить запрос, который должен требовать аутентификации. Однако возможно, что сервер может обрабатывать любой запрос даже без аутентификации, поэтому для полной безопасности клиент может добавить условный заголовок, чтобы гарантировать, что даже если запрос проходит проверку разрешений, он фактически не обрабатывается сервером. Примером следования этому подходу может быть использование запроса PUT с заголовком &amp;laquo;If-Match&amp;raquo; с выдуманным значением ETag. Этот подход может не привести к вызову аутентификации, если сервер не проверит авторизацию перед тестированием условных выражений, как это требуется (см.клиент может добавить условный заголовок, чтобы гарантировать, что даже если запрос проходит проверку разрешений, он фактически не обрабатывается сервером. Примером следования этому подходу может быть использование запроса PUT с заголовком &amp;laquo;If-Match&amp;raquo; с выдуманным значением ETag. Этот подход может не привести к проблеме аутентификации, если сервер не проверит авторизацию перед тестированием условных выражений, как это требуется (см.клиент может добавить условный заголовок, чтобы гарантировать, что даже если запрос проходит проверку разрешений, он фактически не обрабатывается сервером. Примером следования этому подходу может быть использование запроса PUT с заголовком &amp;laquo;If-Match&amp;raquo; с выдуманным значением ETag. Этот подход может не привести к проблеме аутентификации, если сервер не проверит авторизацию перед тестированием условных выражений, как это требуется (см.Этот подход может не привести к проблеме аутентификации, если сервер не проверит авторизацию перед тестированием условных выражений, как это требуется (см.Этот подход может не привести к проблеме аутентификации, если сервер не проверит авторизацию перед тестированием условных выражений, как это требуется (см.&lt;a href=&quot;#section-8.5&quot;&gt;Раздел 8.5&lt;/a&gt; ), или если серверу не нужно проверять авторизацию. Пример - принудительная проверка подлинности с помощью запроса на запись &amp;gt;&amp;gt; Request PUT /forceauth.txt HTTP / 1.1 Host: www.example.com If-Match: &quot;xxx&quot; Content-Type: text / plain Content-Length: 0 Второй подход заключается в использовать заголовок авторизации (определенный в [ &lt;a href=&quot;https://tools.ietf.org/html/rfc2617&quot;&gt;RFC2617&lt;/a&gt;]), который, скорее всего, будет отклонен сервером, но затем запросит правильную аутентификацию. Например, клиент может начать с запроса PROPFIND, содержащего заголовок авторизации, содержащий выдуманный базовый идентификатор пользователя: строку пароля или с действительными правдоподобными учетными данными. Этот подход основан на том, что сервер отвечает сообщением &amp;laquo;401 Unauthorized&amp;raquo; вместе с запросом, если он получает заголовок авторизации с нераспознанным именем пользователя, недопустимым паролем или если он даже не обрабатывает обычную проверку подлинности. Похоже, это сработает из-за требований &lt;a href=&quot;https://tools.ietf.org/html/rfc2617&quot;&gt;RFC 2617.&lt;/a&gt;: &quot;Если исходный сервер не желает принимать учетные данные, отправленные с запросом, он ДОЛЖЕН вернуть ответ 401 (неавторизованный). Ответ ДОЛЖЕН включать поле заголовка WWW-Authenticate, содержащее по крайней мере один (возможно, новый) запрос, применимый к запрошенный ресурс &quot;. В некоторых случаях есть небольшая проблема с выполнением этой рекомендации, потому что некоторые серверы даже не имеют информации о вызове для определенных ресурсов. Таким образом, когда нет способа аутентифицироваться для ресурса или ресурс полностью доступен для всех принятых методов, сервер МОЖЕТ игнорировать заголовок авторизации, и клиент, вероятно, попытается снова позже. Пример - принудительный вызов аутентификации с заголовком авторизации &amp;gt;&amp;gt; Запросить PROPFIND / docs / HTTP / 1.1 Host: www.example.com Авторизация: Базовая QWxhZGRpbjpvcGVuIHNlc2FtZQ == Content-type: application / xml; charset = &quot;utf-8&quot; Content-Length: xxxx [тело опущено]</target>
        </trans-unit>
        <trans-unit id="c2f40e3ce20552730e2da9b44cf88aa049c3f277" translate="yes" xml:space="preserve">
          <source>Many clients also let you avoid the login prompt by using an encoded URL containing the username and the password like this:</source>
          <target state="translated">Многие клиенты также позволяют избежать запроса на вход,используя зашифрованный URL,содержащий имя пользователя и пароль,подобный этому:</target>
        </trans-unit>
        <trans-unit id="283c9af22dd90c8866e71dddbfce0cce3700a5b6" translate="yes" xml:space="preserve">
          <source>Many of the request header fields for proactive negotiation use a
   common parameter, named &quot;q&quot; (case-insensitive), to assign a relative
   &quot;weight&quot; to the preference for that associated kind of content.  This
   weight is referred to as a &quot;quality value&quot; (or &quot;qvalue&quot;) because the
   same parameter name is often used within server configurations to
   assign a weight to the relative quality of the various
   representations that can be selected for a resource. 

   The weight is normalized to a real number in the range 0 through 1,
   where 0.001 is the least preferred and 1 is the most preferred; a
   value of 0 means &quot;not acceptable&quot;.  If no &quot;q&quot; parameter is present,
   the default weight is 1.

     weight = OWS &quot;;&quot; OWS &quot;q=&quot; qvalue
     qvalue = ( &quot;0&quot; [ &quot;.&quot; 0*3DIGIT ] )
            / ( &quot;1&quot; [ &quot;.&quot; 0*3(&quot;0&quot;) ] )

   A sender of qvalue MUST NOT generate more than three digits after the
   decimal point.  User configuration of these values ought to be
   limited in the same fashion.</source>
          <target state="translated">Многие поля заголовка запроса для проактивных переговоров используют общий параметр,называемый &quot;q&quot; (нечувствительный к регистру),для присвоения относительного &quot;веса&quot; предпочтения этому ассоциированному виду контента.Этот вес называется &quot;значение качества&quot; (или &quot;qvalue&quot;),поскольку одно и то же имя параметра часто используется в конфигурациях сервера для присвоения веса относительному качеству различных представлений,которые могут быть выбраны для ресурса.Вес нормируется к реальному числу в диапазоне от 0 до 1,где 0.001 является наименее предпочтительным,а 1-наиболее предпочтительным;значение 0 означает &quot;недопустимо&quot;.Если параметр &quot;q&quot; отсутствует,то вес по умолчанию равен 1.вес=OWS &quot;;&quot; OWS &quot;q=&quot; qvalue qvalue=(&quot;0&quot;[&quot;...&quot; 0*3DIGIT])/(&quot;1&quot;[&quot;...&quot; 0*3(&quot;0&quot;)]).Отправитель значения q НЕ ДОЛЖЕН генерировать более трех цифр после запятой.Пользовательская настройка этих значений должна быть одинаково ограничена.</target>
        </trans-unit>
        <trans-unit id="2fec0947cbf922d8434fc8fe01a93bf6110f4bdb" translate="yes" xml:space="preserve">
          <source>Many user agents make it possible for users to override the basic
   caching mechanisms. For example, the user agent might allow the user
   to specify that cached entities (even explicitly stale ones) are
   never validated. Or the user agent might habitually add &quot;Cache-
   Control: max-stale=3600&quot; to every request. The user agent SHOULD NOT
   default to either non-transparent behavior, or behavior that results
   in abnormally ineffective caching, but MAY be explicitly configured
   to do so by an explicit action of the user.

   If the user has overridden the basic caching mechanisms, the user
   agent SHOULD explicitly indicate to the user whenever this results in
   the display of information that might not meet the server's
   transparency requirements (in particular, if the displayed entity is
   known to be stale). Since the protocol normally allows the user agent
   to determine if responses are stale or not, this indication need only
   be displayed when this actually happens. The indication need not be a
   dialog box; it could be an icon (for example, a picture of a rotting
   fish) or some other indicator.

   If the user has overridden the caching mechanisms in a way that would
   abnormally reduce the effectiveness of caches, the user agent SHOULD
   continually indicate this state to the user (for example, by a
   display of a picture of currency in flames) so that the user does not
   inadvertently consume excess resources or suffer from excessive
   latency.</source>
          <target state="translated">Многие пользовательские агенты позволяют пользователям переопределять основные механизмы кэширования.Например,пользовательский агент может позволить пользователю указать,что кэшированные сущности (даже явно черствые)никогда не проверяются.Или пользовательский агент может обычно добавлять &quot;Cache-Control:max-stale=3600&quot; к каждому запросу.Пользовательский агент НЕ ДОЛЖЕН по умолчанию указывать либо непрозрачное поведение,либо поведение,которое приводит к аномально неэффективному кэшированию,но МОГУТ быть явно настроен на это явным действием пользователя.Если пользователь переопределил основные механизмы кэширования,пользовательский агент ДОЛЖЕН явно указывать пользователю всякий раз,когда это приводит к отображению информации,которая может не соответствовать требованиям прозрачности сервера (в частности,если отображаемая сущность известна как черствая).Так как протокол обычно позволяет пользовательскому агенту определить,являются ли ответы &quot;черствыми&quot; или нет,то это указание должно отображаться только тогда,когда это действительно происходит.Индикация не обязательно должна быть диалоговым окном;это может быть иконка (например,изображение гниющей рыбы)или какой-нибудь другой индикатор.Если пользователь переопределил механизмы кэширования таким образом,что это аномально снижает эффективность кэширования,то пользовательский агент ДОЛЖЕН постоянно указывать пользователю на это состояние (например,отображая картинку валюты в пламени),чтобы пользователь случайно не потреблял лишние ресурсы или не страдал от чрезмерной латентности.</target>
        </trans-unit>
        <trans-unit id="91d901c4ba5ec936d334c6e339e3c5a344ea50ad" translate="yes" xml:space="preserve">
          <source>Many web sites customize the look of a 404 page to be more helpful to the user and provide guidance on what to do next. Apache servers can be configured using an &lt;code&gt;.htaccess&lt;/code&gt; file and a code snippet like the following example.</source>
          <target state="translated">Многие веб-сайты настраивают внешний вид страницы 404, чтобы она была более полезной для пользователя и давала указания, что делать дальше. Серверы Apache можно настроить с помощью файла &lt;code&gt;.htaccess&lt;/code&gt; и фрагмента кода, как в следующем примере.</target>
        </trans-unit>
        <trans-unit id="a17963b7961c54316ccf166b602f9000c64c4f9a" translate="yes" xml:space="preserve">
          <source>Matches any content encoding not already listed in the header. This is the default value if the header is not present. It doesn't mean that any algorithm is supported; merely that no preference is expressed.</source>
          <target state="translated">Сопоставляет любую кодировку содержимого,не указанную в заголовке.Это значение по умолчанию,если заголовок отсутствует.Это не означает,что поддерживается какой-либо алгоритм;просто не выражено никакого предпочтения.</target>
        </trans-unit>
        <trans-unit id="380542fdbbc688e8e6c3dd27ea8f678b7e9f1ca5" translate="yes" xml:space="preserve">
          <source>Max-Age=&amp;lt;number&amp;gt; Optional</source>
          <target state="translated">Max-Age = &amp;lt;число&amp;gt; Необязательно</target>
        </trans-unit>
        <trans-unit id="1f82181c1557956a09c87927dc4ce27ccc4098f3" translate="yes" xml:space="preserve">
          <source>Max-Forwards (RFC 2616)</source>
          <target state="translated">Макс-Форвардс (RFC 2616)</target>
        </trans-unit>
        <trans-unit id="2b2d8c8ce404909b199641932433093016cba38f" translate="yes" xml:space="preserve">
          <source>Max-Forwards (RFC 7231)</source>
          <target state="translated">Макс-Форвардс (RFC 7231)</target>
        </trans-unit>
        <trans-unit id="02e6cf952f41741b2d0d0521bab1b080b79a5956" translate="yes" xml:space="preserve">
          <source>Maximum number of seconds the results can be cached.</source>
          <target state="translated">Максимальное количество секунд,в течение которого результаты могут быть кэшированы.</target>
        </trans-unit>
        <trans-unit id="c94f479833c5d401cffdfa7afe6c9c2d56448019" translate="yes" xml:space="preserve">
          <source>May</source>
          <target state="translated">May</target>
        </trans-unit>
        <trans-unit id="cfef933803d5e6538306daeac1d4318fa9cda10c" translate="yes" xml:space="preserve">
          <source>May be set by hosting environments or other frameworks and contains information about them while not providing any usefulness to the application or its visitors. Unset this header to avoid exposing potential vulnerabilities.</source>
          <target state="translated">Может устанавливаться хостинговыми средами или другими фреймворками и содержать информацию о них,не принося при этом никакой пользы приложению или его посетителям.Отключите этот заголовок,чтобы не раскрывать потенциальные уязвимости.</target>
        </trans-unit>
        <trans-unit id="19cd7d185cfd95a703e62d43597e9ae28e0646e5" translate="yes" xml:space="preserve">
          <source>Meaning</source>
          <target state="translated">Meaning</target>
        </trans-unit>
        <trans-unit id="0d2e9b5ce7309f95a7890febc6e837b7f6d73bb0" translate="yes" xml:space="preserve">
          <source>Media formats supported by the HTML audio and video elements</source>
          <target state="translated">Медиа-форматы,поддерживаемые аудио и видео элементами HTML</target>
        </trans-unit>
        <trans-unit id="e73c2e204a43c925f331f4a9f4aa965ffa11300d" translate="yes" xml:space="preserve">
          <source>Media is only allowed from media1.com and media2.com (and not from subdomains of those sites).</source>
          <target state="translated">Медиа допускается только с media1.com и media2.com (и не с поддоменов этих сайтов).</target>
        </trans-unit>
        <trans-unit id="62da738dbc54cd00c3ecc7aaa0efba6cf80eed5e" translate="yes" xml:space="preserve">
          <source>Message Format (RFC 7230)</source>
          <target state="translated">Формат сообщения (RFC 7230)</target>
        </trans-unit>
        <trans-unit id="cd72d478c14d1e61f4d253f077b3b5817e52cd02" translate="yes" xml:space="preserve">
          <source>Message Routing (RFC 7230)</source>
          <target state="translated">Маршрутизация сообщений (RFC 7230)</target>
        </trans-unit>
        <trans-unit id="ed576c67d1fde583bfb7d4b0af04da9e09035d6c" translate="yes" xml:space="preserve">
          <source>Message body information</source>
          <target state="translated">Информация о теле сообщения</target>
        </trans-unit>
        <trans-unit id="f1702b4686278becffc88baabe6f4b7a8355532c" translate="yes" xml:space="preserve">
          <source>Messages</source>
          <target state="translated">Messages</target>
        </trans-unit>
        <trans-unit id="f361b914c2431b8337949e5a832a53f9c04c4160" translate="yes" xml:space="preserve">
          <source>Messages are parsed using a generic algorithm, independent of the
   individual header field names.  The contents within a given field
   value are not parsed until a later stage of message interpretation
   (usually after the message's entire header section has been
   processed).  Consequently, this specification does not use ABNF rules
   to define each &quot;Field-Name: Field Value&quot; pair, as was done in
   previous editions.  Instead, this specification uses ABNF rules that
   are named according to each registered field name, wherein the rule
   defines the valid grammar for that field's corresponding field values
   (i.e., after the field-value has been extracted from the header
   section by a generic field parser).

   No whitespace is allowed between the header field-name and colon.  In
   the past, differences in the handling of such whitespace have led to
   security vulnerabilities in request routing and response handling.  A
   server MUST reject any received request message that contains
   whitespace between a header field-name and colon with a response code
   of 400 (Bad Request).  A proxy MUST remove any such whitespace from a
   response message before forwarding the message downstream.

   A field value might be preceded and/or followed by optional
   whitespace (OWS); a single SP preceding the field-value is preferred
   for consistent readability by humans.  The field value does not
   include any leading or trailing whitespace: OWS occurring before the
   first non-whitespace octet of the field value or after the last
   non-whitespace octet of the field value ought to be excluded by
   parsers when extracting the field value from a header field.

   Historically, HTTP header field values could be extended over
   multiple lines by preceding each extra line with at least one space
   or horizontal tab (obs-fold).  This specification deprecates such
   line folding except within the message/http media type
   (&lt;a href=&quot;#section-8.3.1&quot;&gt;Section 8.3.1&lt;/a&gt;).  A sender MUST NOT generate a message that includes
   line folding (i.e., that has any field-value that contains a match to
   the obs-fold rule) unless the message is intended for packaging
   within the message/http media type. 

   A server that receives an obs-fold in a request message that is not
   within a message/http container MUST either reject the message by
   sending a 400 (Bad Request), preferably with a representation
   explaining that obsolete line folding is unacceptable, or replace
   each received obs-fold with one or more SP octets prior to
   interpreting the field value or forwarding the message downstream.

   A proxy or gateway that receives an obs-fold in a response message
   that is not within a message/http container MUST either discard the
   message and replace it with a 502 (Bad Gateway) response, preferably
   with a representation explaining that unacceptable line folding was
   received, or replace each received obs-fold with one or more SP
   octets prior to interpreting the field value or forwarding the
   message downstream.

   A user agent that receives an obs-fold in a response message that is
   not within a message/http container MUST replace each received
   obs-fold with one or more SP octets prior to interpreting the field
   value.

   Historically, HTTP has allowed field content with text in the
   ISO-8859-1 charset [&lt;a href=&quot;#ref-ISO-8859-1&quot;&gt;ISO-8859-1&lt;/a&gt;], supporting other charsets only
   through use of [&lt;a href=&quot;https://tools.ietf.org/html/rfc2047&quot;&gt;RFC2047&lt;/a&gt;] encoding.  In practice, most HTTP header
   field values use only a subset of the US-ASCII charset [&lt;a href=&quot;#ref-USASCII&quot;&gt;USASCII&lt;/a&gt;].
   Newly defined header fields SHOULD limit their field values to
   US-ASCII octets.  A recipient SHOULD treat other octets in field
   content (obs-text) as opaque data.</source>
          <target state="translated">Сообщения анализируются с использованием общего алгоритма, независимо от имен отдельных полей заголовка. Содержимое данного значения поля не анализируется до более поздней стадии интерпретации сообщения (обычно после обработки всего раздела заголовка сообщения). Следовательно, эта спецификация не использует правила ABNF для определения каждой пары &amp;laquo;Имя поля: Значение поля&amp;raquo;, как это было сделано в предыдущих выпусках. Вместо этого в этой спецификации используются правила ABNF, названные в соответствии с каждым зарегистрированным именем поля, при этом правило определяет допустимую грамматику для соответствующих значений поля этого поля (т. Е. После того, как значение поля было извлечено из раздела заголовка универсальным синтаксическим анализатором поля. ). Пробелы между именем поля заголовка и двоеточием не допускаются. В прошлом,различия в обработке таких пробелов привели к уязвимостям безопасности в маршрутизации запросов и обработке ответов. Сервер ДОЛЖЕН отклонить любое полученное сообщение запроса, которое содержит пробел между именем поля заголовка и двоеточием с кодом ответа 400 (неверный запрос). Прокси-сервер ДОЛЖЕН удалить любые такие пробелы из ответного сообщения перед пересылкой сообщения в нисходящем направлении. Значению поля может предшествовать и / или следовать необязательный пробел (OWS); одиночный SP, предшествующий полю-значению, предпочтительнее для постоянной читаемости людьми. Значение поля не содержит начальных или конечных пробелов:OWS, возникающие перед первым непробельным октетом значения поля или после последнего непробельного октета значения поля, должны быть исключены синтаксическими анализаторами при извлечении значения поля из поля заголовка. Исторически значения поля заголовка HTTP могли быть расширены на несколько строк, предшествуя каждой дополнительной строке хотя бы одним пробелом или горизонтальной табуляцией (obs-fold). Эта спецификация не рекомендует такое сворачивание строк, за исключением медиа-типа message / http (&lt;a href=&quot;#section-8.3.1&quot;&gt;Раздел 8.3.1&lt;/a&gt;). Отправитель НЕ ДОЛЖЕН генерировать сообщение, которое включает перенос строк (т. Е. Любое значение поля, которое содержит соответствие правилу obs-fold), если только сообщение не предназначено для упаковки в тип мультимедиа message / http. Сервер, который получает obs-fold в сообщении запроса, которое не находится в контейнере message / http, ДОЛЖЕН либо отклонить сообщение, отправив 400 (неверный запрос), предпочтительно с представлением, объясняющим, что устаревшее сворачивание строк недопустимо, либо заменить каждое получил obs-fold с одним или несколькими октетами SP до интерпретации значения поля или пересылки сообщения в нисходящем направлении. Прокси-сервер или шлюз, который получает obs-fold в ответном сообщении, которое не находится в контейнере message / http, ДОЛЖЕН либо отбросить сообщение, либо заменить его ответом 502 (Bad Gateway),предпочтительно с представлением, поясняющим, что было получено недопустимое сворачивание строк, или заменять каждый полученный obs-fold одним или несколькими октетами SP до интерпретации значения поля или пересылки сообщения в нисходящем направлении. Пользовательский агент, который получает obs-fold в ответном сообщении, которое не находится в контейнере message / http, ДОЛЖЕН заменить каждую полученную obs-fold одним или несколькими октетами SP до интерпретации значения поля. Исторически сложилось так, что HTTP разрешил содержимое поля с текстом в кодировке ISO-8859-1 [Пользовательский агент, который получает obs-fold в ответном сообщении, которое не находится в контейнере message / http, ДОЛЖЕН заменить каждую полученную obs-fold одним или несколькими октетами SP до интерпретации значения поля. Исторически сложилось так, что HTTP разрешил содержимое поля с текстом в кодировке ISO-8859-1 [Пользовательский агент, который получает obs-fold в ответном сообщении, которое не находится в контейнере message / http, ДОЛЖЕН заменить каждую полученную obs-fold одним или несколькими октетами SP до интерпретации значения поля. Исторически сложилось так, что HTTP разрешил содержимое поля с текстом в кодировке ISO-8859-1 [&lt;a href=&quot;#ref-ISO-8859-1&quot;&gt;ISO-8859-1&lt;/a&gt; ], поддерживающий другие &lt;a href=&quot;https://tools.ietf.org/html/rfc2047&quot;&gt;наборы&lt;/a&gt; символов только за счет использования кодировки [ RFC2047 ]. На практике для большинства значений полей заголовка HTTP используется только подмножество кодировки US-ASCII [ &lt;a href=&quot;#ref-USASCII&quot;&gt;USASCII&lt;/a&gt; ]. Вновь определенные поля заголовка ДОЛЖНЫ ограничивать значения своих полей октетами US-ASCII. Получатель ДОЛЖЕН обрабатывать другие октеты в содержимом поля (obs-text) как непрозрачные данные.</target>
        </trans-unit>
        <trans-unit id="a45a53f69ac8d4f9beb81fdb6abdda0d81b83401" translate="yes" xml:space="preserve">
          <source>Meta tag configuration</source>
          <target state="translated">Конфигурация мета-тегов</target>
        </trans-unit>
        <trans-unit id="d3bc7449553df912945049faf23d54805daa3cef" translate="yes" xml:space="preserve">
          <source>Method Definitions (RFC 2616)</source>
          <target state="translated">Определения метода (RFC 2616)</target>
        </trans-unit>
        <trans-unit id="cb7ac4b5940dd1c323d62b5a8e651330e7495257" translate="yes" xml:space="preserve">
          <source>Method and body not changed</source>
          <target state="translated">Метод и тело не изменились</target>
        </trans-unit>
        <trans-unit id="2d2721aaa9ac715c71cff1347bdeb0765b82f40d" translate="yes" xml:space="preserve">
          <source>Method and body not changed.</source>
          <target state="translated">Метод и тело не изменились.</target>
        </trans-unit>
        <trans-unit id="53d262d73147d297967a65df5e7306875b16e48d" translate="yes" xml:space="preserve">
          <source>Method handling</source>
          <target state="translated">Обработка методов</target>
        </trans-unit>
        <trans-unit id="7e4ac6803c9159c694f63d089cb06b2519c16aba" translate="yes" xml:space="preserve">
          <source>Methods</source>
          <target state="translated">Methods</target>
        </trans-unit>
        <trans-unit id="7e8cf9e2eae4020fb1e8917e8ab3068925ba7380" translate="yes" xml:space="preserve">
          <source>Methods can also have the property of &quot;idempotence&quot; in that (aside
   from error or expiration issues) the side-effects of N &amp;gt; 0 identical
   requests is the same as for a single request. The methods GET, HEAD,
   PUT and DELETE share this property. Also, the methods OPTIONS and
   TRACE SHOULD NOT have side effects, and so are inherently idempotent. 

   However, it is possible that a sequence of several requests is non-
   idempotent, even if all of the methods executed in that sequence are
   idempotent. (A sequence is idempotent if a single execution of the
   entire sequence always yields a result that is not changed by a
   reexecution of all, or part, of that sequence.) For example, a
   sequence is non-idempotent if its result depends on a value that is
   later modified in the same sequence.

   A sequence that never has side effects is idempotent, by definition
   (provided that no concurrent operations are being executed on the
   same set of resources).</source>
          <target state="translated">Методы также могут иметь свойство &amp;laquo;идемпотентности&amp;raquo; в том, что (помимо ошибок или проблем с истечением срока действия) побочные эффекты N&amp;gt; 0 идентичных запросов такие же, как и для одного запроса. Методы GET, HEAD, PUT и DELETE совместно используют это свойство. Кроме того, методы OPTIONS и TRACE НЕ ДОЛЖНЫ иметь побочных эффектов, и поэтому по своей сути являются идемпотентными. Однако возможно, что последовательность из нескольких запросов неидемпотентна, даже если все методы, выполняемые в этой последовательности, идемпотентны. (Последовательность является идемпотентной, если однократное выполнение всей последовательности всегда дает результат, который не изменяется при повторном выполнении всей или части этой последовательности.) Например, последовательность неидемпотентна, если ее результат зависит от значение, которое позже изменяется в той же последовательности.Последовательность, не имеющая побочных эффектов, по определению является идемпотентной (при условии, что на одном и том же наборе ресурсов не выполняются параллельные операции).</target>
        </trans-unit>
        <trans-unit id="242805378404a310345cf70839197bf474f74005" translate="yes" xml:space="preserve">
          <source>Microphone</source>
          <target state="translated">Microphone</target>
        </trans-unit>
        <trans-unit id="87276ecf605640589cec1d79d00bf26c970b94e4" translate="yes" xml:space="preserve">
          <source>Microsoft Excel</source>
          <target state="translated">Microsoft Excel</target>
        </trans-unit>
        <trans-unit id="2a323ed6449b617238b82a3dfc75eb9621adc7da" translate="yes" xml:space="preserve">
          <source>Microsoft Excel (OpenXML)</source>
          <target state="translated">Microsoft Excel (OpenXML)</target>
        </trans-unit>
        <trans-unit id="ab9f2a2052ea77406213e4dbe99b5967437a187b" translate="yes" xml:space="preserve">
          <source>Microsoft Icon</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95afea748c2d83deeb5e505cb3467080a79ec0dd" translate="yes" xml:space="preserve">
          <source>Microsoft PowerPoint</source>
          <target state="translated">Microsoft PowerPoint</target>
        </trans-unit>
        <trans-unit id="66f10ebd0f328820d7789369e62c94f10eb4d83b" translate="yes" xml:space="preserve">
          <source>Microsoft PowerPoint (OpenXML)</source>
          <target state="translated">Microsoft PowerPoint (OpenXML)</target>
        </trans-unit>
        <trans-unit id="f8f6993a5165c131c1d8c5214734c809b756f2ef" translate="yes" xml:space="preserve">
          <source>Microsoft Visio</source>
          <target state="translated">Microsoft Visio</target>
        </trans-unit>
        <trans-unit id="1549499155dcad76ee4cf933519cd8cacaf632b7" translate="yes" xml:space="preserve">
          <source>Microsoft Word</source>
          <target state="translated">Microsoft Word</target>
        </trans-unit>
        <trans-unit id="36cf4ee07cac5059a5ad97ffe928503bd176751c" translate="yes" xml:space="preserve">
          <source>Microsoft Word (OpenXML)</source>
          <target state="translated">Microsoft Word (OpenXML)</target>
        </trans-unit>
        <trans-unit id="1198ed8512c8cdd797293daa67494bddc3770413" translate="yes" xml:space="preserve">
          <source>Microsoft document</source>
          <target state="translated">документ Microsoft</target>
        </trans-unit>
        <trans-unit id="039b0b863da28e2c4f9c09377b4e7260a857282b" translate="yes" xml:space="preserve">
          <source>Microsoft in general made its own implementation. There used to be &lt;a href=&quot;https://en.wikipedia.org/wiki/Proxy_auto-config#Old_Microsoft_problems&quot;&gt;some problems with their libraries&lt;/a&gt;, but most are resolved by now. They have defined &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/win32/winhttp/ipv6-extensions-to-navigator-auto-config-file-format&quot;&gt;some new &quot;Ex&quot; suffixed functions&lt;/a&gt; around the address handling parts to support IPv6. The feature is supported by Chromium, but not yet by Firefox (&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=558253&quot;&gt;bugzilla #558253&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1df4b94ae4d5602d088aff532dae5e38510a6678" translate="yes" xml:space="preserve">
          <source>Midi</source>
          <target state="translated">Midi</target>
        </trans-unit>
        <trans-unit id="f3c717723ab8734d12784f68a0722e11e80fcc72" translate="yes" xml:space="preserve">
          <source>Minutes from 0 to 59.</source>
          <target state="translated">Минуты от 0 до 59.</target>
        </trans-unit>
        <trans-unit id="89539c6918ebad2db5606b4128932b01811ff405" translate="yes" xml:space="preserve">
          <source>Miscellaneous Persistent Warning</source>
          <target state="translated">Постоянное предупреждение о различных проблемах</target>
        </trans-unit>
        <trans-unit id="a58539b42f2a5b03e79f0e0357f01220b1c564c9" translate="yes" xml:space="preserve">
          <source>Miscellaneous Warning</source>
          <target state="translated">Разное предупреждение</target>
        </trans-unit>
        <trans-unit id="6440b6c15fbd440237dd7ddf04fa83c555b31d51" translate="yes" xml:space="preserve">
          <source>Mitigating MIME Confusion Attacks in Firefox</source>
          <target state="translated">Смягчающие MIME путаницы Нападения в Firefox</target>
        </trans-unit>
        <trans-unit id="5d489f5457c01748e6b6d121f8ab0bb76ce6faab" translate="yes" xml:space="preserve">
          <source>Mitigating cross site scripting</source>
          <target state="translated">Смягчающий межсайтовый скриптинг</target>
        </trans-unit>
        <trans-unit id="a06d1d2ac6f2847420dd550f09dcb2166ef5252d" translate="yes" xml:space="preserve">
          <source>Mitigating packet sniffing attacks</source>
          <target state="translated">Смягчающие атаки обнюхивания пакетов</target>
        </trans-unit>
        <trans-unit id="f7fb61404c2b0add12a8de94361ca1262d06c970" translate="yes" xml:space="preserve">
          <source>Mixed Content</source>
          <target state="translated">Смешанное содержание</target>
        </trans-unit>
        <trans-unit id="4a03a5aca91ea4ae835ab37b3456e345e1c824ad" translate="yes" xml:space="preserve">
          <source>Mixed Content&lt;br/&gt;&lt;small&gt;The definition of 'block-all-mixed-content' in that specification.&lt;/small&gt;</source>
          <target state="translated">Смешанное содержимое &lt;br/&gt;&lt;small&gt;Определение &amp;laquo;блочного смешанного содержимого&amp;raquo; в этой спецификации.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="69248b8f3367a963f6ed1431265d03d542c43778" translate="yes" xml:space="preserve">
          <source>Mixed content</source>
          <target state="translated">Смешанный контент</target>
        </trans-unit>
        <trans-unit id="b1d702459399a2512fba5a402d4d5f26aee34693" translate="yes" xml:space="preserve">
          <source>Mobile</source>
          <target state="translated">Mobile</target>
        </trans-unit>
        <trans-unit id="0efeb0636336539c3bcea3d1fe128360ba3a0b9d" translate="yes" xml:space="preserve">
          <source>Mobile Device Detection</source>
          <target state="translated">Обнаружение мобильных устройств</target>
        </trans-unit>
        <trans-unit id="2ae9795ad44783e26e39ba8db6b981786d39f71b" translate="yes" xml:space="preserve">
          <source>Mobile and Tablet indicators</source>
          <target state="translated">Индикаторы для мобильных и планшетных устройств</target>
        </trans-unit>
        <trans-unit id="165a63ecf9a6d73eec0fb95be501c468fde2ff9d" translate="yes" xml:space="preserve">
          <source>Mobile device detection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="183f26ae5771e151ff87bc3aac010eef4b387ac0" translate="yes" xml:space="preserve">
          <source>Mobile, Tablet or Desktop</source>
          <target state="translated">Мобильный,планшетный или настольный компьютер</target>
        </trans-unit>
        <trans-unit id="6ea99682b2b19e3567543027b85a36a6c1be1a86" translate="yes" xml:space="preserve">
          <source>Model data for a 3D object or scene. Examples include &lt;code&gt;model/3mf&lt;/code&gt; and &lt;code&gt;model/vml&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5864387b4a66bda62e2067620df614155f02985" translate="yes" xml:space="preserve">
          <source>More detail and examples are provided in the topic &lt;a href=&quot;../protocol_upgrade_mechanism&quot;&gt;Protocol upgrade mechanism&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b1e02c916056823b64ff86eab6f60b7e49761cf" translate="yes" xml:space="preserve">
          <source>More specifically, this article is for &lt;strong&gt;web administrators&lt;/strong&gt;, &lt;strong&gt;server developers&lt;/strong&gt;, and &lt;strong&gt;front-end developers&lt;/strong&gt;. Modern browsers handle the client side of cross-origin sharing, including headers and policy enforcement. But the CORS standard means servers have to handle new request and response headers. Another article for server developers discussing &lt;a href=&quot;server-side_access_control&quot;&gt;cross-origin sharing from a server perspective (with PHP code snippets)&lt;/a&gt; is supplementary reading.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1387238e2992cdaf972778c0a1519b7892c33930" translate="yes" xml:space="preserve">
          <source>More specifically, this article is for web administrators, server developers, and front-end developers. Modern browsers handle the client-side components of cross-origin sharing, including headers and policy enforcement. But this new standard means servers have to handle new request and response headers. Another article for server developers discussing &lt;a href=&quot;server-side_access_control&quot;&gt;cross-origin sharing from a server perspective (with PHP code snippets)&lt;/a&gt; is supplementary reading.</source>
          <target state="translated">В частности, эта статья предназначена для веб-администраторов, разработчиков серверов и интерфейсных разработчиков. Современные браузеры обрабатывают клиентские компоненты совместного использования ресурсов между источниками, включая заголовки и применение политик. Но этот новый стандарт означает, что серверы должны обрабатывать новые заголовки запросов и ответов. Еще одна статья для разработчиков серверов, обсуждающая &lt;a href=&quot;server-side_access_control&quot;&gt;совместное использование между источниками с точки зрения сервера (с фрагментами кода PHP),&lt;/a&gt; является дополнительным чтением.</target>
        </trans-unit>
        <trans-unit id="4d672ad094374129b7ac45aa56021f772e22d674" translate="yes" xml:space="preserve">
          <source>More than 15 years of extensions</source>
          <target state="translated">Более 15 лет продления</target>
        </trans-unit>
        <trans-unit id="93defa8d9384e526ec8c563df8553e7f68474a93" translate="yes" xml:space="preserve">
          <source>More than one &lt;a href=&quot;../../headers/access-control-allow-origin&quot;&gt;&lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt;&lt;/a&gt; header was sent by the server. This isn't allowed.</source>
          <target state="translated">Сервер отправил более одного заголовка &lt;a href=&quot;../../headers/access-control-allow-origin&quot;&gt; &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; &lt;/a&gt; . Это не разрешено.</target>
        </trans-unit>
        <trans-unit id="1be543deb68df132d0c179bafbe0c9f9d5ae66cd" translate="yes" xml:space="preserve">
          <source>Most HTTP header field values are defined using common syntax
   components (token, quoted-string, and comment) separated by
   whitespace or specific delimiting characters.  Delimiters are chosen
   from the set of US-ASCII visual characters not allowed in a token
   (DQUOTE and &quot;(),/:;&amp;lt;=&amp;gt;?@[\]{}&quot;).

     token          = 1*tchar

     tchar          = &quot;!&quot; / &quot;#&quot; / &quot;$&quot; / &quot;%&quot; / &quot;&amp;amp;&quot; / &quot;'&quot; / &quot;*&quot;
                    / &quot;+&quot; / &quot;-&quot; / &quot;.&quot; / &quot;^&quot; / &quot;_&quot; / &quot;`&quot; / &quot;|&quot; / &quot;~&quot;
                    / DIGIT / ALPHA
                    ; any VCHAR, except delimiters

   A string of text is parsed as a single value if it is quoted using
   double-quote marks.

     quoted-string  = DQUOTE *( qdtext / quoted-pair ) DQUOTE
     qdtext         = HTAB / SP /%x21 / %x23-5B / %x5D-7E / obs-text
     obs-text       = %x80-FF

   Comments can be included in some HTTP header fields by surrounding
   the comment text with parentheses.  Comments are only allowed in
   fields containing &quot;comment&quot; as part of their field value definition.

     comment        = &quot;(&quot; *( ctext / quoted-pair / comment ) &quot;)&quot;
     ctext          = HTAB / SP / %x21-27 / %x2A-5B / %x5D-7E / obs-text

   The backslash octet (&quot;\&quot;) can be used as a single-octet quoting
   mechanism within quoted-string and comment constructs.  Recipients
   that process the value of a quoted-string MUST handle a quoted-pair
   as if it were replaced by the octet following the backslash.

     quoted-pair    = &quot;\&quot; ( HTAB / SP / VCHAR / obs-text )

   A sender SHOULD NOT generate a quoted-pair in a quoted-string except
   where necessary to quote DQUOTE and backslash octets occurring within
   that string.  A sender SHOULD NOT generate a quoted-pair in a comment
   except where necessary to quote parentheses [&quot;(&quot; and &quot;)&quot;] and
   backslash octets occurring within that comment.</source>
          <target state="translated">Большинство значений полей заголовка HTTP определяются с использованием общих компонентов синтаксиса (токена, строки в кавычках и комментария), разделенных пробелами или определенными ограничивающими символами. Разделители выбираются из набора визуальных символов US-ASCII, запрещенных в токене (DQUOTE и &quot;(), / :; &amp;lt;=&amp;gt;? @ [\] {}&quot;). token = 1 * tchar tchar = &quot;!&quot; / &quot;#&quot; / &quot;$&quot; / &quot;%&quot; / &quot;&amp;amp;&quot; / &quot;'&quot; / &quot;*&quot; / &quot;+&quot; / &quot;-&quot; / &quot;.&quot; / &quot;^&quot; / &quot;_&quot; / &quot;` &quot;/&quot; | &quot; / &quot;~&quot; / ЦИФРА / АЛЬФА; любой VCHAR, кроме разделителей. Строка текста анализируется как одно значение, если она заключена в двойные кавычки.quoted-string = DQUOTE * (qdtext / quoted-pair) DQUOTE qdtext = HTAB / SP /% x21 /% x23-5B /% x5D-7E / obs-text obs-text =% x80-FF Комментарии могут быть включены в некоторые Поля заголовка HTTP, заключив текст комментария в круглые скобки. Комментарии разрешены только в полях, содержащих &amp;laquo;комментарий&amp;raquo; как часть определения значения поля. comment = &quot;(&quot; * (ctext / quoted-pair / comment) &quot;)&quot; ctext = HTAB / SP /% x21-27 /% x2A-5B /% x5D-7E / obs-text Октет обратной косой черты (&quot;\&quot;) может использоваться как механизм однооктетного цитирования в конструкциях строки в кавычках и комментариев. Получатели, которые обрабатывают значение строки в кавычках, ДОЛЖНЫ обрабатывать пару в кавычках, как если бы она была заменена октетом, следующим за обратной косой чертой. quoted-pair = &quot;\ &quot;(HTAB / SP / VCHAR / obs-text) Отправителю НЕ СЛЕДУЕТ генерировать пару в кавычках в строке в кавычках, за исключением случаев, когда необходимо заключить в кавычки октеты DQUOTE и обратную косую черту, встречающиеся в этой строке. Отправителю НЕ СЛЕДУЕТ генерировать пару в кавычках в комментарии, за исключением случаев, когда необходимо заключать в кавычки круглые скобки [&quot;(&quot; и &quot;)&quot;] и октеты обратной косой черты, встречающиеся в этом комментарии.</target>
        </trans-unit>
        <trans-unit id="812bdf18b5a605c99457c43782814e036fcbedcf" translate="yes" xml:space="preserve">
          <source>Most HTTP responses include an entity which contains information for
   interpretation by a human user. Naturally, it is desirable to supply
   the user with the &quot;best available&quot; entity corresponding to the
   request. Unfortunately for servers and caches, not all users have the
   same preferences for what is &quot;best,&quot; and not all user agents are
   equally capable of rendering all entity types. For that reason, HTTP
   has provisions for several mechanisms for &quot;content negotiation&quot; --
   the process of selecting the best representation for a given response
   when there are multiple representations available.

      Note: This is not called &quot;format negotiation&quot; because the
      alternate representations may be of the same media type, but use
      different capabilities of that type, be in different languages,
      etc. 

   Any response containing an entity-body MAY be subject to negotiation,
   including error responses.

   There are two kinds of content negotiation which are possible in
   HTTP: server-driven and agent-driven negotiation. These two kinds of
   negotiation are orthogonal and thus may be used separately or in
   combination. One method of combination, referred to as transparent
   negotiation, occurs when a cache uses the agent-driven negotiation
   information provided by the origin server in order to provide
   server-driven negotiation for subsequent requests.</source>
          <target state="translated">Большинство HTTP-ответов включает в себя сущность,которая содержит информацию для интерпретации человеком.Естественно,желательно предоставить пользователю &quot;самую лучшую доступную&quot; сущность,соответствующую запросу.К сожалению,для серверов и кэшей не все пользователи имеют одинаковые предпочтения в отношении того,что является &quot;лучшим&quot;,и не все пользовательские агенты одинаково способны отрисовывать все типы сущностей.По этой причине в HTTP предусмотрено несколько механизмов &quot;согласования содержимого&quot;-процесс выбора наилучшего представления для заданного ответа при наличии нескольких представлений.Замечание:Это не называется &quot;согласованием форматов&quot;,потому что альтернативные представления могут быть одного и того же типа носителей,но использовать разные возможности этого типа,быть на разных языках и т.д.Любой ответ,содержащий сущность-тело MAY,подлежит согласованию,включая ответы на ошибки.Существует два типа согласования содержимого,которые возможны в HTTP:согласование,управляемое сервером,и согласование,управляемое агентом.Эти два вида переговоров ортогональны и поэтому могут использоваться по отдельности или в комбинации.Один из методов сочетания,называемый прозрачным согласованием,возникает,когда кэш использует управляемую агентом информацию о согласовании,предоставленную исходным сервером,чтобы обеспечить управляемое сервером согласование для последующих запросов.</target>
        </trans-unit>
        <trans-unit id="7460036b5d618f72b9d5e87b1f21806669419e9d" translate="yes" xml:space="preserve">
          <source>Most browsers set the name and version in the format &lt;em&gt;BrowserName/VersionNumber&lt;/em&gt;, with the notable exception of Internet Explorer. But as the name is not the only information in a user agent string that is in that format, you can not discover the name of the browser, you can only check if the name you are looking for. But note that some browsers are lying: Chrome for example reports both as Chrome and Safari. So to detect Safari you have to check for the Safari string and the absence of the Chrome string, Chromium often reports itself as Chrome too or Seamonkey sometimes reports itself as Firefox.</source>
          <target state="translated">Большинство браузеров устанавливают имя и версию в формате &lt;em&gt;BrowserName / VersionNumber&lt;/em&gt; , за исключением Internet Explorer. Но поскольку имя - не единственная информация в строке пользовательского агента, которая находится в этом формате, вы не можете узнать имя браузера, вы можете только проверить, если имя вы ищете. Но обратите внимание, что некоторые браузеры лгут: например, Chrome сообщает как Chrome, так и Safari. Таким образом, чтобы обнаружить Safari, вы должны проверить строку Safari и отсутствие строки Chrome, Chromium часто также сообщает о себе как Chrome, а Seamonkey иногда сообщает о себе как Firefox.</target>
        </trans-unit>
        <trans-unit id="e4008ade4042fb7c7a965933bdf292eb96d44308" translate="yes" xml:space="preserve">
          <source>Most importantly, it assumed no other browsers would support the feature. Support could have been added to other browsers at any time, but this code would have continued choosing the inferior path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8812a6ba3333d88ab3035fd80151158d9cd5096a" translate="yes" xml:space="preserve">
          <source>Most of the standard JavaScript functionality is available for use in the &lt;code&gt;FindProxyForURL()&lt;/code&gt; function. As an example, to set different proxies based on the protocol the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith&quot;&gt;&lt;code&gt;startsWith()&lt;/code&gt;&lt;/a&gt; function can be used:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02c0fa975a9a4f1c1a39487a5147f2636b69eb9e" translate="yes" xml:space="preserve">
          <source>Most of the standard JavaScript functionality is available for use in the FindProxyForURL() function. As an example, to set different proxies based on the protocol the substring() function can be used:</source>
          <target state="translated">Большая часть стандартной функциональности JavaScript доступна для использования в функции FindProxyForURL().В качестве примера,для установки различных прокси,основанных на протоколе,может быть использована функция подстроки():</target>
        </trans-unit>
        <trans-unit id="92624466818eb51fd53a17208603205adea7766c" translate="yes" xml:space="preserve">
          <source>Most of the time identity and location of a Web resource are shared, this can be changed with the &lt;a href=&quot;headers/alt-svc&quot;&gt;&lt;code&gt;Alt-Svc&lt;/code&gt;&lt;/a&gt; header.</source>
          <target state="translated">В большинстве случаев идентичность и местоположение веб-ресурса являются общими, это можно изменить с &lt;a href=&quot;headers/alt-svc&quot;&gt; &lt;code&gt;Alt-Svc&lt;/code&gt; &lt;/a&gt; заголовка Alt-Svc .</target>
        </trans-unit>
        <trans-unit id="112a5d486922ba62900e7ec6537ffa88c946451f" translate="yes" xml:space="preserve">
          <source>Most of the time the identity and location of a web resource are shared, this can be changed with the &lt;a href=&quot;headers/alt-svc&quot;&gt;&lt;code&gt;Alt-Svc&lt;/code&gt;&lt;/a&gt; header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b365dcd7a6f5dfd969c8f5a85717b49e744e8f9" translate="yes" xml:space="preserve">
          <source>Most of the time this is a server problem, and if the server cannot detect it, it will send back a &lt;a href=&quot;status/500&quot;&gt;&lt;code&gt;500&lt;/code&gt;&lt;/a&gt;&lt;code&gt;Internal Server Error&lt;/code&gt;. If you encounter such an error soon after modifying a server configuration, this is likely a redirection loop.</source>
          <target state="translated">В большинстве случаев это проблема сервера, и если сервер не может ее обнаружить, он отправит обратно &lt;a href=&quot;status/500&quot;&gt; &lt;code&gt;500&lt;/code&gt; &lt;/a&gt; &lt;code&gt;Internal Server Error&lt;/code&gt; . Если вы столкнулись с такой ошибкой вскоре после изменения конфигурации сервера, скорее всего, это петля перенаправления.</target>
        </trans-unit>
        <trans-unit id="bd93e26ede2192a4f8e353e3bbf7ab476b541a23" translate="yes" xml:space="preserve">
          <source>Most rendering engines put the version number in the &lt;em&gt;RenderingEngine/VersionNumber&lt;/em&gt; token, with the notable exception of Gecko. Gecko puts the Gecko version number in the comment part of the User Agent after the &lt;code&gt;rv:&lt;/code&gt; string. From Gecko 14 for the mobile version and Gecko 17 for the desktop version, it also puts this value in the &lt;code&gt;Gecko/version&lt;/code&gt; token (previous version put there the build date, then a fixed date called the GeckoTrail).</source>
          <target state="translated">Большинство движков рендеринга помещают номер версии в токен &lt;em&gt;RenderingEngine / VersionNumber&lt;/em&gt; , за исключением Gecko. Gecko помещает номер версии Gecko в часть комментариев пользовательского агента после строки &lt;code&gt;rv:&lt;/code&gt; . Начиная с Gecko 14 для мобильной версии и Gecko 17 для настольной версии, он также помещает это значение в токен &lt;code&gt;Gecko/version&lt;/code&gt; (предыдущая версия указывала дату сборки, а затем фиксированную дату, называемую GeckoTrail).</target>
        </trans-unit>
        <trans-unit id="5accc4ae9c97c9b25a00a6dd3d1020db39dc3e71" translate="yes" xml:space="preserve">
          <source>Most values in SETTINGS benefit from or require an understanding of
   when the peer has received and applied the changed parameter values.
   In order to provide such synchronization timepoints, the recipient of
   a SETTINGS frame in which the ACK flag is not set MUST apply the
   updated parameters as soon as possible upon receipt.

   The values in the SETTINGS frame MUST be processed in the order they
   appear, with no other frame processing between values.  Unsupported
   parameters MUST be ignored.  Once all values have been processed, the 

   recipient MUST immediately emit a SETTINGS frame with the ACK flag
   set.  Upon receiving a SETTINGS frame with the ACK flag set, the
   sender of the altered parameters can rely on the setting having been
   applied.

   If the sender of a SETTINGS frame does not receive an acknowledgement
   within a reasonable amount of time, it MAY issue a connection error
   (&lt;a href=&quot;#section-5.4.1&quot;&gt;Section 5.4.1&lt;/a&gt;) of type SETTINGS_TIMEOUT.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c37f0d1445fedf718be400753c3dbf6a2412f759" translate="yes" xml:space="preserve">
          <source>Most web servers send unrecognized resources as the &lt;code&gt;application/octet-stream&lt;/code&gt; MIME type. For security reasons, most browsers do not allow setting a custom default action for such resources, forcing the user to save it to disk to use it.</source>
          <target state="translated">Большинство веб-серверов отправляют нераспознанные ресурсы в виде MIME-типа &lt;code&gt;application/octet-stream&lt;/code&gt; . По соображениям безопасности большинство браузеров не позволяют устанавливать пользовательское действие по умолчанию для таких ресурсов, вынуждая пользователя сохранять его на диск, чтобы использовать его.</target>
        </trans-unit>
        <trans-unit id="6a8946eed2c78e3706e8f2276333fa60dc5390eb" translate="yes" xml:space="preserve">
          <source>Moving to a different domain. For example, your company has been renamed and you when searching for the old name, you want people used to the old company Web site still find you under the new name.</source>
          <target state="translated">Переезд в другую область.Например,ваша компания была переименована,и вы,когда ищете старое название,хотите,чтобы люди,привыкшие к старому веб-сайту компании,все равно нашли вас под новым названием.</target>
        </trans-unit>
        <trans-unit id="fe05d533d29bed0680c710b5026f9e8e7d2dbbe4" translate="yes" xml:space="preserve">
          <source>Moving to a new domain</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ef3be393a351dfa2ef963cfdc34f9e6563cc892" translate="yes" xml:space="preserve">
          <source>Mozilla (Gecko, Firefox)</source>
          <target state="translated">Мозилла (Гекко,Файрфокс)</target>
        </trans-unit>
        <trans-unit id="a0934075575145263129d33cbbd963bcda3860f4" translate="yes" xml:space="preserve">
          <source>Mozilla Observatory</source>
          <target state="translated">Mozilla Обсерватория</target>
        </trans-unit>
        <trans-unit id="decab94514e261dda8ed0ab5f5a50868157343e3" translate="yes" xml:space="preserve">
          <source>Mozilla web security guidelines</source>
          <target state="translated">рекомендации Mozilla по веб-безопасности</target>
        </trans-unit>
        <trans-unit id="0fee1a221e5d621522c4cae25d2d3f0781412c73" translate="yes" xml:space="preserve">
          <source>Mozilla/5.0 (Android 4.4; Mobile; rv:41.0) Gecko/41.0 Firefox/41.0</source>
          <target state="translated">Mozilla/5.0 (Android 4.4;Mobile;rv:41.0)Gecko/41.0 Firefox/41.0</target>
        </trans-unit>
        <trans-unit id="06ca2e8b107ebc3017f1b6838abe49d90a2337b1" translate="yes" xml:space="preserve">
          <source>Mozilla/5.0 (Android 4.4; Tablet; rv:41.0) Gecko/41.0 Firefox/41.0</source>
          <target state="translated">Mozilla/5.0 (Android 4.4;планшет;rv:41.0)Gecko/41.0 Firefox/41.0</target>
        </trans-unit>
        <trans-unit id="12388f0ea73a7de9d571898b4be2154ce15cb9f4" translate="yes" xml:space="preserve">
          <source>Mozilla/5.0 (Android 7.0; Mobile; rv:62.0) Gecko/62.0 Firefox/62.0</source>
          <target state="translated">Mozilla/5.0 (Android 7.0;Mobile;rv:62.0)Gecko/62.0 Firefox/62.0</target>
        </trans-unit>
        <trans-unit id="adf944b54ec9b6df9ba954b5789e4f037d57ad12" translate="yes" xml:space="preserve">
          <source>Mozilla/5.0 (Android; Mobile; rv:13.0) Gecko/13.0 Firefox/13.0</source>
          <target state="translated">Mozilla/5.0 (Android;Mobile;rv:13.0)Gecko/13.0 Firefox/13.0</target>
        </trans-unit>
        <trans-unit id="4d33bd8f87ba06abe4fe1c0b9f3fd3d4ef39a64b" translate="yes" xml:space="preserve">
          <source>Mozilla/5.0 (Android; Mobile; rv:40.0) Gecko/40.0 Firefox/40.0</source>
          <target state="translated">Mozilla/5.0 (Android;Mobile;rv:40.0)Gecko/40.0 Firefox/40.0</target>
        </trans-unit>
        <trans-unit id="b1165e7e7925427d068dfe4278ee0a0ab81d03a6" translate="yes" xml:space="preserve">
          <source>Mozilla/5.0 (Android; Tablet; rv:40.0) Gecko/40.0 Firefox/40.0</source>
          <target state="translated">Mozilla/5.0 (Android;планшет;rv:40.0)Gecko/40.0 Firefox/40.0</target>
        </trans-unit>
        <trans-unit id="1eff4492cf201da272b181a0826abf69087bdbae" translate="yes" xml:space="preserve">
          <source>Mozilla/5.0 (Linux; Android 4.4.2); Nexus 5 Build/KOT49H) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/33.0.1750.117 Mobile Safari/537.36 OPR/20.0.1396.72047</source>
          <target state="translated">Mozilla/5.0 (Linux;Android 4.4.2);Nexus 5 Build/KOT49H)AppleWebKit/537.36 (KHTML,как и Gecko)Chrome/33.0.1750.117 Mobile Safari/537.36 OPR/20.0.1396.72047</target>
        </trans-unit>
        <trans-unit id="187263e2548b4eea2d8d1b7718d1e58bc486ee8f" translate="yes" xml:space="preserve">
          <source>Mozilla/5.0 (Linux; Android 5.1.1) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Focus/1.1 Chrome/59.0.3017.125 Safari/537.36</source>
          <target state="translated">Mozilla/5.0 (Linux;Android 5.1.1)AppleWebKit/537.36 (KHTML,как и Gecko)Версия/4.0 Focus/1.1 Chrome/59.0.3017.125 Safari/537.36</target>
        </trans-unit>
        <trans-unit id="f069d17af594e5cc6ceb8bcf6da674fc68ec9615" translate="yes" xml:space="preserve">
          <source>Mozilla/5.0 (Linux; Android 7.0) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Focus/1.0 Chrome/59.0.3029.83 Mobile Safari/537.36</source>
          <target state="translated">Mozilla/5.0 (Linux;Android 7.0)AppleWebKit/537.36 (KHTML,как и Gecko)Версия/4.0 Focus/1.0 Chrome/59.0.3029.83 Мобильный Safari/537.36</target>
        </trans-unit>
        <trans-unit id="5cdca6439d9f4f75159a9c3f7e09c52e695e1e6d" translate="yes" xml:space="preserve">
          <source>Mozilla/5.0 (Linux; Android 7.0) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Focus/1.0 Chrome/59.0.3029.83 Safari/537.36</source>
          <target state="translated">Mozilla/5.0 (Linux;Android 7.0)AppleWebKit/537.36 (KHTML,как и Gecko)Версия/4.0 Focus/1.0 Chrome/59.0.3029.83 Safari/537.36</target>
        </trans-unit>
        <trans-unit id="d3772cfc2095a71baa2d031dbccc5f42fe0a9faa" translate="yes" xml:space="preserve">
          <source>Mozilla/5.0 (Linux; Android 7.0) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Focus/4.1 Chrome/62.0.3029.83 Mobile Safari/537.36</source>
          <target state="translated">Mozilla/5.0 (Linux;Android 7.0)AppleWebKit/537.36 (KHTML,как и Gecko)Версия/4.0 Focus/4.1 Chrome/62.0.3029.83 Мобильный Safari/537.36</target>
        </trans-unit>
        <trans-unit id="5c9a7c5212d961b33810bd5d24bd5d65d22acc7b" translate="yes" xml:space="preserve">
          <source>Mozilla/5.0 (Linux; Android 7.0) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Klar/1.0 Chrome/58.0.3029.83 Mobile Safari/537.36</source>
          <target state="translated">Mozilla/5.0 (Linux;Android 7.0)AppleWebKit/537.36 (KHTML,как и Gecko)Версия/4.0 Klar/1.0 Chrome/58.0.3029.83 Мобильный Safari/537.36</target>
        </trans-unit>
        <trans-unit id="3ebf95e0e00b50d02895700858ee637ccce16aee" translate="yes" xml:space="preserve">
          <source>Mozilla/5.0 (Linux; Android 7.1.2) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Focus/3.0 Chrome/59.0.3017.125 Safari/537.36</source>
          <target state="translated">Mozilla/5.0 (Linux;Android 7.1.2)AppleWebKit/537.36 (KHTML,как и Gecko)Версия/4.0 Focus/3.0 Chrome/59.0.3017.125 Safari/537.36</target>
        </trans-unit>
        <trans-unit id="2107ee483b37620cd27469a83622677f75ba74e7" translate="yes" xml:space="preserve">
          <source>Mozilla/5.0 (Linux; U; Android 4.0.3; de-ch; HTC Sensation Build/IML74K) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30</source>
          <target state="translated">Mozilla/5.0 (Linux;U;Android 4.0.3;dech;HTC Sensation Build/IML74K)AppleWebKit/534.30 (KHTML,как и Gecko)Версия/4.0 Мобильный Safari/534.30</target>
        </trans-unit>
        <trans-unit id="b1d3f926e92bfa21fd4b0d0fe771e000d5d2b871" translate="yes" xml:space="preserve">
          <source>Mozilla/5.0 (Macintosh; Intel Mac OS X 10.5; rv:10.0.1) Gecko/20100101 Firefox/10.0.1 SeaMonkey/2.7.1</source>
          <target state="translated">Mozilla/5.0 (Macintosh;Intel Mac OS X 10.5;rv:10.0.1)Gecko/20100101 Firefox/10.0.1 SeaMonkey/2.7.1</target>
        </trans-unit>
        <trans-unit id="6d87ab26fc3278b385f67646186cafe62f1226c0" translate="yes" xml:space="preserve">
          <source>Mozilla/5.0 (Macintosh; Intel Mac OS X 10.5; rv:2.0.1) Gecko/20100101 Firefox/4.0.1 Camino/2.2.1</source>
          <target state="translated">Mozilla/5.0 (Macintosh;Intel Mac OS X 10.5;rv:2.0.1)Gecko/20100101 Firefox/4.0.1 Camino/2.2.1</target>
        </trans-unit>
        <trans-unit id="08a47789f901ac4697d74b3d7f335103a2d1b4b2" translate="yes" xml:space="preserve">
          <source>Mozilla/5.0 (Macintosh; Intel Mac OS X &lt;em&gt;x.y&lt;/em&gt;; rv:10.0) Gecko/20100101 Firefox/10.0</source>
          <target state="translated">Mozilla / 5.0 (Macintosh; Intel Mac OS X &lt;em&gt;xy&lt;/em&gt; ; rv: 10.0) Gecko / 20100101 Firefox / 10.0</target>
        </trans-unit>
        <trans-unit id="92e71ac1941b70b8a195b2038b988eb15e2633cf" translate="yes" xml:space="preserve">
          <source>Mozilla/5.0 (Macintosh; PPC Mac OS X &lt;em&gt;x.y&lt;/em&gt;; rv:10.0) Gecko/20100101 Firefox/10.0</source>
          <target state="translated">Mozilla / 5.0 (Macintosh; PPC Mac OS X &lt;em&gt;xy&lt;/em&gt; ; rv: 10.0) Gecko / 20100101 Firefox / 10.0</target>
        </trans-unit>
        <trans-unit id="49a7b83668313b9e1281eda63779e0047234a704" translate="yes" xml:space="preserve">
          <source>Mozilla/5.0 (Maemo; Linux armv7l; rv:10.0) Gecko/20100101 Firefox/10.0 Fennec/10.0</source>
          <target state="translated">Mozilla/5.0 (Maemo;Linux armv7l;rv:10.0)Gecko/20100101 Firefox/10.0 Fennec/10.0</target>
        </trans-unit>
        <trans-unit id="4912bc7f8d14158acb5958155825887af72f69e0" translate="yes" xml:space="preserve">
          <source>Mozilla/5.0 (Maemo; Linux armv7l; rv:10.0.1) Gecko/20100101 Firefox/10.0.1 Fennec/10.0.1</source>
          <target state="translated">Mozilla/5.0 (Maemo;Linux armv7l;rv:10.0.1)Gecko/20100101 Firefox/10.0.1 Fennec/10.0.1</target>
        </trans-unit>
        <trans-unit id="24d7bfb4e448eb6a6f2b2c05f9ccace8303e7951" translate="yes" xml:space="preserve">
          <source>Mozilla/5.0 (Mobile; &lt;em&gt;&lt;strong&gt;nnnn;&lt;/strong&gt;&lt;/em&gt; rv:26.0) Gecko/26.0 Firefox/26.0</source>
          <target state="translated">Mozilla / 5.0 (мобильный; &lt;em&gt;&lt;strong&gt;nnnn;&lt;/strong&gt;&lt;/em&gt; rv: 26.0) Gecko / 26.0 Firefox / 26.0</target>
        </trans-unit>
        <trans-unit id="fe824479059b41314b08fccf6ffd2df216b210a4" translate="yes" xml:space="preserve">
          <source>Mozilla/5.0 (Mobile; rv:26.0) Gecko/26.0 Firefox/26.0</source>
          <target state="translated">Mozilla/5.0 (мобильный;rv:26.0)Gecko/26.0 Firefox/26.0</target>
        </trans-unit>
        <trans-unit id="1e65d98e39260d268ec140c75dfc14eb88fe1d22" translate="yes" xml:space="preserve">
          <source>Mozilla/5.0 (TV; rv:44.0) Gecko/44.0 Firefox/44.0</source>
          <target state="translated">Mozilla/5.0 (TV;rv:44.0)Gecko/44.0 Firefox/44.0</target>
        </trans-unit>
        <trans-unit id="1b0c7be81a38400e6eab6ae6602316f1c9727b89" translate="yes" xml:space="preserve">
          <source>Mozilla/5.0 (Tablet; rv:26.0) Gecko/26.0 Firefox/26.0</source>
          <target state="translated">Mozilla/5.0 (планшет;rv:26.0)Gecko/26.0 Firefox/26.0</target>
        </trans-unit>
        <trans-unit id="d5494fe16df11ab5f5d2c945da5478c2861a6327" translate="yes" xml:space="preserve">
          <source>Mozilla/5.0 (Windows NT 5.2; rv:10.0.1) Gecko/20100101 Firefox/10.0.1 SeaMonkey/2.7.1</source>
          <target state="translated">Mozilla/5.0 (Windows NT 5.2;rv:10.0.1)Gecko/20100101 Firefox/10.0.1 SeaMonkey/2.7.1</target>
        </trans-unit>
        <trans-unit id="c103c7575720327d828e07fcd68a2f214656eb84" translate="yes" xml:space="preserve">
          <source>Mozilla/5.0 (Windows NT &lt;em&gt;x&lt;/em&gt;.&lt;em&gt;y&lt;/em&gt;; WOW64; rv:10.0) Gecko/20100101 Firefox/10.0</source>
          <target state="translated">Mozilla / 5.0 (Windows NT &lt;em&gt;x&lt;/em&gt; . &lt;em&gt;Y&lt;/em&gt; ; WOW64; rv: 10.0) Gecko / 20100101 Firefox / 10.0</target>
        </trans-unit>
        <trans-unit id="e357311b1eddbb286305456c0cae57cb232b5c1f" translate="yes" xml:space="preserve">
          <source>Mozilla/5.0 (Windows NT &lt;em&gt;x&lt;/em&gt;.&lt;em&gt;y&lt;/em&gt;; Win64; x64; rv:10.0) Gecko/20100101 Firefox/10.0</source>
          <target state="translated">Mozilla / 5.0 (Windows NT &lt;em&gt;x&lt;/em&gt; . &lt;em&gt;Y&lt;/em&gt; ; Win64; x64; rv: 10.0) Gecko / 20100101 Firefox / 10.0</target>
        </trans-unit>
        <trans-unit id="325bb5b76845bcf2d6d17880f0df8de3120fa91b" translate="yes" xml:space="preserve">
          <source>Mozilla/5.0 (Windows NT &lt;em&gt;x&lt;/em&gt;.&lt;em&gt;y&lt;/em&gt;; rv:10.0) Gecko/20100101 Firefox/10.0</source>
          <target state="translated">Mozilla / 5.0 (Windows NT &lt;em&gt;x&lt;/em&gt; . &lt;em&gt;Y&lt;/em&gt; ; rv: 10.0) Gecko / 20100101 Firefox / 10.0</target>
        </trans-unit>
        <trans-unit id="81f3af5f3aa598d0b0fee4970a50aaf001611378" translate="yes" xml:space="preserve">
          <source>Mozilla/5.0 (Windows Phone 10.0; Android 6.0.1; Xbox; Xbox One) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Mobile Safari/537.36 Edge/16.16299</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5530c08605b863c3ac834dac7f9e551adfc1e552" translate="yes" xml:space="preserve">
          <source>Mozilla/5.0 (X11; Linux i686 on x86_64; rv:10.0) Gecko/20100101 Firefox/10.0</source>
          <target state="translated">Mozilla/5.0 (X11;Linux i686 на x86_64;rv:10.0)Gecko/20100101 Firefox/10.0</target>
        </trans-unit>
        <trans-unit id="b117257c04f02d34e73001cfc8d0da1abaac01f8" translate="yes" xml:space="preserve">
          <source>Mozilla/5.0 (X11; Linux i686; rv:10.0) Gecko/20100101 Firefox/10.0</source>
          <target state="translated">Mozilla/5.0 (X11;Linux i686;rv:10.0)Gecko/20100101 Firefox/10.0</target>
        </trans-unit>
        <trans-unit id="fa04af9816f0793fdc1a867eef08c9bba4602d70" translate="yes" xml:space="preserve">
          <source>Mozilla/5.0 (X11; Linux i686; rv:10.0.1) Gecko/20100101 Firefox/10.0.1 SeaMonkey/2.7.1</source>
          <target state="translated">Mozilla/5.0 (X11;Linux i686;rv:10.0.1)Gecko/20100101 Firefox/10.0.1 SeaMonkey/2.7.1</target>
        </trans-unit>
        <trans-unit id="3d160a2e76c2d144bd854abad33abe579e0d1e79" translate="yes" xml:space="preserve">
          <source>Mozilla/5.0 (X11; Linux x86_64; rv:10.0) Gecko/20100101 Firefox/10.0</source>
          <target state="translated">Mozilla/5.0 (X11;Linux x86_64;rv:10.0)Gecko/20100101 Firefox/10.0</target>
        </trans-unit>
        <trans-unit id="709cd7ecb895ccc0d811c9b3e76ade66b0e1f3aa" translate="yes" xml:space="preserve">
          <source>Mozilla/5.0 (compatible; MSIE 9.0; Windows Phone OS 7.5; Trident/5.0; IEMobile/9.0)</source>
          <target state="translated">Mozilla/5.0 (совместимый;MSIE 9.0;Windows Phone OS 7.5;Trident/5.0;IEMobile/9.0)</target>
        </trans-unit>
        <trans-unit id="eb659b396a68f6ea514ab25964c9404e2397367b" translate="yes" xml:space="preserve">
          <source>Mozilla/5.0 (iPad; CPU iPhone OS 8_3 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) &lt;strong&gt;FxiOS/1.0&lt;/strong&gt; Mobile/12F69 Safari/600.1.4</source>
          <target state="translated">Mozilla / 5.0 (iPad; процессор iPhone OS 8_3, например Mac OS X) AppleWebKit / 600.1.4 (KHTML, например Gecko) &lt;strong&gt;FxiOS / 1.0&lt;/strong&gt; Mobile / 12F69 Safari / 600.1.4</target>
        </trans-unit>
        <trans-unit id="4e72c500d652c15de7cda1433b6379f4dfd1c6c4" translate="yes" xml:space="preserve">
          <source>Mozilla/5.0 (iPhone; CPU iPhone OS 8_3 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) &lt;strong&gt;FxiOS/1.0&lt;/strong&gt; Mobile/12F69 Safari/600.1.4</source>
          <target state="translated">Mozilla / 5.0 (iPhone; процессор iPhone OS 8_3, например Mac OS X) AppleWebKit / 600.1.4 (KHTML, например Gecko) &lt;strong&gt;FxiOS / 1.0&lt;/strong&gt; Mobile / 12F69 Safari / 600.1.4</target>
        </trans-unit>
        <trans-unit id="f8a8856f3bffbe976e558e919bc886558bcab84f" translate="yes" xml:space="preserve">
          <source>Mozilla/5.0 (iPod touch; CPU iPhone OS 8_3 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) &lt;strong&gt;FxiOS/1.0&lt;/strong&gt; Mobile/12F69 Safari/600.1.4</source>
          <target state="translated">Mozilla / 5.0 (iPod touch; процессор iPhone OS 8_3, например Mac OS X) AppleWebKit / 600.1.4 (KHTML, например Gecko) &lt;strong&gt;FxiOS / 1.0&lt;/strong&gt; Mobile / 12F69 Safari / 600.1.4</target>
        </trans-unit>
        <trans-unit id="6c18301fd3a10882deaa39ee10288f7f929f1e77" translate="yes" xml:space="preserve">
          <source>Multipart ranges</source>
          <target state="translated">Многокомпонентные диапазоны</target>
        </trans-unit>
        <trans-unit id="6492593dec5dae0d0f4611760da5545108ace9bb" translate="yes" xml:space="preserve">
          <source>Multipart types</source>
          <target state="translated">Типы,состоящие из нескольких частей</target>
        </trans-unit>
        <trans-unit id="d39efeff869bd677fa96ec0c45b55ce64ce505cd" translate="yes" xml:space="preserve">
          <source>Multiple content security policies</source>
          <target state="translated">Многочисленные политики безопасности контента</target>
        </trans-unit>
        <trans-unit id="16f27a967676caac72dd673312bcaadcdd0612f0" translate="yes" xml:space="preserve">
          <source>Multiple directives are comma-separated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faf6894b2c9c5935b46458a0fd870cc102ebf570" translate="yes" xml:space="preserve">
          <source>Multiple entries can be specified in a single &lt;code&gt;Alt-Svc&lt;/code&gt; header using comma as separator. In that case, early entries are considered more preferable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="313424e8960d9a8154e0f8c4d03334fd46afad67" translate="yes" xml:space="preserve">
          <source>Multiple headers</source>
          <target state="translated">Несколько заголовков</target>
        </trans-unit>
        <trans-unit id="8df1cc9a00d7049c317f44f9975e955ab77a7480" translate="yes" xml:space="preserve">
          <source>Multiple host/domain values are &lt;em&gt;not&lt;/em&gt; allowed, but if a domain &lt;em&gt;is&lt;/em&gt; specified, then subdomains are always included.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdca688fc4125e8ff0c8017144fee0ab18afe32f" translate="yes" xml:space="preserve">
          <source>Multiple language tags are separated by comma. Each language tag is a sequence of one or more case-insensitive subtags, each separated by a hyphen character (&quot;&lt;code&gt;-&lt;/code&gt;&quot;, &lt;code&gt;%x2D&lt;/code&gt;). In most cases, a language tag consists of a primary language subtag that identifies a broad family of related languages (e.g., &quot;&lt;code&gt;en&lt;/code&gt;&quot; = English), which is optionally followed by a series of subtags that refine or narrow that language's range (e.g., &quot;&lt;code&gt;en-CA&lt;/code&gt;&quot; = the variety of English as communicated in Canada).</source>
          <target state="translated">Несколько языковых тегов разделяются запятыми. Каждый языковой тег представляет собой последовательность из одного или нескольких &lt;code&gt;%x2D&lt;/code&gt; регистра, каждый из которых разделен знаком дефиса (&quot; &lt;code&gt;-&lt;/code&gt; &quot;, % x2D ). В большинстве случаев языковой тег состоит из вложенного тега основного языка, который идентифицирует широкую группу родственных языков (например, &quot; &lt;code&gt;en&lt;/code&gt; &quot; = английский), за которым необязательно следует ряд вложенных тегов, которые уточняют или сужают диапазон этого языка (например, &quot; &lt;code&gt;en-CA&lt;/code&gt; &quot; = разновидность английского языка, используемая в Канаде).</target>
        </trans-unit>
        <trans-unit id="340550b49e9608b118f45b82b60784f8192c8553" translate="yes" xml:space="preserve">
          <source>Multipurpose Internet Mail Extensions (MIME) Part Two: Media Types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b290c69355489b91460f7513bfaca4d5713cfa85" translate="yes" xml:space="preserve">
          <source>Musical Instrument Digital Interface (MIDI)</source>
          <target state="translated">Цифровой интерфейс музыкального инструмента (MIDI)</target>
        </trans-unit>
        <trans-unit id="38d7a0163e1ee433772d04a8bfb66c70abef1a41" translate="yes" xml:space="preserve">
          <source>Must contain</source>
          <target state="translated">Должен содержать</target>
        </trans-unit>
        <trans-unit id="7eb2625cecaa68b91f751ad2fe9dc1b532d0b9b2" translate="yes" xml:space="preserve">
          <source>Must not contain</source>
          <target state="translated">Не должен содержать</target>
        </trans-unit>
        <trans-unit id="b51a60734da64be0e618bacbea2865a8a7dcd669" translate="yes" xml:space="preserve">
          <source>N</source>
          <target state="translated">N</target>
        </trans-unit>
        <trans-unit id="efc3e3a9091331fea65bdf78fb5cc0f8f7a3acf5" translate="yes" xml:space="preserve">
          <source>NEL</source>
          <target state="translated">NEL</target>
        </trans-unit>
        <trans-unit id="7fba45dc69034264a59f6cf73b586c39dab3f873" translate="yes" xml:space="preserve">
          <source>Name/alias of an internal proxy.</source>
          <target state="translated">Имя/название внутреннего доверенного лица.</target>
        </trans-unit>
        <trans-unit id="fc0e8280e5c94d0883853c5c4b17f81c3e799bdf" translate="yes" xml:space="preserve">
          <source>Name:   activelock

   Purpose:   Describes a lock on a resource.


   &amp;lt;!ELEMENT activelock (lockscope, locktype, depth, owner?, timeout?,
             locktoken?, lockroot)&amp;gt;</source>
          <target state="translated">Имя: activelock. Назначение: описывает блокировку ресурса. &amp;lt;! ELEMENT activelock (область блокировки, тип блокировки, глубина, владелец ?, тайм-аут?, Токен блокировки?, Корень блокировки)&amp;gt;</target>
        </trans-unit>
        <trans-unit id="7309308604381e0eab9cfba61516e4469cbce658" translate="yes" xml:space="preserve">
          <source>Name:   allprop

   Purpose:   Specifies that all names and values of dead properties and
      the live properties defined by this document existing on the
      resource are to be returned.

   &amp;lt;!ELEMENT allprop EMPTY &amp;gt;</source>
          <target state="translated">Имя: allprop Цель: указывает, что должны быть возвращены все имена и значения мертвых свойств и активных свойств, определенных в этом документе, существующих на ресурсе. &amp;lt;! ELEMENT allprop EMPTY&amp;gt;</target>
        </trans-unit>
        <trans-unit id="1ba1c5dfdf3f6b036dcf6b3dcedf50ec6b5d7aa0" translate="yes" xml:space="preserve">
          <source>Name:   collection

   Purpose:   Identifies the associated resource as a collection.  The
      DAV:resourcetype property of a collection resource MUST contain
      this element.  It is normally empty but extensions may add sub-
      elements.

   &amp;lt;!ELEMENT collection EMPTY &amp;gt;</source>
          <target state="translated">Имя: коллекция Цель: идентифицирует связанный ресурс как коллекцию. Свойство DAV: resourcetype ресурса коллекции ДОЛЖНО содержать этот элемент. Обычно он пуст, но расширения могут добавлять подэлементы. &amp;lt;! Коллекция ELEMENT EMPTY&amp;gt;</target>
        </trans-unit>
        <trans-unit id="87181b0cf2e6abfd8e3d27cf6a43721cccb1a786" translate="yes" xml:space="preserve">
          <source>Name:   creationdate

   Purpose:   Records the time and date the resource was created.

   Value:   date-time (defined in [&lt;a href=&quot;https://tools.ietf.org/html/rfc3339&quot;&gt;RFC3339&lt;/a&gt;], see the ABNF in &lt;a href=&quot;#section-5.6&quot;&gt;Section&lt;/a&gt;&lt;a href=&quot;#section-5.6&quot;&gt;5.6&lt;/a&gt;.)

   Protected:   MAY be protected.  Some servers allow DAV:creationdate
      to be changed to reflect the time the document was created if that
      is more meaningful to the user (rather than the time it was
      uploaded).  Thus, clients SHOULD NOT use this property in
      synchronization logic (use DAV:getetag instead).

   COPY/MOVE behavior:   This property value SHOULD be kept during a
      MOVE operation, but is normally re-initialized when a resource is
      created with a COPY.  It should not be set in a COPY. 

   Description:   The DAV:creationdate property SHOULD be defined on all
      DAV compliant resources.  If present, it contains a timestamp of
      the moment when the resource was created.  Servers that are
      incapable of persistently recording the creation date SHOULD
      instead leave it undefined (i.e. report &quot;Not Found&quot;).

   &amp;lt;!ELEMENT creationdate (#PCDATA) &amp;gt;</source>
          <target state="translated">Имя: creationdate Цель: записывает время и дату создания ресурса. Значение: дата-время (определено в [ &lt;a href=&quot;https://tools.ietf.org/html/rfc3339&quot;&gt;RFC3339&lt;/a&gt; ], см. ABNF в &lt;a href=&quot;#section-5.6&quot;&gt;разделе &lt;/a&gt;&lt;a href=&quot;#section-5.6&quot;&gt;5.6.&lt;/a&gt;.) Защищено: МОЖЕТ быть защищено. Некоторые серверы позволяют изменять DAV: Creationdate, чтобы отразить время создания документа, если это более важно для пользователя (а не время его загрузки). Таким образом, клиентам НЕ СЛЕДУЕТ использовать это свойство в логике синхронизации (вместо этого используйте DAV: getetag). Поведение COPY / MOVE: значение этого свойства ДОЛЖНО сохраняться во время операции MOVE, но обычно оно повторно инициализируется при создании ресурса с помощью COPY. Его не следует устанавливать в КОПИИ. Описание: Свойство DAV: creationdate ДОЛЖНО быть определено для всех ресурсов, совместимых с DAV. Если присутствует, он содержит метку времени, когда ресурс был создан. Серверы, которые не могут постоянно записывать дату создания, СЛЕДУЕТ вместо этого оставить ее неопределенной (т.е.отчет &amp;laquo;Не найдено&amp;raquo;). &amp;lt;! Дата создания ЭЛЕМЕНТА (#PCDATA)&amp;gt;</target>
        </trans-unit>
        <trans-unit id="5001a824af50b50969330b6c455279fcb16d4902" translate="yes" xml:space="preserve">
          <source>Name:   depth

   Purpose:   Used for representing depth values in XML content (e.g.,
      in lock information).

   Value:   &quot;0&quot; | &quot;1&quot; | &quot;infinity&quot;

   &amp;lt;!ELEMENT depth (#PCDATA) &amp;gt;</source>
          <target state="translated">Имя: глубина Назначение: Используется для представления значений глубины в XML-содержимом (например, в информации о блокировке). Значение: &amp;laquo;0&amp;raquo; | &amp;laquo;1&amp;raquo; | &quot;бесконечность&quot; &amp;lt;! Глубина ЭЛЕМЕНТА (#PCDATA)&amp;gt;</target>
        </trans-unit>
        <trans-unit id="d7e7ea482bed86ee2dc49b17649f3cd7cddfe06a" translate="yes" xml:space="preserve">
          <source>Name:   displayname

   Purpose:   Provides a name for the resource that is suitable for
      presentation to a user.

   Value:   Any text.

   Protected:   SHOULD NOT be protected.  Note that servers implementing
      [&lt;a href=&quot;https://tools.ietf.org/html/rfc2518&quot;&gt;RFC2518&lt;/a&gt;] might have made this a protected property as this is a
      new requirement.

   COPY/MOVE behavior:   This property value SHOULD be preserved in COPY
      and MOVE operations.

   Description:   Contains a description of the resource that is
      suitable for presentation to a user.  This property is defined on
      the resource, and hence SHOULD have the same value independent of
      the Request-URI used to retrieve it (thus, computing this property
      based on the Request-URI is deprecated).  While generic clients
      might display the property value to end users, client UI designers
      must understand that the method for identifying resources is still
      the URL.  Changes to DAV:displayname do not issue moves or copies
      to the server, but simply change a piece of meta-data on the
      individual resource.  Two resources can have the same DAV:
      displayname value even within the same collection.

   &amp;lt;!ELEMENT displayname (#PCDATA) &amp;gt;</source>
          <target state="translated">Имя: displayname Назначение: Предоставляет имя ресурса, которое подходит для представления пользователю. Значение: любой текст. Защищено: НЕ ДОЛЖЕН быть защищен. Обратите внимание, что серверы, реализующие [ &lt;a href=&quot;https://tools.ietf.org/html/rfc2518&quot;&gt;RFC2518&lt;/a&gt;] мог бы сделать это свойство защищенным, поскольку это новое требование. Поведение COPY / MOVE: значение этого свойства ДОЛЖНО быть сохранено в операциях COPY и MOVE. Описание: содержит описание ресурса, подходящего для презентации пользователю. Это свойство определено в ресурсе и, следовательно, ДОЛЖНО иметь одно и то же значение независимо от Request-URI, используемого для его получения (таким образом, вычисление этого свойства на основе Request-URI устарело). В то время как универсальные клиенты могут отображать значение свойства для конечных пользователей, разработчики клиентского пользовательского интерфейса должны понимать, что методом идентификации ресурсов по-прежнему является URL-адрес. Изменения в DAV: displayname не отправляют перемещений или копий на сервер, а просто изменяют часть метаданных на отдельном ресурсе.Два ресурса могут иметь одно и то же значение DAV: displayname даже в одной коллекции. &amp;lt;! Отображаемое имя ЭЛЕМЕНТА (#PCDATA)&amp;gt;</target>
        </trans-unit>
        <trans-unit id="908d0146c1dea86489e704e923e0d7a5ee16a7b9" translate="yes" xml:space="preserve">
          <source>Name:   error

   Purpose:   Error responses, particularly 403 Forbidden and 409
      Conflict, sometimes need more information to indicate what went
      wrong.  In these cases, servers MAY return an XML response body
      with a document element of 'error', containing child elements
      identifying particular condition codes.

   Description:   Contains at least one XML element, and MUST NOT
      contain text or mixed content.  Any element that is a child of the
      'error' element is considered to be a precondition or
      postcondition code.  Unrecognized elements MUST be ignored.

   &amp;lt;!ELEMENT error ANY &amp;gt;</source>
          <target state="translated">Название: ошибка Цель: Ответы на ошибки, особенно 403 Запрещено и 409 Конфликт, иногда требуют дополнительной информации, чтобы указать, что пошло не так. В этих случаях серверы МОГУТ возвращать тело ответа XML с элементом документа 'error', содержащим дочерние элементы, идентифицирующие конкретные коды условий. Описание: содержит по крайней мере один элемент XML и НЕ ДОЛЖЕН содержать текст или смешанное содержимое. Любой элемент, являющийся дочерним по отношению к элементу error, считается кодом предусловия или постусловия. Нераспознанные элементы ДОЛЖНЫ игнорироваться. &amp;lt;! ELEMENT error ANY&amp;gt;</target>
        </trans-unit>
        <trans-unit id="2f1ac95ad14a19297b93321befb3877e2c61a0da" translate="yes" xml:space="preserve">
          <source>Name:   exclusive

   Purpose:   Specifies an exclusive lock.


   &amp;lt;!ELEMENT exclusive EMPTY &amp;gt;</source>
          <target state="translated">Имя: эксклюзивное Назначение: Задает монопольную блокировку. &amp;lt;! ELEMENT эксклюзивный EMPTY&amp;gt;</target>
        </trans-unit>
        <trans-unit id="1139af3688a412e172379a1792bf370d7f0f7b0c" translate="yes" xml:space="preserve">
          <source>Name:   getcontentlanguage

   Purpose:   Contains the Content-Language header value (from &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-14.12&quot;&gt;Section&lt;/a&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-14.12&quot;&gt;14.12 of [RFC2616]&lt;/a&gt;) as it would be returned by a GET without
      accept headers.

   Value:   language-tag (language-tag is defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-3.10&quot;&gt;Section&amp;nbsp;3.10 of
      [RFC2616]&lt;/a&gt;) 

   Protected:   SHOULD NOT be protected, so that clients can reset the
      language.  Note that servers implementing [&lt;a href=&quot;https://tools.ietf.org/html/rfc2518&quot;&gt;RFC2518&lt;/a&gt;] might have
      made this a protected property as this is a new requirement.

   COPY/MOVE behavior:   This property value SHOULD be preserved in COPY
      and MOVE operations.

   Description:   The DAV:getcontentlanguage property MUST be defined on
      any DAV-compliant resource that returns the Content-Language
      header on a GET.

   &amp;lt;!ELEMENT getcontentlanguage (#PCDATA) &amp;gt;</source>
          <target state="translated">Имя: getcontentlanguage Цель: Содержит значение заголовка Content-Language (из &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-14.12&quot;&gt;Раздела &lt;/a&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-14.12&quot;&gt;14.12 [RFC2616]&lt;/a&gt; ), как оно было бы возвращено GET без заголовков принятия. Значение: тег языка (тег языка определен в &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-3.10&quot;&gt;разделе 3.10 [RFC2616]&lt;/a&gt; ) Защищено: НЕ ДОЛЖЕН быть защищен, чтобы клиенты могли сбросить язык. Обратите внимание, что серверы, реализующие [ &lt;a href=&quot;https://tools.ietf.org/html/rfc2518&quot;&gt;RFC2518&lt;/a&gt;] мог бы сделать это свойство защищенным, поскольку это новое требование. Поведение COPY / MOVE: значение этого свойства ДОЛЖНО быть сохранено в операциях COPY и MOVE. Описание: Свойство DAV: getcontentlanguage ДОЛЖНО быть определено для любого DAV-совместимого ресурса, который возвращает заголовок Content-Language в GET. &amp;lt;! ЭЛЕМЕНТ getcontentlanguage (#PCDATA)&amp;gt;</target>
        </trans-unit>
        <trans-unit id="741fdc043a5b70d84410dff935be0a476ea27e62" translate="yes" xml:space="preserve">
          <source>Name:   getcontentlength

   Purpose:   Contains the Content-Length header returned by a GET
      without accept headers.

   Value:   See &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-14.13&quot;&gt;Section&amp;nbsp;14.13 of [RFC2616]&lt;/a&gt;.

   Protected:   This property is computed, therefore protected.

   Description:   The DAV:getcontentlength property MUST be defined on
      any DAV-compliant resource that returns the Content-Length header
      in response to a GET.

   COPY/MOVE behavior:   This property value is dependent on the size of
      the destination resource, not the value of the property on the
      source resource.

   &amp;lt;!ELEMENT getcontentlength (#PCDATA) &amp;gt;</source>
          <target state="translated">Имя: getcontentlength Цель: Содержит заголовок Content-Length, возвращаемый GET без заголовков принятия. Значение: см. &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-14.13&quot;&gt;Раздел 14.13 [RFC2616]&lt;/a&gt; . Защищено: это свойство вычисляется, поэтому защищено. Описание: Свойство DAV: getcontentlength ДОЛЖНО быть определено для любого DAV-совместимого ресурса, который возвращает заголовок Content-Length в ответ на GET. Поведение COPY / MOVE: значение этого свойства зависит от размера целевого ресурса, а не от значения свойства исходного ресурса. &amp;lt;! ELEMENT getcontentlength (#PCDATA)&amp;gt;</target>
        </trans-unit>
        <trans-unit id="55495eb7b11d239e680b68a767ce90c04bf9b3b4" translate="yes" xml:space="preserve">
          <source>Name:   getcontenttype

   Purpose:   Contains the Content-Type header value (from &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-14.17&quot;&gt;Section&amp;nbsp;14.17
      of [RFC2616]&lt;/a&gt;) as it would be returned by a GET without accept
      headers.

   Value:   media-type (defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-3.7&quot;&gt;Section&amp;nbsp;3.7 of [RFC2616]&lt;/a&gt;)

   Protected:   Potentially protected if the server prefers to assign
      content types on its own (see also discussion in &lt;a href=&quot;#section-9.7.1&quot;&gt;Section 9.7.1&lt;/a&gt;). 

   COPY/MOVE behavior:   This property value SHOULD be preserved in COPY
      and MOVE operations.

   Description:   This property MUST be defined on any DAV-compliant
      resource that returns the Content-Type header in response to a
      GET.

   &amp;lt;!ELEMENT getcontenttype (#PCDATA) &amp;gt;</source>
          <target state="translated">Имя: getcontenttype Назначение: Содержит значение заголовка Content-Type (из &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-14.17&quot;&gt;Раздела 14.17 [RFC2616]&lt;/a&gt; ), как оно было бы возвращено GET без заголовков принятия. Значение: media-type (определено в &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-3.7&quot;&gt;разделе 3.7 [RFC2616]&lt;/a&gt; ) Защищено: потенциально защищено, если сервер предпочитает назначать типы контента самостоятельно (см. Также обсуждение в &lt;a href=&quot;#section-9.7.1&quot;&gt;разделе 9.7.1&lt;/a&gt; ). Поведение COPY / MOVE: значение этого свойства ДОЛЖНО быть сохранено в операциях COPY и MOVE. Описание: это свойство ДОЛЖНО быть определено для любого DAV-совместимого ресурса, который возвращает заголовок Content-Type в ответ на GET. &amp;lt;! ELEMENT getcontenttype (#PCDATA)&amp;gt;</target>
        </trans-unit>
        <trans-unit id="1498b05efb25d9004f005f650420e0059a4a660f" translate="yes" xml:space="preserve">
          <source>Name:   getetag

   Purpose:   Contains the ETag header value (from &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-14.19&quot;&gt;Section&amp;nbsp;14.19 of
      [RFC2616]&lt;/a&gt;) as it would be returned by a GET without accept
      headers.

   Value:   entity-tag (defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-3.11&quot;&gt;Section&amp;nbsp;3.11 of [RFC2616]&lt;/a&gt;)

   Protected:  MUST be protected because this value is created and
      controlled by the server.

   COPY/MOVE behavior:   This property value is dependent on the final
      state of the destination resource, not the value of the property
      on the source resource.  Also note the considerations in
      &lt;a href=&quot;#section-8.8&quot;&gt;Section 8.8&lt;/a&gt;.

   Description:   The getetag property MUST be defined on any DAV-
      compliant resource that returns the Etag header.  Refer to &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-3.11&quot;&gt;Section&lt;/a&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-3.11&quot;&gt;3.11 of RFC 2616&lt;/a&gt; for a complete definition of the semantics of an
      ETag, and to &lt;a href=&quot;#section-8.6&quot;&gt;Section 8.6&lt;/a&gt; for a discussion of ETags in WebDAV.

   &amp;lt;!ELEMENT getetag (#PCDATA) &amp;gt;</source>
          <target state="translated">Имя: getetag Назначение: Содержит значение заголовка ETag (из &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-14.19&quot;&gt;Раздела 14.19 [RFC2616]&lt;/a&gt; ), которое было бы возвращено GET без заголовков принятия. Значение: entity-tag (определено в &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-3.11&quot;&gt;разделе 3.11 [RFC2616]&lt;/a&gt; ) Защищено: ДОЛЖНО быть защищено, поскольку это значение создается и контролируется сервером. Поведение COPY / MOVE: значение этого свойства зависит от конечного состояния целевого ресурса, а не от значения свойства исходного ресурса. Также обратите внимание на соображения в &lt;a href=&quot;#section-8.8&quot;&gt;Разделе 8.8&lt;/a&gt; . Описание. Свойство getetag ДОЛЖНО быть определено для любого DAV-совместимого ресурса, который возвращает заголовок Etag. См. &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-3.11&quot;&gt;Раздел &lt;/a&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-3.11&quot;&gt;3.11 RFC 2616.&lt;/a&gt;для полного определения семантики ETag и в &lt;a href=&quot;#section-8.6&quot;&gt;Раздел 8.6&lt;/a&gt; для обсуждения ETags в WebDAV. &amp;lt;! ELEMENT getetag (#PCDATA)&amp;gt;</target>
        </trans-unit>
        <trans-unit id="11ad3ec496de5f06b2c28a5d5dd7a81ca07caa74" translate="yes" xml:space="preserve">
          <source>Name:   getlastmodified

   Purpose:   Contains the Last-Modified header value (from &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-14.29&quot;&gt;Section&lt;/a&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-14.29&quot;&gt;14.29 of [RFC2616]&lt;/a&gt;) as it would be returned by a GET method
      without accept headers.

   Value:   &lt;a href=&quot;https://tools.ietf.org/html/rfc1123&quot;&gt;rfc1123&lt;/a&gt;-date (defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-3.3.1&quot;&gt;Section&amp;nbsp;3.3.1 of [RFC2616]&lt;/a&gt;)

   Protected:   SHOULD be protected because some clients may rely on the
      value for appropriate caching behavior, or on the value of the
      Last-Modified header to which this property is linked. 

   COPY/MOVE behavior:   This property value is dependent on the last
      modified date of the destination resource, not the value of the
      property on the source resource.  Note that some server
      implementations use the file system date modified value for the
      DAV:getlastmodified value, and this can be preserved in a MOVE
      even when the HTTP Last-Modified value SHOULD change.  Note that
      since [&lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;RFC2616&lt;/a&gt;] requires clients to use ETags where provided, a
      server implementing ETags can count on clients using a much better
      mechanism than modification dates for offline synchronization or
      cache control.  Also note the considerations in &lt;a href=&quot;#section-8.8&quot;&gt;Section 8.8&lt;/a&gt;.

   Description:   The last-modified date on a resource SHOULD only
      reflect changes in the body (the GET responses) of the resource.
      A change in a property only SHOULD NOT cause the last-modified
      date to change, because clients MAY rely on the last-modified date
      to know when to overwrite the existing body.  The DAV:
      getlastmodified property MUST be defined on any DAV-compliant
      resource that returns the Last-Modified header in response to a
      GET.

   &amp;lt;!ELEMENT getlastmodified (#PCDATA) &amp;gt;</source>
          <target state="translated">Имя: getlastmodified Назначение: Содержит значение заголовка Last-Modified (из &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-14.29&quot;&gt;Раздела &lt;/a&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-14.29&quot;&gt;14.29 [RFC2616]&lt;/a&gt; ), поскольку оно будет возвращено методом GET без заголовков принятия. Значение: &lt;a href=&quot;https://tools.ietf.org/html/rfc1123&quot;&gt;rfc1123&lt;/a&gt; -date (определено в &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-3.3.1&quot;&gt;разделе 3.3.1 [RFC2616]&lt;/a&gt;Защищено: СЛЕДУЕТ защищать, потому что некоторые клиенты могут полагаться на значение для соответствующего поведения кэширования или на значение заголовка Last-Modified, с которым связано это свойство. Поведение COPY / MOVE: значение этого свойства зависит от даты последнего изменения целевого ресурса, а не от значения свойства исходного ресурса. Обратите внимание, что некоторые реализации сервера используют значение даты изменения файловой системы для значения DAV: getlastmodified, и это может быть сохранено в MOVE, даже если значение HTTP Last-Modified ДОЛЖНО измениться. Обратите внимание, что поскольку [ &lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;RFC2616&lt;/a&gt;] требует, чтобы клиенты использовали ETags там, где это предусмотрено, сервер, реализующий ETags, может рассчитывать на клиентов, используя гораздо лучший механизм, чем даты изменения для автономной синхронизации или управления кешем. Также обратите внимание на соображения в &lt;a href=&quot;#section-8.8&quot;&gt;Разделе 8.8&lt;/a&gt; . Описание. Дата последнего изменения ресурса ДОЛЖНА отражать только изменения в теле (ответы GET) ресурса. Изменение только свойства НЕ ДОЛЖНО приводить к изменению даты последнего изменения, потому что клиенты МОГУТ полагаться на дату последнего изменения, чтобы знать, когда следует перезаписать существующее тело. Свойство DAV: getlastmodified ДОЛЖНО быть определено для любого DAV-совместимого ресурса, который возвращает заголовок Last-Modified в ответ на GET. &amp;lt;! ЭЛЕМЕНТ getlastmodified (#PCDATA)&amp;gt;</target>
        </trans-unit>
        <trans-unit id="863060182a5c2848f88469f61b18814776f39625" translate="yes" xml:space="preserve">
          <source>Name:   href

   Purpose:   MUST contain a URI or a relative reference.

   Description:   There may be limits on the value of 'href' depending
      on the context of its use.  Refer to the specification text where
      'href' is used to see what limitations apply in each case.

   Value:   Simple-ref


   &amp;lt;!ELEMENT href (#PCDATA)&amp;gt;</source>
          <target state="translated">Имя: href Назначение: ДОЛЖЕН содержать URI или относительную ссылку. Описание: могут быть ограничения на значение href в зависимости от контекста его использования. Обратитесь к тексту спецификации, где используется 'href', чтобы узнать, какие ограничения применяются в каждом случае. Значение: Simple-ref &amp;lt;! ELEMENT href (#PCDATA)&amp;gt;</target>
        </trans-unit>
        <trans-unit id="893dbb5e6ea2e164b3fe7cab59b462026c86e341" translate="yes" xml:space="preserve">
          <source>Name:   include

   Purpose:   Any child element represents the name of a property to be
      included in the PROPFIND response.  All elements inside an
      'include' XML element MUST define properties related to the
      resource, although possible property names are in no way limited
      to those property names defined in this document or other
      standards.  This element MUST NOT contain text or mixed content.

   &amp;lt;!ELEMENT include ANY &amp;gt;</source>
          <target state="translated">Имя: include Цель: любой дочерний элемент представляет имя свойства, которое будет включено в ответ PROPFIND. Все элементы внутри элемента XML &quot;include&quot; ДОЛЖНЫ определять свойства, связанные с ресурсом, хотя возможные имена свойств никоим образом не ограничиваются теми именами свойств, которые определены в этом документе или других стандартах. Этот элемент НЕ ДОЛЖЕН содержать текст или смешанное содержимое. &amp;lt;! ELEMENT include ANY&amp;gt;</target>
        </trans-unit>
        <trans-unit id="6c0d5c7c18f7351f5e5ec4a0e565194906f570e3" translate="yes" xml:space="preserve">
          <source>Name:   location

   Purpose:   HTTP defines the &quot;Location&quot; header (see [&lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;RFC2616&lt;/a&gt;], &lt;a href=&quot;#section-14.30&quot;&gt;Section&lt;/a&gt;&lt;a href=&quot;#section-14.30&quot;&gt;14.30&lt;/a&gt;) for use with some status codes (such as 201 and the 300
      series codes).  When these codes are used inside a 'multistatus'
      element, the 'location' element can be used to provide the
      accompanying Location header value. 

   Description:   Contains a single href element with the same value
      that would be used in a Location header.


   &amp;lt;!ELEMENT location (href)&amp;gt;</source>
          <target state="translated">Имя: location Назначение: HTTP определяет заголовок &amp;laquo;Location&amp;raquo; (см. [ &lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;RFC2616&lt;/a&gt; ], &lt;a href=&quot;#section-14.30&quot;&gt;раздел &lt;/a&gt;&lt;a href=&quot;#section-14.30&quot;&gt;14.30&lt;/a&gt; ) для использования с некоторыми кодами состояния (такими как коды 201 и 300 серий). Когда эти коды используются внутри элемента &amp;laquo;multistatus&amp;raquo;, элемент &amp;laquo;location&amp;raquo; может использоваться для предоставления сопутствующего значения заголовка Location. Описание: содержит один элемент href с тем же значением, которое будет использоваться в заголовке Location. &amp;lt;! Местоположение элемента (href)&amp;gt;</target>
        </trans-unit>
        <trans-unit id="611ed05ab7ed30cc8633acf614bc5f74d180e99e" translate="yes" xml:space="preserve">
          <source>Name:   lockdiscovery

   Purpose:   Describes the active locks on a resource

   Protected:   MUST be protected.  Clients change the list of locks
      through LOCK and UNLOCK, not through PROPPATCH.

   COPY/MOVE behavior:   The value of this property depends on the lock
      state of the destination, not on the locks of the source resource.
      Recall that locks are not moved in a MOVE operation.

   Description:   Returns a listing of who has a lock, what type of lock
      he has, the timeout type and the time remaining on the timeout,
      and the associated lock token.  Owner information MAY be omitted
      if it is considered sensitive.  If there are no locks, but the
      server supports locks, the property will be present but contain
      zero 'activelock' elements.  If there are one or more locks, an
      'activelock' element appears for each lock on the resource.  This
      property is NOT lockable with respect to write locks (&lt;a href=&quot;#section-7&quot;&gt;Section 7&lt;/a&gt;).

   &amp;lt;!ELEMENT lockdiscovery (activelock)* &amp;gt;</source>
          <target state="translated">Имя: lockdiscovery Цель: Описывает активные блокировки ресурса. Защищенный: ДОЛЖЕН быть защищен. Клиенты меняют список блокировок через LOCK и UNLOCK, а не через PROPPATCH. Поведение COPY / MOVE: значение этого свойства зависит от состояния блокировки места назначения, а не от блокировок исходного ресурса. Напомним, что блокировки не перемещаются в операции MOVE. Описание: возвращает список того, у кого есть блокировка, какой у него тип блокировки, тип тайм-аута и время, оставшееся до тайм-аута, а также связанный токен блокировки. Информация о владельце МОЖЕТ быть опущена, если она считается конфиденциальной. Если блокировок нет, но сервер поддерживает блокировки, свойство будет присутствовать, но не содержать элементов activelock. Если есть один или несколько замков,Элемент activelock 'появляется для каждой блокировки ресурса. Это свойство НЕ блокируется относительно блокировок записи (&lt;a href=&quot;#section-7&quot;&gt;Раздел 7&lt;/a&gt; ). &amp;lt;! ELEMENT lockdiscovery (activelock) *&amp;gt;</target>
        </trans-unit>
        <trans-unit id="7c16989808c9336197d43ba1941662e1c595ca03" translate="yes" xml:space="preserve">
          <source>Name:   lockentry

   Purpose:   Defines the types of locks that can be used with the
      resource.

   &amp;lt;!ELEMENT lockentry (lockscope, locktype) &amp;gt;</source>
          <target state="translated">Имя: lockentry Цель: определяет типы блокировок, которые могут использоваться с ресурсом. &amp;lt;! Блокировка ЭЛЕМЕНТОВ (lockscope, locktype)&amp;gt;</target>
        </trans-unit>
        <trans-unit id="5083904af81384e6886493a202104354cd3f8853" translate="yes" xml:space="preserve">
          <source>Name:   lockinfo

   Purpose:   The 'lockinfo' XML element is used with a LOCK method to
      specify the type of lock the client wishes to have created.


   &amp;lt;!ELEMENT lockinfo (lockscope, locktype, owner?)  &amp;gt;</source>
          <target state="translated">Имя: lockinfo Назначение: XML-элемент lockinfo используется с методом LOCK для указания типа блокировки, которую клиент хочет создать. &amp;lt;! ELEMENT lockinfo (область блокировки, тип блокировки, владелец?)&amp;gt;</target>
        </trans-unit>
        <trans-unit id="852a23c678d8306e5d8708150d7c2bf16c39adbc" translate="yes" xml:space="preserve">
          <source>Name:   lockroot

   Purpose:   Contains the root URL of the lock, which is the URL
      through which the resource was addressed in the LOCK request.

   Description:   The href element contains the root of the lock.  The
      server SHOULD include this in all DAV:lockdiscovery property
      values and the response to LOCK requests.

   &amp;lt;!ELEMENT lockroot (href) &amp;gt;</source>
          <target state="translated">Имя: lockroot Цель: Содержит корневой URL-адрес блокировки, который является URL-адресом, через который ресурс был адресован в запросе LOCK. Описание: элемент href содержит корень блокировки. Серверу СЛЕДУЕТ включать это во все значения свойств DAV: lockdiscovery и ответ на запросы LOCK. &amp;lt;! ELEMENT lockroot (href)&amp;gt;</target>
        </trans-unit>
        <trans-unit id="00e11eedce57a66ee497b17831a568c69036832c" translate="yes" xml:space="preserve">
          <source>Name:   lockscope

   Purpose:   Specifies whether a lock is an exclusive lock, or a shared
      lock.


     &amp;lt;!ELEMENT lockscope (exclusive | shared) &amp;gt;</source>
          <target state="translated">Имя: lockscope Цель: указывает, является ли блокировка монопольной или общей блокировкой. &amp;lt;! ELEMENT lockscope (эксклюзивный | общий)&amp;gt;</target>
        </trans-unit>
        <trans-unit id="82de61827789e036e8393a1e1b328cd94701a6ea" translate="yes" xml:space="preserve">
          <source>Name:   locktoken

   Purpose:   The lock token associated with a lock.

   Description:   The href contains a single lock token URI, which
      refers to the lock.

   &amp;lt;!ELEMENT locktoken (href) &amp;gt;</source>
          <target state="translated">Имя: locktoken Цель: маркер блокировки, связанный с блокировкой. Описание: href содержит единственный URI токена блокировки, который относится к блокировке. &amp;lt;! ЭЛЕМЕНТ locktoken (href)&amp;gt;</target>
        </trans-unit>
        <trans-unit id="598c85ffd24685cdfcbe4799404f4c9aeaa83551" translate="yes" xml:space="preserve">
          <source>Name:   locktype

   Purpose:   Specifies the access type of a lock.  At present, this
      specification only defines one lock type, the write lock.


   &amp;lt;!ELEMENT locktype (write) &amp;gt;</source>
          <target state="translated">Имя: locktype Цель: Определяет тип доступа блокировки. В настоящее время эта спецификация определяет только один тип блокировки - блокировку записи. &amp;lt;! ELEMENT locktype (запись)&amp;gt;</target>
        </trans-unit>
        <trans-unit id="e05fdca8059417af4c532004b86578fb46a8667c" translate="yes" xml:space="preserve">
          <source>Name:   multistatus

   Purpose:   Contains multiple response messages.

   Description:   The 'responsedescription' element at the top level is
      used to provide a general message describing the overarching
      nature of the response.  If this value is available, an
      application may use it instead of presenting the individual
      response descriptions contained within the responses.


   &amp;lt;!ELEMENT multistatus (response*, responsedescription?)  &amp;gt;</source>
          <target state="translated">Имя: multistatus Назначение: Содержит несколько ответных сообщений. Описание: элемент responsedescription на верхнем уровне используется для предоставления общего сообщения, описывающего всеобъемлющий характер ответа. Если это значение доступно, приложение может использовать его вместо представления отдельных описаний ответов, содержащихся в ответах. &amp;lt;! ELEMENT multistatus (ответ *, описание ответа?)&amp;gt;</target>
        </trans-unit>
        <trans-unit id="9e7255f62e0866a1ff69ffde8c78451b0557e060" translate="yes" xml:space="preserve">
          <source>Name:   owner

   Purpose:   Holds client-supplied information about the creator of a
      lock.

   Description:   Allows a client to provide information sufficient for
      either directly contacting a principal (such as a telephone number
      or Email URI), or for discovering the principal (such as the URL 

      of a homepage) who created a lock.  The value provided MUST be
      treated as a dead property in terms of XML Information Item
      preservation.  The server MUST NOT alter the value unless the
      owner value provided by the client is empty.  For a certain amount
      of interoperability between different client implementations, if
      clients have URI-formatted contact information for the lock
      creator suitable for user display, then clients SHOULD put those
      URIs in 'href' child elements of the 'owner' element.

   Extensibility:   MAY be extended with child elements, mixed content,
      text content or attributes.

   &amp;lt;!ELEMENT owner ANY &amp;gt;</source>
          <target state="translated">Имя: владелец. Назначение: содержит предоставленную клиентом информацию о создателе блокировки. Описание: позволяет клиенту предоставить информацию, достаточную либо для прямого контакта с принципалом (например, номер телефона или URI электронной почты), либо для обнаружения принципала (например, URL-адрес домашней страницы), создавшего блокировку. Предоставленное значение ДОЛЖНО рассматриваться как мертвое свойство с точки зрения сохранения информационного элемента XML. Сервер НЕ ДОЛЖЕН изменять значение, если значение владельца, предоставленное клиентом, не пусто. Для определенного уровня взаимодействия между различными реализациями клиентов, если клиенты имеют контактную информацию в формате URI для создателя блокировки, подходящую для отображения пользователем, тогда клиенты ДОЛЖНЫ помещать эти URI в дочерние элементы href элементаэлемент владельца. Расширяемость: МОЖЕТ быть расширена дочерними элементами, смешанным содержимым, текстовым содержимым или атрибутами. &amp;lt;! ELEMENT owner ANY&amp;gt;</target>
        </trans-unit>
        <trans-unit id="1a4e49012d04e6acebeb0c6719ce7d291a7d9aa8" translate="yes" xml:space="preserve">
          <source>Name:   prop

   Purpose:   Contains properties related to a resource.

   Description:   A generic container for properties defined on
      resources.  All elements inside a 'prop' XML element MUST define
      properties related to the resource, although possible property
      names are in no way limited to those property names defined in
      this document or other standards.  This element MUST NOT contain
      text or mixed content.

   &amp;lt;!ELEMENT prop ANY &amp;gt;</source>
          <target state="translated">Имя: prop Назначение: Содержит свойства, связанные с ресурсом. Описание: общий контейнер для свойств, определенных для ресурсов. Все элементы внутри XML-элемента prop ДОЛЖНЫ определять свойства, относящиеся к ресурсу, хотя возможные имена свойств никоим образом не ограничиваются теми именами свойств, которые определены в этом документе или других стандартах. Этот элемент НЕ ДОЛЖЕН содержать текст или смешанное содержимое. &amp;lt;! ELEMENT prop ANY&amp;gt;</target>
        </trans-unit>
        <trans-unit id="2a17076c9f6d61a5ed9b6362d78be28ae87fb3ec" translate="yes" xml:space="preserve">
          <source>Name:   propertyupdate

   Purpose:   Contains a request to alter the properties on a resource.

   Description:   This XML element is a container for the information
      required to modify the properties on the resource.

   &amp;lt;!ELEMENT propertyupdate (remove | set)+ &amp;gt;</source>
          <target state="translated">Имя: propertyupdate Цель: Содержит запрос на изменение свойств ресурса. Описание: этот XML-элемент является контейнером для информации, необходимой для изменения свойств ресурса. &amp;lt;! ELEMENT propertyupdate (удалить | установить) +&amp;gt;</target>
        </trans-unit>
        <trans-unit id="f033076f90b712249c25c9cf538723f50fb05452" translate="yes" xml:space="preserve">
          <source>Name:   propfind 

   Purpose:   Specifies the properties to be returned from a PROPFIND
      method.  Four special elements are specified for use with
      'propfind': 'prop', 'allprop', 'include', and 'propname'.  If
      'prop' is used inside 'propfind', it MUST NOT contain property
      values.

   &amp;lt;!ELEMENT propfind ( propname | (allprop, include?) | prop ) &amp;gt;</source>
          <target state="translated">Имя: propfind Цель: Определяет свойства, возвращаемые методом PROPFIND. Для использования с propfind определены четыре специальных элемента: prop, allprop, include и propname. Если 'prop' используется внутри 'propfind', он НЕ ДОЛЖЕН содержать значения свойств. &amp;lt;! ELEMENT propfind (propname | (allprop, include?) | Prop)&amp;gt;</target>
        </trans-unit>
        <trans-unit id="b132fa457cc7b2c94116ac2aad40a7507857d840" translate="yes" xml:space="preserve">
          <source>Name:   propname

   Purpose:   Specifies that only a list of property names on the
      resource is to be returned.

   &amp;lt;!ELEMENT propname EMPTY &amp;gt;</source>
          <target state="translated">Имя: propname Назначение: указывает, что должен быть возвращен только список имен свойств ресурса. &amp;lt;! ELEMENT propname EMPTY&amp;gt;</target>
        </trans-unit>
        <trans-unit id="cb18d77861af3bb5b094ee60954452e584d7dbd8" translate="yes" xml:space="preserve">
          <source>Name:   propstat

   Purpose:   Groups together a prop and status element that is
      associated with a particular 'href' element.

   Description:   The propstat XML element MUST contain one prop XML
      element and one status XML element.  The contents of the prop XML
      element MUST only list the names of properties to which the result
      in the status element applies.  The optional precondition/
      postcondition element and 'responsedescription' text also apply to
      the properties named in 'prop'.

   &amp;lt;!ELEMENT propstat (prop, status, error?, responsedescription?) &amp;gt;</source>
          <target state="translated">Имя: propstat Назначение: группирует вместе элемент prop и status, связанный с определенным элементом href. Описание: XML-элемент propstat ДОЛЖЕН содержать один элемент XML prop и один элемент XML статуса. Содержимое XML-элемента prop ДОЛЖНО содержать только имена свойств, к которым применяется результат в элементе status. Необязательный элемент предусловия / постусловия и текст &amp;laquo;responsedescription&amp;raquo; также применяются к свойствам, указанным в &amp;laquo;prop&amp;raquo;. &amp;lt;! ELEMENT propstat (prop, status, error ?, responsedescription?)&amp;gt;</target>
        </trans-unit>
        <trans-unit id="54b0bd4bd32a031047ae1be302a66b6e6c5b1f5b" translate="yes" xml:space="preserve">
          <source>Name:   remove

   Purpose:   Lists the properties to be removed from a resource.

   Description:   Remove instructs that the properties specified in prop
      should be removed.  Specifying the removal of a property that does
      not exist is not an error.  All the XML elements in a 'prop' XML
      element inside of a 'remove' XML element MUST be empty, as only
      the names of properties to be removed are required.

   &amp;lt;!ELEMENT remove (prop) &amp;gt;</source>
          <target state="translated">Имя: remove Цель: Список свойств, которые необходимо удалить из ресурса. Описание: Remove указывает, что свойства, указанные в prop, должны быть удалены. Указание удаления несуществующего свойства не является ошибкой. Все элементы XML в элементе &amp;laquo;prop&amp;raquo; XML внутри элемента XML &amp;laquo;remove&amp;raquo; ДОЛЖНЫ быть пустыми, так как требуются только имена удаляемых свойств. &amp;lt;! ELEMENT remove (prop)&amp;gt;</target>
        </trans-unit>
        <trans-unit id="bf23482b4d15a7ccf582eb373f0c59dfd927c56a" translate="yes" xml:space="preserve">
          <source>Name:   resourcetype

   Purpose:   Specifies the nature of the resource.

   Protected:   SHOULD be protected.  Resource type is generally decided
      through the operation creating the resource (MKCOL vs PUT), not by
      PROPPATCH.

   COPY/MOVE behavior:   Generally a COPY/MOVE of a resource results in
      the same type of resource at the destination.

   Description:   MUST be defined on all DAV-compliant resources.  Each
      child element identifies a specific type the resource belongs to,
      such as 'collection', which is the only resource type defined by
      this specification (see &lt;a href=&quot;#section-14.3&quot;&gt;Section 14.3&lt;/a&gt;).  If the element contains
      the 'collection' child element plus additional unrecognized
      elements, it should generally be treated as a collection.  If the
      element contains no recognized child elements, it should be
      treated as a non-collection resource.  The default value is empty.
      This element MUST NOT contain text or mixed content.  Any custom
      child element is considered to be an identifier for a resource
      type.

   Example: (fictional example to show extensibility)

       &amp;lt;x:resourcetype xmlns:x=&quot;DAV:&quot;&amp;gt;
           &amp;lt;x:collection/&amp;gt;
           &amp;lt;f:search-results xmlns:f=&quot;http://www.example.com/ns&quot;/&amp;gt;
       &amp;lt;/x:resourcetype&amp;gt;</source>
          <target state="translated">Имя: тип ресурса Цель: Определяет природу ресурса. Защищено: ДОЛЖЕН быть защищен. Тип ресурса обычно определяется посредством операции создания ресурса (MKCOL против PUT), а не посредством PROPPATCH. Поведение КОПИРОВАНИЕ / ПЕРЕМЕЩЕНИЕ: Обычно КОПИРОВАНИЕ / ПЕРЕМЕЩЕНИЕ ресурса приводит к тому же типу ресурса в месте назначения. Описание: ДОЛЖЕН быть определен для всех DAV-совместимых ресурсов. Каждый дочерний элемент идентифицирует конкретный тип, к которому принадлежит ресурс, например, 'collection', который является единственным типом ресурса, определенным в этой спецификации (см. &lt;a href=&quot;#section-14.3&quot;&gt;Раздел 14.3.&lt;/a&gt;). Если элемент содержит дочерний элемент &amp;laquo;коллекция&amp;raquo; плюс дополнительные нераспознанные элементы, его обычно следует рассматривать как коллекцию. Если элемент не содержит распознанных дочерних элементов, его следует рассматривать как ресурс, не являющийся коллекцией. Значение по умолчанию пусто. Этот элемент НЕ ДОЛЖЕН содержать текст или смешанное содержимое. Любой настраиваемый дочерний элемент считается идентификатором для типа ресурса. Пример: (вымышленный пример, демонстрирующий расширяемость) &amp;lt;x: resourcetype xmlns: x = &quot;DAV:&quot;&amp;gt; &amp;lt;x: collection /&amp;gt; &amp;lt;f: search-results xmlns: f = &quot;http://www.example.com/ns &quot;/&amp;gt; &amp;lt;/ x: resourcetype&amp;gt;</target>
        </trans-unit>
        <trans-unit id="ba963fb29afc5c7063b3f544c4e233040e8f1dab" translate="yes" xml:space="preserve">
          <source>Name:   response

   Purpose:   Holds a single response describing the effect of a method
      on resource and/or its properties.

   Description:   The 'href' element contains an HTTP URL pointing to a
      WebDAV resource when used in the 'response' container.  A
      particular 'href' value MUST NOT appear more than once as the
      child of a 'response' XML element under a 'multistatus' XML
      element.  This requirement is necessary in order to keep
      processing costs for a response to linear time.  Essentially, this
      prevents having to search in order to group together all the
      responses by 'href'.  There are, however, no requirements
      regarding ordering based on 'href' values.  The optional
      precondition/postcondition element and 'responsedescription' text
      can provide additional information about this resource relative to
      the request or result.


   &amp;lt;!ELEMENT response (href, ((href*, status)|(propstat+)),
                       error?, responsedescription? , location?) &amp;gt;</source>
          <target state="translated">Имя: ответ Назначение: содержит единственный ответ, описывающий влияние метода на ресурс и / или его свойства. Описание: элемент href содержит URL-адрес HTTP, указывающий на ресурс WebDAV, когда он используется в контейнере &amp;laquo;ответ&amp;raquo;. Конкретное значение 'href' НЕ ДОЛЖНО появляться более одного раза в качестве дочернего элемента XML-элемента 'response' под элементом XML 'multistatus'. Это требование необходимо для сохранения затрат на обработку для реакции на линейное время. По сути, это избавляет от необходимости искать, чтобы сгруппировать все ответы по &amp;laquo;href&amp;raquo;. Однако нет никаких требований относительно заказа на основе значений 'href'. Необязательный элемент предусловия / постусловия и 'Текст responsedescription может предоставить дополнительную информацию об этом ресурсе относительно запроса или результата. &amp;lt;! ELEMENT response (href, ((href *, status) | (propstat +)), error ?, responsedescription?, Location?)&amp;gt;</target>
        </trans-unit>
        <trans-unit id="e79aa3cfbb4886f68f0cdccf03d0aaa6df292652" translate="yes" xml:space="preserve">
          <source>Name:   responsedescription

   Purpose:   Contains information about a status response within a
      Multi-Status.

   Description:   Provides information suitable to be presented to a
      user.

   &amp;lt;!ELEMENT responsedescription (#PCDATA) &amp;gt;</source>
          <target state="translated">Имя: responsedescription Назначение: Содержит информацию об ответе статуса в мульти-статусе. Описание: предоставляет информацию, подходящую для представления пользователю. &amp;lt;! Описание ответа ELEMENT (#PCDATA)&amp;gt;</target>
        </trans-unit>
        <trans-unit id="faf150c453c206be333d64c2eb169ece66eddf4f" translate="yes" xml:space="preserve">
          <source>Name:   set

   Purpose:   Lists the property values to be set for a resource.

   Description:   The 'set' element MUST contain only a 'prop' element.
      The elements contained by the 'prop' element inside the 'set'
      element MUST specify the name and value of properties that are set
      on the resource identified by Request-URI.  If a property already
      exists, then its value is replaced.  Language tagging information
      appearing in the scope of the 'prop' element (in the &quot;xml:lang&quot; 

      attribute, if present) MUST be persistently stored along with the
      property, and MUST be subsequently retrievable using PROPFIND.

   &amp;lt;!ELEMENT set (prop) &amp;gt;</source>
          <target state="translated">Имя: set Назначение: Список значений свойств, которые должны быть установлены для ресурса. Описание: элемент 'set' ДОЛЖЕН содержать только элемент 'prop'. Элементы, содержащиеся в элементе &amp;laquo;prop&amp;raquo; внутри элемента &amp;laquo;set&amp;raquo;, ДОЛЖНЫ указывать имя и значение свойств, которые устанавливаются для ресурса, идентифицированного Request-URI. Если свойство уже существует, его значение заменяется. Информация о языковых тегах, появляющаяся в области действия элемента 'prop' (в атрибуте &quot;xml: lang&quot;, если он присутствует), ДОЛЖНА постоянно храниться вместе со свойством и ДОЛЖНА быть впоследствии извлечена с помощью PROPFIND. &amp;lt;! Набор элементов (опора)&amp;gt;</target>
        </trans-unit>
        <trans-unit id="034ef0121821410e6799f280fbce98e61bb36fec" translate="yes" xml:space="preserve">
          <source>Name:   shared

   Purpose:   Specifies a shared lock.


   &amp;lt;!ELEMENT shared EMPTY &amp;gt;</source>
          <target state="translated">Имя: shared Назначение: Указывает общую блокировку. &amp;lt;! ELEMENT shared EMPTY&amp;gt;</target>
        </trans-unit>
        <trans-unit id="89e2c86f49074c5456840897eea52e652dab08d2" translate="yes" xml:space="preserve">
          <source>Name:   status

   Purpose:   Holds a single HTTP status-line.

   Value:   status-line (defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-6.1&quot;&gt;Section&amp;nbsp;6.1 of [RFC2616]&lt;/a&gt;)

   &amp;lt;!ELEMENT status (#PCDATA) &amp;gt;</source>
          <target state="translated">Имя: status Назначение: Содержит одну строку состояния HTTP. Значение: строка состояния (определено в &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-6.1&quot;&gt;разделе 6.1 [RFC2616]&lt;/a&gt; ) &amp;lt;! ELEMENT status (#PCDATA)&amp;gt;</target>
        </trans-unit>
        <trans-unit id="6cd030e3b2b200c8abb49cd69f079bd0720dc672" translate="yes" xml:space="preserve">
          <source>Name:   supportedlock

   Purpose:   To provide a listing of the lock capabilities supported by
      the resource.

   Protected:   MUST be protected.  Servers, not clients, determine what
      lock mechanisms are supported. 

   COPY/MOVE behavior:   This property value is dependent on the kind of
      locks supported at the destination, not on the value of the
      property at the source resource.  Servers attempting to COPY to a
      destination should not attempt to set this property at the
      destination.

   Description:   Returns a listing of the combinations of scope and
      access types that may be specified in a lock request on the
      resource.  Note that the actual contents are themselves controlled
      by access controls, so a server is not required to provide
      information the client is not authorized to see.  This property is
      NOT lockable with respect to write locks (&lt;a href=&quot;#section-7&quot;&gt;Section 7&lt;/a&gt;).

   &amp;lt;!ELEMENT supportedlock (lockentry)* &amp;gt;</source>
          <target state="translated">Имя: supportedlock Цель: предоставить список возможностей блокировки, поддерживаемых ресурсом. Защищено: ДОЛЖЕН быть защищен. Серверы, а не клиенты, определяют, какие механизмы блокировки поддерживаются. Поведение COPY / MOVE: значение этого свойства зависит от типа блокировок, поддерживаемых в месте назначения, а не от значения свойства в исходном ресурсе. Серверы, пытающиеся скопировать в пункт назначения, не должны пытаться установить это свойство в пункте назначения. Описание: возвращает список комбинаций областей видимости и типов доступа, которые могут быть указаны в запросе блокировки ресурса. Обратите внимание, что фактическое содержимое само контролируется средствами управления доступом, поэтому серверу не требуется предоставлять информацию, которую клиент не имеет права видеть.Это свойство НЕ блокируется относительно блокировок записи (&lt;a href=&quot;#section-7&quot;&gt;Раздел 7&lt;/a&gt; ). &amp;lt;! ELEMENT supportedlock (lockentry) *&amp;gt;</target>
        </trans-unit>
        <trans-unit id="35119527bc63f501789916897c0befe464dc6217" translate="yes" xml:space="preserve">
          <source>Name:   timeout

   Purpose:   The number of seconds remaining before a lock expires.

   Value:   TimeType (defined in &lt;a href=&quot;#section-10.7&quot;&gt;Section 10.7&lt;/a&gt;)


      &amp;lt;!ELEMENT timeout (#PCDATA) &amp;gt;</source>
          <target state="translated">Название: тайм-аут. Цель: количество секунд, оставшихся до истечения срока действия блокировки. Значение: TimeType (определено в &lt;a href=&quot;#section-10.7&quot;&gt;разделе 10.7&lt;/a&gt; ) &amp;lt;! ELEMENT timeout (#PCDATA)&amp;gt;</target>
        </trans-unit>
        <trans-unit id="d89a920056d92541b3e4aaafcac0f2c97ae89ad3" translate="yes" xml:space="preserve">
          <source>Name:   write

   Purpose:   Specifies a write lock.


   &amp;lt;!ELEMENT write EMPTY &amp;gt;</source>
          <target state="translated">Имя: запись Цель: Задает блокировку записи. &amp;lt;! ELEMENT написать ПУСТО&amp;gt;</target>
        </trans-unit>
        <trans-unit id="ef928101d810c7b294edc543143c4a9808fc0cd4" translate="yes" xml:space="preserve">
          <source>Navigate to the web site or web app in question and open the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Tools&quot;&gt;Developer Tools&lt;/a&gt;.</source>
          <target state="translated">Перейдите на соответствующий веб-сайт или веб-приложение и откройте &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Tools&quot;&gt;Инструменты разработчика&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="24cfea67414a6051f8ef6f58e4703f34128176fb" translate="yes" xml:space="preserve">
          <source>Navigation directive</source>
          <target state="translated">Навигационная директива</target>
        </trans-unit>
        <trans-unit id="6cb820339644262483e0df69ef7b63b3ff7eb0cf" translate="yes" xml:space="preserve">
          <source>Navigation directives</source>
          <target state="translated">Навигационные директивы</target>
        </trans-unit>
        <trans-unit id="3d7680d3ffd85eebd63677687a9aa06b50aefc80" translate="yes" xml:space="preserve">
          <source>Navigation directives govern to which location a user can navigate to or submit a form to, for example.</source>
          <target state="translated">Навигационные директивы определяют,в какое место пользователь может перейти,например,или отправить форму.</target>
        </trans-unit>
        <trans-unit id="b8f17a51486a6c93c18c623fe00bac1bdf6887b8" translate="yes" xml:space="preserve">
          <source>Navigation directives govern to which locations a user can navigate or submit a form, for example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d198c1bf717002743411eff6ca257f87f502017" translate="yes" xml:space="preserve">
          <source>Navigation to</source>
          <target state="translated">Навигация к</target>
        </trans-unit>
        <trans-unit id="4fd5b390b406ef3a192cb33756658713f813cdd9" translate="yes" xml:space="preserve">
          <source>Navigational upgrades to third-party resources brings a significantly higher potential for breakage, these are not upgraded:</source>
          <target state="translated">Модернизация навигационных систем на сторонних ресурсах значительно повышает вероятность поломки,они не обновляются:</target>
        </trans-unit>
        <trans-unit id="1fd128a511cf81f2a11a5b15d991245ba541495b" translate="yes" xml:space="preserve">
          <source>Negotiating an HTTP version</source>
          <target state="translated">Ведение переговоров по HTTP-версии</target>
        </trans-unit>
        <trans-unit id="ed456a86e768ff867a28fdf6f5a786b103d3075c" translate="yes" xml:space="preserve">
          <source>Network Error Logging</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbc524ee8191a3484608469f9bf18ce746009948" translate="yes" xml:space="preserve">
          <source>Network Error Logging (NEL) explainer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3085195686e3cf306470fa36a147b8507888942" translate="yes" xml:space="preserve">
          <source>Network Error Logging is a mechanism that can be configured via the &lt;a href=&quot;headers/nel&quot;&gt;&lt;code&gt;NEL&lt;/code&gt;&lt;/a&gt; HTTP &lt;em&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Response_header&quot;&gt;response header&lt;/a&gt;&lt;/em&gt;. This experimental header allows web sites and applications to opt-in to receive reports about failed (and, if desired, successful) network fetches from supporting browsers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9359b43b3679ffebf30c6ff7f3222f0b6df7956c" translate="yes" xml:space="preserve">
          <source>Network Working Group                                      R. Fielding
Request for Comments: 2616                                   UC Irvine
Obsoletes: &lt;a href=&quot;https://tools.ietf.org/html/rfc2068&quot;&gt;2068&lt;/a&gt;                                              J. Gettys
Category: Standards Track                                   Compaq/W3C
                                                              J. Mogul
                                                                Compaq
                                                            H. Frystyk
                                                               W3C/MIT
                                                           L. Masinter
                                                                 Xerox
                                                              P. Leach
                                                             Microsoft
                                                        T. Berners-Lee
                                                               W3C/MIT
                                                             June 1999</source>
          <target state="translated">Сетевая рабочая группа Р. Филдинг Запрос на комментарии: 2616 UC Irvine Устарело: &lt;a href=&quot;https://tools.ietf.org/html/rfc2068&quot;&gt;2068&lt;/a&gt; Дж. Геттис Категория: Стандарты Отслеживание Compaq / W3C Дж. Могул Compaq Х. Фристик W3C / MIT Л. Масинтер Ксерокс П. Лич Microsoft T.Бернерс-Ли, W3C / MIT, июнь 1999 г.</target>
        </trans-unit>
        <trans-unit id="5428bbcea03dea51ffb7eb6864dea642db9e9245" translate="yes" xml:space="preserve">
          <source>Network Working Group                                   J. Gregorio, Ed.
Request for Comments: 5023                                        Google
Category: Standards Track                                B. de hOra, Ed.
                                                         NewBay Software
                                                            October 2007</source>
          <target state="translated">Сетевая рабочая группа Х.Грегорио,Ред.Запрос комментариев:5023 Категория Google:Стандарты Трек Б.де Ора,Ред.NewBay Software октябрь 2007</target>
        </trans-unit>
        <trans-unit id="4d8ae710cb99c4a7621dd240f2f410770ca46d77" translate="yes" xml:space="preserve">
          <source>Network Working Group                                  L. Dusseault, Ed.
Request for Comments: 4918                                   CommerceNet
Obsoletes: &lt;a href=&quot;https://tools.ietf.org/html/rfc2518&quot;&gt;2518&lt;/a&gt;                                                June 2007
Category: Standards Track</source>
          <target state="translated">Сетевая рабочая группа Л. Дюссо, Под ред. Запрос комментариев: 4918 CommerceNet Устарело: &lt;a href=&quot;https://tools.ietf.org/html/rfc2518&quot;&gt;2518&lt;/a&gt; июня 2007 г. Категория: Standards Track</target>
        </trans-unit>
        <trans-unit id="e3623b4b3820bb728eda2dde15946a4290819387" translate="yes" xml:space="preserve">
          <source>Network monitor</source>
          <target state="translated">Сетевой монитор</target>
        </trans-unit>
        <trans-unit id="e50032eb35aad47bed9d5ff741f087c1986c82ba" translate="yes" xml:space="preserve">
          <source>Network operators sometimes require some authentication, acceptance of terms, or other user interaction before granting access (for example in an internet caf&amp;eacute; or at an airport). They often identify clients who have not done so using their Media Access Control (&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/MAC&quot;&gt;MAC&lt;/a&gt;) addresses.</source>
          <target state="translated">Сетевые операторы иногда требуют некоторой аутентификации, принятия условий или другого взаимодействия с пользователем перед предоставлением доступа (например, в интернет-кафе или в аэропорту). Они часто идентифицируют клиентов, которые этого не сделали, используя свои адреса управления доступом к среде ( &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/MAC&quot;&gt;MAC&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="6b43fa182a48c949aed212293ef54b74e65782bb" translate="yes" xml:space="preserve">
          <source>Never assume that a browser or a rendering engine only runs on one type of device. Especially don't make different defaults for different browsers or rendering engines.</source>
          <target state="translated">Никогда не думайте,что браузер или рендер-движок работает только на одном типе устройств.Особенно не делайте разные настройки по умолчанию для разных браузеров или рендер-движков.</target>
        </trans-unit>
        <trans-unit id="2ec7bc9b9c4ccaf3179748dcdf8d87e35784c21d" translate="yes" xml:space="preserve">
          <source>Never use the OS token to define if a browser is on mobile, tablet or desktop. The OS may run on more than one type of (for example, Android runs on tablets as well as phones).</source>
          <target state="translated">Никогда не используйте маркер операционной системы,чтобы определить,находится ли браузер на мобильном,планшетном или настольном компьютере.ОС может работать на нескольких типах (например,Android работает как на планшетах,так и на телефонах).</target>
        </trans-unit>
        <trans-unit id="9f77f8caaa3035ec127bade7a0545aa68e91b610" translate="yes" xml:space="preserve">
          <source>New cookies can also be created via JavaScript using the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document/cookie&quot;&gt;&lt;code&gt;Document.cookie&lt;/code&gt;&lt;/a&gt; property, and if the &lt;code&gt;HttpOnly&lt;/code&gt; flag is not set, existing cookies can be accessed from JavaScript as well.</source>
          <target state="translated">Новые файлы cookie также можно создавать с помощью JavaScript с помощью свойства &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document/cookie&quot;&gt; &lt;code&gt;Document.cookie&lt;/code&gt; &lt;/a&gt; , и если флаг &lt;code&gt;HttpOnly&lt;/code&gt; не установлен, доступ к существующим файлам cookie также можно получить из JavaScript.</target>
        </trans-unit>
        <trans-unit id="cabdce1954a6f407085d2e37f45b2e105f92b4ef" translate="yes" xml:space="preserve">
          <source>New cookies can be created via JavaScript using the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document/cookie&quot;&gt;&lt;code&gt;Document.cookie&lt;/code&gt;&lt;/a&gt; property, and existing cookies can be accessed from JavaScript as well, if the &lt;code&gt;HttpOnly&lt;/code&gt; flag is not set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5dfd3e32cc719743d36b551e2cc31f5efa09bb4" translate="yes" xml:space="preserve">
          <source>New definition; supplants &lt;a href=&quot;https://www.w3.org/TR/cors/&quot;&gt;W3C CORS&lt;/a&gt; specification.</source>
          <target state="translated">Новое определение; заменяет &lt;a href=&quot;https://www.w3.org/TR/cors/&quot;&gt;спецификацию W3C CORS&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="07349da357d41ca5084e50db9d4b1c35940a7768" translate="yes" xml:space="preserve">
          <source>New extension directives ought to consider defining:

   o  What it means for a directive to be specified multiple times,

   o  When the directive does not take an argument, what it means when
      an argument is present,

   o  When the directive requires an argument, what it means when it is
      missing,

   o  Whether the directive is specific to requests, responses, or able
      to be used in either.

   See also &lt;a href=&quot;#section-5.2.3&quot;&gt;Section 5.2.3&lt;/a&gt;.</source>
          <target state="translated">Новые директивы расширения должны учитывать определение: o Что означает указание директивы несколько раз, o Когда директива не принимает аргумент, что это означает, когда аргумент присутствует, o Когда директива требует аргумента, что он означает, когда он отсутствует, o относится ли директива к запросам, ответам или может ли она использоваться в любом из них. См. Также &lt;a href=&quot;#section-5.2.3&quot;&gt;Раздел 5.2.3&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e03ab58c9bd12196de6bace27f6b044aff80f31c" translate="yes" xml:space="preserve">
          <source>New specifications MAY require that the &quot;type&quot; parameter be used to
   identify the Atom Document type.  Producers of Atom Entry Documents
   SHOULD use the &quot;type&quot; parameter regardless of whether or not it is
   mandatory.  Producers of Atom Feed Documents MAY use the parameter.

   Atom processors that do not recognize the &quot;type&quot; parameter MUST
   ignore its value and examine the root element to determine the
   document type.

   Atom processors that do recognize the &quot;type&quot; parameter SHOULD detect
   and report inconsistencies between the parameter's value and the
   actual type of the document's root element.</source>
          <target state="translated">Новые спецификации MAY требуют использования параметра &quot;тип&quot; для идентификации типа Атомного документа.Производители Atom Entry Documents ДОЛЖНЫ использовать параметр &quot;type&quot; независимо от того,является ли он обязательным или нет.Производители Atom Feed Documents МАЙЯ используют этот параметр.Атомные процессоры,не распознающие параметр &quot;type&quot; ДОЛЖНЫ игнорировать его значение и проверять корневой элемент на определение типа документа.Атомные процессоры,распознающие параметр &quot;type&quot; ДОЛЖНЫ обнаружить и сообщить о несоответствии значения параметра фактическому типу корневого элемента документа.</target>
        </trans-unit>
        <trans-unit id="e6f86f1d136025273b58141bacfbb27f4d328e53" translate="yes" xml:space="preserve">
          <source>Next, always make your code dynamic. The user can flip their mobile device on its side, changing the width and height of the page. Or, there might be some weird flip-phone-like device thing in the future where flipping it out extends the screen. Do not be the developer having a headache over how to deal with the flip-phone-like device thing. Never be satisfied with your webpage until you can open up the dev tools side panel and resize the screen while the webpage looks smooth, fluid, and dynamically resized. The simplest way to do this is to separate all the code that moves content around based on screen size to a single function that is called when the page is loaded and at each &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/resize_event&quot;&gt;resize&lt;/a&gt; event thereafter. If there is a lot calculated by this layout function before it determines the new layout of the page, then consider debouncing the event listener such that it is not called as often. Also note that there is a huge difference between the media queries &lt;code&gt;(max-width: 25em)&lt;/code&gt;, &lt;code&gt;not all and (min-width: 25em)&lt;/code&gt;, and &lt;code&gt;(max-width: 24.99em)&lt;/code&gt;: &lt;code&gt;(max-width: 25em)&lt;/code&gt; excludes &lt;code&gt;(max-width: 25em)&lt;/code&gt;, whereas &lt;code&gt;not all and (min-width: 25em)&lt;/code&gt; includes &lt;code&gt;(max-width: 25em)&lt;/code&gt;. &lt;code&gt;(max-width: 24.99em)&lt;/code&gt; is simply a poor man's version of &lt;code&gt;not all and&amp;nbsp;(min-width: 25em)&lt;/code&gt;: do not use &lt;code&gt;(max-width: 24.99em)&lt;/code&gt; because the layout &lt;em&gt;might&lt;/em&gt; break on very high font sizes on very high definition devices in the future. Always be very deliberate about choosing the right media query and choosing the right &amp;gt;=, &amp;lt;=, &amp;gt;, or &amp;lt; in any corresponding JavaScript because it is very easy to get these mixed up, resulting in the website looking wonking right at the screen size where the layout changes. Thus, thoroughly test the website at the exact widths/heights where layout changes occur to ensure that the layout changes occur properly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7b12052c0895e1742c7c3344db204110106e883" translate="yes" xml:space="preserve">
          <source>Next, you should configure your server to map the .pac filename extension to the MIME type.</source>
          <target state="translated">Далее,вы должны настроить свой сервер на сопоставление расширения имени файла .pac с MIME типом.</target>
        </trans-unit>
        <trans-unit id="f2560cbce63028d4ce27fdd2ae2588b9ae69ca1e" translate="yes" xml:space="preserve">
          <source>Nginx</source>
          <target state="translated">Nginx</target>
        </trans-unit>
        <trans-unit id="cec384f7e83e464f4943c72ce6f108fdb5f1b9ed" translate="yes" xml:space="preserve">
          <source>Nginx configuration</source>
          <target state="translated">конфигурация Nginx</target>
        </trans-unit>
        <trans-unit id="4f024b156ff549e7822c3e7d3365e8b43d1fb094" translate="yes" xml:space="preserve">
          <source>Nicholas Zakas article on cookies</source>
          <target state="translated">Николас Закас статья о куки-файлах</target>
        </trans-unit>
        <trans-unit id="d49005ff40f6342035c0b550381a16bf3992b810" translate="yes" xml:space="preserve">
          <source>Nicholas Zakas article on cookies and security</source>
          <target state="translated">Николас Закас статья о кукисах и безопасности</target>
        </trans-unit>
        <trans-unit id="816c52fd2bdd94a63cd0944823a6c0aa9384c103" translate="yes" xml:space="preserve">
          <source>No</source>
          <target state="translated">No</target>
        </trans-unit>
        <trans-unit id="2e029a8ccab5f30d2a37a9fb7c59617e13c16abc" translate="yes" xml:space="preserve">
          <source>No &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream&quot;&gt;&lt;code&gt;ReadableStream&lt;/code&gt;&lt;/a&gt; object is used in the request.</source>
          <target state="translated">В запросе не используется объект &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream&quot;&gt; &lt;code&gt;ReadableStream&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="17a7d28f373846b5f71d72172ff5a2f4594ba504" translate="yes" xml:space="preserve">
          <source>No cache storage at all</source>
          <target state="translated">Кэш-память вообще не хранится</target>
        </trans-unit>
        <trans-unit id="c55e5b38338e0330c22fc379f2150b6de3dd84ba" translate="yes" xml:space="preserve">
          <source>No caching</source>
          <target state="translated">Нет кэширования</target>
        </trans-unit>
        <trans-unit id="9b1fcbda693f085c4d6d33acbf333e420ba23fca" translate="yes" xml:space="preserve">
          <source>No changes.</source>
          <target state="translated">Никаких изменений.</target>
        </trans-unit>
        <trans-unit id="d4c0e9228f3e84fb358ddccd2e00420664a85404" translate="yes" xml:space="preserve">
          <source>No common browsers send the &lt;code&gt;Expect&lt;/code&gt; header, but some other clients such as cURL do so by default.</source>
          <target state="translated">Обычные браузеры не отправляют заголовок &lt;code&gt;Expect&lt;/code&gt; , но некоторые другие клиенты, такие как cURL, делают это по умолчанию.</target>
        </trans-unit>
        <trans-unit id="cdd99c30977facc38dbb4433f72792cc98e7b957" translate="yes" xml:space="preserve">
          <source>No compatibility data found. Please contribute data for &quot;http.headers.Alt-Svc&quot; (depth: 1) to the &lt;a href=&quot;https://github.com/mdn/browser-compat-data&quot;&gt;MDN compatibility data repository&lt;/a&gt;.</source>
          <target state="translated">Данных о совместимости не найдено. Пожалуйста, внесите данные для http.headers.Alt-Svc (глубина: 1) в &lt;a href=&quot;https://github.com/mdn/browser-compat-data&quot;&gt;репозиторий данных совместимости MDN&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0f9ea7be16970fe67508438505a3982b349d0124" translate="yes" xml:space="preserve">
          <source>No compatibility data found. Please contribute data for &quot;http.headers.Feature-Policy.document-domain&quot; (depth: 1) to the &lt;a href=&quot;https://github.com/mdn/browser-compat-data&quot;&gt;MDN compatibility data repository&lt;/a&gt;.</source>
          <target state="translated">Данных о совместимости не найдено. Пожалуйста, внесите данные для http.headers.Feature-Policy.document-domain (глубина: 1) в &lt;a href=&quot;https://github.com/mdn/browser-compat-data&quot;&gt;репозиторий данных совместимости MDN&lt;/a&gt; .</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
