<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="http">
    <body>
      <group id="http">
        <trans-unit id="bf1f2785d8f6ee0235d694fd6179a1a3ebce5bba" translate="yes" xml:space="preserve">
          <source>RFC 5789, section 2: Patch method</source>
          <target state="translated">RFC 5789,раздел 2:Метод патча</target>
        </trans-unit>
        <trans-unit id="fcb38f9a6380d714f3aa4aa1f4201bc7bc90649d" translate="yes" xml:space="preserve">
          <source>RFC 5789: PATCH</source>
          <target state="translated">ШТ.5789:ЗАПЛАТКА</target>
        </trans-unit>
        <trans-unit id="435cdf88638b49c1ce4749b77a33a7b13603777d" translate="yes" xml:space="preserve">
          <source>RFC 5861</source>
          <target state="translated">RFC 5861</target>
        </trans-unit>
        <trans-unit id="226ff035a62a7f266b477b5175c0a96c8bb2165a" translate="yes" xml:space="preserve">
          <source>RFC 5861: HTTP Cache-Control Extensions for Stale Content</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48dc1f7525cc2cf74db930d6713d686f2df34d50" translate="yes" xml:space="preserve">
          <source>RFC 5988</source>
          <target state="translated">RFC 5988</target>
        </trans-unit>
        <trans-unit id="2b11e388477bae4eb7798fb62c83b47e1cbed253" translate="yes" xml:space="preserve">
          <source>RFC 6265</source>
          <target state="translated">RFC 6265</target>
        </trans-unit>
        <trans-unit id="b5eb31f373a0763462f319db509a52b6efca5715" translate="yes" xml:space="preserve">
          <source>RFC 6265, section 4.1: Set-Cookie</source>
          <target state="translated">RFC 6265,раздел 4.1:Набор-привязка</target>
        </trans-unit>
        <trans-unit id="15c9cf4fea3d42ffcec6eb1b94d408b0e19bb14e" translate="yes" xml:space="preserve">
          <source>RFC 6265, section 5.4: Cookie</source>
          <target state="translated">RFC 6265,раздел 5.4:Cookie</target>
        </trans-unit>
        <trans-unit id="613865a71a94220a6a1341819550a78bc1fc41ef" translate="yes" xml:space="preserve">
          <source>RFC 6266</source>
          <target state="translated">RFC 6266</target>
        </trans-unit>
        <trans-unit id="d3105d90012e53abd5db2c45d15c178159422497" translate="yes" xml:space="preserve">
          <source>RFC 6454</source>
          <target state="translated">RFC 6454</target>
        </trans-unit>
        <trans-unit id="fd51012d090b8c63c11d5dd6844e9f25685bef76" translate="yes" xml:space="preserve">
          <source>RFC 6454, section 7: Origin</source>
          <target state="translated">RFC 6454,раздел 7:Происхождение</target>
        </trans-unit>
        <trans-unit id="2e1c3bd109055e3c75b85953fe0738a169565c42" translate="yes" xml:space="preserve">
          <source>RFC 6455</source>
          <target state="translated">RFC 6455</target>
        </trans-unit>
        <trans-unit id="86802f0623b9fab215ab4bcc599a1c003c37e0b7" translate="yes" xml:space="preserve">
          <source>RFC 6455, section 11.3.3: Sec-WebSocket-Accept</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19d36fc539eae3719343f4e94df0ac87431a15c5" translate="yes" xml:space="preserve">
          <source>RFC 6585</source>
          <target state="translated">RFC 6585</target>
        </trans-unit>
        <trans-unit id="45d634e5b12466ed4cc193d856d4e4c08256a283" translate="yes" xml:space="preserve">
          <source>RFC 6585, section 3: 428 Precondition Required</source>
          <target state="translated">RFC 6585,раздел 3:428 Условия Требуется предварительное условие</target>
        </trans-unit>
        <trans-unit id="07a86b3bb5912601c3ae8de2ec856a047e1a4207" translate="yes" xml:space="preserve">
          <source>RFC 6585, section 4: 429 Too Many Requests</source>
          <target state="translated">RFC 6585,раздел 4:429 Слишком много запросов</target>
        </trans-unit>
        <trans-unit id="bae288b759aab289a7b722340a6c68ada2a24664" translate="yes" xml:space="preserve">
          <source>RFC 6585, section 5: 431 Request Header Fields Too Large</source>
          <target state="translated">RFC 6585,раздел 5:431 Запрос Поля заголовка слишком большие</target>
        </trans-unit>
        <trans-unit id="f0550ad6cfb7431d8de64660db24e5adfdd0f1cd" translate="yes" xml:space="preserve">
          <source>RFC 6585, section 6: 511 Network Authentication Required</source>
          <target state="translated">RFC 6585,раздел 6:511 Требуется проверка подлинности сети</target>
        </trans-unit>
        <trans-unit id="f59f441f51a2a15aab903870156075198c21cdcd" translate="yes" xml:space="preserve">
          <source>RFC 6797</source>
          <target state="translated">RFC 6797</target>
        </trans-unit>
        <trans-unit id="0f65e4b9ea5170ccf77ae139b024de2922225370" translate="yes" xml:space="preserve">
          <source>RFC 7034</source>
          <target state="translated">RFC 7034</target>
        </trans-unit>
        <trans-unit id="6b67e7dae86a60ad1a1b1df8824dc9553710faf9" translate="yes" xml:space="preserve">
          <source>RFC 7168</source>
          <target state="translated">RFC 7168</target>
        </trans-unit>
        <trans-unit id="5462ffa212ed4302d0699e27c71e7418400fa7ad" translate="yes" xml:space="preserve">
          <source>RFC 7168, section 2.3.3: 418 I'm a teapot</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c5e351b2c4935f263fb4a48d2a5973b96f162c0" translate="yes" xml:space="preserve">
          <source>RFC 7230</source>
          <target state="translated">RFC 7230</target>
        </trans-unit>
        <trans-unit id="05085ef8bae59f857a83a325ca8b5cb7c95f7a86" translate="yes" xml:space="preserve">
          <source>RFC 7230, appendix A.1.2: Keep-Alive</source>
          <target state="translated">RFC 7230,приложение A.1.2:Сохранять актуальность</target>
        </trans-unit>
        <trans-unit id="0e5d3d164e7dba93b9411bbfb503f35bd97bc36f" translate="yes" xml:space="preserve">
          <source>RFC 7230, section 2.7: Uniform Resource Identifiers</source>
          <target state="translated">RFC 7230,раздел 2.7:Унифицированные идентификаторы ресурсов</target>
        </trans-unit>
        <trans-unit id="747d53c19ff7b93c55d4b76ad86eb7700475d3b8" translate="yes" xml:space="preserve">
          <source>RFC 7230, section 3.3.1: Transfer-Encoding</source>
          <target state="translated">RFC 7230,раздел 3.3.1:Переносное кодирование</target>
        </trans-unit>
        <trans-unit id="f0a41fabfd014b8b41ea52076f5ba499d7cab7cc" translate="yes" xml:space="preserve">
          <source>RFC 7230, section 3.3.2: Content-Length</source>
          <target state="translated">RFC 7230,раздел 3.3.2:Контент-длина</target>
        </trans-unit>
        <trans-unit id="ce15bb0ced28e642094a4b2e10552a5a260c63c6" translate="yes" xml:space="preserve">
          <source>RFC 7230, section 4.1.2: Chunked trailer part</source>
          <target state="translated">RFC 7230,раздел 4.1.2:Забитая часть прицепа</target>
        </trans-unit>
        <trans-unit id="dc4a36d13fa8deb7e75049f8717535024790d01d" translate="yes" xml:space="preserve">
          <source>RFC 7230, section 4.3: TE</source>
          <target state="translated">RFC 7230,раздел 4.3:TE</target>
        </trans-unit>
        <trans-unit id="d01fd56ebeb831ef7c0ec347cc56581ef2c37a02" translate="yes" xml:space="preserve">
          <source>RFC 7230, section 4.4: Trailer</source>
          <target state="translated">RFC 7230,раздел 4.4:Прицеп</target>
        </trans-unit>
        <trans-unit id="ce720dca2d38fd8ebd182748949f09c36140d1ba" translate="yes" xml:space="preserve">
          <source>RFC 7230, section 5.4: Host</source>
          <target state="translated">RFC 7230,раздел 5.4:Ведущий</target>
        </trans-unit>
        <trans-unit id="72b7097053626ce619fadddb8fd07f185dcb00c0" translate="yes" xml:space="preserve">
          <source>RFC 7230, section 5.7.1: Via</source>
          <target state="translated">RFC 7230,раздел 5.7.1:Через</target>
        </trans-unit>
        <trans-unit id="ce9e01aff0adf150803198bb232477284f281a17" translate="yes" xml:space="preserve">
          <source>RFC 7230: Message Syntax and Routing</source>
          <target state="translated">RFC 7230:Синтаксис и маршрутизация сообщений</target>
        </trans-unit>
        <trans-unit id="caea547a0cf9d64aba6043b091dc5eb22f58c313" translate="yes" xml:space="preserve">
          <source>RFC 7231</source>
          <target state="translated">RFC 7231</target>
        </trans-unit>
        <trans-unit id="08e4bb7d474ebf9b4dd37dbb5dfb6ad9f1018a66" translate="yes" xml:space="preserve">
          <source>RFC 7231, section 3.1.1.5: Content-Type</source>
          <target state="translated">RFC 7231,раздел 3.1.1.5:Контент-тип</target>
        </trans-unit>
        <trans-unit id="845eed76936a3d924d01b333e9f1eb88f65e9b0f" translate="yes" xml:space="preserve">
          <source>RFC 7231, section 3.1.2.2: Content-Encoding</source>
          <target state="translated">RFC 7231,раздел 3.1.2.2:Контентное кодирование</target>
        </trans-unit>
        <trans-unit id="ea53991de97033c504914c78c87f5ffed390f149" translate="yes" xml:space="preserve">
          <source>RFC 7231, section 3.1.3.2: Content-Language</source>
          <target state="translated">RFC 7231,раздел 3.1.3.2:Контент-язык</target>
        </trans-unit>
        <trans-unit id="c63e7fc6e081defb92fe9ecf5164796bcbd6a746" translate="yes" xml:space="preserve">
          <source>RFC 7231, section 3.1.4.2: Content-Location</source>
          <target state="translated">RFC 7231,раздел 3.1.4.2:Контент-месторасположение</target>
        </trans-unit>
        <trans-unit id="d4fb8e8cb57094e1102d5ce3bdd8cff5312ab200" translate="yes" xml:space="preserve">
          <source>RFC 7231, section 4.3.1: GET</source>
          <target state="translated">RFC 7231,раздел 4.3.1:TEG</target>
        </trans-unit>
        <trans-unit id="beb916c6c25dc7649f8c49842ab7dcda780a0246" translate="yes" xml:space="preserve">
          <source>RFC 7231, section 4.3.2: HEAD</source>
          <target state="translated">RFC 7231,раздел 4.3.2:ЗДОРОВЬЕ</target>
        </trans-unit>
        <trans-unit id="396a77b857e79049fe6031ef49d21a0effb58e9a" translate="yes" xml:space="preserve">
          <source>RFC 7231, section 4.3.3: POST</source>
          <target state="translated">RFC 7231,раздел 4.3.3:ПОСТ</target>
        </trans-unit>
        <trans-unit id="be438af5d1a292f596f21a801b7d9603f1cab40b" translate="yes" xml:space="preserve">
          <source>RFC 7231, section 4.3.4: PUT</source>
          <target state="translated">RFC 7231,раздел 4.3.4:LUP</target>
        </trans-unit>
        <trans-unit id="f107039cbadc5f826dae91dd218c725e9d18d841" translate="yes" xml:space="preserve">
          <source>RFC 7231, section 4.3.5: DELETE</source>
          <target state="translated">RFC 7231,раздел 4.3.5:УДАЛИТАЦИЯ</target>
        </trans-unit>
        <trans-unit id="1dc7248ccd888336bd82b884b087f4b3f4f4679d" translate="yes" xml:space="preserve">
          <source>RFC 7231, section 4.3.6: CONNECT</source>
          <target state="translated">RFC 7231,раздел 4.3.6:ПОДКЛЮЧЕНИЕ</target>
        </trans-unit>
        <trans-unit id="5ef875b188d1b54f345842c090e95ae722453dbd" translate="yes" xml:space="preserve">
          <source>RFC 7231, section 4.3.7: OPTIONS</source>
          <target state="translated">RFC 7231,раздел 4.3.7:ВАРИАНТЫ</target>
        </trans-unit>
        <trans-unit id="332f9c31f0f5c275ad307d53cca2499a9459de39" translate="yes" xml:space="preserve">
          <source>RFC 7231, section 4.3.8: TRACE</source>
          <target state="translated">RFC 7231,раздел 4.3.8:TRACE</target>
        </trans-unit>
        <trans-unit id="23ec2e6bb03069a7e2356906fa0861e5c5f31298" translate="yes" xml:space="preserve">
          <source>RFC 7231, section 4: Request methods</source>
          <target state="translated">RFC 7231,раздел 4:Методы запроса</target>
        </trans-unit>
        <trans-unit id="ca01a74d4319434dec806f81b435f5ef7fe00cac" translate="yes" xml:space="preserve">
          <source>RFC 7231, section 5.1.1: Expect</source>
          <target state="translated">RFC 7231,раздел 5.1.1:Ожидайте</target>
        </trans-unit>
        <trans-unit id="482924da4508aa7f733bf03dc780a68aae52445c" translate="yes" xml:space="preserve">
          <source>RFC 7231, section 5.3.2: Accept</source>
          <target state="translated">RFC 7231,раздел 5.3.2:приемка</target>
        </trans-unit>
        <trans-unit id="35accde19d283e519f8ec1ed2362fcc85f24a93d" translate="yes" xml:space="preserve">
          <source>RFC 7231, section 5.3.3: Accept-Charset</source>
          <target state="translated">RFC 7231,раздел 5.3.3:Приемка-транспортировка</target>
        </trans-unit>
        <trans-unit id="ad6e29ab51fd42d62fbcdb472acfb4ac84a2a268" translate="yes" xml:space="preserve">
          <source>RFC 7231, section 5.3.4: Accept-Encoding</source>
          <target state="translated">RFC 7231,раздел 5.3.4:Приемка-расхождение</target>
        </trans-unit>
        <trans-unit id="807a7c74e7037b7f5abd66cfb4a79ff6ae43d3b7" translate="yes" xml:space="preserve">
          <source>RFC 7231, section 5.3.5: Accept-Language</source>
          <target state="translated">RFC 7231,раздел 5.3.5:Принимать-Язык</target>
        </trans-unit>
        <trans-unit id="e193dba38f7e55035b47ef2c109569e16479cf69" translate="yes" xml:space="preserve">
          <source>RFC 7231, section 5.5.1: From</source>
          <target state="translated">RFC 7231,раздел 5.5.1:От</target>
        </trans-unit>
        <trans-unit id="b509df34815d389002b3401e3af6b97ec17a4637" translate="yes" xml:space="preserve">
          <source>RFC 7231, section 5.5.2: Referer</source>
          <target state="translated">RFC 7231,раздел 5.5.2:Справочник</target>
        </trans-unit>
        <trans-unit id="1741ea24040d407102645a5261e3be49a42c9d36" translate="yes" xml:space="preserve">
          <source>RFC 7231, section 5.5.3: User-Agent</source>
          <target state="translated">RFC 7231,раздел 5.5.3:Пользователь-агент</target>
        </trans-unit>
        <trans-unit id="12fc41e4605afa8a835cf818819d37d8835a9501" translate="yes" xml:space="preserve">
          <source>RFC 7231, section 6.2.1: 100 Continue</source>
          <target state="translated">RFC 7231,раздел 6.2.1:100 Продолжить</target>
        </trans-unit>
        <trans-unit id="6153c15954bc862a70895fbc431bad2da954c971" translate="yes" xml:space="preserve">
          <source>RFC 7231, section 6.2.2: 101 Switching Protocol</source>
          <target state="translated">RFC 7231,раздел 6.2.2:101 Протокол коммутации</target>
        </trans-unit>
        <trans-unit id="bbfde0e52731d4e9dc93932249da61bebf73a1a8" translate="yes" xml:space="preserve">
          <source>RFC 7231, section 6.3.1: 200 OK</source>
          <target state="translated">RFC 7231,раздел 6.3.1:200 ОК</target>
        </trans-unit>
        <trans-unit id="1fc7e03406eaa40d727064f1b1bc3e08b2b14fd4" translate="yes" xml:space="preserve">
          <source>RFC 7231, section 6.3.2: 201 Created</source>
          <target state="translated">RFC 7231,раздел 6.3.2:201 Создан</target>
        </trans-unit>
        <trans-unit id="c97971bcf5eac84ad103104d1e5f58bc875207a1" translate="yes" xml:space="preserve">
          <source>RFC 7231, section 6.3.3: 202 Accepted</source>
          <target state="translated">RFC 7231,раздел 6.3.3:202 Принимается</target>
        </trans-unit>
        <trans-unit id="5429f5aaa896873c3bed767ca81e26df2c7d4715" translate="yes" xml:space="preserve">
          <source>RFC 7231, section 6.3.4: 203 Non-Authoritative Information</source>
          <target state="translated">RFC 7231,раздел 6.3.4:203 Неподтвержденная информация</target>
        </trans-unit>
        <trans-unit id="c87d7f32f1d541fc3b4a3f52e5b74b91132ee59a" translate="yes" xml:space="preserve">
          <source>RFC 7231, section 6.3.5: 204 No Content</source>
          <target state="translated">RFC 7231,раздел 6.3.5:204 Отсутствует Содержание</target>
        </trans-unit>
        <trans-unit id="88a53ddfea1c8ca509da6b5a44b1c7abe59a44fd" translate="yes" xml:space="preserve">
          <source>RFC 7231, section 6.3.6: 205 Reset Content</source>
          <target state="translated">RFC 7231,раздел 6.3.6:205 Сброс содержания</target>
        </trans-unit>
        <trans-unit id="4ccda537000db21782a1059815056fc5839e13c3" translate="yes" xml:space="preserve">
          <source>RFC 7231, section 6.4.1: 300 Multiple Choices</source>
          <target state="translated">RFC 7231,раздел 6.4.1:300 Несколько вариантов</target>
        </trans-unit>
        <trans-unit id="dceac5b474240f3b0b90d94b9503bf6ba6db86b0" translate="yes" xml:space="preserve">
          <source>RFC 7231, section 6.4.2: 301 Moved Permanently</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d103f2e9ff04ca2a770ac0401e07c62e79f89aa" translate="yes" xml:space="preserve">
          <source>RFC 7231, section 6.4.2: 301 Redirect Permanently</source>
          <target state="translated">RFC 7231,раздел 6.4.2:301 Перенаправление Постоянно</target>
        </trans-unit>
        <trans-unit id="80c5d21b755a5e2b263018667896cddc904c5323" translate="yes" xml:space="preserve">
          <source>RFC 7231, section 6.4.3: 302 Found</source>
          <target state="translated">RFC 7231,раздел 6.4.3:302 Найдено</target>
        </trans-unit>
        <trans-unit id="23d636dfadbfc167109f5734f6597b0cef5487e5" translate="yes" xml:space="preserve">
          <source>RFC 7231, section 6.4.4: 303 See Other</source>
          <target state="translated">RFC 7231,раздел 6.4.4:303 См.прочее</target>
        </trans-unit>
        <trans-unit id="e5ee708c3ca4bdea3c8e87cba0d3aeae2df304a8" translate="yes" xml:space="preserve">
          <source>RFC 7231, section 6.4.7: 307 Temporary Redirect</source>
          <target state="translated">RFC 7231,раздел 6.4.7:307 Временная переориентация</target>
        </trans-unit>
        <trans-unit id="dee8c16141db46bb418511c175d2eec007fefeed" translate="yes" xml:space="preserve">
          <source>RFC 7231, section 6.5.10: 411 Length Required</source>
          <target state="translated">RFC 7231,раздел 6.5.10:411 Требуемая длина</target>
        </trans-unit>
        <trans-unit id="26171f5c8cb59ffc020457ea938b7ec236d9ea28" translate="yes" xml:space="preserve">
          <source>RFC 7231, section 6.5.11: 413 Payload Too Large</source>
          <target state="translated">RFC 7231,раздел 6.5.11:413 Слишком большая грузоподъемность</target>
        </trans-unit>
        <trans-unit id="cee9c7a8574968783fae740117c4c07af062c5f8" translate="yes" xml:space="preserve">
          <source>RFC 7231, section 6.5.12: 414 URI Too Long</source>
          <target state="translated">RFC 7231,раздел 6.5.12:414 URI слишком длинный</target>
        </trans-unit>
        <trans-unit id="58c6fc79debfdeea6e272e99df4c1743e620d756" translate="yes" xml:space="preserve">
          <source>RFC 7231, section 6.5.13: 415 Unsupported Media Type</source>
          <target state="translated">RFC 7231,раздел 6.5.13:415 Неподдерживаемый тип носителя информации</target>
        </trans-unit>
        <trans-unit id="0392d0e21a03c252a2bf41dd4d443c3d6b9104c7" translate="yes" xml:space="preserve">
          <source>RFC 7231, section 6.5.14: 417 Expectation Failed</source>
          <target state="translated">RFC 7231,раздел 6.5.14:417 Ожидание не оправдалось</target>
        </trans-unit>
        <trans-unit id="57441c8550e44a304af1a569e4e597ea1887e91a" translate="yes" xml:space="preserve">
          <source>RFC 7231, section 6.5.15: 426 Upgrade Required</source>
          <target state="translated">RFC 7231,раздел 6.5.15:426 Требуется обновление.</target>
        </trans-unit>
        <trans-unit id="6dd8faeaf11eb0bd52552958e7ae54b11b10b57f" translate="yes" xml:space="preserve">
          <source>RFC 7231, section 6.5.1: 400 Bad Request</source>
          <target state="translated">RFC 7231,раздел 6.5.1:400 Плохой запрос</target>
        </trans-unit>
        <trans-unit id="e163a78f9330d6741a5bd6e7cdbb8e3fec5ffe5f" translate="yes" xml:space="preserve">
          <source>RFC 7231, section 6.5.3: 403 Forbidden</source>
          <target state="translated">RFC 7231,раздел 6.5.3:403 Запрещено</target>
        </trans-unit>
        <trans-unit id="b6bc1661f3cf5de1c14ac6be35b1910851cacaaf" translate="yes" xml:space="preserve">
          <source>RFC 7231, section 6.5.4: 404 Not Found</source>
          <target state="translated">RFC 7231,раздел 6.5.4:404 Не найдено</target>
        </trans-unit>
        <trans-unit id="a9844f8c14db25ad38c4cfe8d0f0b736510c9fb5" translate="yes" xml:space="preserve">
          <source>RFC 7231, section 6.5.5: 405 Method Not Allowed</source>
          <target state="translated">RFC 7231,раздел 6.5.5:405 Метод не разрешен</target>
        </trans-unit>
        <trans-unit id="fc4efdb5f2dc5dc6d424604880e980cb82e94103" translate="yes" xml:space="preserve">
          <source>RFC 7231, section 6.5.6: 406 Not Acceptable</source>
          <target state="translated">RFC 7231,раздел 6.5.6:406 Неприемлемо</target>
        </trans-unit>
        <trans-unit id="43b35d1f584a1c0099592c15ae91827db7dc94b7" translate="yes" xml:space="preserve">
          <source>RFC 7231, section 6.5.7: 408 Request Timeout</source>
          <target state="translated">RFC 7231,раздел 6.5.7:408 Тайм-аут запроса</target>
        </trans-unit>
        <trans-unit id="1b0d3945f363c33827abe747256729c99c9037c6" translate="yes" xml:space="preserve">
          <source>RFC 7231, section 6.5.8: 409 Conflict</source>
          <target state="translated">RFC 7231,раздел 6.5.8:409 Противоречие</target>
        </trans-unit>
        <trans-unit id="fd998823588377f38984c686c556f3bcfc09dc66" translate="yes" xml:space="preserve">
          <source>RFC 7231, section 6.5.9: 410 Gone</source>
          <target state="translated">RFC 7231,раздел 6.5.9:410 Ушел</target>
        </trans-unit>
        <trans-unit id="e020731d0df0b23d948c30ebaf118d17f15bafb5" translate="yes" xml:space="preserve">
          <source>RFC 7231, section 6.6.1: 500 Internal Server Error</source>
          <target state="translated">RFC 7231,раздел 6.6.1:500 Ошибка внутреннего сервера</target>
        </trans-unit>
        <trans-unit id="0123b7de98a247141787a487b5e238ce6e98a7c2" translate="yes" xml:space="preserve">
          <source>RFC 7231, section 6.6.2: 501 Not Implemented</source>
          <target state="translated">RFC 7231,раздел 6.6.2:501 Не выполнено</target>
        </trans-unit>
        <trans-unit id="d8ade00b1145627ea23139c44dc6c9c4c9e6e5b1" translate="yes" xml:space="preserve">
          <source>RFC 7231, section 6.6.3: 502 Bad Gateway</source>
          <target state="translated">RFC 7231,раздел 6.6.3:502 Плохой шлюз</target>
        </trans-unit>
        <trans-unit id="beb22556b06eef638a44ed63d5c6ad4adb9b6b33" translate="yes" xml:space="preserve">
          <source>RFC 7231, section 6.6.4: 503 Service Unavailable</source>
          <target state="translated">RFC 7231,раздел 6.6.4:503 Недоступное обслуживание</target>
        </trans-unit>
        <trans-unit id="f08bdf6a75d66bf8a9bbf1045e44b8379123db51" translate="yes" xml:space="preserve">
          <source>RFC 7231, section 6.6.4: 504 Gateway Timeout</source>
          <target state="translated">RFC 7231,раздел 6.6.4:504 Тайм-аут шлюза</target>
        </trans-unit>
        <trans-unit id="4cbd04babc221aadbb70a08f8f6b0cb23a89f952" translate="yes" xml:space="preserve">
          <source>RFC 7231, section 6.6.5: 504 Gateway Timeout</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e6e09aea7bfdaaf0dd1e985137eee45520431d3" translate="yes" xml:space="preserve">
          <source>RFC 7231, section 6.6.6: 505 HTTP Version Not Supported</source>
          <target state="translated">RFC 7231,раздел 6.6.6:505 Версия HTTP не поддерживается</target>
        </trans-unit>
        <trans-unit id="b3ba7c2a99f80e2130967ae0193aa90dfc01cbe3" translate="yes" xml:space="preserve">
          <source>RFC 7231, section 7.1.1.2: Date</source>
          <target state="translated">RFC 7231,раздел 7.1.1.2:Дата</target>
        </trans-unit>
        <trans-unit id="4cd70f93c86793f098a850ee9a15dfed514d641f" translate="yes" xml:space="preserve">
          <source>RFC 7231, section 7.1.2: Location</source>
          <target state="translated">RFC 7231,раздел 7.1.2:Аренда</target>
        </trans-unit>
        <trans-unit id="b605ee3c8c03aa07e4aba2513a66cca3bddaa02a" translate="yes" xml:space="preserve">
          <source>RFC 7231, section 7.1.3: Retry-After</source>
          <target state="translated">RFC 7231,раздел 7.1.3:Повторение после</target>
        </trans-unit>
        <trans-unit id="453d48122df892243f46b4738824f126f915dd76" translate="yes" xml:space="preserve">
          <source>RFC 7231, section 7.1.4: Vary</source>
          <target state="translated">RFC 7231,раздел 7.1.4:Вары</target>
        </trans-unit>
        <trans-unit id="7db55929216f08581bb0f9a961b79184aed41a16" translate="yes" xml:space="preserve">
          <source>RFC 7231, section 7.4.1: Allow</source>
          <target state="translated">RFC 7231,раздел 7.4.1:Разрешить</target>
        </trans-unit>
        <trans-unit id="9acad768df0dbe6c37cba16cbfd5595d6bc92ab0" translate="yes" xml:space="preserve">
          <source>RFC 7231, section 7.4.2: Server</source>
          <target state="translated">RFC 7231,раздел 7.4.2:Сервер</target>
        </trans-unit>
        <trans-unit id="c13136120d6f8f6ddbce80914e170e5f5ba98e4e" translate="yes" xml:space="preserve">
          <source>RFC 7231: Semantics and Content</source>
          <target state="translated">RFC 7231:Семантика и содержание</target>
        </trans-unit>
        <trans-unit id="a63def99ce2877d2732ea2cc7396d5f537db97a4" translate="yes" xml:space="preserve">
          <source>RFC 7232</source>
          <target state="translated">RFC 7232</target>
        </trans-unit>
        <trans-unit id="295d565b0fec0216825a3e8cb65a1446aa3ed8b2" translate="yes" xml:space="preserve">
          <source>RFC 7232, section 2.2: Last-Modified</source>
          <target state="translated">RFC 7232,раздел 2.2:Последние модификации</target>
        </trans-unit>
        <trans-unit id="e2e4bc35caa4058f5fac16569cf63c21cb420386" translate="yes" xml:space="preserve">
          <source>RFC 7232, section 2.3: ETag</source>
          <target state="translated">RFC 7232,раздел 2.3:метка ETag</target>
        </trans-unit>
        <trans-unit id="9bcc0918bdc69773f66aa681a671407cbdd4b5bb" translate="yes" xml:space="preserve">
          <source>RFC 7232, section 3.1: If-Match</source>
          <target state="translated">RFC 7232,раздел 3.1:If-Match</target>
        </trans-unit>
        <trans-unit id="73bd2578dcbed6d7d7505e11efb11c61cda96b36" translate="yes" xml:space="preserve">
          <source>RFC 7232, section 3.2: If-None-Match</source>
          <target state="translated">RFC 7232,раздел 3.2:If-None-Match</target>
        </trans-unit>
        <trans-unit id="d0cfec8ff7070bfbde6decdb05c41ab3d5b5e60d" translate="yes" xml:space="preserve">
          <source>RFC 7232, section 3.3: If-Modified-Since</source>
          <target state="translated">RFC 7232,раздел 3.3:If-Modified-Since</target>
        </trans-unit>
        <trans-unit id="83ababad8d137088ebfa02c4cfad17ffdbaa6cb9" translate="yes" xml:space="preserve">
          <source>RFC 7232, section 3.4: If-Unmodified-Since</source>
          <target state="translated">RFC 7232,раздел 3.4:If-Unmodified-Since .</target>
        </trans-unit>
        <trans-unit id="8c6b803aef1ae0cbc7963494f52a6e2d1221aa72" translate="yes" xml:space="preserve">
          <source>RFC 7232, section 4.1: 304 Not Modified</source>
          <target state="translated">RFC 7232,раздел 4.1:304 Без изменений</target>
        </trans-unit>
        <trans-unit id="c6371edfa3fd6545f1ed9b50760abaa5432d23c6" translate="yes" xml:space="preserve">
          <source>RFC 7232, section 4.2: 412 Precondition Failed</source>
          <target state="translated">RFC 7232,раздел 4.2:412 Предупреждение Неисправность</target>
        </trans-unit>
        <trans-unit id="85fcffc8931e515561355807b30267e41fd6036c" translate="yes" xml:space="preserve">
          <source>RFC 7232: Conditional Requests</source>
          <target state="translated">RFC 7232:Условные запросы</target>
        </trans-unit>
        <trans-unit id="0220cee7fbe573d22b712a263403a869c71ee9dd" translate="yes" xml:space="preserve">
          <source>RFC 7233</source>
          <target state="translated">RFC 7233</target>
        </trans-unit>
        <trans-unit id="24b52ae865d6573f42daca9e9ba3d5d371687dd9" translate="yes" xml:space="preserve">
          <source>RFC 7233, section 2.3: Accept-Ranges</source>
          <target state="translated">RFC 7233,раздел 2.3:Приемка диапазонов</target>
        </trans-unit>
        <trans-unit id="217e0bf69b2117ab58b4e0362c97f19fa1befd75" translate="yes" xml:space="preserve">
          <source>RFC 7233, section 3.1: Range</source>
          <target state="translated">RFC 7233,раздел 3.1:Дальность действия</target>
        </trans-unit>
        <trans-unit id="60ffdc5927f45232551eeaf6f5b683a4c7108395" translate="yes" xml:space="preserve">
          <source>RFC 7233, section 3.2: If-Range</source>
          <target state="translated">RFC 7233,раздел 3.2:If-диапазон</target>
        </trans-unit>
        <trans-unit id="60f87acc5e83708a238fe44d6d995662a04d25cb" translate="yes" xml:space="preserve">
          <source>RFC 7233, section 4.1: 206 Partial Content</source>
          <target state="translated">RFC 7233,раздел 4.1:206 Частичное содержание</target>
        </trans-unit>
        <trans-unit id="c97dc325c5a2c56a80141bafdec4776ec6494289" translate="yes" xml:space="preserve">
          <source>RFC 7233, section 4.1: Content-Type in multipart</source>
          <target state="translated">RFC 7233,раздел 4.1:Контент-тип в мультичасти</target>
        </trans-unit>
        <trans-unit id="b2f0b42f9b254f4e75cc959dec9a41424191299d" translate="yes" xml:space="preserve">
          <source>RFC 7233, section 4.2: Content-Range</source>
          <target state="translated">RFC 7233,раздел 4.2:Дальность действия</target>
        </trans-unit>
        <trans-unit id="17ab846647e11ad24dd7cae43b5b7ba50f8d5783" translate="yes" xml:space="preserve">
          <source>RFC 7233, section 4.4: 416 Request Not Satisfiable</source>
          <target state="translated">RFC 7233,раздел 4.4:416 Запрос неудовлетворительный</target>
        </trans-unit>
        <trans-unit id="39280b50b8604fb2c52645b83bb68d63d5aea084" translate="yes" xml:space="preserve">
          <source>RFC 7233: Range Requests</source>
          <target state="translated">RFC 7233:Запросы на диапазон</target>
        </trans-unit>
        <trans-unit id="d73ca14480035f6afc269fff0b2cbd5e7a9d5226" translate="yes" xml:space="preserve">
          <source>RFC 7234</source>
          <target state="translated">RFC 7234</target>
        </trans-unit>
        <trans-unit id="b7b8fb4415d92cc12caa06d3116834044fd58735" translate="yes" xml:space="preserve">
          <source>RFC 7234, section 5.1: Age</source>
          <target state="translated">RFC 7234,раздел 5.1:Возраст</target>
        </trans-unit>
        <trans-unit id="8f0ec2babea29f2d75d8b6c1eeefe35f6783a262" translate="yes" xml:space="preserve">
          <source>RFC 7234, section 5.3: Expires</source>
          <target state="translated">RFC 7234,раздел 5.3:Эксперименты</target>
        </trans-unit>
        <trans-unit id="b61069d359f94e29544f46f37732668c2e0dc488" translate="yes" xml:space="preserve">
          <source>RFC 7234, section 5.4: Pragma</source>
          <target state="translated">RFC 7234,раздел 5.4:Прагма</target>
        </trans-unit>
        <trans-unit id="e5b281777a588dfebb9e4f33147f9393c44ff9d5" translate="yes" xml:space="preserve">
          <source>RFC 7234, section 5.5: Warning</source>
          <target state="translated">RFC 7234,раздел 5.5:Предупреждение</target>
        </trans-unit>
        <trans-unit id="15c277735dd7ab9d554b55649227872a7a319b2e" translate="yes" xml:space="preserve">
          <source>RFC 7234: Caching</source>
          <target state="translated">RFC 7234:Кэширование</target>
        </trans-unit>
        <trans-unit id="95e2fdb4338d98c3460a6ba511c8317ede846646" translate="yes" xml:space="preserve">
          <source>RFC 7234: Hypertext Transfer Protocol (HTTP/1.1): Caching</source>
          <target state="translated">RFC 7234:Протокол передачи гипертекста (HTTP/1.1):кэширование</target>
        </trans-unit>
        <trans-unit id="7f05efb06e3e1509abf29d93ad4e47416b9ccc82" translate="yes" xml:space="preserve">
          <source>RFC 7235</source>
          <target state="translated">RFC 7235</target>
        </trans-unit>
        <trans-unit id="11160b7b94c66c72e517d2361647cbfe55fa56cb" translate="yes" xml:space="preserve">
          <source>RFC 7235, section 3.1: 401 Unauthorized</source>
          <target state="translated">RFC 7235,раздел 3.1:401 Несанкционированный</target>
        </trans-unit>
        <trans-unit id="8d8532df2f09e49337c4c44dc682d4d79601e9b4" translate="yes" xml:space="preserve">
          <source>RFC 7235, section 3.2: 407 Proxy Authentication Required</source>
          <target state="translated">RFC 7235,раздел 3.2:407 Требуется проверка подлинности прокси-сервера</target>
        </trans-unit>
        <trans-unit id="614dc9841e719e4ac1a80ff45d19cd0f0c9471e6" translate="yes" xml:space="preserve">
          <source>RFC 7235, section 4.1: WWW-Authenticate</source>
          <target state="translated">RFC 7235,раздел 4.1:WWW-Аутентификация</target>
        </trans-unit>
        <trans-unit id="a2b8a63336dfcfbb148fd489dd97af9d7523c4c5" translate="yes" xml:space="preserve">
          <source>RFC 7235, section 4.2: Authorization</source>
          <target state="translated">RFC 7235,раздел 4.2:Полномочия</target>
        </trans-unit>
        <trans-unit id="ad222d9356ff1738b54e88377024fa368f6aa997" translate="yes" xml:space="preserve">
          <source>RFC 7235, section 4.3: Proxy-Authenticate</source>
          <target state="translated">RFC 7235,раздел 4.3:Доверенность-аутентификация</target>
        </trans-unit>
        <trans-unit id="ce095e11e9ac5123f50e10205d7a968f6a419fbd" translate="yes" xml:space="preserve">
          <source>RFC 7235, section 4.4: Proxy-Authorization</source>
          <target state="translated">RFC 7235,раздел 4.4:Доверенность</target>
        </trans-unit>
        <trans-unit id="92acef83d821fd2467bc28bd2fd60d10ec1c7cc9" translate="yes" xml:space="preserve">
          <source>RFC 7235: Authentication</source>
          <target state="translated">RFC 7235:Аутентификация</target>
        </trans-unit>
        <trans-unit id="39253ac4ebddd236a15a85088849c6a80583c2fe" translate="yes" xml:space="preserve">
          <source>RFC 7239</source>
          <target state="translated">RFC 7239</target>
        </trans-unit>
        <trans-unit id="6123756e88cf4a45823e0759687abb9c00f566cc" translate="yes" xml:space="preserve">
          <source>RFC 7239, section 4: Forwarded</source>
          <target state="translated">RFC 7239,раздел 4:Переслано</target>
        </trans-unit>
        <trans-unit id="2513b2cc7a8731819cb7304e73f8bd0c92970573" translate="yes" xml:space="preserve">
          <source>RFC 7301</source>
          <target state="translated">RFC 7301</target>
        </trans-unit>
        <trans-unit id="e53ba536932ce8bea18cc606f0e1b867a58004cf" translate="yes" xml:space="preserve">
          <source>RFC 7469, section 2.1: Public-Key-Pins</source>
          <target state="translated">RFC 7469,раздел 2.1:Общедоступные штыри</target>
        </trans-unit>
        <trans-unit id="f73866d0b27647fd51170d239bc52eb95cc3fa80" translate="yes" xml:space="preserve">
          <source>RFC 7469, section 2.1: Public-Key-Pins-Report-Only</source>
          <target state="translated">RFC 7469,раздел 2.1:Публичный отчет-только для общественности.</target>
        </trans-unit>
        <trans-unit id="7d33083b52d3c2f5c0c6e4555c83f4c7a93666d3" translate="yes" xml:space="preserve">
          <source>RFC 7538</source>
          <target state="translated">RFC 7538</target>
        </trans-unit>
        <trans-unit id="c18f1a9e84a66e50185533b4e1d6c5b801e53f75" translate="yes" xml:space="preserve">
          <source>RFC 7538, section 3: 308 Permanent Redirect</source>
          <target state="translated">RFC 7538,раздел 3:308 Постоянная переориентация</target>
        </trans-unit>
        <trans-unit id="381a51e0e8724bb0e7528dce36a046520ef83310" translate="yes" xml:space="preserve">
          <source>RFC 7540</source>
          <target state="translated">RFC 7540</target>
        </trans-unit>
        <trans-unit id="52f90fdebc595d706e0153547db03d37bcb956f4" translate="yes" xml:space="preserve">
          <source>RFC 7541</source>
          <target state="translated">RFC 7541</target>
        </trans-unit>
        <trans-unit id="16fe2f0e9c1d829ee3481e9a51d563391aac14b0" translate="yes" xml:space="preserve">
          <source>RFC 7578</source>
          <target state="translated">RFC 7578</target>
        </trans-unit>
        <trans-unit id="60d6f8ab48b07523a864373ca4d1105c601e0a56" translate="yes" xml:space="preserve">
          <source>RFC 7617</source>
          <target state="translated">RFC 7617</target>
        </trans-unit>
        <trans-unit id="16bb582fedfa8c1bed21cfd9a33eb35b67ce48ef" translate="yes" xml:space="preserve">
          <source>RFC 7725</source>
          <target state="translated">RFC 7725</target>
        </trans-unit>
        <trans-unit id="b3c12a54619425f8c7eeee0564e7f9c3445ee5e2" translate="yes" xml:space="preserve">
          <source>RFC 7725: 451 Unavailable For Legal Reasons</source>
          <target state="translated">RFC 7725:451 недоступен по юридическим причинам</target>
        </trans-unit>
        <trans-unit id="4c3ce0e7d6d5e6d33d64ba958f7a104cfc60ffd0" translate="yes" xml:space="preserve">
          <source>RFC 7838</source>
          <target state="translated">RFC 7838</target>
        </trans-unit>
        <trans-unit id="98a96516560a300a5745bcfe44d56d86a7703616" translate="yes" xml:space="preserve">
          <source>RFC 7932: Brotli Compressed Data Format</source>
          <target state="translated">RFC 7932:Формат сжатых данных Brotli</target>
        </trans-unit>
        <trans-unit id="72d8ba28c60c4ceca4316e723297a3f77d3efdaa" translate="yes" xml:space="preserve">
          <source>RFC 8246</source>
          <target state="translated">RFC 8246</target>
        </trans-unit>
        <trans-unit id="a45497157d8a3432246f536cdef9b1f416a32287" translate="yes" xml:space="preserve">
          <source>RFC 8246: HTTP Immutable Responses</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c259030985e8f0cd03404af04d74d18e09f0c5c5" translate="yes" xml:space="preserve">
          <source>RFC 8446</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f103f5fd279c09f20f0c5ca89184d4caecaccd28" translate="yes" xml:space="preserve">
          <source>RFC 8470, section 5.1: The Early-Data Header Field</source>
          <target state="translated">RFC 8470,раздел 5.1:Поле заголовка ранних данных</target>
        </trans-unit>
        <trans-unit id="a0eebba627153a93ef3a322033c309ca579202f0" translate="yes" xml:space="preserve">
          <source>RFC 8470, section 5.2: 425: Early Data</source>
          <target state="translated">RFC 8470,раздел 5.2:425:Ранние данные</target>
        </trans-unit>
        <trans-unit id="a16c5bbe4bf996740f257aa1e81bd57e4c52c8dd" translate="yes" xml:space="preserve">
          <source>Range</source>
          <target state="translated">Range</target>
        </trans-unit>
        <trans-unit id="9b88ba0fe4aa1b0d39f03df49c05115f581fef09" translate="yes" xml:space="preserve">
          <source>Range (RFC 2616)</source>
          <target state="translated">Диапазон (RFC 2616)</target>
        </trans-unit>
        <trans-unit id="5039997fc0613071590aceb1ddcbf09f19902112" translate="yes" xml:space="preserve">
          <source>Range (RFC 7233)</source>
          <target state="translated">Диапазон (RFC 7233)</target>
        </trans-unit>
        <trans-unit id="75e5476d2fa33e515b99ac682187fa29b2de5aea" translate="yes" xml:space="preserve">
          <source>Range requests</source>
          <target state="translated">Запросы на диапазон</target>
        </trans-unit>
        <trans-unit id="cbd19be28e80eee61c6befb6a6a0e0189a81e54b" translate="yes" xml:space="preserve">
          <source>Range units are intended to be extensible.  New range units ought to
   be registered with IANA, as defined in &lt;a href=&quot;#section-5.1&quot;&gt;Section 5.1&lt;/a&gt;.

     other-range-unit = token</source>
          <target state="translated">Единицы диапазона предназначены для расширения. Новые единицы диапазона должны быть зарегистрированы в IANA, как определено в &lt;a href=&quot;#section-5.1&quot;&gt;разделе 5.1&lt;/a&gt; . other-range-unit = токен</target>
        </trans-unit>
        <trans-unit id="10022056ab083091adb5d812601237d60a879215" translate="yes" xml:space="preserve">
          <source>Read the response sent by the server, such as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed40b9d6cc0d0cb3ce7a7ad02dba7338812a8080" translate="yes" xml:space="preserve">
          <source>Read the response sent by the server:</source>
          <target state="translated">Прочитайте ответ,отправленный сервером:</target>
        </trans-unit>
        <trans-unit id="7877f60e00a2d773f57c4014d0a738ad9861667e" translate="yes" xml:space="preserve">
          <source>Reading Do Not Track status from JavaScript</source>
          <target state="translated">Чтение Не отслеживать статус из JavaScript</target>
        </trans-unit>
        <trans-unit id="f219cc0614ae6860f43a3cd84b5cf31fc312cd9d" translate="yes" xml:space="preserve">
          <source>Reason</source>
          <target state="translated">Reason</target>
        </trans-unit>
        <trans-unit id="ed3274e667a68705864a7876442c08c9a0c89279" translate="yes" xml:space="preserve">
          <source>Reason: CORS disabled</source>
          <target state="translated">Причина:CORS отключен</target>
        </trans-unit>
        <trans-unit id="f5163ddcca584feb16b95fbbfa91c4d7d0260331" translate="yes" xml:space="preserve">
          <source>Reason: CORS header &amp;lsquo;Access-Control-Allow-Origin&amp;rsquo; does not match &amp;lsquo;xyz&amp;rsquo;</source>
          <target state="translated">Причина: заголовок CORS 'Access-Control-Allow-Origin' не соответствует 'xyz'</target>
        </trans-unit>
        <trans-unit id="5bdd6c0c5118a6b13076b0be624dd329902e18ef" translate="yes" xml:space="preserve">
          <source>Reason: CORS header &amp;lsquo;Access-Control-Allow-Origin&amp;rsquo; missing</source>
          <target state="translated">Причина: отсутствует заголовок CORS &quot;Access-Control-Allow-Origin&quot;</target>
        </trans-unit>
        <trans-unit id="1658865d36eb134fe7d46709a144c1d565865930" translate="yes" xml:space="preserve">
          <source>Reason: CORS header &amp;lsquo;Origin&amp;rsquo; cannot be added</source>
          <target state="translated">Причина: нельзя добавить заголовок CORS &quot;Origin&quot;</target>
        </trans-unit>
        <trans-unit id="aef82a650f94d9766311469581926f1ed57a82f8" translate="yes" xml:space="preserve">
          <source>Reason: CORS preflight channel did not succeed</source>
          <target state="translated">Причина:Предполетный канал CORS не преуспел.</target>
        </trans-unit>
        <trans-unit id="07e1781531cc98f0e96de22d1192b8d4d3333825" translate="yes" xml:space="preserve">
          <source>Reason: CORS request did not succeed</source>
          <target state="translated">Причина:Запрос CORS не увенчался успехом</target>
        </trans-unit>
        <trans-unit id="09c9cb183a85be0b3b6cde7b88314ddcd37427b3" translate="yes" xml:space="preserve">
          <source>Reason: CORS request external redirect not allowed</source>
          <target state="translated">Причина:CORS запрос внешнего перенаправления не разрешен</target>
        </trans-unit>
        <trans-unit id="868608d4173aba486e510c1993aebd1346b28581" translate="yes" xml:space="preserve">
          <source>Reason: CORS request not http</source>
          <target state="translated">Причина:CORS запрос не http</target>
        </trans-unit>
        <trans-unit id="756ce5c83972090dfd18afc09136a9721594344b" translate="yes" xml:space="preserve">
          <source>Reason: Credential is not supported if the CORS header &amp;lsquo;Access-Control-Allow-Origin&amp;rsquo; is &amp;lsquo;*&amp;rsquo;</source>
          <target state="translated">Причина: учетные данные не поддерживаются, если заголовок CORS 'Access-Control-Allow-Origin' равен '*'</target>
        </trans-unit>
        <trans-unit id="61897273348d9502ac4a9cbfc6912d021a1fdadc" translate="yes" xml:space="preserve">
          <source>Reason: Did not find method in CORS header &amp;lsquo;Access-Control-Allow-Methods&amp;rsquo;</source>
          <target state="translated">Причина: не удалось найти метод в заголовке CORS &amp;laquo;Access-Control-Allow-Methods&amp;raquo;</target>
        </trans-unit>
        <trans-unit id="cde3fd2f65e458b45dfb439c839198bdc521c6f3" translate="yes" xml:space="preserve">
          <source>Reason: Multiple CORS header &amp;lsquo;Access-Control-Allow-Origin&amp;rsquo; not allowed</source>
          <target state="translated">Причина: несколько заголовков CORS &quot;Access-Control-Allow-Origin&quot; не разрешены</target>
        </trans-unit>
        <trans-unit id="2e8f5f20e78993baa10a1b749e10443f8fcd3944" translate="yes" xml:space="preserve">
          <source>Reason: expected &amp;lsquo;true&amp;rsquo; in CORS header &amp;lsquo;Access-Control-Allow-Credentials&amp;rsquo;</source>
          <target state="translated">Причина: ожидалось &quot;истина&quot; в заголовке CORS &quot;Access-Control-Allow-Credentials&quot;</target>
        </trans-unit>
        <trans-unit id="50a43b6e0fb5601d24499970d71432793694c9ad" translate="yes" xml:space="preserve">
          <source>Reason: invalid token &amp;lsquo;xyz&amp;rsquo; in CORS header &amp;lsquo;Access-Control-Allow-Headers&amp;rsquo;</source>
          <target state="translated">Причина: недопустимый токен 'xyz' в заголовке CORS 'Access-Control-Allow-Headers'</target>
        </trans-unit>
        <trans-unit id="b8cfc9f82a605294184410b4a2e649b6e93163c6" translate="yes" xml:space="preserve">
          <source>Reason: invalid token &amp;lsquo;xyz&amp;rsquo; in CORS header &amp;lsquo;Access-Control-Allow-Methods&amp;rsquo;</source>
          <target state="translated">Причина: недопустимый токен 'xyz' в заголовке CORS 'Access-Control-Allow-Methods'</target>
        </trans-unit>
        <trans-unit id="ceb18ef27a39563d15f30fc87ea5ec94ceb819ce" translate="yes" xml:space="preserve">
          <source>Reason: missing token &amp;lsquo;xyz&amp;rsquo; in CORS header &amp;lsquo;Access-Control-Allow-Headers&amp;rsquo; from CORS preflight channel</source>
          <target state="translated">Причина: отсутствует токен 'xyz' в заголовке CORS 'Access-Control-Allow-Headers' из канала предварительной проверки CORS</target>
        </trans-unit>
        <trans-unit id="ea166a8dce951acdcb755ee27ef556a370c2d19d" translate="yes" xml:space="preserve">
          <source>Recent versions of Firefox support as well:</source>
          <target state="translated">Последние версии поддержки Firefox:</target>
        </trans-unit>
        <trans-unit id="6422fcc967f452634a501ffeeec039bbb50d3cbc" translate="yes" xml:space="preserve">
          <source>Recommendation</source>
          <target state="translated">Recommendation</target>
        </trans-unit>
        <trans-unit id="bd1aceb143f071d874bbc123b72264a36a503ab4" translate="yes" xml:space="preserve">
          <source>Recommendations on &lt;a href=&quot;https://developer.mozilla.org/en/Browser_Detection_and_Cross_Browser_Support&quot;&gt;sniffing the UA string for cross-browser support&lt;/a&gt;</source>
          <target state="translated">Рекомендации по &lt;a href=&quot;https://developer.mozilla.org/en/Browser_Detection_and_Cross_Browser_Support&quot;&gt;прослушиванию строки UA для кроссбраузерной поддержки&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cfa5b8af1af0a8bb6eedbb724cbc97011a905b75" translate="yes" xml:space="preserve">
          <source>Recording and analyzing user behavior</source>
          <target state="translated">Запись и анализ поведения пользователей</target>
        </trans-unit>
        <trans-unit id="7c8d8fc9cfc5aced3cb8d64bdef12d562b42debf" translate="yes" xml:space="preserve">
          <source>RedBot</source>
          <target state="translated">RedBot</target>
        </trans-unit>
        <trans-unit id="637dfb39d3c34e08850ea6f3b5b6369d2f7469e2" translate="yes" xml:space="preserve">
          <source>Redirect responses (300-303, 305, and 307) defined in HTTP 1.1
   normally take a Location header to indicate the new URI for the
   single resource redirected from the Request-URI.  Multi-Status
   responses contain many resource addresses, but the original
   definition in [&lt;a href=&quot;https://tools.ietf.org/html/rfc2518&quot;&gt;RFC2518&lt;/a&gt;] did not have any place for the server to
   provide the new URI for redirected resources.  This specification
   does define a 'location' element for this information (see
   &lt;a href=&quot;#section-14.9&quot;&gt;Section 14.9&lt;/a&gt;).  Servers MUST use this new element with redirect
   responses in Multi-Status.

   Clients encountering redirected resources in Multi-Status MUST NOT
   rely on the 'location' element being present with a new URI.  If the
   element is not present, the client MAY reissue the request to the
   individual redirected resource, because the response to that request
   can be redirected with a Location header containing the new URI.</source>
          <target state="translated">Ответы перенаправления (300-303, 305 и 307), определенные в HTTP 1.1, обычно принимают заголовок Location, чтобы указать новый URI для единственного ресурса, перенаправленного из Request-URI. Ответы с несколькими состояниями содержат много адресов ресурсов, но в исходном определении в [ &lt;a href=&quot;https://tools.ietf.org/html/rfc2518&quot;&gt;RFC2518&lt;/a&gt; ] не было места для сервера, чтобы предоставить новый URI для перенаправленных ресурсов. Эта спецификация действительно определяет элемент 'location' для этой информации (см. &lt;a href=&quot;#section-14.9&quot;&gt;Раздел 14.9.&lt;/a&gt;). Серверы ДОЛЖНЫ использовать этот новый элемент с ответами перенаправления в мульти-статусе. Клиенты, сталкивающиеся с перенаправленными ресурсами в мульти-статусе, НЕ ДОЛЖНЫ полагаться на то, что элемент 'location' присутствует с новым URI. Если элемент отсутствует, клиент МОЖЕТ повторно отправить запрос отдельному перенаправленному ресурсу, потому что ответ на этот запрос может быть перенаправлен с помощью заголовка Location, содержащего новый URI.</target>
        </trans-unit>
        <trans-unit id="629ead9203c19213fba2446477411c8ec459423b" translate="yes" xml:space="preserve">
          <source>Redirection loops</source>
          <target state="translated">Петли перенаправления</target>
        </trans-unit>
        <trans-unit id="aa6efcbd2100faec701e1149fee688eee318d476" translate="yes" xml:space="preserve">
          <source>Redirection loops happen when additional redirections follow the one that has already been followed. In other words, there is a loop that will never be finished and no page will ever be found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fb2905c36033fc913fb566ea3c5bcb1318a9e57" translate="yes" xml:space="preserve">
          <source>Redirection loops happen when successive redirections follow the one that has already been followed. In other words, there is a loop that will never be finished and no page will be found ultimately.</source>
          <target state="translated">Петли перенаправления возникают,когда последовательные перенаправления следуют за уже выполненными.Другими словами,есть цикл,который никогда не будет завершен,и в конечном итоге страница не будет найдена.</target>
        </trans-unit>
        <trans-unit id="c7dd5917ae785b261fda27b44b5ec5a2d680b36d" translate="yes" xml:space="preserve">
          <source>Redirection messages</source>
          <target state="translated">Пересылка сообщений</target>
        </trans-unit>
        <trans-unit id="eeb9caefdf646c7a0ccceccdf48dd3a42d43224b" translate="yes" xml:space="preserve">
          <source>Redirections</source>
          <target state="translated">Redirections</target>
        </trans-unit>
        <trans-unit id="e3bba96caf77bd92cd7d8b0c96235d33da0b22c4" translate="yes" xml:space="preserve">
          <source>Redirections in JavaScript are created by setting a value to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/location&quot;&gt;&lt;code&gt;window.location&lt;/code&gt;&lt;/a&gt; property and the new page is loaded.</source>
          <target state="translated">Перенаправления в JavaScript создаются путем установки значения для свойства &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/location&quot;&gt; &lt;code&gt;window.location&lt;/code&gt; &lt;/a&gt; и загрузки новой страницы.</target>
        </trans-unit>
        <trans-unit id="a86ef1a1aac68fc429a9d0da40fb0b69de3f66e5" translate="yes" xml:space="preserve">
          <source>Redirections in JavaScript are performed by setting a URL string to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/location&quot;&gt;&lt;code&gt;window.location&lt;/code&gt;&lt;/a&gt; property, loading the new page:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcf937319f333e7df4ec12406025be63bde6549b" translate="yes" xml:space="preserve">
          <source>Redirects</source>
          <target state="translated">Redirects</target>
        </trans-unit>
        <trans-unit id="d7ea66c42cc0d823a76b460690e6ff6566141066" translate="yes" xml:space="preserve">
          <source>Redirects (&lt;code&gt;300&lt;/code&gt;&amp;ndash;&lt;code&gt;399&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a5a9e8fba61c9e52b17ff910bed1acecd687c48" translate="yes" xml:space="preserve">
          <source>Redirects accomplish numerous goals:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37dc3110ba191c2d77df0cde3470992c711d2947" translate="yes" xml:space="preserve">
          <source>Redirects can be set either in the server config file or in the &lt;code&gt;.htaccess&lt;/code&gt; of each directory.</source>
          <target state="translated">Перенаправления могут быть установлены либо в файле конфигурации сервера, либо в &lt;code&gt;.htaccess&lt;/code&gt; каждого каталога.</target>
        </trans-unit>
        <trans-unit id="db1c784524e1b54011a95823026161f7c8517fe0" translate="yes" xml:space="preserve">
          <source>Reference</source>
          <target state="translated">Reference</target>
        </trans-unit>
        <trans-unit id="5d20d0fee3b91643dd8d272ac33d01ca95179d82" translate="yes" xml:space="preserve">
          <source>References</source>
          <target state="translated">References</target>
        </trans-unit>
        <trans-unit id="699b2fb0910ccc7c0854d17a2041a907709ed3c1" translate="yes" xml:space="preserve">
          <source>Referer</source>
          <target state="translated">Referer</target>
        </trans-unit>
        <trans-unit id="7d600afde85bf128bed4081c176fe7edf403b856" translate="yes" xml:space="preserve">
          <source>Referer (RFC 2616)</source>
          <target state="translated">Рефрижератор (RFC 2616)</target>
        </trans-unit>
        <trans-unit id="b1bb97f5316cdb3a06386f7cb3cc6564f44f772d" translate="yes" xml:space="preserve">
          <source>Referer (RFC 7231)</source>
          <target state="translated">Рефрижератор (RFC 7231)</target>
        </trans-unit>
        <trans-unit id="548b0b909e2d1062b7de321059c220fba862be3b" translate="yes" xml:space="preserve">
          <source>Referrer</source>
          <target state="translated">Referrer</target>
        </trans-unit>
        <trans-unit id="e9085bde7a7780a48ca2a79ea2ef1b8e36c397ae" translate="yes" xml:space="preserve">
          <source>Referrer Policy</source>
          <target state="translated">Реферальная политика</target>
        </trans-unit>
        <trans-unit id="56d6a82203aab19c5732c260c1b17608ee8ddd53" translate="yes" xml:space="preserve">
          <source>Referrer-Policy</source>
          <target state="translated">Referrer-Policy</target>
        </trans-unit>
        <trans-unit id="81812b5ae7e147b994882094bc1bfac513c944bc" translate="yes" xml:space="preserve">
          <source>Refers to the empty set; that is, no URLs match. The single quotes are required.</source>
          <target state="translated">Относится к пустому набору,то есть не совпадают URL.Требуются одинарные кавычки.</target>
        </trans-unit>
        <trans-unit id="5c14c5b41372e5f4d7d2284be0cef39d021c62d6" translate="yes" xml:space="preserve">
          <source>Refers to the origin from which the protected document is being served, including the same URL scheme and port number. You must include the single quotes. Some browsers specifically exclude &lt;code&gt;blob&lt;/code&gt; and &lt;code&gt;filesystem&lt;/code&gt; from source directives. Sites needing to allow these content types can specify them using the Data attribute.</source>
          <target state="translated">Относится к источнику, из которого обслуживается защищенный документ, включая ту же схему URL-адреса и номер порта. Вы должны использовать одинарные кавычки. Некоторые браузеры специально исключают &lt;code&gt;blob&lt;/code&gt; -объекты и &lt;code&gt;filesystem&lt;/code&gt; из исходных директив. Сайты, которым необходимо разрешить эти типы контента, могут указывать их с помощью атрибута Data.</target>
        </trans-unit>
        <trans-unit id="666b2fc5e19b42683e17cd8e2c18048b27596c23" translate="yes" xml:space="preserve">
          <source>Registration of an HTTP Range Unit MUST include the following fields:

   o  Name

   o  Description

   o  Pointer to specification text

   Values to be added to this namespace require IETF Review (see
   &lt;a href=&quot;https://tools.ietf.org/html/rfc5226#section-4.1&quot;&gt;[RFC5226], Section&amp;nbsp;4.1&lt;/a&gt;).</source>
          <target state="translated">Регистрация единицы диапазона HTTP ДОЛЖНА включать следующие поля: o Имя o Описание o Указатель на текст спецификации. Значения, добавляемые в это пространство имен, требуют &lt;a href=&quot;https://tools.ietf.org/html/rfc5226#section-4.1&quot;&gt;проверки&lt;/a&gt; IETF (см. [RFC5226], раздел 4.1 ).</target>
        </trans-unit>
        <trans-unit id="072544a89921ea204166220b6ecbe57052aede21" translate="yes" xml:space="preserve">
          <source>Registrations MUST include the following fields:

   o  Authentication Scheme Name

   o  Pointer to specification text

   o  Notes (optional)

   Values to be added to this namespace require IETF Review (see
   &lt;a href=&quot;https://tools.ietf.org/html/rfc5226#section-4.1&quot;&gt;[RFC5226], Section&amp;nbsp;4.1&lt;/a&gt;).</source>
          <target state="translated">Регистрации ДОЛЖНЫ включать следующие поля: o Имя схемы аутентификации o Указатель на текст спецификации o Примечания (необязательно) Для добавления значений в это пространство имен требуется &lt;a href=&quot;https://tools.ietf.org/html/rfc5226#section-4.1&quot;&gt;проверка&lt;/a&gt; IETF (см. [RFC5226], раздел 4.1 ).</target>
        </trans-unit>
        <trans-unit id="3900f3dae5507cbea7f7a037aa9cc17206c5b409" translate="yes" xml:space="preserve">
          <source>Registrations MUST include the following fields:

   o  Name

   o  Description

   o  Pointer to specification text

   Names of transfer codings MUST NOT overlap with names of content
   codings (&lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-3.1.2.1&quot;&gt;Section&amp;nbsp;3.1.2.1 of [RFC7231]&lt;/a&gt;) unless the encoding
   transformation is identical, as is the case for the compression
   codings defined in &lt;a href=&quot;#section-4.2&quot;&gt;Section 4.2&lt;/a&gt;.

   Values to be added to this namespace require IETF Review (see &lt;a href=&quot;https://tools.ietf.org/html/rfc5226#section-4.1&quot;&gt;Section&lt;/a&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc5226#section-4.1&quot;&gt;4.1 of [RFC5226]&lt;/a&gt;), and MUST conform to the purpose of transfer coding
   defined in this specification.

   Use of program names for the identification of encoding formats is
   not desirable and is discouraged for future encodings.</source>
          <target state="translated">Регистрации ДОЛЖНЫ включать следующие поля: o Имя o Описание o Указатель на текст спецификации Имена кодировок передачи НЕ ДОЛЖНЫ перекрываться с именами кодировок контента ( &lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-3.1.2.1&quot;&gt;раздел 3.1.2.1 [RFC7231]&lt;/a&gt; ), если только преобразование кодирования не идентично, как в случае для кодировки сжатия, определенные в &lt;a href=&quot;#section-4.2&quot;&gt;разделе 4.2&lt;/a&gt; . Значения, добавляемые в это пространство имен, требуют &lt;a href=&quot;https://tools.ietf.org/html/rfc5226#section-4.1&quot;&gt;проверки&lt;/a&gt; IETF (см. &lt;a href=&quot;https://tools.ietf.org/html/rfc5226#section-4.1&quot;&gt;Раздел &lt;/a&gt;4.1 [RFC5226] ) и ДОЛЖНЫ соответствовать целям кодирования передачи, определенным в этой спецификации. Использование имен программ для идентификации форматов кодирования нежелательно и не рекомендуется для кодирования в будущем.</target>
        </trans-unit>
        <trans-unit id="d151bc7b242db455dafecdde98d424a7fbe5826b" translate="yes" xml:space="preserve">
          <source>Related headers: &lt;a href=&quot;headers/accept-ranges&quot;&gt;&lt;code&gt;Accept-Ranges&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;headers/range&quot;&gt;&lt;code&gt;Range&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;headers/content-range&quot;&gt;&lt;code&gt;Content-Range&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;headers/if-range&quot;&gt;&lt;code&gt;If-Range&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;headers/transfer-encoding&quot;&gt;&lt;code&gt;Transfer-Encoding&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Связанные заголовки: &lt;a href=&quot;headers/accept-ranges&quot;&gt; &lt;code&gt;Accept-Ranges&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;headers/range&quot;&gt; &lt;code&gt;Range&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;headers/content-range&quot;&gt; &lt;code&gt;Content-Range&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;headers/if-range&quot;&gt; &lt;code&gt;If-Range&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;headers/transfer-encoding&quot;&gt; &lt;code&gt;Transfer-Encoding&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3a02133d506baccd9607b7a86c4dbb504734c4a1" translate="yes" xml:space="preserve">
          <source>Related status codes &lt;a href=&quot;status/200&quot;&gt;&lt;code&gt;200&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;status/206&quot;&gt;&lt;code&gt;206&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;status/416&quot;&gt;&lt;code&gt;416&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Связанные коды состояния &lt;a href=&quot;status/200&quot;&gt; &lt;code&gt;200&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;status/206&quot;&gt; &lt;code&gt;206&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;status/416&quot;&gt; &lt;code&gt;416&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2034c07c455dea528b5c044f32d891f3327323d4" translate="yes" xml:space="preserve">
          <source>Related utility functions</source>
          <target state="translated">Связанные функции утилиты</target>
        </trans-unit>
        <trans-unit id="e0239139fec07795176258d50edee26a1aa0c492" translate="yes" xml:space="preserve">
          <source>Relaxing the security-model of the Web</source>
          <target state="translated">Расслабляющая модель безопасности Web</target>
        </trans-unit>
        <trans-unit id="6924dcad4d5ebf6c89d8fdf2adb56994263c7fe3" translate="yes" xml:space="preserve">
          <source>Rendering engine</source>
          <target state="translated">Двигатель внутреннего сгорания</target>
        </trans-unit>
        <trans-unit id="048baaee6737f98c6e3617392ee0aa92a328acc5" translate="yes" xml:space="preserve">
          <source>Rendering engine version</source>
          <target state="translated">Версия двигателя</target>
        </trans-unit>
        <trans-unit id="f5a55dcde49099910df9c704e7c97c70be2ccc80" translate="yes" xml:space="preserve">
          <source>Reorganization of a Web site, with non-GET links/operations.</source>
          <target state="translated">Реорганизация сайта,с не-GET ссылками/операциями.</target>
        </trans-unit>
        <trans-unit id="6069aff506484cfe4ca0e6dc53acad55e6682b1e" translate="yes" xml:space="preserve">
          <source>Reorganization of a Web site.</source>
          <target state="translated">Реорганизация сайта.</target>
        </trans-unit>
        <trans-unit id="d67bc0e6c0c6dc1b32fa80aa1a759051dbd62d55" translate="yes" xml:space="preserve">
          <source>Report-Only header</source>
          <target state="translated">Заголовок отчета-только для заголовков</target>
        </trans-unit>
        <trans-unit id="06d6c29bfb10b8b70b6c5a76ac8a545632073eb1" translate="yes" xml:space="preserve">
          <source>Reporting API</source>
          <target state="translated">API отчетности</target>
        </trans-unit>
        <trans-unit id="e0ff584859d7c7f3e165e23c136c2c4b65edc9dc" translate="yes" xml:space="preserve">
          <source>Reporting directive</source>
          <target state="translated">Директива по отчетности</target>
        </trans-unit>
        <trans-unit id="49734955482cddad14d7d6086f6396c10758c821" translate="yes" xml:space="preserve">
          <source>Reporting directives</source>
          <target state="translated">Директивы по отчетности</target>
        </trans-unit>
        <trans-unit id="6e53788c8a0b65951ac470b7cdcba8ef12feb88d" translate="yes" xml:space="preserve">
          <source>Reporting directives control the reporting process of CSP violations. See also the &lt;a href=&quot;content-security-policy-report-only&quot;&gt;&lt;code&gt;Content-Security-Policy-Report-Only&lt;/code&gt;&lt;/a&gt; header.</source>
          <target state="translated">Директивы по отчетности контролируют процесс сообщения о нарушениях CSP. См. Также заголовок &lt;a href=&quot;content-security-policy-report-only&quot;&gt; &lt;code&gt;Content-Security-Policy-Report-Only&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="faafcc65691f4495ef2dd9f54e8f8dbc76133274" translate="yes" xml:space="preserve">
          <source>Representation header fields provide metadata about the
   representation.  When a message includes a payload body, the
   representation header fields describe how to interpret the
   representation data enclosed in the payload body.  In a response to a
   HEAD request, the representation header fields describe the
   representation data that would have been enclosed in the payload body
   if the same request had been a GET.

   The following header fields convey representation metadata:

   +-------------------+-----------------+
   | Header Field Name | Defined in...   |
   +-------------------+-----------------+
   | Content-Type      | &lt;a href=&quot;#section-3.1.1.5&quot;&gt;Section 3.1.1.5&lt;/a&gt; |
   | Content-Encoding  | &lt;a href=&quot;#section-3.1.2.2&quot;&gt;Section 3.1.2.2&lt;/a&gt; |
   | Content-Language  | &lt;a href=&quot;#section-3.1.3.2&quot;&gt;Section 3.1.3.2&lt;/a&gt; |
   | Content-Location  | &lt;a href=&quot;#section-3.1.4.2&quot;&gt;Section 3.1.4.2&lt;/a&gt; |
   +-------------------+-----------------+</source>
          <target state="translated">Поля заголовка представления предоставляют метаданные о представлении. Когда сообщение включает тело полезной нагрузки, поля заголовка представления описывают, как интерпретировать данные представления, заключенные в теле полезной нагрузки. В ответ на запрос HEAD поля заголовка представления описывают данные представления, которые были бы включены в тело полезной нагрузки, если бы тот же запрос был GET. Следующие поля заголовка передают метаданные представления: + ------------------- + ----------------- + | Имя поля заголовка | Определено в ... | + ------------------- + ----------------- + | Content-Type | &lt;a href=&quot;#section-3.1.1.5&quot;&gt;Раздел 3.1.1.5&lt;/a&gt; | | Content-Encoding | &lt;a href=&quot;#section-3.1.2.2&quot;&gt;Раздел 3.1.2.2&lt;/a&gt; | | Content-Language | &lt;a href=&quot;#section-3.1.3.2&quot;&gt;Раздел 3.1.3.2&lt;/a&gt;| | Content-Location | &lt;a href=&quot;#section-3.1.4.2&quot;&gt;Раздел 3.1.4.2&lt;/a&gt; | + ------------------- + ----------------- +</target>
        </trans-unit>
        <trans-unit id="e405e17158b8b239987e79f57e2f7771ef0097af" translate="yes" xml:space="preserve">
          <source>Representations (RFC 7231)</source>
          <target state="translated">Представительства (RFC 7231)</target>
        </trans-unit>
        <trans-unit id="4aed03cac49d5e43da4e855a967286931a4d621a" translate="yes" xml:space="preserve">
          <source>Request</source>
          <target state="translated">Request</target>
        </trans-unit>
        <trans-unit id="92f88e2c8e9bb975a09d205785b581b72223d69c" translate="yes" xml:space="preserve">
          <source>Request (RFC 2616)</source>
          <target state="translated">Запрос (RFC 2616)</target>
        </trans-unit>
        <trans-unit id="209107c4e6e87baa9562058df6689267d77f72ab" translate="yes" xml:space="preserve">
          <source>Request and Response messages MAY transfer an entity if not otherwise
   restricted by the request method or response status code. An entity
   consists of entity-header fields and an entity-body, although some
   responses will only include the entity-headers.

   In this section, both sender and recipient refer to either the client
   or the server, depending on who sends and who receives the entity.</source>
          <target state="translated">Сообщения о запросе и ответе ПОЛНОСТЬЮ передают сущность,если иное не ограничено методом запроса или кодом статуса ответа.Сущность состоит из полей заголовка и тела,хотя некоторые ответы будут включать только заголовки структур.В данном разделе и отправитель,и получатель относятся либо к клиенту,либо к серверу,в зависимости от того,кто отправляет и кто получает сущность.</target>
        </trans-unit>
        <trans-unit id="b4ccb0ae69ff9044ffa521ca4c16ab4e8a2bb624" translate="yes" xml:space="preserve">
          <source>Request context</source>
          <target state="translated">Контекст запроса</target>
        </trans-unit>
        <trans-unit id="6ee7b5c7d1970d29bd49eb9d029bff7b4b9637c8" translate="yes" xml:space="preserve">
          <source>Request entity is larger than limits defined by server; the server might close the connection or return an &lt;code&gt;Retry-After&lt;/code&gt; header field.</source>
          <target state="translated">Сущность запроса превышает пределы, определенные сервером; сервер может закрыть соединение или вернуть поле заголовка &lt;code&gt;Retry-After&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5b3e3eaae6a46abf6af6e09d0d998a3ceec713b2" translate="yes" xml:space="preserve">
          <source>Request has body</source>
          <target state="translated">У запроса есть тело</target>
        </trans-unit>
        <trans-unit id="a9528878e11c1033e6bd63ba8721a8f88c91e374" translate="yes" xml:space="preserve">
          <source>Request header</source>
          <target state="translated">Заголовок запроса</target>
        </trans-unit>
        <trans-unit id="30eaa32f64dd1274f348ded1be63b905756fabff" translate="yes" xml:space="preserve">
          <source>Request methods</source>
          <target state="translated">Методы запроса</target>
        </trans-unit>
        <trans-unit id="3437c4d523fcec9c5dbe6ca25b313e8b0c9faa07" translate="yes" xml:space="preserve">
          <source>Request methods are considered &quot;safe&quot; if their defined semantics are
   essentially read-only; i.e., the client does not request, and does
   not expect, any state change on the origin server as a result of
   applying a safe method to a target resource.  Likewise, reasonable
   use of a safe method is not expected to cause any harm, loss of
   property, or unusual burden on the origin server. 

   This definition of safe methods does not prevent an implementation
   from including behavior that is potentially harmful, that is not
   entirely read-only, or that causes side effects while invoking a safe
   method.  What is important, however, is that the client did not
   request that additional behavior and cannot be held accountable for
   it.  For example, most servers append request information to access
   log files at the completion of every response, regardless of the
   method, and that is considered safe even though the log storage might
   become full and crash the server.  Likewise, a safe request initiated
   by selecting an advertisement on the Web will often have the side
   effect of charging an advertising account.

   Of the request methods defined by this specification, the GET, HEAD,
   OPTIONS, and TRACE methods are defined to be safe.

   The purpose of distinguishing between safe and unsafe methods is to
   allow automated retrieval processes (spiders) and cache performance
   optimization (pre-fetching) to work without fear of causing harm.  In
   addition, it allows a user agent to apply appropriate constraints on
   the automated use of unsafe methods when processing potentially
   untrusted content.

   A user agent SHOULD distinguish between safe and unsafe methods when
   presenting potential actions to a user, such that the user can be
   made aware of an unsafe action before it is requested.

   When a resource is constructed such that parameters within the
   effective request URI have the effect of selecting an action, it is
   the resource owner's responsibility to ensure that the action is
   consistent with the request method semantics.  For example, it is
   common for Web-based content editing software to use actions within
   query parameters, such as &quot;page?do=delete&quot;.  If the purpose of such a
   resource is to perform an unsafe action, then the resource owner MUST
   disable or disallow that action when it is accessed using a safe
   request method.  Failure to do so will result in unfortunate side
   effects when automated processes perform a GET on every URI reference
   for the sake of link maintenance, pre-fetching, building a search
   index, etc.</source>
          <target state="translated">Методы запроса считаются &quot;безопасными&quot;,если их определенная семантика,по сути,доступна только для чтения;т.е.клиент не запрашивает и не ожидает изменения состояния на исходном сервере в результате применения безопасного метода к целевому ресурсу.Точно так же,разумное использование безопасного метода не должно причинить вред,потерю имущества или необычную нагрузку на исходный сервер.Это определение безопасных методов не препятствует включению в реализацию потенциально опасного поведения,которое не является полностью доступным только для чтения,или которое вызывает побочные эффекты при обращении к безопасному методу.Однако,важно то,что клиент не запрашивал такого дополнительного поведения и не может быть привлечен к ответственности за него.Например,большинство серверов добавляют информацию о запросе для доступа к лог файлам по завершении каждого ответа,независимо от метода,и это считается безопасным,даже если хранилище логов может стать полным и привести к краху сервера.Аналогичным образом,безопасный запрос,инициируемый выбором рекламы в Интернете,часто будет иметь побочный эффект от взимания платы за рекламный аккаунт.Из методов запроса,определенных этой спецификацией,методы GET,HEAD,OPTIONS и TRACE определены как безопасные.Цель разграничения безопасных и небезопасных методов-позволить автоматизированным процессам поиска (пауки)и оптимизации производительности кэша (предварительная выборка)работать,не опасаясь причинения вреда.Кроме того,это позволяет пользователю-агенту применять соответствующие ограничения на автоматическое использование опасных методов при обработке потенциально недоверенного контента.Пользовательский агент ДОЛЖЕН различать безопасные и небезопасные методы при представлении потенциального действия пользователю таким образом,что пользователь может быть уведомлен об опасном действии до того,как оно будет запрошено.Когда ресурс построен таким образом,что параметры в пределах URI действительного запроса влияют на выбор действия,владелец ресурса несет ответственность за то,чтобы действие соответствовало семантике метода запроса.Например,для программного обеспечения для редактирования контента в Интернете обычно используются действия в параметрах запроса,такие как &quot;page?do=delete&quot;.Если целью такого ресурса является выполнение небезопасного действия,то владелец ресурса ДОЛЖЕН отключить или запретить это действие при обращении к нему безопасным методом запроса.Невыполнение этого действия приведет к нежелательным побочным эффектам,когда автоматизированные процессы будут выполнять GET по каждой ссылке URI ради обслуживания ссылок,предварительной выборки,построения поискового индекса и т.д.</target>
        </trans-unit>
        <trans-unit id="e9b6ad5f3d071161c8b3a3dfe4a105628b443960" translate="yes" xml:space="preserve">
          <source>Request methods can be defined as &quot;cacheable&quot; to indicate that
   responses to them are allowed to be stored for future reuse; for
   specific requirements see [&lt;a href=&quot;https://tools.ietf.org/html/rfc7234&quot;&gt;RFC7234&lt;/a&gt;].  In general, safe methods that
   do not depend on a current or authoritative response are defined as
   cacheable; this specification defines GET, HEAD, and POST as
   cacheable, although the overwhelming majority of cache
   implementations only support GET and HEAD.</source>
          <target state="translated">Методы запроса могут быть определены как &amp;laquo;кэшируемые&amp;raquo;, чтобы указать, что ответы на них могут быть сохранены для повторного использования в будущем; конкретные требования см. в [ &lt;a href=&quot;https://tools.ietf.org/html/rfc7234&quot;&gt;RFC7234&lt;/a&gt; ]. Как правило, безопасные методы, которые не зависят от текущего или авторитетного ответа, определяются как кэшируемые; эта спецификация определяет GET, HEAD и POST как кэшируемые, хотя подавляющее большинство реализаций кеширования поддерживают только GET и HEAD.</target>
        </trans-unit>
        <trans-unit id="0fe2385cde5e7e860a739c3f7a915be25d6759e0" translate="yes" xml:space="preserve">
          <source>Request requires preflight, which is disallowed to follow cross-origin redirect</source>
          <target state="translated">Запрос требует совершения предполетного перелета,который запрещен для переадресации с перекрестным происхождением.</target>
        </trans-unit>
        <trans-unit id="503b534d1cc7a82dc13ef87bb3f5b88cfd30bfc5" translate="yes" xml:space="preserve">
          <source>Request smuggling ([&lt;a href=&quot;#ref-Linhart&quot;&gt;Linhart&lt;/a&gt;]) is a technique that exploits
   differences in protocol parsing among various recipients to hide
   additional requests (which might otherwise be blocked or disabled by
   policy) within an apparently harmless request.  Like response
   splitting, request smuggling can lead to a variety of attacks on HTTP
   usage.

   This specification has introduced new requirements on request
   parsing, particularly with regard to message framing in
   &lt;a href=&quot;#section-3.3.3&quot;&gt;Section 3.3.3&lt;/a&gt;, to reduce the effectiveness of request smuggling.</source>
          <target state="translated">Контрабанда запросов ([ &lt;a href=&quot;#ref-Linhart&quot;&gt;Linhart&lt;/a&gt; ]) - это метод, который использует различия в синтаксическом анализе протоколов между различными получателями, чтобы скрыть дополнительные запросы (которые в противном случае могли бы быть заблокированы или отключены политикой) в явно безобидном запросе. Подобно разделению ответа, контрабанда запросов может привести к различным атакам на использование HTTP. Эта спецификация ввела новые требования к синтаксическому анализу запросов, особенно в отношении кадрирования сообщений в &lt;a href=&quot;#section-3.3.3&quot;&gt;Разделе 3.3.3&lt;/a&gt; , чтобы снизить эффективность контрабанды запросов.</target>
        </trans-unit>
        <trans-unit id="4f2b78b6c4f7e212360888da9e743888ae19dbfe" translate="yes" xml:space="preserve">
          <source>Requesting a specific range from a server</source>
          <target state="translated">Запрос определенного диапазона с сервера</target>
        </trans-unit>
        <trans-unit id="3e1c4325f552db0dd41e8ebaad689edea63a1814" translate="yes" xml:space="preserve">
          <source>Requesting data from a server in different formats</source>
          <target state="translated">Запрос данных с сервера в различных форматах</target>
        </trans-unit>
        <trans-unit id="65f9d517e2876f465c9079ef7d58987b6d7133b5" translate="yes" xml:space="preserve">
          <source>Requesting the first 500 and last 500 bytes of the file. The request may be rejected by the server if the ranges overlap.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a63fe83db36a0c43261f124bbf4931e1feeed295" translate="yes" xml:space="preserve">
          <source>Requesting three ranges from the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7194e6a0d0b838382b202853e7c198d693fbabc" translate="yes" xml:space="preserve">
          <source>Requests</source>
          <target state="translated">Requests</target>
        </trans-unit>
        <trans-unit id="42f2929bd33823bdf38ee7942319e10575f276bb" translate="yes" xml:space="preserve">
          <source>Requests consists of the following elements:</source>
          <target state="translated">Запросы состоят из следующих элементов:</target>
        </trans-unit>
        <trans-unit id="407b9cd287af007f637b486aaa36862498225921" translate="yes" xml:space="preserve">
          <source>Requests to the &lt;code&gt;http://&lt;/code&gt; version of your site will redirect to the &lt;code&gt;https://&lt;/code&gt; version of your site.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e82d9e92edcff98536ce51f4852910ccc962b156" translate="yes" xml:space="preserve">
          <source>Requests with credentials</source>
          <target state="translated">Запросы с реквизитами</target>
        </trans-unit>
        <trans-unit id="9472781a408847ad355c057726227036836eb352" translate="yes" xml:space="preserve">
          <source>Require preflight for non-standard CORS-safelisted request headers Accept, Accept-Language, and Content-Language</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="896b8e09c2c51403430f397ed2a914d36c173299" translate="yes" xml:space="preserve">
          <source>Requirements for cookies across the EU are defined in &lt;a href=&quot;http://eur-lex.europa.eu/legal-content/EN/TXT/?uri=CELEX:32009L0136&quot;&gt;Directive 2009/136/EC&lt;/a&gt; of the European Parliament and came into effect on 25 May 2011. A directive is not a law by itself, but a requirement for EU member states to put laws in place that meet the requirements of the directive. The actual laws can differ from country to country.</source>
          <target state="translated">Требования к файлам cookie в ЕС определены в &lt;a href=&quot;http://eur-lex.europa.eu/legal-content/EN/TXT/?uri=CELEX:32009L0136&quot;&gt;Директиве 2009/136 / EC&lt;/a&gt; Европейского парламента и вступили в силу 25 мая 2011 года. Директива сама по себе не является законом, а является требованием для стран-членов ЕС принять законы, которые соответствовать требованиям директивы. Фактические законы могут отличаться от страны к стране.</target>
        </trans-unit>
        <trans-unit id="58efddfc035f1f01ebc5a45ea6ef85eae9088fde" translate="yes" xml:space="preserve">
          <source>Requires &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/SRI&quot;&gt;SRI&lt;/a&gt; for both, scripts and style sheets.</source>
          <target state="translated">Требуется &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/SRI&quot;&gt;SRI&lt;/a&gt; как для скриптов, так и для таблиц стилей.</target>
        </trans-unit>
        <trans-unit id="33eafda8cd41b807493e212a681cb068a92c17e4" translate="yes" xml:space="preserve">
          <source>Requires &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/SRI&quot;&gt;SRI&lt;/a&gt; for scripts.</source>
          <target state="translated">Требуется &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/SRI&quot;&gt;SRI&lt;/a&gt; для скриптов.</target>
        </trans-unit>
        <trans-unit id="a71171ac0001f4cd89b14fa7a98d39f88be17a2d" translate="yes" xml:space="preserve">
          <source>Requires &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/SRI&quot;&gt;SRI&lt;/a&gt; for style sheets.</source>
          <target state="translated">Требуется &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/SRI&quot;&gt;SRI&lt;/a&gt; для таблиц стилей.</target>
        </trans-unit>
        <trans-unit id="1c018354f46e0590ba0dbb9b1c4723dd35f22f66" translate="yes" xml:space="preserve">
          <source>Requires a sample of the violating code to be included in the violation report.</source>
          <target state="translated">Требуется образец кода нарушения,который должен быть включен в отчет о нарушении.</target>
        </trans-unit>
        <trans-unit id="3a775f4a3f060d56b00223f3382dbb2cdc761a0e" translate="yes" xml:space="preserve">
          <source>Requires the use of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/SRI&quot;&gt;SRI&lt;/a&gt; for scripts or styles on the page.</source>
          <target state="translated">Требует использования &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/SRI&quot;&gt;SRI&lt;/a&gt; для скриптов или стилей на странице.</target>
        </trans-unit>
        <trans-unit id="2a5e4228f9aa6fc13b0464eaaa4225d798aeffa9" translate="yes" xml:space="preserve">
          <source>Requiring revalidation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9991b4d153c5704ddc24858d8325cfbcfbf453af" translate="yes" xml:space="preserve">
          <source>Reserved for use as a placeholder in examples showing how to use MIME types. These should never be used outside of sample code listings and documentation. &lt;code&gt;example&lt;/code&gt; can also be used as a subtype; for instance, in an example related to working with audio on the web, the MIME type &lt;code&gt;audio/example&lt;/code&gt; can be used to indicate that the type is a placeholder and should be replaced with an appropriate one when using the code in the real world.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54f4777a2c07551392e54e261d880e24efe04a2b" translate="yes" xml:space="preserve">
          <source>Resolves the given DNS hostname into an IP address, and returns it in the dot-separated format as a string.</source>
          <target state="translated">Решает заданное имя хоста DNS в IP-адрес и возвращает его в формате,разделенном точками,в виде строки.</target>
        </trans-unit>
        <trans-unit id="54d7b16d6f25ff228207d06007bc79d8c49dabb8" translate="yes" xml:space="preserve">
          <source>Resource Timing API</source>
          <target state="translated">API синхронизации ресурсов</target>
        </trans-unit>
        <trans-unit id="d64022b8c69b24949fe20baf510c31745fe844e9" translate="yes" xml:space="preserve">
          <source>Resource Timing Level 3&lt;br/&gt;&lt;small&gt;The definition of 'Timing-Allow-Origin' in that specification.&lt;/small&gt;</source>
          <target state="translated">Resource Timing Level 3 &lt;br/&gt;&lt;small&gt;Определение &amp;laquo;Timing-Allow-Origin&amp;raquo; в этой спецификации.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="798dcb46eb38b768887b1e2f745c95d93e85e984" translate="yes" xml:space="preserve">
          <source>Resource URLs</source>
          <target state="translated">URL-адреса ресурсов</target>
        </trans-unit>
        <trans-unit id="7de6ba1f289521322fe08eee24de6e4e8832b3bf" translate="yes" xml:space="preserve">
          <source>Resource URLs are composed of two parts: a prefix (&lt;code&gt;resource:&lt;/code&gt;), and a URL pointing to the resource you want to load:</source>
          <target state="translated">URL-адреса ресурсов состоят из двух частей: префикса ( &lt;code&gt;resource:&lt;/code&gt; и URL-адреса, указывающего на ресурс, который вы хотите загрузить:</target>
        </trans-unit>
        <trans-unit id="ad91d18e5dc789f46a10914125180d778fe1dd92" translate="yes" xml:space="preserve">
          <source>Resource URLs, URLs prefixed with the &lt;code&gt;resource:&lt;/code&gt; scheme, are used by Firefox and Firefox browser extensions to load resources internally, but some of the information is available to sites the browser connects to as well.</source>
          <target state="translated">URL-адреса ресурсов, URL-адреса с префиксом &lt;code&gt;resource:&lt;/code&gt; scheme, используются расширениями браузера Firefox и Firefox для внутренней загрузки ресурсов, но некоторая информация также доступна для сайтов, к которым подключается браузер.</target>
        </trans-unit>
        <trans-unit id="2caf2a391127495a2a503e4c2574c5bbaee93687" translate="yes" xml:space="preserve">
          <source>Resource URLs, those prefixed with the &lt;code&gt;resource&lt;/code&gt; scheme are used by Firefox and Firefox browser extensions to load resources internally, but is also available to some sites the browser connects to as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f9dad94a76fa176febfa455dbb8cce0fd95a809" translate="yes" xml:space="preserve">
          <source>Resources and URIs</source>
          <target state="translated">Ресурсы и URL-адреса</target>
        </trans-unit>
        <trans-unit id="aeb4705a43eda0152e9211513d37d2ebc74577ed" translate="yes" xml:space="preserve">
          <source>Resources and specifications</source>
          <target state="translated">Ресурсы и спецификации</target>
        </trans-unit>
        <trans-unit id="6e617e4fc9da3de9693eac5990613543b86c63f9" translate="yes" xml:space="preserve">
          <source>Response</source>
          <target state="translated">Response</target>
        </trans-unit>
        <trans-unit id="b91c0a7d61c2a326eb2fb877b8d8d75077f4c7c5" translate="yes" xml:space="preserve">
          <source>Response (RFC 2616)</source>
          <target state="translated">Ответ (RFC 2616)</target>
        </trans-unit>
        <trans-unit id="62bca1e6a1a2f5863671a7fa9d7845857288f9e2" translate="yes" xml:space="preserve">
          <source>Response codes</source>
          <target state="translated">Коды реагирования</target>
        </trans-unit>
        <trans-unit id="f84e739be38db39024655ad83fa5e6bb72e53942" translate="yes" xml:space="preserve">
          <source>Response context</source>
          <target state="translated">Контекст реагирования</target>
        </trans-unit>
        <trans-unit id="7b398df4add831e6b05ee4c0b368c39fd3f5bc77" translate="yes" xml:space="preserve">
          <source>Response header</source>
          <target state="translated">Заголовок ответа</target>
        </trans-unit>
        <trans-unit id="9b7e02a5516eb784c59460a7b87383f30bdd1c7d" translate="yes" xml:space="preserve">
          <source>Response header fields can supply control data that supplements the
   status code, directs caching, or instructs the client where to go
   next.

   +-------------------+--------------------------+
   | Header Field Name | Defined in...            |
   +-------------------+--------------------------+
   | Age               | &lt;a href=&quot;https://tools.ietf.org/html/rfc7234#section-5.1&quot;&gt;Section&amp;nbsp;5.1 of [RFC7234]&lt;/a&gt; |
   | Cache-Control     | &lt;a href=&quot;https://tools.ietf.org/html/rfc7234#section-5.2&quot;&gt;Section&amp;nbsp;5.2 of [RFC7234]&lt;/a&gt; |
   | Expires           | &lt;a href=&quot;https://tools.ietf.org/html/rfc7234#section-5.3&quot;&gt;Section&amp;nbsp;5.3 of [RFC7234]&lt;/a&gt; |
   | Date              | &lt;a href=&quot;#section-7.1.1.2&quot;&gt;Section 7.1.1.2&lt;/a&gt;          |
   | Location          | &lt;a href=&quot;#section-7.1.2&quot;&gt;Section 7.1.2&lt;/a&gt;            |
   | Retry-After       | &lt;a href=&quot;#section-7.1.3&quot;&gt;Section 7.1.3&lt;/a&gt;            |
   | Vary              | &lt;a href=&quot;#section-7.1.4&quot;&gt;Section 7.1.4&lt;/a&gt;            |
   | Warning           | &lt;a href=&quot;https://tools.ietf.org/html/rfc7234#section-5.5&quot;&gt;Section&amp;nbsp;5.5 of [RFC7234]&lt;/a&gt; |
   +-------------------+--------------------------+</source>
          <target state="translated">Поля заголовка ответа могут предоставлять управляющие данные, которые дополняют код состояния, направляют кэширование или указывают клиенту, куда двигаться дальше. + ------------------- + -------------------------- + | Имя поля заголовка | Определено в ... | + ------------------- + -------------------------- + | Возраст | &lt;a href=&quot;https://tools.ietf.org/html/rfc7234#section-5.1&quot;&gt;Раздел 5.1 [RFC7234]&lt;/a&gt; | | Cache-Control | &lt;a href=&quot;https://tools.ietf.org/html/rfc7234#section-5.2&quot;&gt;Раздел 5.2 [RFC7234]&lt;/a&gt; | | Истекает | &lt;a href=&quot;https://tools.ietf.org/html/rfc7234#section-5.3&quot;&gt;Раздел 5.3 [RFC7234]&lt;/a&gt; | | Дата | &lt;a href=&quot;#section-7.1.1.2&quot;&gt;Раздел 7.1.1.2&lt;/a&gt; | | Расположение | &lt;a href=&quot;#section-7.1.2&quot;&gt;Раздел 7.1.2&lt;/a&gt; | | Retry-After | &lt;a href=&quot;#section-7.1.3&quot;&gt;Раздел 7.1.3&lt;/a&gt; | | Вары | &lt;a href=&quot;#section-7.1.4&quot;&gt;Раздел 7.1.4&lt;/a&gt; | | Предупреждение | &lt;a href=&quot;https://tools.ietf.org/html/rfc7234#section-5.5&quot;&gt;Раздел 5.5 [RFC7234]&lt;/a&gt; | + ------------------- + -------------------------- +</target>
        </trans-unit>
        <trans-unit id="c8aa6a36289563928821fce4669ae4ff1ccded70" translate="yes" xml:space="preserve">
          <source>Response is Stale</source>
          <target state="translated">Реакция Stale</target>
        </trans-unit>
        <trans-unit id="5633194dd26604f7ddba594d72f55184513f1b60" translate="yes" xml:space="preserve">
          <source>Response splitting (a.k.a, CRLF injection) is a common technique,
   used in various attacks on Web usage, that exploits the line-based
   nature of HTTP message framing and the ordered association of
   requests to responses on persistent connections [&lt;a href=&quot;#ref-Klein&quot;&gt;Klein&lt;/a&gt;].  This
   technique can be particularly damaging when the requests pass through
   a shared cache.

   Response splitting exploits a vulnerability in servers (usually
   within an application server) where an attacker can send encoded data
   within some parameter of the request that is later decoded and echoed
   within any of the response header fields of the response.  If the
   decoded data is crafted to look like the response has ended and a 

   subsequent response has begun, the response has been split and the
   content within the apparent second response is controlled by the
   attacker.  The attacker can then make any other request on the same
   persistent connection and trick the recipients (including
   intermediaries) into believing that the second half of the split is
   an authoritative answer to the second request.

   For example, a parameter within the request-target might be read by
   an application server and reused within a redirect, resulting in the
   same parameter being echoed in the Location header field of the
   response.  If the parameter is decoded by the application and not
   properly encoded when placed in the response field, the attacker can
   send encoded CRLF octets and other content that will make the
   application's single response look like two or more responses.

   A common defense against response splitting is to filter requests for
   data that looks like encoded CR and LF (e.g., &quot;%0D&quot; and &quot;%0A&quot;).
   However, that assumes the application server is only performing URI
   decoding, rather than more obscure data transformations like charset
   transcoding, XML entity translation, base64 decoding, sprintf
   reformatting, etc.  A more effective mitigation is to prevent
   anything other than the server's core protocol libraries from sending
   a CR or LF within the header section, which means restricting the
   output of header fields to APIs that filter for bad octets and not
   allowing application servers to write directly to the protocol
   stream.</source>
          <target state="translated">Разделение ответа (также известное как CRLF-инъекция) - это распространенный метод, используемый в различных атаках на использование Интернета, который использует строковую природу кадрирования HTTP-сообщений и упорядоченную ассоциацию запросов с ответами на постоянные соединения [ &lt;a href=&quot;#ref-Klein&quot;&gt;Klein&lt;/a&gt;]. Этот метод может быть особенно опасным, когда запросы проходят через общий кеш. Разделение ответа использует уязвимость на серверах (обычно на сервере приложений), где злоумышленник может отправить закодированные данные в пределах некоторого параметра запроса, которые позже декодируются и отражаются в любом из полей заголовка ответа ответа. Если декодированные данные созданы так, чтобы выглядеть так, как будто ответ закончился и начался последующий ответ, ответ был разделен, и контент в очевидном втором ответе контролируется злоумышленником. Затем злоумышленник может сделать любой другой запрос на том же постоянном соединении и обмануть получателей (включая посредников), заставив поверить, что вторая половина разделения является авторитетным ответом на второй запрос.Например, параметр в целевом объекте запроса может быть прочитан сервером приложений и повторно использован в перенаправлении, в результате чего тот же параметр будет отражен в поле заголовка Location ответа. Если параметр декодируется приложением и не закодирован должным образом при помещении в поле ответа, злоумышленник может отправить закодированные октеты CRLF и другой контент, который сделает один ответ приложения похожим на два или более ответов. Обычная защита от разделения ответа - фильтрация запросов данных, которые выглядят как закодированные CR и LF (например, &amp;laquo;% 0D&amp;raquo; и &amp;laquo;% 0A&amp;raquo;). Однако это предполагает, что сервер приложений выполняет только декодирование URI, а не более непонятные преобразования данных, такие как транскодирование кодировки, преобразование объекта XML, декодирование base64,sprintf, переформатирование и т. д. Более эффективное решение - предотвратить отправку CR или LF в разделе заголовка чем-либо, кроме библиотек основных протоколов сервера, что означает ограничение вывода полей заголовка API, которые фильтруют плохие октеты, и запрет приложения серверы для записи непосредственно в поток протокола.</target>
        </trans-unit>
        <trans-unit id="d4c531a6385991e6bb4b7c4878657728c7803131" translate="yes" xml:space="preserve">
          <source>Response status codes</source>
          <target state="translated">Коды статуса ответа</target>
        </trans-unit>
        <trans-unit id="3de7a37046e38dd56ec505ba9650a90475b3ca79" translate="yes" xml:space="preserve">
          <source>Response status codes beginning with the digit &quot;5&quot; indicate cases in
   which the server is aware that it has erred or is incapable of
   performing the request. Except when responding to a HEAD request, the
   server SHOULD include an entity containing an explanation of the
   error situation, and whether it is a temporary or permanent
   condition. User agents SHOULD display any included entity to the
   user. These response codes are applicable to any request method.</source>
          <target state="translated">Коды статуса ответа,начинающиеся с цифры &quot;5&quot;,указывают на случаи,когда сервер знает,что он ошибся или не может выполнить запрос.За исключением ответа на запрос HEAD,сервер ДОЛЖЕН включать сущность,содержащую объяснение ситуации ошибки,и является ли она временным или постоянным состоянием.Пользовательские агенты SHOULD отображают любую включенную сущность пользователю.Эти коды ответов применимы к любому методу запроса.</target>
        </trans-unit>
        <trans-unit id="83bdd15fd3efbd39156bcb4a7d8c4cbc95551582" translate="yes" xml:space="preserve">
          <source>Response to an &lt;a href=&quot;methods/options&quot;&gt;&lt;code&gt;OPTIONS&lt;/code&gt;&lt;/a&gt; request (which is the preflight request), including sending necessary values with &lt;a href=&quot;headers/access-control-allow-methods&quot;&gt;&lt;code&gt;Access-Control-Allow-Methods&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;headers/access-control-allow-headers&quot;&gt;&lt;code&gt;Access-Control-Allow-Headers&lt;/code&gt;&lt;/a&gt; (if any additional headers are needed in order for the application to work), and, if credentials are necessary for this resource, &lt;a href=&quot;headers/access-control-allow-credentials&quot;&gt;&lt;code&gt;Access-Control-Allow-Credentials&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Ответ на запрос &lt;a href=&quot;methods/options&quot;&gt; &lt;code&gt;OPTIONS&lt;/code&gt; &lt;/a&gt; (который является предварительным запросом), включая отправку необходимых значений с помощью &lt;a href=&quot;headers/access-control-allow-methods&quot;&gt; &lt;code&gt;Access-Control-Allow-Methods&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;headers/access-control-allow-headers&quot;&gt; &lt;code&gt;Access-Control-Allow-Headers&lt;/code&gt; &lt;/a&gt; (если какие-либо дополнительные заголовки необходимы для работы приложения) и , если для этого ресурса необходимы учетные данные, &lt;a href=&quot;headers/access-control-allow-credentials&quot;&gt; &lt;code&gt;Access-Control-Allow-Credentials&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="dadf3ea7de46798a782a6a436390eec73bf559b0" translate="yes" xml:space="preserve">
          <source>Response to the actual request, including handling &lt;code&gt;POST&lt;/code&gt; data, etc.</source>
          <target state="translated">Ответ на фактический запрос, включая обработку данных &lt;code&gt;POST&lt;/code&gt; и т. Д.</target>
        </trans-unit>
        <trans-unit id="eca3a297d123fc40900d58016705e489702b5ebd" translate="yes" xml:space="preserve">
          <source>Response-only headers</source>
          <target state="translated">Заголовки только для ответов</target>
        </trans-unit>
        <trans-unit id="633f6e8b851aad01759e04e23cfe5188859a4d5b" translate="yes" xml:space="preserve">
          <source>Responses</source>
          <target state="translated">Responses</target>
        </trans-unit>
        <trans-unit id="d8af98670003f4df54578c7641a8970d7403de87" translate="yes" xml:space="preserve">
          <source>Responses consist of the following elements:</source>
          <target state="translated">Ответы состоят из следующих элементов:</target>
        </trans-unit>
        <trans-unit id="3b1f5e9b4019ed86ef95e3eb735acf435207ec4e" translate="yes" xml:space="preserve">
          <source>Responses other than &lt;a href=&quot;methods/get&quot;&gt;&lt;code&gt;GET&lt;/code&gt;&lt;/a&gt; if something suitable for use as a cache key is defined.</source>
          <target state="translated">Ответы, отличные от &lt;a href=&quot;methods/get&quot;&gt; &lt;code&gt;GET&lt;/code&gt; ,&lt;/a&gt; если определено что-то подходящее для использования в качестве ключа кеша.</target>
        </trans-unit>
        <trans-unit id="03a2ed7eea8ee322b3125e461709f17a765da78d" translate="yes" xml:space="preserve">
          <source>Restrict a site from using sensitive APIs like camera or microphone.</source>
          <target state="translated">Ограничение использования сайта от использования чувствительных API,таких как камера или микрофон.</target>
        </trans-unit>
        <trans-unit id="a7df26a7033a2ab83d3ca306e3a5d1318fad2e5a" translate="yes" xml:space="preserve">
          <source>Restrict access to certain URIs</source>
          <target state="translated">Ограничение доступа к определенным URL-адресам</target>
        </trans-unit>
        <trans-unit id="8918d7b0ef8cf023a0a02c7f4d3a7e80b8e0bd64" translate="yes" xml:space="preserve">
          <source>Restrict access to cookies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4117c2bf4d89b600064f4f9d06f852ac1a3ae10f" translate="yes" xml:space="preserve">
          <source>Restricting access with Apache and basic authentication</source>
          <target state="translated">Ограничение доступа с помощью Apache и базовой аутентификации</target>
        </trans-unit>
        <trans-unit id="461bffebbe59da668a737629925f899f93ff2412" translate="yes" xml:space="preserve">
          <source>Restricting access with nginx and basic authentication</source>
          <target state="translated">Ограничение доступа с помощью nginx и базовой аутентификации</target>
        </trans-unit>
        <trans-unit id="5e935b66a20bae038fe32dd13f6fc11359152943" translate="yes" xml:space="preserve">
          <source>Restricts the URLs to which a document can initiate navigation by any means, including &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form&quot;&gt;&lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt;&lt;/a&gt; (if &lt;a href=&quot;content-security-policy/form-action&quot;&gt;&lt;code&gt;form-action&lt;/code&gt;&lt;/a&gt; is not specified), &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a&quot;&gt;&lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/location&quot;&gt;&lt;code&gt;window.location&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/open&quot;&gt;&lt;code&gt;window.open&lt;/code&gt;&lt;/a&gt;, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="764a16b3f8fb29997b690d201939e38d6d70edd4" translate="yes" xml:space="preserve">
          <source>Restricts the URLs to which a document can navigate by any means (a, form, window.location, window.open, etc.)</source>
          <target state="translated">Ограничивает URL-адреса,по которым документ может перемещаться любым способом (a,форма,window.location,window.open и т.д.).</target>
        </trans-unit>
        <trans-unit id="a6b9ea9002b18b6b31923bd6067c94ff74e5664b" translate="yes" xml:space="preserve">
          <source>Restricts the URLs which can be loaded using script interfaces</source>
          <target state="translated">Ограничивает URL-адреса,которые могут быть загружены с помощью скриптовых интерфейсов</target>
        </trans-unit>
        <trans-unit id="a088abbeea65fe12b4006ee4be76da1a0764ac75" translate="yes" xml:space="preserve">
          <source>Restricts the URLs which can be used as the target of a form submissions from a given context.</source>
          <target state="translated">Ограничивает URL-адреса,которые могут быть использованы в качестве мишени для подачи формы из заданного контекста.</target>
        </trans-unit>
        <trans-unit id="4222ed3b88e187751d0f547eca5261acc886b9c0" translate="yes" xml:space="preserve">
          <source>Restricts the URLs which can be used in a document's &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/base&quot;&gt;&lt;code&gt;&amp;lt;base&amp;gt;&lt;/code&gt;&lt;/a&gt; element.</source>
          <target state="translated">Ограничивает URL-адреса, которые можно использовать в элементе &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/base&quot;&gt; &lt;code&gt;&amp;lt;base&amp;gt;&lt;/code&gt; документа&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7afcc35a5e47466a95fb1a0c4cf65338cc5b6518" translate="yes" xml:space="preserve">
          <source>Restricts the set of plugins that can be embedded into a document by limiting the types of resources which can be loaded.</source>
          <target state="translated">Ограничивает набор плагинов,которые могут быть встроены в документ,ограничивая типы ресурсов,которые могут быть загружены.</target>
        </trans-unit>
        <trans-unit id="dedece9fd5695df933056cbe96d25f6b3069f79b" translate="yes" xml:space="preserve">
          <source>Retry-After</source>
          <target state="translated">Retry-After</target>
        </trans-unit>
        <trans-unit id="0c9f6f19959bb087b887f8153dbc882bf36b5be0" translate="yes" xml:space="preserve">
          <source>Retry-After (RFC 2616)</source>
          <target state="translated">Восстановление после (RFC 2616)</target>
        </trans-unit>
        <trans-unit id="4bbd975267207d617ce8ac55243c4e2435f8d973" translate="yes" xml:space="preserve">
          <source>Retry-After (RFC 7231)</source>
          <target state="translated">Восстановление после (RFC 7231)</target>
        </trans-unit>
        <trans-unit id="b3d51d173748120ed51dbedce115ff294ba9c89e" translate="yes" xml:space="preserve">
          <source>Return &quot;permission denied&quot; for JavaScript APIs that require user permission grants.</source>
          <target state="translated">Вернуть &quot;разрешение запрещено&quot; для JavaScript API,которые требуют разрешения пользователя.</target>
        </trans-unit>
        <trans-unit id="927efd592a21c92cfe7587e9cfb7e85413562cbe" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;false&lt;/code&gt; or error from an existing JavaScript API that provides access to feature.</source>
          <target state="translated">Вернуть &lt;code&gt;false&lt;/code&gt; или ошибку из существующего JavaScript API, предоставляющего доступ к функции.</target>
        </trans-unit>
        <trans-unit id="846e30137de34dc6b54690d1b47a21341be03ee6" translate="yes" xml:space="preserve">
          <source>Return value format</source>
          <target state="translated">Формат возвращаемого значения</target>
        </trans-unit>
        <trans-unit id="0ecdf9bf4172ac40a4c998cc081e4e01cca34349" translate="yes" xml:space="preserve">
          <source>Returning Values from Forms: multipart/form-data</source>
          <target state="translated">Возврат значений из форм:многочастичные/форма-данные</target>
        </trans-unit>
        <trans-unit id="a5275c587d1874bd04ab3b907533a732dac13af3" translate="yes" xml:space="preserve">
          <source>Returns a string describing the configuration. The format of this string is defined in &lt;strong&gt;return value format&lt;/strong&gt; below.</source>
          <target state="translated">Возвращает строку, описывающую конфигурацию. Формат этой строки определяется в &lt;strong&gt;формате возвращаемого значения&lt;/strong&gt; ниже.</target>
        </trans-unit>
        <trans-unit id="779f1a52816d71bc238af2dd263cf807ba014f89" translate="yes" xml:space="preserve">
          <source>Returns the number (integer) of DNS domain levels (number of dots) in the hostname.</source>
          <target state="translated">Возвращает количество (целое)уровней домена DNS (количество точек)в имени хоста.</target>
        </trans-unit>
        <trans-unit id="796056bd8233f1877d339efcb4a7fa1c33b0b3f3" translate="yes" xml:space="preserve">
          <source>Returns the server IP address of the machine Firefox is running on, as a string in the dot-separated integer format.</source>
          <target state="translated">Возвращает IP-адрес сервера машины,на которой запущен Firefox,в виде строки в формате разделенных точками целых чисел.</target>
        </trans-unit>
        <trans-unit id="bfcce7002a9eb058fd0c082f413c844164d4b026" translate="yes" xml:space="preserve">
          <source>Returns true if and only if the domain of hostname matches.</source>
          <target state="translated">Возвращает значение true только в том случае,если домен имени хоста совпадает.</target>
        </trans-unit>
        <trans-unit id="6b72b7530ef6814ea7c835506c7a8c08546f1ec7" translate="yes" xml:space="preserve">
          <source>Returns true if the string matches the specified shell expression.</source>
          <target state="translated">Возвращает true,если строка соответствует указанному выражению оболочки.</target>
        </trans-unit>
        <trans-unit id="9249ca2743c193852a67d54d8e0ccd8dc000dc23" translate="yes" xml:space="preserve">
          <source>Revalidation Failed</source>
          <target state="translated">Неудачная реаттестация</target>
        </trans-unit>
        <trans-unit id="4129a88770ac061fd8f7b04f0aaf90217987ad97" translate="yes" xml:space="preserve">
          <source>Revalidation and reloading</source>
          <target state="translated">Переаттестация и перезагрузка</target>
        </trans-unit>
        <trans-unit id="df1c8fa3f601e8fda9ea5b4f0aa8ffdeb239e94f" translate="yes" xml:space="preserve">
          <source>Revalidation is triggered when the user presses the reload button. It is also triggered under normal browsing if the cached response includes the &quot;&lt;code&gt;Cache-Control: must-revalidate&lt;/code&gt;&quot; header. Another factor is the cache validation preferences in the &lt;code&gt;Advanced-&amp;gt;Cache&lt;/code&gt; preferences panel. There is an option to force a validation each time a document is loaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6cc272c56bbafbde0f3dbd9f6482ab1d74f3f7f" translate="yes" xml:space="preserve">
          <source>Revalidation is triggered when the user presses the reload button. It is also triggered under normal browsing if the cached response includes the &quot;&lt;code&gt;Cache-control: must-revalidate&lt;/code&gt;&quot; header. Another factor is the cache validation preferences in the &lt;code&gt;Advanced-&amp;gt;Cache&lt;/code&gt; preferences panel. There is an option to force a validation each time a document is loaded.</source>
          <target state="translated">Повторная проверка запускается, когда пользователь нажимает кнопку перезагрузки. Он также запускается при обычном просмотре, если кэшированный ответ включает заголовок &amp;laquo; &lt;code&gt;Cache-control: must-revalidate&lt;/code&gt; &amp;raquo;. Другой фактор - это настройки проверки &lt;code&gt;Advanced-&amp;gt;Cache&lt;/code&gt; панели &amp;laquo; Дополнительно&amp;raquo; -&amp;gt; &amp;laquo;Настройки кэша&amp;raquo; . Существует возможность принудительно выполнять проверку каждый раз при загрузке документа.</target>
        </trans-unit>
        <trans-unit id="4c78cb0809c7ea82ab0ddb940bd222d197180540" translate="yes" xml:space="preserve">
          <source>Reverse proxies</source>
          <target state="translated">Реверсивные прокси</target>
        </trans-unit>
        <trans-unit id="f23dd650ab0a4fd135ac0102e4263dfefabf8c25" translate="yes" xml:space="preserve">
          <source>Revved resources</source>
          <target state="translated">Возобновляемые ресурсы</target>
        </trans-unit>
        <trans-unit id="c53ad24c321bdfc1ea4aa408ce3ddb04feb1fadd" translate="yes" xml:space="preserve">
          <source>Rich Text Format (RTF)</source>
          <target state="translated">Богатый текстовый формат (RTF)</target>
        </trans-unit>
        <trans-unit id="6e119a5751c88c7d53ad4f9a517a2b4fe5bf070c" translate="yes" xml:space="preserve">
          <source>Right after sending the &lt;code&gt;101&lt;/code&gt; status code, an eventual handshake for the new protocol happens, if the new protocol requires it, then the server sends the answer requested for the original request (the one that included the &lt;code&gt;&quot;Upgrade&quot;&lt;/code&gt; header), following the new protocol rules.</source>
          <target state="translated">Сразу после отправки кода состояния &lt;code&gt;101&lt;/code&gt; происходит окончательное рукопожатие для нового протокола, если этого требует новый протокол, то сервер отправляет ответ, запрошенный для исходного запроса (тот, который включал заголовок &lt;code&gt;&quot;Upgrade&quot;&lt;/code&gt; ), следуя новому правила протокола.</target>
        </trans-unit>
        <trans-unit id="203ee3287248c92b0df850ac6b3eaa45b58ee5e9" translate="yes" xml:space="preserve">
          <source>Right after sending the &lt;code&gt;101&lt;/code&gt; status code, the server can begin speaking the new protocol, performing any additional protocol-specific handshakes as necessary. Effectively, the connection becomes a two-way pipe as soon as the upgraded response is complete, and the request that initiated the upgrade can be completed over the new protocol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e01cad63d1dd1ba3037d248a230a0edc94073240" translate="yes" xml:space="preserve">
          <source>Root CAs manually added to the trust store override and suppress &lt;code&gt;Expect-CT&lt;/code&gt; reports/enforcement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cb54ee36d7572d85675120ff80c6f572b6e22f0" translate="yes" xml:space="preserve">
          <source>Roy T. Fielding
   Information and Computer Science
   University of California, Irvine
   Irvine, CA 92697-3425, USA

   Fax: +1 (949) 824-1715
   EMail: fielding@ics.uci.edu


   James Gettys
   World Wide Web Consortium
   MIT Laboratory for Computer Science
   545 Technology Square
   Cambridge, MA 02139, USA

   Fax: +1 (617) 258 8682
   EMail: jg@w3.org


   Jeffrey C. Mogul
   Western Research Laboratory
   Compaq Computer Corporation
   250 University Avenue
   Palo Alto, California, 94305, USA

   EMail: mogul@wrl.dec.com


   Henrik Frystyk Nielsen
   World Wide Web Consortium
   MIT Laboratory for Computer Science
   545 Technology Square
   Cambridge, MA 02139, USA

   Fax: +1 (617) 258 8682
   EMail: frystyk@w3.org


   Larry Masinter
   Xerox Corporation
   3333 Coyote Hill Road
   Palo Alto, CA 94034, USA

   EMail: masinter@parc.xerox.com 

   Paul J. Leach
   Microsoft Corporation
   1 Microsoft Way
   Redmond, WA 98052, USA

   EMail: paulle@microsoft.com


   Tim Berners-Lee
   Director, World Wide Web Consortium
   MIT Laboratory for Computer Science
   545 Technology Square
   Cambridge, MA 02139, USA

   Fax: +1 (617) 258 8682
   EMail: timbl@w3.org</source>
          <target state="translated">Рой Т.Филдинг Информационно-вычислительный университет Калифорнии,Ирвайн Ирвайн,Калифорния 92697-3425,США Факс:+1 (949)824-1715 EMail:fielding@ics.uci.edu Джеймс Геттис Консорциум MIT Лаборатория компьютерных наук 545 Technology Square Cambridge,MA 02139,USA Факс:+1 (617)258 8682 EMail:jg@w3.org Jeffrey C.Могул Западная исследовательская лаборатория Compaq Computer Corporation 250 University Avenue Palo Alto,California,94305,USA EMail:mogul@wrl.dec.com Henrik Frystyk Nielsen World Wide Web Consortium MIT Laboratory for Computer Science 545 Technology Square Cambridge,MA 02139,USA Факс:+1 (617)258 8682 EMail:frystyk@w3.org Ларри Масинтер Ксерокс Корпорейшн 3333 Coyote Hill Road Palo Alto,CA 94034,USA EMail:masinter@parc.xerox.com Пол Дж.Leach Microsoft Corporation 1 Microsoft Way Redmond,WA 98052,USA EMail:paulle@microsoft.com Tim Berners-Lee Director,World Wide Web Consortium MIT Laboratory for Computer Science 545 Technology Square Cambridge,MA 02139,USA Fax:+1 (617)258 8682 EMail:timbl@w3.org.</target>
        </trans-unit>
        <trans-unit id="155381cbc7c74d0a3b58b7dec055fb15f9da1321" translate="yes" xml:space="preserve">
          <source>Ruby on Rails</source>
          <target state="translated">Рубин на рельсах</target>
        </trans-unit>
        <trans-unit id="78e1790e29a5541b6d02348fc3f45f18445709f4" translate="yes" xml:space="preserve">
          <source>Rule</source>
          <target state="translated">Rule</target>
        </trans-unit>
        <trans-unit id="6e5110b99817ab97188b2fb5c0432e88694c5cb6" translate="yes" xml:space="preserve">
          <source>SAMEORIGIN</source>
          <target state="translated">SAMEORIGIN</target>
        </trans-unit>
        <trans-unit id="051b852d3e1434bf269741e55246b092c01b6d34" translate="yes" xml:space="preserve">
          <source>SOCKS &lt;em&gt;host:port&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Хост&lt;/em&gt; SOCKS &lt;em&gt;: порт&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c1b9bb67b06df044e5b52d49df71e5762865e669" translate="yes" xml:space="preserve">
          <source>SOCKS4 &lt;em&gt;host:port&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Хост&lt;/em&gt; SOCKS4 &lt;em&gt;: порт&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4d498327ded8eb1659cbddc3b98307c46f04e966" translate="yes" xml:space="preserve">
          <source>SOCKS5 &lt;em&gt;host:port&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Хост&lt;/em&gt; SOCKS5 &lt;em&gt;: порт&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="50fce6d02899850101b1865a947b45128c5350eb" translate="yes" xml:space="preserve">
          <source>SVG</source>
          <target state="translated">SVG</target>
        </trans-unit>
        <trans-unit id="b8c3907fd9fbfd04403be1ea246413102cae5626" translate="yes" xml:space="preserve">
          <source>SVG images (vector images)</source>
          <target state="translated">SVG-изображения (векторные изображения)</target>
        </trans-unit>
        <trans-unit id="424dd4565e3b50faee0307759cb623a23456af2c" translate="yes" xml:space="preserve">
          <source>Safari</source>
          <target state="translated">Safari</target>
        </trans-unit>
        <trans-unit id="387d8081b96a43162142a7aed8adc8c5f1c9d7ea" translate="yes" xml:space="preserve">
          <source>Safari 13 on macOS 10.14 (Mojave), treats &lt;code&gt;SameSite=None&lt;/code&gt; and invalid values as &lt;code&gt;Strict&lt;/code&gt;. This is fixed in version 10.15 (Catalina) and later.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23c032140d272311e29c5ca2687a75ad09e37d16" translate="yes" xml:space="preserve">
          <source>Safari 5</source>
          <target state="translated">Сафари 5</target>
        </trans-unit>
        <trans-unit id="cd29382cb0678144991e40cb67f0f26309c178fe" translate="yes" xml:space="preserve">
          <source>Safari UA string</source>
          <target state="translated">строка Safari UA</target>
        </trans-unit>
        <trans-unit id="914ddefb3bd0af36387638e5098a5bfccd9d2330" translate="yes" xml:space="preserve">
          <source>Safari gives two version number, one technical in the Safari/xyz token, one user-friendly in a Version/xyz token</source>
          <target state="translated">Safari даёт два номера версий,один технический в маркере Safari/xyz,один удобный в использовании в версии/xyz маркера.</target>
        </trans-unit>
        <trans-unit id="d2132f3b26f679d8b13ddd4fd2c4b863d1dc41f1" translate="yes" xml:space="preserve">
          <source>Safari gives two version numbers: one technical in the Safari/xyz token, and one user-friendly in a Version/xyz token</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58150bf4bc81cb0b79b4789ca1d37338441d8ddb" translate="yes" xml:space="preserve">
          <source>Safari on iOS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3baae9bdafb1777b0a8c4b42ca014a3e672bf89a" translate="yes" xml:space="preserve">
          <source>Safari, Chrome</source>
          <target state="translated">Сафари,Хром</target>
        </trans-unit>
        <trans-unit id="56f9a9116285e2e1d5aefe02e9bf2490ed9cc219" translate="yes" xml:space="preserve">
          <source>Safari/xyz</source>
          <target state="translated">Safari/xyz</target>
        </trans-unit>
        <trans-unit id="9525ae1781bb71fc767a9bab4b6f299ac5cc8c5d" translate="yes" xml:space="preserve">
          <source>Safe</source>
          <target state="translated">Safe</target>
        </trans-unit>
        <trans-unit id="63a5b93ecc868de623f240bfbb9e61bbbc4b6c6f" translate="yes" xml:space="preserve">
          <source>Safe Methods (RFC 7231)</source>
          <target state="translated">Безопасные методы (RFC 7231)</target>
        </trans-unit>
        <trans-unit id="5a9e598295fe6016bddfb7db200367d70f068e41" translate="yes" xml:space="preserve">
          <source>Same as 199, but indicating a persistent warning</source>
          <target state="translated">То же самое,что и 199,но с постоянным предупреждением.</target>
        </trans-unit>
        <trans-unit id="6fd24bb83d525c0587904be6d9063b5b2f9040cb" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;Cache-Control: no-cache&lt;/code&gt;. Forces caches to submit the request to the origin server for validation before releasing a cached copy.</source>
          <target state="translated">То же, что и &lt;code&gt;Cache-Control: no-cache&lt;/code&gt; . Заставляет кеши отправлять запрос исходному серверу для проверки перед выпуском кэшированной копии.</target>
        </trans-unit>
        <trans-unit id="b26302dd3a3fa55489b0e7f786324aa2ecf9cc5c" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;must-revalidate&lt;/code&gt;, but it only applies to shared caches (e.g., proxies) and is ignored by a private cache.</source>
          <target state="translated">То же, что и &lt;code&gt;must-revalidate&lt;/code&gt; , но применяется только к общим кешам (например, прокси) и игнорируется частным кешем.</target>
        </trans-unit>
        <trans-unit id="987997d0d6bfde96290ace26118012807c52f8f3" translate="yes" xml:space="preserve">
          <source>Same as above, but if both proxies go down, automatically start making direct connections. (In the first example above, Netscape will ask user confirmation about making direct connections; in this case, there is no user intervention.)</source>
          <target state="translated">То же самое,что и выше,но если оба прокси-сервера падают,то автоматически начинают делать прямые соединения.(В первом примере,приведенном выше,Netscape запросит подтверждение пользователя о создании прямого соединения;в этом случае никакого вмешательства пользователя нет).</target>
        </trans-unit>
        <trans-unit id="ccf511a0061f086d955d97477343668d80c1a041" translate="yes" xml:space="preserve">
          <source>Same-Site Cookies</source>
          <target state="translated">Same-Site Cookies</target>
        </trans-unit>
        <trans-unit id="bee25962095abc626fad400750f39f70602bb29d" translate="yes" xml:space="preserve">
          <source>Same-origin policy</source>
          <target state="translated">политика однородности</target>
        </trans-unit>
        <trans-unit id="15119730c37e094987a0f56c39055afbf665b5f7" translate="yes" xml:space="preserve">
          <source>SameSite attribute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dccf8be165cd7e805358a12ead73def5ccd7ead" translate="yes" xml:space="preserve">
          <source>SameSite=Lax Optional</source>
          <target state="translated">SameSite=Lax Optional</target>
        </trans-unit>
        <trans-unit id="0cbd84ce60ee0f574919dfa4e0c7b76c8a94f8da" translate="yes" xml:space="preserve">
          <source>SameSite=Strict</source>
          <target state="translated">SameSite=Strict</target>
        </trans-unit>
        <trans-unit id="873f5bd8ca409a7986de0e5309bd3885c3eab798" translate="yes" xml:space="preserve">
          <source>Sample violation report</source>
          <target state="translated">Образец сообщения о нарушении</target>
        </trans-unit>
        <trans-unit id="da8abd7408a5aa336cbde8d4920f8da276e7b302" translate="yes" xml:space="preserve">
          <source>Samsung Internet</source>
          <target state="translated">Samsung Интернет</target>
        </trans-unit>
        <trans-unit id="3a68f8a275363cb5dc0e990d5ee7f023559d8d8e" translate="yes" xml:space="preserve">
          <source>Say you have a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form&quot;&gt;&amp;lt;form&amp;gt;&lt;/a&gt;&lt;/code&gt; for sending money to another user of a site.</source>
          <target state="translated">Допустим, у вас есть &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form&quot;&gt;&amp;lt;form&amp;gt;&lt;/a&gt;&lt;/code&gt; для отправки денег другому пользователю сайта.</target>
        </trans-unit>
        <trans-unit id="d56d9c1ccf0bc0f33130fff7850c2e5871fca835" translate="yes" xml:space="preserve">
          <source>Say you're creating a new blog post through a site's API:</source>
          <target state="translated">Скажем,вы создаете новый пост в блоге через API сайта:</target>
        </trans-unit>
        <trans-unit id="4604d176d51353df986205d207f767ee691f148b" translate="yes" xml:space="preserve">
          <source>Scalable Vector Graphics</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16e6004376e3926149328610370037caae151443" translate="yes" xml:space="preserve">
          <source>Scalable Vector Graphics (SVG)</source>
          <target state="translated">Масштабируемая векторная графика (SVG)</target>
        </trans-unit>
        <trans-unit id="990897a59f17d4deac662966307b456e376c6c6d" translate="yes" xml:space="preserve">
          <source>Scheme</source>
          <target state="translated">Scheme</target>
        </trans-unit>
        <trans-unit id="59731c699d056f30b458a35ac2e1c7b49f928594" translate="yes" xml:space="preserve">
          <source>Scheme or protocol</source>
          <target state="translated">Схема или протокол</target>
        </trans-unit>
        <trans-unit id="94231fed0cda7afbf08bbfc9ad6ef2692cc59645" translate="yes" xml:space="preserve">
          <source>Scope of cookies</source>
          <target state="translated">Объём печенья</target>
        </trans-unit>
        <trans-unit id="e4fcfa3d448d1651966e714eb22780b10c65cafa" translate="yes" xml:space="preserve">
          <source>Scripts can programatically query information about the feature policy via the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FeaturePolicy&quot;&gt;&lt;code&gt;FeaturePolicy&lt;/code&gt;&lt;/a&gt; object located at either &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document/featurePolicy&quot;&gt;&lt;code&gt;Document.featurePolicy&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/HTMLIFrameElement/featurePolicy&quot;&gt;&lt;code&gt;HTMLIFrameElement.featurePolicy&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c3ca47c0105fab811cf07258c4b16efcfe40f19" translate="yes" xml:space="preserve">
          <source>Scripts inherit the policy of their browsing context, regardless of their origin. That means that top-level scripts inherit the policy from the main document.</source>
          <target state="translated">Сценарии наследуют политику контекста просмотра,независимо от их происхождения.Это означает,что скрипты верхнего уровня наследуют политику от основного документа.</target>
        </trans-unit>
        <trans-unit id="dfc1b60d94fdbf10534406b7762e8b6f2bae9145" translate="yes" xml:space="preserve">
          <source>SeaMonkey on Linux</source>
          <target state="translated">SeaMonkey под Linux</target>
        </trans-unit>
        <trans-unit id="1a3b80710cd0d8991477261291ca25204ce328b9" translate="yes" xml:space="preserve">
          <source>SeaMonkey on Mac</source>
          <target state="translated">СиМонки на Маке</target>
        </trans-unit>
        <trans-unit id="9c623420fdda2ac570aef52b55489d15c0471e7a" translate="yes" xml:space="preserve">
          <source>SeaMonkey on Windows</source>
          <target state="translated">SeaMonkey на Windows</target>
        </trans-unit>
        <trans-unit id="011fd1651703d76cf60df261ca3f1fef579b6047" translate="yes" xml:space="preserve">
          <source>Seamonkey</source>
          <target state="translated">Seamonkey</target>
        </trans-unit>
        <trans-unit id="56f35b4502f3ec45082c5dc335c7795a1a7c26e3" translate="yes" xml:space="preserve">
          <source>Seamonkey/xyz</source>
          <target state="translated">Seamonkey/xyz</target>
        </trans-unit>
        <trans-unit id="1a0d5d5ec95e9687f95d15318308edd8b34ce1fb" translate="yes" xml:space="preserve">
          <source>Search engine robots and other crawlers don't memorize the new, temporary URL. Temporary redirections are also used when creating, updating, or deleting resources, to show temporary progress pages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7eca79871c6f6fc4c47ae676de3882a8679ff650" translate="yes" xml:space="preserve">
          <source>Sec-WebSocket-Accept</source>
          <target state="translated">Sec-WebSocket-Accept</target>
        </trans-unit>
        <trans-unit id="bb412cf0745496a29d28a7ea9c242da8e4682209" translate="yes" xml:space="preserve">
          <source>Seconds from 0 to 59.</source>
          <target state="translated">Секунды от 0 до 59.</target>
        </trans-unit>
        <trans-unit id="306c19b887ddc8fe31f3651e18b08dc05bd8f651" translate="yes" xml:space="preserve">
          <source>Sections &lt;a href=&quot;#section-9.2.1&quot;&gt;9.2.1&lt;/a&gt;, &lt;a href=&quot;#section-9.1.2&quot;&gt;9.1.2&lt;/a&gt;, &lt;a href=&quot;#section-9.6.1&quot;&gt;9.6.1&lt;/a&gt;, &lt;a href=&quot;#section-9.8.3&quot;&gt;9.8.3&lt;/a&gt;, and &lt;a href=&quot;#section-9.9.2&quot;&gt;9.9.2&lt;/a&gt; define various status
   codes used in Multi-Status responses.  This specification does not
   define the meaning of other status codes that could appear in these
   responses.</source>
          <target state="translated">Разделы &lt;a href=&quot;#section-9.2.1&quot;&gt;9.2.1&lt;/a&gt; , &lt;a href=&quot;#section-9.1.2&quot;&gt;9.1.2&lt;/a&gt; , &lt;a href=&quot;#section-9.6.1&quot;&gt;9.6.1&lt;/a&gt; , &lt;a href=&quot;#section-9.8.3&quot;&gt;9.8.3&lt;/a&gt; и &lt;a href=&quot;#section-9.9.2&quot;&gt;9.9.2&lt;/a&gt; определяют различные коды состояния, используемые в ответах с несколькими состояниями. Эта спецификация не определяет значения других кодов состояния, которые могут появляться в этих ответах.</target>
        </trans-unit>
        <trans-unit id="337cbd0bcbed8973159ebf2f991fe72b8939d1af" translate="yes" xml:space="preserve">
          <source>Secure Optional</source>
          <target state="translated">Безопасная опция</target>
        </trans-unit>
        <trans-unit id="b506ddb82a08407cd1fd3be6e6ac4aedfd2cc08e" translate="yes" xml:space="preserve">
          <source>Secure shell</source>
          <target state="translated">Защищенная оболочка</target>
        </trans-unit>
        <trans-unit id="10f90a995bf8c302b255a7f48b587d2f56e50772" translate="yes" xml:space="preserve">
          <source>SecureCorp Inc. wants to disable Microphone and Geolocation APIs in its application. It can do so by delivering the following HTTP response header to define a feature policy:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51fa0a986148790e5e39c3246996e0d27d164ab3" translate="yes" xml:space="preserve">
          <source>SecureCorp Inc. wants to disable Vibration and Geolocation APIs in their application. It can do so by delivering the following HTTP response header to define a feature policy:</source>
          <target state="translated">Компания SecureCorp Inc.хочет отключить API по вибрации и геолокации в своих приложениях.Она может сделать это,доставив следующий заголовок ответа HTTP для определения политики функций:</target>
        </trans-unit>
        <trans-unit id="be1ba146ec015129cdc87a6b6cda0c810fea5fc6" translate="yes" xml:space="preserve">
          <source>SecureCorp Inc. wants to disable the Fullscreen API within all browsing contexts except for its own origin and those whose origin is &lt;code&gt;https://example.com&lt;/code&gt;. It can do so by delivering the following HTTP response header to define a feature policy:</source>
          <target state="translated">SecureCorp Inc. хочет отключить полноэкранный API во всех контекстах просмотра, за исключением его собственного происхождения и тех, чье происхождение - &lt;code&gt;https://example.com&lt;/code&gt; . Это можно сделать, доставив следующий заголовок HTTP-ответа для определения политики функций:</target>
        </trans-unit>
        <trans-unit id="a159b732490e876325bf141a42c816091555db2e" translate="yes" xml:space="preserve">
          <source>SecureCorp Inc. wants to disable the Geolocation API within all browsing contexts except for its own origin and those whose origin is &lt;code&gt;https://example.com&lt;/code&gt;. It can do so by delivering the following HTTP response header to define a feature policy:</source>
          <target state="translated">SecureCorp Inc. хочет отключить API геолокации во всех контекстах просмотра, за исключением его собственного происхождения и тех, чье происхождение - &lt;code&gt;https://example.com&lt;/code&gt; . Это можно сделать, доставив следующий заголовок HTTP-ответа для определения политики функций:</target>
        </trans-unit>
        <trans-unit id="f25ce1b8a399bd8621a57427a20039b4b13935db" translate="yes" xml:space="preserve">
          <source>Security</source>
          <target state="translated">Security</target>
        </trans-unit>
        <trans-unit id="1dfc995fa62a8e188eccdd322ddb4edbdbfea306" translate="yes" xml:space="preserve">
          <source>Security Considerations (RFC 2616)</source>
          <target state="translated">Соображения безопасности (RFC 2616)</target>
        </trans-unit>
        <trans-unit id="3b8fdb84152d7745f62dd2987944fe2bde984275" translate="yes" xml:space="preserve">
          <source>Security Considerations (RFC 7230)</source>
          <target state="translated">Соображения безопасности (RFC 7230)</target>
        </trans-unit>
        <trans-unit id="45b64918d523e29e2ec840fd10d70a111ad02104" translate="yes" xml:space="preserve">
          <source>Security Considerations (RFC 7231)</source>
          <target state="translated">Соображения безопасности (RFC 7231)</target>
        </trans-unit>
        <trans-unit id="d16e94f2024ae95fb74f63d4a34619f9aa28b96f" translate="yes" xml:space="preserve">
          <source>Security Considerations (RFC 7232)</source>
          <target state="translated">Соображения безопасности (RFC 7232)</target>
        </trans-unit>
        <trans-unit id="ed09df6c082dc378c2be105d88f0f7c6b27744b3" translate="yes" xml:space="preserve">
          <source>Security Considerations (RFC 7233)</source>
          <target state="translated">Соображения безопасности (RFC 7233)</target>
        </trans-unit>
        <trans-unit id="634a5436cba76ad187076b3442bdc2183b8a02c5" translate="yes" xml:space="preserve">
          <source>Security Considerations (RFC 7234)</source>
          <target state="translated">Соображения безопасности (RFC 7234)</target>
        </trans-unit>
        <trans-unit id="a2965824c87409925878841116315b190450c0c6" translate="yes" xml:space="preserve">
          <source>Security Considerations (RFC 7235)</source>
          <target state="translated">Соображения безопасности (RFC 7235)</target>
        </trans-unit>
        <trans-unit id="0b0a72a60bc2726643d7f43f73beedf4d9eedacc" translate="yes" xml:space="preserve">
          <source>Security issues</source>
          <target state="translated">Вопросы безопасности</target>
        </trans-unit>
        <trans-unit id="45b4812d50d88e88b1448bd0da22f03283ec4833" translate="yes" xml:space="preserve">
          <source>Security of basic authentication</source>
          <target state="translated">Безопасность базовой аутентификации</target>
        </trans-unit>
        <trans-unit id="1adc2d2821ca3f28bdeda8b691ca76c312913404" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#Preloading_Strict_Transport_Security&quot;&gt;Preloading Strict Transport Security&lt;/a&gt; for details. Not part of the specification.</source>
          <target state="translated">Подробности см. В разделе &lt;a href=&quot;#Preloading_Strict_Transport_Security&quot;&gt;Предварительная загрузка строгой безопасности транспорта&lt;/a&gt; . Не входит в спецификацию.</target>
        </trans-unit>
        <trans-unit id="ef97e870c01e8eaff7ad366cfd23acefa50ec984" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../content-security-policy-report-only&quot;&gt;&lt;code&gt;Content-Security-Policy-Report-Only&lt;/code&gt;&lt;/a&gt; for more information and examples.</source>
          <target state="translated">См. &lt;a href=&quot;../content-security-policy-report-only&quot;&gt; &lt;code&gt;Content-Security-Policy-Report-Only&lt;/code&gt; &lt;/a&gt; для получения дополнительной информации и примеров.</target>
        </trans-unit>
        <trans-unit id="412e3d00c269ec4cc7cc918810af03116020d0cd" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://blogs.msdn.com/b/fiddler/archive/2011/02/10/fiddler-is-better-with-internet-explorer-9.aspx&quot;&gt;Fiddler is better with Internet Explorer 9 (IEInternals' MSDN blog)&lt;/a&gt;</source>
          <target state="translated">См. &lt;a href=&quot;http://blogs.msdn.com/b/fiddler/archive/2011/02/10/fiddler-is-better-with-internet-explorer-9.aspx&quot;&gt;Fiddler лучше с Internet Explorer 9 (блог MSDN IEInternals)&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e8eecda09ccd7acf7d1d416036629474295d0816" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://blogs.msdn.com/b/ieinternals/archive/2009/07/01/ie-and-the-accept-header.aspx&quot;&gt;IE and the Accept Header (IEInternals' MSDN blog)&lt;/a&gt;</source>
          <target state="translated">См. &lt;a href=&quot;http://blogs.msdn.com/b/ieinternals/archive/2009/07/01/ie-and-the-accept-header.aspx&quot;&gt;IE и заголовок Accept (блог MSDN IEInternals)&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="99877507a4f0dfd21502cd193c8da53cfbacbaa8" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://blogs.msdn.com/b/ieinternals/archive/2009/07/01/ie-and-the-accept-header.aspx&quot;&gt;IE and the Accept Header (IEInternals' MSDN blog)&lt;/a&gt;.</source>
          <target state="translated">См. &lt;a href=&quot;http://blogs.msdn.com/b/ieinternals/archive/2009/07/01/ie-and-the-accept-header.aspx&quot;&gt;IE и заголовок Accept (блог MSDN IEInternals)&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="51ff2f1ca438f05f13a6e4821ab222008067c937" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-auth-using-authorization-header.html&quot;&gt;AWS docs&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71f12e2140ada9e4648ccf95079dbf16c469780e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://feature-policy-demos.appspot.com/&quot;&gt;Feature Policy Demos&lt;/a&gt; for example usage of many policies.</source>
          <target state="translated">См. &lt;a href=&quot;http://feature-policy-demos.appspot.com/&quot;&gt;Демонстрационные ролики политик функций&lt;/a&gt; для примера использования многих политик.</target>
        </trans-unit>
        <trans-unit id="8c7daa470035fb38b92a42a6527e06b374c583b4" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://bugzil.la/1045899&quot;&gt;bug 1045899&lt;/a&gt;.</source>
          <target state="translated">См. &lt;a href=&quot;https://bugzil.la/1045899&quot;&gt;Ошибку 1045899&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f53727915d1a1596e99008ed6acb77d2dffba29b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://bugzil.la/1091176&quot;&gt;bug 1091176&lt;/a&gt;.</source>
          <target state="translated">См. &lt;a href=&quot;https://bugzil.la/1091176&quot;&gt;Ошибку 1091176&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d2366d6aff36b6ca45b9473d29a4cbd2a60c64bd" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://bugzil.la/1091177&quot;&gt;bug 1091177&lt;/a&gt;.</source>
          <target state="translated">См. &lt;a href=&quot;https://bugzil.la/1091177&quot;&gt;Ошибку 1091177&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="318d2bb91bfdc58722dc4a7256e4271421ef8e93" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://bugzil.la/1343950&quot;&gt;bug 1343950&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="902701fdeea5da8c62c83a2049c53fd96838fbe5" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://bugzil.la/1457204&quot;&gt;bug 1457204&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87daf564ee99134b1171922777cd6d3e1630eccb" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://bugzil.la/1529337&quot;&gt;bug 1529337&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="476321e1a8bf06a66c253b2ca2611ab0f7550036" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://bugzil.la/1529338&quot;&gt;bug 1529338&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c90dfb9eb96a4f291cdf4c61516336af7ea3f56c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://bugzil.la/230260&quot;&gt;bug 230260&lt;/a&gt;.</source>
          <target state="translated">См. &lt;a href=&quot;https://bugzil.la/230260&quot;&gt;Ошибку 230260&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="34a15d1f8d3edecfef3664e49f7ade5b2cde8cc0" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1158011&quot;&gt;bug 1158011&lt;/a&gt; for implementation status in Firefox.</source>
          <target state="translated">См. &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1158011&quot;&gt;Ошибку 1158011,&lt;/a&gt; чтобы узнать о статусе реализации в Firefox.</target>
        </trans-unit>
        <trans-unit id="9389f0b53643699ff8b3d81c472dfa931ebda59e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=170789&quot;&gt;bug 170789&lt;/a&gt;</source>
          <target state="translated">Смотрите &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=170789&quot;&gt;ошибку 170789&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4c022826199be858adbb57b661f330364fb2d979" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=170789&quot;&gt;bug 170789&lt;/a&gt;&lt;a href=&quot;https://hg.mozilla.org/mozilla-central/file/tip/layout/style/Loader.cpp#l1548&quot;&gt;source&lt;/a&gt;</source>
          <target state="translated">См. &lt;a href=&quot;https://hg.mozilla.org/mozilla-central/file/tip/layout/style/Loader.cpp#l1548&quot;&gt;Источник &lt;/a&gt;&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=170789&quot;&gt;ошибки 170789&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="828f60dc446fd652055bcdb734c92c3074411fad" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=489071&quot;&gt;bug 489071&lt;/a&gt;&lt;a href=&quot;https://hg.mozilla.org/mozilla-central/file/tip/dom/html/HTMLAudioElement.cpp#l81&quot;&gt;source&lt;/a&gt;</source>
          <target state="translated">См. &lt;a href=&quot;https://hg.mozilla.org/mozilla-central/file/tip/dom/html/HTMLAudioElement.cpp#l81&quot;&gt;Источник &lt;/a&gt;&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=489071&quot;&gt;ошибки 489071&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="03fd2bfeff3aff3c7b402bd3707da7d160456f52" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=489071&quot;&gt;bug 489071&lt;/a&gt;&lt;a href=&quot;https://hg.mozilla.org/mozilla-central/file/tip/dom/html/HTMLVideoElement.cpp#l136&quot;&gt;source&lt;/a&gt;</source>
          <target state="translated">См. &lt;a href=&quot;https://hg.mozilla.org/mozilla-central/file/tip/dom/html/HTMLVideoElement.cpp#l136&quot;&gt;Источник &lt;/a&gt;&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=489071&quot;&gt;ошибки 489071&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8ea6c6e1adea411a07c2320171cae96d403fec24" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://crbug.com/801561&quot;&gt;bug 801561&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b575def278021b7035d974c192a9dc908681908" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://crbug.com/898503&quot;&gt;bug 898503&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="395cd81c81660b7de954f329745ea35187280967" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://docs.microsoft.com/en-us/archive/blogs/fiddler/fiddler-and-the-ie9-release-candidate&quot;&gt;Fiddler is better with Internet Explorer 9 (IEInternals' MSDN blog)&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3af50720c1d91d4b3c6841644aebf66d7089956a" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://docs.microsoft.com/en-us/archive/blogs/ieinternals/ie-and-the-accept-header&quot;&gt;IE and the Accept Header (IEInternals' MSDN blog)&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="664ccabb23690aee9178706eae0a0c86aa28b4c8" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://docs.microsoft.com/en-us/archive/blogs/ieinternals/ie-and-the-accept-header&quot;&gt;IE and the Accept Header (IEInternals' MSDN blog)&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58088fac9fc484833ce2100e814b5988abb5c6b1" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://infosec.mozilla.org/guidelines/web_security#Examples_5&quot;&gt;Mozilla Web Security Guidelines&lt;/a&gt; for more examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc498c10fa74da481f3412943c8a08f7e748c919" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://tools.ietf.org/html/rfc6750&quot;&gt;RFC 6750&lt;/a&gt;, bearer tokens to access OAuth 2.0-protected resources</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="444cfb8c4f30e29f1714c2f9e4bf5ebdaa5c09ca" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-10&quot;&gt;Section&amp;nbsp;10 of [RFC7230]&lt;/a&gt;.</source>
          <target state="translated">См. &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-10&quot;&gt;Раздел 10 [RFC7230]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a90058aa35b12499789f50b37ba9f575e8b618e3" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://tools.ietf.org/html/rfc7486&quot;&gt;RFC 7486&lt;/a&gt;, Section 3, &lt;strong&gt;H&lt;/strong&gt;TTP &lt;strong&gt;O&lt;/strong&gt;rigin-&lt;strong&gt;B&lt;/strong&gt;ound &lt;strong&gt;A&lt;/strong&gt;uthentication, digital-signature-based</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adce75b7621f55e2109a1ca207205e78afa08904" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://tools.ietf.org/html/rfc7616&quot;&gt;RFC 7616&lt;/a&gt;, only md5 hashing is supported in Firefox, see &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=472823&quot;&gt;bug 472823&lt;/a&gt; for SHA encryption support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b350575ff9468b7e0a2d607edfffce21bcd5df92" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://tools.ietf.org/html/rfc7617&quot;&gt;RFC 7617&lt;/a&gt;, base64-encoded credentials. More information below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bedeae74dbfe5265c8dfe7958b7b7d8f49527c2" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://tools.ietf.org/html/rfc8120&quot;&gt;RFC 8120&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c48cf1cda37fbc574acc351d711734f071e0dc06" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://w3c.github.io/payment-request/#feature-policy&quot;&gt;Section 16. Feature Policy integration&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cf3b4b99a42a93e5a7a23ffac3b8b47738ee08f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://webkit.org/b/185070&quot;&gt;bug 185070&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="291a54a8499dd01f0491fc82c8048f328a7ee51d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://wiki.mozilla.org/Security/Guidelines/Web_Security#Examples_5&quot;&gt;Mozilla Web Security Guidelines&lt;/a&gt; for more examples.</source>
          <target state="translated">См. Дополнительные примеры в &lt;a href=&quot;https://wiki.mozilla.org/Security/Guidelines/Web_Security#Examples_5&quot;&gt;Mozilla Web Security Guidelines&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7624f91831549a9940eddbb0f3488a2e93402df5" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;proxy_servers_and_tunneling/proxy_auto-configuration_(pac)_file&quot;&gt;Proxy Auto-Configuration (PAC)&lt;/a&gt; for more examples.</source>
          <target state="translated">См. Дополнительные примеры в разделе &lt;a href=&quot;proxy_servers_and_tunneling/proxy_auto-configuration_(pac)_file&quot;&gt;Автоконфигурация прокси (PAC)&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="67373bb92cd7ecbf243edb9d60ad6f00f86a6052" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">См.также</target>
        </trans-unit>
        <trans-unit id="22264972bbdf21536a2e97676872b0fa23492f4e" translate="yes" xml:space="preserve">
          <source>See Bugzilla &lt;a href=&quot;https://bugzil.la/995651&quot;&gt;bug 995651&lt;/a&gt; comment 7.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a20b2ffdf62590791187b6d4381fc1759c9535a" translate="yes" xml:space="preserve">
          <source>See Bugzilla &lt;a href=&quot;https://bugzil.la/995651&quot;&gt;bug 995651&lt;/a&gt;.</source>
          <target state="translated">См. &lt;a href=&quot;https://bugzil.la/995651&quot;&gt;Ошибку&lt;/a&gt; Bugzilla 995651 .</target>
        </trans-unit>
        <trans-unit id="719539956ee13b958d9391b4bf7cb27f3c489c59" translate="yes" xml:space="preserve">
          <source>See Chromium &lt;a href=&quot;https://code.google.com/p/chromium/issues/detail?id=348877&quot;&gt;bug 348877&lt;/a&gt;.</source>
          <target state="translated">См. Chromium &lt;a href=&quot;https://code.google.com/p/chromium/issues/detail?id=348877&quot;&gt;bug 348877&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1fbf5c238b234a09b0bc9cc8a52ac8bd31daa0c5" translate="yes" xml:space="preserve">
          <source>See Chromium &lt;a href=&quot;https://crbug.com/348877&quot;&gt;bug 348877&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e290772b02b3e631f75a0bdaf76532057f004f69" translate="yes" xml:space="preserve">
          <source>See Chromium &lt;a href=&quot;https://crbug.com/611416&quot;&gt;bug 611416&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d8243a2c0e464492c9d563c4f92c56ae3421bcc" translate="yes" xml:space="preserve">
          <source>See also</source>
          <target state="translated">См.также</target>
        </trans-unit>
        <trans-unit id="49924d02e7029d9a0991d61325a81804a8302916" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;../authentication&quot;&gt;HTTP authentication&lt;/a&gt; for examples on how to configure Apache or nginx servers to password protect your site with HTTP basic authentication.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c725ffcd1660304fd5bf29e747aa6869c6d886b" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;../authentication&quot;&gt;HTTP authentication&lt;/a&gt; for examples on how to configure Apache or nginx servers to password protect your site your HTTP basic authentication.</source>
          <target state="translated">См. Также &lt;a href=&quot;../authentication&quot;&gt;HTTP-аутентификацию&lt;/a&gt; для примеров того, как настроить серверы Apache или nginx для защиты паролем вашего сайта и базовой HTTP-аутентификации.</target>
        </trans-unit>
        <trans-unit id="42f531717be60bcfcad04f46fda0152e3247b29b" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;https://en.wikipedia.org/wiki/HTTP_tunnel&quot;&gt;HTTP tunnel article on Wikipedia&lt;/a&gt;.</source>
          <target state="translated">См. Также &lt;a href=&quot;https://en.wikipedia.org/wiki/HTTP_tunnel&quot;&gt;статью о HTTP-туннеле в Википедии&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="068cb5dd6b484ffb5dd93633ccbdee24e3890f6b" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;transfer-encoding&quot;&gt;&lt;code&gt;Transfer-Encoding&lt;/code&gt;&lt;/a&gt; response header for more details on transfer encodings. Note that &lt;code&gt;chunked&lt;/code&gt; is always acceptable for HTTP/1.1 recipients and you don't have to specify &lt;code&gt;&quot;chunked&quot;&lt;/code&gt; using the &lt;code&gt;TE&lt;/code&gt; header. However, it is useful for setting if the client is accepting trailer fields in a chunked transfer coding using the &quot;trailers&quot; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2355891f6471b5e6f9a15ded06e4a709c5b0c70" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;transfer-encoding&quot;&gt;&lt;code&gt;Transfer-Encoding&lt;/code&gt;&lt;/a&gt; response header for more details on transfer encodings. Note that &lt;code&gt;chunked&lt;/code&gt; is always acceptable for HTTP/1.1 recipients and you that don't have to specify &lt;code&gt;&quot;chunked&quot;&lt;/code&gt; using the &lt;code&gt;TE&lt;/code&gt; header. However, it is useful for setting if the client is accepting trailer fields in a chunked transfer coding using the &quot;trailers&quot; value.</source>
          <target state="translated">См. Также заголовок ответа &lt;a href=&quot;transfer-encoding&quot;&gt; &lt;code&gt;Transfer-Encoding&lt;/code&gt; &lt;/a&gt; для получения дополнительных сведений о кодировках передачи. Обратите внимание, что &lt;code&gt;chunked&lt;/code&gt; всегда приемлемо для получателей HTTP / 1.1, и вам не нужно указывать &lt;code&gt;&quot;chunked&quot;&lt;/code&gt; , используя заголовок &lt;code&gt;TE&lt;/code&gt; . Однако это полезно для настройки, если клиент принимает поля трейлера в кодировке передачи по частям, используя значение &amp;laquo;трейлеры&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="d355a7461d6831a917b2782c88db837671b7bc91" translate="yes" xml:space="preserve">
          <source>See also&lt;a href=&quot;../authentication&quot;&gt; HTTP authentication&lt;/a&gt; for examples on how to configure Apache or nginx servers to password protect your site with HTTP basic authentication.</source>
          <target state="translated">См. Также &lt;a href=&quot;../authentication&quot;&gt;HTTP-аутентификацию&lt;/a&gt; для примеров того, как настроить серверы Apache или nginx для защиты паролем вашего сайта с помощью базовой HTTP-аутентификации.</target>
        </trans-unit>
        <trans-unit id="2e0b79753ca98622d76b2e5d4b5394a6888d631c" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../headers/expect&quot;&gt;&lt;code&gt;Expect&lt;/code&gt;&lt;/a&gt; header for more details.</source>
          <target state="translated">Смотрите заголовок &lt;a href=&quot;../headers/expect&quot;&gt; &lt;code&gt;Expect&lt;/code&gt; &lt;/a&gt; для более подробной информации.</target>
        </trans-unit>
        <trans-unit id="2a2d69655ef270db2516384f7be4ebe39aca6629" translate="yes" xml:space="preserve">
          <source>Semi-colon separated list of service definitions in the format of &lt;code&gt;&lt;em&gt;&amp;lt;service-name&amp;gt;&lt;/em&gt;=&quot;&lt;em&gt;&amp;lt;host-name&amp;gt;&lt;/em&gt;:&lt;em&gt;&amp;lt;port-number&amp;gt;&lt;/em&gt;&quot;&lt;/code&gt;.</source>
          <target state="translated">Список определений служб, разделенных точкой с запятой, в формате &lt;code&gt;&lt;em&gt;&amp;lt;service-name&amp;gt;&lt;/em&gt;=&quot;&lt;em&gt;&amp;lt;host-name&amp;gt;&lt;/em&gt;:&lt;em&gt;&amp;lt;port-number&amp;gt;&lt;/em&gt;&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="62f118d4abc9935767d93c466a37b1b6575960d3" translate="yes" xml:space="preserve">
          <source>Send a full URL (stripped from parameters) when performing a a same-origin or cross-origin request. This policy will leak origins and paths from TLS-protected resources to insecure origins. Carefully consider the impact of this setting.</source>
          <target state="translated">Отправка полного URL-адреса (удаленного из параметров)при выполнении однотипного или кросс-ориентированного запроса.Эта политика приведет к утечке оригинала и путей от TLS-защищенных ресурсов к небезопасным оригиналам.Внимательно рассмотрите влияние данной настройки.</target>
        </trans-unit>
        <trans-unit id="e8de0238a1711f4357314e28bd455dfbdc081262" translate="yes" xml:space="preserve">
          <source>Send a full URL (stripped from parameters) when performing a same-origin or cross-origin request. This policy will leak origins and paths from TLS-protected resources to insecure origins. Carefully consider the impact of this setting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="114ceefa2c0a72367781ffc8a33b8cc5edfb2e16" translate="yes" xml:space="preserve">
          <source>Send a full URL when performing a same-origin or cross-origin request.</source>
          <target state="translated">Отправка полного URL-адреса при выполнении однородного или кросс-оригинального запроса.</target>
        </trans-unit>
        <trans-unit id="da546431c50ca7518407c8dd75000ab5f95b3605" translate="yes" xml:space="preserve">
          <source>Send a full URL when performing a same-origin request, but only send the origin of the document for other cases.</source>
          <target state="translated">Отправляйте полный URL-адрес при выполнении запроса того же самого происхождения,но только для других случаев.</target>
        </trans-unit>
        <trans-unit id="aae12fc53d3fc50d9faa00eec22cbfcdb054e1a7" translate="yes" xml:space="preserve">
          <source>Send a full URL when performing a same-origin request, only send the origin when the protocol security level stays the same (HTTPS&amp;rarr;HTTPS), and send no header to a less secure destination (HTTPS&amp;rarr;HTTP).</source>
          <target state="translated">Отправляйте полный URL-адрес при выполнении запроса с одинаковым происхождением, отправляйте источник только при неизменном уровне безопасности протокола (HTTPS &amp;rarr; HTTPS) и не отправляйте заголовок в менее безопасное место назначения (HTTPS &amp;rarr; HTTP).</target>
        </trans-unit>
        <trans-unit id="ca19fda9303b34183c6fc68556b76910f44fdefc" translate="yes" xml:space="preserve">
          <source>Send an HTTP message: HTTP messages (before HTTP/2) are human-readable. With HTTP/2, these simple messages are encapsulated in frames, making them impossible to read directly, but the principle remains the same.</source>
          <target state="translated">Отправить HTTP-сообщение:HTTP-сообщения (до HTTP/2)читаются человеком.В HTTP/2 эти простые сообщения инкапсулируются во фреймы,что делает невозможным их прямое чтение,но принцип остается прежним.</target>
        </trans-unit>
        <trans-unit id="8147dd4d6d30b20114ea16f4a3cf7fc6cf5e2c2a" translate="yes" xml:space="preserve">
          <source>Send an HTTP message: HTTP messages (before HTTP/2) are human-readable. With HTTP/2, these simple messages are encapsulated in frames, making them impossible to read directly, but the principle remains the same. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b5e6da1d334dfb11080a80304a4f099d91dc28f" translate="yes" xml:space="preserve">
          <source>Send cookies from the server to the user agent.</source>
          <target state="translated">Отправка cookie-файлов с сервера агенту пользователя.</target>
        </trans-unit>
        <trans-unit id="5dc95fd29fa92a67c8d108e8bb34078b6014f782" translate="yes" xml:space="preserve">
          <source>Send cookies from the server to the user-agent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c1a7617111c5a0b7fa3ff5d33aa9600f608b1ce" translate="yes" xml:space="preserve">
          <source>Send the following the HTTP header:</source>
          <target state="translated">Отправьте следующий заголовок HTTP:</target>
        </trans-unit>
        <trans-unit id="bebd45056f35b854179a91d9f552f5c2cd11de2a" translate="yes" xml:space="preserve">
          <source>Send the origin, path, and query string when performing a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Same-origin_policy&quot;&gt;same-origin&lt;/a&gt; request, but only send the origin of the document for other cases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f34c728bc0dd859bfaefc074444b78bddd68cafd" translate="yes" xml:space="preserve">
          <source>Send the origin, path, and query string when performing any request, regardless of security.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77f459dc28c0cecc397bf3277fcada068aa8cb8c" translate="yes" xml:space="preserve">
          <source>Send the origin, path, and querystring when performing a same-origin request, only send the origin when the protocol security level stays the same while performing a cross-origin request (HTTPS&amp;rarr;HTTPS), and send no header to any less-secure destinations (HTTPS&amp;rarr;HTTP).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18b9f60168add4dcbe2cfa97830141467c596249" translate="yes" xml:space="preserve">
          <source>Sending a client request</source>
          <target state="translated">Отправка запроса клиента</target>
        </trans-unit>
        <trans-unit id="f042f0da173aa47e7ae908a0354193a6b152284d" translate="yes" xml:space="preserve">
          <source>Sends a signal to the server expressing the client&amp;rsquo;s preference for an encrypted and authenticated response, and that it can successfully handle the &lt;a href=&quot;headers/content-security-policy/upgrade-insecure-requests&quot;&gt;&lt;code&gt;upgrade-insecure-requests&lt;/code&gt;&lt;/a&gt; directive.</source>
          <target state="translated">Посылает серверу сигнал, выражающий предпочтение клиента в отношении зашифрованного и аутентифицированного ответа, и что он может успешно обрабатывать директиву &lt;a href=&quot;headers/content-security-policy/upgrade-insecure-requests&quot;&gt; &lt;code&gt;upgrade-insecure-requests&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="66d200f88cfabb0afda59de995f94f1dd092532b" translate="yes" xml:space="preserve">
          <source>Sends cookies from the server to the user-agent, but has been &lt;strong&gt;obsoleted&lt;/strong&gt;. Use &lt;a href=&quot;headers/set-cookie&quot;&gt;&lt;code&gt;Set-Cookie&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8fbea665ea8f09e42b93cbe3fbddf6b3752bacf" translate="yes" xml:space="preserve">
          <source>Sends reports to the report-uri specified in the header and does still allow clients to connect to the server even if the pinning is violated.</source>
          <target state="translated">Отправляет отчеты в указанный в заголовке отчет-uri и все равно позволяет клиентам подключаться к серверу,даже если пиннинг нарушен.</target>
        </trans-unit>
        <trans-unit id="2c37a6ca7548802cf34b6b1b6a53f217ac82b89c" translate="yes" xml:space="preserve">
          <source>Sent If a cache heuristically chose a freshness lifetime greater than 24 hours and the response's age is greater than 24 hours.</source>
          <target state="translated">Отправлено Если кэш эвристически выбрал свежесть жизни больше,чем 24 часа,а возраст ответа больше,чем 24 часа.</target>
        </trans-unit>
        <trans-unit id="a53b6fa8202e4e843c3e7af369e3f2f101eea847" translate="yes" xml:space="preserve">
          <source>Sent for revalidated conditional requests. Indicates that the cached response is still fresh and can be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c462e8134588f6d1f23e364585abed05a09525c2" translate="yes" xml:space="preserve">
          <source>Sent with non-CORS requests since Fx59, unless they are &lt;code&gt;GET&lt;/code&gt; or &lt;code&gt;HEAD&lt;/code&gt;.</source>
          <target state="translated">Отправляется с запросами, не относящимися к CORS, начиная с Fx59, если только они не &lt;code&gt;GET&lt;/code&gt; или &lt;code&gt;HEAD&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cc03231ded7efb481d5d56e5edae28e683b8d91a" translate="yes" xml:space="preserve">
          <source>Separating identity and location of a resource: The Alt-Svc HTTP header</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbc7c79d44a40669267832b336453bd4fee39146" translate="yes" xml:space="preserve">
          <source>Separating identity and location of a resource: the Alt-Svc HTTP header</source>
          <target state="translated">Разделение идентификационных данных и местоположения ресурса:HTTP-заголовок Alt-Svc</target>
        </trans-unit>
        <trans-unit id="337c903d5597e6947298720f2bc9b6de433ca480" translate="yes" xml:space="preserve">
          <source>Separating identity and location of a resource: the Alt-Svc header</source>
          <target state="translated">Разделение идентификационных данных и местоположения ресурса:заголовок Alt-Svc</target>
        </trans-unit>
        <trans-unit id="cb0cb170d106f8e8d5af1e05bbdbd3a96a7de197" translate="yes" xml:space="preserve">
          <source>Server</source>
          <target state="translated">Server</target>
        </trans-unit>
        <trans-unit id="30407aa127bbc27f6c900a61dc59d209b7261df6" translate="yes" xml:space="preserve">
          <source>Server (RFC 2616)</source>
          <target state="translated">Сервер (RFC 2616)</target>
        </trans-unit>
        <trans-unit id="067d8d46c7af148801a57e53fc8b7dfdc58619b7" translate="yes" xml:space="preserve">
          <source>Server (RFC 7231)</source>
          <target state="translated">Сервер (RFC 7231)</target>
        </trans-unit>
        <trans-unit id="0c9b2a002adf639991e245e57e64715e0102f09f" translate="yes" xml:space="preserve">
          <source>Server Timing&lt;br/&gt;&lt;small&gt;The definition of 'Server-Timing Header Field' in that specification.&lt;/small&gt;</source>
          <target state="translated">Server Timing &lt;br/&gt;&lt;small&gt;Определение поля заголовка Server-Timing в этой спецификации.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="144c703ba42db111e61eac225abbe629b8a298f5" translate="yes" xml:space="preserve">
          <source>Server error responses</source>
          <target state="translated">Ответы об ошибках сервера</target>
        </trans-unit>
        <trans-unit id="cbda107455833d7e22bb88728c50a3a16c6c4ec5" translate="yes" xml:space="preserve">
          <source>Server errors (&lt;code&gt;500&lt;/code&gt;&amp;ndash;&lt;code&gt;599&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4418c7f82dfa6a5eb45c872b1b4c3a9ec7ed04c" translate="yes" xml:space="preserve">
          <source>Server rejected the request because the &lt;code&gt;Content-Length&lt;/code&gt; header field is not defined and the server requires it.</source>
          <target state="translated">Сервер отклонил запрос, поскольку поле заголовка &lt;code&gt;Content-Length&lt;/code&gt; не определено и оно требуется серверу.</target>
        </trans-unit>
        <trans-unit id="223a3cd967a61f2a3071650ced2def4903361d55" translate="yes" xml:space="preserve">
          <source>Server response</source>
          <target state="translated">Ответ сервера</target>
        </trans-unit>
        <trans-unit id="ca286c1254a3056614d73687d3f1ef4b4a44a8ec" translate="yes" xml:space="preserve">
          <source>Server-Side Access Control</source>
          <target state="translated">Контроль доступа с серверной стороны</target>
        </trans-unit>
        <trans-unit id="6792a77076aa3b8284916c74946cf72675363ce8" translate="yes" xml:space="preserve">
          <source>Server-Timing</source>
          <target state="translated">Server-Timing</target>
        </trans-unit>
        <trans-unit id="da6cf01a8ddc149fef30875f9a63615768b06254" translate="yes" xml:space="preserve">
          <source>Server-driven content negotiation</source>
          <target state="translated">Серверные переговоры по содержанию</target>
        </trans-unit>
        <trans-unit id="fd7b73c63b10788b6bed0cef0a6ec6764b254c1d" translate="yes" xml:space="preserve">
          <source>Server-driven negotiation suffers from a few downsides: it doesn't scale well. There is one header per feature used in the negotiation. If you want to use screen size, resolution or other dimensions, a new HTTP header must be created. Sending of the headers must be done on every request. This is not too problematic with few headers, but with the eventual multiplications of them, the message size would lead to a decrease in performance. The more precise headers are sent, the more entropy is sent, allowing for more HTTP fingerprinting and corresponding privacy concern.</source>
          <target state="translated">Серверные переговоры страдают от нескольких недостатков:они плохо масштабируются.В процессе переговоров используется по одному заголовку на каждую функцию.Если вы хотите использовать размер экрана,разрешение или другие измерения,необходимо создать новый заголовок HTTP.Отправка заголовков должна производиться по каждому запросу.Это не слишком проблематично с несколькими заголовками,но при их возможном умножении размер сообщения приведет к снижению производительности.Чем точнее посылаются заголовки,тем больше энтропии посылается,что позволяет больше отпечатков пальцев HTTP и соответствующее беспокойство о конфиденциальности.</target>
        </trans-unit>
        <trans-unit id="280ea515a8b112db582b1e7620e99f0f92dcb530" translate="yes" xml:space="preserve">
          <source>Server-initiated upgrade to TLS</source>
          <target state="translated">Инициированное сервером обновление до TLS</target>
        </trans-unit>
        <trans-unit id="79d9bb2304b19b76e2157ed20e7da4030dc91a26" translate="yes" xml:space="preserve">
          <source>Server-sent events</source>
          <target state="translated">Отправляемые сервером события</target>
        </trans-unit>
        <trans-unit id="67de8093f1524a9bccacf1c09f2b166b248d1aa6" translate="yes" xml:space="preserve">
          <source>Server-side CORS settings</source>
          <target state="translated">Настройки CORS на стороне сервера</target>
        </trans-unit>
        <trans-unit id="8da24e9a194030de05562477bacb0f99c55e7dbd" translate="yes" xml:space="preserve">
          <source>Servers MUST return authorization errors in preference to other
   errors.  This avoids leaking information about protected resources
   (e.g., a client that finds that a hidden resource exists by seeing a
   423 Locked response to an anonymous request to the resource).</source>
          <target state="translated">Серверы ДОЛЖНЫ возвращать ошибки авторизации,отдавая предпочтение другим ошибкам.Это позволяет избежать утечки информации о защищенных ресурсах (например,клиент,который обнаруживает,что скрытый ресурс существует,увидев 423 Запрещенный ответ на анонимный запрос к ресурсу).</target>
        </trans-unit>
        <trans-unit id="f4c682d1668898494c7dc1297fbbd4673d8bc287" translate="yes" xml:space="preserve">
          <source>Servers and/or clients are often located on intranets and hide their true IP address to others. HTTP requests then go through proxies to cross this network barrier. Not all proxies are HTTP proxies. The SOCKS protocol, for example, operates at a lower level. Others, like ftp, can be handled by these proxies.</source>
          <target state="translated">Серверы и/или клиенты часто расположены в интрасетях и скрывают свой истинный IP-адрес для других.HTTP запросы затем проходят через прокси-серверы для пересечения этого сетевого барьера.Не все прокси-серверы являются HTTP прокси-серверами.Протокол SOCKS,например,работает на более низком уровне.Другие,такие как ftp,могут обрабатываться этими прокси.</target>
        </trans-unit>
        <trans-unit id="3a801c2bb279262c7911502691c1290ae71c1452" translate="yes" xml:space="preserve">
          <source>Servers are given more leeway in how they respond to a range request,
   in order to mitigate abuse by malicious (or just greedy) clients.
   (&lt;a href=&quot;#section-3.1&quot;&gt;Section 3.1&lt;/a&gt;)

   A weak validator cannot be used in a 206 response.  (&lt;a href=&quot;#section-4.1&quot;&gt;Section 4.1&lt;/a&gt;)

   The Content-Range header field only has meaning when the status code
   explicitly defines its use.  (&lt;a href=&quot;#section-4.2&quot;&gt;Section 4.2&lt;/a&gt;)

   This specification introduces a Range Unit Registry.  (&lt;a href=&quot;#section-5.1&quot;&gt;Section 5.1&lt;/a&gt;)

   multipart/byteranges can consist of a single part.  (Appendix A)</source>
          <target state="translated">Серверы получают больше свободы действий в том, как они реагируют на запрос диапазона, чтобы уменьшить злоупотребления со стороны злонамеренных (или просто жадных) клиентов. ( &lt;a href=&quot;#section-3.1&quot;&gt;Раздел 3.1&lt;/a&gt; ) Слабый валидатор не может использоваться в ответе 206. ( &lt;a href=&quot;#section-4.1&quot;&gt;Раздел 4.1&lt;/a&gt; ) Поле заголовка Content-Range имеет значение только тогда, когда код состояния явно определяет его использование. ( &lt;a href=&quot;#section-4.2&quot;&gt;Раздел 4.2&lt;/a&gt; ) Эта спецификация вводит Реестр единиц дальности. ( &lt;a href=&quot;#section-5.1&quot;&gt;Раздел 5.1&lt;/a&gt; ) multipart / byteranges может состоять из одной части. (Приложение)</target>
        </trans-unit>
        <trans-unit id="47775be948b90bc8bbdd930ee3d2d72f381c8caa" translate="yes" xml:space="preserve">
          <source>Servers can advertise support for Client Hints using the &lt;code&gt;Accept-CH&lt;/code&gt; header field or an equivalent HTML &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; element with &lt;code&gt;http-equiv&lt;/code&gt; attribute (&lt;a href=&quot;https://httpwg.org/http-extensions/client-hints.html#HTML5&quot;&gt;&lt;cite&gt;[HTML5]&lt;/cite&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42dc7575a6f0aaa611ea0b0ef75203093bd26568" translate="yes" xml:space="preserve">
          <source>Servers can ask the client to remember the set of Client Hints that the server supports for a specified period of time, to enable delivery of Client Hints on subsequent requests to the server&amp;rsquo;s origin (&lt;a href=&quot;https://httpwg.org/http-extensions/client-hints.html#RFC6454&quot;&gt;&lt;cite&gt;[RFC6454]&lt;/cite&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5515ad01f817b62958172ef2562f4725ed4c4587" translate="yes" xml:space="preserve">
          <source>Servers or clients are often located on intranets and hide their true IP address from other computers. HTTP requests then go through proxies to cross this network barrier. Not all proxies are HTTP proxies. The SOCKS protocol, for example, operates at a lower level. Other protocols, like ftp, can be handled by these proxies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40104b8f8c1bae810fb11635b90972e11a6d19a7" translate="yes" xml:space="preserve">
          <source>Servers send the &quot;Retry-After&quot; header field to indicate how long the
   user agent ought to wait before making a follow-up request.  When
   sent with a 503 (Service Unavailable) response, Retry-After indicates
   how long the service is expected to be unavailable to the client.
   When sent with any 3xx (Redirection) response, Retry-After indicates
   the minimum time that the user agent is asked to wait before issuing
   the redirected request.

   The value of this field can be either an HTTP-date or a number of
   seconds to delay after the response is received.

     Retry-After = HTTP-date / delay-seconds

   A delay-seconds value is a non-negative decimal integer, representing
   time in seconds.

     delay-seconds  = 1*DIGIT 

   Two examples of its use are

     Retry-After: Fri, 31 Dec 1999 23:59:59 GMT
     Retry-After: 120

   In the latter example, the delay is 2 minutes.</source>
          <target state="translated">Серверы посылают поле заголовка &quot;Retry-After&quot;,чтобы указать,как долго пользовательский агент должен ждать,прежде чем делать последующий запрос.При отправке с ответом &quot;503 (Service Unavailable)&quot; (Сервис недоступен),в поле &quot;Retry-After&quot; (Повтор-после)указывается,как долго сервис,как ожидается,будет недоступен клиенту.При отправке с любым 3xx (перенаправленным)ответом Retry-After указывает минимальное время,в течение которого пользовательский агент должен подождать перед отправкой перенаправленного запроса.Значение этого поля может быть либо HTTP-датой,либо количеством секунд для задержки после получения ответа.Повтор-после=HTTP-дата/секунды задержки Значение &quot;задержка-секунды&quot; является неотрицательным десятичным числом,представляющим время в секундах.delay-seconds=1*DIGIT (задержка-секунды)Два примера его использования-Повтор-после:Fri,31 Dec 1999 23:59:59 GMT Retry-After:120 В последнем примере задержка составляет 2 минуты.</target>
        </trans-unit>
        <trans-unit id="41025e145e89135a85498ba87ffb1a1e1b47fde8" translate="yes" xml:space="preserve">
          <source>Servers will often produce this status if:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b11bd40d94eed6743e5942032063a30b385e293b" translate="yes" xml:space="preserve">
          <source>Servers will usually have some time-out value beyond which they will
   no longer maintain an inactive connection. Proxy servers might make
   this a higher value since it is likely that the client will be making
   more connections through the same server. The use of persistent
   connections places no requirements on the length (or existence) of
   this time-out for either the client or the server. 

   When a client or server wishes to time-out it SHOULD issue a graceful
   close on the transport connection. Clients and servers SHOULD both
   constantly watch for the other side of the transport close, and
   respond to it as appropriate. If a client or server does not detect
   the other side's close promptly it could cause unnecessary resource
   drain on the network.

   A client, server, or proxy MAY close the transport connection at any
   time. For example, a client might have started to send a new request
   at the same time that the server has decided to close the &quot;idle&quot;
   connection. From the server's point of view, the connection is being
   closed while it was idle, but from the client's point of view, a
   request is in progress.

   This means that clients, servers, and proxies MUST be able to recover
   from asynchronous close events. Client software SHOULD reopen the
   transport connection and retransmit the aborted sequence of requests
   without user interaction so long as the request sequence is
   idempotent (see &lt;a href=&quot;#section-9.1.2&quot;&gt;section 9.1.2&lt;/a&gt;). Non-idempotent methods or sequences
   MUST NOT be automatically retried, although user agents MAY offer a
   human operator the choice of retrying the request(s). Confirmation by
   user-agent software with semantic understanding of the application
   MAY substitute for user confirmation. The automatic retry SHOULD NOT
   be repeated if the second sequence of requests fails.

   Servers SHOULD always respond to at least one request per connection,
   if at all possible. Servers SHOULD NOT close a connection in the
   middle of transmitting a response, unless a network or client failure
   is suspected.

   Clients that use persistent connections SHOULD limit the number of
   simultaneous connections that they maintain to a given server. A
   single-user client SHOULD NOT maintain more than 2 connections with
   any server or proxy. A proxy SHOULD use up to 2*N connections to
   another server or proxy, where N is the number of simultaneously
   active users. These guidelines are intended to improve HTTP response
   times and avoid congestion.</source>
          <target state="translated">Серверы обычно имеют некоторое время ожидания, по истечении которого они больше не будут поддерживать неактивное соединение. Прокси-серверы могут сделать это значение более высоким, поскольку вполне вероятно, что клиент будет устанавливать больше подключений через один и тот же сервер. Использование постоянных соединений не предъявляет никаких требований к длине (или существованию) этого тайм-аута ни для клиента, ни для сервера. Когда клиент или сервер желает истечь тайм-аут, он ДОЛЖЕН выполнить плавное закрытие транспортного соединения. И клиенты, и серверы ДОЛЖНЫ постоянно следить за закрытием другой стороны транспорта и реагировать на это соответствующим образом. Если клиент или сервер не обнаруживает моментально закрытие другой стороны, это может вызвать ненужную утечку ресурсов в сети. Клиент, сервер,или прокси МОЖЕТ закрыть транспортное соединение в любое время. Например, клиент мог начать отправлять новый запрос в то же время, когда сервер решил закрыть &amp;laquo;простаивающее&amp;raquo; соединение. С точки зрения сервера, соединение закрывается, пока оно простаивает, но с точки зрения клиента запрос выполняется. Это означает, что клиенты, серверы и прокси-серверы ДОЛЖНЫ иметь возможность восстановления после асинхронных событий закрытия. Клиентскому программному обеспечению СЛЕДУЕТ повторно открыть транспортное соединение и повторно передать прерванную последовательность запросов без взаимодействия с пользователем, пока последовательность запросов идемпотентна (см.С точки зрения, соединение закрывается, пока оно не использовалось, но с точки зрения клиента, запрос выполняется. Это означает, что клиенты, серверы и прокси-серверы ДОЛЖНЫ иметь возможность восстановления после асинхронных событий закрытия. Клиентскому программному обеспечению СЛЕДУЕТ повторно открыть транспортное соединение и повторно передать прерванную последовательность запросов без взаимодействия с пользователем, пока последовательность запросов идемпотентна (см.С точки зрения, соединение закрывается, пока оно не использовалось, но с точки зрения клиента, запрос выполняется. Это означает, что клиенты, серверы и прокси-серверы ДОЛЖНЫ иметь возможность восстановления после асинхронных событий закрытия. Клиентскому программному обеспечению СЛЕДУЕТ повторно открыть транспортное соединение и повторно передать прерванную последовательность запросов без взаимодействия с пользователем, пока последовательность запросов идемпотентна (см.Клиентскому программному обеспечению СЛЕДУЕТ повторно открыть транспортное соединение и повторно передать прерванную последовательность запросов без взаимодействия с пользователем, пока последовательность запросов идемпотентна (см.Клиентскому программному обеспечению СЛЕДУЕТ повторно открыть транспортное соединение и повторно передать прерванную последовательность запросов без взаимодействия с пользователем, пока последовательность запросов идемпотентна (см.&lt;a href=&quot;#section-9.1.2&quot;&gt;раздел 9.1.2&lt;/a&gt;). Неидемпотентные методы или последовательности НЕ ДОЛЖНЫ повторяться автоматически, хотя пользовательские агенты МОГУТ предлагать оператору-человеку возможность повторить попытку запроса (ов). Подтверждение программным обеспечением агента пользователя с семантическим пониманием приложения МОЖЕТ заменить подтверждение пользователя. Автоматический повтор НЕ ДОЛЖЕН повторяться, если вторая последовательность запросов не удалась. Серверы ДОЛЖНЫ всегда отвечать хотя бы на один запрос на каждое соединение, если это вообще возможно. Серверам НЕ СЛЕДУЕТ закрывать соединение в середине передачи ответа, если только не предполагается сбой сети или клиента. Клиенты, использующие постоянные соединения, ДОЛЖНЫ ограничивать количество одновременных соединений, которые они поддерживают с данным сервером. Однопользовательскому клиенту НЕ СЛЕДУЕТ поддерживать более двух соединений с любым сервером или прокси.Прокси-сервер ДОЛЖЕН использовать до 2 * N подключений к другому серверу или прокси, где N - количество одновременно активных пользователей. Эти рекомендации предназначены для уменьшения времени ответа HTTP и предотвращения перегрузки.</target>
        </trans-unit>
        <trans-unit id="7a64cc38406e1e6e386cf9a33c8c4a86744f295f" translate="yes" xml:space="preserve">
          <source>Servers will usually have some timeout value beyond which they will
   no longer maintain an inactive connection.  Proxy servers might make
   this a higher value since it is likely that the client will be making
   more connections through the same proxy server.  The use of
   persistent connections places no requirements on the length (or
   existence) of this timeout for either the client or the server.

   A client or server that wishes to time out SHOULD issue a graceful
   close on the connection.  Implementations SHOULD constantly monitor
   open connections for a received closure signal and respond to it as
   appropriate, since prompt closure of both sides of a connection
   enables allocated system resources to be reclaimed. 

   A client, server, or proxy MAY close the transport connection at any
   time.  For example, a client might have started to send a new request
   at the same time that the server has decided to close the &quot;idle&quot;
   connection.  From the server's point of view, the connection is being
   closed while it was idle, but from the client's point of view, a
   request is in progress.

   A server SHOULD sustain persistent connections, when possible, and
   allow the underlying transport's flow-control mechanisms to resolve
   temporary overloads, rather than terminate connections with the
   expectation that clients will retry.  The latter technique can
   exacerbate network congestion.

   A client sending a message body SHOULD monitor the network connection
   for an error response while it is transmitting the request.  If the
   client sees a response that indicates the server does not wish to
   receive the message body and is closing the connection, the client
   SHOULD immediately cease transmitting the body and close its side of
   the connection.</source>
          <target state="translated">Серверы обычно имеют некоторое значение таймаута,за пределами которого они больше не будут поддерживать неактивное соединение.Прокси-серверы могут сделать это более высоким значением,так как вполне вероятно,что клиент будет делать больше подключений через один и тот же прокси-сервер.Использование постоянных соединений не предъявляет никаких требований к продолжительности (или существованию)этого таймаута ни для клиента,ни для сервера.Клиент или сервер,который хочет установить тайм-аут,ДОЛЖЕНА ВЫСТАНОВИТЬ изящное закрытие соединения.Введение SHOULD постоянно отслеживает открытые соединения для получения сигнала о закрытии и отвечает на него по мере необходимости,так как быстрое закрытие обеих сторон соединения позволяет восстановить выделенные системные ресурсы.Клиент,сервер или прокси-сервер МОЖЕТ закрыть транспортное соединение в любое время.Например,клиент мог начать посылать новый запрос одновременно с тем,что сервер решил закрыть &quot;простаивающее&quot; соединение.С точки зрения сервера,соединение закрывается в то время,когда оно было простаивающим,но с точки зрения клиента,запрос выполняется.Сервер ДОЛЖЕН поддерживать постоянные соединения,когда это возможно,и позволять основным механизмам управления потоком транспорта разрешать временные перегрузки,а не прерывать соединения с ожиданием,что клиенты будут повторять попытку.Последняя техника может усугубить перегрузку сети.Клиент,отправляющий тело сообщения,ДОЛЖЕН отслеживать сетевое соединение на предмет получения ответа об ошибке во время передачи запроса.Если клиент видит ответ,указывающий на то,что сервер не хочет принимать тело сообщения и закрывает соединение,то клиент ДОЛЖЕН немедленно прекратить передачу тела и закрыть свою сторону соединения.</target>
        </trans-unit>
        <trans-unit id="f5124c99e159587ebe507b56369f65760748f150" translate="yes" xml:space="preserve">
          <source>Serves as a fallback for the other &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Fetch_directive&quot;&gt;fetch directives&lt;/a&gt;.</source>
          <target state="translated">Служит резервным вариантом для других &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Fetch_directive&quot;&gt;директив выборки&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c993592eb184660ed131503e2e6e4c8ebc6710fd" translate="yes" xml:space="preserve">
          <source>Service worker registrations (for each service worker registration, execute &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerRegistration/unregister&quot;&gt;&lt;code&gt;ServiceWorkerRegistration.unregister&lt;/code&gt;&lt;/a&gt;),</source>
          <target state="translated">Регистрации сервис-воркеров (для каждой регистрации сервис- &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerRegistration/unregister&quot;&gt; &lt;code&gt;ServiceWorkerRegistration.unregister&lt;/code&gt; &lt;/a&gt; выполните ServiceWorkerRegistration.unregister ),</target>
        </trans-unit>
        <trans-unit id="53dfe70871da64dc7cc73082fd91fc0d67395965" translate="yes" xml:space="preserve">
          <source>Serving different Web pages or services to different browsers is usually a bad idea. The Web is meant to be accessible to everyone, regardless of which browser or device they're using. There are ways to develop your website to progressively enhance itself based on the availability of features rather than by targeting specific browsers.</source>
          <target state="translated">Обслуживание различных Web-страниц или сервисов в разных браузерах обычно плохая идея.Сеть должна быть доступна каждому,независимо от того,каким браузером или устройством он пользуется.Есть способы развивать свой веб-сайт,чтобы он постепенно совершенствовался,основываясь на доступности функций,а не на нацеленности на конкретные браузеры.</target>
        </trans-unit>
        <trans-unit id="61a0eba4a8c4bcb092cc3e5ed3ca481b331e2273" translate="yes" xml:space="preserve">
          <source>Servo: &lt;a href=&quot;https://github.com/servo/servo/issues/13283&quot;&gt;Issue 13283&lt;/a&gt;</source>
          <target state="translated">Сервопривод: &lt;a href=&quot;https://github.com/servo/servo/issues/13283&quot;&gt;ошибка 13283.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f7f1997c6cd1aa051279675742272a956e7db628" translate="yes" xml:space="preserve">
          <source>Session</source>
          <target state="translated">Session</target>
        </trans-unit>
        <trans-unit id="8fa2a80f7a4a01bb4a4049a65f2e8ab40639ca19" translate="yes" xml:space="preserve">
          <source>Session cookie</source>
          <target state="translated">сессионный cookie-файл</target>
        </trans-unit>
        <trans-unit id="a5de7556cf7bd4f9692d5121762b926c377ffd0d" translate="yes" xml:space="preserve">
          <source>Session cookies</source>
          <target state="translated">сессионные cookie-файлы</target>
        </trans-unit>
        <trans-unit id="c22669a0c2011d70ebc816a2c115645d58f8ea3a" translate="yes" xml:space="preserve">
          <source>Session cookies will get removed when the client is shut down. They don't specify the &lt;code&gt;Expires&lt;/code&gt; or &lt;code&gt;Max-Age&lt;/code&gt; directives. Note that web browser have often enabled session restoring.</source>
          <target state="translated">Сеансовые куки будут удалены при завершении работы клиента. В них не указаны директивы &lt;code&gt;Expires&lt;/code&gt; или &lt;code&gt;Max-Age&lt;/code&gt; . Обратите внимание, что веб-браузер часто поддерживает восстановление сеанса.</target>
        </trans-unit>
        <trans-unit id="0383ce6cf519828e20e353eff1d36e08f759636b" translate="yes" xml:space="preserve">
          <source>Session hijacking and XSS</source>
          <target state="translated">Перехват сеанса и XSS</target>
        </trans-unit>
        <trans-unit id="4d1a0ebf42ea7726af9fc0d443c4219ad98f0b66" translate="yes" xml:space="preserve">
          <source>Session management</source>
          <target state="translated">Управление сеансом</target>
        </trans-unit>
        <trans-unit id="74d939bd156bb2a40d27c5c067b218718f567be0" translate="yes" xml:space="preserve">
          <source>Set by the &lt;em&gt;client&lt;/em&gt; to indicate &quot;do not use the network&quot; for the response. The cache should either respond using a stored response, or respond with a &lt;a href=&quot;../status/504&quot;&gt;&lt;code&gt;504&lt;/code&gt;&lt;/a&gt; status code. Conditional headers such as &lt;code&gt;If-None-Match&lt;/code&gt; should not be set. There is no effect if &lt;code&gt;only-if-cached&lt;/code&gt; is set by a server as part of a response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da18d02d9a384ec87b2924aa70bb99b190dfa12c" translate="yes" xml:space="preserve">
          <source>Set-Cookie</source>
          <target state="translated">Set-Cookie</target>
        </trans-unit>
        <trans-unit id="e9cace35e90b037b0140e79e5bff9090459aef6c" translate="yes" xml:space="preserve">
          <source>Set-Cookie2</source>
          <target state="translated">Set-Cookie2</target>
        </trans-unit>
        <trans-unit id="ca4cfc1c5db67629db097698126f262a8ff0efa4" translate="yes" xml:space="preserve">
          <source>Setting a proxy for a specific protocol</source>
          <target state="translated">Установка прокси для определенного протокола</target>
        </trans-unit>
        <trans-unit id="0a19969b97beb1798bb95f65f7732ae561c43ab8" translate="yes" xml:space="preserve">
          <source>Setting this directive to &lt;code&gt;'none'&lt;/code&gt; is similar to &lt;a href=&quot;../x-frame-options&quot;&gt;&lt;code&gt;X-Frame-Options&lt;/code&gt;&lt;/a&gt;&lt;code&gt;: DENY&lt;/code&gt; (which is also supported in older browers).</source>
          <target state="translated">Установка этой директивы в &lt;code&gt;'none'&lt;/code&gt; аналогична &lt;a href=&quot;../x-frame-options&quot;&gt; &lt;code&gt;X-Frame-Options&lt;/code&gt; &lt;/a&gt; &lt;code&gt;: DENY&lt;/code&gt; (которая также поддерживается в старых браузерах).</target>
        </trans-unit>
        <trans-unit id="f20afb2ced2db52eedb85addd06480f621f4772b" translate="yes" xml:space="preserve">
          <source>Setting this directive to &lt;code&gt;'none'&lt;/code&gt; is similar to &lt;a href=&quot;../x-frame-options&quot;&gt;&lt;code&gt;X-Frame-Options&lt;/code&gt;&lt;/a&gt;&lt;code&gt;: deny&lt;/code&gt; (which is also supported in older browsers).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e21c065049ff05b60c6a9ac39caff520e04569d8" translate="yes" xml:space="preserve">
          <source>Setting up your webserver to include the HPKP header</source>
          <target state="translated">Настройка Вашего веб-сервера на включение заголовка HPKP</target>
        </trans-unit>
        <trans-unit id="32a560a86e92c09f3625944269ea6a7159c1e2c8" translate="yes" xml:space="preserve">
          <source>Several HTTP headers, called conditional headers, lead to conditional requests. These are:</source>
          <target state="translated">Несколько заголовков HTTP,называемых условными заголовками,ведут к условным запросам.Вот эти:</target>
        </trans-unit>
        <trans-unit id="329eb594c20733b1f610e7cab58a3336e04332ce" translate="yes" xml:space="preserve">
          <source>Several features can be controlled at the same time by sending the HTTP header with a semicolon-separated list of policy directives, or by sending a separate header for each policy.</source>
          <target state="translated">Несколько функций можно контролировать одновременно,посылая HTTP-заголовок с разделенным точкой с запятой списком директив политики,или посылая отдельный заголовок для каждой политики.</target>
        </trans-unit>
        <trans-unit id="81acc188ecb44fe2b0ca66c680ba970231e66c83" translate="yes" xml:space="preserve">
          <source>Shared proxy caches</source>
          <target state="translated">Общие кэши прокси-серверов</target>
        </trans-unit>
        <trans-unit id="78f6156a2ead82a3ca398616fa6f9e17dfb530a7" translate="yes" xml:space="preserve">
          <source>Short-lived connections</source>
          <target state="translated">Кратковременные соединения</target>
        </trans-unit>
        <trans-unit id="f47fe4cbc4ecdf7b89058813c34af535ace87ae1" translate="yes" xml:space="preserve">
          <source>Short-lived connections have two major hitches: the time taken to establish a new connection is significant, and performance of the underlying TCP connection gets better only when this connection has been in use for some time (warm connection). To ease these problems, the concept of a &lt;em&gt;persistent connection&lt;/em&gt; has been designed, even prior to HTTP/1.1. Alternatively this may be called a &lt;em&gt;keep-alive connection&lt;/em&gt;.</source>
          <target state="translated">Недолговечные соединения имеют два основных недостатка: время, необходимое для установления нового соединения, является значительным, а производительность базового TCP-соединения улучшается только тогда, когда это соединение используется в течение некоторого времени (теплое соединение). Чтобы облегчить эти проблемы, даже до HTTP / 1.1 была разработана концепция &lt;em&gt;постоянного соединения&lt;/em&gt; . В качестве альтернативы это можно назвать &lt;em&gt;поддерживающим соединением&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="c537d8356fd7f996e8605aa03e51f47390d4d7a8" translate="yes" xml:space="preserve">
          <source>Shows and explains the flow of a usual HTTP session.</source>
          <target state="translated">Показывает и объясняет движение обычного сеанса HTTP.</target>
        </trans-unit>
        <trans-unit id="b6521e0115890c1ed8f83a94f59102ecaefa0222" translate="yes" xml:space="preserve">
          <source>Sign out of web site</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41efbf8a181438e8fc19ee9def30f3ef38ba127a" translate="yes" xml:space="preserve">
          <source>Sign-out</source>
          <target state="translated">Sign-out</target>
        </trans-unit>
        <trans-unit id="49ea2b0538dc5d77e0f7d9a719fad7e94390af26" translate="yes" xml:space="preserve">
          <source>Signals to the user agent that compliance with the Certificate Transparency policy should be enforced (rather than only reporting compliance) and that the user agent should refuse future connections that violate its Certificate Transparency policy.</source>
          <target state="translated">Сигналы пользователю-агенту о том,что соблюдение политики прозрачности сертификатов должно быть принудительным (а не только отчетность о соблюдении)и что пользователь-агент должен отказаться от будущих подключений,нарушающих его политику прозрачности сертификатов.</target>
        </trans-unit>
        <trans-unit id="d8e8cee5872465deb3080e8822404564c2c7c96c" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;headers/if-match&quot;&gt;&lt;code&gt;If-Match&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;headers/if-unmodified-since&quot;&gt;&lt;code&gt;If-Unmodified-Since&lt;/code&gt;&lt;/a&gt;, but can have only one single etag, or one date. If it fails, the range request fails, and instead of a &lt;a href=&quot;status/206&quot;&gt;&lt;code&gt;206&lt;/code&gt;&lt;/a&gt;&lt;code&gt;Partial Content&lt;/code&gt; response, a &lt;a href=&quot;status/200&quot;&gt;&lt;code&gt;200&lt;/code&gt;&lt;/a&gt;&lt;code&gt;OK&lt;/code&gt; is sent with the complete resource.</source>
          <target state="translated">Подобно &lt;a href=&quot;headers/if-match&quot;&gt; &lt;code&gt;If-Match&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;headers/if-unmodified-since&quot;&gt; &lt;code&gt;If-Unmodified-Since&lt;/code&gt; &lt;/a&gt; , но может иметь только один отдельный тег или одну дату. Если это не удается, запрос диапазона не выполняется, и вместо ответа &lt;a href=&quot;status/206&quot;&gt; &lt;code&gt;206&lt;/code&gt; &lt;/a&gt; &lt;code&gt;Partial Content&lt;/code&gt; отправляется &lt;a href=&quot;status/200&quot;&gt; &lt;code&gt;200&lt;/code&gt; &lt;/a&gt; &lt;code&gt;OK&lt;/code&gt; с полным ресурсом.</target>
        </trans-unit>
        <trans-unit id="e46dbd8cd6429badd706773975b6b00d0b709805" translate="yes" xml:space="preserve">
          <source>Similar to the HTTP header, several features can be controlled at the same time by specifying a semicolon-separated list of policy directives.</source>
          <target state="translated">Подобно заголовку HTTP,несколькими функциями можно управлять одновременно,указывая разделенный точкой с запятой список директив политики.</target>
        </trans-unit>
        <trans-unit id="1d1d80cfcc4676e37337cc4f5d6a84bedb5462d2" translate="yes" xml:space="preserve">
          <source>Similarly, for binary documents without a specific or known subtype, &lt;code&gt;application/octet-stream&lt;/code&gt; should be used.</source>
          <target state="translated">Точно так же для двоичных документов без определенного или известного подтипа следует использовать &lt;code&gt;application/octet-stream&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b0a5bca6adaca9564e0b94bdaad3a91197512ef9" translate="yes" xml:space="preserve">
          <source>Similarly, the link element can be used to resolve hostnames without providing a complete URL, but only, by preceding the hostname with two slashes:</source>
          <target state="translated">Аналогичным образом,элемент link может быть использован для разрешения имен хостов без указания полного URL,а только путем предварения имени хоста двумя косыми чертами:</target>
        </trans-unit>
        <trans-unit id="3b3bdb2d208400327aac2b623589a8a18ecdfc8d" translate="yes" xml:space="preserve">
          <source>Simple cross-site requests</source>
          <target state="translated">Простые межсайтовые запросы</target>
        </trans-unit>
        <trans-unit id="2c183543e074fb1a91056f30dcfaf12aabc8df68" translate="yes" xml:space="preserve">
          <source>Simple requests</source>
          <target state="translated">Простые запросы</target>
        </trans-unit>
        <trans-unit id="8093dd58a33027a1dce2c902fa777fafd90c9a4e" translate="yes" xml:space="preserve">
          <source>Simple text/plain data</source>
          <target state="translated">Простой текст/простые данные</target>
        </trans-unit>
        <trans-unit id="0edf1fa8008779642e22dc0f34ef947c356e021c" translate="yes" xml:space="preserve">
          <source>Simple text/plain data. Note the use of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/percent-encoding&quot;&gt;percent-encoding&lt;/a&gt; (URL-encoding) for the quote and space characters. Also, for CSV data (MIME type &quot;text/csv&quot;), percent-encoding is needed to preserve the line endings that delimit rows of the spreadsheet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28ea2b82bad9055a11bf6b84d9f7527a0f5e40f3" translate="yes" xml:space="preserve">
          <source>Simply put, the origin making the request does not match any of the origins permitted by the &lt;a href=&quot;../../headers/access-control-allow-origin&quot;&gt;&lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt;&lt;/a&gt; header.</source>
          <target state="translated">Проще говоря, источник, отправляющий запрос, не соответствует ни одному из источников, разрешенных заголовком &lt;a href=&quot;../../headers/access-control-allow-origin&quot;&gt; &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="113900181c81db75435ae6243c0c7016d22cda73" translate="yes" xml:space="preserve">
          <source>Since 2005, the set of APIs available to Web pages greatly increased and several of these APIs created extensions, mostly new specific HTTP headers, to the HTTP protocol for specific purposes:</source>
          <target state="translated">С 2005 года значительно увеличился набор API,доступных для Web-страниц,и некоторые из этих API создали расширения,в основном новые специфические HTTP-заголовки,к протоколу HTTP для специфических целей:</target>
        </trans-unit>
        <trans-unit id="38b3000a242aaf507c808ecf6b19d0bcb64c3ad2" translate="yes" xml:space="preserve">
          <source>Since HTTP/1.0, different types of content can be transmitted. This article explains how this is accomplished using the &lt;a href=&quot;headers/content-type&quot;&gt;&lt;code&gt;Content-Type&lt;/code&gt;&lt;/a&gt; header and the MIME standard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99fb1a5dd25ea500036c8caefba3949cfbcb90c0" translate="yes" xml:space="preserve">
          <source>Since HTTP/1.0, different types of content can be transmitted. This article explains how this is done using the &lt;a href=&quot;headers/content-type&quot;&gt;&lt;code&gt;Content-Type&lt;/code&gt;&lt;/a&gt; header and the MIME standard.</source>
          <target state="translated">Начиная с HTTP / 1.0, можно передавать различные типы контента. В этой статье объясняется, как это делается с помощью заголовка &lt;a href=&quot;headers/content-type&quot;&gt; &lt;code&gt;Content-Type&lt;/code&gt; &lt;/a&gt; и стандарта MIME.</target>
        </trans-unit>
        <trans-unit id="6a1c0077fb81ec47c18951a65d81853f40257980" translate="yes" xml:space="preserve">
          <source>Since all HTTP entities are represented in HTTP messages as sequences
   of bytes, the concept of a byte range is meaningful for any HTTP
   entity. (However, not all clients and servers need to support byte-
   range operations.)

   Byte range specifications in HTTP apply to the sequence of bytes in
   the entity-body (not necessarily the same as the message-body).

   A byte range operation MAY specify a single range of bytes, or a set
   of ranges within a single entity.

       ranges-specifier = byte-ranges-specifier
       byte-ranges-specifier = bytes-unit &quot;=&quot; byte-range-set
       byte-range-set  = 1#( byte-range-spec | suffix-byte-range-spec )
       byte-range-spec = first-byte-pos &quot;-&quot; [last-byte-pos]
       first-byte-pos  = 1*DIGIT
       last-byte-pos   = 1*DIGIT

   The first-byte-pos value in a byte-range-spec gives the byte-offset
   of the first byte in a range. The last-byte-pos value gives the
   byte-offset of the last byte in the range; that is, the byte
   positions specified are inclusive. Byte offsets start at zero.

   If the last-byte-pos value is present, it MUST be greater than or
   equal to the first-byte-pos in that byte-range-spec, or the byte-
   range-spec is syntactically invalid. The recipient of a byte-range-
   set that includes one or more syntactically invalid byte-range-spec
   values MUST ignore the header field that includes that byte-range-
   set.

   If the last-byte-pos value is absent, or if the value is greater than
   or equal to the current length of the entity-body, last-byte-pos is
   taken to be equal to one less than the current length of the entity-
   body in bytes.

   By its choice of last-byte-pos, a client can limit the number of
   bytes retrieved without knowing the size of the entity. 

       suffix-byte-range-spec = &quot;-&quot; suffix-length
       suffix-length = 1*DIGIT

   A suffix-byte-range-spec is used to specify the suffix of the
   entity-body, of a length given by the suffix-length value. (That is,
   this form specifies the last N bytes of an entity-body.) If the
   entity is shorter than the specified suffix-length, the entire
   entity-body is used.

   If a syntactically valid byte-range-set includes at least one byte-
   range-spec whose first-byte-pos is less than the current length of
   the entity-body, or at least one suffix-byte-range-spec with a non-
   zero suffix-length, then the byte-range-set is satisfiable.
   Otherwise, the byte-range-set is unsatisfiable. If the byte-range-set
   is unsatisfiable, the server SHOULD return a response with a status
   of 416 (Requested range not satisfiable). Otherwise, the server
   SHOULD return a response with a status of 206 (Partial Content)
   containing the satisfiable ranges of the entity-body.

   Examples of byte-ranges-specifier values (assuming an entity-body of
   length 10000):

      - The first 500 bytes (byte offsets 0-499, inclusive):  bytes=0-
        499

      - The second 500 bytes (byte offsets 500-999, inclusive):
        bytes=500-999

      - The final 500 bytes (byte offsets 9500-9999, inclusive):
        bytes=-500

      - Or bytes=9500-

      - The first and last bytes only (bytes 0 and 9999):  bytes=0-0,-1

      - Several legal but not canonical specifications of the second 500
        bytes (byte offsets 500-999, inclusive):
         bytes=500-600,601-999
         bytes=500-700,601-999</source>
          <target state="translated">Поскольку все сущности HTTP представлены в сообщениях HTTP в виде последовательностей байт,концепция диапазона байт имеет смысл для любого сущности HTTP.(Однако,не все клиенты и серверы должны поддерживать операции с диапазоном байт).Спецификации диапазона байт в HTTP применимы к последовательности байт в сущности (не обязательно такой же,как в сообщении).Операция &quot;Диапазон байт&quot; MAY определяет один диапазон байт или набор диапазонов внутри одного тела.ranges-specifier=байт-диапазон байт-диапазон байт-диапазон байт-диапазон байт-диапазон байт-диапазон байт=1#(byte-range-spec | suffix-byte-range-spec)байт-диапазон байт-диапазон байт-spec=first байт-пост &quot;-&quot; [last-byte-pos]first-byte-pos=1*DIGIT last-byte-pos=1*DIGIT Значение первого байта-поста в байт-диапазоне-spec дает байт-офсет первого байта в диапазоне.Значение последнего байта-пос дает байтовое смещение последнего байта в диапазоне,т.е.указанные позиции байтов являются инклюзивными.Смещение байта начинается с нуля.Если присутствует значение последнего байта-поста,то оно ДОЛЖНО быть больше или равно первому байту-посту в этом байт-диапазоне,или байт-диапазоне-пост синтаксически недействителен.Получатель набора байт-диапазона,включающего одно или более синтаксически недопустимых значений байт-диапазона-spec ДОЛЖЕН игнорировать поле заголовка,включающее этот набор байт-диапазона-.Если значение последнего байта-поста отсутствует,или если значение больше или равно текущей длине тела-субъекта,то последний байт-пост принимается равным одному меньшему,чем текущая длина тела-субъекта в байтах.Выбрав последний байт-пос,клиент может ограничить количество получаемых байтов,не зная размера сущности.Суффикс-байт-диапазон-spec=суффикс-длина &quot;-&quot; суффикс-длина=1*DIGIT Суффикс-байт-диапазон-spec используется для задания суффикса тела сущности,длина которого задается значением суффикс-длины.Если длина сущности меньше заданной суффиксной длины,то используется вся сущность-тело.Если синтаксически действительный набор байт-диапазон включает в себя хотя бы один байт-диапазон-spec,чей первый байт-по меньше текущей длины сущности-тела,или хотя бы один суффикс-байт-диапазон-spec с ненулевой суффиксной длиной,то набор байт-диапазон удовлетворяет условиям,указанным в данной форме.В противном случае,набор байт-диапазон не удовлетворяет.Если набор байт-диапазона неудовлетворителен,сервер ДОЛЖЕН вернуть ответ со статусом 416 (Запрошенный диапазон не удовлетворен).В противном случае сервер ДОЛЖЕН вернуть ответ со статусом 206 (Частичное содержимое),содержащий допустимые диапазоны сущности-тела.Примеры значений спецификаторов диапазонов байтов (предполагая сущность-тело длиной 10000):-первые 500 байт (смещение байтов 0-499,включительно):байты=0-499-вторые 500 байтов (смещение байтов 500-999,включительно):байты=500-999-конечные 500 байтов (смещение байтов 9500-9999,включительно):байты=-500-Или байты=9500--Только первый и последний байты (байты 0 и 9999):байты=0-0,-1-Несколько легальных,но не канонических характеристик вторых 500 байтов (смещение байтов 500-999,включительно):байты=500-600,601-999 байты=500-700,601-999</target>
        </trans-unit>
        <trans-unit id="6477522ed9958316dd956b0c178201d047372002" translate="yes" xml:space="preserve">
          <source>Since both origin servers and caches will compare two validators to
   decide if they represent the same or different entities, one normally
   would expect that if the entity (the entity-body or any entity-
   headers) changes in any way, then the associated validator would
   change as well. If this is true, then we call this validator a
   &quot;strong validator.&quot;

   However, there might be cases when a server prefers to change the
   validator only on semantically significant changes, and not when
   insignificant aspects of the entity change. A validator that does not
   always change when the resource changes is a &quot;weak validator.&quot;

   Entity tags are normally &quot;strong validators,&quot; but the protocol
   provides a mechanism to tag an entity tag as &quot;weak.&quot; One can think of
   a strong validator as one that changes whenever the bits of an entity
   changes, while a weak value changes whenever the meaning of an entity
   changes. Alternatively, one can think of a strong validator as part
   of an identifier for a specific entity, while a weak validator is
   part of an identifier for a set of semantically equivalent entities.

      Note: One example of a strong validator is an integer that is
      incremented in stable storage every time an entity is changed. 

      An entity's modification time, if represented with one-second
      resolution, could be a weak validator, since it is possible that
      the resource might be modified twice during a single second.

      Support for weak validators is optional. However, weak validators
      allow for more efficient caching of equivalent objects; for
      example, a hit counter on a site is probably good enough if it is
      updated every few days or weeks, and any value during that period
      is likely &quot;good enough&quot; to be equivalent.

   A &quot;use&quot; of a validator is either when a client generates a request
   and includes the validator in a validating header field, or when a
   server compares two validators.

   Strong validators are usable in any context. Weak validators are only
   usable in contexts that do not depend on exact equality of an entity.
   For example, either kind is usable for a conditional GET of a full
   entity. However, only a strong validator is usable for a sub-range
   retrieval, since otherwise the client might end up with an internally
   inconsistent entity.

   Clients MAY issue simple (non-subrange) GET requests with either weak
   validators or strong validators. Clients MUST NOT use weak validators
   in other forms of request.

   The only function that the HTTP/1.1 protocol defines on validators is
   comparison. There are two validator comparison functions, depending
   on whether the comparison context allows the use of weak validators
   or not:

      - The strong comparison function: in order to be considered equal,
        both validators MUST be identical in every way, and both MUST
        NOT be weak.

      - The weak comparison function: in order to be considered equal,
        both validators MUST be identical in every way, but either or
        both of them MAY be tagged as &quot;weak&quot; without affecting the
        result.

   An entity tag is strong unless it is explicitly tagged as weak.
   &lt;a href=&quot;#section-3.11&quot;&gt;Section 3.11&lt;/a&gt; gives the syntax for entity tags.

   A Last-Modified time, when used as a validator in a request, is
   implicitly weak unless it is possible to deduce that it is strong,
   using the following rules:

      - The validator is being compared by an origin server to the
        actual current validator for the entity and, 

      - That origin server reliably knows that the associated entity did
        not change twice during the second covered by the presented
        validator.

   or

      - The validator is about to be used by a client in an If-
        Modified-Since or If-Unmodified-Since header, because the client
        has a cache entry for the associated entity, and

      - That cache entry includes a Date value, which gives the time
        when the origin server sent the original response, and

      - The presented Last-Modified time is at least 60 seconds before
        the Date value.

   or

      - The validator is being compared by an intermediate cache to the
        validator stored in its cache entry for the entity, and

      - That cache entry includes a Date value, which gives the time
        when the origin server sent the original response, and

      - The presented Last-Modified time is at least 60 seconds before
        the Date value.

   This method relies on the fact that if two different responses were
   sent by the origin server during the same second, but both had the
   same Last-Modified time, then at least one of those responses would
   have a Date value equal to its Last-Modified time. The arbitrary 60-
   second limit guards against the possibility that the Date and Last-
   Modified values are generated from different clocks, or at somewhat
   different times during the preparation of the response. An
   implementation MAY use a value larger than 60 seconds, if it is
   believed that 60 seconds is too short.

   If a client wishes to perform a sub-range retrieval on a value for
   which it has only a Last-Modified time and no opaque validator, it
   MAY do this only if the Last-Modified time is strong in the sense
   described here.

   A cache or origin server receiving a conditional request, other than
   a full-body GET request, MUST use the strong comparison function to
   evaluate the condition.

   These rules allow HTTP/1.1 caches and clients to safely perform sub-
   range retrievals on values that have been obtained from HTTP/1.0 

   servers.</source>
          <target state="translated">Поскольку и исходные серверы, и кеши будут сравнивать два валидатора, чтобы решить, представляют ли они одни и те же или разные сущности, обычно можно ожидать, что если сущность (тело сущности или любые заголовки сущностей) каким-либо образом изменится, то связанный валидатор будет тоже измениться. Если это правда, то мы называем этот валидатор &amp;laquo;сильным валидатором&amp;raquo;. Однако могут быть случаи, когда сервер предпочитает изменять валидатор только при семантически значимых изменениях, а не при изменении незначительных аспектов объекта. Валидатор, который не всегда меняется при изменении ресурса, является &amp;laquo;слабым валидатором&amp;raquo;. Теги объекта обычно являются &amp;laquo;сильными валидаторами&amp;raquo;, но протокол предоставляет механизм для пометки тега объекта как &amp;laquo;слабого&amp;raquo;.Можно думать о сильном валидаторе как о валидаторе, который изменяется всякий раз, когда изменяются биты сущности, в то время как слабое значение изменяется всякий раз, когда изменяется значение сущности. В качестве альтернативы можно думать о сильном валидаторе как о части идентификатора для конкретной сущности, в то время как слабый валидатор является частью идентификатора для набора семантически эквивалентных сущностей. Примечание. Одним из примеров сильного валидатора является целое число, которое увеличивается в стабильном хранилище при каждом изменении объекта. Время модификации объекта, если оно представлено с разрешением в одну секунду, может быть слабым валидатором, поскольку возможно, что ресурс может быть изменен дважды в течение одной секунды. Поддержка слабых валидаторов не обязательна. Однако слабые валидаторы позволяют более эффективно кэшировать эквивалентные объекты;например, счетчик посещений на сайте, вероятно, достаточно хорош, если он обновляется каждые несколько дней или недель, и любое значение в течение этого периода, вероятно, будет &amp;laquo;достаточно хорошим&amp;raquo;, чтобы быть эквивалентным. &amp;laquo;Использование&amp;raquo; валидатора - это либо когда клиент генерирует запрос и включает валидатор в поле заголовка валидации, либо когда сервер сравнивает два валидатора. Сильные валидаторы можно использовать в любом контексте. Слабые валидаторы можно использовать только в контекстах, которые не зависят от точного равенства сущностей. Например, любой из этих типов можно использовать для условного GET полной сущности. Однако для извлечения поддиапазона можно использовать только сильный валидатор, поскольку в противном случае клиент может получить внутренне противоречивую сущность.Клиенты МОГУТ выдавать простые (не поддиапазонные) запросы GET со слабыми или сильными валидаторами. Клиенты НЕ ДОЛЖНЫ использовать слабые валидаторы в других формах запросов. Единственная функция, которую протокол HTTP / 1.1 определяет для валидаторов, - это сравнение. Существуют две функции сравнения валидаторов, в зависимости от того, позволяет ли контекст сравнения использовать слабые валидаторы или нет: - Сильная функция сравнения: чтобы считаться равными, оба валидатора ДОЛЖНЫ быть идентичными во всех отношениях, и оба НЕ ДОЛЖНЫ быть слабыми. , - Функция слабого сравнения: для того, чтобы считаться равными, оба валидатора ДОЛЖНЫ быть идентичными во всех отношениях, но любой из них или оба МОГУТ быть помечены как &amp;laquo;слабые&amp;raquo;, не влияя на результат.Тег объекта является сильным, если он явно не помечен как слабый. &lt;a href=&quot;#section-3.11&quot;&gt;Раздел 3.11&lt;/a&gt;дает синтаксис для тегов сущностей. Время последнего изменения, когда оно используется в качестве валидатора в запросе, является неявно слабым, если только невозможно сделать вывод, что оно сильное, используя следующие правила: - Валидатор сравнивается исходным сервером с фактическим текущим валидатором для объект и, - Этот исходный сервер достоверно знает, что связанный объект не изменялся дважды в течение секунды, охваченной представленным валидатором. или - Валидатор собирается использоваться клиентом в заголовке If- Modified-Since или If-Unmodified-Since, потому что у клиента есть запись кэша для связанной сущности, и - Эта запись кэша включает значение Date, которое дает время, когда исходный сервер отправил исходный ответ,и - Представленное время последнего изменения составляет не менее 60 секунд до значения даты. или - валидатор сравнивается промежуточным кешем с валидатором, хранящимся в его записи кэша для объекта, и - эта запись кэша включает значение даты, которое дает время, когда исходный сервер отправил исходный ответ, и - представленный Время последнего изменения - не менее чем за 60 секунд до значения даты. Этот метод основан на том факте, что если два разных ответа были отправлены исходным сервером в течение одной и той же секунды, но оба имели одинаковое время Last-Modified, то по крайней мере один из этих ответов будет иметь значение Date, равное его Last-Modified. время.Произвольный 60-секундный лимит защищает от возможности того, что значения Date и Last-Modified генерируются с разных часов или в несколько разное время во время подготовки ответа. Реализация МОЖЕТ использовать значение больше 60 секунд, если считается, что 60 секунд слишком мало. Если клиент хочет выполнить поиск поддиапазона для значения, для которого у него есть только время последнего изменения и нет непрозрачного валидатора, он МОЖЕТ сделать это, только если время последнего изменения является сильным в смысле, описанном здесь. Кеш-сервер или исходный сервер, получающий условный запрос, отличный от запроса GET всего тела, ДОЛЖЕН использовать функцию строгого сравнения для оценки условия. Эти правила разрешают HTTP / 1.1 кеширует и клиенты для безопасного выполнения извлечения поддиапазонов значений, полученных с серверов HTTP / 1.0.</target>
        </trans-unit>
        <trans-unit id="b5e7d8ecc2e2bfd0337480eba5175d544e816618" translate="yes" xml:space="preserve">
          <source>Since by definition the actual function performed by POST is
   determined by the server and often depends on the particular
   resource, the behavior of POST when applied to collections cannot be
   meaningfully modified because it is largely undefined.  Thus, the
   semantics of POST are unmodified when applied to a collection.</source>
          <target state="translated">Так как по определению фактическая функция,выполняемая POST,определяется сервером и часто зависит от конкретного ресурса,поведение POST при применении к коллекциям не может быть достоверно изменено,так как оно в значительной степени не определено.Таким образом,семантика POST при применении к коллекции не изменяется.</target>
        </trans-unit>
        <trans-unit id="6b8845c337661637cd002489923ad6132dc450c6" translate="yes" xml:space="preserve">
          <source>Since origin servers do not always provide explicit expiration times,
   HTTP caches typically assign heuristic expiration times, employing
   algorithms that use other header values (such as the Last-Modified
   time) to estimate a plausible expiration time. The HTTP/1.1
   specification does not provide specific algorithms, but does impose
   worst-case constraints on their results. Since heuristic expiration
   times might compromise semantic transparency, they ought to used
   cautiously, and we encourage origin servers to provide explicit
   expiration times as much as possible.</source>
          <target state="translated">Так как исходные серверы не всегда предоставляют явное время истечения срока действия,HTTP кэш обычно назначает эвристическое время истечения срока действия,используя алгоритмы,которые используют другие значения заголовков (такие как Last-Modified time)для оценки вероятного времени истечения срока действия.Спецификация HTTP/1.1 не предоставляет конкретных алгоритмов,но накладывает ограничения на их результаты в наихудшем случае.Поскольку эвристическое время истечения срока действия может нарушить семантическую прозрачность,их следует использовать с осторожностью,и мы призываем исходные серверы предоставлять как можно больше времени истечения срока действия.</target>
        </trans-unit>
        <trans-unit id="28a6db603d3e3f168ecb1f550fddcf24914727e1" translate="yes" xml:space="preserve">
          <source>Since origin servers do not always provide explicit expiration times,
   a cache MAY assign a heuristic expiration time when an explicit time
   is not specified, employing algorithms that use other header field
   values (such as the Last-Modified time) to estimate a plausible
   expiration time.  This specification does not provide specific
   algorithms, but does impose worst-case constraints on their results.

   A cache MUST NOT use heuristics to determine freshness when an
   explicit expiration time is present in the stored response.  Because
   of the requirements in &lt;a href=&quot;#section-3&quot;&gt;Section 3&lt;/a&gt;, this means that, effectively,
   heuristics can only be used on responses without explicit freshness
   whose status codes are defined as cacheable by default (see &lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-6.1&quot;&gt;Section&lt;/a&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-6.1&quot;&gt;6.1 of [RFC7231]&lt;/a&gt;), and those responses without explicit freshness
   that have been marked as explicitly cacheable (e.g., with a &quot;public&quot;
   response directive).

   If the response has a Last-Modified header field (&lt;a href=&quot;https://tools.ietf.org/html/rfc7232#section-2.2&quot;&gt;Section&amp;nbsp;2.2 of
   [RFC7232]&lt;/a&gt;), caches are encouraged to use a heuristic expiration value
   that is no more than some fraction of the interval since that time.
   A typical setting of this fraction might be 10%.

   When a heuristic is used to calculate freshness lifetime, a cache
   SHOULD generate a Warning header field with a 113 warn-code (see
   &lt;a href=&quot;#section-5.5.4&quot;&gt;Section 5.5.4&lt;/a&gt;) in the response if its current_age is more than 24
   hours and such a warning is not already present.

      Note: &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-13.9&quot;&gt;Section&amp;nbsp;13.9 of [RFC2616]&lt;/a&gt; prohibited caches from calculating
      heuristic freshness for URIs with query components (i.e., those
      containing '?').  In practice, this has not been widely
      implemented.  Therefore, origin servers are encouraged to send
      explicit directives (e.g., Cache-Control: no-cache) if they wish
      to preclude caching.</source>
          <target state="translated">Поскольку исходные серверы не всегда предоставляют явное время истечения срока действия, кеш МОЖЕТ назначить эвристическое время истечения срока действия, если явное время не указано, используя алгоритмы, которые используют другие значения поля заголовка (например, время последнего изменения) для оценки вероятного времени истечения срока. , Эта спецификация не предоставляет конкретных алгоритмов, но налагает на их результаты ограничения наихудшего случая. Кэш НЕ ДОЛЖЕН использовать эвристику для определения актуальности, когда в сохраненном ответе присутствует явное время истечения срока действия. Из-за требований &lt;a href=&quot;#section-3&quot;&gt;Раздела 3&lt;/a&gt; это означает, что, по сути, эвристика может использоваться только для ответов без явной актуальности, коды состояния которых по умолчанию определены как кэшируемые (см. &lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-6.1&quot;&gt;Раздел &lt;/a&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-6.1&quot;&gt;6.1 [RFC7231]&lt;/a&gt;), а также те ответы без явной актуальности, которые были помечены как явно кэшируемые (например, с помощью директивы &amp;laquo;общедоступный&amp;raquo; ответ). Если ответ имеет поле заголовка Last-Modified ( &lt;a href=&quot;https://tools.ietf.org/html/rfc7232#section-2.2&quot;&gt;раздел 2.2 [RFC7232]&lt;/a&gt; ), кэшам рекомендуется использовать эвристическое значение срока действия, которое составляет не более некоторой части интервала с этого времени. Типичная установка этой доли может составлять 10%. Когда эвристика используется для расчета времени жизни свежести, кеш ДОЛЖЕН генерировать поле заголовка предупреждения с кодом предупреждения 113 (см. &lt;a href=&quot;#section-5.5.4&quot;&gt;Раздел 5.5.4&lt;/a&gt; ) в ответе, если его current_age составляет более 24 часов и такое предупреждение еще не присутствует. , Примечание: &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-13.9&quot;&gt;раздел 13.9 [RFC2616]&lt;/a&gt;кэшам запрещено вычислять эвристическую актуальность для URI с компонентами запроса (т. е. содержащими '?'). На практике это не нашло широкого применения. Поэтому исходным серверам рекомендуется отправлять явные директивы (например, Cache-Control: no-cache), если они хотят предотвратить кэширование.</target>
        </trans-unit>
        <trans-unit id="509ec028b2372cca14a02773e4ddea3d5e0dcfb9" translate="yes" xml:space="preserve">
          <source>Since property values are typically used to hold information such as
   the author of a document, there is the possibility that privacy
   concerns could arise stemming from widespread access to a resource's
   property data.  To reduce the risk of inadvertent release of private
   information via properties, servers are encouraged to develop access
   control mechanisms that separate read access to the resource body and
   read access to the resource's properties.  This allows a user to
   control the dissemination of their property data without overly
   restricting access to the resource's contents.</source>
          <target state="translated">Поскольку для хранения такой информации,как автор документа,обычно используются имущественные ценности,существует вероятность того,что в результате широкого доступа к имущественным данным ресурса могут возникнуть проблемы,связанные с конфиденциальностью.Для снижения риска непреднамеренного высвобождения частной информации через свойства,серверам рекомендуется разработать механизмы контроля доступа,которые разделяют доступ на чтение к телу ресурса и доступ на чтение к свойствам ресурса.Это позволяет пользователю контролировать распространение своих имущественных данных без чрезмерного ограничения доступа к содержимому ресурса.</target>
        </trans-unit>
        <trans-unit id="cbc586157b2e078cf31d317a4f20a745527f123b" translate="yes" xml:space="preserve">
          <source>Since representation data is transferred in payloads as a sequence of
   octets, a byte range is a meaningful substructure for any
   representation transferable over HTTP (&lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-3&quot;&gt;Section&amp;nbsp;3 of [RFC7231]&lt;/a&gt;).  The
   &quot;bytes&quot; range unit is defined for expressing subranges of the data's
   octet sequence.

     bytes-unit       = &quot;bytes&quot;

   A byte-range request can specify a single range of bytes or a set of
   ranges within a single representation.

     byte-ranges-specifier = bytes-unit &quot;=&quot; byte-range-set
     byte-range-set  = 1#( byte-range-spec / suffix-byte-range-spec )
     byte-range-spec = first-byte-pos &quot;-&quot; [ last-byte-pos ]
     first-byte-pos  = 1*DIGIT
     last-byte-pos   = 1*DIGIT

   The first-byte-pos value in a byte-range-spec gives the byte-offset
   of the first byte in a range.  The last-byte-pos value gives the
   byte-offset of the last byte in the range; that is, the byte
   positions specified are inclusive.  Byte offsets start at zero.

   Examples of byte-ranges-specifier values:

   o  The first 500 bytes (byte offsets 0-499, inclusive):

        bytes=0-499

   o  The second 500 bytes (byte offsets 500-999, inclusive):

        bytes=500-999 

   A byte-range-spec is invalid if the last-byte-pos value is present
   and less than the first-byte-pos.

   A client can limit the number of bytes requested without knowing the
   size of the selected representation.  If the last-byte-pos value is
   absent, or if the value is greater than or equal to the current
   length of the representation data, the byte range is interpreted as
   the remainder of the representation (i.e., the server replaces the
   value of last-byte-pos with a value that is one less than the current
   length of the selected representation).

   A client can request the last N bytes of the selected representation
   using a suffix-byte-range-spec.

     suffix-byte-range-spec = &quot;-&quot; suffix-length
     suffix-length = 1*DIGIT

   If the selected representation is shorter than the specified
   suffix-length, the entire representation is used.

   Additional examples, assuming a representation of length 10000:

   o  The final 500 bytes (byte offsets 9500-9999, inclusive):

        bytes=-500

   Or:

        bytes=9500-

   o  The first and last bytes only (bytes 0 and 9999):

        bytes=0-0,-1

   o  Other valid (but not canonical) specifications of the second 500
      bytes (byte offsets 500-999, inclusive):

        bytes=500-600,601-999
        bytes=500-700,601-999

   If a valid byte-range-set includes at least one byte-range-spec with
   a first-byte-pos that is less than the current length of the
   representation, or at least one suffix-byte-range-spec with a
   non-zero suffix-length, then the byte-range-set is satisfiable.
   Otherwise, the byte-range-set is unsatisfiable. 

   In the byte-range syntax, first-byte-pos, last-byte-pos, and
   suffix-length are expressed as decimal number of octets.  Since there
   is no predefined limit to the length of a payload, recipients MUST
   anticipate potentially large decimal numerals and prevent parsing
   errors due to integer conversion overflows.</source>
          <target state="translated">Поскольку данные представления передаются в полезных нагрузках как последовательность октетов, диапазон байтов является значимой подструктурой для любого представления, передаваемого через HTTP ( &lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-3&quot;&gt;раздел 3 [RFC7231]&lt;/a&gt;). Единица диапазона &amp;laquo;байты&amp;raquo; определена для выражения поддиапазонов последовательности октетов данных. bytes-unit = &quot;bytes&quot; Запрос диапазона байтов может указывать один диапазон байтов или набор диапазонов в пределах одного представления. спецификатор-диапазонов-байтов = единица-байтов &quot;=&quot; набор-байтов-диапазонов байтов-набор-диапазонов = 1 # (спецификация-байтов-диапазонов / суффикс-спецификаций-байтов) спецификация-байтов = первый-байт- pos &quot;-&quot; [last-byte-pos] first-byte-pos = 1 * DIGIT last-byte-pos = 1 * DIGIT Значение first-byte-pos в спецификации byte-range-spec дает байтовое смещение первый байт в диапазоне. Значение last-byte-pos дает байтовое смещение последнего байта в диапазоне; то есть указанные позиции байтов являются включительными. Смещение байта начинается с нуля. Примеры значений спецификатора диапазонов байтов:o Первые 500 байт (смещения байтов 0-499 включительно): байты = 0-499 o Вторые 500 байтов (смещения байтов 500-999 включительно): байты = 500-999 Спецификация диапазона байтов недействительна, если присутствует значение last-byte-pos, которое меньше значения first-byte-pos. Клиент может ограничить количество запрашиваемых байтов, не зная размера выбранного представления. Если значение last-byte-pos отсутствует или если значение больше или равно текущей длине данных представления, диапазон байтов интерпретируется как остаток от представления (т. Е. Сервер заменяет значение последнего -byte-pos со значением, которое на единицу меньше текущей длины выбранного представления). Клиент может запросить последние N байтов выбранного представления, используя суффикс-байтовый-диапазон-spec.суффикс-байт-диапазон-spec = &quot;-&quot; суффикс-длина суффикс-длина = 1 * ЦИФРА Если выбранное представление короче, чем указанная длина суффикса, используется все представление. Дополнительные примеры, предполагающие представление длины 10000: o Последние 500 байтов (смещения байтов 9500-9999, включительно): bytes = -500 Или: bytes = 9500- o Только первый и последний байты (байты 0 и 9999): байты = 0-0, -1 o Другие допустимые (но не канонические) спецификации вторых 500 байтов (смещения байтов 500-999 включительно): байты = 500-600,601-999 байтов = 500-700,601-999 Если допустимый байт- набор диапазонов включает по крайней мере одну спецификацию диапазона байтов с положением первого байта, которое меньше текущей длины представления,или хотя бы один суффикс-байтовый-диапазон-spec с ненулевой суффикс-длиной, тогда набор-байтов является удовлетворительным. В противном случае набор байт-диапазона не может быть выполнен. В синтаксисе диапазона байтов, позиция первого байта, позиция последнего байта и длина суффикса выражаются в виде десятичного числа октетов. Поскольку предопределенного ограничения на длину полезной нагрузки нет, получатели ДОЛЖНЫ предвидеть потенциально большие десятичные числа и предотвращать ошибки синтаксического анализа из-за переполнения целочисленного преобразования.получатели ДОЛЖНЫ предвидеть потенциально большие десятичные числа и предотвращать ошибки синтаксического анализа из-за переполнения целочисленного преобразования.получатели ДОЛЖНЫ предвидеть потенциально большие десятичные числа и предотвращать ошибки синтаксического анализа из-за переполнения целочисленного преобразования.</target>
        </trans-unit>
        <trans-unit id="774d5768b3cb89b1969b07ba3f6b81f799741b41" translate="yes" xml:space="preserve">
          <source>Since server lock support is optional, a client trying to lock a
   resource on a server can either try the lock and hope for the best,
   or perform some form of discovery to determine what lock capabilities
   the server supports.  This is known as lock capability discovery.  A
   client can determine what lock types the server supports by
   retrieving the DAV:supportedlock property.

   Any DAV-compliant resource that supports the LOCK method MUST support
   the DAV:supportedlock property.</source>
          <target state="translated">Поскольку поддержка блокировки сервера является необязательной,клиент,пытающийся заблокировать ресурс на сервере,может либо попробовать блокировку и надеяться на лучшее,либо выполнить какое-либо обнаружение,чтобы определить,какие возможности блокировки поддерживает сервер.Это называется обнаружением возможности блокировки.Клиент может определить,какие типы блокировок поддерживает сервер,получив свойство DAV:supportedlock.Любой DAV-совместимый ресурс,поддерживающий метод блокировки,ДОЛЖЕН поддерживать DAV:supportlock свойство.</target>
        </trans-unit>
        <trans-unit id="94a8f31f5d75fba5bea69bbed106207fdc98fadf" translate="yes" xml:space="preserve">
          <source>Since the &quot;http&quot; and &quot;https&quot; schemes conform to the URI generic
   syntax, such URIs are normalized and compared according to the
   algorithm defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-6&quot;&gt;Section&amp;nbsp;6 of [RFC3986]&lt;/a&gt;, using the defaults
   described above for each scheme.

   If the port is equal to the default port for a scheme, the normal
   form is to omit the port subcomponent.  When not being used in
   absolute form as the request target of an OPTIONS request, an empty
   path component is equivalent to an absolute path of &quot;/&quot;, so the
   normal form is to provide a path of &quot;/&quot; instead.  The scheme and host
   are case-insensitive and normally provided in lowercase; all other
   components are compared in a case-sensitive manner.  Characters other
   than those in the &quot;reserved&quot; set are equivalent to their
   percent-encoded octets: the normal form is to not encode them (see
   Sections &lt;a href=&quot;#section-2.1&quot;&gt;2.1&lt;/a&gt; and &lt;a href=&quot;#section-2.2&quot;&gt;2.2&lt;/a&gt; of [&lt;a href=&quot;https://tools.ietf.org/html/rfc3986&quot;&gt;RFC3986&lt;/a&gt;]).

   For example, the following three URIs are equivalent:

      &lt;a href=&quot;http://example.com:80/~smith/home.html&quot;&gt;http://example.com:80/~smith/home.html&lt;/a&gt;
      http://EXAMPLE.com/%7Esmith/home.html
      &lt;a href=&quot;http://EXAMPLE.com/%7esmith/home.html&quot;&gt;http://EXAMPLE.com:/%7esmith/home.html&lt;/a&gt;</source>
          <target state="translated">Поскольку схемы &quot;http&quot; и &quot;https&quot; соответствуют общему синтаксису URI, такие URI нормализуются и сравниваются в соответствии с алгоритмом, определенным в &lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-6&quot;&gt;разделе 6 [RFC3986].&lt;/a&gt;, используя значения по умолчанию, описанные выше для каждой схемы. Если порт равен порту по умолчанию для схемы, в обычной форме подкомпонент порта опускается. Когда он не используется в абсолютной форме в качестве цели запроса OPTIONS, компонент пустого пути эквивалентен абсолютному пути &amp;laquo;/&amp;raquo;, поэтому в обычной форме вместо этого предоставляется путь &amp;laquo;/&amp;raquo;. Схема и хост не чувствительны к регистру и обычно указываются в нижнем регистре; все остальные компоненты сравниваются с учетом регистра. Символы, отличные от символов в &quot;зарезервированном&quot; наборе, эквивалентны своим октетам, закодированным в процентах: нормальная форма - не кодировать их (см. Разделы &lt;a href=&quot;#section-2.1&quot;&gt;2.1&lt;/a&gt; и &lt;a href=&quot;#section-2.2&quot;&gt;2.2&lt;/a&gt; [ &lt;a href=&quot;https://tools.ietf.org/html/rfc3986&quot;&gt;RFC3986&lt;/a&gt;]). Например, следующие три URI эквивалентны: &lt;a href=&quot;http://example.com:80/~smith/home.html&quot;&gt;http://example.com:80/~smith/home.html&lt;/a&gt; http://EXAMPLE.com/%7Esmith/home.html &lt;a href=&quot;http://EXAMPLE.com/%7esmith/home.html&quot;&gt;http://EXAMPLE.com:/% 7esmith / home.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3878be391d0341c64c35b2c3bb2ccfa884cc0a3f" translate="yes" xml:space="preserve">
          <source>Since the request-target often contains only part of the user agent's
   target URI, a server reconstructs the intended target as an
   &quot;effective request URI&quot; to properly service the request.  This
   reconstruction involves both the server's local configuration and
   information communicated in the request-target, Host header field,
   and connection context.

   For a user agent, the effective request URI is the target URI.

   If the request-target is in absolute-form, the effective request URI
   is the same as the request-target.  Otherwise, the effective request
   URI is constructed as follows:

      If the server's configuration (or outbound gateway) provides a
      fixed URI scheme, that scheme is used for the effective request
      URI.  Otherwise, if the request is received over a TLS-secured TCP
      connection, the effective request URI's scheme is &quot;https&quot;; if not,
      the scheme is &quot;http&quot;.

      If the server's configuration (or outbound gateway) provides a
      fixed URI authority component, that authority is used for the
      effective request URI.  If not, then if the request-target is in
      authority-form, the effective request URI's authority component is
      the same as the request-target.  If not, then if a Host header
      field is supplied with a non-empty field-value, the authority
      component is the same as the Host field-value.  Otherwise, the
      authority component is assigned the default name configured for
      the server and, if the connection's incoming TCP port number
      differs from the default port for the effective request URI's
      scheme, then a colon (&quot;:&quot;) and the incoming port number (in
      decimal form) are appended to the authority component.

      If the request-target is in authority-form or asterisk-form, the
      effective request URI's combined path and query component is
      empty.  Otherwise, the combined path and query component is the
      same as the request-target.

      The components of the effective request URI, once determined as
      above, can be combined into absolute-URI form by concatenating the
      scheme, &quot;://&quot;, authority, and combined path and query component. 

   Example 1: the following message received over an insecure TCP
   connection

     GET /pub/WWW/TheProject.html HTTP/1.1
     Host: www.example.org:8080

   has an effective request URI of

     &lt;a href=&quot;http://www.example.org:8080/pub/WWW/TheProject.html&quot;&gt;http://www.example.org:8080/pub/WWW/TheProject.html&lt;/a&gt;

   Example 2: the following message received over a TLS-secured TCP
   connection

     OPTIONS * HTTP/1.1
     Host: www.example.org

   has an effective request URI of

     https://www.example.org

   Recipients of an HTTP/1.0 request that lacks a Host header field
   might need to use heuristics (e.g., examination of the URI path for
   something unique to a particular host) in order to guess the
   effective request URI's authority component.

   Once the effective request URI has been constructed, an origin server
   needs to decide whether or not to provide service for that URI via
   the connection in which the request was received.  For example, the
   request might have been misdirected, deliberately or accidentally,
   such that the information within a received request-target or Host
   header field differs from the host or port upon which the connection
   has been made.  If the connection is from a trusted gateway, that
   inconsistency might be expected; otherwise, it might indicate an
   attempt to bypass security filters, trick the server into delivering
   non-public content, or poison a cache.  See &lt;a href=&quot;#section-9&quot;&gt;Section 9&lt;/a&gt; for security
   considerations regarding message routing.</source>
          <target state="translated">Поскольку цель запроса часто содержит только часть целевого URI пользовательского агента, сервер восстанавливает намеченную цель как &amp;laquo;эффективный URI запроса&amp;raquo;, чтобы должным образом обслуживать запрос. Эта реконструкция включает как локальную конфигурацию сервера, так и информацию, передаваемую в целевом запросе, поле заголовка хоста и контексте соединения. Для пользовательского агента эффективный URI запроса - это целевой URI. Если цель запроса находится в абсолютной форме, эффективный URI запроса совпадает с целевым объектом запроса. В противном случае эффективный URI запроса строится следующим образом: если конфигурация сервера (или исходящего шлюза) предоставляет фиксированную схему URI, эта схема используется для эффективного URI запроса. В противном случае,если запрос получен через TCP-соединение, защищенное TLS, эффективная схема URI запроса - &amp;laquo;https&amp;raquo;; в противном случае используется схема &amp;laquo;http&amp;raquo;. Если конфигурация сервера (или исходящего шлюза) предоставляет фиксированный компонент полномочий URI, эти полномочия используются для эффективного URI запроса. Если нет, то если цель-запрос находится в форме полномочий, компонент полномочий действующего URI запроса будет таким же, как и цель-запроса. Если нет, то, если поле заголовка Host снабжено непустым значением поля, компонент полномочий совпадает с значением поля Host. В противном случае компоненту полномочий назначается имя по умолчанию, настроенное для сервера, и, если соединение 's номер входящего порта TCP отличается от порта по умолчанию для схемы действующего URI запроса, тогда к компоненту полномочий добавляется двоеточие (&amp;laquo;:&amp;raquo;) и номер входящего порта (в десятичной форме). Если цель запроса находится в форме полномочий или звездочки, объединенный путь и компонент запроса эффективного URI запроса пуст. В противном случае комбинированный компонент пути и запроса такой же, как и цель запроса. Компоненты эффективного URI запроса, однажды определенные, как указано выше, могут быть объединены в форму абсолютного URI путем объединения схемы, &amp;laquo;: //&amp;raquo;, полномочий и комбинированного пути и компонента запроса. Пример 1: следующее сообщение получено через незащищенное TCP-соединение GET /pub/WWW/TheProject.html HTTP / 1.1 Host: www.example.org: 8080 имеет действующий URI запроса &lt;a href=&quot;http://www.example.org:8080/pub/WWW/TheProject.html&quot;&gt;http://www.example.org:8080/pub/WWW/TheProject.html&lt;/a&gt; Пример 2: следующее сообщение получено через TCP-соединение, защищенное TLS. ОПЦИИ * Хост HTTP / 1.1: www.example.org имеет действующий URI запроса https://www.example.org. Получатели запроса HTTP / 1.0, в котором отсутствует в поле заголовка Host может потребоваться эвристика (например, проверка пути URI на предмет чего-то уникального для конкретного хоста), чтобы угадать компонент полномочий действующего URI запроса. После создания эффективного URI запроса исходный сервер должен решить, предоставлять ли услугу для этого URI через соединение, в котором был получен запрос. Например, запрос мог быть неправильно направлен, намеренно или случайно,таким образом, что информация в полученном поле заголовка запроса или заголовка хоста отличается от хоста или порта, на котором было установлено соединение. Если соединение исходит от доверенного шлюза, этого несоответствия можно ожидать; в противном случае это может указывать на попытку обойти фильтры безопасности, обманом заставить сервер доставить непубличный контент или отравить кеш. Видеть&lt;a href=&quot;#section-9&quot;&gt;Раздел 9&lt;/a&gt; для соображений безопасности при маршрутизации сообщений.</target>
        </trans-unit>
        <trans-unit id="a531f36cb52973a36d35f55d654a8d428773bf1d" translate="yes" xml:space="preserve">
          <source>Since this document describes a set of extensions to the HTTP/1.1
   protocol, the augmented BNF used herein to describe protocol elements
   is exactly the same as described in &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-2.1&quot;&gt;Section&amp;nbsp;2.1 of [RFC2616]&lt;/a&gt;,
   including the rules about implied linear whitespace.  Since this
   augmented BNF uses the basic production rules provided in &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-2.2&quot;&gt;Section&amp;nbsp;2.2
   of [RFC2616]&lt;/a&gt;, these rules apply to this document as well.  Note this
   is not the standard BNF syntax used in other RFCs.

   The key words &quot;MUST&quot;, &quot;MUST NOT&quot;, &quot;REQUIRED&quot;, &quot;SHALL&quot;, &quot;SHALL NOT&quot;,
   &quot;SHOULD&quot;, &quot;SHOULD NOT&quot;, &quot;RECOMMENDED&quot;, &quot;MAY&quot;, and &quot;OPTIONAL&quot; in this
   document are to be interpreted as described in [&lt;a href=&quot;https://tools.ietf.org/html/rfc2119&quot;&gt;RFC2119&lt;/a&gt;].

   Note that in natural language, a property like the &quot;creationdate&quot;
   property in the &quot;DAV:&quot; XML namespace is sometimes referred to as
   &quot;DAV:creationdate&quot; for brevity.</source>
          <target state="translated">Поскольку в этом документе описывается набор расширений протокола HTTP / 1.1, расширенный BNF, используемый здесь для описания элементов протокола, в точности совпадает с описанным в &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-2.1&quot;&gt;разделе 2.1 [RFC2616]&lt;/a&gt; , включая правила о подразумеваемых линейных пробелах. Поскольку этот расширенный BNF использует основные производственные правила, приведенные в &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-2.2&quot;&gt;разделе 2.2 [RFC2616]&lt;/a&gt; , эти правила также применимы к этому документу. Обратите внимание, что это не стандартный синтаксис BNF, используемый в других RFC. Ключевые слова &amp;laquo;ДОЛЖЕН&amp;raquo;, &amp;laquo;НЕ ДОЛЖЕН&amp;raquo;, &amp;laquo;ОБЯЗАТЕЛЬНО&amp;raquo;, &amp;laquo;ДОЛЖЕН&amp;raquo;, &amp;laquo;НЕ ДОЛЖЕН&amp;raquo;, &amp;laquo;ДОЛЖЕН&amp;raquo;, &amp;laquo;НЕ ДОЛЖЕН&amp;raquo;, &amp;laquo;РЕКОМЕНДУЕТСЯ&amp;raquo;, &amp;laquo;МОЖЕТ&amp;raquo; и &amp;laquo;ДОПОЛНИТЕЛЬНО&amp;raquo; в этом документе являются следует интерпретировать, как описано в [ &lt;a href=&quot;https://tools.ietf.org/html/rfc2119&quot;&gt;RFC2119&lt;/a&gt;]. Обратите внимание, что на естественном языке такое свойство, как свойство &amp;laquo;creationdate&amp;raquo; в пространстве имен XML &amp;laquo;DAV:&amp;raquo;, иногда для краткости называется &amp;laquo;DAV: creationdate&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="6ed1ccbe5b50342757a2d3ea53224582ca419bad" translate="yes" xml:space="preserve">
          <source>Since version 4.1, Klar for Android uses the same UA string as &lt;a href=&quot;#Focus_for_Android&quot;&gt;Focus for Android&lt;/a&gt;. Before version 4.1, it sent a &lt;var&gt;Klar/&amp;lt;version&amp;gt;&lt;/var&gt;&lt;var&gt;product/version&lt;/var&gt; token.</source>
          <target state="translated">Начиная с версии 4.1, Klar для Android использует ту же строку UA, что и &lt;a href=&quot;#Focus_for_Android&quot;&gt;Focus для Android&lt;/a&gt; . До версии 4.1 он отправлял токен &lt;var&gt;product/version&lt;/var&gt; &lt;var&gt;Klar/&amp;lt;version&amp;gt;&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="f2e4d9b56d7689a1ae584bddcddb038ff0772c38" translate="yes" xml:space="preserve">
          <source>Since your domain isn't &lt;code&gt;example.com&lt;/code&gt;, a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/base&quot;&gt;&lt;code&gt;&amp;lt;base&amp;gt;&lt;/code&gt;&lt;/a&gt; element with its &lt;code&gt;href&lt;/code&gt; set to &lt;code&gt;https://example.com&lt;/code&gt; will result in a CSP violation.</source>
          <target state="translated">Так как ваш домен не &lt;code&gt;example.com&lt;/code&gt; , элемент &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/base&quot;&gt; &lt;code&gt;&amp;lt;base&amp;gt;&lt;/code&gt; &lt;/a&gt; с &lt;code&gt;href&lt;/code&gt; , установленным на &lt;code&gt;https://example.com&lt;/code&gt; , приведет к нарушению CSP.</target>
        </trans-unit>
        <trans-unit id="0a9315f35220268432d25d79a4154c7f1eccd789" translate="yes" xml:space="preserve">
          <source>Single part ranges</source>
          <target state="translated">Диапазоны отдельных частей</target>
        </trans-unit>
        <trans-unit id="6e08a5615f12f6057b7ff9d9ceecce7b3562aacc" translate="yes" xml:space="preserve">
          <source>Single-resource bodies, consisting of a single file of known length, defined by the two headers: &lt;a href=&quot;headers/content-type&quot;&gt;&lt;code&gt;Content-Type&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;headers/content-length&quot;&gt;&lt;code&gt;Content-Length&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Тела с одним ресурсом, состоящие из одного файла известной длины, определяемого двумя заголовками: &lt;a href=&quot;headers/content-type&quot;&gt; &lt;code&gt;Content-Type&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;headers/content-length&quot;&gt; &lt;code&gt;Content-Length&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9f99f82fdece07fba6789c9308f7b0c3bc7a0e91" translate="yes" xml:space="preserve">
          <source>Single-resource bodies, consisting of a single file of unknown length, encoded by chunks with &lt;a href=&quot;headers/transfer-encoding&quot;&gt;&lt;code&gt;Transfer-Encoding&lt;/code&gt;&lt;/a&gt; set to &lt;code&gt;chunked&lt;/code&gt;.</source>
          <target state="translated">Тела с одним ресурсом, состоящие из одного файла неизвестной длины, закодированного фрагментами с параметром &lt;a href=&quot;headers/transfer-encoding&quot;&gt; &lt;code&gt;Transfer-Encoding&lt;/code&gt; ,&lt;/a&gt; установленным на &lt;code&gt;chunked&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d60483a13a434ebf8efec0b71ca52e651ce1040b" translate="yes" xml:space="preserve">
          <source>Single-resource bodies, consisting of one single file, defined by the two headers: &lt;a href=&quot;headers/content-type&quot;&gt;&lt;code&gt;Content-Type&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;headers/content-length&quot;&gt;&lt;code&gt;Content-Length&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Тела с одним ресурсом, состоящие из одного файла, определяемого двумя заголовками: &lt;a href=&quot;headers/content-type&quot;&gt; &lt;code&gt;Content-Type&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;headers/content-length&quot;&gt; &lt;code&gt;Content-Length&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="762d05cd3ee1357a02893672cf750fd1659a4eed" translate="yes" xml:space="preserve">
          <source>Site security testers usually expect this header to be set.</source>
          <target state="translated">Тестеры безопасности сайта обычно ожидают,что этот заголовок будет установлен.</target>
        </trans-unit>
        <trans-unit id="88a34e382ce47cacc14889b5eb99b2deb9447680" translate="yes" xml:space="preserve">
          <source>Slug is an HTTP entity-header whose presence in a POST to a
   Collection constitutes a request by the client to use the header's
   value as part of any URIs that would normally be used to retrieve the
   to-be-created Entry or Media Resources.

   Servers MAY use the value of the Slug header when creating the Member
   URI of the newly created Resource, for instance, by using some or all
   of the words in the value for the last URI segment.  Servers MAY also
   use the value when creating the atom:id, or as the title of a Media
   Link Entry (see &lt;a href=&quot;#section-9.6&quot;&gt;Section 9.6&lt;/a&gt;). 

   Servers MAY choose to ignore the Slug entity-header.  Servers MAY
   alter the header value before using it.  For instance, a server might
   filter out some characters or replace accented letters with non-
   accented ones, replace spaces with underscores, change case, and so
   on.</source>
          <target state="translated">Слаг - это HTTP-заголовок объекта, присутствие которого в POST к Коллекции представляет собой запрос клиента на использование значения заголовка как части любых URI, которые обычно используются для извлечения создаваемой записи или медиаресурсов. Серверы МОГУТ использовать значение заголовка Slug при создании URI участника вновь созданного ресурса, например, используя некоторые или все слова в значении для последнего сегмента URI. Серверы МОГУТ также использовать это значение при создании атома: id или в качестве заголовка записи медиа-ссылки (см. &lt;a href=&quot;#section-9.6&quot;&gt;Раздел 9.6.&lt;/a&gt;). Серверы МОГУТ игнорировать заголовок объекта Slug. Серверы МОГУТ изменить значение заголовка перед его использованием. Например, сервер может отфильтровать некоторые символы или заменить буквы с диакритическими знаками на буквы без диакритических знаков, заменить пробелы знаками подчеркивания, изменить регистр и т. Д.</target>
        </trans-unit>
        <trans-unit id="bbc575596897043101f8f28bb8d15019ccb43ccd" translate="yes" xml:space="preserve">
          <source>So until all browsers catch up with the spec, you may be able to work around this limitation by doing one or both of the following:</source>
          <target state="translated">Таким образом,пока все браузеры не догонят спецификацию,вы сможете обойти это ограничение,выполнив одно или оба из следующих действий:</target>
        </trans-unit>
        <trans-unit id="037a3b178c5c3fa1e2c3af1bd926bf5f5c93704e" translate="yes" xml:space="preserve">
          <source>So, choose one of your domains as your canonical one! There are two techniques below to allow the non-canonical domain to work still.</source>
          <target state="translated">Итак,выберите один из ваших доменов в качестве канонического! Ниже приведены две техники,позволяющие неканоническому домену работать неподвижно.</target>
        </trans-unit>
        <trans-unit id="cd7373eebfb9bfd956b54104ec328820e66fdfe6" translate="yes" xml:space="preserve">
          <source>So, do I have to choose one or the other for my web site?</source>
          <target state="translated">Итак,должен ли я выбирать тот или иной для своего сайта?</target>
        </trans-unit>
        <trans-unit id="b4f91bdb0e1b0e40fff4debcd0fea22f1999f491" translate="yes" xml:space="preserve">
          <source>Solution</source>
          <target state="translated">Solution</target>
        </trans-unit>
        <trans-unit id="e0f0c555c38a97116b738fdc4ec2d35f3f2aa384" translate="yes" xml:space="preserve">
          <source>Some HTTP header fields allow a time value to be specified as an
   integer number of seconds, represented in decimal, after the time
   that the message was received.

       delta-seconds  = 1*DIGIT</source>
          <target state="translated">Некоторые поля заголовка HTTP позволяют указывать значение времени в виде целого числа секунд,представленного в десятичной форме,после того,как сообщение было получено.дельта-секунды=1*DIGIT</target>
        </trans-unit>
        <trans-unit id="d62acecb772d2af811fb679ffb025605d29919d2" translate="yes" xml:space="preserve">
          <source>Some HTTP messages transfer a complete or partial representation as
   the message &quot;payload&quot;.  In some cases, a payload might contain only
   the associated representation's header fields (e.g., responses to
   HEAD) or only some part(s) of the representation data (e.g., the 206
   (Partial Content) status code).

   The purpose of a payload in a request is defined by the method
   semantics.  For example, a representation in the payload of a PUT
   request (&lt;a href=&quot;#section-4.3.4&quot;&gt;Section 4.3.4&lt;/a&gt;) represents the desired state of the target
   resource if the request is successfully applied, whereas a
   representation in the payload of a POST request (&lt;a href=&quot;#section-4.3.3&quot;&gt;Section 4.3.3&lt;/a&gt;)
   represents information to be processed by the target resource. 

   In a response, the payload's purpose is defined by both the request
   method and the response status code.  For example, the payload of a
   200 (OK) response to GET (&lt;a href=&quot;#section-4.3.1&quot;&gt;Section 4.3.1&lt;/a&gt;) represents the current state
   of the target resource, as observed at the time of the message
   origination date (&lt;a href=&quot;#section-7.1.1.2&quot;&gt;Section 7.1.1.2&lt;/a&gt;), whereas the payload of the same
   status code in a response to POST might represent either the
   processing result or the new state of the target resource after
   applying the processing.  Response messages with an error status code
   usually contain a payload that represents the error condition, such
   that it describes the error state and what next steps are suggested
   for resolving it.

   Header fields that specifically describe the payload, rather than the
   associated representation, are referred to as &quot;payload header
   fields&quot;.  Payload header fields are defined in other parts of this
   specification, due to their impact on message parsing.

   +-------------------+----------------------------+
   | Header Field Name | Defined in...              |
   +-------------------+----------------------------+
   | Content-Length    | &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.3.2&quot;&gt;Section&amp;nbsp;3.3.2 of [RFC7230]&lt;/a&gt; |
   | Content-Range     | &lt;a href=&quot;https://tools.ietf.org/html/rfc7233#section-4.2&quot;&gt;Section&amp;nbsp;4.2 of [RFC7233]&lt;/a&gt;   |
   | Trailer           | &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-4.4&quot;&gt;Section&amp;nbsp;4.4 of [RFC7230]&lt;/a&gt;   |
   | Transfer-Encoding | &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.3.1&quot;&gt;Section&amp;nbsp;3.3.1 of [RFC7230]&lt;/a&gt; |
   +-------------------+----------------------------+</source>
          <target state="translated">Некоторые сообщения HTTP передают полное или частичное представление как &amp;laquo;полезную нагрузку&amp;raquo; сообщения. В некоторых случаях полезная нагрузка может содержать только связанные поля заголовка представления (например, ответы на HEAD) или только некоторую часть (части) данных представления (например, код состояния 206 (частичное содержимое)). Назначение полезной нагрузки в запросе определяется семантикой метода. Например, представление в полезных данных запроса PUT ( &lt;a href=&quot;#section-4.3.4&quot;&gt;раздел 4.3.4&lt;/a&gt; ) представляет желаемое состояние целевого ресурса, если запрос успешно применен, тогда как представление в полезных данных запроса POST ( &lt;a href=&quot;#section-4.3.3&quot;&gt;раздел 4.3.3)&lt;/a&gt;) представляет информацию, которая должна быть обработана целевым ресурсом. В ответе цель полезной нагрузки определяется как методом запроса, так и кодом состояния ответа. Например, полезная нагрузка ответа 200 (OK) на GET ( &lt;a href=&quot;#section-4.3.1&quot;&gt;раздел 4.3.1&lt;/a&gt; ) представляет текущее состояние целевого ресурса, наблюдаемое во время даты создания сообщения ( &lt;a href=&quot;#section-7.1.1.2&quot;&gt;раздел 7.1.1.2).&lt;/a&gt;), в то время как полезная нагрузка того же кода состояния в ответе на POST может представлять либо результат обработки, либо новое состояние целевого ресурса после применения обработки. Ответные сообщения с кодом состояния ошибки обычно содержат полезную нагрузку, которая представляет состояние ошибки, так что она описывает состояние ошибки и то, какие следующие шаги предлагаются для ее устранения. Поля заголовка, которые конкретно описывают полезную нагрузку, а не соответствующее представление, называются &amp;laquo;полями заголовка полезной нагрузки&amp;raquo;. Поля заголовка полезной нагрузки определены в других частях этой спецификации из-за их влияния на синтаксический анализ сообщения. + ------------------- + ---------------------------- + | Имя поля заголовка | Определено в ...| + ------------------- + ---------------------------- + | Content-Length |&lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.3.2&quot;&gt;Раздел 3.3.2 [RFC7230]&lt;/a&gt; | | Content-Range | &lt;a href=&quot;https://tools.ietf.org/html/rfc7233#section-4.2&quot;&gt;Раздел 4.2 [RFC7233]&lt;/a&gt; | | Трейлер | &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-4.4&quot;&gt;Раздел 4.4 [RFC7230]&lt;/a&gt; | | Передача-кодирование | &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.3.1&quot;&gt;Раздел 3.3.1 [RFC7230]&lt;/a&gt; | + ------------------- + ---------------------------- +</target>
        </trans-unit>
        <trans-unit id="96f4cfa3a2435470f520822a7a281fd09a7abe90" translate="yes" xml:space="preserve">
          <source>Some HTTP resources are dynamically generated by the server.  For
   these resources, there presumably exists source code somewhere
   governing how that resource is generated.  The relationship of source
   files to output HTTP resources may be one to one, one to many, many
   to one, or many to many.  There is no mechanism in HTTP to determine
   whether a resource is even dynamic, let alone where its source files
   exist or how to author them.  Although this problem would usefully be
   solved, interoperable WebDAV implementations have been widely
   deployed without actually solving this problem, by dealing only with
   static resources.  Thus, the source vs. output problem is not solved
   in this specification and has been deferred to a separate document.</source>
          <target state="translated">Некоторые HTTP ресурсы динамически генерируются сервером.Для этих ресурсов,предположительно,существует исходный код где-то,регулирующий то,как этот ресурс генерируется.Отношения между исходными файлами для вывода ресурсов HTTP могут быть один к одному,один ко многим,много к одному,или много к многим.В HTTP нет механизма,который бы определял,является ли ресурс вообще динамическим,не говоря уже о том,где существуют его исходные файлы или как их писать.Хотя эта проблема была бы полезна для решения,интероперабельные WebDAV реализации были широко распространены без реального решения этой проблемы,имея дело только со статическими ресурсами.Таким образом,проблема исходного и выходного кода в данной спецификации не решена и отложена в отдельный документ.</target>
        </trans-unit>
        <trans-unit id="9edae38f81cc4e1676b63507df63fb416ecd279a" translate="yes" xml:space="preserve">
          <source>Some HTTP/1.0 software has interpreted a Content-Type header without
   charset parameter incorrectly to mean &quot;recipient should guess.&quot;
   Senders wishing to defeat this behavior MAY include a charset
   parameter even when the charset is ISO-8859-1 and SHOULD do so when
   it is known that it will not confuse the recipient.

   Unfortunately, some older HTTP/1.0 clients did not deal properly with
   an explicit charset parameter. HTTP/1.1 recipients MUST respect the
   charset label provided by the sender; and those user agents that have
   a provision to &quot;guess&quot; a charset MUST use the charset from the 

   content-type field if they support that charset, rather than the
   recipient's preference, when initially displaying a document. See
   &lt;a href=&quot;#section-3.7.1&quot;&gt;section 3.7.1&lt;/a&gt;.</source>
          <target state="translated">Некоторое программное обеспечение HTTP / 1.0 неправильно интерпретировало заголовок Content-Type без параметра charset, что означает &amp;laquo;получатель должен угадать&amp;raquo;. Отправители, желающие обойти это поведение, МОГУТ включить параметр кодировки, даже если кодировка - ISO-8859-1, и ДОЛЖНЫ сделать это, если известно, что это не запутает получателя. К сожалению, некоторые старые клиенты HTTP / 1.0 неправильно обрабатывали явный параметр кодировки. Получатели HTTP / 1.1 ДОЛЖНЫ соблюдать метку кодировки, предоставленную отправителем; и те пользовательские агенты, которые имеют возможность &amp;laquo;угадывать&amp;raquo; кодировку, ДОЛЖНЫ использовать кодировку из поля типа содержимого, если они поддерживают эту кодировку, а не предпочтения получателя при первоначальном отображении документа. См. &lt;a href=&quot;#section-3.7.1&quot;&gt;Раздел 3.7.1&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="76ff9a23340030e08177c96f6cd25b9e75cd64eb" translate="yes" xml:space="preserve">
          <source>Some clients and servers might wish to be compatible with some
   previous implementations of persistent connections in HTTP/1.0
   clients and servers. Persistent connections in HTTP/1.0 are
   explicitly negotiated as they are not the default behavior. HTTP/1.0
   experimental implementations of persistent connections are faulty,
   and the new facilities in HTTP/1.1 are designed to rectify these
   problems. The problem was that some existing 1.0 clients may be
   sending Keep-Alive to a proxy server that doesn't understand
   Connection, which would then erroneously forward it to the next
   inbound server, which would establish the Keep-Alive connection and
   result in a hung HTTP/1.0 proxy waiting for the close on the
   response. The result is that HTTP/1.0 clients must be prevented from
   using Keep-Alive when talking to proxies.

   However, talking to proxies is the most important use of persistent
   connections, so that prohibition is clearly unacceptable. Therefore,
   we need some other mechanism for indicating a persistent connection
   is desired, which is safe to use even when talking to an old proxy
   that ignores Connection. Persistent connections are the default for
   HTTP/1.1 messages; we introduce a new keyword (Connection: close) for
   declaring non-persistence. See &lt;a href=&quot;#section-14.10&quot;&gt;section 14.10&lt;/a&gt;.

   The original HTTP/1.0 form of persistent connections (the Connection:
   Keep-Alive and Keep-Alive header) is documented in &lt;a href=&quot;https://tools.ietf.org/html/rfc2068&quot;&gt;RFC 2068&lt;/a&gt;. [&lt;a href=&quot;#ref-33&quot;&gt;33&lt;/a&gt;]</source>
          <target state="translated">Некоторые клиенты и серверы могут захотеть быть совместимыми с некоторыми предыдущими реализациями постоянных соединений в клиентах и ​​серверах HTTP / 1.0. Постоянные соединения в HTTP / 1.0 явно согласовываются, поскольку они не являются поведением по умолчанию. Экспериментальные реализации постоянных соединений HTTP / 1.0 ошибочны, и новые средства в HTTP / 1.1 предназначены для исправления этих проблем. Проблема заключалась в том, что некоторые существующие клиенты 1.0 могли отправлять Keep-Alive на прокси-сервер, который не понимает Connection, который затем по ошибке перенаправлял его на следующий входящий сервер, который устанавливал соединение Keep-Alive и приводил к зависанию Прокси-сервер HTTP / 1.0 ожидает закрытия ответа. В результате клиенты HTTP / 1.0 не могут использовать Keep-Alive при разговоре с прокси.Однако общение с прокси-серверами - это наиболее важное использование постоянных соединений, поэтому запрет явно неприемлем. Следовательно, нам нужен какой-то другой механизм для указания желательности постоянного соединения, который можно безопасно использовать даже при разговоре со старым прокси-сервером, который игнорирует Connection. Постоянные соединения используются по умолчанию для сообщений HTTP / 1.1; мы вводим новое ключевое слово (Connection: close) для объявления непостоянства. Видетьмы вводим новое ключевое слово (Connection: close) для объявления непостоянства. Видетьмы вводим новое ключевое слово (Connection: close) для объявления непостоянства. Видеть&lt;a href=&quot;#section-14.10&quot;&gt;раздел 14.10&lt;/a&gt; . Исходная форма постоянных соединений HTTP / 1.0 (заголовок Connection: Keep-Alive и Keep-Alive) задокументирована в &lt;a href=&quot;https://tools.ietf.org/html/rfc2068&quot;&gt;RFC 2068&lt;/a&gt; . [ &lt;a href=&quot;#ref-33&quot;&gt;33&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="66a43f342d6b50a7175f69c935c3406eba5914f1" translate="yes" xml:space="preserve">
          <source>Some common incorrect server configurations:</source>
          <target state="translated">Некоторые распространенные некорректные конфигурации серверов:</target>
        </trans-unit>
        <trans-unit id="54f8a5332226dab76bfa931addcda81bcd89ad2c" translate="yes" xml:space="preserve">
          <source>Some content you find may have a &lt;code&gt;charset&lt;/code&gt; parameter at the end of the &lt;code&gt;text/javascript&lt;/code&gt; media type, to specify the character set used to represent the code's content. This is not valid, and in most cases will result in a script not being loaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="089187292034968cbe876df352df70cc7166431a" translate="yes" xml:space="preserve">
          <source>Some directives have an optional argument, which can be either a &lt;em&gt;token&lt;/em&gt; or a &lt;em&gt;quoted-string&lt;/em&gt;. (See spec for definitions)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9270b0f5d6139d14ce495519a232664c8d2acd88" translate="yes" xml:space="preserve">
          <source>Some features of the HTTP/1.1 protocol, such as Digest
   Authentication, depend on the value of certain end-to-end headers. A
   transparent proxy SHOULD NOT modify an end-to-end header unless the
   definition of that header requires or specifically allows that. 

   A transparent proxy MUST NOT modify any of the following fields in a
   request or response, and it MUST NOT add any of these fields if not
   already present:

      - Content-Location

      - Content-MD5

      - ETag

      - Last-Modified

   A transparent proxy MUST NOT modify any of the following fields in a
   response:

      - Expires

   but it MAY add any of these fields if not already present. If an
   Expires header is added, it MUST be given a field-value identical to
   that of the Date header in that response.

   A  proxy MUST NOT modify or add any of the following fields in a
   message that contains the no-transform cache-control directive, or in
   any request:

      - Content-Encoding

      - Content-Range

      - Content-Type

   A non-transparent proxy MAY modify or add these fields to a message
   that does not include no-transform, but if it does so, it MUST add a
   Warning 214 (Transformation applied) if one does not already appear
   in the message (see &lt;a href=&quot;#section-14.46&quot;&gt;section 14.46&lt;/a&gt;).

      Warning: unnecessary modification of end-to-end headers might
      cause authentication failures if stronger authentication
      mechanisms are introduced in later versions of HTTP. Such
      authentication mechanisms MAY rely on the values of header fields
      not listed here.

   The Content-Length field of a request or response is added or deleted
   according to the rules in &lt;a href=&quot;#section-4.4&quot;&gt;section 4.4&lt;/a&gt;. A transparent proxy MUST
   preserve the entity-length (&lt;a href=&quot;#section-7.2.2&quot;&gt;section 7.2.2&lt;/a&gt;) of the entity-body,
   although it MAY change the transfer-length (&lt;a href=&quot;#section-4.4&quot;&gt;section 4.4&lt;/a&gt;).</source>
          <target state="translated">Некоторые функции протокола HTTP / 1.1, такие как дайджест-проверка подлинности, зависят от значения определенных сквозных заголовков. Прозрачному прокси НЕ СЛЕДУЕТ изменять сквозной заголовок, если определение этого заголовка не требует или специально не разрешает этого. Прозрачный прокси НЕ ДОЛЖЕН изменять какие-либо из следующих полей в запросе или ответе, и он НЕ ДОЛЖЕН добавлять какие-либо из этих полей, если они еще не указаны: - Content-Location - Content-MD5 - ETag - Last-Modified Прозрачный прокси НЕ ДОЛЖЕН измените любое из следующих полей в ответе: - Срок действия истекает, но МОЖЕТ добавить любое из этих полей, если оно еще не присутствует. Если добавлен заголовок Expires, ему ДОЛЖНО быть присвоено значение поля, идентичное значению заголовка Date в этом ответе.Прокси-сервер НЕ ДОЛЖЕН изменять или добавлять любое из следующих полей в сообщении, которое содержит директиву управления кешем без преобразования, или в любом запросе: - Content-Encoding - Content-Range - Content-Type Непрозрачный прокси-сервер МОЖЕТ изменять или добавьте эти поля в сообщение, которое не включает no-transform, но если это так, оно ДОЛЖНО добавить Предупреждение 214 (преобразование применено), если оно еще не появилось в сообщении (см.он ДОЛЖЕН добавить предупреждение 214 (преобразование применено), если оно еще не появилось в сообщении (см.он ДОЛЖЕН добавить предупреждение 214 (преобразование применено), если оно еще не появляется в сообщении (см.&lt;a href=&quot;#section-14.46&quot;&gt;раздел 14.46&lt;/a&gt; ). Предупреждение: ненужная модификация сквозных заголовков может вызвать сбои аутентификации, если более строгие механизмы аутентификации введены в более поздних версиях HTTP. Такие механизмы аутентификации МОГУТ полагаться на значения полей заголовка, не перечисленные здесь. Поле Content-Length запроса или ответа добавляется или удаляется в соответствии с правилами в &lt;a href=&quot;#section-4.4&quot;&gt;разделе 4.4&lt;/a&gt; . Прозрачный прокси-сервер ДОЛЖЕН сохранять длину объекта ( &lt;a href=&quot;#section-7.2.2&quot;&gt;раздел 7.2.2&lt;/a&gt; ) тела объекта, хотя он МОЖЕТ изменить длину передачи ( &lt;a href=&quot;#section-4.4&quot;&gt;раздел 4.4&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="08d40ce154c5b61338b36a1b4a7b8fc44f8f33e3" translate="yes" xml:space="preserve">
          <source>Some formats can be used for both loss-less or lossy compression, like &lt;code&gt;webp&lt;/code&gt;, and usually lossy algorithm can be configured to compress more or less, which then of course leads to less or more quality. For better performance of a Web site, it is ideal to compress as much as possible, while keeping an acceptable level of quality. For images, an image generated by a tool could be not optimized enough for the Web; it is recommended to use tools that will compress as much as possible with the required quality. There are &lt;a href=&quot;http://www.creativebloq.com/design/image-compression-tools-1132865&quot;&gt;numerous tools&lt;/a&gt; that are specialized for this.</source>
          <target state="translated">Некоторые форматы могут использоваться как для сжатия без потерь, так и для сжатия с потерями, например &lt;code&gt;webp&lt;/code&gt; , и обычно алгоритм с потерями может быть настроен на большее или меньшее сжатие, что, конечно же, приводит к меньшему или большему качеству. Для повышения производительности веб-сайта лучше всего сжать как можно больше при сохранении приемлемого уровня качества. Что касается изображений, то изображение, созданное инструментом, может быть недостаточно оптимизировано для Интернета; рекомендуется использовать инструменты, которые максимально сжимают с требуемым качеством. Для этого существует &lt;a href=&quot;http://www.creativebloq.com/design/image-compression-tools-1132865&quot;&gt;множество&lt;/a&gt; специализированных инструментов .</target>
        </trans-unit>
        <trans-unit id="36517fc724d6e21ec48094bdd3611e8bc2aeefbc" translate="yes" xml:space="preserve">
          <source>Some formats can be used for both loss-less or lossy compression, like &lt;code&gt;webp&lt;/code&gt;, and usually lossy algorithm can be configured to compress more or less, which then of course leads to less or more quality. For better performance of a Web site, it is ideal to compress as much as possible, while keeping an acceptable level of quality. For images, an image generated by a tool could be not optimized enough for the Web; it is recommended to use tools that will compress as much as possible with the required quality. There are &lt;a href=&quot;https://www.creativebloq.com/design/image-compression-tools-1132865&quot;&gt;numerous tools&lt;/a&gt; that are specialized for this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65ac20f104a927276bcef1c71021955f476f1866" translate="yes" xml:space="preserve">
          <source>Some intermediaries include features for transforming messages and
   their payloads.  A proxy might, for example, convert between image
   formats in order to save cache space or to reduce the amount of
   traffic on a slow link.  However, operational problems might occur
   when these transformations are applied to payloads intended for
   critical applications, such as medical imaging or scientific data
   analysis, particularly when integrity checks or digital signatures
   are used to ensure that the payload received is identical to the
   original.

   An HTTP-to-HTTP proxy is called a &quot;transforming proxy&quot; if it is
   designed or configured to modify messages in a semantically
   meaningful way (i.e., modifications, beyond those required by normal
   HTTP processing, that change the message in a way that would be
   significant to the original sender or potentially significant to
   downstream recipients).  For example, a transforming proxy might be
   acting as a shared annotation server (modifying responses to include
   references to a local annotation database), a malware filter, a
   format transcoder, or a privacy filter.  Such transformations are
   presumed to be desired by whichever client (or client organization)
   selected the proxy.

   If a proxy receives a request-target with a host name that is not a
   fully qualified domain name, it MAY add its own domain to the host
   name it received when forwarding the request.  A proxy MUST NOT
   change the host name if the request-target contains a fully qualified
   domain name. 

   A proxy MUST NOT modify the &quot;absolute-path&quot; and &quot;query&quot; parts of the
   received request-target when forwarding it to the next inbound
   server, except as noted above to replace an empty path with &quot;/&quot; or
   &quot;*&quot;.

   A proxy MAY modify the message body through application or removal of
   a transfer coding (&lt;a href=&quot;#section-4&quot;&gt;Section 4&lt;/a&gt;).

   A proxy MUST NOT transform the payload (&lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-3.3&quot;&gt;Section&amp;nbsp;3.3 of [RFC7231]&lt;/a&gt;) of
   a message that contains a no-transform cache-control directive
   (&lt;a href=&quot;https://tools.ietf.org/html/rfc7234#section-5.2&quot;&gt;Section&amp;nbsp;5.2 of [RFC7234]&lt;/a&gt;).

   A proxy MAY transform the payload of a message that does not contain
   a no-transform cache-control directive.  A proxy that transforms a
   payload MUST add a Warning header field with the warn-code of 214
   (&quot;Transformation Applied&quot;) if one is not already in the message (see
   &lt;a href=&quot;https://tools.ietf.org/html/rfc7234#section-5.5&quot;&gt;Section&amp;nbsp;5.5 of [RFC7234]&lt;/a&gt;).  A proxy that transforms the payload of a
   200 (OK) response can further inform downstream recipients that a
   transformation has been applied by changing the response status code
   to 203 (Non-Authoritative Information) (&lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-6.3.4&quot;&gt;Section&amp;nbsp;6.3.4 of [RFC7231]&lt;/a&gt;).

   A proxy SHOULD NOT modify header fields that provide information
   about the endpoints of the communication chain, the resource state,
   or the selected representation (other than the payload) unless the
   field's definition specifically allows such modification or the
   modification is deemed necessary for privacy or security.</source>
          <target state="translated">Некоторые посредники включают функции для преобразования сообщений и их полезной нагрузки. Прокси-сервер может, например, преобразовывать между форматами изображений, чтобы сэкономить место в кэше или уменьшить объем трафика по медленному каналу. Однако могут возникнуть эксплуатационные проблемы, когда эти преобразования применяются к полезной нагрузке, предназначенной для критически важных приложений, таких как получение медицинских изображений или анализ научных данных, особенно когда используются проверки целостности или цифровые подписи, чтобы гарантировать, что полученная полезная нагрузка идентична исходной. Прокси-сервер HTTP-to-HTTP называется &amp;laquo;прокси-сервером преобразования&amp;raquo;, если он разработан или настроен для изменения сообщений семантически значимым образом (т. Е. Модификации, выходящие за рамки тех, которые требуются при нормальной обработке HTTP,которые изменяют сообщение таким образом, чтобы это было важно для исходного отправителя или потенциально значимо для последующих получателей). Например, преобразующий прокси-сервер может действовать как общий сервер аннотаций (изменяя ответы для включения ссылок на локальную базу аннотаций), фильтр вредоносных программ, транскодер формата или фильтр конфиденциальности. Предполагается, что такие преобразования желательны для любого клиента (или клиентской организации), выбравшего прокси. Если прокси-сервер получает цель запроса с именем хоста, которое не является полностью определенным доменным именем, он МОЖЕТ добавить свой собственный домен к имени хоста, полученному при пересылке запроса. Прокси-сервер НЕ ДОЛЖЕН изменять имя хоста, если цель запроса содержит полное доменное имя. Прокси-сервер НЕ ДОЛЖЕН изменять &quot;absolute-path&quot; и &quot;query &quot;части полученного запроса-цели при пересылке его на следующий входящий сервер, за исключением случаев, указанных выше для замены пустого пути на&quot; / &quot;или&quot; * &quot;. Прокси-сервер МОЖЕТ изменить тело сообщения через приложение или удаление передачи кодирование (&lt;a href=&quot;#section-4&quot;&gt;Раздел 4&lt;/a&gt; ). Прокси-сервер НЕ ДОЛЖЕН преобразовывать полезную нагрузку ( &lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-3.3&quot;&gt;раздел 3.3 [RFC7231]&lt;/a&gt; ) сообщения, которое содержит директиву управления кешем без преобразования ( &lt;a href=&quot;https://tools.ietf.org/html/rfc7234#section-5.2&quot;&gt;раздел 5.2 [RFC7234]&lt;/a&gt; ). Прокси-сервер МОЖЕТ преобразовать полезную нагрузку сообщения, которое не содержит директивы управления кешем без преобразования. Прокси-сервер, преобразующий полезную нагрузку, ДОЛЖЕН добавить поле заголовка предупреждения с кодом предупреждения 214 (&amp;laquo;Преобразование применено&amp;raquo;), если его еще нет в сообщении (см. &lt;a href=&quot;https://tools.ietf.org/html/rfc7234#section-5.5&quot;&gt;Раздел 5.5 [RFC7234]&lt;/a&gt; ). Прокси-сервер, который преобразует полезную нагрузку ответа 200 (OK), может дополнительно информировать нижестоящих получателей о том, что преобразование было применено, изменяя код состояния ответа на 203 (Неавторизованная информация) (&lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-6.3.4&quot;&gt;Раздел 6.3.4 [RFC7231]&lt;/a&gt; ). Прокси-серверу НЕ СЛЕДУЕТ изменять поля заголовка, которые предоставляют информацию о конечных точках цепочки связи, состоянии ресурса или выбранном представлении (кроме полезной нагрузки), если определение поля специально не разрешает такую ​​модификацию или изменение считается необходимым для конфиденциальности или безопасности. ,</target>
        </trans-unit>
        <trans-unit id="eac57a1de8acde9c46e58fb564a5c63eef8c02df" translate="yes" xml:space="preserve">
          <source>Some of these new methods do not define bodies.  Servers MUST examine
   all requests for a body, even when a body was not expected.  In cases
   where a request body is present but would be ignored by a server, the
   server MUST reject the request with 415 (Unsupported Media Type).
   This informs the client (which may have been attempting to use an
   extension) that the body could not be processed as the client
   intended.</source>
          <target state="translated">Некоторые из этих новых методов не определяют тела.Серверы ДОЛЖНЫ рассматривать все запросы к телу,даже когда тело не ожидалось.В тех случаях,когда тело запроса присутствует,но сервер игнорирует его,сервер ДОЛЖЕН отклонить запрос с помощью 415 (Unsupported Media Type).Это информирует клиента (который,возможно,пытался использовать расширение)о том,что тело не может быть обработано так,как предполагалось клиентом.</target>
        </trans-unit>
        <trans-unit id="4e4cf2038e1894371084626084a37cd3855e9122" translate="yes" xml:space="preserve">
          <source>Some origin server implementations might not have a clock available.
   An origin server without a clock MUST NOT assign Expires or Last-
   Modified values to a response, unless these values were associated
   with the resource by a system or user with a reliable clock. It MAY
   assign an Expires value that is known, at or before server
   configuration time, to be in the past (this allows &quot;pre-expiration&quot;
   of responses without storing separate Expires values for each
   resource).</source>
          <target state="translated">Некоторые реализации исходных серверов могут не иметь часов.Исходный сервер без часов НЕ ДОЛЖЕН присваивать ответу истечения срока действия или последние измененные значения,если только эти значения не были связаны с ресурсом системой или пользователем с надежными часами.Он МОЖЕТ присвоить значение &quot;Истечение&quot;,которое известно,в или до времени конфигурации сервера,чтобы быть в прошлом (это позволяет &quot;предварительное истечение&quot; ответов без хранения отдельных значений &quot;Истечение&quot; для каждого ресурса).</target>
        </trans-unit>
        <trans-unit id="03c3e50ec8cb12cf3acddc31b3a981323a1ddf6c" translate="yes" xml:space="preserve">
          <source>Some pages may be protected so only specific users can access it. Basic authentication may be provided by HTTP, either using the &lt;a href=&quot;headers/www-authenticate&quot;&gt;&lt;code&gt;WWW-Authenticate&lt;/code&gt;&lt;/a&gt; and similar headers, or by setting a specific session using &lt;a href=&quot;cookies&quot;&gt;HTTP cookies&lt;/a&gt;.</source>
          <target state="translated">Некоторые страницы могут быть защищены, поэтому к ним могут получить доступ только определенные пользователи. Базовая аутентификация может быть предоставлена ​​с помощью HTTP, либо с использованием &lt;a href=&quot;headers/www-authenticate&quot;&gt; &lt;code&gt;WWW-Authenticate&lt;/code&gt; &lt;/a&gt; и аналогичных заголовков, либо путем установки определенного сеанса с использованием &lt;a href=&quot;cookies&quot;&gt;файлов cookie HTTP&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9d9fd2b2a9f9cc9b203fa68ab92a78cbe025ac65" translate="yes" xml:space="preserve">
          <source>Some pages may be protected so that only specific users can access them. Basic authentication may be provided by HTTP, either using the &lt;a href=&quot;headers/www-authenticate&quot;&gt;&lt;code&gt;WWW-Authenticate&lt;/code&gt;&lt;/a&gt; and similar headers, or by setting a specific session using &lt;a href=&quot;cookies&quot;&gt;HTTP cookies&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a7d1f4b13e76bd620feb3c514de20a064d7ef93" translate="yes" xml:space="preserve">
          <source>Some proxy servers might need authority to create a tunnel. See also the &lt;a href=&quot;../headers/proxy-authorization&quot;&gt;&lt;code&gt;Proxy-Authorization&lt;/code&gt;&lt;/a&gt; header.</source>
          <target state="translated">Некоторым прокси-серверам могут потребоваться полномочия для создания туннеля. См. Также заголовок &lt;a href=&quot;../headers/proxy-authorization&quot;&gt; &lt;code&gt;Proxy-Authorization&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f0fe168232211ebb71557e7e371b951b8fb141f8" translate="yes" xml:space="preserve">
          <source>Some requests don&amp;rsquo;t trigger a &lt;a href=&quot;#Preflighted_requests&quot;&gt;CORS preflight&lt;/a&gt;. Those are called &amp;ldquo;simple requests&amp;rdquo; in this article, though the &lt;a href=&quot;https://fetch.spec.whatwg.org/&quot;&gt;Fetch&lt;/a&gt; spec (which defines CORS) doesn&amp;rsquo;t use that term. A request that doesn&amp;rsquo;t trigger a &lt;a href=&quot;#Preflighted_requests&quot;&gt;CORS preflight&lt;/a&gt;&amp;mdash;a so-called &amp;ldquo;simple request&amp;rdquo; &amp;mdash; is one that &lt;strong&gt;meets all the following conditions&lt;/strong&gt;:</source>
          <target state="translated">Некоторые запросы не запускают предварительную &lt;a href=&quot;#Preflighted_requests&quot;&gt;проверку CORS&lt;/a&gt; . В этой статье они называются &amp;laquo;простыми запросами&amp;raquo;, хотя в спецификации &lt;a href=&quot;https://fetch.spec.whatwg.org/&quot;&gt;Fetch&lt;/a&gt; (которая определяет CORS) этот термин не используется. Запрос, который не запускает предварительную &lt;a href=&quot;#Preflighted_requests&quot;&gt;проверку CORS&lt;/a&gt; - так называемый &amp;laquo;простой запрос&amp;raquo; - это тот, который &lt;strong&gt;удовлетворяет всем следующим условиям&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="9dcff009cb4590f1396339dc97ee7e3c2dfd40fa" translate="yes" xml:space="preserve">
          <source>Some requests don&amp;rsquo;t trigger a &lt;a href=&quot;#Preflighted_requests&quot;&gt;CORS preflight&lt;/a&gt;. Those are called &lt;em&gt;&amp;ldquo;simple requests&amp;rdquo;&lt;/em&gt; in this article, though the &lt;a href=&quot;https://fetch.spec.whatwg.org/&quot;&gt;Fetch&lt;/a&gt; spec (which defines CORS) doesn&amp;rsquo;t use that term. A &amp;ldquo;simple request&amp;rdquo; is one that &lt;strong&gt;meets all the following conditions&lt;/strong&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b7772fe71270600ccf3a3236874e99cde15c3a7" translate="yes" xml:space="preserve">
          <source>Some requests may need more time on the server like sometimes &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/DELETE&quot;&gt;&lt;code&gt;DELETE&lt;/code&gt;&lt;/a&gt; requests that are scheduled for later processing. In this case, the response is a &lt;a href=&quot;status/303&quot;&gt;&lt;code&gt;303&lt;/code&gt;&lt;/a&gt; (See Other) redirect that links to a page indicating that the action has been scheduled, and eventually informs about the progress, or allows to cancel it.</source>
          <target state="translated">Некоторым запросам может потребоваться больше времени на сервере, например, иногда запросам &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/DELETE&quot;&gt; &lt;code&gt;DELETE&lt;/code&gt; &lt;/a&gt; , которые запланированы для последующей обработки. В этом случае ответ представляет собой перенаправление &lt;a href=&quot;status/303&quot;&gt; &lt;code&gt;303&lt;/code&gt; &lt;/a&gt; (см. Прочее), которое ссылается на страницу, указывающую, что действие было запланировано, и в конечном итоге информирует о ходе выполнения или позволяет отменить его.</target>
        </trans-unit>
        <trans-unit id="e69ac0ff78ca934a19fc41226c03d69cd112b823" translate="yes" xml:space="preserve">
          <source>Some requests may need more time on the server, like &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/DELETE&quot;&gt;&lt;code&gt;DELETE&lt;/code&gt;&lt;/a&gt; requests that are scheduled for later processing. In this case, the response is a &lt;a href=&quot;status/303&quot;&gt;&lt;code&gt;303&lt;/code&gt;&lt;/a&gt; (See Other) redirect that links to a page indicating that the action has been scheduled, and eventually informs about its progress, or allows to cancel it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="932d714aa9986fefde686199be3c38ba8d61e288" translate="yes" xml:space="preserve">
          <source>Some sections of this specification are illustrated with fragments of
   a non-normative RELAX NG Compact schema [&lt;a href=&quot;#ref-RNC&quot;&gt;RNC&lt;/a&gt;].  However, the text of
   this specification provides the definition of conformance.  Complete
   schemas appear in &lt;a href=&quot;#appendix-B&quot;&gt;Appendix B&lt;/a&gt;.</source>
          <target state="translated">Некоторые разделы этой спецификации проиллюстрированы фрагментами ненормативной схемы RELAX NG Compact [ &lt;a href=&quot;#ref-RNC&quot;&gt;RNC&lt;/a&gt; ]. Однако в тексте данной спецификации дается определение соответствия. Полные схемы появляются в &lt;a href=&quot;#appendix-B&quot;&gt;приложении Б&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cbcfbee9d39daa00061999fcaad831841c2ed71a" translate="yes" xml:space="preserve">
          <source>Some websites use this response for requests they do not wish to handle, such as automated queries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf1960a9dab8a69c52ce013a2615773d1727df49" translate="yes" xml:space="preserve">
          <source>Sometimes a user agent might want or need to insist that a cache
   revalidate its cache entry with the origin server (and not just with
   the next cache along the path to the origin server), or to reload its
   cache entry from the origin server. End-to-end revalidation might be
   necessary if either the cache or the origin server has overestimated
   the expiration time of the cached response. End-to-end reload may be
   necessary if the cache entry has become corrupted for some reason.

   End-to-end revalidation may be requested either when the client does
   not have its own local cached copy, in which case we call it
   &quot;unspecified end-to-end revalidation&quot;, or when the client does have a
   local cached copy, in which case we call it &quot;specific end-to-end
   revalidation.&quot;

   The client can specify these three kinds of action using Cache-
   Control request directives:

   End-to-end reload
      The request includes a &quot;no-cache&quot; cache-control directive or, for
      compatibility with HTTP/1.0 clients, &quot;Pragma: no-cache&quot;. Field
      names MUST NOT be included with the no-cache directive in a
      request. The server MUST NOT use a cached copy when responding to
      such a request.

   Specific end-to-end revalidation
      The request includes a &quot;max-age=0&quot; cache-control directive, which
      forces each cache along the path to the origin server to
      revalidate its own entry, if any, with the next cache or server.
      The initial request includes a cache-validating conditional with
      the client's current validator.

   Unspecified end-to-end revalidation
      The request includes &quot;max-age=0&quot; cache-control directive, which
      forces each cache along the path to the origin server to
      revalidate its own entry, if any, with the next cache or server.
      The initial request does not include a cache-validating 

      conditional; the first cache along the path (if any) that holds a
      cache entry for this resource includes a cache-validating
      conditional with its current validator.

   max-age
      When an intermediate cache is forced, by means of a max-age=0
      directive, to revalidate its own cache entry, and the client has
      supplied its own validator in the request, the supplied validator
      might differ from the validator currently stored with the cache
      entry. In this case, the cache MAY use either validator in making
      its own request without affecting semantic transparency.

      However, the choice of validator might affect performance. The
      best approach is for the intermediate cache to use its own
      validator when making its request. If the server replies with 304
      (Not Modified), then the cache can return its now validated copy
      to the client with a 200 (OK) response. If the server replies with
      a new entity and cache validator, however, the intermediate cache
      can compare the returned validator with the one provided in the
      client's request, using the strong comparison function. If the
      client's validator is equal to the origin server's, then the
      intermediate cache simply returns 304 (Not Modified). Otherwise,
      it returns the new entity with a 200 (OK) response.

      If a request includes the no-cache directive, it SHOULD NOT
      include min-fresh, max-stale, or max-age.

   only-if-cached
      In some cases, such as times of extremely poor network
      connectivity, a client may want a cache to return only those
      responses that it currently has stored, and not to reload or
      revalidate with the origin server. To do this, the client may
      include the only-if-cached directive in a request. If it receives
      this directive, a cache SHOULD either respond using a cached entry
      that is consistent with the other constraints of the request, or
      respond with a 504 (Gateway Timeout) status. However, if a group
      of caches is being operated as a unified system with good internal
      connectivity, such a request MAY be forwarded within that group of
      caches.

   must-revalidate
      Because a cache MAY be configured to ignore a server's specified
      expiration time, and because a client request MAY include a max-
      stale directive (which has a similar effect), the protocol also
      includes a mechanism for the origin server to require revalidation
      of a cache entry on any subsequent use. When the must-revalidate
      directive is present in a response received by a cache, that cache
      MUST NOT use the entry after it becomes stale to respond to a 

      subsequent request without first revalidating it with the origin
      server. (I.e., the cache MUST do an end-to-end revalidation every
      time, if, based solely on the origin server's Expires or max-age
      value, the cached response is stale.)

      The must-revalidate directive is necessary to support reliable
      operation for certain protocol features. In all circumstances an
      HTTP/1.1 cache MUST obey the must-revalidate directive; in
      particular, if the cache cannot reach the origin server for any
      reason, it MUST generate a 504 (Gateway Timeout) response.

      Servers SHOULD send the must-revalidate directive if and only if
      failure to revalidate a request on the entity could result in
      incorrect operation, such as a silently unexecuted financial
      transaction. Recipients MUST NOT take any automated action that
      violates this directive, and MUST NOT automatically provide an
      unvalidated copy of the entity if revalidation fails.

      Although this is not recommended, user agents operating under
      severe connectivity constraints MAY violate this directive but, if
      so, MUST explicitly warn the user that an unvalidated response has
      been provided. The warning MUST be provided on each unvalidated
      access, and SHOULD require explicit user confirmation.

   proxy-revalidate
      The proxy-revalidate directive has the same meaning as the must-
      revalidate directive, except that it does not apply to non-shared
      user agent caches. It can be used on a response to an
      authenticated request to permit the user's cache to store and
      later return the response without needing to revalidate it (since
      it has already been authenticated once by that user), while still
      requiring proxies that service many users to revalidate each time
      (in order to make sure that each user has been authenticated).
      Note that such authenticated responses also need the public cache
      control directive in order to allow them to be cached at all.</source>
          <target state="translated">Иногда пользовательский агент может захотеть или потребовать,чтобы кэш перепроверял запись в кэше на исходном сервере (а не только на следующем кэше по пути к исходному серверу),или чтобы он перезагрузил запись в кэше с исходного сервера.Повторная проверка может быть необходима,если либо кэш,либо исходный сервер завысили время истечения срока действия ответа в кэше.Полная перезагрузка может быть необходима,если запись в кэше была повреждена по какой-либо причине.Сверхзавершенная переаттестация может быть запрошена либо когда клиент не имеет собственной локальной кэшированной копии,в этом случае мы называем ее &quot;неуказанная сквозная переаттестация&quot;,либо когда клиент имеет локальную кэшированную копию,в этом случае мы называем ее &quot;специфическая сквозная переаттестация&quot;.Клиент может указать эти три вида действий,используя директивы Cache-Control request directives:Сквозная перезагрузка Запрос включает в себя директиву контроля кэша &quot;no-cache&quot; или,для совместимости с клиентами HTTP/1.0,&quot;Pragma:no-cache&quot;.Имена полей НЕ ДОЛЖНЫ включаться в запрос с помощью директивы no-cache.Сервер НЕ ДОЛЖЕН использовать кэшированную копию при ответе на такой запрос.Конкретная сквозная ревизия Запрос включает в себя директиву управления кэшем &quot;max-age=0&quot;,которая заставляет каждый кэш по пути к исходному серверу повторять свою запись,если таковая имеется,со следующим кэшем или сервером.Начальный запрос включает условие проверки кэша с текущим валидатором клиента.Неопределённая сквозная проверка Запрос включает директиву управления кэшем &quot;max-age=0&quot;,которая заставляет каждый кэш по пути к серверу-источнику проверять свой собственный элемент,если таковой имеется,со следующим кэшем или сервером.Исходный запрос не включает условие проверки кэша;первый кэш по пути (если есть),который содержит запись в кэше для этого ресурса,включает условие проверки кэша с текущим валидатором.max-age Когда промежуточный кэш принудительно перепроверяет свою запись в кэше с помощью директивы max-age=0 и клиент предоставил в запрос свой валидатор,предоставленный валидатор может отличаться от валидатора,который хранится в кэше в данный момент.В этом случае кэш MAY использует любой валидатор в своем запросе,не влияя на семантическую прозрачность.Однако,выбор валидатора может повлиять на производительность.Лучше всего промежуточный кэш использовать свой собственный валидатор при выполнении запроса.Если сервер отвечает 304 (не изменен),то кэш может вернуть клиенту свою валидационную копию с ответом 200 (ОК).Если же сервер отвечает новой сущностью и кэширует валидатор,то промежуточный кэш может сравнить возвращенный валидатор с тем,который был указан в запросе клиента,используя функцию сильного сравнения.Если валидатор клиента равен серверу-источнику,то промежуточный кэш просто возвращает 304 (Не изменен).В противном случае он возвращает новую сущность с ответом 200 (OK).Если запрос включает директиву no-cache,он НЕ ДОЛЖЕН включать min-fresh,max-stale или max-age.only-if-cached В некоторых случаях,например,при крайне плохом сетевом подключении,клиент может захотеть,чтобы кэш возвращал только те ответы,которые он в настоящее время сохранил,а не перезагружал или перепроверял с исходным сервером.Для этого клиент может включить директиву only-if-cached в запрос.Если он получает эту директиву,то кэш ДОЛЖЕН либо ответить,используя кэшированную запись,соответствующую другим ограничениям запроса,либо ответить со статусом 504 (Gateway Timeout).Однако,если группа кэшей работает как единая система с хорошим внутренним подключением,такой запрос MAY должен быть переадресован внутри этой группы кэшей.must-revalidate Поскольку кэш MAY должен быть настроен на игнорирование указанного сервером времени истечения срока действия,и поскольку клиентский запрос MAY включает директиву max-stale (которая имеет аналогичный эффект),протокол также включает механизм,при котором сервер-источник требует повторной проверки записи в кэше при любом ее последующем использовании.Когда директива must-revalidate присутствует в ответе,полученном кэшем,этот кэш НЕ ДОЛЖЕН использовать запись после того,как она станет черствой,для ответа на последующий запрос без предварительной переоценки на исходном сервере.(Т.е.,кэш ДОЛЖЕН делать полную проверку каждый раз,если,основываясь исключительно на истечении срока годности или максимальном значении возраста,кэшированный ответ является &quot;черствым&quot;).Директива must-revalidate необходима для поддержки надежной работы определенных функций протокола.При любых обстоятельствах HTTP/1.1 кэш ДОЛЖЕН подчиняться директиве must-revalidate;в частности,если кэш не может по какой-либо причине добраться до исходного сервера,он ДОЛЖЕН сгенерировать ответ 504 (Gateway Timeout-таймаут шлюза).Серверы ДОЛЖНЫ посылать директиву must-revalidate,если и только в том случае,если отказ в повторной проверке запроса на сущность может привести к некорректной работе,например,к беззвучной невыполненной финансовой транзакции.Получатели НЕ ДОЛЖНЫ предпринимать никаких автоматических действий.</target>
        </trans-unit>
        <trans-unit id="f28c6b808e20b5e65f433eb5b11613875d49c1a2" translate="yes" xml:space="preserve">
          <source>Sometimes the requested resource can't be accessed from its canonical location, but it can be accessed from another place. In this case, a temporary redirect can be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0f13543920ce2519c90532c2d9391d9d564cd65" translate="yes" xml:space="preserve">
          <source>Sometimes the requested resource cannot be accessed from its canonical location, but it can be accessed from another place. In this case, a temporary redirect can be used. Search engine robots don't memorize the new, temporary link. Temporary redirections are also used when creating, updating and deleting resources to present temporary progress pages.</source>
          <target state="translated">Иногда запрашиваемый ресурс не может быть доступен из его канонического расположения,но может быть доступен из другого места.В этом случае может быть использован временный редирект.Роботы поисковых систем не запоминают новую,временную ссылку.Временные перенаправления также используются при создании,обновлении и удалении ресурсов для представления временных страниц прогресса.</target>
        </trans-unit>
        <trans-unit id="d332abe855c0a9991ccf162c5e9b1e9be151b36a" translate="yes" xml:space="preserve">
          <source>Sometimes, the server won't detect it: a redirection loop can spread over several servers which each don't have the full picture. In this case, browsers will detect it and display an error message. Firefox displays:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f8875e5296a70a5c55485d7837e9b58660f6869" translate="yes" xml:space="preserve">
          <source>Sometimes, the server won't detect it: a redirection loop can spread over several servers which each don't have the full picture. In this case, browsers will detect it and post an error message. Firefox will display:</source>
          <target state="translated">Иногда сервер этого не обнаруживает:цикл перенаправления может распространяться на несколько серверов,каждый из которых не имеет полной картины.В этом случае браузеры обнаружат его и выдадут сообщение об ошибке.Отобразится Firefox:</target>
        </trans-unit>
        <trans-unit id="461f6249960b9f5e0adb518e83fe6728e5a1aa14" translate="yes" xml:space="preserve">
          <source>Source Map Revision 3 Proposal</source>
          <target state="translated">Карта источника Пересмотр 3 Предложение</target>
        </trans-unit>
        <trans-unit id="48a37d9cb6f83141d7762830d6d9b21396138f77" translate="yes" xml:space="preserve">
          <source>Source code of the resource</source>
          <target state="translated">Исходный код ресурса</target>
        </trans-unit>
        <trans-unit id="eddadabaed64a1c9704679bf2c71541b37a9a200" translate="yes" xml:space="preserve">
          <source>SourceMap</source>
          <target state="translated">SourceMap</target>
        </trans-unit>
        <trans-unit id="2eb56be3c2d93cdab0c52e677e3167dfddb30ac5" translate="yes" xml:space="preserve">
          <source>Sources</source>
          <target state="translated">Sources</target>
        </trans-unit>
        <trans-unit id="7c23b0d99698b57c5cb21fafcb8a8daf127386c6" translate="yes" xml:space="preserve">
          <source>Speaker</source>
          <target state="translated">Speaker</target>
        </trans-unit>
        <trans-unit id="65fa5e6b8d558cde85a3a07a4e444c679377961e" translate="yes" xml:space="preserve">
          <source>Special redirections</source>
          <target state="translated">Специальные перенаправления</target>
        </trans-unit>
        <trans-unit id="1432da84229d762b613e72e68e00057a594449c8" translate="yes" xml:space="preserve">
          <source>Specific &lt;a href=&quot;headers&quot;&gt;HTTP headers&lt;/a&gt; by the client (&lt;em&gt;server-driven negotiation&lt;/em&gt; or &lt;em&gt;proactive negotiation&lt;/em&gt;), which is the standard way of negotiating a specific kind of resource.</source>
          <target state="translated">Конкретные &lt;a href=&quot;headers&quot;&gt;HTTP-заголовки&lt;/a&gt; клиента ( &lt;em&gt;согласование на основе сервера&lt;/em&gt; или &lt;em&gt;упреждающее согласование&lt;/em&gt; ), что является стандартным способом согласования определенного типа ресурса.</target>
        </trans-unit>
        <trans-unit id="1ccf5d25dfedda0749e3abb6685b56a5fed8013a" translate="yes" xml:space="preserve">
          <source>Specification</source>
          <target state="translated">Specification</target>
        </trans-unit>
        <trans-unit id="0c709f9886c34419d95252da6707fd3dc704a220" translate="yes" xml:space="preserve">
          <source>Specifications</source>
          <target state="translated">Specifications</target>
        </trans-unit>
        <trans-unit id="30d32085a077fd1f486b08c98f4d346c5a6b17fc" translate="yes" xml:space="preserve">
          <source>Specifications and RFCs:</source>
          <target state="translated">Спецификации и КСФ:</target>
        </trans-unit>
        <trans-unit id="07b2551feb0b78f2ae3f0674493bd2ba4c495576" translate="yes" xml:space="preserve">
          <source>Specifies GET, HEAD, POST, PUT, DELETE, CONNECT, OPTIONS, TRACE.</source>
          <target state="translated">Определяет ПОСТАВКУ,ГОТОВКУ,ПОСТ,УДАЛЕНИЕ,СОЕДИНЕНИЕ,ВАРИАНТЫ,ТРЕЙС.</target>
        </trans-unit>
        <trans-unit id="c58c8c11265fc2163fd1c23b0043a730d6d564bd" translate="yes" xml:space="preserve">
          <source>Specifies PATCH.</source>
          <target state="translated">Определяет PATCH.</target>
        </trans-unit>
        <trans-unit id="99d3f27b2e59be204c52c5c9fc1e3fd32e5425f2" translate="yes" xml:space="preserve">
          <source>Specifies a URI that may see the timing resources. You can specify multiple origins, separated by commas.</source>
          <target state="translated">Определяет URI,который может видеть временные ресурсы.Вы можете указать несколько источников,разделенных запятыми.</target>
        </trans-unit>
        <trans-unit id="a3dc214da21e1ecdb977da6e15c1694d398e424b" translate="yes" xml:space="preserve">
          <source>Specifies an origin. Only a single origin can be specified.</source>
          <target state="translated">Определяет происхождение.Можно указать только одно происхождение.</target>
        </trans-unit>
        <trans-unit id="0e8dd4aed544a9115516fcba2b2e3d1772b43815" translate="yes" xml:space="preserve">
          <source>Specifies an origin. Only a single origin can be specified. If the server supports clients from multiple origins, it must return the origin for the specific client making the request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08522ebb29d8c09aa8e3393f359476bbe00317a0" translate="yes" xml:space="preserve">
          <source>Specifies directives for caching mechanisms in both requests and responses.</source>
          <target state="translated">Определяет директивы для механизмов кэширования как в запросах,так и в ответах.</target>
        </trans-unit>
        <trans-unit id="149c7938c7e3b3f09b90de06c72ca9aaa91e52c2" translate="yes" xml:space="preserve">
          <source>Specifies if a cross-domain policy file (&lt;code&gt;crossdomain.xml&lt;/code&gt;) is allowed. The file may define a policy to grant clients, such as Adobe's Flash Player (now obsolete), Adobe Acrobat, Microsoft Silverlight (now obsolete), or Apache Flex, permission to handle data across domains that would otherwise be restricted due to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy&quot;&gt;Same-Origin Policy&lt;/a&gt;. See the &lt;a href=&quot;https://www.adobe.com/devnet/articles/crossdomain_policy_file_spec.html&quot;&gt;Cross-domain Policy File Specification&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ac472e4fe7931170e92aa9f011df74fb8e68f3a" translate="yes" xml:space="preserve">
          <source>Specifies if a cross-domain policy-file (XML) is allowed. The file may define a policy to grant web clients, such as Adobe Flash Player or Adobe Acrobat (e.g. PDF), permission to handle data across domains.</source>
          <target state="translated">Указывает,разрешен ли междоменный полицейский файл (XML).Файл может определять политику предоставления веб-клиентам,таким как Adobe Flash Player или Adobe Acrobat (например,PDF),разрешения на обработку данных между доменами.</target>
        </trans-unit>
        <trans-unit id="b9cbaf8eb79c9b8c4855be6b0eca34e758b86401" translate="yes" xml:space="preserve">
          <source>Specifies one or more protocol-level WebSocket extensions to ask the server to use. Using more than one &lt;code&gt;Sec-WebSocket-Extension&lt;/code&gt; header in a request is permitted; the result is the same as if you included all of the listed extensions in one such header.</source>
          <target state="translated">Задает одно или несколько расширений WebSocket на уровне протокола, которые запрашивают сервер. Допускается использование более одного заголовка &lt;code&gt;Sec-WebSocket-Extension&lt;/code&gt; в запросе; результат будет таким же, как если бы вы включили все перечисленные расширения в один такой заголовок.</target>
        </trans-unit>
        <trans-unit id="e766075910421b2be9ca8f32bfa752ecb587b39f" translate="yes" xml:space="preserve">
          <source>Specifies origins that are allowed to see values of attributes retrieved via features of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Resource_Timing_API&quot;&gt;Resource Timing API&lt;/a&gt;, which would otherwise be reported as zero due to cross-origin restrictions.</source>
          <target state="translated">Указывает источники, которым разрешено видеть значения атрибутов, полученных с помощью функций &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Resource_Timing_API&quot;&gt;Resource Timing API&lt;/a&gt; , которые в противном случае были бы сообщены как нулевые из-за ограничений на разные источники.</target>
        </trans-unit>
        <trans-unit id="c2ecb07bbcb3e1be14696f3f86b19336ccf2cfdc" translate="yes" xml:space="preserve">
          <source>Specifies the URI to which the user agent should report Expect-CT failures.</source>
          <target state="translated">Указывает URI,по которому пользовательский агент должен сообщать о сбоях Expect-CT.</target>
        </trans-unit>
        <trans-unit id="df8493e883fbdc515ef9ca1b5b0866d3e58f3660" translate="yes" xml:space="preserve">
          <source>Specifies the WebSocket protocol version the client wishes to use, so the server can confirm whether or not that version is supported on its end.</source>
          <target state="translated">Указание версии протокола WebSocket,которую клиент желает использовать,чтобы сервер мог подтвердить,поддерживается ли эта версия на его конце.</target>
        </trans-unit>
        <trans-unit id="6b4be09a1adcb38cab1a0e2686022154d066d8ba" translate="yes" xml:space="preserve">
          <source>Specifies the domain name of the server (for virtual hosting), and (optionally) the TCP port number on which the server is listening.</source>
          <target state="translated">Указание доменного имени сервера (для виртуального хостинга)и (опционально)номера TCP-порта,на котором прослушивается сервер.</target>
        </trans-unit>
        <trans-unit id="efd15c591f12965b47534e1779aff0b7120829dc" translate="yes" xml:space="preserve">
          <source>Specifies the form of encoding used to safely transfer the entity to the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d52f387eaf11730a59df918d4e3a112a2d99212" translate="yes" xml:space="preserve">
          <source>Specifies the maximum amount of time a resource will be considered fresh. Contrary to &lt;code&gt;Expires&lt;/code&gt;, this directive is relative to the time of the request.</source>
          <target state="translated">Задает максимальное время, в течение которого ресурс будет считаться свежим. В отличие от &lt;code&gt;Expires&lt;/code&gt; , эта директива относится ко времени запроса.</target>
        </trans-unit>
        <trans-unit id="6fef4478d76a150d6928212783b2ee9858bcd272" translate="yes" xml:space="preserve">
          <source>Specifies the method or methods allowed when accessing the resource in response to a preflight request.</source>
          <target state="translated">Определяет метод или методы,разрешенные при доступе к ресурсу в ответ на предполетный запрос.</target>
        </trans-unit>
        <trans-unit id="495731834481a81b8123951704e2abcb07625db8" translate="yes" xml:space="preserve">
          <source>Specifies the methods allowed when accessing the resource in response to a preflight request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa52c5dd51b37dc7727111c50a8217213608ca08" translate="yes" xml:space="preserve">
          <source>Specifies the number of seconds after reception of the &lt;code&gt;Expect-CT&lt;/code&gt; header field during which the user agent should regard the host from whom the message was received as a known Expect-CT host.</source>
          <target state="translated">Задает количество секунд после приема поля заголовка &lt;code&gt;Expect-CT&lt;/code&gt; ,в течение которых пользовательский агент должен рассматривать хост, от которого было получено сообщение, как известный хост Expect-CT.</target>
        </trans-unit>
        <trans-unit id="7f43b9fd51101abb87a0368fc81d197d96a63735" translate="yes" xml:space="preserve">
          <source>Specifies the origin &quot;null&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ea81d80712300e661852f0c6af12a440f390050" translate="yes" xml:space="preserve">
          <source>Specifies the the form of encoding used to safely transfer the entity to the user.</source>
          <target state="translated">Указывает форму кодирования,используемую для безопасной передачи сущности пользователю.</target>
        </trans-unit>
        <trans-unit id="835c2397154f468b4c8ef93ba4c3e1aa7f2607eb" translate="yes" xml:space="preserve">
          <source>Specifies the transfer encodings the user agent is willing to accept.</source>
          <target state="translated">Указание кодировок передачи,которые пользовательский агент готов принять.</target>
        </trans-unit>
        <trans-unit id="f30f059c03d4c3da1b77bd03fc6d7ad013fb12f4" translate="yes" xml:space="preserve">
          <source>Specifies those hosts to which the cookie will be sent. If not specified, defaults to the host portion of the current document location (but not including subdomains). Contrary to earlier specifications, leading dots in domain names are ignored. If a domain is specified, subdomains are always included.</source>
          <target state="translated">Определяет те хосты,на которые будет отправлен куки-файл.Если не указано,по умолчанию устанавливается хост-часть текущего местоположения документа (но не включая субдомены).В отличие от предыдущих спецификаций,ведущие точки в доменных именах игнорируются.Если домен указан,то субдомены всегда включаются.</target>
        </trans-unit>
        <trans-unit id="24167ab34816aa2157df161d6a2bd98aa1704455" translate="yes" xml:space="preserve">
          <source>Specifies valid parents that may embed a page using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/frame&quot;&gt;&lt;code&gt;&amp;lt;frame&amp;gt;&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt;&lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/object&quot;&gt;&lt;code&gt;&amp;lt;object&amp;gt;&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/embed&quot;&gt;&lt;code&gt;&amp;lt;embed&amp;gt;&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/applet&quot;&gt;&lt;code&gt;&amp;lt;applet&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Указывает допустимых родителей, которые могут встраивать страницу с помощью &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/frame&quot;&gt; &lt;code&gt;&amp;lt;frame&amp;gt;&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt; &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/object&quot;&gt; &lt;code&gt;&amp;lt;object&amp;gt;&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/embed&quot;&gt; &lt;code&gt;&amp;lt;embed&amp;gt;&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/applet&quot;&gt; &lt;code&gt;&amp;lt;applet&amp;gt;&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3fa0df1c3795d4cdda9e9d0ae70ecf55400bafbc" translate="yes" xml:space="preserve">
          <source>Specifies valid sources for &lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/WebRTC_API&quot;&gt;WebRTC&lt;/a&gt; connections.</source>
          <target state="translated">Указывает допустимые источники для соединений &lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/WebRTC_API&quot;&gt;WebRTC&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2a90c719345e0d3bc78bace4ab1d3f64767f076c" translate="yes" xml:space="preserve">
          <source>Specifies valid sources for &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/SharedWorker&quot;&gt;&lt;code&gt;SharedWorker&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorker&quot;&gt;&lt;code&gt;ServiceWorker&lt;/code&gt;&lt;/a&gt; scripts.</source>
          <target state="translated">Указывает допустимые источники для &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/SharedWorker&quot;&gt; &lt;code&gt;SharedWorker&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Worker&quot;&gt; &lt;code&gt;Worker&lt;/code&gt; &lt;/a&gt; , SharedWorker или &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorker&quot;&gt; &lt;code&gt;ServiceWorker&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d098bd02b96b2bdcbdaec1bb10a529856955c4ce" translate="yes" xml:space="preserve">
          <source>Specifies valid sources for JavaScript &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script&quot;&gt;&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;&lt;/a&gt; elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b6311b937bff61b4874ab442d4d9dbb9f3cc22f" translate="yes" xml:space="preserve">
          <source>Specifies valid sources for JavaScript inline event handlers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd49e94946949bc3d24a4291eb9f90caffd7e887" translate="yes" xml:space="preserve">
          <source>Specifies valid sources for JavaScript.</source>
          <target state="translated">Указание допустимых источников для JavaScript.</target>
        </trans-unit>
        <trans-unit id="282bf5eae963adccbd6d47d68520fe0a5c79b871" translate="yes" xml:space="preserve">
          <source>Specifies valid sources for fonts loaded using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face&quot;&gt;&lt;code&gt;@font-face&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Указывает допустимые источники для шрифтов, загружаемых с использованием &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face&quot;&gt; &lt;code&gt;@font-face&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="db33d91daba98ebe85d45f79cd3a62539127fa18" translate="yes" xml:space="preserve">
          <source>Specifies valid sources for inline styles applied to individual DOM elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42f23c7f28c98c835d7c0a52c0e41c358dd15a49" translate="yes" xml:space="preserve">
          <source>Specifies valid sources for loading media using the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio&quot;&gt;&lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt;&lt;/a&gt; , &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/track&quot;&gt;&lt;code&gt;&amp;lt;track&amp;gt;&lt;/code&gt;&lt;/a&gt; elements.</source>
          <target state="translated">Указывает допустимые источники для загрузки мультимедиа с помощью элементов &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio&quot;&gt; &lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt; &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/track&quot;&gt; &lt;code&gt;&amp;lt;track&amp;gt;&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9dc2e0e19fce72e5227e4ed05399840422564be0" translate="yes" xml:space="preserve">
          <source>Specifies valid sources for nested browsing contexts loading using elements such as &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/frame&quot;&gt;&lt;code&gt;&amp;lt;frame&amp;gt;&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt;&lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Указывает допустимые источники для загрузки вложенных контекстов просмотра с использованием таких элементов, как &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/frame&quot;&gt; &lt;code&gt;&amp;lt;frame&amp;gt;&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt; &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ae55d19529942a4f7114ca5f6d12086fa3126f81" translate="yes" xml:space="preserve">
          <source>Specifies valid sources for stylesheets &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/style&quot;&gt;&lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt;&lt;/a&gt; elements and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link&quot;&gt;&lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt;&lt;/a&gt; elements with &lt;code&gt;rel=&quot;stylesheet&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a04b49e22cf0a5230eea588841a8a2b455c0bc3e" translate="yes" xml:space="preserve">
          <source>Specifies valid sources for stylesheets.</source>
          <target state="translated">Определяет действительные источники для таблиц стилей.</target>
        </trans-unit>
        <trans-unit id="c02deee0c3b25ce48a3b98b60fb3aad61652b709" translate="yes" xml:space="preserve">
          <source>Specifies valid sources for the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/object&quot;&gt;&lt;code&gt;&amp;lt;object&amp;gt;&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/embed&quot;&gt;&lt;code&gt;&amp;lt;embed&amp;gt;&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/applet&quot;&gt;&lt;code&gt;&amp;lt;applet&amp;gt;&lt;/code&gt;&lt;/a&gt; elements.</source>
          <target state="translated">Задает допустимые источники для элементов &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/object&quot;&gt; &lt;code&gt;&amp;lt;object&amp;gt;&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/embed&quot;&gt; &lt;code&gt;&amp;lt;embed&amp;gt;&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/applet&quot;&gt; &lt;code&gt;&amp;lt;applet&amp;gt;&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fb673b2f31b191ea53966ff7ae48df6affc89e62" translate="yes" xml:space="preserve">
          <source>Specifies valid sources of application manifest files.</source>
          <target state="translated">Определяет действительные источники файлов манифестов приложений.</target>
        </trans-unit>
        <trans-unit id="2eb2af79b8a1a437680d977178946925ebbf2f7f" translate="yes" xml:space="preserve">
          <source>Specifies valid sources of images and favicons.</source>
          <target state="translated">Указаны действительные источники изображений и фаворитов.</target>
        </trans-unit>
        <trans-unit id="70ea0caeb914719c42a473dfe61a551bfbb951e5" translate="yes" xml:space="preserve">
          <source>Specifies valid sources to be prefetched or prerendered.</source>
          <target state="translated">Определяет допустимые источники,которые должны быть предварительно выбраны или предотправлены.</target>
        </trans-unit>
        <trans-unit id="951baad47e3b7bd99fb8056c2485c87379c7b510" translate="yes" xml:space="preserve">
          <source>Specifying &lt;code&gt;no-cache&lt;/code&gt; or &lt;code&gt;max-age=0&lt;/code&gt; indicates that clients can cache a resource and must revalidate each time before using it. This means HTTP request occurs each time, but it can skip downloading HTTP body if the content is valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e61777977f07fdafd61735735d76ae50997e152" translate="yes" xml:space="preserve">
          <source>Specifying a fallback policy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3835c694b3a6ee97cfe71fb0cd1c9d794f4e48c3" translate="yes" xml:space="preserve">
          <source>Specifying legacy document modes*</source>
          <target state="translated">Указание устаревших режимов работы с документами*</target>
        </trans-unit>
        <trans-unit id="f65d134dfe7e03e4b9a14898c4ef7cc4877bc321" translate="yes" xml:space="preserve">
          <source>Specifying multiple values is only supported in the &lt;code&gt;Referrer-Policy&lt;/code&gt; HTTP header, and not in the &lt;code&gt;referrerpolicy&lt;/code&gt; attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2bf4478d33594d8d9be5cf924dffa2d49ead910" translate="yes" xml:space="preserve">
          <source>Specifying your policy</source>
          <target state="translated">Указание вашей политики</target>
        </trans-unit>
        <trans-unit id="f8a58e6474d46ef9548c5cf3e20d0bdc3d838946" translate="yes" xml:space="preserve">
          <source>Standard &lt;code&gt;Cache-Control&lt;/code&gt; directives that can be used by the client in an HTTP request.</source>
          <target state="translated">Стандартные директивы &lt;code&gt;Cache-Control&lt;/code&gt; , которые могут использоваться клиентом в HTTP-запросе.</target>
        </trans-unit>
        <trans-unit id="fc62e8bea8948c4f2c38c80d531e6ec6bc0f979f" translate="yes" xml:space="preserve">
          <source>Standard &lt;code&gt;Cache-Control&lt;/code&gt; directives that can be used by the server in an HTTP response.</source>
          <target state="translated">Стандартные директивы &lt;code&gt;Cache-Control&lt;/code&gt; , которые могут использоваться сервером в ответе HTTP.</target>
        </trans-unit>
        <trans-unit id="7e4f48b87246ae2a22b36e2b02bbe847fa77f9da" translate="yes" xml:space="preserve">
          <source>Standardized methods are generic; that is, they are potentially
   applicable to any resource, not just one particular media type, kind
   of resource, or application.  As such, it is preferred that new
   methods be registered in a document that isn't specific to a single
   application or data format, since orthogonal technologies deserve
   orthogonal specification.

   Since message parsing (&lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.3&quot;&gt;Section&amp;nbsp;3.3 of [RFC7230]&lt;/a&gt;) needs to be
   independent of method semantics (aside from responses to HEAD),
   definitions of new methods cannot change the parsing algorithm or
   prohibit the presence of a message body on either the request or the
   response message.  Definitions of new methods can specify that only a
   zero-length message body is allowed by requiring a Content-Length
   header field with a value of &quot;0&quot;.

   A new method definition needs to indicate whether it is safe
   (&lt;a href=&quot;#section-4.2.1&quot;&gt;Section 4.2.1&lt;/a&gt;), idempotent (&lt;a href=&quot;#section-4.2.2&quot;&gt;Section 4.2.2&lt;/a&gt;), cacheable
   (&lt;a href=&quot;#section-4.2.3&quot;&gt;Section 4.2.3&lt;/a&gt;), what semantics are to be associated with the payload
   body if any is present in the request and what refinements the method
   makes to header field or status code semantics.  If the new method is
   cacheable, its definition ought to describe how, and under what
   conditions, a cache can store a response and use it to satisfy a
   subsequent request.  The new method ought to describe whether it can
   be made conditional (&lt;a href=&quot;#section-5.2&quot;&gt;Section 5.2&lt;/a&gt;) and, if so, how a server responds
   when the condition is false.  Likewise, if the new method might have
   some use for partial response semantics ([&lt;a href=&quot;https://tools.ietf.org/html/rfc7233&quot;&gt;RFC7233&lt;/a&gt;]), it ought to
   document this, too.

      Note: Avoid defining a method name that starts with &quot;M-&quot;, since
      that prefix might be misinterpreted as having the semantics
      assigned to it by [&lt;a href=&quot;https://tools.ietf.org/html/rfc2774&quot;&gt;RFC2774&lt;/a&gt;].</source>
          <target state="translated">Стандартизированные методы являются общими; то есть они потенциально применимы к любому ресурсу, а не только к одному конкретному типу мультимедиа, виду ресурса или приложению. Таким образом, предпочтительно, чтобы новые методы были зарегистрированы в документе, который не является специфическим для одного приложения или формата данных, поскольку ортогональные технологии заслуживают ортогональной спецификации. С момента синтаксического анализа сообщения ( &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.3&quot;&gt;раздел 3.3 [RFC7230]&lt;/a&gt;) должен быть независимым от семантики метода (помимо ответов на HEAD), определения новых методов не могут изменить алгоритм синтаксического анализа или запретить присутствие тела сообщения ни в запросе, ни в ответном сообщении. Определения новых методов могут указывать, что допускается только тело сообщения нулевой длины, требуя для поля заголовка Content-Length значение &amp;laquo;0&amp;raquo;. Новое определение метода должно указывать, является ли он безопасным ( &lt;a href=&quot;#section-4.2.1&quot;&gt;Раздел 4.2.1&lt;/a&gt; ), идемпотентным ( &lt;a href=&quot;#section-4.2.2&quot;&gt;Раздел 4.2.2&lt;/a&gt; ), кешируемым ( &lt;a href=&quot;#section-4.2.3&quot;&gt;Раздел 4.2.3).&lt;/a&gt;), какая семантика должна быть связана с телом полезной нагрузки, если таковая присутствует в запросе, и какие уточнения метод вносит в поле заголовка или семантику кода состояния. Если новый метод является кэшируемым, его определение должно описывать, как и при каких условиях кеш может хранить ответ и использовать его для удовлетворения последующего запроса. Новый метод должен описывать, можно ли сделать его условным ( &lt;a href=&quot;#section-5.2&quot;&gt;раздел 5.2&lt;/a&gt; ), и если да, то как сервер реагирует, когда условие ложно. Аналогичным образом, если новый метод может быть использован для семантики частичного ответа ([ &lt;a href=&quot;https://tools.ietf.org/html/rfc7233&quot;&gt;RFC7233&lt;/a&gt;]), это тоже должно задокументировать. Примечание. Избегайте определения имени метода, которое начинается с &amp;laquo;M-&amp;raquo;, поскольку этот префикс может быть неверно истолкован как имеющий семантику, назначенную ему [ &lt;a href=&quot;https://tools.ietf.org/html/rfc2774&quot;&gt;RFC2774&lt;/a&gt; ].</target>
        </trans-unit>
        <trans-unit id="ec725f8ba620a293e9d02360be092dd295c3b54d" translate="yes" xml:space="preserve">
          <source>Start line</source>
          <target state="translated">линия старта</target>
        </trans-unit>
        <trans-unit id="e030402b999a37d4c6eb9f51e15b86c192ade5a6" translate="yes" xml:space="preserve">
          <source>Starting in Chrome 61, this applies to all of a frame's ancestors.</source>
          <target state="translated">Начиная с хрома 61,это относится ко всем предкам рамы.</target>
        </trans-unit>
        <trans-unit id="47374f68a6da45b7e6165e2b0f9740a82e30b4ff" translate="yes" xml:space="preserve">
          <source>Starting in Firefox 59, this applies to all of a frame's ancestors.</source>
          <target state="translated">Начиная с Firefox 59,это относится ко всем предкам кадра.</target>
        </trans-unit>
        <trans-unit id="6cbdee7a264558eb88d25ed8d267e476fca05cb7" translate="yes" xml:space="preserve">
          <source>Starting in Opera 48, this applies to all of a frame's ancestors.</source>
          <target state="translated">Начиная с Оперы 48,это относится ко всем предкам кадра.</target>
        </trans-unit>
        <trans-unit id="b6deb6ef9aab80647d8c2b91f6b9f8ab6cffc3c1" translate="yes" xml:space="preserve">
          <source>Starting in Version 6, users can opt into using a GeckoView-based Focus for Android with a hidden preference: it uses a GeckoView UA string to advertise Gecko compatibility.</source>
          <target state="translated">Начиная с версии 6,пользователи могут использовать GeckoView на основе Focus для Android со скрытыми предпочтениями:он использует строку GeckoView UA для рекламы совместимости с Gecko.</target>
        </trans-unit>
        <trans-unit id="2767241100a2bb66d29b7ccd151257fc78abe38a" translate="yes" xml:space="preserve">
          <source>Starting with Chrome 52 and Firefox 52, insecure sites (&lt;code&gt;http:&lt;/code&gt;) can't set cookies with the &quot;secure&quot; directive anymore.</source>
          <target state="translated">Начиная с Chrome 52 и Firefox 52 небезопасные сайты ( &lt;code&gt;http:&lt;/code&gt; ) больше не могут устанавливать файлы cookie с помощью директивы secure.</target>
        </trans-unit>
        <trans-unit id="2777fe7b39631e05febcca00592a28a86bb5182f" translate="yes" xml:space="preserve">
          <source>Starting with Chrome 52 and Firefox 52, insecure sites (&lt;code&gt;http:&lt;/code&gt;) can't set cookies with the &lt;code&gt;Secure&lt;/code&gt; attribute anymore.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb7d21aec22143da2cc4da25c435e7bb29874f8d" translate="yes" xml:space="preserve">
          <source>Starting with Firefox 72, the opting out of MIME sniffing is also applied to top-level documents if a &lt;a href=&quot;content-type&quot;&gt;&lt;code&gt;Content-type&lt;/code&gt;&lt;/a&gt; is provided. This can cause HTML web pages to be downloaded instead of being rendered when they are served with a MIME type other than &lt;code&gt;text/html&lt;/code&gt;. Make sure to set both headers correctly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bae7d5be70820ed56467bd9a63744e23b47bd711" translate="yes" xml:space="preserve">
          <source>Status</source>
          <target state="translated">Status</target>
        </trans-unit>
        <trans-unit id="f7b7abf0e2e9d417ae8391f4a4fe7d726ce87d19" translate="yes" xml:space="preserve">
          <source>Status Code Definitions (RFC 2616)</source>
          <target state="translated">Определения кода статуса (RFC 2616)</target>
        </trans-unit>
        <trans-unit id="79f8bb09cc70b71ab1e11fda8d1499287de0d9e4" translate="yes" xml:space="preserve">
          <source>Status line</source>
          <target state="translated">Строка состояния</target>
        </trans-unit>
        <trans-unit id="8f42525bc1bf257516b4843747d743c365504980" translate="yes" xml:space="preserve">
          <source>Status of This Memo

   This document specifies an Internet standards track protocol for the
   Internet community, and requests discussion and suggestions for
   improvements.  Please refer to the current edition of the &quot;Internet
   Official Protocol Standards&quot; (STD 1) for the standardization state
   and status of this protocol.  Distribution of this memo is unlimited.

Abstract

   The Atom Publishing Protocol (AtomPub) is an application-level
   protocol for publishing and editing Web resources.  The protocol is
   based on HTTP transfer of Atom-formatted representations.  The Atom
   format is documented in the Atom Syndication Format. 

Table of Contents

   &lt;a href=&quot;#section-1&quot;&gt;1&lt;/a&gt;. Introduction 
   &lt;a href=&quot;#section-2&quot;&gt;2&lt;/a&gt;. Notational Conventions 
      &lt;a href=&quot;#section-2.1&quot;&gt;2.1&lt;/a&gt;. XML-Related Conventions 
           &lt;a href=&quot;#section-2.1.1&quot;&gt;2.1.1&lt;/a&gt;. Referring to Information Items 
           &lt;a href=&quot;#section-2.1.2&quot;&gt;2.1.2&lt;/a&gt;. RELAX NG Schema 
           &lt;a href=&quot;#section-2.1.3&quot;&gt;2.1.3&lt;/a&gt;. Use of &quot;xml:base&quot; and &quot;xml:lang&quot; 
   &lt;a href=&quot;#section-3&quot;&gt;3&lt;/a&gt;. Terminology 
   &lt;a href=&quot;#section-4&quot;&gt;4&lt;/a&gt;. Protocol Model 
      &lt;a href=&quot;#section-4.1&quot;&gt;4.1&lt;/a&gt;. Identity and Naming 
      &lt;a href=&quot;#section-4.2&quot;&gt;4.2&lt;/a&gt;. Documents and Resource Classification 
      &lt;a href=&quot;#section-4.3&quot;&gt;4.3&lt;/a&gt;. Control and Publishing 
      &lt;a href=&quot;#section-4.4&quot;&gt;4.4&lt;/a&gt;. Client Implementation Considerations 
   &lt;a href=&quot;#section-5&quot;&gt;5&lt;/a&gt;. Protocol Operations 
      &lt;a href=&quot;#section-5.1&quot;&gt;5.1&lt;/a&gt;. Retrieving a Service Document 
      &lt;a href=&quot;#section-5.2&quot;&gt;5.2&lt;/a&gt;. Listing Collection Members 
      &lt;a href=&quot;#section-5.3&quot;&gt;5.3&lt;/a&gt;. Creating a Resource 
      &lt;a href=&quot;#section-5.4&quot;&gt;5.4&lt;/a&gt;. Editing a Resource 
           &lt;a href=&quot;#section-5.4.1&quot;&gt;5.4.1&lt;/a&gt;. Retrieving a Resource 
           &lt;a href=&quot;#section-5.4.2&quot;&gt;5.4.2&lt;/a&gt;. Editing a Resource 
           &lt;a href=&quot;#section-5.4.3&quot;&gt;5.4.3&lt;/a&gt;. Deleting a Resource 
      &lt;a href=&quot;#section-5.5&quot;&gt;5.5&lt;/a&gt;. Use of HTTP Response Codes 
   &lt;a href=&quot;#section-6&quot;&gt;6&lt;/a&gt;. Protocol Documents 
      &lt;a href=&quot;#section-6.1&quot;&gt;6.1&lt;/a&gt;. Document Types 
      &lt;a href=&quot;#section-6.2&quot;&gt;6.2&lt;/a&gt;. Document Extensibility 
   &lt;a href=&quot;#section-7&quot;&gt;7&lt;/a&gt;. Category Documents 
      &lt;a href=&quot;#section-7.1&quot;&gt;7.1&lt;/a&gt;. Example 
      &lt;a href=&quot;#section-7.2&quot;&gt;7.2&lt;/a&gt;. Element Definitions 
           &lt;a href=&quot;#section-7.2.1&quot;&gt;7.2.1&lt;/a&gt;. The &quot;app:categories&quot; Element 
   &lt;a href=&quot;#section-8&quot;&gt;8&lt;/a&gt;. Service Documents 
      &lt;a href=&quot;#section-8.1&quot;&gt;8.1&lt;/a&gt;. Workspaces 
      &lt;a href=&quot;#section-8.2&quot;&gt;8.2&lt;/a&gt;. Example 
      &lt;a href=&quot;#section-8.3&quot;&gt;8.3&lt;/a&gt;. Element Definitions 
           &lt;a href=&quot;#section-8.3.1&quot;&gt;8.3.1&lt;/a&gt;. The &quot;app:service&quot; Element 
           &lt;a href=&quot;#section-8.3.2&quot;&gt;8.3.2&lt;/a&gt;. The &quot;app:workspace&quot; Element 
           &lt;a href=&quot;#section-8.3.3&quot;&gt;8.3.3&lt;/a&gt;. The &quot;app:collection&quot; Element 
           &lt;a href=&quot;#section-8.3.4&quot;&gt;8.3.4&lt;/a&gt;. The &quot;app:accept&quot; Element 
           &lt;a href=&quot;#section-8.3.5&quot;&gt;8.3.5&lt;/a&gt;. Usage in Atom Feed Documents 
           &lt;a href=&quot;#section-8.3.6&quot;&gt;8.3.6&lt;/a&gt;. The &quot;app:categories&quot; Element 
   &lt;a href=&quot;#section-9&quot;&gt;9&lt;/a&gt;. Creating and Editing Resources 
      &lt;a href=&quot;#section-9.1&quot;&gt;9.1&lt;/a&gt;. Member URIs 
      &lt;a href=&quot;#section-9.2&quot;&gt;9.2&lt;/a&gt;. Creating Resources with POST 
           &lt;a href=&quot;#section-9.2.1&quot;&gt;9.2.1&lt;/a&gt;. Example 
      &lt;a href=&quot;#section-9.3&quot;&gt;9.3&lt;/a&gt;. Editing Resources with PUT 
      &lt;a href=&quot;#section-9.4&quot;&gt;9.4&lt;/a&gt;. Deleting Resources with DELETE 
      &lt;a href=&quot;#section-9.5&quot;&gt;9.5&lt;/a&gt;. Caching and Entity Tags 
           &lt;a href=&quot;#section-9.5.1&quot;&gt;9.5.1&lt;/a&gt;. Example ............................................ 

      &lt;a href=&quot;#section-9.6&quot;&gt;9.6&lt;/a&gt;. Media Resources and Media Link Entries 
           &lt;a href=&quot;#section-9.6.1&quot;&gt;9.6.1&lt;/a&gt;. Examples 
      &lt;a href=&quot;#section-9.7&quot;&gt;9.7&lt;/a&gt;. The Slug Header 
           &lt;a href=&quot;#section-9.7.1&quot;&gt;9.7.1&lt;/a&gt;. Slug Header Syntax 
           &lt;a href=&quot;#section-9.7.2&quot;&gt;9.7.2&lt;/a&gt;. Example 
   &lt;a href=&quot;#section-10&quot;&gt;10&lt;/a&gt;. Listing Collections 
      &lt;a href=&quot;#section-10.1&quot;&gt;10.1&lt;/a&gt;. Collection Partial Lists 
      &lt;a href=&quot;#section-10.2&quot;&gt;10.2&lt;/a&gt;. The &quot;app:edited&quot; Element 
   &lt;a href=&quot;#section-11&quot;&gt;11&lt;/a&gt;. Atom Format Link Relation Extensions 
      &lt;a href=&quot;#section-11.1&quot;&gt;11.1&lt;/a&gt;. The &quot;edit&quot; Link Relation 
      &lt;a href=&quot;#section-11.2&quot;&gt;11.2&lt;/a&gt;. The &quot;edit-media&quot; Link Relation 
   &lt;a href=&quot;#section-12&quot;&gt;12&lt;/a&gt;. The Atom Format Type Parameter 
      &lt;a href=&quot;#section-12.1&quot;&gt;12.1&lt;/a&gt;. The &quot;type&quot; parameter 
           &lt;a href=&quot;#section-12.1.1&quot;&gt;12.1.1&lt;/a&gt;. Conformance 
   &lt;a href=&quot;#section-13&quot;&gt;13&lt;/a&gt;. Atom Publishing Controls 
      &lt;a href=&quot;#section-13.1&quot;&gt;13.1&lt;/a&gt;. The &quot;app:control&quot; Element 
           &lt;a href=&quot;#section-13.1.1&quot;&gt;13.1.1&lt;/a&gt;. The &quot;app:draft&quot; Element 
   &lt;a href=&quot;#section-14&quot;&gt;14&lt;/a&gt;. Securing the Atom Publishing Protocol 
   &lt;a href=&quot;#section-15&quot;&gt;15&lt;/a&gt;. Security Considerations 
      &lt;a href=&quot;#section-15.1&quot;&gt;15.1&lt;/a&gt;. Denial of Service 
      &lt;a href=&quot;#section-15.2&quot;&gt;15.2&lt;/a&gt;. Replay Attacks 
      &lt;a href=&quot;#section-15.3&quot;&gt;15.3&lt;/a&gt;. Spoofing Attacks 
      &lt;a href=&quot;#section-15.4&quot;&gt;15.4&lt;/a&gt;. Linked Resources 
      &lt;a href=&quot;#section-15.5&quot;&gt;15.5&lt;/a&gt;. Digital Signatures and Encryption 
      &lt;a href=&quot;#section-15.6&quot;&gt;15.6&lt;/a&gt;. URIs and IRIs 
      &lt;a href=&quot;#section-15.7&quot;&gt;15.7&lt;/a&gt;. Code Injection and Cross Site Scripting 
   &lt;a href=&quot;#section-16&quot;&gt;16&lt;/a&gt;. IANA Considerations 
      &lt;a href=&quot;#section-16.1&quot;&gt;16.1&lt;/a&gt;. Content-Type Registration for 'application/atomcat+xml' ..39
      &lt;a href=&quot;#section-16.2&quot;&gt;16.2&lt;/a&gt;. Content-Type Registration for 'application/atomsvc+xml' ..40
      &lt;a href=&quot;#section-16.3&quot;&gt;16.3&lt;/a&gt;. Header Field Registration for 'SLUG' 
      &lt;a href=&quot;#section-16.4&quot;&gt;16.4&lt;/a&gt;. The Link Relation Registration &quot;edit&quot; 
      &lt;a href=&quot;#section-16.5&quot;&gt;16.5&lt;/a&gt;. The Link Relation Registration &quot;edit-media&quot; 
      &lt;a href=&quot;#section-16.6&quot;&gt;16.6&lt;/a&gt;. The Atom Format Media Type Parameter 
   &lt;a href=&quot;#section-17&quot;&gt;17&lt;/a&gt;. References 
      &lt;a href=&quot;#section-17.1&quot;&gt;17.1&lt;/a&gt;. Normative References 
      &lt;a href=&quot;#section-17.2&quot;&gt;17.2&lt;/a&gt;. Informative References 
   &lt;a href=&quot;#appendix-A&quot;&gt;Appendix A&lt;/a&gt;. Contributors 
   &lt;a href=&quot;#appendix-B&quot;&gt;Appendix B&lt;/a&gt;. RELAX NG Compact Schema ...............................</source>
          <target state="translated">Статус этой памятки В этом документе определяется протокол отслеживания стандартов Интернета для Интернет-сообщества, а также предлагается обсуждение и предложения по улучшениям. См. Текущую редакцию &amp;laquo;Официальных стандартов протокола Интернета&amp;raquo; (STD 1), чтобы узнать о состоянии стандартизации и статусе этого протокола. Распространение этой памятки не ограничено. Аннотация Протокол публикации Atom (AtomPub) - это протокол уровня приложения для публикации и редактирования веб-ресурсов. Протокол основан на HTTP-передаче представлений в формате Atom. Формат Atom задокументирован в формате Atom Syndication Format. Содержание &lt;a href=&quot;#section-1&quot;&gt;1&lt;/a&gt; . Введение &lt;a href=&quot;#section-2&quot;&gt;2&lt;/a&gt; . Условные обозначения &lt;a href=&quot;#section-2.1&quot;&gt;2.1&lt;/a&gt; . Соглашения, связанные с XML &lt;a href=&quot;#section-2.1.1&quot;&gt;2.1.1&lt;/a&gt; . Ссылаясь на информационные элементы &lt;a href=&quot;#section-2.1.2&quot;&gt;2.1.2&lt;/a&gt; . Схема RELAX NG &lt;a href=&quot;#section-2.1.3&quot;&gt;2.1.3&lt;/a&gt; . Использование &amp;laquo;xml: base&amp;raquo; и &amp;laquo;xml: lang&amp;raquo; &lt;a href=&quot;#section-3&quot;&gt;3&lt;/a&gt; . Терминология &lt;a href=&quot;#section-4&quot;&gt;4&lt;/a&gt; . Модель протокола &lt;a href=&quot;#section-4.1&quot;&gt;4.1&lt;/a&gt; . Идентичность и наименование &lt;a href=&quot;#section-4.2&quot;&gt;4.2&lt;/a&gt; . Документы и классификация ресурсов &lt;a href=&quot;#section-4.3&quot;&gt;4.3&lt;/a&gt; . Управление и публикация &lt;a href=&quot;#section-4.4&quot;&gt;4.4&lt;/a&gt; . Соображения по реализации клиента &lt;a href=&quot;#section-5&quot;&gt;5&lt;/a&gt; . Протоколные операции &lt;a href=&quot;#section-5.1&quot;&gt;5.1&lt;/a&gt; . Получение сервисного документа &lt;a href=&quot;#section-5.2&quot;&gt;5.2&lt;/a&gt; . Список участников Коллекции &lt;a href=&quot;#section-5.3&quot;&gt;5.3&lt;/a&gt; . Создание ресурса &lt;a href=&quot;#section-5.4&quot;&gt;5.4&lt;/a&gt;, Редактирование ресурса &lt;a href=&quot;#section-5.4.1&quot;&gt;5.4.1&lt;/a&gt; . Получение ресурса &lt;a href=&quot;#section-5.4.2&quot;&gt;5.4.2&lt;/a&gt; . Редактирование ресурса &lt;a href=&quot;#section-5.4.3&quot;&gt;5.4.3&lt;/a&gt; . Удаление ресурса &lt;a href=&quot;#section-5.5&quot;&gt;5.5&lt;/a&gt; . Использование кодов ответа HTTP &lt;a href=&quot;#section-6&quot;&gt;6&lt;/a&gt; . Протоколные документы &lt;a href=&quot;#section-6.1&quot;&gt;6.1&lt;/a&gt; . Типы документов &lt;a href=&quot;#section-6.2&quot;&gt;6.2&lt;/a&gt; . Расширяемость документа &lt;a href=&quot;#section-7&quot;&gt;7&lt;/a&gt; . Категория Документы &lt;a href=&quot;#section-7.1&quot;&gt;7.1&lt;/a&gt; . Пример &lt;a href=&quot;#section-7.2&quot;&gt;7.2&lt;/a&gt; . Определения элементов &lt;a href=&quot;#section-7.2.1&quot;&gt;7.2.1&lt;/a&gt; . Элемент &amp;laquo;приложение: категории&amp;raquo; &lt;a href=&quot;#section-8&quot;&gt;8&lt;/a&gt; . Сервисная документация &lt;a href=&quot;#section-8.1&quot;&gt;8.1&lt;/a&gt; . Рабочие пространства &lt;a href=&quot;#section-8.2&quot;&gt;8.2&lt;/a&gt; . Пример &lt;a href=&quot;#section-8.3&quot;&gt;8.3&lt;/a&gt;, Определения элементов &lt;a href=&quot;#section-8.3.1&quot;&gt;8.3.1&lt;/a&gt; . Элемент &quot;app: service&quot; &lt;a href=&quot;#section-8.3.2&quot;&gt;8.3.2&lt;/a&gt; . Элемент &quot;app: workspace&quot; &lt;a href=&quot;#section-8.3.3&quot;&gt;8.3.3&lt;/a&gt; . Элемент &quot;app: collection&quot; &lt;a href=&quot;#section-8.3.4&quot;&gt;8.3.4&lt;/a&gt; . Элемент &quot;app: accept&quot; &lt;a href=&quot;#section-8.3.5&quot;&gt;8.3.5&lt;/a&gt; . Использование в документах Atom Feed &lt;a href=&quot;#section-8.3.6&quot;&gt;8.3.6&lt;/a&gt; . Элемент &amp;laquo;приложение: категории&amp;raquo; &lt;a href=&quot;#section-9&quot;&gt;9&lt;/a&gt; . Создание и редактирование ресурсов &lt;a href=&quot;#section-9.1&quot;&gt;9.1&lt;/a&gt; . URI участников &lt;a href=&quot;#section-9.2&quot;&gt;9.2&lt;/a&gt; . Создание ресурсов с помощью POST &lt;a href=&quot;#section-9.2.1&quot;&gt;9.2.1&lt;/a&gt; . Пример &lt;a href=&quot;#section-9.3&quot;&gt;9.3&lt;/a&gt; . Редактирование ресурсов с помощью PUT &lt;a href=&quot;#section-9.4&quot;&gt;9.4&lt;/a&gt; . Удаление ресурсов с помощью DELETE&lt;a href=&quot;#section-9.5&quot;&gt;9.5&lt;/a&gt; . Кэширование и теги сущностей &lt;a href=&quot;#section-9.5.1&quot;&gt;9.5.1&lt;/a&gt; . Пример ........................................... &lt;a href=&quot;#section-9.6&quot;&gt;9.6&lt;/a&gt; . Медиа-ресурсы и медиа-ссылки &lt;a href=&quot;#section-9.6.1&quot;&gt;9.6.1&lt;/a&gt; . Примеры &lt;a href=&quot;#section-9.7&quot;&gt;9.7&lt;/a&gt; . Заголовок Slug &lt;a href=&quot;#section-9.7.1&quot;&gt;9.7.1&lt;/a&gt; . Синтаксис заголовка &lt;a href=&quot;#section-9.7.2&quot;&gt;слага 9.7.2&lt;/a&gt; . Пример &lt;a href=&quot;#section-10&quot;&gt;10&lt;/a&gt; . Коллекции листинга &lt;a href=&quot;#section-10.1&quot;&gt;10.1&lt;/a&gt; . Сборник частичных списков &lt;a href=&quot;#section-10.2&quot;&gt;10.2&lt;/a&gt; . Элемент &lt;a href=&quot;#section-11&quot;&gt;11&lt;/a&gt; &quot;приложение: отредактировано&quot; . Расширения связи формата Atom &lt;a href=&quot;#section-11.1&quot;&gt;11.1&lt;/a&gt; . Связь ссылок &quot;редактировать&quot; &lt;a href=&quot;#section-11.2&quot;&gt;11.2&lt;/a&gt; . Связь &quot;редактировать-медиа&quot; &lt;a href=&quot;#section-12&quot;&gt;12&lt;/a&gt; . Параметр типа формата Atom &lt;a href=&quot;#section-12.1&quot;&gt;12.1&lt;/a&gt; . Параметр &amp;laquo;тип&amp;raquo; &lt;a href=&quot;#section-12.1.1&quot;&gt;12.1.1&lt;/a&gt; . Соответствие &lt;a href=&quot;#section-13&quot;&gt;13&lt;/a&gt; . Элементы управления публикацией Atom &lt;a href=&quot;#section-13.1&quot;&gt;13.1&lt;/a&gt; . Элемент &quot;app: control&quot; &lt;a href=&quot;#section-13.1.1&quot;&gt;13.1.1&lt;/a&gt; . Элемент &amp;laquo;app: draft&amp;raquo; &lt;a href=&quot;#section-14&quot;&gt;14&lt;/a&gt; . Защита протокола публикации Atom &lt;a href=&quot;#section-15&quot;&gt;15&lt;/a&gt; . Соображения безопасности &lt;a href=&quot;#section-15.1&quot;&gt;15.1&lt;/a&gt; . Отказ в обслуживании &lt;a href=&quot;#section-15.2&quot;&gt;15.2&lt;/a&gt; . Воспроизведение атак &lt;a href=&quot;#section-15.3&quot;&gt;15.3&lt;/a&gt; . Спуфинговые атаки &lt;a href=&quot;#section-15.4&quot;&gt;15.4&lt;/a&gt; . Связанные ресурсы &lt;a href=&quot;#section-15.5&quot;&gt;15.5&lt;/a&gt; . Цифровые подписи и шифрование &lt;a href=&quot;#section-15.6&quot;&gt;15.6&lt;/a&gt; . URI и IRI &lt;a href=&quot;#section-15.7&quot;&gt;15.7&lt;/a&gt; . Внедрение кода и межсайтовый скриптинг &lt;a href=&quot;#section-16&quot;&gt;16&lt;/a&gt; . Соображения IANA &lt;a href=&quot;#section-16.1&quot;&gt;16.1&lt;/a&gt; . Регистрация типа содержимого для 'application / atomcat + xml' ..39 &lt;a href=&quot;#section-16.2&quot;&gt;16.2&lt;/a&gt; . Регистрация типа содержимого для 'application / atomvc + xml' ..40 &lt;a href=&quot;#section-16.3&quot;&gt;16.3&lt;/a&gt; . Регистрация поля заголовка для &amp;laquo;SLUG&amp;raquo; &lt;a href=&quot;#section-16.4&quot;&gt;16.4&lt;/a&gt; . Регистрация связи ссылок &quot;править&quot; &lt;a href=&quot;#section-16.5&quot;&gt;16.5&lt;/a&gt; . Регистрация связи &quot;edit-media&quot; &lt;a href=&quot;#section-16.6&quot;&gt;16.6&lt;/a&gt; . Параметр типа носителя формата Atom &lt;a href=&quot;#section-17&quot;&gt;17&lt;/a&gt; . Ссылки &lt;a href=&quot;#section-17.1&quot;&gt;17.1&lt;/a&gt; . Нормативные ссылки &lt;a href=&quot;#section-17.2&quot;&gt;17.2&lt;/a&gt; . Информационные ссылки &lt;a href=&quot;#appendix-A&quot;&gt;Приложение A&lt;/a&gt;, Авторы &lt;a href=&quot;#appendix-B&quot;&gt;Приложение B&lt;/a&gt; . Компактная схема RELAX NG ...............................</target>
        </trans-unit>
        <trans-unit id="bba4ada33d7f6d8a86341c33e255f61ec01eb34d" translate="yes" xml:space="preserve">
          <source>Status of This Memo

   This document specifies an Internet standards track protocol for the
   Internet community, and requests discussion and suggestions for
   improvements.  Please refer to the current edition of the &quot;Internet
   Official Protocol Standards&quot; (STD 1) for the standardization state
   and status of this protocol.  Distribution of this memo is unlimited.

Copyright Notice

   Copyright (C) The IETF Trust (2007).

Abstract

   Web Distributed Authoring and Versioning (WebDAV) consists of a set
   of methods, headers, and content-types ancillary to HTTP/1.1 for the
   management of resource properties, creation and management of
   resource collections, URL namespace manipulation, and resource
   locking (collision avoidance).

   &lt;a href=&quot;https://tools.ietf.org/html/rfc2518&quot;&gt;RFC 2518&lt;/a&gt; was published in February 1999, and this specification
   obsoletes &lt;a href=&quot;https://tools.ietf.org/html/rfc2518&quot;&gt;RFC 2518&lt;/a&gt; with minor revisions mostly due to
   interoperability experience. 

Table of Contents

   &lt;a href=&quot;#section-1&quot;&gt;1&lt;/a&gt;. Introduction 
   &lt;a href=&quot;#section-2&quot;&gt;2&lt;/a&gt;. Notational Conventions 
   &lt;a href=&quot;#section-3&quot;&gt;3&lt;/a&gt;. Terminology 
   &lt;a href=&quot;#section-4&quot;&gt;4&lt;/a&gt;. Data Model for Resource Properties 
      &lt;a href=&quot;#section-4.1&quot;&gt;4.1&lt;/a&gt;. The Resource Property Model 
      &lt;a href=&quot;#section-4.2&quot;&gt;4.2&lt;/a&gt;. Properties and HTTP Headers 
      &lt;a href=&quot;#section-4.3&quot;&gt;4.3&lt;/a&gt;. Property Values 
           &lt;a href=&quot;#section-4.3.1&quot;&gt;4.3.1&lt;/a&gt;. Example - Property with Mixed Content 
      &lt;a href=&quot;#section-4.4&quot;&gt;4.4&lt;/a&gt;. Property Names 
      &lt;a href=&quot;#section-4.5&quot;&gt;4.5&lt;/a&gt;. Source Resources and Output Resources 
   &lt;a href=&quot;#section-5&quot;&gt;5&lt;/a&gt;. Collections of Web Resources 
      &lt;a href=&quot;#section-5.1&quot;&gt;5.1&lt;/a&gt;. HTTP URL Namespace Model 
      &lt;a href=&quot;#section-5.2&quot;&gt;5.2&lt;/a&gt;. Collection Resources 
   &lt;a href=&quot;#section-6&quot;&gt;6&lt;/a&gt;. Locking 
      &lt;a href=&quot;#section-6.1&quot;&gt;6.1&lt;/a&gt;. Lock Model 
      &lt;a href=&quot;#section-6.2&quot;&gt;6.2&lt;/a&gt;. Exclusive vs. Shared Locks 
      &lt;a href=&quot;#section-6.3&quot;&gt;6.3&lt;/a&gt;. Required Support 
      &lt;a href=&quot;#section-6.4&quot;&gt;6.4&lt;/a&gt;. Lock Creator and Privileges 
      &lt;a href=&quot;#section-6.5&quot;&gt;6.5&lt;/a&gt;. Lock Tokens 
      &lt;a href=&quot;#section-6.6&quot;&gt;6.6&lt;/a&gt;. Lock Timeout 
      &lt;a href=&quot;#section-6.7&quot;&gt;6.7&lt;/a&gt;. Lock Capability Discovery 
      &lt;a href=&quot;#section-6.8&quot;&gt;6.8&lt;/a&gt;. Active Lock Discovery 
   &lt;a href=&quot;#section-7&quot;&gt;7&lt;/a&gt;. Write Lock 
      &lt;a href=&quot;#section-7.1&quot;&gt;7.1&lt;/a&gt;. Write Locks and Properties 
      &lt;a href=&quot;#section-7.2&quot;&gt;7.2&lt;/a&gt;. Avoiding Lost Updates 
      &lt;a href=&quot;#section-7.3&quot;&gt;7.3&lt;/a&gt;. Write Locks and Unmapped URLs 
      &lt;a href=&quot;#section-7.4&quot;&gt;7.4&lt;/a&gt;. Write Locks and Collections 
      &lt;a href=&quot;#section-7.5&quot;&gt;7.5&lt;/a&gt;. Write Locks and the If Request Header 
           &lt;a href=&quot;#section-7.5.1&quot;&gt;7.5.1&lt;/a&gt;. Example - Write Lock and COPY 
           7.5.2. Example - Deleting a Member of a Locked
                  Collection 
      &lt;a href=&quot;#section-7.6&quot;&gt;7.6&lt;/a&gt;. Write Locks and COPY/MOVE 
      &lt;a href=&quot;#section-7.7&quot;&gt;7.7&lt;/a&gt;. Refreshing Write Locks 
   &lt;a href=&quot;#section-8&quot;&gt;8&lt;/a&gt;. General Request and Response Handling 
      &lt;a href=&quot;#section-8.1&quot;&gt;8.1&lt;/a&gt;. Precedence in Error Handling 
      &lt;a href=&quot;#section-8.2&quot;&gt;8.2&lt;/a&gt;. Use of XML 
      &lt;a href=&quot;#section-8.3&quot;&gt;8.3&lt;/a&gt;. URL Handling 
           &lt;a href=&quot;#section-8.3.1&quot;&gt;8.3.1&lt;/a&gt;. Example - Correct URL Handling 
      &lt;a href=&quot;#section-8.4&quot;&gt;8.4&lt;/a&gt;. Required Bodies in Requests 
      &lt;a href=&quot;#section-8.5&quot;&gt;8.5&lt;/a&gt;. HTTP Headers for Use in WebDAV 
      &lt;a href=&quot;#section-8.6&quot;&gt;8.6&lt;/a&gt;. ETag 
      &lt;a href=&quot;#section-8.7&quot;&gt;8.7&lt;/a&gt;. Including Error Response Bodies 
      &lt;a href=&quot;#section-8.8&quot;&gt;8.8&lt;/a&gt;. Impact of Namespace Operations on Cache Validators 
   &lt;a href=&quot;#section-9&quot;&gt;9&lt;/a&gt;. HTTP Methods for Distributed Authoring 
      &lt;a href=&quot;#section-9.1&quot;&gt;9.1&lt;/a&gt;. PROPFIND Method 
           &lt;a href=&quot;#section-9.1.1&quot;&gt;9.1.1&lt;/a&gt;. PROPFIND Status Codes .............................. 

           &lt;a href=&quot;#section-9.1.2&quot;&gt;9.1.2&lt;/a&gt;. Status Codes for Use in 'propstat' Element 
           &lt;a href=&quot;#section-9.1.3&quot;&gt;9.1.3&lt;/a&gt;. Example - Retrieving Named Properties 
           9.1.4. Example - Using 'propname' to Retrieve All
                  Property Names 
           &lt;a href=&quot;#section-9.1.5&quot;&gt;9.1.5&lt;/a&gt;. Example - Using So-called 'allprop' 
           &lt;a href=&quot;#section-9.1.6&quot;&gt;9.1.6&lt;/a&gt;. Example - Using 'allprop' with 'include' 
      &lt;a href=&quot;#section-9.2&quot;&gt;9.2&lt;/a&gt;. PROPPATCH Method 
           &lt;a href=&quot;#section-9.2.1&quot;&gt;9.2.1&lt;/a&gt;. Status Codes for Use in 'propstat' Element 
           &lt;a href=&quot;#section-9.2.2&quot;&gt;9.2.2&lt;/a&gt;. Example - PROPPATCH 
      &lt;a href=&quot;#section-9.3&quot;&gt;9.3&lt;/a&gt;. MKCOL Method 
           &lt;a href=&quot;#section-9.3.1&quot;&gt;9.3.1&lt;/a&gt;. MKCOL Status Codes 
           &lt;a href=&quot;#section-9.3.2&quot;&gt;9.3.2&lt;/a&gt;. Example - MKCOL 
      &lt;a href=&quot;#section-9.4&quot;&gt;9.4&lt;/a&gt;. GET, HEAD for Collections 
      &lt;a href=&quot;#section-9.5&quot;&gt;9.5&lt;/a&gt;. POST for Collections 
      &lt;a href=&quot;#section-9.6&quot;&gt;9.6&lt;/a&gt;. DELETE Requirements 
           &lt;a href=&quot;#section-9.6.1&quot;&gt;9.6.1&lt;/a&gt;. DELETE for Collections 
           &lt;a href=&quot;#section-9.6.2&quot;&gt;9.6.2&lt;/a&gt;. Example - DELETE 
      &lt;a href=&quot;#section-9.7&quot;&gt;9.7&lt;/a&gt;. PUT Requirements 
           &lt;a href=&quot;#section-9.7.1&quot;&gt;9.7.1&lt;/a&gt;. PUT for Non-Collection Resources 
           &lt;a href=&quot;#section-9.7.2&quot;&gt;9.7.2&lt;/a&gt;. PUT for Collections 
      &lt;a href=&quot;#section-9.8&quot;&gt;9.8&lt;/a&gt;. COPY Method 
           &lt;a href=&quot;#section-9.8.1&quot;&gt;9.8.1&lt;/a&gt;. COPY for Non-collection Resources 
           &lt;a href=&quot;#section-9.8.2&quot;&gt;9.8.2&lt;/a&gt;. COPY for Properties 
           &lt;a href=&quot;#section-9.8.3&quot;&gt;9.8.3&lt;/a&gt;. COPY for Collections 
           &lt;a href=&quot;#section-9.8.4&quot;&gt;9.8.4&lt;/a&gt;. COPY and Overwriting Destination Resources 
           &lt;a href=&quot;#section-9.8.5&quot;&gt;9.8.5&lt;/a&gt;. Status Codes 
           &lt;a href=&quot;#section-9.8.6&quot;&gt;9.8.6&lt;/a&gt;. Example - COPY with Overwrite 
           &lt;a href=&quot;#section-9.8.7&quot;&gt;9.8.7&lt;/a&gt;. Example - COPY with No Overwrite 
           &lt;a href=&quot;#section-9.8.8&quot;&gt;9.8.8&lt;/a&gt;. Example - COPY of a Collection 
      &lt;a href=&quot;#section-9.9&quot;&gt;9.9&lt;/a&gt;. MOVE Method 
           &lt;a href=&quot;#section-9.9.1&quot;&gt;9.9.1&lt;/a&gt;. MOVE for Properties 
           &lt;a href=&quot;#section-9.9.2&quot;&gt;9.9.2&lt;/a&gt;. MOVE for Collections 
           &lt;a href=&quot;#section-9.9.3&quot;&gt;9.9.3&lt;/a&gt;. MOVE and the Overwrite Header 
           &lt;a href=&quot;#section-9.9.4&quot;&gt;9.9.4&lt;/a&gt;. Status Codes 
           &lt;a href=&quot;#section-9.9.5&quot;&gt;9.9.5&lt;/a&gt;. Example - MOVE of a Non-Collection 
           &lt;a href=&quot;#section-9.9.6&quot;&gt;9.9.6&lt;/a&gt;. Example - MOVE of a Collection 
      &lt;a href=&quot;#section-9.10&quot;&gt;9.10&lt;/a&gt;. LOCK Method 
           &lt;a href=&quot;#section-9.10.1&quot;&gt;9.10.1&lt;/a&gt;. Creating a Lock on an Existing Resource 
           &lt;a href=&quot;#section-9.10.2&quot;&gt;9.10.2&lt;/a&gt;. Refreshing Locks 
           &lt;a href=&quot;#section-9.10.3&quot;&gt;9.10.3&lt;/a&gt;. Depth and Locking 
           &lt;a href=&quot;#section-9.10.4&quot;&gt;9.10.4&lt;/a&gt;. Locking Unmapped URLs 
           &lt;a href=&quot;#section-9.10.5&quot;&gt;9.10.5&lt;/a&gt;. Lock Compatibility Table 
           &lt;a href=&quot;#section-9.10.6&quot;&gt;9.10.6&lt;/a&gt;. LOCK Responses 
           &lt;a href=&quot;#section-9.10.7&quot;&gt;9.10.7&lt;/a&gt;. Example - Simple Lock Request 
           &lt;a href=&quot;#section-9.10.8&quot;&gt;9.10.8&lt;/a&gt;. Example - Refreshing a Write Lock 
           &lt;a href=&quot;#section-9.10.9&quot;&gt;9.10.9&lt;/a&gt;. Example - Multi-Resource Lock Request 
      &lt;a href=&quot;#section-9.11&quot;&gt;9.11&lt;/a&gt;. UNLOCK Method 
           &lt;a href=&quot;#section-9.11.1&quot;&gt;9.11.1&lt;/a&gt;. Status Codes ...................................... 

           &lt;a href=&quot;#section-9.11.2&quot;&gt;9.11.2&lt;/a&gt;. Example - UNLOCK 
   &lt;a href=&quot;#section-10&quot;&gt;10&lt;/a&gt;. HTTP Headers for Distributed Authoring 
      &lt;a href=&quot;#section-10.1&quot;&gt;10.1&lt;/a&gt;. DAV Header 
      &lt;a href=&quot;#section-10.2&quot;&gt;10.2&lt;/a&gt;. Depth Header 
      &lt;a href=&quot;#section-10.3&quot;&gt;10.3&lt;/a&gt;. Destination Header 
      &lt;a href=&quot;#section-10.4&quot;&gt;10.4&lt;/a&gt;. If Header 
           &lt;a href=&quot;#section-10.4.1&quot;&gt;10.4.1&lt;/a&gt;. Purpose 
           &lt;a href=&quot;#section-10.4.2&quot;&gt;10.4.2&lt;/a&gt;. Syntax 
           &lt;a href=&quot;#section-10.4.3&quot;&gt;10.4.3&lt;/a&gt;. List Evaluation 
           &lt;a href=&quot;#section-10.4.4&quot;&gt;10.4.4&lt;/a&gt;. Matching State Tokens and ETags 
           &lt;a href=&quot;#section-10.4.5&quot;&gt;10.4.5&lt;/a&gt;. If Header and Non-DAV-Aware Proxies 
           &lt;a href=&quot;#section-10.4.6&quot;&gt;10.4.6&lt;/a&gt;. Example - No-tag Production 
           &lt;a href=&quot;#section-10.4.7&quot;&gt;10.4.7&lt;/a&gt;. Example - Using &quot;Not&quot; with No-tag Production 
           10.4.8. Example - Causing a Condition to Always
                   Evaluate to True 
           &lt;a href=&quot;#section-10.4.9&quot;&gt;10.4.9&lt;/a&gt;. Example - Tagged List If Header in COPY 
           10.4.10. Example - Matching Lock Tokens with
                    Collection Locks 
           &lt;a href=&quot;#section-10.4.11&quot;&gt;10.4.11&lt;/a&gt;. Example - Matching ETags on Unmapped URLs 
      &lt;a href=&quot;#section-10.5&quot;&gt;10.5&lt;/a&gt;. Lock-Token Header 
      &lt;a href=&quot;#section-10.6&quot;&gt;10.6&lt;/a&gt;. Overwrite Header 
      &lt;a href=&quot;#section-10.7&quot;&gt;10.7&lt;/a&gt;. Timeout Request Header 
   &lt;a href=&quot;#section-11&quot;&gt;11&lt;/a&gt;. Status Code Extensions to HTTP/1.1 
      &lt;a href=&quot;#section-11.1&quot;&gt;11.1&lt;/a&gt;. 207 Multi-Status 
      &lt;a href=&quot;#section-11.2&quot;&gt;11.2&lt;/a&gt;. 422 Unprocessable Entity 
      &lt;a href=&quot;#section-11.3&quot;&gt;11.3&lt;/a&gt;. 423 Locked 
      &lt;a href=&quot;#section-11.4&quot;&gt;11.4&lt;/a&gt;. 424 Failed Dependency 
      &lt;a href=&quot;#section-11.5&quot;&gt;11.5&lt;/a&gt;. 507 Insufficient Storage 
   &lt;a href=&quot;#section-12&quot;&gt;12&lt;/a&gt;. Use of HTTP Status Codes 
      &lt;a href=&quot;#section-12.1&quot;&gt;12.1&lt;/a&gt;. 412 Precondition Failed 
      &lt;a href=&quot;#section-12.2&quot;&gt;12.2&lt;/a&gt;. 414 Request-URI Too Long 
   &lt;a href=&quot;#section-13&quot;&gt;13&lt;/a&gt;. Multi-Status Response 
      &lt;a href=&quot;#section-13.1&quot;&gt;13.1&lt;/a&gt;. Response Headers 
      &lt;a href=&quot;#section-13.2&quot;&gt;13.2&lt;/a&gt;. Handling Redirected Child Resources 
      &lt;a href=&quot;#section-13.3&quot;&gt;13.3&lt;/a&gt;. Internal Status Codes 
   &lt;a href=&quot;#section-14&quot;&gt;14&lt;/a&gt;. XML Element Definitions 
      &lt;a href=&quot;#section-14.1&quot;&gt;14.1&lt;/a&gt;. activelock XML Element 
      &lt;a href=&quot;#section-14.2&quot;&gt;14.2&lt;/a&gt;. allprop XML Element 
      &lt;a href=&quot;#section-14.3&quot;&gt;14.3&lt;/a&gt;. collection XML Element 
      &lt;a href=&quot;#section-14.4&quot;&gt;14.4&lt;/a&gt;. depth XML Element 
      &lt;a href=&quot;#section-14.5&quot;&gt;14.5&lt;/a&gt;. error XML Element 
      &lt;a href=&quot;#section-14.6&quot;&gt;14.6&lt;/a&gt;. exclusive XML Element 
      &lt;a href=&quot;#section-14.7&quot;&gt;14.7&lt;/a&gt;. href XML Element 
      &lt;a href=&quot;#section-14.8&quot;&gt;14.8&lt;/a&gt;. include XML Element 
      &lt;a href=&quot;#section-14.9&quot;&gt;14.9&lt;/a&gt;. location XML Element 
      &lt;a href=&quot;#section-14.10&quot;&gt;14.10&lt;/a&gt;. lockentry XML Element 
      &lt;a href=&quot;#section-14.11&quot;&gt;14.11&lt;/a&gt;. lockinfo XML Element 
      &lt;a href=&quot;#section-14.12&quot;&gt;14.12&lt;/a&gt;. lockroot XML Element .................................... 

      &lt;a href=&quot;#section-14.13&quot;&gt;14.13&lt;/a&gt;. lockscope XML Element 
      &lt;a href=&quot;#section-14.14&quot;&gt;14.14&lt;/a&gt;. locktoken XML Element 
      &lt;a href=&quot;#section-14.15&quot;&gt;14.15&lt;/a&gt;. locktype XML Element 
      &lt;a href=&quot;#section-14.16&quot;&gt;14.16&lt;/a&gt;. multistatus XML Element 
      &lt;a href=&quot;#section-14.17&quot;&gt;14.17&lt;/a&gt;. owner XML Element 
      &lt;a href=&quot;#section-14.18&quot;&gt;14.18&lt;/a&gt;. prop XML Element 
      &lt;a href=&quot;#section-14.19&quot;&gt;14.19&lt;/a&gt;. propertyupdate XML Element 
      &lt;a href=&quot;#section-14.20&quot;&gt;14.20&lt;/a&gt;. propfind XML Element 
      &lt;a href=&quot;#section-14.21&quot;&gt;14.21&lt;/a&gt;. propname XML Element 
      &lt;a href=&quot;#section-14.22&quot;&gt;14.22&lt;/a&gt;. propstat XML Element 
      &lt;a href=&quot;#section-14.23&quot;&gt;14.23&lt;/a&gt;. remove XML Element 
      &lt;a href=&quot;#section-14.24&quot;&gt;14.24&lt;/a&gt;. response XML Element 
      &lt;a href=&quot;#section-14.25&quot;&gt;14.25&lt;/a&gt;. responsedescription XML Element 
      &lt;a href=&quot;#section-14.26&quot;&gt;14.26&lt;/a&gt;. set XML Element 
      &lt;a href=&quot;#section-14.27&quot;&gt;14.27&lt;/a&gt;. shared XML Element 
      &lt;a href=&quot;#section-14.28&quot;&gt;14.28&lt;/a&gt;. status XML Element 
      &lt;a href=&quot;#section-14.29&quot;&gt;14.29&lt;/a&gt;. timeout XML Element 
      &lt;a href=&quot;#section-14.30&quot;&gt;14.30&lt;/a&gt;. write XML Element 
   &lt;a href=&quot;#section-15&quot;&gt;15&lt;/a&gt;. DAV Properties 
   &lt;a href=&quot;#section-16&quot;&gt;16&lt;/a&gt;. Precondition/Postcondition XML Elements 
   &lt;a href=&quot;#section-17&quot;&gt;17&lt;/a&gt;. XML Extensibility in DAV 
   &lt;a href=&quot;#section-18&quot;&gt;18&lt;/a&gt;. DAV Compliance Classes 
      &lt;a href=&quot;#section-18.1&quot;&gt;18.1&lt;/a&gt;. Class 1 
      &lt;a href=&quot;#section-18.2&quot;&gt;18.2&lt;/a&gt;. Class 2 
      &lt;a href=&quot;#section-18.3&quot;&gt;18.3&lt;/a&gt;. Class 3 
   &lt;a href=&quot;#section-19&quot;&gt;19&lt;/a&gt;. Internationalization Considerations 
   &lt;a href=&quot;#section-20&quot;&gt;20&lt;/a&gt;. Security Considerations 
      &lt;a href=&quot;#section-20.1&quot;&gt;20.1&lt;/a&gt;. Authentication of Clients 
      &lt;a href=&quot;#section-20.2&quot;&gt;20.2&lt;/a&gt;. Denial of Service 
      &lt;a href=&quot;#section-20.3&quot;&gt;20.3&lt;/a&gt;. Security through Obscurity 
      &lt;a href=&quot;#section-20.4&quot;&gt;20.4&lt;/a&gt;. Privacy Issues Connected to Locks 
      &lt;a href=&quot;#section-20.5&quot;&gt;20.5&lt;/a&gt;. Privacy Issues Connected to Properties 
      &lt;a href=&quot;#section-20.6&quot;&gt;20.6&lt;/a&gt;. Implications of XML Entities 
      &lt;a href=&quot;#section-20.7&quot;&gt;20.7&lt;/a&gt;. Risks Connected with Lock Tokens 
      &lt;a href=&quot;#section-20.8&quot;&gt;20.8&lt;/a&gt;. Hosting Malicious Content 
   &lt;a href=&quot;#section-21&quot;&gt;21&lt;/a&gt;. IANA Considerations 
      &lt;a href=&quot;#section-21.1&quot;&gt;21.1&lt;/a&gt;. New URI Schemes 
      &lt;a href=&quot;#section-21.2&quot;&gt;21.2&lt;/a&gt;. XML Namespaces 
      &lt;a href=&quot;#section-21.3&quot;&gt;21.3&lt;/a&gt;. Message Header Fields 
           &lt;a href=&quot;#section-21.3.1&quot;&gt;21.3.1&lt;/a&gt;. DAV 
           &lt;a href=&quot;#section-21.3.2&quot;&gt;21.3.2&lt;/a&gt;. Depth 
           &lt;a href=&quot;#section-21.3.3&quot;&gt;21.3.3&lt;/a&gt;. Destination 
           &lt;a href=&quot;#section-21.3.4&quot;&gt;21.3.4&lt;/a&gt;. If 
           &lt;a href=&quot;#section-21.3.5&quot;&gt;21.3.5&lt;/a&gt;. Lock-Token 
           &lt;a href=&quot;#section-21.3.6&quot;&gt;21.3.6&lt;/a&gt;. Overwrite 
           &lt;a href=&quot;#section-21.3.7&quot;&gt;21.3.7&lt;/a&gt;. Timeout 
      &lt;a href=&quot;#section-21.4&quot;&gt;21.4&lt;/a&gt;. HTTP Status Codes 
   &lt;a href=&quot;#section-22&quot;&gt;22&lt;/a&gt;. Acknowledgements ............................................. 

   &lt;a href=&quot;#section-23&quot;&gt;23&lt;/a&gt;. Contributors to This Specification 
   &lt;a href=&quot;#section-24&quot;&gt;24&lt;/a&gt;. Authors of &lt;a href=&quot;https://tools.ietf.org/html/rfc2518&quot;&gt;RFC 2518&lt;/a&gt;&lt;a href=&quot;#section-25&quot;&gt;25&lt;/a&gt;. References 
      &lt;a href=&quot;#section-25.1&quot;&gt;25.1&lt;/a&gt;. Normative References
      &lt;a href=&quot;#section-25.2&quot;&gt;25.2&lt;/a&gt;. Informative References 
   &lt;a href=&quot;#appendix-A&quot;&gt;Appendix A&lt;/a&gt;.  Notes on Processing XML Elements 
      &lt;a href=&quot;#appendix-A.1&quot;&gt;A.1&lt;/a&gt;. Notes on Empty XML Elements 
      &lt;a href=&quot;#appendix-A.2&quot;&gt;A.2&lt;/a&gt;. Notes on Illegal XML Processing 
      &lt;a href=&quot;#appendix-A.3&quot;&gt;A.3&lt;/a&gt;. Example - XML Syntax Error 
      &lt;a href=&quot;#appendix-A.4&quot;&gt;A.4&lt;/a&gt;. Example - Unexpected XML Element 
   &lt;a href=&quot;#appendix-B&quot;&gt;Appendix B&lt;/a&gt;. Notes on HTTP Client Compatibility 
   &lt;a href=&quot;#appendix-C&quot;&gt;Appendix C&lt;/a&gt;. The 'opaquelocktoken' Scheme and URIs 
   &lt;a href=&quot;#appendix-D&quot;&gt;Appendix D&lt;/a&gt;. Lock-null Resources 
      &lt;a href=&quot;#appendix-D.1&quot;&gt;D.1&lt;/a&gt;. Guidance for Clients Using LOCK to Create Resources 
   &lt;a href=&quot;#appendix-E&quot;&gt;Appendix E&lt;/a&gt;. Guidance for Clients Desiring to Authenticate 
   &lt;a href=&quot;#appendix-F&quot;&gt;Appendix F&lt;/a&gt;. Summary of Changes from &lt;a href=&quot;https://tools.ietf.org/html/rfc2518&quot;&gt;RFC 2518&lt;/a&gt;&lt;a href=&quot;#appendix-F.1&quot;&gt;F.1&lt;/a&gt;. Changes for Both Client and Server Implementations 
      &lt;a href=&quot;#appendix-F.2&quot;&gt;F.2&lt;/a&gt;. Changes for Server Implementations 
      &lt;a href=&quot;#appendix-F.3&quot;&gt;F.3&lt;/a&gt;. Other Changes ............................................</source>
          <target state="translated">Статус этой памятки В этом документе определяется протокол отслеживания стандартов Интернета для Интернет-сообщества, а также предлагается обсуждение и предложения по улучшениям. См. Текущую редакцию &amp;laquo;Официальных стандартов протокола Интернета&amp;raquo; (STD 1), чтобы узнать о состоянии стандартизации и статусе этого протокола. Распространение этой памятки не ограничено. Уведомление об авторских правах Авторские права (C) IETF Trust (2007 г.). Абстрактная веб-распределенная разработка и управление версиями (WebDAV) состоит из набора методов, заголовков и типов контента, вспомогательных для HTTP / 1.1 для управления свойствами ресурсов, создания и управления коллекциями ресурсов, манипулирования пространством имен URL и блокировки ресурсов (коллизия). избегание). &lt;a href=&quot;https://tools.ietf.org/html/rfc2518&quot;&gt;RFC 2518&lt;/a&gt;была опубликована в феврале 1999 г., и эта спецификация отменяет &lt;a href=&quot;https://tools.ietf.org/html/rfc2518&quot;&gt;RFC 2518&lt;/a&gt; с незначительными изменениями, в основном из-за опыта взаимодействия. Содержание &lt;a href=&quot;#section-1&quot;&gt;1&lt;/a&gt; . Введение &lt;a href=&quot;#section-2&quot;&gt;2&lt;/a&gt; . Условные обозначения &lt;a href=&quot;#section-3&quot;&gt;3&lt;/a&gt; . Терминология &lt;a href=&quot;#section-4&quot;&gt;4&lt;/a&gt; . Модель данных для свойств ресурса &lt;a href=&quot;#section-4.1&quot;&gt;4.1&lt;/a&gt; . Модель свойств ресурса &lt;a href=&quot;#section-4.2&quot;&gt;4.2&lt;/a&gt; . Свойства и заголовки HTTP &lt;a href=&quot;#section-4.3&quot;&gt;4.3&lt;/a&gt; . &lt;a href=&quot;#section-4.3.1&quot;&gt;Стоимость&lt;/a&gt; недвижимости 4.3.1 . Пример - недвижимость со смешанным содержанием &lt;a href=&quot;#section-4.4&quot;&gt;4.4&lt;/a&gt; . Имена свойств &lt;a href=&quot;#section-4.5&quot;&gt;4.5&lt;/a&gt; . Исходные ресурсы и выходные ресурсы &lt;a href=&quot;#section-5&quot;&gt;5&lt;/a&gt;, Коллекции веб-ресурсов &lt;a href=&quot;#section-5.1&quot;&gt;5.1&lt;/a&gt; . Модель пространства имен URL-адресов HTTP &lt;a href=&quot;#section-5.2&quot;&gt;5.2&lt;/a&gt; . Ресурсы коллекции &lt;a href=&quot;#section-6&quot;&gt;6&lt;/a&gt; . Блокировка &lt;a href=&quot;#section-6.1&quot;&gt;6.1&lt;/a&gt; . Модель замка &lt;a href=&quot;#section-6.2&quot;&gt;6.2&lt;/a&gt; . Эксклюзивные и общие блокировки &lt;a href=&quot;#section-6.3&quot;&gt;6.3&lt;/a&gt; . Требуемая поддержка &lt;a href=&quot;#section-6.4&quot;&gt;6.4&lt;/a&gt; . Создатель блокировки и привилегии &lt;a href=&quot;#section-6.5&quot;&gt;6.5&lt;/a&gt; . Жетоны блокировки &lt;a href=&quot;#section-6.6&quot;&gt;6.6&lt;/a&gt; . Тайм-аут блокировки &lt;a href=&quot;#section-6.7&quot;&gt;6.7&lt;/a&gt; . Обнаружение возможности блокировки &lt;a href=&quot;#section-6.8&quot;&gt;6.8&lt;/a&gt; . Обнаружение активного замка &lt;a href=&quot;#section-7&quot;&gt;7&lt;/a&gt; . Блокировка записи &lt;a href=&quot;#section-7.1&quot;&gt;7.1&lt;/a&gt; . Блокировки записи и свойства &lt;a href=&quot;#section-7.2&quot;&gt;7.2&lt;/a&gt; . Как избежать утраченных обновлений &lt;a href=&quot;#section-7.3&quot;&gt;7.3&lt;/a&gt;, Блокировки записи и несопоставленные URL-адреса &lt;a href=&quot;#section-7.4&quot;&gt;7.4&lt;/a&gt; . Запись замков и коллекций &lt;a href=&quot;#section-7.5&quot;&gt;7.5&lt;/a&gt; . Блокировки записи и заголовок запроса If &lt;a href=&quot;#section-7.5.1&quot;&gt;7.5.1&lt;/a&gt; . Пример - блокировка записи и копирование 7.5.2. Пример - Удаление члена закрытой коллекции &lt;a href=&quot;#section-7.6&quot;&gt;7.6&lt;/a&gt; . Блокировка записи и КОПИРОВАНИЕ / ПЕРЕМЕЩЕНИЕ &lt;a href=&quot;#section-7.7&quot;&gt;7.7&lt;/a&gt; . Обновление блокировок записи &lt;a href=&quot;#section-8&quot;&gt;8&lt;/a&gt; . Общая обработка запросов и ответов &lt;a href=&quot;#section-8.1&quot;&gt;8.1&lt;/a&gt; . Приоритет при обработке ошибок &lt;a href=&quot;#section-8.2&quot;&gt;8.2&lt;/a&gt; . Использование XML &lt;a href=&quot;#section-8.3&quot;&gt;8.3&lt;/a&gt; . Обработка URL-адресов &lt;a href=&quot;#section-8.3.1&quot;&gt;8.3.1&lt;/a&gt; . Пример - правильная обработка URL-адресов &lt;a href=&quot;#section-8.4&quot;&gt;8.4&lt;/a&gt;, Обязательные элементы в запросах &lt;a href=&quot;#section-8.5&quot;&gt;8.5&lt;/a&gt; . Заголовки HTTP для использования в WebDAV &lt;a href=&quot;#section-8.6&quot;&gt;8.6&lt;/a&gt; . ETag &lt;a href=&quot;#section-8.7&quot;&gt;8.7&lt;/a&gt; . Включая тела сообщений об ошибках &lt;a href=&quot;#section-8.8&quot;&gt;8.8&lt;/a&gt; . Влияние операций с пространством имен на валидаторы кеша &lt;a href=&quot;#section-9&quot;&gt;9&lt;/a&gt; . Методы HTTP для распределенной разработки &lt;a href=&quot;#section-9.1&quot;&gt;9.1&lt;/a&gt; . PROPFIND Метод &lt;a href=&quot;#section-9.1.1&quot;&gt;9.1.1&lt;/a&gt; . Коды состояния PROPFIND ........................... &lt;a href=&quot;#section-9.1.2&quot;&gt;9.1.2&lt;/a&gt; . Коды состояния для использования в элементе propstat &lt;a href=&quot;#section-9.1.3&quot;&gt;9.1.3&lt;/a&gt; . Пример - получение именованных свойств 9.1.4. Пример - использование 'propname' для получения всех имен &lt;a href=&quot;#section-9.1.5&quot;&gt;свойств 9.1.5&lt;/a&gt;, Пример - использование так называемого &amp;laquo;allprop&amp;raquo; &lt;a href=&quot;#section-9.1.6&quot;&gt;9.1.6&lt;/a&gt; . Пример - использование allprop с include &lt;a href=&quot;#section-9.2&quot;&gt;9.2&lt;/a&gt; . Метод PROPPATCH &lt;a href=&quot;#section-9.2.1&quot;&gt;9.2.1&lt;/a&gt; . Коды состояния для использования в элементе propstat &lt;a href=&quot;#section-9.2.2&quot;&gt;9.2.2&lt;/a&gt; . Пример - PROPPATCH &lt;a href=&quot;#section-9.3&quot;&gt;9.3&lt;/a&gt; . MKCOL Метод &lt;a href=&quot;#section-9.3.1&quot;&gt;9.3.1&lt;/a&gt; . Коды статуса MKCOL &lt;a href=&quot;#section-9.3.2&quot;&gt;9.3.2&lt;/a&gt; . Пример - MKCOL &lt;a href=&quot;#section-9.4&quot;&gt;9.4&lt;/a&gt; . GET, HEAD для коллекций &lt;a href=&quot;#section-9.5&quot;&gt;9.5&lt;/a&gt; . POST для коллекций &lt;a href=&quot;#section-9.6&quot;&gt;9.6&lt;/a&gt; . УДАЛИТЬ Требования &lt;a href=&quot;#section-9.6.1&quot;&gt;9.6.1&lt;/a&gt; . УДАЛЕНИЕ для коллекций &lt;a href=&quot;#section-9.6.2&quot;&gt;9.6.2&lt;/a&gt; . Пример - УДАЛИТЬ &lt;a href=&quot;#section-9.7&quot;&gt;9.7&lt;/a&gt;, Требования PUT &lt;a href=&quot;#section-9.7.1&quot;&gt;9.7.1&lt;/a&gt; . PUT для ресурсов, не связанных с коллекцией &lt;a href=&quot;#section-9.7.2&quot;&gt;9.7.2&lt;/a&gt; . PUT для коллекций &lt;a href=&quot;#section-9.8&quot;&gt;9.8&lt;/a&gt; . Метод КОПИРОВАНИЯ &lt;a href=&quot;#section-9.8.1&quot;&gt;9.8.1&lt;/a&gt; . КОПИЯ для ресурсов, не &lt;a href=&quot;#section-9.8.2&quot;&gt;связанных с&lt;/a&gt; коллекцией 9.8.2 . КОПИЯ для свойств &lt;a href=&quot;#section-9.8.3&quot;&gt;9.8.3&lt;/a&gt; . КОПИЯ для коллекций &lt;a href=&quot;#section-9.8.4&quot;&gt;9.8.4&lt;/a&gt; . КОПИРОВАНИЕ и перезапись &lt;a href=&quot;#section-9.8.5&quot;&gt;целевых&lt;/a&gt; ресурсов 9.8.5 . Коды состояния &lt;a href=&quot;#section-9.8.6&quot;&gt;9.8.6&lt;/a&gt; . Пример - КОПИРОВАНИЕ с перезаписью &lt;a href=&quot;#section-9.8.7&quot;&gt;9.8.7&lt;/a&gt; . Пример - КОПИРОВАНИЕ без перезаписи &lt;a href=&quot;#section-9.8.8&quot;&gt;9.8.8&lt;/a&gt; . Пример - КОПИЯ коллекции &lt;a href=&quot;#section-9.9&quot;&gt;9.9&lt;/a&gt;, MOVE Метод &lt;a href=&quot;#section-9.9.1&quot;&gt;9.9.1&lt;/a&gt; . MOVE для недвижимости &lt;a href=&quot;#section-9.9.2&quot;&gt;9.9.2&lt;/a&gt; . MOVE для коллекций &lt;a href=&quot;#section-9.9.3&quot;&gt;9.9.3&lt;/a&gt; . MOVE и перезапись заголовка &lt;a href=&quot;#section-9.9.4&quot;&gt;9.9.4&lt;/a&gt; . Коды состояния &lt;a href=&quot;#section-9.9.5&quot;&gt;9.9.5&lt;/a&gt; . Пример - &lt;a href=&quot;#section-9.9.6&quot;&gt;ПЕРЕМЕЩЕНИЕ&lt;/a&gt; не-коллекции 9.9.6 . Пример - ПЕРЕМЕЩЕНИЕ коллекции &lt;a href=&quot;#section-9.10&quot;&gt;9.10&lt;/a&gt; . Метод LOCK &lt;a href=&quot;#section-9.10.1&quot;&gt;9.10.1&lt;/a&gt; . Создание блокировки на существующем &lt;a href=&quot;#section-9.10.2&quot;&gt;ресурсе 9.10.2&lt;/a&gt; . Обновление блокировок &lt;a href=&quot;#section-9.10.3&quot;&gt;9.10.3&lt;/a&gt; . Глубина и &lt;a href=&quot;#section-9.10.4&quot;&gt;запирание 9.10.4&lt;/a&gt; . Блокировка несопоставленных URL-адресов &lt;a href=&quot;#section-9.10.5&quot;&gt;9.10.5&lt;/a&gt;, Таблица совместимости &lt;a href=&quot;#section-9.10.6&quot;&gt;замков 9.10.6&lt;/a&gt; . LOCK Ответы &lt;a href=&quot;#section-9.10.7&quot;&gt;9.10.7&lt;/a&gt; . Пример - запрос простой блокировки &lt;a href=&quot;#section-9.10.8&quot;&gt;9.10.8&lt;/a&gt; . Пример - &lt;a href=&quot;#section-9.10.9&quot;&gt;обновление&lt;/a&gt; блокировки записи 9.10.9 . Пример - запрос блокировки нескольких ресурсов &lt;a href=&quot;#section-9.11&quot;&gt;9.11&lt;/a&gt; . &lt;a href=&quot;#section-9.11.1&quot;&gt;РАЗБЛОКИРОВКА&lt;/a&gt; Метод 9.11.1 . Коды состояния ..................................... &lt;a href=&quot;#section-9.11.2&quot;&gt;9.11.2&lt;/a&gt; . Пример - РАЗБЛОКИРОВАТЬ &lt;a href=&quot;#section-10&quot;&gt;10&lt;/a&gt; . Заголовки HTTP для распределенной разработки &lt;a href=&quot;#section-10.1&quot;&gt;10.1&lt;/a&gt; . Заголовок DAV &lt;a href=&quot;#section-10.2&quot;&gt;10.2&lt;/a&gt; . Заголовок глубины &lt;a href=&quot;#section-10.3&quot;&gt;10.3&lt;/a&gt; . Заголовок назначения &lt;a href=&quot;#section-10.4&quot;&gt;10.4&lt;/a&gt; . Если заголовок &lt;a href=&quot;#section-10.4.1&quot;&gt;10.4.1&lt;/a&gt; . Цель &lt;a href=&quot;#section-10.4.2&quot;&gt;10.4.2&lt;/a&gt; . Синтаксис &lt;a href=&quot;#section-10.4.3&quot;&gt;10.4.3&lt;/a&gt; . Оценка списка &lt;a href=&quot;#section-10.4.4&quot;&gt;10.4.4&lt;/a&gt; . Соответствие токенов состояния и тегов ETag &lt;a href=&quot;#section-10.4.5&quot;&gt;10.4.5&lt;/a&gt; . Если заголовок и прокси без поддержки DAV &lt;a href=&quot;#section-10.4.6&quot;&gt;10.4.6&lt;/a&gt; . Пример - Производство без тегов &lt;a href=&quot;#section-10.4.7&quot;&gt;10.4.7&lt;/a&gt; . Пример - Использование &amp;laquo;Не&amp;raquo; с производством без тегов 10.4.8. Пример - принуждение условия всегда оценивать как истинное &lt;a href=&quot;#section-10.4.9&quot;&gt;10.4.9&lt;/a&gt; . Пример - Tagged List If Header in COPY 10.4.10. Пример - соответствие токенов блокировок замкам коллекций &lt;a href=&quot;#section-10.4.11&quot;&gt;10.4.11&lt;/a&gt; . Пример - сопоставление ETags на несопоставленных URL &lt;a href=&quot;#section-10.5&quot;&gt;10.5&lt;/a&gt; . Заголовок Lock-Token &lt;a href=&quot;#section-10.6&quot;&gt;10.6&lt;/a&gt; . Перезаписать заголовок &lt;a href=&quot;#section-10.7&quot;&gt;10.7&lt;/a&gt; . Заголовок запроса тайм-аута &lt;a href=&quot;#section-11&quot;&gt;11&lt;/a&gt; . Расширения кода состояния для HTTP / 1.1 &lt;a href=&quot;#section-11.1&quot;&gt;11.1&lt;/a&gt; . 207 Мульти-статус &lt;a href=&quot;#section-11.2&quot;&gt;11.2&lt;/a&gt; . 422 Необработанная сущность &lt;a href=&quot;#section-11.3&quot;&gt;11.3&lt;/a&gt; . 423 Заблокировано &lt;a href=&quot;#section-11.4&quot;&gt;11.4&lt;/a&gt; . 424 Неудачная зависимость &lt;a href=&quot;#section-11.5&quot;&gt;11.5&lt;/a&gt; . 507 Недостаточно памяти &lt;a href=&quot;#section-12&quot;&gt;12&lt;/a&gt; . Использование кодов состояния HTTP &lt;a href=&quot;#section-12.1&quot;&gt;12.1&lt;/a&gt; . 412 Ошибка &lt;a href=&quot;#section-12.2&quot;&gt;предварительного&lt;/a&gt; условия 12.2 . 414 Request-URI Too Long &lt;a href=&quot;#section-13&quot;&gt;13&lt;/a&gt; . Мульти-статусный ответ &lt;a href=&quot;#section-13.1&quot;&gt;13.1&lt;/a&gt; . Заголовки ответа &lt;a href=&quot;#section-13.2&quot;&gt;13.2&lt;/a&gt;, Обработка перенаправленных дочерних ресурсов &lt;a href=&quot;#section-13.3&quot;&gt;13.3&lt;/a&gt; . Коды внутреннего состояния &lt;a href=&quot;#section-14&quot;&gt;14&lt;/a&gt; . Определения элементов XML &lt;a href=&quot;#section-14.1&quot;&gt;14.1&lt;/a&gt; . XML-элемент activelock &lt;a href=&quot;#section-14.2&quot;&gt;14.2&lt;/a&gt; . XML-элемент allprop &lt;a href=&quot;#section-14.3&quot;&gt;14.3&lt;/a&gt; . Коллекция XML Element &lt;a href=&quot;#section-14.4&quot;&gt;14.4&lt;/a&gt; . XML-элемент глубины &lt;a href=&quot;#section-14.5&quot;&gt;14.5&lt;/a&gt; . Ошибка XML-элемента &lt;a href=&quot;#section-14.6&quot;&gt;14.6&lt;/a&gt; . эксклюзивный элемент XML &lt;a href=&quot;#section-14.7&quot;&gt;14.7&lt;/a&gt; . Элемент XML href &lt;a href=&quot;#section-14.8&quot;&gt;14.8&lt;/a&gt; . включить элемент XML &lt;a href=&quot;#section-14.9&quot;&gt;14.9&lt;/a&gt; . Элемент XML location &lt;a href=&quot;#section-14.10&quot;&gt;14.10&lt;/a&gt; . XML-элемент lockentry &lt;a href=&quot;#section-14.11&quot;&gt;14.11&lt;/a&gt; . XML-элемент lockinfo &lt;a href=&quot;#section-14.12&quot;&gt;14.12&lt;/a&gt;, XML-элемент lockroot ....................................... &lt;a href=&quot;#section-14.13&quot;&gt;14.13&lt;/a&gt; . XML-элемент lockscope &lt;a href=&quot;#section-14.14&quot;&gt;14.14&lt;/a&gt; . XML-элемент locktoken &lt;a href=&quot;#section-14.15&quot;&gt;14.15&lt;/a&gt; . XML-элемент locktype &lt;a href=&quot;#section-14.16&quot;&gt;14.16&lt;/a&gt; . Элемент XML с несколькими состояниями &lt;a href=&quot;#section-14.17&quot;&gt;14.17&lt;/a&gt; . XML-элемент владельца &lt;a href=&quot;#section-14.18&quot;&gt;14.18&lt;/a&gt; . prop XML-элемент &lt;a href=&quot;#section-14.19&quot;&gt;14.19&lt;/a&gt; . XML-элемент propertyupdate &lt;a href=&quot;#section-14.20&quot;&gt;14.20&lt;/a&gt; . Элемент XML propfind &lt;a href=&quot;#section-14.21&quot;&gt;14.21&lt;/a&gt; . Элемент XML &lt;a href=&quot;#section-14.22&quot;&gt;propname 14.22&lt;/a&gt; . propstat XML Элемент &lt;a href=&quot;#section-14.23&quot;&gt;14,23&lt;/a&gt; . удалить элемент XML &lt;a href=&quot;#section-14.24&quot;&gt;14.24&lt;/a&gt; . XML-элемент ответа &lt;a href=&quot;#section-14.25&quot;&gt;14.25&lt;/a&gt;, XML-элемент responsedescription &lt;a href=&quot;#section-14.26&quot;&gt;14.26&lt;/a&gt; . установить элемент XML &lt;a href=&quot;#section-14.27&quot;&gt;14.27&lt;/a&gt; . общий элемент XML &lt;a href=&quot;#section-14.28&quot;&gt;14.28&lt;/a&gt; . Элемент XML status &lt;a href=&quot;#section-14.29&quot;&gt;14.29&lt;/a&gt; . тайм-аут XML-элемент &lt;a href=&quot;#section-14.30&quot;&gt;14.30&lt;/a&gt; . напишите элемент XML &lt;a href=&quot;#section-15&quot;&gt;15&lt;/a&gt; . DAV Свойства &lt;a href=&quot;#section-16&quot;&gt;16&lt;/a&gt; . XML-элементы предусловия / постусловия &lt;a href=&quot;#section-17&quot;&gt;17&lt;/a&gt; . Расширяемость XML в DAV &lt;a href=&quot;#section-18&quot;&gt;18&lt;/a&gt; . Классы соответствия DAV &lt;a href=&quot;#section-18.1&quot;&gt;18.1&lt;/a&gt; . Класс 1 &lt;a href=&quot;#section-18.2&quot;&gt;18.2&lt;/a&gt; . Класс 2 &lt;a href=&quot;#section-18.3&quot;&gt;18.3&lt;/a&gt; . 3 класс &lt;a href=&quot;#section-19&quot;&gt;19&lt;/a&gt; . Соображения по интернационализации &lt;a href=&quot;#section-20&quot;&gt;20&lt;/a&gt; . Соображения безопасности &lt;a href=&quot;#section-20.1&quot;&gt;20.1&lt;/a&gt; . Аутентификация клиентов &lt;a href=&quot;#section-20.2&quot;&gt;20.2&lt;/a&gt; . Отказ в обслуживании &lt;a href=&quot;#section-20.3&quot;&gt;20.3&lt;/a&gt; . Безопасность через неизвестность &lt;a href=&quot;#section-20.4&quot;&gt;20.4&lt;/a&gt; . Проблемы конфиденциальности, связанные с замками &lt;a href=&quot;#section-20.5&quot;&gt;20.5&lt;/a&gt; . Вопросы конфиденциальности, связанные с недвижимостью &lt;a href=&quot;#section-20.6&quot;&gt;20.6&lt;/a&gt; . Значение XML-сущностей &lt;a href=&quot;#section-20.7&quot;&gt;20.7&lt;/a&gt; . Риски, связанные с токенами блокировки &lt;a href=&quot;#section-20.8&quot;&gt;20.8&lt;/a&gt; . Размещение вредоносного содержимого &lt;a href=&quot;#section-21&quot;&gt;21&lt;/a&gt; . Соображения IANA &lt;a href=&quot;#section-21.1&quot;&gt;21.1&lt;/a&gt; . Новые схемы URI &lt;a href=&quot;#section-21.2&quot;&gt;21.2&lt;/a&gt; . Пространства имен XML &lt;a href=&quot;#section-21.3&quot;&gt;21.3&lt;/a&gt; . Поля заголовка сообщения &lt;a href=&quot;#section-21.3.1&quot;&gt;21.3.1&lt;/a&gt; . DAV &lt;a href=&quot;#section-21.3.2&quot;&gt;21.3.2&lt;/a&gt;, Глубина &lt;a href=&quot;#section-21.3.3&quot;&gt;21.3.3&lt;/a&gt; . Назначение &lt;a href=&quot;#section-21.3.4&quot;&gt;21.3.4&lt;/a&gt; . Если &lt;a href=&quot;#section-21.3.5&quot;&gt;21.3.5&lt;/a&gt; . Lock-Token &lt;a href=&quot;#section-21.3.6&quot;&gt;21.3.6&lt;/a&gt; . Перезаписать &lt;a href=&quot;#section-21.3.7&quot;&gt;21.3.7&lt;/a&gt; . Тайм-аут &lt;a href=&quot;#section-21.4&quot;&gt;21.4&lt;/a&gt; . Коды состояния HTTP &lt;a href=&quot;#section-22&quot;&gt;22&lt;/a&gt; . Благодарности ............................................. &lt;a href=&quot;#section-23&quot;&gt;23&lt;/a&gt; . Соавторы данной спецификации &lt;a href=&quot;#section-24&quot;&gt;24&lt;/a&gt; . Авторы &lt;a href=&quot;https://tools.ietf.org/html/rfc2518&quot;&gt;RFC 2518 &lt;/a&gt;&lt;a href=&quot;#section-25&quot;&gt;25&lt;/a&gt; . Ссылки &lt;a href=&quot;#section-25.1&quot;&gt;25.1&lt;/a&gt; . Нормативные ссылки &lt;a href=&quot;#section-25.2&quot;&gt;25.2&lt;/a&gt; . Информативные ссылки &lt;a href=&quot;#appendix-A&quot;&gt;Приложение A&lt;/a&gt; . Примечания по обработке XML-элементов &lt;a href=&quot;#appendix-A.1&quot;&gt;A.1&lt;/a&gt;, Примечания к пустым элементам XML &lt;a href=&quot;#appendix-A.2&quot;&gt;A.2&lt;/a&gt; . Замечания о незаконной обработке XML &lt;a href=&quot;#appendix-A.3&quot;&gt;A.3&lt;/a&gt; . Пример - синтаксическая ошибка XML &lt;a href=&quot;#appendix-A.4&quot;&gt;A.4&lt;/a&gt; . Пример - Неожиданный XML элемент &lt;a href=&quot;#appendix-B&quot;&gt;Приложение B&lt;/a&gt; . Замечания по HTTP Client Compatibility &lt;a href=&quot;#appendix-C&quot;&gt;Приложение C&lt;/a&gt; . &amp;laquo;Opaquelocktoken&amp;raquo; Схема и идентификаторы URI &lt;a href=&quot;#appendix-D&quot;&gt;Приложение D&lt;/a&gt; . Ресурсы Lock-null &lt;a href=&quot;#appendix-D.1&quot;&gt;D.1&lt;/a&gt; . Руководство для клиентов , используя блокировку для создания ресурсов &lt;a href=&quot;#appendix-E&quot;&gt;Приложение E&lt;/a&gt; . Руководство для клиентов , желающих Authenticate &lt;a href=&quot;#appendix-F&quot;&gt;Приложения F&lt;/a&gt; . Сводка изменений по сравнению с &lt;a href=&quot;https://tools.ietf.org/html/rfc2518&quot;&gt;RFC 2518 &lt;/a&gt;&lt;a href=&quot;#appendix-F.1&quot;&gt;F.1&lt;/a&gt; . Изменения для клиентских и серверных реализаций &lt;a href=&quot;#appendix-F.2&quot;&gt;F.2&lt;/a&gt;, Изменения для серверных реализаций &lt;a href=&quot;#appendix-F.3&quot;&gt;F.3&lt;/a&gt; . Прочие изменения ............................................</target>
        </trans-unit>
        <trans-unit id="5314ebdcf29205bc56fbbcaea0c60b012d05ccf0" translate="yes" xml:space="preserve">
          <source>Status of responses including a &lt;code&gt;Location&lt;/code&gt; header: &lt;a href=&quot;../status/201&quot;&gt;&lt;code&gt;201&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../status/301&quot;&gt;&lt;code&gt;301&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../status/302&quot;&gt;&lt;code&gt;302&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../status/303&quot;&gt;&lt;code&gt;303&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../status/307&quot;&gt;&lt;code&gt;307&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../status/308&quot;&gt;&lt;code&gt;308&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Статус ответов, включая заголовок &lt;code&gt;Location&lt;/code&gt; : &lt;a href=&quot;../status/201&quot;&gt; &lt;code&gt;201&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../status/301&quot;&gt; &lt;code&gt;301&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../status/302&quot;&gt; &lt;code&gt;302&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../status/303&quot;&gt; &lt;code&gt;303&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../status/307&quot;&gt; &lt;code&gt;307&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../status/308&quot;&gt; &lt;code&gt;308&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d856fa610b4491baa384c8f7803b6e1e2fc35cdc" translate="yes" xml:space="preserve">
          <source>Status of this Memo

   This document specifies an Internet standards track protocol for the
   Internet community, and requests discussion and suggestions for
   improvements.  Please refer to the current edition of the &quot;Internet
   Official Protocol Standards&quot; (STD 1) for the standardization state
   and status of this protocol.  Distribution of this memo is unlimited.

Copyright Notice

   Copyright (C) The Internet Society (1999).  All Rights Reserved.

Abstract

   The Hypertext Transfer Protocol (HTTP) is an application-level
   protocol for distributed, collaborative, hypermedia information
   systems. It is a generic, stateless, protocol which can be used for
   many tasks beyond its use for hypertext, such as name servers and
   distributed object management systems, through extension of its
   request methods, error codes and headers [&lt;a href=&quot;#ref-47&quot;&gt;47&lt;/a&gt;]. A feature of HTTP is
   the typing and negotiation of data representation, allowing systems
   to be built independently of the data being transferred.

   HTTP has been in use by the World-Wide Web global information
   initiative since 1990. This specification defines the protocol
   referred to as &quot;HTTP/1.1&quot;, and is an update to &lt;a href=&quot;https://tools.ietf.org/html/rfc2068&quot;&gt;RFC 2068&lt;/a&gt; [&lt;a href=&quot;#ref-33&quot;&gt;33&lt;/a&gt;]. 

Table of Contents

   &lt;a href=&quot;#section-1&quot;&gt;1&lt;/a&gt;   Introduction 
   &lt;a href=&quot;#section-1.1&quot;&gt;1.1&lt;/a&gt;    Purpose
   &lt;a href=&quot;#section-1.2&quot;&gt;1.2&lt;/a&gt;   Requirements 
   &lt;a href=&quot;#section-1.3&quot;&gt;1.3&lt;/a&gt;   Terminology 
   &lt;a href=&quot;#section-1.4&quot;&gt;1.4&lt;/a&gt;   Overall Operation 
   &lt;a href=&quot;#section-2&quot;&gt;2&lt;/a&gt;   Notational Conventions and Generic Grammar 
   &lt;a href=&quot;#section-2.1&quot;&gt;2.1&lt;/a&gt;   Augmented BNF 
   &lt;a href=&quot;#section-2.2&quot;&gt;2.2&lt;/a&gt;   Basic Rules 
   &lt;a href=&quot;#section-3&quot;&gt;3&lt;/a&gt;   Protocol Parameters 
   &lt;a href=&quot;#section-3.1&quot;&gt;3.1&lt;/a&gt;   HTTP Version 
   &lt;a href=&quot;#section-3.2&quot;&gt;3.2&lt;/a&gt;   Uniform Resource Identifiers 
   &lt;a href=&quot;#section-3.2.1&quot;&gt;3.2.1&lt;/a&gt;    General Syntax 
   &lt;a href=&quot;#section-3.2.2&quot;&gt;3.2.2&lt;/a&gt;    http URL 
   &lt;a href=&quot;#section-3.2.3&quot;&gt;3.2.3&lt;/a&gt;    URI Comparison 
   &lt;a href=&quot;#section-3.3&quot;&gt;3.3&lt;/a&gt;   Date/Time Formats 
   &lt;a href=&quot;#section-3.3.1&quot;&gt;3.3.1&lt;/a&gt;    Full Date 
   &lt;a href=&quot;#section-3.3.2&quot;&gt;3.3.2&lt;/a&gt;    Delta Seconds 
   &lt;a href=&quot;#section-3.4&quot;&gt;3.4&lt;/a&gt;   Character Sets 
   &lt;a href=&quot;#section-3.4.1&quot;&gt;3.4.1&lt;/a&gt;    Missing Charset 
   &lt;a href=&quot;#section-3.5&quot;&gt;3.5&lt;/a&gt;   Content Codings 
   &lt;a href=&quot;#section-3.6&quot;&gt;3.6&lt;/a&gt;   Transfer Codings 
   &lt;a href=&quot;#section-3.6.1&quot;&gt;3.6.1&lt;/a&gt;    Chunked Transfer Coding 
   &lt;a href=&quot;#section-3.7&quot;&gt;3.7&lt;/a&gt;   Media Types 
   &lt;a href=&quot;#section-3.7.1&quot;&gt;3.7.1&lt;/a&gt;    Canonicalization and Text Defaults 
   &lt;a href=&quot;#section-3.7.2&quot;&gt;3.7.2&lt;/a&gt;    Multipart Types 
   &lt;a href=&quot;#section-3.8&quot;&gt;3.8&lt;/a&gt;   Product Tokens 
   &lt;a href=&quot;#section-3.9&quot;&gt;3.9&lt;/a&gt;   Quality Values 
   &lt;a href=&quot;#section-3.10&quot;&gt;3.10&lt;/a&gt;  Language Tags 
   &lt;a href=&quot;#section-3.11&quot;&gt;3.11&lt;/a&gt;  Entity Tags 
   &lt;a href=&quot;#section-3.12&quot;&gt;3.12&lt;/a&gt;  Range Units 
   &lt;a href=&quot;#section-4&quot;&gt;4&lt;/a&gt;   HTTP Message 
   &lt;a href=&quot;#section-4.1&quot;&gt;4.1&lt;/a&gt;   Message Types 
   &lt;a href=&quot;#section-4.2&quot;&gt;4.2&lt;/a&gt;   Message Headers 
   &lt;a href=&quot;#section-4.3&quot;&gt;4.3&lt;/a&gt;   Message Body 
   &lt;a href=&quot;#section-4.4&quot;&gt;4.4&lt;/a&gt;   Message Length 
   &lt;a href=&quot;#section-4.5&quot;&gt;4.5&lt;/a&gt;   General Header Fields 
   &lt;a href=&quot;#section-5&quot;&gt;5&lt;/a&gt;   Request 
   &lt;a href=&quot;#section-5.1&quot;&gt;5.1&lt;/a&gt;   Request-Line 
   &lt;a href=&quot;#section-5.1.1&quot;&gt;5.1.1&lt;/a&gt;    Method 
   &lt;a href=&quot;#section-5.1.2&quot;&gt;5.1.2&lt;/a&gt;    Request-URI 
   &lt;a href=&quot;#section-5.2&quot;&gt;5.2&lt;/a&gt;   The Resource Identified by a Request 
   &lt;a href=&quot;#section-5.3&quot;&gt;5.3&lt;/a&gt;   Request Header Fields 
   &lt;a href=&quot;#section-6&quot;&gt;6&lt;/a&gt;   Response 
   &lt;a href=&quot;#section-6.1&quot;&gt;6.1&lt;/a&gt;   Status-Line 
   &lt;a href=&quot;#section-6.1.1&quot;&gt;6.1.1&lt;/a&gt;    Status Code and Reason Phrase 
   &lt;a href=&quot;#section-6.2&quot;&gt;6.2&lt;/a&gt;   Response Header Fields ...................................... 

   &lt;a href=&quot;#section-7&quot;&gt;7&lt;/a&gt;   Entity 
   &lt;a href=&quot;#section-7.1&quot;&gt;7.1&lt;/a&gt;   Entity Header Fields 
   &lt;a href=&quot;#section-7.2&quot;&gt;7.2&lt;/a&gt;   Entity Body 
   &lt;a href=&quot;#section-7.2.1&quot;&gt;7.2.1&lt;/a&gt;    Type 
   &lt;a href=&quot;#section-7.2.2&quot;&gt;7.2.2&lt;/a&gt;    Entity Length 
   &lt;a href=&quot;#section-8&quot;&gt;8&lt;/a&gt;   Connections 
   &lt;a href=&quot;#section-8.1&quot;&gt;8.1&lt;/a&gt;   Persistent Connections 
   &lt;a href=&quot;#section-8.1.1&quot;&gt;8.1.1&lt;/a&gt;    Purpose 
   &lt;a href=&quot;#section-8.1.2&quot;&gt;8.1.2&lt;/a&gt;    Overall Operation 
   &lt;a href=&quot;#section-8.1.3&quot;&gt;8.1.3&lt;/a&gt;    Proxy Servers 
   &lt;a href=&quot;#section-8.1.4&quot;&gt;8.1.4&lt;/a&gt;    Practical Considerations 
   &lt;a href=&quot;#section-8.2&quot;&gt;8.2&lt;/a&gt;   Message Transmission Requirements 
   &lt;a href=&quot;#section-8.2.1&quot;&gt;8.2.1&lt;/a&gt;    Persistent Connections and Flow Control 
   &lt;a href=&quot;#section-8.2.2&quot;&gt;8.2.2&lt;/a&gt;    Monitoring Connections for Error Status Messages 
   &lt;a href=&quot;#section-8.2.3&quot;&gt;8.2.3&lt;/a&gt;    Use of the 100 (Continue) Status 
   &lt;a href=&quot;#section-8.2.4&quot;&gt;8.2.4&lt;/a&gt;    Client Behavior if Server Prematurely Closes Connection ..50
   &lt;a href=&quot;#section-9&quot;&gt;9&lt;/a&gt;   Method Definitions 
   &lt;a href=&quot;#section-9.1&quot;&gt;9.1&lt;/a&gt;   Safe and Idempotent Methods 
   &lt;a href=&quot;#section-9.1.1&quot;&gt;9.1.1&lt;/a&gt;    Safe Methods 
   &lt;a href=&quot;#section-9.1.2&quot;&gt;9.1.2&lt;/a&gt;    Idempotent Methods 
   &lt;a href=&quot;#section-9.2&quot;&gt;9.2&lt;/a&gt;   OPTIONS 
   &lt;a href=&quot;#section-9.3&quot;&gt;9.3&lt;/a&gt;   GET 
   &lt;a href=&quot;#section-9.4&quot;&gt;9.4&lt;/a&gt;   HEAD 
   &lt;a href=&quot;#section-9.5&quot;&gt;9.5&lt;/a&gt;   POST 
   &lt;a href=&quot;#section-9.6&quot;&gt;9.6&lt;/a&gt;   PUT 
   &lt;a href=&quot;#section-9.7&quot;&gt;9.7&lt;/a&gt;   DELETE 
   &lt;a href=&quot;#section-9.8&quot;&gt;9.8&lt;/a&gt;   TRACE 
   &lt;a href=&quot;#section-9.9&quot;&gt;9.9&lt;/a&gt;   CONNECT 
   &lt;a href=&quot;#section-10&quot;&gt;10&lt;/a&gt;   Status Code Definitions 
   &lt;a href=&quot;#section-10.1&quot;&gt;10.1&lt;/a&gt;  Informational 1xx 
   &lt;a href=&quot;#section-10.1.1&quot;&gt;10.1.1&lt;/a&gt;   100 Continue 
   &lt;a href=&quot;#section-10.1.2&quot;&gt;10.1.2&lt;/a&gt;   101 Switching Protocols 
   &lt;a href=&quot;#section-10.2&quot;&gt;10.2&lt;/a&gt;  Successful 2xx 
   &lt;a href=&quot;#section-10.2.1&quot;&gt;10.2.1&lt;/a&gt;   200 OK 
   &lt;a href=&quot;#section-10.2.2&quot;&gt;10.2.2&lt;/a&gt;   201 Created 
   &lt;a href=&quot;#section-10.2.3&quot;&gt;10.2.3&lt;/a&gt;   202 Accepted 
   &lt;a href=&quot;#section-10.2.4&quot;&gt;10.2.4&lt;/a&gt;   203 Non-Authoritative Information 
   &lt;a href=&quot;#section-10.2.5&quot;&gt;10.2.5&lt;/a&gt;   204 No Content 
   &lt;a href=&quot;#section-10.2.6&quot;&gt;10.2.6&lt;/a&gt;   205 Reset Content 
   &lt;a href=&quot;#section-10.2.7&quot;&gt;10.2.7&lt;/a&gt;   206 Partial Content 
   &lt;a href=&quot;#section-10.3&quot;&gt;10.3&lt;/a&gt;  Redirection 3xx 
   &lt;a href=&quot;#section-10.3.1&quot;&gt;10.3.1&lt;/a&gt;   300 Multiple Choices 
   &lt;a href=&quot;#section-10.3.2&quot;&gt;10.3.2&lt;/a&gt;   301 Moved Permanently 
   &lt;a href=&quot;#section-10.3.3&quot;&gt;10.3.3&lt;/a&gt;   302 Found 
   &lt;a href=&quot;#section-10.3.4&quot;&gt;10.3.4&lt;/a&gt;   303 See Other 
   &lt;a href=&quot;#section-10.3.5&quot;&gt;10.3.5&lt;/a&gt;   304 Not Modified 
   &lt;a href=&quot;#section-10.3.6&quot;&gt;10.3.6&lt;/a&gt;   305 Use Proxy 
   &lt;a href=&quot;#section-10.3.7&quot;&gt;10.3.7&lt;/a&gt;   306 (Unused) ............................................. 

   &lt;a href=&quot;#section-10.3.8&quot;&gt;10.3.8&lt;/a&gt;   307 Temporary Redirect 
   &lt;a href=&quot;#section-10.4&quot;&gt;10.4&lt;/a&gt;  Client Error 4xx 
   &lt;a href=&quot;#section-10.4.1&quot;&gt;10.4.1&lt;/a&gt;    400 Bad Request 
   &lt;a href=&quot;#section-10.4.2&quot;&gt;10.4.2&lt;/a&gt;    401 Unauthorized 
   &lt;a href=&quot;#section-10.4.3&quot;&gt;10.4.3&lt;/a&gt;    402 Payment Required 
   &lt;a href=&quot;#section-10.4.4&quot;&gt;10.4.4&lt;/a&gt;    403 Forbidden 
   &lt;a href=&quot;#section-10.4.5&quot;&gt;10.4.5&lt;/a&gt;    404 Not Found 
   &lt;a href=&quot;#section-10.4.6&quot;&gt;10.4.6&lt;/a&gt;    405 Method Not Allowed 
   &lt;a href=&quot;#section-10.4.7&quot;&gt;10.4.7&lt;/a&gt;    406 Not Acceptable 
   &lt;a href=&quot;#section-10.4.8&quot;&gt;10.4.8&lt;/a&gt;    407 Proxy Authentication Required 
   &lt;a href=&quot;#section-10.4.9&quot;&gt;10.4.9&lt;/a&gt;    408 Request Timeout 
   &lt;a href=&quot;#section-10.4.10&quot;&gt;10.4.10&lt;/a&gt;   409 Conflict 
   &lt;a href=&quot;#section-10.4.11&quot;&gt;10.4.11&lt;/a&gt;   410 Gone 
   &lt;a href=&quot;#section-10.4.12&quot;&gt;10.4.12&lt;/a&gt;   411 Length Required 
   &lt;a href=&quot;#section-10.4.13&quot;&gt;10.4.13&lt;/a&gt;   412 Precondition Failed 
   &lt;a href=&quot;#section-10.4.14&quot;&gt;10.4.14&lt;/a&gt;   413 Request Entity Too Large 
   &lt;a href=&quot;#section-10.4.15&quot;&gt;10.4.15&lt;/a&gt;   414 Request-URI Too Long 
   &lt;a href=&quot;#section-10.4.16&quot;&gt;10.4.16&lt;/a&gt;   415 Unsupported Media Type 
   &lt;a href=&quot;#section-10.4.17&quot;&gt;10.4.17&lt;/a&gt;   416 Requested Range Not Satisfiable 
   &lt;a href=&quot;#section-10.4.18&quot;&gt;10.4.18&lt;/a&gt;   417 Expectation Failed 
   &lt;a href=&quot;#section-10.5&quot;&gt;10.5&lt;/a&gt;  Server Error 5xx 
   &lt;a href=&quot;#section-10.5.1&quot;&gt;10.5.1&lt;/a&gt;   500 Internal Server Error 
   &lt;a href=&quot;#section-10.5.2&quot;&gt;10.5.2&lt;/a&gt;   501 Not Implemented 
   &lt;a href=&quot;#section-10.5.3&quot;&gt;10.5.3&lt;/a&gt;   502 Bad Gateway 
   &lt;a href=&quot;#section-10.5.4&quot;&gt;10.5.4&lt;/a&gt;   503 Service Unavailable 
   &lt;a href=&quot;#section-10.5.5&quot;&gt;10.5.5&lt;/a&gt;   504 Gateway Timeout 
   &lt;a href=&quot;#section-10.5.6&quot;&gt;10.5.6&lt;/a&gt;   505 HTTP Version Not Supported 
   &lt;a href=&quot;#section-11&quot;&gt;11&lt;/a&gt;   Access Authentication 
   &lt;a href=&quot;#section-12&quot;&gt;12&lt;/a&gt;   Content Negotiation 
   &lt;a href=&quot;#section-12.1&quot;&gt;12.1&lt;/a&gt;  Server-driven Negotiation 
   &lt;a href=&quot;#section-12.2&quot;&gt;12.2&lt;/a&gt;  Agent-driven Negotiation 
   &lt;a href=&quot;#section-12.3&quot;&gt;12.3&lt;/a&gt;  Transparent Negotiation 
   &lt;a href=&quot;#section-13&quot;&gt;13&lt;/a&gt;   Caching in HTTP 
   &lt;a href=&quot;#section-13.1.1&quot;&gt;13.1.1&lt;/a&gt;   Cache Correctness 
   &lt;a href=&quot;#section-13.1.2&quot;&gt;13.1.2&lt;/a&gt;   Warnings 
   &lt;a href=&quot;#section-13.1.3&quot;&gt;13.1.3&lt;/a&gt;   Cache-control Mechanisms 
   &lt;a href=&quot;#section-13.1.4&quot;&gt;13.1.4&lt;/a&gt;   Explicit User Agent Warnings 
   &lt;a href=&quot;#section-13.1.5&quot;&gt;13.1.5&lt;/a&gt;   Exceptions to the Rules and Warnings 
   &lt;a href=&quot;#section-13.1.6&quot;&gt;13.1.6&lt;/a&gt;   Client-controlled Behavior 
   &lt;a href=&quot;#section-13.2&quot;&gt;13.2&lt;/a&gt;  Expiration Model 
   &lt;a href=&quot;#section-13.2.1&quot;&gt;13.2.1&lt;/a&gt;   Server-Specified Expiration 
   &lt;a href=&quot;#section-13.2.2&quot;&gt;13.2.2&lt;/a&gt;   Heuristic Expiration 
   &lt;a href=&quot;#section-13.2.3&quot;&gt;13.2.3&lt;/a&gt;   Age Calculations 
   &lt;a href=&quot;#section-13.2.4&quot;&gt;13.2.4&lt;/a&gt;   Expiration Calculations 
   &lt;a href=&quot;#section-13.2.5&quot;&gt;13.2.5&lt;/a&gt;   Disambiguating Expiration Values 
   &lt;a href=&quot;#section-13.2.6&quot;&gt;13.2.6&lt;/a&gt;   Disambiguating Multiple Responses 
   &lt;a href=&quot;#section-13.3&quot;&gt;13.3&lt;/a&gt;  Validation Model 
   &lt;a href=&quot;#section-13.3.1&quot;&gt;13.3.1&lt;/a&gt;   Last-Modified Dates ...................................... 

   &lt;a href=&quot;#section-13.3.2&quot;&gt;13.3.2&lt;/a&gt;   Entity Tag Cache Validators 
   &lt;a href=&quot;#section-13.3.3&quot;&gt;13.3.3&lt;/a&gt;   Weak and Strong Validators 
   13.3.4   Rules for When to Use Entity Tags and Last-Modified Dates.89
   &lt;a href=&quot;#section-13.3.5&quot;&gt;13.3.5&lt;/a&gt;   Non-validating Conditionals 
   &lt;a href=&quot;#section-13.4&quot;&gt;13.4&lt;/a&gt;  Response Cacheability 
   &lt;a href=&quot;#section-13.5&quot;&gt;13.5&lt;/a&gt;  Constructing Responses From Caches 
   &lt;a href=&quot;#section-13.5.1&quot;&gt;13.5.1&lt;/a&gt;   End-to-end and Hop-by-hop Headers 
   &lt;a href=&quot;#section-13.5.2&quot;&gt;13.5.2&lt;/a&gt;   Non-modifiable Headers 
   &lt;a href=&quot;#section-13.5.3&quot;&gt;13.5.3&lt;/a&gt;   Combining Headers 
   &lt;a href=&quot;#section-13.5.4&quot;&gt;13.5.4&lt;/a&gt;   Combining Byte Ranges 
   &lt;a href=&quot;#section-13.6&quot;&gt;13.6&lt;/a&gt;  Caching Negotiated Responses 
   &lt;a href=&quot;#section-13.7&quot;&gt;13.7&lt;/a&gt;  Shared and Non-Shared Caches 
   &lt;a href=&quot;#section-13.8&quot;&gt;13.8&lt;/a&gt;  Errors or Incomplete Response Cache Behavior 
   &lt;a href=&quot;#section-13.9&quot;&gt;13.9&lt;/a&gt;  Side Effects of GET and HEAD 
   &lt;a href=&quot;#section-13.10&quot;&gt;13.10&lt;/a&gt;   Invalidation After Updates or Deletions 
   &lt;a href=&quot;#section-13.11&quot;&gt;13.11&lt;/a&gt;   Write-Through Mandatory 
   &lt;a href=&quot;#section-13.12&quot;&gt;13.12&lt;/a&gt;   Cache Replacement 
   &lt;a href=&quot;#section-13.13&quot;&gt;13.13&lt;/a&gt;   History Lists 
   &lt;a href=&quot;#section-14&quot;&gt;14&lt;/a&gt;   Header Field Definitions 
   &lt;a href=&quot;#section-14.1&quot;&gt;14.1&lt;/a&gt;  Accept 
   &lt;a href=&quot;#section-14.2&quot;&gt;14.2&lt;/a&gt;  Accept-Charset 
   &lt;a href=&quot;#section-14.3&quot;&gt;14.3&lt;/a&gt;  Accept-Encoding 
   &lt;a href=&quot;#section-14.4&quot;&gt;14.4&lt;/a&gt;  Accept-Language 
   &lt;a href=&quot;#section-14.5&quot;&gt;14.5&lt;/a&gt;  Accept-Ranges 
   &lt;a href=&quot;#section-14.6&quot;&gt;14.6&lt;/a&gt;  Age 
   &lt;a href=&quot;#section-14.7&quot;&gt;14.7&lt;/a&gt;  Allow 
   &lt;a href=&quot;#section-14.8&quot;&gt;14.8&lt;/a&gt;  Authorization 
   &lt;a href=&quot;#section-14.9&quot;&gt;14.9&lt;/a&gt;  Cache-Control 
   &lt;a href=&quot;#section-14.9.1&quot;&gt;14.9.1&lt;/a&gt;   What is Cacheable 
   &lt;a href=&quot;#section-14.9.2&quot;&gt;14.9.2&lt;/a&gt;   What May be Stored by Caches 
   &lt;a href=&quot;#section-14.9.3&quot;&gt;14.9.3&lt;/a&gt;   Modifications of the Basic Expiration Mechanism 
   &lt;a href=&quot;#section-14.9.4&quot;&gt;14.9.4&lt;/a&gt;   Cache Revalidation and Reload Controls 
   &lt;a href=&quot;#section-14.9.5&quot;&gt;14.9.5&lt;/a&gt;   No-Transform Directive 
   &lt;a href=&quot;#section-14.9.6&quot;&gt;14.9.6&lt;/a&gt;   Cache Control Extensions 
   &lt;a href=&quot;#section-14.10&quot;&gt;14.10&lt;/a&gt;   Connection 
   &lt;a href=&quot;#section-14.11&quot;&gt;14.11&lt;/a&gt;   Content-Encoding 
   &lt;a href=&quot;#section-14.12&quot;&gt;14.12&lt;/a&gt;   Content-Language 
   &lt;a href=&quot;#section-14.13&quot;&gt;14.13&lt;/a&gt;   Content-Length 
   &lt;a href=&quot;#section-14.14&quot;&gt;14.14&lt;/a&gt;   Content-Location 
   &lt;a href=&quot;#section-14.15&quot;&gt;14.15&lt;/a&gt;   Content-MD5 
   &lt;a href=&quot;#section-14.16&quot;&gt;14.16&lt;/a&gt;   Content-Range 
   &lt;a href=&quot;#section-14.17&quot;&gt;14.17&lt;/a&gt;   Content-Type 
   &lt;a href=&quot;#section-14.18&quot;&gt;14.18&lt;/a&gt;   Date 
   &lt;a href=&quot;#section-14.18.1&quot;&gt;14.18.1&lt;/a&gt;   Clockless Origin Server Operation 
   &lt;a href=&quot;#section-14.19&quot;&gt;14.19&lt;/a&gt;   ETag 
   &lt;a href=&quot;#section-14.20&quot;&gt;14.20&lt;/a&gt;   Expect 
   &lt;a href=&quot;#section-14.21&quot;&gt;14.21&lt;/a&gt;   Expires 
   &lt;a href=&quot;#section-14.22&quot;&gt;14.22&lt;/a&gt;   From ..................................................... 

   &lt;a href=&quot;#section-14.23&quot;&gt;14.23&lt;/a&gt;   Host 
   &lt;a href=&quot;#section-14.24&quot;&gt;14.24&lt;/a&gt;   If-Match 
   &lt;a href=&quot;#section-14.25&quot;&gt;14.25&lt;/a&gt;   If-Modified-Since 
   &lt;a href=&quot;#section-14.26&quot;&gt;14.26&lt;/a&gt;   If-None-Match 
   &lt;a href=&quot;#section-14.27&quot;&gt;14.27&lt;/a&gt;   If-Range 
   &lt;a href=&quot;#section-14.28&quot;&gt;14.28&lt;/a&gt;   If-Unmodified-Since 
   &lt;a href=&quot;#section-14.29&quot;&gt;14.29&lt;/a&gt;   Last-Modified 
   &lt;a href=&quot;#section-14.30&quot;&gt;14.30&lt;/a&gt;   Location 
   &lt;a href=&quot;#section-14.31&quot;&gt;14.31&lt;/a&gt;   Max-Forwards 
   &lt;a href=&quot;#section-14.32&quot;&gt;14.32&lt;/a&gt;   Pragma 
   &lt;a href=&quot;#section-14.33&quot;&gt;14.33&lt;/a&gt;   Proxy-Authenticate 
   &lt;a href=&quot;#section-14.34&quot;&gt;14.34&lt;/a&gt;   Proxy-Authorization 
   &lt;a href=&quot;#section-14.35&quot;&gt;14.35&lt;/a&gt;   Range 
   &lt;a href=&quot;#section-14.35.1&quot;&gt;14.35.1&lt;/a&gt;    Byte Ranges 
   &lt;a href=&quot;#section-14.35.2&quot;&gt;14.35.2&lt;/a&gt;    Range Retrieval Requests 
   &lt;a href=&quot;#section-14.36&quot;&gt;14.36&lt;/a&gt;   Referer 
   &lt;a href=&quot;#section-14.37&quot;&gt;14.37&lt;/a&gt;   Retry-After 
   &lt;a href=&quot;#section-14.38&quot;&gt;14.38&lt;/a&gt;   Server 
   &lt;a href=&quot;#section-14.39&quot;&gt;14.39&lt;/a&gt;   TE 
   &lt;a href=&quot;#section-14.40&quot;&gt;14.40&lt;/a&gt;   Trailer 
   &lt;a href=&quot;#section-14.41&quot;&gt;14.41&lt;/a&gt;  Transfer-Encoding
   &lt;a href=&quot;#section-14.42&quot;&gt;14.42&lt;/a&gt;   Upgrade 
   &lt;a href=&quot;#section-14.43&quot;&gt;14.43&lt;/a&gt;   User-Agent 
   &lt;a href=&quot;#section-14.44&quot;&gt;14.44&lt;/a&gt;   Vary 
   &lt;a href=&quot;#section-14.45&quot;&gt;14.45&lt;/a&gt;   Via 
   &lt;a href=&quot;#section-14.46&quot;&gt;14.46&lt;/a&gt;   Warning 
   &lt;a href=&quot;#section-14.47&quot;&gt;14.47&lt;/a&gt;   WWW-Authenticate 
   &lt;a href=&quot;#section-15&quot;&gt;15&lt;/a&gt; Security Considerations 
   &lt;a href=&quot;#section-15.1&quot;&gt;15.1&lt;/a&gt;      Personal Information
   &lt;a href=&quot;#section-15.1.1&quot;&gt;15.1.1&lt;/a&gt;   Abuse of Server Log Information 
   &lt;a href=&quot;#section-15.1.2&quot;&gt;15.1.2&lt;/a&gt;   Transfer of Sensitive Information 
   &lt;a href=&quot;#section-15.1.3&quot;&gt;15.1.3&lt;/a&gt;   Encoding Sensitive Information in URI's 
   &lt;a href=&quot;#section-15.1.4&quot;&gt;15.1.4&lt;/a&gt;   Privacy Issues Connected to Accept Headers 
   &lt;a href=&quot;#section-15.2&quot;&gt;15.2&lt;/a&gt;  Attacks Based On File and Path Names 
   &lt;a href=&quot;#section-15.3&quot;&gt;15.3&lt;/a&gt;  DNS Spoofing 
   &lt;a href=&quot;#section-15.4&quot;&gt;15.4&lt;/a&gt;  Location Headers and Spoofing 
   &lt;a href=&quot;#section-15.5&quot;&gt;15.5&lt;/a&gt;  Content-Disposition Issues 
   &lt;a href=&quot;#section-15.6&quot;&gt;15.6&lt;/a&gt;  Authentication Credentials and Idle Clients 
   &lt;a href=&quot;#section-15.7&quot;&gt;15.7&lt;/a&gt;  Proxies and Caching 
   &lt;a href=&quot;#section-15.7.1&quot;&gt;15.7.1&lt;/a&gt;    Denial of Service Attacks on Proxies
   &lt;a href=&quot;#section-16&quot;&gt;16&lt;/a&gt;   Acknowledgments 
   &lt;a href=&quot;#section-17&quot;&gt;17&lt;/a&gt;   References 
   &lt;a href=&quot;#section-18&quot;&gt;18&lt;/a&gt;   Authors' Addresses 
   &lt;a href=&quot;#section-19&quot;&gt;19&lt;/a&gt;   Appendices 
   &lt;a href=&quot;#section-19.1&quot;&gt;19.1&lt;/a&gt;  Internet Media Type message/http and application/http 
   &lt;a href=&quot;#section-19.2&quot;&gt;19.2&lt;/a&gt;  Internet Media Type multipart/byteranges 
   &lt;a href=&quot;#section-19.3&quot;&gt;19.3&lt;/a&gt;  Tolerant Applications 
   &lt;a href=&quot;#section-19.4&quot;&gt;19.4&lt;/a&gt;  Differences Between HTTP Entities and &lt;a href=&quot;https://tools.ietf.org/html/rfc2045&quot;&gt;RFC 2045&lt;/a&gt; Entities .... 

   &lt;a href=&quot;#section-19.4.1&quot;&gt;19.4.1&lt;/a&gt;   MIME-Version 
   &lt;a href=&quot;#section-19.4.2&quot;&gt;19.4.2&lt;/a&gt;   Conversion to Canonical Form 
   &lt;a href=&quot;#section-19.4.3&quot;&gt;19.4.3&lt;/a&gt;   Conversion of Date Formats 
   &lt;a href=&quot;#section-19.4.4&quot;&gt;19.4.4&lt;/a&gt;   Introduction of Content-Encoding 
   &lt;a href=&quot;#section-19.4.5&quot;&gt;19.4.5&lt;/a&gt;   No Content-Transfer-Encoding 
   &lt;a href=&quot;#section-19.4.6&quot;&gt;19.4.6&lt;/a&gt;   Introduction of Transfer-Encoding 
   &lt;a href=&quot;#section-19.4.7&quot;&gt;19.4.7&lt;/a&gt;   MHTML and Line Length Limitations 
   &lt;a href=&quot;#section-19.5&quot;&gt;19.5&lt;/a&gt;  Additional Features 
   &lt;a href=&quot;#section-19.5.1&quot;&gt;19.5.1&lt;/a&gt;   Content-Disposition 
   &lt;a href=&quot;#section-19.6&quot;&gt;19.6&lt;/a&gt;  Compatibility with Previous Versions 
   &lt;a href=&quot;#section-19.6.1&quot;&gt;19.6.1&lt;/a&gt;   Changes from HTTP/1.0 
   &lt;a href=&quot;#section-19.6.2&quot;&gt;19.6.2&lt;/a&gt;   Compatibility with HTTP/1.0 Persistent Connections 
   &lt;a href=&quot;#section-19.6.3&quot;&gt;19.6.3&lt;/a&gt;   Changes from &lt;a href=&quot;https://tools.ietf.org/html/rfc2068&quot;&gt;RFC 2068&lt;/a&gt;&lt;a href=&quot;#section-20&quot;&gt;20&lt;/a&gt;   Index 
   &lt;a href=&quot;#section-21&quot;&gt;21&lt;/a&gt;   Full Copyright Statement</source>
          <target state="translated">Статус этой памятки Этот документ определяет протокол отслеживания стандартов Интернета для Интернет-сообщества и требует обсуждения и предложений по улучшениям. См. Текущую редакцию &amp;laquo;Официальных стандартов протокола Интернета&amp;raquo; (STD 1), чтобы узнать о состоянии стандартизации и статусе этого протокола. Распространение этой памятки не ограничено. Уведомление об авторских правах Авторские права (C) The Internet Society (1999). Все права защищены. Аннотация Протокол передачи гипертекста (HTTP) - это протокол прикладного уровня для распределенных, совместных гипермедийных информационных систем. Это общий протокол без сохранения состояния, который можно использовать для многих задач, помимо использования для гипертекста, таких как серверы имен и системы управления распределенными объектами, путем расширения его методов запроса,коды ошибок и заголовки [&lt;a href=&quot;#ref-47&quot;&gt;47&lt;/a&gt; ]. Особенностью HTTP является типизация и согласование представления данных, что позволяет создавать системы независимо от передаваемых данных. HTTP используется глобальной информационной инициативой World-Wide Web с 1990 года. Эта спецификация определяет протокол, называемый &amp;laquo;HTTP / 1.1&amp;raquo;, и является обновлением &lt;a href=&quot;https://tools.ietf.org/html/rfc2068&quot;&gt;RFC 2068&lt;/a&gt; [ &lt;a href=&quot;#ref-33&quot;&gt;33&lt;/a&gt; ]. Содержание &lt;a href=&quot;#section-1&quot;&gt;1&lt;/a&gt; Введение &lt;a href=&quot;#section-1.1&quot;&gt;1.1&lt;/a&gt; Цель &lt;a href=&quot;#section-1.2&quot;&gt;1.2&lt;/a&gt; Требования &lt;a href=&quot;#section-1.3&quot;&gt;1.3&lt;/a&gt; Терминология &lt;a href=&quot;#section-1.4&quot;&gt;1.4&lt;/a&gt; Общая работа &lt;a href=&quot;#section-2&quot;&gt;2&lt;/a&gt; Условные обозначения и общая грамматика &lt;a href=&quot;#section-2.1&quot;&gt;2.1&lt;/a&gt; Расширенный BNF &lt;a href=&quot;#section-2.2&quot;&gt;2.2&lt;/a&gt; Основные правила &lt;a href=&quot;#section-3&quot;&gt;3&lt;/a&gt; Параметры протокола &lt;a href=&quot;#section-3.1&quot;&gt;3.1&lt;/a&gt; HTTP версии &lt;a href=&quot;#section-3.2&quot;&gt;3.2&lt;/a&gt; Унифицированные идентификаторы ресурсов &lt;a href=&quot;#section-3.2.1&quot;&gt;3.2.1&lt;/a&gt; Общий синтаксис &lt;a href=&quot;#section-3.2.2&quot;&gt;3.2.2&lt;/a&gt; http URL &lt;a href=&quot;#section-3.2.3&quot;&gt;3.2.3&lt;/a&gt; Сравнение URI &lt;a href=&quot;#section-3.3&quot;&gt;3.3&lt;/a&gt; Форматы даты и времени &lt;a href=&quot;#section-3.3.1&quot;&gt;3.3.1&lt;/a&gt; Полная дата &lt;a href=&quot;#section-3.3.2&quot;&gt;3.3.2&lt;/a&gt; Дельта-секунды &lt;a href=&quot;#section-3.4&quot;&gt;3.4&lt;/a&gt; Наборы символов &lt;a href=&quot;#section-3.4.1&quot;&gt;3.4.1&lt;/a&gt; Отсутствующая кодировка &lt;a href=&quot;#section-3.5&quot;&gt;3.5&lt;/a&gt; Кодирование содержимого &lt;a href=&quot;#section-3.6&quot;&gt;3.6&lt;/a&gt; Кодирование передачи &lt;a href=&quot;#section-3.6.1&quot;&gt;3.6.1&lt;/a&gt; Разделенное кодирование передачи &lt;a href=&quot;#section-3.7&quot;&gt;3.7&lt;/a&gt; Типы носителей &lt;a href=&quot;#section-3.7.1&quot;&gt;3.7.1&lt;/a&gt; Канонизация и текстовые значения по умолчанию &lt;a href=&quot;#section-3.7.2&quot;&gt;3.7.2&lt;/a&gt; Составные типы &lt;a href=&quot;#section-3.8&quot;&gt;3.8&lt;/a&gt; Токены продукта &lt;a href=&quot;#section-3.9&quot;&gt;3.9&lt;/a&gt; Значения качества &lt;a href=&quot;#section-3.10&quot;&gt;3.10&lt;/a&gt; Языковые теги &lt;a href=&quot;#section-3.11&quot;&gt;3.11&lt;/a&gt; Теги сущностей &lt;a href=&quot;#section-3.12&quot;&gt;3.12&lt;/a&gt; Единицы диапазона &lt;a href=&quot;#section-4&quot;&gt;4&lt;/a&gt; HTTP-сообщение &lt;a href=&quot;#section-4.1&quot;&gt;4.1&lt;/a&gt; Типы сообщений &lt;a href=&quot;#section-4.2&quot;&gt;4.2&lt;/a&gt; Заголовки сообщения &lt;a href=&quot;#section-4.3&quot;&gt;4.3&lt;/a&gt; Тело сообщения &lt;a href=&quot;#section-4.4&quot;&gt;4.4&lt;/a&gt; Длина сообщения &lt;a href=&quot;#section-4.5&quot;&gt;4.5&lt;/a&gt; Общие поля заголовка &lt;a href=&quot;#section-5&quot;&gt;5&lt;/a&gt; Запрос &lt;a href=&quot;#section-5.1&quot;&gt;5.1&lt;/a&gt; Строка запроса &lt;a href=&quot;#section-5.1.1&quot;&gt;5.1 .1&lt;/a&gt; Метод &lt;a href=&quot;#section-5.1.2&quot;&gt;5.1.2&lt;/a&gt; Request-URI &lt;a href=&quot;#section-5.2&quot;&gt;5.2&lt;/a&gt; Ресурс, идентифицированный запросом &lt;a href=&quot;#section-5.3&quot;&gt;5.3&lt;/a&gt; Поля заголовка запроса &lt;a href=&quot;#section-6&quot;&gt;6&lt;/a&gt; Ответ &lt;a href=&quot;#section-6.1&quot;&gt;6.1&lt;/a&gt; Строка состояния &lt;a href=&quot;#section-6.1.1&quot;&gt;6.1.1&lt;/a&gt; Код состояния и фраза причины &lt;a href=&quot;#section-6.2&quot;&gt;6.2&lt;/a&gt; Поля заголовка ответа ..................... ................. &lt;a href=&quot;#section-7&quot;&gt;7&lt;/a&gt; Сущность &lt;a href=&quot;#section-7.1&quot;&gt;7.1&lt;/a&gt; Поля заголовка сущности &lt;a href=&quot;#section-7.2&quot;&gt;7.2&lt;/a&gt; Тело сущности &lt;a href=&quot;#section-7.2.1&quot;&gt;7.2.1&lt;/a&gt; Тип &lt;a href=&quot;#section-7.2.2&quot;&gt;7.2.2&lt;/a&gt; Длина сущности &lt;a href=&quot;#section-8&quot;&gt;8&lt;/a&gt; Соединения &lt;a href=&quot;#section-8.1&quot;&gt;8.1&lt;/a&gt; Постоянные соединения &lt;a href=&quot;#section-8.1.1&quot;&gt;8.1.1&lt;/a&gt; Цель &lt;a href=&quot;#section-8.1.2&quot;&gt;8.1.2&lt;/a&gt; Общая работа &lt;a href=&quot;#section-8.1.3&quot;&gt;8.1 0,3&lt;/a&gt; Прокси-серверы &lt;a href=&quot;#section-8.1.4&quot;&gt;8.1.4&lt;/a&gt; Практические соображения &lt;a href=&quot;#section-8.2&quot;&gt;8.2&lt;/a&gt; Требования к передаче сообщений &lt;a href=&quot;#section-8.2.1&quot;&gt;8.2.1&lt;/a&gt; Постоянные соединения и управление потоком &lt;a href=&quot;#section-8.2.2&quot;&gt;8.2.2&lt;/a&gt; Мониторинг соединений для сообщений о состоянии ошибок &lt;a href=&quot;#section-8.2.3&quot;&gt;8.2.3&lt;/a&gt; Использование состояния 100 (продолжить) &lt;a href=&quot;#section-8.2.4&quot;&gt;8.2.4&lt;/a&gt; Поведение клиента, если сервер преждевременно закрывает соединение. .50 &lt;a href=&quot;#section-9&quot;&gt;9&lt;/a&gt; Определения методов &lt;a href=&quot;#section-9.1&quot;&gt;9.1&lt;/a&gt; Безопасные и идемпотентные методы &lt;a href=&quot;#section-9.1.1&quot;&gt;9.1.1&lt;/a&gt; Безопасные методы &lt;a href=&quot;#section-9.1.2&quot;&gt;9.1.2&lt;/a&gt; Идемпотентные методы &lt;a href=&quot;#section-9.2&quot;&gt;9.2&lt;/a&gt; ОПЦИИ &lt;a href=&quot;#section-9.3&quot;&gt;9.3&lt;/a&gt; GET &lt;a href=&quot;#section-9.4&quot;&gt;9.4&lt;/a&gt; HEAD &lt;a href=&quot;#section-9.5&quot;&gt;9.5&lt;/a&gt; POST &lt;a href=&quot;#section-9.6&quot;&gt;9.6&lt;/a&gt; PUT &lt;a href=&quot;#section-9.7&quot;&gt;9.7&lt;/a&gt; DELETE &lt;a href=&quot;#section-9.8&quot;&gt;9.8&lt;/a&gt; TRACE &lt;a href=&quot;#section-9.9&quot;&gt;9.9&lt;/a&gt; CONNECT &lt;a href=&quot;#section-10&quot;&gt;10&lt;/a&gt; Определения кодов состояния &lt;a href=&quot;#section-10.1&quot;&gt;10.1&lt;/a&gt; Информационные 1xx &lt;a href=&quot;#section-10.1.1&quot;&gt;10.1.1&lt;/a&gt; 100 Продолжить &lt;a href=&quot;#section-10.1.2&quot;&gt;10.1.2&lt;/a&gt; 101 Протоколы переключения &lt;a href=&quot;#section-10.2&quot;&gt;10.2&lt;/a&gt; Успешно 2xx &lt;a href=&quot;#section-10.2.1&quot;&gt;10.2.1&lt;/a&gt; 200 OK &lt;a href=&quot;#section-10.2.2&quot;&gt;10.2.2&lt;/a&gt; 201 Создано &lt;a href=&quot;#section-10.2.3&quot;&gt;10.2.3&lt;/a&gt; 202 Принято &lt;a href=&quot;#section-10.2.4&quot;&gt;10.2.4&lt;/a&gt; 203 &lt;a href=&quot;#section-10.2.7&quot;&gt;Неавторизованная&lt;/a&gt; информация &lt;a href=&quot;#section-10.2.5&quot;&gt;10.2.5&lt;/a&gt; 204 Нет содержимого &lt;a href=&quot;#section-10.2.6&quot;&gt;10.2.6&lt;/a&gt; 205 Сбросить содержимое 10.2.7 206 Частичное содержимое &lt;a href=&quot;#section-10.3&quot;&gt;10.3&lt;/a&gt; Перенаправление 3xx &lt;a href=&quot;#section-10.3.1&quot;&gt;10.3.1&lt;/a&gt; 300 Множественный выбор &lt;a href=&quot;#section-10.3.2&quot;&gt;10.3.2&lt;/a&gt; 301 Перемещено постоянно &lt;a href=&quot;#section-10.3.3&quot;&gt;10.3.3&lt;/a&gt; 302 Найдено &lt;a href=&quot;#section-10.3.4&quot;&gt;10.3.4&lt;/a&gt; 303 См. Другое &lt;a href=&quot;#section-10.3.5&quot;&gt;10.3.5&lt;/a&gt; 304 Не &lt;a href=&quot;#section-10.3.6&quot;&gt;изменено 10.3.6&lt;/a&gt; 305 Использовать прокси &lt;a href=&quot;#section-10.3.7&quot;&gt;10.3.7&lt;/a&gt; 306 (Не используется) .. ........................................... &lt;a href=&quot;#section-10.3.8&quot;&gt;10.3.8&lt;/a&gt; 307 Временное перенаправление &lt;a href=&quot;#section-10.4&quot;&gt;10.4&lt;/a&gt; Ошибка клиента 4xx &lt;a href=&quot;#section-10.4.1&quot;&gt;10.4.1&lt;/a&gt; 400 Bad Request &lt;a href=&quot;#section-10.4.2&quot;&gt;10.4.2&lt;/a&gt; 401 Unauthorized &lt;a href=&quot;#section-10.4.3&quot;&gt;10.4.3&lt;/a&gt; 402 Payment Required &lt;a href=&quot;#section-10.4.4&quot;&gt;10.4.4&lt;/a&gt; 403 Запрещено &lt;a href=&quot;#section-10.4.5&quot;&gt;10.4.5&lt;/a&gt; 404 Не найдено &lt;a href=&quot;#section-10.4.6&quot;&gt;10.4.6&lt;/a&gt; Метод 405 &lt;a href=&quot;#section-10.4.7&quot;&gt;Недопустим 10.4.7&lt;/a&gt; 406 Неприемлем &lt;a href=&quot;#section-10.4.8&quot;&gt;10.4.8&lt;/a&gt; 407 Требуется аутентификация прокси &lt;a href=&quot;#section-10.4.9&quot;&gt;10.4.9&lt;/a&gt; Тайм-аут запроса 408 &lt;a href=&quot;#section-10.4.10&quot;&gt;10.4.10&lt;/a&gt; Конфликт 409 &lt;a href=&quot;#section-10.4.11&quot;&gt;10.4.11&lt;/a&gt; 410 Gone &lt;a href=&quot;#section-10.4.12&quot;&gt;10.4.12&lt;/a&gt; 411 Требуется длина &lt;a href=&quot;#section-10.4.13&quot;&gt;10.4.13&lt;/a&gt; 412 Precondition Failed &lt;a href=&quot;#section-10.4.14&quot;&gt;10.4.14&lt;/a&gt; 413 Request Entity Too Large &lt;a href=&quot;#section-10.4.15&quot;&gt;10.4.15&lt;/a&gt; 414 Request-URI Too Long &lt;a href=&quot;#section-10.4.16&quot;&gt;10.4.16&lt;/a&gt; 415 Unsupported Media Type &lt;a href=&quot;#section-10.4.17&quot;&gt;10.4.17&lt;/a&gt; 416 Запрошенный диапазон не выполняется &lt;a href=&quot;#section-10.4.18&quot;&gt;10.4.18&lt;/a&gt; Ошибка ожидания 417 &lt;a href=&quot;#section-10.5&quot;&gt;10.5&lt;/a&gt; Ошибка сервера 5xx &lt;a href=&quot;#section-10.5.1&quot;&gt;10.5.1&lt;/a&gt; Внутренняя ошибка сервера 500 &lt;a href=&quot;#section-10.5.2&quot;&gt;10.5.2&lt;/a&gt; 501 Не реализовано &lt;a href=&quot;#section-10.5.3&quot;&gt;10.5.3 &lt;/a&gt;&lt;a href=&quot;#section-10.5.5&quot;&gt;Неверный&lt;/a&gt; шлюз 502 &lt;a href=&quot;#section-10.5.4&quot;&gt;10.5.4&lt;/a&gt; Служба 503 недоступна 10.5.5 Тайм-аут шлюза 504 &lt;a href=&quot;#section-10.5.6&quot;&gt;10.5.6&lt;/a&gt; Версия HTTP 505 не поддерживается &lt;a href=&quot;#section-11&quot;&gt;11&lt;/a&gt; Аутентификация доступа &lt;a href=&quot;#section-12&quot;&gt;12&lt;/a&gt; Согласование содержимого &lt;a href=&quot;#section-12.1&quot;&gt;12.1&lt;/a&gt; Согласование, управляемое сервером &lt;a href=&quot;#section-12.2&quot;&gt;12.2&lt;/a&gt; Согласование, управляемое агентом &lt;a href=&quot;#section-12.3&quot;&gt;12.3&lt;/a&gt; Прозрачное согласование &lt;a href=&quot;#section-13&quot;&gt;13&lt;/a&gt; Кэширование в HTTP &lt;a href=&quot;#section-13.1.1&quot;&gt;13.1.1&lt;/a&gt; Корректность кэша &lt;a href=&quot;#section-13.1.2&quot;&gt;13.1.2&lt;/a&gt; Предупреждения &lt;a href=&quot;#section-13.1.3&quot;&gt;13.1.3&lt;/a&gt; Механизмы управления &lt;a href=&quot;#section-13.1.4&quot;&gt;кешем 13.1.4&lt;/a&gt; Явные предупреждения пользовательского агента &lt;a href=&quot;#section-13.1.5&quot;&gt;13.1.5&lt;/a&gt; Исключения из правил и предупреждений &lt;a href=&quot;#section-13.1.6&quot;&gt;13.1.6&lt;/a&gt; Поведение, контролируемое клиентом &lt;a href=&quot;#section-13.2&quot;&gt;13.2&lt;/a&gt; Модель срока действия &lt;a href=&quot;#section-13.2.1&quot;&gt;13.2.1&lt;/a&gt; Срок действия, определяемый сервером &lt;a href=&quot;#section-13.2.2&quot;&gt;13.2.2&lt;/a&gt; Эвристика Срок годности &lt;a href=&quot;#section-13.2.3&quot;&gt;13.2.3&lt;/a&gt; Расчет возраста &lt;a href=&quot;#section-13.2.4&quot;&gt;13.2.4&lt;/a&gt; Расчет срока годности &lt;a href=&quot;#section-13.2.5&quot;&gt;13.2.5 Устранение неоднозначности&lt;/a&gt; значений срока годности &lt;a href=&quot;#section-13.2.6&quot;&gt;13.2.6 Устранение неоднозначности&lt;/a&gt; множественных ответов &lt;a href=&quot;#section-13.3&quot;&gt;13.3&lt;/a&gt; Модель валидации &lt;a href=&quot;#section-13.3.1&quot;&gt;13.3.1&lt;/a&gt; Даты последнего изменения ..................................... &lt;a href=&quot;#section-13.3.2&quot;&gt;13.3.2&lt;/a&gt; Тег объекта Валидаторы кэша &lt;a href=&quot;#section-13.3.3&quot;&gt;13.3.3&lt;/a&gt; Слабые и сильные валидаторы 13.3.4 Правила, когда следует использовать теги объектов и даты последнего изменения89 13.3.5 &lt;a href=&quot;#section-13.3.5&quot;&gt;Условные условия&lt;/a&gt; без проверки &lt;a href=&quot;#section-13.4&quot;&gt;13.4&lt;/a&gt; Кэшируемость ответов &lt;a href=&quot;#section-13.5&quot;&gt;13.5&lt;/a&gt; Создание ответов из &lt;a href=&quot;#section-13.5.1&quot;&gt;кешей 13.5.1&lt;/a&gt; Сквозная и Hop-на-HOP Заголовки &lt;a href=&quot;#section-13.5.2&quot;&gt;13.5.2&lt;/a&gt; немодифицируемых Заголовки &lt;a href=&quot;#section-13.5.3&quot;&gt;13.5.3&lt;/a&gt; Комбинирование Заголовки &lt;a href=&quot;#section-13.5.4&quot;&gt;13.5.4&lt;/a&gt; Совмещение Byte Ranges &lt;a href=&quot;#section-13.6&quot;&gt;13.6&lt;/a&gt; Кэширование переговорных ответов &lt;a href=&quot;#section-13.7&quot;&gt;13,7&lt;/a&gt; Shared и неразделяемых кэша &lt;a href=&quot;#section-13.8&quot;&gt;13,8&lt;/a&gt; Ошибка или Неполное Поведение Cache Response &lt;a href=&quot;#section-13.9&quot;&gt;+13,9&lt;/a&gt; Побочные эффекты GET и ГОЛОВА &lt;a href=&quot;#section-13.10&quot;&gt;13,10&lt;/a&gt; утратившие После обновления или Deletions &lt;a href=&quot;#section-13.11&quot;&gt;13,11&lt;/a&gt; Write-Through Обязательного &lt;a href=&quot;#section-13.12&quot;&gt;13,12&lt;/a&gt; Cache Замена &lt;a href=&quot;#section-13.13&quot;&gt;13.13&lt;/a&gt; Списков Истории &lt;a href=&quot;#section-14&quot;&gt;14&lt;/a&gt; Header Поля Определение &lt;a href=&quot;#section-14.1&quot;&gt;14.1&lt;/a&gt; Accept &lt;a href=&quot;#section-14.2&quot;&gt;14.2&lt;/a&gt; Accept-Charset &lt;a href=&quot;#section-14.3&quot;&gt;14,3&lt;/a&gt; Accept- Кодирование &lt;a href=&quot;#section-14.4&quot;&gt;14.4&lt;/a&gt; Accept-Language &lt;a href=&quot;#section-14.5&quot;&gt;14.5&lt;/a&gt; Accept-Ranges &lt;a href=&quot;#section-14.6&quot;&gt;14.6&lt;/a&gt; Age &lt;a href=&quot;#section-14.7&quot;&gt;14.7&lt;/a&gt; Allow &lt;a href=&quot;#section-14.8&quot;&gt;14.8&lt;/a&gt; Авторизация &lt;a href=&quot;#section-14.9&quot;&gt;14.9&lt;/a&gt; Cache-Control &lt;a href=&quot;#section-14.9.1&quot;&gt;14.9.1&lt;/a&gt; Что является кешируемым &lt;a href=&quot;#section-14.9.2&quot;&gt;14.9.2&lt;/a&gt; Что может храниться в &lt;a href=&quot;#section-14.9.3&quot;&gt;кешах 14.9.3&lt;/a&gt; Модификации базового механизма истечения срока &lt;a href=&quot;#section-14.9.4&quot;&gt;14.9.4&lt;/a&gt; Повторная проверка и управление &lt;a href=&quot;#section-14.9.5&quot;&gt;перезагрузкой&lt;/a&gt; кеша 14.9.5 Директива об отсутствии преобразования &lt;a href=&quot;#section-14.9.6&quot;&gt;14.9.6&lt;/a&gt; Расширения управления кешем &lt;a href=&quot;#section-14.10&quot;&gt;14.10&lt;/a&gt; Соединение &lt;a href=&quot;#section-14.11&quot;&gt;14.11&lt;/a&gt; Content-Encoding &lt;a href=&quot;#section-14.12&quot;&gt;14.12&lt;/a&gt; Content-Language &lt;a href=&quot;#section-14.13&quot;&gt;14.13&lt;/a&gt; Content-Length &lt;a href=&quot;#section-14.14&quot;&gt;14.14&lt;/a&gt; Content-Location &lt;a href=&quot;#section-14.15&quot;&gt;14.15&lt;/a&gt; Content-MD5 &lt;a href=&quot;#section-14.16&quot;&gt;14.16&lt;/a&gt; Content-Range &lt;a href=&quot;#section-14.17&quot;&gt;14,17&lt;/a&gt; Content-Type &lt;a href=&quot;#section-14.18&quot;&gt;14,18&lt;/a&gt; Дата &lt;a href=&quot;#section-14.18.1&quot;&gt;14.18.1&lt;/a&gt; Clockless Origin сервера Операция &lt;a href=&quot;#section-14.19&quot;&gt;14,19&lt;/a&gt; ETag &lt;a href=&quot;#section-14.20&quot;&gt;14,20&lt;/a&gt; Ожидайте &lt;a href=&quot;#section-14.21&quot;&gt;14.21&lt;/a&gt; Истекает &lt;a href=&quot;#section-14.22&quot;&gt;14.22&lt;/a&gt; От .......................... ........................... &lt;a href=&quot;#section-14.23&quot;&gt;14.23&lt;/a&gt; Хост &lt;a href=&quot;#section-14.24&quot;&gt;14.24&lt;/a&gt; If-Match &lt;a href=&quot;#section-14.25&quot;&gt;14.25&lt;/a&gt; If-Modified-Since &lt;a href=&quot;#section-14.26&quot;&gt;14.26&lt;/a&gt; If-None-Match &lt;a href=&quot;#section-14.27&quot;&gt;14.27&lt;/a&gt; If-Range &lt;a href=&quot;#section-14.28&quot;&gt;14.28&lt;/a&gt; If-Unmodified-Since &lt;a href=&quot;#section-14.29&quot;&gt;14.29&lt;/a&gt; Last-Modified &lt;a href=&quot;#section-14.30&quot;&gt;14.30&lt;/a&gt; Местоположение &lt;a href=&quot;#section-14.31&quot;&gt;14.31&lt;/a&gt; Max-Нападающие &lt;a href=&quot;#section-14.32&quot;&gt;14,32&lt;/a&gt; Pragma &lt;a href=&quot;#section-14.33&quot;&gt;14,33&lt;/a&gt; Proxy-Authenticate &lt;a href=&quot;#section-14.34&quot;&gt;14,34&lt;/a&gt; Proxy-Authorization &lt;a href=&quot;#section-14.35&quot;&gt;14,35&lt;/a&gt; Диапазон &lt;a href=&quot;#section-14.35.1&quot;&gt;14.35.1&lt;/a&gt; Byte Ranges &lt;a href=&quot;#section-14.35.2&quot;&gt;14.35.2&lt;/a&gt; Диапазон индексирование запросов &lt;a href=&quot;#section-14.36&quot;&gt;14,36&lt;/a&gt; Referer &lt;a href=&quot;#section-14.37&quot;&gt;14,37&lt;/a&gt; Retry-After &lt;a href=&quot;#section-14.38&quot;&gt;14,38&lt;/a&gt; Сервер &lt;a href=&quot;#section-14.39&quot;&gt;14,39&lt;/a&gt; TE &lt;a href=&quot;#section-14.40&quot;&gt;14,40&lt;/a&gt; Прицеп &lt;a href=&quot;#section-14.41&quot;&gt;14,41&lt;/a&gt; Transfer-Encoding &lt;a href=&quot;#section-14.42&quot;&gt;14,42&lt;/a&gt; Реконструкция &lt;a href=&quot;#section-14.43&quot;&gt;14,43&lt;/a&gt; User-Agent &lt;a href=&quot;#section-14.44&quot;&gt;14,44&lt;/a&gt; Варах &lt;a href=&quot;#section-14.45&quot;&gt;14.45&lt;/a&gt; через &lt;a href=&quot;#section-14.46&quot;&gt;14.46&lt;/a&gt; Предупреждение &lt;a href=&quot;#section-14.47&quot;&gt;14.47&lt;/a&gt; WWW-аутентификация &lt;a href=&quot;#section-15&quot;&gt;15&lt;/a&gt; Соображения безопасности &lt;a href=&quot;#section-15.1&quot;&gt;15.1&lt;/a&gt; Личная информация &lt;a href=&quot;#section-15.1.1&quot;&gt;15.1.1&lt;/a&gt; Злоупотребление информацией журнала сервера &lt;a href=&quot;#section-15.1.2&quot;&gt;15.1.2&lt;/a&gt; Передача конфиденциальной информации &lt;a href=&quot;#section-15.1.3&quot;&gt;15.1.3&lt;/a&gt; Кодирование конфиденциальной информации в URI &lt;a href=&quot;#section-15.1.4&quot;&gt;15.1.4&lt;/a&gt; Проблемы конфиденциальности, связанные с принятием заголовков &lt;a href=&quot;#section-15.2&quot;&gt;15.2&lt;/a&gt; Атаки на основе файла и пути Имена &lt;a href=&quot;#section-15.3&quot;&gt;15.3&lt;/a&gt; Спуфинг DNS &lt;a href=&quot;#section-15.4&quot;&gt;15.4&lt;/a&gt; Заголовки местоположения и спуфинг &lt;a href=&quot;#section-15.5&quot;&gt;15.5&lt;/a&gt; Проблемы с размещением содержимого &lt;a href=&quot;#section-15.6&quot;&gt;15.6 Учетные данные для&lt;/a&gt; аутентификации и неактивные клиенты &lt;a href=&quot;#section-15.7&quot;&gt;15.7&lt;/a&gt; Прокси-серверы и кэширование &lt;a href=&quot;#section-15.7.1&quot;&gt;15.7.1&lt;/a&gt; Атаки отказа в обслуживании на прокси-серверах &lt;a href=&quot;#section-16&quot;&gt;16&lt;/a&gt; Подтверждения &lt;a href=&quot;#section-17&quot;&gt;17&lt;/a&gt; Ссылки &lt;a href=&quot;#section-18&quot;&gt;18&lt;/a&gt; Адреса авторов &lt;a href=&quot;#section-19&quot;&gt;19&lt;/a&gt; Приложения &lt;a href=&quot;#section-19.1&quot;&gt;19.1&lt;/a&gt; Тип интернет-носителя: сообщение / http и приложение / http &lt;a href=&quot;#section-19.2&quot;&gt;19.2&lt;/a&gt; Тип интернет-носителя multipart / byteranges &lt;a href=&quot;#section-19.3&quot;&gt;19.3&lt;/a&gt; Толерантные приложения &lt;a href=&quot;#section-19.4&quot;&gt;19.4&lt;/a&gt; Различия между объектами HTTP и &lt;a href=&quot;https://tools.ietf.org/html/rfc2045&quot;&gt;RFC 2045&lt;/a&gt; объектов .... &lt;a href=&quot;#section-19.4.1&quot;&gt;19.4.1&lt;/a&gt; MIME-версия &lt;a href=&quot;#section-19.4.2&quot;&gt;19.4.2&lt;/a&gt; Преобразование в каноническую форму &lt;a href=&quot;#section-19.4.3&quot;&gt;19.4.3&lt;/a&gt; Преобразование форматов даты &lt;a href=&quot;#section-19.4.4&quot;&gt;19.4.4&lt;/a&gt; Введение в Content-Encoding &lt;a href=&quot;#section-19.4.5&quot;&gt;19.4.5&lt;/a&gt; Отсутствие Content-Transfer-Encoding &lt;a href=&quot;#section-19.4.6&quot;&gt;19.4.6&lt;/a&gt; Введение в Transfer-Encoding &lt;a href=&quot;#section-19.4.7&quot;&gt;19.4.7&lt;/a&gt; MHTML и ограничения длины строки &lt;a href=&quot;#section-19.5&quot;&gt;19.5&lt;/a&gt; Дополнительные функции &lt;a href=&quot;#section-19.5.1&quot;&gt;19.5.1&lt;/a&gt; Content-Disposition &lt;a href=&quot;#section-19.6&quot;&gt;19.6&lt;/a&gt; Совместимость с предыдущими &lt;a href=&quot;#section-19.6.1&quot;&gt;версиями 19.6.1&lt;/a&gt; Изменения по &lt;a href=&quot;#section-19.6.2&quot;&gt;сравнению&lt;/a&gt; с HTTP / 1.0 19.6.2 Совместимость с постоянными соединениями HTTP / 1.0 &lt;a href=&quot;#section-19.6.3&quot;&gt;19.6.3&lt;/a&gt; Изменения по сравнению с &lt;a href=&quot;https://tools.ietf.org/html/rfc2068&quot;&gt;RFC 2068 &lt;/a&gt;&lt;a href=&quot;#section-20&quot;&gt;20&lt;/a&gt; Указатель &lt;a href=&quot;#section-21&quot;&gt;21&lt;/a&gt; Полное заявление об авторских правах</target>
        </trans-unit>
        <trans-unit id="d08c83f00b0f35b12328f45a668424f28ef4c379" translate="yes" xml:space="preserve">
          <source>Storing Responses in Caches (RFC 7234)</source>
          <target state="translated">Хранение ответов в кэше (RFC 7234)</target>
        </trans-unit>
        <trans-unit id="a1c0b3831b3706354655bc626dc41410ec27c9ee" translate="yes" xml:space="preserve">
          <source>Strict Transport Security resolves this problem; as long as you've accessed your bank's web site once using HTTPS, and the bank's web site uses Strict Transport Security, your browser will know to automatically use only HTTPS, which prevents hackers from performing this sort of man-in-the-middle attack.</source>
          <target state="translated">Строгая транспортная безопасность решает эту проблему;до тех пор,пока вы получили доступ к веб-сайту вашего банка один раз с помощью HTTPS,и веб-сайт банка использует строгую транспортную безопасность,ваш браузер будет знать,что автоматически использовать только HTTPS,что предотвращает хакеров от выполнения такого рода man-in-the-middle атаки.</target>
        </trans-unit>
        <trans-unit id="fc587e4b5dd9c8f2dabaee348836f36fc9073981" translate="yes" xml:space="preserve">
          <source>Strict-Transport-Security</source>
          <target state="translated">Strict-Transport-Security</target>
        </trans-unit>
        <trans-unit id="b47d9bc682e1c7c17d99058428f34fc877b82f8a" translate="yes" xml:space="preserve">
          <source>Strong validation</source>
          <target state="translated">Сильное подтверждение</target>
        </trans-unit>
        <trans-unit id="bce009dcd1fa74e08bb9b002217d1633ae7d181e" translate="yes" xml:space="preserve">
          <source>Strong validation consists of guaranteeing that the resource is, byte to byte, identical to the one it is compared too. This is mandatory for some conditional headers, and the default for the others. Strong validation is very strict and may be difficult to guarantee at the server level, but it does guarantee no data loss at any time, sometimes at the expense of performance.</source>
          <target state="translated">Сильная валидация состоит в том,чтобы гарантировать,что ресурс,байт за байтом,тоже идентичен сравниваемому.Это обязательно для одних условных заголовков,а для других-по умолчанию.Сильная валидация очень строгая и может быть трудно гарантировать на уровне сервера,но она не гарантирует потери данных в любой момент времени,иногда за счет производительности.</target>
        </trans-unit>
        <trans-unit id="546f797f485e1c93debf33798738f22e2e2c71a9" translate="yes" xml:space="preserve">
          <source>Structure of a MIME type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a9b0645b4584767c896ce8933cbb6a249c16aa0" translate="yes" xml:space="preserve">
          <source>Structure of a server response</source>
          <target state="translated">Структура ответа сервера</target>
        </trans-unit>
        <trans-unit id="87e09f53c79b7b9952020efdce6fce234ef5dd58" translate="yes" xml:space="preserve">
          <source>Subnet based decisions</source>
          <target state="translated">Решения на основе подсети</target>
        </trans-unit>
        <trans-unit id="d0b8ad91fc39a9beb48e35304c9f430f0a69862b" translate="yes" xml:space="preserve">
          <source>Subresource Integrity</source>
          <target state="translated">Целостность субресурсов</target>
        </trans-unit>
        <trans-unit id="983f9ac400958792e64abc2d44401492ed778563" translate="yes" xml:space="preserve">
          <source>Subresource Integrity&lt;br/&gt;&lt;small&gt;The definition of 'require-sri-for' in that specification.&lt;/small&gt;</source>
          <target state="translated">Целостность подресурсов &lt;br/&gt;&lt;small&gt;Определение &amp;laquo;require-sri-for&amp;raquo; в этой спецификации.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="522495833932f57c0df7141327df306caf0e6ac3" translate="yes" xml:space="preserve">
          <source>Subsequent lines represent an HTTP header, giving the server information about what type of data is appropriate (e.g., what language, what MIME types), or other data altering its behavior (e.g., not sending an answer if it is already cached). These HTTP headers form a block which ends with an empty line.</source>
          <target state="translated">Последующие строки представляют собой HTTP-заголовок,дающий серверу информацию о том,какой тип данных подходит (например,какой язык,какие MIME-типы),или другие данные,изменяющие его поведение (например,не посылать ответ,если он уже кэширован).Эти HTTP заголовки образуют блок,который заканчивается пустой строкой.</target>
        </trans-unit>
        <trans-unit id="8d055925604926e85c70a546b297fe94724c7c5d" translate="yes" xml:space="preserve">
          <source>Subsequent lines represent specific HTTP headers, giving the client information about the data sent (e.g. type, data size, compression algorithm used, hints about caching). Similarly to the block of HTTP headers for a client request, these HTTP headers form a block ending with an empty line.</source>
          <target state="translated">Последующие строки представляют собой специфические HTTP-заголовки,дающие клиенту информацию об отправленных данных (например,тип,размер данных,используемый алгоритм сжатия,подсказки о кэшировании).Подобно блоку HTTP-заголовков для клиентского запроса,эти HTTP-заголовки образуют блок,заканчивающийся пустой строкой.</target>
        </trans-unit>
        <trans-unit id="56befc0f91be9db5dc24b49f4e5533e7ea0072f5" translate="yes" xml:space="preserve">
          <source>Subsequent sections discuss scenarios, as well as provide a breakdown of the HTTP headers used.</source>
          <target state="translated">В последующих разделах обсуждаются сценарии,а также приводится разбивка используемых заголовков HTTP.</target>
        </trans-unit>
        <trans-unit id="ff5c588e9523269ce3c84f63e9bd3897ebe63eec" translate="yes" xml:space="preserve">
          <source>Succeeds if the &lt;a href=&quot;headers/etag&quot;&gt;&lt;code&gt;ETag&lt;/code&gt;&lt;/a&gt; of the distant resource is different to each listed in this header. By default, unless the etag is prefixed with &lt;code&gt;'W/'&lt;/code&gt;, it performs a strong validation.</source>
          <target state="translated">Успешно, если &lt;a href=&quot;headers/etag&quot;&gt; &lt;code&gt;ETag&lt;/code&gt; &lt;/a&gt; удаленного ресурса отличается от каждого из перечисленных в этом заголовке. По умолчанию, если etag не имеет префикса &lt;code&gt;'W/'&lt;/code&gt; , выполняется строгая проверка.</target>
        </trans-unit>
        <trans-unit id="aeef7e868363979461d6ea2ad7bf8c6358e365a2" translate="yes" xml:space="preserve">
          <source>Succeeds if the &lt;a href=&quot;headers/etag&quot;&gt;&lt;code&gt;ETag&lt;/code&gt;&lt;/a&gt; of the distant resource is equal to one listed in this header. By default, unless the etag is prefixed with &lt;code&gt;'W/'&lt;/code&gt;, it performs a strong validation.</source>
          <target state="translated">Успешно, если &lt;a href=&quot;headers/etag&quot;&gt; &lt;code&gt;ETag&lt;/code&gt; &lt;/a&gt; удаленного ресурса равен указанному в этом заголовке. По умолчанию, если etag не имеет префикса &lt;code&gt;'W/'&lt;/code&gt; , выполняется строгая проверка.</target>
        </trans-unit>
        <trans-unit id="2c3bd70cb1b0ac4e3f147078e58e04d441ea7e0e" translate="yes" xml:space="preserve">
          <source>Succeeds if the &lt;a href=&quot;headers/last-modified&quot;&gt;&lt;code&gt;Last-Modified&lt;/code&gt;&lt;/a&gt; date of the distant resource is more recent than the one given in this header.</source>
          <target state="translated">Успешно, если дата &lt;a href=&quot;headers/last-modified&quot;&gt; &lt;code&gt;Last-Modified&lt;/code&gt; &lt;/a&gt; удаленного ресурса более поздняя, ​​чем указанная в этом заголовке.</target>
        </trans-unit>
        <trans-unit id="54dce543ac7122114b0f1b25a6c18db4700a57c7" translate="yes" xml:space="preserve">
          <source>Succeeds if the &lt;a href=&quot;headers/last-modified&quot;&gt;&lt;code&gt;Last-Modified&lt;/code&gt;&lt;/a&gt; date of the distant resource is older or the same than the one given in this header.</source>
          <target state="translated">Успешно, если дата &lt;a href=&quot;headers/last-modified&quot;&gt; &lt;code&gt;Last-Modified&lt;/code&gt; &lt;/a&gt; удаленного ресурса старше или совпадает с датой, указанной в этом заголовке.</target>
        </trans-unit>
        <trans-unit id="1290a72cee06cf30f2b9582a53c05c695119f17b" translate="yes" xml:space="preserve">
          <source>Successful response has body</source>
          <target state="translated">Успешная реакция имеет тело</target>
        </trans-unit>
        <trans-unit id="d702cfd3f57a8cfe18b4f37a36bf15bc2c548094" translate="yes" xml:space="preserve">
          <source>Successful responses</source>
          <target state="translated">Успешные ответы</target>
        </trans-unit>
        <trans-unit id="47bd58ec264925cf6d2934f949144bd5b42d3e5b" translate="yes" xml:space="preserve">
          <source>Successful responses (&lt;code&gt;200&lt;/code&gt;&amp;ndash;&lt;code&gt;299&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e16e36ee4dff516de670a1cd0a9ef3f413ae5fb" translate="yes" xml:space="preserve">
          <source>Successful results of a retrieval request: a &lt;a href=&quot;status/200&quot;&gt;&lt;code&gt;200&lt;/code&gt;&lt;/a&gt; (OK) response to a &lt;a href=&quot;methods/get&quot;&gt;&lt;code&gt;GET&lt;/code&gt;&lt;/a&gt; request containing a resource like HTML documents, images or files.</source>
          <target state="translated">Успешные результаты поискового запроса: ответ &lt;a href=&quot;status/200&quot;&gt; &lt;code&gt;200&lt;/code&gt; &lt;/a&gt; (OK) на запрос &lt;a href=&quot;methods/get&quot;&gt; &lt;code&gt;GET&lt;/code&gt; ,&lt;/a&gt; содержащий такой ресурс, как HTML-документы, изображения или файлы.</target>
        </trans-unit>
        <trans-unit id="7cf7d910e383411b293ea5c44eeeb1c0a4a4a122" translate="yes" xml:space="preserve">
          <source>Successful web page response:</source>
          <target state="translated">Успешный ответ веб-страницы:</target>
        </trans-unit>
        <trans-unit id="201d1d5e3d5c9d5de591a119116dd6b9386319e3" translate="yes" xml:space="preserve">
          <source>Supplants the &lt;code&gt;Origin&lt;/code&gt; header as defined in RFC6454.</source>
          <target state="translated">Подменяет заголовок &lt;code&gt;Origin&lt;/code&gt; , как определено в RFC6454.</target>
        </trans-unit>
        <trans-unit id="216a84fbd27cb3b4473b824b61cc5de56085403b" translate="yes" xml:space="preserve">
          <source>Support for the &lt;code&gt;Retry-After&lt;/code&gt; header on both clients and servers is still inconsistent. However, some crawlers and spiders, like the Googlebot, honor the &lt;code&gt;Retry-After&lt;/code&gt; header. It is useful to send it along with a &lt;a href=&quot;../status/503&quot;&gt;&lt;code&gt;503&lt;/code&gt;&lt;/a&gt; (Service Unavailable) response, so that search engines will keep indexing your site when the downtime is over.</source>
          <target state="translated">Поддержка заголовка &lt;code&gt;Retry-After&lt;/code&gt; как на клиентах, так и на серверах по-прежнему несовместима. Однако некоторые сканеры и пауки, такие как Googlebot, &lt;code&gt;Retry-After&lt;/code&gt; заголовок Retry-After . Полезно отправить его вместе с ответом &lt;a href=&quot;../status/503&quot;&gt; &lt;code&gt;503&lt;/code&gt; &lt;/a&gt; (служба недоступна), чтобы поисковые системы продолжали индексировать ваш сайт, когда время простоя закончится.</target>
        </trans-unit>
        <trans-unit id="4c6167e7995d17c7bc37724de85e632d49fe0fd7" translate="yes" xml:space="preserve">
          <source>Support of &lt;a href=&quot;../headers/alt-svc&quot;&gt;&lt;code&gt;Alt-Svc&lt;/code&gt;&lt;/a&gt; allows the dissociation of the identification and the location of a given resource, allowing for a smarter &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/CDN&quot;&gt;CDN&lt;/a&gt; caching mechanism.</source>
          <target state="translated">Поддержка &lt;a href=&quot;../headers/alt-svc&quot;&gt; &lt;code&gt;Alt-Svc&lt;/code&gt; &lt;/a&gt; позволяет разделить идентификацию и местоположение данного ресурса, что позволяет использовать более умный механизм кэширования &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/CDN&quot;&gt;CDN&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9cf8d0d7c981d663797eeaca7523e977bed4ab51" translate="yes" xml:space="preserve">
          <source>Supporting OCSP stapling (that is, the &lt;code&gt;status_request&lt;/code&gt; TLS extension) and providing a &lt;code&gt;SignedCertificateTimestampList&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1d598d97e68fd3cf7ac8ec2441b332f10d641fc" translate="yes" xml:space="preserve">
          <source>Switch to a blacklist model for restricted Accept headers in simple CORS requests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57ebc7fe25f3af6b8e76fe3b492c6dd20ec4df27" translate="yes" xml:space="preserve">
          <source>Switching protocols might be used with &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API&quot;&gt;WebSockets&lt;/a&gt;.</source>
          <target state="translated">Протоколы переключения могут использоваться с &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API&quot;&gt;WebSockets&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="00d7e2af1a23453b6e8dc5b63832fd4a645bc527" translate="yes" xml:space="preserve">
          <source>Synchronous XMLHTTPRequest</source>
          <target state="translated">Синхронный XMLHTTPRequest</target>
        </trans-unit>
        <trans-unit id="4103f0b31624fefeee3cf5f8642cc1c83ff9a978" translate="yes" xml:space="preserve">
          <source>Synchronous XMLHttpRequest</source>
          <target state="translated">Синхронный XMLHttpRequest</target>
        </trans-unit>
        <trans-unit id="be9208425b9c861fee1e1a67180b55dad01dafe7" translate="yes" xml:space="preserve">
          <source>Synchronous scripts</source>
          <target state="translated">Синхронные скрипты</target>
        </trans-unit>
        <trans-unit id="17c7ba7676ad1ad6dd1c4e6b997adcae910262c9" translate="yes" xml:space="preserve">
          <source>Syntax</source>
          <target state="translated">Syntax</target>
        </trans-unit>
        <trans-unit id="791a9bf2077653138c6b3912f9bf31ac1b906662" translate="yes" xml:space="preserve">
          <source>Syntax of Uniform Resource Identifiers (URIs)</source>
          <target state="translated">Синтаксис унифицированных идентификаторов ресурсов (URI)</target>
        </trans-unit>
        <trans-unit id="c2c53d66948214258a26ca9ca845d7ac0c17f8e7" translate="yes" xml:space="preserve">
          <source>T</source>
          <target state="translated">T</target>
        </trans-unit>
        <trans-unit id="5a056389515bd999bc97e7793f7c147c0b47eac3" translate="yes" xml:space="preserve">
          <source>TCP port number on which the server is listening.</source>
          <target state="translated">Номер TCP порта,на котором прослушивается сервер.</target>
        </trans-unit>
        <trans-unit id="49a198744d47717f2dedc61eda3abad936b310a2" translate="yes" xml:space="preserve">
          <source>TCP port number on which the server is listening. If no port is given, the default port for the service requested (e.g., &quot;80&quot; for an HTTP URL) is implied.</source>
          <target state="translated">Номер TCP порта,на котором прослушивается сервер.Если порт не указан,подразумевается порт по умолчанию для запрашиваемой службы (например,&quot;80&quot; для HTTP URL).</target>
        </trans-unit>
        <trans-unit id="1945ca5513cf77b8240e53495ba7a26e86acaca7" translate="yes" xml:space="preserve">
          <source>TE</source>
          <target state="translated">TE</target>
        </trans-unit>
        <trans-unit id="2dd200ebd9f2359780d12717e9c2166303c7a6d3" translate="yes" xml:space="preserve">
          <source>TE (RFC 2616)</source>
          <target state="translated">ТЭ (RFC 2616)</target>
        </trans-unit>
        <trans-unit id="a775b64f2cd6a88a198986d46d44e0a021785125" translate="yes" xml:space="preserve">
          <source>TIFF</source>
          <target state="translated">TIFF</target>
        </trans-unit>
        <trans-unit id="ddf8a55c683ee58c6268b4264acb1d703195d588" translate="yes" xml:space="preserve">
          <source>TRACE</source>
          <target state="translated">TRACE</target>
        </trans-unit>
        <trans-unit id="0d5266ebda7b5b7ca016e3ecbf8bfe060fe9dd53" translate="yes" xml:space="preserve">
          <source>TRACE (RFC 7231)</source>
          <target state="translated">СЛЕД (ШТ.7231)</target>
        </trans-unit>
        <trans-unit id="1223c0da5965757fa8d93336605832a0144596b6" translate="yes" xml:space="preserve">
          <source>TRACE: The message body contains the request message as received by the server</source>
          <target state="translated">TRACE:тело сообщения содержит запросное сообщение,полученное сервером.</target>
        </trans-unit>
        <trans-unit id="56ab49a5c68f11cc45c651da6a3f339eff2853f8" translate="yes" xml:space="preserve">
          <source>TV</source>
          <target state="translated">TV</target>
        </trans-unit>
        <trans-unit id="fabcacd2a76a1a809975d60d7982c2a1035ab1c0" translate="yes" xml:space="preserve">
          <source>Tablet</source>
          <target state="translated">Tablet</target>
        </trans-unit>
        <trans-unit id="7193b142ed8cd6bae9bcd7f28df4d59bf30c7919" translate="yes" xml:space="preserve">
          <source>Tablet versions on WebView mirror mobile, but do not contain a &lt;code&gt;Mobile&lt;/code&gt; token.</source>
          <target state="translated">Версии для планшетов на зеркальном мобильном устройстве WebView, но не содержат токен &lt;code&gt;Mobile&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e63d48cf86b47f4a2e41a4c2480abd63617e07ff" translate="yes" xml:space="preserve">
          <source>Tagged Image File Format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c352e4dbdd3d9d5e6127303b4e65a452119231a" translate="yes" xml:space="preserve">
          <source>Tagged Image File Format (TIFF)</source>
          <target state="translated">Формат файла изображения с метками (TIFF)</target>
        </trans-unit>
        <trans-unit id="5c1a98fc42374c0534b21a7c408be88b0b460645" translate="yes" xml:space="preserve">
          <source>Tags and summary</source>
          <target state="translated">Теги и резюме</target>
        </trans-unit>
        <trans-unit id="03b91e28fed7956fe56ed8f65fc65fd882bbb491" translate="yes" xml:space="preserve">
          <source>Tags for the Identification of Language</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40a1df0d175828bc0ac87d97cb74122c8c8d4d00" translate="yes" xml:space="preserve">
          <source>Takes precedence over &lt;code&gt;max-age&lt;/code&gt; or the &lt;code&gt;Expires&lt;/code&gt; header, but it only applies to shared caches (e.g., proxies) and is ignored by a private cache.</source>
          <target state="translated">Имеет приоритет над &lt;code&gt;max-age&lt;/code&gt; или заголовком &lt;code&gt;Expires&lt;/code&gt; , но применяется только к общим кешам (например, прокси) и игнорируется частным кешем.</target>
        </trans-unit>
        <trans-unit id="c149ac475d4a9b7fd2b15c7870c52269b0872366" translate="yes" xml:space="preserve">
          <source>Tape Archive (TAR)</source>
          <target state="translated">Архив лент (TAR)</target>
        </trans-unit>
        <trans-unit id="a9bdde16c71950f9f0a80cbf4ce3915950ed2150" translate="yes" xml:space="preserve">
          <source>Targets of caching operations</source>
          <target state="translated">Цели кэширования</target>
        </trans-unit>
        <trans-unit id="d9c7795d9a943127c5b4d89543f3db9a1ffaae49" translate="yes" xml:space="preserve">
          <source>Technically a part of Device Memory API, this header represents an approximate amount of RAM client has.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2313e8c800252c9ae07b4e97927a6d9cf9ac1b33" translate="yes" xml:space="preserve">
          <source>Techniques for canonical URLs</source>
          <target state="translated">Методы для канонических URL-адресов</target>
        </trans-unit>
        <trans-unit id="04e57122701fa97f61a068ec7bd222827a269a62" translate="yes" xml:space="preserve">
          <source>Tells the browser that the page being loaded is going to want to perform a large allocation.</source>
          <target state="translated">Скажет браузеру,что загружаемая страница захочет выполнить большое выделение.</target>
        </trans-unit>
        <trans-unit id="c8c8d2a564da5b504842208aff51d3ccfc991895" translate="yes" xml:space="preserve">
          <source>Tells the client the server's prefered encoding scheme when submiting a username and password. The only allowed value is the case insensitive string &quot;UTF-8&quot;. This does not relate to the encoding of the realm string.</source>
          <target state="translated">Сообщает клиенту предпочитаемую схему кодирования сервера при отправке имени пользователя и пароля.Единственное допустимое значение-нечувствительная к регистру строка &quot;UTF-8&quot;.Это не относится к кодировке строки realm.</target>
        </trans-unit>
        <trans-unit id="3e310a9a1efd6f1548ce06a7ac2dc4748669f825" translate="yes" xml:space="preserve">
          <source>Tells the client the server's prefered encoding scheme when submitting a username and password. The only allowed value is the case insensitive string &quot;UTF-8&quot;. This does not relate to the encoding of the realm string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e58df9f49057b700376e3c8d719874a09fcdc736" translate="yes" xml:space="preserve">
          <source>Tells the user-agent to reset the document which sent this request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86f4edbe4b69402bc32c890fe46456f6b42c2ad1" translate="yes" xml:space="preserve">
          <source>Temporary redirections</source>
          <target state="translated">Временные переадресации</target>
        </trans-unit>
        <trans-unit id="7aefd5b2f288adc48ce6a117e81f357d1eed0b40" translate="yes" xml:space="preserve">
          <source>Temporary redirects during site maintenance or downtime</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b029c546a5b81b886574d6c63becc55db5c5c32" translate="yes" xml:space="preserve">
          <source>Temporary responses to long requests</source>
          <target state="translated">Временные ответы на длительные запросы</target>
        </trans-unit>
        <trans-unit id="44729f34632c3c8c496e4f38b8037aa7c3dfb175" translate="yes" xml:space="preserve">
          <source>Temporary responses to unsafe requests</source>
          <target state="translated">Временное реагирование на небезопасные запросы</target>
        </trans-unit>
        <trans-unit id="66ad9b49478e00d9521f776ed94bddcd7f501cea" translate="yes" xml:space="preserve">
          <source>Testing your policy</source>
          <target state="translated">Проверка вашей политики</target>
        </trans-unit>
        <trans-unit id="c3328c39b0e29f78e9ff45db674248b1d245887d" translate="yes" xml:space="preserve">
          <source>Text</source>
          <target state="translated">Text</target>
        </trans-unit>
        <trans-unit id="9845ab8961b7e4a2e464fba53a5a9a896b568e17" translate="yes" xml:space="preserve">
          <source>Text, (generally ASCII or ISO 8859-&lt;em&gt;n&lt;/em&gt;)</source>
          <target state="translated">Текст (обычно ASCII или ISO 8859- &lt;em&gt;n&lt;/em&gt; )</target>
        </trans-unit>
        <trans-unit id="dd0fe1624d9684bcb52e0cccdb484d7e2001e225" translate="yes" xml:space="preserve">
          <source>Text-only data including any human-readable content, source code, or textual data such as comma-separated value (CSV) formatted data. Examples include &lt;code&gt;text/plain&lt;/code&gt;, &lt;code&gt;text/csv&lt;/code&gt;, and &lt;code&gt;text/html&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41e7a7ed719d0daa7e0a2e3d48d3aa52fa318aae" translate="yes" xml:space="preserve">
          <source>Thanks to its extensibility &amp;ndash; creating new headers or methods is easy &amp;ndash; and even if the HTTP/1.1 protocol was refined over two revisions, &lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;RFC 2616&lt;/a&gt; published in June 1999 and the series of &lt;a href=&quot;https://tools.ietf.org/html/rfc7230&quot;&gt;RFC 7230&lt;/a&gt;-&lt;a href=&quot;https://tools.ietf.org/html/rfc7235&quot;&gt;RFC 7235&lt;/a&gt; published in June 2014 in prevision of the release of HTTP/2, this protocol has been extremely stable over more than 15 years.</source>
          <target state="translated">Благодаря его расширяемости - создание новых заголовков или методов - легко - и даже если протокол HTTP / 1.1 был усовершенствован в двух версиях, &lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;RFC 2616,&lt;/a&gt; опубликованный в июне 1999 года, и серия &lt;a href=&quot;https://tools.ietf.org/html/rfc7230&quot;&gt;RFC 7230&lt;/a&gt; - &lt;a href=&quot;https://tools.ietf.org/html/rfc7235&quot;&gt;RFC 7235,&lt;/a&gt; опубликованная в июне 2014 года в преддверии выпуск HTTP / 2, этот протокол был чрезвычайно стабильным более 15 лет.</target>
        </trans-unit>
        <trans-unit id="cd15a270847553d0286663fce338c3186c3904d8" translate="yes" xml:space="preserve">
          <source>Thanks to the &lt;a href=&quot;../headers/host&quot;&gt;&lt;code&gt;Host&lt;/code&gt;&lt;/a&gt; header, the ability to host different domains at the same IP address now allows server collocation.</source>
          <target state="translated">Благодаря заголовку &lt;a href=&quot;../headers/host&quot;&gt; &lt;code&gt;Host&lt;/code&gt; &lt;/a&gt; возможность размещать разные домены на одном IP-адресе теперь позволяет одновременное размещение серверов.</target>
        </trans-unit>
        <trans-unit id="24cf3eddb29388191b3cd3ec808e71bc6c5fd48a" translate="yes" xml:space="preserve">
          <source>Thanks to the &lt;a href=&quot;../headers/host&quot;&gt;&lt;code&gt;Host&lt;/code&gt;&lt;/a&gt; header, the ability to host different domains at the same IP address now allows server colocation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c0b92cdd8e1ab117b52ae806f278493aef32784" translate="yes" xml:space="preserve">
          <source>That way, you still upgrade insecure requests on your secure site, but the only monitoring policy is violated and reports insecure resources to your endpoint.</source>
          <target state="translated">Таким образом,вы все еще обновляете незащищенные запросы на вашем защищенном сайте,но единственная политика мониторинга нарушается и сообщает о незащищенных ресурсах на вашу конечную точку.</target>
        </trans-unit>
        <trans-unit id="93ef0dd827103681fcee453b78be2ff14e1a261d" translate="yes" xml:space="preserve">
          <source>The</source>
          <target state="translated">The</target>
        </trans-unit>
        <trans-unit id="30bedea71a5adc4d8f862982f2915b1068fb6576" translate="yes" xml:space="preserve">
          <source>The &quot;Accept&quot; header field can be used by user agents to specify
   response media types that are acceptable.  Accept header fields can
   be used to indicate that the request is specifically limited to a
   small set of desired types, as in the case of a request for an
   in-line image.

     Accept = #( media-range [ accept-params ] )

     media-range    = ( &quot;*/*&quot;
                      / ( type &quot;/&quot; &quot;*&quot; )
                      / ( type &quot;/&quot; subtype )
                      ) *( OWS &quot;;&quot; OWS parameter )
     accept-params  = weight *( accept-ext )
     accept-ext = OWS &quot;;&quot; OWS token [ &quot;=&quot; ( token / quoted-string ) ]

   The asterisk &quot;*&quot; character is used to group media types into ranges,
   with &quot;*/*&quot; indicating all media types and &quot;type/*&quot; indicating all
   subtypes of that type.  The media-range can include media type
   parameters that are applicable to that range.

   Each media-range might be followed by zero or more applicable media
   type parameters (e.g., charset), an optional &quot;q&quot; parameter for
   indicating a relative weight (&lt;a href=&quot;#section-5.3.1&quot;&gt;Section 5.3.1&lt;/a&gt;), and then zero or more
   extension parameters.  The &quot;q&quot; parameter is necessary if any
   extensions (accept-ext) are present, since it acts as a separator
   between the two parameter sets.

      Note: Use of the &quot;q&quot; parameter name to separate media type
      parameters from Accept extension parameters is due to historical
      practice.  Although this prevents any media type parameter named
      &quot;q&quot; from being used with a media range, such an event is believed
      to be unlikely given the lack of any &quot;q&quot; parameters in the IANA 

      media type registry and the rare usage of any media type
      parameters in Accept.  Future media types are discouraged from
      registering any parameter named &quot;q&quot;.

   The example

     Accept: audio/*; q=0.2, audio/basic

   is interpreted as &quot;I prefer audio/basic, but send me any audio type
   if it is the best available after an 80% markdown in quality&quot;.

   A request without any Accept header field implies that the user agent
   will accept any media type in response.  If the header field is
   present in a request and none of the available representations for
   the response have a media type that is listed as acceptable, the
   origin server can either honor the header field by sending a 406 (Not
   Acceptable) response or disregard the header field by treating the
   response as if it is not subject to content negotiation.

   A more elaborate example is

     Accept: text/plain; q=0.5, text/html,
             text/x-dvi; q=0.8, text/x-c

   Verbally, this would be interpreted as &quot;text/html and text/x-c are
   the equally preferred media types, but if they do not exist, then
   send the text/x-dvi representation, and if that does not exist, send
   the text/plain representation&quot;.

   Media ranges can be overridden by more specific media ranges or
   specific media types.  If more than one media range applies to a
   given type, the most specific reference has precedence.  For example,

     Accept: text/*, text/plain, text/plain;format=flowed, */*

   have the following precedence:

   1.  text/plain;format=flowed

   2.  text/plain

   3.  text/*

   4.  */*

   The media type quality factor associated with a given type is
   determined by finding the media range with the highest precedence
   that matches the type.  For example, 

     Accept: text/*;q=0.3, text/html;q=0.7, text/html;level=1,
             text/html;level=2;q=0.4, */*;q=0.5

   would cause the following values to be associated:

   +-------------------+---------------+
   | Media Type        | Quality Value |
   +-------------------+---------------+
   | text/html;level=1 | 1             |
   | text/html         | 0.7           |
   | text/plain        | 0.3           |
   | image/jpeg        | 0.5           |
   | text/html;level=2 | 0.4           |
   | text/html;level=3 | 0.7           |
   +-------------------+---------------+

   Note: A user agent might be provided with a default set of quality
   values for certain media ranges.  However, unless the user agent is a
   closed system that cannot interact with other rendering agents, this
   default set ought to be configurable by the user.</source>
          <target state="translated">Поле заголовка &amp;laquo;Принять&amp;raquo; может использоваться пользовательскими агентами для определения приемлемых типов носителей ответа. Поля заголовка Accept могут использоваться для указания того, что запрос конкретно ограничен небольшим набором желаемых типов, как в случае запроса встроенного изображения. Accept = # (media-range [accept-params]) media-range = (&quot;* / *&quot; / (type &quot;/&quot; &quot;*&quot;) / (type &quot;/&quot; подтип)) * (OWS &quot;;&quot; Параметр OWS ) accept-params = вес * (accept-ext) accept-ext = OWS &quot;;&quot; Токен OWS [&quot;=&quot; (токен / строка в кавычках)] Звездочка &quot;*&quot; используется для группировки типов мультимедиа в диапазоны, где &quot;* / *&quot; указывает все типы мультимедиа, а &quot;type / *&quot;с указанием всех подтипов этого типа. Диапазон мультимедиа может включать в себя параметры типа мультимедиа, применимые к этому диапазону. За каждым медиа-диапазоном может следовать ноль или более применимых параметров типа медиа (например, кодировка), необязательный параметр &amp;laquo;q&amp;raquo; для указания относительного веса (&lt;a href=&quot;#section-5.3.1&quot;&gt;Раздел 5.3.1&lt;/a&gt;), а затем ноль или более параметров расширения. Параметр &amp;laquo;q&amp;raquo; необходим, если присутствуют какие-либо расширения (accept-ext), поскольку он действует как разделитель между двумя наборами параметров. Примечание. Использование имени параметра &amp;laquo;q&amp;raquo; для отделения параметров типа мультимедиа от параметров расширения Accept связано с исторической практикой. Хотя это предотвращает использование любого параметра типа носителя с именем &amp;laquo;q&amp;raquo; с диапазоном носителей, такое событие считается маловероятным, учитывая отсутствие каких-либо параметров &amp;laquo;q&amp;raquo; в реестре типов носителей IANA и редкое использование любого типа носителя. параметры в Accept. В будущих типах носителей не рекомендуется регистрировать какой-либо параметр с именем &amp;laquo;q&amp;raquo;. Пример Accept: audio / *; q = 0,2, аудио / базовый интерпретируется как &quot;Я предпочитаю аудио / базовый, но присылайте мне любой тип аудио, если он лучше всего доступен после снижения качества на 80% &quot;. Запрос без поля заголовка Accept означает, что пользовательский агент примет в ответ любой тип мультимедиа. Если заголовок поле присутствует в запросе, и ни одно из доступных представлений для ответа не имеет типа носителя, который указан как приемлемый, исходный сервер может либо учитывать поле заголовка, отправив ответ 406 (неприемлемо), либо игнорировать поле заголовка, обрабатывая ответ, как если бы он не был предметом согласования содержимого. Более сложный пример: Accept: text / plain; q = 0,5, text / html, text / x-dvi; q = 0,8, text / xc Устно это будет интерпретироваться поскольку &quot;text / html и text / xc являются одинаково предпочтительными типами мультимедиа, но если они не существуют,затем отправьте представление text / x-dvi, а если оно не существует, отправьте текстовое / простое представление &quot;. Диапазоны мультимедиа могут быть переопределены более конкретными диапазонами мультимедиа или конкретными типами мультимедиа. Если к данному тип, наиболее конкретная ссылка имеет приоритет. Например, Accept: text / *, text / plain, text / plain; format = flowed, * / * имеют следующий приоритет: 1. text / plain; format = flowed 2. text / plain 3. text / * 4. * / * Фактор качества типа носителя, связанный с данным типом, определяется путем нахождения диапазона носителей с наивысшим приоритетом, который соответствует типу. Например, Accept: text / *; q = 0,3 , text / html; q = 0,7, text / html; level = 1, text / html; level = 2; q = 0,4, * / *; q = 0,5 приведет к связыванию следующих значений:+ ------------------- + --------------- + | Тип СМИ | Ценность качества | + ------------------- + --------------- + | текст / html; level = 1 | 1 | | текст / html | 0,7 | | текст / простой | 0,3 | | изображение / jpeg | 0,5 | | текст / html; level = 2 | 0,4 | | текст / html; level = 3 | 0,7 | + ------------------- + --------------- + Примечание: агенту пользователя может быть предоставлен набор по умолчанию значения качества для определенных диапазонов носителей. Однако, если пользовательский агент не является закрытой системой, которая не может взаимодействовать с другими агентами рендеринга, этот набор по умолчанию должен настраиваться пользователем.7 | | текст / простой | 0,3 | | изображение / jpeg | 0,5 | | текст / html; level = 2 | 0,4 | | текст / html; level = 3 | 0,7 | + ------------------- + --------------- + Примечание: агенту пользователя может быть предоставлен набор по умолчанию значения качества для определенных диапазонов носителей. Однако, если пользовательский агент не является закрытой системой, которая не может взаимодействовать с другими агентами рендеринга, этот набор по умолчанию должен настраиваться пользователем.7 | | текст / простой | 0,3 | | изображение / jpeg | 0,5 | | текст / html; level = 2 | 0,4 | | текст / html; level = 3 | 0,7 | + ------------------- + --------------- + Примечание: агенту пользователя может быть предоставлен набор по умолчанию значения качества для определенных диапазонов носителей. Однако, если пользовательский агент не является закрытой системой, которая не может взаимодействовать с другими агентами рендеринга, этот набор по умолчанию должен настраиваться пользователем.Если пользовательский агент не является закрытой системой, которая не может взаимодействовать с другими агентами рендеринга, этот набор по умолчанию должен настраиваться пользователем.Если пользовательский агент не является закрытой системой, которая не может взаимодействовать с другими агентами рендеринга, этот набор по умолчанию должен настраиваться пользователем.</target>
        </trans-unit>
        <trans-unit id="e190709d5dcd5319bdd81105d4e02470d1c77a57" translate="yes" xml:space="preserve">
          <source>The &quot;Accept-Charset&quot; header field can be sent by a user agent to
   indicate what charsets are acceptable in textual response content.
   This field allows user agents capable of understanding more
   comprehensive or special-purpose charsets to signal that capability
   to an origin server that is capable of representing information in
   those charsets.

     Accept-Charset = 1#( ( charset / &quot;*&quot; ) [ weight ] )

   Charset names are defined in &lt;a href=&quot;#section-3.1.1.2&quot;&gt;Section 3.1.1.2&lt;/a&gt;.  A user agent MAY
   associate a quality value with each charset to indicate the user's
   relative preference for that charset, as defined in &lt;a href=&quot;#section-5.3.1&quot;&gt;Section 5.3.1&lt;/a&gt;.
   An example is

     Accept-Charset: iso-8859-5, unicode-1-1;q=0.8

   The special value &quot;*&quot;, if present in the Accept-Charset field,
   matches every charset that is not mentioned elsewhere in the
   Accept-Charset field.  If no &quot;*&quot; is present in an Accept-Charset
   field, then any charsets not explicitly mentioned in the field are
   considered &quot;not acceptable&quot; to the client.

   A request without any Accept-Charset header field implies that the
   user agent will accept any charset in response.  Most general-purpose
   user agents do not send Accept-Charset, unless specifically 

   configured to do so, because a detailed list of supported charsets
   makes it easier for a server to identify an individual by virtue of
   the user agent's request characteristics (&lt;a href=&quot;#section-9.7&quot;&gt;Section 9.7&lt;/a&gt;).

   If an Accept-Charset header field is present in a request and none of
   the available representations for the response has a charset that is
   listed as acceptable, the origin server can either honor the header
   field, by sending a 406 (Not Acceptable) response, or disregard the
   header field by treating the resource as if it is not subject to
   content negotiation.</source>
          <target state="translated">Поле заголовка &amp;laquo;Accept-Charset&amp;raquo; может быть отправлено пользовательским агентом, чтобы указать, какие кодировки допустимы в текстовом содержимом ответа. Это поле позволяет пользовательским агентам, способным понимать более полные или специализированные кодировки, сигнализировать об этой возможности исходному серверу, который способен представлять информацию в этих кодировках. Accept-Charset = 1 # ((charset / &quot;*&quot;) [weight]) Имена наборов символов определены в &lt;a href=&quot;#section-3.1.1.2&quot;&gt;разделе 3.1.1.2&lt;/a&gt; . Пользовательский агент МОЖЕТ связать значение качества с каждой кодировкой, чтобы указать относительное предпочтение пользователя для этой кодировки, как определено в &lt;a href=&quot;#section-5.3.1&quot;&gt;Разделе 5.3.1.&lt;/a&gt;, Примером является Accept-Charset: iso-8859-5, unicode-1-1; q = 0.8 Специальное значение &amp;laquo;*&amp;raquo;, если оно присутствует в поле Accept-Charset, соответствует каждой кодировке, которая не упоминается в другом месте в Accept- Поле Charset. Если &quot;*&quot; не присутствует в поле Accept-Charset, тогда любые наборы символов, явно не упомянутые в поле, считаются &quot;неприемлемыми&quot; для клиента. Запрос без поля заголовка Accept-Charset означает, что пользовательский агент примет в ответ любую кодировку. Большинство пользовательских агентов общего назначения не отправляют Accept-Charset, если специально не настроены для этого, потому что подробный список поддерживаемых кодировок упрощает для сервера идентификацию человека на основании характеристик запроса пользовательского агента ( &lt;a href=&quot;#section-9.7&quot;&gt;раздел 9.7&lt;/a&gt;). Если поле заголовка Accept-Charset присутствует в запросе и ни одно из доступных представлений для ответа не имеет кодировки, которая указана как приемлемая, исходный сервер может либо учитывать поле заголовка, отправив ответ 406 (Not Acceptable), или игнорировать поле заголовка, рассматривая ресурс так, как будто он не является предметом согласования содержимого.</target>
        </trans-unit>
        <trans-unit id="94c1a4ee49201e6addf548dc16982d985feb45ac" translate="yes" xml:space="preserve">
          <source>The &quot;Accept-Encoding&quot; header field can be used by user agents to
   indicate what response content-codings (&lt;a href=&quot;#section-3.1.2.1&quot;&gt;Section 3.1.2.1&lt;/a&gt;) are
   acceptable in the response.  An &quot;identity&quot; token is used as a synonym
   for &quot;no encoding&quot; in order to communicate when no encoding is
   preferred.

     Accept-Encoding  = #( codings [ weight ] )
     codings          = content-coding / &quot;identity&quot; / &quot;*&quot;

   Each codings value MAY be given an associated quality value
   representing the preference for that encoding, as defined in
   &lt;a href=&quot;#section-5.3.1&quot;&gt;Section 5.3.1&lt;/a&gt;.  The asterisk &quot;*&quot; symbol in an Accept-Encoding field
   matches any available content-coding not explicitly listed in the
   header field.

   For example,

     Accept-Encoding: compress, gzip
     Accept-Encoding:
     Accept-Encoding: *
     Accept-Encoding: compress;q=0.5, gzip;q=1.0
     Accept-Encoding: gzip;q=1.0, identity; q=0.5, *;q=0

   A request without an Accept-Encoding header field implies that the
   user agent has no preferences regarding content-codings.  Although
   this allows the server to use any content-coding in a response, it
   does not imply that the user agent will be able to correctly process
   all encodings.

   A server tests whether a content-coding for a given representation is
   acceptable using these rules:

   1.  If no Accept-Encoding field is in the request, any content-coding
       is considered acceptable by the user agent. 

   2.  If the representation has no content-coding, then it is
       acceptable by default unless specifically excluded by the
       Accept-Encoding field stating either &quot;identity;q=0&quot; or &quot;*;q=0&quot;
       without a more specific entry for &quot;identity&quot;.

   3.  If the representation's content-coding is one of the
       content-codings listed in the Accept-Encoding field, then it is
       acceptable unless it is accompanied by a qvalue of 0.  (As
       defined in &lt;a href=&quot;#section-5.3.1&quot;&gt;Section 5.3.1&lt;/a&gt;, a qvalue of 0 means &quot;not acceptable&quot;.)

   4.  If multiple content-codings are acceptable, then the acceptable
       content-coding with the highest non-zero qvalue is preferred.

   An Accept-Encoding header field with a combined field-value that is
   empty implies that the user agent does not want any content-coding in
   response.  If an Accept-Encoding header field is present in a request
   and none of the available representations for the response have a
   content-coding that is listed as acceptable, the origin server SHOULD
   send a response without any content-coding.

      Note: Most HTTP/1.0 applications do not recognize or obey qvalues
      associated with content-codings.  This means that qvalues might
      not work and are not permitted with x-gzip or x-compress.</source>
          <target state="translated">Поле заголовка &amp;laquo;Accept-Encoding&amp;raquo; может использоваться пользовательскими агентами, чтобы указать, какие кодировки содержимого ответа ( &lt;a href=&quot;#section-3.1.2.1&quot;&gt;раздел 3.1.2.1&lt;/a&gt; ) приемлемы в ответе. Маркер &amp;laquo;идентичности&amp;raquo; используется в качестве синонима &amp;laquo;без кодирования&amp;raquo; для связи, когда кодирование не является предпочтительным. Accept-Encoding = # (codings [weight]) codings = content-coding / &quot;identity&quot; / &quot;*&quot; Каждому значению codings МОЖЕТ быть присвоено связанное значение качества, представляющее предпочтение для этого кодирования, как определено в &lt;a href=&quot;#section-5.3.1&quot;&gt;Разделе 5.3.1.&lt;/a&gt;, Символ звездочки &amp;laquo;*&amp;raquo; в поле Accept-Encoding соответствует любому доступному кодированию содержимого, не указанному явно в поле заголовка. Например, Accept-Encoding: compress, gzip Accept-Encoding: Accept-Encoding: * Accept-Encoding: compress; q = 0.5, gzip; q = 1.0 Accept-Encoding: gzip; q = 1.0, identity; q = 0,5, *; q = 0 Запрос без поля заголовка Accept-Encoding означает, что пользовательский агент не имеет предпочтений в отношении кодирования содержимого. Хотя это позволяет серверу использовать любое кодирование содержимого в ответе, это не означает, что пользовательский агент сможет правильно обрабатывать все кодировки. Сервер проверяет, приемлемо ли кодирование содержимого для данного представления, используя следующие правила: 1. Если в запросе нет поля Accept-Encoding,любое кодирование содержимого считается приемлемым для пользовательского агента. 2. Если представление не имеет кодирования содержимого, то оно приемлемо по умолчанию, если специально не исключено полем Accept-Encoding с указанием &amp;laquo;identity; q = 0&amp;raquo; или &amp;laquo;*; q = 0&amp;raquo; без более конкретной записи для &amp;laquo; идентичность&amp;raquo;. 3. Если кодирование содержимого представления является одним из кодировок содержимого, перечисленных в поле Accept-Encoding, то оно приемлемо, если оно не сопровождается значением qvalue, равным 0. (Как определено вбез более конкретной записи для &amp;laquo;идентичности&amp;raquo;. 3. Если кодирование содержимого представления является одним из кодировок содержимого, перечисленных в поле Accept-Encoding, то оно приемлемо, если оно не сопровождается значением qvalue, равным 0. (Как определено вбез более конкретной записи для &amp;laquo;идентичности&amp;raquo;. 3. Если кодирование содержимого представления является одним из кодировок содержимого, перечисленных в поле Accept-Encoding, то оно приемлемо, если оно не сопровождается значением qvalue, равным 0. (Как определено в&lt;a href=&quot;#section-5.3.1&quot;&gt;В разделе 5.3.1&lt;/a&gt; qvalue, равное 0, означает &amp;laquo;неприемлемо&amp;raquo;.) 4. Если допустимо несколько кодировок содержимого, то предпочтительным является приемлемое кодирование содержимого с наивысшим ненулевым значением q. Поле заголовка Accept-Encoding с пустым комбинированным значением поля означает, что пользовательский агент не хочет никакого кодирования содержимого в ответ. Если поле заголовка Accept-Encoding присутствует в запросе и ни одно из доступных представлений для ответа не имеет кодирования содержимого, которое указано как приемлемое, исходный сервер ДОЛЖЕН отправить ответ без какого-либо кодирования содержимого. Примечание. Большинство приложений HTTP / 1.0 не распознают и не подчиняются значениям qvalue, связанным с кодированием содержимого. Это означает, что значения qvalues ​​могут не работать и недопустимы с x-gzip или x-compress.</target>
        </trans-unit>
        <trans-unit id="e583c40d3f3281ace1211bd3a8c4c5127953cb55" translate="yes" xml:space="preserve">
          <source>The &quot;Accept-Language&quot; header field can be used by user agents to
   indicate the set of natural languages that are preferred in the
   response.  Language tags are defined in &lt;a href=&quot;#section-3.1.3.1&quot;&gt;Section 3.1.3.1&lt;/a&gt;.

     Accept-Language = 1#( language-range [ weight ] )
     language-range  =
               &amp;lt;language-range, see &lt;a href=&quot;https://tools.ietf.org/html/rfc4647#section-2.1&quot;&gt;[RFC4647], Section&amp;nbsp;2.1&lt;/a&gt;&amp;gt;

   Each language-range can be given an associated quality value
   representing an estimate of the user's preference for the languages
   specified by that range, as defined in &lt;a href=&quot;#section-5.3.1&quot;&gt;Section 5.3.1&lt;/a&gt;.  For example,

     Accept-Language: da, en-gb;q=0.8, en;q=0.7

   would mean: &quot;I prefer Danish, but will accept British English and
   other types of English&quot;.

   A request without any Accept-Language header field implies that the
   user agent will accept any language in response.  If the header field
   is present in a request and none of the available representations for
   the response have a matching language tag, the origin server can
   either disregard the header field by treating the response as if it 

   is not subject to content negotiation or honor the header field by
   sending a 406 (Not Acceptable) response.  However, the latter is not
   encouraged, as doing so can prevent users from accessing content that
   they might be able to use (with translation software, for example).

   Note that some recipients treat the order in which language tags are
   listed as an indication of descending priority, particularly for tags
   that are assigned equal quality values (no value is the same as q=1).
   However, this behavior cannot be relied upon.  For consistency and to
   maximize interoperability, many user agents assign each language tag
   a unique quality value while also listing them in order of decreasing
   quality.  Additional discussion of language priority lists can be
   found in &lt;a href=&quot;https://tools.ietf.org/html/rfc4647#section-2.3&quot;&gt;Section&amp;nbsp;2.3 of [RFC4647]&lt;/a&gt;.

   For matching, &lt;a href=&quot;https://tools.ietf.org/html/rfc4647#section-3&quot;&gt;Section&amp;nbsp;3 of [RFC4647]&lt;/a&gt; defines several matching
   schemes.  Implementations can offer the most appropriate matching
   scheme for their requirements.  The &quot;Basic Filtering&quot; scheme
   (&lt;a href=&quot;https://tools.ietf.org/html/rfc4647#section-3.3.1&quot;&gt;[RFC4647], Section&amp;nbsp;3.3.1&lt;/a&gt;) is identical to the matching scheme that
   was previously defined for HTTP in &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-14.4&quot;&gt;Section&amp;nbsp;14.4 of [RFC2616]&lt;/a&gt;.

   It might be contrary to the privacy expectations of the user to send
   an Accept-Language header field with the complete linguistic
   preferences of the user in every request (&lt;a href=&quot;#section-9.7&quot;&gt;Section 9.7&lt;/a&gt;).

   Since intelligibility is highly dependent on the individual user,
   user agents need to allow user control over the linguistic preference
   (either through configuration of the user agent itself or by
   defaulting to a user controllable system setting).  A user agent that
   does not provide such control to the user MUST NOT send an
   Accept-Language header field.

      Note: User agents ought to provide guidance to users when setting
      a preference, since users are rarely familiar with the details of
      language matching as described above.  For example, users might
      assume that on selecting &quot;en-gb&quot;, they will be served any kind of
      English document if British English is not available.  A user
      agent might suggest, in such a case, to add &quot;en&quot; to the list for
      better matching behavior.</source>
          <target state="translated">Поле заголовка &amp;laquo;Accept-Language&amp;raquo; может использоваться пользовательскими агентами для указания набора естественных языков, которые предпочтительны в ответе. Языковые теги определены в &lt;a href=&quot;#section-3.1.3.1&quot;&gt;разделе 3.1.3.1&lt;/a&gt; . Accept-Language = 1 # (language-range [weight]) language-range = &amp;lt;language-range, см. &lt;a href=&quot;https://tools.ietf.org/html/rfc4647#section-2.1&quot;&gt;[RFC4647], раздел 2.1&lt;/a&gt; &amp;gt; Каждому языковому диапазону может быть присвоено соответствующее значение качества, представляющее оценку предпочтений пользователя для языки, указанные в этом диапазоне, как определено в &lt;a href=&quot;#section-5.3.1&quot;&gt;Разделе 5.3.1&lt;/a&gt;, Например, Accept-Language: da, en-gb; q = 0,8, en; q = 0,7 будет означать: &amp;laquo;Я предпочитаю датский, но буду принимать британский английский и другие типы английского&amp;raquo;. Запрос без поля заголовка Accept-Language означает, что пользовательский агент примет ответ на любом языке. Если поле заголовка присутствует в запросе и ни одно из доступных представлений для ответа не имеет соответствующего языкового тега, исходный сервер может либо игнорировать поле заголовка, обрабатывая ответ, как если бы он не подлежал согласованию содержимого, либо соблюдать заголовок. поле, отправив ответ 406 (неприемлемо). Однако последнее не рекомендуется, поскольку это может помешать пользователям получить доступ к контенту, который они могут использовать (например, с помощью программного обеспечения для перевода).Обратите внимание, что некоторые получатели рассматривают порядок, в котором перечислены языковые теги, как указатель нисходящего приоритета, особенно для тегов, которым присвоены одинаковые значения качества (нет значения, аналогичного q = 1). Однако на такое поведение нельзя положиться. Для единообразия и максимальной совместимости многие пользовательские агенты присваивают каждому языковому тегу уникальное значение качества, а также перечисляют их в порядке уменьшения качества. Дополнительное обсуждение списков приоритетов языков можно найти вмногие пользовательские агенты присваивают каждому языковому тегу уникальное значение качества, а также перечисляют их в порядке убывания качества. Дополнительное обсуждение списков приоритетов языков можно найти вмногие пользовательские агенты присваивают каждому языковому тегу уникальное значение качества, а также перечисляют их в порядке убывания качества. Дополнительное обсуждение списков приоритетов языков можно найти в&lt;a href=&quot;https://tools.ietf.org/html/rfc4647#section-2.3&quot;&gt;Раздел 2.3 [RFC4647]&lt;/a&gt; . Для сопоставления в &lt;a href=&quot;https://tools.ietf.org/html/rfc4647#section-3&quot;&gt;разделе 3 [RFC4647]&lt;/a&gt; определено несколько схем сопоставления. Реализации могут предложить наиболее подходящую схему соответствия их требованиям. Схема &amp;laquo;Базовая фильтрация&amp;raquo; ( &lt;a href=&quot;https://tools.ietf.org/html/rfc4647#section-3.3.1&quot;&gt;[RFC4647], раздел 3.3.1&lt;/a&gt; ) идентична схеме сопоставления, которая была ранее определена для HTTP в &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-14.4&quot;&gt;разделе 14.4 [RFC2616]&lt;/a&gt; . Отправка поля заголовка Accept-Language с полными лингвистическими предпочтениями пользователя в каждом запросе может противоречить ожиданиям пользователя в отношении конфиденциальности ( &lt;a href=&quot;#section-9.7&quot;&gt;раздел 9.7.&lt;/a&gt;). Поскольку разборчивость в значительной степени зависит от отдельного пользователя, пользовательские агенты должны позволять пользователю контролировать лингвистические предпочтения (либо посредством конфигурации самого пользовательского агента, либо путем установки по умолчанию системных настроек, контролируемых пользователем). Пользовательский агент, который не предоставляет такое управление пользователю, НЕ ДОЛЖЕН отправлять поле заголовка Accept-Language. Примечание. Агенты пользователя должны предоставлять пользователям указания при настройке предпочтений, поскольку пользователи редко знакомы с деталями сопоставления языков, как описано выше. Например, пользователи могут предположить, что при выборе &amp;laquo;en-gb&amp;raquo; им будет предоставлен любой документ на английском языке, если британский английский недоступен. В таком случае пользовательский агент может предложить добавить в список &amp;laquo;en&amp;raquo; для лучшего соответствия.</target>
        </trans-unit>
        <trans-unit id="660e50878abbf252e2213e4a43a8c15147d72e0c" translate="yes" xml:space="preserve">
          <source>The &quot;Accept-Ranges&quot; header field allows a server to indicate that it
   supports range requests for the target resource.

     Accept-Ranges     = acceptable-ranges
     acceptable-ranges = 1#range-unit / &quot;none&quot;

   An origin server that supports byte-range requests for a given target
   resource MAY send

     Accept-Ranges: bytes

   to indicate what range units are supported.  A client MAY generate
   range requests without having received this header field for the
   resource involved.  Range units are defined in &lt;a href=&quot;#section-2&quot;&gt;Section 2&lt;/a&gt;.

   A server that does not support any kind of range request for the
   target resource MAY send

     Accept-Ranges: none

   to advise the client not to attempt a range request.</source>
          <target state="translated">Поле заголовка &amp;laquo;Accept-Ranges&amp;raquo; позволяет серверу указать, что он поддерживает запросы диапазона для целевого ресурса. Accept-Ranges = Допустимые диапазоны Допустимые диапазоны = 1 # range-unit / &quot;none&quot; Исходный сервер, который поддерживает запросы байтового диапазона для заданного целевого ресурса, МОЖЕТ отправлять Accept-Ranges: bytes, чтобы указать, какие единицы диапазона поддерживаются. Клиент МОЖЕТ генерировать запросы диапазона, не получив это поле заголовка для задействованного ресурса. Единицы измерения определены в &lt;a href=&quot;#section-2&quot;&gt;Разделе 2&lt;/a&gt; . Сервер, который не поддерживает какой-либо запрос диапазона для целевого ресурса, МОЖЕТ отправить Accept-Ranges: none, чтобы посоветовать клиенту не пытаться выполнить запрос диапазона.</target>
        </trans-unit>
        <trans-unit id="07e147c0306bf45017b2c661d092871c17cc475c" translate="yes" xml:space="preserve">
          <source>The &quot;Age&quot; header field conveys the sender's estimate of the amount of
   time since the response was generated or successfully validated at
   the origin server.  Age values are calculated as specified in
   &lt;a href=&quot;#section-4.2.3&quot;&gt;Section 4.2.3&lt;/a&gt;.

     Age = delta-seconds

   The Age field-value is a non-negative integer, representing time in
   seconds (see &lt;a href=&quot;#section-1.2.1&quot;&gt;Section 1.2.1&lt;/a&gt;).

   The presence of an Age header field implies that the response was not
   generated or validated by the origin server for this request.
   However, lack of an Age header field does not imply the origin was
   contacted, since the response might have been received from an
   HTTP/1.0 cache that does not implement Age.</source>
          <target state="translated">Поле заголовка &amp;laquo;Возраст&amp;raquo; передает оценку отправителя количества времени, прошедшего с момента создания или успешной проверки ответа на исходном сервере. Значения возраста рассчитываются, как указано в &lt;a href=&quot;#section-4.2.3&quot;&gt;разделе 4.2.3&lt;/a&gt; . Возраст = дельта-секунды Значение поля Возраст - неотрицательное целое число, представляющее время в секундах (см. &lt;a href=&quot;#section-1.2.1&quot;&gt;Раздел 1.2.1&lt;/a&gt; ). Наличие поля заголовка Age подразумевает, что ответ не был сгенерирован или проверен исходным сервером для этого запроса. Однако отсутствие поля заголовка Age не означает, что с источником был установлен контакт, поскольку ответ мог быть получен из кеша HTTP / 1.0, который не реализует Age.</target>
        </trans-unit>
        <trans-unit id="1338498c252679bf6adfadb0f7074e7b148e3793" translate="yes" xml:space="preserve">
          <source>The &quot;Allow&quot; header field lists the set of methods advertised as
   supported by the target resource.  The purpose of this field is
   strictly to inform the recipient of valid request methods associated
   with the resource.

     Allow = #method

   Example of use:

     Allow: GET, HEAD, PUT

   The actual set of allowed methods is defined by the origin server at
   the time of each request.  An origin server MUST generate an Allow
   field in a 405 (Method Not Allowed) response and MAY do so in any
   other response.  An empty Allow field value indicates that the
   resource allows no methods, which might occur in a 405 response if
   the resource has been temporarily disabled by configuration.

   A proxy MUST NOT modify the Allow header field -- it does not need to
   understand all of the indicated methods in order to handle them
   according to the generic message handling rules.</source>
          <target state="translated">В поле заголовка &quot;Разрешить&quot; перечислен набор методов,рекламируемых как поддерживаемые целевым ресурсом.Назначение данного поля-строгое информирование получателя о допустимых методах запроса,связанных с ресурсом.Allow=#метод Пример использования:Разрешить:GET,HEAD,PUT Реальный набор разрешенных методов определяется сервером отправителя в момент каждого запроса.Сервер отправителя ДОЛЖЕН генерировать поле Allow в ответе 405 (Метод не разрешен)и MAY делать это в любом другом ответе.Пустое значение поля Allow указывает на то,что ресурс не разрешает никаких методов,что может произойти в ответе 405,если ресурс был временно отключен конфигурацией.Прокси-сервер НЕ ДОЛЖЕН изменять поле Allow заголовка --ему не нужно понимать все указанные методы для того,чтобы обрабатывать их в соответствии с общими правилами обработки сообщений.</target>
        </trans-unit>
        <trans-unit id="833bc28aae892154d2187dc74fadd75ecc7a7e54" translate="yes" xml:space="preserve">
          <source>The &quot;Authorization&quot; header field allows a user agent to authenticate
   itself with an origin server -- usually, but not necessarily, after
   receiving a 401 (Unauthorized) response.  Its value consists of
   credentials containing the authentication information of the user
   agent for the realm of the resource being requested.

     Authorization = credentials

   If a request is authenticated and a realm specified, the same
   credentials are presumed to be valid for all other requests within
   this realm (assuming that the authentication scheme itself does not
   require otherwise, such as credentials that vary according to a
   challenge value or using synchronized clocks).

   A proxy forwarding a request MUST NOT modify any Authorization fields
   in that request.  See &lt;a href=&quot;https://tools.ietf.org/html/rfc7234#section-3.2&quot;&gt;Section&amp;nbsp;3.2 of [RFC7234]&lt;/a&gt; for details of and
   requirements pertaining to handling of the Authorization field by
   HTTP caches.</source>
          <target state="translated">Поле заголовка &amp;laquo;Авторизация&amp;raquo; позволяет пользовательскому агенту аутентифицироваться на исходном сервере - обычно, но не обязательно, после получения ответа 401 (неавторизованный). Его значение состоит из учетных данных, содержащих информацию аутентификации пользовательского агента для области запрашиваемого ресурса. Авторизация = учетные данные Если запрос аутентифицирован и указана область, предполагается, что одни и те же учетные данные действительны для всех других запросов в этой области (при условии, что сама схема аутентификации не требует иного, например учетные данные, которые меняются в зависимости от значения запроса. или используя синхронизированные часы). Прокси-сервер, пересылающий запрос, НЕ ДОЛЖЕН изменять какие-либо поля авторизации в этом запросе. См. &lt;a href=&quot;https://tools.ietf.org/html/rfc7234#section-3.2&quot;&gt;Раздел 3.2 [RFC7234]&lt;/a&gt; для получения подробной информации и требований, относящихся к обработке поля авторизации кешами HTTP.</target>
        </trans-unit>
        <trans-unit id="7168d04cbf63301e6705540ed2ab42ae32147600" translate="yes" xml:space="preserve">
          <source>The &quot;Basic&quot; HTTP authentication scheme is defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc7617&quot;&gt;RFC 7617&lt;/a&gt;, which transmits credentials as user ID/password pairs, encoded using base64.</source>
          <target state="translated">&amp;laquo;Базовая&amp;raquo; схема HTTP-аутентификации определена в &lt;a href=&quot;https://tools.ietf.org/html/rfc7617&quot;&gt;RFC 7617&lt;/a&gt; , который передает учетные данные в виде пар идентификатора пользователя и пароля, закодированных с использованием base64.</target>
        </trans-unit>
        <trans-unit id="e6a4b6da05626e019facf6e5f03b1b90399b48bf" translate="yes" xml:space="preserve">
          <source>The &quot;Cache-Control&quot; header field is used to specify directives for
   caches along the request/response chain.  Such cache directives are
   unidirectional in that the presence of a directive in a request does
   not imply that the same directive is to be given in the response.

   A cache MUST obey the requirements of the Cache-Control directives
   defined in this section.  See &lt;a href=&quot;#section-5.2.3&quot;&gt;Section 5.2.3&lt;/a&gt; for information about how
   Cache-Control directives defined elsewhere are handled.

      Note: Some HTTP/1.0 caches might not implement Cache-Control.

   A proxy, whether or not it implements a cache, MUST pass cache
   directives through in forwarded messages, regardless of their
   significance to that application, since the directives might be
   applicable to all recipients along the request/response chain.  It is
   not possible to target a directive to a specific cache.

   Cache directives are identified by a token, to be compared
   case-insensitively, and have an optional argument, that can use both
   token and quoted-string syntax.  For the directives defined below
   that define arguments, recipients ought to accept both forms, even if
   one is documented to be preferred.  For any directive not defined by
   this specification, a recipient MUST accept both forms. 

     Cache-Control   = 1#cache-directive

     cache-directive = token [ &quot;=&quot; ( token / quoted-string ) ]

   For the cache directives defined below, no argument is defined (nor
   allowed) unless stated otherwise.</source>
          <target state="translated">Поле заголовка &amp;laquo;Cache-Control&amp;raquo; используется для указания директив для кешей в цепочке запроса / ответа. Такие директивы кэша являются однонаправленными в том смысле, что наличие директивы в запросе не означает, что та же самая директива должна быть указана в ответе. Кэш ДОЛЖЕН подчиняться требованиям директив Cache-Control, определенных в этом разделе. См. &lt;a href=&quot;#section-5.2.3&quot;&gt;Раздел 5.2.3.&lt;/a&gt;для получения информации о том, как обрабатываются директивы Cache-Control, определенные в другом месте. Примечание. Некоторые кэши HTTP / 1.0 могут не реализовывать Cache-Control. Прокси-сервер, независимо от того, реализует он кэш или нет, ДОЛЖЕН передавать директивы кеша в пересылаемых сообщениях, независимо от их значения для этого приложения, поскольку директивы могут быть применимы ко всем получателям в цепочке запроса / ответа. Невозможно нацелить директиву на конкретный кеш. Директивы кэша идентифицируются токеном, сравниваются без учета регистра и имеют необязательный аргумент, который может использовать синтаксис как токена, так и строки в кавычках. Для определенных ниже директив, которые определяют аргументы, получатели должны принять обе формы, даже если одна из них задокументирована как предпочтительная. Для любой директивы, не определенной в этой спецификации,получатель ДОЛЖЕН принять обе формы. Cache-Control = 1 # директива кеширования cache-directive = token [&quot;=&quot; (токен / строка в кавычках)] Для директив кеша, определенных ниже, аргумент не определен (и не разрешен), если не указано иное.</target>
        </trans-unit>
        <trans-unit id="ead8e33ac22c36beaaccc520e5c8f0383500fa6b" translate="yes" xml:space="preserve">
          <source>The &quot;Connection&quot; header field allows the sender to indicate desired
   control options for the current connection.  In order to avoid
   confusing downstream recipients, a proxy or gateway MUST remove or
   replace any received connection options before forwarding the
   message.

   When a header field aside from Connection is used to supply control
   information for or about the current connection, the sender MUST list
   the corresponding field-name within the Connection header field.  A
   proxy or gateway MUST parse a received Connection header field before
   a message is forwarded and, for each connection-option in this field,
   remove any header field(s) from the message with the same name as the
   connection-option, and then remove the Connection header field itself
   (or replace it with the intermediary's own connection options for the
   forwarded message).

   Hence, the Connection header field provides a declarative way of
   distinguishing header fields that are only intended for the immediate
   recipient (&quot;hop-by-hop&quot;) from those fields that are intended for all
   recipients on the chain (&quot;end-to-end&quot;), enabling the message to be
   self-descriptive and allowing future connection-specific extensions
   to be deployed without fear that they will be blindly forwarded by
   older intermediaries.

   The Connection header field's value has the following grammar:

     Connection        = 1#connection-option
     connection-option = token

   Connection options are case-insensitive.

   A sender MUST NOT send a connection option corresponding to a header
   field that is intended for all recipients of the payload.  For
   example, Cache-Control is never appropriate as a connection option
   (&lt;a href=&quot;https://tools.ietf.org/html/rfc7234#section-5.2&quot;&gt;Section&amp;nbsp;5.2 of [RFC7234]&lt;/a&gt;). 

   The connection options do not always correspond to a header field
   present in the message, since a connection-specific header field
   might not be needed if there are no parameters associated with a
   connection option.  In contrast, a connection-specific header field
   that is received without a corresponding connection option usually
   indicates that the field has been improperly forwarded by an
   intermediary and ought to be ignored by the recipient.

   When defining new connection options, specification authors ought to
   survey existing header field names and ensure that the new connection
   option does not share the same name as an already deployed header
   field.  Defining a new connection option essentially reserves that
   potential field-name for carrying additional information related to
   the connection option, since it would be unwise for senders to use
   that field-name for anything else.

   The &quot;close&quot; connection option is defined for a sender to signal that
   this connection will be closed after completion of the response.  For
   example,

     Connection: close

   in either the request or the response header fields indicates that
   the sender is going to close the connection after the current
   request/response is complete (&lt;a href=&quot;#section-6.6&quot;&gt;Section 6.6&lt;/a&gt;).

   A client that does not support persistent connections MUST send the
   &quot;close&quot; connection option in every request message.

   A server that does not support persistent connections MUST send the
   &quot;close&quot; connection option in every response message that does not
   have a 1xx (Informational) status code.</source>
          <target state="translated">Поле заголовка &amp;laquo;Соединение&amp;raquo; позволяет отправителю указать желаемые параметры управления для текущего соединения. Во избежание путаницы в нисходящих получателях прокси-сервер или шлюз ДОЛЖНЫ удалить или заменить все полученные параметры соединения перед пересылкой сообщения. Когда поле заголовка помимо Connection используется для предоставления управляющей информации для текущего соединения или о нем, отправитель ДОЛЖЕН указать соответствующее имя поля в поле заголовка Connection. Прокси-сервер или шлюз ДОЛЖНЫ проанализировать полученное поле заголовка соединения перед пересылкой сообщения и для каждого параметра подключения в этом поле удалить все поля заголовка из сообщения с тем же именем, что и параметр подключения, а затем удалить само поле заголовка соединения (или замените его на посредника)собственные параметры подключения для пересылаемого сообщения). Следовательно, поле заголовка соединения обеспечивает декларативный способ отличить поля заголовка, которые предназначены только для непосредственного получателя (&amp;laquo;шаг за шагом&amp;raquo;), от тех полей, которые предназначены для всех получателей в цепочке (&amp;laquo;сквозной &quot;), позволяя сообщению быть информативным и позволяя развертывать будущие расширения для конкретных соединений, не опасаясь, что они будут вслепую перенаправлены старыми посредниками. Значение поля заголовка подключения имеет следующую грамматику: Connection = 1 # connection-option connection-option = token Параметры подключения не чувствительны к регистру. Отправитель НЕ ДОЛЖЕН отправлять параметр подключения, соответствующий полю заголовка, который предназначен для всех получателей полезной нагрузки.Например, Cache-Control никогда не подходит в качестве варианта подключения (&lt;a href=&quot;https://tools.ietf.org/html/rfc7234#section-5.2&quot;&gt;Раздел 5.2 [RFC7234]&lt;/a&gt;). Параметры подключения не всегда соответствуют полю заголовка, присутствующему в сообщении, поскольку поле заголовка для конкретного подключения может не понадобиться, если с параметром подключения не связаны никакие параметры. Напротив, зависящее от соединения поле заголовка, полученное без соответствующей опции соединения, обычно указывает на то, что поле было неправильно переадресовано посредником и должно быть проигнорировано получателем. При определении новых параметров подключения авторы спецификации должны изучить существующие имена полей заголовка и убедиться, что имя нового варианта подключения не совпадает с именем уже развернутого поля заголовка. Определение новой опции подключения по существу резервирует это потенциальное имя поля для переноса дополнительной информации, связанной с опцией подключения,так как для отправителей было бы неразумно использовать это имя поля для чего-либо еще. Опция &amp;laquo;закрыть&amp;raquo; соединение определена для отправителя, чтобы сообщить, что это соединение будет закрыто после завершения ответа. Например, Connection: close в полях заголовка запроса или ответа указывает, что отправитель собирается закрыть соединение после завершения текущего запроса / ответа (close в полях заголовка запроса или ответа указывает, что отправитель собирается закрыть соединение после завершения текущего запроса / ответа (close в полях заголовка запроса или ответа указывает, что отправитель собирается закрыть соединение после завершения текущего запроса / ответа (&lt;a href=&quot;#section-6.6&quot;&gt;Раздел 6.6&lt;/a&gt; ). Клиент, который не поддерживает постоянные соединения, ДОЛЖЕН посылать опцию &amp;laquo;закрыть&amp;raquo; соединение в каждом сообщении запроса. Сервер, который не поддерживает постоянные соединения, ДОЛЖЕН посылать опцию &amp;laquo;закрыть&amp;raquo; соединение в каждом ответном сообщении, не имеющем кода состояния 1xx (информационный).</target>
        </trans-unit>
        <trans-unit id="f005d7daab665deae0b91cf8d9396978496c7fec" translate="yes" xml:space="preserve">
          <source>The &quot;Content-Encoding&quot; header field indicates what content codings
   have been applied to the representation, beyond those inherent in the
   media type, and thus what decoding mechanisms have to be applied in
   order to obtain data in the media type referenced by the Content-Type
   header field.  Content-Encoding is primarily used to allow a
   representation's data to be compressed without losing the identity of
   its underlying media type.

     Content-Encoding = 1#content-coding

   An example of its use is

     Content-Encoding: gzip

   If one or more encodings have been applied to a representation, the
   sender that applied the encodings MUST generate a Content-Encoding
   header field that lists the content codings in the order in which
   they were applied.  Additional information about the encoding
   parameters can be provided by other header fields not defined by this
   specification.

   Unlike Transfer-Encoding (&lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.3.1&quot;&gt;Section&amp;nbsp;3.3.1 of [RFC7230]&lt;/a&gt;), the codings
   listed in Content-Encoding are a characteristic of the
   representation; the representation is defined in terms of the coded
   form, and all other metadata about the representation is about the
   coded form unless otherwise noted in the metadata definition.
   Typically, the representation is only decoded just prior to rendering
   or analogous usage.

   If the media type includes an inherent encoding, such as a data
   format that is always compressed, then that encoding would not be
   restated in Content-Encoding even if it happens to be the same
   algorithm as one of the content codings.  Such a content coding would
   only be listed if, for some bizarre reason, it is applied a second
   time to form the representation.  Likewise, an origin server might
   choose to publish the same data as multiple representations that
   differ only in whether the coding is defined as part of Content-Type 

   or Content-Encoding, since some user agents will behave differently
   in their handling of each response (e.g., open a &quot;Save as ...&quot; dialog
   instead of automatic decompression and rendering of content).

   An origin server MAY respond with a status code of 415 (Unsupported
   Media Type) if a representation in the request message has a content
   coding that is not acceptable.</source>
          <target state="translated">Поле заголовка &amp;laquo;Content-Encoding&amp;raquo; указывает, какие кодировки контента были применены к представлению, помимо тех, которые присущи типу мультимедиа, и, таким образом, какие механизмы декодирования должны быть применены для получения данных в типе мультимедиа, на который ссылается Content- Введите поле заголовка. Content-Encoding в основном используется для сжатия данных представления без потери идентичности базового типа мультимедиа. Content-Encoding = 1 # content-coding Примером его использования является Content-Encoding: gzip. Если к представлению были применены одна или несколько кодировок, отправитель, применивший кодировки, ДОЛЖЕН создать поле заголовка Content-Encoding, в котором перечислено содержимое. кодировки в том порядке, в котором они были применены.Дополнительная информация о параметрах кодирования может быть предоставлена ​​другими полями заголовка, не определенными в данной спецификации. В отличие от Transfer-Encoding (&lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.3.1&quot;&gt;Раздел 3.3.1 [RFC7230]&lt;/a&gt;), кодировки, перечисленные в Content-Encoding, являются характеристикой представления; представление определяется в терминах закодированной формы, а все другие метаданные о представлении относятся к закодированной форме, если иное не указано в определении метаданных. Обычно представление декодируется только непосредственно перед визуализацией или аналогичным использованием. Если тип мультимедиа включает внутреннюю кодировку, такую ​​как формат данных, который всегда сжимается, то эта кодировка не будет повторно преобразована в Content-Encoding, даже если это будет тот же алгоритм, что и одна из кодировок содержимого. Такое кодирование содержимого будет указано только в том случае, если по какой-то причудливой причине оно будет применено второй раз для формирования представления. Точно так же,исходный сервер может выбрать публикацию одних и тех же данных в виде нескольких представлений, которые отличаются только тем, определено ли кодирование как часть Content-Type или Content-Encoding, поскольку некоторые пользовательские агенты будут вести себя по-разному при обработке каждого ответа (например, открывать диалоговое окно &amp;laquo;Сохранить как ...&amp;raquo; вместо автоматической распаковки и рендеринга содержимого). Сервер-источник МОЖЕТ ответить кодом состояния 415 (неподдерживаемый тип мультимедиа), если представление в сообщении запроса имеет кодирование содержимого, которое неприемлемо.Сервер-источник МОЖЕТ ответить кодом состояния 415 (неподдерживаемый тип мультимедиа), если представление в сообщении запроса имеет кодирование содержимого, которое неприемлемо.Сервер-источник МОЖЕТ ответить кодом состояния 415 (неподдерживаемый тип мультимедиа), если представление в сообщении запроса имеет кодирование содержимого, которое неприемлемо.</target>
        </trans-unit>
        <trans-unit id="164d16f9f8916d272734f22f4029358169a82681" translate="yes" xml:space="preserve">
          <source>The &quot;Content-Language&quot; header field describes the natural language(s)
   of the intended audience for the representation.  Note that this
   might not be equivalent to all the languages used within the
   representation.

     Content-Language = 1#language-tag 

   Language tags are defined in &lt;a href=&quot;#section-3.1.3.1&quot;&gt;Section 3.1.3.1&lt;/a&gt;.  The primary purpose of
   Content-Language is to allow a user to identify and differentiate
   representations according to the users' own preferred language.
   Thus, if the content is intended only for a Danish-literate audience,
   the appropriate field is

     Content-Language: da

   If no Content-Language is specified, the default is that the content
   is intended for all language audiences.  This might mean that the
   sender does not consider it to be specific to any natural language,
   or that the sender does not know for which language it is intended.

   Multiple languages MAY be listed for content that is intended for
   multiple audiences.  For example, a rendition of the &quot;Treaty of
   Waitangi&quot;, presented simultaneously in the original Maori and English
   versions, would call for

     Content-Language: mi, en

   However, just because multiple languages are present within a
   representation does not mean that it is intended for multiple
   linguistic audiences.  An example would be a beginner's language
   primer, such as &quot;A First Lesson in Latin&quot;, which is clearly intended
   to be used by an English-literate audience.  In this case, the
   Content-Language would properly only include &quot;en&quot;.

   Content-Language MAY be applied to any media type -- it is not
   limited to textual documents.</source>
          <target state="translated">Поле заголовка Content-Language описывает естественный язык (языки) целевой аудитории для представления. Обратите внимание, что это может быть не эквивалентно всем языкам, используемым в представлении. Content-Language = 1 # language-tag Языковые теги определены в &lt;a href=&quot;#section-3.1.3.1&quot;&gt;разделе 3.1.3.1.&lt;/a&gt;, Основная цель Content-Language - позволить пользователю идентифицировать и различать представления в соответствии с его собственным предпочтительным языком. Таким образом, если контент предназначен только для аудитории, владеющей датским языком, соответствующее поле - Content-Language: da. Если Content-Language не указан, по умолчанию контент предназначен для всех языковых аудиторий. Это может означать, что отправитель не считает его специфичным для какого-либо естественного языка или что отправитель не знает, для какого языка он предназначен. Для контента, предназначенного для разных аудиторий, МОГУТ быть указаны несколько языков. Например, исполнение &amp;laquo;Договора Вайтанги&amp;raquo;, представленное одновременно в оригинальной маори и английской версиях, будет требовать Content-Language: mi,Common crawl ru Однако тот факт, что в представлении присутствует несколько языков, не означает, что оно предназначено для нескольких языковых аудиторий. Примером может служить учебник по языку для начинающих, такой как &amp;laquo;Первый урок латыни&amp;raquo;, который явно предназначен для англоязычной аудитории. В этом случае Content-Language правильно будет включать только &amp;laquo;en&amp;raquo;. Content-Language МОЖЕТ применяться к любому типу мультимедиа - это не ограничивается текстовыми документами.В этом случае Content-Language правильно будет включать только &amp;laquo;en&amp;raquo;. Content-Language МОЖЕТ применяться к любому типу мультимедиа - это не ограничивается текстовыми документами.В этом случае Content-Language правильно будет включать только &amp;laquo;en&amp;raquo;. Content-Language МОЖЕТ применяться к любому типу мультимедиа - это не ограничивается текстовыми документами.</target>
        </trans-unit>
        <trans-unit id="befc0a5526257450f3dfb30b2d0dfe3ea24c1e2b" translate="yes" xml:space="preserve">
          <source>The &quot;Content-Location&quot; header field references a URI that can be used
   as an identifier for a specific resource corresponding to the
   representation in this message's payload.  In other words, if one
   were to perform a GET request on this URI at the time of this
   message's generation, then a 200 (OK) response would contain the same
   representation that is enclosed as payload in this message.

     Content-Location = absolute-URI / partial-URI

   The Content-Location value is not a replacement for the effective
   Request URI (&lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-5.5&quot;&gt;Section&amp;nbsp;5.5 of [RFC7230]&lt;/a&gt;).  It is representation
   metadata.  It has the same syntax and semantics as the header field
   of the same name defined for MIME body parts in &lt;a href=&quot;https://tools.ietf.org/html/rfc2557#section-4&quot;&gt;Section&amp;nbsp;4 of
   [RFC2557]&lt;/a&gt;.  However, its appearance in an HTTP message has some
   special implications for HTTP recipients. 

   If Content-Location is included in a 2xx (Successful) response
   message and its value refers (after conversion to absolute form) to a
   URI that is the same as the effective request URI, then the recipient
   MAY consider the payload to be a current representation of that
   resource at the time indicated by the message origination date.  For
   a GET (&lt;a href=&quot;#section-4.3.1&quot;&gt;Section 4.3.1&lt;/a&gt;) or HEAD (&lt;a href=&quot;#section-4.3.2&quot;&gt;Section 4.3.2&lt;/a&gt;) request, this is the
   same as the default semantics when no Content-Location is provided by
   the server.  For a state-changing request like PUT (&lt;a href=&quot;#section-4.3.4&quot;&gt;Section 4.3.4&lt;/a&gt;) or
   POST (&lt;a href=&quot;#section-4.3.3&quot;&gt;Section 4.3.3&lt;/a&gt;), it implies that the server's response contains
   the new representation of that resource, thereby distinguishing it
   from representations that might only report about the action (e.g.,
   &quot;It worked!&quot;).  This allows authoring applications to update their
   local copies without the need for a subsequent GET request.

   If Content-Location is included in a 2xx (Successful) response
   message and its field-value refers to a URI that differs from the
   effective request URI, then the origin server claims that the URI is
   an identifier for a different resource corresponding to the enclosed
   representation.  Such a claim can only be trusted if both identifiers
   share the same resource owner, which cannot be programmatically
   determined via HTTP.

   o  For a response to a GET or HEAD request, this is an indication
      that the effective request URI refers to a resource that is
      subject to content negotiation and the Content-Location
      field-value is a more specific identifier for the selected
      representation.

   o  For a 201 (Created) response to a state-changing method, a
      Content-Location field-value that is identical to the Location
      field-value indicates that this payload is a current
      representation of the newly created resource.

   o  Otherwise, such a Content-Location indicates that this payload is
      a representation reporting on the requested action's status and
      that the same report is available (for future access with GET) at
      the given URI.  For example, a purchase transaction made via a
      POST request might include a receipt document as the payload of
      the 200 (OK) response; the Content-Location field-value provides
      an identifier for retrieving a copy of that same receipt in the
      future.

   A user agent that sends Content-Location in a request message is
   stating that its value refers to where the user agent originally
   obtained the content of the enclosed representation (prior to any
   modifications made by that user agent).  In other words, the user
   agent is providing a back link to the source of the original
   representation. 

   An origin server that receives a Content-Location field in a request
   message MUST treat the information as transitory request context
   rather than as metadata to be saved verbatim as part of the
   representation.  An origin server MAY use that context to guide in
   processing the request or to save it for other uses, such as within
   source links or versioning metadata.  However, an origin server MUST
   NOT use such context information to alter the request semantics.

   For example, if a client makes a PUT request on a negotiated resource
   and the origin server accepts that PUT (without redirection), then
   the new state of that resource is expected to be consistent with the
   one representation supplied in that PUT; the Content-Location cannot
   be used as a form of reverse content selection identifier to update
   only one of the negotiated representations.  If the user agent had
   wanted the latter semantics, it would have applied the PUT directly
   to the Content-Location URI.</source>
          <target state="translated">Поле заголовка &amp;laquo;Content-Location&amp;raquo; ссылается на URI, который может использоваться в качестве идентификатора для конкретного ресурса, соответствующего представлению в полезной нагрузке этого сообщения. Другими словами, если бы кто-то должен был выполнить запрос GET для этого URI во время генерации этого сообщения, то ответ 200 (OK) будет содержать то же представление, что и полезная нагрузка в этом сообщении. Content-Location = absolute-URI / partial-URI Значение Content-Location не является заменой действующего URI запроса ( &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-5.5&quot;&gt;раздел 5.5 [RFC7230]&lt;/a&gt; ). Это метаданные представления. Он имеет тот же синтаксис и семантику, что и одноименное поле заголовка, определенное для частей тела MIME в &lt;a href=&quot;https://tools.ietf.org/html/rfc2557#section-4&quot;&gt;Разделе 4 [RFC2557].&lt;/a&gt;, Однако его появление в сообщении HTTP имеет некоторые особые последствия для получателей HTTP. Если Content-Location включен в ответное сообщение 2xx (Успешно) и его значение относится (после преобразования в абсолютную форму) к URI, который совпадает с действующим URI запроса, то получатель МОЖЕТ рассматривать полезные данные как текущее представление этого ресурса во время, указанное датой создания сообщения. Для запроса GET ( &lt;a href=&quot;#section-4.3.1&quot;&gt;раздел 4.3.1&lt;/a&gt; ) или HEAD ( &lt;a href=&quot;#section-4.3.2&quot;&gt;раздел 4.3.2&lt;/a&gt; ) это то же самое, что и семантика по умолчанию, когда сервер не предоставляет Content-Location. Для запроса на изменение состояния, такого как PUT ( &lt;a href=&quot;#section-4.3.4&quot;&gt;Раздел 4.3.4&lt;/a&gt; ) или POST ( &lt;a href=&quot;#section-4.3.3&quot;&gt;Раздел 4.3.3)&lt;/a&gt;), это означает, что ответ сервера содержит новое представление этого ресурса, тем самым отличая его от представлений, которые могут сообщать только о действии (например, &amp;laquo;Это сработало!&amp;raquo;). Это позволяет приложениям-разработчикам обновлять свои локальные копии без необходимости в последующем запросе GET. Если Content-Location включен в ответное сообщение 2xx (Successful) и его значение поля относится к URI, который отличается от действующего URI запроса, то исходный сервер утверждает, что URI является идентификатором для другого ресурса, соответствующего вложенному представление. Такому утверждению можно доверять только в том случае, если оба идентификатора совместно используют одного и того же владельца ресурса, что не может быть определено программно через HTTP. o Для ответа на запрос GET или HEAD,это указание на то, что эффективный URI запроса относится к ресурсу, который является предметом согласования содержимого, а значение поля Content-Location является более конкретным идентификатором для выбранного представления. o Для ответа 201 (Created) на метод изменения состояния значение поля Content-Location, которое идентично значению поля Location, указывает, что эта полезная нагрузка является текущим представлением вновь созданного ресурса. o В противном случае такое Content-Location указывает, что эта полезная нагрузка является представлением, сообщающим о состоянии запрошенного действия, и что тот же отчет доступен (для будущего доступа с помощью GET) по данному URI. Например,транзакция покупки, совершенная через запрос POST, может включать в себя квитанцию ​​в качестве полезной нагрузки ответа 200 (OK); значение поля Content-Location предоставляет идентификатор для получения копии той же квитанции в будущем. Пользовательский агент, который отправляет Content-Location в сообщении с запросом, заявляет, что его значение относится к тому, где пользовательский агент первоначально получил контент вложенного представления (до любых изменений, сделанных этим пользовательским агентом). Другими словами, пользовательский агент предоставляет обратную ссылку на источник исходного представления. Исходный сервер, который получает поле Content-Location в сообщении запроса, ДОЛЖЕН обрабатывать информацию как временный контекст запроса, а не как метаданные, которые должны быть сохранены дословно как часть представления.Исходный сервер МОЖЕТ использовать этот контекст для руководства при обработке запроса или для его сохранения для других целей, например, для ссылок на источники или метаданных управления версиями. Однако исходный сервер НЕ ДОЛЖЕН использовать такую ​​контекстную информацию для изменения семантики запроса. Например, если клиент делает запрос PUT для согласованного ресурса, а исходный сервер принимает этот PUT (без перенаправления), то ожидается, что новое состояние этого ресурса будет согласовано с одним представлением, предоставленным в этом PUT; Content-Location не может использоваться как форма обратного идентификатора выбора контента для обновления только одного из согласованных представлений. Если бы пользовательскому агенту требовалась последняя семантика, он применил бы PUT непосредственно к URI Content-Location.</target>
        </trans-unit>
        <trans-unit id="e94ff61628ee1556f9cb7b6e53cdb420e3640f8b" translate="yes" xml:space="preserve">
          <source>The &quot;Content-Range&quot; header field is sent in a single part 206
   (Partial Content) response to indicate the partial range of the
   selected representation enclosed as the message payload, sent in each
   part of a multipart 206 response to indicate the range enclosed
   within each body part, and sent in 416 (Range Not Satisfiable)
   responses to provide information about the selected representation.

     Content-Range       = byte-content-range
                         / other-content-range

     byte-content-range  = bytes-unit SP
                           ( byte-range-resp / unsatisfied-range )

     byte-range-resp     = byte-range &quot;/&quot; ( complete-length / &quot;*&quot; )
     byte-range          = first-byte-pos &quot;-&quot; last-byte-pos
     unsatisfied-range   = &quot;*/&quot; complete-length

     complete-length     = 1*DIGIT

     other-content-range = other-range-unit SP other-range-resp
     other-range-resp    = *CHAR 

   If a 206 (Partial Content) response contains a Content-Range header
   field with a range unit (&lt;a href=&quot;#section-2&quot;&gt;Section 2&lt;/a&gt;) that the recipient does not
   understand, the recipient MUST NOT attempt to recombine it with a
   stored representation.  A proxy that receives such a message SHOULD
   forward it downstream.

   For byte ranges, a sender SHOULD indicate the complete length of the
   representation from which the range has been extracted, unless the
   complete length is unknown or difficult to determine.  An asterisk
   character (&quot;*&quot;) in place of the complete-length indicates that the
   representation length was unknown when the header field was
   generated.

   The following example illustrates when the complete length of the
   selected representation is known by the sender to be 1234 bytes:

     Content-Range: bytes 42-1233/1234

   and this second example illustrates when the complete length is
   unknown:

     Content-Range: bytes 42-1233/*

   A Content-Range field value is invalid if it contains a
   byte-range-resp that has a last-byte-pos value less than its
   first-byte-pos value, or a complete-length value less than or equal
   to its last-byte-pos value.  The recipient of an invalid
   Content-Range MUST NOT attempt to recombine the received content with
   a stored representation.

   A server generating a 416 (Range Not Satisfiable) response to a
   byte-range request SHOULD send a Content-Range header field with an
   unsatisfied-range value, as in the following example:

     Content-Range: bytes */1234

   The complete-length in a 416 response indicates the current length of
   the selected representation.

   The Content-Range header field has no meaning for status codes that
   do not explicitly describe its semantic.  For this specification,
   only the 206 (Partial Content) and 416 (Range Not Satisfiable) status
   codes describe a meaning for Content-Range. 

   The following are examples of Content-Range values in which the
   selected representation contains a total of 1234 bytes:

   o  The first 500 bytes:

        Content-Range: bytes 0-499/1234

   o  The second 500 bytes:

        Content-Range: bytes 500-999/1234

   o  All except for the first 500 bytes:

        Content-Range: bytes 500-1233/1234

   o  The last 500 bytes:

        Content-Range: bytes 734-1233/1234</source>
          <target state="translated">Поле заголовка Content-Range отправляется в ответе с одной частью 206 (частичное содержимое), чтобы указать частичный диапазон выбранного представления, заключенного в качестве полезной нагрузки сообщения, отправляемого в каждой части многочастного ответа 206, чтобы указать диапазон, заключенный в каждой части тела и отправили 416 (диапазон не удовлетворяет) ответов, чтобы предоставить информацию о выбранном представлении. Content-Range = byte-content-range / other-content-range byte-content-range = byte-unit SP (byte-range-resp / unsatisfied-range) byte-range-resp = byte-range &quot;/&quot; (полный -length / &quot;*&quot;) byte-range = first-byte-pos &quot;-&quot; last-byte-pos unsatisfied-range = &quot;* /&quot;full-length complete-length = 1 * DIGIT other-content-range = other-range-unit SP other-range-resp other-range-resp = * CHAR Если ответ 206 (частичное содержимое) содержит поле заголовка Content-Range с дальномером (&lt;a href=&quot;#section-2&quot;&gt;Раздел 2&lt;/a&gt;), которого получатель не понимает, получатель НЕ ДОЛЖЕН пытаться рекомбинировать его с сохраненным представлением. Прокси-сервер, который получает такое сообщение, ДОЛЖЕН пересылать его в нисходящем направлении. Для байтовых диапазонов отправителю СЛЕДУЕТ указать полную длину представления, из которого был извлечен диапазон, если полная длина неизвестна или ее трудно определить. Символ звездочки (&amp;laquo;*&amp;raquo;) вместо полной длины указывает, что длина представления была неизвестна на момент создания поля заголовка. В следующем примере показано, когда полная длина выбранного представления, как известно отправителю, составляет 1234 байта: Content-Range: байты 42-1233 / 1234, а этот второй пример показывает, когда полная длина неизвестна: Content-Range:bytes 42-1233 / * Значение поля Content-Range недействительно, если оно содержит byte-range-resp, у которого значение last-byte-pos меньше, чем его значение first-byte-pos, или значение полной длины меньше, чем или равно его значению last-byte-pos. Получатель недопустимого Content-Range НЕ ДОЛЖЕН пытаться рекомбинировать полученный контент с сохраненным представлением. Серверу, генерирующему ответ 416 (Range Not Satisfiable) на запрос диапазона байтов, СЛЕДУЕТ отправить поле заголовка Content-Range со значением неудовлетворенного диапазона, как в следующем примере: Content-Range: bytes * / 1234 The full-length в ответе 416 указывает текущую длину выбранного представления. Поле заголовка Content-Range не имеет значения для кодов состояния, которые явно не описывают его семантику. Для этой спецификациитолько коды состояния 206 (частичное содержимое) и 416 (диапазон не удовлетворяется) описывают значение Content-Range. Ниже приведены примеры значений Content-Range, в которых выбранное представление содержит всего 1234 байта: o Первые 500 байтов: Content-Range: байты 0-499 / 1234 o Вторые 500 байтов: Content-Range: байты 500- 999/1234 o Все, кроме первых 500 байтов: Content-Range: байты 500-1233 / 1234 o Последние 500 байтов: Content-Range: байты 734-1233 / 1234байты 0-499 / 1234 o Вторые 500 байтов: Content-Range: байты 500-999 / 1234 o Все, кроме первых 500 байтов: Content-Range: байты 500-1233 / 1234 o Последние 500 байтов: Content-Range : байты 734-1233 / 1234байты 0-499 / 1234 o Вторые 500 байтов: Content-Range: байты 500-999 / 1234 o Все, кроме первых 500 байтов: Content-Range: байты 500-1233 / 1234 o Последние 500 байтов: Content-Range : байты 734-1233 / 1234</target>
        </trans-unit>
        <trans-unit id="3c402cbbcb9ecb9297de91cbbec783939a3ff8f6" translate="yes" xml:space="preserve">
          <source>The &quot;Content-Type&quot; header field indicates the media type of the
   associated representation: either the representation enclosed in the
   message payload or the selected representation, as determined by the
   message semantics.  The indicated media type defines both the data
   format and how that data is intended to be processed by a recipient,
   within the scope of the received message semantics, after any content
   codings indicated by Content-Encoding are decoded.

     Content-Type = media-type 

   Media types are defined in &lt;a href=&quot;#section-3.1.1.1&quot;&gt;Section 3.1.1.1&lt;/a&gt;.  An example of the field
   is

     Content-Type: text/html; charset=ISO-8859-4

   A sender that generates a message containing a payload body SHOULD
   generate a Content-Type header field in that message unless the
   intended media type of the enclosed representation is unknown to the
   sender.  If a Content-Type header field is not present, the recipient
   MAY either assume a media type of &quot;application/octet-stream&quot;
   (&lt;a href=&quot;https://tools.ietf.org/html/rfc2046#section-4.5.1&quot;&gt;[RFC2046], Section&amp;nbsp;4.5.1&lt;/a&gt;) or examine the data to determine its type.

   In practice, resource owners do not always properly configure their
   origin server to provide the correct Content-Type for a given
   representation, with the result that some clients will examine a
   payload's content and override the specified type.  Clients that do
   so risk drawing incorrect conclusions, which might expose additional
   security risks (e.g., &quot;privilege escalation&quot;).  Furthermore, it is
   impossible to determine the sender's intent by examining the data
   format: many data formats match multiple media types that differ only
   in processing semantics.  Implementers are encouraged to provide a
   means of disabling such &quot;content sniffing&quot; when it is used.</source>
          <target state="translated">Поле заголовка Content-Type указывает тип носителя связанного представления: либо представление, заключенное в полезной нагрузке сообщения, либо выбранное представление, как определено семантикой сообщения. Указанный тип мультимедиа определяет как формат данных, так и то, как эти данные предназначены для обработки получателем в рамках семантики полученного сообщения после декодирования любых кодировок содержимого, указанных с помощью Content-Encoding. Content-Type = media-type Типы мультимедиа определены в &lt;a href=&quot;#section-3.1.1.1&quot;&gt;разделе 3.1.1.1.&lt;/a&gt;, Пример поля - Content-Type: text / html; charset = ISO-8859-4 Отправителю, который генерирует сообщение, содержащее тело полезной нагрузки, СЛЕДУЕТ сгенерировать поле заголовка Content-Type в этом сообщении, если только предполагаемый тип мультимедиа вложенного представления неизвестен отправителю. Если поле заголовка Content-Type отсутствует, получатель МОЖЕТ либо принять тип носителя &amp;laquo;application / octet-stream&amp;raquo; ( &lt;a href=&quot;https://tools.ietf.org/html/rfc2046#section-4.5.1&quot;&gt;[RFC2046], раздел 4.5.1).&lt;/a&gt;) или изучите данные, чтобы определить их тип. На практике владельцы ресурсов не всегда правильно настраивают свой исходный сервер для предоставления правильного Content-Type для данного представления, в результате чего некоторые клиенты будут проверять содержимое полезной нагрузки и переопределять указанный тип. Клиенты, которые поступают таким образом, рискуют сделать неверные выводы, что может привести к дополнительным рискам безопасности (например, &amp;laquo;повышение привилегий&amp;raquo;). Кроме того, невозможно определить намерение отправителя, исследуя формат данных: многие форматы данных соответствуют нескольким типам носителей, которые отличаются только семантикой обработки. Разработчикам рекомендуется предоставлять средства для отключения такого &amp;laquo;сниффинга контента&amp;raquo;, когда оно используется.</target>
        </trans-unit>
        <trans-unit id="c0724161072ae90382f70ffbb3410a3dba3f3bf1" translate="yes" xml:space="preserve">
          <source>The &quot;Date&quot; header field represents the date and time at which the
   message was originated, having the same semantics as the Origination
   Date Field (orig-date) defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc5322#section-3.6.1&quot;&gt;Section&amp;nbsp;3.6.1 of [RFC5322]&lt;/a&gt;.  The
   field value is an HTTP-date, as defined in &lt;a href=&quot;#section-7.1.1.1&quot;&gt;Section 7.1.1.1&lt;/a&gt;.

     Date = HTTP-date

   An example is

     Date: Tue, 15 Nov 1994 08:12:31 GMT

   When a Date header field is generated, the sender SHOULD generate its
   field value as the best available approximation of the date and time
   of message generation.  In theory, the date ought to represent the
   moment just before the payload is generated.  In practice, the date
   can be generated at any time during message origination.

   An origin server MUST NOT send a Date header field if it does not
   have a clock capable of providing a reasonable approximation of the
   current instance in Coordinated Universal Time.  An origin server MAY
   send a Date header field if the response is in the 1xx
   (Informational) or 5xx (Server Error) class of status codes.  An
   origin server MUST send a Date header field in all other cases. 

   A recipient with a clock that receives a response message without a
   Date header field MUST record the time it was received and append a
   corresponding Date header field to the message's header section if it
   is cached or forwarded downstream.

   A user agent MAY send a Date header field in a request, though
   generally will not do so unless it is believed to convey useful
   information to the server.  For example, custom applications of HTTP
   might convey a Date if the server is expected to adjust its
   interpretation of the user's request based on differences between the
   user agent and server clocks.</source>
          <target state="translated">Поле заголовка &amp;laquo;Дата&amp;raquo; представляет дату и время, когда было &lt;a href=&quot;https://tools.ietf.org/html/rfc5322#section-3.6.1&quot;&gt;отправлено&lt;/a&gt; сообщение, и имеет ту же семантику, что и поле &amp;laquo;Дата создания&amp;raquo; (orig-date), определенное в разделе 3.6.1 [RFC5322] . Значением поля является дата HTTP, как определено в &lt;a href=&quot;#section-7.1.1.1&quot;&gt;Разделе 7.1.1.1.&lt;/a&gt;, Date = HTTP-date Пример: Date: Tue, 15 Nov 1994, 08:12:31 GMT. Когда создается поле заголовка Date, отправителю СЛЕДУЕТ сгенерировать значение своего поля как наилучшее доступное приближение даты и времени создания сообщения. Теоретически дата должна представлять момент непосредственно перед созданием полезной нагрузки. На практике дату можно создать в любой момент во время создания сообщения. Исходный сервер НЕ ДОЛЖЕН отправлять поле заголовка Date, если у него нет часов, способных обеспечить разумную аппроксимацию текущего экземпляра во всемирном координированном времени. Исходный сервер МОЖЕТ отправить поле заголовка Date, если ответ относится к классу кодов состояния 1xx (информационный) или 5xx (ошибка сервера). Во всех остальных случаях исходный сервер ДОЛЖЕН отправить поле заголовка Date.Получатель с часами, который получает ответное сообщение без поля заголовка Date, ДОЛЖЕН записать время его получения и добавить соответствующее поле заголовка Date к разделу заголовка сообщения, если оно кэшируется или пересылается в нисходящем направлении. Пользовательский агент МОЖЕТ отправить поле заголовка Date в запросе, хотя обычно не будет этого делать, если не предполагается, что он передает полезную информацию на сервер. Например, пользовательские приложения HTTP могут передавать дату, если ожидается, что сервер настроит свою интерпретацию запроса пользователя на основе различий между часами пользовательского агента и сервера.s раздел заголовка, если он кэшируется или перенаправляется вниз по течению. Пользовательский агент МОЖЕТ отправить поле заголовка Date в запросе, хотя обычно не будет этого делать, если не предполагается, что он передает полезную информацию на сервер. Например, пользовательские приложения HTTP могут передавать дату, если ожидается, что сервер настроит свою интерпретацию запроса пользователя на основе различий между часами пользовательского агента и сервера.s раздел заголовка, если он кэшируется или перенаправляется вниз по течению. Пользовательский агент МОЖЕТ отправить поле заголовка Date в запросе, хотя обычно не будет этого делать, если не предполагается, что он передает полезную информацию на сервер. Например, пользовательские приложения HTTP могут передавать дату, если ожидается, что сервер настроит свою интерпретацию запроса пользователя на основе различий между часами пользовательского агента и сервера.</target>
        </trans-unit>
        <trans-unit id="d5a2d6bec4db1f50bd741730e8b916c0b881dd31" translate="yes" xml:space="preserve">
          <source>The &quot;ETag&quot; header field in a response provides the current entity-tag
   for the selected representation, as determined at the conclusion of
   handling the request.  An entity-tag is an opaque validator for
   differentiating between multiple representations of the same
   resource, regardless of whether those multiple representations are
   due to resource state changes over time, content negotiation
   resulting in multiple representations being valid at the same time,
   or both.  An entity-tag consists of an opaque quoted string, possibly
   prefixed by a weakness indicator.

     ETag       = entity-tag

     entity-tag = [ weak ] opaque-tag
     weak       = %x57.2F ; &quot;W/&quot;, case-sensitive
     opaque-tag = DQUOTE *etagc DQUOTE
     etagc      = %x21 / %x23-7E / obs-text
                ; VCHAR except double quotes, plus obs-text

      Note: Previously, opaque-tag was defined to be a quoted-string
      (&lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-3.11&quot;&gt;[RFC2616], Section&amp;nbsp;3.11&lt;/a&gt;); thus, some recipients might perform
      backslash unescaping.  Servers therefore ought to avoid backslash
      characters in entity tags.

   An entity-tag can be more reliable for validation than a modification
   date in situations where it is inconvenient to store modification
   dates, where the one-second resolution of HTTP date values is not
   sufficient, or where modification dates are not consistently
   maintained.

   Examples:

     ETag: &quot;xyzzy&quot;
     ETag: W/&quot;xyzzy&quot;
     ETag: &quot;&quot; 

   An entity-tag can be either a weak or strong validator, with strong
   being the default.  If an origin server provides an entity-tag for a
   representation and the generation of that entity-tag does not satisfy
   all of the characteristics of a strong validator (&lt;a href=&quot;#section-2.1&quot;&gt;Section 2.1&lt;/a&gt;), then
   the origin server MUST mark the entity-tag as weak by prefixing its
   opaque value with &quot;W/&quot; (case-sensitive).</source>
          <target state="translated">Поле заголовка &amp;laquo;ETag&amp;raquo; в ответе предоставляет текущий тег объекта для выбранного представления, как определено в конце обработки запроса. Объект-тег - это непрозрачный валидатор для различения нескольких представлений одного и того же ресурса, независимо от того, вызваны ли эти несколько представлений изменениями состояния ресурса с течением времени, согласованием содержимого, приводящим к одновременному действию нескольких представлений, или и тем, и другим. Объект-тег состоит из непрозрачной строки в кавычках, возможно, с префиксом индикатора слабости. ETag = entity-tag entity-tag = [weak] opaque-tag weak =% x57.2F; &quot;W /&quot;, чувствительный к регистру opaque-tag = DQUOTE * etagc DQUOTE etagc =% x21 /% x23-7E / obs-text; VCHAR кроме двойных кавычек,плюс obs-text Примечание. Ранее непрозрачный тег определялся как строка в кавычках (&lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-3.11&quot;&gt;[RFC2616], раздел 3.11&lt;/a&gt; ); таким образом, некоторые получатели могут выполнять обратную косую черту без экранирования. Поэтому серверам следует избегать символов обратной косой черты в тегах сущностей. Тег entity-tag может быть более надежным для проверки, чем дата модификации, в ситуациях, когда неудобно хранить даты модификации, где односекундное разрешение значений даты HTTP недостаточно или когда даты модификации не поддерживаются постоянно. Примеры: ETag: &quot;xyzzy&quot; ETag: W / &quot;xyzzy&quot; ETag: &quot;&quot; Тег объекта может быть либо слабым, либо сильным валидатором, по умолчанию - сильным.Если исходный сервер предоставляет объектный тег для представления и генерация этого объектного тега не удовлетворяет всем характеристикам сильного валидатора ( &lt;a href=&quot;#section-2.1&quot;&gt;раздел 2.1&lt;/a&gt;), то исходный сервер ДОЛЖЕН пометить тег объекта как слабый, добавив к его непрозрачному значению префикс &quot;W /&quot; (с учетом регистра).</target>
        </trans-unit>
        <trans-unit id="6cbf7e19bfd8298755a091ae5f476f70610c660d" translate="yes" xml:space="preserve">
          <source>The &quot;Expect&quot; header field in a request indicates a certain set of
   behaviors (expectations) that need to be supported by the server in
   order to properly handle this request.  The only such expectation
   defined by this specification is 100-continue.

     Expect  = &quot;100-continue&quot;

   The Expect field-value is case-insensitive.

   A server that receives an Expect field-value other than 100-continue
   MAY respond with a 417 (Expectation Failed) status code to indicate
   that the unexpected expectation cannot be met.

   A 100-continue expectation informs recipients that the client is
   about to send a (presumably large) message body in this request and
   wishes to receive a 100 (Continue) interim response if the
   request-line and header fields are not sufficient to cause an
   immediate success, redirect, or error response.  This allows the
   client to wait for an indication that it is worthwhile to send the
   message body before actually doing so, which can improve efficiency
   when the message body is huge or when the client anticipates that an
   error is likely (e.g., when sending a state-changing method, for the
   first time, without previously verified authentication credentials).

   For example, a request that begins with

     PUT /somewhere/fun HTTP/1.1
     Host: origin.example.com
     Content-Type: video/h264
     Content-Length: 1234567890987
     Expect: 100-continue


   allows the origin server to immediately respond with an error
   message, such as 401 (Unauthorized) or 405 (Method Not Allowed),
   before the client starts filling the pipes with an unnecessary data
   transfer.

   Requirements for clients:

   o  A client MUST NOT generate a 100-continue expectation in a request
      that does not include a message body.

   o  A client that will wait for a 100 (Continue) response before
      sending the request message body MUST send an Expect header field
      containing a 100-continue expectation. 

   o  A client that sends a 100-continue expectation is not required to
      wait for any specific length of time; such a client MAY proceed to
      send the message body even if it has not yet received a response.
      Furthermore, since 100 (Continue) responses cannot be sent through
      an HTTP/1.0 intermediary, such a client SHOULD NOT wait for an
      indefinite period before sending the message body.

   o  A client that receives a 417 (Expectation Failed) status code in
      response to a request containing a 100-continue expectation SHOULD
      repeat that request without a 100-continue expectation, since the
      417 response merely indicates that the response chain does not
      support expectations (e.g., it passes through an HTTP/1.0 server).

   Requirements for servers:

   o  A server that receives a 100-continue expectation in an HTTP/1.0
      request MUST ignore that expectation.

   o  A server MAY omit sending a 100 (Continue) response if it has
      already received some or all of the message body for the
      corresponding request, or if the framing indicates that there is
      no message body.

   o  A server that sends a 100 (Continue) response MUST ultimately send
      a final status code, once the message body is received and
      processed, unless the connection is closed prematurely.

   o  A server that responds with a final status code before reading the
      entire message body SHOULD indicate in that response whether it
      intends to close the connection or continue reading and discarding
      the request message (see &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-6.6&quot;&gt;Section&amp;nbsp;6.6 of [RFC7230]&lt;/a&gt;).

   An origin server MUST, upon receiving an HTTP/1.1 (or later)
   request-line and a complete header section that contains a
   100-continue expectation and indicates a request message body will
   follow, either send an immediate response with a final status code,
   if that status can be determined by examining just the request-line
   and header fields, or send an immediate 100 (Continue) response to
   encourage the client to send the request's message body.  The origin
   server MUST NOT wait for the message body before sending the 100
   (Continue) response.

   A proxy MUST, upon receiving an HTTP/1.1 (or later) request-line and
   a complete header section that contains a 100-continue expectation
   and indicates a request message body will follow, either send an
   immediate response with a final status code, if that status can be
   determined by examining just the request-line and header fields, or
   begin forwarding the request toward the origin server by sending a 

   corresponding request-line and header section to the next inbound
   server.  If the proxy believes (from configuration or past
   interaction) that the next inbound server only supports HTTP/1.0, the
   proxy MAY generate an immediate 100 (Continue) response to encourage
   the client to begin sending the message body.

      Note: The Expect header field was added after the original
      publication of HTTP/1.1 [&lt;a href=&quot;https://tools.ietf.org/html/rfc2068&quot;&gt;RFC2068&lt;/a&gt;] as both the means to request an
      interim 100 (Continue) response and the general mechanism for
      indicating must-understand extensions.  However, the extension
      mechanism has not been used by clients and the must-understand
      requirements have not been implemented by many servers, rendering
      the extension mechanism useless.  This specification has removed
      the extension mechanism in order to simplify the definition and
      processing of 100-continue.</source>
          <target state="translated">Поле заголовка &amp;laquo;Expect&amp;raquo; в запросе указывает на определенный набор поведения (ожиданий), который должен поддерживаться сервером для правильной обработки этого запроса. Единственное такое ожидание, определенное этой спецификацией, - 100-continue. Expect = &quot;100-continue&quot; Значение поля Expect не чувствительно к регистру. Сервер, который получает значение поля Expect, отличное от 100-continue, МОЖЕТ ответить кодом состояния 417 (Expectation Failed), чтобы указать, что неожиданное ожидание не может быть выполнено. Ожидание 100-continue информирует получателей о том, что клиент собирается отправить (предположительно большой) тело сообщения в этом запросе и желает получить промежуточный ответ 100 (Continue), если поля строки запроса и заголовка недостаточно, чтобы вызвать немедленное успех, перенаправление,или ответ об ошибке. Это позволяет клиенту дождаться индикации того, что стоит отправить тело сообщения, прежде чем это делать, что может повысить эффективность, когда тело сообщения огромно или когда клиент ожидает вероятной ошибки (например, при отправке состояния -смена метода, впервые без ранее проверенных учетных данных). Например, запрос, который начинается с PUT /where / fun HTTP / 1.1 Host: origin.example.com Content-Type: video / h264 Content-Length: 1234567890987 Expect: 100-continue, позволяет исходному серверу немедленно ответить с ошибкой. сообщение, такое как 401 (Unauthorized) или 405 (Method Not Allowed), прежде чем клиент начнет заполнять каналы ненужной передачей данных. Требования к клиентам:o Клиент НЕ ДОЛЖЕН генерировать ожидание 100-продолжения в запросе, который не включает тело сообщения. o Клиент, который будет ждать ответа 100 (Продолжить) перед отправкой тела сообщения запроса, ДОЛЖЕН отправить поле заголовка Expect, содержащее ожидание 100-продолжения. o Клиент, который отправляет ожидание продолжения 100, не обязан ждать в течение определенного периода времени; такой клиент МОЖЕТ продолжить отправку тела сообщения, даже если он еще не получил ответа. Кроме того, поскольку 100 ответов (Продолжить) не могут быть отправлены через посредник HTTP / 1.0, такому клиенту НЕ СЛЕДУЕТ ждать неопределенное время перед отправкой тела сообщения.o Клиент, который получает код состояния 417 (ожидание не выполнено) в ответ на запрос, содержащий ожидание 100-продолжения, ДОЛЖЕН повторить этот запрос без ожидания 100-продолжения, поскольку ответ 417 просто указывает, что цепочка ответов не поддерживает ожидания ( например, он проходит через сервер HTTP / 1.0). Требования к серверам: o Сервер, который получает ожидание 100-продолжения в запросе HTTP / 1.0, ДОЛЖЕН игнорировать это ожидание. o Сервер МОЖЕТ пропустить отправку ответа 100 (Продолжить), если он уже получил часть или все тело сообщения для соответствующего запроса, или если кадрирование указывает на отсутствие тела сообщения. o Сервер, который отправляет ответ 100 (Продолжить), ДОЛЖЕН в конечном итоге отправить окончательный код состояния,после получения и обработки тела сообщения, если соединение не разорвано преждевременно. o Сервер, который отвечает окончательным кодом состояния перед чтением всего тела сообщения, ДОЛЖЕН указать в этом ответе, намеревается ли он закрыть соединение или продолжить чтение и отбрасывание сообщения запроса (см.&lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-6.6&quot;&gt;Раздел 6.6 [RFC7230]&lt;/a&gt;). Исходный сервер ДОЛЖЕН после получения строки запроса HTTP / 1.1 (или новее) и полного раздела заголовка, который содержит ожидание продолжения 100 и указывает, что тело сообщения запроса будет следовать, либо отправить немедленный ответ с окончательным кодом состояния, если этот статус можно определить, проверив только поля строки запроса и заголовка, или отправить немедленный ответ 100 (Продолжить), чтобы побудить клиента отправить тело сообщения запроса. Исходный сервер НЕ ДОЛЖЕН ждать тела сообщения перед отправкой ответа 100 (Продолжить). Прокси-сервер ДОЛЖЕН после получения строки запроса HTTP / 1.1 (или более поздней версии) и полного раздела заголовка, который содержит ожидание продолжения 100 и указывает, что тело сообщения запроса будет следовать, либо отправить немедленный ответ с окончательным кодом состояния,если этот статус можно определить, изучив только поля строки запроса и заголовка, или начать пересылку запроса исходному серверу, отправив соответствующую строку запроса и раздел заголовка на следующий входящий сервер. Если прокси считает (из конфигурации или прошлого взаимодействия), что следующий входящий сервер поддерживает только HTTP / 1.0, прокси МОЖЕТ немедленно сгенерировать ответ 100 (Продолжить), чтобы побудить клиента начать отправку тела сообщения. Примечание. Поле заголовка Expect было добавлено после первоначальной публикации HTTP / 1.1 [Если прокси считает (из конфигурации или прошлого взаимодействия), что следующий входящий сервер поддерживает только HTTP / 1.0, прокси МОЖЕТ немедленно сгенерировать ответ 100 (Продолжить), чтобы побудить клиента начать отправку тела сообщения. Примечание. Поле заголовка Expect было добавлено после первоначальной публикации HTTP / 1.1 [Если прокси полагает (из конфигурации или прошлого взаимодействия), что следующий входящий сервер поддерживает только HTTP / 1.0, прокси МОЖЕТ немедленно сгенерировать ответ 100 (Продолжить), чтобы побудить клиента начать отправку тела сообщения. Примечание. Поле заголовка Expect было добавлено после первоначальной публикации HTTP / 1.1 [&lt;a href=&quot;https://tools.ietf.org/html/rfc2068&quot;&gt;RFC2068&lt;/a&gt; ] как средство для запроса промежуточного ответа 100 (продолжить) и как общий механизм для указания расширений, которые необходимо понимать. Однако механизм расширения не использовался клиентами, а обязательные требования не были реализованы на многих серверах, что делает механизм расширения бесполезным. В этой спецификации был удален механизм расширения, чтобы упростить определение и обработку 100-continue.</target>
        </trans-unit>
        <trans-unit id="73ec74b4c3de0b0e8320b9c1e9209dc1703d5df1" translate="yes" xml:space="preserve">
          <source>The &quot;Expires&quot; header field gives the date/time after which the
   response is considered stale.  See &lt;a href=&quot;#section-4.2&quot;&gt;Section 4.2&lt;/a&gt; for further discussion
   of the freshness model.

   The presence of an Expires field does not imply that the original
   resource will change or cease to exist at, before, or after that
   time.

   The Expires value is an HTTP-date timestamp, as defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-7.1.1.1&quot;&gt;Section&lt;/a&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-7.1.1.1&quot;&gt;7.1.1.1 of [RFC7231]&lt;/a&gt;.

     Expires = HTTP-date

   For example

     Expires: Thu, 01 Dec 1994 16:00:00 GMT

   A cache recipient MUST interpret invalid date formats, especially the
   value &quot;0&quot;, as representing a time in the past (i.e., &quot;already
   expired&quot;).

   If a response includes a Cache-Control field with the max-age
   directive (&lt;a href=&quot;#section-5.2.2.8&quot;&gt;Section 5.2.2.8&lt;/a&gt;), a recipient MUST ignore the Expires
   field.  Likewise, if a response includes the s-maxage directive
   (&lt;a href=&quot;#section-5.2.2.9&quot;&gt;Section 5.2.2.9&lt;/a&gt;), a shared cache recipient MUST ignore the Expires
   field.  In both these cases, the value in Expires is only intended
   for recipients that have not yet implemented the Cache-Control field.

   An origin server without a clock MUST NOT generate an Expires field
   unless its value represents a fixed time in the past (always expired)
   or its value has been associated with the resource by a system or
   user with a reliable clock.

   Historically, HTTP required the Expires field-value to be no more
   than a year in the future.  While longer freshness lifetimes are no
   longer prohibited, extremely large values have been demonstrated to
   cause problems (e.g., clock overflows due to use of 32-bit integers
   for time values), and many caches will evict a response far sooner
   than that.</source>
          <target state="translated">В поле заголовка &amp;laquo;Истекает&amp;raquo; указывается дата / время, после которых ответ считается устаревшим. См. &lt;a href=&quot;#section-4.2&quot;&gt;Раздел 4.2&lt;/a&gt; для дальнейшего обсуждения модели свежести. Наличие поля Expires не означает, что исходный ресурс изменится или прекратит свое существование в, до или после этого времени. Значение Expires представляет собой метку времени HTTP-даты, как определено в &lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-7.1.1.1&quot;&gt;разделе &lt;/a&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-7.1.1.1&quot;&gt;7.1.1.1 [RFC7231]&lt;/a&gt; . Expires = HTTP-date Например, Expires: Thu, 01 Dec 1994 16:00:00 GMT Получатель кеша ДОЛЖЕН интерпретировать недопустимые форматы даты, особенно значение &amp;laquo;0&amp;raquo;, как представление времени в прошлом (т. Е. &amp;laquo;Уже истекло&amp;raquo; ). Если ответ включает поле Cache-Control с директивой max-age ( &lt;a href=&quot;#section-5.2.2.8&quot;&gt;Раздел 5.2.2.8&lt;/a&gt;), получатель ДОЛЖЕН игнорировать поле Expires. Аналогично, если ответ включает директиву s-maxage ( &lt;a href=&quot;#section-5.2.2.9&quot;&gt;Раздел 5.2.2.9&lt;/a&gt;), получатель общего кэша ДОЛЖЕН игнорировать поле Expires. В обоих случаях значение Expires предназначено только для получателей, которые еще не реализовали поле Cache-Control. Исходный сервер без часов НЕ ДОЛЖЕН создавать поле Expires, если его значение не представляет фиксированное время в прошлом (всегда истекло) или его значение не было связано с ресурсом системой или пользователем с надежными часами. Исторически сложилось так, что HTTP требовал, чтобы значение поля Expires не превышало года в будущем. Хотя более длительное время жизни свежести больше не запрещено, было продемонстрировано, что чрезвычайно большие значения вызывают проблемы (например, переполнение часов из-за использования 32-битных целых чисел для значений времени), и многие кеши вытеснят ответ гораздо раньше.</target>
        </trans-unit>
        <trans-unit id="435ee716a99e236d6e9d74d1e773dafee502988a" translate="yes" xml:space="preserve">
          <source>The &quot;From&quot; header field contains an Internet email address for a
   human user who controls the requesting user agent.  The address ought
   to be machine-usable, as defined by &quot;mailbox&quot; in &lt;a href=&quot;https://tools.ietf.org/html/rfc5322#section-3.4&quot;&gt;Section&amp;nbsp;3.4 of
   [RFC5322]&lt;/a&gt;:

     From    = mailbox

     mailbox = &amp;lt;mailbox, see &lt;a href=&quot;https://tools.ietf.org/html/rfc5322#section-3.4&quot;&gt;[RFC5322], Section&amp;nbsp;3.4&lt;/a&gt;&amp;gt;

   An example is:

     From: webmaster@example.org

   The From header field is rarely sent by non-robotic user agents.  A
   user agent SHOULD NOT send a From header field without explicit
   configuration by the user, since that might conflict with the user's
   privacy interests or their site's security policy. 

   A robotic user agent SHOULD send a valid From header field so that
   the person responsible for running the robot can be contacted if
   problems occur on servers, such as if the robot is sending excessive,
   unwanted, or invalid requests.

   A server SHOULD NOT use the From header field for access control or
   authentication, since most recipients will assume that the field
   value is public information.</source>
          <target state="translated">Поле заголовка &amp;laquo;От&amp;raquo; содержит адрес электронной почты в Интернете для человека, который управляет запрашивающим агентом пользователя. Адрес должен быть машинным, как определено &lt;a href=&quot;https://tools.ietf.org/html/rfc5322#section-3.4&quot;&gt;термином&lt;/a&gt; &amp;laquo;почтовый ящик&amp;raquo; в разделе 3.4 [RFC5322] : From = mailbox mailbox = &amp;lt;mailbox, см. &lt;a href=&quot;https://tools.ietf.org/html/rfc5322#section-3.4&quot;&gt;[RFC5322], раздел 3.4.&lt;/a&gt;&amp;gt; Пример: From: webmaster@example.org Поле заголовка From редко отправляется не роботизированными пользовательскими агентами. Пользовательскому агенту НЕ СЛЕДУЕТ отправлять поле заголовка From без явной конфигурации со стороны пользователя, поскольку это может противоречить интересам конфиденциальности пользователя или политике безопасности его сайта. Роботизированный пользовательский агент ДОЛЖЕН отправлять допустимое поле заголовка From, чтобы можно было связаться с лицом, ответственным за запуск робота, в случае возникновения проблем на серверах, например, если робот отправляет чрезмерные, нежелательные или недопустимые запросы. Серверу НЕ СЛЕДУЕТ использовать поле заголовка From для управления доступом или аутентификации, поскольку большинство получателей будут предполагать, что значение поля является общедоступной информацией.</target>
        </trans-unit>
        <trans-unit id="145f68a05a65e51d6c2dc78deb7c678abdc3112c" translate="yes" xml:space="preserve">
          <source>The &quot;HTTP Content Coding Registry&quot; defines the namespace for content
   coding names (&lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-4.2&quot;&gt;Section&amp;nbsp;4.2 of [RFC7230]&lt;/a&gt;).  The content coding registry
   is maintained at &amp;lt;&lt;a href=&quot;http://www.iana.org/assignments/http-parameters&quot;&gt;http://www.iana.org/assignments/http-parameters&lt;/a&gt;&amp;gt;.</source>
          <target state="translated">&amp;laquo;Реестр кодирования содержимого HTTP&amp;raquo; определяет пространство имен для имен кодирования содержимого ( &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-4.2&quot;&gt;раздел 4.2 [RFC7230]&lt;/a&gt; ). Реестр кодирования контента поддерживается по адресу &amp;lt; &lt;a href=&quot;http://www.iana.org/assignments/http-parameters&quot;&gt;http://www.iana.org/assignments/http-parameters&lt;/a&gt; &amp;gt;.</target>
        </trans-unit>
        <trans-unit id="096c718821f30fce49e8b7b18bb3a8ea8e6712d1" translate="yes" xml:space="preserve">
          <source>The &quot;HTTP Content Coding Registry&quot; has been updated with the
   registrations below:

   +----------+----------------------------------------+---------------+
   | Name     | Description                            | Reference     |
   +----------+----------------------------------------+---------------+
   | identity | Reserved (synonym for &quot;no encoding&quot; in | &lt;a href=&quot;#section-5.3.4&quot;&gt;Section 5.3.4&lt;/a&gt; |
   |          | Accept-Encoding)                       |               |
   +----------+----------------------------------------+---------------+</source>
          <target state="translated">В &amp;laquo;Реестр кодирования содержимого HTTP&amp;raquo; добавлены следующие регистрации: + ---------- + ----------------------- ----------------- + --------------- + | Имя | Описание | Справка | + ---------- + -------------------------------------- - + --------------- + | личность | Зарезервировано (синоним &quot;без кодирования&quot; в | &lt;a href=&quot;#section-5.3.4&quot;&gt;Раздел 5.3.4&lt;/a&gt; | | | Accept-Encoding) | | + ---------- + -------------------------------------- - + --------------- +</target>
        </trans-unit>
        <trans-unit id="a5c1ee951a5c8eed58e62c23efb0f5396f9627c4" translate="yes" xml:space="preserve">
          <source>The &quot;HTTP Range Unit Registry&quot; defines the namespace for the range
   unit names and refers to their corresponding specifications.  The
   registry has been created and is now maintained at
   &amp;lt;&lt;a href=&quot;http://www.iana.org/assignments/http-parameters&quot;&gt;http://www.iana.org/assignments/http-parameters&lt;/a&gt;&amp;gt;.</source>
          <target state="translated">&amp;laquo;Реестр единиц диапазона HTTP&amp;raquo; определяет пространство имен для имен единиц диапазона и ссылается на их соответствующие спецификации. Реестр был создан и теперь поддерживается по адресу &amp;lt; &lt;a href=&quot;http://www.iana.org/assignments/http-parameters&quot;&gt;http://www.iana.org/assignments/http-parameters&lt;/a&gt; &amp;gt;.</target>
        </trans-unit>
        <trans-unit id="c05bfcc8f57df61bc6ed194b315d3b4b0050023f" translate="yes" xml:space="preserve">
          <source>The &quot;HTTP Transfer Coding Registry&quot; defines the namespace for
   transfer coding names.  It is maintained at
   &amp;lt;&lt;a href=&quot;http://www.iana.org/assignments/http-parameters&quot;&gt;http://www.iana.org/assignments/http-parameters&lt;/a&gt;&amp;gt;.</source>
          <target state="translated">&amp;laquo;Реестр кодирования передачи HTTP&amp;raquo; определяет пространство имен для имен кодирования передачи. Он поддерживается по адресу &amp;lt; &lt;a href=&quot;http://www.iana.org/assignments/http-parameters&quot;&gt;http://www.iana.org/assignments/http-parameters&lt;/a&gt; &amp;gt;.</target>
        </trans-unit>
        <trans-unit id="a0b8c24090cb7e4cccc52c9a6ee16a7c95a28e07" translate="yes" xml:space="preserve">
          <source>The &quot;HTTP Transfer Coding Registry&quot; has been updated with the
   registrations below:

   +------------+--------------------------------------+---------------+
   | Name       | Description                          | Reference     |
   +------------+--------------------------------------+---------------+
   | chunked    | Transfer in a series of chunks       | &lt;a href=&quot;#section-4.1&quot;&gt;Section 4.1&lt;/a&gt;   |
   | compress   | UNIX &quot;compress&quot; data format [&lt;a href=&quot;#ref-Welch&quot;&gt;Welch&lt;/a&gt;]  | &lt;a href=&quot;#section-4.2.1&quot;&gt;Section 4.2.1&lt;/a&gt; |
   | deflate    | &quot;deflate&quot; compressed data            | &lt;a href=&quot;#section-4.2.2&quot;&gt;Section 4.2.2&lt;/a&gt; |
   |            | ([&lt;a href=&quot;https://tools.ietf.org/html/rfc1951&quot;&gt;RFC1951&lt;/a&gt;]) inside the &quot;zlib&quot; data   |               |
   |            | format ([&lt;a href=&quot;https://tools.ietf.org/html/rfc1950&quot;&gt;RFC1950&lt;/a&gt;])                   |               |
   | gzip       | GZIP file format [&lt;a href=&quot;https://tools.ietf.org/html/rfc1952&quot;&gt;RFC1952&lt;/a&gt;]           | &lt;a href=&quot;#section-4.2.3&quot;&gt;Section 4.2.3&lt;/a&gt; |
   | x-compress | Deprecated (alias for compress)      | &lt;a href=&quot;#section-4.2.1&quot;&gt;Section 4.2.1&lt;/a&gt; |
   | x-gzip     | Deprecated (alias for gzip)          | &lt;a href=&quot;#section-4.2.3&quot;&gt;Section 4.2.3&lt;/a&gt; |
   +------------+--------------------------------------+---------------+</source>
          <target state="translated">В &amp;laquo;Реестр кодирования передачи HTTP&amp;raquo; добавлены следующие регистрации: + ------------ + --------------------- ----------------- + --------------- + | Имя | Описание | Справка | + ------------ + ------------------------------------ - + --------------- + | разбитый | Передача серией кусков | &lt;a href=&quot;#section-4.1&quot;&gt;Раздел 4.1&lt;/a&gt; | | сжать | UNIX &quot;сжимает&quot; формат данных [ &lt;a href=&quot;#ref-Welch&quot;&gt;Велч&lt;/a&gt; ] | &lt;a href=&quot;#section-4.2.1&quot;&gt;Раздел 4.2.1&lt;/a&gt; | | сдуть | &quot;сдуть&quot; сжатые данные | &lt;a href=&quot;#section-4.2.2&quot;&gt;Раздел 4.2.2&lt;/a&gt; | | | ([ &lt;a href=&quot;https://tools.ietf.org/html/rfc1951&quot;&gt;RFC1951&lt;/a&gt; ]) внутри данных &quot;zlib&quot; | | | | формат ([ &lt;a href=&quot;https://tools.ietf.org/html/rfc1950&quot;&gt;RFC1950&lt;/a&gt;]) | | | gzip | Формат файла GZIP [ &lt;a href=&quot;https://tools.ietf.org/html/rfc1952&quot;&gt;RFC1952&lt;/a&gt; ] | &lt;a href=&quot;#section-4.2.3&quot;&gt;Раздел 4.2.3&lt;/a&gt; | | x-compress | Устарело (псевдоним для сжатия) | &lt;a href=&quot;#section-4.2.1&quot;&gt;Раздел 4.2.1&lt;/a&gt; | | x-gzip | Устарело (псевдоним для gzip) | &lt;a href=&quot;#section-4.2.3&quot;&gt;Раздел 4.2.3&lt;/a&gt; | + ------------ + ------------------------------------ - + --------------- +</target>
        </trans-unit>
        <trans-unit id="49c73e0ff74e54cb4f5a88bc231df89416d0af4b" translate="yes" xml:space="preserve">
          <source>The &quot;HTTP&quot; entry in the upgrade token registry has been updated with
   the registration below:

   +-------+----------------------+----------------------+-------------+
   | Value | Description          | Expected Version     | Reference   |
   |       |                      | Tokens               |             |
   +-------+----------------------+----------------------+-------------+
   | HTTP  | Hypertext Transfer   | any DIGIT.DIGIT      | &lt;a href=&quot;#section-2.6&quot;&gt;Section 2.6&lt;/a&gt; |
   |       | Protocol             | (e.g, &quot;2.0&quot;)         |             |
   +-------+----------------------+----------------------+-------------+

   The responsible party is: &quot;IETF (iesg@ietf.org) - Internet
   Engineering Task Force&quot;.</source>
          <target state="translated">Запись &amp;laquo;HTTP&amp;raquo; в реестре токенов обновления была обновлена ​​с регистрацией ниже: + ------- + ---------------------- + ---------------------- + ------------- + | Значение | Описание | Ожидаемая версия | Справка | | | | Жетоны | | + ------- + ---------------------- + ------------------ ---- + ------------- + | HTTP | Передача гипертекста | любая DIGIT.DIGIT | &lt;a href=&quot;#section-2.6&quot;&gt;Раздел 2.6&lt;/a&gt; | | | Протокол | (например, &amp;laquo;2,0&amp;raquo;) | | + ------- + ---------------------- + ------------------ ---- + ------------- + Ответственная сторона: &amp;laquo;IETF (iesg@ietf.org) - Инженерная группа Интернета&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="706b09d6ff20df56763add1c7636ec30c154eae9" translate="yes" xml:space="preserve">
          <source>The &quot;Host&quot; header field in a request provides the host and port
   information from the target URI, enabling the origin server to
   distinguish among resources while servicing requests for multiple
   host names on a single IP address.

     Host = uri-host [ &quot;:&quot; port ] ; &lt;a href=&quot;#section-2.7.1&quot;&gt;Section 2.7.1&lt;/a&gt;

   A client MUST send a Host header field in all HTTP/1.1 request
   messages.  If the target URI includes an authority component, then a
   client MUST send a field-value for Host that is identical to that
   authority component, excluding any userinfo subcomponent and its &quot;@&quot;
   delimiter (&lt;a href=&quot;#section-2.7.1&quot;&gt;Section 2.7.1&lt;/a&gt;).  If the authority component is missing or
   undefined for the target URI, then a client MUST send a Host header
   field with an empty field-value.

   Since the Host field-value is critical information for handling a
   request, a user agent SHOULD generate Host as the first header field
   following the request-line.

   For example, a GET request to the origin server for
   &amp;lt;http://www.example.org/pub/WWW/&amp;gt; would begin with:

     GET /pub/WWW/ HTTP/1.1
     Host: www.example.org

   A client MUST send a Host header field in an HTTP/1.1 request even if
   the request-target is in the absolute-form, since this allows the
   Host information to be forwarded through ancient HTTP/1.0 proxies
   that might not have implemented Host.

   When a proxy receives a request with an absolute-form of
   request-target, the proxy MUST ignore the received Host header field
   (if any) and instead replace it with the host information of the
   request-target.  A proxy that forwards such a request MUST generate a
   new Host field-value based on the received request-target rather than
   forward the received Host field-value.

   Since the Host header field acts as an application-level routing
   mechanism, it is a frequent target for malware seeking to poison a
   shared cache or redirect a request to an unintended server.  An
   interception proxy is particularly vulnerable if it relies on the
   Host field-value for redirecting requests to internal servers, or for
   use as a cache key in a shared cache, without first verifying that
   the intercepted connection is targeting a valid IP address for that
   host. 

   A server MUST respond with a 400 (Bad Request) status code to any
   HTTP/1.1 request message that lacks a Host header field and to any
   request message that contains more than one Host header field or a
   Host header field with an invalid field-value.</source>
          <target state="translated">Поле заголовка &amp;laquo;Host&amp;raquo; в запросе предоставляет информацию об узле и порте из целевого URI, позволяя исходному серверу различать ресурсы при обслуживании запросов для нескольких имен узлов на одном IP-адресе. Хост = uri-host [&quot;:&quot; порт]; &lt;a href=&quot;#section-2.7.1&quot;&gt;Раздел 2.7.1&lt;/a&gt; . Клиент ДОЛЖЕН отправлять поле заголовка Host во всех сообщениях запроса HTTP / 1.1. Если целевой URI включает компонент полномочий, то клиент ДОЛЖЕН отправить значение поля для Host, которое идентично этому компоненту полномочий, за исключением подкомпонента userinfo и его разделителя &amp;laquo;@&amp;raquo; ( &lt;a href=&quot;#section-2.7.1&quot;&gt;раздел 2.7.1.&lt;/a&gt;). Если компонент полномочий отсутствует или не определен для целевого URI, то клиент ДОЛЖЕН отправить поле заголовка Host с пустым значением поля. Поскольку значение поля Host является важной информацией для обработки запроса, пользовательский агент ДОЛЖЕН сгенерировать Host в качестве первого поля заголовка, следующего за строкой запроса. Например, запрос GET к исходному серверу для &amp;lt;http://www.example.org/pub/WWW/&amp;gt; будет начинаться с: GET / pub / WWW / HTTP / 1.1 Host: www.example.org Клиент ДОЛЖЕН отправлять поле заголовка Host в запросе HTTP / 1.1, даже если цель запроса находится в абсолютной форме, поскольку это позволяет пересылать информацию Host через старые прокси HTTP / 1.0, которые, возможно, не реализовали Host. Когда прокси-сервер получает запрос с абсолютной формой цели запроса,прокси ДОЛЖЕН игнорировать полученное поле заголовка Host (если есть) и вместо этого заменить его информацией о хосте цели запроса. Прокси-сервер, который пересылает такой запрос, ДОЛЖЕН сгенерировать новое значение поля Host на основе полученной цели запроса, а не пересылать полученное значение поля Host. Поскольку поле заголовка Host действует как механизм маршрутизации на уровне приложения, оно часто становится целью вредоносных программ, стремящихся отравить общий кеш или перенаправить запрос на непредусмотренный сервер. Прокси-сервер перехвата особенно уязвим, если он полагается на значение поля Host для перенаправления запросов на внутренние серверы или для использования в качестве ключа кеша в общем кэше без предварительной проверки того, что перехваченное соединение нацелено на действительный IP-адрес этого хоста. ,Сервер ДОЛЖЕН отвечать кодом состояния 400 (неверный запрос) на любое сообщение запроса HTTP / 1.1, в котором отсутствует поле заголовка узла, и на любое сообщение запроса, которое содержит более одного поля заголовка узла или поле заголовка узла с недопустимым значением поля. ,</target>
        </trans-unit>
        <trans-unit id="bf76981296c1a614d1d61fab43ab95f1d60e0e35" translate="yes" xml:space="preserve">
          <source>The &quot;Hypertext Transfer Protocol (HTTP) Authentication Scheme
   Registry&quot; defines the namespace for the authentication schemes in
   challenges and credentials.  It has been created and is now
   maintained at &amp;lt;&lt;a href=&quot;http://www.iana.org/assignments/http-authschemes&quot;&gt;http://www.iana.org/assignments/http-authschemes&lt;/a&gt;&amp;gt;.</source>
          <target state="translated">&amp;laquo;Реестр схемы аутентификации протокола передачи гипертекста (HTTP)&amp;raquo; определяет пространство имен для схем аутентификации в запросах и учетных данных. Он был создан и сейчас поддерживается по адресу &amp;lt; &lt;a href=&quot;http://www.iana.org/assignments/http-authschemes&quot;&gt;http://www.iana.org/assignments/http-authschemes&lt;/a&gt; &amp;gt;.</target>
        </trans-unit>
        <trans-unit id="88cc8d3cf97af683587a5f4c1d90c4302b8b701f" translate="yes" xml:space="preserve">
          <source>The &quot;Hypertext Transfer Protocol (HTTP) Cache Directive Registry&quot;
   defines the namespace for the cache directives.  It has been created
   and is now maintained at
   &amp;lt;&lt;a href=&quot;http://www.iana.org/assignments/http-cache-directives&quot;&gt;http://www.iana.org/assignments/http-cache-directives&lt;/a&gt;&amp;gt;.</source>
          <target state="translated">&amp;laquo;Реестр директив кэширования протокола передачи гипертекста (HTTP)&amp;raquo; определяет пространство имен для директив кеширования. Он был создан и сейчас поддерживается по адресу &amp;lt; &lt;a href=&quot;http://www.iana.org/assignments/http-cache-directives&quot;&gt;http://www.iana.org/assignments/http-cache-directives&lt;/a&gt; &amp;gt;.</target>
        </trans-unit>
        <trans-unit id="b60962bbc448e0c8070e4bc5da2bd79c07e165d8" translate="yes" xml:space="preserve">
          <source>The &quot;Hypertext Transfer Protocol (HTTP) Method Registry&quot; defines the
   namespace for the request method token (&lt;a href=&quot;#section-4&quot;&gt;Section 4&lt;/a&gt;).  The method
   registry has been created and is now maintained at
   &amp;lt;&lt;a href=&quot;http://www.iana.org/assignments/http-methods&quot;&gt;http://www.iana.org/assignments/http-methods&lt;/a&gt;&amp;gt;.</source>
          <target state="translated">&amp;laquo;Реестр метода протокола передачи гипертекста (HTTP)&amp;raquo; определяет пространство имен для токена метода запроса ( &lt;a href=&quot;#section-4&quot;&gt;раздел 4&lt;/a&gt; ). Реестр методов был создан и теперь поддерживается по адресу &amp;lt; &lt;a href=&quot;http://www.iana.org/assignments/http-methods&quot;&gt;http://www.iana.org/assignments/http-methods&lt;/a&gt; &amp;gt;.</target>
        </trans-unit>
        <trans-unit id="c7c8fd27b56ab4d4e5338d1c107879dea630f834" translate="yes" xml:space="preserve">
          <source>The &quot;Hypertext Transfer Protocol (HTTP) Method Registry&quot; has been
   populated with the registrations below:

   +---------+------+------------+---------------+
   | Method  | Safe | Idempotent | Reference     |
   +---------+------+------------+---------------+
   | CONNECT | no   | no         | &lt;a href=&quot;#section-4.3.6&quot;&gt;Section 4.3.6&lt;/a&gt; |
   | DELETE  | no   | yes        | &lt;a href=&quot;#section-4.3.5&quot;&gt;Section 4.3.5&lt;/a&gt; |
   | GET     | yes  | yes        | &lt;a href=&quot;#section-4.3.1&quot;&gt;Section 4.3.1&lt;/a&gt; |
   | HEAD    | yes  | yes        | &lt;a href=&quot;#section-4.3.2&quot;&gt;Section 4.3.2&lt;/a&gt; |
   | OPTIONS | yes  | yes        | &lt;a href=&quot;#section-4.3.7&quot;&gt;Section 4.3.7&lt;/a&gt; |
   | POST    | no   | no         | &lt;a href=&quot;#section-4.3.3&quot;&gt;Section 4.3.3&lt;/a&gt; |
   | PUT     | no   | yes        | &lt;a href=&quot;#section-4.3.4&quot;&gt;Section 4.3.4&lt;/a&gt; |
   | TRACE   | yes  | yes        | &lt;a href=&quot;#section-4.3.8&quot;&gt;Section 4.3.8&lt;/a&gt; |
   +---------+------+------------+---------------+</source>
          <target state="translated">&amp;laquo;Реестр методов протокола передачи гипертекста (HTTP)&amp;raquo; заполнен следующими регистрационными данными: + --------- + ------ + ------------ + --------------- + | Метод | Сейф | Идемпотент | Справка | + --------- + ------ + ------------ + --------------- + | ПОДКЛЮЧИТЬ | нет | нет | &lt;a href=&quot;#section-4.3.6&quot;&gt;Раздел 4.3.6&lt;/a&gt; | | УДАЛИТЬ | нет | да | &lt;a href=&quot;#section-4.3.5&quot;&gt;Раздел 4.3.5&lt;/a&gt; | | ПОЛУЧИТЬ | да | да | &lt;a href=&quot;#section-4.3.1&quot;&gt;Раздел 4.3.1&lt;/a&gt; | | ГОЛОВА | да | да | &lt;a href=&quot;#section-4.3.2&quot;&gt;Раздел 4.3.2&lt;/a&gt; | | ОПЦИИ | да | да | &lt;a href=&quot;#section-4.3.7&quot;&gt;Раздел 4.3.7&lt;/a&gt; | | ПОЧТА | нет | нет | &lt;a href=&quot;#section-4.3.3&quot;&gt;Раздел 4.3.3&lt;/a&gt; | | PUT | нет | да | &lt;a href=&quot;#section-4.3.4&quot;&gt;Раздел 4.3.4&lt;/a&gt; | | TRACE | да | да |&lt;a href=&quot;#section-4.3.8&quot;&gt;Раздел 4.3.8&lt;/a&gt; | + --------- + ------ + ------------ + --------------- +</target>
        </trans-unit>
        <trans-unit id="af47de3832189b79659dd3c031cb9fcb9be1aa14" translate="yes" xml:space="preserve">
          <source>The &quot;Hypertext Transfer Protocol (HTTP) Status Code Registry&quot; defines
   the namespace for the response status-code token (&lt;a href=&quot;#section-6&quot;&gt;Section 6&lt;/a&gt;).  The
   status code registry is maintained at
   &amp;lt;&lt;a href=&quot;http://www.iana.org/assignments/http-status-codes&quot;&gt;http://www.iana.org/assignments/http-status-codes&lt;/a&gt;&amp;gt;.

   This section replaces the registration procedure for HTTP Status
   Codes previously defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc2817#section-7.1&quot;&gt;Section&amp;nbsp;7.1 of [RFC2817]&lt;/a&gt;.</source>
          <target state="translated">&amp;laquo;Реестр кода состояния протокола передачи гипертекста (HTTP)&amp;raquo; определяет пространство имен для токена кода состояния ответа ( &lt;a href=&quot;#section-6&quot;&gt;раздел 6&lt;/a&gt; ). Реестр кодов состояния поддерживается по адресу &amp;lt; &lt;a href=&quot;http://www.iana.org/assignments/http-status-codes&quot;&gt;http://www.iana.org/assignments/http-status-codes&lt;/a&gt; &amp;gt;. Этот раздел заменяет процедуру регистрации кодов состояния HTTP, ранее определенную в &lt;a href=&quot;https://tools.ietf.org/html/rfc2817#section-7.1&quot;&gt;разделе 7.1 [RFC2817]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a4249a89b69736470c36f6442d2bdc76c91dde18" translate="yes" xml:space="preserve">
          <source>The &quot;Hypertext Transfer Protocol (HTTP) Status Code Registry&quot; located
   at &amp;lt;&lt;a href=&quot;http://www.iana.org/assignments/http-status-codes&quot;&gt;http://www.iana.org/assignments/http-status-codes&lt;/a&gt;&amp;gt; has been
   updated to include the registrations below:

   +-------+-----------------------+-------------+
   | Value | Description           | Reference   |
   +-------+-----------------------+-------------+
   | 206   | Partial Content       | &lt;a href=&quot;#section-4.1&quot;&gt;Section 4.1&lt;/a&gt; |
   | 416   | Range Not Satisfiable | &lt;a href=&quot;#section-4.4&quot;&gt;Section 4.4&lt;/a&gt; |
   +-------+-----------------------+-------------+</source>
          <target state="translated">&amp;laquo;Реестр кодов состояния протокола передачи гипертекста (HTTP)&amp;raquo;, расположенный по адресу &amp;lt; &lt;a href=&quot;http://www.iana.org/assignments/http-status-codes&quot;&gt;http://www.iana.org/assignments/http-status-codes&lt;/a&gt; &amp;gt;, был обновлен и теперь включает следующие регистрации: + ------- + ----------------------- + ------------- + | Значение | Описание | Справка | + ------- + ----------------------- + ------------- + | 206 | Частичное содержание | &lt;a href=&quot;#section-4.1&quot;&gt;Раздел 4.1&lt;/a&gt; | | 416 | Неудовлетворительный диапазон | &lt;a href=&quot;#section-4.4&quot;&gt;Раздел 4.4&lt;/a&gt; | + ------- + ----------------------- + ------------- +</target>
        </trans-unit>
        <trans-unit id="42357d7df40e3a7ed38e6ec9bc128df372e92eb1" translate="yes" xml:space="preserve">
          <source>The &quot;Hypertext Transfer Protocol (HTTP) Status Code Registry&quot; located
   at &amp;lt;&lt;a href=&quot;http://www.iana.org/assignments/http-status-codes&quot;&gt;http://www.iana.org/assignments/http-status-codes&lt;/a&gt;&amp;gt; has been
   updated with the registrations below:

   +-------+---------------------+-------------+
   | Value | Description         | Reference   |
   +-------+---------------------+-------------+
   | 304   | Not Modified        | &lt;a href=&quot;#section-4.1&quot;&gt;Section 4.1&lt;/a&gt; |
   | 412   | Precondition Failed | &lt;a href=&quot;#section-4.2&quot;&gt;Section 4.2&lt;/a&gt; |
   +-------+---------------------+-------------+</source>
          <target state="translated">&amp;laquo;Реестр кодов состояния протокола передачи гипертекста (HTTP)&amp;raquo;, расположенный по адресу &amp;lt; &lt;a href=&quot;http://www.iana.org/assignments/http-status-codes&quot;&gt;http://www.iana.org/assignments/http-status-codes&lt;/a&gt; &amp;gt;, был обновлен с учетом следующих регистраций: + ------- + --------------------- + ------------- + | Значение | Описание | Справка | + ------- + --------------------- + ------------- + | 304 | Не изменено | &lt;a href=&quot;#section-4.1&quot;&gt;Раздел 4.1&lt;/a&gt; | | 412 | Предварительное условие не выполнено | &lt;a href=&quot;#section-4.2&quot;&gt;Раздел 4.2&lt;/a&gt; | + ------- + --------------------- + ------------- +</target>
        </trans-unit>
        <trans-unit id="6373f51fbfb2756123d6ebe8d028d312dde91148" translate="yes" xml:space="preserve">
          <source>The &quot;Hypertext Transfer Protocol (HTTP) Status Code Registry&quot; located
   at &amp;lt;&lt;a href=&quot;http://www.iana.org/assignments/http-status-codes&quot;&gt;http://www.iana.org/assignments/http-status-codes&lt;/a&gt;&amp;gt; has been
   updated with the registrations below:

   +-------+-------------------------------+-------------+
   | Value | Description                   | Reference   |
   +-------+-------------------------------+-------------+
   | 401   | Unauthorized                  | &lt;a href=&quot;#section-3.1&quot;&gt;Section 3.1&lt;/a&gt; |
   | 407   | Proxy Authentication Required | &lt;a href=&quot;#section-3.2&quot;&gt;Section 3.2&lt;/a&gt; |
   +-------+-------------------------------+-------------+</source>
          <target state="translated">&amp;laquo;Реестр кодов состояния протокола передачи гипертекста (HTTP)&amp;raquo;, расположенный по адресу &amp;lt; &lt;a href=&quot;http://www.iana.org/assignments/http-status-codes&quot;&gt;http://www.iana.org/assignments/http-status-codes&lt;/a&gt; &amp;gt;, был обновлен с учетом следующих регистраций: + ------- + ------------------------------- + ------------- + | Значение | Описание | Справка | + ------- + ------------------------------- + --------- ---- + | 401 | Несанкционированный | &lt;a href=&quot;#section-3.1&quot;&gt;Раздел 3.1&lt;/a&gt; | | 407 | Требуется проверка подлинности прокси | &lt;a href=&quot;#section-3.2&quot;&gt;Раздел 3.2&lt;/a&gt; | + ------- + ------------------------------- + --------- ---- +</target>
        </trans-unit>
        <trans-unit id="5cad05fd1eebfb52b696d9b41f75945bfa2216cd" translate="yes" xml:space="preserve">
          <source>The &quot;Hypertext Transfer Protocol (HTTP) Upgrade Token Registry&quot;
   defines the namespace for protocol-name tokens used to identify
   protocols in the Upgrade header field.  The registry is maintained at
   &amp;lt;&lt;a href=&quot;http://www.iana.org/assignments/http-upgrade-tokens&quot;&gt;http://www.iana.org/assignments/http-upgrade-tokens&lt;/a&gt;&amp;gt;.</source>
          <target state="translated">&amp;laquo;Реестр токенов обновления протокола передачи гипертекста (HTTP)&amp;raquo; определяет пространство имен для токенов имени протокола, используемых для идентификации протоколов в поле заголовка обновления. Реестр ведется по адресу &amp;lt; &lt;a href=&quot;http://www.iana.org/assignments/http-upgrade-tokens&quot;&gt;http://www.iana.org/assignments/http-upgrade-tokens&lt;/a&gt; &amp;gt;.</target>
        </trans-unit>
        <trans-unit id="dff627671b970f06b09a819242fd5432d30d4c1d" translate="yes" xml:space="preserve">
          <source>The &quot;Hypertext Transfer Protocol (HTTP) Warn Codes&quot; registry defines
   the namespace for warn codes.  It has been created and is now
   maintained at &amp;lt;&lt;a href=&quot;http://www.iana.org/assignments/http-warn-codes&quot;&gt;http://www.iana.org/assignments/http-warn-codes&lt;/a&gt;&amp;gt;.</source>
          <target state="translated">Реестр &amp;laquo;Коды предупреждений протокола передачи гипертекста (HTTP)&amp;raquo; определяет пространство имен для кодов предупреждений. Он был создан и сейчас поддерживается по адресу &amp;lt; &lt;a href=&quot;http://www.iana.org/assignments/http-warn-codes&quot;&gt;http://www.iana.org/assignments/http-warn-codes&lt;/a&gt; &amp;gt;.</target>
        </trans-unit>
        <trans-unit id="ce30eef6a7cd5d843d61361a8fb74fe7770cdcce" translate="yes" xml:space="preserve">
          <source>The &quot;If-Match&quot; header field makes the request method conditional on
   the recipient origin server either having at least one current
   representation of the target resource, when the field-value is &quot;*&quot;,
   or having a current representation of the target resource that has an
   entity-tag matching a member of the list of entity-tags provided in
   the field-value.

   An origin server MUST use the strong comparison function when
   comparing entity-tags for If-Match (&lt;a href=&quot;#section-2.3.2&quot;&gt;Section 2.3.2&lt;/a&gt;), since the client
   intends this precondition to prevent the method from being applied if
   there have been any changes to the representation data.

     If-Match = &quot;*&quot; / 1#entity-tag

   Examples:

     If-Match: &quot;xyzzy&quot;
     If-Match: &quot;xyzzy&quot;, &quot;r2d2xxxx&quot;, &quot;c3piozzzz&quot;
     If-Match: *

   If-Match is most often used with state-changing methods (e.g., POST,
   PUT, DELETE) to prevent accidental overwrites when multiple user
   agents might be acting in parallel on the same resource (i.e., to 

   prevent the &quot;lost update&quot; problem).  It can also be used with safe
   methods to abort a request if the selected representation does not
   match one already stored (or partially stored) from a prior request.

   An origin server that receives an If-Match header field MUST evaluate
   the condition prior to performing the method (&lt;a href=&quot;#section-5&quot;&gt;Section 5&lt;/a&gt;).  If the
   field-value is &quot;*&quot;, the condition is false if the origin server does
   not have a current representation for the target resource.  If the
   field-value is a list of entity-tags, the condition is false if none
   of the listed tags match the entity-tag of the selected
   representation.

   An origin server MUST NOT perform the requested method if a received
   If-Match condition evaluates to false; instead, the origin server
   MUST respond with either a) the 412 (Precondition Failed) status code
   or b) one of the 2xx (Successful) status codes if the origin server
   has verified that a state change is being requested and the final
   state is already reflected in the current state of the target
   resource (i.e., the change requested by the user agent has already
   succeeded, but the user agent might not be aware of it, perhaps
   because the prior response was lost or a compatible change was made
   by some other user agent).  In the latter case, the origin server
   MUST NOT send a validator header field in the response unless it can
   verify that the request is a duplicate of an immediately prior change
   made by the same user agent.

   The If-Match header field can be ignored by caches and intermediaries
   because it is not applicable to a stored response.</source>
          <target state="translated">Поле заголовка &amp;laquo;If-Match&amp;raquo; ставит метод запроса в зависимость от исходного сервера получателя, имеющего хотя бы одно текущее представление целевого ресурса, когда значение поля равно &amp;laquo;*&amp;raquo;, или имеющего текущее представление целевого ресурса, который имеет тег объекта, соответствующий члену списка тегов объекта, предоставленного в значении поля. Исходный сервер ДОЛЖЕН использовать функцию строгого сравнения при сравнении тегов объектов для If-Match ( &lt;a href=&quot;#section-2.3.2&quot;&gt;раздел 2.3.2.&lt;/a&gt;), поскольку клиент намеревается сделать это предварительное условие, чтобы предотвратить применение метода, если были какие-либо изменения в данных представления. If-Match = &quot;*&quot; / 1 # Примеры тегов объекта: If-Match: &quot;xyzzy&quot; If-Match: &quot;xyzzy&quot;, &quot;r2d2xxxx&quot;, &quot;c3piozzzz&quot; If-Match: * If-Match чаще всего используется с методы изменения состояния (например, POST, PUT, DELETE) для предотвращения случайной перезаписи, когда несколько пользовательских агентов могут работать параллельно с одним и тем же ресурсом (то есть, чтобы предотвратить проблему &amp;laquo;потерянного обновления&amp;raquo;). Его также можно использовать с безопасными методами для прерывания запроса, если выбранное представление не совпадает с уже сохраненным (или частично сохраненным) из предыдущего запроса.Исходный сервер, который получает поле заголовка If-Match, ДОЛЖЕН оценить условие до выполнения метода (&lt;a href=&quot;#section-5&quot;&gt;Раздел 5&lt;/a&gt;). Если значение поля равно &amp;laquo;*&amp;raquo;, условие ложно, если исходный сервер не имеет текущего представления для целевого ресурса. Если значение поля является списком тегов сущностей, условие ложно, если ни один из перечисленных тегов не соответствует тегу объекта выбранного представления. Исходный сервер НЕ ДОЛЖЕН выполнять запрошенный метод, если полученное условие If-Match оценивается как ложное; вместо этого исходный сервер ДОЛЖЕН ответить либо a) кодом состояния 412 (Precondition Failed), либо b) одним из кодов состояния 2xx (Successful), если исходный сервер подтвердил, что запрашивается изменение состояния, и конечное состояние уже отражается в текущем состоянии целевого ресурса (т. е. изменение, запрошенное пользовательским агентом, уже выполнено успешно,но пользовательский агент может не знать об этом, возможно, потому, что предыдущий ответ был потерян или совместимое изменение было внесено каким-либо другим пользовательским агентом). В последнем случае исходный сервер НЕ ДОЛЖЕН отправлять поле заголовка валидатора в ответ, если он не может подтвердить, что запрос является дубликатом непосредственно предшествующего изменения, сделанного тем же пользовательским агентом. Поле заголовка If-Match может игнорироваться кешами и посредниками, поскольку оно не применимо к сохраненному ответу.Поле заголовка If-Match может игнорироваться кешами и посредниками, поскольку оно не применимо к сохраненному ответу.Поле заголовка If-Match может игнорироваться кешами и посредниками, поскольку оно не применимо к сохраненному ответу.</target>
        </trans-unit>
        <trans-unit id="6a8bdb230b0368d774ef7c392fdbc661a6f47bdb" translate="yes" xml:space="preserve">
          <source>The &quot;If-Modified-Since&quot; header field makes a GET or HEAD request
   method conditional on the selected representation's modification date
   being more recent than the date provided in the field-value.
   Transfer of the selected representation's data is avoided if that
   data has not changed.

     If-Modified-Since = HTTP-date

   An example of the field is:

     If-Modified-Since: Sat, 29 Oct 1994 19:43:31 GMT

   A recipient MUST ignore If-Modified-Since if the request contains an
   If-None-Match header field; the condition in If-None-Match is
   considered to be a more accurate replacement for the condition in
   If-Modified-Since, and the two are only combined for the sake of
   interoperating with older intermediaries that might not implement
   If-None-Match.

   A recipient MUST ignore the If-Modified-Since header field if the
   received field-value is not a valid HTTP-date, or if the request
   method is neither GET nor HEAD.

   A recipient MUST interpret an If-Modified-Since field-value's
   timestamp in terms of the origin server's clock.

   If-Modified-Since is typically used for two distinct purposes: 1) to
   allow efficient updates of a cached representation that does not have
   an entity-tag and 2) to limit the scope of a web traversal to
   resources that have recently changed.

   When used for cache updates, a cache will typically use the value of
   the cached message's Last-Modified field to generate the field value
   of If-Modified-Since.  This behavior is most interoperable for cases
   where clocks are poorly synchronized or when the server has chosen to
   only honor exact timestamp matches (due to a problem with
   Last-Modified dates that appear to go &quot;back in time&quot; when the origin
   server's clock is corrected or a representation is restored from an
   archived backup).  However, caches occasionally generate the field
   value based on other data, such as the Date header field of the
   cached message or the local clock time that the message was received,
   particularly when the cached message does not contain a Last-Modified
   field. 

   When used for limiting the scope of retrieval to a recent time
   window, a user agent will generate an If-Modified-Since field value
   based on either its own local clock or a Date header field received
   from the server in a prior response.  Origin servers that choose an
   exact timestamp match based on the selected representation's
   Last-Modified field will not be able to help the user agent limit its
   data transfers to only those changed during the specified window.

   An origin server that receives an If-Modified-Since header field
   SHOULD evaluate the condition prior to performing the method
   (&lt;a href=&quot;#section-5&quot;&gt;Section 5&lt;/a&gt;).  The origin server SHOULD NOT perform the requested
   method if the selected representation's last modification date is
   earlier than or equal to the date provided in the field-value;
   instead, the origin server SHOULD generate a 304 (Not Modified)
   response, including only those metadata that are useful for
   identifying or updating a previously cached response.

   Requirements on cache handling of a received If-Modified-Since header
   field are defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc7234#section-4.3.2&quot;&gt;Section&amp;nbsp;4.3.2 of [RFC7234]&lt;/a&gt;.</source>
          <target state="translated">Поле заголовка &amp;laquo;If-Modified-Since&amp;raquo; делает метод запроса GET или HEAD условным, если дата изменения выбранного представления более поздняя, ​​чем дата, указанная в значении поля. Перенос данных выбранного представления предотвращается, если эти данные не изменились. If-Modified-Since = HTTP-date Пример поля: If-Modified-Since: Сб, 29 октября 1994 г., 19:43:31 GMT Получатель ДОЛЖЕН игнорировать If-Modified-Since, если запрос содержит If-None -Поле заголовка совпадения; условие в If-None-Match считается более точной заменой условия в If-Modified-Since, и они объединяются только для взаимодействия со старыми посредниками, которые могут не реализовывать If-None-Match.Получатель ДОЛЖЕН игнорировать поле заголовка If-Modified-Since, если полученное значение поля не является допустимой датой HTTP или если метод запроса не является ни GET, ни HEAD. Получатель ДОЛЖЕН интерпретировать метку времени значения поля If-Modified-Since в терминах часов исходного сервера. If-Modified-Since обычно используется для двух разных целей: 1) для обеспечения эффективных обновлений кэшированного представления, не имеющего тега объекта, и 2) для ограничения объема веб-обхода ресурсами, которые недавно изменились. При использовании для обновлений кеша, кеш обычно использует значение поля Last-Modified кэшированного сообщения для генерации значения поля If-Modified-Since.Это поведение наиболее совместимо в случаях, когда часы плохо синхронизированы или когда сервер решил соблюдать только точные совпадения меток времени (из-за проблемы с датами Last-Modified, которые кажутся возвращающимися &quot;назад во времени&quot;, когда часы исходного сервера исправлены. или представление восстанавливается из архивной резервной копии). Однако кеши иногда генерируют значение поля на основе других данных, таких как поле заголовка Date кэшированного сообщения или локальные часы, когда сообщение было получено, особенно когда кэшированное сообщение не содержит поля Last-Modified. Когда используется для ограничения области поиска недавним временным окном,пользовательский агент сгенерирует значение поля If-Modified-Since либо на основе своих локальных часов, либо на основе поля заголовка Date, полученного от сервера в предыдущем ответе. Серверы происхождения, которые выбирают точное совпадение меток времени на основе поля Last-Modified выбранного представления, не смогут помочь пользовательскому агенту ограничить передачу данных только теми, которые были изменены в течение указанного окна. Исходному серверу, который получает поле заголовка If-Modified-Since, СЛЕДУЕТ оценить условие до выполнения метода (Исходному серверу, который получает поле заголовка If-Modified-Since, СЛЕДУЕТ оценить условие до выполнения метода (Исходному серверу, который получает поле заголовка If-Modified-Since, СЛЕДУЕТ оценить условие до выполнения метода (&lt;a href=&quot;#section-5&quot;&gt;Раздел 5&lt;/a&gt; ). Исходному серверу НЕ СЛЕДУЕТ выполнять запрошенный метод, если дата последнего изменения выбранного представления раньше или равна дате, указанной в значении поля; вместо этого исходный сервер ДОЛЖЕН генерировать ответ 304 (Not Modified), включая только те метаданные, которые полезны для идентификации или обновления ранее кэшированного ответа. Требования к обработке кэша полученного поля заголовка If-Modified-Since определены в &lt;a href=&quot;https://tools.ietf.org/html/rfc7234#section-4.3.2&quot;&gt;разделе 4.3.2 [RFC7234]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7a0c758120c2ca9721b5496606fe6d4cf8c40d68" translate="yes" xml:space="preserve">
          <source>The &quot;If-None-Match&quot; header field makes the request method conditional
   on a recipient cache or origin server either not having any current
   representation of the target resource, when the field-value is &quot;*&quot;,
   or having a selected representation with an entity-tag that does not
   match any of those listed in the field-value.

   A recipient MUST use the weak comparison function when comparing
   entity-tags for If-None-Match (&lt;a href=&quot;#section-2.3.2&quot;&gt;Section 2.3.2&lt;/a&gt;), since weak entity-tags
   can be used for cache validation even if there have been changes to
   the representation data.

     If-None-Match = &quot;*&quot; / 1#entity-tag 

   Examples:

     If-None-Match: &quot;xyzzy&quot;
     If-None-Match: W/&quot;xyzzy&quot;
     If-None-Match: &quot;xyzzy&quot;, &quot;r2d2xxxx&quot;, &quot;c3piozzzz&quot;
     If-None-Match: W/&quot;xyzzy&quot;, W/&quot;r2d2xxxx&quot;, W/&quot;c3piozzzz&quot;
     If-None-Match: *

   If-None-Match is primarily used in conditional GET requests to enable
   efficient updates of cached information with a minimum amount of
   transaction overhead.  When a client desires to update one or more
   stored responses that have entity-tags, the client SHOULD generate an
   If-None-Match header field containing a list of those entity-tags
   when making a GET request; this allows recipient servers to send a
   304 (Not Modified) response to indicate when one of those stored
   responses matches the selected representation.

   If-None-Match can also be used with a value of &quot;*&quot; to prevent an
   unsafe request method (e.g., PUT) from inadvertently modifying an
   existing representation of the target resource when the client
   believes that the resource does not have a current representation
   (&lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-4.2.1&quot;&gt;Section&amp;nbsp;4.2.1 of [RFC7231]&lt;/a&gt;).  This is a variation on the &quot;lost
   update&quot; problem that might arise if more than one client attempts to
   create an initial representation for the target resource.

   An origin server that receives an If-None-Match header field MUST
   evaluate the condition prior to performing the method (&lt;a href=&quot;#section-5&quot;&gt;Section 5&lt;/a&gt;).
   If the field-value is &quot;*&quot;, the condition is false if the origin
   server has a current representation for the target resource.  If the
   field-value is a list of entity-tags, the condition is false if one
   of the listed tags match the entity-tag of the selected
   representation.

   An origin server MUST NOT perform the requested method if the
   condition evaluates to false; instead, the origin server MUST respond
   with either a) the 304 (Not Modified) status code if the request
   method is GET or HEAD or b) the 412 (Precondition Failed) status code
   for all other request methods.

   Requirements on cache handling of a received If-None-Match header
   field are defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc7234#section-4.3.2&quot;&gt;Section&amp;nbsp;4.3.2 of [RFC7234]&lt;/a&gt;.</source>
          <target state="translated">Поле заголовка &amp;laquo;If-None-Match&amp;raquo; ставит метод запроса в зависимость от кэша получателя или исходного сервера, который либо не имеет текущего представления целевого ресурса, когда значение поля равно &amp;laquo;*&amp;raquo;, либо имеет выбранное представление с тег объекта, который не соответствует ни одному из перечисленных в значении поля. Получатель ДОЛЖЕН использовать функцию слабого сравнения при сравнении тегов объекта для If-None-Match ( &lt;a href=&quot;#section-2.3.2&quot;&gt;раздел 2.3.2.&lt;/a&gt;), поскольку слабые теги сущностей могут использоваться для проверки кеша, даже если в данные представления были внесены изменения. If-None-Match = &quot;*&quot; / 1 # Примеры тегов объекта: If-None-Match: &quot;xyzzy&quot; If-None-Match: W / &quot;xyzzy&quot; If-None-Match: &quot;xyzzy&quot;, &quot;r2d2xxxx&quot; , &quot;c3piozzzz&quot; If-None-Match: W / &quot;xyzzy&quot;, W / &quot;r2d2xxxx&quot;, W / &quot;c3piozzzz&quot; If-None-Match: * If-None-Match в основном используется в условных запросах GET для включения эффективных обновлений кэшированной информации с минимальным объемом транзакционных накладных расходов. Когда клиент желает обновить один или несколько сохраненных ответов, которые имеют теги объекта, ему СЛЕДУЕТ сгенерировать поле заголовка If-None-Match, содержащее список этих тегов объекта, при выполнении запроса GET;это позволяет серверам-получателям отправлять ответ 304 (Not Modified), чтобы указать, когда один из этих сохраненных ответов соответствует выбранному представлению. If-None-Match также может использоваться со значением &quot;*&quot;, чтобы предотвратить непреднамеренное изменение небезопасным методом запроса (например, PUT) существующего представления целевого ресурса, когда клиент считает, что ресурс не имеет текущего представления. (PUT) от непреднамеренного изменения существующего представления целевого ресурса, когда клиент считает, что ресурс не имеет текущего представления (PUT) от непреднамеренного изменения существующего представления целевого ресурса, когда клиент считает, что ресурс не имеет текущего представления (&lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-4.2.1&quot;&gt;Раздел 4.2.1 [RFC7231]&lt;/a&gt; ). Это вариант проблемы &amp;laquo;потерянного обновления&amp;raquo;, которая может возникнуть, если несколько клиентов попытаются создать начальное представление для целевого ресурса. Исходный сервер, который получает поле заголовка If-None-Match, ДОЛЖЕН оценить условие перед выполнением метода ( &lt;a href=&quot;#section-5&quot;&gt;Раздел 5&lt;/a&gt;). Если значение поля &amp;laquo;*&amp;raquo;, условие ложно, если исходный сервер имеет текущее представление для целевого ресурса. Если значение поля представляет собой список тегов сущностей, условие ложно, если один из перечисленных тегов соответствует тегу объекта выбранного представления. Исходный сервер НЕ ДОЛЖЕН выполнять запрошенный метод, если условие оценивается как ложное; вместо этого исходный сервер ДОЛЖЕН ответить либо а) кодом состояния 304 (не изменен), если метод запроса - GET или HEAD, или б) кодом состояния 412 (отказ предварительного условия) для всех других методов запроса. Требования к обработке кэша полученного поля заголовка If-None-Match определены в &lt;a href=&quot;https://tools.ietf.org/html/rfc7234#section-4.3.2&quot;&gt;разделе 4.3.2 [RFC7234]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a9010727bf44de6e918d999396395dcc003b1b98" translate="yes" xml:space="preserve">
          <source>The &quot;If-Range&quot; header field provides a special conditional request
   mechanism that is similar to the If-Match and If-Unmodified-Since
   header fields but that instructs the recipient to ignore the Range
   header field if the validator doesn't match, resulting in transfer of
   the new selected representation instead of a 412 (Precondition
   Failed) response.  If-Range is defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc7233#section-3.2&quot;&gt;Section&amp;nbsp;3.2 of [RFC7233]&lt;/a&gt;.</source>
          <target state="translated">Поле заголовка &amp;laquo;If-Range&amp;raquo; предоставляет специальный механизм условного запроса, который похож на поля заголовка If-Match и If-Unmodified-Since, но инструктирует получателя игнорировать поле заголовка Range, если валидатор не соответствует, в результате при передаче нового выбранного представления вместо ответа 412 (Precondition Failed). If-Range определен в &lt;a href=&quot;https://tools.ietf.org/html/rfc7233#section-3.2&quot;&gt;разделе 3.2 [RFC7233]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8425f95c9971ed97dd968bffd651d8482f2d923d" translate="yes" xml:space="preserve">
          <source>The &quot;If-Unmodified-Since&quot; header field makes the request method
   conditional on the selected representation's last modification date
   being earlier than or equal to the date provided in the field-value.
   This field accomplishes the same purpose as If-Match for cases where
   the user agent does not have an entity-tag for the representation.

     If-Unmodified-Since = HTTP-date

   An example of the field is:

     If-Unmodified-Since: Sat, 29 Oct 1994 19:43:31 GMT

   A recipient MUST ignore If-Unmodified-Since if the request contains
   an If-Match header field; the condition in If-Match is considered to
   be a more accurate replacement for the condition in
   If-Unmodified-Since, and the two are only combined for the sake of
   interoperating with older intermediaries that might not implement
   If-Match.

   A recipient MUST ignore the If-Unmodified-Since header field if the
   received field-value is not a valid HTTP-date.

   A recipient MUST interpret an If-Unmodified-Since field-value's
   timestamp in terms of the origin server's clock. 

   If-Unmodified-Since is most often used with state-changing methods
   (e.g., POST, PUT, DELETE) to prevent accidental overwrites when
   multiple user agents might be acting in parallel on a resource that
   does not supply entity-tags with its representations (i.e., to
   prevent the &quot;lost update&quot; problem).  It can also be used with safe
   methods to abort a request if the selected representation does not
   match one already stored (or partially stored) from a prior request.

   An origin server that receives an If-Unmodified-Since header field
   MUST evaluate the condition prior to performing the method
   (&lt;a href=&quot;#section-5&quot;&gt;Section 5&lt;/a&gt;).  The origin server MUST NOT perform the requested method
   if the selected representation's last modification date is more
   recent than the date provided in the field-value; instead the origin
   server MUST respond with either a) the 412 (Precondition Failed)
   status code or b) one of the 2xx (Successful) status codes if the
   origin server has verified that a state change is being requested and
   the final state is already reflected in the current state of the
   target resource (i.e., the change requested by the user agent has
   already succeeded, but the user agent might not be aware of that
   because the prior response message was lost or a compatible change
   was made by some other user agent).  In the latter case, the origin
   server MUST NOT send a validator header field in the response unless
   it can verify that the request is a duplicate of an immediately prior
   change made by the same user agent.

   The If-Unmodified-Since header field can be ignored by caches and
   intermediaries because it is not applicable to a stored response.</source>
          <target state="translated">Поле заголовка &amp;laquo;If-Unmodified-Since&amp;raquo; делает метод запроса условным, если дата последнего изменения выбранного представления раньше или равна дате, указанной в значении поля. Это поле выполняет ту же цель, что и If-Match, для случаев, когда пользовательский агент не имеет тега объекта для представления. If-Unmodified-Since = HTTP-date Пример поля: If-Unmodified-Since: Sat, 29 Oct 1994 19:43:31 GMT Получатель ДОЛЖЕН игнорировать If-Unmodified-Since, если запрос содержит If-Match поле заголовка; условие в If-Match считается более точной заменой условия в If-Unmodified-Since, и оба они объединены только для взаимодействия со старыми посредниками, которые могут не реализовывать If-Match.Получатель ДОЛЖЕН игнорировать поле заголовка If-Unmodified-Since, если полученное значение поля не является допустимой датой HTTP. Получатель ДОЛЖЕН интерпретировать метку времени значения поля If-Unmodified-Since в терминах часов исходного сервера. If-Unmodified-Since наиболее часто используется с методами изменения состояния (например, POST, PUT, DELETE) для предотвращения случайной перезаписи, когда несколько пользовательских агентов могут действовать параллельно с ресурсом, который не предоставляет теги объекта с его представлениями ( то есть, чтобы предотвратить проблему &quot;потерянного обновления&quot;). Его также можно использовать с безопасными методами для прерывания запроса, если выбранное представление не совпадает с уже сохраненным (или частично сохраненным) из предыдущего запроса.Исходный сервер, который получает поле заголовка If-Unmodified-Since, ДОЛЖЕН оценить условие до выполнения метода (&lt;a href=&quot;#section-5&quot;&gt;Раздел 5&lt;/a&gt;). Исходный сервер НЕ ДОЛЖЕН выполнять запрошенный метод, если дата последнего изменения выбранного представления более поздняя, ​​чем дата, указанная в значении поля; вместо этого исходный сервер ДОЛЖЕН ответить либо a) кодом состояния 412 (Precondition Failed), либо b) одним из кодов состояния 2xx (Successful), если исходный сервер подтвердил, что запрашивается изменение состояния, и конечное состояние уже отражено в текущем состоянии целевого ресурса (т. е. изменение, запрошенное пользовательским агентом, уже выполнено успешно, но пользовательский агент может не знать об этом, потому что предыдущее ответное сообщение было потеряно или совместимое изменение было внесено каким-либо другим пользовательским агентом ). В последнем случае,исходный сервер НЕ ДОЛЖЕН отправлять поле заголовка валидатора в ответ, если он не может подтвердить, что запрос является копией непосредственно предшествующего изменения, сделанного тем же пользовательским агентом. Поле заголовка If-Unmodified-Since может игнорироваться кешами и посредниками, поскольку оно не применимо к сохраненному ответу.</target>
        </trans-unit>
        <trans-unit id="3bcbe36b4b07ea53d8dfd522bedc5b18d8069ffd" translate="yes" xml:space="preserve">
          <source>The &quot;Last-Modified&quot; header field in a response provides a timestamp
   indicating the date and time at which the origin server believes the
   selected representation was last modified, as determined at the
   conclusion of handling the request.

     Last-Modified = HTTP-date

   An example of its use is

     Last-Modified: Tue, 15 Nov 1994 12:45:26 GMT</source>
          <target state="translated">Поле заголовка &quot;Last-Modified&quot; в ответе предоставляет временную метку,указывающую дату и время,когда сервер отправителя считает,что выбранное представление было в последний раз изменено,как это было определено при завершении обработки запроса.Last-Modified=HTTP-date Примером его использования является Last-Modified:Тю,15 ноября 1994 12:45:26 по Гринвичу.</target>
        </trans-unit>
        <trans-unit id="a6eb1d27a3336049ef780463edbd186c94593ceb" translate="yes" xml:space="preserve">
          <source>The &quot;Location&quot; header field is used in some responses to refer to a
   specific resource in relation to the response.  The type of
   relationship is defined by the combination of request method and
   status code semantics.

     Location = URI-reference

   The field value consists of a single URI-reference.  When it has the
   form of a relative reference (&lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-4.2&quot;&gt;[RFC3986], Section&amp;nbsp;4.2&lt;/a&gt;), the final
   value is computed by resolving it against the effective request URI
   (&lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-5&quot;&gt;[RFC3986], Section&amp;nbsp;5&lt;/a&gt;).

   For 201 (Created) responses, the Location value refers to the primary
   resource created by the request.  For 3xx (Redirection) responses,
   the Location value refers to the preferred target resource for
   automatically redirecting the request.

   If the Location value provided in a 3xx (Redirection) response does
   not have a fragment component, a user agent MUST process the
   redirection as if the value inherits the fragment component of the
   URI reference used to generate the request target (i.e., the
   redirection inherits the original reference's fragment, if any).

   For example, a GET request generated for the URI reference
   &quot;http://www.example.org/~tim&quot; might result in a 303 (See Other)
   response containing the header field:

     Location: /People.html#tim

   which suggests that the user agent redirect to
   &quot;http://www.example.org/People.html#tim&quot; 

   Likewise, a GET request generated for the URI reference
   &quot;http://www.example.org/index.html#larry&quot; might result in a 301
   (Moved Permanently) response containing the header field:

     Location: http://www.example.net/index.html

   which suggests that the user agent redirect to
   &quot;http://www.example.net/index.html#larry&quot;, preserving the original
   fragment identifier.

   There are circumstances in which a fragment identifier in a Location
   value would not be appropriate.  For example, the Location header
   field in a 201 (Created) response is supposed to provide a URI that
   is specific to the created resource.

      Note: Some recipients attempt to recover from Location fields that
      are not valid URI references.  This specification does not mandate
      or define such processing, but does allow it for the sake of
      robustness.

      Note: The Content-Location header field (&lt;a href=&quot;#section-3.1.4.2&quot;&gt;Section 3.1.4.2&lt;/a&gt;) differs
      from Location in that the Content-Location refers to the most
      specific resource corresponding to the enclosed representation.
      It is therefore possible for a response to contain both the
      Location and Content-Location header fields.</source>
          <target state="translated">Поле заголовка &amp;laquo;Местоположение&amp;raquo; используется в некоторых ответах для ссылки на конкретный ресурс по отношению к ответу. Тип связи определяется комбинацией метода запроса и семантики кода состояния. Местоположение = URI-ссылка Значение поля состоит из единственной URI-ссылки. Когда он имеет форму относительной ссылки ( &lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-4.2&quot;&gt;[RFC3986], раздел 4.2&lt;/a&gt; ), окончательное значение вычисляется путем сопоставления его с эффективным URI запроса ( &lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-5&quot;&gt;[RFC3986], раздел 5&lt;/a&gt;). Для ответов 201 (Создано) значение Location относится к основному ресурсу, созданному запросом. Для ответов 3xx (перенаправление) значение Location относится к предпочтительному целевому ресурсу для автоматического перенаправления запроса. Если значение Location, указанное в ответе 3xx (перенаправление), не имеет компонента фрагмента, пользовательский агент ДОЛЖЕН обработать перенаправление, как если бы значение наследует компонент фрагмента ссылки URI, используемой для генерации цели запроса (т. Е. Перенаправление наследует фрагмент исходной ссылки, если есть). Например, запрос GET, созданный для ссылки URI &amp;laquo;http://www.example.org/~tim&amp;raquo;, может привести к ответу 303 (см. Другое), содержащему поле заголовка: Location: / People.html # tim, который предполагает, что пользовательский агент перенаправляет на &quot;http://www.example.org/People.html#tim&quot;. Аналогично, запрос GET, созданный для ссылки URI &quot;http://www.example.org/index .html # larry &quot;может привести к ответу 301 (перемещено навсегда), содержащему поле заголовка: Location: http://www.example.net/index.html, который предполагает, что пользовательский агент перенаправляет на&quot; http: // www. example.net/index.html#larry &quot;с сохранением исходного идентификатора фрагмента. Бывают обстоятельства, при которых идентификатор фрагмента в значении Location не подходит. Например, поле заголовка Location в ответе 201 (Created) должно предоставлять URI, специфичный для созданного ресурса. Примечание:Некоторые получатели пытаются восстановить из полей Location, которые не являются допустимыми ссылками URI. Эта спецификация не требует и не определяет такую ​​обработку, но разрешает ее в целях надежности. Примечание. Поле заголовка Content-Location (&lt;a href=&quot;#section-3.1.4.2&quot;&gt;Раздел 3.1.4.2&lt;/a&gt; ) отличается от Location тем, что Content-Location относится к наиболее конкретному ресурсу, соответствующему вложенному представлению. Следовательно, ответ может содержать как поля заголовка Location, так и поля Content-Location.</target>
        </trans-unit>
        <trans-unit id="74bdc0b34c81dec67352f90c99efe73d9563e534" translate="yes" xml:space="preserve">
          <source>The &quot;Max-Forwards&quot; header field provides a mechanism with the TRACE
   (&lt;a href=&quot;#section-4.3.8&quot;&gt;Section 4.3.8&lt;/a&gt;) and OPTIONS (&lt;a href=&quot;#section-4.3.7&quot;&gt;Section 4.3.7&lt;/a&gt;) request methods to limit
   the number of times that the request is forwarded by proxies.  This
   can be useful when the client is attempting to trace a request that
   appears to be failing or looping mid-chain.

     Max-Forwards = 1*DIGIT

   The Max-Forwards value is a decimal integer indicating the remaining
   number of times this request message can be forwarded.

   Each intermediary that receives a TRACE or OPTIONS request containing
   a Max-Forwards header field MUST check and update its value prior to
   forwarding the request.  If the received value is zero (0), the
   intermediary MUST NOT forward the request; instead, the intermediary
   MUST respond as the final recipient.  If the received Max-Forwards
   value is greater than zero, the intermediary MUST generate an updated
   Max-Forwards field in the forwarded message with a field-value that
   is the lesser of a) the received value decremented by one (1) or b)
   the recipient's maximum supported value for Max-Forwards.

   A recipient MAY ignore a Max-Forwards header field received with any
   other request methods.</source>
          <target state="translated">Поле заголовка &quot;Max-Forwards&quot; обеспечивает механизм с TRACE ( &lt;a href=&quot;#section-4.3.8&quot;&gt;раздел 4.3.8&lt;/a&gt; ) и OPTIONS ( &lt;a href=&quot;#section-4.3.7&quot;&gt;раздел 4.3.7).&lt;/a&gt;) методы запроса, чтобы ограничить количество раз, когда запрос пересылается прокси. Это может быть полезно, когда клиент пытается отследить запрос, который, по-видимому, не работает или зацикливается в середине цепочки. Max-Forwards = 1 * DIGIT Значение Max-Forwards представляет собой десятичное целое число, указывающее оставшееся количество раз, когда это сообщение запроса может быть переадресовано. Каждый посредник, который получает запрос TRACE или OPTIONS, содержащий поле заголовка Max-Forwards, ДОЛЖЕН проверить и обновить его значение перед пересылкой запроса. Если полученное значение равно нулю (0), посредник НЕ ДОЛЖЕН пересылать запрос; вместо этого посредник ДОЛЖЕН отвечать как конечный получатель. Если полученное значение Max-Forwards больше нуля,посредник ДОЛЖЕН сгенерировать обновленное поле Max-Forwards в пересылаемом сообщении со значением поля, которое является меньшим из a) полученного значения, уменьшенного на единицу (1) или b) максимального поддерживаемого значения получателя для Max-Forwards. Получатель МОЖЕТ игнорировать поле заголовка Max-Forwards, полученное с помощью любых других методов запроса.</target>
        </trans-unit>
        <trans-unit id="62a3d127d32e2961eab7613512f025a99727d041" translate="yes" xml:space="preserve">
          <source>The &quot;Message Headers&quot; registry has been updated with the following
   permanent registrations:

   +-------------------+----------+----------+-----------------+
   | Header Field Name | Protocol | Status   | Reference       |
   +-------------------+----------+----------+-----------------+
   | Accept            | http     | standard | &lt;a href=&quot;#section-5.3.2&quot;&gt;Section 5.3.2&lt;/a&gt;   |
   | Accept-Charset    | http     | standard | &lt;a href=&quot;#section-5.3.3&quot;&gt;Section 5.3.3&lt;/a&gt;   |
   | Accept-Encoding   | http     | standard | &lt;a href=&quot;#section-5.3.4&quot;&gt;Section 5.3.4&lt;/a&gt;   |
   | Accept-Language   | http     | standard | &lt;a href=&quot;#section-5.3.5&quot;&gt;Section 5.3.5&lt;/a&gt;   |
   | Allow             | http     | standard | &lt;a href=&quot;#section-7.4.1&quot;&gt;Section 7.4.1&lt;/a&gt;   |
   | Content-Encoding  | http     | standard | &lt;a href=&quot;#section-3.1.2.2&quot;&gt;Section 3.1.2.2&lt;/a&gt; |
   | Content-Language  | http     | standard | &lt;a href=&quot;#section-3.1.3.2&quot;&gt;Section 3.1.3.2&lt;/a&gt; |
   | Content-Location  | http     | standard | &lt;a href=&quot;#section-3.1.4.2&quot;&gt;Section 3.1.4.2&lt;/a&gt; |
   | Content-Type      | http     | standard | &lt;a href=&quot;#section-3.1.1.5&quot;&gt;Section 3.1.1.5&lt;/a&gt; |
   | Date              | http     | standard | &lt;a href=&quot;#section-7.1.1.2&quot;&gt;Section 7.1.1.2&lt;/a&gt; |
   | Expect            | http     | standard | &lt;a href=&quot;#section-5.1.1&quot;&gt;Section 5.1.1&lt;/a&gt;   |
   | From              | http     | standard | &lt;a href=&quot;#section-5.5.1&quot;&gt;Section 5.5.1&lt;/a&gt;   |
   | Location          | http     | standard | &lt;a href=&quot;#section-7.1.2&quot;&gt;Section 7.1.2&lt;/a&gt;   |
   | Max-Forwards      | http     | standard | &lt;a href=&quot;#section-5.1.2&quot;&gt;Section 5.1.2&lt;/a&gt;   |
   | MIME-Version      | http     | standard | &lt;a href=&quot;#appendix-A.1&quot;&gt;Appendix A.1&lt;/a&gt;    |
   | Referer           | http     | standard | &lt;a href=&quot;#section-5.5.2&quot;&gt;Section 5.5.2&lt;/a&gt;   |
   | Retry-After       | http     | standard | &lt;a href=&quot;#section-7.1.3&quot;&gt;Section 7.1.3&lt;/a&gt;   |
   | Server            | http     | standard | &lt;a href=&quot;#section-7.4.2&quot;&gt;Section 7.4.2&lt;/a&gt;   |
   | User-Agent        | http     | standard | &lt;a href=&quot;#section-5.5.3&quot;&gt;Section 5.5.3&lt;/a&gt;   |
   | Vary              | http     | standard | &lt;a href=&quot;#section-7.1.4&quot;&gt;Section 7.1.4&lt;/a&gt;   |
   +-------------------+----------+----------+-----------------+

   The change controller for the above registrations is: &quot;IETF
   (iesg@ietf.org) - Internet Engineering Task Force&quot;.</source>
          <target state="translated">В реестр &amp;laquo;Заголовки сообщений&amp;raquo; добавлены следующие постоянные регистрации: + ------------------- + ---------- + --- ------- + ----------------- + | Имя поля заголовка | Протокол | Статус | Справка | + ------------------- + ---------- + ---------- + ------- ---------- + | Принять | http | стандарт | &lt;a href=&quot;#section-5.3.2&quot;&gt;Раздел 5.3.2&lt;/a&gt; | | Accept-Charset | http | стандарт | &lt;a href=&quot;#section-5.3.3&quot;&gt;Раздел 5.3.3&lt;/a&gt; | | Принять-кодирование | http | стандарт | &lt;a href=&quot;#section-5.3.4&quot;&gt;Раздел 5.3.4&lt;/a&gt; | | Accept-Language | http | стандарт | &lt;a href=&quot;#section-5.3.5&quot;&gt;Раздел 5.3.5&lt;/a&gt; | | Разрешить | http | стандарт | &lt;a href=&quot;#section-7.4.1&quot;&gt;Раздел 7.4.1&lt;/a&gt; | | Content-Encoding | http | стандарт | &lt;a href=&quot;#section-3.1.2.2&quot;&gt;Раздел 3.1.2.2&lt;/a&gt;| | Content-Language | http | стандарт | &lt;a href=&quot;#section-3.1.3.2&quot;&gt;Раздел 3.1.3.2&lt;/a&gt; | | Content-Location | http | стандарт | &lt;a href=&quot;#section-3.1.4.2&quot;&gt;Раздел 3.1.4.2&lt;/a&gt; | | Content-Type | http | стандарт | &lt;a href=&quot;#section-3.1.1.5&quot;&gt;Раздел 3.1.1.5&lt;/a&gt; | | Дата | http | стандарт | &lt;a href=&quot;#section-7.1.1.2&quot;&gt;Раздел 7.1.1.2&lt;/a&gt; | | Ожидайте | http | стандарт | &lt;a href=&quot;#section-5.1.1&quot;&gt;Раздел 5.1.1&lt;/a&gt; | | От | http | стандарт | &lt;a href=&quot;#section-5.5.1&quot;&gt;Раздел 5.5.1&lt;/a&gt; | | Расположение | http | стандарт | &lt;a href=&quot;#section-7.1.2&quot;&gt;Раздел 7.1.2&lt;/a&gt; | | Макс-Форвардс | http | стандарт | &lt;a href=&quot;#section-5.1.2&quot;&gt;Раздел 5.1.2&lt;/a&gt; | | MIME-версия | http | стандарт | &lt;a href=&quot;#appendix-A.1&quot;&gt;Приложение A.1&lt;/a&gt; | | Referer | http | стандарт | &lt;a href=&quot;#section-5.5.2&quot;&gt;Раздел 5.5.2&lt;/a&gt; | | Retry-After | http | стандарт | &lt;a href=&quot;#section-7.1.3&quot;&gt;Раздел 7.1.3&lt;/a&gt; | | Сервер | http | стандарт | &lt;a href=&quot;#section-7.4.2&quot;&gt;Раздел 7.4.2&lt;/a&gt; | | User-Agent | http | стандарт | &lt;a href=&quot;#section-5.5.3&quot;&gt;Раздел 5.5.3&lt;/a&gt; | | Вары | http | стандарт | &lt;a href=&quot;#section-7.1.4&quot;&gt;Раздел 7.1.4&lt;/a&gt; | + ------------------- + ---------- + ---------- + ------- ---------- + Контроллер изменений для вышеуказанных регистраций: &amp;laquo;IETF (iesg@ietf.org) - Инженерная группа Интернета&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="17017ddede4b2983af658e0ef12536aeaa0acb5a" translate="yes" xml:space="preserve">
          <source>The &quot;Pragma&quot; header field allows backwards compatibility with
   HTTP/1.0 caches, so that clients can specify a &quot;no-cache&quot; request
   that they will understand (as Cache-Control was not defined until
   HTTP/1.1).  When the Cache-Control header field is also present and
   understood in a request, Pragma is ignored.

   In HTTP/1.0, Pragma was defined as an extensible field for
   implementation-specified directives for recipients.  This
   specification deprecates such extensions to improve interoperability.

     Pragma           = 1#pragma-directive
     pragma-directive = &quot;no-cache&quot; / extension-pragma
     extension-pragma = token [ &quot;=&quot; ( token / quoted-string ) ]

   When the Cache-Control header field is not present in a request,
   caches MUST consider the no-cache request pragma-directive as having
   the same effect as if &quot;Cache-Control: no-cache&quot; were present (see
   &lt;a href=&quot;#section-5.2.1&quot;&gt;Section 5.2.1&lt;/a&gt;).

   When sending a no-cache request, a client ought to include both the
   pragma and cache-control directives, unless Cache-Control: no-cache
   is purposefully omitted to target other Cache-Control response
   directives at HTTP/1.1 caches.  For example:

     GET / HTTP/1.1
     Host: www.example.com
     Cache-Control: max-age=30
     Pragma: no-cache

   will constrain HTTP/1.1 caches to serve a response no older than 30
   seconds, while precluding implementations that do not understand
   Cache-Control from serving a cached response.

      Note: Because the meaning of &quot;Pragma: no-cache&quot; in responses is
      not specified, it does not provide a reliable replacement for
      &quot;Cache-Control: no-cache&quot; in them.</source>
          <target state="translated">Поле заголовка &amp;laquo;Pragma&amp;raquo; обеспечивает обратную совместимость с кешами HTTP / 1.0, так что клиенты могут указать запрос &amp;laquo;без кеширования&amp;raquo;, который они будут понимать (поскольку Cache-Control не был определен до HTTP / 1.1). Если поле заголовка Cache-Control также присутствует и понимается в запросе, Pragma игнорируется. В HTTP / 1.0 Pragma была определена как расширяемое поле для директив, определяемых реализацией, для получателей. В данной спецификации такие расширения не рекомендуются для улучшения взаимодействия. Pragma = 1 # директива-директива pragma-directive = &quot;no-cache&quot; / extension-pragma extension-pragma = token [&quot;=&quot; (token / quoted-string)] Когда поле заголовка Cache-Control не присутствует в запросе ,кеши ДОЛЖНЫ рассматривать директиву pragma-директивы no-cache request как имеющую такой же эффект, как если бы &quot;Cache-Control: no-cache&quot; присутствовал (см. &lt;a href=&quot;#section-5.2.1&quot;&gt;Раздел 5.2.1&lt;/a&gt; ). При отправке запроса без кеширования клиент должен включать директивы pragma и cache-control, если только Cache-Control: no-cache специально не пропущен для нацеливания других директив ответа Cache-Control в кешах HTTP / 1.1. Например: GET / HTTP / 1.1 Host: www.example.com Cache-Control: max-age = 30 Pragma: no-cache будет ограничивать кеши HTTP / 1.1, чтобы они обслуживали ответ не старше 30 секунд, исключая реализации, которые не понимают, что Cache-Control обслуживает кешированный ответ. Примечание. Поскольку значение &amp;laquo;Pragma: no-cache&amp;raquo; в ответах не указывается, оно не обеспечивает надежную замену &amp;laquo;Cache-Control: no-cache&amp;raquo; в них.</target>
        </trans-unit>
        <trans-unit id="056fcf2a31c44d11769adceb052cd538bdba3b52" translate="yes" xml:space="preserve">
          <source>The &quot;Proxy-Authenticate&quot; header field consists of at least one
   challenge that indicates the authentication scheme(s) and parameters
   applicable to the proxy for this effective request URI (&lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-5.5&quot;&gt;Section&amp;nbsp;5.5
   of [RFC7230]&lt;/a&gt;).  A proxy MUST send at least one Proxy-Authenticate
   header field in each 407 (Proxy Authentication Required) response
   that it generates.

     Proxy-Authenticate = 1#challenge

   Unlike WWW-Authenticate, the Proxy-Authenticate header field applies
   only to the next outbound client on the response chain.  This is
   because only the client that chose a given proxy is likely to have
   the credentials necessary for authentication.  However, when multiple
   proxies are used within the same administrative domain, such as
   office and regional caching proxies within a large corporate network,
   it is common for credentials to be generated by the user agent and
   passed through the hierarchy until consumed.  Hence, in such a
   configuration, it will appear as if Proxy-Authenticate is being
   forwarded because each proxy will send the same challenge set.

   Note that the parsing considerations for WWW-Authenticate apply to
   this header field as well; see &lt;a href=&quot;#section-4.1&quot;&gt;Section 4.1&lt;/a&gt; for details.</source>
          <target state="translated">Поле заголовка &amp;laquo;Proxy-Authenticate&amp;raquo; состоит как минимум из одного запроса, который указывает схему (схемы) аутентификации и параметры, применимые к прокси для этого действующего URI запроса ( &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-5.5&quot;&gt;раздел 5.5 [RFC7230]&lt;/a&gt;). Прокси-сервер ДОЛЖЕН отправлять по крайней мере одно поле заголовка Proxy-Authenticate в каждом генерируемом им ответе 407 (Proxy Authentication Required). Proxy-Authenticate = 1 # проблема В отличие от WWW-Authenticate, поле заголовка Proxy-Authenticate применяется только к следующему исходящему клиенту в цепочке ответов. Это потому, что только клиент, выбравший данный прокси, скорее всего, будет иметь учетные данные, необходимые для аутентификации. Однако, когда несколько прокси-серверов используются в одном административном домене, например офисные и региональные прокси-серверы кэширования в большой корпоративной сети, учетные данные обычно генерируются пользовательским агентом и передаются по иерархии до тех пор, пока не будут использованы. Следовательно, в такой конфигурацииэто будет выглядеть так, как будто Proxy-Authenticate пересылается, потому что каждый прокси будет отправлять один и тот же набор вызовов. Обратите внимание, что соображения по синтаксическому анализу для WWW-Authenticate также применимы к этому полю заголовка; видеть&lt;a href=&quot;#section-4.1&quot;&gt;&lt;/a&gt;Подробности см. В разделе 4.1 .</target>
        </trans-unit>
        <trans-unit id="4e55a01408a5bfa971888b6023693ae2d37ad3ee" translate="yes" xml:space="preserve">
          <source>The &quot;Proxy-Authorization&quot; header field allows the client to identify
   itself (or its user) to a proxy that requires authentication.  Its
   value consists of credentials containing the authentication
   information of the client for the proxy and/or realm of the resource
   being requested.

     Proxy-Authorization = credentials

   Unlike Authorization, the Proxy-Authorization header field applies
   only to the next inbound proxy that demanded authentication using the
   Proxy-Authenticate field.  When multiple proxies are used in a chain,
   the Proxy-Authorization header field is consumed by the first inbound
   proxy that was expecting to receive credentials.  A proxy MAY relay
   the credentials from the client request to the next proxy if that is
   the mechanism by which the proxies cooperatively authenticate a given
   request.</source>
          <target state="translated">Поле заголовка &quot;Proxy-Authorization&quot; позволяет клиенту идентифицировать себя (или своего пользователя)на прокси,который требует аутентификации.Его значение состоит из учетных данных,содержащих информацию об аутентификации клиента по прокси и/или области запрашиваемого ресурса.Proxy-Authorization=credentials Unlike Authorization,поле заголовка Proxy-Authorization применяется только к следующему входящему прокси,который требует аутентификации с помощью поля Proxy-Authenticate.Когда в цепочке используется несколько прокси,поле заголовка Proxy-Authorization используется первым входящим прокси,который ожидал получить учетные данные.Прокси MAY передает учетные данные из клиентского запроса следующему прокси,если это механизм,с помощью которого прокси совместно аутентифицируют данный запрос.</target>
        </trans-unit>
        <trans-unit id="b718f4bbb4edbfe4ac380e46d4526fcfa5c21c8b" translate="yes" xml:space="preserve">
          <source>The &quot;Range&quot; header field on a GET request modifies the method
   semantics to request transfer of only one or more subranges of the
   selected representation data, rather than the entire selected
   representation data.

     Range = byte-ranges-specifier / other-ranges-specifier
     other-ranges-specifier = other-range-unit &quot;=&quot; other-range-set
     other-range-set = 1*VCHAR

   A server MAY ignore the Range header field.  However, origin servers
   and intermediate caches ought to support byte ranges when possible,
   since Range supports efficient recovery from partially failed
   transfers and partial retrieval of large representations.  A server
   MUST ignore a Range header field received with a request method other
   than GET.

   An origin server MUST ignore a Range header field that contains a
   range unit it does not understand.  A proxy MAY discard a Range
   header field that contains a range unit it does not understand.

   A server that supports range requests MAY ignore or reject a Range
   header field that consists of more than two overlapping ranges, or a
   set of many small ranges that are not listed in ascending order,
   since both are indications of either a broken client or a deliberate
   denial-of-service attack (&lt;a href=&quot;#section-6.1&quot;&gt;Section 6.1&lt;/a&gt;).  A client SHOULD NOT request
   multiple ranges that are inherently less efficient to process and
   transfer than a single range that encompasses the same data.

   A client that is requesting multiple ranges SHOULD list those ranges
   in ascending order (the order in which they would typically be
   received in a complete representation) unless there is a specific
   need to request a later part earlier.  For example, a user agent
   processing a large representation with an internal catalog of parts
   might need to request later parts first, particularly if the
   representation consists of pages stored in reverse order and the user
   agent wishes to transfer one page at a time.

   The Range header field is evaluated after evaluating the precondition
   header fields defined in [&lt;a href=&quot;https://tools.ietf.org/html/rfc7232&quot;&gt;RFC7232&lt;/a&gt;], and only if the result in absence
   of the Range header field would be a 200 (OK) response.  In other
   words, Range is ignored when a conditional GET would result in a 304
   (Not Modified) response. 

   The If-Range header field (&lt;a href=&quot;#section-3.2&quot;&gt;Section 3.2&lt;/a&gt;) can be used as a precondition
   to applying the Range header field.

   If all of the preconditions are true, the server supports the Range
   header field for the target resource, and the specified range(s) are
   valid and satisfiable (as defined in &lt;a href=&quot;#section-2.1&quot;&gt;Section 2.1&lt;/a&gt;), the server SHOULD
   send a 206 (Partial Content) response with a payload containing one
   or more partial representations that correspond to the satisfiable
   ranges requested, as defined in &lt;a href=&quot;#section-4&quot;&gt;Section 4&lt;/a&gt;.

   If all of the preconditions are true, the server supports the Range
   header field for the target resource, and the specified range(s) are
   invalid or unsatisfiable, the server SHOULD send a 416 (Range Not
   Satisfiable) response.</source>
          <target state="translated">Поле заголовка &amp;laquo;Диапазон&amp;raquo; в запросе GET изменяет семантику метода, запрашивая передачу только одного или нескольких поддиапазонов выбранных данных представления, а не всех выбранных данных представления. Диапазон = спецификатор-диапазонов-байтов / спецификатор-других-диапазонов спецификатор-других-диапазонов = другой-диапазон-единиц &quot;=&quot; другой-набор-диапазонов другой-диапазон-набор = 1 * VCHAR Сервер МОЖЕТ игнорировать поле заголовка диапазона. Однако исходные серверы и промежуточные кэши должны поддерживать байтовые диапазоны, когда это возможно, поскольку Range поддерживает эффективное восстановление после частично неудачных передач и частичное извлечение больших представлений. Сервер ДОЛЖЕН игнорировать поле заголовка Range, полученное с помощью метода запроса, отличного от GET.Исходный сервер ДОЛЖЕН игнорировать поле заголовка диапазона, которое содержит непонятную ему единицу диапазона. Прокси-сервер МОЖЕТ отбросить поле заголовка диапазона, которое содержит непонятную ему единицу диапазона. Сервер, поддерживающий запросы диапазона, МОЖЕТ игнорировать или отклонять поле заголовка диапазона, которое состоит из более чем двух перекрывающихся диапазонов, или набор из множества небольших диапазонов, которые не перечислены в порядке возрастания, поскольку оба являются признаком неисправного клиента или преднамеренного атака отказа в обслуживании (поскольку оба являются признаком неисправного клиента или преднамеренной атаки отказа в обслуживании (поскольку оба являются признаком неисправного клиента или преднамеренной атаки отказа в обслуживании (&lt;a href=&quot;#section-6.1&quot;&gt;Раздел 6.1&lt;/a&gt; ). Клиенту НЕ СЛЕДУЕТ запрашивать несколько диапазонов, которые по своей природе менее эффективны для обработки и передачи, чем один диапазон, содержащий одни и те же данные. Клиенту, который запрашивает несколько диапазонов, СЛЕДУЕТ перечислить эти диапазоны в порядке возрастания (порядок, в котором они обычно будут получены в полном представлении), если нет особой необходимости запросить более позднюю часть раньше. Например, пользовательскому агенту, обрабатывающему большое представление с внутренним каталогом частей, может потребоваться сначала запросить более поздние части, особенно если представление состоит из страниц, хранящихся в обратном порядке, и пользовательский агент желает передавать по одной странице за раз. Поле заголовка диапазона оценивается после оценки полей заголовка предварительного условия, определенных в [ &lt;a href=&quot;https://tools.ietf.org/html/rfc7232&quot;&gt;RFC7232&lt;/a&gt;], и только если результатом отсутствия поля заголовка Range будет ответ 200 (OK). Другими словами, Range игнорируется, если условный GET приведет к ответу 304 (Not Modified). Поле заголовка If-Range ( &lt;a href=&quot;#section-3.2&quot;&gt;раздел 3.2&lt;/a&gt; ) можно использовать в качестве предварительного условия для применения поля заголовка Range. Если все предварительные условия верны, сервер поддерживает поле заголовка Range для целевого ресурса, а указанные диапазоны действительны и допустимы (как определено в &lt;a href=&quot;#section-2.1&quot;&gt;разделе 2.1&lt;/a&gt; ), серверу СЛЕДУЕТ отправить ответ 206 (частичное содержимое). с полезной нагрузкой, содержащей одно или несколько частичных представлений, которые соответствуют удовлетворительным запрошенным диапазонам, как определено в &lt;a href=&quot;#section-4&quot;&gt;разделе 4&lt;/a&gt;, Если все предварительные условия верны, сервер поддерживает поле заголовка Range для целевого ресурса, а указанные диапазоны недействительны или неудовлетворительны, серверу СЛЕДУЕТ отправить ответ 416 (Range Not Satisfiable).</target>
        </trans-unit>
        <trans-unit id="1a6f10ce133a2f9215112587238b74cbf177295e" translate="yes" xml:space="preserve">
          <source>The &quot;Referer&quot; [sic] header field allows the user agent to specify a
   URI reference for the resource from which the target URI was obtained
   (i.e., the &quot;referrer&quot;, though the field name is misspelled).  A user
   agent MUST NOT include the fragment and userinfo components of the
   URI reference [&lt;a href=&quot;https://tools.ietf.org/html/rfc3986&quot;&gt;RFC3986&lt;/a&gt;], if any, when generating the Referer field
   value.

     Referer = absolute-URI / partial-URI

   The Referer header field allows servers to generate back-links to
   other resources for simple analytics, logging, optimized caching,
   etc.  It also allows obsolete or mistyped links to be found for
   maintenance.  Some servers use the Referer header field as a means of
   denying links from other sites (so-called &quot;deep linking&quot;) or
   restricting cross-site request forgery (CSRF), but not all requests
   contain it.

   Example:

     Referer: http://www.example.org/hypertext/Overview.html

   If the target URI was obtained from a source that does not have its
   own URI (e.g., input from the user keyboard, or an entry within the
   user's bookmarks/favorites), the user agent MUST either exclude the
   Referer field or send it with a value of &quot;about:blank&quot;.

   The Referer field has the potential to reveal information about the
   request context or browsing history of the user, which is a privacy
   concern if the referring resource's identifier reveals personal
   information (such as an account name) or a resource that is supposed
   to be confidential (such as behind a firewall or internal to a
   secured service).  Most general-purpose user agents do not send the
   Referer header field when the referring resource is a local &quot;file&quot; or
   &quot;data&quot; URI.  A user agent MUST NOT send a Referer header field in an
   unsecured HTTP request if the referring page was received with a
   secure protocol.  See &lt;a href=&quot;#section-9.4&quot;&gt;Section 9.4&lt;/a&gt; for additional security
   considerations. 

   Some intermediaries have been known to indiscriminately remove
   Referer header fields from outgoing requests.  This has the
   unfortunate side effect of interfering with protection against CSRF
   attacks, which can be far more harmful to their users.
   Intermediaries and user agent extensions that wish to limit
   information disclosure in Referer ought to restrict their changes to
   specific edits, such as replacing internal domain names with
   pseudonyms or truncating the query and/or path components.  An
   intermediary SHOULD NOT modify or delete the Referer header field
   when the field value shares the same scheme and host as the request
   target.</source>
          <target state="translated">Поле заголовка &amp;laquo;Referer&amp;raquo; [sic] позволяет пользовательскому агенту указать ссылку URI для ресурса, из которого был получен целевой URI (т. Е. &amp;laquo;Реферер&amp;raquo;, хотя имя поля написано с ошибкой). Пользовательский агент НЕ ДОЛЖЕН включать компоненты фрагмента и информации о пользователе в ссылку URI [ &lt;a href=&quot;https://tools.ietf.org/html/rfc3986&quot;&gt;RFC3986&lt;/a&gt;], если есть, при генерации значения поля Referer. Referer = absolute-URI / partial-URI Поле заголовка Referer позволяет серверам генерировать обратные ссылки на другие ресурсы для простой аналитики, ведения журнала, оптимизированного кэширования и т. Д. Это также позволяет находить устаревшие или ошибочные ссылки для обслуживания. Некоторые серверы используют поле заголовка Referer как средство отклонения ссылок с других сайтов (так называемые &amp;laquo;глубокие ссылки&amp;raquo;) или ограничения подделки межсайтовых запросов (CSRF), но не все запросы содержат его. Пример: Referer: http://www.example.org/hypertext/Overview.html Если целевой URI был получен из источника, не имеющего собственного URI (например, ввод с клавиатуры пользователя или запись в пользовательском закладки / избранное),агент пользователя ДОЛЖЕН либо исключить поле Referer, либо отправить его со значением about: blank. Поле Referer может раскрыть информацию о контексте запроса или истории просмотров пользователя, что является проблемой конфиденциальности, если идентификатор ссылающегося ресурса раскрывает личную информацию (например, имя учетной записи) или ресурс, который предполагается конфиденциальным ( например, за брандмауэром или внутри защищенной службы). Большинство пользовательских агентов общего назначения не отправляют поле заголовка Referer, если ссылающийся ресурс является локальным URI &amp;laquo;файла&amp;raquo; или &amp;laquo;данных&amp;raquo;. Пользовательский агент НЕ ДОЛЖЕН отправлять поле заголовка Referer в незащищенном HTTP-запросе, если ссылающаяся страница была получена с помощью безопасного протокола. ВидетьПоле Referer может раскрыть информацию о контексте запроса или истории просмотров пользователя, что является проблемой конфиденциальности, если идентификатор ссылающегося ресурса раскрывает личную информацию (например, имя учетной записи) или ресурс, который предполагается конфиденциальным ( например, за брандмауэром или внутри защищенной службы). Большинство пользовательских агентов общего назначения не отправляют поле заголовка Referer, если ссылающийся ресурс является локальным URI &amp;laquo;файла&amp;raquo; или &amp;laquo;данных&amp;raquo;. Пользовательский агент НЕ ДОЛЖЕН отправлять поле заголовка Referer в незащищенном HTTP-запросе, если ссылающаяся страница была получена с помощью безопасного протокола. ВидетьПоле Referer может раскрыть информацию о контексте запроса или истории просмотров пользователя, что является проблемой конфиденциальности, если идентификатор ссылающегося ресурса раскрывает личную информацию (например, имя учетной записи) или ресурс, который предполагается конфиденциальным ( например, за брандмауэром или внутри защищенной службы). Большинство пользовательских агентов общего назначения не отправляют поле заголовка Referer, если ссылающийся ресурс является локальным URI &amp;laquo;файла&amp;raquo; или &amp;laquo;данных&amp;raquo;. Пользовательский агент НЕ ДОЛЖЕН отправлять поле заголовка Referer в незащищенном HTTP-запросе, если ссылающаяся страница была получена с помощью безопасного протокола. Видетьs идентификатор раскрывает личную информацию (например, имя учетной записи) или ресурс, который должен быть конфиденциальным (например, за брандмауэром или внутри защищенной службы). Большинство пользовательских агентов общего назначения не отправляют поле заголовка Referer, если ссылающийся ресурс является локальным URI &amp;laquo;файла&amp;raquo; или &amp;laquo;данных&amp;raquo;. Пользовательский агент НЕ ДОЛЖЕН отправлять поле заголовка Referer в незащищенном HTTP-запросе, если ссылающаяся страница была получена с помощью безопасного протокола. Видетьs идентификатор раскрывает личную информацию (например, имя учетной записи) или ресурс, который должен быть конфиденциальным (например, за брандмауэром или внутри защищенной службы). Большинство пользовательских агентов общего назначения не отправляют поле заголовка Referer, если ссылающийся ресурс является локальным URI &amp;laquo;файла&amp;raquo; или &amp;laquo;данных&amp;raquo;. Пользовательский агент НЕ ДОЛЖЕН отправлять поле заголовка Referer в незащищенном HTTP-запросе, если ссылающаяся страница была получена с помощью безопасного протокола. ВидетьПользовательский агент НЕ ДОЛЖЕН отправлять поле заголовка Referer в незащищенном HTTP-запросе, если ссылающаяся страница была получена с помощью безопасного протокола. ВидетьПользовательский агент НЕ ДОЛЖЕН отправлять поле заголовка Referer в незащищенном HTTP-запросе, если ссылающаяся страница была получена с помощью безопасного протокола. Видеть&lt;a href=&quot;#section-9.4&quot;&gt;Раздел 9.4&lt;/a&gt; для дополнительных соображений безопасности. Известно, что некоторые посредники без разбора удаляют поля заголовка Referer из исходящих запросов. У этого есть неприятный побочный эффект, заключающийся в нарушении защиты от CSRF-атак, которые могут быть гораздо более вредными для их пользователей. Посредники и расширения пользовательских агентов, которые хотят ограничить раскрытие информации в Referer, должны ограничить свои изменения конкретными изменениями, такими как замена внутренних доменных имен псевдонимами или усечение компонентов запроса и / или пути. Посреднику НЕ СЛЕДУЕТ изменять или удалять поле заголовка Referer, если значение поля использует ту же схему и хост, что и цель запроса.</target>
        </trans-unit>
        <trans-unit id="d19493afa0fd7d7d38b18500fe6b7e410894e8e6" translate="yes" xml:space="preserve">
          <source>The &quot;Server&quot; header field contains information about the software
   used by the origin server to handle the request, which is often used
   by clients to help identify the scope of reported interoperability
   problems, to work around or tailor requests to avoid particular
   server limitations, and for analytics regarding server or operating
   system use.  An origin server MAY generate a Server field in its
   responses.

     Server = product *( RWS ( product / comment ) )

   The Server field-value consists of one or more product identifiers,
   each followed by zero or more comments (&lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2&quot;&gt;Section&amp;nbsp;3.2 of [RFC7230]&lt;/a&gt;),
   which together identify the origin server software and its
   significant subproducts.  By convention, the product identifiers are
   listed in decreasing order of their significance for identifying the
   origin server software.  Each product identifier consists of a name
   and optional version, as defined in &lt;a href=&quot;#section-5.5.3&quot;&gt;Section 5.5.3&lt;/a&gt;.

   Example:

     Server: CERN/3.0 libwww/2.17

   An origin server SHOULD NOT generate a Server field containing
   needlessly fine-grained detail and SHOULD limit the addition of
   subproducts by third parties.  Overly long and detailed Server field
   values increase response latency and potentially reveal internal
   implementation details that might make it (slightly) easier for
   attackers to find and exploit known security holes.</source>
          <target state="translated">Поле заголовка &amp;laquo;Сервер&amp;raquo; содержит информацию о программном обеспечении, используемом исходным сервером для обработки запроса, которая часто используется клиентами для определения объема сообщаемых проблем совместимости, обхода или адаптации запросов во избежание определенных ограничений сервера, а также для аналитики использования сервера или операционной системы. Исходный сервер МОЖЕТ генерировать поле Server в своих ответах. Server = product * (RWS (product / comment)) Значение поля Server состоит из одного или нескольких идентификаторов продукта, за каждым из которых следует ноль или несколько комментариев ( &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2&quot;&gt;раздел 3.2 [RFC7230]&lt;/a&gt;), которые вместе идентифицируют программное обеспечение исходного сервера и его важные субпродукты. По соглашению идентификаторы продуктов перечислены в порядке убывания их значимости для идентификации программного обеспечения исходного сервера. Каждый идентификатор продукта состоит из названия и необязательной версии, как определено в &lt;a href=&quot;#section-5.5.3&quot;&gt;Разделе 5.5.3&lt;/a&gt; . Пример: Сервер: CERN / 3.0 libwww / 2.17 Исходному серверу НЕ СЛЕДУЕТ создавать поле Сервер, содержащее ненужные мелкие детали, и СЛЕДУЕТ ограничивать добавление субпродуктов третьими сторонами. Слишком длинные и подробные значения полей Server увеличивают задержку ответа и потенциально раскрывают детали внутренней реализации, которые могут (немного) облегчить злоумышленникам поиск и использование известных дыр в безопасности.</target>
        </trans-unit>
        <trans-unit id="bf7a34c8bf8ec710d19c3accad390aa1affece68" translate="yes" xml:space="preserve">
          <source>The &quot;TE&quot; header field in a request indicates what transfer codings,
   besides chunked, the client is willing to accept in response, and
   whether or not the client is willing to accept trailer fields in a
   chunked transfer coding.

   The TE field-value consists of a comma-separated list of transfer
   coding names, each allowing for optional parameters (as described in
   &lt;a href=&quot;#section-4&quot;&gt;Section 4&lt;/a&gt;), and/or the keyword &quot;trailers&quot;.  A client MUST NOT send
   the chunked transfer coding name in TE; chunked is always acceptable
   for HTTP/1.1 recipients.

     TE        = #t-codings
     t-codings = &quot;trailers&quot; / ( transfer-coding [ t-ranking ] )
     t-ranking = OWS &quot;;&quot; OWS &quot;q=&quot; rank
     rank      = ( &quot;0&quot; [ &quot;.&quot; 0*3DIGIT ] )
                / ( &quot;1&quot; [ &quot;.&quot; 0*3(&quot;0&quot;) ] )

   Three examples of TE use are below.

     TE: deflate
     TE:
     TE: trailers, deflate;q=0.5

   The presence of the keyword &quot;trailers&quot; indicates that the client is
   willing to accept trailer fields in a chunked transfer coding, as
   defined in &lt;a href=&quot;#section-4.1.2&quot;&gt;Section 4.1.2&lt;/a&gt;, on behalf of itself and any downstream
   clients.  For requests from an intermediary, this implies that
   either: (a) all downstream clients are willing to accept trailer
   fields in the forwarded response; or, (b) the intermediary will
   attempt to buffer the response on behalf of downstream recipients.
   Note that HTTP/1.1 does not define any means to limit the size of a
   chunked response such that an intermediary can be assured of
   buffering the entire response.

   When multiple transfer codings are acceptable, the client MAY rank
   the codings by preference using a case-insensitive &quot;q&quot; parameter
   (similar to the qvalues used in content negotiation fields, Section 

   5.3.1 of [&lt;a href=&quot;https://tools.ietf.org/html/rfc7231&quot;&gt;RFC7231&lt;/a&gt;]).  The rank value is a real number in the range 0
   through 1, where 0.001 is the least preferred and 1 is the most
   preferred; a value of 0 means &quot;not acceptable&quot;.

   If the TE field-value is empty or if no TE field is present, the only
   acceptable transfer coding is chunked.  A message with no transfer
   coding is always acceptable.

   Since the TE header field only applies to the immediate connection, a
   sender of TE MUST also send a &quot;TE&quot; connection option within the
   Connection header field (&lt;a href=&quot;#section-6.1&quot;&gt;Section 6.1&lt;/a&gt;) in order to prevent the TE
   field from being forwarded by intermediaries that do not support its
   semantics.</source>
          <target state="translated">Поле заголовка &amp;laquo;TE&amp;raquo; в запросе указывает, какие кодировки передачи, помимо фрагментированных, клиент готов принять в ответ, и готов ли клиент принимать поля концевых звеньев в кодировании фрагментированной передачи. Значение поля TE состоит из разделенного запятыми списка имен кодирования передачи, каждое из которых допускает необязательные параметры (как описано в &lt;a href=&quot;#section-4&quot;&gt;Разделе 4.&lt;/a&gt;) и / или ключевое слово &quot;трейлеры&quot;. Клиент НЕ ДОЛЖЕН отправлять кодовое имя фрагментированной передачи в TE; chunked всегда приемлем для получателей HTTP / 1.1. TE = # t-codings t-codings = &quot;трейлеры&quot; / (кодирование передачи [t-рейтинг]) t-rank = OWS &quot;;&quot; OWS &quot;q =&quot; rank rank = (&quot;0&quot; [&quot;.&quot; 0 * 3DIGIT]) / (&quot;1&quot; [&quot;.&quot; 0 * 3 (&quot;0&quot;)]) Ниже приведены три примера использования TE. TE: deflate TE: TE: trailers, deflate; q = 0.5 Наличие ключевого слова &quot;trailers&quot; указывает на то, что клиент готов принять поля трейлеров в кодировке передачи по частям, как определено в &lt;a href=&quot;#section-4.1.2&quot;&gt;Разделе 4.1.2.&lt;/a&gt;, от своего имени и от имени всех нижестоящих клиентов. Для запросов от посредника это означает, что либо: (a) все нижестоящие клиенты готовы принять поля концевых звеньев в перенаправленном ответе; или (b) посредник попытается буферизовать ответ от имени нижестоящих получателей. Обратите внимание, что HTTP / 1.1 не определяет никаких средств для ограничения размера фрагментированного ответа, чтобы посредник мог быть уверен в буферизации всего ответа. Когда допустимо несколько кодировок передачи, клиент МОЖЕТ ранжировать кодировки по предпочтению, используя нечувствительный к регистру параметр &amp;laquo;q&amp;raquo; (аналогично значениям q, используемым в полях согласования содержимого, раздел 5.3.1 [ &lt;a href=&quot;https://tools.ietf.org/html/rfc7231&quot;&gt;RFC7231]&lt;/a&gt;]). Значение ранга представляет собой действительное число в диапазоне от 0 до 1, где 0,001 является наименее предпочтительным, а 1 - наиболее предпочтительным; значение 0 означает &amp;laquo;неприемлемо&amp;raquo;. Если значение поля TE пустое или поле TE отсутствует, единственное допустимое кодирование передачи разбивается на блоки. Сообщение без кодировки передачи всегда приемлемо. Поскольку поле заголовка TE применяется только к непосредственному соединению, отправитель TE ДОЛЖЕН также отправить параметр соединения &amp;laquo;TE&amp;raquo; в поле заголовка соединения ( &lt;a href=&quot;#section-6.1&quot;&gt;раздел 6.1&lt;/a&gt; ), чтобы предотвратить пересылку поля TE посредниками, которые не поддерживают его семантика.</target>
        </trans-unit>
        <trans-unit id="642dca3b33f00cb08595b70f704b7b8a5ca96a77" translate="yes" xml:space="preserve">
          <source>The &quot;Upgrade&quot; header field is intended to provide a simple mechanism
   for transitioning from HTTP/1.1 to some other protocol on the same
   connection.  A client MAY send a list of protocols in the Upgrade
   header field of a request to invite the server to switch to one or
   more of those protocols, in order of descending preference, before
   sending the final response.  A server MAY ignore a received Upgrade
   header field if it wishes to continue using the current protocol on
   that connection.  Upgrade cannot be used to insist on a protocol
   change.

     Upgrade          = 1#protocol

     protocol         = protocol-name [&quot;/&quot; protocol-version]
     protocol-name    = token
     protocol-version = token

   A server that sends a 101 (Switching Protocols) response MUST send an
   Upgrade header field to indicate the new protocol(s) to which the
   connection is being switched; if multiple protocol layers are being
   switched, the sender MUST list the protocols in layer-ascending
   order.  A server MUST NOT switch to a protocol that was not indicated
   by the client in the corresponding request's Upgrade header field.  A 

   server MAY choose to ignore the order of preference indicated by the
   client and select the new protocol(s) based on other factors, such as
   the nature of the request or the current load on the server.

   A server that sends a 426 (Upgrade Required) response MUST send an
   Upgrade header field to indicate the acceptable protocols, in order
   of descending preference.

   A server MAY send an Upgrade header field in any other response to
   advertise that it implements support for upgrading to the listed
   protocols, in order of descending preference, when appropriate for a
   future request.

   The following is a hypothetical example sent by a client:

     GET /hello.txt HTTP/1.1
     Host: www.example.com
     Connection: upgrade
     Upgrade: HTTP/2.0, SHTTP/1.3, IRC/6.9, RTA/x11


   The capabilities and nature of the application-level communication
   after the protocol change is entirely dependent upon the new
   protocol(s) chosen.  However, immediately after sending the 101
   (Switching Protocols) response, the server is expected to continue
   responding to the original request as if it had received its
   equivalent within the new protocol (i.e., the server still has an
   outstanding request to satisfy after the protocol has been changed,
   and is expected to do so without requiring the request to be
   repeated).

   For example, if the Upgrade header field is received in a GET request
   and the server decides to switch protocols, it first responds with a
   101 (Switching Protocols) message in HTTP/1.1 and then immediately
   follows that with the new protocol's equivalent of a response to a
   GET on the target resource.  This allows a connection to be upgraded
   to protocols with the same semantics as HTTP without the latency cost
   of an additional round trip.  A server MUST NOT switch protocols
   unless the received message semantics can be honored by the new
   protocol; an OPTIONS request can be honored by any protocol. 

   The following is an example response to the above hypothetical
   request:

     HTTP/1.1 101 Switching Protocols
     Connection: upgrade
     Upgrade: HTTP/2.0

     [... data stream switches to HTTP/2.0 with an appropriate response
     (as defined by new protocol) to the &quot;GET /hello.txt&quot; request ...]

   When Upgrade is sent, the sender MUST also send a Connection header
   field (&lt;a href=&quot;#section-6.1&quot;&gt;Section 6.1&lt;/a&gt;) that contains an &quot;upgrade&quot; connection option, in
   order to prevent Upgrade from being accidentally forwarded by
   intermediaries that might not implement the listed protocols.  A
   server MUST ignore an Upgrade header field that is received in an
   HTTP/1.0 request.

   A client cannot begin using an upgraded protocol on the connection
   until it has completely sent the request message (i.e., the client
   can't change the protocol it is sending in the middle of a message).
   If a server receives both an Upgrade and an Expect header field with
   the &quot;100-continue&quot; expectation (&lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-5.1.1&quot;&gt;Section&amp;nbsp;5.1.1 of [RFC7231]&lt;/a&gt;), the
   server MUST send a 100 (Continue) response before sending a 101
   (Switching Protocols) response.

   The Upgrade header field only applies to switching protocols on top
   of the existing connection; it cannot be used to switch the
   underlying connection (transport) protocol, nor to switch the
   existing communication to a different connection.  For those
   purposes, it is more appropriate to use a 3xx (Redirection) response
   (&lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-6.4&quot;&gt;Section&amp;nbsp;6.4 of [RFC7231]&lt;/a&gt;).

   This specification only defines the protocol name &quot;HTTP&quot; for use by
   the family of Hypertext Transfer Protocols, as defined by the HTTP
   version rules of &lt;a href=&quot;#section-2.6&quot;&gt;Section 2.6&lt;/a&gt; and future updates to this
   specification.  Additional tokens ought to be registered with IANA
   using the registration procedure defined in &lt;a href=&quot;#section-8.6&quot;&gt;Section 8.6&lt;/a&gt;.</source>
          <target state="translated">Поле заголовка &amp;laquo;Upgrade&amp;raquo; предназначено для обеспечения простого механизма перехода с HTTP / 1.1 на другой протокол в том же соединении. Клиент МОЖЕТ отправить список протоколов в поле заголовка Upgrade запроса, чтобы предложить серверу переключиться на один или несколько из этих протоколов в порядке убывания предпочтений перед отправкой окончательного ответа. Сервер МОЖЕТ игнорировать полученное поле заголовка Upgrade, если он желает продолжить использование текущего протокола в этом соединении. Обновление нельзя использовать для настаивания на изменении протокола. Обновление = 1 # протокол протокол = имя-протокола [&quot;/&quot;версия-протокола] имя-протокола = токен версия-протокол = токен Сервер, который отправляет ответ 101 (протоколы коммутации), ДОЛЖЕН отправить поле заголовка обновления, чтобы указать новый протокол (-ы), на который переключается соединение; если переключаются несколько уровней протокола, отправитель ДОЛЖЕН перечислить протоколы в порядке возрастания уровня. Сервер НЕ ДОЛЖЕН переключаться на протокол, который не был указан клиентом в соответствующем поле заголовка запроса Upgrade. Сервер МОЖЕТ игнорировать порядок предпочтений, указанный клиентом, и выбирать новый протокол (ы) на основе других факторов, таких как характер запроса или текущая нагрузка на сервер. Сервер, который отправляет ответ 426 (требуется обновление), ДОЛЖЕН отправить поле заголовка обновления, чтобы указать допустимые протоколы,в порядке убывания предпочтений. Сервер МОЖЕТ отправить поле заголовка Upgrade в любом другом ответе, чтобы объявить, что он реализует поддержку обновления до перечисленных протоколов, в порядке убывания предпочтений, когда это необходимо для будущего запроса. Ниже приводится гипотетический пример, отправленный клиентом: GET /hello.txt HTTP / 1.1 Host: www.example.com Подключение: обновление Обновление: HTTP / 2.0, SHTTP / 1.3, IRC / 6.9, RTA / x11 Возможности и характер Связь на уровне приложений после изменения протокола полностью зависит от выбранного нового протокола (ов). Однако сразу после отправки ответа 101 (протоколы переключения) ожидается, что сервер продолжит отвечать на исходный запрос, как если бы он получил его эквивалент в новом протоколе (т. Е.сервер все еще имеет невыполненный запрос для удовлетворения после изменения протокола, и ожидается, что он сделает это, не требуя повторения запроса). Например, если поле заголовка Upgrade получено в запросе GET, и сервер решает переключить протоколы, он сначала отвечает сообщением 101 (Switching Protocols) в HTTP / 1.1, а затем сразу же следует за ним с эквивалентом ответа для нового протокола. в GET на целевом ресурсе. Это позволяет модернизировать соединение до протоколов с той же семантикой, что и HTTP, без дополнительных затрат на задержку в обоих направлениях. Сервер НЕ ДОЛЖЕН переключать протоколы, если семантика полученного сообщения не может быть учтена новым протоколом; запрос OPTIONS может выполняться любым протоколом.Ниже приведен пример ответа на вышеупомянутый гипотетический запрос: HTTP / 1.1 101 Подключение протоколов переключения: обновление Обновление: HTTP / 2.0 [... поток данных переключается на HTTP / 2.0 с соответствующим ответом (как определено новым протоколом) на Запрос &quot;GET /hello.txt&quot; ...] При отправке обновления отправитель ДОЛЖЕН также отправить поле заголовка соединения (&lt;a href=&quot;#section-6.1&quot;&gt;Раздел 6.1&lt;/a&gt; ), который содержит опцию подключения &amp;laquo;обновление&amp;raquo;, чтобы предотвратить случайную переадресацию обновления посредниками, которые могут не реализовать перечисленные протоколы. Сервер ДОЛЖЕН игнорировать поле заголовка обновления, полученное в запросе HTTP / 1.0. Клиент не может начать использовать обновленный протокол в соединении, пока он полностью не отправит сообщение запроса (т. Е. Клиент не может изменить протокол, который он отправляет в середине сообщения). Если сервер получает поля заголовка Upgrade и Expect с ожиданием &amp;laquo;100-continue&amp;raquo; ( &lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-5.1.1&quot;&gt;раздел 5.1.1 [RFC7231])&lt;/a&gt;), сервер ДОЛЖЕН отправить ответ 100 (Продолжить) перед отправкой ответа 101 (Протоколы переключения). Поле заголовка Upgrade применяется только к протоколам переключения поверх существующего соединения; его нельзя использовать для переключения базового (транспортного) протокола соединения или переключения существующего соединения на другое соединение. Для этих целей более целесообразно использовать ответ 3xx (перенаправление) ( &lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-6.4&quot;&gt;раздел 6.4 [RFC7231]&lt;/a&gt; ). Эта спецификация определяет только имя протокола &amp;laquo;HTTP&amp;raquo; для использования семейством протоколов передачи гипертекста, как определено правилами версии HTTP &lt;a href=&quot;#section-2.6&quot;&gt;раздела 2.6&lt;/a&gt; и будущими обновлениями этой спецификации. Дополнительные токены должны быть зарегистрированы в IANA с использованием процедуры регистрации, определенной в&lt;a href=&quot;#section-8.6&quot;&gt;Раздел 8.6&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cca24e17d2817ed4fdcf6d3f466ac894c19b3c68" translate="yes" xml:space="preserve">
          <source>The &quot;User-Agent&quot; header field contains information about the user
   agent originating the request, which is often used by servers to help
   identify the scope of reported interoperability problems, to work
   around or tailor responses to avoid particular user agent
   limitations, and for analytics regarding browser or operating system
   use.  A user agent SHOULD send a User-Agent field in each request
   unless specifically configured not to do so.

     User-Agent = product *( RWS ( product / comment ) )

   The User-Agent field-value consists of one or more product
   identifiers, each followed by zero or more comments (&lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2&quot;&gt;Section&amp;nbsp;3.2 of
   [RFC7230]&lt;/a&gt;), which together identify the user agent software and its
   significant subproducts.  By convention, the product identifiers are
   listed in decreasing order of their significance for identifying the
   user agent software.  Each product identifier consists of a name and
   optional version.

     product         = token [&quot;/&quot; product-version]
     product-version = token

   A sender SHOULD limit generated product identifiers to what is
   necessary to identify the product; a sender MUST NOT generate
   advertising or other nonessential information within the product
   identifier.  A sender SHOULD NOT generate information in
   product-version that is not a version identifier (i.e., successive
   versions of the same product name ought to differ only in the
   product-version portion of the product identifier).

   Example:

     User-Agent: CERN-LineMode/2.15 libwww/2.17b3 

   A user agent SHOULD NOT generate a User-Agent field containing
   needlessly fine-grained detail and SHOULD limit the addition of
   subproducts by third parties.  Overly long and detailed User-Agent
   field values increase request latency and the risk of a user being
   identified against their wishes (&quot;fingerprinting&quot;).

   Likewise, implementations are encouraged not to use the product
   tokens of other implementations in order to declare compatibility
   with them, as this circumvents the purpose of the field.  If a user
   agent masquerades as a different user agent, recipients can assume
   that the user intentionally desires to see responses tailored for
   that identified user agent, even if they might not work as well for
   the actual user agent being used.</source>
          <target state="translated">Поле заголовка &amp;laquo;User-Agent&amp;raquo; содержит информацию о пользовательском агенте, отправляющем запрос, которая часто используется серверами, чтобы помочь определить объем обнаруженных проблем совместимости, обойти или адаптировать ответы, чтобы избежать определенных ограничений пользовательского агента, а также для аналитики. относительно использования браузера или операционной системы. Пользовательский агент ДОЛЖЕН отправлять поле User-Agent в каждом запросе, если специально не настроено для этого. User-Agent = product * (RWS (product / comment)) Значение поля User-Agent состоит из одного или нескольких идентификаторов продукта, за каждым из которых следует ноль или несколько комментариев ( &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2&quot;&gt;раздел 3.2 [RFC7230]&lt;/a&gt;), которые вместе идентифицируют программное обеспечение пользовательского агента и его важные субпродукты. По соглашению идентификаторы продуктов перечислены в порядке убывания их значимости для идентификации программного обеспечения пользовательского агента. Каждый идентификатор продукта состоит из названия и необязательной версии. product = token [&quot;/&quot; product-version] product-version = token Отправителю СЛЕДУЕТ ограничить сгенерированные идентификаторы продукта тем, что необходимо для идентификации продукта; отправитель НЕ ДОЛЖЕН генерировать рекламу или другую несущественную информацию в идентификаторе продукта. Отправителю НЕ СЛЕДУЕТ генерировать информацию в product-version, которая не является идентификатором версии (т. Е. Последовательные версии одного и того же продукта должны отличаться только частью product-version идентификатора продукта). Пример:User-Agent: CERN-LineMode / 2.15 libwww / 2.17b3 Пользовательскому агенту НЕ СЛЕДУЕТ генерировать поле User-Agent, содержащее ненужные мелкие детали, и СЛЕДУЕТ ограничивать добавление субпродуктов третьими сторонами. Слишком длинные и подробные значения полей User-Agent увеличивают задержку запроса и риск того, что пользователь будет идентифицирован против его желания (&amp;laquo;снятие отпечатков пальцев&amp;raquo;). Аналогичным образом, реализациям рекомендуется не использовать токены продуктов других реализаций, чтобы декларировать совместимость с ними, поскольку это обходит цель поля. Если пользовательский агент маскируется под другого пользовательского агента, получатели могут предположить, что пользователь намеренно желает видеть ответы, адаптированные для этого идентифицированного пользовательского агента, даже если они могут не работать так же хорошо для реального используемого пользовательского агента.CERN-LineMode / 2.15 libwww / 2.17b3 Пользовательский агент НЕ ДОЛЖЕН генерировать поле User-Agent, содержащее ненужные мелкие детали, и ДОЛЖЕН ограничивать добавление субпродуктов третьими сторонами. Слишком длинные и подробные значения полей User-Agent увеличивают задержку запроса и риск того, что пользователь будет идентифицирован против его желания (&amp;laquo;снятие отпечатков пальцев&amp;raquo;). Аналогичным образом, реализациям рекомендуется не использовать токены продуктов других реализаций, чтобы заявить о совместимости с ними, поскольку это обходит цель поля. Если пользовательский агент маскируется под другого пользовательского агента, получатели могут предположить, что пользователь намеренно желает видеть ответы, адаптированные для этого идентифицированного пользовательского агента, даже если они могут не работать так же хорошо для реального используемого пользовательского агента.CERN-LineMode / 2.15 libwww / 2.17b3 Пользовательский агент НЕ ДОЛЖЕН генерировать поле User-Agent, содержащее ненужные мелкие детали, и ДОЛЖЕН ограничивать добавление субпродуктов третьими сторонами. Слишком длинные и подробные значения полей User-Agent увеличивают задержку запроса и риск того, что пользователь будет идентифицирован против его желания (&amp;laquo;снятие отпечатков пальцев&amp;raquo;). Аналогичным образом, реализациям рекомендуется не использовать токены продуктов других реализаций, чтобы декларировать совместимость с ними, поскольку это обходит цель поля. Если пользовательский агент маскируется под другого пользовательского агента, получатели могут предположить, что пользователь намеренно желает видеть ответы, адаптированные для этого идентифицированного пользовательского агента, даже если они могут не работать так же хорошо для реального используемого пользовательского агента.17b3 Пользовательскому агенту НЕ СЛЕДУЕТ создавать поле User-Agent, содержащее ненужные мелкие детали, и СЛЕДУЕТ ограничивать добавление субпродуктов третьими сторонами. Слишком длинные и подробные значения полей User-Agent увеличивают задержку запроса и риск того, что пользователь будет идентифицирован против его желания (&amp;laquo;снятие отпечатков пальцев&amp;raquo;). Аналогичным образом, реализациям рекомендуется не использовать токены продуктов других реализаций, чтобы заявить о совместимости с ними, поскольку это обходит цель поля. Если пользовательский агент маскируется под другого пользовательского агента, получатели могут предположить, что пользователь намеренно желает видеть ответы, адаптированные для этого идентифицированного пользовательского агента, даже если они могут не работать так же хорошо для реального используемого пользовательского агента.17b3 Пользовательскому агенту НЕ СЛЕДУЕТ создавать поле User-Agent, содержащее ненужные мелкие детали, и СЛЕДУЕТ ограничивать добавление субпродуктов третьими сторонами. Слишком длинные и подробные значения полей User-Agent увеличивают задержку запроса и риск того, что пользователь будет идентифицирован против его желания (&amp;laquo;снятие отпечатков пальцев&amp;raquo;). Аналогичным образом, реализациям рекомендуется не использовать токены продуктов других реализаций, чтобы заявить о совместимости с ними, поскольку это обходит цель поля. Если пользовательский агент маскируется под другого пользовательского агента, получатели могут предположить, что пользователь намеренно желает видеть ответы, адаптированные для этого идентифицированного пользовательского агента, даже если они могут не работать так же хорошо для реального используемого пользовательского агента.</target>
        </trans-unit>
        <trans-unit id="6bcae230b73127da4f18a6ca33ad2072b01f296a" translate="yes" xml:space="preserve">
          <source>The &quot;Vary&quot; header field in a response describes what parts of a
   request message, aside from the method, Host header field, and
   request target, might influence the origin server's process for
   selecting and representing this response.  The value consists of
   either a single asterisk (&quot;*&quot;) or a list of header field names
   (case-insensitive).

     Vary = &quot;*&quot; / 1#field-name

   A Vary field value of &quot;*&quot; signals that anything about the request
   might play a role in selecting the response representation, possibly
   including elements outside the message syntax (e.g., the client's
   network address).  A recipient will not be able to determine whether
   this response is appropriate for a later request without forwarding
   the request to the origin server.  A proxy MUST NOT generate a Vary
   field with a &quot;*&quot; value.

   A Vary field value consisting of a comma-separated list of names
   indicates that the named request header fields, known as the
   selecting header fields, might have a role in selecting the
   representation.  The potential selecting header fields are not
   limited to those defined by this specification.

   For example, a response that contains

     Vary: accept-encoding, accept-language

   indicates that the origin server might have used the request's
   Accept-Encoding and Accept-Language fields (or lack thereof) as
   determining factors while choosing the content for this response.

   An origin server might send Vary with a list of fields for two
   purposes:

   1.  To inform cache recipients that they MUST NOT use this response
       to satisfy a later request unless the later request has the same
       values for the listed fields as the original request (&lt;a href=&quot;https://tools.ietf.org/html/rfc7234#section-4.1&quot;&gt;Section&amp;nbsp;4.1
       of [RFC7234]&lt;/a&gt;).  In other words, Vary expands the cache key
       required to match a new request to the stored cache entry. 

   2.  To inform user agent recipients that this response is subject to
       content negotiation (&lt;a href=&quot;#section-5.3&quot;&gt;Section 5.3&lt;/a&gt;) and that a different
       representation might be sent in a subsequent request if
       additional parameters are provided in the listed header fields
       (proactive negotiation).

   An origin server SHOULD send a Vary header field when its algorithm
   for selecting a representation varies based on aspects of the request
   message other than the method and request target, unless the variance
   cannot be crossed or the origin server has been deliberately
   configured to prevent cache transparency.  For example, there is no
   need to send the Authorization field name in Vary because reuse
   across users is constrained by the field definition (&lt;a href=&quot;https://tools.ietf.org/html/rfc7235#section-4.2&quot;&gt;Section&amp;nbsp;4.2 of
   [RFC7235]&lt;/a&gt;).  Likewise, an origin server might use Cache-Control
   directives (&lt;a href=&quot;https://tools.ietf.org/html/rfc7234#section-5.2&quot;&gt;Section&amp;nbsp;5.2 of [RFC7234]&lt;/a&gt;) to supplant Vary if it
   considers the variance less significant than the performance cost of
   Vary's impact on caching.</source>
          <target state="translated">Поле заголовка &amp;laquo;Vary&amp;raquo; в ответе описывает, какие части сообщения запроса, помимо метода, поля заголовка хоста и цели запроса, могут влиять на процесс исходного сервера для выбора и представления этого ответа. Значение состоит либо из одной звездочки (&amp;laquo;*&amp;raquo;), либо из списка имен полей заголовка (без учета регистра). Vary = &quot;*&quot; / 1 # field-name Значение поля Vary &quot;*&quot; сигнализирует о том, что что-либо в запросе может играть роль в выборе представления ответа, возможно, включая элементы вне синтаксиса сообщения (например, сетевой адрес клиента) , Получатель не сможет определить, подходит ли этот ответ для более позднего запроса, не перенаправив запрос на исходный сервер.Прокси-сервер НЕ ДОЛЖЕН создавать поле Vary со значением &amp;laquo;*&amp;raquo;. Значение поля Vary, состоящее из списка имен, разделенных запятыми, указывает, что именованные поля заголовка запроса, известные как поля заголовка выбора, могут иметь значение при выборе представления. Возможные поля заголовка выбора не ограничиваются теми, которые определены в этой спецификации. Например, ответ, содержащий Vary: accept-encoding, accept-language, указывает, что исходный сервер мог использовать поля запроса Accept-Encoding и Accept-Language (или их отсутствие) в качестве определяющих факторов при выборе содержимого для этого ответа. Исходный сервер может отправлять Vary со списком полей для двух целей: 1.Чтобы проинформировать получателей кеша, что они НЕ ДОЛЖНЫ использовать этот ответ для удовлетворения более позднего запроса, если только более поздний запрос не имеет тех же значений для перечисленных полей, что и исходный запрос (&lt;a href=&quot;https://tools.ietf.org/html/rfc7234#section-4.1&quot;&gt;Раздел 4.1 [RFC7234]&lt;/a&gt; ). Другими словами, Vary расширяет ключ кеша, необходимый для сопоставления нового запроса с сохраненной записью кеша. 2. Чтобы проинформировать получателей пользовательского агента, что этот ответ подлежит согласованию содержимого ( &lt;a href=&quot;#section-5.3&quot;&gt;Раздел 5.3.&lt;/a&gt;) и что другое представление может быть отправлено в последующем запросе, если в перечисленных полях заголовка указаны дополнительные параметры (упреждающее согласование). Исходный сервер ДОЛЖЕН отправить поле заголовка Vary, когда его алгоритм выбора представления зависит от аспектов сообщения запроса, отличных от метода и цели запроса, за исключением случаев, когда отклонение не может быть пересечено или исходный сервер был специально настроен для предотвращения прозрачности кеша. , Например, нет необходимости отправлять имя поля авторизации в Vary, потому что повторное использование пользователями ограничено определением поля ( &lt;a href=&quot;https://tools.ietf.org/html/rfc7235#section-4.2&quot;&gt;раздел 4.2 [RFC7235]&lt;/a&gt; ). Аналогично, &lt;a href=&quot;https://tools.ietf.org/html/rfc7234#section-5.2&quot;&gt;исходный&lt;/a&gt; сервер может использовать директивы Cache-Control ( раздел 5.2 [RFC7234]), чтобы заменить Vary, если он считает, что отклонение менее значимо, чем затраты на производительность из-за влияния Vary на кеширование.</target>
        </trans-unit>
        <trans-unit id="316863bc1d70a96f56b104e2287a2491c7e69bb0" translate="yes" xml:space="preserve">
          <source>The &quot;Via&quot; header field indicates the presence of intermediate
   protocols and recipients between the user agent and the server (on
   requests) or between the origin server and the client (on responses),
   similar to the &quot;Received&quot; header field in email (&lt;a href=&quot;https://tools.ietf.org/html/rfc5322#section-3.6.7&quot;&gt;Section&amp;nbsp;3.6.7 of
   [RFC5322]&lt;/a&gt;).  Via can be used for tracking message forwards, avoiding
   request loops, and identifying the protocol capabilities of senders
   along the request/response chain.

     Via = 1#( received-protocol RWS received-by [ RWS comment ] )

     received-protocol = [ protocol-name &quot;/&quot; ] protocol-version
                         ; see &lt;a href=&quot;#section-6.7&quot;&gt;Section 6.7&lt;/a&gt;
     received-by       = ( uri-host [ &quot;:&quot; port ] ) / pseudonym
     pseudonym         = token

   Multiple Via field values represent each proxy or gateway that has
   forwarded the message.  Each intermediary appends its own information
   about how the message was received, such that the end result is
   ordered according to the sequence of forwarding recipients. 

   A proxy MUST send an appropriate Via header field, as described
   below, in each message that it forwards.  An HTTP-to-HTTP gateway
   MUST send an appropriate Via header field in each inbound request
   message and MAY send a Via header field in forwarded response
   messages.

   For each intermediary, the received-protocol indicates the protocol
   and protocol version used by the upstream sender of the message.
   Hence, the Via field value records the advertised protocol
   capabilities of the request/response chain such that they remain
   visible to downstream recipients; this can be useful for determining
   what backwards-incompatible features might be safe to use in
   response, or within a later request, as described in &lt;a href=&quot;#section-2.6&quot;&gt;Section 2.6&lt;/a&gt;.
   For brevity, the protocol-name is omitted when the received protocol
   is HTTP.

   The received-by portion of the field value is normally the host and
   optional port number of a recipient server or client that
   subsequently forwarded the message.  However, if the real host is
   considered to be sensitive information, a sender MAY replace it with
   a pseudonym.  If a port is not provided, a recipient MAY interpret
   that as meaning it was received on the default TCP port, if any, for
   the received-protocol.

   A sender MAY generate comments in the Via header field to identify
   the software of each recipient, analogous to the User-Agent and
   Server header fields.  However, all comments in the Via field are
   optional, and a recipient MAY remove them prior to forwarding the
   message.

   For example, a request message could be sent from an HTTP/1.0 user
   agent to an internal proxy code-named &quot;fred&quot;, which uses HTTP/1.1 to
   forward the request to a public proxy at p.example.net, which
   completes the request by forwarding it to the origin server at
   www.example.com.  The request received by www.example.com would then
   have the following Via header field:

     Via: 1.0 fred, 1.1 p.example.net

   An intermediary used as a portal through a network firewall SHOULD
   NOT forward the names and ports of hosts within the firewall region
   unless it is explicitly enabled to do so.  If not enabled, such an
   intermediary SHOULD replace each received-by host of any host behind
   the firewall by an appropriate pseudonym for that host. 

   An intermediary MAY combine an ordered subsequence of Via header
   field entries into a single such entry if the entries have identical
   received-protocol values.  For example,

     Via: 1.0 ricky, 1.1 ethel, 1.1 fred, 1.0 lucy

   could be collapsed to

     Via: 1.0 ricky, 1.1 mertz, 1.0 lucy

   A sender SHOULD NOT combine multiple entries unless they are all
   under the same organizational control and the hosts have already been
   replaced by pseudonyms.  A sender MUST NOT combine entries that have
   different received-protocol values.</source>
          <target state="translated">Поле заголовка &amp;laquo;Via&amp;raquo; указывает на наличие промежуточных протоколов и получателей между пользовательским агентом и сервером (по запросам) или между исходным сервером и клиентом (по ответам), аналогично полю заголовка &amp;laquo;Получено&amp;raquo; в электронной почте ( &lt;a href=&quot;https://tools.ietf.org/html/rfc5322#section-3.6.7&quot;&gt;раздел 3.6.7 из [RFC5322]&lt;/a&gt; ). Via может использоваться для отслеживания пересылки сообщений, предотвращения зацикливания запросов и определения возможностей протокола отправителей в цепочке запросов / ответов. Via = 1 # (полученный-протокол RWS получен [комментарий RWS]) полученный-протокол = [имя-протокола &quot;/&quot;] версия-протокола; см. &lt;a href=&quot;#section-6.7&quot;&gt;раздел 6.7&lt;/a&gt; полученный-кем = (uri-host [&quot;:&quot; порт]) / псевдоним псевдоним = токен. Несколько значений поля Via представляют каждый прокси или шлюз, который переадресовал сообщение. Каждый посредник добавляет свою собственную информацию о том, как было получено сообщение, так что конечный результат упорядочивается в соответствии с последовательностью пересылаемых получателей. Прокси-сервер ДОЛЖЕН отправлять соответствующее поле заголовка Via, как описано ниже, в каждом пересылаемом сообщении. Шлюз HTTP-HTTP ДОЛЖЕН отправлять соответствующее поле заголовка Via в каждом входящем сообщении запроса и МОЖЕТ отправлять поле заголовка Via в пересылаемых ответных сообщениях. Для каждого посредника полученный протокол указывает протокол и версию протокола, используемую восходящим отправителем сообщения. Следовательно,значение поля Via записывает анонсированные возможности протокола цепочки запросов / ответов, чтобы они оставались видимыми для получателей в нисходящем направлении; это может быть полезно для определения того, какие обратно несовместимые функции могут быть безопасными для использования в ответе или в более позднем запросе, как описано в&lt;a href=&quot;#section-2.6&quot;&gt;Раздел 2.6&lt;/a&gt;, Для краткости имя протокола опускается, если полученным протоколом является HTTP. Полученная часть значения поля обычно представляет собой хост и необязательный номер порта сервера-получателя или клиента, который впоследствии переадресовал сообщение. Однако, если реальный хост считается конфиденциальной информацией, отправитель МОЖЕТ заменить ее псевдонимом. Если порт не указан, получатель МОЖЕТ интерпретировать это как означающее, что он был получен на TCP-порт по умолчанию, если таковой имеется, для принятого протокола. Отправитель МОЖЕТ создавать комментарии в поле заголовка Via, чтобы идентифицировать программное обеспечение каждого получателя, аналогично полям заголовка User-Agent и Server. Однако все комментарии в поле Via являются необязательными, и получатель МОЖЕТ удалить их перед пересылкой сообщения. Например,сообщение запроса может быть отправлено от пользовательского агента HTTP / 1.0 на внутренний прокси-сервер с кодовым именем &amp;laquo;fred&amp;raquo;, который использует HTTP / 1.1 для пересылки запроса на общедоступный прокси-сервер на p.example.net, который завершает запрос путем пересылки его на исходный сервер www.example.com. Запрос, полученный www.example.com, будет иметь следующее поле заголовка Via: Via: 1.0 fred, 1.1 p.example.net Посреднику, используемому в качестве портала через сетевой брандмауэр, НЕ СЛЕДУЕТ пересылать имена и порты хостов в пределах область межсетевого экрана, если это явно не разрешено. Если этот параметр не включен, такой посредник ДОЛЖЕН заменить каждый полученный хост любого хоста за брандмауэром соответствующим псевдонимом для этого хоста.Посредник МОЖЕТ объединить упорядоченную подпоследовательность записей поля заголовка Via в одну такую ​​запись, если записи имеют идентичные значения протокола приема. Например, Via: 1.0 ricky, 1.1 ethel, 1.1 fred, 1.0 lucy может быть свернут до Via: 1.0 ricky, 1.1 mertz, 1.0 lucy Отправителю НЕ СЛЕДУЕТ объединять несколько записей, если они все не находятся под одним и тем же организационным контролем и хосты не имеют уже заменены псевдонимами. Отправитель НЕ ДОЛЖЕН объединять записи с разными значениями протокола приема.0 lucy Отправителю НЕ СЛЕДУЕТ объединять несколько записей, если все они не находятся под одним и тем же организационным контролем и хосты уже заменены псевдонимами. Отправитель НЕ ДОЛЖЕН объединять записи с разными значениями протокола приема.0 lucy Отправителю НЕ СЛЕДУЕТ объединять несколько записей, если все они не находятся под одним и тем же организационным контролем и хосты уже заменены псевдонимами. Отправитель НЕ ДОЛЖЕН объединять записи с разными значениями протокола приема.</target>
        </trans-unit>
        <trans-unit id="9867a861577bfb6c81de727cf7f2304bd8cb13b4" translate="yes" xml:space="preserve">
          <source>The &quot;WWW-Authenticate&quot; header field indicates the authentication
   scheme(s) and parameters applicable to the target resource.

     WWW-Authenticate = 1#challenge

   A server generating a 401 (Unauthorized) response MUST send a
   WWW-Authenticate header field containing at least one challenge.  A
   server MAY generate a WWW-Authenticate header field in other response
   messages to indicate that supplying credentials (or different
   credentials) might affect the response.

   A proxy forwarding a response MUST NOT modify any WWW-Authenticate
   fields in that response.

   User agents are advised to take special care in parsing the field
   value, as it might contain more than one challenge, and each
   challenge can contain a comma-separated list of authentication
   parameters.  Furthermore, the header field itself can occur multiple
   times.

   For instance:

     WWW-Authenticate: Newauth realm=&quot;apps&quot;, type=1,
                       title=&quot;Login to \&quot;apps\&quot;&quot;, Basic realm=&quot;simple&quot;

   This header field contains two challenges; one for the &quot;Newauth&quot;
   scheme with a realm value of &quot;apps&quot;, and two additional parameters
   &quot;type&quot; and &quot;title&quot;, and another one for the &quot;Basic&quot; scheme with a
   realm value of &quot;simple&quot;.

      Note: The challenge grammar production uses the list syntax as
      well.  Therefore, a sequence of comma, whitespace, and comma can
      be considered either as applying to the preceding challenge, or to
      be an empty entry in the list of challenges.  In practice, this
      ambiguity does not affect the semantics of the header field value
      and thus is harmless.</source>
          <target state="translated">Поле заголовка &quot;WWW-Аутентификация&quot; указывает на схему(и)аутентификации и параметры,применимые к целевому ресурсу.WWW-аутентификация=1#вызов Сервер,генерирующий ответ 401 (Неавторизованный)ДОЛЖЕН посылать поле заголовка &quot;WWW-аутентификация&quot;,содержащее,по крайней мере,один вызов.Сервер MAY генерирует поле заголовка WWW-аутентификации в других ответных сообщениях,чтобы показать,что предоставление учетных данных (или различных учетных данных)может повлиять на ответ.Прокси-сервер,пересылающий ответ,НЕ ДОЛЖЕН изменять какие-либо поля WWW-Аутентификации в этом ответе.Пользовательским агентам рекомендуется проявлять особую осторожность при разборе значения поля,так как оно может содержать более одного вызова,и каждый вызов может содержать разделенный запятыми список параметров аутентификации.Более того,само поле заголовка может встречаться несколько раз.Например:WWW-аутентификация:Newauth realm=&quot;apps&quot;,type=1,title=&quot;Login to \&quot;apps\&quot;&quot;,Basic realm=&quot;simple&quot; Это поле заголовка содержит два вызова;один для схемы &quot;Newauth&quot; со значением области &quot;apps&quot;,и два дополнительных параметра &quot;type&quot; и &quot;title&quot;,и другой для схемы &quot;Basic&quot; со значением области &quot;simple&quot;.Примечание:При изготовлении грамматики задач также используется синтаксис списка.Поэтому последовательность из запятой,пробела и запятой может рассматриваться либо как относящаяся к предыдущему запросу,либо как пустая запись в списке вызовов.На практике эта неоднозначность не влияет на семантику значения поля заголовка и,следовательно,является безобидной.</target>
        </trans-unit>
        <trans-unit id="010ba1a9ad73a34753b90adf3c72f63de66025ee" translate="yes" xml:space="preserve">
          <source>The &quot;Warning&quot; header field is used to carry additional information
   about the status or transformation of a message that might not be
   reflected in the status code.  This information is typically used to
   warn about possible incorrectness introduced by caching operations or
   transformations applied to the payload of the message. 

   Warnings can be used for other purposes, both cache-related and
   otherwise.  The use of a warning, rather than an error status code,
   distinguishes these responses from true failures.

   Warning header fields can in general be applied to any message,
   however some warn-codes are specific to caches and can only be
   applied to response messages.

     Warning       = 1#warning-value

     warning-value = warn-code SP warn-agent SP warn-text
                                           [ SP warn-date ]

     warn-code  = 3DIGIT
     warn-agent = ( uri-host [ &quot;:&quot; port ] ) / pseudonym
                     ; the name or pseudonym of the server adding
                     ; the Warning header field, for use in debugging
                     ; a single &quot;-&quot; is recommended when agent unknown
     warn-text  = quoted-string
     warn-date  = DQUOTE HTTP-date DQUOTE

   Multiple warnings can be generated in a response (either by the
   origin server or by a cache), including multiple warnings with the
   same warn-code number that only differ in warn-text.

   A user agent that receives one or more Warning header fields SHOULD
   inform the user of as many of them as possible, in the order that
   they appear in the response.  Senders that generate multiple Warning
   header fields are encouraged to order them with this user agent
   behavior in mind.  A sender that generates new Warning header fields
   MUST append them after any existing Warning header fields.

   Warnings are assigned three digit warn-codes.  The first digit
   indicates whether the Warning is required to be deleted from a stored
   response after validation:

   o  1xx warn-codes describe the freshness or validation status of the
      response, and so they MUST be deleted by a cache after validation.
      They can only be generated by a cache when validating a cached
      entry, and MUST NOT be generated in any other situation.

   o  2xx warn-codes describe some aspect of the representation that is
      not rectified by a validation (for example, a lossy compression of
      the representation) and they MUST NOT be deleted by a cache after
      validation, unless a full response is sent, in which case they
      MUST be. 

   If a sender generates one or more 1xx warn-codes in a message to be
   sent to a recipient known to implement only HTTP/1.0, the sender MUST
   include in each corresponding warning-value a warn-date that matches
   the Date header field in the message.  For example:

     HTTP/1.1 200 OK
     Date: Sat, 25 Aug 2012 23:34:45 GMT
     Warning: 112 - &quot;network down&quot; &quot;Sat, 25 Aug 2012 23:34:45 GMT&quot;


   Warnings have accompanying warn-text that describes the error, e.g.,
   for logging.  It is advisory only, and its content does not affect
   interpretation of the warn-code.

   If a recipient that uses, evaluates, or displays Warning header
   fields receives a warn-date that is different from the Date value in
   the same message, the recipient MUST exclude the warning-value
   containing that warn-date before storing, forwarding, or using the
   message.  This allows recipients to exclude warning-values that were
   improperly retained after a cache validation.  If all of the
   warning-values are excluded, the recipient MUST exclude the Warning
   header field as well.

   The following warn-codes are defined by this specification, each with
   a recommended warn-text in English, and a description of its meaning.
   The procedure for defining additional warn codes is described in
   &lt;a href=&quot;#section-7.2.1&quot;&gt;Section 7.2.1&lt;/a&gt;.</source>
          <target state="translated">Поле заголовка &amp;laquo;Предупреждение&amp;raquo; используется для переноса дополнительной информации о состоянии или преобразовании сообщения, которая может не отражаться в коде состояния. Эта информация обычно используется для предупреждения о возможной некорректности, вызванной операциями кэширования или преобразованиями, применяемыми к полезной нагрузке сообщения. Предупреждения могут использоваться для других целей, как связанных с кешем, так и других. Использование предупреждения, а не кода состояния ошибки, отличает эти ответы от истинных сбоев. Поля заголовка предупреждения обычно могут применяться к любому сообщению, однако некоторые коды предупреждений относятся к кэшам и могут применяться только к ответным сообщениям.Предупреждение = 1 # значение-предупреждения значение-предупреждения = код-предупреждения SP-агент-предупреждения SP-текст-предупреждения [Дата-предупреждения-SP] код-предупреждения = 3DIGIT-агент-предупреждения = (uri-host [&quot;:&quot; порт]) / псевдоним ; имя или псевдоним добавляемого сервера; поле заголовка &amp;laquo;Предупреждение&amp;raquo; для использования при отладке; один знак &amp;laquo;-&amp;raquo; рекомендуется, когда агент unknown warn-text = quoted-string warn-date = DQUOTE HTTP-date DQUOTE В ответе (либо исходным сервером, либо кешем) может быть сгенерировано несколько предупреждений, включая несколько предупреждений с один и тот же номер кода предупреждения, который отличается только текстом предупреждения. Агент пользователя, который получает одно или несколько полей заголовка предупреждения, ДОЛЖЕН информировать пользователя о как можно большем количестве из них,в том порядке, в котором они появляются в ответе. Отправителям, которые генерируют несколько полей заголовка Warning, рекомендуется упорядочивать их с учетом этого поведения пользовательского агента. Отправитель, который генерирует новые поля заголовка предупреждения, ДОЛЖЕН добавить их после любых существующих полей заголовка предупреждения. Предупреждениям присваиваются трехзначные коды предупреждений. Первая цифра указывает, требуется ли удалить предупреждение из сохраненного ответа после проверки: o 1xx коды предупреждений описывают актуальность или статус проверки ответа, и поэтому они ДОЛЖНЫ быть удалены из кэша после проверки. Они могут быть сгенерированы кешем только при проверке кэшированной записи и НЕ ДОЛЖНЫ создаваться ни в какой другой ситуации.o Коды предупреждений 2xx описывают некоторые аспекты представления, которые не исправляются проверкой (например, сжатие представления с потерями), и они НЕ ДОЛЖНЫ быть удалены из кеша после проверки, если не отправлен полный ответ, в котором случае они ДОЛЖНЫ быть. Если отправитель генерирует один или несколько кодов предупреждения 1xx в сообщении для отправки получателю, о котором известно, что он реализует только HTTP / 1.0, отправитель ДОЛЖЕН включить в каждое соответствующее значение предупреждения дату предупреждения, которая соответствует полю заголовка Date в сообщение. Например: HTTP / 1.1 200 OK Дата: Сб, 25 августа 2012 г. 23:34:45 GMT Предупреждение: 112 - &amp;laquo;сеть не работает&amp;raquo; &amp;laquo;Сб, 25 августа 2012 г. 23:34:45 GMT&amp;raquo; Предупреждения сопровождаются текстом предупреждения, описывающим ошибка, например, для регистрации. Только рекомендательный,и его содержание не влияет на интерпретацию кода предупреждения. Если получатель, который использует, оценивает или отображает поля заголовка предупреждения, получает дату предупреждения, которая отличается от значения даты в том же сообщении, получатель ДОЛЖЕН исключить значение предупреждения, содержащее эту дату предупреждения перед сохранением, пересылкой или использованием сообщение. Это позволяет получателям исключать значения предупреждений, которые были неправильно сохранены после проверки кеша. Если все значения предупреждений исключены, получатель ДОЛЖЕН также исключить поле заголовка предупреждения. В данной спецификации определены следующие коды предупреждений, каждый из которых имеет рекомендуемый текст предупреждения на английском языке и описание его значения. Процедура определения дополнительных кодов предупреждений описана вЕсли получатель, который использует, оценивает или отображает поля заголовка предупреждения, получает дату предупреждения, которая отличается от значения даты в том же сообщении, получатель ДОЛЖЕН исключить значение предупреждения, содержащее эту дату предупреждения перед сохранением, пересылкой или использованием сообщение. Это позволяет получателям исключать значения предупреждений, которые были неправильно сохранены после проверки кеша. Если все значения предупреждений исключены, получатель ДОЛЖЕН также исключить поле заголовка предупреждения. В данной спецификации определены следующие коды предупреждений, каждый из которых имеет рекомендуемый текст предупреждения на английском языке и описание его значения. Процедура определения дополнительных кодов предупреждений описана вЕсли получатель, который использует, оценивает или отображает поля заголовка предупреждения, получает дату предупреждения, которая отличается от значения даты в том же сообщении, получатель ДОЛЖЕН исключить значение предупреждения, содержащее эту дату предупреждения перед сохранением, пересылкой или использованием сообщение. Это позволяет получателям исключать значения предупреждений, которые были неправильно сохранены после проверки кеша. Если все значения предупреждений исключены, получатель ДОЛЖЕН также исключить поле заголовка предупреждения. В данной спецификации определены следующие коды предупреждений, каждый из которых имеет рекомендуемый текст предупреждения на английском языке и описание его значения. Процедура определения дополнительных кодов предупреждений описана вили отображает поля заголовка предупреждения получает дату предупреждения, которая отличается от значения даты в том же сообщении, получатель ДОЛЖЕН исключить значение предупреждения, содержащее эту дату предупреждения, перед сохранением, пересылкой или использованием сообщения. Это позволяет получателям исключать значения предупреждений, которые были неправильно сохранены после проверки кеша. Если все значения предупреждений исключены, получатель ДОЛЖЕН также исключить поле заголовка предупреждения. В данной спецификации определены следующие коды предупреждений, каждый из которых имеет рекомендуемый текст предупреждения на английском языке и описание его значения. Процедура определения дополнительных кодов предупреждений описана вили отображает поля заголовка предупреждения получает дату предупреждения, которая отличается от значения даты в том же сообщении, получатель ДОЛЖЕН исключить значение предупреждения, содержащее эту дату предупреждения, перед сохранением, пересылкой или использованием сообщения. Это позволяет получателям исключать значения предупреждений, которые были неправильно сохранены после проверки кеша. Если все значения предупреждений исключены, получатель ДОЛЖЕН также исключить поле заголовка предупреждения. В данной спецификации определены следующие коды предупреждений, каждый из которых имеет рекомендуемый текст предупреждения на английском языке и описание его значения. Процедура определения дополнительных кодов предупреждений описана вЭто позволяет получателям исключать значения предупреждений, которые были неправильно сохранены после проверки кеша. Если все значения предупреждений исключены, получатель ДОЛЖЕН также исключить поле заголовка предупреждения. В данной спецификации определены следующие коды предупреждений, каждый из которых имеет рекомендуемый текст предупреждения на английском языке и описание его значения. Процедура определения дополнительных кодов предупреждений описана вЭто позволяет получателям исключать значения предупреждений, которые были неправильно сохранены после проверки кеша. Если все значения предупреждений исключены, получатель ДОЛЖЕН также исключить поле заголовка предупреждения. В данной спецификации определены следующие коды предупреждений, каждый из которых имеет рекомендуемый текст предупреждения на английском языке и описание его значения. Процедура определения дополнительных кодов предупреждений описана в &lt;a href=&quot;#section-7.2.1&quot;&gt;Раздел 7.2.1&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="995d6efd3e0c66344c9a13f1a4baae749a8853bd" translate="yes" xml:space="preserve">
          <source>The &quot;app:categories&quot; element provides a list of the categories that
   can be applied to the members of a Collection.  See &lt;a href=&quot;#section-7.2.1&quot;&gt;Section 7.2.1&lt;/a&gt; for
   the detailed definition of app:categories.

   The server MAY reject attempts to create or store members whose
   categories are not present in its categories list.  A Collection that
   indicates the category set is open SHOULD NOT reject otherwise
   acceptable members whose categories are not in its categories list.
   The absence of an app:categories element means that the category
   handling of the Collection is unspecified.  A &quot;fixed&quot; category list
   that contains zero categories indicates the Collection does not
   accept category data.</source>
          <target state="translated">Элемент &amp;laquo;приложение: категории&amp;raquo; предоставляет список категорий, которые могут применяться к членам Коллекции. См. &lt;a href=&quot;#section-7.2.1&quot;&gt;Раздел 7.2.1&lt;/a&gt; для подробного определения приложения: категории. Сервер МОЖЕТ отклонить попытки создать или сохранить участников, категории которых отсутствуют в его списке категорий. Коллекции, которая указывает, что набор категорий открыт, НЕ СЛЕДУЕТ отклонять в противном случае приемлемые члены, категории которых не входят в ее список категорий. Отсутствие элемента app: Categories означает, что обработка категорий в Коллекции не указана. &amp;laquo;Фиксированный&amp;raquo; список категорий, содержащий нулевые категории, означает, что Коллекция не принимает данные категории.</target>
        </trans-unit>
        <trans-unit id="2862e4bbac71e75234686e57a0b3abd15c18ac9a" translate="yes" xml:space="preserve">
          <source>The &quot;app:collection&quot; element describes a Collection.  The app:
   collection element MUST contain one atom:title element.

   The app:collection element MAY contain any number of app:accept
   elements, indicating the types of representations accepted by the
   Collection.  The order of such elements is not significant.

   The app:collection element MAY contain any number of app:categories
   elements.

   appCollection =
      element app:collection {
         appCommonAttributes,
         attribute href { atomURI  },
         ( atomTitle
           &amp;amp; appAccept*
           &amp;amp; appCategories*
           &amp;amp; extensionSansTitleElement* )
      }</source>
          <target state="translated">Элемент &amp;laquo;app: collection&amp;raquo; описывает коллекцию. Элемент app: collection ДОЛЖЕН содержать один элемент atom: title. Элемент app: collection МОЖЕТ содержать любое количество элементов app: accept, указывающих типы представлений, принимаемых Collection. Порядок таких элементов не имеет значения. Элемент app: collection МОЖЕТ содержать любое количество элементов app: category. appCollection = element app: collection {appCommonAttributes, attribute href {atomURI}, (atomTitle &amp;amp; appAccept * &amp;amp; appCategories * &amp;amp; extensionSansTitleElement *)}</target>
        </trans-unit>
        <trans-unit id="4f92b1bc26a73cb4af47cd72166377ea0b007dfa" translate="yes" xml:space="preserve">
          <source>The &quot;app:edited&quot; element is a Date construct (as defined by
   [&lt;a href=&quot;https://tools.ietf.org/html/rfc4287&quot;&gt;RFC4287&lt;/a&gt;]), whose content indicates the last time an Entry was
   edited.  If the entry has not been edited yet, the content indicates
   the time it was created.  Atom Entry elements in Collection Documents
   SHOULD contain one app:edited element, and MUST NOT contain more than
   one.

   appEdited = element app:edited ( atomDateConstruct )

   The server SHOULD change the value of this element every time an
   Entry Resource or an associated Media Resource has been edited.</source>
          <target state="translated">Элемент &amp;laquo;app: edited&amp;raquo; - это конструкция Date (как определено в [ &lt;a href=&quot;https://tools.ietf.org/html/rfc4287&quot;&gt;RFC4287&lt;/a&gt; ]), содержимое которой указывает, когда в последний раз редактировалась запись. Если запись еще не редактировалась, в содержимом указывается время ее создания. Элементы Atom Entry в документах коллекции ДОЛЖНЫ содержать один элемент app: edited и НЕ ДОЛЖНЫ содержать более одного. appEdited = element app: edited (atomDateConstruct) Серверу СЛЕДУЕТ изменять значение этого элемента каждый раз, когда редактируется входной ресурс или связанный медиаресурс.</target>
        </trans-unit>
        <trans-unit id="68f4c11acf63f6cde7cb7434dea073f5a30ec84b" translate="yes" xml:space="preserve">
          <source>The &quot;atom:title&quot; element is defined in [&lt;a href=&quot;https://tools.ietf.org/html/rfc4287&quot;&gt;RFC4287&lt;/a&gt;] and gives a human-
   readable title for the Collection.</source>
          <target state="translated">Элемент &quot;atom: title&quot; определен в [ &lt;a href=&quot;https://tools.ietf.org/html/rfc4287&quot;&gt;RFC4287&lt;/a&gt; ] и дает читабельный заголовок для Коллекции.</target>
        </trans-unit>
        <trans-unit id="409b2e89b2d86b6bfc0d29cd3e58e574f2822ac5" translate="yes" xml:space="preserve">
          <source>The &quot;compress&quot; coding is an adaptive Lempel-Ziv-Welch (LZW) coding
   [&lt;a href=&quot;#ref-Welch&quot;&gt;Welch&lt;/a&gt;] that is commonly produced by the UNIX file compression
   program &quot;compress&quot;.  A recipient SHOULD consider &quot;x-compress&quot; to be
   equivalent to &quot;compress&quot;.</source>
          <target state="translated">Кодирование &quot;compress&quot; - это адаптивное кодирование Лемпеля-Зива-Велча (LZW) [ &lt;a href=&quot;#ref-Welch&quot;&gt;Welch&lt;/a&gt; ], которое обычно создается программой сжатия файлов UNIX &quot;compress&quot;. Получатель ДОЛЖЕН рассматривать &amp;laquo;x-compress&amp;raquo; как эквивалент &amp;laquo;compress&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="5450639421b7ec9a5bfb9b3a5351d2c59960ee2f" translate="yes" xml:space="preserve">
          <source>The &quot;data&quot; URL scheme</source>
          <target state="translated">Схема URL-адреса &quot;данных&quot;</target>
        </trans-unit>
        <trans-unit id="7fec5b6deed76c5c2f6df9fc9a93ea6b5f359e93" translate="yes" xml:space="preserve">
          <source>The &quot;deflate&quot; coding is a &quot;zlib&quot; data format [&lt;a href=&quot;https://tools.ietf.org/html/rfc1950&quot;&gt;RFC1950&lt;/a&gt;] containing a
   &quot;deflate&quot; compressed data stream [&lt;a href=&quot;https://tools.ietf.org/html/rfc1951&quot;&gt;RFC1951&lt;/a&gt;] that uses a combination of
   the Lempel-Ziv (LZ77) compression algorithm and Huffman coding.

      Note: Some non-conformant implementations send the &quot;deflate&quot;
      compressed data without the zlib wrapper.</source>
          <target state="translated">Кодирование &amp;laquo;deflate&amp;raquo; - это формат данных &amp;laquo;zlib&amp;raquo; [ &lt;a href=&quot;https://tools.ietf.org/html/rfc1950&quot;&gt;RFC1950&lt;/a&gt; ], содержащий поток сжатых данных &amp;laquo;deflate&amp;raquo; [ &lt;a href=&quot;https://tools.ietf.org/html/rfc1951&quot;&gt;RFC1951&lt;/a&gt; ], в котором используется комбинация алгоритма сжатия Lempel-Ziv (LZ77) и кодирования Хаффмана. Примечание. Некоторые несовместимые реализации отправляют сжатые данные &amp;laquo;deflate&amp;raquo; без оболочки zlib.</target>
        </trans-unit>
        <trans-unit id="18f6fc86dc33b8be8746e1979432c3044e14ee93" translate="yes" xml:space="preserve">
          <source>The &quot;gzip&quot; coding is an LZ77 coding with a 32-bit Cyclic Redundancy
   Check (CRC) that is commonly produced by the gzip file compression
   program [&lt;a href=&quot;https://tools.ietf.org/html/rfc1952&quot;&gt;RFC1952&lt;/a&gt;].  A recipient SHOULD consider &quot;x-gzip&quot; to be
   equivalent to &quot;gzip&quot;.</source>
          <target state="translated">Кодирование &amp;laquo;gzip&amp;raquo; - это кодирование LZ77 с 32-битным циклическим контролем избыточности (CRC), которое обычно создается программой сжатия файлов gzip [ &lt;a href=&quot;https://tools.ietf.org/html/rfc1952&quot;&gt;RFC1952&lt;/a&gt; ]. Получатель ДОЛЖЕН рассматривать &amp;laquo;x-gzip&amp;raquo; как эквивалент &amp;laquo;gzip&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="3da79a4d757a4b703e27456e900e76eca528f808" translate="yes" xml:space="preserve">
          <source>The &quot;http&quot; URI scheme is hereby defined for the purpose of minting
   identifiers according to their association with the hierarchical
   namespace governed by a potential HTTP origin server listening for
   TCP ([&lt;a href=&quot;https://tools.ietf.org/html/rfc0793&quot;&gt;RFC0793&lt;/a&gt;]) connections on a given port.

     http-URI = &quot;http:&quot; &quot;//&quot; authority path-abempty [ &quot;?&quot; query ]
                [ &quot;#&quot; fragment ]

   The origin server for an &quot;http&quot; URI is identified by the authority
   component, which includes a host identifier and optional TCP port
   (&lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-3.2.2&quot;&gt;[RFC3986], Section&amp;nbsp;3.2.2&lt;/a&gt;).  The hierarchical path component and
   optional query component serve as an identifier for a potential
   target resource within that origin server's name space.  The optional
   fragment component allows for indirect identification of a secondary
   resource, independent of the URI scheme, as defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-3.5&quot;&gt;Section&amp;nbsp;3.5 of
   [RFC3986]&lt;/a&gt;.

   A sender MUST NOT generate an &quot;http&quot; URI with an empty host
   identifier.  A recipient that processes such a URI reference MUST
   reject it as invalid.

   If the host identifier is provided as an IP address, the origin
   server is the listener (if any) on the indicated TCP port at that IP
   address.  If host is a registered name, the registered name is an
   indirect identifier for use with a name resolution service, such as
   DNS, to find an address for that origin server.  If the port
   subcomponent is empty or not given, TCP port 80 (the reserved port
   for WWW services) is the default.

   Note that the presence of a URI with a given authority component does
   not imply that there is always an HTTP server listening for
   connections on that host and port.  Anyone can mint a URI.  What the
   authority component determines is who has the right to respond
   authoritatively to requests that target the identified resource.  The
   delegated nature of registered names and IP addresses creates a
   federated namespace, based on control over the indicated host and
   port, whether or not an HTTP server is present.  See &lt;a href=&quot;#section-9.1&quot;&gt;Section 9.1&lt;/a&gt; for
   security considerations related to establishing authority.

   When an &quot;http&quot; URI is used within a context that calls for access to
   the indicated resource, a client MAY attempt access by resolving the
   host to an IP address, establishing a TCP connection to that address
   on the indicated port, and sending an HTTP request message
   (&lt;a href=&quot;#section-3&quot;&gt;Section 3&lt;/a&gt;) containing the URI's identifying data (&lt;a href=&quot;#section-5&quot;&gt;Section 5&lt;/a&gt;) to the
   server.  If the server responds to that request with a non-interim 

   HTTP response message, as described in &lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-6&quot;&gt;Section&amp;nbsp;6 of [RFC7231]&lt;/a&gt;, then
   that response is considered an authoritative answer to the client's
   request.

   Although HTTP is independent of the transport protocol, the &quot;http&quot;
   scheme is specific to TCP-based services because the name delegation
   process depends on TCP for establishing authority.  An HTTP service
   based on some other underlying connection protocol would presumably
   be identified using a different URI scheme, just as the &quot;https&quot;
   scheme (below) is used for resources that require an end-to-end
   secured connection.  Other protocols might also be used to provide
   access to &quot;http&quot; identified resources -- it is only the authoritative
   interface that is specific to TCP.

   The URI generic syntax for authority also includes a deprecated
   userinfo subcomponent (&lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-3.2.1&quot;&gt;[RFC3986], Section&amp;nbsp;3.2.1&lt;/a&gt;) for including user
   authentication information in the URI.  Some implementations make use
   of the userinfo component for internal configuration of
   authentication information, such as within command invocation
   options, configuration files, or bookmark lists, even though such
   usage might expose a user identifier or password.  A sender MUST NOT
   generate the userinfo subcomponent (and its &quot;@&quot; delimiter) when an
   &quot;http&quot; URI reference is generated within a message as a request
   target or header field value.  Before making use of an &quot;http&quot; URI
   reference received from an untrusted source, a recipient SHOULD parse
   for userinfo and treat its presence as an error; it is likely being
   used to obscure the authority for the sake of phishing attacks.</source>
          <target state="translated">Схема URI &amp;laquo;http&amp;raquo; настоящим определена с целью извлечения идентификаторов в соответствии с их ассоциацией с иерархическим пространством имен, управляемым потенциальным &lt;a href=&quot;https://tools.ietf.org/html/rfc0793&quot;&gt;исходным&lt;/a&gt; сервером HTTP, который прослушивает соединения TCP ([ RFC0793 ]) на заданном порту. http-URI = &quot;http:&quot; &quot;//&quot; путь к авторизации-abempty [&quot;?&quot; query] [фрагмент &amp;laquo;#&amp;raquo;] Исходный сервер для URI &amp;laquo;http&amp;raquo; идентифицируется компонентом полномочий, который включает идентификатор хоста и необязательный порт TCP ( &lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-3.2.2&quot;&gt;[RFC3986], раздел 3.2.2&lt;/a&gt;). Компонент иерархического пути и необязательный компонент запроса служат идентификатором потенциального целевого ресурса в пространстве имен исходного сервера. Необязательный компонент фрагмента позволяет косвенно идентифицировать вторичный ресурс, независимо от схемы URI, как определено в &lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-3.5&quot;&gt;разделе 3.5 [RFC3986]&lt;/a&gt;, Отправитель НЕ ДОЛЖЕН генерировать URI &quot;http&quot; с пустым идентификатором хоста. Получатель, обрабатывающий такую ​​ссылку URI, ДОЛЖЕН отклонить ее как недопустимую. Если идентификатор хоста предоставляется как IP-адрес, исходный сервер является слушателем (если есть) на указанном TCP-порту на этом IP-адресе. Если host является зарегистрированным именем, зарегистрированное имя является косвенным идентификатором для использования со службой разрешения имен, такой как DNS, для поиска адреса этого исходного сервера. Если подкомпонент порта пуст или не задан, по умолчанию используется TCP-порт 80 (зарезервированный порт для служб WWW). Обратите внимание, что наличие URI с заданным компонентом полномочий не означает, что всегда существует HTTP-сервер, прослушивающий соединения на этом хосте и порту. Кто угодно может создать URI.Компонент полномочий определяет, кто имеет право авторитетно отвечать на запросы, нацеленные на указанный ресурс. Делегированный характер зарегистрированных имен и IP-адресов создает объединенное пространство имен, основанное на контроле над указанным хостом и портом, независимо от того, присутствует ли HTTP-сервер. Видеть&lt;a href=&quot;#section-9.1&quot;&gt;Раздел 9.1&lt;/a&gt; для соображений безопасности, связанных с установлением полномочий. Когда URI &quot;http&quot; используется в контексте, который требует доступа к указанному ресурсу, клиент МОЖЕТ попытаться получить доступ, преобразовав хост в IP-адрес, установив TCP-соединение с этим адресом на указанный порт и отправив HTTP сообщение запроса ( &lt;a href=&quot;#section-3&quot;&gt;раздел 3&lt;/a&gt; ), содержащее идентификационные данные URI ( &lt;a href=&quot;#section-5&quot;&gt;раздел 5&lt;/a&gt; ) для сервера. Если сервер отвечает на этот запрос сообщением HTTP-ответа, не являющимся промежуточным, как описано в &lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-6&quot;&gt;разделе 6 [RFC7231]&lt;/a&gt;, то этот ответ считается авторитетным ответом на запрос клиента. Хотя HTTP не зависит от транспортного протокола, схема &amp;laquo;http&amp;raquo; специфична для служб на основе TCP, поскольку процесс делегирования имени зависит от TCP для установления полномочий. Служба HTTP, основанная на каком-либо другом базовом протоколе соединения, предположительно будет идентифицирована с использованием другой схемы URI, точно так же, как схема &amp;laquo;https&amp;raquo; (ниже) используется для ресурсов, которым требуется сквозное защищенное соединение. Другие протоколы также могут использоваться для обеспечения доступа к ресурсам, идентифицированным &quot;http&quot; - для TCP характерен только авторитетный интерфейс. Общий синтаксис URI для полномочий также включает устаревший подкомпонент userinfo ( &lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-3.2.1&quot;&gt;[RFC3986], раздел 3.2.1&lt;/a&gt;) для включения информации об аутентификации пользователя в URI. Некоторые реализации используют компонент userinfo для внутренней конфигурации информации аутентификации, например, в параметрах вызова команд, файлах конфигурации или списках закладок, даже если такое использование может раскрыть идентификатор пользователя или пароль. Отправитель НЕ ДОЛЖЕН генерировать подкомпонент userinfo (и его разделитель &amp;laquo;@&amp;raquo;), когда в сообщении создается ссылка на URI &amp;laquo;http&amp;raquo; в качестве значения поля заголовка или цели запроса. Прежде чем использовать ссылку URI &amp;laquo;http&amp;raquo;, полученную из ненадежного источника, получатель ДОЛЖЕН проанализировать информацию о пользователе и рассматривать ее присутствие как ошибку; скорее всего, он используется для сокрытия авторитета в целях фишинговых атак.</target>
        </trans-unit>
        <trans-unit id="e8a58311de89d4c408e7b65f13ca2deebb29dec3" translate="yes" xml:space="preserve">
          <source>The &quot;http&quot; scheme is used to locate network resources via the HTTP
   protocol. This section defines the scheme-specific syntax and
   semantics for http URLs.

   http_URL = &quot;http:&quot; &quot;//&quot; host [ &quot;:&quot; port ] [ abs_path [ &quot;?&quot; query ]]

   If the port is empty or not given, port 80 is assumed. The semantics
   are that the identified resource is located at the server listening
   for TCP connections on that port of that host, and the Request-URI
   for the resource is abs_path (&lt;a href=&quot;#section-5.1.2&quot;&gt;section 5.1.2&lt;/a&gt;). The use of IP addresses
   in URLs SHOULD be avoided whenever possible (see &lt;a href=&quot;https://tools.ietf.org/html/rfc1900&quot;&gt;RFC 1900&lt;/a&gt; [&lt;a href=&quot;#ref-24&quot;&gt;24&lt;/a&gt;]). If
   the abs_path is not present in the URL, it MUST be given as &quot;/&quot; when
   used as a Request-URI for a resource (&lt;a href=&quot;#section-5.1.2&quot;&gt;section 5.1.2&lt;/a&gt;). If a proxy
   receives a host name which is not a fully qualified domain name, it
   MAY add its domain to the host name it received. If a proxy receives
   a fully qualified domain name, the proxy MUST NOT change the host
   name.</source>
          <target state="translated">Схема &amp;laquo;http&amp;raquo; используется для поиска сетевых ресурсов по протоколу HTTP. В этом разделе определяется синтаксис и семантика конкретных схем для URL-адресов http. http_URL = &quot;http:&quot; &quot;//&quot; хост [&quot;:&quot; порт] [abs_path [&quot;?&quot; запрос]] Если порт пуст или не указан, предполагается порт 80. Семантика такова, что идентифицированный ресурс расположен на сервере, который прослушивает TCP-соединения на этом порту этого хоста, а Request-URI для ресурса - это abs_path ( &lt;a href=&quot;#section-5.1.2&quot;&gt;раздел 5.1.2&lt;/a&gt; ). По возможности СЛЕДУЕТ избегать использования IP-адресов в URL-адресах (см. &lt;a href=&quot;https://tools.ietf.org/html/rfc1900&quot;&gt;RFC 1900&lt;/a&gt; [ &lt;a href=&quot;#ref-24&quot;&gt;24&lt;/a&gt; ]). Если abs_path не присутствует в URL-адресе, он ДОЛЖЕН быть указан как &amp;laquo;/&amp;raquo; при использовании в качестве Request-URI для ресурса ( &lt;a href=&quot;#section-5.1.2&quot;&gt;раздел 5.1.2&lt;/a&gt;). Если прокси-сервер получает имя хоста, которое не является полностью определенным доменным именем, он МОЖЕТ добавить свой домен к полученному имени хоста. Если прокси-сервер получает полное доменное имя, он НЕ ДОЛЖЕН изменять имя хоста.</target>
        </trans-unit>
        <trans-unit id="73555a35c2933a1c75aa810e673714fa36744ea0" translate="yes" xml:space="preserve">
          <source>The &quot;https&quot; URI scheme is hereby defined for the purpose of minting
   identifiers according to their association with the hierarchical
   namespace governed by a potential HTTP origin server listening to a
   given TCP port for TLS-secured connections ([&lt;a href=&quot;https://tools.ietf.org/html/rfc5246&quot;&gt;RFC5246&lt;/a&gt;]).

   All of the requirements listed above for the &quot;http&quot; scheme are also
   requirements for the &quot;https&quot; scheme, except that TCP port 443 is the
   default if the port subcomponent is empty or not given, and the user
   agent MUST ensure that its connection to the origin server is secured
   through the use of strong encryption, end-to-end, prior to sending
   the first HTTP request.

     https-URI = &quot;https:&quot; &quot;//&quot; authority path-abempty [ &quot;?&quot; query ]
                 [ &quot;#&quot; fragment ]

   Note that the &quot;https&quot; URI scheme depends on both TLS and TCP for
   establishing authority.  Resources made available via the &quot;https&quot;
   scheme have no shared identity with the &quot;http&quot; scheme even if their 

   resource identifiers indicate the same authority (the same host
   listening to the same TCP port).  They are distinct namespaces and
   are considered to be distinct origin servers.  However, an extension
   to HTTP that is defined to apply to entire host domains, such as the
   Cookie protocol [&lt;a href=&quot;https://tools.ietf.org/html/rfc6265&quot;&gt;RFC6265&lt;/a&gt;], can allow information set by one service
   to impact communication with other services within a matching group
   of host domains.

   The process for authoritative access to an &quot;https&quot; identified
   resource is defined in [&lt;a href=&quot;https://tools.ietf.org/html/rfc2818&quot;&gt;RFC2818&lt;/a&gt;].</source>
          <target state="translated">Схема URI &amp;laquo;https&amp;raquo; настоящим определяется с целью извлечения идентификаторов в соответствии с их ассоциацией с иерархическим пространством имен, управляемым потенциальным исходным сервером HTTP, который прослушивает данный порт TCP для подключений, защищенных TLS ([ &lt;a href=&quot;https://tools.ietf.org/html/rfc5246&quot;&gt;RFC5246&lt;/a&gt;]). Все требования, перечисленные выше для схемы &amp;laquo;http&amp;raquo;, также являются требованиями для схемы &amp;laquo;https&amp;raquo;, за исключением того, что TCP-порт 443 используется по умолчанию, если подкомпонент порта пуст или не задан, и пользовательский агент ДОЛЖЕН гарантировать, что его подключение к исходный сервер защищен с помощью надежного сквозного шифрования перед отправкой первого HTTP-запроса. https-URI = &quot;https:&quot; &quot;//&quot; путь доступа-abempty [&quot;?&quot; query] [фрагмент &amp;laquo;#&amp;raquo;] Обратите внимание, что схема URI &amp;laquo;https&amp;raquo; зависит от TLS и TCP для установления полномочий. Ресурсы, доступные по схеме https, не имеют общего идентификатора с http.схема, даже если их идентификаторы ресурсов указывают одинаковые полномочия (один и тот же хост слушает один и тот же TCP-порт). Это разные пространства имен и считаются отдельными серверами-источниками. Однако расширение HTTP, которое определено для применения ко всем доменам хоста, например протокол Cookie [&lt;a href=&quot;https://tools.ietf.org/html/rfc6265&quot;&gt;RFC6265&lt;/a&gt; ], может позволить информации, установленной одной службой, влиять на связь с другими службами в соответствующей группе доменов хоста. Процесс &lt;a href=&quot;https://tools.ietf.org/html/rfc2818&quot;&gt;авторизованного&lt;/a&gt; доступа к ресурсу с определенным протоколом https определен в [ RFC2818 ].</target>
        </trans-unit>
        <trans-unit id="381425c701e0e7786e14ce1ebe204baefd4cf1f3" translate="yes" xml:space="preserve">
          <source>The &quot;must-revalidate&quot; response directive indicates that once it has
   become stale, a cache MUST NOT use the response to satisfy subsequent
   requests without successful validation on the origin server.

   The must-revalidate directive is necessary to support reliable
   operation for certain protocol features.  In all circumstances a
   cache MUST obey the must-revalidate directive; in particular, if a
   cache cannot reach the origin server for any reason, it MUST generate
   a 504 (Gateway Timeout) response.

   The must-revalidate directive ought to be used by servers if and only
   if failure to validate a request on the representation could result
   in incorrect operation, such as a silently unexecuted financial
   transaction.</source>
          <target state="translated">Директива ответа &quot;must-revalidate&quot; указывает,что после того,как кэш устарел,кэш НЕ ДОЛЖЕН использовать ответ для удовлетворения последующих запросов без успешной проверки на оригинальном сервере.Директива must-revalidate необходима для поддержки надежной работы некоторых функций протокола.Во всех случаях кэш ДОЛЖЕН подчиняться директиве must-revalidate;в частности,если кэш не может по какой-либо причине добраться до сервера-источника,он ДОЛЖЕН сгенерировать ответ 504 (Gateway Timeout).Директива must-revalidate должна использоваться серверами,если и только в том случае,если невыполнение запроса на представлении может привести к некорректной работе,например,к молчаливому неисполнению финансовой транзакции.</target>
        </trans-unit>
        <trans-unit id="c4b6b9fcb971dd4f353272a2f91db7cf9a5b6db0" translate="yes" xml:space="preserve">
          <source>The &quot;no-cache&quot; request directive indicates that a cache MUST NOT use
   a stored response to satisfy the request without successful
   validation on the origin server.</source>
          <target state="translated">Директива запроса &quot;no-cache&quot; указывает,что кэш НЕ ДОЛЖЕН использовать сохраненный ответ для удовлетворения запроса без успешной проверки на исходном сервере.</target>
        </trans-unit>
        <trans-unit id="6e8f6289e5ab1b4d0a53bcb9e1b83dc08f1a97ef" translate="yes" xml:space="preserve">
          <source>The &quot;no-store&quot; request directive indicates that a cache MUST NOT
   store any part of either this request or any response to it.  This
   directive applies to both private and shared caches.  &quot;MUST NOT
   store&quot; in this context means that the cache MUST NOT intentionally
   store the information in non-volatile storage, and MUST make a
   best-effort attempt to remove the information from volatile storage
   as promptly as possible after forwarding it.

   This directive is NOT a reliable or sufficient mechanism for ensuring
   privacy.  In particular, malicious or compromised caches might not
   recognize or obey this directive, and communications networks might
   be vulnerable to eavesdropping.

   Note that if a request containing this directive is satisfied from a
   cache, the no-store request directive does not apply to the already
   stored response.</source>
          <target state="translated">Директива запроса &quot;no-store&quot; указывает,что кэш НЕ ДОЛЖЕН хранить какую-либо часть этого запроса или ответа на него.Эта директива относится как к приватному,так и к общему кэшу.В этом контексте &quot;НЕ хранить&quot; означает,что кэш НЕ ДОЛЖЕН умышленно хранить информацию в энергонезависимом хранилище,и ДОЛЖЕН делать наилучшую попытку удалить информацию из энергонезависимого хранилища как можно быстрее после ее пересылки.Данная директива НЕ является надежным или достаточным механизмом обеспечения конфиденциальности.В частности,вредоносный или скомпрометированный кэш может не распознать эту директиву или не подчиниться ей,а сети связи могут быть уязвимы для подслушивания.Обратите внимание,что если запрос,содержащий эту директиву,удовлетворяется из кэша,то директива no-store request не применяется к уже сохраненному ответу.</target>
        </trans-unit>
        <trans-unit id="94cb482b3050dacf986c6ae2b51caac0dbd9698e" translate="yes" xml:space="preserve">
          <source>The &quot;no-store&quot; response directive indicates that a cache MUST NOT
   store any part of either the immediate request or response.  This
   directive applies to both private and shared caches.  &quot;MUST NOT
   store&quot; in this context means that the cache MUST NOT intentionally
   store the information in non-volatile storage, and MUST make a
   best-effort attempt to remove the information from volatile storage
   as promptly as possible after forwarding it.

   This directive is NOT a reliable or sufficient mechanism for ensuring
   privacy.  In particular, malicious or compromised caches might not
   recognize or obey this directive, and communications networks might
   be vulnerable to eavesdropping.</source>
          <target state="translated">Директива ответа &quot;no-store&quot; указывает,что кэш НЕ ДОЛЖЕН хранить какую-либо часть немедленного запроса или ответа.Эта директива относится как к приватному,так и к общему кэшу.В этом контексте &quot;НЕ хранить&quot; означает,что кэш НЕ ДОЛЖЕН умышленно хранить информацию в энергонезависимом хранилище,и ДОЛЖЕН делать наилучшую попытку удалить информацию из энергонезависимого хранилища как можно быстрее после ее пересылки.Данная директива НЕ является надежным или достаточным механизмом обеспечения конфиденциальности.В частности,вредоносный или скомпрометированный кэш может не распознать эту директиву или не подчиниться ей,а сети связи могут быть уязвимы для подслушивания.</target>
        </trans-unit>
        <trans-unit id="246740c14df98a9984cb7c90b794ca4cbab5f083" translate="yes" xml:space="preserve">
          <source>The &quot;no-transform&quot; request directive indicates that an intermediary
   (whether or not it implements a cache) MUST NOT transform the
   payload, as defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-5.7.2&quot;&gt;Section&amp;nbsp;5.7.2 of [RFC7230]&lt;/a&gt;.</source>
          <target state="translated">Директива запроса &amp;laquo;no-transform&amp;raquo; указывает, что посредник (независимо от того, реализует он кэш или нет) НЕ ДОЛЖЕН преобразовывать полезную нагрузку, как определено в &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-5.7.2&quot;&gt;разделе 5.7.2 [RFC7230]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="26ea1a7d280ad4fbc448761f675e1d88af0183a2" translate="yes" xml:space="preserve">
          <source>The &quot;no-transform&quot; response directive indicates that an intermediary
   (regardless of whether it implements a cache) MUST NOT transform the
   payload, as defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-5.7.2&quot;&gt;Section&amp;nbsp;5.7.2 of [RFC7230]&lt;/a&gt;.</source>
          <target state="translated">Директива ответа &amp;laquo;no-transform&amp;raquo; указывает, что посредник (независимо от того, реализует ли он кэш) НЕ ДОЛЖЕН преобразовывать полезную нагрузку, как определено в &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-5.7.2&quot;&gt;разделе 5.7.2 [RFC7230]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="32d0e455b09d675a4810b93c728652a215d3ce1a" translate="yes" xml:space="preserve">
          <source>The &quot;only-if-cached&quot; request directive indicates that the client only
   wishes to obtain a stored response.  If it receives this directive, a
   cache SHOULD either respond using a stored response that is
   consistent with the other constraints of the request, or respond with 

   a 504 (Gateway Timeout) status code.  If a group of caches is being
   operated as a unified system with good internal connectivity, a
   member cache MAY forward such a request within that group of caches.</source>
          <target state="translated">Директива запроса &quot;only-if-cached&quot; указывает,что клиент хочет получить только сохраненный ответ.Если он получает эту директиву,то кэш ДОЛЖЕН либо ответить,используя сохраненный ответ,который согласуется с другими ограничениями запроса,либо ответить с кодом состояния 504 (Gateway Timeout).Если группа кэшей работает как единая система с хорошим внутренним подключением,член кэша МАЙЯ пересылает такой запрос внутри этой группы кэшей.</target>
        </trans-unit>
        <trans-unit id="b71570fd0465b4f17b5b1cc37961cb5f46e70128" translate="yes" xml:space="preserve">
          <source>The &quot;proxy-revalidate&quot; response directive has the same meaning as the
   must-revalidate response directive, except that it does not apply to
   private caches.</source>
          <target state="translated">Директива ответа &quot;proxy-revalidate&quot; имеет то же значение,что и директива ответа &quot;must-revalidate&quot;,за исключением того,что она не применяется к приватным кэшам.</target>
        </trans-unit>
        <trans-unit id="f75c67cbc215fa2c33b29aa7195f38b3d21101a2" translate="yes" xml:space="preserve">
          <source>The &quot;public&quot; directive indicates that the response may be cached by any cache. This can be useful if pages with HTTP authentication, or response status codes that aren't normally cacheable, should now be cached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e6876985726810eb54534e7e11d768f44365be0" translate="yes" xml:space="preserve">
          <source>The &quot;public&quot; directive indicates that the response may be cached by any cache. This can be useful, if pages with HTTP authentication or response status codes that aren't normally cacheable, should now be cached.</source>
          <target state="translated">Директива &quot;public&quot; указывает,что ответ может быть кэширован любым кэшем.Это может быть полезно,если страницы с HTTP-аутентификацией или коды статуса ответа,которые обычно не кэшируются,теперь должны быть кэшированы.</target>
        </trans-unit>
        <trans-unit id="4971052d2513145d16ddbb98b369e6dbbfe2ae90" translate="yes" xml:space="preserve">
          <source>The &quot;public&quot; response directive indicates that any cache MAY store
   the response, even if the response would normally be non-cacheable or
   cacheable only within a private cache.  (See &lt;a href=&quot;#section-3.2&quot;&gt;Section 3.2&lt;/a&gt; for
   additional details related to the use of public in response to a
   request containing Authorization, and &lt;a href=&quot;#section-3&quot;&gt;Section 3&lt;/a&gt; for details of how
   public affects responses that would normally not be stored, due to
   their status codes not being defined as cacheable by default; see
   &lt;a href=&quot;#section-4.2.2&quot;&gt;Section 4.2.2&lt;/a&gt;.)</source>
          <target state="translated">Директива ответа &amp;laquo;public&amp;raquo; указывает, что любой кэш МОЖЕТ хранить ответ, даже если ответ обычно не кэшируется или кэшируется только в частном кэше. (См. Дополнительные сведения об использовании public в ответ на запрос, содержащий авторизацию, в &lt;a href=&quot;#section-3.2&quot;&gt;разделе 3.2&lt;/a&gt; , а в &lt;a href=&quot;#section-3&quot;&gt;разделе 3 -&lt;/a&gt; о том, как public влияет на ответы, которые обычно не сохраняются, поскольку их коды состояния не определены как кэшируемые по умолчанию. ; см. &lt;a href=&quot;#section-4.2.2&quot;&gt;раздел 4.2.2&lt;/a&gt; .)</target>
        </trans-unit>
        <trans-unit id="3a53d63d810ef97bac3b0a2d1828ead948bae860" translate="yes" xml:space="preserve">
          <source>The &quot;realm&quot; authentication parameter is reserved for use by
   authentication schemes that wish to indicate a scope of protection.

   A protection space is defined by the canonical root URI (the scheme
   and authority components of the effective request URI; see &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-5.5&quot;&gt;Section&lt;/a&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-5.5&quot;&gt;5.5 of [RFC7230]&lt;/a&gt;) of the server being accessed, in combination with
   the realm value if present.  These realms allow the protected
   resources on a server to be partitioned into a set of protection 

   spaces, each with its own authentication scheme and/or authorization
   database.  The realm value is a string, generally assigned by the
   origin server, that can have additional semantics specific to the
   authentication scheme.  Note that a response can have multiple
   challenges with the same auth-scheme but with different realms.

   The protection space determines the domain over which credentials can
   be automatically applied.  If a prior request has been authorized,
   the user agent MAY reuse the same credentials for all other requests
   within that protection space for a period of time determined by the
   authentication scheme, parameters, and/or user preferences (such as a
   configurable inactivity timeout).  Unless specifically allowed by the
   authentication scheme, a single protection space cannot extend
   outside the scope of its server.

   For historical reasons, a sender MUST only generate the quoted-string
   syntax.  Recipients might have to support both token and
   quoted-string syntax for maximum interoperability with existing
   clients that have been accepting both notations for a long time.</source>
          <target state="translated">Параметр аутентификации &quot;область&quot; зарезервирован для использования схемами аутентификации, которые хотят указать объем защиты. Пространство защиты определяется каноническим корневым URI (схема и компоненты полномочий действующего URI запроса; см. &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-5.5&quot;&gt;Раздел &lt;/a&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-5.5&quot;&gt;5.5 [RFC7230]&lt;/a&gt;) сервера, к которому осуществляется доступ, в сочетании со значением области, если оно есть. Эти области позволяют разделить защищенные ресурсы на сервере на набор пространств защиты, каждое со своей собственной схемой аутентификации и / или базой данных авторизации. Значение области - это строка, обычно назначаемая исходным сервером, которая может иметь дополнительную семантику, специфичную для схемы аутентификации. Обратите внимание, что в ответе может быть несколько запросов с одной и той же схемой аутентификации, но с разными областями. Пространство защиты определяет домен, в котором учетные данные могут применяться автоматически. Если предыдущий запрос был авторизован, пользовательский агент МОЖЕТ повторно использовать те же учетные данные для всех других запросов в пределах этого защитного пространства в течение периода времени, определенного схемой аутентификации, параметрами,и / или пользовательские предпочтения (например, настраиваемый тайм-аут бездействия). Если это специально не разрешено схемой аутентификации, единое пространство защиты не может выходить за пределы своего сервера. По историческим причинам отправитель ДОЛЖЕН генерировать только синтаксис строки в кавычках. Получателям, возможно, придется поддерживать синтаксис как токена, так и строки в кавычках для максимальной совместимости с существующими клиентами, которые долгое время принимали обе нотации.Получателям, возможно, придется поддерживать синтаксис как токена, так и строки в кавычках для максимальной совместимости с существующими клиентами, которые долгое время принимали обе нотации.Получателям, возможно, придется поддерживать синтаксис как токена, так и строки в кавычках для максимальной совместимости с существующими клиентами, которые долгое время принимали обе нотации.</target>
        </trans-unit>
        <trans-unit id="151e607c7a4575c8ca7477aa6824b0c9baed0674" translate="yes" xml:space="preserve">
          <source>The 'Basic' HTTP Authentication Scheme</source>
          <target state="translated">Схема 'Основной' HTTP аутентификации</target>
        </trans-unit>
        <trans-unit id="31b797417bbccba76fa104cff98e9ec776af2bfd" translate="yes" xml:space="preserve">
          <source>The 'opaquelocktoken' URI scheme was defined in [&lt;a href=&quot;https://tools.ietf.org/html/rfc2518&quot;&gt;RFC2518&lt;/a&gt;] (and
   registered by IANA) in order to create syntactically correct and
   easy-to-generate URIs out of UUIDs, intended to be used as lock
   tokens and to be unique across all resources for all time.

   An opaquelocktoken URI is constructed by concatenating the
   'opaquelocktoken' scheme with a UUID, along with an optional
   extension.  Servers can create new UUIDs for each new lock token.  If
   a server wishes to reuse UUIDs, the server MUST add an extension, and
   the algorithm generating the extension MUST guarantee that the same
   extension will never be used twice with the associated UUID.

     OpaqueLockToken-URI = &quot;opaquelocktoken:&quot; UUID [Extension]
       ; UUID is defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc4122#section-3&quot;&gt;Section&amp;nbsp;3 of [RFC4122]&lt;/a&gt;.  Note that LWS
       ; is not allowed between elements of
       ; this production.

     Extension = path
       ; path is defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-3.3&quot;&gt;Section&amp;nbsp;3.3 of [RFC3986]&lt;/a&gt;</source>
          <target state="translated">Схема URI 'opaquelocktoken' была определена в [ &lt;a href=&quot;https://tools.ietf.org/html/rfc2518&quot;&gt;RFC2518&lt;/a&gt; ] (и зарегистрирована IANA) для создания синтаксически правильных и легко генерируемых URI из UUID, предназначенных для использования в качестве токенов блокировки и уникальных для всех ресурсов для все время. URI непрозрачного токена создается путем объединения схемы &amp;laquo;непрозрачный токен&amp;raquo; с UUID вместе с дополнительным расширением. Серверы могут создавать новые UUID для каждого нового токена блокировки. Если сервер желает повторно использовать UUID, сервер ДОЛЖЕН добавить расширение, и алгоритм, генерирующий расширение, ДОЛЖЕН гарантировать, что одно и то же расширение никогда не будет использоваться дважды с соответствующим UUID. OpaqueLockToken-URI = &quot;opaquelocktoken:&quot; UUID [Расширение]; UUID определен в &lt;a href=&quot;https://tools.ietf.org/html/rfc4122#section-3&quot;&gt;разделе 3 [RFC4122]&lt;/a&gt;, Обратите внимание, что LWS; не допускается между элементами; это производство. Расширение = путь; путь определен в &lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-3.3&quot;&gt;разделе 3.3 [RFC3986]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="40135f19d49dbe171471ff8585f7f6ce0a630cbe" translate="yes" xml:space="preserve">
          <source>The 100 (Continue) status code indicates that the initial part of a
   request has been received and has not yet been rejected by the
   server.  The server intends to send a final response after the
   request has been fully received and acted upon.

   When the request contains an Expect header field that includes a
   100-continue expectation, the 100 response indicates that the server
   wishes to receive the request payload body, as described in
   &lt;a href=&quot;#section-5.1.1&quot;&gt;Section 5.1.1&lt;/a&gt;.  The client ought to continue sending the request and
   discard the 100 response.

   If the request did not contain an Expect header field containing the
   100-continue expectation, the client can simply discard this interim
   response.</source>
          <target state="translated">Код состояния 100 (Продолжить) указывает, что начальная часть запроса получена и еще не была отклонена сервером. Сервер намеревается отправить окончательный ответ после того, как запрос будет полностью получен и обработан. Когда запрос содержит поле заголовка Expect, которое включает ожидание продолжения 100, ответ 100 указывает, что сервер желает получить тело полезной нагрузки запроса, как описано в &lt;a href=&quot;#section-5.1.1&quot;&gt;Разделе 5.1.1&lt;/a&gt; . Клиент должен продолжить отправку запроса и отклонить ответ 100. Если в запросе не было поля заголовка Expect, содержащего ожидание продолжения 100, клиент может просто отклонить этот промежуточный ответ.</target>
        </trans-unit>
        <trans-unit id="0d01ba31f4c44842de2b726b8f94536c5aca0981" translate="yes" xml:space="preserve">
          <source>The 101 (Switching Protocols) status code indicates that the server
   understands and is willing to comply with the client's request, via
   the Upgrade header field (&lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-6.7&quot;&gt;Section&amp;nbsp;6.7 of [RFC7230]&lt;/a&gt;), for a change in
   the application protocol being used on this connection.  The server 

   MUST generate an Upgrade header field in the response that indicates
   which protocol(s) will be switched to immediately after the empty
   line that terminates the 101 response.

   It is assumed that the server will only agree to switch protocols
   when it is advantageous to do so.  For example, switching to a newer
   version of HTTP might be advantageous over older versions, and
   switching to a real-time, synchronous protocol might be advantageous
   when delivering resources that use such features.</source>
          <target state="translated">Код состояния 101 (протоколы переключения) указывает, что сервер понимает и готов выполнить запрос клиента через поле заголовка Upgrade ( &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-6.7&quot;&gt;раздел 6.7 [RFC7230]&lt;/a&gt; ) об изменении протокола приложения, используемого в этом соединении. Сервер ДОЛЖЕН сгенерировать поле заголовка обновления в ответе, которое указывает, на какой протокол (ы) будет переключено сразу после пустой строки, завершающей ответ 101. Предполагается, что сервер согласится переключить протоколы только тогда, когда это будет выгодно. Например, переключение на более новую версию HTTP может быть более выгодным по сравнению со старыми версиями, а переключение на синхронный протокол реального времени может быть выгодным при доставке ресурсов, использующих такие функции.</target>
        </trans-unit>
        <trans-unit id="c844ae29efcb21429730db5f3e66a84ced4ddb52" translate="yes" xml:space="preserve">
          <source>The 101 status code</source>
          <target state="translated">101 код статуса</target>
        </trans-unit>
        <trans-unit id="3ed3da1546f287aac58cc367f269cb9295233354" translate="yes" xml:space="preserve">
          <source>The 1xx (Informational) class of status code indicates an interim
   response for communicating connection status or request progress
   prior to completing the requested action and sending a final
   response. 1xx responses are terminated by the first empty line after
   the status-line (the empty line signaling the end of the header
   section).  Since HTTP/1.0 did not define any 1xx status codes, a
   server MUST NOT send a 1xx response to an HTTP/1.0 client.

   A client MUST be able to parse one or more 1xx responses received
   prior to a final response, even if the client does not expect one.  A
   user agent MAY ignore unexpected 1xx responses.

   A proxy MUST forward 1xx responses unless the proxy itself requested
   the generation of the 1xx response.  For example, if a proxy adds an
   &quot;Expect: 100-continue&quot; field when it forwards a request, then it need
   not forward the corresponding 100 (Continue) response(s).</source>
          <target state="translated">Класс состояния 1xx (Информационный)обозначает промежуточный ответ для передачи состояния соединения или хода выполнения запроса до завершения запрошенного действия и отправки финального ответа.Ответы 1xx завершаются первой пустой строкой после строки состояния (пустая строка сигнализирует об окончании заголовочной части).Поскольку HTTP/1.0 не определил никаких кодов статуса 1xx,сервер НЕ ДОЛЖЕН посылать 1xx-ответ клиенту HTTP/1.0.Клиент ДОЛЖЕН уметь разобрать один или несколько 1xx ответов,полученных до получения окончательного ответа,даже если клиент не ожидает его.Пользовательский агент МОЖЕТ игнорировать неожиданные 1xx-ответы.Прокси ДОЛЖЕН пересылать 1xx ответы,если только сам прокси не запросил генерацию 1xx ответа.Например,если при переадресации запроса прокси добавляет поле &quot;Ожидать:100-continue&quot;,то ему не нужно переадресовывать соответствующие 100 (Продолжить)ответов.</target>
        </trans-unit>
        <trans-unit id="73c66d189cbfbc42b2d25d8e68502411eaf75067" translate="yes" xml:space="preserve">
          <source>The 200 (OK) status code indicates that the request has succeeded.
   The payload sent in a 200 response depends on the request method.
   For the methods defined by this specification, the intended meaning
   of the payload can be summarized as:

   GET  a representation of the target resource;

   HEAD  the same representation as GET, but without the representation
      data;

   POST  a representation of the status of, or results obtained from,
      the action;

   PUT, DELETE  a representation of the status of the action;

   OPTIONS  a representation of the communications options;

   TRACE  a representation of the request message as received by the end
      server.

   Aside from responses to CONNECT, a 200 response always has a payload,
   though an origin server MAY generate a payload body of zero length.
   If no payload is desired, an origin server ought to send 204 (No
   Content) instead.  For CONNECT, no payload is allowed because the
   successful result is a tunnel, which begins immediately after the 200
   response header section.

   A 200 response is cacheable by default; i.e., unless otherwise
   indicated by the method definition or explicit cache controls (see
   &lt;a href=&quot;https://tools.ietf.org/html/rfc7234#section-4.2.2&quot;&gt;Section&amp;nbsp;4.2.2 of [RFC7234]&lt;/a&gt;).</source>
          <target state="translated">Код состояния 200 (ОК) указывает, что запрос выполнен успешно. Полезная нагрузка, отправляемая в ответе 200, зависит от метода запроса. Для методов, определенных в этой спецификации, предполагаемое значение полезной нагрузки можно резюмировать следующим образом: GET - представление целевого ресурса; HEAD то же представление, что и GET, но без данных представления; POST представление статуса или результатов, полученных в результате действия; PUT, DELETE - представление статуса действия; OPTIONS - представление вариантов связи; TRACE - представление сообщения запроса, полученного конечным сервером. Помимо ответов на CONNECT, ответ 200 всегда имеет полезную нагрузку, хотя исходный сервер МОЖЕТ сгенерировать тело полезной нагрузки нулевой длины. Если полезная нагрузка не требуется,исходный сервер должен вместо этого отправить 204 (без содержимого). Для CONNECT полезная нагрузка не разрешена, потому что успешным результатом является туннель, который начинается сразу после раздела заголовка 200 ответа. По умолчанию ответ 200 кэшируется; то есть, если иное не указано в определении метода или явных элементах управления кешем (см. &lt;a href=&quot;https://tools.ietf.org/html/rfc7234#section-4.2.2&quot;&gt;Раздел 4.2.2 [RFC7234]&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="fb652482ea97cc2ed5c9e3a8e7d46c55940f8e9f" translate="yes" xml:space="preserve">
          <source>The 201 (Created) status code indicates that the request has been
   fulfilled and has resulted in one or more new resources being
   created.  The primary resource created by the request is identified
   by either a Location header field in the response or, if no Location
   field is received, by the effective request URI.

   The 201 response payload typically describes and links to the
   resource(s) created.  See &lt;a href=&quot;#section-7.2&quot;&gt;Section 7.2&lt;/a&gt; for a discussion of the meaning
   and purpose of validator header fields, such as ETag and
   Last-Modified, in a 201 response.</source>
          <target state="translated">Код состояния 201 (Создан) указывает, что запрос был выполнен и привел к созданию одного или нескольких новых ресурсов. Первичный ресурс, созданный запросом, идентифицируется либо полем заголовка Location в ответе, либо, если поле Location не получено, действующим URI запроса. Полезные данные ответа 201 обычно описывают созданные ресурсы и ссылаются на них. См. &lt;a href=&quot;#section-7.2&quot;&gt;Раздел 7.2&lt;/a&gt; для обсуждения значения и назначения полей заголовка валидатора, таких как ETag и Last-Modified, в ответе 201.</target>
        </trans-unit>
        <trans-unit id="abf13ad15a9e2fc228718670b40afce5ab72fe28" translate="yes" xml:space="preserve">
          <source>The 202 (Accepted) status code indicates that the request has been
   accepted for processing, but the processing has not been completed.
   The request might or might not eventually be acted upon, as it might
   be disallowed when processing actually takes place.  There is no
   facility in HTTP for re-sending a status code from an asynchronous
   operation.

   The 202 response is intentionally noncommittal.  Its purpose is to
   allow a server to accept a request for some other process (perhaps a
   batch-oriented process that is only run once per day) without
   requiring that the user agent's connection to the server persist
   until the process is completed.  The representation sent with this
   response ought to describe the request's current status and point to
   (or embed) a status monitor that can provide the user with an
   estimate of when the request will be fulfilled.</source>
          <target state="translated">Код состояния 202 (Принято)указывает,что запрос был принят на обработку,но обработка не была завершена.В конце концов,запрос может быть обработан,а может и не быть,так как он может быть запрещен,когда обработка действительно происходит.В HTTP нет возможности повторно отправить код статуса из асинхронной операции.Ответ 202 намеренно не является обязательным.Его цель-позволить серверу принять запрос на какой-то другой процесс (возможно,пакетно-ориентированный процесс,который запускается только один раз в день),не требуя,чтобы соединение агента пользователя с сервером продолжалось до тех пор,пока процесс не будет завершен.Представление,посылаемое с таким ответом,должно описывать текущий статус запроса и указывать на (или внедрять)монитор статуса,который может предоставить пользователю оценку того,когда запрос будет выполнен.</target>
        </trans-unit>
        <trans-unit id="9a4650176c01777123e8dd8f9e1788cc242ba3f7" translate="yes" xml:space="preserve">
          <source>The 203 (Non-Authoritative Information) status code indicates that
   the request was successful but the enclosed payload has been modified
   from that of the origin server's 200 (OK) response by a transforming
   proxy (&lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-5.7.2&quot;&gt;Section&amp;nbsp;5.7.2 of [RFC7230]&lt;/a&gt;).  This status code allows the
   proxy to notify recipients when a transformation has been applied,
   since that knowledge might impact later decisions regarding the
   content.  For example, future cache validation requests for the
   content might only be applicable along the same request path (through
   the same proxies).

   The 203 response is similar to the Warning code of 214 Transformation
   Applied (&lt;a href=&quot;https://tools.ietf.org/html/rfc7234#section-5.5&quot;&gt;Section&amp;nbsp;5.5 of [RFC7234]&lt;/a&gt;), which has the advantage of being
   applicable to responses with any status code. 

   A 203 response is cacheable by default; i.e., unless otherwise
   indicated by the method definition or explicit cache controls (see
   &lt;a href=&quot;https://tools.ietf.org/html/rfc7234#section-4.2.2&quot;&gt;Section&amp;nbsp;4.2.2 of [RFC7234]&lt;/a&gt;).</source>
          <target state="translated">Код состояния 203 (неавторизованная информация) указывает, что запрос был успешным, но вложенные полезные данные были изменены &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-5.7.2&quot;&gt;по сравнению с ответом исходного&lt;/a&gt; сервера 200 (OK) преобразующим прокси-сервером ( раздел 5.7.2 [RFC7230] ). Этот код состояния позволяет прокси-серверу уведомлять получателей о применении преобразования, поскольку это знание может повлиять на последующие решения относительно содержимого. Например, будущие запросы проверки кэша для контента могут быть применимы только по тому же пути запроса (через одни и те же прокси). Ответ 203 аналогичен коду предупреждения при применении преобразования 214 ( &lt;a href=&quot;https://tools.ietf.org/html/rfc7234#section-5.5&quot;&gt;раздел 5.5 [RFC7234]&lt;/a&gt;), который может применяться к ответам с любым кодом состояния. По умолчанию ответ 203 кэшируется; то есть, если иное не указано в определении метода или явных элементах управления кешем (см. &lt;a href=&quot;https://tools.ietf.org/html/rfc7234#section-4.2.2&quot;&gt;раздел 4.2.2 [RFC7234]&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="a03bafae0f2da4aa1963199aa2ef89f97a8ce60c" translate="yes" xml:space="preserve">
          <source>The 204 (No Content) status code indicates that the server has
   successfully fulfilled the request and that there is no additional
   content to send in the response payload body.  Metadata in the
   response header fields refer to the target resource and its selected
   representation after the requested action was applied.

   For example, if a 204 status code is received in response to a PUT
   request and the response contains an ETag header field, then the PUT
   was successful and the ETag field-value contains the entity-tag for
   the new representation of that target resource.

   The 204 response allows a server to indicate that the action has been
   successfully applied to the target resource, while implying that the
   user agent does not need to traverse away from its current &quot;document
   view&quot; (if any).  The server assumes that the user agent will provide
   some indication of the success to its user, in accord with its own
   interface, and apply any new or updated metadata in the response to
   its active representation.

   For example, a 204 status code is commonly used with document editing
   interfaces corresponding to a &quot;save&quot; action, such that the document
   being saved remains available to the user for editing.  It is also
   frequently used with interfaces that expect automated data transfers
   to be prevalent, such as within distributed version control systems.

   A 204 response is terminated by the first empty line after the header
   fields because it cannot contain a message body.

   A 204 response is cacheable by default; i.e., unless otherwise
   indicated by the method definition or explicit cache controls (see
   &lt;a href=&quot;https://tools.ietf.org/html/rfc7234#section-4.2.2&quot;&gt;Section&amp;nbsp;4.2.2 of [RFC7234]&lt;/a&gt;).</source>
          <target state="translated">Код состояния 204 (нет содержимого) указывает, что сервер успешно выполнил запрос и что в теле полезной нагрузки ответа нет дополнительного содержимого для отправки. Метаданные в полях заголовка ответа относятся к целевому ресурсу и его выбранному представлению после применения запрошенного действия. Например, если код состояния 204 получен в ответ на запрос PUT, и ответ содержит поле заголовка ETag, значит, PUT был успешным, а значение поля ETag содержит тег объекта для нового представления этого целевого ресурса. Ответ 204 позволяет серверу указать, что действие было успешно применено к целевому ресурсу, при этом подразумевая, что агенту пользователя не нужно уходить от своего текущего &amp;laquo;представления документа&amp;raquo; (если есть).Сервер предполагает, что пользовательский агент предоставит некоторую индикацию успеха своему пользователю в соответствии со своим собственным интерфейсом и применит любые новые или обновленные метаданные в ответ на свое активное представление. Например, код состояния 204 обычно используется с интерфейсами редактирования документов, соответствующими действию &amp;laquo;сохранить&amp;raquo;, так что сохраняемый документ остается доступным для редактирования пользователем. Он также часто используется с интерфейсами, которые ожидают преобладания автоматической передачи данных, например, в распределенных системах контроля версий. Ответ 204 заканчивается первой пустой строкой после полей заголовка, потому что он не может содержать тело сообщения. По умолчанию ответ 204 кэшируется; т.е.если иное не указано в определении метода или явных элементах управления кешем (см. &lt;a href=&quot;https://tools.ietf.org/html/rfc7234#section-4.2.2&quot;&gt;Раздел 4.2.2 [RFC7234]&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="956b428452b332069240075e35ec925980806e62" translate="yes" xml:space="preserve">
          <source>The 205 (Reset Content) status code indicates that the server has
   fulfilled the request and desires that the user agent reset the
   &quot;document view&quot;, which caused the request to be sent, to its original
   state as received from the origin server.

   This response is intended to support a common data entry use case
   where the user receives content that supports data entry (a form,
   notepad, canvas, etc.), enters or manipulates data in that space, 

   causes the entered data to be submitted in a request, and then the
   data entry mechanism is reset for the next entry so that the user can
   easily initiate another input action.

   Since the 205 status code implies that no additional content will be
   provided, a server MUST NOT generate a payload in a 205 response.  In
   other words, a server MUST do one of the following for a 205
   response: a) indicate a zero-length body for the response by
   including a Content-Length header field with a value of 0; b)
   indicate a zero-length payload for the response by including a
   Transfer-Encoding header field with a value of chunked and a message
   body consisting of a single chunk of zero-length; or, c) close the
   connection immediately after sending the blank line terminating the
   header section.</source>
          <target state="translated">Код состояния 205 (Reset Content)указывает на то,что сервер выполнил запрос,и желает,чтобы агент пользователя сбросил &quot;вид документа&quot;,из-за которого запрос был отправлен,до его первоначального состояния,полученного от сервера-отправителя.Этот ответ предназначен для поддержки общего случая использования ввода данных,когда пользователь получает контент,который поддерживает ввод данных (форма,блокнот,холст и т.д.),вводит или манипулирует данными в этом пространстве,вызывает представление введенных данных в запросе,а затем механизм ввода данных сбрасывается для следующего ввода,чтобы пользователь мог легко инициировать еще одно действие по вводу данных.Поскольку код состояния 205 подразумевает,что никакого дополнительного содержания не будет предоставлено,сервер НЕ ДОЛЖЕН генерировать полезную нагрузку в ответе 205.Другими словами,сервер ДОЛЖЕН выполнять одно из следующих действий для ответа 205:a)указать тело ответа с нулевой длиной,включив в него поле заголовка Content-Length со значением 0;b)указать поле заголовка с нулевой длиной для ответа,включив в него поле заголовка Transfer-Encoding со значением кусочка и тело сообщения,состоящее из одного кусочка с нулевой длиной;или,c)закрыть соединение сразу же после отправки пустой строки,завершающей раздел заголовка.</target>
        </trans-unit>
        <trans-unit id="07f77f37a20dc983a618d2c0027e2bd10388099a" translate="yes" xml:space="preserve">
          <source>The 206 (Partial Content) status code indicates that the server is
   successfully fulfilling a range request for the target resource by
   transferring one or more parts of the selected representation that
   correspond to the satisfiable ranges found in the request's Range
   header field (&lt;a href=&quot;#section-3.1&quot;&gt;Section 3.1&lt;/a&gt;).

   If a single part is being transferred, the server generating the 206
   response MUST generate a Content-Range header field, describing what
   range of the selected representation is enclosed, and a payload
   consisting of the range.  For example:

     HTTP/1.1 206 Partial Content
     Date: Wed, 15 Nov 1995 06:25:24 GMT
     Last-Modified: Wed, 15 Nov 1995 04:58:08 GMT
     Content-Range: bytes 21010-47021/47022
     Content-Length: 26012
     Content-Type: image/gif

     ... 26012 bytes of partial image data 

   If multiple parts are being transferred, the server generating the
   206 response MUST generate a &quot;multipart/byteranges&quot; payload, as
   defined in &lt;a href=&quot;#appendix-A&quot;&gt;Appendix A&lt;/a&gt;, and a Content-Type header field containing the
   multipart/byteranges media type and its required boundary parameter.
   To avoid confusion with single-part responses, a server MUST NOT
   generate a Content-Range header field in the HTTP header section of a
   multiple part response (this field will be sent in each part
   instead). 

   Within the header area of each body part in the multipart payload,
   the server MUST generate a Content-Range header field corresponding
   to the range being enclosed in that body part.  If the selected
   representation would have had a Content-Type header field in a 200
   (OK) response, the server SHOULD generate that same Content-Type
   field in the header area of each body part.  For example:

     HTTP/1.1 206 Partial Content
     Date: Wed, 15 Nov 1995 06:25:24 GMT
     Last-Modified: Wed, 15 Nov 1995 04:58:08 GMT
     Content-Length: 1741
     Content-Type: multipart/byteranges; boundary=THIS_STRING_SEPARATES

     --THIS_STRING_SEPARATES
     Content-Type: application/pdf
     Content-Range: bytes 500-999/8000

     ...the first range
     --THIS_STRING_SEPARATES
     Content-Type: application/pdf
     Content-Range: bytes 7000-7999/8000

     ...the second range
     --THIS_STRING_SEPARATES--

   When multiple ranges are requested, a server MAY coalesce any of the
   ranges that overlap, or that are separated by a gap that is smaller
   than the overhead of sending multiple parts, regardless of the order
   in which the corresponding byte-range-spec appeared in the received
   Range header field.  Since the typical overhead between parts of a
   multipart/byteranges payload is around 80 bytes, depending on the
   selected representation's media type and the chosen boundary
   parameter length, it can be less efficient to transfer many small
   disjoint parts than it is to transfer the entire selected
   representation.

   A server MUST NOT generate a multipart response to a request for a
   single range, since a client that does not request multiple parts
   might not support multipart responses.  However, a server MAY
   generate a multipart/byteranges payload with only a single body part
   if multiple ranges were requested and only one range was found to be
   satisfiable or only one range remained after coalescing.  A client
   that cannot process a multipart/byteranges response MUST NOT generate
   a request that asks for multiple ranges.

   When a multipart response payload is generated, the server SHOULD
   send the parts in the same order that the corresponding
   byte-range-spec appeared in the received Range header field, 

   excluding those ranges that were deemed unsatisfiable or that were
   coalesced into other ranges.  A client that receives a multipart
   response MUST inspect the Content-Range header field present in each
   body part in order to determine which range is contained in that body
   part; a client cannot rely on receiving the same ranges that it
   requested, nor the same order that it requested.

   When a 206 response is generated, the server MUST generate the
   following header fields, in addition to those required above, if the
   field would have been sent in a 200 (OK) response to the same
   request: Date, Cache-Control, ETag, Expires, Content-Location, and
   Vary.

   If a 206 is generated in response to a request with an If-Range
   header field, the sender SHOULD NOT generate other representation
   header fields beyond those required above, because the client is
   understood to already have a prior response containing those header
   fields.  Otherwise, the sender MUST generate all of the
   representation header fields that would have been sent in a 200 (OK)
   response to the same request.

   A 206 response is cacheable by default; i.e., unless otherwise
   indicated by explicit cache controls (see &lt;a href=&quot;https://tools.ietf.org/html/rfc7234#section-4.2.2&quot;&gt;Section&amp;nbsp;4.2.2 of
   [RFC7234]&lt;/a&gt;).</source>
          <target state="translated">Код состояния 206 (частичное содержимое) указывает, что сервер успешно выполняет запрос диапазона для целевого ресурса, передавая одну или несколько частей выбранного представления, которые соответствуют допустимым диапазонам, найденным в поле заголовка диапазона запроса ( &lt;a href=&quot;#section-3.1&quot;&gt;раздел 3.1.&lt;/a&gt;). Если передается одна часть, сервер, генерирующий ответ 206, ДОЛЖЕН сгенерировать поле заголовка Content-Range, описывающее, какой диапазон выбранного представления заключен, и полезную нагрузку, состоящую из этого диапазона. Например: HTTP / 1.1 206 Частичное содержимое Дата: среда, 15 ноября 1995 г., 06:25:24 GMT Последнее изменение: среда, 15 ноября 1995 г., 04:58:08 GMT Диапазон содержимого: байты 21010-47021 / 47022 Длина содержимого : 26012 Content-Type: image / gif ... 26012 байт данных частичного изображения Если передается несколько частей, сервер, генерирующий ответ 206, ДОЛЖЕН генерировать полезную нагрузку multipart / byteranges, как определено в &lt;a href=&quot;#appendix-A&quot;&gt;Приложении A&lt;/a&gt;и поле заголовка Content-Type, содержащее тип мультимедиа multipart / byteranges и его обязательный параметр границы. Во избежание путаницы с ответами, состоящими из одной части, сервер НЕ ДОЛЖЕН создавать поле заголовка Content-Range в разделе заголовка HTTP ответа из нескольких частей (вместо этого это поле будет отправлено в каждой части). В области заголовка каждой части тела в составной полезной нагрузке сервер ДОЛЖЕН генерировать поле заголовка Content-Range, соответствующее диапазону, заключенному в этой части тела. Если выбранное представление имело бы поле заголовка Content-Type в ответе 200 (OK), серверу СЛЕДУЕТ сгенерировать это же поле Content-Type в области заголовка каждой части тела. Например: HTTP / 1.1 206 Частичное содержимое Дата: среда, 15 ноября 1995 г., 06:25:24 GMT Последнее изменение: среда,15 ноя 1995, 04:58:08 GMT Длина содержимого: 1741 Тип содержимого: multipart / byteranges; border = THIS_STRING_SEPARATES --THIS_STRING_SEPARATES Content-Type: application / pdf Content-Range: байты 500-999 / 8000 ... первый диапазон --THIS_STRING_SEPARATES Content-Type: application / pdf Content-Range: байты 7000-7999 / 8000. ..второй диапазон --THIS_STRING_SEPARATES - Когда запрашивается несколько диапазонов, сервер МОЖЕТ объединить любой из диапазонов, которые перекрываются или разделены промежутком, меньшим, чем накладные расходы на отправку нескольких частей, независимо от порядка в который соответствующий byte-range-spec появился в полученном поле заголовка Range. Поскольку типичные накладные расходы между частями полезной нагрузки multipart / byteranges составляют около 80 байт,В зависимости от типа носителя выбранного представления и длины выбранного граничного параметра передача большого количества небольших непересекающихся частей может быть менее эффективной, чем передача всего выбранного представления. Сервер НЕ ДОЛЖЕН генерировать составной ответ на запрос для одного диапазона, поскольку клиент, который не запрашивает несколько частей, может не поддерживать составные ответы. Однако сервер МОЖЕТ сгенерировать полезную нагрузку multipart / byteranges только с одной частью тела, если было запрошено несколько диапазонов, и только один диапазон оказался приемлемым или только один диапазон остался после объединения. Клиент, который не может обработать ответ multipart / byteranges, НЕ ДОЛЖЕН генерировать запрос, запрашивающий несколько диапазонов. Когда создается многочастный ответ,серверу СЛЕДУЕТ отправлять части в том же порядке, в котором соответствующая спецификация диапазона байтов появилась в полученном поле заголовка диапазона, за исключением тех диапазонов, которые были признаны неудовлетворительными или которые были объединены в другие диапазоны. Клиент, который получает ответ из нескольких частей, ДОЛЖЕН проверить поле заголовка Content-Range, присутствующее в каждой части тела, чтобы определить, какой диапазон содержится в этой части тела; клиент не может полагаться на получение тех же диапазонов, которые он запросил, или того же порядка, который он запросил. Когда генерируется ответ 206, сервер ДОЛЖЕН сгенерировать следующие поля заголовка в дополнение к тем, которые требуются выше, если это поле было бы отправлено в ответе 200 (OK) на тот же запрос: Date, Cache-Control, ETag, Срок действия, Content-Location и Vary.Если 206 генерируется в ответ на запрос с полем заголовка If-Range, отправителю НЕ СЛЕДУЕТ генерировать другие поля заголовка представления, помимо требуемых выше, поскольку предполагается, что у клиента уже есть предыдущий ответ, содержащий эти поля заголовка. В противном случае отправитель ДОЛЖЕН сгенерировать все поля заголовка представления, которые были бы отправлены в ответе 200 (OK) на тот же запрос. По умолчанию ответ 206 кэшируется; то есть, если иное не указано явными элементами управления кешем (см.отправитель ДОЛЖЕН сгенерировать все поля заголовка представления, которые были бы отправлены в ответе 200 (OK) на тот же запрос. По умолчанию ответ 206 кэшируется; то есть, если иное не указано явными элементами управления кешем (см.отправитель ДОЛЖЕН сгенерировать все поля заголовка представления, которые были бы отправлены в ответе 200 (OK) на тот же запрос. По умолчанию ответ 206 кэшируется; то есть, если иное не указано явными элементами управления кешем (см.&lt;a href=&quot;https://tools.ietf.org/html/rfc7234#section-4.2.2&quot;&gt;Раздел 4.2.2 [RFC7234]&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="a96c2c15082f71e24cf514861b9f6649cccdc6d7" translate="yes" xml:space="preserve">
          <source>The 207 (Multi-Status) status code provides status for multiple
   independent operations (see &lt;a href=&quot;#section-13&quot;&gt;Section 13&lt;/a&gt; for more information).</source>
          <target state="translated">Код состояния 207 (Multi-Status) предоставляет статус для нескольких независимых операций ( дополнительную информацию см. В &lt;a href=&quot;#section-13&quot;&gt;разделе 13&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="21abf74518ada2943ea07b28d70fb2e06dfc8c14" translate="yes" xml:space="preserve">
          <source>The 2xx (Successful) class of status code indicates that the client's
   request was successfully received, understood, and accepted.</source>
          <target state="translated">Класс статуса 2xx (Successful)указывает на то,что запрос клиента был успешно принят,понят и принят.</target>
        </trans-unit>
        <trans-unit id="8091edce5c825502d2461f4be1e98fbbf163fbf9" translate="yes" xml:space="preserve">
          <source>The 300 (Multiple Choices) status code indicates that the target
   resource has more than one representation, each with its own more
   specific identifier, and information about the alternatives is being
   provided so that the user (or user agent) can select a preferred
   representation by redirecting its request to one or more of those
   identifiers.  In other words, the server desires that the user agent
   engage in reactive negotiation to select the most appropriate
   representation(s) for its needs (&lt;a href=&quot;#section-3.4&quot;&gt;Section 3.4&lt;/a&gt;).

   If the server has a preferred choice, the server SHOULD generate a
   Location header field containing a preferred choice's URI reference.
   The user agent MAY use the Location field value for automatic
   redirection.

   For request methods other than HEAD, the server SHOULD generate a
   payload in the 300 response containing a list of representation
   metadata and URI reference(s) from which the user or user agent can
   choose the one most preferred.  The user agent MAY make a selection
   from that list automatically if it understands the provided media
   type.  A specific format for automatic selection is not defined by
   this specification because HTTP tries to remain orthogonal to the
   definition of its payloads.  In practice, the representation is
   provided in some easily parsed format believed to be acceptable to
   the user agent, as determined by shared design or content
   negotiation, or in some commonly accepted hypertext format. 

   A 300 response is cacheable by default; i.e., unless otherwise
   indicated by the method definition or explicit cache controls (see
   &lt;a href=&quot;https://tools.ietf.org/html/rfc7234#section-4.2.2&quot;&gt;Section&amp;nbsp;4.2.2 of [RFC7234]&lt;/a&gt;).

      Note: The original proposal for the 300 status code defined the
      URI header field as providing a list of alternative
      representations, such that it would be usable for 200, 300, and
      406 responses and be transferred in responses to the HEAD method.
      However, lack of deployment and disagreement over syntax led to
      both URI and Alternates (a subsequent proposal) being dropped from
      this specification.  It is possible to communicate the list using
      a set of Link header fields [&lt;a href=&quot;https://tools.ietf.org/html/rfc5988&quot;&gt;RFC5988&lt;/a&gt;], each with a relationship of
      &quot;alternate&quot;, though deployment is a chicken-and-egg problem.</source>
          <target state="translated">Код состояния 300 (множественный выбор) указывает, что целевой ресурс имеет более одного представления, каждое со своим собственным более конкретным идентификатором, и предоставляется информация об альтернативах, чтобы пользователь (или пользовательский агент) мог выбрать предпочтительное представление с помощью перенаправляет свой запрос одному или нескольким из этих идентификаторов. Другими словами, сервер желает, чтобы пользовательский агент участвовал в реактивном согласовании, чтобы выбрать наиболее подходящие представления для своих нужд ( &lt;a href=&quot;#section-3.4&quot;&gt;раздел 3.4.&lt;/a&gt;). Если у сервера есть предпочтительный выбор, серверу СЛЕДУЕТ сгенерировать поле заголовка Location, содержащее ссылку URI предпочтительного выбора. Пользовательский агент МОЖЕТ использовать значение поля Location для автоматического перенаправления. Для методов запроса, отличных от HEAD, серверу СЛЕДУЕТ генерировать полезную нагрузку в ответе 300, содержащую список метаданных представления и ссылку (ссылки) URI, из которых пользователь или пользовательский агент могут выбрать наиболее предпочтительный. Пользовательский агент МОЖЕТ сделать выбор из этого списка автоматически, если он понимает предоставленный тип носителя. Конкретный формат для автоматического выбора в этой спецификации не определен, потому что HTTP пытается оставаться ортогональным определению своих полезных данных. На практике,представление предоставляется в некотором легко анализируемом формате, который считается приемлемым для пользовательского агента, как определено совместно используемым дизайном или согласованием содержимого, или в каком-либо общепринятом гипертекстовом формате. По умолчанию ответ 300 кэшируется; то есть, если иное не указано в определении метода или явных элементах управления кешем (см. &lt;a href=&quot;https://tools.ietf.org/html/rfc7234#section-4.2.2&quot;&gt;Раздел 4.2.2 [RFC7234]&lt;/a&gt; ). Примечание. Первоначальное предложение для кода состояния 300 определяло поле заголовка URI как предоставляющее список альтернативных представлений, так что его можно было бы использовать для ответов 200, 300 и 406 и передавать в ответах методу HEAD. Однако отсутствие развертывания и разногласия по поводу синтаксиса привели к тому, что как URI, так и альтернативные варианты (последующее предложение) были исключены из этой спецификации. Список можно передать с помощью набора полей заголовка Link [ &lt;a href=&quot;https://tools.ietf.org/html/rfc5988&quot;&gt;RFC5988&lt;/a&gt; ], каждое из которых имеет отношение &amp;laquo;альтернативное&amp;raquo;, хотя развертывание - это проблема курицы и яйца.</target>
        </trans-unit>
        <trans-unit id="e89e16d2ad3f5f0023fdef413da39c2201b7eab8" translate="yes" xml:space="preserve">
          <source>The 301 (Moved Permanently) status code indicates that the target
   resource has been assigned a new permanent URI and any future
   references to this resource ought to use one of the enclosed URIs.
   Clients with link-editing capabilities ought to automatically re-link
   references to the effective request URI to one or more of the new
   references sent by the server, where possible.

   The server SHOULD generate a Location header field in the response
   containing a preferred URI reference for the new permanent URI.  The
   user agent MAY use the Location field value for automatic
   redirection.  The server's response payload usually contains a short
   hypertext note with a hyperlink to the new URI(s).

      Note: For historical reasons, a user agent MAY change the request
      method from POST to GET for the subsequent request.  If this
      behavior is undesired, the 307 (Temporary Redirect) status code
      can be used instead.

   A 301 response is cacheable by default; i.e., unless otherwise
   indicated by the method definition or explicit cache controls (see
   &lt;a href=&quot;https://tools.ietf.org/html/rfc7234#section-4.2.2&quot;&gt;Section&amp;nbsp;4.2.2 of [RFC7234]&lt;/a&gt;).</source>
          <target state="translated">Код состояния 301 (перемещен навсегда) указывает, что целевому ресурсу был назначен новый постоянный URI, и любые будущие ссылки на этот ресурс должны использовать один из вложенных URI. Клиенты с возможностями редактирования ссылок должны автоматически повторно связывать ссылки с действующим URI запроса на одну или несколько новых ссылок, отправленных сервером, где это возможно. Серверу СЛЕДУЕТ генерировать поле заголовка Location в ответе, содержащее ссылку на предпочтительный URI для нового постоянного URI. Пользовательский агент МОЖЕТ использовать значение поля Location для автоматического перенаправления. Полезные данные ответа сервера обычно содержат короткую гипертекстовую заметку с гиперссылкой на новый URI. Примечание. По историческим причинам пользовательский агент МОЖЕТ изменить метод запроса с POST на GET для последующего запроса.Если такое поведение нежелательно, вместо него можно использовать код состояния 307 (временное перенаправление). По умолчанию ответ 301 кэшируется; то есть, если иное не указано в определении метода или явных элементах управления кешем (см. &lt;a href=&quot;https://tools.ietf.org/html/rfc7234#section-4.2.2&quot;&gt;Раздел 4.2.2 [RFC7234]&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="9ef3872d9a97e7902a4418ab95fd36038bea8203" translate="yes" xml:space="preserve">
          <source>The 302 (Found) status code indicates that the target resource
   resides temporarily under a different URI.  Since the redirection
   might be altered on occasion, the client ought to continue to use the
   effective request URI for future requests. 

   The server SHOULD generate a Location header field in the response
   containing a URI reference for the different URI.  The user agent MAY
   use the Location field value for automatic redirection.  The server's
   response payload usually contains a short hypertext note with a
   hyperlink to the different URI(s).

      Note: For historical reasons, a user agent MAY change the request
      method from POST to GET for the subsequent request.  If this
      behavior is undesired, the 307 (Temporary Redirect) status code
      can be used instead.</source>
          <target state="translated">Код статуса 302 (Найден)указывает на то,что целевой ресурс временно находится под другим URI.Так как перенаправление может быть изменено в некоторых случаях,клиент должен продолжать использовать эффективный URI запроса для будущих запросов.Сервер SHOULD генерирует поле заголовка Location в ответе,содержащее ссылку на URI для другого URI.Пользовательский агент MAY MAY использует значение поля Location для автоматического перенаправления.Полезная нагрузка ответа сервера обычно содержит короткую гипертекстовую заметку с гиперссылкой на различные URI.Примечание:По историческим причинам пользовательский агент MAY изменяет метод запроса с POST на GET для последующего запроса.Если такое поведение нежелательно,вместо него можно использовать код статуса 307 (Temporary Redirect).</target>
        </trans-unit>
        <trans-unit id="f98486b9c7317cc8a6b18febd1348ba3209011c0" translate="yes" xml:space="preserve">
          <source>The 303 (See Other) status code indicates that the server is
   redirecting the user agent to a different resource, as indicated by a
   URI in the Location header field, which is intended to provide an
   indirect response to the original request.  A user agent can perform
   a retrieval request targeting that URI (a GET or HEAD request if
   using HTTP), which might also be redirected, and present the eventual
   result as an answer to the original request.  Note that the new URI
   in the Location header field is not considered equivalent to the
   effective request URI.

   This status code is applicable to any HTTP method.  It is primarily
   used to allow the output of a POST action to redirect the user agent
   to a selected resource, since doing so provides the information
   corresponding to the POST response in a form that can be separately
   identified, bookmarked, and cached, independent of the original
   request.

   A 303 response to a GET request indicates that the origin server does
   not have a representation of the target resource that can be
   transferred by the server over HTTP.  However, the Location field
   value refers to a resource that is descriptive of the target
   resource, such that making a retrieval request on that other resource
   might result in a representation that is useful to recipients without
   implying that it represents the original target resource.  Note that
   answers to the questions of what can be represented, what
   representations are adequate, and what might be a useful description
   are outside the scope of HTTP.

   Except for responses to a HEAD request, the representation of a 303
   response ought to contain a short hypertext note with a hyperlink to
   the same URI reference provided in the Location header field.</source>
          <target state="translated">Код статуса 303 (см.Другое)указывает на то,что сервер перенаправляет пользовательского агента на другой ресурс,как указывает URI в поле заголовка Location,который предназначен для предоставления косвенного ответа на исходный запрос.Пользовательский агент может выполнить запрос на получение,нацеленный на этот URI (GET или HEAD запрос,если используется HTTP),который также может быть перенаправлен,и представить конечный результат в виде ответа на исходный запрос.Обратите внимание,что новый URI в поле заголовка Location не считается эквивалентным действующему URI запроса.Этот код статуса применим к любому методу HTTP.В первую очередь он используется для того,чтобы разрешить вывод POST действия для перенаправления пользовательского агента на выбранный ресурс,так как при этом предоставляется информация,соответствующая POST ответу в форме,которая может быть отдельно идентифицирована,занесена в закладки и кэширована,независимо от оригинального запроса.Ответ 303 на GET запрос указывает на то,что исходный сервер не имеет представления о целевом ресурсе,который может быть передан сервером по HTTP.Тем не менее,значение поля Location относится к ресурсу,который является описанием целевого ресурса,таким образом,чтобы сделать запрос на получение на этот другой ресурс может привести к представлению,которое является полезным для получателей,не подразумевая,что он представляет собой исходный целевой ресурс.Обратите внимание,что ответы на вопросы о том,что может быть представлено,какие представления адекватны,и что может быть полезным описанием,находятся за пределами HTTP.За исключением ответов на запрос HEAD,представление ответа 303 должно содержать короткую гипертекстовую заметку с гиперссылкой на ту же самую ссылку на URI,которая содержится в поле заголовка Location.</target>
        </trans-unit>
        <trans-unit id="1310056b9a11237a35ab8cb0a6c54f0611f4bdbf" translate="yes" xml:space="preserve">
          <source>The 304 (Not Modified) status code indicates that a conditional GET
   or HEAD request has been received and would have resulted in a 200
   (OK) response if it were not for the fact that the condition
   evaluated to false.  In other words, there is no need for the server
   to transfer a representation of the target resource because the
   request indicates that the client, which made the request 

   conditional, already has a valid representation; the server is
   therefore redirecting the client to make use of that stored
   representation as if it were the payload of a 200 (OK) response.

   The server generating a 304 response MUST generate any of the
   following header fields that would have been sent in a 200 (OK)
   response to the same request: Cache-Control, Content-Location, Date,
   ETag, Expires, and Vary.

   Since the goal of a 304 response is to minimize information transfer
   when the recipient already has one or more cached representations, a
   sender SHOULD NOT generate representation metadata other than the
   above listed fields unless said metadata exists for the purpose of
   guiding cache updates (e.g., Last-Modified might be useful if the
   response does not have an ETag field).

   Requirements on a cache that receives a 304 response are defined in
   &lt;a href=&quot;https://tools.ietf.org/html/rfc7234#section-4.3.4&quot;&gt;Section&amp;nbsp;4.3.4 of [RFC7234]&lt;/a&gt;.  If the conditional request originated
   with an outbound client, such as a user agent with its own cache
   sending a conditional GET to a shared proxy, then the proxy SHOULD
   forward the 304 response to that client.

   A 304 response cannot contain a message-body; it is always terminated
   by the first empty line after the header fields.</source>
          <target state="translated">Код состояния 304 (Not Modified) указывает, что условный запрос GET или HEAD был получен и привел бы к ответу 200 (OK), если бы не тот факт, что условие было оценено как ложное. Другими словами, серверу нет необходимости передавать представление целевого ресурса, потому что запрос указывает, что клиент, который сделал запрос условным, уже имеет действительное представление; поэтому сервер перенаправляет клиента на использование этого сохраненного представления, как если бы это была полезная нагрузка ответа 200 (OK). Сервер, генерирующий ответ 304, ДОЛЖЕН сгенерировать любое из следующих полей заголовка, которые были бы отправлены в ответе 200 (OK) на тот же запрос: Cache-Control, Content-Location, Date, ETag, Expires и Vary.Поскольку цель ответа 304 состоит в том, чтобы минимизировать передачу информации, когда получатель уже имеет одно или несколько кэшированных представлений, отправителю НЕ СЛЕДУЕТ генерировать метаданные представления, отличные от перечисленных выше полей, если указанные метаданные не существуют для целей управления обновлениями кеша (например, Last-Modified может быть полезен, если в ответе нет поля ETag). Требования к кэшу, который получает ответ 304, определены вТребования к кэшу, который получает ответ 304, определены вТребования к кэшу, который получает ответ 304, определены в &lt;a href=&quot;https://tools.ietf.org/html/rfc7234#section-4.3.4&quot;&gt;Раздел 4.3.4 [RFC7234]&lt;/a&gt; . Если условный запрос исходит от исходящего клиента, такого как пользовательский агент со своим собственным кешем, отправляющий условный GET на общий прокси-сервер, то прокси-сервер ДОЛЖЕН переслать ответ 304 этому клиенту. Ответ 304 не может содержать тело сообщения; он всегда заканчивается первой пустой строкой после полей заголовка.</target>
        </trans-unit>
        <trans-unit id="d962e03df1dabcc2ec176a4937563211d6cfd2cc" translate="yes" xml:space="preserve">
          <source>The 305 (Use Proxy) status code was defined in a previous version of
   this specification and is now deprecated (Appendix B).</source>
          <target state="translated">Код статуса 305 (Использовать прокси)был определен в предыдущей версии этой спецификации и теперь устарел (Приложение B).</target>
        </trans-unit>
        <trans-unit id="bbf9b7a6555633242c214ea7db29148fae94dc7d" translate="yes" xml:space="preserve">
          <source>The 306 status code was defined in a previous version of this
   specification, is no longer used, and the code is reserved.</source>
          <target state="translated">Код статуса 306 был определен в предыдущей версии данной спецификации,больше не используется,и код зарезервирован.</target>
        </trans-unit>
        <trans-unit id="4404c364ec3064905980ead43e5d3f9ef55ccb2e" translate="yes" xml:space="preserve">
          <source>The 306 status code was used in a previous version of the
   specification, is no longer used, and the code is reserved.</source>
          <target state="translated">Код статуса 306 использовался в предыдущей версии спецификации,больше не используется,и код зарезервирован.</target>
        </trans-unit>
        <trans-unit id="efa8bf4f32294cae0ef47f6deb993b93eec7981d" translate="yes" xml:space="preserve">
          <source>The 307 (Temporary Redirect) status code indicates that the target
   resource resides temporarily under a different URI and the user agent
   MUST NOT change the request method if it performs an automatic
   redirection to that URI.  Since the redirection can change over time,
   the client ought to continue using the original effective request URI
   for future requests.

   The server SHOULD generate a Location header field in the response
   containing a URI reference for the different URI.  The user agent MAY
   use the Location field value for automatic redirection.  The server's
   response payload usually contains a short hypertext note with a
   hyperlink to the different URI(s).

      Note: This status code is similar to 302 (Found), except that it
      does not allow changing the request method from POST to GET.  This
      specification defines no equivalent counterpart for 301 (Moved
      Permanently) ([&lt;a href=&quot;https://tools.ietf.org/html/rfc7238&quot;&gt;RFC7238&lt;/a&gt;], however, defines the status code 308
      (Permanent Redirect) for this purpose).</source>
          <target state="translated">Код состояния 307 (временное перенаправление) указывает, что целевой ресурс временно находится под другим URI, и пользовательский агент НЕ ДОЛЖЕН изменять метод запроса, если он выполняет автоматическое перенаправление на этот URI. Поскольку перенаправление может со временем измениться, клиент должен продолжать использовать исходный действующий URI запроса для будущих запросов. Серверу СЛЕДУЕТ генерировать поле заголовка Location в ответе, содержащем ссылку URI для другого URI. Пользовательский агент МОЖЕТ использовать значение поля Location для автоматического перенаправления. Полезные данные ответа сервера обычно содержат короткую гипертекстовую заметку с гиперссылкой на разные URI. Примечание. Этот код состояния аналогичен 302 (Найдено), за исключением того, что он не позволяет изменить метод запроса с POST на GET.Эта спецификация не определяет эквивалентного аналога для 301 (перемещено навсегда) ([&lt;a href=&quot;https://tools.ietf.org/html/rfc7238&quot;&gt;RFC7238&lt;/a&gt; ], однако, для этой цели определяет код состояния 308 (постоянное перенаправление)).</target>
        </trans-unit>
        <trans-unit id="0b552dedeef68a9fc1c9bedf80fe2f970232311c" translate="yes" xml:space="preserve">
          <source>The 3xx (Redirection) class of status code indicates that further
   action needs to be taken by the user agent in order to fulfill the
   request.  If a Location header field (&lt;a href=&quot;#section-7.1.2&quot;&gt;Section 7.1.2&lt;/a&gt;) is provided, the
   user agent MAY automatically redirect its request to the URI
   referenced by the Location field value, even if the specific status
   code is not understood.  Automatic redirection needs to done with
   care for methods not known to be safe, as defined in &lt;a href=&quot;#section-4.2.1&quot;&gt;Section 4.2.1&lt;/a&gt;,
   since the user might not wish to redirect an unsafe request.

   There are several types of redirects:

   1.  Redirects that indicate the resource might be available at a
       different URI, as provided by the Location field, as in the
       status codes 301 (Moved Permanently), 302 (Found), and 307
       (Temporary Redirect).

   2.  Redirection that offers a choice of matching resources, each
       capable of representing the original request target, as in the
       300 (Multiple Choices) status code.

   3.  Redirection to a different resource, identified by the Location
       field, that can represent an indirect response to the request, as
       in the 303 (See Other) status code.

   4.  Redirection to a previously cached result, as in the 304 (Not
       Modified) status code.

      Note: In HTTP/1.0, the status codes 301 (Moved Permanently) and
      302 (Found) were defined for the first type of redirect
      (&lt;a href=&quot;https://tools.ietf.org/html/rfc1945#section-9.3&quot;&gt;[RFC1945], Section&amp;nbsp;9.3&lt;/a&gt;).  Early user agents split on whether the
      method applied to the redirect target would be the same as the 

      original request or would be rewritten as GET.  Although HTTP
      originally defined the former semantics for 301 and 302 (to match
      its original implementation at CERN), and defined 303 (See Other)
      to match the latter semantics, prevailing practice gradually
      converged on the latter semantics for 301 and 302 as well.  The
      first revision of HTTP/1.1 added 307 (Temporary Redirect) to
      indicate the former semantics without being impacted by divergent
      practice.  Over 10 years later, most user agents still do method
      rewriting for 301 and 302; therefore, this specification makes
      that behavior conformant when the original request is POST.

   A client SHOULD detect and intervene in cyclical redirections (i.e.,
   &quot;infinite&quot; redirection loops).

      Note: An earlier version of this specification recommended a
      maximum of five redirections (&lt;a href=&quot;https://tools.ietf.org/html/rfc2068#section-10.3&quot;&gt;[RFC2068], Section&amp;nbsp;10.3&lt;/a&gt;).  Content
      developers need to be aware that some clients might implement such
      a fixed limitation.</source>
          <target state="translated">Класс кода состояния 3xx (перенаправление) указывает, что пользовательский агент должен предпринять дальнейшие действия для выполнения запроса. Если предоставляется поле заголовка Location ( &lt;a href=&quot;#section-7.1.2&quot;&gt;раздел 7.1.2&lt;/a&gt; ), пользовательский агент МОЖЕТ автоматически перенаправить свой запрос на URI, на который ссылается значение поля Location, даже если конкретный код состояния не понят. Автоматическое перенаправление должно выполняться с осторожностью для методов, небезопасных, как определено в &lt;a href=&quot;#section-4.2.1&quot;&gt;Разделе 4.2.1.&lt;/a&gt;, поскольку пользователь может не захотеть перенаправлять небезопасный запрос. Существует несколько типов перенаправления: 1. Перенаправления, которые указывают на то, что ресурс может быть доступен по другому URI, как указано в поле &amp;laquo;Местоположение&amp;raquo;, например, в кодах состояния 301 (перемещено постоянно), 302 (найдено) и 307 (временное перенаправление). ). 2. Перенаправление, которое предлагает выбор совпадающих ресурсов, каждый из которых может представлять исходную цель запроса, как в коде состояния 300 (множественный выбор). 3. Перенаправление на другой ресурс, идентифицированный полем Location, который может представлять косвенный ответ на запрос, как в коде состояния 303 (See Other). 4. Перенаправление к ранее кэшированному результату, как в коде состояния 304 (Не изменено). Примечание. В HTTP / 1.0коды состояния 301 (перемещено постоянно) и 302 (найдено) были определены для первого типа перенаправления (&lt;a href=&quot;https://tools.ietf.org/html/rfc1945#section-9.3&quot;&gt;[RFC1945], раздел 9.3&lt;/a&gt;). Ранние пользовательские агенты разделяются по тому, будет ли метод, примененный к цели перенаправления, таким же, как исходный запрос, или будет переписан как GET. Хотя HTTP изначально определил первую семантику для 301 и 302 (чтобы соответствовать ее исходной реализации в CERN) и определил 303 (см. Другое), чтобы соответствовать последней семантике, преобладающая практика постепенно сошлась на последней семантике также и для 301 и 302. Первая версия HTTP / 1.1 добавила 307 (временное перенаправление), чтобы указать прежнюю семантику, не подвергаясь влиянию различных практик. Спустя более 10 лет большинство пользовательских агентов по-прежнему переписывают методы для 301 и 302; следовательно, эта спецификация делает это поведение совместимым, когда исходный запрос - POST.Клиенту СЛЕДУЕТ обнаруживать циклические перенаправления (т. Е. &amp;laquo;Бесконечные&amp;raquo; циклы перенаправления) и вмешиваться в них. Примечание: более ранняя версия этой спецификации рекомендовала максимум пять перенаправлений (&lt;a href=&quot;https://tools.ietf.org/html/rfc2068#section-10.3&quot;&gt;[RFC2068], раздел 10.3&lt;/a&gt; ). Разработчики контента должны знать, что некоторые клиенты могут применять такое фиксированное ограничение.</target>
        </trans-unit>
        <trans-unit id="334ca39a91da7c29dc27f4fe5d1fa671a87b47b0" translate="yes" xml:space="preserve">
          <source>The 400 (Bad Request) status code indicates that the server cannot or
   will not process the request due to something that is perceived to be
   a client error (e.g., malformed request syntax, invalid request
   message framing, or deceptive request routing).</source>
          <target state="translated">Код состояния 400 (Плохой запрос)указывает на то,что сервер не может или не будет обрабатывать запрос из-за чего-то,что воспринимается как ошибка клиента (например,неправильный синтаксис запроса,неправильная формулировка запроса или обманчивая маршрутизация запроса).</target>
        </trans-unit>
        <trans-unit id="29689450f4d2cb77a3efa906a5294a262a4c2452" translate="yes" xml:space="preserve">
          <source>The 401 (Unauthorized) status code indicates that the request has not
   been applied because it lacks valid authentication credentials for
   the target resource.  The server generating a 401 response MUST send
   a WWW-Authenticate header field (&lt;a href=&quot;#section-4.1&quot;&gt;Section 4.1&lt;/a&gt;) containing at least one
   challenge applicable to the target resource.

   If the request included authentication credentials, then the 401
   response indicates that authorization has been refused for those
   credentials.  The user agent MAY repeat the request with a new or
   replaced Authorization header field (&lt;a href=&quot;#section-4.2&quot;&gt;Section 4.2&lt;/a&gt;).  If the 401
   response contains the same challenge as the prior response, and the
   user agent has already attempted authentication at least once, then
   the user agent SHOULD present the enclosed representation to the
   user, since it usually contains relevant diagnostic information.</source>
          <target state="translated">Код состояния 401 (Неавторизован) указывает, что запрос не был применен, поскольку ему не хватает действительных учетных данных для аутентификации для целевого ресурса. Сервер, генерирующий ответ 401, ДОЛЖЕН отправить поле заголовка WWW-Authenticate ( &lt;a href=&quot;#section-4.1&quot;&gt;раздел 4.1&lt;/a&gt; ), содержащее по крайней мере один запрос, применимый к целевому ресурсу. Если запрос включал учетные данные аутентификации, то ответ 401 указывает, что для этих учетных данных в авторизации было отказано. Пользовательский агент МОЖЕТ повторить запрос с новым или замененным полем заголовка авторизации ( &lt;a href=&quot;#section-4.2&quot;&gt;раздел 4.2&lt;/a&gt;). Если ответ 401 содержит тот же вызов, что и предыдущий ответ, и пользовательский агент уже пытался аутентифицироваться хотя бы один раз, то пользовательский агент ДОЛЖЕН предоставить пользователю заключенное представление, поскольку оно обычно содержит релевантную диагностическую информацию.</target>
        </trans-unit>
        <trans-unit id="8a32cd96fa39bd8cea46e432f2bd383665a1ab08" translate="yes" xml:space="preserve">
          <source>The 402 (Payment Required) status code is reserved for future use.</source>
          <target state="translated">Код статуса 402 (Payment Required)зарезервирован для использования в будущем.</target>
        </trans-unit>
        <trans-unit id="79339f2e8ca3d487560bd812a6eea754f58b8f81" translate="yes" xml:space="preserve">
          <source>The 403 (Forbidden) status code indicates that the server understood
   the request but refuses to authorize it.  A server that wishes to
   make public why the request has been forbidden can describe that
   reason in the response payload (if any).

   If authentication credentials were provided in the request, the
   server considers them insufficient to grant access.  The client
   SHOULD NOT automatically repeat the request with the same
   credentials.  The client MAY repeat the request with new or different
   credentials.  However, a request might be forbidden for reasons
   unrelated to the credentials.

   An origin server that wishes to &quot;hide&quot; the current existence of a
   forbidden target resource MAY instead respond with a status code of
   404 (Not Found).</source>
          <target state="translated">Код статуса 403 (Запрещенный)указывает на то,что сервер понял запрос,но отказался его авторизовать.Сервер,желающий обнародовать причину,по которой запрос был запрещен,может описать эту причину в ответе полезной нагрузкой (если таковая имеется).Если в запросе были указаны идентификационные данные,то сервер считает их недостаточными для предоставления доступа.Клиент НЕ ДОЛЖЕН автоматически повторить запрос с теми же самыми учетными данными.Клиент МОЖЕТ повторить запрос с новыми или другими учетными данными.Однако,запрос может быть запрещен по причинам,не связанным с учетными данными.Сервер-источник,желающий &quot;скрыть&quot; текущее существование запрещенного целевого ресурса MAY,вместо этого отвечает кодом статуса 404 (Not Found).</target>
        </trans-unit>
        <trans-unit id="e3def26038d6d95647ba8eb940680d2af264c867" translate="yes" xml:space="preserve">
          <source>The 404 (Not Found) status code indicates that the origin server did
   not find a current representation for the target resource or is not
   willing to disclose that one exists.  A 404 status code does not
   indicate whether this lack of representation is temporary or
   permanent; the 410 (Gone) status code is preferred over 404 if the
   origin server knows, presumably through some configurable means, that
   the condition is likely to be permanent.

   A 404 response is cacheable by default; i.e., unless otherwise
   indicated by the method definition or explicit cache controls (see
   &lt;a href=&quot;https://tools.ietf.org/html/rfc7234#section-4.2.2&quot;&gt;Section&amp;nbsp;4.2.2 of [RFC7234]&lt;/a&gt;).</source>
          <target state="translated">Код состояния 404 (не найден) указывает на то, что исходный сервер не нашел текущего представления для целевого ресурса или не желает раскрывать его существование. Код состояния 404 не указывает, является ли это отсутствие представления временным или постоянным; код состояния 410 (Gone) предпочтительнее 404, если исходный сервер знает, предположительно с помощью некоторых настраиваемых средств, что состояние, вероятно, будет постоянным. По умолчанию ответ 404 кэшируется; то есть, если иное не указано в определении метода или явных элементах управления кешем (см. &lt;a href=&quot;https://tools.ietf.org/html/rfc7234#section-4.2.2&quot;&gt;раздел 4.2.2 [RFC7234]&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="139fdce0aa53e1ec81629bd1c9fe084f1e273d10" translate="yes" xml:space="preserve">
          <source>The 405 (Method Not Allowed) status code indicates that the method
   received in the request-line is known by the origin server but not
   supported by the target resource.  The origin server MUST generate an
   Allow header field in a 405 response containing a list of the target
   resource's currently supported methods.

   A 405 response is cacheable by default; i.e., unless otherwise
   indicated by the method definition or explicit cache controls (see
   &lt;a href=&quot;https://tools.ietf.org/html/rfc7234#section-4.2.2&quot;&gt;Section&amp;nbsp;4.2.2 of [RFC7234]&lt;/a&gt;).</source>
          <target state="translated">Код состояния 405 (метод запрещен) указывает, что метод, полученный в строке запроса, известен исходному серверу, но не поддерживается целевым ресурсом. Исходный сервер ДОЛЖЕН генерировать поле заголовка Allow в ответе 405, содержащем список поддерживаемых в настоящее время методов целевого ресурса. По умолчанию ответ 405 кэшируется; то есть, если иное не указано в определении метода или явных элементах управления кешем (см. &lt;a href=&quot;https://tools.ietf.org/html/rfc7234#section-4.2.2&quot;&gt;раздел 4.2.2 [RFC7234]&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="ee79d34ebbf5f698fa72e9938ee69213ae4643fa" translate="yes" xml:space="preserve">
          <source>The 406 (Not Acceptable) status code indicates that the target
   resource does not have a current representation that would be
   acceptable to the user agent, according to the proactive negotiation
   header fields received in the request (&lt;a href=&quot;#section-5.3&quot;&gt;Section 5.3&lt;/a&gt;), and the server
   is unwilling to supply a default representation.

   The server SHOULD generate a payload containing a list of available
   representation characteristics and corresponding resource identifiers
   from which the user or user agent can choose the one most
   appropriate.  A user agent MAY automatically select the most
   appropriate choice from that list.  However, this specification does
   not define any standard for such automatic selection, as described in
   &lt;a href=&quot;#section-6.4.1&quot;&gt;Section 6.4.1&lt;/a&gt;.</source>
          <target state="translated">Код состояния 406 (Неприемлемо) указывает, что целевой ресурс не имеет текущего представления, которое было бы приемлемо для пользовательского агента, согласно полям заголовка упреждающего согласования, полученным в запросе ( &lt;a href=&quot;#section-5.3&quot;&gt;раздел 5.3&lt;/a&gt; ), и сервер не желает предоставить представление по умолчанию. Серверу СЛЕДУЕТ генерировать полезную нагрузку, содержащую список доступных характеристик представления и соответствующие идентификаторы ресурсов, из которых пользователь или пользовательский агент может выбрать наиболее подходящий. Пользовательский агент МОЖЕТ автоматически выбрать наиболее подходящий вариант из этого списка. Однако эта спецификация не определяет никаких стандартов для такого автоматического выбора, как описано в &lt;a href=&quot;#section-6.4.1&quot;&gt;разделе 6.4.1&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ec483ec7612cbc4a7219b208c6205da13b1a5be1" translate="yes" xml:space="preserve">
          <source>The 407 (Proxy Authentication Required) status code is similar to 401
   (Unauthorized), but it indicates that the client needs to
   authenticate itself in order to use a proxy.  The proxy MUST send a
   Proxy-Authenticate header field (&lt;a href=&quot;#section-4.3&quot;&gt;Section 4.3&lt;/a&gt;) containing a challenge
   applicable to that proxy for the target resource.  The client MAY
   repeat the request with a new or replaced Proxy-Authorization header
   field (&lt;a href=&quot;#section-4.4&quot;&gt;Section 4.4&lt;/a&gt;).</source>
          <target state="translated">Код состояния 407 (требуется проверка подлинности прокси) аналогичен 401 (не авторизован), но указывает, что клиенту необходимо пройти проверку подлинности, чтобы использовать прокси. Прокси-сервер ДОЛЖЕН отправить поле заголовка Proxy-Authenticate ( &lt;a href=&quot;#section-4.3&quot;&gt;раздел 4.3&lt;/a&gt; ), содержащее запрос, применимый к этому прокси для целевого ресурса. Клиент МОЖЕТ повторить запрос с новым или замененным полем заголовка Proxy-Authorization ( &lt;a href=&quot;#section-4.4&quot;&gt;раздел 4.4&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="d63a1397f5112fdbc72a63c104b8b9b743795432" translate="yes" xml:space="preserve">
          <source>The 408 (Request Timeout) status code indicates that the server did
   not receive a complete request message within the time that it was
   prepared to wait.  A server SHOULD send the &quot;close&quot; connection option
   (&lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-6.1&quot;&gt;Section&amp;nbsp;6.1 of [RFC7230]&lt;/a&gt;) in the response, since 408 implies that
   the server has decided to close the connection rather than continue
   waiting.  If the client has an outstanding request in transit, the
   client MAY repeat that request on a new connection.</source>
          <target state="translated">Код состояния 408 (тайм-аут запроса) указывает, что сервер не получил полное сообщение запроса в течение времени, которое он был подготовлен к ожиданию. Серверу СЛЕДУЕТ отправлять в ответ вариант &amp;laquo;закрыть&amp;raquo; соединение ( &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-6.1&quot;&gt;раздел 6.1 [RFC7230]&lt;/a&gt; ), поскольку 408 подразумевает, что сервер решил закрыть соединение, а не продолжать ожидание. Если у клиента есть ожидающий запрос в пути, клиент МОЖЕТ повторить этот запрос при новом соединении.</target>
        </trans-unit>
        <trans-unit id="710b792af9157df3657d23cffcb2324a8f3a8d23" translate="yes" xml:space="preserve">
          <source>The 409 (Conflict) status code indicates that the request could not
   be completed due to a conflict with the current state of the target
   resource.  This code is used in situations where the user might be
   able to resolve the conflict and resubmit the request.  The server
   SHOULD generate a payload that includes enough information for a user
   to recognize the source of the conflict.

   Conflicts are most likely to occur in response to a PUT request.  For
   example, if versioning were being used and the representation being
   PUT included changes to a resource that conflict with those made by
   an earlier (third-party) request, the origin server might use a 409
   response to indicate that it can't complete the request.  In this
   case, the response representation would likely contain information
   useful for merging the differences based on the revision history.</source>
          <target state="translated">Код статуса 409 (Конфликт)указывает на то,что запрос не может быть завершен из-за конфликта с текущим состоянием целевого ресурса.Этот код используется в ситуациях,когда пользователь может разрешить конфликт и повторно отправить запрос.Сервер SHOULD генерирует полезную нагрузку,включающую в себя достаточно информации для того,чтобы пользователь мог распознать источник конфликта.Конфликты чаще всего возникают в ответ на запрос PUT.Например,если используется версионирование и представление,которым является PUT,включает в себя изменения ресурса,которые конфликтуют с изменениями,сделанными более ранним (сторонним)запросом,сервер-источник может использовать ответ 409,чтобы указать,что он не может завершить запрос.В этом случае ответное представление,скорее всего,будет содержать информацию,полезную для объединения различий на основе истории ревизий.</target>
        </trans-unit>
        <trans-unit id="ed70c66832007f42d2ffeafd2453c5472e4f6db0" translate="yes" xml:space="preserve">
          <source>The 410 (Gone) status code indicates that access to the target
   resource is no longer available at the origin server and that this
   condition is likely to be permanent.  If the origin server does not 

   know, or has no facility to determine, whether or not the condition
   is permanent, the status code 404 (Not Found) ought to be used
   instead.

   The 410 response is primarily intended to assist the task of web
   maintenance by notifying the recipient that the resource is
   intentionally unavailable and that the server owners desire that
   remote links to that resource be removed.  Such an event is common
   for limited-time, promotional services and for resources belonging to
   individuals no longer associated with the origin server's site.  It
   is not necessary to mark all permanently unavailable resources as
   &quot;gone&quot; or to keep the mark for any length of time -- that is left to
   the discretion of the server owner.

   A 410 response is cacheable by default; i.e., unless otherwise
   indicated by the method definition or explicit cache controls (see
   &lt;a href=&quot;https://tools.ietf.org/html/rfc7234#section-4.2.2&quot;&gt;Section&amp;nbsp;4.2.2 of [RFC7234]&lt;/a&gt;).</source>
          <target state="translated">Код состояния 410 (Gone) указывает, что доступ к целевому ресурсу больше не доступен на исходном сервере и что это состояние, вероятно, будет постоянным. Если исходный сервер не знает или не имеет возможности определить, является ли условие постоянным, вместо этого следует использовать код состояния 404 (Не найдено). Ответ 410 в первую очередь предназначен для поддержки задачи обслуживания сети путем уведомления получателя о том, что ресурс намеренно недоступен и что владельцы серверов желают, чтобы удаленные ссылки на этот ресурс были удалены. Такое событие характерно для ограниченных по времени рекламных услуг и ресурсов, принадлежащих лицам, больше не связанным с сайтом исходного сервера. Нет необходимости отмечать все постоянно недоступные ресурсы как &quot;ушел &quot;или оставить метку в течение любого периода времени - это остается на усмотрение владельца сервера. Ответ 410 кэшируется по умолчанию, т. е. если иное не указано в определении метода или явных элементах управления кешем (см. &lt;a href=&quot;https://tools.ietf.org/html/rfc7234#section-4.2.2&quot;&gt;Раздел 4.2.2 [RFC7234]&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="1d57fe4e2e7ca23134c38c0ed0018ac65cd3855c" translate="yes" xml:space="preserve">
          <source>The 411 (Length Required) status code indicates that the server
   refuses to accept the request without a defined Content-Length
   (&lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.3.2&quot;&gt;Section&amp;nbsp;3.3.2 of [RFC7230]&lt;/a&gt;).  The client MAY repeat the request if
   it adds a valid Content-Length header field containing the length of
   the message body in the request message.</source>
          <target state="translated">Код состояния 411 (требуется длина) указывает, что сервер отказывается принять запрос без определенной длины содержимого ( &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.3.2&quot;&gt;раздел 3.3.2 [RFC7230]&lt;/a&gt; ). Клиент МОЖЕТ повторить запрос, если он добавляет допустимое поле заголовка Content-Length, содержащее длину тела сообщения в сообщении запроса.</target>
        </trans-unit>
        <trans-unit id="a2b0a5d0ce695f774d281e52c15ee444fd3362b0" translate="yes" xml:space="preserve">
          <source>The 412 (Precondition Failed) status code indicates that one or more
   conditions given in the request header fields evaluated to false when
   tested on the server.  This response code allows the client to place
   preconditions on the current resource state (its current
   representations and metadata) and, thus, prevent the request method
   from being applied if the target resource is in an unexpected state.</source>
          <target state="translated">Код состояния 412 (Precondition Failed)указывает,что одно или несколько условий,указанных в полях заголовка запроса,оцениваются как ложные при тестировании на сервере.Этот код ответа позволяет клиенту поставить предусловия на текущее состояние ресурса (его текущие представления и метаданные)и,таким образом,предотвратить применение метода запроса,если целевой ресурс находится в неожиданном состоянии.</target>
        </trans-unit>
        <trans-unit id="d068c8261010d8ad8c83770690d1c48285eb7c3d" translate="yes" xml:space="preserve">
          <source>The 413 (Payload Too Large) status code indicates that the server is
   refusing to process a request because the request payload is larger
   than the server is willing or able to process.  The server MAY close
   the connection to prevent the client from continuing the request.

   If the condition is temporary, the server SHOULD generate a
   Retry-After header field to indicate that it is temporary and after
   what time the client MAY try again.</source>
          <target state="translated">Код статуса 413 (полезная нагрузка слишком велика)указывает на то,что сервер отказывается обрабатывать запрос,потому что полезная нагрузка запроса больше,чем сервер хочет или может обработать.Сервер MAY закрывает соединение,чтобы не позволить клиенту продолжить обработку запроса.Если условие является временным,сервер ДОЛЖЕН сгенерировать поле заголовка Retry-After,чтобы указать,что оно является временным и после какого времени клиент MAY повторяет попытку.</target>
        </trans-unit>
        <trans-unit id="2eeffaec19aae81212514c4d922d7dc543cfcc59" translate="yes" xml:space="preserve">
          <source>The 414 (URI Too Long) status code indicates that the server is
   refusing to service the request because the request-target (&lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-5.3&quot;&gt;Section&lt;/a&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-5.3&quot;&gt;5.3 of [RFC7230]&lt;/a&gt;) is longer than the server is willing to interpret.
   This rare condition is only likely to occur when a client has
   improperly converted a POST request to a GET request with long query
   information, when the client has descended into a &quot;black hole&quot; of
   redirection (e.g., a redirected URI prefix that points to a suffix of
   itself) or when the server is under attack by a client attempting to
   exploit potential security holes. 

   A 414 response is cacheable by default; i.e., unless otherwise
   indicated by the method definition or explicit cache controls (see
   &lt;a href=&quot;https://tools.ietf.org/html/rfc7234#section-4.2.2&quot;&gt;Section&amp;nbsp;4.2.2 of [RFC7234]&lt;/a&gt;).</source>
          <target state="translated">Код состояния 414 (URI Too Long) указывает на то, что сервер отказывается обслуживать запрос, потому что целевой объект запроса ( &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-5.3&quot;&gt;раздел &lt;/a&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-5.3&quot;&gt;5.3 [RFC7230]&lt;/a&gt; ) длиннее, чем сервер готов интерпретировать. Это редкое состояние может возникнуть только тогда, когда клиент неправильно преобразовал запрос POST в запрос GET с длинной информацией запроса, когда клиент спустился в &amp;laquo;черную дыру&amp;raquo; перенаправления (например, префикс перенаправленного URI, указывающий на суффикс самого себя) или когда сервер подвергается атаке со стороны клиента, пытающегося использовать потенциальные дыры в безопасности. По умолчанию ответ 414 кэшируется; то есть, если иное не указано в определении метода или явных элементах управления кешем (см. &lt;a href=&quot;https://tools.ietf.org/html/rfc7234#section-4.2.2&quot;&gt;раздел 4.2.2 [RFC7234]&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="60bd497af3a67e2912392260b738e67280886922" translate="yes" xml:space="preserve">
          <source>The 415 (Unsupported Media Type) status code indicates that the
   origin server is refusing to service the request because the payload
   is in a format not supported by this method on the target resource.
   The format problem might be due to the request's indicated
   Content-Type or Content-Encoding, or as a result of inspecting the
   data directly.</source>
          <target state="translated">Код статуса 415 (Unsupported Media Type)указывает,что исходный сервер отказывается обслуживать запрос,так как полезная нагрузка на целевом ресурсе находится в формате,не поддерживаемом этим методом.Проблема формата может быть вызвана указанным в запросе Content-Type или Content-Encoding,или в результате непосредственной проверки данных.</target>
        </trans-unit>
        <trans-unit id="e7168717c59ebb6678e8095c4f89436d6063047e" translate="yes" xml:space="preserve">
          <source>The 416 (Range Not Satisfiable) status code indicates that none of
   the ranges in the request's Range header field (&lt;a href=&quot;#section-3.1&quot;&gt;Section 3.1&lt;/a&gt;) overlap
   the current extent of the selected resource or that the set of ranges
   requested has been rejected due to invalid ranges or an excessive
   request of small or overlapping ranges.

   For byte ranges, failing to overlap the current extent means that the
   first-byte-pos of all of the byte-range-spec values were greater than
   the current length of the selected representation.  When this status
   code is generated in response to a byte-range request, the sender
   SHOULD generate a Content-Range header field specifying the current
   length of the selected representation (&lt;a href=&quot;#section-4.2&quot;&gt;Section 4.2&lt;/a&gt;).

   For example:

     HTTP/1.1 416 Range Not Satisfiable
     Date: Fri, 20 Jan 2012 15:41:54 GMT
     Content-Range: bytes */47022

      Note: Because servers are free to ignore Range, many
      implementations will simply respond with the entire selected
      representation in a 200 (OK) response.  That is partly because
      most clients are prepared to receive a 200 (OK) to complete the
      task (albeit less efficiently) and partly because clients might
      not stop making an invalid partial request until they have
      received a complete representation.  Thus, clients cannot depend
      on receiving a 416 (Range Not Satisfiable) response even when it
      is most appropriate.</source>
          <target state="translated">Код состояния 416 (диапазон не удовлетворяется) указывает, что ни один из диапазонов в поле заголовка диапазона запроса ( &lt;a href=&quot;#section-3.1&quot;&gt;раздел 3.1&lt;/a&gt; ) не перекрывает текущий экстент выбранного ресурса или что запрошенный набор диапазонов был отклонен из-за недопустимых диапазонов или чрезмерного запрос малых или перекрывающихся диапазонов. Для диапазонов байтов отсутствие перекрытия текущего экстента означает, что первая позиция байта всех значений спецификации диапазона байтов была больше, чем текущая длина выбранного представления. Когда этот код состояния генерируется в ответ на запрос диапазона байтов, отправителю СЛЕДУЕТ сгенерировать поле заголовка Content-Range, указывающее текущую длину выбранного представления ( &lt;a href=&quot;#section-4.2&quot;&gt;раздел 4.2&lt;/a&gt;). Например: HTTP / 1.1 416 Range Not Satisfiable Date: Fri, 20 Jan 2012 15:41:54 GMT Content-Range: bytes * / 47022 Примечание: поскольку серверы могут игнорировать Range, многие реализации просто ответят всем выбранным представление в ответе 200 (ОК). Отчасти это связано с тем, что большинство клиентов готовы получить 200 (OK) для выполнения задачи (хотя и менее эффективно), а отчасти потому, что клиенты могут не прекратить делать недействительный частичный запрос, пока они не получат полное представление. Таким образом, клиенты не могут зависеть от получения ответа 416 (диапазон не удовлетворен), даже если он наиболее уместен.</target>
        </trans-unit>
        <trans-unit id="74e2689c2b2651176712bcca9c3464c338299fa4" translate="yes" xml:space="preserve">
          <source>The 417 (Expectation Failed) status code indicates that the
   expectation given in the request's Expect header field
   (&lt;a href=&quot;#section-5.1.1&quot;&gt;Section 5.1.1&lt;/a&gt;) could not be met by at least one of the inbound
   servers.</source>
          <target state="translated">Код состояния 417 (Expectation Failed) указывает, что ожидание, указанное в поле заголовка Expect запроса ( &lt;a href=&quot;#section-5.1.1&quot;&gt;раздел 5.1.1&lt;/a&gt; ), не может быть выполнено по крайней мере одним из входящих серверов.</target>
        </trans-unit>
        <trans-unit id="240b1b41518b4e60c5fb369224ec2a4d545cd292" translate="yes" xml:space="preserve">
          <source>The 422 (Unprocessable Entity) status code means the server
   understands the content type of the request entity (hence a
   415(Unsupported Media Type) status code is inappropriate), and the
   syntax of the request entity is correct (thus a 400 (Bad Request)
   status code is inappropriate) but was unable to process the contained
   instructions.  For example, this error condition may occur if an XML
   request body contains well-formed (i.e., syntactically correct), but
   semantically erroneous, XML instructions.</source>
          <target state="translated">Код статуса 422 (Unprocessable Entity-Необрабатываемая сущность)означает,что сервер понимает тип содержимого сущности запроса (поэтому код статуса 415 (Unsupported Media Type-Неподдерживаемый тип носителя)неуместен),и синтаксис сущности запроса корректен (таким образом,код статуса 400 (Bad Request-Плохой запрос)неуместен),но не смог обработать содержащиеся в нем инструкции.Например,такое состояние ошибки может возникнуть,если XML-тело запроса содержит хорошо сформированные (т.е.синтаксически корректные),но семантически ошибочные XML-инструкции.</target>
        </trans-unit>
        <trans-unit id="ab7728b25333c3ed3e9c44c0ad08c1c5736966a3" translate="yes" xml:space="preserve">
          <source>The 423 (Locked) status code means the source or destination resource
   of a method is locked.  This response SHOULD contain an appropriate
   precondition or postcondition code, such as 'lock-token-submitted' or
   'no-conflicting-lock'.</source>
          <target state="translated">Код статуса 423 (Заблокирован)означает,что ресурс-источник или ресурс-получатель метода заблокирован.Этот ответ SHOULD содержит соответствующее предусловие или код постусловия,например,'lock-token-submitted' или 'no-conflicting-lock'.</target>
        </trans-unit>
        <trans-unit id="7bea7308e120efd626a2dea25e346d82459c7846" translate="yes" xml:space="preserve">
          <source>The 424 (Failed Dependency) status code means that the method could
   not be performed on the resource because the requested action
   depended on another action and that action failed.  For example, if a
   command in a PROPPATCH method fails, then, at minimum, the rest of
   the commands will also fail with 424 (Failed Dependency).</source>
          <target state="translated">Код статуса 424 (Failed Dependency)означает,что метод не мог быть выполнен в отношении ресурса,потому что запрашиваемое действие зависело от другого действия,и это действие было неудачным.Например,если команда в методе PROPPATCH не работает,то,как минимум,остальные команды также не работают с 424 (Failed Dependency-Неудачная зависимость).</target>
        </trans-unit>
        <trans-unit id="bbb046d45cb07e647735e9643ff8b2d8aa6d1cf5" translate="yes" xml:space="preserve">
          <source>The 426 (Upgrade Required) status code indicates that the server
   refuses to perform the request using the current protocol but might
   be willing to do so after the client upgrades to a different
   protocol.  The server MUST send an Upgrade header field in a 426
   response to indicate the required protocol(s) (&lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-6.7&quot;&gt;Section&amp;nbsp;6.7 of
   [RFC7230]&lt;/a&gt;).

   Example:

     HTTP/1.1 426 Upgrade Required
     Upgrade: HTTP/3.0
     Connection: Upgrade
     Content-Length: 53
     Content-Type: text/plain

     This service requires use of the HTTP/3.0 protocol.</source>
          <target state="translated">Код состояния 426 (требуется обновление) указывает на то, что сервер отказывается выполнять запрос с использованием текущего протокола, но может быть готов сделать это после того, как клиент перейдет на другой протокол. Сервер ДОЛЖЕН отправить поле заголовка Upgrade в ответе 426, чтобы указать требуемый протокол (ы) ( &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-6.7&quot;&gt;раздел 6.7 [RFC7230]&lt;/a&gt; ). Пример: HTTP / 1.1 426 Требуется обновление Обновление: HTTP / 3.0 Соединение: Обновление Content-Length: 53 Content-Type: text / plain Эта служба требует использования протокола HTTP / 3.0.</target>
        </trans-unit>
        <trans-unit id="ff18add20b8f554c457e49bc2e7ce8d714901464" translate="yes" xml:space="preserve">
          <source>The 4xx (Client Error) class of status code indicates that the client
   seems to have erred.  Except when responding to a HEAD request, the
   server SHOULD send a representation containing an explanation of the
   error situation, and whether it is a temporary or permanent
   condition.  These status codes are applicable to any request method.
   User agents SHOULD display any included representation to the user.</source>
          <target state="translated">Код статуса класса 4xx (Client Error)указывает на то,что клиент,похоже,ошибся.За исключением ответа на запрос HEAD,сервер ДОЛЖЕН отправить представление,содержащее объяснение ситуации с ошибкой,и является ли это временным или постоянным состоянием.Эти коды статуса применимы к любому методу запроса.Пользовательские агенты SHOULD отображают любое включенное представление пользователю.</target>
        </trans-unit>
        <trans-unit id="0c2a74d9f06b0a77075195702a5230a67673de95" translate="yes" xml:space="preserve">
          <source>The 4xx class of status code is intended for cases in which the
   client seems to have erred. Except when responding to a HEAD request,
   the server SHOULD include an entity containing an explanation of the
   error situation, and whether it is a temporary or permanent
   condition. These status codes are applicable to any request method.
   User agents SHOULD display any included entity to the user.

   If the client is sending data, a server implementation using TCP
   SHOULD be careful to ensure that the client acknowledges receipt of
   the packet(s) containing the response, before the server closes the
   input connection. If the client continues sending data to the server
   after the close, the server's TCP stack will send a reset packet to
   the client, which may erase the client's unacknowledged input buffers
   before they can be read and interpreted by the HTTP application.</source>
          <target state="translated">Статусный код класса 4xx предназначен для случаев,в которых клиент,похоже,ошибся.За исключением ответа на запрос HEAD,сервер SHOULD включает в себя сущность,содержащую объяснение ситуации ошибки,и является ли она временным или постоянным состоянием.Эти коды статуса применимы к любому методу запроса.Пользовательские агенты SHOULD отображают любую включенную сущность пользователю.Если клиент посылает данные,то при реализации сервера с использованием TCP SHOULD необходимо убедиться,что клиент подтверждает получение пакета(ов),содержащего(их)ответ,до того,как сервер закроет входное соединение.Если клиент продолжает посылать данные на сервер после закрытия,серверный TCP-стек посылает клиенту пакет сброса,который может стереть непризнанные входные буферы клиента до того,как они будут прочитаны и интерпретированы HTTP-приложением.</target>
        </trans-unit>
        <trans-unit id="e4172cee002fab51d59cbb6c27d459c5303764c9" translate="yes" xml:space="preserve">
          <source>The 500 (Internal Server Error) status code indicates that the server
   encountered an unexpected condition that prevented it from fulfilling
   the request.</source>
          <target state="translated">Код состояния 500 (Ошибка внутреннего сервера)указывает на то,что сервер столкнулся с неожиданным состоянием,которое не позволило ему выполнить запрос.</target>
        </trans-unit>
        <trans-unit id="5e788aee762bb64f07dea7e2e3b12cc4a6d5e7c2" translate="yes" xml:space="preserve">
          <source>The 501 (Not Implemented) status code indicates that the server does
   not support the functionality required to fulfill the request.  This
   is the appropriate response when the server does not recognize the
   request method and is not capable of supporting it for any resource.

   A 501 response is cacheable by default; i.e., unless otherwise
   indicated by the method definition or explicit cache controls (see
   &lt;a href=&quot;https://tools.ietf.org/html/rfc7234#section-4.2.2&quot;&gt;Section&amp;nbsp;4.2.2 of [RFC7234]&lt;/a&gt;).</source>
          <target state="translated">Код состояния 501 (не реализовано) указывает, что сервер не поддерживает функции, необходимые для выполнения запроса. Это подходящий ответ, когда сервер не распознает метод запроса и не может поддерживать его для какого-либо ресурса. По умолчанию ответ 501 кэшируется; то есть, если иное не указано в определении метода или явных элементах управления кешем (см. &lt;a href=&quot;https://tools.ietf.org/html/rfc7234#section-4.2.2&quot;&gt;раздел 4.2.2 [RFC7234]&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="537a3dde972341b94cbb072093d8857e86b4614a" translate="yes" xml:space="preserve">
          <source>The 502 (Bad Gateway) status code indicates that the server, while
   acting as a gateway or proxy, received an invalid response from an
   inbound server it accessed while attempting to fulfill the request.</source>
          <target state="translated">Код состояния 502 (Плохой шлюз)указывает,что сервер,действуя в качестве шлюза или прокси-сервера,получил неверный ответ от входящего сервера,к которому он обращался при попытке выполнить запрос.</target>
        </trans-unit>
        <trans-unit id="6bbdd751ae4429ec4369780a1676c0e2b99f0f2f" translate="yes" xml:space="preserve">
          <source>The 503 (Service Unavailable) status code indicates that the server
   is currently unable to handle the request due to a temporary overload
   or scheduled maintenance, which will likely be alleviated after some
   delay.  The server MAY send a Retry-After header field
   (&lt;a href=&quot;#section-7.1.3&quot;&gt;Section 7.1.3&lt;/a&gt;) to suggest an appropriate amount of time for the
   client to wait before retrying the request.

      Note: The existence of the 503 status code does not imply that a
      server has to use it when becoming overloaded.  Some servers might
      simply refuse the connection.</source>
          <target state="translated">Код состояния 503 (служба недоступна) указывает на то, что сервер в настоящее время не может обработать запрос из-за временной перегрузки или планового обслуживания, которые, вероятно, будут устранены после некоторой задержки. Сервер МОЖЕТ отправить поле заголовка Retry-After ( &lt;a href=&quot;#section-7.1.3&quot;&gt;раздел 7.1.3&lt;/a&gt; ), чтобы предложить клиенту соответствующее время ожидания перед повторной попыткой запроса. Примечание. Наличие кода состояния 503 не означает, что сервер должен использовать его при перегрузке. Некоторые серверы могут просто отказать в соединении.</target>
        </trans-unit>
        <trans-unit id="cb5a6e6224a6befed044cf459ac3ad6b9a312b3f" translate="yes" xml:space="preserve">
          <source>The 504 (Gateway Timeout) status code indicates that the server,
   while acting as a gateway or proxy, did not receive a timely response
   from an upstream server it needed to access in order to complete the
   request.</source>
          <target state="translated">Код состояния 504 (Gateway Timeout)указывает на то,что сервер,действуя в качестве шлюза или прокси-сервера,не получил своевременного ответа от сервера,к которому он должен был получить доступ для завершения запроса.</target>
        </trans-unit>
        <trans-unit id="73dde1c42105fdf2e1da6b5ec6f32547fa21c1f6" translate="yes" xml:space="preserve">
          <source>The 505 (HTTP Version Not Supported) status code indicates that the
   server does not support, or refuses to support, the major version of
   HTTP that was used in the request message.  The server is indicating
   that it is unable or unwilling to complete the request using the same
   major version as the client, as described in &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-2.6&quot;&gt;Section&amp;nbsp;2.6 of
   [RFC7230]&lt;/a&gt;, other than with this error message.  The server SHOULD
   generate a representation for the 505 response that describes why
   that version is not supported and what other protocols are supported
   by that server.</source>
          <target state="translated">Код состояния 505 (версия HTTP не поддерживается) указывает, что сервер не поддерживает или отказывается поддерживать основную версию HTTP, которая использовалась в сообщении запроса. Сервер указывает, что он не может или не хочет выполнить запрос, используя ту же основную версию, что и клиент, как описано в &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-2.6&quot;&gt;разделе 2.6 [RFC7230]&lt;/a&gt; , за исключением этого сообщения об ошибке. Серверу СЛЕДУЕТ генерировать представление для ответа 505, которое описывает, почему эта версия не поддерживается, и какие другие протоколы поддерживаются этим сервером.</target>
        </trans-unit>
        <trans-unit id="6cfe58d6c6aa1b9a0d0a3a747564d201b045f349" translate="yes" xml:space="preserve">
          <source>The 507 (Insufficient Storage) status code means the method could not
   be performed on the resource because the server is unable to store
   the representation needed to successfully complete the request.  This
   condition is considered to be temporary.  If the request that
   received this status code was the result of a user action, the
   request MUST NOT be repeated until it is requested by a separate user
   action.</source>
          <target state="translated">Код статуса 507 (Недостаточное хранение)означает,что метод не может быть выполнен на ресурсе,так как сервер не может хранить представление,необходимое для успешного завершения запроса.Это условие считается временным.Если запрос,получивший такой код статуса,является результатом действия пользователя,то запрос НЕ ДОЛЖЕН повторяться до тех пор,пока не будет запрошен отдельным действием пользователя.</target>
        </trans-unit>
        <trans-unit id="0e2021f09cffdfd7e8e3c2b6e4af6afc876e3ba4" translate="yes" xml:space="preserve">
          <source>The 511 status code indicates that the client needs to authenticate to gain network access.</source>
          <target state="translated">Код состояния 511 указывает,что для получения доступа к сети клиенту необходимо пройти аутентификацию.</target>
        </trans-unit>
        <trans-unit id="6f13f00eed6e2731f85266d4d2b5d1b194f1dc69" translate="yes" xml:space="preserve">
          <source>The 5xx (Server Error) class of status code indicates that the server
   is aware that it has erred or is incapable of performing the
   requested method.  Except when responding to a HEAD request, the
   server SHOULD send a representation containing an explanation of the
   error situation, and whether it is a temporary or permanent 

   condition.  A user agent SHOULD display any included representation
   to the user.  These response codes are applicable to any request
   method.</source>
          <target state="translated">Класс 5xx (Server Error)кода статуса указывает на то,что сервер знает,что он ошибся или не способен выполнить запрошенный метод.За исключением ответа на запрос HEAD,сервер ДОЛЖЕН посылать представление,содержащее объяснение ситуации ошибки,и является ли это временным или постоянным состоянием.Пользовательский агент SHOULD выводит на экран любое включенное представление.Эти коды ответа применимы к любому методу запроса.</target>
        </trans-unit>
        <trans-unit id="eff8921ecde9859824b0aa4a316363853f77725f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../index&quot;&gt;HTTP&lt;/a&gt;&lt;a href=&quot;../content-security-policy&quot;&gt;&lt;code&gt;Content-Security-Policy&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&lt;strong&gt;require-sri-for&lt;/strong&gt;&lt;/code&gt; directive instructs the client to require the use of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Security/Subresource_Integrity&quot;&gt;Subresource Integrity&lt;/a&gt; for scripts or styles on the page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8981236cb35a3546e80d22d9775227a98e95ef1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../basics_of_http/mime_types&quot;&gt;MIME type&lt;/a&gt; of the resource or the data.</source>
          <target state="translated">Тип &lt;a href=&quot;../basics_of_http/mime_types&quot;&gt;MIME&lt;/a&gt; ресурса или данных.</target>
        </trans-unit>
        <trans-unit id="476cfd9f7f7d09d394f8e2d140063c4110e761fd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../headers/access-control-request-headers&quot;&gt;&lt;code&gt;Access-Control-Request-Headers&lt;/code&gt;&lt;/a&gt; header tells the server that when the actual request is sent, it will have the &lt;code&gt;X-PINGOTHER&lt;/code&gt; and &lt;code&gt;Content-Type&lt;/code&gt; headers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11aa0c02b1fe58d03a5cb415bbf783776721cd3e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../headers/access-control-request-method&quot;&gt;&lt;code&gt;Access-Control-Request-Method&lt;/code&gt;&lt;/a&gt; header sent in the preflight request tells the server that when the actual request is sent, it will have a &lt;a href=&quot;post&quot;&gt;&lt;code&gt;POST&lt;/code&gt;&lt;/a&gt; request method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bee0f2cff0fd1a73153d67243f177de87af10640" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../headers/feature-policy&quot;&gt;&lt;code&gt;Feature-Policy&lt;/code&gt;&lt;/a&gt; HTTP header.</source>
          <target state="translated">&lt;a href=&quot;../headers/feature-policy&quot;&gt; &lt;code&gt;Feature-Policy&lt;/code&gt; &lt;/a&gt; HTTP заголовка.</target>
        </trans-unit>
        <trans-unit id="1495070845bb0ae9175f95e2e4b9163ee31037e8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../headers/referer&quot;&gt;&lt;code&gt;Referer&lt;/code&gt;&lt;/a&gt; URL is too long</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3221539e7878d032dbdd4035adad83f822b0aa1b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../referer&quot;&gt;&lt;code&gt;Referer&lt;/code&gt;&lt;/a&gt; header will be omitted entirely. No referrer information is sent along with requests.</source>
          <target state="translated">&lt;a href=&quot;../referer&quot;&gt; &lt;code&gt;Referer&lt;/code&gt; &lt;/a&gt; заголовок будет полностью опущен. Информация о реферере не отправляется вместе с запросами.</target>
        </trans-unit>
        <trans-unit id="e873c7c4f23e96331a7b10f6fab0e72d0c3815f6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;connection&quot;&gt;&lt;code&gt;Connection&lt;/code&gt;&lt;/a&gt; header needs to be set to &quot;keep-alive&quot; for this header to have any meaning.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="823cc49a67542bdec9a4ef4d6b1e415d7aeb3b04" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;connection&quot;&gt;&lt;code&gt;Connection&lt;/code&gt;&lt;/a&gt; header needs to be set to &quot;keep-alive&quot; for this header to have any meaning. Also, &lt;a href=&quot;connection&quot;&gt;&lt;code&gt;Connection&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;keep-alive&quot;&gt;&lt;code&gt;Keep-Alive&lt;/code&gt;&lt;/a&gt; are ignored in HTTP/2; connection management is handled by other mechanisms there.</source>
          <target state="translated">В &lt;a href=&quot;connection&quot;&gt; &lt;code&gt;Connection&lt;/code&gt; &lt;/a&gt; потребности заголовок должен быть установлен в &amp;laquo;Keep-Alive&amp;raquo; для этого заголовка , чтобы иметь какое - либо значение. Также в HTTP / 2 игнорируются &lt;a href=&quot;connection&quot;&gt; &lt;code&gt;Connection&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;keep-alive&quot;&gt; &lt;code&gt;Keep-Alive&lt;/code&gt; &lt;/a&gt; ; там управление подключением осуществляется другими механизмами.</target>
        </trans-unit>
        <trans-unit id="3168c5253229cb7eddd39a17b55204a0719f1ccb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;content-type&quot;&gt;&lt;code&gt;Content-Type&lt;/code&gt;&lt;/a&gt; defining the boundary of the multipart body.</source>
          <target state="translated">&lt;a href=&quot;content-type&quot;&gt; &lt;code&gt;Content-Type&lt;/code&gt; &lt;/a&gt; определение границы многочастного тела.</target>
        </trans-unit>
        <trans-unit id="c285a5fb007b2a2d826d7bbfcdc526294f9f38d5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;headers/accept&quot;&gt;&lt;code&gt;Accept&lt;/code&gt;&lt;/a&gt; header is defined by the browser, or any other user-agent, and can vary according to the context, like fetching an HTML page or an image, a video, or a script: It is different when fetching a document entered in the address bar or an element linked via an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img&quot;&gt;&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio&quot;&gt;&lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt;&lt;/a&gt; element. Browsers are free to use the value of the header that they think is the most adequate; an exhaustive list of &lt;a href=&quot;content_negotiation/list_of_default_accept_values&quot;&gt;default values for common browsers&lt;/a&gt; is available.</source>
          <target state="translated">&lt;a href=&quot;headers/accept&quot;&gt; &lt;code&gt;Accept&lt;/code&gt; &lt;/a&gt; заголовок определяется браузером или любого другим агентом пользователя, и может варьироваться в зависимости от контекста, как извлечение страницы HTML или изображения, видео или сценария: Он отличается при выборке документ вступил в адресная строка или элемент, связанный с помощью элемента &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img&quot;&gt; &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt; &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio&quot;&gt; &lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt; &lt;/a&gt; . Браузеры могут свободно использовать значение заголовка, которое они считают наиболее подходящим; доступен исчерпывающий список &lt;a href=&quot;content_negotiation/list_of_default_accept_values&quot;&gt;значений по умолчанию для распространенных браузеров&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bb614dd01dd7b5c3319f1fa867383facbd91a1a2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;headers/accept&quot;&gt;&lt;code&gt;Accept&lt;/code&gt;&lt;/a&gt; header lists the MIME types of media resources that the agent is willing to process. It is comma-separated lists of MIME types, each combined with a quality factor, a parameter indicating the relative degree of preference between the different MIME types.</source>
          <target state="translated">В заголовке &lt;a href=&quot;headers/accept&quot;&gt; &lt;code&gt;Accept&lt;/code&gt; &lt;/a&gt; перечислены MIME-типы медиаресурсов, которые агент готов обрабатывать. Это списки типов MIME, разделенных запятыми, каждый из которых объединен с коэффициентом качества, параметром, указывающим относительную степень предпочтения между различными типами MIME.</target>
        </trans-unit>
        <trans-unit id="47c1d1550663e7b9840b652f6ba1f6059d00bdc3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;headers/accept-ch-lifetime&quot;&gt;&lt;code&gt;Accept-CH-Lifetime&lt;/code&gt;&lt;/a&gt; header is used with the &lt;code&gt;Device-Memory&lt;/code&gt; value of the &lt;code&gt;Accept-CH&lt;/code&gt; header and indicates the amount of time the device should opt-in to sharing the amount of device memory with the server. The value is given in miliseconds and it's use is optional.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72ac9e88d286f1a089252d01c7518ad33d10efe4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;headers/accept-charset&quot;&gt;&lt;code&gt;Accept-Charset&lt;/code&gt;&lt;/a&gt; header indicates to the server what kinds of character encodings are understood by the user-agent. Traditionally, it was set to a different value for each locale for the browser, like &lt;code&gt;ISO-8859-1,utf-8;q=0.7,*;q=0.7&lt;/code&gt; for a Western European locale.</source>
          <target state="translated">&lt;a href=&quot;headers/accept-charset&quot;&gt; &lt;code&gt;Accept-Charset&lt;/code&gt; &lt;/a&gt; заголовок указывает серверу , какие кодировки символов понятны агента пользователя. Традиционно для каждого языкового стандарта браузера было установлено другое значение, например &lt;code&gt;ISO-8859-1,utf-8;q=0.7,*;q=0.7&lt;/code&gt; для западноевропейского языкового стандарта.</target>
        </trans-unit>
        <trans-unit id="cac90f4ab93dcb579a645e89e4735bc55952622d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;headers/accept-encoding&quot;&gt;&lt;code&gt;Accept-Encoding&lt;/code&gt;&lt;/a&gt; header defines the acceptable content-encoding (supported compressions). The value is a q-factor list (e.g.: &lt;code&gt;br, gzip;q=0.8&lt;/code&gt;) that indicates the priority of the encoding values. The default value &lt;code&gt;identity&lt;/code&gt; is at the lowest priority (unless otherwise declared).</source>
          <target state="translated">&lt;a href=&quot;headers/accept-encoding&quot;&gt; &lt;code&gt;Accept-Encoding&lt;/code&gt; &lt;/a&gt; заголовок определяет приемлемый контент-кодирование (поддерживаются сжатия). Значение представляет собой список q-факторов (например: &lt;code&gt;br, gzip;q=0.8&lt;/code&gt; ), который указывает приоритет значений кодирования. Значение по умолчанию &lt;code&gt;identity&lt;/code&gt; является самым низким приоритетом (если иное не заявлено).</target>
        </trans-unit>
        <trans-unit id="1da487f47873fc85841849fa6ec975c0f7e1eb16" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;headers/accept-language&quot;&gt;&lt;code&gt;Accept-Language&lt;/code&gt;&lt;/a&gt; header is used to indicate the language preference of the user. It is a list of values with quality factors (like: &lt;code&gt;&quot;de, en;q=0.7&lt;/code&gt;&quot;). A default value is often set according the language of the graphical interface of the user agent, but most browsers allow to set different language preferences.</source>
          <target state="translated">&lt;a href=&quot;headers/accept-language&quot;&gt; &lt;code&gt;Accept-Language&lt;/code&gt; &lt;/a&gt; заголовок используется для обозначения языка предпочтения пользователя. Это список значений с коэффициентами качества (например: &lt;code&gt;&quot;de, en;q=0.7&lt;/code&gt; &amp;raquo;). Значение по умолчанию часто устанавливается в соответствии с языком графического интерфейса пользовательского агента, но большинство браузеров позволяют устанавливать различные языковые предпочтения.</target>
        </trans-unit>
        <trans-unit id="5e7674c7262d6464316098c5b65d3d21f6faacd3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;headers/access-control-allow-credentials&quot;&gt;&lt;code&gt;Access-Control-Allow-Credentials&lt;/code&gt;&lt;/a&gt; header Indicates whether or not the response to the request can be exposed when the &lt;code&gt;credentials&lt;/code&gt; flag is true. When used as part of a response to a preflight request, this indicates whether or not the actual request can be made using credentials. Note that simple &lt;code&gt;GET&lt;/code&gt; requests are not preflighted, and so if a request is made for a resource with credentials, if this header is not returned with the resource, the response is ignored by the browser and not returned to web content.</source>
          <target state="translated">&lt;a href=&quot;headers/access-control-allow-credentials&quot;&gt; &lt;code&gt;Access-Control-Allow-Credentials&lt;/code&gt; &lt;/a&gt; заголовка Указывает , является ли ответ на запрос может быть открыта , когда &lt;code&gt;credentials&lt;/code&gt; флаг верно. При использовании как часть ответа на предварительный запрос, это указывает, может ли фактический запрос быть выполнен с использованием учетных данных. Обратите внимание, что простые запросы &lt;code&gt;GET&lt;/code&gt; не выполняются заранее, и поэтому, если запрос сделан для ресурса с учетными данными, если этот заголовок не возвращается с ресурсом, ответ игнорируется браузером и не возвращается веб-контенту.</target>
        </trans-unit>
        <trans-unit id="fb5022c494946ba6c712c71a1fbc929d4a279c00" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;headers/access-control-allow-headers&quot;&gt;&lt;code&gt;Access-Control-Allow-Headers&lt;/code&gt;&lt;/a&gt; header is used in response to a &lt;a href=&quot;#Preflighted_requests&quot;&gt;preflight request&lt;/a&gt; to indicate which HTTP headers can be used when making the actual request.</source>
          <target state="translated">&lt;a href=&quot;headers/access-control-allow-headers&quot;&gt; &lt;code&gt;Access-Control-Allow-Headers&lt;/code&gt; &lt;/a&gt; заголовок используется в ответ на &lt;a href=&quot;#Preflighted_requests&quot;&gt;предполетной просьбу&lt;/a&gt; указать , какие HTTP заголовки могут быть использованы при выполнении фактического запроса.</target>
        </trans-unit>
        <trans-unit id="47e57affccad38127a20bce8c3436539e88c6c38" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;headers/access-control-allow-methods&quot;&gt;&lt;code&gt;Access-Control-Allow-Methods&lt;/code&gt;&lt;/a&gt; header specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request. The conditions under which a request is preflighted are discussed above.</source>
          <target state="translated">&lt;a href=&quot;headers/access-control-allow-methods&quot;&gt; &lt;code&gt;Access-Control-Allow-Methods&lt;/code&gt; &lt;/a&gt; заголовок определяет метод или методы , разрешенные при обращении к ресурсу. Это используется в ответ на предполетный запрос. Условия, при которых выполняется предварительная проверка запроса, описаны выше.</target>
        </trans-unit>
        <trans-unit id="4527c593b9686c403ce7ee6942811c00a0260ae5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;headers/access-control-expose-headers&quot;&gt;&lt;code&gt;Access-Control-Expose-Headers&lt;/code&gt;&lt;/a&gt; header lets a server whitelist headers that Javascript (such as &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/getResponseHeader&quot;&gt;&lt;code&gt;getResponseHeader()&lt;/code&gt;&lt;/a&gt;) in browsers are allowed to access.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e7542b9c473bf75e6b574a96c6ca9ae6b946296" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;headers/access-control-expose-headers&quot;&gt;&lt;code&gt;Access-Control-Expose-Headers&lt;/code&gt;&lt;/a&gt; header lets a server whitelist headers that browsers are allowed to access. For example:</source>
          <target state="translated">&lt;a href=&quot;headers/access-control-expose-headers&quot;&gt; &lt;code&gt;Access-Control-Expose-Headers&lt;/code&gt; &lt;/a&gt; заголовок позволяет серверу белый список заголовков , которые браузеры разрешен доступ. Например:</target>
        </trans-unit>
        <trans-unit id="0c96e27b026e07ddc3f2931ff6f47daf2922b214" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;headers/access-control-max-age&quot;&gt;&lt;code&gt;Access-Control-Max-Age&lt;/code&gt;&lt;/a&gt; header indicates how long the results of a preflight request can be cached. For an example of a preflight request, see the above examples.</source>
          <target state="translated">&lt;a href=&quot;headers/access-control-max-age&quot;&gt; &lt;code&gt;Access-Control-Max-Age&lt;/code&gt; &lt;/a&gt; заголовок указывает на то, как долго можно кэшировать результаты предполетного запроса. Пример запроса предварительной проверки см. В примерах выше.</target>
        </trans-unit>
        <trans-unit id="b00b4f03e257f3dbfb1f8d0d5cf818265cd59e8a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;headers/access-control-request-headers&quot;&gt;&lt;code&gt;Access-Control-Request-Headers&lt;/code&gt;&lt;/a&gt; header is used when issuing a preflight request to let the server know what HTTP headers will be used when the actual request is made.</source>
          <target state="translated">&lt;a href=&quot;headers/access-control-request-headers&quot;&gt; &lt;code&gt;Access-Control-Request-Headers&lt;/code&gt; &lt;/a&gt; заголовок используется при выдаче предполетной запрос , чтобы позволить ноу - сервера , что HTTP заголовки будут использоваться , когда фактический запрос был сделан.</target>
        </trans-unit>
        <trans-unit id="691c99e3378023d77080d83aad7e1e58d0aa3326" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;headers/access-control-request-method&quot;&gt;&lt;code&gt;Access-Control-Request-Method&lt;/code&gt;&lt;/a&gt; header notifies the server as part of a preflight request that when the actual request is sent, it will be sent with a &lt;code&gt;POST&lt;/code&gt; request method. The &lt;a href=&quot;headers/access-control-request-headers&quot;&gt;&lt;code&gt;Access-Control-Request-Headers&lt;/code&gt;&lt;/a&gt; header notifies the server that when the actual request is sent, it will be sent with a &lt;code&gt;X-PINGOTHER&lt;/code&gt; and &lt;code&gt;Content-Type&lt;/code&gt; custom headers. The server now has an opportunity to determine whether it wishes to accept a request under these circumstances.</source>
          <target state="translated">В &lt;a href=&quot;headers/access-control-request-method&quot;&gt; &lt;code&gt;Access-Control-Request-Method&lt;/code&gt; &lt;/a&gt; оповещает заголовок сервер в качестве части предполетной просьбы о том , когда фактический запрос отправляется, он будет отправлен с &lt;code&gt;POST&lt;/code&gt; методом запроса. В &lt;a href=&quot;headers/access-control-request-headers&quot;&gt; &lt;code&gt;Access-Control-Request-Headers&lt;/code&gt; &lt;/a&gt; оповещает заголовок сервера , на котором , когда фактический запрос отправляется, он будет отправлен с &lt;code&gt;X-PINGOTHER&lt;/code&gt; и &lt;code&gt;Content-Type&lt;/code&gt; пользовательских заголовков. Теперь у сервера есть возможность определить, желает ли он принять запрос в этих обстоятельствах.</target>
        </trans-unit>
        <trans-unit id="00e93481fc61267674621b1c977f194bc75b6c9a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;headers/access-control-request-method&quot;&gt;&lt;code&gt;Access-Control-Request-Method&lt;/code&gt;&lt;/a&gt; is used when issuing a preflight request to let the server know what HTTP method will be used when the actual request is made.</source>
          <target state="translated">Метод &lt;a href=&quot;headers/access-control-request-method&quot;&gt; &lt;code&gt;Access-Control-Request-Method&lt;/code&gt; &lt;/a&gt; используется при выдаче предполетного запроса, чтобы сервер знал, какой HTTP-метод будет использован при выполнении фактического запроса.</target>
        </trans-unit>
        <trans-unit id="7fbe0c67984080abcf5fba23225ff8d88603f4f2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;headers/authorization&quot;&gt;&lt;code&gt;Authorization&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;headers/proxy-authorization&quot;&gt;&lt;code&gt;Proxy-Authorization&lt;/code&gt;&lt;/a&gt; request headers contain the credentials to authenticate a user agent with a (proxy) server. Here, the &lt;code&gt;&amp;lt;type&amp;gt;&lt;/code&gt; is needed again followed by the credentials, which can be encoded or encrypted depending on which authentication scheme is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32735ad57de0b36b9cb875eb26ae77710d7487d1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;headers/authorization&quot;&gt;&lt;code&gt;Authorization&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;headers/proxy-authorization&quot;&gt;&lt;code&gt;Proxy-Authorization&lt;/code&gt;&lt;/a&gt; request headers contain the credentials to authenticate a user agent with a (proxy) server. Here, the type is needed again followed by the credentials, which can be encoded or encrypted depending on which authentication scheme is used.</source>
          <target state="translated">В &lt;a href=&quot;headers/authorization&quot;&gt; &lt;code&gt;Authorization&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;headers/proxy-authorization&quot;&gt; &lt;code&gt;Proxy-Authorization&lt;/code&gt; &lt;/a&gt; заголовки запроса содержат учетные данные для аутентификации агента пользователя с сервером (прокси). Здесь снова требуется тип, за которым следуют учетные данные, которые могут быть закодированы или зашифрованы в зависимости от того, какая схема аутентификации используется.</target>
        </trans-unit>
        <trans-unit id="53e54b41889fb412304c339ba63b0b1d28f93d5d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;headers/cache-control&quot;&gt;&lt;code&gt;Cache-Control&lt;/code&gt;&lt;/a&gt; HTTP/1.1 general-header field is used to specify directives for caching mechanisms in both requests and responses. Use this header to define your caching policies with the variety of directives it provides.</source>
          <target state="translated">Поле общего заголовка &lt;a href=&quot;headers/cache-control&quot;&gt; &lt;code&gt;Cache-Control&lt;/code&gt; &lt;/a&gt; HTTP / 1.1 используется для указания директив для механизмов кэширования как в запросах, так и в ответах. Используйте этот заголовок, чтобы определить свою политику кэширования с помощью множества предоставляемых им директив.</target>
        </trans-unit>
        <trans-unit id="7095083b873f36d44191b5aa9a6bd5c7f44c8102" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;headers/content-length&quot;&gt;&lt;code&gt;Content-Length&lt;/code&gt;&lt;/a&gt; header now indicates the size of the requested range (and not the full size of the image). The &lt;a href=&quot;headers/content-range&quot;&gt;&lt;code&gt;Content-Range&lt;/code&gt;&lt;/a&gt; response header indicates where in the full resource this partial message belongs.</source>
          <target state="translated">&lt;a href=&quot;headers/content-length&quot;&gt; &lt;code&gt;Content-Length&lt;/code&gt; &lt;/a&gt; заголовка теперь указывает размер запрашиваемого диапазона (и не полный размер изображения). &lt;a href=&quot;headers/content-range&quot;&gt; &lt;code&gt;Content-Range&lt;/code&gt; &lt;/a&gt; заголовка ответа указывает на то, где в полном ресурсе принадлежит это частичное сообщение.</target>
        </trans-unit>
        <trans-unit id="373e10b1138008b081311180730e472ee8b5d4d7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;headers/content-security-policy&quot;&gt;&lt;code&gt;Content-Security-Policy&lt;/code&gt;&lt;/a&gt; response header fields allows web site administrators to control resources the user agent is allowed to load for a given page. With a few exceptions, policies mostly involve specifying server origins and script endpoints.</source>
          <target state="translated">В &lt;a href=&quot;headers/content-security-policy&quot;&gt; &lt;code&gt;Content-Security-Policy&lt;/code&gt; &lt;/a&gt; поля заголовка ответа позволяет администраторам веб - сайта для управления ресурсами агент пользователю разрешено нагрузки для данной страницы. За некоторыми исключениями, политики в основном включают указание источников сервера и конечных точек сценария.</target>
        </trans-unit>
        <trans-unit id="b9fe6d801fee6375976ebc4e32f720967639b006" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;headers/etag&quot;&gt;&lt;code&gt;ETag&lt;/code&gt;&lt;/a&gt; response header is an &lt;em&gt;opaque-to-the-useragent&lt;/em&gt; value that can be used as a strong validator. That means that a HTTP user-agent, such as the browser, does not know what this string represents and can't predict what its value would be. If the &lt;code&gt;ETag&lt;/code&gt; header was part of the response for a resource, the client can issue an &lt;a href=&quot;headers/if-none-match&quot;&gt;&lt;code&gt;If-None-Match&lt;/code&gt;&lt;/a&gt; in the header of future requests &amp;ndash; in order to validate the cached resource.</source>
          <target state="translated">&lt;a href=&quot;headers/etag&quot;&gt; &lt;code&gt;ETag&lt;/code&gt; &lt;/a&gt; заголовок ответа является &lt;em&gt;непрозрачным-к-UserAgent&lt;/em&gt; значение , которое может быть использовано в качестве сильного валидатора. Это означает, что пользовательский агент HTTP, такой как браузер, не знает, что представляет собой эта строка, и не может предсказать, каким будет ее значение. Если заголовок &lt;code&gt;ETag&lt;/code&gt; был частью ответа для ресурса, клиент может выдать &lt;a href=&quot;headers/if-none-match&quot;&gt; &lt;code&gt;If-None-Match&lt;/code&gt; &lt;/a&gt; в заголовке будущих запросов - для проверки кэшированного ресурса.</target>
        </trans-unit>
        <trans-unit id="cc825b2410b4df4739e11c71f412ef7ef377ba8f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;headers/feature-policy&quot;&gt;&lt;code&gt;Feature-Policy&lt;/code&gt;&lt;/a&gt; HTTP header.</source>
          <target state="translated">&lt;a href=&quot;headers/feature-policy&quot;&gt; &lt;code&gt;Feature-Policy&lt;/code&gt; &lt;/a&gt; HTTP заголовка.</target>
        </trans-unit>
        <trans-unit id="02c9a22613e0a52af16dfd3143868970cb39f043" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;headers/if-range&quot;&gt;&lt;code&gt;If-Range&lt;/code&gt;&lt;/a&gt; HTTP request header makes a range request conditional: if the condition is fulfilled, the range request will be issued and the server sends back a &lt;a href=&quot;status/206&quot;&gt;&lt;code&gt;206&lt;/code&gt;&lt;/a&gt;&lt;code&gt;Partial Content&lt;/code&gt; answer with the appropriate body. If the condition is not fulfilled, the full resource is sent back, with a &lt;a href=&quot;status/200&quot;&gt;&lt;code&gt;200&lt;/code&gt;&lt;/a&gt;&lt;code&gt;OK&lt;/code&gt; status. This header can be used either with a &lt;a href=&quot;headers/last-modified&quot;&gt;&lt;code&gt;Last-Modified&lt;/code&gt;&lt;/a&gt; validator, or with an &lt;a href=&quot;headers/etag&quot;&gt;&lt;code&gt;ETag&lt;/code&gt;&lt;/a&gt;, but not with both.</source>
          <target state="translated">&lt;a href=&quot;headers/if-range&quot;&gt; &lt;code&gt;If-Range&lt;/code&gt; &lt;/a&gt; заголовок запроса HTTP делает запрос диапазона условно: если условие выполняется, то запрос на диапазон будет выдан и сервер отправляет обратно &lt;a href=&quot;status/206&quot;&gt; &lt;code&gt;206&lt;/code&gt; &lt;/a&gt; &lt;code&gt;Partial Content&lt;/code&gt; ответа с соответствующим органом. Если условие не выполняется, возвращается полный ресурс со статусом &lt;a href=&quot;status/200&quot;&gt; &lt;code&gt;200&lt;/code&gt; &lt;/a&gt; &lt;code&gt;OK&lt;/code&gt; . Этот заголовок может использоваться либо с валидатором &lt;a href=&quot;headers/last-modified&quot;&gt; &lt;code&gt;Last-Modified&lt;/code&gt; &lt;/a&gt; , либо с &lt;a href=&quot;headers/etag&quot;&gt; &lt;code&gt;ETag&lt;/code&gt; &lt;/a&gt; , но не с обоими.</target>
        </trans-unit>
        <trans-unit id="590a84433585d18f20730243da1b6a8953716c09" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;headers/last-modified&quot;&gt;&lt;code&gt;Last-Modified&lt;/code&gt;&lt;/a&gt; response header can be used as a weak validator. It is considered weak because it only has 1-second resolution. If the &lt;code&gt;Last-Modified&lt;/code&gt; header is present in a response, then the client can issue an &lt;a href=&quot;headers/if-modified-since&quot;&gt;&lt;code&gt;If-Modified-Since&lt;/code&gt;&lt;/a&gt; request header to validate the cached document.</source>
          <target state="translated">&lt;a href=&quot;headers/last-modified&quot;&gt; &lt;code&gt;Last-Modified&lt;/code&gt; &lt;/a&gt; заголовок ответа может быть использован в качестве слабого валидатора. Он считается слабым, потому что имеет разрешение всего 1 секунду. Если в ответе присутствует заголовок &lt;code&gt;Last-Modified&lt;/code&gt; , то клиент может выдать заголовок запроса &lt;a href=&quot;headers/if-modified-since&quot;&gt; &lt;code&gt;If-Modified-Since&lt;/code&gt; &lt;/a&gt; для проверки кэшированного документа.</target>
        </trans-unit>
        <trans-unit id="9a00311ebb7587989dbe59dcf3d642597bd57cd9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;headers/origin&quot;&gt;&lt;code&gt;Origin&lt;/code&gt;&lt;/a&gt; header indicates the origin of the cross-site access request or preflight request.</source>
          <target state="translated">&lt;a href=&quot;headers/origin&quot;&gt; &lt;code&gt;Origin&lt;/code&gt; &lt;/a&gt; заголовка указывает происхождение запроса доступа межсайтовому или предполетной запрос.</target>
        </trans-unit>
        <trans-unit id="00410abbfb65785de4501043b5495b885e06221c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;headers/range&quot;&gt;&lt;code&gt;Range&lt;/code&gt;&lt;/a&gt; header also allows you to get multiple ranges at once in a multipart document. The ranges are separated by a comma.</source>
          <target state="translated">&lt;a href=&quot;headers/range&quot;&gt; &lt;code&gt;Range&lt;/code&gt; &lt;/a&gt; заголовка также позволяет получить несколько диапазонов сразу в нескольких частей документа. Диапазоны разделяются запятой.</target>
        </trans-unit>
        <trans-unit id="86f95f2219b451868ec50ea455d93d73adebbf1e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;headers/set-cookie&quot;&gt;&lt;code&gt;Set-Cookie&lt;/code&gt;&lt;/a&gt; HTTP response header sends cookies from the server to the user agent. A simple cookie is set like this:</source>
          <target state="translated">&lt;a href=&quot;headers/set-cookie&quot;&gt; &lt;code&gt;Set-Cookie&lt;/code&gt; &lt;/a&gt; заголовка ответа HTTP , посылает куки с сервера агента пользователя. Простой файл cookie устанавливается следующим образом:</target>
        </trans-unit>
        <trans-unit id="af75cb2c0da0fe81a5535d484eb290c4bd4d639e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;headers/transfer-encoding&quot;&gt;&lt;code&gt;Transfer-Encoding&lt;/code&gt;&lt;/a&gt; header allows chunked encoding, which is useful when larger amounts of data are sent to the client and the total size of the response is not known until the request has been fully processed. The server sends data to the client straight away without buffering the response or determining the exact length, which leads to improved latency. Range requests and chunking are compatible and can be used with or without each other.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7f353f47a7491fd7a18b5bc1a1b46d2745b86d1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;headers/transfer-encoding&quot;&gt;&lt;code&gt;Transfer-Encoding&lt;/code&gt;&lt;/a&gt; header allows chunked encoding, which useful when larger amounts of data are sent to the client and the total size of the response is not known until the request has been fully processed. The server sends data to the client straight away without buffering the response or determining the exact length, which leads to improved latency. Range requests and chunking are compatible and can be used with or without each other.</source>
          <target state="translated">&lt;a href=&quot;headers/transfer-encoding&quot;&gt; &lt;code&gt;Transfer-Encoding&lt;/code&gt; &lt;/a&gt; заголовок позволяет блочное кодирование, которое полезно , когда большие объемы данных , отправляемый клиенту и общего размеру ответа не известно , пока запрос был полностью обработан. Сервер сразу отправляет данные клиенту, не буферизуя ответ и не определяя точную длину, что приводит к уменьшению задержки. Запросы диапазона и разбиение на части совместимы и могут использоваться друг с другом или без него.</target>
        </trans-unit>
        <trans-unit id="427718e5d2f07133480270391026fe30a80122e0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;headers/user-agent&quot;&gt;&lt;code&gt;User-Agent&lt;/code&gt;&lt;/a&gt; header identifies the browser sending the request. This string may contain a space-separated list of &lt;em&gt;product tokens&lt;/em&gt; and &lt;em&gt;comments&lt;/em&gt;.</source>
          <target state="translated">&lt;a href=&quot;headers/user-agent&quot;&gt; &lt;code&gt;User-Agent&lt;/code&gt; &lt;/a&gt; заголовок идентифицирует браузер отправляет запрос. Эта строка может содержать разделенный пробелами список &lt;em&gt;токенов продукта&lt;/em&gt; и &lt;em&gt;комментариев&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="1e0b7713d148829012c4c472ea954c0d5574cc79" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;headers/vary&quot;&gt;&lt;code&gt;Vary&lt;/code&gt;&lt;/a&gt; HTTP response header determines how to match future request headers to decide whether a cached response can be used rather than requesting a fresh one from the origin server.</source>
          <target state="translated">&lt;a href=&quot;headers/vary&quot;&gt; &lt;code&gt;Vary&lt;/code&gt; &lt;/a&gt; HTTP - заголовок ответа определяет , как соответствовать запросу в будущем заголовков , чтобы решить , можно ли использовать в кэше ответ , а не запрашивать свежую один из исходного сервера.</target>
        </trans-unit>
        <trans-unit id="b1d4a413436104711d19f9e2f2ce3b22dd6fa9fb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;headers/vary&quot;&gt;&lt;code&gt;Vary&lt;/code&gt;&lt;/a&gt; HTTP response header determines how to match future request headers to decide whether a cached response can be used, or if a fresh one must be requested from the origin server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f8e8fc45b5f4468eb6609ffd5ad8cb0e64e2e51" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;headers/www-authenticate&quot;&gt;&lt;code&gt;WWW-Authenticate&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;headers/proxy-authenticate&quot;&gt;&lt;code&gt;Proxy-Authenticate&lt;/code&gt;&lt;/a&gt; response headers define the authentication method that should be used to gain access to a resource. They must specify which authentication scheme is used, so that the client that wishes to authorize knows how to provide the credentials.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9f41cb2e8943b80c1ccc9757d2185689ead0a50" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;headers/www-authenticate&quot;&gt;&lt;code&gt;WWW-Authenticate&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;headers/proxy-authenticate&quot;&gt;&lt;code&gt;Proxy-Authenticate&lt;/code&gt;&lt;/a&gt; response headers define the authentication method that should be used to gain access to a resource. They need to specify which authentication scheme is used, so that the client that wishes to authorize knows how to provide the credentials. The syntax for these headers is the following:</source>
          <target state="translated">В &lt;a href=&quot;headers/www-authenticate&quot;&gt; &lt;code&gt;WWW-Authenticate&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;headers/proxy-authenticate&quot;&gt; &lt;code&gt;Proxy-Authenticate&lt;/code&gt; &lt;/a&gt; заголовков ответа определяют метод проверки подлинности , который должен использоваться для получения доступа к ресурсу. Им необходимо указать, какая схема аутентификации используется, чтобы клиент, желающий авторизоваться, знал, как предоставить учетные данные. Синтаксис этих заголовков следующий:</target>
        </trans-unit>
        <trans-unit id="841a5f97046d98851a68c9d87ead02d585e0efda" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;host&quot;&gt;&lt;code&gt;Host&lt;/code&gt;&lt;/a&gt; request header field as received by the proxy.</source>
          <target state="translated">Поле заголовка запроса &lt;a href=&quot;host&quot;&gt; &lt;code&gt;Host&lt;/code&gt; &lt;/a&gt; полученное прокси.</target>
        </trans-unit>
        <trans-unit id="90ae0d5ac939ab22b89ef22ef6cf0f70a90df9a8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://httpd.apache.org/docs/current/mod/mod_rewrite.html&quot;&gt;mod_rewrite&lt;/a&gt; module can also be used to create redirects. It is more flexible, but a bit more complex to use.</source>
          <target state="translated">Модуль &lt;a href=&quot;http://httpd.apache.org/docs/current/mod/mod_rewrite.html&quot;&gt;mod_rewrite&lt;/a&gt; также можно использовать для создания перенаправлений. Он более гибкий, но немного сложнее в использовании.</target>
        </trans-unit>
        <trans-unit id="575f2f642c54dbd7133186d28418d1c27eaa5d6f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.iana.org/assignments/http-warn-codes/http-warn-codes.xhtml&quot;&gt;HTTP Warn Codes registry at iana.org&lt;/a&gt; defines the namespace for warn codes.</source>
          <target state="translated">&lt;a href=&quot;http://www.iana.org/assignments/http-warn-codes/http-warn-codes.xhtml&quot;&gt;HTTP Предупреждать коды реестра в iana.org&lt;/a&gt; определяет пространство имен для предупредят коды.</target>
        </trans-unit>
        <trans-unit id="8df2d67e805aa2c79e4d6afb765f67e048353741" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://blogs.msdn.microsoft.com/ie/2008/09/02/ie8-security-part-vi-beta-2-update/&quot;&gt;original definition&lt;/a&gt; of X-Content-Type-Options by Microsoft.</source>
          <target state="translated">&lt;a href=&quot;https://blogs.msdn.microsoft.com/ie/2008/09/02/ie8-security-part-vi-beta-2-update/&quot;&gt;Первоначальное определение&lt;/a&gt; рентгеновских Content-Type-Options Майкрософт.</target>
        </trans-unit>
        <trans-unit id="b6bb44a38f57a4a24a21a54355c1172f452d3808" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/ALPN&quot;&gt;ALPN&lt;/a&gt; protocol identifier. Examples include h2 for HTTP/2 and h3-25 for draft 25 of the HTTP/3 protocol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="303a7ca8e087b00d9976db8accc4e29108a04169" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/CORS&quot;&gt;CORS&lt;/a&gt; request requires preflight, preflighting could not be performed. There are a couple of reasons why preflighting might fail:</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/CORS&quot;&gt;CORS&lt;/a&gt; запрос требует предполетной, предпечатной проверки не может быть выполнена. Есть несколько причин, по которым предварительная проверка может не работать:</target>
        </trans-unit>
        <trans-unit id="0ac1bdf745446afae63eab40c6dbfdebac045663" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/CORS&quot;&gt;CORS&lt;/a&gt; request requires that the server permit the use of credentials, but the server's &lt;a href=&quot;../../headers/access-control-allow-credentials&quot;&gt;&lt;code&gt;Access-Control-Allow-Credentials&lt;/code&gt;&lt;/a&gt; header's value isn't set to &lt;code&gt;true&lt;/code&gt; to enable their use.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/CORS&quot;&gt;CORS&lt;/a&gt; запрос требует, чтобы сервер разрешает использование учетных данных, но сервера &lt;a href=&quot;../../headers/access-control-allow-credentials&quot;&gt; &lt;code&gt;Access-Control-Allow-Credentials&lt;/code&gt; &lt;/a&gt; , значение заголовка не установлен , чтобы &lt;code&gt;true&lt;/code&gt; для обеспечения возможности их использования.</target>
        </trans-unit>
        <trans-unit id="a3fef220d846f02c9cfee24670814beeba7e7355" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/CORS&quot;&gt;CORS&lt;/a&gt; request was attempted with the credentials flag set, but the server is configured using the wildcard (&lt;code&gt;&quot;*&quot;&lt;/code&gt;) as the value of &lt;a href=&quot;../../headers/access-control-allow-origin&quot;&gt;&lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt;&lt;/a&gt;, which doesn't allow the use of credentials.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/CORS&quot;&gt;CORS&lt;/a&gt; запрос был предпринят с набором учетных данных флага, но сервер настроен с помощью подстановки ( &lt;code&gt;&quot;*&quot;&lt;/code&gt; ) в качестве значения &lt;a href=&quot;../../headers/access-control-allow-origin&quot;&gt; &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; &lt;/a&gt; , которая не позволяет использовать учетные данные.</target>
        </trans-unit>
        <trans-unit id="94840953c7f31c8c81ed2848ad9300fdfc9d44eb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/CORS&quot;&gt;CORS&lt;/a&gt; request was responded to by the server with an HTTP redirect to a URL on a different origin than the original request, which is not permitted during CORS requests.</source>
          <target state="translated">На запрос &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/CORS&quot;&gt;CORS&lt;/a&gt; сервер ответил перенаправлением HTTP на URL-адрес из источника, отличного от исходного запроса, что не разрешено во время запросов CORS.</target>
        </trans-unit>
        <trans-unit id="46ef7b51d18c11a16b9ea7877d2ee5b389add21e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/HTTP&quot;&gt;HTTP&lt;/a&gt; request which makes use of CORS failed because the HTTP connection failed at either the network or protocol level. The error is not directly related to CORS, but is a fundamental network error of some kind.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/HTTP&quot;&gt;HTTP&lt;/a&gt; запрос , который использует CO не удался , так как соединение HTTP потерпело неудачу в любой сети или на уровне протокола. Ошибка не связана напрямую с CORS, но является какой-то фундаментальной сетевой ошибкой.</target>
        </trans-unit>
        <trans-unit id="8ca3dd995c40f4f12da6eea0a0fb62e8d5df0822" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/simple_header&quot;&gt;simple headers&lt;/a&gt;, &lt;a href=&quot;accept&quot;&gt;&lt;code&gt;Accept&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;accept-language&quot;&gt;&lt;code&gt;Accept-Language&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;content-language&quot;&gt;&lt;code&gt;Content-Language&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;content-type&quot;&gt;&lt;code&gt;Content-Type&lt;/code&gt;&lt;/a&gt; (but only with a MIME type of its parsed value (ignoring parameters) of either &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt;, &lt;code&gt;multipart/form-data&lt;/code&gt;, or &lt;code&gt;text/plain&lt;/code&gt;), are always available and don't need to be listed by this header.</source>
          <target state="translated">Эти &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/simple_header&quot;&gt;простые заголовки&lt;/a&gt; , &lt;a href=&quot;accept&quot;&gt; &lt;code&gt;Accept&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;accept-language&quot;&gt; &lt;code&gt;Accept-Language&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;content-language&quot;&gt; &lt;code&gt;Content-Language&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;content-type&quot;&gt; &lt;code&gt;Content-Type&lt;/code&gt; &lt;/a&gt; (но только с типом MIME , его разобранного значения ( без учета параметров) либо &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; , &lt;code&gt;multipart/form-data&lt;/code&gt; , или &lt;code&gt;text/plain&lt;/code&gt; ) всегда доступны и не должны указываться в этом заголовке.</target>
        </trans-unit>
        <trans-unit id="7c8c624b902acbdfb33352d81eeb9f16044ff38e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;user agent&lt;/a&gt; was unable to add the required &lt;a href=&quot;../../headers/origin&quot;&gt;&lt;code&gt;Origin&lt;/code&gt;&lt;/a&gt; header to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/HTTP&quot;&gt;HTTP&lt;/a&gt; request. All CORS requests must have an &lt;code&gt;Origin&lt;/code&gt; header.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;Агент пользователя&lt;/a&gt; не удалось добавить нужный &lt;a href=&quot;../../headers/origin&quot;&gt; &lt;code&gt;Origin&lt;/code&gt; &lt;/a&gt; заголовок в &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/HTTP&quot;&gt;HTTP&lt;/a&gt; - запросе. Все запросы CORS должны иметь заголовок &lt;code&gt;Origin&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="541849bca8dfcb4810abe650d5548422c6848655" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FormData&quot;&gt;&lt;code&gt;FormData&lt;/code&gt;&lt;/a&gt; interface used to manipulate form data for use in the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest&quot;&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;&lt;/a&gt; API.</source>
          <target state="translated">Интерфейс &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FormData&quot;&gt; &lt;code&gt;FormData&lt;/code&gt; ,&lt;/a&gt; используемый для управления данными формы для использования в API &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest&quot;&gt; &lt;code&gt;XMLHttpRequest&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="315a779e6acad1d531dd53b54135b697e3e3e7ed" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/WebSocket&quot;&gt;&lt;code&gt;WebSocket()&lt;/code&gt;&lt;/a&gt; constructor does all the work of creating an initial HTTP/1.1 connection then handling the handshaking and upgrade process for you.</source>
          <target state="translated">Конструктор &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/WebSocket&quot;&gt; &lt;code&gt;WebSocket()&lt;/code&gt; &lt;/a&gt; выполняет всю работу по созданию начального соединения HTTP / 1.1, а затем обрабатывает за вас процесс установления связи и обновления.</target>
        </trans-unit>
        <trans-unit id="d45717eba61ad3d5a426950cb644c8f2dd47e3a7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WebVR_API&quot;&gt;WebVR API&lt;/a&gt; has been replced with the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WebXR_API&quot;&gt;WebXR Device API&lt;/a&gt; and is currently being removed from the web platform. Use the feature identifier &lt;a href=&quot;xr-spatial-tracking&quot;&gt;&lt;code&gt;xr-spatial-tracking&lt;/code&gt;&lt;/a&gt; for WebXR Device API instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3d572fbbc7fb5223d172c4f660df4f67fd67a10" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe#Attributes&quot;&gt;&lt;code&gt;allow&lt;/code&gt;&lt;/a&gt; attribute on iframes.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe#Attributes&quot;&gt; &lt;code&gt;allow&lt;/code&gt; &lt;/a&gt; атрибут фреймов.</target>
        </trans-unit>
        <trans-unit id="41b2d8d87680fc3732f8e6149116b853f67342a3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe#Attributes&quot;&gt;allow&lt;/a&gt; attribute on &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt;&lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;&lt;/a&gt;s.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe#Attributes&quot;&gt;Позволяют&lt;/a&gt; атрибут &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt; &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; &lt;/a&gt; s.</target>
        </trans-unit>
        <trans-unit id="81c151e97bb2fc9016b004646d1163e360980269" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Accept-CH-Lifetime&quot;&gt;&lt;code&gt;Accept-CH-Lifetime&lt;/code&gt;&lt;/a&gt; header is used with the &lt;code&gt;Device-Memory&lt;/code&gt; value of the &lt;code&gt;Accept-CH&lt;/code&gt; header and indicates the amount of time the device should opt-in to sharing the amount of device memory with the server. The value is given in miliseconds and it's use is optional.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Accept-CH-Lifetime&quot;&gt; &lt;code&gt;Accept-CH-Lifetime&lt;/code&gt; &lt;/a&gt; заголовок используется с &lt;code&gt;Device-Memory&lt;/code&gt; значения &lt;code&gt;Accept-CH&lt;/code&gt; заголовка и указывает количество времени , устройство должно отказаться в обмен на объем памяти устройства с сервером. Значение указывается в миллисекундах, и его использование не является обязательным.</target>
        </trans-unit>
        <trans-unit id="feae0b21dc6047c955761cda1dd45a586e339677" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Upgrade&quot;&gt;&lt;code&gt;Upgrade&lt;/code&gt;&lt;/a&gt; header field is used by clients to invite the server to switch to one of the listed protocols, in descending preference order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="102f0a3635d954f2ea429dc9612327a656cc4b1f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Audio_codecs&quot;&gt;audio codec&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Video_codecs&quot;&gt;video codec&lt;/a&gt; guides list the various codecs that web browsers often support, providing compatibility details along with technical information such as how many audio channels they support, what sort of compression is used, and what bit rates and so forth they're useful at. The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Media/Formats/WebRTC_codecs&quot;&gt;codecs used by WebRTC&lt;/a&gt; guide expands upon this by specifically covering the codecs supported by the major web browsers, so you can choose the codecs that best cover the range of browsers you wish to support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbd12c73f76eeadd9f5a8a7c267e1d8bb10451c5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://developer.mozilla.org/en/HTTP&quot;&gt;HTTP protocol&lt;/a&gt; provides a special mechanism allowing an already established connection to upgrade to a new, incompatible, protocol. This guide covers how this works and offers examples of scenarios in which it's used.</source>
          <target state="translated">Протокол &lt;a href=&quot;https://developer.mozilla.org/en/HTTP&quot;&gt;HTTP&lt;/a&gt; предоставляет специальный механизм, позволяющий уже установленному соединению перейти на новый, несовместимый протокол. В этом руководстве рассказывается, как это работает, и предлагаются примеры сценариев, в которых это используется.</target>
        </trans-unit>
        <trans-unit id="56487f351a83f4ece995635d28e031bb9e971d36" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://fetch.spec.whatwg.org/#cross-origin-resource-policy-header&quot;&gt;Cross-Origin-Resource-Policy&lt;/a&gt; header prevents other domains from loading the resources.</source>
          <target state="translated">В &lt;a href=&quot;https://fetch.spec.whatwg.org/#cross-origin-resource-policy-header&quot;&gt;Cross-Origin-Ресурс-политика&lt;/a&gt; заголовок предотвращает другие домены от загрузки ресурсов.</target>
        </trans-unit>
        <trans-unit id="30ff7cff75928c0f981ddbe781c5a37e5b8ec7ad" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://httpd.apache.org/docs/current/mod/mod_alias.html&quot;&gt;mod_alias&lt;/a&gt; module has &lt;code&gt;Redirect&lt;/code&gt; and &lt;code&gt;RedirectMatch&lt;/code&gt; directives that set up a &lt;a href=&quot;status/302&quot;&gt;&lt;code&gt;302&lt;/code&gt;&lt;/a&gt; response (by default):</source>
          <target state="translated">В модуле &lt;a href=&quot;https://httpd.apache.org/docs/current/mod/mod_alias.html&quot;&gt;mod_alias&lt;/a&gt; есть директивы &lt;code&gt;Redirect&lt;/code&gt; и &lt;code&gt;RedirectMatch&lt;/code&gt; , которые устанавливают ответ &lt;a href=&quot;status/302&quot;&gt; &lt;code&gt;302&lt;/code&gt; &lt;/a&gt; (по умолчанию):</target>
        </trans-unit>
        <trans-unit id="dfdf1721b0f5a67b62cb197634da7d5057e2041b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://observatory.mozilla.org/&quot;&gt;Mozilla Observatory&lt;/a&gt; tool testing the configuration (including this header) of Web sites for safety and security</source>
          <target state="translated">Инструмент &lt;a href=&quot;https://observatory.mozilla.org/&quot;&gt;Mozilla Observatory&lt;/a&gt; , проверяющий конфигурацию (включая этот заголовок) веб-сайтов на безопасность и защищенность.</target>
        </trans-unit>
        <trans-unit id="b0c2f791ad88a8a7e38ea528eb0f0ccd9df436bb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://tools.ietf.org/html/rfc4648#section-5&quot;&gt;base64url&lt;/a&gt; format is not the same as standard Base64 encoding. This is almost but not quite the same as standard Base64. The only difference: in order to ensure that the resulting string is safe for use in both URLs and filenames, the 62nd and 63rd characters in its alphabet are changed from &lt;code&gt;&quot;+&quot;&lt;/code&gt; and &lt;code&gt;&quot;/&quot;&lt;/code&gt; to &lt;code&gt;&quot;-&quot;&lt;/code&gt; (minus) and &lt;code&gt;&quot;_&quot;&lt;/code&gt; (underscore), respectively.</source>
          <target state="translated">Формат &lt;a href=&quot;https://tools.ietf.org/html/rfc4648#section-5&quot;&gt;base64url&lt;/a&gt; не совпадает со стандартной кодировкой Base64. Это почти, но не совсем то же самое, что и стандартный Base64. Единственное отличие: чтобы гарантировать, что результирующая строка безопасна для использования как в URL-адресах, так и в именах файлов, 62-й и 63-й символы в ее алфавите изменены с &lt;code&gt;&quot;+&quot;&lt;/code&gt; и &lt;code&gt;&quot;/&quot;&lt;/code&gt; на &lt;code&gt;&quot;-&quot;&lt;/code&gt; (минус) и &lt;code&gt;&quot;_&quot;&lt;/code&gt; (подчеркивание) соответственно.</target>
        </trans-unit>
        <trans-unit id="e864176c816370410ca7b511fa51ea0441aec0c3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.iana.org/&quot;&gt;Internet Assigned Numbers Authority (IANA)&lt;/a&gt; is responsible for all official MIME types, and you can find the most up-to-date and complete list at their &lt;a href=&quot;https://www.iana.org/assignments/media-types/media-types.xhtml&quot;&gt;Media Types&lt;/a&gt; page.</source>
          <target state="translated">За все официальные типы MIME отвечает &lt;a href=&quot;https://www.iana.org/&quot;&gt;Internet Assigned Numbers Authority (IANA)&lt;/a&gt; , и вы можете найти самый последний и полный список на их странице &lt;a href=&quot;https://www.iana.org/assignments/media-types/media-types.xhtml&quot;&gt;Media Types&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a0ea81494b8105f6717337ab7d95f01a45c084f2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;index&quot;&gt;HTTP/1.1 protocol&lt;/a&gt; provides a special mechanism that can be used to upgrade an already established connection to a different protocol, using the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Upgrade&quot;&gt;&lt;code&gt;Upgrade&lt;/code&gt;&lt;/a&gt; header field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ab5fee31c8ccbebe1e49d2cda4be11eb9064dcd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;methods/get&quot;&gt;&lt;code&gt;GET&lt;/code&gt;&lt;/a&gt; method requests a data representation of the specified resource. Requests using &lt;code&gt;GET&lt;/code&gt; should only retrieve data.</source>
          <target state="translated">Метод &lt;a href=&quot;methods/get&quot;&gt; &lt;code&gt;GET&lt;/code&gt; &lt;/a&gt; запрашивает представление данных указанного ресурса. Запросы с использованием &lt;code&gt;GET&lt;/code&gt; должны только получать данные.</target>
        </trans-unit>
        <trans-unit id="85676b7109bc7c3348572fe11d463aa4452c7f6e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;methods/post&quot;&gt;&lt;code&gt;POST&lt;/code&gt;&lt;/a&gt; method sends data to a server so it may change its state. This is the method often used for &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Forms&quot;&gt;HTML Forms&lt;/a&gt;.</source>
          <target state="translated">Метод &lt;a href=&quot;methods/post&quot;&gt; &lt;code&gt;POST&lt;/code&gt; &lt;/a&gt; отправляет данные на сервер, чтобы он мог изменить свое состояние. Этот метод часто используется для &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Forms&quot;&gt;HTML-форм&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="759d2232e34b1fccdd6a4688d236906067716e48" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;referer&quot;&gt;&lt;code&gt;Referer&lt;/code&gt;&lt;/a&gt; header will be omitted entirely. No referrer information is sent along with requests.</source>
          <target state="translated">&lt;a href=&quot;referer&quot;&gt; &lt;code&gt;Referer&lt;/code&gt; &lt;/a&gt; заголовок будет полностью опущен. Информация о реферере не отправляется вместе с запросами.</target>
        </trans-unit>
        <trans-unit id="bb80c4be8693337fa70be2fe31fd2c4154708a28" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;status/101&quot;&gt;&lt;code&gt;101&lt;/code&gt;&lt;/a&gt; status code is sent as a response to a request including the &lt;code&gt;&quot;Upgrade&quot;&lt;/code&gt; header to signal that the recipient of the request is willing to upgrade to one of the desired protocols. If the &lt;code&gt;&quot;101 Switching Protocols&quot;&lt;/code&gt; status code is returned, the header must also include the &lt;code&gt;Connection&lt;/code&gt; and &lt;code&gt;Upgrade&lt;/code&gt; headers to describe the chosen protocol. See the examples in &lt;a href=&quot;#Common_uses_for_this_mechanism&quot;&gt;Common uses for this mechanism&lt;/a&gt; to learn more about how this works.</source>
          <target state="translated">Код состояния &lt;a href=&quot;status/101&quot;&gt; &lt;code&gt;101&lt;/code&gt; &lt;/a&gt; отправляется в качестве ответа на запрос, включающий заголовок &lt;code&gt;&quot;Upgrade&quot;&lt;/code&gt; чтобы сигнализировать, что получатель запроса желает перейти на один из требуемых протоколов. Если возвращается код состояния &lt;code&gt;&quot;101 Switching Protocols&quot;&lt;/code&gt; , заголовок также должен включать заголовки &lt;code&gt;Connection&lt;/code&gt; и &lt;code&gt;Upgrade&lt;/code&gt; для описания выбранного протокола. См. Примеры в разделе &amp;laquo; &lt;a href=&quot;#Common_uses_for_this_mechanism&quot;&gt;Общие способы использования этого механизма&amp;raquo;,&lt;/a&gt; чтобы узнать больше о том, как это работает.</target>
        </trans-unit>
        <trans-unit id="ba7765f4a93430d93893449738d810f79adab493" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;status/300&quot;&gt;&lt;code&gt;300&lt;/code&gt;&lt;/a&gt; (Multiple Choices) or &lt;a href=&quot;status/406&quot;&gt;&lt;code&gt;406&lt;/code&gt;&lt;/a&gt; (Not Acceptable) &lt;a href=&quot;status&quot;&gt;HTTP response codes&lt;/a&gt; by the server (&lt;em&gt;agent-driven negotiation&lt;/em&gt; or &lt;em&gt;reactive negotiation&lt;/em&gt;), that are used as fallback mechanisms.</source>
          <target state="translated">В &lt;a href=&quot;status/300&quot;&gt; &lt;code&gt;300&lt;/code&gt; &lt;/a&gt; (Множественном выборе) или &lt;a href=&quot;status/406&quot;&gt; &lt;code&gt;406&lt;/code&gt; &lt;/a&gt; (не приемлемы) &lt;a href=&quot;status&quot;&gt;HTTP - кода ответа&lt;/a&gt; от сервера ( &lt;em&gt;агентом обсуждение&lt;/em&gt; или &lt;em&gt;реактивных переговоры&lt;/em&gt; ), которые используются в качестве механизмов резервных.</target>
        </trans-unit>
        <trans-unit id="7a2ea4621d5db4a0643b172c60b9729d03740461" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;status/300&quot;&gt;&lt;code&gt;300&lt;/code&gt;&lt;/a&gt; (Multiple Choices) or &lt;a href=&quot;status/406&quot;&gt;&lt;code&gt;406&lt;/code&gt;&lt;/a&gt; (Not Acceptable), &lt;a href=&quot;status/415&quot;&gt;&lt;code&gt;415&lt;/code&gt;&lt;/a&gt; (Unsupported Media Type) &lt;a href=&quot;status&quot;&gt;HTTP response codes&lt;/a&gt; by the server (&lt;em&gt;agent-driven negotiation&lt;/em&gt; or &lt;em&gt;reactive negotiation&lt;/em&gt;), that are used as fallback mechanisms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdc1524f620c113ef489962d737efb33b27f2eac" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;te&quot;&gt;&lt;code&gt;TE&lt;/code&gt;&lt;/a&gt; request header needs to be set to &quot;trailers&quot; to allow trailer fields.</source>
          <target state="translated">&lt;a href=&quot;te&quot;&gt; &lt;code&gt;TE&lt;/code&gt; &lt;/a&gt; заголовок запроса должен быть установлен на &amp;laquo;прицепы&amp;raquo; , чтобы поля трейлера.</target>
        </trans-unit>
        <trans-unit id="106d3051b32652488ca1792a9b8e10220f0e7a85" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;upgrade-insecure-requests&quot;&gt;&lt;code&gt;upgrade-insecure-requests&lt;/code&gt;&lt;/a&gt; directive is evaluated before &lt;code&gt;block-all-mixed-content&lt;/code&gt; and If the former is set, the latter is effectively a no-op. It is recommended to set one directive or the other &amp;ndash; not both, unless you want to force HTTPS on older browsers that do not force it after a redirect to HTTP.</source>
          <target state="translated">&lt;a href=&quot;upgrade-insecure-requests&quot;&gt; &lt;code&gt;upgrade-insecure-requests&lt;/code&gt; &lt;/a&gt; директива вычисляется перед &lt;code&gt;block-all-mixed-content&lt;/code&gt; и если бывший установлен, последний не является эффективно не оп. Рекомендуется установить одну директиву или другую, но не обе, если только вы не хотите принудительно использовать HTTPS в старых браузерах, которые не заставляют его после перенаправления на HTTP.</target>
        </trans-unit>
        <trans-unit id="5a51eef50de25b01cedd4928f3f99c9fae3d5200" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;upgrade-insecure-requests&quot;&gt;&lt;code&gt;upgrade-insecure-requests&lt;/code&gt;&lt;/a&gt; directive is evaluated before &lt;code&gt;block-all-mixed-content&lt;/code&gt;. If the former is set, the latter does nothing, so set one directive or the other &amp;ndash; not both, unless you want to force HTTPS on older browsers that do not force it after a redirect to HTTP.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce5a0a42af328d6549a6884a0d4203b5b8180652" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;'src'&lt;/code&gt; origin is used in the iframe &lt;code&gt;allow&lt;/code&gt; attribute only, and is the &lt;em&gt;default&lt;/em&gt;&lt;code&gt;allowlist&lt;/code&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1e69a4edf06fe574fa80e88285f8fb7d88da970" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;'strict-dynamic'&lt;/code&gt; source expression specifies that the trust explicitly given to a script present in the markup, by accompanying it with a nonce or a hash, shall be propagated to all the scripts loaded by that root script. At the same time, any whitelist or source expressions such as &lt;code&gt;'self'&lt;/code&gt; or &lt;code&gt;'unsafe-inline'&lt;/code&gt; will be ignored. For example, a policy such as &lt;code&gt;script-src 'strict-dynamic' 'nonce-R4nd0m' https://whitelisted.com/&lt;/code&gt; would allow loading of a root script with &lt;code&gt;&amp;lt;script nonce=&quot;R4nd0m&quot; src=&quot;https://example.com/loader.js&quot;&amp;gt;&lt;/code&gt; and propagate that trust to any script loaded by &lt;code&gt;loader.js&lt;/code&gt;, but disallow loading scripts from &lt;code&gt;https://whitelisted.com/&lt;/code&gt; unless accompanied by a nonce or loaded from a trusted script.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b021b3c1d64f7dedfd2f1fd076264572ee155ed2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;'strict-dynamic&lt;/code&gt;' source expression specifies that the trust explicitly given to a script present in the markup, by accompanying it with a nonce or a hash, shall be propagated to all the scripts loaded by that root script. At the same time, any whitelist or source expressions such as &lt;code&gt;'self'&lt;/code&gt; or &lt;code&gt;'unsafe-inline'&lt;/code&gt; will be ignored. For example, a policy such as &lt;code&gt;script-src 'strict-dynamic' 'nonce-R4nd0m' https://whitelisted.com/&lt;/code&gt; would allow loading of a root script with &lt;code&gt;&amp;lt;script nonce=&quot;R4nd0m&quot; src=&quot;https://example.com/loader.js&quot;&amp;gt;&lt;/code&gt; and propagate that trust to any script loaded by &lt;code&gt;loader.js&lt;/code&gt;, but disallow loading scripts from &lt;code&gt;https://whitelisted.com/&lt;/code&gt; unless accompanied by a nonce or loaded from a trusted script.</source>
          <target state="translated">В &lt;code&gt;'strict-dynamic&lt;/code&gt; выражении источника указует&amp;raquo; , что доверие явно приведенный в сценарии , присутствующий в разметке, сопровождая его с одноразовым номером или хэшем, должны распространяться на все сценарии , загруженных этим корневого сценарий. В то же время любые выражения из белого списка или источника, такие как &lt;code&gt;'self'&lt;/code&gt; или &lt;code&gt;'unsafe-inline'&lt;/code&gt; будут игнорироваться. Например, такая политика, как &lt;code&gt;script-src 'strict-dynamic' 'nonce-R4nd0m' https://whitelisted.com/&lt;/code&gt; , разрешит загрузку корневого скрипта с &lt;code&gt;&amp;lt;script nonce=&quot;R4nd0m&quot; src=&quot;https://example.com/loader.js&quot;&amp;gt;&lt;/code&gt; и распространите это доверие на любой скрипт, загруженный &lt;code&gt;loader.js&lt;/code&gt; , но запретите загрузку скриптов с &lt;code&gt;https://whitelisted.com/&lt;/code&gt; если не сопровождается одноразовым номером или не загружается из доверенного сценария.</target>
        </trans-unit>
        <trans-unit id="6382e529a182503f39a7f7388e99ab1653c33241" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;'unsafe-eval'&lt;/code&gt; source expression controls several script execution methods that create code from strings. If &lt;code&gt;'unsafe-eval'&lt;/code&gt; isn't specified with the &lt;code&gt;script-src&lt;/code&gt; directive, the following methods are blocked and won't have any effect:</source>
          <target state="translated">В &lt;code&gt;'unsafe-eval'&lt;/code&gt; выражение источника управление несколько методов выполнения сценария , которые создают код из строк. Если &lt;code&gt;'unsafe-eval'&lt;/code&gt; не указан в директиве &lt;code&gt;script-src&lt;/code&gt; , следующие методы блокируются и не будут иметь никакого эффекта:</target>
        </trans-unit>
        <trans-unit id="7a974fff323538cd623f076264d18fe2300bde8a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;'unsafe-eval'&lt;/code&gt; source expression controls several style methods that create style declarations from strings. If &lt;code&gt;'unsafe-eval'&lt;/code&gt; isn't specified with the &lt;code&gt;style-src&lt;/code&gt; directive, the following methods are blocked and won't have any effect:</source>
          <target state="translated">В &lt;code&gt;'unsafe-eval'&lt;/code&gt; выражение источника управление несколько методов стилей , которые создают стиль объявление из строк. Если &lt;code&gt;'unsafe-eval'&lt;/code&gt; не указан в директиве &lt;code&gt;style-src&lt;/code&gt; , следующие методы блокируются и не будут иметь никакого эффекта:</target>
        </trans-unit>
        <trans-unit id="c3028d259a6399103c9ce4edc7dfac31909edc67" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.htaccess&lt;/code&gt; file references a &lt;code&gt;.htpasswd&lt;/code&gt; file in which each line consists of a username and a password separated by a colon (&lt;code&gt;:&lt;/code&gt;). You cannot see the actual passwords as they are &lt;a href=&quot;https://httpd.apache.org/docs/2.4/misc/password_encryptions.html&quot;&gt;hashed&lt;/a&gt; (using MD5-based hashing, in this case). Note that you can name your &lt;code&gt;.htpasswd&lt;/code&gt; file differently if you like, but keep in mind this file shouldn't be accessible to anyone. (Apache is usually configured to prevent access to &lt;code&gt;.ht*&lt;/code&gt; files).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7d8d01c839e9d424312b47d646a614086c80cdd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.htaccess&lt;/code&gt; file references a &lt;code&gt;.htpasswd&lt;/code&gt; file in which each line contains of a username and a password separated by a colon (&quot;:&quot;). You can not see the actual passwords as they are &lt;a href=&quot;https://httpd.apache.org/docs/2.4/misc/password_encryptions.html&quot;&gt;encrypted&lt;/a&gt; (md5 in this case). Note that you can name your &lt;code&gt;.htpasswd&lt;/code&gt; file differently if you like, but keep in mind this file shouldn't be accessible to anyone. (Apache is usually configured to prevent access to &lt;code&gt;.ht*&lt;/code&gt; files).</source>
          <target state="translated">В &lt;code&gt;.htaccess&lt;/code&gt; ссылки стандартного файла &lt;code&gt;.htpasswd&lt;/code&gt; файл , в котором каждая строка содержит имени пользователя и пароль , разделенное двоеточие ( &amp;laquo;:&amp;raquo;). Вы не можете увидеть настоящие пароли, поскольку они &lt;a href=&quot;https://httpd.apache.org/docs/2.4/misc/password_encryptions.html&quot;&gt;зашифрованы&lt;/a&gt; (в данном случае md5). Обратите внимание, что вы можете назвать свой файл &lt;code&gt;.htpasswd&lt;/code&gt; по- другому, если хотите, но помните, что этот файл не должен быть доступен никому. (Обычно Apache настроен на предотвращение доступа к &lt;code&gt;.ht*&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="01ea6c155e3bff628716e111f394e3a0636ae28e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.htaccess&lt;/code&gt; file typically looks like this:</source>
          <target state="translated">&lt;code&gt;.htaccess&lt;/code&gt; файл , как правило , выглядит следующим образом :</target>
        </trans-unit>
        <trans-unit id="4140f45978733db50c0722e19703d0dd8732110c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;203&lt;/code&gt; response is similar to the value &lt;code&gt;&lt;a href=&quot;../headers/warning#Warning_codes&quot;&gt;214&lt;/a&gt;&lt;/code&gt;, meaning &lt;code&gt;Transformation Applied&lt;/code&gt;, of the &lt;a href=&quot;../headers/warning&quot;&gt;&lt;code&gt;Warning&lt;/code&gt;&lt;/a&gt; header code, which has the additional advantage of being applicable to responses with any status code.</source>
          <target state="translated">&lt;code&gt;203&lt;/code&gt; ответ аналогично значения &lt;code&gt;&lt;a href=&quot;../headers/warning#Warning_codes&quot;&gt;214&lt;/a&gt;&lt;/code&gt; , а это означает &lt;code&gt;Transformation Applied&lt;/code&gt; , в &lt;a href=&quot;../headers/warning&quot;&gt; &lt;code&gt;Warning&lt;/code&gt; &lt;/a&gt; коде заголовка, который имеет дополнительное преимущество в том , применим к ответам с любым кодом состояния.</target>
        </trans-unit>
        <trans-unit id="fd1e39721a458a8f43a8fa40e465369253ea6854" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;416&lt;/code&gt; response message contains a &lt;a href=&quot;../headers/content-range&quot;&gt;&lt;code&gt;Content-Range&lt;/code&gt;&lt;/a&gt; indicating an unsatisfied range (that is a &lt;code&gt;'*'&lt;/code&gt;) followed by a &lt;code&gt;'/'&lt;/code&gt; and the current length of the resource. E.g. &lt;code&gt;Content-Range: */12777&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;416&lt;/code&gt; ответное сообщение содержит &lt;a href=&quot;../headers/content-range&quot;&gt; &lt;code&gt;Content-Range&lt;/code&gt; &lt;/a&gt; , указывающий на неудовлетворенный диапазон (то есть &lt;code&gt;'*'&lt;/code&gt; ) , а затем &lt;code&gt;'/'&lt;/code&gt; и текущую длину ресурса. Например, &lt;code&gt;Content-Range: */12777&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cc6eca35190b0a85bc179efcd6440ff5e420f987" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;416&lt;/code&gt; response message contains a &lt;a href=&quot;../headers/content-range&quot;&gt;&lt;code&gt;Content-Range&lt;/code&gt;&lt;/a&gt; indicating an unsatisfied range (that is a &lt;code&gt;'*'&lt;/code&gt;) followed by a &lt;code&gt;'/'&lt;/code&gt; and the current length of the resource. E.g. &lt;code&gt;Content-Range: bytes */12777&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="000250a8c920d71a596d42e3ba222cb0c276eb98" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;http://httpd.apache.org/docs/current/mod/mod_rewrite.html&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt; module can also create redirects. It is more flexible, but a bit more complex.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d74ebb54bf35188baf88fab6ddfb03450100af2e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe#attr-allow&quot;&gt;allow&lt;/a&gt;&lt;/code&gt; attribute on &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt;&lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;&lt;/a&gt;s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="678867190bea86d25ddd4c42f7e5d5945a9962ee" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes#attr-content&quot;&gt;content&lt;/a&gt;&lt;/code&gt; attribute should start with a number indicating how many seconds the browser should wait before redirecting to the given URL. Always set it to &lt;code&gt;0&lt;/code&gt; for accessibility compliance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e37ff63edc4a58e58577f391879495cdf22ee684" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes#attr-content&quot;&gt;content&lt;/a&gt;&lt;/code&gt; attribute starts with a number indicating how many seconds the browser should wait before redirecting to the given URL. Always set it to &lt;code&gt;0&lt;/code&gt;, for better accessibility.</source>
          <target state="translated">В &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes#attr-content&quot;&gt;content&lt;/a&gt;&lt;/code&gt; начинается атрибут с числом , показывающим , сколько секунд браузер должен ждать перед перенаправлением к данному URL. Всегда устанавливайте значение &lt;code&gt;0&lt;/code&gt; для лучшей доступности.</target>
        </trans-unit>
        <trans-unit id="df94992d56f1ec3780068eef1f291a2bd6528445" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;https://developers.google.com/search/reference/robots_meta_tag#xrobotstag&quot;&gt;X-Robots-Tag&lt;/a&gt;&lt;/code&gt; HTTP header is used to indicate how a web page is to be indexed within public search engine results. The header is effectively equivalent to &lt;code&gt;&amp;lt;meta name=&quot;robots&quot; content=&quot;...&quot;&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d9f882bdef0f2fbd9c820397fd3355193604e73" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/jj542450(v=vs.85)?#the-noopen-directive&quot;&gt;X-Download-Options&lt;/a&gt;&lt;/code&gt; HTTP header indicates that the browser (Internet Explorer) should not display the option to &quot;Open&quot; a file that has been downloaded from an application, to prevent phishing attacks as the file otherwise would gain access to execute in the context of the application. (Note: related &lt;a href=&quot;https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/18488178/&quot;&gt;MS Edge bug&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8570429a0850dacdf55e905b24382087aa950397" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;https://httpd.apache.org/docs/current/mod/mod_alias.html&quot;&gt;mod_alias&lt;/a&gt;&lt;/code&gt; module has &lt;code&gt;Redirect&lt;/code&gt; and &lt;code&gt;RedirectMatch&lt;/code&gt; directives that set up &lt;a href=&quot;status/302&quot;&gt;&lt;code&gt;302&lt;/code&gt;&lt;/a&gt; redirects by default:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a33077bdfc87f84fa941dba1652820231ca50a9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc5988#section-5&quot;&gt;Link&lt;/a&gt;&lt;/code&gt; entity-header field provides a means for serialising one or more links in HTTP headers. It is semantically equivalent to the HTML &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link&quot;&gt;&lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt;&lt;/a&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bf90377c54cfb58cf2ddd3a014cf93971e6153b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc5988#section-5&quot;&gt;Link&lt;/a&gt;&lt;/code&gt; entity-header field provides a means for serialising one or more links in HTTP headers. It is semantically equivalent to the HTML &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/HTML/Element/link&quot;&gt;&amp;lt;link&amp;gt;&lt;/a&gt;&lt;/code&gt; element.</source>
          <target state="translated">Поле заголовка объекта &lt;code&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc5988#section-5&quot;&gt;Link&lt;/a&gt;&lt;/code&gt; предоставляет средства для сериализации одной или нескольких ссылок в заголовках HTTP. Семантически эквивалентен элементу HTML &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/HTML/Element/link&quot;&gt;&amp;lt;link&amp;gt;&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a78799203cafc041527d32fff46051e530f3f10a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;https://wicg.github.io/webpackage/draft-yasskin-http-origin-signed-responses.html#rfc.section.3.1&quot;&gt;Signature&lt;/a&gt;&lt;/code&gt; header field conveys a list of signatures for an exchange, each one accompanied by information about how to determine the authority of and refresh that signature.</source>
          <target state="translated">Поле заголовка &amp;laquo; &lt;code&gt;&lt;a href=&quot;https://wicg.github.io/webpackage/draft-yasskin-http-origin-signed-responses.html#rfc.section.3.1&quot;&gt;Signature&lt;/a&gt;&lt;/code&gt; содержит список подписей для обмена, каждая из которых сопровождается информацией о том, как определить полномочия и обновить эту подпись.</target>
        </trans-unit>
        <trans-unit id="ac287448eebb179af2b5fea39da63acb2f0e34a7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;https://wicg.github.io/webpackage/draft-yasskin-http-origin-signed-responses.html#rfc.section.5.1.2&quot;&gt;Signed-Headers&lt;/a&gt;&lt;/code&gt; header field identifies an ordered list of response header fields to include in a signature.</source>
          <target state="translated">Поле &lt;code&gt;&lt;a href=&quot;https://wicg.github.io/webpackage/draft-yasskin-http-origin-signed-responses.html#rfc.section.5.1.2&quot;&gt;Signed-Headers&lt;/a&gt;&lt;/code&gt; определяет упорядоченный список полей заголовка ответа для включения в подпись.</target>
        </trans-unit>
        <trans-unit id="d982342366479f245d9e1687b6642ae3d345e689" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Accept-Ranges&lt;/strong&gt;&lt;/code&gt; response HTTP header is a marker used by the server to advertise its support of partial requests. The value of this field indicates the unit that can be used to define a range.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;Accept-Ranges&lt;/strong&gt;&lt;/code&gt; ответ HTTP заголовок представляет собой маркер , используемый сервер для рекламы своей поддержки частичных запросов. Значение этого поля указывает единицу измерения, которую можно использовать для определения диапазона.</target>
        </trans-unit>
        <trans-unit id="d3c88e931c279d244b193828eb2439579c4ee0ab" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Access-Control-Allow-Origin&lt;/strong&gt;&lt;/code&gt; response header indicates whether the response can be shared with requesting code from the given &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/origin&quot;&gt;origin&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;Access-Control-Allow-Origin&lt;/strong&gt;&lt;/code&gt; заголовка ответа указывает , является ли ответ может использоваться совместно с просьбой код из данного &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/origin&quot;&gt;происхождения&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e7e76f11cda78abd0588ec375967af559825d413" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Age&lt;/strong&gt;&lt;/code&gt; header contains the time in seconds the object has been in a proxy cache.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;Age&lt;/strong&gt;&lt;/code&gt; заголовок содержит время в секундах объект был в прокси - кэше.</target>
        </trans-unit>
        <trans-unit id="f9681dd052c79b13127ae3929a731da18e4b72d4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Allow&lt;/strong&gt;&lt;/code&gt; header lists the set of methods support by a resource.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;Allow&lt;/strong&gt;&lt;/code&gt; Header Перечисляет набор методов поддержки ресурсом.</target>
        </trans-unit>
        <trans-unit id="c95653d764bb42232e9cbd3888e86cd3686754bf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Allow&lt;/strong&gt;&lt;/code&gt; header lists the set of methods supported by a resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e78b75471626ac2160cc198bfd26d8ad9f80eb0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Early-Data&lt;/strong&gt;&lt;/code&gt; header is set by an intermediary to indicate that the request has been conveyed in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Security/Transport_Layer_Security#TLS_1.3&quot;&gt;TLS early data&lt;/a&gt;, and also indicates that the intermediary understands the &lt;a href=&quot;../status/425&quot;&gt;&lt;code&gt;425 (Too Early)&lt;/code&gt;&lt;/a&gt; status code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d61bb0d627ec7b7f17d0bc47d697b57d00a1bc5f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Early-Data&lt;/strong&gt;&lt;/code&gt; header is set by an intermediate to indicates that the request has been conveyed in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Security/Transport_Layer_Security#TLS_1.3&quot;&gt;TLS early data&lt;/a&gt;, and additionally indicates that an intermediary understands the &lt;a href=&quot;../status/425&quot;&gt;&lt;code&gt;425 (Too Early)&lt;/code&gt;&lt;/a&gt; status code. The &lt;code&gt;&lt;strong&gt;Early-Data&lt;/strong&gt;&lt;/code&gt; header is not set by the originator of the request (i.e., a browser).</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;Early-Data&lt;/strong&gt;&lt;/code&gt; заголовка устанавливается в качестве промежуточного указывает , что запрос был передано в &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Security/Transport_Layer_Security#TLS_1.3&quot;&gt;TLS ранние данные&lt;/a&gt; , и дополнительно указывает на то, что посредник понимает &lt;a href=&quot;../status/425&quot;&gt; &lt;code&gt;425 (Too Early)&lt;/code&gt; &lt;/a&gt; код состояния. &lt;code&gt;&lt;strong&gt;Early-Data&lt;/strong&gt;&lt;/code&gt; заголовок не установлен отправителем запроса (то есть, браузер).</target>
        </trans-unit>
        <trans-unit id="e737d89463e54c8720f8ad63e418a0bfb0f07f1f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Expires&lt;/strong&gt;&lt;/code&gt; header contains the date/time after which the response is considered stale.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;Expires&lt;/strong&gt;&lt;/code&gt; заголовок содержит дату / время , после которого ответ считается устаревшим.</target>
        </trans-unit>
        <trans-unit id="5be71a78718c793e01b9247dbf20bee8de751846" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;From&lt;/strong&gt;&lt;/code&gt; request header contains an Internet email address for a human user who controls the requesting user agent.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;From&lt;/strong&gt;&lt;/code&gt; заголовка запроса содержит адрес электронной почты в Интернете для пользователя - человека , который контролирует запрашивающему агент пользователя.</target>
        </trans-unit>
        <trans-unit id="73a9129a968278840bcb3ecb81312e01ea1c7ad9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Host&lt;/strong&gt;&lt;/code&gt; request header specifies the domain name of the server (for virtual hosting), and (optionally) the TCP port number on which the server is listening.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;Host&lt;/strong&gt;&lt;/code&gt; заголовок запроса определяет доменное имя сервера (для виртуального хостинга), и (необязательно) ТСР номер порта , на котором сервер прослушивает.</target>
        </trans-unit>
        <trans-unit id="1d90ed71aec05b79116744d2cf8473e3277dfbc7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Host&lt;/strong&gt;&lt;/code&gt; request header specifies the host and port number of the server to which the request is being sent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36122c8169aa84d5fb618cc5e704f67fadc13a5e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Keep-Alive&lt;/strong&gt;&lt;/code&gt; general header allows the sender to hint about how the connection and may be used to set a timeout and a maximum amount of requests.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;Keep-Alive&lt;/strong&gt;&lt;/code&gt; общий заголовок позволяет отправителю подсказку о том , как соединение и может быть использован для установки тайм - аут и максимальное количество запросов.</target>
        </trans-unit>
        <trans-unit id="c0b74d9f17da8401496a5b8c7cf402bea1cb5769" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Keep-Alive&lt;/strong&gt;&lt;/code&gt; general header allows the sender to hint about how the connection may be used to set a timeout and a maximum amount of requests.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;Keep-Alive&lt;/strong&gt;&lt;/code&gt; общий заголовок позволяет отправителю подсказку о том , как соединение может быть использовано для установки тайм - аут и максимальное количество запросов.</target>
        </trans-unit>
        <trans-unit id="2fbf23d9b9327582f4f49a7ec76472bba6a6a4fa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Pragma&lt;/strong&gt;&lt;/code&gt; HTTP/1.0 general header is an implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the &lt;code&gt;Cache-Control&lt;/code&gt; HTTP/1.1 header is not yet present.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;Pragma&lt;/strong&gt;&lt;/code&gt; HTTP / 1.0 общий заголовок является реализацией конкретного заголовка , который может иметь различные эффекты вдоль цепи запроса-ответа. Он используется для обратной совместимости с кешами HTTP / 1.0, где заголовок &lt;code&gt;Cache-Control&lt;/code&gt; HTTP / 1.1 еще не присутствует.</target>
        </trans-unit>
        <trans-unit id="df9c97c4ad9d61f0d260427224fcdc949c7f1596" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Referer&lt;/strong&gt;&lt;/code&gt; request header contains the address of the page making the request. When following a link, this would be the url of the page containing the link. When making AJAX requests to another domain, this would be your page's url. The &lt;code&gt;Referer&lt;/code&gt; header allows servers to identify where people are visiting them from and may use that data for analytics, logging, or optimized caching, for example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab3c55e276ce88c71d0f16074fd5ecc0e9f413f9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Referer&lt;/strong&gt;&lt;/code&gt; request header contains the address of the previous web page from which a link to the currently requested page was followed. The &lt;code&gt;Referer&lt;/code&gt; header allows servers to identify where people are visiting them from and may use that data for analytics, logging, or optimized caching, for example.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;Referer&lt;/strong&gt;&lt;/code&gt; заголовок запроса содержит адрес предыдущей веб - страницу , с которой последовала ссылка на текущий запрошенную страницу. &lt;code&gt;Referer&lt;/code&gt; заголовок позволяет серверам определить , где люди посещают их и могут использовать эти данные для аналитики, регистрации или оптимизированного кэширования, например.</target>
        </trans-unit>
        <trans-unit id="f35781aa0d1de163111fee93c0d8d38911b682ec" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Server&lt;/strong&gt;&lt;/code&gt; header contains information about the software used by the origin server to handle the request.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;Server&lt;/strong&gt;&lt;/code&gt; заголовок содержит информацию о программном обеспечении , используемом сервером происхождения , чтобы обработать запрос.</target>
        </trans-unit>
        <trans-unit id="d1b3c683e4cd677dc3be26bd03213dd34909bab4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Server&lt;/strong&gt;&lt;/code&gt; header describes the software used by the origin server that handled the request &amp;mdash; that is, the server that generated the response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f72ba03805654f750e5994c434c6ce48268c191f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;TE&lt;/strong&gt;&lt;/code&gt; request header specifies the transfer encodings the user agent is willing to accept. (you could informally call it &lt;em&gt;&lt;code&gt;Accept-Transfer-Encoding&lt;/code&gt;&lt;/em&gt;, which would be more intuitive).</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;TE&lt;/strong&gt;&lt;/code&gt; заголовок запроса определяет кодировки передачи пользовательского агент готов принять. (вы могли бы неофициально назвать это &lt;em&gt; &lt;code&gt;Accept-Transfer-Encoding&lt;/code&gt; &lt;/em&gt; , что было бы более интуитивно понятно).</target>
        </trans-unit>
        <trans-unit id="5652b37e21feb912010feecdf8d75ae0995d40af" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Timing-Allow-Origin&lt;/strong&gt;&lt;/code&gt; response header specifies origins that are allowed to see values of attributes retrieved via features of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Resource_Timing_API&quot;&gt;Resource Timing API&lt;/a&gt;, which would otherwise be reported as zero due to cross-origin restrictions.</source>
          <target state="translated">В &lt;code&gt;&lt;strong&gt;Timing-Allow-Origin&lt;/strong&gt;&lt;/code&gt; заголовка ответа Определяет происхождение, которым разрешено видеть значение атрибутов , получаемых с помощью особенностей &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Resource_Timing_API&quot;&gt;Timing API ресурсов&lt;/a&gt; , которые иначе было бы отчётным нуль из - за ограничения поперечного происхождения.</target>
        </trans-unit>
        <trans-unit id="f06db3329ed9ad8dfc09e37ef09b6402d3732e8a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Via&lt;/strong&gt;&lt;/code&gt; general header is added by proxies, both forward and reverse proxies, and can appear in the request headers and the response headers. It is used for tracking message forwards, avoiding request loops, and identifying the protocol capabilities of senders along the request/response chain.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;Via&lt;/strong&gt;&lt;/code&gt; общий заголовок добавляется прокси - сервера, как вперед , так и обратные прокси - сервера, и может появляться в заголовках запроса и заголовках ответа. Он используется для отслеживания пересылки сообщений, предотвращения зацикливания запросов и определения возможностей протокола отправителей в цепочке запросов / ответов.</target>
        </trans-unit>
        <trans-unit id="d2a25ab474d784c5f16b25d0aa6fcd7fc6ce7fc3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;X-Content-Type-Options&lt;/strong&gt;&lt;/code&gt; response HTTP header is a marker used by the server to indicate that the &lt;a href=&quot;../basics_of_http/mime_types&quot;&gt;MIME types&lt;/a&gt; advertised in the &lt;a href=&quot;content-type&quot;&gt;&lt;code&gt;Content-Type&lt;/code&gt;&lt;/a&gt; headers should not be changed and be followed. This allows to opt-out of &lt;a href=&quot;../basics_of_http/mime_types#MIME_sniffing&quot;&gt;MIME type sniffing&lt;/a&gt;, or, in other words, it is a way to say that the webmasters knew what they were doing.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;X-Content-Type-Options&lt;/strong&gt;&lt;/code&gt; Ответные HTTP заголовок представляет собой маркер , используемый сервером , чтобы указать , что &lt;a href=&quot;../basics_of_http/mime_types&quot;&gt;типы MIME&lt;/a&gt; рекламируется в &lt;a href=&quot;content-type&quot;&gt; &lt;code&gt;Content-Type&lt;/code&gt; &lt;/a&gt; заголовки не должны быть изменены и следовать. Это позволяет отказаться от &lt;a href=&quot;../basics_of_http/mime_types#MIME_sniffing&quot;&gt;сниффинга типа MIME&lt;/a&gt; , или, другими словами, это способ сказать, что веб-мастера знали, что они делают.</target>
        </trans-unit>
        <trans-unit id="cd7aecd4c1fd5dec57a2c138b3e5a8c117d9036d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;X-Content-Type-Options&lt;/strong&gt;&lt;/code&gt; response HTTP header is a marker used by the server to indicate that the &lt;a href=&quot;../basics_of_http/mime_types&quot;&gt;MIME types&lt;/a&gt; advertised in the &lt;a href=&quot;content-type&quot;&gt;&lt;code&gt;Content-Type&lt;/code&gt;&lt;/a&gt; headers should not be changed and be followed. This is a way to opt out of &lt;a href=&quot;../basics_of_http/mime_types#MIME_sniffing&quot;&gt;MIME type sniffing&lt;/a&gt;, or, in other words, to say that the MIME types are deliberately configured.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bceacb1272f77c276df2ceb5f3eec10ddfee111d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;var&gt;platform&lt;/var&gt;&lt;/code&gt; part of the UA string indicates if Firefox is running on a phone-sized or tablet device. When Firefox runs on a device that has the phone form factor, there is a &lt;code&gt;Mobile;&lt;/code&gt; token in the &lt;code&gt;&lt;var&gt;platform&lt;/var&gt;&lt;/code&gt; part of the UA string. When Firefox runs on a tablet device, there is a &lt;code&gt;Tablet;&lt;/code&gt; token in the &lt;code&gt;&lt;var&gt;platform&lt;/var&gt;&lt;/code&gt; part of the UA string instead. For example:</source>
          <target state="translated">&lt;code&gt;&lt;var&gt;platform&lt;/var&gt;&lt;/code&gt; часть строки UA указует , если Firefox работает на телефонный размере или планшетное устройство. Когда Firefox работает на устройстве, имеющем форм-фактор телефона, есть &lt;code&gt;Mobile;&lt;/code&gt; токен в &lt;code&gt;&lt;var&gt;platform&lt;/var&gt;&lt;/code&gt; части строки UA. Когда Firefox работает на планшете, есть &lt;code&gt;Tablet;&lt;/code&gt; вместо этого токен в &lt;code&gt;&lt;var&gt;platform&lt;/var&gt;&lt;/code&gt; части строки UA. Например:</target>
        </trans-unit>
        <trans-unit id="82e98053eac989383e680a4cf5cc9358923e6dcb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Accept-CH-Lifetime&lt;/code&gt; header</source>
          <target state="translated">&lt;code&gt;Accept-CH-Lifetime&lt;/code&gt; заголовка</target>
        </trans-unit>
        <trans-unit id="6df4384dcc248042b53e1dc48377a116aa3f10ec" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Accept-CH&lt;/code&gt; header</source>
          <target state="translated">&lt;code&gt;Accept-CH&lt;/code&gt; заголовок</target>
        </trans-unit>
        <trans-unit id="c43f0f2a86e0d2275393478d7fdb73db5ffbaada" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Accept-Charset&lt;/code&gt; header</source>
          <target state="translated">&lt;code&gt;Accept-Charset&lt;/code&gt; заголовок</target>
        </trans-unit>
        <trans-unit id="2cb1ca877d3eb1b0f248f74c9ec40232997e5dc5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Accept-Charset&lt;/code&gt; request HTTP header advertises which &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/character_encoding&quot;&gt;character encodings&lt;/a&gt; the client understands. Using &lt;a href=&quot;../content_negotiation&quot;&gt;content negotiation&lt;/a&gt;, the server selects one of the encodings, uses it, and informs the client of its choice within the &lt;a href=&quot;content-type&quot;&gt;&lt;code&gt;Content-Type&lt;/code&gt;&lt;/a&gt; response header, usually in a &lt;code&gt;charset=&lt;/code&gt; parameter. Browsers usually don't send this header, as the default value for each resource is usually correct and transmitting it would allow &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Firefox/Privacy/Tracking_Protection&quot;&gt;fingerprinting&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e1a79dc44f6324b9656f0e9b91f70c6b6ee9b87" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Accept-Charset&lt;/code&gt; request HTTP header advertises which character set the client is able to understand. Using &lt;a href=&quot;../content_negotiation&quot;&gt;content negotiation&lt;/a&gt;, the server then selects one of the proposals, uses it and informs the client of its choice within the &lt;a href=&quot;content-type&quot;&gt;&lt;code&gt;Content-Type&lt;/code&gt;&lt;/a&gt; response header. Browsers usually don't set this header as the default value for each content type is usually correct and transmitting it would allow easier fingerprinting.</source>
          <target state="translated">&lt;code&gt;Accept-Charset&lt;/code&gt; запросить HTTP заголовок рекламирует какой набор символов клиент способен понять. Использование &lt;a href=&quot;../content_negotiation&quot;&gt;согласования содержимого&lt;/a&gt; , сервер выбирает один из этих предложений, использует его и информирует клиента о своем выборе в рамках &lt;a href=&quot;content-type&quot;&gt; &lt;code&gt;Content-Type&lt;/code&gt; &lt;/a&gt; заголовка ответа. Браузеры обычно не устанавливают этот заголовок, поскольку значение по умолчанию для каждого типа контента обычно правильное, и его передача упростит снятие отпечатков пальцев.</target>
        </trans-unit>
        <trans-unit id="32e4c478c87a3a2796f89e9931f3a93966bdfdbf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Accept-Encoding&lt;/code&gt; header</source>
          <target state="translated">&lt;code&gt;Accept-Encoding&lt;/code&gt; заголовок</target>
        </trans-unit>
        <trans-unit id="91185be688fa9da1a182310f6df358fd174c46f1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Accept-Encoding&lt;/code&gt; request HTTP header advertises which content encoding, usually a compression algorithm, the client is able to understand. Using &lt;a href=&quot;../content_negotiation&quot;&gt;content negotiation&lt;/a&gt;, the server selects one of the proposals, uses it and informs the client of its choice with the &lt;a href=&quot;content-encoding&quot;&gt;&lt;code&gt;Content-Encoding&lt;/code&gt;&lt;/a&gt; response header.</source>
          <target state="translated">&lt;code&gt;Accept-Encoding&lt;/code&gt; запрос HTTP заголовок рекламирует, содержание которых кодирование, как правило , алгоритм сжатия, клиент может понять. Используя &lt;a href=&quot;../content_negotiation&quot;&gt;согласование содержимого&lt;/a&gt; , сервер выбирает одно из предложений, использует его и сообщает клиенту о своем выборе с помощью заголовка ответа &lt;a href=&quot;content-encoding&quot;&gt; &lt;code&gt;Content-Encoding&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3ae7d36d36006ff093b2a55d71bd74d51e77b3ef" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Accept-Language&lt;/code&gt; header</source>
          <target state="translated">&lt;code&gt;Accept-Language&lt;/code&gt; заголовок</target>
        </trans-unit>
        <trans-unit id="c4a25b290f315f1cab7813fec6b003a441c0d600" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Accept-Language&lt;/code&gt; request HTTP header advertises which languages the client is able to understand, and which locale variant is preferred. (By languages, we mean natural languages, such as English, and not programming languages.) Using &lt;a href=&quot;../content_negotiation&quot;&gt;content negotiation&lt;/a&gt;, the server then selects one of the proposals, uses it and informs the client of its choice with the &lt;a href=&quot;content-language&quot;&gt;&lt;code&gt;Content-Language&lt;/code&gt;&lt;/a&gt; response header. Browsers set adequate values for this header according to their user interface language and even if a user can change it, this happens rarely (and is frowned upon as it leads to fingerprinting).</source>
          <target state="translated">&lt;code&gt;Accept-Language&lt;/code&gt; запросить HTTP заголовок рекламирует какие языки клиент способен понять, и какие локали вариант является предпочтительным. (Под языками мы имеем в виду естественные языки, такие как английский, а не языки программирования.) Используя &lt;a href=&quot;../content_negotiation&quot;&gt;согласование содержимого&lt;/a&gt; , сервер затем выбирает одно из предложений, использует его и сообщает клиенту о своем выборе с помощью заголовка ответа &lt;a href=&quot;content-language&quot;&gt; &lt;code&gt;Content-Language&lt;/code&gt; &lt;/a&gt; . Браузеры устанавливают адекватные значения для этого заголовка в соответствии с языком своего пользовательского интерфейса, и даже если пользователь может его изменить, это случается редко (и не одобряется, поскольку приводит к снятию отпечатков пальцев).</target>
        </trans-unit>
        <trans-unit id="f1004b9f5d3731dda0f9cb684f40a19f9053e7da" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Accept&lt;/code&gt; header</source>
          <target state="translated">&lt;code&gt;Accept&lt;/code&gt; заголовок</target>
        </trans-unit>
        <trans-unit id="826c8958d78002b0f5bee62cfd9d7b4401ff27e1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Accept&lt;/code&gt; request HTTP header advertises which content types, expressed as &lt;a href=&quot;../basics_of_http/mime_types&quot;&gt;MIME types&lt;/a&gt;, the client is able to understand. Using &lt;a href=&quot;../content_negotiation&quot;&gt;content negotiation&lt;/a&gt;, the server then selects one of the proposals, uses it and informs the client of its choice with the &lt;a href=&quot;content-type&quot;&gt;&lt;code&gt;Content-Type&lt;/code&gt;&lt;/a&gt; response header. Browsers set adequate values for this header depending on the context where the request is done: when fetching a CSS stylesheet a different value is set for the request than when fetching an image, video or a script.</source>
          <target state="translated">&lt;code&gt;Accept&lt;/code&gt; запрос HTTP заголовок рекламирует какие типы контента, выраженные в виде &lt;a href=&quot;../basics_of_http/mime_types&quot;&gt;типов MIME&lt;/a&gt; , клиент может понять. Используя &lt;a href=&quot;../content_negotiation&quot;&gt;согласование содержимого&lt;/a&gt; , сервер затем выбирает одно из предложений, использует его и сообщает клиенту о своем выборе с помощью заголовка ответа &lt;a href=&quot;content-type&quot;&gt; &lt;code&gt;Content-Type&lt;/code&gt; &lt;/a&gt; . Браузеры устанавливают адекватные значения для этого заголовка в зависимости от контекста, в котором выполняется запрос: при получении таблицы стилей CSS для запроса устанавливается другое значение, чем при получении изображения, видео или сценария.</target>
        </trans-unit>
        <trans-unit id="44e072ab59ddfb74fd5772684f9e86075ecb4b7a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Access-Control-Allow-Credentials&lt;/code&gt; header works in conjunction with the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/withCredentials&quot;&gt;&lt;code&gt;XMLHttpRequest.withCredentials&lt;/code&gt;&lt;/a&gt; property or with the &lt;code&gt;credentials&lt;/code&gt; option in the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Request/Request&quot;&gt;&lt;code&gt;Request()&lt;/code&gt;&lt;/a&gt; constructor of the Fetch API. For a CORS request with credentials, in order for browsers to expose the response to frontend JavaScript code, both the server (using the &lt;code&gt;Access-Control-Allow-Credentials&lt;/code&gt; header) and the client (by setting the credentials mode for the XHR, Fetch, or Ajax request) must indicate that they&amp;rsquo;re opting in to including credentials.</source>
          <target state="translated">&lt;code&gt;Access-Control-Allow-Credentials&lt;/code&gt; заголовок работает в сочетании с &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/withCredentials&quot;&gt; &lt;code&gt;XMLHttpRequest.withCredentials&lt;/code&gt; &lt;/a&gt; собственности или с &lt;code&gt;credentials&lt;/code&gt; опции в &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Request/Request&quot;&gt; &lt;code&gt;Request()&lt;/code&gt; &lt;/a&gt; конструктор Fetch API. Для запроса CORS с учетными данными, чтобы браузеры могли предоставлять ответ на внешний код JavaScript, как сервер (с использованием заголовка &lt;code&gt;Access-Control-Allow-Credentials&lt;/code&gt; ), так и клиент (путем установки режима учетных данных для XHR, Fetch, или запрос Ajax) должен указывать, что они хотят включить учетные данные.</target>
        </trans-unit>
        <trans-unit id="b7dcdecf1d26a57b7f2c288b092d6918cb0c9128" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Access-Control-Allow-Credentials&lt;/code&gt; response header indicates whether or not the response to the request can be exposed to the page. It can be exposed when the &lt;code&gt;true&lt;/code&gt; value is returned.</source>
          <target state="translated">&lt;code&gt;Access-Control-Allow-Credentials&lt;/code&gt; заголовка ответа указывает , является ли ответ на запрос может подвергаться странице. Его можно раскрыть, когда будет возвращено &lt;code&gt;true&lt;/code&gt; значение.</target>
        </trans-unit>
        <trans-unit id="3c6671b887bc83cf312809fdd2c8e99c4197d40f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Access-Control-Allow-Credentials&lt;/code&gt; response header tells browsers whether to expose the response to frontend JavaScript code when the request's credentials mode (&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Request/credentials&quot;&gt;&lt;code&gt;Request.credentials&lt;/code&gt;&lt;/a&gt;) is &quot;&lt;code&gt;include&lt;/code&gt;&quot;.</source>
          <target state="translated">&lt;code&gt;Access-Control-Allow-Credentials&lt;/code&gt; заголовка ответа указывает браузеры ли открывающие ответ на FRONTEND код JavaScript , когда режим учетных данных по просьбе ( в &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Request/credentials&quot;&gt; &lt;code&gt;Request.credentials&lt;/code&gt; &lt;/a&gt; ) является &amp;laquo; &lt;code&gt;include&lt;/code&gt; &amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="f12c8be59963d49889bc73472fd35b514c851a07" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Access-Control-Allow-Credentials&lt;/code&gt; response header tells browsers whether to expose the response to frontend JavaScript code when the request's credentials mode (&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Request/credentials&quot;&gt;&lt;code&gt;Request.credentials&lt;/code&gt;&lt;/a&gt;) is &lt;code&gt;include&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72353e1b96e08b162b2efe8857a396c5cd57de4d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Access-Control-Allow-Headers&lt;/code&gt; header is sent by the server in response to a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/preflight_request&quot;&gt;preflight request&lt;/a&gt;; it lets the client know which &lt;a href=&quot;../../headers&quot;&gt;HTTP headers&lt;/a&gt; are permitted in CORS requests. If the client &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;user agent&lt;/a&gt; finds among the comma-delineated values provided by the header any header name it does not recognize, this error occurs.</source>
          <target state="translated">&lt;code&gt;Access-Control-Allow-Headers&lt;/code&gt; заголовок отправляется сервером в ответ на &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/preflight_request&quot;&gt;предполетной просьбу&lt;/a&gt; ; он позволяет клиенту узнать, какие &lt;a href=&quot;../../headers&quot;&gt;HTTP-заголовки&lt;/a&gt; разрешены в запросах CORS. Если клиентский &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;пользовательский агент&lt;/a&gt; находит среди значений, разделенных запятыми, предоставленных заголовком, какое-либо имя заголовка, которое он не распознает, возникает эта ошибка.</target>
        </trans-unit>
        <trans-unit id="0864906322164b5b88f217b19f6a18996814ca0d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Access-Control-Allow-Headers&lt;/code&gt; header is sent by the server to let the client know which headers it supports for &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/CORS&quot;&gt;CORS&lt;/a&gt; requests. The value of &lt;code&gt;Access-Control-Allow-Headers&lt;/code&gt; should be a comma-delineated list of header names, such as &quot;&lt;code&gt;X-Custom-Information&lt;/code&gt;&quot; or any of the standard but non-basic header names (which are always allowed).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd672b7157d867818df2e4b6551047d6d6feb57a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Access-Control-Allow-Headers&lt;/code&gt; header is sent by the server to let the client know which headers it supports for &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/CORS&quot;&gt;CORS&lt;/a&gt; requests. The value of &lt;code&gt;Access-Control-Allow-Headers&lt;/code&gt; should be a comma-delineated list of header names, such as &lt;code&gt;&quot;X-Custom-Information&quot;&lt;/code&gt; or any of the standard but non-basic header names (which are always allowed).</source>
          <target state="translated">&lt;code&gt;Access-Control-Allow-Headers&lt;/code&gt; заголовок отправляется на сервер , чтобы позволить клиенту знать , какие заголовки он поддерживает для &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/CORS&quot;&gt;CORS&lt;/a&gt; запросов. Значение &lt;code&gt;Access-Control-Allow-Headers&lt;/code&gt; должно быть разделенным запятыми списком имен заголовков, например &lt;code&gt;&quot;X-Custom-Information&quot;&lt;/code&gt; или любыми стандартными, но не базовыми именами заголовков (которые всегда разрешены).</target>
        </trans-unit>
        <trans-unit id="7ff32aaa41aa73f3f46503d5b741dbb0efe92ed8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Access-Control-Allow-Headers&lt;/code&gt; response header is used in response to a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/preflight_request&quot;&gt;preflight request&lt;/a&gt; which includes the &lt;a href=&quot;access-control-request-headers&quot;&gt;&lt;code&gt;Access-Control-Request-Headers&lt;/code&gt;&lt;/a&gt; to indicate which HTTP headers can be used during the actual request.</source>
          <target state="translated">&lt;code&gt;Access-Control-Allow-Headers&lt;/code&gt; заголовок ответа используется в ответ на &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/preflight_request&quot;&gt;предполетный запрос&lt;/a&gt; , который включает в себя &lt;a href=&quot;access-control-request-headers&quot;&gt; &lt;code&gt;Access-Control-Request-Headers&lt;/code&gt; &lt;/a&gt; , чтобы указать , какие HTTP заголовки может быть использована во время фактического запроса.</target>
        </trans-unit>
        <trans-unit id="e0316b88b462433d980db8987aaedc7affa9a74d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Access-Control-Allow-Methods&lt;/code&gt; header is sent by the server to let the client know what &lt;a href=&quot;../../methods&quot;&gt;HTTP request methods&lt;/a&gt; it supports for CORS requests. The header's value is a comma-delineated string of HTTP method names, such as &lt;a href=&quot;../../methods/get&quot;&gt;&lt;code&gt;GET&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../methods/post&quot;&gt;&lt;code&gt;POST&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;../../methods/head&quot;&gt;&lt;code&gt;HEAD&lt;/code&gt;&lt;/a&gt;. If any of the specified values are not recognized by the client &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;user agent&lt;/a&gt;, this error occurs.</source>
          <target state="translated">В &lt;code&gt;Access-Control-Allow-Methods&lt;/code&gt; заголовка отправляемый сервер , чтобы позволить клиенту , что то , что &lt;a href=&quot;../../methods&quot;&gt;HTTP методов запроса&lt;/a&gt; он поддерживает для CORS запросов. Значение заголовка - это разделенная запятыми строка имен HTTP-методов, например &lt;a href=&quot;../../methods/get&quot;&gt; &lt;code&gt;GET&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../../methods/post&quot;&gt; &lt;code&gt;POST&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;../../methods/head&quot;&gt; &lt;code&gt;HEAD&lt;/code&gt; &lt;/a&gt; . Если какое-либо из указанных значений не распознается клиентским &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;пользовательским агентом&lt;/a&gt; , возникает эта ошибка.</target>
        </trans-unit>
        <trans-unit id="77116c8fb41e193fc817da845099a6fb246839d8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Access-Control-Allow-Methods&lt;/code&gt; response header specifies the method or methods allowed when accessing the resource in response to a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/preflight_request&quot;&gt;preflight request&lt;/a&gt;.</source>
          <target state="translated">В &lt;code&gt;Access-Control-Allow-Methods&lt;/code&gt; заголовок ответа определяет метод или методы позволили при обращении к ресурсу в ответ на &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/preflight_request&quot;&gt;предполетную просьбу&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="067f39d99ac015284dffa6b70703714ad54ce876" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Access-Control-Expose-Headers&lt;/code&gt; response header indicates which headers can be exposed as part of the response by listing their names.</source>
          <target state="translated">&lt;code&gt;Access-Control-Expose-Headers&lt;/code&gt; заголовка ответа указывает на то, какие заголовки могут быть представлены как часть ответа, перечислив их имена.</target>
        </trans-unit>
        <trans-unit id="0d0b9369d0f212ed412c895390853280713fe380" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Access-Control-Max-Age&lt;/code&gt; response header indicates how long the results of a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/preflight_request&quot;&gt;preflight request&lt;/a&gt; (that is the information contained in the &lt;a href=&quot;access-control-allow-methods&quot;&gt;&lt;code&gt;Access-Control-Allow-Methods&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;access-control-allow-headers&quot;&gt;&lt;code&gt;Access-Control-Allow-Headers&lt;/code&gt;&lt;/a&gt; headers) can be cached.</source>
          <target state="translated">&lt;code&gt;Access-Control-Max-Age&lt;/code&gt; заголовка ответа указывает на то, как долго результаты &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/preflight_request&quot;&gt;предполетного запроса&lt;/a&gt; (то есть информация , содержащаяся в &lt;a href=&quot;access-control-allow-methods&quot;&gt; &lt;code&gt;Access-Control-Allow-Methods&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;access-control-allow-headers&quot;&gt; &lt;code&gt;Access-Control-Allow-Headers&lt;/code&gt; &lt;/a&gt; заголовки) можно кэшировать.</target>
        </trans-unit>
        <trans-unit id="d911724c3b9a4293a98fa691e196743b5241679f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Access-Control-Request-Headers&lt;/code&gt; request header is used by browsers when issuing a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/preflight_request&quot;&gt;preflight request&lt;/a&gt;, to let the server know which &lt;a href=&quot;../headers&quot;&gt;HTTP headers&lt;/a&gt; the client might send when the actual request is made.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dafa896f612431fbab583cf168f3881c2f6b27aa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Access-Control-Request-Headers&lt;/code&gt; request header is used when issuing a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/preflight_request&quot;&gt;preflight request&lt;/a&gt; to let the server know which &lt;a href=&quot;../headers&quot;&gt;HTTP headers&lt;/a&gt; will be used when the actual request is made.</source>
          <target state="translated">&lt;code&gt;Access-Control-Request-Headers&lt;/code&gt; заголовок запроса используется при выдаче &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/preflight_request&quot;&gt;предполетного запроса&lt;/a&gt; , чтобы позволить ноу - серверу , который &lt;a href=&quot;../headers&quot;&gt;HTTP заголовков&lt;/a&gt; будет использоваться , когда фактический запрос был сделан.</target>
        </trans-unit>
        <trans-unit id="da80f865ca3264cb02c6582db1c71f9050cac42c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Access-Control-Request-Method&lt;/code&gt; request header is used by browsers when issuing a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/preflight_request&quot;&gt;preflight request&lt;/a&gt;, to let the server know which &lt;a href=&quot;../methods&quot;&gt;HTTP method&lt;/a&gt; will be used when the actual request is made. This header is necessary as the preflight request is always an &lt;a href=&quot;../methods/options&quot;&gt;&lt;code&gt;OPTIONS&lt;/code&gt;&lt;/a&gt; and doesn't use the same method as the actual request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c04d281d947283fc5e13f4243911531dd1e81ae" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Access-Control-Request-Method&lt;/code&gt; request header is used when issuing a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/preflight_request&quot;&gt;preflight request&lt;/a&gt; to let the server know which &lt;a href=&quot;../methods&quot;&gt;HTTP method&lt;/a&gt; will be used when the actual request is made. This header is necessary as the preflight request is always an &lt;a href=&quot;../methods/options&quot;&gt;&lt;code&gt;OPTIONS&lt;/code&gt;&lt;/a&gt; and doesn't use the same method as the actual request.</source>
          <target state="translated">&lt;code&gt;Access-Control-Request-Method&lt;/code&gt; заголовок запроса используется при выдаче &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/preflight_request&quot;&gt;предполетного запроса&lt;/a&gt; , чтобы позволить ноу - серверу , который &lt;a href=&quot;../methods&quot;&gt;HTTP метода&lt;/a&gt; будет использоваться , когда фактический запрос был сделан. Этот заголовок необходим, поскольку предварительный запрос всегда является &lt;a href=&quot;../methods/options&quot;&gt; &lt;code&gt;OPTIONS&lt;/code&gt; &lt;/a&gt; и не использует тот же метод, что и фактический запрос.</target>
        </trans-unit>
        <trans-unit id="c0cd5616b768c68f7ab87609f718d08faf8821ee" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Age&lt;/code&gt; header is usually close to zero. If it is &lt;code&gt;Age: 0&lt;/code&gt;, it was probably just fetched from the origin server; otherwise It is usually calculated as a difference between the proxy's current date and the &lt;a href=&quot;date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; general header included in the HTTP response.</source>
          <target state="translated">&lt;code&gt;Age&lt;/code&gt; заголовок, как правило , близок к нулю. Если это &lt;code&gt;Age: 0&lt;/code&gt; , вероятно, он был только что получен с исходного сервера; в противном случае он обычно рассчитывается как разница между текущей датой прокси и общим заголовком &lt;a href=&quot;date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; ,&lt;/a&gt; включенным в ответ HTTP.</target>
        </trans-unit>
        <trans-unit id="86a92479e304493df13e1947522f656380ef064d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Alt-Svc&lt;/code&gt; HTTP response header is used to advertise alternative services through which the same resource can be reached. An alternative service is defined by a protocol/host/port combination.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58db6b4226911c9c041223607c76d210c4b75632" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Alt-Svc&lt;/code&gt; header is used to list alternate ways to reach this website.</source>
          <target state="translated">&lt;code&gt;Alt-Svc&lt;/code&gt; заголовок используется в список альтернативных способов достижения этого веб - сайта.</target>
        </trans-unit>
        <trans-unit id="f8bcd29c16619b65da2808b96987a30c145398a8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CONNECT&lt;/code&gt; method establishes a tunnel to the server identified by the target resource.</source>
          <target state="translated">Метод &lt;code&gt;CONNECT&lt;/code&gt; устанавливает туннель к серверу, идентифицированному целевым ресурсом.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
