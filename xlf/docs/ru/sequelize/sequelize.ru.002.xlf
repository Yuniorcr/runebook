<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="sequelize">
    <body>
      <group id="sequelize">
        <trans-unit id="baf542c6a886f2170e6594b0cd4c2ad52976c234" translate="yes" xml:space="preserve">
          <source>Having options</source>
          <target state="translated">Имея варианты</target>
        </trans-unit>
        <trans-unit id="8421e2a51a8261b6660fa9c0a9fd6e14eb653c86" translate="yes" xml:space="preserve">
          <source>Helper functions for use inside getter and setter definitions</source>
          <target state="translated">Функции помощника для использования внутри определений геттера и сеттера</target>
        </trans-unit>
        <trans-unit id="24c3d9b4e0e40c927afc8e7965f44190f7b0a7ad" translate="yes" xml:space="preserve">
          <source>Helper method to determine if a instance is &quot;soft deleted&quot;.</source>
          <target state="translated">Метод помощи в определении того,является ли экземпляр &quot;мягко удаленным&quot;.</target>
        </trans-unit>
        <trans-unit id="15900e9e0261074339464c903170431feba6def9" translate="yes" xml:space="preserve">
          <source>Helper method to determine if a instance is &quot;soft deleted&quot;. This is particularly useful if the implementer renamed the &lt;code&gt;deletedAt&lt;/code&gt; attribute to something different. This method requires &lt;code&gt;paranoid&lt;/code&gt; to be enabled.</source>
          <target state="translated">Вспомогательный метод для определения того, является ли экземпляр &amp;laquo;обратимо удаленным&amp;raquo;. Это особенно полезно, если разработчик переименовал атрибут &lt;code&gt;deletedAt&lt;/code&gt; во что-то другое. Этот метод требует включения &lt;code&gt;paranoid&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="74b5b0e337605288491d3919c18791d4428323a7" translate="yes" xml:space="preserve">
          <source>Here is an example demonstrating use cases of BelongsTo and HasOne.</source>
          <target state="translated">Вот пример,демонстрирующий случаи использования BelongsTo и HasOne.</target>
        </trans-unit>
        <trans-unit id="c526e01d78df0d88e184c85be4505b4a091ed47f" translate="yes" xml:space="preserve">
          <source>Here the &lt;code&gt;deleted&lt;/code&gt; scope is merged with the finder. If we were to pass &lt;code&gt;where: { firstName: 'john', deleted: false }&lt;/code&gt; to the finder, the &lt;code&gt;deleted&lt;/code&gt; scope would be overwritten.</source>
          <target state="translated">Здесь &lt;code&gt;deleted&lt;/code&gt; область объединяется с искателем. Если бы мы &lt;code&gt;where: { firstName: 'john', deleted: false }&lt;/code&gt; поиска where: {firstName: 'john', deleted: false} , &lt;code&gt;deleted&lt;/code&gt; область была бы перезаписана.</target>
        </trans-unit>
        <trans-unit id="9afa5e334e28c0ce37c5ef76de0154fcbd75e3db" translate="yes" xml:space="preserve">
          <source>Here, our user model is called &lt;code&gt;user&lt;/code&gt;, with a lowercase u - This means that the property in the object should also be &lt;code&gt;user&lt;/code&gt;. If the name given to &lt;code&gt;sequelize.define&lt;/code&gt; was &lt;code&gt;User&lt;/code&gt;, the key in the object should also be &lt;code&gt;User&lt;/code&gt;. Likewise for &lt;code&gt;addresses&lt;/code&gt;, except it's pluralized being a &lt;code&gt;hasMany&lt;/code&gt; association.</source>
          <target state="translated">Здесь наша модель пользователя называется &lt;code&gt;user&lt;/code&gt; со строчной буквой u - это означает, что свойство в объекте также должно быть &lt;code&gt;user&lt;/code&gt; . Если имя, данное &lt;code&gt;sequelize.define&lt;/code&gt; , было &lt;code&gt;User&lt;/code&gt; , ключ в объекте также должен быть &lt;code&gt;User&lt;/code&gt; . &lt;code&gt;hasMany&lt;/code&gt; для &lt;code&gt;addresses&lt;/code&gt; , за исключением того, что оно во множественном числе является ассоциацией hasMany .</target>
        </trans-unit>
        <trans-unit id="139103af93155175db170f4086701037ce627db7" translate="yes" xml:space="preserve">
          <source>Hierarchies</source>
          <target state="translated">Hierarchies</target>
        </trans-unit>
        <trans-unit id="4c2c702395b304a44afd07f98c51e1749b23060d" translate="yes" xml:space="preserve">
          <source>Historical records / Time travel</source>
          <target state="translated">Исторические записи/Путешествия во времени</target>
        </trans-unit>
        <trans-unit id="4bd8f3f03a576b2088bd73a2339d07fca1de805d" translate="yes" xml:space="preserve">
          <source>Hooks</source>
          <target state="translated">Hooks</target>
        </trans-unit>
        <trans-unit id="4212538b69426994af61524680ab6c713fab4826" translate="yes" xml:space="preserve">
          <source>Hooks (also known as lifecycle events), are functions which are called before and after calls in sequelize are executed. For example, if you want to always set a value on a model before saving it, you can add a &lt;code&gt;beforeUpdate&lt;/code&gt; hook.</source>
          <target state="translated">Хуки (также известные как события жизненного цикла) - это функции, которые вызываются до и после выполнения вызовов в sequelize. Например, если вы хотите всегда устанавливать значение модели перед ее сохранением, вы можете добавить &lt;code&gt;beforeUpdate&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f00c9b0e6957fcef4079e622b05e8f359ef558dc" translate="yes" xml:space="preserve">
          <source>HostNotFoundError</source>
          <target state="translated">HostNotFoundError</target>
        </trans-unit>
        <trans-unit id="df98405c75e3d2293644f3903f9ba376eecd65dd" translate="yes" xml:space="preserve">
          <source>HostNotReachableError</source>
          <target state="translated">HostNotReachableError</target>
        </trans-unit>
        <trans-unit id="deb41f9eccd872d97cae66101673dc591a3dd320" translate="yes" xml:space="preserve">
          <source>How many rows to delete</source>
          <target state="translated">Сколько строк удалять</target>
        </trans-unit>
        <trans-unit id="55c6fc1c78b7f02391f35f14b313aa07ac416870" translate="yes" xml:space="preserve">
          <source>How many rows to undelete (only for mysql)</source>
          <target state="translated">Сколько строк недочитать (только для mysql)</target>
        </trans-unit>
        <trans-unit id="c74419ff22ba551918695ec2d4d452f7e5aafa8c" translate="yes" xml:space="preserve">
          <source>How many rows to update (only for mysql and mariadb, implemented as TOP(n) for MSSQL; for sqlite it is supported only when rowid is present)</source>
          <target state="translated">Сколько строк обновлять (только для mysql и mariadb,реализованный как TOP(n)для MSSQL;для sqlite поддерживается только при наличии rowid)</target>
        </trans-unit>
        <trans-unit id="6ae043fac4f95946de2cb5d70a20b98cbb4b4075" translate="yes" xml:space="preserve">
          <source>How many times a failing query is automatically retried.</source>
          <target state="translated">Сколько раз неудачный запрос будет автоматически перепроверен.</target>
        </trans-unit>
        <trans-unit id="bcd7ff308853d4934c2fcd304af01bbf8af438f7" translate="yes" xml:space="preserve">
          <source>How many times a failing query is automatically retried. Set to 0 to disable retrying on SQL_BUSY error.</source>
          <target state="translated">Сколько раз неудачный запрос будет автоматически перепроверен.Установите 0,чтобы отключить повторную попытку при ошибке SQL_BUSY.</target>
        </trans-unit>
        <trans-unit id="cb9871e1bb1811c7e92e66eae26e9dbdc2227fce" translate="yes" xml:space="preserve">
          <source>However, adding &lt;code&gt;hooks: true&lt;/code&gt; explicitly tells Sequelize that optimization is not of your concern and will perform a &lt;code&gt;SELECT&lt;/code&gt; on the associated objects and destroy each instance one by one in order to be able to call the hooks with the right parameters.</source>
          <target state="translated">Однако добавление &lt;code&gt;hooks: true&lt;/code&gt; явно сообщает Sequelize, что оптимизация не является вашей заботой, и будет выполнять &lt;code&gt;SELECT&lt;/code&gt; для связанных объектов и уничтожать каждый экземпляр один за другим, чтобы иметь возможность вызывать хуки с правильными параметрами.</target>
        </trans-unit>
        <trans-unit id="c2b8ea142713d4e18b2a52407b042919ba804f65" translate="yes" xml:space="preserve">
          <source>However, if getters and/or setters are defined for &lt;code&gt;field&lt;/code&gt; they will be invoked, instead of returning the value from &lt;code&gt;dataValues&lt;/code&gt;. Accessing properties directly or using &lt;code&gt;get&lt;/code&gt; is preferred for regular use, &lt;code&gt;getDataValue&lt;/code&gt; should only be used for custom getters.</source>
          <target state="translated">Однако, если для &lt;code&gt;field&lt;/code&gt; определены геттеры и / или сеттеры, они будут вызываться вместо возврата значения из &lt;code&gt;dataValues&lt;/code&gt; . Доступ к свойствам напрямую или использование &lt;code&gt;get&lt;/code&gt; предпочтительнее для обычного использования, &lt;code&gt;getDataValue&lt;/code&gt; следует использовать только для пользовательских методов получения.</target>
        </trans-unit>
        <trans-unit id="3d191358a866703a8af0d57f25666c38b8499366" translate="yes" xml:space="preserve">
          <source>However, please note that whenever you get back a value that is range you will receive:</source>
          <target state="translated">Однако,пожалуйста,обратите внимание,что всякий раз,когда вы получите обратно значение,которое является диапазоном,вы получите:</target>
        </trans-unit>
        <trans-unit id="971b6559af147ead7fa90d836302f41e54b0377c" translate="yes" xml:space="preserve">
          <source>However, the code above will result in the following error: &lt;code&gt;Cyclic dependency found. documents is dependent of itself. Dependency chain: documents -&amp;gt; versions =&amp;gt; documents&lt;/code&gt;.</source>
          <target state="translated">Однако приведенный выше код приведет к следующей ошибке: &lt;code&gt;Cyclic dependency found. documents is dependent of itself. Dependency chain: documents -&amp;gt; versions =&amp;gt; documents&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c9226f99dd645a71848cf0585c15059d7de868f4" translate="yes" xml:space="preserve">
          <source>IGNORE</source>
          <target state="translated">IGNORE</target>
        </trans-unit>
        <trans-unit id="8ae3e8381a64e36db57a5344790db89d7de90954" translate="yes" xml:space="preserve">
          <source>IMMEDIATE</source>
          <target state="translated">IMMEDIATE</target>
        </trans-unit>
        <trans-unit id="8f3bb7db433392fa9cd059cb669816e6111bb633" translate="yes" xml:space="preserve">
          <source>INET</source>
          <target state="translated">INET</target>
        </trans-unit>
        <trans-unit id="69c8af3292fb9fef906812e99c9acfa99a66fd97" translate="yes" xml:space="preserve">
          <source>INITIALLY_DEFERRED</source>
          <target state="translated">INITIALLY_DEFERRED</target>
        </trans-unit>
        <trans-unit id="d0a0d37857e35a2dc02ec4fe0c913bf1991b276e" translate="yes" xml:space="preserve">
          <source>INITIALLY_IMMEDIATE</source>
          <target state="translated">INITIALLY_IMMEDIATE</target>
        </trans-unit>
        <trans-unit id="c20ea07e32d25c072a65368c234d6f5a88f4521a" translate="yes" xml:space="preserve">
          <source>INSERT</source>
          <target state="translated">INSERT</target>
        </trans-unit>
        <trans-unit id="0fe37e40e5dab3ac411c2ddca6d21991e811acfa" translate="yes" xml:space="preserve">
          <source>INTEGER</source>
          <target state="translated">INTEGER</target>
        </trans-unit>
        <trans-unit id="06b6ace8ca3f18249e8ba4ea9090c0f34564ce1c" translate="yes" xml:space="preserve">
          <source>Identifier</source>
          <target state="translated">Identifier</target>
        </trans-unit>
        <trans-unit id="d9fdf457bfc8e4d5000783186983c15ac6bcde12" translate="yes" xml:space="preserve">
          <source>If a particular field of a model is set to not allow null (with &lt;code&gt;allowNull: false&lt;/code&gt;) and that value has been set to &lt;code&gt;null&lt;/code&gt;, all validators will be skipped and a &lt;code&gt;ValidationError&lt;/code&gt; will be thrown.</source>
          <target state="translated">Если для определенного поля модели задано значение, &lt;code&gt;allowNull: false&lt;/code&gt; значение null (с allowNull: false ), и для этого значения установлено значение &lt;code&gt;null&lt;/code&gt; , все валидаторы будут пропущены, и будет выдано &lt;code&gt;ValidationError&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="80d19fa71b3b212078b2af9bb47612878b596815" translate="yes" xml:space="preserve">
          <source>If a single default schema per model is needed, set the &lt;code&gt;options.schema='schema'&lt;/code&gt; parameter during the &lt;code&gt;define()&lt;/code&gt; call for the model.</source>
          <target state="translated">Если для каждой модели требуется одна схема по умолчанию, установите параметр &lt;code&gt;options.schema='schema'&lt;/code&gt; во время вызова &lt;code&gt;define()&lt;/code&gt; для модели.</target>
        </trans-unit>
        <trans-unit id="8ec2460c5c0105c3640d21141a54ba2c766998ff" translate="yes" xml:space="preserve">
          <source>If a string is provided, that column is decremented by the value of &lt;code&gt;by&lt;/code&gt; given in options. If an array is provided, the same is true for each column. If and object is provided, each column is decremented by the value given</source>
          <target state="translated">Если указана строка, этот столбец уменьшается на значение &lt;code&gt;by&lt;/code&gt; заданное в параметрах. Если предоставляется массив, то же самое верно для каждого столбца. Если указан объект и, каждый столбец уменьшается на указанное значение</target>
        </trans-unit>
        <trans-unit id="a038ac481096e063842e82236359d80e84de916c" translate="yes" xml:space="preserve">
          <source>If a string is provided, that column is incremented by the value of &lt;code&gt;by&lt;/code&gt; given in options. If an array is provided, the same is true for each column. If and object is provided, each column is incremented by the value given.</source>
          <target state="translated">Если указана строка, этот столбец увеличивается на значение &lt;code&gt;by&lt;/code&gt; заданное в параметрах. Если предоставляется массив, то же самое верно для каждого столбца. Если указан объект и, каждый столбец увеличивается на заданное значение.</target>
        </trans-unit>
        <trans-unit id="d3f8b21413ef2d75f353e547b63ad8a094ceae96" translate="yes" xml:space="preserve">
          <source>If an array is passed, &lt;code&gt;$1&lt;/code&gt; is bound to the 1st element in the array (&lt;code&gt;bind[0]&lt;/code&gt;)</source>
          <target state="translated">Если передан массив, &lt;code&gt;$1&lt;/code&gt; привязывается к 1-му элементу массива ( &lt;code&gt;bind[0]&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="04ff1e23f5982cac50100dca79c353131b430203" translate="yes" xml:space="preserve">
          <source>If an array is passed, &lt;code&gt;?&lt;/code&gt; will be replaced in the order that they appear in the array</source>
          <target state="translated">Если массив передается, &lt;code&gt;?&lt;/code&gt; будут заменены в том порядке, в котором они появляются в массиве</target>
        </trans-unit>
        <trans-unit id="021622889c30d11d413d8e307364ba9ff4ad40e3" translate="yes" xml:space="preserve">
          <source>If an association is aliased (using the &lt;code&gt;as&lt;/code&gt; option), you must specify this alias when including the model. Notice how the user's &lt;code&gt;Tool&lt;/code&gt;s are aliased as &lt;code&gt;Instruments&lt;/code&gt; above. In order to get that right you have to specify the model you want to load, as well as the alias:</source>
          <target state="translated">Если ассоциация является псевдонимом (с использованием опции &lt;code&gt;as&lt;/code&gt; ), вы должны указать этот псевдоним при включении модели. Обратите внимание , как на пользователя &lt;code&gt;Tool&lt;/code&gt; s являются псевдонимами , как &lt;code&gt;Instruments&lt;/code&gt; выше. Чтобы получить это право, вы должны указать модель, которую хотите загрузить, а также псевдоним:</target>
        </trans-unit>
        <trans-unit id="c54b915fccb2e4ddf42da3781b85ba11c94eff3f" translate="yes" xml:space="preserve">
          <source>If an attribute name of the table contains dots, the resulting objects will be nested. This is due to the usage of &lt;a href=&quot;https://github.com/mickhansen/dottie.js/&quot;&gt;dottie.js&lt;/a&gt; under the hood. See below:</source>
          <target state="translated">Если имя атрибута таблицы содержит точки, полученные объекты будут вложенными. Это связано с тем, &lt;a href=&quot;https://github.com/mickhansen/dottie.js/&quot;&gt;что&lt;/a&gt; под капотом используется dottie.js . Увидеть ниже:</target>
        </trans-unit>
        <trans-unit id="7e8f4a0270879aa34288ff325e1734fc57abfc56" translate="yes" xml:space="preserve">
          <source>If an object is passed, &lt;code&gt;$key&lt;/code&gt; is bound to &lt;code&gt;object['key']&lt;/code&gt;. Each key must begin with a non-numeric char. &lt;code&gt;$1&lt;/code&gt; is not a valid key, even if &lt;code&gt;object['1']&lt;/code&gt; exists.</source>
          <target state="translated">Если объект передан, &lt;code&gt;$key&lt;/code&gt; привязывается к &lt;code&gt;object['key']&lt;/code&gt; . Каждый ключ должен начинаться с нечислового символа. &lt;code&gt;$1&lt;/code&gt; не является допустимым ключом, даже если &lt;code&gt;object['1']&lt;/code&gt; существует.</target>
        </trans-unit>
        <trans-unit id="6e127f4ede46c56ba8a869fe2aad272d846c5e9a" translate="yes" xml:space="preserve">
          <source>If an object is passed, &lt;code&gt;:key&lt;/code&gt; will be replaced with the keys from that object. If the object contains keys not found in the query or vice versa, an exception will be thrown.</source>
          <target state="translated">Если объект передан &lt;code&gt;:key&lt;/code&gt; будет заменен ключами этого объекта. Если объект содержит ключи, не найденные в запросе, или наоборот, будет сгенерировано исключение.</target>
        </trans-unit>
        <trans-unit id="9304ce1affc25db6aa67ee93e8d468669f898fd5" translate="yes" xml:space="preserve">
          <source>If called with a dot.separated key on a JSON/JSONB attribute it will set the value nested and flag the entire object as changed.</source>
          <target state="translated">При вызове с ключом dot.separated в атрибуте JSON/JSONB он установит вложенное значение и пометит весь объект как измененный.</target>
        </trans-unit>
        <trans-unit id="300a90b91f546fafc57ddf54696a6ab280b20fc2" translate="yes" xml:space="preserve">
          <source>If called without a key, returns the previous values for all values which have changed</source>
          <target state="translated">Если вызывается без ключа,возвращает предыдущие значения для всех измененных значений</target>
        </trans-unit>
        <trans-unit id="db0b72801ce4daab0ede65373af164330463fbaa" translate="yes" xml:space="preserve">
          <source>If changed is called with a string it will return a boolean indicating whether the value of that key in &lt;code&gt;dataValues&lt;/code&gt; is different from the value in &lt;code&gt;_previousDataValues&lt;/code&gt;.</source>
          <target state="translated">Если измененный вызывается со строкой, он вернет логическое значение, &lt;code&gt;dataValues&lt;/code&gt; , отличается ли значение этого ключа в dataValues от значения в &lt;code&gt;_previousDataValues&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b57e7f29c55e30f10a44c4cebddd8704ddabfd60" translate="yes" xml:space="preserve">
          <source>If changed is called without an argument and no keys have changed, it will return &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Если измененный вызывается без аргумента и никакие ключи не изменились, он вернет &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cb8a52b4f780a30671fc27031ceae2a7e48b802e" translate="yes" xml:space="preserve">
          <source>If changed is called without an argument, it will return an array of keys that have changed.</source>
          <target state="translated">Если изменение вызывается без аргумента,то возвращается массив измененных ключей.</target>
        </trans-unit>
        <trans-unit id="20c37c0197f08cf51e26c1e2044ffa20d35483f5" translate="yes" xml:space="preserve">
          <source>If false do not prepend the query with the search_path (Postgres only)</source>
          <target state="translated">Если false не префиксовать запрос с помощью search_path (только для Postgres)</target>
        </trans-unit>
        <trans-unit id="657ba5fa03244f7aee9eb6c421c8a628fdb8a23e" translate="yes" xml:space="preserve">
          <source>If false, the column will have a NOT NULL constraint, and a not null validation will be run before an instance is saved.</source>
          <target state="translated">Если значение false,то столбец будет иметь ограничение NOT NULL,и не нулевая проверка будет запущена до того,как экземпляр будет сохранен.</target>
        </trans-unit>
        <trans-unit id="b7040facc6b4350a46a2def78c5b8c73e7bcb1a8" translate="yes" xml:space="preserve">
          <source>If false, validations won't be run.</source>
          <target state="translated">Если ложь,проверка не будет проведена.</target>
        </trans-unit>
        <trans-unit id="44cd1fb91500ac78a5a510a589057a193ab6aa6d" translate="yes" xml:space="preserve">
          <source>If force is true, any existing functions with the same parameters will be replaced. For postgres, this means using &lt;code&gt;CREATE OR REPLACE FUNCTION&lt;/code&gt; instead of &lt;code&gt;CREATE FUNCTION&lt;/code&gt;. Default is false</source>
          <target state="translated">Если force имеет значение true, любые существующие функции с такими же параметрами будут заменены. Для postgres это означает использование &lt;code&gt;CREATE OR REPLACE FUNCTION&lt;/code&gt; вместо &lt;code&gt;CREATE FUNCTION&lt;/code&gt; . По умолчанию false</target>
        </trans-unit>
        <trans-unit id="6e07f5f6020b14d25df9a8addee707cdd889572f" translate="yes" xml:space="preserve">
          <source>If force is true, each Model will run &lt;code&gt;DROP TABLE IF EXISTS&lt;/code&gt;, before it tries to create its own table</source>
          <target state="translated">Если force истинно, каждая модель будет запускать &lt;code&gt;DROP TABLE IF EXISTS&lt;/code&gt; , прежде чем она попытается создать свою собственную таблицу.</target>
        </trans-unit>
        <trans-unit id="0e59b7682415bc819345577fa12bec6b2f9cba27" translate="yes" xml:space="preserve">
          <source>If freezeTableName is true, sequelize will not try to alter the model name to get the table name. Otherwise, the model name will be pluralized</source>
          <target state="translated">Если freezeTableName верно,sequelize не будет пытаться изменить имя модели,чтобы получить имя таблицы.В противном случае,имя модели будет множественным.</target>
        </trans-unit>
        <trans-unit id="674d7115644f88b378cc58e55b691d817654dfdd" translate="yes" xml:space="preserve">
          <source>If hooks is true then beforeSync, afterSync, beforeBulkSync, afterBulkSync hooks will be called</source>
          <target state="translated">Если крюки верны,то доSync,послеSync,доBulkSync,послеBulkSync крюки будут называться</target>
        </trans-unit>
        <trans-unit id="2e6f9f406f5bd815e7f824d0bfb0ffc5524dc505" translate="yes" xml:space="preserve">
          <source>If key is given and a field or virtual getter is present for the key it will call that getter - else it will return the value for key.</source>
          <target state="translated">Если ключ выдан и для ключа присутствует поле или виртуальный геттер,то он вызовет этот геттер-иначе вернется значение для ключа.</target>
        </trans-unit>
        <trans-unit id="128a3eaafb2aa713f5d89656e1b713c3a3e56e43" translate="yes" xml:space="preserve">
          <source>If no key is given, returns all values of the instance, also invoking virtual getters.</source>
          <target state="translated">Если ключ не задан,возвращает все значения экземпляра,также вызывая виртуальные геттеры.</target>
        </trans-unit>
        <trans-unit id="894bd939fc9fbd940725facf4300464356fb6a66" translate="yes" xml:space="preserve">
          <source>If no transaction is passed in the &lt;code&gt;options&lt;/code&gt; object, a new transaction will be created internally, to prevent the race condition where a matching row is created by another connection after the find but before the insert call. However, it is not always possible to handle this case in SQLite, specifically if one transaction inserts and another tries to select before the first one has committed. In this case, an instance of sequelize. TimeoutError will be thrown instead. If a transaction is created, a savepoint will be created instead, and any unique constraint violation will be handled internally.</source>
          <target state="translated">Если в объекте &lt;code&gt;options&lt;/code&gt; не передается транзакция , новая транзакция будет создана внутри, чтобы предотвратить состояние гонки, когда соответствующая строка создается другим соединением после поиска, но до вызова вставки. Однако не всегда возможно обработать этот случай в SQLite, особенно если одна транзакция вставляет, а другая пытается выбрать до того, как первая будет зафиксирована. В этом случае экземпляр sequelize. Вместо этого будет выброшено TimeoutError. Если транзакция создана, вместо нее будет создана точка сохранения, и любое нарушение уникального ограничения будет обрабатываться внутри.</target>
        </trans-unit>
        <trans-unit id="55f7b072e47da9d3a76ee479789dd9f0b9a7718b" translate="yes" xml:space="preserve">
          <source>If set is called with an object, it will loop over the object, and call set recursively for each key, value pair. If you set raw to true, the underlying dataValues will either be set directly to the object passed, or used to extend dataValues, if dataValues already contain values.</source>
          <target state="translated">Если set вызывается вместе с объектом,то он зациклится на объекте,и вызовет set рекурсивно для каждой клавиши,пары значений.Если вы установите raw в true,то базовые dataValues будут либо устанавливаться непосредственно на переданный объект,либо использоваться для расширения dataValues,если dataValues уже содержат значения.</target>
        </trans-unit>
        <trans-unit id="391fbbeca7f5b84a6e11a9f54c2e0f1487c1d4cc" translate="yes" xml:space="preserve">
          <source>If set to true, destroy will SELECT all records matching the where parameter and will execute before / after destroy hooks on each row</source>
          <target state="translated">Если установлено значение true,то уничтожение будет SELECT (ВЫБРАТИТЬ все записи,соответствующие параметру &quot;где&quot;)и будет выполняться до/после уничтожения крючков в каждой строке</target>
        </trans-unit>
        <trans-unit id="06b008b34268e778c426cab5ae74a85c1075bda2" translate="yes" xml:space="preserve">
          <source>If set to true, dialects that support it will use TRUNCATE instead of DELETE FROM. If a table is truncated the where and limit options are ignored</source>
          <target state="translated">Если установлено значение true,диалекты,поддерживающие его,будут использовать TRUNCATE вместо DELETE FROM.Если таблица усечена,параметры &quot;где&quot; и &quot;лимит&quot; игнорируются.</target>
        </trans-unit>
        <trans-unit id="38d8c40738b16274aefd629da92a6bb29ab47eb3" translate="yes" xml:space="preserve">
          <source>If set to true, field and virtual setters will be ignored</source>
          <target state="translated">Если установлено значение true,полевые и виртуальные сеттеры будут проигнорированы.</target>
        </trans-unit>
        <trans-unit id="27b3827a991183e8f28bbcc85806f70fa71c8f62" translate="yes" xml:space="preserve">
          <source>If set to true, included instances will be returned as plain objects</source>
          <target state="translated">Если установлено значение true,включенные экземпляры будут возвращены как обычные объекты.</target>
        </trans-unit>
        <trans-unit id="eb40b80fd32cf8e71525ff0fe2f8efca5a8f93fe" translate="yes" xml:space="preserve">
          <source>If set to true, paranoid models will actually be deleted</source>
          <target state="translated">Если установлено в true,параноидальные модели будут на самом деле удалены.</target>
        </trans-unit>
        <trans-unit id="a720a3ae5cb54b9f1a92c2a8683add3f1fa36c95" translate="yes" xml:space="preserve">
          <source>If set to true, restore will find all records within the where parameter and will execute before / after bulkRestore hooks on each row</source>
          <target state="translated">Если установлено в true,то восстановление найдет все записи в параметре where и выполнит до/после bulkRestore hooks в каждой строке</target>
        </trans-unit>
        <trans-unit id="c3f750e72324e6657c8b56d788253264d692f468" translate="yes" xml:space="preserve">
          <source>If set to true, values will ignore field and virtual setters.</source>
          <target state="translated">При установке значения в true,значения будут игнорировать поле и виртуальные сеттеры.</target>
        </trans-unit>
        <trans-unit id="2a225688455376882530e8dba312211d2bcbc470" translate="yes" xml:space="preserve">
          <source>If set, sequelize will map the attribute name to a different name in the database</source>
          <target state="translated">Если установлено,секвелизация сопоставит имя атрибута с другим именем в базе данных.</target>
        </trans-unit>
        <trans-unit id="cc207bb584dc6def0a25ec33cd2870eeed91a21b" translate="yes" xml:space="preserve">
          <source>If specified, load the dialect library from this path. For example, if you want to use pg.js instead of pg when connecting to a pg database, you should specify '/path/to/pg.js' here</source>
          <target state="translated">Если указано,загрузите библиотеку диалектов из этого пути.Например,если вы хотите использовать pg.js вместо pg при подключении к базе данных pg,вы должны указать здесь '/path/to/pg.js'.</target>
        </trans-unit>
        <trans-unit id="5220457eb8ff7b1a3c9c11e68260aadf24c052ae" translate="yes" xml:space="preserve">
          <source>If specified, use this dialect library. For example, if you want to use pg.js instead of pg when connecting to a pg database, you should specify 'require(&quot;pg.js&quot;)' here</source>
          <target state="translated">Если указано,используйте эту библиотеку диалектов.Например,если вы хотите использовать pg.js вместо pg при подключении к базе данных pg,вы должны указать здесь 'require(&quot;pg.js&quot;)'.</target>
        </trans-unit>
        <trans-unit id="1dae209bc98d06b2e47281691116b5fbe149490d" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;paranoid&lt;/code&gt; options is true, the object will not be deleted, instead the &lt;code&gt;deletedAt&lt;/code&gt; column will be set to the current timestamp. To force the deletion, you can pass &lt;code&gt;force: true&lt;/code&gt; to the destroy call:</source>
          <target state="translated">Если &lt;code&gt;paranoid&lt;/code&gt; параметры истинны, объект не будет удален, вместо этого в столбце &lt;code&gt;deletedAt&lt;/code&gt; будет установлена ​​текущая отметка времени. Для принудительного удаления вы можете передать &lt;code&gt;force: true&lt;/code&gt; вызову destroy:</target>
        </trans-unit>
        <trans-unit id="89216aed70fb8c41aa23d73029989645c25f0d2e" translate="yes" xml:space="preserve">
          <source>If the hook has been called in the process of a transacted operation, this makes sure that your dependent read/write is a part of that same transaction. If the hook is not transacted, you have simply specified &lt;code&gt;{ transaction: null }&lt;/code&gt; and can expect the default behaviour.</source>
          <target state="translated">Если ловушка была вызвана в процессе транзакционной операции, это гарантирует, что ваше зависимое чтение / запись является частью той же транзакции. Если ловушка не выполняется, вы просто указали &lt;code&gt;{ transaction: null }&lt;/code&gt; и можете ожидать поведения по умолчанию.</target>
        </trans-unit>
        <trans-unit id="2755694b8eb30539d0dbf98759fe01c4187fb45f" translate="yes" xml:space="preserve">
          <source>If this column references another table, provide it here as a Model, or a string</source>
          <target state="translated">Если в этой колонке содержится ссылка на другую таблицу,предоставьте ее здесь в виде модели,или строки</target>
        </trans-unit>
        <trans-unit id="1c2890cf339691d4d47faf2398abe6e1b023205e" translate="yes" xml:space="preserve">
          <source>If true a unique key will be generated from the foreign keys used (might want to turn this off and create specific unique keys when using scopes)</source>
          <target state="translated">Если переменная имеет значение true,уникальный ключ будет сгенерирован из использованных посторонних ключей (возможно,потребуется отключить эту функцию и создать определенные уникальные ключи при использовании диапазонов).</target>
        </trans-unit>
        <trans-unit id="2856a473591152d31ef4a0266e32a8671fc7732b" translate="yes" xml:space="preserve">
          <source>If true, append RETURNING &amp;lt;model columns&amp;gt; to get back all defined values; if an array of column names, append RETURNING &amp;lt;columns&amp;gt; to get back specific columns (Postgres only)</source>
          <target state="translated">Если истина, добавьте RETURNING &amp;lt;столбцы модели&amp;gt;, чтобы вернуть все определенные значения; если массив имен столбцов, добавьте RETURNING &amp;lt;columns&amp;gt;, чтобы вернуть определенные столбцы (только для Postgres)</target>
        </trans-unit>
        <trans-unit id="ac32e94080083f62fd15d534737523a9a47f0b0e" translate="yes" xml:space="preserve">
          <source>If true, combined with autoIncrement=true, will use Postgres &lt;code&gt;GENERATED BY DEFAULT AS IDENTITY&lt;/code&gt; instead of &lt;code&gt;SERIAL&lt;/code&gt;. Postgres 10+ only.</source>
          <target state="translated">Если true, в сочетании с autoIncrement = true будет использовать Postgres &lt;code&gt;GENERATED BY DEFAULT AS IDENTITY&lt;/code&gt; вместо &lt;code&gt;SERIAL&lt;/code&gt; . Только Postgres 10+.</target>
        </trans-unit>
        <trans-unit id="4df84c739c5fec04cd33156cf8d026bf97b1a13f" translate="yes" xml:space="preserve">
          <source>If true, converts to a right join if dialect support it. Ignored if &lt;code&gt;include.required&lt;/code&gt; is true.</source>
          <target state="translated">Если true, преобразуется в правильное соединение, если его поддерживает диалект. Игнорируется, если &lt;code&gt;include.required&lt;/code&gt; истинно.</target>
        </trans-unit>
        <trans-unit id="3e0dc1c538227d7485952dc6d28c4c1abd9d5955" translate="yes" xml:space="preserve">
          <source>If true, converts to an inner join, which means that the parent model will only be loaded if it has any matching children. True if &lt;code&gt;include.where&lt;/code&gt; is set, false otherwise.</source>
          <target state="translated">Если true, преобразуется во внутреннее соединение, что означает, что родительская модель будет загружена только в том случае, если у нее есть соответствующие дочерние элементы. Истинно, если установлен &lt;code&gt;include.where&lt;/code&gt; , в противном случае - false.</target>
        </trans-unit>
        <trans-unit id="81d2e26a6f45fb983320c358ee03e36d4177246b" translate="yes" xml:space="preserve">
          <source>If true, fetches back auto generated values (Postgres only)</source>
          <target state="translated">Если переменная имеет значение true,возвращает автоматически сгенерированные значения (только для Postgres).</target>
        </trans-unit>
        <trans-unit id="9493e0278e049ef4ff4652a3baff31d06e297e09" translate="yes" xml:space="preserve">
          <source>If true, only non-deleted records will be returned. If false, both deleted and non-deleted records will be returned. Only applies if &lt;code&gt;options.paranoid&lt;/code&gt; is true for the model.</source>
          <target state="translated">Если true, будут возвращены только не удаленные записи. Если false, будут возвращены как удаленные, так и не удаленные записи. Применяется только в том случае, если для модели &lt;code&gt;options.paranoid&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8ce8f96e01d05bf135e8ac150e4e97d603a39cd8" translate="yes" xml:space="preserve">
          <source>If true, only non-deleted records will be updated. If false, both deleted and non-deleted records will be updated. Only applies if &lt;code&gt;options.paranoid&lt;/code&gt; is true for the model.</source>
          <target state="translated">Если true, будут обновлены только не удаленные записи. Если false, будут обновлены как удаленные, так и не удаленные записи. Применяется только в том случае, если для модели &lt;code&gt;options.paranoid&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e6c3614407ad68627e43871b206c08231a35fcb2" translate="yes" xml:space="preserve">
          <source>If true, runs a separate query to fetch the associated instances, only supported for hasMany associations</source>
          <target state="translated">Если переменная имеет значение true,выполняется отдельный запрос для получения ассоциированных экземпляров,поддерживается только hasMany.</target>
        </trans-unit>
        <trans-unit id="647d7c653d76bc8224e8446161299293bf7a8229" translate="yes" xml:space="preserve">
          <source>If true, sequelize will not try to format the results of the query, or build an instance of a model from the result</source>
          <target state="translated">Если переменная имеет значение true,секвелизация не будет пытаться отформатировать результаты запроса или построить экземпляр модели из полученного результата</target>
        </trans-unit>
        <trans-unit id="0ba0bbc2d0ad37b59e2f4202a1fa65789943978b" translate="yes" xml:space="preserve">
          <source>If true, the column will get a unique constraint. If a string is provided, the column will be part of a composite unique index. If multiple columns have the same string, they will be part of the same unique index</source>
          <target state="translated">Если верно,колонка получит уникальное ограничение.Если строка задана,столбец будет частью составного уникального индекса.Если несколько столбцов имеют одну и ту же строку,то они будут частью одного и того же уникального индекса.</target>
        </trans-unit>
        <trans-unit id="beb79f16ad3fb0f8cdb6f793480ca423b3cb5429" translate="yes" xml:space="preserve">
          <source>If true, the updatedAt timestamp will not be updated.</source>
          <target state="translated">Если переменная имеет значение true,метка времени updateAt не будет обновлена.</target>
        </trans-unit>
        <trans-unit id="d05e957cd328c4b4ff8ea91a8a38cc0b12d2f924" translate="yes" xml:space="preserve">
          <source>If true, this attribute will be marked as primary key</source>
          <target state="translated">Если переменная имеет значение true,этот атрибут будет помечен как первичный ключ</target>
        </trans-unit>
        <trans-unit id="08f9a9c95786ae05c26d607345400a2e23ad1516" translate="yes" xml:space="preserve">
          <source>If true, this column will be set to auto increment</source>
          <target state="translated">Если переменная имеет значение true,в этой колонке будет установлен автоматический инкремент</target>
        </trans-unit>
        <trans-unit id="75c4ea047705366df87e56ce4937449851e86344" translate="yes" xml:space="preserve">
          <source>If true, transforms objects with &lt;code&gt;.&lt;/code&gt; separated property names into nested objects using &lt;a href=&quot;https://github.com/mickhansen/dottie.js&quot;&gt;dottie.js&lt;/a&gt;. For example { 'user.username': 'john' } becomes { user: { username: 'john' }}. When &lt;code&gt;nest&lt;/code&gt; is true, the query type is assumed to be &lt;code&gt;'SELECT'&lt;/code&gt;, unless otherwise specified</source>
          <target state="translated">Если true, преобразует объекты с помощью &lt;code&gt;.&lt;/code&gt; разделить имена свойств на вложенные объекты с помощью &lt;a href=&quot;https://github.com/mickhansen/dottie.js&quot;&gt;dottie.js&lt;/a&gt; . Например, {'user.username': 'john'} становится {user: {username: 'john'}}. Когда &lt;code&gt;nest&lt;/code&gt; имеет значение true, предполагается, что тип запроса - &lt;code&gt;'SELECT'&lt;/code&gt; , если не указано иное.</target>
        </trans-unit>
        <trans-unit id="32198f81d975b55d40ec70c7e2308553a94edcba" translate="yes" xml:space="preserve">
          <source>If validation fails, the promise is rejected with an array-like &lt;a href=&quot;http://bluebirdjs.com/docs/api/aggregateerror.html&quot;&gt;AggregateError&lt;/a&gt;</source>
          <target state="translated">Если проверка не удалась, обещание отклоняется с помощью массива &lt;a href=&quot;http://bluebirdjs.com/docs/api/aggregateerror.html&quot;&gt;AggregateError&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0186aab835641bad03f7589f88e576215349c709" translate="yes" xml:space="preserve">
          <source>If we had not included the transaction option in our call to &lt;code&gt;User.update&lt;/code&gt; in the preceding code, no change would have occurred, since our newly created user does not exist in the database until the pending transaction has been committed.</source>
          <target state="translated">Если бы мы не включили опцию транзакции в наш вызов &lt;code&gt;User.update&lt;/code&gt; в предыдущем коде, никаких изменений не произошло бы, так как наш вновь созданный пользователь не существует в базе данных до тех пор, пока ожидающая транзакция не будет зафиксирована.</target>
        </trans-unit>
        <trans-unit id="bb6b5c50fe4ab3f465e27baa8bc48b315568f529" translate="yes" xml:space="preserve">
          <source>If you are accepting values directly from the user, it might be beneficial to limit the columns that you want to actually insert.&lt;code&gt;bulkCreate()&lt;/code&gt;accepts an options object as the second parameter. The object can have a &lt;code&gt;fields&lt;/code&gt; parameter, (an array) to let it know which fields you want to build explicitly</source>
          <target state="translated">Если вы принимаете значения напрямую от пользователя, может быть полезно ограничить количество столбцов, которые вы действительно хотите вставить. &lt;code&gt;bulkCreate()&lt;/code&gt; принимает объект параметров в качестве второго параметра. Объект может иметь параметр &lt;code&gt;fields&lt;/code&gt; (массив), чтобы он знал, какие поля вы хотите создать явно.</target>
        </trans-unit>
        <trans-unit id="5ac8d819fedae82d2ebf0ab77182ee9f429b9d81" translate="yes" xml:space="preserve">
          <source>If you are running a type of query where you don't need the metadata, for example a &lt;code&gt;SELECT&lt;/code&gt; query, you can pass in a query type to make sequelize format the results:</source>
          <target state="translated">Если вы выполняете тип запроса, в котором вам не нужны метаданные, например запрос &lt;code&gt;SELECT&lt;/code&gt; , вы можете передать тип запроса, чтобы форматировать результаты для продолжения:</target>
        </trans-unit>
        <trans-unit id="c6462f72311ba7a8cddf624ea0257e29162d1f7f" translate="yes" xml:space="preserve">
          <source>If you are working with the PostgreSQL TIMESTAMP WITHOUT TIME ZONE and you need to parse it to a different timezone, please use the pg library's own parser:</source>
          <target state="translated">Если вы работаете с программой PostgreSQL TIMESTAMP БЕЗ ЗОНЫ ВРЕМЕНИ,и вам необходимо разобрать ее в другом часовом поясе,пожалуйста,воспользуйтесь собственным парсером библиотеки pg:</target>
        </trans-unit>
        <trans-unit id="74ddcd65a25eb03b0ad2ef462e8d2c98a3998a61" translate="yes" xml:space="preserve">
          <source>If you do not want timestamps on your models, only want some timestamps, or you are working with an existing database where the columns are named something else, jump straight on to &lt;a href=&quot;models-definition#configuration&quot;&gt;configuration&lt;/a&gt; to see how to do that.</source>
          <target state="translated">Если вам не нужны временные метки на ваших моделях, нужны только некоторые временные метки, или вы работаете с существующей базой данных, в которой столбцы названы как-то иначе, сразу переходите к &lt;a href=&quot;models-definition#configuration&quot;&gt;настройке,&lt;/a&gt; чтобы узнать, как это сделать.</target>
        </trans-unit>
        <trans-unit id="f3c5e7d03c6a36a4f0cced22fb56e3a7206de7ed" translate="yes" xml:space="preserve">
          <source>If you have &lt;a href=&quot;https://github.com/Jeff-Lewis/cls-hooked&quot;&gt;CLS&lt;/a&gt; enabled, the transaction will automatically be passed to any query that runs within the callback</source>
          <target state="translated">Если у вас включен &lt;a href=&quot;https://github.com/Jeff-Lewis/cls-hooked&quot;&gt;CLS&lt;/a&gt; , транзакция будет автоматически передана любому запросу, который выполняется в обратном вызове.</target>
        </trans-unit>
        <trans-unit id="89ecba0f6c4969c1946f16a7277505b83b58a142" translate="yes" xml:space="preserve">
          <source>If you have any general settings that apply to all replicas you do not need to provide them for each instance. In the code above, database name and port is propagated to all replicas. The same will happen for user and password, if you leave them out for any of the replicas. Each replica has the following options:&lt;code&gt;host&lt;/code&gt;,&lt;code&gt;port&lt;/code&gt;,&lt;code&gt;username&lt;/code&gt;,&lt;code&gt;password&lt;/code&gt;,&lt;code&gt;database&lt;/code&gt;.</source>
          <target state="translated">Если у вас есть какие-либо общие настройки, применимые ко всем репликам, вам не нужно указывать их для каждого экземпляра. В приведенном выше коде имя и порт базы данных распространяются на все реплики. То же самое произойдет с пользователем и паролем, если вы не укажете их ни для одной из реплик. Каждая реплика имеет следующие параметры: &lt;code&gt;host&lt;/code&gt; , &lt;code&gt;port&lt;/code&gt; , &lt;code&gt;username&lt;/code&gt; , &lt;code&gt;password&lt;/code&gt; , &lt;code&gt;database&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9bb5e89572ab05d67a9192d69c8e80c0b0d84ee4" translate="yes" xml:space="preserve">
          <source>If you have soft-deleted an instance of a model with &lt;code&gt;paranoid: true&lt;/code&gt;, and would like to undo the deletion, use the &lt;code&gt;restore&lt;/code&gt; method:</source>
          <target state="translated">Если вы мягко удалили экземпляр модели с &lt;code&gt;paranoid: true&lt;/code&gt; и хотите отменить удаление, используйте метод &lt;code&gt;restore&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="83a275a19fc7524ebcb47eee01b5247c06418a43" translate="yes" xml:space="preserve">
          <source>If you know that a model will always use the same alias in associations, you can provide it when creating the model</source>
          <target state="translated">Если вы знаете,что модель всегда будет использовать один и тот же псевдоним в ассоциациях,вы можете предоставить его при создании модели</target>
        </trans-unit>
        <trans-unit id="d0d51269897d4509e5bc63cdb1763b5e6f2abee2" translate="yes" xml:space="preserve">
          <source>If you log an instance you will notice, that there is a lot of additional stuff. In order to hide such stuff and reduce it to the very interesting information, you can use the&lt;code&gt;get&lt;/code&gt;-attribute. Calling it with the option &lt;code&gt;plain&lt;/code&gt; = true will only return the values of an instance.</source>
          <target state="translated">Если вы зарегистрируете экземпляр, вы заметите, что есть много дополнительных вещей. Чтобы скрыть такие вещи и свести их к очень интересной информации, вы можете использовать атрибут &lt;code&gt;get&lt;/code&gt; . Вызов его с параметром &lt;code&gt;plain&lt;/code&gt; = true вернет только значения экземпляра.</target>
        </trans-unit>
        <trans-unit id="6b08bb3d2e947f978268c076db082fbb034c017e" translate="yes" xml:space="preserve">
          <source>If you need to get your instance in sync, you can use the method&lt;code&gt;reload&lt;/code&gt;. It will fetch the current data from the database and overwrite the attributes of the model on which the method has been called on.</source>
          <target state="translated">Если вам нужно синхронизировать свой экземпляр, вы можете использовать метод &lt;code&gt;reload&lt;/code&gt; . Он получит текущие данные из базы данных и перезапишет атрибуты модели, для которой был вызван метод.</target>
        </trans-unit>
        <trans-unit id="2916bd0b55b8aca641a06d58426ff56557b254b3" translate="yes" xml:space="preserve">
          <source>If you only need some of the attributes from the join table, you can provide an array with the attributes you want:</source>
          <target state="translated">Если вам нужны только некоторые из атрибутов таблицы соединений,вы можете предоставить массив с нужными вам атрибутами:</target>
        </trans-unit>
        <trans-unit id="fa84e598877d14dc3cb73bc586151be45d2ecb1a" translate="yes" xml:space="preserve">
          <source>If you provide an &lt;code&gt;include&lt;/code&gt; option, the number of matching associations will be counted instead.</source>
          <target state="translated">Если вы предоставите опцию &lt;code&gt;include&lt;/code&gt; , вместо этого будет подсчитано количество совпадающих ассоциаций.</target>
        </trans-unit>
        <trans-unit id="d863b772f59c7c1fea122e1663917c43efb011ee" translate="yes" xml:space="preserve">
          <source>If you use &lt;code&gt;Model.bulkCreate(...)&lt;/code&gt; with the &lt;code&gt;updateOnDuplicate&lt;/code&gt; option, changes made in the hook to fields that aren't given in the &lt;code&gt;updateOnDuplicate&lt;/code&gt; array will not be persisted to the database. However it is possible to change the updateOnDuplicate option inside the hook if this is what you want.</source>
          <target state="translated">Если вы используете &lt;code&gt;Model.bulkCreate(...)&lt;/code&gt; с опцией &lt;code&gt;updateOnDuplicate&lt;/code&gt; , изменения, внесенные в ловушку для полей, которые не указаны в массиве &lt;code&gt;updateOnDuplicate&lt;/code&gt; , не будут сохранены в базе данных. Однако можно изменить параметр updateOnDuplicate внутри ловушки, если это то, что вы хотите.</target>
        </trans-unit>
        <trans-unit id="afab7da99be65b4a2073f953b17af81dc02a3ed5" translate="yes" xml:space="preserve">
          <source>If you want Sequelize to automatically create the table (or modify it as needed) according to your model definition, you can use the &lt;code&gt;sync&lt;/code&gt; method, as follows:</source>
          <target state="translated">Если вы хотите, чтобы Sequelize автоматически создавал таблицу (или при необходимости изменял ее) в соответствии с определением вашей модели, вы можете использовать метод &lt;code&gt;sync&lt;/code&gt; следующим образом:</target>
        </trans-unit>
        <trans-unit id="f75ef969d5f06d081d766c60d1dd21fc30d0d354" translate="yes" xml:space="preserve">
          <source>If you want additional attributes in your join table, you can define a model for the join table in sequelize, before you define the association, and then tell sequelize that it should use that model for joining, instead of creating a new one:</source>
          <target state="translated">Если вам нужны дополнительные атрибуты в таблице соединений,вы можете определить модель для таблицы соединений в секвелизации,прежде чем определять ассоциацию,а затем сказать секвелизации,что она должна использовать эту модель для соединения,вместо того,чтобы создавать новую:</target>
        </trans-unit>
        <trans-unit id="7cb72ec6577efe47bd8b75930fe054e841bde6bc" translate="yes" xml:space="preserve">
          <source>If you want sequelize to handle timestamps, but only want some of them, or want your timestamps to be called something else, you can override each column individually:</source>
          <target state="translated">Если вы хотите,чтобы сиквелизация обрабатывала временные метки,но только некоторые из них,или хотите,чтобы ваши временные метки назывались чем-то другим,вы можете переопределить каждый столбец по отдельности:</target>
        </trans-unit>
        <trans-unit id="b777ec494ddce543c16902d51c471905b16fa9a5" translate="yes" xml:space="preserve">
          <source>If you want to apply another scope alongside the default scope, pass the key &lt;code&gt;defaultScope&lt;/code&gt; to &lt;code&gt;.scope&lt;/code&gt;:</source>
          <target state="translated">Если вы хотите применить другую область &lt;code&gt;defaultScope&lt;/code&gt; области по умолчанию, передайте ключ defaultScope в &lt;code&gt;.scope&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="0e3d2491ffbe91ae6541c30645933c5644c07ab6" translate="yes" xml:space="preserve">
          <source>If you want to create a belongs to many relationship that does not use the default primary key some setup work is required. You must set the &lt;code&gt;sourceKey&lt;/code&gt; (optionally &lt;code&gt;targetKey&lt;/code&gt;) appropriately for the two ends of the belongs to many. Further you must also ensure you have appropriate indexes created on your relationships. For example:</source>
          <target state="translated">Если вы хотите создать отношение &amp;laquo;принадлежит многим&amp;raquo;, в котором не используется первичный ключ по умолчанию, потребуется выполнить некоторые настройки. Вы должны установить &lt;code&gt;sourceKey&lt;/code&gt; (необязательно &lt;code&gt;targetKey&lt;/code&gt; ) соответствующим образом для двух концов, принадлежащих многим. Кроме того, вы должны также убедиться, что у вас есть соответствующие индексы, созданные для ваших отношений. Например:</target>
        </trans-unit>
        <trans-unit id="f61f98f630678b685e1f3828dff3238a64205ed5" translate="yes" xml:space="preserve">
          <source>If you want to create a shortcut method to a scope on an associated model, you can pass the scoped model to the association. Consider a shortcut to get all deleted posts for a user:</source>
          <target state="translated">Если вы хотите создать метод быстрого доступа к области видимости на ассоциированной модели,вы можете передать область видимости в ассоциацию.Рассмотрим ярлык,чтобы получить все удаленные сообщения для пользователя:</target>
        </trans-unit>
        <trans-unit id="3b08f9c79138d7fcde3ec61eeae485a38887f673" translate="yes" xml:space="preserve">
          <source>If you want to emit hooks for each individual record, along with the bulk hooks you can pass &lt;code&gt;individualHooks: true&lt;/code&gt; to the call.</source>
          <target state="translated">Если вы хотите создать перехватчики для каждой отдельной записи, наряду с массовыми перехватчиками, вы можете передать вызову &lt;code&gt;individualHooks: true&lt;/code&gt; перехватчики : true .</target>
        </trans-unit>
        <trans-unit id="3b540c12693f5dbf831dc4cc9ca6c1eee425fd4d" translate="yes" xml:space="preserve">
          <source>If you want to modify these, you can pass pool as an options when instantiating Sequelize, as shown above.</source>
          <target state="translated">Если вы хотите изменить их,вы можете передать пул в качестве опций при инициализации Sequelize,как показано выше.</target>
        </trans-unit>
        <trans-unit id="32c8896a0675e31aae1b24c2ac3e8559745e143a" translate="yes" xml:space="preserve">
          <source>If you want to set several target instances, but with different attributes you have to set the attributes on the instance, using a property with the name of the through model:</source>
          <target state="translated">Если вы хотите установить несколько целевых экземпляров,но с разными атрибутами,вам нужно установить атрибуты на экземпляре,используя свойство с именем сквозной модели:</target>
        </trans-unit>
        <trans-unit id="1ef93ea1c2614431873c694ec0744cd661b60763" translate="yes" xml:space="preserve">
          <source>If you wish to undo a specific seed</source>
          <target state="translated">Если вы хотите отменить определенное семя</target>
        </trans-unit>
        <trans-unit id="af863edfd5d71d3f8a26804bb152ee2c2da87ad3" translate="yes" xml:space="preserve">
          <source>If you wish to undo all seeds</source>
          <target state="translated">Если вы хотите уничтожить все семена</target>
        </trans-unit>
        <trans-unit id="c9da777accf0b16f64be8bca9d27fc688c0fd0ba" translate="yes" xml:space="preserve">
          <source>If you wish to undo most recent seed</source>
          <target state="translated">Если вы хотите отменить последнее семя</target>
        </trans-unit>
        <trans-unit id="90e2d3d4a47e5a21011e831e9e97b42a42afde35" translate="yes" xml:space="preserve">
          <source>If you're connecting to the database from a single process, you should create only one Sequelize instance. Sequelize will set up a connection pool on initialization. This connection pool can be configured through the constructor's &lt;code&gt;options&lt;/code&gt; parameter (using &lt;code&gt;options.pool&lt;/code&gt;), as is shown in the following example:</source>
          <target state="translated">Если вы подключаетесь к базе данных из одного процесса, вам следует создать только один экземпляр Sequelize. Sequelize создаст пул соединений при инициализации. Этот пул соединений можно настроить с помощью параметра конструктора &lt;code&gt;options&lt;/code&gt; (с помощью &lt;code&gt;options.pool&lt;/code&gt; ), как показано в следующем примере:</target>
        </trans-unit>
        <trans-unit id="6291ffc47760cc842fcd3a2e455f4f99cfb8ed05" translate="yes" xml:space="preserve">
          <source>If you're using SQLite, you should use the following instead:</source>
          <target state="translated">Если вы используете SQLite,то вместо этого следует использовать следующее:</target>
        </trans-unit>
        <trans-unit id="a343e00321955b7beffbdeeb13a0fcb432790e92" translate="yes" xml:space="preserve">
          <source>If your association is of type &lt;code&gt;n:m&lt;/code&gt;, you may be interested in firing hooks on the through model when using the &lt;code&gt;remove&lt;/code&gt; call. Internally, sequelize is using &lt;code&gt;Model.destroy&lt;/code&gt; resulting in calling the &lt;code&gt;bulkDestroy&lt;/code&gt; instead of the &lt;code&gt;before/afterDestroy&lt;/code&gt; hooks on each through instance.</source>
          <target state="translated">Если ваша ассоциация имеет тип &lt;code&gt;n:m&lt;/code&gt; , вас может заинтересовать запуск хуков на сквозной модели при использовании вызова &lt;code&gt;remove&lt;/code&gt; . Внутри sequelize использует &lt;code&gt;Model.destroy&lt;/code&gt; ,что приводит к вызову &lt;code&gt;bulkDestroy&lt;/code&gt; вместо хуков &lt;code&gt;before/afterDestroy&lt;/code&gt; для каждого сквозного экземпляра.</target>
        </trans-unit>
        <trans-unit id="833407a04cbfb532aa3ab0eb509e48f853b7c95d" translate="yes" xml:space="preserve">
          <source>Ignore duplicate values for primary keys? (not supported by MSSQL or Postgres &amp;lt; 9.5)</source>
          <target state="translated">Игнорировать повторяющиеся значения первичных ключей? (не поддерживается MSSQL или Postgres &amp;lt;9.5)</target>
        </trans-unit>
        <trans-unit id="d6fbc9d2bdd580e18ed0bc5805dc26db323d6f5f" translate="yes" xml:space="preserve">
          <source>Import</source>
          <target state="translated">Import</target>
        </trans-unit>
        <trans-unit id="b24a78bf1cbe20b658f9d8b812c79312cafb4997" translate="yes" xml:space="preserve">
          <source>Imported model, returned from cache if was already imported</source>
          <target state="translated">Импортированная модель,возвращенная из кэша,если она уже была импортирована.</target>
        </trans-unit>
        <trans-unit id="42ef05cf1be558b6ed91a4aeffccb1e4cfc64023" translate="yes" xml:space="preserve">
          <source>Imports a model defined in another file.</source>
          <target state="translated">Импортирует модель,определенную в другом файле.</target>
        </trans-unit>
        <trans-unit id="4561455fcd06ac6b99fef1b4ec3f086730adf57a" translate="yes" xml:space="preserve">
          <source>Imports a model defined in another file. Imported models are cached, so multiple calls to import with the same path will not load the file multiple times.</source>
          <target state="translated">Импортирует модель,определенную в другом файле.Импортируемые модели кэшируются,поэтому многократные вызовы импорта по одному и тому же пути не загружают файл несколько раз.</target>
        </trans-unit>
        <trans-unit id="fc449382c5d7c01bc4ed7505e87c889bf281a9c7" translate="yes" xml:space="preserve">
          <source>In PostGIS, the GeoJSON is parsed using the PostGIS function &lt;code&gt;ST_GeomFromGeoJSON&lt;/code&gt;. In MySQL it is parsed using the function &lt;code&gt;GeomFromText&lt;/code&gt;.</source>
          <target state="translated">В PostGIS GeoJSON анализируется с помощью функции PostGIS &lt;code&gt;ST_GeomFromGeoJSON&lt;/code&gt; . В MySQL он анализируется с помощью функции &lt;code&gt;GeomFromText&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fc15714391598577351e70a8f34d6238fcc77cd0" translate="yes" xml:space="preserve">
          <source>In Sequelize 1:1 relationship can be set using HasOne and BelongsTo. They are suitable for different scenarios. Lets study this difference using an example.</source>
          <target state="translated">Отношения Sequelize 1:1 могут быть установлены с помощью HasOne и BelongsTo.Они подходят для различных сценариев.Изучим эту разницу на примере.</target>
        </trans-unit>
        <trans-unit id="774bb87b46000c449a45f969a8e44a0806f3930d" translate="yes" xml:space="preserve">
          <source>In addition to the type mentioned above, integer, bigint, float and double also support unsigned and zerofill properties, which can be combined in any order: Be aware that this does not apply for PostgreSQL!</source>
          <target state="translated">В дополнение к вышеупомянутому типу,целочисленный,bigint,float и double также поддерживают свойства unsigned и zerofill,которые можно комбинировать в любом порядке:Имейте в виду,что это не относится к PostgreSQL!</target>
        </trans-unit>
        <trans-unit id="4af5be18db1ad6a1a653687156ac599be363d197" translate="yes" xml:space="preserve">
          <source>In addition to updating a single instance, you can also create, update, and delete multiple instances at once. The functions you are looking for are called</source>
          <target state="translated">Помимо обновления одного экземпляра,вы также можете создавать,обновлять и удалять несколько экземпляров одновременно.Функции,которые вы ищете,называются</target>
        </trans-unit>
        <trans-unit id="608a03c2fd0a19b5347676b81f1f4afcab08cd8a" translate="yes" xml:space="preserve">
          <source>In all cases the default foreign key can be overwritten with the &lt;code&gt;foreignKey&lt;/code&gt; option. When the foreign key option is used, Sequelize will use it as-is:</source>
          <target state="translated">Во всех случаях внешний ключ по умолчанию может быть перезаписан с &lt;code&gt;foreignKey&lt;/code&gt; параметра foreignKey . Когда используется параметр внешнего ключа, Sequelize будет использовать его как есть:</target>
        </trans-unit>
        <trans-unit id="95d034948d56093f4fd3a267db42db031dc3b1e0" translate="yes" xml:space="preserve">
          <source>In case you want to eager load soft deleted records you can do that by setting &lt;code&gt;include.paranoid&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">Если вы хотите загружать мягко удаленные записи, вы можете сделать это, установив для &lt;code&gt;include.paranoid&lt;/code&gt; значение &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="779cd792541f894ff6ecc7d1a09d6d1d76f26c8a" translate="yes" xml:space="preserve">
          <source>In cases where &lt;code&gt;as&lt;/code&gt; has been defined it will be used in place of the target model name.</source>
          <target state="translated">В тех случаях , когда , &lt;code&gt;as&lt;/code&gt; был определен он будет использоваться вместо имени целевой модели.</target>
        </trans-unit>
        <trans-unit id="a6e18661df62cf03ad1b8c1dfaac6d64093d6a9e" translate="yes" xml:space="preserve">
          <source>In cases where you don't need to access the metadata you can pass in a query type to tell sequelize how to format the results. For example, for a simple select query you could do:</source>
          <target state="translated">В случаях,когда нет необходимости в доступе к метаданным,можно передать тип запроса,чтобы указать последовательность,как отформатировать результаты.Например,для простого выделенного запроса вы можете сделать это:</target>
        </trans-unit>
        <trans-unit id="038d4951b867c417185b9b9bd15b882b51593a33" translate="yes" xml:space="preserve">
          <source>In either case &lt;code&gt;$$&lt;/code&gt; can be used to escape a literal &lt;code&gt;$&lt;/code&gt; sign.</source>
          <target state="translated">В любом случае &lt;code&gt;$$&lt;/code&gt; можно использовать для экранирования буквального знака &lt;code&gt;$&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fb22fea74b5a18e9648dd5f3f86b3ca5f73fef84" translate="yes" xml:space="preserve">
          <source>In last step you have create a seed file. It's still not committed to database. To do that we need to run a simple command.</source>
          <target state="translated">На последнем шаге вы создали файл посевного материала.Он все еще не привязан к базе данных.Для этого нужно выполнить простую команду.</target>
        </trans-unit>
        <trans-unit id="555e8f73359937df389576f9575dd78b1cbb04a0" translate="yes" xml:space="preserve">
          <source>In most case you won't need to access &lt;code&gt;namespace.get('transaction')&lt;/code&gt; directly, since all queries will automatically look for a transaction on the namespace:</source>
          <target state="translated">В большинстве случаев вам не потребуется напрямую обращаться к &lt;code&gt;namespace.get('transaction')&lt;/code&gt; , поскольку все запросы будут автоматически искать транзакцию в пространстве имен:</target>
        </trans-unit>
        <trans-unit id="0ffa4116223b3446ad2774ab40fc1bea5b948a6e" translate="yes" xml:space="preserve">
          <source>In order to alleviate that, we can pass &lt;code&gt;constraints: false&lt;/code&gt; to one of the associations:</source>
          <target state="translated">Чтобы облегчить это, мы можем передать &lt;code&gt;constraints: false&lt;/code&gt; одной из ассоциаций:</target>
        </trans-unit>
        <trans-unit id="cc83ae9f1cd3ae67a5a6e4bc972a56286990ab33" translate="yes" xml:space="preserve">
          <source>In order to avoid installation bloat for non TS users, you must install the following typing packages manually:</source>
          <target state="translated">Во избежание раздувания установки для пользователей,не являющихся пользователями TS,вы должны установить следующие пакеты вручную:</target>
        </trans-unit>
        <trans-unit id="d6af6a905ac1e115cb3fd844cc79b49b4cf1c9fa" translate="yes" xml:space="preserve">
          <source>In order to calculate the sum over a specific column of a table, you can use the &lt;code&gt;sum&lt;/code&gt; method.</source>
          <target state="translated">Чтобы рассчитать сумму по определенному столбцу таблицы, вы можете использовать метод &lt;code&gt;sum&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ba6b9538578934a76cde7cf0edf5896fb565e928" translate="yes" xml:space="preserve">
          <source>In order to create instances of defined classes just do as follows. You might recognize the syntax if you coded Ruby in the past. Using the &lt;code&gt;build&lt;/code&gt;-method will return an unsaved object, which you explicitly have to save.</source>
          <target state="translated">Чтобы создать экземпляры определенных классов, выполните следующие действия. Вы могли бы узнать синтаксис, если кодировали Ruby в прошлом. Использование метода &lt;code&gt;build&lt;/code&gt; вернет несохраненный объект, который вы явно должны сохранить.</target>
        </trans-unit>
        <trans-unit id="cf259232b5059754d2a1edf8525451aaa2799fec" translate="yes" xml:space="preserve">
          <source>In order to decrement values of an instance without running into concurrency issues, you may use &lt;code&gt;decrement&lt;/code&gt;.</source>
          <target state="translated">Чтобы уменьшить значения экземпляра, не сталкиваясь с проблемами параллелизма, вы можете использовать &lt;code&gt;decrement&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ca261ceb2eaf2ec423490304b525cf11f77c0268" translate="yes" xml:space="preserve">
          <source>In order to get Sequelize working nicely together with MySQL, you'll need to install&lt;code&gt;mysql2@^1.5.2&lt;/code&gt;or higher. Once that's done you can use it like this:</source>
          <target state="translated">Чтобы Sequelize хорошо работал вместе с MySQL, вам необходимо установить &lt;code&gt;mysql2@^1.5.2&lt;/code&gt; или выше. Как только это будет сделано, вы можете использовать его так:</target>
        </trans-unit>
        <trans-unit id="d50628c2ff499beb4c82368b3c407f6af0a795fe" translate="yes" xml:space="preserve">
          <source>In order to increment values of an instance without running into concurrency issues, you may use &lt;code&gt;increment&lt;/code&gt;.</source>
          <target state="translated">Чтобы увеличивать значения экземпляра, не сталкиваясь с проблемами параллелизма, вы можете использовать &lt;code&gt;increment&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="149d9edd63e09e594388c8c59f6205a3c7d42014" translate="yes" xml:space="preserve">
          <source>In production, you might want to consider using Migrations instead of calling &lt;code&gt;sync()&lt;/code&gt; in your code. Learn more in the &lt;a href=&quot;migrations&quot;&gt;Migrations&lt;/a&gt; guide.</source>
          <target state="translated">В производственной среде вы можете рассмотреть возможность использования миграции вместо вызова &lt;code&gt;sync()&lt;/code&gt; в коде. Узнайте больше в руководстве по &lt;a href=&quot;migrations&quot;&gt;миграции&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c86642a07888e6db73277af0c0eaac74cefb4e90" translate="yes" xml:space="preserve">
          <source>In the API reference below, add the name of the association to the method, e.g. for &lt;code&gt;User.belongsTo(Project)&lt;/code&gt; the getter will be &lt;code&gt;user.getProject()&lt;/code&gt;.</source>
          <target state="translated">В приведенной ниже ссылке API добавьте имя ассоциации к методу, например, для &lt;code&gt;User.belongsTo(Project)&lt;/code&gt; получателем будет &lt;code&gt;user.getProject()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cef52cd717c629d67a98f43d7d2a3b36773181e1" translate="yes" xml:space="preserve">
          <source>In the API reference below, add the name of the association to the method, e.g. for &lt;code&gt;User.belongsToMany(Project)&lt;/code&gt; the getter will be &lt;code&gt;user.getProjects()&lt;/code&gt;.</source>
          <target state="translated">В приведенной ниже справке по API добавьте имя ассоциации к методу, например, для &lt;code&gt;User.belongsToMany(Project)&lt;/code&gt; получателем будет &lt;code&gt;user.getProjects()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8b69de6ffb712491cc4ee70ce75bcc223197f419" translate="yes" xml:space="preserve">
          <source>In the API reference below, add the name of the association to the method, e.g. for &lt;code&gt;User.hasMany(Project)&lt;/code&gt; the getter will be &lt;code&gt;user.getProjects()&lt;/code&gt;. If the association is aliased, use the alias instead, e.g. &lt;code&gt;User.hasMany(Project, { as: 'jobs' })&lt;/code&gt; will be &lt;code&gt;user.getJobs()&lt;/code&gt;.</source>
          <target state="translated">В приведенной ниже справке по API добавьте имя ассоциации к методу, например, для &lt;code&gt;User.hasMany(Project)&lt;/code&gt; получателем будет &lt;code&gt;user.getProjects()&lt;/code&gt; . Если ассоциация является псевдонимом, используйте вместо &lt;code&gt;User.hasMany(Project, { as: 'jobs' })&lt;/code&gt; псевдоним, например User.hasMany (Project, {as: 'jobs'}) будет &lt;code&gt;user.getJobs()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b19bcc7ba2b18c1f0e8b5d37540fdada124f6fcc" translate="yes" xml:space="preserve">
          <source>In the API reference below, add the name of the association to the method, e.g. for &lt;code&gt;User.hasOne(Project)&lt;/code&gt; the getter will be &lt;code&gt;user.getProject()&lt;/code&gt;. This is almost the same as &lt;code&gt;belongsTo&lt;/code&gt; with one exception - The foreign key will be defined on the target model.</source>
          <target state="translated">В приведенной ниже справке по API добавьте имя ассоциации к методу, например, для &lt;code&gt;User.hasOne(Project)&lt;/code&gt; получателем будет &lt;code&gt;user.getProject()&lt;/code&gt; . Это почти то же самое, что и &lt;code&gt;belongsTo&lt;/code&gt; за одним исключением - внешний ключ будет определен в целевой модели.</target>
        </trans-unit>
        <trans-unit id="02da87402808a84b0a74230cb43a995fdad4b31d" translate="yes" xml:space="preserve">
          <source>In the case of a one-to-many relationship.</source>
          <target state="translated">В случае отношений &quot;один-ко-многим&quot;.</target>
        </trans-unit>
        <trans-unit id="5ae509345fb49ae661568fc4744caa7cb1b9656b" translate="yes" xml:space="preserve">
          <source>In the case of many-to-many joins, you are also able to sort by attributes in the through table.</source>
          <target state="translated">В случае много-многочисленных вступлений,вы также можете сортировать по атрибутам в сквозной таблице.</target>
        </trans-unit>
        <trans-unit id="317c1f0442c62b94ccf6c9fc8c9140770a26fb3e" translate="yes" xml:space="preserve">
          <source>In the example above we have specified that a user belongs to his profile picture. Conceptually, this might not make sense, but since we want to add the foreign key to the user model this is the way to do it.</source>
          <target state="translated">В приведенном выше примере мы указали,что пользователь принадлежит к его профильной картинке.Концептуально это может не иметь смысла,но так как мы хотим добавить посторонний ключ к пользовательской модели,то это и есть способ сделать это.</target>
        </trans-unit>
        <trans-unit id="ce0b3ed97c0ca3b3cfb4f4a1a06ba62b0ecd8f3c" translate="yes" xml:space="preserve">
          <source>In the examples above, the transaction is still manually passed, by passing &lt;code&gt;{ transaction: t }&lt;/code&gt; as the second argument. To automatically pass the transaction to all queries you must install the &lt;a href=&quot;https://github.com/Jeff-Lewis/cls-hooked&quot;&gt;cls-hooked&lt;/a&gt; (CLS) module and instantiate a namespace in your own code:</source>
          <target state="translated">В приведенных выше примерах транзакция по-прежнему передается вручную с передачей &lt;code&gt;{ transaction: t }&lt;/code&gt; в качестве второго аргумента. Чтобы автоматически передавать транзакцию всем запросам, вы должны установить модуль &lt;a href=&quot;https://github.com/Jeff-Lewis/cls-hooked&quot;&gt;cls-hooked&lt;/a&gt; (CLS) и создать экземпляр пространства имен в своем собственном коде:</target>
        </trans-unit>
        <trans-unit id="2a0dce9e1d09c8edbde67374cb81c49870755238" translate="yes" xml:space="preserve">
          <source>In this document we'll explore what finder methods can do:</source>
          <target state="translated">В этом документе мы рассмотрим,на что способны методы поиска:</target>
        </trans-unit>
        <trans-unit id="8ccb67d5f9158b5bfef3f61c07b44ac9e4f30373" translate="yes" xml:space="preserve">
          <source>In this example the name of the postgres range type is &lt;code&gt;newtype_range&lt;/code&gt; and the name of the underlying postgres datatype is &lt;code&gt;pg_new_type&lt;/code&gt;. The key of &lt;code&gt;subtypes&lt;/code&gt; and &lt;code&gt;castTypes&lt;/code&gt; is the key of the Sequelize datatype &lt;code&gt;DataTypes.NEWTYPE.key&lt;/code&gt;, in lower case.</source>
          <target state="translated">В этом примере имя типа диапазона postgres - &lt;code&gt;newtype_range&lt;/code&gt; , а имя базового типа данных postgres - &lt;code&gt;pg_new_type&lt;/code&gt; . Ключ &lt;code&gt;subtypes&lt;/code&gt; и &lt;code&gt;castTypes&lt;/code&gt; является ключом типа данных &lt;code&gt;DataTypes.NEWTYPE.key&lt;/code&gt; в нижнем регистре.</target>
        </trans-unit>
        <trans-unit id="f06d44df54aba38c2a1a5e52366770a4c55d5686" translate="yes" xml:space="preserve">
          <source>In this simple case an object fails validation if either latitude or longitude is given, but not both. If we try to build one with an out-of-range latitude and no longitude, &lt;code&gt;raging_bullock_arms.validate()&lt;/code&gt; might return</source>
          <target state="translated">В этом простом случае объект не проходит проверку, если заданы широта или долгота, но не оба сразу. Если мы попытаемся построить один с широтой вне диапазона и без долготы, &lt;code&gt;raging_bullock_arms.validate()&lt;/code&gt; может вернуть</target>
        </trans-unit>
        <trans-unit id="3851d0f94c7be9ec7c5ead977d92fb894f0d89fb" translate="yes" xml:space="preserve">
          <source>In this tutorial you will learn to make a simple setup of Sequelize to learn the basics.</source>
          <target state="translated">В этом уроке вы научитесь делать простую настройку Sequelize для изучения основ.</target>
        </trans-unit>
        <trans-unit id="4f5430a6a9d01363455824822c75737cf9c8f435" translate="yes" xml:space="preserve">
          <source>Include all also supports nested loading:</source>
          <target state="translated">Включает в себя все также поддерживает вложенную загрузку:</target>
        </trans-unit>
        <trans-unit id="ee22d111d4c8367bcfece43e25265c1b1b970179" translate="yes" xml:space="preserve">
          <source>Include options. See &lt;code&gt;find&lt;/code&gt; for details</source>
          <target state="translated">Включите варианты. См &lt;code&gt;find&lt;/code&gt; подробную информацию</target>
        </trans-unit>
        <trans-unit id="f4eea4e4d711cc1ecb5cda0e5dbfb9571c247ac3" translate="yes" xml:space="preserve">
          <source>Includes are merged recursively based on the models being included. This is a very powerful merge, added on v5, and is better understood with an example.</source>
          <target state="translated">Включенные данные рекурсивно объединяются на основе включенных моделей.Это очень мощное слияние,добавленное на v5,и лучше понятно на примере.</target>
        </trans-unit>
        <trans-unit id="027827ecd07b15695c7b030f1a2f763df4b19097" translate="yes" xml:space="preserve">
          <source>Including everything</source>
          <target state="translated">Включая все</target>
        </trans-unit>
        <trans-unit id="c00227cf95dc381c6c30d2e5768223f461bcb57c" translate="yes" xml:space="preserve">
          <source>Including soft deleted records</source>
          <target state="translated">Включая мягко удаленные записи</target>
        </trans-unit>
        <trans-unit id="54a09acba666b3479a71fa90551496293ff3b39c" translate="yes" xml:space="preserve">
          <source>Increment the value of one or more columns.</source>
          <target state="translated">Увеличьте значение одного или нескольких столбцов.</target>
        </trans-unit>
        <trans-unit id="787e3b938ace632df3c30ed406921fc264679317" translate="yes" xml:space="preserve">
          <source>Increment the value of one or more columns. This is done in the database, which means it does not use the values currently stored on the Instance. The increment is done using a</source>
          <target state="translated">Увеличьте значение одного или нескольких столбцов.Это делается в базе данных,что означает,что она не использует значения,хранящиеся в данный момент на Экземпляре.Инкремент выполняется с помощью</target>
        </trans-unit>
        <trans-unit id="76bdd22b4e3260f69cfe386f60459acba6de3c0d" translate="yes" xml:space="preserve">
          <source>Increment the value of one or more columns. This is done in the database, which means it does not use the values currently stored on the Instance. The increment is done using a &lt;code&gt;SET column = column + X WHERE foo = 'bar'&lt;/code&gt; query. To get the correct value after an increment into the Instance you should do a reload.</source>
          <target state="translated">Увеличьте значение одного или нескольких столбцов. Это делается в базе данных, что означает, что она не использует значения, хранящиеся в данный момент в экземпляре. Приращение выполняется с помощью запроса &lt;code&gt;SET column = column + X WHERE foo = 'bar'&lt;/code&gt; . Чтобы получить правильное значение после приращения к экземпляру, вы должны выполнить перезагрузку.</target>
        </trans-unit>
        <trans-unit id="a8ff72a665bb30731770e7705fe338083cf89b76" translate="yes" xml:space="preserve">
          <source>Incrementing</source>
          <target state="translated">Incrementing</target>
        </trans-unit>
        <trans-unit id="60049830fb2701db5de1c9bccb71b67fcbb23036" translate="yes" xml:space="preserve">
          <source>Index Hints</source>
          <target state="translated">Индексные советы</target>
        </trans-unit>
        <trans-unit id="15ed187841ecb74c7b628c9d39e663a146a445d1" translate="yes" xml:space="preserve">
          <source>Index hints &lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/index-hints.html&quot;&gt;override the default behavior of the mysql query optimizer&lt;/a&gt;.</source>
          <target state="translated">Подсказки индекса &lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/index-hints.html&quot;&gt;переопределяют поведение оптимизатора запросов mysql по умолчанию&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="27bf949a8c6bbf392cd9bbfb0a23ac87298c9ae6" translate="yes" xml:space="preserve">
          <source>Index name</source>
          <target state="translated">Наименование индекса</target>
        </trans-unit>
        <trans-unit id="2a9a9e601e879f8a25e6b88cecfaa9477d0b69b6" translate="yes" xml:space="preserve">
          <source>Index operator</source>
          <target state="translated">Оператор индекса</target>
        </trans-unit>
        <trans-unit id="3db988cf9ae171debdcc20214fccade20a6d5743" translate="yes" xml:space="preserve">
          <source>Index type. Only used by mysql. One of &lt;code&gt;UNIQUE&lt;/code&gt;, &lt;code&gt;FULLTEXT&lt;/code&gt; and &lt;code&gt;SPATIAL&lt;/code&gt;</source>
          <target state="translated">Тип индекса. Используется только mysql. Одно из &lt;code&gt;UNIQUE&lt;/code&gt; , &lt;code&gt;FULLTEXT&lt;/code&gt; и &lt;code&gt;SPATIAL&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cbd5e44bf0af97c76997bc5bf5b67484d7bd41fd" translate="yes" xml:space="preserve">
          <source>IndexHints</source>
          <target state="translated">IndexHints</target>
        </trans-unit>
        <trans-unit id="f642ee196088372ea886186c6c617515599afd3f" translate="yes" xml:space="preserve">
          <source>Indexes</source>
          <target state="translated">Indexes</target>
        </trans-unit>
        <trans-unit id="d546d086737ecd71ea685f7ecca5e406efe04475" translate="yes" xml:space="preserve">
          <source>Indirect Subclass:</source>
          <target state="translated">Косвенный подкласс:</target>
        </trans-unit>
        <trans-unit id="5f86be890f5fca505337bd96fadab61d81d1721f" translate="yes" xml:space="preserve">
          <source>Inherited Summary</source>
          <target state="translated">Унаследованное резюме</target>
        </trans-unit>
        <trans-unit id="31f1c8a556d0112856c008a3ad8749f41bf60b3f" translate="yes" xml:space="preserve">
          <source>Initialize a model, representing a table in the DB, with attributes and options.</source>
          <target state="translated">Инициализируйте модель,представляющую собой таблицу в БД,с атрибутами и опциями.</target>
        </trans-unit>
        <trans-unit id="34082efdebc41766317697316140da8f26c3e107" translate="yes" xml:space="preserve">
          <source>Insert multiple records into a table</source>
          <target state="translated">Вставить несколько записей в таблицу</target>
        </trans-unit>
        <trans-unit id="7ec8753d3a44c87c9473adfa6c44b60942d04fe3" translate="yes" xml:space="preserve">
          <source>Insert or update a single row.</source>
          <target state="translated">Вставьте или обновите один ряд.</target>
        </trans-unit>
        <trans-unit id="2dd5c9df09dccb9c155c03e0ece1aeed6a35cf5c" translate="yes" xml:space="preserve">
          <source>Insert or update a single row. An update will be executed if a row which matches the supplied values on either the primary key or a unique key is found. Note that the unique index must be defined in your sequelize model and not just in the table. Otherwise you may experience a unique constraint violation, because sequelize fails to identify the row that should be updated.</source>
          <target state="translated">Вставьте или обновите один ряд.Обновление будет выполнено,если найдена строка,которая соответствует заданным значениям либо на первичном ключе,либо на уникальном.Обратите внимание,что уникальный индекс должен быть определен в вашей модели секвелизации,а не только в таблице.В противном случае вы можете столкнуться с нарушением уникального ограничения,так как секвелизация не сможет определить строку,которая должна быть обновлена.</target>
        </trans-unit>
        <trans-unit id="0fcf41de510c5775db6e05c056c7c1d5562270b3" translate="yes" xml:space="preserve">
          <source>Insert several rows and return all columns (Postgres only):</source>
          <target state="translated">Вставьте несколько строк и верните все столбцы (только для Postgres):</target>
        </trans-unit>
        <trans-unit id="82c27a49773b27db4a4892eb51537165bf561a05" translate="yes" xml:space="preserve">
          <source>Insert several rows and return specific columns (Postgres only):</source>
          <target state="translated">Вставьте несколько строк и верните определенные столбцы (только для Postgres):</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Installation</target>
        </trans-unit>
        <trans-unit id="e38432618ce4d39079fc324e614d4d92a2815160" translate="yes" xml:space="preserve">
          <source>Installing</source>
          <target state="translated">Installing</target>
        </trans-unit>
        <trans-unit id="738e880dd4e789ec957d300caa68fee228a78956" translate="yes" xml:space="preserve">
          <source>Installing CLI</source>
          <target state="translated">Установка CLI</target>
        </trans-unit>
        <trans-unit id="ccb890bc332682567d34290c45bd65a654e962bd" translate="yes" xml:space="preserve">
          <source>Instance build options</source>
          <target state="translated">Экземпляры построения</target>
        </trans-unit>
        <trans-unit id="5ac629af8667053ca02646726c3c988282dc7f26" translate="yes" xml:space="preserve">
          <source>Instance hooks</source>
          <target state="translated">Экземплярские крючки</target>
        </trans-unit>
        <trans-unit id="274ad4dd86f2d3421e19dbc845f0539216d205f2" translate="yes" xml:space="preserve">
          <source>InstanceError</source>
          <target state="translated">InstanceError</target>
        </trans-unit>
        <trans-unit id="86d67413e7f102d37a19a41e92518fd07b196a5a" translate="yes" xml:space="preserve">
          <source>Instances</source>
          <target state="translated">Instances</target>
        </trans-unit>
        <trans-unit id="9e8467d590d4be1587eaf02bbcf552bcc1c6e813" translate="yes" xml:space="preserve">
          <source>Instantiate sequelize with name of database, username and password.</source>
          <target state="translated">Фактически секвелизация с именем базы данных,именем пользователя и паролем.</target>
        </trans-unit>
        <trans-unit id="b3094ee388cfb121e08aa8acc192a2cdfc0b8210" translate="yes" xml:space="preserve">
          <source>Instead of calling &lt;code&gt;sync()&lt;/code&gt; for every model, you can call &lt;code&gt;sequelize.sync()&lt;/code&gt; which will automatically sync all models.</source>
          <target state="translated">Вместо вызова &lt;code&gt;sync()&lt;/code&gt; для каждой модели вы можете вызвать &lt;code&gt;sequelize.sync()&lt;/code&gt; который автоматически синхронизирует все модели.</target>
        </trans-unit>
        <trans-unit id="9edcffff4461c9083fbff857f8dcee0f0769cbd4" translate="yes" xml:space="preserve">
          <source>Integer</source>
          <target state="translated">Integer</target>
        </trans-unit>
        <trans-unit id="490af473232b6a93643f272bee98388cd223e9fd" translate="yes" xml:space="preserve">
          <source>Internal Transactions</source>
          <target state="translated">Внутренние операции</target>
        </trans-unit>
        <trans-unit id="3d3960679eb413b74946e3c8863bed548577df5d" translate="yes" xml:space="preserve">
          <source>Internally, &lt;code&gt;sequelize.define&lt;/code&gt; calls &lt;code&gt;Model.init&lt;/code&gt;.</source>
          <target state="translated">Внутри &lt;code&gt;sequelize.define&lt;/code&gt; вызывает &lt;code&gt;Model.init&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4a26b8650a9de522981bcafa08f85067a7ddceb6" translate="yes" xml:space="preserve">
          <source>InvalidConnectionError</source>
          <target state="translated">InvalidConnectionError</target>
        </trans-unit>
        <trans-unit id="9211e9fa56459ab7c08f8f8f8b73301a55b7ccfe" translate="yes" xml:space="preserve">
          <source>Is this a new record</source>
          <target state="translated">Это новый рекорд</target>
        </trans-unit>
        <trans-unit id="afe7a6e84bced131db798b6f4a5218b8ba604521" translate="yes" xml:space="preserve">
          <source>Is this binary?</source>
          <target state="translated">Это двоичная система?</target>
        </trans-unit>
        <trans-unit id="6930c839f5926a5dbc3973abed70a968ebe27fcd" translate="yes" xml:space="preserve">
          <source>Is this new record</source>
          <target state="translated">Это новый рекорд</target>
        </trans-unit>
        <trans-unit id="ff65e83635da6a16fc4326dabfbf055783a3b67f" translate="yes" xml:space="preserve">
          <source>Is unsigned?</source>
          <target state="translated">Без подписи?</target>
        </trans-unit>
        <trans-unit id="e43b3654cb7e64fdddd41aa99284538c43372f9f" translate="yes" xml:space="preserve">
          <source>Is zero filled?</source>
          <target state="translated">Ноль заполнен?</target>
        </trans-unit>
        <trans-unit id="bc950c72cafdb1b72d875b5f0116396b3dcf31bd" translate="yes" xml:space="preserve">
          <source>Isolation levels</source>
          <target state="translated">уровни изоляции</target>
        </trans-unit>
        <trans-unit id="ceb55c4968b36fcfbb8bfa38dd67ef748266db4a" translate="yes" xml:space="preserve">
          <source>Isolation levels can be set per-transaction by passing &lt;code&gt;options.isolationLevel&lt;/code&gt; to &lt;code&gt;sequelize.transaction&lt;/code&gt;.</source>
          <target state="translated">Уровни изоляции можно установить для каждой транзакции, передав &lt;code&gt;options.isolationLevel&lt;/code&gt; в &lt;code&gt;sequelize.transaction&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7de7da7cce1fe9bf748f458bb4ef7c345ecf4b72" translate="yes" xml:space="preserve">
          <source>Isolation levels can be set per-transaction by passing &lt;code&gt;options.isolationLevel&lt;/code&gt; to &lt;code&gt;sequelize.transaction&lt;/code&gt;. Sequelize uses the default isolation level of the database, you can override this by passing &lt;code&gt;options.isolationLevel&lt;/code&gt; in Sequelize constructor options.</source>
          <target state="translated">Уровни изоляции можно установить для каждой транзакции, передав &lt;code&gt;options.isolationLevel&lt;/code&gt; в &lt;code&gt;sequelize.transaction&lt;/code&gt; . Sequelize использует уровень изоляции базы данных по умолчанию, вы можете переопределить это, передав &lt;code&gt;options.isolationLevel&lt;/code&gt; в параметрах конструктора Sequelize.</target>
        </trans-unit>
        <trans-unit id="8c4c047702785b929a273515b1a82e520030e139" translate="yes" xml:space="preserve">
          <source>It is also possible to define which attributes can be set via the create method. This can be especially very handy if you create database entries based on a form which can be filled by a user. Using that would for example allow you to restrict the &lt;code&gt;User&lt;/code&gt; model to set only a username and an address but not an admin flag:</source>
          <target state="translated">Также можно определить, какие атрибуты могут быть установлены с помощью метода create. Это может быть особенно удобно, если вы создаете записи в базе данных на основе формы, которую может заполнить пользователь. Использование этого, например, позволит вам ограничить модель &lt;code&gt;User&lt;/code&gt; , чтобы установить только имя пользователя и адрес, но не флаг администратора:</target>
        </trans-unit>
        <trans-unit id="458150e56a3d316de3d7363070d164f7fb22c292" translate="yes" xml:space="preserve">
          <source>It is also possible to include scoped models in a scope definition. This allows you to avoid duplicating &lt;code&gt;include&lt;/code&gt;, &lt;code&gt;attributes&lt;/code&gt; or &lt;code&gt;where&lt;/code&gt; definitions. Using the above example, and invoking the &lt;code&gt;active&lt;/code&gt; scope on the included User model (rather than specifying the condition directly in that include object):</source>
          <target state="translated">Также возможно включить модели с заданной областью действия в определение области действия. Это позволяет избежать дублирования &lt;code&gt;include&lt;/code&gt; , &lt;code&gt;attributes&lt;/code&gt; или определений &lt;code&gt;where&lt;/code&gt; . Используя приведенный выше пример и вызывая &lt;code&gt;active&lt;/code&gt; область в включенной модели User (вместо того, чтобы указывать условие непосредственно в этом включаемом объекте):</target>
        </trans-unit>
        <trans-unit id="ddee74f90f8a0f9498567c187f111536a9989a76" translate="yes" xml:space="preserve">
          <source>It is possible to define 'object-property' getters and setter functions on your models, these can be used both for 'protecting' properties that map to database fields and for defining 'pseudo' properties.</source>
          <target state="translated">На ваших моделях можно определять &quot;объект-свойства&quot; геттеры и функции сеттера,которые могут быть использованы как для &quot;защиты&quot; свойств,сопоставляемых с полями базы данных,так и для определения &quot;псевдо-свойств&quot;.</target>
        </trans-unit>
        <trans-unit id="74a71f5d94391e3a53655bde1f0b03cfbba3c3e0" translate="yes" xml:space="preserve">
          <source>It is very important to recognize that sequelize may make use of transactions internally for certain operations such as &lt;code&gt;Model.findOrCreate&lt;/code&gt;. If your hook functions execute read or write operations that rely on the object's presence in the database, or modify the object's stored values like the example in the preceding section, you should always specify &lt;code&gt;{ transaction: options.transaction }&lt;/code&gt;.</source>
          <target state="translated">Очень важно понимать, что sequelize может использовать внутренние транзакции для определенных операций, таких как &lt;code&gt;Model.findOrCreate&lt;/code&gt; . Если ваши функции-перехватчики выполняют операции чтения или записи, которые зависят от присутствия объекта в базе данных, или изменяют сохраненные значения объекта, как в примере в предыдущем разделе, вы всегда должны указывать &lt;code&gt;{ transaction: options.transaction }&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1f7799cf6357af0cca9dd406aa99d1e281329530" translate="yes" xml:space="preserve">
          <source>It support includes. Only the includes that are marked as &lt;code&gt;required&lt;/code&gt; will be added to the count part:</source>
          <target state="translated">В него входит поддержка. В счетную часть будут добавлены только те включения, которые отмечены как &lt;code&gt;required&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="01152ec68278f8c0093062867b00c1b97313670b" translate="yes" xml:space="preserve">
          <source>It's also possible to define which attributes should be saved when calling &lt;code&gt;save&lt;/code&gt;, by passing an array of column names. This is useful when you set attributes based on a previously defined object. E.g. if you get the values of an object via a form of a web app. Furthermore this is used internally for &lt;code&gt;update&lt;/code&gt;. This is how it looks like:</source>
          <target state="translated">Также можно определить, какие атрибуты следует сохранять при вызове &lt;code&gt;save&lt;/code&gt; , передав массив имен столбцов. Это полезно, когда вы устанавливаете атрибуты на основе ранее определенного объекта. Например, если вы получаете значения объекта через форму веб-приложения. Кроме того, это используется внутри для &lt;code&gt;update&lt;/code&gt; . Вот как это выглядит:</target>
        </trans-unit>
        <trans-unit id="186c4dfd035ca2147d8122391c159c1157303e72" translate="yes" xml:space="preserve">
          <source>It's also possible to generate complex AND/OR conditions by nesting sets of &lt;code&gt;or&lt;/code&gt; and &lt;code&gt;and&lt;/code&gt;&lt;code&gt;Operators&lt;/code&gt;.</source>
          <target state="translated">Также возможно сгенерировать сложные условия И / ИЛИ, вложив наборы &lt;code&gt;Operators&lt;/code&gt; &lt;code&gt;or&lt;/code&gt; and &lt;code&gt;and&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ad75613877702555cf316afa651fd68d8ed8a686" translate="yes" xml:space="preserve">
          <source>It's possible to do complex where queries with multiple levels of nested AND, OR and NOT conditions. In order to do that you can use &lt;code&gt;or&lt;/code&gt;, &lt;code&gt;and&lt;/code&gt; or &lt;code&gt;not&lt;/code&gt;&lt;code&gt;Operators&lt;/code&gt;:</source>
          <target state="translated">Можно выполнять сложные запросы с несколькими уровнями вложенных условий И, ИЛИ и НЕ. Для того , чтобы сделать это вы можете использовать &lt;code&gt;or&lt;/code&gt; , &lt;code&gt;and&lt;/code&gt; или &lt;code&gt;not&lt;/code&gt; &lt;code&gt;Operators&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="33734b6b70c0dff634a36534b531693609e70498" translate="yes" xml:space="preserve">
          <source>Its only supported with PostgreSQL.</source>
          <target state="translated">Поддерживается только PostgreSQL.</target>
        </trans-unit>
        <trans-unit id="031a4e76f0b39d0df073d934da5fc48da8d737e5" translate="yes" xml:space="preserve">
          <source>JSON</source>
          <target state="translated">JSON</target>
        </trans-unit>
        <trans-unit id="6a54171212861b9d4356ac5edc1e9c7b38716888" translate="yes" xml:space="preserve">
          <source>JSONB</source>
          <target state="translated">JSONB</target>
        </trans-unit>
        <trans-unit id="8f235f39a2853ef490db9713b7ebbf2012bdcd6a" translate="yes" xml:space="preserve">
          <source>JSONB can be queried in three different ways.</source>
          <target state="translated">JSONB можно опрашивать тремя различными способами.</target>
        </trans-unit>
        <trans-unit id="6b46dddcae84eab844147b41df08409aa05a20dc" translate="yes" xml:space="preserve">
          <source>JSONTYPE</source>
          <target state="translated">JSONTYPE</target>
        </trans-unit>
        <trans-unit id="b7bddeac6e43c3fc69422d0e6157627a2408995d" translate="yes" xml:space="preserve">
          <source>Just like you use Git / SVN to manage changes in your source code, you can use migrations to keep track of changes to the database. With migrations you can transfer your existing database into another state and vice versa: Those state transitions are saved in migration files, which describe how to get to the new state and how to revert the changes in order to get back to the old state.</source>
          <target state="translated">Подобно тому,как вы используете Git/SVN для управления изменениями в исходном коде,вы можете использовать миграции для отслеживания изменений в базе данных.С помощью миграций вы можете перевести существующую базу данных в другое состояние и наоборот:эти переходы в состояние сохраняются в файлах миграции,в которых описывается,как перейти в новое состояние и как вернуть изменения,чтобы вернуться в старое состояние.</target>
        </trans-unit>
        <trans-unit id="7a005acb56700e9225239e9495e645f1d56cb1fd" translate="yes" xml:space="preserve">
          <source>KEY_SHARE</source>
          <target state="translated">KEY_SHARE</target>
        </trans-unit>
        <trans-unit id="1aad7db5cd6d6405bc949aa858fe80dadf3e960b" translate="yes" xml:space="preserve">
          <source>Keep in mind, the provided range value can &lt;a href=&quot;data-types#range-types&quot;&gt;define the bound inclusion/exclusion&lt;/a&gt; as well.</source>
          <target state="translated">Имейте в виду, что указанное значение диапазона может также &lt;a href=&quot;data-types#range-types&quot;&gt;определять граничное включение / исключение&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a251ad95f6b7bd7655523b67ea7799fe5cf895ed" translate="yes" xml:space="preserve">
          <source>Learn more in the &lt;a href=&quot;../class/lib/sequelize.js~sequelize#instance-constructor-constructor&quot;&gt;API Reference for the Sequelize constructor&lt;/a&gt;. If you're connecting to the database from multiple processes, you'll have to create one instance per process, but each instance should have a maximum connection pool size of such that the total maximum size is respected. For example, if you want a max connection pool size of 90 and you have three processes, the Sequelize instance of each process should have a max connection pool size of 30.</source>
          <target state="translated">Дополнительные сведения см. В &lt;a href=&quot;../class/lib/sequelize.js~sequelize#instance-constructor-constructor&quot;&gt;Справочнике по API для конструктора Sequelize&lt;/a&gt; . Если вы подключаетесь к базе данных из нескольких процессов, вам придется создать по одному экземпляру для каждого процесса, но каждый экземпляр должен иметь максимальный размер пула соединений, чтобы соблюдался общий максимальный размер. Например, если вам нужен максимальный размер пула соединений 90 и у вас есть три процесса, экземпляр Sequelize каждого процесса должен иметь максимальный размер пула соединений 30.</target>
        </trans-unit>
        <trans-unit id="485d34bd5489f8e0226bedab13b81d0bca93aff5" translate="yes" xml:space="preserve">
          <source>Let's assume we have an empty database with a &lt;code&gt;User&lt;/code&gt; model which has a &lt;code&gt;username&lt;/code&gt; and a &lt;code&gt;job&lt;/code&gt;.</source>
          <target state="translated">Предположим, у нас есть пустая база данных с моделью &lt;code&gt;User&lt;/code&gt; ,у которой есть &lt;code&gt;username&lt;/code&gt; и &lt;code&gt;job&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a2203a28193ce384212442ecbf1bb9f0fad5d8a3" translate="yes" xml:space="preserve">
          <source>Let's create a model named &lt;code&gt;User&lt;/code&gt;.</source>
          <target state="translated">Создадим модель с именем &lt;code&gt;User&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f35d6d8183466326bcc0a6d0a3f462695c8d381b" translate="yes" xml:space="preserve">
          <source>Let's create a seed file which will add a demo user to our &lt;code&gt;User&lt;/code&gt; table.</source>
          <target state="translated">Давайте создадим исходный файл, который добавит демо-пользователя в нашу таблицу &lt;code&gt;User&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="be20a5757d775035047e08bf42879daa6e2f59aa" translate="yes" xml:space="preserve">
          <source>Let's first begin with a basic concept that you will see used in most associations, &lt;strong&gt;source&lt;/strong&gt; and &lt;strong&gt;target&lt;/strong&gt; model. Suppose you are trying to add an association between two Models. Here we are adding a &lt;code&gt;hasOne&lt;/code&gt; association between &lt;code&gt;User&lt;/code&gt; and &lt;code&gt;Project&lt;/code&gt;.</source>
          <target state="translated">Давайте сначала начнем с базовой концепции, которая, как вы увидите, используется в большинстве ассоциаций, &lt;strong&gt;исходной&lt;/strong&gt; и &lt;strong&gt;целевой&lt;/strong&gt; модели. Предположим, вы пытаетесь добавить связь между двумя моделями. Здесь мы добавляем связь &lt;code&gt;hasOne&lt;/code&gt; между &lt;code&gt;User&lt;/code&gt; и &lt;code&gt;Project&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1c450eed0e9c2a25ffab9271fad2fadc6b27a9d2" translate="yes" xml:space="preserve">
          <source>Let's introduce the ability to associate a product with many tags. Setting up the models could look like:</source>
          <target state="translated">Давайте представим возможность ассоциировать продукт со многими метками.Настройка моделей может выглядеть так:</target>
        </trans-unit>
        <trans-unit id="87aac229dd1d4995475dbcc51641de5b2c4552f0" translate="yes" xml:space="preserve">
          <source>Let's modify last example to use &lt;code&gt;underscored&lt;/code&gt; option.</source>
          <target state="translated">Давайте изменим последний пример, чтобы использовать &lt;code&gt;underscored&lt;/code&gt; вариант.</target>
        </trans-unit>
        <trans-unit id="5a82db14e28117aaba1b3a12ce0a9553639d87b7" translate="yes" xml:space="preserve">
          <source>Let's say the name of the new datatype is &lt;code&gt;pg_new_type&lt;/code&gt; in the postgres database. That name has to be mapped to &lt;code&gt;DataTypes.NEWTYPE&lt;/code&gt;. Additionally, it is required to create a child postgres-specific datatype.</source>
          <target state="translated">Скажем, имя нового типа данных - &lt;code&gt;pg_new_type&lt;/code&gt; в базе данных postgres. Это имя должно быть сопоставлено с &lt;code&gt;DataTypes.NEWTYPE&lt;/code&gt; . Кроме того, необходимо создать дочерний тип данных для postgres.</target>
        </trans-unit>
        <trans-unit id="46dbb18d37841e79a9d96e647e55be1608250c26" translate="yes" xml:space="preserve">
          <source>Let's start with installing CLI, you can find instructions &lt;a href=&quot;https://github.com/sequelize/cli&quot;&gt;here&lt;/a&gt;. Most preferred way is installing locally like this</source>
          <target state="translated">Начнем с установки CLI, вы можете найти инструкции &lt;a href=&quot;https://github.com/sequelize/cli&quot;&gt;здесь&lt;/a&gt; . Наиболее предпочтительный способ - установка локально, как это</target>
        </trans-unit>
        <trans-unit id="3dc80430a2ae5ef7084165f4e5c699da1d9acc78" translate="yes" xml:space="preserve">
          <source>Library for MariaDB is &lt;code&gt;mariadb&lt;/code&gt;.</source>
          <target state="translated">Библиотека для MariaDB - &lt;code&gt;mariadb&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="58fd3b1b83cc7fc933d72fe934bdb6e534441281" translate="yes" xml:space="preserve">
          <source>Licensed under the MIT License.</source>
          <target state="translated">Лицензия MIT.</target>
        </trans-unit>
        <trans-unit id="c0f639fe70cb19d3a7d5bb33f35f4fcb35b0d6fb" translate="yes" xml:space="preserve">
          <source>Limit for result</source>
          <target state="translated">Предел результата</target>
        </trans-unit>
        <trans-unit id="1aeadbc7b1706711e989275655be9254c82690d6" translate="yes" xml:space="preserve">
          <source>Limit the joined rows, only supported with include.separate=true</source>
          <target state="translated">Ограничить объединенные строки,поддерживается только с помощью include.separate=true.</target>
        </trans-unit>
        <trans-unit id="c6fd3870c86e7422a0146e1e2a052437fb8e51e2" translate="yes" xml:space="preserve">
          <source>Lines</source>
          <target state="translated">Lines</target>
        </trans-unit>
        <trans-unit id="9dab3b0aa2150bf658272546827c1ef560b7cbe7" translate="yes" xml:space="preserve">
          <source>List of attributes to add index on</source>
          <target state="translated">Список атрибутов для добавления индекса</target>
        </trans-unit>
        <trans-unit id="3ce91f8ce5685aa3c7ae6bebf7959c99739d2884" translate="yes" xml:space="preserve">
          <source>List of declared variables. Each variable should be an object with string fields &lt;code&gt;type&lt;/code&gt; and &lt;code&gt;name&lt;/code&gt;, and optionally having a &lt;code&gt;default&lt;/code&gt; field as well.</source>
          <target state="translated">Список объявленных переменных. Каждая переменная должна быть объектом с &lt;code&gt;type&lt;/code&gt; и &lt;code&gt;name&lt;/code&gt; строкового поля , а также, необязательно, иметь поле по &lt;code&gt;default&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="075dd91e787bf6243a7752780ea0c8bba33ec184" translate="yes" xml:space="preserve">
          <source>List of objects (key/value pairs) to create instances from</source>
          <target state="translated">Список объектов (пар ключ/значение)для создания экземпляров из</target>
        </trans-unit>
        <trans-unit id="efd6defff3588a82427cedf6cb66687edafa5f0a" translate="yes" xml:space="preserve">
          <source>List of parameters declared for SQL function</source>
          <target state="translated">Список параметров,объявленных для функции SQL</target>
        </trans-unit>
        <trans-unit id="a01e2b9e9c9931427b664651a40032e3447516ac" translate="yes" xml:space="preserve">
          <source>List of records to insert</source>
          <target state="translated">Список записей для вставки</target>
        </trans-unit>
        <trans-unit id="756dc1b93051a84503f4ee0647cfc663c3af6b9d" translate="yes" xml:space="preserve">
          <source>List of table to skip</source>
          <target state="translated">Список таблиц для пропуска</target>
        </trans-unit>
        <trans-unit id="a516eb0d586f3d22305a538c09c709ee6782c824" translate="yes" xml:space="preserve">
          <source>Load further nested related models</source>
          <target state="translated">Загрузить дополнительные вложенные соответствующие модели</target>
        </trans-unit>
        <trans-unit id="3c9c5fc6308d5bcf9e048b826209d636266946b5" translate="yes" xml:space="preserve">
          <source>Lock the selected rows. Possible options are transaction.LOCK.UPDATE and transaction.LOCK.SHARE. Postgres also supports transaction.LOCK.KEY_SHARE, transaction.LOCK.NO_KEY_UPDATE and specific model locks with joins. See &lt;a href=&quot;../../transaction#lock&quot;&gt;transaction.LOCK for an example&lt;/a&gt;</source>
          <target state="translated">Заблокируйте выбранные строки. Возможные варианты: transaction.LOCK.UPDATE и transaction.LOCK.SHARE. Postgres также поддерживает transaction.LOCK.KEY_SHARE, transaction.LOCK.NO_KEY_UPDATE и определенные модели блокировок с объединениями. См. &lt;a href=&quot;../../transaction#lock&quot;&gt;Пример в transaction.LOCK.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="01175ae5bc13842f1a68f275d49e45971292d2c1" translate="yes" xml:space="preserve">
          <source>Locks</source>
          <target state="translated">Locks</target>
        </trans-unit>
        <trans-unit id="381f51fe7d2e48a40efecb0f6ec5b0e10560328f" translate="yes" xml:space="preserve">
          <source>MACADDR</source>
          <target state="translated">MACADDR</target>
        </trans-unit>
        <trans-unit id="fb533649ca2f9e73b11b6bb948adb363f958ac9f" translate="yes" xml:space="preserve">
          <source>MEDIUMINT</source>
          <target state="translated">MEDIUMINT</target>
        </trans-unit>
        <trans-unit id="5e10df029a02645d6284a04ec967bdb813352d80" translate="yes" xml:space="preserve">
          <source>MSSQL</source>
          <target state="translated">MSSQL</target>
        </trans-unit>
        <trans-unit id="d338a8206f4d51fb083279011e9504adb9b8bc21" translate="yes" xml:space="preserve">
          <source>MSSQL - Implemented as a single query using &lt;code&gt;MERGE&lt;/code&gt; and &lt;code&gt;WHEN (NOT) MATCHED THEN&lt;/code&gt;&lt;strong&gt;Note&lt;/strong&gt; that SQLite returns undefined for created, no matter if the row was created or updated. This is because SQLite always runs INSERT OR IGNORE + UPDATE, in a single query, so there is no way to know whether the row was inserted or not.</source>
          <target state="translated">MSSQL - реализован как единый запрос с использованием &lt;code&gt;MERGE&lt;/code&gt; и &lt;code&gt;WHEN (NOT) MATCHED THEN&lt;/code&gt; &lt;strong&gt;Обратите внимание,&lt;/strong&gt; что SQLite возвращает undefined для created, независимо от того, была ли строка создана или обновлена. Это связано с тем, что SQLite всегда запускает INSERT OR IGNORE + UPDATE в одном запросе, поэтому нет способа узнать, была ли вставлена ​​строка или нет.</target>
        </trans-unit>
        <trans-unit id="991df59282ae7659f4a3c3ddbd655d8dab601328" translate="yes" xml:space="preserve">
          <source>MSSQL does not have a JSON data type, however it does provide support for JSON stored as strings through certain functions since SQL Server 2016. Using these functions, you will be able to query the JSON stored in the string, but any returned values will need to be parsed seperately.</source>
          <target state="translated">MSSQL не имеет типа данных JSON,однако поддерживает JSON,хранящийся в виде строк через определенные функции,начиная с SQL Server 2016.Используя эти функции,вы сможете опрашивать JSON,хранящийся в строке,но любые возвращаемые значения нужно будет разбирать отдельно.</target>
        </trans-unit>
        <trans-unit id="a2b1fa2c3a6d1e1afc6275611ca02b5fdffb139c" translate="yes" xml:space="preserve">
          <source>Managed transaction (auto-callback)</source>
          <target state="translated">Управляемая транзакция (автообратный звонок)</target>
        </trans-unit>
        <trans-unit id="8ea330d8bd2304f1ff715165a6ab5db327917663" translate="yes" xml:space="preserve">
          <source>Managed transactions handle committing or rolling back the transaction automatically. You start a managed transaction by passing a callback to &lt;code&gt;sequelize.transaction&lt;/code&gt;.</source>
          <target state="translated">Управляемые транзакции автоматически обрабатывают фиксацию или откат транзакции. Вы запускаете управляемую транзакцию, передавая обратный вызов &lt;code&gt;sequelize.transaction&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0cc59cf8eacc13611e26eb5e7be4726fc40e2011" translate="yes" xml:space="preserve">
          <source>Manipulating the dataset with limit, offset, order and group</source>
          <target state="translated">Манипулирование набором данных с ограничением,смещением,порядком и группой</target>
        </trans-unit>
        <trans-unit id="4e836fdc2572ab23d5dc8c36bd613ac6b0f82d63" translate="yes" xml:space="preserve">
          <source>Manual</source>
          <target state="translated">Manual</target>
        </trans-unit>
        <trans-unit id="377bf4b05aa29004e36d9244e2d88732601654cd" translate="yes" xml:space="preserve">
          <source>Many-to-many association with a join table.</source>
          <target state="translated">Множество ассоциаций с объединенным столом.</target>
        </trans-unit>
        <trans-unit id="a2c278e4b750406933592c346d173c2e67747cad" translate="yes" xml:space="preserve">
          <source>Map returned fields to arbitrary names for &lt;code&gt;SELECT&lt;/code&gt; query type.</source>
          <target state="translated">Сопоставьте возвращаемые поля с произвольными именами для типа запроса &lt;code&gt;SELECT&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="be596405e95a78e6e3fd716d1f964da33dac24e3" translate="yes" xml:space="preserve">
          <source>Map returned fields to model's fields if &lt;code&gt;options.model&lt;/code&gt; or &lt;code&gt;options.instance&lt;/code&gt; is present. Mapping will occur before building the model instance.</source>
          <target state="translated">Сопоставьте возвращенные поля с полями модели, если присутствует &lt;code&gt;options.model&lt;/code&gt; или &lt;code&gt;options.instance&lt;/code&gt; . Сопоставление произойдет до построения экземпляра модели.</target>
        </trans-unit>
        <trans-unit id="7f00002bb6ad2eec19a19de8a03c7d6fad15adff" translate="yes" xml:space="preserve">
          <source>MariaDB</source>
          <target state="translated">MariaDB</target>
        </trans-unit>
        <trans-unit id="8f7e6ef50178ceaac3c27a6e48b1989cccb85ff6" translate="yes" xml:space="preserve">
          <source>Mark the include as duplicating, will prevent a subquery from being used.</source>
          <target state="translated">Отметьте включение как дублирующее,это предотвратит использование подзапросов.</target>
        </trans-unit>
        <trans-unit id="1da7a96c09b4e4634e58cd74016bd7905cd29f3a" translate="yes" xml:space="preserve">
          <source>Match a regex against the database name before syncing, a safety check for cases where force: true is used in tests but not live code</source>
          <target state="translated">Сопоставление регекса с именем базы данных перед синхронизацией,проверка безопасности для случаев,когда в тестах используется сила:true,но не живой код.</target>
        </trans-unit>
        <trans-unit id="47f4c6f36bdf82bb2ab12a74bce5359bd3e3baea" translate="yes" xml:space="preserve">
          <source>Maximum number of connection in pool</source>
          <target state="translated">Максимальное количество подключений в бассейне</target>
        </trans-unit>
        <trans-unit id="97738b59f60343e4146991bad8d071fcf74e0ab8" translate="yes" xml:space="preserve">
          <source>Member Summary</source>
          <target state="translated">Резюме члена</target>
        </trans-unit>
        <trans-unit id="40de0d4de887a374168bf79e72c7aa0fa4594d6e" translate="yes" xml:space="preserve">
          <source>Merging</source>
          <target state="translated">Merging</target>
        </trans-unit>
        <trans-unit id="5646c6f729482a25c89d910db627247645097c06" translate="yes" xml:space="preserve">
          <source>Merging includes</source>
          <target state="translated">Слияние включает в себя</target>
        </trans-unit>
        <trans-unit id="8102ea6074090f4681ab70e02ebe6ece740ec91c" translate="yes" xml:space="preserve">
          <source>Method Summary</source>
          <target state="translated">Резюме метода</target>
        </trans-unit>
        <trans-unit id="7ee71f3365c47f24bea17f31665feff788530ffb" translate="yes" xml:space="preserve">
          <source>Migration Skeleton</source>
          <target state="translated">Миграционный скелет</target>
        </trans-unit>
        <trans-unit id="c32d7ce630147bbc439f44b57c3dd404394c0d9b" translate="yes" xml:space="preserve">
          <source>Migration Storage</source>
          <target state="translated">Миграционное хранилище</target>
        </trans-unit>
        <trans-unit id="dca984afd74a0089c1d5a5816e4de2e8d46a60b5" translate="yes" xml:space="preserve">
          <source>Migrations</source>
          <target state="translated">Migrations</target>
        </trans-unit>
        <trans-unit id="fdaa1ef022ef7283a9b451dc1daff1a42f1e129d" translate="yes" xml:space="preserve">
          <source>Minimum number of connection in pool</source>
          <target state="translated">Минимальное количество подключений в бассейне</target>
        </trans-unit>
        <trans-unit id="5f2cbd107037ed23248e5058a7a64cd6bae05468" translate="yes" xml:space="preserve">
          <source>Miscellaneous</source>
          <target state="translated">Miscellaneous</target>
        </trans-unit>
        <trans-unit id="68c2cc7f0ceaa3e499ecb4db331feb4debbbcc23" translate="yes" xml:space="preserve">
          <source>Model</source>
          <target state="translated">Model</target>
        </trans-unit>
        <trans-unit id="4142158426158729ca79c5ce805fd286f210430c" translate="yes" xml:space="preserve">
          <source>Model definition</source>
          <target state="translated">Определение модели</target>
        </trans-unit>
        <trans-unit id="d5b42cbdc48b29ec85aa8da6533d3aa5c7e63a91" translate="yes" xml:space="preserve">
          <source>Model hooks</source>
          <target state="translated">Крючки для моделей</target>
        </trans-unit>
        <trans-unit id="0a75c07ee5b0146bfd4157f900acbbac80d86138" translate="yes" xml:space="preserve">
          <source>Model instances operate with the concept of a &lt;code&gt;dataValues&lt;/code&gt; property, which stores the actual values represented by the instance. By default, the values from dataValues can also be accessed directly from the Instance, that is:</source>
          <target state="translated">Экземпляры модели работают с концепцией свойства &lt;code&gt;dataValues&lt;/code&gt; , в котором хранятся фактические значения, представленные экземпляром. По умолчанию значения из dataValues ​​также могут быть доступны непосредственно из экземпляра, то есть:</target>
        </trans-unit>
        <trans-unit id="b86c2670dd4b42d8a914c0eec8b73c34afe4cef4" translate="yes" xml:space="preserve">
          <source>Model to upsert on</source>
          <target state="translated">Модель,на которую стоит обратить внимание</target>
        </trans-unit>
        <trans-unit id="a07e44c48da57fac1360b4b859e20027ab13a678" translate="yes" xml:space="preserve">
          <source>Model usage</source>
          <target state="translated">Использование модели</target>
        </trans-unit>
        <trans-unit id="a53b41efe74bb25e6882a6eee3070bdffdb51b7f" translate="yes" xml:space="preserve">
          <source>Model validations allow you to specify format/content/inheritance validations for each attribute of the model.</source>
          <target state="translated">Валидации модели позволяют задать валидацию формата/содержания/наследования для каждого атрибута модели.</target>
        </trans-unit>
        <trans-unit id="21ce518813b59ff7892d35ddffbbfb5e60400474" translate="yes" xml:space="preserve">
          <source>Model validator methods are called with the model object's context and are deemed to fail if they throw an error, otherwise pass. This is just the same as with custom field-specific validators.</source>
          <target state="translated">Методы валидатора модели вызываются с контекстом объекта модели и считаются неудачными,если они бросают ошибку,в противном случае передаются.Это то же самое,что и с пользовательскими полевыми валидаторами.</target>
        </trans-unit>
        <trans-unit id="a823acb606efcdb0eb853730193b3ca0d95a9686" translate="yes" xml:space="preserve">
          <source>Model#create for a full explanation of options</source>
          <target state="translated">Модель#создать для полного объяснения опций</target>
        </trans-unit>
        <trans-unit id="8af76ef4fdb319b9698a20f8340797dab906080c" translate="yes" xml:space="preserve">
          <source>Model#get</source>
          <target state="translated">Model#get</target>
        </trans-unit>
        <trans-unit id="3cb30668d05a4e893eb0a96404decd8e56821285" translate="yes" xml:space="preserve">
          <source>Model#reload</source>
          <target state="translated">Model#reload</target>
        </trans-unit>
        <trans-unit id="4f584a3efe16470d969227bf5c8fd863f8da7ead" translate="yes" xml:space="preserve">
          <source>Model#save</source>
          <target state="translated">Model#save</target>
        </trans-unit>
        <trans-unit id="4d5283314738ecf76503ebc98257bde975737cb3" translate="yes" xml:space="preserve">
          <source>Model#set</source>
          <target state="translated">Model#set</target>
        </trans-unit>
        <trans-unit id="7fcf673bb86044c610823a0d2fc30026edfb6398" translate="yes" xml:space="preserve">
          <source>Model#where</source>
          <target state="translated">Model#where</target>
        </trans-unit>
        <trans-unit id="9e763be04a0228a99af47fdea7072bbd2305daba" translate="yes" xml:space="preserve">
          <source>Model-wide validations</source>
          <target state="translated">Валидации по всей модели</target>
        </trans-unit>
        <trans-unit id="8253b756d3ad33e6e7017ccdafc1a90fc90f96c7" translate="yes" xml:space="preserve">
          <source>Model.belongsTo</source>
          <target state="translated">Model.belongsTo</target>
        </trans-unit>
        <trans-unit id="454a1355d18fe035a3d709bc71b45145b8aa70a6" translate="yes" xml:space="preserve">
          <source>Model.belongsToMany</source>
          <target state="translated">Model.belongsToMany</target>
        </trans-unit>
        <trans-unit id="338a4bdb9701251c42339f0107d0cab2dfc70bd6" translate="yes" xml:space="preserve">
          <source>Model.build</source>
          <target state="translated">Model.build</target>
        </trans-unit>
        <trans-unit id="e1b94c3211965ce0df3e43428bf03ab75c9411f6" translate="yes" xml:space="preserve">
          <source>Model.findAll</source>
          <target state="translated">Model.findAll</target>
        </trans-unit>
        <trans-unit id="e1b2d659c60c1fcfe515ae54f50c22008b1758d0" translate="yes" xml:space="preserve">
          <source>Model.hasMany</source>
          <target state="translated">Model.hasMany</target>
        </trans-unit>
        <trans-unit id="4c16d25a9fc250497c7ca38d6f46e1f59a466e24" translate="yes" xml:space="preserve">
          <source>Model.hasOne</source>
          <target state="translated">Model.hasOne</target>
        </trans-unit>
        <trans-unit id="fae0e3c371dd4093bef01bf73725ab76001c9cc8" translate="yes" xml:space="preserve">
          <source>Model.increment</source>
          <target state="translated">Model.increment</target>
        </trans-unit>
        <trans-unit id="098dd694d5c2ce27262982062cf5e8f57cabde98" translate="yes" xml:space="preserve">
          <source>Model.save</source>
          <target state="translated">Model.save</target>
        </trans-unit>
        <trans-unit id="fefb16c53c032c568ad0842061992d2b085291e3" translate="yes" xml:space="preserve">
          <source>Model.schema</source>
          <target state="translated">Model.schema</target>
        </trans-unit>
        <trans-unit id="c9a517d625d0bd2320f055ed68c71f3399c8a1e1" translate="yes" xml:space="preserve">
          <source>Modeling a table</source>
          <target state="translated">Моделирование таблицы</target>
        </trans-unit>
        <trans-unit id="b8ac15e7b4962a2e2baf204f84d2215049c4ac38" translate="yes" xml:space="preserve">
          <source>Models are stored here under the name given to &lt;code&gt;sequelize.define&lt;/code&gt;</source>
          <target state="translated">Модели хранятся здесь под именем, данным &lt;code&gt;sequelize.define&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cc9169ab2687ee0ff11fb74d9665fc408f0ddcdc" translate="yes" xml:space="preserve">
          <source>More examples, &lt;a href=&quot;https://sequelize.org/manual/tutorial/models-definition.html&quot;&gt;Model Definition&lt;/a&gt;</source>
          <target state="translated">Дополнительные примеры, &lt;a href=&quot;https://sequelize.org/manual/tutorial/models-definition.html&quot;&gt;определение модели&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b7e49c63d7a388fe61b0e185917e856c5555045a" translate="yes" xml:space="preserve">
          <source>More scopes, defined in the same way as defaultScope above. See &lt;code&gt;Model.scope&lt;/code&gt; for more information about how scopes are defined, and what you can do with them</source>
          <target state="translated">Дополнительные области, определенные так же, как defaultScope выше. См. &lt;code&gt;Model.scope&lt;/code&gt; для получения дополнительной информации о том, как определяются области и что вы можете с ними делать.</target>
        </trans-unit>
        <trans-unit id="06e96031e3182ce6001f4ff143c003c41585330f" translate="yes" xml:space="preserve">
          <source>Most likely the type you are trying to implement is already included in &lt;a href=&quot;data-types&quot;&gt;DataTypes&lt;/a&gt;. If a new datatype is not included, this manual will show how to write it yourself.</source>
          <target state="translated">Скорее всего, тип, который вы пытаетесь реализовать, уже включен в &lt;a href=&quot;data-types&quot;&gt;DataTypes&lt;/a&gt; . Если новый тип данных не включен, это руководство покажет, как написать его самостоятельно.</target>
        </trans-unit>
        <trans-unit id="deaa0c393a6613972aaccbf1fecfdad67aa21e88" translate="yes" xml:space="preserve">
          <source>MySQL</source>
          <target state="translated">MySQL</target>
        </trans-unit>
        <trans-unit id="d9d495ec80ad0df93c05d8abe97089135bb60400" translate="yes" xml:space="preserve">
          <source>MySQL - Implemented as a single query &lt;code&gt;INSERT values ON DUPLICATE KEY UPDATE values&lt;/code&gt;</source>
          <target state="translated">MySQL - реализован как один запрос &lt;code&gt;INSERT values ON DUPLICATE KEY UPDATE values&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cd408e0f9d0af499eda4bb5b3feec4a587a895de" translate="yes" xml:space="preserve">
          <source>NOEXPAND</source>
          <target state="translated">NOEXPAND</target>
        </trans-unit>
        <trans-unit id="75b8d58ed5ac16a53fb00f7e374f5a6e16d7f254" translate="yes" xml:space="preserve">
          <source>NOLOCK</source>
          <target state="translated">NOLOCK</target>
        </trans-unit>
        <trans-unit id="969e7d8dee132181523a501a068fec75bded3005" translate="yes" xml:space="preserve">
          <source>NOT</source>
          <target state="translated">NOT</target>
        </trans-unit>
        <trans-unit id="9841c4209305816a8e9adbf24362646952f05b27" translate="yes" xml:space="preserve">
          <source>NOW</source>
          <target state="translated">NOW</target>
        </trans-unit>
        <trans-unit id="a2af9a6115134a71b0d62f68e143c19efff1f954" translate="yes" xml:space="preserve">
          <source>NOWAIT</source>
          <target state="translated">NOWAIT</target>
        </trans-unit>
        <trans-unit id="b26f87d0c59f90fdc5143250b4f83e7b4def44dc" translate="yes" xml:space="preserve">
          <source>NO_KEY_UPDATE</source>
          <target state="translated">NO_KEY_UPDATE</target>
        </trans-unit>
        <trans-unit id="6c2496a022b02739f43ed430676315b0c3b34a08" translate="yes" xml:space="preserve">
          <source>NUMBER</source>
          <target state="translated">NUMBER</target>
        </trans-unit>
        <trans-unit id="42ead8566c2a2f546d0123a49496ab3f43750da0" translate="yes" xml:space="preserve">
          <source>NUMBER#constructor</source>
          <target state="translated">NUMBER#constructor</target>
        </trans-unit>
        <trans-unit id="709a23220f2c3d64d1e1d6d18c4d5280f8d82fca" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="translated">Name</target>
        </trans-unit>
        <trans-unit id="ed585ba39b11c2180b849eb53de424e3c71e081f" translate="yes" xml:space="preserve">
          <source>Name of SQL function to create</source>
          <target state="translated">Имя SQL функции для создания</target>
        </trans-unit>
        <trans-unit id="ec874e4030f9772c022ffc4fd75b709664407142" translate="yes" xml:space="preserve">
          <source>Name of SQL function to drop</source>
          <target state="translated">Имя SQL-функции,которую нужно сбросить</target>
        </trans-unit>
        <trans-unit id="1dc36a90ec6c0522dcf70c1022a4f52a8ebd611e" translate="yes" xml:space="preserve">
          <source>Name of table to create</source>
          <target state="translated">Название таблицы для создания</target>
        </trans-unit>
        <trans-unit id="b1fb57d5dc0386d03765076aea0e86c354422228" translate="yes" xml:space="preserve">
          <source>Name of the constraint. If not specified, sequelize automatically creates a named constraint based on constraint type, table &amp;amp; column names</source>
          <target state="translated">Имя ограничения. Если не указано, sequelize автоматически создает именованное ограничение на основе типа ограничения, имен таблиц и столбцов.</target>
        </trans-unit>
        <trans-unit id="4f9d1ae98e9da4b2bbe6a3af8fc9c757c82ce573" translate="yes" xml:space="preserve">
          <source>Name of the index. Default is &amp;lt;table&amp;gt;&lt;em&gt;&amp;lt;attr1&amp;gt;&lt;/em&gt;&amp;lt;attr2&amp;gt;</source>
          <target state="translated">Имя индекса. По умолчанию: &amp;lt;таблица&amp;gt; &lt;em&gt;&amp;lt;attr1&amp;gt;&lt;/em&gt; &amp;lt;attr2&amp;gt;</target>
        </trans-unit>
        <trans-unit id="2caed30fdd66bcf9c63c21b3cf8cfd9c614e4500" translate="yes" xml:space="preserve">
          <source>Name of the schema</source>
          <target state="translated">Название схемы</target>
        </trans-unit>
        <trans-unit id="83417c5bdb0fb8b5e66747ac85c9affcdf83a6c6" translate="yes" xml:space="preserve">
          <source>Naming strategy</source>
          <target state="translated">Стратегия наименования</target>
        </trans-unit>
        <trans-unit id="e3dc9c09a90c87b9a68571340476b7334d583546" translate="yes" xml:space="preserve">
          <source>Nested eager loading</source>
          <target state="translated">Вложенная срочная загрузка</target>
        </trans-unit>
        <trans-unit id="a04f6031a8e00febd6c589cf09c4d65ef201ad6b" translate="yes" xml:space="preserve">
          <source>Nested key</source>
          <target state="translated">Вложенный ключ</target>
        </trans-unit>
        <trans-unit id="fb2662973950c773f223cbb622d456ea8595339e" translate="yes" xml:space="preserve">
          <source>Nested object</source>
          <target state="translated">Вложенный объект</target>
        </trans-unit>
        <trans-unit id="03677879a39a6dfcf623a67df9dc3d5704326271" translate="yes" xml:space="preserve">
          <source>New column name</source>
          <target state="translated">Новое название колонки</target>
        </trans-unit>
        <trans-unit id="8708814fcaebc0970f0c7c817ceb87f8487aaf17" translate="yes" xml:space="preserve">
          <source>New name from table</source>
          <target state="translated">Новое имя из таблицы</target>
        </trans-unit>
        <trans-unit id="6201a9f7432baaca8091c6a78cc0f9fb26eaa3a1" translate="yes" xml:space="preserve">
          <source>New name of function</source>
          <target state="translated">Новое название функции</target>
        </trans-unit>
        <trans-unit id="ed47500954469451016c880a7f5051ccc16a64cf" translate="yes" xml:space="preserve">
          <source>Newly defined model</source>
          <target state="translated">Новая модель</target>
        </trans-unit>
        <trans-unit id="fb17233bc810f24085dbf005a9031819e384f852" translate="yes" xml:space="preserve">
          <source>Next thing: Loading of data with many-to-something associations!</source>
          <target state="translated">Следующее:Загрузка данных с многозначными ассоциациями!</target>
        </trans-unit>
        <trans-unit id="e16b1a945e5b22bb16b245f22dd7211090c45d44" translate="yes" xml:space="preserve">
          <source>Normally this is done on process exit, so you only need to call this method if you are creating multiple instances, and want to garbage collect some of them.</source>
          <target state="translated">Обычно это делается при выходе из процесса,поэтому вам нужно вызывать этот метод только в том случае,если вы создаете несколько экземпляров и хотите собрать мусор из некоторых из них.</target>
        </trans-unit>
        <trans-unit id="44df5fc237f6e69bd9d791f7eb38e4498268a792" translate="yes" xml:space="preserve">
          <source>Note for production</source>
          <target state="translated">Примечание для производства</target>
        </trans-unit>
        <trans-unit id="6c85945356462ad75525821c104b7dfcd213da7d" translate="yes" xml:space="preserve">
          <source>Note how &lt;code&gt;limit&lt;/code&gt; and &lt;code&gt;age&lt;/code&gt; are overwritten by &lt;code&gt;scope2&lt;/code&gt;, while &lt;code&gt;firstName&lt;/code&gt; is preserved. The &lt;code&gt;limit&lt;/code&gt;, &lt;code&gt;offset&lt;/code&gt;, &lt;code&gt;order&lt;/code&gt;, &lt;code&gt;paranoid&lt;/code&gt;, &lt;code&gt;lock&lt;/code&gt; and &lt;code&gt;raw&lt;/code&gt; fields are overwritten, while &lt;code&gt;where&lt;/code&gt; is shallowly merged (meaning that identical keys will be overwritten). The merge strategy for &lt;code&gt;include&lt;/code&gt; will be discussed later on.</source>
          <target state="translated">Обратите внимание, как &lt;code&gt;limit&lt;/code&gt; и &lt;code&gt;age&lt;/code&gt; перезаписываются &lt;code&gt;scope2&lt;/code&gt; , а &lt;code&gt;firstName&lt;/code&gt; сохраняется. &lt;code&gt;limit&lt;/code&gt; , &lt;code&gt;offset&lt;/code&gt; , &lt;code&gt;order&lt;/code&gt; , &lt;code&gt;paranoid&lt;/code&gt; , &lt;code&gt;lock&lt;/code&gt; и &lt;code&gt;raw&lt;/code&gt; поля перезаписаны, а &lt;code&gt;where&lt;/code&gt; находится неглубоко слито ( это означает , что одинаковые ключи будут перезаписаны). Стратегия слияния для &lt;code&gt;include&lt;/code&gt; будет обсуждена позже.</target>
        </trans-unit>
        <trans-unit id="ef9ad9b0ed9a592756067e7688004b19c87f4919" translate="yes" xml:space="preserve">
          <source>Note how we also specified &lt;code&gt;constraints: false&lt;/code&gt; for profile picture. This is because we add a foreign key from user to picture (profilePictureId), and from picture to user (userId). If we were to add foreign keys to both, it would create a cyclic dependency, and sequelize would not know which table to create first, since user depends on picture, and picture depends on user. These kinds of problems are detected by sequelize before the models are synced to the database, and you will get an error along the lines of &lt;code&gt;Error: Cyclic dependency found. 'users' is dependent of itself&lt;/code&gt;. If you encounter this, you should either disable some constraints, or rethink your associations completely.</source>
          <target state="translated">Обратите внимание, как мы также указали &lt;code&gt;constraints: false&lt;/code&gt; для изображения профиля. Это потому, что мы добавляем внешний ключ от пользователя к изображению (profilePictureId) и от изображения к пользователю (userId). Если бы мы добавили внешние ключи к обоим, это создало бы циклическую зависимость, и sequelize не знал бы, какую таблицу создать первой, поскольку пользователь зависит от изображения, а изображение зависит от пользователя. Подобные проблемы обнаруживаются с помощью sequelize до того, как модели будут синхронизированы с базой данных, и вы получите сообщение об ошибке в строке &lt;code&gt;Error: Cyclic dependency found. 'users' is dependent of itself&lt;/code&gt; . Если вы столкнулись с этим, вам следует либо отключить некоторые ограничения, либо полностью пересмотреть свои ассоциации.</target>
        </trans-unit>
        <trans-unit id="eb9144a05775de68ebca958a87e5360db80e40b3" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;attributes&lt;/code&gt; keys of multiple applied scopes are merged in such a way that &lt;code&gt;attributes.exclude&lt;/code&gt; are always preserved. This allows merging several scopes and never leaking sensitive fields in final scope.</source>
          <target state="translated">Обратите внимание, что ключи &lt;code&gt;attributes&lt;/code&gt; нескольких примененных областей объединяются таким образом, что всегда сохраняются &lt;code&gt;attributes.exclude&lt;/code&gt; . Это позволяет объединить несколько областей видимости и никогда не потерять чувствительные поля в окончательной области видимости.</target>
        </trans-unit>
        <trans-unit id="85958c9a7874f5c0d22b6bd6bca1113ce4f88dd0" translate="yes" xml:space="preserve">
          <source>Note that if you are using Sequelize migrations you will need to add the &lt;code&gt;createdAt&lt;/code&gt; and &lt;code&gt;updatedAt&lt;/code&gt; fields to your migration definition:</source>
          <target state="translated">Обратите внимание, что если вы используете миграции Sequelize, вам нужно будет добавить &lt;code&gt;createdAt&lt;/code&gt; и &lt;code&gt;updatedAt&lt;/code&gt; в определение миграции:</target>
        </trans-unit>
        <trans-unit id="107947aedcad482a28cbbd5ea34b917a3cb7b194" translate="yes" xml:space="preserve">
          <source>Note that many model operations in Sequelize allow you to specify a transaction in the options parameter of the method. If a transaction _is_ specified in the original call, it will be present in the options parameter passed to the hook function. For example, consider the following snippet:</source>
          <target state="translated">Обратите внимание,что многие модельные операции в Sequelize позволяют указать транзакцию в параметре опций метода.Если транзакция _is_указана в исходном вызове,то она будет присутствовать в параметре options,переданном в функцию hook.Например,рассмотрим следующий фрагмент:</target>
        </trans-unit>
        <trans-unit id="e4a2d5cf04ad438df329fae57d33930a1cee82dc" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;this.firstname&lt;/code&gt; and &lt;code&gt;this.lastname&lt;/code&gt; references in the &lt;code&gt;fullName&lt;/code&gt; getter function will trigger a call to the respective getter functions. If you do not want that then use the &lt;code&gt;getDataValue()&lt;/code&gt; method to access the raw value (see below).</source>
          <target state="translated">Обратите внимание, что &lt;code&gt;this.firstname&lt;/code&gt; и &lt;code&gt;this.lastname&lt;/code&gt; в функции получения &lt;code&gt;fullName&lt;/code&gt; инициируют вызов соответствующих функций получения. Если вы этого не хотите, используйте метод &lt;code&gt;getDataValue()&lt;/code&gt; для доступа к необработанному значению (см. Ниже).</target>
        </trans-unit>
        <trans-unit id="c3f41755f136f1dc7c83971f78c9422549830be4" translate="yes" xml:space="preserve">
          <source>Note that the Image -&amp;gt; Comment and Post -&amp;gt; Comment relations define a scope, &lt;code&gt;commentable: 'image'&lt;/code&gt; and &lt;code&gt;commentable: 'post'&lt;/code&gt; respectively. This scope is automatically applied when using the association functions:</source>
          <target state="translated">Обратите внимание, что отношения Image -&amp;gt; Comment и Post -&amp;gt; Comment определяют область видимости, &lt;code&gt;commentable: 'image'&lt;/code&gt; и &lt;code&gt;commentable: 'post'&lt;/code&gt; соответственно. Эта область автоматически применяется при использовании функций ассоциации:</target>
        </trans-unit>
        <trans-unit id="4f0b731694e383aebdfdb192c03dcf6b1ffbcb0d" translate="yes" xml:space="preserve">
          <source>Note that where multiple arguments need to be passed to the built-in validation functions, the arguments to be passed must be in an array. But if a single array argument is to be passed, for instance an array of acceptable strings for &lt;code&gt;isIn&lt;/code&gt;, this will be interpreted as multiple string arguments instead of one array argument. To work around this pass a single-length array of arguments, such as &lt;code&gt;[['one', 'two']]&lt;/code&gt; as shown above.</source>
          <target state="translated">Обратите внимание, что если во встроенные функции проверки необходимо передать несколько аргументов, передаваемые аргументы должны быть в массиве. Но если должен быть передан единственный аргумент массива, например массив допустимых строк для &lt;code&gt;isIn&lt;/code&gt; , это будет интерпретироваться как несколько строковых аргументов вместо одного аргумента массива. Чтобы обойти это, передайте массив аргументов одинарной длины, например &lt;code&gt;[['one', 'two']]&lt;/code&gt; как показано выше.</target>
        </trans-unit>
        <trans-unit id="acc671783544f4659031c39424988278f5682f5d" translate="yes" xml:space="preserve">
          <source>Note: connection pool (production)</source>
          <target state="translated">Примечание:пул соединений (производство)</target>
        </trans-unit>
        <trans-unit id="f17a025ad4dbded90c801ce4da0060642aed6add" translate="yes" xml:space="preserve">
          <source>Note: setting up SQLite</source>
          <target state="translated">Примечание:настройка SQLite</target>
        </trans-unit>
        <trans-unit id="598ee651f3662bc62e474c319bd8bfacefa4b7fa" translate="yes" xml:space="preserve">
          <source>Notice how in the two examples above, the string provided is inserted verbatim into the query, i.e. column names are not escaped. When you provide a string to order/group, this will always be the case. If you want to escape column names, you should provide an array of arguments, even though you only want to order/group by a single column</source>
          <target state="translated">Обратите внимание,что в двух приведенных выше примерах строка вставляется в запрос дословно,т.е.имена столбцов не экранируются.Когда вы предоставляете строку для заказа/группы,это всегда будет так.Если вы хотите экранировать имена столбцов,вы должны предоставить массив аргументов,даже если вы хотите упорядочить/группировать только по одному столбцу</target>
        </trans-unit>
        <trans-unit id="ea75bd7ff48126d9026a71c0c8a132e1bf24ae80" translate="yes" xml:space="preserve">
          <source>Notice how the callback passed to &lt;code&gt;transaction&lt;/code&gt; returns a promise chain, and does not explicitly call &lt;code&gt;t.commit()&lt;/code&gt; nor &lt;code&gt;t.rollback()&lt;/code&gt;. If all promises in the returned chain are resolved successfully the transaction is committed. If one or several of the promises are rejected, the transaction is rolled back.</source>
          <target state="translated">Обратите внимание, как обратный вызов, переданный &lt;code&gt;transaction&lt;/code&gt; возвращает цепочку обещаний и не вызывает явно &lt;code&gt;t.commit()&lt;/code&gt; или &lt;code&gt;t.rollback()&lt;/code&gt; . Если все обещания в возвращенной цепочке успешно разрешены, транзакция фиксируется. Если одно или несколько обещаний отклоняются, транзакция откатывается.</target>
        </trans-unit>
        <trans-unit id="11f0b22a1229e459ff86618d87a61e6308c98004" translate="yes" xml:space="preserve">
          <source>Notice that the accessor (the &lt;code&gt;Tasks&lt;/code&gt; property in the resulting instance) is plural because the association is many-to-something.</source>
          <target state="translated">Обратите внимание на то, что метод доступа ( свойство &lt;code&gt;Tasks&lt;/code&gt; в результирующем экземпляре) имеет множественное число, потому что ассоциация - это многие с чем-то.</target>
        </trans-unit>
        <trans-unit id="db89be52a41833866fcb78f0286f7fdf07513336" translate="yes" xml:space="preserve">
          <source>Notice that the accessor (the &lt;code&gt;User&lt;/code&gt; property in the resulting instance) is singular because the association is one-to-something.</source>
          <target state="translated">Обратите внимание, что аксессор ( свойство &lt;code&gt;User&lt;/code&gt; в результирующем экземпляре) является единственным, потому что связь является взаимно однозначной.</target>
        </trans-unit>
        <trans-unit id="4848a0b9c04bb727fb8adec90477785147fef5df" translate="yes" xml:space="preserve">
          <source>Notice that the scoped column (&lt;code&gt;taggable&lt;/code&gt;) is now on the through model (&lt;code&gt;ItemTag&lt;/code&gt;).</source>
          <target state="translated">Обратите внимание, что столбец с &lt;code&gt;taggable&lt;/code&gt; областью ( taggable ) теперь находится в сквозной модели ( &lt;code&gt;ItemTag&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="0cf25bfe98d9e52a1f895ec51fb4362193792880" translate="yes" xml:space="preserve">
          <source>Notice, that the &lt;code&gt;useCLS()&lt;/code&gt; method is on the &lt;em&gt;constructor&lt;/em&gt;, not on an instance of sequelize. This means that all instances will share the same namespace, and that CLS is all-or-nothing - you cannot enable it only for some instances.</source>
          <target state="translated">Обратите внимание, что метод &lt;code&gt;useCLS()&lt;/code&gt; находится в &lt;em&gt;конструкторе&lt;/em&gt; , а не в экземпляре sequelize. Это означает, что все экземпляры будут использовать одно и то же пространство имен и что CLS работает по принципу &amp;laquo;все или ничего&amp;raquo; - вы не можете включить его только для некоторых экземпляров.</target>
        </trans-unit>
        <trans-unit id="e2ed15a30fc301b436665dd5c0c8498b757d5988" translate="yes" xml:space="preserve">
          <source>Now CLI will be able to run ES6/ES7 code from migrations/seeders etc. Please keep in mind this depends upon your configuration of &lt;code&gt;.babelrc&lt;/code&gt;. Please read more about that at &lt;a href=&quot;https://babeljs.io&quot;&gt;babeljs.io&lt;/a&gt;.</source>
          <target state="translated">Теперь CLI сможет запускать код ES6 / ES7 из миграций / сеялок и т.д. Имейте в виду, что это зависит от вашей конфигурации &lt;code&gt;.babelrc&lt;/code&gt; . Подробнее об этом &lt;a href=&quot;https://babeljs.io&quot;&gt;читайте&lt;/a&gt; на babeljs.io .</target>
        </trans-unit>
        <trans-unit id="0dda3fffe72b1e2fffc081cac72bf40762b93a93" translate="yes" xml:space="preserve">
          <source>Now Sequelize CLI will load &lt;code&gt;config/config.js&lt;/code&gt; for getting configuration options. Since this is a JS file you can have any code executed and export final dynamic configuration file.</source>
          <target state="translated">Теперь Sequelize CLI загрузит &lt;code&gt;config/config.js&lt;/code&gt; для получения параметров конфигурации. Поскольку это файл JS, вы можете выполнить любой код и экспортировать окончательный файл динамической конфигурации.</target>
        </trans-unit>
        <trans-unit id="95b3edba890e41548c10bf9b3b3625f9aa2f773c" translate="yes" xml:space="preserve">
          <source>Now edit this file and set correct database credentials and dialect. The keys of the objects(ex. &quot;development&quot;) are used on &lt;code&gt;model/index.js&lt;/code&gt; for matching &lt;code&gt;process.env.NODE_ENV&lt;/code&gt; (When undefined, &quot;development&quot; is a default value.).</source>
          <target state="translated">Теперь отредактируйте этот файл и установите правильные учетные данные и диалект базы данных. Ключи объектов (например, &amp;laquo;разработка&amp;raquo;) используются в &lt;code&gt;model/index.js&lt;/code&gt; для сопоставления &lt;code&gt;process.env.NODE_ENV&lt;/code&gt; (если не определено, &amp;laquo;разработка&amp;raquo; является значением по умолчанию.).</target>
        </trans-unit>
        <trans-unit id="8bcf1d33260995a6c3b8643c00cc70d1a34e6ef9" translate="yes" xml:space="preserve">
          <source>Now include &lt;code&gt;babel-register&lt;/code&gt; setup in this file</source>
          <target state="translated">Теперь &lt;code&gt;babel-register&lt;/code&gt; настройку babel-register в этот файл</target>
        </trans-unit>
        <trans-unit id="464a349af324240ebd3cbae6fce3308732c7d91a" translate="yes" xml:space="preserve">
          <source>Now let's create &lt;code&gt;.sequelizerc&lt;/code&gt; file, it can include any configuration you may want to change for &lt;code&gt;sequelize-cli&lt;/code&gt; but in addition to that we want it to register babel for our codebase. Something like this</source>
          <target state="translated">Теперь давайте создадим файл &lt;code&gt;.sequelizerc&lt;/code&gt; , он может включать любую конфигурацию, которую вы можете захотеть изменить для &lt;code&gt;sequelize-cli&lt;/code&gt; , но в дополнение к этому мы хотим, чтобы он регистрировал babel для нашей кодовой базы. Что-то вроде этого</target>
        </trans-unit>
        <trans-unit id="20a6638a8729006ac3616971ef324f0cd3930e50" translate="yes" xml:space="preserve">
          <source>Now let's work with an example config.</source>
          <target state="translated">Теперь давайте поработаем с конфигурацией примера.</target>
        </trans-unit>
        <trans-unit id="aff9acc4bc5c9d94727af20f35602137e8690ce9" translate="yes" xml:space="preserve">
          <source>Now lets change some values and save changes to the database... There are two ways to do that:</source>
          <target state="translated">Теперь давайте изменим некоторые значения и сохраним изменения в базе данных...Есть два способа сделать это:</target>
        </trans-unit>
        <trans-unit id="d4fb15abf10ea3e08624eaff19cd79bb8fba56a4" translate="yes" xml:space="preserve">
          <source>Now our table has been created and saved in database. With migration you can revert to old state by just running a command.</source>
          <target state="translated">Теперь наша таблица создана и сохранена в базе данных.С помощью миграции вы можете вернуться в старое состояние,просто выполнив команду.</target>
        </trans-unit>
        <trans-unit id="548b3c2a852af460195d73e56956f24676cc3d49" translate="yes" xml:space="preserve">
          <source>Now we can create a product with multiple tags in the following way:</source>
          <target state="translated">Теперь мы можем создать продукт с несколькими тегами следующим образом:</target>
        </trans-unit>
        <trans-unit id="f114dbd008171ea170c4bc3c4396af90c7dda1af" translate="yes" xml:space="preserve">
          <source>Now we should edit this file to insert demo user to &lt;code&gt;User&lt;/code&gt; table.</source>
          <target state="translated">Теперь мы должны отредактировать этот файл, чтобы вставить демо-пользователя в таблицу &lt;code&gt;User&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5fbb7a53e1f2decb02a350e377272f4a1343c317" translate="yes" xml:space="preserve">
          <source>Now you know how to use &lt;code&gt;.sequelizerc&lt;/code&gt; file. Now let's see how to use this file to use babel with &lt;code&gt;sequelize-cli&lt;/code&gt; setup. This will allow you to write migrations and seeders with ES6/ES7 syntax.</source>
          <target state="translated">Теперь вы знаете, как использовать файл &lt;code&gt;.sequelizerc&lt;/code&gt; . Теперь давайте посмотрим, как использовать этот файл для использования babel с &lt;code&gt;sequelize-cli&lt;/code&gt; . Это позволит вам писать миграции и сидеры с синтаксисом ES6 / ES7.</target>
        </trans-unit>
        <trans-unit id="fa5d7518e3108590d0f1160b265811a870cd538d" translate="yes" xml:space="preserve">
          <source>Now, consider the following four scopes defined on Foo:</source>
          <target state="translated">Теперь рассмотрим следующие четыре диапазона,определенные на Foo:</target>
        </trans-unit>
        <trans-unit id="5582432c4864632f5e1a23cfc9dcba9e1ce92437" translate="yes" xml:space="preserve">
          <source>OK. So, first of all, let's load all tasks with their associated user.</source>
          <target state="translated">ХОРОШО.Итак,во-первых,давайте загрузим все задачи с их ассоциированным пользователем.</target>
        </trans-unit>
        <trans-unit id="2883f191bc5ebfdc16c0813eff659b35363ea69b" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="translated">Object</target>
        </trans-unit>
        <trans-unit id="524631efa40fbbd074c7d379858504a629448858" translate="yes" xml:space="preserve">
          <source>Object -</source>
          <target state="translated">Объект -</target>
        </trans-unit>
        <trans-unit id="7798f73e59ce895af4d9b669167864b8821ca276" translate="yes" xml:space="preserve">
          <source>Object representing a list of table attributes to create</source>
          <target state="translated">Объект,представляющий собой список атрибутов таблицы для создания</target>
        </trans-unit>
        <trans-unit id="a7b5e01cccb77400ad2465a66ef4eff96ddff3da" translate="yes" xml:space="preserve">
          <source>Object specifying target table, column name to create foreign key constraint</source>
          <target state="translated">Объект,указывающий целевую таблицу,имя столбца для создания ограничения по внешнему ключу</target>
        </trans-unit>
        <trans-unit id="c785ae6c15b6aed10bfae737959e2db229782bf3" translate="yes" xml:space="preserve">
          <source>Object with multiple variables.</source>
          <target state="translated">Объект с несколькими переменными.</target>
        </trans-unit>
        <trans-unit id="e3816c117ac9693a36bb6ad26b815f39c6a83f3f" translate="yes" xml:space="preserve">
          <source>Observe how the four scopes were merged into one. The includes of scopes are merged based on the model being included. If one scope includes model A and another includes model B, the merged result will include both models A and B. On the other hand, if both scopes include the same model A, but with different options (such as nested includes or other attributes), those will be merged recursively, as shown above.</source>
          <target state="translated">Посмотрите,как четыре диапазона были объединены в один.Включенные диапазоны объединяются на основе включенной модели.Если одна область применения включает модель A,а другая-модель B,то объединенный результат будет включать обе модели A и B.С другой стороны,если обе области применения включают одну и ту же модель A,но с разными опциями (такими как вложенные включения или другие атрибуты),то они будут объединены рекурсивно,как показано выше.</target>
        </trans-unit>
        <trans-unit id="3ec9751cae190e1dbc9d9b803b5cc2115aae8a88" translate="yes" xml:space="preserve">
          <source>Of course you can also access the instance's data and generate virtual getters:</source>
          <target state="translated">Конечно,вы также можете получить доступ к данным экземпляра и сгенерировать виртуальные геттеры:</target>
        </trans-unit>
        <trans-unit id="ef0e1f62d7337f2b1182d77e752df8ade90bdfe4" translate="yes" xml:space="preserve">
          <source>Of course you can also define self references with belongsToMany:</source>
          <target state="translated">Конечно,вы также можете определить себя ссылки с помощью принадлежитToMany:</target>
        </trans-unit>
        <trans-unit id="fb5654b91a94e76ab0d91f9617ed39a9eb1b3449" translate="yes" xml:space="preserve">
          <source>Offset for result</source>
          <target state="translated">Смещение для результата</target>
        </trans-unit>
        <trans-unit id="6a8127eb43bf543e2cf1dbb0892cd7b8b334689a" translate="yes" xml:space="preserve">
          <source>On success, the callback will be called with this instance. On validation error, the callback will be called with an instance of &lt;code&gt;Sequelize.ValidationError&lt;/code&gt;. This error will have a property for each of the fields for which validation failed, with the error message for that field.</source>
          <target state="translated">В случае успеха обратный вызов будет вызван с этим экземпляром. При ошибке проверки будет вызван обратный вызов с экземпляром &lt;code&gt;Sequelize.ValidationError&lt;/code&gt; . Эта ошибка будет иметь свойство для каждого из полей, для которых не удалось выполнить проверку, с сообщением об ошибке для этого поля.</target>
        </trans-unit>
        <trans-unit id="a6e8712ec2c54c580ef45527e2407d442845c74b" translate="yes" xml:space="preserve">
          <source>On the other hand, if it is set to allow null (with &lt;code&gt;allowNull: true&lt;/code&gt;) and that value has been set to &lt;code&gt;null&lt;/code&gt;, only the built-in validators will be skipped, while the custom validators will still run.</source>
          <target state="translated">С другой стороны, если он настроен на разрешение null (с &lt;code&gt;allowNull: true&lt;/code&gt; ) и для этого значения установлено значение &lt;code&gt;null&lt;/code&gt; , будут пропущены только встроенные валидаторы, а пользовательские валидаторы все равно будут работать.</target>
        </trans-unit>
        <trans-unit id="07f665a8c99eed865083f085d98ec8fca0015d7c" translate="yes" xml:space="preserve">
          <source>Once you created an object and got a reference to it, you can delete it from the database. The relevant method is &lt;code&gt;destroy&lt;/code&gt;:</source>
          <target state="translated">Как только вы создали объект и получили ссылку на него, вы можете удалить его из базы данных. Соответствующий метод - &lt;code&gt;destroy&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="1f9b5321949a967ef42f55010f8e75dec29c3613" translate="yes" xml:space="preserve">
          <source>Once you have properly configured CLI config file you are ready to create your first migration. It's as simple as executing a simple command.</source>
          <target state="translated">После того,как вы правильно настроили CLI конфигурационный файл,вы готовы создать свой первый переход.Это так же просто,как выполнить простую команду.</target>
        </trans-unit>
        <trans-unit id="a99024618c2527f3bc655af2bf9a61a350050032" translate="yes" xml:space="preserve">
          <source>One-To-Many associations (hasMany)</source>
          <target state="translated">Одной-единственной ассоциации (hasMany)</target>
        </trans-unit>
        <trans-unit id="b04078f82acb5642e470ea54f09be546dc7432a7" translate="yes" xml:space="preserve">
          <source>One-To-Many associations are connecting one source with multiple targets. The targets however are again connected to exactly one specific source.</source>
          <target state="translated">Ассоциации &quot;Один ко многим&quot; соединяют один источник с несколькими целями.Однако цели снова соединяются точно с одним конкретным источником.</target>
        </trans-unit>
        <trans-unit id="159ce298fdb55c0ace2cae5b9eeddb9085ed1b07" translate="yes" xml:space="preserve">
          <source>One-To-One associations</source>
          <target state="translated">Единые ассоциации</target>
        </trans-unit>
        <trans-unit id="7ac7134636ef26e8db79e47ff7c804d75176aa8d" translate="yes" xml:space="preserve">
          <source>One-To-One associations are associations between exactly two models connected by a single foreign key.</source>
          <target state="translated">Ассоциации &quot;Один-на-один&quot;-это ассоциации между ровно двумя моделями,соединенными одним иностранным ключом.</target>
        </trans-unit>
        <trans-unit id="2309e67cc0497393678cf4861e18785cba42982e" translate="yes" xml:space="preserve">
          <source>One-to-many association</source>
          <target state="translated">Индивидуальная ассоциация</target>
        </trans-unit>
        <trans-unit id="52422157c5551a74edd9efae050fd0cbd45e6b6a" translate="yes" xml:space="preserve">
          <source>One-to-one association</source>
          <target state="translated">Индивидуальная ассоциация</target>
        </trans-unit>
        <trans-unit id="80c2f522b0cc71f97fccf4d0cc3b4b1a1a723e86" translate="yes" xml:space="preserve">
          <source>Only a hook with name param can be removed.</source>
          <target state="translated">Только крюк с именем параметра может быть удален.</target>
        </trans-unit>
        <trans-unit id="d7c3ed5082d4c21101247c805bae6a1b4e6471d0" translate="yes" xml:space="preserve">
          <source>Only available for Postgres</source>
          <target state="translated">Только для Postgres</target>
        </trans-unit>
        <trans-unit id="78606afd96fe0f52ff679e248222b3ca8c9d2f35" translate="yes" xml:space="preserve">
          <source>Only retry a query if the error matches one of these strings.</source>
          <target state="translated">Повторяйте запрос только в том случае,если ошибка совпадает с одной из этих строк.</target>
        </trans-unit>
        <trans-unit id="ef20bd5977f69845fb3605c4d34d8da2e99079ec" translate="yes" xml:space="preserve">
          <source>Only used by sqlite. Defaults to ':memory:'</source>
          <target state="translated">Используется только кв.м.По умолчанию ':memory:''.</target>
        </trans-unit>
        <trans-unit id="72994e2f28b83f1f262ee9b3a2e57ad75ee09f35" translate="yes" xml:space="preserve">
          <source>Only used in conjunction with TRUNCATE. Automatically restart sequences owned by columns of the truncated table.</source>
          <target state="translated">Используется только в сочетании с TRUNCATE.Автоматический перезапуск последовательностей,принадлежащих столбцам усеченной таблицы.</target>
        </trans-unit>
        <trans-unit id="659fa6ab2bfaf4a00c71607875bf9ee544072de3" translate="yes" xml:space="preserve">
          <source>Only used in conjunction with TRUNCATE. Truncates all tables that have foreign-key references to the named table, or to any tables added to the group due to CASCADE.</source>
          <target state="translated">Используется только в сочетании с TRUNCATE.Усекает все таблицы,которые имеют ссылки с посторонними ключами на именованную таблицу или на любые таблицы,добавленные в группу благодаря CASCADE.</target>
        </trans-unit>
        <trans-unit id="1e5c03c4ca5dbc17c5a6129ff8dbe16f01a71ebd" translate="yes" xml:space="preserve">
          <source>Op</source>
          <target state="translated">Op</target>
        </trans-unit>
        <trans-unit id="8fe26ec471775c33716aff2e25b307500cb8f70b" translate="yes" xml:space="preserve">
          <source>Operator symbols to be used when querying data</source>
          <target state="translated">Символы оператора,используемые при запросе данных</target>
        </trans-unit>
        <trans-unit id="e90414358dbfff0a68e4eb5d68a16978cf197d5a" translate="yes" xml:space="preserve">
          <source>Operators</source>
          <target state="translated">Operators</target>
        </trans-unit>
        <trans-unit id="7cbeab9a20efe2e2217d5d299f851a542c5447fe" translate="yes" xml:space="preserve">
          <source>Operators Aliases</source>
          <target state="translated">Операторы Псевдонимы</target>
        </trans-unit>
        <trans-unit id="72687734b357dface3249321a849ea8462093c98" translate="yes" xml:space="preserve">
          <source>Operators for possible operators __Alias__: _all_ The promise is resolved with an array of Model instances if the query succeeds._</source>
          <target state="translated">Операторы для возможных операторов __Alias__:_all_Обещание разрешается массивом Model instances,если запрос завершается успешно._.</target>
        </trans-unit>
        <trans-unit id="09a779d716fb827fb88714d6257f33d91fa93ea1" translate="yes" xml:space="preserve">
          <source>Operators security</source>
          <target state="translated">Безопасность операторов</target>
        </trans-unit>
        <trans-unit id="778c618117429ef2dedad8c828b71d5371cf6e0f" translate="yes" xml:space="preserve">
          <source>Optimistic Locking</source>
          <target state="translated">Оптимистический замок</target>
        </trans-unit>
        <trans-unit id="6140cd6be492f81e9de5ce4e733267b4f93e5075" translate="yes" xml:space="preserve">
          <source>Optimistic locking allows concurrent access to model records for edits and prevents conflicts from overwriting data. It does this by checking whether another process has made changes to a record since it was read and throws an OptimisticLockError when a conflict is detected.</source>
          <target state="translated">Оптимистическая блокировка позволяет одновременный доступ к записям модели для правок и предотвращает конфликты от перезаписи данных.Она делает это,проверяя,не изменил ли другой процесс запись с момента ее чтения,и выбрасывает OptimisticLockError при обнаружении конфликта.</target>
        </trans-unit>
        <trans-unit id="a45991670c71fc0c7f3eb11ef210b0020884d66a" translate="yes" xml:space="preserve">
          <source>OptimisticLockError</source>
          <target state="translated">OptimisticLockError</target>
        </trans-unit>
        <trans-unit id="5182cc6f458b27f798ef769e48426d170adaca6f" translate="yes" xml:space="preserve">
          <source>Option &lt;code&gt;returning: true&lt;/code&gt; will no longer return attributes that are not defined in the model. Old behavior can be restored by using &lt;code&gt;returning: ['*']&lt;/code&gt;</source>
          <target state="translated">Параметр return &lt;code&gt;returning: true&lt;/code&gt; больше не будет возвращать атрибуты, которые не определены в модели. Старое поведение можно восстановить, используя &lt;code&gt;returning: ['*']&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2573f9c5c9739bda23063f4ec6575c5d4fcbe3c1" translate="yes" xml:space="preserve">
          <source>Options passed to &lt;code&gt;target.create&lt;/code&gt;</source>
          <target state="translated">Параметры, переданные в &lt;code&gt;target.create&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fc281780c58169a65a5387bce961e7af93c4bb24" translate="yes" xml:space="preserve">
          <source>Options passed to &lt;code&gt;target.create&lt;/code&gt; and setAssociation.</source>
          <target state="translated">Параметры, переданные в &lt;code&gt;target.create&lt;/code&gt; и setAssociation.</target>
        </trans-unit>
        <trans-unit id="40b503e9df444ee2d315f6badf5d3e76b933fb08" translate="yes" xml:space="preserve">
          <source>Options passed to &lt;code&gt;target.findAll&lt;/code&gt; and &lt;code&gt;update&lt;/code&gt;.</source>
          <target state="translated">Параметры передаются в &lt;code&gt;target.findAll&lt;/code&gt; и &lt;code&gt;update&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0f7d5ec9760408cef1a3917f12f6c577fe6b6b15" translate="yes" xml:space="preserve">
          <source>Options passed to &lt;code&gt;target.update&lt;/code&gt;</source>
          <target state="translated">Параметры, переданные в &lt;code&gt;target.update&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5943acc368ef8e8a62d06081b8cac9a14bc7c85f" translate="yes" xml:space="preserve">
          <source>Options passed to &lt;code&gt;target.update&lt;/code&gt;.</source>
          <target state="translated">Параметры, переданные в &lt;code&gt;target.update&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6a4f8685a8ba251504870ba17fa94124cb574705" translate="yes" xml:space="preserve">
          <source>Options passed to &lt;code&gt;through.destroy&lt;/code&gt;</source>
          <target state="translated">Параметры, переданные в &lt;code&gt;through.destroy&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0115f779a0e49b0656989e51e294eb81c64793d7" translate="yes" xml:space="preserve">
          <source>Options passed to &lt;code&gt;through.findAll&lt;/code&gt;, &lt;code&gt;bulkCreate&lt;/code&gt; and &lt;code&gt;update&lt;/code&gt;</source>
          <target state="translated">Параметры , передаваемые &lt;code&gt;through.findAll&lt;/code&gt; , &lt;code&gt;bulkCreate&lt;/code&gt; и &lt;code&gt;update&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="26176f8cc30b890f9a9b8e35a52a1de2b863ffe7" translate="yes" xml:space="preserve">
          <source>Options passed to &lt;code&gt;through.findAll&lt;/code&gt;, &lt;code&gt;bulkCreate&lt;/code&gt;, &lt;code&gt;update&lt;/code&gt; and &lt;code&gt;destroy&lt;/code&gt;</source>
          <target state="translated">Параметры , передаваемые &lt;code&gt;through.findAll&lt;/code&gt; , &lt;code&gt;bulkCreate&lt;/code&gt; , &lt;code&gt;update&lt;/code&gt; и &lt;code&gt;destroy&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4a4b33ed3ca527fbd4b9245bafffeee52768cf1a" translate="yes" xml:space="preserve">
          <source>Options passed to create and add</source>
          <target state="translated">Опции,переданные для создания и добавления</target>
        </trans-unit>
        <trans-unit id="474d03cde40320ee091013efe8d0db26cc7d0b45" translate="yes" xml:space="preserve">
          <source>Options passed to getAssociation and &lt;code&gt;target.save&lt;/code&gt;</source>
          <target state="translated">Параметры, переданные в getAssociation и &lt;code&gt;target.save&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fee507ed9dc18ea297e1ba8190f5aa49edd68423" translate="yes" xml:space="preserve">
          <source>Options passed to getAssociations</source>
          <target state="translated">Опции,переданные для полученияАссоциации</target>
        </trans-unit>
        <trans-unit id="06fee8d775b90a83eb6e0500643ad5937a039f32" translate="yes" xml:space="preserve">
          <source>Options that are passed on to &lt;code&gt;Model.find&lt;/code&gt;</source>
          <target state="translated">Параметры, которые передаются в &lt;code&gt;Model.find&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ee8bbce524fef6ba7c6dbac58492250221aae721" translate="yes" xml:space="preserve">
          <source>Options that are passed to the validator</source>
          <target state="translated">Опции,которые передаются валидатору</target>
        </trans-unit>
        <trans-unit id="a2025fe246c877972310ec609eb48f54489ec039" translate="yes" xml:space="preserve">
          <source>Options to describe the scope of the search.</source>
          <target state="translated">Опции для описания области поиска.</target>
        </trans-unit>
        <trans-unit id="bec1ed99ae879b5c4b91ae857a753fb5fb51217b" translate="yes" xml:space="preserve">
          <source>Or you can use a connection string as well with a path:</source>
          <target state="translated">Или вы можете использовать строку соединения также с путём:</target>
        </trans-unit>
        <trans-unit id="9f1762b33b20d79d93b528934ab2323b45f0b56c" translate="yes" xml:space="preserve">
          <source>Order of Operations</source>
          <target state="translated">Порядок операций</target>
        </trans-unit>
        <trans-unit id="d3ed86c1334d74f0ae883f47feef902d83b9d8c6" translate="yes" xml:space="preserve">
          <source>Ordering</source>
          <target state="translated">Ordering</target>
        </trans-unit>
        <trans-unit id="7c3e631356b9b789997f759381378ec61789d79c" translate="yes" xml:space="preserve">
          <source>Ordering Eager Loaded Associations</source>
          <target state="translated">Заказ ассоциаций с нетерпением ожидающих загрузки</target>
        </trans-unit>
        <trans-unit id="96c2ab3009653c0dea9ef2fbe566de5309b08a8e" translate="yes" xml:space="preserve">
          <source>Other instance to compare against</source>
          <target state="translated">Другой пример для сравнения с</target>
        </trans-unit>
        <trans-unit id="79eda91bb3b93164ab196b3ef5ed4437b5cbffeb" translate="yes" xml:space="preserve">
          <source>Our goal is to use environment variables for various database secrets and not accidentally check them in to source control.</source>
          <target state="translated">Наша цель-использовать переменные окружения для различных секретов баз данных,а не случайно проверять их для управления исходными текстами.</target>
        </trans-unit>
        <trans-unit id="2fe96ce51692a16cb282a2ceab2dbe87dd4dadd4" translate="yes" xml:space="preserve">
          <source>Override the name of the createdAt attribute if a string is provided, or disable it if false. Timestamps must be true. Underscored field will be set with underscored setting.</source>
          <target state="translated">Переопределить имя атрибута createAt,если строка предоставлена,или отключить его,если оно ложное.Временные метки должны быть верны.Подчеркнутое поле будет установлено с подчеркнутой настройкой.</target>
        </trans-unit>
        <trans-unit id="573d8c9affd76cce2150107ed262b77798164d37" translate="yes" xml:space="preserve">
          <source>Override the name of the deletedAt attribute if a string is provided, or disable it if false. Timestamps must be true. Underscored field will be set with underscored setting.</source>
          <target state="translated">Переопределить имя атрибута deletedAt,если строка предоставлена,или отключить его,если оно ложное.Временные метки должны быть верны.Подчеркнутое поле будет установлено с подчеркнутой настройкой.</target>
        </trans-unit>
        <trans-unit id="9f80d4c656e4b0f6cdab55224c8d4d9902552192" translate="yes" xml:space="preserve">
          <source>Override the name of the updatedAt attribute if a string is provided, or disable it if false. Timestamps must be true. Underscored field will be set with underscored setting.</source>
          <target state="translated">Переопределить имя атрибута updateAt,если строка предоставлена,или отключить его,если оно ложное.Временные метки должны быть верны.Подчеркнутое поле будет установлено с подчеркнутой настройкой.</target>
        </trans-unit>
        <trans-unit id="f94554b14ce5d5015d5ba9e9470606d7ad0f4f6f" translate="yes" xml:space="preserve">
          <source>Override:</source>
          <target state="translated">Override:</target>
        </trans-unit>
        <trans-unit id="191bd4c23022d0bfd4c0afc357cdedc311221c89" translate="yes" xml:space="preserve">
          <source>PAGLOCK</source>
          <target state="translated">PAGLOCK</target>
        </trans-unit>
        <trans-unit id="6216de0ea276035ad6c650404d1fb576170506d9" translate="yes" xml:space="preserve">
          <source>PRIMARY KEY</source>
          <target state="translated">ПРАЙМАРИЯ КЕЙ</target>
        </trans-unit>
        <trans-unit id="a39ae88eaa033344f483111a662c38ecc2c9da40" translate="yes" xml:space="preserve">
          <source>Pagination / Limiting</source>
          <target state="translated">Пагинация/ограничение</target>
        </trans-unit>
        <trans-unit id="23c7082125dc9cf874bbe14ba3786fba1a079619" translate="yes" xml:space="preserve">
          <source>Parameters used with the BUILT-IN validator function, if applicable</source>
          <target state="translated">Параметры,используемые с функцией валидатора BUILT-IN,если это применимо.</target>
        </trans-unit>
        <trans-unit id="ad73fd1a2c6d31eae746e734e09a693793745bd9" translate="yes" xml:space="preserve">
          <source>Params:</source>
          <target state="translated">Params:</target>
        </trans-unit>
        <trans-unit id="ca1853065cda963bd9f055b6bd7dc1d954164536" translate="yes" xml:space="preserve">
          <source>Pass CONCURRENT so other operations run while the index is created</source>
          <target state="translated">Пройти КОНКУРЕНТ,чтобы во время создания индекса выполнялись и другие операции.</target>
        </trans-unit>
        <trans-unit id="482ca0567201b23a9b0f90cc3e4ca6ff3ea7504f" translate="yes" xml:space="preserve">
          <source>Pass in the desired level as the first argument:</source>
          <target state="translated">В качестве первого аргумента передайте желаемый уровень:</target>
        </trans-unit>
        <trans-unit id="d0b6a5930843ead542631eccaa522d64b6f4c225" translate="yes" xml:space="preserve">
          <source>Pass query execution time in milliseconds as second argument to logging function (options.logging).</source>
          <target state="translated">Передайте время выполнения запроса в миллисекундах в качестве второго аргумента в функцию протоколирования (options.logging).</target>
        </trans-unit>
        <trans-unit id="72708499ef443e45b95abcad90f88639d4ced03b" translate="yes" xml:space="preserve">
          <source>Passing Dialect Specific Options</source>
          <target state="translated">Специфические параметры проходного диалекта</target>
        </trans-unit>
        <trans-unit id="0427d4c2f4fb6701afcb9d1d7b13d90257f569fd" translate="yes" xml:space="preserve">
          <source>Per-attribute validations</source>
          <target state="translated">валидации по атрибутам</target>
        </trans-unit>
        <trans-unit id="ad41972eed6cb608026300559fabcca9c731ee78" translate="yes" xml:space="preserve">
          <source>Per-attribute validators and &lt;code&gt;allowNull&lt;/code&gt;</source>
          <target state="translated">Валидаторы атрибутов и &lt;code&gt;allowNull&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9808bafa8bd1f406e228ff5597a4f9e053ba72a0" translate="yes" xml:space="preserve">
          <source>Permanent Hooks (Sequelize.addHook)</source>
          <target state="translated">Постоянные крючки (Sequelize.addHook)</target>
        </trans-unit>
        <trans-unit id="323bca2fecb8aed065297c5c4721eea1b95a7140" translate="yes" xml:space="preserve">
          <source>Permanent hooks may also be defined in &lt;code&gt;Sequelize.options&lt;/code&gt;:</source>
          <target state="translated">Постоянные хуки также могут быть определены в &lt;code&gt;Sequelize.options&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="63d6ff4863ed30fb76c61de7b9ed4a9c45048878" translate="yes" xml:space="preserve">
          <source>Please note that this function will return &lt;code&gt;false&lt;/code&gt; when a property from a nested (for example JSON) property was edited manually, you must call &lt;code&gt;changed('key', true)&lt;/code&gt; manually in these cases. Writing an entirely new object (eg. deep cloned) will be detected.</source>
          <target state="translated">Обратите внимание, что эта функция вернет &lt;code&gt;false&lt;/code&gt; , если свойство из вложенного (например, JSON) свойства было отредактировано вручную, в этих случаях вы должны вызвать &lt;code&gt;changed('key', true)&lt;/code&gt; вручную. Будет обнаружена запись совершенно нового объекта (например, глубоко клонированного).</target>
        </trans-unit>
        <trans-unit id="ea229a60fffb397f7382a9347e16ab4efb875578" translate="yes" xml:space="preserve">
          <source>Please see &lt;a href=&quot;transaction.js~transaction#static-get-LOCK&quot;&gt;Transaction.LOCK&lt;/a&gt;</source>
          <target state="translated">См. &lt;a href=&quot;transaction.js~transaction#static-get-LOCK&quot;&gt;Transaction.LOCK&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a633c5c9226ef96e26ef67982c0b1fbf31148bdb" translate="yes" xml:space="preserve">
          <source>Plural name for model</source>
          <target state="translated">Множественное название для модели</target>
        </trans-unit>
        <trans-unit id="6b41bd077261ccb7ed7f04853c7e531e9e12131b" translate="yes" xml:space="preserve">
          <source>Possible options for row locking.</source>
          <target state="translated">Возможные опции для блокировки рядов.</target>
        </trans-unit>
        <trans-unit id="16e0a7b633c76d649ce1e522d7ec681ae462f811" translate="yes" xml:space="preserve">
          <source>Possible options for row locking. Used in conjunction with &lt;code&gt;find&lt;/code&gt; calls:</source>
          <target state="translated">Возможные варианты блокировки строк. Используется вместе с вызовами &lt;code&gt;find&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="620b5af6e3139187a47774b9079769bc03158a5a" translate="yes" xml:space="preserve">
          <source>PostGIS 1.5 introduced a new spatial type called geography, which uses geodetic measurement instead of Cartesian measurement. Coordinate points in the geography type are always represented in WGS 84 lon lat degrees (SRID 4326), but measurement functions and relationships ST_Distance, ST_DWithin, ST_Length, and ST_Area always return answers in meters or assume inputs in meters.</source>
          <target state="translated">PostGIS 1.5 ввела новый пространственный тип,называемый географией,который использует геодезические измерения вместо декартовых.Точки координат в географическом типе всегда представлены в WGS 84 lon lat градусов (SRID 4326),но функции измерения и связи ST_Distance,ST_DWithin,ST_Length и ST_Area всегда возвращают ответы в метрах или принимают входные данные в метрах.</target>
        </trans-unit>
        <trans-unit id="24fd6c2d1150de6a47543209150ff4c2a2d3104f" translate="yes" xml:space="preserve">
          <source>PostgreSQL</source>
          <target state="translated">PostgreSQL</target>
        </trans-unit>
        <trans-unit id="073df06d9f717170d0ac65398d7e552d09431498" translate="yes" xml:space="preserve">
          <source>PostgreSQL - Implemented as a temporary function with exception handling: INSERT EXCEPTION WHEN unique_constraint UPDATE</source>
          <target state="translated">PostgreSQL-Реализован как временная функция с обработкой исключений:ВЫПОЛНЕНИЕ КОГДА unique_constraint UPDATE</target>
        </trans-unit>
        <trans-unit id="1502dc34bce3e1346fc0014a7cc5ee3e3ea95fbe" translate="yes" xml:space="preserve">
          <source>Postgres 9.3+ only</source>
          <target state="translated">Только для Postgres 9.3+</target>
        </trans-unit>
        <trans-unit id="b8ce2814112b89374b10c38bb5cca295a3fcd5eb" translate="yes" xml:space="preserve">
          <source>Postgres also supports specific locks while eager loading by using OF:</source>
          <target state="translated">Postgres также поддерживает специальные замки при загрузке с помощью OF:</target>
        </trans-unit>
        <trans-unit id="2a407251115e1be28c5504b5f9e9199614279ede" translate="yes" xml:space="preserve">
          <source>PostgresSQL will build the index without taking any write locks. Postgres only</source>
          <target state="translated">PostgresSQL построит индекс без фиксации записи.Только для Postgres</target>
        </trans-unit>
        <trans-unit id="69f98f62216cced84a4a7664fbea7b244d38cc2f" translate="yes" xml:space="preserve">
          <source>Primary Key</source>
          <target state="translated">Основной ключ</target>
        </trans-unit>
        <trans-unit id="e517ee5fd3782b5ee136558aa5e08fab77ad1688" translate="yes" xml:space="preserve">
          <source>Primary keys</source>
          <target state="translated">Первичные ключи</target>
        </trans-unit>
        <trans-unit id="9ab910186508b83730a0e5f6ef1718f45b1e0c1c" translate="yes" xml:space="preserve">
          <source>Production Usages</source>
          <target state="translated">Использование в производстве</target>
        </trans-unit>
        <trans-unit id="554abf30e877116873c3de42924d6ac948059d03" translate="yes" xml:space="preserve">
          <source>Programmatic use</source>
          <target state="translated">Программное использование</target>
        </trans-unit>
        <trans-unit id="fe5671922bc7f67cfabfa60ab97a9542ac21f39f" translate="yes" xml:space="preserve">
          <source>Promise</source>
          <target state="translated">Promise</target>
        </trans-unit>
        <trans-unit id="75f955c70fe0ea79083fa7fabe3a05900585c010" translate="yes" xml:space="preserve">
          <source>Promises and async/await</source>
          <target state="translated">Обещания и ожидание</target>
        </trans-unit>
        <trans-unit id="351f56a6fefd5127c90506d3e91990f1d7631787" translate="yes" xml:space="preserve">
          <source>Properties:</source>
          <target state="translated">Properties:</target>
        </trans-unit>
        <trans-unit id="ee08d4050cbb6098526e1137d5e2d585350759ed" translate="yes" xml:space="preserve">
          <source>Property name of the BUILT-IN validator function that caused the validation error (e.g.</source>
          <target state="translated">Имя свойства функции BUILT-IN валидатора,вызвавшей ошибку валидации (например,</target>
        </trans-unit>
        <trans-unit id="21dd1ed33063eaf0fec2b627562e02d732b0d02a" translate="yes" xml:space="preserve">
          <source>Property name of the BUILT-IN validator function that caused the validation error (e.g. &quot;in&quot; or &quot;len&quot;), if applicable</source>
          <target state="translated">Имя свойства функции валидатора BUILT-IN,которая вызвала ошибку валидации (например,&quot;in&quot; или &quot;len&quot;),если это применимо.</target>
        </trans-unit>
        <trans-unit id="b39befe85559d7a7d7f870921dd09f561ee705ee" translate="yes" xml:space="preserve">
          <source>Provide a custom getter for this column. Use &lt;code&gt;this.getDataValue(String)&lt;/code&gt; to manipulate the underlying values.</source>
          <target state="translated">Предоставьте пользовательский метод получения для этого столбца. Используйте &lt;code&gt;this.getDataValue(String)&lt;/code&gt; для управления базовыми значениями.</target>
        </trans-unit>
        <trans-unit id="b5698adaf1c9e505751601dcfd1ade05d46fb2b2" translate="yes" xml:space="preserve">
          <source>Provide a custom setter for this column. Use &lt;code&gt;this.setDataValue(String, Value)&lt;/code&gt; to manipulate the underlying values.</source>
          <target state="translated">Задайте настраиваемый сеттер для этого столбца. Используйте &lt;code&gt;this.setDataValue(String, Value)&lt;/code&gt; для управления базовыми значениями.</target>
        </trans-unit>
        <trans-unit id="7806d20a5b3b834f1cf4cd79c6e14a14852dd900" translate="yes" xml:space="preserve">
          <source>Public Constructor</source>
          <target state="translated">Общественный строитель</target>
        </trans-unit>
        <trans-unit id="f98f741af3e683a633762397b6b19a8a0d84038a" translate="yes" xml:space="preserve">
          <source>Public Constructors</source>
          <target state="translated">Общественные строители</target>
        </trans-unit>
        <trans-unit id="6e05889c9b4dc3e125f9019b8d38b3bb729194a7" translate="yes" xml:space="preserve">
          <source>Public Members</source>
          <target state="translated">Общественность</target>
        </trans-unit>
        <trans-unit id="400be4997716cf3bb5a0c05bf961e2a62c95f6c8" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
          <target state="translated">Общедоступные методы</target>
        </trans-unit>
        <trans-unit id="63d5fc813429798ad09082a4ce6d7789993afa8a" translate="yes" xml:space="preserve">
          <source>Queries using OR</source>
          <target state="translated">Запросы по ИЛИ</target>
        </trans-unit>
        <trans-unit id="23495b5214e112ada524d83f47869be27fbc912f" translate="yes" xml:space="preserve">
          <source>Queries within a &lt;code&gt;transaction&lt;/code&gt; can be performed with locks</source>
          <target state="translated">Запросы внутри &lt;code&gt;transaction&lt;/code&gt; могут выполняться с блокировками</target>
        </trans-unit>
        <trans-unit id="9240311f3ef167d8f58165e9bce953c0badf6a4a" translate="yes" xml:space="preserve">
          <source>Queries within a transaction can skip locked rows</source>
          <target state="translated">Запросы внутри транзакции могут пропустить заблокированные строки</target>
        </trans-unit>
        <trans-unit id="d12354bd5e0d0c4f4a34bf8e9705cc16c24598ce" translate="yes" xml:space="preserve">
          <source>Query Interface</source>
          <target state="translated">Интерфейс запроса</target>
        </trans-unit>
        <trans-unit id="0969ef4dddd33716783dd28b66ec0aaeafb4bd86" translate="yes" xml:space="preserve">
          <source>Query option</source>
          <target state="translated">Вариант запроса</target>
        </trans-unit>
        <trans-unit id="720143b0891d96ea816e381d60d6c88f81a3db6f" translate="yes" xml:space="preserve">
          <source>Query options</source>
          <target state="translated">Варианты запросов</target>
        </trans-unit>
        <trans-unit id="e078f5ce4da3bbd9092168dc7caa7d58d0c3218d" translate="yes" xml:space="preserve">
          <source>Query options.</source>
          <target state="translated">Варианты запросов.</target>
        </trans-unit>
        <trans-unit id="aacae2c5528cab9ee4d1056bb3fe97d662b13033" translate="yes" xml:space="preserve">
          <source>Query options. See sequelize.query for full options</source>
          <target state="translated">Варианты запросов.Полные параметры см.в разделе sequelize.request.</target>
        </trans-unit>
        <trans-unit id="1e0418715c69e9b17e7730738c56f3d4f4b9d704" translate="yes" xml:space="preserve">
          <source>QueryError</source>
          <target state="translated">QueryError</target>
        </trans-unit>
        <trans-unit id="e0905a933a3f10834e2d58cddd1bfbace4c6ce1e" translate="yes" xml:space="preserve">
          <source>QueryInterface</source>
          <target state="translated">QueryInterface</target>
        </trans-unit>
        <trans-unit id="956e52cb6dce6420ffdbd1c53f487158ffdca0ce" translate="yes" xml:space="preserve">
          <source>QueryTypes</source>
          <target state="translated">QueryTypes</target>
        </trans-unit>
        <trans-unit id="cc6835ce045ca407e1aa42cf034a40b2dc968c7d" translate="yes" xml:space="preserve">
          <source>Querying</source>
          <target state="translated">Querying</target>
        </trans-unit>
        <trans-unit id="8f1e1ff9d000b44617e8ef8f0ce02e30146ecaef" translate="yes" xml:space="preserve">
          <source>Quick example</source>
          <target state="translated">Быстрый пример</target>
        </trans-unit>
        <trans-unit id="578e6dad8d99e7211a3086f6ebcd1836a6b2b2b0" translate="yes" xml:space="preserve">
          <source>RANGE</source>
          <target state="translated">RANGE</target>
        </trans-unit>
        <trans-unit id="c5db7969dcd30635e5d7867040b6cc76158dd175" translate="yes" xml:space="preserve">
          <source>RAW</source>
          <target state="translated">RAW</target>
        </trans-unit>
        <trans-unit id="85071fc9642a31aeb812a32870f392506932a628" translate="yes" xml:space="preserve">
          <source>READCOMMITTED</source>
          <target state="translated">READCOMMITTED</target>
        </trans-unit>
        <trans-unit id="c81fcd11275974e0c42fe3b69f4579fb5562a008" translate="yes" xml:space="preserve">
          <source>READPAST</source>
          <target state="translated">READPAST</target>
        </trans-unit>
        <trans-unit id="0c97d219d43b5c2d780f866829caf6659ccd95b4" translate="yes" xml:space="preserve">
          <source>READUNCOMMITTED</source>
          <target state="translated">READUNCOMMITTED</target>
        </trans-unit>
        <trans-unit id="98576b173a3704ed9c7a7b2cf51bf056c70f0d68" translate="yes" xml:space="preserve">
          <source>READ_COMMITTED</source>
          <target state="translated">READ_COMMITTED</target>
        </trans-unit>
        <trans-unit id="61855051443526ce1354c6dfbbb1385589d20c72" translate="yes" xml:space="preserve">
          <source>READ_UNCOMMITTED</source>
          <target state="translated">READ_UNCOMMITTED</target>
        </trans-unit>
        <trans-unit id="3b330731a188b19fdf61999609e5e9b932bb400b" translate="yes" xml:space="preserve">
          <source>REAL</source>
          <target state="translated">REAL</target>
        </trans-unit>
        <trans-unit id="35818f41399b7623be79d4ece6708799ff65422b" translate="yes" xml:space="preserve">
          <source>REPEATABLEREAD</source>
          <target state="translated">REPEATABLEREAD</target>
        </trans-unit>
        <trans-unit id="7933c8f4eeae479160924ccc01192513271103d0" translate="yes" xml:space="preserve">
          <source>REPEATABLE_READ</source>
          <target state="translated">REPEATABLE_READ</target>
        </trans-unit>
        <trans-unit id="d2de16710476e50096c7fcc23018a457762110cf" translate="yes" xml:space="preserve">
          <source>ROWLOCK</source>
          <target state="translated">ROWLOCK</target>
        </trans-unit>
        <trans-unit id="639e3ac9bf3c15f412dffa9f6f9c04017303eefc" translate="yes" xml:space="preserve">
          <source>Range Operators</source>
          <target state="translated">Операторы диапазона</target>
        </trans-unit>
        <trans-unit id="48652fff66c0aa4370d5c8fba0d573037de8ea3f" translate="yes" xml:space="preserve">
          <source>Range types</source>
          <target state="translated">Типы ассортимента</target>
        </trans-unit>
        <trans-unit id="96c99c450dc81023477ef685e69a7671928973e9" translate="yes" xml:space="preserve">
          <source>Range types are data types representing a range of values of some element type (called the range's subtype). Only available in Postgres. See &lt;a href=&quot;http://www.postgresql.org/docs/9.4/static/rangetypes.html&quot;&gt;the Postgres documentation&lt;/a&gt; for more details</source>
          <target state="translated">Типы диапазонов - это типы данных, представляющие диапазон значений некоторого типа элемента (называемого подтипом диапазона). Доступно только в Postgres. См. &lt;a href=&quot;http://www.postgresql.org/docs/9.4/static/rangetypes.html&quot;&gt;Документацию Postgres&lt;/a&gt; для более подробной информации.</target>
        </trans-unit>
        <trans-unit id="5a7377dcba549345dfcab0dfa8460d8f871eb24f" translate="yes" xml:space="preserve">
          <source>Range types can be queried with all supported operators.</source>
          <target state="translated">Типы диапазонов могут быть запрошены со всеми поддерживаемыми операторами.</target>
        </trans-unit>
        <trans-unit id="0d5fda95e3940bc09dc1ccc22666813c0b54f73d" translate="yes" xml:space="preserve">
          <source>Ranges</source>
          <target state="translated">Ranges</target>
        </trans-unit>
        <trans-unit id="9f5ef9cd3f272e59c3c26c12902db3ba7d565d10" translate="yes" xml:space="preserve">
          <source>Raw queries</source>
          <target state="translated">сырые запросы</target>
        </trans-unit>
        <trans-unit id="4248bae998e3d216240b6c47e05b15e9130b7194" translate="yes" xml:space="preserve">
          <source>Raw will be added verbatim without quoting</source>
          <target state="translated">Сырое будет добавлено дословно без цитирования</target>
        </trans-unit>
        <trans-unit id="9663c8f2ab80910477b1274bc8c092ea181f86b5" translate="yes" xml:space="preserve">
          <source>Read replication</source>
          <target state="translated">Репликация для чтения</target>
        </trans-unit>
        <trans-unit id="5d20d0fee3b91643dd8d272ac33d01ca95179d82" translate="yes" xml:space="preserve">
          <source>References</source>
          <target state="translated">References</target>
        </trans-unit>
        <trans-unit id="031a37f39bcb7e10adf807d3e8cce401989e3336" translate="yes" xml:space="preserve">
          <source>Refresh the current instance in-place, i.e.</source>
          <target state="translated">Обновить текущий экземпляр на месте,т.е.</target>
        </trans-unit>
        <trans-unit id="e3bead0d664a82f06306287d9173002e149764e1" translate="yes" xml:space="preserve">
          <source>Refresh the current instance in-place, i.e. update the object with current data from the DB and return the same object. This is different from doing a &lt;code&gt;find(Instance.id)&lt;/code&gt;, because that would create and return a new instance. With this method, all references to the Instance are updated with the new data and no new objects are created.</source>
          <target state="translated">Обновить текущий экземпляр на месте, т.е. обновить объект текущими данными из БД и вернуть тот же объект. Это отличается от &lt;code&gt;find(Instance.id)&lt;/code&gt; , поскольку при этом создается и возвращается новый экземпляр. С помощью этого метода все ссылки на экземпляр обновляются новыми данными, и новые объекты не создаются.</target>
        </trans-unit>
        <trans-unit id="ca5db4fe93ba98fe1b576309acf2388052f2a36a" translate="yes" xml:space="preserve">
          <source>RegExp</source>
          <target state="translated">RegExp</target>
        </trans-unit>
        <trans-unit id="1e86d1ab3e14027eebaead6774b3afb37da45758" translate="yes" xml:space="preserve">
          <source>Relations / Associations</source>
          <target state="translated">Отношения/Ассоциации</target>
        </trans-unit>
        <trans-unit id="bc1c1bb509a7c9eefcd8074bcef69cd86f8f19ac" translate="yes" xml:space="preserve">
          <source>Reloading instances</source>
          <target state="translated">Случаи перезагрузки</target>
        </trans-unit>
        <trans-unit id="14458dc7478ac57fde39eddb8f546bb3fd24be23" translate="yes" xml:space="preserve">
          <source>Remember, that using &lt;code&gt;as&lt;/code&gt; to change the name of the association will also change the name of the foreign key. When using &lt;code&gt;as&lt;/code&gt;, it is safest to also specify the foreign key.</source>
          <target state="translated">Помните, что использование &lt;code&gt;as&lt;/code&gt; для изменения имени ассоциации также изменит имя внешнего ключа. При использовании &lt;code&gt;as&lt;/code&gt; безопаснее также указать внешний ключ.</target>
        </trans-unit>
        <trans-unit id="6d92b3105e7267474045640ff596b8906e7af063" translate="yes" xml:space="preserve">
          <source>Remove a column from a table</source>
          <target state="translated">Удалить столбец со стола</target>
        </trans-unit>
        <trans-unit id="bff645f20c7a1972d6d88b3b0359efc0ee0f30bb" translate="yes" xml:space="preserve">
          <source>Remove a constraint from a table</source>
          <target state="translated">Удалить ограничение из таблицы</target>
        </trans-unit>
        <trans-unit id="cb9d2380c9de310077c9efa21538ee05180de069" translate="yes" xml:space="preserve">
          <source>Remove an already existing index from a table</source>
          <target state="translated">Удалить уже существующий индекс из таблицы</target>
        </trans-unit>
        <trans-unit id="ab78daa0ae196a56f47e13a630c4d49dbadeaa77" translate="yes" xml:space="preserve">
          <source>Remove attribute from model definition</source>
          <target state="translated">Удалить атрибут из определения модели</target>
        </trans-unit>
        <trans-unit id="2973fb8de042ab579cc70360faec4d4d03145016" translate="yes" xml:space="preserve">
          <source>Removing hooks</source>
          <target state="translated">Съемные крючки</target>
        </trans-unit>
        <trans-unit id="91662afa90e2669fafb0bf327ba36d683b24d55a" translate="yes" xml:space="preserve">
          <source>Rename a column</source>
          <target state="translated">Переименовать колонну</target>
        </trans-unit>
        <trans-unit id="ef6f539bacc24cc94df1896ca6fcc25c1857460e" translate="yes" xml:space="preserve">
          <source>Rename a table</source>
          <target state="translated">Переименовать стол</target>
        </trans-unit>
        <trans-unit id="5c789b825fe6ffb7af34dec8ebebc9922c5740fd" translate="yes" xml:space="preserve">
          <source>Rename an SQL function</source>
          <target state="translated">Переименовать функцию SQL</target>
        </trans-unit>
        <trans-unit id="844abd7b464a7e3dcdf7de2a8921961f223adea8" translate="yes" xml:space="preserve">
          <source>Replacements</source>
          <target state="translated">Replacements</target>
        </trans-unit>
        <trans-unit id="d70b63d60d5bb03bf369a3221e7e9fa6befeb5ae" translate="yes" xml:space="preserve">
          <source>Replacements in a query can be done in two different ways, either using named parameters (starting with &lt;code&gt;:&lt;/code&gt;), or unnamed, represented by a &lt;code&gt;?&lt;/code&gt;. Replacements are passed in the options object.</source>
          <target state="translated">Замены в запросе может быть сделано двумя способами, либо с использованием именованных параметров (начиная с &lt;code&gt;:&lt;/code&gt; ), или безымянная, в лице &lt;code&gt;?&lt;/code&gt; . Замены передаются в объекте параметров.</target>
        </trans-unit>
        <trans-unit id="c8dd3270a29ae39ef2c23cbc1c10e9c2f5688a7c" translate="yes" xml:space="preserve">
          <source>Resolves an array with &amp;lt;created, primaryKey&amp;gt;</source>
          <target state="translated">Разрешает массив с &amp;lt;created, primaryKey&amp;gt;</target>
        </trans-unit>
        <trans-unit id="87df60de337fb58864343e396696d74611e0d403" translate="yes" xml:space="preserve">
          <source>Resources</source>
          <target state="translated">Resources</target>
        </trans-unit>
        <trans-unit id="bc5668827c21fe1f8f36ea7324d4d8a3dcb11ecd" translate="yes" xml:space="preserve">
          <source>Restore multiple instances if &lt;code&gt;paranoid&lt;/code&gt; is enabled.</source>
          <target state="translated">Восстановите несколько экземпляров, если включен &lt;code&gt;paranoid&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="37be80d158033bb193c3d7ed1a4181d957c6440e" translate="yes" xml:space="preserve">
          <source>Restore the row corresponding to this instance.</source>
          <target state="translated">Восстановить строку,соответствующую этому экземпляру.</target>
        </trans-unit>
        <trans-unit id="d2363df61524d7567e5af8c230d6ffbc8c9156fc" translate="yes" xml:space="preserve">
          <source>Restore the row corresponding to this instance. Only available for paranoid models.</source>
          <target state="translated">Восстановить строку,соответствующую этому экземпляру.Доступно только для параноидальных моделей.</target>
        </trans-unit>
        <trans-unit id="4634f89378d1924436e5804ae4532bb1debc2947" translate="yes" xml:space="preserve">
          <source>Restoring soft-deleted instances</source>
          <target state="translated">Восстановление мягкотекучих экземпляров</target>
        </trans-unit>
        <trans-unit id="f26f5c5c95a911b7185dd088fa0b3f892ac47881" translate="yes" xml:space="preserve">
          <source>Return Properties:</source>
          <target state="translated">Возвращение собственности:</target>
        </trans-unit>
        <trans-unit id="f664f9ed85db7232f7addc0c9bbae995ff292379" translate="yes" xml:space="preserve">
          <source>Return raw result. See sequelize.query for more information.</source>
          <target state="translated">Возвращайте необработанный результат.Дополнительные сведения см.в разделе sequelize.request.</target>
        </trans-unit>
        <trans-unit id="9d2d96565dc06a866465216373028dc31bfc11ee" translate="yes" xml:space="preserve">
          <source>Return:</source>
          <target state="translated">Return:</target>
        </trans-unit>
        <trans-unit id="a1d9b7652dc04e48059f4b18dea69d8b483420d4" translate="yes" xml:space="preserve">
          <source>ReturnType</source>
          <target state="translated">ReturnType</target>
        </trans-unit>
        <trans-unit id="f32e3242c5f0d8fcfb58c28d4f50b845b239aea2" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the row was created or updated. For MySQL/MariaDB, it returns &lt;code&gt;true&lt;/code&gt; when inserted and &lt;code&gt;false&lt;/code&gt; when updated. For Postgres/MSSQL with &lt;code&gt;options.returning&lt;/code&gt; true, it returns record and created boolean with signature &lt;code&gt;&amp;lt;Model, created&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Возвращает логическое значение, указывающее, была ли строка создана или обновлена. Для MySQL / MariaDB он возвращает &lt;code&gt;true&lt;/code&gt; при вставке и &lt;code&gt;false&lt;/code&gt; при обновлении. Для Postgres / MSSQL с &lt;code&gt;options.returning&lt;/code&gt; true он возвращает запись и созданное логическое значение с подписью &lt;code&gt;&amp;lt;Model, created&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="92777933f98de40e5798a074519518b08312bfd8" translate="yes" xml:space="preserve">
          <source>Returns an instance of QueryInterface.</source>
          <target state="translated">Возвращает экземпляр QueryInterface.</target>
        </trans-unit>
        <trans-unit id="c322d13eab7a672964dca2772283f58dabee793f" translate="yes" xml:space="preserve">
          <source>Returns the aggregate result cast to &lt;code&gt;options.dataType&lt;/code&gt;, unless &lt;code&gt;options.plain&lt;/code&gt; is false, in which case the complete data result is returned.</source>
          <target state="translated">Возвращает агрегированный результат, приведенный к &lt;code&gt;options.dataType&lt;/code&gt; , если &lt;code&gt;options.plain&lt;/code&gt; не имеет значения false, и в этом случае возвращается полный результат данных.</target>
        </trans-unit>
        <trans-unit id="103e0065273bcd078037909cef8d4cc766b70922" translate="yes" xml:space="preserve">
          <source>Returns the database name.</source>
          <target state="translated">Возвращает имя базы данных.</target>
        </trans-unit>
        <trans-unit id="a10c7b621ae5ef9b30ad1471df3f082cfe770ea5" translate="yes" xml:space="preserve">
          <source>Returns the previous value for key from &lt;code&gt;_previousDataValues&lt;/code&gt;.</source>
          <target state="translated">Возвращает предыдущее значение ключа из &lt;code&gt;_previousDataValues&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9099a16ce517a4d9ac59414ac4a523117d0007b1" translate="yes" xml:space="preserve">
          <source>Returns the specified dialect.</source>
          <target state="translated">Возвращает указанный диалект.</target>
        </trans-unit>
        <trans-unit id="4310720bd11331b7ae73d54f73813dcad1e1e28a" translate="yes" xml:space="preserve">
          <source>Returns true if model is already defined, otherwise false</source>
          <target state="translated">Возвращает true,если модель уже определена,в противном случае false</target>
        </trans-unit>
        <trans-unit id="bf0e4991b938c50573d09edc06ace4eb0dbd811c" translate="yes" xml:space="preserve">
          <source>Returns true if this instance has not yet been persisted to the database</source>
          <target state="translated">Возвращает true,если этот экземпляр еще не был сохранен в базе данных.</target>
        </trans-unit>
        <trans-unit id="2007b5e3da27ad8963cdb311ba2a3128e7cda7e9" translate="yes" xml:space="preserve">
          <source>Rollback (abort) the transaction</source>
          <target state="translated">Откат (прерывание)сделки</target>
        </trans-unit>
        <trans-unit id="8e0cccf120979b3af77ad8a694a8e18cdc3b513e" translate="yes" xml:space="preserve">
          <source>Run a describe query on the table.</source>
          <target state="translated">Запустите запрос на описание в таблице.</target>
        </trans-unit>
        <trans-unit id="8169f81a04275d99535c5a4211bee013dce2d9d3" translate="yes" xml:space="preserve">
          <source>Run an aggregation method on the specified field</source>
          <target state="translated">Запустите метод агрегирования в указанном поле.</target>
        </trans-unit>
        <trans-unit id="3439b8e48e17b209e3887f10db99898a3f33d4e1" translate="yes" xml:space="preserve">
          <source>Run before / after bulk create hooks?</source>
          <target state="translated">Запуск до/после оптового создания крючков?</target>
        </trans-unit>
        <trans-unit id="5a75a9b600e3260d17089015df07ae23e6d3703c" translate="yes" xml:space="preserve">
          <source>Run before / after bulk destroy hooks?</source>
          <target state="translated">Бегать до/после массового уничтожения крюков?</target>
        </trans-unit>
        <trans-unit id="e52da5177ddbb46f0bf29b8b84e6c8fb0b7bd630" translate="yes" xml:space="preserve">
          <source>Run before / after bulk restore hooks?</source>
          <target state="translated">Бегать до/после оптовых восстановительных крючков?</target>
        </trans-unit>
        <trans-unit id="58269ada070e42bd9ffb7febed75e9d2c7c689e1" translate="yes" xml:space="preserve">
          <source>Run before / after bulk update hooks?</source>
          <target state="translated">Запуск до/после оптовых крючков обновления?</target>
        </trans-unit>
        <trans-unit id="18d6ef3bc4c10e371b0cd91efbfe8df85e68a008" translate="yes" xml:space="preserve">
          <source>Run before / after create hooks for each individual Instance? BulkCreate hooks will still be run if options.hooks is true.</source>
          <target state="translated">Запуск до/после создания крючков для каждой отдельной Экстрасенсорной станции? BulkCreate крюки все равно будут запущены,если options.hooks верно.</target>
        </trans-unit>
        <trans-unit id="0b8459e34068807e1eb3c85fad215b35c650ee7e" translate="yes" xml:space="preserve">
          <source>Run before / after update hooks?. If true, this will execute a SELECT followed by individual UPDATEs. A select is needed, because the row data needs to be passed to the hooks</source>
          <target state="translated">Бегать до/после крючков с обновлениями? Если переменная имеет значение true,то выполняется SELECT,за которым следуют отдельные UPDATE.Выбор необходим,так как данные строки должны быть переданы перехватчикам.</target>
        </trans-unit>
        <trans-unit id="e5cedd10390a9d3b239800334f224886fe370712" translate="yes" xml:space="preserve">
          <source>Run before / after upsert hooks?</source>
          <target state="translated">Бегать до/после крючков?</target>
        </trans-unit>
        <trans-unit id="a944f09a5a793cb75f92d040f95fa4f35da5420c" translate="yes" xml:space="preserve">
          <source>Run before and after create / update + validate hooks</source>
          <target state="translated">Запуск до и после создания/обновление+проверка крючков</target>
        </trans-unit>
        <trans-unit id="2ae7654b4055b38aa79d971e21b65027b2ca1df7" translate="yes" xml:space="preserve">
          <source>Run before and after validate hooks</source>
          <target state="translated">Бегите до и после проверки крючков.</target>
        </trans-unit>
        <trans-unit id="eb7bcd25188536a53fb43bbd3bb4651b7f53eae7" translate="yes" xml:space="preserve">
          <source>Run built-in type validators on insert and update, and select with where clause, e.g. validate that arguments passed to integer fields are integer-like.</source>
          <target state="translated">Запустите встроенные валидаторы типов при вставке и обновлении,и выберите пункт &quot;где&quot;,например,подтвердите,что аргументы,переданные в целочисленные поля,являются целочисленными.</target>
        </trans-unit>
        <trans-unit id="b6577a96503f5049bd73f30cf24b51eebe5f6b78" translate="yes" xml:space="preserve">
          <source>Run validation for the join model</source>
          <target state="translated">Запустите проверку для модели соединения</target>
        </trans-unit>
        <trans-unit id="85489a3587bf76a40730b08a2f8006ba1c2c454c" translate="yes" xml:space="preserve">
          <source>Run validation for the join model.</source>
          <target state="translated">Запустите проверку для модели соединения.</target>
        </trans-unit>
        <trans-unit id="8b1ee002e28b50380a23fec36c627e6248c45e67" translate="yes" xml:space="preserve">
          <source>Run validations before the row is inserted</source>
          <target state="translated">Запустите проверку перед тем,как строка будет вставлена</target>
        </trans-unit>
        <trans-unit id="309084555a84115c15bd76ae9ab2d30a30649897" translate="yes" xml:space="preserve">
          <source>Running Migrations</source>
          <target state="translated">Бегущая миграция</target>
        </trans-unit>
        <trans-unit id="c58ea185833c0872e448165cd1c7703ab76a90b8" translate="yes" xml:space="preserve">
          <source>Running Seeds</source>
          <target state="translated">Бегущие семена</target>
        </trans-unit>
        <trans-unit id="a4942c26d0735947d8a22a2fbe2735a12e381808" translate="yes" xml:space="preserve">
          <source>SELECT</source>
          <target state="translated">SELECT</target>
        </trans-unit>
        <trans-unit id="d5a57bf501dacfbda90f27fd318b8cd457a96a1b" translate="yes" xml:space="preserve">
          <source>SERIALIZABLE</source>
          <target state="translated">SERIALIZABLE</target>
        </trans-unit>
        <trans-unit id="a9b25d35e6e01edfdd65178492d182aba6d34218" translate="yes" xml:space="preserve">
          <source>SET NULL if foreignKey allows nulls, CASCADE if otherwise</source>
          <target state="translated">SET NULL если foreignKey разрешает nulls,CASCADE если иначе</target>
        </trans-unit>
        <trans-unit id="516cdbb3e5db4db95fd51e4b0171ee222656aff6" translate="yes" xml:space="preserve">
          <source>SET NULL if foreignKey allows nulls, NO ACTION if otherwise</source>
          <target state="translated">SET NULL если foreignKey допускает nulls,NO ACTION если иначе</target>
        </trans-unit>
        <trans-unit id="4171eb087f6af62c707c7159e3b00d2346badde5" translate="yes" xml:space="preserve">
          <source>SET_DEFERRED</source>
          <target state="translated">SET_DEFERRED</target>
        </trans-unit>
        <trans-unit id="68149187501fb70315f6e8131bbf9fe48348ed17" translate="yes" xml:space="preserve">
          <source>SET_IMMEDIATE</source>
          <target state="translated">SET_IMMEDIATE</target>
        </trans-unit>
        <trans-unit id="dd19b86ae45a271261a2769df9693b7eeeac1d33" translate="yes" xml:space="preserve">
          <source>SHARE</source>
          <target state="translated">SHARE</target>
        </trans-unit>
        <trans-unit id="212e619789f81c3e0d20848be5f4e29b8020d588" translate="yes" xml:space="preserve">
          <source>SHOWCONSTRAINTS</source>
          <target state="translated">SHOWCONSTRAINTS</target>
        </trans-unit>
        <trans-unit id="f7b0cacf516079a8ab39ad0cda85a7099d7671b2" translate="yes" xml:space="preserve">
          <source>SHOWINDEXES</source>
          <target state="translated">SHOWINDEXES</target>
        </trans-unit>
        <trans-unit id="e786763f51c96fb966cfe9993f619969600fcb2d" translate="yes" xml:space="preserve">
          <source>SHOWTABLES</source>
          <target state="translated">SHOWTABLES</target>
        </trans-unit>
        <trans-unit id="9e170c7c7025a1a5f7c3857f8315cf4ac6db1d72" translate="yes" xml:space="preserve">
          <source>SMALLINT</source>
          <target state="translated">SMALLINT</target>
        </trans-unit>
        <trans-unit id="f956ed3dc3c576285c7137ae67e24c69f9266d1d" translate="yes" xml:space="preserve">
          <source>SNAPSHOT</source>
          <target state="translated">SNAPSHOT</target>
        </trans-unit>
        <trans-unit id="fb9477462cfa5f60b14431efb98e90a54887f14e" translate="yes" xml:space="preserve">
          <source>SQL type of function returned value</source>
          <target state="translated">SQL-тип функции возвращаемое значение</target>
        </trans-unit>
        <trans-unit id="9f09ccbd1cfb65aced3eb531305e671e40b95dd3" translate="yes" xml:space="preserve">
          <source>SQLite</source>
          <target state="translated">SQLite</target>
        </trans-unit>
        <trans-unit id="b751b9c16bf3667739f71a4e1c056e70944f0120" translate="yes" xml:space="preserve">
          <source>SQLite - Implemented as two queries &lt;code&gt;INSERT; UPDATE&lt;/code&gt;. This means that the update is executed regardless of whether the row already existed or not</source>
          <target state="translated">SQLite - реализован в виде двух запросов &lt;code&gt;INSERT; UPDATE&lt;/code&gt; . Это означает, что обновление выполняется независимо от того, существовала строка уже или нет.</target>
        </trans-unit>
        <trans-unit id="adfd5586a4984b594806377be1a9f4e09a8df4c1" translate="yes" xml:space="preserve">
          <source>SRID of type</source>
          <target state="translated">SRID типа</target>
        </trans-unit>
        <trans-unit id="da5aba16204ebd88821d2bbf3642268c4231fb1f" translate="yes" xml:space="preserve">
          <source>STRING</source>
          <target state="translated">STRING</target>
        </trans-unit>
        <trans-unit id="1d61ec39e663f6e58702a7ad1738531fa768fb9c" translate="yes" xml:space="preserve">
          <source>STRING A variable length string</source>
          <target state="translated">СТРАНИЦА переменной длины</target>
        </trans-unit>
        <trans-unit id="d41f19dfee39725e336978083f9a8c5f6b3be7a4" translate="yes" xml:space="preserve">
          <source>STRING#constructor</source>
          <target state="translated">STRING#constructor</target>
        </trans-unit>
        <trans-unit id="0bf4823535962139cb43d7dd88554175707982d1" translate="yes" xml:space="preserve">
          <source>Schema name to create</source>
          <target state="translated">Название схемы для создания</target>
        </trans-unit>
        <trans-unit id="6c80a5b04edfdb2a6f83ba6280a271386f52ac29" translate="yes" xml:space="preserve">
          <source>Schema name to drop</source>
          <target state="translated">Название схемы для сброса</target>
        </trans-unit>
        <trans-unit id="6e28871105300b1a9e39344d8c2f862f59f05a20" translate="yes" xml:space="preserve">
          <source>Scope Error.</source>
          <target state="translated">Ошибка в сфере действия.</target>
        </trans-unit>
        <trans-unit id="89f9f3e1b3d3732f4f20df80017d0f8219871f92" translate="yes" xml:space="preserve">
          <source>Scope Error. Thrown when the sequelize cannot query the specified scope.</source>
          <target state="translated">Ошибка в сфере действия.Выбрасывается,когда секвелизация не может запросить указанную область.</target>
        </trans-unit>
        <trans-unit id="c23540e5fb551edff0ac95649a1d551f9736d55e" translate="yes" xml:space="preserve">
          <source>Scopes</source>
          <target state="translated">Scopes</target>
        </trans-unit>
        <trans-unit id="0da8a5956aaa3c85b91d3f215267b4fade7bdd85" translate="yes" xml:space="preserve">
          <source>Scopes apply to &lt;code&gt;.find&lt;/code&gt;, &lt;code&gt;.findAll&lt;/code&gt;, &lt;code&gt;.count&lt;/code&gt;, &lt;code&gt;.update&lt;/code&gt;, &lt;code&gt;.increment&lt;/code&gt; and &lt;code&gt;.destroy&lt;/code&gt;.</source>
          <target state="translated">Области действия применяются к &lt;code&gt;.find&lt;/code&gt; , &lt;code&gt;.findAll&lt;/code&gt; , &lt;code&gt;.count&lt;/code&gt; , &lt;code&gt;.update&lt;/code&gt; , &lt;code&gt;.increment&lt;/code&gt; и &lt;code&gt;.destroy&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7e8a81b0184917a8413801eb97f5c4f1a30e16de" translate="yes" xml:space="preserve">
          <source>Scopes are applied by calling &lt;code&gt;.scope&lt;/code&gt; on the model definition, passing the name of one or more scopes. &lt;code&gt;.scope&lt;/code&gt; returns a fully functional model instance with all the regular methods: &lt;code&gt;.findAll&lt;/code&gt;, &lt;code&gt;.update&lt;/code&gt;, &lt;code&gt;.count&lt;/code&gt;, &lt;code&gt;.destroy&lt;/code&gt; etc. You can save this model instance and reuse it later:</source>
          <target state="translated">Области действия применяются путем вызова &lt;code&gt;.scope&lt;/code&gt; определения модели с передачей имени одной или нескольких областей. &lt;code&gt;.scope&lt;/code&gt; возвращает полностью функциональный экземпляр модели со всеми обычными методами: &lt;code&gt;.findAll&lt;/code&gt; , &lt;code&gt;.update&lt;/code&gt; , &lt;code&gt;.count&lt;/code&gt; , &lt;code&gt;.destroy&lt;/code&gt; и т. д. Вы можете сохранить этот экземпляр модели и повторно использовать его позже:</target>
        </trans-unit>
        <trans-unit id="120923523c35c563d8ac081091bf3511da3a4321" translate="yes" xml:space="preserve">
          <source>Scopes are defined in the model definition and can be finder objects, or functions returning finder objects - except for the default scope, which can only be an object:</source>
          <target state="translated">Охваты определяются в определении модели и могут быть объектами-поисковиками,или функциями,возвращающими объекты-поисковики-за исключением диапазона по умолчанию,который может быть только объектом:</target>
        </trans-unit>
        <trans-unit id="c3a5b1f2c5fdd9c8b47aa2b2dc6c11a18f6dd918" translate="yes" xml:space="preserve">
          <source>Scopes which are functions can be invoked in two ways. If the scope does not take any arguments it can be invoked as normally. If the scope takes arguments, pass an object:</source>
          <target state="translated">Области,которые являются функциями,могут вызываться двумя способами.Если область видимости не принимает аргументов,то она может быть вызвана как обычно.Если область видимости принимает аргументы,передайте объект:</target>
        </trans-unit>
        <trans-unit id="a39e965661725cc234f9253f0b7566cfa5aa18e4" translate="yes" xml:space="preserve">
          <source>Scoping allows you to define commonly used queries that you can easily use later. Scopes can include all the same attributes as regular finders, &lt;code&gt;where&lt;/code&gt;, &lt;code&gt;include&lt;/code&gt;, &lt;code&gt;limit&lt;/code&gt; etc.</source>
          <target state="translated">Область видимости позволяет вам определять часто используемые запросы, которые вы можете легко использовать позже. Области применения могут включать в себя все те же атрибуты , как обычные искатели, &lt;code&gt;where&lt;/code&gt; , &lt;code&gt;include&lt;/code&gt; , &lt;code&gt;limit&lt;/code&gt; и т.д.</target>
        </trans-unit>
        <trans-unit id="28a2e804b07e3185be2ca5de143ec18a821eeacf" translate="yes" xml:space="preserve">
          <source>Search for a single instance by its primary key._</source>
          <target state="translated">Поиск одного экземпляра по его первичному ключу._</target>
        </trans-unit>
        <trans-unit id="fab27cb2bedf60f526ca0afd3fc62f8ddebfb13b" translate="yes" xml:space="preserve">
          <source>Search for a single instance.</source>
          <target state="translated">Поиск одного экземпляра.</target>
        </trans-unit>
        <trans-unit id="960425bfa22ad385f9c4f8d364ce932418a965ec" translate="yes" xml:space="preserve">
          <source>Search for a single instance. This applies LIMIT 1, so the listener will always be called with a single instance.</source>
          <target state="translated">Поиск одного экземпляра.При этом применяется LIMIT 1,поэтому слушатель всегда будет вызываться с одним экземпляром.</target>
        </trans-unit>
        <trans-unit id="069d800301b1242814d076a9ba69c25a797f1f8e" translate="yes" xml:space="preserve">
          <source>Search for multiple instances.</source>
          <target state="translated">Поиск нескольких экземпляров.</target>
        </trans-unit>
        <trans-unit id="8993db7b4561dcbe3dd7ed07347b984ed185c0d8" translate="yes" xml:space="preserve">
          <source>Second, you can define multiple fields and the value you want to add to them.</source>
          <target state="translated">Во-вторых,вы можете определить несколько полей и значение,которое вы хотите к ним добавить.</target>
        </trans-unit>
        <trans-unit id="ec7f6561b6ed5b2dc36973b0b6a102cca134bcc5" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/chriso/validator.js&quot;&gt;the validator.js project&lt;/a&gt; for more details on the built in validation methods.</source>
          <target state="translated">См. &lt;a href=&quot;https://github.com/chriso/validator.js&quot;&gt;Проект validator.js&lt;/a&gt; для получения более подробной информации о встроенных методах проверки.</target>
        </trans-unit>
        <trans-unit id="07e8786ffa4a2d3cefb67f6c2682f38e69cd4492" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/sequelize/sequelize/issues/9421&quot;&gt;Issue #9421&lt;/a&gt; for the original API proposal.</source>
          <target state="translated">См. &lt;a href=&quot;https://github.com/sequelize/sequelize/issues/9421&quot;&gt;Выпуск № 9421&lt;/a&gt; с исходным предложением API.</target>
        </trans-unit>
        <trans-unit id="1351883340089e7a2bcb762253ecf4041042e52a" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;Sequelize.Transaction.ISOLATION_LEVELS&lt;/code&gt; for possible options</source>
          <target state="translated">См. Возможные варианты в &lt;code&gt;Sequelize.Transaction.ISOLATION_LEVELS&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2e4393e4d3bf760304fc86105ac68898ba048a63" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;Sequelize.Transaction.TYPES&lt;/code&gt; for possible options. Sqlite only.</source>
          <target state="translated">См. Возможные варианты в &lt;code&gt;Sequelize.Transaction.TYPES&lt;/code&gt; . Только Sqlite.</target>
        </trans-unit>
        <trans-unit id="3d323498fbf8da4d96a2d24a82b136e39ed2843c" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;save&lt;/code&gt;</source>
          <target state="translated">Смотрите &lt;code&gt;save&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ace885d5833656cb1c6adb455769af99c14b9057" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;set&lt;/code&gt;</source>
          <target state="translated">Смотрите &lt;code&gt;set&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="024d73cf82d16e67fc37c547b52a0b71943ce794" translate="yes" xml:space="preserve">
          <source>See aggregate</source>
          <target state="translated">См.агрегат</target>
        </trans-unit>
        <trans-unit id="4bd3fe9b400efeaa997586b22cc7de7636c4dc47" translate="yes" xml:space="preserve">
          <source>See findAll options</source>
          <target state="translated">См.поискВсе варианты</target>
        </trans-unit>
        <trans-unit id="c877fd0b0a721c9f9e045768cc3bad7950900f4d" translate="yes" xml:space="preserve">
          <source>See more options in the &lt;a href=&quot;../class/lib/sequelize.js~sequelize#instance-method-query&quot;&gt;query API reference&lt;/a&gt;. Some examples below:</source>
          <target state="translated">Дополнительные параметры см. В &lt;a href=&quot;../class/lib/sequelize.js~sequelize#instance-method-query&quot;&gt;справочнике по API запросов&lt;/a&gt; . Некоторые примеры ниже:</target>
        </trans-unit>
        <trans-unit id="497dea2253a9763272c1d3ca91776ece14a847f1" translate="yes" xml:space="preserve">
          <source>See:</source>
          <target state="translated">See:</target>
        </trans-unit>
        <trans-unit id="70fdde700db9f86cb1ddf1248d1df7f946f66ee1" translate="yes" xml:space="preserve">
          <source>Seed Storage</source>
          <target state="translated">Хранение семян</target>
        </trans-unit>
        <trans-unit id="e0b6db6ffee2cbd17752e8f5ccec39fea1096673" translate="yes" xml:space="preserve">
          <source>Seeders can be undone if they are using any storage. There are two commands available for that:</source>
          <target state="translated">Сеялки могут быть разобраны,если они используют любое хранилище.Для этого доступны две команды:</target>
        </trans-unit>
        <trans-unit id="5746f22dcc2f068faa833d6223ba0cc62b54931a" translate="yes" xml:space="preserve">
          <source>Select all the attributes of the model, except some few. Useful for security purposes e.g. &lt;code&gt;{ attributes: { exclude: ['password'] } }&lt;/code&gt;</source>
          <target state="translated">Выберите все атрибуты модели, за исключением некоторых. Полезно в целях безопасности, например &lt;code&gt;{ attributes: { exclude: ['password'] } }&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="41a8019f87ab381882d8e3b6b81923fda67be63c" translate="yes" xml:space="preserve">
          <source>Select all the attributes of the model, plus some additional ones. Useful for aggregations, e.g. &lt;code&gt;{ attributes: { include: [[sequelize.fn('COUNT', sequelize.col('id')), 'total']] }&lt;/code&gt;</source>
          <target state="translated">Выберите все атрибуты модели, а также некоторые дополнительные. Полезно для агрегирования, например &lt;code&gt;{ attributes: { include: [[sequelize.fn('COUNT', sequelize.col('id')), 'total']] }&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="32248b4544c4dacee860f46416e5a89b6310bc5c" translate="yes" xml:space="preserve">
          <source>Sequelize</source>
          <target state="translated">Sequelize</target>
        </trans-unit>
        <trans-unit id="e2146c89a9fedc9608681248e18eec20d2a15b61" translate="yes" xml:space="preserve">
          <source>Sequelize CLI can read from both &lt;code&gt;JSON&lt;/code&gt; and &lt;code&gt;JS&lt;/code&gt; files. This can be setup with &lt;code&gt;.sequelizerc&lt;/code&gt; file. Let see how</source>
          <target state="translated">Sequelize CLI может читать как файлы &lt;code&gt;JSON&lt;/code&gt; ,так и &lt;code&gt;JS&lt;/code&gt; . Это можно настроить с &lt;code&gt;.sequelizerc&lt;/code&gt; файла .sequelizerc . Посмотрим, как</target>
        </trans-unit>
        <trans-unit id="d4e7d933f4662f9cc8cb13c8bed0106857a7e2e5" translate="yes" xml:space="preserve">
          <source>Sequelize Models are ES6 classes. You can very easily add custom instance or class level methods.</source>
          <target state="translated">Модели Sequelize-это классы ES6.Вы можете очень легко добавить пользовательские методы уровня экземпляра или класса.</target>
        </trans-unit>
        <trans-unit id="42cba3a975a7135ac3fdb91096b3ca70b1caed5b" translate="yes" xml:space="preserve">
          <source>Sequelize allow setting &lt;code&gt;underscored&lt;/code&gt; option for Model. When &lt;code&gt;true&lt;/code&gt; this option will set the &lt;code&gt;field&lt;/code&gt; option on all attributes to the underscored version of its name. This also applies to foreign keys generated by associations.</source>
          <target state="translated">Sequelize позволяет установить &lt;code&gt;underscored&lt;/code&gt; опцию для модели. Если установлено значение &lt;code&gt;true&lt;/code&gt; , этот параметр установит для всех атрибутов значение &lt;code&gt;field&lt;/code&gt; с подчеркнутой версией его имени. Это также относится к внешним ключам, созданным ассоциациями.</target>
        </trans-unit>
        <trans-unit id="3618d92886b90e0ab93af574f3df0c6f87d7dfdb" translate="yes" xml:space="preserve">
          <source>Sequelize allows setting specific strings as aliases for operators. With v5 this will give you deprecation warning.</source>
          <target state="translated">Sequelize позволяет задавать конкретные строки в качестве псевдонимов для операторов.С помощью v5 это даст вам предупреждение о депрессии.</target>
        </trans-unit>
        <trans-unit id="e1a257d276e4f1e9e9194ab2befc2ae82a6fdc63" translate="yes" xml:space="preserve">
          <source>Sequelize also defines by default the fields &lt;code&gt;id&lt;/code&gt; (primary key), &lt;code&gt;createdAt&lt;/code&gt; and &lt;code&gt;updatedAt&lt;/code&gt; to every model. This behavior can also be changed, of course (check the API Reference to learn more about the available options).</source>
          <target state="translated">Sequelize также определяет по умолчанию поля &lt;code&gt;id&lt;/code&gt; (первичный ключ), &lt;code&gt;createdAt&lt;/code&gt; и &lt;code&gt;updatedAt&lt;/code&gt; для каждой модели. Конечно, это поведение также можно изменить (см. Справочник по API, чтобы узнать больше о доступных параметрах).</target>
        </trans-unit>
        <trans-unit id="721ff79958c22990fcc428727c9a1a0b30bc8dc9" translate="yes" xml:space="preserve">
          <source>Sequelize constructor</source>
          <target state="translated">Секвелизации конструктор</target>
        </trans-unit>
        <trans-unit id="7b4a61bf7618bb5f80a735c5adcc86dc7d0d54b9" translate="yes" xml:space="preserve">
          <source>Sequelize doesn't create new datatypes in the database. This tutorial explains how to make Sequelize recognize new datatypes and assumes that those new datatypes are already created in the database.</source>
          <target state="translated">Секвелизация не создает новых типов данных в базе данных.В этом уроке объясняется,как заставить Sequelize распознавать новые типы данных,и предполагается,что эти новые типы данных уже созданы в базе данных.</target>
        </trans-unit>
        <trans-unit id="4d7b6d0de168876f640bde5fff3cf527c4f93ef6" translate="yes" xml:space="preserve">
          <source>Sequelize exposes symbol operators that can be used for to create more complex comparisons -</source>
          <target state="translated">Sequelize exposes символьные операторы,которые могут быть использованы для создания более сложных сравнений -</target>
        </trans-unit>
        <trans-unit id="bfdf0968a46e379a3d919cbabea542fb8b4773b7" translate="yes" xml:space="preserve">
          <source>Sequelize follows &lt;a href=&quot;http://semver.org&quot;&gt;SEMVER&lt;/a&gt;. Supports Node v10 and above to use ES6 features.</source>
          <target state="translated">Sequelize следует за &lt;a href=&quot;http://semver.org&quot;&gt;SEMVER&lt;/a&gt; . Поддерживает Node v10 и выше для использования функций ES6.</target>
        </trans-unit>
        <trans-unit id="582d78da6df00a995534b3b583b979009f68d4d2" translate="yes" xml:space="preserve">
          <source>Sequelize has a &lt;a href=&quot;https://github.com/sequelize/umzug&quot;&gt;sister library&lt;/a&gt; for programmatically handling execution and logging of migration tasks.</source>
          <target state="translated">У Sequelize есть &lt;a href=&quot;https://github.com/sequelize/umzug&quot;&gt;родственная библиотека&lt;/a&gt; для программной обработки выполнения и ведения журнала задач миграции.</target>
        </trans-unit>
        <trans-unit id="0f211261e93475264da544d79e18f72b323197b2" translate="yes" xml:space="preserve">
          <source>Sequelize has a lot of options for querying. You will learn more about those in the next tutorials. It is also possible to make raw SQL queries, if you really need them.</source>
          <target state="translated">Sequelize имеет много вариантов для запроса.Подробнее о них вы узнаете в следующих учебниках.Также можно делать сырые SQL-запросы,если они вам действительно нужны.</target>
        </trans-unit>
        <trans-unit id="7263ca838cabf21a169aeceea9b8f1d1793343c6" translate="yes" xml:space="preserve">
          <source>Sequelize has built-in support for optimistic locking through a model instance version count. Optimistic locking is disabled by default and can be enabled by setting the &lt;code&gt;version&lt;/code&gt; property to true in a specific model definition or global model configuration. See &lt;a href=&quot;models-definition#configuration&quot;&gt;model configuration&lt;/a&gt; for more details.</source>
          <target state="translated">Sequelize имеет встроенную поддержку оптимистической блокировки через счетчик версий экземпляра модели. Оптимистическая блокировка отключена по умолчанию и может быть включена путем установки &lt;code&gt;version&lt;/code&gt; свойства верны в определении конкретной модели или глобальной конфигурации модели. Смотрите &lt;a href=&quot;models-definition#configuration&quot;&gt;конфигурацию модели&lt;/a&gt; для более подробной информации.</target>
        </trans-unit>
        <trans-unit id="4a8d11578adeef3bffa53be612d3c8ec4ca15c7f" translate="yes" xml:space="preserve">
          <source>Sequelize has two different but related scope concepts in relation to associations. The difference is subtle but important:</source>
          <target state="translated">Sequelize имеет два различных,но связанных между собой понятия сферы действия по отношению к ассоциациям.Разница тонкая,но важная:</target>
        </trans-unit>
        <trans-unit id="4ba21fa010de136fd468609c0c7c0382ac4107cd" translate="yes" xml:space="preserve">
          <source>Sequelize is a promise-based Node.js ORM for Postgres, MySQL, MariaDB, SQLite and Microsoft SQL Server. It features solid transaction support, relations, eager and lazy loading, read replication and more.</source>
          <target state="translated">Sequelize-это многообещающий Node.js ORM для Postgres,MySQL,MariaDB,SQLite и Microsoft SQL Server.В нем реализована надежная поддержка транзакций,связи,активная и ленивая загрузка,репликация для чтения и многое другое.</target>
        </trans-unit>
        <trans-unit id="4f3657d8fd42ca903f769974a0aa3a98de7ae752" translate="yes" xml:space="preserve">
          <source>Sequelize is available via &lt;a href=&quot;https://www.npmjs.com/package/sequelize&quot;&gt;npm&lt;/a&gt; (or &lt;a href=&quot;https://yarnpkg.com/package/sequelize&quot;&gt;yarn&lt;/a&gt;).</source>
          <target state="translated">Sequelize доступен через &lt;a href=&quot;https://www.npmjs.com/package/sequelize&quot;&gt;НПМ&lt;/a&gt; (или &lt;a href=&quot;https://yarnpkg.com/package/sequelize&quot;&gt;нити&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="18b9d1b705db8b8f2a74b7b8fef93c710c1730a2" translate="yes" xml:space="preserve">
          <source>Sequelize is independent from specific dialects. This means that you'll have to install the respective connector library to your project yourself.</source>
          <target state="translated">Секвелизация не зависит от конкретных диалектов.Это означает,что вам придется установить соответствующую библиотеку разъемов в ваш проект самостоятельно.</target>
        </trans-unit>
        <trans-unit id="4a6b2a1acf807c379b8c8b09642b38a4ae6ec2eb" translate="yes" xml:space="preserve">
          <source>Sequelize provides a host of custom error classes, to allow you to do easier debugging.</source>
          <target state="translated">Sequelize предоставляет множество пользовательских классов ошибок,что упрощает отладку.</target>
        </trans-unit>
        <trans-unit id="2aa8bb1c410e7760da89fe1a39dd3cd6a3e6c8b6" translate="yes" xml:space="preserve">
          <source>Sequelize provides a host of custom error classes, to allow you to do easier debugging. All of these errors are exposed on the sequelize object and the sequelize constructor. All sequelize errors inherit from the base JS error object.</source>
          <target state="translated">Sequelize предоставляет множество пользовательских классов ошибок,что упрощает отладку.Все эти ошибки выставляются на объект sequelize и конструктор sequelize.Все ошибки секвелизации наследуются от базового объекта JS error.</target>
        </trans-unit>
        <trans-unit id="a36909b9f875b9c379cfbfd57865704470509efb" translate="yes" xml:space="preserve">
          <source>Sequelize provides four hooks that are executed immediately before and after a database connection is obtained or released:</source>
          <target state="translated">Sequelize предоставляет четыре крюка,которые выполняются непосредственно до и после получения или освобождения соединения с БД:</target>
        </trans-unit>
        <trans-unit id="e0048a920cbe256e0d63314bbc8a801ba350b416" translate="yes" xml:space="preserve">
          <source>Sequelize supports adding indexes to the model definition which will be created during &lt;code&gt;Model.sync()&lt;/code&gt; or &lt;code&gt;sequelize.sync&lt;/code&gt;.</source>
          <target state="translated">Sequelize поддерживает добавление индексов к определению модели, которое будет создано во время &lt;code&gt;Model.sync()&lt;/code&gt; или &lt;code&gt;sequelize.sync&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e4b3b84765405016ac507be4f755d3663a4fd35c" translate="yes" xml:space="preserve">
          <source>Sequelize supports read replication, i.e. having multiple servers that you can connect to when you want to do a SELECT query. When you do read replication, you specify one or more servers to act as read replicas, and one server to act as the write master, which handles all writes and updates and propagates them to the replicas (note that the actual replication process is &lt;strong&gt;not&lt;/strong&gt; handled by Sequelize, but should be set up by database backend).</source>
          <target state="translated">Sequelize поддерживает репликацию чтения, то есть наличие нескольких серверов, к которым вы можете подключиться, когда хотите выполнить запрос SELECT. Когда вы выполняете репликацию чтения, вы указываете один или несколько серверов, которые будут действовать как реплики чтения, и один сервер, который будет действовать как мастер записи, который обрабатывает все записи и обновления и распространяет их на реплики (обратите внимание, что фактический процесс репликации &lt;strong&gt;не&lt;/strong&gt; обрабатывается by Sequelize, но должен быть настроен серверной частью базы данных).</target>
        </trans-unit>
        <trans-unit id="006e3c87cc46067f193d6da3dab1bfcaffa32b0b" translate="yes" xml:space="preserve">
          <source>Sequelize supports two ways of using transactions:</source>
          <target state="translated">Sequelize поддерживает два способа использования транзакций:</target>
        </trans-unit>
        <trans-unit id="036964a4746f86bd146c4ce057424fa1c7bc9c18" translate="yes" xml:space="preserve">
          <source>Sequelize uses a pool to manage connections to your replicas. Internally Sequelize will maintain two pools created using &lt;code&gt;pool&lt;/code&gt; configuration.</source>
          <target state="translated">Sequelize использует пул для управления подключениями к вашим репликам. Внутренне Sequelize будет поддерживать два пула, созданных с использованием конфигурации &lt;code&gt;pool&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f3e08a634ed03d6ae6ccb3b71d35f62d841795e4" translate="yes" xml:space="preserve">
          <source>Sequelize v6 is the next major release after v5</source>
          <target state="translated">Sequelize v6-следующий мажорный релиз после v5.</target>
        </trans-unit>
        <trans-unit id="ccdb0706a39fddeebf0c225ab4959b82d3aa0355" translate="yes" xml:space="preserve">
          <source>Sequelize v6 will only support Node 10 and up &lt;a href=&quot;https://github.com/sequelize/sequelize/issues/10821&quot;&gt;#10821&lt;/a&gt;</source>
          <target state="translated">Sequelize v6 будет поддерживать только Node 10 и выше &lt;a href=&quot;https://github.com/sequelize/sequelize/issues/10821&quot;&gt;# 10821&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2c102a252e5d170808923d2726cbd5f00c38cafd" translate="yes" xml:space="preserve">
          <source>Sequelize will assume your table has a &lt;code&gt;id&lt;/code&gt; primary key property by default.</source>
          <target state="translated">Sequelize будет предполагать, что ваша таблица по умолчанию имеет свойство первичного ключа &lt;code&gt;id&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6741146fb708be669cc08fc88bbcd0daae0ce352" translate="yes" xml:space="preserve">
          <source>Sequelize will keep the connection open by default, and use the same connection for all queries. If you need to close the connection, call &lt;code&gt;sequelize.close()&lt;/code&gt; (which is asynchronous and returns a Promise).</source>
          <target state="translated">Sequelize будет держать соединение открытым по умолчанию и использовать одно и то же соединение для всех запросов. Если вам нужно закрыть соединение, вызовите &lt;code&gt;sequelize.close()&lt;/code&gt; (который является асинхронным и возвращает Promise).</target>
        </trans-unit>
        <trans-unit id="a12449a9563abf0e30ea48fb1e83208aaaae5d36" translate="yes" xml:space="preserve">
          <source>Sequelize will warn you if you're using the default aliases and not limiting them if you want to keep using all default aliases (excluding legacy ones) without the warning you can pass the following operatorsAliases option -</source>
          <target state="translated">Sequelize предупредит вас,если вы используете псевдонимы по умолчанию и не ограничиваете их,если вы хотите продолжать использовать все псевдонимы по умолчанию (за исключением наследственных)без предупреждения,вы можете передать следующую опцию operatorsAliases -</target>
        </trans-unit>
        <trans-unit id="552ca2f07a1fa7b5f7f41ab559cdc21d42d9ce70" translate="yes" xml:space="preserve">
          <source>Sequelize#fn</source>
          <target state="translated">Sequelize#fn</target>
        </trans-unit>
        <trans-unit id="61837406268cdb0d0b12c58a96e894f36f68cffc" translate="yes" xml:space="preserve">
          <source>Sequelize#query</source>
          <target state="translated">Sequelize#query</target>
        </trans-unit>
        <trans-unit id="c1b1daf0403c51efc06b9fcce975a7758d97a2aa" translate="yes" xml:space="preserve">
          <source>Sequelize-fixture</source>
          <target state="translated">Sequelize-fixture</target>
        </trans-unit>
        <trans-unit id="eed9460d8f90f2047f6e2bc967a20ec28c21c2e5" translate="yes" xml:space="preserve">
          <source>Sequelize-fixtures</source>
          <target state="translated">Sequelize-fixtures</target>
        </trans-unit>
        <trans-unit id="1a72bb27f77c646d89aab78edf53acbb911b806d" translate="yes" xml:space="preserve">
          <source>Sequelize.col</source>
          <target state="translated">Sequelize.col</target>
        </trans-unit>
        <trans-unit id="665023dac1be695aaeba85969fe1a94f8c091b07" translate="yes" xml:space="preserve">
          <source>Sequelize.define</source>
          <target state="translated">Sequelize.define</target>
        </trans-unit>
        <trans-unit id="730bfedd2958c7bec5b31d0621a9c26c5d74f1d4" translate="yes" xml:space="preserve">
          <source>Sequelize.fn and Sequelize.col returns functions and quoted column names</source>
          <target state="translated">Sequelize.fn и Sequelize.col возвращает функции и имена цитируемых колонок.</target>
        </trans-unit>
        <trans-unit id="78fe18b652a0073892cad047536d322fec1fca96" translate="yes" xml:space="preserve">
          <source>Sequelize.transaction</source>
          <target state="translated">Sequelize.transaction</target>
        </trans-unit>
        <trans-unit id="9dfa6b97e674513041a192d1bad9a14a9b372dd7" translate="yes" xml:space="preserve">
          <source>SequelizeScopeError</source>
          <target state="translated">SequelizeScopeError</target>
        </trans-unit>
        <trans-unit id="ae2472523ae42a6de56284d423ed256bd57c04c4" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;ON UPDATE&lt;/code&gt;</source>
          <target state="translated">Установить &lt;code&gt;ON UPDATE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="13bb92f3b76236bb6144fe9938c93ab1f1cbbd61" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;true&lt;/code&gt; to count only non-deleted records. Can be used on models with &lt;code&gt;paranoid&lt;/code&gt; enabled</source>
          <target state="translated">Установите значение &lt;code&gt;true&lt;/code&gt; , чтобы подсчитывать только не удаленные записи. Может использоваться на моделях с включенной &lt;code&gt;paranoid&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7afb64c86c07a6c269b9973a9ba25a4abf859068" translate="yes" xml:space="preserve">
          <source>Set can also be used to build instances for associations, if you have values for those. When using set with associations you need to make sure the property key matches the alias of the association while also making sure that the proper include options have been set (from .build() or .findOne())</source>
          <target state="translated">Набор также может быть использован для создания экземпляров для ассоциаций,если у вас есть значения для них.При использовании множества с ассоциациями вам необходимо убедиться,что ключ свойства совпадает с псевдонимом ассоциации,а также убедиться,что были установлены правильные опции включения (из .build()или .findOne()).</target>
        </trans-unit>
        <trans-unit id="166866de4829b605ddb977194d8b9388922cde2a" translate="yes" xml:space="preserve">
          <source>Set is used to update values on the instance (the sequelize representation of the instance that is, remember that nothing will be persisted before you actually call &lt;code&gt;save&lt;/code&gt;).</source>
          <target state="translated">Set используется для обновления значений в экземпляре (представление сиквелизации экземпляра, то есть помните, что ничего не будет сохраняться до того, как вы фактически вызовете &lt;code&gt;save&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="c61e103be0166178bd44bf7b48ee8f40f2dad972" translate="yes" xml:space="preserve">
          <source>Set is used to update values on the instance (the sequelize representation of the instance that is, remember that nothing will be persisted before you actually call &lt;code&gt;save&lt;/code&gt;). In its most basic form &lt;code&gt;set&lt;/code&gt; will update a value stored in the underlying &lt;code&gt;dataValues&lt;/code&gt; object. However, if a custom setter function is defined for the key, that function will be called instead. To bypass the setter, you can pass &lt;code&gt;raw: true&lt;/code&gt; in the options object.</source>
          <target state="translated">Set используется для обновления значений в экземпляре (представление сиквелизации экземпляра, то есть помните, что ничего не будет сохраняться до того, как вы фактически вызовете &lt;code&gt;save&lt;/code&gt; ). В своей самой базовой форме &lt;code&gt;set&lt;/code&gt; обновит значение, хранящееся в базовом объекте &lt;code&gt;dataValues&lt;/code&gt; . Однако, если для ключа определена настраиваемая функция установки, вместо нее будет вызываться эта функция. Чтобы обойти установщик, вы можете передать &lt;code&gt;raw: true&lt;/code&gt; в объекте параметров.</target>
        </trans-unit>
        <trans-unit id="63bb957bd4f2485eebebbe454a8b69e791949044" translate="yes" xml:space="preserve">
          <source>Set name of the model. By default its same as Class name.</source>
          <target state="translated">Установите имя модели.По умолчанию оно совпадает с именем класса.</target>
        </trans-unit>
        <trans-unit id="fb94cec61d3a9dbb28107d775ffb15026c33626f" translate="yes" xml:space="preserve">
          <source>Set of flags that control when a query is automatically retried.</source>
          <target state="translated">Установка флагов,управляющих при автоматической повторной попытке запроса.</target>
        </trans-unit>
        <trans-unit id="d3489274cb42c90bb36ad36d4038ec5bb58f7ba1" translate="yes" xml:space="preserve">
          <source>Set the associated model.</source>
          <target state="translated">Установите соответствующую модель.</target>
        </trans-unit>
        <trans-unit id="cbde947d0c7d02a7c6c0d54175f289fc8bd46ae8" translate="yes" xml:space="preserve">
          <source>Set the associated models by passing an array of instances or their primary keys.</source>
          <target state="translated">Установите ассоциированные модели,передав массив экземпляров или их первичные ключи.</target>
        </trans-unit>
        <trans-unit id="28afce742822bda7ac3a2f32d5cd41e9419a35e7" translate="yes" xml:space="preserve">
          <source>Set the associated models by passing an array of instances or their primary keys. Everything that it not in the passed array will be un-associated.</source>
          <target state="translated">Установите ассоциированные модели,передав массив экземпляров или их первичные ключи.Все,что не попадет в переданный массив,будет несвязано.</target>
        </trans-unit>
        <trans-unit id="4659b18c90bdf2bdf8128c7828c1888d45a44b43" translate="yes" xml:space="preserve">
          <source>Set the associated models by passing an array of persisted instances or their primary keys.</source>
          <target state="translated">Установите ассоциированные модели,передавая массив сохраняемых экземпляров или их первичные ключи.</target>
        </trans-unit>
        <trans-unit id="068e7c3551ea386b519bbe3de0e4543eabfc2396" translate="yes" xml:space="preserve">
          <source>Set the associated models by passing an array of persisted instances or their primary keys. Everything that is not in the passed array will be un-associated</source>
          <target state="translated">Установите ассоциированные модели,передавая массив сохраняемых экземпляров или их первичные ключи.Все,что не находится в передаваемом массиве,будет несвязано.</target>
        </trans-unit>
        <trans-unit id="97d0bf148a15e487d3493ba0c0a64bd2ffe4c813" translate="yes" xml:space="preserve">
          <source>Set the constraints to not deferred. This is the default in PostgreSQL and it make it impossible to dynamically defer the constraints within a transaction.</source>
          <target state="translated">Установите ограничения,чтобы не откладывать.По умолчанию в PostgreSQL это делает невозможным динамическое откладывание ограничений внутри транзакции.</target>
        </trans-unit>
        <trans-unit id="107b4c048cafd6f18d89bbdc4fb5cd9bc242b490" translate="yes" xml:space="preserve">
          <source>Set the default transaction isolation level. See &lt;code&gt;Sequelize.Transaction.ISOLATION_LEVELS&lt;/code&gt; for possible options.</source>
          <target state="translated">Установите уровень изоляции транзакции по умолчанию. См. Возможные варианты в &lt;code&gt;Sequelize.Transaction.ISOLATION_LEVELS&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8a7b3220b9496281536f2b1d365289c693c1b5dc" translate="yes" xml:space="preserve">
          <source>Set the default transaction type. See &lt;code&gt;Sequelize.Transaction.TYPES&lt;/code&gt; for possible options. Sqlite only.</source>
          <target state="translated">Установите тип транзакции по умолчанию. См. Возможные варианты в &lt;code&gt;Sequelize.Transaction.TYPES&lt;/code&gt; . Только Sqlite.</target>
        </trans-unit>
        <trans-unit id="e32c8401f834466947bfc307cba05a4f5d4d4ee8" translate="yes" xml:space="preserve">
          <source>Set the initial AUTO_INCREMENT value for the table in MySQL.</source>
          <target state="translated">Установите начальное значение AUTO_INCREMENT для таблицы в MySQL.</target>
        </trans-unit>
        <trans-unit id="2142490858241f5b04e051a62de526c24ed0e592" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;false&lt;/code&gt; to make table names and attributes case-insensitive on Postgres and skip double quoting of them. WARNING: Setting this to false may expose vulnerabilities and is not recommended!</source>
          <target state="translated">Установите значение &lt;code&gt;false&lt;/code&gt; , чтобы имена таблиц и атрибутов в Postgres регистрировались без учета регистра и пропускали их двойные кавычки. ВНИМАНИЕ: установка значения false может выявить уязвимости и не рекомендуется!</target>
        </trans-unit>
        <trans-unit id="354c30cb0ad082bba494c5b29c973069e05d6c82" translate="yes" xml:space="preserve">
          <source>Set to true to run before-/afterDestroy hooks when an associated model is deleted because of a cascade. For example if &lt;code&gt;User.hasOne(Profile, {onDelete: 'cascade', hooks:true})&lt;/code&gt;, the before-/afterDestroy hooks for profile will be called when a user is deleted. Otherwise the profile will be deleted without invoking any hooks</source>
          <target state="translated">Установите значение true, чтобы запускать перехватчики before- / afterDestroy, когда связанная модель удаляется из-за каскада. Например, если &lt;code&gt;User.hasOne(Profile, {onDelete: 'cascade', hooks:true})&lt;/code&gt; , хуки before- / afterDestroy для профиля будут вызываться при удалении пользователя. В противном случае профиль будет удален без вызова каких-либо хуков.</target>
        </trans-unit>
        <trans-unit id="1c4f50d2829a25de027786fbdce72e5b78d07194" translate="yes" xml:space="preserve">
          <source>Sets 'ON UPDATE'</source>
          <target state="translated">Устанавливает &quot;НА ОБНОВЛЕНИИ&quot;.</target>
        </trans-unit>
        <trans-unit id="8ba2182b55b33f33f3359d2be48577029cff400f" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;ON UPDATE&lt;/code&gt;</source>
          <target state="translated">Устанавливает &lt;code&gt;ON UPDATE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="18972919efe0a74faf9c8fee85561d96ee6ef6d3" translate="yes" xml:space="preserve">
          <source>Sets the constraints to be deferred or immediately checked. PostgreSQL only</source>
          <target state="translated">Устанавливает ограничения,которые необходимо отложить или немедленно проверить.Только для PostgreSQL</target>
        </trans-unit>
        <trans-unit id="fd789d936fbe1c06427e2b854a8677e439ab83d7" translate="yes" xml:space="preserve">
          <source>Sets the constraints to be deferred or immediately checked. See &lt;code&gt;Sequelize.Deferrable&lt;/code&gt;. PostgreSQL Only</source>
          <target state="translated">Устанавливает ограничения, которые будут отложены или немедленно проверены. См. &lt;code&gt;Sequelize.Deferrable&lt;/code&gt; . Только PostgreSQL</target>
        </trans-unit>
        <trans-unit id="0f49e7ccb9839aa302b4098fa4e81d7d66544064" translate="yes" xml:space="preserve">
          <source>Sets the isolation level of the transaction.</source>
          <target state="translated">Устанавливает уровень изоляции сделки.</target>
        </trans-unit>
        <trans-unit id="bdfc96c36f0f4dfb42251486fcfd7e6409571de8" translate="yes" xml:space="preserve">
          <source>Sets the query type to &lt;code&gt;SELECT&lt;/code&gt; and return a single row</source>
          <target state="translated">Устанавливает тип запроса на &lt;code&gt;SELECT&lt;/code&gt; и возвращает одну строку</target>
        </trans-unit>
        <trans-unit id="48e50206ef8d2f4278a730b2e028d7da0eeac616" translate="yes" xml:space="preserve">
          <source>Sets the type of the transaction. Sqlite only</source>
          <target state="translated">Устанавливает тип транзакции.Только для Sqlite</target>
        </trans-unit>
        <trans-unit id="3d974d0bf03a57c01c4f20dcbb4527dcbfa503e9" translate="yes" xml:space="preserve">
          <source>Setting up a connection</source>
          <target state="translated">Настройка соединения</target>
        </trans-unit>
        <trans-unit id="f1f1f62ad1a95c21c649b09609e964e4f011ab41" translate="yes" xml:space="preserve">
          <source>Several other query types are available. &lt;a href=&quot;https://github.com/sequelize/sequelize/blob/master/lib/query-types.js&quot;&gt;Peek into the source for details&lt;/a&gt;</source>
          <target state="translated">Доступны несколько других типов запросов. &lt;a href=&quot;https://github.com/sequelize/sequelize/blob/master/lib/query-types.js&quot;&gt;Загляните в источник для подробностей&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aea9a5880bd2b9832a731121a6d7390e206c1927" translate="yes" xml:space="preserve">
          <source>Several scopes can be applied simultaneously by passing an array of scopes to &lt;code&gt;.scope&lt;/code&gt;, or by passing the scopes as consecutive arguments.</source>
          <target state="translated">Несколько областей можно применять одновременно, передав массив областей в &lt;code&gt;.scope&lt;/code&gt; или передав области в качестве последовательных аргументов.</target>
        </trans-unit>
        <trans-unit id="1cc34d5862bb6623cb8eb39094c2ba84d0c3557b" translate="yes" xml:space="preserve">
          <source>Should each row be subject to validation before it is inserted. The whole insert will fail if one row fails validation</source>
          <target state="translated">Должна ли каждая строка быть подвергнута проверке перед тем,как она будет вставлена.Вся вставка будет неудачной,если одна строка не пройдет валидацию</target>
        </trans-unit>
        <trans-unit id="fccc812dc5f2a57c8829818b8c7f9aa953df663f" translate="yes" xml:space="preserve">
          <source>Should on update and on delete constraints be enabled on the foreign key.</source>
          <target state="translated">Должны быть включены ограничения по обновлению и удалению иностранного ключа.</target>
        </trans-unit>
        <trans-unit id="1c55603b3eb9b5b1700bdfca388933033c5267cc" translate="yes" xml:space="preserve">
          <source>Should the index by unique? Can also be triggered by setting type to &lt;code&gt;UNIQUE&lt;/code&gt;</source>
          <target state="translated">Должен ли индекс быть уникальным? Также может быть активирован установкой типа &lt;code&gt;UNIQUE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d9430fbff299935c8d01d77d60a80c20db8af97f" translate="yes" xml:space="preserve">
          <source>Should the join model have timestamps</source>
          <target state="translated">Если у модели соединения есть временные метки</target>
        </trans-unit>
        <trans-unit id="e89c05ba6758d6c1df5321149b427c4c24dc77a5" translate="yes" xml:space="preserve">
          <source>Show all defined schemas</source>
          <target state="translated">Показать все определенные схемы</target>
        </trans-unit>
        <trans-unit id="a8230afc301654f9c5847932109ae42f577ad544" translate="yes" xml:space="preserve">
          <source>Show all schemas</source>
          <target state="translated">Показать все схемы</target>
        </trans-unit>
        <trans-unit id="5c66f69bd4f8cb33cd2b7d50b7fe30afddb3d653" translate="yes" xml:space="preserve">
          <source>Similarly, it's also possible to remove a selected few attributes:</source>
          <target state="translated">Точно так же можно удалить несколько выбранных атрибутов:</target>
        </trans-unit>
        <trans-unit id="26f9660bf122890dd24a48101e8f7f0554e9803f" translate="yes" xml:space="preserve">
          <source>Similarly, when fetching through a join table with custom attributes, these attributes will be available as an object with the name of the through model.</source>
          <target state="translated">Аналогично,при прохождении через таблицу соединений с пользовательскими атрибутами,эти атрибуты будут доступны как объект с именем сквозной модели.</target>
        </trans-unit>
        <trans-unit id="696ea9d6cd2e74a5c976cb995c1b0d7d4e1edac0" translate="yes" xml:space="preserve">
          <source>Simple search using AND and =</source>
          <target state="translated">Простой поиск с помощью AND и =</target>
        </trans-unit>
        <trans-unit id="8e0eaf977d4539a1c708998caf904e6bb9df2978" translate="yes" xml:space="preserve">
          <source>Since range types have extra information for their bound inclusion/exclusion it's not very straightforward to just use a tuple to represent them in javascript.</source>
          <target state="translated">Поскольку типы диапазонов имеют дополнительную информацию для их связанного включения/исключения,не очень просто использовать кортеж для их представления в javascript.</target>
        </trans-unit>
        <trans-unit id="b601167a7cd382d7cbe566ee42e4b7536768d3ad" translate="yes" xml:space="preserve">
          <source>Since v5, Sequelize provides its own TypeScript definitions. Please note that only TS &amp;gt;= 3.1 is supported.</source>
          <target state="translated">Начиная с v5, Sequelize предоставляет собственные определения TypeScript. Обратите внимание, что поддерживается только TS&amp;gt; = 3.1.</target>
        </trans-unit>
        <trans-unit id="f436c13844b216967ae563c043203b695079ce01" translate="yes" xml:space="preserve">
          <source>Since you are working with multiple models, the callbacks will not return DAO instances. BulkCreate will return an array of model instances/DAOs, they will however, unlike &lt;code&gt;create&lt;/code&gt;, not have the resulting values of autoIncrement attributes.&lt;code&gt;update&lt;/code&gt; and &lt;code&gt;destroy&lt;/code&gt; will return the number of affected rows.</source>
          <target state="translated">Поскольку вы работаете с несколькими моделями, обратные вызовы не будут возвращать экземпляры DAO. BulkCreate вернет массив экземпляров модели / DAO, однако они, в отличие от &lt;code&gt;create&lt;/code&gt; , не будут иметь результирующих значений атрибутов autoIncrement. &lt;code&gt;update&lt;/code&gt; и &lt;code&gt;destroy&lt;/code&gt; вернут количество затронутых строк.</target>
        </trans-unit>
        <trans-unit id="d0a120c4b4160f315ab6b9691b248b295b04acec" translate="yes" xml:space="preserve">
          <source>Singular name for model</source>
          <target state="translated">Единое название модели</target>
        </trans-unit>
        <trans-unit id="b7152342a267362add3c0d7f69f720f7a9c76c9e" translate="yes" xml:space="preserve">
          <source>Size</source>
          <target state="translated">Size</target>
        </trans-unit>
        <trans-unit id="dbe291e0d821c92f6b4f3902eec2a5914db65996" translate="yes" xml:space="preserve">
          <source>Skip locked rows. Only supported in Postgres.</source>
          <target state="translated">Пропустить запертые ряды.Поддерживается только в Postgres.</target>
        </trans-unit>
        <trans-unit id="b066e9f045fec6926b3eb8e24e878587821bf646" translate="yes" xml:space="preserve">
          <source>Skip saving this after setting the foreign key if false.</source>
          <target state="translated">Пропустите сохранение после установки иностранного ключа,если он ложный.</target>
        </trans-unit>
        <trans-unit id="9081562512b5ff709e3b937fef72e774f6407d16" translate="yes" xml:space="preserve">
          <source>Slugification</source>
          <target state="translated">Slugification</target>
        </trans-unit>
        <trans-unit id="e5e3a2d0b71e212514381c92fbda84f40194f41d" translate="yes" xml:space="preserve">
          <source>So far we dealt with a one-way association. But we want more! Let's define it the other way around by creating a many to many association in the next section.</source>
          <target state="translated">Пока мы имели дело с односторонней ассоциацией.Но мы хотим большего! Давайте определим это по-другому,создав много-много ассоциаций в следующем разделе.</target>
        </trans-unit>
        <trans-unit id="4e42dc224648ef387be0eb7a267a923a15e1bc3c" translate="yes" xml:space="preserve">
          <source>So this enum name must follow this pattern &lt;code&gt;enum_&amp;lt;table_name&amp;gt;_&amp;lt;col_name&amp;gt;&lt;/code&gt;. If you are using &lt;code&gt;sync&lt;/code&gt; then correct name will automatically be generated.</source>
          <target state="translated">Таким образом, это имя перечисления должно соответствовать этому шаблону &lt;code&gt;enum_&amp;lt;table_name&amp;gt;_&amp;lt;col_name&amp;gt;&lt;/code&gt; . Если вы используете &lt;code&gt;sync&lt;/code&gt; то автоматически будет сгенерировано правильное имя.</target>
        </trans-unit>
        <trans-unit id="0e78ec0d8156cc0f2bf3c598c9044e39bfa2947e" translate="yes" xml:space="preserve">
          <source>Some data types have special properties that can be accessed in order to change the data type. For example, to get an unsigned integer with zerofill you can do &lt;code&gt;DataTypes.INTEGER.UNSIGNED.ZEROFILL&lt;/code&gt;. The order you access the properties in do not matter, so &lt;code&gt;DataTypes.INTEGER.ZEROFILL.UNSIGNED&lt;/code&gt; is fine as well.</source>
          <target state="translated">Некоторые типы данных имеют специальные свойства, к которым можно получить доступ, чтобы изменить тип данных. Например, чтобы получить целое число без знака с помощью zerofill, вы можете выполнить &lt;code&gt;DataTypes.INTEGER.UNSIGNED.ZEROFILL&lt;/code&gt; . Порядок доступа к свойствам не имеет значения, поэтому &lt;code&gt;DataTypes.INTEGER.ZEROFILL.UNSIGNED&lt;/code&gt; также подойдет .</target>
        </trans-unit>
        <trans-unit id="47aac3e3ea46b8003010b5a72dada7a63be999b8" translate="yes" xml:space="preserve">
          <source>Some frameworks automatically parse user input into js objects and if you fail to sanitize your input it might be possible to inject an Object with string operators to Sequelize.</source>
          <target state="translated">Некоторые фреймворки автоматически анализируют пользовательский ввод в js-объекты,и если не удаётся дезинфицировать ввод,возможно,можно ввести Object со строковыми операторами для Sequelize.</target>
        </trans-unit>
        <trans-unit id="506695fe4bca93a04e723ee3f23405d882143d94" translate="yes" xml:space="preserve">
          <source>Some scenarios where you can use it.</source>
          <target state="translated">Некоторые сценарии,в которых вы можете его использовать.</target>
        </trans-unit>
        <trans-unit id="45519e97c243c8c894e455e42e2f4ddf34c0f43c" translate="yes" xml:space="preserve">
          <source>Some tips around using CLI and migration setup in production environment.</source>
          <target state="translated">Некоторые советы по использованию CLI и настройке миграции в производственной среде.</target>
        </trans-unit>
        <trans-unit id="cce1d48d901d42375d87783743924bc41a147483" translate="yes" xml:space="preserve">
          <source>Sometime you want to specify a dialectOption, if it's a general config you can just add it in &lt;code&gt;config/config.json&lt;/code&gt;. Sometime you want to execute some code to get dialectOptions, you should use dynamic config file for those cases.</source>
          <target state="translated">Иногда вы хотите указать dialectOption, если это общая конфигурация, вы можете просто добавить ее в &lt;code&gt;config/config.json&lt;/code&gt; . Когда-нибудь вы захотите выполнить какой-то код для получения dialectOptions, вы должны использовать динамический файл конфигурации для этих случаев.</target>
        </trans-unit>
        <trans-unit id="8e9158873a51d40de8fc8b6422e47f75fed10c82" translate="yes" xml:space="preserve">
          <source>Sometimes it may be tiresome to list all the attributes of the model if you only want to add an aggregation:</source>
          <target state="translated">Иногда бывает утомительно перечислять все атрибуты модели,если нужно только добавить агрегирование:</target>
        </trans-unit>
        <trans-unit id="c76c8272fccf13128629164c9a771b6e879c7bc4" translate="yes" xml:space="preserve">
          <source>Sometimes you may need to associate records on different columns, you may use &lt;code&gt;sourceKey&lt;/code&gt; option:</source>
          <target state="translated">Иногда вам может потребоваться связать записи в разных столбцах, вы можете использовать опцию &lt;code&gt;sourceKey&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="84420187eb6990ad41032d3ccbebefd68bfee436" translate="yes" xml:space="preserve">
          <source>Sometimes you may want to reference another table, without adding any constraints, or associations. In that case you can manually add the reference attributes to your schema definition, and mark the relations between them.</source>
          <target state="translated">Иногда вы можете захотеть сослаться на другую таблицу,не добавляя никаких ограничений или ассоциаций.В этом случае вы можете вручную добавить атрибуты ссылки в определение вашей схемы и пометить отношения между ними.</target>
        </trans-unit>
        <trans-unit id="a5a4cd094326d31853e0865b4f6a87a79be6da8e" translate="yes" xml:space="preserve">
          <source>Sometimes you may want to rename your models when using them in associations. Let's define users as workers and projects as tasks by using the alias (&lt;code&gt;as&lt;/code&gt;) option. We will also manually define the foreign keys to use:</source>
          <target state="translated">Иногда вы можете захотеть переименовать свои модели, когда используете их в ассоциациях. Давайте определим пользователей как рабочих, а проекты как задачи, используя опцию псевдонима ( &lt;code&gt;as&lt;/code&gt; ). Мы также вручную определим используемые внешние ключи:</target>
        </trans-unit>
        <trans-unit id="ca0f78496da4f38b504892d451c90fe377acf862" translate="yes" xml:space="preserve">
          <source>Sometimes you might be expecting a massive dataset that you just want to display, without manipulation. For each row you select, Sequelize creates an instance with functions for update, delete, get associations etc. If you have thousands of rows, this might take some time. If you only need the raw data and don't want to update anything, you can do like this to get the raw data.</source>
          <target state="translated">Иногда вы можете ожидать массивный набор данных,который вы просто хотите отобразить,без манипуляций.Для каждой выбранной строки Sequelize создает экземпляр с функциями обновления,удаления,получения ассоциаций и т.д.Если у вас тысячи строк,это может занять некоторое время.Если вам нужны только необработанные данные и вы не хотите ничего обновлять,вы можете сделать так,чтобы получить необработанные данные.</target>
        </trans-unit>
        <trans-unit id="f6e10c8d1ee0e110a949c1dd33ee734b90e8b619" translate="yes" xml:space="preserve">
          <source>Sometimes you'll be editing more than one record at a time by utilizing the &lt;code&gt;bulkCreate, update, destroy&lt;/code&gt; methods on the model. The following will emit whenever you're using one of those methods:</source>
          <target state="translated">Иногда вы будете редактировать более одной записи за раз, используя в &lt;code&gt;bulkCreate, update, destroy&lt;/code&gt; методы bulkCreate, update, destroy . При использовании одного из этих методов будет генерироваться следующее:</target>
        </trans-unit>
        <trans-unit id="6da13addb000b67d42a6d66391713819e634149f" translate="yes" xml:space="preserve">
          <source>Source</source>
          <target state="translated">Source</target>
        </trans-unit>
        <trans-unit id="cec1acf567fe5032c7ccbe6f0c04bec9827cd692" translate="yes" xml:space="preserve">
          <source>Source &amp;amp; Target</source>
          <target state="translated">Исходная цель</target>
        </trans-unit>
        <trans-unit id="7969aba3e7f08bea9e13ad506421e1ecfd565291" translate="yes" xml:space="preserve">
          <source>Source and target keys</source>
          <target state="translated">Ключи источника и цели</target>
        </trans-unit>
        <trans-unit id="d8a00d1571c48d768984321da51fe70137af999f" translate="yes" xml:space="preserve">
          <source>Source code of function</source>
          <target state="translated">Исходный код функции</target>
        </trans-unit>
        <trans-unit id="1499c6d6e22facebb12a10f560d4082a7ba88a6f" translate="yes" xml:space="preserve">
          <source>Source keys</source>
          <target state="translated">Ключи источника</target>
        </trans-unit>
        <trans-unit id="59f265692e8532f3f9f4cf8098a358d626fbb2eb" translate="yes" xml:space="preserve">
          <source>Special Cases</source>
          <target state="translated">Специальные случаи</target>
        </trans-unit>
        <trans-unit id="7610310be61095c09812768c8c3df51ade223444" translate="yes" xml:space="preserve">
          <source>Specified model</source>
          <target state="translated">Указанная модель</target>
        </trans-unit>
        <trans-unit id="ef957adb2faf323c7b629c9477baa8a72aec3b29" translate="yes" xml:space="preserve">
          <source>Specifies an ordering. Using an array, you can provide several columns / functions to order by. Each element can be further wrapped in a two-element array. The first element is the column / function to order by, the second is the direction. For example: &lt;code&gt;order: [['name', 'DESC']]&lt;/code&gt;. In this way the column will be escaped, but the direction will not.</source>
          <target state="translated">Определяет порядок. Используя массив, вы можете упорядочить несколько столбцов / функций. Каждый элемент может быть дополнительно заключен в двухэлементный массив. Первый элемент - это столбец / функция для сортировки, второй - направление. Например: &lt;code&gt;order: [['name', 'DESC']]&lt;/code&gt; . Таким образом, столбец будет экранирован, а направление - нет.</target>
        </trans-unit>
        <trans-unit id="ab91a1aa22860a5be44f1c7d0e5a41f40ac0899d" translate="yes" xml:space="preserve">
          <source>Specify charset for model's table</source>
          <target state="translated">Укажите кодовую таблицу для таблицы модели</target>
        </trans-unit>
        <trans-unit id="05c45a92124ec5ecf33e03c985ae55ccc15f268e" translate="yes" xml:space="preserve">
          <source>Specify collation for model's table</source>
          <target state="translated">Укажите сверку для таблицы модели</target>
        </trans-unit>
        <trans-unit id="6e7c3b352c76886bab8a11641294e51528c63905" translate="yes" xml:space="preserve">
          <source>Specify comment for model's table</source>
          <target state="translated">Укажите комментарий к таблице модели</target>
        </trans-unit>
        <trans-unit id="6c874f64189ebc73fd18bd05f2dd405ac52c8396" translate="yes" xml:space="preserve">
          <source>Specify engine for model's table</source>
          <target state="translated">Укажите двигатель для таблицы модели</target>
        </trans-unit>
        <trans-unit id="93cb6f0d1b5094f7a606c75c41e39f3729456b42" translate="yes" xml:space="preserve">
          <source>Specify index operator.</source>
          <target state="translated">Укажите оператора индекса.</target>
        </trans-unit>
        <trans-unit id="1b468bd525de3aeadbdf80f3d9c458fbcaefa38a" translate="yes" xml:space="preserve">
          <source>Specifying Dialect Options</source>
          <target state="translated">Указание диалектных опций</target>
        </trans-unit>
        <trans-unit id="789445bbe2e230b404b0877611cb047ff79a2a8a" translate="yes" xml:space="preserve">
          <source>Start a transaction.</source>
          <target state="translated">Начать сделку.</target>
        </trans-unit>
        <trans-unit id="d18d875cf4fc5fcecf6b711eae14645c02d6e1f3" translate="yes" xml:space="preserve">
          <source>Start a transaction. When using transactions, you should pass the transaction in the options argument in order for the query to happen under that transaction @see &lt;a href=&quot;transaction.js~transaction&quot;&gt;Transaction&lt;/a&gt;</source>
          <target state="translated">Начать транзакцию. При использовании транзакций вы должны передать транзакцию в аргументе options, чтобы запрос выполнялся в рамках этой транзакции @see &lt;a href=&quot;transaction.js~transaction&quot;&gt;Transaction&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="767db5397ee3f3f1fc518ea59e55ef68e66c4e49" translate="yes" xml:space="preserve">
          <source>Start looking for any migration files which haven't run yet. This is possible by checking &lt;code&gt;SequelizeMeta&lt;/code&gt; table. In this case it will run &lt;code&gt;XXXXXXXXXXXXXX-create-user.js&lt;/code&gt; migration, which we created in last step.</source>
          <target state="translated">Начните искать файлы миграции, которые еще не запущены. Это возможно, проверив таблицу &lt;code&gt;SequelizeMeta&lt;/code&gt; . В этом случае он выполнит миграцию &lt;code&gt;XXXXXXXXXXXXXX-create-user.js&lt;/code&gt; , которую мы создали на последнем шаге.</target>
        </trans-unit>
        <trans-unit id="3e2ca76b869d4fc44471d269e7d021b82eb5e2e7" translate="yes" xml:space="preserve">
          <source>Static Member Summary</source>
          <target state="translated">Статистическая сводка для членов</target>
        </trans-unit>
        <trans-unit id="93974c74e2583ae745e2a4d05185ce35cbce3dda" translate="yes" xml:space="preserve">
          <source>Static Method Summary</source>
          <target state="translated">Краткое описание статического метода</target>
        </trans-unit>
        <trans-unit id="5d93069d69d10dd364cb5869055e39be7a82df7b" translate="yes" xml:space="preserve">
          <source>Static Public</source>
          <target state="translated">Статическая публика</target>
        </trans-unit>
        <trans-unit id="071f6dc8b2e654ff72e19d9c2affa12acd8cad3b" translate="yes" xml:space="preserve">
          <source>Static Public Members</source>
          <target state="translated">Статические общественные члены</target>
        </trans-unit>
        <trans-unit id="fd87df2a091c294a3be14e721270cc5cb9005586" translate="yes" xml:space="preserve">
          <source>Static Public Methods</source>
          <target state="translated">Статические публичные методы</target>
        </trans-unit>
        <trans-unit id="e54d0c6ac86b830fabe7f13edf805a4e9b1dee3e" translate="yes" xml:space="preserve">
          <source>Static Public Summary</source>
          <target state="translated">Статическое резюме для общественности</target>
        </trans-unit>
        <trans-unit id="9e092dda4f0e27d0c7686ddd00272079e678b6e6" translate="yes" xml:space="preserve">
          <source>Storage</source>
          <target state="translated">Storage</target>
        </trans-unit>
        <trans-unit id="65fa5a3000720098c1dca59b70a7d76a6fd2c4c2" translate="yes" xml:space="preserve">
          <source>String - will be quoted</source>
          <target state="translated">Строка-будет процитирована</target>
        </trans-unit>
        <trans-unit id="daceb9a0562946d158de84d0526f6149910187cc" translate="yes" xml:space="preserve">
          <source>String based operator alias. Pass object to limit set of aliased operators.</source>
          <target state="translated">Псевдоним оператора на основе струн.Передать объект для ограничения набора псевдонимов операторов.</target>
        </trans-unit>
        <trans-unit id="6ada010a4af6877d578b83c2221b03cd216ad0ed" translate="yes" xml:space="preserve">
          <source>Such validation could have also been done with a custom validator defined on a single attribute (such as the &lt;code&gt;latitude&lt;/code&gt; attribute, by checking &lt;code&gt;(value === null) !== (this.longitude === null)&lt;/code&gt;), but the model-wide validation approach is cleaner.</source>
          <target state="translated">Такая проверка также могла быть выполнена с помощью специального валидатора, определенного для одного атрибута (например, атрибута &lt;code&gt;latitude&lt;/code&gt; , путем проверки &lt;code&gt;(value === null) !== (this.longitude === null)&lt;/code&gt; ), но модель - широкий подход к валидации чище.</target>
        </trans-unit>
        <trans-unit id="666e6b745c699158426c5ad099759c71dae3993c" translate="yes" xml:space="preserve">
          <source>Supply your own ON condition for the join.</source>
          <target state="translated">Поставьте свои собственные условия для соединения.</target>
        </trans-unit>
        <trans-unit id="144046b1bd7badefc4d65fecc8afd75a78d5b865" translate="yes" xml:space="preserve">
          <source>Support for Node 10 and up</source>
          <target state="translated">Поддержка для узла 10 и выше</target>
        </trans-unit>
        <trans-unit id="cd906bb957f4dba88a7d677004f6055dd11d4afc" translate="yes" xml:space="preserve">
          <source>Suppose our &lt;code&gt;Player&lt;/code&gt; model has information about its team as &lt;code&gt;teamId&lt;/code&gt; column. Information about each Team's &lt;code&gt;Coach&lt;/code&gt; is stored in the &lt;code&gt;Team&lt;/code&gt; model as &lt;code&gt;coachId&lt;/code&gt; column. These both scenarios requires different kind of 1:1 relation because foreign key relation is present on different models each time.</source>
          <target state="translated">Предположим, наша модель &lt;code&gt;Player&lt;/code&gt; содержит информацию о своей команде в &lt;code&gt;teamId&lt;/code&gt; столбца teamId . Информация о &lt;code&gt;Coach&lt;/code&gt; каждой команды хранится в модели &lt;code&gt;Team&lt;/code&gt; в столбце &lt;code&gt;coachId&lt;/code&gt; . Оба этих сценария требуют разного рода отношения 1: 1, потому что отношение внешнего ключа каждый раз присутствует в разных моделях.</target>
        </trans-unit>
        <trans-unit id="ef80b7fed8338d93416cd79ad36e89fa6b35d973" translate="yes" xml:space="preserve">
          <source>Suppose we have two tables to link &lt;strong&gt;Player&lt;/strong&gt; and &lt;strong&gt;Team&lt;/strong&gt;. Lets define their models.</source>
          <target state="translated">Предположим, у нас есть две таблицы, чтобы связать &lt;strong&gt;игрока&lt;/strong&gt; и &lt;strong&gt;команду&lt;/strong&gt; . Определим их модели.</target>
        </trans-unit>
        <trans-unit id="7d1b98193b4347c9a63a9bbb4d39a13215749194" translate="yes" xml:space="preserve">
          <source>Suppose we want to insert some data into a few tables by default. If we follow up on previous example we can consider creating a demo user for &lt;code&gt;User&lt;/code&gt; table.</source>
          <target state="translated">Предположим, мы хотим по умолчанию вставить некоторые данные в несколько таблиц. Если мы продолжим предыдущий пример, мы можем рассмотреть возможность создания демонстрационного пользователя для таблицы &lt;code&gt;User&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="63f13894b7179290120a467d9f756197261eb48d" translate="yes" xml:space="preserve">
          <source>Suppose you want to find all users who have a profile attached:</source>
          <target state="translated">Предположим,вы хотите найти всех пользователей,у которых есть прикрепленный профиль:</target>
        </trans-unit>
        <trans-unit id="3f84ef531f9db996694ad09a8fdddbca1440577e" translate="yes" xml:space="preserve">
          <source>Symbol</source>
          <target state="translated">Symbol</target>
        </trans-unit>
        <trans-unit id="1e4961c4fd4c50f3974bcbc462ffabf9d11b7e41" translate="yes" xml:space="preserve">
          <source>Sync all defined models to the DB.</source>
          <target state="translated">Синхронизировать все определенные модели с БД.</target>
        </trans-unit>
        <trans-unit id="d295b7c124f450a0ae7db9e0dd4371d5a908e16c" translate="yes" xml:space="preserve">
          <source>Sync this Model to the DB, that is create the table.</source>
          <target state="translated">Синхронизируйте эту модель с БД,то есть создайте таблицу.</target>
        </trans-unit>
        <trans-unit id="49b4cf438c26e221dcf5c35f1bb5388e58acc6de" translate="yes" xml:space="preserve">
          <source>Synchronizing all models at once</source>
          <target state="translated">Синхронизация всех моделей одновременно</target>
        </trans-unit>
        <trans-unit id="7754c8e786d3eca650ff1b582693fa0714a38764" translate="yes" xml:space="preserve">
          <source>Synchronizing the model with the database</source>
          <target state="translated">Синхронизация модели с БД</target>
        </trans-unit>
        <trans-unit id="e834f99dcb78400f4c128fb50e4f83eea4bd65b6" translate="yes" xml:space="preserve">
          <source>TABLOCK</source>
          <target state="translated">TABLOCK</target>
        </trans-unit>
        <trans-unit id="dcb435e28d2012463d8e6def6d52b91b7d81a93f" translate="yes" xml:space="preserve">
          <source>TABLOCKX</source>
          <target state="translated">TABLOCKX</target>
        </trans-unit>
        <trans-unit id="7d4e42ef9d04a046b5679f952cb0b6b5c498c73c" translate="yes" xml:space="preserve">
          <source>TEXT</source>
          <target state="translated">TEXT</target>
        </trans-unit>
        <trans-unit id="64269f9bd268bf28815bb69e82601cd7e806a37b" translate="yes" xml:space="preserve">
          <source>TIME</source>
          <target state="translated">TIME</target>
        </trans-unit>
        <trans-unit id="4fe5a3682f8029783789ec9b3abba10f67f03ffa" translate="yes" xml:space="preserve">
          <source>TINYINT</source>
          <target state="translated">TINYINT</target>
        </trans-unit>
        <trans-unit id="521cc63843abd0f34c261968e1d32a7dc9f6c198" translate="yes" xml:space="preserve">
          <source>Table Hint</source>
          <target state="translated">Настольная подсказка</target>
        </trans-unit>
        <trans-unit id="22ba75a57550188d799bd1e025b7db1fda0a2d3e" translate="yes" xml:space="preserve">
          <source>Table hints override the default behavior of mssql query optimizer by specifing certain options. They only affect the table or view referenced in that clause.</source>
          <target state="translated">Таблица переопределяет поведение по умолчанию оптимизатора запросов mssql,задавая определенные опции.Они влияют только на таблицу или представление,на которое ссылается в этом пункте.</target>
        </trans-unit>
        <trans-unit id="0cb75dbc5813b569590e4ea143ce823027afbc1b" translate="yes" xml:space="preserve">
          <source>Table name to add index on, can be a object with schema</source>
          <target state="translated">Имя таблицы для добавления индекса,может быть объектом со схемой</target>
        </trans-unit>
        <trans-unit id="3fab7b43bc054cab875b79b2a0d5940d09c13933" translate="yes" xml:space="preserve">
          <source>Table name to change from</source>
          <target state="translated">Название таблицы для изменения от</target>
        </trans-unit>
        <trans-unit id="2cdfba3e5bff8000906d5f3be065833e214bd7be" translate="yes" xml:space="preserve">
          <source>Table name to drop</source>
          <target state="translated">Имя таблицы,которую нужно опустить</target>
        </trans-unit>
        <trans-unit id="a0d7075f146f8e02ece5c3b5bc8db30590e1c72b" translate="yes" xml:space="preserve">
          <source>Table name to drop constraint from</source>
          <target state="translated">Имя таблицы,чтобы снять ограничение с</target>
        </trans-unit>
        <trans-unit id="45bc0fc9921d956e87501c72f3c69e96310abf0b" translate="yes" xml:space="preserve">
          <source>Table name to drop index from</source>
          <target state="translated">Имя таблицы для выпадения индекса из</target>
        </trans-unit>
        <trans-unit id="b0e1e1e10f09068f7cae45a1dace79b0d9a82486" translate="yes" xml:space="preserve">
          <source>Table name to insert record to</source>
          <target state="translated">Имя таблицы для вставки записи в</target>
        </trans-unit>
        <trans-unit id="f255cd8680539b5bbf5bb6cf0e61d456d5c89103" translate="yes" xml:space="preserve">
          <source>Table name to update</source>
          <target state="translated">Название таблицы для обновления</target>
        </trans-unit>
        <trans-unit id="dd22d9e56c5cb140764fa721de7a45f25fe6d977" translate="yes" xml:space="preserve">
          <source>Table name where you want to add a constraint</source>
          <target state="translated">Имя таблицы,в которую вы хотите добавить ограничение</target>
        </trans-unit>
        <trans-unit id="25ca34d81d29fd398bf9c4ba66b56be70861a874" translate="yes" xml:space="preserve">
          <source>Table name whose column to rename</source>
          <target state="translated">Имя таблицы,столбец которой следует переименовать</target>
        </trans-unit>
        <trans-unit id="dbed374b26ccca4bdab96f82c9f48630ce076773" translate="yes" xml:space="preserve">
          <source>Table name, for backward compatibility</source>
          <target state="translated">Наименование таблицы,для обратной совместимости</target>
        </trans-unit>
        <trans-unit id="d210072aac6aa90c45934daef475a90e10b81e26" translate="yes" xml:space="preserve">
          <source>Table to add column to</source>
          <target state="translated">Таблица для добавления столбца к</target>
        </trans-unit>
        <trans-unit id="8ebb87b4f0d6b0bd82f500cb89d5d63fe2b3bb66" translate="yes" xml:space="preserve">
          <source>Table to remove column from</source>
          <target state="translated">Таблица для удаления столбца из</target>
        </trans-unit>
        <trans-unit id="c30f8dfdb7e7408d778802c6ee43b43deb695358" translate="yes" xml:space="preserve">
          <source>TableHints</source>
          <target state="translated">TableHints</target>
        </trans-unit>
        <trans-unit id="193daf137ed8b89de36d47c3df5fd8f66c0e1d14" translate="yes" xml:space="preserve">
          <source>Tables</source>
          <target state="translated">Tables</target>
        </trans-unit>
        <trans-unit id="e396b94e25d4b0c0ef34b12c624dbfa7272476fb" translate="yes" xml:space="preserve">
          <source>Target column name</source>
          <target state="translated">Имя столбца цели</target>
        </trans-unit>
        <trans-unit id="975ce3d3070b51cecd838e1da8d21e0ef5ce9336" translate="yes" xml:space="preserve">
          <source>Target keys</source>
          <target state="translated">Целевые клавиши</target>
        </trans-unit>
        <trans-unit id="5c068aa69f6d4ef42a8389abe9cd810232caae05" translate="yes" xml:space="preserve">
          <source>Target model</source>
          <target state="translated">Целевая модель</target>
        </trans-unit>
        <trans-unit id="2f66e0e68c2c913dd1bf905e22855cbb450958e6" translate="yes" xml:space="preserve">
          <source>Target table name</source>
          <target state="translated">Имя целевой таблицы</target>
        </trans-unit>
        <trans-unit id="0672d7ed7ed6afdfd270b53235aa08ccc0eed98a" translate="yes" xml:space="preserve">
          <source>Test the connection by trying to authenticate.</source>
          <target state="translated">Проверьте соединение,пытаясь аутентифицироваться.</target>
        </trans-unit>
        <trans-unit id="20b77d389f5e8c5e987282b922a807df1f9260e2" translate="yes" xml:space="preserve">
          <source>Test the connection by trying to authenticate. It runs &lt;code&gt;SELECT 1+1 AS result&lt;/code&gt; query.</source>
          <target state="translated">Проверьте соединение, попытавшись пройти аутентификацию. Он запускает запрос &lt;code&gt;SELECT 1+1 AS result&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e0143c072d5ac7b543f7a97b25b22cf87a465c03" translate="yes" xml:space="preserve">
          <source>Testing the connection</source>
          <target state="translated">Тестирование соединения</target>
        </trans-unit>
        <trans-unit id="c363795bd7fa8fcfababae3f9976a3e94d298a31" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.sequelizerc&lt;/code&gt; File</source>
          <target state="translated">&lt;code&gt;.sequelizerc&lt;/code&gt; файла</target>
        </trans-unit>
        <trans-unit id="52fdd6c7b19c53e9c7650c11a173d0518be4c70c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CHAR&lt;/code&gt; and &lt;code&gt;STRING&lt;/code&gt; types expose the &lt;code&gt;BINARY&lt;/code&gt; property</source>
          <target state="translated">В &lt;code&gt;CHAR&lt;/code&gt; и &lt;code&gt;STRING&lt;/code&gt; типы разоблачить &lt;code&gt;BINARY&lt;/code&gt; недвижимость</target>
        </trans-unit>
        <trans-unit id="96604eb0bb158befed8a640da0e7f3054be98f32" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;fullName&lt;/code&gt; getter, is an example of how you can define pseudo properties on your models - attributes which are not actually part of your database schema. In fact, pseudo properties can be defined in two ways: using model getters, or by using a column with the &lt;a href=&quot;https://sequelize.org/variable/index.html#static-variable-DataTypes&quot;&gt;&lt;code&gt;VIRTUAL&lt;/code&gt; datatype&lt;/a&gt;. Virtual datatypes can have validations, while getters for virtual attributes cannot.</source>
          <target state="translated">&lt;code&gt;fullName&lt;/code&gt; добытчик, является примером того , как можно определить свойства псевдо ваших моделей - атрибуты , которые не являются фактически частью схемы базы данных. Фактически, псевдосвойства можно определить двумя способами: с помощью геттеров модели или с помощью столбца с &lt;a href=&quot;https://sequelize.org/variable/index.html#static-variable-DataTypes&quot;&gt; &lt;code&gt;VIRTUAL&lt;/code&gt; данных VIRTUAL&lt;/a&gt; . Виртуальные типы данных могут иметь проверки, а геттеры для виртуальных атрибутов - нет.</target>
        </trans-unit>
        <trans-unit id="b44f8380a2468cdb72b9deb6e94e4793fc900145" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getItem&lt;/code&gt; utility function on &lt;code&gt;Comment&lt;/code&gt; completes the picture - it simply converts the &lt;code&gt;commentable&lt;/code&gt; string into a call to either &lt;code&gt;getImage&lt;/code&gt; or &lt;code&gt;getPost&lt;/code&gt;, providing an abstraction over whether a comment belongs to a post or an image. You can pass a normal options object as a parameter to &lt;code&gt;getItem(options)&lt;/code&gt; to specify any where conditions or includes.</source>
          <target state="translated">&lt;code&gt;getItem&lt;/code&gt; функция полезности на &lt;code&gt;Comment&lt;/code&gt; завершает картину - он просто преобразует &lt;code&gt;commentable&lt;/code&gt; строки в вызов либо &lt;code&gt;getImage&lt;/code&gt; или &lt;code&gt;getPost&lt;/code&gt; , обеспечивая абстракцию по поводу того , принадлежит комментарий к сообщению или изображению. Вы можете передать обычный объект параметров в качестве параметра в &lt;code&gt;getItem(options)&lt;/code&gt; чтобы указать любые условия или включения.</target>
        </trans-unit>
        <trans-unit id="c5af38db2b9d87be8fca742043ab85cd54ed8644" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;import&lt;/code&gt; method can also accept a callback as an argument.</source>
          <target state="translated">Метод &lt;code&gt;import&lt;/code&gt; также может принимать обратный вызов в качестве аргумента.</target>
        </trans-unit>
        <trans-unit id="7c66c416ba19dd8a604d0fa8c48849d0b7770c55" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;isolationLevel&lt;/code&gt; can either be set globally when initializing the Sequelize instance or locally for every transaction:</source>
          <target state="translated">Уровень &lt;code&gt;isolationLevel&lt;/code&gt; может быть установлен глобально при инициализации экземпляра Sequelize или локально для каждой транзакции:</target>
        </trans-unit>
        <trans-unit id="aded916b2d52b83cbd3a306bbcaac58553342812" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; argument of hook method would be the second argument provided to the corresponding method or its cloned and extended version.</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; аргумент метода крюков будет второй аргумент при условии , к соответствующему способу или его клонированного и расширенной версии.</target>
        </trans-unit>
        <trans-unit id="6e08cedd8bd068ee0e858ac36cf905e6a6544cca" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;transaction&lt;/code&gt; option goes with most other options, which are usually the first argument of a method. For methods that take values, like &lt;code&gt;.create&lt;/code&gt;, &lt;code&gt;.update()&lt;/code&gt;, etc. &lt;code&gt;transaction&lt;/code&gt; should be passed to the option in the second argument. If unsure, refer to the API documentation for the method you are using to be sure of the signature.</source>
          <target state="translated">Опция &lt;code&gt;transaction&lt;/code&gt; сочетается с большинством других опций, которые обычно являются первым аргументом метода. Для методов, принимающих значения, таких как &lt;code&gt;.create&lt;/code&gt; , &lt;code&gt;.update()&lt;/code&gt; и т. Д., &lt;code&gt;transaction&lt;/code&gt; должна быть передана в параметр во втором аргументе. Если вы не уверены, обратитесь к документации API для метода, который вы используете, чтобы быть уверенным в подписи.</target>
        </trans-unit>
        <trans-unit id="4b9b49b97c6dcd275458969fdd514038c0782971" translate="yes" xml:space="preserve">
          <source>The BLOB datatype allows you to insert data both as strings and as buffers. When you do a find or findAll on a model which has a BLOB column, that data will always be returned as a buffer.</source>
          <target state="translated">Тип BLOB-данных позволяет вставлять данные как в виде строк,так и в виде буферов.Когда вы делаете поиск или findAll на модели,имеющей BLOB-столбец,эти данные всегда будут возвращаться в виде буфера.</target>
        </trans-unit>
        <trans-unit id="0d6ca5d74c8816ae0ded15e2a7a5beeecbf88579" translate="yes" xml:space="preserve">
          <source>The CLI</source>
          <target state="translated">ИЗО</target>
        </trans-unit>
        <trans-unit id="7543057877a60db6d5a05a1ccb4e14c360eef266" translate="yes" xml:space="preserve">
          <source>The DAO instance that caused the validation error</source>
          <target state="translated">Экземпляр DAO,который вызвал ошибку проверки</target>
        </trans-unit>
        <trans-unit id="5c2f82b73e030655c59432ce481b35adff70c042" translate="yes" xml:space="preserve">
          <source>The INET type holds an IPv4 or IPv6 host address, and optionally its subnet. Takes 7 or 19 bytes</source>
          <target state="translated">Тип INET содержит хост-адрес IPv4 или IPv6 и,опционально,подсеть.Потребуется 7 или 19 байт</target>
        </trans-unit>
        <trans-unit id="35c885e3e1208b7964c450f516be8caa8371b964" translate="yes" xml:space="preserve">
          <source>The JSON data type in PostgreSQL stores the value as plain text, as opposed to binary representation. If you simply want to store and retrieve a JSON representation, using JSON will take less disk space and less time to build from its input representation. However, if you want to do any operations on the JSON value, you should prefer the JSONB data type described below.</source>
          <target state="translated">Тип данных JSON в PostgreSQL хранит значение в виде простого текста,в отличие от двоичного представления.Если вы просто хотите хранить и получать JSON представление,то использование JSON займет меньше дискового пространства и меньше времени на сборку из его входного представления.Однако,если Вы хотите выполнять какие-либо операции со значением JSON,Вы должны предпочесть тип данных JSONB,описанный ниже.</target>
        </trans-unit>
        <trans-unit id="4f1ca89726cfb75c61b955405275bfa81fa8f0e1" translate="yes" xml:space="preserve">
          <source>The JSON data type is supported by the PostgreSQL, SQLite, MySQL and MariaDB dialects only.</source>
          <target state="translated">Тип данных JSON поддерживается только диалектами PostgreSQL,SQLite,MySQL и MariaDB.</target>
        </trans-unit>
        <trans-unit id="b4c18d45f4c7b31dc5aabb26fb9a9e22f31ce7cc" translate="yes" xml:space="preserve">
          <source>The MACADDR type stores MAC addresses. Takes 6 bytes</source>
          <target state="translated">Тип MACADDR хранит MAC-адреса.Занимает 6 байт</target>
        </trans-unit>
        <trans-unit id="6e037bc95bcf7d5b574c2d17b15f920746d615f7" translate="yes" xml:space="preserve">
          <source>The PostgreSQL &lt;code&gt;client_min_messages&lt;/code&gt; session parameter. Set to &lt;code&gt;false&lt;/code&gt; to not override the database's default.</source>
          <target state="translated">&lt;code&gt;client_min_messages&lt;/code&gt; сеанса PostgreSQL client_min_messages . Установите значение &lt;code&gt;false&lt;/code&gt; , чтобы не отменять значение по умолчанию для базы данных.</target>
        </trans-unit>
        <trans-unit id="92dcd073ff1557550a8981af1e6e839e5e4fae74" translate="yes" xml:space="preserve">
          <source>The PostgreSQL &lt;code&gt;standard_conforming_strings&lt;/code&gt; session parameter. Set to &lt;code&gt;false&lt;/code&gt; to not set the option. WARNING: Setting this to false may expose vulnerabilities and is not recommended!</source>
          <target state="translated">Параметр сеанса &lt;code&gt;standard_conforming_strings&lt;/code&gt; PostgreSQL . Установите значение &lt;code&gt;false&lt;/code&gt; , чтобы не устанавливать параметр. ВНИМАНИЕ: установка значения false может выявить уязвимости и не рекомендуется!</target>
        </trans-unit>
        <trans-unit id="ea2917bca3214c2f94009ee7f7e0ef5cef7ed728" translate="yes" xml:space="preserve">
          <source>The SQL that triggered the error</source>
          <target state="translated">SQL,который вызвал ошибку</target>
        </trans-unit>
        <trans-unit id="fdfcd4dec9f023d328d1c29bf2ce667d576056f9" translate="yes" xml:space="preserve">
          <source>The Sequelize constructor takes a &lt;code&gt;define&lt;/code&gt; option which will change the default options for all defined models.</source>
          <target state="translated">Конструктор Sequelize принимает параметр &lt;code&gt;define&lt;/code&gt; который изменяет параметры по умолчанию для всех определенных моделей.</target>
        </trans-unit>
        <trans-unit id="f021a2b45ae6896b6bc054e8bd5ccd034b732703" translate="yes" xml:space="preserve">
          <source>The Sequelize constructor takes a whole slew of options that are documented in the &lt;a href=&quot;../class/lib/sequelize.js~sequelize#instance-constructor-constructor&quot;&gt;API Reference for the Sequelize constructor&lt;/a&gt;.</source>
          <target state="translated">Конструктор Sequelize принимает множество параметров, которые описаны в &lt;a href=&quot;../class/lib/sequelize.js~sequelize#instance-constructor-constructor&quot;&gt;Справочнике по API для конструктора Sequelize&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c3f32fc062713c89992127673f0ff266e4a6d880" translate="yes" xml:space="preserve">
          <source>The above code tells Sequelize to expect a table named &lt;code&gt;users&lt;/code&gt; in the database with the fields &lt;code&gt;firstName&lt;/code&gt; and &lt;code&gt;lastName&lt;/code&gt;. The table name is automatically pluralized by default (a library called &lt;a href=&quot;https://www.npmjs.com/package/inflection&quot;&gt;inflection&lt;/a&gt; is used under the hood to do this). This behavior can be stopped for a specific model by using the &lt;code&gt;freezeTableName: true&lt;/code&gt; option, or for all models by using the &lt;code&gt;define&lt;/code&gt; option from the &lt;a href=&quot;../class/lib/sequelize.js~sequelize#instance-constructor-constructor&quot;&gt;Sequelize constructor&lt;/a&gt;.</source>
          <target state="translated">Приведенный выше код сообщает Sequelize ожидать в базе данных таблицу с именем &lt;code&gt;users&lt;/code&gt; с полями &lt;code&gt;firstName&lt;/code&gt; и &lt;code&gt;lastName&lt;/code&gt; . Имя таблицы по умолчанию автоматически ставится во множественное число (для этого под капотом используется библиотека под названием &lt;a href=&quot;https://www.npmjs.com/package/inflection&quot;&gt;inflection&lt;/a&gt; ). Это поведение можно остановить для конкретной модели с помощью параметра &lt;code&gt;freezeTableName: true&lt;/code&gt; или для всех моделей с помощью параметра &lt;code&gt;define&lt;/code&gt; из &lt;a href=&quot;../class/lib/sequelize.js~sequelize#instance-constructor-constructor&quot;&gt;конструктора Sequelize&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8f72de844a359ac7b2754481a3ae1e21505a5382" translate="yes" xml:space="preserve">
          <source>The alias of the relation, in case the model you want to eagerly load is aliased. For &lt;code&gt;hasOne&lt;/code&gt; / &lt;code&gt;belongsTo&lt;/code&gt;, this should be the singular name, and for &lt;code&gt;hasMany&lt;/code&gt;, it should be the plural</source>
          <target state="translated">Псевдоним отношения на случай, если модель, которую вы хотите загрузить, является псевдонимом. Для &lt;code&gt;hasOne&lt;/code&gt; / &lt;code&gt;belongsTo&lt;/code&gt; это должно быть имя в единственном числе, а для &lt;code&gt;hasMany&lt;/code&gt; - во множественном числе.</target>
        </trans-unit>
        <trans-unit id="99efeea290301860aca947970c356a75d984412b" translate="yes" xml:space="preserve">
          <source>The alias of this association. If you provide a string, it should be plural, and will be singularized using node.inflection. If you want to control the singular version yourself, provide an object with &lt;code&gt;plural&lt;/code&gt; and &lt;code&gt;singular&lt;/code&gt; keys. See also the &lt;code&gt;name&lt;/code&gt; option passed to &lt;code&gt;sequelize.define&lt;/code&gt;. If you create multiple associations between the same tables, you should provide an alias to be able to distinguish between them. If you provide an alias when creating the association, you should provide the same alias when eager loading and when getting associated models. Defaults to the pluralized name of target</source>
          <target state="translated">Псевдоним этой ассоциации. Если вы указываете строку, она должна быть во множественном числе и выделяться в единственном числе с помощью node.inflection. Если вы хотите самостоятельно управлять версией в единственном числе, предоставьте объекту ключи во &lt;code&gt;plural&lt;/code&gt; и &lt;code&gt;singular&lt;/code&gt; . См. Также параметр &lt;code&gt;name&lt;/code&gt; переданный в &lt;code&gt;sequelize.define&lt;/code&gt; . Если вы создаете несколько ассоциаций между одними и теми же таблицами, вы должны указать псевдоним, чтобы иметь возможность различать их. Если вы указываете псевдоним при создании ассоциации, вы должны указать тот же псевдоним при активной загрузке и при получении связанных моделей. По умолчанию используется имя цели во множественном числе.</target>
        </trans-unit>
        <trans-unit id="b8b5837eb09b93962a6de59344369c9b2dc0dea6" translate="yes" xml:space="preserve">
          <source>The alias of this model, in singular form. See also the &lt;code&gt;name&lt;/code&gt; option passed to &lt;code&gt;sequelize.define&lt;/code&gt;. If you create multiple associations between the same tables, you should provide an alias to be able to distinguish between them. If you provide an alias when creating the association, you should provide the same alias when eager loading and when getting associated models. Defaults to the singularized name of target</source>
          <target state="translated">Псевдоним этой модели в единственном числе. См. Также параметр &lt;code&gt;name&lt;/code&gt; переданный в &lt;code&gt;sequelize.define&lt;/code&gt; . Если вы создаете несколько ассоциаций между одними и теми же таблицами, вы должны указать псевдоним, чтобы иметь возможность различать их. Если вы указываете псевдоним при создании ассоциации, вы должны указать тот же псевдоним при активной загрузке и при получении связанных моделей. По умолчанию используется имя цели в единственном числе.</target>
        </trans-unit>
        <trans-unit id="6fcf9c630d31ebc1d75eae65eb6c73992888621e" translate="yes" xml:space="preserve">
          <source>The alias of this model. If you provide a string, it should be plural, and will be singularized using node.inflection. If you want to control the singular version yourself, provide an object with &lt;code&gt;plural&lt;/code&gt; and &lt;code&gt;singular&lt;/code&gt; keys. See also the &lt;code&gt;name&lt;/code&gt; option passed to &lt;code&gt;sequelize.define&lt;/code&gt;. If you create multiple associations between the same tables, you should provide an alias to be able to distinguish between them. If you provide an alias when creating the association, you should provide the same alias when eager loading and when getting associated models. Defaults to the pluralized name of target</source>
          <target state="translated">Псевдоним этой модели. Если вы указываете строку, она должна быть во множественном числе и выделяться в единственном числе с помощью node.inflection. Если вы хотите самостоятельно управлять версией в единственном числе, предоставьте объекту ключи во &lt;code&gt;plural&lt;/code&gt; и &lt;code&gt;singular&lt;/code&gt; . См. Также параметр &lt;code&gt;name&lt;/code&gt; переданный в &lt;code&gt;sequelize.define&lt;/code&gt; . Если вы создаете несколько ассоциаций между одними и теми же таблицами, вы должны указать псевдоним, чтобы иметь возможность различать их. Если вы указываете псевдоним при создании ассоциации, вы должны указать тот же псевдоним при активной загрузке и при получении связанных моделей. По умолчанию используется имя цели во множественном числе.</target>
        </trans-unit>
        <trans-unit id="6723f18b3bbf968c425605ca9dc759577bfe8738" translate="yes" xml:space="preserve">
          <source>The array or object must contain all bound values or Sequelize will throw an exception. This applies even to cases in which the database may ignore the bound parameter.</source>
          <target state="translated">Массив или объект должен содержать все связанные значения,иначе Sequelize бросит исключение.Это относится даже к тем случаям,когда БД может игнорировать связанный параметр.</target>
        </trans-unit>
        <trans-unit id="0ad94612989aa9f318b27d4d20664339044c9613" translate="yes" xml:space="preserve">
          <source>The association you want to eagerly load. (This can be used instead of providing a model/as pair)</source>
          <target state="translated">Ассоциация,которую ты хочешь с нетерпением загрузить.(Это может быть использовано вместо предоставления модели/пары).</target>
        </trans-unit>
        <trans-unit id="eeb0e6deb9b0e80d8f8265fdbac4c078f3171b7b" translate="yes" xml:space="preserve">
          <source>The attr can either be an object taken from &lt;code&gt;Model.rawAttributes&lt;/code&gt; (for example &lt;code&gt;Model.rawAttributes.id&lt;/code&gt; or &lt;code&gt;Model.rawAttributes.name&lt;/code&gt;). The attribute should be defined in your model definition. The attribute can also be an object from one of the sequelize utility functions (&lt;code&gt;sequelize.fn&lt;/code&gt;, &lt;code&gt;sequelize.col&lt;/code&gt; etc.)</source>
          <target state="translated">Атрибут может быть объектом, взятым из &lt;code&gt;Model.rawAttributes&lt;/code&gt; (например, &lt;code&gt;Model.rawAttributes.id&lt;/code&gt; или &lt;code&gt;Model.rawAttributes.name&lt;/code&gt; ). Атрибут должен быть определен в определении вашей модели. Атрибут также может быть объектом одной из служебных функций &lt;code&gt;sequelize.fn&lt;/code&gt; ( sequelize.fn , &lt;code&gt;sequelize.col&lt;/code&gt; и т. Д.)</target>
        </trans-unit>
        <trans-unit id="4f1a633ffadc1e2c2bc95e3c735fd1cf866d44c8" translate="yes" xml:space="preserve">
          <source>The attribute to aggregate over. Can be a field name or *</source>
          <target state="translated">Атрибут агрегата выше.Может быть именем поля или *</target>
        </trans-unit>
        <trans-unit id="22739ed01f959f4fdce30289f8b662f6f4a480e5" translate="yes" xml:space="preserve">
          <source>The attribute, which can be either an attribute object from &lt;code&gt;Model.rawAttributes&lt;/code&gt; or a sequelize object, for example an instance of &lt;code&gt;sequelize.fn&lt;/code&gt;. For simple string attributes, use the POJO syntax</source>
          <target state="translated">Атрибут, который может быть либо объектом атрибута из &lt;code&gt;Model.rawAttributes&lt;/code&gt; , либо объектом sequelize, например экземпляром &lt;code&gt;sequelize.fn&lt;/code&gt; . Для простых строковых атрибутов используйте синтаксис POJO</target>
        </trans-unit>
        <trans-unit id="2729266f67f2a23ec11b7b4334746cfee6eef44b" translate="yes" xml:space="preserve">
          <source>The callback is called with the transaction object, and should return a promise. If the promise is resolved, the transaction commits; if the promise rejects, the transaction rolls back</source>
          <target state="translated">Обратный вызов вызывается с объектом транзакции и должен вернуть обещание.Если обещание разрешено,транзакция совершает фиксацию;если обещание отвергается,транзакция откатывается назад</target>
        </trans-unit>
        <trans-unit id="89f67ef86d7f079615ec0e89c9fb9283c0562afc" translate="yes" xml:space="preserve">
          <source>The character(s) that separates the schema name from the table name</source>
          <target state="translated">Символ(ы),отделяющий имя схемы от имени таблицы.</target>
        </trans-unit>
        <trans-unit id="7bffb68a98cf41f92a6a5b6847d45ca564723683" translate="yes" xml:space="preserve">
          <source>The cidr type holds an IPv4 or IPv6 network specification. Takes 7 or 19 bytes.</source>
          <target state="translated">Тип cidr содержит сетевые спецификации IPv4 или IPv6.Потребуется 7 или 19 байт.</target>
        </trans-unit>
        <trans-unit id="08288fcdafa5090ff642d3378e7c64c514abd839" translate="yes" xml:space="preserve">
          <source>The code created a new instance. So when we already have an instance ...</source>
          <target state="translated">Код создал новый экземпляр.Так что когда у нас уже есть экземпляр ...</target>
        </trans-unit>
        <trans-unit id="86c3eb751548d29886ece41261fcf102e99bb6c1" translate="yes" xml:space="preserve">
          <source>The column of the foreign table that this column references</source>
          <target state="translated">Столбец зарубежной таблицы,на который ссылается этот столбец.</target>
        </trans-unit>
        <trans-unit id="086f5b689f580197262a5b2e07b9612e1b03fe5b" translate="yes" xml:space="preserve">
          <source>The comment option can also be used on a table, see &lt;a href=&quot;models-definition#configuration&quot;&gt;model configuration&lt;/a&gt;.</source>
          <target state="translated">Опцию комментария также можно использовать для таблицы, см. &lt;a href=&quot;models-definition#configuration&quot;&gt;Конфигурацию модели&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="307ca9cde38886869f5fa3f4a7f13e21882c3f36" translate="yes" xml:space="preserve">
          <source>The condition. Can be both a simply type, or a further condition (&lt;code&gt;or&lt;/code&gt;, &lt;code&gt;and&lt;/code&gt;, &lt;code&gt;.literal&lt;/code&gt; etc.)</source>
          <target state="translated">Условие. Может быть как простым типом, так и дополнительным условием ( &lt;code&gt;or&lt;/code&gt; , &lt;code&gt;and&lt;/code&gt; , &lt;code&gt;.literal&lt;/code&gt; и т. Д.)</target>
        </trans-unit>
        <trans-unit id="b12da706808f947908ea3c7e4a43a6c6df973b54" translate="yes" xml:space="preserve">
          <source>The connection specific error which triggered this one</source>
          <target state="translated">Ошибка соединения,вызвавшая эту ошибку</target>
        </trans-unit>
        <trans-unit id="f11daf184810825d2e034f106bcdd1a52e3ca438" translate="yes" xml:space="preserve">
          <source>The constraints can be configured in a transaction like this. It will trigger a query once the transaction has been started and set the constraints to be checked at the very end of the transaction.</source>
          <target state="translated">Ограничения могут быть настроены в такой транзакции.Это вызовет запрос после того,как транзакция будет запущена,и установит ограничения,которые будут проверяться в самом конце транзакции.</target>
        </trans-unit>
        <trans-unit id="7f82e34423c4aa983880f84a931ac15a57ef5e9c" translate="yes" xml:space="preserve">
          <source>The created target model</source>
          <target state="translated">Созданная целевая модель</target>
        </trans-unit>
        <trans-unit id="8365a8cc325cbcee0b79e12d5dd24da474986bd1" translate="yes" xml:space="preserve">
          <source>The custom name for unique constraint.</source>
          <target state="translated">Настраиваемое имя для уникального ограничения.</target>
        </trans-unit>
        <trans-unit id="26d8528d64198217cd0a2792bd30ba499b76275f" translate="yes" xml:space="preserve">
          <source>The database may add further restrictions to this. Bind parameters cannot be SQL keywords, nor table or column names. They are also ignored in quoted text or data. In PostgreSQL it may also be needed to typecast them, if the type cannot be inferred from the context &lt;code&gt;$1::varchar&lt;/code&gt;.</source>
          <target state="translated">База данных может добавить к этому дополнительные ограничения. Параметры привязки не могут быть ключевыми словами SQL, а также именами таблиц или столбцов. Они также игнорируются в цитируемом тексте или данных. В PostgreSQL также может потребоваться привести их к типу, если тип не может быть выведен из контекста &lt;code&gt;$1::varchar&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="133c42933eb9f6bdcc738e29e1ecb28fe8f85820" translate="yes" xml:space="preserve">
          <source>The database name.</source>
          <target state="translated">Имя базы данных.</target>
        </trans-unit>
        <trans-unit id="c7b14aedd0c4e517f0bbd0dc1afb0301b4627da0" translate="yes" xml:space="preserve">
          <source>The default casing is &lt;code&gt;camelCase&lt;/code&gt;. If the source model is configured with &lt;code&gt;underscored: true&lt;/code&gt; the foreignKey will be created with field &lt;code&gt;snake_case&lt;/code&gt;.</source>
          <target state="translated">Оболочка по умолчанию - &lt;code&gt;camelCase&lt;/code&gt; . Если исходная модель настроена с &lt;code&gt;underscored: true&lt;/code&gt; foreignKey будет создан с полем &lt;code&gt;snake_case&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ab6a1cee9dd55a28134e5eb727ede271bd531534" translate="yes" xml:space="preserve">
          <source>The default scope can be removed by calling &lt;code&gt;.unscoped()&lt;/code&gt;, &lt;code&gt;.scope(null)&lt;/code&gt;, or by invoking another scope:</source>
          <target state="translated">Область по умолчанию можно удалить, вызвав &lt;code&gt;.unscoped()&lt;/code&gt; , &lt;code&gt;.scope(null)&lt;/code&gt; или вызвав другую область:</target>
        </trans-unit>
        <trans-unit id="b7386af5698cd007ddf66e78123acc72fab2f4ea" translate="yes" xml:space="preserve">
          <source>The default scope is always applied. This means, that with the model definition above, &lt;code&gt;Project.findAll()&lt;/code&gt; will create the following query:</source>
          <target state="translated">Всегда применяется область действия по умолчанию. Это означает, что с приведенным выше определением модели &lt;code&gt;Project.findAll()&lt;/code&gt; создаст следующий запрос:</target>
        </trans-unit>
        <trans-unit id="665cbb172b6490eaddc986b85ff39499207a5181" translate="yes" xml:space="preserve">
          <source>The description of a database column</source>
          <target state="translated">Описание столбца базы данных</target>
        </trans-unit>
        <trans-unit id="d84e52eb436e545fc5c78ff373642e0e5f89fc49" translate="yes" xml:space="preserve">
          <source>The dialect of the database you are connecting to. One of mysql, postgres, sqlite and mssql.</source>
          <target state="translated">Диалект базы данных,к которой вы подключаетесь.Один из mysql,postgres,sqlite и mssql.</target>
        </trans-unit>
        <trans-unit id="88d26fe16e5692696255a5355d0f4f8be2e688ab" translate="yes" xml:space="preserve">
          <source>The field that triggered the validation error</source>
          <target state="translated">Поле,которое вызвало ошибку проверки</target>
        </trans-unit>
        <trans-unit id="dc12ac79eaf881af2a210995e506e55117bb8e15" translate="yes" xml:space="preserve">
          <source>The fields to insert / update. Defaults to all changed fields</source>
          <target state="translated">Поля для вставки/обновления.По умолчанию для всех измененных полей</target>
        </trans-unit>
        <trans-unit id="82b4a90983df6d340d9ebb2913376b001f99f3b5" translate="yes" xml:space="preserve">
          <source>The following example would return successful:</source>
          <target state="translated">Следующий пример будет успешным:</target>
        </trans-unit>
        <trans-unit id="280f1e7b08f7b7110bec1c76d91b0af4a17b5d16" translate="yes" xml:space="preserve">
          <source>The following hooks will emit whenever you're editing a single object</source>
          <target state="translated">Следующие крючки будут испускаться всякий раз,когда вы редактируете один объект.</target>
        </trans-unit>
        <trans-unit id="0e6a1b0b86882a21b759b1ffd75f905d1a7598a6" translate="yes" xml:space="preserve">
          <source>The following is an example of a migration that performs two changes in the database, using a transaction to ensure that all instructions are successfully executed or rolled back in case of failure:</source>
          <target state="translated">Ниже приведен пример миграции,которая выполняет два изменения в базе данных,используя транзакцию для обеспечения успешного выполнения или отката всех инструкций в случае неудачи:</target>
        </trans-unit>
        <trans-unit id="3dc82f0763e4ab04ff35cac14d85b168f30e6b9f" translate="yes" xml:space="preserve">
          <source>The following skeleton shows a typical migration file.</source>
          <target state="translated">На следующем скелете показан типичный файл миграции.</target>
        </trans-unit>
        <trans-unit id="a10c7d3ee357a66ed02d0cefd56151488e7581d5" translate="yes" xml:space="preserve">
          <source>The foreign key column in Picture will now be called &lt;code&gt;uid&lt;/code&gt; instead of the default &lt;code&gt;userId&lt;/code&gt;.</source>
          <target state="translated">Столбец внешнего ключа в Picture теперь будет называться &lt;code&gt;uid&lt;/code&gt; вместо &lt;code&gt;userId&lt;/code&gt; по умолчанию .</target>
        </trans-unit>
        <trans-unit id="529cad56c0cb70caba210ae4d8aa6458b6284149" translate="yes" xml:space="preserve">
          <source>The foreign keys can be configured like this. It will create a foreign key that will check the constraints immediately when the data was inserted.</source>
          <target state="translated">Иностранные ключи могут быть настроены таким образом.Он создаст инородный ключ,который будет проверять ограничения сразу же после вставки данных.</target>
        </trans-unit>
        <trans-unit id="793f0633fe67cfcf9f0c69748cf2894da9604c8b" translate="yes" xml:space="preserve">
          <source>The function passed to &lt;code&gt;afterCommit&lt;/code&gt; can optionally return a promise that will resolve before the promise chain that created the transaction resolves</source>
          <target state="translated">Функция, переданная в &lt;code&gt;afterCommit&lt;/code&gt; , может при желании вернуть обещание, которое будет разрешено до того, как разрешится цепочка обещаний, создавшая транзакцию.</target>
        </trans-unit>
        <trans-unit id="391fd95e64f40aa9733294c80cb361252d715dc2" translate="yes" xml:space="preserve">
          <source>The function to use for aggregation, e.g. sum, max etc.</source>
          <target state="translated">Функция для агрегирования,например,сумма,макс.и т.д.</target>
        </trans-unit>
        <trans-unit id="000d55600122d86f1eba23f47b3d17f67612ff60" translate="yes" xml:space="preserve">
          <source>The function you want to call</source>
          <target state="translated">Функция,которую вы хотите вызвать</target>
        </trans-unit>
        <trans-unit id="90c3ebe86ec649ba3e67ec8bd89813b5825ec277" translate="yes" xml:space="preserve">
          <source>The host of the relational database.</source>
          <target state="translated">Хост реляционной базы данных.</target>
        </trans-unit>
        <trans-unit id="078148a6e892df7a20d488625d335ca2bfefddd8" translate="yes" xml:space="preserve">
          <source>The interface that Sequelize uses to talk to all databases</source>
          <target state="translated">Интерфейс,который Sequelize использует для взаимодействия со всеми базами данных.</target>
        </trans-unit>
        <trans-unit id="0b73ca2f73dbf5fbdcb5f9c41700b408a0e80f3d" translate="yes" xml:space="preserve">
          <source>The key difference is that the managed transaction uses a callback that expects a promise to be returned to it while the unmanaged transaction returns a promise.</source>
          <target state="translated">Ключевое отличие заключается в том,что управляемая транзакция использует обратный вызов,который ожидает,что обещание будет возвращено,в то время как неуправляемая транзакция возвращает обещание.</target>
        </trans-unit>
        <trans-unit id="78ad99f68c3f49de5dac894a3e535c3b22d08e81" translate="yes" xml:space="preserve">
          <source>The last option is the default in PostgreSQL and won't allow you to dynamically change the rule in a transaction. See &lt;a href=&quot;transactions#options&quot;&gt;the transaction section&lt;/a&gt; for further information.</source>
          <target state="translated">Последний вариант используется в PostgreSQL по умолчанию и не позволяет динамически изменять правило в транзакции. См. &lt;a href=&quot;transactions#options&quot;&gt;Раздел транзакций&lt;/a&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="ec4984d2ddd30205a2e231be149e2871ddd539b9" translate="yes" xml:space="preserve">
          <source>The library for MSSQL is&lt;code&gt;tedious@^6.0.0&lt;/code&gt; You'll just need to define the dialect. Please note: &lt;code&gt;tedious@^6.0.0&lt;/code&gt; requires you to nest MSSQL specific options inside an additional &lt;code&gt;options&lt;/code&gt;-object inside the &lt;code&gt;dialectOptions&lt;/code&gt;-object.</source>
          <target state="translated">Библиотека для MSSQL - &lt;code&gt;tedious@^6.0.0&lt;/code&gt; . Вам просто нужно определить диалект. Обратите внимание: &lt;code&gt;tedious@^6.0.0&lt;/code&gt; требует, чтобы вы вложили специфические параметры MSSQL в дополнительный объект &lt;code&gt;options&lt;/code&gt; внутри &lt;code&gt;dialectOptions&lt;/code&gt; dialectOptions.</target>
        </trans-unit>
        <trans-unit id="1658788de2d8228e11cec2bccf15ee08bd03c17f" translate="yes" xml:space="preserve">
          <source>The maximum time, in milliseconds, that a connection can be idle before being released.</source>
          <target state="translated">Максимальное время в миллисекундах,что соединение может быть пропущено перед освобождением.</target>
        </trans-unit>
        <trans-unit id="ba55d264e60dd5d5b5ddf45b2ce564066fb762a9" translate="yes" xml:space="preserve">
          <source>The maximum time, in milliseconds, that pool will try to get connection before throwing error</source>
          <target state="translated">Максимальное время,в миллисекундах,этот пул будет пытаться получить соединение,прежде чем бросать ошибку.</target>
        </trans-unit>
        <trans-unit id="5ee71bd71da0b1e5f70afac2c78ad97814aea849" translate="yes" xml:space="preserve">
          <source>The merge illustrated above works in the exact same way regardless of the order applied to the scopes. The order would only make a difference if a certain option was set by two different scopes - which is not the case of the above example, since each scope does a different thing.</source>
          <target state="translated">Слияние,проиллюстрированное выше,работает точно так же,независимо от порядка,применяемого к диапазонам.Порядок будет иметь значение только в том случае,если определенная опция будет установлена двумя разными диапазонами-что не так в примере выше,так как каждый диапазон делает свою работу по-разному.</target>
        </trans-unit>
        <trans-unit id="768b334f10219b8ad448c59e67cb8742c9f47374" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;findOrCreate&lt;/code&gt; can be used to check if a certain element already exists in the database. If that is the case the method will result in a respective instance. If the element does not yet exist, it will be created.</source>
          <target state="translated">Метод &lt;code&gt;findOrCreate&lt;/code&gt; можно использовать для проверки того, существует ли уже определенный элемент в базе данных. В этом случае метод приведет к созданию соответствующего экземпляра. Если элемент еще не существует, он будет создан.</target>
        </trans-unit>
        <trans-unit id="3d86660c6baef8b679849a118c8e3209fbf8ab29" translate="yes" xml:space="preserve">
          <source>The method to create the index by (&lt;code&gt;USING&lt;/code&gt; statement in SQL). BTREE and HASH are supported by mysql and postgres, and postgres additionally supports GIST and GIN.</source>
          <target state="translated">Метод создания индекса ( инструкция &lt;code&gt;USING&lt;/code&gt; в SQL). BTREE и HASH поддерживаются mysql и postgres, а postgres дополнительно поддерживает GIST и GIN.</target>
        </trans-unit>
        <trans-unit id="2ba17aa0bb5f9dc7d5841a219c942e597585fcbc" translate="yes" xml:space="preserve">
          <source>The model used to join both sides of the N:M association.</source>
          <target state="translated">Модель была использована для присоединения к обеим сторонам ассоциации N:M.</target>
        </trans-unit>
        <trans-unit id="344f38a91e7d9dc5d063993463bcdaa555327fc6" translate="yes" xml:space="preserve">
          <source>The model you want to eagerly load</source>
          <target state="translated">Модель,которую вы хотите с нетерпением загрузить</target>
        </trans-unit>
        <trans-unit id="7958ce6ba41d78327583cdbfd8cb6017bf350a54" translate="yes" xml:space="preserve">
          <source>The name of a model defined with Sequelize.define</source>
          <target state="translated">Название модели,определенное с помощью Sequelize.define.</target>
        </trans-unit>
        <trans-unit id="20779cb99d8b313c45bb680661f5068180a4b366" translate="yes" xml:space="preserve">
          <source>The name of the attribute to use as the key for the association in the source table. Defaults to the primary key of the source table</source>
          <target state="translated">Имя атрибута для использования в качестве ключа для ассоциации в исходной таблице.По умолчанию первичный ключ исходной таблицы.</target>
        </trans-unit>
        <trans-unit id="2c370d4fbb6793a135a98f2d34ffdc1efa7aa44d" translate="yes" xml:space="preserve">
          <source>The name of the attribute to use as the key for the association in the target table. Defaults to the primary key of the target table</source>
          <target state="translated">Имя атрибута для использования в качестве ключа для ассоциации в целевой таблице.По умолчанию первичный ключ целевой таблицы.</target>
        </trans-unit>
        <trans-unit id="93c15edec87bb8d344200119a7dc2a4a142ddf00" translate="yes" xml:space="preserve">
          <source>The name of the column</source>
          <target state="translated">Название колонки</target>
        </trans-unit>
        <trans-unit id="8c4f59698903f75b8bd6022cb4552203a39c97a3" translate="yes" xml:space="preserve">
          <source>The name of the database</source>
          <target state="translated">Название базы данных</target>
        </trans-unit>
        <trans-unit id="22a68705226fe8673395221999a0d393f6c5865e" translate="yes" xml:space="preserve">
          <source>The name of the field to use as the key for the association in the source table. Defaults to the primary key of the source table</source>
          <target state="translated">Название поля для использования в качестве ключа для ассоциации в исходной таблице.По умолчанию первичный ключ исходной таблицы.</target>
        </trans-unit>
        <trans-unit id="15885ab4b151a1a790fcb10a8b5e2b0d66ba2eec" translate="yes" xml:space="preserve">
          <source>The name of the foreign key attribute in the source table or an object representing the type definition for the foreign column (see &lt;code&gt;Sequelize.define&lt;/code&gt; for syntax). When using an object, you can add a &lt;code&gt;name&lt;/code&gt; property to set the name of the column. Defaults to the name of target + primary key of target</source>
          <target state="translated">Имя атрибута внешнего ключа в исходной таблице или объекта, представляющего определение типа для внешнего столбца ( синтаксис см. В &lt;code&gt;Sequelize.define&lt;/code&gt; ). При использовании объекта вы можете добавить свойство &lt;code&gt;name&lt;/code&gt; , чтобы задать имя столбца. По умолчанию имя цели + первичный ключ цели</target>
        </trans-unit>
        <trans-unit id="eb6459fe5afc725ce007c909a06d98e3db4d2d06" translate="yes" xml:space="preserve">
          <source>The name of the foreign key attribute in the target model or an object representing the type definition for the foreign column (see &lt;code&gt;Sequelize.define&lt;/code&gt; for syntax). When using an object, you can add a &lt;code&gt;name&lt;/code&gt; property to set the name of the column. Defaults to the name of source + primary key of source</source>
          <target state="translated">Имя атрибута внешнего ключа в целевой модели или объекта, представляющего определение типа для внешнего столбца ( синтаксис см. В &lt;code&gt;Sequelize.define&lt;/code&gt; ). При использовании объекта вы можете добавить свойство &lt;code&gt;name&lt;/code&gt; , чтобы задать имя столбца. По умолчанию используется имя источника + первичный ключ источника.</target>
        </trans-unit>
        <trans-unit id="42469972a87959d8071e3f01dc78f6c8d2553e4f" translate="yes" xml:space="preserve">
          <source>The name of the foreign key in the join table (representing the source model) or an object representing the type definition for the foreign column (see &lt;code&gt;Sequelize.define&lt;/code&gt; for syntax). When using an object, you can add a &lt;code&gt;name&lt;/code&gt; property to set the name of the column. Defaults to the name of source + primary key of source</source>
          <target state="translated">Имя внешнего ключа в таблице соединения (представляющей исходную модель) или объект, представляющий определение типа для внешнего столбца ( синтаксис см. В &lt;code&gt;Sequelize.define&lt;/code&gt; ). При использовании объекта вы можете добавить свойство &lt;code&gt;name&lt;/code&gt; , чтобы задать имя столбца. По умолчанию используется имя источника + первичный ключ источника.</target>
        </trans-unit>
        <trans-unit id="fe4d422c72187bb994f27a984373dd051447a90f" translate="yes" xml:space="preserve">
          <source>The name of the foreign key in the join table (representing the target model) or an object representing the type definition for the other column (see &lt;code&gt;Sequelize.define&lt;/code&gt; for syntax). When using an object, you can add a &lt;code&gt;name&lt;/code&gt; property to set the name of the column. Defaults to the name of target + primary key of target</source>
          <target state="translated">Имя внешнего ключа в таблице соединения (представляющей целевую модель) или объекта, представляющего определение типа для другого столбца ( синтаксис см. В &lt;code&gt;Sequelize.define&lt;/code&gt; ). При использовании объекта вы можете добавить свойство &lt;code&gt;name&lt;/code&gt; , чтобы задать имя столбца. По умолчанию имя цели + первичный ключ цели</target>
        </trans-unit>
        <trans-unit id="38709c5641379045db5e5d83ba646ba0c902d682" translate="yes" xml:space="preserve">
          <source>The name of the foreign key in the target table or an object representing the type definition for the foreign column (see &lt;code&gt;Sequelize.define&lt;/code&gt; for syntax). When using an object, you can add a &lt;code&gt;name&lt;/code&gt; property to set the name of the column. Defaults to the name of source + primary key of source</source>
          <target state="translated">Имя внешнего ключа в целевой таблице или объект, представляющий определение типа для внешнего столбца ( синтаксис см. В &lt;code&gt;Sequelize.define&lt;/code&gt; ). При использовании объекта вы можете добавить свойство &lt;code&gt;name&lt;/code&gt; , чтобы задать имя столбца. По умолчанию используется имя источника + первичный ключ источника.</target>
        </trans-unit>
        <trans-unit id="7a7cf09bcd6575bf593ecb7e44a875789583a801" translate="yes" xml:space="preserve">
          <source>The name of the index. Defaults to model name + _ + fields concatenated</source>
          <target state="translated">Название индекса.По умолчанию имя модели+_+поля конкапсулированы.</target>
        </trans-unit>
        <trans-unit id="e0dee175f7513db4bb65e2da34923be2d4fb8f8d" translate="yes" xml:space="preserve">
          <source>The name of the language that the function is implemented in</source>
          <target state="translated">Название языка,на котором реализована функция</target>
        </trans-unit>
        <trans-unit id="901c3e2315864e0cfc881f469ee9e42e145e1941" translate="yes" xml:space="preserve">
          <source>The name of the model on which the update was attempted</source>
          <target state="translated">Название модели,на которой была предпринята попытка обновления.</target>
        </trans-unit>
        <trans-unit id="4ea96b65632c0d275cf41855cbbc4cfc2e78bbea" translate="yes" xml:space="preserve">
          <source>The name of the model. The model will be stored in &lt;code&gt;sequelize.models&lt;/code&gt; under this name</source>
          <target state="translated">Название модели. Модель будет храниться в &lt;code&gt;sequelize.models&lt;/code&gt; под этим именем.</target>
        </trans-unit>
        <trans-unit id="fa9b6db53f226bce8b7814cf4cd827147473b678" translate="yes" xml:space="preserve">
          <source>The name of the schema</source>
          <target state="translated">Название схемы</target>
        </trans-unit>
        <trans-unit id="4a337049980fb26ef87b1957b77e10b1adaa13d4" translate="yes" xml:space="preserve">
          <source>The name of the scope. Use &lt;code&gt;defaultScope&lt;/code&gt; to override the default scope</source>
          <target state="translated">Имя области. Используйте &lt;code&gt;defaultScope&lt;/code&gt; , чтобы переопределить область по умолчанию</target>
        </trans-unit>
        <trans-unit id="689b7c83b43fba0e2101546e9d74f61d1a062d93" translate="yes" xml:space="preserve">
          <source>The name of the table that is used to join source and target in n:m associations. Can also be a sequelize model if you want to define the junction table yourself and add extra attributes to it.</source>
          <target state="translated">Название таблицы,которая используется для объединения источника и цели в n:m ассоциациях.Также может быть моделью сиквелизации,если вы хотите самостоятельно определить таблицу слияния и добавить к ней дополнительные атрибуты.</target>
        </trans-unit>
        <trans-unit id="6408e2ecf1340ab31daec80973b0b23a6dc6fdf2" translate="yes" xml:space="preserve">
          <source>The name of the template from which to create the new database, PostgreSQL only</source>
          <target state="translated">Имя шаблона,из которого будет создаваться новая база данных,только PostgreSQL</target>
        </trans-unit>
        <trans-unit id="3af644ca8cb4bd3901646f8c9686c10ad3f438f9" translate="yes" xml:space="preserve">
          <source>The new range can be used in model definitions as &lt;code&gt;Sequelize.RANGE(Sequelize.NEWTYPE)&lt;/code&gt; or &lt;code&gt;DataTypes.RANGE(DataTypes.NEWTYPE)&lt;/code&gt;.</source>
          <target state="translated">Новый диапазон можно использовать в определениях модели как &lt;code&gt;Sequelize.RANGE(Sequelize.NEWTYPE)&lt;/code&gt; или &lt;code&gt;DataTypes.RANGE(DataTypes.NEWTYPE)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c3d7de3db43f176261838315f9462534066abc21" translate="yes" xml:space="preserve">
          <source>The next is an example of a migration that has a foreign key. You can use references to specify a foreign key:</source>
          <target state="translated">Следующий пример-миграция с иностранным ключом.Вы можете использовать ссылки для указания иностранного ключа:</target>
        </trans-unit>
        <trans-unit id="e90d9ad1b9b3b4f1a236dc0cc182271fbe723b0e" translate="yes" xml:space="preserve">
          <source>The next is an example of a migration that has uses async/await where you create an unique index on a new column:</source>
          <target state="translated">Следующий пример миграции,в которой используется async/await,где вы создаете уникальный индекс в новом столбце:</target>
        </trans-unit>
        <trans-unit id="5bfd201c5d2f64d334aaed75ca93f6250c27f3e0" translate="yes" xml:space="preserve">
          <source>The number of destroyed rows</source>
          <target state="translated">Количество уничтоженных рядов</target>
        </trans-unit>
        <trans-unit id="6081ff3872966efe1d8dfd421d4fb7860123280f" translate="yes" xml:space="preserve">
          <source>The number to decrement by</source>
          <target state="translated">Количество,которое уменьшается на</target>
        </trans-unit>
        <trans-unit id="30c2b338b0c6fb53c4b5c1dd307e605378770430" translate="yes" xml:space="preserve">
          <source>The number to increment by</source>
          <target state="translated">Количество,которое можно увеличить на</target>
        </trans-unit>
        <trans-unit id="5519b26afd29019553644d95f3657c0b4ef9b9ea" translate="yes" xml:space="preserve">
          <source>The only way to call beforeDestroy/afterDestroy hooks are on associations with &lt;code&gt;onDelete: 'cascade'&lt;/code&gt; and the option &lt;code&gt;hooks: true&lt;/code&gt;. For instance:</source>
          <target state="translated">Единственный способ вызвать хуки beforeDestroy / afterDestroy - это ассоциации с &lt;code&gt;onDelete: 'cascade'&lt;/code&gt; и опцией &lt;code&gt;hooks: true&lt;/code&gt; . Например:</target>
        </trans-unit>
        <trans-unit id="c69a63575e1fb55daa7f9a2dfde0c6053bf26ef6" translate="yes" xml:space="preserve">
          <source>The options object that you pass to &lt;code&gt;findAndCountAll&lt;/code&gt; is the same as for &lt;code&gt;findAll&lt;/code&gt; (described below).</source>
          <target state="translated">Объект параметров, который вы передаете в &lt;code&gt;findAndCountAll&lt;/code&gt; , такой же, как и для &lt;code&gt;findAll&lt;/code&gt; (описан ниже).</target>
        </trans-unit>
        <trans-unit id="a45202cbcffdecef1bfb35227b61eaaaeef09d0e" translate="yes" xml:space="preserve">
          <source>The options passed to Model.destroy in addition to truncate</source>
          <target state="translated">Опции,переданные в Model.destroy в дополнение к усечённым</target>
        </trans-unit>
        <trans-unit id="3f3dcd71f3878dfff6b16011edbaab2ef1e64db1" translate="yes" xml:space="preserve">
          <source>The options passed to each call to Model.drop</source>
          <target state="translated">Опции,передаваемые при каждом вызове в Model.drop.</target>
        </trans-unit>
        <trans-unit id="b843160b62331068336d27cc8d45b2412cdff08d" translate="yes" xml:space="preserve">
          <source>The parameters for the sql that triggered the error</source>
          <target state="translated">Параметры квадратного метра,который вызвал ошибку.</target>
        </trans-unit>
        <trans-unit id="b7e618cc7e765bd054110930a05bbf6f5cafdacb" translate="yes" xml:space="preserve">
          <source>The passed &lt;code&gt;queryInterface&lt;/code&gt; object can be used to modify the database. The &lt;code&gt;Sequelize&lt;/code&gt; object stores the available data types such as &lt;code&gt;STRING&lt;/code&gt; or &lt;code&gt;INTEGER&lt;/code&gt;. Function &lt;code&gt;up&lt;/code&gt; or &lt;code&gt;down&lt;/code&gt; should return a &lt;code&gt;Promise&lt;/code&gt;. Let's look at an example:</source>
          <target state="translated">Принятый &lt;code&gt;queryInterface&lt;/code&gt; объект может быть использован для изменения базы данных. Объект &lt;code&gt;Sequelize&lt;/code&gt; хранит доступные типы данных, такие как &lt;code&gt;STRING&lt;/code&gt; или &lt;code&gt;INTEGER&lt;/code&gt; . Функция &lt;code&gt;up&lt;/code&gt; или &lt;code&gt;down&lt;/code&gt; должна возвращать &lt;code&gt;Promise&lt;/code&gt; . Давайте посмотрим на пример:</target>
        </trans-unit>
        <trans-unit id="d2533745943844afbedf7eb8255a5190f883bdec" translate="yes" xml:space="preserve">
          <source>The password which is used to authenticate against the database.</source>
          <target state="translated">Пароль,который используется для аутентификации по базе данных.</target>
        </trans-unit>
        <trans-unit id="e964b1bc1afa7e133edcfa208521202aaf1336e1" translate="yes" xml:space="preserve">
          <source>The password which is used to authenticate against the database. Supports SQLCipher encryption for SQLite.</source>
          <target state="translated">Пароль,который используется для аутентификации по базе данных.Поддерживает шифрование SQLCipher для SQLite.</target>
        </trans-unit>
        <trans-unit id="d1f9da31741290e9b21dee89de285e5d49b6e9b8" translate="yes" xml:space="preserve">
          <source>The path to be checked for error items</source>
          <target state="translated">Путь,который необходимо проверить на наличие ошибок</target>
        </trans-unit>
        <trans-unit id="e666a85eaccb1faddd6ef50cb44be68ea6f3ce05" translate="yes" xml:space="preserve">
          <source>The path to the file that holds the model you want to import. If the part is relative, it will be resolved relatively to the calling file</source>
          <target state="translated">Путь к файлу,содержащему модель,которую вы хотите импортировать.Если деталь относительна,то она будет разрешена относительно вызывающего файла</target>
        </trans-unit>
        <trans-unit id="52ec3b98cef1dcaeea55cc63084c0f82417242c6" translate="yes" xml:space="preserve">
          <source>The polymorphic association can be implemented with an &lt;em&gt;association scope&lt;/em&gt; :</source>
          <target state="translated">Полиморфная ассоциация может быть реализована с &lt;em&gt;областью ассоциации&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="ccdd83d9259d4f504d2c47076b673df711befe8f" translate="yes" xml:space="preserve">
          <source>The port of the relational database.</source>
          <target state="translated">Порт реляционной базы данных.</target>
        </trans-unit>
        <trans-unit id="9a65ac5ab95179f410b68d283a2ce4caa4e100b0" translate="yes" xml:space="preserve">
          <source>The possible isolations levels to use when starting a transaction:</source>
          <target state="translated">Возможные уровни изоляции для использования при запуске транзакции:</target>
        </trans-unit>
        <trans-unit id="cadc5244d3fbd7d24b1c5864d52995cd667e11c7" translate="yes" xml:space="preserve">
          <source>The previous example can be extended to support an association alias.</source>
          <target state="translated">Предыдущий пример может быть расширен для поддержки псевдонима ассоциации.</target>
        </trans-unit>
        <trans-unit id="0e7860e1e9fe6157f068d6e05ea4c9ba937f1820" translate="yes" xml:space="preserve">
          <source>The promise fulfills if and only if validation successful; otherwise it rejects an Error instance containing { field name : [error msgs] } entries.</source>
          <target state="translated">Обещание выполняется,если и только если проверка прошла успешно;в противном случае оно отвергает экземпляр Error,содержащий{имя поля:[ошибка msgs]}записей.</target>
        </trans-unit>
        <trans-unit id="c7345c3a97b1369d2ea2bf0cee0e1778a424ab23" translate="yes" xml:space="preserve">
          <source>The promise returns an array with one or two elements. The first element is always the number of affected rows, while the second element is the actual affected rows (only supported in postgres with &lt;code&gt;options.returning&lt;/code&gt; true).</source>
          <target state="translated">Обещание возвращает массив с одним или двумя элементами. Первый элемент - это всегда количество затронутых строк, а второй элемент - это фактически затронутые строки (поддерживается только в postgres с &lt;code&gt;options.returning&lt;/code&gt; true).</target>
        </trans-unit>
        <trans-unit id="b66998033b01ad0f71a1f99fd1205004d74f54f7" translate="yes" xml:space="preserve">
          <source>The protocol of the relational database.</source>
          <target state="translated">Протокол реляционной базы данных.</target>
        </trans-unit>
        <trans-unit id="9b65629117d86e6ea7f1be1d190a811c13b665fb" translate="yes" xml:space="preserve">
          <source>The query above will only count users who have an active profile, because &lt;code&gt;required&lt;/code&gt; is implicitly set to true when you add a where clause to the include.</source>
          <target state="translated">В приведенном выше запросе будут учитываться только пользователи, у которых есть активный профиль, потому что &lt;code&gt;required&lt;/code&gt; неявно установлено в true, когда вы добавляете предложение where в include.</target>
        </trans-unit>
        <trans-unit id="f17651b8defa7a688a238ee9c850c88d216bbd4b" translate="yes" xml:space="preserve">
          <source>The query above will return all users, and all their instruments, but only those teachers associated with &lt;code&gt;Woodstock Music School&lt;/code&gt;.</source>
          <target state="translated">Приведенный выше запрос вернет всех пользователей и все их инструменты, но только тех учителей, которые связаны с &lt;code&gt;Woodstock Music School&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="882e95417cd6d361e8a21202698fdccdb38d7585" translate="yes" xml:space="preserve">
          <source>The relation between &lt;code&gt;tasks&lt;/code&gt; and &lt;code&gt;users&lt;/code&gt; model injects the &lt;code&gt;userId&lt;/code&gt; foreign key on &lt;code&gt;tasks&lt;/code&gt; table, and marks it as a reference to the &lt;code&gt;users&lt;/code&gt; table. By default &lt;code&gt;userId&lt;/code&gt; will be set to &lt;code&gt;NULL&lt;/code&gt; if the referenced user is deleted, and updated if the id of the &lt;code&gt;userId&lt;/code&gt; updated. These options can be overridden by passing &lt;code&gt;onUpdate&lt;/code&gt; and &lt;code&gt;onDelete&lt;/code&gt; options to the association calls. The validation options are &lt;code&gt;RESTRICT, CASCADE, NO ACTION, SET DEFAULT, SET NULL&lt;/code&gt;.</source>
          <target state="translated">Связь между &lt;code&gt;tasks&lt;/code&gt; и моделью &lt;code&gt;users&lt;/code&gt; вводит внешний ключ &lt;code&gt;userId&lt;/code&gt; в таблицу &lt;code&gt;tasks&lt;/code&gt; и отмечает его как ссылку на таблицу &lt;code&gt;users&lt;/code&gt; . По умолчанию для &lt;code&gt;userId&lt;/code&gt; будет установлено &lt;code&gt;NULL&lt;/code&gt; если указанный пользователь будет удален, и обновится, если идентификатор &lt;code&gt;userId&lt;/code&gt; обновлен. Эти параметры можно переопределить, передав параметры &lt;code&gt;onUpdate&lt;/code&gt; и &lt;code&gt;onDelete&lt;/code&gt; вызовам ассоциации. Возможные варианты проверки: &lt;code&gt;RESTRICT, CASCADE, NO ACTION, SET DEFAULT, SET NULL&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8b9f7f5e66de32f9f00b194b0d793b58686e0548" translate="yes" xml:space="preserve">
          <source>The same merge logic applies when passing a find object directly to &lt;code&gt;findAll&lt;/code&gt; (and similar finders) on a scoped model:</source>
          <target state="translated">Та же самая логика слияния применяется при передаче объекта поиска напрямую &lt;code&gt;findAll&lt;/code&gt; (и подобным средствам поиска ) в модели с ограниченной областью видимости:</target>
        </trans-unit>
        <trans-unit id="97ab6aa4ba7990a147bb964cdd7e87d1f62efe69" translate="yes" xml:space="preserve">
          <source>The schema that the tables should be created in. This can be overridden for each table in sequelize.define</source>
          <target state="translated">Схема,в которой должны быть созданы таблицы.Это может быть переопределено для каждой таблицы в файле sequelize.define.</target>
        </trans-unit>
        <trans-unit id="c43a2f21b215e63de5816eae94cb4b78d64ee9df" translate="yes" xml:space="preserve">
          <source>The scope(s) to apply. Scopes can either be passed as consecutive arguments, or as an array of arguments. To apply simple scopes and scope functions with no arguments, pass them as strings. For scope function, pass an object, with a &lt;code&gt;method&lt;/code&gt; property. The value can either be a string, if the method does not take any arguments, or an array, where the first element is the name of the method, and consecutive elements are arguments to that method. Pass null to remove all scopes, including the default.</source>
          <target state="translated">Область применения. Области могут быть переданы как последовательные аргументы или как массив аргументов. Чтобы применить простые области и функции области без аргументов, передайте их как строки. Для функции области действия передайте объект со свойством &lt;code&gt;method&lt;/code&gt; . Значение может быть либо строкой, если метод не принимает никаких аргументов, либо массивом, где первый элемент - это имя метода, а последовательные элементы являются аргументами этого метода. Передайте null, чтобы удалить все области, включая значения по умолчанию.</target>
        </trans-unit>
        <trans-unit id="e118bc1e681bc034058a8bda4bc03316fe86fe78" translate="yes" xml:space="preserve">
          <source>The socket path must start with &lt;code&gt;/&lt;/code&gt;.</source>
          <target state="translated">Путь к сокету должен начинаться с &lt;code&gt;/&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5a2ca207850bf8f92ef8c79ea6faebe0a9682e77" translate="yes" xml:space="preserve">
          <source>The source key is the attribute on the source model that the foreign key attribute on the target model points to. By default the source key for a &lt;code&gt;hasOne&lt;/code&gt; relation will be the source model's primary attribute. To use a custom attribute, use the &lt;code&gt;sourceKey&lt;/code&gt; option.</source>
          <target state="translated">Исходный ключ - это атрибут исходной модели, на который указывает атрибут внешнего ключа целевой модели. По умолчанию ключ источника для отношения &lt;code&gt;hasOne&lt;/code&gt; будет первичным атрибутом исходной модели. Чтобы использовать настраиваемый атрибут, используйте параметр &lt;code&gt;sourceKey&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f620901a19bb7656abbdf382102fb74721c6995b" translate="yes" xml:space="preserve">
          <source>The specified dialect.</source>
          <target state="translated">Указанный диалект.</target>
        </trans-unit>
        <trans-unit id="55da2b2d35bc1e7629eadbe7b1ec3caa26f12e10" translate="yes" xml:space="preserve">
          <source>The success handler is passed an array of instances, but please notice that these may not completely represent the state of the rows in the DB. This is because MySQL and SQLite do not make it easy to obtain back automatically generated IDs and other default values in a way that can be mapped to multiple records. To obtain Instances for the newly created values, you will need to query for them again.</source>
          <target state="translated">Успешному обработчику передается массив экземпляров,но обратите внимание,что они могут не полностью отражать состояние строк в БД.Это связано с тем,что MySQL и SQLite не позволяют легко получить обратно автоматически сгенерированные ID и другие значения по умолчанию таким образом,чтобы их можно было сопоставить с несколькими записями.Чтобы получить Instances для вновь создаваемых значений,вам нужно будет запросить их еще раз.</target>
        </trans-unit>
        <trans-unit id="ca8c1cb986bae7a03abb7e55f466bf12bd7f5b9d" translate="yes" xml:space="preserve">
          <source>The success handler will always receive an object with two properties:</source>
          <target state="translated">Обработчик успеха всегда получит объект с двумя свойствами:</target>
        </trans-unit>
        <trans-unit id="34579639c463106f1a03eee66559cab728f1641b" translate="yes" xml:space="preserve">
          <source>The syntax for grouping and ordering are equal, so below it is only explained with a single example for group, and the rest for order. Everything you see below can also be done for group</source>
          <target state="translated">Синтаксис для группировки и заказа одинаков,поэтому ниже он объясняется только одним примером для группы,а остальные-порядком.Все,что вы видите ниже,также может быть сделано для группы</target>
        </trans-unit>
        <trans-unit id="58b66076bf28d404e11394816918b9debbdb35f5" translate="yes" xml:space="preserve">
          <source>The table columns are defined by the hash that is given as the first argument. Each attribute of the hash represents a column.</source>
          <target state="translated">Столбцы таблицы определяются хэшем,который дается в качестве первого аргумента.Каждый атрибут хэша представляет собой столбец.</target>
        </trans-unit>
        <trans-unit id="0333c25506d7b965b09277d6ee324cf0849f0c73" translate="yes" xml:space="preserve">
          <source>The table columns are defined by the object that is given as the second argument. Each key of the object represents a column</source>
          <target state="translated">Столбцы таблицы определяются объектом,который приводится в качестве второго аргумента.Каждый ключ объекта представляет собой столбец</target>
        </trans-unit>
        <trans-unit id="1b918538dbc34fd935439f872ac510ed2a15c0e0" translate="yes" xml:space="preserve">
          <source>The target key is the column on the target model that the foreign key column on the source model points to. By default the target key for a belongsTo relation will be the target model's primary key. To define a custom column, use the &lt;code&gt;targetKey&lt;/code&gt; option.</source>
          <target state="translated">Целевой ключ - это столбец целевой модели, на который указывает столбец внешнего ключа исходной модели. По умолчанию целевой ключ для отношения принадлежитTo будет первичным ключом целевой модели. Чтобы определить настраиваемый столбец, используйте параметр &lt;code&gt;targetKey&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="491b59fdd8f66fe0f7f13309b9f00701386dcec7" translate="yes" xml:space="preserve">
          <source>The target model</source>
          <target state="translated">Целевая модель</target>
        </trans-unit>
        <trans-unit id="c366e237ccd3fa7a5cf3767dcbd191713159c4d1" translate="yes" xml:space="preserve">
          <source>The time interval, in milliseconds, after which sequelize-pool will remove idle connections.</source>
          <target state="translated">Интервал времени в миллисекундах,по истечении которого секвелизация-пул удалит незадействованные соединения.</target>
        </trans-unit>
        <trans-unit id="49180f7e5b04ba9d5019142b532f40f579f312c3" translate="yes" xml:space="preserve">
          <source>The timezone used when converting a date from the database into a JavaScript date. The timezone is also used to SET TIMEZONE when connecting to the server, to ensure that the result of NOW, CURRENT_TIMESTAMP and other time related functions have in the right timezone. For best cross platform performance use the format +/-HH:MM. Will also accept string versions of timezones used by moment.js (e.g. 'America/Los_Angeles'); this is useful to capture daylight savings time changes.</source>
          <target state="translated">Часовой пояс,используемый при преобразовании даты из базы данных в дату на JavaScript.Часовой пояс также используется для SET TIMEZONE при подключении к серверу,чтобы убедиться,что результат работы функции CURRENT_TIMESTAMP и других функций,связанных с временем,находится в нужном часовом поясе.Для наилучшей работы кросс-платформы используйте формат +/-HH:MM.Будет также принята строковая версия часовых поясов,используемая в moment.js (например,'America/Los_Angeles');это полезно для фиксации изменений в летнее время.</target>
        </trans-unit>
        <trans-unit id="22d5c59623d5082e86fcb983d4ab3c203156259b" translate="yes" xml:space="preserve">
          <source>The transaction object is used to identify a running transaction.</source>
          <target state="translated">Объект транзакции используется для идентификации выполняющейся транзакции.</target>
        </trans-unit>
        <trans-unit id="f0edfec2d8f7bf8e0afc41f8155d0fe4c8968331" translate="yes" xml:space="preserve">
          <source>The transaction object is used to identify a running transaction. It is created by calling &lt;code&gt;Sequelize.transaction()&lt;/code&gt;. To run a query under a transaction, you should pass the transaction in the options object.</source>
          <target state="translated">Объект транзакции используется для идентификации выполняющейся транзакции. Он создается путем вызова &lt;code&gt;Sequelize.transaction()&lt;/code&gt; . Чтобы выполнить запрос в рамках транзакции, вы должны передать транзакцию в объекте параметров.</target>
        </trans-unit>
        <trans-unit id="1beb1efd0f8f2a80414557b5c568ecb7d3c36cb7" translate="yes" xml:space="preserve">
          <source>The transaction that the query should be executed under</source>
          <target state="translated">Транзакция,в рамках которой должен быть выполнен запрос</target>
        </trans-unit>
        <trans-unit id="d7eaaa527b737eaa8f46f1460009ff30ab80523a" translate="yes" xml:space="preserve">
          <source>The type of query you are executing. The query type affects how results are formatted before they are passed back. The type is a string, but &lt;code&gt;Sequelize.QueryTypes&lt;/code&gt; is provided as convenience shortcuts.</source>
          <target state="translated">Тип выполняемого запроса. Тип запроса влияет на форматирование результатов перед их передачей обратно. Типом является строка, но &lt;code&gt;Sequelize.QueryTypes&lt;/code&gt; предоставляется как удобные ярлыки.</target>
        </trans-unit>
        <trans-unit id="6ac3e6aea5927228f941582e70503ef95b61da85" translate="yes" xml:space="preserve">
          <source>The type of the association.</source>
          <target state="translated">Тип ассоциации.</target>
        </trans-unit>
        <trans-unit id="c3a22137eb7f0a4c6f818bf5181fd51cda693d63" translate="yes" xml:space="preserve">
          <source>The type of the association. One of &lt;code&gt;HasMany&lt;/code&gt;, &lt;code&gt;BelongsTo&lt;/code&gt;, &lt;code&gt;HasOne&lt;/code&gt;, &lt;code&gt;BelongsToMany&lt;/code&gt;</source>
          <target state="translated">Тип ассоциации. Один из &lt;code&gt;HasMany&lt;/code&gt; , &lt;code&gt;BelongsTo&lt;/code&gt; , &lt;code&gt;HasOne&lt;/code&gt; , &lt;code&gt;BelongsToMany&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a84720b6e6d1abe177c213ae349687b9ecbd326e" translate="yes" xml:space="preserve">
          <source>The type of the result. If &lt;code&gt;field&lt;/code&gt; is a field in this Model, the default will be the type of that field, otherwise defaults to float.</source>
          <target state="translated">Тип результата. Если &lt;code&gt;field&lt;/code&gt; является полем в этой модели, по умолчанию будет использоваться тип этого поля, в противном случае по умолчанию используется float.</target>
        </trans-unit>
        <trans-unit id="183dc3fd6b319dae15e0ede29af243c273ee8685" translate="yes" xml:space="preserve">
          <source>The type to cast it to</source>
          <target state="translated">Тип,к которому его можно отнести</target>
        </trans-unit>
        <trans-unit id="0ba8f3d4b3e41ec8a080d8bbbadbfdd6e148ee51" translate="yes" xml:space="preserve">
          <source>The type/origin of the validation error</source>
          <target state="translated">Тип/признак ошибки валидации</target>
        </trans-unit>
        <trans-unit id="5888d90beb856504f26606caf21620cfa8966739" translate="yes" xml:space="preserve">
          <source>The username which is used to authenticate against the database.</source>
          <target state="translated">Имя пользователя,которое используется для аутентификации по базе данных.</target>
        </trans-unit>
        <trans-unit id="ef65704c728b311b6675bea469007ef92576b56c" translate="yes" xml:space="preserve">
          <source>The value for the default constraint</source>
          <target state="translated">Значение для ограничения по умолчанию</target>
        </trans-unit>
        <trans-unit id="87fb8dc5fc6bc1f9c662d78e53814299d9b4d67e" translate="yes" xml:space="preserve">
          <source>The value of the desired instance's primary key.</source>
          <target state="translated">Значение первичного ключа нужного экземпляра.</target>
        </trans-unit>
        <trans-unit id="2e4d8e128c9a5a1ffd3c715a791ace7b6e2f0e51" translate="yes" xml:space="preserve">
          <source>The value that generated the error</source>
          <target state="translated">Значение,которое вызвало ошибку</target>
        </trans-unit>
        <trans-unit id="281466e75fbe944a95c1f47673ac3a4b4a7aac99" translate="yes" xml:space="preserve">
          <source>The value to cast</source>
          <target state="translated">Значение для броска</target>
        </trans-unit>
        <trans-unit id="4becd373a9abdf90daf7afd7952190cfbdb6a722" translate="yes" xml:space="preserve">
          <source>The values of the attempted update</source>
          <target state="translated">Значения попыток обновления</target>
        </trans-unit>
        <trans-unit id="8879fe3df52b3bfc453dc46fb7061554a846b88a" translate="yes" xml:space="preserve">
          <source>Then you can just expose file with proper environment variables.</source>
          <target state="translated">Тогда вы можете просто выставить файл с соответствующими переменными окружения.</target>
        </trans-unit>
        <trans-unit id="43f2635dbec46649203b3c3aa4d04bf38df84e6b" translate="yes" xml:space="preserve">
          <source>There are currently three ways to programmatically add hooks:</source>
          <target state="translated">В настоящее время существует три способа программного добавления крючков:</target>
        </trans-unit>
        <trans-unit id="6c7e03a8c32ed1f6358530c8e620ba1250325a0a" translate="yes" xml:space="preserve">
          <source>There are several ways to update and add new associations. Continuing with our example of users and pictures:</source>
          <target state="translated">Существует несколько способов обновления и добавления новых ассоциаций.Продолжая наш пример с пользователями и фотографиями:</target>
        </trans-unit>
        <trans-unit id="a36b1d5200c1e31ac985860d6dd0f09141f565f9" translate="yes" xml:space="preserve">
          <source>There are three types of storage that you can use: &lt;code&gt;sequelize&lt;/code&gt;, &lt;code&gt;json&lt;/code&gt;, and &lt;code&gt;none&lt;/code&gt;.</source>
          <target state="translated">Вы можете использовать три типа хранилища: &lt;code&gt;sequelize&lt;/code&gt; , &lt;code&gt;json&lt;/code&gt; и &lt;code&gt;none&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="27fdccefc377e17f5a26fc7558b9e7867964fb5d" translate="yes" xml:space="preserve">
          <source>There is also a method for counting database objects:</source>
          <target state="translated">Существует также метод подсчета объектов базы данных:</target>
        </trans-unit>
        <trans-unit id="cd8a91416dbf4cf3a9c701869ca2f37c200a92ff" translate="yes" xml:space="preserve">
          <source>There may be times when you want to generate your own UUID conforming to some other algorithm. This is accomplished using the defaultValue property as well, but instead of specifying one of the supplied UUID types, you return a value from a function.</source>
          <target state="translated">Могут быть моменты,когда вы захотите сгенерировать свой собственный UUID,соответствующий какому-либо другому алгоритму.Это выполняется также с помощью свойства Value по умолчанию,но вместо указания одного из поставляемых типов UUID,вы возвращаете значение из функции.</target>
        </trans-unit>
        <trans-unit id="55682363d7e0f2ffc9293ceaaddad46cafb5c483" translate="yes" xml:space="preserve">
          <source>Therefore, one can just follow the &lt;a href=&quot;http://geojson.org/geojson-spec.html&quot;&gt;GeoJSON spec&lt;/a&gt; for handling geometry objects. See the following examples:</source>
          <target state="translated">Следовательно, можно просто следовать &lt;a href=&quot;http://geojson.org/geojson-spec.html&quot;&gt;спецификации GeoJSON&lt;/a&gt; для обработки геометрических объектов. См. Следующие примеры:</target>
        </trans-unit>
        <trans-unit id="02cc698e9e580c5b08002ced8ca01c4ddd96bbfc" translate="yes" xml:space="preserve">
          <source>These four scopes can be deeply merged easily, for example by calling &lt;code&gt;Foo.scope('includeEverything', 'limitedBars', 'limitedBazs', 'excludeBazName').findAll()&lt;/code&gt;, which would be entirely equivalent to calling the following:</source>
          <target state="translated">Эти четыре области можно легко объединить, например, вызвав &lt;code&gt;Foo.scope('includeEverything', 'limitedBars', 'limitedBazs', 'excludeBazName').findAll()&lt;/code&gt; , что будет полностью эквивалентно вызову следующего:</target>
        </trans-unit>
        <trans-unit id="af59fc7567d7e359f06c4a1e994f367061e3a2b5" translate="yes" xml:space="preserve">
          <source>These hooks can be useful if you need to asynchronously obtain database credentials, or need to directly access the low-level database connection after it has been created.</source>
          <target state="translated">Эти крючки могут быть полезны,если вам нужно асинхронно получить учетные данные базы данных,или вам нужен прямой доступ к низкоуровневому соединению с базой данных после ее создания.</target>
        </trans-unit>
        <trans-unit id="5c2d955f8a133fd17bc66cfb7a3733b5cd31863d" translate="yes" xml:space="preserve">
          <source>These hooks may &lt;em&gt;only&lt;/em&gt; be declared as a permanent global hook, as the connection pool is shared by all models.</source>
          <target state="translated">Эти перехватчики могут быть объявлены &lt;em&gt;только&lt;/em&gt; как постоянные глобальные перехватчики, поскольку пул соединений используется всеми моделями совместно.</target>
        </trans-unit>
        <trans-unit id="1c389d6b65a20f268408819e6a860c1a7c78109f" translate="yes" xml:space="preserve">
          <source>These options are merged with the default define options provided to the Sequelize constructor</source>
          <target state="translated">Эти опции объединены с опциями определения по умолчанию,предоставляемыми конструктору Sequelize</target>
        </trans-unit>
        <trans-unit id="5c4f7d575b88a1fe31445dc78190b51d6048577f" translate="yes" xml:space="preserve">
          <source>These options are merged with the default define options provided to the Sequelize constructor and passed to Model.init()</source>
          <target state="translated">Эти опции объединяются с опциями определения по умолчанию,предоставляемыми конструктору Sequelize,и передаются в Model.init().</target>
        </trans-unit>
        <trans-unit id="5072453b0e64084c89bc87592d919214af9d10e1" translate="yes" xml:space="preserve">
          <source>Third, you can define an object containing fields and its decrement values.</source>
          <target state="translated">В-третьих,можно определить объект,содержащий поля и его значения декремента.</target>
        </trans-unit>
        <trans-unit id="bcc27019080f65da23ea2d1c9787f788f23d98f5" translate="yes" xml:space="preserve">
          <source>Third, you can define an object containing fields and its increment values.</source>
          <target state="translated">В-третьих,можно определить объект,содержащий поля и значения приращения.</target>
        </trans-unit>
        <trans-unit id="4e0152b992d8dcce6cbd8bc1cda5d54dde247ffb" translate="yes" xml:space="preserve">
          <source>This adds a default hook to all models, which is run if the model does not define its own &lt;code&gt;beforeCreate&lt;/code&gt; hook:</source>
          <target state="translated">Это добавляет ловушку по умолчанию для всех моделей, которая запускается, если модель не определяет свой собственный &lt;code&gt;beforeCreate&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="727c4075b5f4eb6d72cffa60b8be8ca9040e313f" translate="yes" xml:space="preserve">
          <source>This can be simply solved by passing &lt;code&gt;{individualHooks: true}&lt;/code&gt; to the &lt;code&gt;remove&lt;/code&gt; call, resulting on each hook to be called on each removed through instance object.</source>
          <target state="translated">Это может быть просто решена путем пропускания &lt;code&gt;{individualHooks: true}&lt;/code&gt; к &lt;code&gt;remove&lt;/code&gt; вызова, в результате чего на каждом крючке будет называться на каждом удаляется через объект экземпляра.</target>
        </trans-unit>
        <trans-unit id="e7dd309e7a42d2a5b7a13fba0fcf976b9b08e4f8" translate="yes" xml:space="preserve">
          <source>This code will run beforeDestroy/afterDestroy on the Tasks table. Sequelize, by default, will try to optimize your queries as much as possible. When calling cascade on delete, Sequelize will simply execute a</source>
          <target state="translated">Этот код будет запущен доDestroy/послеDestroy на таблице Tasks.Sequelize,по умолчанию,попытается максимально оптимизировать ваши запросы.При вызове каскада при удалении,Sequelize просто выполнит команду</target>
        </trans-unit>
        <trans-unit id="18c9fea6466ac62731b3270babfae248a5a4f00c" translate="yes" xml:space="preserve">
          <source>This command will create a seed file in &lt;code&gt;seeders&lt;/code&gt; folder. File name will look something like &lt;code&gt;XXXXXXXXXXXXXX-demo-user.js&lt;/code&gt;. It follows the same &lt;code&gt;up / down&lt;/code&gt; semantics as the migration files.</source>
          <target state="translated">Эта команда создаст исходный файл в папке &lt;code&gt;seeders&lt;/code&gt; . Имя файла будет выглядеть примерно так: &lt;code&gt;XXXXXXXXXXXXXX-demo-user.js&lt;/code&gt; . Он следует той же семантике &lt;code&gt;up / down&lt;/code&gt; что и файлы миграции.</target>
        </trans-unit>
        <trans-unit id="99b346a29a6d16c0ff1ed00bc189c11d20ca7b4d" translate="yes" xml:space="preserve">
          <source>This command will execute these steps:</source>
          <target state="translated">Эта команда выполнит эти шаги:</target>
        </trans-unit>
        <trans-unit id="c63d621f524bac03f030a99ca6604e6cf1edd0b4" translate="yes" xml:space="preserve">
          <source>This example will return an error:</source>
          <target state="translated">Этот пример вернет ошибку:</target>
        </trans-unit>
        <trans-unit id="1a7c83b5a5af156c9b822efe6ff13494455e205c" translate="yes" xml:space="preserve">
          <source>This extra capability is useful when, for example, &lt;code&gt;Error: Cannot find module&lt;/code&gt; is thrown even though &lt;code&gt;/path/to/models/project&lt;/code&gt; seems to be correct. Some frameworks, such as Meteor, overload &lt;code&gt;require&lt;/code&gt;, and spit out &quot;surprise&quot; results like :</source>
          <target state="translated">Эта дополнительная возможность полезна, когда, например, &lt;code&gt;Error: Cannot find module&lt;/code&gt; , хотя &lt;code&gt;/path/to/models/project&lt;/code&gt; кажется правильным. Некоторые фреймворки, такие как Meteor, &lt;code&gt;require&lt;/code&gt; перегрузки и выдают &amp;laquo;неожиданные&amp;raquo; результаты, например:</target>
        </trans-unit>
        <trans-unit id="ce7f17201e64eb37f1103f4b3786c11feb4123ee" translate="yes" xml:space="preserve">
          <source>This hook is always run before create, regardless of whether the model specifies its own &lt;code&gt;beforeCreate&lt;/code&gt; hook. Local hooks are always run before global hooks:</source>
          <target state="translated">Этот обработчик всегда запускается перед созданием, независимо от того, указывает ли модель свой собственный &lt;code&gt;beforeCreate&lt;/code&gt; . Локальные хуки всегда запускаются перед глобальными:</target>
        </trans-unit>
        <trans-unit id="360cb791231c2363b1194e7b256c83b51766b491" translate="yes" xml:space="preserve">
          <source>This is a convenience method that combines&lt;code&gt;findAll&lt;/code&gt; and &lt;code&gt;count&lt;/code&gt; (see below) this is useful when dealing with queries related to pagination where you want to retrieve data with a &lt;code&gt;limit&lt;/code&gt; and &lt;code&gt;offset&lt;/code&gt; but also need to know the total number of records that match the query:</source>
          <target state="translated">Это удобный метод, который сочетает в себе &lt;code&gt;findAll&lt;/code&gt; и &lt;code&gt;count&lt;/code&gt; (см. Ниже). Это полезно при работе с запросами, связанными с разбивкой на страницы, когда вы хотите получить данные с &lt;code&gt;limit&lt;/code&gt; и &lt;code&gt;offset&lt;/code&gt; но также необходимо знать общее количество записей, соответствующих запросу:</target>
        </trans-unit>
        <trans-unit id="0e6e7c29c6f7275c747733e61664e0b1a268e99f" translate="yes" xml:space="preserve">
          <source>This is a special configuration file. It lets you specify following options that you would usually pass as arguments to CLI:</source>
          <target state="translated">Это специальный файл конфигурации.Он позволяет вам указать следующие опции,которые вы обычно передаете в качестве аргументов в CLI:</target>
        </trans-unit>
        <trans-unit id="55bdb2f2ecde4b760da3d764aa2f4098da22b6d1" translate="yes" xml:space="preserve">
          <source>This is solved by passing in Meteor's version of &lt;code&gt;require&lt;/code&gt;. So, while this probably fails ...</source>
          <target state="translated">Это решается передачей Meteor версии &lt;code&gt;require&lt;/code&gt; . Итак, хотя это, вероятно, не удается ...</target>
        </trans-unit>
        <trans-unit id="d228ea5a39b7651eb309d93cc8036fdcc5148f0e" translate="yes" xml:space="preserve">
          <source>This is the main class, the entry point to sequelize.</source>
          <target state="translated">Это основной класс,точка входа для сиквелизации.</target>
        </trans-unit>
        <trans-unit id="818eb257f30469f3bc2e4ca907767013465c744e" translate="yes" xml:space="preserve">
          <source>This is the same as calling &lt;code&gt;set&lt;/code&gt; and then calling &lt;code&gt;save&lt;/code&gt; but it only saves the exact values passed to it, making it more atomic and safer.</source>
          <target state="translated">Это то же самое, что и вызов &lt;code&gt;set&lt;/code&gt; , а затем вызов &lt;code&gt;save&lt;/code&gt; , но он сохраняет только точные значения, переданные ему, что делает его более атомарным и безопасным.</target>
        </trans-unit>
        <trans-unit id="60296b6b0d7e855566b012be2c4526118c0d9f5e" translate="yes" xml:space="preserve">
          <source>This means that errors can be accessed using &lt;code&gt;Sequelize.ValidationError&lt;/code&gt; The Base Error all Sequelize Errors inherit from.</source>
          <target state="translated">Это означает, что к ошибкам можно получить доступ с помощью &lt;code&gt;Sequelize.ValidationError&lt;/code&gt; Базовая ошибка, от которой наследуются все ошибки Sequelize.</target>
        </trans-unit>
        <trans-unit id="448935a1c8176ac36ebc22b0c9a61a4f6c534df7" translate="yes" xml:space="preserve">
          <source>This means you can, for instance, have a string field which validates its length to be between 5 and 10 characters, but which also allows &lt;code&gt;null&lt;/code&gt; (since the length validator will be skipped automatically when the value is &lt;code&gt;null&lt;/code&gt;):</source>
          <target state="translated">Это означает, что вы можете, например, иметь строковое поле, которое проверяет, что его длина составляет от 5 до 10 символов, но также допускает значение &lt;code&gt;null&lt;/code&gt; (поскольку валидатор длины будет автоматически пропущен, если значение равно &lt;code&gt;null&lt;/code&gt; ):</target>
        </trans-unit>
        <trans-unit id="f467b722eea19d74de979567087d7f5e134044a3" translate="yes" xml:space="preserve">
          <source>This merge strategy also works in the exact same way with options passed to &lt;code&gt;.findAll&lt;/code&gt;, &lt;code&gt;.findOne&lt;/code&gt; and the like.</source>
          <target state="translated">Эта стратегия слияния также работает точно так же с параметрами, передаваемыми в &lt;code&gt;.findAll&lt;/code&gt; , &lt;code&gt;.findOne&lt;/code&gt; и т.п.</target>
        </trans-unit>
        <trans-unit id="59bd238f74715c77711ae06cecfc32b0565a57cb" translate="yes" xml:space="preserve">
          <source>This method is intended for use cases where the same model is needed in multiple schemas. In such a use case it is important to call &lt;code&gt;model.schema(schema, [options]).sync()&lt;/code&gt; for each model to ensure the models are created in the correct schema.</source>
          <target state="translated">Этот метод предназначен для случаев использования, когда одна и та же модель требуется в нескольких схемах. В таком случае использования важно вызвать &lt;code&gt;model.schema(schema, [options]).sync()&lt;/code&gt; для каждой модели, чтобы гарантировать, что модели созданы в правильной схеме.</target>
        </trans-unit>
        <trans-unit id="a61048d15d1fb9bb46b03055071e6483faf68341" translate="yes" xml:space="preserve">
          <source>This method now tests for equality with &lt;code&gt;_.isEqual&lt;/code&gt; and is now deep aware. Modifying nested value for JSON object won't mark them as changed, because it is still the same object.</source>
          <target state="translated">Этот метод теперь проверяет равенство с &lt;code&gt;_.isEqual&lt;/code&gt; и теперь хорошо осведомлен. Изменение вложенного значения для объекта JSON не помечает их как измененные, потому что это все тот же объект.</target>
        </trans-unit>
        <trans-unit id="ab79309eddccd5e656cb0c27289b25d6187e3837" translate="yes" xml:space="preserve">
          <source>This method returns an array of hashes containing information about all attributes in the table.</source>
          <target state="translated">Этот метод возвращает массив хэшей,содержащий информацию обо всех атрибутах в таблице.</target>
        </trans-unit>
        <trans-unit id="d7799f45dcea4d7688e16027f4fe2c94d214d595" translate="yes" xml:space="preserve">
          <source>This section concerns association scopes. For a definition of association scopes vs. scopes on associated models, see &lt;a href=&quot;scopes&quot;&gt;Scopes&lt;/a&gt;.</source>
          <target state="translated">Этот раздел касается области действия ассоциации. Для определения ассоциативных областей и областей для связанных моделей см. &lt;a href=&quot;scopes&quot;&gt;Области&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8afc09530510c13953a1c7a8aa226af2c4660e35" translate="yes" xml:space="preserve">
          <source>This section describes the various association types in sequelize. There are four types of associations available in Sequelize</source>
          <target state="translated">В этом разделе описаны различные типы ассоциаций в секвелизации.Существует четыре типа ассоциаций,доступных в секвелизации.</target>
        </trans-unit>
        <trans-unit id="e5db820e5273e88ea3c74abb859bd5e860f6a011" translate="yes" xml:space="preserve">
          <source>This specifies that the &lt;code&gt;uid&lt;/code&gt; column cannot be null. In most cases this will already be covered by the foreign key constraints, which sequelize creates automatically, but can be useful in case where the foreign keys are disabled, e.g. due to circular references (see &lt;code&gt;constraints: false&lt;/code&gt; below).</source>
          <target state="translated">Это указывает, что столбец &lt;code&gt;uid&lt;/code&gt; не может быть пустым. В большинстве случаев это уже покрывается ограничениями внешнего ключа, которые sequelize создает автоматически, но может быть полезен в случае, когда внешние ключи отключены, например, из-за циклических ссылок (см. &lt;code&gt;constraints: false&lt;/code&gt; ниже).</target>
        </trans-unit>
        <trans-unit id="b0748e5edf89087179c3ffcbaa9289fdfc2bb735" translate="yes" xml:space="preserve">
          <source>This will add methods &lt;code&gt;getUsers&lt;/code&gt;, &lt;code&gt;setUsers&lt;/code&gt;, &lt;code&gt;addUser&lt;/code&gt;,&lt;code&gt;addUsers&lt;/code&gt; to &lt;code&gt;Project&lt;/code&gt;, and &lt;code&gt;getProjects&lt;/code&gt;, &lt;code&gt;setProjects&lt;/code&gt;, &lt;code&gt;addProject&lt;/code&gt;, and &lt;code&gt;addProjects&lt;/code&gt; to &lt;code&gt;User&lt;/code&gt;.</source>
          <target state="translated">Это добавит методы &lt;code&gt;getUsers&lt;/code&gt; , &lt;code&gt;setUsers&lt;/code&gt; , &lt;code&gt;addUser&lt;/code&gt; , &lt;code&gt;addUsers&lt;/code&gt; к &lt;code&gt;Project&lt;/code&gt; и &lt;code&gt;getProjects&lt;/code&gt; , &lt;code&gt;setProjects&lt;/code&gt; , &lt;code&gt;addProject&lt;/code&gt; и &lt;code&gt;addProjects&lt;/code&gt; к &lt;code&gt;User&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2a6e951fad358490ec5b1a5a9c3f372af691a820" translate="yes" xml:space="preserve">
          <source>This will add the attribute &lt;code&gt;projectId&lt;/code&gt; to User. Depending on your setting for underscored the column in the table will either be called &lt;code&gt;projectId&lt;/code&gt; or &lt;code&gt;project_id&lt;/code&gt;. Instances of Project will get the accessors &lt;code&gt;getWorkers&lt;/code&gt; and &lt;code&gt;setWorkers&lt;/code&gt;.</source>
          <target state="translated">Это добавит атрибут &lt;code&gt;projectId&lt;/code&gt; в User. В зависимости от настроек подчеркивания столбец в таблице будет называться &lt;code&gt;projectId&lt;/code&gt; или &lt;code&gt;project_id&lt;/code&gt; . Экземпляры Project получат аксессоры &lt;code&gt;getWorkers&lt;/code&gt; и &lt;code&gt;setWorkers&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fb8b8f31c57ee6c953321682693ac70ebefd2921" translate="yes" xml:space="preserve">
          <source>This will add the functions &lt;code&gt;add/set/get Tasks&lt;/code&gt; to user instances.</source>
          <target state="translated">Это добавит функции &lt;code&gt;add/set/get Tasks&lt;/code&gt; к пользовательским экземплярам.</target>
        </trans-unit>
        <trans-unit id="3463bc037bb376387fd4ec78e9ecc3a0802278d7" translate="yes" xml:space="preserve">
          <source>This will create a new model called UserProject with the equivalent foreign keys &lt;code&gt;projectId&lt;/code&gt; and &lt;code&gt;userId&lt;/code&gt;. Whether the attributes are camelcase or not depends on the two models joined by the table (in this case User and Project).</source>
          <target state="translated">Это создаст новую модель под названием UserProject с эквивалентными внешними ключами &lt;code&gt;projectId&lt;/code&gt; и &lt;code&gt;userId&lt;/code&gt; . Являются ли атрибуты верблюжьим регистром или нет, зависит от двух моделей, соединенных таблицей (в данном случае User и Project).</target>
        </trans-unit>
        <trans-unit id="9218fafa583e55dc7276e3c7c13b1abc3b031c76" translate="yes" xml:space="preserve">
          <source>This will create following folders</source>
          <target state="translated">Это создаст следующие папки</target>
        </trans-unit>
        <trans-unit id="77d3388ed7356b4ccde3d30587156a82a628f725" translate="yes" xml:space="preserve">
          <source>This will do following</source>
          <target state="translated">Это будет сделано следующим образом</target>
        </trans-unit>
        <trans-unit id="b9cd56142426d9d64bccca3cb45bcbe0b6b31b91" translate="yes" xml:space="preserve">
          <source>This will execute that seed file and you will have a demo user inserted into &lt;code&gt;User&lt;/code&gt; table.</source>
          <target state="translated">Это запустит этот исходный файл, и у вас будет демонстрационный пользователь, вставленный в таблицу &lt;code&gt;User&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="17023fd3d297e103adfb2cd08cb3d64972ed6758" translate="yes" xml:space="preserve">
          <source>This will produce an outer join. However, a &lt;code&gt;where&lt;/code&gt; clause on a related model will create an inner join and return only the instances that have matching sub-models. To return all parent instances, you should add &lt;code&gt;required: false&lt;/code&gt;.</source>
          <target state="translated">Это создаст внешнее соединение. Однако предложение &lt;code&gt;where&lt;/code&gt; в связанной модели создаст внутреннее соединение и вернет только экземпляры, у которых есть соответствующие подмодели. Чтобы вернуть все родительские экземпляры, вы должны добавить &lt;code&gt;required: false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="587b8c9b10a65cfc3263ff9ed36c73f795eee87e" translate="yes" xml:space="preserve">
          <source>Those details contains constraintSchema, constraintName, constraintCatalog tableCatalog, tableSchema, tableName, columnName, referencedTableCatalog, referencedTableCatalog, referencedTableSchema, referencedTableName, referencedColumnName. Remind: constraint informations won't return if it's sqlite.</source>
          <target state="translated">Эти подробности содержат constraintSchema,constraintName,constraintCatalog tableCatalog,tableSchema,tableName,columnName,referencedTableCatalog,referencedTableCatalog,referencedTableSchema,referencedTableName,referencedColumnName.Напоминание:информация об ограничениях не возвращается,если она sqlite.</target>
        </trans-unit>
        <trans-unit id="4210ffe78330b024ede5237dbfe86d9b9b93cd25" translate="yes" xml:space="preserve">
          <source>Three of the values provided here (&lt;code&gt;NOW&lt;/code&gt;, &lt;code&gt;UUIDV1&lt;/code&gt; and &lt;code&gt;UUIDV4&lt;/code&gt;) are special default values, that should not be used to define types. Instead they are used as shorthands for defining default values. For example, to get a uuid field with a default value generated following v1 of the UUID standard:</source>
          <target state="translated">Три из представленных здесь значений ( &lt;code&gt;NOW&lt;/code&gt; , &lt;code&gt;UUIDV1&lt;/code&gt; и &lt;code&gt;UUIDV4&lt;/code&gt; ) являются специальными значениями по умолчанию, которые не должны использоваться для определения типов. Вместо этого они используются в качестве сокращений для определения значений по умолчанию. Например, чтобы получить поле uuid со значением по умолчанию, созданным после v1 стандарта UUID:</target>
        </trans-unit>
        <trans-unit id="91f71b1ba50409fa2b7c9ba85860ac52be6266d4" translate="yes" xml:space="preserve">
          <source>Throw errors to rollback</source>
          <target state="translated">Выбрасывать ошибки для отката</target>
        </trans-unit>
        <trans-unit id="aa4f8c68ebe136d0527ece013ceac731e1a278f9" translate="yes" xml:space="preserve">
          <source>Throw:</source>
          <target state="translated">Throw:</target>
        </trans-unit>
        <trans-unit id="23d750e22af391e584ca1e4a39c95bd2fb56383e" translate="yes" xml:space="preserve">
          <source>Thrown when a connection to a database has a hostname that was not found</source>
          <target state="translated">Выбрасывается,когда подключение к базе данных имеет имя хоста,которое не было найдено.</target>
        </trans-unit>
        <trans-unit id="d2625383a632bae08070641f222b8caa05d99960" translate="yes" xml:space="preserve">
          <source>Thrown when a connection to a database has a hostname that was not reachable</source>
          <target state="translated">Выбрасывается,когда подключение к базе данных имеет имя хоста,которое было недоступно.</target>
        </trans-unit>
        <trans-unit id="87034a0755bcd6f36454ca6ff35ee17a4ff4e0e8" translate="yes" xml:space="preserve">
          <source>Thrown when a connection to a database has invalid values for any of the connection parameters</source>
          <target state="translated">Выбрасывается,когда подключение к БД имеет недопустимые значения для любого из параметров подключения.</target>
        </trans-unit>
        <trans-unit id="32d6e188736023fe8847cd2d2013f87cf98d8009" translate="yes" xml:space="preserve">
          <source>Thrown when a connection to a database is refused</source>
          <target state="translated">Выбрасывается при отказе в подключении к базе данных.</target>
        </trans-unit>
        <trans-unit id="b9258c976382ddb24c62d8d005000b6a6fe5d6f6" translate="yes" xml:space="preserve">
          <source>Thrown when a connection to a database is refused due to insufficient privileges</source>
          <target state="translated">Отбрасывается при отказе в подключении к базе данных из-за недостаточных привилегий.</target>
        </trans-unit>
        <trans-unit id="2043393f9e3b9fda84e6662489c8d9c0829b258d" translate="yes" xml:space="preserve">
          <source>Thrown when a connection to a database times out</source>
          <target state="translated">Выбрасывается,когда соединение с базой данных прерывается.</target>
        </trans-unit>
        <trans-unit id="7bc64491ce5ca9b21f53e4cdc887f0f85bc7a079" translate="yes" xml:space="preserve">
          <source>Thrown when a database query times out because of a deadlock</source>
          <target state="translated">Выбрасывается,когда запрос к базе данных заканчивается из-за тупика.</target>
        </trans-unit>
        <trans-unit id="679f3a1755d005602bfa972024e02b80ed5161dc" translate="yes" xml:space="preserve">
          <source>Thrown when a foreign key constraint is violated in the database</source>
          <target state="translated">Выбрасывается при нарушении ограничения по внешнему ключу в базе данных.</target>
        </trans-unit>
        <trans-unit id="c84afedad343819211df62f9869172701d2dd1e5" translate="yes" xml:space="preserve">
          <source>Thrown when a query is passed invalid options (see message for details)</source>
          <target state="translated">Выбрасывается,когда запрос передается недействительными опциями (подробнее см.сообщение).</target>
        </trans-unit>
        <trans-unit id="7fabff6c09f652154afe11474aa9248b265cfe1c" translate="yes" xml:space="preserve">
          <source>Thrown when a record was not found, Usually used with rejectOnEmpty mode (see message for details)</source>
          <target state="translated">Выбрасывается,когда запись не найдена,Обычно используется с режимом rejectOnEmpty (подробнее см.сообщение).</target>
        </trans-unit>
        <trans-unit id="c3c1771c4a29df5e79cf3befa41cf4598a7dee58" translate="yes" xml:space="preserve">
          <source>Thrown when a some problem occurred with Instance methods (see message for details)</source>
          <target state="translated">Бросок,когда возникла проблема с методами Instance (подробнее см.сообщение).</target>
        </trans-unit>
        <trans-unit id="95bb12467ace2eea8fc434c8b6c9df4d88b333d1" translate="yes" xml:space="preserve">
          <source>Thrown when a unique constraint is violated in the database</source>
          <target state="translated">Выбрасывается при нарушении уникального ограничения в базе данных.</target>
        </trans-unit>
        <trans-unit id="80ae4ddebfd7c82c02a5f23fec873816cf61746c" translate="yes" xml:space="preserve">
          <source>Thrown when an association is improperly constructed (see message for details)</source>
          <target state="translated">Выбрасывается при неправильном построении ассоциации (подробнее см.сообщение).</target>
        </trans-unit>
        <trans-unit id="89746572ae55e12747db0aea1e20bddf39ed7d39" translate="yes" xml:space="preserve">
          <source>Thrown when an exclusion constraint is violated in the database</source>
          <target state="translated">Бросается при нарушении ограничения на исключение в базе данных.</target>
        </trans-unit>
        <trans-unit id="8f157735ee3bf7ab21bc6f16555acb23bc8c29f3" translate="yes" xml:space="preserve">
          <source>Thrown when an include statement is improperly constructed (see message for details)</source>
          <target state="translated">Бросается,если включенное заявление составлено неправильно (подробнее см.сообщение).</target>
        </trans-unit>
        <trans-unit id="0fd16d932a52421ae2e328140ee63e38a615cfb3" translate="yes" xml:space="preserve">
          <source>Thrown when attempting to update a stale model instance</source>
          <target state="translated">Выбрасывается при попытке обновить залежавшийся экземпляр модели.</target>
        </trans-unit>
        <trans-unit id="7bc42c3b804e8b465e46ba8bd9b5e3206dc76ac4" translate="yes" xml:space="preserve">
          <source>Thrown when bulk operation fails, it represent per record level error.</source>
          <target state="translated">Выбрасывается при сбое оптовой работы,представляет собой ошибку на уровне записи.</target>
        </trans-unit>
        <trans-unit id="ae1229aaedb2ae0a2feaf4bc910bd5a9a676762a" translate="yes" xml:space="preserve">
          <source>Thrown when bulk operation fails, it represent per record level error. Used with Promise.AggregateError</source>
          <target state="translated">Выбрасывается при сбое оптовой работы,представляет собой ошибку на уровне записи.Используется с Promise.AggregateError.</target>
        </trans-unit>
        <trans-unit id="f9edfc205cf5a5c20603f1d3b7c72767c3a4d4b9" translate="yes" xml:space="preserve">
          <source>Thrown when connection is not acquired due to timeout</source>
          <target state="translated">Брошен,когда соединение не получено из-за таймаута.</target>
        </trans-unit>
        <trans-unit id="7fceaebd6f438961290420060fe3b510c240b8f3" translate="yes" xml:space="preserve">
          <source>Thrown when constraint name is not found in the database</source>
          <target state="translated">Выбрасывается,когда имя ограничения не найдено в базе данных.</target>
        </trans-unit>
        <trans-unit id="c1175bafb21b858838d4ed47ad6843f2f62f711c" translate="yes" xml:space="preserve">
          <source>Throws an error when no records found</source>
          <target state="translated">Бросает ошибку при отсутствии найденных записей</target>
        </trans-unit>
        <trans-unit id="22a4ad2c60d9b1a4a4ab47810c732e12faec00b0" translate="yes" xml:space="preserve">
          <source>TimeoutError</source>
          <target state="translated">TimeoutError</target>
        </trans-unit>
        <trans-unit id="c04ed1238a14de2b02d7fd14a7e9605bb1b10b96" translate="yes" xml:space="preserve">
          <source>Timestamps</source>
          <target state="translated">Timestamps</target>
        </trans-unit>
        <trans-unit id="852d13828c37fb9d96ffea0f8ba5d4177325009c" translate="yes" xml:space="preserve">
          <source>To add a new project to a user and set its status, you pass extra &lt;code&gt;options.through&lt;/code&gt; to the setter, which contains the attributes for the join table</source>
          <target state="translated">Для того, чтобы добавить новый проект к пользователю и установить свой статус, вы передаете дополнительный &lt;code&gt;options.through&lt;/code&gt; в инкубатор, который содержит атрибуты для объединения таблицы</target>
        </trans-unit>
        <trans-unit id="ac8fd1770455d2404985a693194adf77d45c1bff" translate="yes" xml:space="preserve">
          <source>To connect over a unix domain socket, specify the path to the socket directory in the &lt;code&gt;host&lt;/code&gt; option.</source>
          <target state="translated">Чтобы подключиться через сокет домена unix, укажите путь к каталогу сокета в опции &lt;code&gt;host&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="062d1b4f01aa30692a7d36958d9c8a163ef0fa87" translate="yes" xml:space="preserve">
          <source>To connect to the database, you must create a Sequelize instance. This can be done by either passing the connection parameters separately to the Sequelize constructor or by passing a single connection URI:</source>
          <target state="translated">Для подключения к базе данных необходимо создать экземпляр Sequelize.Это можно сделать либо передав параметры соединения отдельно в конструктор Sequelize,либо передав один URI соединения:</target>
        </trans-unit>
        <trans-unit id="da44e1aec269feef0bce9b3580109c553da536c7" translate="yes" xml:space="preserve">
          <source>To create an empty project you will need to execute &lt;code&gt;init&lt;/code&gt; command</source>
          <target state="translated">Чтобы создать пустой проект, вам нужно будет выполнить команду &lt;code&gt;init&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="71fb99144f8e1ab035cde5271b9fd31e7e57bd68" translate="yes" xml:space="preserve">
          <source>To define mappings between a model and a table, use the &lt;code&gt;define&lt;/code&gt; method. Each column must have a datatype, see more about &lt;a href=&quot;data-types&quot;&gt;datatypes&lt;/a&gt;.</source>
          <target state="translated">Чтобы определить сопоставления между моделью и таблицей, используйте метод &lt;code&gt;define&lt;/code&gt; . Каждый столбец должен иметь тип данных, см. Подробнее о &lt;a href=&quot;data-types&quot;&gt;типах данных&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="dda2146b56aea2f43e17df568053cae2211defe9" translate="yes" xml:space="preserve">
          <source>To define your own primary key:</source>
          <target state="translated">Чтобы определить свой собственный первичный ключ:</target>
        </trans-unit>
        <trans-unit id="f0c9aa566dd042ca2109aefb26d5db9701348ed9" translate="yes" xml:space="preserve">
          <source>To disable the default scope, pass &lt;code&gt;scope: null&lt;/code&gt; to the getter: &lt;code&gt;User.getPosts({ scope: null })&lt;/code&gt;. Similarly, if you want to apply other scopes, pass an array like you would to &lt;code&gt;.scope&lt;/code&gt;:</source>
          <target state="translated">Чтобы отключить область действия по умолчанию, передайте &lt;code&gt;scope: null&lt;/code&gt; в &lt;code&gt;User.getPosts({ scope: null })&lt;/code&gt; : User.getPosts ({scope: null}) . Точно так же, если вы хотите применить другие области видимости, передайте массив, как в &lt;code&gt;.scope&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="6463d8d9d72d8a88eca88bfd39719af73a2f3fb1" translate="yes" xml:space="preserve">
          <source>To enable CLS you must tell sequelize which namespace to use by using a static method of the sequelize constructor:</source>
          <target state="translated">Для включения CLS необходимо указать,какое пространство имен использовать,используя статический метод конструктора sequelize:</target>
        </trans-unit>
        <trans-unit id="87f6d681b01751ff8331a911939a0019959ee185" translate="yes" xml:space="preserve">
          <source>To enable CLS, add it do your project, create a namespace and set it on the sequelize constructor:</source>
          <target state="translated">Чтобы включить CLS,добавьте его в свой проект,создайте пространство имён и установите его в конструкторе sequelize:</target>
        </trans-unit>
        <trans-unit id="6e021f11d5b93d2d56eff3f6527dc41d1add80d2" translate="yes" xml:space="preserve">
          <source>To extend Sequelize datatypes, do it before any instance is created. This example creates a dummy &lt;code&gt;NEWTYPE&lt;/code&gt; that replicates the built-in datatype &lt;code&gt;Sequelize.INTEGER(11).ZEROFILL.UNSIGNED&lt;/code&gt;.</source>
          <target state="translated">Чтобы расширить типы данных Sequelize, сделайте это до создания любого экземпляра. В этом примере создается фиктивный &lt;code&gt;NEWTYPE&lt;/code&gt; , который реплицирует встроенный тип данных &lt;code&gt;Sequelize.INTEGER(11).ZEROFILL.UNSIGNED&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="08fd9370c478abbfbe5b9098d6a2c2698f6d2737" translate="yes" xml:space="preserve">
          <source>To get full control over the foreign key column added by sequelize, you can use the &lt;code&gt;foreignKey&lt;/code&gt; option. It can either be a string, that specifies the name, or and object type definition, equivalent to those passed to &lt;code&gt;sequelize.define&lt;/code&gt;.</source>
          <target state="translated">Чтобы получить полный контроль над столбцом внешнего ключа, добавленным с помощью sequelize, вы можете использовать параметр &lt;code&gt;foreignKey&lt;/code&gt; . Это может быть либо строка, указывающая имя, либо определение типа объекта, эквивалентные тем, которые передаются в &lt;code&gt;sequelize.define&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8b302c9710f47440c1d0dbf353af407bf35573b5" translate="yes" xml:space="preserve">
          <source>To get it stored in the database, use the &lt;code&gt;save&lt;/code&gt;-method and catch the events ... if needed:</source>
          <target state="translated">Чтобы сохранить его в базе данных, используйте метод &lt;code&gt;save&lt;/code&gt; и перехватите события ... при необходимости:</target>
        </trans-unit>
        <trans-unit id="81359c1e15ebff6b36cb1d90106dde4b80bd06a7" translate="yes" xml:space="preserve">
          <source>To get more relevant data, you can use limit, offset, order and grouping:</source>
          <target state="translated">Для получения более актуальных данных можно использовать лимит,смещение,порядок и группировку:</target>
        </trans-unit>
        <trans-unit id="4fb9a241f10c959268058c116425f0667f1b4bdc" translate="yes" xml:space="preserve">
          <source>To include all attributes, you can pass a single object with &lt;code&gt;all: true&lt;/code&gt;:</source>
          <target state="translated">Чтобы включить все атрибуты, вы можете передать один объект со значением &lt;code&gt;all: true&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="41a7882efafea18d939a044b5476e2e2db5db42b" translate="yes" xml:space="preserve">
          <source>To invoke scope functions you can do</source>
          <target state="translated">Для вызова функций диапазона можно сделать</target>
        </trans-unit>
        <trans-unit id="6ff66a578ca5331ff221d03e2780d2b820c5ce62" translate="yes" xml:space="preserve">
          <source>To learn more about how to use Sequelize, read the tutorials available in the left menu. Begin with &lt;a href=&quot;manual/getting-started&quot;&gt;Getting Started&lt;/a&gt;.</source>
          <target state="translated">Чтобы узнать больше о том, как использовать Sequelize, прочитайте руководства, доступные в левом меню. Начните с &lt;a href=&quot;manual/getting-started&quot;&gt;начала работы&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="82a28ba40b57129812c63ec44c7e5de69d719c98" translate="yes" xml:space="preserve">
          <source>To manage all data migrations you can use seeders. Seed files are some change in data that can be used to populate database table with sample data or test data.</source>
          <target state="translated">Для управления всеми миграциями данных можно использовать сеялки.Файлы сеялок-это некоторое изменение в данных,которое может быть использовано для заполнения таблицы базы данных образцами данных или данными испытаний.</target>
        </trans-unit>
        <trans-unit id="d41c172a89209d5b09fd5ea5fc82930a6a93002c" translate="yes" xml:space="preserve">
          <source>To move the where conditions from an included model from the &lt;code&gt;ON&lt;/code&gt; condition to the top level &lt;code&gt;WHERE&lt;/code&gt; you can use the &lt;code&gt;'$nested.column$'&lt;/code&gt; syntax:</source>
          <target state="translated">Чтобы переместить условия where из включенной модели из условия &lt;code&gt;ON&lt;/code&gt; на верхний уровень &lt;code&gt;WHERE&lt;/code&gt; , вы можете использовать синтаксис &lt;code&gt;'$nested.column$'&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="43c3e345f72eba5c3efd1485f74d109a6eedabc7" translate="yes" xml:space="preserve">
          <source>To provide a length for the data type, you can invoke it like a function: &lt;code&gt;INTEGER(2)&lt;/code&gt;</source>
          <target state="translated">Чтобы указать длину для типа данных, вы можете вызвать его как функцию: &lt;code&gt;INTEGER(2)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3c3ee3dbbd358f5ea3a5375e13ef5d5f193d5514" translate="yes" xml:space="preserve">
          <source>To recap, the elements of the order/group array can be the following:</source>
          <target state="translated">Напомним,что элементы массива ордер/группа могут быть следующими:</target>
        </trans-unit>
        <trans-unit id="9f0557f6152bcc28fed2088bbb5968f3d7399eb3" translate="yes" xml:space="preserve">
          <source>To remove created associations you can just call the set method without a specific id:</source>
          <target state="translated">Для удаления созданных ассоциаций можно просто вызвать метод set без конкретного идентификатора:</target>
        </trans-unit>
        <trans-unit id="e6ed480fdfa306848b35b4f98b434fd446ccbad0" translate="yes" xml:space="preserve">
          <source>To select only some attributes, you can use the &lt;code&gt;attributes&lt;/code&gt; option. Most often, you pass an array:</source>
          <target state="translated">Чтобы выбрать только некоторые атрибуты, вы можете использовать опцию &lt;code&gt;attributes&lt;/code&gt; . Чаще всего вы передаете массив:</target>
        </trans-unit>
        <trans-unit id="9c0b1f31729f10174367599cf32209d59219dfc3" translate="yes" xml:space="preserve">
          <source>To update several rows at once:</source>
          <target state="translated">Обновить сразу несколько строк:</target>
        </trans-unit>
        <trans-unit id="22b7aa8cde8674fa4a729793b1a6cd316bfb540d" translate="yes" xml:space="preserve">
          <source>To use a custom error message instead of that provided by &lt;a href=&quot;https://github.com/chriso/validator.js&quot;&gt;validator.js&lt;/a&gt;, use an object instead of the plain value or array of arguments, for example a validator which needs no argument can be given a custom message with</source>
          <target state="translated">Чтобы использовать настраиваемое сообщение об ошибке вместо сообщения, предоставляемого &lt;a href=&quot;https://github.com/chriso/validator.js&quot;&gt;validator.js&lt;/a&gt; , используйте объект вместо простого значения или массива аргументов, например, валидатору, которому не нужен аргумент, можно передать настраиваемое сообщение с</target>
        </trans-unit>
        <trans-unit id="75c5403dcfb5bf72f31f2a3c2d7f2fe263d46ed4" translate="yes" xml:space="preserve">
          <source>To use the wildcard operator %, append it to your replacement. The following query matches users with names that start with 'ben'.</source>
          <target state="translated">Чтобы использовать шаблонный оператор %,добавьте его к вашей замене.Следующий запрос соответствует пользователям с именами,начинающимися с 'ben'.</target>
        </trans-unit>
        <trans-unit id="c38c6c1f3a2743f8626703abb302e403d20ff81c" translate="yes" xml:space="preserve">
          <source>Tokens</source>
          <target state="translated">Tokens</target>
        </trans-unit>
        <trans-unit id="603270749de0b8c5d657407d142a68e2bd894051" translate="yes" xml:space="preserve">
          <source>Top level where with eagerly loaded models</source>
          <target state="translated">Топ-уровень,где с нетерпеливой загрузкой моделей</target>
        </trans-unit>
        <trans-unit id="1a7b7c1b33d161f45804730c70b75175dccd9883" translate="yes" xml:space="preserve">
          <source>Transaction</source>
          <target state="translated">Transaction</target>
        </trans-unit>
        <trans-unit id="4560532617032eba3499944208e1c914b037e0c9" translate="yes" xml:space="preserve">
          <source>Transaction options</source>
          <target state="translated">Варианты проведения операций</target>
        </trans-unit>
        <trans-unit id="9c5a9f64903010dca00f0ffdf25ae4dd43e00a52" translate="yes" xml:space="preserve">
          <source>Transaction to run query under</source>
          <target state="translated">Транзакция для выполнения запроса в разделе</target>
        </trans-unit>
        <trans-unit id="1e3281a962e6db2e54e787f796eb7d2b1582389a" translate="yes" xml:space="preserve">
          <source>Transactions</source>
          <target state="translated">Transactions</target>
        </trans-unit>
        <trans-unit id="af4419640cc9b72a684777bff88307c334556deb" translate="yes" xml:space="preserve">
          <source>Trigger the constraint checks immediately</source>
          <target state="translated">Немедленно запустите проверку ограничений</target>
        </trans-unit>
        <trans-unit id="fbfa67ef4fc863ae5513f819aa79809b0312945b" translate="yes" xml:space="preserve">
          <source>Truncate all instances of the model.</source>
          <target state="translated">Усечь все экземпляры модели.</target>
        </trans-unit>
        <trans-unit id="41ba9fe559f96b6c33ced14f4f229126b6f945ea" translate="yes" xml:space="preserve">
          <source>Truncate all instances of the model. This is a convenient method for Model.destroy({ truncate: true }).</source>
          <target state="translated">Усечь все экземпляры модели.Это удобный метод для Model.destroy({усечь:true }).</target>
        </trans-unit>
        <trans-unit id="db65c7ad58c51cfb9b81db0635cd9fbad284458d" translate="yes" xml:space="preserve">
          <source>Truncate all tables defined through the sequelize models.</source>
          <target state="translated">Усечение всех таблиц,определенных с помощью моделей секвелизации.</target>
        </trans-unit>
        <trans-unit id="bebb9195a206168efd2a5b7fe2975178574e742a" translate="yes" xml:space="preserve">
          <source>Truncate all tables defined through the sequelize models. This is done by calling &lt;code&gt;Model.truncate()&lt;/code&gt; on each model.</source>
          <target state="translated">Обрезать все таблицы, определенные в моделях сиквелизации. Это делается путем вызова &lt;code&gt;Model.truncate()&lt;/code&gt; для каждой модели.</target>
        </trans-unit>
        <trans-unit id="548046a99a144543148a41922751851ef4f108e1" translate="yes" xml:space="preserve">
          <source>Truncates all tables that have foreign-key references to the named table, or to any tables added to the group due to CASCADE.</source>
          <target state="translated">Усекает все таблицы,которые имеют ссылки с посторонними ключами на именованную таблицу или на любые таблицы,добавленные в группу благодаря CASCADE.</target>
        </trans-unit>
        <trans-unit id="3deb7456519697ecf4eefc455516c969a3681bae" translate="yes" xml:space="preserve">
          <source>Type</source>
          <target state="translated">Type</target>
        </trans-unit>
        <trans-unit id="2b125b0e14258280c33525f42d8874d816aafa25" translate="yes" xml:space="preserve">
          <source>Type of constraint. One of the values in available constraints(case insensitive)</source>
          <target state="translated">Тип ограничения.Одно из значений в доступных ограничениях (нечувствительность к регистру).</target>
        </trans-unit>
        <trans-unit id="02466358e536c7941ae60bb0d80b0e5f61e9ca27" translate="yes" xml:space="preserve">
          <source>Type of geography data</source>
          <target state="translated">Вид географических данных</target>
        </trans-unit>
        <trans-unit id="80639b7816c71c1eb7b8fd0ef7324c7ca20ec91d" translate="yes" xml:space="preserve">
          <source>Type of geometry data</source>
          <target state="translated">Тип геометрических данных</target>
        </trans-unit>
        <trans-unit id="657bf8cc823055c20626d868fa847d4cfc53f2f0" translate="yes" xml:space="preserve">
          <source>Type of index, available options are UNIQUE|FULLTEXT|SPATIAL</source>
          <target state="translated">Тип индекса,доступные опции UNIQUE|FULLTEXT|SPATIAL.</target>
        </trans-unit>
        <trans-unit id="d4a86cb946d4af4766f6a695502b64f3ea0cd58b" translate="yes" xml:space="preserve">
          <source>TypeScript</source>
          <target state="translated">TypeScript</target>
        </trans-unit>
        <trans-unit id="37dd88d1763196449c23edd76686c9e9f0cfc42d" translate="yes" xml:space="preserve">
          <source>TypeScript doesn't know how to generate a &lt;code&gt;class&lt;/code&gt; definition when we use the &lt;code&gt;sequelize.define&lt;/code&gt; method to define a Model. Therefore, we need to do some manual work and declare an interface and a type, and eventually cast the result of &lt;code&gt;.define&lt;/code&gt; to the &lt;em&gt;static&lt;/em&gt; type.</source>
          <target state="translated">TypeScript не знает, как сгенерировать определение &lt;code&gt;class&lt;/code&gt; когда мы используем метод &lt;code&gt;sequelize.define&lt;/code&gt; для определения модели. Следовательно, нам нужно проделать некоторую ручную работу и объявить интерфейс и тип, и в конечном итоге привести результат &lt;code&gt;.define&lt;/code&gt; к &lt;em&gt;статическому&lt;/em&gt; типу.</target>
        </trans-unit>
        <trans-unit id="e49081c4bde9e1cfe58939ea3a16f1c972606e9a" translate="yes" xml:space="preserve">
          <source>Types can be set per-transaction by passing &lt;code&gt;options.type&lt;/code&gt; to &lt;code&gt;sequelize.transaction&lt;/code&gt;.</source>
          <target state="translated">Типы могут быть установлены для каждой транзакции, передав &lt;code&gt;options.type&lt;/code&gt; в &lt;code&gt;sequelize.transaction&lt;/code&gt; .</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
