<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="sequelize">
    <body>
      <group id="sequelize">
        <trans-unit id="a9119455acf93ce1a9f696a83f8995a9c11c5e76" translate="yes" xml:space="preserve">
          <source>Our code example above defines a unique constraint on the &lt;code&gt;username&lt;/code&gt; field:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79eda91bb3b93164ab196b3ef5ed4437b5cbffeb" translate="yes" xml:space="preserve">
          <source>Our goal is to use environment variables for various database secrets and not accidentally check them in to source control.</source>
          <target state="translated">Наша цель-использовать переменные окружения для различных секретов баз данных,а не случайно проверять их для управления исходными текстами.</target>
        </trans-unit>
        <trans-unit id="cc38f7c39eb540d71928b1f61611e839c5871bdc" translate="yes" xml:space="preserve">
          <source>Output example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3c8c95c5e534bcd2ea0034a0d83177efa6923f4" translate="yes" xml:space="preserve">
          <source>Output:</source>
          <target state="translated">Output:</target>
        </trans-unit>
        <trans-unit id="2fe96ce51692a16cb282a2ceab2dbe87dd4dadd4" translate="yes" xml:space="preserve">
          <source>Override the name of the createdAt attribute if a string is provided, or disable it if false. Timestamps must be true. Underscored field will be set with underscored setting.</source>
          <target state="translated">Переопределить имя атрибута createAt,если строка предоставлена,или отключить его,если оно ложное.Временные метки должны быть верны.Подчеркнутое поле будет установлено с подчеркнутой настройкой.</target>
        </trans-unit>
        <trans-unit id="573d8c9affd76cce2150107ed262b77798164d37" translate="yes" xml:space="preserve">
          <source>Override the name of the deletedAt attribute if a string is provided, or disable it if false. Timestamps must be true. Underscored field will be set with underscored setting.</source>
          <target state="translated">Переопределить имя атрибута deletedAt,если строка предоставлена,или отключить его,если оно ложное.Временные метки должны быть верны.Подчеркнутое поле будет установлено с подчеркнутой настройкой.</target>
        </trans-unit>
        <trans-unit id="9f80d4c656e4b0f6cdab55224c8d4d9902552192" translate="yes" xml:space="preserve">
          <source>Override the name of the updatedAt attribute if a string is provided, or disable it if false. Timestamps must be true. Underscored field will be set with underscored setting.</source>
          <target state="translated">Переопределить имя атрибута updateAt,если строка предоставлена,или отключить его,если оно ложное.Временные метки должны быть верны.Подчеркнутое поле будет установлено с подчеркнутой настройкой.</target>
        </trans-unit>
        <trans-unit id="f94554b14ce5d5015d5ba9e9470606d7ad0f4f6f" translate="yes" xml:space="preserve">
          <source>Override:</source>
          <target state="translated">Override:</target>
        </trans-unit>
        <trans-unit id="3f7d6cc8fec865bda822e92a0370ee91c289bb82" translate="yes" xml:space="preserve">
          <source>Overriding singulars and plurals when defining aliases</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="191bd4c23022d0bfd4c0afc357cdedc311221c89" translate="yes" xml:space="preserve">
          <source>PAGLOCK</source>
          <target state="translated">PAGLOCK</target>
        </trans-unit>
        <trans-unit id="6216de0ea276035ad6c650404d1fb576170506d9" translate="yes" xml:space="preserve">
          <source>PRIMARY KEY</source>
          <target state="translated">ПРАЙМАРИЯ КЕЙ</target>
        </trans-unit>
        <trans-unit id="a39ae88eaa033344f483111a662c38ecc2c9da40" translate="yes" xml:space="preserve">
          <source>Pagination / Limiting</source>
          <target state="translated">Пагинация/ограничение</target>
        </trans-unit>
        <trans-unit id="23c7082125dc9cf874bbe14ba3786fba1a079619" translate="yes" xml:space="preserve">
          <source>Parameters used with the BUILT-IN validator function, if applicable</source>
          <target state="translated">Параметры,используемые с функцией валидатора BUILT-IN,если это применимо.</target>
        </trans-unit>
        <trans-unit id="ad73fd1a2c6d31eae746e734e09a693793745bd9" translate="yes" xml:space="preserve">
          <source>Params:</source>
          <target state="translated">Params:</target>
        </trans-unit>
        <trans-unit id="0323ce5f916db1ccbbc2f229de155777a2911f7c" translate="yes" xml:space="preserve">
          <source>Paranoid</source>
          <target state="translated">Paranoid</target>
        </trans-unit>
        <trans-unit id="ca1853065cda963bd9f055b6bd7dc1d954164536" translate="yes" xml:space="preserve">
          <source>Pass CONCURRENT so other operations run while the index is created</source>
          <target state="translated">Пройти КОНКУРЕНТ,чтобы во время создания индекса выполнялись и другие операции.</target>
        </trans-unit>
        <trans-unit id="482ca0567201b23a9b0f90cc3e4ca6ff3ea7504f" translate="yes" xml:space="preserve">
          <source>Pass in the desired level as the first argument:</source>
          <target state="translated">В качестве первого аргумента передайте желаемый уровень:</target>
        </trans-unit>
        <trans-unit id="d0b6a5930843ead542631eccaa522d64b6f4c225" translate="yes" xml:space="preserve">
          <source>Pass query execution time in milliseconds as second argument to logging function (options.logging).</source>
          <target state="translated">Передайте время выполнения запроса в миллисекундах в качестве второго аргумента в функцию протоколирования (options.logging).</target>
        </trans-unit>
        <trans-unit id="72708499ef443e45b95abcad90f88639d4ced03b" translate="yes" xml:space="preserve">
          <source>Passing Dialect Specific Options</source>
          <target state="translated">Специфические параметры проходного диалекта</target>
        </trans-unit>
        <trans-unit id="baba3ce14590bddb2c780823a3c2827d23a79575" translate="yes" xml:space="preserve">
          <source>Passing an array directly to the &lt;code&gt;where&lt;/code&gt; option will implicitly use the &lt;code&gt;IN&lt;/code&gt; operator:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f68ed21fc56c7f5b451bd1d1d2f4f3db03f183a" translate="yes" xml:space="preserve">
          <source>Passing options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0427d4c2f4fb6701afcb9d1d7b13d90257f569fd" translate="yes" xml:space="preserve">
          <source>Per-attribute validations</source>
          <target state="translated">валидации по атрибутам</target>
        </trans-unit>
        <trans-unit id="ad41972eed6cb608026300559fabcca9c731ee78" translate="yes" xml:space="preserve">
          <source>Per-attribute validators and &lt;code&gt;allowNull&lt;/code&gt;</source>
          <target state="translated">Валидаторы атрибутов и &lt;code&gt;allowNull&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9808bafa8bd1f406e228ff5597a4f9e053ba72a0" translate="yes" xml:space="preserve">
          <source>Permanent Hooks (Sequelize.addHook)</source>
          <target state="translated">Постоянные крючки (Sequelize.addHook)</target>
        </trans-unit>
        <trans-unit id="7dde5515fd3f65884b9e28154cbb52137090082b" translate="yes" xml:space="preserve">
          <source>Permanent Hooks (with &lt;code&gt;sequelize.addHook&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="323bca2fecb8aed065297c5c4721eea1b95a7140" translate="yes" xml:space="preserve">
          <source>Permanent hooks may also be defined in &lt;code&gt;Sequelize.options&lt;/code&gt;:</source>
          <target state="translated">Постоянные хуки также могут быть определены в &lt;code&gt;Sequelize.options&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="92f024343d8b573bb5f602c24148c5cdcb725713" translate="yes" xml:space="preserve">
          <source>Permanent hooks may also be defined in the options passed to the Sequelize constructor:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="496e9438ab65557e3360c256d99d6d71460da8a3" translate="yes" xml:space="preserve">
          <source>Philosophy</source>
          <target state="translated">Philosophy</target>
        </trans-unit>
        <trans-unit id="63d6ff4863ed30fb76c61de7b9ed4a9c45048878" translate="yes" xml:space="preserve">
          <source>Please note that this function will return &lt;code&gt;false&lt;/code&gt; when a property from a nested (for example JSON) property was edited manually, you must call &lt;code&gt;changed('key', true)&lt;/code&gt; manually in these cases. Writing an entirely new object (eg. deep cloned) will be detected.</source>
          <target state="translated">Обратите внимание, что эта функция вернет &lt;code&gt;false&lt;/code&gt; , если свойство из вложенного (например, JSON) свойства было отредактировано вручную, в этих случаях вы должны вызвать &lt;code&gt;changed('key', true)&lt;/code&gt; вручную. Будет обнаружена запись совершенно нового объекта (например, глубоко клонированного).</target>
        </trans-unit>
        <trans-unit id="ea229a60fffb397f7382a9347e16ab4efb875578" translate="yes" xml:space="preserve">
          <source>Please see &lt;a href=&quot;transaction.js~transaction#static-get-LOCK&quot;&gt;Transaction.LOCK&lt;/a&gt;</source>
          <target state="translated">См. &lt;a href=&quot;transaction.js~transaction#static-get-LOCK&quot;&gt;Transaction.LOCK&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a633c5c9226ef96e26ef67982c0b1fbf31148bdb" translate="yes" xml:space="preserve">
          <source>Plural name for model</source>
          <target state="translated">Множественное название для модели</target>
        </trans-unit>
        <trans-unit id="940615d7b1c2a240a0fbb7f03ce78d46e92515c9" translate="yes" xml:space="preserve">
          <source>Polymorphic Associations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="398862a0e98197505e10899a163763d02a40a057" translate="yes" xml:space="preserve">
          <source>Polymorphic eager loading</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e5309972abd8e79bd8898c504dc5190d0da203d" translate="yes" xml:space="preserve">
          <source>Polymorphic lazy loading</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d084ee18adaf1fb6a55bcdbb5ae509aaad9d8de" translate="yes" xml:space="preserve">
          <source>Polymorphism &amp;amp; Scopes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b41bd077261ccb7ed7f04853c7e531e9e12131b" translate="yes" xml:space="preserve">
          <source>Possible options for row locking.</source>
          <target state="translated">Возможные опции для блокировки рядов.</target>
        </trans-unit>
        <trans-unit id="16e0a7b633c76d649ce1e522d7ec681ae462f811" translate="yes" xml:space="preserve">
          <source>Possible options for row locking. Used in conjunction with &lt;code&gt;find&lt;/code&gt; calls:</source>
          <target state="translated">Возможные варианты блокировки строк. Используется вместе с вызовами &lt;code&gt;find&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="620b5af6e3139187a47774b9079769bc03158a5a" translate="yes" xml:space="preserve">
          <source>PostGIS 1.5 introduced a new spatial type called geography, which uses geodetic measurement instead of Cartesian measurement. Coordinate points in the geography type are always represented in WGS 84 lon lat degrees (SRID 4326), but measurement functions and relationships ST_Distance, ST_DWithin, ST_Length, and ST_Area always return answers in meters or assume inputs in meters.</source>
          <target state="translated">PostGIS 1.5 ввела новый пространственный тип,называемый географией,который использует геодезические измерения вместо декартовых.Точки координат в географическом типе всегда представлены в WGS 84 lon lat градусов (SRID 4326),но функции измерения и связи ST_Distance,ST_DWithin,ST_Length и ST_Area всегда возвращают ответы в метрах или принимают входные данные в метрах.</target>
        </trans-unit>
        <trans-unit id="24fd6c2d1150de6a47543209150ff4c2a2d3104f" translate="yes" xml:space="preserve">
          <source>PostgreSQL</source>
          <target state="translated">PostgreSQL</target>
        </trans-unit>
        <trans-unit id="073df06d9f717170d0ac65398d7e552d09431498" translate="yes" xml:space="preserve">
          <source>PostgreSQL - Implemented as a temporary function with exception handling: INSERT EXCEPTION WHEN unique_constraint UPDATE</source>
          <target state="translated">PostgreSQL-Реализован как временная функция с обработкой исключений:ВЫПОЛНЕНИЕ КОГДА unique_constraint UPDATE</target>
        </trans-unit>
        <trans-unit id="1c7d4689974faaf8c79a44ecf938576cc307a775" translate="yes" xml:space="preserve">
          <source>PostgreSQL - Implemented with ON CONFLICT DO UPDATE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79391636d60c218db7234941037f7edbc1a7f6f8" translate="yes" xml:space="preserve">
          <source>PostgreSQL - Implemented with ON CONFLICT DO UPDATE. If update data contains PK field, then PK is selected as the default conflict key. Otherwise first unique constraint/index will be selected, which can satisfy conflict key requirements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fbb62931ba330a93c263e461bbeede166935575" translate="yes" xml:space="preserve">
          <source>PostgreSQL also supports a JSONB data type: &lt;code&gt;DataTypes.JSONB&lt;/code&gt;. It can be queried in three different ways:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1502dc34bce3e1346fc0014a7cc5ee3e3ea95fbe" translate="yes" xml:space="preserve">
          <source>Postgres 9.3+ only</source>
          <target state="translated">Только для Postgres 9.3+</target>
        </trans-unit>
        <trans-unit id="b8ce2814112b89374b10c38bb5cca295a3fcd5eb" translate="yes" xml:space="preserve">
          <source>Postgres also supports specific locks while eager loading by using OF:</source>
          <target state="translated">Postgres также поддерживает специальные замки при загрузке с помощью OF:</target>
        </trans-unit>
        <trans-unit id="3b51d85b8b83e568b47e86fa1de6ec1fa325824e" translate="yes" xml:space="preserve">
          <source>Postgres-only Range Operators</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51d44eb51088929f422bc28b75044da894ba7133" translate="yes" xml:space="preserve">
          <source>PostgresQueryInterface</source>
          <target state="translated">PostgresQueryInterface</target>
        </trans-unit>
        <trans-unit id="2a407251115e1be28c5504b5f9e9199614279ede" translate="yes" xml:space="preserve">
          <source>PostgresSQL will build the index without taking any write locks. Postgres only</source>
          <target state="translated">PostgresSQL построит индекс без фиксации записи.Только для Postgres</target>
        </trans-unit>
        <trans-unit id="c998fcd404760161b18e1244391560d882806a60" translate="yes" xml:space="preserve">
          <source>Practical demonstration:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40422597c1c40514f35669101c84e0217afa95b5" translate="yes" xml:space="preserve">
          <source>Prevents any drop statements while altering a table when set to &lt;code&gt;false&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69f98f62216cced84a4a7664fbea7b244d38cc2f" translate="yes" xml:space="preserve">
          <source>Primary Key</source>
          <target state="translated">Основной ключ</target>
        </trans-unit>
        <trans-unit id="e517ee5fd3782b5ee136558aa5e08fab77ad1688" translate="yes" xml:space="preserve">
          <source>Primary keys</source>
          <target state="translated">Первичные ключи</target>
        </trans-unit>
        <trans-unit id="9ab910186508b83730a0e5f6ef1718f45b1e0c1c" translate="yes" xml:space="preserve">
          <source>Production Usages</source>
          <target state="translated">Использование в производстве</target>
        </trans-unit>
        <trans-unit id="3eacec8f55a5e35528fbf9b2c5ac91fb95640e54" translate="yes" xml:space="preserve">
          <source>Programmatic usage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="554abf30e877116873c3de42924d6ac948059d03" translate="yes" xml:space="preserve">
          <source>Programmatic use</source>
          <target state="translated">Программное использование</target>
        </trans-unit>
        <trans-unit id="a03bd3889a77a6489aff23f934753e3e24f9872e" translate="yes" xml:space="preserve">
          <source>Project bootstrapping</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe5671922bc7f67cfabfa60ab97a9542ac21f39f" translate="yes" xml:space="preserve">
          <source>Promise</source>
          <target state="translated">Promise</target>
        </trans-unit>
        <trans-unit id="75f955c70fe0ea79083fa7fabe3a05900585c010" translate="yes" xml:space="preserve">
          <source>Promises and async/await</source>
          <target state="translated">Обещания и ожидание</target>
        </trans-unit>
        <trans-unit id="351f56a6fefd5127c90506d3e91990f1d7631787" translate="yes" xml:space="preserve">
          <source>Properties:</source>
          <target state="translated">Properties:</target>
        </trans-unit>
        <trans-unit id="ee08d4050cbb6098526e1137d5e2d585350759ed" translate="yes" xml:space="preserve">
          <source>Property name of the BUILT-IN validator function that caused the validation error (e.g.</source>
          <target state="translated">Имя свойства функции BUILT-IN валидатора,вызвавшей ошибку валидации (например,</target>
        </trans-unit>
        <trans-unit id="21dd1ed33063eaf0fec2b627562e02d732b0d02a" translate="yes" xml:space="preserve">
          <source>Property name of the BUILT-IN validator function that caused the validation error (e.g. &quot;in&quot; or &quot;len&quot;), if applicable</source>
          <target state="translated">Имя свойства функции валидатора BUILT-IN,которая вызвала ошибку валидации (например,&quot;in&quot; или &quot;len&quot;),если это применимо.</target>
        </trans-unit>
        <trans-unit id="b39befe85559d7a7d7f870921dd09f561ee705ee" translate="yes" xml:space="preserve">
          <source>Provide a custom getter for this column. Use &lt;code&gt;this.getDataValue(String)&lt;/code&gt; to manipulate the underlying values.</source>
          <target state="translated">Предоставьте пользовательский метод получения для этого столбца. Используйте &lt;code&gt;this.getDataValue(String)&lt;/code&gt; для управления базовыми значениями.</target>
        </trans-unit>
        <trans-unit id="b5698adaf1c9e505751601dcfd1ade05d46fb2b2" translate="yes" xml:space="preserve">
          <source>Provide a custom setter for this column. Use &lt;code&gt;this.setDataValue(String, Value)&lt;/code&gt; to manipulate the underlying values.</source>
          <target state="translated">Задайте настраиваемый сеттер для этого столбца. Используйте &lt;code&gt;this.setDataValue(String, Value)&lt;/code&gt; для управления базовыми значениями.</target>
        </trans-unit>
        <trans-unit id="8205d4835feb28ef748cb995a862982c6704475f" translate="yes" xml:space="preserve">
          <source>Providing the foreign key name directly</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db3e60842835b557780aed32b31d7099355014e0" translate="yes" xml:space="preserve">
          <source>Providing the table name directly</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7806d20a5b3b834f1cf4cd79c6e14a14852dd900" translate="yes" xml:space="preserve">
          <source>Public Constructor</source>
          <target state="translated">Общественный строитель</target>
        </trans-unit>
        <trans-unit id="f98f741af3e683a633762397b6b19a8a0d84038a" translate="yes" xml:space="preserve">
          <source>Public Constructors</source>
          <target state="translated">Общественные строители</target>
        </trans-unit>
        <trans-unit id="6e05889c9b4dc3e125f9019b8d38b3bb729194a7" translate="yes" xml:space="preserve">
          <source>Public Members</source>
          <target state="translated">Общественность</target>
        </trans-unit>
        <trans-unit id="400be4997716cf3bb5a0c05bf961e2a62c95f6c8" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
          <target state="translated">Общедоступные методы</target>
        </trans-unit>
        <trans-unit id="63d5fc813429798ad09082a4ce6d7789993afa8a" translate="yes" xml:space="preserve">
          <source>Queries using OR</source>
          <target state="translated">Запросы по ИЛИ</target>
        </trans-unit>
        <trans-unit id="23495b5214e112ada524d83f47869be27fbc912f" translate="yes" xml:space="preserve">
          <source>Queries within a &lt;code&gt;transaction&lt;/code&gt; can be performed with locks</source>
          <target state="translated">Запросы внутри &lt;code&gt;transaction&lt;/code&gt; могут выполняться с блокировками</target>
        </trans-unit>
        <trans-unit id="e08371560ae35ad331969b2ee30fbc29c4cf8383" translate="yes" xml:space="preserve">
          <source>Queries within a &lt;code&gt;transaction&lt;/code&gt; can be performed with locks:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9240311f3ef167d8f58165e9bce953c0badf6a4a" translate="yes" xml:space="preserve">
          <source>Queries within a transaction can skip locked rows</source>
          <target state="translated">Запросы внутри транзакции могут пропустить заблокированные строки</target>
        </trans-unit>
        <trans-unit id="db8b49c3a0dec670530fbe3be61b60522349a771" translate="yes" xml:space="preserve">
          <source>Queries within a transaction can skip locked rows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d12354bd5e0d0c4f4a34bf8e9705cc16c24598ce" translate="yes" xml:space="preserve">
          <source>Query Interface</source>
          <target state="translated">Интерфейс запроса</target>
        </trans-unit>
        <trans-unit id="0969ef4dddd33716783dd28b66ec0aaeafb4bd86" translate="yes" xml:space="preserve">
          <source>Query option</source>
          <target state="translated">Вариант запроса</target>
        </trans-unit>
        <trans-unit id="720143b0891d96ea816e381d60d6c88f81a3db6f" translate="yes" xml:space="preserve">
          <source>Query options</source>
          <target state="translated">Варианты запросов</target>
        </trans-unit>
        <trans-unit id="e078f5ce4da3bbd9092168dc7caa7d58d0c3218d" translate="yes" xml:space="preserve">
          <source>Query options.</source>
          <target state="translated">Варианты запросов.</target>
        </trans-unit>
        <trans-unit id="aacae2c5528cab9ee4d1056bb3fe97d662b13033" translate="yes" xml:space="preserve">
          <source>Query options. See sequelize.query for full options</source>
          <target state="translated">Варианты запросов.Полные параметры см.в разделе sequelize.request.</target>
        </trans-unit>
        <trans-unit id="1e0418715c69e9b17e7730738c56f3d4f4b9d704" translate="yes" xml:space="preserve">
          <source>QueryError</source>
          <target state="translated">QueryError</target>
        </trans-unit>
        <trans-unit id="e0905a933a3f10834e2d58cddd1bfbace4c6ce1e" translate="yes" xml:space="preserve">
          <source>QueryInterface</source>
          <target state="translated">QueryInterface</target>
        </trans-unit>
        <trans-unit id="b746e021b98742617b2fe7490d3ac34a75c2d8dd" translate="yes" xml:space="preserve">
          <source>QueryInterface#addConstraint</source>
          <target state="translated">QueryInterface#addConstraint</target>
        </trans-unit>
        <trans-unit id="643a49308cbc01e5043d378a12618e214c5fc2c9" translate="yes" xml:space="preserve">
          <source>QueryInterface#changeColumn</source>
          <target state="translated">QueryInterface#changeColumn</target>
        </trans-unit>
        <trans-unit id="6ec0042c10ee0eac832c21eca876add74ae02743" translate="yes" xml:space="preserve">
          <source>QueryInterface#describeTable</source>
          <target state="translated">QueryInterface#describeTable</target>
        </trans-unit>
        <trans-unit id="14421ac92c6098da772b065fb1bab1ecb5846759" translate="yes" xml:space="preserve">
          <source>QueryInterface#dropAllTables</source>
          <target state="translated">QueryInterface#dropAllTables</target>
        </trans-unit>
        <trans-unit id="15f06e414a008fe4f9a8ed2c166cf43bb78c8647" translate="yes" xml:space="preserve">
          <source>QueryInterface#dropTable</source>
          <target state="translated">QueryInterface#dropTable</target>
        </trans-unit>
        <trans-unit id="ab0315d75e931022da910b9021c97b0a8d5933fe" translate="yes" xml:space="preserve">
          <source>QueryInterface#getForeignKeyReferencesForTable</source>
          <target state="translated">QueryInterface#getForeignKeyReferencesForTable</target>
        </trans-unit>
        <trans-unit id="5e69331c438507ee6c5c9be1ef3f6a70c8c812bd" translate="yes" xml:space="preserve">
          <source>QueryInterface#removeColumn</source>
          <target state="translated">QueryInterface#removeColumn</target>
        </trans-unit>
        <trans-unit id="f2c5d943c75420247fd7f4e08cc8984d0996a139" translate="yes" xml:space="preserve">
          <source>QueryInterface#removeConstraint</source>
          <target state="translated">QueryInterface#removeConstraint</target>
        </trans-unit>
        <trans-unit id="1c9e66a109d0e696c561c2cac13d744edfc4cc35" translate="yes" xml:space="preserve">
          <source>QueryInterface#renameColumn</source>
          <target state="translated">QueryInterface#renameColumn</target>
        </trans-unit>
        <trans-unit id="270de98496f79ae37a3c9b120a81fbf93a9783b5" translate="yes" xml:space="preserve">
          <source>QueryInterface#upsert</source>
          <target state="translated">QueryInterface#upsert</target>
        </trans-unit>
        <trans-unit id="956e52cb6dce6420ffdbd1c53f487158ffdca0ce" translate="yes" xml:space="preserve">
          <source>QueryTypes</source>
          <target state="translated">QueryTypes</target>
        </trans-unit>
        <trans-unit id="cc6835ce045ca407e1aa42cf034a40b2dc968c7d" translate="yes" xml:space="preserve">
          <source>Querying</source>
          <target state="translated">Querying</target>
        </trans-unit>
        <trans-unit id="8f1e1ff9d000b44617e8ef8f0ce02e30146ecaef" translate="yes" xml:space="preserve">
          <source>Quick example</source>
          <target state="translated">Быстрый пример</target>
        </trans-unit>
        <trans-unit id="578e6dad8d99e7211a3086f6ebcd1836a6b2b2b0" translate="yes" xml:space="preserve">
          <source>RANGE</source>
          <target state="translated">RANGE</target>
        </trans-unit>
        <trans-unit id="c5db7969dcd30635e5d7867040b6cc76158dd175" translate="yes" xml:space="preserve">
          <source>RAW</source>
          <target state="translated">RAW</target>
        </trans-unit>
        <trans-unit id="85071fc9642a31aeb812a32870f392506932a628" translate="yes" xml:space="preserve">
          <source>READCOMMITTED</source>
          <target state="translated">READCOMMITTED</target>
        </trans-unit>
        <trans-unit id="c81fcd11275974e0c42fe3b69f4579fb5562a008" translate="yes" xml:space="preserve">
          <source>READPAST</source>
          <target state="translated">READPAST</target>
        </trans-unit>
        <trans-unit id="0c97d219d43b5c2d780f866829caf6659ccd95b4" translate="yes" xml:space="preserve">
          <source>READUNCOMMITTED</source>
          <target state="translated">READUNCOMMITTED</target>
        </trans-unit>
        <trans-unit id="98576b173a3704ed9c7a7b2cf51bf056c70f0d68" translate="yes" xml:space="preserve">
          <source>READ_COMMITTED</source>
          <target state="translated">READ_COMMITTED</target>
        </trans-unit>
        <trans-unit id="61855051443526ce1354c6dfbbb1385589d20c72" translate="yes" xml:space="preserve">
          <source>READ_UNCOMMITTED</source>
          <target state="translated">READ_UNCOMMITTED</target>
        </trans-unit>
        <trans-unit id="3b330731a188b19fdf61999609e5e9b932bb400b" translate="yes" xml:space="preserve">
          <source>REAL</source>
          <target state="translated">REAL</target>
        </trans-unit>
        <trans-unit id="35818f41399b7623be79d4ece6708799ff65422b" translate="yes" xml:space="preserve">
          <source>REPEATABLEREAD</source>
          <target state="translated">REPEATABLEREAD</target>
        </trans-unit>
        <trans-unit id="7933c8f4eeae479160924ccc01192513271103d0" translate="yes" xml:space="preserve">
          <source>REPEATABLE_READ</source>
          <target state="translated">REPEATABLE_READ</target>
        </trans-unit>
        <trans-unit id="d2de16710476e50096c7fcc23018a457762110cf" translate="yes" xml:space="preserve">
          <source>ROWLOCK</source>
          <target state="translated">ROWLOCK</target>
        </trans-unit>
        <trans-unit id="639e3ac9bf3c15f412dffa9f6f9c04017303eefc" translate="yes" xml:space="preserve">
          <source>Range Operators</source>
          <target state="translated">Операторы диапазона</target>
        </trans-unit>
        <trans-unit id="48652fff66c0aa4370d5c8fba0d573037de8ea3f" translate="yes" xml:space="preserve">
          <source>Range types</source>
          <target state="translated">Типы ассортимента</target>
        </trans-unit>
        <trans-unit id="96c99c450dc81023477ef685e69a7671928973e9" translate="yes" xml:space="preserve">
          <source>Range types are data types representing a range of values of some element type (called the range's subtype). Only available in Postgres. See &lt;a href=&quot;http://www.postgresql.org/docs/9.4/static/rangetypes.html&quot;&gt;the Postgres documentation&lt;/a&gt; for more details</source>
          <target state="translated">Типы диапазонов - это типы данных, представляющие диапазон значений некоторого типа элемента (называемого подтипом диапазона). Доступно только в Postgres. См. &lt;a href=&quot;http://www.postgresql.org/docs/9.4/static/rangetypes.html&quot;&gt;Документацию Postgres&lt;/a&gt; для более подробной информации.</target>
        </trans-unit>
        <trans-unit id="baa0c0a539e637ea81ecd40d7d79d62762651243" translate="yes" xml:space="preserve">
          <source>Range types are data types representing a range of values of some element type (called the range's subtype). Only available in Postgres. See &lt;a href=&quot;https://www.postgresql.org/docs/9.4/static/rangetypes.html&quot;&gt;the Postgres documentation&lt;/a&gt; for more details</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a7377dcba549345dfcab0dfa8460d8f871eb24f" translate="yes" xml:space="preserve">
          <source>Range types can be queried with all supported operators.</source>
          <target state="translated">Типы диапазонов могут быть запрошены со всеми поддерживаемыми операторами.</target>
        </trans-unit>
        <trans-unit id="0d5fda95e3940bc09dc1ccc22666813c0b54f73d" translate="yes" xml:space="preserve">
          <source>Ranges</source>
          <target state="translated">Ranges</target>
        </trans-unit>
        <trans-unit id="4abc963c5feb4a77aec12cd6e0b283d52dc33fa8" translate="yes" xml:space="preserve">
          <source>Ranges (PostgreSQL only)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d5ffd4747a468824eca3c1df9c2238d7de96915" translate="yes" xml:space="preserve">
          <source>Raw Queries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f5ef9cd3f272e59c3c26c12902db3ba7d565d10" translate="yes" xml:space="preserve">
          <source>Raw queries</source>
          <target state="translated">сырые запросы</target>
        </trans-unit>
        <trans-unit id="4248bae998e3d216240b6c47e05b15e9130b7194" translate="yes" xml:space="preserve">
          <source>Raw will be added verbatim without quoting</source>
          <target state="translated">Сырое будет добавлено дословно без цитирования</target>
        </trans-unit>
        <trans-unit id="70c9b4f58c55a2765750d48e15c5353f39a95865" translate="yes" xml:space="preserve">
          <source>Read Replication</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9663c8f2ab80910477b1274bc8c092ea181f86b5" translate="yes" xml:space="preserve">
          <source>Read replication</source>
          <target state="translated">Репликация для чтения</target>
        </trans-unit>
        <trans-unit id="fc3a671a9de66ec18ca4a1c3ca9912583ee9b3ca" translate="yes" xml:space="preserve">
          <source>Recall that Sequelize uses a library called &lt;a href=&quot;https://www.npmjs.com/package/inflection&quot;&gt;inflection&lt;/a&gt; under the hood, so that irregular plurals (such as &lt;code&gt;person -&amp;gt; people&lt;/code&gt;) are computed correctly. However, if you're working in another language, you may want to define the singular and plural forms of names directly; sequelize allows you to do this with some options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a367f7ca1e9c6317016a28d82c9e274d3cfcd41c" translate="yes" xml:space="preserve">
          <source>Recap: the default setup</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d20d0fee3b91643dd8d272ac33d01ca95179d82" translate="yes" xml:space="preserve">
          <source>References</source>
          <target state="translated">References</target>
        </trans-unit>
        <trans-unit id="3461d3a7969c4cd108547d91c8db9fbbeb2a561d" translate="yes" xml:space="preserve">
          <source>Referring to other columns</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="031a37f39bcb7e10adf807d3e8cce401989e3336" translate="yes" xml:space="preserve">
          <source>Refresh the current instance in-place, i.e.</source>
          <target state="translated">Обновить текущий экземпляр на месте,т.е.</target>
        </trans-unit>
        <trans-unit id="e3bead0d664a82f06306287d9173002e149764e1" translate="yes" xml:space="preserve">
          <source>Refresh the current instance in-place, i.e. update the object with current data from the DB and return the same object. This is different from doing a &lt;code&gt;find(Instance.id)&lt;/code&gt;, because that would create and return a new instance. With this method, all references to the Instance are updated with the new data and no new objects are created.</source>
          <target state="translated">Обновить текущий экземпляр на месте, т.е. обновить объект текущими данными из БД и вернуть тот же объект. Это отличается от &lt;code&gt;find(Instance.id)&lt;/code&gt; , поскольку при этом создается и возвращается новый экземпляр. С помощью этого метода все ссылки на экземпляр обновляются новыми данными, и новые объекты не создаются.</target>
        </trans-unit>
        <trans-unit id="ca5db4fe93ba98fe1b576309acf2388052f2a36a" translate="yes" xml:space="preserve">
          <source>RegExp</source>
          <target state="translated">RegExp</target>
        </trans-unit>
        <trans-unit id="1e86d1ab3e14027eebaead6774b3afb37da45758" translate="yes" xml:space="preserve">
          <source>Relations / Associations</source>
          <target state="translated">Отношения/Ассоциации</target>
        </trans-unit>
        <trans-unit id="c49f1446ca673d49ec1415e6aef62429bad05b0a" translate="yes" xml:space="preserve">
          <source>Reloading an instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc1c1bb509a7c9eefcd8074bcef69cd86f8f19ac" translate="yes" xml:space="preserve">
          <source>Reloading instances</source>
          <target state="translated">Случаи перезагрузки</target>
        </trans-unit>
        <trans-unit id="14458dc7478ac57fde39eddb8f546bb3fd24be23" translate="yes" xml:space="preserve">
          <source>Remember, that using &lt;code&gt;as&lt;/code&gt; to change the name of the association will also change the name of the foreign key. When using &lt;code&gt;as&lt;/code&gt;, it is safest to also specify the foreign key.</source>
          <target state="translated">Помните, что использование &lt;code&gt;as&lt;/code&gt; для изменения имени ассоциации также изменит имя внешнего ключа. При использовании &lt;code&gt;as&lt;/code&gt; безопаснее также указать внешний ключ.</target>
        </trans-unit>
        <trans-unit id="6d92b3105e7267474045640ff596b8906e7af063" translate="yes" xml:space="preserve">
          <source>Remove a column from a table</source>
          <target state="translated">Удалить столбец со стола</target>
        </trans-unit>
        <trans-unit id="bff645f20c7a1972d6d88b3b0359efc0ee0f30bb" translate="yes" xml:space="preserve">
          <source>Remove a constraint from a table</source>
          <target state="translated">Удалить ограничение из таблицы</target>
        </trans-unit>
        <trans-unit id="cb9d2380c9de310077c9efa21538ee05180de069" translate="yes" xml:space="preserve">
          <source>Remove an already existing index from a table</source>
          <target state="translated">Удалить уже существующий индекс из таблицы</target>
        </trans-unit>
        <trans-unit id="ab78daa0ae196a56f47e13a630c4d49dbadeaa77" translate="yes" xml:space="preserve">
          <source>Remove attribute from model definition</source>
          <target state="translated">Удалить атрибут из определения модели</target>
        </trans-unit>
        <trans-unit id="d07d3f15bc31bcd0357b211de5ddfbf88c68016f" translate="yes" xml:space="preserve">
          <source>Removing a column</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2973fb8de042ab579cc70360faec4d4d03145016" translate="yes" xml:space="preserve">
          <source>Removing hooks</source>
          <target state="translated">Съемные крючки</target>
        </trans-unit>
        <trans-unit id="91662afa90e2669fafb0bf327ba36d683b24d55a" translate="yes" xml:space="preserve">
          <source>Rename a column</source>
          <target state="translated">Переименовать колонну</target>
        </trans-unit>
        <trans-unit id="ef6f539bacc24cc94df1896ca6fcc25c1857460e" translate="yes" xml:space="preserve">
          <source>Rename a table</source>
          <target state="translated">Переименовать стол</target>
        </trans-unit>
        <trans-unit id="5c789b825fe6ffb7af34dec8ebebc9922c5740fd" translate="yes" xml:space="preserve">
          <source>Rename an SQL function</source>
          <target state="translated">Переименовать функцию SQL</target>
        </trans-unit>
        <trans-unit id="844abd7b464a7e3dcdf7de2a8921961f223adea8" translate="yes" xml:space="preserve">
          <source>Replacements</source>
          <target state="translated">Replacements</target>
        </trans-unit>
        <trans-unit id="d70b63d60d5bb03bf369a3221e7e9fa6befeb5ae" translate="yes" xml:space="preserve">
          <source>Replacements in a query can be done in two different ways, either using named parameters (starting with &lt;code&gt;:&lt;/code&gt;), or unnamed, represented by a &lt;code&gt;?&lt;/code&gt;. Replacements are passed in the options object.</source>
          <target state="translated">Замены в запросе может быть сделано двумя способами, либо с использованием именованных параметров (начиная с &lt;code&gt;:&lt;/code&gt; ), или безымянная, в лице &lt;code&gt;?&lt;/code&gt; . Замены передаются в объекте параметров.</target>
        </trans-unit>
        <trans-unit id="794dc40894f02da9292ff833a3bc074670a571ef" translate="yes" xml:space="preserve">
          <source>Required eager loading</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8dd3270a29ae39ef2c23cbc1c10e9c2f5688a7c" translate="yes" xml:space="preserve">
          <source>Resolves an array with &amp;lt;created, primaryKey&amp;gt;</source>
          <target state="translated">Разрешает массив с &amp;lt;created, primaryKey&amp;gt;</target>
        </trans-unit>
        <trans-unit id="87df60de337fb58864343e396696d74611e0d403" translate="yes" xml:space="preserve">
          <source>Resources</source>
          <target state="translated">Resources</target>
        </trans-unit>
        <trans-unit id="bc5668827c21fe1f8f36ea7324d4d8a3dcb11ecd" translate="yes" xml:space="preserve">
          <source>Restore multiple instances if &lt;code&gt;paranoid&lt;/code&gt; is enabled.</source>
          <target state="translated">Восстановите несколько экземпляров, если включен &lt;code&gt;paranoid&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="37be80d158033bb193c3d7ed1a4181d957c6440e" translate="yes" xml:space="preserve">
          <source>Restore the row corresponding to this instance.</source>
          <target state="translated">Восстановить строку,соответствующую этому экземпляру.</target>
        </trans-unit>
        <trans-unit id="d2363df61524d7567e5af8c230d6ffbc8c9156fc" translate="yes" xml:space="preserve">
          <source>Restore the row corresponding to this instance. Only available for paranoid models.</source>
          <target state="translated">Восстановить строку,соответствующую этому экземпляру.Доступно только для параноидальных моделей.</target>
        </trans-unit>
        <trans-unit id="16fca1ae86b904335623c956e24af5c06d6c9696" translate="yes" xml:space="preserve">
          <source>Restoring</source>
          <target state="translated">Restoring</target>
        </trans-unit>
        <trans-unit id="4634f89378d1924436e5804ae4532bb1debc2947" translate="yes" xml:space="preserve">
          <source>Restoring soft-deleted instances</source>
          <target state="translated">Восстановление мягкотекучих экземпляров</target>
        </trans-unit>
        <trans-unit id="bd4afc0073cac79bf136f8e1d922b83f76e969ad" translate="yes" xml:space="preserve">
          <source>Result:</source>
          <target state="translated">Result:</target>
        </trans-unit>
        <trans-unit id="f26f5c5c95a911b7185dd088fa0b3f892ac47881" translate="yes" xml:space="preserve">
          <source>Return Properties:</source>
          <target state="translated">Возвращение собственности:</target>
        </trans-unit>
        <trans-unit id="f664f9ed85db7232f7addc0c9bbae995ff292379" translate="yes" xml:space="preserve">
          <source>Return raw result. See sequelize.query for more information.</source>
          <target state="translated">Возвращайте необработанный результат.Дополнительные сведения см.в разделе sequelize.request.</target>
        </trans-unit>
        <trans-unit id="9d2d96565dc06a866465216373028dc31bfc11ee" translate="yes" xml:space="preserve">
          <source>Return:</source>
          <target state="translated">Return:</target>
        </trans-unit>
        <trans-unit id="a1d9b7652dc04e48059f4b18dea69d8b483420d4" translate="yes" xml:space="preserve">
          <source>ReturnType</source>
          <target state="translated">ReturnType</target>
        </trans-unit>
        <trans-unit id="a0edde2bcffd199a764acdd89faa623b6165a09e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;null&lt;/code&gt; when no association is present (which is good);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="874e06fa1a11596872c8706db1cf0fdb9bca693b" translate="yes" xml:space="preserve">
          <source>Returns a Promise that resolves to the saved instance (or rejects with a &lt;code&gt;Sequelize.ValidationError&lt;/code&gt;, which will have a property for each of the fields for which the validation failed, with the error message for that field).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f32e3242c5f0d8fcfb58c28d4f50b845b239aea2" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the row was created or updated. For MySQL/MariaDB, it returns &lt;code&gt;true&lt;/code&gt; when inserted and &lt;code&gt;false&lt;/code&gt; when updated. For Postgres/MSSQL with &lt;code&gt;options.returning&lt;/code&gt; true, it returns record and created boolean with signature &lt;code&gt;&amp;lt;Model, created&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Возвращает логическое значение, указывающее, была ли строка создана или обновлена. Для MySQL / MariaDB он возвращает &lt;code&gt;true&lt;/code&gt; при вставке и &lt;code&gt;false&lt;/code&gt; при обновлении. Для Postgres / MSSQL с &lt;code&gt;options.returning&lt;/code&gt; true он возвращает запись и созданное логическое значение с подписью &lt;code&gt;&amp;lt;Model, created&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fdeabc9461ee56743e0aa89216c4114eb6dc4c55" translate="yes" xml:space="preserve">
          <source>Returns all foreign key constraints of requested tables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92777933f98de40e5798a074519518b08312bfd8" translate="yes" xml:space="preserve">
          <source>Returns an instance of QueryInterface.</source>
          <target state="translated">Возвращает экземпляр QueryInterface.</target>
        </trans-unit>
        <trans-unit id="c322d13eab7a672964dca2772283f58dabee793f" translate="yes" xml:space="preserve">
          <source>Returns the aggregate result cast to &lt;code&gt;options.dataType&lt;/code&gt;, unless &lt;code&gt;options.plain&lt;/code&gt; is false, in which case the complete data result is returned.</source>
          <target state="translated">Возвращает агрегированный результат, приведенный к &lt;code&gt;options.dataType&lt;/code&gt; , если &lt;code&gt;options.plain&lt;/code&gt; не имеет значения false, и в этом случае возвращается полный результат данных.</target>
        </trans-unit>
        <trans-unit id="103e0065273bcd078037909cef8d4cc766b70922" translate="yes" xml:space="preserve">
          <source>Returns the database name.</source>
          <target state="translated">Возвращает имя базы данных.</target>
        </trans-unit>
        <trans-unit id="a10c7b621ae5ef9b30ad1471df3f082cfe770ea5" translate="yes" xml:space="preserve">
          <source>Returns the previous value for key from &lt;code&gt;_previousDataValues&lt;/code&gt;.</source>
          <target state="translated">Возвращает предыдущее значение ключа из &lt;code&gt;_previousDataValues&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9099a16ce517a4d9ac59414ac4a523117d0007b1" translate="yes" xml:space="preserve">
          <source>Returns the specified dialect.</source>
          <target state="translated">Возвращает указанный диалект.</target>
        </trans-unit>
        <trans-unit id="4310720bd11331b7ae73d54f73813dcad1e1e28a" translate="yes" xml:space="preserve">
          <source>Returns true if model is already defined, otherwise false</source>
          <target state="translated">Возвращает true,если модель уже определена,в противном случае false</target>
        </trans-unit>
        <trans-unit id="bf0e4991b938c50573d09edc06ace4eb0dbd811c" translate="yes" xml:space="preserve">
          <source>Returns true if this instance has not yet been persisted to the database</source>
          <target state="translated">Возвращает true,если этот экземпляр еще не был сохранен в базе данных.</target>
        </trans-unit>
        <trans-unit id="2007b5e3da27ad8963cdb311ba2a3128e7cda7e9" translate="yes" xml:space="preserve">
          <source>Rollback (abort) the transaction</source>
          <target state="translated">Откат (прерывание)сделки</target>
        </trans-unit>
        <trans-unit id="8e0cccf120979b3af77ad8a694a8e18cdc3b513e" translate="yes" xml:space="preserve">
          <source>Run a describe query on the table.</source>
          <target state="translated">Запустите запрос на описание в таблице.</target>
        </trans-unit>
        <trans-unit id="8169f81a04275d99535c5a4211bee013dce2d9d3" translate="yes" xml:space="preserve">
          <source>Run an aggregation method on the specified field</source>
          <target state="translated">Запустите метод агрегирования в указанном поле.</target>
        </trans-unit>
        <trans-unit id="3439b8e48e17b209e3887f10db99898a3f33d4e1" translate="yes" xml:space="preserve">
          <source>Run before / after bulk create hooks?</source>
          <target state="translated">Запуск до/после оптового создания крючков?</target>
        </trans-unit>
        <trans-unit id="5a75a9b600e3260d17089015df07ae23e6d3703c" translate="yes" xml:space="preserve">
          <source>Run before / after bulk destroy hooks?</source>
          <target state="translated">Бегать до/после массового уничтожения крюков?</target>
        </trans-unit>
        <trans-unit id="e52da5177ddbb46f0bf29b8b84e6c8fb0b7bd630" translate="yes" xml:space="preserve">
          <source>Run before / after bulk restore hooks?</source>
          <target state="translated">Бегать до/после оптовых восстановительных крючков?</target>
        </trans-unit>
        <trans-unit id="58269ada070e42bd9ffb7febed75e9d2c7c689e1" translate="yes" xml:space="preserve">
          <source>Run before / after bulk update hooks?</source>
          <target state="translated">Запуск до/после оптовых крючков обновления?</target>
        </trans-unit>
        <trans-unit id="18d6ef3bc4c10e371b0cd91efbfe8df85e68a008" translate="yes" xml:space="preserve">
          <source>Run before / after create hooks for each individual Instance? BulkCreate hooks will still be run if options.hooks is true.</source>
          <target state="translated">Запуск до/после создания крючков для каждой отдельной Экстрасенсорной станции? BulkCreate крюки все равно будут запущены,если options.hooks верно.</target>
        </trans-unit>
        <trans-unit id="0b8459e34068807e1eb3c85fad215b35c650ee7e" translate="yes" xml:space="preserve">
          <source>Run before / after update hooks?. If true, this will execute a SELECT followed by individual UPDATEs. A select is needed, because the row data needs to be passed to the hooks</source>
          <target state="translated">Бегать до/после крючков с обновлениями? Если переменная имеет значение true,то выполняется SELECT,за которым следуют отдельные UPDATE.Выбор необходим,так как данные строки должны быть переданы перехватчикам.</target>
        </trans-unit>
        <trans-unit id="e5cedd10390a9d3b239800334f224886fe370712" translate="yes" xml:space="preserve">
          <source>Run before / after upsert hooks?</source>
          <target state="translated">Бегать до/после крючков?</target>
        </trans-unit>
        <trans-unit id="a944f09a5a793cb75f92d040f95fa4f35da5420c" translate="yes" xml:space="preserve">
          <source>Run before and after create / update + validate hooks</source>
          <target state="translated">Запуск до и после создания/обновление+проверка крючков</target>
        </trans-unit>
        <trans-unit id="2ae7654b4055b38aa79d971e21b65027b2ca1df7" translate="yes" xml:space="preserve">
          <source>Run before and after validate hooks</source>
          <target state="translated">Бегите до и после проверки крючков.</target>
        </trans-unit>
        <trans-unit id="eb7bcd25188536a53fb43bbd3bb4651b7f53eae7" translate="yes" xml:space="preserve">
          <source>Run built-in type validators on insert and update, and select with where clause, e.g. validate that arguments passed to integer fields are integer-like.</source>
          <target state="translated">Запустите встроенные валидаторы типов при вставке и обновлении,и выберите пункт &quot;где&quot;,например,подтвердите,что аргументы,переданные в целочисленные поля,являются целочисленными.</target>
        </trans-unit>
        <trans-unit id="b6577a96503f5049bd73f30cf24b51eebe5f6b78" translate="yes" xml:space="preserve">
          <source>Run validation for the join model</source>
          <target state="translated">Запустите проверку для модели соединения</target>
        </trans-unit>
        <trans-unit id="85489a3587bf76a40730b08a2f8006ba1c2c454c" translate="yes" xml:space="preserve">
          <source>Run validation for the join model.</source>
          <target state="translated">Запустите проверку для модели соединения.</target>
        </trans-unit>
        <trans-unit id="8b1ee002e28b50380a23fec36c627e6248c45e67" translate="yes" xml:space="preserve">
          <source>Run validations before the row is inserted</source>
          <target state="translated">Запустите проверку перед тем,как строка будет вставлена</target>
        </trans-unit>
        <trans-unit id="309084555a84115c15bd76ae9ab2d30a30649897" translate="yes" xml:space="preserve">
          <source>Running Migrations</source>
          <target state="translated">Бегущая миграция</target>
        </trans-unit>
        <trans-unit id="c58ea185833c0872e448165cd1c7703ab76a90b8" translate="yes" xml:space="preserve">
          <source>Running Seeds</source>
          <target state="translated">Бегущие семена</target>
        </trans-unit>
        <trans-unit id="a4942c26d0735947d8a22a2fbe2735a12e381808" translate="yes" xml:space="preserve">
          <source>SELECT</source>
          <target state="translated">SELECT</target>
        </trans-unit>
        <trans-unit id="d5a57bf501dacfbda90f27fd318b8cd457a96a1b" translate="yes" xml:space="preserve">
          <source>SERIALIZABLE</source>
          <target state="translated">SERIALIZABLE</target>
        </trans-unit>
        <trans-unit id="a9b25d35e6e01edfdd65178492d182aba6d34218" translate="yes" xml:space="preserve">
          <source>SET NULL if foreignKey allows nulls, CASCADE if otherwise</source>
          <target state="translated">SET NULL если foreignKey разрешает nulls,CASCADE если иначе</target>
        </trans-unit>
        <trans-unit id="516cdbb3e5db4db95fd51e4b0171ee222656aff6" translate="yes" xml:space="preserve">
          <source>SET NULL if foreignKey allows nulls, NO ACTION if otherwise</source>
          <target state="translated">SET NULL если foreignKey допускает nulls,NO ACTION если иначе</target>
        </trans-unit>
        <trans-unit id="4171eb087f6af62c707c7159e3b00d2346badde5" translate="yes" xml:space="preserve">
          <source>SET_DEFERRED</source>
          <target state="translated">SET_DEFERRED</target>
        </trans-unit>
        <trans-unit id="68149187501fb70315f6e8131bbf9fe48348ed17" translate="yes" xml:space="preserve">
          <source>SET_IMMEDIATE</source>
          <target state="translated">SET_IMMEDIATE</target>
        </trans-unit>
        <trans-unit id="dd19b86ae45a271261a2769df9693b7eeeac1d33" translate="yes" xml:space="preserve">
          <source>SHARE</source>
          <target state="translated">SHARE</target>
        </trans-unit>
        <trans-unit id="212e619789f81c3e0d20848be5f4e29b8020d588" translate="yes" xml:space="preserve">
          <source>SHOWCONSTRAINTS</source>
          <target state="translated">SHOWCONSTRAINTS</target>
        </trans-unit>
        <trans-unit id="f7b0cacf516079a8ab39ad0cda85a7099d7671b2" translate="yes" xml:space="preserve">
          <source>SHOWINDEXES</source>
          <target state="translated">SHOWINDEXES</target>
        </trans-unit>
        <trans-unit id="e786763f51c96fb966cfe9993f619969600fcb2d" translate="yes" xml:space="preserve">
          <source>SHOWTABLES</source>
          <target state="translated">SHOWTABLES</target>
        </trans-unit>
        <trans-unit id="9e170c7c7025a1a5f7c3857f8315cf4ac6db1d72" translate="yes" xml:space="preserve">
          <source>SMALLINT</source>
          <target state="translated">SMALLINT</target>
        </trans-unit>
        <trans-unit id="f956ed3dc3c576285c7137ae67e24c69f9266d1d" translate="yes" xml:space="preserve">
          <source>SNAPSHOT</source>
          <target state="translated">SNAPSHOT</target>
        </trans-unit>
        <trans-unit id="fb9477462cfa5f60b14431efb98e90a54887f14e" translate="yes" xml:space="preserve">
          <source>SQL type of function returned value</source>
          <target state="translated">SQL-тип функции возвращаемое значение</target>
        </trans-unit>
        <trans-unit id="9f09ccbd1cfb65aced3eb531305e671e40b95dd3" translate="yes" xml:space="preserve">
          <source>SQLite</source>
          <target state="translated">SQLite</target>
        </trans-unit>
        <trans-unit id="b751b9c16bf3667739f71a4e1c056e70944f0120" translate="yes" xml:space="preserve">
          <source>SQLite - Implemented as two queries &lt;code&gt;INSERT; UPDATE&lt;/code&gt;. This means that the update is executed regardless of whether the row already existed or not</source>
          <target state="translated">SQLite - реализован в виде двух запросов &lt;code&gt;INSERT; UPDATE&lt;/code&gt; . Это означает, что обновление выполняется независимо от того, существовала строка уже или нет.</target>
        </trans-unit>
        <trans-unit id="a8a49373e558b330f8e5de9758985b51cabb5a28" translate="yes" xml:space="preserve">
          <source>SQLite - Implemented with ON CONFLICT DO UPDATE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7414960c46b50149ed7277c81e08f989b9357681" translate="yes" xml:space="preserve">
          <source>SQLite does not support directly altering and removing columns. However, Sequelize will try to work around this by recreating the whole table with the help of a backup table, inspired by &lt;a href=&quot;https://www.sqlite.org/lang_altertable.html#otheralter&quot;&gt;these instructions&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcc5ada19f228b8cede55dd41e9efd63dd987f05" translate="yes" xml:space="preserve">
          <source>SQLiteQueryInterface</source>
          <target state="translated">SQLiteQueryInterface</target>
        </trans-unit>
        <trans-unit id="adfd5586a4984b594806377be1a9f4e09a8df4c1" translate="yes" xml:space="preserve">
          <source>SRID of type</source>
          <target state="translated">SRID типа</target>
        </trans-unit>
        <trans-unit id="da5aba16204ebd88821d2bbf3642268c4231fb1f" translate="yes" xml:space="preserve">
          <source>STRING</source>
          <target state="translated">STRING</target>
        </trans-unit>
        <trans-unit id="1d61ec39e663f6e58702a7ad1738531fa768fb9c" translate="yes" xml:space="preserve">
          <source>STRING A variable length string</source>
          <target state="translated">СТРАНИЦА переменной длины</target>
        </trans-unit>
        <trans-unit id="d41f19dfee39725e336978083f9a8c5f6b3be7a4" translate="yes" xml:space="preserve">
          <source>STRING#constructor</source>
          <target state="translated">STRING#constructor</target>
        </trans-unit>
        <trans-unit id="6603d87ef55eb6808e20bbf90a7b7b84d4c9549a" translate="yes" xml:space="preserve">
          <source>Saving only some fields</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bf4823535962139cb43d7dd88554175707982d1" translate="yes" xml:space="preserve">
          <source>Schema name to create</source>
          <target state="translated">Название схемы для создания</target>
        </trans-unit>
        <trans-unit id="6c80a5b04edfdb2a6f83ba6280a271386f52ac29" translate="yes" xml:space="preserve">
          <source>Schema name to drop</source>
          <target state="translated">Название схемы для сброса</target>
        </trans-unit>
        <trans-unit id="6e28871105300b1a9e39344d8c2f862f59f05a20" translate="yes" xml:space="preserve">
          <source>Scope Error.</source>
          <target state="translated">Ошибка в сфере действия.</target>
        </trans-unit>
        <trans-unit id="89f9f3e1b3d3732f4f20df80017d0f8219871f92" translate="yes" xml:space="preserve">
          <source>Scope Error. Thrown when the sequelize cannot query the specified scope.</source>
          <target state="translated">Ошибка в сфере действия.Выбрасывается,когда секвелизация не может запросить указанную область.</target>
        </trans-unit>
        <trans-unit id="c23540e5fb551edff0ac95649a1d551f9736d55e" translate="yes" xml:space="preserve">
          <source>Scopes</source>
          <target state="translated">Scopes</target>
        </trans-unit>
        <trans-unit id="0da8a5956aaa3c85b91d3f215267b4fade7bdd85" translate="yes" xml:space="preserve">
          <source>Scopes apply to &lt;code&gt;.find&lt;/code&gt;, &lt;code&gt;.findAll&lt;/code&gt;, &lt;code&gt;.count&lt;/code&gt;, &lt;code&gt;.update&lt;/code&gt;, &lt;code&gt;.increment&lt;/code&gt; and &lt;code&gt;.destroy&lt;/code&gt;.</source>
          <target state="translated">Области действия применяются к &lt;code&gt;.find&lt;/code&gt; , &lt;code&gt;.findAll&lt;/code&gt; , &lt;code&gt;.count&lt;/code&gt; , &lt;code&gt;.update&lt;/code&gt; , &lt;code&gt;.increment&lt;/code&gt; и &lt;code&gt;.destroy&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7e8a81b0184917a8413801eb97f5c4f1a30e16de" translate="yes" xml:space="preserve">
          <source>Scopes are applied by calling &lt;code&gt;.scope&lt;/code&gt; on the model definition, passing the name of one or more scopes. &lt;code&gt;.scope&lt;/code&gt; returns a fully functional model instance with all the regular methods: &lt;code&gt;.findAll&lt;/code&gt;, &lt;code&gt;.update&lt;/code&gt;, &lt;code&gt;.count&lt;/code&gt;, &lt;code&gt;.destroy&lt;/code&gt; etc. You can save this model instance and reuse it later:</source>
          <target state="translated">Области действия применяются путем вызова &lt;code&gt;.scope&lt;/code&gt; определения модели с передачей имени одной или нескольких областей. &lt;code&gt;.scope&lt;/code&gt; возвращает полностью функциональный экземпляр модели со всеми обычными методами: &lt;code&gt;.findAll&lt;/code&gt; , &lt;code&gt;.update&lt;/code&gt; , &lt;code&gt;.count&lt;/code&gt; , &lt;code&gt;.destroy&lt;/code&gt; и т. д. Вы можете сохранить этот экземпляр модели и повторно использовать его позже:</target>
        </trans-unit>
        <trans-unit id="120923523c35c563d8ac081091bf3511da3a4321" translate="yes" xml:space="preserve">
          <source>Scopes are defined in the model definition and can be finder objects, or functions returning finder objects - except for the default scope, which can only be an object:</source>
          <target state="translated">Охваты определяются в определении модели и могут быть объектами-поисковиками,или функциями,возвращающими объекты-поисковики-за исключением диапазона по умолчанию,который может быть только объектом:</target>
        </trans-unit>
        <trans-unit id="12dfb7ac24f373f024f55f1e302c2795557633b3" translate="yes" xml:space="preserve">
          <source>Scopes are used to help you reuse code. You can define commonly used queries, specifying options such as &lt;code&gt;where&lt;/code&gt;, &lt;code&gt;include&lt;/code&gt;, &lt;code&gt;limit&lt;/code&gt;, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3a5b1f2c5fdd9c8b47aa2b2dc6c11a18f6dd918" translate="yes" xml:space="preserve">
          <source>Scopes which are functions can be invoked in two ways. If the scope does not take any arguments it can be invoked as normally. If the scope takes arguments, pass an object:</source>
          <target state="translated">Области,которые являются функциями,могут вызываться двумя способами.Если область видимости не принимает аргументов,то она может быть вызвана как обычно.Если область видимости принимает аргументы,передайте объект:</target>
        </trans-unit>
        <trans-unit id="a39e965661725cc234f9253f0b7566cfa5aa18e4" translate="yes" xml:space="preserve">
          <source>Scoping allows you to define commonly used queries that you can easily use later. Scopes can include all the same attributes as regular finders, &lt;code&gt;where&lt;/code&gt;, &lt;code&gt;include&lt;/code&gt;, &lt;code&gt;limit&lt;/code&gt; etc.</source>
          <target state="translated">Область видимости позволяет вам определять часто используемые запросы, которые вы можете легко использовать позже. Области применения могут включать в себя все те же атрибуты , как обычные искатели, &lt;code&gt;where&lt;/code&gt; , &lt;code&gt;include&lt;/code&gt; , &lt;code&gt;limit&lt;/code&gt; и т.д.</target>
        </trans-unit>
        <trans-unit id="28a2e804b07e3185be2ca5de143ec18a821eeacf" translate="yes" xml:space="preserve">
          <source>Search for a single instance by its primary key._</source>
          <target state="translated">Поиск одного экземпляра по его первичному ключу._</target>
        </trans-unit>
        <trans-unit id="fab27cb2bedf60f526ca0afd3fc62f8ddebfb13b" translate="yes" xml:space="preserve">
          <source>Search for a single instance.</source>
          <target state="translated">Поиск одного экземпляра.</target>
        </trans-unit>
        <trans-unit id="225d934ab681de3de34793dda119a3d495064782" translate="yes" xml:space="preserve">
          <source>Search for a single instance. Returns the first instance found, or null if none can be found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="960425bfa22ad385f9c4f8d364ce932418a965ec" translate="yes" xml:space="preserve">
          <source>Search for a single instance. This applies LIMIT 1, so the listener will always be called with a single instance.</source>
          <target state="translated">Поиск одного экземпляра.При этом применяется LIMIT 1,поэтому слушатель всегда будет вызываться с одним экземпляром.</target>
        </trans-unit>
        <trans-unit id="069d800301b1242814d076a9ba69c25a797f1f8e" translate="yes" xml:space="preserve">
          <source>Search for multiple instances.</source>
          <target state="translated">Поиск нескольких экземпляров.</target>
        </trans-unit>
        <trans-unit id="8993db7b4561dcbe3dd7ed07347b984ed185c0d8" translate="yes" xml:space="preserve">
          <source>Second, you can define multiple fields and the value you want to add to them.</source>
          <target state="translated">Во-вторых,вы можете определить несколько полей и значение,которое вы хотите к ним добавить.</target>
        </trans-unit>
        <trans-unit id="ae5bcb47eb49c3bd9e3772d69f596bc96790ae05" translate="yes" xml:space="preserve">
          <source>Security tip</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec7f6561b6ed5b2dc36973b0b6a102cca134bcc5" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/chriso/validator.js&quot;&gt;the validator.js project&lt;/a&gt; for more details on the built in validation methods.</source>
          <target state="translated">См. &lt;a href=&quot;https://github.com/chriso/validator.js&quot;&gt;Проект validator.js&lt;/a&gt; для получения более подробной информации о встроенных методах проверки.</target>
        </trans-unit>
        <trans-unit id="07e8786ffa4a2d3cefb67f6c2682f38e69cd4492" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/sequelize/sequelize/issues/9421&quot;&gt;Issue #9421&lt;/a&gt; for the original API proposal.</source>
          <target state="translated">См. &lt;a href=&quot;https://github.com/sequelize/sequelize/issues/9421&quot;&gt;Выпуск № 9421&lt;/a&gt; с исходным предложением API.</target>
        </trans-unit>
        <trans-unit id="1351883340089e7a2bcb762253ecf4041042e52a" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;Sequelize.Transaction.ISOLATION_LEVELS&lt;/code&gt; for possible options</source>
          <target state="translated">См. Возможные варианты в &lt;code&gt;Sequelize.Transaction.ISOLATION_LEVELS&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2e4393e4d3bf760304fc86105ac68898ba048a63" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;Sequelize.Transaction.TYPES&lt;/code&gt; for possible options. Sqlite only.</source>
          <target state="translated">См. Возможные варианты в &lt;code&gt;Sequelize.Transaction.TYPES&lt;/code&gt; . Только Sqlite.</target>
        </trans-unit>
        <trans-unit id="3d323498fbf8da4d96a2d24a82b136e39ed2843c" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;save&lt;/code&gt;</source>
          <target state="translated">Смотрите &lt;code&gt;save&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ace885d5833656cb1c6adb455769af99c14b9057" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;set&lt;/code&gt;</source>
          <target state="translated">Смотрите &lt;code&gt;set&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="024d73cf82d16e67fc37c547b52a0b71943ce794" translate="yes" xml:space="preserve">
          <source>See aggregate</source>
          <target state="translated">См.агрегат</target>
        </trans-unit>
        <trans-unit id="4bd3fe9b400efeaa997586b22cc7de7636c4dc47" translate="yes" xml:space="preserve">
          <source>See findAll options</source>
          <target state="translated">См.поискВсе варианты</target>
        </trans-unit>
        <trans-unit id="c877fd0b0a721c9f9e045768cc3bad7950900f4d" translate="yes" xml:space="preserve">
          <source>See more options in the &lt;a href=&quot;../class/lib/sequelize.js~sequelize#instance-method-query&quot;&gt;query API reference&lt;/a&gt;. Some examples below:</source>
          <target state="translated">Дополнительные параметры см. В &lt;a href=&quot;../class/lib/sequelize.js~sequelize#instance-method-query&quot;&gt;справочнике по API запросов&lt;/a&gt; . Некоторые примеры ниже:</target>
        </trans-unit>
        <trans-unit id="08972524702175fe19fd37edd1803cbf7b0ece47" translate="yes" xml:space="preserve">
          <source>See more options in the &lt;a href=&quot;../class/lib/sequelize.js~sequelize#instance-method-query&quot;&gt;query API reference&lt;/a&gt;. Some examples:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="497dea2253a9763272c1d3ca91776ece14a847f1" translate="yes" xml:space="preserve">
          <source>See:</source>
          <target state="translated">See:</target>
        </trans-unit>
        <trans-unit id="70fdde700db9f86cb1ddf1248d1df7f946f66ee1" translate="yes" xml:space="preserve">
          <source>Seed Storage</source>
          <target state="translated">Хранение семян</target>
        </trans-unit>
        <trans-unit id="e0b6db6ffee2cbd17752e8f5ccec39fea1096673" translate="yes" xml:space="preserve">
          <source>Seeders can be undone if they are using any storage. There are two commands available for that:</source>
          <target state="translated">Сеялки могут быть разобраны,если они используют любое хранилище.Для этого доступны две команды:</target>
        </trans-unit>
        <trans-unit id="5746f22dcc2f068faa833d6223ba0cc62b54931a" translate="yes" xml:space="preserve">
          <source>Select all the attributes of the model, except some few. Useful for security purposes e.g. &lt;code&gt;{ attributes: { exclude: ['password'] } }&lt;/code&gt;</source>
          <target state="translated">Выберите все атрибуты модели, за исключением некоторых. Полезно в целях безопасности, например &lt;code&gt;{ attributes: { exclude: ['password'] } }&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="41a8019f87ab381882d8e3b6b81923fda67be63c" translate="yes" xml:space="preserve">
          <source>Select all the attributes of the model, plus some additional ones. Useful for aggregations, e.g. &lt;code&gt;{ attributes: { include: [[sequelize.fn('COUNT', sequelize.col('id')), 'total']] }&lt;/code&gt;</source>
          <target state="translated">Выберите все атрибуты модели, а также некоторые дополнительные. Полезно для агрегирования, например &lt;code&gt;{ attributes: { include: [[sequelize.fn('COUNT', sequelize.col('id')), 'total']] }&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c6732c95c68478e2f790e245cf6016ea51c74c83" translate="yes" xml:space="preserve">
          <source>Self-references</source>
          <target state="translated">Self-references</target>
        </trans-unit>
        <trans-unit id="32248b4544c4dacee860f46416e5a89b6310bc5c" translate="yes" xml:space="preserve">
          <source>Sequelize</source>
          <target state="translated">Sequelize</target>
        </trans-unit>
        <trans-unit id="e2146c89a9fedc9608681248e18eec20d2a15b61" translate="yes" xml:space="preserve">
          <source>Sequelize CLI can read from both &lt;code&gt;JSON&lt;/code&gt; and &lt;code&gt;JS&lt;/code&gt; files. This can be setup with &lt;code&gt;.sequelizerc&lt;/code&gt; file. Let see how</source>
          <target state="translated">Sequelize CLI может читать как файлы &lt;code&gt;JSON&lt;/code&gt; ,так и &lt;code&gt;JS&lt;/code&gt; . Это можно настроить с &lt;code&gt;.sequelizerc&lt;/code&gt; файла .sequelizerc . Посмотрим, как</target>
        </trans-unit>
        <trans-unit id="d4e7d933f4662f9cc8cb13c8bed0106857a7e2e5" translate="yes" xml:space="preserve">
          <source>Sequelize Models are ES6 classes. You can very easily add custom instance or class level methods.</source>
          <target state="translated">Модели Sequelize-это классы ES6.Вы можете очень легко добавить пользовательские методы уровня экземпляра или класса.</target>
        </trans-unit>
        <trans-unit id="42cba3a975a7135ac3fdb91096b3ca70b1caed5b" translate="yes" xml:space="preserve">
          <source>Sequelize allow setting &lt;code&gt;underscored&lt;/code&gt; option for Model. When &lt;code&gt;true&lt;/code&gt; this option will set the &lt;code&gt;field&lt;/code&gt; option on all attributes to the underscored version of its name. This also applies to foreign keys generated by associations.</source>
          <target state="translated">Sequelize позволяет установить &lt;code&gt;underscored&lt;/code&gt; опцию для модели. Если установлено значение &lt;code&gt;true&lt;/code&gt; , этот параметр установит для всех атрибутов значение &lt;code&gt;field&lt;/code&gt; с подчеркнутой версией его имени. Это также относится к внешним ключам, созданным ассоциациями.</target>
        </trans-unit>
        <trans-unit id="3618d92886b90e0ab93af574f3df0c6f87d7dfdb" translate="yes" xml:space="preserve">
          <source>Sequelize allows setting specific strings as aliases for operators. With v5 this will give you deprecation warning.</source>
          <target state="translated">Sequelize позволяет задавать конкретные строки в качестве псевдонимов для операторов.С помощью v5 это даст вам предупреждение о депрессии.</target>
        </trans-unit>
        <trans-unit id="e67ff8f8de729991374c4de2ad1b647275010096" translate="yes" xml:space="preserve">
          <source>Sequelize allows you to define custom getters and setters for the attributes of your models.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7fa83584a140dfdc1fd34f4ed3d5152c948a0ca" translate="yes" xml:space="preserve">
          <source>Sequelize also allows you to specify the so-called &lt;em&gt;virtual attributes&lt;/em&gt;, which are attributes on the Sequelize Model that doesn't really exist in the underlying SQL table, but instead are populated automatically by Sequelize. They are very useful for simplifying code, for example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1a257d276e4f1e9e9194ab2befc2ae82a6fdc63" translate="yes" xml:space="preserve">
          <source>Sequelize also defines by default the fields &lt;code&gt;id&lt;/code&gt; (primary key), &lt;code&gt;createdAt&lt;/code&gt; and &lt;code&gt;updatedAt&lt;/code&gt; to every model. This behavior can also be changed, of course (check the API Reference to learn more about the available options).</source>
          <target state="translated">Sequelize также определяет по умолчанию поля &lt;code&gt;id&lt;/code&gt; (первичный ключ), &lt;code&gt;createdAt&lt;/code&gt; и &lt;code&gt;updatedAt&lt;/code&gt; для каждой модели. Конечно, это поведение также можно изменить (см. Справочник по API, чтобы узнать больше о доступных параметрах).</target>
        </trans-unit>
        <trans-unit id="a7283a25617e814845f4a4d29db64847d713c510" translate="yes" xml:space="preserve">
          <source>Sequelize also provides a few utility methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c2349fee8ab637ec3b4222a7f2831bb19e007b9" translate="yes" xml:space="preserve">
          <source>Sequelize also provides the &lt;code&gt;getterMethods&lt;/code&gt; and &lt;code&gt;setterMethods&lt;/code&gt; options in the model definition to specify things that look like, but aren't exactly the same as, virtual attributes. This usage is discouraged and likely to be deprecated in the future (in favor of using virtual attributes directly).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c99632ff3d81a4a53ca5d45d74382bd890a7d1d2" translate="yes" xml:space="preserve">
          <source>Sequelize also provides the &lt;code&gt;max&lt;/code&gt;, &lt;code&gt;min&lt;/code&gt; and &lt;code&gt;sum&lt;/code&gt; convenience methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="721ff79958c22990fcc428727c9a1a0b30bc8dc9" translate="yes" xml:space="preserve">
          <source>Sequelize constructor</source>
          <target state="translated">Секвелизации конструктор</target>
        </trans-unit>
        <trans-unit id="24d7c694a73cdc3eeb5ec4017ce4eca12ad981e1" translate="yes" xml:space="preserve">
          <source>Sequelize does not use &lt;a href=&quot;https://en.wikipedia.org/wiki/Database_transaction&quot;&gt;transactions&lt;/a&gt; by default. However, for production-ready usage of Sequelize, you should definitely configure Sequelize to use transactions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b4a61bf7618bb5f80a735c5adcc86dc7d0d54b9" translate="yes" xml:space="preserve">
          <source>Sequelize doesn't create new datatypes in the database. This tutorial explains how to make Sequelize recognize new datatypes and assumes that those new datatypes are already created in the database.</source>
          <target state="translated">Секвелизация не создает новых типов данных в базе данных.В этом уроке объясняется,как заставить Sequelize распознавать новые типы данных,и предполагается,что эти новые типы данных уже созданы в базе данных.</target>
        </trans-unit>
        <trans-unit id="4d7b6d0de168876f640bde5fff3cf527c4f93ef6" translate="yes" xml:space="preserve">
          <source>Sequelize exposes symbol operators that can be used for to create more complex comparisons -</source>
          <target state="translated">Sequelize exposes символьные операторы,которые могут быть использованы для создания более сложных сравнений -</target>
        </trans-unit>
        <trans-unit id="bfdf0968a46e379a3d919cbabea542fb8b4773b7" translate="yes" xml:space="preserve">
          <source>Sequelize follows &lt;a href=&quot;http://semver.org&quot;&gt;SEMVER&lt;/a&gt;. Supports Node v10 and above to use ES6 features.</source>
          <target state="translated">Sequelize следует за &lt;a href=&quot;http://semver.org&quot;&gt;SEMVER&lt;/a&gt; . Поддерживает Node v10 и выше для использования функций ES6.</target>
        </trans-unit>
        <trans-unit id="9553b2e551700f9228e5e33503732bd3e890c940" translate="yes" xml:space="preserve">
          <source>Sequelize follows &lt;a href=&quot;http://semver.org&quot;&gt;Semantic Versioning&lt;/a&gt; and supports Node v10 and above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="582d78da6df00a995534b3b583b979009f68d4d2" translate="yes" xml:space="preserve">
          <source>Sequelize has a &lt;a href=&quot;https://github.com/sequelize/umzug&quot;&gt;sister library&lt;/a&gt; for programmatically handling execution and logging of migration tasks.</source>
          <target state="translated">У Sequelize есть &lt;a href=&quot;https://github.com/sequelize/umzug&quot;&gt;родственная библиотека&lt;/a&gt; для программной обработки выполнения и ведения журнала задач миграции.</target>
        </trans-unit>
        <trans-unit id="0f211261e93475264da544d79e18f72b323197b2" translate="yes" xml:space="preserve">
          <source>Sequelize has a lot of options for querying. You will learn more about those in the next tutorials. It is also possible to make raw SQL queries, if you really need them.</source>
          <target state="translated">Sequelize имеет много вариантов для запроса.Подробнее о них вы узнаете в следующих учебниках.Также можно делать сырые SQL-запросы,если они вам действительно нужны.</target>
        </trans-unit>
        <trans-unit id="5addf9f0817496dae9091c6a5c7b6b1de25287de" translate="yes" xml:space="preserve">
          <source>Sequelize has a sister library called &lt;a href=&quot;https://github.com/sequelize/umzug&quot;&gt;umzug&lt;/a&gt; for programmatically handling execution and logging of migration tasks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="108e561a9933198611f3c2e6a92b1f02917b1b75" translate="yes" xml:space="preserve">
          <source>Sequelize has built-in support for optimistic locking through a model instance version count.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7263ca838cabf21a169aeceea9b8f1d1793343c6" translate="yes" xml:space="preserve">
          <source>Sequelize has built-in support for optimistic locking through a model instance version count. Optimistic locking is disabled by default and can be enabled by setting the &lt;code&gt;version&lt;/code&gt; property to true in a specific model definition or global model configuration. See &lt;a href=&quot;models-definition#configuration&quot;&gt;model configuration&lt;/a&gt; for more details.</source>
          <target state="translated">Sequelize имеет встроенную поддержку оптимистической блокировки через счетчик версий экземпляра модели. Оптимистическая блокировка отключена по умолчанию и может быть включена путем установки &lt;code&gt;version&lt;/code&gt; свойства верны в определении конкретной модели или глобальной конфигурации модели. Смотрите &lt;a href=&quot;models-definition#configuration&quot;&gt;конфигурацию модели&lt;/a&gt; для более подробной информации.</target>
        </trans-unit>
        <trans-unit id="4a8d11578adeef3bffa53be612d3c8ec4ca15c7f" translate="yes" xml:space="preserve">
          <source>Sequelize has two different but related scope concepts in relation to associations. The difference is subtle but important:</source>
          <target state="translated">Sequelize имеет два различных,но связанных между собой понятия сферы действия по отношению к ассоциациям.Разница тонкая,но важная:</target>
        </trans-unit>
        <trans-unit id="c40c938deeeea8ed24d2fdf4e8f7d338f862e48c" translate="yes" xml:space="preserve">
          <source>Sequelize is a promise-based Node.js &lt;a href=&quot;https://en.wikipedia.org/wiki/Object-relational_mapping&quot;&gt;ORM&lt;/a&gt; for &lt;a href=&quot;https://en.wikipedia.org/wiki/PostgreSQL&quot;&gt;Postgres&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/MySQL&quot;&gt;MySQL&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/MariaDB&quot;&gt;MariaDB&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/SQLite&quot;&gt;SQLite&lt;/a&gt; and &lt;a href=&quot;https://en.wikipedia.org/wiki/Microsoft_SQL_Server&quot;&gt;Microsoft SQL Server&lt;/a&gt;. It features solid transaction support, relations, eager and lazy loading, read replication and more.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ba21fa010de136fd468609c0c7c0382ac4107cd" translate="yes" xml:space="preserve">
          <source>Sequelize is a promise-based Node.js ORM for Postgres, MySQL, MariaDB, SQLite and Microsoft SQL Server. It features solid transaction support, relations, eager and lazy loading, read replication and more.</source>
          <target state="translated">Sequelize-это многообещающий Node.js ORM для Postgres,MySQL,MariaDB,SQLite и Microsoft SQL Server.В нем реализована надежная поддержка транзакций,связи,активная и ленивая загрузка,репликация для чтения и многое другое.</target>
        </trans-unit>
        <trans-unit id="4f3657d8fd42ca903f769974a0aa3a98de7ae752" translate="yes" xml:space="preserve">
          <source>Sequelize is available via &lt;a href=&quot;https://www.npmjs.com/package/sequelize&quot;&gt;npm&lt;/a&gt; (or &lt;a href=&quot;https://yarnpkg.com/package/sequelize&quot;&gt;yarn&lt;/a&gt;).</source>
          <target state="translated">Sequelize доступен через &lt;a href=&quot;https://www.npmjs.com/package/sequelize&quot;&gt;НПМ&lt;/a&gt; (или &lt;a href=&quot;https://yarnpkg.com/package/sequelize&quot;&gt;нити&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="18b9d1b705db8b8f2a74b7b8fef93c710c1730a2" translate="yes" xml:space="preserve">
          <source>Sequelize is independent from specific dialects. This means that you'll have to install the respective connector library to your project yourself.</source>
          <target state="translated">Секвелизация не зависит от конкретных диалектов.Это означает,что вам придется установить соответствующую библиотеку разъемов в ваш проект самостоятельно.</target>
        </trans-unit>
        <trans-unit id="4a6b2a1acf807c379b8c8b09642b38a4ae6ec2eb" translate="yes" xml:space="preserve">
          <source>Sequelize provides a host of custom error classes, to allow you to do easier debugging.</source>
          <target state="translated">Sequelize предоставляет множество пользовательских классов ошибок,что упрощает отладку.</target>
        </trans-unit>
        <trans-unit id="2aa8bb1c410e7760da89fe1a39dd3cd6a3e6c8b6" translate="yes" xml:space="preserve">
          <source>Sequelize provides a host of custom error classes, to allow you to do easier debugging. All of these errors are exposed on the sequelize object and the sequelize constructor. All sequelize errors inherit from the base JS error object.</source>
          <target state="translated">Sequelize предоставляет множество пользовательских классов ошибок,что упрощает отладку.Все эти ошибки выставляются на объект sequelize и конструктор sequelize.Все ошибки секвелизации наследуются от базового объекта JS error.</target>
        </trans-unit>
        <trans-unit id="94018d006810918283a00d3d9a2d135055985f27" translate="yes" xml:space="preserve">
          <source>Sequelize provides a lot of hooks. The full list can be found in directly in the &lt;a href=&quot;https://github.com/sequelize/sequelize/blob/v6/lib/hooks.js#L7&quot;&gt;source code - lib/hooks.js&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a36909b9f875b9c379cfbfd57865704470509efb" translate="yes" xml:space="preserve">
          <source>Sequelize provides four hooks that are executed immediately before and after a database connection is obtained or released:</source>
          <target state="translated">Sequelize предоставляет четыре крюка,которые выполняются непосредственно до и после получения или освобождения соединения с БД:</target>
        </trans-unit>
        <trans-unit id="416453c32fbb9086481adb8012b4a2a942dcd640" translate="yes" xml:space="preserve">
          <source>Sequelize provides several operators.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b85b1055bffb1d486111fcba76a311a6af00793d" translate="yes" xml:space="preserve">
          <source>Sequelize provides the &lt;a href=&quot;../class/lib/model.js~model#static-method-create&quot;&gt;&lt;code&gt;create&lt;/code&gt;&lt;/a&gt; method, which combines the &lt;code&gt;build&lt;/code&gt; and &lt;code&gt;save&lt;/code&gt; methods shown above into a single method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c4623df5becd955bad4abf90690b10394e8952d" translate="yes" xml:space="preserve">
          <source>Sequelize provides the &lt;code&gt;Model.bulkCreate&lt;/code&gt; method to allow creating multiple records at once, with only one query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2306a41d83e4d67899465fe2766041f59728387d" translate="yes" xml:space="preserve">
          <source>Sequelize provides the &lt;code&gt;order&lt;/code&gt; and &lt;code&gt;group&lt;/code&gt; options to work with &lt;code&gt;ORDER BY&lt;/code&gt; and &lt;code&gt;GROUP BY&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61ec14df19ab3a0365bca0b9a0cdfed8e108486c" translate="yes" xml:space="preserve">
          <source>Sequelize provides the &lt;code&gt;underscored&lt;/code&gt; option for a model. When &lt;code&gt;true&lt;/code&gt;, this option will set the &lt;code&gt;field&lt;/code&gt; option on all attributes to the &lt;a href=&quot;https://en.wikipedia.org/wiki/Snake_case&quot;&gt;snake_case&lt;/a&gt; version of its name. This also applies to foreign keys automatically generated by associations and other automatically generated fields. Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f01badb3752cc4ad0cd0921e7e2e3c794d85c958" translate="yes" xml:space="preserve">
          <source>Sequelize provides various methods to assist querying your database for data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f1835de99c42c1a580a7570d515927f1601fddd" translate="yes" xml:space="preserve">
          <source>Sequelize supports &lt;a href=&quot;https://en.wikipedia.org/wiki/Replication_%28computing%29#Database_replication&quot;&gt;read replication&lt;/a&gt;, i.e. having multiple servers that you can connect to when you want to do a SELECT query. When you do read replication, you specify one or more servers to act as read replicas, and one server to act as the write master, which handles all writes and updates and propagates them to the replicas (note that the actual replication process is &lt;strong&gt;not&lt;/strong&gt; handled by Sequelize, but should be set up by database backend).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0048a920cbe256e0d63314bbc8a801ba350b416" translate="yes" xml:space="preserve">
          <source>Sequelize supports adding indexes to the model definition which will be created during &lt;code&gt;Model.sync()&lt;/code&gt; or &lt;code&gt;sequelize.sync&lt;/code&gt;.</source>
          <target state="translated">Sequelize поддерживает добавление индексов к определению модели, которое будет создано во время &lt;code&gt;Model.sync()&lt;/code&gt; или &lt;code&gt;sequelize.sync&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9ee4f3b132710b899c7915a1af601ecfa480a034" translate="yes" xml:space="preserve">
          <source>Sequelize supports adding indexes to the model definition which will be created on &lt;a href=&quot;../class/lib/sequelize.js~sequelize#instance-method-sync&quot;&gt;&lt;code&gt;sequelize.sync()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4b3b84765405016ac507be4f755d3663a4fd35c" translate="yes" xml:space="preserve">
          <source>Sequelize supports read replication, i.e. having multiple servers that you can connect to when you want to do a SELECT query. When you do read replication, you specify one or more servers to act as read replicas, and one server to act as the write master, which handles all writes and updates and propagates them to the replicas (note that the actual replication process is &lt;strong&gt;not&lt;/strong&gt; handled by Sequelize, but should be set up by database backend).</source>
          <target state="translated">Sequelize поддерживает репликацию чтения, то есть наличие нескольких серверов, к которым вы можете подключиться, когда хотите выполнить запрос SELECT. Когда вы выполняете репликацию чтения, вы указываете один или несколько серверов, которые будут действовать как реплики чтения, и один сервер, который будет действовать как мастер записи, который обрабатывает все записи и обновления и распространяет их на реплики (обратите внимание, что фактический процесс репликации &lt;strong&gt;не&lt;/strong&gt; обрабатывается by Sequelize, но должен быть настроен серверной частью базы данных).</target>
        </trans-unit>
        <trans-unit id="54ad37df872dbfd12881ca478a3c1d7bca6dc0e4" translate="yes" xml:space="preserve">
          <source>Sequelize supports self-referential Many-to-Many relationships, intuitively:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05c45bb38a179346d4750c7be49347a10744b2b5" translate="yes" xml:space="preserve">
          <source>Sequelize supports the concept of &lt;em&gt;paranoid&lt;/em&gt; tables. A &lt;em&gt;paranoid&lt;/em&gt; table is one that, when told to delete a record, it will not truly delete it. Instead, a special column called &lt;code&gt;deletedAt&lt;/code&gt; will have its value set to the timestamp of that deletion request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6487682acbc3ffca6c6ae45556cca7c4babb22c4" translate="yes" xml:space="preserve">
          <source>Sequelize supports the standard associations: &lt;a href=&quot;https://en.wikipedia.org/wiki/One-to-one_%28data_model%29&quot;&gt;One-To-One&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/One-to-many_%28data_model%29&quot;&gt;One-To-Many&lt;/a&gt; and &lt;a href=&quot;https://en.wikipedia.org/wiki/Many-to-many_%28data_model%29&quot;&gt;Many-To-Many&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="006e3c87cc46067f193d6da3dab1bfcaffa32b0b" translate="yes" xml:space="preserve">
          <source>Sequelize supports two ways of using transactions:</source>
          <target state="translated">Sequelize поддерживает два способа использования транзакций:</target>
        </trans-unit>
        <trans-unit id="036964a4746f86bd146c4ce057424fa1c7bc9c18" translate="yes" xml:space="preserve">
          <source>Sequelize uses a pool to manage connections to your replicas. Internally Sequelize will maintain two pools created using &lt;code&gt;pool&lt;/code&gt; configuration.</source>
          <target state="translated">Sequelize использует пул для управления подключениями к вашим репликам. Внутренне Sequelize будет поддерживать два пула, созданных с использованием конфигурации &lt;code&gt;pool&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f3e08a634ed03d6ae6ccb3b71d35f62d841795e4" translate="yes" xml:space="preserve">
          <source>Sequelize v6 is the next major release after v5</source>
          <target state="translated">Sequelize v6-следующий мажорный релиз после v5.</target>
        </trans-unit>
        <trans-unit id="169be66be748c88ca8ef373ecc4266505721850c" translate="yes" xml:space="preserve">
          <source>Sequelize v6 is the next major release after v5. Below is a list of breaking changes to help you upgrade.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccdb0706a39fddeebf0c225ab4959b82d3aa0355" translate="yes" xml:space="preserve">
          <source>Sequelize v6 will only support Node 10 and up &lt;a href=&quot;https://github.com/sequelize/sequelize/issues/10821&quot;&gt;#10821&lt;/a&gt;</source>
          <target state="translated">Sequelize v6 будет поддерживать только Node 10 и выше &lt;a href=&quot;https://github.com/sequelize/sequelize/issues/10821&quot;&gt;# 10821&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2b5b5c5c943c8ceec147e00a7ff05bf4f4e43edc" translate="yes" xml:space="preserve">
          <source>Sequelize v6 will only support Node 10 and up &lt;a href=&quot;https://github.com/sequelize/sequelize/issues/10821&quot;&gt;#10821&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c102a252e5d170808923d2726cbd5f00c38cafd" translate="yes" xml:space="preserve">
          <source>Sequelize will assume your table has a &lt;code&gt;id&lt;/code&gt; primary key property by default.</source>
          <target state="translated">Sequelize будет предполагать, что ваша таблица по умолчанию имеет свойство первичного ключа &lt;code&gt;id&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ef3f00eb6b16d4d38821f55c140a637459030ce0" translate="yes" xml:space="preserve">
          <source>Sequelize will automatically start a transaction and obtain a transaction object &lt;code&gt;t&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6741146fb708be669cc08fc88bbcd0daae0ce352" translate="yes" xml:space="preserve">
          <source>Sequelize will keep the connection open by default, and use the same connection for all queries. If you need to close the connection, call &lt;code&gt;sequelize.close()&lt;/code&gt; (which is asynchronous and returns a Promise).</source>
          <target state="translated">Sequelize будет держать соединение открытым по умолчанию и использовать одно и то же соединение для всех запросов. Если вам нужно закрыть соединение, вызовите &lt;code&gt;sequelize.close()&lt;/code&gt; (который является асинхронным и возвращает Promise).</target>
        </trans-unit>
        <trans-unit id="f0f2a65c79a3b28cda8874038eaaf3b576b9d09e" translate="yes" xml:space="preserve">
          <source>Sequelize will use the default connection port for each dialect (for example, for postgres, it is port 5432). If you need to specify a different port, use the &lt;code&gt;&quot;port&quot;&lt;/code&gt; field (it is not present by default in &lt;code&gt;config/config.js&lt;/code&gt; but you can simply add it).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a12449a9563abf0e30ea48fb1e83208aaaae5d36" translate="yes" xml:space="preserve">
          <source>Sequelize will warn you if you're using the default aliases and not limiting them if you want to keep using all default aliases (excluding legacy ones) without the warning you can pass the following operatorsAliases option -</source>
          <target state="translated">Sequelize предупредит вас,если вы используете псевдонимы по умолчанию и не ограничиваете их,если вы хотите продолжать использовать все псевдонимы по умолчанию (за исключением наследственных)без предупреждения,вы можете передать следующую опцию operatorsAliases -</target>
        </trans-unit>
        <trans-unit id="552ca2f07a1fa7b5f7f41ab559cdc21d42d9ce70" translate="yes" xml:space="preserve">
          <source>Sequelize#fn</source>
          <target state="translated">Sequelize#fn</target>
        </trans-unit>
        <trans-unit id="61837406268cdb0d0b12c58a96e894f36f68cffc" translate="yes" xml:space="preserve">
          <source>Sequelize#query</source>
          <target state="translated">Sequelize#query</target>
        </trans-unit>
        <trans-unit id="1c368a18a859d3c840333bb46afc6a958ccfa260" translate="yes" xml:space="preserve">
          <source>Sequelize, by default, will try to optimize your queries as much as possible. When calling cascade on delete, Sequelize will simply execute:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1b1daf0403c51efc06b9fcce975a7758d97a2aa" translate="yes" xml:space="preserve">
          <source>Sequelize-fixture</source>
          <target state="translated">Sequelize-fixture</target>
        </trans-unit>
        <trans-unit id="eed9460d8f90f2047f6e2bc967a20ec28c21c2e5" translate="yes" xml:space="preserve">
          <source>Sequelize-fixtures</source>
          <target state="translated">Sequelize-fixtures</target>
        </trans-unit>
        <trans-unit id="1a72bb27f77c646d89aab78edf53acbb911b806d" translate="yes" xml:space="preserve">
          <source>Sequelize.col</source>
          <target state="translated">Sequelize.col</target>
        </trans-unit>
        <trans-unit id="665023dac1be695aaeba85969fe1a94f8c091b07" translate="yes" xml:space="preserve">
          <source>Sequelize.define</source>
          <target state="translated">Sequelize.define</target>
        </trans-unit>
        <trans-unit id="730bfedd2958c7bec5b31d0621a9c26c5d74f1d4" translate="yes" xml:space="preserve">
          <source>Sequelize.fn and Sequelize.col returns functions and quoted column names</source>
          <target state="translated">Sequelize.fn и Sequelize.col возвращает функции и имена цитируемых колонок.</target>
        </trans-unit>
        <trans-unit id="78fe18b652a0073892cad047536d322fec1fca96" translate="yes" xml:space="preserve">
          <source>Sequelize.transaction</source>
          <target state="translated">Sequelize.transaction</target>
        </trans-unit>
        <trans-unit id="9dfa6b97e674513041a192d1bad9a14a9b372dd7" translate="yes" xml:space="preserve">
          <source>SequelizeScopeError</source>
          <target state="translated">SequelizeScopeError</target>
        </trans-unit>
        <trans-unit id="ae2472523ae42a6de56284d423ed256bd57c04c4" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;ON UPDATE&lt;/code&gt;</source>
          <target state="translated">Установить &lt;code&gt;ON UPDATE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="13bb92f3b76236bb6144fe9938c93ab1f1cbbd61" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;true&lt;/code&gt; to count only non-deleted records. Can be used on models with &lt;code&gt;paranoid&lt;/code&gt; enabled</source>
          <target state="translated">Установите значение &lt;code&gt;true&lt;/code&gt; , чтобы подсчитывать только не удаленные записи. Может использоваться на моделях с включенной &lt;code&gt;paranoid&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7afb64c86c07a6c269b9973a9ba25a4abf859068" translate="yes" xml:space="preserve">
          <source>Set can also be used to build instances for associations, if you have values for those. When using set with associations you need to make sure the property key matches the alias of the association while also making sure that the proper include options have been set (from .build() or .findOne())</source>
          <target state="translated">Набор также может быть использован для создания экземпляров для ассоциаций,если у вас есть значения для них.При использовании множества с ассоциациями вам необходимо убедиться,что ключ свойства совпадает с псевдонимом ассоциации,а также убедиться,что были установлены правильные опции включения (из .build()или .findOne()).</target>
        </trans-unit>
        <trans-unit id="166866de4829b605ddb977194d8b9388922cde2a" translate="yes" xml:space="preserve">
          <source>Set is used to update values on the instance (the sequelize representation of the instance that is, remember that nothing will be persisted before you actually call &lt;code&gt;save&lt;/code&gt;).</source>
          <target state="translated">Set используется для обновления значений в экземпляре (представление сиквелизации экземпляра, то есть помните, что ничего не будет сохраняться до того, как вы фактически вызовете &lt;code&gt;save&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="c61e103be0166178bd44bf7b48ee8f40f2dad972" translate="yes" xml:space="preserve">
          <source>Set is used to update values on the instance (the sequelize representation of the instance that is, remember that nothing will be persisted before you actually call &lt;code&gt;save&lt;/code&gt;). In its most basic form &lt;code&gt;set&lt;/code&gt; will update a value stored in the underlying &lt;code&gt;dataValues&lt;/code&gt; object. However, if a custom setter function is defined for the key, that function will be called instead. To bypass the setter, you can pass &lt;code&gt;raw: true&lt;/code&gt; in the options object.</source>
          <target state="translated">Set используется для обновления значений в экземпляре (представление сиквелизации экземпляра, то есть помните, что ничего не будет сохраняться до того, как вы фактически вызовете &lt;code&gt;save&lt;/code&gt; ). В своей самой базовой форме &lt;code&gt;set&lt;/code&gt; обновит значение, хранящееся в базовом объекте &lt;code&gt;dataValues&lt;/code&gt; . Однако, если для ключа определена настраиваемая функция установки, вместо нее будет вызываться эта функция. Чтобы обойти установщик, вы можете передать &lt;code&gt;raw: true&lt;/code&gt; в объекте параметров.</target>
        </trans-unit>
        <trans-unit id="63bb957bd4f2485eebebbe454a8b69e791949044" translate="yes" xml:space="preserve">
          <source>Set name of the model. By default its same as Class name.</source>
          <target state="translated">Установите имя модели.По умолчанию оно совпадает с именем класса.</target>
        </trans-unit>
        <trans-unit id="fb94cec61d3a9dbb28107d775ffb15026c33626f" translate="yes" xml:space="preserve">
          <source>Set of flags that control when a query is automatically retried.</source>
          <target state="translated">Установка флагов,управляющих при автоматической повторной попытке запроса.</target>
        </trans-unit>
        <trans-unit id="846c2bef292762af4a76118b663a843b6b19e54c" translate="yes" xml:space="preserve">
          <source>Set of flags that control when a query is automatically retried. Accepts all options for &lt;a href=&quot;https://github.com/mickhansen/retry-as-promised&quot;&gt;&lt;code&gt;retry-as-promised&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3489274cb42c90bb36ad36d4038ec5bb58f7ba1" translate="yes" xml:space="preserve">
          <source>Set the associated model.</source>
          <target state="translated">Установите соответствующую модель.</target>
        </trans-unit>
        <trans-unit id="cbde947d0c7d02a7c6c0d54175f289fc8bd46ae8" translate="yes" xml:space="preserve">
          <source>Set the associated models by passing an array of instances or their primary keys.</source>
          <target state="translated">Установите ассоциированные модели,передав массив экземпляров или их первичные ключи.</target>
        </trans-unit>
        <trans-unit id="28afce742822bda7ac3a2f32d5cd41e9419a35e7" translate="yes" xml:space="preserve">
          <source>Set the associated models by passing an array of instances or their primary keys. Everything that it not in the passed array will be un-associated.</source>
          <target state="translated">Установите ассоциированные модели,передав массив экземпляров или их первичные ключи.Все,что не попадет в переданный массив,будет несвязано.</target>
        </trans-unit>
        <trans-unit id="4659b18c90bdf2bdf8128c7828c1888d45a44b43" translate="yes" xml:space="preserve">
          <source>Set the associated models by passing an array of persisted instances or their primary keys.</source>
          <target state="translated">Установите ассоциированные модели,передавая массив сохраняемых экземпляров или их первичные ключи.</target>
        </trans-unit>
        <trans-unit id="068e7c3551ea386b519bbe3de0e4543eabfc2396" translate="yes" xml:space="preserve">
          <source>Set the associated models by passing an array of persisted instances or their primary keys. Everything that is not in the passed array will be un-associated</source>
          <target state="translated">Установите ассоциированные модели,передавая массив сохраняемых экземпляров или их первичные ключи.Все,что не находится в передаваемом массиве,будет несвязано.</target>
        </trans-unit>
        <trans-unit id="97d0bf148a15e487d3493ba0c0a64bd2ffe4c813" translate="yes" xml:space="preserve">
          <source>Set the constraints to not deferred. This is the default in PostgreSQL and it make it impossible to dynamically defer the constraints within a transaction.</source>
          <target state="translated">Установите ограничения,чтобы не откладывать.По умолчанию в PostgreSQL это делает невозможным динамическое откладывание ограничений внутри транзакции.</target>
        </trans-unit>
        <trans-unit id="107b4c048cafd6f18d89bbdc4fb5cd9bc242b490" translate="yes" xml:space="preserve">
          <source>Set the default transaction isolation level. See &lt;code&gt;Sequelize.Transaction.ISOLATION_LEVELS&lt;/code&gt; for possible options.</source>
          <target state="translated">Установите уровень изоляции транзакции по умолчанию. См. Возможные варианты в &lt;code&gt;Sequelize.Transaction.ISOLATION_LEVELS&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8a7b3220b9496281536f2b1d365289c693c1b5dc" translate="yes" xml:space="preserve">
          <source>Set the default transaction type. See &lt;code&gt;Sequelize.Transaction.TYPES&lt;/code&gt; for possible options. Sqlite only.</source>
          <target state="translated">Установите тип транзакции по умолчанию. См. Возможные варианты в &lt;code&gt;Sequelize.Transaction.TYPES&lt;/code&gt; . Только Sqlite.</target>
        </trans-unit>
        <trans-unit id="e32c8401f834466947bfc307cba05a4f5d4d4ee8" translate="yes" xml:space="preserve">
          <source>Set the initial AUTO_INCREMENT value for the table in MySQL.</source>
          <target state="translated">Установите начальное значение AUTO_INCREMENT для таблицы в MySQL.</target>
        </trans-unit>
        <trans-unit id="2142490858241f5b04e051a62de526c24ed0e592" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;false&lt;/code&gt; to make table names and attributes case-insensitive on Postgres and skip double quoting of them. WARNING: Setting this to false may expose vulnerabilities and is not recommended!</source>
          <target state="translated">Установите значение &lt;code&gt;false&lt;/code&gt; , чтобы имена таблиц и атрибутов в Postgres регистрировались без учета регистра и пропускали их двойные кавычки. ВНИМАНИЕ: установка значения false может выявить уязвимости и не рекомендуется!</target>
        </trans-unit>
        <trans-unit id="354c30cb0ad082bba494c5b29c973069e05d6c82" translate="yes" xml:space="preserve">
          <source>Set to true to run before-/afterDestroy hooks when an associated model is deleted because of a cascade. For example if &lt;code&gt;User.hasOne(Profile, {onDelete: 'cascade', hooks:true})&lt;/code&gt;, the before-/afterDestroy hooks for profile will be called when a user is deleted. Otherwise the profile will be deleted without invoking any hooks</source>
          <target state="translated">Установите значение true, чтобы запускать перехватчики before- / afterDestroy, когда связанная модель удаляется из-за каскада. Например, если &lt;code&gt;User.hasOne(Profile, {onDelete: 'cascade', hooks:true})&lt;/code&gt; , хуки before- / afterDestroy для профиля будут вызываться при удалении пользователя. В противном случае профиль будет удален без вызова каких-либо хуков.</target>
        </trans-unit>
        <trans-unit id="1c4f50d2829a25de027786fbdce72e5b78d07194" translate="yes" xml:space="preserve">
          <source>Sets 'ON UPDATE'</source>
          <target state="translated">Устанавливает &quot;НА ОБНОВЛЕНИИ&quot;.</target>
        </trans-unit>
        <trans-unit id="8ba2182b55b33f33f3359d2be48577029cff400f" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;ON UPDATE&lt;/code&gt;</source>
          <target state="translated">Устанавливает &lt;code&gt;ON UPDATE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="18972919efe0a74faf9c8fee85561d96ee6ef6d3" translate="yes" xml:space="preserve">
          <source>Sets the constraints to be deferred or immediately checked. PostgreSQL only</source>
          <target state="translated">Устанавливает ограничения,которые необходимо отложить или немедленно проверить.Только для PostgreSQL</target>
        </trans-unit>
        <trans-unit id="fd789d936fbe1c06427e2b854a8677e439ab83d7" translate="yes" xml:space="preserve">
          <source>Sets the constraints to be deferred or immediately checked. See &lt;code&gt;Sequelize.Deferrable&lt;/code&gt;. PostgreSQL Only</source>
          <target state="translated">Устанавливает ограничения, которые будут отложены или немедленно проверены. См. &lt;code&gt;Sequelize.Deferrable&lt;/code&gt; . Только PostgreSQL</target>
        </trans-unit>
        <trans-unit id="0f49e7ccb9839aa302b4098fa4e81d7d66544064" translate="yes" xml:space="preserve">
          <source>Sets the isolation level of the transaction.</source>
          <target state="translated">Устанавливает уровень изоляции сделки.</target>
        </trans-unit>
        <trans-unit id="bdfc96c36f0f4dfb42251486fcfd7e6409571de8" translate="yes" xml:space="preserve">
          <source>Sets the query type to &lt;code&gt;SELECT&lt;/code&gt; and return a single row</source>
          <target state="translated">Устанавливает тип запроса на &lt;code&gt;SELECT&lt;/code&gt; и возвращает одну строку</target>
        </trans-unit>
        <trans-unit id="48e50206ef8d2f4278a730b2e028d7da0eeac616" translate="yes" xml:space="preserve">
          <source>Sets the type of the transaction. Sqlite only</source>
          <target state="translated">Устанавливает тип транзакции.Только для Sqlite</target>
        </trans-unit>
        <trans-unit id="2a57ff5fd34c53aa02935c137725d57e985fbf2e" translate="yes" xml:space="preserve">
          <source>Setters</source>
          <target state="translated">Setters</target>
        </trans-unit>
        <trans-unit id="3d974d0bf03a57c01c4f20dcbb4527dcbfa503e9" translate="yes" xml:space="preserve">
          <source>Setting up a connection</source>
          <target state="translated">Настройка соединения</target>
        </trans-unit>
        <trans-unit id="c85112ad5f3b0a5d2bbb815cd320bbff39a9d8da" translate="yes" xml:space="preserve">
          <source>Setup:</source>
          <target state="translated">Setup:</target>
        </trans-unit>
        <trans-unit id="f1f1f62ad1a95c21c649b09609e964e4f011ab41" translate="yes" xml:space="preserve">
          <source>Several other query types are available. &lt;a href=&quot;https://github.com/sequelize/sequelize/blob/master/lib/query-types.js&quot;&gt;Peek into the source for details&lt;/a&gt;</source>
          <target state="translated">Доступны несколько других типов запросов. &lt;a href=&quot;https://github.com/sequelize/sequelize/blob/master/lib/query-types.js&quot;&gt;Загляните в источник для подробностей&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="23372433a223dce6a3921247775d88e32241e813" translate="yes" xml:space="preserve">
          <source>Several other query types are available. &lt;a href=&quot;https://github.com/sequelize/sequelize/blob/master/src/query-types.ts&quot;&gt;Peek into the source for details&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aea9a5880bd2b9832a731121a6d7390e206c1927" translate="yes" xml:space="preserve">
          <source>Several scopes can be applied simultaneously by passing an array of scopes to &lt;code&gt;.scope&lt;/code&gt;, or by passing the scopes as consecutive arguments.</source>
          <target state="translated">Несколько областей можно применять одновременно, передав массив областей в &lt;code&gt;.scope&lt;/code&gt; или передав области в качестве последовательных аргументов.</target>
        </trans-unit>
        <trans-unit id="a929c0b5bdc1d6b8c5356573caa1d8870cfbb0f2" translate="yes" xml:space="preserve">
          <source>Shorthand syntax for &lt;code&gt;Op.in&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cc34d5862bb6623cb8eb39094c2ba84d0c3557b" translate="yes" xml:space="preserve">
          <source>Should each row be subject to validation before it is inserted. The whole insert will fail if one row fails validation</source>
          <target state="translated">Должна ли каждая строка быть подвергнута проверке перед тем,как она будет вставлена.Вся вставка будет неудачной,если одна строка не пройдет валидацию</target>
        </trans-unit>
        <trans-unit id="fccc812dc5f2a57c8829818b8c7f9aa953df663f" translate="yes" xml:space="preserve">
          <source>Should on update and on delete constraints be enabled on the foreign key.</source>
          <target state="translated">Должны быть включены ограничения по обновлению и удалению иностранного ключа.</target>
        </trans-unit>
        <trans-unit id="1c55603b3eb9b5b1700bdfca388933033c5267cc" translate="yes" xml:space="preserve">
          <source>Should the index by unique? Can also be triggered by setting type to &lt;code&gt;UNIQUE&lt;/code&gt;</source>
          <target state="translated">Должен ли индекс быть уникальным? Также может быть активирован установкой типа &lt;code&gt;UNIQUE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d9430fbff299935c8d01d77d60a80c20db8af97f" translate="yes" xml:space="preserve">
          <source>Should the join model have timestamps</source>
          <target state="translated">Если у модели соединения есть временные метки</target>
        </trans-unit>
        <trans-unit id="e89c05ba6758d6c1df5321149b427c4c24dc77a5" translate="yes" xml:space="preserve">
          <source>Show all defined schemas</source>
          <target state="translated">Показать все определенные схемы</target>
        </trans-unit>
        <trans-unit id="a8230afc301654f9c5847932109ae42f577ad544" translate="yes" xml:space="preserve">
          <source>Show all schemas</source>
          <target state="translated">Показать все схемы</target>
        </trans-unit>
        <trans-unit id="666a1f8b0fe634287a3927b7be01a45e977340a3" translate="yes" xml:space="preserve">
          <source>Signature for this method has been changed to &lt;code&gt;Promise&amp;lt;Model,boolean | null&amp;gt;&lt;/code&gt;. First index contains upserted &lt;code&gt;instance&lt;/code&gt;, second index contains a boolean (or &lt;code&gt;null&lt;/code&gt;) indicating if record was created or updated. For SQLite/Postgres, &lt;code&gt;created&lt;/code&gt; value will always be &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7023cf03f59070b5e75d8ceb558904686c4a3f73" translate="yes" xml:space="preserve">
          <source>Similarly to how a &lt;a href=&quot;scopes&quot;&gt;model scope&lt;/a&gt; is automatically applied on the model static calls, such as &lt;code&gt;Model.scope('foo').findAll()&lt;/code&gt;, an association scope is a rule (more precisely, a set of default attributes and options) that is automatically applied on instance calls from the model. Here, &lt;em&gt;instance calls&lt;/em&gt; mean method calls that are called from an instance (rather than from the Model itself). Mixins are the main example of instance methods (&lt;code&gt;instance.getSomething&lt;/code&gt;, &lt;code&gt;instance.setSomething&lt;/code&gt;, &lt;code&gt;instance.addSomething&lt;/code&gt; and &lt;code&gt;instance.createSomething&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6986adce272ac3166bb43689d63b54c369297fc" translate="yes" xml:space="preserve">
          <source>Similarly to the other relationships, aliases can be defined for Many-to-Many relationships.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efed8b09c2af7cf317d189d17f5bc235ba012c57" translate="yes" xml:space="preserve">
          <source>Similarly, for &lt;code&gt;Foo.hasOne(Bar)&lt;/code&gt;, since &lt;code&gt;Foo&lt;/code&gt; knows about the relationship, we can perform eager loading as in &lt;code&gt;Foo.findOne({ include: Bar })&lt;/code&gt;, but we can't do &lt;code&gt;Bar.findOne({ include: Foo })&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c66f69bd4f8cb33cd2b7d50b7fe30afddb3d653" translate="yes" xml:space="preserve">
          <source>Similarly, it's also possible to remove a selected few attributes:</source>
          <target state="translated">Точно так же можно удалить несколько выбранных атрибутов:</target>
        </trans-unit>
        <trans-unit id="26f9660bf122890dd24a48101e8f7f0554e9803f" translate="yes" xml:space="preserve">
          <source>Similarly, when fetching through a join table with custom attributes, these attributes will be available as an object with the name of the through model.</source>
          <target state="translated">Аналогично,при прохождении через таблицу соединений с пользовательскими атрибутами,эти атрибуты будут доступны как объект с именем сквозной модели.</target>
        </trans-unit>
        <trans-unit id="2d41b24f83a9fd8772c1b8a5d6fe700483a03fed" translate="yes" xml:space="preserve">
          <source>Simple DELETE queries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3517dcbca2e148cc042df2c796b46fab3bad2c4" translate="yes" xml:space="preserve">
          <source>Simple INSERT queries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16fbd95afaf78cf8afca13b451c2aa52d8ed586d" translate="yes" xml:space="preserve">
          <source>Simple SELECT queries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d27f2ffb9612d6b3425c31cc2ab961c7fe89ff1b" translate="yes" xml:space="preserve">
          <source>Simple UPDATE queries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="696ea9d6cd2e74a5c976cb995c1b0d7d4e1edac0" translate="yes" xml:space="preserve">
          <source>Simple search using AND and =</source>
          <target state="translated">Простой поиск с помощью AND и =</target>
        </trans-unit>
        <trans-unit id="93daae424d16a8300e01790d40b21a063b13c75d" translate="yes" xml:space="preserve">
          <source>Since a string was given in the &lt;code&gt;through&lt;/code&gt; option of the &lt;code&gt;belongsToMany&lt;/code&gt; call, Sequelize will automatically create the &lt;code&gt;ActorMovies&lt;/code&gt; model which will act as the junction model. For example, in PostgreSQL:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86ca1c474f36d3bfe107fa86b6dd5acd4e90640b" translate="yes" xml:space="preserve">
          <source>Since no option was passed, Sequelize will infer what to do from the names of the models. In this case, Sequelize knows that a &lt;code&gt;fooId&lt;/code&gt; column must be added to &lt;code&gt;Bar&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06afcc6284f1f9770ef6be8cabef9b13c4dde5bd" translate="yes" xml:space="preserve">
          <source>Since postgres has a special case for enums, we should drop the related enum type within the table and attribute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e0eaf977d4539a1c708998caf904e6bb9df2978" translate="yes" xml:space="preserve">
          <source>Since range types have extra information for their bound inclusion/exclusion it's not very straightforward to just use a tuple to represent them in javascript.</source>
          <target state="translated">Поскольку типы диапазонов имеют дополнительную информацию для их связанного включения/исключения,не очень просто использовать кортеж для их представления в javascript.</target>
        </trans-unit>
        <trans-unit id="a4d97f569775fb373449274d2e41b9c873f48853" translate="yes" xml:space="preserve">
          <source>Since the &lt;code&gt;commentableId&lt;/code&gt; column references several tables (two in this case), we cannot add a &lt;code&gt;REFERENCES&lt;/code&gt; constraint to it. This is why the &lt;code&gt;constraints: false&lt;/code&gt; option was used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b8595d0676b15816b89dc98be5b7a53648714bf" translate="yes" xml:space="preserve">
          <source>Since the above was an &lt;code&gt;OR&lt;/code&gt; involving the same field, Sequelize allows you to use a slightly different structure which is more readable and generates the same behavior:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b601167a7cd382d7cbe566ee42e4b7536768d3ad" translate="yes" xml:space="preserve">
          <source>Since v5, Sequelize provides its own TypeScript definitions. Please note that only TS &amp;gt;= 3.1 is supported.</source>
          <target state="translated">Начиная с v5, Sequelize предоставляет собственные определения TypeScript. Обратите внимание, что поддерживается только TS&amp;gt; = 3.1.</target>
        </trans-unit>
        <trans-unit id="f436c13844b216967ae563c043203b695079ce01" translate="yes" xml:space="preserve">
          <source>Since you are working with multiple models, the callbacks will not return DAO instances. BulkCreate will return an array of model instances/DAOs, they will however, unlike &lt;code&gt;create&lt;/code&gt;, not have the resulting values of autoIncrement attributes.&lt;code&gt;update&lt;/code&gt; and &lt;code&gt;destroy&lt;/code&gt; will return the number of affected rows.</source>
          <target state="translated">Поскольку вы работаете с несколькими моделями, обратные вызовы не будут возвращать экземпляры DAO. BulkCreate вернет массив экземпляров модели / DAO, однако они, в отличие от &lt;code&gt;create&lt;/code&gt; , не будут иметь результирующих значений атрибутов autoIncrement. &lt;code&gt;update&lt;/code&gt; и &lt;code&gt;destroy&lt;/code&gt; вернут количество затронутых строк.</target>
        </trans-unit>
        <trans-unit id="d0a120c4b4160f315ab6b9691b248b295b04acec" translate="yes" xml:space="preserve">
          <source>Singular name for model</source>
          <target state="translated">Единое название модели</target>
        </trans-unit>
        <trans-unit id="0282244f1a0bc2b43ad431d49e7a5819b2eb897f" translate="yes" xml:space="preserve">
          <source>Singular vs. Plural</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7152342a267362add3c0d7f69f720f7a9c76c9e" translate="yes" xml:space="preserve">
          <source>Size</source>
          <target state="translated">Size</target>
        </trans-unit>
        <trans-unit id="dbe291e0d821c92f6b4f3902eec2a5914db65996" translate="yes" xml:space="preserve">
          <source>Skip locked rows. Only supported in Postgres.</source>
          <target state="translated">Пропустить запертые ряды.Поддерживается только в Postgres.</target>
        </trans-unit>
        <trans-unit id="b066e9f045fec6926b3eb8e24e878587821bf646" translate="yes" xml:space="preserve">
          <source>Skip saving this after setting the foreign key if false.</source>
          <target state="translated">Пропустите сохранение после установки иностранного ключа,если он ложный.</target>
        </trans-unit>
        <trans-unit id="9081562512b5ff709e3b937fef72e774f6407d16" translate="yes" xml:space="preserve">
          <source>Slugification</source>
          <target state="translated">Slugification</target>
        </trans-unit>
        <trans-unit id="e5e3a2d0b71e212514381c92fbda84f40194f41d" translate="yes" xml:space="preserve">
          <source>So far we dealt with a one-way association. But we want more! Let's define it the other way around by creating a many to many association in the next section.</source>
          <target state="translated">Пока мы имели дело с односторонней ассоциацией.Но мы хотим большего! Давайте определим это по-другому,создав много-много ассоциаций в следующем разделе.</target>
        </trans-unit>
        <trans-unit id="3bcb91b0ba8a4c00ca1c8321595ca9f8b076d9ef" translate="yes" xml:space="preserve">
          <source>So how can we achieve that with more help from Sequelize, without having to write the whole raw query by hand?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e42dc224648ef387be0eb7a267a923a15e1bc3c" translate="yes" xml:space="preserve">
          <source>So this enum name must follow this pattern &lt;code&gt;enum_&amp;lt;table_name&amp;gt;_&amp;lt;col_name&amp;gt;&lt;/code&gt;. If you are using &lt;code&gt;sync&lt;/code&gt; then correct name will automatically be generated.</source>
          <target state="translated">Таким образом, это имя перечисления должно соответствовать этому шаблону &lt;code&gt;enum_&amp;lt;table_name&amp;gt;_&amp;lt;col_name&amp;gt;&lt;/code&gt; . Если вы используете &lt;code&gt;sync&lt;/code&gt; то автоматически будет сгенерировано правильное имя.</target>
        </trans-unit>
        <trans-unit id="aa67c403111223a06acfa653d4d3dea833c1986c" translate="yes" xml:space="preserve">
          <source>So this is how we can achieve a &lt;em&gt;many-to-many-to-many&lt;/em&gt; relationship between three models in Sequelize, by taking advantage of the Super Many-to-Many relationship technique!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="722d913bc8d1ac3895e6a6c61e864943343a5217" translate="yes" xml:space="preserve">
          <source>So we start by defining the three relevant models:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e78ec0d8156cc0f2bf3c598c9044e39bfa2947e" translate="yes" xml:space="preserve">
          <source>Some data types have special properties that can be accessed in order to change the data type. For example, to get an unsigned integer with zerofill you can do &lt;code&gt;DataTypes.INTEGER.UNSIGNED.ZEROFILL&lt;/code&gt;. The order you access the properties in do not matter, so &lt;code&gt;DataTypes.INTEGER.ZEROFILL.UNSIGNED&lt;/code&gt; is fine as well.</source>
          <target state="translated">Некоторые типы данных имеют специальные свойства, к которым можно получить доступ, чтобы изменить тип данных. Например, чтобы получить целое число без знака с помощью zerofill, вы можете выполнить &lt;code&gt;DataTypes.INTEGER.UNSIGNED.ZEROFILL&lt;/code&gt; . Порядок доступа к свойствам не имеет значения, поэтому &lt;code&gt;DataTypes.INTEGER.ZEROFILL.UNSIGNED&lt;/code&gt; также подойдет .</target>
        </trans-unit>
        <trans-unit id="47aac3e3ea46b8003010b5a72dada7a63be999b8" translate="yes" xml:space="preserve">
          <source>Some frameworks automatically parse user input into js objects and if you fail to sanitize your input it might be possible to inject an Object with string operators to Sequelize.</source>
          <target state="translated">Некоторые фреймворки автоматически анализируют пользовательский ввод в js-объекты,и если не удаётся дезинфицировать ввод,возможно,можно ввести Object со строковыми операторами для Sequelize.</target>
        </trans-unit>
        <trans-unit id="506695fe4bca93a04e723ee3f23405d882143d94" translate="yes" xml:space="preserve">
          <source>Some scenarios where you can use it.</source>
          <target state="translated">Некоторые сценарии,в которых вы можете его использовать.</target>
        </trans-unit>
        <trans-unit id="0828486722d623018350014166844282cf588735" translate="yes" xml:space="preserve">
          <source>Some scenarios where you can use it:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66c9baa847ef18befb0f4adb94cf7eff191ec811" translate="yes" xml:space="preserve">
          <source>Some special values, such as &lt;code&gt;Sequelize.NOW&lt;/code&gt;, are also accepted:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45519e97c243c8c894e455e42e2f4ddf34c0f43c" translate="yes" xml:space="preserve">
          <source>Some tips around using CLI and migration setup in production environment.</source>
          <target state="translated">Некоторые советы по использованию CLI и настройке миграции в производственной среде.</target>
        </trans-unit>
        <trans-unit id="cce1d48d901d42375d87783743924bc41a147483" translate="yes" xml:space="preserve">
          <source>Sometime you want to specify a dialectOption, if it's a general config you can just add it in &lt;code&gt;config/config.json&lt;/code&gt;. Sometime you want to execute some code to get dialectOptions, you should use dynamic config file for those cases.</source>
          <target state="translated">Иногда вы хотите указать dialectOption, если это общая конфигурация, вы можете просто добавить ее в &lt;code&gt;config/config.json&lt;/code&gt; . Когда-нибудь вы захотите выполнить какой-то код для получения dialectOptions, вы должны использовать динамический файл конфигурации для этих случаев.</target>
        </trans-unit>
        <trans-unit id="8e9158873a51d40de8fc8b6422e47f75fed10c82" translate="yes" xml:space="preserve">
          <source>Sometimes it may be tiresome to list all the attributes of the model if you only want to add an aggregation:</source>
          <target state="translated">Иногда бывает утомительно перечислять все атрибуты модели,если нужно только добавить агрегирование:</target>
        </trans-unit>
        <trans-unit id="c76c8272fccf13128629164c9a771b6e879c7bc4" translate="yes" xml:space="preserve">
          <source>Sometimes you may need to associate records on different columns, you may use &lt;code&gt;sourceKey&lt;/code&gt; option:</source>
          <target state="translated">Иногда вам может потребоваться связать записи в разных столбцах, вы можете использовать опцию &lt;code&gt;sourceKey&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="84420187eb6990ad41032d3ccbebefd68bfee436" translate="yes" xml:space="preserve">
          <source>Sometimes you may want to reference another table, without adding any constraints, or associations. In that case you can manually add the reference attributes to your schema definition, and mark the relations between them.</source>
          <target state="translated">Иногда вы можете захотеть сослаться на другую таблицу,не добавляя никаких ограничений или ассоциаций.В этом случае вы можете вручную добавить атрибуты ссылки в определение вашей схемы и пометить отношения между ними.</target>
        </trans-unit>
        <trans-unit id="a5a4cd094326d31853e0865b4f6a87a79be6da8e" translate="yes" xml:space="preserve">
          <source>Sometimes you may want to rename your models when using them in associations. Let's define users as workers and projects as tasks by using the alias (&lt;code&gt;as&lt;/code&gt;) option. We will also manually define the foreign keys to use:</source>
          <target state="translated">Иногда вы можете захотеть переименовать свои модели, когда используете их в ассоциациях. Давайте определим пользователей как рабочих, а проекты как задачи, используя опцию псевдонима ( &lt;code&gt;as&lt;/code&gt; ). Мы также вручную определим используемые внешние ключи:</target>
        </trans-unit>
        <trans-unit id="ca0f78496da4f38b504892d451c90fe377acf862" translate="yes" xml:space="preserve">
          <source>Sometimes you might be expecting a massive dataset that you just want to display, without manipulation. For each row you select, Sequelize creates an instance with functions for update, delete, get associations etc. If you have thousands of rows, this might take some time. If you only need the raw data and don't want to update anything, you can do like this to get the raw data.</source>
          <target state="translated">Иногда вы можете ожидать массивный набор данных,который вы просто хотите отобразить,без манипуляций.Для каждой выбранной строки Sequelize создает экземпляр с функциями обновления,удаления,получения ассоциаций и т.д.Если у вас тысячи строк,это может занять некоторое время.Если вам нужны только необработанные данные и вы не хотите ничего обновлять,вы можете сделать так,чтобы получить необработанные данные.</target>
        </trans-unit>
        <trans-unit id="c8619ccdb38e8bcdff93ddd49b7ef88b35965018" translate="yes" xml:space="preserve">
          <source>Sometimes you'll be editing more than one record at a time by using methods like &lt;code&gt;bulkCreate&lt;/code&gt;, &lt;code&gt;update&lt;/code&gt; and &lt;code&gt;destroy&lt;/code&gt;. The following hooks will emit whenever you're using one of those methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6e10c8d1ee0e110a949c1dd33ee734b90e8b619" translate="yes" xml:space="preserve">
          <source>Sometimes you'll be editing more than one record at a time by utilizing the &lt;code&gt;bulkCreate, update, destroy&lt;/code&gt; methods on the model. The following will emit whenever you're using one of those methods:</source>
          <target state="translated">Иногда вы будете редактировать более одной записи за раз, используя в &lt;code&gt;bulkCreate, update, destroy&lt;/code&gt; методы bulkCreate, update, destroy . При использовании одного из этих методов будет генерироваться следующее:</target>
        </trans-unit>
        <trans-unit id="6da13addb000b67d42a6d66391713819e634149f" translate="yes" xml:space="preserve">
          <source>Source</source>
          <target state="translated">Source</target>
        </trans-unit>
        <trans-unit id="cec1acf567fe5032c7ccbe6f0c04bec9827cd692" translate="yes" xml:space="preserve">
          <source>Source &amp;amp; Target</source>
          <target state="translated">Исходная цель</target>
        </trans-unit>
        <trans-unit id="7969aba3e7f08bea9e13ad506421e1ecfd565291" translate="yes" xml:space="preserve">
          <source>Source and target keys</source>
          <target state="translated">Ключи источника и цели</target>
        </trans-unit>
        <trans-unit id="d8a00d1571c48d768984321da51fe70137af999f" translate="yes" xml:space="preserve">
          <source>Source code of function</source>
          <target state="translated">Исходный код функции</target>
        </trans-unit>
        <trans-unit id="1499c6d6e22facebb12a10f560d4082a7ba88a6f" translate="yes" xml:space="preserve">
          <source>Source keys</source>
          <target state="translated">Ключи источника</target>
        </trans-unit>
        <trans-unit id="59f265692e8532f3f9f4cf8098a358d626fbb2eb" translate="yes" xml:space="preserve">
          <source>Special Cases</source>
          <target state="translated">Специальные случаи</target>
        </trans-unit>
        <trans-unit id="0888013c161842a0961dffc2b3d2186ac563579a" translate="yes" xml:space="preserve">
          <source>Special methods/mixins added to instances</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7610310be61095c09812768c8c3df51ade223444" translate="yes" xml:space="preserve">
          <source>Specified model</source>
          <target state="translated">Указанная модель</target>
        </trans-unit>
        <trans-unit id="ef957adb2faf323c7b629c9477baa8a72aec3b29" translate="yes" xml:space="preserve">
          <source>Specifies an ordering. Using an array, you can provide several columns / functions to order by. Each element can be further wrapped in a two-element array. The first element is the column / function to order by, the second is the direction. For example: &lt;code&gt;order: [['name', 'DESC']]&lt;/code&gt;. In this way the column will be escaped, but the direction will not.</source>
          <target state="translated">Определяет порядок. Используя массив, вы можете упорядочить несколько столбцов / функций. Каждый элемент может быть дополнительно заключен в двухэлементный массив. Первый элемент - это столбец / функция для сортировки, второй - направление. Например: &lt;code&gt;order: [['name', 'DESC']]&lt;/code&gt; . Таким образом, столбец будет экранирован, а направление - нет.</target>
        </trans-unit>
        <trans-unit id="ab91a1aa22860a5be44f1c7d0e5a41f40ac0899d" translate="yes" xml:space="preserve">
          <source>Specify charset for model's table</source>
          <target state="translated">Укажите кодовую таблицу для таблицы модели</target>
        </trans-unit>
        <trans-unit id="05c45a92124ec5ecf33e03c985ae55ccc15f268e" translate="yes" xml:space="preserve">
          <source>Specify collation for model's table</source>
          <target state="translated">Укажите сверку для таблицы модели</target>
        </trans-unit>
        <trans-unit id="6e7c3b352c76886bab8a11641294e51528c63905" translate="yes" xml:space="preserve">
          <source>Specify comment for model's table</source>
          <target state="translated">Укажите комментарий к таблице модели</target>
        </trans-unit>
        <trans-unit id="6c874f64189ebc73fd18bd05f2dd405ac52c8396" translate="yes" xml:space="preserve">
          <source>Specify engine for model's table</source>
          <target state="translated">Укажите двигатель для таблицы модели</target>
        </trans-unit>
        <trans-unit id="93cb6f0d1b5094f7a606c75c41e39f3729456b42" translate="yes" xml:space="preserve">
          <source>Specify index operator.</source>
          <target state="translated">Укажите оператора индекса.</target>
        </trans-unit>
        <trans-unit id="1b468bd525de3aeadbdf80f3d9c458fbcaefa38a" translate="yes" xml:space="preserve">
          <source>Specifying Dialect Options</source>
          <target state="translated">Указание диалектных опций</target>
        </trans-unit>
        <trans-unit id="6cee1dffcb3801d8c61b0c521aafbc8a5ba7a43c" translate="yes" xml:space="preserve">
          <source>Specifying attributes for SELECT queries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="798bc605e825ca1c970cfa595877f3b9a238c2da" translate="yes" xml:space="preserve">
          <source>Specifying attributes from the through table</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61329f6e9dc4650b34f56acef60b2aec0b87611f" translate="yes" xml:space="preserve">
          <source>Specifying the appropriate &lt;a href=&quot;association-scopes&quot;&gt;association scopes&lt;/a&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="789445bbe2e230b404b0877611cb047ff79a2a8a" translate="yes" xml:space="preserve">
          <source>Start a transaction.</source>
          <target state="translated">Начать сделку.</target>
        </trans-unit>
        <trans-unit id="d18d875cf4fc5fcecf6b711eae14645c02d6e1f3" translate="yes" xml:space="preserve">
          <source>Start a transaction. When using transactions, you should pass the transaction in the options argument in order for the query to happen under that transaction @see &lt;a href=&quot;transaction.js~transaction&quot;&gt;Transaction&lt;/a&gt;</source>
          <target state="translated">Начать транзакцию. При использовании транзакций вы должны передать транзакцию в аргументе options, чтобы запрос выполнялся в рамках этой транзакции @see &lt;a href=&quot;transaction.js~transaction&quot;&gt;Transaction&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="767db5397ee3f3f1fc518ea59e55ef68e66c4e49" translate="yes" xml:space="preserve">
          <source>Start looking for any migration files which haven't run yet. This is possible by checking &lt;code&gt;SequelizeMeta&lt;/code&gt; table. In this case it will run &lt;code&gt;XXXXXXXXXXXXXX-create-user.js&lt;/code&gt; migration, which we created in last step.</source>
          <target state="translated">Начните искать файлы миграции, которые еще не запущены. Это возможно, проверив таблицу &lt;code&gt;SequelizeMeta&lt;/code&gt; . В этом случае он выполнит миграцию &lt;code&gt;XXXXXXXXXXXXXX-create-user.js&lt;/code&gt; , которую мы создали на последнем шаге.</target>
        </trans-unit>
        <trans-unit id="3e2ca76b869d4fc44471d269e7d021b82eb5e2e7" translate="yes" xml:space="preserve">
          <source>Static Member Summary</source>
          <target state="translated">Статистическая сводка для членов</target>
        </trans-unit>
        <trans-unit id="93974c74e2583ae745e2a4d05185ce35cbce3dda" translate="yes" xml:space="preserve">
          <source>Static Method Summary</source>
          <target state="translated">Краткое описание статического метода</target>
        </trans-unit>
        <trans-unit id="5d93069d69d10dd364cb5869055e39be7a82df7b" translate="yes" xml:space="preserve">
          <source>Static Public</source>
          <target state="translated">Статическая публика</target>
        </trans-unit>
        <trans-unit id="071f6dc8b2e654ff72e19d9c2affa12acd8cad3b" translate="yes" xml:space="preserve">
          <source>Static Public Members</source>
          <target state="translated">Статические общественные члены</target>
        </trans-unit>
        <trans-unit id="fd87df2a091c294a3be14e721270cc5cb9005586" translate="yes" xml:space="preserve">
          <source>Static Public Methods</source>
          <target state="translated">Статические публичные методы</target>
        </trans-unit>
        <trans-unit id="e54d0c6ac86b830fabe7f13edf805a4e9b1dee3e" translate="yes" xml:space="preserve">
          <source>Static Public Summary</source>
          <target state="translated">Статическое резюме для общественности</target>
        </trans-unit>
        <trans-unit id="9e092dda4f0e27d0c7686ddd00272079e678b6e6" translate="yes" xml:space="preserve">
          <source>Storage</source>
          <target state="translated">Storage</target>
        </trans-unit>
        <trans-unit id="65fa5a3000720098c1dca59b70a7d76a6fd2c4c2" translate="yes" xml:space="preserve">
          <source>String - will be quoted</source>
          <target state="translated">Строка-будет процитирована</target>
        </trans-unit>
        <trans-unit id="daceb9a0562946d158de84d0526f6149910187cc" translate="yes" xml:space="preserve">
          <source>String based operator alias. Pass object to limit set of aliased operators.</source>
          <target state="translated">Псевдоним оператора на основе струн.Передать объект для ограничения набора псевдонимов операторов.</target>
        </trans-unit>
        <trans-unit id="3816c4beac471c733eed1d91c213f8c2b6a29262" translate="yes" xml:space="preserve">
          <source>Strings</source>
          <target state="translated">Strings</target>
        </trans-unit>
        <trans-unit id="b1fb22e7591b0556a7b78a9f8047fb5abb0d9df7" translate="yes" xml:space="preserve">
          <source>Sub Queries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ce01f6381463362cf6aef2f843a59261e8f5587" translate="yes" xml:space="preserve">
          <source>Success!</source>
          <target state="translated">Success!</target>
        </trans-unit>
        <trans-unit id="6ada010a4af6877d578b83c2221b03cd216ad0ed" translate="yes" xml:space="preserve">
          <source>Such validation could have also been done with a custom validator defined on a single attribute (such as the &lt;code&gt;latitude&lt;/code&gt; attribute, by checking &lt;code&gt;(value === null) !== (this.longitude === null)&lt;/code&gt;), but the model-wide validation approach is cleaner.</source>
          <target state="translated">Такая проверка также могла быть выполнена с помощью специального валидатора, определенного для одного атрибута (например, атрибута &lt;code&gt;latitude&lt;/code&gt; , путем проверки &lt;code&gt;(value === null) !== (this.longitude === null)&lt;/code&gt; ), но модель - широкий подход к валидации чище.</target>
        </trans-unit>
        <trans-unit id="666e6b745c699158426c5ad099759c71dae3993c" translate="yes" xml:space="preserve">
          <source>Supply your own ON condition for the join.</source>
          <target state="translated">Поставьте свои собственные условия для соединения.</target>
        </trans-unit>
        <trans-unit id="144046b1bd7badefc4d65fecc8afd75a78d5b865" translate="yes" xml:space="preserve">
          <source>Support for Node 10 and up</source>
          <target state="translated">Поддержка для узла 10 и выше</target>
        </trans-unit>
        <trans-unit id="cd906bb957f4dba88a7d677004f6055dd11d4afc" translate="yes" xml:space="preserve">
          <source>Suppose our &lt;code&gt;Player&lt;/code&gt; model has information about its team as &lt;code&gt;teamId&lt;/code&gt; column. Information about each Team's &lt;code&gt;Coach&lt;/code&gt; is stored in the &lt;code&gt;Team&lt;/code&gt; model as &lt;code&gt;coachId&lt;/code&gt; column. These both scenarios requires different kind of 1:1 relation because foreign key relation is present on different models each time.</source>
          <target state="translated">Предположим, наша модель &lt;code&gt;Player&lt;/code&gt; содержит информацию о своей команде в &lt;code&gt;teamId&lt;/code&gt; столбца teamId . Информация о &lt;code&gt;Coach&lt;/code&gt; каждой команды хранится в модели &lt;code&gt;Team&lt;/code&gt; в столбце &lt;code&gt;coachId&lt;/code&gt; . Оба этих сценария требуют разного рода отношения 1: 1, потому что отношение внешнего ключа каждый раз присутствует в разных моделях.</target>
        </trans-unit>
        <trans-unit id="ef80b7fed8338d93416cd79ad36e89fa6b35d973" translate="yes" xml:space="preserve">
          <source>Suppose we have two tables to link &lt;strong&gt;Player&lt;/strong&gt; and &lt;strong&gt;Team&lt;/strong&gt;. Lets define their models.</source>
          <target state="translated">Предположим, у нас есть две таблицы, чтобы связать &lt;strong&gt;игрока&lt;/strong&gt; и &lt;strong&gt;команду&lt;/strong&gt; . Определим их модели.</target>
        </trans-unit>
        <trans-unit id="7d1b98193b4347c9a63a9bbb4d39a13215749194" translate="yes" xml:space="preserve">
          <source>Suppose we want to insert some data into a few tables by default. If we follow up on previous example we can consider creating a demo user for &lt;code&gt;User&lt;/code&gt; table.</source>
          <target state="translated">Предположим, мы хотим по умолчанию вставить некоторые данные в несколько таблиц. Если мы продолжим предыдущий пример, мы можем рассмотреть возможность создания демонстрационного пользователя для таблицы &lt;code&gt;User&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="63f13894b7179290120a467d9f756197261eb48d" translate="yes" xml:space="preserve">
          <source>Suppose you want to find all users who have a profile attached:</source>
          <target state="translated">Предположим,вы хотите найти всех пользователей,у которых есть прикрепленный профиль:</target>
        </trans-unit>
        <trans-unit id="3f84ef531f9db996694ad09a8fdddbca1440577e" translate="yes" xml:space="preserve">
          <source>Symbol</source>
          <target state="translated">Symbol</target>
        </trans-unit>
        <trans-unit id="1e4961c4fd4c50f3974bcbc462ffabf9d11b7e41" translate="yes" xml:space="preserve">
          <source>Sync all defined models to the DB.</source>
          <target state="translated">Синхронизировать все определенные модели с БД.</target>
        </trans-unit>
        <trans-unit id="d295b7c124f450a0ae7db9e0dd4371d5a908e16c" translate="yes" xml:space="preserve">
          <source>Sync this Model to the DB, that is create the table.</source>
          <target state="translated">Синхронизируйте эту модель с БД,то есть создайте таблицу.</target>
        </trans-unit>
        <trans-unit id="76c4c6352a6773e5662d14b2abec0b531dc49e8c" translate="yes" xml:space="preserve">
          <source>Synchronization in production</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49b4cf438c26e221dcf5c35f1bb5388e58acc6de" translate="yes" xml:space="preserve">
          <source>Synchronizing all models at once</source>
          <target state="translated">Синхронизация всех моделей одновременно</target>
        </trans-unit>
        <trans-unit id="7754c8e786d3eca650ff1b582693fa0714a38764" translate="yes" xml:space="preserve">
          <source>Synchronizing the model with the database</source>
          <target state="translated">Синхронизация модели с БД</target>
        </trans-unit>
        <trans-unit id="e834f99dcb78400f4c128fb50e4f83eea4bd65b6" translate="yes" xml:space="preserve">
          <source>TABLOCK</source>
          <target state="translated">TABLOCK</target>
        </trans-unit>
        <trans-unit id="dcb435e28d2012463d8e6def6d52b91b7d81a93f" translate="yes" xml:space="preserve">
          <source>TABLOCKX</source>
          <target state="translated">TABLOCKX</target>
        </trans-unit>
        <trans-unit id="7d4e42ef9d04a046b5679f952cb0b6b5c498c73c" translate="yes" xml:space="preserve">
          <source>TEXT</source>
          <target state="translated">TEXT</target>
        </trans-unit>
        <trans-unit id="64269f9bd268bf28815bb69e82601cd7e806a37b" translate="yes" xml:space="preserve">
          <source>TIME</source>
          <target state="translated">TIME</target>
        </trans-unit>
        <trans-unit id="4fe5a3682f8029783789ec9b3abba10f67f03ffa" translate="yes" xml:space="preserve">
          <source>TINYINT</source>
          <target state="translated">TINYINT</target>
        </trans-unit>
        <trans-unit id="521cc63843abd0f34c261968e1d32a7dc9f6c198" translate="yes" xml:space="preserve">
          <source>Table Hint</source>
          <target state="translated">Настольная подсказка</target>
        </trans-unit>
        <trans-unit id="f279a6c6b0c0cf0df9bc188612d0bba963f461b9" translate="yes" xml:space="preserve">
          <source>Table Hints - MSSQL only</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af7e10b0526f08514cc53a4f19a5efcd66befeb6" translate="yes" xml:space="preserve">
          <source>Table comments - MySQL/MariaDB/PostgreSQL only</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75afea4bf7289ee18cb79df1d3bc5160644bb8b4" translate="yes" xml:space="preserve">
          <source>Table hints override the default behavior of MSSQL query optimizer by specifing certain options. They only affect the table or view referenced in that clause.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22ba75a57550188d799bd1e025b7db1fda0a2d3e" translate="yes" xml:space="preserve">
          <source>Table hints override the default behavior of mssql query optimizer by specifing certain options. They only affect the table or view referenced in that clause.</source>
          <target state="translated">Таблица переопределяет поведение по умолчанию оптимизатора запросов mssql,задавая определенные опции.Они влияют только на таблицу или представление,на которое ссылается в этом пункте.</target>
        </trans-unit>
        <trans-unit id="8e6863d69ff9e1e08b172913a67e6ba8d7a9d1a7" translate="yes" xml:space="preserve">
          <source>Table name inference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cb75dbc5813b569590e4ea143ce823027afbc1b" translate="yes" xml:space="preserve">
          <source>Table name to add index on, can be a object with schema</source>
          <target state="translated">Имя таблицы для добавления индекса,может быть объектом со схемой</target>
        </trans-unit>
        <trans-unit id="3fab7b43bc054cab875b79b2a0d5940d09c13933" translate="yes" xml:space="preserve">
          <source>Table name to change from</source>
          <target state="translated">Название таблицы для изменения от</target>
        </trans-unit>
        <trans-unit id="2cdfba3e5bff8000906d5f3be065833e214bd7be" translate="yes" xml:space="preserve">
          <source>Table name to drop</source>
          <target state="translated">Имя таблицы,которую нужно опустить</target>
        </trans-unit>
        <trans-unit id="a0d7075f146f8e02ece5c3b5bc8db30590e1c72b" translate="yes" xml:space="preserve">
          <source>Table name to drop constraint from</source>
          <target state="translated">Имя таблицы,чтобы снять ограничение с</target>
        </trans-unit>
        <trans-unit id="45bc0fc9921d956e87501c72f3c69e96310abf0b" translate="yes" xml:space="preserve">
          <source>Table name to drop index from</source>
          <target state="translated">Имя таблицы для выпадения индекса из</target>
        </trans-unit>
        <trans-unit id="b0e1e1e10f09068f7cae45a1dace79b0d9a82486" translate="yes" xml:space="preserve">
          <source>Table name to insert record to</source>
          <target state="translated">Имя таблицы для вставки записи в</target>
        </trans-unit>
        <trans-unit id="f255cd8680539b5bbf5bb6cf0e61d456d5c89103" translate="yes" xml:space="preserve">
          <source>Table name to update</source>
          <target state="translated">Название таблицы для обновления</target>
        </trans-unit>
        <trans-unit id="dd22d9e56c5cb140764fa721de7a45f25fe6d977" translate="yes" xml:space="preserve">
          <source>Table name where you want to add a constraint</source>
          <target state="translated">Имя таблицы,в которую вы хотите добавить ограничение</target>
        </trans-unit>
        <trans-unit id="25ca34d81d29fd398bf9c4ba66b56be70861a874" translate="yes" xml:space="preserve">
          <source>Table name whose column to rename</source>
          <target state="translated">Имя таблицы,столбец которой следует переименовать</target>
        </trans-unit>
        <trans-unit id="dbed374b26ccca4bdab96f82c9f48630ce076773" translate="yes" xml:space="preserve">
          <source>Table name, for backward compatibility</source>
          <target state="translated">Наименование таблицы,для обратной совместимости</target>
        </trans-unit>
        <trans-unit id="d210072aac6aa90c45934daef475a90e10b81e26" translate="yes" xml:space="preserve">
          <source>Table to add column to</source>
          <target state="translated">Таблица для добавления столбца к</target>
        </trans-unit>
        <trans-unit id="8ebb87b4f0d6b0bd82f500cb89d5d63fe2b3bb66" translate="yes" xml:space="preserve">
          <source>Table to remove column from</source>
          <target state="translated">Таблица для удаления столбца из</target>
        </trans-unit>
        <trans-unit id="5bf88ac554232d98885b8cc704c53a61fd9b173e" translate="yes" xml:space="preserve">
          <source>Table whose enum to list</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c30f8dfdb7e7408d778802c6ee43b43deb695358" translate="yes" xml:space="preserve">
          <source>TableHints</source>
          <target state="translated">TableHints</target>
        </trans-unit>
        <trans-unit id="193daf137ed8b89de36d47c3df5fd8f66c0e1d14" translate="yes" xml:space="preserve">
          <source>Tables</source>
          <target state="translated">Tables</target>
        </trans-unit>
        <trans-unit id="79ee69ddcfd672d3bc85bea16a439cf5bd7deffd" translate="yes" xml:space="preserve">
          <source>Take a look at the &lt;a href=&quot;sub-queries&quot;&gt;guide on sub-queries&lt;/a&gt; for an example of how to use a sub-query to assist a more complex ordering.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dc45ca0cbf9b74394403cbf72151fe3cc9e49fe" translate="yes" xml:space="preserve">
          <source>Taking advantage of Models being classes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e396b94e25d4b0c0ef34b12c624dbfa7272476fb" translate="yes" xml:space="preserve">
          <source>Target column name</source>
          <target state="translated">Имя столбца цели</target>
        </trans-unit>
        <trans-unit id="975ce3d3070b51cecd838e1da8d21e0ef5ce9336" translate="yes" xml:space="preserve">
          <source>Target keys</source>
          <target state="translated">Целевые клавиши</target>
        </trans-unit>
        <trans-unit id="5c068aa69f6d4ef42a8389abe9cd810232caae05" translate="yes" xml:space="preserve">
          <source>Target model</source>
          <target state="translated">Целевая модель</target>
        </trans-unit>
        <trans-unit id="2f66e0e68c2c913dd1bf905e22855cbb450958e6" translate="yes" xml:space="preserve">
          <source>Target table name</source>
          <target state="translated">Имя целевой таблицы</target>
        </trans-unit>
        <trans-unit id="9571ecbd5c615670005c040c4a66bcf7d2842e05" translate="yes" xml:space="preserve">
          <source>Terminology convention</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0672d7ed7ed6afdfd270b53235aa08ccc0eed98a" translate="yes" xml:space="preserve">
          <source>Test the connection by trying to authenticate.</source>
          <target state="translated">Проверьте соединение,пытаясь аутентифицироваться.</target>
        </trans-unit>
        <trans-unit id="20b77d389f5e8c5e987282b922a807df1f9260e2" translate="yes" xml:space="preserve">
          <source>Test the connection by trying to authenticate. It runs &lt;code&gt;SELECT 1+1 AS result&lt;/code&gt; query.</source>
          <target state="translated">Проверьте соединение, попытавшись пройти аутентификацию. Он запускает запрос &lt;code&gt;SELECT 1+1 AS result&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e0143c072d5ac7b543f7a97b25b22cf87a465c03" translate="yes" xml:space="preserve">
          <source>Testing the connection</source>
          <target state="translated">Тестирование соединения</target>
        </trans-unit>
        <trans-unit id="b27367401838295e96f5e65abb3dce8cc8c20dc3" translate="yes" xml:space="preserve">
          <source>Thankfully, the Sequelize CLI can read from both &lt;code&gt;.json&lt;/code&gt; and &lt;code&gt;.js&lt;/code&gt; files. This can be setup with &lt;code&gt;.sequelizerc&lt;/code&gt; file. You just have to provide the path to your &lt;code&gt;.js&lt;/code&gt; file as the &lt;code&gt;config&lt;/code&gt; option of your exported object:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="568f2e98eee27a557d9647a1ac065019cb0ca54f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../class/lib/model.js~model#static-method-create&quot;&gt;&lt;code&gt;Model.create()&lt;/code&gt;&lt;/a&gt; method is a shorthand for building an unsaved instance with &lt;a href=&quot;../class/lib/model.js~model#static-method-build&quot;&gt;&lt;code&gt;Model.build()&lt;/code&gt;&lt;/a&gt; and saving the instance with &lt;a href=&quot;../class/lib/model.js~model#instance-method-save&quot;&gt;&lt;code&gt;instance.save()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72eaf96e82866444ce5e4d262b9b4f5480574f70" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;$nested.column$&lt;/code&gt; syntax also works for columns that are nested several levels deep, such as &lt;code&gt;$some.super.deeply.nested.column$&lt;/code&gt;. Therefore, you can use this to make complex filters on deeply nested columns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c363795bd7fa8fcfababae3f9976a3e94d298a31" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.sequelizerc&lt;/code&gt; File</source>
          <target state="translated">&lt;code&gt;.sequelizerc&lt;/code&gt; файла</target>
        </trans-unit>
        <trans-unit id="b95b79ea2ee195c20660d13062d0525afe3cbaa1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.sequelizerc&lt;/code&gt; file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6556e00b0fd6ff35375c48dbbfce2618382539b9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;A.belongsTo(B)&lt;/code&gt; association means that a One-To-One relationship exists between &lt;code&gt;A&lt;/code&gt; and &lt;code&gt;B&lt;/code&gt;, with the foreign key being defined in the source model (&lt;code&gt;A&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7631f9eeb6d6f5477598617b0a91cd2eeb841aa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;A.belongsToMany(B, { through: 'C' })&lt;/code&gt; association means that a Many-To-Many relationship exists between &lt;code&gt;A&lt;/code&gt; and &lt;code&gt;B&lt;/code&gt;, using table &lt;code&gt;C&lt;/code&gt; as &lt;a href=&quot;https://en.wikipedia.org/wiki/Associative_entity&quot;&gt;junction table&lt;/a&gt;, which will have the foreign keys (&lt;code&gt;aId&lt;/code&gt; and &lt;code&gt;bId&lt;/code&gt;, for example). Sequelize will automatically create this model &lt;code&gt;C&lt;/code&gt; (unless it already exists) and define the appropriate foreign keys on it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86f12df5772aa12d8d84c39c1c7ff68527b908ab" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;A.hasMany(B)&lt;/code&gt; association means that a One-To-Many relationship exists between &lt;code&gt;A&lt;/code&gt; and &lt;code&gt;B&lt;/code&gt;, with the foreign key being defined in the target model (&lt;code&gt;B&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c6c69626c5c01d5dcbdf9efaf04d85073dffee7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;A.hasOne(B)&lt;/code&gt; association means that a One-To-One relationship exists between &lt;code&gt;A&lt;/code&gt; and &lt;code&gt;B&lt;/code&gt;, with the foreign key being defined in the target model (&lt;code&gt;B&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c7b6e4b5e4fc620fd15f03dd52a525e06452156" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BelongsTo&lt;/code&gt; association</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47a7f8a40baa6994a0957e349fccd2b9bd19f7f4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BelongsToMany&lt;/code&gt; association</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52fdd6c7b19c53e9c7650c11a173d0518be4c70c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CHAR&lt;/code&gt; and &lt;code&gt;STRING&lt;/code&gt; types expose the &lt;code&gt;BINARY&lt;/code&gt; property</source>
          <target state="translated">В &lt;code&gt;CHAR&lt;/code&gt; и &lt;code&gt;STRING&lt;/code&gt; типы разоблачить &lt;code&gt;BINARY&lt;/code&gt; недвижимость</target>
        </trans-unit>
        <trans-unit id="7600cec6ae24a13ffe264e716d87838eb471f5e2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DataTypes.JSON&lt;/code&gt; data type is only supported for SQLite, MySQL, MariaDB and PostgreSQL. However, there is a minimum support for MSSQL (see below).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88e940a613dc84bba3eb506147017fe959e3612c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;HasMany&lt;/code&gt; association</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a4a9eea63dca47e14277fdb92b510c65b7c6636" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;HasOne&lt;/code&gt; association</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e62599cbbbea68972ec8f602f844dd6a54bb81a6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VIRTUAL&lt;/code&gt; field does not cause a column in the table to exist. In other words, the model above will not have a &lt;code&gt;fullName&lt;/code&gt; column. However, it will appear to have it!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0058711367bd371361206d0de0cc11e1c93c7223" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;afterCommit&lt;/code&gt; hook</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd49fb8ea0e2805baf32374d10805d1aa41d3236" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;afterCommit&lt;/code&gt; hook does not modify the return value of the transaction (unlike most hooks)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9da626713c9dd20acca787fe153465ec9966438" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;afterCommit&lt;/code&gt; hook is not raised if the transaction is rolled back;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="570b17cc26f9313370a82adc76ad5a4521b735d6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;allowNull&lt;/code&gt; check is the only check in Sequelize that is a mix of a &lt;em&gt;validation&lt;/em&gt; and a &lt;em&gt;constraint&lt;/em&gt; in the senses described at the beginning of this tutorial. This is because:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f85312d4d5e449e617856aefd639e43309c7fb08" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;beforeDestroy&lt;/code&gt; and &lt;code&gt;afterDestroy&lt;/code&gt; hooks will only be called on associations that have &lt;code&gt;onDelete: 'CASCADE'&lt;/code&gt; and &lt;code&gt;hooks: true&lt;/code&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfbf8f71ca457c562abf5b202d58f98aa0a1228b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;constraints: false&lt;/code&gt; option disables references constraints, as the &lt;code&gt;taggableId&lt;/code&gt; column references several tables, we cannot add a &lt;code&gt;REFERENCES&lt;/code&gt; constraint to it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fe733a598aa7e0232df3a9acff9ba20a81570c4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;count&lt;/code&gt; method simply counts the occurrences of elements in the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24c9e16083b478a394668e549bac5173531569ff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;findAll&lt;/code&gt; method is already known from the previous tutorial. It generates a standard &lt;code&gt;SELECT&lt;/code&gt; query which will retrieve all entries from the table (unless restricted by something like a &lt;code&gt;where&lt;/code&gt; clause, for example).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8aebec1ae1fefc4f0cd12ce41f442ec317dbbfde" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;findAndCountAll&lt;/code&gt; method is a convenience method that combines &lt;code&gt;findAll&lt;/code&gt; and &lt;code&gt;count&lt;/code&gt;. This is useful when dealing with queries related to pagination where you want to retrieve data with a &lt;code&gt;limit&lt;/code&gt; and &lt;code&gt;offset&lt;/code&gt; but also need to know the total number of records that match the query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e0d688814852fa86a5172074f270b37c26dd610" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;findAndCountAll&lt;/code&gt; method returns an object with two properties:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67d8eb751d14b403a6227075478f695df10ef983" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;findAndCountAll&lt;/code&gt; utility function supports includes. Only the includes that are marked as &lt;code&gt;required&lt;/code&gt; will be considered in &lt;code&gt;count&lt;/code&gt;. For example, if you want to find and count all users who have a profile:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dea4b54d906bb065ca0b8c270ee30153593a1104" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;findByPk&lt;/code&gt; method obtains only a single entry from the table, using the provided primary key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f489e6b449bef63c9416ca41952228dec1d7850e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;findOne&lt;/code&gt; method obtains the first entry it finds (that fulfills the optional query options, if provided).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96604eb0bb158befed8a640da0e7f3054be98f32" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;fullName&lt;/code&gt; getter, is an example of how you can define pseudo properties on your models - attributes which are not actually part of your database schema. In fact, pseudo properties can be defined in two ways: using model getters, or by using a column with the &lt;a href=&quot;https://sequelize.org/variable/index.html#static-variable-DataTypes&quot;&gt;&lt;code&gt;VIRTUAL&lt;/code&gt; datatype&lt;/a&gt;. Virtual datatypes can have validations, while getters for virtual attributes cannot.</source>
          <target state="translated">&lt;code&gt;fullName&lt;/code&gt; добытчик, является примером того , как можно определить свойства псевдо ваших моделей - атрибуты , которые не являются фактически частью схемы базы данных. Фактически, псевдосвойства можно определить двумя способами: с помощью геттеров модели или с помощью столбца с &lt;a href=&quot;https://sequelize.org/variable/index.html#static-variable-DataTypes&quot;&gt; &lt;code&gt;VIRTUAL&lt;/code&gt; данных VIRTUAL&lt;/a&gt; . Виртуальные типы данных могут иметь проверки, а геттеры для виртуальных атрибутов - нет.</target>
        </trans-unit>
        <trans-unit id="94772cb39d84248b9b8101ed1adddd961b6e56eb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getCommentable&lt;/code&gt; instance method on &lt;code&gt;Comment&lt;/code&gt; provides an abstraction for lazy loading the associated commentable - working whether the comment belongs to an Image or a Video.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b44f8380a2468cdb72b9deb6e94e4793fc900145" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getItem&lt;/code&gt; utility function on &lt;code&gt;Comment&lt;/code&gt; completes the picture - it simply converts the &lt;code&gt;commentable&lt;/code&gt; string into a call to either &lt;code&gt;getImage&lt;/code&gt; or &lt;code&gt;getPost&lt;/code&gt;, providing an abstraction over whether a comment belongs to a post or an image. You can pass a normal options object as a parameter to &lt;code&gt;getItem(options)&lt;/code&gt; to specify any where conditions or includes.</source>
          <target state="translated">&lt;code&gt;getItem&lt;/code&gt; функция полезности на &lt;code&gt;Comment&lt;/code&gt; завершает картину - он просто преобразует &lt;code&gt;commentable&lt;/code&gt; строки в вызов либо &lt;code&gt;getImage&lt;/code&gt; или &lt;code&gt;getPost&lt;/code&gt; , обеспечивая абстракцию по поводу того , принадлежит комментарий к сообщению или изображению. Вы можете передать обычный объект параметров в качестве параметра в &lt;code&gt;getItem(options)&lt;/code&gt; чтобы указать любые условия или включения.</target>
        </trans-unit>
        <trans-unit id="c5af38db2b9d87be8fca742043ab85cd54ed8644" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;import&lt;/code&gt; method can also accept a callback as an argument.</source>
          <target state="translated">Метод &lt;code&gt;import&lt;/code&gt; также может принимать обратный вызов в качестве аргумента.</target>
        </trans-unit>
        <trans-unit id="b1b100c6a9dfa09d651a4fc36b203eb376021f80" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;include&lt;/code&gt; option can receive an array in order to fetch multiple associated models at once:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="284da7b0f2efef628e5e38ad92056d0d65acb654" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;indexHints&lt;/code&gt; option can be used to define index hints. The hint type must be a value from &lt;code&gt;IndexHints&lt;/code&gt; and the values should reference existing indexes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c66c416ba19dd8a604d0fa8c48849d0b7770c55" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;isolationLevel&lt;/code&gt; can either be set globally when initializing the Sequelize instance or locally for every transaction:</source>
          <target state="translated">Уровень &lt;code&gt;isolationLevel&lt;/code&gt; может быть установлен глобально при инициализации экземпляра Sequelize или локально для каждой транзакции:</target>
        </trans-unit>
        <trans-unit id="34c936a4831eb1b0fc997732d2c777c7982b2aff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;limit&lt;/code&gt; and &lt;code&gt;offset&lt;/code&gt; options allow you to work with limiting / pagination:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aded916b2d52b83cbd3a306bbcaac58553342812" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; argument of hook method would be the second argument provided to the corresponding method or its cloned and extended version.</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; аргумент метода крюков будет второй аргумент при условии , к соответствующему способу или его клонированного и расширенной версии.</target>
        </trans-unit>
        <trans-unit id="dcfed95825cb653037f8b09d52d377599234b0d8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;order&lt;/code&gt; option takes an array of items to order the query by or a sequelize method. These &lt;em&gt;items&lt;/em&gt; are themselves arrays in the form &lt;code&gt;[column, direction]&lt;/code&gt;. The column will be escaped correctly and the direction will be checked in a whitelist of valid directions (such as &lt;code&gt;ASC&lt;/code&gt;, &lt;code&gt;DESC&lt;/code&gt;, &lt;code&gt;NULLS FIRST&lt;/code&gt;, etc).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f1c72bd74a6d53ac21270c47506975ff4de74d2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;save&lt;/code&gt; method is optimized internally to only update fields that really changed. This means that if you don't change anything and call &lt;code&gt;save&lt;/code&gt;, Sequelize will know that the save is superfluous and do nothing, i.e., no query will be generated (it will still return a Promise, but it will resolve immediately).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0af42d8bd5b7cfd2edde2caa3dfa0fa35d2d1ea9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sequelize.transaction&lt;/code&gt; method accepts options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee0aa7fe5449d3d4a774b664351e181a1ecfadc9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;tableHint&lt;/code&gt; option can be used to define a table hint. The hint must be a value from &lt;code&gt;TableHints&lt;/code&gt; and should only be used when absolutely necessary. Only a single table hint is currently supported per query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c3edf2dae93cebe8c0dd348f57f9ba4d5fbc9fe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;transaction&lt;/code&gt; option goes with most other options, which are usually the first argument of a method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e08cedd8bd068ee0e858ac36cf905e6a6544cca" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;transaction&lt;/code&gt; option goes with most other options, which are usually the first argument of a method. For methods that take values, like &lt;code&gt;.create&lt;/code&gt;, &lt;code&gt;.update()&lt;/code&gt;, etc. &lt;code&gt;transaction&lt;/code&gt; should be passed to the option in the second argument. If unsure, refer to the API documentation for the method you are using to be sure of the signature.</source>
          <target state="translated">Опция &lt;code&gt;transaction&lt;/code&gt; сочетается с большинством других опций, которые обычно являются первым аргументом метода. Для методов, принимающих значения, таких как &lt;code&gt;.create&lt;/code&gt; , &lt;code&gt;.update()&lt;/code&gt; и т. Д., &lt;code&gt;transaction&lt;/code&gt; должна быть передана в параметр во втором аргументе. Если вы не уверены, обратитесь к документации API для метода, который вы используете, чтобы быть уверенным в подписи.</target>
        </trans-unit>
        <trans-unit id="022e1cf7c93a2fd52499617385297a647f632df8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;underscored&lt;/code&gt; option</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a9143d79be7a63d84ab8972f100607e8244a7c7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;where&lt;/code&gt; option is considered for finding the entry, and the &lt;code&gt;defaults&lt;/code&gt; option is used to define what must be created in case nothing was found. If the &lt;code&gt;defaults&lt;/code&gt; do not contain values for every column, Sequelize will take the values given to &lt;code&gt;where&lt;/code&gt; (if present).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e51b4fc5e99e38c0e0729aea28789798dee39b04" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;where&lt;/code&gt; option is used to filter the query. There are lots of operators to use for the &lt;code&gt;where&lt;/code&gt; clause, available as Symbols from &lt;a href=&quot;../variable/index#static-variable-Op&quot;&gt;&lt;code&gt;Op&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3590f222c1774921a947a6d2595c4fef72b91320" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;Image -&amp;gt; Comment&lt;/em&gt; association defined an association scope: &lt;code&gt;{ commentableType: 'image' }&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53ab69825a495d508248d17cc0a7172bce810d0c" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;Image -&amp;gt; Tag&lt;/em&gt; association defined an association scope: &lt;code&gt;{ taggableType: 'image' }&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="729896b8914d0fd957193b72821176d0e5c2a893" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;Video -&amp;gt; Comment&lt;/em&gt; association defined an association scope: &lt;code&gt;{ commentableType: 'video' }&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="317cc280f32843f2fa8681d1b08c1caf792501fa" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;Video -&amp;gt; Tag&lt;/em&gt; association defined an association scope: &lt;code&gt;{ taggableType: 'video' }&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b9b49b97c6dcd275458969fdd514038c0782971" translate="yes" xml:space="preserve">
          <source>The BLOB datatype allows you to insert data both as strings and as buffers. When you do a find or findAll on a model which has a BLOB column, that data will always be returned as a buffer.</source>
          <target state="translated">Тип BLOB-данных позволяет вставлять данные как в виде строк,так и в виде буферов.Когда вы делаете поиск или findAll на модели,имеющей BLOB-столбец,эти данные всегда будут возвращаться в виде буфера.</target>
        </trans-unit>
        <trans-unit id="0d6ca5d74c8816ae0ded15e2a7a5beeecbf88579" translate="yes" xml:space="preserve">
          <source>The CLI</source>
          <target state="translated">ИЗО</target>
        </trans-unit>
        <trans-unit id="7543057877a60db6d5a05a1ccb4e14c360eef266" translate="yes" xml:space="preserve">
          <source>The DAO instance that caused the validation error</source>
          <target state="translated">Экземпляр DAO,который вызвал ошибку проверки</target>
        </trans-unit>
        <trans-unit id="6a6b222c2e8432df16ac7772dc83419f644e917d" translate="yes" xml:space="preserve">
          <source>The ENUM is a data type that accepts only a few values, specified as a list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c2f82b73e030655c59432ce481b35adff70c042" translate="yes" xml:space="preserve">
          <source>The INET type holds an IPv4 or IPv6 host address, and optionally its subnet. Takes 7 or 19 bytes</source>
          <target state="translated">Тип INET содержит хост-адрес IPv4 или IPv6 и,опционально,подсеть.Потребуется 7 или 19 байт</target>
        </trans-unit>
        <trans-unit id="35c885e3e1208b7964c450f516be8caa8371b964" translate="yes" xml:space="preserve">
          <source>The JSON data type in PostgreSQL stores the value as plain text, as opposed to binary representation. If you simply want to store and retrieve a JSON representation, using JSON will take less disk space and less time to build from its input representation. However, if you want to do any operations on the JSON value, you should prefer the JSONB data type described below.</source>
          <target state="translated">Тип данных JSON в PostgreSQL хранит значение в виде простого текста,в отличие от двоичного представления.Если вы просто хотите хранить и получать JSON представление,то использование JSON займет меньше дискового пространства и меньше времени на сборку из его входного представления.Однако,если Вы хотите выполнять какие-либо операции со значением JSON,Вы должны предпочесть тип данных JSONB,описанный ниже.</target>
        </trans-unit>
        <trans-unit id="4f1ca89726cfb75c61b955405275bfa81fa8f0e1" translate="yes" xml:space="preserve">
          <source>The JSON data type is supported by the PostgreSQL, SQLite, MySQL and MariaDB dialects only.</source>
          <target state="translated">Тип данных JSON поддерживается только диалектами PostgreSQL,SQLite,MySQL и MariaDB.</target>
        </trans-unit>
        <trans-unit id="b4c18d45f4c7b31dc5aabb26fb9a9e22f31ce7cc" translate="yes" xml:space="preserve">
          <source>The MACADDR type stores MAC addresses. Takes 6 bytes</source>
          <target state="translated">Тип MACADDR хранит MAC-адреса.Занимает 6 байт</target>
        </trans-unit>
        <trans-unit id="6e037bc95bcf7d5b574c2d17b15f920746d615f7" translate="yes" xml:space="preserve">
          <source>The PostgreSQL &lt;code&gt;client_min_messages&lt;/code&gt; session parameter. Set to &lt;code&gt;false&lt;/code&gt; to not override the database's default.</source>
          <target state="translated">&lt;code&gt;client_min_messages&lt;/code&gt; сеанса PostgreSQL client_min_messages . Установите значение &lt;code&gt;false&lt;/code&gt; , чтобы не отменять значение по умолчанию для базы данных.</target>
        </trans-unit>
        <trans-unit id="92dcd073ff1557550a8981af1e6e839e5e4fae74" translate="yes" xml:space="preserve">
          <source>The PostgreSQL &lt;code&gt;standard_conforming_strings&lt;/code&gt; session parameter. Set to &lt;code&gt;false&lt;/code&gt; to not set the option. WARNING: Setting this to false may expose vulnerabilities and is not recommended!</source>
          <target state="translated">Параметр сеанса &lt;code&gt;standard_conforming_strings&lt;/code&gt; PostgreSQL . Установите значение &lt;code&gt;false&lt;/code&gt; , чтобы не устанавливать параметр. ВНИМАНИЕ: установка значения false может выявить уязвимости и не рекомендуется!</target>
        </trans-unit>
        <trans-unit id="ea2917bca3214c2f94009ee7f7e0ef5cef7ed728" translate="yes" xml:space="preserve">
          <source>The SQL that triggered the error</source>
          <target state="translated">SQL,который вызвал ошибку</target>
        </trans-unit>
        <trans-unit id="dd06cbc4597dae28da3671cb9bf462c1afbf0a9b" translate="yes" xml:space="preserve">
          <source>The Sequelize constructor accepts a lot of options. They are documented in the &lt;a href=&quot;../class/lib/sequelize.js~sequelize#instance-constructor-constructor&quot;&gt;API Reference&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdfcd4dec9f023d328d1c29bf2ce667d576056f9" translate="yes" xml:space="preserve">
          <source>The Sequelize constructor takes a &lt;code&gt;define&lt;/code&gt; option which will change the default options for all defined models.</source>
          <target state="translated">Конструктор Sequelize принимает параметр &lt;code&gt;define&lt;/code&gt; который изменяет параметры по умолчанию для всех определенных моделей.</target>
        </trans-unit>
        <trans-unit id="f021a2b45ae6896b6bc054e8bd5ccd034b732703" translate="yes" xml:space="preserve">
          <source>The Sequelize constructor takes a whole slew of options that are documented in the &lt;a href=&quot;../class/lib/sequelize.js~sequelize#instance-constructor-constructor&quot;&gt;API Reference for the Sequelize constructor&lt;/a&gt;.</source>
          <target state="translated">Конструктор Sequelize принимает множество параметров, которые описаны в &lt;a href=&quot;../class/lib/sequelize.js~sequelize#instance-constructor-constructor&quot;&gt;Справочнике по API для конструктора Sequelize&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3cd19464fb2f97dfdb6295760a7d32b016b057fe" translate="yes" xml:space="preserve">
          <source>The Sequelize models are &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes&quot;&gt;ES6 classes&lt;/a&gt;. You can very easily add custom instance or class level methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de88c62cdccb50aa87d6fc7b0a9b3944d7a15030" translate="yes" xml:space="preserve">
          <source>The above associations achieve precisely what we want. Here is a full runnable example of this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3f32fc062713c89992127673f0ff266e4a6d880" translate="yes" xml:space="preserve">
          <source>The above code tells Sequelize to expect a table named &lt;code&gt;users&lt;/code&gt; in the database with the fields &lt;code&gt;firstName&lt;/code&gt; and &lt;code&gt;lastName&lt;/code&gt;. The table name is automatically pluralized by default (a library called &lt;a href=&quot;https://www.npmjs.com/package/inflection&quot;&gt;inflection&lt;/a&gt; is used under the hood to do this). This behavior can be stopped for a specific model by using the &lt;code&gt;freezeTableName: true&lt;/code&gt; option, or for all models by using the &lt;code&gt;define&lt;/code&gt; option from the &lt;a href=&quot;../class/lib/sequelize.js~sequelize#instance-constructor-constructor&quot;&gt;Sequelize constructor&lt;/a&gt;.</source>
          <target state="translated">Приведенный выше код сообщает Sequelize ожидать в базе данных таблицу с именем &lt;code&gt;users&lt;/code&gt; с полями &lt;code&gt;firstName&lt;/code&gt; и &lt;code&gt;lastName&lt;/code&gt; . Имя таблицы по умолчанию автоматически ставится во множественное число (для этого под капотом используется библиотека под названием &lt;a href=&quot;https://www.npmjs.com/package/inflection&quot;&gt;inflection&lt;/a&gt; ). Это поведение можно остановить для конкретной модели с помощью параметра &lt;code&gt;freezeTableName: true&lt;/code&gt; или для всех моделей с помощью параметра &lt;code&gt;define&lt;/code&gt; из &lt;a href=&quot;../class/lib/sequelize.js~sequelize#instance-constructor-constructor&quot;&gt;конструктора Sequelize&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="66144c7c85f62b61038b08c12717a6887b8a5bec" translate="yes" xml:space="preserve">
          <source>The above examples used the static &lt;code&gt;destroy&lt;/code&gt; method as an example (&lt;code&gt;Post.destroy&lt;/code&gt;), but everything works in the same way with the instance method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="491d61a801e9bf43e89739bcae20914a7039e71c" translate="yes" xml:space="preserve">
          <source>The above generates the following SQL:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5241c39960fb4aa8c9233bc262e996b8edca18b1" translate="yes" xml:space="preserve">
          <source>The above gives the following output:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bab8dbae6d00df156ceecd25c8a08ae1103489e" translate="yes" xml:space="preserve">
          <source>The above has the exact same effect. Note that we didn't define any attributes on the &lt;code&gt;User_Profile&lt;/code&gt; model. The fact that we passed it into a &lt;code&gt;belongsToMany&lt;/code&gt; call tells sequelize to create the two attributes &lt;code&gt;userId&lt;/code&gt; and &lt;code&gt;profileId&lt;/code&gt; automatically, just like other associations also cause Sequelize to automatically add a column to one of the involved models.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="230915fec95877c10dd9565fcce02d056836b906" translate="yes" xml:space="preserve">
          <source>The above observations show that we need a Many-to-Many relationship between Game and Team. Let's use the Super Many-to-Many relationship as explained earlier in this guide:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20cbef37312bde5355305810f16034d671ac36e5" translate="yes" xml:space="preserve">
          <source>The above showed the basics on queries for fetching data involving associations. For creating, updating and deleting, you can either:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07a60e1ad509b8e133343449d0ef91fe1e862254" translate="yes" xml:space="preserve">
          <source>The above will generate a MySQL query that looks like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9c17907c122357b86d0f15c4ae26538448ac3e0" translate="yes" xml:space="preserve">
          <source>The above will generate:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5c65a58203ca5029d990dcb3b90fff4d8a0da1c" translate="yes" xml:space="preserve">
          <source>The above will still create two columns &lt;code&gt;userId&lt;/code&gt; and &lt;code&gt;profileId&lt;/code&gt;, of course, but instead of setting up a composite unique key on them, the model will use its &lt;code&gt;id&lt;/code&gt; column as primary key. Everything else will still work just fine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="066358f5002158d61207e8b61278a3bfd70f6107" translate="yes" xml:space="preserve">
          <source>The above yields the following SQL in PostgreSQL, which is equivalent to the one shown above:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c829098f3cbd87e53b1ee13196eb73a2253f975" translate="yes" xml:space="preserve">
          <source>The alias for the join model, in case you want to give it a different name than the default one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f72de844a359ac7b2754481a3ae1e21505a5382" translate="yes" xml:space="preserve">
          <source>The alias of the relation, in case the model you want to eagerly load is aliased. For &lt;code&gt;hasOne&lt;/code&gt; / &lt;code&gt;belongsTo&lt;/code&gt;, this should be the singular name, and for &lt;code&gt;hasMany&lt;/code&gt;, it should be the plural</source>
          <target state="translated">Псевдоним отношения на случай, если модель, которую вы хотите загрузить, является псевдонимом. Для &lt;code&gt;hasOne&lt;/code&gt; / &lt;code&gt;belongsTo&lt;/code&gt; это должно быть имя в единственном числе, а для &lt;code&gt;hasMany&lt;/code&gt; - во множественном числе.</target>
        </trans-unit>
        <trans-unit id="99efeea290301860aca947970c356a75d984412b" translate="yes" xml:space="preserve">
          <source>The alias of this association. If you provide a string, it should be plural, and will be singularized using node.inflection. If you want to control the singular version yourself, provide an object with &lt;code&gt;plural&lt;/code&gt; and &lt;code&gt;singular&lt;/code&gt; keys. See also the &lt;code&gt;name&lt;/code&gt; option passed to &lt;code&gt;sequelize.define&lt;/code&gt;. If you create multiple associations between the same tables, you should provide an alias to be able to distinguish between them. If you provide an alias when creating the association, you should provide the same alias when eager loading and when getting associated models. Defaults to the pluralized name of target</source>
          <target state="translated">Псевдоним этой ассоциации. Если вы указываете строку, она должна быть во множественном числе и выделяться в единственном числе с помощью node.inflection. Если вы хотите самостоятельно управлять версией в единственном числе, предоставьте объекту ключи во &lt;code&gt;plural&lt;/code&gt; и &lt;code&gt;singular&lt;/code&gt; . См. Также параметр &lt;code&gt;name&lt;/code&gt; переданный в &lt;code&gt;sequelize.define&lt;/code&gt; . Если вы создаете несколько ассоциаций между одними и теми же таблицами, вы должны указать псевдоним, чтобы иметь возможность различать их. Если вы указываете псевдоним при создании ассоциации, вы должны указать тот же псевдоним при активной загрузке и при получении связанных моделей. По умолчанию используется имя цели во множественном числе.</target>
        </trans-unit>
        <trans-unit id="b8b5837eb09b93962a6de59344369c9b2dc0dea6" translate="yes" xml:space="preserve">
          <source>The alias of this model, in singular form. See also the &lt;code&gt;name&lt;/code&gt; option passed to &lt;code&gt;sequelize.define&lt;/code&gt;. If you create multiple associations between the same tables, you should provide an alias to be able to distinguish between them. If you provide an alias when creating the association, you should provide the same alias when eager loading and when getting associated models. Defaults to the singularized name of target</source>
          <target state="translated">Псевдоним этой модели в единственном числе. См. Также параметр &lt;code&gt;name&lt;/code&gt; переданный в &lt;code&gt;sequelize.define&lt;/code&gt; . Если вы создаете несколько ассоциаций между одними и теми же таблицами, вы должны указать псевдоним, чтобы иметь возможность различать их. Если вы указываете псевдоним при создании ассоциации, вы должны указать тот же псевдоним при активной загрузке и при получении связанных моделей. По умолчанию используется имя цели в единственном числе.</target>
        </trans-unit>
        <trans-unit id="6fcf9c630d31ebc1d75eae65eb6c73992888621e" translate="yes" xml:space="preserve">
          <source>The alias of this model. If you provide a string, it should be plural, and will be singularized using node.inflection. If you want to control the singular version yourself, provide an object with &lt;code&gt;plural&lt;/code&gt; and &lt;code&gt;singular&lt;/code&gt; keys. See also the &lt;code&gt;name&lt;/code&gt; option passed to &lt;code&gt;sequelize.define&lt;/code&gt;. If you create multiple associations between the same tables, you should provide an alias to be able to distinguish between them. If you provide an alias when creating the association, you should provide the same alias when eager loading and when getting associated models. Defaults to the pluralized name of target</source>
          <target state="translated">Псевдоним этой модели. Если вы указываете строку, она должна быть во множественном числе и выделяться в единственном числе с помощью node.inflection. Если вы хотите самостоятельно управлять версией в единственном числе, предоставьте объекту ключи во &lt;code&gt;plural&lt;/code&gt; и &lt;code&gt;singular&lt;/code&gt; . См. Также параметр &lt;code&gt;name&lt;/code&gt; переданный в &lt;code&gt;sequelize.define&lt;/code&gt; . Если вы создаете несколько ассоциаций между одними и теми же таблицами, вы должны указать псевдоним, чтобы иметь возможность различать их. Если вы указываете псевдоним при создании ассоциации, вы должны указать тот же псевдоним при активной загрузке и при получении связанных моделей. По умолчанию используется имя цели во множественном числе.</target>
        </trans-unit>
        <trans-unit id="7d834cdb74aaf5b25711d3fd6901b52da5f8a978" translate="yes" xml:space="preserve">
          <source>The answer: by combining the &lt;code&gt;attributes&lt;/code&gt; option of the finder methods (such as &lt;code&gt;findAll&lt;/code&gt;) with the &lt;code&gt;sequelize.literal&lt;/code&gt; utility function, that allows you to directly insert arbitrary content into the query without any automatic escaping.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6723f18b3bbf968c425605ca9dc759577bfe8738" translate="yes" xml:space="preserve">
          <source>The array or object must contain all bound values or Sequelize will throw an exception. This applies even to cases in which the database may ignore the bound parameter.</source>
          <target state="translated">Массив или объект должен содержать все связанные значения,иначе Sequelize бросит исключение.Это относится даже к тем случаям,когда БД может игнорировать связанный параметр.</target>
        </trans-unit>
        <trans-unit id="0ad94612989aa9f318b27d4d20664339044c9613" translate="yes" xml:space="preserve">
          <source>The association you want to eagerly load. (This can be used instead of providing a model/as pair)</source>
          <target state="translated">Ассоциация,которую ты хочешь с нетерпением загрузить.(Это может быть использовано вместо предоставления модели/пары).</target>
        </trans-unit>
        <trans-unit id="eeb0e6deb9b0e80d8f8265fdbac4c078f3171b7b" translate="yes" xml:space="preserve">
          <source>The attr can either be an object taken from &lt;code&gt;Model.rawAttributes&lt;/code&gt; (for example &lt;code&gt;Model.rawAttributes.id&lt;/code&gt; or &lt;code&gt;Model.rawAttributes.name&lt;/code&gt;). The attribute should be defined in your model definition. The attribute can also be an object from one of the sequelize utility functions (&lt;code&gt;sequelize.fn&lt;/code&gt;, &lt;code&gt;sequelize.col&lt;/code&gt; etc.)</source>
          <target state="translated">Атрибут может быть объектом, взятым из &lt;code&gt;Model.rawAttributes&lt;/code&gt; (например, &lt;code&gt;Model.rawAttributes.id&lt;/code&gt; или &lt;code&gt;Model.rawAttributes.name&lt;/code&gt; ). Атрибут должен быть определен в определении вашей модели. Атрибут также может быть объектом одной из служебных функций &lt;code&gt;sequelize.fn&lt;/code&gt; ( sequelize.fn , &lt;code&gt;sequelize.col&lt;/code&gt; и т. Д.)</target>
        </trans-unit>
        <trans-unit id="4f1a633ffadc1e2c2bc95e3c735fd1cf866d44c8" translate="yes" xml:space="preserve">
          <source>The attribute to aggregate over. Can be a field name or *</source>
          <target state="translated">Атрибут агрегата выше.Может быть именем поля или *</target>
        </trans-unit>
        <trans-unit id="22739ed01f959f4fdce30289f8b662f6f4a480e5" translate="yes" xml:space="preserve">
          <source>The attribute, which can be either an attribute object from &lt;code&gt;Model.rawAttributes&lt;/code&gt; or a sequelize object, for example an instance of &lt;code&gt;sequelize.fn&lt;/code&gt;. For simple string attributes, use the POJO syntax</source>
          <target state="translated">Атрибут, который может быть либо объектом атрибута из &lt;code&gt;Model.rawAttributes&lt;/code&gt; , либо объектом sequelize, например экземпляром &lt;code&gt;sequelize.fn&lt;/code&gt; . Для простых строковых атрибутов используйте синтаксис POJO</target>
        </trans-unit>
        <trans-unit id="dd7a1e79deca9ce13b590c6b3440a4ec69eb8a2d" translate="yes" xml:space="preserve">
          <source>The basics</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4adcd69be228d56fcf3edec1f65fb88f2664ea6e" translate="yes" xml:space="preserve">
          <source>The best approach is to choose a name for the foreign key and place it explicitly in both calls. For example, if &lt;code&gt;subscription_id&lt;/code&gt; was chosen:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31f5160d6229195e79e6c1274de390301eb1e065" translate="yes" xml:space="preserve">
          <source>The best of both worlds: the Super Many-to-Many relationship</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dba330eeb679cc93d816de1011efd40e4001bb62" translate="yes" xml:space="preserve">
          <source>The best way to prevent this kind of mistake is to &lt;strong&gt;avoid using the concrete accessors and mixins directly at all costs&lt;/strong&gt; (such as &lt;code&gt;.image&lt;/code&gt;, &lt;code&gt;.getVideo()&lt;/code&gt;, &lt;code&gt;.setImage()&lt;/code&gt;, etc), always preferring the abstractions we created, such as &lt;code&gt;.getCommentable()&lt;/code&gt; and &lt;code&gt;.commentable&lt;/code&gt;. If you really need to access eager-loaded &lt;code&gt;.image&lt;/code&gt; and &lt;code&gt;.video&lt;/code&gt; for some reason, make sure you wrap that in a type check such as &lt;code&gt;comment.commentableType === 'image'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86f2cea5157fd9f20605ff55c5ddc6c804f123da" translate="yes" xml:space="preserve">
          <source>The blob datatype allows you to insert data both as strings and as buffers. However, when a blob is retrieved from database with Sequelize, it will always be retrieved as a buffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbcf08f5d0cc46af6869e99e66975da88a70ee1f" translate="yes" xml:space="preserve">
          <source>The callback has the form &lt;code&gt;(instances, options) =&amp;gt; /* ... */&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a2f78ef9d244f5109755aab0121644860970e34" translate="yes" xml:space="preserve">
          <source>The callback has the form &lt;code&gt;(options) =&amp;gt; /* ... */&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebb52ea62604ee1252a133687d4b5c9f8e537d70" translate="yes" xml:space="preserve">
          <source>The callback has the form &lt;code&gt;async (config) =&amp;gt; /* ... */&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="297ce94611fe852888df217e0c81704490bc70fa" translate="yes" xml:space="preserve">
          <source>The callback has the form &lt;code&gt;async (connection) =&amp;gt; /* ... */&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d964b0cee1924f1672ba378cf96bbc042498c259" translate="yes" xml:space="preserve">
          <source>The callback has the form &lt;code&gt;async (connection, config) =&amp;gt; /* ... */&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2729266f67f2a23ec11b7b4334746cfee6eef44b" translate="yes" xml:space="preserve">
          <source>The callback is called with the transaction object, and should return a promise. If the promise is resolved, the transaction commits; if the promise rejects, the transaction rolls back</source>
          <target state="translated">Обратный вызов вызывается с объектом транзакции и должен вернуть обещание.Если обещание разрешено,транзакция совершает фиксацию;если обещание отвергается,транзакция откатывается назад</target>
        </trans-unit>
        <trans-unit id="6e275f53b4e5073eab6f6e00991b66b9a04b41e8" translate="yes" xml:space="preserve">
          <source>The callback passed to &lt;code&gt;afterCommit&lt;/code&gt; can be &lt;code&gt;async&lt;/code&gt;. In this case:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89f67ef86d7f079615ec0e89c9fb9283c0562afc" translate="yes" xml:space="preserve">
          <source>The character(s) that separates the schema name from the table name</source>
          <target state="translated">Символ(ы),отделяющий имя схемы от имени таблицы.</target>
        </trans-unit>
        <trans-unit id="7bffb68a98cf41f92a6a5b6847d45ca564723683" translate="yes" xml:space="preserve">
          <source>The cidr type holds an IPv4 or IPv6 network specification. Takes 7 or 19 bytes.</source>
          <target state="translated">Тип cidr содержит сетевые спецификации IPv4 или IPv6.Потребуется 7 или 19 байт.</target>
        </trans-unit>
        <trans-unit id="08288fcdafa5090ff642d3378e7c64c514abd839" translate="yes" xml:space="preserve">
          <source>The code created a new instance. So when we already have an instance ...</source>
          <target state="translated">Код создал новый экземпляр.Так что когда у нас уже есть экземпляр ...</target>
        </trans-unit>
        <trans-unit id="86c3eb751548d29886ece41261fcf102e99bb6c1" translate="yes" xml:space="preserve">
          <source>The column of the foreign table that this column references</source>
          <target state="translated">Столбец зарубежной таблицы,на который ссылается этот столбец.</target>
        </trans-unit>
        <trans-unit id="086f5b689f580197262a5b2e07b9612e1b03fe5b" translate="yes" xml:space="preserve">
          <source>The comment option can also be used on a table, see &lt;a href=&quot;models-definition#configuration&quot;&gt;model configuration&lt;/a&gt;.</source>
          <target state="translated">Опцию комментария также можно использовать для таблицы, см. &lt;a href=&quot;models-definition#configuration&quot;&gt;Конфигурацию модели&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d27aabc8275530f07158af4ff3a280a6294be2a6" translate="yes" xml:space="preserve">
          <source>The comment will be set when calling &lt;code&gt;sync()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0eb1bab57a621daf9b2bb926b56b6310ae016f5f" translate="yes" xml:space="preserve">
          <source>The concepts of Eager Loading and Lazy Loading are fundamental to understand how fetching associations work in Sequelize. Lazy Loading refers to the technique of fetching the associated data only when you really want it; Eager Loading, on the other hand, refers to the technique of fetching everything at once, since the beginning, with a larger query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="307ca9cde38886869f5fa3f4a7f13e21882c3f36" translate="yes" xml:space="preserve">
          <source>The condition. Can be both a simply type, or a further condition (&lt;code&gt;or&lt;/code&gt;, &lt;code&gt;and&lt;/code&gt;, &lt;code&gt;.literal&lt;/code&gt; etc.)</source>
          <target state="translated">Условие. Может быть как простым типом, так и дополнительным условием ( &lt;code&gt;or&lt;/code&gt; , &lt;code&gt;and&lt;/code&gt; , &lt;code&gt;.literal&lt;/code&gt; и т. Д.)</target>
        </trans-unit>
        <trans-unit id="643e263b3792d2735799bf65236300d2e8f0f34d" translate="yes" xml:space="preserve">
          <source>The configuration file is by default a JSON file called &lt;code&gt;config.json&lt;/code&gt;. But sometimes you need a dynamic configuration, for example to access environment variables or execute some other code to determine the configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b12da706808f947908ea3c7e4a43a6c6df973b54" translate="yes" xml:space="preserve">
          <source>The connection specific error which triggered this one</source>
          <target state="translated">Ошибка соединения,вызвавшая эту ошибку</target>
        </trans-unit>
        <trans-unit id="f11daf184810825d2e034f106bcdd1a52e3ca438" translate="yes" xml:space="preserve">
          <source>The constraints can be configured in a transaction like this. It will trigger a query once the transaction has been started and set the constraints to be checked at the very end of the transaction.</source>
          <target state="translated">Ограничения могут быть настроены в такой транзакции.Это вызовет запрос после того,как транзакция будет запущена,и установит ограничения,которые будут проверяться в самом конце транзакции.</target>
        </trans-unit>
        <trans-unit id="9712140b363a1de7e3ef7011ed4d015c64de986b" translate="yes" xml:space="preserve">
          <source>The content of &lt;code&gt;raw&lt;/code&gt; will be added verbatim without quoting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a535f48c9c40323cf1d64fd09ba69dc4ba240a70" translate="yes" xml:space="preserve">
          <source>The contents of this page were moved to &lt;a href=&quot;model-basics&quot;&gt;Model Basics&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="068013d2018417b76589f569a09297640de057b8" translate="yes" xml:space="preserve">
          <source>The contents of this page were moved to other specialized guides.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f82e34423c4aa983880f84a931ac15a57ef5e9c" translate="yes" xml:space="preserve">
          <source>The created target model</source>
          <target state="translated">Созданная целевая модель</target>
        </trans-unit>
        <trans-unit id="8365a8cc325cbcee0b79e12d5dd24da474986bd1" translate="yes" xml:space="preserve">
          <source>The custom name for unique constraint.</source>
          <target state="translated">Настраиваемое имя для уникального ограничения.</target>
        </trans-unit>
        <trans-unit id="26d8528d64198217cd0a2792bd30ba499b76275f" translate="yes" xml:space="preserve">
          <source>The database may add further restrictions to this. Bind parameters cannot be SQL keywords, nor table or column names. They are also ignored in quoted text or data. In PostgreSQL it may also be needed to typecast them, if the type cannot be inferred from the context &lt;code&gt;$1::varchar&lt;/code&gt;.</source>
          <target state="translated">База данных может добавить к этому дополнительные ограничения. Параметры привязки не могут быть ключевыми словами SQL, а также именами таблиц или столбцов. Они также игнорируются в цитируемом тексте или данных. В PostgreSQL также может потребоваться привести их к типу, если тип не может быть выведен из контекста &lt;code&gt;$1::varchar&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="133c42933eb9f6bdcc738e29e1ecb28fe8f85820" translate="yes" xml:space="preserve">
          <source>The database name.</source>
          <target state="translated">Имя базы данных.</target>
        </trans-unit>
        <trans-unit id="c7b14aedd0c4e517f0bbd0dc1afb0301b4627da0" translate="yes" xml:space="preserve">
          <source>The default casing is &lt;code&gt;camelCase&lt;/code&gt;. If the source model is configured with &lt;code&gt;underscored: true&lt;/code&gt; the foreignKey will be created with field &lt;code&gt;snake_case&lt;/code&gt;.</source>
          <target state="translated">Оболочка по умолчанию - &lt;code&gt;camelCase&lt;/code&gt; . Если исходная модель настроена с &lt;code&gt;underscored: true&lt;/code&gt; foreignKey будет создан с полем &lt;code&gt;snake_case&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6dc21b0b4d12b76a5818f880b5f80b8a22b8c421" translate="yes" xml:space="preserve">
          <source>The default engine for a model is InnoDB.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab6a1cee9dd55a28134e5eb727ede271bd531534" translate="yes" xml:space="preserve">
          <source>The default scope can be removed by calling &lt;code&gt;.unscoped()&lt;/code&gt;, &lt;code&gt;.scope(null)&lt;/code&gt;, or by invoking another scope:</source>
          <target state="translated">Область по умолчанию можно удалить, вызвав &lt;code&gt;.unscoped()&lt;/code&gt; , &lt;code&gt;.scope(null)&lt;/code&gt; или вызвав другую область:</target>
        </trans-unit>
        <trans-unit id="b7386af5698cd007ddf66e78123acc72fab2f4ea" translate="yes" xml:space="preserve">
          <source>The default scope is always applied. This means, that with the model definition above, &lt;code&gt;Project.findAll()&lt;/code&gt; will create the following query:</source>
          <target state="translated">Всегда применяется область действия по умолчанию. Это означает, что с приведенным выше определением модели &lt;code&gt;Project.findAll()&lt;/code&gt; создаст следующий запрос:</target>
        </trans-unit>
        <trans-unit id="fa546f166503aba9bbfa12ca4aef7d527586612c" translate="yes" xml:space="preserve">
          <source>The defaults for the One-To-One associations is &lt;code&gt;SET NULL&lt;/code&gt; for &lt;code&gt;ON DELETE&lt;/code&gt; and &lt;code&gt;CASCADE&lt;/code&gt; for &lt;code&gt;ON UPDATE&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="665cbb172b6490eaddc986b85ff39499207a5181" translate="yes" xml:space="preserve">
          <source>The description of a database column</source>
          <target state="translated">Описание столбца базы данных</target>
        </trans-unit>
        <trans-unit id="17c2a1a15703200447e4e3ae9246feb0762fdebb" translate="yes" xml:space="preserve">
          <source>The diagram below shows the firing order for the most common hooks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d84e52eb436e545fc5c78ff373642e0e5f89fc49" translate="yes" xml:space="preserve">
          <source>The dialect of the database you are connecting to. One of mysql, postgres, sqlite and mssql.</source>
          <target state="translated">Диалект базы данных,к которой вы подключаетесь.Один из mysql,postgres,sqlite и mssql.</target>
        </trans-unit>
        <trans-unit id="87de8d90db190f90a33e2aa732fb6ceb202799ae" translate="yes" xml:space="preserve">
          <source>The exact same idea can be applied to the &lt;code&gt;hasOne&lt;/code&gt; and &lt;code&gt;hasMany&lt;/code&gt; associations, but instead of providing a &lt;code&gt;targetKey&lt;/code&gt;, we provide a &lt;code&gt;sourceKey&lt;/code&gt; when defining the association. This is because unlike &lt;code&gt;belongsTo&lt;/code&gt;, the &lt;code&gt;hasOne&lt;/code&gt; and &lt;code&gt;hasMany&lt;/code&gt; associations keep the foreign key on the target model:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="def4b818effdcbcbb341517b995603bb7fd1cfea" translate="yes" xml:space="preserve">
          <source>The example above also shows how to add custom dialect options to the configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45e7bc7d9f271032666c02c31e6e45fd4b760911" translate="yes" xml:space="preserve">
          <source>The example above will create a model named &lt;code&gt;User&lt;/code&gt; pointing to a table also named &lt;code&gt;User&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88d26fe16e5692696255a5355d0f4f8be2e688ab" translate="yes" xml:space="preserve">
          <source>The field that triggered the validation error</source>
          <target state="translated">Поле,которое вызвало ошибку проверки</target>
        </trans-unit>
        <trans-unit id="dc12ac79eaf881af2a210995e506e55117bb8e15" translate="yes" xml:space="preserve">
          <source>The fields to insert / update. Defaults to all changed fields</source>
          <target state="translated">Поля для вставки/обновления.По умолчанию для всех измененных полей</target>
        </trans-unit>
        <trans-unit id="5fc388d14402454846435b4ba16379dcaf2da697" translate="yes" xml:space="preserve">
          <source>The first call above will establish a foreign key called &lt;code&gt;theSubscriptionId&lt;/code&gt; on &lt;code&gt;Invoice&lt;/code&gt;. However, the second call will also establish a foreign key on &lt;code&gt;Invoice&lt;/code&gt; (since as we know, &lt;code&gt;hasMany&lt;/code&gt; calls places foreign keys in the target model) - however, it will be named &lt;code&gt;subscriptionId&lt;/code&gt;. This way you will have both &lt;code&gt;subscriptionId&lt;/code&gt; and &lt;code&gt;theSubscriptionId&lt;/code&gt; columns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a271d313ec9a5b0ba22651482b2acecb8f30ecb" translate="yes" xml:space="preserve">
          <source>The following SQL calls are generated for SQLite:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42906407901dc98dd47ff0bf1ad488ab7ff5f96b" translate="yes" xml:space="preserve">
          <source>The following example will be successful:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecae6536ba5f664ceb5f19fb50106224ec6ccb71" translate="yes" xml:space="preserve">
          <source>The following example will throw an error:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82b4a90983df6d340d9ebb2913376b001f99f3b5" translate="yes" xml:space="preserve">
          <source>The following example would return successful:</source>
          <target state="translated">Следующий пример будет успешным:</target>
        </trans-unit>
        <trans-unit id="280f1e7b08f7b7110bec1c76d91b0af4a17b5d16" translate="yes" xml:space="preserve">
          <source>The following hooks will emit whenever you're editing a single object</source>
          <target state="translated">Следующие крючки будут испускаться всякий раз,когда вы редактируете один объект.</target>
        </trans-unit>
        <trans-unit id="68688b6de6f445e1cbb2bc8cd5e5582e2cceb88c" translate="yes" xml:space="preserve">
          <source>The following hooks will emit whenever you're editing a single object:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e6a1b0b86882a21b759b1ffd75f905d1a7598a6" translate="yes" xml:space="preserve">
          <source>The following is an example of a migration that performs two changes in the database, using a transaction to ensure that all instructions are successfully executed or rolled back in case of failure:</source>
          <target state="translated">Ниже приведен пример миграции,которая выполняет два изменения в базе данных,используя транзакцию для обеспечения успешного выполнения или отката всех инструкций в случае неудачи:</target>
        </trans-unit>
        <trans-unit id="961c21dce82c2533bd652bce645a89a35fb0a4ec" translate="yes" xml:space="preserve">
          <source>The following is an example of a migration that performs two changes in the database, using an automatically-managed transaction to ensure that all instructions are successfully executed or rolled back in case of failure:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dc82f0763e4ab04ff35cac14d85b168f30e6b9f" translate="yes" xml:space="preserve">
          <source>The following skeleton shows a typical migration file.</source>
          <target state="translated">На следующем скелете показан типичный файл миграции.</target>
        </trans-unit>
        <trans-unit id="e06d3e32690783120e9be16c51d4ae5794b0ed5d" translate="yes" xml:space="preserve">
          <source>The following will happen in this case:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a10c7d3ee357a66ed02d0cefd56151488e7581d5" translate="yes" xml:space="preserve">
          <source>The foreign key column in Picture will now be called &lt;code&gt;uid&lt;/code&gt; instead of the default &lt;code&gt;userId&lt;/code&gt;.</source>
          <target state="translated">Столбец внешнего ключа в Picture теперь будет называться &lt;code&gt;uid&lt;/code&gt; вместо &lt;code&gt;userId&lt;/code&gt; по умолчанию .</target>
        </trans-unit>
        <trans-unit id="12c1febc044151ecd5369dd75f35ba59d7d87ddf" translate="yes" xml:space="preserve">
          <source>The foreign key name can be provided directly with an option in the association definition, as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="529cad56c0cb70caba210ae4d8aa6458b6284149" translate="yes" xml:space="preserve">
          <source>The foreign keys can be configured like this. It will create a foreign key that will check the constraints immediately when the data was inserted.</source>
          <target state="translated">Иностранные ключи могут быть настроены таким образом.Он создаст инородный ключ,который будет проверять ограничения сразу же после вставки данных.</target>
        </trans-unit>
        <trans-unit id="2370aaaf0d68986c57d44c76392fb05980d573b2" translate="yes" xml:space="preserve">
          <source>The four association types are defined in a very similar way. Let's say we have two models, &lt;code&gt;A&lt;/code&gt; and &lt;code&gt;B&lt;/code&gt;. Telling Sequelize that you want an association between the two needs just a function call:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="793f0633fe67cfcf9f0c69748cf2894da9604c8b" translate="yes" xml:space="preserve">
          <source>The function passed to &lt;code&gt;afterCommit&lt;/code&gt; can optionally return a promise that will resolve before the promise chain that created the transaction resolves</source>
          <target state="translated">Функция, переданная в &lt;code&gt;afterCommit&lt;/code&gt; , может при желании вернуть обещание, которое будет разрешено до того, как разрешится цепочка обещаний, создавшая транзакцию.</target>
        </trans-unit>
        <trans-unit id="391fd95e64f40aa9733294c80cb361252d715dc2" translate="yes" xml:space="preserve">
          <source>The function to use for aggregation, e.g. sum, max etc.</source>
          <target state="translated">Функция для агрегирования,например,сумма,макс.и т.д.</target>
        </trans-unit>
        <trans-unit id="000d55600122d86f1eba23f47b3d17f67612ff60" translate="yes" xml:space="preserve">
          <source>The function you want to call</source>
          <target state="translated">Функция,которую вы хотите вызвать</target>
        </trans-unit>
        <trans-unit id="e135b99727511ce9aceb25615effb6ba854b79d1" translate="yes" xml:space="preserve">
          <source>The getter method accepts options just like the usual finder methods (such as &lt;code&gt;findAll&lt;/code&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d2fd892b7e49a84a79c772b9c3ab82a75c144d3" translate="yes" xml:space="preserve">
          <source>The guide will start explaining how to define these four types of associations, and then will follow up to explain how to combine those to define the three standard association types (&lt;a href=&quot;https://en.wikipedia.org/wiki/One-to-one_%28data_model%29&quot;&gt;One-To-One&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/One-to-many_%28data_model%29&quot;&gt;One-To-Many&lt;/a&gt; and &lt;a href=&quot;https://en.wikipedia.org/wiki/Many-to-many_%28data_model%29&quot;&gt;Many-To-Many&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90c3ebe86ec649ba3e67ec8bd89813b5825ec277" translate="yes" xml:space="preserve">
          <source>The host of the relational database.</source>
          <target state="translated">Хост реляционной базы данных.</target>
        </trans-unit>
        <trans-unit id="078148a6e892df7a20d488625d335ca2bfefddd8" translate="yes" xml:space="preserve">
          <source>The interface that Sequelize uses to talk to all databases</source>
          <target state="translated">Интерфейс,который Sequelize использует для взаимодействия со всеми базами данных.</target>
        </trans-unit>
        <trans-unit id="5d457db1431b80cf8915e31a4d70b3c3781a9c09" translate="yes" xml:space="preserve">
          <source>The interface that Sequelize uses to talk with MSSQL database</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6477afe06c10a818bc7d40c0f9584506b6d2b739" translate="yes" xml:space="preserve">
          <source>The interface that Sequelize uses to talk with MySQL/MariaDB database</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba12af77ac6f34eb6defcfeb5e5c54a843afa932" translate="yes" xml:space="preserve">
          <source>The interface that Sequelize uses to talk with Postgres database</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d8d9082ce7b5c3556c55a2a7e4170e63563d3a4" translate="yes" xml:space="preserve">
          <source>The interface that Sequelize uses to talk with SQLite database</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b73ca2f73dbf5fbdcb5f9c41700b408a0e80f3d" translate="yes" xml:space="preserve">
          <source>The key difference is that the managed transaction uses a callback that expects a promise to be returned to it while the unmanaged transaction returns a promise.</source>
          <target state="translated">Ключевое отличие заключается в том,что управляемая транзакция использует обратный вызов,который ожидает,что обещание будет возвращено,в то время как неуправляемая транзакция возвращает обещание.</target>
        </trans-unit>
        <trans-unit id="78ad99f68c3f49de5dac894a3e535c3b22d08e81" translate="yes" xml:space="preserve">
          <source>The last option is the default in PostgreSQL and won't allow you to dynamically change the rule in a transaction. See &lt;a href=&quot;transactions#options&quot;&gt;the transaction section&lt;/a&gt; for further information.</source>
          <target state="translated">Последний вариант используется в PostgreSQL по умолчанию и не позволяет динамически изменять правило в транзакции. См. &lt;a href=&quot;transactions#options&quot;&gt;Раздел транзакций&lt;/a&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="ec4984d2ddd30205a2e231be149e2871ddd539b9" translate="yes" xml:space="preserve">
          <source>The library for MSSQL is&lt;code&gt;tedious@^6.0.0&lt;/code&gt; You'll just need to define the dialect. Please note: &lt;code&gt;tedious@^6.0.0&lt;/code&gt; requires you to nest MSSQL specific options inside an additional &lt;code&gt;options&lt;/code&gt;-object inside the &lt;code&gt;dialectOptions&lt;/code&gt;-object.</source>
          <target state="translated">Библиотека для MSSQL - &lt;code&gt;tedious@^6.0.0&lt;/code&gt; . Вам просто нужно определить диалект. Обратите внимание: &lt;code&gt;tedious@^6.0.0&lt;/code&gt; требует, чтобы вы вложили специфические параметры MSSQL в дополнительный объект &lt;code&gt;options&lt;/code&gt; внутри &lt;code&gt;dialectOptions&lt;/code&gt; dialectOptions.</target>
        </trans-unit>
        <trans-unit id="934a2eaf992cdd06d2aba7f0aa18a842e979db5f" translate="yes" xml:space="preserve">
          <source>The main setup to achieve the goal is as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5443066bbb733918f3134982fc13f4d1c65e30b" translate="yes" xml:space="preserve">
          <source>The main way to do this in Sequelize is as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0db38bc9640103964b079b1e11325895649ec10" translate="yes" xml:space="preserve">
          <source>The main way to do this is as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1658788de2d8228e11cec2bccf15ee08bd03c17f" translate="yes" xml:space="preserve">
          <source>The maximum time, in milliseconds, that a connection can be idle before being released.</source>
          <target state="translated">Максимальное время в миллисекундах,что соединение может быть пропущено перед освобождением.</target>
        </trans-unit>
        <trans-unit id="ba55d264e60dd5d5b5ddf45b2ce564066fb762a9" translate="yes" xml:space="preserve">
          <source>The maximum time, in milliseconds, that pool will try to get connection before throwing error</source>
          <target state="translated">Максимальное время,в миллисекундах,этот пул будет пытаться получить соединение,прежде чем бросать ошибку.</target>
        </trans-unit>
        <trans-unit id="5ee71bd71da0b1e5f70afac2c78ad97814aea849" translate="yes" xml:space="preserve">
          <source>The merge illustrated above works in the exact same way regardless of the order applied to the scopes. The order would only make a difference if a certain option was set by two different scopes - which is not the case of the above example, since each scope does a different thing.</source>
          <target state="translated">Слияние,проиллюстрированное выше,работает точно так же,независимо от порядка,применяемого к диапазонам.Порядок будет иметь значение только в том случае,если определенная опция будет установлена двумя разными диапазонами-что не так в примере выше,так как каждый диапазон делает свою работу по-разному.</target>
        </trans-unit>
        <trans-unit id="768b334f10219b8ad448c59e67cb8742c9f47374" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;findOrCreate&lt;/code&gt; can be used to check if a certain element already exists in the database. If that is the case the method will result in a respective instance. If the element does not yet exist, it will be created.</source>
          <target state="translated">Метод &lt;code&gt;findOrCreate&lt;/code&gt; можно использовать для проверки того, существует ли уже определенный элемент в базе данных. В этом случае метод приведет к созданию соответствующего экземпляра. Если элемент еще не существует, он будет создан.</target>
        </trans-unit>
        <trans-unit id="485c8fc2f8c2529175828e883bb2acaaa0d0d349" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;findOrCreate&lt;/code&gt; will create an entry in the table unless it can find one fulfilling the query options. In both cases, it will return an instance (either the found instance or the created instance) and a boolean indicating whether that instance was created or already existed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="190f856cccd7855db0bd246036cd7f550762c4f2" translate="yes" xml:space="preserve">
          <source>The method call is essentially the same. The only difference is that now the extra field created in the query result uses the pluralized form (&lt;code&gt;tasks&lt;/code&gt; in this case), and its value is an array of task instances (instead of a single instance, as above).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d86660c6baef8b679849a118c8e3209fbf8ab29" translate="yes" xml:space="preserve">
          <source>The method to create the index by (&lt;code&gt;USING&lt;/code&gt; statement in SQL). BTREE and HASH are supported by mysql and postgres, and postgres additionally supports GIST and GIN.</source>
          <target state="translated">Метод создания индекса ( инструкция &lt;code&gt;USING&lt;/code&gt; в SQL). BTREE и HASH поддерживаются mysql и postgres, а postgres дополнительно поддерживает GIST и GIN.</target>
        </trans-unit>
        <trans-unit id="cd094238935bf66b383e816c14b414030b2e0138" translate="yes" xml:space="preserve">
          <source>The methods from the query interface are therefore lower-level methods; you should use them only if you do not find another way to do it with higher-level APIs from Sequelize. They are, of course, still higher-level than running raw queries directly (i.e., writing SQL by hand).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0edf99980de39ddde23bcf3f3a1f4f049bd3508" translate="yes" xml:space="preserve">
          <source>The mixins added to the user instances will use the correct forms. For example, instead of &lt;code&gt;project.addUser()&lt;/code&gt;, Sequelize will provide &lt;code&gt;project.getL&amp;iacute;der()&lt;/code&gt;. Also, instead of &lt;code&gt;project.setUsers()&lt;/code&gt;, Sequelize will provide &lt;code&gt;project.setL&amp;iacute;deres()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abff63f50f4e22a39d39942704040b4902951cc5" translate="yes" xml:space="preserve">
          <source>The model tells Sequelize several things about the entity it represents, such as the name of the table in the database and which columns it has (and their data types).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ba17aa0bb5f9dc7d5841a219c942e597585fcbc" translate="yes" xml:space="preserve">
          <source>The model used to join both sides of the N:M association.</source>
          <target state="translated">Модель была использована для присоединения к обеим сторонам ассоциации N:M.</target>
        </trans-unit>
        <trans-unit id="344f38a91e7d9dc5d063993463bcdaa555327fc6" translate="yes" xml:space="preserve">
          <source>The model you want to eagerly load</source>
          <target state="translated">Модель,которую вы хотите с нетерпением загрузить</target>
        </trans-unit>
        <trans-unit id="7958ce6ba41d78327583cdbfd8cb6017bf350a54" translate="yes" xml:space="preserve">
          <source>The name of a model defined with Sequelize.define</source>
          <target state="translated">Название модели,определенное с помощью Sequelize.define.</target>
        </trans-unit>
        <trans-unit id="20779cb99d8b313c45bb680661f5068180a4b366" translate="yes" xml:space="preserve">
          <source>The name of the attribute to use as the key for the association in the source table. Defaults to the primary key of the source table</source>
          <target state="translated">Имя атрибута для использования в качестве ключа для ассоциации в исходной таблице.По умолчанию первичный ключ исходной таблицы.</target>
        </trans-unit>
        <trans-unit id="2c370d4fbb6793a135a98f2d34ffdc1efa7aa44d" translate="yes" xml:space="preserve">
          <source>The name of the attribute to use as the key for the association in the target table. Defaults to the primary key of the target table</source>
          <target state="translated">Имя атрибута для использования в качестве ключа для ассоциации в целевой таблице.По умолчанию первичный ключ целевой таблицы.</target>
        </trans-unit>
        <trans-unit id="93c15edec87bb8d344200119a7dc2a4a142ddf00" translate="yes" xml:space="preserve">
          <source>The name of the column</source>
          <target state="translated">Название колонки</target>
        </trans-unit>
        <trans-unit id="8c4f59698903f75b8bd6022cb4552203a39c97a3" translate="yes" xml:space="preserve">
          <source>The name of the database</source>
          <target state="translated">Название базы данных</target>
        </trans-unit>
        <trans-unit id="22a68705226fe8673395221999a0d393f6c5865e" translate="yes" xml:space="preserve">
          <source>The name of the field to use as the key for the association in the source table. Defaults to the primary key of the source table</source>
          <target state="translated">Название поля для использования в качестве ключа для ассоциации в исходной таблице.По умолчанию первичный ключ исходной таблицы.</target>
        </trans-unit>
        <trans-unit id="15885ab4b151a1a790fcb10a8b5e2b0d66ba2eec" translate="yes" xml:space="preserve">
          <source>The name of the foreign key attribute in the source table or an object representing the type definition for the foreign column (see &lt;code&gt;Sequelize.define&lt;/code&gt; for syntax). When using an object, you can add a &lt;code&gt;name&lt;/code&gt; property to set the name of the column. Defaults to the name of target + primary key of target</source>
          <target state="translated">Имя атрибута внешнего ключа в исходной таблице или объекта, представляющего определение типа для внешнего столбца ( синтаксис см. В &lt;code&gt;Sequelize.define&lt;/code&gt; ). При использовании объекта вы можете добавить свойство &lt;code&gt;name&lt;/code&gt; , чтобы задать имя столбца. По умолчанию имя цели + первичный ключ цели</target>
        </trans-unit>
        <trans-unit id="eb6459fe5afc725ce007c909a06d98e3db4d2d06" translate="yes" xml:space="preserve">
          <source>The name of the foreign key attribute in the target model or an object representing the type definition for the foreign column (see &lt;code&gt;Sequelize.define&lt;/code&gt; for syntax). When using an object, you can add a &lt;code&gt;name&lt;/code&gt; property to set the name of the column. Defaults to the name of source + primary key of source</source>
          <target state="translated">Имя атрибута внешнего ключа в целевой модели или объекта, представляющего определение типа для внешнего столбца ( синтаксис см. В &lt;code&gt;Sequelize.define&lt;/code&gt; ). При использовании объекта вы можете добавить свойство &lt;code&gt;name&lt;/code&gt; , чтобы задать имя столбца. По умолчанию используется имя источника + первичный ключ источника.</target>
        </trans-unit>
        <trans-unit id="42469972a87959d8071e3f01dc78f6c8d2553e4f" translate="yes" xml:space="preserve">
          <source>The name of the foreign key in the join table (representing the source model) or an object representing the type definition for the foreign column (see &lt;code&gt;Sequelize.define&lt;/code&gt; for syntax). When using an object, you can add a &lt;code&gt;name&lt;/code&gt; property to set the name of the column. Defaults to the name of source + primary key of source</source>
          <target state="translated">Имя внешнего ключа в таблице соединения (представляющей исходную модель) или объект, представляющий определение типа для внешнего столбца ( синтаксис см. В &lt;code&gt;Sequelize.define&lt;/code&gt; ). При использовании объекта вы можете добавить свойство &lt;code&gt;name&lt;/code&gt; , чтобы задать имя столбца. По умолчанию используется имя источника + первичный ключ источника.</target>
        </trans-unit>
        <trans-unit id="fe4d422c72187bb994f27a984373dd051447a90f" translate="yes" xml:space="preserve">
          <source>The name of the foreign key in the join table (representing the target model) or an object representing the type definition for the other column (see &lt;code&gt;Sequelize.define&lt;/code&gt; for syntax). When using an object, you can add a &lt;code&gt;name&lt;/code&gt; property to set the name of the column. Defaults to the name of target + primary key of target</source>
          <target state="translated">Имя внешнего ключа в таблице соединения (представляющей целевую модель) или объекта, представляющего определение типа для другого столбца ( синтаксис см. В &lt;code&gt;Sequelize.define&lt;/code&gt; ). При использовании объекта вы можете добавить свойство &lt;code&gt;name&lt;/code&gt; , чтобы задать имя столбца. По умолчанию имя цели + первичный ключ цели</target>
        </trans-unit>
        <trans-unit id="38709c5641379045db5e5d83ba646ba0c902d682" translate="yes" xml:space="preserve">
          <source>The name of the foreign key in the target table or an object representing the type definition for the foreign column (see &lt;code&gt;Sequelize.define&lt;/code&gt; for syntax). When using an object, you can add a &lt;code&gt;name&lt;/code&gt; property to set the name of the column. Defaults to the name of source + primary key of source</source>
          <target state="translated">Имя внешнего ключа в целевой таблице или объект, представляющий определение типа для внешнего столбца ( синтаксис см. В &lt;code&gt;Sequelize.define&lt;/code&gt; ). При использовании объекта вы можете добавить свойство &lt;code&gt;name&lt;/code&gt; , чтобы задать имя столбца. По умолчанию используется имя источника + первичный ключ источника.</target>
        </trans-unit>
        <trans-unit id="7a7cf09bcd6575bf593ecb7e44a875789583a801" translate="yes" xml:space="preserve">
          <source>The name of the index. Defaults to model name + _ + fields concatenated</source>
          <target state="translated">Название индекса.По умолчанию имя модели+_+поля конкапсулированы.</target>
        </trans-unit>
        <trans-unit id="e0dee175f7513db4bb65e2da34923be2d4fb8f8d" translate="yes" xml:space="preserve">
          <source>The name of the language that the function is implemented in</source>
          <target state="translated">Название языка,на котором реализована функция</target>
        </trans-unit>
        <trans-unit id="901c3e2315864e0cfc881f469ee9e42e145e1941" translate="yes" xml:space="preserve">
          <source>The name of the model on which the update was attempted</source>
          <target state="translated">Название модели,на которой была предпринята попытка обновления.</target>
        </trans-unit>
        <trans-unit id="4ea96b65632c0d275cf41855cbbc4cfc2e78bbea" translate="yes" xml:space="preserve">
          <source>The name of the model. The model will be stored in &lt;code&gt;sequelize.models&lt;/code&gt; under this name</source>
          <target state="translated">Название модели. Модель будет храниться в &lt;code&gt;sequelize.models&lt;/code&gt; под этим именем.</target>
        </trans-unit>
        <trans-unit id="fa9b6db53f226bce8b7814cf4cd827147473b678" translate="yes" xml:space="preserve">
          <source>The name of the schema</source>
          <target state="translated">Название схемы</target>
        </trans-unit>
        <trans-unit id="4a337049980fb26ef87b1957b77e10b1adaa13d4" translate="yes" xml:space="preserve">
          <source>The name of the scope. Use &lt;code&gt;defaultScope&lt;/code&gt; to override the default scope</source>
          <target state="translated">Имя области. Используйте &lt;code&gt;defaultScope&lt;/code&gt; , чтобы переопределить область по умолчанию</target>
        </trans-unit>
        <trans-unit id="689b7c83b43fba0e2101546e9d74f61d1a062d93" translate="yes" xml:space="preserve">
          <source>The name of the table that is used to join source and target in n:m associations. Can also be a sequelize model if you want to define the junction table yourself and add extra attributes to it.</source>
          <target state="translated">Название таблицы,которая используется для объединения источника и цели в n:m ассоциациях.Также может быть моделью сиквелизации,если вы хотите самостоятельно определить таблицу слияния и добавить к ней дополнительные атрибуты.</target>
        </trans-unit>
        <trans-unit id="6408e2ecf1340ab31daec80973b0b23a6dc6fdf2" translate="yes" xml:space="preserve">
          <source>The name of the template from which to create the new database, PostgreSQL only</source>
          <target state="translated">Имя шаблона,из которого будет создаваться новая база данных,только PostgreSQL</target>
        </trans-unit>
        <trans-unit id="e491db23ab33dd3e30028e864986440ecc5c17fe" translate="yes" xml:space="preserve">
          <source>The new range can be used in model definitions as &lt;code&gt;DataTypes.RANGE(DataTypes.SOMETYPE)&lt;/code&gt; or &lt;code&gt;DataTypes.RANGE(DataTypes.SOMETYPE)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3af644ca8cb4bd3901646f8c9686c10ad3f438f9" translate="yes" xml:space="preserve">
          <source>The new range can be used in model definitions as &lt;code&gt;Sequelize.RANGE(Sequelize.NEWTYPE)&lt;/code&gt; or &lt;code&gt;DataTypes.RANGE(DataTypes.NEWTYPE)&lt;/code&gt;.</source>
          <target state="translated">Новый диапазон можно использовать в определениях модели как &lt;code&gt;Sequelize.RANGE(Sequelize.NEWTYPE)&lt;/code&gt; или &lt;code&gt;DataTypes.RANGE(DataTypes.NEWTYPE)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="efbd63110ba59eb18101daa4d72f9939a5daaca0" translate="yes" xml:space="preserve">
          <source>The next example is of a migration that creates an unique index composed of multiple fields with a condition, which allows a relation to exist multiple times but only one can satisfy the condition:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6831c357e921f615d34e26a18dab83a426f891bb" translate="yes" xml:space="preserve">
          <source>The next example is of a migration that has a foreign key. You can use references to specify a foreign key:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a22d570e2dbed2ac66aa83f59f2d5124d3ecdfc" translate="yes" xml:space="preserve">
          <source>The next example is of a migration that uses async/await where you create an unique index on a new column, with a manually-managed transaction:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3d7de3db43f176261838315f9462534066abc21" translate="yes" xml:space="preserve">
          <source>The next is an example of a migration that has a foreign key. You can use references to specify a foreign key:</source>
          <target state="translated">Следующий пример-миграция с иностранным ключом.Вы можете использовать ссылки для указания иностранного ключа:</target>
        </trans-unit>
        <trans-unit id="e90d9ad1b9b3b4f1a236dc0cc182271fbe723b0e" translate="yes" xml:space="preserve">
          <source>The next is an example of a migration that has uses async/await where you create an unique index on a new column:</source>
          <target state="translated">Следующий пример миграции,в которой используется async/await,где вы создаете уникальный индекс в новом столбце:</target>
        </trans-unit>
        <trans-unit id="5bfd201c5d2f64d334aaed75ca93f6250c27f3e0" translate="yes" xml:space="preserve">
          <source>The number of destroyed rows</source>
          <target state="translated">Количество уничтоженных рядов</target>
        </trans-unit>
        <trans-unit id="3373583000bc71ae0b35559454845902a56e4c5d" translate="yes" xml:space="preserve">
          <source>The number of times a connection can be used before discarding it for a replacement, &lt;a href=&quot;https://github.com/sequelize/sequelize-pool&quot;&gt;&lt;code&gt;used for eventual cluster rebalancing&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6081ff3872966efe1d8dfd421d4fb7860123280f" translate="yes" xml:space="preserve">
          <source>The number to decrement by</source>
          <target state="translated">Количество,которое уменьшается на</target>
        </trans-unit>
        <trans-unit id="30c2b338b0c6fb53c4b5c1dd307e605378770430" translate="yes" xml:space="preserve">
          <source>The number to increment by</source>
          <target state="translated">Количество,которое можно увеличить на</target>
        </trans-unit>
        <trans-unit id="9a251a1717e23706be50c156e494217a1612517f" translate="yes" xml:space="preserve">
          <source>The only difference is when you try to perform an eager load with Sequelize.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de36c08060ac20ff8a2842263f532923aed2f6a2" translate="yes" xml:space="preserve">
          <source>The only exception is the guide on &lt;code&gt;sequelize.import&lt;/code&gt;, which is deprecated and was removed from the docs. However, if you really need it, it was kept here.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5519b26afd29019553644d95f3657c0b4ef9b9ea" translate="yes" xml:space="preserve">
          <source>The only way to call beforeDestroy/afterDestroy hooks are on associations with &lt;code&gt;onDelete: 'cascade'&lt;/code&gt; and the option &lt;code&gt;hooks: true&lt;/code&gt;. For instance:</source>
          <target state="translated">Единственный способ вызвать хуки beforeDestroy / afterDestroy - это ассоциации с &lt;code&gt;onDelete: 'cascade'&lt;/code&gt; и опцией &lt;code&gt;hooks: true&lt;/code&gt; . Например:</target>
        </trans-unit>
        <trans-unit id="724c685e5b43aa161bca59f04db31535392db688" translate="yes" xml:space="preserve">
          <source>The operators &lt;code&gt;Op.and&lt;/code&gt;, &lt;code&gt;Op.or&lt;/code&gt; and &lt;code&gt;Op.not&lt;/code&gt; can be used to create arbitrarily complex nested logical comparisons.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c69a63575e1fb55daa7f9a2dfde0c6053bf26ef6" translate="yes" xml:space="preserve">
          <source>The options object that you pass to &lt;code&gt;findAndCountAll&lt;/code&gt; is the same as for &lt;code&gt;findAll&lt;/code&gt; (described below).</source>
          <target state="translated">Объект параметров, который вы передаете в &lt;code&gt;findAndCountAll&lt;/code&gt; , такой же, как и для &lt;code&gt;findAll&lt;/code&gt; (описан ниже).</target>
        </trans-unit>
        <trans-unit id="a45202cbcffdecef1bfb35227b61eaaaeef09d0e" translate="yes" xml:space="preserve">
          <source>The options passed to Model.destroy in addition to truncate</source>
          <target state="translated">Опции,переданные в Model.destroy в дополнение к усечённым</target>
        </trans-unit>
        <trans-unit id="3f3dcd71f3878dfff6b16011edbaab2ef1e64db1" translate="yes" xml:space="preserve">
          <source>The options passed to each call to Model.drop</source>
          <target state="translated">Опции,передаваемые при каждом вызове в Model.drop.</target>
        </trans-unit>
        <trans-unit id="3dec20cfd23a77b69ba97c865d465d72327c175a" translate="yes" xml:space="preserve">
          <source>The options to be applied in this case are the same from the One-To-One case. For example, to change the name of the foreign key and make sure that the relationship is mandatory, we can do:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96ed4b15b5460f305663e5c7e52681e46c195851" translate="yes" xml:space="preserve">
          <source>The order in which the association is defined is relevant. In other words, the order matters, for the four cases. In all examples above, &lt;code&gt;A&lt;/code&gt; is called the &lt;strong&gt;source&lt;/strong&gt; model and &lt;code&gt;B&lt;/code&gt; is called the &lt;strong&gt;target&lt;/strong&gt; model. This terminology is important.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b843160b62331068336d27cc8d45b2412cdff08d" translate="yes" xml:space="preserve">
          <source>The parameters for the sql that triggered the error</source>
          <target state="translated">Параметры квадратного метра,который вызвал ошибку.</target>
        </trans-unit>
        <trans-unit id="9173a469193229c3d70ef16f8e6729295bde9416" translate="yes" xml:space="preserve">
          <source>The part about players is trickier. We note that the set of players that form a team depends not only on the team (obviously), but also on which game is being considered. Therefore, we don't want a Many-to-Many relationship between Player and Team. We also don't want a Many-to-Many relationship between Player and Game. Instead of associating a Player to any of those models, what we need is an association between a Player and something like a &lt;em&gt;&quot;team-game pair constraint&quot;&lt;/em&gt;, since it is the pair (team plus game) that defines which players belong there. So what we are looking for turns out to be precisely the junction model, GameTeam, itself! And, we note that, since a given &lt;em&gt;game-team pair&lt;/em&gt; specifies many players, and on the other hand that the same player can participate of many &lt;em&gt;game-team pairs&lt;/em&gt;, we need a Many-to-Many relationship between Player and GameTeam!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7e618cc7e765bd054110930a05bbf6f5cafdacb" translate="yes" xml:space="preserve">
          <source>The passed &lt;code&gt;queryInterface&lt;/code&gt; object can be used to modify the database. The &lt;code&gt;Sequelize&lt;/code&gt; object stores the available data types such as &lt;code&gt;STRING&lt;/code&gt; or &lt;code&gt;INTEGER&lt;/code&gt;. Function &lt;code&gt;up&lt;/code&gt; or &lt;code&gt;down&lt;/code&gt; should return a &lt;code&gt;Promise&lt;/code&gt;. Let's look at an example:</source>
          <target state="translated">Принятый &lt;code&gt;queryInterface&lt;/code&gt; объект может быть использован для изменения базы данных. Объект &lt;code&gt;Sequelize&lt;/code&gt; хранит доступные типы данных, такие как &lt;code&gt;STRING&lt;/code&gt; или &lt;code&gt;INTEGER&lt;/code&gt; . Функция &lt;code&gt;up&lt;/code&gt; или &lt;code&gt;down&lt;/code&gt; должна возвращать &lt;code&gt;Promise&lt;/code&gt; . Давайте посмотрим на пример:</target>
        </trans-unit>
        <trans-unit id="d2533745943844afbedf7eb8255a5190f883bdec" translate="yes" xml:space="preserve">
          <source>The password which is used to authenticate against the database.</source>
          <target state="translated">Пароль,который используется для аутентификации по базе данных.</target>
        </trans-unit>
        <trans-unit id="e964b1bc1afa7e133edcfa208521202aaf1336e1" translate="yes" xml:space="preserve">
          <source>The password which is used to authenticate against the database. Supports SQLCipher encryption for SQLite.</source>
          <target state="translated">Пароль,который используется для аутентификации по базе данных.Поддерживает шифрование SQLCipher для SQLite.</target>
        </trans-unit>
        <trans-unit id="d1f9da31741290e9b21dee89de285e5d49b6e9b8" translate="yes" xml:space="preserve">
          <source>The path to be checked for error items</source>
          <target state="translated">Путь,который необходимо проверить на наличие ошибок</target>
        </trans-unit>
        <trans-unit id="e666a85eaccb1faddd6ef50cb44be68ea6f3ce05" translate="yes" xml:space="preserve">
          <source>The path to the file that holds the model you want to import. If the part is relative, it will be resolved relatively to the calling file</source>
          <target state="translated">Путь к файлу,содержащему модель,которую вы хотите импортировать.Если деталь относительна,то она будет разрешена относительно вызывающего файла</target>
        </trans-unit>
        <trans-unit id="52ec3b98cef1dcaeea55cc63084c0f82417242c6" translate="yes" xml:space="preserve">
          <source>The polymorphic association can be implemented with an &lt;em&gt;association scope&lt;/em&gt; :</source>
          <target state="translated">Полиморфная ассоциация может быть реализована с &lt;em&gt;областью ассоциации&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="ccdd83d9259d4f504d2c47076b673df711befe8f" translate="yes" xml:space="preserve">
          <source>The port of the relational database.</source>
          <target state="translated">Порт реляционной базы данных.</target>
        </trans-unit>
        <trans-unit id="c2240c834a7879a02a685d3c4f2fb6c22d8c9821" translate="yes" xml:space="preserve">
          <source>The possible choices are &lt;code&gt;RESTRICT&lt;/code&gt;, &lt;code&gt;CASCADE&lt;/code&gt;, &lt;code&gt;NO ACTION&lt;/code&gt;, &lt;code&gt;SET DEFAULT&lt;/code&gt; and &lt;code&gt;SET NULL&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a65ac5ab95179f410b68d283a2ce4caa4e100b0" translate="yes" xml:space="preserve">
          <source>The possible isolations levels to use when starting a transaction:</source>
          <target state="translated">Возможные уровни изоляции для использования при запуске транзакции:</target>
        </trans-unit>
        <trans-unit id="cadc5244d3fbd7d24b1c5864d52995cd667e11c7" translate="yes" xml:space="preserve">
          <source>The previous example can be extended to support an association alias.</source>
          <target state="translated">Предыдущий пример может быть расширен для поддержки псевдонима ассоциации.</target>
        </trans-unit>
        <trans-unit id="0e7860e1e9fe6157f068d6e05ea4c9ba937f1820" translate="yes" xml:space="preserve">
          <source>The promise fulfills if and only if validation successful; otherwise it rejects an Error instance containing { field name : [error msgs] } entries.</source>
          <target state="translated">Обещание выполняется,если и только если проверка прошла успешно;в противном случае оно отвергает экземпляр Error,содержащий{имя поля:[ошибка msgs]}записей.</target>
        </trans-unit>
        <trans-unit id="c7345c3a97b1369d2ea2bf0cee0e1778a424ab23" translate="yes" xml:space="preserve">
          <source>The promise returns an array with one or two elements. The first element is always the number of affected rows, while the second element is the actual affected rows (only supported in postgres with &lt;code&gt;options.returning&lt;/code&gt; true).</source>
          <target state="translated">Обещание возвращает массив с одним или двумя элементами. Первый элемент - это всегда количество затронутых строк, а второй элемент - это фактически затронутые строки (поддерживается только в postgres с &lt;code&gt;options.returning&lt;/code&gt; true).</target>
        </trans-unit>
        <trans-unit id="b66998033b01ad0f71a1f99fd1205004d74f54f7" translate="yes" xml:space="preserve">
          <source>The protocol of the relational database.</source>
          <target state="translated">Протокол реляционной базы данных.</target>
        </trans-unit>
        <trans-unit id="9b65629117d86e6ea7f1be1d190a811c13b665fb" translate="yes" xml:space="preserve">
          <source>The query above will only count users who have an active profile, because &lt;code&gt;required&lt;/code&gt; is implicitly set to true when you add a where clause to the include.</source>
          <target state="translated">В приведенном выше запросе будут учитываться только пользователи, у которых есть активный профиль, потому что &lt;code&gt;required&lt;/code&gt; неявно установлено в true, когда вы добавляете предложение where в include.</target>
        </trans-unit>
        <trans-unit id="f17651b8defa7a688a238ee9c850c88d216bbd4b" translate="yes" xml:space="preserve">
          <source>The query above will return all users, and all their instruments, but only those teachers associated with &lt;code&gt;Woodstock Music School&lt;/code&gt;.</source>
          <target state="translated">Приведенный выше запрос вернет всех пользователей и все их инструменты, но только тех учителей, которые связаны с &lt;code&gt;Woodstock Music School&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="882e95417cd6d361e8a21202698fdccdb38d7585" translate="yes" xml:space="preserve">
          <source>The relation between &lt;code&gt;tasks&lt;/code&gt; and &lt;code&gt;users&lt;/code&gt; model injects the &lt;code&gt;userId&lt;/code&gt; foreign key on &lt;code&gt;tasks&lt;/code&gt; table, and marks it as a reference to the &lt;code&gt;users&lt;/code&gt; table. By default &lt;code&gt;userId&lt;/code&gt; will be set to &lt;code&gt;NULL&lt;/code&gt; if the referenced user is deleted, and updated if the id of the &lt;code&gt;userId&lt;/code&gt; updated. These options can be overridden by passing &lt;code&gt;onUpdate&lt;/code&gt; and &lt;code&gt;onDelete&lt;/code&gt; options to the association calls. The validation options are &lt;code&gt;RESTRICT, CASCADE, NO ACTION, SET DEFAULT, SET NULL&lt;/code&gt;.</source>
          <target state="translated">Связь между &lt;code&gt;tasks&lt;/code&gt; и моделью &lt;code&gt;users&lt;/code&gt; вводит внешний ключ &lt;code&gt;userId&lt;/code&gt; в таблицу &lt;code&gt;tasks&lt;/code&gt; и отмечает его как ссылку на таблицу &lt;code&gt;users&lt;/code&gt; . По умолчанию для &lt;code&gt;userId&lt;/code&gt; будет установлено &lt;code&gt;NULL&lt;/code&gt; если указанный пользователь будет удален, и обновится, если идентификатор &lt;code&gt;userId&lt;/code&gt; обновлен. Эти параметры можно переопределить, передав параметры &lt;code&gt;onUpdate&lt;/code&gt; и &lt;code&gt;onDelete&lt;/code&gt; вызовам ассоциации. Возможные варианты проверки: &lt;code&gt;RESTRICT, CASCADE, NO ACTION, SET DEFAULT, SET NULL&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c186d6d0cc96ba2977a2565353a1571ae5cb4b2f" translate="yes" xml:space="preserve">
          <source>The reload call generates a &lt;code&gt;SELECT&lt;/code&gt; query to get the up-to-date data from the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4da4124847d2aa2a17ae9f754e707b273268937" translate="yes" xml:space="preserve">
          <source>The result is essentially the same! This is because &lt;code&gt;User.hasMany(Grant)&lt;/code&gt; and &lt;code&gt;Profile.hasMany(Grant)&lt;/code&gt; will automatically add the &lt;code&gt;userId&lt;/code&gt; and &lt;code&gt;profileId&lt;/code&gt; columns to &lt;code&gt;Grant&lt;/code&gt;, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fae2fbc67eab57ec86460fea4616c6de11c88b0" translate="yes" xml:space="preserve">
          <source>The same idea can also be applied to &lt;code&gt;belongsToMany&lt;/code&gt; relationships. However, unlike the other situations, in which we have only one foreign key involved, the &lt;code&gt;belongsToMany&lt;/code&gt; relationship involves two foreign keys which are kept on an extra table (the junction table).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b9f7f5e66de32f9f00b194b0d793b58686e0548" translate="yes" xml:space="preserve">
          <source>The same merge logic applies when passing a find object directly to &lt;code&gt;findAll&lt;/code&gt; (and similar finders) on a scoped model:</source>
          <target state="translated">Та же самая логика слияния применяется при передаче объекта поиска напрямую &lt;code&gt;findAll&lt;/code&gt; (и подобным средствам поиска ) в модели с ограниченной областью видимости:</target>
        </trans-unit>
        <trans-unit id="17776f8e98a378c253585cba5342512d2a5a5b0d" translate="yes" xml:space="preserve">
          <source>The same ones from &lt;code&gt;Foo.hasMany(Bar)&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d71483dbaaff7debf540d59eff1625fd50660647" translate="yes" xml:space="preserve">
          <source>The same ones from &lt;code&gt;Foo.hasOne(Bar)&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97ab6aa4ba7990a147bb964cdd7e87d1f62efe69" translate="yes" xml:space="preserve">
          <source>The schema that the tables should be created in. This can be overridden for each table in sequelize.define</source>
          <target state="translated">Схема,в которой должны быть созданы таблицы.Это может быть переопределено для каждой таблицы в файле sequelize.define.</target>
        </trans-unit>
        <trans-unit id="c43a2f21b215e63de5816eae94cb4b78d64ee9df" translate="yes" xml:space="preserve">
          <source>The scope(s) to apply. Scopes can either be passed as consecutive arguments, or as an array of arguments. To apply simple scopes and scope functions with no arguments, pass them as strings. For scope function, pass an object, with a &lt;code&gt;method&lt;/code&gt; property. The value can either be a string, if the method does not take any arguments, or an array, where the first element is the name of the method, and consecutive elements are arguments to that method. Pass null to remove all scopes, including the default.</source>
          <target state="translated">Область применения. Области могут быть переданы как последовательные аргументы или как массив аргументов. Чтобы применить простые области и функции области без аргументов, передайте их как строки. Для функции области действия передайте объект со свойством &lt;code&gt;method&lt;/code&gt; . Значение может быть либо строкой, если метод не принимает никаких аргументов, либо массивом, где первый элемент - это имя метода, а последовательные элементы являются аргументами этого метода. Передайте null, чтобы удалить все области, включая значения по умолчанию.</target>
        </trans-unit>
        <trans-unit id="f2d4b0658a321b27ba4fa154149f819df1aa69b7" translate="yes" xml:space="preserve">
          <source>The setup for this goes as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff5d3a27c04e6d2799dc75afdbaf7f4959931871" translate="yes" xml:space="preserve">
          <source>The simplest way to define the Many-to-Many relationship is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e118bc1e681bc034058a8bda4bc03316fe86fe78" translate="yes" xml:space="preserve">
          <source>The socket path must start with &lt;code&gt;/&lt;/code&gt;.</source>
          <target state="translated">Путь к сокету должен начинаться с &lt;code&gt;/&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9172e13521a1aa7d3a6e044b2d41f68f8949091b" translate="yes" xml:space="preserve">
          <source>The solution is to tell Sequelize to include both Images and Videos, so that our &lt;code&gt;afterFind&lt;/code&gt; hook defined above will do the work, automatically adding the &lt;code&gt;commentable&lt;/code&gt; field to the instance object, providing the abstraction we want.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a2ca207850bf8f92ef8c79ea6faebe0a9682e77" translate="yes" xml:space="preserve">
          <source>The source key is the attribute on the source model that the foreign key attribute on the target model points to. By default the source key for a &lt;code&gt;hasOne&lt;/code&gt; relation will be the source model's primary attribute. To use a custom attribute, use the &lt;code&gt;sourceKey&lt;/code&gt; option.</source>
          <target state="translated">Исходный ключ - это атрибут исходной модели, на который указывает атрибут внешнего ключа целевой модели. По умолчанию ключ источника для отношения &lt;code&gt;hasOne&lt;/code&gt; будет первичным атрибутом исходной модели. Чтобы использовать настраиваемый атрибут, используйте параметр &lt;code&gt;sourceKey&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f620901a19bb7656abbdf382102fb74721c6995b" translate="yes" xml:space="preserve">
          <source>The specified dialect.</source>
          <target state="translated">Указанный диалект.</target>
        </trans-unit>
        <trans-unit id="55da2b2d35bc1e7629eadbe7b1ec3caa26f12e10" translate="yes" xml:space="preserve">
          <source>The success handler is passed an array of instances, but please notice that these may not completely represent the state of the rows in the DB. This is because MySQL and SQLite do not make it easy to obtain back automatically generated IDs and other default values in a way that can be mapped to multiple records. To obtain Instances for the newly created values, you will need to query for them again.</source>
          <target state="translated">Успешному обработчику передается массив экземпляров,но обратите внимание,что они могут не полностью отражать состояние строк в БД.Это связано с тем,что MySQL и SQLite не позволяют легко получить обратно автоматически сгенерированные ID и другие значения по умолчанию таким образом,чтобы их можно было сопоставить с несколькими записями.Чтобы получить Instances для вновь создаваемых значений,вам нужно будет запросить их еще раз.</target>
        </trans-unit>
        <trans-unit id="ca8c1cb986bae7a03abb7e55f466bf12bd7f5b9d" translate="yes" xml:space="preserve">
          <source>The success handler will always receive an object with two properties:</source>
          <target state="translated">Обработчик успеха всегда получит объект с двумя свойствами:</target>
        </trans-unit>
        <trans-unit id="743821f331d9ff4320288f9dfa31fda644083915" translate="yes" xml:space="preserve">
          <source>The syntax for grouping and ordering are equal, except that grouping does not accept a direction as last argument of the array (there is no &lt;code&gt;ASC&lt;/code&gt;, &lt;code&gt;DESC&lt;/code&gt;, &lt;code&gt;NULLS FIRST&lt;/code&gt;, etc).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34579639c463106f1a03eee66559cab728f1641b" translate="yes" xml:space="preserve">
          <source>The syntax for grouping and ordering are equal, so below it is only explained with a single example for group, and the rest for order. Everything you see below can also be done for group</source>
          <target state="translated">Синтаксис для группировки и заказа одинаков,поэтому ниже он объясняется только одним примером для группы,а остальные-порядком.Все,что вы видите ниже,также может быть сделано для группы</target>
        </trans-unit>
        <trans-unit id="58b66076bf28d404e11394816918b9debbdb35f5" translate="yes" xml:space="preserve">
          <source>The table columns are defined by the hash that is given as the first argument. Each attribute of the hash represents a column.</source>
          <target state="translated">Столбцы таблицы определяются хэшем,который дается в качестве первого аргумента.Каждый атрибут хэша представляет собой столбец.</target>
        </trans-unit>
        <trans-unit id="0333c25506d7b965b09277d6ee324cf0849f0c73" translate="yes" xml:space="preserve">
          <source>The table columns are defined by the object that is given as the second argument. Each key of the object represents a column</source>
          <target state="translated">Столбцы таблицы определяются объектом,который приводится в качестве второго аргумента.Каждый ключ объекта представляет собой столбец</target>
        </trans-unit>
        <trans-unit id="1b918538dbc34fd935439f872ac510ed2a15c0e0" translate="yes" xml:space="preserve">
          <source>The target key is the column on the target model that the foreign key column on the source model points to. By default the target key for a belongsTo relation will be the target model's primary key. To define a custom column, use the &lt;code&gt;targetKey&lt;/code&gt; option.</source>
          <target state="translated">Целевой ключ - это столбец целевой модели, на который указывает столбец внешнего ключа исходной модели. По умолчанию целевой ключ для отношения принадлежитTo будет первичным ключом целевой модели. Чтобы определить настраиваемый столбец, используйте параметр &lt;code&gt;targetKey&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="491b59fdd8f66fe0f7f13309b9f00701386dcec7" translate="yes" xml:space="preserve">
          <source>The target model</source>
          <target state="translated">Целевая модель</target>
        </trans-unit>
        <trans-unit id="c366e237ccd3fa7a5cf3767dcbd191713159c4d1" translate="yes" xml:space="preserve">
          <source>The time interval, in milliseconds, after which sequelize-pool will remove idle connections.</source>
          <target state="translated">Интервал времени в миллисекундах,по истечении которого секвелизация-пул удалит незадействованные соединения.</target>
        </trans-unit>
        <trans-unit id="49180f7e5b04ba9d5019142b532f40f579f312c3" translate="yes" xml:space="preserve">
          <source>The timezone used when converting a date from the database into a JavaScript date. The timezone is also used to SET TIMEZONE when connecting to the server, to ensure that the result of NOW, CURRENT_TIMESTAMP and other time related functions have in the right timezone. For best cross platform performance use the format +/-HH:MM. Will also accept string versions of timezones used by moment.js (e.g. 'America/Los_Angeles'); this is useful to capture daylight savings time changes.</source>
          <target state="translated">Часовой пояс,используемый при преобразовании даты из базы данных в дату на JavaScript.Часовой пояс также используется для SET TIMEZONE при подключении к серверу,чтобы убедиться,что результат работы функции CURRENT_TIMESTAMP и других функций,связанных с временем,находится в нужном часовом поясе.Для наилучшей работы кросс-платформы используйте формат +/-HH:MM.Будет также принята строковая версия часовых поясов,используемая в moment.js (например,'America/Los_Angeles');это полезно для фиксации изменений в летнее время.</target>
        </trans-unit>
        <trans-unit id="22d5c59623d5082e86fcb983d4ab3c203156259b" translate="yes" xml:space="preserve">
          <source>The transaction object is used to identify a running transaction.</source>
          <target state="translated">Объект транзакции используется для идентификации выполняющейся транзакции.</target>
        </trans-unit>
        <trans-unit id="f0edfec2d8f7bf8e0afc41f8155d0fe4c8968331" translate="yes" xml:space="preserve">
          <source>The transaction object is used to identify a running transaction. It is created by calling &lt;code&gt;Sequelize.transaction()&lt;/code&gt;. To run a query under a transaction, you should pass the transaction in the options object.</source>
          <target state="translated">Объект транзакции используется для идентификации выполняющейся транзакции. Он создается путем вызова &lt;code&gt;Sequelize.transaction()&lt;/code&gt; . Чтобы выполнить запрос в рамках транзакции, вы должны передать транзакцию в объекте параметров.</target>
        </trans-unit>
        <trans-unit id="1beb1efd0f8f2a80414557b5c568ecb7d3c36cb7" translate="yes" xml:space="preserve">
          <source>The transaction that the query should be executed under</source>
          <target state="translated">Транзакция,в рамках которой должен быть выполнен запрос</target>
        </trans-unit>
        <trans-unit id="d41deada676c3e1626e2f4d0dfcd18112ca6f8c4" translate="yes" xml:space="preserve">
          <source>The trick to deciding between &lt;code&gt;sourceKey&lt;/code&gt; and &lt;code&gt;targetKey&lt;/code&gt; is just to remember where each relationship places its foreign key. As mentioned in the beginning of this guide:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7eaaa527b737eaa8f46f1460009ff30ab80523a" translate="yes" xml:space="preserve">
          <source>The type of query you are executing. The query type affects how results are formatted before they are passed back. The type is a string, but &lt;code&gt;Sequelize.QueryTypes&lt;/code&gt; is provided as convenience shortcuts.</source>
          <target state="translated">Тип выполняемого запроса. Тип запроса влияет на форматирование результатов перед их передачей обратно. Типом является строка, но &lt;code&gt;Sequelize.QueryTypes&lt;/code&gt; предоставляется как удобные ярлыки.</target>
        </trans-unit>
        <trans-unit id="6ac3e6aea5927228f941582e70503ef95b61da85" translate="yes" xml:space="preserve">
          <source>The type of the association.</source>
          <target state="translated">Тип ассоциации.</target>
        </trans-unit>
        <trans-unit id="c3a22137eb7f0a4c6f818bf5181fd51cda693d63" translate="yes" xml:space="preserve">
          <source>The type of the association. One of &lt;code&gt;HasMany&lt;/code&gt;, &lt;code&gt;BelongsTo&lt;/code&gt;, &lt;code&gt;HasOne&lt;/code&gt;, &lt;code&gt;BelongsToMany&lt;/code&gt;</source>
          <target state="translated">Тип ассоциации. Один из &lt;code&gt;HasMany&lt;/code&gt; , &lt;code&gt;BelongsTo&lt;/code&gt; , &lt;code&gt;HasOne&lt;/code&gt; , &lt;code&gt;BelongsToMany&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a84720b6e6d1abe177c213ae349687b9ecbd326e" translate="yes" xml:space="preserve">
          <source>The type of the result. If &lt;code&gt;field&lt;/code&gt; is a field in this Model, the default will be the type of that field, otherwise defaults to float.</source>
          <target state="translated">Тип результата. Если &lt;code&gt;field&lt;/code&gt; является полем в этой модели, по умолчанию будет использоваться тип этого поля, в противном случае по умолчанию используется float.</target>
        </trans-unit>
        <trans-unit id="183dc3fd6b319dae15e0ede29af243c273ee8685" translate="yes" xml:space="preserve">
          <source>The type to cast it to</source>
          <target state="translated">Тип,к которому его можно отнести</target>
        </trans-unit>
        <trans-unit id="0ba8f3d4b3e41ec8a080d8bbbadbfdd6e148ee51" translate="yes" xml:space="preserve">
          <source>The type/origin of the validation error</source>
          <target state="translated">Тип/признак ошибки валидации</target>
        </trans-unit>
        <trans-unit id="f8ec51192e9656a6fac1fb91d12062237b9f0ba6" translate="yes" xml:space="preserve">
          <source>The typings for Sequelize v5 allowed you to define models without specifying types for the attributes. This is still possible for backwards compatibility and for cases where you feel strict typing for attributes isn't worth it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f59151a8263819bcee18e653895495499c38cf8b" translate="yes" xml:space="preserve">
          <source>The underlying connector library used by Sequelize for MSSQL is the &lt;a href=&quot;https://www.npmjs.com/package/tedious&quot;&gt;tedious&lt;/a&gt; npm package (version 6.0.0 or above).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7207b0378afe396e6f5e35ca21157ffa224f40f" translate="yes" xml:space="preserve">
          <source>The underlying connector library used by Sequelize for MariaDB is the &lt;a href=&quot;https://www.npmjs.com/package/mariadb&quot;&gt;mariadb&lt;/a&gt; npm package.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e59f55b7e30b0277f55f16d71c8f1982e4cf5bf" translate="yes" xml:space="preserve">
          <source>The underlying connector library used by Sequelize for MySQL is the &lt;a href=&quot;https://www.npmjs.com/package/mysql2&quot;&gt;mysql2&lt;/a&gt; npm package (version 1.5.2 or higher).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c14bdccd980afd199675aec517c9b3d8aeb09fba" translate="yes" xml:space="preserve">
          <source>The underlying connector library used by Sequelize for PostgreSQL is the &lt;a href=&quot;https://www.npmjs.com/package/pg&quot;&gt;pg&lt;/a&gt; npm package (version 7.0.0 or above). The module &lt;a href=&quot;https://www.npmjs.com/package/pg-hstore&quot;&gt;pg-hstore&lt;/a&gt; is also necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73c7fb73bb882721d7262d6fcfc253158b6dccc1" translate="yes" xml:space="preserve">
          <source>The underlying connector library used by Sequelize for SQLite is the &lt;a href=&quot;https://www.npmjs.com/package/sqlite3&quot;&gt;sqlite3&lt;/a&gt; npm package (version 4.0.0 or above).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09404a13c8e60b446036809cf1059fb671f5a97e" translate="yes" xml:space="preserve">
          <source>The usage of &lt;code&gt;Model.bulkCreate&lt;/code&gt; is very similar to &lt;code&gt;Model.create&lt;/code&gt;, by receiving an array of objects instead of a single object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5888d90beb856504f26606caf21620cfa8966739" translate="yes" xml:space="preserve">
          <source>The username which is used to authenticate against the database.</source>
          <target state="translated">Имя пользователя,которое используется для аутентификации по базе данных.</target>
        </trans-unit>
        <trans-unit id="ef65704c728b311b6675bea469007ef92576b56c" translate="yes" xml:space="preserve">
          <source>The value for the default constraint</source>
          <target state="translated">Значение для ограничения по умолчанию</target>
        </trans-unit>
        <trans-unit id="87fb8dc5fc6bc1f9c662d78e53814299d9b4d67e" translate="yes" xml:space="preserve">
          <source>The value of the desired instance's primary key.</source>
          <target state="translated">Значение первичного ключа нужного экземпляра.</target>
        </trans-unit>
        <trans-unit id="2e4d8e128c9a5a1ffd3c715a791ace7b6e2f0e51" translate="yes" xml:space="preserve">
          <source>The value that generated the error</source>
          <target state="translated">Значение,которое вызвало ошибку</target>
        </trans-unit>
        <trans-unit id="281466e75fbe944a95c1f47673ac3a4b4a7aac99" translate="yes" xml:space="preserve">
          <source>The value to cast</source>
          <target state="translated">Значение для броска</target>
        </trans-unit>
        <trans-unit id="4becd373a9abdf90daf7afd7952190cfbdb6a722" translate="yes" xml:space="preserve">
          <source>The values of the attempted update</source>
          <target state="translated">Значения попыток обновления</target>
        </trans-unit>
        <trans-unit id="8879fe3df52b3bfc453dc46fb7061554a846b88a" translate="yes" xml:space="preserve">
          <source>Then you can just expose file with proper environment variables.</source>
          <target state="translated">Тогда вы можете просто выставить файл с соответствующими переменными окружения.</target>
        </trans-unit>
        <trans-unit id="2ab3d76e9b6d1f1dba9900a24878ef166a440a83" translate="yes" xml:space="preserve">
          <source>Then, Sequelize will execute the callback you provided, passing &lt;code&gt;t&lt;/code&gt; into it</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43f2635dbec46649203b3c3aa4d04bf38df84e6b" translate="yes" xml:space="preserve">
          <source>There are currently three ways to programmatically add hooks:</source>
          <target state="translated">В настоящее время существует три способа программного добавления крючков:</target>
        </trans-unit>
        <trans-unit id="64efa8d929a0e387fda225dc8dd14691e1dd9946" translate="yes" xml:space="preserve">
          <source>There are four cases to consider:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="851baae215836b6fa57898e6c599ad9d98cb1e76" translate="yes" xml:space="preserve">
          <source>There are other data types, covered in a &lt;a href=&quot;other-data-types&quot;&gt;separate guide&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c7e03a8c32ed1f6358530c8e620ba1250325a0a" translate="yes" xml:space="preserve">
          <source>There are several ways to update and add new associations. Continuing with our example of users and pictures:</source>
          <target state="translated">Существует несколько способов обновления и добавления новых ассоциаций.Продолжая наш пример с пользователями и фотографиями:</target>
        </trans-unit>
        <trans-unit id="a36b1d5200c1e31ac985860d6dd0f09141f565f9" translate="yes" xml:space="preserve">
          <source>There are three types of storage that you can use: &lt;code&gt;sequelize&lt;/code&gt;, &lt;code&gt;json&lt;/code&gt;, and &lt;code&gt;none&lt;/code&gt;.</source>
          <target state="translated">Вы можете использовать три типа хранилища: &lt;code&gt;sequelize&lt;/code&gt; , &lt;code&gt;json&lt;/code&gt; и &lt;code&gt;none&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7925550eb88bb7fc701946fe22cacc5eac7b4285" translate="yes" xml:space="preserve">
          <source>There are three ways to specify a different name for the foreign key:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27fdccefc377e17f5a26fc7558b9e7867964fb5d" translate="yes" xml:space="preserve">
          <source>There is also a method for counting database objects:</source>
          <target state="translated">Существует также метод подсчета объектов базы данных:</target>
        </trans-unit>
        <trans-unit id="cd8a91416dbf4cf3a9c701869ca2f37c200a92ff" translate="yes" xml:space="preserve">
          <source>There may be times when you want to generate your own UUID conforming to some other algorithm. This is accomplished using the defaultValue property as well, but instead of specifying one of the supplied UUID types, you return a value from a function.</source>
          <target state="translated">Могут быть моменты,когда вы захотите сгенерировать свой собственный UUID,соответствующий какому-либо другому алгоритму.Это выполняется также с помощью свойства Value по умолчанию,но вместо указания одного из поставляемых типов UUID,вы возвращаете значение из функции.</target>
        </trans-unit>
        <trans-unit id="55682363d7e0f2ffc9293ceaaddad46cafb5c483" translate="yes" xml:space="preserve">
          <source>Therefore, one can just follow the &lt;a href=&quot;http://geojson.org/geojson-spec.html&quot;&gt;GeoJSON spec&lt;/a&gt; for handling geometry objects. See the following examples:</source>
          <target state="translated">Следовательно, можно просто следовать &lt;a href=&quot;http://geojson.org/geojson-spec.html&quot;&gt;спецификации GeoJSON&lt;/a&gt; для обработки геометрических объектов. См. Следующие примеры:</target>
        </trans-unit>
        <trans-unit id="0962924cd772632d3a79d10d697dfb40d33618c5" translate="yes" xml:space="preserve">
          <source>Therefore, to bring full power to Sequelize usage, we usually setup the relationship in pairs, so that both models get to &lt;em&gt;know about it&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2657c1f39eeba3b792575763601c104e3c91a0f9" translate="yes" xml:space="preserve">
          <source>These are the main ideas involved in each type of association. However, these relationships are often used in pairs, in order to enable better usage with Sequelize. This will be seen later on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02cc698e9e580c5b08002ced8ca01c4ddd96bbfc" translate="yes" xml:space="preserve">
          <source>These four scopes can be deeply merged easily, for example by calling &lt;code&gt;Foo.scope('includeEverything', 'limitedBars', 'limitedBazs', 'excludeBazName').findAll()&lt;/code&gt;, which would be entirely equivalent to calling the following:</source>
          <target state="translated">Эти четыре области можно легко объединить, например, вызвав &lt;code&gt;Foo.scope('includeEverything', 'limitedBars', 'limitedBazs', 'excludeBazName').findAll()&lt;/code&gt; , что будет полностью эквивалентно вызову следующего:</target>
        </trans-unit>
        <trans-unit id="af59fc7567d7e359f06c4a1e994f367061e3a2b5" translate="yes" xml:space="preserve">
          <source>These hooks can be useful if you need to asynchronously obtain database credentials, or need to directly access the low-level database connection after it has been created.</source>
          <target state="translated">Эти крючки могут быть полезны,если вам нужно асинхронно получить учетные данные базы данных,или вам нужен прямой доступ к низкоуровневому соединению с базой данных после ее создания.</target>
        </trans-unit>
        <trans-unit id="5c2d955f8a133fd17bc66cfb7a3733b5cd31863d" translate="yes" xml:space="preserve">
          <source>These hooks may &lt;em&gt;only&lt;/em&gt; be declared as a permanent global hook, as the connection pool is shared by all models.</source>
          <target state="translated">Эти перехватчики могут быть объявлены &lt;em&gt;только&lt;/em&gt; как постоянные глобальные перехватчики, поскольку пул соединений используется всеми моделями совместно.</target>
        </trans-unit>
        <trans-unit id="1c389d6b65a20f268408819e6a860c1a7c78109f" translate="yes" xml:space="preserve">
          <source>These options are merged with the default define options provided to the Sequelize constructor</source>
          <target state="translated">Эти опции объединены с опциями определения по умолчанию,предоставляемыми конструктору Sequelize</target>
        </trans-unit>
        <trans-unit id="5c4f7d575b88a1fe31445dc78190b51d6048577f" translate="yes" xml:space="preserve">
          <source>These options are merged with the default define options provided to the Sequelize constructor and passed to Model.init()</source>
          <target state="translated">Эти опции объединяются с опциями определения по умолчанию,предоставляемыми конструктору Sequelize,и передаются в Model.init().</target>
        </trans-unit>
        <trans-unit id="c4e9b53fba404e3735d3402a42588fc4e405cb17" translate="yes" xml:space="preserve">
          <source>These scopes are automatically applied when using the association functions (as explained in the &lt;a href=&quot;association-scopes&quot;&gt;Association Scopes&lt;/a&gt; guide). Some examples are below, with their generated SQL statements:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae91c6724ff8d4a935d5cec193d3468b859c4a2b" translate="yes" xml:space="preserve">
          <source>These scopes are automatically applied when using the association functions. Some examples are below, with their generated SQL statements:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="233a7442b9d2f7ba3bc0234cc5de52888d02b14b" translate="yes" xml:space="preserve">
          <source>These three calls will cause Sequelize to automatically add foreign keys to the appropriate models (unless they are already present).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efc3f625365404331c93e5af548228569c63e68d" translate="yes" xml:space="preserve">
          <source>They all accept an options object as a second parameter (optional for the first three, mandatory for &lt;code&gt;belongsToMany&lt;/code&gt; containing at least the &lt;code&gt;through&lt;/code&gt; property):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5072453b0e64084c89bc87592d919214af9d10e1" translate="yes" xml:space="preserve">
          <source>Third, you can define an object containing fields and its decrement values.</source>
          <target state="translated">В-третьих,можно определить объект,содержащий поля и его значения декремента.</target>
        </trans-unit>
        <trans-unit id="bcc27019080f65da23ea2d1c9787f788f23d98f5" translate="yes" xml:space="preserve">
          <source>Third, you can define an object containing fields and its increment values.</source>
          <target state="translated">В-третьих,можно определить объект,содержащий поля и значения приращения.</target>
        </trans-unit>
        <trans-unit id="4e0152b992d8dcce6cbd8bc1cda5d54dde247ffb" translate="yes" xml:space="preserve">
          <source>This adds a default hook to all models, which is run if the model does not define its own &lt;code&gt;beforeCreate&lt;/code&gt; hook:</source>
          <target state="translated">Это добавляет ловушку по умолчанию для всех моделей, которая запускается, если модель не определяет свой собственный &lt;code&gt;beforeCreate&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="487b5e71bbadbf2ea46d80c788e9c588cc7bec5d" translate="yes" xml:space="preserve">
          <source>This automatically added the columns &lt;code&gt;userId&lt;/code&gt; and &lt;code&gt;profileId&lt;/code&gt; to the &lt;code&gt;Grant&lt;/code&gt; model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7b5d866c9de484085dd494f29a298183012d8fc" translate="yes" xml:space="preserve">
          <source>This behavior can also be defined globally for the sequelize instance, when it is created:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="216b7d73d757eab64d8e7ed7575c6622b9965774" translate="yes" xml:space="preserve">
          <source>This behavior can be disabled for a model with the &lt;code&gt;timestamps: false&lt;/code&gt; option:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="727c4075b5f4eb6d72cffa60b8be8ca9040e313f" translate="yes" xml:space="preserve">
          <source>This can be simply solved by passing &lt;code&gt;{individualHooks: true}&lt;/code&gt; to the &lt;code&gt;remove&lt;/code&gt; call, resulting on each hook to be called on each removed through instance object.</source>
          <target state="translated">Это может быть просто решена путем пропускания &lt;code&gt;{individualHooks: true}&lt;/code&gt; к &lt;code&gt;remove&lt;/code&gt; вызова, в результате чего на каждом крючке будет называться на каждом удаляется через объект экземпляра.</target>
        </trans-unit>
        <trans-unit id="9621cbd1b47ad9deb220744f9dce81dd8d65111e" translate="yes" xml:space="preserve">
          <source>This can be worked around by passing in Meteor's version of &lt;code&gt;require&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="993d81e082a59058624430b6ff3db0bad0ed5e93" translate="yes" xml:space="preserve">
          <source>This cannot be represented by adding one foreign key to one of the tables, like the other relationships did. Instead, the concept of a &lt;a href=&quot;https://en.wikipedia.org/wiki/Associative_entity&quot;&gt;Junction Model&lt;/a&gt; is used. This will be an extra model (and extra table in the database) which will have two foreign key columns and will keep track of the associations. The junction table is also sometimes called &lt;em&gt;join table&lt;/em&gt; or &lt;em&gt;through table&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec6669863e6675ad0919f094fdb2f5f5591e0c18" translate="yes" xml:space="preserve">
          <source>This code will run &lt;code&gt;beforeDestroy&lt;/code&gt; and &lt;code&gt;afterDestroy&lt;/code&gt; hooks on the Tasks model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7dd309e7a42d2a5b7a13fba0fcf976b9b08e4f8" translate="yes" xml:space="preserve">
          <source>This code will run beforeDestroy/afterDestroy on the Tasks table. Sequelize, by default, will try to optimize your queries as much as possible. When calling cascade on delete, Sequelize will simply execute a</source>
          <target state="translated">Этот код будет запущен доDestroy/послеDestroy на таблице Tasks.Sequelize,по умолчанию,попытается максимально оптимизировать ваши запросы.При вызове каскада при удалении,Sequelize просто выполнит команду</target>
        </trans-unit>
        <trans-unit id="18c9fea6466ac62731b3270babfae248a5a4f00c" translate="yes" xml:space="preserve">
          <source>This command will create a seed file in &lt;code&gt;seeders&lt;/code&gt; folder. File name will look something like &lt;code&gt;XXXXXXXXXXXXXX-demo-user.js&lt;/code&gt;. It follows the same &lt;code&gt;up / down&lt;/code&gt; semantics as the migration files.</source>
          <target state="translated">Эта команда создаст исходный файл в папке &lt;code&gt;seeders&lt;/code&gt; . Имя файла будет выглядеть примерно так: &lt;code&gt;XXXXXXXXXXXXXX-demo-user.js&lt;/code&gt; . Он следует той же семантике &lt;code&gt;up / down&lt;/code&gt; что и файлы миграции.</target>
        </trans-unit>
        <trans-unit id="99b346a29a6d16c0ff1ed00bc189c11d20ca7b4d" translate="yes" xml:space="preserve">
          <source>This command will execute these steps:</source>
          <target state="translated">Эта команда выполнит эти шаги:</target>
        </trans-unit>
        <trans-unit id="c63d621f524bac03f030a99ca6604e6cf1edd0b4" translate="yes" xml:space="preserve">
          <source>This example will return an error:</source>
          <target state="translated">Этот пример вернет ошибку:</target>
        </trans-unit>
        <trans-unit id="3b53b33ba4457b7ea3b90f1c2c5486da5f391e81" translate="yes" xml:space="preserve">
          <source>This extra capability is useful when, for example, &lt;code&gt;Error: Cannot find module&lt;/code&gt; is thrown even though &lt;code&gt;/path/to/models/project&lt;/code&gt; seems to be correct. Some frameworks, such as Meteor, overload &lt;code&gt;require&lt;/code&gt;, and might raise an error such as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a7c83b5a5af156c9b822efe6ff13494455e205c" translate="yes" xml:space="preserve">
          <source>This extra capability is useful when, for example, &lt;code&gt;Error: Cannot find module&lt;/code&gt; is thrown even though &lt;code&gt;/path/to/models/project&lt;/code&gt; seems to be correct. Some frameworks, such as Meteor, overload &lt;code&gt;require&lt;/code&gt;, and spit out &quot;surprise&quot; results like :</source>
          <target state="translated">Эта дополнительная возможность полезна, когда, например, &lt;code&gt;Error: Cannot find module&lt;/code&gt; , хотя &lt;code&gt;/path/to/models/project&lt;/code&gt; кажется правильным. Некоторые фреймворки, такие как Meteor, &lt;code&gt;require&lt;/code&gt; перегрузки и выдают &amp;laquo;неожиданные&amp;raquo; результаты, например:</target>
        </trans-unit>
        <trans-unit id="907fa0809383b5e3d81bdbb7a5c0b6310da2999e" translate="yes" xml:space="preserve">
          <source>This getter, just like a standard JavaScript getter, is called automatically when the field value is read:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9265e86754519dfd2a1c613c8e8e21f4bd913ce3" translate="yes" xml:space="preserve">
          <source>This guide concerns model scopes. You might also be interested in the &lt;a href=&quot;association-scopes&quot;&gt;guide for association scopes&lt;/a&gt;, which are similar but not the same thing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7d24c35d97d5d3b68e3c54495e89f88afd8e636" translate="yes" xml:space="preserve">
          <source>This guide shows a few examples, but for the full list of what it can do, and for detailed usage of each method, check the &lt;a href=&quot;../class/lib/dialects/abstract/query-interface.js~queryinterface&quot;&gt;QueryInterface API&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7211d11ae325ad374896d8957148935533ed77b2" translate="yes" xml:space="preserve">
          <source>This guide will show how to make the standard &lt;a href=&quot;https://en.wikipedia.org/wiki/Create,_read,_update_and_delete&quot;&gt;CRUD&lt;/a&gt; queries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce7f17201e64eb37f1103f4b3786c11feb4123ee" translate="yes" xml:space="preserve">
          <source>This hook is always run before create, regardless of whether the model specifies its own &lt;code&gt;beforeCreate&lt;/code&gt; hook. Local hooks are always run before global hooks:</source>
          <target state="translated">Этот обработчик всегда запускается перед созданием, независимо от того, указывает ли модель свой собственный &lt;code&gt;beforeCreate&lt;/code&gt; . Локальные хуки всегда запускаются перед глобальными:</target>
        </trans-unit>
        <trans-unit id="1ddcce083be9075cd769a5196a4450f737832ece" translate="yes" xml:space="preserve">
          <source>This hook is always run, whether or not the model specifies its own &lt;code&gt;beforeCreate&lt;/code&gt; hook. Local hooks are always run before global hooks:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cc51172f00acfbe9c8689825993faf2062e625a" translate="yes" xml:space="preserve">
          <source>This idea can be applied recursively for even more complex, &lt;em&gt;many-to-many-to-...-to-many&lt;/em&gt; relationships (although at some point queries might become slow).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d3f840b5f4bf63477dd8bfd4cce62416778f4f4" translate="yes" xml:space="preserve">
          <source>This idea can be used to enable complex ordering, such as ordering posts by the number of laugh reactions they have:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="360cb791231c2363b1194e7b256c83b51766b491" translate="yes" xml:space="preserve">
          <source>This is a convenience method that combines&lt;code&gt;findAll&lt;/code&gt; and &lt;code&gt;count&lt;/code&gt; (see below) this is useful when dealing with queries related to pagination where you want to retrieve data with a &lt;code&gt;limit&lt;/code&gt; and &lt;code&gt;offset&lt;/code&gt; but also need to know the total number of records that match the query:</source>
          <target state="translated">Это удобный метод, который сочетает в себе &lt;code&gt;findAll&lt;/code&gt; и &lt;code&gt;count&lt;/code&gt; (см. Ниже). Это полезно при работе с запросами, связанными с разбивкой на страницы, когда вы хотите получить данные с &lt;code&gt;limit&lt;/code&gt; и &lt;code&gt;offset&lt;/code&gt; но также необходимо знать общее количество записей, соответствующих запросу:</target>
        </trans-unit>
        <trans-unit id="0e6e7c29c6f7275c747733e61664e0b1a268e99f" translate="yes" xml:space="preserve">
          <source>This is a special configuration file. It lets you specify following options that you would usually pass as arguments to CLI:</source>
          <target state="translated">Это специальный файл конфигурации.Он позволяет вам указать следующие опции,которые вы обычно передаете в качестве аргументов в CLI:</target>
        </trans-unit>
        <trans-unit id="a0099c6210179459209b502d4b861e1c0160333c" translate="yes" xml:space="preserve">
          <source>This is a special configuration file. It lets you specify the following options that you would usually pass as arguments to CLI:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cfb87b363ada14a57aea2606ebe70602e596443" translate="yes" xml:space="preserve">
          <source>This is better understood with examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55bdb2f2ecde4b760da3d764aa2f4098da22b6d1" translate="yes" xml:space="preserve">
          <source>This is solved by passing in Meteor's version of &lt;code&gt;require&lt;/code&gt;. So, while this probably fails ...</source>
          <target state="translated">Это решается передачей Meteor версии &lt;code&gt;require&lt;/code&gt; . Итак, хотя это, вероятно, не удается ...</target>
        </trans-unit>
        <trans-unit id="d228ea5a39b7651eb309d93cc8036fdcc5148f0e" translate="yes" xml:space="preserve">
          <source>This is the main class, the entry point to sequelize.</source>
          <target state="translated">Это основной класс,точка входа для сиквелизации.</target>
        </trans-unit>
        <trans-unit id="818eb257f30469f3bc2e4ca907767013465c744e" translate="yes" xml:space="preserve">
          <source>This is the same as calling &lt;code&gt;set&lt;/code&gt; and then calling &lt;code&gt;save&lt;/code&gt; but it only saves the exact values passed to it, making it more atomic and safer.</source>
          <target state="translated">Это то же самое, что и вызов &lt;code&gt;set&lt;/code&gt; , а затем вызов &lt;code&gt;save&lt;/code&gt; , но он сохраняет только точные значения, переданные ему, что делает его более атомарным и безопасным.</target>
        </trans-unit>
        <trans-unit id="d47fc8689698049d39e34b7df3673e10961e88f3" translate="yes" xml:space="preserve">
          <source>This is useful when you set attributes based on a previously defined object, for example, when you get the values of an object via a form of a web app. Furthermore, this is used internally in the &lt;code&gt;update&lt;/code&gt; implementation. This is how it looks like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aabf0ce799013e2b93cba8ead03220d19f1872eb" translate="yes" xml:space="preserve">
          <source>This is where model synchronization comes in. A model can be synchronized with the database by calling &lt;a href=&quot;../class/lib/model.js~model#static-method-sync&quot;&gt;&lt;code&gt;model.sync(options)&lt;/code&gt;&lt;/a&gt;, an asynchronous function (that returns a Promise). With this call, Sequelize will automatically perform an SQL query to the database. Note that this changes only the table in the database, not the model in the JavaScript side.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33e9689bec63a24dc0d02c35280b1fc82652539b" translate="yes" xml:space="preserve">
          <source>This means that Sequelize will help you with the main, larger query, but you will still have to write that sub-query by yourself:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60296b6b0d7e855566b012be2c4526118c0d9f5e" translate="yes" xml:space="preserve">
          <source>This means that errors can be accessed using &lt;code&gt;Sequelize.ValidationError&lt;/code&gt; The Base Error all Sequelize Errors inherit from.</source>
          <target state="translated">Это означает, что к ошибкам можно получить доступ с помощью &lt;code&gt;Sequelize.ValidationError&lt;/code&gt; Базовая ошибка, от которой наследуются все ошибки Sequelize.</target>
        </trans-unit>
        <trans-unit id="98e90703d8694f860162b50810b21b9208a7afc7" translate="yes" xml:space="preserve">
          <source>This means that if you call &lt;code&gt;Comment.findAll({ include: Video })&lt;/code&gt; in the situation above, &lt;code&gt;Video X&lt;/code&gt; will be eager loaded into &lt;code&gt;Foo&lt;/code&gt;. Thankfully, our &lt;code&gt;afterFind&lt;/code&gt; hook will delete it automatically, to help prevent bugs, but regardless it is important that you understand what is going on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f0fce06b40f9255412fdd0b5380181fe69646f3" translate="yes" xml:space="preserve">
          <source>This means that paranoid tables perform a &lt;em&gt;soft-deletion&lt;/em&gt; of records, instead of a &lt;em&gt;hard-deletion&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f42e97edd894c347aca69f1798c8fc463406eb50" translate="yes" xml:space="preserve">
          <source>This means that, for example, the &lt;code&gt;findAll&lt;/code&gt; method will not see the soft-deleted records, fetching only the ones that were not deleted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2855bd0c683de474c7f6e21e91a0636e89800625" translate="yes" xml:space="preserve">
          <source>This means that, unlike the One-To-One association, in which we had to choose where the foreign key would be placed, there is only one option in One-To-Many associations. For example, if one Foo has many Bars (and this way each Bar belongs to one Foo), then the only sensible implementation is to have a &lt;code&gt;fooId&lt;/code&gt; column in the &lt;code&gt;Bar&lt;/code&gt; table. The opposite is impossible, since one Foo has many Bars.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="448935a1c8176ac36ebc22b0c9a61a4f6c534df7" translate="yes" xml:space="preserve">
          <source>This means you can, for instance, have a string field which validates its length to be between 5 and 10 characters, but which also allows &lt;code&gt;null&lt;/code&gt; (since the length validator will be skipped automatically when the value is &lt;code&gt;null&lt;/code&gt;):</source>
          <target state="translated">Это означает, что вы можете, например, иметь строковое поле, которое проверяет, что его длина составляет от 5 до 10 символов, но также допускает значение &lt;code&gt;null&lt;/code&gt; (поскольку валидатор длины будет автоматически пропущен, если значение равно &lt;code&gt;null&lt;/code&gt; ):</target>
        </trans-unit>
        <trans-unit id="f467b722eea19d74de979567087d7f5e134044a3" translate="yes" xml:space="preserve">
          <source>This merge strategy also works in the exact same way with options passed to &lt;code&gt;.findAll&lt;/code&gt;, &lt;code&gt;.findOne&lt;/code&gt; and the like.</source>
          <target state="translated">Эта стратегия слияния также работает точно так же с параметрами, передаваемыми в &lt;code&gt;.findAll&lt;/code&gt; , &lt;code&gt;.findOne&lt;/code&gt; и т.п.</target>
        </trans-unit>
        <trans-unit id="59bd238f74715c77711ae06cecfc32b0565a57cb" translate="yes" xml:space="preserve">
          <source>This method is intended for use cases where the same model is needed in multiple schemas. In such a use case it is important to call &lt;code&gt;model.schema(schema, [options]).sync()&lt;/code&gt; for each model to ensure the models are created in the correct schema.</source>
          <target state="translated">Этот метод предназначен для случаев использования, когда одна и та же модель требуется в нескольких схемах. В таком случае использования важно вызвать &lt;code&gt;model.schema(schema, [options]).sync()&lt;/code&gt; для каждой модели, чтобы гарантировать, что модели созданы в правильной схеме.</target>
        </trans-unit>
        <trans-unit id="be1f80fe9d343d938146ba2d63357f7d78e8fc07" translate="yes" xml:space="preserve">
          <source>This method is not aware of eager loaded associations. In other words, if some other model instance (child) was eager loaded with this instance (parent), and you change something in the child, calling &lt;code&gt;save()&lt;/code&gt; will simply ignore the change that happened on the child.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c151867c187f819e3e87ed1bcb119c8d86a29723" translate="yes" xml:space="preserve">
          <source>This method is optimized to perform an UPDATE only into the fields that changed. If nothing has changed, no SQL query will be performed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbb7483536c0c6c9a13a8629a3da4e9955e25e2c" translate="yes" xml:space="preserve">
          <source>This method now only takes 2 parameters, &lt;code&gt;tableName&lt;/code&gt; and &lt;code&gt;options&lt;/code&gt;. Previously the second parameter could be a list of column names to apply the constraint to, this list must now be passed as &lt;code&gt;options.fields&lt;/code&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f729a85c63b02a52c94b1fda97e8d7be1a535ab0" translate="yes" xml:space="preserve">
          <source>This method now tests for equality with &lt;a href=&quot;https://lodash.com/docs/4.17.15#isEqual&quot;&gt;&lt;code&gt;_.isEqual&lt;/code&gt;&lt;/a&gt; and is now deep aware for JSON objects. Modifying a nested value for a JSON object won't mark it as changed (since it is still the same object).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a61048d15d1fb9bb46b03055071e6483faf68341" translate="yes" xml:space="preserve">
          <source>This method now tests for equality with &lt;code&gt;_.isEqual&lt;/code&gt; and is now deep aware. Modifying nested value for JSON object won't mark them as changed, because it is still the same object.</source>
          <target state="translated">Этот метод теперь проверяет равенство с &lt;code&gt;_.isEqual&lt;/code&gt; и теперь хорошо осведомлен. Изменение вложенного значения для объекта JSON не помечает их как измененные, потому что это все тот же объект.</target>
        </trans-unit>
        <trans-unit id="464ce0b414d5afcf6b0aff43e9a51b07687141d9" translate="yes" xml:space="preserve">
          <source>This method now throws &lt;code&gt;Sequelize.AggregateError&lt;/code&gt; instead of &lt;code&gt;Bluebird.AggregateError&lt;/code&gt;. All errors are now exposed as &lt;code&gt;errors&lt;/code&gt; key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab79309eddccd5e656cb0c27289b25d6187e3837" translate="yes" xml:space="preserve">
          <source>This method returns an array of hashes containing information about all attributes in the table.</source>
          <target state="translated">Этот метод возвращает массив хэшей,содержащий информацию обо всех атрибутах в таблице.</target>
        </trans-unit>
        <trans-unit id="65e66ab761576e0255ab452767789dbdbc633e55" translate="yes" xml:space="preserve">
          <source>This option also works on nested includes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd7d5d490533d9fbbc6964ad3ca7a06ab217002b" translate="yes" xml:space="preserve">
          <source>This other field must have a unique constraint on it (otherwise, it wouldn't make sense).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="009412eb3e4926d95c68130f79ccb16709c73776" translate="yes" xml:space="preserve">
          <source>This section concerns association scopes, which are similar but not the same as &lt;a href=&quot;scopes&quot;&gt;model scopes&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7799f45dcea4d7688e16027f4fe2c94d214d595" translate="yes" xml:space="preserve">
          <source>This section concerns association scopes. For a definition of association scopes vs. scopes on associated models, see &lt;a href=&quot;scopes&quot;&gt;Scopes&lt;/a&gt;.</source>
          <target state="translated">Этот раздел касается области действия ассоциации. Для определения ассоциативных областей и областей для связанных моделей см. &lt;a href=&quot;scopes&quot;&gt;Области&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8afc09530510c13953a1c7a8aa226af2c4660e35" translate="yes" xml:space="preserve">
          <source>This section describes the various association types in sequelize. There are four types of associations available in Sequelize</source>
          <target state="translated">В этом разделе описаны различные типы ассоциаций в секвелизации.Существует четыре типа ассоциаций,доступных в секвелизации.</target>
        </trans-unit>
        <trans-unit id="9b5b1b593a3987e4e98a3ae07340e004ed7b307a" translate="yes" xml:space="preserve">
          <source>This shows that one Many-to-Many relationship isn't very different from two One-to-Many relationships. The tables in the database look the same.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5db820e5273e88ea3c74abb859bd5e860f6a011" translate="yes" xml:space="preserve">
          <source>This specifies that the &lt;code&gt;uid&lt;/code&gt; column cannot be null. In most cases this will already be covered by the foreign key constraints, which sequelize creates automatically, but can be useful in case where the foreign keys are disabled, e.g. due to circular references (see &lt;code&gt;constraints: false&lt;/code&gt; below).</source>
          <target state="translated">Это указывает, что столбец &lt;code&gt;uid&lt;/code&gt; не может быть пустым. В большинстве случаев это уже покрывается ограничениями внешнего ключа, которые sequelize создает автоматически, но может быть полезен в случае, когда внешние ключи отключены, например, из-за циклических ссылок (см. &lt;code&gt;constraints: false&lt;/code&gt; ниже).</target>
        </trans-unit>
        <trans-unit id="9a0946bfcd13dbf21daeb65a02ff63bf523ce0c5" translate="yes" xml:space="preserve">
          <source>This was just a quick introduction to Eager Loading in Sequelize. There is a lot more to it, which you can learn at &lt;a href=&quot;eager-loading&quot;&gt;the dedicated guide on Eager Loading&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="577e6137dba84cc46407d9bc1a4765dfd3613cdc" translate="yes" xml:space="preserve">
          <source>This way your hooks will always behave correctly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3f85e151e151a349dd9016b56ab3363d40b713a" translate="yes" xml:space="preserve">
          <source>This way, all tables will use the same name as the model name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="243ae40eac6076baeeed9df083b7e556290eff39" translate="yes" xml:space="preserve">
          <source>This way, calling &lt;code&gt;Bar.sync()&lt;/code&gt; after the above will yield the following SQL (on PostgreSQL, for example):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0ebc993290aa589473ea42cd9a95506f97197b5" translate="yes" xml:space="preserve">
          <source>This way, calling &lt;code&gt;sync()&lt;/code&gt; on the above code will generate the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79587fc0df1a119b29dd68f5adfcc7e0a80ce536" translate="yes" xml:space="preserve">
          <source>This way, instead of keeping the &lt;code&gt;captainId&lt;/code&gt; on our Ships, we could keep a &lt;code&gt;captainName&lt;/code&gt; instead and use it as our association tracker. In other words, instead of referencing the &lt;code&gt;id&lt;/code&gt; from the target model (Captain), our relationship will reference another column on the target model: the &lt;code&gt;name&lt;/code&gt; column. To specify this, we have to define a &lt;em&gt;target key&lt;/em&gt;. We will also have to specify a name for the foreign key itself:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abef5dda5c0307db47d8df194568bc229f0ff31c" translate="yes" xml:space="preserve">
          <source>This way, we can do all kinds of eager loading:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea22924fba7e00b6342f7724d57025a38a37f1c6" translate="yes" xml:space="preserve">
          <source>This way, when calling &lt;code&gt;image.getPendingTags()&lt;/code&gt;, the following SQL query will be generated:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0748e5edf89087179c3ffcbaa9289fdfc2bb735" translate="yes" xml:space="preserve">
          <source>This will add methods &lt;code&gt;getUsers&lt;/code&gt;, &lt;code&gt;setUsers&lt;/code&gt;, &lt;code&gt;addUser&lt;/code&gt;,&lt;code&gt;addUsers&lt;/code&gt; to &lt;code&gt;Project&lt;/code&gt;, and &lt;code&gt;getProjects&lt;/code&gt;, &lt;code&gt;setProjects&lt;/code&gt;, &lt;code&gt;addProject&lt;/code&gt;, and &lt;code&gt;addProjects&lt;/code&gt; to &lt;code&gt;User&lt;/code&gt;.</source>
          <target state="translated">Это добавит методы &lt;code&gt;getUsers&lt;/code&gt; , &lt;code&gt;setUsers&lt;/code&gt; , &lt;code&gt;addUser&lt;/code&gt; , &lt;code&gt;addUsers&lt;/code&gt; к &lt;code&gt;Project&lt;/code&gt; и &lt;code&gt;getProjects&lt;/code&gt; , &lt;code&gt;setProjects&lt;/code&gt; , &lt;code&gt;addProject&lt;/code&gt; и &lt;code&gt;addProjects&lt;/code&gt; к &lt;code&gt;User&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2a6e951fad358490ec5b1a5a9c3f372af691a820" translate="yes" xml:space="preserve">
          <source>This will add the attribute &lt;code&gt;projectId&lt;/code&gt; to User. Depending on your setting for underscored the column in the table will either be called &lt;code&gt;projectId&lt;/code&gt; or &lt;code&gt;project_id&lt;/code&gt;. Instances of Project will get the accessors &lt;code&gt;getWorkers&lt;/code&gt; and &lt;code&gt;setWorkers&lt;/code&gt;.</source>
          <target state="translated">Это добавит атрибут &lt;code&gt;projectId&lt;/code&gt; в User. В зависимости от настроек подчеркивания столбец в таблице будет называться &lt;code&gt;projectId&lt;/code&gt; или &lt;code&gt;project_id&lt;/code&gt; . Экземпляры Project получат аксессоры &lt;code&gt;getWorkers&lt;/code&gt; и &lt;code&gt;setWorkers&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fb8b8f31c57ee6c953321682693ac70ebefd2921" translate="yes" xml:space="preserve">
          <source>This will add the functions &lt;code&gt;add/set/get Tasks&lt;/code&gt; to user instances.</source>
          <target state="translated">Это добавит функции &lt;code&gt;add/set/get Tasks&lt;/code&gt; к пользовательским экземплярам.</target>
        </trans-unit>
        <trans-unit id="977afa400f1e6cf00ffb52ee50d6f5a961571d68" translate="yes" xml:space="preserve">
          <source>This will all be seen in detail next. The advantages of using these pairs instead of one single association will be discussed in the end of this chapter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3463bc037bb376387fd4ec78e9ecc3a0802278d7" translate="yes" xml:space="preserve">
          <source>This will create a new model called UserProject with the equivalent foreign keys &lt;code&gt;projectId&lt;/code&gt; and &lt;code&gt;userId&lt;/code&gt;. Whether the attributes are camelcase or not depends on the two models joined by the table (in this case User and Project).</source>
          <target state="translated">Это создаст новую модель под названием UserProject с эквивалентными внешними ключами &lt;code&gt;projectId&lt;/code&gt; и &lt;code&gt;userId&lt;/code&gt; . Являются ли атрибуты верблюжьим регистром или нет, зависит от двух моделей, соединенных таблицей (в данном случае User и Project).</target>
        </trans-unit>
        <trans-unit id="9218fafa583e55dc7276e3c7c13b1abc3b031c76" translate="yes" xml:space="preserve">
          <source>This will create following folders</source>
          <target state="translated">Это создаст следующие папки</target>
        </trans-unit>
        <trans-unit id="77d3388ed7356b4ccde3d30587156a82a628f725" translate="yes" xml:space="preserve">
          <source>This will do following</source>
          <target state="translated">Это будет сделано следующим образом</target>
        </trans-unit>
        <trans-unit id="b9cd56142426d9d64bccca3cb45bcbe0b6b31b91" translate="yes" xml:space="preserve">
          <source>This will execute that seed file and you will have a demo user inserted into &lt;code&gt;User&lt;/code&gt; table.</source>
          <target state="translated">Это запустит этот исходный файл, и у вас будет демонстрационный пользователь, вставленный в таблицу &lt;code&gt;User&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="17023fd3d297e103adfb2cd08cb3d64972ed6758" translate="yes" xml:space="preserve">
          <source>This will produce an outer join. However, a &lt;code&gt;where&lt;/code&gt; clause on a related model will create an inner join and return only the instances that have matching sub-models. To return all parent instances, you should add &lt;code&gt;required: false&lt;/code&gt;.</source>
          <target state="translated">Это создаст внешнее соединение. Однако предложение &lt;code&gt;where&lt;/code&gt; в связанной модели создаст внутреннее соединение и вернет только экземпляры, у которых есть соответствующие подмодели. Чтобы вернуть все родительские экземпляры, вы должны добавить &lt;code&gt;required: false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a291220bace82fc699106fdc0c78b94804985569" translate="yes" xml:space="preserve">
          <source>This will:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="587b8c9b10a65cfc3263ff9ed36c73f795eee87e" translate="yes" xml:space="preserve">
          <source>Those details contains constraintSchema, constraintName, constraintCatalog tableCatalog, tableSchema, tableName, columnName, referencedTableCatalog, referencedTableCatalog, referencedTableSchema, referencedTableName, referencedColumnName. Remind: constraint informations won't return if it's sqlite.</source>
          <target state="translated">Эти подробности содержат constraintSchema,constraintName,constraintCatalog tableCatalog,tableSchema,tableName,columnName,referencedTableCatalog,referencedTableCatalog,referencedTableSchema,referencedTableName,referencedColumnName.Напоминание:информация об ограничениях не возвращается,если она sqlite.</target>
        </trans-unit>
        <trans-unit id="4210ffe78330b024ede5237dbfe86d9b9b93cd25" translate="yes" xml:space="preserve">
          <source>Three of the values provided here (&lt;code&gt;NOW&lt;/code&gt;, &lt;code&gt;UUIDV1&lt;/code&gt; and &lt;code&gt;UUIDV4&lt;/code&gt;) are special default values, that should not be used to define types. Instead they are used as shorthands for defining default values. For example, to get a uuid field with a default value generated following v1 of the UUID standard:</source>
          <target state="translated">Три из представленных здесь значений ( &lt;code&gt;NOW&lt;/code&gt; , &lt;code&gt;UUIDV1&lt;/code&gt; и &lt;code&gt;UUIDV4&lt;/code&gt; ) являются специальными значениями по умолчанию, которые не должны использоваться для определения типов. Вместо этого они используются в качестве сокращений для определения значений по умолчанию. Например, чтобы получить поле uuid со значением по умолчанию, созданным после v1 стандарта UUID:</target>
        </trans-unit>
        <trans-unit id="ad3fa17f66ba2847e7bc5fa23005689a9d061fe0" translate="yes" xml:space="preserve">
          <source>Through tables versus normal tables and the &quot;Super Many-to-Many association&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91f71b1ba50409fa2b7c9ba85860ac52be6266d4" translate="yes" xml:space="preserve">
          <source>Throw errors to rollback</source>
          <target state="translated">Выбрасывать ошибки для отката</target>
        </trans-unit>
        <trans-unit id="aa4f8c68ebe136d0527ece013ceac731e1a278f9" translate="yes" xml:space="preserve">
          <source>Throw:</source>
          <target state="translated">Throw:</target>
        </trans-unit>
        <trans-unit id="23d750e22af391e584ca1e4a39c95bd2fb56383e" translate="yes" xml:space="preserve">
          <source>Thrown when a connection to a database has a hostname that was not found</source>
          <target state="translated">Выбрасывается,когда подключение к базе данных имеет имя хоста,которое не было найдено.</target>
        </trans-unit>
        <trans-unit id="d2625383a632bae08070641f222b8caa05d99960" translate="yes" xml:space="preserve">
          <source>Thrown when a connection to a database has a hostname that was not reachable</source>
          <target state="translated">Выбрасывается,когда подключение к базе данных имеет имя хоста,которое было недоступно.</target>
        </trans-unit>
        <trans-unit id="87034a0755bcd6f36454ca6ff35ee17a4ff4e0e8" translate="yes" xml:space="preserve">
          <source>Thrown when a connection to a database has invalid values for any of the connection parameters</source>
          <target state="translated">Выбрасывается,когда подключение к БД имеет недопустимые значения для любого из параметров подключения.</target>
        </trans-unit>
        <trans-unit id="c0d696a249d0db17e465aee667fa2bc2571854bb" translate="yes" xml:space="preserve">
          <source>Thrown when a connection to a database is closed while an operation is in progress</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32d6e188736023fe8847cd2d2013f87cf98d8009" translate="yes" xml:space="preserve">
          <source>Thrown when a connection to a database is refused</source>
          <target state="translated">Выбрасывается при отказе в подключении к базе данных.</target>
        </trans-unit>
        <trans-unit id="b9258c976382ddb24c62d8d005000b6a6fe5d6f6" translate="yes" xml:space="preserve">
          <source>Thrown when a connection to a database is refused due to insufficient privileges</source>
          <target state="translated">Отбрасывается при отказе в подключении к базе данных из-за недостаточных привилегий.</target>
        </trans-unit>
        <trans-unit id="2043393f9e3b9fda84e6662489c8d9c0829b258d" translate="yes" xml:space="preserve">
          <source>Thrown when a connection to a database times out</source>
          <target state="translated">Выбрасывается,когда соединение с базой данных прерывается.</target>
        </trans-unit>
        <trans-unit id="7bc64491ce5ca9b21f53e4cdc887f0f85bc7a079" translate="yes" xml:space="preserve">
          <source>Thrown when a database query times out because of a deadlock</source>
          <target state="translated">Выбрасывается,когда запрос к базе данных заканчивается из-за тупика.</target>
        </trans-unit>
        <trans-unit id="679f3a1755d005602bfa972024e02b80ed5161dc" translate="yes" xml:space="preserve">
          <source>Thrown when a foreign key constraint is violated in the database</source>
          <target state="translated">Выбрасывается при нарушении ограничения по внешнему ключу в базе данных.</target>
        </trans-unit>
        <trans-unit id="c84afedad343819211df62f9869172701d2dd1e5" translate="yes" xml:space="preserve">
          <source>Thrown when a query is passed invalid options (see message for details)</source>
          <target state="translated">Выбрасывается,когда запрос передается недействительными опциями (подробнее см.сообщение).</target>
        </trans-unit>
        <trans-unit id="7fabff6c09f652154afe11474aa9248b265cfe1c" translate="yes" xml:space="preserve">
          <source>Thrown when a record was not found, Usually used with rejectOnEmpty mode (see message for details)</source>
          <target state="translated">Выбрасывается,когда запись не найдена,Обычно используется с режимом rejectOnEmpty (подробнее см.сообщение).</target>
        </trans-unit>
        <trans-unit id="c3c1771c4a29df5e79cf3befa41cf4598a7dee58" translate="yes" xml:space="preserve">
          <source>Thrown when a some problem occurred with Instance methods (see message for details)</source>
          <target state="translated">Бросок,когда возникла проблема с методами Instance (подробнее см.сообщение).</target>
        </trans-unit>
        <trans-unit id="95bb12467ace2eea8fc434c8b6c9df4d88b333d1" translate="yes" xml:space="preserve">
          <source>Thrown when a unique constraint is violated in the database</source>
          <target state="translated">Выбрасывается при нарушении уникального ограничения в базе данных.</target>
        </trans-unit>
        <trans-unit id="80ae4ddebfd7c82c02a5f23fec873816cf61746c" translate="yes" xml:space="preserve">
          <source>Thrown when an association is improperly constructed (see message for details)</source>
          <target state="translated">Выбрасывается при неправильном построении ассоциации (подробнее см.сообщение).</target>
        </trans-unit>
        <trans-unit id="89746572ae55e12747db0aea1e20bddf39ed7d39" translate="yes" xml:space="preserve">
          <source>Thrown when an exclusion constraint is violated in the database</source>
          <target state="translated">Бросается при нарушении ограничения на исключение в базе данных.</target>
        </trans-unit>
        <trans-unit id="8f157735ee3bf7ab21bc6f16555acb23bc8c29f3" translate="yes" xml:space="preserve">
          <source>Thrown when an include statement is improperly constructed (see message for details)</source>
          <target state="translated">Бросается,если включенное заявление составлено неправильно (подробнее см.сообщение).</target>
        </trans-unit>
        <trans-unit id="0fd16d932a52421ae2e328140ee63e38a615cfb3" translate="yes" xml:space="preserve">
          <source>Thrown when attempting to update a stale model instance</source>
          <target state="translated">Выбрасывается при попытке обновить залежавшийся экземпляр модели.</target>
        </trans-unit>
        <trans-unit id="7bc42c3b804e8b465e46ba8bd9b5e3206dc76ac4" translate="yes" xml:space="preserve">
          <source>Thrown when bulk operation fails, it represent per record level error.</source>
          <target state="translated">Выбрасывается при сбое оптовой работы,представляет собой ошибку на уровне записи.</target>
        </trans-unit>
        <trans-unit id="5eacd7b627dd64f11a5a478affed3030beea193f" translate="yes" xml:space="preserve">
          <source>Thrown when bulk operation fails, it represent per record level error. Used with AggregateError</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae1229aaedb2ae0a2feaf4bc910bd5a9a676762a" translate="yes" xml:space="preserve">
          <source>Thrown when bulk operation fails, it represent per record level error. Used with Promise.AggregateError</source>
          <target state="translated">Выбрасывается при сбое оптовой работы,представляет собой ошибку на уровне записи.Используется с Promise.AggregateError.</target>
        </trans-unit>
        <trans-unit id="f9edfc205cf5a5c20603f1d3b7c72767c3a4d4b9" translate="yes" xml:space="preserve">
          <source>Thrown when connection is not acquired due to timeout</source>
          <target state="translated">Брошен,когда соединение не получено из-за таймаута.</target>
        </trans-unit>
        <trans-unit id="7fceaebd6f438961290420060fe3b510c240b8f3" translate="yes" xml:space="preserve">
          <source>Thrown when constraint name is not found in the database</source>
          <target state="translated">Выбрасывается,когда имя ограничения не найдено в базе данных.</target>
        </trans-unit>
        <trans-unit id="c1175bafb21b858838d4ed47ad6843f2f62f711c" translate="yes" xml:space="preserve">
          <source>Throws an error when no records found</source>
          <target state="translated">Бросает ошибку при отсутствии найденных записей</target>
        </trans-unit>
        <trans-unit id="22a4ad2c60d9b1a4a4ab47810c732e12faec00b0" translate="yes" xml:space="preserve">
          <source>TimeoutError</source>
          <target state="translated">TimeoutError</target>
        </trans-unit>
        <trans-unit id="c04ed1238a14de2b02d7fd14a7e9605bb1b10b96" translate="yes" xml:space="preserve">
          <source>Timestamps</source>
          <target state="translated">Timestamps</target>
        </trans-unit>
        <trans-unit id="461a3d5a1ad09fb08896c9d1bdedfed52f33ed17" translate="yes" xml:space="preserve">
          <source>Tip for reading the docs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="852d13828c37fb9d96ffea0f8ba5d4177325009c" translate="yes" xml:space="preserve">
          <source>To add a new project to a user and set its status, you pass extra &lt;code&gt;options.through&lt;/code&gt; to the setter, which contains the attributes for the join table</source>
          <target state="translated">Для того, чтобы добавить новый проект к пользователю и установить свой статус, вы передаете дополнительный &lt;code&gt;options.through&lt;/code&gt; в инкубатор, который содержит атрибуты для объединения таблицы</target>
        </trans-unit>
        <trans-unit id="12de51033402849bf5bb53f0699f9d00f263ee2f" translate="yes" xml:space="preserve">
          <source>To begin, let's create the &lt;code&gt;.sequelizerc&lt;/code&gt; file in the root directory of your project, with the following content:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac8fd1770455d2404985a693194adf77d45c1bff" translate="yes" xml:space="preserve">
          <source>To connect over a unix domain socket, specify the path to the socket directory in the &lt;code&gt;host&lt;/code&gt; option.</source>
          <target state="translated">Чтобы подключиться через сокет домена unix, укажите путь к каталогу сокета в опции &lt;code&gt;host&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2b5a17ba667cc9d0b9a70fe2db691a0c7e5bc5bd" translate="yes" xml:space="preserve">
          <source>To connect over a unix domain socket, specify the path to the socket directory in the &lt;code&gt;host&lt;/code&gt; option. The socket path must start with &lt;code&gt;/&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="062d1b4f01aa30692a7d36958d9c8a163ef0fa87" translate="yes" xml:space="preserve">
          <source>To connect to the database, you must create a Sequelize instance. This can be done by either passing the connection parameters separately to the Sequelize constructor or by passing a single connection URI:</source>
          <target state="translated">Для подключения к базе данных необходимо создать экземпляр Sequelize.Это можно сделать либо передав параметры соединения отдельно в конструктор Sequelize,либо передав один URI соединения:</target>
        </trans-unit>
        <trans-unit id="7f48df892093e4004cfb053a43d4c85a85f815be" translate="yes" xml:space="preserve">
          <source>To create a &lt;strong&gt;Many-To-Many&lt;/strong&gt; relationship, two &lt;code&gt;belongsToMany&lt;/code&gt; calls are used together.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e537071d3840cd3f2f52d76d2f26c344c4e5fd6" translate="yes" xml:space="preserve">
          <source>To create a &lt;strong&gt;One-To-Many&lt;/strong&gt; relationship, the &lt;code&gt;hasMany&lt;/code&gt; and &lt;code&gt;belongsTo&lt;/code&gt; associations are used together;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bc8fdcd71becc3e7559091f9c2d2ac9f459a285" translate="yes" xml:space="preserve">
          <source>To create a &lt;strong&gt;One-To-One&lt;/strong&gt; relationship, the &lt;code&gt;hasOne&lt;/code&gt; and &lt;code&gt;belongsTo&lt;/code&gt; associations are used together;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da44e1aec269feef0bce9b3580109c553da536c7" translate="yes" xml:space="preserve">
          <source>To create an empty project you will need to execute &lt;code&gt;init&lt;/code&gt; command</source>
          <target state="translated">Чтобы создать пустой проект, вам нужно будет выполнить команду &lt;code&gt;init&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="71fb99144f8e1ab035cde5271b9fd31e7e57bd68" translate="yes" xml:space="preserve">
          <source>To define mappings between a model and a table, use the &lt;code&gt;define&lt;/code&gt; method. Each column must have a datatype, see more about &lt;a href=&quot;data-types&quot;&gt;datatypes&lt;/a&gt;.</source>
          <target state="translated">Чтобы определить сопоставления между моделью и таблицей, используйте метод &lt;code&gt;define&lt;/code&gt; . Каждый столбец должен иметь тип данных, см. Подробнее о &lt;a href=&quot;data-types&quot;&gt;типах данных&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="dda2146b56aea2f43e17df568053cae2211defe9" translate="yes" xml:space="preserve">
          <source>To define your own primary key:</source>
          <target state="translated">Чтобы определить свой собственный первичный ключ:</target>
        </trans-unit>
        <trans-unit id="0c3f2415d9121211436c6b961e20ccac56e2a8ac" translate="yes" xml:space="preserve">
          <source>To destroy everything the &lt;code&gt;TRUNCATE&lt;/code&gt; SQL can be used:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0c9aa566dd042ca2109aefb26d5db9701348ed9" translate="yes" xml:space="preserve">
          <source>To disable the default scope, pass &lt;code&gt;scope: null&lt;/code&gt; to the getter: &lt;code&gt;User.getPosts({ scope: null })&lt;/code&gt;. Similarly, if you want to apply other scopes, pass an array like you would to &lt;code&gt;.scope&lt;/code&gt;:</source>
          <target state="translated">Чтобы отключить область действия по умолчанию, передайте &lt;code&gt;scope: null&lt;/code&gt; в &lt;code&gt;User.getPosts({ scope: null })&lt;/code&gt; : User.getPosts ({scope: null}) . Точно так же, если вы хотите применить другие области видимости, передайте массив, как в &lt;code&gt;.scope&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="2a925d0e769f5d48b8c6e0cdd9a0825bd325d509" translate="yes" xml:space="preserve">
          <source>To do this, Sequelize provides &lt;strong&gt;four&lt;/strong&gt; types of associations that should be combined to create them:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd05bbbc5e1376c7bf19c55a811408445260045f" translate="yes" xml:space="preserve">
          <source>To drop all tables:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19d9cd3541a1b546a5fbf1c646fe9f62fe1a7bc9" translate="yes" xml:space="preserve">
          <source>To drop the table related to a model:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6463d8d9d72d8a88eca88bfd39719af73a2f3fb1" translate="yes" xml:space="preserve">
          <source>To enable CLS you must tell sequelize which namespace to use by using a static method of the sequelize constructor:</source>
          <target state="translated">Для включения CLS необходимо указать,какое пространство имен использовать,используя статический метод конструктора sequelize:</target>
        </trans-unit>
        <trans-unit id="87f6d681b01751ff8331a911939a0019959ee185" translate="yes" xml:space="preserve">
          <source>To enable CLS, add it do your project, create a namespace and set it on the sequelize constructor:</source>
          <target state="translated">Чтобы включить CLS,добавьте его в свой проект,создайте пространство имён и установите его в конструкторе sequelize:</target>
        </trans-unit>
        <trans-unit id="ec5b30047df227f1db838872824f7665a870a2c4" translate="yes" xml:space="preserve">
          <source>To enable more modern constructions in your migrations and seeders, you can simply install &lt;code&gt;babel-register&lt;/code&gt; and require it at the beginning of &lt;code&gt;.sequelizerc&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57ed3d1d0dadbaed6034cd1ee752e3e23f094504" translate="yes" xml:space="preserve">
          <source>To experiment with the other dialects, which are harder to setup locally, you can use the &lt;a href=&quot;https://github.com/papb/sequelize-sscce&quot;&gt;Sequelize SSCCE&lt;/a&gt; GitHub repository, which allows you to run code on all supported dialects directly from GitHub, for free, without any setup!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3265b58fa7e73178a31ecb9fa41fc44d85d54437" translate="yes" xml:space="preserve">
          <source>To extend Sequelize datatypes, do it before any Sequelize instance is created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e021f11d5b93d2d56eff3f6527dc41d1add80d2" translate="yes" xml:space="preserve">
          <source>To extend Sequelize datatypes, do it before any instance is created. This example creates a dummy &lt;code&gt;NEWTYPE&lt;/code&gt; that replicates the built-in datatype &lt;code&gt;Sequelize.INTEGER(11).ZEROFILL.UNSIGNED&lt;/code&gt;.</source>
          <target state="translated">Чтобы расширить типы данных Sequelize, сделайте это до создания любого экземпляра. В этом примере создается фиктивный &lt;code&gt;NEWTYPE&lt;/code&gt; , который реплицирует встроенный тип данных &lt;code&gt;Sequelize.INTEGER(11).ZEROFILL.UNSIGNED&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="08fd9370c478abbfbe5b9098d6a2c2698f6d2737" translate="yes" xml:space="preserve">
          <source>To get full control over the foreign key column added by sequelize, you can use the &lt;code&gt;foreignKey&lt;/code&gt; option. It can either be a string, that specifies the name, or and object type definition, equivalent to those passed to &lt;code&gt;sequelize.define&lt;/code&gt;.</source>
          <target state="translated">Чтобы получить полный контроль над столбцом внешнего ключа, добавленным с помощью sequelize, вы можете использовать параметр &lt;code&gt;foreignKey&lt;/code&gt; . Это может быть либо строка, указывающая имя, либо определение типа объекта, эквивалентные тем, которые передаются в &lt;code&gt;sequelize.define&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8b302c9710f47440c1d0dbf353af407bf35573b5" translate="yes" xml:space="preserve">
          <source>To get it stored in the database, use the &lt;code&gt;save&lt;/code&gt;-method and catch the events ... if needed:</source>
          <target state="translated">Чтобы сохранить его в базе данных, используйте метод &lt;code&gt;save&lt;/code&gt; и перехватите события ... при необходимости:</target>
        </trans-unit>
        <trans-unit id="81359c1e15ebff6b36cb1d90106dde4b80bd06a7" translate="yes" xml:space="preserve">
          <source>To get more relevant data, you can use limit, offset, order and grouping:</source>
          <target state="translated">Для получения более актуальных данных можно использовать лимит,смещение,порядок и группировку:</target>
        </trans-unit>
        <trans-unit id="f03016401c3c47d133caf798279872a3ac0649b8" translate="yes" xml:space="preserve">
          <source>To illustrate this, consider an extension of the above example between tags and taggables, where each tag has a status. This way, to get all pending tags of an image, we could establish another &lt;code&gt;belognsToMany&lt;/code&gt; relationship between &lt;code&gt;Image&lt;/code&gt; and &lt;code&gt;Tag&lt;/code&gt;, this time applying a scope on the through model and another scope on the target model:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61899d2894cb37b186c8fc4d77f78a44068071a9" translate="yes" xml:space="preserve">
          <source>To include all associated models, you can use the &lt;code&gt;all&lt;/code&gt; and &lt;code&gt;nested&lt;/code&gt; options:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fb9a241f10c959268058c116425f0667f1b4bdc" translate="yes" xml:space="preserve">
          <source>To include all attributes, you can pass a single object with &lt;code&gt;all: true&lt;/code&gt;:</source>
          <target state="translated">Чтобы включить все атрибуты, вы можете передать один объект со значением &lt;code&gt;all: true&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="528fc7532d53e4279a65d35bb35a1e677d7afa90" translate="yes" xml:space="preserve">
          <source>To install the Sequelize CLI:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41a7882efafea18d939a044b5476e2e2db5db42b" translate="yes" xml:space="preserve">
          <source>To invoke scope functions you can do</source>
          <target state="translated">Для вызова функций диапазона можно сделать</target>
        </trans-unit>
        <trans-unit id="6ff66a578ca5331ff221d03e2780d2b820c5ce62" translate="yes" xml:space="preserve">
          <source>To learn more about how to use Sequelize, read the tutorials available in the left menu. Begin with &lt;a href=&quot;manual/getting-started&quot;&gt;Getting Started&lt;/a&gt;.</source>
          <target state="translated">Чтобы узнать больше о том, как использовать Sequelize, прочитайте руководства, доступные в левом меню. Начните с &lt;a href=&quot;manual/getting-started&quot;&gt;начала работы&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9f9df9f9807e6504b1a32309f67f3799ae9e6e29" translate="yes" xml:space="preserve">
          <source>To learn with an example, we will consider that we want to create a model to represent users, which have a &lt;code&gt;firstName&lt;/code&gt; and a &lt;code&gt;lastName&lt;/code&gt;. We want our model to be called &lt;code&gt;User&lt;/code&gt;, and the table it represents is called &lt;code&gt;Users&lt;/code&gt; in the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c32038d2efc4add7b5a133b650a02f500d6b748e" translate="yes" xml:space="preserve">
          <source>To make a model paranoid, you must pass the &lt;code&gt;paranoid: true&lt;/code&gt; option to the model definition. Paranoid requires timestamps to work (i.e. it won't work if you also pass &lt;code&gt;timestamps: false&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b771a71e24e6d53587993635747d1787fb98e7c6" translate="yes" xml:space="preserve">
          <source>To make things easier to follow, let's rename our &lt;code&gt;User_Profile&lt;/code&gt; model to &lt;code&gt;grant&lt;/code&gt;. Note that everything works in the same way as before. Our models are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82a28ba40b57129812c63ec44c7e5de69d719c98" translate="yes" xml:space="preserve">
          <source>To manage all data migrations you can use seeders. Seed files are some change in data that can be used to populate database table with sample data or test data.</source>
          <target state="translated">Для управления всеми миграциями данных можно использовать сеялки.Файлы сеялок-это некоторое изменение в данных,которое может быть использовано для заполнения таблицы базы данных образцами данных или данными испытаний.</target>
        </trans-unit>
        <trans-unit id="d41c172a89209d5b09fd5ea5fc82930a6a93002c" translate="yes" xml:space="preserve">
          <source>To move the where conditions from an included model from the &lt;code&gt;ON&lt;/code&gt; condition to the top level &lt;code&gt;WHERE&lt;/code&gt; you can use the &lt;code&gt;'$nested.column$'&lt;/code&gt; syntax:</source>
          <target state="translated">Чтобы переместить условия where из включенной модели из условия &lt;code&gt;ON&lt;/code&gt; на верхний уровень &lt;code&gt;WHERE&lt;/code&gt; , вы можете использовать синтаксис &lt;code&gt;'$nested.column$'&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="8735961a68722df89e488bc681dfe9fc27b073d4" translate="yes" xml:space="preserve">
          <source>To obtain top-level &lt;code&gt;WHERE&lt;/code&gt; clauses that involve nested columns, Sequelize provides a way to reference nested columns: the &lt;code&gt;'$nested.column$'&lt;/code&gt; syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67bd991991ae739c27032fc7de9da72a98f6858a" translate="yes" xml:space="preserve">
          <source>To prevent bugs/mistakes in eager loading, you can also delete the concrete fields &lt;code&gt;image&lt;/code&gt; and &lt;code&gt;video&lt;/code&gt; from Comment instances in the same &lt;code&gt;afterFind&lt;/code&gt; hook, leaving only the abstract &lt;code&gt;commentable&lt;/code&gt; field available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29316f2b493d1cad3856f19f0665c3eab5ef37a7" translate="yes" xml:space="preserve">
          <source>To properly support eager loading, define an &lt;code&gt;afterFind&lt;/code&gt; hook on the &lt;code&gt;Comment&lt;/code&gt; model that automatically populates the &lt;code&gt;commentable&lt;/code&gt; field in every instance;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5d9d633e149298da30c5fd8a7b67d1289508e34" translate="yes" xml:space="preserve">
          <source>To properly support lazy loading, define a new instance method on the &lt;code&gt;Comment&lt;/code&gt; model called &lt;code&gt;getCommentable&lt;/code&gt; which calls, under the hood, the correct mixin to fetch the appropriate commentable;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43c3e345f72eba5c3efd1485f74d109a6eedabc7" translate="yes" xml:space="preserve">
          <source>To provide a length for the data type, you can invoke it like a function: &lt;code&gt;INTEGER(2)&lt;/code&gt;</source>
          <target state="translated">Чтобы указать длину для типа данных, вы можете вызвать его как функцию: &lt;code&gt;INTEGER(2)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5050fb0b7d3d66acd71af6d5a24c4a5a3f72eac5" translate="yes" xml:space="preserve">
          <source>To provide the greatest flexibility, let's use the Super Many-to-Many relationship construction here again:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce25ce8e4a379e9be823fd5c0f11c2eb1a8a5d28" translate="yes" xml:space="preserve">
          <source>To recap, the elements of the order array can be the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c3ee3dbbd358f5ea3a5375e13ef5d5f193d5514" translate="yes" xml:space="preserve">
          <source>To recap, the elements of the order/group array can be the following:</source>
          <target state="translated">Напомним,что элементы массива ордер/группа могут быть следующими:</target>
        </trans-unit>
        <trans-unit id="9f0557f6152bcc28fed2088bbb5968f3d7399eb3" translate="yes" xml:space="preserve">
          <source>To remove created associations you can just call the set method without a specific id:</source>
          <target state="translated">Для удаления созданных ассоциаций можно просто вызвать метод set без конкретного идентификатора:</target>
        </trans-unit>
        <trans-unit id="23a5eb404fbeb5a976e8bf4a1b0685037db00b1d" translate="yes" xml:space="preserve">
          <source>To restore soft-deleted records, you can use the &lt;code&gt;restore&lt;/code&gt; method, which comes both in the static version as well as in the instance version:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6ed480fdfa306848b35b4f98b434fd446ccbad0" translate="yes" xml:space="preserve">
          <source>To select only some attributes, you can use the &lt;code&gt;attributes&lt;/code&gt; option. Most often, you pass an array:</source>
          <target state="translated">Чтобы выбрать только некоторые атрибуты, вы можете использовать опцию &lt;code&gt;attributes&lt;/code&gt; . Чаще всего вы передаете массив:</target>
        </trans-unit>
        <trans-unit id="7c9ab3faae14e43fe0c5833558b35d5caac3b197" translate="yes" xml:space="preserve">
          <source>To select only some attributes, you can use the &lt;code&gt;attributes&lt;/code&gt; option:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c59110957af613b7041023bf22fdbfbf6454fb60" translate="yes" xml:space="preserve">
          <source>To setup the polymorphic association for the example above (which is an example of One-to-Many polymorphic association), we have the following steps:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c0b1f31729f10174367599cf32209d59219dfc3" translate="yes" xml:space="preserve">
          <source>To update several rows at once:</source>
          <target state="translated">Обновить сразу несколько строк:</target>
        </trans-unit>
        <trans-unit id="22b7aa8cde8674fa4a729793b1a6cd316bfb540d" translate="yes" xml:space="preserve">
          <source>To use a custom error message instead of that provided by &lt;a href=&quot;https://github.com/chriso/validator.js&quot;&gt;validator.js&lt;/a&gt;, use an object instead of the plain value or array of arguments, for example a validator which needs no argument can be given a custom message with</source>
          <target state="translated">Чтобы использовать настраиваемое сообщение об ошибке вместо сообщения, предоставляемого &lt;a href=&quot;https://github.com/chriso/validator.js&quot;&gt;validator.js&lt;/a&gt; , используйте объект вместо простого значения или массива аргументов, например, валидатору, которому не нужен аргумент, можно передать настраиваемое сообщение с</target>
        </trans-unit>
        <trans-unit id="75c5403dcfb5bf72f31f2a3c2d7f2fe263d46ed4" translate="yes" xml:space="preserve">
          <source>To use the wildcard operator %, append it to your replacement. The following query matches users with names that start with 'ben'.</source>
          <target state="translated">Чтобы использовать шаблонный оператор %,добавьте его к вашей замене.Следующий запрос соответствует пользователям с именами,начинающимися с 'ben'.</target>
        </trans-unit>
        <trans-unit id="230fae1010b12a3dcbce66ac805e0cf889792eab" translate="yes" xml:space="preserve">
          <source>To use the wildcard operator &lt;code&gt;%&lt;/code&gt;, append it to your replacement. The following query matches users with names that start with 'ben'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c38c6c1f3a2743f8626703abb302e403d20ff81c" translate="yes" xml:space="preserve">
          <source>Tokens</source>
          <target state="translated">Tokens</target>
        </trans-unit>
        <trans-unit id="603270749de0b8c5d657407d142a68e2bd894051" translate="yes" xml:space="preserve">
          <source>Top level where with eagerly loaded models</source>
          <target state="translated">Топ-уровень,где с нетерпеливой загрузкой моделей</target>
        </trans-unit>
        <trans-unit id="1a7b7c1b33d161f45804730c70b75175dccd9883" translate="yes" xml:space="preserve">
          <source>Transaction</source>
          <target state="translated">Transaction</target>
        </trans-unit>
        <trans-unit id="4560532617032eba3499944208e1c914b037e0c9" translate="yes" xml:space="preserve">
          <source>Transaction options</source>
          <target state="translated">Варианты проведения операций</target>
        </trans-unit>
        <trans-unit id="9c5a9f64903010dca00f0ffdf25ae4dd43e00a52" translate="yes" xml:space="preserve">
          <source>Transaction to run query under</source>
          <target state="translated">Транзакция для выполнения запроса в разделе</target>
        </trans-unit>
        <trans-unit id="1e3281a962e6db2e54e787f796eb7d2b1582389a" translate="yes" xml:space="preserve">
          <source>Transactions</source>
          <target state="translated">Transactions</target>
        </trans-unit>
        <trans-unit id="af4419640cc9b72a684777bff88307c334556deb" translate="yes" xml:space="preserve">
          <source>Trigger the constraint checks immediately</source>
          <target state="translated">Немедленно запустите проверку ограничений</target>
        </trans-unit>
        <trans-unit id="fbfa67ef4fc863ae5513f819aa79809b0312945b" translate="yes" xml:space="preserve">
          <source>Truncate all instances of the model.</source>
          <target state="translated">Усечь все экземпляры модели.</target>
        </trans-unit>
        <trans-unit id="41ba9fe559f96b6c33ced14f4f229126b6f945ea" translate="yes" xml:space="preserve">
          <source>Truncate all instances of the model. This is a convenient method for Model.destroy({ truncate: true }).</source>
          <target state="translated">Усечь все экземпляры модели.Это удобный метод для Model.destroy({усечь:true }).</target>
        </trans-unit>
        <trans-unit id="db65c7ad58c51cfb9b81db0635cd9fbad284458d" translate="yes" xml:space="preserve">
          <source>Truncate all tables defined through the sequelize models.</source>
          <target state="translated">Усечение всех таблиц,определенных с помощью моделей секвелизации.</target>
        </trans-unit>
        <trans-unit id="bebb9195a206168efd2a5b7fe2975178574e742a" translate="yes" xml:space="preserve">
          <source>Truncate all tables defined through the sequelize models. This is done by calling &lt;code&gt;Model.truncate()&lt;/code&gt; on each model.</source>
          <target state="translated">Обрезать все таблицы, определенные в моделях сиквелизации. Это делается путем вызова &lt;code&gt;Model.truncate()&lt;/code&gt; для каждой модели.</target>
        </trans-unit>
        <trans-unit id="548046a99a144543148a41922751851ef4f108e1" translate="yes" xml:space="preserve">
          <source>Truncates all tables that have foreign-key references to the named table, or to any tables added to the group due to CASCADE.</source>
          <target state="translated">Усекает все таблицы,которые имеют ссылки с посторонними ключами на именованную таблицу или на любые таблицы,добавленные в группу благодаря CASCADE.</target>
        </trans-unit>
        <trans-unit id="876c1de91d7e89edd2ceeaa4ea1c723e2c94ba71" translate="yes" xml:space="preserve">
          <source>Trying to log a model instance directly to &lt;code&gt;console.log&lt;/code&gt; will produce a lot of clutter, since Sequelize instances have a lot of things attached to them. Instead, you can use the &lt;code&gt;.toJSON()&lt;/code&gt; method (which, by the way, automatically guarantees the instances to be &lt;code&gt;JSON.stringify&lt;/code&gt;-ed well).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3deb7456519697ecf4eefc455516c969a3681bae" translate="yes" xml:space="preserve">
          <source>Type</source>
          <target state="translated">Type</target>
        </trans-unit>
        <trans-unit id="2b125b0e14258280c33525f42d8874d816aafa25" translate="yes" xml:space="preserve">
          <source>Type of constraint. One of the values in available constraints(case insensitive)</source>
          <target state="translated">Тип ограничения.Одно из значений в доступных ограничениях (нечувствительность к регистру).</target>
        </trans-unit>
        <trans-unit id="02466358e536c7941ae60bb0d80b0e5f61e9ca27" translate="yes" xml:space="preserve">
          <source>Type of geography data</source>
          <target state="translated">Вид географических данных</target>
        </trans-unit>
        <trans-unit id="80639b7816c71c1eb7b8fd0ef7324c7ca20ec91d" translate="yes" xml:space="preserve">
          <source>Type of geometry data</source>
          <target state="translated">Тип геометрических данных</target>
        </trans-unit>
        <trans-unit id="657bf8cc823055c20626d868fa847d4cfc53f2f0" translate="yes" xml:space="preserve">
          <source>Type of index, available options are UNIQUE|FULLTEXT|SPATIAL</source>
          <target state="translated">Тип индекса,доступные опции UNIQUE|FULLTEXT|SPATIAL.</target>
        </trans-unit>
        <trans-unit id="d4a86cb946d4af4766f6a695502b64f3ea0cd58b" translate="yes" xml:space="preserve">
          <source>TypeScript</source>
          <target state="translated">TypeScript</target>
        </trans-unit>
        <trans-unit id="37dd88d1763196449c23edd76686c9e9f0cfc42d" translate="yes" xml:space="preserve">
          <source>TypeScript doesn't know how to generate a &lt;code&gt;class&lt;/code&gt; definition when we use the &lt;code&gt;sequelize.define&lt;/code&gt; method to define a Model. Therefore, we need to do some manual work and declare an interface and a type, and eventually cast the result of &lt;code&gt;.define&lt;/code&gt; to the &lt;em&gt;static&lt;/em&gt; type.</source>
          <target state="translated">TypeScript не знает, как сгенерировать определение &lt;code&gt;class&lt;/code&gt; когда мы используем метод &lt;code&gt;sequelize.define&lt;/code&gt; для определения модели. Следовательно, нам нужно проделать некоторую ручную работу и объявить интерфейс и тип, и в конечном итоге привести результат &lt;code&gt;.define&lt;/code&gt; к &lt;em&gt;статическому&lt;/em&gt; типу.</target>
        </trans-unit>
        <trans-unit id="e49081c4bde9e1cfe58939ea3a16f1c972606e9a" translate="yes" xml:space="preserve">
          <source>Types can be set per-transaction by passing &lt;code&gt;options.type&lt;/code&gt; to &lt;code&gt;sequelize.transaction&lt;/code&gt;.</source>
          <target state="translated">Типы могут быть установлены для каждой транзакции, передав &lt;code&gt;options.type&lt;/code&gt; в &lt;code&gt;sequelize.transaction&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7fca1a6b4d9232a993c3b6f49aea5cd588f941b2" translate="yes" xml:space="preserve">
          <source>Types can be set per-transaction by passing &lt;code&gt;options.type&lt;/code&gt; to &lt;code&gt;sequelize.transaction&lt;/code&gt;. Default to &lt;code&gt;DEFERRED&lt;/code&gt; but you can override the default type by passing &lt;code&gt;options.transactionType&lt;/code&gt; in &lt;code&gt;new Sequelize&lt;/code&gt;. Sqlite only.</source>
          <target state="translated">Типы могут быть установлены для каждой транзакции, передав &lt;code&gt;options.type&lt;/code&gt; в &lt;code&gt;sequelize.transaction&lt;/code&gt; . По умолчанию &lt;code&gt;DEFERRED&lt;/code&gt; , но вы можете переопределить тип по умолчанию, передав &lt;code&gt;options.transactionType&lt;/code&gt; в &lt;code&gt;new Sequelize&lt;/code&gt; . Только Sqlite.</target>
        </trans-unit>
        <trans-unit id="c9e6a29d14f3f27cd2ee75b65407552ad50a3078" translate="yes" xml:space="preserve">
          <source>UNIQUE</source>
          <target state="translated">UNIQUE</target>
        </trans-unit>
        <trans-unit id="52c6c1812015585dc1092393a1f244f60d68c60a" translate="yes" xml:space="preserve">
          <source>UPDATE</source>
          <target state="translated">UPDATE</target>
        </trans-unit>
        <trans-unit id="b7cd97d59a40524239e87fabd06f9d91d1c4567e" translate="yes" xml:space="preserve">
          <source>UPDLOCK</source>
          <target state="translated">UPDLOCK</target>
        </trans-unit>
        <trans-unit id="c55112b254b71dd5f11927b24c53d183f3ed4118" translate="yes" xml:space="preserve">
          <source>UPSERT</source>
          <target state="translated">UPSERT</target>
        </trans-unit>
        <trans-unit id="7dcf46a0ef085488eccc18f6be6eae2377ef02e3" translate="yes" xml:space="preserve">
          <source>USE</source>
          <target state="translated">USE</target>
        </trans-unit>
        <trans-unit id="21bf75a5255af008f6315cb6aca4bb3bdccee521" translate="yes" xml:space="preserve">
          <source>UUID</source>
          <target state="translated">UUID</target>
        </trans-unit>
        <trans-unit id="e01890c85a119d4b8670c8a5c86e229b1b055141" translate="yes" xml:space="preserve">
          <source>UUIDV1</source>
          <target state="translated">UUIDV1</target>
        </trans-unit>
        <trans-unit id="53b28d9b4c5b16a8f70fad0c7b6d4111e7d812c5" translate="yes" xml:space="preserve">
          <source>UUIDV4</source>
          <target state="translated">UUIDV4</target>
        </trans-unit>
        <trans-unit id="d49513ad46116d9c43b4e1bdee7f589e92c24e31" translate="yes" xml:space="preserve">
          <source>UUIDs</source>
          <target state="translated">UUIDs</target>
        </trans-unit>
        <trans-unit id="c3791538e2a2ddac1dc84bc380034021e2418223" translate="yes" xml:space="preserve">
          <source>Un-associate one or more instance(s).</source>
          <target state="translated">Отсоедините один или несколько экземпляров.</target>
        </trans-unit>
        <trans-unit id="c51b2acce8f2440b890216a65555b75575c13832" translate="yes" xml:space="preserve">
          <source>Un-associate one or several target rows.</source>
          <target state="translated">Отсоедините один или несколько целевых рядов.</target>
        </trans-unit>
        <trans-unit id="a5e8c5a43110ed2a66219f7247d3b101a56c48b7" translate="yes" xml:space="preserve">
          <source>Underlying Connector Libraries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b46959a2e6eb284a6ae4735989048b9e793a87a" translate="yes" xml:space="preserve">
          <source>Undoing Migrations</source>
          <target state="translated">Продолжающаяся миграция</target>
        </trans-unit>
        <trans-unit id="af088c91d8cf21447c866835d2fe8341b7459730" translate="yes" xml:space="preserve">
          <source>Undoing Seeds</source>
          <target state="translated">Уничтожающие семена</target>
        </trans-unit>
        <trans-unit id="5931222b773be923fec652eaedbb8a66dc784380" translate="yes" xml:space="preserve">
          <source>Unique Constraint</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="518bb40fbaa8c36f7745b3742df67ba891a06fab" translate="yes" xml:space="preserve">
          <source>UniqueConstraintError</source>
          <target state="translated">UniqueConstraintError</target>
        </trans-unit>
        <trans-unit id="800eb81f2a2bf21a90e68b676ef9debfd6b8250e" translate="yes" xml:space="preserve">
          <source>UnknownConstraintError</source>
          <target state="translated">UnknownConstraintError</target>
        </trans-unit>
        <trans-unit id="bc5db458c7c36e7b25c7945029e0987d16c1427e" translate="yes" xml:space="preserve">
          <source>Unlike One-To-One and One-To-Many relationships, the defaults for both &lt;code&gt;ON UPDATE&lt;/code&gt; and &lt;code&gt;ON DELETE&lt;/code&gt; are &lt;code&gt;CASCADE&lt;/code&gt; for Many-To-Many relationships.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ffe5ab2779bb34cc0bfb9cf5eaf5ee797a64b24" translate="yes" xml:space="preserve">
          <source>Unlimited length TEXT column</source>
          <target state="translated">Неограниченная длина столбец TEXT</target>
        </trans-unit>
        <trans-unit id="8af0da98ed87540aaa0dbdb43e9a7c640c6b959f" translate="yes" xml:space="preserve">
          <source>Unmanaged transaction (then-callback)</source>
          <target state="translated">Неуправляемая транзакция (затем обратный звонок)</target>
        </trans-unit>
        <trans-unit id="c45cf6088e2c1253666157ad780b1311f1452f62" translate="yes" xml:space="preserve">
          <source>Unmanaged transactions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd577906d7a1a1b1385cb8a984b7d3856e2f12b2" translate="yes" xml:space="preserve">
          <source>Unmanaged transactions force you to manually rollback or commit the transaction. If you don't do that, the transaction will hang until it times out. To start an unmanaged transaction, call &lt;code&gt;sequelize.transaction()&lt;/code&gt; without a callback (you can still pass an options object) and call &lt;code&gt;then&lt;/code&gt; on the returned promise. Notice that &lt;code&gt;commit()&lt;/code&gt; and &lt;code&gt;rollback()&lt;/code&gt; returns a promise.</source>
          <target state="translated">Неуправляемые транзакции заставляют вас вручную откатывать или фиксировать транзакцию. Если вы этого не сделаете, транзакция зависнет до истечения времени ожидания. Чтобы начать неуправляемую транзакцию, вызовите &lt;code&gt;sequelize.transaction()&lt;/code&gt; без обратного вызова (вы все равно можете передать объект параметров), а &lt;code&gt;then&lt;/code&gt; вызовите возвращенное обещание. Обратите внимание, что &lt;code&gt;commit()&lt;/code&gt; и &lt;code&gt;rollback()&lt;/code&gt; возвращают обещание.</target>
        </trans-unit>
        <trans-unit id="f1d79994c9809aebe7a9b8930b18b18450d91cf8" translate="yes" xml:space="preserve">
          <source>Unsigned &amp;amp; Zerofill integers - MySQL/MariaDB only</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ba0e0f0a8ebd86853d71c3017b27a061df207ac" translate="yes" xml:space="preserve">
          <source>Until this step, we haven't inserted anything into the database. We have just created required model and migration files for our first model &lt;code&gt;User&lt;/code&gt;. Now to actually create that table in database you need to run &lt;code&gt;db:migrate&lt;/code&gt; command.</source>
          <target state="translated">До этого шага мы ничего не вставляли в базу данных. Мы только что создали необходимые файлы модели и миграции для нашей первой модели &lt;code&gt;User&lt;/code&gt; . Теперь, чтобы создать эту таблицу в базе данных, вам нужно запустить команду &lt;code&gt;db:migrate&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cc4ede8d78ca2ecaf76d56b490662d4a770a09dc" translate="yes" xml:space="preserve">
          <source>Update multiple instances that match the where options.</source>
          <target state="translated">Обновите несколько экземпляров,которые соответствуют параметрам &quot;где&quot;.</target>
        </trans-unit>
        <trans-unit id="6558917397e29e04756c7dcd6e3c7c75805acdf9" translate="yes" xml:space="preserve">
          <source>Update multiple records of a table</source>
          <target state="translated">Обновление нескольких записей таблицы</target>
        </trans-unit>
        <trans-unit id="95ad496c8b237465fa16d87da4c3c299bb24272d" translate="yes" xml:space="preserve">
          <source>Update queries also accept the &lt;code&gt;where&lt;/code&gt; option, just like the read queries shown above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23a42b6bdad20ed91567ad7e4f8b2f7d0f730d51" translate="yes" xml:space="preserve">
          <source>Update the underlying data value</source>
          <target state="translated">Обновить значение базовых данных</target>
        </trans-unit>
        <trans-unit id="f2f8570ddd7b1e7b571311bbf9159efb02571e07" translate="yes" xml:space="preserve">
          <source>Updated</source>
          <target state="translated">Updated</target>
        </trans-unit>
        <trans-unit id="62d1f25d7f288d21c737766fd3baebe82d4acf4e" translate="yes" xml:space="preserve">
          <source>Updating / Saving / Persisting an instance</source>
          <target state="translated">Обновление/Сохранение/Персонификация экземпляра</target>
        </trans-unit>
        <trans-unit id="b99732d8df1c3f14f3a83f1582ed1ba8bead2c5c" translate="yes" xml:space="preserve">
          <source>Updating an instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b4783ecbea2fdec8ac4829611952364749fb71b" translate="yes" xml:space="preserve">
          <source>Upgrade to v6</source>
          <target state="translated">Обновление до v6</target>
        </trans-unit>
        <trans-unit id="e66a0fdf4e2a31a438f6baff851b7d51cf94baad" translate="yes" xml:space="preserve">
          <source>Upsert</source>
          <target state="translated">Upsert</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">Usage</target>
        </trans-unit>
        <trans-unit id="ca4a8392ae80ccbc1c2a9df8a31290eaa680f49b" translate="yes" xml:space="preserve">
          <source>Usage in object notation:</source>
          <target state="translated">Использование в условных обозначениях объектов:</target>
        </trans-unit>
        <trans-unit id="e3a0f3f0d9aada934a03129fc160d898585273a1" translate="yes" xml:space="preserve">
          <source>Usage of &lt;code&gt;sequelize.define&lt;/code&gt;</source>
          <target state="translated">Использование &lt;code&gt;sequelize.define&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="025acb8f72c5cc278df18bc4024236c7eb9d9e6b" translate="yes" xml:space="preserve">
          <source>Usage with other sequelize methods</source>
          <target state="translated">Использование с другими методами секвелизации</target>
        </trans-unit>
        <trans-unit id="dc3abaf0d98cc1a8a9571a4f6a436825a1cbf035" translate="yes" xml:space="preserve">
          <source>Usage without strict types for attributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac325364009ce01b716bd91e61ac5855e8ae3c1e" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;config/database.json&lt;/code&gt; file for config settings</source>
          <target state="translated">Используйте файл &lt;code&gt;config/database.json&lt;/code&gt; для настроек конфигурации</target>
        </trans-unit>
        <trans-unit id="ecca640bbfaddded09956877a59b853201e17053" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;config/database.json&lt;/code&gt; file for config settings;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64466839065b9175b11a3b0579d4dcec4b8f57b5" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;db/migrations&lt;/code&gt; as migrations folder</source>
          <target state="translated">Использовать &lt;code&gt;db/migrations&lt;/code&gt; как папку миграции</target>
        </trans-unit>
        <trans-unit id="0f3f806910fa916c898209abed73b6fc38cab6d3" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;db/migrations&lt;/code&gt; as migrations folder.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ea90baccac616c216388e0c570f733074393330" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;db/models&lt;/code&gt; as models folder</source>
          <target state="translated">Используйте &lt;code&gt;db/models&lt;/code&gt; в качестве папки моделей</target>
        </trans-unit>
        <trans-unit id="c03d68b783dc0b56890950edb72de68913012b8d" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;db/models&lt;/code&gt; as models folder;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4adebc7fa9a0bb6eac2ce9575762392298075792" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;db/seeders&lt;/code&gt; as seeders folder</source>
          <target state="translated">Используйте &lt;code&gt;db/seeders&lt;/code&gt; как папку сидеров</target>
        </trans-unit>
        <trans-unit id="60ae030e30cd3830fa0c13b433930301749d03d7" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;db/seeders&lt;/code&gt; as seeders folder;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65116e42dcba94d836cc59896aaf1892dd9a99db" translate="yes" xml:space="preserve">
          <source>Use CLS with Sequelize.</source>
          <target state="translated">Используйте CLS с Sequelize.</target>
        </trans-unit>
        <trans-unit id="527fd74c4e6ef10c6a8aa5b4d7c0c382077bee70" translate="yes" xml:space="preserve">
          <source>Use CLS with Sequelize. CLS namespace provided is stored as &lt;code&gt;Sequelize._cls&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5022af106308022a9aa28b0bc2507901fcd6639" translate="yes" xml:space="preserve">
          <source>Use CLS with Sequelize. CLS namespace provided is stored as &lt;code&gt;Sequelize._cls&lt;/code&gt; and bluebird Promise is patched to use the namespace, using &lt;code&gt;cls-bluebird&lt;/code&gt; module.</source>
          <target state="translated">Используйте CLS с Sequelize. Предоставленное пространство имен CLS хранится как &lt;code&gt;Sequelize._cls&lt;/code&gt; , а bluebird Promise исправлен для использования пространства имен с использованием модуля &lt;code&gt;cls-bluebird&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="991cc0765855434ec9a8f2314dfff9493e54a1a7" translate="yes" xml:space="preserve">
          <source>Use environment variables for config settings. This is because secrets such as passwords should never be part of the source code (and especially not committed to version control).</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
