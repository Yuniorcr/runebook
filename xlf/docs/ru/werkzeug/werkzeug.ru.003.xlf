<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="werkzeug">
    <body>
      <group id="werkzeug">
        <trans-unit id="0148d97cfadb1f658a8b9cbdcdb3baca1ced7d40" translate="yes" xml:space="preserve">
          <source>check a password against a given salted and hashed password value. In order to support unsalted legacy passwords this method supports plain text passwords, md5 and sha1 hashes (both salted and unsalted).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2575d98b797e8e71de4808c31a9958f00bc1892d" translate="yes" xml:space="preserve">
          <source>different python interpreters being used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4468e5deabf5e6d0740cd1a77df56f67093ec943" translate="yes" xml:space="preserve">
          <source>generator</source>
          <target state="translated">generator</target>
        </trans-unit>
        <trans-unit id="b64572a066fe98d0adaecfcc1657d03059977ced" translate="yes" xml:space="preserve">
          <source>if set to &lt;code&gt;False&lt;/code&gt; accessing properties on the response object will not try to consume the response iterator and convert it into a list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="408c77b641a894cf325b890c5fd48882f324dd71" translate="yes" xml:space="preserve">
          <source>if you call &lt;code&gt;parse_form_data()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ec4b48fbfe495ef61261ff02cda11b79895ef7a" translate="yes" xml:space="preserve">
          <source>imported object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="916d088b696e08e712a268e9d41af4aa3ad27a7e" translate="yes" xml:space="preserve">
          <source>input content type was &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt;. Then the &lt;code&gt;stream&lt;/code&gt; will be empty and &lt;code&gt;form&lt;/code&gt; will contain the regular &lt;code&gt;POST&lt;/code&gt; / &lt;code&gt;PUT&lt;/code&gt; data and &lt;code&gt;files&lt;/code&gt; will be empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98808cfad52b6c3c795b798e739686d0efc74204" translate="yes" xml:space="preserve">
          <source>input content type was &lt;code&gt;multipart/form-data&lt;/code&gt;. In this situation the &lt;code&gt;stream&lt;/code&gt; will be empty and &lt;code&gt;form&lt;/code&gt; will contain the regular &lt;code&gt;POST&lt;/code&gt; / &lt;code&gt;PUT&lt;/code&gt; data, &lt;code&gt;files&lt;/code&gt; will contain the uploaded files as &lt;code&gt;FileStorage&lt;/code&gt; objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="059ee5c820ec554bcc5add0e4d568b939278cfea" translate="yes" xml:space="preserve">
          <source>invalid status codes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38b62be4bddaa5661c7d6b8e36e28159314df5c7" translate="yes" xml:space="preserve">
          <source>list</source>
          <target state="translated">list</target>
        </trans-unit>
        <trans-unit id="deac6525f100db1c8ece6f318bb1f7313f8d8291" translate="yes" xml:space="preserve">
          <source>mod_wsgi (Apache)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80f6590e548f9d4d1c71a32f935d8be1fd6c8243" translate="yes" xml:space="preserve">
          <source>non-bytestrings sent to the WSGI server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="286db27b79f5d1fcab8d815fbb42c4756582a6e6" translate="yes" xml:space="preserve">
          <source>non-empty conditional responses</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c51048b7325d60e326d19a9cfbeff2577be1672e" translate="yes" xml:space="preserve">
          <source>note</source>
          <target state="translated">note</target>
        </trans-unit>
        <trans-unit id="274378c86817b1bde75a41559b267e59ee5e65f8" translate="yes" xml:space="preserve">
          <source>relative URLs in the Location header</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acb833c9b82d2687c1f8976fede31088ef9333b7" translate="yes" xml:space="preserve">
          <source>relative paths being used. Don&amp;rsquo;t rely on the current working directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="829aff059e8c8831f8ffeab4ef912013147f6dc9" translate="yes" xml:space="preserve">
          <source>request object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5ed050c15ec2438fed52c25b35be56a9656d3c7" translate="yes" xml:space="preserve">
          <source>returns a new &lt;a href=&quot;../datastructures/index#werkzeug.datastructures.Headers&quot;&gt;&lt;code&gt;Headers&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59278e98e0b1d2f63a39825157f5978b1d49fa48" translate="yes" xml:space="preserve">
          <source>shortly in the example folder</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7c351a94001458fbdebac37186cd064b21fb406" translate="yes" xml:space="preserve">
          <source>strings returned from the WSGI application</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="735ce1164621b69da9865fca97123f0eb69937a0" translate="yes" xml:space="preserve">
          <source>the browser platform. &lt;code&gt;None&lt;/code&gt; if not recognized. The following platforms are currently recognized:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c9597f84bc831d8ef79a8424986bad21e61c617" translate="yes" xml:space="preserve">
          <source>the charset for the request, defaults to utf-8</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20a42ceb1afb434de25004f7e6354e88d2fc3164" translate="yes" xml:space="preserve">
          <source>the charset of the response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74ad2580bd09284c15ec78f9bfbd081219346a4d" translate="yes" xml:space="preserve">
          <source>the code depending on environment variables that are not set by the web server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d762cad823600350d725fff0c02790cddd510e66" translate="yes" xml:space="preserve">
          <source>the default mimetype if none is provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e84dcc6555e41d647d621c2b3c3f290d0fd7b55c" translate="yes" xml:space="preserve">
          <source>the default status if none is provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddf3fdddc3e30ae473b03d6fe34128b8e9bec298" translate="yes" xml:space="preserve">
          <source>the error handling procedure for errors, defaults to &amp;lsquo;replace&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1f23185fb8d843a9dc40aa1eea2578929a053a8" translate="yes" xml:space="preserve">
          <source>the input content type was neither of them, &lt;code&gt;stream&lt;/code&gt; points to a &lt;code&gt;LimitedStream&lt;/code&gt; with the input data for further processing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8918017f8dd5a7ae71eca125260761dcf863e5d" translate="yes" xml:space="preserve">
          <source>the language of the browser. &lt;code&gt;None&lt;/code&gt; if not recognized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d7160247219164e609847a8a73b6b17f496a879" translate="yes" xml:space="preserve">
          <source>the maximum content length. This is forwarded to the form data parsing function (&lt;code&gt;parse_form_data()&lt;/code&gt;). When set and the &lt;a href=&quot;#werkzeug.wrappers.BaseRequest.form&quot;&gt;&lt;code&gt;form&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#werkzeug.wrappers.BaseRequest.files&quot;&gt;&lt;code&gt;files&lt;/code&gt;&lt;/a&gt; attribute is accessed and the parsing fails because more than the specified value is transmitted a &lt;a href=&quot;../exceptions/index#werkzeug.exceptions.RequestEntityTooLarge&quot;&gt;&lt;code&gt;RequestEntityTooLarge&lt;/code&gt;&lt;/a&gt; exception is raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fedd1e5c5649a565177f63a993cbeaf86b13e94a" translate="yes" xml:space="preserve">
          <source>the maximum form field size. This is forwarded to the form data parsing function (&lt;code&gt;parse_form_data()&lt;/code&gt;). When set and the &lt;a href=&quot;#werkzeug.wrappers.BaseRequest.form&quot;&gt;&lt;code&gt;form&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#werkzeug.wrappers.BaseRequest.files&quot;&gt;&lt;code&gt;files&lt;/code&gt;&lt;/a&gt; attribute is accessed and the data in memory for post data is longer than the specified value a &lt;a href=&quot;../exceptions/index#werkzeug.exceptions.RequestEntityTooLarge&quot;&gt;&lt;code&gt;RequestEntityTooLarge&lt;/code&gt;&lt;/a&gt; exception is raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeb3807fd9f507780d016110bbfb2522c3e30260" translate="yes" xml:space="preserve">
          <source>the name of the browser. &lt;code&gt;None&lt;/code&gt; if not recognized. The following browsers are currently recognized:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e4315065df23a5b022b9a3ce628d5b86ba63b72" translate="yes" xml:space="preserve">
          <source>the raw user agent string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8d2bb3a9e3854d7c4f849f29f06448428effb70" translate="yes" xml:space="preserve">
          <source>the server protocol to use. defaults to HTTP/1.1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb55dcdd2d3314af97ab06c2f459866fd46fb4b6" translate="yes" xml:space="preserve">
          <source>the version of the browser. &lt;code&gt;None&lt;/code&gt; if not recognized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac367e7855743d68b73f44d3bc3f5174e7c2c33d" translate="yes" xml:space="preserve">
          <source>the wsgi version to use. defaults to (1, 0)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="659ff171947dcd0bacb5c2df0bb21453a85bcff5" translate="yes" xml:space="preserve">
          <source>tuple in the form &lt;code&gt;(app_iter, status, headers)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a2b52989324975064c43448d3cd8434f87c4b54" translate="yes" xml:space="preserve">
          <source>tuple in the form &lt;code&gt;(args, kwargs)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf035c95927b8ed4d52b90b227bd8ba8fed939c1" translate="yes" xml:space="preserve">
          <source>unclosed iterators</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abf290499781e0a0d717d613db50714feb69fd48" translate="yes" xml:space="preserve">
          <source>unquoted etags</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23ec369d3c70cbf5b06bab8a41b4b9d96052812e" translate="yes" xml:space="preserve">
          <source>unsafe calls to wsgi.input</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b338555c438e57bfd54875dc803a25ab2483c91f" translate="yes" xml:space="preserve">
          <source>update() extends rather than replaces existing key lists:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72fb079d51c05a0901e4c8609b2912fede687105" translate="yes" xml:space="preserve">
          <source>werkzeug.exceptions</source>
          <target state="translated">werkzeug.exceptions</target>
        </trans-unit>
        <trans-unit id="b74cd48cbe1dd637a2b9b4baaa56973494454e43" translate="yes" xml:space="preserve">
          <source>werkzeug.urls</source>
          <target state="translated">werkzeug.urls</target>
        </trans-unit>
        <trans-unit id="35524437a7bd013345787078417f67304e3d6b5c" translate="yes" xml:space="preserve">
          <source>you access either &lt;code&gt;form&lt;/code&gt;, &lt;code&gt;files&lt;/code&gt;, or &lt;code&gt;stream&lt;/code&gt; and the request method was &lt;code&gt;POST&lt;/code&gt; or &lt;code&gt;PUT&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42bf321e5f108f189952044801f2ff9695d00a70" translate="yes" xml:space="preserve">
          <source>you get a tuple in the form &lt;code&gt;(endpoint, arguments)&lt;/code&gt; if there is a match (unless &lt;code&gt;return_rule&lt;/code&gt; is True, in which case you get a tuple in the form &lt;code&gt;(rule, arguments)&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20d069a2a2049a17878cda81fb6bdae3e83b6262" translate="yes" xml:space="preserve">
          <source>you receive a &lt;code&gt;MethodNotAllowed&lt;/code&gt; exception that indicates that there is a match for this URL but not for the current request method. This is useful for RESTful applications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fdc9bf524020e5db1801925954e102b67d83fb5" translate="yes" xml:space="preserve">
          <source>you receive a &lt;code&gt;NotFound&lt;/code&gt; exception that indicates that no URL is matching. A &lt;code&gt;NotFound&lt;/code&gt; exception is also a WSGI application you can call to get a default page not found page (happens to be the same object as &lt;code&gt;werkzeug.exceptions.NotFound&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d9e8b455fd269155911611c930b0afb0b5d6ad7" translate="yes" xml:space="preserve">
          <source>you receive a &lt;code&gt;RequestRedirect&lt;/code&gt; exception with a &lt;code&gt;new_url&lt;/code&gt; attribute. This exception is used to notify you about a request Werkzeug requests from your WSGI application. This is for example the case if you request &lt;code&gt;/foo&lt;/code&gt; although the correct URL is &lt;code&gt;/foo/&lt;/code&gt; You can use the &lt;code&gt;RequestRedirect&lt;/code&gt; instance as response-like object similar to all other subclasses of &lt;code&gt;HTTPException&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18568d6914683b30c9f4c11b997790cd79e2b72e" translate="yes" xml:space="preserve">
          <source>you receive a &lt;code&gt;WebsocketMismatch&lt;/code&gt; exception if the only match is a WebSocket rule but the bind is an HTTP request, or if the match is an HTTP rule but the bind is a WebSocket request.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
