<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="phoenix">
    <body>
      <group id="phoenix">
        <trans-unit id="77a10d3c15e1a5732087fd9a99ab499e3a47d081" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#parse/5&quot;&gt; Link to this function &lt;/a&gt;parse(conn, arg2, subtype, headers, opts)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29af14e2a3331bb092ba9be8c779517e75d0b461" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#patch/3&quot;&gt; Link to this macro &lt;/a&gt;patch(path, options, contents \\ [])(macro)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35584c996b42a3972cece020b64ea7965ef618c2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#plug/2&quot;&gt; Link to this macro &lt;/a&gt;plug(plug, opts \\ [])(macro)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4f73b3d4d42ef019e87ae51ce315f1039aa5f22" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#pop/2&quot;&gt; Link to this function &lt;/a&gt;pop(map, key)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a65368edb6e72772333b605e84eda7913b06543" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#post/3&quot;&gt; Link to this macro &lt;/a&gt;post(path, options, contents \\ [])(macro)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04c584719624bac085b9aa9e4cc97e2d41d86bc1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#prepend_resp_headers/2&quot;&gt; Link to this function &lt;/a&gt;prepend_resp_headers(conn, headers)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec6b82234daf81b32f90988c6b20f637a3e4fc37" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#push!/3&quot;&gt; Link to this function &lt;/a&gt;push!(conn, path, headers \\ [])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31c0261a7bd6a7a764b01f904eac96115feee3f9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#push/3&quot;&gt; Link to this function &lt;/a&gt;push(conn, path, headers \\ [])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="837e0dab61122c96ae7e2375011214788c3e4e0e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#put/3&quot;&gt; Link to this macro &lt;/a&gt;put(path, options, contents \\ [])(macro)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15f7189cf8d6e0eb531715b6000f29617c24f0b3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#put_assoc/4&quot;&gt;&lt;code&gt;put_assoc/4&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#put_embed/4&quot;&gt;&lt;code&gt;put_embed/4&lt;/code&gt;&lt;/a&gt; - it allows you to replace the association or embed as a whole. This can be used to move associated data from one entry to another, to completely remove or replace existing entries.</source>
          <target state="translated">&lt;a href=&quot;#put_assoc/4&quot;&gt; &lt;code&gt;put_assoc/4&lt;/code&gt; &lt;/a&gt; и&lt;a href=&quot;#put_embed/4&quot;&gt; &lt;code&gt;put_embed/4&lt;/code&gt; &lt;/a&gt; - позволяет заменить ассоциацию или встроить целиком. Это можно использовать для перемещения связанных данных из одной записи в другую, чтобы полностью удалить или заменить существующие записи.</target>
        </trans-unit>
        <trans-unit id="9c28f261830d39658ded4f0904da525363372eef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#put_private/3&quot;&gt; Link to this function &lt;/a&gt;put_private(conn, key, value)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef7a72ed0df4a98a7af091a0021657a6789810cb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#put_req_header/3&quot;&gt; Link to this function &lt;/a&gt;put_req_header(conn, key, value)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c163674499d951620261f286cd4fc0c170b2a4f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#put_resp_content_type/3&quot;&gt; Link to this function &lt;/a&gt;put_resp_content_type(conn, content_type, charset \\ &quot;utf-8&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19a0ef56a5a60bff3e85f23799bd2bcf852b9b6c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#put_resp_cookie/4&quot;&gt; Link to this function &lt;/a&gt;put_resp_cookie(conn, key, value, opts \\ [])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa690c478f29f98845c571ab49b023854be078da" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#put_resp_header/3&quot;&gt; Link to this function &lt;/a&gt;put_resp_header(conn, key, value)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="282043b62cf1874399ba7a0d1c2bcd377db87e3b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#put_session/3&quot;&gt; Link to this function &lt;/a&gt;put_session(conn, key, value)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f8f3684c5a233880b4a65a7a773d143fefc2a1d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#put_status/2&quot;&gt; Link to this function &lt;/a&gt;put_status(conn, status)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6578cf0e8d5a270ac98a62aee566e527a69074af" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#put_view/2&quot;&gt;&lt;code&gt;put_view/2&lt;/code&gt;&lt;/a&gt; can also be used as a plug:</source>
          <target state="translated">&lt;a href=&quot;#put_view/2&quot;&gt; &lt;code&gt;put_view/2&lt;/code&gt; &lt;/a&gt; также можно использовать как плагин:</target>
        </trans-unit>
        <trans-unit id="75a5add17df94d3066cc7f6c940dbc7aa147abb1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#random_file!/1&quot;&gt; Link to this function &lt;/a&gt;random_file!(prefix)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d57fee64d400b7aba4889da0075657bda9549fc8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#random_file/1&quot;&gt; Link to this function &lt;/a&gt;random_file(prefix)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0396fc4e726db0898056f4c5435f1e6438e48f8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#read_body/2&quot;&gt; Link to this function &lt;/a&gt;read_body(conn, opts \\ [])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bf41326f9796a5a258acc22539c094bcc6ac5e4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#read_part_body/2&quot;&gt; Link to this function &lt;/a&gt;read_part_body(conn, opts)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13cced1a6bc69f95c091ae23c020f1c334aa74ba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#read_part_headers/2&quot;&gt; Link to this function &lt;/a&gt;read_part_headers(conn, opts \\ [])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="493694b258a923261c94192bac340e42c8e7c693" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#reason_atom/1&quot;&gt; Link to this function &lt;/a&gt;reason_atom(code)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cbd120446d032d2b75003e25497d90a6a780070" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#reason_phrase/1&quot;&gt; Link to this function &lt;/a&gt;reason_phrase(integer)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a7348c545ee0f64b5660d920d48a5363b572f4a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#register_before_send/2&quot;&gt; Link to this function &lt;/a&gt;register_before_send(conn, callback)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="959756e71befabfbd498f379241cc341d463bb8b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#render_blur/1&quot;&gt;&lt;code&gt;render_blur/1&lt;/code&gt;&lt;/a&gt; - sends a phx-blur event and value, returning the rendered result of the &lt;code&gt;handle_event/3&lt;/code&gt; callback.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b268ff8ccb17517d7f8b57e94475fdfdc2d35faf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#render_change/1&quot;&gt;&lt;code&gt;render_change/1&lt;/code&gt;&lt;/a&gt; - sends a form phx-change event and value, returning the rendered result of the &lt;code&gt;handle_event/3&lt;/code&gt; callback.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="506ed06795374358ccc7b60c2515d702d663c29a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#render_click/1&quot;&gt;&lt;code&gt;render_click/1&lt;/code&gt;&lt;/a&gt; - sends a phx-click event and value, returning the rendered result of the &lt;code&gt;handle_event/3&lt;/code&gt; callback.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4598d66528392d6a775ca331b8adb4663351cc6b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#render_focus/2&quot;&gt;&lt;code&gt;render_focus/2&lt;/code&gt;&lt;/a&gt; - sends a phx-focus event and value, returning the rendered result of the &lt;code&gt;handle_event/3&lt;/code&gt; callback.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed68f0732e98882981d6739339cf4a2121c6a1bf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#render_hook/3&quot;&gt;&lt;code&gt;render_hook/3&lt;/code&gt;&lt;/a&gt; - sends a hook event and value, returning the rendered result of the &lt;code&gt;handle_event/3&lt;/code&gt; callback.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f8f6e88e885dbc8857be0da7400a0f341eee206" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#render_keydown/1&quot;&gt;&lt;code&gt;render_keydown/1&lt;/code&gt;&lt;/a&gt; - sends a form phx-keydown event and value, returning the rendered result of the &lt;code&gt;handle_event/3&lt;/code&gt; callback.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0edb867192473d51ec12efac76e0f7fc4ca52f7c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#render_keyup/1&quot;&gt;&lt;code&gt;render_keyup/1&lt;/code&gt;&lt;/a&gt; - sends a form phx-keyup event and value, returning the rendered result of the &lt;code&gt;handle_event/3&lt;/code&gt; callback.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="940189949c3789973c06e45c9045aa04dc28d1a5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#render_submit/1&quot;&gt;&lt;code&gt;render_submit/1&lt;/code&gt;&lt;/a&gt; - sends a form phx-submit event and value, returning the rendered result of the &lt;code&gt;handle_event/3&lt;/code&gt; callback.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9efb7eb01b31656726c90b1d5eb88650eb6579d1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#request_url/1&quot;&gt; Link to this function &lt;/a&gt;request_url(conn)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35fe825f42393b8f7a51ab3f22d4d402562a97a1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#reraise/3&quot;&gt;reraise(conn, kind, reason)&lt;/a&gt;deprecated</source>
          <target state="translated">&lt;a href=&quot;#reraise/3&quot;&gt;reraise (conn, kind, cause)&lt;/a&gt; не рекомендуется</target>
        </trans-unit>
        <trans-unit id="105ce9b1ec32d93a841378fa30b42a6cf3a9fa24" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#resp/3&quot;&gt; Link to this function &lt;/a&gt;resp(conn, status, body)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb518f85e1dcf6ffd061a14ed5eb192a79dfd6fe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#schema/2&quot;&gt;&lt;code&gt;schema/2&lt;/code&gt;&lt;/a&gt; is typically used to map data from a persisted source, usually a database table, into Elixir structs and vice-versa. For this reason, the first argument of &lt;a href=&quot;#schema/2&quot;&gt;&lt;code&gt;schema/2&lt;/code&gt;&lt;/a&gt; is the source (table) name. Structs defined with &lt;a href=&quot;#schema/2&quot;&gt;&lt;code&gt;schema/2&lt;/code&gt;&lt;/a&gt; also contain a &lt;code&gt;__meta__&lt;/code&gt; field with metadata holding the status of the struct, for example, if it has been built, loaded or deleted.</source>
          <target state="translated">&lt;a href=&quot;#schema/2&quot;&gt; &lt;code&gt;schema/2&lt;/code&gt; &lt;/a&gt; обычно используется для отображения данных из постоянного источника, обычно таблицы базы данных, в структуры Elixir и наоборот. По этой причине первым аргументом&lt;a href=&quot;#schema/2&quot;&gt; &lt;code&gt;schema/2&lt;/code&gt; &lt;/a&gt; является имя источника (таблицы). Структуры, определенные с помощью&lt;a href=&quot;#schema/2&quot;&gt; &lt;code&gt;schema/2&lt;/code&gt; ,&lt;/a&gt; также содержатполе &lt;code&gt;__meta__&lt;/code&gt; с метаданными, содержащими статус структуры, например, если она была построена, загружена или удалена.</target>
        </trans-unit>
        <trans-unit id="541e0a62b0e82041ff507cd2342a458394aaddb6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#send_chunked/2&quot;&gt; Link to this function &lt;/a&gt;send_chunked(conn, status)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b21531d9a947047a6e1a3c77f7802b6d898d2097" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#send_file/5&quot;&gt; Link to this function &lt;/a&gt;send_file(conn, status, file, offset \\ 0, length \\ :all)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dabc1867a3214878d7fbd7a58c0aa5bfa54e97f2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#send_resp/1&quot;&gt; Link to this function &lt;/a&gt;send_resp(conn)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14e1ab335b9fe9ddeb0ded66b4a7142291a85ddf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#send_resp/3&quot;&gt; Link to this function &lt;/a&gt;send_resp(conn, status, body)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="110def5d1fde3f4e879f22bbb98252a4fca27774" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#start_link/0&quot;&gt; Link to this function &lt;/a&gt;start_link()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6216545cbfe935623a997cd73b5a063e0d66751" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#struct/2&quot;&gt;&lt;code&gt;struct/2&lt;/code&gt;&lt;/a&gt; can also be used to dynamically select fields:</source>
          <target state="translated">&lt;a href=&quot;#struct/2&quot;&gt; &lt;code&gt;struct/2&lt;/code&gt; &lt;/a&gt; также может использоваться для динамического выбора полей:</target>
        </trans-unit>
        <trans-unit id="baea09c0d5a4add33f8d5972e29f71214e4999b0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#t:adapter/0&quot;&gt; Link to this type &lt;/a&gt;adapter()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc96cb2b992b4b45f63bcd43e949ae540752bc7c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#t:assigns/0&quot;&gt; Link to this type &lt;/a&gt;assigns()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce26b7d9cd1605bccb614fa43d356dc2578a2787" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#t:before_send/0&quot;&gt; Link to this type &lt;/a&gt;before_send()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86b13288ff2966bc33bbbd419a21f66c1e1b7d95" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#t:body/0&quot;&gt; Link to this type &lt;/a&gt;body()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69cfe828e208d4890fb3984f92c829fbaf4bb66b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#t:cookies/0&quot;&gt; Link to this type &lt;/a&gt;cookies()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="727eab312812f1f7ed7d3fc9a28cccaceadda143" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#t:halted/0&quot;&gt; Link to this type &lt;/a&gt;halted()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="986ea7ee5b1bffc73c86e6529bf763c90e7cf6b5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#t:headers/0&quot;&gt; Link to this type &lt;/a&gt;headers()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95492efdb19a6f4e37c5181ffbc0287c43426d95" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#t:host/0&quot;&gt; Link to this type &lt;/a&gt;host()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="513e3988c025f93b0c16e4f6f067845df5fc23f4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#t:http_protocol/0&quot;&gt; Link to this type &lt;/a&gt;http_protocol()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ee24c38b281244c29b327977aef478cb65b777d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#t:int_status/0&quot;&gt; Link to this type &lt;/a&gt;int_status()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecdf15ee71e3f338287dccaa3774511b2a8b6dff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#t:method/0&quot;&gt; Link to this type &lt;/a&gt;method()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82d4e34e94aec441eac6dd796b9c891e0a720faa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#t:opts/0&quot;&gt; Link to this type &lt;/a&gt;opts()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e9f713c62553827c7b211f0de6e5a521e2e5271" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#t:owner/0&quot;&gt; Link to this type &lt;/a&gt;owner()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2780fe749c94980350e0eb4757d7446af3b4d5a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#t:param/0&quot;&gt; Link to this type &lt;/a&gt;param()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d23ef2cdcd1107d8716f881dfccf6d59f292582" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#t:params/0&quot;&gt; Link to this type &lt;/a&gt;params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1f25e221c200a9441673f3b068799b3e34cf5d6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#t:payload/0&quot;&gt; Link to this type &lt;/a&gt;payload()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8276bbcf389d23bce041549513674beef64d7000" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#t:peer_data/0&quot;&gt; Link to this type &lt;/a&gt;peer_data()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc6101b133c3e08d39cee48a95de477bf0ceaac8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#t:plug/0&quot;&gt; Link to this type &lt;/a&gt;plug()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bc346c7cfba2197e30a8b01f32c484fbba72b0c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#t:port_number/0&quot;&gt; Link to this type &lt;/a&gt;port_number()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b35563b12fe267a126700b47fb0165baca72086e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#t:query_string/0&quot;&gt; Link to this type &lt;/a&gt;query_string()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e171898867e9567f0ad56b2d785a98debfe8ef94" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#t:resp_cookies/0&quot;&gt; Link to this type &lt;/a&gt;resp_cookies()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46cd88c867f6c615edf944dcef6a99b9c72982b8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#t:scheme/0&quot;&gt; Link to this type &lt;/a&gt;scheme()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ce6821412d1de94adb5470fb8ee586298506f28" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#t:secret_key_base/0&quot;&gt; Link to this type &lt;/a&gt;secret_key_base()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a03c8f0bc00bf2f5694a09e2e58ccd4d1277469" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#t:segments/0&quot;&gt; Link to this type &lt;/a&gt;segments()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a58fb00d43015de4166e790f0c55d1f99dadcfa4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#t:state/0&quot;&gt; Link to this type &lt;/a&gt;state()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="110ffb93ebde70990ae5eb23f2e1933391beccf8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#t:status/0&quot;&gt; Link to this type &lt;/a&gt;status()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbd8b1f81100d86fa4de78c0a5d7eaa0ca652bdb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#t:t/0&quot;&gt; Link to this type &lt;/a&gt;t()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a46bd82532e8844bd2600096d59c7030c72568a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#to_list/1&quot;&gt;&lt;code&gt;Ecto.Multi.to_list/1&lt;/code&gt;&lt;/a&gt; returns a canonical representation of the structure that can be used for introspection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfb87453b0ebd294feeb47267b968eec990a719e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#update_req_header/4&quot;&gt; Link to this function &lt;/a&gt;update_req_header(conn, key, initial, fun)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8186a7f9029090c7a4935a54976b6b71bbd6ab9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#update_resp_header/4&quot;&gt; Link to this function &lt;/a&gt;update_resp_header(conn, key, initial, fun)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd4f3f8610712e59f0083f88e734fd941ba248b0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../phoenix_html/phoenix.html.link#link/2&quot;&gt;&lt;code&gt;link/2&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../phoenix/phoenix.controller#redirect/2&quot;&gt;&lt;code&gt;redirect/2&lt;/code&gt;&lt;/a&gt; do full page reloads</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69f560fa0f431b857039df9c291d8a65f364f204" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../plug/1.5.1/plug.conn&quot;&gt;&lt;code&gt;Plug.Conn&lt;/code&gt;&lt;/a&gt; - a collection of low-level functions to work with the connection</source>
          <target state="translated">&lt;a href=&quot;../plug/1.5.1/plug.conn&quot;&gt; &lt;code&gt;Plug.Conn&lt;/code&gt; &lt;/a&gt; - набор низкоуровневых функций для работы с подключением</target>
        </trans-unit>
        <trans-unit id="1e135fe94797e893e18dc6e0f8ca6a5bca73eb29" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../plug/1.5.1/plug.conn&quot;&gt;&lt;code&gt;Plug.Conn&lt;/code&gt;&lt;/a&gt; - where the secret key base is extracted from the endpoint stored in the connection</source>
          <target state="translated">&lt;a href=&quot;../plug/1.5.1/plug.conn&quot;&gt; &lt;code&gt;Plug.Conn&lt;/code&gt; &lt;/a&gt; - где база секретных ключей извлекается из конечной точки, хранящейся в соединении.</target>
        </trans-unit>
        <trans-unit id="b925597ef48a7585d69180acfef9ccadf028e78a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../plug/plug.conn&quot;&gt;&lt;code&gt;Plug.Conn&lt;/code&gt;&lt;/a&gt; - a collection of low-level functions to work with the connection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10bb25cebf4d7d0d50b77b9383f73c8b4bd789b1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../plug/plug.conn&quot;&gt;&lt;code&gt;Plug.Conn&lt;/code&gt;&lt;/a&gt; - where the secret key base is extracted from the endpoint stored in the connection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06b3ddaccf13da1886b628aa946d87236f0f91da" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../plug/plug.conn#put_status/2&quot;&gt;&lt;code&gt;Plug.Conn.put_status/2&lt;/code&gt;&lt;/a&gt; takes &lt;code&gt;conn&lt;/code&gt; as the first parameter and as the second parameter either an integer or a &quot;friendly name&quot; used as an atom for the status code we want to set. The list of status code atom representations can be found in &lt;a href=&quot;../plug/plug.conn.status#code/1&quot;&gt;&lt;code&gt;Plug.Conn.Status.code/1&lt;/code&gt;&lt;/a&gt; documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24ee53ffc18858f0e35b47fae6cd54d853b1a82a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../plug/plug.head&quot;&gt;Plug.Head&lt;/a&gt; - converts HEAD requests to GET requests and strips the response body</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88ba2a756f09ba5cbaeb788fedca93b850b5a8f5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../plug/plug.methodoverride&quot;&gt;Plug.MethodOverride&lt;/a&gt; - converts the request method to PUT, PATCH or DELETE for POST requests with a valid &lt;code&gt;_method&lt;/code&gt; parameter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a75854f410d1b0c6474a6b950a8165db155bbb3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../plug/plug.parsers&quot;&gt;Plug.Parsers&lt;/a&gt; - parses the request body when a known parser is available. By default parsers parse urlencoded, multipart and json (with &lt;code&gt;jason&lt;/code&gt;). The request body is left untouched when the request content-type cannot be parsed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca3da9dc91c96ee26f755b4d0b0926ec61e4f2c6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../plug/plug.requestid&quot;&gt;Plug.RequestId&lt;/a&gt; - generates a unique request id for each request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8400f8ef51599b16ae73eada68cedaca4b01d08" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../plug/plug.session&quot;&gt;Plug.Session&lt;/a&gt; - a plug that sets up session management. Note that &lt;code&gt;fetch_session/2&lt;/code&gt; must still be explicitly called before using the session as this Plug just sets up how the session is fetched</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dab369fb46eaceaf4541057f6bb0cd94b9f4e72" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../plug/plug.static&quot;&gt;Plug.Static&lt;/a&gt; - serves static assets. Since this plug comes before the logger, serving of static assets is not logged</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8964a2cf73ca195edceedf9ffba48ea246811615" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../plug/plug.telemetry&quot;&gt;Plug.Telemetry&lt;/a&gt; - adds instrumentation points so Phoenix can log the request path, status code and request time by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a583f343f79ec129868c871b8360943d863d339" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ecto.changeset&quot;&gt;&lt;code&gt;Ecto.Changeset&lt;/code&gt;&lt;/a&gt; - changesets provide a way for developers to filter and cast external parameters, as well as a mechanism to track and validate changes before they are applied to your data</source>
          <target state="translated">&lt;a href=&quot;ecto.changeset&quot;&gt; &lt;code&gt;Ecto.Changeset&lt;/code&gt; &lt;/a&gt; - наборы изменений предоставляют разработчикам возможность фильтровать и приводить внешние параметры, а также механизм для отслеживания и проверки изменений, прежде чем они будут применены к вашим данным.</target>
        </trans-unit>
        <trans-unit id="018f2f681781ac99c98d4b5f1770f8718e36892f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ecto.multi#content&quot;&gt;&lt;code&gt;Ecto.Multi&lt;/code&gt;&lt;/a&gt; is a data structure for grouping multiple Repo operations.</source>
          <target state="translated">&lt;a href=&quot;ecto.multi#content&quot;&gt; &lt;code&gt;Ecto.Multi&lt;/code&gt; &lt;/a&gt; - это структура данных для группировки нескольких операций репо.</target>
        </trans-unit>
        <trans-unit id="4ca303a203645e4689da6a234fe9461bc9c56b5c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ecto.multi#content&quot;&gt;&lt;code&gt;Ecto.Multi&lt;/code&gt;&lt;/a&gt; makes it possible to pack operations that should be performed in a single database transaction and gives a way to introspect the queued operations without actually performing them. Each operation is given a name that is unique and will identify its result in case of success or failure.</source>
          <target state="translated">&lt;a href=&quot;ecto.multi#content&quot;&gt; &lt;code&gt;Ecto.Multi&lt;/code&gt; &lt;/a&gt; позволяет упаковать операции, которые должны выполняться в одной транзакции базы данных, и дает возможность проанализировать операции в очереди, не выполняя их на самом деле. Каждой операции дается уникальное имя, которое будет определять ее результат в случае успеха или неудачи.</target>
        </trans-unit>
        <trans-unit id="c5729f85b3f62ff2eeb0b00217d50002b65ac995" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ecto.multi#to_list/1&quot;&gt;&lt;code&gt;Ecto.Multi.to_list/1&lt;/code&gt;&lt;/a&gt; returns a canonical representation of the structure that can be used for introspection.</source>
          <target state="translated">&lt;a href=&quot;ecto.multi#to_list/1&quot;&gt; &lt;code&gt;Ecto.Multi.to_list/1&lt;/code&gt; &lt;/a&gt; возвращает каноническое представление структуры, которое можно использовать для интроспекции.</target>
        </trans-unit>
        <trans-unit id="4c269d59a1986c501a5b136c15ca1c525bfcf287" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ecto.query&quot;&gt;&lt;code&gt;Ecto.Query&lt;/code&gt;&lt;/a&gt; - written in Elixir syntax, queries are used to retrieve information from a given repository. Queries in Ecto are secure, avoiding common problems like SQL Injection, while still being composable, allowing developers to build queries piece by piece instead of all at once</source>
          <target state="translated">&lt;a href=&quot;ecto.query&quot;&gt; &lt;code&gt;Ecto.Query&lt;/code&gt; &lt;/a&gt; - написан в синтаксисе Elixir, запросы используются для получения информации из заданного репозитория. Запросы в Ecto безопасны, позволяют избежать распространенных проблем, таких как SQL-инъекция, при этом сохраняя возможность компоновки, что позволяет разработчикам создавать запросы по частям, а не все сразу.</target>
        </trans-unit>
        <trans-unit id="254ac042245189c26b9023866dc57d522b18f77f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ecto.repo&quot;&gt;&lt;code&gt;Ecto.Repo&lt;/code&gt;&lt;/a&gt; - repositories are wrappers around the data store. Via the repository, we can create, update, destroy and query existing entries. A repository needs an adapter and credentials to communicate to the database</source>
          <target state="translated">&lt;a href=&quot;ecto.repo&quot;&gt; &lt;code&gt;Ecto.Repo&lt;/code&gt; &lt;/a&gt; - репозитории - это обертки вокруг хранилища данных. Через репозиторий мы можем создавать, обновлять, уничтожать и запрашивать существующие записи. Репозиторию нужен адаптер и учетные данные для связи с базой данных.</target>
        </trans-unit>
        <trans-unit id="e0be660b5f352e2bf92c65da80dbfa6223a1c0c1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ecto.repo&quot;&gt;&lt;code&gt;Ecto.Repo&lt;/code&gt;&lt;/a&gt; is a wrapper around the database. We can define a repository as follows:</source>
          <target state="translated">&lt;a href=&quot;ecto.repo&quot;&gt; &lt;code&gt;Ecto.Repo&lt;/code&gt; &lt;/a&gt; - это оболочка вокруг базы данных. Мы можем определить репозиторий следующим образом:</target>
        </trans-unit>
        <trans-unit id="a8b20ddc137fb7c51508cfeaf6034fa51507f61d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ecto.schema&quot;&gt;&lt;code&gt;Ecto.Schema&lt;/code&gt;&lt;/a&gt; - schemas are used to map any data source into an Elixir struct. We will often use them to map tables into Elixir data but that&amp;rsquo;s one of their use cases and not a requirement for using Ecto</source>
          <target state="translated">&lt;a href=&quot;ecto.schema&quot;&gt; &lt;code&gt;Ecto.Schema&lt;/code&gt; &lt;/a&gt; - схемы используются для отображения любого источника данных в структуру Elixir. Мы часто будем использовать их для сопоставления таблиц с данными Elixir, но это один из вариантов их использования, а не требование для использования Ecto.</target>
        </trans-unit>
        <trans-unit id="5a4c11c87b1b9d780c2f77502c00711b38695ff1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ecto.schema&quot;&gt;&lt;code&gt;Ecto.Schema&lt;/code&gt;&lt;/a&gt; - schemas are used to map any data source into an Elixir struct. We will often use them to map tables into Elixir data but that's one of their use cases and not a requirement for using Ecto</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d49be53b20ff0ea47300435797bd42855efc730" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://en.wikipedia.org/wiki/Optimistic_concurrency_control&quot;&gt;Optimistic locking&lt;/a&gt; (or &lt;em&gt;optimistic concurrency control&lt;/em&gt;) is a technique that allows concurrent edits on a single record. While pessimistic locking works by locking a resource for an entire transaction, optimistic locking only checks if the resource changed before updating it.</source>
          <target state="translated">&lt;a href=&quot;http://en.wikipedia.org/wiki/Optimistic_concurrency_control&quot;&gt;Оптимистическая блокировка&lt;/a&gt; (или &lt;em&gt;оптимистическое управление параллелизмом&lt;/em&gt; ) - это метод, позволяющий одновременно редактировать одну запись. В то время как пессимистическая блокировка работает путем блокировки ресурса для всей транзакции, оптимистическая блокировка проверяет только изменение ресурса перед его обновлением.</target>
        </trans-unit>
        <trans-unit id="f4ec0de42e2250fac0a8696196bd185013a6aedf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://elixir-slackin.herokuapp.com/&quot;&gt;Request an invitation&lt;/a&gt; and join the #phoenix channel on &lt;a href=&quot;https://elixir-lang.slack.com&quot;&gt;Slack&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6646f5b9b6efa886d853b9889fbb84771ac49ae4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/Optimistic_concurrency_control&quot;&gt;Optimistic locking&lt;/a&gt; (or &lt;em&gt;optimistic concurrency control&lt;/em&gt;) is a technique that allows concurrent edits on a single record. While pessimistic locking works by locking a resource for an entire transaction, optimistic locking only checks if the resource changed before updating it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddf8b4289f7733830d6efe55184ed7f0d13c8874" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/elixir-lang/plug&quot;&gt;Plug&lt;/a&gt; is a specification for composable modules in between web applications. It is also an abstraction layer for connection adapters of different web servers. The basic idea of Plug is to unify the concept of a &quot;connection&quot; that we operate on. This differs from other HTTP middleware layers such as Rack, where the request and response are separated in the middleware stack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af978cb54631ae2452e0c2de0933b2457d3b6880" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://hexdocs.pm/absinthe&quot;&gt;Absinthe&lt;/a&gt; - Coming Soon!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8559b4aaae2e5b19c7376744b65cb46b919a7b0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://hexdocs.pm/broadway&quot;&gt;Broadway&lt;/a&gt; - &lt;a href=&quot;https://hexdocs.pm/broadway/Broadway.html#module-telemetry&quot;&gt;Events&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8889ad9fc92a1812fe6b16449a4e35ec8d420ca0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://hexdocs.pm/ecto&quot;&gt;Ecto&lt;/a&gt; - &lt;a href=&quot;../ecto/ecto.repo#module-telemetry-events&quot;&gt;Events&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77c68c618adbbfb87c92e9c5b1457f0e75ede84f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://hexdocs.pm/ecto&quot;&gt;Ecto&lt;/a&gt; - a language integrated query and database wrapper</source>
          <target state="translated">&lt;a href=&quot;https://hexdocs.pm/ecto&quot;&gt;Ecto&lt;/a&gt; - интегрированный язык запросов и оболочка базы данных</target>
        </trans-unit>
        <trans-unit id="f677b4bb80d75adeed1c8fc7415e3fdd815b468e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://hexdocs.pm/eex&quot;&gt;EEx&lt;/a&gt; - Elixir's built-in templating language</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ea06373174cd51fc8002d2a5e0d3a12efd8815e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://hexdocs.pm/elixir/Date.html&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;https://hexdocs.pm/elixir/Time.html&quot;&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/a&gt; functions like &lt;a href=&quot;#datetime_add/3&quot;&gt;&lt;code&gt;datetime_add/3&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#date_add/3&quot;&gt;&lt;code&gt;date_add/3&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#from_now/2&quot;&gt;&lt;code&gt;from_now/2&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ago/2&quot;&gt;&lt;code&gt;ago/2&lt;/code&gt;&lt;/a&gt; take &lt;code&gt;interval&lt;/code&gt; as an argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11bbe74dccda0691aa7d850df9813c16916b55bf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://hexdocs.pm/ex_unit&quot;&gt;ExUnit&lt;/a&gt; - Elixir's built-in test framework</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="578cc29953155719ca75566e216bed69ef1e67e6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://hexdocs.pm/gettext&quot;&gt;Gettext&lt;/a&gt; - Internationalization and localization through &lt;a href=&quot;https://www.gnu.org/software/gettext/&quot;&gt;&lt;code&gt;gettext&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8d94b3883cb257d4ebb1f19608779283a79fd1f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://hexdocs.pm/gettext&quot;&gt;Gettext&lt;/a&gt; - Internationalization and localization through gettext</source>
          <target state="translated">&lt;a href=&quot;https://hexdocs.pm/gettext&quot;&gt;Gettext&lt;/a&gt; - интернационализация и локализация через gettext</target>
        </trans-unit>
        <trans-unit id="d542935f59a0feb8b1b4ca6d9e3d6185cbe2c29c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://hexdocs.pm/oban&quot;&gt;Oban&lt;/a&gt; - &lt;a href=&quot;https://hexdocs.pm/oban/Oban.Telemetry.html&quot;&gt;Events&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db53159eb17f21b146be58c94215e76c5c7ae0da" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://hexdocs.pm/phoenix&quot;&gt;Phoenix&lt;/a&gt; - &lt;a href=&quot;phoenix.logger#module-instrumentation&quot;&gt;Events&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73b947c84cfdd805155f6909b79339fd9c0c3f30" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://hexdocs.pm/phoenix&quot;&gt;Phoenix&lt;/a&gt; - the Phoenix web framework (these docs)</source>
          <target state="translated">&lt;a href=&quot;https://hexdocs.pm/phoenix&quot;&gt;Phoenix&lt;/a&gt; - веб-фреймворк Phoenix (эти документы)</target>
        </trans-unit>
        <trans-unit id="25d65a093b171c57610b7911f9044498a1a438cb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://hexdocs.pm/phoenix_html&quot;&gt;Phoenix HTML&lt;/a&gt; - conveniences for working with HTML in Phoenix</source>
          <target state="translated">&lt;a href=&quot;https://hexdocs.pm/phoenix_html&quot;&gt;Phoenix HTML&lt;/a&gt; - удобство работы с HTML в Phoenix</target>
        </trans-unit>
        <trans-unit id="8e30618808f92be13c918f0eadb726d5d0d3ae62" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://hexdocs.pm/phoenix_pubsub&quot;&gt;Phoenix PubSub&lt;/a&gt; - a distributed pub/sub system with presence support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4addb42611bbdcb3466871e0b76d5bed1b360d9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://hexdocs.pm/phoenix_pubsub&quot;&gt;Phoenix Pubsub&lt;/a&gt; - a distributed pubsub system with presence support</source>
          <target state="translated">&lt;a href=&quot;https://hexdocs.pm/phoenix_pubsub&quot;&gt;Phoenix Pubsub&lt;/a&gt; - распределенная система pubsub с поддержкой присутствия</target>
        </trans-unit>
        <trans-unit id="3b91e43786c863bf42550b363af2b1b93ce9f798" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://hexdocs.pm/phoenix_pubsub_redis&quot;&gt;Phoenix PubSub Redis&lt;/a&gt; - use Redis to power Phoenix PubSub system</source>
          <target state="translated">&lt;a href=&quot;https://hexdocs.pm/phoenix_pubsub_redis&quot;&gt;Phoenix PubSub Redis&lt;/a&gt; - используйте Redis для работы системы Phoenix PubSub</target>
        </trans-unit>
        <trans-unit id="831e0308edae50f5ca51898ef373e2abeef3c4aa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://hexdocs.pm/plug&quot;&gt;Plug&lt;/a&gt; - &lt;a href=&quot;../plug/plug.telemetry&quot;&gt;Events&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd85e8e392adc5104be618e0d0f4b6021c49f3bd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://hexdocs.pm/plug&quot;&gt;Plug&lt;/a&gt; - a specification and conveniences for composable modules in between web applications</source>
          <target state="translated">&lt;a href=&quot;https://hexdocs.pm/plug&quot;&gt;Plug&lt;/a&gt; - спецификация и удобства для составных модулей между веб-приложениями</target>
        </trans-unit>
        <trans-unit id="5e408fcdce4cf8c39258b53246af12be42b4d5a4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://hexdocs.pm/telemetry_metrics/Telemetry.Metrics.html&quot;&gt;&lt;code&gt;Telemetry.Metrics&lt;/code&gt;&lt;/a&gt; ships with a &lt;code&gt;ConsoleReporter&lt;/code&gt; that can be used to print events and metrics to the terminal. You can use this reporter to experiment with the metrics discussed in this guide.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="553352cbbc80961e9c64cf8b34259efe8d6a81ba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://hexdocs.pm/tesla&quot;&gt;Tesla&lt;/a&gt; - &lt;a href=&quot;https://hexdocs.pm/tesla/Tesla.Middleware.Telemetry.html&quot;&gt;Events&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7616cb3c5369f8a39183311441c96a15b88c5e9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;installation&quot;&gt;Let's get Phoenix installed&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="658b04271ffed3b089c1bc2864a471ef59bdcfeb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mix.tasks.phx.gen.json&quot;&gt;&lt;code&gt;mix phx.gen.json&lt;/code&gt;&lt;/a&gt; also supports &lt;code&gt;--no-context&lt;/code&gt;, &lt;code&gt;--no-schema&lt;/code&gt;, and others, as in &lt;a href=&quot;mix.tasks.phx.gen.html&quot;&gt;&lt;code&gt;mix phx.gen.html&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2aca9c9ed5bab8fc7b61da083617a2c8d0b32acc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mix.tasks.phx.routes&quot;&gt;&lt;code&gt;mix phx.routes&lt;/code&gt;&lt;/a&gt; now shows us we have what we are looking for.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5e43b52100201f6589916a65155e3b41db29540" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phoenix.codereloader&quot;&gt;Phoenix.CodeReloader&lt;/a&gt; - a plug that enables code reloading for all entries in the web directory. It is configured directly in the Phoenix application</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40cfb571299d8542ce9ae1a1a01a78f669a13583" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phoenix.conntest#content&quot;&gt;&lt;code&gt;Phoenix.ConnTest&lt;/code&gt;&lt;/a&gt; typically works against endpoints. That&amp;rsquo;s the preferred way to test anything that your router dispatches to.</source>
          <target state="translated">&lt;a href=&quot;phoenix.conntest#content&quot;&gt; &lt;code&gt;Phoenix.ConnTest&lt;/code&gt; &lt;/a&gt; обычно работает с конечными точками. Это предпочтительный способ проверить все, что отправляет ваш маршрутизатор.</target>
        </trans-unit>
        <trans-unit id="f1146c8ac4a7121354fbd7c8c5d4270365b4059b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phoenix.controller#content&quot;&gt;&lt;code&gt;Phoenix.Controller&lt;/code&gt;&lt;/a&gt; - functions provided by Phoenix to support rendering, and other Phoenix specific behaviour</source>
          <target state="translated">&lt;a href=&quot;phoenix.controller#content&quot;&gt; &lt;code&gt;Phoenix.Controller&lt;/code&gt; &lt;/a&gt; - функции, предоставляемые Phoenix для поддержки рендеринга и другого поведения, специфичного для Phoenix.</target>
        </trans-unit>
        <trans-unit id="2cf87274e7b0468d96875411541eec38a7f59821" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phoenix.html.form&quot;&gt;&lt;code&gt;Phoenix.HTML.Form&lt;/code&gt;&lt;/a&gt; - functions for working with forms;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92c28e2c1bc0c4de2e980b2c97ba95aa99e0e268" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phoenix.html.format&quot;&gt;&lt;code&gt;Phoenix.HTML.Format&lt;/code&gt;&lt;/a&gt; - functions for formatting text;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a32104edf6a984585d1be85ea496b025bf1427bc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phoenix.html.link&quot;&gt;&lt;code&gt;Phoenix.HTML.Link&lt;/code&gt;&lt;/a&gt; - functions for generating links and urls;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="815051e55849ccfcc0e23c349be7c64113c2ef31" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phoenix.html.tag&quot;&gt;&lt;code&gt;Phoenix.HTML.Tag&lt;/code&gt;&lt;/a&gt; - functions for generating HTML tags;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58e8bf04508262489b96854f93c498eed95d2993" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phoenix.liveview&quot;&gt;&lt;code&gt;Phoenix.LiveView&lt;/code&gt;&lt;/a&gt; also tracks changes across &lt;code&gt;.leex&lt;/code&gt; templates. Therefore, if your view has this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12acc5d836b1f230ac7392c7d602d9254348aaca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phoenix.liveview&quot;&gt;&lt;code&gt;Phoenix.LiveView&lt;/code&gt;&lt;/a&gt;'s built-in templates are identified by the &lt;code&gt;.leex&lt;/code&gt; extension (Live EEx) or &lt;code&gt;~L&lt;/code&gt; sigil. They are similar to regular &lt;code&gt;.eex&lt;/code&gt; templates except they are designed to minimize the amount of data sent over the wire by splitting static and dynamic parts and tracking changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd335b221efb934843b3810af51111fd98e8d79a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phoenix.liveview.helpers#live_patch/2&quot;&gt;&lt;code&gt;live_patch/2&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;phoenix.liveview#push_patch/2&quot;&gt;&lt;code&gt;push_patch/2&lt;/code&gt;&lt;/a&gt; updates the current LiveView and sends only the minimal diff while also maintaining the scroll position</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb5b9ba25ab496ad9fd20f673207a23a34626842" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phoenix.liveview.helpers#live_redirect/2&quot;&gt;&lt;code&gt;live_redirect/2&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;phoenix.liveview#push_redirect/2&quot;&gt;&lt;code&gt;push_redirect/2&lt;/code&gt;&lt;/a&gt; mounts a new LiveView while keeping the current layout</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ae17ca2278e9e027d9ec86523fd164b10df1ba8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phoenix.pubsub.pg2&quot;&gt;&lt;code&gt;Phoenix.PubSub.PG2&lt;/code&gt;&lt;/a&gt; - the default adapter that ships as part of Phoenix.PubSub. It uses Distributed Elixir, directly exchanging notifications between servers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3277d276e21a5f8fc36954c6c47c0f9a637fe156" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phoenix.pubsub.pg2&quot;&gt;&lt;code&gt;Phoenix.PubSub.PG2&lt;/code&gt;&lt;/a&gt; - uses Distributed Elixir, directly exchanging notifications between servers</source>
          <target state="translated">&lt;a href=&quot;phoenix.pubsub.pg2&quot;&gt; &lt;code&gt;Phoenix.PubSub.PG2&lt;/code&gt; &lt;/a&gt; - использует распределенный эликсир, напрямую обмениваясь уведомлениями между серверами</target>
        </trans-unit>
        <trans-unit id="a9ee3bb7169416d2eaed069ebe902995be40fa09" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phoenix.router#content&quot;&gt;&lt;code&gt;Phoenix.Router&lt;/code&gt;&lt;/a&gt; imports functions from both &lt;a href=&quot;../plug/1.5.1/plug.conn&quot;&gt;&lt;code&gt;Plug.Conn&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;phoenix.controller&quot;&gt;&lt;code&gt;Phoenix.Controller&lt;/code&gt;&lt;/a&gt; to help define plugs. In the example above, &lt;code&gt;fetch_session/2&lt;/code&gt; comes from &lt;a href=&quot;../plug/1.5.1/plug.conn&quot;&gt;&lt;code&gt;Plug.Conn&lt;/code&gt;&lt;/a&gt; while &lt;code&gt;accepts/2&lt;/code&gt; comes from &lt;a href=&quot;phoenix.controller&quot;&gt;&lt;code&gt;Phoenix.Controller&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;phoenix.router#content&quot;&gt; &lt;code&gt;Phoenix.Router&lt;/code&gt; &lt;/a&gt; импортирует функции как из&lt;a href=&quot;../plug/1.5.1/plug.conn&quot;&gt; &lt;code&gt;Plug.Conn&lt;/code&gt; ,так&lt;/a&gt; и из&lt;a href=&quot;phoenix.controller&quot;&gt; &lt;code&gt;Phoenix.Controller&lt;/code&gt; ,&lt;/a&gt; чтобы помочь определить заглушки. В приведенном выше примере &lt;code&gt;fetch_session/2&lt;/code&gt; поступает из&lt;a href=&quot;../plug/1.5.1/plug.conn&quot;&gt; &lt;code&gt;Plug.Conn&lt;/code&gt; ,&lt;/a&gt; а accept &lt;code&gt;accepts/2&lt;/code&gt; - из&lt;a href=&quot;phoenix.controller&quot;&gt; &lt;code&gt;Phoenix.Controller&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d0ecc0ece959b4896c483fba61a6a71afa797eef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phoenix.socket&quot;&gt;&lt;code&gt;Phoenix.Socket&lt;/code&gt;&lt;/a&gt; - where the secret key base is extracted from the endpoint stored in the socket</source>
          <target state="translated">&lt;a href=&quot;phoenix.socket&quot;&gt; &lt;code&gt;Phoenix.Socket&lt;/code&gt; &lt;/a&gt; - где база секретных ключей извлекается из конечной точки, хранящейся в сокете</target>
        </trans-unit>
        <trans-unit id="fe397c351910b1397814e3452936638acfb9a4fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phoenix.socket#content&quot;&gt;&lt;code&gt;Phoenix.Socket&lt;/code&gt;&lt;/a&gt; is used as a module for establishing and maintaining the socket state via the &lt;a href=&quot;phoenix.socket#content&quot;&gt;&lt;code&gt;Phoenix.Socket&lt;/code&gt;&lt;/a&gt; struct.</source>
          <target state="translated">&lt;a href=&quot;phoenix.socket#content&quot;&gt; &lt;code&gt;Phoenix.Socket&lt;/code&gt; &lt;/a&gt; используется как модуль для установления и поддержания состояния сокета черезструктуру&lt;a href=&quot;phoenix.socket#content&quot;&gt; &lt;code&gt;Phoenix.Socket&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fdcbd1732f81a03cca528b6718d0e6939ed61dc3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phoenix.token#content&quot;&gt;&lt;code&gt;Phoenix.Token&lt;/code&gt;&lt;/a&gt; can also be used for validating APIs, handling password resets, e-mail confirmation and more.</source>
          <target state="translated">&lt;a href=&quot;phoenix.token#content&quot;&gt; &lt;code&gt;Phoenix.Token&lt;/code&gt; &lt;/a&gt; также можно использовать для проверки API, обработки сброса пароля, подтверждения электронной почты и многого другого.</target>
        </trans-unit>
        <trans-unit id="f02c3b45c165c4d50ff69d8ef17d50f3a8955cb5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phoenix/js&quot;&gt;Phoenix.js&lt;/a&gt; - Phoenix Channels JavaScript client</source>
          <target state="translated">&lt;a href=&quot;phoenix/js&quot;&gt;Phoenix.js&lt;/a&gt; - клиент JavaScript Phoenix Channels</target>
        </trans-unit>
        <trans-unit id="143b87ecc1b0b9c6412117b0098733ac83bd1ceb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;plug.builder#content&quot;&gt;&lt;code&gt;Plug.Builder&lt;/code&gt;&lt;/a&gt; also imports the &lt;a href=&quot;plug.conn&quot;&gt;&lt;code&gt;Plug.Conn&lt;/code&gt;&lt;/a&gt; module, making functions like &lt;code&gt;send_resp/3&lt;/code&gt; available.</source>
          <target state="translated">&lt;a href=&quot;plug.builder#content&quot;&gt; &lt;code&gt;Plug.Builder&lt;/code&gt; &lt;/a&gt; также импортируетмодуль&lt;a href=&quot;plug.conn&quot;&gt; &lt;code&gt;Plug.Conn&lt;/code&gt; &lt;/a&gt; , делаядоступнымитакие функции, как &lt;code&gt;send_resp/3&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a5aad48f4b7139bec3e042aa36990f75b80fd1b1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;plug.conn#content&quot;&gt;&lt;code&gt;Plug.Conn&lt;/code&gt;&lt;/a&gt; implements both the Collectable and Inspect protocols out of the box. The inspect protocol provides a nice representation of the connection while the collectable protocol allows developers to easily chunk data. For example:</source>
          <target state="translated">&lt;a href=&quot;plug.conn#content&quot;&gt; &lt;code&gt;Plug.Conn&lt;/code&gt; &quot;из коробки&quot;&lt;/a&gt; реализует протоколы Collectable и Inspect . Протокол проверки обеспечивает хорошее представление соединения, в то время как протокол сбора данных позволяет разработчикам легко разбивать данные на части. Например:</target>
        </trans-unit>
        <trans-unit id="12ae8d44b68aee5e1c67c6b91a58b4098eaf6014" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;plug.debugger&quot;&gt;&lt;code&gt;Plug.Debugger&lt;/code&gt;&lt;/a&gt; - automatically shows debugging and request information about the failure. This module is recommended to be used only in a development environment.</source>
          <target state="translated">&lt;a href=&quot;plug.debugger&quot;&gt; &lt;code&gt;Plug.Debugger&lt;/code&gt; &lt;/a&gt; - автоматически показывает отладку и запрашивает информацию об ошибке . Этот модуль рекомендуется использовать только в среде разработки.</target>
        </trans-unit>
        <trans-unit id="554981d7153d3ff359ce7ae645b326d9c3bcd9d1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;plug.errorhandler&quot;&gt;&lt;code&gt;Plug.ErrorHandler&lt;/code&gt;&lt;/a&gt; - allows the developer to customize exactly which page is sent to the client via the &lt;code&gt;handle_errors/2&lt;/code&gt; function;</source>
          <target state="translated">&lt;a href=&quot;plug.errorhandler&quot;&gt; &lt;code&gt;Plug.ErrorHandler&lt;/code&gt; &lt;/a&gt; - позволяет разработчику настроить, какая именно страница будет отправляться клиенту черезфункцию &lt;code&gt;handle_errors/2&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="9ffd259eafbaea82718dbd398d133d1d2accb134" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;plug.parsers&quot;&gt;&lt;code&gt;Plug.Parsers&lt;/code&gt;&lt;/a&gt; can also be plugged between &lt;code&gt;:match&lt;/code&gt; and &lt;code&gt;:dispatch&lt;/code&gt; (like in the example above): this means that &lt;a href=&quot;plug.parsers&quot;&gt;&lt;code&gt;Plug.Parsers&lt;/code&gt;&lt;/a&gt; will run only if there is a matching route. This can be useful to perform actions such as authentication &lt;em&gt;before&lt;/em&gt; parsing the body, which should only be parsed if a route matches afterwards.</source>
          <target state="translated">&lt;a href=&quot;plug.parsers&quot;&gt; &lt;code&gt;Plug.Parsers&lt;/code&gt; &lt;/a&gt; также можно подключать между &lt;code&gt;:match&lt;/code&gt; и &lt;code&gt;:dispatch&lt;/code&gt; (как в приведенном выше примере): это означает, что&lt;a href=&quot;plug.parsers&quot;&gt; &lt;code&gt;Plug.Parsers&lt;/code&gt; &lt;/a&gt; будет запускаться только при наличии совпадающего маршрута. Это может быть полезно для выполнения таких действий, как аутентификация&lt;em&gt; перед&lt;/em&gt; синтаксическим анализом тела, которое следует анализировать только в том случае, если впоследствии маршрут совпадает.</target>
        </trans-unit>
        <trans-unit id="96e16b8bcda25f018e12ad1b27fdc0b54e517a78" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;plug.parsers.json&quot;&gt;&lt;code&gt;Plug.Parsers.JSON&lt;/code&gt;&lt;/a&gt; - parses &lt;code&gt;application/json&lt;/code&gt; requests with the given &lt;code&gt;:json_decoder&lt;/code&gt; (can be used as &lt;code&gt;:json&lt;/code&gt; as well in the &lt;code&gt;:parsers&lt;/code&gt; option)</source>
          <target state="translated">&lt;a href=&quot;plug.parsers.json&quot;&gt; &lt;code&gt;Plug.Parsers.JSON&lt;/code&gt; &lt;/a&gt; - разбирает &lt;code&gt;application/json&lt;/code&gt; запросы с данным &lt;code&gt;:json_decoder&lt;/code&gt; (может быть использован как &lt;code&gt;:json&lt;/code&gt; , а также в &lt;code&gt;:parsers&lt;/code&gt; опции)</target>
        </trans-unit>
        <trans-unit id="713f2a9998b9991cd48eaafbf51fc1ce51d3e6c3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;plug.parsers.multipart&quot;&gt;&lt;code&gt;Plug.Parsers.MULTIPART&lt;/code&gt;&lt;/a&gt; - parses &lt;code&gt;multipart/form-data&lt;/code&gt; and &lt;code&gt;multipart/mixed&lt;/code&gt; requests (can be used as &lt;code&gt;:multipart&lt;/code&gt; as well in the &lt;code&gt;:parsers&lt;/code&gt; option)</source>
          <target state="translated">&lt;a href=&quot;plug.parsers.multipart&quot;&gt; &lt;code&gt;Plug.Parsers.MULTIPART&lt;/code&gt; &lt;/a&gt; - анализирует &lt;code&gt;multipart/form-data&lt;/code&gt; и &lt;code&gt;multipart/mixed&lt;/code&gt; запросы (также может использоваться как &lt;code&gt;:multipart&lt;/code&gt; вопции &lt;code&gt;:parsers&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="2242956fba3f8b569acd16621be7c80a63be5eee" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;plug.parsers.requesttoolargeerror&quot;&gt;&lt;code&gt;Plug.Parsers.RequestTooLargeError&lt;/code&gt;&lt;/a&gt; will be raised if the request goes over the given limit.</source>
          <target state="translated">&lt;a href=&quot;plug.parsers.requesttoolargeerror&quot;&gt; &lt;code&gt;Plug.Parsers.RequestTooLargeError&lt;/code&gt; &lt;/a&gt; будет сгенерирован , если запрос превышает заданный предел.</target>
        </trans-unit>
        <trans-unit id="078e65ec82baaacdcc535273a56a73c2890cb436" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;plug.parsers.urlencoded&quot;&gt;&lt;code&gt;Plug.Parsers.URLENCODED&lt;/code&gt;&lt;/a&gt; - parses &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; requests (can be used as &lt;code&gt;:urlencoded&lt;/code&gt; as well in the &lt;code&gt;:parsers&lt;/code&gt; option)</source>
          <target state="translated">&lt;a href=&quot;plug.parsers.urlencoded&quot;&gt; &lt;code&gt;Plug.Parsers.URLENCODED&lt;/code&gt; &lt;/a&gt; - анализирует запросы &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; (также может использоваться как &lt;code&gt;:urlencoded&lt;/code&gt; вопции &lt;code&gt;:parsers&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="6b454cfa7a225af0cb1eeb8a6d7e02bfa591f85b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;plug.ssl&quot;&gt;&lt;code&gt;Plug.SSL&lt;/code&gt;&lt;/a&gt; takes on another important role when using TLS offloading: it can update the &lt;code&gt;:scheme&lt;/code&gt; and &lt;code&gt;:port&lt;/code&gt; fields in the &lt;a href=&quot;plug.conn&quot;&gt;&lt;code&gt;Plug.Conn&lt;/code&gt;&lt;/a&gt; struct based on an HTTP header (e.g. 'X-Forwarded-Proto'), to reflect the actual protocol used by the client (HTTP or HTTPS). It is very important that the &lt;code&gt;:scheme&lt;/code&gt; field properly reflects the use of HTTPS, even if the connection between the proxy and the application uses plain HTTP, because cookies set by &lt;a href=&quot;plug.session&quot;&gt;&lt;code&gt;Plug.Session&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;plug.conn#put_resp_cookie/4&quot;&gt;&lt;code&gt;Plug.Conn.put_resp_cookie/4&lt;/code&gt;&lt;/a&gt; by default set the 'secure' cookie flag only if &lt;code&gt;:scheme&lt;/code&gt; is set to &lt;code&gt;:https&lt;/code&gt;! When relying on this default behaviour it is essential that &lt;a href=&quot;plug.ssl&quot;&gt;&lt;code&gt;Plug.SSL&lt;/code&gt;&lt;/a&gt; is included in the Plug pipeline, that its &lt;code&gt;:rewrite_on&lt;/code&gt; option is set correctly, and that the proxy sets the appropriate header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f41864207374775f65e710e20cca519404ed36c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;plug.static#content&quot;&gt;&lt;code&gt;Plug.Static&lt;/code&gt;&lt;/a&gt; uses etags for HTTP caching. This means browsers/clients should cache assets on the first request and validate the cache on following requests, not downloading the static asset once again if it has not changed. The cache-control for etags is specified by the &lt;code&gt;cache_control_for_etags&lt;/code&gt; option and defaults to &lt;code&gt;&quot;public&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;plug.static#content&quot;&gt; &lt;code&gt;Plug.Static&lt;/code&gt; &lt;/a&gt; использует etags для кеширования HTTP. Это означает, что браузеры / клиенты должны кэшировать активы при первом запросе и проверять кеш при следующих запросах, а не загружать статический актив еще раз, если он не изменился. Управление кешем для etags определяется параметром &lt;code&gt;cache_control_for_etags&lt;/code&gt; и по умолчанию имеет значение &lt;code&gt;&quot;public&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d1692e8350a0608652f1b1bae8efe533d4aa22f3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;views&quot;&gt;Views and templates&lt;/a&gt; have their own guide, so we won't spend much time on them here. What we will look at is how to assign a different layout, or none at all, from inside a controller action.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd698e1c8921312636d9c4f8f75e4d3e0122b06b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;element&quot;&lt;/code&gt; - the event was triggered by a &lt;code&gt;phx-&lt;/code&gt; bound element, such as &lt;code&gt;phx-click&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad68fc860849571fdd20886af7ddbd9e0a5d8bec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;heartbeat&quot;&lt;/code&gt; events in the &quot;phoenix&quot; topic - should just emit an OK reply</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81662afd50b971aa1d6f3acaadd39041189638f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;initial&quot;&lt;/code&gt; - the event was triggered by initial page load</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a99204974a42f33905ed9cea64ca5008e3f05be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;patch&quot;&lt;/code&gt; - the event was triggered by a patch</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d636ff8bd1ada44607391bc8d27667ac14c8b7d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;phx-connected&quot;&lt;/code&gt; - applied when the view has connected to the server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42cf2bb947135591412c928080a2ceebb2b21909" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;phx-disconnected&quot;&lt;/code&gt; - applied when the view is not connected to the server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a75b14b4f838d9f3ad74087fec395ced6fe40cdb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;phx-error&quot;&lt;/code&gt; - applied when an error occurs on the server. Note, this class will be applied in conjunction with &lt;code&gt;&quot;phx-disconnected&quot;&lt;/code&gt; if connection to the server is lost.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a13396b7f939b45c09d6edeb29d40abd4630d439" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;phx_close&quot;&lt;/code&gt; - the channel was gracefully closed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79790cd2248decbcb845753817bedc551099ee76" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;phx_error&quot;&lt;/code&gt; - in case of errors, such as a channel process crashing, or when attempting to join an already joined channel</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a5da455297e4c90c13071ad26f1820e1a75529c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;phx_join&quot;&lt;/code&gt; on any topic - should join the topic</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49faf314d0a8cf374f4f7be1c7582614005d4e7d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;phx_leave&quot;&lt;/code&gt; on any topic - should leave the topic</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b5063252dda59482d4f385406437ea155b2bd2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;redirect&quot;&lt;/code&gt; - the event was triggered by a redirect</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c384c19bea6e6357e94cd77f5cbb9505bdf4142a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--age&lt;/code&gt; - specifies a maximum age (in seconds) for assets. Files older than age that are not in the last &lt;code&gt;--keep&lt;/code&gt; versions will be removed. Defaults to 3600 (1 hour)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="167e02a56beb2a54a21846943d0bc4b8432623e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--age&lt;/code&gt; - specifies a maximum age (in seconds) for assets. Files older than age that are not in the last &lt;code&gt;--keep&lt;/code&gt; versions will be removed. Defaults to 3600 (1 hour).</source>
          <target state="translated">&lt;code&gt;--age&lt;/code&gt; - указывает максимальный возраст (в секундах) для активов. Файлы старше возраста, не указанные в последних версиях &lt;code&gt;--keep&lt;/code&gt; , будут удалены. По умолчанию 3600 (1 час).</target>
        </trans-unit>
        <trans-unit id="4295fc41f995d1dcbf2421734d592bfe78f37c47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--app&lt;/code&gt; - the name of the OTP application</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f63a4e693d7450c500bd795e9197703a078fd92f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--binary-id&lt;/code&gt; - use &lt;code&gt;binary_id&lt;/code&gt; as primary key type in Ecto schemas</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98266055cbc4143b356ef6dcc3c995d4a3dc07de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--database&lt;/code&gt; - specify the database adapter for Ecto. One of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49c2d3fa76dc28bafdcb15cc15a75f5d8cb3fe23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--force-drop&lt;/code&gt; - force the database to be dropped even if it has connections to it (requires PostgreSQL 13+)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3f9ecee96923766299d63be5be0763fb449e7e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--keep&lt;/code&gt; - specifies how many previous versions of assets to keep. Defaults to 2 previous version.</source>
          <target state="translated">&lt;code&gt;--keep&lt;/code&gt; - указывает, сколько предыдущих версий активов сохранить. По умолчанию 2 предыдущие версии.</target>
        </trans-unit>
        <trans-unit id="deb4974faee8a6ddce8d08f158d957ceccf15e74" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--keep&lt;/code&gt; - specifies how many previous versions of assets to keep. Defaults to 2 previous versions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f78a79072ba29b351b9a148af030580d6cc9357" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--live&lt;/code&gt; - include Phoenix.LiveView to make it easier than ever to build interactive, real-time applications</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85aaedaef6f4a9371d4d1d16297094115625cbee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--module&lt;/code&gt; - the name of the base module in the generated skeleton</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="778b919d6960634a70a21f5e0fec4b62d2bbc731" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--name&lt;/code&gt; (&lt;code&gt;-n&lt;/code&gt;): the Common Name value in certificate's subject (default: &quot;Self-signed test certificate&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="866c15b00132ac9086a7376ec2f8d04645ebee1b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--no-compile&lt;/code&gt; - do not compile before creating</source>
          <target state="translated">&lt;code&gt;--no-compile&lt;/code&gt; - не компилировать перед созданием</target>
        </trans-unit>
        <trans-unit id="1debf6cd65e67878b9e5742b73045fd31af86916" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--no-compile&lt;/code&gt; - do not compile before dropping</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3454752e53879ac382a2c1ad4936317a23a4bfa5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--no-compile&lt;/code&gt; - do not compile before stopping</source>
          <target state="translated">&lt;code&gt;--no-compile&lt;/code&gt; - не компилировать перед остановкой</target>
        </trans-unit>
        <trans-unit id="54de46e73f900342648bed2f1c53c1f09b56fe1a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--no-dashboard&lt;/code&gt; - do not include Phoenix.LiveDashboard</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1930b2cbe1dbfa00a9719ed9a83b175fce6cd388" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--no-deps-check&lt;/code&gt; - do not compile before creating</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3447d6cd6660a4b27be1596a987ee6329da8400b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--no-deps-check&lt;/code&gt; - do not compile before dropping</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd35e8db7eebfab56123dc9a6038714419abbe15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--no-ecto&lt;/code&gt; - do not generate Ecto files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6733ebc75eb0ca73121d8caec4037f5c7ba29de9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--no-gettext&lt;/code&gt; - do not generate gettext files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="998261d6a3e4903f0e0bc8a56861584f083d5c4c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--no-html&lt;/code&gt; - do not generate HTML views.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe3cb044caf50e9a01ddc557bc8f4f1e5d60fc6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--no-webpack&lt;/code&gt; - do not generate webpack files for static asset building. When choosing this option, you will need to manually handle JavaScript dependencies if building HTML apps</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8e4f2008a6088668ad494c26a7422e4705c7069" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--output&lt;/code&gt; (&lt;code&gt;-o&lt;/code&gt;): the path and base filename for the certificate and key (default: priv/cert/selfsigned)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3fbaef5aa433ee8ce4de4b4eb5a285c1efac66f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--quiet&lt;/code&gt; - do not log output</source>
          <target state="translated">&lt;code&gt;--quiet&lt;/code&gt; - не записывать вывод</target>
        </trans-unit>
        <trans-unit id="9a4fa658300dc9c6137ee321495b512ce023bdb8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--umbrella&lt;/code&gt; - generate an umbrella project, with one application for your domain, and a second application for the web interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93f63833497d5e441c3a14e4b0d4b272301c746f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--verbose&lt;/code&gt; - use verbose output</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfada89b95eac151b6ac16556188385f44a3a137" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-f&lt;/code&gt;, &lt;code&gt;--force&lt;/code&gt; - do not ask for confirmation when dropping the database. Configuration is asked only when &lt;code&gt;:start_permanent&lt;/code&gt; is set to true (typically in production)</source>
          <target state="translated">&lt;code&gt;-f&lt;/code&gt; , &lt;code&gt;--force&lt;/code&gt; - не запрашивать подтверждение при удалении базы данных. Конфигурация запрашивается только тогда, когда для &lt;code&gt;:start_permanent&lt;/code&gt; установлено значение true (обычно в производстве)</target>
        </trans-unit>
        <trans-unit id="ad992920a711492152d29ef3c3281e428de75bed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-o, --output&lt;/code&gt; - indicates the path to your compiled assets directory. Defaults to &lt;code&gt;priv/static&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68b4ce5b8050003b26e5c6235278d2d0b52fb334" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-o, --output&lt;/code&gt; - indicates the path to your compiled assets directory. Defaults to &lt;code&gt;priv/static&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;-o, --output&lt;/code&gt; - указывает путь к вашему каталогу скомпилированных ресурсов. По умолчанию &lt;code&gt;priv/static&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c1ced619f07c9c33e63e80ade1bfcde61bb55c23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-q&lt;/code&gt;, &lt;code&gt;--quiet&lt;/code&gt; - run the command quietly</source>
          <target state="translated">&lt;code&gt;-q&lt;/code&gt; , &lt;code&gt;--quiet&lt;/code&gt; - тихо запустить команду</target>
        </trans-unit>
        <trans-unit id="68d8e624e1b58d39fb0dab980e59968c910da648" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-r&lt;/code&gt;, &lt;code&gt;--repo&lt;/code&gt; - the repo to create</source>
          <target state="translated">&lt;code&gt;-r&lt;/code&gt; , &lt;code&gt;--repo&lt;/code&gt; - репо для создания</target>
        </trans-unit>
        <trans-unit id="ac03e58dbf679f2fc2fa5d8f07d1bf2beff55669" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-r&lt;/code&gt;, &lt;code&gt;--repo&lt;/code&gt; - the repo to drop</source>
          <target state="translated">&lt;code&gt;-r&lt;/code&gt; , &lt;code&gt;--repo&lt;/code&gt; - репо, которое нужно удалить</target>
        </trans-unit>
        <trans-unit id="fa1092cff55feef08b8ec9ef72b03d56204ffd12" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-r&lt;/code&gt;, &lt;code&gt;--repo&lt;/code&gt; - the repo to generate</source>
          <target state="translated">&lt;code&gt;-r&lt;/code&gt; , &lt;code&gt;--repo&lt;/code&gt; - репо для генерации</target>
        </trans-unit>
        <trans-unit id="ff1cf0fb78f5107db5b1c3b95e4cd1ee0bc543db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.leex&lt;/code&gt; also supports stateful components. Since they are stateful, they are always handled lazily by the diff algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04adbcfe6df10a7c8ecc415aad0de2527159fb01" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:accent&lt;/code&gt; - accent color</source>
          <target state="translated">&lt;code&gt;:accent&lt;/code&gt; - цвет акцента</target>
        </trans-unit>
        <trans-unit id="1dbd50c89295a0420db808c6b1358903b931cf39" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:accepted&lt;/code&gt; - 202</source>
          <target state="translated">&lt;code&gt;:accepted&lt;/code&gt; - 202</target>
        </trans-unit>
        <trans-unit id="478e81c9a3389dc5fe9793d2c150fdc65e3a1ab4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:action&lt;/code&gt; - the action the form is meant to submit to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8057005565311f706850641990e9cfbfcb0800e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:adapter&lt;/code&gt; - the adapter to use (defauls to &lt;a href=&quot;phoenix.pubsub.pg2&quot;&gt;&lt;code&gt;Phoenix.PubSub.PG2&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34c8af694256d7eb3c7a06f607210310c3140dfe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:adapter&lt;/code&gt; - which webserver adapter to use for serving web requests. See the &quot;Adapter configuration&quot; section below</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1274e4c84b79e0cce963cec0e75488598db81544" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:alias&lt;/code&gt; - an alias (atom) containing the controller scope</source>
          <target state="translated">&lt;code&gt;:alias&lt;/code&gt; - псевдоним (атом), содержащий область действия контроллера</target>
        </trans-unit>
        <trans-unit id="b2af2b3c98311a547aa2cc72f78d14e96e9541ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:alias&lt;/code&gt; - an alias (atom) containing the controller scope. When set to false, it resets all nested aliases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb08356b57626c8174abebba11b5a991a33df9bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:alias&lt;/code&gt; - configure if the scope alias should be applied to the route. Defaults to true, disables scoping if false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2a027099574b2eeef363a6b386a44845f8ea3e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:allow_hosts&lt;/code&gt; - a list with hosts to allow on cross-host tokens</source>
          <target state="translated">&lt;code&gt;:allow_hosts&lt;/code&gt; - список с хостами, разрешить использование токенов между хостами</target>
        </trans-unit>
        <trans-unit id="073d3d64e8ddf6407e9fb488b52afa21398f1e24" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:already_reported&lt;/code&gt; - 208</source>
          <target state="translated">&lt;code&gt;:already_reported&lt;/code&gt; - 208</target>
        </trans-unit>
        <trans-unit id="a2a22af26ec8d86f75422f147c407e9b9f9e46fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:append&lt;/code&gt; - the values to append when rendering. This only applies if the field value is a list and no parameters were sent through the form.</source>
          <target state="translated">&lt;code&gt;:append&lt;/code&gt; - значения, добавляемые при рендеринге. Это применимо только в том случае, если значение поля является списком и никакие параметры не были отправлены через форму.</target>
        </trans-unit>
        <trans-unit id="a30aa021d9088708b233d2564e4bdc8120e5ef5f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:as&lt;/code&gt; &amp;ndash; the CTE query itself or a fragment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="202f20d769158c9fbe58b97d5976923fcc1b3d25" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:as&lt;/code&gt; - a named binding for the join</source>
          <target state="translated">&lt;code&gt;:as&lt;/code&gt; - именованная привязка для соединения</target>
        </trans-unit>
        <trans-unit id="872d45b5b5da6dfcb36ee607269529028f8345bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:as&lt;/code&gt; - a string or atom containing the named helper scope</source>
          <target state="translated">&lt;code&gt;:as&lt;/code&gt; - строка или атом, содержащие указанную вспомогательную область</target>
        </trans-unit>
        <trans-unit id="a20b9053e0467221b547d5d9261b10689069514c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:as&lt;/code&gt; - a string or atom containing the named helper scope. When set to false, it resets the nested helper scopes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7965555b36b1fa8a6a9a51bd45d02faa8ca22a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:as&lt;/code&gt; - configures the named helper exclusively</source>
          <target state="translated">&lt;code&gt;:as&lt;/code&gt; - настраивает только указанный помощник</target>
        </trans-unit>
        <trans-unit id="1f05035fa3138fd43c4f9339e3b7682db6381016" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:as&lt;/code&gt; - configures the named helper exclusively. If false, does not generate a helper.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2e2372f326cabc1d852a4e5892a3d8e44a972c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:as&lt;/code&gt; - optionally configures the named helper. Defaults to &lt;code&gt;:live&lt;/code&gt; when using a LiveView without actions or defaults to the LiveView name when using actions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c4dba9b2a5299fc9dd3178bcea5a0e516f8b2f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:as&lt;/code&gt; - the name to be used in the form, defaults to the concatenation of the given &lt;code&gt;field&lt;/code&gt; to the parent form name</source>
          <target state="translated">&lt;code&gt;:as&lt;/code&gt; - имя, которое будет использоваться в форме, по умолчанию объединение данного &lt;code&gt;field&lt;/code&gt; с именем родительской формы</target>
        </trans-unit>
        <trans-unit id="fd2e236bede17b98f3ba886bbb77c34cf082c0e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:as&lt;/code&gt; - the server side parameter in which all params for this form will be collected (i.e. &lt;code&gt;as: :user_params&lt;/code&gt; would mean all fields for this form will be accessed as &lt;code&gt;conn.params.user_params&lt;/code&gt; server side). Automatically inflected when a changeset is given.</source>
          <target state="translated">&lt;code&gt;:as&lt;/code&gt; - параметр на стороне сервера, в котором будут собраны все параметры для этой формы (т.е. &lt;code&gt;as: :user_params&lt;/code&gt; будет означать, что все поля для этой формы будут доступны как &lt;code&gt;conn.params.user_params&lt;/code&gt; сервера conn.params.user_params ). Автоматически изменяемый, когда дается набор изменений.</target>
        </trans-unit>
        <trans-unit id="682b895c6ac180b519629af6185c4ca06601c08b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:assigns&lt;/code&gt; - The map of socket assigns, default: &lt;code&gt;%{}&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b07704f4436e3f250c39faef735d9120a1bc46b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:assigns&lt;/code&gt; - a map of data to merge into the connection when a route matches</source>
          <target state="translated">&lt;code&gt;:assigns&lt;/code&gt; - карта данных для объединения в соединение при совпадении маршрута</target>
        </trans-unit>
        <trans-unit id="142bb0f83fc8e18b1c5b6fbf602a49fd94df5597" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:assigns&lt;/code&gt; - assigns values to &lt;code&gt;conn.assigns&lt;/code&gt; for use in the match</source>
          <target state="translated">&lt;code&gt;:assigns&lt;/code&gt; &lt;code&gt;conn.assigns&lt;/code&gt; - присваивает значения conn.assigns для использования в матче</target>
        </trans-unit>
        <trans-unit id="267dc34b4691ff82ee5984ee602d1b57649c562f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:assigns&lt;/code&gt; - the map of socket assigns to merge into the socket on join</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="181a86d2421c2bf10cbfdaa1266949b566f59fe6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:assigns&lt;/code&gt; - the map of socket assigns to merge into the socket on join.</source>
          <target state="translated">&lt;code&gt;:assigns&lt;/code&gt; - карта сокета назначается для слияния с сокетом при объединении.</target>
        </trans-unit>
        <trans-unit id="10c95b2dcc167b0b6cfd93da9b1ad158a642c41f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:assigns&lt;/code&gt; - values for &lt;code&gt;conn.assigns&lt;/code&gt;, exactly like in &lt;a href=&quot;#match/3&quot;&gt;&lt;code&gt;match/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;:assigns&lt;/code&gt; &lt;code&gt;conn.assigns&lt;/code&gt; - значения для conn.assigns , как в &lt;a href=&quot;#match/3&quot;&gt; &lt;code&gt;match/3&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="172bf5da7501ae3b26fc6ce46c7f58bdf6d04758" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:at&lt;/code&gt; - the request path to reach for static assets. It must be a string.</source>
          <target state="translated">&lt;code&gt;:at&lt;/code&gt; - путь запроса для получения статических ресурсов. Это должна быть строка.</target>
        </trans-unit>
        <trans-unit id="59bed7468a224221da31b47fa0041090feb26e2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:attributes&lt;/code&gt; - html attributes of the wrapper tag (default: &lt;code&gt;[]&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;:attributes&lt;/code&gt; - html-атрибуты тега-оболочки (по умолчанию: &lt;code&gt;[]&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="93370437c48976e5c021d9625c2f6bb8e75ca9e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:autogenerate&lt;/code&gt; - a &lt;code&gt;{module, function, args}&lt;/code&gt; tuple for a function to call to generate the field value before insertion if value is not set. A shorthand value of &lt;code&gt;true&lt;/code&gt; is equivalent to &lt;code&gt;{type, :autogenerate, []}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:autogenerate&lt;/code&gt; - кортеж &lt;code&gt;{module, function, args}&lt;/code&gt; для функции, вызываемой для генерации значения поля перед вставкой, если значение не установлено. Сокращенное значение &lt;code&gt;true&lt;/code&gt; эквивалентно &lt;code&gt;{type, :autogenerate, []}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a3c3aebe76920ac20112b0cefa13c1c62ea8da09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:autogenerate&lt;/code&gt; - a module-function-args tuple used for generating both &lt;code&gt;inserted_at&lt;/code&gt; and &lt;code&gt;updated_at&lt;/code&gt; timestamps</source>
          <target state="translated">&lt;code&gt;:autogenerate&lt;/code&gt; - модуль-функция-арг тупл используется для создания как &lt;code&gt;inserted_at&lt;/code&gt; и &lt;code&gt;updated_at&lt;/code&gt; , временных меток</target>
        </trans-unit>
        <trans-unit id="d2292c9e71116702ae921f86008a2ef1a2c5b22d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:bad_gateway&lt;/code&gt; - 502</source>
          <target state="translated">&lt;code&gt;:bad_gateway&lt;/code&gt; - 502</target>
        </trans-unit>
        <trans-unit id="73326966442ec13e4b4791f52d4d45fe88b09749" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:bad_request&lt;/code&gt; - 400</source>
          <target state="translated">&lt;code&gt;:bad_request&lt;/code&gt; - 400</target>
        </trans-unit>
        <trans-unit id="148d2c6258a4624e3b480fc10e0663bbc9634c3e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:banner&lt;/code&gt; - the optional MFA (&lt;code&gt;{module, function, args}&lt;/code&gt;) which receives exception details and returns banner contents to appear at the top of the page. May be any string, including markup.</source>
          <target state="translated">&lt;code&gt;:banner&lt;/code&gt; - необязательный MFA ( &lt;code&gt;{module, function, args}&lt;/code&gt; ), который получает сведения об исключении и возвращает содержимое баннера, отображаемое в верхней части страницы. Может быть любая строка, включая разметку.</target>
        </trans-unit>
        <trans-unit id="4ebb72c62212b31b79fb5a41ee4c52007148badd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:body_reader&lt;/code&gt; - an optional replacement (or wrapper) for &lt;a href=&quot;plug.conn#read_body/2&quot;&gt;&lt;code&gt;Plug.Conn.read_body/2&lt;/code&gt;&lt;/a&gt; to provide a function that gives access to the raw body before it is parsed and discarded. It is in the standard format of &lt;code&gt;{Module, :function, [args]}&lt;/code&gt; (MFA) and defaults to &lt;code&gt;{Plug.Conn, :read_body, []}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:body_reader&lt;/code&gt; - необязательная замена (или оболочка) для &lt;a href=&quot;plug.conn#read_body/2&quot;&gt; &lt;code&gt;Plug.Conn.read_body/2&lt;/code&gt; ,&lt;/a&gt; чтобы предоставить функцию, которая дает доступ к необработанному телу до его анализа и удаления. Он имеет стандартный формат &lt;code&gt;{Module, :function, [args]}&lt;/code&gt; &lt;code&gt;{Plug.Conn, :read_body, []}&lt;/code&gt; function, [args]} (MFA) и по умолчанию равен {Plug.Conn,: read_body, []} .</target>
        </trans-unit>
        <trans-unit id="cc1d0a91667fe75de612451e7d788314d804175d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:body_reader&lt;/code&gt; - an optional replacement (or wrapper) for &lt;a href=&quot;plug.conn#read_body/2&quot;&gt;&lt;code&gt;Plug.Conn.read_body/2&lt;/code&gt;&lt;/a&gt; to provide a function that gives access to the raw body before it is parsed and discarded. It is in the standard format of &lt;code&gt;{Module, :function, [args]}&lt;/code&gt; (MFA) and defaults to &lt;code&gt;{Plug.Conn, :read_body, []}&lt;/code&gt;. Note that this option is not used by &lt;a href=&quot;plug.parsers.multipart&quot;&gt;&lt;code&gt;Plug.Parsers.MULTIPART&lt;/code&gt;&lt;/a&gt; which relies instead on other functions defined in &lt;a href=&quot;plug.conn&quot;&gt;&lt;code&gt;Plug.Conn&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fc17a1a2db5f59e71fd4bdfae141db5262798fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:broadcast_period&lt;/code&gt; - The interval in milliseconds to send delta broadcasts across the cluster. Default &lt;code&gt;1500&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:broadcast_period&lt;/code&gt; - Интервал в миллисекундах для отправки дельта-широковещательных рассылок по кластеру. По умолчанию &lt;code&gt;1500&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fb9fbeccd9c6e690e2225eca5113c2bae05e7ed1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:brotli&lt;/code&gt; - given a request for &lt;a href=&quot;file&quot;&gt;&lt;code&gt;FILE&lt;/code&gt;&lt;/a&gt;, serves &lt;code&gt;FILE.br&lt;/code&gt; if it exists in the static directory and if the &lt;code&gt;accept-encoding&lt;/code&gt; header is set to allow brotli-compressed content (defaults to &lt;code&gt;false&lt;/code&gt;). &lt;code&gt;FILE.br&lt;/code&gt; is checked first and dominates &lt;code&gt;FILE.gz&lt;/code&gt; due to the better compression ratio.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9abc80e90ccbe35948c952e3204a828f975b0a84" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:brotli&lt;/code&gt; - given a request for &lt;code&gt;FILE&lt;/code&gt;, serves &lt;code&gt;FILE.br&lt;/code&gt; if it exists in the static directory and if the &lt;code&gt;accept-encoding&lt;/code&gt; header is set to allow brotli-compressed content (defaults to &lt;code&gt;false&lt;/code&gt;). &lt;code&gt;FILE.br&lt;/code&gt; is checked first and dominates &lt;code&gt;FILE.gz&lt;/code&gt; due to the better compression ratio.</source>
          <target state="translated">&lt;code&gt;:brotli&lt;/code&gt; - при запросе на &lt;code&gt;FILE&lt;/code&gt; обслуживает &lt;code&gt;FILE.br&lt;/code&gt; , если он существует в статическом каталоге и если заголовок &lt;code&gt;accept-encoding&lt;/code&gt; настроен на разрешение содержимого, сжатого brotli (по умолчанию &lt;code&gt;false&lt;/code&gt; ). &lt;code&gt;FILE.br&lt;/code&gt; проверяется первым и преобладает над &lt;code&gt;FILE.gz&lt;/code&gt; из-за лучшей степени сжатия.</target>
        </trans-unit>
        <trans-unit id="be6915653f5c5f9eebb3be91c205a81b28c9be37" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:builder&lt;/code&gt; - specify how the select can be build. It must be a function that receives a builder that should be invoked with the select name and a set of options. See builder below for more information.</source>
          <target state="translated">&lt;code&gt;:builder&lt;/code&gt; - укажите, как можно построить выборку. Это должна быть функция, которая получает построитель, который должен быть вызван с выбранным именем и набором параметров. См. Конструктор ниже для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="50295377b753e3d7a7e0281301753db4836ab4fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:built&lt;/code&gt; - the struct was constructed in memory and is not persisted to database yet;</source>
          <target state="translated">&lt;code&gt;:built&lt;/code&gt; - структура была создана в памяти и еще не сохранена в базе данных;</target>
        </trans-unit>
        <trans-unit id="3d38f24cb1b2d943bd10858b30a19257a93feca1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:cache&lt;/code&gt; - an ETS table name to be used as cache. Only use an ETS table as cache if the secret and salt is a bound set of values. For example: &lt;code&gt;:ets.new(:your_name, [:named_table, :public, read_concurrency: true])&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:cache&lt;/code&gt; - имя таблицы ETS, которая будет использоваться в качестве кеша. Используйте таблицу ETS в качестве кеша только в том случае, если секрет и соль являются связанным набором значений. Например:: &lt;code&gt;:ets.new(:your_name, [:named_table, :public, read_concurrency: true])&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bf27f4d2683b5ff5a0a1b03a234ec3c2420936b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:cache_control_for_etags&lt;/code&gt; - sets the cache header for requests that use etags. Defaults to &lt;code&gt;&quot;public&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:cache_control_for_etags&lt;/code&gt; - устанавливает заголовок кеша для запросов, использующих etags. По умолчанию &lt;code&gt;&quot;public&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b9c39e07c33777d1dd3ac90743a048d1498b0d81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:cache_control_for_vsn_requests&lt;/code&gt; - sets the cache header for requests starting with &quot;?vsn=&quot; in the query string. Defaults to &lt;code&gt;&quot;public, max-age=31536000&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="891b56c70602ca4f4029ccc3dee866c711c22205" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:cache_control_for_vsn_requests&lt;/code&gt; - sets the cache header for requests starting with &amp;ldquo;?vsn=&amp;rdquo; in the query string. Defaults to &lt;code&gt;&quot;public, max-age=31536000&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:cache_control_for_vsn_requests&lt;/code&gt; - устанавливает заголовок кеша для запросов, начинающихся с &amp;laquo;? vsn =&amp;raquo; в строке запроса. По умолчанию &lt;code&gt;&quot;public, max-age=31536000&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cdcbdee2da300ed687e9213817975f0da8423d2c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:cache_static_manifest&lt;/code&gt; - a path to a json manifest file that contains static files and their digested version. This is typically set to &quot;priv/static/cache_manifest.json&quot; which is the file automatically generated by &lt;a href=&quot;mix.tasks.phx.digest&quot;&gt;&lt;code&gt;mix phx.digest&lt;/code&gt;&lt;/a&gt;. It can be either: a string containing a file system path or a tuple containing the application name and the path within that application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a977ccc04dc2ae471166fbbc1d8fccb2823f621f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:cache_static_manifest&lt;/code&gt; - a path to a json manifest file that contains static files and their digested version. This is typically set to &amp;ldquo;priv/static/cache_manifest.json&amp;rdquo; which is the file automatically generated by &lt;code&gt;mix phx.digest&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:cache_static_manifest&lt;/code&gt; - путь к файлу манифеста json, который содержит статические файлы и их дайджест-версию. Обычно устанавливается на &amp;laquo;priv / static / cache_manifest.json&amp;raquo;, который является файлом, автоматически сгенерированным &lt;code&gt;mix phx.digest&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6c0145d93691b9ec27e8c34da0f0bb05424b3314" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:cache_static_manifest_latest&lt;/code&gt; - a map of the static files pointing to their digest version. This is automatically loaded from &lt;code&gt;cache_static_manifest&lt;/code&gt; on boot. However, if you have your own static handling mechanism, you may want to set this value explicitly. This is used by projects such as &lt;code&gt;LiveView&lt;/code&gt; to detect if the client is running on the latest version of all assets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e894c8a5804b7754ff61bdd203d724cc73c57cf5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:channel&lt;/code&gt; - The current channel module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71c2500aef371811e409051827095c84323dc154" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:channel_pid&lt;/code&gt; - The channel pid</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c96ee1b74cc5de963aa014f8bd906bca1233dbf1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:charset&lt;/code&gt; - the charset of the file, such as &quot;utf-8&quot;. Defaults to none</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02d204e050a344579eee896bc65df17ccfbb92c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:charset&lt;/code&gt; - the charset of the file, such as &amp;ldquo;utf-8&amp;rdquo;. Defaults to none.</source>
          <target state="translated">&lt;code&gt;:charset&lt;/code&gt; - кодировка файла, например &amp;laquo;utf-8&amp;raquo;. По умолчанию нет.</target>
        </trans-unit>
        <trans-unit id="3b61abdc14182dc10fd24f4786caaa8e1638e4cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:check_origin&lt;/code&gt; - configure the default &lt;code&gt;:check_origin&lt;/code&gt; setting for transports. See &lt;a href=&quot;#socket/3&quot;&gt;&lt;code&gt;socket/3&lt;/code&gt;&lt;/a&gt; for options. Defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="558b55203341ae29f70c2c3cb0b5e65d9c49ea9e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:check_origin&lt;/code&gt; - configure transports to check origins or not. May be false, true or a list of hosts that are allowed. Hosts also support wildcards. For example:</source>
          <target state="translated">&lt;code&gt;:check_origin&lt;/code&gt; - настроить транспорты на проверку происхождения или нет. Может быть false, true или список разрешенных хостов. Хосты также поддерживают подстановочные знаки. Например:</target>
        </trans-unit>
        <trans-unit id="7eea1f217166394e851a026938b9d5306eeba47b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:check_origin&lt;/code&gt; - if the transport should check the origin of requests when the &lt;code&gt;origin&lt;/code&gt; header is present. May be &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;, a list of hosts that are allowed, or a function provided as MFA tuple. Defaults to &lt;code&gt;:check_origin&lt;/code&gt; setting at endpoint configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1b5eb44e7028ba95be457d69b416b28644bca50" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:check_origin&lt;/code&gt; - if we should check the origin of requests when the origin header is present. It defaults to true and, in such cases, it will check against the host value in &lt;code&gt;YourApp.Endpoint.config(:url)[:host]&lt;/code&gt;. It may be set to &lt;code&gt;false&lt;/code&gt; (not recommended) or to a list of explicitly allowed origins</source>
          <target state="translated">&lt;code&gt;:check_origin&lt;/code&gt; - нужно ли проверять происхождение запросов при наличии заголовка origin. По умолчанию он имеет значение true, и в таких случаях он проверяет значение хоста в &lt;code&gt;YourApp.Endpoint.config(:url)[:host]&lt;/code&gt; . Может быть установлено значение &lt;code&gt;false&lt;/code&gt; (не рекомендуется) или список явно разрешенных источников</target>
        </trans-unit>
        <trans-unit id="a84c8a848a8b4007edea7bf30decbcd2a23f3508" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:check_origin&lt;/code&gt; - if we should check the origin of requests when the origin header is present. It defaults to true and, in such cases, it will check against the host value in &lt;code&gt;YourApp.Endpoint.config(:url)[:host]&lt;/code&gt;. It may be set to &lt;code&gt;false&lt;/code&gt; (not recommended) or to a list of explicitly allowed origins.</source>
          <target state="translated">&lt;code&gt;:check_origin&lt;/code&gt; - нужно ли проверять происхождение запросов при наличии заголовка origin. По умолчанию он имеет значение true, и в таких случаях он проверяет значение хоста в &lt;code&gt;YourApp.Endpoint.config(:url)[:host]&lt;/code&gt; . Может быть установлено значение &lt;code&gt;false&lt;/code&gt; (не рекомендуется) или список явно разрешенных источников.</target>
        </trans-unit>
        <trans-unit id="ef93beabe72b5807f6450d0b385eba9ce5cf6be7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:checked_value&lt;/code&gt; - the value to be sent when the checkbox is checked. Defaults to &quot;true&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08e042bc1a01fd5d6d5fdec84672f31ed4fccdff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:checked_value&lt;/code&gt; - the value to be sent when the checkbox is checked. Defaults to &amp;ldquo;true&amp;rdquo;</source>
          <target state="translated">&lt;code&gt;:checked_value&lt;/code&gt; - значение, которое будет отправлено, когда флажок установлен. По умолчанию &quot;истина&quot;</target>
        </trans-unit>
        <trans-unit id="03fccfac68a1d8fc4b855202ef00b3828eb685eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:cipher_suite&lt;/code&gt; - it may be &lt;code&gt;:strong&lt;/code&gt; or &lt;code&gt;:compatible&lt;/code&gt;, as outlined in the following section</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6a7f342381dff4b428fbdbea0efdaeb9077ffd5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:clear_session&lt;/code&gt; - for invalid requests, this plug will set an empty session for only this request. Also any changes to the session during this request will be ignored.</source>
          <target state="translated">&lt;code&gt;:clear_session&lt;/code&gt; - для недействительных запросов этот плагин установит пустую сессию только для этого запроса. Также любые изменения в сеансе во время этого запроса будут проигнорированы.</target>
        </trans-unit>
        <trans-unit id="ac4c158c0c04e26e7ba993e0168894135d810926" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:clock_sample_periods&lt;/code&gt; - The numbers of heartbeat windows to sample remote clocks before collapsing and requesting transfer. Default &lt;code&gt;2&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:clock_sample_periods&lt;/code&gt; - Количество окон контрольных сигналов для выборки удаленных часов перед сворачиванием и запросом передачи. По умолчанию &lt;code&gt;2&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0a9c8d1149d19a3dda051f5f4840b844452bb122" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:code_reloader&lt;/code&gt; - enable or disable the code reloader. Defaults to your endpoint configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="647e3e05a1d7854d4b9f7d89ebc94fb74280017d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:code_reloader&lt;/code&gt; - optionally override the default &lt;code&gt;:code_reloader&lt;/code&gt; value from the socket&amp;rsquo;s endpoint</source>
          <target state="translated">&lt;code&gt;:code_reloader&lt;/code&gt; - необязательно переопределить значение по умолчанию &lt;code&gt;:code_reloader&lt;/code&gt; из конечной точки сокета</target>
        </trans-unit>
        <trans-unit id="aff2fecb111cbb48a64e2bb6f0de59cbb55bd3ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:code_reloader&lt;/code&gt; - when &lt;code&gt;true&lt;/code&gt;, enables code reloading functionality</source>
          <target state="translated">&lt;code&gt;:code_reloader&lt;/code&gt; - если &lt;code&gt;true&lt;/code&gt; , включает функцию перезагрузки кода</target>
        </trans-unit>
        <trans-unit id="b78d68a94802436eaf9493b9c315eae05ac3c591" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:code_reloader&lt;/code&gt; - when &lt;code&gt;true&lt;/code&gt;, enables code reloading functionality. For the list of code reloader configuration options see &lt;a href=&quot;phoenix.codereloader#reload!/1&quot;&gt;&lt;code&gt;Phoenix.CodeReloader.reload!/1&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="218a6d49a5535f7f2d38d1e04ef096fab1a7bbbb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:compress&lt;/code&gt; - whether to enable per message compression on all data frames, defaults to false</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7a1703b137c15629cd9187368ac624643cdf454" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:conflict&lt;/code&gt; - 409</source>
          <target state="translated">&lt;code&gt;:conflict&lt;/code&gt; - 409</target>
        </trans-unit>
        <trans-unit id="98e4565792fdcd91eb0d1e0ecffe631d6c8b64bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:conflict_target&lt;/code&gt; - A list of column names to verify for conflicts. It is expected those columns to have unique indexes on them that may conflict. If none is specified, the conflict target is left up to the database. It may also be &lt;code&gt;{:constraint, constraint_name_as_atom}&lt;/code&gt; in databases that support the &amp;ldquo;ON CONSTRAINT&amp;rdquo; expression, such as PostgreSQL, or &lt;code&gt;{:unsafe_fragment, binary_fragment}&lt;/code&gt; to pass any expression to the database without any sanitization, such as &lt;code&gt;ON CONFLICT (coalesce(firstname, &quot;&quot;), coalesce(lastname, &quot;&quot;))&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:conflict_target&lt;/code&gt; - список имен столбцов для проверки на наличие конфликтов. Ожидается, что эти столбцы будут иметь уникальные индексы, которые могут конфликтовать. Если ничего не указано, цель конфликта остается на усмотрение базы данных. Это также может быть &lt;code&gt;{:constraint, constraint_name_as_atom}&lt;/code&gt; в базах данных, которые поддерживают выражение &amp;laquo;ON CONSTRAINT&amp;raquo;, например PostgreSQL, или &lt;code&gt;{:unsafe_fragment, binary_fragment}&lt;/code&gt; чтобы передать любое выражение в базу данных без какой-либо очистки, например &lt;code&gt;ON CONFLICT (coalesce(firstname, &quot;&quot;), coalesce(lastname, &quot;&quot;))&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1e2acbbba89cea8f98350526de82caae7274adc0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:conflict_target&lt;/code&gt; - A list of column names to verify for conflicts. It is expected those columns to have unique indexes on them that may conflict. If none is specified, the conflict target is left up to the database. It may also be &lt;code&gt;{:unsafe_fragment, binary_fragment}&lt;/code&gt; to pass any expression to the database without any sanitization, this is useful for partial index or index with expressions, such as &lt;code&gt;ON CONFLICT (coalesce(firstname, &quot;&quot;), coalesce(lastname, &quot;&quot;))&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8243870aa04c24e30dc4a1bc17d0bd0bad8365b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:conflict_target&lt;/code&gt; - A list of column names to verify for conflicts. It is expected those columns to have unique indexes on them that may conflict. If none is specified, the conflict target is left up to the database. May also be &lt;code&gt;{:constraint, constraint_name_as_atom}&lt;/code&gt; in databases that support the &amp;ldquo;ON CONSTRAINT&amp;rdquo; expression, such as PostgreSQL.</source>
          <target state="translated">&lt;code&gt;:conflict_target&lt;/code&gt; - список имен столбцов для проверки на наличие конфликтов. Ожидается, что эти столбцы будут иметь уникальные индексы, которые могут конфликтовать. Если ничего не указано, цель конфликта остается на усмотрение базы данных. Также может быть &lt;code&gt;{:constraint, constraint_name_as_atom}&lt;/code&gt; в базах данных, которые поддерживают выражение ON CONSTRAINT, например PostgreSQL.</target>
        </trans-unit>
        <trans-unit id="db34f42772c7541037ddef22ad0b419d685f75d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:connect_info&lt;/code&gt; - a list of keys that represent data to be copied from the transport to be made available in the user socket &lt;code&gt;connect/3&lt;/code&gt; callback</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e10e7ea157c03e6201a52887273268c6a02cf77f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:connect_params&lt;/code&gt; - the map of params available in connected mount. See &lt;a href=&quot;phoenix.liveview#get_connect_params/1&quot;&gt;&lt;code&gt;Phoenix.LiveView.get_connect_params/1&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4801732938d18b23f880a8e9eb9576234307353" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:constraint&lt;/code&gt; - the database constraint name as a string</source>
          <target state="translated">&lt;code&gt;:constraint&lt;/code&gt; - имя ограничения базы данных в виде строки</target>
        </trans-unit>
        <trans-unit id="2939c910cb8935a6461c48972e5c865edcbb63c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:container&lt;/code&gt; - an optional tuple for the HTML tag and DOM attributes to be used for the LiveView container. For example: &lt;code&gt;{:li, style: &quot;color: blue;&quot;}&lt;/code&gt;. By default it uses the module definition container. See the &quot;Containers&quot; section below for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a985e2fb779effd511d0bae84ce440cf4e95942" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:container&lt;/code&gt; - an optional tuple for the HTML tag and DOM attributes to be used for the LiveView container. For example: &lt;code&gt;{:li, style: &quot;color: blue;&quot;}&lt;/code&gt;. See &lt;a href=&quot;phoenix.liveview.helpers#live_render/3&quot;&gt;&lt;code&gt;Phoenix.LiveView.Helpers.live_render/3&lt;/code&gt;&lt;/a&gt; for more information and examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b62e1a7d8b58167e4fd0527389bb3367a8953123" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:container&lt;/code&gt; - configures the container the &lt;code&gt;LiveView&lt;/code&gt; will be wrapped in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eb7b9474ae361008f1112260e96357149bc9c93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:content_type&lt;/code&gt; - the content type of the file or binary sent as download. It is automatically inferred from the filename extension</source>
          <target state="translated">&lt;code&gt;:content_type&lt;/code&gt; - тип содержимого файла или двоичного файла, отправленного как загрузка. Он автоматически выводится из расширения имени файла</target>
        </trans-unit>
        <trans-unit id="0f187617497ce1436df21b557134c3951f2af1ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:content_type&lt;/code&gt; - the content type of the uploaded file</source>
          <target state="translated">&lt;code&gt;:content_type&lt;/code&gt; - тип содержимого загруженного файла</target>
        </trans-unit>
        <trans-unit id="0b0476ae5ecac1fa1a027ecae6026703c314f8f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:content_types&lt;/code&gt; - custom MIME type mapping. As a map with filename as key and content type as value. For example: &lt;code&gt;content_types: %{&quot;apple-app-site-association&quot; =&amp;gt; &quot;application/json&quot;}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:content_types&lt;/code&gt; - настраиваемое сопоставление типов MIME. В виде карты с именем файла в качестве ключа и типом содержимого в качестве значения. Например: &lt;code&gt;content_types: %{&quot;apple-app-site-association&quot; =&amp;gt; &quot;application/json&quot;}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a13c7f686cdd0e6876855cd875c808637bfaa284" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:context&lt;/code&gt; - changes the struct meta context</source>
          <target state="translated">&lt;code&gt;:context&lt;/code&gt; - изменяет метаконтекст структуры</target>
        </trans-unit>
        <trans-unit id="42c6b7338c0214bae88a2595bcb40938ea1076d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:continue&lt;/code&gt; - 100</source>
          <target state="translated">&lt;code&gt;:continue&lt;/code&gt; - 100</target>
        </trans-unit>
        <trans-unit id="060423c33c240244148ed7a915ef65d1380014d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:count&lt;/code&gt; - what length to count for string, &lt;code&gt;:graphemes&lt;/code&gt; (default) or &lt;code&gt;:codepoints&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:count&lt;/code&gt; - какую длину считать для строки &lt;code&gt;:graphemes&lt;/code&gt; (по умолчанию) или &lt;code&gt;:codepoints&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="89de874fb9d11d3f677d957b5c52d6a2117cf4f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:count&lt;/code&gt; - what length to count for string, &lt;code&gt;:graphemes&lt;/code&gt; (default), &lt;code&gt;:codepoints&lt;/code&gt; or &lt;code&gt;:bytes&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19e92acf99ca51c182d4a1de2183cd981d039a0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:created&lt;/code&gt; - 201</source>
          <target state="translated">&lt;code&gt;:created&lt;/code&gt; - 201</target>
        </trans-unit>
        <trans-unit id="3c2b1a0d394f023f22a1d3bf4964ac3dead9ae0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:crypto&lt;/code&gt; - options for verifying and signing the token, accepted by &lt;a href=&quot;phoenix.token&quot;&gt;&lt;code&gt;Phoenix.Token&lt;/code&gt;&lt;/a&gt;. By default tokens are valid for 2 weeks</source>
          <target state="translated">&lt;code&gt;:crypto&lt;/code&gt; - варианты проверки и подписи токена, принятого &lt;a href=&quot;phoenix.token&quot;&gt; &lt;code&gt;Phoenix.Token&lt;/code&gt; &lt;/a&gt; . По умолчанию токены действительны 2 недели.</target>
        </trans-unit>
        <trans-unit id="f617279d1a47733a73a30b93169481d73b4a05b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:csrf_token&lt;/code&gt; - a custom token to use for links with a method other than &lt;code&gt;:get&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4df07c0b12508457466419a0ab053e78297a939b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:csrf_token&lt;/code&gt; - for &quot;post&quot; requests, the form tag will automatically include an input tag with name &lt;code&gt;_csrf_token&lt;/code&gt;. When set to false, this is disabled</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ebb67633c335615685490e88fb8f79f15dccb81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:csrf_token&lt;/code&gt; - for &amp;ldquo;post&amp;rdquo; requests, the form tag will automatically include an input tag with name &lt;code&gt;_csrf_token&lt;/code&gt;. When set to false, this is disabled</source>
          <target state="translated">&lt;code&gt;:csrf_token&lt;/code&gt; - для запросов &amp;laquo;post&amp;raquo; тег формы будет автоматически включать тег ввода с именем &lt;code&gt;_csrf_token&lt;/code&gt; . Если установлено значение false, это отключено</target>
        </trans-unit>
        <trans-unit id="c9551bc9089492cfa4f26bae62aab34692609ef9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:data&lt;/code&gt; - the field used to store lookup data</source>
          <target state="translated">&lt;code&gt;:data&lt;/code&gt; - поле, используемое для хранения данных поиска</target>
        </trans-unit>
        <trans-unit id="f8d088b9fea57a91fe820fa5c38025fed3bd0c5e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:datetime&lt;/code&gt; - An alias for &lt;code&gt;:naive_datetime&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:datetime&lt;/code&gt; - Псевдоним для &lt;code&gt;:naive_datetime&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="34324e9fd35c9a1811e0fb02e02bf761b48da63d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:debug_errors&lt;/code&gt; - when &lt;code&gt;true&lt;/code&gt;, uses &lt;a href=&quot;../plug/1.5.1/plug.debugger&quot;&gt;&lt;code&gt;Plug.Debugger&lt;/code&gt;&lt;/a&gt; functionality for debugging failures in the application. Recommended to be set to &lt;code&gt;true&lt;/code&gt; only in development as it allows listing of the application source code during debugging. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:debug_errors&lt;/code&gt; - при значении &lt;code&gt;true&lt;/code&gt; использует функциональность &lt;a href=&quot;../plug/1.5.1/plug.debugger&quot;&gt; &lt;code&gt;Plug.Debugger&lt;/code&gt; &lt;/a&gt; для отладки сбоев в приложении. Рекомендуется устанавливать значение &lt;code&gt;true&lt;/code&gt; только при разработке, так как это позволяет выводить исходный код приложения во время отладки. По умолчанию - &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="24652ebadc311417016d48ced62fdd98f6cd45c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:debug_errors&lt;/code&gt; - when &lt;code&gt;true&lt;/code&gt;, uses &lt;a href=&quot;../plug/plug.debugger&quot;&gt;&lt;code&gt;Plug.Debugger&lt;/code&gt;&lt;/a&gt; functionality for debugging failures in the application. Recommended to be set to &lt;code&gt;true&lt;/code&gt; only in development as it allows listing of the application source code during debugging. Defaults to &lt;code&gt;false&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af2240cb74c518df4acc50b816772b4945e7c687" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:decode_time&lt;/code&gt; - the time spent decoding the data received from the database</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64ca1e57622446e140c167b2b7ae25b59e2ec161" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:default&lt;/code&gt; - Sets the default value on the schema and the struct. The default value is calculated at compilation time, so don&amp;rsquo;t use expressions like &lt;code&gt;DateTime.utc_now&lt;/code&gt; or &lt;code&gt;Ecto.UUID.generate&lt;/code&gt; as they would then be the same for all records.</source>
          <target state="translated">&lt;code&gt;:default&lt;/code&gt; - Устанавливает значение по умолчанию для схемы и структуры. Значение по умолчанию вычисляется во время компиляции, поэтому не используйте такие выражения, как &lt;code&gt;DateTime.utc_now&lt;/code&gt; или &lt;code&gt;Ecto.UUID.generate&lt;/code&gt; , поскольку в этом случае они будут одинаковыми для всех записей.</target>
        </trans-unit>
        <trans-unit id="15b5f4ea1de7c9036ed1f313f52101c7cf808c4f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:default&lt;/code&gt; - Sets the default value on the schema and the struct. The default value is calculated at compilation time, so don't use expressions like &lt;code&gt;DateTime.utc_now&lt;/code&gt; or &lt;code&gt;Ecto.UUID.generate&lt;/code&gt; as they would then be the same for all records.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc38d45bc61e8889d15f10d71c32a16b5892ff47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:default&lt;/code&gt; - the default value to use when none was given in &lt;code&gt;:value&lt;/code&gt; and none is available in the form data</source>
          <target state="translated">&lt;code&gt;:default&lt;/code&gt; - значение по умолчанию, которое будет использоваться, если в &lt;code&gt;:value&lt;/code&gt; ничего не было указано и в данных формы ничего нет</target>
        </trans-unit>
        <trans-unit id="ba4d6e8cfc22b62f22caecbc138fd4d51a529945" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:default&lt;/code&gt; - the value to use if none is available</source>
          <target state="translated">&lt;code&gt;:default&lt;/code&gt; - значение использовать, если ничего не доступно</target>
        </trans-unit>
        <trans-unit id="dc3f61e3fa56f54aff71584e049d1df642f1766f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:defaults&lt;/code&gt; - Default values to use when building the association</source>
          <target state="translated">&lt;code&gt;:defaults&lt;/code&gt; - значения по умолчанию для использования при построении ассоциации</target>
        </trans-unit>
        <trans-unit id="fa7b2865f5c4d90c420f236209d10e2a406bd91b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:defaults&lt;/code&gt; - Default values to use when building the association. It may be a keyword list of options that override the association schema or a &lt;code&gt;{module, function, args}&lt;/code&gt; that receive the struct and the owner as arguments. For example, if you set &lt;code&gt;Post.has_many :comments, defaults: [public: true]&lt;/code&gt;, then when using &lt;code&gt;Ecto.build_assoc(post, :comments)&lt;/code&gt; that comment will have &lt;code&gt;comment.public == true&lt;/code&gt;. Alternatively, you can set it to &lt;code&gt;Post.has_many :comments, defaults: {__MODULE__, :update_comment, []}&lt;/code&gt; and &lt;code&gt;Post.update_comment(comment, post)&lt;/code&gt; will be invoked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c39d82ca386f58e8abe624dc45d6e1c66b4c558c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:define_field&lt;/code&gt; - When false, does not automatically define a &lt;code&gt;:foreign_key&lt;/code&gt; field, implying the user is defining the field manually elsewhere</source>
          <target state="translated">&lt;code&gt;:define_field&lt;/code&gt; - при false не определяет автоматически поле &lt;code&gt;:foreign_key&lt;/code&gt; , подразумевая, что пользователь определяет поле вручную в другом месте</target>
        </trans-unit>
        <trans-unit id="d71890ce0551f28f69210d36fc06fbd65eab2b74" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:delete&lt;/code&gt; - removes the association or related data from the database. This option has to be used carefully (see below). Will set &lt;code&gt;action&lt;/code&gt; on associated changesets to &lt;code&gt;:replace&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ba1c28eeab7b501c7e1034547c3d5468c47e541" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:delete&lt;/code&gt; - removes the association or related data from the database. This option has to be used carefully. Will set &lt;code&gt;action&lt;/code&gt; on associated changesets to &lt;code&gt;:replace&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:delete&lt;/code&gt; - удаляет ассоциацию или связанные данные из базы данных. Эту опцию следует использовать осторожно. Установит &lt;code&gt;action&lt;/code&gt; для связанных наборов изменений &lt;code&gt;:replace&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="47faa3bc2c2cbc977303863c90fe01156820e91d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:deleted&lt;/code&gt; - the struct was deleted and no longer represents persisted data.</source>
          <target state="translated">&lt;code&gt;:deleted&lt;/code&gt; - структура была удалена и больше не представляет сохраненные данные.</target>
        </trans-unit>
        <trans-unit id="1385688a318c4abd53d08e6715a94981a022dbbd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:digest&lt;/code&gt; - an hmac function to use as the pseudo-random function. Defaults to &lt;code&gt;:sha256&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;:digest&lt;/code&gt; - функция hmac для использования в качестве псевдослучайной функции. По умолчанию &lt;code&gt;:sha256&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="08d8fbb82ebaa5c2208a97f8f37b1fc2fb6e6003" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:disposition&lt;/code&gt; - specifies dispositon type (&lt;code&gt;:attachment&lt;/code&gt; or &lt;code&gt;:inline&lt;/code&gt;). If &lt;code&gt;:attachment&lt;/code&gt; was used, user will be prompted to save the file. If &lt;code&gt;:inline&lt;/code&gt; was used, the browser will attempt to open the file. Defaults to &lt;code&gt;:attachment&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5287f37eecb76258298ea6a973e86c0e19d7911d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:do&lt;/code&gt; - contains the implementation to be invoked in case the route matches.</source>
          <target state="translated">&lt;code&gt;:do&lt;/code&gt; - содержит реализацию, которая будет вызываться в случае совпадения маршрута.</target>
        </trans-unit>
        <trans-unit id="78c20c5e01df6e98328365da2e38b184917be70d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:domain&lt;/code&gt; - see &lt;a href=&quot;plug.conn#put_resp_cookie/4&quot;&gt;&lt;code&gt;Plug.Conn.put_resp_cookie/4&lt;/code&gt;&lt;/a&gt;;</source>
          <target state="translated">&lt;code&gt;:domain&lt;/code&gt; - см. &lt;a href=&quot;plug.conn#put_resp_cookie/4&quot;&gt; &lt;code&gt;Plug.Conn.put_resp_cookie/4&lt;/code&gt; &lt;/a&gt; ;</target>
        </trans-unit>
        <trans-unit id="767492dd7c7174c291b9372f125f6027ddedf88f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:domain&lt;/code&gt; - the domain the cookie applies to</source>
          <target state="translated">&lt;code&gt;:domain&lt;/code&gt; - домен, к которому относится cookie</target>
        </trans-unit>
        <trans-unit id="357c1f6f48ab26666e2ec7ba2a2e578574439ed3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:down_period&lt;/code&gt; - The interval in milliseconds to flag a replica as temporarily down. Default &lt;code&gt;broadcast_period * max_silent_periods * 2&lt;/code&gt; (30s down detection). Note: This must be at least 2x the &lt;code&gt;broadcast_period&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:down_period&lt;/code&gt; - Интервал в миллисекундах, в течение которого реплика помечается как временно неработающая . &lt;code&gt;broadcast_period * max_silent_periods * 2&lt;/code&gt; умолчанию * max_silent_periods * 2 (обнаружение задержки на 30 секунд ). Примечание. Это должно быть как минимум в 2 раза больше периода &lt;code&gt;broadcast_period&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d1776a03bf1e3bf3c3d468e51495434348754924" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:drainer&lt;/code&gt; - a drainer process that triggers when your application is shutting to wait for any on-going request to finish. It accepts all options as defined by &lt;a href=&quot;https://hexdocs.pm/plug_cowboy/Plug.Cowboy.Drainer.html&quot;&gt;&lt;code&gt;Plug.Cowboy&lt;/code&gt;&lt;/a&gt;. Defaults to &lt;code&gt;[]&lt;/code&gt; and can be disabled by setting it to false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e25017c5f4b9df42816b63b0ceeddf230b10908a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:drop&lt;/code&gt; - drops the session, a session cookie will not be included in the response</source>
          <target state="translated">&lt;code&gt;:drop&lt;/code&gt; - прерывает сеанс, cookie сеанса не включается в ответ</target>
        </trans-unit>
        <trans-unit id="cc67589e43da0bed41140a7a99803b417d876c79" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:early_hints&lt;/code&gt; - 103</source>
          <target state="translated">&lt;code&gt;:early_hints&lt;/code&gt; - 103</target>
        </trans-unit>
        <trans-unit id="198ca4b0b50dbd4b5e598671e0689f0891d87217" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:empty_values&lt;/code&gt; - a list of values to be considered as empty when casting. All empty values are discarded on cast. Defaults to &lt;code&gt;[&quot;&quot;]&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c75da5c0840838d5a3a7fe4d98b1c591d2dc4c77" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:empty_values&lt;/code&gt; - a list of values to be considered as empty when casting. Defaults to the changeset value, which defaults to &lt;code&gt;[&quot;&quot;]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:empty_values&lt;/code&gt; - список значений, которые будут считаться пустыми при приведении. По умолчанию используется значение набора изменений, которое по умолчанию &lt;code&gt;[&quot;&quot;]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dfbe8a75378cc7237a3d7997fb9155ec94ef97bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:encode&lt;/code&gt; - encodes the filename using &lt;a href=&quot;https://hexdocs.pm/elixir/URI.html#encode_www_form/1&quot;&gt;&lt;code&gt;URI.encode_www_form/1&lt;/code&gt;&lt;/a&gt;. Defaults to &lt;code&gt;true&lt;/code&gt;. When &lt;code&gt;false&lt;/code&gt;, disables encoding. If you disable encoding, you need to guarantee there are no special characters in the filename, such as quotes, newlines, etc. Otherwise you can expose your application to security attacks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a61189dba6defbaa9dd3ee1a8908bb5cb322e8d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:encrypt&lt;/code&gt; - when true, encrypts the cookie</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eadbf8d051046fd827e31ba6f54125995e234fd8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:encrypted&lt;/code&gt; - a list of one or more cookies that are encrypted and must be decrypted accordingly</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="715cd0ac0f14758ae1cff3b16388c448edd2f0ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:encryption_salt&lt;/code&gt; - a salt used with &lt;code&gt;conn.secret_key_base&lt;/code&gt; to generate a key for encrypting/decrypting a cookie, can be either a binary or an MFA returning a binary;</source>
          <target state="translated">&lt;code&gt;:encryption_salt&lt;/code&gt; - соль, используемая с &lt;code&gt;conn.secret_key_base&lt;/code&gt; для генерации ключа для шифрования / дешифрования cookie, может быть либо двоичным, либо MFA, возвращающим двоичный файл;</target>
        </trans-unit>
        <trans-unit id="110e631abc2fad87cabb7ec1bde222278436be8f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:endpoint&lt;/code&gt; - The endpoint module where this socket originated, for example: &lt;code&gt;MyAppWeb.Endpoint&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db540e2c2744e15dab7597329caf0ca530b660dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:endpoint&lt;/code&gt; - the application endpoint</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80b05ff78faaa0c385d44ed39373beba7eec08f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:enforce_utf8&lt;/code&gt; - the form will have an &lt;code&gt;accept-charset&lt;/code&gt; attribute set to &amp;ldquo;UTF-8&amp;rdquo; and a hidden input named &lt;code&gt;_utf8&lt;/code&gt; containing a unicode character to force the browser to use UTF-8 as the charset. When set to false, this is disabled.</source>
          <target state="translated">&lt;code&gt;:enforce_utf8&lt;/code&gt; - форма будет иметь атрибут &lt;code&gt;accept-charset&lt;/code&gt; , установленный на &amp;laquo;UTF-8&amp;raquo;, и скрытый ввод с именем &lt;code&gt;_utf8&lt;/code&gt; , содержащий символ Unicode, чтобы браузер использовал UTF-8 в качестве кодировки. Если установлено значение false, это отключено.</target>
        </trans-unit>
        <trans-unit id="9ba654b0418683d2c310598497de675201edef04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:enforce_utf8&lt;/code&gt; - when false, does not enforce utf8. Read below for more information</source>
          <target state="translated">&lt;code&gt;:enforce_utf8&lt;/code&gt; - если false, не применяет utf8. Читайте ниже для получения дополнительной информации</target>
        </trans-unit>
        <trans-unit id="1f5e82908cac5b06f8931fbebef379fceff89a5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:error&lt;/code&gt; if the media type isn&amp;rsquo;t valid</source>
          <target state="translated">&lt;code&gt;:error&lt;/code&gt; если тип носителя недействителен</target>
        </trans-unit>
        <trans-unit id="36253442646c546a7c291187fde5df76cc2f27b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:error&lt;/code&gt; if the media type isn't valid</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25e4a350d48b23a87b68dc8757c67b7243b85b84" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:error_key&lt;/code&gt; - the key to which changeset error will be added when check fails, defaults to the first field name of the given list of fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f393cb4807ba14d87fb7782d003b71f15d383070" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:error_message&lt;/code&gt; - the error message in case of violated constraints</source>
          <target state="translated">&lt;code&gt;:error_message&lt;/code&gt; - сообщение об ошибке в случае нарушения ограничений</target>
        </trans-unit>
        <trans-unit id="247b6dfd17cf58d213811d1b7daeb5aabb710b79" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:error_type&lt;/code&gt; - the type of error that identifies the error message</source>
          <target state="translated">&lt;code&gt;:error_type&lt;/code&gt; - тип ошибки, идентифицирующий сообщение об ошибке</target>
        </trans-unit>
        <trans-unit id="250f2255e627d419ad5d5426553cc08b7e25bd6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:errors&lt;/code&gt; - a keyword list of errors that associated with the form</source>
          <target state="translated">&lt;code&gt;:errors&lt;/code&gt; - список ключевых слов ошибок, связанных с формой</target>
        </trans-unit>
        <trans-unit id="fdd9fb26b3c51214ceea9fe23d710e7f3e24b3fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:errors&lt;/code&gt; - use this to manually pass a keyword list of errors to the form (for example from &lt;code&gt;conn.assigns[:errors]&lt;/code&gt;). This option is only used when a connection is used as the form source and it will make the errors available under &lt;code&gt;f.errors&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6660c3b4a82c88dec246235b183ce6e8f6072aae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:escape&lt;/code&gt; - if &lt;code&gt;false&lt;/code&gt; does not html escape input (default: &lt;code&gt;true&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;:escape&lt;/code&gt; - если &lt;code&gt;false&lt;/code&gt; не выводит HTML-экранирование (по умолчанию: &lt;code&gt;true&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="8cde6f3e01e3d310fe4be553cb8d840bdfba5400" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:etag_generation&lt;/code&gt; - specify a &lt;code&gt;{module, function, args}&lt;/code&gt; to be used to generate an etag. The &lt;code&gt;path&lt;/code&gt; of the resource will be passed to the function, as well as the &lt;code&gt;args&lt;/code&gt;. If this option is not supplied, etags will be generated based off of file size and modification time.</source>
          <target state="translated">&lt;code&gt;:etag_generation&lt;/code&gt; - укажите &lt;code&gt;{module, function, args}&lt;/code&gt; который будет использоваться для генерации etag. &lt;code&gt;path&lt;/code&gt; ресурса будет передано функции, а также &lt;code&gt;args&lt;/code&gt; . Если эта опция не указана, etags будут сгенерированы на основе размера файла и времени модификации.</target>
        </trans-unit>
        <trans-unit id="897d7ed0d24f47be1a0b312dbd270570c5eaa01e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:etag_generation&lt;/code&gt; - specify a &lt;code&gt;{module, function, args}&lt;/code&gt; to be used to generate an etag. The &lt;code&gt;path&lt;/code&gt; of the resource will be passed to the function, as well as the &lt;code&gt;args&lt;/code&gt;. If this option is not supplied, etags will be generated based off of file size and modification time. Note it is &lt;a href=&quot;https://tools.ietf.org/html/rfc7232#section-2.3&quot;&gt;recommended for the etag value to be quoted&lt;/a&gt;, which Plug won't do automatically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="657a9846b8b9a19d4c1dae377a4d0af749515f64" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:event&lt;/code&gt;- The string event name, for example &quot;phx_join&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df95ebd33a9fd66b6a55a5e15855656bbb076f1a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:except&lt;/code&gt; - a list of actions to exclude generated routes from, for example: &lt;code&gt;[:delete]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:except&lt;/code&gt; - список действий, из которых нужно исключить сгенерированные маршруты, например: &lt;code&gt;[:delete]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8e37a34da4167a2a359334f22958374f35f3e567" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:exception&lt;/code&gt; - for invalid requests, this plug will raise &lt;a href=&quot;plug.csrfprotection.invalidcsrftokenerror&quot;&gt;&lt;code&gt;Plug.CSRFProtection.InvalidCSRFTokenError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;:exception&lt;/code&gt; - для недействительных запросов этот плагин вызовет &lt;a href=&quot;plug.csrfprotection.invalidcsrftokenerror&quot;&gt; &lt;code&gt;Plug.CSRFProtection.InvalidCSRFTokenError&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="508266b05303a887f670a8399f9ba9f23348b553" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:exclude&lt;/code&gt; - exclude the given hosts from redirecting to the &lt;code&gt;https&lt;/code&gt; scheme. Defaults to &lt;code&gt;[&quot;localhost&quot;]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:exclude&lt;/code&gt; - исключить указанные хосты из перенаправления на схему &lt;code&gt;https&lt;/code&gt; . По умолчанию &lt;code&gt;[&quot;localhost&quot;]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0ec6a81f03efe17df7bf0038a2b209b7e2879111" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:exclude&lt;/code&gt; - exclude the given hosts from redirecting to the &lt;code&gt;https&lt;/code&gt; scheme. Defaults to &lt;code&gt;[&quot;localhost&quot;]&lt;/code&gt;. It may be set to a list of binaries or a tuple &lt;a href=&quot;#module-excluded-hosts-tuple&quot;&gt;&lt;code&gt;{module, function, args}&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5cdaa58b47998cd8175ad7234fd095360b1461a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:expectation_failed&lt;/code&gt; - 417</source>
          <target state="translated">&lt;code&gt;:expectation_failed&lt;/code&gt; - 417</target>
        </trans-unit>
        <trans-unit id="d5ab84642bf335d9ed3e4c1de21b043612da2b4c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:expires&lt;/code&gt; - seconds to expires for HSTS, defaults to &lt;code&gt;31_536_000&lt;/code&gt; (1 year)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b366745599855403777b1775ab55bff48404b16a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:expires&lt;/code&gt; - seconds to expires for HSTS, defaults to &lt;code&gt;31_536_000&lt;/code&gt; (a year).</source>
          <target state="translated">&lt;code&gt;:expires&lt;/code&gt; - количество секунд до истечения срока для HSTS, по умолчанию &lt;code&gt;31_536_000&lt;/code&gt; (год).</target>
        </trans-unit>
        <trans-unit id="45a740db9d8a7b0cf0aa696ae2028b34a8e26f0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:expires&lt;/code&gt; - seconds to expires for HSTS, defaults to &lt;code&gt;7884000&lt;/code&gt; (three months)</source>
          <target state="translated">&lt;code&gt;:expires&lt;/code&gt; - секунды до истечения срока для HSTS, по умолчанию &lt;code&gt;7884000&lt;/code&gt; (три месяца)</target>
        </trans-unit>
        <trans-unit id="7fa7bf5c3673c83afe24b424b646dbb8c669e77c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:external&lt;/code&gt; - an external path to redirect to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5b6d4f7369f88961f6eaa271bff26f1f6521f8e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:extra&lt;/code&gt; - see &lt;a href=&quot;plug.conn#put_resp_cookie/4&quot;&gt;&lt;code&gt;Plug.Conn.put_resp_cookie/4&lt;/code&gt;&lt;/a&gt;;</source>
          <target state="translated">&lt;code&gt;:extra&lt;/code&gt; - см. &lt;a href=&quot;plug.conn#put_resp_cookie/4&quot;&gt; &lt;code&gt;Plug.Conn.put_resp_cookie/4&lt;/code&gt; &lt;/a&gt; ;</target>
        </trans-unit>
        <trans-unit id="026160e4adfd814852ef8470762f936382c46655" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:extra&lt;/code&gt; - string to append to cookie. Use this to take advantage of non-standard cookie attributes.</source>
          <target state="translated">&lt;code&gt;:extra&lt;/code&gt; - строка для добавления в cookie. Используйте это, чтобы воспользоваться нестандартными атрибутами файлов cookie.</target>
        </trans-unit>
        <trans-unit id="c34a16abf57773838b94a2a2da5d08e2ddb1bf7e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:failed_dependency&lt;/code&gt; - 424</source>
          <target state="translated">&lt;code&gt;:failed_dependency&lt;/code&gt; - 424</target>
        </trans-unit>
        <trans-unit id="80560c23fe5d0ca05b89047f707a1b87aaab88f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:fastlane&lt;/code&gt; - Provides a fastlane path for the broadcasts for &lt;code&gt;%Phoenix.Socket.Broadcast{}&lt;/code&gt; events. The fastlane process is notified of a cached message instead of the normal subscriber. Fastlane handlers must implement &lt;code&gt;fastlane/1&lt;/code&gt; callbacks which accepts a &lt;code&gt;Phoenix.Socket.Broadcast&lt;/code&gt; struct and returns a fastlaned format for the handler. For example:</source>
          <target state="translated">&lt;code&gt;:fastlane&lt;/code&gt; - Обеспечивает скоростную полосу для трансляций событий &lt;code&gt;%Phoenix.Socket.Broadcast{}&lt;/code&gt; . Процесс fastlane получает уведомление о кешированном сообщении вместо обычного подписчика. Обработчики Fastlane должны реализовывать &lt;code&gt;fastlane/1&lt;/code&gt; вызовы fastlane / 1, которые принимают структуру &lt;code&gt;Phoenix.Socket.Broadcast&lt;/code&gt; и возвращают формат fastlaned для обработчика. Например:</target>
        </trans-unit>
        <trans-unit id="3b1f8178a5f118ff16a27d171c17685c0d527b53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:fastlane&lt;/code&gt; - Provides a fastlane path for the broadcasts for &lt;code&gt;%Phoenix.Socket.Broadcast{}&lt;/code&gt; events. The fastlane process is notified of a cached message instead of the normal subscriber. Fastlane handlers must implement &lt;code&gt;fastlane/1&lt;/code&gt; callbacks which accepts a &lt;code&gt;Phoenix.Socket.Broadcast&lt;/code&gt; structs and returns a fastlaned format for the handler. For example:</source>
          <target state="translated">&lt;code&gt;:fastlane&lt;/code&gt; - Обеспечивает скоростную полосу для трансляций событий &lt;code&gt;%Phoenix.Socket.Broadcast{}&lt;/code&gt; . Процесс fastlane получает уведомление о кешированном сообщении вместо обычного подписчика. Обработчики Fastlane должны реализовывать &lt;code&gt;fastlane/1&lt;/code&gt; вызовы fastlane / 1, которые принимают структуры &lt;code&gt;Phoenix.Socket.Broadcast&lt;/code&gt; и возвращают формат fastlaned для обработчика. Например:</target>
        </trans-unit>
        <trans-unit id="692bae1c8c466975baa2bedb421a7e88d8b0935f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:field&lt;/code&gt; - the field a violated constraint will apply the error to</source>
          <target state="translated">&lt;code&gt;:field&lt;/code&gt; - поле, к которому нарушено ограничение, применит ошибку</target>
        </trans-unit>
        <trans-unit id="08537c840fb7f6b9181ba8b818ad600915d69636" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:filename&lt;/code&gt; - the filename of the uploaded file given in the request</source>
          <target state="translated">&lt;code&gt;:filename&lt;/code&gt; - имя файла загруженного файла, указанного в запросе</target>
        </trans-unit>
        <trans-unit id="592755833afc553b9f480691eb3682c644f99727" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:filename&lt;/code&gt; - the filename to be presented to the user as download</source>
          <target state="translated">&lt;code&gt;:filename&lt;/code&gt; - имя файла, которое будет представлено пользователю при загрузке</target>
        </trans-unit>
        <trans-unit id="959d5bde5ec2cae034dba0c754b092191e08e86b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:forbidden&lt;/code&gt; - 403</source>
          <target state="translated">&lt;code&gt;:forbidden&lt;/code&gt; - 403</target>
        </trans-unit>
        <trans-unit id="1a3cd4b31512785ae8b5a2aea7a0784f9162f1ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:force&lt;/code&gt; - By default, Ecto won&amp;rsquo;t preload associations that are already loaded. By setting this option to true, any existing association will be discarded and reloaded.</source>
          <target state="translated">&lt;code&gt;:force&lt;/code&gt; - По умолчанию Ecto не будет предварительно загружать уже загруженные ассоциации. Если установить для этого параметра значение true, любая существующая связь будет отброшена и перезагружена.</target>
        </trans-unit>
        <trans-unit id="25c693256311eeefcefae5e572fad37bb5254ff4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:force&lt;/code&gt; - By default, Ecto won't preload associations that are already loaded. By setting this option to true, any existing association will be discarded and reloaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5daeae4177a95f121b2029f0bfa4f0834fcda06f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:force&lt;/code&gt; - By default, if there are no changes in the changeset, &lt;a href=&quot;#c:update/2&quot;&gt;&lt;code&gt;update/2&lt;/code&gt;&lt;/a&gt; is a no-op. By setting this option to true, update callbacks will always be executed, even if there are no changes (including timestamps).</source>
          <target state="translated">&lt;code&gt;:force&lt;/code&gt; - По умолчанию, если в наборе изменений нет изменений, &lt;a href=&quot;#c:update/2&quot;&gt; &lt;code&gt;update/2&lt;/code&gt; &lt;/a&gt; не работает. Если для этого параметра установлено значение true, обратные вызовы обновления будут выполняться всегда, даже если нет никаких изменений (включая временные метки).</target>
        </trans-unit>
        <trans-unit id="f4c34aee39d66ab90c64248849a5de5e0e9b6757" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:force_ssl&lt;/code&gt; - ensures no data is ever sent via HTTP, always redirecting to HTTPS. It expects a list of options which are forwarded to &lt;a href=&quot;../plug/plug.ssl&quot;&gt;&lt;code&gt;Plug.SSL&lt;/code&gt;&lt;/a&gt;. By default it sets the &quot;strict-transport-security&quot; header in HTTPS requests, forcing browsers to always use HTTPS. If an unsafe request (HTTP) is sent, it redirects to the HTTPS version using the &lt;code&gt;:host&lt;/code&gt; specified in the &lt;code&gt;:url&lt;/code&gt; configuration. To dynamically redirect to the &lt;code&gt;host&lt;/code&gt; of the current request, set &lt;code&gt;:host&lt;/code&gt; in the &lt;code&gt;:force_ssl&lt;/code&gt; configuration to &lt;code&gt;nil&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04d7f8d3ab1b0a585663fa80bd82e9b04184535e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:force_ssl&lt;/code&gt; - ensures no data is ever sent via http, always redirecting to https. It expects a list of options which are forwarded to &lt;a href=&quot;../plug/1.5.1/plug.ssl&quot;&gt;&lt;code&gt;Plug.SSL&lt;/code&gt;&lt;/a&gt;. By defalts it sets the &amp;ldquo;strict-transport-security&amp;rdquo; header in https requests, forcing browsers to always use https. If an unsafe request (http) is sent, it redirects to the https version using the &lt;code&gt;:host&lt;/code&gt; specified in the &lt;code&gt;:url&lt;/code&gt; configuration. To dynamically redirect to the &lt;code&gt;host&lt;/code&gt; of the current request, &lt;code&gt;:host&lt;/code&gt; must be set &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:force_ssl&lt;/code&gt; - гарантирует, что никакие данные никогда не будут отправлены через http, всегда перенаправляя на https. Он ожидает список параметров, которые перенаправляются в &lt;a href=&quot;../plug/1.5.1/plug.ssl&quot;&gt; &lt;code&gt;Plug.SSL&lt;/code&gt; &lt;/a&gt; . По умолчанию он устанавливает заголовок &amp;laquo;strict-transport-security&amp;raquo; в запросах https, заставляя браузеры всегда использовать https. Если отправляется небезопасный запрос (http), он перенаправляется на версию https, используя &lt;code&gt;:host&lt;/code&gt; , указанный в конфигурации &lt;code&gt;:url&lt;/code&gt; . Для динамического перенаправления на &lt;code&gt;host&lt;/code&gt; текущего запроса &lt;code&gt;:host&lt;/code&gt; должно быть установлено в &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="31280db305afec867ad537946348bb7e133a103f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:force_update_on_change&lt;/code&gt; - force the parent record to be updated in the repository if there is a change, defaults to &lt;code&gt;true&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="581dd70c00d6c9c8d8721affc01a357a2bdacdb9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:force_update_on_change&lt;/code&gt; - force the parent record to be updated in the repository if there is a change, defaults to true</source>
          <target state="translated">&lt;code&gt;:force_update_on_change&lt;/code&gt; - принудительно обновить родительскую запись в репозитории, если есть изменение, по умолчанию true</target>
        </trans-unit>
        <trans-unit id="4c9eded938f6e05de830e507209cfe12b753055c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:foreign_key&lt;/code&gt; - Sets the foreign key field name, defaults to the name of the association suffixed by &lt;code&gt;_id&lt;/code&gt;. For example, &lt;code&gt;belongs_to :company&lt;/code&gt; will define foreign key of &lt;code&gt;:company_id&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:foreign_key&lt;/code&gt; - Устанавливает имя поля внешнего ключа, по умолчанию имя ассоциации с суффиксом &lt;code&gt;_id&lt;/code&gt; . Например, &lt;code&gt;belongs_to :company&lt;/code&gt; определит внешний ключ &lt;code&gt;:company_id&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f42280514b2a6e3747c17c9f4cffe00fca17a091" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:foreign_key&lt;/code&gt; - Sets the foreign key field name, defaults to the name of the association suffixed by &lt;code&gt;_id&lt;/code&gt;. For example, &lt;code&gt;belongs_to :company&lt;/code&gt; will define foreign key of &lt;code&gt;:company_id&lt;/code&gt;. The associated &lt;code&gt;has_one&lt;/code&gt; or &lt;code&gt;has_many&lt;/code&gt; field in the other schema should also have its &lt;code&gt;:foreign_key&lt;/code&gt; option set with the same value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fe17f256dcc013bfcdca0471c50c1b7b3333a67" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:foreign_key&lt;/code&gt; - Sets the foreign key, this should map to a field on the other schema, defaults to the underscored name of the current module suffixed by &lt;code&gt;_id&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:foreign_key&lt;/code&gt; - Устанавливает внешний ключ, он должен отображаться в поле в другой схеме, по умолчанию - подчеркнутое имя текущего модуля с суффиксом &lt;code&gt;_id&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a8bc43387d4a3ac7248221e32c60c47170e2ecfe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:foreign_key&lt;/code&gt; - Sets the foreign key, this should map to a field on the other schema, defaults to the underscored name of the current schema suffixed by &lt;code&gt;_id&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:foreign_key&lt;/code&gt; - Устанавливает внешний ключ, он должен соответствовать полю в другой схеме, по умолчанию - подчеркнутое имя текущей схемы с суффиксом &lt;code&gt;_id&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f6b98662d8d2d9db36717289976159a1d74a44aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:found&lt;/code&gt; - 302</source>
          <target state="translated">&lt;code&gt;:found&lt;/code&gt; - 302</target>
        </trans-unit>
        <trans-unit id="7a789edeea5691fd5d6858519b5a7c56918cae10" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:from&lt;/code&gt; - the file system path to read static assets from. It can be either: a string containing a file system path, an atom representing the application name (where assets will be served from &lt;code&gt;priv/static&lt;/code&gt;), or a tuple containing the application name and the directory to serve assets from (besides &lt;code&gt;priv/static&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;:from&lt;/code&gt; - путь к файловой системе для чтения статических ресурсов. Это может быть либо: строка, содержащая путь к файловой системе, атом, представляющий имя приложения (где ресурсы будут обслуживаться из &lt;code&gt;priv/static&lt;/code&gt; ), либо кортеж, содержащий имя приложения и каталог, из которого будут обслуживаться ресурсы (кроме &lt;code&gt;priv/static&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="f4d962e53b2a14e94d9a3a2f7475182172d900f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:gateway_timeout&lt;/code&gt; - 504</source>
          <target state="translated">&lt;code&gt;:gateway_timeout&lt;/code&gt; - 504</target>
        </trans-unit>
        <trans-unit id="d23a8dd45e811f15e9621a0b2a24fd24f106b164" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:gone&lt;/code&gt; - 410</source>
          <target state="translated">&lt;code&gt;:gone&lt;/code&gt; - 410</target>
        </trans-unit>
        <trans-unit id="d6a8e03440aea46f1f53f7d75f7ac4b13275a740" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:gzip&lt;/code&gt; - given a request for &lt;a href=&quot;file&quot;&gt;&lt;code&gt;FILE&lt;/code&gt;&lt;/a&gt;, serves &lt;code&gt;FILE.gz&lt;/code&gt; if it exists in the static directory and if the &lt;code&gt;accept-encoding&lt;/code&gt; header is set to allow gzipped content (defaults to &lt;code&gt;false&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69e43f27102828e5887d410a80b5c7adbfa72f8e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:gzip&lt;/code&gt; - given a request for &lt;code&gt;FILE&lt;/code&gt;, serves &lt;code&gt;FILE.gz&lt;/code&gt; if it exists in the static directory and if the &lt;code&gt;accept-encoding&lt;/code&gt; header is set to allow gzipped content (defaults to &lt;code&gt;false&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;:gzip&lt;/code&gt; - при запросе на &lt;code&gt;FILE&lt;/code&gt; обслуживает &lt;code&gt;FILE.gz&lt;/code&gt; , если он существует в статическом каталоге и если заголовок &lt;code&gt;accept-encoding&lt;/code&gt; настроен на разрешение gzip-содержимого (по умолчанию &lt;code&gt;false&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="c455dc2b272f26736d404afd01feee1bafd0f5ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:handler&lt;/code&gt; - The socket module where this socket originated, for example: &lt;code&gt;MyAppWeb.UserSocket&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96e9337daaee966974cd915086480935a93eff97" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:headers&lt;/code&gt; - containing the same &lt;code&gt;:length&lt;/code&gt;, &lt;code&gt;:read_length&lt;/code&gt; and &lt;code&gt;:read_timeout&lt;/code&gt; options which are used explicitly for parsing multipart headers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a59ef0939470745ce6f32c7e5b39a15208d2fd09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:headers&lt;/code&gt; - other headers to be set when serving static assets.</source>
          <target state="translated">&lt;code&gt;:headers&lt;/code&gt; - другие заголовки, которые будут установлены при обслуживании статических ресурсов.</target>
        </trans-unit>
        <trans-unit id="6c79f7988a03a2540b76ec99712d8d8685380d2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:headers&lt;/code&gt; - other headers to be set when serving static assets. Specify either an enum of key-value pairs or a &lt;code&gt;{module, function, args}&lt;/code&gt; to return an enum. The &lt;code&gt;conn&lt;/code&gt; will be passed to the function, as well as the &lt;code&gt;args&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afeef450ff1085b9135289f336296023f2de0509" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:hibernate_after&lt;/code&gt; (optional) - the idle time in milliseconds allowed in the LiveView before compressing its own memory and state. Defaults to 15000ms (15 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f71ed5593e477cc3e3da7c9babbf06bc7f19380" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:hidden&lt;/code&gt; - a keyword list of fields that are required for submitting the form behind the scenes as hidden inputs</source>
          <target state="translated">&lt;code&gt;:hidden&lt;/code&gt; - список ключевых слов полей, которые необходимы для отправки формы за кулисами в качестве скрытых входов</target>
        </trans-unit>
        <trans-unit id="2a4e39cf9c831bad9ad361ee62f282afae6739e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:hidden_input&lt;/code&gt; - controls if this function will generate a hidden input to submit the unchecked value or not. Defaults to &quot;true&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12ff9684a2dcd9598f73db94264e2e5c0de0c997" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:hints&lt;/code&gt; - a string or a list of strings to be used as database hints</source>
          <target state="translated">&lt;code&gt;:hints&lt;/code&gt; - строка или список строк, которые будут использоваться в качестве подсказок к базе данных</target>
        </trans-unit>
        <trans-unit id="6c4419afd12ae47ba2c9a2553a0190ce8aa4d5ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:host&lt;/code&gt; - a new host to redirect to if the request&amp;rsquo;s scheme is &lt;code&gt;http&lt;/code&gt;, defaults to &lt;code&gt;conn.host&lt;/code&gt;. It may be set to a binary or a tuple &lt;code&gt;{module, function, args}&lt;/code&gt; that will be invoked on demand</source>
          <target state="translated">&lt;code&gt;:host&lt;/code&gt; - новый хост для перенаправления, если схема запроса &lt;code&gt;http&lt;/code&gt; , по умолчанию &lt;code&gt;conn.host&lt;/code&gt; . Он может быть двоичным или кортежем &lt;code&gt;{module, function, args}&lt;/code&gt; который будет вызываться по запросу.</target>
        </trans-unit>
        <trans-unit id="4fc94ad30f4010c4f83d512833862c5f056c5872" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:host&lt;/code&gt; - a new host to redirect to if the request's scheme is &lt;code&gt;http&lt;/code&gt;, defaults to &lt;code&gt;conn.host&lt;/code&gt;. It may be set to a binary or a tuple &lt;code&gt;{module, function, args}&lt;/code&gt; that will be invoked on demand</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e724eb292aa1526365cdd8694b2df99afdc84b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:host&lt;/code&gt; - a string containing the host scope, or prefix host scope, ie &lt;code&gt;&quot;foo.bar.com&quot;&lt;/code&gt;, &lt;code&gt;&quot;foo.&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:host&lt;/code&gt; - строка, содержащая область хоста или префикс области хоста, например &lt;code&gt;&quot;foo.bar.com&quot;&lt;/code&gt; , &lt;code&gt;&quot;foo.&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7f6b0c211c6f6d874a0235f5657941bdcf021411" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:host&lt;/code&gt; - a string representing the host or subdomain, exactly like in &lt;a href=&quot;#match/3&quot;&gt;&lt;code&gt;match/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;:host&lt;/code&gt; - строка, представляющая хост или субдомен, как в &lt;a href=&quot;#match/3&quot;&gt; &lt;code&gt;match/3&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4a22e8b569148faf1dd5a58cbaa2ddc8414573e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:host&lt;/code&gt; - the host which the route should match. Defaults to &lt;code&gt;nil&lt;/code&gt;, meaning no host match, but can be a string like &quot;example.com&quot; or a string ending with &quot;.&quot;, like &quot;subdomain.&quot; for a subdomain match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e90a4735630d648cb5598b8315b3af2298387f35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:host&lt;/code&gt; - the host which the route should match. Defaults to &lt;code&gt;nil&lt;/code&gt;, meaning no host match, but can be a string like &amp;ldquo;example.com&amp;rdquo; or a string ending with &amp;ldquo;.&amp;rdquo;, like &amp;ldquo;subdomain.&amp;rdquo; for a subdomain match.</source>
          <target state="translated">&lt;code&gt;:host&lt;/code&gt; - хост, которому должен соответствовать маршрут. По умолчанию - &lt;code&gt;nil&lt;/code&gt; , что означает отсутствие совпадения с хостом, но может быть строкой, такой как &amp;laquo;example.com&amp;raquo;, или строкой, заканчивающейся на &amp;laquo;.&amp;raquo;, Например &amp;laquo;subdomain&amp;raquo;. для совпадения поддомена.</target>
        </trans-unit>
        <trans-unit id="bbd44f61b37eacdd08ab993f964ae97c0ff71740" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:hsts&lt;/code&gt; - a boolean on enabling HSTS or not, defaults to &lt;code&gt;true&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:hsts&lt;/code&gt; - логическое значение, включающее HSTS или нет, по умолчанию &lt;code&gt;true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c4ea0dbbe0a23975c56a8e9459872253c08ea80a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:http&lt;/code&gt; - the configuration for the HTTP server. Currently uses Cowboy and accepts all options as defined by &lt;a href=&quot;../plug/plug.adapters.cowboy&quot;&gt;&lt;code&gt;Plug.Adapters.Cowboy&lt;/code&gt;&lt;/a&gt;. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:http&lt;/code&gt; - конфигурация HTTP-сервера. В настоящее время использует Cowboy и принимает все параметры, определенные &lt;a href=&quot;../plug/plug.adapters.cowboy&quot;&gt; &lt;code&gt;Plug.Adapters.Cowboy&lt;/code&gt; &lt;/a&gt; . По умолчанию - &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bb9b18358b10fa2a95db13a96db032c46307e569" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:http&lt;/code&gt; - the configuration for the HTTP server. It accepts all options as defined by &lt;a href=&quot;https://hexdocs.pm/plug_cowboy/&quot;&gt;&lt;code&gt;Plug.Cowboy&lt;/code&gt;&lt;/a&gt;. Defaults to &lt;code&gt;false&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59c906e35e75a8fef18062e2c299a94c026b4cba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:http_header&lt;/code&gt; - The name of the HTTP &lt;em&gt;request&lt;/em&gt; header to check for existing request ids. This is also the HTTP &lt;em&gt;response&lt;/em&gt; header that will be set with the request id. Default value is &quot;x-request-id&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c62f9ca6750caecac4e2c3d887cf1ac142c8e4c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:http_header&lt;/code&gt; - The name of the HTTP &lt;em&gt;request&lt;/em&gt; header to check for existing request ids. This is also the HTTP &lt;em&gt;response&lt;/em&gt; header that will be set with the request id. Default value is &amp;ldquo;x-request-id&amp;rdquo;</source>
          <target state="translated">&lt;code&gt;:http_header&lt;/code&gt; - Имя заголовка HTTP- &lt;em&gt;запроса&lt;/em&gt; для проверки существующих идентификаторов запросов. Это также заголовок &lt;em&gt;ответа&lt;/em&gt; HTTP, который будет установлен с идентификатором запроса. Значение по умолчанию - &amp;laquo;x-request-id&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="219f710b547b947b045918113878baa1085ae77a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:http_only&lt;/code&gt; - see &lt;a href=&quot;plug.conn#put_resp_cookie/4&quot;&gt;&lt;code&gt;Plug.Conn.put_resp_cookie/4&lt;/code&gt;&lt;/a&gt;;</source>
          <target state="translated">&lt;code&gt;:http_only&lt;/code&gt; - см. &lt;a href=&quot;plug.conn#put_resp_cookie/4&quot;&gt; &lt;code&gt;Plug.Conn.put_resp_cookie/4&lt;/code&gt; &lt;/a&gt; ;</target>
        </trans-unit>
        <trans-unit id="11e52c1cf4aa378ab5ced5cdab88b8e83d765761" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:http_only&lt;/code&gt; - when &lt;code&gt;false&lt;/code&gt;, the cookie is accessible beyond HTTP</source>
          <target state="translated">&lt;code&gt;:http_only&lt;/code&gt; - при &lt;code&gt;false&lt;/code&gt; cookie доступен за пределами HTTP</target>
        </trans-unit>
        <trans-unit id="6583cef304db30ac4c37451a3beba4d7ea86f937" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:http_only&lt;/code&gt; - when false, the cookie is accessible beyond http</source>
          <target state="translated">&lt;code&gt;:http_only&lt;/code&gt; - при false cookie доступен за пределами http</target>
        </trans-unit>
        <trans-unit id="d53fc7528a7a4717b08d3556124759a0a979b0d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:http_version_not_supported&lt;/code&gt; - 505</source>
          <target state="translated">&lt;code&gt;:http_version_not_supported&lt;/code&gt; - 505</target>
        </trans-unit>
        <trans-unit id="f487344245652c5e19f6af5b0419acee00502af5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:https&lt;/code&gt; - the configuration for the HTTPS server. Currently uses Cowboy and accepts all options as defined by &lt;a href=&quot;../plug/plug.adapters.cowboy&quot;&gt;&lt;code&gt;Plug.Adapters.Cowboy&lt;/code&gt;&lt;/a&gt;. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:https&lt;/code&gt; - конфигурация для HTTPS-сервера. В настоящее время использует Cowboy и принимает все параметры, определенные &lt;a href=&quot;../plug/plug.adapters.cowboy&quot;&gt; &lt;code&gt;Plug.Adapters.Cowboy&lt;/code&gt; &lt;/a&gt; . По умолчанию - &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7d03fd8f8d13d78edc21c1351decc35c6d9e9c87" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:https&lt;/code&gt; - the configuration for the HTTPS server. It accepts all options as defined by &lt;a href=&quot;https://hexdocs.pm/plug_cowboy/&quot;&gt;&lt;code&gt;Plug.Cowboy&lt;/code&gt;&lt;/a&gt;. Defaults to &lt;code&gt;false&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d51f12d9dec0cdef559c2fa23dbabad41ef91239" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:id&lt;/code&gt; - The string id of the socket</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb6dce478ef70aba8a70c3d66d5ecd6f0f4f1fb9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:id&lt;/code&gt; - both the DOM ID and the ID to uniquely identify a LiveView. An &lt;code&gt;:id&lt;/code&gt; is automatically generated when rendering root LiveViews but it is a required option when rendering a child LiveView.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47e2f985d0504c6a2d54292bbd698d2c80652e49" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:id&lt;/code&gt; - the id to be used in the form, defaults to the concatenation of the given &lt;code&gt;field&lt;/code&gt; to the parent form id</source>
          <target state="translated">&lt;code&gt;:id&lt;/code&gt; - идентификатор, который будет использоваться в форме, по умолчанию это соединение данного &lt;code&gt;field&lt;/code&gt; с идентификатором родительской формы</target>
        </trans-unit>
        <trans-unit id="31f5f9b1edb9a9a54d1ae3f466e2b62bba5f062b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:id&lt;/code&gt; - the id to be used when generating input fields</source>
          <target state="translated">&lt;code&gt;:id&lt;/code&gt; - идентификатор, который будет использоваться при генерации полей ввода</target>
        </trans-unit>
        <trans-unit id="5e364ab6d035fa64d3a02e9c44f103d7d1534cbb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:idle_time&lt;/code&gt; - the time the connection spent waiting before being checked out for the query</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d983a5fff75fea40f73093e7da0f4b3cd4a4ec40" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:ignore&lt;/code&gt; - ignores all changes made to the session in this request cycle</source>
          <target state="translated">&lt;code&gt;:ignore&lt;/code&gt; - игнорирует все изменения, внесенные в сеанс в этом цикле запроса</target>
        </trans-unit>
        <trans-unit id="f44ab2807a785f850fd43467e1f562825bd812b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:im_a_teapot&lt;/code&gt; - 418</source>
          <target state="translated">&lt;code&gt;:im_a_teapot&lt;/code&gt; - 418</target>
        </trans-unit>
        <trans-unit id="00cdf3ddc3b1be533460212ccf57590eb4d7ffe9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:im_used&lt;/code&gt; - 226</source>
          <target state="translated">&lt;code&gt;:im_used&lt;/code&gt; - 226</target>
        </trans-unit>
        <trans-unit id="8a1f4127e72ccb36b05ea1675807a728bb7e325b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:impl&lt;/code&gt; - the module with the form data protocol implementation. This is used to avoid multiple protocol dispatches.</source>
          <target state="translated">&lt;code&gt;:impl&lt;/code&gt; - модуль с реализацией протокола передачи данных формы. Это используется, чтобы избежать отправки по нескольким протоколам.</target>
        </trans-unit>
        <trans-unit id="60162fb9e4944bda8789b0f9b58a1c2d1c726578" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:in_parallel&lt;/code&gt; - If the preloads must be done in parallel. It can only be performed when we have more than one preload and the repository is not in a transaction. Defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:in_parallel&lt;/code&gt; - Если предварительные нагрузки должны выполняться параллельно. Это может быть выполнено только тогда, когда у нас есть более одной предварительной загрузки, а репозиторий не находится в транзакции. По умолчанию &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fbb2bc151849c550be1d729164b42e8f135d7dac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:include_unnamed_parts_at&lt;/code&gt; - string specifying a body parameter that can hold a lists of body parts that didn't have a 'Content-Disposition' header. For instance, &lt;code&gt;include_unnamed_parts_at: &quot;_parts&quot;&lt;/code&gt; would result in a body parameter &lt;code&gt;&quot;_parts&quot;&lt;/code&gt;, containing a list of parts, each with &lt;code&gt;:body&lt;/code&gt; and &lt;code&gt;:headers&lt;/code&gt; fields, like &lt;code&gt;[%{body: &quot;{}&quot;, headers: [{&quot;content-type&quot;, &quot;application/json&quot;}]}]&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aa55f62231251bd979a6ab6ce35fb113f30cc3f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:init_mode&lt;/code&gt; - the environment to initialize the plug&amp;rsquo;s options, one of &lt;code&gt;:compile&lt;/code&gt; or &lt;code&gt;:runtime&lt;/code&gt;. Defaults &lt;code&gt;:compile&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:init_mode&lt;/code&gt; - среда для инициализации параметров плагина, одна из &lt;code&gt;:compile&lt;/code&gt; или &lt;code&gt;:runtime&lt;/code&gt; . По умолчанию &lt;code&gt;:compile&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="339d1a1d399249dc37ceb4bcd48b3dc5ecdf2aa4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:init_mode&lt;/code&gt; - the environment to initialize the plug's options, one of &lt;code&gt;:compile&lt;/code&gt; or &lt;code&gt;:runtime&lt;/code&gt;. Defaults &lt;code&gt;:compile&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="576dddad628b150a7f007b95734e82ac5e88b5fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:init_opts&lt;/code&gt; - the options for the target Plug given by &lt;code&gt;:to&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:init_opts&lt;/code&gt; - параметры для целевого Plug, предоставленные &lt;code&gt;:to&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1897e736d8de40fff4625866bf50d64bf9da3bbd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:init_opts&lt;/code&gt; - the options for the target Plug.</source>
          <target state="translated">&lt;code&gt;:init_opts&lt;/code&gt; - параметры для целевого Plug.</target>
        </trans-unit>
        <trans-unit id="740b78642635f1986b7036c8d2aa5df2f0e2c346" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:insert_brs&lt;/code&gt; - if &lt;code&gt;true&lt;/code&gt; insert &lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt; for single line breaks (default: &lt;code&gt;true&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;:insert_brs&lt;/code&gt; - если &lt;code&gt;true&lt;/code&gt; , вставка &lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt; для одинарных разрывов строки (по умолчанию: &lt;code&gt;true&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="a39a9ddc1667fe8c981cb642f5814768ca645bf8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:inserted_at&lt;/code&gt; - the Ecto schema name of the field for insertion times or &lt;code&gt;false&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="304b35af63b5df84b8575c53e884eb03a6c5799b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:inserted_at&lt;/code&gt; - the name of the column for insertion times or &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:inserted_at&lt;/code&gt; - имя столбца для времени вставки или &lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9051581cc7223ef5270b42ce4be179eb42daa829" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:inserted_at_source&lt;/code&gt; - the name of the database column for insertion times or &lt;code&gt;false&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="535230e39a27ed349b45cacf3a9255c2603e2e64" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:instrumenters&lt;/code&gt; - a list of instrumenter modules whose callbacks will be fired on instrumentation events. Read more on instrumentation in the &amp;ldquo;Instrumentation&amp;rdquo; section below.</source>
          <target state="translated">&lt;code&gt;:instrumenters&lt;/code&gt; - список модулей инструментария, обратные вызовы которых будут запускаться при событиях инструментария. Подробнее о контрольно-измерительных приборах см. Ниже в разделе &amp;laquo;Приборы&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="c48be01389d4730c75af6bae9688521aacacb4c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:insufficient_storage&lt;/code&gt; - 507</source>
          <target state="translated">&lt;code&gt;:insufficient_storage&lt;/code&gt; - 507</target>
        </trans-unit>
        <trans-unit id="692c9b0aec61558c2bbe2ed616acf045964e6fe3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:internal_server_error&lt;/code&gt; - 500</source>
          <target state="translated">&lt;code&gt;:internal_server_error&lt;/code&gt; - 500</target>
        </trans-unit>
        <trans-unit id="4207c4cd7ddf8c23a55ee700de2efb2c97145f7e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:invalid_message&lt;/code&gt; - the message on failure, defaults to &quot;is invalid&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="746b225dcd733cc17ef7503fb7d1e41abd1f5c19" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:invalid_message&lt;/code&gt; - the message on failure, defaults to &amp;ldquo;is invalid&amp;rdquo;</source>
          <target state="translated">&lt;code&gt;:invalid_message&lt;/code&gt; - сообщение об ошибке, по умолчанию &amp;laquo;недействительно&amp;raquo;</target>
        </trans-unit>
        <trans-unit id="44f14a2b3490e519f9b8b3054f578e0e54eac723" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:is&lt;/code&gt; - the length must be exactly this value</source>
          <target state="translated">&lt;code&gt;:is&lt;/code&gt; - длина должна быть именно этим значением</target>
        </trans-unit>
        <trans-unit id="eb4a21dc440faa6899b999453f47d4eca7ff9a0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:iterations&lt;/code&gt; - defaults to 1000 (increase to at least 2^16 if used for passwords);</source>
          <target state="translated">&lt;code&gt;:iterations&lt;/code&gt; - по умолчанию 1000 (увеличьте как минимум до 2 ^ 16, если используется для паролей);</target>
        </trans-unit>
        <trans-unit id="6ca7e1f956443c825ace0d3da502acda93b71527" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:join_defaults&lt;/code&gt; - The same as &lt;code&gt;:defaults&lt;/code&gt; but it applies to the join schema instead. This option will raise if it is given and the &lt;code&gt;:join_through&lt;/code&gt; value is not a schema.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1936e36ea9789bedc62fbe5ef2b1f68192e352ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:join_keys&lt;/code&gt; - Specifies how the schemas are associated. It expects a keyword list with two entries, the first being how the join table should reach the current schema and the second how the join table should reach the associated schema. In the example above, it defaults to: &lt;code&gt;[post_id: :id, tag_id: :id]&lt;/code&gt;. The keys are inflected from the schema names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c64808e917c3f22a334e58d479a2ca7910bffc34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:join_keys&lt;/code&gt; - specifies how the schemas are associated. It expects a keyword list with two entries, the first being how the join table should reach the current schema and the second how the join table should reach the associated schema. In the example above, it defaults to: &lt;code&gt;[post_id: :id, tag_id: :id]&lt;/code&gt;. The keys are inflected from the schema names.</source>
          <target state="translated">&lt;code&gt;:join_keys&lt;/code&gt; - указывает, как схемы связаны. Он ожидает список ключевых слов с двумя записями, первая из которых - это то, как объединяемая таблица должна достичь текущей схемы, а вторая, как объединяемая таблица должна достичь связанной схемы. В приведенном выше примере это значение по умолчанию: &lt;code&gt;[post_id: :id, tag_id: :id]&lt;/code&gt; . Ключи изменяются от имен схем.</target>
        </trans-unit>
        <trans-unit id="587a0894d6e1a2ef6f67e892f7fa09a5c7c3ed20" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:join_ref&lt;/code&gt; - The ref sent by the client when joining</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="718488ba646eb233bab667cd9311d6442477bd8e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:join_ref&lt;/code&gt; - The unique string ref when joining</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1a11e89ac7138a66a8a00c93b8d2f4defdb73a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:join_through&lt;/code&gt; - Specifies the source of the associated data. It may be a string, like &quot;posts_tags&quot;, representing the underlying storage table or an atom, like &lt;code&gt;MyApp.PostTag&lt;/code&gt;, representing a schema. This option is required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63acc6983f1fe10c9c962d425644baf91a0ee72d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:join_through&lt;/code&gt; - specifies the source of the associated data. It may be a string, like &amp;ldquo;posts_tags&amp;rdquo;, representing the underlying storage table or an atom, like &lt;code&gt;MyApp.PostTag&lt;/code&gt;, representing a schema. This option is required.</source>
          <target state="translated">&lt;code&gt;:join_through&lt;/code&gt; - указывает источник связанных данных. Это может быть строка, например &amp;laquo;posts_tags&amp;raquo;, представляющая базовую таблицу хранения, или атом, например &lt;code&gt;MyApp.PostTag&lt;/code&gt; , представляющий схему. Эта опция обязательна.</target>
        </trans-unit>
        <trans-unit id="46dd9fc3d01cd9aab70d5afde06476e0fa309c38" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:join_through_where&lt;/code&gt; - A filter for the join through association. See &amp;ldquo;Filtering associations&amp;rdquo; in &lt;a href=&quot;#has_many/3&quot;&gt;&lt;code&gt;has_many/3&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;:join_through_where&lt;/code&gt; - фильтр для объединения через ассоциацию. См. &amp;laquo;Фильтрация ассоциаций&amp;raquo; в &lt;a href=&quot;#has_many/3&quot;&gt; &lt;code&gt;has_many/3&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9d9e1475c55cb082ea5d00b4352c4c113ed39232" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:join_where&lt;/code&gt; - A filter for the join table. See &quot;Filtering associations&quot; in &lt;a href=&quot;#has_many/3&quot;&gt;&lt;code&gt;has_many/3&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74d4ea22135f6015ccd09545e1ce5c5c01a89222" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:joined&lt;/code&gt; - If the socket has effectively joined the channel</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cb9d44ac19f3a35af2ef28a4ee0968c986e6249" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:key&lt;/code&gt; - session cookie key (required);</source>
          <target state="translated">&lt;code&gt;:key&lt;/code&gt; - ключ cookie сеанса (обязательно);</target>
        </trans-unit>
        <trans-unit id="b78eb9e0a6489dc65b01385a472c945647a22b2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:key_digest&lt;/code&gt; - option passed to &lt;a href=&quot;../plug/1.5.1/plug.crypto.keygenerator&quot;&gt;&lt;code&gt;Plug.Crypto.KeyGenerator&lt;/code&gt;&lt;/a&gt; when generating the encryption and signing keys. Defaults to &lt;code&gt;:sha256&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:key_digest&lt;/code&gt; - опция, передаваемая &lt;a href=&quot;../plug/1.5.1/plug.crypto.keygenerator&quot;&gt; &lt;code&gt;Plug.Crypto.KeyGenerator&lt;/code&gt; &lt;/a&gt; при генерации ключей шифрования и подписи. По умолчанию &lt;code&gt;:sha256&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e66b9c25b007d69f413082df9178e0515c9c5b66" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:key_digest&lt;/code&gt; - option passed to &lt;a href=&quot;https://hexdocs.pm/plug_crypto/1.0.0/Plug.Crypto.KeyGenerator.html&quot;&gt;&lt;code&gt;Plug.Crypto.KeyGenerator&lt;/code&gt;&lt;/a&gt; when generating the encryption and signing keys. Defaults to &lt;code&gt;:sha256&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;:key_digest&lt;/code&gt; - опция, передаваемая &lt;a href=&quot;https://hexdocs.pm/plug_crypto/1.0.0/Plug.Crypto.KeyGenerator.html&quot;&gt; &lt;code&gt;Plug.Crypto.KeyGenerator&lt;/code&gt; &lt;/a&gt; при генерации ключей шифрования и подписи. По умолчанию &lt;code&gt;:sha256&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="f8e254cf27fd9cc98d90837cd8ac873d8e7ec32d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:key_digest&lt;/code&gt; - option passed to &lt;a href=&quot;https://hexdocs.pm/plug_crypto/Plug.Crypto.KeyGenerator.html&quot;&gt;&lt;code&gt;Plug.Crypto.KeyGenerator&lt;/code&gt;&lt;/a&gt; when generating the encryption and signing keys. Defaults to &lt;code&gt;:sha256&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d73e1c2d66153668ca13dbb030bb7a096f3a9a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:key_digest&lt;/code&gt; - option passed to &lt;a href=&quot;https://hexdocs.pm/plug_crypto/Plug.Crypto.KeyGenerator.html&quot;&gt;&lt;code&gt;Plug.Crypto.KeyGenerator&lt;/code&gt;&lt;/a&gt; when generating the encryption and signing keys. Defaults to &lt;code&gt;:sha256&lt;/code&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="233d842d4be6ab8ff37f55b39a0fc2a2bcf69b40" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:key_iterations&lt;/code&gt; - option passed to &lt;a href=&quot;../plug/1.5.1/plug.crypto.keygenerator&quot;&gt;&lt;code&gt;Plug.Crypto.KeyGenerator&lt;/code&gt;&lt;/a&gt; when generating the encryption and signing keys. Defaults to 1000</source>
          <target state="translated">&lt;code&gt;:key_iterations&lt;/code&gt; - параметр, передаваемый в &lt;a href=&quot;../plug/1.5.1/plug.crypto.keygenerator&quot;&gt; &lt;code&gt;Plug.Crypto.KeyGenerator&lt;/code&gt; &lt;/a&gt; при генерации ключей шифрования и подписи. По умолчанию 1000</target>
        </trans-unit>
        <trans-unit id="b0a092fbb75d48886c315cd680248e6a2dd736a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:key_iterations&lt;/code&gt; - option passed to &lt;a href=&quot;https://hexdocs.pm/plug_crypto/1.0.0/Plug.Crypto.KeyGenerator.html&quot;&gt;&lt;code&gt;Plug.Crypto.KeyGenerator&lt;/code&gt;&lt;/a&gt; when generating the encryption and signing keys. Defaults to 1000;</source>
          <target state="translated">&lt;code&gt;:key_iterations&lt;/code&gt; - параметр, передаваемый в &lt;a href=&quot;https://hexdocs.pm/plug_crypto/1.0.0/Plug.Crypto.KeyGenerator.html&quot;&gt; &lt;code&gt;Plug.Crypto.KeyGenerator&lt;/code&gt; &lt;/a&gt; при генерации ключей шифрования и подписи. По умолчанию 1000;</target>
        </trans-unit>
        <trans-unit id="7a3cfa4c087c8848d24738213f56b1a106bc0cf7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:key_iterations&lt;/code&gt; - option passed to &lt;a href=&quot;https://hexdocs.pm/plug_crypto/Plug.Crypto.KeyGenerator.html&quot;&gt;&lt;code&gt;Plug.Crypto.KeyGenerator&lt;/code&gt;&lt;/a&gt; when generating the encryption and signing keys. Defaults to 1000</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5f2922abacc94bffc4c5af9f330cd7a0beb8c52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:key_iterations&lt;/code&gt; - option passed to &lt;a href=&quot;https://hexdocs.pm/plug_crypto/Plug.Crypto.KeyGenerator.html&quot;&gt;&lt;code&gt;Plug.Crypto.KeyGenerator&lt;/code&gt;&lt;/a&gt; when generating the encryption and signing keys. Defaults to 1000;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7259f72a847e7662c64b29674802a2816583f37" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:key_length&lt;/code&gt; - option passed to &lt;a href=&quot;../plug/1.5.1/plug.crypto.keygenerator&quot;&gt;&lt;code&gt;Plug.Crypto.KeyGenerator&lt;/code&gt;&lt;/a&gt; when generating the encryption and signing keys. Defaults to 32</source>
          <target state="translated">&lt;code&gt;:key_length&lt;/code&gt; - опция, передаваемая &lt;a href=&quot;../plug/1.5.1/plug.crypto.keygenerator&quot;&gt; &lt;code&gt;Plug.Crypto.KeyGenerator&lt;/code&gt; &lt;/a&gt; при генерации ключей шифрования и подписи. По умолчанию 32</target>
        </trans-unit>
        <trans-unit id="d4f024f2271b5604293b4226324dc28e47d48fc3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:key_length&lt;/code&gt; - option passed to &lt;a href=&quot;https://hexdocs.pm/plug_crypto/1.0.0/Plug.Crypto.KeyGenerator.html&quot;&gt;&lt;code&gt;Plug.Crypto.KeyGenerator&lt;/code&gt;&lt;/a&gt; when generating the encryption and signing keys. Defaults to 32;</source>
          <target state="translated">&lt;code&gt;:key_length&lt;/code&gt; - опция, передаваемая &lt;a href=&quot;https://hexdocs.pm/plug_crypto/1.0.0/Plug.Crypto.KeyGenerator.html&quot;&gt; &lt;code&gt;Plug.Crypto.KeyGenerator&lt;/code&gt; &lt;/a&gt; при генерации ключей шифрования и подписи. По умолчанию 32;</target>
        </trans-unit>
        <trans-unit id="f9dcba920e28c26019b317794fa9e4b63384357f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:key_length&lt;/code&gt; - option passed to &lt;a href=&quot;https://hexdocs.pm/plug_crypto/Plug.Crypto.KeyGenerator.html&quot;&gt;&lt;code&gt;Plug.Crypto.KeyGenerator&lt;/code&gt;&lt;/a&gt; when generating the encryption and signing keys. Defaults to 32</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be48ceff74ac118c023179851934090d9a438ca0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:key_length&lt;/code&gt; - option passed to &lt;a href=&quot;https://hexdocs.pm/plug_crypto/Plug.Crypto.KeyGenerator.html&quot;&gt;&lt;code&gt;Plug.Crypto.KeyGenerator&lt;/code&gt;&lt;/a&gt; when generating the encryption and signing keys. Defaults to 32;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ab0dcc4c8b5c087f84171b39a850aa138217f59" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:layout&lt;/code&gt; - an optional tuple to specify the rendering layout for the LiveView. If set, this option will replace the current root layout.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de0d66ef0e76baa3a1e55f2db4669410f0a04166" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:layout&lt;/code&gt; - configures the layout the &lt;code&gt;LiveView&lt;/code&gt; will be rendered in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="873928f98c66e8757c94a9167b22e01ac5ea85e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:layout&lt;/code&gt; - tells Phoenix to wrap the rendered result in the given layout. See next section</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="242579869ae85a1420f0af573b4dae5a8f5d7589" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:layout&lt;/code&gt; - tells Phoenix to wrap the rendered result in the given layout. See next section.</source>
          <target state="translated">&lt;code&gt;:layout&lt;/code&gt; - сообщает Phoenix, что результат рендеринга нужно поместить в заданный макет. См. Следующий раздел.</target>
        </trans-unit>
        <trans-unit id="8a27035ca057ec1bf326ce6b71558cb3573102b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:layout&lt;/code&gt; - the optional layout to be used by the LiveView</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="071d0ae09c2dff8b8924f803ad1afe12258d6487" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:length&lt;/code&gt; - a length in octets for the derived key. Defaults to 32;</source>
          <target state="translated">&lt;code&gt;:length&lt;/code&gt; - длина производного ключа в октетах. По умолчанию 32;</target>
        </trans-unit>
        <trans-unit id="ef304c6a24471c8cef21c5f6812fec3bb951e9ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:length&lt;/code&gt; - sets the maximum number of bytes to read from the body for each chunk, defaults to 64_000 bytes</source>
          <target state="translated">&lt;code&gt;:length&lt;/code&gt; - устанавливает максимальное количество байтов для чтения из тела для каждого блока, по умолчанию 64_000 байт</target>
        </trans-unit>
        <trans-unit id="ee80e5499d5216569691f27046eef3ba258a3dae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:length&lt;/code&gt; - sets the maximum number of bytes to read from the body for each chunk, defaults to &lt;code&gt;64_000&lt;/code&gt; bytes</source>
          <target state="translated">&lt;code&gt;:length&lt;/code&gt; - устанавливает максимальное количество байтов для чтения из тела для каждого блока, по умолчанию &lt;code&gt;64_000&lt;/code&gt; байт</target>
        </trans-unit>
        <trans-unit id="b0b21a15f31936050bdc5b2f1f0cc6762b799998" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:length&lt;/code&gt; - sets the maximum number of bytes to read from the body on every call, defaults to 8_000_000 bytes</source>
          <target state="translated">&lt;code&gt;:length&lt;/code&gt; - устанавливает максимальное количество байтов для чтения из тела при каждом вызове, по умолчанию 8_000_000 байт</target>
        </trans-unit>
        <trans-unit id="e403ed4e88da8305206db67bb00e94197517a22f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:length&lt;/code&gt; - sets the maximum number of bytes to read from the body on every call, defaults to &lt;code&gt;8_000_000&lt;/code&gt; bytes</source>
          <target state="translated">&lt;code&gt;:length&lt;/code&gt; - устанавливает максимальное количество байтов для чтения из тела при каждом вызове, по умолчанию &lt;code&gt;8_000_000&lt;/code&gt; байт</target>
        </trans-unit>
        <trans-unit id="404bd6a8824a6040003562a5055af63c756b8df2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:length&lt;/code&gt; - sets the maximum number of bytes to read from the request, defaults to 1_000_000 bytes</source>
          <target state="translated">&lt;code&gt;:length&lt;/code&gt; - устанавливает максимальное количество байтов для чтения из запроса, по умолчанию 1_000_000 байт</target>
        </trans-unit>
        <trans-unit id="0f046188fd7bd61fb1bb17a2eed55732eb02b3f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:length&lt;/code&gt; - sets the maximum number of bytes to read from the request, defaults to 8_000_000 bytes</source>
          <target state="translated">&lt;code&gt;:length&lt;/code&gt; - устанавливает максимальное количество байтов для чтения из запроса, по умолчанию 8_000_000 байт</target>
        </trans-unit>
        <trans-unit id="fe8ad3f92d6f1e70147c5fdf3ec1d9a829583f60" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:length&lt;/code&gt; - the maximum query string length. Defaults to 1_000_000 bytes.</source>
          <target state="translated">&lt;code&gt;:length&lt;/code&gt; - максимальная длина строки запроса. По умолчанию 1_000_000 байт.</target>
        </trans-unit>
        <trans-unit id="c0377b19f39dd2e91dac5654b2de33f2d4c4db61" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:length&lt;/code&gt; - the maximum query string length. Defaults to &lt;code&gt;1_000_000&lt;/code&gt; bytes.</source>
          <target state="translated">&lt;code&gt;:length&lt;/code&gt; - максимальная длина строки запроса. По умолчанию &lt;code&gt;1_000_000&lt;/code&gt; байт.</target>
        </trans-unit>
        <trans-unit id="e10eae72a63d4758a5f53461b91929f150549c8c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:length&lt;/code&gt; - the total bytes to read. Defaults to &lt;code&gt;:all&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a919003260641e345778af4e19096538d704842" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:length_required&lt;/code&gt; - 411</source>
          <target state="translated">&lt;code&gt;:length_required&lt;/code&gt; - 411</target>
        </trans-unit>
        <trans-unit id="765b66719fafcf3db2f201446533f8c3e9d503df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:link&lt;/code&gt; - links the subscriber to the pubsub adapter</source>
          <target state="translated">&lt;code&gt;:link&lt;/code&gt; - связывает подписчика с адаптером pubsub</target>
        </trans-unit>
        <trans-unit id="5c78014a5ca8b136687b352dd14079bafdce5777" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:live_reload&lt;/code&gt; - configuration for the live reload option. Configuration requires a &lt;code&gt;:patterns&lt;/code&gt; option which should be a list of file patterns to watch. When these files change, it will trigger a reload. If you are using a tool like &lt;a href=&quot;http://pow.cx&quot;&gt;pow&lt;/a&gt; in development, you may need to set the &lt;code&gt;:url&lt;/code&gt; option appropriately.</source>
          <target state="translated">&lt;code&gt;:live_reload&lt;/code&gt; - конфигурация опции live reload. Для конфигурации требуется опция &lt;code&gt;:patterns&lt;/code&gt; , которая должна быть списком шаблонов файлов, которые нужно отслеживать. Когда эти файлы изменятся, произойдет перезагрузка. Если вы используете такой инструмент, как &lt;a href=&quot;http://pow.cx&quot;&gt;pow,&lt;/a&gt; в разработке, вам может потребоваться установить параметр &lt;code&gt;:url&lt;/code&gt; соответствующим образом.</target>
        </trans-unit>
        <trans-unit id="80fb595c82dc9c94e2d34ce84098ae792967b58e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:load_in_query&lt;/code&gt; - When false, the field will not be loaded when selecting the whole struct in a query, such as &lt;code&gt;from p in Post, select: p&lt;/code&gt;. Defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14a13f384ee74d4945898d3619b5f223173d8938" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:loaded&lt;/code&gt; - the struct was loaded from database and represents persisted data;</source>
          <target state="translated">&lt;code&gt;:loaded&lt;/code&gt; - структура была загружена из базы данных и представляет собой сохраненные данные;</target>
        </trans-unit>
        <trans-unit id="888eb2bc9342566be76b7d8f01ad23d38050165e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:locked&lt;/code&gt; - 423</source>
          <target state="translated">&lt;code&gt;:locked&lt;/code&gt; - 423</target>
        </trans-unit>
        <trans-unit id="6d544529686c9cc39a0d02572a0abb603c7ea212" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:log&lt;/code&gt; - Log level to use when the cookie cannot be decoded. Defaults to &lt;code&gt;:debug&lt;/code&gt;, can be set to false to disable it.</source>
          <target state="translated">&lt;code&gt;:log&lt;/code&gt; - Уровень журнала, используемый, когда файл cookie не может быть декодирован. По умолчанию &lt;code&gt;:debug&lt;/code&gt; , можно установить значение false, чтобы отключить его.</target>
        </trans-unit>
        <trans-unit id="dffbbb7cacadbb2e8887a828804cc1cdd2052ab0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:log&lt;/code&gt; - The log level at which this plug should log its request info. Default is &lt;code&gt;:info&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:log&lt;/code&gt; - Уровень журнала, на котором этот плагин должен регистрировать информацию о запросе. По умолчанию &lt;code&gt;:info&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5e5512660b08b56f66b3e6ebd5b9f8ab6de586ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:log&lt;/code&gt; - The log level at which this plug should log its request info. Default is &lt;code&gt;:info&lt;/code&gt;. Can be &lt;code&gt;false&lt;/code&gt; to disable logging.</source>
          <target state="translated">&lt;code&gt;:log&lt;/code&gt; - Уровень журнала, на котором этот плагин должен регистрировать информацию о запросе. По умолчанию &lt;code&gt;:info&lt;/code&gt; . Может иметь значение &lt;code&gt;false&lt;/code&gt; , чтобы отключить ведение журнала.</target>
        </trans-unit>
        <trans-unit id="e5acf2b2b83d65d4e225817222e462a1ba5ca5b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:log&lt;/code&gt; - When false, does not log the query</source>
          <target state="translated">&lt;code&gt;:log&lt;/code&gt; - Если false, запрос не регистрируется</target>
        </trans-unit>
        <trans-unit id="126920834022c269c61dd1635458823a6c10cd86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:log&lt;/code&gt; - the configured log level. For example &lt;code&gt;:debug&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9baa2cffb692bd8fcc7e844ab2a75a78af4df9a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:log&lt;/code&gt; - the default level to log socket actions. Defaults to &lt;code&gt;:info&lt;/code&gt;. May be set to &lt;code&gt;false&lt;/code&gt; to disable it</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bbbbd89ca1c5fd5e2cc5593c99b9ad8c5686a34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:log&lt;/code&gt; - the level to log the route dispatching under, may be set to false. Defaults to &lt;code&gt;:debug&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b6bfa90677c07ee16bdb2a109affaaa97273ca1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:log&lt;/code&gt; - the level to log. When false, disables controller logging</source>
          <target state="translated">&lt;code&gt;:log&lt;/code&gt; - уровень журнала. Если false, отключает ведение журнала контроллера.</target>
        </trans-unit>
        <trans-unit id="e6ec8203fff9eb2fbb03757e08745056ad9a45f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:log&lt;/code&gt; - the log level used when logging the query with Elixir&amp;rsquo;s Logger. If false, disables logging for that repository. Defaults to &lt;code&gt;:debug&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:log&lt;/code&gt; - уровень журнала, используемый при регистрации запроса с помощью Elixir's Logger. Если false, отключает ведение журнала для этого репозитория. По умолчанию &lt;code&gt;:debug&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="85e08e157d964f0cd0cd54909cc670356a784a45" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:log&lt;/code&gt; - the log level used when logging the query with Elixir's Logger. If false, disables logging for that repository. Defaults to &lt;code&gt;:debug&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3449688e08eea5d7585e628970fb5fd4fc57314d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:log_level&lt;/code&gt; - The log level to log events, defaults &lt;code&gt;:debug&lt;/code&gt; and can be disabled with &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:log_level&lt;/code&gt; - Уровень журнала для регистрации событий, по умолчанию &lt;code&gt;:debug&lt;/code&gt; и может быть отключен с помощью &lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1c4a8361b4b752602132b8bfcffd5657d3d72c96" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:log_on_halt&lt;/code&gt; - accepts the level to log whenever the request is halted</source>
          <target state="translated">&lt;code&gt;:log_on_halt&lt;/code&gt; - принимает уровень для регистрации при остановке запроса</target>
        </trans-unit>
        <trans-unit id="99416941848d16782e5a280944eb2d157b11c26e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:logo&lt;/code&gt; - logo URI, or &lt;code&gt;nil&lt;/code&gt; to disable</source>
          <target state="translated">&lt;code&gt;:logo&lt;/code&gt; - URI логотипа или &lt;code&gt;nil&lt;/code&gt; чтобы отключить</target>
        </trans-unit>
        <trans-unit id="3136be5b5372e30eff0d8d7dc6870c7581dd7dcd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:longpoll&lt;/code&gt; - controls the longpoll configuration. Defaults to &lt;code&gt;false&lt;/code&gt;. May be true or a keyword list of options. See &quot;Shared configuration&quot; and &quot;Longpoll configuration&quot; for the whole list</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b2d0743084e1bae076e593d6d37c318370d1e9a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:loop_detected&lt;/code&gt; - 508</source>
          <target state="translated">&lt;code&gt;:loop_detected&lt;/code&gt; - 508</target>
        </trans-unit>
        <trans-unit id="22daa0f47b9c31c3da575d24cd746116d32423c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:mark_as_invalid&lt;/code&gt; - if attempting to remove the association or embedded data via parent changeset - an error will be added to the parent changeset, and it will be marked as invalid</source>
          <target state="translated">&lt;code&gt;:mark_as_invalid&lt;/code&gt; - при попытке удалить ассоциацию или встроенные данные через родительский набор изменений - в родительский набор изменений будет добавлена ​​ошибка, и она будет помечена как недопустимая</target>
        </trans-unit>
        <trans-unit id="f1303f487788b92312ee5245eeb67414593b7efe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:match&lt;/code&gt; - how the changeset constraint name is matched against the repo constraint, may be &lt;code&gt;:exact&lt;/code&gt; or &lt;code&gt;:suffix&lt;/code&gt;. Defaults to &lt;code&gt;:exact&lt;/code&gt;. &lt;code&gt;:suffix&lt;/code&gt; matches any repo constraint which &lt;code&gt;ends_with?&lt;/code&gt;&lt;code&gt;:name&lt;/code&gt; to this changeset constraint.</source>
          <target state="translated">&lt;code&gt;:match&lt;/code&gt; - способ сопоставления имени ограничения набора изменений с ограничением репо, может быть &lt;code&gt;:exact&lt;/code&gt; или &lt;code&gt;:suffix&lt;/code&gt; . По умолчанию &lt;code&gt;:exact&lt;/code&gt; . &lt;code&gt;:suffix&lt;/code&gt; соответствует любому ограничению репо, которое &lt;code&gt;ends_with?&lt;/code&gt; &lt;code&gt;:name&lt;/code&gt; этого ограничения набора изменений.</target>
        </trans-unit>
        <trans-unit id="ae28b1768abacbdf995d7f3182c289b64505edba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:match&lt;/code&gt; - how the changeset constraint name is matched against the repo constraint, may be &lt;code&gt;:exact&lt;/code&gt;, &lt;code&gt;:suffix&lt;/code&gt; or &lt;code&gt;:prefix&lt;/code&gt;. Defaults to &lt;code&gt;:exact&lt;/code&gt;. &lt;code&gt;:suffix&lt;/code&gt; matches any repo constraint which &lt;code&gt;ends_with?&lt;/code&gt;&lt;code&gt;:name&lt;/code&gt; to this changeset constraint. &lt;code&gt;:prefix&lt;/code&gt; matches any repo constraint which &lt;code&gt;starts_with?&lt;/code&gt;&lt;code&gt;:name&lt;/code&gt; to this changeset constraint.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2b3d44cd2a2936b10708614fa0933fc8ed2dffa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:match&lt;/code&gt; - the type of match Ecto will perform on a violated constraint against the &lt;code&gt;:constraint&lt;/code&gt; value. It is &lt;code&gt;:exact&lt;/code&gt;, &lt;code&gt;:suffix&lt;/code&gt; or &lt;code&gt;:prefix&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:match&lt;/code&gt; - тип совпадения, которое Ecto будет выполнять при нарушенном ограничении относительно значения &lt;code&gt;:constraint&lt;/code&gt; . Это &lt;code&gt;:exact&lt;/code&gt; , &lt;code&gt;:suffix&lt;/code&gt; или &lt;code&gt;:prefix&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="40a11cb6d346fa97a97585a8366f3d6ae755f953" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:max&lt;/code&gt; - the length must be less than or equal to this value</source>
          <target state="translated">&lt;code&gt;:max&lt;/code&gt; - длина должна быть меньше или равна этому значению</target>
        </trans-unit>
        <trans-unit id="d5426c4242d548e078802aa6bb4dfc2f58812019" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:max_age&lt;/code&gt; - see &lt;a href=&quot;plug.conn#put_resp_cookie/4&quot;&gt;&lt;code&gt;Plug.Conn.put_resp_cookie/4&lt;/code&gt;&lt;/a&gt;;</source>
          <target state="translated">&lt;code&gt;:max_age&lt;/code&gt; - см. &lt;a href=&quot;plug.conn#put_resp_cookie/4&quot;&gt; &lt;code&gt;Plug.Conn.put_resp_cookie/4&lt;/code&gt; &lt;/a&gt; ;</target>
        </trans-unit>
        <trans-unit id="b9a66a2636d4f43f7a1e47467a5fc62b0a261e0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:max_age&lt;/code&gt; - the cookie max-age, in seconds. Providing a value for this option will set both the &lt;em&gt;max-age&lt;/em&gt; and &lt;em&gt;expires&lt;/em&gt; cookie attributes</source>
          <target state="translated">&lt;code&gt;:max_age&lt;/code&gt; - максимальный возраст файла cookie в секундах. Если указать значение для этого параметра, будут установлены атрибуты cookie &lt;em&gt;max-age&lt;/em&gt; и &lt;em&gt;expires.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d5bc10af28b0ca1b02d2412d2eabeaf8acc7e267" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:max_age&lt;/code&gt; - the cookie max-age, in seconds. Providing a value for this option will set both the &lt;em&gt;max-age&lt;/em&gt; and &lt;em&gt;expires&lt;/em&gt; cookie attributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8da5acaec9073ec1b7c65594f974dbbf6357893" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:max_age&lt;/code&gt; - verifies the token only if it has been generated &quot;max age&quot; ago in seconds. A reasonable value is 1 day (86400 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dae7b85b803d287a8943d56ed038bb79c296e54" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:max_age&lt;/code&gt; - verifies the token only if it has been generated &amp;ldquo;max age&amp;rdquo; ago in seconds. A reasonable value is 1 day (&lt;code&gt;86400&lt;/code&gt; seconds)</source>
          <target state="translated">&lt;code&gt;:max_age&lt;/code&gt; - проверяет токен, только если он был сгенерирован &amp;laquo;максимальный возраст&amp;raquo; назад в секундах. Разумное значение - 1 день ( &lt;code&gt;86400&lt;/code&gt; секунд).</target>
        </trans-unit>
        <trans-unit id="6fbc14c473b40ec77b5a11885a994143bcb8f2f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:max_delta_sizes&lt;/code&gt; - The list of delta generation sizes to keep before falling back to sending entire state. Defaults &lt;code&gt;[100, 1000, 10_000]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:max_delta_sizes&lt;/code&gt; - Список размеров генерации дельты, которые необходимо сохранить перед возвратом к отправке всего состояния. По умолчанию &lt;code&gt;[100, 1000, 10_000]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b0e838b666632be236d1627ea088d75fe27b429b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:max_frame_size&lt;/code&gt; - the maximum allowed frame size in bytes. Supported from Cowboy 2.3 onwards, defaults to &quot;infinity&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1a0d84d17c7e3032cefd2f4f8681706af42ec3a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:max_rows&lt;/code&gt; - The number of rows to load from the database as we stream. It is supported at least by Postgres and MySQL and defaults to 500.</source>
          <target state="translated">&lt;code&gt;:max_rows&lt;/code&gt; - Количество строк, загружаемых из базы данных при потоковой передаче . Он поддерживается как минимум Postgres и MySQL и по умолчанию равен 500.</target>
        </trans-unit>
        <trans-unit id="39fddd5bbbf5a4ea5b0483da67b78b49763ebc1e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:max_silent_periods&lt;/code&gt; - The max integer of broadcast periods for which no delta broadcasts have been sent. Default &lt;code&gt;10&lt;/code&gt; (15s heartbeat)</source>
          <target state="translated">&lt;code&gt;:max_silent_periods&lt;/code&gt; - максимальное целое число периодов широковещательной рассылки, для которых не отправлялись дельта-широковещательные рассылки . По умолчанию &lt;code&gt;10&lt;/code&gt; (сердцебиение 15 с)</target>
        </trans-unit>
        <trans-unit id="abed21849a2f44fe6f006bf3445ab50922ab3d4a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:message&lt;/code&gt; - the message in case the constraint check fails, defaults to &quot;does not exist&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5d5c3fbf48e1775113ea01be3632a1f8f2da27d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:message&lt;/code&gt; - the message in case the constraint check fails, defaults to &quot;has already been taken&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a62a6ebffcbeee4c7a0b6ff01a295d83a227d3c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:message&lt;/code&gt; - the message in case the constraint check fails, defaults to &quot;has already been taken&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0814815b59a403b4b811a2c8eb02d114825ece26" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:message&lt;/code&gt; - the message in case the constraint check fails, defaults to &quot;is still associated with this entry&quot; (for &lt;code&gt;has_one&lt;/code&gt;) and &quot;are still associated with this entry&quot; (for &lt;code&gt;has_many&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4096d573fa4c237abe05cc2a73946d916081b839" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:message&lt;/code&gt; - the message in case the constraint check fails, defaults to &quot;violates an exclusion constraint&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ccf5dad75d9aeb6974c4fbb9dac69ee9dc7ff91" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:message&lt;/code&gt; - the message in case the constraint check fails, defaults to &amp;ldquo;does not exist&amp;rdquo;</source>
          <target state="translated">&lt;code&gt;:message&lt;/code&gt; - сообщение в случае неудачной проверки ограничения, по умолчанию &amp;laquo;не существует&amp;raquo;</target>
        </trans-unit>
        <trans-unit id="4b979c5c604d4a25e37884b33f9504f741ca23f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:message&lt;/code&gt; - the message in case the constraint check fails, defaults to &amp;ldquo;has already been taken&amp;rdquo;</source>
          <target state="translated">&lt;code&gt;:message&lt;/code&gt; - сообщение в случае неудачной проверки ограничения, по умолчанию &amp;laquo;уже выполнено&amp;raquo;</target>
        </trans-unit>
        <trans-unit id="b76c3dd9d1a5a379187ced84cbe33b9638695857" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:message&lt;/code&gt; - the message in case the constraint check fails, defaults to &amp;ldquo;is still associated with this entry&amp;rdquo; (for &lt;code&gt;has_one&lt;/code&gt;) and &amp;ldquo;are still associated with this entry&amp;rdquo; (for &lt;code&gt;has_many&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;:message&lt;/code&gt; - сообщение в случае сбоя проверки ограничения, по умолчанию &amp;laquo;все еще связано с этой записью&amp;raquo; (для &lt;code&gt;has_one&lt;/code&gt; ) и &amp;laquo;все еще связано с этой записью&amp;raquo; (для &lt;code&gt;has_many&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="7e5c55ec5c1ffd464a942fd5f071eacdf7f25c5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:message&lt;/code&gt; - the message in case the constraint check fails, defaults to &amp;ldquo;violates an exclusion constraint&amp;rdquo;</source>
          <target state="translated">&lt;code&gt;:message&lt;/code&gt; - сообщение в случае сбоя проверки ограничения, по умолчанию &amp;laquo;нарушает ограничение исключения&amp;raquo;</target>
        </trans-unit>
        <trans-unit id="2773a2cc8b9a4fcc41e01c336a12296869caa5c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:message&lt;/code&gt; - the message in case the constraint check fails. Defaults to &quot;is invalid&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="313c158c95b42b45013913e0cdad53ce51a4b67a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:message&lt;/code&gt; - the message in case the constraint check fails. Defaults to &amp;ldquo;is invalid&amp;rdquo;</source>
          <target state="translated">&lt;code&gt;:message&lt;/code&gt; - сообщение в случае неудачной проверки ограничения. По умолчанию &amp;laquo;недействительно&amp;raquo;</target>
        </trans-unit>
        <trans-unit id="27ed407bda4e1160feb8fd60594b228240c981cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:message&lt;/code&gt; - the message on failure, defaults to &quot;can't be blank&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a02a73280d66e73f5349143867cb40e72e7a22d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:message&lt;/code&gt; - the message on failure, defaults to &quot;does not match confirmation&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdadd30502829c8bff02fa7e91c99a96be8715b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:message&lt;/code&gt; - the message on failure, defaults to &quot;has an invalid entry&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3c883fce5be4b2520e63b3cb893ced46a2550a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:message&lt;/code&gt; - the message on failure, defaults to &quot;has invalid format&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7421d7723a81b327ea915135c105bfff55527e15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:message&lt;/code&gt; - the message on failure, defaults to &quot;is invalid&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="009b5bdd4c99f3aba7fda5ab01268b7870f0d8fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:message&lt;/code&gt; - the message on failure, defaults to &quot;is reserved&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c42306fff7b1fd597c39c137b478071024175851" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:message&lt;/code&gt; - the message on failure, defaults to &quot;must be accepted&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="662979dd37f11f6699d02cc348494c779bfe201e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:message&lt;/code&gt; - the message on failure, defaults to &amp;ldquo;can&amp;rsquo;t be blank&amp;rdquo;</source>
          <target state="translated">&lt;code&gt;:message&lt;/code&gt; - сообщение об ошибке, по умолчанию &amp;laquo;не может быть пустым&amp;raquo;</target>
        </trans-unit>
        <trans-unit id="c681a281012f4f0f4bebe9f525a2e0b9d1ad4a17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:message&lt;/code&gt; - the message on failure, defaults to &amp;ldquo;does not match confirmation&amp;rdquo;</source>
          <target state="translated">&lt;code&gt;:message&lt;/code&gt; - сообщение об ошибке, по умолчанию &amp;laquo;не соответствует подтверждению&amp;raquo;</target>
        </trans-unit>
        <trans-unit id="68ecc433c897bc64e433bed7911b6d69b2f87b38" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:message&lt;/code&gt; - the message on failure, defaults to &amp;ldquo;has an invalid entry&amp;rdquo;</source>
          <target state="translated">&lt;code&gt;:message&lt;/code&gt; - сообщение об ошибке, по умолчанию &amp;laquo;имеет недопустимую запись&amp;raquo;</target>
        </trans-unit>
        <trans-unit id="ee9b0e44025e64ae0be8911cd001faddb3e38de0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:message&lt;/code&gt; - the message on failure, defaults to &amp;ldquo;has invalid format&amp;rdquo;</source>
          <target state="translated">&lt;code&gt;:message&lt;/code&gt; - сообщение об ошибке, по умолчанию &amp;laquo;имеет недопустимый формат&amp;raquo;</target>
        </trans-unit>
        <trans-unit id="22aaa80f1ccabe54970869051d8b59dd9685bf51" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:message&lt;/code&gt; - the message on failure, defaults to &amp;ldquo;is invalid&amp;rdquo;</source>
          <target state="translated">&lt;code&gt;:message&lt;/code&gt; - сообщение об ошибке, по умолчанию &amp;laquo;недействительно&amp;raquo;</target>
        </trans-unit>
        <trans-unit id="b816a8d90462dc91536080127ea34e6f02756bf4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:message&lt;/code&gt; - the message on failure, defaults to &amp;ldquo;is reserved&amp;rdquo;</source>
          <target state="translated">&lt;code&gt;:message&lt;/code&gt; - сообщение об ошибке, по умолчанию &amp;laquo;зарезервировано&amp;raquo;</target>
        </trans-unit>
        <trans-unit id="01b95ca370d08b8abdd8e8f573526b5cc9c6f7d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:message&lt;/code&gt; - the message on failure, defaults to &amp;ldquo;must be accepted&amp;rdquo;</source>
          <target state="translated">&lt;code&gt;:message&lt;/code&gt; - сообщение об ошибке, по умолчанию &amp;laquo;необходимо принять&amp;raquo;</target>
        </trans-unit>
        <trans-unit id="68c59d0e750ad380e59200002514b92147e80136" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:message&lt;/code&gt; - the message on failure, defaults to one of:</source>
          <target state="translated">&lt;code&gt;:message&lt;/code&gt; - сообщение об ошибке, по умолчанию одно из:</target>
        </trans-unit>
        <trans-unit id="a884e0d4714725cc3b3034db21aaf1297cd58356" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:message&lt;/code&gt; - the message on failure, depending on the validation, is one of:</source>
          <target state="translated">&lt;code&gt;:message&lt;/code&gt; - сообщение об ошибке, в зависимости от проверки, может быть одним из:</target>
        </trans-unit>
        <trans-unit id="c911339d828f3d087a5f9cf55021979541ca5ab0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:metadata&lt;/code&gt; - a map of metadata used by the telemetry events and returned by &lt;a href=&quot;#route_info/4&quot;&gt;&lt;code&gt;route_info/4&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d77234e798cfa941eeca1b31f2368ad3e0b9f818" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:metadata&lt;/code&gt; - a map to optional feed metadata used on telemetry events and route info, for example: &lt;code&gt;%{route_name: :foo, access: :user}&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bc9aa3455c3636eca09ef9f5a3b419c3ac09190" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:metadata&lt;/code&gt; - provides metadata to be attached to this subscription. The metadata can be used by custom dispatching mechanisms. See the &quot;Custom dispatching&quot; section in the module documentation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5d2553d5a9681de32a059b9acdeafffa76b425c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:method&lt;/code&gt; - the HTTP method. If the method is not &quot;get&quot; nor &quot;post&quot;, an input tag with name &lt;code&gt;_method&lt;/code&gt; is generated along-side the form tag. Defaults to &quot;post&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba1d391c7d54a0f31590600b87c1266d9655d0f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:method&lt;/code&gt; - the HTTP method. If the method is not &amp;ldquo;get&amp;rdquo; nor &amp;ldquo;post&amp;rdquo;, an input tag with name &lt;code&gt;_method&lt;/code&gt; is generated along-side the form tag. Defaults to &amp;ldquo;post&amp;rdquo;.</source>
          <target state="translated">&lt;code&gt;:method&lt;/code&gt; - метод HTTP. Если метод не &amp;laquo;получить&amp;raquo; и не &amp;laquo;отправить&amp;raquo;, тег ввода с именем &lt;code&gt;_method&lt;/code&gt; создается рядом с тегом формы. По умолчанию &amp;laquo;отправить&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="d4f1c2fda6f4e8e8eb1eae610d22848acdb550a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:method&lt;/code&gt; - the method to use with the button. Defaults to :post.</source>
          <target state="translated">&lt;code&gt;:method&lt;/code&gt; - метод, используемый с кнопкой. По умолчанию: post.</target>
        </trans-unit>
        <trans-unit id="58ce1df60956bd1eaeb61429d0d64a9cbb05fdb3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:method&lt;/code&gt; - the method to use with the link. In case the method is not &lt;code&gt;:get&lt;/code&gt;, the link is generated inside the form which sets the proper information. In order to submit the form, JavaScript must be enabled</source>
          <target state="translated">&lt;code&gt;:method&lt;/code&gt; - метод для использования со ссылкой. Если метод не &lt;code&gt;:get&lt;/code&gt; , ссылка создается внутри формы, которая устанавливает правильную информацию. Чтобы отправить форму, необходимо включить JavaScript.</target>
        </trans-unit>
        <trans-unit id="8a34ca58fa70ee66aa672f4d9011a4e55e769d8b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:method_not_allowed&lt;/code&gt; - 405</source>
          <target state="translated">&lt;code&gt;:method_not_allowed&lt;/code&gt; - 405</target>
        </trans-unit>
        <trans-unit id="e3aff49eb37baf5edb63b69c9b3fea52a4912e24" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:min&lt;/code&gt; - the length must be greater than or equal to this value</source>
          <target state="translated">&lt;code&gt;:min&lt;/code&gt; - длина должна быть больше или равна этому значению</target>
        </trans-unit>
        <trans-unit id="c89c4994a092e3a85059ea383ce47d8594990298" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:misdirected_request&lt;/code&gt; - 421</source>
          <target state="translated">&lt;code&gt;:misdirected_request&lt;/code&gt; - 421</target>
        </trans-unit>
        <trans-unit id="d120e7208e4cd993a84e2939da2508191e06a2ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:moved_permanently&lt;/code&gt; - 301</source>
          <target state="translated">&lt;code&gt;:moved_permanently&lt;/code&gt; - 301</target>
        </trans-unit>
        <trans-unit id="a6910673a19d4323ecd5075ee221622b36036c93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:multi_status&lt;/code&gt; - 207</source>
          <target state="translated">&lt;code&gt;:multi_status&lt;/code&gt; - 207</target>
        </trans-unit>
        <trans-unit id="ad6ae49d44c1d7d891ab0cb8dede1388e639971b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:multipart&lt;/code&gt; - when true, sets enctype to &quot;multipart/form-data&quot;. Required when uploading files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e4e384b10df1f347b0ed04d43b8e4ab22fceba4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:multipart&lt;/code&gt; - when true, sets enctype to &amp;ldquo;multipart/form-data&amp;rdquo;. Required when uploading files</source>
          <target state="translated">&lt;code&gt;:multipart&lt;/code&gt; - при значении true устанавливает enctype в &amp;laquo;multipart / form-data&amp;raquo;. Обязательно при загрузке файлов</target>
        </trans-unit>
        <trans-unit id="2fdeb1b2e30efae5121f89ab7cee6ff685ac0633" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:multiple_choices&lt;/code&gt; - 300</source>
          <target state="translated">&lt;code&gt;:multiple_choices&lt;/code&gt; - 300</target>
        </trans-unit>
        <trans-unit id="cfe46138f8daca7f59a14d89a2bed6d88c4775cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:name&lt;/code&gt; - The name of the server, such as: &lt;code&gt;MyApp.Tracker&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:name&lt;/code&gt; - Имя сервера, например: &lt;code&gt;MyApp.Tracker&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e50488d0ce6b025476fdd68e7050397fd8754b47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:name&lt;/code&gt; - The name of the server, such as: &lt;code&gt;MyApp.Tracker&lt;/code&gt; This will also form the common prefix for all shard names</source>
          <target state="translated">&lt;code&gt;:name&lt;/code&gt; - Имя сервера, например: &lt;code&gt;MyApp.Tracker&lt;/code&gt; . Это также будет общим префиксом для всех имен сегментов.</target>
        </trans-unit>
        <trans-unit id="b9bffacb9939dc16ac7a9353c93aa0b36e06b973" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:name&lt;/code&gt; - The required registered name and optional node name for pubsub processes, for example: &lt;code&gt;MyApp.PubSub&lt;/code&gt;, &lt;code&gt;{MyApp.PubSub, :node@host}&lt;/code&gt;. When only a server name is provided, the node name defaults to &lt;code&gt;node()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:name&lt;/code&gt; - Требуемое зарегистрированное имя и необязательное имя узла для процессов pubsub, например: &lt;code&gt;MyApp.PubSub&lt;/code&gt; , &lt;code&gt;{MyApp.PubSub, :node@host}&lt;/code&gt; . Если указано только имя сервера, имя узла по умолчанию - &lt;code&gt;node()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e965ec7f75d4fb29afad1a8b6ee8b5830e1f3aa4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:name&lt;/code&gt; - the constraint name. By default, the constraint name is inferred from the association table + association field. May be required explicitly for complex cases</source>
          <target state="translated">&lt;code&gt;:name&lt;/code&gt; - имя ограничения. По умолчанию имя ограничения выводится из таблицы ассоциаций + поля ассоциации. Может потребоваться явно в сложных случаях</target>
        </trans-unit>
        <trans-unit id="d1c17abc0ad7d1c032c626bf14c039b5accbab15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:name&lt;/code&gt; - the constraint name. By default, the constraint name is inferred from the table + association field. May be required explicitly for complex cases</source>
          <target state="translated">&lt;code&gt;:name&lt;/code&gt; - имя ограничения. По умолчанию имя ограничения выводится из поля таблица + связь. Может потребоваться явно в сложных случаях</target>
        </trans-unit>
        <trans-unit id="a4180a5b6bf4ea6594fba5088b1f4a9d34348558" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:name&lt;/code&gt; - the constraint name. By default, the constraint name is inferred from the table + field(s). May be required explicitly for complex cases</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="176107f3d577d9c6076d4ef00d60d4d8be773929" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:name&lt;/code&gt; - the constraint name. By default, the constraint name is inferred from the table + field. May be required explicitly for complex cases</source>
          <target state="translated">&lt;code&gt;:name&lt;/code&gt; - имя ограничения. По умолчанию имя ограничения выводится из поля таблица +. Может потребоваться явно в сложных случаях</target>
        </trans-unit>
        <trans-unit id="d52d62c2ef2e910ca082d036faa2466937d0cb7b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:name&lt;/code&gt; - the name of the constraint. Required.</source>
          <target state="translated">&lt;code&gt;:name&lt;/code&gt; - имя ограничения. Необходимые.</target>
        </trans-unit>
        <trans-unit id="e2c50e3e0e5831908f7e14c85a4f677ca19e8549" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:name&lt;/code&gt; - the name of the pubsub to be started</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0adf976b1fd3a06aa3e828c122d0d4d18b04ae39" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:name&lt;/code&gt; - the name to be used when generating input fields</source>
          <target state="translated">&lt;code&gt;:name&lt;/code&gt; - имя, которое будет использоваться при генерации полей ввода</target>
        </trans-unit>
        <trans-unit id="d1013933901a8bdbca393490e39e3e4b07f855c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:name&lt;/code&gt; - the prefix for this resource. This is used for the named helper and as the prefix for the parameter in nested resources. The default value is automatically derived from the controller name, i.e. &lt;code&gt;UserController&lt;/code&gt; will have name &lt;code&gt;&quot;user&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:name&lt;/code&gt; - префикс этого ресурса. Он используется для именованного помощника и как префикс для параметра во вложенных ресурсах. Значение по умолчанию автоматически получается из имени контроллера, т.е. &lt;code&gt;UserController&lt;/code&gt; будет иметь имя &lt;code&gt;&quot;user&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dcf20b5ce0e16b0bebc3ff2db628eff110882f3e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:name&lt;/code&gt;- The name of the Repo supervisor process</source>
          <target state="translated">&lt;code&gt;:name&lt;/code&gt; - Имя процесса супервизора репо</target>
        </trans-unit>
        <trans-unit id="08cf85e4b75281acfd3606cb938d352b27366455" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:namespace&lt;/code&gt; - configures the namespace the &lt;code&gt;LiveView&lt;/code&gt; is in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e563a06dbfa15c07ef6a28b5330f3a4722172eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:namespace&lt;/code&gt; - sets the namespace to properly inflect the layout view. By default it uses the base alias in your controller name</source>
          <target state="translated">&lt;code&gt;:namespace&lt;/code&gt; - устанавливает пространство имен для правильного изменения вида макета. По умолчанию он использует базовый псевдоним в имени вашего контроллера.</target>
        </trans-unit>
        <trans-unit id="26fe2bf804c25e856f6b4889e40b22a1dafbed6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:namespace&lt;/code&gt; - the namespace to consider when calculating view paths</source>
          <target state="translated">&lt;code&gt;:namespace&lt;/code&gt; - пространство имен, которое следует учитывать при вычислении путей просмотра</target>
        </trans-unit>
        <trans-unit id="422bbb536f83760dbab2f251a4c850dcbc80dd29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:network_authentication_required&lt;/code&gt; - 511</source>
          <target state="translated">&lt;code&gt;:network_authentication_required&lt;/code&gt; - 511</target>
        </trans-unit>
        <trans-unit id="8305bb838e6c6d1e32ccc407a15340ca12fe6801" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:nilify&lt;/code&gt; - sets owner reference column to &lt;code&gt;nil&lt;/code&gt; (available only for associations). Use this on a &lt;code&gt;belongs_to&lt;/code&gt; column to allow the association to be cleared out so that it can be set to a new value. Will set &lt;code&gt;action&lt;/code&gt; on associated changesets to &lt;code&gt;:replace&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:nilify&lt;/code&gt; - устанавливает в столбце ссылки владельца значение &lt;code&gt;nil&lt;/code&gt; (доступно только для ассоциаций). Используйте это в столбце &lt;code&gt;belongs_to&lt;/code&gt; чтобы разрешить очистку ассоциации, чтобы можно было установить новое значение. Установит &lt;code&gt;action&lt;/code&gt; для связанных наборов изменений &lt;code&gt;:replace&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4607ef6299c366313717dad319d4380c1f124148" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:no_content&lt;/code&gt; - 204</source>
          <target state="translated">&lt;code&gt;:no_content&lt;/code&gt; - 204</target>
        </trans-unit>
        <trans-unit id="d2da82c7dd181ac2b768bd2bece452aa471e69ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:non_authoritative_information&lt;/code&gt; - 203</source>
          <target state="translated">&lt;code&gt;:non_authoritative_information&lt;/code&gt; - 203</target>
        </trans-unit>
        <trans-unit id="5b825204aa49c29efb471b2c6cafda33297e897b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:noreply&lt;/code&gt; - Nothing to be done by the transport</source>
          <target state="translated">&lt;code&gt;:noreply&lt;/code&gt; - Ничего не поделаешь</target>
        </trans-unit>
        <trans-unit id="e11efff6388106901ee425cf3276f58de8dfc0b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:normal&lt;/code&gt; - in such cases, the exit won&amp;rsquo;t be logged, there is no restart in transient mode, and linked processes do not exit</source>
          <target state="translated">&lt;code&gt;:normal&lt;/code&gt; - в таких случаях выход не регистрируется, в переходном режиме перезапуска нет, связанные процессы не выходят</target>
        </trans-unit>
        <trans-unit id="8d55e492a72554c8996aaefe86ab2480a4801a3f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:normal&lt;/code&gt; - in such cases, the exit won't be logged and linked processes do not exit</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf16a0cb151458c4bbe810828ac70da7a9c6b053" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:normal&lt;/code&gt; - used if the startup is a normal startup or if the application is distributed and is started on the current node because of a failover from another node and the application specification key &lt;code&gt;:start_phases&lt;/code&gt; is &lt;code&gt;:undefined&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:normal&lt;/code&gt; - используется , если запуск нормальный запуск или если приложение распространяется и запускается на текущем узле из - за отказа от другого узла и ключа спецификации приложения &lt;code&gt;:start_phases&lt;/code&gt; это &lt;code&gt;:undefined&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="624912945fc424b767ffde2612a4e7b2f91d2f08" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:not_acceptable&lt;/code&gt; - 406</source>
          <target state="translated">&lt;code&gt;:not_acceptable&lt;/code&gt; - 406</target>
        </trans-unit>
        <trans-unit id="f28dd741039cb9e72b03e0f11a5ffb72e9f0bc85" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:not_extended&lt;/code&gt; - 510</source>
          <target state="translated">&lt;code&gt;:not_extended&lt;/code&gt; - 510</target>
        </trans-unit>
        <trans-unit id="652aa1358070deac15275d91759ba37ccc0bb01c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:not_found&lt;/code&gt; - 404</source>
          <target state="translated">&lt;code&gt;:not_found&lt;/code&gt; - 404</target>
        </trans-unit>
        <trans-unit id="ff264f227c4e7ee5731be940c8c4e4cd26022354" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:not_implemented&lt;/code&gt; - 501</source>
          <target state="translated">&lt;code&gt;:not_implemented&lt;/code&gt; - 501</target>
        </trans-unit>
        <trans-unit id="d52c3e25011d10bc15df8e4c6bfa3126505b806a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:not_modified&lt;/code&gt; - 304</source>
          <target state="translated">&lt;code&gt;:not_modified&lt;/code&gt; - 304</target>
        </trans-unit>
        <trans-unit id="0cdee5c632cde34ccdefd746cd745ce89f3a8106" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:nothing&lt;/code&gt; - ignores the error in case of conflicts</source>
          <target state="translated">&lt;code&gt;:nothing&lt;/code&gt; - игнорирует ошибку в случае конфликтов</target>
        </trans-unit>
        <trans-unit id="aa1af10e55c0037cdf06b705671adb84cdf94902" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:offset&lt;/code&gt; - the bytes to offset when reading. Defaults to &lt;code&gt;0&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0362ca35f2da877f8c1e7d91a1f7be879254c315" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:ok&lt;/code&gt; - 200</source>
          <target state="translated">&lt;code&gt;:ok&lt;/code&gt; - 200</target>
        </trans-unit>
        <trans-unit id="4e47725e5b7235af151fc3d9d1c44755492522ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:on&lt;/code&gt; - a query expression or keyword list to filter the join</source>
          <target state="translated">&lt;code&gt;:on&lt;/code&gt; - выражение запроса или список ключевых слов для фильтрации соединения</target>
        </trans-unit>
        <trans-unit id="c193b14d28ef1fc54845f049a34170e86400e080" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:on_conflict&lt;/code&gt; - It may be one of &lt;code&gt;:raise&lt;/code&gt; (the default), &lt;code&gt;:nothing&lt;/code&gt;, &lt;code&gt;:replace_all&lt;/code&gt;, &lt;code&gt;:replace_all_except_primary_key&lt;/code&gt;, &lt;code&gt;{:replace, fields}&lt;/code&gt;, a keyword list of update instructions or an &lt;a href=&quot;ecto.query&quot;&gt;&lt;code&gt;Ecto.Query&lt;/code&gt;&lt;/a&gt; query for updates. See the &amp;ldquo;Upserts&amp;rdquo; section for more information.</source>
          <target state="translated">&lt;code&gt;:on_conflict&lt;/code&gt; - Это может быть один из &lt;code&gt;:raise&lt;/code&gt; (по умолчанию), &lt;code&gt;:nothing&lt;/code&gt; , &lt;code&gt;:replace_all&lt;/code&gt; , &lt;code&gt;:replace_all_except_primary_key&lt;/code&gt; , &lt;code&gt;{:replace, fields}&lt;/code&gt; , ключевое слово список инструкций обновления или &lt;a href=&quot;ecto.query&quot;&gt; &lt;code&gt;Ecto.Query&lt;/code&gt; &lt;/a&gt; запроса обновлений. См. Раздел &amp;laquo;Upserts&amp;raquo; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="ef36a3a94b04b767ebf7e14a18507fd931ac04b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:on_conflict&lt;/code&gt; - It may be one of &lt;code&gt;:raise&lt;/code&gt; (the default), &lt;code&gt;:nothing&lt;/code&gt;, &lt;code&gt;:replace_all&lt;/code&gt;, &lt;code&gt;:replace_all_except_primary_key&lt;/code&gt;, &lt;code&gt;{:replace, fields}&lt;/code&gt;, a keyword list of update instructions, &lt;code&gt;{:replace, fields}&lt;/code&gt; or an &lt;a href=&quot;ecto.query&quot;&gt;&lt;code&gt;Ecto.Query&lt;/code&gt;&lt;/a&gt; query for updates. See the &amp;ldquo;Upserts&amp;rdquo; section for more information.</source>
          <target state="translated">&lt;code&gt;:on_conflict&lt;/code&gt; - Это может быть один из &lt;code&gt;:raise&lt;/code&gt; (по умолчанию), &lt;code&gt;:nothing&lt;/code&gt; , &lt;code&gt;:replace_all&lt;/code&gt; , &lt;code&gt;:replace_all_except_primary_key&lt;/code&gt; , &lt;code&gt;{:replace, fields}&lt;/code&gt; , ключевое слово список инструкций обновления, &lt;code&gt;{:replace, fields}&lt;/code&gt; или &lt;a href=&quot;ecto.query&quot;&gt; &lt;code&gt;Ecto.Query&lt;/code&gt; &lt;/a&gt; запрос для обновлений. См. Раздел &amp;laquo;Upserts&amp;raquo; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="3822f9de6ffde91749643edefa45601e6759f6e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:on_conflict&lt;/code&gt; - It may be one of &lt;code&gt;:raise&lt;/code&gt; (the default), &lt;code&gt;:nothing&lt;/code&gt;, &lt;code&gt;:replace_all&lt;/code&gt;, &lt;code&gt;{:replace_all_except, fields}&lt;/code&gt;, &lt;code&gt;{:replace, fields}&lt;/code&gt;, a keyword list of update instructions or an &lt;a href=&quot;ecto.query&quot;&gt;&lt;code&gt;Ecto.Query&lt;/code&gt;&lt;/a&gt; query for updates. See the &quot;Upserts&quot; section for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2b1eed524aead4912bf7e47cb8c4e5fcf7c06b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:on_delete&lt;/code&gt; - The action taken on associations when parent record is deleted. May be &lt;code&gt;:nothing&lt;/code&gt; (default), &lt;code&gt;:nilify_all&lt;/code&gt; and &lt;code&gt;:delete_all&lt;/code&gt;. Using this option is DISCOURAGED for most relational databases. Instead, in your migration, set &lt;code&gt;references(:parent_id, on_delete: :delete_all)&lt;/code&gt;. Opposite to the migration option, this option cannot guarantee integrity and it is only triggered for &lt;a href=&quot;ecto.repo#c:delete/2&quot;&gt;&lt;code&gt;Ecto.Repo.delete/2&lt;/code&gt;&lt;/a&gt; (and not on &lt;a href=&quot;ecto.repo#c:delete_all/2&quot;&gt;&lt;code&gt;Ecto.Repo.delete_all/2&lt;/code&gt;&lt;/a&gt;) and it never cascades. If posts has many comments, which has many tags, and you delete a post, only comments will be deleted. If your database does not support references, cascading can be manually implemented by using &lt;a href=&quot;ecto.multi&quot;&gt;&lt;code&gt;Ecto.Multi&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;ecto.changeset#prepare_changes/2&quot;&gt;&lt;code&gt;Ecto.Changeset.prepare_changes/2&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;:on_delete&lt;/code&gt; - Действие, выполняемое над ассоциациями при удалении родительской записи. Может быть &lt;code&gt;:nothing&lt;/code&gt; (по умолчанию) &lt;code&gt;:nilify_all&lt;/code&gt; и &lt;code&gt;:delete_all&lt;/code&gt; . Использование этой опции НЕ ПРИНИМАЕТСЯ к большинству реляционных баз данных. Вместо этого в вашей миграции установите &lt;code&gt;references(:parent_id, on_delete: :delete_all)&lt;/code&gt; . В отличие от варианта миграции, этот параметр не может гарантировать целостность, он запускается только для &lt;a href=&quot;ecto.repo#c:delete/2&quot;&gt; &lt;code&gt;Ecto.Repo.delete/2&lt;/code&gt; &lt;/a&gt; (а не для &lt;a href=&quot;ecto.repo#c:delete_all/2&quot;&gt; &lt;code&gt;Ecto.Repo.delete_all/2&lt;/code&gt; &lt;/a&gt; ) и никогда не каскадируется. Если у постов много комментариев и много тегов, и вы удаляете пост, будут удалены только комментарии. Если ваша база данных не поддерживает ссылки, каскадирование можно реализовать вручную с помощью &lt;a href=&quot;ecto.multi&quot;&gt; &lt;code&gt;Ecto.Multi&lt;/code&gt; &lt;/a&gt;или &lt;a href=&quot;ecto.changeset#prepare_changes/2&quot;&gt; &lt;code&gt;Ecto.Changeset.prepare_changes/2&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c8839c970620207471a40fc06be4a7c6b470c8de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:on_delete&lt;/code&gt; - The action taken on associations when parent record is deleted. May be &lt;code&gt;:nothing&lt;/code&gt; (default), &lt;code&gt;:nilify_all&lt;/code&gt; and &lt;code&gt;:delete_all&lt;/code&gt;. Using this option is DISCOURAGED for most relational databases. Instead, in your migration, set &lt;code&gt;references(:parent_id, on_delete: :delete_all)&lt;/code&gt;. Opposite to the migration option, this option cannot guarantee integrity and it is only triggered for &lt;a href=&quot;ecto.repo#c:delete/2&quot;&gt;&lt;code&gt;Ecto.Repo.delete/2&lt;/code&gt;&lt;/a&gt; (and not on &lt;a href=&quot;ecto.repo#c:delete_all/2&quot;&gt;&lt;code&gt;Ecto.Repo.delete_all/2&lt;/code&gt;&lt;/a&gt;) and it never cascades. If posts has many comments, which has many tags, and you delete a post, only comments will be deleted. If your database does not support references, cascading can be manually implemented by using &lt;a href=&quot;ecto.multi&quot;&gt;&lt;code&gt;Ecto.Multi&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;ecto.changeset#prepare_changes/2&quot;&gt;&lt;code&gt;Ecto.Changeset.prepare_changes/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;:on_delete&lt;/code&gt; - Действие, выполняемое над ассоциациями при удалении родительской записи. Может быть &lt;code&gt;:nothing&lt;/code&gt; (по умолчанию) &lt;code&gt;:nilify_all&lt;/code&gt; и &lt;code&gt;:delete_all&lt;/code&gt; . Использование этой опции НЕ ПРИНИМАЕТСЯ к большинству реляционных баз данных. Вместо этого в вашей миграции установите &lt;code&gt;references(:parent_id, on_delete: :delete_all)&lt;/code&gt; . В отличие от варианта миграции, этот параметр не может гарантировать целостность, он запускается только для &lt;a href=&quot;ecto.repo#c:delete/2&quot;&gt; &lt;code&gt;Ecto.Repo.delete/2&lt;/code&gt; &lt;/a&gt; (а не для &lt;a href=&quot;ecto.repo#c:delete_all/2&quot;&gt; &lt;code&gt;Ecto.Repo.delete_all/2&lt;/code&gt; &lt;/a&gt; ) и никогда не каскадируется. Если у постов много комментариев и много тегов, и вы удаляете пост, будут удалены только комментарии. Если ваша база данных не поддерживает ссылки, каскадирование можно реализовать вручную с помощью &lt;a href=&quot;ecto.multi&quot;&gt; &lt;code&gt;Ecto.Multi&lt;/code&gt; &lt;/a&gt;или &lt;a href=&quot;ecto.changeset#prepare_changes/2&quot;&gt; &lt;code&gt;Ecto.Changeset.prepare_changes/2&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7a3ebfb4894069761405562a6e4d45c7e9494495" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:on_delete&lt;/code&gt; - The action taken on associations when the parent record is deleted. May be &lt;code&gt;:nothing&lt;/code&gt; (default) or &lt;code&gt;:delete_all&lt;/code&gt;. Using this option is DISCOURAGED for most relational databases. Instead, in your migration, set &lt;code&gt;references(:parent_id, on_delete: :delete_all)&lt;/code&gt;. Opposite to the migration option, this option cannot guarantee integrity and it is only triggered for &lt;a href=&quot;ecto.repo#c:delete/2&quot;&gt;&lt;code&gt;Ecto.Repo.delete/2&lt;/code&gt;&lt;/a&gt; (and not on &lt;a href=&quot;ecto.repo#c:delete_all/2&quot;&gt;&lt;code&gt;Ecto.Repo.delete_all/2&lt;/code&gt;&lt;/a&gt;). This option can only remove data from the join source, never the associated records, and it never cascades.</source>
          <target state="translated">&lt;code&gt;:on_delete&lt;/code&gt; - Действие, выполняемое над ассоциациями при удалении родительской записи. Может быть &lt;code&gt;:nothing&lt;/code&gt; (по умолчанию) или &lt;code&gt;:delete_all&lt;/code&gt; . Использование этой опции НЕ ПРИНИМАЕТСЯ к большинству реляционных баз данных. Вместо этого в вашей миграции установите &lt;code&gt;references(:parent_id, on_delete: :delete_all)&lt;/code&gt; . В отличие от варианта миграции, этот параметр не может гарантировать целостность и запускается только для &lt;a href=&quot;ecto.repo#c:delete/2&quot;&gt; &lt;code&gt;Ecto.Repo.delete/2&lt;/code&gt; &lt;/a&gt; (но не для &lt;a href=&quot;ecto.repo#c:delete_all/2&quot;&gt; &lt;code&gt;Ecto.Repo.delete_all/2&lt;/code&gt; &lt;/a&gt; ). Этот параметр может удалять данные только из источника соединения, но не из связанных записей, и никогда не каскадно.</target>
        </trans-unit>
        <trans-unit id="8be77e73400917c2bd888542fb5ac44df49b49b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:on_replace&lt;/code&gt; - The action taken on associations when the embed is replaced when casting or manipulating parent changeset. May be &lt;code&gt;:raise&lt;/code&gt; (default), &lt;code&gt;:mark_as_invalid&lt;/code&gt;, &lt;code&gt;:update&lt;/code&gt;, or &lt;code&gt;:delete&lt;/code&gt;. See &lt;a href=&quot;ecto.changeset&quot;&gt;&lt;code&gt;Ecto.Changeset&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s section on related data for more info.</source>
          <target state="translated">&lt;code&gt;:on_replace&lt;/code&gt; - Действие, выполняемое над ассоциациями, когда встраивание заменяется при приведении родительского набора изменений или манипулировании им. Может быть &lt;code&gt;:raise&lt;/code&gt; ( по умолчанию), &lt;code&gt;:mark_as_invalid&lt;/code&gt; , &lt;code&gt;:update&lt;/code&gt; или &lt;code&gt;:delete&lt;/code&gt; . См. &lt;a href=&quot;ecto.changeset&quot;&gt; &lt;code&gt;Ecto.Changeset&lt;/code&gt; &lt;/a&gt; о связанных данных для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="ac3dd2bb33ef995595e171b1b462cb97149f5137" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:on_replace&lt;/code&gt; - The action taken on associations when the embed is replaced when casting or manipulating parent changeset. May be &lt;code&gt;:raise&lt;/code&gt; (default), &lt;code&gt;:mark_as_invalid&lt;/code&gt;, &lt;code&gt;:update&lt;/code&gt;, or &lt;code&gt;:delete&lt;/code&gt;. See &lt;a href=&quot;ecto.changeset&quot;&gt;&lt;code&gt;Ecto.Changeset&lt;/code&gt;&lt;/a&gt;'s section on related data for more info.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa2f288c2b39f93574dc29811fa50867cc68076d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:on_replace&lt;/code&gt; - The action taken on associations when the embed is replaced when casting or manipulating parent changeset. May be &lt;code&gt;:raise&lt;/code&gt; (default), &lt;code&gt;:mark_as_invalid&lt;/code&gt;, or &lt;code&gt;:delete&lt;/code&gt;. See &lt;a href=&quot;ecto.changeset&quot;&gt;&lt;code&gt;Ecto.Changeset&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s section on related data for more info.</source>
          <target state="translated">&lt;code&gt;:on_replace&lt;/code&gt; - Действие, выполняемое над ассоциациями, когда встраивание заменяется при приведении родительского набора изменений или манипулировании им. Может быть &lt;code&gt;:raise&lt;/code&gt; (по умолчанию) &lt;code&gt;:mark_as_invalid&lt;/code&gt; или &lt;code&gt;:delete&lt;/code&gt; . См. &lt;a href=&quot;ecto.changeset&quot;&gt; &lt;code&gt;Ecto.Changeset&lt;/code&gt; &lt;/a&gt; о связанных данных для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="85d9c81dd97579d85e4854a4f7fc2e0d64b946f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:on_replace&lt;/code&gt; - The action taken on associations when the embed is replaced when casting or manipulating parent changeset. May be &lt;code&gt;:raise&lt;/code&gt; (default), &lt;code&gt;:mark_as_invalid&lt;/code&gt;, or &lt;code&gt;:delete&lt;/code&gt;. See &lt;a href=&quot;ecto.changeset&quot;&gt;&lt;code&gt;Ecto.Changeset&lt;/code&gt;&lt;/a&gt;'s section on related data for more info.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c06d3d14555371f332bd1c5d55eb5c90703e4bde" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:on_replace&lt;/code&gt; - The action taken on associations when the record is replaced when casting or manipulating parent changeset. May be &lt;code&gt;:raise&lt;/code&gt; (default), &lt;code&gt;:mark_as_invalid&lt;/code&gt;, &lt;code&gt;:nilify&lt;/code&gt;, &lt;code&gt;:update&lt;/code&gt;, or &lt;code&gt;:delete&lt;/code&gt;. See &lt;a href=&quot;ecto.changeset&quot;&gt;&lt;code&gt;Ecto.Changeset&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s section on related data for more info.</source>
          <target state="translated">&lt;code&gt;:on_replace&lt;/code&gt; - Действие, выполняемое с ассоциациями, когда запись заменяется при приведении родительского набора изменений или манипулировании им. Может быть &lt;code&gt;:raise&lt;/code&gt; ( по умолчанию), &lt;code&gt;:mark_as_invalid&lt;/code&gt; , &lt;code&gt;:nilify&lt;/code&gt; , &lt;code&gt;:update&lt;/code&gt; или &lt;code&gt;:delete&lt;/code&gt; . См. &lt;a href=&quot;ecto.changeset&quot;&gt; &lt;code&gt;Ecto.Changeset&lt;/code&gt; &lt;/a&gt; о связанных данных для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="c77c4724d3f576b07d2a92e4da8f0790ade461cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:on_replace&lt;/code&gt; - The action taken on associations when the record is replaced when casting or manipulating parent changeset. May be &lt;code&gt;:raise&lt;/code&gt; (default), &lt;code&gt;:mark_as_invalid&lt;/code&gt;, &lt;code&gt;:nilify&lt;/code&gt;, &lt;code&gt;:update&lt;/code&gt;, or &lt;code&gt;:delete&lt;/code&gt;. See &lt;a href=&quot;ecto.changeset&quot;&gt;&lt;code&gt;Ecto.Changeset&lt;/code&gt;&lt;/a&gt;'s section on related data for more info.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c13c5eb4cdb1a3f78e47425f41551138dc4715c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:on_replace&lt;/code&gt; - The action taken on associations when the record is replaced when casting or manipulating parent changeset. May be &lt;code&gt;:raise&lt;/code&gt; (default), &lt;code&gt;:mark_as_invalid&lt;/code&gt;, &lt;code&gt;:nilify&lt;/code&gt;, or &lt;code&gt;:delete&lt;/code&gt;. See &lt;a href=&quot;ecto.changeset&quot;&gt;&lt;code&gt;Ecto.Changeset&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s section on related data for more info.</source>
          <target state="translated">&lt;code&gt;:on_replace&lt;/code&gt; - Действие, выполняемое с ассоциациями, когда запись заменяется при приведении родительского набора изменений или манипулировании им. Может быть &lt;code&gt;:raise&lt;/code&gt; ( по умолчанию), &lt;code&gt;:mark_as_invalid&lt;/code&gt; , &lt;code&gt;:nilify&lt;/code&gt; , или &lt;code&gt;:delete&lt;/code&gt; . См. &lt;a href=&quot;ecto.changeset&quot;&gt; &lt;code&gt;Ecto.Changeset&lt;/code&gt; &lt;/a&gt; о связанных данных для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="98fbce7e79e7e7fcce023d4f035ff37817967c9a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:on_replace&lt;/code&gt; - The action taken on associations when the record is replaced when casting or manipulating parent changeset. May be &lt;code&gt;:raise&lt;/code&gt; (default), &lt;code&gt;:mark_as_invalid&lt;/code&gt;, &lt;code&gt;:nilify&lt;/code&gt;, or &lt;code&gt;:delete&lt;/code&gt;. See &lt;a href=&quot;ecto.changeset&quot;&gt;&lt;code&gt;Ecto.Changeset&lt;/code&gt;&lt;/a&gt;'s section about &quot;:on_replace&quot; for more info.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="844fb3290318c6f6b2b046e1da510e82c54ccd88" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:on_replace&lt;/code&gt; - The action taken on associations when the record is replaced when casting or manipulating parent changeset. May be &lt;code&gt;:raise&lt;/code&gt; (default), &lt;code&gt;:mark_as_invalid&lt;/code&gt;, or &lt;code&gt;:delete&lt;/code&gt;. &lt;code&gt;:delete&lt;/code&gt; will only remove data from the join source, never the associated records. See &lt;a href=&quot;ecto.changeset&quot;&gt;&lt;code&gt;Ecto.Changeset&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s section on related data for more info.</source>
          <target state="translated">&lt;code&gt;:on_replace&lt;/code&gt; - Действие, выполняемое с ассоциациями, когда запись заменяется при приведении родительского набора изменений или манипулировании им. Может быть &lt;code&gt;:raise&lt;/code&gt; (по умолчанию) &lt;code&gt;:mark_as_invalid&lt;/code&gt; или &lt;code&gt;:delete&lt;/code&gt; . &lt;code&gt;:delete&lt;/code&gt; удалит только данные из источника соединения, но не связанные записи. См. &lt;a href=&quot;ecto.changeset&quot;&gt; &lt;code&gt;Ecto.Changeset&lt;/code&gt; &lt;/a&gt; о связанных данных для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="d8b2bfd32d08d1d1e79784d9279ac5dcbab7e76a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:on_replace&lt;/code&gt; - The action taken on associations when the record is replaced when casting or manipulating parent changeset. May be &lt;code&gt;:raise&lt;/code&gt; (default), &lt;code&gt;:mark_as_invalid&lt;/code&gt;, or &lt;code&gt;:delete&lt;/code&gt;. &lt;code&gt;:delete&lt;/code&gt; will only remove data from the join source, never the associated records. See &lt;a href=&quot;ecto.changeset&quot;&gt;&lt;code&gt;Ecto.Changeset&lt;/code&gt;&lt;/a&gt;'s section on related data for more info.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27cfdfa005149562342843dc8cc51534321afc27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:only&lt;/code&gt; - a list of actions to generate routes for, for example: &lt;code&gt;[:show, :edit]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:only&lt;/code&gt; - список действий для создания маршрутов, например: &lt;code&gt;[:show, :edit]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c5de1fa1c53f8ec43a6ab8470ad5cc1ef909d931" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:only&lt;/code&gt; - filters which requests to serve. This is useful to avoid file system traversals on every request when this plug is mounted at &lt;code&gt;&quot;/&quot;&lt;/code&gt;. For example, if &lt;code&gt;only: [&quot;images&quot;, &quot;favicon.ico&quot;]&lt;/code&gt; is specified, only files in the &quot;images&quot; directory and the &quot;favicon.ico&quot; file will be served by &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Plug.Static&lt;/code&gt;&lt;/a&gt;. Note that &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Plug.Static&lt;/code&gt;&lt;/a&gt; matches these filters against request uri and not against the filesystem. When requesting a file with name containing non-ascii or special characters, you should use urlencoded form. For example, you should write &lt;code&gt;only: [&quot;file%20name&quot;]&lt;/code&gt; instead of &lt;code&gt;only: [&quot;file&amp;nbsp;name&quot;]&lt;/code&gt;. Defaults to &lt;code&gt;nil&lt;/code&gt; (no filtering).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fd14e230a80329cee19edeab42d1c11533f2c63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:only&lt;/code&gt; - filters which requests to serve. This is useful to avoid file system traversals on every request when this plug is mounted at &lt;code&gt;&quot;/&quot;&lt;/code&gt;. For example, if &lt;code&gt;only: [&quot;images&quot;, &quot;favicon.ico&quot;]&lt;/code&gt; is specified, only files in the &amp;ldquo;images&amp;rdquo; directory and the exact &amp;ldquo;favicon.ico&amp;rdquo; file will be served by &lt;a href=&quot;plug.static#content&quot;&gt;&lt;code&gt;Plug.Static&lt;/code&gt;&lt;/a&gt;. Defaults to &lt;code&gt;nil&lt;/code&gt; (no filtering).</source>
          <target state="translated">&lt;code&gt;:only&lt;/code&gt; - фильтрует запросы к обслуживанию. Это полезно, чтобы избежать обхода файловой системы при каждом запросе, когда этот плагин смонтирован в &lt;code&gt;&quot;/&quot;&lt;/code&gt; . Например, если указано &lt;code&gt;only: [&quot;images&quot;, &quot;favicon.ico&quot;]&lt;/code&gt; , &lt;a href=&quot;plug.static#content&quot;&gt; &lt;code&gt;Plug.Static&lt;/code&gt; &lt;/a&gt; будет обслуживать только файлы в каталоге &quot;images&quot; и точный файл &quot;favicon.ico&quot; . По умолчанию - &lt;code&gt;nil&lt;/code&gt; (без фильтрации).</target>
        </trans-unit>
        <trans-unit id="da9217b8a65a1547b898f23cc6ded3c563e3c2eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:only_matching&lt;/code&gt; - a relaxed version of &lt;code&gt;:only&lt;/code&gt; that will serve any request as long as one of the given values matches the given path. For example, &lt;code&gt;only_matching: [&quot;images&quot;, &quot;favicon&quot;]&lt;/code&gt; will match any request that starts at &quot;images&quot; or &quot;favicon&quot;, be it &quot;/images/foo.png&quot;, &quot;/images-high/foo.png&quot;, &quot;/favicon.ico&quot; or &quot;/favicon-high.ico&quot;. Such matches are useful when serving digested files at the root. Defaults to &lt;code&gt;nil&lt;/code&gt; (no filtering).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c267ddde67ce036a5c4504b099c56bc9ccb01e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:only_matching&lt;/code&gt; - a relaxed version of &lt;code&gt;:only&lt;/code&gt; that will serve any request as long as one of the given values matches the given path. For example, &lt;code&gt;only_matching: [&quot;images&quot;, &quot;favicon&quot;]&lt;/code&gt; will match any request that starts at &amp;ldquo;images&amp;rdquo; or &amp;ldquo;favicon&amp;rdquo;, be it &amp;ldquo;/images/foo.png&amp;rdquo;, &amp;ldquo;/images-high/foo.png&amp;rdquo;, &amp;ldquo;/favicon.ico&amp;rdquo; or &amp;ldquo;/favicon-high.ico&amp;rdquo;. Such matches are useful when serving digested files at the root. Defaults to &lt;code&gt;nil&lt;/code&gt; (no filtering).</source>
          <target state="translated">&lt;code&gt;:only_matching&lt;/code&gt; - смягченная версия &lt;code&gt;:only&lt;/code&gt; , которая будет обслуживать любой запрос, пока одно из заданных значений соответствует заданному пути. Например, &lt;code&gt;only_matching: [&quot;images&quot;, &quot;favicon&quot;]&lt;/code&gt; будет соответствовать любому запросу, который начинается с &quot;images&quot; или &quot;favicon&quot;, будь то &quot;/images/foo.png&quot;, &quot;/images-high/foo.png&quot; , &amp;laquo;/Favicon.ico&amp;raquo; или &amp;laquo;/favicon-high.ico&amp;raquo;. Такие совпадения полезны при обслуживании переваренных файлов в корне. По умолчанию - &lt;code&gt;nil&lt;/code&gt; (без фильтрации).</target>
        </trans-unit>
        <trans-unit id="5ed2f7d6983bc28613389876ddbab4468a73de81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:options&lt;/code&gt; - a copy of the options given when creating the form via &lt;a href=&quot;#form_for/4&quot;&gt;&lt;code&gt;form_for/4&lt;/code&gt;&lt;/a&gt; without any form data specific key</source>
          <target state="translated">&lt;code&gt;:options&lt;/code&gt; - копия параметров, заданных при создании формы через &lt;a href=&quot;#form_for/4&quot;&gt; &lt;code&gt;form_for/4&lt;/code&gt; ,&lt;/a&gt; без какого-либо ключа для данных формы</target>
        </trans-unit>
        <trans-unit id="b7d10342b59bdb663da104fa1f9d4292eb427c16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:options&lt;/code&gt; - a keyword list of transport options, often given by developers when configuring the transport. It must include a &lt;code&gt;:serializer&lt;/code&gt; field with the list of serializers and their requirements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3c674ffb235d5e9926a70a616c567c44e74fee6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:options&lt;/code&gt; - extra options given to the repo operation under &lt;code&gt;:telemetry_options&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="640dfc213bcbd594b45a98af03b8044792f7832e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:otp_app&lt;/code&gt; - the OTP application that is using Plug. This option is used to filter stacktraces that belong only to the given application.</source>
          <target state="translated">&lt;code&gt;:otp_app&lt;/code&gt; - приложение OTP, использующее Plug. Эта опция используется для фильтрации трассировок стека, которые принадлежат только данному приложению.</target>
        </trans-unit>
        <trans-unit id="f7894e4a842f4a54d41c419ce6d8ea5b5aafe520" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:param&lt;/code&gt; - the name of the parameter for this resource, defaults to &lt;code&gt;&quot;id&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:param&lt;/code&gt; - имя параметра для этого ресурса, по умолчанию &lt;code&gt;&quot;id&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6c9fa380b00c26bfa376a0b19ffe040eed57ad1d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:params&lt;/code&gt; - the connection parameters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="869dff8b8f05c3070641e826e9117b08f19cad43" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:params&lt;/code&gt; - the parameters associated to this form in case they were sent as part of a previous request</source>
          <target state="translated">&lt;code&gt;:params&lt;/code&gt; - параметры, связанные с этой формой в случае, если они были отправлены как часть предыдущего запроса</target>
        </trans-unit>
        <trans-unit id="2ea7344066f48834b00abe7b3119657eeac373c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:params&lt;/code&gt; - the query parameters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8de93a73bd6c97ce19ccffd3143d9b2abe0b84f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:parsers&lt;/code&gt; - a list of modules or atoms of built-in parsers to be invoked for parsing. These modules need to implement the behaviour outlined in this module.</source>
          <target state="translated">&lt;code&gt;:parsers&lt;/code&gt; - список модулей или атомов встроенных парсеров, которые будут вызываться для анализа. Эти модули должны реализовывать поведение, описанное в этом модуле.</target>
        </trans-unit>
        <trans-unit id="3dd8da418df4c1b64403c74f603251d47044dfbf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:parsers&lt;/code&gt; - a list of modules to be invoked for parsing. These modules need to implement the behaviour outlined in this module.</source>
          <target state="translated">&lt;code&gt;:parsers&lt;/code&gt; - список модулей, которые будут вызываться для анализа. Эти модули должны реализовывать поведение, описанное в этом модуле.</target>
        </trans-unit>
        <trans-unit id="c9d410c45c3f5a6dc5c2b5f3a3f1eac7656bd439" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:partial_content&lt;/code&gt; - 206</source>
          <target state="translated">&lt;code&gt;:partial_content&lt;/code&gt; - 206</target>
        </trans-unit>
        <trans-unit id="e8c680394ea9ae3f6767f1bd61e517ff3c80f371" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:partitions&lt;/code&gt; - each channel is spawned under a supervisor. This option controls how many supervisors will be spawned to handle channels. Defaults to the number of cores.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e84ed400d3aee76e87236f79880036f476660d27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:pass&lt;/code&gt; - an optional list of MIME type strings that are allowed to pass through. Any mime not handled by a parser and not explicitly listed in &lt;code&gt;:pass&lt;/code&gt; will &lt;code&gt;raise UnsupportedMediaTypeError&lt;/code&gt;. For example:</source>
          <target state="translated">&lt;code&gt;:pass&lt;/code&gt; - необязательный список строк типа MIME, которым разрешено проходить. Любая mime, не обрабатываемая анализатором и явно не указанная в &lt;code&gt;:pass&lt;/code&gt; , &lt;code&gt;raise UnsupportedMediaTypeError&lt;/code&gt; . Например:</target>
        </trans-unit>
        <trans-unit id="b026b9bed71ec6c0e371f86251a86ba0a516888a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:password&lt;/code&gt; - the expected password</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46b51bfe1b3585fe849b2f921eb29ac087c5bc20" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:path&lt;/code&gt; - a string containing the path scope</source>
          <target state="translated">&lt;code&gt;:path&lt;/code&gt; - строка, содержащая область видимости пути</target>
        </trans-unit>
        <trans-unit id="694acd93c241ed28c36669130e758c34ec3103d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:path&lt;/code&gt; - a string containing the path scope.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c369f0ee383cca445a4c186bacd5c7cfb718685" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:path&lt;/code&gt; - see &lt;a href=&quot;plug.conn#put_resp_cookie/4&quot;&gt;&lt;code&gt;Plug.Conn.put_resp_cookie/4&lt;/code&gt;&lt;/a&gt;;</source>
          <target state="translated">&lt;code&gt;:path&lt;/code&gt; - см. &lt;a href=&quot;plug.conn#put_resp_cookie/4&quot;&gt; &lt;code&gt;Plug.Conn.put_resp_cookie/4&lt;/code&gt; &lt;/a&gt; ;</target>
        </trans-unit>
        <trans-unit id="92f681689dfe8e678c68981de01b91cfd0ddeb36" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:path&lt;/code&gt; - the optional path to search for templates within the &lt;code&gt;:root&lt;/code&gt;. Defaults to the underscored view module name. A blank string may be provided to use the &lt;code&gt;:root&lt;/code&gt; path directly as the template lookup path</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92bb9babd80891d47cca1bb7895d16a6bf798944" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:path&lt;/code&gt; - the optional path to search for templates within the &lt;code&gt;:root&lt;/code&gt;. Defaults to the underscored view module name. A blank string may be provided to use the &lt;code&gt;:root&lt;/code&gt; path directly as the template lookup path.</source>
          <target state="translated">&lt;code&gt;:path&lt;/code&gt; - дополнительный путь для поиска шаблонов в &lt;code&gt;:root&lt;/code&gt; . По умолчанию используется подчеркнутое имя модуля представления. Может быть предоставлена ​​пустая строка для использования пути &lt;code&gt;:root&lt;/code&gt; непосредственно в качестве пути поиска шаблона.</target>
        </trans-unit>
        <trans-unit id="937c2840f349869eb9816de19e316fcd8dfd53d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:path&lt;/code&gt; - the path the cookie applies to</source>
          <target state="translated">&lt;code&gt;:path&lt;/code&gt; - путь, к которому относится cookie</target>
        </trans-unit>
        <trans-unit id="f04805a1cfb87d011b17b9b45df85be07773e0f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:path&lt;/code&gt; - the path to the uploaded file on the filesystem</source>
          <target state="translated">&lt;code&gt;:path&lt;/code&gt; - путь к загруженному файлу в файловой системе</target>
        </trans-unit>
        <trans-unit id="4ae2f5e6bd186ea684dbac1a39695b6b7c39617a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:path&lt;/code&gt; - the path to use for the transport. Will default to the transport name (&quot;/websocket&quot; or &quot;/longpoll&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b47a416c1b7794c3075124b79fc2353b6090971" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:path_params&lt;/code&gt; - the map of runtime path params</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8991d2eb911db320fd9b665bb9f5125b7381f8f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:pattern&lt;/code&gt; - the wildcard pattern to apply to the root when finding templates. Default &lt;code&gt;&quot;*&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:pattern&lt;/code&gt; - шаблон подстановки, применяемый к корню при поиске шаблонов. По умолчанию &lt;code&gt;&quot;*&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="43c1da7edda2bf8e8896c6b3a76b5dd05d782135" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:payload&lt;/code&gt; - The message payload</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55ef7532123b8aefaf1f065a50884cbe1b9d63f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:payload&lt;/code&gt; - The reply payload</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb60c7fd4447eb492c95042d52a62752907b0880" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:payment_required&lt;/code&gt; - 402</source>
          <target state="translated">&lt;code&gt;:payment_required&lt;/code&gt; - 402</target>
        </trans-unit>
        <trans-unit id="c55df5481491397e8776e7c05b19a528547750bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:peer_data&lt;/code&gt; - the result of &lt;a href=&quot;../plug/plug.conn#get_peer_data/1&quot;&gt;&lt;code&gt;Plug.Conn.get_peer_data/1&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f93bc16152bc39a797a5e1c1c00bd1f0fafdc157" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:permanent_redirect&lt;/code&gt; - 308</source>
          <target state="translated">&lt;code&gt;:permanent_redirect&lt;/code&gt; - 308</target>
        </trans-unit>
        <trans-unit id="91f63fbe840bc33af07e7e306d4ed7d6dd88cb37" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:permdown_period&lt;/code&gt; - The interval in milliseconds to flag a replica as permanently down, and discard its state. Note: This must be at least greater than the &lt;code&gt;down_period&lt;/code&gt;. Default &lt;code&gt;1_200_000&lt;/code&gt; (20 minutes)</source>
          <target state="translated">&lt;code&gt;:permdown_period&lt;/code&gt; - Интервал в миллисекундах, в течение которого реплика помечается как постоянно неработающая и отменяется ее состояние. Примечание: это должно быть как минимум больше, чем &lt;code&gt;down_period&lt;/code&gt; . По умолчанию &lt;code&gt;1_200_000&lt;/code&gt; (20 минут)</target>
        </trans-unit>
        <trans-unit id="0ccd1ffd5ae833bfd2abea7b14d03fbc93b59a0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:phoenix_channel_join&lt;/code&gt; - the joining of a channel. The &lt;code&gt;%Phoenix.Socket{}&lt;/code&gt; and join params are passed as runtime metadata via &lt;code&gt;:socket&lt;/code&gt; and &lt;code&gt;:params&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:phoenix_channel_join&lt;/code&gt; - присоединение к каналу. Параметры &lt;code&gt;%Phoenix.Socket{}&lt;/code&gt; и соединения передаются как метаданные времени выполнения через &lt;code&gt;:socket&lt;/code&gt; и &lt;code&gt;:params&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8c8e50984d9e546ac6e6d44f2b7e63797d8782a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:phoenix_channel_receive&lt;/code&gt; - the receipt of an incoming message over a channel. The &lt;code&gt;%Phoenix.Socket{}&lt;/code&gt;, payload, event, and ref are passed as runtime metadata via &lt;code&gt;:socket&lt;/code&gt;, &lt;code&gt;:params&lt;/code&gt;, &lt;code&gt;:event&lt;/code&gt;, and &lt;code&gt;:ref&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:phoenix_channel_receive&lt;/code&gt; - получение входящего сообщения по каналу. &lt;code&gt;%Phoenix.Socket{}&lt;/code&gt; , полезная нагрузка, событие и исй передаются как метаданные во время выполнения с помощью &lt;code&gt;:socket&lt;/code&gt; , &lt;code&gt;:params&lt;/code&gt; , &lt;code&gt;:event&lt;/code&gt; , и &lt;code&gt;:ref&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ad5e293f75994ab37106ad6b6cbb01434ceff71c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:phoenix_controller_call&lt;/code&gt; - it&amp;rsquo;s the whole controller pipeline. The &lt;code&gt;%Plug.Conn{}&lt;/code&gt; is passed as runtime metadata.</source>
          <target state="translated">&lt;code&gt;:phoenix_controller_call&lt;/code&gt; - это весь конвейер контроллера. &lt;code&gt;%Plug.Conn{}&lt;/code&gt; передается в качестве среды выполнения метаданных.</target>
        </trans-unit>
        <trans-unit id="54d3f758bdaf1f9c4b5e0046a9d59d1fe121146b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:phoenix_controller_render&lt;/code&gt; - the rendering of a view from a controller. The map of runtime metadata passed to instrumentation callbacks has the &lt;code&gt;:view&lt;/code&gt; key - for the name of the view, e.g. &lt;code&gt;HexWeb.ErrorView&lt;/code&gt;, the &lt;code&gt;:template&lt;/code&gt; key - for the name of the template, e.g., &lt;code&gt;&quot;index.html&quot;&lt;/code&gt;, the &lt;code&gt;:format&lt;/code&gt; key - for the format of the template, and the &lt;code&gt;:conn&lt;/code&gt; key - containing the &lt;code&gt;%Plug.Conn{}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:phoenix_controller_render&lt;/code&gt; - рендеринг вида с контроллера. Карта метаданных времени выполнения, переданных в обратные вызовы инструментария, имеет ключ &lt;code&gt;:view&lt;/code&gt; - для имени представления, например &lt;code&gt;HexWeb.ErrorView&lt;/code&gt; , ключ &lt;code&gt;:template&lt;/code&gt; - для имени шаблона, например, &lt;code&gt;&quot;index.html&quot;&lt;/code&gt; , &lt;code&gt;:format&lt;/code&gt; ключ - для формата шаблона и ключ &lt;code&gt;:conn&lt;/code&gt; - содержащий &lt;code&gt;%Plug.Conn{}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e11868cf45712196496b09c4bcbe249913b81350" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:pipe_through&lt;/code&gt; - the list of pipelines for the route's scope, for example &lt;code&gt;[:browser]&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="689265e1d0ab85996aec11243c112640e3242b27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:plug&lt;/code&gt; - the plug to dipatch the route to, for example &lt;code&gt;AppWeb.PostController&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b93d9b94bb5193adbe276ef61bdd69c426d9577" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:plug_opts&lt;/code&gt; - the options to pass when calling the plug, for example: &lt;code&gt;:index&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1e046f0293309f6f3582e1fd7022a90e60ababc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:pool_size&lt;/code&gt; - Both the size of the local pubsub pool and subscriber shard size. Defaults to the number of schedulers (cores). A single pool is often enough for most use-cases, but for high subscriber counts on single topics or greater than 1M clients, a pool size equal to the number of schedulers (cores) is a well rounded size.</source>
          <target state="translated">&lt;code&gt;:pool_size&lt;/code&gt; - Размер локального пула pubsub и размер шарда подписчика. По умолчанию количество планировщиков (ядер). Одного пула часто бывает достаточно для большинства случаев использования, но для большого количества подписчиков по отдельным темам или более 1 миллиона клиентов размер пула, равный количеству планировщиков (ядер), является хорошо округленным размером.</target>
        </trans-unit>
        <trans-unit id="ef90387cbb20edcd1f6df2b5a63794bd1ec958c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:pool_size&lt;/code&gt; - The number of tracker shards to launch. Default &lt;code&gt;1&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:pool_size&lt;/code&gt; - Количество запускаемых шардов трекера. По умолчанию &lt;code&gt;1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4d187c76883606972f56ddf132519617b054c317" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:pool_size&lt;/code&gt; - number of pubsub partitions to launch (defaults to one partition for every 4 cores)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8190415c23ff39b8c31e3bb62c4f7e15299bf630" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:pool_size&lt;/code&gt; - the size of the pool used by the connection module. Defaults to &lt;code&gt;10&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5330c2a2f142d1f7205e34172070cc053b8fd735" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:pool_timeout&lt;/code&gt; - The time in milliseconds to wait for calls to the pool to finish, &lt;code&gt;:infinity&lt;/code&gt; will wait indefinitely (default: 5000);</source>
          <target state="translated">&lt;code&gt;:pool_timeout&lt;/code&gt; - время в миллисекундах ожидания завершения вызовов пула &lt;code&gt;:infinity&lt;/code&gt; будет ждать бесконечно (по умолчанию: 5000);</target>
        </trans-unit>
        <trans-unit id="79954a1029adc4da09f5df84e4fca73a7be31007" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:precision&lt;/code&gt; - Allowed values: &lt;code&gt;:minute&lt;/code&gt;, &lt;code&gt;:second&lt;/code&gt;, &lt;code&gt;:millisecond&lt;/code&gt;. Defaults to &lt;code&gt;:minute&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:precision&lt;/code&gt; - Допустимые значения: &lt;code&gt;:minute&lt;/code&gt; , &lt;code&gt;:second&lt;/code&gt; , &lt;code&gt;:millisecond&lt;/code&gt; . По умолчанию &lt;code&gt;:minute&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="013651bc6203616056f44c2a3c516e8fa42fb3ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:precondition_failed&lt;/code&gt; - 412</source>
          <target state="translated">&lt;code&gt;:precondition_failed&lt;/code&gt; - 412</target>
        </trans-unit>
        <trans-unit id="cdec8cf60a5728690bc7510c058fbfdee46ea819" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:precondition_required&lt;/code&gt; - 428</source>
          <target state="translated">&lt;code&gt;:precondition_required&lt;/code&gt; - 428</target>
        </trans-unit>
        <trans-unit id="764f7275613e6e73df0d0d265b74ea153070ab11" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:prefix&lt;/code&gt; - The prefix to run the query on (such as the schema path in Postgres or the database in MySQL).</source>
          <target state="translated">&lt;code&gt;:prefix&lt;/code&gt; - Префикс, по которому будет выполняться запрос (например, путь схемы в Postgres или база данных в MySQL).</target>
        </trans-unit>
        <trans-unit id="1d49b478f7db8564f0622d0434f70d794aafb9cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:prefix&lt;/code&gt; - The prefix to run the query on (such as the schema path in Postgres or the database in MySQL). See &lt;a href=&quot;ecto.repo&quot;&gt;&lt;code&gt;Ecto.Repo&lt;/code&gt;&lt;/a&gt; documentation for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="629ac603439d4a04960359b6d6822fcb2dc1986d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:prefix&lt;/code&gt; - The prefix to run the query on (such as the schema path in Postgres or the database in MySQL). This overrides the prefix set in the query</source>
          <target state="translated">&lt;code&gt;:prefix&lt;/code&gt; - Префикс, по которому будет выполняться запрос (например, путь схемы в Postgres или база данных в MySQL). Это отменяет префикс, установленный в запросе</target>
        </trans-unit>
        <trans-unit id="d6ca72fdb79f377a1b997a59d339780ea2a2999d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:prefix&lt;/code&gt; - The prefix to run the query on (such as the schema path in Postgres or the database in MySQL). This overrides the prefix set in the query and any &lt;code&gt;@schema_prefix&lt;/code&gt; set any schemas. Also, the &lt;code&gt;@schema_prefix&lt;/code&gt; for the parent record will override all default &lt;code&gt;@schema_prefix&lt;/code&gt;s set in any child schemas for associations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75103d94a511e185056ae1b29b31bd9a063d8ef5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:prefix&lt;/code&gt; - The prefix to run the query on (such as the schema path in Postgres or the database in MySQL). This overrides the prefix set in the query and any &lt;code&gt;@schema_prefix&lt;/code&gt; set in the schema.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a14908ef534f4b625d8b077ea38351560c9304c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:prefix&lt;/code&gt; - The prefix to run the query on (such as the schema path in Postgres or the database in MySQL). This overrides the prefix set in the query.</source>
          <target state="translated">&lt;code&gt;:prefix&lt;/code&gt; - Префикс, по которому будет выполняться запрос (например, путь схемы в Postgres или база данных в MySQL). Это отменяет префикс, установленный в запросе.</target>
        </trans-unit>
        <trans-unit id="bdea7f5b8c32950f2087bb448798903b88f2e662" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:prefix&lt;/code&gt; - The prefix to run the query on (such as the schema path in Postgres or the database in MySQL). This overrides the prefix set in the struct.</source>
          <target state="translated">&lt;code&gt;:prefix&lt;/code&gt; - Префикс, по которому будет выполняться запрос (например, путь схемы в Postgres или база данных в MySQL). Это отменяет префикс, установленный в структуре.</target>
        </trans-unit>
        <trans-unit id="adc7c635109f4e22d933eaf2b58c8813454fe72f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:prefix&lt;/code&gt; - The prefix to run the query on (such as the schema path in Postgres or the database in MySQL). This will be applied to all &lt;code&gt;from&lt;/code&gt; and &lt;code&gt;join&lt;/code&gt;s in the query that did not have a prefix previously given either via the &lt;code&gt;:prefix&lt;/code&gt; option on &lt;code&gt;join&lt;/code&gt;/&lt;code&gt;from&lt;/code&gt; or via &lt;code&gt;@schema_prefix&lt;/code&gt; in the schema. For more information see the &quot;Query Prefix&quot; section of the &lt;a href=&quot;ecto.query&quot;&gt;&lt;code&gt;Ecto.Query&lt;/code&gt;&lt;/a&gt; documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20b56d800e66aad1a47e7e4542338a2515ff6530" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:prefix&lt;/code&gt; - changes the struct query prefix</source>
          <target state="translated">&lt;code&gt;:prefix&lt;/code&gt; - изменяет префикс запроса структуры</target>
        </trans-unit>
        <trans-unit id="4b213c5d36adccc9be63fa251be2f3c5defdfe7d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:prefix&lt;/code&gt; - the prefix to be used for the join when issuing a database query</source>
          <target state="translated">&lt;code&gt;:prefix&lt;/code&gt; - префикс, который будет использоваться для соединения при выдаче запроса к базе данных</target>
        </trans-unit>
        <trans-unit id="e115b8b77d4d8e9016e9d202b3684a05f1db2776" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:prefix&lt;/code&gt; - the prefix to fetch preloads from. By default, queries will use the same prefix as the one in the given collection. This option allows the prefix to be changed.</source>
          <target state="translated">&lt;code&gt;:prefix&lt;/code&gt; - префикс, из которого будет извлекаться предварительная загрузка. По умолчанию запросы будут использовать тот же префикс, что и в данной коллекции. Эта опция позволяет изменять префикс.</target>
        </trans-unit>
        <trans-unit id="3c84b437d01447da05984518a5ef29f4afe8d85b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:preload&lt;/code&gt; - a boolean to request inclusion on the HSTS preload list (for full set of required flags, see: &lt;a href=&quot;https://hstspreload.org&quot;&gt;Chromium HSTS submission site&lt;/a&gt;), defaults to &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:preload&lt;/code&gt; - логическое значение для запроса включения в список предварительной загрузки HSTS (полный набор обязательных флагов см. на сайте &lt;a href=&quot;https://hstspreload.org&quot;&gt;отправки Chromium HSTS&lt;/a&gt; ), по умолчанию &lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6e8d5b827dee9e6f35f2119d27db1d833e873ea4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:prepend&lt;/code&gt; - the values to prepend when rendering. This only applies if the field value is a list and no parameters were sent through the form.</source>
          <target state="translated">&lt;code&gt;:prepend&lt;/code&gt; - значения, добавляемые при рендеринге. Это применимо только в том случае, если значение поля является списком и никакие параметры не были отправлены через форму.</target>
        </trans-unit>
        <trans-unit id="3ce27bc704cc6eacbddcfd9059c0d5733b4747b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:primary&lt;/code&gt; - primary color</source>
          <target state="translated">&lt;code&gt;:primary&lt;/code&gt; - основной цвет</target>
        </trans-unit>
        <trans-unit id="6ba6b986a26fb6fcabbb8c530cd3493a06ab7fbf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:primary_key&lt;/code&gt; - If the underlying belongs_to field is a primary key</source>
          <target state="translated">&lt;code&gt;:primary_key&lt;/code&gt; - Если базовое поле own_to является первичным ключом</target>
        </trans-unit>
        <trans-unit id="21c53f26c5582b7018fd51a02e94e7a3f0b767e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:primary_key&lt;/code&gt; - When true, the field is used as part of the composite primary key</source>
          <target state="translated">&lt;code&gt;:primary_key&lt;/code&gt; - Когда true, поле используется как часть составного первичного ключа</target>
        </trans-unit>
        <trans-unit id="eb61d1707351f48773818b906d877e33ae18141a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:primary_key&lt;/code&gt; - When true, the field is used as part of the composite primary key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a927b962360ba8ef4d1401ceab238702f2c6873c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:priv&lt;/code&gt; - the directory where to keep repository data, like migrations, schema and more. Defaults to &quot;priv/YOUR_REPO&quot;. It must always point to a subdirectory inside the priv directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52e24173945204f2525687d7f9c5b3fdd7f53b46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:priv&lt;/code&gt; - the directory where to keep repository data, like migrations, schema and more. Defaults to &amp;ldquo;priv/YOUR_REPO&amp;rdquo;. It must always point to a subdirectory inside the priv directory.</source>
          <target state="translated">&lt;code&gt;:priv&lt;/code&gt; - каталог, в котором хранятся данные репозитория, такие как миграции, схемы и многое другое. По умолчанию &quot;priv / YOUR_REPO&quot;. Он всегда должен указывать на подкаталог внутри каталога priv.</target>
        </trans-unit>
        <trans-unit id="830636ad021bdbbb62e53c76f5db894aa7b3f1dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:private&lt;/code&gt; - a map of private data to merge into the connection when a route matches</source>
          <target state="translated">&lt;code&gt;:private&lt;/code&gt; - карта приватных данных для объединения в соединение при совпадении маршрута</target>
        </trans-unit>
        <trans-unit id="dca31a09eb42a189835b658a344d12122ef02fc9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:private&lt;/code&gt; - assigns values to &lt;code&gt;conn.private&lt;/code&gt; for use in the match</source>
          <target state="translated">&lt;code&gt;:private&lt;/code&gt; - присваивает значения &lt;code&gt;conn.private&lt;/code&gt; для использования в матче</target>
        </trans-unit>
        <trans-unit id="3888e25f02ca9f87737ca54bf88d93b3589d4b7d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:private&lt;/code&gt; - values for &lt;code&gt;conn.private&lt;/code&gt;, exactly like in &lt;a href=&quot;#match/3&quot;&gt;&lt;code&gt;match/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;:private&lt;/code&gt; - значения для &lt;code&gt;conn.private&lt;/code&gt; , как в &lt;a href=&quot;#match/3&quot;&gt; &lt;code&gt;match/3&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="43050e79829cae874d26dda3df328b34741cfd54" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:processing&lt;/code&gt; - 102</source>
          <target state="translated">&lt;code&gt;:processing&lt;/code&gt; - 102</target>
        </trans-unit>
        <trans-unit id="68b12909c5ff228f4f702a71c0af4412f44f1114" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:prompt&lt;/code&gt; - an option to include at the top of the options with the given prompt text</source>
          <target state="translated">&lt;code&gt;:prompt&lt;/code&gt; - опция для включения в верхнюю часть опций с заданным текстом подсказки</target>
        </trans-unit>
        <trans-unit id="9e8c91ec2979623f101414a8c677665eb162a94f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:proxy_authentication_required&lt;/code&gt; - 407</source>
          <target state="translated">&lt;code&gt;:proxy_authentication_required&lt;/code&gt; - 407</target>
        </trans-unit>
        <trans-unit id="d3a82e258df9dc4b9115cebc03e621b42ce374f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:pubsub&lt;/code&gt; - configuration for this endpoint&amp;rsquo;s pubsub adapter. Configuration either requires a &lt;code&gt;:name&lt;/code&gt; of the registered pubsub server or a &lt;code&gt;:name&lt;/code&gt; and &lt;code&gt;:adapter&lt;/code&gt; pair. The pubsub name and adapter are compile time configuration, while the remaining options are runtime. The given adapter and name pair will be started as part of the supervision tree. If no adapter is specified, the pubsub system will work by sending events and subscribing to the given name. Defaults to:</source>
          <target state="translated">&lt;code&gt;:pubsub&lt;/code&gt; - конфигурация адаптера pubsub этой конечной точки. Для настройки требуется либо &lt;code&gt;:name&lt;/code&gt; зарегистрированного сервера pubsub, либо пара &lt;code&gt;:name&lt;/code&gt; и &lt;code&gt;:adapter&lt;/code&gt; . Имя pubsub и адаптер - это конфигурация времени компиляции, а остальные параметры - время выполнения. Данная пара адаптер и имя будет запущена как часть дерева надзора. Если адаптер не указан, система pubsub будет работать, отправляя события и подписываясь на данное имя. По умолчанию:</target>
        </trans-unit>
        <trans-unit id="fcfa9af1a9261fc9d9cfc91573aa9828119bd372" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:pubsub_server&lt;/code&gt; - The name of the PubSub server, such as: &lt;code&gt;MyApp.PubSub&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:pubsub_server&lt;/code&gt; - Имя сервера PubSub, например: &lt;code&gt;MyApp.PubSub&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="819bc79df87251a87c6fc00ada13cdeb957947bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:pubsub_server&lt;/code&gt; - The registered name of the socket's pubsub server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f093ea16a035ae1f408d78f117e6fc4b965ccace" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:pubsub_server&lt;/code&gt; - the name of the pubsub server to use in channels and via the Endpoint broadcast functions. The PubSub server is typically started in your supervision tree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5db854f1f93f7c823c7cfe641436460bb2b88f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:pubsub_timeout_ms&lt;/code&gt; - how long a request can wait for the pubsub layer to respond</source>
          <target state="translated">&lt;code&gt;:pubsub_timeout_ms&lt;/code&gt; - как долго запрос может ждать ответа от уровня pubsub</target>
        </trans-unit>
        <trans-unit id="c7b476fdcf6dc3a5aaa8d8ede9fcb7eaa7017174" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:put_default_views&lt;/code&gt; - controls whether the default view and layout should be set or not</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6bf6a7a0ed8f21df63f951833c190f4fbafd817" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:query&lt;/code&gt; - the query sent to the database as a string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54a40c66bc9e73df024ac6ea780abb3e40bf3848" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:query_string_length&lt;/code&gt; - the maximum allowed size for query strings</source>
          <target state="translated">&lt;code&gt;:query_string_length&lt;/code&gt; - максимально допустимый размер для строк запроса</target>
        </trans-unit>
        <trans-unit id="2b27ceebda55141016827e0e8b190ef9b364c6b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:query_time&lt;/code&gt; - the time spent executing the query</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7e79dd673764b72e973e6427c98c464b5bf5b41" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:queue_time&lt;/code&gt; - the time spent waiting to check out a database connection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11ca3df36fa125e49bc133718c0fb53d6ed82a0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:raise&lt;/code&gt; (default) - do not allow removing association or embedded data via parent changesets</source>
          <target state="translated">&lt;code&gt;:raise&lt;/code&gt; (по умолчанию) - не разрешать удаление ассоциации или встроенных данных через родительские ревизии</target>
        </trans-unit>
        <trans-unit id="310e79cc5e53357bb40f1959a8623fe2afc216f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:raise&lt;/code&gt; - raises if there is a conflicting primary key or unique index</source>
          <target state="translated">&lt;code&gt;:raise&lt;/code&gt; - повышается, если есть конфликтующий первичный ключ или уникальный индекс</target>
        </trans-unit>
        <trans-unit id="4ae51c2f484311c12bc09926a39836c70b3cd554" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:read_after_writes&lt;/code&gt; - When true, the field is always read back from the database after insert and updates.</source>
          <target state="translated">&lt;code&gt;:read_after_writes&lt;/code&gt; - Когда истина, поле всегда считывается из базы данных после вставки и обновления.</target>
        </trans-unit>
        <trans-unit id="f77a2a5ec90ceb7f3f948430516de7ca0e208432" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:read_length&lt;/code&gt; - sets the amount of bytes to read at one time from the underlying socket to fill the chunk, defaults to 1_000_000 bytes</source>
          <target state="translated">&lt;code&gt;:read_length&lt;/code&gt; - устанавливает количество байтов для одновременного чтения из базового сокета для заполнения блока, по умолчанию 1_000_000 байт</target>
        </trans-unit>
        <trans-unit id="2c6246231d2ab9e23a799ece37455f0f6553cfdb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:read_length&lt;/code&gt; - sets the amount of bytes to read at one time from the underlying socket to fill the chunk, defaults to 64_000 bytes</source>
          <target state="translated">&lt;code&gt;:read_length&lt;/code&gt; - устанавливает количество байтов для одновременного чтения из нижележащего сокета для заполнения чанка, по умолчанию 64_000 байт</target>
        </trans-unit>
        <trans-unit id="7c188b3d82d7109000ba05994d2c79f278993e11" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:read_length&lt;/code&gt; - sets the amount of bytes to read at one time from the underlying socket to fill the chunk, defaults to &lt;code&gt;1_000_000&lt;/code&gt; bytes</source>
          <target state="translated">&lt;code&gt;:read_length&lt;/code&gt; - устанавливает количество байтов для одновременного чтения из нижележащего сокета для заполнения чанка, по умолчанию &lt;code&gt;1_000_000&lt;/code&gt; байт</target>
        </trans-unit>
        <trans-unit id="a0c05498fc3486ade2258908b5da532402d8f541" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:read_length&lt;/code&gt; - sets the amount of bytes to read at one time from the underlying socket to fill the chunk, defaults to &lt;code&gt;64_000&lt;/code&gt; bytes</source>
          <target state="translated">&lt;code&gt;:read_length&lt;/code&gt; - устанавливает количество байтов для одновременного чтения из нижележащего сокета для заполнения чанка, по умолчанию &lt;code&gt;64_000&lt;/code&gt; байт</target>
        </trans-unit>
        <trans-unit id="f83e3b91782dce28c09d1451e9abf31267d5c655" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:read_timeout&lt;/code&gt; - sets the timeout for each socket read, defaults to 15_000ms</source>
          <target state="translated">&lt;code&gt;:read_timeout&lt;/code&gt; - устанавливает тайм-аут для каждого чтения сокета, по умолчанию 15_000 мс</target>
        </trans-unit>
        <trans-unit id="4bae7e239d1a025a0175dc644e4120c960f8271d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:read_timeout&lt;/code&gt; - sets the timeout for each socket read, defaults to 5_000ms</source>
          <target state="translated">&lt;code&gt;:read_timeout&lt;/code&gt; - устанавливает тайм-аут для каждого чтения сокета, по умолчанию 5_000 мс</target>
        </trans-unit>
        <trans-unit id="72265eb179ea5c306012bcf24f3670482c781e19" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:read_timeout&lt;/code&gt; - sets the timeout for each socket read, defaults to &lt;code&gt;15_000&lt;/code&gt; milliseconds</source>
          <target state="translated">&lt;code&gt;:read_timeout&lt;/code&gt; - устанавливает тайм-аут для каждого чтения сокета, по умолчанию &lt;code&gt;15_000&lt;/code&gt; миллисекунд</target>
        </trans-unit>
        <trans-unit id="cfe57ed09e9d93ba6ee672dbdaf0fab0933f10e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:read_timeout&lt;/code&gt; - sets the timeout for each socket read, defaults to &lt;code&gt;5_000&lt;/code&gt; milliseconds</source>
          <target state="translated">&lt;code&gt;:read_timeout&lt;/code&gt; - устанавливает тайм-аут для каждого чтения сокета, по умолчанию &lt;code&gt;5_000&lt;/code&gt; миллисекунд</target>
        </trans-unit>
        <trans-unit id="a880dd8aba0da2442f8c6f6bfebd9f6dffacf188" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:realm&lt;/code&gt; - the authentication realm. The value is not fully sanitized, so do not accept user input as the realm and use strings with only alphanumeric characters and space</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="340605b7f466b0f4835dee61c6e92c2d6e8e1292" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:redact&lt;/code&gt; - When true, it will display a value of &lt;code&gt;**redacted**&lt;/code&gt; when inspected in changes inside a &lt;a href=&quot;ecto.changeset&quot;&gt;&lt;code&gt;Ecto.Changeset&lt;/code&gt;&lt;/a&gt; and be excluded from inspect on the schema. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17bf0ef1f286ac7ed3af2863a57a6e5617d4ab64" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:ref&lt;/code&gt; - The latest ref sent by the client</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e6a08646fb9ae129cdb62f039e54bbe767d0aea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:ref&lt;/code&gt; - The unique string ref</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a69da07b1ffbf834c236ad9f8767216a31e57504" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:references&lt;/code&gt; - Sets the key on the current schema to be used for the association, defaults to the primary key on the schema</source>
          <target state="translated">&lt;code&gt;:references&lt;/code&gt; - Устанавливает ключ в текущей схеме, который будет использоваться для ассоциации, по умолчанию - первичный ключ в схеме</target>
        </trans-unit>
        <trans-unit id="86e8fe813b6caa53cedb94d894e8811a742a1866" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:references&lt;/code&gt; - Sets the key on the other schema to be used for the association, defaults to: &lt;code&gt;:id&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:references&lt;/code&gt; - Устанавливает ключ в другой схеме, который будет использоваться для ассоциации, по умолчанию &lt;code&gt;:id&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="599670df538a2700240bfd997b936d7470cb0d01" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:render_errors&lt;/code&gt; - responsible for rendering templates whenever there is a failure in the application. For example, if the application crashes with a 500 error during a HTML request, &lt;code&gt;render(&quot;500.html&quot;, assigns)&lt;/code&gt; will be called in the view given to &lt;code&gt;:render_errors&lt;/code&gt;. Defaults to:</source>
          <target state="translated">&lt;code&gt;:render_errors&lt;/code&gt; - отвечает за рендеринг шаблонов всякий раз, когда в приложении происходит сбой. Например, если приложение вылетает из-за ошибки 500 во время запроса HTML, &lt;code&gt;render(&quot;500.html&quot;, assigns)&lt;/code&gt; будет вызываться в представлении, заданном для &lt;code&gt;:render_errors&lt;/code&gt; . По умолчанию:</target>
        </trans-unit>
        <trans-unit id="8a92f15755a0ef841f41883c9868e884c61231d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:renew&lt;/code&gt; - generates a new session id for the cookie</source>
          <target state="translated">&lt;code&gt;:renew&lt;/code&gt; - генерирует новый идентификатор сеанса для cookie</target>
        </trans-unit>
        <trans-unit id="13fa17bfb9873c86696ea21ecb229f5aaa3eff89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:replace&lt;/code&gt; - the flag to replace the current history or push a new state. Defaults &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b85eae01f76311d1887060b09947de0965be52b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:replace_all&lt;/code&gt; - replace &lt;strong&gt;all&lt;/strong&gt; values on the existing row with the values in the schema/changeset, including fields not explicitly set in the changeset, such as IDs and autogenerated timestamps (&lt;code&gt;inserted_at&lt;/code&gt; and &lt;code&gt;updated_at&lt;/code&gt;). Do not use this option if you have auto-incrementing primary keys, as they will also be replaced. You most likely want to use &lt;code&gt;{:replace_all_except, [:id]}&lt;/code&gt; or &lt;code&gt;{:replace, fields}&lt;/code&gt; explicitly instead. This option requires a schema</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4052af43beffbdcd587ea7b6e987ed3f6c3d1a68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:replace_all&lt;/code&gt; - replace all values on the existing row by the new entry, including values not sent explicitly by Ecto, such as database defaults. This option requires a schema</source>
          <target state="translated">&lt;code&gt;:replace_all&lt;/code&gt; - заменить все значения в существующей строке новой записью, включая значения, не отправленные явно Ecto, например значения по умолчанию для базы данных. Для этого варианта требуется схема</target>
        </trans-unit>
        <trans-unit id="2cbbc605e5415ce257812d988e5f1c12fd4adbfd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:replace_all&lt;/code&gt; - replace all values on the existing row with the values in the schema/changeset, including autogenerated fields such as &lt;code&gt;inserted_at&lt;/code&gt; and &lt;code&gt;updated_at&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:replace_all&lt;/code&gt; - заменить все значения на существующую строке со значениями в схеме / ревизии, в том числе автогенерируемых таких областей, как &lt;code&gt;inserted_at&lt;/code&gt; и &lt;code&gt;updated_at&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="39115569f9165efe155138b893a733a4a0d3ba09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:replace_all_except_primary_key&lt;/code&gt; - same as above except primary keys are not replaced</source>
          <target state="translated">&lt;code&gt;:replace_all_except_primary_key&lt;/code&gt; - то же, что и выше, за исключением того, что первичные ключи не заменяются</target>
        </trans-unit>
        <trans-unit id="45ac56260542e7fa12ad79b078870f94085d9758" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:replace_all_except_primary_key&lt;/code&gt; - same as above except primary keys are not replaced. This option requires a schema</source>
          <target state="translated">&lt;code&gt;:replace_all_except_primary_key&lt;/code&gt; - то же, что и выше, за исключением того, что первичные ключи не заменяются. Для этого варианта требуется схема</target>
        </trans-unit>
        <trans-unit id="ce5282a3ecc8345831d731b15ac903e870b69e7b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:repo&lt;/code&gt; - the Ecto repository</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b86b3e83b36ae0b6a21e944de963f575835de5a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:request_entity_too_large&lt;/code&gt; - 413</source>
          <target state="translated">&lt;code&gt;:request_entity_too_large&lt;/code&gt; - 413</target>
        </trans-unit>
        <trans-unit id="402aa140906e00cd2aecf07fedcb7d718e49e59e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:request_header_fields_too_large&lt;/code&gt; - 431</source>
          <target state="translated">&lt;code&gt;:request_header_fields_too_large&lt;/code&gt; - 431</target>
        </trans-unit>
        <trans-unit id="e6889522b489ed884ca4b90c254728750b7a6006" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:request_timeout&lt;/code&gt; - 408</source>
          <target state="translated">&lt;code&gt;:request_timeout&lt;/code&gt; - 408</target>
        </trans-unit>
        <trans-unit id="996436677292202968baf7f974ad98321099b8b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:request_uri_too_long&lt;/code&gt; - 414</source>
          <target state="translated">&lt;code&gt;:request_uri_too_long&lt;/code&gt; - 414</target>
        </trans-unit>
        <trans-unit id="ba73cd09a4e0330a35f348331300f6dd1a55e4bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:requested_range_not_satisfiable&lt;/code&gt; - 416</source>
          <target state="translated">&lt;code&gt;:requested_range_not_satisfiable&lt;/code&gt; - 416</target>
        </trans-unit>
        <trans-unit id="802773f830ecc9c1ad413351640966d39ee267cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:required&lt;/code&gt; - boolean, sets whether existence of confirmation parameter is required for addition of error. Defaults to false</source>
          <target state="translated">&lt;code&gt;:required&lt;/code&gt; - логическое, устанавливает, требуется ли наличие параметра подтверждения для добавления ошибки. По умолчанию false</target>
        </trans-unit>
        <trans-unit id="8b69f189a46faa4a282e2a653cb16271cf58d94f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:required&lt;/code&gt; - if the association is a required field</source>
          <target state="translated">&lt;code&gt;:required&lt;/code&gt; - если ассоциация обязательное поле</target>
        </trans-unit>
        <trans-unit id="45a02375e85f5958cbb56812b6dfb33b5d30535c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:required&lt;/code&gt; - if the embed is a required field</source>
          <target state="translated">&lt;code&gt;:required&lt;/code&gt; - если встраивание является обязательным полем</target>
        </trans-unit>
        <trans-unit id="c31850f3f2cb7ba7acf722c73e768effac63cc02" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:required_message&lt;/code&gt; - the message on failure, defaults to &quot;can't be blank&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45c44f002aaf78a8e747f3f4b3150431290cbcb0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:required_message&lt;/code&gt; - the message on failure, defaults to &amp;ldquo;can&amp;rsquo;t be blank&amp;rdquo;</source>
          <target state="translated">&lt;code&gt;:required_message&lt;/code&gt; - сообщение об ошибке, по умолчанию &amp;laquo;не может быть пустым&amp;raquo;</target>
        </trans-unit>
        <trans-unit id="00bc19558ac32b58f929a0b1b5c03c61f2462bde" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:reset_content&lt;/code&gt; - 205</source>
          <target state="translated">&lt;code&gt;:reset_content&lt;/code&gt; - 205</target>
        </trans-unit>
        <trans-unit id="c3b01d89072c235db3e5761e645b4c718b7534b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:result&lt;/code&gt; - the query result</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd8eeabf769084d67a5f9b0ac89b6633f8fd12fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:returning&lt;/code&gt; - selects which fields to return. It accepts a list of fields to be returned from the database. When &lt;code&gt;true&lt;/code&gt;, returns all fields. When &lt;code&gt;false&lt;/code&gt;, no extra fields are returned. It will always include all fields in &lt;code&gt;read_after_writes&lt;/code&gt; as well as any autogenerated id. Not all databases support this option and it may not be available during upserts. See the &quot;Upserts&quot; section for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="925a0580e82aca2b129cfbf582d8d346e4233f88" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:returning&lt;/code&gt; - selects which fields to return. It accepts a list of fields to be returned from the database. When &lt;code&gt;true&lt;/code&gt;, returns all fields. When &lt;code&gt;false&lt;/code&gt;, no extra fields are returned. It will always include all fields in &lt;code&gt;read_after_writes&lt;/code&gt;. Not all databases support this option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="083ae4633625da77619e11dad60a0a1dbb5ae7bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:returning&lt;/code&gt; - selects which fields to return. When &lt;code&gt;true&lt;/code&gt;, returns all fields in the given schema. May be a list of fields, where a struct is still returned but only with the given fields. Or &lt;code&gt;false&lt;/code&gt;, where nothing is returned (the default). This option is not supported by all databases.</source>
          <target state="translated">&lt;code&gt;:returning&lt;/code&gt; return - выбирает, какие поля возвращать. Если &lt;code&gt;true&lt;/code&gt; , возвращает все поля в данной схеме. Может быть список полей, где структура все еще возвращается, но только с заданными полями. Или &lt;code&gt;false&lt;/code&gt; , если ничего не возвращается (по умолчанию). Этот вариант поддерживается не всеми базами данных.</target>
        </trans-unit>
        <trans-unit id="dff34483ae1b43920e5352a9ff433cc5df74762b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:returning&lt;/code&gt; - selects which fields to return. When &lt;code&gt;true&lt;/code&gt;, returns all fields in the given struct. May be a list of fields, where a struct is still returned but only with the given fields. In any case, it will include fields with &lt;code&gt;read_after_writes&lt;/code&gt; set to true. Not all databases support this option.</source>
          <target state="translated">&lt;code&gt;:returning&lt;/code&gt; return - выбирает, какие поля возвращать. Когда &lt;code&gt;true&lt;/code&gt; , возвращает все поля в данной структуре. Может быть список полей, где структура все еще возвращается, но только с заданными полями. В любом случае он будет включать поля, для которых &lt;code&gt;read_after_writes&lt;/code&gt; установлено значение true. Не все базы данных поддерживают эту опцию.</target>
        </trans-unit>
        <trans-unit id="c9cd574a3c65cd8f12840ab32c958b6a2cd71db9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:rewrite_on&lt;/code&gt; - rewrites the given connection information based on the given headers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fdecab13bfa8cd4d54ace70efabb09caec7f213" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:rewrite_on&lt;/code&gt; - rewrites the scheme to https based on the given headers</source>
          <target state="translated">&lt;code&gt;:rewrite_on&lt;/code&gt; - перезаписывает схему на https на основе заданных заголовков</target>
        </trans-unit>
        <trans-unit id="c0cbc01b8032ae33c0832c64f6baf3a8309f67b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:root&lt;/code&gt; - the root template path to find templates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f7c7d7621b1c409d3f8e6655e4cb9b331e4660f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:root&lt;/code&gt; - the template root to find templates</source>
          <target state="translated">&lt;code&gt;:root&lt;/code&gt; - корень шаблона для поиска шаблонов</target>
        </trans-unit>
        <trans-unit id="3cc4e38f77566a7a68edb957e8ef72aefe0f1649" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:route&lt;/code&gt; - the string route pattern, such as &lt;code&gt;&quot;/posts/:id&quot;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe869645d7c71d4d653bdca9f9f8ebd86893e98e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:router&lt;/code&gt; - an optional router that enables this LiveView to perform live navigation. Only a single LiveView in a page may have the &lt;code&gt;:router&lt;/code&gt; set. LiveViews defined at the router with the &lt;code&gt;live&lt;/code&gt; macro automatically have the &lt;code&gt;:router&lt;/code&gt; option set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e0e1a0e13e2670c1a64e3017ef68706b7a4eb01" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:same_site&lt;/code&gt; - see &lt;a href=&quot;plug.conn#put_resp_cookie/4&quot;&gt;&lt;code&gt;Plug.Conn.put_resp_cookie/4&lt;/code&gt;&lt;/a&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d013a3d21cf6d48da90eef0a2f2d88d7772ba907" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:same_site&lt;/code&gt; - set the cookie SameSite attribute to a string value. If no string value is set, the attribute is omitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5f7e29936353b602d5ef3f8d4e442c9fc989b09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:secret_key_base&lt;/code&gt; - a secret key used as a base to generate secrets for encrypting and signing data. For example, cookies and tokens are signed by default, but they may also be encrypted if desired. Defaults to &lt;code&gt;nil&lt;/code&gt; as it must be set per application</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8551c03aa980125c32b8cbdb70a9c623c1243b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:secret_key_base&lt;/code&gt; - a secret key used as a base to generate secrets for encrypting and signing data. For example, cookies and tokens are signed by default, but they may also be encrypted if desired. Defaults to &lt;code&gt;nil&lt;/code&gt; as it must be set per application.</source>
          <target state="translated">&lt;code&gt;:secret_key_base&lt;/code&gt; - секретный ключ, используемый в качестве основы для генерации секретов для шифрования и подписи данных. Например, файлы cookie и токены подписаны по умолчанию, но при желании они также могут быть зашифрованы. По умолчанию равен &lt;code&gt;nil&lt;/code&gt; как он должен быть установлен для каждого приложения.</target>
        </trans-unit>
        <trans-unit id="31603c438956dff112008049bab0031ae1b0ffa6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:secret_key_base&lt;/code&gt; - the secret key base to built the cookie signing/encryption on top of. If one is given on initialization, the cookie store can precompute all relevant values at compilation time. Otherwise, the value is taken from &lt;code&gt;conn.secret_key_base&lt;/code&gt; and cached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b319959cd0760ee69223616ae373a6721e509e67" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:secure&lt;/code&gt; - if the cookie must be sent only over https. Defaults to true when the connection is HTTPS</source>
          <target state="translated">&lt;code&gt;:secure&lt;/code&gt; - если куки нужно отправлять только по https. По умолчанию true, если соединение HTTPS</target>
        </trans-unit>
        <trans-unit id="ffff620fff423b1765fa830ed5b2757d59526b20" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:secure&lt;/code&gt; - if the cookie must be sent only over https. Defaults to true when the connection is https</source>
          <target state="translated">&lt;code&gt;:secure&lt;/code&gt; - если куки нужно отправлять только по https. По умолчанию true, если соединение https</target>
        </trans-unit>
        <trans-unit id="901d79502eb3c46880a530963259fc34da5aa261" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:secure&lt;/code&gt; - see &lt;a href=&quot;plug.conn#put_resp_cookie/4&quot;&gt;&lt;code&gt;Plug.Conn.put_resp_cookie/4&lt;/code&gt;&lt;/a&gt;;</source>
          <target state="translated">&lt;code&gt;:secure&lt;/code&gt; - см. &lt;a href=&quot;plug.conn#put_resp_cookie/4&quot;&gt; &lt;code&gt;Plug.Conn.put_resp_cookie/4&lt;/code&gt; &lt;/a&gt; ;</target>
        </trans-unit>
        <trans-unit id="c284346d7c7e6b29f37b8d6600a932597394cfc1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:see_other&lt;/code&gt; - 303</source>
          <target state="translated">&lt;code&gt;:see_other&lt;/code&gt; - 303</target>
        </trans-unit>
        <trans-unit id="aad59c5ef5c786d1e612e1f23f676362c70934ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:selected&lt;/code&gt; - the default options to be marked as selected. The values on this list are ignored in case ids have been set as parameters.</source>
          <target state="translated">&lt;code&gt;:selected&lt;/code&gt; - параметры по умолчанию будут отмечены как выбранные. Значения в этом списке игнорируются, если в качестве параметров заданы идентификаторы.</target>
        </trans-unit>
        <trans-unit id="73e2f9ff1b1d89519645abe3b6e9bfddfd4234c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:selected&lt;/code&gt; - the default value to use when none was sent as parameter</source>
          <target state="translated">&lt;code&gt;:selected&lt;/code&gt; - значение по умолчанию для использования, когда ничего не было отправлено в качестве параметра</target>
        </trans-unit>
        <trans-unit id="4ff4c4221a731df677b5bd08cadefbb944d6afb9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:serializer&lt;/code&gt; - The serializer for socket messages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="217545f5a4e67147431daef13d83ec1b38c3f1cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:serializer&lt;/code&gt; - a list of serializers for messages. See &lt;a href=&quot;phoenix.socket&quot;&gt;&lt;code&gt;Phoenix.Socket&lt;/code&gt;&lt;/a&gt; for more information</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84fb37aa4cda81efe047103d11ae5fdb9ee6e815" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:serializer&lt;/code&gt; - cookie serializer module that defines &lt;code&gt;encode/1&lt;/code&gt; and &lt;code&gt;decode/1&lt;/code&gt; returning an &lt;code&gt;{:ok, value}&lt;/code&gt; tuple. Defaults to &lt;code&gt;:external_term_format&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:serializer&lt;/code&gt; - модуль сериализатора файлов cookie, который определяет &lt;code&gt;encode/1&lt;/code&gt; и &lt;code&gt;decode/1&lt;/code&gt; , возвращая кортеж &lt;code&gt;{:ok, value}&lt;/code&gt; . По умолчанию &lt;code&gt;:external_term_format&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="96c0ab12e5fc55e7fdc752ee379a4317eda8708d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:serializer&lt;/code&gt; - the serializer for websocket messages</source>
          <target state="translated">&lt;code&gt;:serializer&lt;/code&gt; - сериализатор для сообщений websocket</target>
        </trans-unit>
        <trans-unit id="a77fdc7c24b101bc4928395ded9c1ca0f42637f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:server&lt;/code&gt; - when &lt;code&gt;true&lt;/code&gt;, starts the web server when the endpoint supervision tree starts. Defaults to &lt;code&gt;false&lt;/code&gt;. The &lt;a href=&quot;mix.tasks.phx.server&quot;&gt;&lt;code&gt;mix phx.server&lt;/code&gt;&lt;/a&gt; task automatically sets this to &lt;code&gt;true&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b90fb03fda2d85f1bb9ea5cf16616c9b8db4bf01" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:server&lt;/code&gt; - when &lt;code&gt;true&lt;/code&gt;, starts the web server when the endpoint supervision tree starts. Defaults to &lt;code&gt;false&lt;/code&gt;. The &lt;code&gt;mix phx.server&lt;/code&gt; task automatically sets this to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:server&lt;/code&gt; - при &lt;code&gt;true&lt;/code&gt; запускает веб-сервер при запуске дерева наблюдения за конечной точкой. По умолчанию - &lt;code&gt;false&lt;/code&gt; . Задача &lt;code&gt;mix phx.server&lt;/code&gt; автоматически устанавливает для него значение &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f161fcf3bc4b283a463e77d1b3fd0bc38b14e917" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:service_unavailable&lt;/code&gt; - 503</source>
          <target state="translated">&lt;code&gt;:service_unavailable&lt;/code&gt; - 503</target>
        </trans-unit>
        <trans-unit id="918dce8364816822a2a5cf288fa39d8a1edda3aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:session&lt;/code&gt; - a map to be merged into the session, for example: &lt;code&gt;%{&quot;my_key&quot; =&amp;gt; 123}&lt;/code&gt;. The map keys must be strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f2c5053630ca15ed92c8a6baeec82aba532bf57" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:session&lt;/code&gt; - the map of extra session data to be serialized and sent to the client. Note that all session data currently in the connection is automatically available in LiveViews. You can use this option to provide extra data. Also note that the keys in the session are strings keys, as a reminder that data has to be serialized first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b1af8fa63c4dac369281d8781e82ae4e3c79b9e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:session&lt;/code&gt; - the session to be given to the LiveView</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae7caec92944af9c9ea870c79f757a4bf8e55ae2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:session_key&lt;/code&gt; - the name of the key in session to store the token under</source>
          <target state="translated">&lt;code&gt;:session_key&lt;/code&gt; - имя ключа в сеансе для хранения токена</target>
        </trans-unit>
        <trans-unit id="abd68caf7032f368a2a58fd0fac27f38a1f96965" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:shutdown&lt;/code&gt; or &lt;code&gt;{:shutdown, term}&lt;/code&gt; - in such cases, the exit won&amp;rsquo;t be logged, there is no restart in transient mode, and linked processes exit with the same reason unless they&amp;rsquo;re trapping exits</source>
          <target state="translated">&lt;code&gt;:shutdown&lt;/code&gt; или &lt;code&gt;{:shutdown, term}&lt;/code&gt; - в таких случаях выход не регистрируется, перезапуск в переходном режиме не выполняется, а связанные процессы завершаются по той же причине, если только они не перехватывают выходы</target>
        </trans-unit>
        <trans-unit id="f410a0499310dbf0efa4fd28cf51ef51f21e49e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:shutdown&lt;/code&gt; or &lt;code&gt;{:shutdown, term}&lt;/code&gt; - in such cases, the exit won't be logged and linked processes exit with the same reason unless they're trapping exits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0edb72bdb2f9c31f582dcde5fbf2507496172bbc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:sign&lt;/code&gt; - when true, signs the cookie</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0473b6825abeaca03f8f9cec513fab0b133a827a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:signed&lt;/code&gt; - a list of one or more cookies that are signed and must be verified accordingly</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef418c4a558204eb65ccbf6bcb30e107b3b4d2ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:signed_at&lt;/code&gt; - set the timestamp of the token in seconds. Defaults to &lt;code&gt;System.system_time(:second)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="611b11e8454ae02a2cadc3fcbe0b9d124d5d86fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:signed_at&lt;/code&gt; - set the timestamp of the token in seconds. Defaults to &lt;code&gt;System.system_time(:seconds)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:signed_at&lt;/code&gt; - установить метку времени токена в секундах. По умолчанию &lt;code&gt;System.system_time(:seconds)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2c51049370cfb74eb774d28150a534607dcea017" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:signing_salt&lt;/code&gt; (required) - the salt used to sign data sent to the client</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bf809b09d68487835e5276966d4604ca6878145" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:signing_salt&lt;/code&gt; - a salt used with &lt;code&gt;conn.secret_key_base&lt;/code&gt; to generate a key for signing/verifying a cookie, can be either a binary or an MFA returning a binary;</source>
          <target state="translated">&lt;code&gt;:signing_salt&lt;/code&gt; - соль, используемая с &lt;code&gt;conn.secret_key_base&lt;/code&gt; для генерации ключа для подписи / проверки cookie, может быть либо двоичным, либо MFA, возвращающим двоичный файл;</target>
        </trans-unit>
        <trans-unit id="42b2b1f3aaf8a23d691cadefdec622d49360bd47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:singleton&lt;/code&gt; - defines routes for a singleton resource that is looked up by the client without referencing an ID. Read below for more information</source>
          <target state="translated">&lt;code&gt;:singleton&lt;/code&gt; - определяет маршруты для одноэлементного ресурса, который ищет клиент без ссылки на идентификатор. Читайте ниже для получения дополнительной информации</target>
        </trans-unit>
        <trans-unit id="36ffb999a295c1931798b32005b8e53b9ddb105b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:skip_hidden&lt;/code&gt; - skip the automatic rendering of hidden fields to allow for more tight control over the generated markup. You can access &lt;code&gt;form.hidden&lt;/code&gt; to generate them manually within the supplied callback.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c96015ac56cbb93b9fd7401c0fb3ead5da9471c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:source&lt;/code&gt; - Defines the name that is to be used in database for this field</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e78283f60e07d3ac25f1f344b6f92b024899b1db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:source&lt;/code&gt; - Defines the name that is to be used in database for this field. This is useful when attaching to an existing database. The value should be an atom.</source>
          <target state="translated">&lt;code&gt;:source&lt;/code&gt; - определяет имя, которое будет использоваться в базе данных для этого поля. Это полезно при подключении к существующей базе данных. Значение должно быть атомом.</target>
        </trans-unit>
        <trans-unit id="3676c56707223db9084e2d72ac2289a7ad0c11d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:source&lt;/code&gt; - The source for the underlying field</source>
          <target state="translated">&lt;code&gt;:source&lt;/code&gt; - Источник базового поля</target>
        </trans-unit>
        <trans-unit id="435c246d5b3897d22f3b77eb3e3af0fba1ce6dfc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:source&lt;/code&gt; - changes the struct query source</source>
          <target state="translated">&lt;code&gt;:source&lt;/code&gt; - изменяет источник запроса структуры</target>
        </trans-unit>
        <trans-unit id="556e5bc9727fd1813b8d41dc1d1577a21eb8cddd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:source&lt;/code&gt; - the data structure given to &lt;a href=&quot;#form_for/4&quot;&gt;&lt;code&gt;form_for/4&lt;/code&gt;&lt;/a&gt; that implements the form data protocol</source>
          <target state="translated">&lt;code&gt;:source&lt;/code&gt; - структура данных, данная &lt;a href=&quot;#form_for/4&quot;&gt; &lt;code&gt;form_for/4&lt;/code&gt; ,&lt;/a&gt; которая реализует протокол данных формы</target>
        </trans-unit>
        <trans-unit id="f8988fe24ea8f447693c8caf805e9e813f7e1097" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:source&lt;/code&gt; - the source the query was made on (may be nil)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32305498e95a5ada082b8a5dad738211b0c09494" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:stale_error_field&lt;/code&gt; - The field where stale errors will be added in the returning changeset. This option can be used to avoid raising &lt;a href=&quot;ecto.staleentryerror&quot;&gt;&lt;code&gt;Ecto.StaleEntryError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;:stale_error_field&lt;/code&gt; - Поле, в которое будут добавлены устаревшие ошибки в возвращаемом наборе изменений. Этот параметр можно использовать, чтобы избежать &lt;a href=&quot;ecto.staleentryerror&quot;&gt; &lt;code&gt;Ecto.StaleEntryError&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b26684b6d2fbbca705fe6cd1cab46f6c42f5386e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:stale_error_field&lt;/code&gt; - The field where stale errors will be added in the returning changeset. This option can be used to avoid raising &lt;a href=&quot;ecto.staleentryerror&quot;&gt;&lt;code&gt;Ecto.StaleEntryError&lt;/code&gt;&lt;/a&gt;. Only applies to updates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c175138406948d3b192d36d9e2b69b89895c5eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:stale_error_message&lt;/code&gt; - The message to add to the configured &lt;code&gt;:stale_error_field&lt;/code&gt; when stale errors happen, defaults to &quot;is stale&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91dbedb91ddbc21058feecfac43e16746fcdcc48" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:stale_error_message&lt;/code&gt; - The message to add to the configured &lt;code&gt;:stale_error_field&lt;/code&gt; when stale errors happen, defaults to &quot;is stale&quot;. Only applies to updates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01a94acf6c66d55a8fc03a90639cbcdc29577d52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:stale_error_message&lt;/code&gt; - The message to add to the configured &lt;code&gt;:stale_error_field&lt;/code&gt; when stale errors happen, defaults to &amp;ldquo;is stale&amp;rdquo;.</source>
          <target state="translated">&lt;code&gt;:stale_error_message&lt;/code&gt; - Сообщение, которое нужно добавить в сконфигурированное &lt;code&gt;:stale_error_field&lt;/code&gt; при возникновении устаревших ошибок, по умолчанию - &amp;laquo;устаревшее&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="830c5ed6232c4e8c80b125d7040ed8989c90f702" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:state&lt;/code&gt; - changes the struct state</source>
          <target state="translated">&lt;code&gt;:state&lt;/code&gt; - изменяет состояние структуры</target>
        </trans-unit>
        <trans-unit id="0ad379f9d522597102c022d76a2c8b914e6d66d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:static_url&lt;/code&gt; - configuration for generating URLs for static files. It will fallback to &lt;code&gt;url&lt;/code&gt; if no option is provided. Accepts the same options as &lt;code&gt;url&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09bd0528f76f6453de039d10a480ce49889783a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:static_url&lt;/code&gt; - configuration for generating URLs for static files. It will fallback to &lt;code&gt;url&lt;/code&gt; if no option is provided. Accepts the same options as &lt;code&gt;url&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:static_url&lt;/code&gt; - конфигурация генерации URL для статических файлов. Он вернется к &lt;code&gt;url&lt;/code&gt; если не предоставлена ​​опция. Принимает те же параметры, что и &lt;code&gt;url&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4f27a2aa840955c9e7ac4ff033a8354df7cc7e8b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:status&lt;/code&gt; - The reply status as an atom</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="176a10736e55f8370b3b2f3ec0075f698cde99c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:store&lt;/code&gt; - session store module (required);</source>
          <target state="translated">&lt;code&gt;:store&lt;/code&gt; - модуль хранилища сессий (обязательно);</target>
        </trans-unit>
        <trans-unit id="dd762daaaa8e7186dec2598dab08d925ff5eff60" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:style&lt;/code&gt; - custom styles (see below)</source>
          <target state="translated">&lt;code&gt;:style&lt;/code&gt; - пользовательские стили (см. ниже)</target>
        </trans-unit>
        <trans-unit id="f3af6979f512f8aebdc95764da81613d355d50d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:subdomains&lt;/code&gt; - a boolean on including subdomains or not in HSTS, defaults to &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:subdomains&lt;/code&gt; - логическое значение, включающее или не включающее поддомены в HSTS, по умолчанию &lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="813c5891c74f1bb3e7367c39bede667a58abf98e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:subprotocols&lt;/code&gt; - a list of supported websocket subprotocols. Used for handshake &lt;code&gt;Sec-WebSocket-Protocol&lt;/code&gt; response header, defaults to nil.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e49be7aad64614e789ca720a2931987a0a79e38" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:switch_proxy&lt;/code&gt; - 306</source>
          <target state="translated">&lt;code&gt;:switch_proxy&lt;/code&gt; - 306</target>
        </trans-unit>
        <trans-unit id="333d8aae72abedc4939136241b986d7d279feb24" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:switching_protocols&lt;/code&gt; - 101</source>
          <target state="translated">&lt;code&gt;:switching_protocols&lt;/code&gt; - 101</target>
        </trans-unit>
        <trans-unit id="9242f9c1862057b224896ecfa551a7f8ecf76483" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:table&lt;/code&gt; - ETS table name (required)</source>
          <target state="translated">&lt;code&gt;:table&lt;/code&gt; - название таблицы ETS (обязательно)</target>
        </trans-unit>
        <trans-unit id="8dd380271e13fe6d9de0a27b1b18bde34e7e1f96" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:tag_values&lt;/code&gt; - A function which transforms the metadata into the desired shape; Note that this function is called for each event, so it's important to keep it fast if the rate of events is high.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dc74b7ed70ad476fc95f57cdea3061b45027737" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:tags&lt;/code&gt; - A list of metadata keys for grouping;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5899dcd9a3dc396fbd77fd6e88d97cdbeea6162b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:telemetry_event&lt;/code&gt; - The telemetry event name to dispatch the event under</source>
          <target state="translated">&lt;code&gt;:telemetry_event&lt;/code&gt; - Имя события телеметрии для отправки события под</target>
        </trans-unit>
        <trans-unit id="ce62979f4acb9c8d257b31ec2fd154e853e1187c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:telemetry_event&lt;/code&gt; - The telemetry event name to dispatch the event under. See the next section for more information</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf1d66b367cb37e4997c68eeac09026ca29d1230" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:telemetry_options&lt;/code&gt; - Extra options to attach to telemetry event name. See the next section for more information</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65e1a3c733761b8c7ddba750e09020d5e8de54f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:telemetry_prefix&lt;/code&gt; - we recommend adapters to publish events using the &lt;code&gt;Telemetry&lt;/code&gt; library. By default, the telemetry prefix is based on the module name, so if your module is called &lt;code&gt;MyApp.Repo&lt;/code&gt;, the prefix will be &lt;code&gt;[:my_app, :repo]&lt;/code&gt;. See the &quot;Telemetry Events&quot; section to see which events we recommend adapters to publish. Note that if you have multiple databases, you should keep the &lt;code&gt;:telemetry_prefix&lt;/code&gt; consistent for each repo and use the &lt;code&gt;:repo&lt;/code&gt; property in the event metadata for distinguishing between repos.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99f1b826dcd3d897ef8b73c579d2f66d030a9e90" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:telemetry_prefix&lt;/code&gt; - we recommend adapters to publish events using the &lt;code&gt;Telemetry&lt;/code&gt; library. By default, the telemetry prefix is based on the module name, so if your module is called &lt;code&gt;MyApp.Repo&lt;/code&gt;, the prefix will be &lt;code&gt;[:my_app, :repo]&lt;/code&gt;. See the &amp;ldquo;Telemetry Events&amp;rdquo; section to see which events we recommend adapters to publish</source>
          <target state="translated">&lt;code&gt;:telemetry_prefix&lt;/code&gt; - мы рекомендуем адаптеры для публикации событий с помощью библиотеки &lt;code&gt;Telemetry&lt;/code&gt; . По умолчанию префикс телеметрии основан на имени модуля, поэтому, если ваш модуль называется &lt;code&gt;MyApp.Repo&lt;/code&gt; , префикс будет &lt;code&gt;[:my_app, :repo]&lt;/code&gt; . См. Раздел &amp;laquo;События телеметрии&amp;raquo;, чтобы узнать, какие события мы рекомендуем адаптерам публиковать.</target>
        </trans-unit>
        <trans-unit id="e5c8573c4f24fbe800c51b56ac68416b91ca11f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:template_engines&lt;/code&gt; - a map of template engines extensions to template engine handlers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96ee8e3c93d291f782a4c6b71a9f25c22b2d9be1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:temporary_assigns&lt;/code&gt; - a keyword list of assigns that are temporary and must be reset to their value after every render</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cba36ad975862c478189f8985439ab006988fd2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:temporary_redirect&lt;/code&gt; - 307</source>
          <target state="translated">&lt;code&gt;:temporary_redirect&lt;/code&gt; - 307</target>
        </trans-unit>
        <trans-unit id="e013be3b7d5fc4a7f54d68f3c56a849f4b3f1c36" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:through&lt;/code&gt; - Allow this association to be defined in terms of existing associations. Read the section on &lt;code&gt;:through&lt;/code&gt; associations for more info</source>
          <target state="translated">&lt;code&gt;:through&lt;/code&gt; - Разрешить определение этой ассоциации в терминах существующих ассоциаций. Прочтите раздел &lt;code&gt;:through&lt;/code&gt; ассоциации для получения дополнительной информации</target>
        </trans-unit>
        <trans-unit id="2a391729ec08506ad3d23119b3ee8fdfbe257a00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:through&lt;/code&gt; - If this association must be defined in terms of existing associations. Read the section in &lt;a href=&quot;#has_many/3&quot;&gt;&lt;code&gt;has_many/3&lt;/code&gt;&lt;/a&gt; for more information</source>
          <target state="translated">&lt;code&gt;:through&lt;/code&gt; - Если эта ассоциация должна быть определена в терминах существующих ассоциаций. Прочтите раздел в &lt;a href=&quot;#has_many/3&quot;&gt; &lt;code&gt;has_many/3&lt;/code&gt; &lt;/a&gt; для получения дополнительной информации</target>
        </trans-unit>
        <trans-unit id="a34fb448f267c9b8a828f9dcbc47a5f71caae013" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:through&lt;/code&gt; associations can also be preloaded. In such cases, not only the &lt;code&gt;:through&lt;/code&gt; association is preloaded but all intermediate steps are preloaded too:</source>
          <target state="translated">&lt;code&gt;:through&lt;/code&gt; ассоциации также можно предварительно загрузить. В таких случаях предварительно загружается не только ассоциация &lt;code&gt;:through&lt;/code&gt; , но и все промежуточные шаги:</target>
        </trans-unit>
        <trans-unit id="360743e4bdd532d1937e8748456b373926585d2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:timeout&lt;/code&gt; - The time in milliseconds to wait for the query call to finish, &lt;code&gt;:infinity&lt;/code&gt; will wait indefinitely (default: 15000);</source>
          <target state="translated">&lt;code&gt;:timeout&lt;/code&gt; - время в миллисекундах ожидания завершения вызова запроса,: &lt;code&gt;:infinity&lt;/code&gt; будет ждать бесконечно (по умолчанию: 15000);</target>
        </trans-unit>
        <trans-unit id="c7700cebe6edd1b597c95af94d9a1a52b8f5fca2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:timeout&lt;/code&gt; - The time in milliseconds to wait for the query call to finish. &lt;code&gt;:infinity&lt;/code&gt; will wait indefinitely (default: 15000)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3b9ae8169c3a4c53537a77a4b7f6ef2dc5ac3b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:timeout&lt;/code&gt; - the timeout for keeping websocket connections open after it last received data, defaults to 60_000ms</source>
          <target state="translated">&lt;code&gt;:timeout&lt;/code&gt; - тайм-аут для сохранения соединений websocket открытыми после последнего получения данных, по умолчанию 60_000ms</target>
        </trans-unit>
        <trans-unit id="363cf799b341f2fd8102e4dd788da3b2706bd6b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:to&lt;/code&gt; - a Plug that will be called in case the route matches.</source>
          <target state="translated">&lt;code&gt;:to&lt;/code&gt; - Plug, который будет вызываться в случае совпадения маршрута.</target>
        </trans-unit>
        <trans-unit id="418444de439179009d7e27cd7fac41a0fe92eecc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:to&lt;/code&gt; - a Plug the requests will be forwarded to.</source>
          <target state="translated">&lt;code&gt;:to&lt;/code&gt; - плагин, которому будут перенаправлены запросы.</target>
        </trans-unit>
        <trans-unit id="6bef70954ca928e1f585e82d8ff90ff5c0a149c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:to&lt;/code&gt; - the page to link to. This option is required</source>
          <target state="translated">&lt;code&gt;:to&lt;/code&gt; - страница, на которую нужно ссылаться. Эта опция обязательна</target>
        </trans-unit>
        <trans-unit id="33b376402b6c71d58506233a2762cf63203ad843" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:to&lt;/code&gt; - the path to redirect to. It must always be a local path</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4d7b5abde77261369690f38e3f2f607ce777ceb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:to&lt;/code&gt; - the required path to link to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="875c0b227cc4f89f09e481b880b9b58dbfcc4958" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:to&lt;/code&gt; - the required path to link to. It must always be a local path</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5df8fba3ffdd2c75b2b41b2b10089419422f7e62" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:too_early&lt;/code&gt; - 425</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e27d3b00a32977d85c6e7c57207be914af8cfd71" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:too_many_requests&lt;/code&gt; - 429</source>
          <target state="translated">&lt;code&gt;:too_many_requests&lt;/code&gt; - 429</target>
        </trans-unit>
        <trans-unit id="dfbe1041878a6540b6dd1f0460daaf710a9637de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:topic&lt;/code&gt; - The string topic or topic:subtopic pair namespace, for example &quot;messages&quot;, &quot;messages:123&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c7f3bd99a8ca7c29c00432df0dbca16b913c0a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:topic&lt;/code&gt; - The string topic, for example &lt;code&gt;&quot;room:123&quot;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3852f348a1a1375d4161102a4443bc4fb3682bc2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:total_time&lt;/code&gt; - the sum of the other measurements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="559b6ebe7f1436fe463885aa09d6660cd2093d9e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:trace_context_headers&lt;/code&gt; - a list of all trace context headers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09604970da59d3b8f6a24571f4d2823982296464" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:trace_context_headers&lt;/code&gt; - a list of all trace context headers. Supported headers are defined by the &lt;a href=&quot;https://www.w3.org/TR/trace-context-1/&quot;&gt;W3C Trace Context Specification&lt;/a&gt;. These headers are necessary for libraries such as &lt;a href=&quot;https://opentelemetry.io/&quot;&gt;OpenTelemetry&lt;/a&gt; to extract trace propagation information to know this request is part of a larger trace in progress.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebfeb7947f4edd22d1876d039010738f145ff468" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:trailing_slash&lt;/code&gt; - a boolean to flag whether or not the helper functions append a trailing slash. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5ded00df3fe90b7abb003d1bd21d37e5ff082ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:trailing_slash&lt;/code&gt; - whether or not the helper functions append a trailing slash. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8c62cb2ecf5ed699ead36ea2c0bc9057eb29a2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:transport&lt;/code&gt; - An identifier for the transport, used for logging</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="300656efe696e2a66dc74e3443eb18548380c011" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:transport&lt;/code&gt; - the transport name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a05df8b2752c254d796c3067f7078f9c1a12d03d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:transport_log&lt;/code&gt; - if the transport layer itself should log and, if so, the level</source>
          <target state="translated">&lt;code&gt;:transport_log&lt;/code&gt; - должен ли протоколировать сам транспортный уровень и, если да, то уровень</target>
        </trans-unit>
        <trans-unit id="f2327120077fe013b3175e08df6caeccbc22d663" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:transport_pid&lt;/code&gt; - The pid of the socket's transport process</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="763d769c8be356d288f117f582d874848a8b1259" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:trim&lt;/code&gt; - a boolean that sets whether whitespaces are removed before running the validation on binaries/strings, defaults to true</source>
          <target state="translated">&lt;code&gt;:trim&lt;/code&gt; - логическое значение, которое устанавливает, удаляются ли пробелы перед запуском проверки для двоичных файлов / строк, по умолчанию - true</target>
        </trans-unit>
        <trans-unit id="baaca370e5c6fe6b09a29d092762f82ab3823e6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:type&lt;/code&gt; - Sets the type of automatically defined &lt;code&gt;:foreign_key&lt;/code&gt;. Defaults to: &lt;code&gt;:integer&lt;/code&gt; and can be set per schema via &lt;code&gt;@foreign_key_type&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:type&lt;/code&gt; - Устанавливает тип автоматически определяемого &lt;code&gt;:foreign_key&lt;/code&gt; . По умолчанию &lt;code&gt;:integer&lt;/code&gt; и может быть установлено для каждой схемы через &lt;code&gt;@foreign_key_type&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a6d8ec93c2392553c5327c28e4ca6b164a0a5c2a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:type&lt;/code&gt; - the timestamps type, defaults to &lt;code&gt;:naive_datetime&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:type&lt;/code&gt; - тип временных меток, по умолчанию &lt;code&gt;:naive_datetime&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1bfbb151e0513a3b2eedfc229187cb8297380490" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:type&lt;/code&gt; - the type of the Ecto query. For example, for Ecto.SQL databases, it would be &lt;code&gt;:ecto_sql_query&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2a2ea966e7b48c568d93eb9427d3b3aa4c37427" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:type&lt;/code&gt; - the type of the constraint that will be checked in the database, such as &lt;code&gt;:check&lt;/code&gt;, &lt;code&gt;:unique&lt;/code&gt;, etc</source>
          <target state="translated">&lt;code&gt;:type&lt;/code&gt; - тип ограничения , которые будут проверяться в базе данных, таких как &lt;code&gt;:check&lt;/code&gt; , &lt;code&gt;:unique&lt;/code&gt; , и т.д.</target>
        </trans-unit>
        <trans-unit id="488da48a0565d0e9e4d63c2f660a722d182713d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:unauthorized&lt;/code&gt; - 401</source>
          <target state="translated">&lt;code&gt;:unauthorized&lt;/code&gt; - 401</target>
        </trans-unit>
        <trans-unit id="0b1e165162fd1bece099a3de1e3d6d92842a7661" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:unavailable_for_legal_reasons&lt;/code&gt; - 451</source>
          <target state="translated">&lt;code&gt;:unavailable_for_legal_reasons&lt;/code&gt; - 451</target>
        </trans-unit>
        <trans-unit id="e0a68550e48e5cc77a6bbf32fd31be589f9ed69e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:unchecked_value&lt;/code&gt; - the value to be sent when the checkbox is unchecked, Defaults to &quot;false&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22ff86a3c13359f95a5ba86dc8792e848dd7f80f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:unchecked_value&lt;/code&gt; - the value to be sent when the checkbox is unchecked, Defaults to &amp;ldquo;false&amp;rdquo;</source>
          <target state="translated">&lt;code&gt;:unchecked_value&lt;/code&gt; - значение, которое будет отправлено, когда флажок снят, по умолчанию &amp;laquo;false&amp;raquo;</target>
        </trans-unit>
        <trans-unit id="1229734a8c5d8826ca7fa837f5f36840d098ecc3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:unique&lt;/code&gt; - When true, checks if the associated entries are unique whenever the association is cast or changed via the parent record. For instance, it would verify that a given tag cannot be attached to the same post more than once. This exists mostly as a quick check for user feedback, as it does not guarantee uniqueness at the database level. Therefore, you should also set a unique index in the database join table, such as: &lt;code&gt;create unique_index(:posts_tags, [:post_id, :tag_id])&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cac570ff07b06391353df9f7d1643e89e46d332" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:unique&lt;/code&gt; - When true, checks if the associated entries are unique. This is done by checking the primary key of the associated entries during repository operations. Keep in mind this does not guarantee uniqueness at the database level. For such it is preferred to set a unique index in the database. For example: &lt;code&gt;create unique_index(:posts_tags, [:post_id, :tag_id])&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:unique&lt;/code&gt; - При значении true проверяет уникальность связанных записей. Это делается путем проверки первичного ключа связанных записей во время операций с репозиторием. Имейте в виду, что это не гарантирует уникальность на уровне базы данных. Для этого предпочтительно установить уникальный индекс в базе данных. Например: &lt;code&gt;create unique_index(:posts_tags, [:post_id, :tag_id])&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1330b392f6aa2b54b734c604b5d7ec9250c0c0b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:unordered_collection&lt;/code&gt; - 425</source>
          <target state="translated">&lt;code&gt;:unordered_collection&lt;/code&gt; - 425</target>
        </trans-unit>
        <trans-unit id="cd9857583c3e7f486daaa536cd7fc154bc587914" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:unprocessable_entity&lt;/code&gt; - 422</source>
          <target state="translated">&lt;code&gt;:unprocessable_entity&lt;/code&gt; - 422</target>
        </trans-unit>
        <trans-unit id="4cdf2a81f1a83995dbc4121d682e5a18fefec1ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:unsupported_media_type&lt;/code&gt; - 415</source>
          <target state="translated">&lt;code&gt;:unsupported_media_type&lt;/code&gt; - 415</target>
        </trans-unit>
        <trans-unit id="7cbae2dee7c4fd1a180a135d1e688c174f4b94a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:update&lt;/code&gt; - updates the association, available only for &lt;code&gt;has_one&lt;/code&gt; and &lt;code&gt;belongs_to&lt;/code&gt;. This option will update all the fields given to the changeset including the id for the association</source>
          <target state="translated">&lt;code&gt;:update&lt;/code&gt; - обновляет ассоциацию, доступно только для &lt;code&gt;has_one&lt;/code&gt; и &lt;code&gt;belongs_to&lt;/code&gt; . Эта опция обновит все поля, указанные в наборе изменений, включая идентификатор ассоциации.</target>
        </trans-unit>
        <trans-unit id="7b62e8e7397a9b84f0e32647bfeb9eea8fe7b4f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:updated_at&lt;/code&gt; - the Ecto schema name of the field for update times or &lt;code&gt;false&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2313d31268e11dff1fab9c6f26bd15bb8fb7fcc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:updated_at&lt;/code&gt; - the name of the column for update times or &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:updated_at&lt;/code&gt; - имя столбца для времени обновления или &lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5b80be8cfa4815efb834f33834af9e0405b78bd1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:updated_at_source&lt;/code&gt; - the name of the database column for update times or &lt;code&gt;false&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fe12b41df18a56359327c60cab4ee45067d41d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:upgrade_required&lt;/code&gt; - 426</source>
          <target state="translated">&lt;code&gt;:upgrade_required&lt;/code&gt; - 426</target>
        </trans-unit>
        <trans-unit id="456f0f818b0673fd9392d4900c202ba12f5f6a98" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:uri&lt;/code&gt; - a &lt;code&gt;%URI{}&lt;/code&gt; derived from the conn</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b96b7803d3054fb3080f4583b779d0fd59e7874" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:uri&lt;/code&gt; - a &lt;code&gt;%URI{}&lt;/code&gt; with information from the conn</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="927405fd8755b2249ada40a0d2a50dfa3edb6d9f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:url&lt;/code&gt; - an URL that specifies storage information. Read below for more information</source>
          <target state="translated">&lt;code&gt;:url&lt;/code&gt; - URL-адрес, указывающий информацию о хранилище. Читайте ниже для получения дополнительной информации</target>
        </trans-unit>
        <trans-unit id="7cf1ebab21a3c2bee78c05c25c2df4675995926c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:url&lt;/code&gt; - configuration for generating URLs throughout the app. Accepts the &lt;code&gt;:host&lt;/code&gt;, &lt;code&gt;:scheme&lt;/code&gt;, &lt;code&gt;:path&lt;/code&gt; and &lt;code&gt;:port&lt;/code&gt; options. All keys except &lt;code&gt;:path&lt;/code&gt; can be changed at runtime. Defaults to:</source>
          <target state="translated">&lt;code&gt;:url&lt;/code&gt; - конфигурация для генерации URL во всем приложении. Принимает &lt;code&gt;:host&lt;/code&gt; , &lt;code&gt;:scheme&lt;/code&gt; , &lt;code&gt;:path&lt;/code&gt; и &lt;code&gt;:port&lt;/code&gt; варианты. Все ключи кроме &lt;code&gt;:path&lt;/code&gt; можно изменить во время выполнения. По умолчанию:</target>
        </trans-unit>
        <trans-unit id="96d8087a14ce7eb8d0d7048e8098b3b2b6fd6b59" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:use_proxy&lt;/code&gt; - 305</source>
          <target state="translated">&lt;code&gt;:use_proxy&lt;/code&gt; - 305</target>
        </trans-unit>
        <trans-unit id="cb46d9a8a531d40032450300f3b8acd7fe1dc700" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:user_agent&lt;/code&gt; - the value of the &quot;user-agent&quot; request header</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="917a5954f844196503fde24406586b0aa7960801" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:username&lt;/code&gt; - the expected username</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="102d189bd1ddc542334e10589b6c901806c38089" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:uuid&lt;/code&gt; (as a binary)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd3377bbf73c05121908290f5ec61083fc51ea3a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:validate_utf8&lt;/code&gt; - boolean that tells whether or not to validate the keys and values of the decoded query string are UTF-8 encoded. Defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39446e936b3eafbdcd7f7270f1d0fcf49715106b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:validate_utf8&lt;/code&gt; - boolean that tells whether or not we want to validate that parsed binaries are utf8 strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="130de6563b33b697b719dcfd3d10894d2f483fce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:validate_utf8&lt;/code&gt; - specifies whether multipart body parts should be validated as utf8 binaries. Defaults to true</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc700b4e12b0a4aea97e0ce7ea3e415e98e487bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:value&lt;/code&gt; - the value used to check if a checkbox is checked or unchecked. The default value is extracted from the form data if available</source>
          <target state="translated">&lt;code&gt;:value&lt;/code&gt; - значение, используемое для проверки, установлен ли флажок или нет. Значение по умолчанию извлекается из данных формы, если они доступны.</target>
        </trans-unit>
        <trans-unit id="270f0c45e04157a9d79b71b175e7fa48bdd4339e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:value&lt;/code&gt; - the value used to select a given option. The default value is extracted from the form data if available</source>
          <target state="translated">&lt;code&gt;:value&lt;/code&gt; - значение, используемое для выбора данной опции. Значение по умолчанию извлекается из данных формы, если они доступны.</target>
        </trans-unit>
        <trans-unit id="70066d4363377c5404337a75095b32c4df48e7e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:values&lt;/code&gt; must be a list of atoms. String values will be cast to atoms safely and only if the atom exists in the list (otherwise an error will be raised). Attempting to load any string not represented by an atom in the list will be invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d5e3e1e1558b1c1dca77c58bcf2435bb36d99a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:variant_also_negotiates&lt;/code&gt; - 506</source>
          <target state="translated">&lt;code&gt;:variant_also_negotiates&lt;/code&gt; - 506</target>
        </trans-unit>
        <trans-unit id="277cb5d7c82c97dec4af832bcd7185506bc0914a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:via&lt;/code&gt; - matches the route against some specific HTTP method (specified as an atom, like &lt;code&gt;:get&lt;/code&gt; or &lt;code&gt;:put&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:via&lt;/code&gt; - сопоставляет маршрут с определенным методом HTTP (указанным как атом, например &lt;code&gt;:get&lt;/code&gt; или &lt;code&gt;:put&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="99eab405af8b6c59683fca6ac666756ef9b5459d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:via&lt;/code&gt; - matches the route against some specific HTTP method(s) specified as an atom, like &lt;code&gt;:get&lt;/code&gt; or &lt;code&gt;:put&lt;/code&gt;, or a list, like &lt;code&gt;[:get, :post]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec8ac57498d9b367fc58b6997b2a386b379d9c51" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:virtual&lt;/code&gt; - When true, the field is not persisted to the database. Notice virtual fields do not support &lt;code&gt;:autogenerate&lt;/code&gt; nor &lt;code&gt;:read_after_writes&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:virtual&lt;/code&gt; - При значении true поле не сохраняется в базе данных. Обратите внимание, что виртуальные поля не поддерживают &lt;code&gt;:autogenerate&lt;/code&gt; и &lt;code&gt;:read_after_writes&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3a614418bff35d9c68382a71ceca2b3176a8727c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:watchers&lt;/code&gt; - a set of watchers to run alongside your server. It expects a list of tuples containing the executable and its arguments. Watchers are guaranteed to run in the application directory, but only when the server is enabled. For example, the watcher below will run the &quot;watch&quot; mode of the webpack build tool when the server starts. You can configure it to whatever build tool or command you want:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="612ba37298593c4cfc9e4a2526d2afc2fa92db33" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:watchers&lt;/code&gt; - a set of watchers to run alongside your server. It expects a list of tuples containing the executable and its arguments. Watchers are guaranteed to run in the application directory, but only when the server is enabled. For example, the watcher below will run the &amp;ldquo;watch&amp;rdquo; mode of the brunch build tool when the server starts. You can configure it to whatever build tool or command you want:</source>
          <target state="translated">&lt;code&gt;:watchers&lt;/code&gt; - набор наблюдателей для работы с вашим сервером. Он ожидает список кортежей, содержащих исполняемый файл и его аргументы. Наблюдатели гарантированно запускаются в каталоге приложения, но только тогда, когда сервер включен. Например, наблюдатель ниже запустит режим &amp;laquo;наблюдения&amp;raquo; инструмента сборки бранча при запуске сервера. Вы можете настроить его на любой инструмент или команду сборки, которую хотите:</target>
        </trans-unit>
        <trans-unit id="00dcf0394cbea8ca0a8d1c1ff92a5857f965b04f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:websocket&lt;/code&gt; - controls the websocket configuration. Defaults to &lt;code&gt;true&lt;/code&gt;. May be false or a keyword list of options. See &quot;Shared configuration&quot; and &quot;WebSocket configuration&quot; for the whole list</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7da2b979f29ffcd2cb74613fed66620666a9087a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:where&lt;/code&gt; - A filter for the association. See &quot;Filtering associations&quot; below. It does not apply to &lt;code&gt;:through&lt;/code&gt; associations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d494cf4b5dd8db35b131998bda0327a8b1938a85" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:where&lt;/code&gt; - A filter for the association. See &quot;Filtering associations&quot; in &lt;a href=&quot;#has_many/3&quot;&gt;&lt;code&gt;has_many/3&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87ce89c74e997e6330ba292a4bf1d213ad2616b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:where&lt;/code&gt; - A filter for the association. See &quot;Filtering associations&quot; in &lt;a href=&quot;#has_many/3&quot;&gt;&lt;code&gt;has_many/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f96ef609b6e2f447ad118b6d95ecdc5fed4160a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:where&lt;/code&gt; - A filter for the association. See &quot;Filtering associations&quot; in &lt;a href=&quot;#has_many/3&quot;&gt;&lt;code&gt;has_many/3&lt;/code&gt;&lt;/a&gt;. It does not apply to &lt;code&gt;:through&lt;/code&gt; associations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07c1cff63d3e818d9c9dc26ab1d2f59d80ad46bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:where&lt;/code&gt; - A filter for the association. See &amp;ldquo;Filtering associations&amp;rdquo; below. It does not apply to &lt;code&gt;:through&lt;/code&gt; associations.</source>
          <target state="translated">&lt;code&gt;:where&lt;/code&gt; - фильтр для ассоциации. См. &amp;laquo;Фильтрация ассоциаций&amp;raquo; ниже. Это не распространяется на &lt;code&gt;:through&lt;/code&gt; ассоциации.</target>
        </trans-unit>
        <trans-unit id="6746ca2f2c40e4a2fe37238a07f000c0ca50ad15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:where&lt;/code&gt; - A filter for the association. See &amp;ldquo;Filtering associations&amp;rdquo; in &lt;a href=&quot;#has_many/3&quot;&gt;&lt;code&gt;has_many/3&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;:where&lt;/code&gt; - фильтр для ассоциации. См. &amp;laquo;Фильтрация ассоциаций&amp;raquo; в &lt;a href=&quot;#has_many/3&quot;&gt; &lt;code&gt;has_many/3&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3de8c9c512424238873132eba860f6178fa08d81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:where&lt;/code&gt; - A filter for the association. See &amp;ldquo;Filtering associations&amp;rdquo; in &lt;a href=&quot;#has_many/3&quot;&gt;&lt;code&gt;has_many/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;:where&lt;/code&gt; - фильтр для ассоциации. См. &amp;laquo;Фильтрация ассоциаций&amp;raquo; в &lt;a href=&quot;#has_many/3&quot;&gt; &lt;code&gt;has_many/3&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6fe651757b87fa89bc6bc3e1d1e81c73ddbc0d82" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:where&lt;/code&gt; - A filter for the association. See &amp;ldquo;Filtering associations&amp;rdquo; in &lt;a href=&quot;#has_many/3&quot;&gt;&lt;code&gt;has_many/3&lt;/code&gt;&lt;/a&gt;. It does not apply to &lt;code&gt;:through&lt;/code&gt; associations.</source>
          <target state="translated">&lt;code&gt;:where&lt;/code&gt; - фильтр для ассоциации. См. &amp;laquo;Фильтрация ассоциаций&amp;raquo; в &lt;a href=&quot;#has_many/3&quot;&gt; &lt;code&gt;has_many/3&lt;/code&gt; &lt;/a&gt; . Это не распространяется на &lt;code&gt;:through&lt;/code&gt; ассоциации.</target>
        </trans-unit>
        <trans-unit id="5cafb1779d202b5db971ad73a77b5d042a475ce9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:window_ms&lt;/code&gt; - how long the client can wait for new messages in its poll request</source>
          <target state="translated">&lt;code&gt;:window_ms&lt;/code&gt; - как долго клиент может ждать новых сообщений в своем запросе на опрос</target>
        </trans-unit>
        <trans-unit id="294cf515652fc03feabffdaaf2b07841a73869d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:with&lt;/code&gt; - should be one of &lt;code&gt;:exception&lt;/code&gt; or &lt;code&gt;:clear_session&lt;/code&gt;. Defaults to &lt;code&gt;:exception&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:with&lt;/code&gt; - должно быть одним из &lt;code&gt;:exception&lt;/code&gt; или &lt;code&gt;:clear_session&lt;/code&gt; . По умолчанию &lt;code&gt;:exception&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8bed10d209229a7551a9bb9587c0a0843e64c14c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:with&lt;/code&gt; - the function to build the changeset from params. Defaults to the &lt;code&gt;changeset/2&lt;/code&gt; function of the associated module. It can be changed by passing an anonymous function or an MFA tuple. If using an MFA, the default changeset and parameters arguments will be prepended to the given args. For example, using &lt;code&gt;with: {Author, :special_changeset, [&quot;hello&quot;]}&lt;/code&gt; will be invoked as &lt;code&gt;Author.special_changeset(changeset, params, &quot;hello&quot;)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="675ff77431e5cc5ab96feb83f75abbe23c39cea5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:with&lt;/code&gt; - the function to build the changeset from params. Defaults to the &lt;code&gt;changeset/2&lt;/code&gt; function of the embedded module. It can be changed by passing an anonymous function or an MFA tuple. If using an MFA, the default changeset and parameters arguments will be prepended to the given args. For example, using &lt;code&gt;with: {Author, :special_changeset, [&quot;hello&quot;]}&lt;/code&gt; will be invoked as &lt;code&gt;Author.special_changeset(changeset, params, &quot;hello&quot;)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9002192e76c6e74f91d5f7a88df413408ff6c404" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:with&lt;/code&gt; - the function to build the changeset from params. Defaults to the changeset/2 function in the association module</source>
          <target state="translated">&lt;code&gt;:with&lt;/code&gt; - функция построения набора изменений из params. По умолчанию используется функция changeset / 2 в ассоциативном модуле</target>
        </trans-unit>
        <trans-unit id="db7535b7e7c9fc2963ec0db445f23ec2687da167" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:with&lt;/code&gt; - the function to build the changeset from params. Defaults to the changeset/2 function in the embed module</source>
          <target state="translated">&lt;code&gt;:with&lt;/code&gt; - функция построения набора изменений из params. По умолчанию используется функция changeset / 2 во встраиваемом модуле</target>
        </trans-unit>
        <trans-unit id="853e326db2c046676fd4a86b175fef0b3c0616c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:wrapper_tag&lt;/code&gt; - tag to wrap each paragraph (default: &lt;code&gt;:p&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;:wrapper_tag&lt;/code&gt; - тег для переноса каждого абзаца (по умолчанию &lt;code&gt;:p&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="79aba2325d923635217b05c371b04a8defec3c17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:x_forwarded_host&lt;/code&gt; - to override the host based on on the &quot;x-forwarded-host&quot; header</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8617e75278ebf76a2a5d7a7925790be0d9a1759" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:x_forwarded_port&lt;/code&gt; - to override the port based on on the &quot;x-forwarded-port&quot; header</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="482992f8fdb8b0aee4cbbc2ed6d1a53640eeeced" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:x_forwarded_proto&lt;/code&gt; - to override the protocol based on on the &quot;x-forwarded-proto&quot; header</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67dc18166dd7a6b20bd8fbbd4e7a32c93135cf86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:x_headers&lt;/code&gt; - a list of all request headers that have an &quot;x-&quot; prefix</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd509b1c1b2386ea11d386ee90192199a735dfc4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:x_headers&lt;/code&gt; - all request headers that have an &quot;x-&quot; prefix</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="558f04a73f86ac9b1aaec3c5ac412c25f6f3188e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:year&lt;/code&gt;, &lt;code&gt;:month&lt;/code&gt;, &lt;code&gt;:day&lt;/code&gt;, &lt;code&gt;:hour&lt;/code&gt;, &lt;code&gt;:minute&lt;/code&gt;, &lt;code&gt;:second&lt;/code&gt; - options passed to the underlying select. See &lt;a href=&quot;#select/4&quot;&gt;&lt;code&gt;select/4&lt;/code&gt;&lt;/a&gt; for more information. The available values can be given in &lt;code&gt;:options&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:year&lt;/code&gt; , &lt;code&gt;:month&lt;/code&gt; , &lt;code&gt;:day&lt;/code&gt; , &lt;code&gt;:hour&lt;/code&gt; , &lt;code&gt;:minute&lt;/code&gt; , &lt;code&gt;:second&lt;/code&gt; - параметры , передаваемые в основной выбор. См. &lt;a href=&quot;#select/4&quot;&gt; &lt;code&gt;select/4&lt;/code&gt; &lt;/a&gt; для получения дополнительной информации. Доступные значения могут быть указаны в &lt;code&gt;:options&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="efd75d48934f627ceba23be2e9bd69a33d233a52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@derive&lt;/code&gt; - the same as &lt;code&gt;@derive&lt;/code&gt; available in &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#defstruct/1&quot;&gt;&lt;code&gt;Kernel.defstruct/1&lt;/code&gt;&lt;/a&gt; as the schema defines a struct behind the scenes;</source>
          <target state="translated">&lt;code&gt;@derive&lt;/code&gt; - то же самое, что и &lt;code&gt;@derive&lt;/code&gt; , доступный в &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#defstruct/1&quot;&gt; &lt;code&gt;Kernel.defstruct/1&lt;/code&gt; ,&lt;/a&gt; поскольку схема определяет скрытую структуру;</target>
        </trans-unit>
        <trans-unit id="8b64d798c315368761c3d344ad1f7b85b5b0dfb3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@field_source_mapper&lt;/code&gt; - a function that receives the current field name and returns the mapping of this field name in the underlying source. In other words, it is a mechanism to automatically generate the &lt;code&gt;:source&lt;/code&gt; option for the &lt;code&gt;field&lt;/code&gt; macro. It defaults to &lt;code&gt;fn x -&amp;gt; x end&lt;/code&gt;, where no field transformation is done;</source>
          <target state="translated">&lt;code&gt;@field_source_mapper&lt;/code&gt; - функция, которая получает текущее имя поля и возвращает отображение этого имени поля в базовом источнике. Другими словами, это механизм для автоматической генерации опции &lt;code&gt;:source&lt;/code&gt; для макроса &lt;code&gt;field&lt;/code&gt; . По умолчанию используется &lt;code&gt;fn x -&amp;gt; x end&lt;/code&gt; , где преобразование поля не выполняется;</target>
        </trans-unit>
        <trans-unit id="df921370f4c518d693374d4ece2189c519a815d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@foreign_key_type&lt;/code&gt; - configures the default foreign key type used by &lt;code&gt;belongs_to&lt;/code&gt; associations. Defaults to &lt;code&gt;:id&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;@foreign_key_type&lt;/code&gt; - настраивает тип внешнего ключа по умолчанию, используемый ассоциациями &lt;code&gt;belongs_to&lt;/code&gt; . По умолчанию &lt;code&gt;:id&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="e07cbfe38beb6869a703c8188bf754bff19b24fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@foreign_key_type&lt;/code&gt; - configures the default foreign key type used by &lt;code&gt;belongs_to&lt;/code&gt; associations. It must be set in the same module that defines the &lt;code&gt;belongs_to&lt;/code&gt;. Defaults to &lt;code&gt;:id&lt;/code&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77a5d2966a6ee44c47afede36870777f36a594a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@moduledoc&lt;/code&gt; serves the same function that it does in any module. It's where we can put long-form documentation and doctests, if we have any.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50a6cfe1e1931f460fc3d7749d063854f4533d4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@primary_key&lt;/code&gt; - configures the schema primary key. It expects a tuple &lt;code&gt;{field_name, type, options}&lt;/code&gt; with the primary key field name, type (typically &lt;code&gt;:id&lt;/code&gt; or &lt;code&gt;:binary_id&lt;/code&gt;, but can be any type) and options. Defaults to &lt;code&gt;{:id, :id, autogenerate: true}&lt;/code&gt;. When set to &lt;code&gt;false&lt;/code&gt;, does not define a primary key in the schema unless composite keys are defined using the options of &lt;code&gt;field&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;@primary_key&lt;/code&gt; - настраивает первичный ключ схемы. Он ожидает кортеж &lt;code&gt;{field_name, type, options}&lt;/code&gt; с именем поля первичного ключа, типом (обычно &lt;code&gt;:id&lt;/code&gt; или &lt;code&gt;:binary_id&lt;/code&gt; , но может быть любого типа) и параметрами. По умолчанию &lt;code&gt;{:id, :id, autogenerate: true}&lt;/code&gt; . Если установлено значение &lt;code&gt;false&lt;/code&gt; , не определяет первичный ключ в схеме, если составные ключи не определены с использованием параметров &lt;code&gt;field&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7a8761d575a5a9da2e33f8204dba279ceb866d57" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@primary_key&lt;/code&gt; - configures the schema primary key. It expects a tuple &lt;code&gt;{field_name, type, options}&lt;/code&gt; with the primary key field name, type (typically &lt;code&gt;:id&lt;/code&gt; or &lt;code&gt;:binary_id&lt;/code&gt;, but can be any type) and options. It also accepts &lt;code&gt;false&lt;/code&gt; to disable the generation of a primary key field. Defaults to &lt;code&gt;{:id, :id, autogenerate: true}&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aad897208bfa45a2dcec27750a6c59f38b8cd3d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@schema_prefix&lt;/code&gt; - configures the schema prefix. Defaults to &lt;code&gt;nil&lt;/code&gt;, which generates structs and queries without prefix. When set, the prefix will be used by every built struct and on queries whenever the schema is used in a &lt;code&gt;from&lt;/code&gt; or a &lt;code&gt;join&lt;/code&gt;. In PostgreSQL, the prefix is called &quot;SCHEMA&quot; (typically set via Postgres' &lt;code&gt;search_path&lt;/code&gt;). In MySQL the prefix points to databases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2eefc88c03727ccbcdd8dacf394cc0a55447fd0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@schema_prefix&lt;/code&gt; - configures the schema prefix. Defaults to &lt;code&gt;nil&lt;/code&gt;, which generates structs and queries without prefix. When set, the prefix will be used by every built struct and on queries whenever the schema is used in a &lt;code&gt;from&lt;/code&gt; or a &lt;code&gt;join&lt;/code&gt;. In PostgreSQL, the prefix is called &amp;ldquo;SCHEMA&amp;rdquo; (typically set via Postgres&amp;rsquo; &lt;code&gt;search_path&lt;/code&gt;). In MySQL the prefix points to databases.</source>
          <target state="translated">&lt;code&gt;@schema_prefix&lt;/code&gt; - настраивает префикс схемы. По умолчанию &lt;code&gt;nil&lt;/code&gt; , что генерирует структуры и запросы без префикса. Если установлено, префикс будет использоваться каждой построенной структурой и запросами всякий раз, когда схема используется в &lt;code&gt;from&lt;/code&gt; или &lt;code&gt;join&lt;/code&gt; . В PostgreSQL префикс называется &amp;laquo;SCHEMA&amp;raquo; (обычно устанавливается через &lt;code&gt;search_path&lt;/code&gt; Postgres ). В MySQL префикс указывает на базы данных.</target>
        </trans-unit>
        <trans-unit id="7375da8cf3739185190835d127293209e65d2c66" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@timestamps_opts&lt;/code&gt; - configures the default timestamps type used by &lt;code&gt;timestamps&lt;/code&gt;. Defaults to &lt;code&gt;[type: :naive_datetime]&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;@timestamps_opts&lt;/code&gt; - настраивает тип временных меток по умолчанию, используемый для &lt;code&gt;timestamps&lt;/code&gt; . По умолчанию &lt;code&gt;[type: :naive_datetime]&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="e5d65287e46315c05b711f712d22393464b282a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@view_module&lt;/code&gt; - The view module being rendered</source>
          <target state="translated">&lt;code&gt;@view_module&lt;/code&gt; - визуализируемый модуль просмотра</target>
        </trans-unit>
        <trans-unit id="f945d07bef01d9de25a7de36330d9f1e04a965ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@view_template&lt;/code&gt; - The &lt;code&gt;@view_module&lt;/code&gt;&amp;rsquo;s template being rendered</source>
          <target state="translated">&lt;code&gt;@view_template&lt;/code&gt; - &lt;code&gt;@view_module&lt;/code&gt; шаблон @view_module</target>
        </trans-unit>
        <trans-unit id="194a11c6dafc39222d21d6f3b7d830646f41805a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@view_template&lt;/code&gt; - The &lt;code&gt;@view_module&lt;/code&gt;'s template being rendered</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17e1aebfc86298e187f1abca7d11520c4b99aca6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BackgroundJob.Plug&lt;/code&gt; can be implemented as any Module Plug discussed &lt;a href=&quot;plug&quot;&gt;in the Plug guide&lt;/a&gt;. Note though it is not advised to forward to another Phoenix endpoint. This is because plugs defined by your app and the forwarded endpoint would be invoked twice, which may lead to errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="326528f786e0c76a0f1a70a9b50f460872dff2ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DELETE /user&lt;/code&gt; =&amp;gt; &lt;code&gt;:delete&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;DELETE /user&lt;/code&gt; =&amp;gt; &lt;code&gt;:delete&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="396e7df496287eb762fc03d1a3c67ca31b1dc929" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DELETE /users/:id&lt;/code&gt; =&amp;gt; &lt;code&gt;:delete&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;DELETE /users/:id&lt;/code&gt; =&amp;gt; &lt;code&gt;:delete&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c292525a048a2ba4ea1c8b2c376cba7bbd5a1660" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GET /user/edit&lt;/code&gt; =&amp;gt; &lt;code&gt;:edit&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;GET /user/edit&lt;/code&gt; =&amp;gt; &lt;code&gt;:edit&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="afe1988640a31fa8e12454f5e1aa5794c90bb08c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GET /user/new&lt;/code&gt; =&amp;gt; &lt;code&gt;:new&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;GET /user/new&lt;/code&gt; =&amp;gt; &lt;code&gt;:new&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4ddd0baa1c570acb4cf62154cd3cb24f1839b03e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GET /user&lt;/code&gt; =&amp;gt; &lt;code&gt;:show&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;GET /user&lt;/code&gt; =&amp;gt; &lt;code&gt;:show&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="845a4ee193a826ae68e30214da191e3cb75d154b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GET /users/:id/edit&lt;/code&gt; =&amp;gt; &lt;code&gt;:edit&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;GET /users/:id/edit&lt;/code&gt; =&amp;gt; &lt;code&gt;:edit&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="466a057d1153fab1a6e47f7766ad96a825430b2d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GET /users/:id&lt;/code&gt; =&amp;gt; &lt;code&gt;:show&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;GET /users/:id&lt;/code&gt; =&amp;gt; &lt;code&gt;:show&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f2792d3b228138977cd06acbeaf49bd3c910c6b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GET /users/new&lt;/code&gt; =&amp;gt; &lt;code&gt;:new&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;GET /users/new&lt;/code&gt; =&amp;gt; &lt;code&gt;:new&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4ae906d9e017b1296294203a5cd6c4596cca9d23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GET /users&lt;/code&gt; =&amp;gt; &lt;code&gt;:index&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;GET /users&lt;/code&gt; =&amp;gt; &lt;code&gt;:index&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5a1f2ed282aac54ddce7110aab41563cea3b7095" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;KeyGenerator&lt;/code&gt; implements PBKDF2 (Password-Based Key Derivation Function 2), part of PKCS #5 v2.0 (Password-Based Cryptography Specification).</source>
          <target state="translated">&lt;code&gt;KeyGenerator&lt;/code&gt; реализует PBKDF2 (функция получения ключа на основе пароля 2), часть PKCS # 5 v2.0 (спецификация криптографии на основе пароля).</target>
        </trans-unit>
        <trans-unit id="e7edbb8de2ba549b2f5538753d1b9cfa83141853" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PATCH /user&lt;/code&gt; =&amp;gt; &lt;code&gt;:update&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;PATCH /user&lt;/code&gt; =&amp;gt; &lt;code&gt;:update&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fae7f13dcecbfdb02c7c65806210c0640d54072a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PATCH /users/:id&lt;/code&gt; =&amp;gt; &lt;code&gt;:update&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;PATCH /users/:id&lt;/code&gt; =&amp;gt; &lt;code&gt;:update&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9f26164ec51b93a377ca195fb90a8a3e1f178609" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;POST /user&lt;/code&gt; =&amp;gt; &lt;code&gt;:create&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;POST /user&lt;/code&gt; =&amp;gt; &lt;code&gt;:create&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f308d7f8d8a686c4de7d35ec24618ecde4189da2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;POST /users&lt;/code&gt; =&amp;gt; &lt;code&gt;:create&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;POST /users&lt;/code&gt; =&amp;gt; &lt;code&gt;:create&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c9d95b5813b5657cc9c815db9550ab556b50bb54" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PUT /user&lt;/code&gt; =&amp;gt; &lt;code&gt;:update&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;PUT /user&lt;/code&gt; =&amp;gt; &lt;code&gt;:update&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="88e3b4ba57c3abfa74c605e6dbcc495113093fff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PUT /users/:id&lt;/code&gt; =&amp;gt; &lt;code&gt;:update&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;PUT /users/:id&lt;/code&gt; =&amp;gt; &lt;code&gt;:update&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="57e102bc29c5245234649cbe4558650bcd05b6e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Phoenix.PubSub.PG2&lt;/code&gt; - uses Distributed Elixir, directly exchanging notifications between servers</source>
          <target state="translated">&lt;code&gt;Phoenix.PubSub.PG2&lt;/code&gt; - использует распределенный эликсир, напрямую обмениваясь уведомлениями между серверами</target>
        </trans-unit>
        <trans-unit id="52c7ea69c78a342a9d331ba77f4657882466ecba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Phoenix.PubSub.Redis&lt;/code&gt; - uses Redis to exchange data between servers</source>
          <target state="translated">&lt;code&gt;Phoenix.PubSub.Redis&lt;/code&gt; - использует Redis для обмена данными между серверами</target>
        </trans-unit>
        <trans-unit id="6b022b381663489e98f3bf427ba610489fe24d49" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Phoenix.PubSub.Redis&lt;/code&gt; - uses Redis to exchange data between servers. It requires the &lt;code&gt;:phoenix_pubsub_redis&lt;/code&gt; dependency</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f69b47d77da1f8fde452e320ff7e62c90aba6c0e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[&quot;*/*&quot;]&lt;/code&gt; - never raises</source>
          <target state="translated">&lt;code&gt;[&quot;*/*&quot;]&lt;/code&gt; - никогда не повышает</target>
        </trans-unit>
        <trans-unit id="ec9b7da5004b4e421f02228b6382f951d410f0e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[&quot;text/html&quot;, &quot;application/*&quot;]&lt;/code&gt; - doesn&amp;rsquo;t raise for those values</source>
          <target state="translated">&lt;code&gt;[&quot;text/html&quot;, &quot;application/*&quot;]&lt;/code&gt; - не повышает для этих значений</target>
        </trans-unit>
        <trans-unit id="31114e029cf1fa61029ab8ed7ceeeb6cd3019e61" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[&quot;text/html&quot;, &quot;application/*&quot;]&lt;/code&gt; - doesn't raise for those values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="502d9f8cd6f8ee6eebdee6d87a2fd1684d9d4c94" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[:ecto, :repo, :init]&lt;/code&gt; - dispatched by &lt;code&gt;Ecto.Repo.Supervisor&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fd068070f0a70b6feb5d1819be1fd6a5006dc3c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[:ecto, :repo, :init]&lt;/code&gt; - it is invoked whenever a repository starts. The measurement is a single &lt;code&gt;system_time&lt;/code&gt; entry in native unit. The metadata is the &lt;code&gt;:repo&lt;/code&gt; and all initialization options under &lt;code&gt;:opts&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3ce43e2a6c62a1050666d01a44208c4d326409a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[:my, :plug, :start]&lt;/code&gt; - emitted when the plug is invoked. The event carries the &lt;code&gt;system_time&lt;/code&gt; as measurement. The metadata is the whole &lt;a href=&quot;plug.conn&quot;&gt;&lt;code&gt;Plug.Conn&lt;/code&gt;&lt;/a&gt; under the &lt;code&gt;:conn&lt;/code&gt; key and any leftover options given to the plug under &lt;code&gt;:options&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="048020ca41f36384440189b6989a39e65c728391" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[:my, :plug, :stop]&lt;/code&gt; - emitted right before the request is sent. The event carries a single measurement, &lt;code&gt;:duration&lt;/code&gt;, which is the monotonic time difference between the stop and start events. It has the same metadata as the start event, except the connection has been updated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="852875a085618fe64d2506698b54d7e9f5484493" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[:my_app, :repo, :query]&lt;/code&gt; - should be invoked on every query send to the adapter, including queries that are related to the transaction management. The measurement will be the time necessary to run the query including queue and encoding time. The metadata is a map where we recommend developers to pass at least the same keys as found in the &lt;a href=&quot;ecto.logentry&quot;&gt;&lt;code&gt;Ecto.LogEntry&lt;/code&gt;&lt;/a&gt; struct</source>
          <target state="translated">&lt;code&gt;[:my_app, :repo, :query]&lt;/code&gt; - должен вызываться при каждом запросе, отправленном адаптеру, включая запросы, связанные с управлением транзакциями. Измерением будет время, необходимое для выполнения запроса, включая время очереди и время кодирования. Метаданные - это карта, на которой мы рекомендуем разработчикам передавать как минимум те же ключи, что и в структуре &lt;a href=&quot;ecto.logentry&quot;&gt; &lt;code&gt;Ecto.LogEntry&lt;/code&gt; .&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9a8ed3a2ff050251eae9ca8efa174766ab24f3d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[:phoenix, :channel_handled_in]&lt;/code&gt; - dispatched at the end of a channel handle in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="384693f75584169018702ecaedaeed559837a988" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[:phoenix, :channel_joined]&lt;/code&gt; - dispatched at the end of a channel join</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8ae1ae088987d936cc7f8e23b5d66db793a42de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[:phoenix, :endpoint, :start]&lt;/code&gt; - dispatched by &lt;a href=&quot;../plug/plug.telemetry&quot;&gt;&lt;code&gt;Plug.Telemetry&lt;/code&gt;&lt;/a&gt; in your endpoint, usually after code reloading</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bae2a6cc1ce963158b71b75bb975bf4fb1dc78a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[:phoenix, :endpoint, :stop]&lt;/code&gt; - dispatched by &lt;a href=&quot;../plug/plug.telemetry&quot;&gt;&lt;code&gt;Plug.Telemetry&lt;/code&gt;&lt;/a&gt; in your endpoint whenever the response is sent</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72fe4edf0b2c837fb7f8db3e515d1a8e31a61a48" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[:phoenix, :endpoint, :stop]&lt;/code&gt; - dispatched by &lt;a href=&quot;../plug/plug.telemetry&quot;&gt;&lt;code&gt;Plug.Telemetry&lt;/code&gt;&lt;/a&gt;, one of the default plugs in your endpoint, whenever the response is sent</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4046a5569447898146aa731c8e99c14cf13ee181" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[:phoenix, :error_rendered]&lt;/code&gt; - dispatched at the end of an error view being rendered</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef3db62468041373b25760ef53261e132f034af6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[:phoenix, :live_component, :handle_event, :exception]&lt;/code&gt; - Dispatched by a &lt;a href=&quot;phoenix.livecomponent&quot;&gt;&lt;code&gt;Phoenix.LiveComponent&lt;/code&gt;&lt;/a&gt; when an exception is raised in the &lt;a href=&quot;phoenix.livecomponent#c:handle_event/3&quot;&gt;&lt;code&gt;handle_event/3&lt;/code&gt;&lt;/a&gt; callback.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaf6d6b2523cb9e13be49b078b4dde1aa35b53d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[:phoenix, :live_component, :handle_event, :start]&lt;/code&gt; - Dispatched by a &lt;a href=&quot;phoenix.livecomponent&quot;&gt;&lt;code&gt;Phoenix.LiveComponent&lt;/code&gt;&lt;/a&gt; immediately before &lt;a href=&quot;phoenix.livecomponent#c:handle_event/3&quot;&gt;&lt;code&gt;handle_event/3&lt;/code&gt;&lt;/a&gt; is invoked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8eba0016af18e3b92d1da79fbaf41824b6b7fb3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[:phoenix, :live_component, :handle_event, :stop]&lt;/code&gt; - Dispatched by a &lt;a href=&quot;phoenix.livecomponent&quot;&gt;&lt;code&gt;Phoenix.LiveComponent&lt;/code&gt;&lt;/a&gt; when the &lt;a href=&quot;phoenix.livecomponent#c:handle_event/3&quot;&gt;&lt;code&gt;handle_event/3&lt;/code&gt;&lt;/a&gt; callback completes successfully.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37922d07bf824518974e87c8a6854b3d84a18137" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[:phoenix, :live_view, :handle_event, :exception]&lt;/code&gt; - Dispatched by a &lt;a href=&quot;phoenix.liveview&quot;&gt;&lt;code&gt;Phoenix.LiveView&lt;/code&gt;&lt;/a&gt; when an exception is raised in the &lt;a href=&quot;phoenix.liveview#c:handle_event/3&quot;&gt;&lt;code&gt;handle_event/3&lt;/code&gt;&lt;/a&gt; callback.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="500acd134fa453928f24c041c5338df1159b6722" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[:phoenix, :live_view, :handle_event, :start]&lt;/code&gt; - Dispatched by a &lt;a href=&quot;phoenix.liveview&quot;&gt;&lt;code&gt;Phoenix.LiveView&lt;/code&gt;&lt;/a&gt; immediately before &lt;a href=&quot;phoenix.liveview#c:handle_event/3&quot;&gt;&lt;code&gt;handle_event/3&lt;/code&gt;&lt;/a&gt; is invoked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78014a8fe45bdbfe5fe41c17a11b08299a86a4f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[:phoenix, :live_view, :handle_event, :stop]&lt;/code&gt; - Dispatched by a &lt;a href=&quot;phoenix.liveview&quot;&gt;&lt;code&gt;Phoenix.LiveView&lt;/code&gt;&lt;/a&gt; when the &lt;a href=&quot;phoenix.liveview#c:handle_event/3&quot;&gt;&lt;code&gt;handle_event/3&lt;/code&gt;&lt;/a&gt; callback completes successfully.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0617d42eab897d5f527793c100309cee3b8bfebf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[:phoenix, :live_view, :handle_params, :exception]&lt;/code&gt; - Dispatched by a &lt;a href=&quot;phoenix.liveview&quot;&gt;&lt;code&gt;Phoenix.LiveView&lt;/code&gt;&lt;/a&gt; when the when an exception is raised in the &lt;a href=&quot;phoenix.liveview#c:handle_params/3&quot;&gt;&lt;code&gt;handle_params/3&lt;/code&gt;&lt;/a&gt; callback.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cecf69e29ff09ec088346426e939f35cc08408a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[:phoenix, :live_view, :handle_params, :start]&lt;/code&gt; - Dispatched by a &lt;a href=&quot;phoenix.liveview&quot;&gt;&lt;code&gt;Phoenix.LiveView&lt;/code&gt;&lt;/a&gt; immediately before &lt;a href=&quot;phoenix.liveview#c:handle_params/3&quot;&gt;&lt;code&gt;handle_params/3&lt;/code&gt;&lt;/a&gt; is invoked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd748f36f23bbb3e135ca03131837efd76c01c5e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[:phoenix, :live_view, :handle_params, :stop]&lt;/code&gt; - Dispatched by a &lt;a href=&quot;phoenix.liveview&quot;&gt;&lt;code&gt;Phoenix.LiveView&lt;/code&gt;&lt;/a&gt; when the &lt;a href=&quot;phoenix.liveview#c:handle_params/3&quot;&gt;&lt;code&gt;handle_params/3&lt;/code&gt;&lt;/a&gt; callback completes successfully.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08cbb0f7f03c1ba0c6c847db1b5eebb6b6258ebf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[:phoenix, :live_view, :mount, :exception]&lt;/code&gt; - Dispatched by a &lt;a href=&quot;phoenix.liveview&quot;&gt;&lt;code&gt;Phoenix.LiveView&lt;/code&gt;&lt;/a&gt; when an exception is raised in the &lt;a href=&quot;phoenix.liveview#c:mount/3&quot;&gt;&lt;code&gt;mount/3&lt;/code&gt;&lt;/a&gt; callback.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f2493a9df81dcca5a129d1443d4a3db08880555" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[:phoenix, :live_view, :mount, :start]&lt;/code&gt; - Dispatched by a &lt;a href=&quot;phoenix.liveview&quot;&gt;&lt;code&gt;Phoenix.LiveView&lt;/code&gt;&lt;/a&gt; immediately before &lt;a href=&quot;phoenix.liveview#c:mount/3&quot;&gt;&lt;code&gt;mount/3&lt;/code&gt;&lt;/a&gt; is invoked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b5b60dfb1f31ccefd292ce8e185fab80d97dc68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[:phoenix, :live_view, :mount, :stop]&lt;/code&gt; - Dispatched by a &lt;a href=&quot;phoenix.liveview&quot;&gt;&lt;code&gt;Phoenix.LiveView&lt;/code&gt;&lt;/a&gt; when the &lt;a href=&quot;phoenix.liveview#c:mount/3&quot;&gt;&lt;code&gt;mount/3&lt;/code&gt;&lt;/a&gt; callback completes successfully.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5f5def949ddd7752d4bafdbfb05dad1c848099b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[:phoenix, :router_dispatch, :exception]&lt;/code&gt; - dispatched by &lt;a href=&quot;phoenix.router&quot;&gt;&lt;code&gt;Phoenix.Router&lt;/code&gt;&lt;/a&gt; after exceptions on dispatching a route</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99f49d3b3d2d55c12708c8c7bee666a2f46afda5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[:phoenix, :router_dispatch, :start]&lt;/code&gt; - dispatched by &lt;a href=&quot;phoenix.router&quot;&gt;&lt;code&gt;Phoenix.Router&lt;/code&gt;&lt;/a&gt; before dispatching to a matched route</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6788b626c525250b1ae228d4d8e32a29fd79428" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[:phoenix, :router_dispatch, :stop]&lt;/code&gt; - dispatched by &lt;a href=&quot;phoenix.router&quot;&gt;&lt;code&gt;Phoenix.Router&lt;/code&gt;&lt;/a&gt; after successfully dispatching a matched route</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f40945ff9c2b05a88ddf2028cf8ea91d66b465f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[:phoenix, :router_dispatch, :stop]&lt;/code&gt; - dispatched by Phoenix.Router after successfully dispatching to a matched route</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7634287fa84c324ec6e8eb96bd448379058fd6f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[:phoenix, :socket_connected]&lt;/code&gt; - dispatched by &lt;a href=&quot;phoenix.socket&quot;&gt;&lt;code&gt;Phoenix.Socket&lt;/code&gt;&lt;/a&gt;, at the end of a socket connection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="574f78da3918f1df28031ca2abb4a2badeb36073" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[:plug, :router_dispatch, :exception]&lt;/code&gt; - dispatched after exceptions on dispatching a route</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75df1362f32c4f7774bd270329b5eae073a589ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[:plug, :router_dispatch, :start]&lt;/code&gt; - dispatched before dispatching to a matched route</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a3874437f06cc9b918a0a26c113ca72b9806217" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[:plug, :router_dispatch, :stop]&lt;/code&gt; - dispatched after successfully dispatching a matched route</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b399b0b5154cd5d5880fbba6ea2c7766edafd15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[]&lt;/code&gt; - always raises (default)</source>
          <target state="translated">&lt;code&gt;[]&lt;/code&gt; - всегда повышает (по умолчанию)</target>
        </trans-unit>
        <trans-unit id="bc08bb9314fd272ea6758237de4f493df2fdeedf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__cardinality__&lt;/code&gt; - the cardinality of the association</source>
          <target state="translated">&lt;code&gt;__cardinality__&lt;/code&gt; - мощность ассоциации</target>
        </trans-unit>
        <trans-unit id="60458994c9d1137682ffaa7da514a4336f646da6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__field__&lt;/code&gt; - the association field in &lt;code&gt;owner&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;__field__&lt;/code&gt; - поле ассоциации у &lt;code&gt;owner&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="501dc0a5295c6f310a8857fb546cf7851274dfe9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__owner__&lt;/code&gt; - the schema that owns the association</source>
          <target state="translated">&lt;code&gt;__owner__&lt;/code&gt; - схема, которая владеет ассоциацией</target>
        </trans-unit>
        <trans-unit id="7df60e7c021f9d96d0ca48f8e648e5178975cca4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__schema__(:association, assoc)&lt;/code&gt; - Returns the association reflection of the given assoc;</source>
          <target state="translated">&lt;code&gt;__schema__(:association, assoc)&lt;/code&gt; - возвращает отражение ассоциации данного assoc;</target>
        </trans-unit>
        <trans-unit id="b22136df050335135f9434fed91e7d22b22abed9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__schema__(:associations)&lt;/code&gt; - Returns a list of all association field names;</source>
          <target state="translated">&lt;code&gt;__schema__(:associations)&lt;/code&gt; - возвращает список всех имен полей ассоциации;</target>
        </trans-unit>
        <trans-unit id="7b4d0cc4e7fe1f4e10ca971abedd3d135d7260f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__schema__(:autogenerate_id)&lt;/code&gt; - Primary key that is auto generated on insert;</source>
          <target state="translated">&lt;code&gt;__schema__(:autogenerate_id)&lt;/code&gt; - Первичный ключ, автоматически сгенерированный при вставке;</target>
        </trans-unit>
        <trans-unit id="d5ab8ddeaae7cebd78941d5a993999f707ab2256" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__schema__(:embed, embed)&lt;/code&gt; - Returns the embedding reflection of the given embed;</source>
          <target state="translated">&lt;code&gt;__schema__(:embed, embed)&lt;/code&gt; - возвращает отражение данного встраивания;</target>
        </trans-unit>
        <trans-unit id="3b7eab71237dfd0167d866268bf391c916ba7f6e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__schema__(:embeds)&lt;/code&gt; - Returns a list of all embedded field names;</source>
          <target state="translated">&lt;code&gt;__schema__(:embeds)&lt;/code&gt; - возвращает список всех встроенных имен полей;</target>
        </trans-unit>
        <trans-unit id="d786750dc6e0e5fe89284dac721171857269027d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__schema__(:field_source, field)&lt;/code&gt; - Returns the alias of the given field;</source>
          <target state="translated">&lt;code&gt;__schema__(:field_source, field)&lt;/code&gt; - возвращает псевдоним данного поля;</target>
        </trans-unit>
        <trans-unit id="2713e37ae4b640ef3081574b433b1c9e40f0be3e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__schema__(:fields)&lt;/code&gt; - Returns a list of all non-virtual field names;</source>
          <target state="translated">&lt;code&gt;__schema__(:fields)&lt;/code&gt; - возвращает список всех имен не виртуальных полей;</target>
        </trans-unit>
        <trans-unit id="7af2b9bfb8c8a603373ec533b57a365a79734329" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__schema__(:prefix)&lt;/code&gt; - Returns optional prefix for source provided by &lt;code&gt;@schema_prefix&lt;/code&gt; schema attribute;</source>
          <target state="translated">&lt;code&gt;__schema__(:prefix)&lt;/code&gt; - возвращает необязательный префикс для источника, предоставленный &lt;code&gt;@schema_prefix&lt;/code&gt; схемы @schema_prefix ;</target>
        </trans-unit>
        <trans-unit id="9cd3b4bcd0ad8975a337707299ccb68d43f16770" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__schema__(:primary_key)&lt;/code&gt; - Returns a list of primary key fields (empty if there is none);</source>
          <target state="translated">&lt;code&gt;__schema__(:primary_key)&lt;/code&gt; - возвращает список полей первичного ключа (пусто, если их нет);</target>
        </trans-unit>
        <trans-unit id="7c4d7da202d68a4de503742110e7b335acc66b9e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__schema__(:read_after_writes)&lt;/code&gt; - Non-virtual fields that must be read back from the database after every write (insert or update);</source>
          <target state="translated">&lt;code&gt;__schema__(:read_after_writes)&lt;/code&gt; - не виртуальные поля, которые должны считываться из базы данных после каждой записи (вставки или обновления);</target>
        </trans-unit>
        <trans-unit id="21e6ffceceb75b6be4b94314c41f963bb69311bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__schema__(:redact_fields)&lt;/code&gt; - Returns a list of redacted field names;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a53092d48e99cfd91503495372e582761b240955" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__schema__(:source)&lt;/code&gt; - Returns the source as given to &lt;a href=&quot;#schema/2&quot;&gt;&lt;code&gt;schema/2&lt;/code&gt;&lt;/a&gt;;</source>
          <target state="translated">&lt;code&gt;__schema__(:source)&lt;/code&gt; - возвращает источник, указанный в &lt;a href=&quot;#schema/2&quot;&gt; &lt;code&gt;schema/2&lt;/code&gt; &lt;/a&gt; ;</target>
        </trans-unit>
        <trans-unit id="90db3a65d3ad0eccdef17f41217c384f1cfcca2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__schema__(:type, field)&lt;/code&gt; - Returns the type of the given non-virtual field;</source>
          <target state="translated">&lt;code&gt;__schema__(:type, field)&lt;/code&gt; - возвращает тип заданного невиртуального поля;</target>
        </trans-unit>
        <trans-unit id="c37ba2717ade4159d34c6381a772e16be16464b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_build&lt;/code&gt; - a directory created by the &lt;code&gt;mix&lt;/code&gt; command line tool that ships as part of Elixir that holds all compilation artefacts. As we have seen in &quot;Up and Running&quot;, &lt;code&gt;mix&lt;/code&gt; is the main interface to your application. We use Mix to compile our code, create databases, run our server, and more. This directory must not be checked into version control and it can be removed at any time. Removing it will force Mix to rebuild your application from scratch</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77d8482e88510540a3e7437dbe293fcb28c18db9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;action&lt;/code&gt; - The action to be performed with the changeset</source>
          <target state="translated">&lt;code&gt;action&lt;/code&gt; - действие, которое будет выполнено с набором изменений</target>
        </trans-unit>
        <trans-unit id="bb26b116dfc0e662257809bfad7ff62c1972ce96" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;adapter&lt;/code&gt; - holds the adapter information in a tuple</source>
          <target state="translated">&lt;code&gt;adapter&lt;/code&gt; - содержит информацию об адаптере в виде кортежа</target>
        </trans-unit>
        <trans-unit id="e1695512bcc987f8fbb70766863490d71bcbac15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;age&lt;/code&gt; - The max age of assets to keep in seconds</source>
          <target state="translated">&lt;code&gt;age&lt;/code&gt; - Максимальный возраст активов в секундах</target>
        </trans-unit>
        <trans-unit id="1928a0089f20f7ef636c617eba08dfb95544c760" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;append&lt;/code&gt; - append the new DOM contents instead of replacing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f050567128d29d6ed570cd73fffa8a53ed0b6755" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;args&lt;/code&gt; is the argument term (second argument) passed to &lt;a href=&quot;#start_link/3&quot;&gt;&lt;code&gt;start_link/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;args&lt;/code&gt; - это термин аргумента (второй аргумент), переданный в &lt;a href=&quot;#start_link/3&quot;&gt; &lt;code&gt;start_link/3&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="57e78ef0b5f95578e214cf4dc7f0b8473dc2b940" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;args&lt;/code&gt; is the argument term (second argument) passed to &lt;code&gt;start_link/3&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;args&lt;/code&gt; - это термин аргумента (второй аргумент), переданный в &lt;code&gt;start_link/3&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f8fd0db84f127eb3f4a3b0b3f9e02a8316ea7060" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assets&lt;/code&gt; - a directory that keeps everything related to front-end assets, such as JavaScript, CSS, static images and more. It is typically handled by the &lt;code&gt;npm&lt;/code&gt; tool. Phoenix developers typically only need to run &lt;code&gt;npm install&lt;/code&gt; inside the assets directory. Everything else is managed by Phoenix</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33bd3cea5760043e63c1bbe82b1f25b67929bff0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assigns&lt;/code&gt; - The map of socket assigns, default: &lt;code&gt;%{}&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;assigns&lt;/code&gt; - Карта назначений сокетов, по умолчанию: &lt;code&gt;%{}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d74f3e191eb5acba7c3cf854b862eb8f52f9ec93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assigns&lt;/code&gt; - a dictionary with the assigns to be used in the view. Those assigns are merged and have higher precedence than the connection assigns (&lt;code&gt;conn.assigns&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;assigns&lt;/code&gt; - словарь с присваиваниями, которые будут использоваться в представлении. Эти назначения объединяются и имеют более высокий приоритет, чем назначенное соединение ( &lt;code&gt;conn.assigns&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="a459cee802591afcc5aa7f732099408777084f44" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assigns&lt;/code&gt; - shared user data as a map</source>
          <target state="translated">&lt;code&gt;assigns&lt;/code&gt; - общие пользовательские данные в виде карты</target>
        </trans-unit>
        <trans-unit id="2946457673ecbfb08605b7bec7ffbfe90bbf968c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;beforeDestroy&lt;/code&gt; - the element is about to be removed from the DOM. &lt;em&gt;Note&lt;/em&gt;: any call here must be synchronous as the operation cannot be deferred or cancelled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36f642915ea5a544a94bf28b2ad73345fcfdf3fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;beforeUpdate&lt;/code&gt; - the element is about to be updated in the DOM. &lt;em&gt;Note&lt;/em&gt;: any call here must be synchronous as the operation cannot be deferred or cancelled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61ab9a804f28c228a2037549a7e18cc912fe18a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bindingPrefix&lt;/code&gt; - the prefix to use for phoenix bindings. Defaults &lt;code&gt;&quot;phx-&quot;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b88f712feb4137592e76db6c5abf139aad2c4da1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;body_params&lt;/code&gt; - the request body params, populated through a &lt;a href=&quot;plug.parsers&quot;&gt;&lt;code&gt;Plug.Parsers&lt;/code&gt;&lt;/a&gt; parser.</source>
          <target state="translated">&lt;code&gt;body_params&lt;/code&gt; - параметры тела запроса, заполняемые парсером &lt;a href=&quot;plug.parsers&quot;&gt; &lt;code&gt;Plug.Parsers&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0e5e588bc5a53e0204f4709fa13771f97d4c3053" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;broadcast&lt;/code&gt; - broadcasts a message on the given topic sends: &lt;code&gt;{:broadcast, :none | pid, topic, message}&lt;/code&gt; respond with: &lt;code&gt;:ok | {:error, reason} | {:perform, {m, f, a}}&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;broadcast&lt;/code&gt; - транслирует сообщение по заданной теме отправляет: &lt;code&gt;{:broadcast, :none | pid, topic, message}&lt;/code&gt; ответьте &lt;code&gt;:ok | {:error, reason} | {:perform, {m, f, a}}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0d9033fb03f86462199abee28263a916b8af8fb9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;broadcast_period&lt;/code&gt; - The interval in milliseconds to send delta broadcats across the cluster. Default &lt;code&gt;1500&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;broadcast_period&lt;/code&gt; - интервал в миллисекундах для отправки дельта-широковещательных сообщений по кластеру. По умолчанию &lt;code&gt;1500&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0c0a52b7c474a7a7ec67072303cfb308712b2efd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;call/2&lt;/code&gt; which carries out the connection transformation. &lt;code&gt;call/2&lt;/code&gt; is just a function plug that we saw earlier</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e5d14e8942256d6946a38b599d8a4109b0d1433" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cardinality&lt;/code&gt; - The association cardinality</source>
          <target state="translated">&lt;code&gt;cardinality&lt;/code&gt; - мощность ассоциации</target>
        </trans-unit>
        <trans-unit id="af99d97bdf99913d17791219d55df9567357ce94" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cast/3&lt;/code&gt; first takes a struct, then the parameters (the proposed updates), and then the final field is the list of columns to be updated. &lt;code&gt;cast/3&lt;/code&gt; also will only take fields that exist in the schema.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db47714417a1545c26cbdc85b19b394fa5736fb6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;changes&lt;/code&gt; - The &lt;code&gt;changes&lt;/code&gt; from parameters that were approved in casting</source>
          <target state="translated">&lt;code&gt;changes&lt;/code&gt; - &lt;code&gt;changes&lt;/code&gt; параметров, утвержденных при отливке</target>
        </trans-unit>
        <trans-unit id="f46f7ad1dbe9307e27576d1fd8b852115a7001b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;changes&lt;/code&gt; - changes are merged giving precedence to the &lt;code&gt;changeset2&lt;/code&gt; changes.</source>
          <target state="translated">&lt;code&gt;changes&lt;/code&gt; - изменения объединяются, давая приоритет &lt;code&gt;changeset2&lt;/code&gt; изменений 2.</target>
        </trans-unit>
        <trans-unit id="2cc957a83fc4dd04cae3274c8d2201d7d282b5ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;changes&lt;/code&gt; is a map or keyword where the key is an atom representing a field, association or embed and the value is a term. Note the &lt;code&gt;value&lt;/code&gt; is directly stored in the changeset with no validation whatsoever. For this reason, this function is meant for working with data internal to the application.</source>
          <target state="translated">&lt;code&gt;changes&lt;/code&gt; - это карта или ключевое слово, где ключ представляет собой атом, представляющий поле, ассоциацию или встраивание, а значение - это термин. Обратите внимание, что &lt;code&gt;value&lt;/code&gt; напрямую сохраняется в наборе изменений без какой-либо проверки. По этой причине эта функция предназначена для работы с внутренними данными приложения.</target>
        </trans-unit>
        <trans-unit id="d7c41bedc1f097e6f7a2c23c18b3f7a4360cd6bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;channel&lt;/code&gt; - The current channel module</source>
          <target state="translated">&lt;code&gt;channel&lt;/code&gt; - Текущий модуль канала</target>
        </trans-unit>
        <trans-unit id="b56a0b5f68d23af91109b0200d2265a11f6cb47a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;channel_pid&lt;/code&gt; - The channel pid</source>
          <target state="translated">&lt;code&gt;channel_pid&lt;/code&gt; - идентификатор канала</target>
        </trans-unit>
        <trans-unit id="6f3155de07fd6379a78402dc370e636798bf43b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;checkout/2&lt;/code&gt; and &lt;code&gt;transaction/2&lt;/code&gt; can be combined and nested multiple times. If &lt;code&gt;checkout/2&lt;/code&gt; is called inside the function of another &lt;code&gt;checkout/2&lt;/code&gt; call, the function is simply executed, without checking out a new connection.</source>
          <target state="translated">&lt;code&gt;checkout/2&lt;/code&gt; и &lt;code&gt;transaction/2&lt;/code&gt; могут быть объединены и вложены несколько раз. Если &lt;code&gt;checkout/2&lt;/code&gt; вызывается внутри функции другого вызова &lt;code&gt;checkout/2&lt;/code&gt; , функция просто выполняется без проверки нового соединения.</target>
        </trans-unit>
        <trans-unit id="dd075c3d3fb9180fe3c847730e8481210db12373" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;child_spec&lt;/code&gt; will receive all options given &lt;a href=&quot;phoenix.pubsub&quot;&gt;&lt;code&gt;Phoenix.PubSub&lt;/code&gt;&lt;/a&gt;. Note, however, that the &lt;code&gt;:name&lt;/code&gt; under options is the name of the complete PubSub system. The name of the process to be used by adapter is under the &lt;code&gt;:adapter_name&lt;/code&gt; key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de3bb7b38468a5d3eaa270f4b681b12112d6cc66" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;clock_sample_periods&lt;/code&gt; - The numbers of heartbeat windows to sample remote clocks before collapsing and requesting transfer. Default &lt;code&gt;2&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;clock_sample_periods&lt;/code&gt; - количество окон контрольных сигналов для выборки удаленных часов перед сворачиванием и запросом передачи. По умолчанию &lt;code&gt;2&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="889f07764297a175fcb54ff1419ea97ab0c8c2c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;compile_metadata&lt;/code&gt; is a map of compile-time metadata about the environment where &lt;a href=&quot;#instrument/3&quot;&gt;&lt;code&gt;instrument/3&lt;/code&gt;&lt;/a&gt; has been called. It contains the module where the instrumentation is happening (under the &lt;code&gt;:module&lt;/code&gt; key), the file and line (&lt;code&gt;:file&lt;/code&gt; and &lt;code&gt;:line&lt;/code&gt;), and the function inside which the instrumentation is happening (under &lt;code&gt;:function&lt;/code&gt;). This information can be used arbitrarily by the callback.</source>
          <target state="translated">&lt;code&gt;compile_metadata&lt;/code&gt; - это карта метаданных времени компиляции о среде, в которой был вызван &lt;a href=&quot;#instrument/3&quot;&gt; &lt;code&gt;instrument/3&lt;/code&gt; &lt;/a&gt; . Он содержит модуль, в котором происходит инструментирование (под ключом &lt;code&gt;:module&lt;/code&gt; ), файл и строка ( &lt;code&gt;:file&lt;/code&gt; и &lt;code&gt;:line&lt;/code&gt; ), а также функцию, внутри которой происходит инструментирование (под &lt;code&gt;:function&lt;/code&gt; ). Эта информация может быть использована обратным вызовом произвольно.</target>
        </trans-unit>
        <trans-unit id="695d44239c06e905645d506ed413772abdeb07c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config&lt;/code&gt; - a directory that holds your project configuration. The &lt;code&gt;config/config.exs&lt;/code&gt; file is the main entry point for your configuration. At the end of the &lt;code&gt;config/config.exs&lt;/code&gt;, it imports environment specific configuration, which can be found in &lt;code&gt;config/dev.exs&lt;/code&gt;, &lt;code&gt;config/test.exs&lt;/code&gt;, and &lt;code&gt;config/prod.exs&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c186e51f3149f22e4054d9897a7e6a704e13f13" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;conn&lt;/code&gt; - the &lt;a href=&quot;../plug/1.5.1/plug.conn&quot;&gt;&lt;code&gt;Plug.Conn&lt;/code&gt;&lt;/a&gt; struct</source>
          <target state="translated">&lt;code&gt;conn&lt;/code&gt; - &lt;a href=&quot;../plug/1.5.1/plug.conn&quot;&gt; &lt;code&gt;Plug.Conn&lt;/code&gt; &lt;/a&gt; структура</target>
        </trans-unit>
        <trans-unit id="b7c41cf27ef2fbe1ac12d3bcdcd6d6b397b5da9f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;conn&lt;/code&gt; - the &lt;a href=&quot;../plug/plug.conn&quot;&gt;&lt;code&gt;Plug.Conn&lt;/code&gt;&lt;/a&gt; struct</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cc861ba8340cd2cf93d740b08bc25d49cce9211" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;connect/2&lt;/code&gt; - receives the socket params and authenticates the connection. Must return a &lt;a href=&quot;phoenix.socket#content&quot;&gt;&lt;code&gt;Phoenix.Socket&lt;/code&gt;&lt;/a&gt; struct, often with custom assigns.</source>
          <target state="translated">&lt;code&gt;connect/2&lt;/code&gt; - получает параметры сокета и аутентифицирует соединение. Должен возвращать структуру &lt;a href=&quot;phoenix.socket#content&quot;&gt; &lt;code&gt;Phoenix.Socket&lt;/code&gt; &lt;/a&gt; , часто с настраиваемыми назначениями.</target>
        </trans-unit>
        <trans-unit id="896024acb897e10fc6e68b3dfb82fcbea327dea0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;connect/3&lt;/code&gt; - receives the socket params, connection info if any, and authenticates the connection. Must return a &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Phoenix.Socket&lt;/code&gt;&lt;/a&gt; struct, often with custom assigns</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cec0129c991da12768418fade08f2f133f6211c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;content&lt;/code&gt; - a valid csrf token</source>
          <target state="translated">&lt;code&gt;content&lt;/code&gt; - действующий токен csrf</target>
        </trans-unit>
        <trans-unit id="ef09230c82821b60f20c65abf1fccfa2426051b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cookies&lt;/code&gt;- the request cookies with the response cookies</source>
          <target state="translated">&lt;code&gt;cookies&lt;/code&gt; - файлы cookie запроса с файлами cookie ответа</target>
        </trans-unit>
        <trans-unit id="a4ededd08a94b9223f01a244b9515dc6a18f4ab1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cross-origin-window-policy&lt;/code&gt; - set to deny to avoid window control attacks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbe1e88c8487c92bfab21a9d4a06043bc3b3caf3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;csrf-param&lt;/code&gt; - a request parameter where expected csrf token</source>
          <target state="translated">&lt;code&gt;csrf-param&lt;/code&gt; - параметр запроса, в котором ожидается токен csrf</target>
        </trans-unit>
        <trans-unit id="0819619d4d1df3becbd190b9dcd0f27b60ce46b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;data-confirm&lt;/code&gt; - shows a confirmation prompt before generating and submitting the form when &lt;code&gt;:method&lt;/code&gt; is not &lt;code&gt;:get&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;data-confirm&lt;/code&gt; - показывает запрос подтверждения перед созданием и отправкой формы, когда &lt;code&gt;:method&lt;/code&gt; не является &lt;code&gt;:get&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="02f4dc5a68caa1236835776a968aacbf3e6f749a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;data-confirm&lt;/code&gt; - shows a confirmation prompt before generating and submitting the form.</source>
          <target state="translated">&lt;code&gt;data-confirm&lt;/code&gt; - показывает запрос на подтверждение перед созданием и отправкой формы.</target>
        </trans-unit>
        <trans-unit id="28c52b1a4af0fdd95c7c39440448071378db7e11" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;data&lt;/code&gt; - The changeset source data, for example, a struct</source>
          <target state="translated">&lt;code&gt;data&lt;/code&gt; - исходные данные набора изменений, например, структура</target>
        </trans-unit>
        <trans-unit id="4b4dcff93e0ec268005f49346d7d19bbd8185883" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;data&lt;/code&gt; can also take form of &lt;code&gt;{fields, values}&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;data&lt;/code&gt; также могут принимать форму &lt;code&gt;{fields, values}&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="033e1fbec1f4f57b26a42bfe941fe208fc709ea0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;default_config/0&lt;/code&gt; - returns the default transport configuration to be merged when the transport is declared in the socket module</source>
          <target state="translated">&lt;code&gt;default_config/0&lt;/code&gt; - возвращает конфигурацию транспорта по умолчанию, которая будет объединена, когда транспорт объявлен в модуле сокета</target>
        </trans-unit>
        <trans-unit id="e4b85f56e59168ef589d92e4a566168444f26ef9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;defaults&lt;/code&gt; - Default fields used when building the association</source>
          <target state="translated">&lt;code&gt;defaults&lt;/code&gt; - поля по умолчанию, используемые при построении ассоциации</target>
        </trans-unit>
        <trans-unit id="0be8574699a9ffce76fa0bdcb0d053574e7363a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;deps&lt;/code&gt; - a directory with all of our Mix dependencies. You can find all dependencies listed in the &lt;code&gt;mix.exs&lt;/code&gt; file, inside the &lt;code&gt;def deps do&lt;/code&gt; function definition. This directory must not be checked into version control and it can be removed at any time. Removing it will force Mix to download all deps from scratch</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43a61fbb6cbcce5423b2d60797bb21ab96222d45" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;destroyed&lt;/code&gt; - the element has been removed from the page, either by a parent update, or by the parent being removed entirely</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74a4fbadde19cd7d5f3938d71c35cca8d7aae281" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;disconnected&lt;/code&gt; - the element's parent LiveView has disconnected from the server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c18e7fd3f0b579f4db13793f5fc4dd061d510af0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;down_period&lt;/code&gt; - The interval in milliseconds to flag a replica as down temporarily down. Default &lt;code&gt;broadcast_period * max_silent_periods * 2&lt;/code&gt; (30s down detection). Note: This must be at least 2x the &lt;code&gt;broadcast_period&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;down_period&lt;/code&gt; - интервал в миллисекундах, в течение которого реплика будет помечена как временно неработающая . &lt;code&gt;broadcast_period * max_silent_periods * 2&lt;/code&gt; умолчанию * max_silent_periods * 2 (обнаружение задержки на 30 секунд ). Примечание. Это должно быть как минимум в 2 раза больше периода &lt;code&gt;broadcast_period&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7620ae409a20641f21ef7a460bc5d5707e823981" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dynamic&lt;/code&gt; can be interpolated at the root of a &lt;code&gt;where&lt;/code&gt;, &lt;code&gt;having&lt;/code&gt; or a &lt;code&gt;join&lt;/code&gt;&amp;rsquo;s &lt;code&gt;on&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;dynamic&lt;/code&gt; можно интерполировать в корне , &lt;code&gt;where&lt;/code&gt; , &lt;code&gt;having&lt;/code&gt; или &lt;code&gt;join&lt;/code&gt; к &amp;laquo;S &lt;code&gt;on&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c616055070f12b74501588a018ac0e53f727295a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ecto.rollback&lt;/code&gt; will handle the same options as &lt;code&gt;ecto.migrate&lt;/code&gt;, so &lt;code&gt;-n&lt;/code&gt;, &lt;code&gt;--step&lt;/code&gt;, &lt;code&gt;-v&lt;/code&gt;, and &lt;code&gt;--to&lt;/code&gt; will behave as they do for &lt;code&gt;ecto.migrate&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="289b195ad55e3f3878e986a46901d097a6710a58" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;el&lt;/code&gt; - attribute referencing the bound DOM node,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf185d0960f12b0d7c4ebf21a82c1b0f4e3997cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;empty_values&lt;/code&gt; - A list of values to be considered empty</source>
          <target state="translated">&lt;code&gt;empty_values&lt;/code&gt; - список значений, которые следует считать пустыми</target>
        </trans-unit>
        <trans-unit id="1d202b0cf06a1be8138faf92a94da5e1a80c27f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;endpoint&lt;/code&gt; - The endpoint for the LiveView</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
