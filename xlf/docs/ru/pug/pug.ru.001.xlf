<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="pug">
    <body>
      <group id="pug">
        <trans-unit id="905bada5c3cee0c1399710929a758d690bde54a3" translate="yes" xml:space="preserve">
          <source>&amp;amp;attributes</source>
          <target state="translated">&amp;amp;attributes</target>
        </trans-unit>
        <trans-unit id="82fbf19ddf2b0c58d271dd23280aff5a7a46fe7a" translate="yes" xml:space="preserve">
          <source>&amp;copy; Pug authors</source>
          <target state="translated">&amp;copy; Авторы Pug</target>
        </trans-unit>
        <trans-unit id="bb0519ea1f9772e994d95131770249139bb84e70" translate="yes" xml:space="preserve">
          <source>(NOTE: Examples on this page use the pipe character (&lt;code&gt;|&lt;/code&gt;) for &lt;a href=&quot;plain-text#whitespace-control&quot;&gt;whitespace control&lt;/a&gt;.)</source>
          <target state="translated">(ПРИМЕЧАНИЕ: в примерах на этой странице используется вертикальная черта ( &lt;code&gt;|&lt;/code&gt; ) для &lt;a href=&quot;plain-text#whitespace-control&quot;&gt;управления пробелами&lt;/a&gt; .)</target>
        </trans-unit>
        <trans-unit id="b28c9bd9537ad855659c1744aaafb65ec6b662f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Compiler&lt;/code&gt;, &lt;code&gt;Lexer&lt;/code&gt;, &lt;code&gt;Parser&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Compiler&lt;/code&gt; , &lt;code&gt;Lexer&lt;/code&gt; , &lt;code&gt;Parser&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4b556dc258714d2e2c93992371c82f876d7d7db4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;compiler&lt;/code&gt;, &lt;code&gt;lexer&lt;/code&gt;, &lt;code&gt;parser&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;compiler&lt;/code&gt; , &lt;code&gt;lexer&lt;/code&gt; , &lt;code&gt;parser&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e118d1ea72aa3b1b67c76546cd2b323ee2a595da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;each&lt;/code&gt; is not part of the JavaScript syntax, so the use of &lt;code&gt;each&lt;/code&gt; &amp;ldquo;keyword&amp;rdquo; in a JavaScript line is confusing as well as hackish (in terms of implementation). The same applies to parentheses-less &lt;code&gt;for&lt;/code&gt; keyword.</source>
          <target state="translated">&lt;code&gt;each&lt;/code&gt; не является частью синтаксиса JavaScript, поэтому использование &lt;code&gt;each&lt;/code&gt; &amp;laquo;ключевого слова&amp;raquo; в строке JavaScript сбивает с толку и является хакерским (с точки зрения реализации). То же самое относится и к скобки меньше &lt;code&gt;for&lt;/code&gt; ключевого слова.</target>
        </trans-unit>
        <trans-unit id="b42f4a3ab42be346b5bfb3a149ff4b7892cfce31" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;read&lt;/code&gt; plugins should now return &lt;code&gt;Buffer&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c100645d0677b731f499efce3c0449426c5bfeb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;title&lt;/code&gt; follows the basic pattern for evaluating a template local, but the code in between &lt;code&gt;#{&lt;/code&gt; and &lt;code&gt;}&lt;/code&gt; is evaluated, escaped, and the result buffered into the output of the template being rendered.</source>
          <target state="translated">&lt;code&gt;title&lt;/code&gt; следует базовому шаблону для оценки локального шаблона, но код между &lt;code&gt;#{&lt;/code&gt; и &lt;code&gt;}&lt;/code&gt; оценивается, экранируется, а результат помещается в буфер вывода визуализируемого шаблона.</target>
        </trans-unit>
        <trans-unit id="72956883ce42267a3e604489cdb5817b3b4cf41b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;utils.merge&lt;/code&gt; has been removed from Pug, as it is not used anymore. Its functionality can be roughly replicated using the ES2015 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign&quot;&gt;Object.assign&lt;/a&gt;&lt;/code&gt; method, among other variants.</source>
          <target state="translated">&lt;code&gt;utils.merge&lt;/code&gt; удален из Pug, так как больше не используется. Его функциональность может быть приблизительно воспроизведена с &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign&quot;&gt;Object.assign&lt;/a&gt;&lt;/code&gt; метода ES2015 Object.assign , среди других вариантов.</target>
        </trans-unit>
        <trans-unit id="d801de315600aa076bdf2a1fcff8c78b2cd40995" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;utils.stringify&lt;/code&gt; has been split from Pug into the &lt;code&gt;&lt;a href=&quot;https://www.npmjs.com/package/js-stringify&quot;&gt;js-stringify&lt;/a&gt;&lt;/code&gt; package, with additional protection against possible XSS attacks. All users are advised to use that package.</source>
          <target state="translated">&lt;code&gt;utils.stringify&lt;/code&gt; был разделен из Pug на пакет &lt;code&gt;&lt;a href=&quot;https://www.npmjs.com/package/js-stringify&quot;&gt;js-stringify&lt;/a&gt;&lt;/code&gt; с дополнительной защитой от возможных XSS-атак. Всем пользователям рекомендуется использовать этот пакет.</target>
        </trans-unit>
        <trans-unit id="bb9a546df526ebee83703d49335a684290047dfe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;utils.walkAST&lt;/code&gt; has been split into the &lt;code&gt;&lt;a href=&quot;https://www.npmjs.com/package/pug-walk&quot;&gt;pug-walk&lt;/a&gt;&lt;/code&gt; package.</source>
          <target state="translated">&lt;code&gt;utils.walkAST&lt;/code&gt; был разделен на пакет &lt;code&gt;&lt;a href=&quot;https://www.npmjs.com/package/pug-walk&quot;&gt;pug-walk&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="55f72ef94b182e19b9f55d14f6480fc73cb906d2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Attributes applied using &lt;code&gt;&amp;amp;attributes&lt;/code&gt; are not automatically escaped.&lt;/strong&gt; You must be sure to sanitize any user inputs to avoid &lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-site_scripting&quot;&gt;cross-site scripting&lt;/a&gt; (XSS). If passing in &lt;code&gt;attributes&lt;/code&gt; from a mixin call, this is done automatically.</source>
          <target state="translated">&lt;strong&gt;Атрибуты, применяемые с помощью &lt;code&gt;&amp;amp;attributes&lt;/code&gt; , не экранируются автоматически. &lt;/strong&gt;Вы должны быть уверены, что санировали все вводимые пользователем данные, чтобы избежать &lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-site_scripting&quot;&gt;межсайтового скриптинга&lt;/a&gt; (XSS). При передаче &lt;code&gt;attributes&lt;/code&gt; из вызова миксина это выполняется автоматически.</target>
        </trans-unit>
        <trans-unit id="9656c2b17bba648f07581ba7e47734fb2906562f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Filters are rendered at compile time.&lt;/strong&gt; This makes them fast, but it also means that they cannot support dynamic content or options.</source>
          <target state="translated">&lt;strong&gt;Фильтры отображаются во время компиляции. &lt;/strong&gt;Это делает их быстрыми, но также означает, что они не могут поддерживать динамический контент или параметры.</target>
        </trans-unit>
        <trans-unit id="53334631c993443bb01e9bebb0ca5233d2fc1b39" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Keep in mind that buffering unescaped content into your templates can be mighty risky if that content comes fresh from your users.&lt;/strong&gt; Never trust user input!</source>
          <target state="translated">&lt;strong&gt;Имейте в виду, что буферизация неэкранированного контента в ваших шаблонах может быть очень рискованной, если этот контент поступает только что от ваших пользователей. &lt;/strong&gt;Никогда не доверяйте вводу пользователя!</target>
        </trans-unit>
        <trans-unit id="9ceca809537cc88651234404cb1dfc66f1f18562" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE the trailing and leading spaces here:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;ОБРАТИТЕ ВНИМАНИЕ на конечные и ведущие пробелы здесь:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e8e025b87707d0c768b4c11122bc3ab5aa03da93" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The values in &lt;code&gt;attributes&lt;/code&gt; by default are already escaped!&lt;/strong&gt; You should use &lt;code&gt;!=&lt;/code&gt; to avoid escaping them a second time. (See also &lt;a href=&quot;attributes#unescaped-attributes&quot;&gt;unescaped attributes&lt;/a&gt;.)</source>
          <target state="translated">&lt;strong&gt;Значения в &lt;code&gt;attributes&lt;/code&gt; по умолчанию уже экранированы! &lt;/strong&gt;Вы должны использовать &lt;code&gt;!=&lt;/code&gt; Чтобы избежать их повторного экранирования. (См. Также &lt;a href=&quot;attributes#unescaped-attributes&quot;&gt;неэкранированные атрибуты&lt;/a&gt; .)</target>
        </trans-unit>
        <trans-unit id="4601f0d5a94b7a40bbcb7b3632e652baff19f1d2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Unescaped buffered code can be dangerous.&lt;/strong&gt; You must be sure to sanitize any user inputs to avoid &lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-site_scripting&quot;&gt;cross-site scripting&lt;/a&gt; (XSS).</source>
          <target state="translated">&lt;strong&gt;Неэкранированный буферизованный код может быть опасным. &lt;/strong&gt;Вы должны быть уверены, что санировали все вводимые пользователем данные, чтобы избежать &lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-site_scripting&quot;&gt;межсайтового скриптинга&lt;/a&gt; (XSS).</target>
        </trans-unit>
        <trans-unit id="cdc48fbcfc2aba846324c562600e116bcbadd5cd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Unescaped buffered code can be dangerous.&lt;/strong&gt; You must be sure to sanitize any user inputs to avoid &lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-site_scripting&quot;&gt;cross-site scripting&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;Неэкранированный буферизованный код может быть опасным. &lt;/strong&gt;Вы должны быть уверены, что дезинфицируете все вводимые пользователем данные, чтобы избежать &lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-site_scripting&quot;&gt;межсайтовых сценариев&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3578603cccec35b09b8083419f5fd4199fe87466" translate="yes" xml:space="preserve">
          <source>A JavaScript function body.</source>
          <target state="translated">Тело функции JavaScript.</target>
        </trans-unit>
        <trans-unit id="fdc546e115d8f864c132672c14ba127f95d90ad0" translate="yes" xml:space="preserve">
          <source>A function to generate the HTML from an object containing locals</source>
          <target state="translated">Функция для генерации HTML из объекта,содержащего местных жителей.</target>
        </trans-unit>
        <trans-unit id="cb2c27e4bc0f4b0aa507d0f22a1cbd2eb8843149" translate="yes" xml:space="preserve">
          <source>A hash table of &lt;a href=&quot;../language/filters#custom-filters&quot;&gt;custom filters&lt;/a&gt;.</source>
          <target state="translated">Хеш-таблица &lt;a href=&quot;../language/filters#custom-filters&quot;&gt;настраиваемых фильтров&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4f32e8f4a4b2abd1f5f51cff9f1c753748756da7" translate="yes" xml:space="preserve">
          <source>A string of JavaScript representing a function</source>
          <target state="translated">Строка JavaScript,представляющая собой функцию.</target>
        </trans-unit>
        <trans-unit id="d93d10ff0fbef1b4aa0ddc24e10e907746d3c85a" translate="yes" xml:space="preserve">
          <source>API</source>
          <target state="translated">API</target>
        </trans-unit>
        <trans-unit id="b276f94cd8d0e74a21de6e5939b8c10ca9a975d6" translate="yes" xml:space="preserve">
          <source>API Reference</source>
          <target state="translated">API ссылка</target>
        </trans-unit>
        <trans-unit id="5c081b50d4a2f79396b1a4df46642a50a84e6996" translate="yes" xml:space="preserve">
          <source>Add a list of global names to make accessible in templates.</source>
          <target state="translated">Добавьте список глобальных имен,чтобы сделать его доступным в шаблонах.</target>
        </trans-unit>
        <trans-unit id="78f21574fb8e76a209a5268afdf4f1b25ddad048" translate="yes" xml:space="preserve">
          <source>Add the variables to the Pug &lt;a href=&quot;../api/reference#options&quot;&gt;options&lt;/a&gt; object, or define them in unbuffered code in a parent template. The child template will inherit these variables.</source>
          <target state="translated">Добавьте переменные в объект &lt;a href=&quot;../api/reference#options&quot;&gt;параметров&lt;/a&gt; Pug или определите их в небуферизованном коде в родительском шаблоне. Дочерний шаблон унаследует эти переменные.</target>
        </trans-unit>
        <trans-unit id="60d3ab38ec473962d9e49a2b7fd5c60136191e83" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;https://www.npmjs.com/browse/keyword/jstransformer&quot;&gt;JSTransformer modules&lt;/a&gt; can be used as Pug filters. Popular filters include &lt;code&gt;:babel&lt;/code&gt;, &lt;code&gt;:uglify-js&lt;/code&gt;, &lt;code&gt;:scss&lt;/code&gt;, and &lt;code&gt;:markdown-it&lt;/code&gt;. Check out the documentation for the JSTransformer for the options supported for the specific filter.</source>
          <target state="translated">Все &lt;a href=&quot;https://www.npmjs.com/browse/keyword/jstransformer&quot;&gt;модули JSTransformer&lt;/a&gt; могут использоваться как фильтры Pug. Популярные фильтры включают в себя &lt;code&gt;:babel&lt;/code&gt; , &lt;code&gt;:uglify-js&lt;/code&gt; , &lt;code&gt;:scss&lt;/code&gt; и &lt;code&gt;:markdown-it&lt;/code&gt; . Ознакомьтесь с документацией по JSTransformer, чтобы узнать о параметрах, поддерживаемых для конкретного фильтра.</target>
        </trans-unit>
        <trans-unit id="03f29e19c7e4c6384c1ae5df357c5ece32108802" translate="yes" xml:space="preserve">
          <source>All API methods accept the following set of options:</source>
          <target state="translated">Все методы API принимают следующий набор опций:</target>
        </trans-unit>
        <trans-unit id="ca0d94cfcd084eed406cd9b01a14f7ae873a3653" translate="yes" xml:space="preserve">
          <source>An options object</source>
          <target state="translated">Объект опций</target>
        </trans-unit>
        <trans-unit id="9e7bf4671acb5cba831cdfe30b0ad7509d37aa0e" translate="yes" xml:space="preserve">
          <source>An options object, also used as the locals object</source>
          <target state="translated">Объект опций,также используемый в качестве объекта местных жителей.</target>
        </trans-unit>
        <trans-unit id="b8ce1db4ac272a62fd64c6a707d157aaf3cfb647" translate="yes" xml:space="preserve">
          <source>Another way to add plain text to templates is to prefix a line with a pipe character (&lt;code&gt;|&lt;/code&gt;). This method is useful for mixing plain text with inline tags, as we discuss later, in the Whitespace Control section.</source>
          <target state="translated">Другой способ добавить простой текст к шаблонам - поставить перед строкой вертикальную черту ( &lt;code&gt;|&lt;/code&gt; ). Этот метод полезен для смешивания простого текста со встроенными тегами, как мы обсудим позже в разделе &amp;laquo;Управление пробелами&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="333892e4549da7f80a1c31f3095dcddde00dc04f" translate="yes" xml:space="preserve">
          <source>Attribute Interpolation</source>
          <target state="translated">Атрибутировать Интерполяцию</target>
        </trans-unit>
        <trans-unit id="a6652617f2c799eb11ee727b16c5646c48af6905" translate="yes" xml:space="preserve">
          <source>Attributes</source>
          <target state="translated">Attributes</target>
        </trans-unit>
        <trans-unit id="a40f1fd513c3ed4b99be84f666181ecb3ab8a829" translate="yes" xml:space="preserve">
          <source>Be sure to send the Pug runtime (&lt;code&gt;node_modules/pug/runtime.js&lt;/code&gt;) to the client in addition to the template that you just compiled.</source>
          <target state="translated">Обязательно отправьте &lt;code&gt;node_modules/pug/runtime.js&lt;/code&gt; среду выполнения Pug ( node_modules / pug / runtime.js ) в дополнение к только что скомпилированному шаблону.</target>
        </trans-unit>
        <trans-unit id="1f601f6e958f9ccf999fe6a5385bc9e81ef95176" translate="yes" xml:space="preserve">
          <source>Below, notice that the &lt;code&gt;foot&lt;/code&gt; block is &lt;em&gt;not&lt;/em&gt; redefined, so it will use the parent&amp;rsquo;s default and output &amp;ldquo;some footer content&amp;rdquo;.</source>
          <target state="translated">Ниже, обратите внимание , что &lt;code&gt;foot&lt;/code&gt; блок &lt;em&gt;не&lt;/em&gt; переопределяется, поэтому он будет использовать по умолчанию и выход родителя &amp;laquo;некоторое содержание колонтитула&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="c89627cef638598520a2f295a8b2b91663fccb8f" translate="yes" xml:space="preserve">
          <source>Block &lt;code&gt;append&lt;/code&gt; / &lt;code&gt;prepend&lt;/code&gt;</source>
          <target state="translated">Блок &lt;code&gt;append&lt;/code&gt; / &lt;code&gt;prepend&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c1b38fad085dd3509a88635aa132e51044b4666a" translate="yes" xml:space="preserve">
          <source>Block Comments</source>
          <target state="translated">Блок Комментарии</target>
        </trans-unit>
        <trans-unit id="b5c336344f3b2bfc66061d8d39679f539e9676fb" translate="yes" xml:space="preserve">
          <source>Block Expansion</source>
          <target state="translated">Расширение блока</target>
        </trans-unit>
        <trans-unit id="44efc5a1dd38e37f1c0403afadc3a20c0c13caab" translate="yes" xml:space="preserve">
          <source>Block comments work, too:</source>
          <target state="translated">Блокирование комментариев тоже работает:</target>
        </trans-unit>
        <trans-unit id="73709cbc903320e0dc2a2668f6bac154b230ce3c" translate="yes" xml:space="preserve">
          <source>Block expansion may also be used:</source>
          <target state="translated">Также может использоваться блочное расширение:</target>
        </trans-unit>
        <trans-unit id="9e20943b669797e8a1d2a83190d62216eb07ad1f" translate="yes" xml:space="preserve">
          <source>Block in a Tag</source>
          <target state="translated">Блок с меткой</target>
        </trans-unit>
        <trans-unit id="d0c6b42e58160cde0494414e6782deaa163f668e" translate="yes" xml:space="preserve">
          <source>Boolean Attributes</source>
          <target state="translated">булевы атрибуты</target>
        </trans-unit>
        <trans-unit id="d6b4dc532edaec305ed952d7752cd84b750d9503" translate="yes" xml:space="preserve">
          <source>Boolean attributes are mirrored by Pug. Boolean values (&lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt;) are accepted. When no value is specified &lt;code&gt;true&lt;/code&gt; is assumed.</source>
          <target state="translated">Булевы атрибуты зеркалируются Pug. Допускаются логические значения ( &lt;code&gt;true&lt;/code&gt; и &lt;code&gt;false&lt;/code&gt; ). Если значение не указано, предполагается, что это &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="de2e49d4881f011dc3450a1f3ae68af2dc4c5e2e" translate="yes" xml:space="preserve">
          <source>Buffered Code</source>
          <target state="translated">Буферный код</target>
        </trans-unit>
        <trans-unit id="a2a7a8082e82a794ccb03e5e62492a1e41bb6e68" translate="yes" xml:space="preserve">
          <source>Buffered code starts with &lt;code&gt;=&lt;/code&gt;. It evaluates the JavaScript expression and outputs the result. For security, buffered code is first HTML escaped.</source>
          <target state="translated">Буферизованный код начинается с &lt;code&gt;=&lt;/code&gt; . Он оценивает выражение JavaScript и выводит результат. В целях безопасности буферизованный код сначала экранируется HTML.</target>
        </trans-unit>
        <trans-unit id="7a17eafea470a26f5e7735c8747263c9e578cb46" translate="yes" xml:space="preserve">
          <source>Buffered comments look the same as single-line JavaScript comments. They act sort of like markup tags, producing &lt;em&gt;HTML&lt;/em&gt; comments in the rendered page.</source>
          <target state="translated">Буферизованные комментарии выглядят так же, как однострочные комментарии JavaScript. Они действуют как теги разметки, создавая &lt;em&gt;HTML-&lt;/em&gt; комментарии на отображаемой странице.</target>
        </trans-unit>
        <trans-unit id="c8c8d3f09ae23a614c12f474f34ea3073699e361" translate="yes" xml:space="preserve">
          <source>By default, all attributes are escaped&amp;mdash;that is,special characters are replaced with escape sequences&amp;mdash;to prevent attacks (such as cross site scripting). If you need to use special characters, use &lt;code&gt;!=&lt;/code&gt; instead of &lt;code&gt;=&lt;/code&gt;.</source>
          <target state="translated">По умолчанию все атрибуты экранированы, то есть специальные символы заменяются escape-последовательностями, чтобы предотвратить атаки (например, межсайтовый скриптинг). Если вам нужно использовать специальные символы, используйте &lt;code&gt;!=&lt;/code&gt; Вместо &lt;code&gt;=&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="20a7c72f30c91a5def212de7dd598bfabd6e8782" translate="yes" xml:space="preserve">
          <source>By default, compilation in the browser does not have access to JSTransformer-based filters, unless the JSTransformer modules are explicitly packed and made available through a CommonJS platform (such as Browserify or Webpack). In fact, the page you are reading right now uses Browserify to make the filters available in the browser.</source>
          <target state="translated">По умолчанию компиляция в браузере не имеет доступа к фильтрам на основе JSTransformer,если модули JSTransformer явно не упакованы и не доступны через платформу CommonJS (например,Browserify или Webpack).На самом деле,страница,которую вы сейчас читаете,использует Browserify,чтобы сделать фильтры доступными в браузере.</target>
        </trans-unit>
        <trans-unit id="d14ec11c48a8d8c68ab7d2596a559f86fe1b1fb8" translate="yes" xml:space="preserve">
          <source>By default, however, Pug removes all spaces before and after tags. Check out the following example:</source>
          <target state="translated">По умолчанию,однако,Pug удаляет все пробелы до и после тегов.Просмотрите следующий пример:</target>
        </trans-unit>
        <trans-unit id="b95b7797960ce9eaa32f7eda3300f8c08847ee40" translate="yes" xml:space="preserve">
          <source>By default, text at the start of a line (or after only white space) represents an HTML tag. Indented tags are nested, creating the tree structure of HTML.</source>
          <target state="translated">По умолчанию текст в начале строки (или после пробела)представляет собой HTML-тег.Отпечатанные теги вложены,создавая древовидную структуру HTML.</target>
        </trans-unit>
        <trans-unit id="9254c4bba00f5ff69304a7921d3118fcbac7e6b8" translate="yes" xml:space="preserve">
          <source>Case</source>
          <target state="translated">Case</target>
        </trans-unit>
        <trans-unit id="2e223ee324338b8a520630fd2c866437ced3b5bd" translate="yes" xml:space="preserve">
          <source>Case Fall Through</source>
          <target state="translated">Падение дела</target>
        </trans-unit>
        <trans-unit id="55a89527100d7affacb785a535913eceec75eda6" translate="yes" xml:space="preserve">
          <source>Caution</source>
          <target state="translated">Caution</target>
        </trans-unit>
        <trans-unit id="b61f0a22825590e758c140f4660a2686e60cc8fc" translate="yes" xml:space="preserve">
          <source>Class Attributes</source>
          <target state="translated">Атрибуты класса</target>
        </trans-unit>
        <trans-unit id="87d16d4150660f6694dcba630f8227f99a756c25" translate="yes" xml:space="preserve">
          <source>Class Literal</source>
          <target state="translated">Класс Буквальный</target>
        </trans-unit>
        <trans-unit id="94ec8e8fb4995b3d07729b11934c2a062447cf4b" translate="yes" xml:space="preserve">
          <source>Classes may be defined using a &lt;code&gt;.classname&lt;/code&gt; syntax:</source>
          <target state="translated">Классы могут быть определены с использованием синтаксиса &lt;code&gt;.classname&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="adac69379a626c2436948a4ef1792c7d719ef929" translate="yes" xml:space="preserve">
          <source>Code</source>
          <target state="translated">Code</target>
        </trans-unit>
        <trans-unit id="fce06e20e5f7f74aacccab40b59b75a56c8f7305" translate="yes" xml:space="preserve">
          <source>Comments</source>
          <target state="translated">Comments</target>
        </trans-unit>
        <trans-unit id="62264fc11aa6b69178ce7246ab696aeaec46b743" translate="yes" xml:space="preserve">
          <source>Common mistakes</source>
          <target state="translated">Обычные ошибки</target>
        </trans-unit>
        <trans-unit id="b80de0d1fc79d6aad509e8035615c5245ba3d069" translate="yes" xml:space="preserve">
          <source>Compile a Pug template file to a string of JavaScript that can be used client side along with the Pug runtime.</source>
          <target state="translated">Скомпилируйте файл шаблона Pug в строку JavaScript,которая может быть использована на стороне клиента вместе со временем выполнения Pug.</target>
        </trans-unit>
        <trans-unit id="70b9590982d6d948bbf544c47f6b9bdb9d47cdcf" translate="yes" xml:space="preserve">
          <source>Compile a Pug template file to a string of JavaScript that can be used client side.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d02260351dd84e8cadf4585d28c82b6b15d1f02" translate="yes" xml:space="preserve">
          <source>Compile a Pug template from a file to a function, which can be rendered multiple times with different locals.</source>
          <target state="translated">Скомпилируйте шаблон Pug из файла в функцию,которая может быть отрисована несколько раз с разными местными жителями.</target>
        </trans-unit>
        <trans-unit id="5a52f46961f6f8203926e020add16302a12fb28e" translate="yes" xml:space="preserve">
          <source>Compile a Pug template to a function, which can be rendered multiple times with different locals.</source>
          <target state="translated">Скомпилируйте шаблон Pug в функцию,которая может быть визуализирована несколько раз с разными местными жителями.</target>
        </trans-unit>
        <trans-unit id="74829ffe4ce9532755990e092115ad1c6df319aa" translate="yes" xml:space="preserve">
          <source>Compile a Pug template to a string of JavaScript, which can be used client side along with the Pug runtime.</source>
          <target state="translated">Скомпилируйте шаблон Pug в строку JavaScript,которая может быть использована на стороне клиента вместе со временем выполнения Pug.</target>
        </trans-unit>
        <trans-unit id="ee2d9d7279acd692f2e3a5e38eddbe86b456c2f5" translate="yes" xml:space="preserve">
          <source>Compile a Pug template to a string of JavaScript, which can be used client side.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e31ac17e910acfdfdb422394c9ed3d252ddd798b" translate="yes" xml:space="preserve">
          <source>Conditional Comments</source>
          <target state="translated">Условные комментарии</target>
        </trans-unit>
        <trans-unit id="d6a56385d0729f6ff4bf27671cc845cb6f2cfde5" translate="yes" xml:space="preserve">
          <source>Conditionals</source>
          <target state="translated">Conditionals</target>
        </trans-unit>
        <trans-unit id="0230eee8f217284c4c3d4caa60012bb9bc96524d" translate="yes" xml:space="preserve">
          <source>Consider the placement of the following template&amp;rsquo;s locals: &lt;code&gt;title&lt;/code&gt;, &lt;code&gt;author&lt;/code&gt;, and &lt;code&gt;theGreat&lt;/code&gt;.</source>
          <target state="translated">Рассмотрим размещение следующих &lt;code&gt;theGreat&lt;/code&gt; шаблона: &lt;code&gt;title&lt;/code&gt; , &lt;code&gt;author&lt;/code&gt; и theGreat .</target>
        </trans-unit>
        <trans-unit id="98384816ad924258d68c1ace8f024e24b6b2657c" translate="yes" xml:space="preserve">
          <source>Custom Doctypes</source>
          <target state="translated">Индивидуальные рецепты</target>
        </trans-unit>
        <trans-unit id="30c3e03bf5eeeddddd25cfc9a3c1058ba1a99bb1" translate="yes" xml:space="preserve">
          <source>Custom Filters</source>
          <target state="translated">Пользовательские фильтры</target>
        </trans-unit>
        <trans-unit id="78dd63ce83212e9b88a19ff265c96dec4ae760ac" translate="yes" xml:space="preserve">
          <source>Default Argument&amp;rsquo;s Values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a54e73d15cee44590c9ee158c009317e7edfeb11" translate="yes" xml:space="preserve">
          <source>Define the variables &lt;em&gt;in a block&lt;/em&gt; in the child template. Extending templates must have at least one block, or it would be empty &amp;mdash; just define your variables there.</source>
          <target state="translated">Определите переменные &lt;em&gt;в блоке&lt;/em&gt; дочернего шаблона. В расширяемых шаблонах должен быть хотя бы один блок, иначе он будет пустым - просто определите там свои переменные.</target>
        </trans-unit>
        <trans-unit id="a4f17c25616225cb20e6afa33557ff41de95f63d" translate="yes" xml:space="preserve">
          <source>Depending on where you need the whitespace, you could add an extra space at the beginning of the text (after the block indentation, pipe character, and/or tag). Or you could add a trailing space at the &lt;em&gt;end&lt;/em&gt; of the text.</source>
          <target state="translated">В зависимости от того, где вам нужен пробел, вы можете добавить дополнительный пробел в начале текста (после отступа блока, символа вертикальной черты и / или тега). Или вы можете добавить конечный пробел в &lt;em&gt;конце&lt;/em&gt; текста.</target>
        </trans-unit>
        <trans-unit id="527600bf0272b6bf3abcb495a99c6ee346bb82b2" translate="yes" xml:space="preserve">
          <source>Deprecated</source>
          <target state="translated">Deprecated</target>
        </trans-unit>
        <trans-unit id="e81a0d33628a7c7ffede35a7fc0d572d077f40f2" translate="yes" xml:space="preserve">
          <source>Doctype</source>
          <target state="translated">Doctype</target>
        </trans-unit>
        <trans-unit id="54297754d960b6864f4eeed05cce4fd7082e7218" translate="yes" xml:space="preserve">
          <source>Doctype Option</source>
          <target state="translated">Вариант типа документа</target>
        </trans-unit>
        <trans-unit id="3c9f430b0145032e71573fb2a9f08f5aa55268c1" translate="yes" xml:space="preserve">
          <source>Doctype Shortcuts</source>
          <target state="translated">Краткое описание типа</target>
        </trans-unit>
        <trans-unit id="99dfed43872931452fdc53c69d1397df4ccb1025" translate="yes" xml:space="preserve">
          <source>Due to a trademark issue, the project name has been changed from &amp;ldquo;Jade&amp;rdquo; to &amp;ldquo;Pug&amp;rdquo; in conjunction with the release of Pug 2. This also means that we have changed the official supported file extension from &lt;code&gt;.jade&lt;/code&gt; to &lt;code&gt;.pug&lt;/code&gt;. Although &lt;code&gt;.jade&lt;/code&gt; is still supported, it is deprecated. All users are encouraged to transition to &lt;code&gt;.pug&lt;/code&gt; immediately.</source>
          <target state="translated">Из-за проблемы с товарным знаком название проекта было изменено с &amp;laquo;Jade&amp;raquo; на &amp;laquo;Pug&amp;raquo; в связи с выпуском Pug 2. Это также означает, что мы изменили официальное поддерживаемое расширение файла с &lt;code&gt;.jade&lt;/code&gt; на &lt;code&gt;.pug&lt;/code&gt; . Хотя &lt;code&gt;.jade&lt;/code&gt; все еще поддерживается, он устарел. Всем пользователям рекомендуется немедленно перейти на &lt;code&gt;.pug&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2ddbff65d68ff8f4fe4e12a9fb5b05c51aa60118" translate="yes" xml:space="preserve">
          <source>Express Integration</source>
          <target state="translated">Экспресс-интеграция</target>
        </trans-unit>
        <trans-unit id="d9d7b0bedebd64adbd07b19e528600555496a511" translate="yes" xml:space="preserve">
          <source>Filtered Includes</source>
          <target state="translated">Включает в себя отфильтрованные</target>
        </trans-unit>
        <trans-unit id="96e578211aa295317cf257310712fa28ccd8f6c6" translate="yes" xml:space="preserve">
          <source>Filters</source>
          <target state="translated">Filters</target>
        </trans-unit>
        <trans-unit id="7c2d1d4ad8c1d585bc00d2c9f6ad55c2b8509272" translate="yes" xml:space="preserve">
          <source>Filters let you use other languages in Pug templates. They take a block of plain text as an input.</source>
          <target state="translated">Фильтры позволяют использовать другие языки в шаблонах Pug.Они берут на вход блок простого текста.</target>
        </trans-unit>
        <trans-unit id="36b953fd1fb7ba4fcf7e4de86edef36f7c84e0fe" translate="yes" xml:space="preserve">
          <source>First, our template file.</source>
          <target state="translated">Во-первых,наш файл-шаблон.</target>
        </trans-unit>
        <trans-unit id="faeb08a68afb2da60369c7bf73a4e246f7e509a2" translate="yes" xml:space="preserve">
          <source>For a complete list of new features, please refer to &lt;a href=&quot;https://github.com/pugjs/pug/releases/tag/pug%403.0.0&quot;&gt;the release notes&lt;/a&gt;. What follows are instructions for dealing with breaking changes only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70c87bac545469b855f879eb7597f364e489c2d6" translate="yes" xml:space="preserve">
          <source>For example, if you want to be able to use CoffeeScript and Markdown (using Markdown-it renderer) in your Pug template, you would first make sure that these features are installed:</source>
          <target state="translated">Например,если вы хотите иметь возможность использовать CoffeeScript и Markdown (используя Markdown-it renderer)в вашем шаблоне Pug,то сначала убедитесь,что эти функции установлены:</target>
        </trans-unit>
        <trans-unit id="42e818369ba5c3d3bf0a21cdc052f0f3da85de29" translate="yes" xml:space="preserve">
          <source>For more details, check Express&amp;rsquo;s &lt;a href=&quot;https://expressjs.com/en/api.html&quot;&gt;API reference&lt;/a&gt;.</source>
          <target state="translated">Дополнительные сведения см. В &lt;a href=&quot;https://expressjs.com/en/api.html&quot;&gt;справке&lt;/a&gt; по API Express .</target>
        </trans-unit>
        <trans-unit id="4609df6630d7a6dd29abb516c3e781cfeabde439" translate="yes" xml:space="preserve">
          <source>For the same reason, Pug&amp;rsquo;s &lt;a href=&quot;comments&quot;&gt;buffered comments&lt;/a&gt; cannot appear at the top level of an extending template: they produce HTML comments which would have nowhere to go in the resulting HTML. (Unbuffered Pug comments, however, can still go anywhere.)</source>
          <target state="translated">По той же причине &lt;a href=&quot;comments&quot;&gt;буферизованные комментарии&lt;/a&gt; Pug не могут появляться на верхнем уровне расширяющегося шаблона: они создают комментарии HTML, которым некуда идти в результирующем HTML. (Однако небуферизованные комментарии мопсов по-прежнему могут быть куда угодно.)</target>
        </trans-unit>
        <trans-unit id="9823bf7d155fc85d937baa1cea5f59c5298f343a" translate="yes" xml:space="preserve">
          <source>Hash table of &lt;a href=&quot;../language/filters#custom-filters&quot;&gt;custom filters&lt;/a&gt;. Defaults to &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">Хеш-таблица &lt;a href=&quot;../language/filters#custom-filters&quot;&gt;настраиваемых фильтров&lt;/a&gt; . По умолчанию &lt;code&gt;undefined&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7071820100990cd09889b93e5b15ce02edf7fc75" translate="yes" xml:space="preserve">
          <source>Here are some alternatives you can use to include variables in your attribute:</source>
          <target state="translated">Вот несколько альтернатив,которые Вы можете использовать для включения переменных в Ваш атрибут:</target>
        </trans-unit>
        <trans-unit id="029ded0d9793debc52ff8958626203b763f084bd" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s what the output function string looks like (written to &lt;code&gt;templates.js&lt;/code&gt;).</source>
          <target state="translated">Вот как выглядит строка выходной функции (записанная в &lt;code&gt;templates.js&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="d2488a3b5546ab9c57a93760247d9dca82cfbfcb" translate="yes" xml:space="preserve">
          <source>However, since all lines beginning with &lt;code&gt;&amp;lt;&lt;/code&gt; are treated as &lt;a href=&quot;plain-text&quot;&gt;plain text&lt;/a&gt;, normal HTML-style conditional comments work just fine.</source>
          <target state="translated">Однако, поскольку все строки, начинающиеся с &lt;code&gt;&amp;lt;&lt;/code&gt; , обрабатываются как &lt;a href=&quot;plain-text&quot;&gt;обычный текст&lt;/a&gt; , обычные условные комментарии в стиле HTML работают нормально.</target>
        </trans-unit>
        <trans-unit id="aa9469c4630425b15b1c3ed02e5d2f5c0613bbaa" translate="yes" xml:space="preserve">
          <source>ID Literal</source>
          <target state="translated">ID Буквальный</target>
        </trans-unit>
        <trans-unit id="e7fbe8f0a9ff90d5f887cb9ab8619321e0fcd418" translate="yes" xml:space="preserve">
          <source>IDs may be defined using a &lt;code&gt;#idname&lt;/code&gt; syntax:</source>
          <target state="translated">Идентификаторы могут быть определены с использованием синтаксиса &lt;code&gt;#idname&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="ffe3e46a59fb760cf2c79a346071c18baeb5acd5" translate="yes" xml:space="preserve">
          <source>If no file extension is given, &lt;code&gt;.pug&lt;/code&gt; is automatically appended to the file name.</source>
          <target state="translated">Если расширение файла не задано, к имени файла автоматически добавляется &lt;code&gt;.pug&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ff4e9a217d9e093b4a82406c0bf828a708f67b67" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;true&lt;/code&gt;, compiled functions are cached. &lt;code&gt;filename&lt;/code&gt; must be set as the cache key. Only applies to &lt;code&gt;render&lt;/code&gt; functions. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Если установлено значение &lt;code&gt;true&lt;/code&gt; , скомпилированные функции кэшируются. &lt;code&gt;filename&lt;/code&gt; должен быть установлен как ключ кеша. Применяется только к функциям &lt;code&gt;render&lt;/code&gt; . По умолчанию - &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3defd8f132d640b35caa07e783051bf0cc079d33" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;true&lt;/code&gt;, the function source will be included in the compiled template for better error messages (sometimes useful in development). It is enabled by default, unless used with &lt;a href=&quot;https://expressjs.com/&quot;&gt;Express&lt;/a&gt; in production mode.</source>
          <target state="translated">Если установлено значение &lt;code&gt;true&lt;/code&gt; , источник функции будет включен в скомпилированный шаблон для улучшения сообщений об ошибках (иногда полезно при разработке). Он включен по умолчанию, если только он не используется с &lt;a href=&quot;https://expressjs.com/&quot;&gt;Express&lt;/a&gt; в производственном режиме.</target>
        </trans-unit>
        <trans-unit id="93ae684ed36bd6df084bf97faf1d3f1edfb3be2c" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;true&lt;/code&gt;, the tokens and function body are logged to stdout.</source>
          <target state="translated">Если установлено значение &lt;code&gt;true&lt;/code&gt; , токены и тело функции записываются в стандартный вывод.</target>
        </trans-unit>
        <trans-unit id="b2f7063b223138c5012442ae54dd615cb9b4e4cc" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;doctype&lt;/code&gt; is not specified as part of the template, you can specify it here. It is sometimes useful to get self-closing tags and remove mirroring of boolean attributes. See &lt;a href=&quot;../language/doctype#doctype-option&quot;&gt;doctype documentation&lt;/a&gt; for more information.</source>
          <target state="translated">Если &lt;code&gt;doctype&lt;/code&gt; не указан как часть шаблона, вы можете указать его здесь. Иногда бывает полезно получить самозакрывающиеся теги и удалить зеркальное отображение логических атрибутов. Дополнительную &lt;a href=&quot;../language/doctype#doctype-option&quot;&gt;информацию&lt;/a&gt; см. В документации по doctype .</target>
        </trans-unit>
        <trans-unit id="4bcc5d7dcd43ff96b9d2dc5d8908c47c94095d3b" translate="yes" xml:space="preserve">
          <source>If the content of the filter is short, one can even use filters as if they are tags:</source>
          <target state="translated">Если содержимое фильтра короткое,можно даже использовать фильтры как теги:</target>
        </trans-unit>
        <trans-unit id="bd7275ff362296a29dbc8bb8a1729812d8fd982c" translate="yes" xml:space="preserve">
          <source>If the doctype is &lt;code&gt;html&lt;/code&gt;, Pug knows not to mirror the attribute, and instead uses the terse style (understood by all browsers).</source>
          <target state="translated">Если doctype - &lt;code&gt;html&lt;/code&gt; , Pug знает, что не следует зеркалировать атрибут, и вместо этого использует краткий стиль (понятный для всех браузеров).</target>
        </trans-unit>
        <trans-unit id="462cdb08ff0c1ed2e228428afe7aaf73314d21db" translate="yes" xml:space="preserve">
          <source>If the path is absolute (e.g., &lt;code&gt;include /root.pug&lt;/code&gt;), it is resolved by prepending &lt;code&gt;options.basedir&lt;/code&gt;. Otherwise, paths are resolved relative to the current file being compiled.</source>
          <target state="translated">Если путь является абсолютным (например, &lt;code&gt;include /root.pug&lt;/code&gt; ), он разрешается путем добавления к файлу &lt;code&gt;options.basedir&lt;/code&gt; . В противном случае пути разрешаются относительно текущего компилируемого файла.</target>
        </trans-unit>
        <trans-unit id="06ebe68dbce1f7cd39c1c1bccdb603b1987077d0" translate="yes" xml:space="preserve">
          <source>If you are migrating from Jade, please follow the &lt;a href=&quot;migration-v2&quot;&gt;Migrating to Pug 2&lt;/a&gt; article first. This article covers how to upgrade from Pug 2 to Pug 3.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae198f2d9b04cc9ec1300ca4338df544170990ed" translate="yes" xml:space="preserve">
          <source>If you are not using filters with the &amp;ldquo;minify&amp;rdquo; option, you can ignore this change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b5545675e93f492001badb219513619ea637d98" translate="yes" xml:space="preserve">
          <source>If you are not using plugins, you can ignore this change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59defcca7d3056b9fb46d179c1b98573c7063710" translate="yes" xml:space="preserve">
          <source>If you are using a &lt;code&gt;read&lt;/code&gt; plugin to override the way that pug reads files, and you want to support the new &lt;code&gt;renderBuffer&lt;/code&gt; filters, you will need to return &lt;code&gt;Buffer&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a519639acfa4901723f01c42b2b9f70a6978d348" translate="yes" xml:space="preserve">
          <source>If you can&amp;rsquo;t find an appropriate filter for your use case, you can write your own &lt;a href=&quot;#custom-filters&quot;&gt;custom filter&lt;/a&gt;.</source>
          <target state="translated">Если вы не можете найти подходящий фильтр для вашего варианта использования, вы можете написать свой собственный &lt;a href=&quot;#custom-filters&quot;&gt;фильтр&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d122a4cefee06bb925ce8cd9ce350a979173901e" translate="yes" xml:space="preserve">
          <source>If you have many attributes, you can also spread them across many lines:</source>
          <target state="translated">Если у вас много атрибутов,вы также можете распределить их по многим линиям:</target>
        </trans-unit>
        <trans-unit id="a4039e8a790364a4ef5144f9133751fa71f1168c" translate="yes" xml:space="preserve">
          <source>If you need the text and/or tags to touch &amp;mdash; perhaps you need a period to appear outside the hyperlink at the end of a sentence &amp;mdash; this is easy, as it&amp;rsquo;s basically what happens unless you tell Pug otherwise.</source>
          <target state="translated">Если вам нужно прикоснуться к тексту и / или тегам - возможно, вам нужна точка, чтобы появиться за пределами гиперссылки в конце предложения - это легко, поскольку в основном это происходит, если вы не сообщите Пагу иначе.</target>
        </trans-unit>
        <trans-unit id="9cfff4799c23a8cb0b9b1cf0180749f2c648eafb" translate="yes" xml:space="preserve">
          <source>If you need to &lt;em&gt;add&lt;/em&gt; space, you have a few options:</source>
          <target state="translated">Если вам нужно &lt;em&gt;добавить&lt;/em&gt; место, у вас есть несколько вариантов:</target>
        </trans-unit>
        <trans-unit id="5a3c344d4e7642befd1f8f97a645bbdb8ed8a628" translate="yes" xml:space="preserve">
          <source>If you need to include a verbatim &lt;code&gt;#{&lt;/code&gt;, you can either escape it, or use interpolation. (So meta!)</source>
          <target state="translated">Если вам нужно добавить дословный знак &lt;code&gt;#{&lt;/code&gt; , вы можете либо убрать его, либо использовать интерполяцию. (Так мета!)</target>
        </trans-unit>
        <trans-unit id="9490344b1671add1e25310cf31d36c0bb4e40307" translate="yes" xml:space="preserve">
          <source>If you pass a &lt;code&gt;.name&lt;/code&gt; property on the options object, it will be used as the name of your client side template function.</source>
          <target state="translated">Если вы передадите свойство &lt;code&gt;.name&lt;/code&gt; объекту параметров, оно будет использоваться как имя вашей клиентской функции шаблона.</target>
        </trans-unit>
        <trans-unit id="34226059890db2c4f88be87587d73a05600474ce" translate="yes" xml:space="preserve">
          <source>If you were using filters that output JavaScript or CSS, along with the &lt;code&gt;minify&lt;/code&gt; option, you now need to include an extra dependency. If you want to support minifying JavaScript, you must install &lt;code&gt;jstransformer-uglify-js&lt;/code&gt; and if you want to support minifying CSS, you must install &lt;code&gt;jstransformer-clean-css&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b966cfc4039fb1ec9704af6a89434a51e90fd40" translate="yes" xml:space="preserve">
          <source>If you would like to not output anything in a specific case, add an explicit unbuffered &lt;code&gt;break&lt;/code&gt;:</source>
          <target state="translated">Если вы не хотите ничего выводить в конкретном случае, добавьте явный небуферизованный &lt;code&gt;break&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="90efed26b48edad2c105f236ef29c909631af905" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re coming from Pug v1, you may now omit the leading &lt;code&gt;-&lt;/code&gt;. Otherwise, it&amp;rsquo;s identical (just regular JavaScript):</source>
          <target state="translated">Если вы используете Pug v1, теперь вы можете опустить ведущий &lt;code&gt;-&lt;/code&gt; . В остальном он идентичен (обычный JavaScript):</target>
        </trans-unit>
        <trans-unit id="b1d5fa3b1451933ae79c1ba38817e18c64868773" translate="yes" xml:space="preserve">
          <source>If your JavaScript runtime supports ES2015 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals&quot;&gt;template strings&lt;/a&gt; (including Node.js/io.js 1.0.0 and later), you can also use its syntax to simplify your attributes:</source>
          <target state="translated">Если ваша среда выполнения JavaScript поддерживает строки &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals&quot;&gt;шаблона&lt;/a&gt; ES2015 (включая Node.js / io.js 1.0.0 и новее), вы также можете использовать его синтаксис для упрощения ваших атрибутов:</target>
        </trans-unit>
        <trans-unit id="aac4834d057bcbd0932db546be2f66f840710335" translate="yes" xml:space="preserve">
          <source>If your JavaScript runtime supports ES2015 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals&quot;&gt;template strings&lt;/a&gt; (including Node.js/io.js 1.0.0 and later), you can use that syntax for attributes. This is really useful for attributes with really long values:</source>
          <target state="translated">Если ваша среда выполнения JavaScript поддерживает строки &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals&quot;&gt;шаблона&lt;/a&gt; ES2015 (включая Node.js / io.js 1.0.0 и новее), вы можете использовать этот синтаксис для атрибутов. Это действительно полезно для атрибутов с очень длинными значениями:</target>
        </trans-unit>
        <trans-unit id="b483de9333a906f36b563c9848c6ae789fb1ed2a" translate="yes" xml:space="preserve">
          <source>If your attribute name contains odd characters that might interfere with JavaScript syntax, either quote it using &lt;code&gt;&quot;&quot;&lt;/code&gt; or &lt;code&gt;''&lt;/code&gt;, or use commas to separate different attributes. Examples of such characters include &lt;code&gt;[]&lt;/code&gt; and &lt;code&gt;()&lt;/code&gt; (frequently used in Angular 2).</source>
          <target state="translated">Если имя вашего атрибута содержит нечетные символы, которые могут мешать синтаксису JavaScript, либо заключите его в кавычки, используя &lt;code&gt;&quot;&quot;&lt;/code&gt; или &lt;code&gt;''&lt;/code&gt; , либо используйте запятые для разделения различных атрибутов. Примеры таких символов включают &lt;code&gt;[]&lt;/code&gt; и &lt;code&gt;()&lt;/code&gt; (часто используются в Angular 2).</target>
        </trans-unit>
        <trans-unit id="a66c48e5ddf8cd30a4d1d5f10586e90444552c50" translate="yes" xml:space="preserve">
          <source>If your inline tags don&amp;rsquo;t require many attributes, you may find it easiest to use tag interpolation, or literal HTML, within a plain text &lt;em&gt;block&lt;/em&gt;.</source>
          <target state="translated">Если для ваших встроенных тегов не требуется много атрибутов, вам может показаться, что проще всего использовать интерполяцию тегов или буквальный HTML-код в текстовом &lt;em&gt;блоке&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="dad51ca1f804854cce12a248ad56fc44398f2a99" translate="yes" xml:space="preserve">
          <source>If, for whatever reason, it is not possible to use the &lt;code&gt;doctype&lt;/code&gt; keyword (e.g., just rendering HTML fragments), but you would still like to specify the doctype of the template, you can do so via the &lt;a href=&quot;../api/reference#options&quot;&gt;&lt;code&gt;doctype&lt;/code&gt; option&lt;/a&gt;.</source>
          <target state="translated">Если по какой-либо причине невозможно использовать ключевое слово &lt;code&gt;doctype&lt;/code&gt; (например, просто рендеринг HTML-фрагментов), но вы все равно хотите указать doctype шаблона, вы можете сделать это с помощью &lt;a href=&quot;../api/reference#options&quot;&gt;опции &lt;/a&gt; &lt;code&gt;doctype&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4d7daa7390bef11634aadaf7114b411ed2bcbf4e" translate="yes" xml:space="preserve">
          <source>In Express, the environmental variable &lt;code&gt;NODE_ENV&lt;/code&gt; is designed to inform the web application of the execution environment: whether it is in development or in production. Express and Pug automatically modify the defaults of a few options in production environment, to provide a better out-of-the-box experience for users.</source>
          <target state="translated">В Express переменная среды &lt;code&gt;NODE_ENV&lt;/code&gt; предназначена для информирования веб-приложения о среде выполнения: находится ли оно в разработке или в производстве. Express и Pug автоматически изменяют значения по умолчанию для нескольких параметров в производственной среде, чтобы обеспечить пользователям более удобную работу сразу после установки.</target>
        </trans-unit>
        <trans-unit id="da73752cae51ef5a6c5639b6cd8ce0fdf44715d3" translate="yes" xml:space="preserve">
          <source>In Pug v2, this array has been split from Pug into the &lt;code&gt;&lt;a href=&quot;https://www.npmjs.com/package/void-elements&quot;&gt;void-elements&lt;/a&gt;&lt;/code&gt; package. To modify this array, you could write a &lt;code&gt;codeGen&lt;/code&gt; plugin.</source>
          <target state="translated">В Pug v2 этот массив был разделен из Pug на пакет &lt;code&gt;&lt;a href=&quot;https://www.npmjs.com/package/void-elements&quot;&gt;void-elements&lt;/a&gt;&lt;/code&gt; . Чтобы изменить этот массив, вы можете написать плагин &lt;code&gt;codeGen&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ab679835b214cf0162d4435957a81739c343f72b" translate="yes" xml:space="preserve">
          <source>In Pug v2, this object has been split from Pug into the &lt;code&gt;&lt;a href=&quot;https://www.npmjs.com/package/doctypes&quot;&gt;doctypes&lt;/a&gt;&lt;/code&gt; package. To extend doctype shortcuts, you could write a &lt;code&gt;codeGen&lt;/code&gt; plugin.</source>
          <target state="translated">В Pug v2 этот объект был отделен от Pug в пакете &lt;code&gt;&lt;a href=&quot;https://www.npmjs.com/package/doctypes&quot;&gt;doctypes&lt;/a&gt;&lt;/code&gt; . Чтобы расширить ярлыки doctype, вы можете написать плагин &lt;code&gt;codeGen&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="76c90968929cb14cd4cd79f8c04e30277f24eaf8" translate="yes" xml:space="preserve">
          <source>In a template, a &lt;code&gt;block&lt;/code&gt; is simply a &amp;ldquo;block&amp;rdquo; of Pug that a child template may replace. This process is recursive.</source>
          <target state="translated">В шаблоне &lt;code&gt;block&lt;/code&gt; - это просто &amp;laquo;блок&amp;raquo; Pug, который дочерний шаблон может заменить. Этот процесс рекурсивный.</target>
        </trans-unit>
        <trans-unit id="642e1c0a1cdf1e80804c47ef1a19c67cb457dbf0" translate="yes" xml:space="preserve">
          <source>In addition to being buffered in the output, a doctype in Pug can affect compilation in other ways. For example, whether self-closing tags end with &lt;code&gt;/&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;gt;&lt;/code&gt; depends on whether HTML or XML is specified. The output of &lt;a href=&quot;attributes#boolean-attributes&quot;&gt;boolean attributes&lt;/a&gt; may be affected as well.</source>
          <target state="translated">Помимо буферизации вывода, doctype в Pug может влиять на компиляцию и другими способами. Например, заканчиваются ли самозакрывающиеся теги символами &lt;code&gt;/&amp;gt;&lt;/code&gt; или &lt;code&gt;&amp;gt;&lt;/code&gt; , зависит от того, указан ли HTML или XML. Также может быть затронут вывод &lt;a href=&quot;attributes#boolean-attributes&quot;&gt;логических атрибутов&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="78bffae6f1b111b8098474ea387760ea5dec13f3" translate="yes" xml:space="preserve">
          <source>In future we may drop support for node versions &lt;a href=&quot;https://github.com/nodejs/Release&quot;&gt;when they reach end of life&lt;/a&gt; without a major version bump.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="113f90e982f80f56acec52c221f2fd12519250c5" translate="yes" xml:space="preserve">
          <source>In the following example, the script is first transformed by &lt;code&gt;babel&lt;/code&gt;, and then by &lt;code&gt;cdata-js&lt;/code&gt;.</source>
          <target state="translated">В следующем примере сценарий сначала преобразуется &lt;code&gt;babel&lt;/code&gt; , а затем &lt;code&gt;cdata-js&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="db54974f7f0ad531e35648ba85b9388029b4d7ef" translate="yes" xml:space="preserve">
          <source>Includes</source>
          <target state="translated">Includes</target>
        </trans-unit>
        <trans-unit id="2a78b74b2140bec06d774038a569a0de20914b16" translate="yes" xml:space="preserve">
          <source>Includes allow you to insert the contents of one Pug file into another.</source>
          <target state="translated">Включает в себя возможность вставлять содержимое одного файла Pug в другой.</target>
        </trans-unit>
        <trans-unit id="1733f8ad068c6688edcf0012e28b63af0fa898d5" translate="yes" xml:space="preserve">
          <source>Including Filtered Text</source>
          <target state="translated">Включая отфильтрованный текст</target>
        </trans-unit>
        <trans-unit id="d199a93c1f244a34f35cffd46d161583b5986528" translate="yes" xml:space="preserve">
          <source>Including Plain Text</source>
          <target state="translated">В том числе простой текст</target>
        </trans-unit>
        <trans-unit id="6d86f9267e735630512730b5e0760bcfc90d8178" translate="yes" xml:space="preserve">
          <source>Including non-Pug files simply includes their raw text.</source>
          <target state="translated">Включая файлы,не относящиеся к Pug,просто включает их необработанный текст.</target>
        </trans-unit>
        <trans-unit id="fa3f4ce36b97e896e30dbd959612aa627c2a1f2d" translate="yes" xml:space="preserve">
          <source>Inline Syntax</source>
          <target state="translated">Синтаксис в сети</target>
        </trans-unit>
        <trans-unit id="09f0d0c15b8c37c9cef55645522134b3cc1adb0f" translate="yes" xml:space="preserve">
          <source>Inline in a Tag</source>
          <target state="translated">Inline in a Tag</target>
        </trans-unit>
        <trans-unit id="7f9c9e981cffb212f711f1bbdad314bd1a2617cb" translate="yes" xml:space="preserve">
          <source>Inline runtime functions instead of &lt;code&gt;require&lt;/code&gt;-ing them from a shared version. For &lt;code&gt;compileClient&lt;/code&gt; functions, the default is &lt;code&gt;true&lt;/code&gt; (so that one does not have to include the runtime). For all other compilation or rendering types, the default is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Встроенные функции времени выполнения вместо того, &lt;code&gt;require&lt;/code&gt; их из общей версии. Для функций &lt;code&gt;compileClient&lt;/code&gt; значение по умолчанию - &lt;code&gt;true&lt;/code&gt; (так что не нужно включать среду выполнения). Для всех других типов компиляции или рендеринга значение по умолчанию - &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Installation</target>
        </trans-unit>
        <trans-unit id="6a9858c9bf3149456595f98943cf88e41039822e" translate="yes" xml:space="preserve">
          <source>Interpolation</source>
          <target state="translated">Interpolation</target>
        </trans-unit>
        <trans-unit id="758ad8f867eaf9e76308a7f3b80a0ecfa8636d67" translate="yes" xml:space="preserve">
          <source>Interpolation works not only on JavaScript values, but on Pug as well. Just use the tag interpolation syntax, like so:</source>
          <target state="translated">Интерполяция работает не только на значениях JavaScript,но и на Pug.Просто используйте синтаксис интерполяции тегов:</target>
        </trans-unit>
        <trans-unit id="e1d4a9056d804ecb47a2fb02510e41fe592f1afb" translate="yes" xml:space="preserve">
          <source>It can also be an object which maps class names to &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; values. This is useful for applying conditional classes</source>
          <target state="translated">Это также может быть объект, который сопоставляет имена классов с &lt;code&gt;true&lt;/code&gt; или &lt;code&gt;false&lt;/code&gt; значениями. Это полезно для применения условных классов</target>
        </trans-unit>
        <trans-unit id="ab482dd3ef17d7fde5e78088bfe9ecff735c59e9" translate="yes" xml:space="preserve">
          <source>It can also be written inline (after any attributes), and supports the full range of JavaScript expressions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="173781d56ce2949143e28e3b74b403532dae7c59" translate="yes" xml:space="preserve">
          <source>It can also be written inline with attributes, and supports the full range of JavaScript expressions:</source>
          <target state="translated">Он также может быть написан в строке с атрибутами и поддерживает весь спектр JavaScript выражений:</target>
        </trans-unit>
        <trans-unit id="508812bfe3f4255d462818c2a063efe3aebcf03c" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s also possible to override a block to provide additional blocks, as shown in the following example. As it shows, &lt;code&gt;content&lt;/code&gt; now exposes a &lt;code&gt;sidebar&lt;/code&gt; and &lt;code&gt;primary&lt;/code&gt; block for overriding. (Alternatively, the child template could override &lt;code&gt;content&lt;/code&gt; altogether.)</source>
          <target state="translated">Также возможно переопределить блок для предоставления дополнительных блоков, как показано в следующем примере. Как видно, &lt;code&gt;content&lt;/code&gt; теперь предоставляет &lt;code&gt;sidebar&lt;/code&gt; и &lt;code&gt;primary&lt;/code&gt; блок для переопределения. (В качестве альтернативы дочерний шаблон может полностью переопределить &lt;code&gt;content&lt;/code&gt; .)</target>
        </trans-unit>
        <trans-unit id="18905aab409cadb5b72681a650ec99001cb221e0" translate="yes" xml:space="preserve">
          <source>Iteration</source>
          <target state="translated">Iteration</target>
        </trans-unit>
        <trans-unit id="89b86ab0e66f527166d98df92ddbcf5416ed58f6" translate="yes" xml:space="preserve">
          <source>Language</source>
          <target state="translated">Language</target>
        </trans-unit>
        <trans-unit id="a6ad88f2b621f00e4ead6d51c821fe6848de5bc6" translate="yes" xml:space="preserve">
          <source>Legacy Mixin Call</source>
          <target state="translated">Миксовый звонок по наследству</target>
        </trans-unit>
        <trans-unit id="c58bd40e95aef48eee67a645bb4f78e1797cdf10" translate="yes" xml:space="preserve">
          <source>Licensed under the MIT license.</source>
          <target state="translated">Лицензия MIT.</target>
        </trans-unit>
        <trans-unit id="075081a85bdaa7df1d84d36f5ee0bb9d4defe16c" translate="yes" xml:space="preserve">
          <source>Like tags, buffered comments must appear on their own line.</source>
          <target state="translated">Как и теги,буферизованные комментарии должны появляться в собственной строке.</target>
        </trans-unit>
        <trans-unit id="d4ff5e02a19939e2d753dbe77cf2a7af529493db" translate="yes" xml:space="preserve">
          <source>Literal HTML</source>
          <target state="translated">Буквальный HTML</target>
        </trans-unit>
        <trans-unit id="a6fade4e839856115bad0de331ca6e83ef16ef08" translate="yes" xml:space="preserve">
          <source>Managing the whitespace of the rendered HTML is one of the trickiest parts about learning Pug. Don&amp;rsquo;t worry, though, you&amp;rsquo;ll get the hang of it soon enough.</source>
          <target state="translated">Управление пробелами в отображаемом HTML - одна из самых сложных частей в изучении Pug. Не волнуйтесь, вы скоро освоитесь.</target>
        </trans-unit>
        <trans-unit id="7e4ac6803c9159c694f63d089cb06b2519c16aba" translate="yes" xml:space="preserve">
          <source>Methods</source>
          <target state="translated">Methods</target>
        </trans-unit>
        <trans-unit id="d54a9328cafa2a8750510921a8c9527a61e2cfaa" translate="yes" xml:space="preserve">
          <source>Migrating to Pug 2</source>
          <target state="translated">Миграция в мопс 2</target>
        </trans-unit>
        <trans-unit id="218834565f8ca38ad38e00afbee09d33ad11f25a" translate="yes" xml:space="preserve">
          <source>Migrating to Pug 3 (from Pug 2)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="455cf5c03d11b837985c95c468cce8c400b89382" translate="yes" xml:space="preserve">
          <source>Mixin Attributes</source>
          <target state="translated">Миксовые атрибуты</target>
        </trans-unit>
        <trans-unit id="6cc953b5d5ee3aadb1e01eb3209a80b15bed7a66" translate="yes" xml:space="preserve">
          <source>Mixin Blocks</source>
          <target state="translated">Миксовые блоки</target>
        </trans-unit>
        <trans-unit id="d634308003ff858f289d2833f637dfc9bee3fc78" translate="yes" xml:space="preserve">
          <source>Mixins</source>
          <target state="translated">Mixins</target>
        </trans-unit>
        <trans-unit id="c545846585a2f6a9081ab068737f06401e68861b" translate="yes" xml:space="preserve">
          <source>Mixins allow you to create reusable blocks of Pug.</source>
          <target state="translated">Смесители позволяют создавать многократно используемые блоки Pug.</target>
        </trans-unit>
        <trans-unit id="27b687048f3bde21505314fa92e60c5e40070fd5" translate="yes" xml:space="preserve">
          <source>Mixins also get an implicit &lt;code&gt;attributes&lt;/code&gt; argument, which is taken from the attributes passed to the mixin:</source>
          <target state="translated">Миксины также получают аргумент неявных &lt;code&gt;attributes&lt;/code&gt; , который берется из атрибутов, переданных в миксин:</target>
        </trans-unit>
        <trans-unit id="51b9ceb9413c1c1738e4d88be857eaaf902cfafe" translate="yes" xml:space="preserve">
          <source>Mixins are compiled to functions, and can take arguments:</source>
          <target state="translated">Смесины компилируются в функции и могут принимать аргументы:</target>
        </trans-unit>
        <trans-unit id="5e1e32304b726ab5d3cb57910f579f5d8cad2592" translate="yes" xml:space="preserve">
          <source>Mixins can also take a block of Pug to act as the content:</source>
          <target state="translated">Смесители также могут брать блок Pug,чтобы выступать в качестве содержимого:</target>
        </trans-unit>
        <trans-unit id="d3533413b2597953be02ca04b7bfa0068a871701" translate="yes" xml:space="preserve">
          <source>Most of these removals can be automatically detected by &lt;code&gt;&lt;a href=&quot;https://www.npmjs.com/package/pug-lint&quot;&gt;pug-lint&lt;/a&gt;&lt;/code&gt;, our official linter.</source>
          <target state="translated">Большинство этих удалений может быть автоматически обнаружено нашим официальным линтером &lt;code&gt;&lt;a href=&quot;https://www.npmjs.com/package/pug-lint&quot;&gt;pug-lint&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8c50357aea46c8648515c1f45d4227a27bc1b3fb" translate="yes" xml:space="preserve">
          <source>Multiline Attributes</source>
          <target state="translated">Многострочные атрибуты</target>
        </trans-unit>
        <trans-unit id="e4ea13997251174c3a5a7513deb65c4ca9b53f2a" translate="yes" xml:space="preserve">
          <source>Nested Filters</source>
          <target state="translated">Вложенные фильтры</target>
        </trans-unit>
        <trans-unit id="0ea55df7522cbddd16f5d3960bd2793fc3dbda51" translate="yes" xml:space="preserve">
          <source>Node.js Support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed8c79e766905d2768a125ca59e149eea737da39" translate="yes" xml:space="preserve">
          <source>Node.js-style callback receiving the rendered results. &lt;strong&gt;This callback is called synchronously.&lt;/strong&gt;</source>
          <target state="translated">Обратный вызов в стиле Node.js, получающий обработанные результаты. &lt;strong&gt;Этот обратный вызов вызывается синхронно.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dda390f990b3b683cc97ed07b56454be0c9d3d18" translate="yes" xml:space="preserve">
          <source>Normal JavaScript expressions work fine, too:</source>
          <target state="translated">Нормальные выражения JavaScript тоже отлично работают:</target>
        </trans-unit>
        <trans-unit id="b0767d5208f03805e546ae384e216930f4da63f1" translate="yes" xml:space="preserve">
          <source>Not recommended</source>
          <target state="translated">Не рекомендуется</target>
        </trans-unit>
        <trans-unit id="2c924e3088204ee77ba681f72be3444357932fca" translate="yes" xml:space="preserve">
          <source>Note</source>
          <target state="translated">Note</target>
        </trans-unit>
        <trans-unit id="4de925511709d95913db25c4fcd321dcbdefa72d" translate="yes" xml:space="preserve">
          <source>Note that &lt;strong&gt;only named blocks and mixin definitions&lt;/strong&gt; can appear at the top (unindented) level of a child template. This is important! Parent templates define a page&amp;rsquo;s overall structure, and child templates can only &lt;code&gt;append&lt;/code&gt;, &lt;code&gt;prepend&lt;/code&gt;, or replace specific blocks of markup and logic. If a child template tried to add content outside of a block, Pug would have no way of knowing where to put it in the final page.</source>
          <target state="translated">Обратите внимание, что &lt;strong&gt;только именованные блоки и определения&lt;/strong&gt; миксинов могут отображаться на верхнем (без отступов) уровне дочернего шаблона. Это важно! Родительские шаблоны определяют общую структуру страницы, а дочерние шаблоны могут только &lt;code&gt;append&lt;/code&gt; , &lt;code&gt;prepend&lt;/code&gt; или заменять определенные блоки разметки и логики. Если дочерний шаблон попытается добавить контент за пределы блока, Паг не сможет узнать, где разместить его на последней странице.</target>
        </trans-unit>
        <trans-unit id="8fb2d8d56ff614b23f16650de705d5e618d817a3" translate="yes" xml:space="preserve">
          <source>Now, consider a page of your JavaScript game. You want some game related scripts as well as these defaults. You can simply &lt;code&gt;append&lt;/code&gt; the block:</source>
          <target state="translated">Теперь рассмотрим страницу вашей игры на JavaScript. Вам нужны сценарии, связанные с игрой, а также эти значения по умолчанию. Вы можете просто &lt;code&gt;append&lt;/code&gt; блок:</target>
        </trans-unit>
        <trans-unit id="854da00bf48d18d202028dd7f88db225b03d523e" translate="yes" xml:space="preserve">
          <source>Now, you should be able to render the following template:</source>
          <target state="translated">Теперь вы должны быть в состоянии отобразить следующий шаблон:</target>
        </trans-unit>
        <trans-unit id="cc35ad1a12dddc512674c55ebc55fce768298dbe" translate="yes" xml:space="preserve">
          <source>Often you might want large blocks of text within a tag. A good example is writing JavaScript and CSS code in the &lt;code&gt;script&lt;/code&gt; and &lt;code&gt;style&lt;/code&gt; tags. To do this, just add a &lt;code&gt;.&lt;/code&gt; right after the tag name, or after the closing parenthesis, if the tag has &lt;a href=&quot;attributes&quot;&gt;attributes&lt;/a&gt;.</source>
          <target state="translated">Часто вам могут понадобиться большие блоки текста внутри тега. Хороший пример - написание кода JavaScript и CSS в тегах &lt;code&gt;script&lt;/code&gt; и &lt;code&gt;style&lt;/code&gt; . Для этого просто добавьте &lt;code&gt;.&lt;/code&gt; сразу после имени тега или после закрывающей круглой скобки, если тег имеет &lt;a href=&quot;attributes&quot;&gt;атрибуты&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="14e63d200923230d7d4952a949c4fa2922af23b6" translate="yes" xml:space="preserve">
          <source>One can also add an &lt;code&gt;else&lt;/code&gt; block that will be executed if the array or object does not contain values to iterate over. The following is equivalent to the example above:</source>
          <target state="translated">Также можно добавить блок &lt;code&gt;else&lt;/code&gt; , который будет выполняться, если массив или объект не содержат значений для итерации. Следующее эквивалентно приведенному выше примеру:</target>
        </trans-unit>
        <trans-unit id="1fbc4f223b27881fb4f0e2162d0d3dba4c16acec" translate="yes" xml:space="preserve">
          <source>One common pitfall here is managing whitespace in the rendered HTML. We&amp;rsquo;ll talk about that at the end of this page.</source>
          <target state="translated">Одна из распространенных ошибок - управление пробелами в отображаемом HTML. Мы поговорим об этом в конце этой страницы.</target>
        </trans-unit>
        <trans-unit id="6bf5da9c080bee3a8142586c412aa39971137eee" translate="yes" xml:space="preserve">
          <source>Options</source>
          <target state="translated">Options</target>
        </trans-unit>
        <trans-unit id="0efc2e6be4c23b9a513d7ce0dcff8ed80e8912e7" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="translated">Overview</target>
        </trans-unit>
        <trans-unit id="9a32db309e55307ccc8378ee296a11ae947849eb" translate="yes" xml:space="preserve">
          <source>Piped Text</source>
          <target state="translated">Водопроводный текст</target>
        </trans-unit>
        <trans-unit id="bbb40a6fe504f9aa59a8b4a6e3d57bfd7a6cef82" translate="yes" xml:space="preserve">
          <source>Plain Text</source>
          <target state="translated">простой текст</target>
        </trans-unit>
        <trans-unit id="f7ad86140e023ee40ecbc1dcb9b4395b236da7e3" translate="yes" xml:space="preserve">
          <source>Plain text does still use tag and string &lt;a href=&quot;interpolation&quot;&gt;interpolation&lt;/a&gt;, but the first word on the line is not a Pug tag. And because plain text is not escaped, you can also include literal HTML.</source>
          <target state="translated">Обычный текст по-прежнему использует &lt;a href=&quot;interpolation&quot;&gt;интерполяцию&lt;/a&gt; тегов и строк , но первое слово в строке не является тегом Pug. А поскольку обычный текст не экранирован, вы также можете включить буквальный HTML.</target>
        </trans-unit>
        <trans-unit id="555a2ba5933df029b8a3a9750f8a429a80b45639" translate="yes" xml:space="preserve">
          <source>Prefixed &lt;code&gt;each&lt;/code&gt; Syntax</source>
          <target state="translated">Добавлен префикс для &lt;code&gt;each&lt;/code&gt; синтаксиса</target>
        </trans-unit>
        <trans-unit id="5c370660dbd428d49dfea4bf413e76ac2b1616c4" translate="yes" xml:space="preserve">
          <source>Previous versions of Pug/Jade supported an interpolation syntax such as:</source>
          <target state="translated">Предыдущие версии Pug/Jade поддерживали интерполяционный синтаксис,например:</target>
        </trans-unit>
        <trans-unit id="736f2dd581871952f35257be63727610a6d2d285" translate="yes" xml:space="preserve">
          <source>Previously, the undocumented &lt;code&gt;jade.doctype&lt;/code&gt; object contained a hash of &lt;a href=&quot;../language/doctype#doctype-shortcuts&quot;&gt;doctype shortcuts&lt;/a&gt;. By extending this object, users could create additional or modify existing doctype shortcuts.</source>
          <target state="translated">Ранее недокументированный объект &lt;code&gt;jade.doctype&lt;/code&gt; содержал хэш &lt;a href=&quot;../language/doctype#doctype-shortcuts&quot;&gt;ярлыков doctype&lt;/a&gt; . Расширяя этот объект, пользователи могут создавать дополнительные или изменять существующие ярлыки типа документа.</target>
        </trans-unit>
        <trans-unit id="bdc976c72a58abe7881b005e6d7003f9c6f33a1a" translate="yes" xml:space="preserve">
          <source>Previously, the undocumented &lt;code&gt;jade.nodes&lt;/code&gt; object held a hash of classes that serve as the constructor of the nodes of the (also undocumented) Jade abstract syntax tree. In Pug v2, we have abandoned this approach in favor of duck typing using the &lt;code&gt;type&lt;/code&gt; property in AST nodes.</source>
          <target state="translated">Раньше недокументированный объект &lt;code&gt;jade.nodes&lt;/code&gt; содержал хэш классов, которые служили конструктором узлов (также недокументированного) абстрактного синтаксического дерева Jade. В Pug v2 мы отказались от этого подхода в пользу утиной печати с использованием свойства &lt;code&gt;type&lt;/code&gt; в узлах AST.</target>
        </trans-unit>
        <trans-unit id="79faa45c3ce2749355f43ca7818c41b0d9fc5662" translate="yes" xml:space="preserve">
          <source>Previously, the undocumented &lt;code&gt;jade.selfClosing&lt;/code&gt; array could used to extend or modify the behavior of &lt;a href=&quot;../language/tags#self-closing-tags&quot;&gt;self-closing tags&lt;/a&gt;.</source>
          <target state="translated">Ранее недокументированный массив &lt;code&gt;jade.selfClosing&lt;/code&gt; можно было использовать для расширения или изменения поведения &lt;a href=&quot;../language/tags#self-closing-tags&quot;&gt;самозакрывающихся тегов&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="11c0fcf8efff2122246542f306a46ab96d89db3f" translate="yes" xml:space="preserve">
          <source>Previously, the undocumented &lt;code&gt;jade.utils&lt;/code&gt; object contained three functions that are useful for template engine internals.</source>
          <target state="translated">Ранее недокументированный объект &lt;code&gt;jade.utils&lt;/code&gt; содержал три функции, которые полезны для внутреннего устройства шаблонизатора.</target>
        </trans-unit>
        <trans-unit id="d97b32f978ab9a9050270852511015ee3d8fad41" translate="yes" xml:space="preserve">
          <source>Previously, the undocumented Jade &lt;code&gt;compiler&lt;/code&gt;, &lt;code&gt;lexer&lt;/code&gt;, and &lt;code&gt;parser&lt;/code&gt; classes were exported through these properties. Users were allowed to create their own compilers, lexers, and parsers that derive from these classes, in order to customize compilation behaviors.</source>
          <target state="translated">Ранее недокументированные классы &lt;code&gt;compiler&lt;/code&gt; , &lt;code&gt;lexer&lt;/code&gt; и &lt;code&gt;parser&lt;/code&gt; Jade экспортировались через эти свойства. Пользователям было разрешено создавать свои собственные компиляторы, лексеры и синтаксические анализаторы, производные от этих классов, для настройки поведения компиляции.</target>
        </trans-unit>
        <trans-unit id="0ecd7e2ad5a3a107b93ae34f6de656f53b5f063d" translate="yes" xml:space="preserve">
          <source>Production Defaults</source>
          <target state="translated">Производственные дефолты</target>
        </trans-unit>
        <trans-unit id="5685dd489fec8c7279215d28e6f207a5a64dbb51" translate="yes" xml:space="preserve">
          <source>Project Rename</source>
          <target state="translated">Переименование проекта</target>
        </trans-unit>
        <trans-unit id="7882ed19f945bef86d660e5e10665ac9b58015f2" translate="yes" xml:space="preserve">
          <source>Pronounced as &amp;ldquo;and attributes&amp;rdquo;, the &lt;code&gt;&amp;amp;attributes&lt;/code&gt; syntax can be used to explode an object into attributes of an element.</source>
          <target state="translated">Синтаксис &lt;code&gt;&amp;amp;attributes&lt;/code&gt; произносимый как &amp;laquo;и атрибуты&amp;raquo;, может использоваться для разделения объекта на атрибуты элемента.</target>
        </trans-unit>
        <trans-unit id="bc6c88db2f0703a9e2461a4a8060ccf1cb881998" translate="yes" xml:space="preserve">
          <source>Properties</source>
          <target state="translated">Properties</target>
        </trans-unit>
        <trans-unit id="328a732e7d36df1ab0d2cdab11aadb3465566e0a" translate="yes" xml:space="preserve">
          <source>Pug</source>
          <target state="translated">Pug</target>
        </trans-unit>
        <trans-unit id="8c33c5fdabbfbfe74c97f618c47283cc7a9e9fdd" translate="yes" xml:space="preserve">
          <source>Pug 2 was released in August 2016. To make improvements in the new release possible, we had to make the decision of deprecating or removing some APIs and undocumented language features. We made an effort to make these changes as unintrusive as possible, and many of these changes were previously discouraged in console warnings.</source>
          <target state="translated">Мопс 2 был выпущен в августе 2016 года.Чтобы сделать возможными улучшения в новом релизе,нам пришлось принять решение об отмене или удалении некоторых API и недокументированных языковых функций.Мы постарались сделать эти изменения как можно более ненавязчивыми,и многие из этих изменений ранее не одобрялись в консольных предупреждениях.</target>
        </trans-unit>
        <trans-unit id="503d96d595471ef4fc2ea609a793bc09d3c3b452" translate="yes" xml:space="preserve">
          <source>Pug &lt;em&gt;preserves&lt;/em&gt; whitespace &lt;em&gt;within&lt;/em&gt; elements, including:</source>
          <target state="translated">Мопс &lt;em&gt;сохраняет&lt;/em&gt; пробелы &lt;em&gt;внутри&lt;/em&gt; элементов, в том числе:</target>
        </trans-unit>
        <trans-unit id="e5cb06f315274005e6742c29c17a2af2b68a92f9" translate="yes" xml:space="preserve">
          <source>Pug Documentation</source>
          <target state="translated">Документация на мопса</target>
        </trans-unit>
        <trans-unit id="73c5c635188ad48b070d1dd7963434a749d8a013" translate="yes" xml:space="preserve">
          <source>Pug allows you to &lt;code&gt;replace&lt;/code&gt; (default), &lt;code&gt;prepend&lt;/code&gt;, or &lt;code&gt;append&lt;/code&gt; blocks.</source>
          <target state="translated">Pug позволяет вам &lt;code&gt;replace&lt;/code&gt; (по умолчанию), &lt;code&gt;prepend&lt;/code&gt; или &lt;code&gt;append&lt;/code&gt; блоки.</target>
        </trans-unit>
        <trans-unit id="b1824136657233e309bd954e4df21423ee6fefb7" translate="yes" xml:space="preserve">
          <source>Pug allows you to write inline JavaScript code in your templates. There are three types of code: Unbuffered, Buffered, and Unescaped Buffered.</source>
          <target state="translated">Pug позволяет писать встроенный JavaScript код в ваших шаблонах.Существует три типа кода:Небуферизованный,буферизованный и небуферизованный.</target>
        </trans-unit>
        <trans-unit id="0464eabfbff85ac43ac3c9967d4cb78a7cf0b7dc" translate="yes" xml:space="preserve">
          <source>Pug also knows which elements are self-closing:</source>
          <target state="translated">Мопс также знает,какие элементы самозакрываются:</target>
        </trans-unit>
        <trans-unit id="d5faaf0044a4fd4705598bf0bc5ad5a0e53f041c" translate="yes" xml:space="preserve">
          <source>Pug also lets you iterate over the keys in an object:</source>
          <target state="translated">Pug также позволяет выполнить итерацию по клавишам объекта:</target>
        </trans-unit>
        <trans-unit id="6d891733144c6233e4d2781c4a4b54e8e5b5866c" translate="yes" xml:space="preserve">
          <source>Pug also provides the &lt;code&gt;&lt;a href=&quot;api/reference#pugrendersource-options-callback&quot;&gt;pug.render()&lt;/a&gt;&lt;/code&gt; family of functions that combine compiling and rendering into one step. However, the template function will be re-compiled every time &lt;code&gt;render&lt;/code&gt; is called, which might impact performance. Alternatively, you can use the &lt;code&gt;&lt;a href=&quot;api/reference#options-cache&quot;&gt;cache&lt;/a&gt;&lt;/code&gt; option with &lt;code&gt;render&lt;/code&gt;, which will automatically store the compiled function into an internal cache.</source>
          <target state="translated">Pug также предоставляет семейство функций &lt;code&gt;&lt;a href=&quot;api/reference#pugrendersource-options-callback&quot;&gt;pug.render()&lt;/a&gt;&lt;/code&gt; которые объединяют компиляцию и рендеринг в один шаг. Однако функция шаблона будет повторно компилироваться каждый раз при вызове &lt;code&gt;render&lt;/code&gt; , что может повлиять на производительность. В качестве альтернативы вы можете использовать параметр &lt;code&gt;&lt;a href=&quot;api/reference#options-cache&quot;&gt;cache&lt;/a&gt;&lt;/code&gt; с &lt;code&gt;render&lt;/code&gt; , который автоматически сохранит скомпилированную функцию во внутреннем кеше.</target>
        </trans-unit>
        <trans-unit id="bee54ce3d0d8f989713d60e1a72c7ab16713d284" translate="yes" xml:space="preserve">
          <source>Pug also provides the conditional &lt;code&gt;unless&lt;/code&gt;, which works like a negated &lt;code&gt;if&lt;/code&gt;. The following are equivalent:</source>
          <target state="translated">Мопс также условная , &lt;code&gt;unless&lt;/code&gt; , что не работает , как отрицается &lt;code&gt;if&lt;/code&gt; . Следующие варианты эквивалентны:</target>
        </trans-unit>
        <trans-unit id="fa5fa5f5d885b96c794d13baee54c53686d8e8b3" translate="yes" xml:space="preserve">
          <source>Pug also supports block unbuffered code:</source>
          <target state="translated">Pug также поддерживает блочный небуферизованный код:</target>
        </trans-unit>
        <trans-unit id="763f6efd010315adc29709db44f2359d674763fb" translate="yes" xml:space="preserve">
          <source>Pug also supports unbuffered comments. Simply add a hyphen (&lt;code&gt;-&lt;/code&gt;) to the start of the comment.</source>
          <target state="translated">Pug также поддерживает небуферизованные комментарии. Просто добавьте дефис ( &lt;code&gt;-&lt;/code&gt; ) в начало комментария.</target>
        </trans-unit>
        <trans-unit id="df9f8b510c1b030a89c5023142eafd6f7dc124b6" translate="yes" xml:space="preserve">
          <source>Pug blocks can provide default content, if appropriate. Providing default content is purely optional, though. The example below defines &lt;code&gt;block scripts&lt;/code&gt;, &lt;code&gt;block content&lt;/code&gt;, and &lt;code&gt;block foot&lt;/code&gt;.</source>
          <target state="translated">При необходимости блоки Pug могут предоставлять контент по умолчанию. Однако предоставление содержимого по умолчанию совершенно необязательно. Пример ниже , определяет &lt;code&gt;block scripts&lt;/code&gt; , &lt;code&gt;block content&lt;/code&gt; и &lt;code&gt;block foot&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c4168dc8dc48cbca8f4e2e1a51f8a653ac8447ca" translate="yes" xml:space="preserve">
          <source>Pug does not have any special syntax for conditional comments. (Conditional comments are a peculiar method of adding fallback markup for old versions of Internet Explorer.)</source>
          <target state="translated">В Pug нет специального синтаксиса для условных комментариев.(Условные комментарии-это особый метод добавления разметки для старых версий Internet Explorer).</target>
        </trans-unit>
        <trans-unit id="96f6d75bb30d1173e2c525418ea52194c03b8e48" translate="yes" xml:space="preserve">
          <source>Pug fully integrates with &lt;a href=&quot;https://expressjs.com/&quot;&gt;Express&lt;/a&gt;, a popular Node.js web framework, as a supported view engine. Check out Express&amp;rsquo;s excellent &lt;a href=&quot;https://expressjs.com/en/guide/using-template-engines.html&quot;&gt;guide&lt;/a&gt; for how to integrate Pug with Express.</source>
          <target state="translated">Pug полностью интегрируется с &lt;a href=&quot;https://expressjs.com/&quot;&gt;Express&lt;/a&gt; , популярным веб-фреймворком Node.js, в качестве поддерживаемого механизма просмотра. Ознакомьтесь с отличным &lt;a href=&quot;https://expressjs.com/en/guide/using-template-engines.html&quot;&gt;руководством&lt;/a&gt; Express о том, как интегрировать Pug с Express.</target>
        </trans-unit>
        <trans-unit id="25e0635e1cf108146ac486e1bf4b73994cf4356a" translate="yes" xml:space="preserve">
          <source>Pug is available via &lt;a href=&quot;https://www.npmjs.com/&quot;&gt;npm&lt;/a&gt;:</source>
          <target state="translated">Мопс доступен через &lt;a href=&quot;https://www.npmjs.com/&quot;&gt;npm&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="27e32443595d449c5ad15a2417a69d3048055959" translate="yes" xml:space="preserve">
          <source>Pug is smart enough to figure out where the expression ends, so you can even include &lt;code&gt;}&lt;/code&gt; without escaping.</source>
          <target state="translated">Мопс достаточно умен, чтобы определить, где заканчивается выражение, поэтому вы даже можете включить &lt;code&gt;}&lt;/code&gt; без экранирования.</target>
        </trans-unit>
        <trans-unit id="e8aab2012b4538eb272bbb5627ee78a82002968c" translate="yes" xml:space="preserve">
          <source>Pug provides four ways of getting &lt;em&gt;plain text&lt;/em&gt; &amp;mdash; that is, any code or text content that should go, mostly unprocessed, directly into the rendered HTML. They are useful in different situations.</source>
          <target state="translated">Pug предоставляет четыре способа получить &lt;em&gt;простой текст&lt;/em&gt; - то есть любой код или текстовое содержимое, которое должно идти, в основном необработанное, непосредственно в обработанный HTML. Они пригодятся в разных ситуациях.</target>
        </trans-unit>
        <trans-unit id="417b41711044e6b76149811545128eb7215bc4f5" translate="yes" xml:space="preserve">
          <source>Pug provides operators for a variety of your different interpolative needs.</source>
          <target state="translated">Pug предоставляет операторов для различных интерполяционных нужд.</target>
        </trans-unit>
        <trans-unit id="d1add75acfaae3a1043e21bd0159761bee924220" translate="yes" xml:space="preserve">
          <source>Pug removes &lt;em&gt;indentation&lt;/em&gt;, and all whitespace &lt;em&gt;between elements&lt;/em&gt;.</source>
          <target state="translated">Мопс удаляет &lt;em&gt;отступы&lt;/em&gt; и все пробелы &lt;em&gt;между элементами&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="fb07efa68271f0e8e536659d6fed4bd0dcd2f917" translate="yes" xml:space="preserve">
          <source>Pug supports template inheritance. Template inheritance works via the &lt;code&gt;block&lt;/code&gt; and &lt;code&gt;extends&lt;/code&gt; keywords.</source>
          <target state="translated">Мопс поддерживает наследование шаблонов. Наследование шаблона работает через &lt;code&gt;block&lt;/code&gt; и &lt;code&gt;extends&lt;/code&gt; ключевые слова.</target>
        </trans-unit>
        <trans-unit id="5b6e84508c0efb2aa91d1d6492f6e3a3bd544b22" translate="yes" xml:space="preserve">
          <source>Pug supports two primary methods of iteration: &lt;code&gt;each&lt;/code&gt; and &lt;code&gt;while&lt;/code&gt;.</source>
          <target state="translated">Pug поддерживает два основных метода итерации: &lt;code&gt;each&lt;/code&gt; и &lt;code&gt;while&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="514fb4414c6ab52988e927d0b08153dbe31073a0" translate="yes" xml:space="preserve">
          <source>Pug v2 allows customization of the compilation process through plugins, and these exported properties are now removed.</source>
          <target state="translated">Pug v2 позволяет настроить процесс компиляции через плагины,и эти экспортируемые свойства теперь удалены.</target>
        </trans-unit>
        <trans-unit id="7d583b7ca376c1d74eb4ab81fd00ba54caa6b654" translate="yes" xml:space="preserve">
          <source>Pug&amp;rsquo;s first-class conditional syntax allows for optional parentheses.</source>
          <target state="translated">Первоклассный условный синтаксис Pug позволяет использовать необязательные скобки.</target>
        </trans-unit>
        <trans-unit id="a36653592f45d272975b6725219e1aa060ef32ac" translate="yes" xml:space="preserve">
          <source>Pug&amp;rsquo;s first-class iteration syntax makes it easier to iterate over arrays and objects in a template:</source>
          <target state="translated">Первоклассный синтаксис итерации Pug упрощает итерацию по массивам и объектам в шаблоне:</target>
        </trans-unit>
        <trans-unit id="086f8c88b013621c8270a242ba9d9edf637a7ef7" translate="yes" xml:space="preserve">
          <source>Pug&amp;rsquo;s template inheritance is a powerful feature that allows you to split complex page template structures into smaller, simpler files. However, if you chain many, many templates together, you can make things a lot more complicated for yourself.</source>
          <target state="translated">Наследование шаблонов Pug - это мощная функция, которая позволяет разбивать сложные структуры шаблонов страниц на более мелкие и простые файлы. Однако, если вы объедините множество шаблонов вместе, вы можете значительно усложнить себе задачу.</target>
        </trans-unit>
        <trans-unit id="d0428e68d161ad228e56e081d7d7760d0880e7a9" translate="yes" xml:space="preserve">
          <source>Quoted Attributes</source>
          <target state="translated">Цитируемые атрибуты</target>
        </trans-unit>
        <trans-unit id="b0c0414252fb4b3219feca19f06d1b08c72cbc76" translate="yes" xml:space="preserve">
          <source>Recommended Solutions</source>
          <target state="translated">Рекомендуемые решения</target>
        </trans-unit>
        <trans-unit id="db1c784524e1b54011a95823026161f7c8517fe0" translate="yes" xml:space="preserve">
          <source>Reference</source>
          <target state="translated">Reference</target>
        </trans-unit>
        <trans-unit id="04e3203842aa8c4a50e715d5b3cd7afd6a33284c" translate="yes" xml:space="preserve">
          <source>Removed API</source>
          <target state="translated">Удаленный API</target>
        </trans-unit>
        <trans-unit id="2fe64189d7381ba494fc774e567ae27c0663d5ac" translate="yes" xml:space="preserve">
          <source>Removed Language Features</source>
          <target state="translated">Удаленные особенности языка</target>
        </trans-unit>
        <trans-unit id="a47f32628e78e90cea3d9745d67cca468f7d000d" translate="yes" xml:space="preserve">
          <source>Rendered Whitespace</source>
          <target state="translated">Рендер Уайтспейс</target>
        </trans-unit>
        <trans-unit id="3c2cdf6104c8f21cf404f02b271b685b9f8bf092" translate="yes" xml:space="preserve">
          <source>Rest Arguments</source>
          <target state="translated">Отдых Аргументы</target>
        </trans-unit>
        <trans-unit id="3b4b5044382e12c6aa60a8a03603546c4db5ee0e" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;#pugcompilesource-options&quot;&gt;compileClient&lt;/a&gt;&lt;/code&gt;, except that this method returns an object of the form:</source>
          <target state="translated">То же, что и &lt;code&gt;&lt;a href=&quot;#pugcompilesource-options&quot;&gt;compileClient&lt;/a&gt;&lt;/code&gt; , за исключением того, что этот метод возвращает объект формы:</target>
        </trans-unit>
        <trans-unit id="4258513cfd50ef5bf79853489972b29d38684465" translate="yes" xml:space="preserve">
          <source>See the whitespace section in the &lt;a href=&quot;plain-text#whitespace-control&quot;&gt;Plain Text&lt;/a&gt; page for more discussion on this topic.</source>
          <target state="translated">См. Раздел &amp;laquo;Пробелы&amp;raquo; на странице &amp;laquo; &lt;a href=&quot;plain-text#whitespace-control&quot;&gt;Обычный текст&amp;raquo;&lt;/a&gt; для более подробного обсуждения этой темы.</target>
        </trans-unit>
        <trans-unit id="091a6847e80f8f6e58ab446255013d6e21fc3d12" translate="yes" xml:space="preserve">
          <source>Self-Closing Tags</source>
          <target state="translated">Самозакрывающиеся метки</target>
        </trans-unit>
        <trans-unit id="11eb3e6deb02bf7bec259f7c90806eb9a6699879" translate="yes" xml:space="preserve">
          <source>Simply remove &lt;code&gt;-&lt;/code&gt; and your code should work again.</source>
          <target state="translated">Просто удалите &lt;code&gt;-&lt;/code&gt; и ваш код снова заработает.</target>
        </trans-unit>
        <trans-unit id="2d9124a8a73355087d832990edf86e54b9130dee" translate="yes" xml:space="preserve">
          <source>Simply write the attribute in JavaScript:</source>
          <target state="translated">Просто напишите атрибут в JavaScript:</target>
        </trans-unit>
        <trans-unit id="2058296013babfa432245798dd03add34a24bb32" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;div&lt;/code&gt;'s are such a common choice of tag, it is the default if you omit the tag name:</source>
          <target state="translated">Поскольку теги &lt;code&gt;div&lt;/code&gt; являются очень распространенным выбором, он используется по умолчанию, если вы опускаете имя тега:</target>
        </trans-unit>
        <trans-unit id="04c8dd7f05babb8f1c1580592f4b0fa86ca08b86" translate="yes" xml:space="preserve">
          <source>So&amp;hellip;Pug drops the whitespace between tags, but keeps the whitespace inside them. The value here is that it gives you full control over whether tags and/or plain text should touch. It even lets you place tags in the middle of words.</source>
          <target state="translated">Итак&amp;hellip; Паг удаляет пробелы между тегами, но сохраняет пробелы внутри них. Значение здесь в том, что он дает вам полный контроль над тем, должны ли касаться теги и / или обычный текст. Он даже позволяет размещать теги в середине слов.</target>
        </trans-unit>
        <trans-unit id="3d4665142d2dbba94807b6f60252f2278fa98594" translate="yes" xml:space="preserve">
          <source>So, the closing tag of an HTML element will touch the opening tag of the next. This is generally not a problem for block-level elements like paragraphs, because they will still render as separate paragraphs in the web browser (unless you have changed their CSS &lt;code&gt;display&lt;/code&gt; property). See the methods described below, however, for when you do need to insert space between elements.</source>
          <target state="translated">Таким образом, закрывающий тег HTML-элемента коснется открывающего тега следующего. Обычно это не проблема для элементов блочного уровня, таких как абзацы, потому что они по-прежнему будут отображаться как отдельные абзацы в веб-браузере (если вы не изменили их свойство &lt;code&gt;display&lt;/code&gt; CSS ). См. Описанные ниже методы, чтобы узнать, когда вам нужно вставить пробел между элементами.</target>
        </trans-unit>
        <trans-unit id="b52fc92b6d0fdb74c6bacb6246b9a9c1f880a0ae" translate="yes" xml:space="preserve">
          <source>Specifically, when &lt;code&gt;process.env.NODE_ENV&lt;/code&gt; is set to &lt;code&gt;'production'&lt;/code&gt;, and Pug is used with Express, the &lt;code&gt;&lt;a href=&quot;reference#options&quot;&gt;compileDebug&lt;/a&gt;&lt;/code&gt; option is &lt;code&gt;false&lt;/code&gt; by default, while the &lt;code&gt;&lt;a href=&quot;reference#options&quot;&gt;cache&lt;/a&gt;&lt;/code&gt; option is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">В частности, когда для &lt;code&gt;process.env.NODE_ENV&lt;/code&gt; установлено значение &lt;code&gt;'production'&lt;/code&gt; , а Pug используется с Express, параметр &lt;code&gt;&lt;a href=&quot;reference#options&quot;&gt;compileDebug&lt;/a&gt;&lt;/code&gt; по умолчанию имеет значение &lt;code&gt;false&lt;/code&gt; , а параметр &lt;code&gt;&lt;a href=&quot;reference#options&quot;&gt;cache&lt;/a&gt;&lt;/code&gt; - &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2b54828d8ab709886b896ceb7c0e6322fc8783b9" translate="yes" xml:space="preserve">
          <source>String Interpolation, Escaped</source>
          <target state="translated">Интерполяция струн,сбежавший</target>
        </trans-unit>
        <trans-unit id="0400597088b184d0aa42f7547cf26fb672874208" translate="yes" xml:space="preserve">
          <source>String Interpolation, Unescaped</source>
          <target state="translated">Строковая Интерполяция,Неизвестно.</target>
        </trans-unit>
        <trans-unit id="37505043ddb8e62c5892686d2654e7d331e24770" translate="yes" xml:space="preserve">
          <source>Style Attributes</source>
          <target state="translated">Атрибуты стиля</target>
        </trans-unit>
        <trans-unit id="6709b386e62b6c7e9100b2a3d54454cef7613d5f" translate="yes" xml:space="preserve">
          <source>Suppose you have default scripts in a &lt;code&gt;head&lt;/code&gt; block that you wish to use on &lt;em&gt;every&lt;/em&gt; page. You might do this:</source>
          <target state="translated">Предположим, у вас есть сценарии по умолчанию в &lt;code&gt;head&lt;/code&gt; блоке, которые вы хотите использовать на &lt;em&gt;каждой&lt;/em&gt; странице. Вы можете сделать это:</target>
        </trans-unit>
        <trans-unit id="ee28e36ab822d4670415e0b8860994ec31c24db3" translate="yes" xml:space="preserve">
          <source>Tag Interpolation</source>
          <target state="translated">Интерполяция меток</target>
        </trans-unit>
        <trans-unit id="5f1dcfaa50981027a133d5ae2bcfa11f0afc0144" translate="yes" xml:space="preserve">
          <source>Tag attributes look similar to HTML (with optional commas), but their values are just regular JavaScript.</source>
          <target state="translated">Атрибуты тегов похожи на HTML (с необязательными запятыми),но их значения являются обычным JavaScript.</target>
        </trans-unit>
        <trans-unit id="848eed0fbd5429f556b2982dec3ea87136e33e44" translate="yes" xml:space="preserve">
          <source>Tags</source>
          <target state="translated">Tags</target>
        </trans-unit>
        <trans-unit id="e3f5b07ef6fcbd5fb31ba626da5394551b109671" translate="yes" xml:space="preserve">
          <source>Tags such as &lt;code&gt;img&lt;/code&gt;, &lt;code&gt;meta&lt;/code&gt;, and &lt;code&gt;link&lt;/code&gt; are automatically self-closing (unless you use the XML doctype).</source>
          <target state="translated">Такие теги, как &lt;code&gt;img&lt;/code&gt; , &lt;code&gt;meta&lt;/code&gt; и &lt;code&gt;link&lt;/code&gt; , автоматически закрываются (если вы не используете XML doctype).</target>
        </trans-unit>
        <trans-unit id="d6b6bb3a1a939adefc8ad08e7880baf39f4c9d7b" translate="yes" xml:space="preserve">
          <source>Template Inheritance</source>
          <target state="translated">Наследование шаблонов</target>
        </trans-unit>
        <trans-unit id="2eca59143f9a4b8c46099f1a261ec7cd63e991b5" translate="yes" xml:space="preserve">
          <source>Templates pre-compiled on the server do not have this limitation.</source>
          <target state="translated">Шаблоны,предварительно скомпилированные на сервере,не имеют этого ограничения.</target>
        </trans-unit>
        <trans-unit id="a13dc4f48dd8b9cecba2d69d488fb9ee09689086" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;case&lt;/code&gt; statement is a shorthand for JavaScript&amp;rsquo;s &lt;code&gt;switch&lt;/code&gt; statement. It takes the following form:</source>
          <target state="translated">Оператор &lt;code&gt;case&lt;/code&gt; является сокращением оператора &lt;code&gt;switch&lt;/code&gt; в JavaScript . Он имеет следующий вид:</target>
        </trans-unit>
        <trans-unit id="676d31408d63b69964f34e2ecf837472ec1ee700" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;class&lt;/code&gt; attribute can be a string, like any normal attribute; but it can also be an array of class names, which is handy when generated from JavaScript.</source>
          <target state="translated">&lt;code&gt;class&lt;/code&gt; атрибута может быть строка, как любой нормальный атрибут; но это также может быть массив имен классов, что удобно при генерации из JavaScript.</target>
        </trans-unit>
        <trans-unit id="f0af46b97d17da16cbad5ba8a7e2346e8dccdf2c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;client&lt;/code&gt; option was used for client function compilation. It was deprecated in favor of the &lt;code&gt;&lt;a href=&quot;reference#pugcompileclientsource-options&quot;&gt;compileClient&lt;/a&gt;&lt;/code&gt; function in 2013 year, and its use has been warned against since then.</source>
          <target state="translated">Опция &lt;code&gt;client&lt;/code&gt; использовалась для компиляции клиентской функции. Он был объявлен устаревшим в пользу функции &lt;code&gt;&lt;a href=&quot;reference#pugcompileclientsource-options&quot;&gt;compileClient&lt;/a&gt;&lt;/code&gt; в 2013 году, и с тех пор его использование было предупреждено.</target>
        </trans-unit>
        <trans-unit id="b1a482d70b3f2656377959486db028f6ec217cf5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;style&lt;/code&gt; attribute can be a string, like any normal attribute; but it can also be an object, which is handy when styles are generated by JavaScript.</source>
          <target state="translated">&lt;code&gt;style&lt;/code&gt; атрибута может быть строка, как любой нормальный атрибут; но это также может быть объект, что удобно, когда стили создаются с помощью JavaScript.</target>
        </trans-unit>
        <trans-unit id="1de42e57648db3832c948b9cff088bdbc7730e9b" translate="yes" xml:space="preserve">
          <source>The Pug template to compile</source>
          <target state="translated">Шаблон Pug для компиляции</target>
        </trans-unit>
        <trans-unit id="89338fd43ca16105840daee55c0f7c0b3f1e1bbe" translate="yes" xml:space="preserve">
          <source>The Pug v2 equivalent of classes are now part of the &lt;code&gt;&lt;a href=&quot;https://www.npmjs.com/package/pug-code-gen&quot;&gt;pug-code-gen&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://www.npmjs.com/package/pug-lexer&quot;&gt;pug-lexer&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;https://www.npmjs.com/package/pug-parser&quot;&gt;pug-parser&lt;/a&gt;&lt;/code&gt; packages, with various incompatible changes.</source>
          <target state="translated">Эквивалент классов Pug v2 теперь является частью пакетов &lt;code&gt;&lt;a href=&quot;https://www.npmjs.com/package/pug-code-gen&quot;&gt;pug-code-gen&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;https://www.npmjs.com/package/pug-lexer&quot;&gt;pug-lexer&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;https://www.npmjs.com/package/pug-parser&quot;&gt;pug-parser&lt;/a&gt;&lt;/code&gt; с различными несовместимыми изменениями.</target>
        </trans-unit>
        <trans-unit id="114af88c332979d7fe5a8734d5a7ff8596b16576" translate="yes" xml:space="preserve">
          <source>The above example uses an object literal. But you can also use a variable whose value is an object, too. (See also: &lt;a href=&quot;mixins#mixin-attributes&quot;&gt;Mixin Attributes&lt;/a&gt;).</source>
          <target state="translated">В приведенном выше примере используется литерал объекта. Но вы также можете использовать переменную, значение которой также является объектом. (См. Также: &lt;a href=&quot;mixins#mixin-attributes&quot;&gt;Атрибуты Mixin&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="d926323438fd0b762124e78c258e1739bd057b9d" translate="yes" xml:space="preserve">
          <source>The above solution works perfectly well, but is admittedly perhaps a little dangerous: many code editors by default will &lt;em&gt;remove&lt;/em&gt; trailing whitespace on save. You and all your contributors may have to configure your editors to prevent automatic trailing whitespace removal.</source>
          <target state="translated">Вышеупомянутое решение работает отлично, но, по общему признанию, возможно, немного опасно: многие редакторы кода по умолчанию &lt;em&gt;удаляют&lt;/em&gt; конечные пробелы при сохранении. Вам и всем вашим участникам, возможно, придется настроить своих редакторов, чтобы предотвратить автоматическое удаление конечных пробелов.</target>
        </trans-unit>
        <trans-unit id="0ad0416e0326affabd3facb6977f681cf1b9a610" translate="yes" xml:space="preserve">
          <source>The compiled function can be re-used, and called with different sets of data.</source>
          <target state="translated">Скомпилированная функция может быть использована повторно и вызвана с различными наборами данных.</target>
        </trans-unit>
        <trans-unit id="2d236d50802b5026d786ce0722f3d0de5b7747ae" translate="yes" xml:space="preserve">
          <source>The difference, however, is a fall through in JavaScript happens whenever a &lt;code&gt;break&lt;/code&gt; statement is not explicitly included; in Pug, it only happens when a block is completely missing.</source>
          <target state="translated">Разница, однако, заключается в том, что в JavaScript происходит провал, когда оператор &lt;code&gt;break&lt;/code&gt; явно не включен; в Pug это происходит только тогда, когда блок полностью отсутствует.</target>
        </trans-unit>
        <trans-unit id="47b250830352f7adb0e93bba096477bf248f6702" translate="yes" xml:space="preserve">
          <source>The easiest way to add plain text is &lt;em&gt;inline&lt;/em&gt;. The first term on the line is the tag itself. Everything after the tag and one space will be the text contents of that tag. This is most useful when the plain text content is short (or if you don&amp;rsquo;t mind lines running long).</source>
          <target state="translated">Самый простой способ добавить простой текст - &lt;em&gt;встроенный&lt;/em&gt; . Первый член в строке - это сам тег. Все, что находится после тега и один пробел, будет текстовым содержимым этого тега. Это наиболее полезно, когда текстовое содержимое короткое (или если вы не против длинных строк).</target>
        </trans-unit>
        <trans-unit id="b80bc54149a93518d53879c81d1750cffec54285" translate="yes" xml:space="preserve">
          <source>The filters are applied in reverse order. The text is first passed to the last filter; then, the result is passed to the second last filter, and so on.</source>
          <target state="translated">Фильтры применяются в обратном порядке.Сначала текст передается последнему фильтру,затем результат передается второму последнему фильтру и так далее.</target>
        </trans-unit>
        <trans-unit id="a39fd510c7eed1a7c236a43dd6ae43aa5ce3ad50" translate="yes" xml:space="preserve">
          <source>The general rendering process of Pug is simple. &lt;code&gt;&lt;a href=&quot;api/reference#pugcompilesource-options&quot;&gt;pug.compile()&lt;/a&gt;&lt;/code&gt; will compile the Pug source code into a JavaScript function that takes a data object (called &amp;ldquo;&lt;code&gt;locals&lt;/code&gt;&amp;rdquo;) as an argument. Call that resultant function with your data, and &lt;em&gt;voil&amp;agrave;!&lt;/em&gt;, it will return a string of HTML rendered with your data.</source>
          <target state="translated">Общий процесс рендеринга Pug прост. &lt;code&gt;&lt;a href=&quot;api/reference#pugcompilesource-options&quot;&gt;pug.compile()&lt;/a&gt;&lt;/code&gt; скомпилирует исходный код Pug в функцию JavaScript, которая принимает в качестве аргумента объект данных (называемый &amp;laquo; &lt;code&gt;locals&lt;/code&gt; &amp;raquo;). Вызовите эту результирующую функцию с вашими данными и &lt;em&gt;вуаля! &lt;/em&gt;, он вернет строку HTML с вашими данными.</target>
        </trans-unit>
        <trans-unit id="1e0670b91d5347c753bc0b3f2796253e05ed9c56" translate="yes" xml:space="preserve">
          <source>The name of the file being compiled. Used in exceptions, and required for relative &lt;code&gt;include&lt;/code&gt;\s and &lt;code&gt;extend&lt;/code&gt;\s. Defaults to &lt;code&gt;'Pug'&lt;/code&gt;.</source>
          <target state="translated">Имя компилируемого файла. Используется в исключениях и требуется для относительных &lt;code&gt;include&lt;/code&gt; \ s и &lt;code&gt;extend&lt;/code&gt; \ s. По умолчанию &lt;code&gt;'Pug'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8933445353959ec17d86a623f17147cec5b5e9e6" translate="yes" xml:space="preserve">
          <source>The name of the template function. Only applies to &lt;code&gt;compileClient&lt;/code&gt; functions. Defaults to &lt;code&gt;'template'&lt;/code&gt;.</source>
          <target state="translated">Имя функции шаблона. Применяется только к функциям &lt;code&gt;compileClient&lt;/code&gt; . По умолчанию &lt;code&gt;'template'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d2c0811713407f4edcba814c094e349ed5c62496" translate="yes" xml:space="preserve">
          <source>The object or array to iterate over is just plain JavaScript. So, it can be a variable, or the result of a function call, or almost anything else.</source>
          <target state="translated">Объект или массив для итерации-это простой JavaScript.Таким образом,это может быть переменная,или результат вызова функции,или почти что-нибудь еще.</target>
        </trans-unit>
        <trans-unit id="d5afd520a9f5b27aebd1de05d406506953cb71db" translate="yes" xml:space="preserve">
          <source>The path to a Pug file</source>
          <target state="translated">Путь к файлу Pug</target>
        </trans-unit>
        <trans-unit id="6952a62a4b489d9ef8f35bd3e630da2b38e0ebbd" translate="yes" xml:space="preserve">
          <source>The path to the Pug file to render</source>
          <target state="translated">Путь к файлу Pug для рендеринга</target>
        </trans-unit>
        <trans-unit id="24a01ebd8688d0618448a9365a42e9d87280a83b" translate="yes" xml:space="preserve">
          <source>The resulting HTML string</source>
          <target state="translated">Полученная строка HTML</target>
        </trans-unit>
        <trans-unit id="02426fba9a81dd96d04f24759c9c72a19474fb6c" translate="yes" xml:space="preserve">
          <source>The root directory of all absolute inclusion.</source>
          <target state="translated">Корневая директория всех абсолютных включений.</target>
        </trans-unit>
        <trans-unit id="dfb26fd04379cfdbff3d4df3715d709b9403b126" translate="yes" xml:space="preserve">
          <source>The source Pug template to compile</source>
          <target state="translated">Исходный шаблон Pug для компиляции</target>
        </trans-unit>
        <trans-unit id="4a331d704aac5089f5e9f54a4d22467561e060f5" translate="yes" xml:space="preserve">
          <source>The source Pug template to render</source>
          <target state="translated">Исходный шаблон Pug для рендеринга</target>
        </trans-unit>
        <trans-unit id="f2a7b74930a67c4129b810ec29d0fa7805af3039" translate="yes" xml:space="preserve">
          <source>The syntax &lt;code&gt;+link(class=&quot;btn&quot;)&lt;/code&gt; is also valid and equivalent to &lt;code&gt;+link()(class=&quot;btn&quot;)&lt;/code&gt;, since Pug tries to detect if parentheses&amp;rsquo; contents are attributes or arguments. Nevertheless, we encourage you to use the second syntax, as you pass explicitly no arguments and you ensure the first parenthesis is the arguments list.</source>
          <target state="translated">Синтаксис &lt;code&gt;+link(class=&quot;btn&quot;)&lt;/code&gt; также действителен и эквивалентен &lt;code&gt;+link()(class=&quot;btn&quot;)&lt;/code&gt; , поскольку Pug пытается определить, является ли содержимое круглых скобок атрибутами или аргументами. Тем не менее, мы рекомендуем вам использовать второй синтаксис, поскольку вы явно не передаете аргументов и убедитесь, что первая скобка - это список аргументов.</target>
        </trans-unit>
        <trans-unit id="27b9ab5ff54d9062f6de36675fa17bf784a880f3" translate="yes" xml:space="preserve">
          <source>The tag interpolation syntax is especially useful for inline tags, where whitespace before and after the tag is significant.</source>
          <target state="translated">Синтаксис интерполяции тегов особенно полезен для встроенных тегов,где пробелы до и после тега значительны.</target>
        </trans-unit>
        <trans-unit id="b417c9ea9973497f4deeac6d7f7f17069913641d" translate="yes" xml:space="preserve">
          <source>The trade-off is that it &lt;em&gt;requires&lt;/em&gt; you to think about and take control over whether tags and text touch.</source>
          <target state="translated">Компромисс в том , что он &lt;em&gt;требует&lt;/em&gt; , чтобы Вы думали о и взять контроль над ли тегами и текстом прикосновения.</target>
        </trans-unit>
        <trans-unit id="a9a548a3553082853b4a9507559f92ce4958807a" translate="yes" xml:space="preserve">
          <source>Then, we compile the Pug file into a function string.</source>
          <target state="translated">Затем мы компилируем файл Pug в строку функций.</target>
        </trans-unit>
        <trans-unit id="6f8c5955e24056929524ca5f54b8163f8342941b" translate="yes" xml:space="preserve">
          <source>There are shortcuts for commonly used doctypes:</source>
          <target state="translated">Существуют ярлыки для часто используемых докторов:</target>
        </trans-unit>
        <trans-unit id="fd17947b5da34deb61832aa2b9d010eeec9468b6" translate="yes" xml:space="preserve">
          <source>There should be no space between the tag and the dot. Plain text contents of the tag must be indented one level:</source>
          <target state="translated">Между меткой и точкой не должно быть пробела.Обычное текстовое содержимое тега должно быть снабжено отступом в один уровень:</target>
        </trans-unit>
        <trans-unit id="e2cdc8b5db7eb3c8e9d0a38fd0a12a49c1935488" translate="yes" xml:space="preserve">
          <source>These are only for commenting on the Pug code itself, and &lt;em&gt;do not&lt;/em&gt; appear in the rendered HTML.</source>
          <target state="translated">Они предназначены только для комментирования самого кода Pug и &lt;em&gt;не&lt;/em&gt; отображаются в обработанном HTML.</target>
        </trans-unit>
        <trans-unit id="207b62be5649ddea40d449f57994780c725e0cb7" translate="yes" xml:space="preserve">
          <source>These exported properties and compilation options have been removed. In your application, make sure you are not using these APIs.</source>
          <target state="translated">Эти экспортированные свойства и опции компиляции были удалены.В вашем приложении убедитесь,что вы не используете эти API.</target>
        </trans-unit>
        <trans-unit id="4b9f8c7b1c4b9237fdba7c1ffb34cbfccb1da026" translate="yes" xml:space="preserve">
          <source>These options were used in conjunction with the removed &lt;a href=&quot;#compiler-lexer-parser&quot;&gt;&lt;code&gt;Compiler&lt;/code&gt;, &lt;code&gt;Lexer&lt;/code&gt;, and &lt;code&gt;Parser&lt;/code&gt; classes&lt;/a&gt;.</source>
          <target state="translated">Эти параметры использовались вместе с удаленными &lt;a href=&quot;#compiler-lexer-parser&quot;&gt;классами &lt;/a&gt; &lt;code&gt;Compiler&lt;/code&gt; , &lt;code&gt;Lexer&lt;/code&gt; и &lt;code&gt;Parser&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0f14e948226caf90553eb0e054f2fdd753d99e31" translate="yes" xml:space="preserve">
          <source>This article details how you can convert your application to Pug v2 from Jade.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0379e3a5e0f011bcb7d7e67f2f03fa15f6e33c45" translate="yes" xml:space="preserve">
          <source>This article details how you can convert your application to the latest version of Pug.</source>
          <target state="translated">В этой статье подробно рассказывается о том,как вы можете конвертировать ваше приложение в последнюю версию Pug.</target>
        </trans-unit>
        <trans-unit id="d477751cc0fed160fb56b2abda33d04724c51a61" translate="yes" xml:space="preserve">
          <source>This can be any valid Javascript expression, so you can do whatever feels good.</source>
          <target state="translated">Это может быть любое действительное выражение на Javascript,так что вы можете делать все,что вам нравится.</target>
        </trans-unit>
        <trans-unit id="3c4b1818f921a3921e2e5cb6350234ca7cfba99c" translate="yes" xml:space="preserve">
          <source>This includes &lt;a href=&quot;code#unbuffered-code&quot;&gt;unbuffered code&lt;/a&gt;, which can also contain markup. If you need to define variables for use in a child template, you can do so a few different ways:</source>
          <target state="translated">Это включает &lt;a href=&quot;code#unbuffered-code&quot;&gt;небуферизованный код&lt;/a&gt; , который также может содержать разметку. Если вам нужно определить переменные для использования в дочернем шаблоне, вы можете сделать это несколькими способами:</target>
        </trans-unit>
        <trans-unit id="1a6697d6a3711af6ffd345a22bbc2890c2cc2d99" translate="yes" xml:space="preserve">
          <source>This object has the same semantics as the &lt;a href=&quot;#options&quot;&gt;&lt;code&gt;filters&lt;/code&gt; option&lt;/a&gt;, but applies globally to all Pug compilation. When a filter is present in both &lt;code&gt;pug.filters&lt;/code&gt; and &lt;code&gt;options.filters&lt;/code&gt;, the &lt;code&gt;filters&lt;/code&gt; option takes precedence.</source>
          <target state="translated">Этот объект имеет ту же семантику, что и &lt;a href=&quot;#options&quot;&gt;параметр &lt;/a&gt; &lt;code&gt;filters&lt;/code&gt; , но применяется глобально ко всем компиляциям Pug. Если фильтр присутствует как в &lt;code&gt;pug.filters&lt;/code&gt; ,так и в &lt;code&gt;options.filters&lt;/code&gt; , опция &lt;code&gt;filters&lt;/code&gt; имеет приоритет.</target>
        </trans-unit>
        <trans-unit id="879a8d23a2199070fa8a6b3c4af10724695c1fc5" translate="yes" xml:space="preserve">
          <source>This page details how to render Pug using the JavaScript API.</source>
          <target state="translated">На этой странице подробно описано,как рендерить Pug с помощью JavaScript API.</target>
        </trans-unit>
        <trans-unit id="9c8cdd5360bdac30605f8ae4019939f1f1e18d25" translate="yes" xml:space="preserve">
          <source>This property has been deprecated in favor of the &lt;a href=&quot;#options&quot;&gt;&lt;code&gt;filters&lt;/code&gt; option&lt;/a&gt;.</source>
          <target state="translated">Это свойство является устаревшим в пользу &lt;a href=&quot;#options&quot;&gt; &lt;code&gt;filters&lt;/code&gt; варианта&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="219280166118249abe7333357fbeca1ccb5f0e10" translate="yes" xml:space="preserve">
          <source>This syntax is &lt;strong&gt;no longer supported.&lt;/strong&gt; Alternatives are found below. (Check our &lt;a href=&quot;../api/migration-v2&quot;&gt;migration guide&lt;/a&gt; for more information on other incompatibilities between Pug v2 and previous versions.)</source>
          <target state="translated">Этот синтаксис &lt;strong&gt;больше не поддерживается. &lt;/strong&gt;Альтернативы можно найти ниже. (Обратитесь к нашему &lt;a href=&quot;../api/migration-v2&quot;&gt;руководству&lt;/a&gt; по миграции для получения дополнительной информации о других несовместимости между Pug v2 и предыдущими версиями.)</target>
        </trans-unit>
        <trans-unit id="9ae0352e3f630d84888730fce500637a546dd366" translate="yes" xml:space="preserve">
          <source>To extend this layout, create a new file and use the &lt;code&gt;extends&lt;/code&gt; directive with a path to the parent template. (If no file extension is given, &lt;code&gt;.pug&lt;/code&gt; is automatically appended to the file name.) Then, define one or more blocks to override the parent block content.</source>
          <target state="translated">Чтобы расширить этот макет, создайте новый файл и используйте директиву &lt;code&gt;extends&lt;/code&gt; с путем к родительскому шаблону. (Если расширение файла не задано, к имени файла автоматически добавляется &lt;code&gt;.pug&lt;/code&gt; .) Затем определите один или несколько блоков для переопределения содержимого родительского блока.</target>
        </trans-unit>
        <trans-unit id="692a707ce60ee9b7624c3513175ed4df1865166c" translate="yes" xml:space="preserve">
          <source>To override the defaults for &lt;code&gt;compileDebug&lt;/code&gt; and &lt;code&gt;cache&lt;/code&gt;, you can set the respective property in &lt;code&gt;app.locals&lt;/code&gt; or &lt;code&gt;res.locals&lt;/code&gt; objects to &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;. The &lt;code&gt;cache&lt;/code&gt; option can also be overriden through Express&amp;rsquo;s &lt;code&gt;app.disable&lt;/code&gt;/&lt;code&gt;enable('view cache')&lt;/code&gt;.</source>
          <target state="translated">Чтобы переопределить значения по умолчанию для &lt;code&gt;compileDebug&lt;/code&gt; и &lt;code&gt;cache&lt;/code&gt; , вы можете установить для соответствующего свойства в &lt;code&gt;app.locals&lt;/code&gt; или &lt;code&gt;res.locals&lt;/code&gt; значение &lt;code&gt;true&lt;/code&gt; или &lt;code&gt;false&lt;/code&gt; . Параметр &lt;code&gt;cache&lt;/code&gt; также можно переопределить с помощью параметра &lt;code&gt;app.disable&lt;/code&gt; / &lt;code&gt;enable('view cache')&lt;/code&gt; Express (&amp;laquo;просмотр кеша&amp;raquo;) .</target>
        </trans-unit>
        <trans-unit id="35a7cef10259c8b252f2b8a54ff4edf082492ece" translate="yes" xml:space="preserve">
          <source>To pass options to the filter, add them inside parentheses after the filter name (just as you would do with &lt;a href=&quot;attributes&quot;&gt;tag attributes&lt;/a&gt;): &lt;code&gt;:less(ieCompat=false)&lt;/code&gt;.</source>
          <target state="translated">Чтобы передать параметры фильтру, добавьте их в круглые скобки после имени фильтра (как если бы вы делали это с &lt;a href=&quot;attributes&quot;&gt;атрибутами тега&lt;/a&gt; ) &lt;code&gt;:less(ieCompat=false)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="de83d790d1e570130d9c2727f8aec72a7c253fb0" translate="yes" xml:space="preserve">
          <source>To save space, Pug provides an inline syntax for nested tags.</source>
          <target state="translated">Чтобы сэкономить место,Pug предоставляет встроенный синтаксис для вложенных тегов.</target>
        </trans-unit>
        <trans-unit id="bb78a591ac3c57f50ae492500df37a719b1d4724" translate="yes" xml:space="preserve">
          <source>Unbuffered Code</source>
          <target state="translated">Небуферизованный код</target>
        </trans-unit>
        <trans-unit id="1e4587dd8a9ab72eb784332d749a41f9a6e1bb12" translate="yes" xml:space="preserve">
          <source>Unbuffered code starts with &lt;code&gt;-&lt;/code&gt;. It does not directly add anything to the output.</source>
          <target state="translated">Небуферизованный код начинается с &lt;code&gt;-&lt;/code&gt; . Он ничего не добавляет напрямую к выводу.</target>
        </trans-unit>
        <trans-unit id="71a66268a553484ba71737c3115d577299772399" translate="yes" xml:space="preserve">
          <source>Unescaped Attributes</source>
          <target state="translated">Неопознанные атрибуты</target>
        </trans-unit>
        <trans-unit id="0fd830e78839f0a162f17a3ccc86dc8a18fa6e86" translate="yes" xml:space="preserve">
          <source>Unescaped Buffered Code</source>
          <target state="translated">Неизмененный буферизованный код</target>
        </trans-unit>
        <trans-unit id="d1024129ad908f5366f60f16e7089d1207f45e1d" translate="yes" xml:space="preserve">
          <source>Unescaped buffered code can also be written inline with attributes, and supports the full range of JavaScript expressions:</source>
          <target state="translated">Необработанный буферизованный код также может быть написан в строке с атрибутами и поддерживает весь спектр выражений JavaScript:</target>
        </trans-unit>
        <trans-unit id="baa3b641296d8e2c499c24a60968d658de5a05f3" translate="yes" xml:space="preserve">
          <source>Unescaped buffered code starts with &lt;code&gt;!=&lt;/code&gt;. It evaluates the JavaScript expression and outputs the result. Unescaped buffered code does not perform any escaping, so is unsafe for user input:</source>
          <target state="translated">Неэкранированный буферизованный код начинается с &lt;code&gt;!=&lt;/code&gt; . Он оценивает выражение JavaScript и выводит результат. Неэкранированный буферный код не выполняет никакого экранирования, поэтому небезопасен для ввода пользователем:</target>
        </trans-unit>
        <trans-unit id="bfc0caf9cd72ad63b26f50d6186e142b0905f202" translate="yes" xml:space="preserve">
          <source>Use a &lt;code&gt;self&lt;/code&gt; namespace to hold the locals. It will speed up the compilation, but instead of writing &lt;code&gt;variable&lt;/code&gt; you will have to write &lt;code&gt;self.variable&lt;/code&gt; to access a property of the locals object. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Используйте пространство имен &lt;code&gt;self&lt;/code&gt; , чтобы удерживать местных жителей. Это ускорит компиляцию, но вместо записи &lt;code&gt;variable&lt;/code&gt; вам придется написать &lt;code&gt;self.variable&lt;/code&gt; для доступа к свойству объекта locals. По умолчанию - &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e9c45563358e813f157ba81b33143542165ba84e" translate="yes" xml:space="preserve">
          <source>Warning</source>
          <target state="translated">Warning</target>
        </trans-unit>
        <trans-unit id="66f6748c2ab1834daeae77187a96b04e50949858" translate="yes" xml:space="preserve">
          <source>We dropped support for node versions prior to 10.0.0. We recommend upgrading all projects using pug to node.js 12, but we will support 10 until April 2021.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4676a654fd111d10df09d70c0e042820762622b" translate="yes" xml:space="preserve">
          <source>We removed support for interpolation in attributes since the implementation was unnecessarily complex, and the feature tended to discourage users from learning that they can just use any JavaScript value in place of attributes. Check our &lt;a href=&quot;../language/attributes#attribute-interpolation&quot;&gt;attribute documentation&lt;/a&gt; for more information on attribute syntax.</source>
          <target state="translated">Мы удалили поддержку интерполяции в атрибутах, поскольку реализация была излишне сложной, и эта функция имела тенденцию препятствовать пользователям узнавать, что они могут просто использовать любое значение JavaScript вместо атрибутов. Дополнительную информацию о синтаксисе атрибутов см. В нашей &lt;a href=&quot;../language/attributes#attribute-interpolation&quot;&gt;документации&lt;/a&gt; по атрибутам.</target>
        </trans-unit>
        <trans-unit id="569ab5952c739132b7b8b7691baa701a324e6e43" translate="yes" xml:space="preserve">
          <source>We removed the legacy syntax for calling a &lt;a href=&quot;../language/mixins&quot;&gt;mixin&lt;/a&gt; to make it easier to differentiate between declarations and calls. (All uses of the old syntax caused warnings in Jade v1.)</source>
          <target state="translated">Мы удалили устаревший синтаксис для вызова &lt;a href=&quot;../language/mixins&quot;&gt;миксина,&lt;/a&gt; чтобы упростить различие между объявлениями и вызовами. (Любое использование старого синтаксиса вызывало предупреждения в Jade v1.)</target>
        </trans-unit>
        <trans-unit id="7b9651c945b7722e109f3f7c22be6aa9d23d8c68" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;block append&lt;/code&gt; or &lt;code&gt;block prepend&lt;/code&gt;, the word &amp;ldquo;&lt;code&gt;block&lt;/code&gt;&amp;rdquo; is optional:</source>
          <target state="translated">При использовании &lt;code&gt;block append&lt;/code&gt; или добавления &lt;code&gt;block prepend&lt;/code&gt; слово &amp;laquo; &lt;code&gt;block&lt;/code&gt; &amp;raquo; необязательно:</target>
        </trans-unit>
        <trans-unit id="8e3fb6b9dddf2cf75633e30c42b159d65aafe736" translate="yes" xml:space="preserve">
          <source>Whitespace Control</source>
          <target state="translated">Контроль в Уайтспейсе</target>
        </trans-unit>
        <trans-unit id="d347d79d6817d0c21a3c74cd4b529805ca825e4a" translate="yes" xml:space="preserve">
          <source>Whitespace is removed from the beginning and end of tags, so that you have control over whether the rendered HTML elements touch or not. Whitespace control is generally handled via &lt;a href=&quot;plain-text#whitespace-control&quot;&gt;plain text&lt;/a&gt;.</source>
          <target state="translated">Пробелы удаляются в начале и в конце тегов, поэтому вы можете контролировать, соприкасаются ли отображаемые элементы HTML. Управление пробелами обычно осуществляется с помощью &lt;a href=&quot;plain-text#whitespace-control&quot;&gt;обычного текста&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e9d5c60e3f1599e9730f61080a89c6bee605149f" translate="yes" xml:space="preserve">
          <source>Whole lines are also treated as plain text when they begin with a left angle bracket (&lt;code&gt;&amp;lt;&lt;/code&gt;), which may occasionally be useful for writing literal HTML tags in places that could otherwise be inconvenient. For example, one use case is &lt;a href=&quot;comments#conditional-comments&quot;&gt;conditional comments&lt;/a&gt;. Since literal HTML tags do not get processed, they do not self-close, unlike Pug tags.</source>
          <target state="translated">Целые строки также рассматриваются как простой текст, если они начинаются с левой угловой скобки ( &lt;code&gt;&amp;lt;&lt;/code&gt; ), что иногда может быть полезно для написания буквальных тегов HTML в местах, которые в противном случае могут быть неудобными. Например, одним из вариантов использования являются &lt;a href=&quot;comments#conditional-comments&quot;&gt;условные комментарии&lt;/a&gt; . Поскольку буквальные HTML-теги не обрабатываются, они не закрываются автоматически, в отличие от тегов Pug.</target>
        </trans-unit>
        <trans-unit id="7abf639e5390f7e4b03c84d9b57e364486c51d26" translate="yes" xml:space="preserve">
          <source>You can add your own filters to Pug via the &lt;a href=&quot;../api/reference#options&quot;&gt;&lt;code&gt;filters&lt;/code&gt; option&lt;/a&gt;.</source>
          <target state="translated">Вы можете добавить свои собственные фильтры в Pug через &lt;a href=&quot;../api/reference#options&quot;&gt;опцию &lt;/a&gt; &lt;code&gt;filters&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2dfe777bc4327a752af5d63478549c14a9934925" translate="yes" xml:space="preserve">
          <source>You can also apply filters to external files, using the &lt;a href=&quot;includes#including-filtered-text&quot;&gt;include syntax&lt;/a&gt;.</source>
          <target state="translated">Вы также можете применять фильтры к внешним файлам, используя &lt;a href=&quot;includes#including-filtered-text&quot;&gt;синтаксис включения&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4a3ba54f365603eaf2665e6fc6832d002b8dec42" translate="yes" xml:space="preserve">
          <source>You can also create a dot block of plain text &lt;em&gt;after&lt;/em&gt; other tags within the parent tag.</source>
          <target state="translated">Вы также можете создать точечный блок простого текста &lt;em&gt;после&lt;/em&gt; других тегов в родительском теге.</target>
        </trans-unit>
        <trans-unit id="d3fc8162c0a69717b27d124c6a410aa158f8f72a" translate="yes" xml:space="preserve">
          <source>You can also explicitly self close a tag by appending the &lt;code&gt;/&lt;/code&gt; character. Only do this if you know what you&amp;rsquo;re doing.</source>
          <target state="translated">Вы также можете явно закрыть тег, добавив символ &lt;code&gt;/&lt;/code&gt; . Делайте это только в том случае, если знаете, что делаете.</target>
        </trans-unit>
        <trans-unit id="e1c17e1bce661b36ce0108ac4e86710a85aa258b" translate="yes" xml:space="preserve">
          <source>You can also get the index as you iterate:</source>
          <target state="translated">Вы также можете получить индекс в процессе итерации:</target>
        </trans-unit>
        <trans-unit id="96db0c7c130fa8e0158ddddfd071a5b9782f6b89" translate="yes" xml:space="preserve">
          <source>You can also set default values for you &lt;code&gt;arguments&lt;/code&gt;. Same as setting &lt;em&gt;default function parameters&lt;/em&gt; in ES6.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="140f0af2188ef08ff9629b47ce82513ad016b517" translate="yes" xml:space="preserve">
          <source>You can also use &lt;code&gt;for&lt;/code&gt; as an alias of &lt;code&gt;each&lt;/code&gt;.</source>
          <target state="translated">Вы также можете использовать &lt;code&gt;for&lt;/code&gt; как псевдоним для &lt;code&gt;each&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0027fff4550a676a36eee166a95637892b252b95" translate="yes" xml:space="preserve">
          <source>You can also use &lt;code&gt;while&lt;/code&gt; to create a loop:</source>
          <target state="translated">Вы также можете использовать &lt;code&gt;while&lt;/code&gt; для создания цикла:</target>
        </trans-unit>
        <trans-unit id="2c557e99f5f235121d51f1ce2823498ab8b8d9bd" translate="yes" xml:space="preserve">
          <source>You can also use mixins with &lt;a href=&quot;attributes#attributes&quot;&gt;&lt;code&gt;&amp;amp;attributes&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Вы также можете использовать миксины с &lt;a href=&quot;attributes#attributes&quot;&gt; &lt;code&gt;&amp;amp;attributes&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="01a53d551774cbc3eadfc7495f3a2abde960427b" translate="yes" xml:space="preserve">
          <source>You can also use your own literal custom doctype:</source>
          <target state="translated">Вы также можете использовать свой собственный буквальный пользовательский док-тип:</target>
        </trans-unit>
        <trans-unit id="d1b5f71f72b7d45939001da55dffe5258ed86ed1" translate="yes" xml:space="preserve">
          <source>You can apply multiple filters on the same block of text. To do so, simply specify the filters on the same line.</source>
          <target state="translated">Вы можете применить несколько фильтров к одному и тому же блоку текста.Для этого просто укажите фильтры в одной строке.</target>
        </trans-unit>
        <trans-unit id="7194b592132f3a9ef496694aad72b908432ae04f" translate="yes" xml:space="preserve">
          <source>You can combine filters with includes, allowing you to filter things as you include them.</source>
          <target state="translated">Вы можете комбинировать фильтры с включёнными,позволяя вам фильтровать вещи по мере того,как вы их включаете.</target>
        </trans-unit>
        <trans-unit id="cb8e9e22d3380e6a8f573809ce2065c5ed955d70" translate="yes" xml:space="preserve">
          <source>You can use fall through, just as you would in a JavaScript &lt;code&gt;switch&lt;/code&gt; statement.</source>
          <target state="translated">Вы можете использовать провал, точно так же, как в операторе &lt;code&gt;switch&lt;/code&gt; JavaScript .</target>
        </trans-unit>
        <trans-unit id="f5a33f6908b5b7dd5b41b15d80e117f423907aed" translate="yes" xml:space="preserve">
          <source>You can write mixins that take an unknown number of arguments using the &amp;ldquo;rest arguments&amp;rdquo; syntax.</source>
          <target state="translated">Вы можете писать миксины, которые принимают неизвестное количество аргументов, используя синтаксис &amp;laquo;остальные аргументы&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="22fc2a02ae203a9327035c713de9a92f2684c732" translate="yes" xml:space="preserve">
          <source>You could accomplish the same thing by writing an HTML tag inline with your Pug&amp;hellip;but then, what&amp;rsquo;s the point of writing the Pug? Wrap an inline Pug tag declaration in &lt;code&gt;#[&lt;/code&gt; and &lt;code&gt;]&lt;/code&gt;, and it&amp;rsquo;ll be evaluated and buffered into the content of its containing tag.</source>
          <target state="translated">Вы могли бы сделать то же самое, написав HTML-тег, встроенный в ваш Pug ... но тогда какой смысл писать Pug? Оберните объявление встроенного тега Pug в &lt;code&gt;#[&lt;/code&gt; и &lt;code&gt;]&lt;/code&gt; , и оно будет оценено и буферизовано в содержимое содержащего тега.</target>
        </trans-unit>
        <trans-unit id="368b0c47ac39bd296562bb85cad76861238c59bd" translate="yes" xml:space="preserve">
          <source>You could add one or more empty piped lines &amp;mdash; a pipe with either spaces or nothing after it. This will insert whitespace in the rendered HTML.</source>
          <target state="translated">Вы можете добавить одну или несколько пустых линий трубопровода - трубку с пробелами или без них. Это вставит пробел в обработанный HTML.</target>
        </trans-unit>
        <trans-unit id="9763017d4a5acd93eb00a275db46cfe36c6a10f3" translate="yes" xml:space="preserve">
          <source>You don&amp;rsquo;t &lt;em&gt;have&lt;/em&gt; to play it safe. You can buffer unescaped values into your templates, too.</source>
          <target state="translated">Вы не &lt;em&gt;должны&lt;/em&gt; перестраховаться. Вы также можете буферизовать неэкранированные значения в свои шаблоны.</target>
        </trans-unit>
        <trans-unit id="f3101d0f541ccb604a9734400e64f83474bcee03" translate="yes" xml:space="preserve">
          <source>You just need to remember two main points about how whitespace works. When compiling to HTML:</source>
          <target state="translated">Нужно просто запомнить два основных момента о том,как работает белый пробел.При компиляции в HTML:</target>
        </trans-unit>
        <trans-unit id="5af61aa7ac13cbcc00cd2035902559cd2b6eb760" translate="yes" xml:space="preserve">
          <source>You should only use this method if you need &lt;code&gt;dependencies&lt;/code&gt; to implement something like watching for changes to the Pug files.</source>
          <target state="translated">Вы должны использовать этот метод только в том случае, если вам нужны &lt;code&gt;dependencies&lt;/code&gt; для реализации чего-то вроде отслеживания изменений в файлах Pug.</target>
        </trans-unit>
        <trans-unit id="a5703207a34479345963bfa4458ed83030a2dac8" translate="yes" xml:space="preserve">
          <source>[Deprecated.] Adds whitespace to the resulting HTML to make it easier for a human to read using &lt;code&gt;'&amp;nbsp;&amp;nbsp;'&lt;/code&gt; as indentation. If a string is specified, that will be used as indentation instead (e.g. &lt;code&gt;'\t'&lt;/code&gt;). We strongly recommend against using this option. Too often, it creates subtle bugs in your templates because of the way it alters the interpretation and rendering of whitespace, and so this feature is going to be removed. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">[Устарело.] Добавляет пробелы в результирующий HTML, чтобы облегчить чтение человеком, используя &lt;code&gt;'&amp;nbsp;&amp;nbsp;'&lt;/code&gt; качестве отступа. Если указана строка, вместо нее будет использоваться отступ (например, &lt;code&gt;'\t'&lt;/code&gt; ). Мы настоятельно не рекомендуем использовать эту опцию. Слишком часто он создает небольшие ошибки в ваших шаблонах из-за того, как он изменяет интерпретацию и отображение пробелов, и поэтому эта функция будет удалена. По умолчанию - &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="094091b906a9de0ebf75cbf6a009f5b256bde470" translate="yes" xml:space="preserve">
          <source>all whitespace in the middle of a line of text.</source>
          <target state="translated">все белые пробелы в середине строки текста.</target>
        </trans-unit>
        <trans-unit id="947666ff97af2b4c14b5d2b9d091282d88c28076" translate="yes" xml:space="preserve">
          <source>basedir: string</source>
          <target state="translated">базис:строка</target>
        </trans-unit>
        <trans-unit id="ab85ab2e0c881934505f00cba5b2ebedc4061954" translate="yes" xml:space="preserve">
          <source>cache: boolean</source>
          <target state="translated">кэш:булевый</target>
        </trans-unit>
        <trans-unit id="dde1782562a7cdefcef8cc15b85a92a851327f99" translate="yes" xml:space="preserve">
          <source>callback: ?function</source>
          <target state="translated">обратный вызов:?функция</target>
        </trans-unit>
        <trans-unit id="b80ce1ab3bed73eeed6c59af451bf0756e9198f9" translate="yes" xml:space="preserve">
          <source>compileDebug: boolean</source>
          <target state="translated">compileDebug:boolean</target>
        </trans-unit>
        <trans-unit id="92f6c0de3eaeac0b6144c2e086cdb99552a86810" translate="yes" xml:space="preserve">
          <source>debug: boolean</source>
          <target state="translated">отладка:логический</target>
        </trans-unit>
        <trans-unit id="4c0812a092ea86252d73e9e21ffd56a94055cced" translate="yes" xml:space="preserve">
          <source>doctype 1.1</source>
          <target state="translated">доктрина 1.1</target>
        </trans-unit>
        <trans-unit id="36d5a2ef0e42ecad311c99a119d5394978489645" translate="yes" xml:space="preserve">
          <source>doctype basic</source>
          <target state="translated">базовый док-тип</target>
        </trans-unit>
        <trans-unit id="b987fa96013dc6ad7ba1e2b7dade867adc3a9b1a" translate="yes" xml:space="preserve">
          <source>doctype frameset</source>
          <target state="translated">каркас док-станции</target>
        </trans-unit>
        <trans-unit id="3ad790aad84950f9bf176c0495962ec3da81e4b2" translate="yes" xml:space="preserve">
          <source>doctype html</source>
          <target state="translated">док-тип html</target>
        </trans-unit>
        <trans-unit id="2da1b871586767194152d7eaf75c3f4fc9db6417" translate="yes" xml:space="preserve">
          <source>doctype mobile</source>
          <target state="translated">мобильный док-тип</target>
        </trans-unit>
        <trans-unit id="cb833bda1d4380689c71d0211d9527470fe21e37" translate="yes" xml:space="preserve">
          <source>doctype plist</source>
          <target state="translated">доктип-плист</target>
        </trans-unit>
        <trans-unit id="aca473a6b228b02668630d3ee6b58db13e4e89e4" translate="yes" xml:space="preserve">
          <source>doctype strict</source>
          <target state="translated">строгий доктринальный тип</target>
        </trans-unit>
        <trans-unit id="64b70f1f17dfb13bb035950ab2f71f6dbb2010be" translate="yes" xml:space="preserve">
          <source>doctype transitional</source>
          <target state="translated">документальный переход</target>
        </trans-unit>
        <trans-unit id="ce86991e98eb7f02076662e42b7b671b1acd4818" translate="yes" xml:space="preserve">
          <source>doctype xml</source>
          <target state="translated">док-тип xml</target>
        </trans-unit>
        <trans-unit id="50148d1bcac7418829c6eca5cc417c0683b96aa7" translate="yes" xml:space="preserve">
          <source>doctype: string</source>
          <target state="translated">тип документа:строка</target>
        </trans-unit>
        <trans-unit id="7f53a68d324346fc8457a1665141697dcc97ee86" translate="yes" xml:space="preserve">
          <source>e.g.</source>
          <target state="translated">e.g.</target>
        </trans-unit>
        <trans-unit id="b32f279e548b6fceef4343170778273bfe60658c" translate="yes" xml:space="preserve">
          <source>each</source>
          <target state="translated">each</target>
        </trans-unit>
        <trans-unit id="2e1cce95c8435edc76f01dbe1a2d8435b61df0c8" translate="yes" xml:space="preserve">
          <source>filename: string</source>
          <target state="translated">имя файла:строка</target>
        </trans-unit>
        <trans-unit id="f4d4384c38818fe76363144966eb64ba7329ec41" translate="yes" xml:space="preserve">
          <source>filters with &lt;code&gt;minify&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d1b6e8d92fcf0d89c65fff15536132eb8689bdb" translate="yes" xml:space="preserve">
          <source>filters: object</source>
          <target state="translated">фильтры:объект</target>
        </trans-unit>
        <trans-unit id="c766934cd69007da08c8f5aebc3417d502b6c58a" translate="yes" xml:space="preserve">
          <source>globals: Array&amp;lt;string&amp;gt;</source>
          <target state="translated">globals: Массив &amp;lt;строка&amp;gt;</target>
        </trans-unit>
        <trans-unit id="70904d38f886d1937cfb1a56e8ee9d7b4c522940" translate="yes" xml:space="preserve">
          <source>inlineRuntimeFunctions: boolean</source>
          <target state="translated">inlineRuntimeFunctions:boolean</target>
        </trans-unit>
        <trans-unit id="d474a51ad0793503fa389594dbd6df55072601f8" translate="yes" xml:space="preserve">
          <source>leading whitespace beyond the block indentation.</source>
          <target state="translated">ведущий белый пробел за пределы блочного отступа.</target>
        </trans-unit>
        <trans-unit id="7075d119a82bc9d5de447d6dc1632fb65ca15b58" translate="yes" xml:space="preserve">
          <source>line breaks within a plain text block, or between consecutive piped lines.</source>
          <target state="translated">разрывы строк внутри простого текстового блока или между последовательными трубопроводными линиями.</target>
        </trans-unit>
        <trans-unit id="247d4d842843dc654743183e3a91eb4a8ece091d" translate="yes" xml:space="preserve">
          <source>name: string</source>
          <target state="translated">название:строка</target>
        </trans-unit>
        <trans-unit id="6a78404d034aadbae5291365235755f1a89268a8" translate="yes" xml:space="preserve">
          <source>options.name: string</source>
          <target state="translated">options.name:string</target>
        </trans-unit>
        <trans-unit id="0a2d940cd930ef216a285e879f4ce65198c0c652" translate="yes" xml:space="preserve">
          <source>options: ?options</source>
          <target state="translated">варианты:варианты</target>
        </trans-unit>
        <trans-unit id="0ec1cce7fb4817a42b4d49eee4256449272d4b7c" translate="yes" xml:space="preserve">
          <source>path: string</source>
          <target state="translated">путь:строка</target>
        </trans-unit>
        <trans-unit id="b035b52ba690c233ed79f5ec963b55fbd819ec9a" translate="yes" xml:space="preserve">
          <source>pretty: boolean | string</source>
          <target state="translated">красивая:булева | строка</target>
        </trans-unit>
        <trans-unit id="f9c2a41d6c42fd6cb5f49d2ce5e8029c7513bdba" translate="yes" xml:space="preserve">
          <source>pug.compile()</source>
          <target state="translated">pug.compile()</target>
        </trans-unit>
        <trans-unit id="758d3f91bb19aa83f3ba2122d7a91846326f9eb1" translate="yes" xml:space="preserve">
          <source>pug.compile(source, ?options)</source>
          <target state="translated">pug.compile(source,?options)</target>
        </trans-unit>
        <trans-unit id="75d07d7377076cb5ea20f3ea5df51c76fa457457" translate="yes" xml:space="preserve">
          <source>pug.compileClient()</source>
          <target state="translated">pug.compileClient()</target>
        </trans-unit>
        <trans-unit id="8956be407e1d66263af130995e5d37e75dff1d12" translate="yes" xml:space="preserve">
          <source>pug.compileClient(source, ?options)</source>
          <target state="translated">pug.compileClient(source,?options)</target>
        </trans-unit>
        <trans-unit id="96c478abf73eb47c972bb5f68bcd433ce1599223" translate="yes" xml:space="preserve">
          <source>pug.compileClientWithDependenciesTracked()</source>
          <target state="translated">pug.compileClientWithDependenciesTracked()</target>
        </trans-unit>
        <trans-unit id="82d1c7737cda37b5f154e51c5d88a33a51fa159f" translate="yes" xml:space="preserve">
          <source>pug.compileClientWithDependenciesTracked(source, ?options)</source>
          <target state="translated">pug.compileClientWithDependenciesTracked(source,?options)</target>
        </trans-unit>
        <trans-unit id="0e249deb9eb2652413deca518aa7eab027faba00" translate="yes" xml:space="preserve">
          <source>pug.compileFile()</source>
          <target state="translated">pug.compileFile()</target>
        </trans-unit>
        <trans-unit id="392c6117cc5dacdd08ada9081ab3ddce94ae723f" translate="yes" xml:space="preserve">
          <source>pug.compileFile(path, ?options)</source>
          <target state="translated">pug.compileFile(path,?options)</target>
        </trans-unit>
        <trans-unit id="869775603093d1a3e6918c0120f0084ed00de0c0" translate="yes" xml:space="preserve">
          <source>pug.compileFileClient()</source>
          <target state="translated">pug.compileFileClient()</target>
        </trans-unit>
        <trans-unit id="39991834cdeeb67e54fb3ee1311ec18262e6cd46" translate="yes" xml:space="preserve">
          <source>pug.compileFileClient(path, ?options)</source>
          <target state="translated">pug.compileFileClient(path,?options)</target>
        </trans-unit>
        <trans-unit id="38cd8d0a3234caf57e6b4e79e01ffd937a8c2f7d" translate="yes" xml:space="preserve">
          <source>pug.filters</source>
          <target state="translated">pug.filters</target>
        </trans-unit>
        <trans-unit id="41817c6bb0948772464f3ff78e2ef6174d791ddd" translate="yes" xml:space="preserve">
          <source>pug.render()</source>
          <target state="translated">pug.render()</target>
        </trans-unit>
        <trans-unit id="e7e1a745a2d6414db060a2325177c51408f18675" translate="yes" xml:space="preserve">
          <source>pug.render(source, ?options, ?callback)</source>
          <target state="translated">pug.render(source,?options,?callback)</target>
        </trans-unit>
        <trans-unit id="1bcc6fbfb6c6931c6a28ad3e7dc9416fc4e7e888" translate="yes" xml:space="preserve">
          <source>pug.renderFile()</source>
          <target state="translated">pug.renderFile()</target>
        </trans-unit>
        <trans-unit id="47ef9490f8ffdc5b1eeb5c0ca2eff24c7bf2e896" translate="yes" xml:space="preserve">
          <source>pug.renderFile(path, ?options, ?callback)</source>
          <target state="translated">pug.renderFile(path,?options,?callback)</target>
        </trans-unit>
        <trans-unit id="21302bfd86bb1315fb6a7c51e14f7cbc1f0f1421" translate="yes" xml:space="preserve">
          <source>returns: function</source>
          <target state="translated">возвраты:функция</target>
        </trans-unit>
        <trans-unit id="09ad179173477f65dc0f43e5dcce3cb506735b2c" translate="yes" xml:space="preserve">
          <source>returns: string</source>
          <target state="translated">возвраты:строка</target>
        </trans-unit>
        <trans-unit id="d78657abad4d0f592f6ad8b7a20fdb3da2a7ce21" translate="yes" xml:space="preserve">
          <source>self: boolean</source>
          <target state="translated">логический</target>
        </trans-unit>
        <trans-unit id="05e9a75d1a648e342c566c86ec6dd1b2b80ea944" translate="yes" xml:space="preserve">
          <source>source: string</source>
          <target state="translated">исходник:строка</target>
        </trans-unit>
        <trans-unit id="7745f84817fcdaee02b3619f5b4fc9f5950da3fb" translate="yes" xml:space="preserve">
          <source>trailing whitespace.</source>
          <target state="translated">...идущий в ногу с белым пробелом.</target>
        </trans-unit>
        <trans-unit id="6517f89c46c3f0d6db9cb009b8c7d1f98c371fa0" translate="yes" xml:space="preserve">
          <source>while</source>
          <target state="translated">while</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
