<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="erlang">
    <body>
      <group id="erlang">
        <trans-unit id="916ee7c748bb5e7a2bf22555efc9c7ba3e8e1d3f" translate="yes" xml:space="preserve">
          <source>The file is opened with another &lt;code&gt;encoding&lt;/code&gt; than &lt;code&gt;latin1&lt;/code&gt; and the data in the file cannot be translated to the byte-oriented data that this function returns.</source>
          <target state="translated">Файл открывается с &lt;code&gt;encoding&lt;/code&gt; &lt;code&gt;latin1&lt;/code&gt; от latin1, и данные в файле не могут быть преобразованы в байтовые данные, возвращаемые этой функцией.</target>
        </trans-unit>
        <trans-unit id="af4cd6106424f7957ea5b09a69738ba162a42d0a" translate="yes" xml:space="preserve">
          <source>The file is opened with another &lt;code&gt;encoding&lt;/code&gt; than &lt;code&gt;latin1&lt;/code&gt; and the data on the file cannot be translated to the byte-oriented data that this function returns.</source>
          <target state="translated">Файл открывается с &lt;code&gt;encoding&lt;/code&gt; &lt;code&gt;latin1&lt;/code&gt; от latin1, и данные в файле не могут быть преобразованы в байтовые данные, возвращаемые этой функцией.</target>
        </trans-unit>
        <trans-unit id="f1447089fad09b9920a3125bbbcb71e40fcf03b8" translate="yes" xml:space="preserve">
          <source>The file is read and evaluated. &lt;code&gt;FullName&lt;/code&gt; is the full name of the file and &lt;code&gt;Value&lt;/code&gt; the value of the last expression.</source>
          <target state="translated">Файл читается и оценивается. &lt;code&gt;FullName&lt;/code&gt; - это полное имя файла, а &lt;code&gt;Value&lt;/code&gt; - значение последнего выражения.</target>
        </trans-unit>
        <trans-unit id="ab1ff8d4200f6f26fb7134240fe2228fd2ecd31d" translate="yes" xml:space="preserve">
          <source>The file is read and evaluated. &lt;code&gt;FullName&lt;/code&gt; is the full name of the file.</source>
          <target state="translated">Файл читается и оценивается. &lt;code&gt;FullName&lt;/code&gt; - это полное имя файла.</target>
        </trans-unit>
        <trans-unit id="2975a465dfe23956015ba6c274ed78e16024bfa9" translate="yes" xml:space="preserve">
          <source>The file is read and evaluated. &lt;code&gt;Value&lt;/code&gt; is the value of the last expression.</source>
          <target state="translated">Файл читается и оценивается. &lt;code&gt;Value&lt;/code&gt; - это значение последнего выражения.</target>
        </trans-unit>
        <trans-unit id="e333fb72ddfdad9f98da967fd861cc9cecde73c6" translate="yes" xml:space="preserve">
          <source>The file is read by the application controller when an application is loaded/started. It is also used by the functions in &lt;code&gt;systools&lt;/code&gt;, for example when generating start scripts.</source>
          <target state="translated">Файл считывается контроллером приложения при загрузке / запуске приложения. Он также используется функциями в &lt;code&gt;systools&lt;/code&gt; , например, при создании сценариев запуска.</target>
        </trans-unit>
        <trans-unit id="d522dbd681f4cd878e0a0aeb3cbd943d113a8c38" translate="yes" xml:space="preserve">
          <source>The file is successfully read. &lt;code&gt;FullName&lt;/code&gt; is the full name of the file.</source>
          <target state="translated">Файл успешно прочитан. &lt;code&gt;FullName&lt;/code&gt; - это полное имя файла.</target>
        </trans-unit>
        <trans-unit id="e117edda70b67ee50f9d2f7fce2e7996b73bd637" translate="yes" xml:space="preserve">
          <source>The file must be in &lt;code&gt;ssh-keygen moduli file format&lt;/code&gt;. The file is read when the daemon starts.</source>
          <target state="translated">Файл должен быть в &lt;code&gt;ssh-keygen moduli file format&lt;/code&gt; . Файл читается при запуске демона.</target>
        </trans-unit>
        <trans-unit id="80ee3eac8f806ec9cde470e2d7d3f7c22d220194" translate="yes" xml:space="preserve">
          <source>The file must be named &lt;code&gt;Rel.rel&lt;/code&gt;, where &lt;code&gt;Rel&lt;/code&gt; is a unique name.</source>
          <target state="translated">Файл должен называться &lt;code&gt;Rel.rel&lt;/code&gt; , где &lt;code&gt;Rel&lt;/code&gt; - уникальное имя.</target>
        </trans-unit>
        <trans-unit id="7582f5f80d20de2502ad5d3c778be456df031796" translate="yes" xml:space="preserve">
          <source>The file must contain a single Erlang term, which is called an &lt;strong&gt;application specification&lt;/strong&gt;:</source>
          <target state="translated">Файл должен содержать один термин Erlang, который называется &lt;strong&gt;спецификацией приложения&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="d15a1263b243302ad1b99430abd18bc925e32e3e" translate="yes" xml:space="preserve">
          <source>The file must have one or more three-tuples &lt;code&gt;{Size=integer(),G=integer(),P=integer()}&lt;/code&gt; terminated by a dot. The file is read when the daemon starts.</source>
          <target state="translated">В файле должен быть один или несколько кортежей из трех частей &lt;code&gt;{Size=integer(),G=integer(),P=integer()}&lt;/code&gt; оканчивающихся точкой. Файл читается при запуске демона.</target>
        </trans-unit>
        <trans-unit id="56458bdbcf5690ec8658261e5325164ce2a2a111" translate="yes" xml:space="preserve">
          <source>The file name of the current module.</source>
          <target state="translated">Имя файла текущего модуля.</target>
        </trans-unit>
        <trans-unit id="a5d1d6d598f59230fdf0a71188330092a7de64cf" translate="yes" xml:space="preserve">
          <source>The file name requirement on the engine dynamic library can differ between SSL versions.</source>
          <target state="translated">Требование к имени файла в динамической библиотеке движка может отличаться в разных версиях SSL.</target>
        </trans-unit>
        <trans-unit id="5cf117b829fc2877fe7b8ccf793bd866ee82bf7d" translate="yes" xml:space="preserve">
          <source>The file names consist of eight hexadecimal digits followed by &lt;code&gt;.rN&lt;/code&gt;, where &lt;code&gt;N&lt;/code&gt; is an integer, e.g. &lt;code&gt;1a2b3c4d.r0&lt;/code&gt;. For the first version of the CRL, &lt;code&gt;N&lt;/code&gt; starts at zero, and for each new version, &lt;code&gt;N&lt;/code&gt; is incremented by one. The OpenSSL utility &lt;code&gt;c_rehash&lt;/code&gt; creates symlinks according to this pattern.</source>
          <target state="translated">Имена файлов состоят из восьми шестнадцатеричных цифр, за которыми следует &lt;code&gt;.rN&lt;/code&gt; , где &lt;code&gt;N&lt;/code&gt; - целое число, например &lt;code&gt;1a2b3c4d.r0&lt;/code&gt; . Для первой версии CRL &lt;code&gt;N&lt;/code&gt; начинается с нуля, а для каждой новой версии &lt;code&gt;N&lt;/code&gt; увеличивается на единицу. Утилита OpenSSL &lt;code&gt;c_rehash&lt;/code&gt; создает символические ссылки согласно этому шаблону.</target>
        </trans-unit>
        <trans-unit id="d7d30bf4111cf6d645a316a6236bd904ed813968" translate="yes" xml:space="preserve">
          <source>The file offset in the zip archive (used internally)</source>
          <target state="translated">Смещение файла в zip-архиве (используется внутри архива)</target>
        </trans-unit>
        <trans-unit id="98c7f36c4669e374fe284c2ff98a9ddaef5cf51f" translate="yes" xml:space="preserve">
          <source>The file permissions as the sum of the following bit values:</source>
          <target state="translated">Файловые разрешения как сумма следующих битовых значений:</target>
        </trans-unit>
        <trans-unit id="9515e875a26b329b033fd7640f399fd9edd7196e" translate="yes" xml:space="preserve">
          <source>The file privileges and ownership of the &lt;code&gt;mod_syslog&lt;/code&gt; utility must be modified.</source>
          <target state="translated">Должны быть изменены права доступа к файлам и права собственности утилиты &lt;code&gt;mod_syslog&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e4f22a3c177173ba882d73ea3867a6b6cb6d9dc7" translate="yes" xml:space="preserve">
          <source>The file suffix of the incoming URL mapped into a &lt;code&gt;MimeType&lt;/code&gt;</source>
          <target state="translated">Суффикс файла входящего URL-адреса, отображаемого в &lt;code&gt;MimeType&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f4eba4c3a153db010c6d9b7a15465b2d5b3ce266" translate="yes" xml:space="preserve">
          <source>The file suffix of the incoming URL mapped into a &lt;code&gt;MimeType&lt;/code&gt;.</source>
          <target state="translated">Суффикс файла входящего URL-адреса, отображаемого в &lt;code&gt;MimeType&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f294360a334b35b807188de18da95f7579b0fb4d" translate="yes" xml:space="preserve">
          <source>The file system on the other host has a different structure to the the master.</source>
          <target state="translated">Файловая система на другом хосте имеет структуру,отличную от основной.</target>
        </trans-unit>
        <trans-unit id="c75ca2cbc895f2093ee4a98814185b1afc3a8e1a" translate="yes" xml:space="preserve">
          <source>The file system path to the directory where the driver object file is located. The filename of the object file (minus extension) must correspond to the driver name (used in parameter &lt;code&gt;Name&lt;/code&gt;) and the driver must identify itself with the same name. &lt;code&gt;Path&lt;/code&gt; can be provided as an &lt;strong&gt;iolist()&lt;/strong&gt;, meaning it can be a list of other &lt;code&gt;iolist()&lt;/code&gt;s, characters (8-bit integers), or binaries, all to be flattened into a sequence of characters.</source>
          <target state="translated">Путь файловой системы к каталогу, в котором находится объектный файл драйвера. Имя объектного файла (без расширения) должно соответствовать имени драйвера (используется в параметре &lt;code&gt;Name&lt;/code&gt; ), и драйвер должен идентифицировать себя с тем же именем. &lt;code&gt;Path&lt;/code&gt; может быть предоставлен как &lt;strong&gt;iolist ()&lt;/strong&gt; , то есть это может быть список других &lt;code&gt;iolist()&lt;/code&gt; , символов (8-битных целых чисел) или двоичных файлов, которые должны быть сведены в последовательность символов.</target>
        </trans-unit>
        <trans-unit id="bf2eb9cc34b90180610fbc75837cbfad30b948cc" translate="yes" xml:space="preserve">
          <source>The file trace driver expects a filename or a wrap files specification as parameter. A file is written with a high degree of buffering, why all trace messages are &lt;strong&gt;not&lt;/strong&gt; guaranteed to be saved in the file in case of a system crash. That is the price to pay for low tracing overhead.</source>
          <target state="translated">Драйвер трассировки файлов ожидает в качестве параметра имя файла или спецификацию файлов оболочки. Файл записывается с высокой степенью буферизации, поэтому &lt;strong&gt;не&lt;/strong&gt; гарантируется , что все сообщения трассировки сохранятся в файле в случае сбоя системы. Это цена за низкие накладные расходы на отслеживание.</target>
        </trans-unit>
        <trans-unit id="083d3049caca9cb4909e07d982cf1c0a253eda8d" translate="yes" xml:space="preserve">
          <source>The file transfer type is set to the default of the FTP server when the session is opened. This is usually ASCCI mode.</source>
          <target state="translated">Тип передачи файлов устанавливается по умолчанию для FTP-сервера при открытии сессии.Обычно это режим ASCCI.</target>
        </trans-unit>
        <trans-unit id="d7d87c17221873fd0d28c7a0cf27f97994b73b47" translate="yes" xml:space="preserve">
          <source>The file used must be opened using the &lt;code&gt;raw&lt;/code&gt; flag, and the process calling &lt;code&gt;sendfile&lt;/code&gt; must be the controlling process of the socket. See &lt;code&gt;&lt;a href=&quot;gen_tcp#controlling_process-2&quot;&gt;gen_tcp:controlling_process/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Используемый файл должен быть открыт с использованием &lt;code&gt;raw&lt;/code&gt; флага, а процесс, вызывающий &lt;code&gt;sendfile&lt;/code&gt; , должен быть контролирующим процессом сокета. См. &lt;code&gt;&lt;a href=&quot;gen_tcp#controlling_process-2&quot;&gt;gen_tcp:controlling_process/2&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c0739dac79b5f4f1aa7ca70031ae5a16c934c399" translate="yes" xml:space="preserve">
          <source>The file was read and evaluated.</source>
          <target state="translated">Файл был прочитан и оценен.</target>
        </trans-unit>
        <trans-unit id="4e58a2f1e91ddce67de54ef340e3da2cb9cb63a1" translate="yes" xml:space="preserve">
          <source>The file was successfully read.</source>
          <target state="translated">Файл был успешно прочитан.</target>
        </trans-unit>
        <trans-unit id="d6065777a4960e5c157c07fd30dae24b515e8523" translate="yes" xml:space="preserve">
          <source>The file(s) in the &lt;code&gt;property_test&lt;/code&gt; subdirectory could, or should, include the ct_property_test include file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c72d65e1c03281b49322438db24cb3e3334edd0b" translate="yes" xml:space="preserve">
          <source>The file, which must exist, is opened for reading.</source>
          <target state="translated">Файл,который должен существовать,открывается для чтения.</target>
        </trans-unit>
        <trans-unit id="552bd26b6c475a1374de92e4954676c79da00420" translate="yes" xml:space="preserve">
          <source>The filename</source>
          <target state="translated">Фамилия</target>
        </trans-unit>
        <trans-unit id="26016e882c6ac80280490e30771a8dba2723ae37" translate="yes" xml:space="preserve">
          <source>The filename must be &lt;code&gt;syslog.conf.OTP&lt;/code&gt;. The path must be the same as the backup copy.</source>
          <target state="translated">Имя файла должно быть &lt;code&gt;syslog.conf.OTP&lt;/code&gt; . Путь должен быть таким же, как у резервной копии.</target>
        </trans-unit>
        <trans-unit id="29478f77cee4c57798b46ebd0b4dff9c27a01cc8" translate="yes" xml:space="preserve">
          <source>The filename of the copy must be &lt;code&gt;syslog.conf.ORIG&lt;/code&gt;. The directory location is optional; usually it is &lt;code&gt;/etc&lt;/code&gt;. A simple way to do this is to issue the following command:</source>
          <target state="translated">Имя файла копии должно быть &lt;code&gt;syslog.conf.ORIG&lt;/code&gt; . Местоположение каталога не обязательно; обычно это &lt;code&gt;/etc&lt;/code&gt; . Простой способ сделать это - ввести следующую команду:</target>
        </trans-unit>
        <trans-unit id="5af1d694b8b3cdebbfc3c0f00daedcbcdd080514" translate="yes" xml:space="preserve">
          <source>The filename of the crashdump.</source>
          <target state="translated">Фамилия крушения.</target>
        </trans-unit>
        <trans-unit id="f51e4a22a3fd6a63b9b7c7d8ef4afc50be94d9de" translate="yes" xml:space="preserve">
          <source>The filename translation mode can be read with function &lt;code&gt;file:native_name_encoding/0&lt;/code&gt;, which returns &lt;code&gt;latin1&lt;/code&gt; (bytewise encoding) or &lt;code&gt;utf8&lt;/code&gt;.</source>
          <target state="translated">Режим преобразования имени файла можно прочитать с помощью функции &lt;code&gt;file:native_name_encoding/0&lt;/code&gt; , которая возвращает &lt;code&gt;latin1&lt;/code&gt; (побайтовое кодирование) или &lt;code&gt;utf8&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0bbf7541fe0325c793eec29d4cd8ad35ed00aa5e" translate="yes" xml:space="preserve">
          <source>The files are unzipped to memory or to file, depending on the options specified to function &lt;code&gt;&lt;a href=&quot;#zip_open-1&quot;&gt;zip_open/1,2&lt;/a&gt;&lt;/code&gt; when opening the archive.</source>
          <target state="translated">Файлы распаковываются в память или в файл, в зависимости от параметров, указанных для функции &lt;code&gt;&lt;a href=&quot;#zip_open-1&quot;&gt;zip_open/1,2&lt;/a&gt;&lt;/code&gt; при открытии архива.</target>
        </trans-unit>
        <trans-unit id="e8c783c92fcd9bf942dd424f42fc61d302ddafc6" translate="yes" xml:space="preserve">
          <source>The files are:</source>
          <target state="translated">Файлы:</target>
        </trans-unit>
        <trans-unit id="c0b32d670fd0928ee57d4da38842a479ce59c02a" translate="yes" xml:space="preserve">
          <source>The filter &lt;strong&gt;did not pass&lt;/strong&gt;, and the log event is immediately discarded.</source>
          <target state="translated">Фильтр &lt;strong&gt;не прошел&lt;/strong&gt; , и событие журнала немедленно отбрасывается.</target>
        </trans-unit>
        <trans-unit id="2fec5992ce5b4648b9da53b9fca03126f14195c8" translate="yes" xml:space="preserve">
          <source>The filter &lt;strong&gt;passed&lt;/strong&gt;. The next handler filter, if any, is applied. If no more filters exist for this handler, the log event is forwarded to the handler callback.</source>
          <target state="translated">Фильтр &lt;strong&gt;прошел&lt;/strong&gt; . Применяется следующий фильтр обработчика, если таковой имеется. Если для этого обработчика больше нет фильтров, событие журнала перенаправляется на обратный вызов обработчика.</target>
        </trans-unit>
        <trans-unit id="c64e728f01227118a6f0a504e74466c80ec0c979" translate="yes" xml:space="preserve">
          <source>The filter &lt;strong&gt;passed&lt;/strong&gt;. The next primary filter, if any, is applied. If no more primary filters exist, the log event is forwarded to the handler part of Logger, where handler filters are applied.</source>
          <target state="translated">Фильтр &lt;strong&gt;прошел&lt;/strong&gt; . Применяется следующий основной фильтр, если таковой имеется. Если первичных фильтров больше нет, событие журнала перенаправляется в часть обработчика Logger, где применяются фильтры обработчика.</target>
        </trans-unit>
        <trans-unit id="7f4778fe9a2d1bb2efd40561548fc65defaa0949" translate="yes" xml:space="preserve">
          <source>The filter compares the value of the &lt;code&gt;domain&lt;/code&gt; field in the log event's metadata (&lt;code&gt;Domain&lt;/code&gt;) against &lt;code&gt;MatchDomain&lt;/code&gt;. The filter matches if the value of &lt;code&gt;Compare&lt;/code&gt; is:</source>
          <target state="translated">Фильтр сравнивает значение поля &lt;code&gt;domain&lt;/code&gt; в метаданных события журнала ( &lt;code&gt;Domain&lt;/code&gt; ) с &lt;code&gt;MatchDomain&lt;/code&gt; . Фильтр соответствует, если значение &lt;code&gt;Compare&lt;/code&gt; равно:</target>
        </trans-unit>
        <trans-unit id="51a93150ad29f0ccf2e63c9c4ef6e74ec818ee46" translate="yes" xml:space="preserve">
          <source>The filter compares the value of the event's log level (&lt;code&gt;Level&lt;/code&gt;) to &lt;code&gt;MatchLevel&lt;/code&gt; by calling &lt;code&gt;&lt;a href=&quot;logger#compare_levels-2&quot;&gt; logger:compare_levels(Level, MatchLevel)&lt;/a&gt;&lt;/code&gt;. The filter matches if the value of &lt;code&gt;Operator&lt;/code&gt; is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb57b499845a0930b0e37c62f80d02bcd2cb10f3" translate="yes" xml:space="preserve">
          <source>The filter compares the value of the event's log level (&lt;code&gt;Level&lt;/code&gt;) to &lt;code&gt;MatchLevel&lt;/code&gt; by calling &lt;code&gt;&lt;a href=&quot;logger#compare_levels-2&quot;&gt;logger:compare_levels(Level, MatchLevel)&lt;/a&gt;&lt;/code&gt;. The filter matches if the value of &lt;code&gt;Operator&lt;/code&gt; is:</source>
          <target state="translated">Фильтр сравнивает значение уровня журнала события ( &lt;code&gt;Level&lt;/code&gt; ) с &lt;code&gt;MatchLevel&lt;/code&gt; , вызывая &lt;code&gt;&lt;a href=&quot;logger#compare_levels-2&quot;&gt;logger:compare_levels(Level, MatchLevel)&lt;/a&gt;&lt;/code&gt; . Фильтр соответствует, если значение &lt;code&gt;Operator&lt;/code&gt; равно:</target>
        </trans-unit>
        <trans-unit id="beafc4357de407d81ed4a70bb524b690f9b684ec" translate="yes" xml:space="preserve">
          <source>The filter fun is called with the log event as the first parameter, and the specified &lt;code&gt;filter_args()&lt;/code&gt; as the second parameter.</source>
          <target state="translated">&lt;code&gt;filter_args()&lt;/code&gt; фильтрации вызывается с событием журнала в качестве первого параметра и заданным filter_args () в качестве второго параметра.</target>
        </trans-unit>
        <trans-unit id="109bfa797ec0aa4b76af245de1501f0741f1a95b" translate="yes" xml:space="preserve">
          <source>The filter function can return &lt;code&gt;stop&lt;/code&gt;, &lt;code&gt;ignore&lt;/code&gt; or the (possibly modified) log event.</source>
          <target state="translated">Функция фильтра может возвращать &lt;code&gt;stop&lt;/code&gt; , &lt;code&gt;ignore&lt;/code&gt; или (возможно измененное) событие журнала.</target>
        </trans-unit>
        <trans-unit id="fd11c27d7fbe5210f24b8d1e40d0d071f2e3ec4c" translate="yes" xml:space="preserve">
          <source>The filter has no knowledge of the log event. The next handler filter, if any, is applied. If no more filters exist for this handler, the value of the &lt;code&gt;filter_default&lt;/code&gt; configuration parameter for the handler specifies if the log event shall be discarded or forwarded to the handler callback.</source>
          <target state="translated">Фильтр не знает о событии журнала. Применяется следующий фильтр обработчика, если таковой имеется. Если для этого обработчика больше нет фильтров, значение параметра конфигурации &lt;code&gt;filter_default&lt;/code&gt; для обработчика указывает, должно ли событие журнала быть отброшено или перенаправлено на обратный вызов обработчика.</target>
        </trans-unit>
        <trans-unit id="ddc0b8589e411612b38fdd950c86be1e96f3d934" translate="yes" xml:space="preserve">
          <source>The filter has no knowledge of the log event. The next primary filter, if any, is applied. If no more primary filters exist, the value of the primary &lt;code&gt;filter_default&lt;/code&gt; configuration parameter specifies if the log event shall be discarded or forwarded to the handler part.</source>
          <target state="translated">Фильтр не знает о событии журнала. Применяется следующий основной фильтр, если таковой имеется. Если основных фильтров больше нет, значение параметра конфигурации primary &lt;code&gt;filter_default&lt;/code&gt; указывает, должно ли событие журнала быть отброшено или перенаправлено в часть обработчика.</target>
        </trans-unit>
        <trans-unit id="41d4a36552fad1262f02d4b7fdc2ca2fb3a329a9" translate="yes" xml:space="preserve">
          <source>The filter returns &lt;code&gt;ignore&lt;/code&gt; for all other log events.</source>
          <target state="translated">Фильтр возвращает &lt;code&gt;ignore&lt;/code&gt; для всех других событий журнала.</target>
        </trans-unit>
        <trans-unit id="dfb975166536b9370277fc5b05c55860c6bb1974" translate="yes" xml:space="preserve">
          <source>The final result is automatically compacted (compare &lt;code&gt;&lt;a href=&quot;#compact-1&quot;&gt;compact/1&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">Конечный результат автоматически уплотняется (сравните &lt;code&gt;&lt;a href=&quot;#compact-1&quot;&gt;compact/1&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="1526dc18038f8fccad4ff828c37ad6dc7b944d4a" translate="yes" xml:space="preserve">
          <source>The final use of backslash is for certain simple assertions. An assertion specifies a condition that must be met at a particular point in a match, without consuming any characters from the subject string. The use of subpatterns for more complicated assertions is described below. The following are the backslashed assertions:</source>
          <target state="translated">Окончательное использование обратного слеша-для некоторых простых утверждений.Утверждение задает условие,которое должно быть выполнено в определенной точке совпадения,без использования символов из предметной строки.Использование подшаблонов для более сложных утверждений описано ниже.Ниже приведены обратные зачеркнутые утверждения:</target>
        </trans-unit>
        <trans-unit id="e6d536c130f15c0094632e977773d39a9eb1e1bc" translate="yes" xml:space="preserve">
          <source>The finish time can be specified as &lt;code&gt;HHMMSS&lt;/code&gt; and is then interpreted as a time today (or possibly tomorrow), but can also be specified as &lt;code&gt;YYMoMoDDHHMMSS&lt;/code&gt;, for example, &lt;code&gt;-until 071001120000&lt;/code&gt; or &lt;code&gt;{until,&quot;071001120000&quot;}&lt;/code&gt;. This means that the tests are executed and (if time allows) repeated, until 12 o'clock on the 1st of October 2007.</source>
          <target state="translated">Время окончания может быть указано как &lt;code&gt;HHMMSS&lt;/code&gt; и затем интерпретируется как время сегодня (или, возможно, завтра), но также может быть указано как &lt;code&gt;YYMoMoDDHHMMSS&lt;/code&gt; , например, &lt;code&gt;-until 071001120000&lt;/code&gt; или &lt;code&gt;{until,&quot;071001120000&quot;}&lt;/code&gt; . Это означает, что тесты выполняются и (если позволяет время) повторяются до 12 часов 1 октября 2007 года.</target>
        </trans-unit>
        <trans-unit id="452542fc2e01d92307cf4ab881b859d812957716" translate="yes" xml:space="preserve">
          <source>The finishing phase is carried out in the following sequence by the BIF &lt;code&gt;erlang:finish_loading&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e0ddb058b574885245c8e1eb45a6f332a495743" translate="yes" xml:space="preserve">
          <source>The first 4-bits segment of &lt;code&gt;Dgram&lt;/code&gt; is not equal to 4.</source>
          <target state="translated">Первый 4- &lt;code&gt;Dgram&lt;/code&gt; сегмент Dgram не равен 4.</target>
        </trans-unit>
        <trans-unit id="8565b4f54aaccfcff566979872a65ab909534a87" translate="yes" xml:space="preserve">
          <source>The first &lt;code&gt;[&lt;/code&gt; bracket is read as &quot;build the list&quot;.</source>
          <target state="translated">Первая скобка &lt;code&gt;[&lt;/code&gt; читается как &amp;laquo;построить список&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="97b9da02f0f552217d5f6a05e46d62406ee40ed2" translate="yes" xml:space="preserve">
          <source>The first and longest match is preferred to a shorter, which is illustrated by the following example:</source>
          <target state="translated">Первое и самое длинное совпадение предпочтительнее короткого,что проиллюстрировано следующим примером:</target>
        </trans-unit>
        <trans-unit id="6694406df610cd0f2b38fa2673a9cd35f9806c5a" translate="yes" xml:space="preserve">
          <source>The first argument is &lt;code&gt;{down,Vsn}&lt;/code&gt; if there is a downgrade, or &lt;code&gt;Vsn&lt;/code&gt; if there is a upgrade. The term &lt;code&gt;Vsn&lt;/code&gt; is fetched from the 'original' version of the module, that is, the version you are upgrading from, or downgrading to.</source>
          <target state="translated">Первый аргумент - &lt;code&gt;{down,Vsn}&lt;/code&gt; , если есть переход на более &lt;code&gt;Vsn&lt;/code&gt; , или Vsn, если есть обновление. Термин &lt;code&gt;Vsn&lt;/code&gt; взят из &amp;laquo;исходной&amp;raquo; версии модуля, то есть версии, с которой вы выполняете обновление или переход на более раннюю .</target>
        </trans-unit>
        <trans-unit id="ce41fd29eb3e83bdeb71be9c3fb406a35efdd54a" translate="yes" xml:space="preserve">
          <source>The first argument is &lt;strong&gt;not&lt;/strong&gt; a problem. It is variable, but it is a variable in all clauses. The problem is the variable in the second argument, &lt;code&gt;Xs&lt;/code&gt;, in the middle clause. Because the variable can match anything, the compiler is not allowed to rearrange the clauses, but must generate code that matches them in the order written.</source>
          <target state="translated">Первый аргумент - &lt;strong&gt;не&lt;/strong&gt; проблема. Это переменная, но это переменная во всех пунктах. Проблема заключается в переменной во втором аргументе, &lt;code&gt;Xs&lt;/code&gt; , в среднем предложении. Поскольку переменная может соответствовать чему угодно, компилятору не разрешается переупорядочивать предложения, но он должен генерировать код, который соответствует им в записанном порядке.</target>
        </trans-unit>
        <trans-unit id="32cd604e114cd5b8cc3d471ee8e9bda4b1cee80b" translate="yes" xml:space="preserve">
          <source>The first argument is the host name.</source>
          <target state="translated">Первый аргумент-имя хоста.</target>
        </trans-unit>
        <trans-unit id="d1c68fc721622601f7d260f14b31c96cc4eaab50" translate="yes" xml:space="preserve">
          <source>The first argument is the integer used to construct the node name.</source>
          <target state="translated">Первый аргумент-целое число,используемое для построения имени узла.</target>
        </trans-unit>
        <trans-unit id="f32a2498eb521e7ca9e58ea1c17356aedb30f6e1" translate="yes" xml:space="preserve">
          <source>The first argument is the internal state &lt;code&gt;State&lt;/code&gt;, passed from function &lt;code&gt;sys:handle_system_msg(Request, From, Parent, Module, Deb, State)&lt;/code&gt;, and called by the special process when a system message is received. In &lt;code&gt;ch4&lt;/code&gt;, the internal state is the set of available channels &lt;code&gt;Chs&lt;/code&gt;.</source>
          <target state="translated">Первый аргумент - это внутреннее состояние &lt;code&gt;State&lt;/code&gt; , передаваемое из функции &lt;code&gt;sys:handle_system_msg(Request, From, Parent, Module, Deb, State)&lt;/code&gt; и вызываемое специальным процессом при получении системного сообщения. В &lt;code&gt;ch4&lt;/code&gt; внутреннее состояние - это набор доступных каналов &lt;code&gt;Chs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="60e83b7f6d533faf198f67e36c18a3048889f5d4" translate="yes" xml:space="preserve">
          <source>The first argument is the name of the &lt;code&gt;gen_statem&lt;/code&gt; and must agree with the name used to start it. So, we use the same macro &lt;code&gt;?NAME&lt;/code&gt; as when starting. &lt;code&gt;{button,Button}&lt;/code&gt; is the event content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c12ca04f8508bcca65e776d0a609f335e9ddf7b5" translate="yes" xml:space="preserve">
          <source>The first argument is the name of the &lt;code&gt;gen_statem&lt;/code&gt; and must agree with the name used to start it. So, we use the same macro &lt;code&gt;?NAME&lt;/code&gt; as when starting. &lt;code&gt;{button,Digit}&lt;/code&gt; is the event content.</source>
          <target state="translated">Первый аргумент - это имя &lt;code&gt;gen_statem&lt;/code&gt; ,которое должно соответствовать имени, используемому для его запуска. Итак, мы используем тот же макрос &lt;code&gt;?NAME&lt;/code&gt; что и при запуске. &lt;code&gt;{button,Digit}&lt;/code&gt; - это содержание события.</target>
        </trans-unit>
        <trans-unit id="aefd6aec912ef4431dbd33b887c26f8e830aec81" translate="yes" xml:space="preserve">
          <source>The first argument must be the name of the Erlang module as a C-identifier. It will be stringified by the macro.</source>
          <target state="translated">Первым аргументом должно быть имя модуля Erlang как C-идентификатора.Он будет строковым с помощью макроса.</target>
        </trans-unit>
        <trans-unit id="6d796fe4c495cce6f5931a9ed26cf94f76f97e87" translate="yes" xml:space="preserve">
          <source>The first argument to &lt;code&gt;ttb:format/1,2&lt;/code&gt; specifies which binary log(s) to format. This is usually the name of a directory that &lt;code&gt;ttb&lt;/code&gt; created during log fetch. Unless option &lt;code&gt;disable_sort&lt;/code&gt; is provided, the logs from different files are always sorted according to time-stamp in traces.</source>
          <target state="translated">Первый аргумент &lt;code&gt;ttb:format/1,2&lt;/code&gt; указывает, какой двоичный журнал (-ы) форматировать. Обычно это имя каталога, созданного &lt;code&gt;ttb&lt;/code&gt; во время выборки журнала. Если не &lt;code&gt;disable_sort&lt;/code&gt; опция disable_sort , журналы из разных файлов всегда сортируются в соответствии с отметкой времени в трассировках.</target>
        </trans-unit>
        <trans-unit id="f1fc18bc1a4475d49a5401a7876f067a569b9a43" translate="yes" xml:space="preserve">
          <source>The first argument to these functions is the name of the test case. This value can be used with pattern matching in function clauses or conditional expressions to choose different initialization and cleanup routines for different test cases, or perform the same routine for many, or all, test cases.</source>
          <target state="translated">Первый аргумент к этим функциям-название тестового случая.Это значение может быть использовано при совпадении шаблонов в параграфах функций или условных выражениях для выбора различных процедур инициализации и очистки для различных тестовых случаев,или для выполнения одной и той же рутины для многих или всех тестовых случаев.</target>
        </trans-unit>
        <trans-unit id="ecdfdb297a347255c9331f18e2ac5e6afd881831" translate="yes" xml:space="preserve">
          <source>The first argument, &lt;code&gt;ch_sup&lt;/code&gt;, is the name of the callback module, that is, the module where the &lt;code&gt;init&lt;/code&gt; callback function is located.</source>
          <target state="translated">Первый аргумент &lt;code&gt;ch_sup&lt;/code&gt; - это имя модуля обратного вызова, то есть модуля, в котором расположена функция обратного вызова &lt;code&gt;init&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="283cb26772a001cdc7fe1371d58b95c0c89083e7" translate="yes" xml:space="preserve">
          <source>The first argument, &lt;code&gt;{local, ch3}&lt;/code&gt;, specifies the name. The gen_server is then locally registered as &lt;code&gt;ch3&lt;/code&gt;.</source>
          <target state="translated">Первый аргумент, &lt;code&gt;{local, ch3}&lt;/code&gt; , определяет имя. Затем gen_server локально регистрируется как &lt;code&gt;ch3&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d9747ca5abb30d92b09649a3fe92d54bbd6136b7" translate="yes" xml:space="preserve">
          <source>The first argument, &lt;code&gt;{local,?NAME}&lt;/code&gt;, specifies the name. In this case, the &lt;code&gt;gen_statem&lt;/code&gt; is locally registered as &lt;code&gt;code_lock&lt;/code&gt; through the macro &lt;code&gt;?NAME&lt;/code&gt;.</source>
          <target state="translated">Первый аргумент, &lt;code&gt;{local,?NAME}&lt;/code&gt; , указывает имя. В этом случае &lt;code&gt;gen_statem&lt;/code&gt; локально регистрируется как &lt;code&gt;code_lock&lt;/code&gt; через макрос &lt;code&gt;?NAME&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3ca3d86d73fb6916b758fcb99bcfa439ed00207d" translate="yes" xml:space="preserve">
          <source>The first byte says that we have 5 atoms that are part of the cache. Then follows three bytes that are the atom cache ref flags. Each of the flags uses 4 bits so they are a bit hard to read in decimal byte form. In binary half-byte form they look like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81bf6f9dd47061daa5ebed0dbe0e76693e63afed" translate="yes" xml:space="preserve">
          <source>The first call to &lt;code&gt;enif_select&lt;/code&gt; for a specific OS &lt;code&gt;event&lt;/code&gt; will establish a relation between the event object and the containing resource. All subsequent calls for an &lt;code&gt;event&lt;/code&gt; must pass its containing resource as argument &lt;code&gt;obj&lt;/code&gt;. The relation is dissolved when &lt;code&gt;enif_select&lt;/code&gt; has been called with &lt;code&gt;mode&lt;/code&gt; as &lt;code&gt;ERL_NIF_SELECT_STOP&lt;/code&gt; and the corresponding &lt;code&gt;stop&lt;/code&gt; callback has returned. A resource can contain several event objects but one event object can only be contained within one resource. A resource will not be destructed until all its contained relations have been dissolved.</source>
          <target state="translated">Первый вызов &lt;code&gt;enif_select&lt;/code&gt; для определенного &lt;code&gt;event&lt;/code&gt; ОС устанавливает связь между объектом события и содержащим его ресурсом. Все последующие вызовы &lt;code&gt;event&lt;/code&gt; должны передавать содержащий его ресурс в качестве аргумента &lt;code&gt;obj&lt;/code&gt; . Соотношение растворяется , когда &lt;code&gt;enif_select&lt;/code&gt; была вызвана с &lt;code&gt;mode&lt;/code&gt; как &lt;code&gt;ERL_NIF_SELECT_STOP&lt;/code&gt; и соответствующая &lt;code&gt;stop&lt;/code&gt; обратного вызова возвращается. Ресурс может содержать несколько объектов событий, но один объект события может содержаться только в одном ресурсе. Ресурс не будет уничтожен, пока все содержащиеся в нем отношения не будут распущены.</target>
        </trans-unit>
        <trans-unit id="2bd2696be64fe7162dc1485b1d2c990c6c549132" translate="yes" xml:space="preserve">
          <source>The first call to an interpreted function by this process. (&lt;code&gt;Module:Function/Arity&lt;/code&gt;)</source>
          <target state="translated">Первый вызов интерпретируемой функции этим процессом. ( &lt;code&gt;Module:Function/Arity&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="f928094b6da781dfbc891a4120343ae4cc293b55" translate="yes" xml:space="preserve">
          <source>The first case is when we have the identity-function (&lt;code&gt;SecName&lt;/code&gt; = &lt;code&gt;UserName&lt;/code&gt;).</source>
          <target state="translated">Первый случай - это функция идентификации ( &lt;code&gt;SecName&lt;/code&gt; = &lt;code&gt;UserName&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="ca46c0129957e9588b59f378385edde7afb5bd78" translate="yes" xml:space="preserve">
          <source>The first component is if linger is enabled, the second component is the flushing time-out, in seconds. There are 3 alternatives:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0fbbc3247a8beb8eb5ac78e663feb3fa54615a2" translate="yes" xml:space="preserve">
          <source>The first element in the list is isolated and the list is split into two sublists.</source>
          <target state="translated">Первый элемент списка изолирован,и список разделен на два подсписка.</target>
        </trans-unit>
        <trans-unit id="014ba2d1758d0deccfe95265702308ef94fdf898" translate="yes" xml:space="preserve">
          <source>The first element of &lt;code&gt;Type_List&lt;/code&gt; is the top type of the encoded message. In &lt;code&gt;Element_List&lt;/code&gt;, it is followed by each of the component names that leads to selected type.</source>
          <target state="translated">Первый элемент &lt;code&gt;Type_List&lt;/code&gt; - это верхний тип закодированного сообщения. В &lt;code&gt;Element_List&lt;/code&gt; за ним следует каждое из имен компонентов, которые приводят к выбранному типу.</target>
        </trans-unit>
        <trans-unit id="dc44175b8c8ad2a17dc68dd4333970027d3739a1" translate="yes" xml:space="preserve">
          <source>The first element of a non-empty &lt;code&gt;Host-IP-Address&lt;/code&gt; list in &lt;code&gt;Svc&lt;/code&gt; provides the local IP address if an &lt;code&gt;ip&lt;/code&gt; option is not specified. The local address is either returned from&lt;code&gt;&lt;a href=&quot;#start-3&quot;&gt;start/3&lt;/a&gt;&lt;/code&gt; or passed in a &lt;code&gt;connected&lt;/code&gt; message over the transport interface.</source>
          <target state="translated">Первый элемент непустого списка &lt;code&gt;Host-IP-Address&lt;/code&gt; в &lt;code&gt;Svc&lt;/code&gt; предоставляет локальный IP-адрес, если опция &lt;code&gt;ip&lt;/code&gt; не указана. Локальный адрес либо возвращается из &lt;code&gt;&lt;a href=&quot;#start-3&quot;&gt;start/3&lt;/a&gt;&lt;/code&gt; , либо передается в сообщении о &lt;code&gt;connected&lt;/code&gt; через транспортный интерфейс.</target>
        </trans-unit>
        <trans-unit id="750dbcc4ae2394bb0bb5244812808592768fc67a" translate="yes" xml:space="preserve">
          <source>The first element of the tuple that is sent is your own pid. This enables &lt;code&gt;my_server&lt;/code&gt; to reply. For more information about the primitives, see the &lt;code&gt;&lt;a href=&quot;ei_connect&quot;&gt;ei_connect&lt;/a&gt;&lt;/code&gt; module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fb0352349ee5a8c0a7eb65cc210b44843f0b004" translate="yes" xml:space="preserve">
          <source>The first element of the tuple that is sent is your own pid. This enables &lt;code&gt;my_server&lt;/code&gt; to reply. For more information about the primitives, see the &lt;code&gt;&lt;a href=&quot;erl_connect&quot;&gt;erl_connect&lt;/a&gt;&lt;/code&gt; module.</source>
          <target state="translated">Первым отправляемым элементом кортежа является ваш собственный pid. Это позволяет &lt;code&gt;my_server&lt;/code&gt; отвечать. Для получения дополнительной информации о примитивах см. Модуль &lt;code&gt;&lt;a href=&quot;erl_connect&quot;&gt;erl_connect&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="35c3d22f06a7d30ce2b647923cf3347f78831669" translate="yes" xml:space="preserve">
          <source>The first field of a record is the second element of the tuple, which is the representation of the record.</source>
          <target state="translated">Первое поле записи-это второй элемент кортежа,представляющий собой представление записи.</target>
        </trans-unit>
        <trans-unit id="2595903ccef1ec77d7c52522a5524a8e9b27b8b6" translate="yes" xml:space="preserve">
          <source>The first filter that the trace data is exposed for is the &lt;code&gt;Collector Filter&lt;/code&gt;. When a trace &lt;code&gt;Event&lt;/code&gt; is reported with &lt;code&gt;et_collector:report/2&lt;/code&gt; (or &lt;code&gt;et_collector:report_event/5,6&lt;/code&gt;) the first thing that happens, is that a message is sent to the &lt;code&gt;Collector&lt;/code&gt; process to fetch a handle that contains some useful stuff, such as the &lt;code&gt;Collector Filter Fun&lt;/code&gt; and an Ets table identifier. Then the &lt;code&gt;Collector Filter Fun&lt;/code&gt; is applied and if it returns &lt;code&gt;true&lt;/code&gt; (or &lt;code&gt;{true, NewEvent}&lt;/code&gt;), the &lt;code&gt;Event&lt;/code&gt; will be stored in an Ets table. As an optimization, subsequent calls to &lt;code&gt;et_collector:report&lt;/code&gt;-functions can use the handle directly instead of the &lt;code&gt;Collector Pid&lt;/code&gt;.</source>
          <target state="translated">Первый фильтр, для которого доступны данные трассировки, - это &lt;code&gt;Collector Filter&lt;/code&gt; . Когда &lt;code&gt;Event&lt;/code&gt; трассировки сообщается с помощью &lt;code&gt;et_collector:report/2&lt;/code&gt; (или &lt;code&gt;et_collector:report_event/5,6&lt;/code&gt; ), первое, что происходит, - это то, что в процесс &lt;code&gt;Collector&lt;/code&gt; отправляется сообщение для получения дескриптора, который содержит некоторые полезные вещи, такие как &lt;code&gt;Collector Filter Fun&lt;/code&gt; и идентификатор таблицы Ets. Затем применяется &lt;code&gt;Collector Filter Fun&lt;/code&gt; , и если он возвращает &lt;code&gt;true&lt;/code&gt; (или &lt;code&gt;{true, NewEvent}&lt;/code&gt; ), &lt;code&gt;Event&lt;/code&gt; будет сохранено в таблице Ets. В качестве оптимизации последующие вызовы &lt;code&gt;et_collector:report&lt;/code&gt; -функции могут использовать дескриптор напрямую вместо &lt;code&gt;Collector Pid&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e93729010b78d1e9fdfb6095e599e11dc46611ef" translate="yes" xml:space="preserve">
          <source>The first has the effect of clearing any previous inherits, the second of replacing a previous inherits of &lt;code&gt;Prev&lt;/code&gt; to one of &lt;code&gt;Mod&lt;/code&gt;. This allows the semantics of the input dictionary to be changed without modifying the file itself.</source>
          <target state="translated">Первый имеет эффект очистки всех предыдущих наследований, второй - заменяет предыдущее наследование &lt;code&gt;Prev&lt;/code&gt; на одно из &lt;code&gt;Mod&lt;/code&gt; . Это позволяет изменять семантику входного словаря без изменения самого файла.</target>
        </trans-unit>
        <trans-unit id="ceb71912301094043ae2a458700ad5b6cfbe752e" translate="yes" xml:space="preserve">
          <source>The first implementation of DTrace probes for the Erlang virtual machine was presented at the &lt;code&gt;&lt;a href=&quot;http://www.erlang.org/euc/08/&quot;&gt;2008 Erlang User Conference&lt;/a&gt;&lt;/code&gt;. That work, based on the Erlang/OTP R12 release, was discontinued due to what appears to be miscommunication with the original developers.</source>
          <target state="translated">Первая реализация зондов DTrace для виртуальной машины Erlang была представлена ​​на &lt;code&gt;&lt;a href=&quot;http://www.erlang.org/euc/08/&quot;&gt;2008 Erlang User Conference&lt;/a&gt;&lt;/code&gt; в 2008 году . Эта работа, основанная на выпуске Erlang / OTP R12, была прекращена из-за недопонимания с исходными разработчиками.</target>
        </trans-unit>
        <trans-unit id="4ede817e0e310c707f5e3a52490c6b67ab4efaa9" translate="yes" xml:space="preserve">
          <source>The first improvement is to fix the guarantee so that insert operations will be guaranteed to terminate. When the operation starts we verify that there actually exist a free slot that we can use. The problem is that we might not find it since it may move when multiple threads modify the table at the same time as we are trying to find the slot. The easy fix is to abort the operation if an empty slot could not be found in a finite number operation, and then restart the operation under a write lock. This will be implemented in next release, but furter work should be made trying to find a better solution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f97c49dffef8a26851ac783d21a876b74a6d528" translate="yes" xml:space="preserve">
          <source>The first instruction, &lt;code&gt;{selected_decode_Window1,['Window',status,buttonList,[1],number]}&lt;/code&gt; is described in the previous section.</source>
          <target state="translated">Первая инструкция, &lt;code&gt;{selected_decode_Window1,['Window',status,buttonList,[1],number]}&lt;/code&gt; описана в предыдущем разделе.</target>
        </trans-unit>
        <trans-unit id="e790f114bc8cf3a2ce28aebcfae1d5a3836f6a2d" translate="yes" xml:space="preserve">
          <source>The first is the current value.</source>
          <target state="translated">Первое-текущее значение.</target>
        </trans-unit>
        <trans-unit id="314cc6cc859765f9b7338047d208d202513bf56d" translate="yes" xml:space="preserve">
          <source>The first level is at the UDP entry / exit point, i.e. immediately after the receipt of the message, before any message processing is done (accept_recv) and immediately before sending the message, after all message processing is done (accept_send).</source>
          <target state="translated">Первый уровень находится в точке входа/выхода UDP,т.е.непосредственно после получения сообщения,перед любой обработкой сообщения (accept_recv)и непосредственно перед отправкой сообщения,после завершения всей обработки сообщения (accept_send).</target>
        </trans-unit>
        <trans-unit id="c16552c0f99d14efe5fd0c93c7ebdd486a4076a9" translate="yes" xml:space="preserve">
          <source>The first level is at the transport entry / exit point, i.e. immediately after the receipt of the message before any message processing is done (accept_recv) and immediately before sending the message after all message processing is done (accept_send).</source>
          <target state="translated">Первый уровень находится в точке входа/выхода транспорта,т.е.непосредственно после получения сообщения до завершения обработки любого сообщения (accept_recv)и непосредственно перед отправкой сообщения после завершения обработки всего сообщения (accept_send).</target>
        </trans-unit>
        <trans-unit id="88dc6a7560da2f499e8520d95b8aad4ac645715c" translate="yes" xml:space="preserve">
          <source>The first part -</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbb474799d3c2ceaecdb69173050f2d2cde6ff68" translate="yes" xml:space="preserve">
          <source>The first part matches an optional opening parenthesis, and if that character is present, sets it as the first captured substring. The second part matches one or more characters that are not parentheses. The third part is a conditional subpattern that tests whether the first set of parentheses matched or not. If they did, that is, if subject started with an opening parenthesis, the condition is true, and so the yes-pattern is executed and a closing parenthesis is required. Otherwise, as no-pattern is not present, the subpattern matches nothing. That is, this pattern matches a sequence of non-parentheses, optionally enclosed in parentheses.</source>
          <target state="translated">Первая часть соответствует необязательной открывающей скобке,и если этот символ присутствует,устанавливает его как первую захваченную подстроку.Вторая часть соответствует одному или нескольким символам,не заключенным в круглые скобки.Третья часть является условной подмаскировкой,которая проверяет,совпадает ли первый набор круглых скобок или нет.Если они совпали,то есть,если субъект начинает с открывающей круглой скобки,то условие истинно,поэтому выполняется шаблон &quot;да&quot; и требуется закрывающая круглую скобку.В противном случае,так как подмаска отсутствует,подмаска не совпадает ни с чем.То есть,этот паттерн совпадает с последовательностью непарентоспособных,опционально заключённых в круглые скобки.</target>
        </trans-unit>
        <trans-unit id="f02f68659112d26dce19edf7fe8cbae93aa2769c" translate="yes" xml:space="preserve">
          <source>The first part of the 64 bit template is identical to the 32 bit one, but there are some environment variable differences:</source>
          <target state="translated">Первая часть 64-битного шаблона идентична 32-битной,но есть некоторые различия в переменных окружения:</target>
        </trans-unit>
        <trans-unit id="f65a1941d5d1778fd847b32c5e58a7ed60e551a2" translate="yes" xml:space="preserve">
          <source>The first part of the crash dump shows the following:</source>
          <target state="translated">Первая часть свалки показывает следующее:</target>
        </trans-unit>
        <trans-unit id="2cc97c1e58d4679396d3bf61c813a63a062816e6" translate="yes" xml:space="preserve">
          <source>The first part of the pattern is a DEFINE group inside which is a another group named &quot;byte&quot; is defined. This matches an individual component of an IPv4 address (a number &amp;lt; 256). When matching takes place, this part of the pattern is skipped, as DEFINE acts like a false condition. The remaining pattern uses references to the named group to match the four dot-separated components of an IPv4 address, insisting on a word boundary at each end.</source>
          <target state="translated">Первая часть шаблона - это группа DEFINE, внутри которой определена другая группа с именем &amp;laquo;byte&amp;raquo;. Это соответствует отдельному компоненту IPv4-адреса (число &amp;lt;256). Когда происходит сопоставление, эта часть шаблона пропускается, поскольку DEFINE действует как ложное условие. В оставшемся шаблоне используются ссылки на именованную группу для сопоставления с четырьмя разделенными точками компонентами IPv4-адреса, настаивая на границе слова на каждом конце.</target>
        </trans-unit>
        <trans-unit id="7724368c62d5b897d69875d863fc670d000c0a9f" translate="yes" xml:space="preserve">
          <source>The first part of the reference number in ref &lt;code&gt;t&lt;/code&gt;. Use only for compatibility.</source>
          <target state="translated">Первая часть опорного числа в работе &lt;code&gt;t&lt;/code&gt; . Используйте только для совместимости.</target>
        </trans-unit>
        <trans-unit id="232ebbaa469296f40c7a1846dbf2fa546b56c045" translate="yes" xml:space="preserve">
          <source>The first part says that the factorial of 1 is 1.:</source>
          <target state="translated">В первой части говорится,что факториал 1 есть 1..:</target>
        </trans-unit>
        <trans-unit id="dac65be594adc3151ec035f4511e37fe28d74a93" translate="yes" xml:space="preserve">
          <source>The first program contains some inadequacies regarding handling of nodes which disappear. These are corrected in a later version of the program.</source>
          <target state="translated">Первая программа содержит некоторые недостатки в работе с исчезающими узлами.Они исправляются в более поздней версии программы.</target>
        </trans-unit>
        <trans-unit id="90106de27192d6ca833e750e4d48c96656c2317b" translate="yes" xml:space="preserve">
          <source>The first record attribute is the primary key, or key for short.</source>
          <target state="translated">Первым атрибутом записи является первичный ключ,или ключ для краткости.</target>
        </trans-unit>
        <trans-unit id="ed1cb5e2f4466b9952a0dc278fff4d1ccfd35509" translate="yes" xml:space="preserve">
          <source>The first state that is entered will get a &lt;strong&gt;state enter call&lt;/strong&gt; with &lt;code&gt;OldState&lt;/code&gt; equal to the current state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a82a7bb7498f5fc4876294f7dfadf942e9bd19c" translate="yes" xml:space="preserve">
          <source>The first state that is entered will get a state enter call with &lt;code&gt;OldState&lt;/code&gt; equal to the current state.</source>
          <target state="translated">Первое введенное состояние получит вызов состояния с &lt;code&gt;OldState&lt;/code&gt; , равным текущему состоянию.</target>
        </trans-unit>
        <trans-unit id="6086c2b9bf8be61602b6ebcc9d1ba07de24d3cb9" translate="yes" xml:space="preserve">
          <source>The first sublist contains all elements that are smaller than the first element in the list.</source>
          <target state="translated">Первый подсписок содержит все элементы,которые меньше первого элемента списка.</target>
        </trans-unit>
        <trans-unit id="7c16a3275bdd107763aa82124e29bdb96e0aa246" translate="yes" xml:space="preserve">
          <source>The first subsection will give a short background of the SSH protocol while later sections describes the implementation and provides some examples</source>
          <target state="translated">В первом подразделе будет дана краткая предыстория протокола SSH,а в последующих разделах будет описана реализация и приведены некоторые примеры</target>
        </trans-unit>
        <trans-unit id="ea7284e31b879942988ef1c4ac5a9d9ef85d8089" translate="yes" xml:space="preserve">
          <source>The first test to run includes all suites for system &lt;code&gt;t1&lt;/code&gt;. Suites &lt;code&gt;t1B&lt;/code&gt; and &lt;code&gt;t1D&lt;/code&gt; are excluded from the test. Test cases &lt;code&gt;test3&lt;/code&gt; and &lt;code&gt;test4&lt;/code&gt; in &lt;code&gt;t1A&lt;/code&gt; and &lt;code&gt;test1&lt;/code&gt; case in &lt;code&gt;t1C&lt;/code&gt; are also excluded from the test.</source>
          <target state="translated">Первый запускаемый тест включает все комплекты для системы &lt;code&gt;t1&lt;/code&gt; . Сюиты &lt;code&gt;t1B&lt;/code&gt; и &lt;code&gt;t1D&lt;/code&gt; исключаются из теста. Тестовые примеры &lt;code&gt;test3&lt;/code&gt; и &lt;code&gt;test4&lt;/code&gt; в &lt;code&gt;t1A&lt;/code&gt; и &lt;code&gt;test1&lt;/code&gt; case в &lt;code&gt;t1C&lt;/code&gt; также исключаются из теста.</target>
        </trans-unit>
        <trans-unit id="5ca5c4abe4913702f7baf25de35a02c261b509bb" translate="yes" xml:space="preserve">
          <source>The first thing &lt;code&gt;blend/2&lt;/code&gt; does is to calculate the resulting alpha channel:</source>
          <target state="translated">Первое, что делает &lt;code&gt;blend/2&lt;/code&gt; - вычисляет результирующий альфа-канал:</target>
        </trans-unit>
        <trans-unit id="39ceda5701132f42099520c75ed5fefa2f0ce8cf" translate="yes" xml:space="preserve">
          <source>The first thing you need to do, is to make sure you have an ODBC driver installed for the database that you want to access. Both the client machine where you plan to run your erlang node and the server machine running the database needs the the ODBC driver. (In some cases the client and the server may be the same machine).</source>
          <target state="translated">Первое,что вам нужно сделать,это убедиться,что у вас установлен драйвер ODBC для базы данных,к которой вы хотите получить доступ.И клиентской машине,на которой вы планируете запустить ваш узел erlang,и серверной машине,на которой запущена база данных,нужен ODBC драйвер.(В некоторых случаях клиент и сервер могут быть одной и той же машиной).</target>
        </trans-unit>
        <trans-unit id="2aae989cc7522942aff9cad7059abdf3f11420db" translate="yes" xml:space="preserve">
          <source>The first time &lt;code&gt;Fun&lt;/code&gt; is applied, &lt;code&gt;Acc0&lt;/code&gt; is the second argument. The next time &lt;code&gt;Fun&lt;/code&gt; is called, the return value from the previous call is used as the second argument. The term the last call to &lt;code&gt;Fun&lt;/code&gt; returns is the return value of the function &lt;code&gt;&lt;a href=&quot;mnesia#foldl-3&quot;&gt;mnesia:foldl/3&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;mnesia#foldr-3&quot;&gt;mnesia:foldr/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">В первый раз &lt;code&gt;Fun&lt;/code&gt; применяется, &lt;code&gt;Acc0&lt;/code&gt; является второй аргумент. При следующем вызове &lt;code&gt;Fun&lt;/code&gt; в качестве второго аргумента используется значение, возвращаемое предыдущим вызовом. Термин, который возвращает последний вызов &lt;code&gt;Fun&lt;/code&gt; , является возвращаемым значением функции &lt;code&gt;&lt;a href=&quot;mnesia#foldl-3&quot;&gt;mnesia:foldl/3&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;mnesia#foldr-3&quot;&gt;mnesia:foldr/3&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="50b73034e77a90f94080fa89965c6eaf0283e9d6" translate="yes" xml:space="preserve">
          <source>The first time &lt;code&gt;bchunk/2&lt;/code&gt; is called, an initial continuation, the atom &lt;code&gt;start&lt;/code&gt;, must be provided.</source>
          <target state="translated">Первый раз &lt;code&gt;bchunk/2&lt;/code&gt; называется, начальное продолжение, атом &lt;code&gt;start&lt;/code&gt; , должен быть обеспечен.</target>
        </trans-unit>
        <trans-unit id="0c2f550699da636c0cd8e01902373a891091a02a" translate="yes" xml:space="preserve">
          <source>The first time &lt;code&gt;chunk()&lt;/code&gt; (or &lt;code&gt;bchunk()&lt;/code&gt;) is called, an initial continuation, the atom &lt;code&gt;start&lt;/code&gt;, must be provided. If a disk log process is running on the current node, terms are read from that log. Otherwise, an individual distributed log on some other node is chosen, if such a log exists.</source>
          <target state="translated">Первый раз &lt;code&gt;chunk()&lt;/code&gt; (или &lt;code&gt;bchunk()&lt;/code&gt; ) называется, начальное продолжение, атом &lt;code&gt;start&lt;/code&gt; , должно быть обеспечено. Если на текущем узле выполняется дисковый журнал, термины считываются из этого журнала. В противном случае выбирается отдельный распределенный журнал на каком-либо другом узле, если такой журнал существует.</target>
        </trans-unit>
        <trans-unit id="2ae42b9440fbcdcd3aef0e04e0d47cfcd6b93638" translate="yes" xml:space="preserve">
          <source>The first time &lt;code&gt;chunk()&lt;/code&gt; is called, an initial continuation returned from &lt;code&gt;open/1&lt;/code&gt; or &lt;code&gt;open/2&lt;/code&gt; must be provided.</source>
          <target state="translated">При первом вызове &lt;code&gt;chunk()&lt;/code&gt; предоставить начальное продолжение, возвращаемое из &lt;code&gt;open/1&lt;/code&gt; или &lt;code&gt;open/2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f24cb290ca20c81eb6b4416fabb904d4e10dd7ea" translate="yes" xml:space="preserve">
          <source>The first time &lt;code&gt;my_binary_to_list/1&lt;/code&gt; is called, a &lt;code&gt;&lt;a href=&quot;#match_context&quot;&gt;match context&lt;/a&gt;&lt;/code&gt; is created. The match context points to the first byte of the binary. 1 byte is matched out and the match context is updated to point to the second byte in the binary.</source>
          <target state="translated">При первом &lt;code&gt;my_binary_to_list/1&lt;/code&gt; создается &lt;code&gt;&lt;a href=&quot;#match_context&quot;&gt;match context&lt;/a&gt;&lt;/code&gt; . Контекст совпадения указывает на первый байт двоичного файла. Выбирается 1 байт, и контекст соответствия обновляется, чтобы указать на второй байт в двоичном файле.</target>
        </trans-unit>
        <trans-unit id="1823ded8e66bfbd9fc7ce09687bb9aaa31338fbb" translate="yes" xml:space="preserve">
          <source>The first time &lt;code&gt;save_scenario/0&lt;/code&gt; is called a server will be started. This server will save runtime scenarios. All saved scenarios can be removed by calling &lt;code&gt;&lt;a href=&quot;#make_config-0&quot;&gt;stop/0&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">При первом &lt;code&gt;save_scenario/0&lt;/code&gt; будет запущен сервер. Этот сервер сохранит сценарии выполнения. Все сохраненные сценарии можно удалить, вызвав &lt;code&gt;&lt;a href=&quot;#make_config-0&quot;&gt;stop/0&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2da631291d48912dfb7f5e3e966ba2a0afa5f92f" translate="yes" xml:space="preserve">
          <source>The first time this function is called, &lt;code&gt;error_logger&lt;/code&gt; is added as a Logger handler, and the &lt;code&gt;error_logger&lt;/code&gt; process is started.</source>
          <target state="translated">При первом вызове этой функции &lt;code&gt;error_logger&lt;/code&gt; добавляется в качестве обработчика Logger, и запускается процесс &lt;code&gt;error_logger&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0ac2627c749c91f8bf457c1c48d430daa18c89a6" translate="yes" xml:space="preserve">
          <source>The first user &quot;sends&quot; the message in the example above by:</source>
          <target state="translated">Первый пользователь &quot;отправляет&quot; сообщение в приведенном выше примере:</target>
        </trans-unit>
        <trans-unit id="03cb12d8f1c72fe9141e80abe570426dd8888741" translate="yes" xml:space="preserve">
          <source>The first value indicates the default &lt;code&gt;priv_dir&lt;/code&gt; behavior, that is, one private directory created per test run. The two latter values tell &lt;code&gt;Common Test&lt;/code&gt; to generate a unique test directory name per test case and execution. If the auto version is used, &lt;strong&gt;all&lt;/strong&gt; private directories are created automatically. This can become very inefficient for test runs with many test cases or repetitions, or both. Therefore, if the manual version is used instead, the test case must tell &lt;code&gt;Common Test&lt;/code&gt; to create &lt;code&gt;priv_dir&lt;/code&gt; when it needs it. It does this by calling the function &lt;code&gt;&lt;a href=&quot;ct#make_priv_dir-0&quot;&gt;ct:make_priv_dir/0&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Первое значение указывает поведение &lt;code&gt;priv_dir&lt;/code&gt; по умолчанию , то есть один частный каталог, созданный за один тестовый запуск. Два последних значения указывают &lt;code&gt;Common Test&lt;/code&gt; на создание уникального имени тестового каталога для каждого тестового примера и выполнения. Если используется автоматическая версия, &lt;strong&gt;все&lt;/strong&gt; личные каталоги создаются автоматически. Это может стать очень неэффективным для тестовых прогонов с большим количеством тестовых примеров или повторений, или и тем и другим. Следовательно, если вместо этого используется ручная версия, тестовый пример должен указать &lt;code&gt;Common Test&lt;/code&gt; создать &lt;code&gt;priv_dir&lt;/code&gt; , когда это необходимо. Для этого он вызывает функцию &lt;code&gt;&lt;a href=&quot;ct#make_priv_dir-0&quot;&gt;ct:make_priv_dir/0&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5b7f2b74f4ad7fcb69baccbea779f423b38f85de" translate="yes" xml:space="preserve">
          <source>The first value is limited to the values 0, 1, or 2. The second value must be in the range 0..39 when the first value is 0 or 1.</source>
          <target state="translated">Первое значение ограничено значениями 0,1 или 2.Второе значение должно находиться в диапазоне 0...39,если первое значение равно 0 или 1.</target>
        </trans-unit>
        <trans-unit id="76cac286407464f1a3cab30ae6ed03a1a8b426a4" translate="yes" xml:space="preserve">
          <source>The flag &lt;code&gt;-extra&lt;/code&gt; is treated in special way. Its scope ends at the end of the file. Arguments following an &lt;code&gt;-extra&lt;/code&gt; flag are moved on the command line into the &lt;code&gt;-extra&lt;/code&gt; section, that is, the end of the command line following after an &lt;code&gt;-extra&lt;/code&gt; flag.</source>
          <target state="translated">Флаг &lt;code&gt;-extra&lt;/code&gt; обрабатывается особым образом. Его область действия заканчивается в конце файла. Аргументы, следующие за флагом &lt;code&gt;-extra&lt;/code&gt; , перемещаются в командной строке в раздел &lt;code&gt;-extra&lt;/code&gt; , то есть в конец командной строки, следующий за флагом &lt;code&gt;-extra&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="095fd71fa9f6ba7fe4c40943793a2bb698c7bbdc" translate="yes" xml:space="preserve">
          <source>The flag can also be set by the STDLIB application variable &lt;code&gt;shell_strings&lt;/code&gt;. Defaults to &lt;code&gt;true&lt;/code&gt;, which means that lists of integers are printed using the string syntax, when possible. Value &lt;code&gt;false&lt;/code&gt; means that no lists are printed using the string syntax.</source>
          <target state="translated">Флаг также можно установить с помощью переменной приложения &lt;code&gt;shell_strings&lt;/code&gt; . По умолчанию &lt;code&gt;true&lt;/code&gt; , что означает, что списки целых чисел печатаются с использованием строкового синтаксиса, когда это возможно. Значение &lt;code&gt;false&lt;/code&gt; означает, что списки не печатаются с использованием строкового синтаксиса.</target>
        </trans-unit>
        <trans-unit id="16ee325443e908603dacad16b814927c10a42e37" translate="yes" xml:space="preserve">
          <source>The flag field of an atom cache reference has the following format:</source>
          <target state="translated">Поле флага ссылки на атомный кэш имеет следующий формат:</target>
        </trans-unit>
        <trans-unit id="a080305c71ef71f1663e7718a0bc9d58d29dd1e8" translate="yes" xml:space="preserve">
          <source>The flags &lt;code&gt;dir&lt;/code&gt;, &lt;code&gt;suite&lt;/code&gt;, and &lt;code&gt;group/case&lt;/code&gt; can be combined. For example, to run &lt;code&gt;x_SUITE&lt;/code&gt; and &lt;code&gt;y_SUITE&lt;/code&gt; in directory &lt;code&gt;testdir&lt;/code&gt;, as follows:</source>
          <target state="translated">Флаги &lt;code&gt;dir&lt;/code&gt; , &lt;code&gt;suite&lt;/code&gt; и &lt;code&gt;group/case&lt;/code&gt; можно комбинировать. Например, чтобы запустить &lt;code&gt;x_SUITE&lt;/code&gt; и &lt;code&gt;y_SUITE&lt;/code&gt; в каталоге &lt;code&gt;testdir&lt;/code&gt; , как показано ниже:</target>
        </trans-unit>
        <trans-unit id="b93b96139f6762ecd80290edd696f2ed98f35890" translate="yes" xml:space="preserve">
          <source>The flags specific to the MIB compiler can be specified by using the &lt;code&gt;+&lt;/code&gt; syntax:</source>
          <target state="translated">Флаги, специфичные для компилятора MIB, можно указать с помощью синтаксиса &lt;code&gt;+&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="428847ac69b6b0b0a5e6c4145d8ec6d570f6c395" translate="yes" xml:space="preserve">
          <source>The flex libraries. Without it, the flex powered codecs cannot be used.</source>
          <target state="translated">Библиотеки флекс.Без них невозможно использовать кодеки на гибких дисках.</target>
        </trans-unit>
        <trans-unit id="c159710396ee724ac90ec79947b2b5b4c1587632" translate="yes" xml:space="preserve">
          <source>The flex scanner is written using a tool called &lt;strong&gt;flex&lt;/strong&gt;. In order to be able to compile the flex scanner driver, this tool has to be available.</source>
          <target state="translated">Сканер flex написан с использованием инструмента под названием &lt;strong&gt;flex&lt;/strong&gt; . Этот инструмент должен быть доступен для компиляции драйвера гибкого сканера.</target>
        </trans-unit>
        <trans-unit id="d7c4ca511a9bd4686762da41fca66fa99a0af1b0" translate="yes" xml:space="preserve">
          <source>The floating point generating functions in this module waste the lowest bits when converting from an integer so they avoid this snag.</source>
          <target state="translated">Функции генерации с плавающей запятой в этом модуле при преобразовании из целого числа тратят младшие биты,чтобы избежать этой заминки.</target>
        </trans-unit>
        <trans-unit id="c041ae86c5f8c7016b0e10add46c29cac233bc88" translate="yes" xml:space="preserve">
          <source>The floating point value of &lt;code&gt;t&lt;/code&gt;.</source>
          <target state="translated">Значение &lt;code&gt;t&lt;/code&gt; с плавающей запятой .</target>
        </trans-unit>
        <trans-unit id="e419b2fab0b36bcecd87f0c3d0efca53ec378a69" translate="yes" xml:space="preserve">
          <source>The focus of the Erlang reference manual is on the language itself, not the implementation of it. The language constructs are described in text and with examples rather than formally specified. This is to make the manual more readable. The Erlang reference manual is not intended as a tutorial.</source>
          <target state="translated">Основное внимание в справочном руководстве по Эрлангу уделяется самому языку,а не его реализации.Языковые конструкции описываются в тексте и с примерами,а не формально.Это сделано для того,чтобы сделать руководство более читабельным.Справочное руководство по Эрлангу не является учебным пособием.</target>
        </trans-unit>
        <trans-unit id="14233773185c2d086e35c41f6b44cd3cb166311c" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;#hs_data{}&lt;/code&gt; record fields need to be set unless otherwise stated:</source>
          <target state="translated">Если не указано иное, необходимо установить следующие &lt;code&gt;#hs_data{}&lt;/code&gt; записи #hs_data {} :</target>
        </trans-unit>
        <trans-unit id="755882894d7fd28bede6b99ec073119565eb9367" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;MSAcc_Thread_State&lt;/code&gt;s are available. All states are exclusive, meaning that a thread cannot be in two states at once. So, if you add the numbers of all counters in a thread, you get the total runtime for that thread.</source>
          <target state="translated">Доступны следующие &lt;code&gt;MSAcc_Thread_State&lt;/code&gt; . Все состояния являются исключительными, что означает, что поток не может находиться в двух состояниях одновременно. Итак, если вы сложите номера всех счетчиков в потоке, вы получите общее время выполнения этого потока.</target>
        </trans-unit>
        <trans-unit id="9f76f02eae75217eb2a5f3c4fb6a601b97548d9f" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;ct_hooks&lt;/code&gt; statement causes pretty printing of NETCONF traffic to separate logs for the connections named &lt;code&gt;nc_server1&lt;/code&gt; and &lt;code&gt;nc_server2&lt;/code&gt;. Any other connections are logged to default NETCONF log.</source>
          <target state="translated">Следующий оператор &lt;code&gt;ct_hooks&lt;/code&gt; вызывает красивую печать трафика NETCONF для разделения журналов для соединений с именами &lt;code&gt;nc_server1&lt;/code&gt; и &lt;code&gt;nc_server2&lt;/code&gt; . Любые другие подключения регистрируются в журнале NETCONF по умолчанию.</target>
        </trans-unit>
        <trans-unit id="60898a22579d212b66c103e94e65e3704c005128" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;ct_hooks&lt;/code&gt; statement causes printing of Telnet traffic to separate logs for the connections &lt;code&gt;server1&lt;/code&gt; and &lt;code&gt;server2&lt;/code&gt;. Traffic for any other connections is logged in the default Telnet log.</source>
          <target state="translated">Следующий оператор &lt;code&gt;ct_hooks&lt;/code&gt; вызывает печать трафика Telnet для разделения журналов для соединений &lt;code&gt;server1&lt;/code&gt; и &lt;code&gt;server2&lt;/code&gt; . Трафик для любых других подключений регистрируется в журнале Telnet по умолчанию.</target>
        </trans-unit>
        <trans-unit id="1bc4e72d8d4d5620576eec368f8680635ae64598" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;upgrade&lt;/code&gt; instruction is used for supervisors:</source>
          <target state="translated">Для супервизоров используется следующая инструкция по &lt;code&gt;upgrade&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="7721dfe03e9c154ea4e1c34f92eac19aef611c75" translate="yes" xml:space="preserve">
          <source>The following ASN.1 type is used for real numbers:</source>
          <target state="translated">Для вещественных чисел используется следующий тип ASN.1:</target>
        </trans-unit>
        <trans-unit id="da76d97e2e28f2e89ed233e203305a30d4111d61" translate="yes" xml:space="preserve">
          <source>The following BIFs, which are used to create processes, return values of this data type:</source>
          <target state="translated">Следующие BIF,которые используются для создания процессов,возвращают значения этого типа данных:</target>
        </trans-unit>
        <trans-unit id="ca462812b4b616c1a4a1c09a1f4a79f0f85f0e72" translate="yes" xml:space="preserve">
          <source>The following CTH logs information about a test run into a format parseable by &lt;code&gt;file:consult/1&lt;/code&gt; (in Kernel):</source>
          <target state="translated">Следующий CTH регистрирует информацию о тестовом запуске в формате, который можно анализировать по &lt;code&gt;file:consult/1&lt;/code&gt; (в ядре):</target>
        </trans-unit>
        <trans-unit id="9e71ecc8d7cab4d72922ae4ed2e33319f8122346" translate="yes" xml:space="preserve">
          <source>The following I/O request is optional to implement and a client is to be prepared for an error return:</source>
          <target state="translated">Следующий запрос на ввод/вывод является необязательным для реализации,и клиент должен быть готов к возвращению ошибки:</target>
        </trans-unit>
        <trans-unit id="0827ebd08d8a02057148a27dc548b0eb839f8cf1" translate="yes" xml:space="preserve">
          <source>The following Item's are valid:</source>
          <target state="translated">Следующие пункты действительны:</target>
        </trans-unit>
        <trans-unit id="8931f5659efe1bfa45e91bfba89a696d04a3885e" translate="yes" xml:space="preserve">
          <source>The following Kernel configuration parameters apply to Logger:</source>
          <target state="translated">Следующие параметры конфигурации ядра применяются к Журнализатору:</target>
        </trans-unit>
        <trans-unit id="9f963b53749dee80b3ebd6d93009cb72dd723e7e" translate="yes" xml:space="preserve">
          <source>The following Logger API functions can trigger this callback:</source>
          <target state="translated">Следующие функции API регистратора могут вызвать этот обратный вызов:</target>
        </trans-unit>
        <trans-unit id="59d2e24198262f39e955cdd7b2bb38352780ad95" translate="yes" xml:space="preserve">
          <source>The following MIBs are built-ins of the Erlang SNMP compiler: SNMPv2-SMI, RFC-1215, RFC-1212, SNMPv2-TC, SNMPv2-CONF, and RFC1155-SMI. They cannot therefore be compiled separately.</source>
          <target state="translated">Следующие MIB являются встроенными компонентами SNMP компилятора Erlang:SNMPv2-SMI,RFC-1215,RFC-1212,SNMPv2-TC,SNMPv2-CONF и RFC1155-SMI.Поэтому они не могут быть скомпилированы отдельно.</target>
        </trans-unit>
        <trans-unit id="52d19d789c25255eed9a979999ac8863363f1228" translate="yes" xml:space="preserve">
          <source>The following MIBs are defined in the OTP system:</source>
          <target state="translated">В системе ОТП определены следующие МИБ:</target>
        </trans-unit>
        <trans-unit id="f58c9a6d16d6a288dad320d6e8998be16e44721f" translate="yes" xml:space="preserve">
          <source>The following PEM file has only one entry, a private DSA key:</source>
          <target state="translated">Следующий файл PEM имеет только одну запись,частный DSA ключ:</target>
        </trans-unit>
        <trans-unit id="0a1e06caf4405f8154436d98b0b535f1d1da5766" translate="yes" xml:space="preserve">
          <source>The following PEM file has only one entry, a private RSA key:</source>
          <target state="translated">Следующий файл PEM имеет только одну запись,частный ключ RSA:</target>
        </trans-unit>
        <trans-unit id="bf6e0ebe475e308588ade6bad38f0a1b0d7fad83" translate="yes" xml:space="preserve">
          <source>The following activity access contexts are currently supported:</source>
          <target state="translated">В настоящее время поддерживаются следующие условия доступа к деятельности:</target>
        </trans-unit>
        <trans-unit id="9f7f3d9893eedee1a260cc5b49377b2f1f743ccc" translate="yes" xml:space="preserve">
          <source>The following algorithms are provided:</source>
          <target state="translated">Представлены следующие алгоритмы:</target>
        </trans-unit>
        <trans-unit id="390e0b5eb1e3b7230aad019d3e06855c658180f0" translate="yes" xml:space="preserve">
          <source>The following allocators are present:</source>
          <target state="translated">Присутствуют следующие аллокаторы:</target>
        </trans-unit>
        <trans-unit id="36398232558556592a65d630a38e59c406ca80e9" translate="yes" xml:space="preserve">
          <source>The following applies to daemons (servers).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76ee8987dc9d6df07cd6d0206a431e8aa313a2bb" translate="yes" xml:space="preserve">
          <source>The following apply:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4821bb8c6c116cef14beeab931818f4969279b8" translate="yes" xml:space="preserve">
          <source>The following are primitives, which do not contain other test sets as arguments:</source>
          <target state="translated">Ниже приведены примитивы,которые не содержат других наборов тестов в качестве аргументов:</target>
        </trans-unit>
        <trans-unit id="b988567cb4ebfa83309f7036c88dc38f105b9489" translate="yes" xml:space="preserve">
          <source>The following are reserved words in Erlang:</source>
          <target state="translated">Следующие зарезервированные слова в Эрланге:</target>
        </trans-unit>
        <trans-unit id="23a58c2300ac41928639f29dbe01e89240b2ddfc" translate="yes" xml:space="preserve">
          <source>The following are some of the most important and attractive capabilities provided by Mnesia:</source>
          <target state="translated">Ниже приведены некоторые из наиболее важных и привлекательных возможностей,предоставляемых Мнезией:</target>
        </trans-unit>
        <trans-unit id="446aea39bd6d645ca35077d4770c830fb9a617e9" translate="yes" xml:space="preserve">
          <source>The following are the fun clauses parameter lists:</source>
          <target state="translated">Ниже приведены списки параметров забавных клаузул:</target>
        </trans-unit>
        <trans-unit id="b9a2d4753855996ec68919109001bdcfdfab1176" translate="yes" xml:space="preserve">
          <source>The following are the horizontal space characters:</source>
          <target state="translated">Ниже приведены символы пробела по горизонтали:</target>
        </trans-unit>
        <trans-unit id="5e7dca09b462b81dbf316dd39e6aa81ce86d2e59" translate="yes" xml:space="preserve">
          <source>The following are the main features of Trace Tool Builder:</source>
          <target state="translated">Ниже приведены основные характеристики Trace Tool Builder:</target>
        </trans-unit>
        <trans-unit id="4e925277c492d9e6356d76bfacfb3ab772525403" translate="yes" xml:space="preserve">
          <source>The following are the most widely spread encodings:</source>
          <target state="translated">Ниже приведены наиболее распространенные кодировки:</target>
        </trans-unit>
        <trans-unit id="1d30a8b8e3b663292a1ad0bd4a17fb0b5f2c8ae2" translate="yes" xml:space="preserve">
          <source>The following are the possible runtime errors:</source>
          <target state="translated">Ниже приведены возможные ошибки во время выполнения:</target>
        </trans-unit>
        <trans-unit id="11e4ce827beb7d257dafdeafaf65224573e225ee" translate="yes" xml:space="preserve">
          <source>The following are the predefined sets of subpatterns:</source>
          <target state="translated">Ниже приведены предопределенные наборы подмаски:</target>
        </trans-unit>
        <trans-unit id="b8aeeeb29a22d61e4651a7f7c64491c002da04f2" translate="yes" xml:space="preserve">
          <source>The following are the supported class names:</source>
          <target state="translated">Ниже приведены поддерживаемые имена классов:</target>
        </trans-unit>
        <trans-unit id="0ae73677bdb343efa75ef5239df98c3995eb5a45" translate="yes" xml:space="preserve">
          <source>The following are the vertical space characters:</source>
          <target state="translated">Ниже приведены вертикальные пробелы:</target>
        </trans-unit>
        <trans-unit id="e13eea1a0552634ec49861dfedef83923f03fb36" translate="yes" xml:space="preserve">
          <source>The following argument is required:</source>
          <target state="translated">Требуется следующий аргумент:</target>
        </trans-unit>
        <trans-unit id="b3fe3a25174fa0e4b7397791cbe163414c93cae5" translate="yes" xml:space="preserve">
          <source>The following behavior applies if &lt;code&gt;Reason&lt;/code&gt; is any term, except &lt;code&gt;normal&lt;/code&gt; or &lt;code&gt;kill&lt;/code&gt;:</source>
          <target state="translated">Следующее поведение применяется, если &lt;code&gt;Reason&lt;/code&gt; - это любой термин, кроме &lt;code&gt;normal&lt;/code&gt; или &lt;code&gt;kill&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="ed43b5794a433578fe75d6227c8f8fec9b973992" translate="yes" xml:space="preserve">
          <source>The following built-in handlers exist:</source>
          <target state="translated">Существуют следующие встроенные обработчики:</target>
        </trans-unit>
        <trans-unit id="e48df9c121f20b43e9189951e6b161ed4e78306b" translate="yes" xml:space="preserve">
          <source>The following built-in list types also exist, but they are expected to be rarely used. Hence, they have long names:</source>
          <target state="translated">Следующие встроенные типы списков также существуют,но предполагается,что они будут использоваться редко.Поэтому они имеют длинные имена:</target>
        </trans-unit>
        <trans-unit id="56efeb40efc4a8607cb2cf3d6a1bbfa58461fecd" translate="yes" xml:space="preserve">
          <source>The following call would create a table that is replicated on two nodes, has an extra index on attribute &lt;code&gt;y&lt;/code&gt;, and is of type &lt;code&gt;bag&lt;/code&gt;.</source>
          <target state="translated">Следующий вызов создаст таблицу, которая реплицируется на двух узлах, имеет дополнительный индекс по атрибуту &lt;code&gt;y&lt;/code&gt; и имеет тип &lt;code&gt;bag&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b93cef34769b4ac84bcc58e1f7579a27e1900915" translate="yes" xml:space="preserve">
          <source>The following calls use the default client profile. Use the proxy &lt;code&gt;&quot;www-proxy.mycompany.com:8000&quot;&lt;/code&gt;, except from requests to localhost. This applies to all the following requests.</source>
          <target state="translated">Следующие вызовы используют профиль клиента по умолчанию. Используйте прокси &lt;code&gt;&quot;www-proxy.mycompany.com:8000&quot;&lt;/code&gt; , за исключением запросов к localhost. Это относится ко всем следующим запросам.</target>
        </trans-unit>
        <trans-unit id="6ce6762a2b45b2a9419ebd342a2248363882b1ec" translate="yes" xml:space="preserve">
          <source>The following can be done from the shell:</source>
          <target state="translated">Из оболочки можно сделать следующее:</target>
        </trans-unit>
        <trans-unit id="53f1ccb49a8a37c5657c1e09929d43e77df7e6d3" translate="yes" xml:space="preserve">
          <source>The following can help you estimate the buffer requirements for a term. Notice that this information is implementation-specific, and can change in future versions. If you are unsure, use &lt;code&gt;erl_term_len()&lt;/code&gt;.</source>
          <target state="translated">Следующее может помочь вам оценить потребность в буфере для срока. Обратите внимание, что эта информация зависит от реализации и может измениться в будущих версиях. Если вы не уверены, используйте &lt;code&gt;erl_term_len()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0f875dcb652b105150192f44a7e364beec117361" translate="yes" xml:space="preserve">
          <source>The following capability flags are defined:</source>
          <target state="translated">Определены следующие флаги возможностей:</target>
        </trans-unit>
        <trans-unit id="b153457b0c6c74e16cf68b399d11c4fdbeda5276" translate="yes" xml:space="preserve">
          <source>The following capability identifiers, defined in RFC 4741 NETCONF Configuration Protocol, can be returned:</source>
          <target state="translated">Следующие идентификаторы возможностей,определенные в конфигурационном протоколе RFC 4741 NETCONF,могут быть возвращены:</target>
        </trans-unit>
        <trans-unit id="729ccfc9617ba57afc9d1a89abcf609beb87615d" translate="yes" xml:space="preserve">
          <source>The following causes an error at compile time:</source>
          <target state="translated">Следующее приводит к ошибке во время компиляции:</target>
        </trans-unit>
        <trans-unit id="46da2b6d47972d1cbb42e35ed601e935a7066068" translate="yes" xml:space="preserve">
          <source>The following changes are added:</source>
          <target state="translated">Добавлены следующие изменения:</target>
        </trans-unit>
        <trans-unit id="223954bbc5bf81b4921c410a25f0bd6051babb47" translate="yes" xml:space="preserve">
          <source>The following code adds a parser interface to the grammar:</source>
          <target state="translated">Следующий код добавляет к грамматике интерфейс парсера:</target>
        </trans-unit>
        <trans-unit id="132d723fbc5d22b21ca88cffc9fa6e6381b81134" translate="yes" xml:space="preserve">
          <source>The following code defines a function &lt;code&gt;pconst(X)&lt;/code&gt; in the module &lt;code&gt;funparse&lt;/code&gt;, which returns a fun that parses a list of tokens:</source>
          <target state="translated">Следующий код определяет функцию &lt;code&gt;pconst(X)&lt;/code&gt; в модуле &lt;code&gt;funparse&lt;/code&gt; , которая возвращает удовольствие, которое анализирует список токенов:</target>
        </trans-unit>
        <trans-unit id="56844778b2176882fb2364c894e6a3f1cbf9d20a" translate="yes" xml:space="preserve">
          <source>The following code exemplifies a search with a non-normalized data model. To find all employees at department &lt;code&gt;Dep&lt;/code&gt; with a salary higher than &lt;code&gt;Salary&lt;/code&gt;, use the following code:</source>
          <target state="translated">Следующий код иллюстрирует поиск с ненормализованной моделью данных. Чтобы найти всех сотрудников отдела &lt;code&gt;Dep&lt;/code&gt; с зарплатой выше &lt;code&gt;Salary&lt;/code&gt; , используйте следующий код:</target>
        </trans-unit>
        <trans-unit id="3cf0020bc55d0fa1c895bb9fac0126cb39735295" translate="yes" xml:space="preserve">
          <source>The following code fragment is a simple example of a client connecting to a server at port 5678, transferring a binary, and closing the connection:</source>
          <target state="translated">Следующий фрагмент кода представляет собой простой пример подключения клиента к серверу по порту 5678,передачи двоичного файла и закрытия соединения:</target>
        </trans-unit>
        <trans-unit id="aa22415381d6bc1bea3d2a6fcf7c7cf3cea03a9e" translate="yes" xml:space="preserve">
          <source>The following code illustrates how a &lt;code&gt;Mnesia&lt;/code&gt; table is converted to be a fragmented table and how more fragments are added later:</source>
          <target state="translated">Следующий код показывает, как таблица &lt;code&gt;Mnesia&lt;/code&gt; преобразуется в фрагментированную таблицу и как позже добавляются дополнительные фрагменты:</target>
        </trans-unit>
        <trans-unit id="4edc8cb91e65e300012f8cc9f371bfd50b18952b" translate="yes" xml:space="preserve">
          <source>The following code is executed to achieve this:</source>
          <target state="translated">Для этого выполняется следующий код:</target>
        </trans-unit>
        <trans-unit id="bf087b2d7139054e72c10f87277f4e9105ae6aae" translate="yes" xml:space="preserve">
          <source>The following code is from the sample file &lt;code&gt;next_perm.cc&lt;/code&gt;. The driver entry looks like before, but also contains the callback &lt;code&gt;ready_async&lt;/code&gt;.</source>
          <target state="translated">Следующий код &lt;code&gt;next_perm.cc&lt;/code&gt; из образца файла next_perm.cc . Запись драйвера выглядит так же, как и раньше, но также содержит обратный вызов &lt;code&gt;ready_async&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fd629e06b526d07e792ece40b307e86e30aa4c96" translate="yes" xml:space="preserve">
          <source>The following code is slightly slower because the shape of the list of arguments is unknown at compile time.</source>
          <target state="translated">Следующий код немного медленнее,так как форма списка аргументов неизвестна во время компиляции.</target>
        </trans-unit>
        <trans-unit id="1c15d7bb6d9f5ccee5265bb8903dc3f1c45a0ae2" translate="yes" xml:space="preserve">
          <source>The following code is the Erlang part of the synchronous postgres driver, &lt;code&gt;pg_sync.erl&lt;/code&gt;:</source>
          <target state="translated">Следующий код является частью Erlang синхронного драйвера postgres, &lt;code&gt;pg_sync.erl&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="dca40145d4c0653ae61a32b900aff83a1d19f042" translate="yes" xml:space="preserve">
          <source>The following code reduces the search space and is more efficient:</source>
          <target state="translated">Следующий код сокращает пространство поиска и является более эффективным:</target>
        </trans-unit>
        <trans-unit id="d491fd2b65326bcc2d9548ada2c065f112cca208" translate="yes" xml:space="preserve">
          <source>The following code:</source>
          <target state="translated">Следующий код:</target>
        </trans-unit>
        <trans-unit id="10e52292e9dee4a0e3fd6642d8202ab55d1217aa" translate="yes" xml:space="preserve">
          <source>The following command are directly available for indentation.</source>
          <target state="translated">Следующая команда непосредственно доступна для отступа.</target>
        </trans-unit>
        <trans-unit id="a54ee1055259696f0cf635190505ae13de7c7874" translate="yes" xml:space="preserve">
          <source>The following commands and functions are used to initiate the &lt;code&gt;Company&lt;/code&gt; database:</source>
          <target state="translated">Следующие команды и функции используются для запуска базы данных &lt;code&gt;Company&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="a32fdf2e9df498e6565b300a038b14cb68a1735d" translate="yes" xml:space="preserve">
          <source>The following compilers are supported:</source>
          <target state="translated">Поддерживаются следующие компиляторы:</target>
        </trans-unit>
        <trans-unit id="8cfc763d98ab927b97e114c3d3db99c10685fbd5" translate="yes" xml:space="preserve">
          <source>The following configuration file causes raw logging of all NETCONF traffic in to one single text file:</source>
          <target state="translated">Следующий конфигурационный файл вызывает необработанное протоколирование всего трафика NETCONF в одном текстовом файле:</target>
        </trans-unit>
        <trans-unit id="f14322549f377ad730735aaebaa29c12d04adf7a" translate="yes" xml:space="preserve">
          <source>The following configuration parameters can be used to change the default values for time interval and threshold:</source>
          <target state="translated">Следующие параметры конфигурации могут быть использованы для изменения значений по умолчанию для временного интервала и порога:</target>
        </trans-unit>
        <trans-unit id="193ce5872a1a6b1151ebfa805bdd3ed1418c9a2b" translate="yes" xml:space="preserve">
          <source>The following configuration parameters can be used to change the default values for time intervals and thresholds:</source>
          <target state="translated">Следующие параметры конфигурации могут быть использованы для изменения значений по умолчанию для временных интервалов и пороговых значений:</target>
        </trans-unit>
        <trans-unit id="b8d3f81dcc2fefa92fa2bf61c616cec96c1c09f3" translate="yes" xml:space="preserve">
          <source>The following custom metadata keys have special meaning:</source>
          <target state="translated">Следующие пользовательские клавиши метаданных имеют особое значение:</target>
        </trans-unit>
        <trans-unit id="9245e4a9bd60ce63efee4dfb325d04bbf467167e" translate="yes" xml:space="preserve">
          <source>The following data types are used in the functions below:</source>
          <target state="translated">В приведенных ниже функциях используются следующие типы данных:</target>
        </trans-unit>
        <trans-unit id="48be2dc36e35956a8e3588aca9cfc84f77c588b6" translate="yes" xml:space="preserve">
          <source>The following data types are used in the functions for &lt;code&gt;public_key&lt;/code&gt;:</source>
          <target state="translated">В функциях для &lt;code&gt;public_key&lt;/code&gt; используются следующие типы данных :</target>
        </trans-unit>
        <trans-unit id="cbde7c9ddb7eaf9bcf77f4db441bfdef5bb61047" translate="yes" xml:space="preserve">
          <source>The following data types are used in the functions for &lt;code&gt;ssl_session_cache_api&lt;/code&gt;:</source>
          <target state="translated">В функциях для &lt;code&gt;ssl_session_cache_api&lt;/code&gt; используются следующие типы данных :</target>
        </trans-unit>
        <trans-unit id="5ae4ee24ac66de733888ad1963744fbfbce6e5f4" translate="yes" xml:space="preserve">
          <source>The following data types are used in the functions for SSL/TLS/DTLS:</source>
          <target state="translated">В функциях для SSL/TLS/DTLS используются следующие типы данных:</target>
        </trans-unit>
        <trans-unit id="4f214626dc0835db98c5ea380264f0633bf284ba" translate="yes" xml:space="preserve">
          <source>The following data types are used in the functions for mod_esi:</source>
          <target state="translated">В функциях для mod_esi используются следующие типы данных:</target>
        </trans-unit>
        <trans-unit id="79cd8536de4f9b5bd968aa07ab5a04ff86d91140" translate="yes" xml:space="preserve">
          <source>The following data types concern the DNS client:</source>
          <target state="translated">Следующие типы данных касаются DNS-клиента:</target>
        </trans-unit>
        <trans-unit id="59d37752ba97444275d3af617925c81e1b46edf9" translate="yes" xml:space="preserve">
          <source>The following data types concern the resolver:</source>
          <target state="translated">Следующие типы данных относятся к резольверу:</target>
        </trans-unit>
        <trans-unit id="5ceb88a84344840ee75edbb731e8eaf81fb9c735" translate="yes" xml:space="preserve">
          <source>The following data-types are used in the functions below:</source>
          <target state="translated">В приведенных ниже функциях используются следующие типы данных:</target>
        </trans-unit>
        <trans-unit id="1484bd1263f6980852c4824bd6d929836444bb83" translate="yes" xml:space="preserve">
          <source>The following definitions are used in the SNMP User's Guide.</source>
          <target state="translated">В Руководстве пользователя SNMP используются следующие определения.</target>
        </trans-unit>
        <trans-unit id="39b4ce09657d83e126a92760457f3f4da1a2f574" translate="yes" xml:space="preserve">
          <source>The following dialog within the Erlang shell illustrates the functionality of the Erlang ODBC interface. The table used in the example does not have any relevance to anything that exist in reality, it is just a simple example. The example was created using &lt;code&gt;sqlserver 7.0 with servicepack 1&lt;/code&gt; as database and the ODBC driver for &lt;code&gt;sqlserver&lt;/code&gt; with version &lt;code&gt;2000.80.194.00&lt;/code&gt;.</source>
          <target state="translated">Следующий диалог в оболочке Erlang иллюстрирует функциональность интерфейса Erlang ODBC. Таблица, использованная в примере, не имеет отношения ни к чему, что существует в действительности, это всего лишь простой пример. Пример был создан с использованием &lt;code&gt;sqlserver 7.0 with servicepack 1&lt;/code&gt; качестве базы данных и драйвером ODBC для &lt;code&gt;sqlserver&lt;/code&gt; с версией &lt;code&gt;2000.80.194.00&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="99bffcf83f746fcc6153881b4b1631f84352b58c" translate="yes" xml:space="preserve">
          <source>The following directory must exist in the system to run the manager:</source>
          <target state="translated">Для запуска менеджера в системе должен существовать следующий каталог:</target>
        </trans-unit>
        <trans-unit id="b4067663f255bf23f8ace734d9a80cb7e8eb13f2" translate="yes" xml:space="preserve">
          <source>The following distinct values are recognised:</source>
          <target state="translated">Признаются следующие отдельные значения:</target>
        </trans-unit>
        <trans-unit id="5bbdb173d3c169abec87c3f3bd04716fdb1d1176" translate="yes" xml:space="preserve">
          <source>The following elements are always present in the list for both local and external funs:</source>
          <target state="translated">Следующие элементы всегда присутствуют в списке как для локальных,так и для внешних развлечений:</target>
        </trans-unit>
        <trans-unit id="314e2c48845f15727630c647a2291eeb21cc401b" translate="yes" xml:space="preserve">
          <source>The following elements are only present in the list if &lt;code&gt;Fun&lt;/code&gt; is local:</source>
          <target state="translated">Следующие элементы присутствуют в списке, только если &lt;code&gt;Fun&lt;/code&gt; является локальным:</target>
        </trans-unit>
        <trans-unit id="f117ec12e436f6ca90db1a4bc190e20fe521a5b3" translate="yes" xml:space="preserve">
          <source>The following encoding modules are provided:</source>
          <target state="translated">Предоставляются следующие модули кодирования:</target>
        </trans-unit>
        <trans-unit id="77da27c3c246440f97582892c2d759bcdbc2e044" translate="yes" xml:space="preserve">
          <source>The following environment variables are recognized by &lt;code&gt;run_erl&lt;/code&gt; and change the logging behavior. For more information, see the previous section.</source>
          <target state="translated">Следующие переменные среды распознаются &lt;code&gt;run_erl&lt;/code&gt; и меняют поведение журнала. Для получения дополнительной информации см. Предыдущий раздел.</target>
        </trans-unit>
        <trans-unit id="555e6e3612dc9741d46001a128eafcf81c3f1408" translate="yes" xml:space="preserve">
          <source>The following equalities hold for all sequences:</source>
          <target state="translated">Следующие равновесия сохраняются для всех последовательностей:</target>
        </trans-unit>
        <trans-unit id="514df84a2b14f584709cf8e0a980decde643a888" translate="yes" xml:space="preserve">
          <source>The following example checks if a specific Erlang process is alive:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31645542bb6c8a8301b513644f9cd8b30b64cec9" translate="yes" xml:space="preserve">
          <source>The following example demonstrates the basic functionality used to run the Erlang ASN.1 compiler.</source>
          <target state="translated">Следующий пример демонстрирует базовую функциональность,используемую для запуска компилятора Erlang ASN.1.</target>
        </trans-unit>
        <trans-unit id="80f9ad21016f571b21439d39ef29483bf86436fd" translate="yes" xml:space="preserve">
          <source>The following example generates all permutations of the elements in a list:</source>
          <target state="translated">Следующий пример генерирует все перестановки элементов в списке:</target>
        </trans-unit>
        <trans-unit id="c404080201f0735af63fd0d67d38459effaabe41" translate="yes" xml:space="preserve">
          <source>The following example illustrate how code can be divided into a generic and a specific part. Consider the following code (written in plain Erlang) for a simple server, which keeps track of a number of &quot;channels&quot;. Other processes can allocate and free the channels by calling the functions &lt;code&gt;alloc/0&lt;/code&gt; and &lt;code&gt;free/1&lt;/code&gt;, respectively.</source>
          <target state="translated">В следующем примере показано, как код можно разделить на общую и конкретную части. Рассмотрим следующий код (написанный на простом Erlang) для простого сервера, который отслеживает количество &amp;laquo;каналов&amp;raquo;. Другие процессы могут выделять и освобождать каналы, вызывая функции &lt;code&gt;alloc/0&lt;/code&gt; и &lt;code&gt;free/1&lt;/code&gt; соответственно.</target>
        </trans-unit>
        <trans-unit id="49ac7049a1dcc2d7a9ce14f9a85fbfcae1153db4" translate="yes" xml:space="preserve">
          <source>The following example illustrates a simple, functional parser that parses the grammar:</source>
          <target state="translated">Следующий пример иллюстрирует простой,функциональный парсер,который анализирует грамматику:</target>
        </trans-unit>
        <trans-unit id="8140848b7fdb3cf3311bc85e2c217120f0d742dd" translate="yes" xml:space="preserve">
          <source>The following example illustrates a situation in which we have an SNMP table that we wish to implement as a Mnesia table. The table stores information about employees at a company. Each employee is indexed with the department number and the name.</source>
          <target state="translated">Следующий пример иллюстрирует ситуацию,в которой у нас есть таблица SNMP,которую мы хотим реализовать в качестве таблицы Мнезии.В таблице хранится информация о сотрудниках компании.Каждый сотрудник проиндексирован с номером отдела и именем.</target>
        </trans-unit>
        <trans-unit id="e0bf2809ff12bfda2aa29b8a9ba782d668e893f5" translate="yes" xml:space="preserve">
          <source>The following example illustrates how this function and &lt;code&gt;proc_lib:start_link/3&lt;/code&gt; are used:</source>
          <target state="translated">В следующем примере показано, как используются эта функция и &lt;code&gt;proc_lib:start_link/3&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="474a94a5e901e0dd50063b0b025da701b6e45408" translate="yes" xml:space="preserve">
          <source>The following example illustrates the difference between type &lt;code&gt;set&lt;/code&gt; and &lt;code&gt;bag&lt;/code&gt;:</source>
          <target state="translated">Следующий пример иллюстрирует разницу между &lt;code&gt;set&lt;/code&gt; типов и &lt;code&gt;bag&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="39a99dfd22c81e72385e303daaf447a32f1dcfba" translate="yes" xml:space="preserve">
          <source>The following example illustrates this idea:</source>
          <target state="translated">Следующий пример иллюстрирует эту идею:</target>
        </trans-unit>
        <trans-unit id="0064c1a1c0bd35406debf90dd3f22d06ce617d65" translate="yes" xml:space="preserve">
          <source>The following example illustrates use of option &lt;code&gt;{active,once}&lt;/code&gt; and multiple accepts by implementing a server as a number of worker processes doing accept on a single listening socket. Function &lt;code&gt;start/2&lt;/code&gt; takes the number of worker processes and the port number on which to listen for incoming connections. If &lt;code&gt;LPort&lt;/code&gt; is specified as &lt;code&gt;0&lt;/code&gt;, an ephemeral port number is used, which is why the start function returns the actual port number allocated:</source>
          <target state="translated">В следующем примере показано использование опции &lt;code&gt;{active,once}&lt;/code&gt; и множественных приемов путем реализации сервера в виде нескольких рабочих процессов, выполняющих прием на одном слушающем сокете. Функция &lt;code&gt;start/2&lt;/code&gt; принимает количество рабочих процессов и номер порта, на котором следует прослушивать входящие соединения. Если &lt;code&gt;LPort&lt;/code&gt; указан как &lt;code&gt;0&lt;/code&gt; , используется временный номер порта, поэтому функция start возвращает фактический номер порта:</target>
        </trans-unit>
        <trans-unit id="86c0c5045f0b4867ff5d5e4af410f343d35c255f" translate="yes" xml:space="preserve">
          <source>The following example is a long dialog with the shell. Commands starting with &lt;code&gt;&amp;gt;&lt;/code&gt; are inputs to the shell. All other lines are output from the shell.</source>
          <target state="translated">Следующий пример - длинный диалог с оболочкой. Команды, начинающиеся с &lt;code&gt;&amp;gt;&lt;/code&gt; , являются входными данными для оболочки. Все остальные строки выводятся из оболочки.</target>
        </trans-unit>
        <trans-unit id="10240151e7e7d2b5c92ad81d3640bc34e05d9082" translate="yes" xml:space="preserve">
          <source>The following example is more complex:</source>
          <target state="translated">Следующий пример более сложный:</target>
        </trans-unit>
        <trans-unit id="2d992e491915820ad2afb49cfea9c8e41cff67a2" translate="yes" xml:space="preserve">
          <source>The following example is useful when new object code is to be loaded on all nodes in the network, and indicates some side effects that RPCs can produce:</source>
          <target state="translated">Следующий пример полезен,когда новый объектный код должен быть загружен на все узлы сети,и указывает на некоторые побочные эффекты,которые могут дать RPC:</target>
        </trans-unit>
        <trans-unit id="1bc5ca4ed5e654ab061544449ba776cebd53a7ec" translate="yes" xml:space="preserve">
          <source>The following example selects UTF-8 as default encoding:</source>
          <target state="translated">В следующем примере в качестве кодировки по умолчанию выбирается UTF-8:</target>
        </trans-unit>
        <trans-unit id="51e5b893c5c0823be8635b7d769cf2d225ca2947" translate="yes" xml:space="preserve">
          <source>The following example shows a &quot;manual&quot; implementation of the EX1-MIB in Erlang. In this example, the values of the objects are stored in an Erlang server. The server has a 2-tuple as loop data, where the first element is the value of variable &lt;code&gt;myName&lt;/code&gt;, and the second is a sorted list of rows in the table &lt;code&gt;friendsTable&lt;/code&gt;. Each row is a 4-tuple.</source>
          <target state="translated">В следующем примере показана &amp;laquo;ручная&amp;raquo; реализация EX1-MIB в Erlang. В этом примере значения объектов хранятся на сервере Erlang. Сервер имеет 2-кортеж в виде данных цикла, где первый элемент - это значение переменной &lt;code&gt;myName&lt;/code&gt; , а второй - отсортированный список строк в таблице &lt;code&gt;friendsTable&lt;/code&gt; . Каждая строка представляет собой 4 кортежа.</target>
        </trans-unit>
        <trans-unit id="0dda83918f4c357871181a8e692213f82ec6620d" translate="yes" xml:space="preserve">
          <source>The following example shows a &lt;code&gt;manager.conf&lt;/code&gt; file:</source>
          <target state="translated">В следующем примере показан файл &lt;code&gt;manager.conf&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="3692690cff3bbc46fbe7542193823a072dbd398f" translate="yes" xml:space="preserve">
          <source>The following example shows a C program communicating with an Erlang program over a plain port with home made encoding:</source>
          <target state="translated">В следующем примере показана программа на C,взаимодействующая с программой Erlang через обычный порт с домашней кодировкой:</target>
        </trans-unit>
        <trans-unit id="f6be2fbeb6192c8a5cb94de6b9da0c5dd128e807" translate="yes" xml:space="preserve">
          <source>The following example shows a C program communicating with an Erlang program over a plain port with the Erlang external term format encoding:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d9615b54f64438d5e8028f7a0519b6178976cdb" translate="yes" xml:space="preserve">
          <source>The following example shows a process performing a certain action, and if this action is not completed within a certain limit, the process is killed:</source>
          <target state="translated">В следующем примере показан процесс,выполняющий определенное действие,и если это действие не завершено в определенном пределе,то процесс завершается:</target>
        </trans-unit>
        <trans-unit id="1096089eeb70a3303a9760156d2d4be7631f7e69" translate="yes" xml:space="preserve">
          <source>The following example shows a simple pushbutton model for a toggling pushbutton implemented with &lt;code&gt;&lt;a href=&quot;#type-callback_mode&quot;&gt;&lt;strong&gt;callback mode&lt;/strong&gt;&lt;/a&gt;&lt;/code&gt;&lt;code&gt;state_functions&lt;/code&gt;. You can push the button and it replies if it went on or off, and you can ask for a count of how many times it has been pushed to switch on.</source>
          <target state="translated">В следующем примере показана простая модель кнопки для переключателя, реализованная в &lt;code&gt;&lt;a href=&quot;#type-callback_mode&quot;&gt;&lt;strong&gt;callback mode&lt;/strong&gt;&lt;/a&gt;&lt;/code&gt; &lt;code&gt;state_functions&lt;/code&gt; . Вы можете нажать кнопку, и она ответит, был ли он включен или выключен, и вы можете попросить подсчитать, сколько раз было нажато для включения.</target>
        </trans-unit>
        <trans-unit id="0dd42ec45016c93db472143966e5ca24703f9ed4" translate="yes" xml:space="preserve">
          <source>The following example shows a simple tool for &quot;debug tracing&quot;, that is, tracing of function calls with return values:</source>
          <target state="translated">В следующем примере показан простой инструмент для &quot;отладочной трассировки&quot;,т.е.трассировки вызовов функций с возвращаемыми значениями:</target>
        </trans-unit>
        <trans-unit id="19d3f1e8b5799f072b4359cce670be47936dfd69" translate="yes" xml:space="preserve">
          <source>The following example shows a slightly different solution:</source>
          <target state="translated">В следующем примере показано несколько иное решение:</target>
        </trans-unit>
        <trans-unit id="5d4636c02ccef3bb3a01dfd35e9b59f4a603be21" translate="yes" xml:space="preserve">
          <source>The following example shows a test suite that uses configuration functions to open and close a log file for the test cases (an operation that is unnecessary and irrelevant to perform by each test case):</source>
          <target state="translated">В следующем примере показан набор тестов,который использует конфигурационные функции для открытия и закрытия лог-файла для тестовых случаев (операция,которая не нужна и неактуальна для выполнения в каждом тестовом случае):</target>
        </trans-unit>
        <trans-unit id="e3b94c02f704d04153b1383ced31f3788f464a7b" translate="yes" xml:space="preserve">
          <source>The following example shows a transaction that raises the salary of certain employee numbers:</source>
          <target state="translated">В следующем примере показана сделка,в результате которой повышается заработная плата определенных сотрудников:</target>
        </trans-unit>
        <trans-unit id="f6d9b06dc36617a94b5e02afafc0ad8dfc4a0dad" translate="yes" xml:space="preserve">
          <source>The following example shows a valid &lt;code&gt;standard.conf&lt;/code&gt; file:</source>
          <target state="translated">В следующем примере показан действующий файл &lt;code&gt;standard.conf&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="bace4401d809de6e0147dcd93d7d2ad50c7143ee" translate="yes" xml:space="preserve">
          <source>The following example shows an &lt;code&gt;agent.conf&lt;/code&gt; file:</source>
          <target state="translated">В следующем примере показан файл &lt;code&gt;agent.conf&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="847239863685661d182c63f6a400e539c34b547a" translate="yes" xml:space="preserve">
          <source>The following example shows an Erlang program communicating with a C program over a plain port with home made encoding:</source>
          <target state="translated">В следующем примере показана программа Erlang,взаимодействующая с программой на Си через обычный порт с домашней кодировкой:</target>
        </trans-unit>
        <trans-unit id="53825087d6b7108771ca3d6e0c8ef6217b528b80" translate="yes" xml:space="preserve">
          <source>The following example shows an implementation of a table which is stored in Mnesia, but with some checks performed at set-request operations.</source>
          <target state="translated">В следующем примере показана реализация таблицы,которая хранится в Мнезии,но с некоторыми проверками,выполняемыми при операциях задания-запроса.</target>
        </trans-unit>
        <trans-unit id="595ffdab36e0d6fd3473bedf69696fe4094f27bb" translate="yes" xml:space="preserve">
          <source>The following example shows how &lt;code&gt;&lt;a href=&quot;mnesia#traverse_backup-4&quot;&gt;mnesia:traverse_backup&lt;/a&gt;&lt;/code&gt; can be used to rename a &lt;code&gt;db_node&lt;/code&gt; in a backup file:</source>
          <target state="translated">В следующем примере показано, как &lt;code&gt;&lt;a href=&quot;mnesia#traverse_backup-4&quot;&gt;mnesia:traverse_backup&lt;/a&gt;&lt;/code&gt; можно использовать для переименования &lt;code&gt;db_node&lt;/code&gt; в файле резервной копии:</target>
        </trans-unit>
        <trans-unit id="9fa86a2eb1c462e43e94db58a5942b848857fdbd" translate="yes" xml:space="preserve">
          <source>The following example shows how a shared subterm can be created:</source>
          <target state="translated">Следующий пример показывает,как можно создать общий подтерм:</target>
        </trans-unit>
        <trans-unit id="6776554b0d8b27d6e71dbb65c3430e626c70d4bf" translate="yes" xml:space="preserve">
          <source>The following example shows how it works. Assume the following specification is in file &lt;code&gt;PrimStrings.asn1&lt;/code&gt;:</source>
          <target state="translated">В следующем примере показано, как это работает. Предположим, что следующая спецификация находится в файле &lt;code&gt;PrimStrings.asn1&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="065c20024091e430c70da54bb041e138781615cf" translate="yes" xml:space="preserve">
          <source>The following example shows how lock contention for ETS tables can be minimized by having one ETS table for each scheduler. The table identifiers for the ETS tables are stored as a single persistent term:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d86195a9ba7fbeb4a3a2a88335f091528178a8bf" translate="yes" xml:space="preserve">
          <source>The following example shows how the &lt;code&gt;Erl_Interface&lt;/code&gt; library supports remote procedure calls:</source>
          <target state="translated">В следующем примере показано, как библиотека &lt;code&gt;Erl_Interface&lt;/code&gt; поддерживает удаленные вызовы процедур:</target>
        </trans-unit>
        <trans-unit id="d2278792ed447b1b0474672cdb32370ece1d60bb" translate="yes" xml:space="preserve">
          <source>The following example shows how these tasks are performed:</source>
          <target state="translated">Следующий пример показывает,как эти задачи выполняются:</target>
        </trans-unit>
        <trans-unit id="0eb710a17335cffa4195147f0b090692db507fb0" translate="yes" xml:space="preserve">
          <source>The following example shows how to access a record field:</source>
          <target state="translated">В следующем примере показано,как получить доступ к полю записи:</target>
        </trans-unit>
        <trans-unit id="5dc0d07b42694dec0693419e5a61930ecf09e7b5" translate="yes" xml:space="preserve">
          <source>The following example shows how to calculate alpha blending using maps to reference color and alpha channels. Enter the code in a file named &lt;code&gt;color.erl&lt;/code&gt;):</source>
          <target state="translated">В следующем примере показано, как рассчитать альфа-смешение с использованием карт для привязки цветовых и альфа-каналов. Введите код в файл с именем &lt;code&gt;color.erl&lt;/code&gt; ):</target>
        </trans-unit>
        <trans-unit id="c239b66af7053b04b58eb08cb9f4bfdfc1ec12a9" translate="yes" xml:space="preserve">
          <source>The following example shows how to change all letters in &lt;code&gt;L&lt;/code&gt; to upper case and then count them.</source>
          <target state="translated">В следующем примере показано, как заменить все буквы &lt;code&gt;L&lt;/code&gt; на верхний регистр и затем подсчитать их.</target>
        </trans-unit>
        <trans-unit id="a2b77ebb5034759887438d2b947908450b7a2b16" translate="yes" xml:space="preserve">
          <source>The following example shows how to find the length of a list. Enter the following code in a file named &lt;code&gt;tut4.erl&lt;/code&gt;):</source>
          <target state="translated">В следующем примере показано, как определить длину списка. Введите следующий код в файл с именем &lt;code&gt;tut4.erl&lt;/code&gt; ):</target>
        </trans-unit>
        <trans-unit id="cabff7d830edf1695f519312aec99e8c8a4f83ba" translate="yes" xml:space="preserve">
          <source>The following example shows how to override properties in a scenario with deeply nested groups:</source>
          <target state="translated">Следующий пример показывает,как переопределить свойства в сценарии с глубоко вложенными группами:</target>
        </trans-unit>
        <trans-unit id="5c2ed5f4e4ba13285a99659d63cce80153eafd62" translate="yes" xml:space="preserve">
          <source>The following example shows how to print &quot;Hello World!&quot; in 5 seconds:</source>
          <target state="translated">В следующем примере показано,как распечатать &quot;Hello World!&quot; за 5 секунд:</target>
        </trans-unit>
        <trans-unit id="42718ac464a329f1e12022f8904c812c6a41cbb0" translate="yes" xml:space="preserve">
          <source>The following example shows how to reconstruct Erlang source code from the debug information in a BEAM file &lt;code&gt;Beam&lt;/code&gt;:</source>
          <target state="translated">В следующем примере показано, как восстановить исходный код Erlang из отладочной информации в &lt;code&gt;Beam&lt;/code&gt; - файле BEAM :</target>
        </trans-unit>
        <trans-unit id="36d0968402854fd2204e4f8284f220657779d484" translate="yes" xml:space="preserve">
          <source>The following example shows how to set up a trace that is automatically stopped and formatted after 5 seconds:</source>
          <target state="translated">В следующем примере показано,как настроить трассу,которая автоматически останавливается и форматируется через 5 секунд:</target>
        </trans-unit>
        <trans-unit id="df6f58ee5cbd6c36262b198728ebe89b5c130696" translate="yes" xml:space="preserve">
          <source>The following example shows how to start an event manager and add an event handler to it by using the shell:</source>
          <target state="translated">Следующий пример показывает,как запустить менеджер событий и добавить в него обработчик событий с помощью оболочки командной строки:</target>
        </trans-unit>
        <trans-unit id="5fc528ca550abf4d7a434c41bd619acd146ef168" translate="yes" xml:space="preserve">
          <source>The following example shows how to update a record:</source>
          <target state="translated">Следующий пример показывает,как обновить запись:</target>
        </trans-unit>
        <trans-unit id="cbb352e84c7618cb263e59542ab972df29182936" translate="yes" xml:space="preserve">
          <source>The following example shows that the guard succeeds if &lt;code&gt;P&lt;/code&gt; is record of type &lt;code&gt;person&lt;/code&gt;:</source>
          <target state="translated">В следующем примере показано, что охрана успешна, если &lt;code&gt;P&lt;/code&gt; - запись типа &lt;code&gt;person&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c27427b8d967e296729a0172b87b5c1cb7821f6e" translate="yes" xml:space="preserve">
          <source>The following example shows the basic use of &lt;code&gt;ttb&lt;/code&gt; from the Erlang shell. Default options are used both for starting the tracer and for formatting (the custom fetch directory is however provided). This gives a trace log named &lt;code&gt;Node-ttb&lt;/code&gt; in the newly created directory, where &lt;code&gt;Node&lt;/code&gt; is the node name. The default handler prints the formatted trace messages in the shell:</source>
          <target state="translated">В следующем примере показано базовое использование &lt;code&gt;ttb&lt;/code&gt; из оболочки Erlang. Параметры по умолчанию используются как для запуска трассировщика, так и для форматирования (однако предоставляется каталог пользовательской выборки). Это дает журнал трассировки с именем &lt;code&gt;Node-ttb&lt;/code&gt; во вновь созданном каталоге, где &lt;code&gt;Node&lt;/code&gt; - это имя узла. Обработчик по умолчанию выводит форматированные сообщения трассировки в оболочку:</target>
        </trans-unit>
        <trans-unit id="33c400b4d7bc90cf1fb4285d622a80e1394cc3a9" translate="yes" xml:space="preserve">
          <source>The following example shows the reports generated when a process crashes. The example process is a &lt;code&gt;permanent&lt;/code&gt; process supervised by the &lt;code&gt;test_sup&lt;/code&gt; supervisor. A division by zero is executed and the error is first reported by the faulty process. A crash report is generated, as the process was started using function &lt;code&gt;proc_lib:spawn/3&lt;/code&gt;. The supervisor generates a supervisor report showing the crashed process. A progress report is generated when the process is finally restarted.</source>
          <target state="translated">В следующем примере показаны отчеты, созданные при сбое процесса. &lt;code&gt;test_sup&lt;/code&gt; процесс - это &lt;code&gt;permanent&lt;/code&gt; процесс, контролируемый супервизором test_sup . Выполняется деление на ноль, и об ошибке сначала сообщает неисправный процесс. Создается отчет о &lt;code&gt;proc_lib:spawn/3&lt;/code&gt; , поскольку процесс был запущен с помощью функции proc_lib: spawn / 3 . Супервизор создает отчет супервизора, показывающий сбой процесса. Отчет о ходе выполнения создается при окончательном перезапуске процесса.</target>
        </trans-unit>
        <trans-unit id="862f8553aec4c38b6ab11aac95b152a39de64479" translate="yes" xml:space="preserve">
          <source>The following example successfully constructs a bitstring of 7 bits, provided that all of X and Y are integers:</source>
          <target state="translated">Следующий пример успешно строчит битовую строку из 7 бит при условии,что все X и Y являются целыми числами:</target>
        </trans-unit>
        <trans-unit id="b791c8b4e90272c4405c7aeae4b46da3f6bb6c8f" translate="yes" xml:space="preserve">
          <source>The following example test suite shows some tests of a database server:</source>
          <target state="translated">Следующий пример набора тестов показывает некоторые тесты сервера баз данных:</target>
        </trans-unit>
        <trans-unit id="b6d5422eedcad9f5caa434fa7b207125a77682b5" translate="yes" xml:space="preserve">
          <source>The following example uses an explicit match specification to traverse the table:</source>
          <target state="translated">В следующем примере для перемещения по таблице используется явная спецификация соответствия:</target>
        </trans-unit>
        <trans-unit id="03a4faf8451b45afff5a5b66483b40e3d0740248" translate="yes" xml:space="preserve">
          <source>The following example was run on OTP/R8 on Solaris 8, all OTP internals in this example are very version dependent.</source>
          <target state="translated">Следующий пример был запущен на OTP/R8 на Solaris 8,все внутренние компоненты OTP в этом примере очень зависят от версии.</target>
        </trans-unit>
        <trans-unit id="46aa402444b6b984aa7f78159a16377f4c23a61a" translate="yes" xml:space="preserve">
          <source>The following example would match a simple Erlang integer or float and return a token which could be sent to the Erlang parser:</source>
          <target state="translated">Следующий пример будет соответствовать простому целому или плавающему Erlang и вернет токен,который может быть отправлен парсеру Erlang:</target>
        </trans-unit>
        <trans-unit id="1ed0171fcebc0acc5e68cccfc60c0381e6097256" translate="yes" xml:space="preserve">
          <source>The following examples assume that the current directory is the top of an Erlang/OTP installation.</source>
          <target state="translated">В следующих примерах предполагается,что текущая директория является вершиной установки Erlang/OTP.</target>
        </trans-unit>
        <trans-unit id="9e3429edd1596d9bb7aa13fb024e8021be184516" translate="yes" xml:space="preserve">
          <source>The following examples define simplified versions of a few Erlang data types:</source>
          <target state="translated">Следующие примеры определяют упрощенные версии нескольких типов данных Erlang:</target>
        </trans-unit>
        <trans-unit id="f8bd6a0797d263a055952885390142cbff7bc575" translate="yes" xml:space="preserve">
          <source>The following examples illustrate a function that returns an error, and the method to retrieve more detailed error information:</source>
          <target state="translated">Следующие примеры иллюстрируют функцию,которая возвращает ошибку,и способ получения более подробной информации об ошибке:</target>
        </trans-unit>
        <trans-unit id="02e03cbd265b56591c07a5d42abac6e2a5b935ba" translate="yes" xml:space="preserve">
          <source>The following examples illustrate how binaries are constructed, or matched, and how elements and tails are specified.</source>
          <target state="translated">Следующие примеры иллюстрируют,как создаются или сопоставляются двоичные файлы,и как задаются элементы и хвосты.</target>
        </trans-unit>
        <trans-unit id="8d07d5eba80d244e874b251ee11faf436794868c" translate="yes" xml:space="preserve">
          <source>The following examples illustrate these rules:</source>
          <target state="translated">Следующие примеры иллюстрируют эти правила:</target>
        </trans-unit>
        <trans-unit id="3f52213112fefdbc53dc8c9767c67e39d0c5dce9" translate="yes" xml:space="preserve">
          <source>The following examples show a dialogue with the Erlang shell. All the higher order functions discussed are exported from the module &lt;code&gt;lists&lt;/code&gt;.</source>
          <target state="translated">В следующих примерах показан диалог с оболочкой Erlang. Все обсуждаемые функции высшего порядка экспортируются из &lt;code&gt;lists&lt;/code&gt; модулей .</target>
        </trans-unit>
        <trans-unit id="4e3ffd9c68f42312446cc6dbf3d84bd42d447765" translate="yes" xml:space="preserve">
          <source>The following examples show parsers of the following type:</source>
          <target state="translated">В следующих примерах показаны парсеры следующего типа:</target>
        </trans-unit>
        <trans-unit id="18a677a2dd5f46875b6af8f8c34c6eb70fbe49be" translate="yes" xml:space="preserve">
          <source>The following examples show the resulting C programs. First a C node server using short node names:</source>
          <target state="translated">В следующих примерах показаны получившиеся программы на языке С.Сначала сервер узлов на C,использующий короткие имена узлов:</target>
        </trans-unit>
        <trans-unit id="379499ad8751de711870d7f29677a3a780a463f0" translate="yes" xml:space="preserve">
          <source>The following examples show the two startup options:</source>
          <target state="translated">В следующих примерах показаны два варианта ввода в эксплуатацию:</target>
        </trans-unit>
        <trans-unit id="1cdf118319fd331ed388451fe6b82def7ded6fa8" translate="yes" xml:space="preserve">
          <source>The following examples use the utility function &lt;code&gt;&lt;a href=&quot;ssh#start-0&quot;&gt; ssh:start/0&lt;/a&gt;&lt;/code&gt; to start all needed applications (&lt;code&gt;crypto&lt;/code&gt;, &lt;code&gt;public_key&lt;/code&gt;, and &lt;code&gt;ssh&lt;/code&gt;). All examples are run in an Erlang shell, or in a bash shell, using &lt;strong&gt;openssh&lt;/strong&gt; to illustrate how the &lt;code&gt;ssh&lt;/code&gt; application can be used. The examples are run as the user &lt;code&gt;otptest&lt;/code&gt; on a local network where the user is authorized to log in over &lt;code&gt;ssh&lt;/code&gt; to the host &lt;strong&gt;tarlop&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2e4438a8f07510d88683d4b04f8f84085bdfc63" translate="yes" xml:space="preserve">
          <source>The following examples use the utility function &lt;code&gt;&lt;a href=&quot;ssh#start-0&quot;&gt;ssh:start/0&lt;/a&gt;&lt;/code&gt; to start all needed applications (&lt;code&gt;crypto&lt;/code&gt;, &lt;code&gt;public_key&lt;/code&gt;, and &lt;code&gt;ssh&lt;/code&gt;). All examples are run in an Erlang shell, or in a bash shell, using &lt;strong&gt;openssh&lt;/strong&gt; to illustrate how the &lt;code&gt;ssh&lt;/code&gt; application can be used. The examples are run as the user &lt;code&gt;otptest&lt;/code&gt; on a local network where the user is authorized to log in over &lt;code&gt;ssh&lt;/code&gt; to the host &lt;strong&gt;tarlop&lt;/strong&gt;.</source>
          <target state="translated">В следующих примерах используется служебная функция &lt;code&gt;&lt;a href=&quot;ssh#start-0&quot;&gt;ssh:start/0&lt;/a&gt;&lt;/code&gt; для запуска всех необходимых приложений ( &lt;code&gt;crypto&lt;/code&gt; , &lt;code&gt;public_key&lt;/code&gt; и &lt;code&gt;ssh&lt;/code&gt; ). Все примеры выполняются в оболочке Erlang или в оболочке bash с использованием &lt;strong&gt;openssh&lt;/strong&gt; для иллюстрации того, как можно использовать приложение &lt;code&gt;ssh&lt;/code&gt; . Примеры запускаются как пользователь &lt;code&gt;otptest&lt;/code&gt; в локальной сети, где пользователь авторизован для входа через &lt;code&gt;ssh&lt;/code&gt; в &lt;strong&gt;tarlop&lt;/strong&gt; хоста .</target>
        </trans-unit>
        <trans-unit id="5cd0b11976b5319f2006d2a53413541627fed4ce" translate="yes" xml:space="preserve">
          <source>The following executes &lt;code&gt;tc12&lt;/code&gt;&lt;strong&gt;only&lt;/strong&gt; in group &lt;code&gt;top1&lt;/code&gt;:</source>
          <target state="translated">Следующее выполняет &lt;code&gt;tc12&lt;/code&gt; &lt;strong&gt;только&lt;/strong&gt; в группе &lt;code&gt;top1&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="88857e0adb91607265c1fd3c40132140d6d97f6c" translate="yes" xml:space="preserve">
          <source>The following executes one test for all cases and subgroups under &lt;code&gt;top1&lt;/code&gt;:</source>
          <target state="translated">Следующее выполняет один тест для всех случаев и подгрупп в &lt;code&gt;top1&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="25e14a4c0f0dd8657c260321ddf24593cbf2714d" translate="yes" xml:space="preserve">
          <source>The following executes only the test cases for &lt;code&gt;sub22&lt;/code&gt; and in reverse order compared to the group definition:</source>
          <target state="translated">Следующее выполняет только тестовые примеры для &lt;code&gt;sub22&lt;/code&gt; и в обратном порядке по сравнению с определением группы:</target>
        </trans-unit>
        <trans-unit id="9d59ae5da72969b4283c1cf98a39c82e69b73434" translate="yes" xml:space="preserve">
          <source>The following executes two tests, one for all cases and all subgroups under &lt;code&gt;top1&lt;/code&gt;, and one for all under &lt;code&gt;top2&lt;/code&gt;:</source>
          <target state="translated">Следующее выполняет два теста, один для всех случаев и всех подгрупп под &lt;code&gt;top1&lt;/code&gt; и один для всех под &lt;code&gt;top2&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="88efd1d16122c7dfa20482784039de0e7578cec9" translate="yes" xml:space="preserve">
          <source>The following executes two tests, one including all cases and subgroups under &lt;code&gt;sub12&lt;/code&gt;, and one with &lt;strong&gt;only&lt;/strong&gt; the test cases in &lt;code&gt;sub12&lt;/code&gt;:</source>
          <target state="translated">Следующее выполняет два теста, один включает все случаи и подгруппы в &lt;code&gt;sub12&lt;/code&gt; , а другой &lt;strong&gt;только&lt;/strong&gt; тестовые случаи в &lt;code&gt;sub12&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="1a7ba64d043b7996c073a0f4af0d073005f423a1" translate="yes" xml:space="preserve">
          <source>The following expression creates a new &lt;code&gt;Name&lt;/code&gt; record where the value of each field &lt;code&gt;FieldI&lt;/code&gt; is the value of evaluating the corresponding expression &lt;code&gt;ExprI&lt;/code&gt;:</source>
          <target state="translated">Следующее выражение создает новую запись &lt;code&gt;Name&lt;/code&gt; ,в которой значение каждого поля &lt;code&gt;FieldI&lt;/code&gt; является значением оценки соответствующего выражения &lt;code&gt;ExprI&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="ae6de457c01e1fb1a3e00546eff8958609de12b0" translate="yes" xml:space="preserve">
          <source>The following expression returns the position of the specified field in the tuple representation of the record:</source>
          <target state="translated">Следующее выражение возвращает позицию указанного поля в кортежном представлении записи:</target>
        </trans-unit>
        <trans-unit id="c58518dfed86937c32c0b6a021322cd7beecbd65" translate="yes" xml:space="preserve">
          <source>The following expression yields &lt;code&gt;true&lt;/code&gt;::</source>
          <target state="translated">Следующее выражение возвращает &lt;code&gt;true&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="dd1a2e6659306c0be27370e1c7239f7c64f5c457" translate="yes" xml:space="preserve">
          <source>The following expressions are translated equally:</source>
          <target state="translated">Следующие выражения переводятся одинаково:</target>
        </trans-unit>
        <trans-unit id="f600fa95580d128a5b55c2d2a3bd52715c966b7f" translate="yes" xml:space="preserve">
          <source>The following expressions yield &lt;code&gt;false&lt;/code&gt;, as variable &lt;code&gt;Broken&lt;/code&gt; contains a compiled match specification that has passed through external representation:</source>
          <target state="translated">Следующие выражения дают значение &lt;code&gt;false&lt;/code&gt; , поскольку переменная &lt;code&gt;Broken&lt;/code&gt; содержит скомпилированную спецификацию соответствия, прошедшую через внешнее представление:</target>
        </trans-unit>
        <trans-unit id="b9eb1676778caddf159cfe9acf52d248a3850a31" translate="yes" xml:space="preserve">
          <source>The following fapply:</source>
          <target state="translated">Следующий фапли:</target>
        </trans-unit>
        <trans-unit id="f3d7d3c3deb0a0a629d81950bc6b6134511197b1" translate="yes" xml:space="preserve">
          <source>The following fields are not described in the ERTS User's Guide:</source>
          <target state="translated">Следующие поля не описаны в руководстве пользователя ERTS:</target>
        </trans-unit>
        <trans-unit id="61d54bcd350d6740f125ef1579264955f1c65547" translate="yes" xml:space="preserve">
          <source>The following fields are used from the record, if they are specified:</source>
          <target state="translated">Следующие поля используются из записи,если они указаны:</target>
        </trans-unit>
        <trans-unit id="579212e906c367c5e65524f9d589806b1a4dfd60" translate="yes" xml:space="preserve">
          <source>The following fields can exist for a process:</source>
          <target state="translated">Для процесса могут существовать следующие поля:</target>
        </trans-unit>
        <trans-unit id="8cec82fe0d57eb1d23921e0d50a78837999069a1" translate="yes" xml:space="preserve">
          <source>The following fields typically must be specified by the sender:</source>
          <target state="translated">Следующие поля обычно должны быть указаны отправителем:</target>
        </trans-unit>
        <trans-unit id="08329a98a990baea9fd4cf44d504f845faefdaf6" translate="yes" xml:space="preserve">
          <source>The following figure shows a conceptual overview of Logger. The figure shows two log handlers, but any number of handlers can be installed.</source>
          <target state="translated">На следующем рисунке показан концептуальный обзор Логгера.На рисунке показаны два обработчика журнала,но можно установить любое количество обработчиков.</target>
        </trans-unit>
        <trans-unit id="0bef9dc10cd953efe4cb861873187dfba852609d" translate="yes" xml:space="preserve">
          <source>The following figure shows the bytes of a &lt;code&gt;Window:status&lt;/code&gt; message. The components &lt;code&gt;buttonList&lt;/code&gt; and &lt;code&gt;actions&lt;/code&gt; are excluded from decode. Only &lt;code&gt;state&lt;/code&gt; and &lt;code&gt;enabled&lt;/code&gt; are decoded when &lt;code&gt;decode__Window_exclusive&lt;/code&gt; is called.</source>
          <target state="translated">На следующем рисунке показаны байты сообщения &lt;code&gt;Window:status&lt;/code&gt; . Компоненты &lt;code&gt;buttonList&lt;/code&gt; и &lt;code&gt;actions&lt;/code&gt; исключаются из декодирования. При &lt;code&gt;decode__Window_exclusive&lt;/code&gt; декодируются только &lt;code&gt;state&lt;/code&gt; и &lt;code&gt;enabled&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5e130f9f78c1692a150e4f0eeb068783cb173914" translate="yes" xml:space="preserve">
          <source>The following figure shows which components are in &lt;code&gt;TypeList&lt;/code&gt;&lt;code&gt;['Window',status,actions,possibleActions,[1],handle,number]&lt;/code&gt;:</source>
          <target state="translated">На следующем рисунке показано, какие компоненты находятся в &lt;code&gt;TypeList&lt;/code&gt; &lt;code&gt;['Window',status,actions,possibleActions,[1],handle,number]&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b445689ad7fd0436cd7641f643a07c0561a2fe9a" translate="yes" xml:space="preserve">
          <source>The following file includes two certificates:</source>
          <target state="translated">Следующий файл включает два сертификата:</target>
        </trans-unit>
        <trans-unit id="3db502e7fd49532c31554150f0c64ab687cd78ab" translate="yes" xml:space="preserve">
          <source>The following file types are defined in Erlang/OTP:</source>
          <target state="translated">В Erlang/OTP определены следующие типы файлов:</target>
        </trans-unit>
        <trans-unit id="71254e9506c929f7f52ca316b3c356b831887b19" translate="yes" xml:space="preserve">
          <source>The following flags are available:</source>
          <target state="translated">Имеются следующие флаги:</target>
        </trans-unit>
        <trans-unit id="719ce2e093c09df2408e42a7406958a700ac71ea" translate="yes" xml:space="preserve">
          <source>The following flags are defined automatically and can be retrieved using this function:</source>
          <target state="translated">Следующие флаги определяются автоматически и могут быть получены с помощью этой функции:</target>
        </trans-unit>
        <trans-unit id="5fe356642f0df6916029c9299326bc02952f156d" translate="yes" xml:space="preserve">
          <source>The following flags are recognised:</source>
          <target state="translated">Распознаются следующие флаги:</target>
        </trans-unit>
        <trans-unit id="2791d823738fc796e3aff5cac56fe1c0dc58c276" translate="yes" xml:space="preserve">
          <source>The following flags are supported:</source>
          <target state="translated">Поддерживаются следующие флаги:</target>
        </trans-unit>
        <trans-unit id="9a37b4b5f5db6694294b80fe420424b434a55049" translate="yes" xml:space="preserve">
          <source>The following flags are useful in special situations, such as rebuilding the OTP system:</source>
          <target state="translated">Следующие флаги полезны в особых ситуациях,таких как перестройка системы OTP:</target>
        </trans-unit>
        <trans-unit id="e3e7ff31b4722f8ae27b4760d8e2609571bf918c" translate="yes" xml:space="preserve">
          <source>The following flags can also be used with &lt;code&gt;&lt;a href=&quot;ct_run&quot;&gt;ct_run&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">Следующие флаги также можно использовать с &lt;code&gt;&lt;a href=&quot;ct_run&quot;&gt;ct_run&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="fe0b90a260b51ac7fbb2626eba5e49455fbc6475" translate="yes" xml:space="preserve">
          <source>The following four installation procedures require super user privilege:</source>
          <target state="translated">Следующие четыре процедуры установки требуют привилегий суперпользователя:</target>
        </trans-unit>
        <trans-unit id="857a38dd46b2870a572b2281f80d819712f630b7" translate="yes" xml:space="preserve">
          <source>The following fun expressions are also allowed:</source>
          <target state="translated">Также разрешены следующие забавные выражения:</target>
        </trans-unit>
        <trans-unit id="7e53e9cb8d584334c556a4497982894d55fd0779" translate="yes" xml:space="preserve">
          <source>The following function extracts a list of female employees from the database:</source>
          <target state="translated">Следующая функция извлекает список сотрудниц из базы данных:</target>
        </trans-unit>
        <trans-unit id="504f3189fc42a4b1e4cebcb03cdadcfe20e2ff16" translate="yes" xml:space="preserve">
          <source>The following function extracts the names of the female employees stored in the database:</source>
          <target state="translated">Следующая функция извлекает имена сотрудников-женщин,сохраненные в базе данных:</target>
        </trans-unit>
        <trans-unit id="e7ccfae3bc62070f3a6d6f25984d604af2dca20b" translate="yes" xml:space="preserve">
          <source>The following function must be exported from a &lt;code&gt;supervisor&lt;/code&gt; callback module.</source>
          <target state="translated">Следующая функция должна быть экспортирована из модуля обратного вызова &lt;code&gt;supervisor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="07aad394cfc87e43c34047ccb79c6f62e522e12b" translate="yes" xml:space="preserve">
          <source>The following function takes a list of &lt;code&gt;person&lt;/code&gt; records and searches for the phone number of a person with a particular name:</source>
          <target state="translated">Следующая функция принимает список &lt;code&gt;person&lt;/code&gt; записей и поиска номера телефона человека с определенным именем:</target>
        </trans-unit>
        <trans-unit id="d42b26451a776d64cc4668a7081444af7e2c2a1e" translate="yes" xml:space="preserve">
          <source>The following function, &lt;code&gt;add_one&lt;/code&gt;, adds one to every element in a list:</source>
          <target state="translated">Следующая функция &lt;code&gt;add_one&lt;/code&gt; добавляет по одному к каждому элементу списка:</target>
        </trans-unit>
        <trans-unit id="fdcde9b058d15df816f05ecda9bd41f522994a81" translate="yes" xml:space="preserve">
          <source>The following function, &lt;code&gt;double&lt;/code&gt;, doubles every element in a list:</source>
          <target state="translated">Следующая функция &lt;code&gt;double&lt;/code&gt; удваивает каждый элемент в списке:</target>
        </trans-unit>
        <trans-unit id="4a3f4a02410e47e9c3849742c5727d2c0861cf66" translate="yes" xml:space="preserve">
          <source>The following functionally equivalent code writes 128 bytes per call to &lt;code&gt;&lt;a href=&quot;#write-2&quot;&gt;write/2&lt;/a&gt;&lt;/code&gt; and so does the same work in 0.08 seconds, which is roughly 30 times faster:</source>
          <target state="translated">Следующий функционально эквивалентный код записывает 128 байт за вызов в &lt;code&gt;&lt;a href=&quot;#write-2&quot;&gt;write/2&lt;/a&gt;&lt;/code&gt; и делает ту же работу за 0,08 секунды, что примерно в 30 раз быстрее:</target>
        </trans-unit>
        <trans-unit id="4851a85cacd7cea8fbbb07ff6c65612ebb17807b" translate="yes" xml:space="preserve">
          <source>The following functions are exported by the generated scanner.</source>
          <target state="translated">Следующие функции экспортируются сгенерированным сканером.</target>
        </trans-unit>
        <trans-unit id="5f67bcd3deeb0c90fe208811b94f6ecb50fdd70e" translate="yes" xml:space="preserve">
          <source>The following functions are inlined:</source>
          <target state="translated">Ниже перечислены функции:</target>
        </trans-unit>
        <trans-unit id="6e8f6071853dc23038c690be527eb7aed97d99f5" translate="yes" xml:space="preserve">
          <source>The following functions are mandatory:</source>
          <target state="translated">Следующие функции являются обязательными:</target>
        </trans-unit>
        <trans-unit id="f7564bfdee2fc04335ad865192d312010f773791" translate="yes" xml:space="preserve">
          <source>The following functions are to be exported from a &lt;code&gt;ct_suite&lt;/code&gt; callback module in order to define the callback interface for a test suite.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ab66b86479cb4b8966432e55db73f7b8eac0221" translate="yes" xml:space="preserve">
          <source>The following functions are to be exported from a &lt;code&gt;gen_event&lt;/code&gt; callback module.</source>
          <target state="translated">Следующие функции должны быть экспортированы из &lt;code&gt;gen_event&lt;/code&gt; обратного вызова gen_event .</target>
        </trans-unit>
        <trans-unit id="eaf6f53e0685fd921f6065ec533398767638e814" translate="yes" xml:space="preserve">
          <source>The following functions are to be exported from a &lt;code&gt;gen_server&lt;/code&gt; callback module.</source>
          <target state="translated">Следующие функции должны быть экспортированы из модуля обратного вызова &lt;code&gt;gen_server&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="baab9084b49f784e0a7049c6d9a71e4b999906d7" translate="yes" xml:space="preserve">
          <source>The following functions are to be exported from a &lt;code&gt;gen_statem&lt;/code&gt; callback module.</source>
          <target state="translated">Следующие функции должны быть экспортированы из &lt;code&gt;gen_statem&lt;/code&gt; обратного вызова gen_statem .</target>
        </trans-unit>
        <trans-unit id="f6d8fd0dedca27c09b82ec5cdf80b62654de4c23" translate="yes" xml:space="preserve">
          <source>The following functions are to be exported from a &lt;code&gt;ssh_client_channel&lt;/code&gt; callback module.</source>
          <target state="translated">Следующие функции должны быть экспортированы из &lt;code&gt;ssh_client_channel&lt;/code&gt; обратного вызова ssh_client_channel .</target>
        </trans-unit>
        <trans-unit id="b8fd8927d0a9812c875db0dd32e79d269aceb81c" translate="yes" xml:space="preserve">
          <source>The following functions are to be exported from a &lt;code&gt;ssh_server_channel&lt;/code&gt; callback module.</source>
          <target state="translated">Следующие функции должны быть экспортированы из &lt;code&gt;ssh_server_channel&lt;/code&gt; обратного вызова ssh_server_channel .</target>
        </trans-unit>
        <trans-unit id="e23fa44c13429a2fd437dba0988c988e7a312614" translate="yes" xml:space="preserve">
          <source>The following functions are to be exported from a formatter callback module.</source>
          <target state="translated">Следующие функции должны быть экспортированы из модуля обратного вызова формата.</target>
        </trans-unit>
        <trans-unit id="f3a0c7ead32b20d4fc3d927da2c12376abf896b9" translate="yes" xml:space="preserve">
          <source>The following functions are to be exported from a handler callback module.</source>
          <target state="translated">Следующие функции должны быть экспортированы из модуля обратного вызова обработчика.</target>
        </trans-unit>
        <trans-unit id="324102d29dfa0e459c285f94eb4c3c3798cd41d3" translate="yes" xml:space="preserve">
          <source>The following functions are to be exported from an &lt;code&gt;application&lt;/code&gt; callback module.</source>
          <target state="translated">Следующие функции должны быть экспортированы из модуля обратного вызова &lt;code&gt;application&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="623497a405a43189792a81522e86a8b9226d067f" translate="yes" xml:space="preserve">
          <source>The following functions are to be exported from an &lt;code&gt;erl_tracer&lt;/code&gt; callback module:</source>
          <target state="translated">Следующие функции должны быть экспортированы из &lt;code&gt;erl_tracer&lt;/code&gt; обратного вызова erl_tracer :</target>
        </trans-unit>
        <trans-unit id="64dc45bde2a752b8cec35e2e33de402f72f6cc40" translate="yes" xml:space="preserve">
          <source>The following functions are used for convenience.</source>
          <target state="translated">Для удобства используются следующие функции.</target>
        </trans-unit>
        <trans-unit id="c872bca07adade7d8cc574c2485887affd6e5d83" translate="yes" xml:space="preserve">
          <source>The following functions are used to back up data, to install a backup as fallback, and for disaster recovery:</source>
          <target state="translated">Следующие функции используются для резервного копирования данных,установки резервной копии в случае сбоя,а также для аварийного восстановления:</target>
        </trans-unit>
        <trans-unit id="02628df42092a5c994d8e891c4403f91bfbbbb66" translate="yes" xml:space="preserve">
          <source>The following functions are used when implementing a special process. This is an ordinary process, which does not use a standard behavior, but a process that understands the standard system messages.</source>
          <target state="translated">При реализации специального процесса используются следующие функции.Это обычный процесс,который использует не стандартное поведение,а процесс,который понимает стандартные системные сообщения.</target>
        </trans-unit>
        <trans-unit id="26b92712bb4c99562ee4a3caab022028754f5836" translate="yes" xml:space="preserve">
          <source>The following functions can be used to test upgrade and downgrade of single applications (instead of upgrading/downgrading an entire release). A script corresponding to the instructions in the &lt;code&gt;relup&lt;/code&gt; file is created on-the-fly, based on the &lt;code&gt;.appup&lt;/code&gt; file for the application, and evaluated exactly in the same way as &lt;code&gt;release_handler&lt;/code&gt; does.</source>
          <target state="translated">Следующие функции можно использовать для тестирования обновления и понижения версии отдельных приложений (вместо обновления / понижения версии всего выпуска). Сценарий, соответствующий инструкциям в файле &lt;code&gt;relup&lt;/code&gt; , создается &amp;laquo;на лету&amp;raquo; на &lt;code&gt;.appup&lt;/code&gt; файла .appup для приложения и оценивается точно так же, как и &lt;code&gt;release_handler&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="24d76d64ddf59c8af9a65858beb15de37d52e968" translate="yes" xml:space="preserve">
          <source>The following functions control the behavior of the internal counters.</source>
          <target state="translated">Следующие функции контролируют поведение внутренних счетчиков.</target>
        </trans-unit>
        <trans-unit id="c8f7d8e59ac7e38340a3c25c101d522f5875e82c" translate="yes" xml:space="preserve">
          <source>The following functions define the callback interface for a CTH.</source>
          <target state="translated">Следующие функции определяют интерфейс обратного вызова для СТН.</target>
        </trans-unit>
        <trans-unit id="02a00b734983835a88dfd4ba08c110451f346e89" translate="yes" xml:space="preserve">
          <source>The following functions define the callback interface for a test suite.</source>
          <target state="translated">Следующие функции определяют интерфейс обратного вызова для набора тестов.</target>
        </trans-unit>
        <trans-unit id="647d81b837420325efd90808d2b34ee3893c58a1" translate="yes" xml:space="preserve">
          <source>The following functions describe the interface to &lt;code&gt;snmpa_local_db&lt;/code&gt;. Each function has a Mnesia equivalent. The argument &lt;code&gt;NameDb&lt;/code&gt; is a tuple &lt;code&gt;{Name, Db}&lt;/code&gt; where &lt;code&gt;Name&lt;/code&gt; is the symbolic name of the managed object (as defined in the MIB), and &lt;code&gt;Db&lt;/code&gt; is either &lt;code&gt;volatile&lt;/code&gt; or &lt;code&gt;persistent&lt;/code&gt;. &lt;code&gt;mnesia&lt;/code&gt; is not possible since all these functions are &lt;code&gt;snmpa_local_db&lt;/code&gt; specific.</source>
          <target state="translated">Следующие функции описывают интерфейс &lt;code&gt;snmpa_local_db&lt;/code&gt; . Каждая функция имеет эквивалент Mnesia. Аргумент &lt;code&gt;NameDb&lt;/code&gt; - это кортеж &lt;code&gt;{Name, Db}&lt;/code&gt; где &lt;code&gt;Name&lt;/code&gt; - это символическое имя управляемого объекта (как определено в MIB), а &lt;code&gt;Db&lt;/code&gt; является либо &lt;code&gt;volatile&lt;/code&gt; либо &lt;code&gt;persistent&lt;/code&gt; . &lt;code&gt;mnesia&lt;/code&gt; невозможно, поскольку все эти функции специфичны для &lt;code&gt;snmpa_local_db&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a1100a11b4b80e1ec32b674331fc67603b3198a3" translate="yes" xml:space="preserve">
          <source>The following functions in this module also exist and provides the same functionality in the &lt;code&gt;&lt;a href=&quot;sets&quot;&gt;sets(3)&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;ordsets&quot;&gt;ordsets(3)&lt;/a&gt;&lt;/code&gt; modules. That is, by only changing the module name for each call, you can try out different set representations.</source>
          <target state="translated">Следующие функции в этом модуле также существуют и обеспечивают те же функции в модулях &lt;code&gt;&lt;a href=&quot;sets&quot;&gt;sets(3)&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;ordsets&quot;&gt;ordsets(3)&lt;/a&gt;&lt;/code&gt; . То есть, изменяя только имя модуля для каждого вызова, вы можете опробовать разные представления набора.</target>
        </trans-unit>
        <trans-unit id="403a88e7d4193643f2441bbe4104eef783bcc30f" translate="yes" xml:space="preserve">
          <source>The following functions must be exported from a &lt;code&gt;mib-server&lt;/code&gt; data callback module:</source>
          <target state="translated">Следующие функции должны быть экспортированы из модуля обратного вызова данных &lt;code&gt;mib-server&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="211427edb5cce5619a96cf4257a0132f6686ca2a" translate="yes" xml:space="preserve">
          <source>The following functions must be exported from a &lt;code&gt;supervisor_bridge&lt;/code&gt; callback module.</source>
          <target state="translated">Следующие функции должны быть экспортированы из модуля обратного вызова &lt;code&gt;supervisor_bridge&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5e7c33747a8a7210784ba4d3e34376c30cdfd02d" translate="yes" xml:space="preserve">
          <source>The following functions should be exported from a &lt;code&gt;megaco_edist_compress&lt;/code&gt; callback module:</source>
          <target state="translated">Следующие функции должны быть экспортированы из &lt;code&gt;megaco_edist_compress&lt;/code&gt; обратного вызова megaco_edist_compress :</target>
        </trans-unit>
        <trans-unit id="1c2eb550d5e0fd353c08fabab97a3148ca0012e2" translate="yes" xml:space="preserve">
          <source>The following functions should be exported from a &lt;code&gt;megaco_encoder&lt;/code&gt; callback module:</source>
          <target state="translated">Следующие функции должны быть экспортированы из &lt;code&gt;megaco_encoder&lt;/code&gt; обратного вызова megaco_encoder :</target>
        </trans-unit>
        <trans-unit id="36e94e447d27f2ba2ddd7dbee957d9efa47d84bf" translate="yes" xml:space="preserve">
          <source>The following functions should be exported from a &lt;code&gt;megaco_transport&lt;/code&gt; callback module:</source>
          <target state="translated">Следующие функции должны быть экспортированы из &lt;code&gt;megaco_transport&lt;/code&gt; обратного вызова megaco_transport :</target>
        </trans-unit>
        <trans-unit id="f8ee1e36bf47047325c371be3bfaa01a6b15fc9a" translate="yes" xml:space="preserve">
          <source>The following functions, &lt;code&gt;read_cmd()&lt;/code&gt; and &lt;code&gt;write_cmd()&lt;/code&gt;, from the &lt;code&gt;erl_comm.c&lt;/code&gt; example in &lt;code&gt;&lt;a href=&quot;c_port&quot;&gt;Ports&lt;/a&gt;&lt;/code&gt; can still be used for reading from and writing to the port:</source>
          <target state="translated">Следующие функции &lt;code&gt;read_cmd()&lt;/code&gt; и &lt;code&gt;write_cmd()&lt;/code&gt; из примера &lt;code&gt;erl_comm.c&lt;/code&gt; в &lt;code&gt;&lt;a href=&quot;c_port&quot;&gt;Ports&lt;/a&gt;&lt;/code&gt; по- прежнему могут использоваться для чтения и записи в порт:</target>
        </trans-unit>
        <trans-unit id="0c0cc9a33559cd30dd7c5dee49a32a3678fc0996" translate="yes" xml:space="preserve">
          <source>The following general category property codes are supported:</source>
          <target state="translated">Поддерживаются следующие общие коды свойств категории:</target>
        </trans-unit>
        <trans-unit id="485d675e1e288b4464e0d6976f961540aa46e469" translate="yes" xml:space="preserve">
          <source>The following guard BIFs handle maps:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00b20eb40ed0d659393e7ede6b8509b03c2165e1" translate="yes" xml:space="preserve">
          <source>The following illustration shows how a system can look in runtime.</source>
          <target state="translated">На следующем рисунке показано,как может выглядеть система во время работы.</target>
        </trans-unit>
        <trans-unit id="d0fc102c368e541c6de8ef4f6fd846441148303d" translate="yes" xml:space="preserve">
          <source>The following information is given for each child specification/process:</source>
          <target state="translated">Для каждой спецификации/процесса ребенка приводится следующая информация:</target>
        </trans-unit>
        <trans-unit id="0cce2ff92e643403b8a8a43b7b39a2cc520dd904" translate="yes" xml:space="preserve">
          <source>The following information is returned for every application:</source>
          <target state="translated">Следующая информация возвращается для каждой заявки:</target>
        </trans-unit>
        <trans-unit id="b3fbdd770d4e0e0bb91f42f7653cca9a0fa8d845" translate="yes" xml:space="preserve">
          <source>The following information is returned for every library module:</source>
          <target state="translated">Следующая информация возвращается для каждого модуля библиотеки:</target>
        </trans-unit>
        <trans-unit id="b25c49ec2d0414911fc31e80509041b6c00e1677" translate="yes" xml:space="preserve">
          <source>The following information is returned for every release:</source>
          <target state="translated">Следующая информация возвращается для каждого выпуска:</target>
        </trans-unit>
        <trans-unit id="d5e22fc9271f190429a4be85a97f17d1b778ca80" translate="yes" xml:space="preserve">
          <source>The following instructions are for building &lt;code&gt;&lt;a href=&quot;http://www.erlang.org/download/otp_src_21.0.tar.gz&quot;&gt;the released source tar ball&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Следующие инструкции предназначены для сборки &lt;code&gt;&lt;a href=&quot;http://www.erlang.org/download/otp_src_21.0.tar.gz&quot;&gt;the released source tar ball&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ed0ab9d59cb82f2960e2d92ecb88bb528745679a" translate="yes" xml:space="preserve">
          <source>The following instructions are for building &lt;code&gt;&lt;a href=&quot;http://www.erlang.org/download/otp_src_23.2.tar.gz&quot;&gt;the released source tar ball&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bb6feade4582730097dc79e92bae679305ea48e" translate="yes" xml:space="preserve">
          <source>The following is a checklist for rewriting a pre ERTS 5.9 driver, most important first:</source>
          <target state="translated">Ниже приведен контрольный список для переписывания драйвера до ERTS 5.9,наиболее важного из них:</target>
        </trans-unit>
        <trans-unit id="3b1759541f1940201849307e8f98dd17638ad123" translate="yes" xml:space="preserve">
          <source>The following is a complete &lt;code&gt;Fun&lt;/code&gt; parameter for reading and writing on files using the &lt;code&gt;file&lt;/code&gt; module:</source>
          <target state="translated">Ниже приведен полный параметр &lt;code&gt;Fun&lt;/code&gt; для чтения и записи файлов с помощью &lt;code&gt;file&lt;/code&gt; модуля:</target>
        </trans-unit>
        <trans-unit id="e5dec4fa9682464bd8811fb1940ba59ef25ee7c6" translate="yes" xml:space="preserve">
          <source>The following is a complete list of &lt;strong&gt;event types&lt;/strong&gt; and where they come from:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc7d7129dd6f6c58173a187543c25f188276eaf0" translate="yes" xml:space="preserve">
          <source>The following is a complete list of event types and where they come from:</source>
          <target state="translated">Ниже приведен полный список типов мероприятий и откуда они исходят:</target>
        </trans-unit>
        <trans-unit id="c8a14f55bfff88da1be28bb766800640bcd62c50" translate="yes" xml:space="preserve">
          <source>The following is a list of the ANSI data types. For details turn to the ANSI standard documentation. Usage of other data types is of course possible, but you should be aware that this makes your application dependent on the database you are using at the moment.</source>
          <target state="translated">Ниже приведен список типов данных ANSI.Для получения более подробной информации обратитесь к стандартной документации ANSI.Использование других типов данных,конечно,возможно,но вы должны знать,что это делает ваше приложение зависимым от базы данных,которую вы используете в данный момент.</target>
        </trans-unit>
        <trans-unit id="9dffda4d1a563c216467972b2fef4d25fa28c442" translate="yes" xml:space="preserve">
          <source>The following is a rather unnatural example to show another exception:</source>
          <target state="translated">Ниже приведен довольно неестественный пример,чтобы показать еще одно исключение:</target>
        </trans-unit>
        <trans-unit id="fc5496457b8761bac15ca387a14c23e2f06d56e0" translate="yes" xml:space="preserve">
          <source>The following is a shell session when running it:</source>
          <target state="translated">Ниже приведен сеанс оболочки при запуске:</target>
        </trans-unit>
        <trans-unit id="1c1afe341a3a40e5c215a483f55d3776b92db0f3" translate="yes" xml:space="preserve">
          <source>The following is a short program to show the workings of &lt;code&gt;if&lt;/code&gt;.</source>
          <target state="translated">Ниже приводится короткая программа, показывающая, как работает &lt;code&gt;if&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="92e3b552e54cc6f54aad0df369b0b7192bcf382d" translate="yes" xml:space="preserve">
          <source>The following is a simple example of an FTP session, where the user &lt;code&gt;guest&lt;/code&gt; with password &lt;code&gt;password&lt;/code&gt; logs on to the remote host &lt;code&gt;erlang.org&lt;/code&gt;:</source>
          <target state="translated">Ниже приведен простой пример сеанса FTP, в котором пользователь- &lt;code&gt;guest&lt;/code&gt; с паролем и &lt;code&gt;password&lt;/code&gt; входит в систему на удаленном хосте &lt;code&gt;erlang.org&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="af00308e7be83b75dde0c794afc64df924d05311" translate="yes" xml:space="preserve">
          <source>The following is a simpler example of a handler which logs to a file through one single process:</source>
          <target state="translated">Ниже приведен более простой пример обработчика,который входит в файл через один единственный процесс:</target>
        </trans-unit>
        <trans-unit id="2985e72c56df70fad7f40fc868951b90ac475392" translate="yes" xml:space="preserve">
          <source>The following is a slightly more complicated example of an &lt;code&gt;.erlang.crypt&lt;/code&gt; providing one key for module &lt;code&gt;t&lt;/code&gt; and another key for all other modules:</source>
          <target state="translated">Ниже приведен немного более сложный пример &lt;code&gt;.erlang.crypt&lt;/code&gt; , предоставляющего один ключ для модуля &lt;code&gt;t&lt;/code&gt; и другой ключ для всех остальных модулей:</target>
        </trans-unit>
        <trans-unit id="c2e759eba9876095f44fce0efab73cd548a24130" translate="yes" xml:space="preserve">
          <source>The following is a template example of how to create and return a resource object.</source>
          <target state="translated">Ниже приведен пример шаблона создания и возврата объекта ресурса.</target>
        </trans-unit>
        <trans-unit id="407235d853511b8f33bb270ef89fc50a0d62af2a" translate="yes" xml:space="preserve">
          <source>The following is an easy way of obtaining a unique value to seed with:</source>
          <target state="translated">Ниже приведен простой способ получить уникальную ценность для посевов:</target>
        </trans-unit>
        <trans-unit id="559fe21097f15ddc3169882128ef5ed665f04654" translate="yes" xml:space="preserve">
          <source>The following is an example module to trace on:</source>
          <target state="translated">Ниже приведен пример модуля для отслеживания:</target>
        </trans-unit>
        <trans-unit id="80aa757f4a9a7af17950895f0cec0bc27ec18d99" translate="yes" xml:space="preserve">
          <source>The following is an example of Erlang code that assigns values for the types in the previous list:</source>
          <target state="translated">Ниже приведен пример кода Erlang,который присваивает значения типам из предыдущего списка:</target>
        </trans-unit>
        <trans-unit id="d01528f16015b5f29f1097c6ec1da0702097e439" translate="yes" xml:space="preserve">
          <source>The following is an example of X509 certificates:</source>
          <target state="translated">Ниже приведен пример сертификатов X509:</target>
        </trans-unit>
        <trans-unit id="b27cba48368a69cfcb442391037a03176a6a6532" translate="yes" xml:space="preserve">
          <source>The following is an example of a callback module for a &lt;code&gt;simple_one_for_one&lt;/code&gt; supervisor:</source>
          <target state="translated">Ниже приведен пример модуля обратного вызова для супервизора &lt;code&gt;simple_one_for_one&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="1f30318b19c32d664f2f54026ca7ff0b8355f643" translate="yes" xml:space="preserve">
          <source>The following is an example of an &lt;code&gt;.erlang.crypt&lt;/code&gt; file that returns the same key for all modules:</source>
          <target state="translated">Ниже приведен пример файла &lt;code&gt;.erlang.crypt&lt;/code&gt; , который возвращает один и тот же ключ для всех модулей:</target>
        </trans-unit>
        <trans-unit id="beaf428bf8cc669201276ed3d29a25f483cbffc1" translate="yes" xml:space="preserve">
          <source>The following is an example of how the functions in the previous example can be rewritten if it is necessary to open multiple connections to the FTP server:</source>
          <target state="translated">Ниже приведен пример того,как функции в предыдущем примере могут быть переписаны,если необходимо открыть несколько соединений с FTP-сервером:</target>
        </trans-unit>
        <trans-unit id="7f7272e68f14b299a421c24c15d68c41acc39f20" translate="yes" xml:space="preserve">
          <source>The following is an example of how to assert that the configuration data is available and can be used for an FTP session:</source>
          <target state="translated">Ниже приведен пример того,как утверждать,что данные конфигурации доступны и могут быть использованы для FTP-сессии:</target>
        </trans-unit>
        <trans-unit id="006f54e284f6eaf59f32808c04b6087a85040dff" translate="yes" xml:space="preserve">
          <source>The following is an example of how to return the status from a group:</source>
          <target state="translated">Ниже приведен пример того,как вернуть статус из группы:</target>
        </trans-unit>
        <trans-unit id="de8c4707aa64df488804045d788d163861ba1459" translate="yes" xml:space="preserve">
          <source>The following is an example session using it on Linux:</source>
          <target state="translated">Ниже приведен пример сессии,использующей его под Linux:</target>
        </trans-unit>
        <trans-unit id="22fa03b054cca550539d61bd30740fe445725fe1" translate="yes" xml:space="preserve">
          <source>The following is an ordinary asynchronous request:</source>
          <target state="translated">Ниже приведен обычный асинхронный запрос:</target>
        </trans-unit>
        <trans-unit id="1617114c5fde90021a15fd0405960852bae70f6c" translate="yes" xml:space="preserve">
          <source>The following is an ordinary synchronous request:</source>
          <target state="translated">Ниже приведен обычный синхронный запрос:</target>
        </trans-unit>
        <trans-unit id="25cf5f91df4951ef8502f305f460dc3e467e107b" translate="yes" xml:space="preserve">
          <source>The following is another special sequence that can appear at the start of a pattern:</source>
          <target state="translated">Ниже приведена еще одна особая последовательность,которая может появиться в начале детали:</target>
        </trans-unit>
        <trans-unit id="25f3a545690924d83cc64312bc56248e3f69655a" translate="yes" xml:space="preserve">
          <source>The following is called when the application is stopped.</source>
          <target state="translated">При остановке приложения вызывается следующее.</target>
        </trans-unit>
        <trans-unit id="a7bb8990a6d72dd204c6cca6df9719f6eb039d12" translate="yes" xml:space="preserve">
          <source>The following is the complete callback module file &lt;code&gt;pushbutton.erl&lt;/code&gt;:</source>
          <target state="translated">Ниже приведен полный файл модуля обратного вызова &lt;code&gt;pushbutton.erl&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="eba1404bcd0f1c2d40b6a68a0e51cd8231cb108f" translate="yes" xml:space="preserve">
          <source>The following is the instruction for adding an application:</source>
          <target state="translated">Ниже приведена инструкция по добавлению приложения:</target>
        </trans-unit>
        <trans-unit id="eef8732ed7e4037c0a3fb4336a9e4dba89b8f906" translate="yes" xml:space="preserve">
          <source>The following is the instruction for removing an application:</source>
          <target state="translated">Ниже приведена инструкция по удалению приложения:</target>
        </trans-unit>
        <trans-unit id="314b2a42ea1284b836958c707ebdeebfb1e761a9" translate="yes" xml:space="preserve">
          <source>The following is the instruction for restarting an application:</source>
          <target state="translated">Ниже приведена инструкция по перезапуску приложения:</target>
        </trans-unit>
        <trans-unit id="04b2d72b40a1cd44a0454da6f08a0b030bd3218c" translate="yes" xml:space="preserve">
          <source>The following is to be put in the Erlang node application configuration file to start a profile at application startup:</source>
          <target state="translated">Чтобы запустить профиль при запуске приложения,в файл конфигурации узла Erlang необходимо поместить следующее:</target>
        </trans-unit>
        <trans-unit id="062b29997a05c71efe23ac3949d3086ab3d47473" translate="yes" xml:space="preserve">
          <source>The following is to be put in the Erlang node application configuration file to start an HTTP server at application startup:</source>
          <target state="translated">Для запуска HTTP-сервера при запуске приложения в файл конфигурации узла Erlang необходимо поместить следующее:</target>
        </trans-unit>
        <trans-unit id="d3155b2a460c30a139bad84db61b5cb13f89e622" translate="yes" xml:space="preserve">
          <source>The following items are returned:</source>
          <target state="translated">Возвращаются следующие предметы:</target>
        </trans-unit>
        <trans-unit id="cd7738cf632ddaa8eb52ecadbb7505cd9d32c89a" translate="yes" xml:space="preserve">
          <source>The following items are valid:</source>
          <target state="translated">Следующие пункты действительны:</target>
        </trans-unit>
        <trans-unit id="d92f3821629cd1061963d687bd668819ef18ef41" translate="yes" xml:space="preserve">
          <source>The following line defines a regular expression that will recognize a call to a function that does a garbage collection:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4561a64f009cfbd6722c632e8eb5a471d1923a59" translate="yes" xml:space="preserve">
          <source>The following list details the application versions that were part of OTP 17.0. If the normal part of an application version number compares as smaller than the corresponding application version in the list, the version number does not adhere to the version scheme introduced in OTP 17.0 and is to be considered as not having an order against versions used as of OTP 17.0.</source>
          <target state="translated">В следующем списке подробно описаны версии приложений,которые были частью OTP 17.0.Если обычная часть номера версии приложения сравнивается как меньшая,чем соответствующая версия приложения в списке,то номер версии не соответствует схеме версий,введенной в OTP 17.0,и считается,что у него нет заказа на версии,используемые начиная с OTP 17.0.</target>
        </trans-unit>
        <trans-unit id="d0920398e14dd6ebf569f67f91d59c6473d12cc4" translate="yes" xml:space="preserve">
          <source>The following macro can be used within a test case to retreive the output written to standard output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6f5aff715179f741e21746f788a0d571fc3772d" translate="yes" xml:space="preserve">
          <source>The following macro directives are supplied:</source>
          <target state="translated">Поставляются следующие макро директивы:</target>
        </trans-unit>
        <trans-unit id="5caf4dc52eb6520bf2183669475a7745283e0cdb" translate="yes" xml:space="preserve">
          <source>The following macros are defined in &lt;code&gt;logger.hrl&lt;/code&gt;, which is included in a module with the directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="361a3fd4702c110455bbcea82ba2c037e63e708b" translate="yes" xml:space="preserve">
          <source>The following macros are defined:</source>
          <target state="translated">Определены следующие макросы:</target>
        </trans-unit>
        <trans-unit id="c28f5023d2a208f7eb90d1c1666a542586bef327" translate="yes" xml:space="preserve">
          <source>The following macros are predefined:</source>
          <target state="translated">Следующие макросы предопределены:</target>
        </trans-unit>
        <trans-unit id="bee950191de94f676ee96776b15e0ccba25dfb73" translate="yes" xml:space="preserve">
          <source>The following macros can be used for retrieving parts of Erlang terms. None of these do any type checking. Results are undefined if you pass an &lt;code&gt;ETERM*&lt;/code&gt; containing the wrong type. For example, passing a tuple to &lt;code&gt;ERL_ATOM_PTR()&lt;/code&gt; likely results in garbage.</source>
          <target state="translated">Следующие макросы можно использовать для получения частей терминов Erlang. Ни один из них не выполняет проверку типов. Результаты не будут определены, если вы передадите &lt;code&gt;ETERM*&lt;/code&gt; содержащий неправильный тип. Например, передача кортежа в &lt;code&gt;ERL_ATOM_PTR()&lt;/code&gt; скорее всего, приведет к мусору.</target>
        </trans-unit>
        <trans-unit id="a6e5655e09259732c78235fc15eeeb16532c8c59" translate="yes" xml:space="preserve">
          <source>The following macros can make tests more compact and readable:</source>
          <target state="translated">Следующие макросы могут сделать тесты более компактными и читабельными:</target>
        </trans-unit>
        <trans-unit id="3ca8309f3b4453ebe12d39150b4c1a41828a11c5" translate="yes" xml:space="preserve">
          <source>The following matches &lt;code&gt;Expr1&lt;/code&gt;, a pattern, against &lt;code&gt;Expr2&lt;/code&gt;:</source>
          <target state="translated">Следующие матчи &lt;code&gt;Expr1&lt;/code&gt; , шаблон, против &lt;code&gt;Expr2&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b69739288091f88fd2e2b7df4c33b95efbcb7de9" translate="yes" xml:space="preserve">
          <source>The following matches any occurrence of &quot;foo&quot; that is not followed by &quot;bar&quot;:</source>
          <target state="translated">Следующее соответствует любому появлению &quot;foo&quot;,за которым не следует &quot;bar&quot;:</target>
        </trans-unit>
        <trans-unit id="484da9e33049d8639a65d77742562fb2909ccd89" translate="yes" xml:space="preserve">
          <source>The following matches exactly eight digits:</source>
          <target state="translated">Следующие совпадают ровно с 8-ю цифрами:</target>
        </trans-unit>
        <trans-unit id="a06f765490e0bde0129ff3bc5255ac6d9e037e52" translate="yes" xml:space="preserve">
          <source>The following matchings are performed:</source>
          <target state="translated">Выполняются следующие сопоставления:</target>
        </trans-unit>
        <trans-unit id="10508667a9f0cb2b801a082330c255eed8059206" translate="yes" xml:space="preserve">
          <source>The following menu items apply to the currently selected process, provided it is stopped at a breakpoint (for details, see section &lt;code&gt;&lt;a href=&quot;#attach&quot;&gt;Attach Process window&lt;/a&gt;&lt;/code&gt;):</source>
          <target state="translated">Следующие пункты меню применяются к текущему выбранному процессу, при условии, что он остановлен в точке останова (подробности см. В разделе &lt;code&gt;&lt;a href=&quot;#attach&quot;&gt;Attach Process window&lt;/a&gt;&lt;/code&gt; ):</target>
        </trans-unit>
        <trans-unit id="012b9ddb6f5b2f9ff9b23f710bee122c826518c8" translate="yes" xml:space="preserve">
          <source>The following menu items apply to the currently selected process:</source>
          <target state="translated">Следующие пункты меню применяются к текущему выбранному процессу:</target>
        </trans-unit>
        <trans-unit id="961db581de293dbe681aab0fe7f1fa5413883ae0" translate="yes" xml:space="preserve">
          <source>The following message is sent to fred's client:</source>
          <target state="translated">Следующее сообщение отправляется клиенту Фреда:</target>
        </trans-unit>
        <trans-unit id="040a3190564c92ea22bf0b64f131001c6c8e6bcc" translate="yes" xml:space="preserve">
          <source>The following message is sent to peter's client:</source>
          <target state="translated">Следующее сообщение отправляется клиенту Питера:</target>
        </trans-unit>
        <trans-unit id="46e910fb5b7dc40614e76e8f199ed8c133275031" translate="yes" xml:space="preserve">
          <source>The following message is taken care of by the &lt;code&gt;ssh_client_channel&lt;/code&gt; behavior.</source>
          <target state="translated">Следующее сообщение &lt;code&gt;ssh_client_channel&lt;/code&gt; поведением ssh_client_channel .</target>
        </trans-unit>
        <trans-unit id="568021cb728093af7ccf7e34bcf43fc6d465a610" translate="yes" xml:space="preserve">
          <source>The following message is taken care of by the &lt;code&gt;ssh_server_channel&lt;/code&gt; behavior.</source>
          <target state="translated">Следующее сообщение &lt;code&gt;ssh_server_channel&lt;/code&gt; поведением ssh_server_channel .</target>
        </trans-unit>
        <trans-unit id="95574b85a29dc16b146c7d05b6e10a7f4673d155" translate="yes" xml:space="preserve">
          <source>The following message is used to report that a response to a request has been received. The only request an agent can send is an Inform-Request.</source>
          <target state="translated">Следующее сообщение используется для сообщения о том,что ответ на запрос получен.Единственный запрос,который может отправить агент,-это Информ-запрос.</target>
        </trans-unit>
        <trans-unit id="0c7528a0e8b223caeddcbcb738daf3c373f6236b" translate="yes" xml:space="preserve">
          <source>The following options are accepted by &lt;code&gt;&lt;a href=&quot;#cursor-2&quot;&gt;cursor/2&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#eval-2&quot;&gt;eval/2&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#fold-4&quot;&gt;fold/4&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;#info-2&quot;&gt;info/2&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">Для &lt;code&gt;&lt;a href=&quot;#cursor-2&quot;&gt;cursor/2&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#eval-2&quot;&gt;eval/2&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#fold-4&quot;&gt;fold/4&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;#info-2&quot;&gt;info/2&lt;/a&gt;&lt;/code&gt; принимаются следующие параметры :</target>
        </trans-unit>
        <trans-unit id="61183e21017b0486797e22d4c6cd3d34960e2bbe" translate="yes" xml:space="preserve">
          <source>The following options are also available, but their use is not recommended (they are mostly for Dialyzer developers and internal debugging):</source>
          <target state="translated">Также доступны следующие варианты,но их использование не рекомендуется (в основном они предназначены для разработчиков Dialyzer и внутренней отладки):</target>
        </trans-unit>
        <trans-unit id="87ad7915cdbf5aabf9ec8f4e6f650717a3e51ad5" translate="yes" xml:space="preserve">
          <source>The following options are available:</source>
          <target state="translated">Доступны следующие варианты:</target>
        </trans-unit>
        <trans-unit id="bd679e7b65020adaa7caadfb8cc5ecd8137541b1" translate="yes" xml:space="preserve">
          <source>The following options are client-specific or have a slightly different meaning in the client than in the server:</source>
          <target state="translated">Следующие опции специфичны для клиента или имеют немного другое значение в клиенте,чем в сервере:</target>
        </trans-unit>
        <trans-unit id="43fc95d7126c192227c57609b602277d7d9fc9c6" translate="yes" xml:space="preserve">
          <source>The following options are relevant for execution:</source>
          <target state="translated">Следующие опции относятся к исполнению:</target>
        </trans-unit>
        <trans-unit id="e08de76658d5ff2a86a979ad65f0c82faad76c53" translate="yes" xml:space="preserve">
          <source>The following options are server-specific or have a slightly different meaning in the server than in the client:</source>
          <target state="translated">Следующие опции специфичны для сервера или имеют немного другое значение в сервере,чем в клиенте:</target>
        </trans-unit>
        <trans-unit id="05f80f80cb76aee8e2eb49065b6adb6528a602a4" translate="yes" xml:space="preserve">
          <source>The following options are valid for specifying an SSH/SFTP connection (that is, can be used as configuration elements):</source>
          <target state="translated">Следующие опции действительны для указания SSH/SFTP соединения (т.е.могут быть использованы в качестве элементов конфигурации):</target>
        </trans-unit>
        <trans-unit id="64236fe6def7f266116ddf3fd4dbff2f206d4ac0" translate="yes" xml:space="preserve">
          <source>The following options can also be specified with the suite information list:</source>
          <target state="translated">С помощью списка информации о комплекте можно также указать следующие опции:</target>
        </trans-unit>
        <trans-unit id="043cc144ef71fec58f8bf8029dbf8e2faa8691c0" translate="yes" xml:space="preserve">
          <source>The following options can be given:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f19a5edc418a6bcc2f47d78030913af7ccd1058" translate="yes" xml:space="preserve">
          <source>The following options can be used:</source>
          <target state="translated">Могут быть использованы следующие опции:</target>
        </trans-unit>
        <trans-unit id="11c58ec5e85924908f7ac6436290b127a355d50e" translate="yes" xml:space="preserve">
          <source>The following options have the same meaning in the client and the server:</source>
          <target state="translated">Следующие опции имеют одинаковое значение для клиента и сервера:</target>
        </trans-unit>
        <trans-unit id="cc3e03d64e601199200fd4b43567e38970933b0e" translate="yes" xml:space="preserve">
          <source>The following options modify the defaults for the extraction as follows:</source>
          <target state="translated">Следующие опции изменяют значения по умолчанию для извлечения следующим образом:</target>
        </trans-unit>
        <trans-unit id="ce8906ae4045d2d535cd313e6ec00213370b53c4" translate="yes" xml:space="preserve">
          <source>The following options must be present:</source>
          <target state="translated">Должны присутствовать следующие варианты:</target>
        </trans-unit>
        <trans-unit id="0a2f1d45ea56db7e397408b134364d0f8afeb1b3" translate="yes" xml:space="preserve">
          <source>The following output is shown:</source>
          <target state="translated">На рисунке показан следующий вывод:</target>
        </trans-unit>
        <trans-unit id="1e25b43e0cc5f60f33a4f8cad836e1610d7400d5" translate="yes" xml:space="preserve">
          <source>The following pair is returned for halt logs opened in &lt;code&gt;read_write&lt;/code&gt; mode:</source>
          <target state="translated">Следующая пара возвращается для журналов остановок, открытых в режиме &lt;code&gt;read_write&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c33b12b3e0b9d36e7372996a4a7abaf00697933a" translate="yes" xml:space="preserve">
          <source>The following pairs are returned for all logs opened in &lt;code&gt;read_write&lt;/code&gt; mode:</source>
          <target state="translated">Следующие пары возвращаются для всех журналов, открытых в режиме &lt;code&gt;read_write&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="7611c3aa913240353c120613c97a195274c20308" translate="yes" xml:space="preserve">
          <source>The following pairs are returned for all logs:</source>
          <target state="translated">Следующие пары возвращаются для всех журналов:</target>
        </trans-unit>
        <trans-unit id="91a838c6cf493f03c500bbdbcdd502edf542e0fe" translate="yes" xml:space="preserve">
          <source>The following pairs are returned for wrap logs opened in &lt;code&gt;read_write&lt;/code&gt; mode:</source>
          <target state="translated">Следующие пары возвращаются для журналов &lt;code&gt;read_write&lt;/code&gt; открытых в режиме read_write :</target>
        </trans-unit>
        <trans-unit id="224537c90399cde228dbede4c53cbc30f714374c" translate="yes" xml:space="preserve">
          <source>The following parameters can be specified for each Erlang service:</source>
          <target state="translated">Для каждой службы Erlang можно задать следующие параметры:</target>
        </trans-unit>
        <trans-unit id="7561aff36c4e31e9b40cf0d53c766582f8727228" translate="yes" xml:space="preserve">
          <source>The following parameters represents the SNMP configuration files &lt;code&gt;context.conf&lt;/code&gt;, &lt;code&gt;standard.conf&lt;/code&gt;, &lt;code&gt;community.conf&lt;/code&gt;, &lt;code&gt;vacm.conf&lt;/code&gt;, &lt;code&gt;usm.conf&lt;/code&gt;, &lt;code&gt;notify.conf&lt;/code&gt;, &lt;code&gt;target_addr.conf&lt;/code&gt;, and &lt;code&gt;target_params.conf&lt;/code&gt;. Notice that all values in &lt;code&gt;agent.conf&lt;/code&gt; can be modified by the parameters listed above. All these configuration files have default values set by the &lt;code&gt;SNMP&lt;/code&gt; application. These values can be overridden by suppling a list of valid configuration values or a file located in the test suites data directory, which can produce a list of valid configuration values if you apply function &lt;code&gt;file:consult/1&lt;/code&gt; to the file.</source>
          <target state="translated">Следующие параметры представляют файлы конфигурации SNMP &lt;code&gt;context.conf&lt;/code&gt; , &lt;code&gt;standard.conf&lt;/code&gt; , &lt;code&gt;community.conf&lt;/code&gt; , &lt;code&gt;vacm.conf&lt;/code&gt; , &lt;code&gt;usm.conf&lt;/code&gt; , &lt;code&gt;notify.conf&lt;/code&gt; , &lt;code&gt;target_addr.conf&lt;/code&gt; и &lt;code&gt;target_params.conf&lt;/code&gt; . Обратите внимание, что все значения в &lt;code&gt;agent.conf&lt;/code&gt; можно изменить с помощью параметров, перечисленных выше. Все эти файлы конфигурации имеют значения по умолчанию, установленные приложением &lt;code&gt;SNMP&lt;/code&gt; . Эти значения можно переопределить, предоставив список допустимых значений конфигурации или файл, расположенный в каталоге данных тестовых наборов, который может создать список допустимых значений конфигурации, если вы примените &lt;code&gt;file:consult/1&lt;/code&gt; функции : consult / 1 в файл.</target>
        </trans-unit>
        <trans-unit id="cf9b8bf83a4a013f2ea8d7a63a8c6eceb1e8ce5f" translate="yes" xml:space="preserve">
          <source>The following pattern matches &quot;foo&quot; preceded by three digits and any three characters that are not &quot;999&quot;:</source>
          <target state="translated">Следующий образец совпадает с &quot;фу&quot;,которому предшествуют три цифры и любые три символа,которые не являются &quot;999&quot;:</target>
        </trans-unit>
        <trans-unit id="b6c387fc7cb1c2a0aaf335c75b4b32deefd1c2b6" translate="yes" xml:space="preserve">
          <source>The following picture gives an overview of the mechanism to select an MIB view:</source>
          <target state="translated">На следующем рисунке представлен обзор механизма выбора вида MIB:</target>
        </trans-unit>
        <trans-unit id="343b7de69e7382fea1083cf8cb82178662515737" translate="yes" xml:space="preserve">
          <source>The following picture illustrates the idea:</source>
          <target state="translated">Следующая картинка иллюстрирует эту идею:</target>
        </trans-unit>
        <trans-unit id="4b30adf5dd015c5f072d818ec045884b44dff621" translate="yes" xml:space="preserve">
          <source>The following prerequisites is required for understanding the material in the &lt;code&gt;Event Tracer (ET)&lt;/code&gt; User's Guide:</source>
          <target state="translated">Для понимания материалов Руководства пользователя &lt;code&gt;Event Tracer (ET)&lt;/code&gt; необходимы следующие предварительные условия :</target>
        </trans-unit>
        <trans-unit id="f494d18baeb5626e63a43266d42eed96b8ed12a2" translate="yes" xml:space="preserve">
          <source>The following prerequisites is required for understanding the material in the Megaco User's Guide:</source>
          <target state="translated">Для понимания материала,содержащегося в Руководстве пользователя Megaco,необходимы следующие предварительные условия:</target>
        </trans-unit>
        <trans-unit id="1cbd57540b48d0efa55b14338c8830cec00d8547" translate="yes" xml:space="preserve">
          <source>The following prerequisites is required for understanding the material in the Reltool User's Guide:</source>
          <target state="translated">Для понимания материала Руководства пользователя Reltool требуются следующие предпосылки:</target>
        </trans-unit>
        <trans-unit id="7e4d733e362ec6903442fab3ca35dcd536f3cdbe" translate="yes" xml:space="preserve">
          <source>The following prerequisites is required for understanding the material in the SNMP User's Guide:</source>
          <target state="translated">Для понимания материала Руководства пользователя SNMP необходимы следующие предпосылки:</target>
        </trans-unit>
        <trans-unit id="fab1a3516c76bbdd3d05df3eae1d2f555b42050e" translate="yes" xml:space="preserve">
          <source>The following procedure does not require root privilege:</source>
          <target state="translated">Следующая процедура не требует привилегий root:</target>
        </trans-unit>
        <trans-unit id="a8602668ad76f501ac94f891d7bfbf36be343c4f" translate="yes" xml:space="preserve">
          <source>The following program illustrates the different ways of creating funs:</source>
          <target state="translated">Следующая программа иллюстрирует различные способы создания развлечений:</target>
        </trans-unit>
        <trans-unit id="dbcee6e28420ee50b59b118c6bd9505eaeb1f3e3" translate="yes" xml:space="preserve">
          <source>The following program module creates and populates previously defined tables:</source>
          <target state="translated">Следующий программный модуль создает и заполняет ранее определенные таблицы:</target>
        </trans-unit>
        <trans-unit id="872226e20506f4791f4924b86b65d0e2ff5aeff1" translate="yes" xml:space="preserve">
          <source>The following queries are accepted from remote nodes:</source>
          <target state="translated">От удаленных узлов принимаются следующие запросы:</target>
        </trans-unit>
        <trans-unit id="34fcb8ab715f637bf664ee99fb64aae24ae2711f" translate="yes" xml:space="preserve">
          <source>The following record definitions can be created:</source>
          <target state="translated">Могут быть созданы следующие определения записей:</target>
        </trans-unit>
        <trans-unit id="7aba38102e6596c004eb1b74efe69102547563ee" translate="yes" xml:space="preserve">
          <source>The following records are generated because of type &lt;code&gt;Emb&lt;/code&gt;:</source>
          <target state="translated">Следующие записи создаются из-за типа &lt;code&gt;Emb&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="52b8b7242e195bbd29d16d5919c21b7b689163ef" translate="yes" xml:space="preserve">
          <source>The following records used by xmerl to save the parsed data are defined in &lt;code&gt;xmerl.hrl&lt;/code&gt;</source>
          <target state="translated">Следующие записи, используемые xmerl для сохранения проанализированных данных, определены в &lt;code&gt;xmerl.hrl&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7d8a7943f947fe72299ad61ae324cdc2eb219124" translate="yes" xml:space="preserve">
          <source>The following representations control how and where tests are executed:</source>
          <target state="translated">Следующие представления контролируют,как и где выполняются тесты:</target>
        </trans-unit>
        <trans-unit id="86bacadf1ea90a3c97d82c63773f210e42c2a214" translate="yes" xml:space="preserve">
          <source>The following representations specify fixture handling for test sets:</source>
          <target state="translated">Следующие представления определяют порядок обращения с приспособлением для испытательных комплектов:</target>
        </trans-unit>
        <trans-unit id="010a5b84d478f42d2d6af978a84f08199f613d86" translate="yes" xml:space="preserve">
          <source>The following requirements apply to the &lt;code&gt;.app&lt;/code&gt; file for an included application:</source>
          <target state="translated">К файлу &lt;code&gt;.app&lt;/code&gt; прилагаемого приложения применяются следующие требования :</target>
        </trans-unit>
        <trans-unit id="47012e55fe1825d2922f7d5fb219850e8c4ce7ee" translate="yes" xml:space="preserve">
          <source>The following runs a test executing &lt;code&gt;tc12&lt;/code&gt; in &lt;code&gt;top1&lt;/code&gt; and any subgroup under &lt;code&gt;top1&lt;/code&gt; where it can be found (&lt;code&gt;sub11&lt;/code&gt; and &lt;code&gt;sub121&lt;/code&gt;):</source>
          <target state="translated">Следующий запускает тест, выполняющий &lt;code&gt;tc12&lt;/code&gt; в &lt;code&gt;top1&lt;/code&gt; и любой подгруппе в &lt;code&gt;top1&lt;/code&gt; , где он может быть найден ( &lt;code&gt;sub11&lt;/code&gt; и &lt;code&gt;sub121&lt;/code&gt; ):</target>
        </trans-unit>
        <trans-unit id="0e90b96a7f25790f2708f620c0e643b1c7f52c18" translate="yes" xml:space="preserve">
          <source>The following script illustrates a modification where the node is given the name &lt;code&gt;cp1&lt;/code&gt;, and where the environment variables &lt;code&gt;HEART_COMMAND&lt;/code&gt; and &lt;code&gt;TERM&lt;/code&gt; have been added to the previous script:</source>
          <target state="translated">Следующий сценарий иллюстрирует модификацию, в которой узлу присвоено имя &lt;code&gt;cp1&lt;/code&gt; , а переменные среды &lt;code&gt;HEART_COMMAND&lt;/code&gt; и &lt;code&gt;TERM&lt;/code&gt; были добавлены в предыдущий сценарий:</target>
        </trans-unit>
        <trans-unit id="5db13a72ee33e776ce2ddcad2d3b2330d02936db" translate="yes" xml:space="preserve">
          <source>The following script illustrates the behaviour of the program:</source>
          <target state="translated">Следующий скрипт иллюстрирует поведение программы:</target>
        </trans-unit>
        <trans-unit id="4cb6bb01c4a2fc6f1d31fffabe3ea35bf47bbd99" translate="yes" xml:space="preserve">
          <source>The following script illustrates the default behaviour of the program:</source>
          <target state="translated">Следующий скрипт иллюстрирует поведение программы по умолчанию:</target>
        </trans-unit>
        <trans-unit id="1730c3be7b670e5f6ed8dc96c7503a465a16bfb5" translate="yes" xml:space="preserve">
          <source>The following searches &lt;code&gt;top1&lt;/code&gt; and all its subgroups for &lt;code&gt;tc16&lt;/code&gt; resulting in that this test case executes in group &lt;code&gt;sub121&lt;/code&gt;:</source>
          <target state="translated">Следующие поиски &lt;code&gt;top1&lt;/code&gt; и все ее подгруппы для &lt;code&gt;tc16&lt;/code&gt; , в результате чего этот тест случае выполняется в группе &lt;code&gt;sub121&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="526a47fb0328941b790c466199e779b1931bd0e8" translate="yes" xml:space="preserve">
          <source>The following section describes the mandatory and optional test suite functions that &lt;code&gt;Common Test&lt;/code&gt; calls during test execution. For more details, see section &lt;code&gt;&lt;a href=&quot;write_test_chapter&quot;&gt;Writing Test Suites&lt;/a&gt;&lt;/code&gt; in the User's Guide.</source>
          <target state="translated">В следующем разделе описаны обязательные и необязательные функции набора тестов, которые &lt;code&gt;Common Test&lt;/code&gt; вызывает во время выполнения теста. Дополнительные сведения см. В разделе &amp;laquo; &lt;code&gt;&lt;a href=&quot;write_test_chapter&quot;&gt;Writing Test Suites&lt;/a&gt;&lt;/code&gt; &amp;raquo; Руководства пользователя.</target>
        </trans-unit>
        <trans-unit id="72c1a7ce03d50e78be89c8cc10dbc16d75c4a19c" translate="yes" xml:space="preserve">
          <source>The following sections contain reference material for the regular expressions used by this module. The information is based on the PCRE documentation, with changes where this module behaves differently to the PCRE library.</source>
          <target state="translated">Следующие разделы содержат справочный материал по регулярным выражениям,используемым этим модулем.Информация основана на документации PCRE,с изменениями,в которых этот модуль ведет себя иначе,чем библиотека PCRE.</target>
        </trans-unit>
        <trans-unit id="83810d4821d49c1738acda1b065dd05f79bc8cd1" translate="yes" xml:space="preserve">
          <source>The following sections deal with target systems with different requirements of functionality:</source>
          <target state="translated">Следующие разделы посвящены целевым системам с различными требованиями к функциональности:</target>
        </trans-unit>
        <trans-unit id="38eecd6e67f72292d41c686c8caab1a223f8a8a9" translate="yes" xml:space="preserve">
          <source>The following sections describe how the instrumentation functions should be defined in Erlang for the different operations. In the following, &lt;code&gt;RowIndex&lt;/code&gt; is a list of key values for the table, and &lt;code&gt;Column&lt;/code&gt; is a column number.</source>
          <target state="translated">В следующих разделах описывается, как функции инструментария должны быть определены в Erlang для различных операций. Далее &lt;code&gt;RowIndex&lt;/code&gt; - это список ключевых значений для таблицы, а &lt;code&gt;Column&lt;/code&gt; - это номер столбца.</target>
        </trans-unit>
        <trans-unit id="93b41da5ab42cf67eae696be1649b8c0efaf1bfc" translate="yes" xml:space="preserve">
          <source>The following sections describe how to use CTHs, when they are run, and how to manipulate the test results in a CTH.</source>
          <target state="translated">В следующих разделах описано,как использовать КТГ,когда она выполняется,и как манипулировать результатами теста при КТГ.</target>
        </trans-unit>
        <trans-unit id="31ea898329f4b3682826cd0bafcd93ad163d085b" translate="yes" xml:space="preserve">
          <source>The following sections describe sequential tracing and its most fundamental concepts.</source>
          <target state="translated">В следующих разделах описывается последовательное отслеживание и его наиболее фундаментальные понятия.</target>
        </trans-unit>
        <trans-unit id="9600ad9c1d4332036b9e8528fa9289370114665e" translate="yes" xml:space="preserve">
          <source>The following sections describe some of the fields in the information tabs. These are fields that do not exist in the raw crashdump, or in some way differ from the fields in the raw crashdump. For details about other fields, see the &lt;code&gt;ERTS User's Guide&lt;/code&gt;, section &quot;How to interpret the Erlang crash dumps&quot;. That section can also be opened from the &lt;strong&gt;Help&lt;/strong&gt; menu in the main window. There are also links from the following sections to related information in &quot;How to interpret the Erlang crash dumps&quot;.</source>
          <target state="translated">В следующих разделах описаны некоторые поля на информационных вкладках. Это поля, которых нет в необработанном аварийном дампе или каким-то образом они отличаются от полей в исходном аварийном дампе. Подробные сведения о других полях см. В руководстве &lt;code&gt;ERTS User's Guide&lt;/code&gt; , раздел &amp;laquo;Как интерпретировать аварийные дампы Erlang&amp;raquo;. Этот раздел также можно открыть из меню &amp;laquo; &lt;strong&gt;Справка&amp;raquo;&lt;/strong&gt; в главном окне. В следующих разделах также есть ссылки на соответствующую информацию в &amp;laquo;Как интерпретировать аварийные дампы Erlang&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="e038c99195f68fa297f2e5f9e78c69595a14730e" translate="yes" xml:space="preserve">
          <source>The following sections describe the mandatory and optional CTH functions that &lt;code&gt;Common Test&lt;/code&gt; calls during test execution. For more details, see section &lt;code&gt;&lt;a href=&quot;ct_hooks_chapter&quot;&gt;Common Test Hooks&lt;/a&gt;&lt;/code&gt; in the User's Guide.</source>
          <target state="translated">В следующих разделах описаны обязательные и необязательные функции CTH, которые &lt;code&gt;Common Test&lt;/code&gt; вызывает во время выполнения теста. Дополнительные сведения см. В разделе &amp;laquo; &lt;code&gt;&lt;a href=&quot;ct_hooks_chapter&quot;&gt;Common Test Hooks&lt;/a&gt;&lt;/code&gt; в Руководстве пользователя.</target>
        </trans-unit>
        <trans-unit id="8ca82394dc00f1e6d08913e914b59a46cf6c2484" translate="yes" xml:space="preserve">
          <source>The following sections describe the use of each metacharacter.</source>
          <target state="translated">В следующих разделах описывается использование каждого метасимвола.</target>
        </trans-unit>
        <trans-unit id="57bd03425adcf43ca596408a2b02f2936cfeb5dd" translate="yes" xml:space="preserve">
          <source>The following sections describe these steps.</source>
          <target state="translated">Следующие разделы описывают эти этапы.</target>
        </trans-unit>
        <trans-unit id="ef3caea09c20221894e510d93d0376e9f32ba13c" translate="yes" xml:space="preserve">
          <source>The following sections show some examples of how to profile with Fprof. See also the reference manual &lt;code&gt;&lt;a href=&quot;fprof&quot;&gt;fprof(3)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">В следующих разделах показаны некоторые примеры профилирования с помощью Fprof. См. Также справочное руководство &lt;code&gt;&lt;a href=&quot;fprof&quot;&gt;fprof(3)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="98275a3598f57cab63cd60d26cf4b95397a5db2f" translate="yes" xml:space="preserve">
          <source>The following sections show some examples of profiling with &lt;code&gt;cprof&lt;/code&gt;. See also &lt;code&gt;&lt;a href=&quot;cprof&quot;&gt;cprof(3)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">В следующих разделах показаны некоторые примеры профилирования с помощью &lt;code&gt;cprof&lt;/code&gt; . См. Также &lt;code&gt;&lt;a href=&quot;cprof&quot;&gt;cprof(3)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3346c4bffa9bbaca48b8099eae111ab7c83c1879" translate="yes" xml:space="preserve">
          <source>The following sections show some features of Xref, beginning with a module check and a predefined analysis. Then follow examples that can be skipped on the first reading; not all of the concepts used are explained, and it is assumed that the &lt;code&gt;&lt;a href=&quot;xref&quot;&gt;reference manual&lt;/a&gt;&lt;/code&gt; has been at least skimmed.</source>
          <target state="translated">В следующих разделах показаны некоторые функции Xref, начиная с проверки модуля и предопределенного анализа. Затем следуйте примерам, которые можно пропустить при первом чтении; не все используемые концепции объяснены, и предполагается, что &lt;code&gt;&lt;a href=&quot;xref&quot;&gt;reference manual&lt;/a&gt;&lt;/code&gt; было хотя бы бегло бегло.</target>
        </trans-unit>
        <trans-unit id="4f224d7ff4347a5d76be2a01609f9bb95ab48bc8" translate="yes" xml:space="preserve">
          <source>The following sequence of calls fails:</source>
          <target state="translated">Следующая последовательность вызовов не удается:</target>
        </trans-unit>
        <trans-unit id="1024b17ae9d252d4afcd5d6cdfbf0b7552256b7e" translate="yes" xml:space="preserve">
          <source>The following sequence of calls may fail:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f684598ccd6c3370add4d7675b782860903e544" translate="yes" xml:space="preserve">
          <source>The following sequence works, as the call to &lt;code&gt;repair_continuation/2&lt;/code&gt; reestablishes the (deliberately) invalidated continuation &lt;code&gt;Broken&lt;/code&gt;.</source>
          <target state="translated">Следующая последовательность работает, поскольку вызов &lt;code&gt;repair_continuation/2&lt;/code&gt; восстанавливает (намеренно) недействительное продолжение &lt;code&gt;Broken&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="36de49fc63b14d805bc91f85891a3ad4b6c71807" translate="yes" xml:space="preserve">
          <source>The following sequence works, as the call to &lt;code&gt;repair_continuation/2&lt;/code&gt; reestablishes the &lt;code&gt;MaybeBroken&lt;/code&gt; continuation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8d34878ccc7af10841358fe32d20c8e85617519" translate="yes" xml:space="preserve">
          <source>The following session with the Erlang shell shows how to load the &lt;code&gt;FRUITS&lt;/code&gt; database:</source>
          <target state="translated">Следующий сеанс с оболочкой Erlang показывает, как загрузить базу данных &lt;code&gt;FRUITS&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="1ca2b9cadd413c828114f5fdadb155510f45b89f" translate="yes" xml:space="preserve">
          <source>The following shell interaction starts &lt;code&gt;Mnesia&lt;/code&gt; and initializes the schema for the &lt;code&gt;Company&lt;/code&gt; database:</source>
          <target state="translated">Следующее взаимодействие с оболочкой запускает &lt;code&gt;Mnesia&lt;/code&gt; и инициализирует схему для базы данных &lt;code&gt;Company&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="3e56ec35aa2570200adfb4251b42d9a7a4dbc048" translate="yes" xml:space="preserve">
          <source>The following shows an example &lt;code&gt;.rel&lt;/code&gt; file with TLS added:</source>
          <target state="translated">Ниже показан пример файла &lt;code&gt;.rel&lt;/code&gt; с добавленным TLS:</target>
        </trans-unit>
        <trans-unit id="e94749126c9966bcf63f22766109b91add03d6be" translate="yes" xml:space="preserve">
          <source>The following shows examples of how UTF-8 encoded binaries can be created and manipulated:</source>
          <target state="translated">Ниже приведены примеры того,как можно создавать кодированные двоичные файлы в кодировке UTF-8 и манипулировать ими:</target>
        </trans-unit>
        <trans-unit id="53b230af1628e298070b4609c7e79b754d5b0d07" translate="yes" xml:space="preserve">
          <source>The following shows how the compiler can be called from the Erlang shell:</source>
          <target state="translated">Ниже показано,как можно вызвать компилятор из оболочки Erlang:</target>
        </trans-unit>
        <trans-unit id="729768340129de2ea35b78f26817f116e7bf52b6" translate="yes" xml:space="preserve">
          <source>The following simple code illustrates the relationship between the simplified access functions used in most of the examples and their more flexible counterparts:</source>
          <target state="translated">Следующий простой код иллюстрирует связь между функциями упрощенного доступа,используемыми в большинстве примеров,и их более гибкими аналогами:</target>
        </trans-unit>
        <trans-unit id="b84b8caa8b26cb602514d1eab6fc03a38ae48762" translate="yes" xml:space="preserve">
          <source>The following small module is used in the subsequent example:</source>
          <target state="translated">В следующем примере используется следующий небольшой модуль:</target>
        </trans-unit>
        <trans-unit id="6b1dfc37e671a01a444893fce16128adaeffd6fa" translate="yes" xml:space="preserve">
          <source>The following steps are needed to get a running agent:</source>
          <target state="translated">Следующие шаги необходимы,чтобы получить работающего агента:</target>
        </trans-unit>
        <trans-unit id="bc08bddc5161d849d8adaf8a442d077969754d3f" translate="yes" xml:space="preserve">
          <source>The following steps are needed to get the manager running:</source>
          <target state="translated">Следующие шаги необходимы для запуска менеджера:</target>
        </trans-unit>
        <trans-unit id="a39039b95c7681d9ca35239506450ca1ffc99ef1" translate="yes" xml:space="preserve">
          <source>The following symbols are always defined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7bbf8b199c9798edd4d7f0d37698a1bff7dfbe7" translate="yes" xml:space="preserve">
          <source>The following table describes the current state of standards compliance for TLS 1.3.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa6e913607cc215db5650f46601c1682dec9a4c4" translate="yes" xml:space="preserve">
          <source>The following tags appears in the list:</source>
          <target state="translated">В списке появляются следующие теги:</target>
        </trans-unit>
        <trans-unit id="59f95e04d57dcd84839504590aa3ea9df899aa69" translate="yes" xml:space="preserve">
          <source>The following tags have special meaning:</source>
          <target state="translated">Следующие теги имеют особое значение:</target>
        </trans-unit>
        <trans-unit id="1e75dc33e0130efecbbf3b0c117aa1a4317b0d14" translate="yes" xml:space="preserve">
          <source>The following terms are allowed in a cover specification file:</source>
          <target state="translated">В файле спецификации обложки допускаются следующие условия:</target>
        </trans-unit>
        <trans-unit id="082dcb2df904c716cc9a3e85c660d6af2e65ff42" translate="yes" xml:space="preserve">
          <source>The following top level &lt;code&gt;options&lt;/code&gt; are supported:</source>
          <target state="translated">Следующий уровень верхнего &lt;code&gt;options&lt;/code&gt; поддерживаются:</target>
        </trans-unit>
        <trans-unit id="49a42c98aae1a012fca04ff4fc1c26473f67efa7" translate="yes" xml:space="preserve">
          <source>The following topics are included:</source>
          <target state="translated">Включены следующие темы:</target>
        </trans-unit>
        <trans-unit id="05245f82bf6574a4a5eff794c54d89c9d6171eb9" translate="yes" xml:space="preserve">
          <source>The following topics are not treated in this section:</source>
          <target state="translated">Следующие темы в этом разделе не рассматриваются:</target>
        </trans-unit>
        <trans-unit id="ab7564645416f18d8a1c44a537bed7227fcf3ddd" translate="yes" xml:space="preserve">
          <source>The following trace output is received during test:</source>
          <target state="translated">Во время тестирования получен следующий выходной сигнал:</target>
        </trans-unit>
        <trans-unit id="b466650d4111c63d9300f7fbae0b73cc83cacf0c" translate="yes" xml:space="preserve">
          <source>The following two Kernel configuration parameters affect the behavior of all sockets opened on an Erlang node:</source>
          <target state="translated">Следующие два параметра конфигурации ядра влияют на поведение всех сокетов,открытых на узле Erlang:</target>
        </trans-unit>
        <trans-unit id="4a11518ecf3b3d71056ddbfd18678d2117872201" translate="yes" xml:space="preserve">
          <source>The following two calls give the same result (but certainly not the same execution time):</source>
          <target state="translated">Следующие два вызова дают один и тот же результат (но,конечно,не одно и то же время выполнения):</target>
        </trans-unit>
        <trans-unit id="5507869e7948c09fc8040111e6b2cadd35e4aff0" translate="yes" xml:space="preserve">
          <source>The following two directories must exist in the system to run the agent:</source>
          <target state="translated">Для работы агента в системе должны существовать два следующих каталога:</target>
        </trans-unit>
        <trans-unit id="113cb904554a59290d2e213118f8d8428037b8fb" translate="yes" xml:space="preserve">
          <source>The following two functions can be used to retrieve system information. For details, see the Reference Manual.</source>
          <target state="translated">Для получения системной информации можно использовать следующие две функции.Подробнее см.в справочном руководстве.</target>
        </trans-unit>
        <trans-unit id="71cd872babc8d6113efd7cead6cf75e880db8ea3" translate="yes" xml:space="preserve">
          <source>The following two functions manipulate indexes on existing tables:</source>
          <target state="translated">Следующие две функции управляют индексами в существующих таблицах:</target>
        </trans-unit>
        <trans-unit id="706b90dd5c946a37fcc3ef255278e31f7c9293de" translate="yes" xml:space="preserve">
          <source>The following two notations are available for representation of &lt;code&gt;BIT STRING&lt;/code&gt; values in Erlang and as input to the encode functions:</source>
          <target state="translated">Следующие две нотации доступны для представления значений &lt;code&gt;BIT STRING&lt;/code&gt; в Erlang и в качестве входных данных для функций кодирования:</target>
        </trans-unit>
        <trans-unit id="9929e878110d22fef5c962cd4c16eef48be74d8c" translate="yes" xml:space="preserve">
          <source>The following two pairs of functions support this scenario:</source>
          <target state="translated">Следующие две пары функций поддерживают этот сценарий:</target>
        </trans-unit>
        <trans-unit id="09ba41aca160585c0b08fc3e3fe758e0deed5098" translate="yes" xml:space="preserve">
          <source>The following type definitions are used by more than one function in the FTP client API:</source>
          <target state="translated">Следующие определения типов используются более чем одной функцией в клиентском API FTP:</target>
        </trans-unit>
        <trans-unit id="04de34ef25f9ef07a1ca24a2f09beb4aec1f11d5" translate="yes" xml:space="preserve">
          <source>The following types are defined at the moment:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9226ce7513015120a190ef4af2c57e38cf1718d8" translate="yes" xml:space="preserve">
          <source>The following values are allowed for &lt;code&gt;Key&lt;/code&gt;:</source>
          <target state="translated">Для &lt;code&gt;Key&lt;/code&gt; разрешены следующие значения :</target>
        </trans-unit>
        <trans-unit id="6c84aa8502d90e7ba6f618344ec9f0990938b08f" translate="yes" xml:space="preserve">
          <source>The following verb causes a matching failure, forcing backtracking to occur. It is equivalent to (?!) but easier to read.</source>
          <target state="translated">Следующий глагол вызывает сбой при совпадении,что заставляет искать обратное.Он эквивалентен (?!),но легче читается.</target>
        </trans-unit>
        <trans-unit id="c74b31c10443669b849931e80db4cb844acc7e6d" translate="yes" xml:space="preserve">
          <source>The following verb causes a skip to the next innermost alternative when backtracking reaches it. That is, it cancels any further backtracking within the current alternative.</source>
          <target state="translated">Следующий глагол вызывает переход к следующему внутреннему варианту,когда до него доходит обратный ход.То есть,он отменяет любое дальнейшее отступление в рамках текущей альтернативы.</target>
        </trans-unit>
        <trans-unit id="3626ed56739d6ce7e205e1a6154059baf311b051" translate="yes" xml:space="preserve">
          <source>The following verb causes the match to fail at the current starting position in the subject if there is a later matching failure that causes backtracking to reach it:</source>
          <target state="translated">Следующий глагол вызывает сбой в совпадении на текущей стартовой позиции субъекта,если есть более поздний сбой в совпадении,который приводит к обратному движению к нему:</target>
        </trans-unit>
        <trans-unit id="20e32c99b23fb1cb8aa4ff4619bdeb76fe057cfe" translate="yes" xml:space="preserve">
          <source>The following verb, when specified without a name, is like (*PRUNE), except that if the pattern is unanchored, the &quot;bumpalong&quot; advance is not to the next character, but to the position in the subject where (*SKIP) was encountered.</source>
          <target state="translated">Следующий глагол,если он указан без имени,похож на (*PRUNE),за исключением того,что если образец не окрашен,то &quot;бугор&quot; переходит не к следующему персонажу,а к положению в сюжете,где (*SKIP)был встречен.</target>
        </trans-unit>
        <trans-unit id="56e82a4845f59e054a6c2a8f1874cfef875f8736" translate="yes" xml:space="preserve">
          <source>The following verb, which must not be followed by a name, causes the whole match to fail outright if there is a later matching failure that causes backtracking to reach it. Even if the pattern is unanchored, no further attempts to find a match by advancing the starting point take place.</source>
          <target state="translated">Следующий глагол,за которым не должно следовать имя,приводит к полному провалу матча,если есть более поздний сбой в совпадении,который вызывает обратное движение к нему.Даже если образец не был найден,никаких дальнейших попыток найти совпадение путем продвижения исходной точки не происходит.</target>
        </trans-unit>
        <trans-unit id="4d2ee15663a5b3e2b4b9ab4b42fcb763860ca710" translate="yes" xml:space="preserve">
          <source>The following verbs act as soon as they are encountered. They must not be followed by a name.</source>
          <target state="translated">Следующие глаголы действуют,как только они встречаются.За ними не должно следовать имя.</target>
        </trans-unit>
        <trans-unit id="6bc631f8808db5a059db58a11cb23a25b194b9bc" translate="yes" xml:space="preserve">
          <source>The following verbs do nothing when they are encountered. Matching continues with what follows, but if there is no subsequent match, causing a backtrack to the verb, a failure is forced. That is, backtracking cannot pass to the left of the verb. However, when one of these verbs appears inside an atomic group or an assertion that is true, its effect is confined to that group, as once the group has been matched, there is never any backtracking into it. In this situation, backtracking can &quot;jump back&quot; to the left of the entire atomic group or assertion. (Remember also, as stated above, that this localization also applies in subroutine calls.)</source>
          <target state="translated">Следующие глаголы ничего не делают,когда они встречаются.Матчи продолжаются с тем,что следует за ними,но если нет последующего матча,вызывающего обратную реакцию на глагол,то происходит принудительная неудача.То есть,отступление не может пройти слева от глагола.Однако,когда один из этих глаголов появляется внутри атомарной группы или утверждения,которое является истинным,его действие ограничивается этой группой,так как после совпадения группы никогда не происходит никакого отступления от него.В этой ситуации отступление может &quot;спрыгнуть&quot; влево от всей атомной группы или утверждения.(Помните также,как было сказано выше,что эта локализация применяется и в вызовах подпрограмм).</target>
        </trans-unit>
        <trans-unit id="e618ac47f63af62ceb8671ae5e22050d8ff5aec4" translate="yes" xml:space="preserve">
          <source>The following warnings and restrictions apply to the funs used in with &lt;code&gt;ets:fun2ms/1&lt;/code&gt; and &lt;code&gt;dbg:fun2ms/1&lt;/code&gt;.</source>
          <target state="translated">Следующие предупреждения и ограничения относятся к функциям, используемым с &lt;code&gt;ets:fun2ms/1&lt;/code&gt; и &lt;code&gt;dbg:fun2ms/1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="58ed2789e1ec56e8739ba6ba58818f4844d3585c" translate="yes" xml:space="preserve">
          <source>The following will appear at the console on the node that started the trace client:</source>
          <target state="translated">На узле,который запустил клиент трассировки,в консоли появится следующее:</target>
        </trans-unit>
        <trans-unit id="4f6cfe143c1844487af6c9d7af979551cc8a56ef" translate="yes" xml:space="preserve">
          <source>The foreign key</source>
          <target state="translated">Иностранный ключ</target>
        </trans-unit>
        <trans-unit id="d5bbce337b986ce05bfb1074200a1cd8e6ba791d" translate="yes" xml:space="preserve">
          <source>The format and value of &lt;code&gt;FixationTime&lt;/code&gt; depends on &lt;code&gt;Item&lt;/code&gt;:</source>
          <target state="translated">Формат и значение &lt;code&gt;FixationTime&lt;/code&gt; зависят от &lt;code&gt;Item&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="403056f7b6145ea80b76c6096562c79850393812" translate="yes" xml:space="preserve">
          <source>The format function is also optional. It is called by &lt;code&gt;&lt;a href=&quot;#info-1&quot;&gt;info/1,2&lt;/a&gt;&lt;/code&gt; to give feedback at runtime of how the query is to be evaluated. Try to give as good feedback as possible without showing too much details. In the example, at most seven objects of the table are shown. The format function handles two cases: &lt;code&gt;all&lt;/code&gt; means that all objects of the table are traversed; &lt;code&gt;{lookup,&amp;nbsp;1,&amp;nbsp;KeyValues}&lt;/code&gt; means that the lookup function is used for looking up key values.</source>
          <target state="translated">Функция форматирования также не является обязательной. Он вызывается &lt;code&gt;&lt;a href=&quot;#info-1&quot;&gt;info/1,2&lt;/a&gt;&lt;/code&gt; , чтобы дать во время выполнения обратную связь о том, как должен оцениваться запрос. Постарайтесь дать как можно более хороший отзыв, не раскрывая слишком много деталей. В примере показано не более семи объектов таблицы. Функция форматирования обрабатывает два случая: &lt;code&gt;all&lt;/code&gt; означает, что пройдены все объекты таблицы; &lt;code&gt;{lookup,&amp;nbsp;1,&amp;nbsp;KeyValues}&lt;/code&gt; означает, что функция поиска используется для поиска значений ключей.</target>
        </trans-unit>
        <trans-unit id="a28925d546a087448d542d4ec3fe58c4d1daac9b" translate="yes" xml:space="preserve">
          <source>The format is parsable with the standard Erlang parsing tools &lt;code&gt;erl_scan&lt;/code&gt; and &lt;code&gt;erl_parse&lt;/code&gt;, &lt;code&gt;file:consult/1&lt;/code&gt; or &lt;code&gt;io:read/2&lt;/code&gt;. The parse format is not explained here - it should be easy for the interested to try it out. Note that some flags to &lt;code&gt;analyse/1&lt;/code&gt; will affect the format.</source>
          <target state="translated">Формат можно разобрать с помощью стандартных инструментов синтаксического анализа Erlang &lt;code&gt;erl_scan&lt;/code&gt; и &lt;code&gt;erl_parse&lt;/code&gt; , &lt;code&gt;file:consult/1&lt;/code&gt; или &lt;code&gt;io:read/2&lt;/code&gt; . Формат синтаксического анализа здесь не объясняется - желающим будет легко его попробовать. Обратите внимание, что некоторые флаги для &lt;code&gt;analyse/1&lt;/code&gt; будут влиять на формат.</target>
        </trans-unit>
        <trans-unit id="92dfc6d682f5117a1d9acce5f8982068227b718b" translate="yes" xml:space="preserve">
          <source>The format of &quot;System Events&quot; as defined in the man page for &lt;code&gt;sys&lt;/code&gt; has been clarified and cleaned up. Due to this, code that relied on the internal badly documented previous (before this change) format of OTP's &quot;System Events&quot;, needs to be changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd5e5f8070fec3acf0e1ec232310a61ff03f8b85" translate="yes" xml:space="preserve">
          <source>The format of &lt;code&gt;Drive&lt;/code&gt; is invalid.</source>
          <target state="translated">Формат &lt;code&gt;Drive&lt;/code&gt; недействителен.</target>
        </trans-unit>
        <trans-unit id="dbaf4dd1e5a91b60292984d5a8e1ea127c178da5" translate="yes" xml:space="preserve">
          <source>The format of &lt;code&gt;Listing&lt;/code&gt; depends on the operating system. On UNIX, it is typically produced from the output of the &lt;code&gt;ls -l&lt;/code&gt; shell command.</source>
          <target state="translated">Формат &lt;code&gt;Listing&lt;/code&gt; зависит от операционной системы. В UNIX он обычно создается из вывода команды оболочки &lt;code&gt;ls -l&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3a8dac735cad80fa64163e77b01f6b5b6e6b931f" translate="yes" xml:space="preserve">
          <source>The format of &lt;code&gt;Listing&lt;/code&gt; is a stream of filenames where each filename is separated by &amp;lt;CRLF&amp;gt; or &amp;lt;NL&amp;gt;. Contrary to function &lt;code&gt;ls&lt;/code&gt;, the purpose of &lt;code&gt;nlist&lt;/code&gt; is to enable a program to process filename information automatically.</source>
          <target state="translated">Формат &lt;code&gt;Listing&lt;/code&gt; - это поток имен файлов, где каждое имя файла разделено &amp;lt;CRLF&amp;gt; или &amp;lt;NL&amp;gt;. В отличие от функции &lt;code&gt;ls&lt;/code&gt; , цель &lt;code&gt;nlist&lt;/code&gt; - позволить программе автоматически обрабатывать информацию о имени файла.</target>
        </trans-unit>
        <trans-unit id="ca6bda514e36415bd8dfddbfd465c752506ba14c" translate="yes" xml:space="preserve">
          <source>The format of an audit trail log text item is as follows:</source>
          <target state="translated">Формат текстового элемента контрольного журнала выглядит следующим образом:</target>
        </trans-unit>
        <trans-unit id="44015ed1506dab2702bf874c622404e1cdd4a16b" translate="yes" xml:space="preserve">
          <source>The format of decoded messages and grouped AVPs in the &lt;code&gt;msg&lt;/code&gt; field of diameter_packet records and &lt;code&gt;value&lt;/code&gt; field of diameter_avp records respectively. If &lt;code&gt;record&lt;/code&gt; then a record whose definition is generated from the dictionary file in question. If &lt;code&gt;list&lt;/code&gt; or &lt;code&gt;map&lt;/code&gt; then a &lt;code&gt;[Name | Avps]&lt;/code&gt; pair where &lt;code&gt;Avps&lt;/code&gt; is a list of AVP name/values pairs or a map keyed on AVP names respectively. If &lt;code&gt;none&lt;/code&gt; then the atom-value message name, or &lt;code&gt;undefined&lt;/code&gt; for a Grouped AVP. See also &lt;code&gt;&lt;a href=&quot;diameter_codec#message&quot;&gt;diameter_codec:message()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Формат декодированных сообщений и сгруппированные AVP , в &lt;code&gt;msg&lt;/code&gt; области diameter_packet записей и &lt;code&gt;value&lt;/code&gt; поля diameter_avp записей соответственно. Если &lt;code&gt;record&lt;/code&gt; то это запись, определение которой создано из рассматриваемого файла словаря. Если &lt;code&gt;list&lt;/code&gt; или &lt;code&gt;map&lt;/code&gt; то &lt;code&gt;[Name | Avps]&lt;/code&gt; где &lt;code&gt;Avps&lt;/code&gt; - это список пар имя / значение AVP или карта, привязанная к именам AVP соответственно. Если &lt;code&gt;none&lt;/code&gt; то имя сообщения с атомным значением или &lt;code&gt;undefined&lt;/code&gt; для сгруппированной AVP. См. Также &lt;code&gt;&lt;a href=&quot;diameter_codec#message&quot;&gt;diameter_codec:message()&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="317788b6344114efeaf6f36e9948bb10fc231c82" translate="yes" xml:space="preserve">
          <source>The format of file &lt;code&gt;.hosts.erlang&lt;/code&gt; must be one host name per line. The host names must be within quotes.</source>
          <target state="translated">Формат файла &lt;code&gt;.hosts.erlang&lt;/code&gt; должен содержать одно имя хоста в строке. Имена хостов должны быть заключены в кавычки.</target>
        </trans-unit>
        <trans-unit id="2487f5cf9c75d813920c0dba73a01025e41c80a7" translate="yes" xml:space="preserve">
          <source>The format of received events is not defined.</source>
          <target state="translated">Формат получаемых событий не определен.</target>
        </trans-unit>
        <trans-unit id="9bfd68e235d56611f777394a5db1608f345a2ba3" translate="yes" xml:space="preserve">
          <source>The format of the &lt;code&gt;otp_versions.table&lt;/code&gt; might be subject to changes during the OTP 17 release.</source>
          <target state="translated">Формат &lt;code&gt;otp_versions.table&lt;/code&gt; может быть изменен во время выпуска OTP 17.</target>
        </trans-unit>
        <trans-unit id="689c1f8b385b83aa3589eb65a1746eb08236ca62" translate="yes" xml:space="preserve">
          <source>The format of the configuration file is found in the &lt;code&gt;syslog.conf(5)&lt;/code&gt; manual page, by issuing the command &lt;code&gt;man syslog.conf&lt;/code&gt;.</source>
          <target state="translated">Формат файла конфигурации можно найти на &lt;code&gt;syslog.conf(5)&lt;/code&gt; руководства syslog.conf (5) с помощью команды &lt;code&gt;man syslog.conf&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f9f90e37b89af3e970911fe6712a87407f263ba3" translate="yes" xml:space="preserve">
          <source>The format of the crash dump evolves between OTP releases. Some information described here may not apply to your version. A description like this will never be complete; it is meant as an explanation of the crash dump in general and as a help when trying to find application errors, not as a complete specification.</source>
          <target state="translated">Формат дампа аварии меняется между релизами OTP.Некоторая информация,описанная здесь,может не относиться к вашей версии.Подобное описание никогда не будет полным;оно предназначено не как полная спецификация,а как объяснение дампа падения в целом и как подсказка при попытке найти ошибки приложения.</target>
        </trans-unit>
        <trans-unit id="eb9b12cb8d3ac8423ae8bea95db89eaec323992a" translate="yes" xml:space="preserve">
          <source>The format of the messages is one of the following, depending on if flag &lt;code&gt;timestamp&lt;/code&gt; of the trace token is set to &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="translated">Формат сообщений может быть одним из следующих, в зависимости от того, установлено ли для &lt;code&gt;timestamp&lt;/code&gt; маркера трассировки значение &lt;code&gt;true&lt;/code&gt; или &lt;code&gt;false&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="168262e7bb4ad03b8f9aa164f315f9eabe54fc52" translate="yes" xml:space="preserve">
          <source>The format of the node name is an atom &lt;code&gt;name@host&lt;/code&gt;. &lt;code&gt;name&lt;/code&gt; is the name given by the user. &lt;code&gt;host&lt;/code&gt; is the full host name if long names are used, or the first part of the host name if short names are used. &lt;code&gt;node()&lt;/code&gt; returns the name of the node.</source>
          <target state="translated">Формат имени узла - имя атома &lt;code&gt;name@host&lt;/code&gt; . &lt;code&gt;name&lt;/code&gt; - это имя, данное пользователем. &lt;code&gt;host&lt;/code&gt; - это полное имя хоста, если используются длинные имена, или первая часть имени хоста, если используются короткие имена. &lt;code&gt;node()&lt;/code&gt; возвращает имя узла.</target>
        </trans-unit>
        <trans-unit id="e18dae497a998ac661c28b510144fccadd65f4ce" translate="yes" xml:space="preserve">
          <source>The format of the node status change messages depends on &lt;code&gt;Options&lt;/code&gt;. If &lt;code&gt;Options&lt;/code&gt; is &lt;code&gt;[]&lt;/code&gt;, which is the default, the format is as follows:</source>
          <target state="translated">Формат сообщений об изменении статуса узла зависит от &lt;code&gt;Options&lt;/code&gt; . Если &lt;code&gt;Options&lt;/code&gt; - &lt;code&gt;[]&lt;/code&gt; , что является значением по умолчанию, формат будет следующим:</target>
        </trans-unit>
        <trans-unit id="765472921ad5d1b4e5d1dc40a24f50b66dda836a" translate="yes" xml:space="preserve">
          <source>The format of the status message is as follows:</source>
          <target state="translated">Формат сообщения о состоянии следующий:</target>
        </trans-unit>
        <trans-unit id="f119a1fe58fd91d2d32fa64f2417a092c14ccb82" translate="yes" xml:space="preserve">
          <source>The format of the text file is as follows:</source>
          <target state="translated">Формат текстового файла следующий:</target>
        </trans-unit>
        <trans-unit id="4333a537987dd2c37f631936cd505a940685024b" translate="yes" xml:space="preserve">
          <source>The format stored in the &lt;code&gt;debug_info&lt;/code&gt; chunk. To retrieve particular code representation from the backend, &lt;code&gt;Backend:debug_info(Format, Module, Data, Opts)&lt;/code&gt; must be invoked. &lt;code&gt;Format&lt;/code&gt; is an atom, such as &lt;code&gt;erlang_v1&lt;/code&gt; for the Erlang Abstract Format or &lt;code&gt;core_v1&lt;/code&gt; for Core Erlang. &lt;code&gt;Module&lt;/code&gt; is the module represented by the beam file and &lt;code&gt;Data&lt;/code&gt; is the value stored in the debug info chunk. &lt;code&gt;Opts&lt;/code&gt; is any list of values supported by the &lt;code&gt;Backend&lt;/code&gt;. &lt;code&gt;Backend:debug_info/4&lt;/code&gt; must return &lt;code&gt;{ok, Code}&lt;/code&gt; or &lt;code&gt;{error, Term}&lt;/code&gt;.</source>
          <target state="translated">Формат, хранящийся в &lt;code&gt;debug_info&lt;/code&gt; . Чтобы получить конкретное представление кода из серверной части, необходимо &lt;code&gt;Backend:debug_info(Format, Module, Data, Opts)&lt;/code&gt; . &lt;code&gt;Format&lt;/code&gt; - это атом, например &lt;code&gt;erlang_v1&lt;/code&gt; для абстрактного формата Erlang или &lt;code&gt;core_v1&lt;/code&gt; для Core Erlang. &lt;code&gt;Module&lt;/code&gt; - это модуль, представленный файлом луча, а &lt;code&gt;Data&lt;/code&gt; - это значение, хранящееся в блоке отладочной информации. &lt;code&gt;Opts&lt;/code&gt; - это любой список значений, поддерживаемых &lt;code&gt;Backend&lt;/code&gt; . &lt;code&gt;Backend:debug_info/4&lt;/code&gt; должен возвращать &lt;code&gt;{ok, Code}&lt;/code&gt; или &lt;code&gt;{error, Term}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f8e6ead11c3e1eac26901161b759833474cba3a4" translate="yes" xml:space="preserve">
          <source>The formatter information consist of a formatter module, &lt;code&gt;FModule&lt;/code&gt; and its configuration, &lt;code&gt;FConfig&lt;/code&gt;. &lt;code&gt;FModule&lt;/code&gt; must export the following function, which can be called by the handler:</source>
          <target state="translated">Информация о программе форматирования состоит из модуля форматирования, &lt;code&gt;FModule&lt;/code&gt; и его конфигурации, &lt;code&gt;FConfig&lt;/code&gt; . &lt;code&gt;FModule&lt;/code&gt; должен экспортировать следующую функцию, которую может вызвать обработчик:</target>
        </trans-unit>
        <trans-unit id="08eb54b5af19c1955cfb0d28c30545c43ca2cd83" translate="yes" xml:space="preserve">
          <source>The formatter information for a handler is set as a part of its configuration when the handler is added. It can also be changed during runtime with &lt;code&gt;&lt;a href=&quot;logger#set_handler_config-3&quot;&gt; logger:set_handler_config(HandlerId,formatter,{FModule,FConfig}) &lt;/a&gt;&lt;/code&gt;, which overwrites the current formatter information, or with &lt;code&gt;&lt;a href=&quot;logger#update_formatter_config-2&quot;&gt; logger:update_formatter_config/2,3&lt;/a&gt;&lt;/code&gt;, which only modifies the formatter configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d115f8a8e36f58c079d74b58f98933595ecc3ef9" translate="yes" xml:space="preserve">
          <source>The formatter information for a handler is set as a part of its configuration when the handler is added. It can also be changed during runtime with &lt;code&gt;&lt;a href=&quot;logger#set_handler_config-3&quot;&gt;logger:set_handler_config(HandlerId,formatter,{FModule,FConfig})&lt;/a&gt;&lt;/code&gt;, which overwrites the current formatter information, or with &lt;code&gt;&lt;a href=&quot;logger#update_formatter_config-2&quot;&gt;logger:update_formatter_config/2,3&lt;/a&gt;&lt;/code&gt;, which only modifies the formatter configuration.</source>
          <target state="translated">Информация о программе форматирования для обработчика устанавливается как часть его конфигурации при добавлении обработчика. Его также можно изменить во время выполнения с помощью &lt;code&gt;&lt;a href=&quot;logger#set_handler_config-3&quot;&gt;logger:set_handler_config(HandlerId,formatter,{FModule,FConfig})&lt;/a&gt;&lt;/code&gt; , который перезаписывает текущую информацию &lt;code&gt;&lt;a href=&quot;logger#update_formatter_config-2&quot;&gt;logger:update_formatter_config/2,3&lt;/a&gt;&lt;/code&gt; форматирования, или с помощью logger: update_formatter_config / 2,3 , который только изменяет конфигурацию модуля форматирования.</target>
        </trans-unit>
        <trans-unit id="2f4f8dac91f32ead5de8dd50ed11e0572d80a431" translate="yes" xml:space="preserve">
          <source>The formatter information is specified when adding the handler. The formatter configuration can be changed during runtime with &lt;code&gt;&lt;a href=&quot;logger#update_formatter_config-2&quot;&gt; logger:update_formatter_config/2,3&lt;/a&gt;&lt;/code&gt;, or the complete formatter information can be overwritten with, for instance, &lt;code&gt;&lt;a href=&quot;logger#set_handler_config-3&quot;&gt; logger:set_handler_config/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31df239ad5b8271efa81cda13e999773cde8976a" translate="yes" xml:space="preserve">
          <source>The formatter information is specified when adding the handler. The formatter configuration can be changed during runtime with &lt;code&gt;&lt;a href=&quot;logger#update_formatter_config-2&quot;&gt;logger:update_formatter_config/2,3&lt;/a&gt;&lt;/code&gt;, or the complete formatter information can be overwritten with, for instance, &lt;code&gt;&lt;a href=&quot;logger#set_handler_config-3&quot;&gt;logger:set_handler_config/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Информация о программе форматирования указывается при добавлении обработчика. Конфигурацию средства форматирования можно изменить во время выполнения с помощью &lt;code&gt;&lt;a href=&quot;logger#update_formatter_config-2&quot;&gt;logger:update_formatter_config/2,3&lt;/a&gt;&lt;/code&gt; , или полную информацию средства форматирования можно перезаписать, например, с помощью &lt;code&gt;&lt;a href=&quot;logger#set_handler_config-3&quot;&gt;logger:set_handler_config/3&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b8f30a9a1bf44181155aa2e71449137d3512f394" translate="yes" xml:space="preserve">
          <source>The formatting succeeded.</source>
          <target state="translated">Форматирование прошло успешно.</target>
        </trans-unit>
        <trans-unit id="dc0d9a77b06641779f3ff429581cfe2152aeca03" translate="yes" xml:space="preserve">
          <source>The former is a classical standard with a proper formal syntax, using the so called &lt;code&gt;&lt;a href=&quot;https://www.ietf.org/rfc/rfc2234.txt&quot;&gt;Augmented Backus-Naur Form (ABNF)&lt;/a&gt;&lt;/code&gt; for describing the grammar, while the latter is a living document describing the current pratice, that is, how a majority of Web browsers work with URIs. WHAT WG URL is Web focused and it has no formal grammar but a plain english description of the algorithms that should be followed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10bd3287c5d5cb11c97ef91fb582e7bddc5c508a" translate="yes" xml:space="preserve">
          <source>The fourth argument &lt;code&gt;NULL&lt;/code&gt; is ignored. It was earlier used for the deprecated &lt;code&gt;reload&lt;/code&gt; callback which is no longer supported since OTP 20.</source>
          <target state="translated">Четвертый аргумент &lt;code&gt;NULL&lt;/code&gt; игнорируется. Ранее он использовался для устаревшего обратного вызова &lt;code&gt;reload&lt;/code&gt; который больше не поддерживается с OTP 20.</target>
        </trans-unit>
        <trans-unit id="fd6d48968ca41cf916b0c1706ee59abd18b5be81" translate="yes" xml:space="preserve">
          <source>The fourth argument is a pointer to an &lt;code&gt;in_addr&lt;/code&gt; struct with the IP address of the host.</source>
          <target state="translated">Четвертый аргумент - это указатель на структуру &lt;code&gt;in_addr&lt;/code&gt; с IP-адресом хоста.</target>
        </trans-unit>
        <trans-unit id="e236ba0b32b561d73bf0d206f0aebabfe0c3ba82" translate="yes" xml:space="preserve">
          <source>The fourth argument, &lt;code&gt;[]&lt;/code&gt;, is a list of options. For the available options, see &lt;code&gt;gen_statem:start_link/3&lt;/code&gt;.</source>
          <target state="translated">Четвертый аргумент, &lt;code&gt;[]&lt;/code&gt; , представляет собой список параметров. Доступные параметры см. В &lt;code&gt;gen_statem:start_link/3&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0ce7182b37b9940508d39bc849560d216ed57126" translate="yes" xml:space="preserve">
          <source>The fourth argument, &lt;code&gt;[]&lt;/code&gt;, is a list of options. See the &lt;code&gt;gen_server(3)&lt;/code&gt; manual page for available options.</source>
          <target state="translated">Четвертый аргумент, &lt;code&gt;[]&lt;/code&gt; , представляет собой список параметров. См. Доступные параметры на странице руководства &lt;code&gt;gen_server(3)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aa28b3ee82d6cace84ec1443af25bb2eb0eafaac" translate="yes" xml:space="preserve">
          <source>The fragment size of 128 is only used as an example. Any fragments size may be used when sending fragmented messages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aecfffdedf7cb9fd61cb29aa23ebcd2cef310301" translate="yes" xml:space="preserve">
          <source>The fragments must be delivered in the correct order, so if an unordered distribution carrier is used, they must be ordered before delivered to the Erlang run-time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9100d905b13d1377220d70070d7d60982d6749a4" translate="yes" xml:space="preserve">
          <source>The framework consists of:</source>
          <target state="translated">Структура состоит из:</target>
        </trans-unit>
        <trans-unit id="819321d08c2b7b1c092e7b0fa0f720e66c56015b" translate="yes" xml:space="preserve">
          <source>The full definitions of those instructions can be found in &lt;code&gt;bs_instrs.tab&lt;/code&gt;. The generated code can be found in &lt;code&gt;beam_warm.h&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c8d31fc362ef9b832d0b697fa5e6ecb8f8d5cf1" translate="yes" xml:space="preserve">
          <source>The full log entry is composed according to the &lt;code&gt;&lt;a href=&quot;#template&quot;&gt;template&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Полная запись в журнале составляется по &lt;code&gt;&lt;a href=&quot;#template&quot;&gt;template&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="700f5d03995315807276176315f6bb17647929bf" translate="yes" xml:space="preserve">
          <source>The full name for the Solaris standard configuration file for &lt;code&gt;syslogd&lt;/code&gt;</source>
          <target state="translated">Полное имя стандартного файла конфигурации Solaris для &lt;code&gt;syslogd&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0e81e9ea5253fb51f8c99babc5aff5902bbe7489" translate="yes" xml:space="preserve">
          <source>The full name of the binary executable file is derived from the position of application &lt;code&gt;os_mon&lt;/code&gt; in the file system by adding &lt;code&gt;/priv/bin/mod_syslog&lt;/code&gt;. The generic full name of the binary executable file is thus:</source>
          <target state="translated">Полное имя исполняемого двоичного файла определяется положением приложения &lt;code&gt;os_mon&lt;/code&gt; в файловой системе путем добавления &lt;code&gt;/priv/bin/mod_syslog&lt;/code&gt; . Таким образом, общее полное имя двоичного исполняемого файла:</target>
        </trans-unit>
        <trans-unit id="563d73d181f3e9108cba87d81726b482ec3d260c" translate="yes" xml:space="preserve">
          <source>The full name of the minor log file (that is, the name of the file including the absolute directory path) can be read during execution of the test case. It comes as value in tuple &lt;code&gt;{tc_logfile,LogFileName}&lt;/code&gt; in the &lt;code&gt;Config&lt;/code&gt; list (which means it can also be read by a pre- or post &lt;code&gt;Common Test Hook&lt;/code&gt; function). Also, at the start of a test case, this data is sent with an event to any installed event handler. For details, see section &lt;code&gt;&lt;a href=&quot;event_handler_chapter#event_handling&quot;&gt;Event Handling&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Полное имя второстепенного файла журнала (то есть имя файла, включая абсолютный путь к каталогу) можно прочитать во время выполнения тестового примера. Он поступает как значение в кортеже &lt;code&gt;{tc_logfile,LogFileName}&lt;/code&gt; в списке &lt;code&gt;Config&lt;/code&gt; (что означает, что он также может быть прочитан функцией &lt;code&gt;Common Test Hook&lt;/code&gt; до или после ). Кроме того, в начале тестового примера эти данные отправляются с событием в любой установленный обработчик событий. Подробности см. В разделе &amp;laquo; &lt;code&gt;&lt;a href=&quot;event_handler_chapter#event_handling&quot;&gt;Event Handling&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="add619cb56fecf8eaa2173268a66512e2ca14e79" translate="yes" xml:space="preserve">
          <source>The full path to the &lt;code&gt;erlsrv.exe&lt;/code&gt;, which can be used to manipulate the service. This comes in handy when defining a heart command for your service.</source>
          <target state="translated">Полный путь к &lt;code&gt;erlsrv.exe&lt;/code&gt; , который можно использовать для управления службой. Это пригодится при определении сердечной команды для вашей службы.</target>
        </trans-unit>
        <trans-unit id="504f71220986791fe2ea8dea00b27516f0e65c24" translate="yes" xml:space="preserve">
          <source>The fun &lt;code&gt;F&lt;/code&gt; can be evaluated with the following syntax:</source>
          <target state="translated">Веселье &lt;code&gt;F&lt;/code&gt; можно оценить с помощью следующего синтаксиса:</target>
        </trans-unit>
        <trans-unit id="ae8ca975ecc3e8edf173345a968b651e47f611e5" translate="yes" xml:space="preserve">
          <source>The fun can have many clauses. Assume that we want to do the following:</source>
          <target state="translated">Веселье может иметь много пунктов.Предположим,что мы хотим сделать следующее:</target>
        </trans-unit>
        <trans-unit id="a7bc8a3f1e4f51084c68a1c0c777f1a27337cb3c" translate="yes" xml:space="preserve">
          <source>The fun has the following type specification:</source>
          <target state="translated">Веселье имеет следующую спецификацию типа:</target>
        </trans-unit>
        <trans-unit id="5f32b8a5a9bbfbf624a0644c5247fde5edb3a429" translate="yes" xml:space="preserve">
          <source>The fun is very restricted, it can take only a single parameter (the object to match): a sole variable or a tuple. It must use the &lt;code&gt;is_&lt;/code&gt; guard tests. Language constructs that have no representation in a match specification (&lt;code&gt;if&lt;/code&gt;, &lt;code&gt;case&lt;/code&gt;, &lt;code&gt;receive&lt;/code&gt;, and so on) are not allowed.</source>
          <target state="translated">Удовольствие очень ограничено, он может принимать только один параметр (объект для сопоставления): единственную переменную или кортеж. Он должен использовать тесты &lt;code&gt;is_&lt;/code&gt; guard. Языковые конструкции, не представленные в спецификации соответствия ( &lt;code&gt;if&lt;/code&gt; , &lt;code&gt;case&lt;/code&gt; , &lt;code&gt;receive&lt;/code&gt; и т. Д.), Не допускаются.</target>
        </trans-unit>
        <trans-unit id="71d9e7bf1fc41cd7eae3c3b2faa71bd3df3e1269" translate="yes" xml:space="preserve">
          <source>The fun must be defined as:</source>
          <target state="translated">Веселье должно быть определено как:</target>
        </trans-unit>
        <trans-unit id="07c9bc55442a1b08276f48311f68a88a3fb5ef18" translate="yes" xml:space="preserve">
          <source>The fun must be literally constructed inside the parameter list to the pseudo functions. The fun cannot be bound to a variable first and then passed to &lt;code&gt;ets:fun2ms/1&lt;/code&gt; or &lt;code&gt;dbg:fun2ms/1&lt;/code&gt;. For example, &lt;code&gt;ets:fun2ms(fun(A) -&amp;gt; A end)&lt;/code&gt; works, but not &lt;code&gt;F = fun(A) -&amp;gt; A end, ets:fun2ms(F)&lt;/code&gt;. The latter results in a compile-time error if the header is included, otherwise a runtime error.</source>
          <target state="translated">Развлечение должно быть буквально сконструировано внутри списка параметров псевдофункций. Веселье нельзя сначала &lt;code&gt;ets:fun2ms/1&lt;/code&gt; к переменной, а затем передать в ets: fun2ms / 1 или &lt;code&gt;dbg:fun2ms/1&lt;/code&gt; . Например, &lt;code&gt;ets:fun2ms(fun(A) -&amp;gt; A end)&lt;/code&gt; работает, но не &lt;code&gt;F = fun(A) -&amp;gt; A end, ets:fun2ms(F)&lt;/code&gt; . Последнее приводит к ошибке времени компиляции, если заголовок включен, в противном случае - ошибке времени выполнения.</target>
        </trans-unit>
        <trans-unit id="c2fc65e668d470b6dcc72f27bda164d6dff73c81" translate="yes" xml:space="preserve">
          <source>The fun must handle the following arguments:</source>
          <target state="translated">Веселье должно учитывать следующие аргументы:</target>
        </trans-unit>
        <trans-unit id="51f57611564f84c521d11cdc1d94f053c16d5dac" translate="yes" xml:space="preserve">
          <source>The fun must obey the &lt;code&gt;depth&lt;/code&gt; and &lt;code&gt;chars_limit&lt;/code&gt; parameters provided in the second argument, as the formatter cannot do anything useful of these parameters with the returned string. The extra data also contains a field named &lt;code&gt;single_line&lt;/code&gt;, indicating if the printed log message may contain line breaks or not. This variant is used when the formatting of the report depends on the size or single line parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="737c0846a588f1657ff7845917aac0579f2be1af" translate="yes" xml:space="preserve">
          <source>The fun returns the root certificate and certificate chain that has signed the CRL.</source>
          <target state="translated">Веселье возвращает корневой сертификат и цепочку сертификатов,которая подписала CRL.</target>
        </trans-unit>
        <trans-unit id="efd695af69ad480c89612803c86acd8baa7d18ec" translate="yes" xml:space="preserve">
          <source>The fun should return:</source>
          <target state="translated">Веселье должно вернуться:</target>
        </trans-unit>
        <trans-unit id="d737e56a33d9100f6b6abcd80be538364e25ad0c" translate="yes" xml:space="preserve">
          <source>The fun uses the information in the distribution point to access the latest possible version of the CRL. If this fun is not specified, Public Key uses the default implementation:</source>
          <target state="translated">Веселье использует информацию в точке распространения,чтобы получить доступ к последней возможной версии CRL.Если этот забава не указана,то публичный ключ использует реализацию по умолчанию:</target>
        </trans-unit>
        <trans-unit id="7f1a8e313c80aee065197a6cfd60c195f83fb231" translate="yes" xml:space="preserve">
          <source>The funcion &lt;code&gt;&lt;a href=&quot;mnesia#dirty_update_counter-2&quot;&gt;dirty_update_counter/2&lt;/a&gt;&lt;/code&gt; is performed as an atomic operation although it is not protected by a transaction. Therfore no table update is lost if two processes simultaneously execute the function &lt;code&gt;dirty_update_counter/2&lt;/code&gt;.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;mnesia#dirty_update_counter-2&quot;&gt;dirty_update_counter/2&lt;/a&gt;&lt;/code&gt; выполняется как атомарная операция, хотя она не защищена транзакцией. Поэтому обновление таблицы не будет потеряно, если два процесса одновременно выполняют функцию &lt;code&gt;dirty_update_counter/2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e0013b0c35bbaebef0c54217eeb1d56ac822fe5f" translate="yes" xml:space="preserve">
          <source>The function 'undefined' that has called &lt;code&gt;fprof:apply_start_stop/4&lt;/code&gt; is an unknown function because that call was not recorded in the trace. It was only recorded that the execution returned from &lt;code&gt;fprof:apply_start_stop/4&lt;/code&gt; to some other function above in the call stack, or that the process exited from there.</source>
          <target state="translated">Функция undefined, которая вызвала &lt;code&gt;fprof:apply_start_stop/4&lt;/code&gt; , является неизвестной функцией, поскольку этот вызов не был записан в трассировке. Было зарегистрировано только то, что выполнение возвратилось из &lt;code&gt;fprof:apply_start_stop/4&lt;/code&gt; в какую-либо другую функцию, указанную выше в стеке вызовов, или что процесс завершился оттуда.</target>
        </trans-unit>
        <trans-unit id="9f8485bc87eedde1f2b8ad275904de4b91765212" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;&lt;a href=&quot;#Module:callback_mode-0&quot;&gt;Module:callback_mode/0&lt;/a&gt;&lt;/code&gt; is called when starting the &lt;code&gt;gen_statem&lt;/code&gt;, after code change and after changing the callback module with any of the actions &lt;code&gt;&lt;a href=&quot;#type-action&quot;&gt;change_callback_module&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#type-action&quot;&gt;push_callback_module&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#type-action&quot;&gt;pop_callback_module&lt;/a&gt;&lt;/code&gt;. The result is cached for subsequent calls to &lt;code&gt;&lt;a href=&quot;#state%20callback&quot;&gt;state callbacks&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0261fe5fd43cd9c6d832aa2e6f9286179956437a" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;&lt;a href=&quot;#cipher_suites-2&quot;&gt; ssl:cipher_suites/2 &lt;/a&gt;&lt;/code&gt; can be used to find all cipher suites that are supported by default and all cipher suites that may be configured.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae773ba648b2dd3111bf9ff1bd1ae44f3998a92d" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;&lt;a href=&quot;#codec-2&quot;&gt;codec/2&lt;/a&gt;&lt;/code&gt; is used to compile a diameter &lt;code&gt;&lt;a href=&quot;diameter_dict&quot;&gt;dictionary file&lt;/a&gt;&lt;/code&gt; into Erlang source. The resulting source implements the interface diameter requires to encode and decode the dictionary's messages and AVPs.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;#codec-2&quot;&gt;codec/2&lt;/a&gt;&lt;/code&gt; используется для компиляции &lt;code&gt;&lt;a href=&quot;diameter_dict&quot;&gt;dictionary file&lt;/a&gt;&lt;/code&gt; диаметров в исходный код Erlang. Результирующий источник реализует диаметр интерфейса, необходимый для кодирования и декодирования сообщений словаря и AVP.</target>
        </trans-unit>
        <trans-unit id="b1eeb1350e2bae25f92e23b1d2b563721196dfbc" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;&lt;a href=&quot;#create_table-2&quot;&gt;mnesia:create_table(bar, [{attributes, 3.14}])&lt;/a&gt;&lt;/code&gt; returns the tuple &lt;code&gt;{aborted,Reason}&lt;/code&gt;, where &lt;code&gt;Reason&lt;/code&gt; is the tuple &lt;code&gt;{bad_type,bar,3.14000}&lt;/code&gt;.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;#create_table-2&quot;&gt;mnesia:create_table(bar, [{attributes, 3.14}])&lt;/a&gt;&lt;/code&gt; возвращает кортеж &lt;code&gt;{aborted,Reason}&lt;/code&gt; , где &lt;code&gt;Reason&lt;/code&gt; - это кортеж &lt;code&gt;{bad_type,bar,3.14000}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ab82066f7afa34b039ac973980ff4ef53ba41e38" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;&lt;a href=&quot;#error_description-1&quot;&gt;mnesia:error_description(Reason)&lt;/a&gt;&lt;/code&gt; returns the term &lt;code&gt;{&quot;Bad type on some provided arguments&quot;,bar,3.14000}&lt;/code&gt;, which is an error description suitable for display.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;#error_description-1&quot;&gt;mnesia:error_description(Reason)&lt;/a&gt;&lt;/code&gt; возвращает термин &lt;code&gt;{&quot;Bad type on some provided arguments&quot;,bar,3.14000}&lt;/code&gt; Неверный тип некоторых предоставленных аргументов&quot;, bar, 3.14000} , который является описанием ошибки, подходящим для отображения.</target>
        </trans-unit>
        <trans-unit id="416085a9cc04b82b99ed7eea9c9814ce71342d35" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;&lt;a href=&quot;#get_memory_data-0&quot;&gt;get_memory_data()&lt;/a&gt;&lt;/code&gt; can be used to retrieve the result of the latest periodic memory check.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;#get_memory_data-0&quot;&gt;get_memory_data()&lt;/a&gt;&lt;/code&gt; может использоваться для получения результата последней периодической проверки памяти.</target>
        </trans-unit>
        <trans-unit id="d90d9bd2e78e7f66c786fdc154ab3630fd58d990" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;&lt;a href=&quot;#subtrees-1&quot;&gt;subtrees/1&lt;/a&gt;&lt;/code&gt; and the constructor functions &lt;code&gt;&lt;a href=&quot;#make_tree-2&quot;&gt;make_tree/2&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#update_tree-2&quot;&gt;update_tree/2&lt;/a&gt;&lt;/code&gt; can be a great help if one wants to traverse a syntax tree, visiting all its subtrees, but treat nodes of the tree in a uniform way in most or all cases. Using these functions makes this simple, and also assures that your code is not overly sensitive to extensions of the syntax tree data type, because any node types not explicitly handled by your code can be left to a default case.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#make_tree-2&quot;&gt;make_tree/2&lt;/a&gt;&lt;/code&gt; функции &lt;code&gt;&lt;a href=&quot;#subtrees-1&quot;&gt;subtrees/1&lt;/a&gt;&lt;/code&gt; и функции-конструкторы make_tree / 2 и &lt;code&gt;&lt;a href=&quot;#update_tree-2&quot;&gt;update_tree/2&lt;/a&gt;&lt;/code&gt; могут быть большим подспорьем, если кто-то хочет пройти по синтаксическому дереву, посещая все его поддеревья, но обрабатывая узлы дерева единообразно в большинстве или во всех случаях. , Использование этих функций упрощает эту задачу, а также гарантирует, что ваш код не будет чрезмерно чувствительным к расширениям типа данных синтаксического дерева, потому что для любых типов узлов, которые явно не обрабатываются вашим кодом, можно оставить случай по умолчанию.</target>
        </trans-unit>
        <trans-unit id="4b9d557c07ad7843b1aa33917e03437c2191df84" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;&lt;a href=&quot;mnesia#activate_checkpoint-1&quot;&gt;mnesia:activate_checkpoint(Args)&lt;/a&gt;&lt;/code&gt; returns one of the following values:</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;mnesia#activate_checkpoint-1&quot;&gt;mnesia:activate_checkpoint(Args)&lt;/a&gt;&lt;/code&gt; возвращает одно из следующих значений:</target>
        </trans-unit>
        <trans-unit id="7829e947c9fda3671f982c368ab35a66949366af" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;&lt;a href=&quot;mnesia#all_keys-1&quot;&gt;mnesia:all_keys(Tab)&lt;/a&gt;&lt;/code&gt; returns all keys in a table.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;mnesia#all_keys-1&quot;&gt;mnesia:all_keys(Tab)&lt;/a&gt;&lt;/code&gt; возвращает все ключи в таблице.</target>
        </trans-unit>
        <trans-unit id="29d2bb31f2eb0b09a4594530fbd096f08be20052" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;&lt;a href=&quot;mnesia#backup-1&quot;&gt;mnesia:backup(Opaque [,Mod])&lt;/a&gt;&lt;/code&gt; activates a new checkpoint that covers all &lt;code&gt;Mnesia&lt;/code&gt; tables with maximum degree of redundancy and performs a backup. Maximum redundancy means that each table replica has a checkpoint retainer. Tables with property &lt;code&gt;local_contents&lt;/code&gt; are backed up as they look on the current node.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;mnesia#backup-1&quot;&gt;mnesia:backup(Opaque [,Mod])&lt;/a&gt;&lt;/code&gt; активирует новую контрольную точку, которая покрывает все таблицы &lt;code&gt;Mnesia&lt;/code&gt; с максимальной степенью избыточности, и выполняет резервное копирование. Максимальная избыточность означает, что каждая реплика таблицы имеет фиксатор контрольной точки. Таблицы со свойством &lt;code&gt;local_contents&lt;/code&gt; копируются по мере их просмотра на текущем узле.</target>
        </trans-unit>
        <trans-unit id="36376c0ad23644747aaadff922c6c829e1451912" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;&lt;a href=&quot;mnesia#create_table-2&quot;&gt;mnesia:create_table(Name, ArgList)&lt;/a&gt;&lt;/code&gt; creates tables. When executing this function, it returns one of the following responses:</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;mnesia#create_table-2&quot;&gt;mnesia:create_table(Name, ArgList)&lt;/a&gt;&lt;/code&gt; создает таблицы. При выполнении этой функции он возвращает один из следующих ответов:</target>
        </trans-unit>
        <trans-unit id="a1a6864b3dbbae165f2d507c1a853d0af094ec0c" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;&lt;a href=&quot;mnesia#create_table-2&quot;&gt;mnesia:create_table/2&lt;/a&gt;&lt;/code&gt; creates a brand new fragmented table, by setting table property &lt;code&gt;frag_properties&lt;/code&gt; to some proper values.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;mnesia#create_table-2&quot;&gt;mnesia:create_table/2&lt;/a&gt;&lt;/code&gt; создает совершенно новую фрагментированную таблицу, устанавливая для свойства таблицы &lt;code&gt;frag_properties&lt;/code&gt; некоторые правильные значения.</target>
        </trans-unit>
        <trans-unit id="fd24999a16cc29e37c736949b94f5785cba2b786" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;&lt;a href=&quot;mnesia#delete_table-1&quot;&gt;mnesia:delete_table/1&lt;/a&gt;&lt;/code&gt; deletes a fragmented table including all its fragments. There must however not exist any other fragmented tables that refer to this table in their foreign key.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;mnesia#delete_table-1&quot;&gt;mnesia:delete_table/1&lt;/a&gt;&lt;/code&gt; удаляет фрагментированную таблицу, включая все ее фрагменты. Однако не должно существовать других фрагментированных таблиц, которые ссылаются на эту таблицу в своем внешнем ключе.</target>
        </trans-unit>
        <trans-unit id="30691173c7709ef9a4f3af204d9b1fcd4e7de68a" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;&lt;a href=&quot;mnesia#dump_tables-1&quot;&gt;mnesia:dump_tables/1&lt;/a&gt;&lt;/code&gt; can be used to dump RAM table replicas to disc.</source>
          <target state="translated">Функцию &lt;code&gt;&lt;a href=&quot;mnesia#dump_tables-1&quot;&gt;mnesia:dump_tables/1&lt;/a&gt;&lt;/code&gt; можно использовать для создания дампа реплик таблиц RAM на диск.</target>
        </trans-unit>
        <trans-unit id="9bca628c2f6585264d68c5ff447dbb6e315d490b" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;&lt;a href=&quot;mnesia#force_load_table-1&quot;&gt;mnesia:force_load_table(Tab)&lt;/a&gt;&lt;/code&gt; can be used to force load the table regardless of which table load mechanism that is activated.</source>
          <target state="translated">Функцию &lt;code&gt;&lt;a href=&quot;mnesia#force_load_table-1&quot;&gt;mnesia:force_load_table(Tab)&lt;/a&gt;&lt;/code&gt; можно использовать для принудительной загрузки таблицы независимо от того, какой механизм загрузки таблицы активирован.</target>
        </trans-unit>
        <trans-unit id="4da340c660c7601de0e1ab6532b1b4defd72ac7f" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;&lt;a href=&quot;mnesia#info-0&quot;&gt;mnesia:info/0&lt;/a&gt;&lt;/code&gt; can now be used to print some system information even before &lt;code&gt;Mnesia&lt;/code&gt; is started. When &lt;code&gt;Mnesia&lt;/code&gt; is started, the function prints more information.</source>
          <target state="translated">Функцию &lt;code&gt;&lt;a href=&quot;mnesia#info-0&quot;&gt;mnesia:info/0&lt;/a&gt;&lt;/code&gt; теперь можно использовать для печати некоторой системной информации даже до запуска &lt;code&gt;Mnesia&lt;/code&gt; . При запуске &lt;code&gt;Mnesia&lt;/code&gt; функция выводит дополнительную информацию.</target>
        </trans-unit>
        <trans-unit id="60a3e9499c0d1ca23244a4d32bf0a317d6112fb3" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;&lt;a href=&quot;mnesia#install_fallback-2&quot;&gt;mnesia:install_fallback(Opaque, [Mod])&lt;/a&gt;&lt;/code&gt; installs a backup as fallback. It uses the backup module &lt;code&gt;Mod&lt;/code&gt;, or the default backup module, to access the backup media. The function returns &lt;code&gt;ok&lt;/code&gt; if successful, or &lt;code&gt;{error, Reason}&lt;/code&gt; if there is an error.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;mnesia#install_fallback-2&quot;&gt;mnesia:install_fallback(Opaque, [Mod])&lt;/a&gt;&lt;/code&gt; устанавливает резервную копию в качестве резервной копии. Он использует модуль резервного копирования &lt;code&gt;Mod&lt;/code&gt; или модуль резервного копирования по умолчанию для доступа к носителю резервных копий. Функция возвращает &lt;code&gt;ok&lt;/code&gt; случае успеха или &lt;code&gt;{error, Reason}&lt;/code&gt; случае ошибки.</target>
        </trans-unit>
        <trans-unit id="4f2ed7053b64d799ffc3ded34968b7ea59f0d544" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;&lt;a href=&quot;mnesia#lock-2&quot;&gt;mnesia:lock/2&lt;/a&gt;&lt;/code&gt; is intended to support table locks (as mentioned previously) but also for situations when locks need to be acquired regardless of how tables have been replicated:</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;mnesia#lock-2&quot;&gt;mnesia:lock/2&lt;/a&gt;&lt;/code&gt; предназначена для поддержки блокировок таблиц (как упоминалось ранее), но также и для ситуаций, когда блокировки должны быть получены независимо от того, как таблицы были реплицированы:</target>
        </trans-unit>
        <trans-unit id="a04c9c87e126ea98a8324770baffee72b7c15012" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;&lt;a href=&quot;mnesia#match_object-3&quot;&gt;mnesia:match_object/3&lt;/a&gt;&lt;/code&gt; lacks some important features that &lt;code&gt;&lt;a href=&quot;mnesia#select-2&quot;&gt;mnesia:select/3&lt;/a&gt;&lt;/code&gt; have. For example, &lt;code&gt;mnesia:match_object/3&lt;/code&gt; can only return the matching records, and it cannot express constraints other than equality. To find the names of the male employees on the second floor:</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;mnesia#match_object-3&quot;&gt;mnesia:match_object/3&lt;/a&gt;&lt;/code&gt; не имеет некоторых важных функций, которые есть у &lt;code&gt;&lt;a href=&quot;mnesia#select-2&quot;&gt;mnesia:select/3&lt;/a&gt;&lt;/code&gt; . Например, &lt;code&gt;mnesia:match_object/3&lt;/code&gt; может возвращать только совпадающие записи и не может выражать ограничения, отличные от равенства. Чтобы найти имена сотрудников-мужчин на втором этаже:</target>
        </trans-unit>
        <trans-unit id="0917cc1d0fa48c8f542630d30c1cd7b2345a64a5" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;&lt;a href=&quot;mnesia#set_master_nodes-1&quot;&gt;mnesia:set_master_nodes(Nodes)&lt;/a&gt;&lt;/code&gt; sets master nodes for all tables. For each table it determines its replica nodes and starts &lt;code&gt;&lt;a href=&quot;mnesia#set_master_nodes-2&quot;&gt;mnesia:set_master_nodes(Tab, TabNodes)&lt;/a&gt;&lt;/code&gt; with those replica nodes that are included in the &lt;code&gt;Nodes&lt;/code&gt; list (that is, &lt;code&gt;TabNodes&lt;/code&gt; is the intersection of &lt;code&gt;Nodes&lt;/code&gt; and the replica nodes of the table). If the intersection is empty, the master node recovery mechanism for the particular table is reset and the normal load mechanism is used at the next restart.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;mnesia#set_master_nodes-1&quot;&gt;mnesia:set_master_nodes(Nodes)&lt;/a&gt;&lt;/code&gt; устанавливает главные узлы для всех таблиц. Для каждой таблицы он определяет свои узлы-реплики и запускает &lt;code&gt;&lt;a href=&quot;mnesia#set_master_nodes-2&quot;&gt;mnesia:set_master_nodes(Tab, TabNodes)&lt;/a&gt;&lt;/code&gt; с теми узлами реплик, которые включены в список &lt;code&gt;Nodes&lt;/code&gt; (то есть &lt;code&gt;TabNodes&lt;/code&gt; является пересечением &lt;code&gt;Nodes&lt;/code&gt; и узлов реплик таблицы). Если пересечение пусто, механизм восстановления главного узла для конкретной таблицы сбрасывается, и при следующем перезапуске используется обычный механизм загрузки.</target>
        </trans-unit>
        <trans-unit id="3124976c6cc4afa58829120e681ccee3319f8f32" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;&lt;a href=&quot;mnesia#start-0&quot;&gt;mnesia:start()&lt;/a&gt;&lt;/code&gt; is called on both nodes.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;mnesia#start-0&quot;&gt;mnesia:start()&lt;/a&gt;&lt;/code&gt; вызывается на обоих узлах.</target>
        </trans-unit>
        <trans-unit id="362b910adc258b676d8a22204af77b93afeab4c8" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;&lt;a href=&quot;mnesia#stop-0&quot;&gt;mnesia:stop()&lt;/a&gt;&lt;/code&gt; stops &lt;code&gt;Mnesia&lt;/code&gt; on the node where the function is executed. The functions &lt;code&gt;mnesia:start/0&lt;/code&gt; and &lt;code&gt;mnesia:stop/0&lt;/code&gt; work on the &quot;local&quot; &lt;code&gt;Mnesia&lt;/code&gt; system. No functions start or stop a set of nodes.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;mnesia#stop-0&quot;&gt;mnesia:stop()&lt;/a&gt;&lt;/code&gt; останавливает &lt;code&gt;Mnesia&lt;/code&gt; на узле, на котором функция выполняется. Функции &lt;code&gt;mnesia:start/0&lt;/code&gt; и &lt;code&gt;mnesia:stop/0&lt;/code&gt; работают в &amp;laquo;локальной&amp;raquo; системе &lt;code&gt;Mnesia&lt;/code&gt; . Никакие функции не запускают или не останавливают набор узлов.</target>
        </trans-unit>
        <trans-unit id="5acaf5a283731e99e901e6928e2526a7dcf95f24" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;&lt;a href=&quot;mnesia#table_info-2&quot;&gt;mnesia:table_info/2&lt;/a&gt;&lt;/code&gt; now understands item &lt;code&gt;frag_properties&lt;/code&gt;.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;mnesia#table_info-2&quot;&gt;mnesia:table_info/2&lt;/a&gt;&lt;/code&gt; теперь понимает элемент &lt;code&gt;frag_properties&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a1334bf42da6253566700391caa3cba76ccf9209" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;Callback:read_config/1&lt;/code&gt; is to be exported from the callback module to read configuration data, initially before the tests start, or as a result of data being reloaded during test execution. The input argument is the same as for function &lt;code&gt;check_parameter/1&lt;/code&gt;.</source>
          <target state="translated">Функция &lt;code&gt;Callback:read_config/1&lt;/code&gt; должна быть экспортирована из модуля обратного вызова для чтения данных конфигурации, первоначально перед запуском тестов или в результате перезагрузки данных во время выполнения теста. Входной аргумент такой же, как для функции &lt;code&gt;check_parameter/1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7fbf758a3229cc65bafd27a8b6bc7ae6dded54d7" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;ModuleName:FunctionName()&lt;/code&gt; is called to produce a test set.</source>
          <target state="translated">Функция &lt;code&gt;ModuleName:FunctionName()&lt;/code&gt; вызывается для создания тестового набора.</target>
        </trans-unit>
        <trans-unit id="41ef4085ec8a8d22de70a87050ca088731db21f2" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;check_process_code/3&lt;/code&gt; returns the value &lt;code&gt;async&lt;/code&gt; immediately after the request has been sent. When the request has been processed, the process that called this function is passed a message on the form &lt;code&gt;{check_process_code, RequestId, CheckResult}&lt;/code&gt;.</source>
          <target state="translated">Функция &lt;code&gt;check_process_code/3&lt;/code&gt; возвращает значение &lt;code&gt;async&lt;/code&gt; сразу после отправки запроса. Когда запрос обработан, процессу, &lt;code&gt;{check_process_code, RequestId, CheckResult}&lt;/code&gt; эту функцию, передается сообщение в форме {check_process_code, RequestId, CheckResult} .</target>
        </trans-unit>
        <trans-unit id="2f6002fc8f958da3877d27d37d914957a73927e2" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;company:init/0&lt;/code&gt; creates the tables. Two tables are of type &lt;code&gt;bag&lt;/code&gt;. This is the &lt;code&gt;manager&lt;/code&gt; relation as well the &lt;code&gt;in_proj&lt;/code&gt; relation. This is interpreted as: an employee can be manager over several departments, and an employee can participate in several projects. However, the &lt;code&gt;at_dep&lt;/code&gt; relation is &lt;code&gt;set&lt;/code&gt;, as an employee can only work in one department. In this data model, there are examples of relations that are 1-to-1 (&lt;code&gt;set&lt;/code&gt;) and 1-to-many (&lt;code&gt;bag&lt;/code&gt;).</source>
          <target state="translated">Функция &lt;code&gt;company:init/0&lt;/code&gt; создает таблицы. Два стола типа &lt;code&gt;bag&lt;/code&gt; . Это отношение &lt;code&gt;manager&lt;/code&gt; а также отношение &lt;code&gt;in_proj&lt;/code&gt; . Это интерпретируется так: сотрудник может быть менеджером в нескольких отделах, а сотрудник может участвовать в нескольких проектах. Однако отношение &lt;code&gt;at_dep&lt;/code&gt; &lt;code&gt;set&lt;/code&gt; , поскольку сотрудник может работать только в одном отделе. В этой модели данных есть примеры отношений 1-к-1 ( &lt;code&gt;set&lt;/code&gt; ) и 1-ко-многим ( &lt;code&gt;bag&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="e1b3a72aa7ba46bfc3b05ebd94c234d7bb780fb0" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;erl_decode()&lt;/code&gt; from &lt;code&gt;erl_marshal&lt;/code&gt; converts the binary into an &lt;code&gt;ETERM&lt;/code&gt; struct:</source>
          <target state="translated">Функция &lt;code&gt;erl_decode()&lt;/code&gt; из &lt;code&gt;erl_marshal&lt;/code&gt; преобразует двоичный файл в структуру &lt;code&gt;ETERM&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c72f7b6a5b6f347ed0767231df7d01b1b2dde191" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;f(delete [, ExtraArgs])&lt;/code&gt; is called for each object in an MIB when the MIB is unloaded from the agent. This makes it possible to perform any necessary clean-up.</source>
          <target state="translated">Функция &lt;code&gt;f(delete [, ExtraArgs])&lt;/code&gt; вызывается для каждого объекта в MIB, когда MIB выгружается из агента. Это позволяет выполнить любую необходимую очистку.</target>
        </trans-unit>
        <trans-unit id="af08e789dab44b8458cb66f5d674a989015f5322" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;f(delete [, ExtraArgs])&lt;/code&gt; is called for each object in an MIB when the MIB is unloaded from the agent. This makes it possible to perform necessary clean-up.</source>
          <target state="translated">Функция &lt;code&gt;f(delete [, ExtraArgs])&lt;/code&gt; вызывается для каждого объекта в MIB, когда MIB выгружается из агента. Это позволяет произвести необходимую очистку.</target>
        </trans-unit>
        <trans-unit id="6c5b6c8f67651723c9f3e56c22f4f4ab0b1c577a" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;f(get [, ExtraArgs])&lt;/code&gt; is called when a get-request or a get-next request refers to the variable.</source>
          <target state="translated">Функция &lt;code&gt;f(get [, ExtraArgs])&lt;/code&gt; вызывается, когда запрос получения или следующий запрос ссылается на переменную.</target>
        </trans-unit>
        <trans-unit id="7f44a9f942983582de9a504377c1237da5bfe42a" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;f(get, RowIndex, Cols [, ExtraArgs])&lt;/code&gt; is called when a get-request refers to a table.</source>
          <target state="translated">Функция &lt;code&gt;f(get, RowIndex, Cols [, ExtraArgs])&lt;/code&gt; вызывается, когда get-запрос обращается к таблице.</target>
        </trans-unit>
        <trans-unit id="f9472e8e9d7e877a982c1ad293026a6058a914d6" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;f(get_next, RowIndex, Cols [, ExtraArgs])&lt;/code&gt; is called when a get-next- or a get-bulk-request refers to the table.</source>
          <target state="translated">Функция &lt;code&gt;f(get_next, RowIndex, Cols [, ExtraArgs])&lt;/code&gt; вызывается, когда get-next- или get-bulk-request обращается к таблице.</target>
        </trans-unit>
        <trans-unit id="dc9c0fe89d1c4041733fa53cdcec2b986419a3b1" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;f(is_set_ok, NewValue [, ExtraArgs])&lt;/code&gt; is called in phase one of the set-request processing so that the new value can be checked for inconsistencies.</source>
          <target state="translated">Функция &lt;code&gt;f(is_set_ok, NewValue [, ExtraArgs])&lt;/code&gt; вызывается на первом этапе обработки запроса на установку, чтобы можно было проверить новое значение на несоответствия.</target>
        </trans-unit>
        <trans-unit id="4d16c30ff848f270285384e5cc25e325a037b629" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;f(is_set_ok, RowIndex, Cols [, ExtraArgs])&lt;/code&gt; is called in phase one of the set-request processing so that new values can be checked for inconsistencies.</source>
          <target state="translated">Функция &lt;code&gt;f(is_set_ok, RowIndex, Cols [, ExtraArgs])&lt;/code&gt; вызывается на первом этапе обработки запроса на установку, чтобы новые значения можно было проверить на несоответствия.</target>
        </trans-unit>
        <trans-unit id="ff5330b2475c665d4944e0a229f93d0602e0e5fa" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;f(new [, ExtraArgs])&lt;/code&gt; is called for each object in an MIB when the MIB is loaded into the agent. This makes it possible to perform the necessary initialization.</source>
          <target state="translated">Функция &lt;code&gt;f(new [, ExtraArgs])&lt;/code&gt; вызывается для каждого объекта в MIB, когда MIB загружается в агент. Это дает возможность выполнить необходимую инициализацию.</target>
        </trans-unit>
        <trans-unit id="0d1ebb83f7fcf0843f0835365552c7f4c0cad7ca" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;f(new [, ExtraArgs])&lt;/code&gt; is called for each variable in the MIB when the MIB is loaded into the agent. This makes it possible to perform necessary initialization.</source>
          <target state="translated">Функция &lt;code&gt;f(new [, ExtraArgs])&lt;/code&gt; вызывается для каждой переменной в MIB, когда MIB загружается в агент. Это позволяет выполнить необходимую инициализацию.</target>
        </trans-unit>
        <trans-unit id="133213fffa730c11eb89996e85007a915e9f1756" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;f(set, RowIndex, Cols [, ExtraArgs])&lt;/code&gt; is called to perform the set in phase two of the set-request processing. It is only called if the corresponding &lt;code&gt;is_set_ok&lt;/code&gt; function did not exist, or returned &lt;code&gt;{noError, 0}&lt;/code&gt;.</source>
          <target state="translated">Функция &lt;code&gt;f(set, RowIndex, Cols [, ExtraArgs])&lt;/code&gt; вызывается для выполнения набора на втором этапе обработки запроса набора. Он вызывается только в том случае, если соответствующая функция &lt;code&gt;is_set_ok&lt;/code&gt; не существует или вернула &lt;code&gt;{noError, 0}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="beb994d1c8d031347e7906599f79761b788164a8" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;find_max_and_min&lt;/code&gt; works out the maximum and minimum temperature. A new construct, &lt;code&gt;if&lt;/code&gt;, is introduced here. If works as follows:</source>
          <target state="translated">Функция &lt;code&gt;find_max_and_min&lt;/code&gt; определяет максимальную и минимальную температуру. Здесь вводится новая конструкция &lt;code&gt;if&lt;/code&gt; . Если работает следующим образом:</target>
        </trans-unit>
        <trans-unit id="e3c365109eb0604df295111a6b478883a0063173" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;foreach&lt;/code&gt; expresses this similarity:</source>
          <target state="translated">Функция &lt;code&gt;foreach&lt;/code&gt; выражает это сходство:</target>
        </trans-unit>
        <trans-unit id="32b248029fdb79694c3f91257a1b49d6e08c1720" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;format/2&lt;/code&gt; (that is, &lt;code&gt;format&lt;/code&gt; with two arguments) takes two lists. The first one is nearly always a list written between &quot; &quot;. This list is printed out as it is, except that each ~w is replaced by a term taken in order from the second list. Each ~n is replaced by a new line. The &lt;code&gt;io:format/2&lt;/code&gt; function itself returns the atom &lt;code&gt;ok&lt;/code&gt; if everything goes as planned. Like other functions in Erlang, it crashes if an error occurs. This is not a fault in Erlang, it is a deliberate policy. Erlang has sophisticated mechanisms to handle errors which are shown later. As an exercise, try to make &lt;code&gt;io:format&lt;/code&gt; crash, it should not be difficult. But notice that although &lt;code&gt;io:format&lt;/code&gt; crashes, the Erlang shell itself does not crash.</source>
          <target state="translated">Функция &lt;code&gt;format/2&lt;/code&gt; (то есть &lt;code&gt;format&lt;/code&gt; с двумя аргументами) принимает два списка. Первый - это почти всегда список, записанный между &quot;&quot;. Этот список распечатывается как есть, за исключением того, что каждый ~ w заменяется термином, взятым по порядку из второго списка. Каждый ~ n заменяется новой строкой. Сама функция &lt;code&gt;io:format/2&lt;/code&gt; возвращает атом в &lt;code&gt;ok&lt;/code&gt; если все идет по плану. Как и другие функции в Erlang, он вылетает в случае ошибки. Это не ошибка Erlang, это сознательная политика. В Erlang есть сложные механизмы обработки ошибок, которые будут показаны позже. В качестве упражнения попробуйте вызвать сбой &lt;code&gt;io:format&lt;/code&gt; , это не должно быть сложно. Но обратите внимание, что хотя &lt;code&gt;io:format&lt;/code&gt; вылетает, сама оболочка Erlang не вылетает.</target>
        </trans-unit>
        <trans-unit id="3aac06ca8d394b3646df1b427f505d8cf51b76fc" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;g/1&lt;/code&gt; is deprecated and will be removed in next version.</source>
          <target state="translated">Функция &lt;code&gt;g/1&lt;/code&gt; устарела и будет удалена в следующей версии.</target>
        </trans-unit>
        <trans-unit id="88abc7d88e609edf90b5266ee54f52aa2a6dcc51" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;g/2&lt;/code&gt; is deprecated and will be removed in next major release.</source>
          <target state="translated">Функция &lt;code&gt;g/2&lt;/code&gt; устарела и будет удалена в следующем основном выпуске.</target>
        </trans-unit>
        <trans-unit id="81d897d03e553a2581073072bbd55d8966c2a444" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;g/3&lt;/code&gt; is deprecated and will eventually be removed.</source>
          <target state="translated">Функция &lt;code&gt;g/3&lt;/code&gt; устарела и со временем будет удалена.</target>
        </trans-unit>
        <trans-unit id="dd9a50875733e809d1405bf85bfdecd386ca67c2" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;garbage_collect/2&lt;/code&gt; returns the value &lt;code&gt;async&lt;/code&gt; immediately after the request has been sent. When the request has been processed, the process that called this function is passed a message on the form &lt;code&gt;{garbage_collect, RequestId, GCResult}&lt;/code&gt;.</source>
          <target state="translated">Функция &lt;code&gt;garbage_collect/2&lt;/code&gt; возвращает значение &lt;code&gt;async&lt;/code&gt; сразу после отправки запроса. Когда запрос обработан, процессу, &lt;code&gt;{garbage_collect, RequestId, GCResult}&lt;/code&gt; эту функцию, передается сообщение в форме {garbage_collect, RequestId, GCResult} .</target>
        </trans-unit>
        <trans-unit id="25a3548064393431c03ef0a701e0096414b17490" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;insert_emp/3&lt;/code&gt; creates a Functional Object (Fun). &lt;code&gt;Fun&lt;/code&gt; is passed as a single argument to the function &lt;code&gt;&lt;a href=&quot;mnesia#transaction-1&quot;&gt;mnesia:transaction(Fun)&lt;/a&gt;&lt;/code&gt;. This means that &lt;code&gt;Fun&lt;/code&gt; is run as a transaction with the following properties:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd04d9687a79d761d32b2c43de1576259fb5f864" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;insert_emp/3&lt;/code&gt; creates a Functional Object (Fun). &lt;code&gt;Fun&lt;/code&gt; is passed as a single argument to the function &lt;code&gt;&lt;a href=&quot;mnesia#transaction-2&quot;&gt;mnesia:transaction(Fun)&lt;/a&gt;&lt;/code&gt;. This means that &lt;code&gt;Fun&lt;/code&gt; is run as a transaction with the following properties:</source>
          <target state="translated">Функция &lt;code&gt;insert_emp/3&lt;/code&gt; создает функциональный объект (развлечение). &lt;code&gt;Fun&lt;/code&gt; передается как единственный аргумент функции &lt;code&gt;&lt;a href=&quot;mnesia#transaction-2&quot;&gt;mnesia:transaction(Fun)&lt;/a&gt;&lt;/code&gt; . Это означает, что &lt;code&gt;Fun&lt;/code&gt; запускается как транзакция со следующими свойствами:</target>
        </trans-unit>
        <trans-unit id="ea55fdab4365faa7f773834a49baba846da23b95" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;mnesia:change_table_frag(Tab, Change)&lt;/code&gt; is intended to be used for reconfiguration of fragmented tables. Argument &lt;code&gt;Change&lt;/code&gt; is to have one of the following values:</source>
          <target state="translated">Функция &lt;code&gt;mnesia:change_table_frag(Tab, Change)&lt;/code&gt; предназначена для реконфигурации фрагментированных таблиц. &lt;code&gt;Change&lt;/code&gt; аргумента должно иметь одно из следующих значений:</target>
        </trans-unit>
        <trans-unit id="b1c90e4ee481c7da73002efc510d14130a3a01a5" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;mnesia:dirty_*&lt;/code&gt; always executes with &lt;code&gt;async_dirty&lt;/code&gt; semantics regardless of which activity access contexts that are started. It can even start contexts without any enclosing activity access context.</source>
          <target state="translated">Функция &lt;code&gt;mnesia:dirty_*&lt;/code&gt; всегда выполняется с семантикой &lt;code&gt;async_dirty&lt;/code&gt; независимо от того, какие контексты доступа к активности запущены. Он может даже запускать контексты без какого-либо включающего контекста доступа к активности.</target>
        </trans-unit>
        <trans-unit id="670d344917e31e9f9f7bd59eee0e7cb0d02a6cdf" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;mnesia:lock/2&lt;/code&gt; is intended to support explicit locking on tables, but is also intended for situations when locks need to be acquired regardless of how tables are replicated. Currently, two kinds of &lt;code&gt;LockKind&lt;/code&gt; are supported:</source>
          <target state="translated">Функция &lt;code&gt;mnesia:lock/2&lt;/code&gt; предназначена для поддержки явной блокировки таблиц, но также предназначена для ситуаций, когда блокировки должны быть получены независимо от того, как реплицируются таблицы. В настоящее время поддерживаются два типа &lt;code&gt;LockKind&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="d77603a1f02efb7a0e1f99f991914c28109971d3" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;mnesia:match_object/3&lt;/code&gt; automatically uses indexes if these exist. However, no heuristics are performed to select the best index.</source>
          <target state="translated">Функция &lt;code&gt;mnesia:match_object/3&lt;/code&gt; автоматически использует индексы, если они существуют. Однако эвристика для выбора лучшего индекса не выполняется.</target>
        </trans-unit>
        <trans-unit id="6edabfd9b5590580f8f9657171a96caa4b74ebe3" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;new/4&lt;/code&gt; creates a new map term and lets the keys &lt;code&gt;red&lt;/code&gt;, &lt;code&gt;green&lt;/code&gt;, &lt;code&gt;blue&lt;/code&gt;, and &lt;code&gt;alpha&lt;/code&gt; be associated with an initial value. In this case, only float values between and including 0.0 and 1.0 are allowed, as ensured by the &lt;code&gt;?is_channel/1&lt;/code&gt; macro for each argument. Only the &lt;code&gt;=&amp;gt;&lt;/code&gt; operator is allowed when creating a new map.</source>
          <target state="translated">Функция &lt;code&gt;new/4&lt;/code&gt; создает новый термин карты и позволяет связать клавиши &lt;code&gt;red&lt;/code&gt; , &lt;code&gt;green&lt;/code&gt; , &lt;code&gt;blue&lt;/code&gt; и &lt;code&gt;alpha&lt;/code&gt; с начальным значением. В этом случае разрешены только значения с плавающей запятой между 0,0 и 1,0 включительно, что обеспечивается &lt;code&gt;?is_channel/1&lt;/code&gt; для каждого аргумента. При создании новой карты разрешен только оператор &lt;code&gt;=&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="34e4f0d7c8457880dafad073945fded626331720" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;pyth(N)&lt;/code&gt; generates a list of all integers &lt;code&gt;{A,B,C}&lt;/code&gt; such that &lt;code&gt;A**2 + B**2 = C**2&lt;/code&gt; and where the sum of the sides is equal to, or less than, &lt;code&gt;N&lt;/code&gt;:</source>
          <target state="translated">Функция &lt;code&gt;pyth(N)&lt;/code&gt; генерирует список всех целых чисел &lt;code&gt;{A,B,C}&lt;/code&gt; таких, что &lt;code&gt;A**2 + B**2 = C**2&lt;/code&gt; и где сумма сторон равна или меньше, &lt;code&gt;N&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="6137179b93256e30bc3aeec2790f9eeac4bbcd5d" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;raise/2&lt;/code&gt; contains a Fun made up of four code lines. This Fun is called by the statement &lt;code&gt;mnesia:transaction(F)&lt;/code&gt; and returns a value.</source>
          <target state="translated">Функция &lt;code&gt;raise/2&lt;/code&gt; содержит Fun, состоящее из четырех строк кода. Это Fun вызывается оператором &lt;code&gt;mnesia:transaction(F)&lt;/code&gt; и возвращает значение.</target>
        </trans-unit>
        <trans-unit id="99cf9b671e2d9b419e9dca0fedf06d36961f6433" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;raise_females/1&lt;/code&gt; returns the tuple &lt;code&gt;{atomic, Number}&lt;/code&gt;, where &lt;code&gt;Number&lt;/code&gt; is the number of female employees who received a salary increase. If an error occurs, the value &lt;code&gt;{aborted, Reason}&lt;/code&gt; is returned, and &lt;code&gt;Mnesia&lt;/code&gt; guarantees that the salary is not raised for any employee.</source>
          <target state="translated">Функция &lt;code&gt;raise_females/1&lt;/code&gt; возвращает кортеж &lt;code&gt;{atomic, Number}&lt;/code&gt; , где &lt;code&gt;Number&lt;/code&gt; - это количество сотрудников-женщин, получивших повышение заработной платы. В случае ошибки возвращается значение &lt;code&gt;{aborted, Reason}&lt;/code&gt; , и &lt;code&gt;Mnesia&lt;/code&gt; гарантирует, что зарплата не будет повышена ни для одного сотрудника.</target>
        </trans-unit>
        <trans-unit id="a03f0af918ed9a2c831249c7c193fd4857632c71" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;select&lt;/code&gt; can be used to add more constraints and create output that cannot be done with &lt;code&gt;mnesia:match_object/3&lt;/code&gt;.</source>
          <target state="translated">Функцию &lt;code&gt;select&lt;/code&gt; можно использовать для добавления дополнительных ограничений и создания вывода, который нельзя сделать с помощью &lt;code&gt;mnesia:match_object/3&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9a509a3ad87b3c1678e41395b1c17d5a940026b1" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;send_message/3&lt;/code&gt; will only be called if the &lt;code&gt;&lt;a href=&quot;megaco#ui_resend_indication&quot;&gt;resend_indication&lt;/a&gt;&lt;/code&gt; config option has been set to the value &lt;code&gt;flag&lt;/code&gt;. The third argument, &lt;code&gt;Resend&lt;/code&gt; then indicates if the message send is a resend or not.</source>
          <target state="translated">Функция &lt;code&gt;send_message/3&lt;/code&gt; будет вызываться только в том случае, если для &lt;code&gt;&lt;a href=&quot;megaco#ui_resend_indication&quot;&gt;resend_indication&lt;/a&gt;&lt;/code&gt; конфигурации Resend_indication установлен &lt;code&gt;flag&lt;/code&gt; значения . Третий аргумент, &lt;code&gt;Resend&lt;/code&gt; , затем указывает, является ли отправленное сообщение повторной отправкой или нет.</target>
        </trans-unit>
        <trans-unit id="7470406d16d9455cca5984d08f7d4c3396313445" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;send_trap&lt;/code&gt; is kept for backwards compatibility and should not be used in new code. Applications that use this function will continue to work. The &lt;code&gt;snmpNotifyName&lt;/code&gt; is used as the community string by the agent when a notification is sent.</source>
          <target state="translated">Функция &lt;code&gt;send_trap&lt;/code&gt; сохранена для обратной совместимости и не должна использоваться в новом коде. Приложения, использующие эту функцию, будут продолжать работать. &lt;code&gt;snmpNotifyName&lt;/code&gt; используется в качестве строки сообщества по агенту , когда отправляется уведомление.</target>
        </trans-unit>
        <trans-unit id="103c9badd4ad12f4e6468c8e8de6801ce063239b" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;start&lt;/code&gt; first creates a process, let us call it &quot;pong&quot;:</source>
          <target state="translated">Функция &lt;code&gt;start&lt;/code&gt; сначала создает процесс, назовем его &amp;laquo;понг&amp;raquo;:</target>
        </trans-unit>
        <trans-unit id="eb32c2f2d1549c3a5030e2171eab2d919298928c" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;subsystem/4&lt;/code&gt; and subsequent calls of &lt;code&gt;send/3,4,5&lt;/code&gt; must be executed in the same process.</source>
          <target state="translated">&lt;code&gt;subsystem/4&lt;/code&gt; функций / 4 и последующие вызовы &lt;code&gt;send/3,4,5&lt;/code&gt; должны выполняться в одном процессе.</target>
        </trans-unit>
        <trans-unit id="c9ecc0a2f71c6348929469f92678095577b5215a" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;subtrees/1&lt;/code&gt; and the constructor functions &lt;code&gt;make_tree/2&lt;/code&gt; and &lt;code&gt;update_tree/2&lt;/code&gt; can be a great help if one wants to traverse a syntax tree, visiting all its subtrees, but treat nodes of the tree in a uniform way in most or all cases. Using these functions makes this simple, and also assures that your code is not overly sensitive to extensions of the syntax tree data type, because any node types not explicitly handled by your code can be left to a default case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="338ff9986a9cbcb124e3833af89e3fbd5600e24b" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;target_system:create/1&lt;/code&gt; performs the following:</source>
          <target state="translated">Функция &lt;code&gt;target_system:create/1&lt;/code&gt; выполняет следующее:</target>
        </trans-unit>
        <trans-unit id="0cd28e869f41fdc007104b6030c49cc7a75a7292" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;target_system:install/2&lt;/code&gt; performs the following:</source>
          <target state="translated">Функция &lt;code&gt;target_system:install/2&lt;/code&gt; выполняет следующее:</target>
        </trans-unit>
        <trans-unit id="4199649f879206d3b2fa3c3bd5824df5cda6d3e9" translate="yes" xml:space="preserve">
          <source>The function accepts the following parameters:</source>
          <target state="translated">Функция принимает следующие параметры:</target>
        </trans-unit>
        <trans-unit id="094a87c2e8a4a6a2a6be76b4ad60bd189810ef39" translate="yes" xml:space="preserve">
          <source>The function arguments are as follows:</source>
          <target state="translated">Аргументы функции следующие:</target>
        </trans-unit>
        <trans-unit id="f8347209966cf7f71c1646053d74ccb363214ea1" translate="yes" xml:space="preserve">
          <source>The function arguments passed to a NIF appears in an array &lt;code&gt;argv&lt;/code&gt;, with &lt;code&gt;argc&lt;/code&gt; as the length of the array, and thus the arity of the function. The Nth argument of the function can be accessed as &lt;code&gt;argv[N-1]&lt;/code&gt;. NIFs also take an environment argument that serves as an opaque handle that is needed to be passed on to most API functions. The environment contains information about the calling Erlang process:</source>
          <target state="translated">Аргументы функции, передаваемые в NIF, появляются в массиве &lt;code&gt;argv&lt;/code&gt; , где &lt;code&gt;argc&lt;/code&gt; обозначает длину массива и, следовательно, арность функции. К N-му аргументу функции можно получить доступ как &lt;code&gt;argv[N-1]&lt;/code&gt; . NIF также принимают аргумент среды, который служит непрозрачным дескриптором, который необходимо передать большинству функций API. Окружение содержит информацию о вызывающем процессе Erlang:</target>
        </trans-unit>
        <trans-unit id="fa68aed990974c1565915491205a9e47d95de75c" translate="yes" xml:space="preserve">
          <source>The function call &lt;code&gt;mnesia:del_table_copy(schema, mynode@host)&lt;/code&gt; deletes node &lt;code&gt;mynode@host&lt;/code&gt; from the &lt;code&gt;Mnesia&lt;/code&gt; system. The call fails if &lt;code&gt;Mnesia&lt;/code&gt; is running on &lt;code&gt;mynode@host&lt;/code&gt;. The other &lt;code&gt;Mnesia&lt;/code&gt; nodes never try to connect to that node again. Notice that if there is a disc resident schema on node &lt;code&gt;mynode@host&lt;/code&gt;, the entire &lt;code&gt;Mnesia&lt;/code&gt; directory is to be deleted. This is done with the function &lt;code&gt;&lt;a href=&quot;mnesia#delete_schema-1&quot;&gt;mnesia:delete_schema/1&lt;/a&gt;&lt;/code&gt;. If &lt;code&gt;Mnesia&lt;/code&gt; is started again on node &lt;code&gt;mynode@host&lt;/code&gt; and the directory has not been cleared, the behavior of &lt;code&gt;Mnesia&lt;/code&gt; is undefined.</source>
          <target state="translated">Вызов функции &lt;code&gt;mnesia:del_table_copy(schema, mynode@host)&lt;/code&gt; удаляет узел &lt;code&gt;mynode@host&lt;/code&gt; из системы &lt;code&gt;Mnesia&lt;/code&gt; . Вызов не выполняется, если &lt;code&gt;Mnesia&lt;/code&gt; запущена на &lt;code&gt;mynode@host&lt;/code&gt; . Другие узлы &lt;code&gt;Mnesia&lt;/code&gt; никогда больше не пытаются подключиться к этому узлу. Обратите внимание, что если на узле &lt;code&gt;mynode@host&lt;/code&gt; есть резидентная схема диска , весь каталог &lt;code&gt;Mnesia&lt;/code&gt; должен быть удален. Это делается с помощью функции &lt;code&gt;&lt;a href=&quot;mnesia#delete_schema-1&quot;&gt;mnesia:delete_schema/1&lt;/a&gt;&lt;/code&gt; . Если &lt;code&gt;Mnesia&lt;/code&gt; снова запускается на узле &lt;code&gt;mynode@host&lt;/code&gt; и каталог не был очищен, поведение &lt;code&gt;Mnesia&lt;/code&gt; не определено.</target>
        </trans-unit>
        <trans-unit id="dc50b6ebf32dde9a3ad360a39afe42dd265bea37" translate="yes" xml:space="preserve">
          <source>The function can also return &lt;code&gt;ignore&lt;/code&gt;.</source>
          <target state="translated">Функция также может возвращать &lt;code&gt;ignore&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b7a8505e2fcf77bbdba5fdbba0e6dcaae66b46f6" translate="yes" xml:space="preserve">
          <source>The function can be called by a log handler to convert a log event term to a printable string. The returned value can, for example, be printed as a log entry to the console or a file using &lt;code&gt; io:put_chars/1,2&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54500a01f09be1a2bd2f0c1abfeddba6e33a00fa" translate="yes" xml:space="preserve">
          <source>The function can be called by a log handler to convert a log event term to a printable string. The returned value can, for example, be printed as a log entry to the console or a file using &lt;code&gt;io:put_chars/1,2&lt;/code&gt;.</source>
          <target state="translated">Функция может быть вызвана обработчиком журнала для преобразования термина события журнала в печатаемую строку. Возвращаемое значение можно, например, распечатать как запись журнала в консоли или как файл с использованием &lt;code&gt;io:put_chars/1,2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c504308064f08c5f9ea9e812d1f6e5a760e998d0" translate="yes" xml:space="preserve">
          <source>The function can be called, for example, when these files are generated at the target. The function is to be called after &lt;code&gt;&lt;a href=&quot;#set_unpacked-2&quot;&gt;set_unpacked/2&lt;/a&gt;&lt;/code&gt; has been called.</source>
          <target state="translated">Функция может быть вызвана, например, когда эти файлы генерируются в адресате. Функция вызывается после &lt;code&gt;&lt;a href=&quot;#set_unpacked-2&quot;&gt;set_unpacked/2&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dfcfdf84d3a74a872f6ce266bc40953da7783b4c" translate="yes" xml:space="preserve">
          <source>The function can be used as follows:</source>
          <target state="translated">Функция может быть использована следующим образом:</target>
        </trans-unit>
        <trans-unit id="18f3fe03e8503c073eac107ed5ad24dbaeb411a0" translate="yes" xml:space="preserve">
          <source>The function can be used on a running system, or by copying the entire log directory and calling this function. SNMP must be running in order to provide MIB information.</source>
          <target state="translated">Функцию можно использовать на работающей системе или скопировав весь каталог журнала и вызвав эту функцию.Для предоставления информации MIB необходимо запустить SNMP.</target>
        </trans-unit>
        <trans-unit id="b8fb21fb19b96fc3f558cb35f3055df39d441e2b" translate="yes" xml:space="preserve">
          <source>The function can be used on files opened in &lt;code&gt;raw&lt;/code&gt; mode. However, it is inefficient to use it on &lt;code&gt;raw&lt;/code&gt; files if the file is not opened with option &lt;code&gt;{read_ahead, Size}&lt;/code&gt; specified. Thus, combining &lt;code&gt;raw&lt;/code&gt; and &lt;code&gt;{read_ahead, Size}&lt;/code&gt; is highly recommended when opening a text file for raw line-oriented reading.</source>
          <target state="translated">Функцию можно использовать для файлов, открытых в &lt;code&gt;raw&lt;/code&gt; режиме. Тем не менее, это неэффективно использовать его на &lt;code&gt;raw&lt;/code&gt; файлов , если файл не открывается с опцией &lt;code&gt;{read_ahead, Size}&lt;/code&gt; указанного. Таким образом, сочетание &lt;code&gt;raw&lt;/code&gt; и &lt;code&gt;{read_ahead, Size}&lt;/code&gt; настоятельно рекомендуется при открытии текстового файла для необработанного строчно-ориентированного чтения.</target>
        </trans-unit>
        <trans-unit id="8a30119da22bc70b60e3eb0a2546500296120c22" translate="yes" xml:space="preserve">
          <source>The function can return any term. If the event handler is deleted because of a call to &lt;code&gt;gen_event:delete_handler/3&lt;/code&gt;, the return value of that function becomes the return value of this function. If the event handler is to be replaced with another event handler because of a swap, the return value is passed to the &lt;code&gt;init&lt;/code&gt; function of the new event handler. Otherwise the return value is ignored.</source>
          <target state="translated">Функция может возвращать любой термин. Если обработчик событий удален из-за вызова &lt;code&gt;gen_event:delete_handler/3&lt;/code&gt; , возвращаемое значение этой функции становится возвращаемым значением этой функции. Если обработчик событий должен быть заменен другим обработчиком событий из-за подкачки, возвращаемое значение передается в функцию &lt;code&gt;init&lt;/code&gt; нового обработчика событий. В противном случае возвращаемое значение игнорируется.</target>
        </trans-unit>
        <trans-unit id="ed95f32e82d2850058944611e44392a4e4ff3345" translate="yes" xml:space="preserve">
          <source>The function can return numerous errors, some can only be returned given a certain combination of options.</source>
          <target state="translated">Функция может возвращать многочисленные ошибки,некоторые могут быть возвращены только при определенной комбинации опций.</target>
        </trans-unit>
        <trans-unit id="ea57ec1a4ff4fb3ef55b1134a75586251178e601" translate="yes" xml:space="preserve">
          <source>The function can return the following error conditions, all well specified (no opaque values):</source>
          <target state="translated">Функция может возвращать следующие состояния ошибки,все хорошо указанные (нет непрозрачных значений):</target>
        </trans-unit>
        <trans-unit id="c5c489b2375429e225473997aebd4b0f058730b3" translate="yes" xml:space="preserve">
          <source>The function cannot be found when evaluating a function call.</source>
          <target state="translated">Функция не может быть найдена при оценке вызова функции.</target>
        </trans-unit>
        <trans-unit id="900b2cc1343be73658d225cf863655824f14c352" translate="yes" xml:space="preserve">
          <source>The function check provides an error tuple if Unicode code points &amp;gt; 255 are to be returned if the client requested &lt;code&gt;latin1&lt;/code&gt;.</source>
          <target state="translated">Функция проверки предоставляет кортеж ошибок, если кодовые точки Unicode&amp;gt; 255 должны быть возвращены, если клиент запросил &lt;code&gt;latin1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d2f0030f1dc39e1c15798593d550e2c64df3c720" translate="yes" xml:space="preserve">
          <source>The function creates a copy of &lt;code&gt;channel.erl&lt;/code&gt; where it for each executable line is specified how many times that line has been executed. The output file is called &lt;code&gt;channel.COVER.out&lt;/code&gt;.</source>
          <target state="translated">Функция создает копию &lt;code&gt;channel.erl&lt;/code&gt; , где для каждой исполняемой строки указывается, сколько раз эта строка была выполнена. Выходной файл называется &lt;code&gt;channel.COVER.out&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e4bf61d20b6e51c3f3e2be4195443a2547ef5d88" translate="yes" xml:space="preserve">
          <source>The function creates an Erlang list object, whose length &lt;code&gt;arrsize&lt;/code&gt; and whose elements are taken from the terms in &lt;code&gt;array&lt;/code&gt;.</source>
          <target state="translated">Функция создает объект списка Erlang, длина которого &lt;code&gt;arrsize&lt;/code&gt; и элементы которого взяты из термов в &lt;code&gt;array&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e824f3f61fcb9a0cc2524376c6e7e48b567c62f2" translate="yes" xml:space="preserve">
          <source>The function creates an Erlang tuple, whose arity is &lt;code&gt;size&lt;/code&gt; and whose elements are taken from the terms in &lt;code&gt;array&lt;/code&gt;.</source>
          <target state="translated">Функция создает кортеж Erlang, арность которого равна &lt;code&gt;size&lt;/code&gt; а элементы берутся из членов &lt;code&gt;array&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a0c7fe697609b06db41d8d42bbc188f96462c7d5" translate="yes" xml:space="preserve">
          <source>The function descriptions are sorted in alphabetical order. It is recommended to start to read about &lt;code&gt;mnesia:create_table/2&lt;/code&gt;, &lt;code&gt;mnesia:lock/2&lt;/code&gt;, and &lt;code&gt;mnesia:activity/4&lt;/code&gt; before you continue and learn about the rest.</source>
          <target state="translated">Описания функций отсортированы в алфавитном порядке. Рекомендуется начать читать о &lt;code&gt;mnesia:create_table/2&lt;/code&gt; , &lt;code&gt;mnesia:lock/2&lt;/code&gt; и &lt;code&gt;mnesia:activity/4&lt;/code&gt; , прежде чем продолжить и узнать об остальном.</target>
        </trans-unit>
        <trans-unit id="a4a4d3bf61b03f1db00124a05a395c3a8430b995" translate="yes" xml:space="preserve">
          <source>The function does not return until the application is started, stopped, or successfully moved to another node. However, in some cases where permission is set to &lt;code&gt;true&lt;/code&gt;, the function returns &lt;code&gt;ok&lt;/code&gt; even though the application is not started. This is true when an application cannot start because of dependencies to other applications that are not yet started. When they are started, &lt;code&gt;Application&lt;/code&gt; is started as well.</source>
          <target state="translated">Функция не возвращается, пока приложение не будет запущено, остановлено или успешно перемещено на другой узел. Однако в некоторых случаях, когда для разрешения установлено значение &lt;code&gt;true&lt;/code&gt; , функция возвращает &lt;code&gt;ok&lt;/code&gt; даже если приложение не запущено. Это верно, когда приложение не может запуститься из-за зависимостей от других приложений, которые еще не запущены. Когда они запускаются, запускается и &lt;code&gt;Application&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1a469b96b6bc66c5e0081f41213671f5c1c3834d" translate="yes" xml:space="preserve">
          <source>The function evaluates &lt;code&gt;apply(Module, Function, Args)&lt;/code&gt; on the specified nodes and collects the answers. It returns &lt;code&gt;{ResL, BadNodes}&lt;/code&gt;, where &lt;code&gt;BadNodes&lt;/code&gt; is a list of the nodes that do not exist, and &lt;code&gt;ResL&lt;/code&gt; is a list of the return values, or &lt;code&gt;{badrpc, Reason}&lt;/code&gt; for failing calls. &lt;code&gt;Timeout&lt;/code&gt; is a time (integer) in milliseconds, or &lt;code&gt;infinity&lt;/code&gt;.</source>
          <target state="translated">Функция оценивает &lt;code&gt;apply(Module, Function, Args)&lt;/code&gt; на указанных узлах и собирает ответы. Он возвращает &lt;code&gt;{ResL, BadNodes}&lt;/code&gt; , где &lt;code&gt;BadNodes&lt;/code&gt; - это список несуществующих узлов, а &lt;code&gt;ResL&lt;/code&gt; - это список возвращаемых значений или &lt;code&gt;{badrpc, Reason}&lt;/code&gt; для неудачных вызовов. &lt;code&gt;Timeout&lt;/code&gt; - это время (целое число) в миллисекундах или &lt;code&gt;infinity&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bfd306c3cfcdf7cb094583b8a0337221382f9540" translate="yes" xml:space="preserve">
          <source>The function fails if the calling process was not started by a &lt;code&gt;&lt;a href=&quot;proc_lib&quot;&gt;proc_lib&lt;/a&gt;&lt;/code&gt; start function, or if it is not registered according to &lt;code&gt;&lt;a href=&quot;#type-server_name&quot;&gt;server_name()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Функция завершается ошибкой, если вызывающий процесс не был запущен &lt;code&gt;&lt;a href=&quot;proc_lib&quot;&gt;proc_lib&lt;/a&gt;&lt;/code&gt; запуска proc_lib или если он не зарегистрирован согласно &lt;code&gt;&lt;a href=&quot;#type-server_name&quot;&gt;server_name()&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0d8167d08507c4718349622be594e2c2117b70ec" translate="yes" xml:space="preserve">
          <source>The function fails if the calling process was not started by a &lt;code&gt;proc_lib&lt;/code&gt; start function, or if it is not registered according to &lt;code&gt;ServerName&lt;/code&gt;.</source>
          <target state="translated">Функция не работает, если вызывающий процесс не был запущен &lt;code&gt;proc_lib&lt;/code&gt; запуска proc_lib или если он не зарегистрирован в соответствии с &lt;code&gt;ServerName&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5ed33b0170b87b32a6fff91a9848a8bb7508e2c1" translate="yes" xml:space="preserve">
          <source>The function fails if the mandatory applications Kernel and STDLIB are not included in the &lt;code&gt;.rel&lt;/code&gt; file and have start type &lt;code&gt;permanent&lt;/code&gt; (which is default).</source>
          <target state="translated">Функция завершается ошибкой, если обязательные приложения Kernel и STDLIB не включены в файл &lt;code&gt;.rel&lt;/code&gt; и имеют &lt;code&gt;permanent&lt;/code&gt; тип запуска (по умолчанию).</target>
        </trans-unit>
        <trans-unit id="6976675cebc3455eafac8b880bffae5936b6e076" translate="yes" xml:space="preserve">
          <source>The function fails with a &lt;code&gt;badarg&lt;/code&gt; run-time error if &lt;code&gt;Dest&lt;/code&gt; is an atom name, but this name is not registered. This is the only case when &lt;code&gt;send&lt;/code&gt; fails for an unreachable destination &lt;code&gt;Dest&lt;/code&gt; (of correct type).</source>
          <target state="translated">Функция завершается неудачно с &lt;code&gt;badarg&lt;/code&gt; выполнения badarg, если &lt;code&gt;Dest&lt;/code&gt; является именем атома, но это имя не зарегистрировано. Это единственный случай, когда &lt;code&gt;send&lt;/code&gt; завершается неудачно для недоступного получателя &lt;code&gt;Dest&lt;/code&gt; (правильного типа).</target>
        </trans-unit>
        <trans-unit id="f9fbf6c475826079470707701e2d9650785e7704" translate="yes" xml:space="preserve">
          <source>The function fails with reason &lt;code&gt;badarg&lt;/code&gt; in the following situations:</source>
          <target state="translated">Функция не работает по причине &lt;code&gt;badarg&lt;/code&gt; в следующих ситуациях:</target>
        </trans-unit>
        <trans-unit id="fe345735a6f8cc2af489da60647a5b2eb92480ca" translate="yes" xml:space="preserve">
          <source>The function is applied to each argument in the list. &lt;code&gt;foreach&lt;/code&gt; returns &lt;code&gt;ok&lt;/code&gt;. It is only used for its side-effect:</source>
          <target state="translated">Функция применяется к каждому аргументу в списке. &lt;code&gt;foreach&lt;/code&gt; возвращает &lt;code&gt;ok&lt;/code&gt; . Он используется только из-за его побочного эффекта:</target>
        </trans-unit>
        <trans-unit id="8ed286726d563576b74209031d0c844b5706bbb8" translate="yes" xml:space="preserve">
          <source>The function is asynchronous in the sense that it does not invoke a disk check, but returns the latest available value.</source>
          <target state="translated">Функция асинхронная в том смысле,что она не вызывает проверку диска,а возвращает последнее доступное значение.</target>
        </trans-unit>
        <trans-unit id="b851161538f61def55e8def7663e88f86cb96f48" translate="yes" xml:space="preserve">
          <source>The function is called by Logger when the formatter configuration for a handler is set or modified. It returns &lt;code&gt;ok&lt;/code&gt; if the configuration is valid, and &lt;code&gt;{error,term()}&lt;/code&gt; if it is faulty.</source>
          <target state="translated">Функция вызывается Logger при установке или изменении конфигурации форматера для обработчика. Он возвращает &lt;code&gt;ok&lt;/code&gt; , если конфигурация действительна, и &lt;code&gt;{error,term()}&lt;/code&gt; если она ошибочна.</target>
        </trans-unit>
        <trans-unit id="685ab0b87ed3c05c293ea5d73e5639b4e1ff9576" translate="yes" xml:space="preserve">
          <source>The function is called by a Logger when formatter configuration is set or modified. The formatter must validate the given configuration and return &lt;code&gt;ok&lt;/code&gt; if it is correct, and &lt;code&gt;{error,Reason}&lt;/code&gt; if it is faulty.</source>
          <target state="translated">Функция вызывается регистратором при установке или изменении конфигурации форматера. Форматировщик должен проверить данную конфигурацию и вернуть &lt;code&gt;ok&lt;/code&gt; если она верна, и &lt;code&gt;{error,Reason}&lt;/code&gt; , если она неисправна.</target>
        </trans-unit>
        <trans-unit id="7fcd6de716b12c9ffa6272634f06715a4cc1ce07" translate="yes" xml:space="preserve">
          <source>The function is called for each start phase (as defined for the primary application) for the primary application and all included applications, for which the start phase is defined.</source>
          <target state="translated">Функция вызывается для каждой стартовой фазы (как определено для основного приложения)для основного приложения и всех включенных приложений,для которых определена стартовая фаза.</target>
        </trans-unit>
        <trans-unit id="c011a777dda4570cb71bfb1ec0fb55355e1ee1d3" translate="yes" xml:space="preserve">
          <source>The function is called if a user related error occurs at run-time, for example if a user defined instrumentation function returns erroneous.</source>
          <target state="translated">Функция вызывается,если во время выполнения происходит ошибка,связанная с пользователем,например,если определенная пользователем функция КИП возвращает ошибку.</target>
        </trans-unit>
        <trans-unit id="af4ce4e1efa0b48a530a0c78c675702975921a0a" translate="yes" xml:space="preserve">
          <source>The function is called if an error occurs during the configuration phase, for example if a syntax error is found in a configuration file.</source>
          <target state="translated">Функция вызывается в случае возникновения ошибки на этапе конфигурации,например,при обнаружении синтаксической ошибки в конфигурационном файле.</target>
        </trans-unit>
        <trans-unit id="66a34ca9f0458ec66fedbe0a7a5d4d658f1bc216" translate="yes" xml:space="preserve">
          <source>The function is called on a temporary process when a handler is about to be removed. The purpose is to release all resources used by the handler.</source>
          <target state="translated">Функция вызывается во время временного процесса,когда обработчик собирается быть удаленным.Целью является освобождение всех ресурсов,используемых обработчиком.</target>
        </trans-unit>
        <trans-unit id="ad2afb8b57f9d81965d61a6dce572893b3ec7c89" translate="yes" xml:space="preserve">
          <source>The function is called on a temporary process when an new handler is about to be added. The purpose is to verify the configuration and initiate all resources needed by the handler.</source>
          <target state="translated">Функция вызывается на временном процессе,когда новый обработчик собирается быть добавлен.Целью является проверка конфигурации и инициирование всех ресурсов,необходимых обработчику.</target>
        </trans-unit>
        <trans-unit id="fdbb67b2c606784fb7d08c84801ed6ce232a3ebb" translate="yes" xml:space="preserve">
          <source>The function is called on a temporary process when the configuration for a handler is about to change. The purpose is to verify and act on the new configuration.</source>
          <target state="translated">Функция вызывается на временном процессе,когда конфигурация обработчика вот-вот изменится.Целью является проверка новой конфигурации и принятие соответствующих мер.</target>
        </trans-unit>
        <trans-unit id="80c74d3f2c316470e0f2a09c6499b88b08ed5921" translate="yes" xml:space="preserve">
          <source>The function is called when all primary filters and all handler filters for the handler in question have passed for the given log event. It is called on the client process, that is, the process that issued the log event.</source>
          <target state="translated">Функция вызывается,когда все первичные фильтры и все фильтры обработчика для данного обработчика прошли для данного события журнала.Она вызывается на клиентском процессе,то есть на процессе,который выдал событие журнала.</target>
        </trans-unit>
        <trans-unit id="15a03b831c49c7001a624e54ead2c7724ae063ff" translate="yes" xml:space="preserve">
          <source>The function is called when one of the Logger API functions for fetching the handler configuration is called, for example &lt;code&gt;&lt;a href=&quot;#get_handler_config-1&quot;&gt; logger:get_handler_config/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="729c9968acf86cfc5b4d0b16abd57720e8543995" translate="yes" xml:space="preserve">
          <source>The function is called with the current line, up to the cursor, as a reversed string. It is to return a three-tuple: &lt;code&gt;{yes|no, string(), [string(), ...]}&lt;/code&gt;. The first element gives a beep if &lt;code&gt;no&lt;/code&gt;, otherwise the expansion is silent; the second is a string that will be entered at the cursor position; the third is a list of possible expansions. If this list is not empty, it is printed and the current input line is written once again.</source>
          <target state="translated">Функция вызывается с текущей строкой до курсора в виде перевернутой строки. Он должен вернуть тройку: &lt;code&gt;{yes|no, string(), [string(), ...]}&lt;/code&gt; . Первый элемент издает звуковой сигнал, если &lt;code&gt;no&lt;/code&gt; , иначе расширение молчит; второй - строка, которая будет введена в позиции курсора; третий - список возможных расширений. Если этот список не пуст, он печатается и текущая строка ввода записывается еще раз.</target>
        </trans-unit>
        <trans-unit id="5bcd5b77b7b4d998e29896caa372504ff0881133" translate="yes" xml:space="preserve">
          <source>The function is called with the data the I/O server finds on its I/O device, returning one of:</source>
          <target state="translated">Функция вызывается с данными,которые сервер ввода/вывода находит на своем устройстве ввода/вывода,возвращая одно из них:</target>
        </trans-unit>
        <trans-unit id="05b6947d52059ff05be463986c224ccf19b497f6" translate="yes" xml:space="preserve">
          <source>The function is called with two arguments. The first argument is the successive elements in the list. The second argument is the accumulator. The function must return a new accumulator, which is used the next time the function is called.</source>
          <target state="translated">Функция вызывается с двумя аргументами.Первый аргумент-последовательные элементы в списке.Второй аргумент-аккумулятор.Функция должна вернуть новый аккумулятор,который используется при следующем вызове функции.</target>
        </trans-unit>
        <trans-unit id="de8a39fed4f5b52894d7b463343f490ef2f87adb" translate="yes" xml:space="preserve">
          <source>The function is equivalent to &lt;code&gt;&lt;a href=&quot;#crypto_init-4&quot;&gt;crypto_init(Cipher, Key, undefined, FlagOrOptions)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1d7045b7530f750d5c794463ab3ef61f6f0030e" translate="yes" xml:space="preserve">
          <source>The function is intended to be called in function &lt;code&gt;init_per_suite&lt;/code&gt; in the test suite.</source>
          <target state="translated">Функция предназначена для &lt;code&gt;init_per_suite&lt;/code&gt; в функции init_per_suite в наборе тестов.</target>
        </trans-unit>
        <trans-unit id="91d0a41107672655c3969ea037e3566edb95fc7c" translate="yes" xml:space="preserve">
          <source>The function is normally asynchronous in the sense that it does not invoke a memory check, but returns the latest available value. The one exception if is the function is called before a first memory check is finished, in which case it does not return a value until the memory check is finished.</source>
          <target state="translated">Обычно функция асинхронная в том смысле,что она не вызывает проверку памяти,а возвращает последнее доступное значение.Единственное исключение,если функция вызывается до завершения первой проверки памяти,в этом случае она не возвращает значение до завершения проверки памяти.</target>
        </trans-unit>
        <trans-unit id="34af02f93e44d91dfb2270e53d1db1bc513f0b80" translate="yes" xml:space="preserve">
          <source>The function is optional and can be omitted when implementing an application callback module.</source>
          <target state="translated">Функция является необязательной и может быть опущена при реализации модуля обратного вызова приложения.</target>
        </trans-unit>
        <trans-unit id="982df6f9c963401aaf5cd8cce719f4c21d1397c5" translate="yes" xml:space="preserve">
          <source>The function is optional. If it is not defined, the processes are terminated and then &lt;code&gt;Module:stop(State)&lt;/code&gt; is called.</source>
          <target state="translated">Функция не является обязательной. Если он не определен, процессы завершаются, а затем вызывается &lt;code&gt;Module:stop(State)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d3c75677662ff31b49062b31fc1d308b57eded17" translate="yes" xml:space="preserve">
          <source>The function is synchronous and all the nodes, and all the system servers, are running when it returns a value.</source>
          <target state="translated">Функция синхронизирована,и все узлы,а также все системные серверы,запускаются,когда возвращается значение.</target>
        </trans-unit>
        <trans-unit id="4bd22d2a35c5c88266eecbb86f7699a4e9f4d949" translate="yes" xml:space="preserve">
          <source>The function is synchronous in the sense that it is known that all servers have received the message when the call returns. It is not possible to know that the servers have processed the message.</source>
          <target state="translated">Функция синхронизирована в том смысле,что известно,что все серверы получили сообщение при возврате вызова.Невозможно узнать,что серверы обработали сообщение.</target>
        </trans-unit>
        <trans-unit id="a3e80a528bd9ed8d253ab3a636d365b349c0df48" translate="yes" xml:space="preserve">
          <source>The function is to return &lt;code&gt;Status&lt;/code&gt;, a term that change the details of the current state of the event handler. Any term is allowed for &lt;code&gt;Status&lt;/code&gt;. The &lt;code&gt;gen_event&lt;/code&gt; module uses &lt;code&gt;Status&lt;/code&gt; as follows:</source>
          <target state="translated">Функция состоит в том, чтобы вернуть &lt;code&gt;Status&lt;/code&gt; - термин, который изменяет детали текущего состояния обработчика событий. Для &lt;code&gt;Status&lt;/code&gt; допускается любой термин . Модуль &lt;code&gt;gen_event&lt;/code&gt; использует &lt;code&gt;Status&lt;/code&gt; следующим образом:</target>
        </trans-unit>
        <trans-unit id="f5e6848577b63036dd2df41149bfea0f17b8cf85" translate="yes" xml:space="preserve">
          <source>The function is to return &lt;code&gt;Status&lt;/code&gt;, a term that changes the details of the current state and status of the &lt;code&gt;gen_server&lt;/code&gt; process. There are no restrictions on the form &lt;code&gt;Status&lt;/code&gt; can take, but for the &lt;code&gt;sys:get_status/1,2&lt;/code&gt; case (when &lt;code&gt;Opt&lt;/code&gt; is &lt;code&gt;normal&lt;/code&gt;), the recommended form for the &lt;code&gt;Status&lt;/code&gt; value is &lt;code&gt;[{data, [{&quot;State&quot;, Term}]}]&lt;/code&gt;, where &lt;code&gt;Term&lt;/code&gt; provides relevant details of the &lt;code&gt;gen_server&lt;/code&gt; state. Following this recommendation is not required, but it makes the callback module status consistent with the rest of the &lt;code&gt;sys:get_status/1,2&lt;/code&gt; return value.</source>
          <target state="translated">Функция состоит в том, чтобы вернуть &lt;code&gt;Status&lt;/code&gt; - термин, который изменяет детали текущего состояния и статуса процесса &lt;code&gt;gen_server&lt;/code&gt; . Там нет никаких ограничений по форме &lt;code&gt;Status&lt;/code&gt; может принять, но для &lt;code&gt;sys:get_status/1,2&lt;/code&gt; случая (когда &lt;code&gt;Opt&lt;/code&gt; является &lt;code&gt;normal&lt;/code&gt; ), рекомендованной формой для &lt;code&gt;Status&lt;/code&gt; значения является &lt;code&gt;[{data, [{&quot;State&quot;, Term}]}]&lt;/code&gt; , где &lt;code&gt;Term&lt;/code&gt; предоставляет соответствующие подробности о состоянии &lt;code&gt;gen_server&lt;/code&gt; . Следование этой рекомендации не требуется, но она делает статус модуля обратного вызова согласованным с остальной частью возвращаемого значения &lt;code&gt;sys:get_status/1,2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="22b229f5a7773458a1b22bbef3b9114da9d0467f" translate="yes" xml:space="preserve">
          <source>The function is to return &lt;code&gt;Status&lt;/code&gt;, a term that contains the appropriate details of the current state and status of the &lt;code&gt;gen_statem&lt;/code&gt;. There are no restrictions on the form &lt;code&gt;Status&lt;/code&gt; can take, but for the &lt;code&gt;&lt;a href=&quot;sys#get_status-1&quot;&gt;sys:get_status/1,2&lt;/a&gt;&lt;/code&gt; case (when &lt;code&gt;Opt&lt;/code&gt; is &lt;code&gt;normal&lt;/code&gt;), the recommended form for the &lt;code&gt;Status&lt;/code&gt; value is &lt;code&gt;[{data, [{&quot;State&quot;, Term}]}]&lt;/code&gt;, where &lt;code&gt;Term&lt;/code&gt; provides relevant details of the &lt;code&gt;gen_statem&lt;/code&gt; state. Following this recommendation is not required, but it makes the callback module status consistent with the rest of the &lt;code&gt;&lt;a href=&quot;sys#get_status-1&quot;&gt;sys:get_status/1,2&lt;/a&gt;&lt;/code&gt; return value.</source>
          <target state="translated">Функция должна возвращать &lt;code&gt;Status&lt;/code&gt; , термин, который содержит соответствующие детали текущего состояния и статуса &lt;code&gt;gen_statem&lt;/code&gt; . Там нет никаких ограничений по форме &lt;code&gt;Status&lt;/code&gt; может принять, но для &lt;code&gt;&lt;a href=&quot;sys#get_status-1&quot;&gt;sys:get_status/1,2&lt;/a&gt;&lt;/code&gt; случая (когда &lt;code&gt;Opt&lt;/code&gt; является &lt;code&gt;normal&lt;/code&gt; ), рекомендованной формой для &lt;code&gt;Status&lt;/code&gt; значения является &lt;code&gt;[{data, [{&quot;State&quot;, Term}]}]&lt;/code&gt; , где &lt;code&gt;Term&lt;/code&gt; предоставляет соответствующие детали состояния &lt;code&gt;gen_statem&lt;/code&gt; . Следование этой рекомендации не требуется, но она делает статус модуля обратного вызова согласованным с остальной частью возвращаемого значения &lt;code&gt;&lt;a href=&quot;sys#get_status-1&quot;&gt;sys:get_status/1,2&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2e735ad6e373adc70cb8848117759dd2a569193e" translate="yes" xml:space="preserve">
          <source>The function is to return &lt;code&gt;{ok,Pid,State}&lt;/code&gt;, where &lt;code&gt;Pid&lt;/code&gt; is the pid of the main process in the subsystem and &lt;code&gt;State&lt;/code&gt; is any term.</source>
          <target state="translated">Функция возвращает &lt;code&gt;{ok,Pid,State}&lt;/code&gt; , где &lt;code&gt;Pid&lt;/code&gt; - это идентификатор основного процесса в подсистеме, а &lt;code&gt;State&lt;/code&gt; - любой член.</target>
        </trans-unit>
        <trans-unit id="b33f514bbf6653a3186283c4cae20e76aa53b9a4" translate="yes" xml:space="preserve">
          <source>The function is to return &lt;code&gt;{ok,Pid}&lt;/code&gt; or &lt;code&gt;{ok,Pid,State}&lt;/code&gt;, where &lt;code&gt;Pid&lt;/code&gt; is the pid of the top supervisor and &lt;code&gt;State&lt;/code&gt; is any term. If omitted, &lt;code&gt;State&lt;/code&gt; defaults to &lt;code&gt;[]&lt;/code&gt;. If the application is stopped later, &lt;code&gt;State&lt;/code&gt; is passed to &lt;code&gt;Module:prep_stop/1&lt;/code&gt;.</source>
          <target state="translated">Функция состоит в том, чтобы вернуть &lt;code&gt;{ok,Pid}&lt;/code&gt; или &lt;code&gt;{ok,Pid,State}&lt;/code&gt; , где &lt;code&gt;Pid&lt;/code&gt; - это идентификатор главного супервизора, а &lt;code&gt;State&lt;/code&gt; - любой термин. Если опущено, &lt;code&gt;State&lt;/code&gt; по умолчанию &lt;code&gt;[]&lt;/code&gt; . Если приложение останавливается позже, &lt;code&gt;State&lt;/code&gt; передается &lt;code&gt;Module:prep_stop/1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="29043cd3dfeb40d4aadad45c2081e6be85789b31" translate="yes" xml:space="preserve">
          <source>The function is to return the updated internal state.</source>
          <target state="translated">Функция заключается в возвращении обновленного внутреннего состояния.</target>
        </trans-unit>
        <trans-unit id="0abf3dd01db775a71cf749a86135b99f1e7db1dc" translate="yes" xml:space="preserve">
          <source>The function looks in the &lt;code&gt;.appup&lt;/code&gt; file and tries to find a downgrade script from the current application version. High-level instructions are translated to low-level instructions. The instructions are sorted in the same manner as when generating a &lt;code&gt;relup&lt;/code&gt; file.</source>
          <target state="translated">Функция просматривает файл &lt;code&gt;.appup&lt;/code&gt; и пытается найти сценарий перехода на более раннюю версию текущей версии приложения. Инструкции высокого уровня переводятся в инструкции низкого уровня. Инструкции отсортированы таким же образом, как и при &lt;code&gt;relup&lt;/code&gt; файла повторной установки .</target>
        </trans-unit>
        <trans-unit id="ad728199fe8cc2addea2e4edf8ccc9c3d563c12d" translate="yes" xml:space="preserve">
          <source>The function looks in the &lt;code&gt;.appup&lt;/code&gt; file and tries to find a downgrade script to the previous version of the application using &lt;code&gt;&lt;a href=&quot;#downgrade_script-3&quot;&gt;downgrade_script/3&lt;/a&gt;&lt;/code&gt;. This script is evaluated using &lt;code&gt;&lt;a href=&quot;#eval_appup_script-4&quot;&gt;eval_appup_script/4&lt;/a&gt;&lt;/code&gt;, exactly in the same way as &lt;code&gt;&lt;a href=&quot;#install_release-1&quot;&gt;install_release/1,2&lt;/a&gt;&lt;/code&gt; does.</source>
          <target state="translated">Функция просматривает файл &lt;code&gt;.appup&lt;/code&gt; и пытается найти сценарий перехода на предыдущую версию приложения, используя &lt;code&gt;&lt;a href=&quot;#downgrade_script-3&quot;&gt;downgrade_script/3&lt;/a&gt;&lt;/code&gt; . Этот скрипт оценивается с помощью &lt;code&gt;&lt;a href=&quot;#eval_appup_script-4&quot;&gt;eval_appup_script/4&lt;/a&gt;&lt;/code&gt; точно так же, как &lt;code&gt;&lt;a href=&quot;#install_release-1&quot;&gt;install_release/1,2&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="043e22dee6e39d2801de5bf62c0f13acd1fb7f3e" translate="yes" xml:space="preserve">
          <source>The function looks in the &lt;code&gt;.appup&lt;/code&gt; file and tries to find an upgrade script from the current application version. High-level instructions are translated to low-level instructions. The instructions are sorted in the same manner as when generating a &lt;code&gt;relup&lt;/code&gt; file.</source>
          <target state="translated">Функция просматривает файл &lt;code&gt;.appup&lt;/code&gt; и пытается найти сценарий обновления в текущей версии приложения. Инструкции высокого уровня переводятся в инструкции низкого уровня. Инструкции отсортированы таким же образом, как и при &lt;code&gt;relup&lt;/code&gt; файла повторной установки .</target>
        </trans-unit>
        <trans-unit id="8c31fe3b9fb91cec2a465fbf77df750e586faa18" translate="yes" xml:space="preserve">
          <source>The function looks in the &lt;code&gt;.appup&lt;/code&gt; file and tries to find an upgrade script from the current version of the application using &lt;code&gt;&lt;a href=&quot;#upgrade_script-2&quot;&gt;upgrade_script/2&lt;/a&gt;&lt;/code&gt;. This script is evaluated using &lt;code&gt;&lt;a href=&quot;#eval_appup_script-4&quot;&gt;eval_appup_script/4&lt;/a&gt;&lt;/code&gt;, exactly in the same way as &lt;code&gt;&lt;a href=&quot;#install_release-1&quot;&gt;install_release/1,2&lt;/a&gt;&lt;/code&gt; does.</source>
          <target state="translated">Функция просматривает файл &lt;code&gt;.appup&lt;/code&gt; и пытается найти сценарий обновления из текущей версии приложения, используя &lt;code&gt;&lt;a href=&quot;#upgrade_script-2&quot;&gt;upgrade_script/2&lt;/a&gt;&lt;/code&gt; . Этот скрипт оценивается с помощью &lt;code&gt;&lt;a href=&quot;#eval_appup_script-4&quot;&gt;eval_appup_script/4&lt;/a&gt;&lt;/code&gt; точно так же, как &lt;code&gt;&lt;a href=&quot;#install_release-1&quot;&gt;install_release/1,2&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dae77798ddae832b867b1859c814067bb73455e5" translate="yes" xml:space="preserve">
          <source>The function megaco:connect/4 is used to tell the Megaco application about which control process it should supervise, which MID the remote user has, which callback module it should use to send messages etc. When this &quot;virtual&quot; connection is established the user may use megaco:call/3 and megaco:cast/3 in order to send messages to the other side. Then it is up to the MG to send its first Service Change Request message after applying some clever algorithm in order to fight the problem with startup avalanche (as discussed in the RFC).</source>
          <target state="translated">Функция megaco:connect/4 используется для того,чтобы сообщить приложению Megaco о том,какой процесс управления он должен контролировать,какой MID имеет удаленный пользователь,какой модуль обратного вызова он должен использовать для отправки сообщений и т.д.Когда это &quot;виртуальное&quot; соединение установлено,пользователь может использовать megaco:call/3 и megaco:cast/3 для отправки сообщений на другую сторону.Тогда MG должен отправить свое первое сообщение с запросом на изменение сервиса после применения какого-то умного алгоритма для борьбы с лавиной стартапов (как обсуждается в RFC).</target>
        </trans-unit>
        <trans-unit id="8ccc872bcbfbd97b2f8f68cc4d29e1cdf3b26f8a" translate="yes" xml:space="preserve">
          <source>The function must return &lt;code&gt;ok&lt;/code&gt; if the module is to become the new current code for the module and become callable.</source>
          <target state="translated">Функция должна возвращать &lt;code&gt;ok&lt;/code&gt; , если модуль должен стать новым текущим кодом для модуля и стать вызываемым.</target>
        </trans-unit>
        <trans-unit id="cd0b359eea39bf0334c200db138df73b605bda4d" translate="yes" xml:space="preserve">
          <source>The function name is an atom. Each argument is a pattern.</source>
          <target state="translated">Имя функции-атом.Каждый аргумент является образцом.</target>
        </trans-unit>
        <trans-unit id="9406ba0cad4fe7e53495b5806fdfd8af528e2c11" translate="yes" xml:space="preserve">
          <source>The function names &lt;code&gt;load_driver&lt;/code&gt; and &lt;code&gt;unload_driver&lt;/code&gt; are kept for backward compatibility.</source>
          <target state="translated">Имена функций &lt;code&gt;load_driver&lt;/code&gt; и &lt;code&gt;unload_driver&lt;/code&gt; сохранены для обратной совместимости.</target>
        </trans-unit>
        <trans-unit id="79180ba05daadaf9ff778778be432cdae4488b2e" translate="yes" xml:space="preserve">
          <source>The function notifying the code lock about a button event is implemented using &lt;code&gt;gen_statem:cast/2&lt;/code&gt;:</source>
          <target state="translated">Функция уведомления кодовой блокировки о событии кнопки реализована с помощью &lt;code&gt;gen_statem:cast/2&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="9bcdf8490fa58034ee65eebf4713860825158535" translate="yes" xml:space="preserve">
          <source>The function print_version_info/0 uses the result of function version1/0 as &lt;code&gt;VersionInfo&lt;/code&gt;.</source>
          <target state="translated">Функция print_version_info / 0 использует результат функции version1 / 0 как &lt;code&gt;VersionInfo&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d4a4124fa895f394038737b2a3c8f1d3ab62f5b7" translate="yes" xml:space="preserve">
          <source>The function produces lines of &lt;code&gt;Key: Value&lt;/code&gt; from key-value lists. Strings are printed with &lt;code&gt;~ts&lt;/code&gt; and other terms with &lt;code&gt;~tp&lt;/code&gt;.</source>
          <target state="translated">Функция создает строки &lt;code&gt;Key: Value&lt;/code&gt; из списков ключей и значений. Строки печатаются с &lt;code&gt;~ts&lt;/code&gt; а другие термины с &lt;code&gt;~tp&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9cb60460defa522f2257f4190da9c81a7ebadbf4" translate="yes" xml:space="preserve">
          <source>The function prototype of a resource destructor function.</source>
          <target state="translated">Прототип функции деструктора ресурсов.</target>
        </trans-unit>
        <trans-unit id="e640ff27ceffaa7aa30ce884e4779de12c7a6bcc" translate="yes" xml:space="preserve">
          <source>The function prototype of a resource down function, called on the behalf of &lt;code&gt;&lt;a href=&quot;#enif_monitor_process&quot;&gt; enif_monitor_process&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;obj&lt;/code&gt; is the resource, &lt;code&gt;pid&lt;/code&gt; is the identity of the monitored process that is exiting, and &lt;code&gt;mon&lt;/code&gt; is the identity of the monitor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="251a711b61dad3eb243d0cc657f90de99a8cb62d" translate="yes" xml:space="preserve">
          <source>The function prototype of a resource down function, called on the behalf of &lt;code&gt;&lt;a href=&quot;#enif_monitor_process&quot;&gt;enif_monitor_process&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;obj&lt;/code&gt; is the resource, &lt;code&gt;pid&lt;/code&gt; is the identity of the monitored process that is exiting, and &lt;code&gt;mon&lt;/code&gt; is the identity of the monitor.</source>
          <target state="translated">Прототип функции функции отключения ресурса, вызываемой от имени &lt;code&gt;&lt;a href=&quot;#enif_monitor_process&quot;&gt;enif_monitor_process&lt;/a&gt;&lt;/code&gt; . &lt;code&gt;obj&lt;/code&gt; - это ресурс, &lt;code&gt;pid&lt;/code&gt; - это идентификатор контролируемого процесса, который завершается, а &lt;code&gt;mon&lt;/code&gt; - идентификатор монитора.</target>
        </trans-unit>
        <trans-unit id="8c03be216975d81bfe2ad5fc4388456380863a94" translate="yes" xml:space="preserve">
          <source>The function prototype of a resource stop function, called on the behalf of &lt;code&gt;&lt;a href=&quot;#enif_select&quot;&gt; enif_select&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;obj&lt;/code&gt; is the resource, &lt;code&gt;event&lt;/code&gt; is OS event, &lt;code&gt;is_direct_call&lt;/code&gt; is true if the call is made directly from &lt;code&gt;enif_select&lt;/code&gt; or false if it is a scheduled call (potentially from another thread).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c45bd32e6496942fbb5d72602a01f8593df7f20d" translate="yes" xml:space="preserve">
          <source>The function prototype of a resource stop function, called on the behalf of &lt;code&gt;&lt;a href=&quot;#enif_select&quot;&gt;enif_select&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;obj&lt;/code&gt; is the resource, &lt;code&gt;event&lt;/code&gt; is OS event, &lt;code&gt;is_direct_call&lt;/code&gt; is true if the call is made directly from &lt;code&gt;enif_select&lt;/code&gt; or false if it is a scheduled call (potentially from another thread).</source>
          <target state="translated">Прототип функции остановки ресурса, вызываемой от имени &lt;code&gt;&lt;a href=&quot;#enif_select&quot;&gt;enif_select&lt;/a&gt;&lt;/code&gt; . &lt;code&gt;obj&lt;/code&gt; - это ресурс, &lt;code&gt;event&lt;/code&gt; - это событие ОС, &lt;code&gt;is_direct_call&lt;/code&gt; - истина, если вызов сделан непосредственно из &lt;code&gt;enif_select&lt;/code&gt; , или ложь, если это запланированный вызов (возможно, из другого потока).</target>
        </trans-unit>
        <trans-unit id="1a542d8fe620d3418f5d464c1378f2333ef053e8" translate="yes" xml:space="preserve">
          <source>The function raises a &lt;code&gt;error:badarg&lt;/code&gt; if the parameter is in wrong format. It may also raise the exception &lt;code&gt;error:notsup&lt;/code&gt; in case there is no engine support in the underlying OpenSSL implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fcf70416fe3769e7b0289554175c5f55debdb16" translate="yes" xml:space="preserve">
          <source>The function raises a &lt;code&gt;error:badarg&lt;/code&gt; if the parameters are in wrong format. It may also raise the exception &lt;code&gt;error:notsup&lt;/code&gt; in case there is no engine support in the underlying OpenSSL implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48037bd5e6edfdffb2f1110aafc54b00f51f984c" translate="yes" xml:space="preserve">
          <source>The function randomly selects one of the pids for registration and kills the other one.</source>
          <target state="translated">Функция случайным образом выбирает одного из детей для регистрации и убивает другого.</target>
        </trans-unit>
        <trans-unit id="305e01bbc8fe93b497a733f359ad553dd0edafee" translate="yes" xml:space="preserve">
          <source>The function randomly selects one of the pids for registration, and sends the message &lt;code&gt;{global_name_conflict, Name}&lt;/code&gt; to the other pid.</source>
          <target state="translated">Функция случайным образом выбирает один из pid для регистрации и отправляет сообщение &lt;code&gt;{global_name_conflict, Name}&lt;/code&gt; другому pid.</target>
        </trans-unit>
        <trans-unit id="8abbebafab7e64fd67ec141e6747533671416e1f" translate="yes" xml:space="preserve">
          <source>The function removes the &lt;code&gt;Key&lt;/code&gt;, if it exists, and its associated value from &lt;code&gt;Map1&lt;/code&gt; and returns a tuple with the removed &lt;code&gt;Value&lt;/code&gt; and the new map &lt;code&gt;Map2&lt;/code&gt; without key &lt;code&gt;Key&lt;/code&gt;. If the key does not exist &lt;code&gt;error&lt;/code&gt; is returned.</source>
          <target state="translated">Функция удаляет &lt;code&gt;Key&lt;/code&gt; , если он существует, и связанное с ним значение из &lt;code&gt;Map1&lt;/code&gt; и возвращает кортеж с удаленным &lt;code&gt;Value&lt;/code&gt; и новую карту &lt;code&gt;Map2&lt;/code&gt; без ключа &lt;code&gt;Key&lt;/code&gt; . Если ключ не существует, возвращается &lt;code&gt;error&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e238717dba0649170fc233d2b4fe4554b94fb51d" translate="yes" xml:space="preserve">
          <source>The function reports &lt;code&gt;{error, {AppName,Reason}}&lt;/code&gt; for errors, where &lt;code&gt;Reason&lt;/code&gt; is any possible reason returned by &lt;code&gt;&lt;a href=&quot;#start-1&quot;&gt;start/1,2&lt;/a&gt;&lt;/code&gt; when starting a specific dependency.</source>
          <target state="translated">Функция сообщает &lt;code&gt;{error, {AppName,Reason}}&lt;/code&gt; , где &lt;code&gt;Reason&lt;/code&gt; - это любая возможная причина, возвращаемая &lt;code&gt;&lt;a href=&quot;#start-1&quot;&gt;start/1,2&lt;/a&gt;&lt;/code&gt; при запуске определенной зависимости.</target>
        </trans-unit>
        <trans-unit id="76d19e4d2aef11065f3b75825b4b1412100e2c14" translate="yes" xml:space="preserve">
          <source>The function returns &lt;code&gt;&amp;lt;&amp;lt;&amp;gt;&amp;gt;&lt;/code&gt; for &lt;code&gt;latin1&lt;/code&gt; encoding, as there is no BOM for ISO Latin-1.</source>
          <target state="translated">Функция возвращает &lt;code&gt;&amp;lt;&amp;lt;&amp;gt;&amp;gt;&lt;/code&gt; для кодировки &lt;code&gt;latin1&lt;/code&gt; , поскольку для ISO Latin-1 нет спецификации.</target>
        </trans-unit>
        <trans-unit id="cea6a4ed4ab166dce1a5c11aa39053c9e188fc54" translate="yes" xml:space="preserve">
          <source>The function returns &lt;code&gt;1&lt;/code&gt; on successful decoding, &lt;code&gt;-1&lt;/code&gt; on error, and &lt;code&gt;0&lt;/code&gt; if the term seems alright, but does not fit in the &lt;code&gt;term&lt;/code&gt; structure. If &lt;code&gt;1&lt;/code&gt; is returned, the &lt;code&gt;index&lt;/code&gt; is incremented, and &lt;code&gt;term&lt;/code&gt; contains the decoded term.</source>
          <target state="translated">Функция возвращает &lt;code&gt;1&lt;/code&gt; при успешном декодировании, &lt;code&gt;-1&lt;/code&gt; при ошибке и &lt;code&gt;0&lt;/code&gt; , если термин кажется правильным, но не вписывается в структуру &lt;code&gt;term&lt;/code&gt; . Если возвращается &lt;code&gt;1&lt;/code&gt; , &lt;code&gt;index&lt;/code&gt; увеличивается, и &lt;code&gt;term&lt;/code&gt; содержит декодированный термин.</target>
        </trans-unit>
        <trans-unit id="0c0efff847bddce6b19a713a0f0517e02e510df4" translate="yes" xml:space="preserve">
          <source>The function returns &lt;code&gt;ok&lt;/code&gt; if the event manager terminates with the expected reason. Any other reason than &lt;code&gt;normal&lt;/code&gt;, &lt;code&gt;shutdown&lt;/code&gt;, or &lt;code&gt;{shutdown,Term}&lt;/code&gt; causes an error report to be issued using &lt;code&gt;logger(3)&lt;/code&gt;. The default &lt;code&gt;Reason&lt;/code&gt; is &lt;code&gt;normal&lt;/code&gt;.</source>
          <target state="translated">Функция возвращает &lt;code&gt;ok&lt;/code&gt; если диспетчер событий завершает работу по ожидаемой причине. Любая причина , &lt;code&gt;shutdown&lt;/code&gt; от &lt;code&gt;normal&lt;/code&gt; , выключения или &lt;code&gt;{shutdown,Term}&lt;/code&gt; вызывает выдачу отчета об ошибке с помощью &lt;code&gt;logger(3)&lt;/code&gt; . По умолчанию &lt;code&gt;Reason&lt;/code&gt; это &lt;code&gt;normal&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9c7b3421431470de3120253d455529b919367ac1" translate="yes" xml:space="preserve">
          <source>The function returns &lt;code&gt;ok&lt;/code&gt; if the server terminates with the expected reason. Any other reason than &lt;code&gt;normal&lt;/code&gt;, &lt;code&gt;shutdown&lt;/code&gt;, or &lt;code&gt;{shutdown,Term}&lt;/code&gt; causes an error report to be issued using &lt;code&gt;logger(3)&lt;/code&gt;. The default &lt;code&gt;Reason&lt;/code&gt; is &lt;code&gt;normal&lt;/code&gt;.</source>
          <target state="translated">Функция возвращает &lt;code&gt;ok&lt;/code&gt; если сервер завершает работу по ожидаемой причине. Любая причина , &lt;code&gt;shutdown&lt;/code&gt; от &lt;code&gt;normal&lt;/code&gt; , выключения или &lt;code&gt;{shutdown,Term}&lt;/code&gt; вызывает выдачу отчета об ошибке с помощью &lt;code&gt;logger(3)&lt;/code&gt; . По умолчанию &lt;code&gt;Reason&lt;/code&gt; это &lt;code&gt;normal&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cd73f7ab11de774d64402ce75fdbcce6bc66eb53" translate="yes" xml:space="preserve">
          <source>The function returns &lt;code&gt;ok&lt;/code&gt; or an error tuple where the second element contains the I/O error that made the writing impossible.</source>
          <target state="translated">Функция возвращает &lt;code&gt;ok&lt;/code&gt; или кортеж ошибок, где второй элемент содержит ошибку ввода-вывода, которая сделала запись невозможной.</target>
        </trans-unit>
        <trans-unit id="9d8bcc68d7d1e1c02534b3299d71875a81aa57c0" translate="yes" xml:space="preserve">
          <source>The function returns &lt;code&gt;ok&lt;/code&gt;, or terminates if an error occurs. For example, the transaction terminates if no &lt;code&gt;person&lt;/code&gt; table exists.</source>
          <target state="translated">Функция возвращает &lt;code&gt;ok&lt;/code&gt; или завершает работу в случае ошибки. Например, транзакция завершается , если не &lt;code&gt;person&lt;/code&gt; таблицы не существует.</target>
        </trans-unit>
        <trans-unit id="ae9ce4bfa4732575d07ad75abe832d18209cf6d5" translate="yes" xml:space="preserve">
          <source>The function returns &lt;code&gt;profiling&lt;/code&gt; if tracing could be enabled for all processes in &lt;code&gt;Rootset&lt;/code&gt;, or &lt;code&gt;error&lt;/code&gt; otherwise.</source>
          <target state="translated">Функция возвращает &lt;code&gt;profiling&lt;/code&gt; если трассировка может быть включена для всех процессов в &lt;code&gt;Rootset&lt;/code&gt; , в противном случае - &lt;code&gt;error&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="82b7eb2d16fbf6159cd686bcbf5282210683decd" translate="yes" xml:space="preserve">
          <source>The function returns &lt;code&gt;true&lt;/code&gt; if all of the following apply:</source>
          <target state="translated">Функция возвращает &lt;code&gt;true&lt;/code&gt; если выполняются все следующие условия:</target>
        </trans-unit>
        <trans-unit id="ade0bfc225f1f56359228ebdf66a4c04b123ddc2" translate="yes" xml:space="preserve">
          <source>The function returns &lt;code&gt;yes&lt;/code&gt; if successful, &lt;code&gt;no&lt;/code&gt; if it fails. For example, &lt;code&gt;no&lt;/code&gt; is returned if an attempt is made to register an already registered process or to register a process with a name that is already in use.</source>
          <target state="translated">Функция возвращает &amp;laquo; &lt;code&gt;yes&lt;/code&gt; случае успеха и &amp;laquo; &lt;code&gt;no&lt;/code&gt; случае неудачи. Например, &lt;code&gt;no&lt;/code&gt; возвращается, если предпринимается попытка зарегистрировать уже зарегистрированный процесс или зарегистрировать процесс с именем, которое уже используется.</target>
        </trans-unit>
        <trans-unit id="00e48b1c0bb58c163a4b66da8eb059d14d44d0a7" translate="yes" xml:space="preserve">
          <source>The function returns &lt;code&gt;{Pos, Length}&lt;/code&gt; for the binary in &lt;code&gt;Pattern&lt;/code&gt;, starting at the lowest position in &lt;code&gt;Subject&lt;/code&gt;.</source>
          <target state="translated">Функция возвращает &lt;code&gt;{Pos, Length}&lt;/code&gt; для двоичного &lt;code&gt;Pattern&lt;/code&gt; в Pattern , начиная с самой низкой позиции в &lt;code&gt;Subject&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="51c7380f6ccd2c685f838a5778eff11acc171a3c" translate="yes" xml:space="preserve">
          <source>The function returns &lt;code&gt;{SourceFile, Options}&lt;/code&gt; if it succeeds. &lt;code&gt;SourceFile&lt;/code&gt; is the absolute path to the source file without extension &lt;code&gt;&quot;.erl&quot;&lt;/code&gt;. &lt;code&gt;Options&lt;/code&gt; includes the options that are necessary to recompile the file with &lt;code&gt;compile:file/2&lt;/code&gt;, but excludes options such as &lt;code&gt;report&lt;/code&gt; and &lt;code&gt;verbose&lt;/code&gt;, which do not change the way code is generated. The paths in options &lt;code&gt;{outdir, Path}&lt;/code&gt; and &lt;code&gt;{i, Path}&lt;/code&gt; are guaranteed to be absolute.</source>
          <target state="translated">В случае успеха функция возвращает &lt;code&gt;{SourceFile, Options}&lt;/code&gt; . &lt;code&gt;SourceFile&lt;/code&gt; - это абсолютный путь к исходному файлу без расширения &lt;code&gt;&quot;.erl&quot;&lt;/code&gt; . &lt;code&gt;Options&lt;/code&gt; включают параметры, необходимые для перекомпиляции файла с помощью &lt;code&gt;compile:file/2&lt;/code&gt; , но исключают такие параметры, как &lt;code&gt;report&lt;/code&gt; и &lt;code&gt;verbose&lt;/code&gt; отчет , которые не меняют способ создания кода. Пути в параметрах &lt;code&gt;{outdir, Path}&lt;/code&gt; и &lt;code&gt;{i, Path}&lt;/code&gt; гарантированно будут абсолютными.</target>
        </trans-unit>
        <trans-unit id="95f12585f0eeb736eca25c313b53ecf1f8719509" translate="yes" xml:space="preserve">
          <source>The function returns &lt;code&gt;{error,Reason}&lt;/code&gt; if the module cannot be interpreted. &lt;code&gt;Reason&lt;/code&gt; can have the following values:</source>
          <target state="translated">Функция возвращает &lt;code&gt;{error,Reason}&lt;/code&gt; , если модуль не может быть интерпретирован. &lt;code&gt;Reason&lt;/code&gt; может иметь следующие значения:</target>
        </trans-unit>
        <trans-unit id="327593fcc1fe364e7a22ff37db545a09532407de" translate="yes" xml:space="preserve">
          <source>The function returns &lt;code&gt;{error,eacces}&lt;/code&gt; if the directory is not readable or &lt;code&gt;{error,enoent}&lt;/code&gt; if the directory does not exist.</source>
          <target state="translated">Функция возвращает &lt;code&gt;{error,eacces}&lt;/code&gt; , если каталог не читается, или &lt;code&gt;{error,enoent}&lt;/code&gt; , если каталог не существует.</target>
        </trans-unit>
        <trans-unit id="9a6679cb30215fd3bbce3430d53f63d245192cc6" translate="yes" xml:space="preserve">
          <source>The function returns &lt;code&gt;{ok, Node}&lt;/code&gt;, where &lt;code&gt;Node&lt;/code&gt; is the name of the new node, otherwise &lt;code&gt;{error, Reason}&lt;/code&gt;, where &lt;code&gt;Reason&lt;/code&gt; can be one of:</source>
          <target state="translated">Функция возвращает &lt;code&gt;{ok, Node}&lt;/code&gt; , где &lt;code&gt;Node&lt;/code&gt; - это имя нового узла, иначе &lt;code&gt;{error, Reason}&lt;/code&gt; , где &lt;code&gt;Reason&lt;/code&gt; может быть одним из:</target>
        </trans-unit>
        <trans-unit id="926a41dded8f50f5bd40efe538f9bd8d662e5429" translate="yes" xml:space="preserve">
          <source>The function returns a list with one element for each matching object, where each element is an ordered list of pattern variable bindings, for example:</source>
          <target state="translated">Функция возвращает список с одним элементом для каждого совпадающего объекта,где каждый элемент является,например,упорядоченным списком привязки переменных деталей:</target>
        </trans-unit>
        <trans-unit id="c01260885c607c47bbd11e7381cdc0b60fb8c504" translate="yes" xml:space="preserve">
          <source>The function returns a map with each info item as a key-value binding. It reflects the &quot;current&quot; state of the socket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef467049df8eebfb47a732dfe257b75164507468" translate="yes" xml:space="preserve">
          <source>The function returns a new list.</source>
          <target state="translated">Функция возвращает новый список.</target>
        </trans-unit>
        <trans-unit id="8e921d3a34acd22129663174bed5a4222ddb5120" translate="yes" xml:space="preserve">
          <source>The function returns a tuple &lt;code&gt;{Replies,BadNodes}&lt;/code&gt;, where &lt;code&gt;Replies&lt;/code&gt; is a list of &lt;code&gt;{Node,Reply}&lt;/code&gt; and &lt;code&gt;BadNodes&lt;/code&gt; is a list of node that either did not exist, or where the &lt;code&gt;gen_server&lt;/code&gt;&lt;code&gt;Name&lt;/code&gt; did not exist or did not reply.</source>
          <target state="translated">Функция возвращает кортеж &lt;code&gt;{Replies,BadNodes}&lt;/code&gt; , где &lt;code&gt;Replies&lt;/code&gt; - это список &lt;code&gt;{Node,Reply}&lt;/code&gt; , а &lt;code&gt;BadNodes&lt;/code&gt; - это список узлов, которые либо не существуют, либо для которых &lt;code&gt;gen_server&lt;/code&gt; &lt;code&gt;Name&lt;/code&gt; не существует или не ответил.</target>
        </trans-unit>
        <trans-unit id="b1e8d384f3de9f24fc9976775486188b88a64ca7" translate="yes" xml:space="preserve">
          <source>The function returns according to the specification of an instrumentation function.</source>
          <target state="translated">Функция возвращается в соответствии со спецификацией функции КИП.</target>
        </trans-unit>
        <trans-unit id="ba15e145974c7c4548255818d03130da786830bb" translate="yes" xml:space="preserve">
          <source>The function returns an Erlang term, or &lt;code&gt;NULL&lt;/code&gt; if &lt;code&gt;FormatStr&lt;/code&gt; does not describe a valid Erlang term.</source>
          <target state="translated">Функция возвращает термин Erlang или &lt;code&gt;NULL&lt;/code&gt; , если &lt;code&gt;FormatStr&lt;/code&gt; не описывает допустимый термин Erlang.</target>
        </trans-unit>
        <trans-unit id="20d4b4c1eb81a80672dfa3e1318640bf99f38f85" translate="yes" xml:space="preserve">
          <source>The function returns an error if the &lt;code&gt;gen_server&lt;/code&gt; dies before or during this request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae52a90d30017820af1ffe0ce8677dcbf3b9b5b1" translate="yes" xml:space="preserve">
          <source>The function returns an error if the &lt;code&gt;gen_statem&lt;/code&gt; dies before or during this function call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11a81e87db2b38c5cec76146c753586ae76e4c9f" translate="yes" xml:space="preserve">
          <source>The function returns an error if the &lt;code&gt;gen_statem&lt;/code&gt; dies before or during this request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84b04ee2da4370d4c96804f7728600a7d4958614" translate="yes" xml:space="preserve">
          <source>The function returns either an error tuple or a tuple &lt;code&gt;{ok, List}&lt;/code&gt;. The &lt;code&gt;List&lt;/code&gt; consists of specifications of how many functions that matched, in the same way as the processes and ports are presented in the return value of &lt;code&gt;&lt;a href=&quot;#p-2&quot;&gt;p/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Функция возвращает либо кортеж с ошибкой, либо кортеж &lt;code&gt;{ok, List}&lt;/code&gt; . &lt;code&gt;List&lt;/code&gt; состоит из спецификаций , как много функций , которые соответствуют таким же образом , как и процессам и порты представлены в возвращаемом значении &lt;code&gt;&lt;a href=&quot;#p-2&quot;&gt;p/2&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d21dcef371a5ecd35b72bec7696fdaf8da45b8eb" translate="yes" xml:space="preserve">
          <source>The function returns either an error tuple or a tuple &lt;code&gt;{ok, List}&lt;/code&gt;. The &lt;code&gt;List&lt;/code&gt; consists of specifications of how many processes and ports that matched (in the case of a pure pid() exactly 1). The specification of matched processes is &lt;code&gt;{matched, Node, N}&lt;/code&gt;. If the remote processor call, &lt;code&gt;rpc&lt;/code&gt;, to a remote node fails, the &lt;code&gt;rpc&lt;/code&gt; error message is delivered as a fourth argument and the number of matched processes are 0. Note that the result {ok, List} may contain a list where &lt;code&gt;rpc&lt;/code&gt; calls to one, several or even all nodes failed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dff9f8ac1b740a28f21f75b322ee576a5c1a3db8" translate="yes" xml:space="preserve">
          <source>The function returns either an error tuple or a tuple &lt;code&gt;{ok, List}&lt;/code&gt;. The &lt;code&gt;List&lt;/code&gt; consists of specifications of how many processes and ports that matched (in the case of a pure pid() exactly 1). The specification of matched processes is &lt;code&gt;{matched, Node, N}&lt;/code&gt;. If the remote processor call,&lt;code&gt;rpc&lt;/code&gt;, to a remote node fails, the &lt;code&gt;rpc&lt;/code&gt; error message is delivered as a fourth argument and the number of matched processes are 0. Note that the result {ok, List} may contain a list where &lt;code&gt;rpc&lt;/code&gt; calls to one, several or even all nodes failed.</source>
          <target state="translated">Функция возвращает либо кортеж с ошибкой, либо кортеж &lt;code&gt;{ok, List}&lt;/code&gt; . &lt;code&gt;List&lt;/code&gt; состоит из спецификаций , сколько процессов и портов , которые соответствуют (в случае чистого (PID) , в точности 1). Спецификация согласованных процессов: &lt;code&gt;{matched, Node, N}&lt;/code&gt; . Если вызов удаленного процессора, &lt;code&gt;rpc&lt;/code&gt; , к удаленному узлу завершается неудачно, сообщение об ошибке &lt;code&gt;rpc&lt;/code&gt; доставляется в качестве четвертого аргумента, а количество согласованных процессов равно 0. Обратите внимание, что результат {ok, List} может содержать список, в котором &lt;code&gt;rpc&lt;/code&gt; обращается к отказал один, несколько или даже все узлы.</target>
        </trans-unit>
        <trans-unit id="47ce2b2bb012a9e9a4743dfb100ef52ab194f4a8" translate="yes" xml:space="preserve">
          <source>The function returns one of the following statuses upon success:</source>
          <target state="translated">При успешной работе функция возвращает один из следующих статусов:</target>
        </trans-unit>
        <trans-unit id="af80ca7f3d62f6cac6e62e9f90f2843e1b33444b" translate="yes" xml:space="preserve">
          <source>The function returns the answer &lt;code&gt;Reply&lt;/code&gt; as produced by the server &lt;code&gt;Name&lt;/code&gt;, or &lt;code&gt;{error, Reason}&lt;/code&gt;.</source>
          <target state="translated">Функция возвращает ответ &lt;code&gt;Reply&lt;/code&gt; в полученном от сервера &lt;code&gt;Name&lt;/code&gt; или &lt;code&gt;{error, Reason}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6fa69a661585fbc212f6bcd6110e5d9551001a6f" translate="yes" xml:space="preserve">
          <source>The function returns the list of file names of all created modules, including any automatically created stub modules. The file name of the target module is always first in the list.</source>
          <target state="translated">Функция возвращает список имен файлов всех созданных модулей,в том числе и автоматически созданных модулей заглушек.Имя файла целевого модуля всегда находится в списке первым.</target>
        </trans-unit>
        <trans-unit id="67e6d37d8f8ed9b75d952e7999fb2087c89daf86" translate="yes" xml:space="preserve">
          <source>The function returns the number of objects deleted from the table.</source>
          <target state="translated">Функция возвращает количество объектов,удаленных из таблицы.</target>
        </trans-unit>
        <trans-unit id="f97fd237860bed04d4fc7be045423bcf8705b592" translate="yes" xml:space="preserve">
          <source>The function returns the number of objects matched.</source>
          <target state="translated">Функция возвращает количество совпадающих объектов.</target>
        </trans-unit>
        <trans-unit id="c874ae6f3ce13ecf61704660eadd7378f687f995" translate="yes" xml:space="preserve">
          <source>The function returns the pid() of a handler process, that does the supervision on behalf of the client application. Note that the client application is linked to this handler.</source>
          <target state="translated">Функция возвращает pid()обработчика процесса,который осуществляет надзор от имени клиентского приложения.Обратите внимание,что клиентское приложение связано с данным обработчиком.</target>
        </trans-unit>
        <trans-unit id="8826e27f40bae39e6afc8b99ead67cefc85ed51f" translate="yes" xml:space="preserve">
          <source>The function returns the test result, represented by the tuple &lt;code&gt;{Ok,Failed,{UserSkipped,AutoSkipped}}&lt;/code&gt;, where each element is an integer. If test execution fails, the function returns the tuple &lt;code&gt;{error,Reason}&lt;/code&gt;, where the term &lt;code&gt;Reason&lt;/code&gt; explains the failure.</source>
          <target state="translated">Функция возвращает результат теста, представленный кортежем &lt;code&gt;{Ok,Failed,{UserSkipped,AutoSkipped}}&lt;/code&gt; , где каждый элемент является целым числом. Если выполнение теста завершается неудачно, функция возвращает кортеж &lt;code&gt;{error,Reason}&lt;/code&gt; , где термин &lt;code&gt;Reason&lt;/code&gt; объясняет сбой.</target>
        </trans-unit>
        <trans-unit id="66053340efa519d76743820bb26595016a5a05f7" translate="yes" xml:space="preserve">
          <source>The function returns the total number of replaced objects.</source>
          <target state="translated">Функция возвращает общее количество замененных объектов.</target>
        </trans-unit>
        <trans-unit id="13b54d91784d634be011a5d8f40eca029f4c1437" translate="yes" xml:space="preserve">
          <source>The function returns when the reply arrives, when the request timer eventually times out or when the outstanding requests are explicitly cancelled.</source>
          <target state="translated">Функция возвращается,когда приходит ответ,когда таймер запроса в конечном итоге таймаут или когда невыполненные запросы явно отменяются.</target>
        </trans-unit>
        <trans-unit id="0e911cfd5f3fbfe1f052ffaa063943cb8b0fe46c" translate="yes" xml:space="preserve">
          <source>The function returns:</source>
          <target state="translated">Функция возвращается:</target>
        </trans-unit>
        <trans-unit id="9be9148ebe8c1af83ecb810b37aa82c15bf5d001" translate="yes" xml:space="preserve">
          <source>The function should now return:</source>
          <target state="translated">Теперь функция должна вернуться:</target>
        </trans-unit>
        <trans-unit id="89ceb7fdfb37fece3ab74b229b8cea9443cca0bd" translate="yes" xml:space="preserve">
          <source>The function throws a &lt;code&gt;badarg&lt;/code&gt; exception if the driver is not present in the system or if the tag is not supported.</source>
          <target state="translated">Функция &lt;code&gt;badarg&lt;/code&gt; исключение badarg, если драйвер отсутствует в системе или если тег не поддерживается.</target>
        </trans-unit>
        <trans-unit id="95ce52efa32ec5a1e922545d8dfcff54dd9fa145" translate="yes" xml:space="preserve">
          <source>The function throws a &lt;code&gt;badarg&lt;/code&gt; exception if the driver is not present in the system.</source>
          <target state="translated">Функция &lt;code&gt;badarg&lt;/code&gt; исключение badarg, если драйвер отсутствует в системе.</target>
        </trans-unit>
        <trans-unit id="e2803735d718719dbf8ff59057508925d737d41f" translate="yes" xml:space="preserve">
          <source>The function throws a &lt;code&gt;badarg&lt;/code&gt; exception if the parameter is not a &lt;code&gt;reference()&lt;/code&gt;.</source>
          <target state="translated">Функция выдает исключение &lt;code&gt;badarg&lt;/code&gt; , если параметр не является &lt;code&gt;reference()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="66d20dcf7ad9c489aba044486ad7cfb8ef93a242" translate="yes" xml:space="preserve">
          <source>The function throws a &lt;code&gt;badarg&lt;/code&gt; exception if the parameters are not specified as described here.</source>
          <target state="translated">Функция &lt;code&gt;badarg&lt;/code&gt; исключение badarg, если параметры не указаны, как описано здесь.</target>
        </trans-unit>
        <trans-unit id="5d9e44a0ad0773f97c4f379d41e06e651c358097" translate="yes" xml:space="preserve">
          <source>The function throws a badarg if the parameter is in wrong format. It may also throw the exception notsup in case there is no engine support in the underlying OpenSSL implementation.</source>
          <target state="translated">Функция выбрасывает badarg,если параметр находится в неправильном формате.Она также может сбрасывать ноты исключений в случае отсутствия поддержки движка в базовой реализации OpenSSL.</target>
        </trans-unit>
        <trans-unit id="eda733b256a520d564c901fe8c2c263fe4e56cd1" translate="yes" xml:space="preserve">
          <source>The function throws a badarg if the parameters are in wrong format. It may also throw the exception notsup in case there is no engine support in the underlying OpenSSL implementation.</source>
          <target state="translated">Функция выбрасывает badarg,если параметры находятся в неправильном формате.Она также может сбрасывать ноты исключений в случае отсутствия поддержки движка в базовой реализации OpenSSL.</target>
        </trans-unit>
        <trans-unit id="31c1041afe84cb2dbdbb948e8208c9f84bf59ebd" translate="yes" xml:space="preserve">
          <source>The function unregisters both pids and sends the message &lt;code&gt;{global_name_conflict, Name, OtherPid}&lt;/code&gt; to both processes.</source>
          <target state="translated">Функция отменяет регистрацию обоих pid и отправляет сообщение &lt;code&gt;{global_name_conflict, Name, OtherPid}&lt;/code&gt; обоим процессам.</target>
        </trans-unit>
        <trans-unit id="c3a1f79b06aa96385eb181ed86fb6eae9b5e9415" translate="yes" xml:space="preserve">
          <source>The function waits for user input, and does not return until the remote shell is ended (that is, exit from the shell).</source>
          <target state="translated">Функция ждет пользовательского ввода и не возвращается до тех пор,пока не завершится работа удаленной оболочки (то есть выход из оболочки).</target>
        </trans-unit>
        <trans-unit id="b8892ca0441d17488cdcc2015a61701f971adb9a" translate="yes" xml:space="preserve">
          <source>The function will also return an error if the node &lt;code&gt;Nodename&lt;/code&gt; is not reachable.</source>
          <target state="translated">Функция также вернет ошибку, если узел &lt;code&gt;Nodename&lt;/code&gt; недоступен.</target>
        </trans-unit>
        <trans-unit id="fe48f3115cf0be1263ce3632f413691699d232ac" translate="yes" xml:space="preserve">
          <source>The function will also return the &lt;code&gt;Name&lt;/code&gt; instead of the table identifier. To get the table identifier of a named table, use &lt;code&gt;&lt;a href=&quot;#whereis-1&quot;&gt;whereis/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Функция также вернет &lt;code&gt;Name&lt;/code&gt; вместо идентификатора таблицы. Чтобы получить идентификатор именованной таблицы, используйте &lt;code&gt;&lt;a href=&quot;#whereis-1&quot;&gt;whereis/1&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bc605a27b48f7b91fedc8d92d1b0ced2f10b5eee" translate="yes" xml:space="preserve">
          <source>The function will return an error, either due to I/O problems (like a non existing or non readable file) or due to file format problems. The errors from a bad format file are in a more or less textual format, which will give a hint to what's causing the problem.</source>
          <target state="translated">Функция вернет ошибку либо из-за проблем с вводом/выводом (например,несуществующий или нечитаемый файл),либо из-за проблем с форматом файла.Ошибки из файла плохого формата находятся в более или менее текстовом формате,что даст подсказку,что является причиной проблемы.</target>
        </trans-unit>
        <trans-unit id="1192b2e61e715c06fc73aea33efb68d8d4e10a72" translate="yes" xml:space="preserve">
          <source>The function will throw an exception if the &lt;code&gt;dyntrace&lt;/code&gt; NIF library could not be loaded by the on_load function of this module.</source>
          <target state="translated">Функция вызовет исключение, если библиотека &lt;code&gt;dyntrace&lt;/code&gt; NIF не может быть загружена функцией on_load этого модуля.</target>
        </trans-unit>
        <trans-unit id="877225bff459640b7fb2492bce96b16257fca8af" translate="yes" xml:space="preserve">
          <source>The function works as &lt;code&gt;ei_reg_send&lt;/code&gt; with one exception. Instead of taking &lt;code&gt;ei_cnode&lt;/code&gt; as first argument, it takes a second argument, an &lt;code&gt;erlang_pid&lt;/code&gt;, which is to be the process identifier of the sending process (in the Erlang distribution protocol).</source>
          <target state="translated">Функция работает как &lt;code&gt;ei_reg_send&lt;/code&gt; с одним исключением. Вместо того, чтобы использовать &lt;code&gt;ei_cnode&lt;/code&gt; в качестве первого аргумента, он принимает второй аргумент, &lt;code&gt;erlang_pid&lt;/code&gt; , который должен быть идентификатором процесса отправляющего процесса (в протоколе распространения Erlang).</target>
        </trans-unit>
        <trans-unit id="96c1202d0cd6c2fd8c2454e3ec64b0d84b6bd072" translate="yes" xml:space="preserve">
          <source>The functionality described in EEP10 was implemented in Erlang/OTP R13A.</source>
          <target state="translated">Функциональность,описанная в EEP10,была реализована в Erlang/OTP R13A.</target>
        </trans-unit>
        <trans-unit id="f4c5930ab45c4ff48e920b1f1f0e771ba10a38ad" translate="yes" xml:space="preserve">
          <source>The functionality of &lt;code&gt;server&lt;/code&gt; can be extended without having to change &lt;code&gt;ch2&lt;/code&gt; or any other callback module.</source>
          <target state="translated">Функциональность &lt;code&gt;server&lt;/code&gt; может быть расширена без изменения &lt;code&gt;ch2&lt;/code&gt; или любого другого модуля обратного вызова.</target>
        </trans-unit>
        <trans-unit id="48f14231d4eef3bc5aa0ed1eace23a7c88ba429a" translate="yes" xml:space="preserve">
          <source>The functions &lt;code&gt;&lt;a href=&quot;crypto#crypto_init-4&quot;&gt;crypto_init/4&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;crypto#crypto_update-2&quot;&gt;crypto_update/2&lt;/a&gt;&lt;/code&gt; are intended to be used for encrypting or decrypting a sequence of blocks. First one call of &lt;code&gt;crypto_init/4&lt;/code&gt; initialises the crypto context. One or more calls &lt;code&gt;crypto_update/2&lt;/code&gt; does the actual encryption or decryption for each block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42a7b913d2b289987ee5e2464734af014db9f20b" translate="yes" xml:space="preserve">
          <source>The functions &lt;code&gt;&lt;a href=&quot;ct#set_verbosity-2&quot;&gt;ct:set_verbosity/2&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;ct#get_verbosity-1&quot;&gt;ct:get_verbosity/1&lt;/a&gt;&lt;/code&gt; may be used to modify and read verbosity levels during test execution.</source>
          <target state="translated">Функции &lt;code&gt;&lt;a href=&quot;ct#set_verbosity-2&quot;&gt;ct:set_verbosity/2&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;ct#get_verbosity-1&quot;&gt;ct:get_verbosity/1&lt;/a&gt;&lt;/code&gt; могут использоваться для изменения и чтения уровней детализации во время выполнения теста.</target>
        </trans-unit>
        <trans-unit id="1225e34207e05c6490636b16c61c626ac7fd8103" translate="yes" xml:space="preserve">
          <source>The functions &lt;code&gt;&lt;a href=&quot;erl_parse#anno_from_term-1&quot;&gt; anno_from_term()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;erl_parse#anno_to_term-1&quot;&gt; anno_to_term()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;erl_parse#fold_anno-3&quot;&gt;fold_anno()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;erl_parse#map_anno-2&quot;&gt;map_anno()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;erl_parse#mapfold_anno-3&quot;&gt; mapfold_anno()&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;erl_parse#new_anno-1&quot;&gt;new_anno()&lt;/a&gt;&lt;/code&gt;, in the &lt;code&gt;erl_parse&lt;/code&gt; module can be used for manipulating annotations in abstract code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e9c838a14637c7a4c6ed49ae71fd28e08b8189c" translate="yes" xml:space="preserve">
          <source>The functions &lt;code&gt;&lt;a href=&quot;erl_parse#anno_from_term-1&quot;&gt;anno_from_term()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;erl_parse#anno_to_term-1&quot;&gt;anno_to_term()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;erl_parse#fold_anno-3&quot;&gt;fold_anno()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;erl_parse#map_anno-2&quot;&gt;map_anno()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;erl_parse#mapfold_anno-3&quot;&gt;mapfold_anno()&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;erl_parse#new_anno-1&quot;&gt;new_anno()&lt;/a&gt;&lt;/code&gt;, in the &lt;code&gt;erl_parse&lt;/code&gt; module can be used for manipulating annotations in abstract code.</source>
          <target state="translated">Функции &lt;code&gt;&lt;a href=&quot;erl_parse#anno_from_term-1&quot;&gt;anno_from_term()&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;erl_parse#anno_to_term-1&quot;&gt;anno_to_term()&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;erl_parse#fold_anno-3&quot;&gt;fold_anno()&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;erl_parse#map_anno-2&quot;&gt;map_anno()&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;erl_parse#mapfold_anno-3&quot;&gt;mapfold_anno()&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;erl_parse#new_anno-1&quot;&gt;new_anno()&lt;/a&gt;&lt;/code&gt; в модуле &lt;code&gt;erl_parse&lt;/code&gt; могут использоваться для управления аннотациями в абстрактном коде.</target>
        </trans-unit>
        <trans-unit id="4ef5f76ccaeeff0245cc5352fd37788847bc8dd4" translate="yes" xml:space="preserve">
          <source>The functions &lt;code&gt;&lt;a href=&quot;erl_scan#column-1&quot;&gt;column()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;erl_scan#end_location-1&quot;&gt;end_location()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;erl_scan#line-1&quot;&gt;line()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;erl_scan#location-1&quot;&gt;location()&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;erl_scan#text-1&quot;&gt;text()&lt;/a&gt;&lt;/code&gt; in the &lt;code&gt;erl_scan&lt;/code&gt; module can be used for inspecting annotations in tokens.</source>
          <target state="translated">Функции &lt;code&gt;&lt;a href=&quot;erl_scan#column-1&quot;&gt;column()&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;erl_scan#end_location-1&quot;&gt;end_location()&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;erl_scan#line-1&quot;&gt;line()&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;erl_scan#location-1&quot;&gt;location()&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;erl_scan#text-1&quot;&gt;text()&lt;/a&gt;&lt;/code&gt; в модуле &lt;code&gt;erl_scan&lt;/code&gt; могут использоваться для проверки аннотаций в токенах.</target>
        </trans-unit>
        <trans-unit id="8f1eb93f5b31a056ece4e165a375a5884952e8c6" translate="yes" xml:space="preserve">
          <source>The functions &lt;code&gt;&lt;a href=&quot;mnesia#add_table_copy-3&quot;&gt;mnesia:add_table_copy/3&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;mnesia#del_table_copy-2&quot;&gt;mnesia:del_table_copy/2&lt;/a&gt;&lt;/code&gt; can be used to add and delete replicas of the schema table. Adding a node to the list of nodes where the schema is replicated affects the following:</source>
          <target state="translated">Функции &lt;code&gt;&lt;a href=&quot;mnesia#add_table_copy-3&quot;&gt;mnesia:add_table_copy/3&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;mnesia#del_table_copy-2&quot;&gt;mnesia:del_table_copy/2&lt;/a&gt;&lt;/code&gt; могут использоваться для добавления и удаления реплик таблицы схемы. Добавление узла в список узлов, на которых реплицируется схема, влияет на следующее:</target>
        </trans-unit>
        <trans-unit id="1886785ff0b77240f1ec57a522b97c8411209098" translate="yes" xml:space="preserve">
          <source>The functions &lt;code&gt;&lt;a href=&quot;mnesia#select-4&quot;&gt;select/4&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;mnesia#select-2&quot;&gt;select/1&lt;/a&gt;&lt;/code&gt; are used to get a limited number of results, where &lt;code&gt;Continuation&lt;/code&gt; gets the next chunk of results. &lt;code&gt;Mnesia&lt;/code&gt; uses &lt;code&gt;NObjects&lt;/code&gt; as a recommendation only. Thus, more or less results than specified with &lt;code&gt;NObjects&lt;/code&gt; can be returned in the result list, even the empty list can be returned even if there are more results to collect.</source>
          <target state="translated">Функции &lt;code&gt;&lt;a href=&quot;mnesia#select-4&quot;&gt;select/4&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;mnesia#select-2&quot;&gt;select/1&lt;/a&gt;&lt;/code&gt; используются для получения ограниченного количества результатов, где &lt;code&gt;Continuation&lt;/code&gt; получает следующий фрагмент результатов. &lt;code&gt;Mnesia&lt;/code&gt; использует &lt;code&gt;NObjects&lt;/code&gt; только в качестве рекомендации. Таким образом, в списке результатов может быть возвращено больше или меньше результатов, чем указано с помощью &lt;code&gt;NObjects&lt;/code&gt; , даже пустой список может быть возвращен, даже если есть больше результатов для сбора.</target>
        </trans-unit>
        <trans-unit id="902b2335f36e3393b5572f1006845ff1177285c7" translate="yes" xml:space="preserve">
          <source>The functions &lt;code&gt;&lt;a href=&quot;mnesia#system_info-1&quot;&gt;mnesia:system_info(master_node_tables)&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;mnesia#table_info-2&quot;&gt;mnesia:table_info(Tab, master_nodes)&lt;/a&gt;&lt;/code&gt; can be used to obtain information about the potential master nodes.</source>
          <target state="translated">Функции &lt;code&gt;&lt;a href=&quot;mnesia#system_info-1&quot;&gt;mnesia:system_info(master_node_tables)&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;mnesia#table_info-2&quot;&gt;mnesia:table_info(Tab, master_nodes)&lt;/a&gt;&lt;/code&gt; могут использоваться для получения информации о потенциальных главных узлах.</target>
        </trans-unit>
        <trans-unit id="d7162f97290d0f08d1d6fce536552b6112fd005e" translate="yes" xml:space="preserve">
          <source>The functions &lt;code&gt;double&lt;/code&gt; and &lt;code&gt;add_one&lt;/code&gt; can now be expressed in terms of &lt;code&gt;map&lt;/code&gt; as follows:</source>
          <target state="translated">Функции &lt;code&gt;double&lt;/code&gt; и &lt;code&gt;add_one&lt;/code&gt; теперь могут быть выражены в терминах &lt;code&gt;map&lt;/code&gt; следующим образом:</target>
        </trans-unit>
        <trans-unit id="222156c9e6dd9e3d178176d3e89b557b47249290" translate="yes" xml:space="preserve">
          <source>The functions &lt;code&gt;double&lt;/code&gt; and &lt;code&gt;add_one&lt;/code&gt; have a similar structure. This can be used by writing a function &lt;code&gt;map&lt;/code&gt; that expresses this similarity:</source>
          <target state="translated">Функции &lt;code&gt;double&lt;/code&gt; и &lt;code&gt;add_one&lt;/code&gt; имеют аналогичную структуру. Это можно использовать, написав &lt;code&gt;map&lt;/code&gt; функций, которая выражает это сходство:</target>
        </trans-unit>
        <trans-unit id="648f7da232361f38f861a299d3f2d536886a367c" translate="yes" xml:space="preserve">
          <source>The functions &lt;code&gt;first/[1,2]&lt;/code&gt;, &lt;code&gt;last/[1,2]&lt;/code&gt;, &lt;code&gt;next/[1,2]&lt;/code&gt;, &lt;code&gt;prev[1,2]&lt;/code&gt; and &lt;code&gt;select/[3,4]&lt;/code&gt; assumes there is a result set associated with the connection to work on. Calling the function &lt;code&gt;select_count/[2,3]&lt;/code&gt; associates such a result set with the connection. Calling select_count again will remove the current result set association and create a new one. Calling a function which dose not operate on an associated result sets, such as &lt;code&gt;sql_query/[2,3]&lt;/code&gt;, will remove the current result set association.</source>
          <target state="translated">Функции &lt;code&gt;first/[1,2]&lt;/code&gt; , &lt;code&gt;last/[1,2]&lt;/code&gt; , &lt;code&gt;next/[1,2]&lt;/code&gt; , &lt;code&gt;prev[1,2]&lt;/code&gt; и &lt;code&gt;select/[3,4]&lt;/code&gt; предполагают, что существует набор результатов, связанный с подключением. работать над. Вызов функции &lt;code&gt;select_count/[2,3]&lt;/code&gt; связывает такой набор результатов с соединением. Повторный вызов select_count удалит текущую ассоциацию набора результатов и создаст новую. Вызов функции, которая не работает с ассоциированными наборами результатов, например &lt;code&gt;sql_query/[2,3]&lt;/code&gt; , удалит текущую ассоциацию набора результатов.</target>
        </trans-unit>
        <trans-unit id="f5fc6fff1054bde43efdc57cd822c6d67516d395" translate="yes" xml:space="preserve">
          <source>The functions &lt;code&gt;get_s&lt;/code&gt; and &lt;code&gt;ei_x_to_new_binary&lt;/code&gt; are utilities that are used to make the code shorter. &lt;code&gt;get_s&lt;/code&gt; duplicates the string and zero-terminates it, as the postgres client library wants that. &lt;code&gt;ei_x_to_new_binary&lt;/code&gt; takes an &lt;code&gt;ei_x_buff&lt;/code&gt; buffer, allocates a binary, and copies the data there. This binary is returned in &lt;code&gt;*rbuf&lt;/code&gt;. (Notice that this binary is freed by the emulator, not by us.)</source>
          <target state="translated">Функции &lt;code&gt;get_s&lt;/code&gt; и &lt;code&gt;ei_x_to_new_binary&lt;/code&gt; - это утилиты, которые используются для сокращения кода. &lt;code&gt;get_s&lt;/code&gt; дублирует строку и завершает ее нулем, как этого требует клиентская библиотека postgres. &lt;code&gt;ei_x_to_new_binary&lt;/code&gt; принимает буфер &lt;code&gt;ei_x_buff&lt;/code&gt; , выделяет двоичный файл и копирует туда данные. Этот двоичный файл возвращается в формате &lt;code&gt;*rbuf&lt;/code&gt; . (Обратите внимание, что этот двоичный файл освобождается эмулятором, а не нами.)</target>
        </trans-unit>
        <trans-unit id="5096e39491b69e094a3f98629aa50fa1108f0a5e" translate="yes" xml:space="preserve">
          <source>The functions above have an optional argument, &lt;code&gt;Options&lt;/code&gt;. It is a list which can contain the following elements:</source>
          <target state="translated">Вышеуказанные функции имеют необязательный аргумент &lt;code&gt;Options&lt;/code&gt; . Это список, который может содержать следующие элементы:</target>
        </trans-unit>
        <trans-unit id="4cf9cf212abd94252e34e02e2e21ec1dc4af5994" translate="yes" xml:space="preserve">
          <source>The functions allowed in &lt;code&gt;match_spec&lt;/code&gt; work as follows:</source>
          <target state="translated">Функции, разрешенные в &lt;code&gt;match_spec&lt;/code&gt; , работают следующим образом:</target>
        </trans-unit>
        <trans-unit id="b49c5e0b193b751df77e5b417fa995fca0d1e1a2" translate="yes" xml:space="preserve">
          <source>The functions allowed only for tracing work as follows:</source>
          <target state="translated">Функции,разрешенные только для работы с трассировкой,следующие:</target>
        </trans-unit>
        <trans-unit id="c59774d7c82f25fd515f4adf4619a3b207d21571" translate="yes" xml:space="preserve">
          <source>The functions are</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c38557bf4878ec1f68819130f6538837da45503c" translate="yes" xml:space="preserve">
          <source>The functions are also used as input and output for parse transforms, see the &lt;code&gt;compile(3)&lt;/code&gt; module.</source>
          <target state="translated">Функции также используются в качестве ввода и вывода для преобразований синтаксического анализа, см. Модуль &lt;code&gt;compile(3)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b767ef0cfc20ad008772285b7b151d13f3e95f0c" translate="yes" xml:space="preserve">
          <source>The functions are deliberately kept as simple as possible, for readability reasons.</source>
          <target state="translated">Функции намеренно поддерживаются настолько простыми,насколько это возможно,из соображений удобочитаемости.</target>
        </trans-unit>
        <trans-unit id="45f09a589c0917e05c505ec254a5e8229659ac40" translate="yes" xml:space="preserve">
          <source>The functions are executed sequentially in an initialization process, which then terminates normally and passes control to the user. This means that a &lt;code&gt;-run&lt;/code&gt; call that does not return blocks further processing; to avoid this, use some variant of &lt;code&gt;spawn&lt;/code&gt; in such cases.</source>
          <target state="translated">Функции выполняются последовательно в процессе инициализации, который затем обычно завершается и передает управление пользователю. Это означает, что вызов &lt;code&gt;-run&lt;/code&gt; , который не возвращает, блокирует дальнейшую обработку; чтобы избежать этого, используйте в таких случаях какой-либо вариант &lt;code&gt;spawn&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="926aaaf3b21fb32d1bbb6e4c88da0fdf9d06509c" translate="yes" xml:space="preserve">
          <source>The functions are executed sequentially in an initialization process, which then terminates normally and passes control to the user. This means that a &lt;code&gt;-s&lt;/code&gt; call that does not return blocks further processing; to avoid this, use some variant of &lt;code&gt;spawn&lt;/code&gt; in such cases.</source>
          <target state="translated">Функции выполняются последовательно в процессе инициализации, который затем обычно завершается и передает управление пользователю. Это означает, что вызов &lt;code&gt;-s&lt;/code&gt; , который не возвращает, блокирует дальнейшую обработку; чтобы избежать этого, используйте в таких случаях какой-либо вариант &lt;code&gt;spawn&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="16b3d921f3dab11c8bd9dcd981b467c9ea9eb69b" translate="yes" xml:space="preserve">
          <source>The functions are kept for backward compatibility, but are not recommended. They will be deprecated in a future release.</source>
          <target state="translated">Функции сохраняются для обратной совместимости,но не рекомендуются.Они будут утрачены в одном из будущих релизов.</target>
        </trans-unit>
        <trans-unit id="e16c3bfea1464fe2701a69fbec438e22d449fa1c" translate="yes" xml:space="preserve">
          <source>The functions can crash for non-valid input strings. For example, the functions expect UTF-8 binaries but not all functions verify that all binaries are encoded correctly.</source>
          <target state="translated">Функции могут аварийно завершаться для недействительных входных строк.Например,функции ожидают UTF-8 двоичных файлов,но не все функции проверяют корректность кодировки всех двоичных файлов.</target>
        </trans-unit>
        <trans-unit id="dd2b5b372777bf5bb017e0da931269beb671e840" translate="yes" xml:space="preserve">
          <source>The functions for receiving and sending data are combined into a function, pointed out by the driver structure. The data sent into the port is given as arguments, and the replied data is sent with the C-function &lt;code&gt;driver_output&lt;/code&gt;.</source>
          <target state="translated">Функции приема и отправки данных объединены в функцию, указанную структурой драйвера. Данные, отправляемые в порт, передаются в качестве аргументов, а ответные данные отправляются с помощью C-функции &lt;code&gt;driver_output&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ebbfff7f1d8a39c016464e3f5cebc0cf7001e164" translate="yes" xml:space="preserve">
          <source>The functions implemented by this module cover the following use cases:</source>
          <target state="translated">Функции,реализованные этим модулем,охватывают следующие случаи использования:</target>
        </trans-unit>
        <trans-unit id="c86b667b04bbb8c7ab1bce69786f4f6966eec074" translate="yes" xml:space="preserve">
          <source>The functions in &lt;code&gt;systools&lt;/code&gt; require more information. If they are used, the following keys are mandatory:</source>
          <target state="translated">Для функций в &lt;code&gt;systools&lt;/code&gt; требуется дополнительная информация. Если они используются, следующие ключи являются обязательными:</target>
        </trans-unit>
        <trans-unit id="2c1aa340d685d0c3733736a0ada3b9ea70cc9c9a" translate="yes" xml:space="preserve">
          <source>The functions in the &lt;code&gt;io&lt;/code&gt; module cannot be used, as they can only talk to an Erlang process. Instead, use functions &lt;code&gt;&lt;a href=&quot;#read-2&quot;&gt;read/2&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#read_line-1&quot;&gt;read_line/1&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;#write-2&quot;&gt;write/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Функции модуля &lt;code&gt;io&lt;/code&gt; использовать нельзя, поскольку они могут взаимодействовать только с процессом Erlang. Вместо этого используйте функции &lt;code&gt;&lt;a href=&quot;#read-2&quot;&gt;read/2&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#read_line-1&quot;&gt;read_line/1&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;#write-2&quot;&gt;write/2&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a25876dba4377f3e108142ac910ecc80fd99f8dd" translate="yes" xml:space="preserve">
          <source>The functions in the &lt;code&gt;timer&lt;/code&gt; module that do not manage timers (such as &lt;code&gt;timer:tc/3&lt;/code&gt; or &lt;code&gt;timer:sleep/1&lt;/code&gt;), do not call the timer-server process and are therefore harmless.</source>
          <target state="translated">Функции модуля &lt;code&gt;timer&lt;/code&gt; которые не управляют таймерами (например, &lt;code&gt;timer:tc/3&lt;/code&gt; или &lt;code&gt;timer:sleep/1&lt;/code&gt; ), не вызывают процесс сервера таймера и поэтому безвредны.</target>
        </trans-unit>
        <trans-unit id="bc5c8ab81c744e8799da4f1bbc208d8534384ca8" translate="yes" xml:space="preserve">
          <source>The functions in the module &lt;code&gt;file&lt;/code&gt; usually treat binaries as raw filenames, that is, they are passed &quot;as is&quot; even when the encoding of the binary does not agree with &lt;code&gt;&lt;a href=&quot;#native_name_encoding-0&quot;&gt;native_name_encoding()&lt;/a&gt;&lt;/code&gt;. However, this function expects binaries to be encoded according to the value returned by &lt;code&gt;native_name_encoding()&lt;/code&gt;.</source>
          <target state="translated">Функции в &lt;code&gt;file&lt;/code&gt; модуля обычно обрабатывают двоичные файлы как необработанные имена файлов, то есть они передаются &amp;laquo;как есть&amp;raquo;, даже если кодировка двоичного &lt;code&gt;&lt;a href=&quot;#native_name_encoding-0&quot;&gt;native_name_encoding()&lt;/a&gt;&lt;/code&gt; не согласуется с native_name_encoding () . Однако эта функция ожидает, что двоичные файлы будут закодированы в соответствии со значением, возвращаемым &lt;code&gt;native_name_encoding()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="59fe37bf337f659a6dcf2745738cdc7eba91db8e" translate="yes" xml:space="preserve">
          <source>The functions in this module are invoked automatically by the Erlang compiler. There is no reason to invoke these functions separately unless you have written your own Erlang compiler.</source>
          <target state="translated">Функции в этом модуле вызываются компилятором Erlang автоматически.Нет причин вызывать эти функции по отдельности,если только Вы не написали свой компилятор Erlang.</target>
        </trans-unit>
        <trans-unit id="83d017ac05dd2cacc80880c2e28d8a757b9c1403" translate="yes" xml:space="preserve">
          <source>The functions in this module are operating system-specific. Careless use of these functions results in programs that will only run on a specific platform. On the other hand, with careful use, these functions can be of help in enabling a program to run on most platforms.</source>
          <target state="translated">Функции этого модуля зависят от операционной системы.Небрежное использование этих функций приводит к появлению программ,которые будут работать только на определенной платформе.С другой стороны,при бережном использовании эти функции могут помочь в обеспечении возможности запуска программы на большинстве платформ.</target>
        </trans-unit>
        <trans-unit id="0090b523e8b96e6009643e2f865f32e534e6e35f" translate="yes" xml:space="preserve">
          <source>The functions in this module are used to generate aesthetically attractive representations of abstract forms, which are suitable for printing. All functions return (possibly deep) lists of characters and generate an error if the form is wrong.</source>
          <target state="translated">Функции этого модуля используются для создания эстетически привлекательных представлений абстрактных форм,пригодных для печати.Все функции возвращают (возможно,глубокие)списки символов и генерируют ошибку в случае ошибки формы.</target>
        </trans-unit>
        <trans-unit id="6379807804d510c1358bcad10b50d619a7c10261" translate="yes" xml:space="preserve">
          <source>The functions in this module exits with reason &lt;code&gt;badarg&lt;/code&gt; if any argument has the wrong format, if the table identifier is invalid, or if the operation is denied because of table access rights (&lt;code&gt;&lt;a href=&quot;#protected&quot;&gt;protected&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#private&quot;&gt;private&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">Функции в этом модуле &lt;code&gt;badarg&lt;/code&gt; с причиной badarg, если какой-либо аргумент имеет неправильный формат, если идентификатор таблицы недействителен или если операция отклонена из-за прав доступа к таблице ( &lt;code&gt;&lt;a href=&quot;#protected&quot;&gt;protected&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;#private&quot;&gt;private&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="dc4e34b42033b4ee07c7be4497100db14c7aae27" translate="yes" xml:space="preserve">
          <source>The functions make references to a debug structure. The debug structure is a list of &lt;code&gt;dbg_opt()&lt;/code&gt;, which is an internal data type used by function &lt;code&gt;&lt;a href=&quot;#handle_system_msg-6&quot;&gt; handle_system_msg/6&lt;/a&gt;&lt;/code&gt;. No debugging is performed if it is an empty list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="407acf4eb1d452f08e4cd9870e0fbf1bd80ec28b" translate="yes" xml:space="preserve">
          <source>The functions make references to a debug structure. The debug structure is a list of &lt;code&gt;dbg_opt()&lt;/code&gt;, which is an internal data type used by function &lt;code&gt;&lt;a href=&quot;#handle_system_msg-6&quot;&gt;handle_system_msg/6&lt;/a&gt;&lt;/code&gt;. No debugging is performed if it is an empty list.</source>
          <target state="translated">Функции ссылаются на структуру отладки. Структура отладки - это список &lt;code&gt;dbg_opt()&lt;/code&gt; , который является внутренним типом данных, используемым функцией &lt;code&gt;&lt;a href=&quot;#handle_system_msg-6&quot;&gt;handle_system_msg/6&lt;/a&gt;&lt;/code&gt; . Если это пустой список, отладка не выполняется.</target>
        </trans-unit>
        <trans-unit id="95e0480086d8c1cfed57c30b1e75f554c1263ba9" translate="yes" xml:space="preserve">
          <source>The functions of this module exit the process with a &lt;code&gt;badarg&lt;/code&gt;, &lt;code&gt;bad_function&lt;/code&gt;, or &lt;code&gt;type_mismatch&lt;/code&gt; message when given badly formed arguments or sets the types of which are not compatible.</source>
          <target state="translated">Функции этого модуля выходят из процесса с сообщением &lt;code&gt;badarg&lt;/code&gt; , &lt;code&gt;bad_function&lt;/code&gt; или &lt;code&gt;type_mismatch&lt;/code&gt; , когда передаются неверно сформированные аргументы или устанавливаются несовместимые типы.</target>
        </trans-unit>
        <trans-unit id="8bcd836e7cff1f3fb60829e13f437e52a77a3d68" translate="yes" xml:space="preserve">
          <source>The functions returns &lt;code&gt;{module,Module}&lt;/code&gt; if the module was interpreted, otherwise &lt;code&gt;error&lt;/code&gt; is returned.</source>
          <target state="translated">Функции возвращают &lt;code&gt;{module,Module}&lt;/code&gt; если модуль был интерпретирован, в противном случае возвращается &lt;code&gt;error&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d8c5ba17f384a51d8defb699da21623e5d4d6f29" translate="yes" xml:space="preserve">
          <source>The functions with explicit state never use the process dictionary.</source>
          <target state="translated">Функции с явным состоянием никогда не используют словарь процессов.</target>
        </trans-unit>
        <trans-unit id="1dee609877073beca17837c5cc489fd792ebd7be" translate="yes" xml:space="preserve">
          <source>The functions with implicit state use the process dictionary variable &lt;code&gt;rand_seed&lt;/code&gt; to remember the current state.</source>
          <target state="translated">Функции с неявным состоянием используют переменную словаря процесса &lt;code&gt;rand_seed&lt;/code&gt; для запоминания текущего состояния.</target>
        </trans-unit>
        <trans-unit id="3598aafeb02f3f06b45b8fa49e0ea66cd9f4c8c2" translate="yes" xml:space="preserve">
          <source>The fundamental difference between this API and &lt;code&gt;connect/*&lt;/code&gt; is that the return value is that of the underlying OS &lt;code&gt;connect(2)&lt;/code&gt; system call. If &lt;code&gt;ok&lt;/code&gt; is returned, the result of the association establishment is received by the calling process as an &lt;code&gt;&lt;a href=&quot;#record-sctp_assoc_change&quot;&gt;#sctp_assoc_change{}&lt;/a&gt;&lt;/code&gt; event. The calling process must be prepared to receive this, or poll for it using &lt;code&gt;&lt;a href=&quot;#recv-1&quot;&gt;recv/*&lt;/a&gt;&lt;/code&gt;, depending on the value of the active option.</source>
          <target state="translated">Фундаментальное различие между этим API и &lt;code&gt;connect/*&lt;/code&gt; состоит в том, что возвращаемое значение - это значение системного вызова &lt;code&gt;connect(2)&lt;/code&gt; базовой ОС . Если возвращается &lt;code&gt;ok&lt;/code&gt; , результат установления ассоциации принимается вызывающим процессом как событие &lt;code&gt;&lt;a href=&quot;#record-sctp_assoc_change&quot;&gt;#sctp_assoc_change{}&lt;/a&gt;&lt;/code&gt; . Вызывающий процесс должен быть подготовлен к его получению или опросу с помощью &lt;code&gt;&lt;a href=&quot;#recv-1&quot;&gt;recv/*&lt;/a&gt;&lt;/code&gt; , в зависимости от значения активной опции.</target>
        </trans-unit>
        <trans-unit id="988b6a9c1d9ecd81d685b26b761fdee058fdc894" translate="yes" xml:space="preserve">
          <source>The gain is twofold:</source>
          <target state="translated">Прибыль двойная:</target>
        </trans-unit>
        <trans-unit id="bcf404e4d234a44441e22cb6261963b4fedd0d7d" translate="yes" xml:space="preserve">
          <source>The gain of using selective and exclusive decode instead of a complete decode is greater the bigger the value and the less deep in the structure you have to decode.</source>
          <target state="translated">Выигрыш от использования селективного и эксклюзивного декодирования вместо полного декодирования тем больше,чем больше значение и тем меньше глубина в структуре,которую вы должны декодировать.</target>
        </trans-unit>
        <trans-unit id="fe50c99cca6dabfaacf57c3d4d8ac0b0024f73ef" translate="yes" xml:space="preserve">
          <source>The garbage collector can also shrink the heap if it is much larger than the amount of data stored on it; setting the minimum heap size prevents that.</source>
          <target state="translated">Устройство для сбора мусора может также уменьшить кучу мусора,если она значительно превышает объем хранимых на ней данных;установка минимального размера кучу препятствует этому.</target>
        </trans-unit>
        <trans-unit id="977899977ecd5bafb69cd4c8bac5e829e78b713f" translate="yes" xml:space="preserve">
          <source>The general events are as follows:</source>
          <target state="translated">Общие события выглядят следующим образом:</target>
        </trans-unit>
        <trans-unit id="149747bf3dd15b14e96b6d254e71d9518355ab2e" translate="yes" xml:space="preserve">
          <source>The general filter rule.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a45457862e4fc4686a75b757e6f11948bde74a0" translate="yes" xml:space="preserve">
          <source>The general form of bit strings is &lt;code&gt;&amp;lt;&amp;lt;_:M, _:_*N&amp;gt;&amp;gt;&lt;/code&gt;, where &lt;code&gt;M&lt;/code&gt; and &lt;code&gt;N&lt;/code&gt; are positive integers. It denotes a bit string that is &lt;code&gt;M + (k*N)&lt;/code&gt; bits long (that is, a bit string that starts with &lt;code&gt;M&lt;/code&gt; bits and continues with &lt;code&gt;k&lt;/code&gt; segments of &lt;code&gt;N&lt;/code&gt; bits each, where &lt;code&gt;k&lt;/code&gt; is also a positive integer). The notations &lt;code&gt;&amp;lt;&amp;lt;_:_*N&amp;gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;&amp;lt;_:M&amp;gt;&amp;gt;&lt;/code&gt;, and &lt;code&gt;&amp;lt;&amp;lt;&amp;gt;&amp;gt;&lt;/code&gt; are convenient shorthands for the cases that &lt;code&gt;M&lt;/code&gt; or &lt;code&gt;N&lt;/code&gt;, or both, are zero.</source>
          <target state="translated">Общая форма битовых строк - &lt;code&gt;&amp;lt;&amp;lt;_:M, _:_*N&amp;gt;&amp;gt;&lt;/code&gt; , где &lt;code&gt;M&lt;/code&gt; и &lt;code&gt;N&lt;/code&gt; - положительные целые числа. Он обозначает битовую строку длиной &lt;code&gt;M + (k*N)&lt;/code&gt; бит (то есть битовую строку, которая начинается с &lt;code&gt;M&lt;/code&gt; бит и продолжается &lt;code&gt;k&lt;/code&gt; сегментами по &lt;code&gt;N&lt;/code&gt; бит каждый, где &lt;code&gt;k&lt;/code&gt; также является положительным целым числом). Обозначения &lt;code&gt;&amp;lt;&amp;lt;_:_*N&amp;gt;&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;&amp;lt;_:M&amp;gt;&amp;gt;&lt;/code&gt; и &lt;code&gt;&amp;lt;&amp;lt;&amp;gt;&amp;gt;&lt;/code&gt; являются удобными сокращениями для случаев, когда &lt;code&gt;M&lt;/code&gt; или &lt;code&gt;N&lt;/code&gt; , или оба они равны нулю.</target>
        </trans-unit>
        <trans-unit id="fdbe665310c13decea46f0a344ac730f430a21b1" translate="yes" xml:space="preserve">
          <source>The general form of bit strings is &lt;code&gt;&amp;lt;&amp;lt;_:M, _:_*N&amp;gt;&amp;gt;&lt;/code&gt;, where &lt;code&gt;M&lt;/code&gt; and &lt;code&gt;N&lt;/code&gt; must evaluate to positive integers. It denotes a bit string that is &lt;code&gt;M + (k*N)&lt;/code&gt; bits long (that is, a bit string that starts with &lt;code&gt;M&lt;/code&gt; bits and continues with &lt;code&gt;k&lt;/code&gt; segments of &lt;code&gt;N&lt;/code&gt; bits each, where &lt;code&gt;k&lt;/code&gt; is also a positive integer). The notations &lt;code&gt;&amp;lt;&amp;lt;_:_*N&amp;gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;&amp;lt;_:M&amp;gt;&amp;gt;&lt;/code&gt;, and &lt;code&gt;&amp;lt;&amp;lt;&amp;gt;&amp;gt;&lt;/code&gt; are convenient shorthands for the cases that &lt;code&gt;M&lt;/code&gt; or &lt;code&gt;N&lt;/code&gt;, or both, are zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c496d2449f6d9b0afc626a9e7f68cb4481df6a7" translate="yes" xml:space="preserve">
          <source>The general form of map types is &lt;code&gt;#{AssociationList}&lt;/code&gt;. The key types in &lt;code&gt;AssociationList&lt;/code&gt; are allowed to overlap, and if they do, the leftmost association takes precedence. A map association has a key in &lt;code&gt;AssociationList&lt;/code&gt; if it belongs to this type. &lt;code&gt;AssociationList&lt;/code&gt; can contain both mandatory &lt;code&gt;(:=)&lt;/code&gt; and optional &lt;code&gt;(=&amp;gt;)&lt;/code&gt; association types. If an association type is mandatory, an association with that type needs to be present. In the case of an optional association type it is not required for the key type to be present.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15c107121f9e396eb9a5cd9589f0c40d15c3390b" translate="yes" xml:space="preserve">
          <source>The general form of map types is &lt;code&gt;#{AssociationList}&lt;/code&gt;. The key types in &lt;code&gt;AssociationList&lt;/code&gt; are allowed to overlap, and if they do, the leftmost association takes precedence. A map association has a key in &lt;code&gt;AssociationList&lt;/code&gt; if it belongs to this type. &lt;code&gt;AssociationList&lt;/code&gt; can contain both mandatory and optional association types. If an association type is mandatory, an association with that type is to be present. In the case of an optional association type it is not required for the key type to be present.</source>
          <target state="translated">Общая форма типов карт - &lt;code&gt;#{AssociationList}&lt;/code&gt; . Типы ключей в &lt;code&gt;AssociationList&lt;/code&gt; могут перекрываться, и если это так, то приоритет имеет крайняя левая ассоциация. Связь карты имеет ключ в &lt;code&gt;AssociationList&lt;/code&gt; , если она принадлежит к этому типу. &lt;code&gt;AssociationList&lt;/code&gt; может содержать как обязательные, так и необязательные типы ассоциаций. Если тип ассоциации является обязательным, должна присутствовать ассоциация с этим типом. В случае необязательного типа ассоциации наличие типа ключа не требуется.</target>
        </trans-unit>
        <trans-unit id="fd29c112a6f953361a2bf7c31389b1ff11da8c85" translate="yes" xml:space="preserve">
          <source>The general form of the 'socket' message is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa26e067e726a95a6d2e3dc44ecd0d512cccd537" translate="yes" xml:space="preserve">
          <source>The general format of a control sequence is &lt;code&gt;~F.P.PadModC&lt;/code&gt;.</source>
          <target state="translated">Общий формат управляющей последовательности - &lt;code&gt;~F.P.PadModC&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="48292e72b50e679a5bd265d2003a203029b9008b" translate="yes" xml:space="preserve">
          <source>The general repetition quantifier specifies a minimum and maximum number of permitted matches, by giving the two numbers in curly brackets (braces), separated by a comma. The numbers must be &amp;lt; 65536, and the first must be less than or equal to the second. For example, the following matches &quot;zz&quot;, &quot;zzz&quot;, or &quot;zzzz&quot;:</source>
          <target state="translated">Общий квантификатор повторения определяет минимальное и максимальное количество разрешенных совпадений, давая два числа в фигурных скобках (скобках), разделенных запятой. Числа должны быть &amp;lt;65536, а первое должно быть меньше или равно второму. Например, следующее соответствует &amp;laquo;zz&amp;raquo;, &amp;laquo;zzz&amp;raquo; или &amp;laquo;zzzz&amp;raquo;:</target>
        </trans-unit>
        <trans-unit id="e8ceed6edc3f642d5944e6d5d983920ce28f447b" translate="yes" xml:space="preserve">
          <source>The general verbosity level is not associated with any particular category. This level sets the threshold for the standard I/O printouts, uncategorized &lt;code&gt;ct:log/print/pal&lt;/code&gt; printouts, and printouts for categories with undefined verbosity level.</source>
          <target state="translated">Общий уровень детализации не связан с какой-либо конкретной категорией. Этот уровень устанавливает порог для стандартных распечаток ввода-вывода, распечаток без категорий &lt;code&gt;ct:log/print/pal&lt;/code&gt; и распечаток для категорий с неопределенным уровнем детализации.</target>
        </trans-unit>
        <trans-unit id="15f1ac9edee948d6f4ef43892cbf77bf286d9bf4" translate="yes" xml:space="preserve">
          <source>The generated .script (and .boot) file uses the environment variable &lt;code&gt;$RELTOOL_EXT_LIB&lt;/code&gt; as prefix for the paths to all applications. The &lt;code&gt;-boot_var&lt;/code&gt; option to &lt;code&gt;erl&lt;/code&gt; can be used for specifying the value of this variable, typically &lt;code&gt;-boot_var RELTOOL_EXT_LIB &amp;lt;target-dir&amp;gt;/lib&lt;/code&gt;.</source>
          <target state="translated">Созданный файл .script (и .boot) использует переменную среды &lt;code&gt;$RELTOOL_EXT_LIB&lt;/code&gt; качестве префикса для путей ко всем приложениям. Параметр &lt;code&gt;-boot_var&lt;/code&gt; для &lt;code&gt;erl&lt;/code&gt; может использоваться для указания значения этой переменной, обычно &lt;code&gt;-boot_var RELTOOL_EXT_LIB &amp;lt;target-dir&amp;gt;/lib&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0c99eee4f85e52f6340a9da42977768f1eebdd2c" translate="yes" xml:space="preserve">
          <source>The generated Erlang files are placed in the current directory or in the directory specified with option &lt;code&gt;{outdir,Dir}&lt;/code&gt;.</source>
          <target state="translated">Сгенерированные файлы Erlang помещаются в текущий каталог или в каталог, указанный с помощью опции &lt;code&gt;{outdir,Dir}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c577f200898187404181ae175171d50fcb091818" translate="yes" xml:space="preserve">
          <source>The generated Erlang module always gets the same name as the &lt;code&gt;ASN.1&lt;/code&gt; module. Therefore, only one encoding rule per &lt;code&gt;ASN.1&lt;/code&gt; module can be used at runtime.</source>
          <target state="translated">Сгенерированный модуль Erlang всегда получает то же имя, что и модуль &lt;code&gt;ASN.1&lt;/code&gt; . Следовательно, во время выполнения можно использовать только одно правило кодирования для каждого модуля &lt;code&gt;ASN.1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b514f46ec7f6b4c60827848dbf2c26c322ce6aab" translate="yes" xml:space="preserve">
          <source>The generated code looks like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fc9a629a78265b39c4931fa85c066a035d12976" translate="yes" xml:space="preserve">
          <source>The generated conversion functions are named &lt;code&gt;name2num_EnumTypeName/1&lt;/code&gt; and &lt;code&gt;num2name_EnumTypeName/1&lt;/code&gt;.</source>
          <target state="translated">Сгенерированные функции преобразования называются &lt;code&gt;name2num_EnumTypeName/1&lt;/code&gt; и &lt;code&gt;num2name_EnumTypeName/1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="70590dbda20778e7131e69e54b148688eb50a6db" translate="yes" xml:space="preserve">
          <source>The generated numbers are on the form N * 2.0^(-53), that is; equally spaced in the interval.</source>
          <target state="translated">Генерируемые числа находятся на форме N*2.0^(-53),то есть равномерно распределены в интервале.</target>
        </trans-unit>
        <trans-unit id="d46f1c06452ab11c5b4b6ecb5baaa5c431f8b627" translate="yes" xml:space="preserve">
          <source>The generated numbers from this function has got better granularity for small numbers than the regular &lt;code&gt;&lt;a href=&quot;#uniform-0&quot;&gt;uniform/0&lt;/a&gt;&lt;/code&gt; because all bits in the mantissa are random. This property, in combination with the fact that exactly zero is never returned is useful for algoritms doing for example &lt;code&gt;1.0 / X&lt;/code&gt; or &lt;code&gt;math:log(X)&lt;/code&gt;.</source>
          <target state="translated">Сгенерированные числа с помощью этой функции имеют лучшую степень детализации для малых чисел, чем обычная &lt;code&gt;&lt;a href=&quot;#uniform-0&quot;&gt;uniform/0&lt;/a&gt;&lt;/code&gt; , потому что все биты в мантиссе случайны. Это свойство в сочетании с тем фактом, что ровно ноль никогда не возвращается, полезно для алгоритмов, выполняющих, например, &lt;code&gt;1.0 / X&lt;/code&gt; или &lt;code&gt;math:log(X)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="73171ef35be5bd8ba621019aa17e69f855a0576a" translate="yes" xml:space="preserve">
          <source>The generated numbers from this function has got better granularity for small numbers than the regular &lt;code&gt;&lt;a href=&quot;#uniform_s-1&quot;&gt;uniform_s/1&lt;/a&gt;&lt;/code&gt; because all bits in the mantissa are random. This property, in combination with the fact that exactly zero is never returned is useful for algoritms doing for example &lt;code&gt;1.0 / X&lt;/code&gt; or &lt;code&gt;math:log(X)&lt;/code&gt;.</source>
          <target state="translated">Сгенерированные числа с помощью этой функции имеют лучшую &lt;code&gt;&lt;a href=&quot;#uniform_s-1&quot;&gt;uniform_s/1&lt;/a&gt;&lt;/code&gt; детализации для малых чисел, чем обычная uniform_s / 1, потому что все биты в мантиссе случайны. Это свойство в сочетании с тем фактом, что ровно ноль никогда не возвращается, полезно для алгоритмов, выполняющих, например, &lt;code&gt;1.0 / X&lt;/code&gt; или &lt;code&gt;math:log(X)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9601b63aa3ab5a33ac60d263c74f85eedd8bb618" translate="yes" xml:space="preserve">
          <source>The generation of default functions for tables works for tables which use the &lt;code&gt;RowStatus&lt;/code&gt; textual convention from SNMPv2, defined in STANDARD-MIB and SNMPv2-TC.</source>
          <target state="translated">Генерация функций по умолчанию для таблиц работает для таблиц, которые используют текстовое соглашение &lt;code&gt;RowStatus&lt;/code&gt; из SNMPv2, определенное в STANDARD-MIB и SNMPv2-TC.</target>
        </trans-unit>
        <trans-unit id="4eba83a7da2528325534c6072ae7bcfeeb1f8ae2" translate="yes" xml:space="preserve">
          <source>The generational hypothesis predicts that most terms tend to die young (see D. Ungar in &lt;code&gt;&lt;a href=&quot;#References&quot;&gt;References&lt;/a&gt;&lt;/code&gt;), and for an immutable language such as Erlang, young terms die even faster than in other languages. So for most usage patterns the data in the new heap will die very soon after it is allocated. This is good because it limits the amount of data copied to the old heap and also because the garbage collection algorithm used is proportional to the amount of live data on the heap.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="821e9c0846e4f65c9117ead5ceea8748b753ad3a" translate="yes" xml:space="preserve">
          <source>The generator does not need 58-bit rotates so it is faster than the Xoroshiro116 generator, and when combined with the StarStar scrambler it does not have any weak low bits like &lt;code&gt;exrop&lt;/code&gt; (Xoroshiro116+).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a98f897827fbccc29809d0ff98a0c6185bd547f8" translate="yes" xml:space="preserve">
          <source>The generator function &lt;code&gt;GenFun&lt;/code&gt; is called to produce a test set.</source>
          <target state="translated">Функция генератора &lt;code&gt;GenFun&lt;/code&gt; вызывается для создания тестового набора.</target>
        </trans-unit>
        <trans-unit id="1f65b0f29d2eaf723597fb4ded6e5f61662cb2a0" translate="yes" xml:space="preserve">
          <source>The generator now contains unbound variables and the test has been moved into the filter.</source>
          <target state="translated">Генератор теперь содержит несвязанные переменные,и тест был перемещен в фильтр.</target>
        </trans-unit>
        <trans-unit id="df67d175f37e161fc283f4c21214ba8ff79c07f4" translate="yes" xml:space="preserve">
          <source>The generic URI syntax consists of a hierarchical sequence of components referred to as the scheme, authority, path, query, and fragment:</source>
          <target state="translated">Общий синтаксис URI состоит из иерархической последовательности компонентов,называемых схемой,полномочиями,путем,запросом и фрагментом:</target>
        </trans-unit>
        <trans-unit id="edcc58c1f9412f2d84d5eca2fbc303265ca32bc7" translate="yes" xml:space="preserve">
          <source>The generic encode and decode functions can be called as follows:</source>
          <target state="translated">Функции общего кодирования и декодирования можно вызвать следующим образом:</target>
        </trans-unit>
        <trans-unit id="a6a0f25dc460ac798f2b85a01f268cff421ca237" translate="yes" xml:space="preserve">
          <source>The generic full name of the file is thus:</source>
          <target state="translated">Таким образом,общее полное имя файла:</target>
        </trans-unit>
        <trans-unit id="953d4c56983eabeb70f721a6678334568e77d77a" translate="yes" xml:space="preserve">
          <source>The given BEAM file (with or without the &lt;code&gt;.beam&lt;/code&gt; extension) or the file found by calling &lt;code&gt;code:which(Module)&lt;/code&gt; is checked for calls to &lt;code&gt;&lt;a href=&quot;#deprecated_function&quot;&gt;deprecated functions&lt;/a&gt;&lt;/code&gt;, calls to &lt;code&gt;&lt;a href=&quot;#undefined_function&quot;&gt;undefined functions&lt;/a&gt;&lt;/code&gt;, and for unused local functions. The code path is used as &lt;code&gt;&lt;a href=&quot;#library_path&quot;&gt;library path&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Данный файл BEAM (с расширением &lt;code&gt;.beam&lt;/code&gt; или без него ) или файл, найденный с помощью вызывающего &lt;code&gt;code:which(Module)&lt;/code&gt; проверяется на вызовы &lt;code&gt;&lt;a href=&quot;#deprecated_function&quot;&gt;deprecated functions&lt;/a&gt;&lt;/code&gt; , вызовов &lt;code&gt;&lt;a href=&quot;#undefined_function&quot;&gt;undefined functions&lt;/a&gt;&lt;/code&gt; и на наличие неиспользуемых локальных функций. Путь кода используется как &lt;code&gt;&lt;a href=&quot;#library_path&quot;&gt;library path&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2c55cafbe9ce836bf9c8c850c2f1eba5d102da3a" translate="yes" xml:space="preserve">
          <source>The global atomic variables &lt;code&gt;erts_active_bp_index&lt;/code&gt; will determine which generation of breakpoints running code will use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e66a4ab696e12e0f12a8dd69e7f5bb33fedf0273" translate="yes" xml:space="preserve">
          <source>The global name server also performs the critical task of continuously monitoring changes in node configuration. If a node that runs a globally registered process goes down, the name is globally unregistered. To this end, the global name server subscribes to &lt;code&gt;nodeup&lt;/code&gt; and &lt;code&gt;nodedown&lt;/code&gt; messages sent from module &lt;code&gt;net_kernel&lt;/code&gt;. Relevant Kernel application variables in this context are &lt;code&gt;net_setuptime&lt;/code&gt;, &lt;code&gt;net_ticktime&lt;/code&gt;, and &lt;code&gt;dist_auto_connect&lt;/code&gt;. See also &lt;code&gt;kernel(6)&lt;/code&gt;.</source>
          <target state="translated">Сервер глобальных имен также выполняет важную задачу по постоянному мониторингу изменений в конфигурации узла. Если узел, на котором запущен глобально зарегистрированный процесс, выходит из строя, имя глобально не регистрируется. С этой целью глобальный сервер имен подписывается на сообщения &lt;code&gt;nodeup&lt;/code&gt; и &lt;code&gt;nodedown&lt;/code&gt; , отправляемые из модуля &lt;code&gt;net_kernel&lt;/code&gt; . Соответствующими переменными приложения ядра в этом контексте являются &lt;code&gt;net_setuptime&lt;/code&gt; , &lt;code&gt;net_ticktime&lt;/code&gt; и &lt;code&gt;dist_auto_connect&lt;/code&gt; . См. Также &lt;code&gt;kernel(6)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8f36454620d0c52943c78b70c7b2d67415456c6b" translate="yes" xml:space="preserve">
          <source>The global name server keeps track of all processes sharing the same lock, that is, if two processes set the same lock, both processes must delete the lock.</source>
          <target state="translated">Сервер глобальных имен отслеживает все процессы,имеющие один и тот же замок,т.е.если два процесса устанавливают один и тот же замок,оба процесса должны удалить замок.</target>
        </trans-unit>
        <trans-unit id="46c28148b1520b8f7f30b407f534c21425582a89" translate="yes" xml:space="preserve">
          <source>The global state of the scanner, represented by the #xmerl_scanner{} record.</source>
          <target state="translated">Глобальное состояние сканера,представленное записью #xmerl_scanner{}.</target>
        </trans-unit>
        <trans-unit id="162600e8983ca6d0de97e2e5c21045cca4665270" translate="yes" xml:space="preserve">
          <source>The global state of the validator. It is representated by the &lt;code&gt;#xsd_state{}&lt;/code&gt; record.</source>
          <target state="translated">Глобальное состояние валидатора. Он представлен &lt;code&gt;#xsd_state{}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1531d8568b38b4970f1055504bbf9c235ba48c8c" translate="yes" xml:space="preserve">
          <source>The grammar starts with an optional &lt;code&gt;header&lt;/code&gt; section. The header is put first in the generated file, before the module declaration. The purpose of the header is to provide a means to make the documentation generated by EDoc look nicer. Each header line should be enclosed in double quotes, and newlines will be inserted between the lines. For example:</source>
          <target state="translated">Грамматика начинается с необязательного раздела &lt;code&gt;header&lt;/code&gt; . Заголовок помещается первым в сгенерированном файле перед объявлением модуля. Заголовок предназначен для того, чтобы сделать документацию, созданную с помощью EDoc, лучше. Каждая строка заголовка должна быть заключена в двойные кавычки, а новые строки будут вставлены между строками. Например:</target>
        </trans-unit>
        <trans-unit id="95e4974bf09526a8ed59c2c706017450837fabc7" translate="yes" xml:space="preserve">
          <source>The granularity of both measurement types can be high. Therefore, ensure that each individual measurement lasts for at least several seconds.</source>
          <target state="translated">Детализация обоих типов измерения может быть высокой.Поэтому убедитесь,что каждое отдельное измерение длится не менее нескольких секунд.</target>
        </trans-unit>
        <trans-unit id="db89aebec1f27ef7ea7b0173203949ea669de4bc" translate="yes" xml:space="preserve">
          <source>The graphical library &lt;code&gt;wx&lt;/code&gt; has extensive support for Unicode text.</source>
          <target state="translated">Графическая библиотека &lt;code&gt;wx&lt;/code&gt; имеет обширную поддержку текста Unicode.</target>
        </trans-unit>
        <trans-unit id="3809a7766a11eb66968ebebc3b973ccfe307fc2b" translate="yes" xml:space="preserve">
          <source>The group information properties override those set with the suite information function, and can in turn be overridden by test case information properties. For a list of valid information properties and more general information, see the &lt;code&gt;&lt;a href=&quot;#info_function&quot;&gt;Test Case Information Function&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Свойства информации о группе переопределяют те, которые заданы с помощью функции информации о наборе, и, в свою очередь, могут быть переопределены свойствами информации тестового примера. Список допустимых информационных свойств и более общую информацию см. В разделе &lt;code&gt;&lt;a href=&quot;#info_function&quot;&gt;Test Case Information Function&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a1851720cf81d08f4729a487b12a49fba130b63d" translate="yes" xml:space="preserve">
          <source>The group leader should be rarely changed in applications with a supervision tree, because OTP assumes the group leader of their processes is their application master.</source>
          <target state="translated">Лидер группы редко должен быть изменен в приложениях с деревом наблюдения,потому что OTP предполагает,что лидер группы их процессов является их мастером приложения.</target>
        </trans-unit>
        <trans-unit id="e52640716213a6b8b724c7b3e51f40080bcd9da2" translate="yes" xml:space="preserve">
          <source>The group path specification does not necessarily have to include &lt;strong&gt;all&lt;/strong&gt; groups in the path to the terminating group. &lt;code&gt;Common Test&lt;/code&gt; searches for all matching paths if an incomplete group path is specified.</source>
          <target state="translated">Спецификация группового пути не обязательно должна включать &lt;strong&gt;все&lt;/strong&gt; группы на пути к конечной группе. &lt;code&gt;Common Test&lt;/code&gt; ищет все подходящие пути, если указан неполный групповой путь.</target>
        </trans-unit>
        <trans-unit id="6fc0b568a02963a296071a7bbdb0400eec8c4cbb" translate="yes" xml:space="preserve">
          <source>The group specification feature, as presented in this section, can also be used in &lt;code&gt;&lt;a href=&quot;run_test_chapter#test_specifications&quot;&gt;Test Specifications&lt;/a&gt;&lt;/code&gt; (with some extra features added).</source>
          <target state="translated">Функцию групповой спецификации, представленную в этом разделе, также можно использовать в &lt;code&gt;&lt;a href=&quot;run_test_chapter#test_specifications&quot;&gt;Test Specifications&lt;/a&gt;&lt;/code&gt; (с добавлением некоторых дополнительных функций).</target>
        </trans-unit>
        <trans-unit id="75d39fc54f161038ac9929455075c4ce189bfbf6" translate="yes" xml:space="preserve">
          <source>The groups are given explicitly in this list. There may be several elements with the same &lt;code&gt;Size&lt;/code&gt;. In such a case, the server will choose one randomly in the negotiated Size.</source>
          <target state="translated">Группы явно указаны в этом списке. Может быть несколько элементов с одинаковым &lt;code&gt;Size&lt;/code&gt; . В таком случае сервер случайным образом выберет один из согласованного размера.</target>
        </trans-unit>
        <trans-unit id="57c1aab7095657e5f03ad172fdff464c6e0393b1" translate="yes" xml:space="preserve">
          <source>The guard BIFs: &lt;code&gt;abs&lt;/code&gt;, &lt;code&gt;element&lt;/code&gt;, &lt;code&gt;hd&lt;/code&gt;, &lt;code&gt;length&lt;/code&gt;, &lt;code&gt;node&lt;/code&gt;, &lt;code&gt;round&lt;/code&gt;, &lt;code&gt;size&lt;/code&gt;, &lt;code&gt;tl&lt;/code&gt;, &lt;code&gt;trunc&lt;/code&gt;, &lt;code&gt;self&lt;/code&gt;</source>
          <target state="translated">Охранные BIF: &lt;code&gt;abs&lt;/code&gt; , &lt;code&gt;element&lt;/code&gt; , &lt;code&gt;hd&lt;/code&gt; , &lt;code&gt;length&lt;/code&gt; , &lt;code&gt;node&lt;/code&gt; , &lt;code&gt;round&lt;/code&gt; , &lt;code&gt;size&lt;/code&gt; , &lt;code&gt;tl&lt;/code&gt; , &lt;code&gt;trunc&lt;/code&gt; , &lt;code&gt;self&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cf11284c55c81df64e31546d61edba51bacfcf93" translate="yes" xml:space="preserve">
          <source>The guard section can contain any guard expression of Erlang. The following is a list of BIFs and expressions:</source>
          <target state="translated">В защитной секции может содержаться любое защитное выражение Эрланга.Ниже приведен список BIF-файлов и выражений:</target>
        </trans-unit>
        <trans-unit id="08f011ebed41a7bf74303ee2b30d0e5329b2ea66" translate="yes" xml:space="preserve">
          <source>The guard sequence, if any, is true.</source>
          <target state="translated">Последовательность охранников,если таковая существует,верна.</target>
        </trans-unit>
        <trans-unit id="62bcf1415cac5f3dd57f1ebc576c5455597afa32" translate="yes" xml:space="preserve">
          <source>The guard test &lt;code&gt;literal_is_map/1&lt;/code&gt; tests whether the given literal is a map. If the literal is a map, the instruction is unnecessary and can be removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8132b6cdea54ba22a3ae68fa6e8356318a3eb501" translate="yes" xml:space="preserve">
          <source>The halfword emulator uses the super carrier implementation to manage its low memory mappings thar are needed for all term storage. The super carrier can here not be configured by command line options. One could imagine a second configurable instance of the super carrier used by high memory allocation, but that has not been implemented.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7b45f8da83fb548c37fb358ea6dfad545fe99af" translate="yes" xml:space="preserve">
          <source>The handler has an overload protection mechanism that keeps the handler process and the Kernel application alive during high loads of log events. How overload protection works, and how to configure it, is described in the &lt;code&gt;&lt;a href=&quot;logger_chapter#overload_protection&quot;&gt;User's Guide &lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49c4b028972dd181f72352fd5792e1cbd70780a8" translate="yes" xml:space="preserve">
          <source>The handler has an overload protection mechanism that keeps the handler process and the Kernel application alive during high loads of log events. How overload protection works, and how to configure it, is described in the &lt;code&gt;&lt;a href=&quot;logger_chapter#overload_protection&quot;&gt;User's Guide&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">В обработчике есть механизм защиты от перегрузки, который поддерживает работу процесса обработчика и приложения ядра во время высокой загрузки событий журнала. Как работает защита от перегрузки и как ее настроить, описано в &lt;code&gt;&lt;a href=&quot;logger_chapter#overload_protection&quot;&gt;User's Guide&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2de57b137d6629cde5167564ce3d26dcfae749ef" translate="yes" xml:space="preserve">
          <source>The handler identity is associated with the &lt;code&gt;id&lt;/code&gt; key in &lt;code&gt;Config1&lt;/code&gt;.</source>
          <target state="translated">Идентификатор обработчика связан с ключом &lt;code&gt;id&lt;/code&gt; в &lt;code&gt;Config1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4eeb6be906051436af44ca3913114022b11b4c8a" translate="yes" xml:space="preserve">
          <source>The handler identity is associated with the &lt;code&gt;id&lt;/code&gt; key in &lt;code&gt;Config&lt;/code&gt;.</source>
          <target state="translated">Идентификатор обработчика связан с ключом &lt;code&gt;id&lt;/code&gt; в &lt;code&gt;Config&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ba56ddadb179e3c4c78c9f3318f09f731a34f26a" translate="yes" xml:space="preserve">
          <source>The handler identity is associated with the &lt;code&gt;id&lt;/code&gt; key in &lt;code&gt;OldConfig&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88387fc69eaf6d2117329bee1a573a3818611863" translate="yes" xml:space="preserve">
          <source>The handler is not overload protected.</source>
          <target state="translated">Обработчик не защищен от перегрузок.</target>
        </trans-unit>
        <trans-unit id="d7cc7f26c0b9fef31e9d9003214e5eb8f80f6985" translate="yes" xml:space="preserve">
          <source>The handler must log the event.</source>
          <target state="translated">Обработчик должен зарегистрировать событие.</target>
        </trans-unit>
        <trans-unit id="91c3bfd8524a78feb62740d6ae1b2a4f89bcfb08" translate="yes" xml:space="preserve">
          <source>The handler process keeps track of the length of its message queue and takes some form of action when the current length exceeds a configurable threshold. The purpose is to keep the handler in, or to as quickly as possible get the handler into, a state where it can keep up with the pace of incoming log events. The memory use of the handler must never grow larger and larger, since that will eventually cause the handler to crash. These three thresholds, with associated actions, exist:</source>
          <target state="translated">Процесс обработчик отслеживает длину своей очереди сообщений и предпринимает те или иные действия,когда текущая длина превышает настраиваемый порог.Цель заключается в том,чтобы удержать обработчик в состоянии,в котором он может следить за темпами входящих лог-событий,или как можно быстрее привести обработчик в такое состояние,в котором он сможет удержать скорость входящих лог-событий.Использование памяти обработчиком никогда не должно увеличиваться,так как это в конечном итоге приведет к его аварийному завершению.Эти три порога,с соответствующими действиями,существуют:</target>
        </trans-unit>
        <trans-unit id="d669a7746b992304543fe0d69213b6644ee12b90" translate="yes" xml:space="preserve">
          <source>The handlers are called in sequence, and the order is not defined.</source>
          <target state="translated">Обработчики вызываются последовательно,и порядок их действий не определяется.</target>
        </trans-unit>
        <trans-unit id="fa6b9a858fe6ebad4a9654a225cc08daa061a060" translate="yes" xml:space="preserve">
          <source>The handling of a backslash followed by a digit other than 0 is complicated, and Perl has changed in recent releases, causing PCRE also to change. Outside a character class, PCRE reads the digit and any following digits as a decimal number. If the number is &amp;lt; 8, or if there have been at least that many previous capturing left parentheses in the expression, the entire sequence is taken as a &lt;strong&gt;back reference&lt;/strong&gt;. A description of how this works is provided later, following the discussion of parenthesized subpatterns.</source>
          <target state="translated">Обработка обратной косой черты, за которой следует цифра, отличная от 0, сложна, и Perl изменился в последних выпусках, что привело к изменению и PCRE. Вне класса символов PCRE считывает цифру и любые последующие цифры как десятичное число. Если число &amp;lt;8 или если в выражении было по крайней мере столько же предыдущих захватывающих левых скобок, вся последовательность принимается как &lt;strong&gt;обратная ссылка&lt;/strong&gt; . Описание того, как это работает, будет дано позже, после обсуждения заключенных в скобки подшаблонов.</target>
        </trans-unit>
        <trans-unit id="ce133ffa97494a3447425009d85e45fe4a4884e0" translate="yes" xml:space="preserve">
          <source>The handling of dot is entirely independent of the handling of circumflex and dollar, the only relationship is that both involve newlines. Dot has no special meaning in a character class.</source>
          <target state="translated">Обращение с точкой совершенно не зависит от обращения с циркумфлексом и долларом,единственное отношение заключается в том,что и то,и другое связано с новыми линиями.Точка не имеет особого значения в классе персонажей.</target>
        </trans-unit>
        <trans-unit id="75675acc51f4abea249c539fbe54b590467b1b3e" translate="yes" xml:space="preserve">
          <source>The handshake will continue, but &lt;code&gt;A&lt;/code&gt; is informed that &lt;code&gt;B&lt;/code&gt; has another ongoing connection attempt that will be shut down (simultaneous connect where &lt;code&gt;A&lt;/code&gt;'s name is greater than &lt;code&gt;B&lt;/code&gt;'s name, compared literally).</source>
          <target state="translated">Рукопожатие будет продолжено, но &lt;code&gt;A&lt;/code&gt; будет проинформирован о том, что у &lt;code&gt;B&lt;/code&gt; есть еще одна текущая попытка подключения, которая будет закрыта (одновременное подключение, когда имя &lt;code&gt;A&lt;/code&gt; больше имени &lt;code&gt;B&lt;/code&gt; , в буквальном сравнении).</target>
        </trans-unit>
        <trans-unit id="aff3a3821cc248a671eac45e5517c958f3438bd4" translate="yes" xml:space="preserve">
          <source>The handshake will continue.</source>
          <target state="translated">Рукопожатие будет продолжаться.</target>
        </trans-unit>
        <trans-unit id="c48205cabd15c9a3f6c801a9934891e2a4ee54fe" translate="yes" xml:space="preserve">
          <source>The handshake will not continue, as &lt;code&gt;B&lt;/code&gt; already has an ongoing handshake, which it itself has initiated (simultaneous connect where &lt;code&gt;B&lt;/code&gt;'s name is greater than &lt;code&gt;A&lt;/code&gt;'s).</source>
          <target state="translated">Рукопожатие не будет продолжено, так как &lt;code&gt;B&lt;/code&gt; уже имеет текущее рукопожатие, которое он сам инициировал (одновременное соединение, когда имя &lt;code&gt;B&lt;/code&gt; больше, чем имя &lt;code&gt;A&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="72e0eb34a71e071e1bf667f76e1e7cd53ed3e052" translate="yes" xml:space="preserve">
          <source>The handshake willl continue, but &lt;code&gt;A&lt;/code&gt; requested a dynamic node name by setting flag &lt;code&gt;&lt;a href=&quot;#DFLAG_NAME_ME&quot;&gt; DFLAG_NAME_ME&lt;/a&gt;&lt;/code&gt;. The dynamic node name of &lt;code&gt;A&lt;/code&gt; is supplied at the end of the status message from &lt;code&gt;B&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a492d4993cb9390498042b969391a3f2772dbec" translate="yes" xml:space="preserve">
          <source>The hardware watchdog timer, which is controlled by the &lt;code&gt;heart&lt;/code&gt; port program, requires package &lt;code&gt;FORCEvme&lt;/code&gt;, which contains the VME bus driver, to be installed. However, this driver can clash with the Sun &lt;code&gt;mcp&lt;/code&gt; driver and cause the system to refuse to boot. To cure this problem, the following lines are to be added to &lt;code&gt;/etc/system&lt;/code&gt;:</source>
          <target state="translated">Для аппаратного сторожевого таймера, который управляется программой &lt;code&gt;heart&lt;/code&gt; порта, необходимо &lt;code&gt;FORCEvme&lt;/code&gt; пакет FORCEvme , содержащий драйвер шины VME. Однако этот драйвер может конфликтовать с драйвером Sun &lt;code&gt;mcp&lt;/code&gt; и вызывать отказ системы при загрузке. Чтобы решить эту проблему, необходимо добавить в &lt;code&gt;/etc/system&lt;/code&gt; следующие строки :</target>
        </trans-unit>
        <trans-unit id="125af3159613fc9036721ee12ed405dbec75519c" translate="yes" xml:space="preserve">
          <source>The head contains pointers to beginning of the list (&lt;code&gt;head.first&lt;/code&gt;), and to the first block which other threads may refer to (&lt;code&gt;head.unref_end&lt;/code&gt;). Blocks between these pointers are only refered to by the head part of the data structure which is only used by the thread owning the allocator instance. When these two pointers are not equal the thread owning the allocator instance deallocate block after block until &lt;code&gt;head.first&lt;/code&gt; reach &lt;code&gt;head.unref_end&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e6408f5b48151485bdfcfab3159c61f5c8fa341" translate="yes" xml:space="preserve">
          <source>The head element of list &lt;code&gt;t&lt;/code&gt;.</source>
          <target state="translated">Элемент заголовка списка &lt;code&gt;t&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5798187c9bcc3504a1324e24484f637b68bd2984" translate="yes" xml:space="preserve">
          <source>The head of the &lt;code&gt;modify_algs_list()&lt;/code&gt; modifies &lt;code&gt;A&lt;/code&gt; giving the result &lt;code&gt;A'&lt;/code&gt;.</source>
          <target state="translated">Глава &lt;code&gt;modify_algs_list()&lt;/code&gt; изменяет дает результата &lt;code&gt;A'&lt;/code&gt; . &lt;code&gt;A&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4983c0390f19223c1a70e5dfad48870fe4110265" translate="yes" xml:space="preserve">
          <source>The head of the fun is a head matching (or mismatching) &lt;strong&gt;one&lt;/strong&gt; parameter, one object of the table we select from. The object is always a single variable (can be &lt;code&gt;_&lt;/code&gt;) or a tuple, as ETS, Dets, and Mnesia tables include that. The match specification returned by &lt;code&gt;ets:fun2ms/1&lt;/code&gt; can be used with &lt;code&gt;dets:select/2&lt;/code&gt; and &lt;code&gt;mnesia:select/2&lt;/code&gt;, and with &lt;code&gt;ets:select/2&lt;/code&gt;. The use of &lt;code&gt;=&lt;/code&gt; in the head is allowed (and encouraged) at the top-level.</source>
          <target state="translated">Заголовок игры - это заголовок, соответствующий (или несовпадающий) &lt;strong&gt;один&lt;/strong&gt; параметр, один объект таблицы, из которого мы выбираем. Объект всегда является одной переменной (может быть &lt;code&gt;_&lt;/code&gt; ) или кортежем, поскольку таблицы ETS, Dets и Mnesia включают это. Спецификацию соответствия, возвращаемую &lt;code&gt;ets:fun2ms/1&lt;/code&gt; , можно использовать с &lt;code&gt;dets:select/2&lt;/code&gt; и &lt;code&gt;mnesia:select/2&lt;/code&gt; , а также с &lt;code&gt;ets:select/2&lt;/code&gt; . Использование &lt;code&gt;=&lt;/code&gt; в заголовке разрешено (и приветствуется) на верхнем уровне.</target>
        </trans-unit>
        <trans-unit id="91864c391383ab349ccd4d45371e04aafcfcc9ac" translate="yes" xml:space="preserve">
          <source>The header and objects in the file are checksummed using the built-in MD5 functions. The MD5 sum of all objects is written in the file footer, so that verification while reading detects the slightest bitflip in the file data. Using this costs a fair amount of CPU time.</source>
          <target state="translated">Контрольная сумма заголовка и объектов в файле суммируется с помощью встроенных MD5-функций.Сумма MD5 всех объектов записывается в нижний колонтитул файла,так что при считывании проверка обнаруживает малейшее смещение битов в данных файла.Использование этого метода обходится в немалые затраты процессорного времени.</target>
        </trans-unit>
        <trans-unit id="2eb240ffbba0a0a325acedfed500d5fbbd4064ac" translate="yes" xml:space="preserve">
          <source>The header includes some system information:</source>
          <target state="translated">Заголовок содержит некоторую системную информацию:</target>
        </trans-unit>
        <trans-unit id="68595adcb3ea51d515a7e1ae094708cbf3e1144b" translate="yes" xml:space="preserve">
          <source>The header is &lt;strong&gt;not&lt;/strong&gt; stripped off.</source>
          <target state="translated">Заголовок &lt;strong&gt;не&lt;/strong&gt; сдирается.</target>
        </trans-unit>
        <trans-unit id="882ae0c9d1778c987cd41c3f90417de21ef032f7" translate="yes" xml:space="preserve">
          <source>The header name will be in lower case and should not be altered.</source>
          <target state="translated">Имя заголовка будет в нижнем регистре и не должно изменяться.</target>
        </trans-unit>
        <trans-unit id="af3ed8fba11aa29a77ab51965b8edb72b975c8e9" translate="yes" xml:space="preserve">
          <source>The header of the Erlang script in the example differs from a normal Erlang module. The first line is intended to be the interpreter line, which invokes &lt;code&gt;escript&lt;/code&gt;.</source>
          <target state="translated">Заголовок сценария Erlang в этом примере отличается от обычного модуля Erlang. Первая строка предназначена для строки интерпретатора, который вызывает &lt;code&gt;escript&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aef96215b80c7223d8af26cee2243d32f40daa22" translate="yes" xml:space="preserve">
          <source>The heap size of a process is quite hard to predict, especially the amount of memory that is used during the garbage collection. When contemplating using this option, it is recommended to first run it in production with &lt;code&gt;kill&lt;/code&gt; set to &lt;code&gt;false&lt;/code&gt; and inspect the log events to see what the normal peak sizes of the processes in the system is and then tune the value accordingly.</source>
          <target state="translated">Размер кучи процесса довольно сложно предсказать, особенно объем памяти, который используется во время сборки мусора. При рассмотрении использования этой опции рекомендуется сначала запустить ее в производственной &lt;code&gt;kill&lt;/code&gt; с параметром kill, установленным в &lt;code&gt;false&lt;/code&gt; , и проверить события журнала, чтобы увидеть, каковы нормальные пиковые размеры процессов в системе, а затем соответствующим образом настроить значение.</target>
        </trans-unit>
        <trans-unit id="5e2e37a09af7e8f1d009a1717a88fe618ed3d52c" translate="yes" xml:space="preserve">
          <source>The heavyweight commit protocol is also non-blocking, which allows the surviving participants and their coordinator to finish the transaction regardless (even if a node crashes in the middle of the commit protocol). When a node fails at startup, &lt;code&gt;Mnesia&lt;/code&gt; determines the outcome of the transaction and recovers it. Lightweight protocols, heavyweight protocols, and dirty updates, are dependent on other nodes to be operational to make the correct heavyweight transaction recovery decision.</source>
          <target state="translated">Тяжелый протокол фиксации также является неблокирующим, что позволяет выжившим участникам и их координатору завершить транзакцию независимо (даже если узел выходит из строя в середине протокола фиксации). Когда узел выходит из строя при запуске, &lt;code&gt;Mnesia&lt;/code&gt; определяет результат транзакции и восстанавливает его. Облегченные протоколы, тяжелые протоколы и грязные обновления зависят от работы других узлов, чтобы принять правильное решение о восстановлении тяжелых транзакций.</target>
        </trans-unit>
        <trans-unit id="cafb3c516580a793b7de731b14722e5eebd23ea8" translate="yes" xml:space="preserve">
          <source>The hexadecimal value &lt;code&gt;h...&lt;/code&gt;.</source>
          <target state="translated">Шестнадцатеричное &lt;code&gt;h...&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="11e5e2ec0fa10fbdd5f8dd78491bb19a12164f59" translate="yes" xml:space="preserve">
          <source>The hexadecimal value &lt;code&gt;hh&lt;/code&gt;.</source>
          <target state="translated">Шестнадцатеричное значение &lt;code&gt;hh&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="128b69f04629a68e0279c96ec1a253f91d734366" translate="yes" xml:space="preserve">
          <source>The highest distribution protocol version this node can handle. The value in OTP 23 and later is 6. Older nodes only support version 5.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74f0a534d2309926a7d494022615e9a9b4923160" translate="yes" xml:space="preserve">
          <source>The highest distribution version that this node can handle. The value in Erlang/OTP R6B and later is 5.</source>
          <target state="translated">Самая высокая версия дистрибутива,с которой может справиться этот узел.Значение в Erlang/OTP R6B и более поздних версиях-5.</target>
        </trans-unit>
        <trans-unit id="e6d5e73148170da646be47d0d2820dd158b592f1" translate="yes" xml:space="preserve">
          <source>The highest possible value an atomic in this array can hold.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c600ee0b23d77b0cbea4eb9c31cc63a396e63200" translate="yes" xml:space="preserve">
          <source>The home directory (on Unix, the value of $HOME):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a981eec686f456d91d8a6bc03a6775c554a6fb0" translate="yes" xml:space="preserve">
          <source>The home directory:</source>
          <target state="translated">Домашний каталог:</target>
        </trans-unit>
        <trans-unit id="2e797c1729cd1e5a1ad1f79c83782a1c6c07da5c" translate="yes" xml:space="preserve">
          <source>The hook function should return either the data to be exported, or a tuple &lt;code&gt;{'#xml-alias#', NewTag::atom()}&lt;/code&gt;, or a tuple &lt;code&gt;{'#xml-redefine#', Content}&lt;/code&gt;, where &lt;code&gt;Content&lt;/code&gt; is a content list (which can be on simple-form; see &lt;code&gt;export_simple/2&lt;/code&gt; for details).</source>
          <target state="translated">Функция перехвата должна возвращать либо данные , которые должны быть экспортированы или кортеж &lt;code&gt;{'#xml-alias#', NewTag::atom()}&lt;/code&gt; , или кортеж &lt;code&gt;{'#xml-redefine#', Content}&lt;/code&gt; , где &lt;code&gt;Content&lt;/code&gt; является список содержимого (который может быть в простой форме; подробности см. в &lt;code&gt;export_simple/2&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="4a1cb12a27b6d6707a5d80ba125a5cfb6386b02f" translate="yes" xml:space="preserve">
          <source>The hook options can also be specified in a configuration file with configuration variable &lt;code&gt;ct_conn_log&lt;/code&gt;:</source>
          <target state="translated">Параметры ловушки также можно указать в файле конфигурации с помощью переменной конфигурации &lt;code&gt;ct_conn_log&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="44ea7e5b4f10ff2cea08d024c8bb140192260555" translate="yes" xml:space="preserve">
          <source>The host &lt;code&gt;123.34.56.11&lt;/code&gt; and all machines on the &lt;code&gt;150.100.23&lt;/code&gt; subnet are allowed access.</source>
          <target state="translated">Хосту &lt;code&gt;123.34.56.11&lt;/code&gt; и всем машинам в подсети &lt;code&gt;150.100.23&lt;/code&gt; разрешен доступ.</target>
        </trans-unit>
        <trans-unit id="e966a241193fc6bb63b6fabbd2c9e1a2a953a3a8" translate="yes" xml:space="preserve">
          <source>The host &lt;code&gt;123.34.56.11&lt;/code&gt; and all machines on the &lt;code&gt;150.100.23&lt;/code&gt; subnet are not allowed access.</source>
          <target state="translated">Хост &lt;code&gt;123.34.56.11&lt;/code&gt; и все машины в подсети &lt;code&gt;150.100.23&lt;/code&gt; не имеют доступа.</target>
        </trans-unit>
        <trans-unit id="6b0786bc370f61e14470bf6a8ad6a449f7a915d2" translate="yes" xml:space="preserve">
          <source>The host keys directory could be changed with the option &lt;code&gt;&lt;a href=&quot;#type-system_dir_daemon_option&quot;&gt;system_dir&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Каталог ключей хоста можно изменить с помощью опции &lt;code&gt;&lt;a href=&quot;#type-system_dir_daemon_option&quot;&gt;system_dir&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f1ce6f26ae1c1552959452d15ed1085c717ae10b" translate="yes" xml:space="preserve">
          <source>The host keys directory could be changed with the option &lt;code&gt;&lt;a href=&quot;ssh_file#type-system_dir_daemon_option&quot;&gt;system_dir&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9b604c4b74d9d11babfaabdf3ff82c0f49b1f9b" translate="yes" xml:space="preserve">
          <source>The host that owns the &lt;code&gt;PublicHostKey&lt;/code&gt;. One or more IP addresses or hostnames.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d878e97eeb73ea425731416807f352daf86ada0a" translate="yes" xml:space="preserve">
          <source>The hrl generated from a dictionary specification defines records for the messages and grouped AVPs defined in &lt;code&gt;@messages&lt;/code&gt; and &lt;code&gt;@grouped&lt;/code&gt; sections. For each message or grouped AVP definition, a record is defined whose name is the message or AVP name, prefixed with any dictionary prefix defined with &lt;code&gt;@prefix&lt;/code&gt;, and whose fields are the names of the AVPs contained in the message or grouped AVP in the order specified in the definition in question. For example, the grouped AVP</source>
          <target state="translated">Hrl, сгенерированный из спецификации словаря, определяет записи для сообщений и сгруппированных AVP, определенных в &lt;code&gt;@messages&lt;/code&gt; и &lt;code&gt;@grouped&lt;/code&gt; . Для каждого сообщения или сгруппированного определения AVP определяется запись, имя которой является именем сообщения или AVP, с префиксом любого словарного префикса, определенным с помощью &lt;code&gt;@prefix&lt;/code&gt; , и чьи поля представляют собой имена AVP, содержащихся в сообщении или сгруппированных AVP в порядке указанное в рассматриваемом определении. Например, сгруппированный AVP</target>
        </trans-unit>
        <trans-unit id="962862212161f4c21176923512e551b47c09f8ac" translate="yes" xml:space="preserve">
          <source>The id of the child specification cannot be changed.</source>
          <target state="translated">Идентификатор спецификации ребенка не может быть изменен.</target>
        </trans-unit>
        <trans-unit id="b60d5fddce9e99cfeb5e02e09f9b009acf730f39" translate="yes" xml:space="preserve">
          <source>The id string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec73c64ab8b44c752ff6fc144d3c09d981d3ce09" translate="yes" xml:space="preserve">
          <source>The idea is that &lt;code&gt;prepare_loading&lt;/code&gt; could be called in parallel for different modules and returns a &quot;magic binary&quot; containing the internal state of each prepared module. Function &lt;code&gt;finish_loading&lt;/code&gt; could take a list of such states and do the finishing of all of them in one go.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f091d047abb87ec231553541a5fdb6a8b0e0548d" translate="yes" xml:space="preserve">
          <source>The idea is that it either matches a single character, or two identical characters surrounding a subpalindrome. In Perl, this pattern works; in PCRE it does not work if the pattern is longer than three characters. Consider the subject string &quot;abcba&quot;.</source>
          <target state="translated">Идея заключается в том,что он либо совпадает с одним символом,либо с двумя идентичными символами,окружающими субпалиндром.В Perl этот шаблон работает;в PCRE он не работает,если длина шаблона больше трех символов.Рассмотрим тематическую строку &quot;abcba&quot;.</target>
        </trans-unit>
        <trans-unit id="b7b5bed6fe9a9f3870ec94f665573cd5c7dd092c" translate="yes" xml:space="preserve">
          <source>The idea is to have a &lt;code&gt;Common Test&lt;/code&gt; test suite calling a property testing tool with special property test suites as defined by that tool. The usual Erlang application directory structure is assumed. The tests are collected in the &lt;code&gt;test&lt;/code&gt; directory of the application. The &lt;code&gt;test&lt;/code&gt; directory has a subdirectory &lt;code&gt;property_test&lt;/code&gt;, where everything needed for the property tests is collected.</source>
          <target state="translated">Идея состоит в том, чтобы иметь набор &lt;code&gt;Common Test&lt;/code&gt; тестов, вызывающих инструмент тестирования свойств со специальными наборами тестов свойств, как определено этим инструментом. Предполагается обычная структура каталогов приложения Erlang. Тесты собраны в каталоге &lt;code&gt;test&lt;/code&gt; приложения. В каталоге &lt;code&gt;test&lt;/code&gt; есть подкаталог &lt;code&gt;property_test&lt;/code&gt; , в котором собрано все необходимое для тестирования свойств.</target>
        </trans-unit>
        <trans-unit id="874f09de1158faee11366ea5b25b0d18155a826f" translate="yes" xml:space="preserve">
          <source>The idea is to write something like:</source>
          <target state="translated">Идея в том,чтобы написать что-то вроде:</target>
        </trans-unit>
        <trans-unit id="2b43394949b432b86ec282a4b358fba39ed208e0" translate="yes" xml:space="preserve">
          <source>The idea with this module is to have a &lt;code&gt;Common Test&lt;/code&gt; test suite calling a property testing tool with special property test suites as defined by that tool. The tests are collected in the &lt;code&gt;test&lt;/code&gt; directory of the application. The &lt;code&gt;test&lt;/code&gt; directory has a subdirectory &lt;code&gt;property_test&lt;/code&gt;, where everything needed for the property tests are collected. The usual Erlang application directory structure is assumed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35794ac2165e7b77623ae5db4356014c0f1e5071" translate="yes" xml:space="preserve">
          <source>The identifier for the table. If the table is a &lt;code&gt;named_table&lt;/code&gt;, this is the name.</source>
          <target state="translated">Идентификатор таблицы. Если таблица является &lt;code&gt;named_table&lt;/code&gt; , это имя.</target>
        </trans-unit>
        <trans-unit id="c9265c27cb6d21fb4993c197dde03dc4b3fe86fb" translate="yes" xml:space="preserve">
          <source>The identifier of a process group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="948f1754e2dc2f5e9da0d93fd230e4e30fc1f680" translate="yes" xml:space="preserve">
          <source>The identifier of the distribution controller identifier created by the acceptor process. To be passed along to &lt;code&gt;dist_util:handshake_other_started(HsData)&lt;/code&gt;.</source>
          <target state="translated">Идентификатор идентификатора контроллера распределения, созданный принимающим процессом. Для передачи &lt;code&gt;dist_util:handshake_other_started(HsData)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dcd66a26de4ddbf0baac1e4c1845007eafbabac4" translate="yes" xml:space="preserve">
          <source>The identifier of the distribution controller.</source>
          <target state="translated">Идентификатор распределительного контроллера.</target>
        </trans-unit>
        <trans-unit id="727ced51237452469691fc0707b1de9d7db70736" translate="yes" xml:space="preserve">
          <source>The identifier, an arbitrary string, should be reused whenever the same application (or node) wants to start the process. &lt;code&gt;nteventlog&lt;/code&gt; is informed about all events that have arrived to the eventlog since the last accepted message for the current identifier. As long as the same identifier is used, the same eventlog record will not be sent to &lt;code&gt;nteventlog&lt;/code&gt; more than once (with the exception of when graved system failures arise, in which case the last records written before the failure may be sent to Erlang again after reboot).</source>
          <target state="translated">Идентификатор, произвольная строка, следует повторно использовать всякий раз, когда одно и то же приложение (или узел) хочет запустить процесс. &lt;code&gt;nteventlog&lt;/code&gt; информируется обо всех событиях, которые поступили в журнал событий с момента последнего принятого сообщения для текущего идентификатора. Пока используется один и тот же идентификатор, &lt;code&gt;nteventlog&lt;/code&gt; та же запись журнала событий не будет отправляться в nteventlog более одного раза (за исключением случаев, когда возникают серьезные системные сбои, и в этом случае последние записи, записанные до сбоя, могут быть снова отправлены в Erlang после перезагрузка).</target>
        </trans-unit>
        <trans-unit id="cf2c592a7835be79474c810d342bb74da9b68ee0" translate="yes" xml:space="preserve">
          <source>The identity (handle) of a connection.</source>
          <target state="translated">Личность (ручка)соединения.</target>
        </trans-unit>
        <trans-unit id="3eb95f3e4536f6c8da749dd457d7ca442d214ff2" translate="yes" xml:space="preserve">
          <source>The identity of a generic instruction is its name combined with its arity. That means that it is allowed to define two distinct generic instructions having the same name but with different arities. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8db0de3330260ae6e24af59a9d387dbcefe2afa7" translate="yes" xml:space="preserve">
          <source>The identity of a server, specified in a configuration file.</source>
          <target state="translated">Личность сервера,указанная в конфигурационном файле.</target>
        </trans-unit>
        <trans-unit id="b7f13243df50ba1e63562b3ea5688ee42281b3c8" translate="yes" xml:space="preserve">
          <source>The immediate execution of signals may also cause a scheduler that is about to execute scheduled tasks to block waiting for the port lock. This is however more or less the only scenario where a scheduler needs to wait for the port lock. The maximum time it has to wait is the time it takes to execute one signal, since we always schedule signals when contention occurs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be2c0371fbc7fc4fed32a1fa7d6f534addbd004b" translate="yes" xml:space="preserve">
          <source>The implemenation of the distribution driver is not completely covered here, details about buffering and other things unrelated to driver writing are not explained. Likewise are some peculiarities of the UDS protocol not explained in detail. The chosen protocol is not important.</source>
          <target state="translated">Реализация драйвера дистрибутива здесь освещена не полностью,детали буферизации и другие вещи,не связанные с написанием драйвера,не объяснены.Также не разъясняются некоторые особенности протокола UDS.Выбранный протокол не важен.</target>
        </trans-unit>
        <trans-unit id="8024f6f807f5eee458a55b3f38fa11d2c9f7c8b5" translate="yes" xml:space="preserve">
          <source>The implementation based on the &lt;code&gt;gcc&lt;/code&gt;&lt;code&gt;__atomic_*&lt;/code&gt; builtins.</source>
          <target state="translated">Реализация на основе встроенных &lt;code&gt;__atomic_*&lt;/code&gt; &lt;code&gt;gcc&lt;/code&gt; __atomic_ * .</target>
        </trans-unit>
        <trans-unit id="d22b507e359bf39c3398b52ef33d5269e6b83f2b" translate="yes" xml:space="preserve">
          <source>The implementation changed in Erlang/OTP R15. Upgrading to R15 breaks applications that expect a specific output for a specified seed. The output is still deterministic number series, but different compared to releases older than R15. Seed &lt;code&gt;{0,0,0}&lt;/code&gt; does, for example, no longer produce a flawed series of only zeros.</source>
          <target state="translated">Реализация изменилась в Erlang / OTP R15. Обновление до R15 нарушает работу приложений, ожидающих определенного вывода для указанного начального числа. Выходные данные по-прежнему являются детерминированными числовыми рядами, но отличаются от выпусков более ранних, чем R15. Seed &lt;code&gt;{0,0,0}&lt;/code&gt; , например, больше не производит ошибочную серию, состоящую только из нулей.</target>
        </trans-unit>
        <trans-unit id="6e57239593fac73e93851550cca7543d1553b2c2" translate="yes" xml:space="preserve">
          <source>The implementation for an instruction largely follows the C syntax, except that the variables in the function head don't have any types. The &lt;code&gt;$&lt;/code&gt; before an identifier denotes a macro expansion. Thus, &lt;code&gt;$Src&lt;/code&gt; will expand to the code to pick up the source operand for the instruction and &lt;code&gt;$Dst&lt;/code&gt; to the code for the destination register.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17794ee5af2140bd9337aefc9afc392b9c6a3f30" translate="yes" xml:space="preserve">
          <source>The implementation of a system tracer process that produces this printout can look like this:</source>
          <target state="translated">Реализация процесса системного трассировщика,производящего эту распечатку,может выглядеть следующим образом:</target>
        </trans-unit>
        <trans-unit id="b110452523f370779c51e763c1f9fff3540f763c" translate="yes" xml:space="preserve">
          <source>The implementation of a test case. Call the functions to test and check the result. If something fails, ensure the function causes a runtime error or call &lt;code&gt;&lt;a href=&quot;ct#fail-1&quot;&gt;ct:fail/1,2&lt;/a&gt;&lt;/code&gt; (which also causes the test case process to terminate).</source>
          <target state="translated">Реализация тестового примера. Вызовите функции для проверки и проверки результата. Если что-то не удается, убедитесь, что функция вызывает ошибку времени выполнения, или вызовите &lt;code&gt;&lt;a href=&quot;ct#fail-1&quot;&gt;ct:fail/1,2&lt;/a&gt;&lt;/code&gt; (что также приводит к завершению процесса тестового примера).</target>
        </trans-unit>
        <trans-unit id="7fde479db40a86f01a45d84f1970e3229f422aaa" translate="yes" xml:space="preserve">
          <source>The implementation of different asynchronous signals in the virtual machine can vary over time, but the behavior always respects this concept of asynchronous signals being passed between entities as described above.</source>
          <target state="translated">Реализация различных асинхронных сигналов в виртуальной машине может варьироваться во времени,но в поведении всегда соблюдается это понятие асинхронных сигналов,передаваемых между сущностями,как описано выше.</target>
        </trans-unit>
        <trans-unit id="78fb563a772c1aec013eb172f1594ea4c2023024" translate="yes" xml:space="preserve">
          <source>The implementation of lookbehind assertions is, for each alternative, to move the current position back temporarily by the fixed length and then try to match. If there are insufficient characters before the current position, the assertion fails.</source>
          <target state="translated">Реализация lookbehind-условий заключается в том,чтобы для каждой альтернативы временно передвинуть текущую позицию назад на фиксированную длину и затем попытаться найти совпадение.Если до текущей позиции не хватает символов,то утверждение не удается.</target>
        </trans-unit>
        <trans-unit id="3d2de14800dacea35c160c2ae6466067a774afa3" translate="yes" xml:space="preserve">
          <source>The implementation of specific instructions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47c1e5901ab1f453c1b563ce5cd6710f3f98aaf0" translate="yes" xml:space="preserve">
          <source>The implementation of the port mechanism depends on the platform. For UNIX, pipes are used and the external program is assumed to read from standard input and write to standard output. The external program can be written in any programming language as long as it can handle the interprocess communication mechanism with which the port is implemented.</source>
          <target state="translated">Реализация механизма порта зависит от платформы.Для UNIX используются трубы и предполагается,что внешняя программа читает со стандартного входа и записывает на стандартный выход.Внешняя программа может быть написана на любом языке программирования до тех пор,пока она может обрабатывать механизм межпроцессного взаимодействия,с которым реализован порт.</target>
        </trans-unit>
        <trans-unit id="478af3e7f92746327d6e9ba13837a8097b170322" translate="yes" xml:space="preserve">
          <source>The implementation of the statistic counters is lightweight. I.e. the statistic counters are handled separately by different entities of the application. For instance our two transport module(s) (see &lt;code&gt;&lt;a href=&quot;megaco_tcp#stats&quot;&gt;megaco_tcp&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;megaco_udp#stats&quot;&gt;megaco_udp&lt;/a&gt;&lt;/code&gt;) maintain their own counters and the application engine (see &lt;code&gt;&lt;a href=&quot;megaco#stats&quot;&gt;megaco&lt;/a&gt;&lt;/code&gt;) maintain its own counters.</source>
          <target state="translated">Счетчики статистики реализованы очень легко. Т.е. счетчики статистики обрабатываются отдельно разными сущностями приложения. Например, два наших транспортных модуля (см. &lt;code&gt;&lt;a href=&quot;megaco_tcp#stats&quot;&gt;megaco_tcp&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;megaco_udp#stats&quot;&gt;megaco_udp&lt;/a&gt;&lt;/code&gt; ) поддерживают свои собственные счетчики, а движок приложения (см. &lt;code&gt;&lt;a href=&quot;megaco#stats&quot;&gt;megaco&lt;/a&gt;&lt;/code&gt; ) поддерживает свои собственные счетчики.</target>
        </trans-unit>
        <trans-unit id="716cda84a5a3ce734872d0714b71a2c1fee89dd9" translate="yes" xml:space="preserve">
          <source>The implementation of this function is based on the &lt;code&gt;terminate&lt;/code&gt; system message, and requires that the process handles system messages correctly. For information about system messages, see &lt;code&gt;&lt;a href=&quot;sys&quot;&gt;sys(3)&lt;/a&gt;&lt;/code&gt; and section &lt;code&gt; sys and proc_lib&lt;/code&gt; in OTP Design Principles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="298d2d2a07f7dd0f09f6657d3ded4573b0d17570" translate="yes" xml:space="preserve">
          <source>The implementation of this function is based on the &lt;code&gt;terminate&lt;/code&gt; system message, and requires that the process handles system messages correctly. For information about system messages, see &lt;code&gt;&lt;a href=&quot;sys&quot;&gt;sys(3)&lt;/a&gt;&lt;/code&gt; and section &lt;code&gt;sys and proc_lib&lt;/code&gt; in OTP Design Principles.</source>
          <target state="translated">Реализация этой функции основана на системном сообщении о &lt;code&gt;terminate&lt;/code&gt; и требует, чтобы процесс правильно обрабатывал системные сообщения. Для получения информации о системных сообщениях см. &lt;code&gt;&lt;a href=&quot;sys&quot;&gt;sys(3)&lt;/a&gt;&lt;/code&gt; и раздел &lt;code&gt;sys and proc_lib&lt;/code&gt; в Принципах проектирования OTP.</target>
        </trans-unit>
        <trans-unit id="8382bdd6585df4f1f98e136541a6143a6f059e2f" translate="yes" xml:space="preserve">
          <source>The implementation provided by Erlang/OTP.</source>
          <target state="translated">Реализация,предоставленная Erlang/OTP.</target>
        </trans-unit>
        <trans-unit id="104f3b2e40ab2c947482e817a2a795a82f73cf00" translate="yes" xml:space="preserve">
          <source>The implementation tries to generate compact code with respect to literals and lists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8260c038977748412f519079cece24fe64e2829f" translate="yes" xml:space="preserve">
          <source>The implementation using ets tables introduces a semantic incompatibility with older implementations. In those older implementations, using pure Erlang terms, the index was garbage collected like any other Erlang term and did not have to be deleted when discarded. An ets table is deleted only when the process creating it explicitly deletes it or when the creating process terminates.</source>
          <target state="translated">Реализация с использованием таблиц ets вводит семантическую несовместимость со старыми реализациями.В старых реализациях,используя чистые термины Erlang,индекс был мусорным,собранным,как и любой другой термин Erlang,и не подлежал удалению при отбрасывании.ets-таблица удаляется только тогда,когда создающий ее процесс явно удаляет ее или когда процесс создания завершается.</target>
        </trans-unit>
        <trans-unit id="d24ced9c8492598a6342e78545fd97461c5c3534" translate="yes" xml:space="preserve">
          <source>The important line is the last line in the function: the &lt;code&gt;do_read&lt;/code&gt; routine is called to handle new input. The remaining function handles input on a listen socket, which means that it is to be possible to do an accept on the socket, which is also recognized as a read event.</source>
          <target state="translated">Важной строкой является последняя строка функции: для обработки нового ввода &lt;code&gt;do_read&lt;/code&gt; процедура do_read . Оставшаяся функция обрабатывает ввод в прослушиваемом сокете, что означает, что должна быть возможность принять в сокете, что также распознается как событие чтения.</target>
        </trans-unit>
        <trans-unit id="d0e9c528ecacf2cef07eb906cdbaca615ae9bccf" translate="yes" xml:space="preserve">
          <source>The imported variables are replaced by match specification &lt;code&gt;const&lt;/code&gt; expressions, which is consistent with the static scoping for Erlang funs. However, local or global function calls cannot be in the guard or body of the fun. Calls to built-in match specification functions is of course allowed:</source>
          <target state="translated">Импортированный переменные заменяется спецификация матча &lt;code&gt;const&lt;/code&gt; выражений, что согласуется со статическим обзорным для Erlang забав. Однако локальные или глобальные вызовы функций не могут быть в центре внимания. Разумеется, разрешены вызовы встроенных функций спецификации соответствия:</target>
        </trans-unit>
        <trans-unit id="acfda62ec5b11dd2be3e7e609916ea872e30b97c" translate="yes" xml:space="preserve">
          <source>The imported variables will be replaced by match_spec &lt;code&gt;const&lt;/code&gt; expressions, which is consistent with the static scoping for Erlang &lt;code&gt;fun()&lt;/code&gt;s. Local or global function calls can not be in the guard or body of the fun however. Calls to builtin match_spec functions of course is allowed:</source>
          <target state="translated">Импортированные переменные будут заменены match_spec &lt;code&gt;const&lt;/code&gt; выражениями, что согласуется со статическим обзорного для Erlang &lt;code&gt;fun()&lt;/code&gt; S. Однако локальные или глобальные вызовы функций не могут быть в центре внимания. Конечно, разрешены вызовы встроенных функций match_spec:</target>
        </trans-unit>
        <trans-unit id="b6ac95d884fd736e90ac950cd4423c02c0280f1d" translate="yes" xml:space="preserve">
          <source>The imported variables will be replaced by match_spec &lt;code&gt;const&lt;/code&gt; expressions, which is consistent with the static scoping for Erlang &lt;code&gt;fun()&lt;/code&gt;s. Local or global function calls cannot be in the guard or body of the fun however. Calls to builtin match_spec functions of course is allowed:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19bfe86fb1471efac1e72c2d15460bf77e3a9408" translate="yes" xml:space="preserve">
          <source>The improved &lt;code&gt;&lt;a href=&quot;rand&quot;&gt;rand&lt;/a&gt;&lt;/code&gt; module is to be used instead of this module.</source>
          <target state="translated">Вместо этого модуля будет использоваться улучшенный модуль &lt;code&gt;&lt;a href=&quot;rand&quot;&gt;rand&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="15c1fb9f30dd76e79041f3806d5e4590f2c710b6" translate="yes" xml:space="preserve">
          <source>The included application can be started in two ways. This is described in the next two sections.</source>
          <target state="translated">Включенное приложение может быть запущено двумя способами.Это описано в следующих двух разделах.</target>
        </trans-unit>
        <trans-unit id="06e8644e190d6991435ff4de5c47198aaef4670f" translate="yes" xml:space="preserve">
          <source>The incoming message prior to encode or the outgoing message after encode.</source>
          <target state="translated">Входящее сообщение до кодирования или исходящее сообщение после кодирования.</target>
        </trans-unit>
        <trans-unit id="4f31b1830353b2c8d2b0ce96b3ddc62f7dea448b" translate="yes" xml:space="preserve">
          <source>The incoming/outgoing message. For an incoming message, a term corresponding to the configured &lt;code&gt;&lt;a href=&quot;diameter#decode_format&quot;&gt;decode format&lt;/a&gt;&lt;/code&gt; if the message can be decoded in a non-relay application, &lt;code&gt;undefined&lt;/code&gt; otherwise. For an outgoing message, setting a &lt;code&gt;[&lt;code&gt;&lt;a href=&quot;#header&quot;&gt;header()&lt;/a&gt;&lt;/code&gt; | &lt;code&gt;&lt;a href=&quot;#avp&quot;&gt;avp()&lt;/a&gt;&lt;/code&gt;]&lt;/code&gt; list is equivalent to setting the &lt;code&gt;header&lt;/code&gt; and &lt;code&gt;avps&lt;/code&gt; fields to the corresponding values.</source>
          <target state="translated">Входящее / исходящее сообщение. Для входящего сообщения - термин, соответствующий настроенному &lt;code&gt;&lt;a href=&quot;diameter#decode_format&quot;&gt;decode format&lt;/a&gt;&lt;/code&gt; если сообщение может быть декодировано в приложении без ретрансляции, в противном случае &lt;code&gt;undefined&lt;/code&gt; . Для исходящего сообщения установка &lt;code&gt;[&lt;code&gt;&lt;a href=&quot;#header&quot;&gt;header()&lt;/a&gt;&lt;/code&gt; | &lt;code&gt;&lt;a href=&quot;#avp&quot;&gt;avp()&lt;/a&gt;&lt;/code&gt;]&lt;/code&gt; эквивалентен установке в полях &lt;code&gt;header&lt;/code&gt; и &lt;code&gt;avps&lt;/code&gt; соответствующих значений.</target>
        </trans-unit>
        <trans-unit id="ed6f20fe9042257fdf8f4d534ef82f96072c8261" translate="yes" xml:space="preserve">
          <source>The increment value when calculating the new timer time (&lt;code&gt;wait_for&lt;/code&gt;). Note that this value &lt;strong&gt;can&lt;/strong&gt; be negative and that a timer restart can therefor lead to a &lt;code&gt;wait_for&lt;/code&gt; value of zero! It is up to the user to be aware of the consequences of a &lt;code&gt;wait_for&lt;/code&gt; value of zero.</source>
          <target state="translated">Значение приращения при вычислении нового времени таймера ( &lt;code&gt;wait_for&lt;/code&gt; ). Обратите внимание, что это значение &lt;strong&gt;может&lt;/strong&gt; быть отрицательным и перезапуск таймера может привести к нулевому значению &lt;code&gt;wait_for&lt;/code&gt; ! Пользователь должен осознавать последствия нулевого значения &lt;code&gt;wait_for&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b2b8955465cefc3c169ad13d16bfd76b94516280" translate="yes" xml:space="preserve">
          <source>The indentation features can be used to reindent large sections of a file. If some lines use nonstandard indentation they will be reindented.</source>
          <target state="translated">Функция отступа может быть использована для переманивания больших разделов файла.Если в некоторых строках используются нестандартные отступы,они будут перепечатаны.</target>
        </trans-unit>
        <trans-unit id="3228c669ff974e48e8faf71906a7cfa3fca40c98" translate="yes" xml:space="preserve">
          <source>The indexing capabilities of &lt;code&gt;Mnesia&lt;/code&gt; are used with the following three functions, which retrieve and match records based on index entries in the database:</source>
          <target state="translated">Возможности индексирования &lt;code&gt;Mnesia&lt;/code&gt; используются со следующими тремя функциями, которые извлекают и сопоставляют записи на основе записей индекса в базе данных:</target>
        </trans-unit>
        <trans-unit id="66a67c598f5e1e4fe6dac7c8d61746c5da5f3c1a" translate="yes" xml:space="preserve">
          <source>The indices must be given in descending order.</source>
          <target state="translated">Индексы должны быть приведены в порядке убывания.</target>
        </trans-unit>
        <trans-unit id="0c9802ae4d36471d390cc5236f59166f9448cefa" translate="yes" xml:space="preserve">
          <source>The indices must be integer literals, not variables or expressions.</source>
          <target state="translated">Индексы должны быть целыми числами,а не переменными или выражениями.</target>
        </trans-unit>
        <trans-unit id="d32435d41ff7d589ba94cc7995cb7739a9bc6203" translate="yes" xml:space="preserve">
          <source>The info returned by this function is returned together with other info collected by the agent when the &lt;code&gt;&lt;a href=&quot;snmpa#info&quot;&gt;info&lt;/a&gt;&lt;/code&gt; function is called (tagged with with the key &lt;code&gt;net_if&lt;/code&gt;).</source>
          <target state="translated">Информация, возвращаемая этой функцией, возвращается вместе с другой информацией, собранной агентом при вызове функции &lt;code&gt;&lt;a href=&quot;snmpa#info&quot;&gt;info&lt;/a&gt;&lt;/code&gt; (помеченной ключом &lt;code&gt;net_if&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="ec9fdae2e67074ae99c5bacfc96a607916bd07f0" translate="yes" xml:space="preserve">
          <source>The info returned by this function is returned together with other info collected by the manager when the &lt;code&gt;&lt;a href=&quot;snmpm#info&quot;&gt;info&lt;/a&gt;&lt;/code&gt; function is called (tagged with the key &lt;code&gt;net_if&lt;/code&gt;).</source>
          <target state="translated">Информация, возвращаемая этой функцией, возвращается вместе с другой информацией, собранной менеджером при вызове функции &lt;code&gt;&lt;a href=&quot;snmpm#info&quot;&gt;info&lt;/a&gt;&lt;/code&gt; (помеченной ключом &lt;code&gt;net_if&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="c4969c27d9e2b93f6c0c9f0dd0ae52939b796209" translate="yes" xml:space="preserve">
          <source>The info returned is basically up to the implementer to decide. The implementation provided by this application provides info about memory allocation and various socket information.</source>
          <target state="translated">Возвращаемая информация в основном зависит от решения исполнителя.Реализация,предоставляемая этим приложением,предоставляет информацию о выделении памяти и различные сведения о сокетах.</target>
        </trans-unit>
        <trans-unit id="b94457081093b8de25115749fb7f0e65291a036f" translate="yes" xml:space="preserve">
          <source>The info returned is basically up to the implementer to decide. This implementation provided by the application provides info about memory allocation and various socket information.</source>
          <target state="translated">Возвращаемая информация в основном зависит от решения исполнителя.Эта реализация,предоставляемая приложением,предоставляет информацию о выделении памяти и различные сведения о сокетах.</target>
        </trans-unit>
        <trans-unit id="8953da75c34f8aaee4e44739d4a4db94876e2705" translate="yes" xml:space="preserve">
          <source>The information about MIB Views for VACM should be stored in a file called &lt;code&gt;vacm.conf&lt;/code&gt;.</source>
          <target state="translated">Информация о представлениях MIB для VACM должна храниться в файле с именем &lt;code&gt;vacm.conf&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1a593d35263cd423914377045097ffa123820496" translate="yes" xml:space="preserve">
          <source>The information about Notify Definitions should be stored in a file called &lt;code&gt;notify.conf&lt;/code&gt;.</source>
          <target state="translated">Информация об определениях уведомлений должна храниться в файле с именем &lt;code&gt;notify.conf&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="db26f39dea524ffb501a0d56ccb46e2ba20ceda2" translate="yes" xml:space="preserve">
          <source>The information about Security data for USM should be stored in a file called &lt;code&gt;usm.conf&lt;/code&gt;, which must be present if the agent is configured for SNMPv3.</source>
          <target state="translated">Информация о данных безопасности для USM должна храниться в файле с именем &lt;code&gt;usm.conf&lt;/code&gt; , который должен присутствовать, если агент настроен для SNMPv3.</target>
        </trans-unit>
        <trans-unit id="307e4d8639265e2a32ea9ca56343b6ede5418d77" translate="yes" xml:space="preserve">
          <source>The information about Security data for USM should be stored in a file called &lt;code&gt;usm.conf&lt;/code&gt;, which must be present if the manager wishes to use SNMPv3 when communicating with agents. It is also possible to add usm data in run-time by calling the &lt;code&gt;&lt;a href=&quot;snmpm#register_usm_user&quot;&gt;register_usm_user&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Информация о данных безопасности для USM должна храниться в файле с именем &lt;code&gt;usm.conf&lt;/code&gt; , который должен присутствовать, если менеджер желает использовать SNMPv3 при взаимодействии с агентами. Также можно добавить данные usm во время выполнения, вызвав метод &lt;code&gt;&lt;a href=&quot;snmpm#register_usm_user&quot;&gt;register_usm_user&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ba12704a027dbf1ed0fe4c7e9af52e49cba83222" translate="yes" xml:space="preserve">
          <source>The information about Target Address Definitions should be stored in a file called &lt;code&gt;target_addr.conf&lt;/code&gt;.</source>
          <target state="translated">Информация об определениях целевых адресов должна храниться в файле с именем &lt;code&gt;target_addr.conf&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a40d6040ee67551c129f61fc60a30d2acba9667f" translate="yes" xml:space="preserve">
          <source>The information about Target Parameters Definitions should be stored in a file called &lt;code&gt;target_params.conf&lt;/code&gt;.</source>
          <target state="translated">Информация об определениях целевых параметров должна храниться в файле с именем &lt;code&gt;target_params.conf&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3aa4d245e100d97d0412e925606bc4810d337eae" translate="yes" xml:space="preserve">
          <source>The information about the new application specifications is fetched from the boot script included in the release package. Thus, it is important that the boot script is generated from the same &lt;code&gt;.rel&lt;/code&gt; file as is used to build the release package itself.</source>
          <target state="translated">Информация о новых спецификациях приложения берется из загрузочного скрипта, включенного в пакет выпуска. Таким образом, важно, чтобы сценарий загрузки создавался из того же файла &lt;code&gt;.rel&lt;/code&gt; , который используется для сборки самого пакета выпуска.</target>
        </trans-unit>
        <trans-unit id="391611f6929211ce72507251e567123fcf0c63db" translate="yes" xml:space="preserve">
          <source>The information from the analysis is displayed in the &lt;strong&gt;Log&lt;/strong&gt; window and the &lt;strong&gt;Warnings&lt;/strong&gt; window.</source>
          <target state="translated">Информация из анализа отображается в окне &lt;strong&gt;журнала и&lt;/strong&gt; окне &lt;strong&gt;предупреждений&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="14c6d60f6fb1b8c358808ee0563e8e58bb01c1ed" translate="yes" xml:space="preserve">
          <source>The information from the files specified with &lt;code&gt;-c&lt;/code&gt; and &lt;code&gt;-r&lt;/code&gt; is removed from the PLT. Notice that this can cause a reanalysis of the remaining dependent files.</source>
          <target state="translated">Информация из файлов, указанных с помощью &lt;code&gt;-c&lt;/code&gt; и &lt;code&gt;-r&lt;/code&gt; , удаляется из PLT. Обратите внимание, что это может вызвать повторный анализ оставшихся зависимых файлов.</target>
        </trans-unit>
        <trans-unit id="35a417a84c4c7c4decb79621743a9dd3565ee6be" translate="yes" xml:space="preserve">
          <source>The information function &lt;code&gt;init/end_per_suite()&lt;/code&gt; is called for &lt;code&gt;init/end_per_suite(Config)&lt;/code&gt;, and information function &lt;code&gt;init/end_per_group(GroupName)&lt;/code&gt; is called for &lt;code&gt;init/end_per_group(GroupName,Config)&lt;/code&gt;. However, information functions cannot be used with &lt;code&gt;init/end_per_testcase(TestCase, Config)&lt;/code&gt;, as these configuration functions execute on the test case process and use the same properties as the test case (that is, the properties set by the test case information function, &lt;code&gt;TestCase()&lt;/code&gt;). For a list of valid information properties and more general information, see the &lt;code&gt;&lt;a href=&quot;#info_function&quot;&gt;Test Case Information Function&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Информационная функция &lt;code&gt;init/end_per_suite()&lt;/code&gt; вызывается для &lt;code&gt;init/end_per_suite(Config)&lt;/code&gt; , а информационная функция &lt;code&gt;init/end_per_group(GroupName)&lt;/code&gt; вызывается для &lt;code&gt;init/end_per_group(GroupName,Config)&lt;/code&gt; . Однако информационные функции нельзя использовать с &lt;code&gt;init/end_per_testcase(TestCase, Config)&lt;/code&gt; , поскольку эти функции конфигурации выполняются в процессе тестового примера и используют те же свойства, что и тестовый пример (то есть свойства, установленные информационной функцией тестового примера, &lt;code&gt;TestCase()&lt;/code&gt; ). Список допустимых информационных свойств и более общую информацию см. В разделе &lt;code&gt;&lt;a href=&quot;#info_function&quot;&gt;Test Case Information Function&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="580ee4de3515f41920aad05c4796ca8a83145041" translate="yes" xml:space="preserve">
          <source>The information has the form of an Erlang expression where QLCs most likely occur. Depending on the format functions of mentioned QLC tables, it is not certain that the information is absolutely accurate.</source>
          <target state="translated">Информация имеет форму выражения Эрланг,в котором,скорее всего,встречаются QLC.В зависимости от функций форматирования упомянутых таблиц QLC,нет уверенности в том,что информация является абсолютно точной.</target>
        </trans-unit>
        <trans-unit id="305d9bd7c8803717b9892f1b41b37ab6f87fe9d8" translate="yes" xml:space="preserve">
          <source>The information needed to handle agents should be stored in a file called &lt;code&gt;agents.conf&lt;/code&gt;. It is also possible to add agents in run-time by calling the &lt;code&gt;&lt;a href=&quot;snmpm#register_agent&quot;&gt;register_agent&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Информация, необходимая для работы с агентами, должна храниться в файле с именем &lt;code&gt;agents.conf&lt;/code&gt; . Также возможно добавить агентов во время выполнения, вызвав &lt;code&gt;&lt;a href=&quot;snmpm#register_agent&quot;&gt;register_agent&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c58f25be105f880c4313e388829ec4c71197bfd3" translate="yes" xml:space="preserve">
          <source>The information presented here is as in the &lt;code&gt;connect&lt;/code&gt; case except that the client connections are grouped under an &lt;code&gt;accept&lt;/code&gt; tuple.</source>
          <target state="translated">Информация, представленная здесь, аналогична случаю &lt;code&gt;connect&lt;/code&gt; за исключением того, что клиентские подключения сгруппированы в кортеж &lt;code&gt;accept&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3c59dd2aeba1c3a9f59f5d5103b732b653592744" translate="yes" xml:space="preserve">
          <source>The information returned by the current invocation of function &lt;code&gt;info/1&lt;/code&gt; is gathered from the disk log process running on &lt;code&gt;Node&lt;/code&gt;.</source>
          <target state="translated">Информация, возвращаемая текущим вызовом функции &lt;code&gt;info/1&lt;/code&gt; , собирается из процесса журнала диска, запущенного на &lt;code&gt;Node&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="384d84cf094e7d37c004a133a85246195c3cf123" translate="yes" xml:space="preserve">
          <source>The information shown in a detail window can contain links to processes or ports. Clicking one of these links opens the detail window for the process or port in question. If the process or port resides on a remote node, no information is available. Clicking the link then displays a dialog where you can choose to open the detail window for the remote node.</source>
          <target state="translated">Информация,отображаемая в подробном окне,может содержать ссылки на процессы или порты.Щелчок по одной из этих ссылок открывает детальное окно для данного процесса или порта.Если процесс или порт находится на удаленном узле,информация недоступна.Щелчок по ссылке открывает диалоговое окно,в котором можно выбрать,чтобы открыть подробное окно для удаленного узла.</target>
        </trans-unit>
        <trans-unit id="60dd152dbc53269695c73395a416d9ac7faea4b7" translate="yes" xml:space="preserve">
          <source>The init Term</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49a50cd6647973c69a1bf7b4354e70d711a6ebe4" translate="yes" xml:space="preserve">
          <source>The init process evaluates &lt;code&gt;apply(Mod, Func, Args)&lt;/code&gt;. The system terminates if this results in an error. The boot procedure hangs if this function never returns.</source>
          <target state="translated">Процесс инициализации оценивает &lt;code&gt;apply(Mod, Func, Args)&lt;/code&gt; . Система прекращает работу, если это приводит к ошибке. Процедура загрузки зависает, если эта функция не возвращается.</target>
        </trans-unit>
        <trans-unit id="037f99c518dfc7896af931406a5af91aa71d2104" translate="yes" xml:space="preserve">
          <source>The initial &lt;code&gt;crypto_state()&lt;/code&gt; returned from the &lt;code&gt;&lt;a href=&quot;#type-init_fun&quot;&gt;init_fun()&lt;/a&gt;&lt;/code&gt; is folded into repeated applications of the &lt;code&gt;crypto_fun()&lt;/code&gt; in the &lt;code&gt;&lt;a href=&quot;#type-tar_crypto_spec&quot;&gt;tar_crypto_spec&lt;/a&gt;&lt;/code&gt;. The binary returned from that fun is sent to the remote SFTP server and the new &lt;code&gt;crypto_state()&lt;/code&gt; is used in the next call of the &lt;code&gt;crypto_fun()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70767c9929b242def2046198ed888e89eaa4092e" translate="yes" xml:space="preserve">
          <source>The initial Erlang shell does not read user input until the system boot procedure has been completed (Erlang/OTP 5.4 and later). This flag disables the start synchronization feature and lets the shell start in parallel with the rest of the system.</source>
          <target state="translated">Первоначальная оболочка Erlang не читает пользовательский ввод до тех пор,пока не будет завершена процедура загрузки системы (Erlang/OTP 5.4 и более поздние версии).Этот флаг отключает функцию стартовой синхронизации и позволяет оболочке запускаться параллельно с остальной системой.</target>
        </trans-unit>
        <trans-unit id="736895f627174e578045de3e4408955d43bc90d8" translate="yes" xml:space="preserve">
          <source>The initial configuration of the Megaco should be defined in the Erlang system configuration file. The following configured parameters are defined for the Megaco application:</source>
          <target state="translated">Первоначальная конфигурация Megaco должна быть определена в системном конфигурационном файле Erlang.Для приложения Megaco определены следующие конфигурируемые параметры:</target>
        </trans-unit>
        <trans-unit id="d4d81e5c16ade0725185a698be4a1277d1047896" translate="yes" xml:space="preserve">
          <source>The initial default values are set when creating an &lt;code&gt;&lt;a href=&quot;#xref_server&quot;&gt;Xref server&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Начальные значения по умолчанию устанавливаются при создании &lt;code&gt;&lt;a href=&quot;#xref_server&quot;&gt;Xref server&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="555d7eb44ef4a30035e00a3ca666e72b873a31f0" translate="yes" xml:space="preserve">
          <source>The initial goal is to trace file I/O operations.</source>
          <target state="translated">Первоначальной целью является отслеживание файловых операций ввода/вывода.</target>
        </trans-unit>
        <trans-unit id="c36732c8977a8d6008e73d867a36b382f99ddb9b" translate="yes" xml:space="preserve">
          <source>The initial motivation for this feature was customers asking for a way to pre-allocate physcial memory at VM start for it to use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="919c9a9b4091b878cb8ab57915d353c6c990a71d" translate="yes" xml:space="preserve">
          <source>The initial value of this option is set by the Kernel configuration parameter &lt;code&gt;&lt;a href=&quot;#logger_level&quot;&gt; logger_level&lt;/a&gt;&lt;/code&gt;. It is changed during runtime with &lt;code&gt;&lt;a href=&quot;logger#set_primary_config-2&quot;&gt; logger:set_primary_config(level,Level)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f43375679765975926ed43276d2e3e97141d5efc" translate="yes" xml:space="preserve">
          <source>The initial value of this option is set by the Kernel configuration parameter &lt;code&gt;&lt;a href=&quot;#logger_level&quot;&gt;logger_level&lt;/a&gt;&lt;/code&gt;. It is changed during runtime with &lt;code&gt;&lt;a href=&quot;logger#set_primary_config-2&quot;&gt;logger:set_primary_config(level,Level)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Начальное значение этой опции устанавливается параметром конфигурации ядра &lt;code&gt;&lt;a href=&quot;#logger_level&quot;&gt;logger_level&lt;/a&gt;&lt;/code&gt; . Он изменяется во время выполнения с помощью &lt;code&gt;&lt;a href=&quot;logger#set_primary_config-2&quot;&gt;logger:set_primary_config(level,Level)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b351bcf0a82253ef55d20c6de174d9148b8d48cc" translate="yes" xml:space="preserve">
          <source>The initial value of this option is set by the Kernel configuration parameter &lt;code&gt;&lt;a href=&quot;#logger_parameter&quot;&gt;logger&lt;/a&gt;&lt;/code&gt;. During runtime, primary filters are added and removed with &lt;code&gt;&lt;a href=&quot;logger#add_primary_filter-2&quot;&gt; logger:add_primary_filter/2&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;logger#remove_primary_filter-1&quot;&gt; logger:remove_primary_filter/1&lt;/a&gt;&lt;/code&gt;, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be84bb7f590bd193861c25c169900eba0112bb1a" translate="yes" xml:space="preserve">
          <source>The initial value of this option is set by the Kernel configuration parameter &lt;code&gt;&lt;a href=&quot;#logger_parameter&quot;&gt;logger&lt;/a&gt;&lt;/code&gt;. During runtime, primary filters are added and removed with &lt;code&gt;&lt;a href=&quot;logger#add_primary_filter-2&quot;&gt;logger:add_primary_filter/2&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;logger#remove_primary_filter-1&quot;&gt;logger:remove_primary_filter/1&lt;/a&gt;&lt;/code&gt;, respectively.</source>
          <target state="translated">Начальное значение этой опции устанавливается &lt;code&gt;&lt;a href=&quot;#logger_parameter&quot;&gt;logger&lt;/a&gt;&lt;/code&gt; параметров конфигурации ядра . Во время выполнения первичные фильтры добавляются и удаляются с помощью &lt;code&gt;&lt;a href=&quot;logger#add_primary_filter-2&quot;&gt;logger:add_primary_filter/2&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;logger#remove_primary_filter-1&quot;&gt;logger:remove_primary_filter/1&lt;/a&gt;&lt;/code&gt; соответственно.</target>
        </trans-unit>
        <trans-unit id="8b46dedd594f319e350068f1193c873d34aee425" translate="yes" xml:space="preserve">
          <source>The initial values for fields are to be compatible with (that is, a member of) the corresponding types. This is checked by the compiler and results in a compilation error if a violation is detected.</source>
          <target state="translated">Начальные значения для полей должны быть совместимы с (т.е.являться членами)соответствующих типов.Это проверяется компилятором и при обнаружении нарушения приводит к ошибке компиляции.</target>
        </trans-unit>
        <trans-unit id="b8dd5640afe4eb44c50f0dc55a49ff96c25b7ecf" translate="yes" xml:space="preserve">
          <source>The initial values for the managed objects defined in these tables, are read at start-up from a set of configuration files. These are described in &lt;code&gt;&lt;a href=&quot;snmp_config&quot;&gt;Configuration Files&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Начальные значения для управляемых объектов, определенных в этих таблицах, считываются при запуске из набора файлов конфигурации. Они описаны в &lt;code&gt;&lt;a href=&quot;snmp_config&quot;&gt;Configuration Files&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1bc56027c40e88b952495c29f19f297d464ec0de" translate="yes" xml:space="preserve">
          <source>The initial working directory of the Erlang emulator. Defaults to the system directory.</source>
          <target state="translated">Начальный рабочий каталог эмулятора Erlang.По умолчанию-системный каталог.</target>
        </trans-unit>
        <trans-unit id="bbe26b329d2acb042c7bfd92ae3556c450f2a952" translate="yes" xml:space="preserve">
          <source>The input &lt;code&gt;State&lt;/code&gt; is the last returned &lt;code&gt;State&lt;/code&gt;, in it the callback can include any data that it needs to keep track of when handling the chunks.</source>
          <target state="translated">Вход &lt;code&gt;State&lt;/code&gt; является последним возвращается &lt;code&gt;State&lt;/code&gt; , в ней обратный вызов может включать в себя любые данные , которые необходимо отслеживать при обращении с кусками.</target>
        </trans-unit>
        <trans-unit id="8ab1d9b79595ee9a80512a32c4f00246f558b37e" translate="yes" xml:space="preserve">
          <source>The input argument is passed from &lt;code&gt;Common Test&lt;/code&gt;, as defined in the test specification, or specified as an option to &lt;code&gt;ct_run&lt;/code&gt; or &lt;code&gt;ct:run_test&lt;/code&gt;.</source>
          <target state="translated">Входной аргумент передается из &lt;code&gt;Common Test&lt;/code&gt; , как определено в спецификации теста, или указывается как опция для &lt;code&gt;ct_run&lt;/code&gt; или &lt;code&gt;ct:run_test&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2b8a4a85bbd859e117dae9edd6f4ddaeebc656ee" translate="yes" xml:space="preserve">
          <source>The input characters. If the I/O device supports Unicode, the data can represent codepoints &amp;gt; 255 (the &lt;code&gt;latin1&lt;/code&gt; range). If the I/O server is set to deliver binaries, they are encoded in UTF-8 (regardless of whether the I/O device supports Unicode).</source>
          <target state="translated">Вводимые символы. Если устройство ввода-вывода поддерживает Unicode, данные могут представлять кодовые точки&amp;gt; 255 ( диапазон &lt;code&gt;latin1&lt;/code&gt; ). Если сервер ввода-вывода настроен на доставку двоичных файлов, они кодируются в UTF-8 (независимо от того, поддерживает ли устройство ввода-вывода Unicode).</target>
        </trans-unit>
        <trans-unit id="9a54dcf56c159353e0ace601f3572dfb662f8a6c" translate="yes" xml:space="preserve">
          <source>The input file is expected to be assembler code (default file suffix &quot;.S&quot;). Notice that the format of assembler files is not documented, and can change between releases.</source>
          <target state="translated">Предполагается,что входным файлом будет ассемблерный код (суффикс файла &quot;.S&quot; по умолчанию).Обратите внимание,что формат ассемблерных файлов не документирован и может меняться между релизами.</target>
        </trans-unit>
        <trans-unit id="401c0d476b7d6af409b8af21342fa3b0e4602412" translate="yes" xml:space="preserve">
          <source>The input file is expected to be core code (default file suffix &quot;.core&quot;). Notice that the format of core files is not documented, and can change between releases.</source>
          <target state="translated">Предполагается,что входным файлом будет код ядра (суффикс файла &quot;.core&quot; по умолчанию).Обратите внимание,что формат основных файлов не документирован и может меняться между релизами.</target>
        </trans-unit>
        <trans-unit id="b2d442ac0809ab496e2c13f718d563d47da7c5db" translate="yes" xml:space="preserve">
          <source>The input file should only contain the definition of BEAM&lt;strong&gt;FORMAT&lt;/strong&gt;NUMBER and external generic instructions. (Everything else would be ignored.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c34408a478470bcd1e23311cfada88e1b775acef" translate="yes" xml:space="preserve">
          <source>The input is a valid URI but how can you decode those percent-encoded octets? You can try to normalize the input with &lt;code&gt;&lt;a href=&quot;uri_string#normalize-1&quot;&gt;uri_string:normalize/1&lt;/a&gt;&lt;/code&gt;. The normalize operation decodes those percent-encoded triplets that correspond to a character in the unreserved set. Normalization is a safe, idempotent operation that converts a URI into its canonical form:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f68ee0fd471148681af709e832d148fec4d81211" translate="yes" xml:space="preserve">
          <source>The input is changed into a list of integers and sent to the driver.</source>
          <target state="translated">Ввод изменяется в список целых чисел и отправляется драйверу.</target>
        </trans-unit>
        <trans-unit id="895f0498a8445706072f6a486a101f535049625a" translate="yes" xml:space="preserve">
          <source>The input is complete. The result is one of the following:</source>
          <target state="translated">Ввод завершен.Результат один из следующих:</target>
        </trans-unit>
        <trans-unit id="4ee231fcc37d80538054d899a6aa444060d44d7f" translate="yes" xml:space="preserve">
          <source>The installation directory of Erlang/OTP, &lt;code&gt;$ROOT&lt;/code&gt;:</source>
          <target state="translated">Каталог установки Erlang / OTP, &lt;code&gt;$ROOT&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b211abaa6268b0cb1eb68387738a79dd87d7b54d" translate="yes" xml:space="preserve">
          <source>The installation of a new release can restart the system. Which program to use is specified by the SASL configuration parameter &lt;code&gt;start_prg&lt;/code&gt;, which defaults to &lt;code&gt;$ROOT/bin/start&lt;/code&gt;.</source>
          <target state="translated">Установка нового выпуска может перезапустить систему. Какую программу использовать определяется параметром конфигурации SASL &lt;code&gt;start_prg&lt;/code&gt; , который по умолчанию равен &lt;code&gt;$ROOT/bin/start&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b6426a93a1ac8fd4371599a87da39ac5721577a7" translate="yes" xml:space="preserve">
          <source>The installation procedure is automated. Double-click the &lt;code&gt;.exe&lt;/code&gt; file icon and follow the instructions.</source>
          <target state="translated">Процедура установки автоматизирована. Дважды щелкните значок файла &lt;code&gt;.exe&lt;/code&gt; и следуйте инструкциям.</target>
        </trans-unit>
        <trans-unit id="8df4540e0f132ae38a44f67dc8db64d1677a955e" translate="yes" xml:space="preserve">
          <source>The installation will be created in a location prefixed by &lt;code&gt;$DESTDIR&lt;/code&gt;. It can, however, not be run from there. It needs to be moved into the correct location before it can be run. If &lt;code&gt;DESTDIR&lt;/code&gt; have not been set but &lt;code&gt;INSTALL_PREFIX&lt;/code&gt; has been set, &lt;code&gt;DESTDIR&lt;/code&gt; will be set to &lt;code&gt;INSTALL_PREFIX&lt;/code&gt;. Note that &lt;code&gt;INSTALL_PREFIX&lt;/code&gt; in pre R13B04 was buggy and behaved as &lt;code&gt;EXTRA_PREFIX&lt;/code&gt; (see below). There are lots of areas of use for an installation procedure using &lt;code&gt;DESTDIR&lt;/code&gt;, e.g. when creating a package, cross compiling, etc. Here is an example where the installation should be located under &lt;code&gt;/opt/local&lt;/code&gt;:</source>
          <target state="translated">Установка будет создана в расположении с префиксом &lt;code&gt;$DESTDIR&lt;/code&gt; . Однако его нельзя запустить оттуда. Перед запуском его необходимо переместить в правильное место. Если &lt;code&gt;DESTDIR&lt;/code&gt; не был установлен, но установлен &lt;code&gt;INSTALL_PREFIX&lt;/code&gt; , &lt;code&gt;DESTDIR&lt;/code&gt; будет установлен в &lt;code&gt;INSTALL_PREFIX&lt;/code&gt; . Обратите внимание, что &lt;code&gt;INSTALL_PREFIX&lt;/code&gt; в версии до R13B04 содержал ошибки и вел себя как &lt;code&gt;EXTRA_PREFIX&lt;/code&gt; (см. Ниже). Существует множество областей использования процедуры установки с использованием &lt;code&gt;DESTDIR&lt;/code&gt; , например, при создании пакета, кросс-компиляции и т. Д. Вот пример, где установка должна быть расположена в &lt;code&gt;/opt/local&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="fc927e07960f46bc214f273ddf993919105c4192" translate="yes" xml:space="preserve">
          <source>The instruction loads the module and is necessary when running Erlang in embedded mode. It is not strictly required when running Erlang in interactive (default) mode, since the code server then automatically searches for and loads unloaded modules.</source>
          <target state="translated">Инструкция загружает модуль и необходима при работе Erlang во встроенном режиме.Она не является строго обязательной при запуске Erlang в интерактивном (по умолчанию)режиме,так как сервер кодов автоматически ищет и загружает выгруженные модули.</target>
        </trans-unit>
        <trans-unit id="0ad8974dbde3476a5985cc107445f129c6aef0af" translate="yes" xml:space="preserve">
          <source>The instruction must be a valid Erlang term ended by a dot.</source>
          <target state="translated">Инструкция должна быть действительным термином Erlang,заканчивающимся точкой.</target>
        </trans-unit>
        <trans-unit id="0d51d691ce36ba72ff972c51e18b40a26c5a340a" translate="yes" xml:space="preserve">
          <source>The instruction, and thus the &lt;code&gt;.appup&lt;/code&gt; file, when changing an existing child specification, is the same as when changing properties as described earlier:</source>
          <target state="translated">Инструкция и, следовательно, файл &lt;code&gt;.appup&lt;/code&gt; при изменении существующей дочерней спецификации такие же, как при изменении свойств, как описано ранее:</target>
        </trans-unit>
        <trans-unit id="bbfa8f2272191cf84529341c05c12c77d1783819" translate="yes" xml:space="preserve">
          <source>The instructions apply to Windows 10 (v.1809 and later) supporting the WSL.1 (Windows Subsystem for Linux v.1) and using Ubuntu 18.04 release.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5573a2cd0a733b9336e3b438f659165c812e003" translate="yes" xml:space="preserve">
          <source>The instructions apply to versions of Windows supporting the Cygwin emulated gnuish environment or the MSYS or MSYS2 ditto. We&amp;rsquo;ve built on the following platforms: Windows 2012, Windows 7, Windows 8 and Windows 10. It&amp;rsquo;s probably possible to build on older platforms too, but you might not be able to install the appropriate Microsoft SDK, Visual Studio or OpenSSL, in which case you will need to go back to earlier compilers etc.</source>
          <target state="translated">Инструкции применимы к версиям Windows, поддерживающим эмулированную среду Cygwin gnuish или MSYS или MSYS2. Мы построили на следующих платформах: Windows 2012, Windows 7, Windows 8 и Windows 10. Вероятно, можно построить и на более старых платформах, но вы не сможете установить соответствующий Microsoft SDK, Visual Studio или OpenSSL в в этом случае вам нужно будет вернуться к более ранним компиляторам и т. д.</target>
        </trans-unit>
        <trans-unit id="090f796df70e9e8b7e64375ada66ca8ada156c50" translate="yes" xml:space="preserve">
          <source>The instructions are defined like this (formatted with extra spaces for clarity):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d3f1d3485a54f5c6e38f89d6780900e703d6266" translate="yes" xml:space="preserve">
          <source>The integer interval for signed atomics are from &lt;code&gt;-(1 bsl 63)&lt;/code&gt; to &lt;code&gt;(1 bsl 63)-1&lt;/code&gt; and for unsigned atomics from &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;(1 bsl 64)-1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e507f2e1bdeb41dfac8c8cfdf517a26d52c4a6f" translate="yes" xml:space="preserve">
          <source>The integer of &lt;code&gt;t&lt;/code&gt;.</source>
          <target state="translated">Целое число &lt;code&gt;t&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="477d8b618ecfd772da7e539d868fb58baec9416c" translate="yes" xml:space="preserve">
          <source>The integers in all multibyte fields are in big-endian order.</source>
          <target state="translated">Целые числа во всех многобайтовых полях располагаются в большом порядке.</target>
        </trans-unit>
        <trans-unit id="a0118a7c55cd48f94a9248f5a7bb88a1090af613" translate="yes" xml:space="preserve">
          <source>The intent is that it shall be as &quot;close as possible&quot; to the OS level socket interface. The only significant addition is that some of the functions, e.g. &lt;code&gt;&lt;a href=&quot;#recv-3&quot;&gt;recv/3&lt;/a&gt;&lt;/code&gt;, has a timeout argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3faa469139bae1ec03d139d0a1bed92c79383290" translate="yes" xml:space="preserve">
          <source>The intention is to be compatible with the &lt;code&gt;&lt;a href=&quot;http://www.openssh.com&quot;&gt;OpenSSH&lt;/a&gt;&lt;/code&gt; storage in files. Therefore it mimics directories and filenames of &lt;code&gt;&lt;a href=&quot;http://www.openssh.com&quot;&gt;OpenSSH&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e32bedc7955d7223fe090b7e55010b6b9e5ac12" translate="yes" xml:space="preserve">
          <source>The intention of Trace Tool Builder is to serve as a base for tailor-made trace tools, but it can also be used directly from the Erlang shell (it can mimic &lt;code&gt;dbg&lt;/code&gt; behaviour while still providing useful additions, such as match specification shortcuts). Trace Tool Builder only allows the use of file port tracer, so to use other types of trace clients it is better to use &lt;code&gt;dbg&lt;/code&gt; directly.</source>
          <target state="translated">Назначение Trace Tool Builder - служить базой для специализированных инструментов трассировки, но его также можно использовать непосредственно из оболочки Erlang (он может имитировать поведение &lt;code&gt;dbg&lt;/code&gt; ,но при этом предоставляет полезные дополнения, такие как ярлыки соответствия спецификациям). Trace Tool Builder позволяет использовать только трассировщик файловых портов, поэтому для использования других типов клиентов трассировки лучше использовать &lt;code&gt;dbg&lt;/code&gt; напрямую.</target>
        </trans-unit>
        <trans-unit id="cd559a381bf43260a8e8db813fe8999b82c7f1c0" translate="yes" xml:space="preserve">
          <source>The intention of the restart mechanism is to prevent a situation where a process repeatedly dies for the same reason, only to be restarted again.</source>
          <target state="translated">Цель механизма перезапуска-предотвратить ситуацию,при которой процесс повторяется по одной и той же причине,только для того,чтобы его можно было перезапустить заново.</target>
        </trans-unit>
        <trans-unit id="f04e21c615bcaa3bab7ffca923abd7b20f74b1c4" translate="yes" xml:space="preserve">
          <source>The interaction of option &lt;code&gt;global&lt;/code&gt; with a regular expression that matches an empty string surprises some users. When option &lt;code&gt;global&lt;/code&gt; is specified, &lt;code&gt;run/3&lt;/code&gt; handles empty matches in the same way as Perl: a zero-length match at any point is also retried with options &lt;code&gt;[anchored, notempty_atstart]&lt;/code&gt;. If that search gives a result of length &amp;gt; 0, the result is included. Example:</source>
          <target state="translated">Взаимодействие опции &lt;code&gt;global&lt;/code&gt; с регулярным выражением, которое соответствует пустой строке, удивляет некоторых пользователей. Когда указан параметр &lt;code&gt;global&lt;/code&gt; , &lt;code&gt;run/3&lt;/code&gt; обрабатывает пустые совпадения так же, как Perl: совпадение нулевой длины в любой точке также повторяется с параметрами &lt;code&gt;[anchored, notempty_atstart]&lt;/code&gt; . Если этот поиск дает результат длины&amp;gt; 0, результат включается. Пример:</target>
        </trans-unit>
        <trans-unit id="645847dee511adf6054272dd5554738165580583" translate="yes" xml:space="preserve">
          <source>The interactive Erlang shell, when started to a terminal or started using command &lt;code&gt;werl&lt;/code&gt; on Windows, can support Unicode input and output.</source>
          <target state="translated">Интерактивная оболочка Erlang при запуске в терминал или с помощью команды &lt;code&gt;werl&lt;/code&gt; в Windows может поддерживать ввод и вывод Unicode.</target>
        </trans-unit>
        <trans-unit id="2c05014950fec7099736bfea7380c02569c92e76" translate="yes" xml:space="preserve">
          <source>The interface address description tuples are documented under the type of the &lt;code&gt;&lt;a href=&quot;#type-getifaddrs_ifopts&quot;&gt; Ifopts &lt;/a&gt;&lt;/code&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85316f7b39c18cba3ed8c41e6e00aa4508657f73" translate="yes" xml:space="preserve">
          <source>The interface between the &lt;code&gt;Collector&lt;/code&gt; and its &lt;code&gt;Viewers&lt;/code&gt; is public in order to enable other types of &lt;code&gt;Viewers&lt;/code&gt;. However in the following text we will focus on usage of the &lt;code&gt;et_viewer&lt;/code&gt;.</source>
          <target state="translated">Интерфейс между &lt;code&gt;Collector&lt;/code&gt; и его &lt;code&gt;Viewers&lt;/code&gt; является общедоступным, чтобы можно было использовать другие типы &lt;code&gt;Viewers&lt;/code&gt; . Однако в следующем тексте мы сосредоточимся на использовании &lt;code&gt;et_viewer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0d929ebaedeeb26c076c849c65d6a880fabbe836" translate="yes" xml:space="preserve">
          <source>The interface function &lt;code&gt;&lt;a href=&quot;ct#run_test-1&quot;&gt;ct:run_test/1&lt;/a&gt;&lt;/code&gt;, corresponding to the &lt;code&gt;ct_run&lt;/code&gt; program, is used for starting &lt;code&gt;Common Test&lt;/code&gt; from the Erlang shell (or an Erlang program). For details, see the &lt;code&gt;&lt;a href=&quot;ct&quot;&gt;ct&lt;/a&gt;&lt;/code&gt; manual page.</source>
          <target state="translated">Функция интерфейса &lt;code&gt;&lt;a href=&quot;ct#run_test-1&quot;&gt;ct:run_test/1&lt;/a&gt;&lt;/code&gt; , соответствующая программе &lt;code&gt;ct_run&lt;/code&gt; , используется для запуска &lt;code&gt;Common Test&lt;/code&gt; из оболочки Erlang (или программы Erlang). Подробности смотрите на странице руководства &lt;code&gt;&lt;a href=&quot;ct&quot;&gt;ct&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d8d5bf454a2abaa2d99599aa77da439bfb1b0e39" translate="yes" xml:space="preserve">
          <source>The interface functions (&lt;code&gt;start_link/1&lt;/code&gt; and &lt;code&gt;button/1&lt;/code&gt;) are located in the same module as the callback functions (&lt;code&gt;init/1&lt;/code&gt;, &lt;code&gt;locked/3&lt;/code&gt;, and &lt;code&gt;open/3&lt;/code&gt;). It is normally good programming practice to have the client-side code and the server-side code contained in one module.</source>
          <target state="translated">Функции интерфейса ( &lt;code&gt;start_link/1&lt;/code&gt; и &lt;code&gt;button/1&lt;/code&gt; ) расположены в том же модуле, что и функции обратного вызова ( &lt;code&gt;init/1&lt;/code&gt; , &lt;code&gt;locked/3&lt;/code&gt; и &lt;code&gt;open/3&lt;/code&gt; ). Обычно хорошей практикой программирования является то, что код на стороне клиента и код на стороне сервера содержатся в одном модуле.</target>
        </trans-unit>
        <trans-unit id="b3ffe36fe5fb02811ee7cbe99d87ab60dfaf7743" translate="yes" xml:space="preserve">
          <source>The interface functions (&lt;code&gt;start_link&lt;/code&gt;, &lt;code&gt;alloc&lt;/code&gt;, and &lt;code&gt;free&lt;/code&gt;) are then located in the same module as the callback functions (&lt;code&gt;init&lt;/code&gt;, &lt;code&gt;handle_call&lt;/code&gt;, and &lt;code&gt;handle_cast&lt;/code&gt;). This is normally good programming practice, to have the code corresponding to one process contained in one module.</source>
          <target state="translated">Функции интерфейса ( &lt;code&gt;start_link&lt;/code&gt; , &lt;code&gt;alloc&lt;/code&gt; и &lt;code&gt;free&lt;/code&gt; ) затем расположены в том же самом модуле, что и функции обратного вызова ( &lt;code&gt;init&lt;/code&gt; , &lt;code&gt;handle_call&lt;/code&gt; и &lt;code&gt;handle_cast&lt;/code&gt; ). Обычно это хорошая практика программирования, когда код, соответствующий одному процессу, содержится в одном модуле.</target>
        </trans-unit>
        <trans-unit id="81df0f8bc6de0b4acea945c7c93ea405daa969a9" translate="yes" xml:space="preserve">
          <source>The interface of the filter function is the same as the the filter functions for the good old &lt;code&gt;lists:filtermap/2&lt;/code&gt;. If the filter returns &lt;code&gt;false&lt;/code&gt; it means that the trace data should silently be dropped. &lt;code&gt;true&lt;/code&gt; means that the trace data data already is an &lt;code&gt;Event Record&lt;/code&gt; and that it should be kept as it is. &lt;code&gt;true&lt;/code&gt; means that the &lt;code&gt;TraceData&lt;/code&gt; already is an &lt;code&gt;Event Record&lt;/code&gt; and that it should be kept as it is. &lt;code&gt;{true, NewEvent}&lt;/code&gt; means that the original trace data should be replaced with &lt;code&gt;Event&lt;/code&gt;. This provides means to get rid of unwanted &lt;code&gt;Events&lt;/code&gt; as well as enabling alternate views of an &lt;code&gt;Event&lt;/code&gt;.</source>
          <target state="translated">Интерфейс функции фильтрации такой же, как и у функций фильтрации для старых добрых &lt;code&gt;lists:filtermap/2&lt;/code&gt; . Если фильтр возвращает &lt;code&gt;false&lt;/code&gt; , это означает, что данные трассировки следует отбросить без уведомления. &lt;code&gt;true&lt;/code&gt; означает, что данные трассировки уже являются &lt;code&gt;Event Record&lt;/code&gt; о событии и должны быть сохранены как есть. &lt;code&gt;TraceData&lt;/code&gt; &lt;code&gt;true&lt;/code&gt; означает, что TraceData уже является записью о &lt;code&gt;Event Record&lt;/code&gt; и ее следует сохранить как есть. &lt;code&gt;{true, NewEvent}&lt;/code&gt; означает, что исходные данные трассировки следует заменить на &lt;code&gt;Event&lt;/code&gt; . Это предоставляет средства для избавления от нежелательных &lt;code&gt;Events&lt;/code&gt; а также позволяет использовать альтернативные представления &lt;code&gt;Event&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="631992b55633d87ae608966e2309f0f4727adc29" translate="yes" xml:space="preserve">
          <source>The interface supports two basic scenarios of loading and unloading. Each scenario can also have the option of either killing ports when the driver is unloading, or waiting for the ports to close themselves. The scenarios are as follows:</source>
          <target state="translated">Интерфейс поддерживает два основных сценария загрузки и выгрузки.Каждый сценарий также может иметь возможность либо убить порты при разгрузке драйвера,либо подождать,пока порты закроются сами.Сценарии выглядят следующим образом:</target>
        </trans-unit>
        <trans-unit id="f6996c2e840da27c2e132b6627f75acd9d9d5a71" translate="yes" xml:space="preserve">
          <source>The intermediate stage for a connected socket. There is to be no processing of input for this socket.</source>
          <target state="translated">Промежуточный этап для подключенной розетки.Обработка входа для данного разъема не требуется.</target>
        </trans-unit>
        <trans-unit id="a87821499f533dec180c9e450557e45ce8484c82" translate="yes" xml:space="preserve">
          <source>The internal events are as follows:</source>
          <target state="translated">Внутренние события выглядят следующим образом:</target>
        </trans-unit>
        <trans-unit id="c740abc33f39344410422e82491682fb38f4e44d" translate="yes" xml:space="preserve">
          <source>The internal index of the port.</source>
          <target state="translated">Внутренний индекс порта.</target>
        </trans-unit>
        <trans-unit id="c0af405b79f15b6b1de096cfb80a2c7686eca2a0" translate="yes" xml:space="preserve">
          <source>The internal representations of abstract syntax trees are subject to change without notice, and should not be documented outside this module. Furthermore, we do not give any guarantees on how an abstract syntax tree may or may not be represented, &lt;strong&gt;with the following exceptions&lt;/strong&gt;: no syntax tree is represented by a single atom, such as &lt;code&gt;none&lt;/code&gt;, by a list constructor &lt;code&gt;[X | Y]&lt;/code&gt;, or by the empty list &lt;code&gt;[]&lt;/code&gt;. This can be relied on when writing functions that operate on syntax trees.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="965c55683139a0161e61ded48632af4d225cdd1d" translate="yes" xml:space="preserve">
          <source>The internal service name can be seen in the Windows service manager if viewing &lt;code&gt;Properties&lt;/code&gt; for an Erlang service.</source>
          <target state="translated">Имя внутренней службы можно увидеть в диспетчере служб Windows при просмотре &lt;code&gt;Properties&lt;/code&gt; службы Erlang.</target>
        </trans-unit>
        <trans-unit id="41156700bf653a3e0e4298bb097606750ea7e9b5" translate="yes" xml:space="preserve">
          <source>The interpretation in some detail for the three operators:</source>
          <target state="translated">Интерпретация в некоторых деталях для трех операторов:</target>
        </trans-unit>
        <trans-unit id="ebf147e57bc82f05aaff52b7bfcaac8dbd9b6556" translate="yes" xml:space="preserve">
          <source>The interpretation is left as an exercise.</source>
          <target state="translated">Интерпретация оставлена как упражнение.</target>
        </trans-unit>
        <trans-unit id="1933de0224d21786fb43f077472bddf757fd1f65" translate="yes" xml:space="preserve">
          <source>The interpretation of a URI depends only on the characters used and not on how those characters are represented in a network protocol.</source>
          <target state="translated">Интерпретация URI зависит только от используемых символов,а не от того,как эти символы представлены в сетевом протоколе.</target>
        </trans-unit>
        <trans-unit id="26e3837ab6ca4df148db60d98c6975bec751a92b" translate="yes" xml:space="preserve">
          <source>The interpretation of constants and variables are sets, and those sets can be used as the basis for forming new sets by the application of  &lt;strong id=&quot;set_operator&quot;&gt;set operators&lt;/strong&gt;. The syntax:</source>
          <target state="translated">Интерпретация констант и переменных - это наборы, и эти наборы могут использоваться в качестве основы для формирования новых наборов путем применения &lt;strong id=&quot;set_operator&quot;&gt;операторов&lt;/strong&gt; над &lt;strong id=&quot;set_operator&quot;&gt;наборами&lt;/strong&gt; . Синтаксис:</target>
        </trans-unit>
        <trans-unit id="e923c1f615d5158c088a332c75e5ac9dd307ac63" translate="yes" xml:space="preserve">
          <source>The interpretation of some LineOp operator applied to a set of function calls assigns to each call the set of line numbers where the first function calls the second function. Not all calls are assigned line numbers by all operators:</source>
          <target state="translated">Интерпретация некоторого оператора LineOp,применяемая к набору вызовов функций,присваивает каждому вызову набор номеров линий,где первая функция вызывает вторую функцию.Не всем вызовам операторы присваивают номера линий:</target>
        </trans-unit>
        <trans-unit id="aa994c33b9388f94e332b012c066b84d979eb038" translate="yes" xml:space="preserve">
          <source>The interpretation of the  &lt;strong id=&quot;count&quot;&gt;counting operator&lt;/strong&gt; is the number of elements of a set. The operator is undefined for closures. The &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt; and &lt;code&gt;*&lt;/code&gt; operators are interpreted as the obvious arithmetical operators when applied to numbers. The syntax of the counting operator:</source>
          <target state="translated">Интерпретация &lt;strong id=&quot;count&quot;&gt;счетного оператора&lt;/strong&gt; - это количество элементов в наборе. Оператор для замыканий не определен. Операторы &lt;code&gt;+&lt;/code&gt; , &lt;code&gt;-&lt;/code&gt; и &lt;code&gt;*&lt;/code&gt; интерпретируются как очевидные арифметические операторы при применении к числам. Синтаксис счетного оператора:</target>
        </trans-unit>
        <trans-unit id="029af9da1d3b7dfa078a55f2dfafcadb44b815ca" translate="yes" xml:space="preserve">
          <source>The interpretation of the  &lt;strong id=&quot;restriction&quot;&gt;restriction operators&lt;/strong&gt; is a subset of the first operand, a set of calls. The second operand, a set of vertices, is converted to the type of the first operand. The syntax of the restriction operators:</source>
          <target state="translated">Интерпретация &lt;strong id=&quot;restriction&quot;&gt;операторов ограничения&lt;/strong&gt; - это подмножество первого операнда, набор вызовов. Второй операнд, набор вершин, преобразуется в тип первого операнда. Синтаксис операторов ограничения:</target>
        </trans-unit>
        <trans-unit id="42a357f828f4be5cdec9a066f8f31849364dc8f3" translate="yes" xml:space="preserve">
          <source>The interpretation of the &lt;code&gt;Lin&lt;/code&gt; operator applied to a set of functions assigns to each function the line number where the function is defined. Unknown functions and functions of library modules are assigned the number 0.</source>
          <target state="translated">Интерпретация оператора &lt;code&gt;Lin&lt;/code&gt; , применяемого к набору функций, присваивает каждой функции номер строки, в которой функция определена. Неизвестным функциям и функциям библиотечных модулей присваивается номер 0.</target>
        </trans-unit>
        <trans-unit id="79e7f897549e217090e266a6ea8b4df3f84a5e55" translate="yes" xml:space="preserve">
          <source>The interpretation of the &lt;code&gt;closure&lt;/code&gt; operator is the transitive closure of the operand.</source>
          <target state="translated">Интерпретация оператора &lt;code&gt;closure&lt;/code&gt; - это транзитивное замыкание операнда.</target>
        </trans-unit>
        <trans-unit id="3da3bce7de2dcd2a2e677818a4ae2d0bdc921895" translate="yes" xml:space="preserve">
          <source>The interpretation of the &lt;code&gt;of&lt;/code&gt; operator is a chain of calls of the second operand (a set of calls) that passes throw all of the vertices of the first operand (a tuple of constants), in the given order. The second operand is converted to the type of the first operand. For instance, the &lt;code&gt;of&lt;/code&gt; operator can be used for finding out whether a function calls another function indirectly, and the chain of calls demonstrates how. The syntax of the graph analyzing operators:</source>
          <target state="translated">Интерпретация оператора &lt;code&gt;of&lt;/code&gt; - это цепочка вызовов второго операнда (набора вызовов), которая передает все вершины первого операнда (набор констант) в заданном порядке. Второй операнд преобразуется в тип первого операнда. Например, оператор &lt;code&gt;of&lt;/code&gt; может использоваться для определения того, вызывает ли функция другую функцию косвенно, а цепочка вызовов демонстрирует, как это сделать. Синтаксис операторов анализа графа:</target>
        </trans-unit>
        <trans-unit id="0eda32350bebfe83b0d81b3598e00fc83971c333" translate="yes" xml:space="preserve">
          <source>The interpretation of the cast operator depends on the named type &lt;code&gt;Type&lt;/code&gt;, the type of &lt;code&gt;Expression&lt;/code&gt;, and the structure of the elements of the interpretation of &lt;code&gt;Expression&lt;/code&gt;. If the named type is equal to the expression type, no conversion is done. Otherwise, the conversion is done one step at a time; &lt;code&gt;(Fun)&amp;nbsp;(App)&amp;nbsp;RE&lt;/code&gt;, for instance, is equivalent to &lt;code&gt;(Fun)&amp;nbsp;(Mod)&amp;nbsp;(App)&amp;nbsp;RE&lt;/code&gt;. Now assume that the interpretation of &lt;code&gt;Expression&lt;/code&gt; is a set of constants (functions, modules, applications or releases). If the named type is more general than the expression type, say &lt;code&gt;Mod&lt;/code&gt; and &lt;code&gt;Fun&lt;/code&gt; respectively, then the interpretation of the cast expression is the set of modules that have at least one of their functions mentioned in the interpretation of the expression. If the named type is more special than the expression type, say &lt;code&gt;Fun&lt;/code&gt; and &lt;code&gt;Mod&lt;/code&gt;, then the interpretation is the set of all the functions of the modules (in &lt;code&gt;modules&lt;/code&gt; mode, the conversion is partial since the local functions are not known). The conversions to and from applications and releases work analogously. For instance, &lt;code&gt;(App) &quot;xref_.*&quot; : Mod&lt;/code&gt; returns all applications containing at least one module such that &lt;code&gt;xref_&lt;/code&gt; is a prefix of the module name.</source>
          <target state="translated">Интерпретация оператора приведения зависит от именованного типа &lt;code&gt;Type&lt;/code&gt; , типа &lt;code&gt;Expression&lt;/code&gt; и структуры элементов интерпретации &lt;code&gt;Expression&lt;/code&gt; . Если именованный тип равен типу выражения, преобразование не выполняется. В противном случае преобразование выполняется поэтапно; &lt;code&gt;(Fun)&amp;nbsp;(App)&amp;nbsp;RE&lt;/code&gt; , например, эквивалентно &lt;code&gt;(Fun)&amp;nbsp;(Mod)&amp;nbsp;(App)&amp;nbsp;RE&lt;/code&gt; . Теперь предположим, что интерпретация &lt;code&gt;Expression&lt;/code&gt; - это набор констант (функций, модулей, приложений или выпусков). Если именованный тип более общий, чем тип выражения, скажем, &lt;code&gt;Mod&lt;/code&gt; и &lt;code&gt;Fun&lt;/code&gt; .соответственно, тогда интерпретация выражения приведения - это набор модулей, у которых есть хотя бы одна из своих функций, упомянутых в интерпретации выражения. Если именованный тип более особенный, чем тип выражения, например &lt;code&gt;Fun&lt;/code&gt; и &lt;code&gt;Mod&lt;/code&gt; , то интерпретация - это набор всех функций модулей (в режиме &lt;code&gt;modules&lt;/code&gt; преобразование является частичным, поскольку локальные функции неизвестны). Преобразования в приложения и выпуски и обратно работают аналогично. Например, &lt;code&gt;(App) &quot;xref_.*&quot; : Mod&lt;/code&gt; возвращает все приложения, содержащие хотя бы один модуль, так что &lt;code&gt;xref_&lt;/code&gt; является префиксом имени модуля.</target>
        </trans-unit>
        <trans-unit id="6993da444161dc204cc03e12d5fc3810b9cd2d1f" translate="yes" xml:space="preserve">
          <source>The interpretation of this time field depends on the operating system. On Unix, it is the last time the file or the &lt;code&gt;inode&lt;/code&gt; was changed. In Windows, it is the create time.</source>
          <target state="translated">Интерпретация этого поля времени зависит от операционной системы. В Unix это последний раз, когда файл или &lt;code&gt;inode&lt;/code&gt; изменялся. В Windows это время создания.</target>
        </trans-unit>
        <trans-unit id="91054e3a873098417a4f5c515e5ee9a48b04d7dd" translate="yes" xml:space="preserve">
          <source>The interpreted function call has returned a value, and the process is no longer executing interpreted code.</source>
          <target state="translated">Вызов интерпретируемой функции вернул значение,и процесс больше не выполняет интерпретируемый код.</target>
        </trans-unit>
        <trans-unit id="3cabfaea9757a021ed3e404bb4e938889922f05f" translate="yes" xml:space="preserve">
          <source>The interpreter depends on the Kernel, STDLIB, and GS applications. This means that modules belonging to any of these applications are not allowed to be interpreted, as it could lead to a deadlock or emulator crash. This also applies to modules belonging to the Debugger application.</source>
          <target state="translated">Переводчик зависит от приложений Kernel,STDLIB и GS.Это означает,что модули,принадлежащие любому из этих приложений,не могут быть интерпретированы,так как это может привести к тупику или аварийному завершению работы эмулятора.Это также относится к модулям,принадлежащим приложению Debugger.</target>
        </trans-unit>
        <trans-unit id="6b74c0c5597c96d6ab8e51a9cb5a0af4d7d7773f" translate="yes" xml:space="preserve">
          <source>The interpreter requires both the source code and the object code. The object code &lt;strong&gt;must&lt;/strong&gt; include debug information, that is, only modules compiled with option &lt;code&gt;debug_info&lt;/code&gt; set can be interpreted.</source>
          <target state="translated">Интерпретатору требуются как исходный код, так и объектный код. Код объекта &lt;strong&gt;должен&lt;/strong&gt; включать отладочную информацию, то есть только модули, скомпилированные с установленной опцией &lt;code&gt;debug_info&lt;/code&gt; , могут быть интерпретированы.</target>
        </trans-unit>
        <trans-unit id="a87e9cf7deb8f947251ab88b658e53f7027d6b5d" translate="yes" xml:space="preserve">
          <source>The introduction of Erlang monotonic time allows us to adjust the two Erlang times (Erlang monotonic time and Erlang system time) separately. By doing this, the accuracy of elapsed time does not have to suffer just because the system time happened to be wrong at some point in time. Separate adjustments of the two times are only performed in the time warp modes, and only fully separated in the &lt;code&gt;&lt;a href=&quot;#Multi_Time_Warp_Mode&quot;&gt;multi-time warp mode&lt;/a&gt;&lt;/code&gt;. All other modes than the multi-time warp mode are for backward compatibility reasons. When using these modes, the accuracy of Erlang monotonic time suffer, as the adjustments of Erlang monotonic time in these modes are more or less tied to Erlang system time.</source>
          <target state="translated">Введение монотонного времени Эрланга позволяет нам отдельно настраивать два времени Эрланга (монотонное время Эрланга и системное время Эрланга). Таким образом, точность истекшего времени не должна пострадать только потому, что системное время в какой-то момент оказалось неправильным. Отдельные настройки двух времен выполняются только в режимах временной деформации и полностью разделены только в режиме &lt;code&gt;&lt;a href=&quot;#Multi_Time_Warp_Mode&quot;&gt;multi-time warp mode&lt;/a&gt;&lt;/code&gt; . Все остальные режимы, кроме режима многократной деформации, предназначены для обратной совместимости. При использовании этих режимов страдает точность монотонного времени Эрланга, поскольку настройки монотонного времени Эрланга в этих режимах более или менее привязаны к системному времени Эрланга.</target>
        </trans-unit>
        <trans-unit id="4aa282f4900a445d575232fb66e91f370519721d" translate="yes" xml:space="preserve">
          <source>The inverse case of assertEqual, for convenience.</source>
          <target state="translated">Обратный случай assertEqual,для удобства.</target>
        </trans-unit>
        <trans-unit id="6c146628c3a85cf3e58449747def90c476aa8e70" translate="yes" xml:space="preserve">
          <source>The inverse case of assertMatch, for convenience.</source>
          <target state="translated">Обратный корпус assertMatch,для удобства.</target>
        </trans-unit>
        <trans-unit id="2bf283e78cc5757549c9cd4cea259895effeb450" translate="yes" xml:space="preserve">
          <source>The ip trace driver has a queue of &lt;code&gt;QueSize&lt;/code&gt; messages waiting to be delivered. If the driver cannot deliver messages as fast as they are produced by the runtime system, a special message is sent, which indicates how many messages that are dropped. That message will arrive at the handler function specified in &lt;code&gt;&lt;a href=&quot;#trace_client-3&quot;&gt;trace_client/3&lt;/a&gt;&lt;/code&gt; as the tuple &lt;code&gt;{drop, N}&lt;/code&gt; where &lt;code&gt;N&lt;/code&gt; is the number of consecutive messages dropped. In case of heavy tracing, drop's are likely to occur, and they surely occur if no client is reading the trace messages. The default value of &lt;code&gt;QueSize&lt;/code&gt; is 200.</source>
          <target state="translated">У драйвера трассировки ip есть очередь сообщений &lt;code&gt;QueSize&lt;/code&gt; , ожидающих доставки. Если драйвер не может доставлять сообщения так быстро, как они создаются системой времени выполнения, отправляется специальное сообщение, в котором указывается, сколько сообщений было отброшено. Это сообщение поступит в функцию-обработчик, указанную в &lt;code&gt;&lt;a href=&quot;#trace_client-3&quot;&gt;trace_client/3&lt;/a&gt;&lt;/code&gt; , как кортеж &lt;code&gt;{drop, N}&lt;/code&gt; где &lt;code&gt;N&lt;/code&gt; - количество отброшенных последовательных сообщений. В случае интенсивной трассировки вероятны потери, и они обязательно произойдут, если ни один клиент не читает сообщения трассировки. Значение &lt;code&gt;QueSize&lt;/code&gt; по умолчанию - 200.</target>
        </trans-unit>
        <trans-unit id="1cc4bd29058e4c95bb51a0143db9193819039f9d" translate="yes" xml:space="preserve">
          <source>The isolation property ensures that transactions that execute on different nodes in a network, and access and manipulate the same data records, do not interfere with each other. The isolation property makes it possible to execute the function &lt;code&gt;raise/2&lt;/code&gt; concurrently. A classical problem in concurrency control theory is the &quot;lost update problem&quot;.</source>
          <target state="translated">Свойство изоляции гарантирует, что транзакции, которые выполняются на разных узлах в сети, обращаются к одним и тем же записям данных и управляют ими, не мешают друг другу. Свойство изоляции позволяет одновременно выполнять функцию &lt;code&gt;raise/2&lt;/code&gt; . Классической проблемой теории управления параллелизмом является &amp;laquo;проблема потери обновлений&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="2b7ca45a26b149b7bec285f808a539b088d510f6" translate="yes" xml:space="preserve">
          <source>The isolation property is compromised, because other Erlang processes, which use transaction to manipulate the data, do not get the benefit of isolation if dirty operations simultaneously are used to read and write records from the same table.</source>
          <target state="translated">Свойство изоляции скомпрометировано,потому что другие процессы Erlang,использующие транзакции для манипулирования данными,не получают преимущества изоляции,если для чтения и записи записей из одной и той же таблицы одновременно используются грязные операции.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
