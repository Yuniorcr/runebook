<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="erlang">
    <body>
      <group id="erlang">
        <trans-unit id="f975f613537adf39477a68ad11e1dc4894dd6870" translate="yes" xml:space="preserve">
          <source>Action Mappings</source>
          <target state="translated">Картины действий</target>
        </trans-unit>
        <trans-unit id="2440fec108b517d1d709ba90c75d4f7a63c7e81f" translate="yes" xml:space="preserve">
          <source>ActionCall ::= {ActionFunction} | {ActionFunction, ActionTerm, ...}</source>
          <target state="translated">ActionCall ::={ActionFunction}| {ActionFunction,ActionTerm,...}</target>
        </trans-unit>
        <trans-unit id="5590c86022b5bc14c1ea74cf910bca92aa274578" translate="yes" xml:space="preserve">
          <source>ActionFunction ::= &lt;code&gt;set_seq_token&lt;/code&gt; | &lt;code&gt;get_seq_token&lt;/code&gt; | &lt;code&gt;message&lt;/code&gt; | &lt;code&gt;return_trace&lt;/code&gt; | &lt;code&gt;exception_trace&lt;/code&gt; | &lt;code&gt;process_dump&lt;/code&gt; | &lt;code&gt;enable_trace&lt;/code&gt; | &lt;code&gt;disable_trace&lt;/code&gt; | &lt;code&gt;trace&lt;/code&gt; | &lt;code&gt;display&lt;/code&gt; | &lt;code&gt;caller&lt;/code&gt; | &lt;code&gt;set_tcw&lt;/code&gt; | &lt;code&gt;silent&lt;/code&gt;</source>
          <target state="translated">ActionFunction :: = &lt;code&gt;set_seq_token&lt;/code&gt; | &lt;code&gt;get_seq_token&lt;/code&gt; | &lt;code&gt;message&lt;/code&gt; | &lt;code&gt;return_trace&lt;/code&gt; | &lt;code&gt;exception_trace&lt;/code&gt; | &lt;code&gt;process_dump&lt;/code&gt; | &lt;code&gt;enable_trace&lt;/code&gt; | &lt;code&gt;disable_trace&lt;/code&gt; | &lt;code&gt;trace&lt;/code&gt; | &lt;code&gt;display&lt;/code&gt; | &lt;code&gt;caller&lt;/code&gt; | &lt;code&gt;set_tcw&lt;/code&gt; | &lt;code&gt;silent&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="51c493fd8bfe5291ac344e060529e5b42558f385" translate="yes" xml:space="preserve">
          <source>ActionTerm ::= ConditionExpression | ActionCall</source>
          <target state="translated">ActionTerm ::=ConditionExpression | ActionCall</target>
        </trans-unit>
        <trans-unit id="c3cd636a585b20c40ac2df5ffb403e83cb2eef51" translate="yes" xml:space="preserve">
          <source>Actions</source>
          <target state="translated">Actions</target>
        </trans-unit>
        <trans-unit id="89ff6dbfdb936ca69e6587ae4d22e9a120904bf2" translate="yes" xml:space="preserve">
          <source>Actions :: [&lt;code&gt;&lt;a href=&quot;#type-action&quot;&gt;action()&lt;/a&gt;&lt;/code&gt;] | &lt;code&gt;&lt;a href=&quot;#type-action&quot;&gt;action()&lt;/a&gt;&lt;/code&gt;) -&amp;gt;</source>
          <target state="translated">Действия :: [ &lt;code&gt;&lt;a href=&quot;#type-action&quot;&gt;action()&lt;/a&gt;&lt;/code&gt; ] | &lt;code&gt;&lt;a href=&quot;#type-action&quot;&gt;action()&lt;/a&gt;&lt;/code&gt; ) -&amp;gt;</target>
        </trans-unit>
        <trans-unit id="61334da16104ac9d91a8736e913a8cbee03e40e6" translate="yes" xml:space="preserve">
          <source>Actions are executed in the containing list order.</source>
          <target state="translated">Действия выполняются в содержащем список порядке.</target>
        </trans-unit>
        <trans-unit id="6ef0f3b4c93f31bddb43b327dd452b51df2f0936" translate="yes" xml:space="preserve">
          <source>Actions that set &lt;code&gt;&lt;a href=&quot;#type-transition_option&quot;&gt;transition options&lt;/a&gt;&lt;/code&gt; override any previous of the same type, so the last in the containing list wins. For example, the last &lt;code&gt;&lt;a href=&quot;#type-event_timeout&quot;&gt;event_timeout()&lt;/a&gt;&lt;/code&gt; overrides any previous &lt;code&gt;event_timeout()&lt;/code&gt; in the list.</source>
          <target state="translated">Действия, устанавливающие &lt;code&gt;&lt;a href=&quot;#type-transition_option&quot;&gt;transition options&lt;/a&gt;&lt;/code&gt; приоритет над любыми предыдущими действиями того же типа, поэтому побеждает последнее в содержащем списке. Например, последний &lt;code&gt;&lt;a href=&quot;#type-event_timeout&quot;&gt;event_timeout()&lt;/a&gt;&lt;/code&gt; отменяет любое предыдущее &lt;code&gt;event_timeout()&lt;/code&gt; в списке.</target>
        </trans-unit>
        <trans-unit id="b1964869d062538b54d1a15f6f4171d706fef3d8" translate="yes" xml:space="preserve">
          <source>Actions that set &lt;code&gt;&lt;a href=&quot;#type-transition_option&quot;&gt;transition options&lt;/a&gt;&lt;/code&gt; override any previous of the same type, so the last in the containing list wins. For example, the last &lt;code&gt;&lt;a href=&quot;#type-postpone&quot;&gt;postpone()&lt;/a&gt;&lt;/code&gt; overrides any previous &lt;code&gt;postpone()&lt;/code&gt; in the list.</source>
          <target state="translated">Действия, устанавливающие &lt;code&gt;&lt;a href=&quot;#type-transition_option&quot;&gt;transition options&lt;/a&gt;&lt;/code&gt; приоритет над любыми предыдущими действиями того же типа, поэтому побеждает последнее в содержащем списке. Например, последний &lt;code&gt;&lt;a href=&quot;#type-postpone&quot;&gt;postpone()&lt;/a&gt;&lt;/code&gt; отменяет любой предыдущий &lt;code&gt;postpone()&lt;/code&gt; в списке.</target>
        </trans-unit>
        <trans-unit id="13b1df2d40bde8a02c4921e1004b0065de68e10c" translate="yes" xml:space="preserve">
          <source>Activates a connection to a remote user. When this is done the connection can be used to send messages (with SendMod:send_message/2). The ControlPid is the identifier of a process that controls the connection. That process will be supervised and if it dies, this will be detected and the UserMod:handle_disconnect/2 callback function will be invoked. See the megaco_user module for more info about the callback arguments. The connection may also explicitly be deactivated by invoking megaco:disconnect/2.</source>
          <target state="translated">Активирует соединение с удаленным пользователем.После этого соединение может быть использовано для отправки сообщений (с помощью SendMod:send_message/2).ControlPid-это идентификатор процесса,который управляет соединением.Этот процесс будет контролироваться,и в случае его умирания,он будет обнаружен,и будет вызвана функция UserMod:handle_disconnect/2.Дополнительную информацию об аргументах обратного вызова смотрите в модуле megaco_user.Соединение также может быть явно деактивировано вызовом megaco:disconnect/2.</target>
        </trans-unit>
        <trans-unit id="f69ba29b1f84217c9d2ca2dc152317da71e06308" translate="yes" xml:space="preserve">
          <source>Activates a new checkpoint covering all Mnesia tables, including the schema, with maximum degree of redundancy, and performs a backup using &lt;code&gt;backup_checkpoint/2/3&lt;/code&gt;. The default value of the backup callback module &lt;code&gt;BackupMod&lt;/code&gt; is obtained by &lt;code&gt;mnesia:system_info(backup_module)&lt;/code&gt;.</source>
          <target state="translated">Активирует новую контрольную точку, охватывающую все таблицы Mnesia, включая схему, с максимальной степенью избыточности, и выполняет резервное копирование с помощью &lt;code&gt;backup_checkpoint/2/3&lt;/code&gt; . Значение по умолчанию для модуля обратного вызова резервного копирования &lt;code&gt;BackupMod&lt;/code&gt; получается с помощью &lt;code&gt;mnesia:system_info(backup_module)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0574212bd6baf73e32ac9c415b72677146bade9b" translate="yes" xml:space="preserve">
          <source>Activates all events at the debug level. On this level, the &lt;code&gt;Mnesia&lt;/code&gt; event handler starts subscribing to updates on all &lt;code&gt;Mnesia&lt;/code&gt; tables. This level is intended only for debugging small toy systems, as many large events can be generated.</source>
          <target state="translated">Активирует все события на уровне отладки. На этом уровне обработчик событий &lt;code&gt;Mnesia&lt;/code&gt; начинает подписываться на обновления всех таблиц &lt;code&gt;Mnesia&lt;/code&gt; . Этот уровень предназначен только для отладки небольших игрушечных систем, так как может быть сгенерировано много крупных событий.</target>
        </trans-unit>
        <trans-unit id="1473502b15ef43d2fc312f7968ec2627f8afe701" translate="yes" xml:space="preserve">
          <source>Activates all events at the debug level. On this level, the Mnesia event handler starts subscribing to updates on all Mnesia tables. This level is intended only for debugging small toy systems, as many large events can be generated.</source>
          <target state="translated">Активирует все события на уровне отладки.На этом уровне обработчик событий Mnesia начинает подписываться на обновления во всех таблицах Mnesia.Этот уровень предназначен только для отладки небольших игрушечных систем,так как может генерироваться много больших событий.</target>
        </trans-unit>
        <trans-unit id="a11fef95fdd152ac782e603cddf000bf9537358d" translate="yes" xml:space="preserve">
          <source>Activates all events at the verbose level plus full trace of all debug events. These debug events generate &lt;code&gt;{mnesia_info, Format, Args}&lt;/code&gt; system events. Processes can subscribe to these events with &lt;code&gt;mnesia:subscribe/1&lt;/code&gt;. The events are always sent to the Mnesia event handler. On this debug level, the Mnesia event handler starts subscribing to updates in the schema table.</source>
          <target state="translated">Активирует все события на подробном уровне плюс полную трассировку всех событий отладки. Эти события отладки генерируют &lt;code&gt;{mnesia_info, Format, Args}&lt;/code&gt; события {mnesia_info, Format, Args} . Процессы могут подписаться на эти события с помощью &lt;code&gt;mnesia:subscribe/1&lt;/code&gt; . События всегда отправляются в обработчик событий Mnesia. На этом уровне отладки обработчик событий Mnesia начинает подписываться на обновления в таблице схемы.</target>
        </trans-unit>
        <trans-unit id="d10f11346b4f9c94838ab97da164ecb5b326c009" translate="yes" xml:space="preserve">
          <source>Activates all events at the verbose level plus traces of all debug events. These debug events generate &lt;code&gt;{mnesia_info, Format, Args}&lt;/code&gt; system events. Processes can subscribe to these events with &lt;code&gt;mnesia:subscribe/1&lt;/code&gt;. The events are always sent to the &lt;code&gt;Mnesia&lt;/code&gt; event handler. On this debug level, the &lt;code&gt;Mnesia&lt;/code&gt; event handler starts subscribing to updates in the schema table.</source>
          <target state="translated">Активирует все события на подробном уровне плюс трассировки всех событий отладки. Эти события отладки генерируют &lt;code&gt;{mnesia_info, Format, Args}&lt;/code&gt; события {mnesia_info, Format, Args} . Процессы могут подписаться на эти события с помощью &lt;code&gt;mnesia:subscribe/1&lt;/code&gt; . События всегда отправляются в обработчик событий &lt;code&gt;Mnesia&lt;/code&gt; . На этом уровне отладки обработчик событий &lt;code&gt;Mnesia&lt;/code&gt; начинает подписываться на обновления в таблице схемы.</target>
        </trans-unit>
        <trans-unit id="6ded0de3f180c32378392899db72b086ca5f1741" translate="yes" xml:space="preserve">
          <source>Activates read data buffering. If &lt;code&gt;read/2&lt;/code&gt; calls are for significantly less than &lt;code&gt;Size&lt;/code&gt; bytes, read operations to the operating system are still performed for blocks of &lt;code&gt;Size&lt;/code&gt; bytes. The extra data is buffered and returned in subsequent &lt;code&gt;read/2&lt;/code&gt; calls, giving a performance gain as the number of operating system calls is reduced.</source>
          <target state="translated">Активирует буферизацию считываемых данных. Если вызовы &lt;code&gt;read/2&lt;/code&gt; предназначены для значительно меньших, чем &lt;code&gt;Size&lt;/code&gt; байтов, операции чтения в операционной системе по-прежнему выполняются для блоков &lt;code&gt;Size&lt;/code&gt; байтов. Дополнительные данные буферизуются и возвращаются в последующих вызовах &lt;code&gt;read/2&lt;/code&gt; , что дает прирост производительности по мере уменьшения количества вызовов операционной системы.</target>
        </trans-unit>
        <trans-unit id="eb6a9b28d658257a2883ec371985ebb9360570ed" translate="yes" xml:space="preserve">
          <source>Activates the fragmentation properties of an existing table. &lt;code&gt;FragProps&lt;/code&gt; is either to contain &lt;code&gt;{node_pool, Nodes}&lt;/code&gt; or be empty.</source>
          <target state="translated">Активирует свойства фрагментации существующей таблицы. &lt;code&gt;FragProps&lt;/code&gt; должен либо содержать &lt;code&gt;{node_pool, Nodes}&lt;/code&gt; либо быть пустым.</target>
        </trans-unit>
        <trans-unit id="532f0aa046ec26e3e6682e682916731e989482e8" translate="yes" xml:space="preserve">
          <source>Activates tracing of important debug events. These events generate &lt;code&gt;{mnesia_info, Format, Args}&lt;/code&gt; system events. Processes can subscribe to these events with &lt;code&gt;mnesia:subscribe/1&lt;/code&gt;. The events are always sent to the Mnesia event handler.</source>
          <target state="translated">Активирует отслеживание важных событий отладки. Эти события генерируют &lt;code&gt;{mnesia_info, Format, Args}&lt;/code&gt; события {mnesia_info, Format, Args} . Процессы могут подписаться на эти события с помощью &lt;code&gt;mnesia:subscribe/1&lt;/code&gt; . События всегда отправляются в обработчик событий Mnesia.</target>
        </trans-unit>
        <trans-unit id="e0f95d91404d34111854383ce61fa17d9871d976" translate="yes" xml:space="preserve">
          <source>Activates tracing of important debug events. These events generate &lt;code&gt;{mnesia_info, Format, Args}&lt;/code&gt; system events. Processes can subscribe to these events with the function &lt;code&gt;&lt;a href=&quot;mnesia#subscribe-1&quot;&gt;mnesia:subscribe/1&lt;/a&gt;&lt;/code&gt;. The events are always sent to the &lt;code&gt;Mnesia&lt;/code&gt; event handler.</source>
          <target state="translated">Активирует отслеживание важных событий отладки. Эти события генерируют &lt;code&gt;{mnesia_info, Format, Args}&lt;/code&gt; события {mnesia_info, Format, Args} . Процессы могут подписаться на эти события с помощью функции &lt;code&gt;&lt;a href=&quot;mnesia#subscribe-1&quot;&gt;mnesia:subscribe/1&lt;/a&gt;&lt;/code&gt; . События всегда отправляются в обработчик событий &lt;code&gt;Mnesia&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7f2c331b898e66e4e4d774932df99c6432852c98" translate="yes" xml:space="preserve">
          <source>Activates/deactivates tracing by changing the current trace pattern.</source>
          <target state="translated">Активирует/отключает трассировку,изменяя текущий шаблон трассы.</target>
        </trans-unit>
        <trans-unit id="29f45195e4be19fb8b96702dcdd15944ea37fdad" translate="yes" xml:space="preserve">
          <source>Active breakpoints are displayed in red and inactive breakpoints in blue.</source>
          <target state="translated">Активные точки останова отображаются красным цветом,а неактивные-синим.</target>
        </trans-unit>
        <trans-unit id="a903c4b66a2fb224f4d96a51df759ac9a67bfc6d" translate="yes" xml:space="preserve">
          <source>Activity concept and various access contexts</source>
          <target state="translated">Концепция деятельности и различные условия доступа</target>
        </trans-unit>
        <trans-unit id="713a8072ef62aa0b1fde6095af47e4a910316756" translate="yes" xml:space="preserve">
          <source>Actual protocol version.</source>
          <target state="translated">Текущая версия протокола.</target>
        </trans-unit>
        <trans-unit id="134344cda8fb9734c656b66e40554d208ac6e58b" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;-ct_hooks&lt;/code&gt; as an argument to &lt;code&gt;&lt;a href=&quot;run_test_chapter#ct_run&quot;&gt;ct_run&lt;/a&gt;&lt;/code&gt;. To add multiple CTHs using this method, append them to each other using the keyword &lt;code&gt;and&lt;/code&gt;, that is, &lt;code&gt;ct_run -ct_hooks cth1 [{debug,true}] and cth2 ...&lt;/code&gt;.</source>
          <target state="translated">Добавьте &lt;code&gt;-ct_hooks&lt;/code&gt; в качестве аргумента в &lt;code&gt;&lt;a href=&quot;run_test_chapter#ct_run&quot;&gt;ct_run&lt;/a&gt;&lt;/code&gt; . Чтобы добавить несколько CTHs , используя этот метод, добавьте их друг с другом , используя ключевое слово &lt;code&gt;and&lt;/code&gt; , то есть, &lt;code&gt;ct_run -ct_hooks cth1 [{debug,true}] and cth2 ...&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d8718d4f36d948a3675c6bdc12db7b8c27966873" translate="yes" xml:space="preserve">
          <source>Add a &lt;code&gt;return_trace&lt;/code&gt; message if the function is of arity 3:</source>
          <target state="translated">Добавьте сообщение &lt;code&gt;return_trace&lt;/code&gt; , если функция имеет арность 3:</target>
        </trans-unit>
        <trans-unit id="dcfe51c34611d10c0d112932679c857d2a6476fa" translate="yes" xml:space="preserve">
          <source>Add a filter to the specified handler.</source>
          <target state="translated">Добавьте фильтр в указанный обработчик.</target>
        </trans-unit>
        <trans-unit id="988a7e297bf981c7e71c06b09b7717bd00d611be" translate="yes" xml:space="preserve">
          <source>Add a handler with the given configuration.</source>
          <target state="translated">Добавьте обработчик с заданной конфигурацией.</target>
        </trans-unit>
        <trans-unit id="07e4c199b9f19567f7bbd64299d17b2cc8c094ac" translate="yes" xml:space="preserve">
          <source>Add a primary filter to Logger.</source>
          <target state="translated">Добавить первичный фильтр в журнал.</target>
        </trans-unit>
        <trans-unit id="1970f7a8e650aa5473c699a8c07cc9a162ef1004" translate="yes" xml:space="preserve">
          <source>Add address (and port, if other than default) of the primary nameserver to use for &lt;code&gt;inet_res(3)&lt;/code&gt;.</source>
          <target state="translated">Добавьте адрес (и порт, если он &lt;code&gt;inet_res(3)&lt;/code&gt; от значения по умолчанию) основного сервера имен, который будет использоваться для inet_res (3) .</target>
        </trans-unit>
        <trans-unit id="1cfc1bd9fd579f7622617b9af78a944445ba8847" translate="yes" xml:space="preserve">
          <source>Add address (and port, if other than default) of the secondary nameserver for &lt;code&gt;inet_res(3)&lt;/code&gt;.</source>
          <target state="translated">Добавьте адрес (и порт, если не по умолчанию) вторичного сервера имен для &lt;code&gt;inet_res(3)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d8a12963c05fa3aec6cf7012ff1f7fc0a2d99e08" translate="yes" xml:space="preserve">
          <source>Add an entry. The entry must not exist.</source>
          <target state="translated">Добавь запись.Запись не должна существовать.</target>
        </trans-unit>
        <trans-unit id="1e310729251dbd2e2aab36a457e446b150b20e5e" translate="yes" xml:space="preserve">
          <source>Add host entry to the hosts table.</source>
          <target state="translated">Добавьте запись о хосте в таблицу хостов.</target>
        </trans-unit>
        <trans-unit id="064eb4472489455e1a24510aa444bd6d5e585d65" translate="yes" xml:space="preserve">
          <source>Add javac &lt;strong&gt;LAST&lt;/strong&gt; to your path environment in bash, in my case this means:</source>
          <target state="translated">Добавьте javac &lt;strong&gt;LAST&lt;/strong&gt; в среду вашего пути в bash, в моем случае это означает:</target>
        </trans-unit>
        <trans-unit id="3c0bb0d661a36f1c95bc663da03400bb07c43351" translate="yes" xml:space="preserve">
          <source>Add or update configuration data for the specified handler. If the given &lt;code&gt;Key&lt;/code&gt; already exists, its associated value will be changed to &lt;code&gt;Value&lt;/code&gt;. If it does not exist, it will be added.</source>
          <target state="translated">Добавьте или обновите данные конфигурации для указанного обработчика. Если данный &lt;code&gt;Key&lt;/code&gt; уже существует, связанное с ним значение будет изменено на &lt;code&gt;Value&lt;/code&gt; . Если его не существует, он будет добавлен.</target>
        </trans-unit>
        <trans-unit id="2e23ac8cf9bd396ad94605da91fe04cfdf9b6acd" translate="yes" xml:space="preserve">
          <source>Add or update primary configuration data for Logger. If the given &lt;code&gt;Key&lt;/code&gt; already exists, its associated value will be changed to &lt;code&gt;Value&lt;/code&gt;. If it does not exist, it will be added.</source>
          <target state="translated">Добавьте или обновите данные первичной конфигурации для Logger. Если данный &lt;code&gt;Key&lt;/code&gt; уже существует, связанное с ним значение будет изменено на &lt;code&gt;Value&lt;/code&gt; . Если его не существует, он будет добавлен.</target>
        </trans-unit>
        <trans-unit id="fa1f218791abec296d536eef9aee8fee9c4907e8" translate="yes" xml:space="preserve">
          <source>Add search domains for &lt;code&gt;inet_res(3)&lt;/code&gt;.</source>
          <target state="translated">Добавьте поисковые домены для &lt;code&gt;inet_res(3)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fd1016b584a0c08284e356371e0b67d2c6544a4a" translate="yes" xml:space="preserve">
          <source>Add tag &lt;code&gt;ct_hooks&lt;/code&gt; to your &lt;code&gt;&lt;a href=&quot;run_test_chapter#test_specifications&quot;&gt;Test Specification&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Добавьте тег &lt;code&gt;ct_hooks&lt;/code&gt; в свою &lt;code&gt;&lt;a href=&quot;run_test_chapter#test_specifications&quot;&gt;Test Specification&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="62bfcf8bed94dcc27f1ebd702bd7df63f5908679" translate="yes" xml:space="preserve">
          <source>Add tag &lt;code&gt;ct_hooks&lt;/code&gt; to your call to &lt;code&gt;&lt;a href=&quot;ct#run_test-1&quot;&gt;ct:run_test/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Добавьте тег &lt;code&gt;ct_hooks&lt;/code&gt; к вашему вызову в &lt;code&gt;&lt;a href=&quot;ct#run_test-1&quot;&gt;ct:run_test/1&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bb8bd196c7c5b5791600663f12d69529068e2cf5" translate="yes" xml:space="preserve">
          <source>Add the &lt;code&gt;{scanner, flex}&lt;/code&gt; (or similar) directive to an Erlang system config file for the megaco app (see &lt;code&gt;&lt;a href=&quot;megaco_run#initial_config&quot;&gt;initial configuration&lt;/a&gt;&lt;/code&gt; chapter for details).</source>
          <target state="translated">Добавьте директиву &lt;code&gt;{scanner, flex}&lt;/code&gt; (или аналогичную) в системный файл конфигурации Erlang для приложения megaco (подробности см. В главе о &lt;code&gt;&lt;a href=&quot;megaco_run#initial_config&quot;&gt;initial configuration&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="a2012ba10173073b8d6e03fc90ee362531d7db30" translate="yes" xml:space="preserve">
          <source>Add the applications Crypto, Public Key, and SSL with their current version numbers after the STDLIB application.</source>
          <target state="translated">После приложения STDLIB добавьте приложения Crypto,Public Key и SSL с их номерами текущей версии.</target>
        </trans-unit>
        <trans-unit id="cf34fb9a5fda73afda9f1d571b702839ff2f58b3" translate="yes" xml:space="preserve">
          <source>Add the following directive to the module:</source>
          <target state="translated">Добавьте в модуль следующую директиву:</target>
        </trans-unit>
        <trans-unit id="497564ebabd956c895ba8a4ea1a4bb25e8ed7093" translate="yes" xml:space="preserve">
          <source>Add transport capability to a service.</source>
          <target state="translated">Добавьте транспортную возможность к услуге.</target>
        </trans-unit>
        <trans-unit id="22ba7777616ece673914dfbc3af9096a68b87e29" translate="yes" xml:space="preserve">
          <source>Adding an application means that the modules defined by the &lt;code&gt;modules&lt;/code&gt; key in the &lt;code&gt;.app&lt;/code&gt; file are loaded using &lt;code&gt;add_module&lt;/code&gt;.</source>
          <target state="translated">Добавление приложения означает, что модули, определенные ключом &lt;code&gt;modules&lt;/code&gt; в файле &lt;code&gt;.app&lt;/code&gt; , загружаются с помощью &lt;code&gt;add_module&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="19baa62e86ec3c161512eb728cf268b6e381fb8a" translate="yes" xml:space="preserve">
          <source>Adding an application means that the modules defined by the &lt;code&gt;modules&lt;/code&gt; key in the &lt;code&gt;.app&lt;/code&gt; file are loaded using a number of &lt;code&gt;add_module&lt;/code&gt; instructions, and then the application is started.</source>
          <target state="translated">Добавление приложения означает, что модули, определенные ключом &lt;code&gt;modules&lt;/code&gt; в файле &lt;code&gt;.app&lt;/code&gt; , загружаются с использованием ряда инструкций &lt;code&gt;add_module&lt;/code&gt; , а затем приложение запускается.</target>
        </trans-unit>
        <trans-unit id="4a2fed64edcf79517387cddb884610573fd90ba1" translate="yes" xml:space="preserve">
          <source>Adding patches</source>
          <target state="translated">Добавление патчей</target>
        </trans-unit>
        <trans-unit id="9aa3df6db85161c52e69b8f34d6e3268949dc0a1" translate="yes" xml:space="preserve">
          <source>Adding the &lt;code&gt;fop&lt;/code&gt; script (in &lt;code&gt;$FOP_HOME&lt;/code&gt;) to your &lt;code&gt;$PATH&lt;/code&gt;, either by adding &lt;code&gt;$FOP_HOME&lt;/code&gt; to &lt;code&gt;$PATH&lt;/code&gt;, or by copying the &lt;code&gt;fop&lt;/code&gt; script to a directory already in your &lt;code&gt;$PATH&lt;/code&gt;.</source>
          <target state="translated">Добавление &lt;code&gt;fop&lt;/code&gt; сценария (в &lt;code&gt;$FOP_HOME&lt;/code&gt; ) на свой &lt;code&gt;$PATH&lt;/code&gt; , либо путем добавления &lt;code&gt;$FOP_HOME&lt;/code&gt; в &lt;code&gt;$PATH&lt;/code&gt; , или путем копирования &lt;code&gt;fop&lt;/code&gt; скрипт в каталог уже в вашей &lt;code&gt;$PATH&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="38751bf8e4b616e26910db8b22c357a8c20a53f2" translate="yes" xml:space="preserve">
          <source>Adding the location of your installation of &lt;code&gt;fop&lt;/code&gt; in &lt;code&gt;$FOP_HOME&lt;/code&gt;.</source>
          <target state="translated">Добавление расположения вашей установки &lt;code&gt;fop&lt;/code&gt; в &lt;code&gt;$FOP_HOME&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ab0b27d891b1318285ee4899ad6b140de6e4ed3b" translate="yes" xml:space="preserve">
          <source>Additional information and links of interest for Erlang programmers can be found on the Erlang Open Source site &lt;a href=&quot;http://www.erlang.org/&quot;&gt;http://www.erlang.org&lt;/a&gt;.</source>
          <target state="translated">Дополнительную информацию и ссылки, представляющие интерес для программистов на Erlang, можно найти на сайте Erlang Open Source &lt;a href=&quot;http://www.erlang.org/&quot;&gt;http://www.erlang.org&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6afdeb8447e9059c599becedc9101b844f957850" translate="yes" xml:space="preserve">
          <source>Additionally, values that can be encoded are limited by way of their encoding as four octets as required by RFC 6733 with the required extension from RFC 2030. In particular, only values between &lt;code&gt;{{1968,1,20},{3,14,8}}&lt;/code&gt; and &lt;code&gt;{{2104,2,26},{9,42,23}}&lt;/code&gt; (both inclusive) can be encoded.</source>
          <target state="translated">Кроме того, значения, которые могут быть закодированы, ограничены путем их кодирования четырьмя октетами, как того требует RFC 6733 с необходимым расширением из RFC 2030. В частности, только значения между &lt;code&gt;{{1968,1,20},{3,14,8}}&lt;/code&gt; и &lt;code&gt;{{2104,2,26},{9,42,23}}&lt;/code&gt; (оба включительно) могут быть закодированы.</target>
        </trans-unit>
        <trans-unit id="74fda4b3ec4ffdc7738f6833bc3191a5b59bbcea" translate="yes" xml:space="preserve">
          <source>Addresses as inputs to functions can be either a string or a tuple. For example, the IP address 150.236.20.73 can be passed to &lt;code&gt;gethostbyaddr/1&lt;/code&gt;, either as string &lt;code&gt;&quot;150.236.20.73&quot;&lt;/code&gt; or as tuple &lt;code&gt;{150, 236, 20, 73}&lt;/code&gt;.</source>
          <target state="translated">Адреса в качестве входных данных для функций могут быть строкой или кортежем. Например, IP-адрес 150.236.20.73 может быть передан в &lt;code&gt;gethostbyaddr/1&lt;/code&gt; либо как строка &lt;code&gt;&quot;150.236.20.73&quot;&lt;/code&gt; либо как кортеж &lt;code&gt;{150, 236, 20, 73}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="919ffc168cee16019d09aa5279148893d8d24a34" translate="yes" xml:space="preserve">
          <source>Addresses besides &lt;code&gt;&lt;a href=&quot;#type-ip_address&quot;&gt;ip_address()&lt;/a&gt;&lt;/code&gt; ones that are returned from socket API functions. See in particular &lt;code&gt;&lt;a href=&quot;#type-local_address&quot;&gt;local_address().&lt;/a&gt;&lt;/code&gt; The &lt;code&gt;unspec&lt;/code&gt; family corresponds to AF_UNSPEC and can occur if the other side has no socket address. The &lt;code&gt;undefined&lt;/code&gt; family can only occur in the unlikely event of an address family that the VM does not recognize.</source>
          <target state="translated">Адреса, помимо &lt;code&gt;&lt;a href=&quot;#type-ip_address&quot;&gt;ip_address()&lt;/a&gt;&lt;/code&gt; , которые возвращаются функциями API сокета. См., В частности, &lt;code&gt;&lt;a href=&quot;#type-local_address&quot;&gt;local_address().&lt;/a&gt;&lt;/code&gt; Семейство &lt;code&gt;unspec&lt;/code&gt; соответствует AF_UNSPEC и может возникнуть, если на другой стороне нет адреса сокета. &lt;code&gt;undefined&lt;/code&gt; семья может иметь место только в том маловероятном случае семейства адресов , что VM не признает.</target>
        </trans-unit>
        <trans-unit id="e5d78a2b44c9f8c46bb6a05a403783dea60e8b77" translate="yes" xml:space="preserve">
          <source>Addresses to the test plant or other instruments</source>
          <target state="translated">Адреса к испытательной установке или другим приборам</target>
        </trans-unit>
        <trans-unit id="e2dc16d39802f8e13757680f2285e270d512d4d0" translate="yes" xml:space="preserve">
          <source>Adds &lt;code&gt;Dir&lt;/code&gt; to the beginning of the code path. If &lt;code&gt;Dir&lt;/code&gt; exists, it is removed from the old position in the code path.</source>
          <target state="translated">Добавляет &lt;code&gt;Dir&lt;/code&gt; в начало пути кода. Если &lt;code&gt;Dir&lt;/code&gt; существует, он удаляется из старой позиции в пути кода.</target>
        </trans-unit>
        <trans-unit id="926f262a813d5bf3968371cfef08e827663b2a16" translate="yes" xml:space="preserve">
          <source>Adds &lt;code&gt;Dir&lt;/code&gt; to the code path. The directory is added as the last directory in the new path. If &lt;code&gt;Dir&lt;/code&gt; already exists in the path, it is not added.</source>
          <target state="translated">Добавляет &lt;code&gt;Dir&lt;/code&gt; в путь кода. Каталог будет добавлен в качестве последнего каталога в новый путь. Если &lt;code&gt;Dir&lt;/code&gt; уже существует в пути, он не добавляется.</target>
        </trans-unit>
        <trans-unit id="ca41b9b5a14be7cc19bac8bafe3b381efcc40caa" translate="yes" xml:space="preserve">
          <source>Adds &lt;code&gt;Dir&lt;/code&gt; to the list of directories to be searched when including a file. When encountering an &lt;code&gt;-include&lt;/code&gt; or &lt;code&gt;-include_lib&lt;/code&gt; directive, the compiler searches for header files in the following directories:</source>
          <target state="translated">Добавляет &lt;code&gt;Dir&lt;/code&gt; в список каталогов для поиска при включении файла. При обнаружении директивы &lt;code&gt;-include&lt;/code&gt; или &lt;code&gt;-include_lib&lt;/code&gt; компилятор ищет файлы заголовков в следующих каталогах:</target>
        </trans-unit>
        <trans-unit id="5307e57c8c5d61db386c45a450b3023f9b59e82e" translate="yes" xml:space="preserve">
          <source>Adds &lt;code&gt;IncludeDir&lt;/code&gt; to the search-path for &lt;code&gt;.asn1db&lt;/code&gt; and &lt;code&gt;ASN.1&lt;/code&gt; source files. The compiler tries to open an &lt;code&gt;.asn1db&lt;/code&gt; file when a module imports definitions from another &lt;code&gt;ASN.1&lt;/code&gt; module. If no &lt;code&gt;.asn1db&lt;/code&gt; file is found, the &lt;code&gt;ASN.1&lt;/code&gt; source file is parsed. Several &lt;code&gt;{i, IncludeDir}&lt;/code&gt; can be given.</source>
          <target state="translated">Добавляет &lt;code&gt;IncludeDir&lt;/code&gt; в путь &lt;code&gt;.asn1db&lt;/code&gt; исходных файлов .asn1db и &lt;code&gt;ASN.1&lt;/code&gt; . Компилятор пытается открыть файл &lt;code&gt;.asn1db&lt;/code&gt; , когда модуль импортирует определения из другого модуля &lt;code&gt;ASN.1&lt;/code&gt; . Если файл &lt;code&gt;.asn1db&lt;/code&gt; не найден, анализируется исходный файл &lt;code&gt;ASN.1&lt;/code&gt; . Можно &lt;code&gt;{i, IncludeDir}&lt;/code&gt; несколько {i, IncludeDir} .</target>
        </trans-unit>
        <trans-unit id="595c4b05c70f5ee3afd4c0ee71bd2a9507a8d8e9" translate="yes" xml:space="preserve">
          <source>Adds &lt;code&gt;Increment&lt;/code&gt; to the value associated with &lt;code&gt;Key&lt;/code&gt; and store this value. If &lt;code&gt;Key&lt;/code&gt; is not present in the dictionary, &lt;code&gt;Increment&lt;/code&gt; is stored as the first value.</source>
          <target state="translated">Добавляет &lt;code&gt;Increment&lt;/code&gt; к значению, связанному с &lt;code&gt;Key&lt;/code&gt; и сохраняет это значение. Если &lt;code&gt;Key&lt;/code&gt; отсутствует в словаре, &lt;code&gt;Increment&lt;/code&gt; сохраняется как первое значение.</target>
        </trans-unit>
        <trans-unit id="9cf5a5933a7780d09616786318d8b162063b8502" translate="yes" xml:space="preserve">
          <source>Adds &lt;code&gt;Increment&lt;/code&gt; to the value associated with &lt;code&gt;Key&lt;/code&gt; and stores this value. If &lt;code&gt;Key&lt;/code&gt; is not present in the dictionary, &lt;code&gt;Increment&lt;/code&gt; is stored as the first value.</source>
          <target state="translated">Добавляет &lt;code&gt;Increment&lt;/code&gt; к значению, связанному с &lt;code&gt;Key&lt;/code&gt; и сохраняет это значение. Если &lt;code&gt;Key&lt;/code&gt; отсутствует в словаре, &lt;code&gt;Increment&lt;/code&gt; сохраняется как первое значение.</target>
        </trans-unit>
        <trans-unit id="608d4ac3b1f40dea43a70f3ee04cd69ef181057c" translate="yes" xml:space="preserve">
          <source>Adds a &lt;code&gt;Slave&lt;/code&gt; node to the list of allowed slave hosts.</source>
          <target state="translated">Добавляет &lt;code&gt;Slave&lt;/code&gt; узел в список разрешенных ведомых хостов.</target>
        </trans-unit>
        <trans-unit id="c8419b1c93b9fd6c91cbede4425bbc8634cca3f1" translate="yes" xml:space="preserve">
          <source>Adds a USM security data (user) to the agent config. Equivalent to one line in the &lt;code&gt;usm.conf&lt;/code&gt; file.</source>
          <target state="translated">Добавляет данные безопасности USM (пользователя) в конфигурацию агента. Эквивалентно одной строке в файле &lt;code&gt;usm.conf&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="608718b6fe3ec7101404f6c3f283054c442dd2b4" translate="yes" xml:space="preserve">
          <source>Adds a access definition to the agent config. Equivalent to one vacmAccess-line in the &lt;code&gt;vacm.conf&lt;/code&gt; file.</source>
          <target state="translated">Добавляет определение доступа в конфигурацию агента. Эквивалентно одной строке &lt;code&gt;vacm.conf&lt;/code&gt; файле vacm.conf .</target>
        </trans-unit>
        <trans-unit id="56be82c63eeffefdb9fecc96c8582dde485169c1" translate="yes" xml:space="preserve">
          <source>Adds a comment to the zip archive.</source>
          <target state="translated">Добавляет комментарий к zip архиву.</target>
        </trans-unit>
        <trans-unit id="43e098c039b116cd95896a1756a343c44df7c071" translate="yes" xml:space="preserve">
          <source>Adds a community to the agent config. Equivalent to one line in the &lt;code&gt;community.conf&lt;/code&gt; file.</source>
          <target state="translated">Добавляет сообщество в конфигурацию агента. Эквивалентно одной строке в файле &lt;code&gt;community.conf&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="45955c71ab38b246ddf99aa7e08be1cf306c82b3" translate="yes" xml:space="preserve">
          <source>Adds a context to the agent config. Equivalent to one line in the &lt;code&gt;context.conf&lt;/code&gt; file.</source>
          <target state="translated">Добавляет контекст в конфигурацию агента. Эквивалентно одной строке в файле &lt;code&gt;context.conf&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6c32cf7ccbd49be4e1811292b2c307f4eba42f61" translate="yes" xml:space="preserve">
          <source>Adds a driver entry to the list of drivers known by Erlang. The &lt;code&gt;&lt;a href=&quot;driver_entry#init&quot;&gt;init&lt;/a&gt;&lt;/code&gt; function of parameter &lt;code&gt;de&lt;/code&gt; is called.</source>
          <target state="translated">Добавляет запись драйвера в список драйверов, известных Erlang. &lt;code&gt;&lt;a href=&quot;driver_entry#init&quot;&gt;init&lt;/a&gt;&lt;/code&gt; функция параметра &lt;code&gt;de&lt;/code&gt; называется.</target>
        </trans-unit>
        <trans-unit id="d07970fe182b9d81897e40e78d3b14e7a4e7a0d7" translate="yes" xml:space="preserve">
          <source>Adds a file to a tar file that has been opened for writing by &lt;code&gt;&lt;a href=&quot;#open-2&quot;&gt;open/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Добавляет файл в tar-файл, открытый для записи командой &lt;code&gt;&lt;a href=&quot;#open-2&quot;&gt;open/1&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b2fca474d01b00ce9ba861cfe769df64577ac35b" translate="yes" xml:space="preserve">
          <source>Adds a file to a tar file that has been opened for writing by &lt;code&gt;&lt;a href=&quot;#open-2&quot;&gt;open/2&lt;/a&gt;&lt;/code&gt;. This function accepts the same options as &lt;code&gt;&lt;a href=&quot;#add-3&quot;&gt;add/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Добавляет файл в tar-файл, который был открыт для записи командой &lt;code&gt;&lt;a href=&quot;#open-2&quot;&gt;open/2&lt;/a&gt;&lt;/code&gt; . Эта функция принимает те же параметры, что и &lt;code&gt;&lt;a href=&quot;#add-3&quot;&gt;add/3&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5eccbecba42ae4288806c579ad8b8fbf3b51a728" translate="yes" xml:space="preserve">
          <source>Adds a fragment to a fragmented table. All records in one of the old fragments are rehashed and about half of them are moved to the new (last) fragment. All other fragmented tables, which refer to this table in their foreign key, automatically get a new fragment. Also, their records are dynamically rehashed in the same manner as for the main table.</source>
          <target state="translated">Добавляет фрагмент к фрагментированной таблице.Все записи в одном из старых фрагментов перефрагментированы и примерно половина из них перенесена в новый (последний)фрагмент.Все остальные фрагментированные таблицы,которые ссылаются на эту таблицу в своем постороннем ключе,автоматически получают новый фрагмент.Кроме того,их записи динамически перефразируются так же,как и для основной таблицы.</target>
        </trans-unit>
        <trans-unit id="d84d2fb93ae834309e6167a0b3e43d9fab2545e1" translate="yes" xml:space="preserve">
          <source>Adds a host key to the set of trusted host keys.</source>
          <target state="translated">Добавляет ключ хоста к набору доверенных ключей хоста.</target>
        </trans-unit>
        <trans-unit id="2d77c18b4124fe87017036ce4362ca94cf644272" translate="yes" xml:space="preserve">
          <source>Adds a module and its &lt;code&gt;&lt;a href=&quot;#module_data&quot;&gt;module data&lt;/a&gt;&lt;/code&gt; to an &lt;code&gt;&lt;a href=&quot;#xref_server&quot;&gt;Xref server&lt;/a&gt;&lt;/code&gt;. The module will not be member of any application. Returns the name of the module.</source>
          <target state="translated">Добавляет модуль и его &lt;code&gt;&lt;a href=&quot;#module_data&quot;&gt;module data&lt;/a&gt;&lt;/code&gt; на &lt;code&gt;&lt;a href=&quot;#xref_server&quot;&gt;Xref server&lt;/a&gt;&lt;/code&gt; . Модуль не будет членом какого-либо приложения. Возвращает имя модуля.</target>
        </trans-unit>
        <trans-unit id="32c8a7869e19433d754f5fcd1913f72de6ee2803" translate="yes" xml:space="preserve">
          <source>Adds a new &lt;code&gt;Key&lt;/code&gt; to the process dictionary, associated with the value &lt;code&gt;Val&lt;/code&gt;, and returns &lt;code&gt;undefined&lt;/code&gt;. If &lt;code&gt;Key&lt;/code&gt; exists, the old value is deleted and replaced by &lt;code&gt;Val&lt;/code&gt;, and the function returns the old value. Example:</source>
          <target state="translated">Добавляет новый &lt;code&gt;Key&lt;/code&gt; в словарь процесса, связанный со значением &lt;code&gt;Val&lt;/code&gt; , и возвращает &lt;code&gt;undefined&lt;/code&gt; . Если &lt;code&gt;Key&lt;/code&gt; существует, старое значение удаляется и заменяется &lt;code&gt;Val&lt;/code&gt; , а функция возвращает старое значение. Пример:</target>
        </trans-unit>
        <trans-unit id="72a77907fe15211efb4ac1705211f4a6082a3750" translate="yes" xml:space="preserve">
          <source>Adds a new event handler in the same way as &lt;code&gt;&lt;a href=&quot;#add_handler-3&quot;&gt;add_handler/3&lt;/a&gt;&lt;/code&gt;, but also supervises the connection between the event handler and the calling process.</source>
          <target state="translated">Добавляет новый обработчик событий так же, как &lt;code&gt;&lt;a href=&quot;#add_handler-3&quot;&gt;add_handler/3&lt;/a&gt;&lt;/code&gt; , но также контролирует соединение между обработчиком событий и вызывающим процессом.</target>
        </trans-unit>
        <trans-unit id="e9446fd51850eeb6666eac3dc67fdb3d82b72082" translate="yes" xml:space="preserve">
          <source>Adds a new event handler to event manager &lt;code&gt;EventMgrRef&lt;/code&gt;. The event manager calls &lt;code&gt;&lt;a href=&quot;#Module:init-1&quot;&gt;Module:init/1&lt;/a&gt;&lt;/code&gt; to initiate the event handler and its internal state.</source>
          <target state="translated">Добавляет новый обработчик событий в диспетчер событий &lt;code&gt;EventMgrRef&lt;/code&gt; . Диспетчер событий вызывает &lt;code&gt;&lt;a href=&quot;#Module:init-1&quot;&gt;Module:init/1&lt;/a&gt;&lt;/code&gt; , чтобы запустить обработчик событий и его внутреннее состояние.</target>
        </trans-unit>
        <trans-unit id="be923232cecb872d45d1007a0378c8bbbe25c6cc" translate="yes" xml:space="preserve">
          <source>Adds a new event handler to the error logger. The event handler must be implemented as a &lt;code&gt;gen_event&lt;/code&gt; callback module, see &lt;code&gt;gen_event(3)&lt;/code&gt;.</source>
          <target state="translated">Добавляет новый обработчик событий в журнал ошибок. Обработчик событий должен быть реализован как &lt;code&gt;gen_event&lt;/code&gt; обратного вызова gen_event , см. &lt;code&gt;gen_event(3)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="346f98f933f954790f0ea34b8324039679ac74dd" translate="yes" xml:space="preserve">
          <source>Adds a node to &lt;code&gt;node_pool&lt;/code&gt;. The new node pool affects the list returned from the function &lt;code&gt;&lt;a href=&quot;mnesia#table_info-2&quot;&gt;mnesia:table_info(Tab, frag_dist)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Добавляет узел в &lt;code&gt;node_pool&lt;/code&gt; . Новый пул узлов влияет на список, возвращаемый функцией &lt;code&gt;&lt;a href=&quot;mnesia#table_info-2&quot;&gt;mnesia:table_info(Tab, frag_dist)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="35b3eb9263608d380a272fe1f7c6c1eafd65bf84" translate="yes" xml:space="preserve">
          <source>Adds a notify definition to the agent config. Equivalent to one line in the &lt;code&gt;notify.conf&lt;/code&gt; file.</source>
          <target state="translated">Добавляет определение уведомления в конфигурацию агента. Эквивалентно одной строке в файле &lt;code&gt;notify.conf&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="13890bf5b34b3baf9845e8775db87c295022c6ec" translate="yes" xml:space="preserve">
          <source>Adds a phony target for each dependency.</source>
          <target state="translated">Добавляет фальшивую цель для каждой зависимости.</target>
        </trans-unit>
        <trans-unit id="29b1ac0ca171003684f30d397e314620318042ec" translate="yes" xml:space="preserve">
          <source>Adds a reference to resource object &lt;code&gt;obj&lt;/code&gt; obtained from &lt;code&gt;&lt;a href=&quot;#enif_alloc_resource&quot;&gt;enif_alloc_resource&lt;/a&gt;&lt;/code&gt;. Each call to &lt;code&gt;enif_keep_resource&lt;/code&gt; for an object must be balanced by a call to &lt;code&gt;&lt;a href=&quot;#enif_release_resource&quot;&gt;enif_release_resource&lt;/a&gt;&lt;/code&gt; before the object is destructed.</source>
          <target state="translated">Добавляет ссылку на объект ресурса &lt;code&gt;obj&lt;/code&gt; , полученный из &lt;code&gt;&lt;a href=&quot;#enif_alloc_resource&quot;&gt;enif_alloc_resource&lt;/a&gt;&lt;/code&gt; . Каждый вызов &lt;code&gt;enif_keep_resource&lt;/code&gt; для объекта должен быть сбалансирован вызовом &lt;code&gt;&lt;a href=&quot;#enif_release_resource&quot;&gt;enif_release_resource&lt;/a&gt;&lt;/code&gt; до того, как объект будет уничтожен.</target>
        </trans-unit>
        <trans-unit id="ac2aa5a6a26bf2accad0209a44849095d34310fd" translate="yes" xml:space="preserve">
          <source>Adds a release, the applications of the release, the modules of the applications, and &lt;code&gt;&lt;a href=&quot;#module_data&quot;&gt;module data&lt;/a&gt;&lt;/code&gt; of the modules to an &lt;code&gt;&lt;a href=&quot;#xref_server&quot;&gt;Xref server&lt;/a&gt;&lt;/code&gt;. The applications will be members of the release, and the modules will be members of the applications. The default is to use the base name of the directory as release name, but this can be overridden by the &lt;code&gt;name&lt;/code&gt; option. Returns the name of the release.</source>
          <target state="translated">Добавляет выпуск, приложения выпуска, модули приложений и &lt;code&gt;&lt;a href=&quot;#module_data&quot;&gt;module data&lt;/a&gt;&lt;/code&gt; модулей модулей на &lt;code&gt;&lt;a href=&quot;#xref_server&quot;&gt;Xref server&lt;/a&gt;&lt;/code&gt; . Приложения будут членами выпуска, а модули будут членами приложений. По умолчанию в качестве имени выпуска используется базовое имя каталога, но это можно изменить с помощью параметра &lt;code&gt;name&lt;/code&gt; . Возвращает название выпуска.</target>
        </trans-unit>
        <trans-unit id="5963e0eadddadc6570ac86b11276f6f4e83b3156" translate="yes" xml:space="preserve">
          <source>Adds a security to group definition to the agent config. Equivalent to one vacmSecurityToGroup-line in the &lt;code&gt;vacm.conf&lt;/code&gt; file.</source>
          <target state="translated">Добавляет безопасность для определения группы в конфигурацию агента. Эквивалентно одной строке &lt;code&gt;vacm.conf&lt;/code&gt; файле vacm.conf .</target>
        </trans-unit>
        <trans-unit id="d4f785833568b0e86ada1e532e1405f500e20a42" translate="yes" xml:space="preserve">
          <source>Adds a small tag to each allocated block that contains basic information about what it is and who allocated it. See &lt;code&gt;&lt;a href=&quot;#M_atags&quot;&gt;+M&amp;lt;S&amp;gt;atags&lt;/a&gt;&lt;/code&gt; for a more complete description.</source>
          <target state="translated">Добавляет небольшой тег к каждому выделенному блоку, который содержит основную информацию о том, что это такое и кто его выделил. Смотрите &lt;code&gt;&lt;a href=&quot;#M_atags&quot;&gt;+M&amp;lt;S&amp;gt;atags&lt;/a&gt;&lt;/code&gt; для более полного описания.</target>
        </trans-unit>
        <trans-unit id="0dfd9dbecdeed6491e670fb60727a24505e80431" translate="yes" xml:space="preserve">
          <source>Adds a small tag to each allocated block that contains basic information about what it is and who allocated it. Use the &lt;code&gt;instrument&lt;/code&gt; module to inspect this information.</source>
          <target state="translated">Добавляет небольшой тег к каждому выделенному блоку, который содержит основную информацию о том, что это такое и кто его выделил. Используйте модуль &lt;code&gt;instrument&lt;/code&gt; для проверки этой информации.</target>
        </trans-unit>
        <trans-unit id="e4864b206394f8b2d7b76e4230a5c12a58cc9d0e" translate="yes" xml:space="preserve">
          <source>Adds a target address definition to the agent config. Equivalent to one line in the &lt;code&gt;target_addr.conf&lt;/code&gt; file.</source>
          <target state="translated">Добавляет определение целевого адреса в конфигурацию агента. Эквивалентно одной строке в файле &lt;code&gt;target_addr.conf&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="82b2d6b8384860d53fc589e045f4515d51086799" translate="yes" xml:space="preserve">
          <source>Adds a target parameter definition to the agent config. Equivalent to one line in the &lt;code&gt;target_params.conf&lt;/code&gt; file.</source>
          <target state="translated">Добавляет определение целевого параметра в конфигурацию агента. Эквивалентно одной строке в файле &lt;code&gt;target_params.conf&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5794b16429f3c188c00edeb3043c4596518ea624" translate="yes" xml:space="preserve">
          <source>Adds a view tree family definition to the agent config. Equivalent to one vacmViewTreeFamily-line in the &lt;code&gt;vacm.conf&lt;/code&gt; file.</source>
          <target state="translated">Добавляет определение семейства дерева представлений в конфигурацию агента. Эквивалентно одной строке &lt;code&gt;vacm.conf&lt;/code&gt; файле vacm.conf .</target>
        </trans-unit>
        <trans-unit id="10d0b1e780ad0788836f31276e65ce6efb15e764" translate="yes" xml:space="preserve">
          <source>Adds an application, the modules of the application and &lt;code&gt;&lt;a href=&quot;#module_data&quot;&gt;module data&lt;/a&gt;&lt;/code&gt; of the modules to an &lt;code&gt;&lt;a href=&quot;#xref_server&quot;&gt;Xref server&lt;/a&gt;&lt;/code&gt;. The modules will be members of the application. The default is to use the base name of the directory with the version removed as application name, but this can be overridden by the &lt;code&gt;name&lt;/code&gt; option. Returns the name of the application.</source>
          <target state="translated">Добавляет приложение, модули приложения и &lt;code&gt;&lt;a href=&quot;#module_data&quot;&gt;module data&lt;/a&gt;&lt;/code&gt; модулей модулей на &lt;code&gt;&lt;a href=&quot;#xref_server&quot;&gt;Xref server&lt;/a&gt;&lt;/code&gt; . Модули будут членами приложения. По умолчанию в качестве имени приложения используется базовое имя каталога с удаленной версией, но это можно изменить с помощью параметра &lt;code&gt;name&lt;/code&gt; . Возвращает имя приложения.</target>
        </trans-unit>
        <trans-unit id="110ffd01521ffa85d725f633c684562720f4ba39" translate="yes" xml:space="preserve">
          <source>Adds binding &lt;code&gt;Name=Value&lt;/code&gt; to &lt;code&gt;BindingStruct&lt;/code&gt;. Returns an updated binding structure.</source>
          <target state="translated">Добавляет привязку &lt;code&gt;Name=Value&lt;/code&gt; в &lt;code&gt;BindingStruct&lt;/code&gt; . Возвращает обновленную структуру привязки.</target>
        </trans-unit>
        <trans-unit id="166b6b5a44b378b7ef528300e6dd1ab66edcbe83" translate="yes" xml:space="preserve">
          <source>Adds nodes to current cover test. Notice that this only works if cover support is active.</source>
          <target state="translated">Добавляет узлы к текущему тесту на обложку.Обратите внимание,что это работает,только если активна поддержка обложки.</target>
        </trans-unit>
        <trans-unit id="ebbd57f6aab385f9f5cefe84013bbde0f94bd2a8" translate="yes" xml:space="preserve">
          <source>Adds optional capabilities and sends a &lt;code&gt;hello&lt;/code&gt; message to the server and waits for the return.</source>
          <target state="translated">Добавляет дополнительные возможности и отправляет &lt;code&gt;hello&lt;/code&gt; сообщение на сервер и ожидает ответа.</target>
        </trans-unit>
        <trans-unit id="f4e867c0e696fbab1087c9d79da2f2d90aa8bb6f" translate="yes" xml:space="preserve">
          <source>Adds or updates annotations on nodes in a syntax tree. &lt;code&gt;Bindings&lt;/code&gt; specifies the set of bound variables in the environment of the top level node. The following annotations are affected:</source>
          <target state="translated">Добавляет или обновляет аннотации к узлам в синтаксическом дереве. &lt;code&gt;Bindings&lt;/code&gt; задают набор связанных переменных в среде узла верхнего уровня. Затронуты следующие аннотации:</target>
        </trans-unit>
        <trans-unit id="b3ac712b8a650dd6e42451afed1ca538238431c7" translate="yes" xml:space="preserve">
          <source>Adds or updates annotations on nodes in a syntax tree. Equivalent to &lt;code&gt;annotate_bindings(Tree, Bindings)&lt;/code&gt; where the top-level environment &lt;code&gt;Bindings&lt;/code&gt; is taken from the annotation &lt;code&gt;{env, Bindings}&lt;/code&gt; on the root node of &lt;code&gt;Tree&lt;/code&gt;. An exception is thrown if no such annotation should exist.</source>
          <target state="translated">Добавляет или обновляет аннотации к узлам в синтаксическом дереве. Эквивалентно &lt;code&gt;annotate_bindings(Tree, Bindings)&lt;/code&gt; где &lt;code&gt;Bindings&lt;/code&gt; среды верхнего уровня берутся из аннотации &lt;code&gt;{env, Bindings}&lt;/code&gt; в корневом узле &lt;code&gt;Tree&lt;/code&gt; . Если такой аннотации не должно существовать, генерируется исключение.</target>
        </trans-unit>
        <trans-unit id="7bbf9ca1c736db15763a8239f95f4d5c1b66558d" translate="yes" xml:space="preserve">
          <source>Adds the directories in &lt;code&gt;Dirs&lt;/code&gt; to the end of the code path. If a &lt;code&gt;Dir&lt;/code&gt; exists, it is not added.</source>
          <target state="translated">Добавляет каталоги в &lt;code&gt;Dirs&lt;/code&gt; в конец пути кода. Если &lt;code&gt;Dir&lt;/code&gt; существует, он не добавляется.</target>
        </trans-unit>
        <trans-unit id="c8d419cc2314f6341b04eb8bad24bf2f277d7f87" translate="yes" xml:space="preserve">
          <source>Adds the modules found in the given directory and the &lt;code&gt;&lt;a href=&quot;#module_data&quot;&gt;modules' data&lt;/a&gt;&lt;/code&gt; to an &lt;code&gt;&lt;a href=&quot;#xref_server&quot;&gt;Xref server&lt;/a&gt;&lt;/code&gt;. The default is not to examine subdirectories, but if the option &lt;code&gt;recurse&lt;/code&gt; has the value &lt;code&gt;true&lt;/code&gt;, modules are searched for in subdirectories on all levels as well as in the given directory. Returns a sorted list of the names of the added modules.</source>
          <target state="translated">Добавляет модули, найденные в данном каталоге, и &lt;code&gt;&lt;a href=&quot;#module_data&quot;&gt;modules' data&lt;/a&gt;&lt;/code&gt; на &lt;code&gt;&lt;a href=&quot;#xref_server&quot;&gt;Xref server&lt;/a&gt;&lt;/code&gt; . По умолчанию подкаталоги не проверяются, но если параметр &lt;code&gt;recurse&lt;/code&gt; имеет значение &lt;code&gt;true&lt;/code&gt; , модули ищутся в подкаталогах на всех уровнях, а также в заданном каталоге. Возвращает отсортированный список имен добавленных модулей.</target>
        </trans-unit>
        <trans-unit id="34d712dcc34471fdb6acaa22554dc0975d1f5dc6" translate="yes" xml:space="preserve">
          <source>Adds the registered name of the process. This can be useful when tracing on many nodes, as processes with that name are then traced on all traced nodes.</source>
          <target state="translated">Добавляет зарегистрированное название процесса.Это может быть полезно при трассировке на многих узлах,так как процессы с таким именем затем трассируются на всех отслеживаемых узлах.</target>
        </trans-unit>
        <trans-unit id="6bbf14dbe70908fe6ce0549e066a68aa359629b3" translate="yes" xml:space="preserve">
          <source>Adds the selected process and all processes below, right of it, to tab &lt;strong&gt;Trace Overview&lt;/strong&gt;.</source>
          <target state="translated">Добавляет выбранный процесс и все процессы ниже, справа от него, на вкладку &lt;strong&gt;Trace Overview&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="3fcbc67018c8db0d7d54f40db7c26439211fb94f" translate="yes" xml:space="preserve">
          <source>Adds the selected process identifier to tab &lt;strong&gt;Trace Overview&lt;/strong&gt; plus the node that the process resides on.</source>
          <target state="translated">Добавляет выбранный идентификатор процесса на вкладку &lt;strong&gt;Обзор трассировки&lt;/strong&gt; плюс узел, на котором находится процесс.</target>
        </trans-unit>
        <trans-unit id="3aebb82fdca9aa95c0538fef0af13a3b616d5fe2" translate="yes" xml:space="preserve">
          <source>Adds the specified directories to the beginning of the code path, similar to &lt;code&gt;code:add_pathsa/1&lt;/code&gt;. Note that the order of the given directories will be reversed in the resulting path.</source>
          <target state="translated">Добавляет указанные каталоги в начало пути кода, аналогично &lt;code&gt;code:add_pathsa/1&lt;/code&gt; . Обратите внимание, что порядок данных каталогов в конечном пути будет обратным.</target>
        </trans-unit>
        <trans-unit id="0a1c883186e0d00a77adaf41f013ddc82c811398" translate="yes" xml:space="preserve">
          <source>Adds the specified directories to the end of the code path, similar to &lt;code&gt;code:add_pathsz/1&lt;/code&gt;; see &lt;code&gt;code(3)&lt;/code&gt;.</source>
          <target state="translated">Добавляет указанные каталоги в конец пути кода, аналогично &lt;code&gt;code:add_pathsz/1&lt;/code&gt; ; см. &lt;code&gt;code(3)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1d2e0e96fcba01247b2f834ed2a0365db181f6d4" translate="yes" xml:space="preserve">
          <source>Adds the specified primary filters.</source>
          <target state="translated">Добавляет указанные первичные фильтры.</target>
        </trans-unit>
        <trans-unit id="d613e82163d56d8326249e8169f52e84f75a04cb" translate="yes" xml:space="preserve">
          <source>Adds these extensions to the list of compress extensions.</source>
          <target state="translated">Добавляет эти расширения в список расширений компрессора.</target>
        </trans-unit>
        <trans-unit id="25822e567273ecdc04d1dd713da5a9ee0671d675" translate="yes" xml:space="preserve">
          <source>Adds these extensions to the list of uncompress extensions.</source>
          <target state="translated">Добавляет эти расширения в список несжатых расширений.</target>
        </trans-unit>
        <trans-unit id="2f502d97e1ab810c3754afd45a8594c92efa30f8" translate="yes" xml:space="preserve">
          <source>Adds to &lt;code&gt;Forms&lt;/code&gt; the code for the standard pre-defined functions (such as &lt;code&gt;module_info/0&lt;/code&gt;) that are to be included in every module.</source>
          <target state="translated">Добавляет в &lt;code&gt;Forms&lt;/code&gt; код стандартных предопределенных функций (таких как &lt;code&gt;module_info/0&lt;/code&gt; ), которые должны быть включены в каждый модуль.</target>
        </trans-unit>
        <trans-unit id="bb8f1512f2d702beeef48e8c7223a0b1dde1e4a0" translate="yes" xml:space="preserve">
          <source>Adjust the process(&quot;beam&quot;) reference to your beam version and attach the script to a running &quot;beam&quot; instance:</source>
          <target state="translated">Настройте ссылку process(&quot;beam&quot;)на вашу версию луча и прикрепите скрипт к работающему экземпляру &quot;beam&quot;:</target>
        </trans-unit>
        <trans-unit id="c57f256463601b2a2c62f254f5126bfecb16a4d2" translate="yes" xml:space="preserve">
          <source>Adjusts the SSH flow control window. This is to be done by both the client- and server-side channel processes.</source>
          <target state="translated">Регулирует окно управления потоком SSH.Это должно быть сделано как клиентским,так и серверным каналом.</target>
        </trans-unit>
        <trans-unit id="980e8823b26ab3a416e4eec330a78a5f567d8a4d" translate="yes" xml:space="preserve">
          <source>Affects SSL-3.0 and TLS-1.0 connections only. Used to change the BEAST mitigation strategy to interoperate with legacy software. Defaults to &lt;code&gt;one_n_minus_one&lt;/code&gt;.</source>
          <target state="translated">Влияет только на соединения SSL-3.0 и TLS-1.0. Используется для изменения стратегии защиты BEAST для взаимодействия с устаревшим программным обеспечением. По умолчанию &lt;code&gt;one_n_minus_one&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c6004ea02cc23d09682422b618c26d349782aa93" translate="yes" xml:space="preserve">
          <source>Affects TLS-1.0 connections only. If set to &lt;code&gt;false&lt;/code&gt;, it disables the block cipher padding check to be able to interoperate with legacy software.</source>
          <target state="translated">Влияет только на соединения TLS-1.0. Если установлено значение &lt;code&gt;false&lt;/code&gt; , он отключает проверку заполнения блочного шифра, чтобы иметь возможность взаимодействовать с устаревшим программным обеспечением.</target>
        </trans-unit>
        <trans-unit id="4b6ffc59171bd18b8e61a3e781dab573deabf10a" translate="yes" xml:space="preserve">
          <source>Affects ports to external programs on Windows only. The standard input and standard output handles of the port program are, if this option is supplied, opened with flag &lt;code&gt;FILE_FLAG_OVERLAPPED&lt;/code&gt;, so that the port program can (and must) do overlapped I/O on its standard handles. This is not normally the case for simple port programs, but an option of value for the experienced Windows programmer. &lt;strong&gt;On all other platforms, this option is silently discarded.&lt;/strong&gt;</source>
          <target state="translated">Влияет только на порты внешних программ в Windows. Стандартные дескрипторы ввода и вывода программы порта, если указана эта опция, открываются с флагом &lt;code&gt;FILE_FLAG_OVERLAPPED&lt;/code&gt; , так что программа порта может (и должна) выполнять перекрывающийся ввод-вывод на своих стандартных дескрипторах. Обычно это не относится к простым портированным программам, но это вариант, представляющий ценность для опытного программиста Windows. &lt;strong&gt;На всех других платформах эта опция автоматически игнорируется.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cf4fb0d4263b60ac21dc80f51c2dec3dcfb5747e" translate="yes" xml:space="preserve">
          <source>Affects ports to external programs. The executed program gets its standard error file redirected to its standard output file. &lt;code&gt;stderr_to_stdout&lt;/code&gt; and &lt;code&gt;nouse_stdio&lt;/code&gt; are mutually exclusive.</source>
          <target state="translated">Влияет на порты внешних программ. Выполняемая программа перенаправляет свой стандартный файл ошибок в стандартный выходной файл. &lt;code&gt;stderr_to_stdout&lt;/code&gt; и &lt;code&gt;nouse_stdio&lt;/code&gt; являются взаимоисключающими.</target>
        </trans-unit>
        <trans-unit id="76c066b0f9a1e6496e99cead0881b8f872728f45" translate="yes" xml:space="preserve">
          <source>After LTTng is properly installed on the system Erlang/OTP can be built with LTTng support.</source>
          <target state="translated">После правильной установки LTTng в систему Erlang/OTP можно построить с поддержкой LTTng.</target>
        </trans-unit>
        <trans-unit id="1facbcf11ae5793aa1bc80ef16d286aebd0fc34d" translate="yes" xml:space="preserve">
          <source>After \0 up to two further octal digits are read. If there are fewer than two digits, just those that are present are used. Thus the sequence \0\x\015 specifies two binary zeros followed by a CR character (code value 13). Make sure you supply two digits after the initial zero if the pattern character that follows is itself an octal digit.</source>
          <target state="translated">После \0 читаются еще две восьмеричные цифры.Если их меньше двух,используются только те,которые присутствуют.Таким образом,последовательность \0\x\015 задает два двоичных нуля,за которыми следует символ CR (значение кода 13).Убедитесь,что после начального нуля введены две цифры,если последующий символ паттерна сам по себе является восьмеричной цифрой.</target>
        </trans-unit>
        <trans-unit id="d732389ea2448ab3a2fa3d0a36ca3e321f1eb8c8" translate="yes" xml:space="preserve">
          <source>After a partial match or a failed match, the last encountered name in the entire match process is returned, for example:</source>
          <target state="translated">После частичного совпадения или неудачного совпадения возвращается,например,фамилия,которая встречалась во время всего процесса поиска:</target>
        </trans-unit>
        <trans-unit id="18ee0e3703c2647b03b1406f234f9cc3d123429d" translate="yes" xml:space="preserve">
          <source>After adding more records to the &lt;code&gt;Company&lt;/code&gt; database, the result can be the following records:</source>
          <target state="translated">После добавления дополнительных записей в базу данных &lt;code&gt;Company&lt;/code&gt; результатом могут быть следующие записи:</target>
        </trans-unit>
        <trans-unit id="22669be288b8402f937e20a5b4c0d8be02ada8ae" translate="yes" xml:space="preserve">
          <source>After an analysis, you can inspect this information. In the &lt;strong&gt;PLT&lt;/strong&gt; menu you can choose to either search the PLT or inspect the contents of the whole PLT. The information is presented in &lt;code&gt;EDoc&lt;/code&gt; format.</source>
          <target state="translated">После анализа вы можете проверить эту информацию. В меню &lt;strong&gt;PLT&lt;/strong&gt; вы можете выбрать либо поиск по PLT, либо просмотр содержимого всего PLT. Информация представлена ​​в формате &lt;code&gt;EDoc&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6ef9c0c6bbe4e27c696f859b427107c4e849d03c" translate="yes" xml:space="preserve">
          <source>After any post hook has been executed for all installed CTHs, &lt;code&gt;&lt;a href=&quot;ct_hooks#Module:on_tc_fail-4&quot;&gt;on_tc_fail&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;ct_hooks#Module:on_tc_skip-4&quot;&gt;on_tc_skip&lt;/a&gt;&lt;/code&gt; is called if the testcase failed or was skipped, respectively. You cannot affect the outcome of the tests any further at this point.</source>
          <target state="translated">После того, как любой обработчик post был выполнен для всех установленных CTH, &lt;code&gt;&lt;a href=&quot;ct_hooks#Module:on_tc_fail-4&quot;&gt;on_tc_fail&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;ct_hooks#Module:on_tc_skip-4&quot;&gt;on_tc_skip&lt;/a&gt;&lt;/code&gt; , если тестовый сценарий не прошел или был пропущен, соответственно. На этом этапе вы больше не можете повлиять на результат тестов.</target>
        </trans-unit>
        <trans-unit id="f056750b4e33f30fb9d5942f6265a2d4f346b9dc" translate="yes" xml:space="preserve">
          <source>After at least one tab-character, the line added is to contain the full name of the named pipe where &lt;code&gt;syslogd&lt;/code&gt; writes its information. The path must be the same as for the files &lt;code&gt;syslog.conf.ORIG&lt;/code&gt; and &lt;code&gt;syslog.conf.OTP&lt;/code&gt;. The filename must be &lt;code&gt;syslog.otp&lt;/code&gt;.</source>
          <target state="translated">После хотя бы одного символа табуляции добавляемая строка должна содержать полное имя именованного канала, в который &lt;code&gt;syslogd&lt;/code&gt; записывает свою информацию. Путь должен быть таким же, как и для файлов &lt;code&gt;syslog.conf.ORIG&lt;/code&gt; и &lt;code&gt;syslog.conf.OTP&lt;/code&gt; . Имя файла должно быть &lt;code&gt;syslog.otp&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5ce4ab81087082fd95156bdaf8c2e0786410e8e3" translate="yes" xml:space="preserve">
          <source>After completing all the normal building steps described above a debug enabled runtime system can be built. To do this you have to change directory to &lt;code&gt;$ERL_TOP/erts/emulator&lt;/code&gt; and execute:</source>
          <target state="translated">После выполнения всех обычных шагов сборки, описанных выше, можно построить систему времени выполнения с включенной отладкой. Для этого вам нужно сменить каталог на &lt;code&gt;$ERL_TOP/erts/emulator&lt;/code&gt; и выполнить:</target>
        </trans-unit>
        <trans-unit id="9cd742cd300933dfb65e0a535f4d15de36d37f01" translate="yes" xml:space="preserve">
          <source>After decoding a message various user callback functions are invoked in order to allow the user to act properly. See the megaco_user module for more info about the callback arguments.</source>
          <target state="translated">После декодирования сообщения вызываются различные функции обратного вызова для того,чтобы пользователь мог действовать корректно.Подробнее об аргументах обратного вызова смотрите в модуле megaco_user.</target>
        </trans-unit>
        <trans-unit id="dc240b1130d5df1612bf5772e5400cd74e1cad80" translate="yes" xml:space="preserve">
          <source>After flag fields for atom cache references, another half byte flag field is located with the following format:</source>
          <target state="translated">После полей флагов для ссылок на атомный кэш расположено еще одно полбайтовое поле флага со следующим форматом:</target>
        </trans-unit>
        <trans-unit id="8aca18c81b4ecc6e98bd69677c9d22a41d1f8407" translate="yes" xml:space="preserve">
          <source>After initialization, you set up the connection to the Erlang node. To specify the Erlang node you want to connect to, use &lt;code&gt;erl_connect()&lt;/code&gt;. The following example sets up the connection and is to result in a valid socket file descriptor:</source>
          <target state="translated">После инициализации вы настраиваете соединение с узлом Erlang. Чтобы указать узел Erlang, к &lt;code&gt;erl_connect()&lt;/code&gt; вы хотите подключиться, используйте erl_connect () . Следующий пример устанавливает соединение и должен привести к действительному дескриптору файла сокета:</target>
        </trans-unit>
        <trans-unit id="71297d463c83eda2a6c9154b983ee09e837036ff" translate="yes" xml:space="preserve">
          <source>After installation you can access the documentation by</source>
          <target state="translated">После установки вы можете получить доступ к документации по</target>
        </trans-unit>
        <trans-unit id="6b0c5270a184c48e498da3c725b4712069c50f99" translate="yes" xml:space="preserve">
          <source>After matching all six digits and then failing to match &quot;foo&quot;, the normal action of the matcher is to try again with only five digits matching item \d+, and then with four, and so on, before ultimately failing. &quot;Atomic grouping&quot; (a term taken from Jeffrey Friedl's book) provides the means for specifying that once a subpattern has matched, it is not to be re-evaluated in this way.</source>
          <target state="translated">После совпадения всех шести цифр,а затем неудачи с &quot;фу&quot;,обычным действием матчера является повторная попытка только с пятью цифрами,совпадающими с элементом \d+,а затем с четырьмя,и так далее,прежде чем в конечном итоге неудача.&quot;Атомная группировка&quot; (термин,взятый из книги Джеффри Фридла)дает возможность указать,что как только подмасказка совпадает,она не должна подвергаться повторной оценке таким образом.</target>
        </trans-unit>
        <trans-unit id="ae043d6d909deeb13bd861dc2fdf16fc111c0f4f" translate="yes" xml:space="preserve">
          <source>After reading the &lt;code&gt;erts_alloc(3)&lt;/code&gt; documentation, the returned information more or less speaks for itself, but it can be worth explaining some things. Call counts are presented by two values, the first value is giga calls, and the second value is calls. &lt;code&gt;mbcs&lt;/code&gt; and &lt;code&gt;sbcs&lt;/code&gt; denote multi-block carriers, and single-block carriers, respectively. Sizes are presented in bytes. When a size is not presented, it is the amount of something. Sizes and amounts are often presented by three values:</source>
          <target state="translated">После прочтения документации по &lt;code&gt;erts_alloc(3)&lt;/code&gt; возвращенная информация более или менее говорит сама за себя, но, возможно, стоит объяснить некоторые вещи. Счетчики вызовов представлены двумя значениями: первое значение - гигабайтные вызовы, а второе - вызовы. &lt;code&gt;mbcs&lt;/code&gt; и &lt;code&gt;sbcs&lt;/code&gt; обозначают многоблочные несущие и одноблочные несущие соответственно. Размеры представлены в байтах. Когда размер не указан, это количество чего-то. Размеры и суммы часто представлены тремя значениями:</target>
        </trans-unit>
        <trans-unit id="e9095c6393c06f16504fcb2b9e560f38a38a063b" translate="yes" xml:space="preserve">
          <source>After registering the name, use &lt;code&gt;&lt;a href=&quot;erl_connect#erl_accept&quot;&gt;erl_connect:erl_accept&lt;/a&gt;&lt;/code&gt; to wait for incoming connections.</source>
          <target state="translated">После регистрации имени используйте &lt;code&gt;&lt;a href=&quot;erl_connect#erl_accept&quot;&gt;erl_connect:erl_accept&lt;/a&gt;&lt;/code&gt; для ожидания входящих соединений.</target>
        </trans-unit>
        <trans-unit id="d3c38468398c9f7ba65583a0574f32622bbcf3f0" translate="yes" xml:space="preserve">
          <source>After sending the message &lt;code&gt;pong&lt;/code&gt; to the process &quot;ping&quot;, &quot;pong&quot; calls the &lt;code&gt;pong&lt;/code&gt; function again, which causes it to get back to the &lt;code&gt;receive&lt;/code&gt; again and wait for another message.</source>
          <target state="translated">После отправки сообщения &lt;code&gt;pong&lt;/code&gt; процессу &amp;laquo;ping&amp;raquo;, &amp;laquo;pong&amp;raquo; снова вызывает функцию &lt;code&gt;pong&lt;/code&gt; , что заставляет его снова вернуться к &lt;code&gt;receive&lt;/code&gt; и ждать следующего сообщения.</target>
        </trans-unit>
        <trans-unit id="e36306045d856ed44b3178bdde7ee2e0ace1e9c1" translate="yes" xml:space="preserve">
          <source>After setting the dictionary the inflate operation should be retried without new input.</source>
          <target state="translated">После настройки словаря операцию надувания следует повторить без нового ввода.</target>
        </trans-unit>
        <trans-unit id="46b2484894cf1b418bcc258ea3f4b87e3bcd685f" translate="yes" xml:space="preserve">
          <source>After testing that the client process exists:</source>
          <target state="translated">После проверки,что клиентский процесс существует:</target>
        </trans-unit>
        <trans-unit id="22756028dc88f951673801206c8f0149ec02c1b4" translate="yes" xml:space="preserve">
          <source>After the &lt;code&gt;Flags&lt;/code&gt; field follow the &lt;code&gt;AtomCacheRefs&lt;/code&gt;. The first &lt;code&gt;AtomCacheRef&lt;/code&gt; is the one corresponding to &lt;code&gt;AtomCacheReferenceIndex&lt;/code&gt; 0. Higher indices follow in sequence up to index &lt;code&gt;NumberOfAtomCacheRefs - 1&lt;/code&gt;.</source>
          <target state="translated">После поля &lt;code&gt;Flags&lt;/code&gt; следуйте &lt;code&gt;AtomCacheRefs&lt;/code&gt; . Первый &lt;code&gt;AtomCacheRef&lt;/code&gt; - это тот, который соответствует &lt;code&gt;AtomCacheReferenceIndex&lt;/code&gt; 0. Более высокие индексы следуют последовательно до индекса &lt;code&gt;NumberOfAtomCacheRefs - 1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dca4e4c96c0a14c7be226e5bd7489709c72d0c43" translate="yes" xml:space="preserve">
          <source>After the application specifications have been updated, the instructions in the script are evaluated and the function returns &lt;code&gt;{ok,OtherVsn,Descr}&lt;/code&gt; if successful. &lt;code&gt;OtherVsn&lt;/code&gt; and &lt;code&gt;Descr&lt;/code&gt; are the version (&lt;code&gt;UpFromVsn&lt;/code&gt; or &lt;code&gt;Vsn&lt;/code&gt;) and description (&lt;code&gt;Descr1&lt;/code&gt; or &lt;code&gt;Descr2&lt;/code&gt;) as specified in the script.</source>
          <target state="translated">После обновления спецификаций приложения выполняются инструкции в сценарии, и в случае успеха функция возвращает &lt;code&gt;{ok,OtherVsn,Descr}&lt;/code&gt; . &lt;code&gt;OtherVsn&lt;/code&gt; и &lt;code&gt;Descr&lt;/code&gt; - это версия ( &lt;code&gt;UpFromVsn&lt;/code&gt; или &lt;code&gt;Vsn&lt;/code&gt; ) и описание ( &lt;code&gt;Descr1&lt;/code&gt; или &lt;code&gt;Descr2&lt;/code&gt; ), как указано в скрипте.</target>
        </trans-unit>
        <trans-unit id="0d4f7a31773a30c9ab44ee914a380f7ad8d9358d" translate="yes" xml:space="preserve">
          <source>After the change, 5 lines are presented as follows:</source>
          <target state="translated">После изменения 5 строк представлены следующим образом:</target>
        </trans-unit>
        <trans-unit id="2c691aee72f4af2559c4df9a131c0a55a89cadf0" translate="yes" xml:space="preserve">
          <source>After the database is deleted, it can still be possible to start Mnesia as a disc-less node. This depends on how configuration parameter &lt;code&gt;schema_location&lt;/code&gt; is set.</source>
          <target state="translated">После удаления базы данных Mnesia все еще можно будет запустить как бездисковый узел. Это зависит от того, как &lt;code&gt;schema_location&lt;/code&gt; параметр конфигурации schema_location .</target>
        </trans-unit>
        <trans-unit id="e4e458fe2735510f2a3f94986ee2e1c2798b1558" translate="yes" xml:space="preserve">
          <source>After the insertion of the employee named &lt;code&gt;klacke&lt;/code&gt;, the database has the following records:</source>
          <target state="translated">После вставки сотрудника по имени &lt;code&gt;klacke&lt;/code&gt; в базе данных есть следующие записи:</target>
        </trans-unit>
        <trans-unit id="014d2e6e6b7efad4c0429a37b959bc880d48f38c" translate="yes" xml:space="preserve">
          <source>After the installation, the application controller compares the old and new configuration parameters for all running applications and call the callback function:</source>
          <target state="translated">После установки контроллер приложений сравнивает старые и новые параметры конфигурации для всех запущенных приложений и вызывает функцию обратного вызова:</target>
        </trans-unit>
        <trans-unit id="8b5bb17b2c511826d46800999f421579e3ca514c" translate="yes" xml:space="preserve">
          <source>After the restore operation, the entire contents of the registry is marked as unmodified. Notice that this includes any objects that were modified before the restore and not overwritten by the restore.</source>
          <target state="translated">После операции восстановления все содержимое реестра помечается как неизмененное.Обратите внимание,что сюда относятся все объекты,которые были изменены до восстановления и не были перезаписаны при восстановлении.</target>
        </trans-unit>
        <trans-unit id="c4f3acb2fc60165a466769fee1869d300231ddf6" translate="yes" xml:space="preserve">
          <source>After the rootsymbol declaration comes an optional declaration of the &lt;code&gt;end_of_input&lt;/code&gt; symbol that your scanner is expected to use. For example:</source>
          <target state="translated">После объявления rootymbol следует необязательное объявление символа &lt;code&gt;end_of_input&lt;/code&gt; , который, как ожидается, будет использовать ваш сканер. Например:</target>
        </trans-unit>
        <trans-unit id="2770f0bd427f63fd51d60a2a398782f6d81807ca" translate="yes" xml:space="preserve">
          <source>After the successful build it's time to patch. The source tree directory, the directory of the installation and the applications to patch are given as arguments to &lt;code&gt;otp_patch_apply&lt;/code&gt;. The dependencies of each application are validated against the applications in the installation and the other applications given as arguments. If a dependency error is detected, the script will be aborted.</source>
          <target state="translated">После успешной сборки пора патчить. Каталог исходного дерева, каталог установки и приложения, которые нужно исправить, передаются в качестве аргументов для &lt;code&gt;otp_patch_apply&lt;/code&gt; . Зависимости каждого приложения проверяются на соответствие приложениям в установке и другим приложениям, указанным в качестве аргументов. Если обнаружена ошибка зависимости, сценарий будет прерван.</target>
        </trans-unit>
        <trans-unit id="59c978cfe3812d62d5db4509ebca4d4c5513e4b6" translate="yes" xml:space="preserve">
          <source>After the system has been cross built you can build and install the documentation the same way as after a native build of the system. See the &lt;code&gt;&lt;a href=&quot;install#How-to-Build-and-Install-ErlangOTP_How-to-Build-the-Documentation&quot;&gt;How to Build the Documentation&lt;/a&gt;&lt;/code&gt; section in the &lt;code&gt;&lt;a href=&quot;install&quot;&gt;$ERL_TOP/HOWTO/INSTALL.md&lt;/a&gt;&lt;/code&gt; document for information on how to build the documentation.</source>
          <target state="translated">После кросс-сборки системы вы можете собрать и установить документацию так же, как после собственной сборки системы. См. Раздел &amp;laquo; &lt;code&gt;&lt;a href=&quot;install#How-to-Build-and-Install-ErlangOTP_How-to-Build-the-Documentation&quot;&gt;How to Build the Documentation&lt;/a&gt;&lt;/code&gt; &amp;raquo; в документе &lt;code&gt;&lt;a href=&quot;install&quot;&gt;$ERL_TOP/HOWTO/INSTALL.md&lt;/a&gt;&lt;/code&gt; для получения информации о том, как создать документацию.</target>
        </trans-unit>
        <trans-unit id="9b3f9b5771b4280d0c55a70767959a27ea46eb52" translate="yes" xml:space="preserve">
          <source>After this is compiled and the file &lt;code&gt;tut19.beam&lt;/code&gt; is copied to the necessary directories, the following is seen on (pong@kosken):</source>
          <target state="translated">После того, как это скомпилировано и файл &lt;code&gt;tut19.beam&lt;/code&gt; скопирован в необходимые каталоги, на (pong @ kosken) будет видно следующее:</target>
        </trans-unit>
        <trans-unit id="e0717a39ec07e9aad70e9e475eae5bb9f752c8e1" translate="yes" xml:space="preserve">
          <source>Again, the &lt;code&gt;relup&lt;/code&gt; file is created manually. Either from scratch or by editing a generated version. Load all code for &lt;code&gt;ch_app&lt;/code&gt; first, and also load the application specification, before &lt;code&gt;prim_sup&lt;/code&gt; is updated. When downgrading, &lt;code&gt;prim_sup&lt;/code&gt; is to updated first, before the code for &lt;code&gt;ch_app&lt;/code&gt; and its application specification are unloaded.</source>
          <target state="translated">Опять же, файл &lt;code&gt;relup&lt;/code&gt; создается вручную. Либо с нуля, либо путем редактирования сгенерированной версии. &lt;code&gt;ch_app&lt;/code&gt; загрузите весь код для ch_app , а также загрузите спецификацию приложения перед обновлением &lt;code&gt;prim_sup&lt;/code&gt; . При &lt;code&gt;prim_sup&lt;/code&gt; на более раннюю версию сначала обновляется prim_sup , прежде чем будет выгружен код для &lt;code&gt;ch_app&lt;/code&gt; и его спецификация приложения.</target>
        </trans-unit>
        <trans-unit id="1b5e61e0895721c0ebf450f07d288833226aa589" translate="yes" xml:space="preserve">
          <source>Again, this works in Perl, but not in PCRE, and for the same reason. When a deeper recursion has matched a single character, it cannot be entered again to match an empty string. The solution is to separate the two cases, and write out the odd and even cases as alternatives at the higher level:</source>
          <target state="translated">Опять же,это работает на Perl,но не на PCRE,и по той же причине.Когда более глубокая рекурсия совпадает с одним символом,она не может быть введена повторно,чтобы совпасть с пустой строкой.Решение состоит в том,чтобы разделить эти два случая и записать нечетные и четные случаи в качестве альтернативы на более высоком уровне:</target>
        </trans-unit>
        <trans-unit id="3b2767e308e62a98e4db59a3a9f824fa516512cb" translate="yes" xml:space="preserve">
          <source>Agent configuration:</source>
          <target state="translated">Настройка агента:</target>
        </trans-unit>
        <trans-unit id="3ec3b79e0abd28ca38f812dac049f7131b92ea23" translate="yes" xml:space="preserve">
          <source>Agent semantics</source>
          <target state="translated">Семантика агента</target>
        </trans-unit>
        <trans-unit id="292ef3c4e0286769b6dbb07a9c3a55d1d989a61e" translate="yes" xml:space="preserve">
          <source>Agent specific config options and types:</source>
          <target state="translated">Опции и типы конфигурации,специфичные для агентов:</target>
        </trans-unit>
        <trans-unit id="9183ce25ce4e057cce5e3b5d3d28a86f4aa93b15" translate="yes" xml:space="preserve">
          <source>Agents to be accessed by the manager needs to be registered by a user. Once registered, they can be accessed by all registered users.</source>
          <target state="translated">Агенты,к которым обращается менеджер,должны быть зарегистрированы пользователем.После регистрации к ним могут получить доступ все зарегистрированные пользователи.</target>
        </trans-unit>
        <trans-unit id="b321e7cb00697b98b1069def622912b90e34756e" translate="yes" xml:space="preserve">
          <source>Aho &amp;amp; Johnson: 'LR Parsing', ACM Computing Surveys, vol. 6:2, 1974.</source>
          <target state="translated">Aho &amp;amp; Johnson: LR Parsing, ACM Computing Surveys, т. 6: 2, 1974.</target>
        </trans-unit>
        <trans-unit id="8314c1bccd7fbe31d59f08ffd330d112f0923137" translate="yes" xml:space="preserve">
          <source>Aim for finding bugs. Write whatever test that has the highest probability of finding a bug, now or in the future. Concentrate more on the critical parts. Bugs in critical subsystems are much more expensive than others.</source>
          <target state="translated">Цель-найти жучки.Пишите любой тест,который имеет наибольшую вероятность найти ошибку,сейчас или в будущем.Сосредоточьтесь больше на критических частях.Ошибки в критических подсистемах намного дороже других.</target>
        </trans-unit>
        <trans-unit id="2e73e04c930e7b3b6a12e1613006c2d06e333b4f" translate="yes" xml:space="preserve">
          <source>Aim for functionality testing rather than implementation details. Implementation details change quite often, and the test suites are to be long lived. Implementation details often differ on different platforms and versions. If implementation details must be tested, try to factor them out into separate test cases. These test cases can later be rewritten or skipped.</source>
          <target state="translated">Цель-тестирование функциональности,а не детали реализации.Детали реализации меняются довольно часто,и тестовые наборы должны быть долговечными.Детали реализации часто отличаются на разных платформах и версиях.Если детали реализации необходимо проверить,постарайтесь учесть их в отдельных тестовых примерах.Позже эти тестовые примеры можно будет переписать или пропустить.</target>
        </trans-unit>
        <trans-unit id="5204c24c2356e334c01209b09953d29e8b1c732c" translate="yes" xml:space="preserve">
          <source>Alarm handling</source>
          <target state="translated">Обработка аварийных сигналов</target>
        </trans-unit>
        <trans-unit id="07994d0d2fea2b8ccddc2fe4a57609e0e8cf0605" translate="yes" xml:space="preserve">
          <source>Alarm, that is, the BEL character (hex 07)</source>
          <target state="translated">Сигнал тревоги,то есть персонаж БЭЛ (hex 07)</target>
        </trans-unit>
        <trans-unit id="44b68bd3aa7ebc745c49072e3fc9224605032491" translate="yes" xml:space="preserve">
          <source>Alarms are reported to the SASL alarm handler, see &lt;code&gt;alarm_handler(3)&lt;/code&gt;. To set an alarm, &lt;code&gt;alarm_handler:set_alarm(Alarm)&lt;/code&gt; is called where &lt;code&gt;Alarm&lt;/code&gt; is either of the alarms specified above.</source>
          <target state="translated">Аварийные сигналы передаются обработчику аварийных сигналов SASL, см. &lt;code&gt;alarm_handler(3)&lt;/code&gt; . Для установки будильника &lt;code&gt;alarm_handler:set_alarm(Alarm)&lt;/code&gt; где &lt;code&gt;Alarm&lt;/code&gt; является одним из указанных выше сигналов.</target>
        </trans-unit>
        <trans-unit id="0f8dd2eebf6d2846565db4f8d38173a2b29d2814" translate="yes" xml:space="preserve">
          <source>Alarms are reported to the SASL alarm handler, see &lt;code&gt;alarm_handler(3)&lt;/code&gt;. To set an alarm, &lt;code&gt;alarm_handler:set_alarm(Alarm)&lt;/code&gt; is called where &lt;code&gt;Alarm&lt;/code&gt; is the alarm specified above.</source>
          <target state="translated">Аварийные сигналы передаются обработчику аварийных сигналов SASL, см. &lt;code&gt;alarm_handler(3)&lt;/code&gt; . Для установки будильника &lt;code&gt;alarm_handler:set_alarm(Alarm)&lt;/code&gt; где &lt;code&gt;Alarm&lt;/code&gt; - это сигнал, указанный выше.</target>
        </trans-unit>
        <trans-unit id="84ce7c0201c306089cc2d312b83151f452054aab" translate="yes" xml:space="preserve">
          <source>Alas some drivers only support sequential traversal of the result set, e.i. they do not support what in the ODBC world is known as scrollable cursors. This will have the effect that functions such as &lt;code&gt;first/[1,2]&lt;/code&gt;, &lt;code&gt;last/[1,2]&lt;/code&gt;, &lt;code&gt;prev[1,2]&lt;/code&gt;, etc will return &lt;code&gt;{error, driver_does_not_support_function}&lt;/code&gt;</source>
          <target state="translated">Увы, некоторые драйверы поддерживают только последовательный обход набора результатов, например, они не поддерживают то, что в мире ODBC известно как прокручиваемые курсоры. Это приведет к тому, что такие функции, как &lt;code&gt;first/[1,2]&lt;/code&gt; , &lt;code&gt;last/[1,2]&lt;/code&gt; , &lt;code&gt;prev[1,2]&lt;/code&gt; и т. Д., Будут возвращать &lt;code&gt;{error, driver_does_not_support_function}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f3544e748508a0bbd0fc5c633ca3118ece8b0800" translate="yes" xml:space="preserve">
          <source>Algorithm &lt;code&gt;dss&lt;/code&gt; can only be used together with digest type &lt;code&gt;sha&lt;/code&gt;.</source>
          <target state="translated">Алгоритм &lt;code&gt;dss&lt;/code&gt; можно использовать только вместе с дайджестом типа &lt;code&gt;sha&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="37c4127ccfb7b20befe4cb97e24121c28c2f7f1f" translate="yes" xml:space="preserve">
          <source>Algorithm specific internal state</source>
          <target state="translated">Алгоритмическое своеобразное внутреннее состояние</target>
        </trans-unit>
        <trans-unit id="f502ff90b179f9e55f8a7ae7ffe6d44ac52ffa57" translate="yes" xml:space="preserve">
          <source>Algorithm-dependent state that can be printed or saved to file.</source>
          <target state="translated">Зависимое от алгоритма состояние,которое может быть распечатано или сохранено в файл.</target>
        </trans-unit>
        <trans-unit id="75ed735ab6b662cd2ed59461e6465ca8ad02da5f" translate="yes" xml:space="preserve">
          <source>Algorithm-dependent state.</source>
          <target state="translated">Алгоритмозависимое состояние.</target>
        </trans-unit>
        <trans-unit id="d44cc1b551df7badcd7a33c05306605d60158636" translate="yes" xml:space="preserve">
          <source>Algorithms for directed graphs.</source>
          <target state="translated">Алгоритмы для направленных графиков.</target>
        </trans-unit>
        <trans-unit id="479976d6e7303ea1ee63388a8b2e770b0c6d7167" translate="yes" xml:space="preserve">
          <source>Alivename, &lt;code&gt;alive&lt;/code&gt;</source>
          <target state="translated">Живое имя, &lt;code&gt;alive&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="113679e7d7df16876eb31c71a0f678be963054d7" translate="yes" xml:space="preserve">
          <source>All &quot;function calls&quot; must be tuples, even if they take no arguments. The value of &lt;code&gt;self&lt;/code&gt; is the atom() &lt;code&gt;self&lt;/code&gt;, but the value of &lt;code&gt;{self}&lt;/code&gt; is the pid() of the current process.</source>
          <target state="translated">Все &amp;laquo;вызовы функций&amp;raquo; должны быть кортежами, даже если они не принимают аргументов. Значение &lt;code&gt;self&lt;/code&gt; - это atom () &lt;code&gt;self&lt;/code&gt; , а значение &lt;code&gt;{self}&lt;/code&gt; - это pid () текущего процесса.</target>
        </trans-unit>
        <trans-unit id="c96f50147ab1ef9d7a93bb31a493f340cbc1ac77" translate="yes" xml:space="preserve">
          <source>All (in)direct calls from functions in &lt;code&gt;toolbar&lt;/code&gt; to functions in &lt;code&gt;debugger&lt;/code&gt;.</source>
          <target state="translated">Все (входящие) прямые вызовы функций на &lt;code&gt;toolbar&lt;/code&gt; к функциям в &lt;code&gt;debugger&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="089083e2c94f89536494899703365f0e8ddff6fd" translate="yes" xml:space="preserve">
          <source>All (locally) mounted disks are checked, including the swap disk if it is present.</source>
          <target state="translated">Проверяются все (локально)смонтированные диски,включая диск подкачки,если он присутствует.</target>
        </trans-unit>
        <trans-unit id="f677675819b8b0d1f1b80ed411e21b154b117015" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;&lt;a href=&quot;#type-action&quot;&gt;actions&lt;/a&gt;&lt;/code&gt; are processed in order of appearance.</source>
          <target state="translated">Все &lt;code&gt;&lt;a href=&quot;#type-action&quot;&gt;actions&lt;/a&gt;&lt;/code&gt; обрабатываются в порядке появления.</target>
        </trans-unit>
        <trans-unit id="05aeddfde77656e8d62c4f7d53fc3c8c4d3ed5c3" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;LevelEntry&lt;/code&gt;s of a list must contain the same &lt;code&gt;LevelTag&lt;/code&gt;, except on the top level where both &lt;code&gt;node&lt;/code&gt; and &lt;code&gt;processor&lt;/code&gt;&lt;code&gt;LevelTag&lt;/code&gt;s can coexist.    &lt;code&gt;{LevelTag, SubLevel} == {LevelTag, [], SubLevel}&lt;/code&gt;    More &lt;code&gt;LevelTag&lt;/code&gt;s can be introduced in a future release.     The &lt;code&gt;info_list()&lt;/code&gt; can be extended in a future release.</source>
          <target state="translated">Все &lt;code&gt;LevelEntry&lt;/code&gt; в списке должны содержать один и тот же &lt;code&gt;LevelTag&lt;/code&gt; , за исключением верхнего уровня, где могут сосуществовать &lt;code&gt;LevelTag&lt;/code&gt; как &lt;code&gt;node&lt;/code&gt; и &lt;code&gt;processor&lt;/code&gt; . &lt;code&gt;{LevelTag, SubLevel} == {LevelTag, [], SubLevel}&lt;/code&gt; будущем выпуске могут быть добавлены дополнительные &lt;code&gt;LevelTag&lt;/code&gt; . &lt;code&gt;info_list()&lt;/code&gt; может быть расширен в будущем выпуске.</target>
        </trans-unit>
        <trans-unit id="6724788c6ade526686ec55a7af8484e09d219146" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;cth_conn_log&lt;/code&gt; hook options described can also be specified in a configuration file with configuration variable &lt;code&gt;ct_conn_log&lt;/code&gt;.</source>
          <target state="translated">Все &lt;code&gt;cth_conn_log&lt;/code&gt; параметры ловушки cth_conn_log также могут быть указаны в файле конфигурации с помощью переменной конфигурации &lt;code&gt;ct_conn_log&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8a4b3de223153d6148caabecc5ca1ade2664a14a" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;snmp&lt;/code&gt; counters are set to zero.</source>
          <target state="translated">Все счетчики &lt;code&gt;snmp&lt;/code&gt; установлены в ноль.</target>
        </trans-unit>
        <trans-unit id="1518061c2a50f94ff59e63daeae206bdc35745d1" translate="yes" xml:space="preserve">
          <source>All &lt;strong&gt;named&lt;/strong&gt; subpatterns in the regular expression, as if a &lt;code&gt;list()&lt;/code&gt; of all the names &lt;strong&gt;in alphabetical order&lt;/strong&gt; was specified. The list of all names can also be retrieved with &lt;code&gt;&lt;a href=&quot;#inspect-2&quot;&gt;inspect/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Все &lt;strong&gt;именованные&lt;/strong&gt; подшаблоны в регулярном выражении, как если бы был указан &lt;code&gt;list()&lt;/code&gt; всех имен &lt;strong&gt;в алфавитном порядке&lt;/strong&gt; . Список всех имен также можно получить с помощью &lt;code&gt;&lt;a href=&quot;#inspect-2&quot;&gt;inspect/2&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c4916d63a32f5bd45e8c8ebc0b371a252007867f" translate="yes" xml:space="preserve">
          <source>All API functions that update the index return a &lt;code&gt;NewIndex&lt;/code&gt; term. This is for backward compatibility with a previous implementation that used a B+ tree written purely in Erlang for the index. The &lt;code&gt;NewIndex&lt;/code&gt; return value can now be ignored. The return value is now the unchanged table identifier for the ets table.</source>
          <target state="translated">Все функции API, обновляющие индекс, возвращают термин &lt;code&gt;NewIndex&lt;/code&gt; . Это сделано для обратной совместимости с предыдущей реализацией, в которой для индекса использовалось дерево B +, написанное исключительно на Erlang. &lt;code&gt;NewIndex&lt;/code&gt; возвращаемое значение теперь может быть проигнорировано. Возвращаемое значение теперь является неизменным идентификатором таблицы для таблицы ets.</target>
        </trans-unit>
        <trans-unit id="508db9dc0ec99907c00ed0f8830bf421e130f560" translate="yes" xml:space="preserve">
          <source>All API-functions are guarded and if you pass an argument of the wrong type a runtime error will occur. All input parameters to internal functions are trusted to be correct. It is a good programming practise to only distrust input from truly external sources. You are not supposed to catch these errors, it will only make the code very messy and much more complex, which introduces more bugs and in the worst case also covers up the actual faults. Put your effort on testing instead, you should trust your own input.</source>
          <target state="translated">Все API-функции защищены,и если вы передадите аргумент неправильного типа,то произойдет ошибка во время выполнения.Все входные параметры внутренних функций доверяются на корректность.Хорошей практикой программирования является только недоверие к входным параметрам из действительно внешних источников.Не предполагается,что вы поймаете эти ошибки,это только сделает код очень грязным и намного более сложным,что приведет к появлению большего количества ошибок,а в худшем случае и к сокрытию реальных ошибок.Вместо этого приложите усилия к тестированию,доверьтесь собственному вводу.</target>
        </trans-unit>
        <trans-unit id="00ff4622a14c4c7f7fbaab2bf437fe6ca8d16292" translate="yes" xml:space="preserve">
          <source>All DTLS versions supported by the SSL application. DTLS 1.2 requires sufficient support from the Crypto application.</source>
          <target state="translated">Все версии DTLS,поддерживаемые приложением SSL.DTLS 1.2 требует достаточной поддержки со стороны приложения Crypto.</target>
        </trans-unit>
        <trans-unit id="59b704215a27754dabda2c983777a71cd473ecc4" translate="yes" xml:space="preserve">
          <source>All Dets functions return &lt;code&gt;{error, Reason}&lt;/code&gt; if an error occurs (&lt;code&gt;&lt;a href=&quot;#first-1&quot;&gt;first/1&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#next-2&quot;&gt;next/2&lt;/a&gt;&lt;/code&gt; are exceptions, they exit the process with the error tuple). If badly formed arguments are specified, all functions exit the process with a &lt;code&gt;badarg&lt;/code&gt; message.</source>
          <target state="translated">Все функции Dets возвращают &lt;code&gt;{error, Reason}&lt;/code&gt; случае возникновения ошибки ( &lt;code&gt;&lt;a href=&quot;#first-1&quot;&gt;first/1&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;#next-2&quot;&gt;next/2&lt;/a&gt;&lt;/code&gt; являются исключениями, они выходят из процесса с кортежем ошибки). Если указаны &lt;code&gt;badarg&lt;/code&gt; сформированные аргументы, все функции выходят из процесса с сообщением badarg .</target>
        </trans-unit>
        <trans-unit id="6860af1b417f061473f28a251963ae51220b55b4" translate="yes" xml:space="preserve">
          <source>All Erlang processes have a default standard I/O device. This device is used when no &lt;code&gt;IoDevice&lt;/code&gt; argument is specified in the function calls in this module. However, it is sometimes desirable to use an explicit &lt;code&gt;IoDevice&lt;/code&gt; argument that refers to the default I/O device. This is the case with functions that can access either a file or the default I/O device. The atom &lt;code&gt;standard_io&lt;/code&gt; has this special meaning. The following example illustrates this:</source>
          <target state="translated">Все процессы Erlang имеют стандартное устройство ввода-вывода по умолчанию. Это устройство используется, когда в вызовах функций в этом модуле не &lt;code&gt;IoDevice&lt;/code&gt; аргумент IoDevice . Однако иногда желательно использовать явный аргумент &lt;code&gt;IoDevice&lt;/code&gt; , который относится к устройству ввода-вывода по умолчанию. Это касается функций, которые могут обращаться либо к файлу, либо к устройству ввода-вывода по умолчанию. Это особое значение имеет атом &lt;code&gt;standard_io&lt;/code&gt; . Следующий пример иллюстрирует это:</target>
        </trans-unit>
        <trans-unit id="97b951c1c805c5f05124e900fd4fa56864d49618" translate="yes" xml:space="preserve">
          <source>All Erlang types are the string equivalent in LTTng.</source>
          <target state="translated">Все типы Erlang являются строковым эквивалентом в LTTng.</target>
        </trans-unit>
        <trans-unit id="d9f521ade6fc1dd9350ccff9c5983982a41844ce" translate="yes" xml:space="preserve">
          <source>All Erlang/OTP applications except the &lt;code&gt;wx&lt;/code&gt; application can be cross compiled. The build of the &lt;code&gt;wx&lt;/code&gt; driver will currently be automatically disabled when cross compiling.</source>
          <target state="translated">Все приложения Erlang / OTP, кроме приложения &lt;code&gt;wx&lt;/code&gt; , могут быть кросс-компилированы. Билд &lt;code&gt;wx&lt;/code&gt; водителем в настоящее время автоматически отключается , когда кросс - компиляцию.</target>
        </trans-unit>
        <trans-unit id="5ad88821804527519cf8d8d810f3204aedf5bf2e" translate="yes" xml:space="preserve">
          <source>All I/O from the port is binary data objects as opposed to lists of bytes.</source>
          <target state="translated">Все входы/выходы из порта являются двоичными объектами данных,в отличие от списков байтов.</target>
        </trans-unit>
        <trans-unit id="2dd52ee361652541899aa325d9fd9f53e18c02c1" translate="yes" xml:space="preserve">
          <source>All Mnesia transactions, including all the schema update functions, either return value &lt;code&gt;{atomic, Val}&lt;/code&gt; or the tuple &lt;code&gt;{aborted, Reason}&lt;/code&gt;. &lt;code&gt;Reason&lt;/code&gt; can be either of the atoms in the following list. The function &lt;code&gt;error_description/1&lt;/code&gt; returns a descriptive string that describes the error.</source>
          <target state="translated">Все транзакции Mnesia, включая все функции обновления схемы, либо возвращаемое значение &lt;code&gt;{atomic, Val}&lt;/code&gt; либо кортеж &lt;code&gt;{aborted, Reason}&lt;/code&gt; . &lt;code&gt;Reason&lt;/code&gt; может быть любой из атомов в следующем списке. Функция &lt;code&gt;error_description/1&lt;/code&gt; возвращает описательную строку, описывающую ошибку.</target>
        </trans-unit>
        <trans-unit id="4d3c60202c3777ca90cba552fcd0b5e85782d21a" translate="yes" xml:space="preserve">
          <source>All NIFs of a module must have an Erlang implementation as well.</source>
          <target state="translated">Все NIF модуля также должны иметь реализацию Erlang.</target>
        </trans-unit>
        <trans-unit id="a725195324a4bf0385d8cc76f623d576b9073dd8" translate="yes" xml:space="preserve">
          <source>All ProcBin objects in a process are part of a linked list, so that the garbage collector can keep track of them and decrement the reference counters in the binary when a ProcBin disappears.</source>
          <target state="translated">Все объекты ProcBin в процессе работы являются частью связанного списка,так что сборщик мусора может отслеживать их и при исчезновении ProcBin декрементировать счетчики ссылок в двоичном файле.</target>
        </trans-unit>
        <trans-unit id="ea090b0550d7e3c8580dc19d0e4eca0afcac1702" translate="yes" xml:space="preserve">
          <source>All SASL reports have a metadata field &lt;code&gt;domain&lt;/code&gt; which is set to &lt;code&gt;[otp,sasl]&lt;/code&gt;. This field can be used by filters to stop or allow the log events.</source>
          <target state="translated">Все отчеты SASL имеют &lt;code&gt;domain&lt;/code&gt; поля метаданных, для которого задано значение &lt;code&gt;[otp,sasl]&lt;/code&gt; . Это поле может использоваться фильтрами для остановки или разрешения регистрации событий.</target>
        </trans-unit>
        <trans-unit id="4f15754d3db80f2fdc54c4817ccee09d053bbbf8" translate="yes" xml:space="preserve">
          <source>All SSL and TLS versions prior to TLS 1.2 use a combination of md5 and sha1 hashes in the handshake for various purposes:</source>
          <target state="translated">Во всех версиях SSL и TLS до TLS 1.2 используется комбинация md5 и sha1 хэшей в рукопожатии для различных целей:</target>
        </trans-unit>
        <trans-unit id="4d20ed1ea888788dca7c3c5db66c577a283406e7" translate="yes" xml:space="preserve">
          <source>All SSL/TLS versions supported by the SSL application. TLS 1.2 requires sufficient support from the Crypto application.</source>
          <target state="translated">Все версии SSL/TLS поддерживаются приложением SSL.TLS 1.2 требует достаточной поддержки со стороны приложения Crypto.</target>
        </trans-unit>
        <trans-unit id="68fce467cd9e8e0d201b3f589073cfe5fb95d32d" translate="yes" xml:space="preserve">
          <source>All TCP socket options are accepted except &lt;code&gt;active&lt;/code&gt;, &lt;code&gt;binary&lt;/code&gt;, &lt;code&gt;deliver&lt;/code&gt;, &lt;code&gt;list&lt;/code&gt;, &lt;code&gt;mode&lt;/code&gt; and &lt;code&gt;packet&lt;/code&gt;</source>
          <target state="translated">Принимаются все параметры сокета TCP, кроме &lt;code&gt;active&lt;/code&gt; , &lt;code&gt;binary&lt;/code&gt; , &lt;code&gt;deliver&lt;/code&gt; , &lt;code&gt;list&lt;/code&gt; , &lt;code&gt;mode&lt;/code&gt; и &lt;code&gt;packet&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a5b34ac6bc99e27ebc78ae9ef663f69f3aa7a65b" translate="yes" xml:space="preserve">
          <source>All Unicode newline sequences</source>
          <target state="translated">Все последовательности Unicode newline</target>
        </trans-unit>
        <trans-unit id="2dbd3097b8923c397d9061270fd4c85d43474de4" translate="yes" xml:space="preserve">
          <source>All access files in the path to a requested asset are read once per request. This means that the load on the server increases when &lt;code&gt;htaccess&lt;/code&gt; is used.</source>
          <target state="translated">Все файлы доступа на пути к запрошенному активу читаются один раз за запрос. Это означает, что нагрузка на сервер увеличивается при использовании &lt;code&gt;htaccess&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b65f417a9d96a9f2d2511f358eeb52c2d5221959" translate="yes" xml:space="preserve">
          <source>All allocators based on &lt;code&gt;alloc_util&lt;/code&gt; are effected.</source>
          <target state="translated">&lt;code&gt;alloc_util&lt;/code&gt; все распределители на основе alloc_util .</target>
        </trans-unit>
        <trans-unit id="487ed78b0938a6d1f8103db69e76299ed79ed19c" translate="yes" xml:space="preserve">
          <source>All application directories found in the additional directories appears before the standard OTP applications, except for the Kernel and STDLIB applications, which are placed before any additional applications. In other words, modules found in any of the additional library directories override modules with the same name in OTP, except for modules in Kernel and STDLIB.</source>
          <target state="translated">Все каталоги приложений,найденные в дополнительных каталогах,появляются перед стандартными OTP-приложениями,за исключением приложений Kernel и STDLIB,которые размещаются перед любыми дополнительными приложениями.Другими словами,модули,находящиеся в любой из дополнительных каталогов библиотек,переопределяют одноименные модули в OTP,за исключением модулей в Kernel и STDLIB.</target>
        </trans-unit>
        <trans-unit id="aed81dd75a1fe5a5f216237b2556bd6822c73c1d" translate="yes" xml:space="preserve">
          <source>All applications are taken down smoothly, all code is unloaded, and all ports are closed before the system terminates by calling &lt;code&gt;halt(Status)&lt;/code&gt;. If command-line flag &lt;code&gt;-heart&lt;/code&gt; was specified, the &lt;code&gt;heart&lt;/code&gt; program is terminated before the Erlang node terminates. For more information, see &lt;code&gt;heart(3)&lt;/code&gt;.</source>
          <target state="translated">Все приложения удаляются плавно, весь код выгружается, и все порты закрываются до того, как система завершит работу вызовом &lt;code&gt;halt(Status)&lt;/code&gt; . Если был указан флаг командной строки &lt;code&gt;-heart&lt;/code&gt; , программа &lt;code&gt;heart&lt;/code&gt; завершается до завершения работы узла Erlang. Для получения дополнительной информации см. &lt;code&gt;heart(3)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d181c1e78cebe0843b022cbfb70d621d01c1feeb" translate="yes" xml:space="preserve">
          <source>All applications are taken down smoothly, all code is unloaded, and all ports are closed before the system terminates. If command-line flag &lt;code&gt;-heart&lt;/code&gt; was specified, the &lt;code&gt;heart&lt;/code&gt; program tries to reboot the system. For more information, see &lt;code&gt;heart(3)&lt;/code&gt;.</source>
          <target state="translated">Все приложения удаляются плавно, весь код выгружается, а все порты закрываются до завершения работы системы. Если был указан флаг командной строки &lt;code&gt;-heart&lt;/code&gt; , программа- &lt;code&gt;heart&lt;/code&gt; пытается перезагрузить систему. Для получения дополнительной информации см. &lt;code&gt;heart(3)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="31bd3e3bf18b14bb65fb12d63888c9cd0d2fd4b0" translate="yes" xml:space="preserve">
          <source>All applications included by this application. When this application is started, all included applications are loaded automatically, but not started, by the application controller. It is assumed that the top-most supervisor of the included application is started by a supervisor of this application.</source>
          <target state="translated">Все приложения,включенные в данное приложение.При запуске этого приложения все включенные приложения загружаются автоматически,но не запускаются контроллером приложений.Предполагается,что самый верхний супервизор включаемого приложения запускается супервизором данного приложения.</target>
        </trans-unit>
        <trans-unit id="240f8d13b43d7ee3cac18e5842f7f15a95cd9de5" translate="yes" xml:space="preserve">
          <source>All applications that must be started before this application is allowed to be started. &lt;code&gt;systools&lt;/code&gt; uses this list to generate correct start scripts. Defaults to the empty list, but notice that all applications have dependencies to (at least) Kernel and STDLIB.</source>
          <target state="translated">Все приложения, которые должны быть запущены до того, как это приложение будет разрешено для запуска. &lt;code&gt;systools&lt;/code&gt; использует этот список для создания правильных сценариев запуска. По умолчанию используется пустой список, но обратите внимание, что все приложения имеют зависимости (как минимум) от ядра и STDLIB.</target>
        </trans-unit>
        <trans-unit id="8d2add5c786e4437232e07f68f555e8cec5d10a4" translate="yes" xml:space="preserve">
          <source>All available ports in the Erlang emulator are in use.</source>
          <target state="translated">В эмуляторе Erlang используются все доступные порты.</target>
        </trans-unit>
        <trans-unit id="f84b54afc405de6cbd2ad11831864c463f1ea3fa" translate="yes" xml:space="preserve">
          <source>All available probes can be listed like this:</source>
          <target state="translated">Все доступные зонды можно перечислить вот так:</target>
        </trans-unit>
        <trans-unit id="99d3b3bbd1737cb224eb46fd66ec80e666cf1f66" translate="yes" xml:space="preserve">
          <source>All binary operators are left associative; for instance, &lt;code&gt;A&amp;nbsp;|&amp;nbsp;B &amp;nbsp;||&amp;nbsp;C&lt;/code&gt; is equivalent to &lt;code&gt;(A&amp;nbsp;|&amp;nbsp;B)&amp;nbsp;||&amp;nbsp;C&lt;/code&gt;. The following is a list of all operators, in increasing order of  &lt;strong id=&quot;precedence&quot;&gt;precedence&lt;/strong&gt;:</source>
          <target state="translated">Все бинарные операторы левоассоциативны; например, &lt;code&gt;A&amp;nbsp;|&amp;nbsp;B &amp;nbsp;||&amp;nbsp;C&lt;/code&gt; эквивалентно &lt;code&gt;(A&amp;nbsp;|&amp;nbsp;B)&amp;nbsp;||&amp;nbsp;C&lt;/code&gt; . Ниже приведен список всех операторов в порядке возрастания &lt;strong id=&quot;precedence&quot;&gt;приоритета&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="4eba54c164609c10e1724efde1b5a4f8594b594d" translate="yes" xml:space="preserve">
          <source>All but the first matching subpattern, that is, all explicitly captured subpatterns, but not the complete matching part of the subject string. This is useful if the regular expression as a whole matches a large part of the subject, but the part you are interested in is in an explicitly captured subpattern. If the return type is &lt;code&gt;list&lt;/code&gt; or &lt;code&gt;binary&lt;/code&gt;, not returning subpatterns you are not interested in is a good way to optimize.</source>
          <target state="translated">Все, кроме первого совпадающего подшаблона, то есть все явно захваченные подшаблоны, но не всю совпадающую часть строки темы. Это полезно, если регулярное выражение в целом соответствует большей части темы, но интересующая вас часть находится в явно захваченном подшаблоне. Если тип возвращаемого значения - &lt;code&gt;list&lt;/code&gt; или &lt;code&gt;binary&lt;/code&gt; , то отказ от возврата подшаблонов, которые вас не интересуют, является хорошим способом оптимизации.</target>
        </trans-unit>
        <trans-unit id="b4ba388e0b6829ee7e6b0f29a6f89a7986b6d983" translate="yes" xml:space="preserve">
          <source>All calls are stored in the history buffer and can be recalled and stored in a configuration file. This makes it easy to set up the same trace environment, for example, if you want to compare two test runs. It also reduces the amount of typing when using &lt;code&gt;ttb&lt;/code&gt; from the Erlang shell.</source>
          <target state="translated">Все вызовы сохраняются в буфере истории и могут быть вызваны и сохранены в файле конфигурации. Это упрощает настройку одной и той же среды трассировки, например, если вы хотите сравнить два тестовых прогона. Это также сокращает объем ввода при использовании &lt;code&gt;ttb&lt;/code&gt; из оболочки Erlang.</target>
        </trans-unit>
        <trans-unit id="b75423c77806558051eb62cb5b02445cef05ff93" translate="yes" xml:space="preserve">
          <source>All calls that have both an external and a local version.</source>
          <target state="translated">Все звонки,которые имеют как внешнюю,так и локальную версию.</target>
        </trans-unit>
        <trans-unit id="d0fd374788e00e86bd43e2341f520f508c4c7e7e" translate="yes" xml:space="preserve">
          <source>All calls to &lt;code&gt;ttb&lt;/code&gt; is stored in the history. This function returns the current content of the history. Any entry can be reexecuted with &lt;code&gt;run_history/1&lt;/code&gt; or stored in a configuration file with &lt;code&gt;write_config/2,3&lt;/code&gt;.</source>
          <target state="translated">Все звонки на &lt;code&gt;ttb&lt;/code&gt; сохраняются в истории. Эта функция возвращает текущее содержимое истории. Любую запись можно повторно &lt;code&gt;run_history/1&lt;/code&gt; с помощью run_history / 1 или сохранить в файле конфигурации с помощью &lt;code&gt;write_config/2,3&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5bbe19e21b0c2eee883cf8913cd7724d259725e7" translate="yes" xml:space="preserve">
          <source>All calls within the Kernel application.</source>
          <target state="translated">Все звонки внутри приложения Kernel.</target>
        </trans-unit>
        <trans-unit id="d69e89620f8a9f9e87b4eee0b38ab9d9d4411b86" translate="yes" xml:space="preserve">
          <source>All captured subpatterns including the complete matching string. This is the default.</source>
          <target state="translated">Все захваченные подмаски,включая полную строку соответствия.По умолчанию.</target>
        </trans-unit>
        <trans-unit id="34abf6827e137ec9ba4d30877ba27c48b7d401ae" translate="yes" xml:space="preserve">
          <source>All characters needs to be valid characters on the specific OS using &lt;code&gt;&lt;a href=&quot;file#native_name_encoding-0&quot;&gt;file:native_name_encoding()&lt;/a&gt;&lt;/code&gt; encoding. Note that specifically null characters (integer value zero) are not allowed. However, note that not all invalid characters not necessarily will cause &lt;code&gt;&lt;a href=&quot;#cmd-1&quot;&gt;os:cmd/1&lt;/a&gt;&lt;/code&gt; to fail, but may instead produce invalid results.</source>
          <target state="translated">Все символы должны быть допустимыми символами в конкретной ОС с использованием кодировки &lt;code&gt;&lt;a href=&quot;file#native_name_encoding-0&quot;&gt;file:native_name_encoding()&lt;/a&gt;&lt;/code&gt; . Обратите внимание, что конкретно нулевые символы (целочисленное значение ноль) не допускаются. Однако обратите внимание, что не все недопустимые символы не обязательно приведут к сбою &lt;code&gt;&lt;a href=&quot;#cmd-1&quot;&gt;os:cmd/1&lt;/a&gt;&lt;/code&gt; , но вместо этого могут дать недопустимые результаты.</target>
        </trans-unit>
        <trans-unit id="9ccc47d84718cbe0754906ab548e6f0d0c99ed92" translate="yes" xml:space="preserve">
          <source>All checks with function &lt;code&gt;&lt;a href=&quot;#make_script-1&quot;&gt;make_script&lt;/a&gt;&lt;/code&gt; are performed before the release package is created. Options &lt;code&gt;src_tests&lt;/code&gt; and &lt;code&gt;exref&lt;/code&gt; are also valid here.</source>
          <target state="translated">Все проверки с помощью функции &lt;code&gt;&lt;a href=&quot;#make_script-1&quot;&gt;make_script&lt;/a&gt;&lt;/code&gt; выполняются перед созданием пакета выпуска. Здесь также действуют параметры &lt;code&gt;src_tests&lt;/code&gt; и &lt;code&gt;exref&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2a363a443c582c3241bf4c750bee059e7cc5f662" translate="yes" xml:space="preserve">
          <source>All communication between Erlang and C must be established by creating the port. The Erlang process that creates a port is said to be &lt;strong&gt;the connected process&lt;/strong&gt; of the port. All communication to and from the port must go through the connected process. If the connected process terminates, the port also terminates (and the external program, if it is written properly).</source>
          <target state="translated">Все коммуникации между Erlang и C должны быть установлены путем создания порта. Процесс Erlang, создающий порт, называется &lt;strong&gt;связанным процессом&lt;/strong&gt; порта. Все коммуникации в порт и из порта должны проходить через связанный процесс. Если связанный процесс завершается, порт также завершается (и внешняя программа, если она написана правильно).</target>
        </trans-unit>
        <trans-unit id="eb709283e324b3781c25b7de16d1f666dbdb72e8" translate="yes" xml:space="preserve">
          <source>All configuration data must be included in configuration files that are located in the configuration directory. The name of this directory is given in the &lt;code&gt;config_dir&lt;/code&gt; configuration parameter. These files are read at start-up, and are used to initialize the SNMPv2-MIB or STANDARD-MIB, SNMP-FRAMEWORK-MIB, SNMP-MPD-MIB, SNMP-VIEW-BASED-ACM-MIB, SNMP-COMMUNITY-MIB, SNMP-USER-BASED-SM-MIB, SNMP-TARGET-MIB and SNMP-NOTIFICATION-MIB (refer to the &lt;code&gt;&lt;a href=&quot;snmp_agent_funct_descr#management&quot;&gt;Management of the Agent&lt;/a&gt;&lt;/code&gt; for a description of the MIBs).</source>
          <target state="translated">Все данные конфигурации должны быть включены в файлы конфигурации, расположенные в каталоге конфигурации. Имя этого каталога указывается в параметре конфигурации &lt;code&gt;config_dir&lt;/code&gt; . Эти файлы считываются при запуске и используются для инициализации SNMPv2-MIB или STANDARD-MIB, SNMP-FRAMEWORK-MIB, SNMP-MPD-MIB, SNMP-VIEW-BASED-ACM-MIB, SNMP-COMMUNITY-MIB. , SNMP-USER-BASED-SM-MIB, SNMP-TARGET-MIB и SNMP-NOTIFICATION-MIB ( описание MIB см. В разделе &amp;laquo; &lt;code&gt;&lt;a href=&quot;snmp_agent_funct_descr#management&quot;&gt;Management of the Agent&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="8fb98e168e1cdf700c77f9c617ec623e357237e5" translate="yes" xml:space="preserve">
          <source>All configuration parameters can be set at start by adding &lt;code&gt;-OptName Value&lt;/code&gt; to the command line, for example:</source>
          <target state="translated">Все параметры конфигурации можно установить при запуске, добавив &lt;code&gt;-OptName Value&lt;/code&gt; в командную строку, например:</target>
        </trans-unit>
        <trans-unit id="e34d05132c3363672c983606c16c8b3f4cd48ded" translate="yes" xml:space="preserve">
          <source>All contained terms of a list/tuple/map must belong to the same environment as the list/tuple/map itself. Terms can be copied between environments with &lt;code&gt;&lt;a href=&quot;#enif_make_copy&quot;&gt;enif_make_copy&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Все содержащиеся в списке / кортеже / карте термины должны принадлежать той же среде, что и сам список / кортеж / карта. Термины можно копировать между средами с помощью &lt;code&gt;&lt;a href=&quot;#enif_make_copy&quot;&gt;enif_make_copy&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="17c9652ae90aa032b597d6483480d6b35f039ee7" translate="yes" xml:space="preserve">
          <source>All created threads must be joined by the driver before it is unloaded. If the driver fails to join all threads created before it is unloaded, the runtime system most likely crashes when the driver code is unloaded.</source>
          <target state="translated">Все созданные потоки должны быть соединены драйвером перед выгрузкой.Если драйвер не подключит все созданные потоки до выгрузки,то,скорее всего,при выгрузке кода драйвера произойдет сбой системы.</target>
        </trans-unit>
        <trans-unit id="b1b81e568bd7b5d5fd8f96a201883e60680fff00" translate="yes" xml:space="preserve">
          <source>All currently existing ports and all that will be created in the future.</source>
          <target state="translated">Все существующие в настоящее время порты и все,что будет создано в будущем.</target>
        </trans-unit>
        <trans-unit id="bc6ddc7f5e7f3a0bc6a355b03f78b8fb8d4e520a" translate="yes" xml:space="preserve">
          <source>All currently existing ports.</source>
          <target state="translated">Все существующие в настоящее время порты.</target>
        </trans-unit>
        <trans-unit id="f5bd9e7d7b44e072c90e6f8dda758c22961a860e" translate="yes" xml:space="preserve">
          <source>All currently existing processes and all that will be created in the future.</source>
          <target state="translated">Все существующие в настоящее время процессы и все,что будет создано в будущем.</target>
        </trans-unit>
        <trans-unit id="2f2c9f694f2fd17dd3c35e9d0f951e41f0de39c2" translate="yes" xml:space="preserve">
          <source>All currently existing processes and ports and all that will be created in the future.</source>
          <target state="translated">Все существующие в настоящее время процессы и порты,а также все,что будет создано в будущем.</target>
        </trans-unit>
        <trans-unit id="a4a1660f0cdb5d321af926f22eca810cb75c7869" translate="yes" xml:space="preserve">
          <source>All currently existing processes and ports.</source>
          <target state="translated">Все существующие в настоящее время процессы и порты.</target>
        </trans-unit>
        <trans-unit id="f2774916f15014b59bbde049da46ed37bb38a8f7" translate="yes" xml:space="preserve">
          <source>All currently existing processes.</source>
          <target state="translated">Все существующие в настоящее время процессы.</target>
        </trans-unit>
        <trans-unit id="ff87064c3c8ceacf6dda1a78dcbdf032fd899aad" translate="yes" xml:space="preserve">
          <source>All data in messages between Erlang processes is copied, except for &lt;code&gt;&lt;a href=&quot;binaryhandling#refc_binary&quot;&gt;refc binaries&lt;/a&gt;&lt;/code&gt; on the same Erlang node.</source>
          <target state="translated">Все данные в сообщениях между процессами Erlang копируются, за исключением &lt;code&gt;&lt;a href=&quot;binaryhandling#refc_binary&quot;&gt;refc binaries&lt;/a&gt;&lt;/code&gt; на том же узле Erlang.</target>
        </trans-unit>
        <trans-unit id="aa1a7180beea8d2918397b581bb39b7c3d97266f" translate="yes" xml:space="preserve">
          <source>All dates conform to the Gregorian calendar. This calendar was introduced by Pope Gregory XIII in 1582 and was used in all Catholic countries from this year. Protestant parts of Germany and the Netherlands adopted it in 1698, England followed in 1752, and Russia in 1918 (the October revolution of 1917 took place in November according to the Gregorian calendar).</source>
          <target state="translated">Все даты соответствуют григорианскому календарю.Этот календарь был введен Папой Римским Григорием XIII в 1582 году и с этого года используется во всех католических странах.Протестантские части Германии и Нидерландов приняли его в 1698 году,Англия-в 1752 году,Россия-в 1918 году (Октябрьская революция 1917 года произошла в ноябре по григорианскому календарю).</target>
        </trans-unit>
        <trans-unit id="5a9db788cb6f00701b230b3a0369568000727f48" translate="yes" xml:space="preserve">
          <source>All dictionaries should typically inherit RFC 6733 AVPs from &lt;code&gt;diameter_gen_base_rfc6733&lt;/code&gt;.</source>
          <target state="translated">Все словари должны обычно наследуют RFC 6733 AVPs от &lt;code&gt;diameter_gen_base_rfc6733&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4c2f43f5ea4d88b08d32795c7efcb41af6ca7e5e" translate="yes" xml:space="preserve">
          <source>All direct and indirect calls within the Kernel application. Both the calling and the used functions of indirect calls are defined in modules of the kernel application, but it is possible that some functions outside the kernel application are used by indirect calls.</source>
          <target state="translated">Все прямые и косвенные вызовы внутри приложения Kernel.Как вызывающие,так и используемые функции непрямых вызовов определяются в модулях приложения ядра,но возможно,что некоторые функции вне приложения ядра используются непрямыми вызовами.</target>
        </trans-unit>
        <trans-unit id="d1f33a648178dc389edc92503195d2baefeb6e84" translate="yes" xml:space="preserve">
          <source>All dirty functions execute a call to &lt;code&gt;exit({aborted, Reason})&lt;/code&gt; on failure. Even if the following functions are executed inside a transaction no locks are acquired. The following functions are available:</source>
          <target state="translated">Все грязные функции выполняют вызов для &lt;code&gt;exit({aborted, Reason})&lt;/code&gt; в случае ошибки. Даже если следующие функции выполняются внутри транзакции, блокировки не устанавливаются. Доступны следующие функции:</target>
        </trans-unit>
        <trans-unit id="f81b19ae425dcfaf7c61e80cc7669618b08d52e7" translate="yes" xml:space="preserve">
          <source>All elements must be bound. Or match a binary:</source>
          <target state="translated">Все элементы должны быть связаны.Или совпадать с бинарным:</target>
        </trans-unit>
        <trans-unit id="e35304a8cee7dd66deca414eafb00819e73f44e7" translate="yes" xml:space="preserve">
          <source>All encode functions assume that the &lt;code&gt;buf&lt;/code&gt; and &lt;code&gt;index&lt;/code&gt; parameters point to a buffer large enough for the data. To get the size of an encoded term, without encoding it, pass &lt;code&gt;NULL&lt;/code&gt; instead of a buffer pointer. Parameter &lt;code&gt;index&lt;/code&gt; is incremented, but nothing will be encoded. This is the way in &lt;code&gt;ei&lt;/code&gt; to &quot;preflight&quot; term encoding.</source>
          <target state="translated">Все функции кодирования предполагают, что параметры &lt;code&gt;buf&lt;/code&gt; и &lt;code&gt;index&lt;/code&gt; указывают на буфер, достаточно большой для данных. Чтобы получить размер закодированного термина без его кодирования, передайте &lt;code&gt;NULL&lt;/code&gt; вместо указателя буфера. &lt;code&gt;index&lt;/code&gt; параметра увеличивается, но ничего не кодируется. Это способ в &lt;code&gt;ei&lt;/code&gt; &quot;предполетного&quot; кодирования терминов.</target>
        </trans-unit>
        <trans-unit id="151ad8ec849846d67f11a6c9c136c41384a8ac5e" translate="yes" xml:space="preserve">
          <source>All event handler modules must have &lt;code&gt;gen_event&lt;/code&gt; behavior. These modules must be precompiled and their locations must be added explicitly to the Erlang code server search path (as in the previous example).</source>
          <target state="translated">Все модули обработчика событий должны иметь поведение &lt;code&gt;gen_event&lt;/code&gt; . Эти модули должны быть предварительно скомпилированы, а их расположение должно быть явно добавлено в путь поиска сервера кода Erlang (как в предыдущем примере).</target>
        </trans-unit>
        <trans-unit id="9edf833c0b78d11f089bdd4ddb61ffd9bb5f9435" translate="yes" xml:space="preserve">
          <source>All event handlers added to the error logger must handle the following events. &lt;code&gt;Gleader&lt;/code&gt; is the group leader pid of the process that sent the event, and &lt;code&gt;Pid&lt;/code&gt; is the process that sent the event.</source>
          <target state="translated">Все обработчики событий, добавленные в журнал ошибок, должны обрабатывать следующие события. &lt;code&gt;Gleader&lt;/code&gt; - это идентификатор лидера группы процесса, отправившего событие, а &lt;code&gt;Pid&lt;/code&gt; процесса - это процесс, отправивший событие.</target>
        </trans-unit>
        <trans-unit id="97354d25fc5709fda87feb85d1e3e6ab6be22375" translate="yes" xml:space="preserve">
          <source>All events are filtered thru the collector filter, which optionally may transform or discard the event. The first call should use the pid of the collector process as report handle, while subsequent calls should use the table handle.</source>
          <target state="translated">Все события фильтруются через фильтр коллектора,который,по желанию,может преобразовывать или отбрасывать событие.При первом вызове в качестве хэндла отчета следует использовать pid процесса коллектора,а при последующих вызовах-табличный хэндл.</target>
        </trans-unit>
        <trans-unit id="edda3d39980ef94b93836b935091c5b117c59583" translate="yes" xml:space="preserve">
          <source>All events stored with &lt;code&gt;&lt;a href=&quot;#type-action&quot;&gt;action()&lt;/a&gt;&lt;/code&gt;&lt;code&gt;next_event&lt;/code&gt; are inserted to be processed before previously queued events.</source>
          <target state="translated">Все события, сохраненные с помощью &lt;code&gt;&lt;a href=&quot;#type-action&quot;&gt;action()&lt;/a&gt;&lt;/code&gt; &lt;code&gt;next_event&lt;/code&gt; , вставляются для обработки перед ранее поставленными в очередь событиями.</target>
        </trans-unit>
        <trans-unit id="3491bb0a7d4060188eb065fbc6bc2594ddbd17ff" translate="yes" xml:space="preserve">
          <source>All existing ports are traced.</source>
          <target state="translated">Все существующие порты отслежены.</target>
        </trans-unit>
        <trans-unit id="2c72dcc5bba29ea41d56cc0f3108b0b76f9c39f4" translate="yes" xml:space="preserve">
          <source>All existing processes and ports are traced.</source>
          <target state="translated">Все существующие процессы и порты отслеживаются.</target>
        </trans-unit>
        <trans-unit id="5a4d069c79f3590b37639cb25e98cd7c35810632" translate="yes" xml:space="preserve">
          <source>All existing processes are traced.</source>
          <target state="translated">Все существующие процессы прослеживаются.</target>
        </trans-unit>
        <trans-unit id="5747d94a7ab87afa870a4b1a23637cb5fdeb263d" translate="yes" xml:space="preserve">
          <source>All exported functions &lt;code&gt;f/0&lt;/code&gt;, &lt;code&gt;f/1&lt;/code&gt; and so on are deprecated.</source>
          <target state="translated">Все экспортируемые функции &lt;code&gt;f/0&lt;/code&gt; , &lt;code&gt;f/1&lt;/code&gt; и т. Д. Устарели.</target>
        </trans-unit>
        <trans-unit id="ebe25266a3aaabe1092ea2284360d4d7880f5b5d" translate="yes" xml:space="preserve">
          <source>All exported functions in the module are deprecated and will eventually be removed.</source>
          <target state="translated">Все экспортируемые функции в модуле устаревают и в конечном итоге удаляются.</target>
        </trans-unit>
        <trans-unit id="7d0101bf6297ebfbf7dbf99d16c4071d8e1de6f5" translate="yes" xml:space="preserve">
          <source>All exported functions in the module are deprecated. Equivalent to &lt;code&gt;-deprecated({'_','_'}).&lt;/code&gt;.</source>
          <target state="translated">Все экспортируемые функции в модуле устарели. Эквивалентно &lt;code&gt;-deprecated({'_','_'}).&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="a830cb4b996f3591a6f1ba33560d9c6eba657de5" translate="yes" xml:space="preserve">
          <source>All exported functions of the &lt;code&gt;digraph&lt;/code&gt; module used (in)directly by some function in &lt;code&gt;digraph&lt;/code&gt;.</source>
          <target state="translated">Все экспортируемые функции модуля &lt;code&gt;digraph&lt;/code&gt; используются (в) непосредственно какой-либо функцией в &lt;code&gt;digraph&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a0ffdac5fcbe59b543d6b023f7bcb7ab4d567156" translate="yes" xml:space="preserve">
          <source>All exported functions of the &lt;code&gt;xref&lt;/code&gt; module. The first operand of the intersection operator &lt;code&gt;*&lt;/code&gt; is implicitly converted to the more special type of the second operand.</source>
          <target state="translated">Все экспортируемые функции модуля &lt;code&gt;xref&lt;/code&gt; . Первый операнд оператора пересечения &lt;code&gt;*&lt;/code&gt; неявно преобразуется в более специальный тип второго операнда.</target>
        </trans-unit>
        <trans-unit id="942827b9949c1750c953f7ebc266219ebc7cdd42" translate="yes" xml:space="preserve">
          <source>All external calls to local functions.</source>
          <target state="translated">Все внешние вызовы на локальные функции.</target>
        </trans-unit>
        <trans-unit id="ce56e411c31ac7116e9fd3632deb508253a985ba" translate="yes" xml:space="preserve">
          <source>All files are compressed (as long as they pass the &lt;code&gt;uncompress&lt;/code&gt; condition).</source>
          <target state="translated">Все файлы сжимаются (при условии, что они соответствуют условию &lt;code&gt;uncompress&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="0489e9084611f97b451f50f894c7a01abd2cecc5" translate="yes" xml:space="preserve">
          <source>All files are searched for in the current path. It is assumed that the &lt;code&gt;.app&lt;/code&gt; and &lt;code&gt;.beam&lt;/code&gt; files for an application are located in the same directory. The &lt;code&gt;.erl&lt;/code&gt; files are also assumed to be located in this directory, unless it is an &lt;code&gt;ebin&lt;/code&gt; directory in which case they can be located in the corresponding &lt;code&gt;src&lt;/code&gt; directory.</source>
          <target state="translated">Все файлы ищутся по текущему пути. Предполагается, что файлы &lt;code&gt;.app&lt;/code&gt; и &lt;code&gt;.beam&lt;/code&gt; для приложения находятся в одном каталоге. Предполагается, &lt;code&gt;.erl&lt;/code&gt; файлы .erl также находятся в этом каталоге, если только это не каталог &lt;code&gt;ebin&lt;/code&gt; ,и в этом случае они могут быть расположены в соответствующем каталоге &lt;code&gt;src&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8252fbc317a2198d72c5445b998e2855db44bf75" translate="yes" xml:space="preserve">
          <source>All filters (registered in a &lt;code&gt;Collector&lt;/code&gt; or in a &lt;code&gt;Viewer&lt;/code&gt;) must be able to handle an &lt;code&gt;Event record&lt;/code&gt; as input. The &lt;code&gt;Collector Filter&lt;/code&gt; (that is the filter named &lt;code&gt;all&lt;/code&gt;) is a little bit special, as its input also may be raw &lt;code&gt;Erlang Trace Data&lt;/code&gt;</source>
          <target state="translated">Все фильтры (зарегистрированные в &lt;code&gt;Collector&lt;/code&gt; или &lt;code&gt;Viewer&lt;/code&gt; ) должны иметь возможность обрабатывать &lt;code&gt;Event record&lt;/code&gt; как входную. &lt;code&gt;Collector Filter&lt;/code&gt; (то есть фильтр с именем &lt;code&gt;all&lt;/code&gt; ) является немного особенным, так как его вход может быть сырым &lt;code&gt;Erlang Trace Data&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="422be21988c49192a9f5f28262b52e1e51a8fd90" translate="yes" xml:space="preserve">
          <source>All function calls from &lt;code&gt;xref&lt;/code&gt; and &lt;code&gt;xref_base&lt;/code&gt; to &lt;code&gt;lists&lt;/code&gt; and &lt;code&gt;digraph&lt;/code&gt;.</source>
          <target state="translated">Все вызовы функций из &lt;code&gt;xref&lt;/code&gt; и &lt;code&gt;xref_base&lt;/code&gt; в &lt;code&gt;lists&lt;/code&gt; и &lt;code&gt;digraph&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9db576c6625a484a5d2e923a006859fafb0310a1" translate="yes" xml:space="preserve">
          <source>All function calls from &lt;code&gt;xref&lt;/code&gt; to &lt;code&gt;lists&lt;/code&gt;, and all function calls from &lt;code&gt;xref_base&lt;/code&gt; to &lt;code&gt;digraph&lt;/code&gt;.</source>
          <target state="translated">Все вызовы функций из &lt;code&gt;xref&lt;/code&gt; в &lt;code&gt;lists&lt;/code&gt; и все вызовы функций из &lt;code&gt;xref_base&lt;/code&gt; в &lt;code&gt;digraph&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d129df75799c1b4bd0113f7d6ec3fb57b5027d20" translate="yes" xml:space="preserve">
          <source>All function calls from &lt;code&gt;xref&lt;/code&gt; to &lt;code&gt;xref_base&lt;/code&gt;.</source>
          <target state="translated">Все вызовы функций от &lt;code&gt;xref&lt;/code&gt; до &lt;code&gt;xref_base&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7ca2ffb4856752604dde896ca6470b50c7619bd8" translate="yes" xml:space="preserve">
          <source>All functions can have an optional argument, which specifies a hook that is called if an attempt is made to print an unknown form.</source>
          <target state="translated">Все функции могут иметь необязательный аргумент,задающий крюк,который вызывается при попытке распечатать неизвестную форму.</target>
        </trans-unit>
        <trans-unit id="823a79f73d165ac889d6bd172b59abd37f41a632" translate="yes" xml:space="preserve">
          <source>All functions exported from this module can be used as primary or handler filters. See &lt;code&gt;&lt;a href=&quot;logger#add_primary_filter-2&quot;&gt;logger:add_primary_filter/2&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;logger#add_handler_filter-3&quot;&gt;logger:add_handler_filter/3&lt;/a&gt;&lt;/code&gt; for more information about how filters are added.</source>
          <target state="translated">Все функции, экспортированные из этого модуля, могут использоваться как первичные фильтры или фильтры-обработчики. См &lt;code&gt;&lt;a href=&quot;logger#add_primary_filter-2&quot;&gt;logger:add_primary_filter/2&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;logger#add_handler_filter-3&quot;&gt;logger:add_handler_filter/3&lt;/a&gt;&lt;/code&gt; для получения дополнительной информации о том, как добавляются фильтры.</target>
        </trans-unit>
        <trans-unit id="ec741d9917990170ff113c4353ac60a9452852b7" translate="yes" xml:space="preserve">
          <source>All functions fail with reason &lt;code&gt;badarg&lt;/code&gt; if arguments are of wrong type, for example, queue arguments are not queues, indexes are not integers, and list arguments are not lists. Improper lists cause internal crashes. An index out of range for a queue also causes a failure with reason &lt;code&gt;badarg&lt;/code&gt;.</source>
          <target state="translated">Все функции &lt;code&gt;badarg&lt;/code&gt; ошибкой по причине badarg, если аргументы имеют неправильный тип, например, аргументы очереди не являются очередями, индексы не являются целыми числами, а аргументы списка не являются списками. Неправильные списки вызывают внутренние сбои. Индекс вне допустимого диапазона для очереди также вызывает сбой по причине &lt;code&gt;badarg&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e43fac8a393e657d49457e2719a0083470b80dc0" translate="yes" xml:space="preserve">
          <source>All functions in all loaded modules.</source>
          <target state="translated">Все функции во всех загруженных модулях.</target>
        </trans-unit>
        <trans-unit id="ef103221583f1169bd63b6128675c2644466fb99" translate="yes" xml:space="preserve">
          <source>All functions in module &lt;code&gt;Module&lt;/code&gt;.</source>
          <target state="translated">Все функции в модуле &lt;code&gt;Module&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2466011b635e6de04d4ec84d7f837c33d888a271" translate="yes" xml:space="preserve">
          <source>All functions in module &lt;code&gt;seq_trace&lt;/code&gt;, except &lt;code&gt;set_system_tracer/1&lt;/code&gt;, can be used after the trace port is started with &lt;code&gt;ttb:tracer/0,1,2&lt;/code&gt;.</source>
          <target state="translated">Все функции в модуле &lt;code&gt;seq_trace&lt;/code&gt; , кроме &lt;code&gt;set_system_tracer/1&lt;/code&gt; , можно использовать после запуска порта трассировки с помощью &lt;code&gt;ttb:tracer/0,1,2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="43c6b1b0a958a8deaa986884119e0ee53ee936a8" translate="yes" xml:space="preserve">
          <source>All functions in the driver takes a handle (returned from &lt;code&gt;start&lt;/code&gt;) that is just passed along by the Erlang process. This must in some way refer to the port driver instance.</source>
          <target state="translated">Все функции в драйвере принимают дескриптор (возвращаемый с самого &lt;code&gt;start&lt;/code&gt; ), который просто передается процессом Erlang. Это должно каким-то образом относиться к экземпляру драйвера порта.</target>
        </trans-unit>
        <trans-unit id="f6a9297c81dbe83f85ddbef20dc3f747dd1bff17" translate="yes" xml:space="preserve">
          <source>All functions in this Reference Manual can be used in any combination with queries using the list comprehension notation. For information about the query notation, see the &lt;code&gt;qlc&lt;/code&gt; manual page in STDLIB.</source>
          <target state="translated">Все функции в этом справочном руководстве можно использовать в любой комбинации с запросами, использующими нотацию понимания списка. Для получения информации о записи запроса см &lt;code&gt;qlc&lt;/code&gt; страницу вручную в STDLIB.</target>
        </trans-unit>
        <trans-unit id="83563c273b58224103fb5b60259d697709cba0bd" translate="yes" xml:space="preserve">
          <source>All functions in this behavior must be implemented as NIFs. This limitation can be removed in a future releases. An &lt;code&gt;&lt;a href=&quot;#example&quot;&gt;example tracer module NIF&lt;/a&gt;&lt;/code&gt; implementation is provided at the end of this page.</source>
          <target state="translated">Все функции в этом поведении должны быть реализованы как NIF. Это ограничение может быть снято в будущих выпусках. Пример реализации &lt;code&gt;&lt;a href=&quot;#example&quot;&gt;example tracer module NIF&lt;/a&gt;&lt;/code&gt; приведен в конце этой страницы.</target>
        </trans-unit>
        <trans-unit id="5ba27ab55837d04a290469850ad1f69dc5566c5f" translate="yes" xml:space="preserve">
          <source>All functions in this module have an optional parameter &lt;code&gt;IoDevice&lt;/code&gt;. If included, it must be the pid of a process that handles the I/O protocols. Normally, it is the &lt;code&gt;IoDevice&lt;/code&gt; returned by &lt;code&gt;file:open/2&lt;/code&gt;.</source>
          <target state="translated">Все функции в этом модуле имеют необязательный параметр &lt;code&gt;IoDevice&lt;/code&gt; . Если он включен, это должен быть pid процесса, который обрабатывает протоколы ввода-вывода. Обычно это &lt;code&gt;IoDevice&lt;/code&gt; , возвращаемый &lt;code&gt;file:open/2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="726200fe284b64e025780d2f8b454ec9973f6634" translate="yes" xml:space="preserve">
          <source>All functions of any arity named &lt;code&gt;Function&lt;/code&gt; in module &lt;code&gt;Module&lt;/code&gt;.</source>
          <target state="translated">Все функции любой степени с именем &lt;code&gt;Function&lt;/code&gt; в модуле &lt;code&gt;Module&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f45f048113d0373b3ce22b0d7dd55cfb45f73d15" translate="yes" xml:space="preserve">
          <source>All functions of the &lt;code&gt;xref&lt;/code&gt; module.</source>
          <target state="translated">Все функции модуля &lt;code&gt;xref&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eba6863daa045e951bded6ccc11181d5402b27a1" translate="yes" xml:space="preserve">
          <source>All functions return &lt;code&gt;0&lt;/code&gt; if successful, otherwise &lt;code&gt;-1&lt;/code&gt; (for example, if a term is not of the expected type, or the data to decode is an invalid Erlang term).</source>
          <target state="translated">Все функции возвращают &lt;code&gt;0&lt;/code&gt; в случае успеха, в противном случае - &lt;code&gt;-1&lt;/code&gt; (например, если термин не ожидаемого типа или данные для декодирования являются недопустимым термином Erlang).</target>
        </trans-unit>
        <trans-unit id="f5bc6aaf22245be7eb164a817018deef6e568078" translate="yes" xml:space="preserve">
          <source>All functions take two parameters:</source>
          <target state="translated">Все функции принимают два параметра:</target>
        </trans-unit>
        <trans-unit id="956ed5e678dd45f2252e7ddbe4d7c18199877e4b" translate="yes" xml:space="preserve">
          <source>All functions that a driver needs to do with Erlang are performed through driver API functions. Functions exist for the following functionality:</source>
          <target state="translated">Все функции,которые драйвер должен выполнять с Erlang,выполняются через API-функции драйвера.Функции существуют для следующей функциональности:</target>
        </trans-unit>
        <trans-unit id="060ec634508a875eb366a978194bdb8554c750a9" translate="yes" xml:space="preserve">
          <source>All functions with a &lt;code&gt;FuncCallCount&lt;/code&gt; lower than &lt;code&gt;Limit&lt;/code&gt; are excluded from &lt;code&gt;FuncAnalysisList&lt;/code&gt;. They are still included in &lt;code&gt;ModCallCount&lt;/code&gt;, though. The default value for &lt;code&gt;Limit&lt;/code&gt; is &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">Все функции с &lt;code&gt;FuncCallCount&lt;/code&gt; ниже &lt;code&gt;Limit&lt;/code&gt; исключаются из &lt;code&gt;FuncAnalysisList&lt;/code&gt; . Однако они все еще включены в &lt;code&gt;ModCallCount&lt;/code&gt; . Значение по умолчанию для &lt;code&gt;Limit&lt;/code&gt; - &lt;code&gt;1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="046534351d00f7cf7cc373a50278b04994192a3a" translate="yes" xml:space="preserve">
          <source>All initialization, including name registration, is done in &lt;code&gt;init&lt;/code&gt;. The new process must also acknowledge that it has been started to the parent:</source>
          <target state="translated">Вся инициализация, включая регистрацию имени, выполняется в &lt;code&gt;init&lt;/code&gt; . Новый процесс также должен подтвердить, что он был запущен родителем:</target>
        </trans-unit>
        <trans-unit id="46cda0f29f9968b1b8eac1178e9399bb98ac0756" translate="yes" xml:space="preserve">
          <source>All interaction between NIF code and the Erlang runtime system is performed by calling NIF API functions. Functions exist for the following functionality:</source>
          <target state="translated">Все взаимодействие между NIF-кодом и системой исполнения Erlang осуществляется путем вызова API-функций NIF.Функции существуют для следующей функциональности:</target>
        </trans-unit>
        <trans-unit id="b8bf9347aac7d69c1a7c4192dd20e3c477cd2eef" translate="yes" xml:space="preserve">
          <source>All involved nodes must agree on the global group definition, otherwise the behavior of the system is undefined.</source>
          <target state="translated">Все задействованные узлы должны согласиться с глобальным определением группы,в противном случае поведение системы будет неопределенным.</target>
        </trans-unit>
        <trans-unit id="2ddeb2fa9e303d6ec0189514f0afae8c313983ca" translate="yes" xml:space="preserve">
          <source>All involved nodes must have the same value for &lt;code&gt;distributed&lt;/code&gt; and &lt;code&gt;sync_nodes_timeout&lt;/code&gt;. Otherwise the system behaviour is undefined.</source>
          <target state="translated">Все задействованные узлы должны иметь одинаковое значение для &lt;code&gt;distributed&lt;/code&gt; и &lt;code&gt;sync_nodes_timeout&lt;/code&gt; . В противном случае поведение системы не определено.</target>
        </trans-unit>
        <trans-unit id="cc6547cbb70d26e829dedc7fc557e10f893223e6" translate="yes" xml:space="preserve">
          <source>All items in &lt;code&gt;Options&lt;/code&gt; that are not make options are assumed to be compiler options and are passed as-is to &lt;code&gt;compile:file/2&lt;/code&gt;. &lt;code&gt;Options&lt;/code&gt; defaults to &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">Все элементы в &lt;code&gt;Options&lt;/code&gt; , которые не являются параметрами make, считаются параметрами компилятора и передаются как есть для &lt;code&gt;compile:file/2&lt;/code&gt; . &lt;code&gt;Options&lt;/code&gt; умолчанию &lt;code&gt;[]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6a74854341f74c068c82ad0a8f0663aa4e14988f" translate="yes" xml:space="preserve">
          <source>All jobs that do not use standard I/O run in the normal way.</source>
          <target state="translated">Все задания,в которых не используется стандартный ввод/вывод,выполняются обычным способом.</target>
        </trans-unit>
        <trans-unit id="1865391b0c3e8e089483ce4975e720c45e5a9c41" translate="yes" xml:space="preserve">
          <source>All keys and values in the map are terms. Any expression is first evaluated and then the resulting terms are used as &lt;strong&gt;key&lt;/strong&gt; and &lt;strong&gt;value&lt;/strong&gt; respectively.</source>
          <target state="translated">Все ключи и значения на карте являются терминами. Сначала оценивается любое выражение, а затем полученные термины используются как &lt;strong&gt;ключ&lt;/strong&gt; и &lt;strong&gt;значение&lt;/strong&gt; соответственно.</target>
        </trans-unit>
        <trans-unit id="b9288c9e5c221796e80a2e7498e046ec5f58a8b5" translate="yes" xml:space="preserve">
          <source>All keys and values must belong to &lt;code&gt;env&lt;/code&gt;.</source>
          <target state="translated">Все ключи и значения должны принадлежать &lt;code&gt;env&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3aae0ef6a36eb4138caa9b3ee5995eea319883b4" translate="yes" xml:space="preserve">
          <source>All list expressions are evaluated. If a cursor has been created, evaluation takes place in the cursor process. For list expressions that are QLCs, the list expressions of the generators of the QLCs are evaluated as well. Be careful if list expressions have side effects, as list expressions are evaluated in unspecified order.</source>
          <target state="translated">Все выражения списка оцениваются.Если курсор создан,то оценка происходит в процессе работы с курсором.Для выражений списка,которые являются QLC,также оцениваются выражения списка генераторов QLC.Будьте осторожны,если выражения списка имеют побочные эффекты,поскольку выражения списка оцениваются в неуказанном порядке.</target>
        </trans-unit>
        <trans-unit id="ea62e05bff6ced6fe4f7db7a70fe5d182215dc60" translate="yes" xml:space="preserve">
          <source>All lists of identifiers must produce the same number of identifiers.</source>
          <target state="translated">Все списки идентификаторов должны содержать одинаковое количество идентификаторов.</target>
        </trans-unit>
        <trans-unit id="831a903ff3acb3a95d91bc2244d77f78dbc1b105" translate="yes" xml:space="preserve">
          <source>All locks are continuously monitored and its statistics updated. Use &lt;code&gt;lcnt:clear/0&lt;/code&gt; to initially clear all counters before running any specific tests. This command will also reset the duration timer internally.</source>
          <target state="translated">Все блокировки постоянно контролируются, и его статистика обновляется. Используйте &lt;code&gt;lcnt:clear/0&lt;/code&gt; для первоначального сброса всех счетчиков перед запуском каких-либо конкретных тестов. Эта команда также сбрасывает таймер продолжительности внутренне.</target>
        </trans-unit>
        <trans-unit id="9cd647737f1c87ee7c161c5ee26fe910048843cf" translate="yes" xml:space="preserve">
          <source>All logical drives of type &quot;FIXED_DISK&quot; are checked.</source>
          <target state="translated">Проверяются все логические приводы типа &quot;FIXED_DISK&quot;.</target>
        </trans-unit>
        <trans-unit id="d4db0be4b4b4c802ce985caea6e5dff7b25d978f" translate="yes" xml:space="preserve">
          <source>All macro names generated by the compiler are prefixed with &lt;code&gt;Prefix&lt;/code&gt;. This is useful when multiple protocols that contain macros with identical names are included in a single module.</source>
          <target state="translated">Все имена макросов, сгенерированные компилятором, имеют префикс &lt;code&gt;Prefix&lt;/code&gt; . Это полезно, когда несколько протоколов, содержащих макросы с одинаковыми именами, включены в один модуль.</target>
        </trans-unit>
        <trans-unit id="494705700ec0edc0b3e9bd3d1008f1481b1665ee" translate="yes" xml:space="preserve">
          <source>All macros expand to a call to Logger, where &lt;code&gt;Level&lt;/code&gt; is taken from the macro name, and location data is added to the metadata. See the description of the &lt;code&gt;&lt;a href=&quot;#type-metadata&quot;&gt;metadata()&lt;/a&gt;&lt;/code&gt; type for more information about the location data.</source>
          <target state="translated">Все макросы расширяются до вызова Logger, где &lt;code&gt;Level&lt;/code&gt; берется из имени макроса, а данные о местоположении добавляются к метаданным. См. Описание типа &lt;code&gt;&lt;a href=&quot;#type-metadata&quot;&gt;metadata()&lt;/a&gt;&lt;/code&gt; для получения дополнительной информации о данных о местоположении.</target>
        </trans-unit>
        <trans-unit id="d0c8d5eebae1c81c9d4cc44fa89d86c186216006" translate="yes" xml:space="preserve">
          <source>All memory sizes are presented as number of &lt;strong&gt;bytes&lt;/strong&gt;.</source>
          <target state="translated">Все размеры памяти представлены в &lt;strong&gt;байтах&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="c95b69f492d38b3c97ab065a21ebadda9800ddeb" translate="yes" xml:space="preserve">
          <source>All messages in the message queue will eventually be placed on heap. They can however temporarily be stored off heap. This is how messages always have been stored up until ERTS 8.0.</source>
          <target state="translated">Все сообщения в очереди сообщений со временем будут помещены на кучу.Однако они могут временно храниться вне кучи.Так сообщения всегда сохранялись до ERTS 8.0.</target>
        </trans-unit>
        <trans-unit id="f77aafd15225e94bc1f5d8df9caf3f4c48675dfa" translate="yes" xml:space="preserve">
          <source>All messages sent over the transport interface are of the form &lt;code&gt;{diameter, term()}&lt;/code&gt;.</source>
          <target state="translated">Все сообщения, отправляемые через транспортный интерфейс, имеют форму &lt;code&gt;{diameter, term()}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d9fadb6f85546bb42570866cced284af7083a859" translate="yes" xml:space="preserve">
          <source>All modules introduced by this application. &lt;code&gt;systools&lt;/code&gt; uses this list when generating start scripts and tar files. A module can only be defined in one application.</source>
          <target state="translated">Все модули, представленные в этом приложении. &lt;code&gt;systools&lt;/code&gt; использует этот список при создании сценариев запуска и файлов tar. Модуль можно определить только в одном приложении.</target>
        </trans-unit>
        <trans-unit id="b81023ab4e25ef6717f23395a1aedb12fb5ddbc7" translate="yes" xml:space="preserve">
          <source>All modules of the Tools application.</source>
          <target state="translated">Все модули приложения &quot;Инструменты&quot;.</target>
        </trans-unit>
        <trans-unit id="429cfbd4010cf55e09670589087f82f8687b863b" translate="yes" xml:space="preserve">
          <source>All modules with a name beginning with &lt;code&gt;xref_&lt;/code&gt;.</source>
          <target state="translated">Все модули с именем, начинающимся с &lt;code&gt;xref_&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d8fe3d0304a41f7579b1ba411ab3df7b0920caa7" translate="yes" xml:space="preserve">
          <source>All names of registered processes started in this application. &lt;code&gt;systools&lt;/code&gt; uses this list to detect name clashes between different applications.</source>
          <target state="translated">Все имена зарегистрированных процессов запущены в этом приложении. &lt;code&gt;systools&lt;/code&gt; использует этот список для обнаружения конфликтов имен между различными приложениями.</target>
        </trans-unit>
        <trans-unit id="63603405883458e08fdb5a997ded4a3cb73fef22" translate="yes" xml:space="preserve">
          <source>All nitty gritty details of the event.</source>
          <target state="translated">Все ничтожные зернистые детали мероприятия.</target>
        </trans-unit>
        <trans-unit id="8955d624f919ff35c5d686d0dd52b90c5392d816" translate="yes" xml:space="preserve">
          <source>All nodes added with &lt;code&gt;&lt;a href=&quot;#n-1&quot;&gt;n/1&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#tracer-3&quot;&gt;tracer/3&lt;/a&gt;&lt;/code&gt; will be affected by this call, and if Module is not &lt;code&gt;'_'&lt;/code&gt; the module will be loaded on all nodes.</source>
          <target state="translated">Все узлы, добавленные с помощью &lt;code&gt;&lt;a href=&quot;#n-1&quot;&gt;n/1&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;#tracer-3&quot;&gt;tracer/3&lt;/a&gt;&lt;/code&gt; , будут затронуты этим вызовом, и если Module не равен &lt;code&gt;'_'&lt;/code&gt; , модуль будет загружен на всех узлах.</target>
        </trans-unit>
        <trans-unit id="c596dc51ad6ac7a667444d4ab6da510586b442cc" translate="yes" xml:space="preserve">
          <source>All nodes added with &lt;code&gt;&lt;a href=&quot;#n-1&quot;&gt;n/1&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#tracer-3&quot;&gt;tracer/3&lt;/a&gt;&lt;/code&gt; will be affected by this call.</source>
          <target state="translated">Все узлы, добавленные с &lt;code&gt;&lt;a href=&quot;#n-1&quot;&gt;n/1&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;#tracer-3&quot;&gt;tracer/3&lt;/a&gt;&lt;/code&gt; , будут затронуты этим вызовом.</target>
        </trans-unit>
        <trans-unit id="d9448e54ad1639a4fc81a3d2181edf3fa2a36dab" translate="yes" xml:space="preserve">
          <source>All nodes connected to this node.</source>
          <target state="translated">Все узлы,подключенные к этому узлу.</target>
        </trans-unit>
        <trans-unit id="c16d866482510d3df4a4d9c10e80cfd8693ce976" translate="yes" xml:space="preserve">
          <source>All of these MIBs should be loaded into the Master Agent. Once loaded, these MIBs are always available in all contexts.</source>
          <target state="translated">Все эти MIB должны быть загружены в главный агент.После загрузки эти MIB всегда доступны во всех контекстах.</target>
        </trans-unit>
        <trans-unit id="5404924b8d62bd94a8e2b48b441dd9ef3bb2c473" translate="yes" xml:space="preserve">
          <source>All of these can be used in guards. Now for some BIFs that cannot be used in guards:</source>
          <target state="translated">Все это можно использовать в охране.Теперь для некоторых БИФов,которые не могут быть использованы в охране:</target>
        </trans-unit>
        <trans-unit id="50f0e79a9827c7185eb8a799e8536a39c5dbce1a" translate="yes" xml:space="preserve">
          <source>All open tables must be closed before the system is stopped. If an attempt is made to open a table that is not properly closed, Dets automatically tries to repair it.</source>
          <target state="translated">Все открытые столы должны быть закрыты до остановки системы.При попытке открыть стол,который не закрыт должным образом,Dets автоматически пытается его восстановить.</target>
        </trans-unit>
        <trans-unit id="9366c0e819489e6627469b740a2d8b3479faca40" translate="yes" xml:space="preserve">
          <source>All operations has an amortized O(1) running time, except &lt;code&gt;&lt;a href=&quot;#filter-2&quot;&gt;filter/2&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#join-2&quot;&gt;join/2&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#len-1&quot;&gt;len/1&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#member-2&quot;&gt;member/2&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#split-2&quot;&gt;split/2&lt;/a&gt;&lt;/code&gt; that have O(n). To minimize the size of a queue minimizing the amount of garbage built by queue operations, the queues do not contain explicit length information, and that is why &lt;code&gt;len/1&lt;/code&gt; is O(n). If better performance for this particular operation is essential, it is easy for the caller to keep track of the length.</source>
          <target state="translated">Все операции имеют амортизированное время выполнения O (1), за исключением &lt;code&gt;&lt;a href=&quot;#filter-2&quot;&gt;filter/2&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#join-2&quot;&gt;join/2&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#len-1&quot;&gt;len/1&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#member-2&quot;&gt;member/2&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#split-2&quot;&gt;split/2&lt;/a&gt;&lt;/code&gt; , которые имеют O (n). Чтобы минимизировать размер очереди, сводя к минимуму количество мусора, создаваемого операциями с очередями, очереди не содержат явной информации о длине, и поэтому &lt;code&gt;len/1&lt;/code&gt; равно O (n). Если для этой конкретной операции необходима лучшая производительность, вызывающему абоненту легко отслеживать ее длину.</target>
        </trans-unit>
        <trans-unit id="4bb3faf2c2244b5d385e1264229f20eef126b3f8" translate="yes" xml:space="preserve">
          <source>All operations on applications are coordinated by the application controller. It is interacted through the functions in the module &lt;code&gt;application&lt;/code&gt;, see the &lt;code&gt;application(3)&lt;/code&gt; manual page in Kernel. In particular, applications can be loaded, unloaded, started, and stopped.</source>
          <target state="translated">Все операции с приложениями координируются контроллером приложений. Взаимодействие с ним осуществляется через функции модуля &lt;code&gt;application&lt;/code&gt; , см. Справочную страницу &lt;code&gt;application(3)&lt;/code&gt; в ядре. В частности, приложения можно загружать, выгружать, запускать и останавливать.</target>
        </trans-unit>
        <trans-unit id="9a155092927253ab8adb73277ff15a9389de0ffb" translate="yes" xml:space="preserve">
          <source>All operations that can be performed on &lt;code&gt;dets&lt;/code&gt; files can also be performed on the &lt;code&gt;Mnesia&lt;/code&gt; data files. For example, &lt;code&gt;dets&lt;/code&gt; contains the function &lt;code&gt;dets:traverse/2&lt;/code&gt;, which can be used to view the contents of a &lt;code&gt;Mnesia&lt;/code&gt;&lt;code&gt;DAT&lt;/code&gt; file. However, this can only be done when &lt;code&gt;Mnesia&lt;/code&gt; is not running. So, to view the schema file, do as follows;</source>
          <target state="translated">Все операции, которые могут выполняться с файлами &lt;code&gt;dets&lt;/code&gt; , также могут выполняться с файлами данных &lt;code&gt;Mnesia&lt;/code&gt; . Например, &lt;code&gt;dets&lt;/code&gt; содержит функцию &lt;code&gt;dets:traverse/2&lt;/code&gt; , которую можно использовать для просмотра содержимого файла &lt;code&gt;Mnesia&lt;/code&gt; &lt;code&gt;DAT&lt;/code&gt; . Однако это можно сделать только тогда, когда &lt;code&gt;Mnesia&lt;/code&gt; не запущена. Итак, чтобы просмотреть файл схемы, сделайте следующее:</target>
        </trans-unit>
        <trans-unit id="7944ca23e769d63791bf6d56110b8504cc650e69" translate="yes" xml:space="preserve">
          <source>All options &lt;code&gt;Opt&lt;/code&gt; are set on the socket before the association is attempted. If an option record has undefined field values, the options record is first read from the socket for those values. In effect, &lt;code&gt;Opt&lt;/code&gt; option records only define field values to change before connecting.</source>
          <target state="translated">Все параметры &lt;code&gt;Opt&lt;/code&gt; устанавливаются на сокете до попытки ассоциации. Если запись параметра имеет неопределенные значения поля, запись параметров сначала считывается из сокета для этих значений. Фактически, записи опции &lt;code&gt;Opt&lt;/code&gt; определяют только значения полей, которые нужно изменить перед подключением.</target>
        </trans-unit>
        <trans-unit id="717f82077e05a6bd5c4e1f6ec9f053ccca43eecd" translate="yes" xml:space="preserve">
          <source>All options has default values.</source>
          <target state="translated">Все опции имеют значения по умолчанию.</target>
        </trans-unit>
        <trans-unit id="df6d621c39e158f12320b634e0dfbb13f7f0a03f" translate="yes" xml:space="preserve">
          <source>All options, except the include path (&lt;code&gt;{i,Dir}&lt;/code&gt;), can also be given in the file with attribute &lt;code&gt;-compile([Option,...])&lt;/code&gt;. Attribute &lt;code&gt;-compile()&lt;/code&gt; is allowed after the function definitions.</source>
          <target state="translated">Все параметры, кроме пути включения ( &lt;code&gt;{i,Dir}&lt;/code&gt; ), также могут быть указаны в файле с атрибутом &lt;code&gt;-compile([Option,...])&lt;/code&gt; . Атрибут &lt;code&gt;-compile()&lt;/code&gt; разрешен после определений функций.</target>
        </trans-unit>
        <trans-unit id="3262efdb0e0795ddd30e0491c99cd9db2b1217ce" translate="yes" xml:space="preserve">
          <source>All other error codes are to be translated by function &lt;code&gt;&lt;a href=&quot;#format_error-1&quot;&gt;format_error/1&lt;/a&gt;&lt;/code&gt;. Notice that calls to &lt;code&gt;format_error&lt;/code&gt; are to be performed from the same running instance of the Erlang virtual machine as the error is detected in, because of system-dependent behavior concerning error values.</source>
          <target state="translated">Все остальные коды ошибок переводятся функцией &lt;code&gt;&lt;a href=&quot;#format_error-1&quot;&gt;format_error/1&lt;/a&gt;&lt;/code&gt; . Обратите внимание, что вызовы &lt;code&gt;format_error&lt;/code&gt; должны выполняться из того же запущенного экземпляра виртуальной машины Erlang, в котором обнаружена ошибка, из-за системно-зависимого поведения в отношении значений ошибок.</target>
        </trans-unit>
        <trans-unit id="5f6a14eeedaaeb7e6254232d3638d6dc2f6e8555" translate="yes" xml:space="preserve">
          <source>All other funs are called &lt;strong&gt;local&lt;/strong&gt;. When a local fun is called, the same version of the code that created the fun is called (even if a newer version of the module has been loaded).</source>
          <target state="translated">Все остальные забавы называются &lt;strong&gt;местными&lt;/strong&gt; . Когда вызывается локальное развлечение, вызывается та же версия кода, который создал забаву (даже если была загружена более новая версия модуля).</target>
        </trans-unit>
        <trans-unit id="8838f7dce02b840a82ef3664122b2c9a0564b86c" translate="yes" xml:space="preserve">
          <source>All other options are directly passed to &lt;code&gt;&lt;a href=&quot;ssh&quot;&gt;ssh:connect/3&lt;/a&gt;&lt;/code&gt; or ignored if a connection is already provided.</source>
          <target state="translated">Все остальные параметры напрямую передаются в &lt;code&gt;&lt;a href=&quot;ssh&quot;&gt;ssh:connect/3&lt;/a&gt;&lt;/code&gt; или игнорируются, если соединение уже установлено.</target>
        </trans-unit>
        <trans-unit id="0fdd5012a3999f248928e35df9097ed59369e26c" translate="yes" xml:space="preserve">
          <source>All other tables that refer to this table in their foreign key</source>
          <target state="translated">Все остальные таблицы,которые ссылаются на эту таблицу в своем внешнем ключе.</target>
        </trans-unit>
        <trans-unit id="7bef1fa75d2399a77a342855446a7b8e1b60ed9b" translate="yes" xml:space="preserve">
          <source>All paragraphs up to the next process header only concerns function calls within this process.</source>
          <target state="translated">Все параграфы до следующего заголовка процесса касаются только вызовов функций в рамках этого процесса.</target>
        </trans-unit>
        <trans-unit id="a921a840e963ba360d450906acb47195c661a0fd" translate="yes" xml:space="preserve">
          <source>All parts returned as binaries.</source>
          <target state="translated">Все детали возвращены в виде двоичных файлов.</target>
        </trans-unit>
        <trans-unit id="21e943024f0cf28dbeb8a994a76fa77df65f90d8" translate="yes" xml:space="preserve">
          <source>All parts returned as lists of characters (&quot;strings&quot;).</source>
          <target state="translated">Все части возвращаются в виде списков символов (&quot;строк&quot;).</target>
        </trans-unit>
        <trans-unit id="eacdc8b4f05f878b8de176b164d8e1333a39ed8a" translate="yes" xml:space="preserve">
          <source>All patterns must be matched in a sequence. A match is not concluded until all patterns are matched. This option can be interrupted by one or more &lt;code&gt;HaltPatterns&lt;/code&gt;. &lt;code&gt;MatchList&lt;/code&gt; is always returned, that is, a list of &lt;code&gt;Match&lt;/code&gt; instead of only one &lt;code&gt;Match&lt;/code&gt;. Also &lt;code&gt;HaltReason&lt;/code&gt; is returned.</source>
          <target state="translated">Все шаблоны должны совпадать в последовательности. Сопоставление не считается завершенным, пока не будут сопоставлены все шаблоны. Эта опция может быть прервана одним или несколькими &lt;code&gt;HaltPatterns&lt;/code&gt; . Всегда возвращается &lt;code&gt;MatchList&lt;/code&gt; , то есть список &lt;code&gt;Match&lt;/code&gt; , а не только одно &lt;code&gt;Match&lt;/code&gt; . Также возвращается &lt;code&gt;HaltReason&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fe1686901bbde4606445ec2f94e1d9d4f885ae9d" translate="yes" xml:space="preserve">
          <source>All ports created after the call is are to be traced.</source>
          <target state="translated">Все порты,созданные после вызова,должны быть отслежены.</target>
        </trans-unit>
        <trans-unit id="f925b88f64b63747ed903430e90112298afb46f9" translate="yes" xml:space="preserve">
          <source>All ports in the system as well as all ports created hereafter are to be traced.</source>
          <target state="translated">Все порты в системе,а также все порты,созданные в дальнейшем,должны быть прослежены.</target>
        </trans-unit>
        <trans-unit id="17489271f7d94016b64b27eb715c1631842f0ea9" translate="yes" xml:space="preserve">
          <source>All ports that will be created in the future.</source>
          <target state="translated">Все порты,которые будут созданы в будущем.</target>
        </trans-unit>
        <trans-unit id="76ff66e92ea2da8c3fa29ddd1a6eef5dcf62d533" translate="yes" xml:space="preserve">
          <source>All pre hooks, except &lt;code&gt;pre_end_per_testcase/4&lt;/code&gt;, can skip or fail the test by returning a tuple with &lt;code&gt;skip&lt;/code&gt; or &lt;code&gt;fail&lt;/code&gt;, and a reason as the result.</source>
          <target state="translated">Все предварительные хуки, за исключением &lt;code&gt;pre_end_per_testcase/4&lt;/code&gt; , могут пропустить или не пройти тест, возвращая кортеж с &lt;code&gt;skip&lt;/code&gt; или &lt;code&gt;fail&lt;/code&gt; , и причину в качестве результата.</target>
        </trans-unit>
        <trans-unit id="c675952980c889f0d89ff8e73fd8703b823a9ed6" translate="yes" xml:space="preserve">
          <source>All printable Unicode characters are considered when determining if a list of integers is to be displayed in string syntax. This can give unexpected results if, for example, your font does not cover all Unicode characters.</source>
          <target state="translated">Все печатаемые символы Юникода учитываются при определении того,будет ли список целых чисел отображаться в синтаксисе строк.Это может дать неожиданный результат,если,например,Ваш шрифт не покрывает все символы Юникода.</target>
        </trans-unit>
        <trans-unit id="3b7ed40b3a03fdb7bdd0b017e905acbe12c81905" translate="yes" xml:space="preserve">
          <source>All processes and ports created after the call is are to be traced.</source>
          <target state="translated">Все процессы и порты,созданные после вызова,должны быть отслежены.</target>
        </trans-unit>
        <trans-unit id="ec9536dced588a5adfc7f095f97a48ee12e811ce" translate="yes" xml:space="preserve">
          <source>All processes and ports in the system as well as all processes and ports created hereafter are to be traced.</source>
          <target state="translated">Все процессы и порты в системе,а также все процессы и порты,созданные в дальнейшем,должны быть прослежены.</target>
        </trans-unit>
        <trans-unit id="02ef48a5ab6a5d0ee8466733327d3e4350edfd7d" translate="yes" xml:space="preserve">
          <source>All processes and ports that will be created in the future.</source>
          <target state="translated">Все процессы и порты,которые будут созданы в будущем.</target>
        </trans-unit>
        <trans-unit id="d9be8009e2c7f6a938c6f743db853b2dfb9ccf36" translate="yes" xml:space="preserve">
          <source>All processes created after the call is are to be traced.</source>
          <target state="translated">Все процессы,созданные после вызова,должны быть отслежены.</target>
        </trans-unit>
        <trans-unit id="058932c80ec58afa4c752d8e488f1fd07db947f7" translate="yes" xml:space="preserve">
          <source>All processes executing code in interpreted modules are displayed in the Monitor window.</source>
          <target state="translated">В окне Монитор отображаются все процессы,выполняющие код в интерпретируемых модулях.</target>
        </trans-unit>
        <trans-unit id="974deb8f031d33a6740c7ebe7532a4266b1e29c9" translate="yes" xml:space="preserve">
          <source>All processes in the system as well as all processes created hereafter are to be traced.</source>
          <target state="translated">Все процессы в системе,а также все процессы,созданные в дальнейшем,должны быть прослежены.</target>
        </trans-unit>
        <trans-unit id="263aac7a2b0fbff02edd125aaea0db769c21d0fa" translate="yes" xml:space="preserve">
          <source>All processes that will be created in the future.</source>
          <target state="translated">Все процессы,которые будут созданы в будущем.</target>
        </trans-unit>
        <trans-unit id="b62c900a4023fa86a2240db1615b7f1efe40eb78" translate="yes" xml:space="preserve">
          <source>All programs accessing the database through the transaction system can be written as if they had sole access to the data. This is a desirable property, as all synchronization is taken care of by the transaction handler. If a program reads or writes data, the system ensures that no other program tries to manipulate the same data at the same time.</source>
          <target state="translated">Все программы,обращающиеся к базе данных через транзакционную систему,могут быть записаны так,как если бы у них был единоличный доступ к данным.Это желательное свойство,так как вся синхронизация берется обработчиком транзакций.Если программа читает или записывает данные,то система гарантирует,что никакая другая программа не попытается манипулировать одними и теми же данными одновременно.</target>
        </trans-unit>
        <trans-unit id="17a5433d9d8b1ba8d9bee65a3013cbeaf6dd7b31" translate="yes" xml:space="preserve">
          <source>All record names generated by the compiler are prefixed with &lt;code&gt;Prefix&lt;/code&gt;. This is useful when multiple protocols that contain records with identical names are included in a single module.</source>
          <target state="translated">Все имена записей, сгенерированные компилятором, имеют префикс &lt;code&gt;Prefix&lt;/code&gt; . Это полезно, когда несколько протоколов, содержащих записи с одинаковыми именами, включены в один модуль.</target>
        </trans-unit>
        <trans-unit id="979b4a0590268416125e90127fc8bfa28240add9" translate="yes" xml:space="preserve">
          <source>All records used in this Reference Manual are generated from ASN.1 specifications and are documented in the User's Guide. See &lt;code&gt;&lt;a href=&quot;public_key_records&quot;&gt;Public-key Records&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Все записи, используемые в этом Справочном руководстве, созданы на основе спецификаций ASN.1 и задокументированы в Руководстве пользователя. См. &amp;laquo; &lt;code&gt;&lt;a href=&quot;public_key_records&quot;&gt;Public-key Records&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9ac9354c0bfca95837d962e8ba1466208a9c37ae" translate="yes" xml:space="preserve">
          <source>All references to this node can then use the node name. For example, a file over FTP is fetched like follows:</source>
          <target state="translated">Все ссылки на этот узел могут использовать имя узла.Например,файл по FTP извлекается следующим образом:</target>
        </trans-unit>
        <trans-unit id="9078a5064d8a2d7b1b465df78627e79bf9b494a4" translate="yes" xml:space="preserve">
          <source>All replicas are &lt;code&gt;ram_copies&lt;/code&gt;.</source>
          <target state="translated">Все реплики - это &lt;code&gt;ram_copies&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="02e9fe7f27cf72b855151f6db9301e6668c3912f" translate="yes" xml:space="preserve">
          <source>All reports containing a common pattern can be shown. Suppose a process crashes because it tries to call a non-existing function &lt;code&gt;release_handler:mbj_func/1&lt;/code&gt;. The reports can then be shown as follows:</source>
          <target state="translated">Могут быть показаны все отчеты, содержащие общий шаблон. Предположим, что процесс вылетает из-за того, что пытается вызвать несуществующую функцию &lt;code&gt;release_handler:mbj_func/1&lt;/code&gt; . Затем отчеты могут быть показаны следующим образом:</target>
        </trans-unit>
        <trans-unit id="d223dc7b2bab3d6a8406ce4cb25c92a16820e095" translate="yes" xml:space="preserve">
          <source>All reports matching the regular expression &lt;code&gt;RegExp&lt;/code&gt; are displayed. &lt;code&gt;RegExp&lt;/code&gt; can be any of the following:</source>
          <target state="translated">Отображаются все отчеты, соответствующие регулярному выражению &lt;code&gt;RegExp&lt;/code&gt; . &lt;code&gt;RegExp&lt;/code&gt; может быть любым из следующих:</target>
        </trans-unit>
        <trans-unit id="feccd905133ca27d919366e9013d126e914e1433" translate="yes" xml:space="preserve">
          <source>All request made by the client to the connection are synchronous. If the timeout is used and expires the client process will exit with reason timeout. Proably the right thing to do is let the client die and perhaps be restarted by its supervisor. But if the client chooses to catch this timeout, it is a good idea to wait a little while before trying again. If there are too many consecutive timeouts that are caught the connection process will conclude that there is something radically wrong and terminate the connection.</source>
          <target state="translated">Все запросы клиента к соединению синхронизированы.В случае использования таймаута и истечения его срока,клиентский процесс завершается с таймаутом.Вероятно,правильным решением будет дать клиенту умереть и,возможно,быть перезапущенным его супервайзером.Но если клиент решит поймать этот таймаут,хорошей идеей будет немного подождать,прежде чем пытаться снова.Если будет обнаружено слишком много последовательных таймаутов,то процесс соединения придет к выводу,что что-то радикально не так,и прервет соединение.</target>
        </trans-unit>
        <trans-unit id="032cbcc0d828f70779b0c0ed0bc3facdb5203770" translate="yes" xml:space="preserve">
          <source>All resource objects are created as instances of some &lt;strong&gt;resource type&lt;/strong&gt;. This makes resources from different modules to be distinguishable. A resource type is created by calling &lt;code&gt;&lt;a href=&quot;#enif_open_resource_type&quot;&gt;enif_open_resource_type&lt;/a&gt;&lt;/code&gt; when a library is loaded. Objects of that resource type can then later be allocated and &lt;code&gt;enif_get_resource&lt;/code&gt; verifies that the resource is of the expected type. A resource type can have a user-supplied destructor function, which is automatically called when resources of that type are released (by either the garbage collector or &lt;code&gt;enif_release_resource&lt;/code&gt;). Resource types are uniquely identified by a supplied name string and the name of the implementing module.</source>
          <target state="translated">Все объекты ресурсов создаются как экземпляры определенного &lt;strong&gt;типа ресурсов&lt;/strong&gt; . Это делает ресурсы из разных модулей различимыми. Тип ресурса создается путем вызова &lt;code&gt;&lt;a href=&quot;#enif_open_resource_type&quot;&gt;enif_open_resource_type&lt;/a&gt;&lt;/code&gt; при загрузке библиотеки. Затем объекты этого типа ресурса могут быть выделены, и &lt;code&gt;enif_get_resource&lt;/code&gt; проверяет, имеет ли ресурс ожидаемый тип. Тип ресурса может иметь предоставляемую пользователем функцию деструктора, которая автоматически вызывается при освобождении ресурсов этого типа (либо сборщиком мусора, либо &lt;code&gt;enif_release_resource&lt;/code&gt; ). Типы ресурсов однозначно идентифицируются по предоставленной строке имени и имени реализующего модуля.</target>
        </trans-unit>
        <trans-unit id="8b7a4f2a8dc320cacf959f8d17456e7115df6332" translate="yes" xml:space="preserve">
          <source>All runtime dependencies specified in OTP applications during the OTP 17 release may not be completely correct. This is actively being worked on. Declared runtime dependencies in OTP applications are expected to be correct in OTP 18.</source>
          <target state="translated">Все зависимости,указанные в приложениях OTP во время релиза OTP 17,могут быть не полностью корректными.Над этим активно работают.Предполагается,что заявленные зависимости,указанные в OTP приложениях во время релиза,будут корректны в OTP 18.</target>
        </trans-unit>
        <trans-unit id="8d4e91d8f62a7df11a977cb27005070535f221fd" translate="yes" xml:space="preserve">
          <source>All sections are returned even if they do not exist in the escript. If a particular section happens to have the same value as the default value, the extracted value is set to the atom &lt;code&gt;default&lt;/code&gt;. If a section is missing, the extracted value is set to the atom &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">Все разделы возвращаются, даже если их нет в эскрипте. Если конкретный раздел имеет то же значение, что и значение по умолчанию, извлеченное значение устанавливается на атом по &lt;code&gt;default&lt;/code&gt; . Если раздел отсутствует, извлеченное значение устанавливается на &lt;code&gt;undefined&lt;/code&gt; атом .</target>
        </trans-unit>
        <trans-unit id="93c2177455dcce657afa2684588a0241cb58b085" translate="yes" xml:space="preserve">
          <source>All sizes are in words.</source>
          <target state="translated">Все размеры на словах.</target>
        </trans-unit>
        <trans-unit id="816578661858d321b1e0e5d92462cad1bde0c144" translate="yes" xml:space="preserve">
          <source>All source directories identified by &lt;code&gt;-s&lt;/code&gt; and &lt;code&gt;-l&lt;/code&gt; should contain build results of OTP applications.</source>
          <target state="translated">Все исходные каталоги, обозначенные &lt;code&gt;-s&lt;/code&gt; и &lt;code&gt;-l&lt;/code&gt; , должны содержать результаты сборки приложений OTP.</target>
        </trans-unit>
        <trans-unit id="279a723e274bbdf44bf4e5f4cdb64a6e1d7b0708" translate="yes" xml:space="preserve">
          <source>All strongly connected components of the Inter Call Graph. Each component is a set of exported or unused local functions that call each other (in)directly.</source>
          <target state="translated">Все надежно соединенные компоненты графика вызова Inter Call Graph.Каждый компонент представляет собой набор экспортированных или неиспользуемых локальных функций,которые вызывают друг друга (in)напрямую.</target>
        </trans-unit>
        <trans-unit id="ce9911ac68b49180cc63944c113ff7ba4d2e2e06" translate="yes" xml:space="preserve">
          <source>All subexpressions are evaluated before an expression itself is evaluated, unless explicitly stated otherwise. For example, consider the expression:</source>
          <target state="translated">Все подвыражения вычисляются до того,как будет вычислено само выражение,если явно не указано иное.Например,рассмотрим выражение:</target>
        </trans-unit>
        <trans-unit id="bc8cf988787046c6e827bee8905f94b4d9c3ab4c" translate="yes" xml:space="preserve">
          <source>All subroutine calls, recursive or not, are always treated as atomic groups. That is, once a subroutine has matched some of the subject string, it is never re-entered, even if it contains untried alternatives and there is a subsequent matching failure. Any capturing parentheses that are set during the subroutine call revert to their previous values afterwards.</source>
          <target state="translated">Все вызовы подпрограммы,рекурсивные или нет,всегда рассматриваются как атомные группы.То есть,как только подпрограмма соответствует некоторой тематической строке,она никогда не вводится повторно,даже если в ней есть непроверенные альтернативы,и происходит последующий сбой при совпадении.Любые скобки захвата,которые устанавливаются во время вызова подпрограммы,впоследствии возвращаются к своим предыдущим значениям.</target>
        </trans-unit>
        <trans-unit id="1d5c8272d5e19cda4e470b25066c4bee5acf4aba" translate="yes" xml:space="preserve">
          <source>All supported applications are sent in CEA. The user can reject an incoming CER or CEA in a configured callback.</source>
          <target state="translated">Все поддерживаемые заявки отправляются в CEA.Пользователь может отклонить входящий CER или CEA в сконфигурированном обратном вызове.</target>
        </trans-unit>
        <trans-unit id="275f9905a31aea84897da6140c192789acae8be1" translate="yes" xml:space="preserve">
          <source>All system events are subscribed by the &lt;code&gt;Mnesia&lt;/code&gt;&lt;code&gt;gen_event&lt;/code&gt; handler. The default &lt;code&gt;gen_event&lt;/code&gt; handler is &lt;code&gt;mnesia_event&lt;/code&gt;, but it can be changed by using application parameter &lt;code&gt;event_module&lt;/code&gt;. The value of this parameter must be the name of a module implementing a complete handler, as specified by the &lt;code&gt;gen_event&lt;/code&gt; module in &lt;code&gt;STDLIB&lt;/code&gt;.</source>
          <target state="translated">Все системные события подписываются обработчиком &lt;code&gt;Mnesia&lt;/code&gt; &lt;code&gt;gen_event&lt;/code&gt; . По умолчанию &lt;code&gt;gen_event&lt;/code&gt; обработчик &lt;code&gt;mnesia_event&lt;/code&gt; , но оно может быть изменено с помощью параметра приложения &lt;code&gt;event_module&lt;/code&gt; . Значение этого параметра должно быть имя модуля , реализующего полный обработчик, как указано в &lt;code&gt;gen_event&lt;/code&gt; модуля в &lt;code&gt;STDLIB&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4d08314aed5dcca44e10e6d9a69ebf73a80227eb" translate="yes" xml:space="preserve">
          <source>All tables in these MIBs have a column of type &lt;code&gt;StorageType&lt;/code&gt;. The value of this column specifies how each row is stored, and what happens in case of a restart of the agent. The implementation supports the values &lt;code&gt;volatile&lt;/code&gt; and &lt;code&gt;nonVolatile&lt;/code&gt;. When the tables are initially filled with data from the configuration files, these rows will automatically have storage type &lt;code&gt;nonVolatile&lt;/code&gt;. Should the agent restart, all &lt;code&gt;nonVolatile&lt;/code&gt; rows survive the restart, while the &lt;code&gt;volatile&lt;/code&gt; rows are lost. The configuration files are not read at restart, by default.</source>
          <target state="translated">Все таблицы в этих MIB имеют столбец типа &lt;code&gt;StorageType&lt;/code&gt; . Значение этого столбца указывает, как хранится каждая строка и что происходит в случае перезапуска агента. Реализация поддерживает значения &lt;code&gt;volatile&lt;/code&gt; и &lt;code&gt;nonVolatile&lt;/code&gt; . Когда таблицы изначально заполняются данными из файлов конфигурации, эти строки автоматически будут иметь тип хранения &lt;code&gt;nonVolatile&lt;/code&gt; . При перезапуске агента все &lt;code&gt;nonVolatile&lt;/code&gt; строки сохранятся после перезапуска, а &lt;code&gt;volatile&lt;/code&gt; строки будут потеряны. По умолчанию файлы конфигурации не читаются при перезапуске.</target>
        </trans-unit>
        <trans-unit id="2be215003503f0345c1ed6d0ccc3e065ee26074f" translate="yes" xml:space="preserve">
          <source>All tables in this MIB have a column of type &lt;code&gt;StorageType&lt;/code&gt;. The value of the column specifies how each row is stored, and what happens in case of a restart of the agent. The implementation supports the values &lt;code&gt;volatile&lt;/code&gt; and &lt;code&gt;nonVolatile&lt;/code&gt;. When the tables are initially filled with data from the configuration files, these rows will automatically have storage type &lt;code&gt;nonVolatile&lt;/code&gt;. Should the agent restart, all &lt;code&gt;nonVolatile&lt;/code&gt; rows survive the restart, while the &lt;code&gt;volatile&lt;/code&gt; rows are lost. The configuration files are not read at restart, by default.</source>
          <target state="translated">Все таблицы в этой MIB имеют столбец типа &lt;code&gt;StorageType&lt;/code&gt; . Значение столбца указывает, как хранится каждая строка и что происходит в случае перезапуска агента. Реализация поддерживает значения &lt;code&gt;volatile&lt;/code&gt; и &lt;code&gt;nonVolatile&lt;/code&gt; . Когда таблицы изначально заполняются данными из файлов конфигурации, эти строки автоматически будут иметь тип хранения &lt;code&gt;nonVolatile&lt;/code&gt; . При перезапуске агента все &lt;code&gt;nonVolatile&lt;/code&gt; строки сохранятся после перезапуска, а &lt;code&gt;volatile&lt;/code&gt; строки будут потеряны. По умолчанию файлы конфигурации не читаются при перезапуске.</target>
        </trans-unit>
        <trans-unit id="b6acc62d86c3d4707c0eac98a8d2e6fe30ade03d" translate="yes" xml:space="preserve">
          <source>All tables in this MIB have a column of type &lt;code&gt;StorageType&lt;/code&gt;. The value of this column specifies how each row is stored, and what happens in case of a restart of the agent. The implementation supports the values &lt;code&gt;volatile&lt;/code&gt; and &lt;code&gt;nonVolatile&lt;/code&gt;. When the tables are initially filled with data from the configuration files, these rows will automatically have storage type &lt;code&gt;nonVolatile&lt;/code&gt;. Should the agent restart, all &lt;code&gt;nonVolatile&lt;/code&gt; rows survive the restart, while the &lt;code&gt;volatile&lt;/code&gt; rows are lost. The configuration files are not read at restart by default.</source>
          <target state="translated">Все таблицы в этой MIB имеют столбец типа &lt;code&gt;StorageType&lt;/code&gt; . Значение этого столбца указывает, как хранится каждая строка и что происходит в случае перезапуска агента. Реализация поддерживает значения &lt;code&gt;volatile&lt;/code&gt; и &lt;code&gt;nonVolatile&lt;/code&gt; . Когда таблицы изначально заполняются данными из файлов конфигурации, эти строки автоматически будут иметь тип хранения &lt;code&gt;nonVolatile&lt;/code&gt; . При перезапуске агента все &lt;code&gt;nonVolatile&lt;/code&gt; строки сохранятся после перезапуска, а &lt;code&gt;volatile&lt;/code&gt; строки будут потеряны. По умолчанию файлы конфигурации не читаются при перезапуске.</target>
        </trans-unit>
        <trans-unit id="00646ed20fc05656dbed000a1f7dd63af6936be5" translate="yes" xml:space="preserve">
          <source>All tables in this MIB have a column of type &lt;code&gt;StorageType&lt;/code&gt;. The value of this column specifies how each row is stored, and what happens in case of a restart of the agent. The implementation supports the values &lt;code&gt;volatile&lt;/code&gt; and &lt;code&gt;nonVolatile&lt;/code&gt;. When the tables are initially filled with data from the configuration files, these rows will automatically have storage type &lt;code&gt;nonVolatile&lt;/code&gt;. Should the agent restart, all &lt;code&gt;nonVolatile&lt;/code&gt; rows survive the restart, while the &lt;code&gt;volatile&lt;/code&gt; rows are lost. The configuration files are not read at restart, by default.</source>
          <target state="translated">Все таблицы в этой MIB имеют столбец типа &lt;code&gt;StorageType&lt;/code&gt; . Значение этого столбца указывает, как хранится каждая строка и что происходит в случае перезапуска агента. Реализация поддерживает значения &lt;code&gt;volatile&lt;/code&gt; и &lt;code&gt;nonVolatile&lt;/code&gt; . Когда таблицы изначально заполняются данными из файлов конфигурации, эти строки автоматически будут иметь тип хранения &lt;code&gt;nonVolatile&lt;/code&gt; . При перезапуске агента все &lt;code&gt;nonVolatile&lt;/code&gt; строки сохранятся после перезапуска, а &lt;code&gt;volatile&lt;/code&gt; строки будут потеряны. По умолчанию файлы конфигурации не читаются при перезапуске.</target>
        </trans-unit>
        <trans-unit id="1d08c6b8f5332d226fb098f25e3d0026f24d96b0" translate="yes" xml:space="preserve">
          <source>All terminal sessions, forwarded connections, and so on, are channels. Multiple channels are multiplexed into a single connection. All channels are flow-controlled. This means that no data is sent to a channel peer until a message is received to indicate that window space is available. The &lt;strong&gt;initial window size&lt;/strong&gt; specifies how many bytes of channel data that can be sent to the channel peer without adjusting the window. Typically, an SSH client opens a channel, sends data (commands), receives data (control information), and then closes the channel. The &lt;code&gt;&lt;a href=&quot;ssh_client_channel&quot;&gt;ssh_client_channel&lt;/a&gt;&lt;/code&gt; behaviour handles generic parts of SSH channel management. This makes it easy to write your own SSH client/server processes that use flow-control and thus opens for more focus on the application logic.</source>
          <target state="translated">Все терминальные сеансы, перенаправленные соединения и т. Д. Являются каналами. Несколько каналов объединены в одно соединение. Все каналы регулируются потоком. Это означает, что данные не отправляются одноранговому узлу канала до тех пор, пока не будет получено сообщение, указывающее, что пространство окна доступно. В &lt;strong&gt;начальный размер окна&lt;/strong&gt; определяет , сколько байтов данных канала , которые могут быть отправлены на канал пэра без настройки окна. Обычно клиент SSH открывает канал, отправляет данные (команды), получает данные (управляющую информацию), а затем закрывает канал. &lt;code&gt;&lt;a href=&quot;ssh_client_channel&quot;&gt;ssh_client_channel&lt;/a&gt;&lt;/code&gt; поведение обрабатывает общие части канала управления SSH. Это упрощает написание ваших собственных клиент-серверных процессов SSH, использующих управление потоком, и, таким образом, открывает больше внимания для логики приложения.</target>
        </trans-unit>
        <trans-unit id="bbaac04b0726304e8bc0e8488270b15fbabc7eec" translate="yes" xml:space="preserve">
          <source>All terms of type &lt;code&gt;ERL_NIF_TERM&lt;/code&gt; belong to an environment of type &lt;code&gt;&lt;a href=&quot;#ErlNifEnv&quot;&gt;ErlNifEnv&lt;/a&gt;&lt;/code&gt;. The lifetime of a term is controlled by the lifetime of its environment object. All API functions that read or write terms has the environment that the term belongs to as the first function argument.</source>
          <target state="translated">Все термины типа &lt;code&gt;ERL_NIF_TERM&lt;/code&gt; принадлежат среде типа &lt;code&gt;&lt;a href=&quot;#ErlNifEnv&quot;&gt;ErlNifEnv&lt;/a&gt;&lt;/code&gt; . Время жизни термина контролируется временем жизни его объекта среды. Все функции API, которые читают или записывают термины, имеют среду, которой принадлежит термин, в качестве первого аргумента функции.</target>
        </trans-unit>
        <trans-unit id="a9bcc2ff9eb94545ba2264a6548aeeb2cfbc7213" translate="yes" xml:space="preserve">
          <source>All test specification terms can have a &lt;code&gt;NodeRefs&lt;/code&gt; element. This element specifies which node or nodes a configuration operation or a test is to be executed on. &lt;code&gt;NodeRefs&lt;/code&gt; is defined as follows:</source>
          <target state="translated">Все термины спецификации теста могут иметь элемент &lt;code&gt;NodeRefs&lt;/code&gt; . Этот элемент определяет, на каком узле или узлах должна быть выполнена операция конфигурации или тест. &lt;code&gt;NodeRefs&lt;/code&gt; определяется следующим образом:</target>
        </trans-unit>
        <trans-unit id="48735adbc1ab5a93b4785b0a0f4fffaf6f1c2e20" translate="yes" xml:space="preserve">
          <source>All the Latin-1 printable characters can be used and are shown without the escape backslash convention.</source>
          <target state="translated">Все символы латинского алфавита могут быть использованы и показаны без обратного слеша.</target>
        </trans-unit>
        <trans-unit id="c7d4b662d48820ea13cd394713d1d0d65d538449" translate="yes" xml:space="preserve">
          <source>All the files are searched for in the code path. It is assumed that the &lt;code&gt;.app&lt;/code&gt; and &lt;code&gt;.appup&lt;/code&gt; files for an application are located in the same directory.</source>
          <target state="translated">Все файлы ищутся по пути кода. Предполагается, что файлы &lt;code&gt;.app&lt;/code&gt; и &lt;code&gt;.appup&lt;/code&gt; для приложения находятся в одном каталоге.</target>
        </trans-unit>
        <trans-unit id="0444fd0cb5c7b225515f5d7a7b6af2522512c8ad" translate="yes" xml:space="preserve">
          <source>All the makefiles in the entire directory tree use the environment variable &lt;code&gt;ERL_TOP&lt;/code&gt; to find the absolute path of the installation. The &lt;code&gt;configure&lt;/code&gt; script will figure this out and set it in the top level Makefile (which, when building, it will pass on). However, when developing it is sometimes convenient to be able to run make in a subdirectory. To do this you must set the &lt;code&gt;ERL_TOP&lt;/code&gt; variable before you run make.</source>
          <target state="translated">Все make- &lt;code&gt;ERL_TOP&lt;/code&gt; во всем дереве каталогов используют переменную среды ERL_TOP, чтобы найти абсолютный путь к установке. Сценарий &lt;code&gt;configure&lt;/code&gt; определит это и установит его в Makefile верхнего уровня (который при сборке он будет передавать). Однако при разработке иногда бывает удобно запустить make в подкаталоге. Для этого вы должны установить переменную &lt;code&gt;ERL_TOP&lt;/code&gt; перед запуском make.</target>
        </trans-unit>
        <trans-unit id="4e454e4a6b739313895f7f1cd6dd60a39deee0fd" translate="yes" xml:space="preserve">
          <source>All the sequences that define a single character value can be used both inside and outside character classes. Also, inside a character class, \b is interpreted as the backspace character (hex 08).</source>
          <target state="translated">Все последовательности,определяющие односимвольное значение,могут использоваться как внутри,так и вне классов символов.Также внутри символьного класса \b интерпретируется как обратный символ (hex 08).</target>
        </trans-unit>
        <trans-unit id="4ee45dea67a291aecd38cc8ca1fc6c4d76ed45cd" translate="yes" xml:space="preserve">
          <source>All the standard &lt;code&gt;erlc&lt;/code&gt; flags are supported, e.g.</source>
          <target state="translated">&lt;code&gt;erlc&lt;/code&gt; все стандартные флаги erlc , например</target>
        </trans-unit>
        <trans-unit id="7f1c4eba20235be2abd7c818764fb7f15db8c9f6" translate="yes" xml:space="preserve">
          <source>All these approaches have different advantages and disadvantages. Mnesia applications can easily be opened to the SNMP protocol. A direct 1-to-1 mapping can be established between Mnesia tables and SNMP tables. This means that a Mnesia table can be configured to be &lt;strong&gt;both&lt;/strong&gt; a Mnesia table and an SNMP table. A number of functions to control this behavior are described in the Reference Manual.</source>
          <target state="translated">Все эти подходы имеют разные достоинства и недостатки. Приложения Mnesia можно легко открыть по протоколу SNMP. Между таблицами Mnesia и таблицами SNMP может быть установлено прямое соответствие 1: 1. Это означает, что таблица Mnesia может быть сконфигурирована &lt;strong&gt;как&lt;/strong&gt; таблица Mnesia и таблица SNMP. Ряд функций для управления этим поведением описан в Справочном руководстве.</target>
        </trans-unit>
        <trans-unit id="1fac601052f4adfe0b1a57d2c3f3d2911074176e" translate="yes" xml:space="preserve">
          <source>All these files are searched for in the current path. If option &lt;code&gt;{path,[Dir]}&lt;/code&gt; is specified, this path is appended to the current path. Wildcard &lt;code&gt;*&lt;/code&gt; is expanded to all matching directories. Example: &lt;code&gt;&quot;lib/*/ebin&quot;&lt;/code&gt;.</source>
          <target state="translated">Все эти файлы ищутся по текущему пути. Если указан параметр &lt;code&gt;{path,[Dir]}&lt;/code&gt; , этот путь добавляется к текущему пути. Подстановочный знак &lt;code&gt;*&lt;/code&gt; распространяется на все соответствующие каталоги. Пример: &lt;code&gt;&quot;lib/*/ebin&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a7e2356ccbec315a42104120c05856a52f734c98" translate="yes" xml:space="preserve">
          <source>All these specifications are commonly referred to as &quot;SNMPv3&quot;, but it is actually only the Message module, which defines a new message format, and Security module, which takes care of encryption and authentication, that cannot be used with SNMPv1 or SNMPv2c. In this version of the agent toolkit, all the standard MIBs for agent configuration are used. This includes MIBs for definition of management targets for notifications. These MIBs are used regardless of which SNMP version the agent is configured to use.</source>
          <target state="translated">Все эти спецификации обычно называются &quot;SNMPv3&quot;,но на самом деле только модуль Message,который определяет новый формат сообщения,и модуль Security,который заботится о шифровании и аутентификации,не могут использоваться с SNMPv1 или SNMPv2c.В этой версии инструментария агента используются все стандартные MIB для настройки агента.Сюда входят MIB для определения целей управления уведомлениями.Эти MIB используются независимо от того,для какой версии SNMP настроен агент.</target>
        </trans-unit>
        <trans-unit id="3cac96e5ed27b35536f52f9e48ab7dabf6e3dcbc" translate="yes" xml:space="preserve">
          <source>All these terms are tuples or atoms and this property will hold in any future version of &lt;code&gt;gen_statem&lt;/code&gt;.</source>
          <target state="translated">Все эти термины являются кортежами или атомами, и это свойство будет сохраняться в любой будущей версии &lt;code&gt;gen_statem&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="890112740b2f13fe0da0f81f57e7bfd71e15b913" translate="yes" xml:space="preserve">
          <source>All those processes are suspended using &lt;code&gt;sys:suspend&lt;/code&gt;, the new module version is loaded, and then the processes are resumed using &lt;code&gt;sys:resume&lt;/code&gt;.</source>
          <target state="translated">Все эти процессы приостанавливаются с помощью &lt;code&gt;sys:suspend&lt;/code&gt; , загружается новая версия модуля, а затем процессы возобновляются с помощью &lt;code&gt;sys:resume&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cdb00a5ac19881ad68109f99749ac6602091708a" translate="yes" xml:space="preserve">
          <source>All time values in the printout are in milliseconds.</source>
          <target state="translated">Все временные значения в распечатке находятся в миллисекундах.</target>
        </trans-unit>
        <trans-unit id="3664934232b9c1e3d5ba66ce6f23f716a86fdf6f" translate="yes" xml:space="preserve">
          <source>All time-out parameters in &lt;code&gt;ct_ssh&lt;/code&gt; functions are values in milliseconds.</source>
          <target state="translated">Все параметры тайм-аута в &lt;code&gt;ct_ssh&lt;/code&gt; являются значениями в миллисекундах.</target>
        </trans-unit>
        <trans-unit id="73ac2e4652c66f37048e2ce303fb4b7c12c7f46b" translate="yes" xml:space="preserve">
          <source>All trace messages are now sent to the trace port driver, which in turn listens for connections on the TCP/IP port 4711. If we want to see the messages on another node, preferably on another host, we do like this:</source>
          <target state="translated">Теперь все сообщения о трассировке передаются драйверу порта трассировки,который в свою очередь прослушивает соединения на TCP/IP-порте 4711.Если мы хотим видеть сообщения на другом узле,предпочтительно на другом хосте,нам это нравится:</target>
        </trans-unit>
        <trans-unit id="8f71e5171eeb0a212a223f31caa94583b81ed2fb" translate="yes" xml:space="preserve">
          <source>All trace messages described in &lt;code&gt;erlang:trace/3&lt;/code&gt;</source>
          <target state="translated">Все сообщения трассировки описаны в &lt;code&gt;erlang:trace/3&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d3efff8fa8f318980d38111160f5b67cc47267dc" translate="yes" xml:space="preserve">
          <source>All tracepoints are in the domain of &lt;code&gt;org_erlang_dyntrace&lt;/code&gt;</source>
          <target state="translated">Все точки трассировки находятся в домене &lt;code&gt;org_erlang_dyntrace&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="44cb4a9b19b2ae441f7387b7938876140dd1d39f" translate="yes" xml:space="preserve">
          <source>All tracepoints are in the domain of &lt;code&gt;org_erlang_otp&lt;/code&gt;</source>
          <target state="translated">Все точки трассировки находятся в домене &lt;code&gt;org_erlang_otp&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fe016daf62582765dc4aa1a03f24a6e0af233e2a" translate="yes" xml:space="preserve">
          <source>All tracepoints via dyntrace are now visibile and can be listed through &lt;code&gt;lttng list -u&lt;/code&gt;.</source>
          <target state="translated">Все точки трассировки через dyntrace теперь видны и могут быть перечислены через &lt;code&gt;lttng list -u&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="499f82751e8891c03eee132bbb924f122760fc91" translate="yes" xml:space="preserve">
          <source>All uses of &lt;code&gt;erlang:now/0&lt;/code&gt; are not necessarily time warp unsafe. If you do not use it to get time, it is time warp safe. However, &lt;strong&gt;all uses of &lt;code&gt;erlang:now/0&lt;/code&gt; are suboptimal&lt;/strong&gt; from a performance and scalability perspective. So you really want to replace the use of it with other functionality. For examples of how to replace the use of &lt;code&gt;erlang:now/0&lt;/code&gt;, see section &lt;code&gt;&lt;a href=&quot;#Dos_and_Donts&quot;&gt;How to Work with the New API&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Любое использование &lt;code&gt;erlang:now/0&lt;/code&gt; не обязательно небезопасно с деформацией времени. Если вы не используете его, чтобы выиграть время, оно безопасно. Однако &lt;strong&gt;все варианты использования &lt;code&gt;erlang:now/0&lt;/code&gt; неоптимальны&lt;/strong&gt; с точки зрения производительности и масштабируемости. Итак, вы действительно хотите заменить его использование другими функциями. Примеры того, как заменить использование &lt;code&gt;erlang:now/0&lt;/code&gt; , см. В разделе &lt;code&gt;&lt;a href=&quot;#Dos_and_Donts&quot;&gt;How to Work with the New API&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="211631ba4463502ebe4c8f751cdd7698a665a9d5" translate="yes" xml:space="preserve">
          <source>All valid &lt;code&gt;Modifier&lt;/code&gt;s can be combined. Repeated (valid) &lt;code&gt;Modifier&lt;/code&gt;s in the &lt;code&gt;ModifierList&lt;/code&gt; are ignored.</source>
          <target state="translated">Все допустимые &lt;code&gt;Modifier&lt;/code&gt; можно комбинировать. Повторяющиеся (действительные) &lt;code&gt;Modifier&lt;/code&gt; в &lt;code&gt;ModifierList&lt;/code&gt; игнорируются.</target>
        </trans-unit>
        <trans-unit id="b7b522b5a14ce33ffd78ac8c417a27a7fc89b353" translate="yes" xml:space="preserve">
          <source>All value tuples returned, except user terms, have the node name as first element.</source>
          <target state="translated">Все возвращаемые кортежи значений,за исключением пользовательских терминов,имеют имя узла в качестве первого элемента.</target>
        </trans-unit>
        <trans-unit id="21e9bece8ea26173685ff9911582acaf9d4050b7" translate="yes" xml:space="preserve">
          <source>All variables are bound in the head of a match specification, so the translator cannot allow multiple bindings. The special case when matching is done on the top-level makes the variable bind to &lt;code&gt;'$_'&lt;/code&gt; in the resulting match specification. It is to allow a more natural access to the whole matched object. Pseudo function &lt;code&gt;object()&lt;/code&gt; can be used instead, see below.</source>
          <target state="translated">Все переменные связаны в заголовке спецификации соответствия, поэтому переводчик не может разрешить несколько привязок. В особом случае, когда сопоставление выполняется на верхнем уровне, переменная привязывается к &lt;code&gt;'$_'&lt;/code&gt; в результирующей спецификации сопоставления. Это обеспечивает более естественный доступ ко всему согласованному объекту. Вместо этого можно использовать псевдофункцию &lt;code&gt;object()&lt;/code&gt; , см. Ниже.</target>
        </trans-unit>
        <trans-unit id="3239372c6832b6066bf1341e4487441749e323f8" translate="yes" xml:space="preserve">
          <source>All variables in this section can also be used when native compiling.</source>
          <target state="translated">Все переменные в этом разделе также могут быть использованы при родной компиляции.</target>
        </trans-unit>
        <trans-unit id="e461c8c7353cd1b34f013d7ed1f82ff4c3ffca7d" translate="yes" xml:space="preserve">
          <source>All variables that occur in a generator pattern are assumed to be &quot;fresh&quot; variables.</source>
          <target state="translated">Все переменные,встречающиеся в шаблоне генератора,считаются &quot;свежими&quot;.</target>
        </trans-unit>
        <trans-unit id="df218dfee4c4921dcfbc282d5dc989b168d2e1f4" translate="yes" xml:space="preserve">
          <source>All variables that occur in the head of a fun are assumed to be &quot;fresh&quot; variables.</source>
          <target state="translated">Все переменные,которые происходят в голове веселья,считаются &quot;свежими&quot; переменными.</target>
        </trans-unit>
        <trans-unit id="9dca8a39352aeb9ee959a27cda59139e72297719" translate="yes" xml:space="preserve">
          <source>All versions of a release, except the first one, must contain a &lt;code&gt;relup&lt;/code&gt; file.</source>
          <target state="translated">Все версии выпуска, кроме первой, должны содержать файл &lt;code&gt;relup&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1e91b63c830fdded4d39a3a4df9692ba7ad1288f" translate="yes" xml:space="preserve">
          <source>All write operations must be written to persistent storage.</source>
          <target state="translated">Все операции записи должны быть записаны в постоянное хранилище.</target>
        </trans-unit>
        <trans-unit id="156cc2a3256755987835162d54df2b3bc251cdec" translate="yes" xml:space="preserve">
          <source>Allocates a binary of size &lt;code&gt;size&lt;/code&gt; bytes and creates an owning term. The binary data is mutable until the calling NIF returns. This is a quick way to create a new binary without having to use &lt;code&gt;&lt;a href=&quot;#ErlNifBinary&quot;&gt;ErlNifBinary&lt;/a&gt;&lt;/code&gt;. The drawbacks are that the binary cannot be kept between NIF calls and it cannot be reallocated.</source>
          <target state="translated">Выделяет двоичный файл &lt;code&gt;size&lt;/code&gt; байты и создает термин владения. Двоичные данные являются изменяемыми, пока не вернется вызывающий NIF. Это быстрый способ создать новый двоичный файл без использования &lt;code&gt;&lt;a href=&quot;#ErlNifBinary&quot;&gt;ErlNifBinary&lt;/a&gt;&lt;/code&gt; . Недостатки в том, что двоичный файл не может храниться между вызовами NIF и не может быть перераспределен.</target>
        </trans-unit>
        <trans-unit id="fb968cb7c5633735b69c8c6ae48cba56207bf43d" translate="yes" xml:space="preserve">
          <source>Allocates a driver binary with a memory block of at least &lt;code&gt;size&lt;/code&gt; bytes, and returns a pointer to it, or &lt;code&gt;NULL&lt;/code&gt; on failure (out of memory). When a driver binary has been sent to the emulator, it must not be changed. Every allocated binary is to be freed by a corresponding call to &lt;code&gt;&lt;a href=&quot;#driver_free_binary&quot;&gt;driver_free_binary&lt;/a&gt;&lt;/code&gt; (unless otherwise stated).</source>
          <target state="translated">Распределяет двоичный драйвер с блоком памяти , по меньшей мере , &lt;code&gt;size&lt;/code&gt; байт, и возвращает указатель на него, или &lt;code&gt;NULL&lt;/code&gt; , в случае неудачи (из памяти). Когда двоичный файл драйвера был отправлен в эмулятор, его нельзя изменять. Каждый выделенный двоичный файл должен быть освобожден соответствующим вызовом &lt;code&gt;&lt;a href=&quot;#driver_free_binary&quot;&gt;driver_free_binary&lt;/a&gt;&lt;/code&gt; (если не указано иное).</target>
        </trans-unit>
        <trans-unit id="833eb9c3ea4fa101cb31390f1caf6a0a0d2db0c7" translate="yes" xml:space="preserve">
          <source>Allocates a memory block of the size specified in &lt;code&gt;size&lt;/code&gt;, and returns it. This fails only on out of memory, in which case &lt;code&gt;NULL&lt;/code&gt; is returned. (This is most often a wrapper for &lt;code&gt;malloc&lt;/code&gt;).</source>
          <target state="translated">Выделяет блок памяти указанного &lt;code&gt;size&lt;/code&gt; и возвращает его. Это не удается только при нехватке памяти, и в этом случае возвращается &lt;code&gt;NULL&lt;/code&gt; . (Чаще всего это обертка для &lt;code&gt;malloc&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="7113d00f84f8c1774bce3cf42e016073857670b7" translate="yes" xml:space="preserve">
          <source>Allocates a memory-managed resource object of type &lt;code&gt;type&lt;/code&gt; and size &lt;code&gt;size&lt;/code&gt; bytes.</source>
          <target state="translated">Выделяет управляемый памятью объект ресурса типа &lt;code&gt;type&lt;/code&gt; и size &lt;code&gt;size&lt;/code&gt; в байтах.</target>
        </trans-unit>
        <trans-unit id="40cbb022971bb0ea9616862fa9f96313f80c2ace" translate="yes" xml:space="preserve">
          <source>Allocates a new &lt;code&gt;ei_x_buff&lt;/code&gt; buffer. The fields of the structure pointed to by parameter &lt;code&gt;x&lt;/code&gt; is filled in, and a default buffer is allocated. &lt;code&gt;ei_x_new_with_version()&lt;/code&gt; also puts an initial version byte, which is used in the binary format (so that &lt;code&gt;ei_x_encode_version()&lt;/code&gt; will not be needed.)</source>
          <target state="translated">&lt;code&gt;ei_x_buff&lt;/code&gt; новый буфер ei_x_buff . Поля структуры, на которую указывает параметр &lt;code&gt;x&lt;/code&gt; , заполняются, и выделяется буфер по умолчанию. &lt;code&gt;ei_x_new_with_version()&lt;/code&gt; также помещает байт начальной версии, который используется в двоичном формате (так что &lt;code&gt;ei_x_encode_version()&lt;/code&gt; не понадобится.)</target>
        </trans-unit>
        <trans-unit id="aba86698e833f8743e3f8398d4c7b3c5cba11222" translate="yes" xml:space="preserve">
          <source>Allocates a new binary of size &lt;code&gt;size&lt;/code&gt; bytes. Initializes the structure pointed to by &lt;code&gt;bin&lt;/code&gt; to refer to the allocated binary. The binary must either be released by &lt;code&gt;&lt;a href=&quot;#enif_release_binary&quot;&gt;enif_release_binary&lt;/a&gt;&lt;/code&gt; or ownership transferred to an Erlang term with &lt;code&gt;&lt;a href=&quot;#enif_make_binary&quot;&gt;enif_make_binary&lt;/a&gt;&lt;/code&gt;. An allocated (and owned) &lt;code&gt;ErlNifBinary&lt;/code&gt; can be kept between NIF calls.</source>
          <target state="translated">Выделяет новый двоичный файл &lt;code&gt;size&lt;/code&gt; байты. Инициализирует структуру, на которую указывает &lt;code&gt;bin&lt;/code&gt; , для ссылки на выделенный двоичный файл. Двоичный файл должен быть либо выпущен &lt;code&gt;&lt;a href=&quot;#enif_release_binary&quot;&gt;enif_release_binary&lt;/a&gt;&lt;/code&gt; , либо право собственности передано термину Erlang с помощью &lt;code&gt;&lt;a href=&quot;#enif_make_binary&quot;&gt;enif_make_binary&lt;/a&gt;&lt;/code&gt; . &lt;code&gt;ErlNifBinary&lt;/code&gt; (и принадлежащий) ErlNifBinary может храниться между вызовами NIF.</target>
        </trans-unit>
        <trans-unit id="7773bdff2c5401e19b3fa0521031da780795237d" translate="yes" xml:space="preserve">
          <source>Allocates a new binary with &lt;code&gt;&lt;a href=&quot;#enif_alloc_binary&quot;&gt;enif_alloc_binary&lt;/a&gt;&lt;/code&gt; and stores the result of encoding &lt;code&gt;term&lt;/code&gt; according to the Erlang external term format.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#enif_alloc_binary&quot;&gt;enif_alloc_binary&lt;/a&gt;&lt;/code&gt; новый двоичный файл с помощью enif_alloc_binary и сохраняет результат кодирования &lt;code&gt;term&lt;/code&gt; соответствии с форматом внешнего термина Erlang.</target>
        </trans-unit>
        <trans-unit id="7d5526a3227cb0d073e447c7c317d1cd47b6a7bb" translate="yes" xml:space="preserve">
          <source>Allocates a new process-independent environment. The environment can be used to hold terms that are not bound to any process. Such terms can later be copied to a process environment with &lt;code&gt;&lt;a href=&quot;#enif_make_copy&quot;&gt;enif_make_copy&lt;/a&gt;&lt;/code&gt; or be sent to a process as a message with &lt;code&gt;&lt;a href=&quot;#enif_send&quot;&gt;enif_send&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Выделяет новую среду, не зависящую от процесса. Среда может использоваться для хранения терминов, не связанных с каким-либо процессом. Позднее такие термины можно скопировать в среду процесса с помощью &lt;code&gt;&lt;a href=&quot;#enif_make_copy&quot;&gt;enif_make_copy&lt;/a&gt;&lt;/code&gt; или отправить процессу в виде сообщения с помощью &lt;code&gt;&lt;a href=&quot;#enif_send&quot;&gt;enif_send&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ef1154674774259204ce883b3c8820bd4b8d7df0" translate="yes" xml:space="preserve">
          <source>Allocates an &lt;code&gt;(ETERM)&lt;/code&gt; structure.</source>
          <target state="translated">Выделяет &lt;code&gt;(ETERM)&lt;/code&gt; структуры.</target>
        </trans-unit>
        <trans-unit id="24619459ec0a72f9cf9f4e797e9676fdd79c448d" translate="yes" xml:space="preserve">
          <source>Allocates and initializes a thread option structure.</source>
          <target state="translated">Распределяет и инициализирует структуру опций потока.</target>
        </trans-unit>
        <trans-unit id="a18ef353480e9b28111af2f5cb94cf322d5db150" translate="yes" xml:space="preserve">
          <source>Allocates memory of &lt;code&gt;size&lt;/code&gt; bytes.</source>
          <target state="translated">Выделяет память &lt;code&gt;size&lt;/code&gt; байты.</target>
        </trans-unit>
        <trans-unit id="6d3c5411f35ce9d979ab943b82f49536b0b3d755" translate="yes" xml:space="preserve">
          <source>Allocation strategy. The following strategies are valid:</source>
          <target state="translated">Стратегия распределения.Действительны следующие стратегии:</target>
        </trans-unit>
        <trans-unit id="90fca3fd6d65264d4e4e5dc53f3e23f12741c724" translate="yes" xml:space="preserve">
          <source>Allocator used by the &lt;code&gt;HiPE&lt;/code&gt; application for native executable code.</source>
          <target state="translated">Распределитель, используемый приложением &lt;code&gt;HiPE&lt;/code&gt; для собственного исполняемого кода.</target>
        </trans-unit>
        <trans-unit id="e5156ecc9d7848780f93b6f5ebc71cee114aba96" translate="yes" xml:space="preserve">
          <source>Allocator used for &lt;code&gt;ets&lt;/code&gt; data.</source>
          <target state="translated">Распределитель, используемый для данных &lt;code&gt;ets&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="efc1c3dea60e348865091b6b8e2060dd569f66c2" translate="yes" xml:space="preserve">
          <source>Allocator used for Erlang binary data.</source>
          <target state="translated">Распределитель,используемый для двоичных данных Эрланга.</target>
        </trans-unit>
        <trans-unit id="7a3adf2a9bd06e8c3a3e083ec99105ea6ffe70ec" translate="yes" xml:space="preserve">
          <source>Allocator used for Erlang heap data, such as Erlang process heaps.</source>
          <target state="translated">Распределитель,используемый для данных кучи Эрланга,таких как кучи процесса Эрланга.</target>
        </trans-unit>
        <trans-unit id="8e85fcae342a51464bc8fd23b308ac874d7d0a04" translate="yes" xml:space="preserve">
          <source>Allocator used for constant terms in Erlang code.</source>
          <target state="translated">Распределитель,используемый для константных терминов в коде Erlang.</target>
        </trans-unit>
        <trans-unit id="e1d6940ddd5a1c15fef14e15f5f4c63526b4e648" translate="yes" xml:space="preserve">
          <source>Allocator used for driver data.</source>
          <target state="translated">Распределитель,используемый для данных драйвера.</target>
        </trans-unit>
        <trans-unit id="3ea76fff61ed65e7a4390d7beabc10d7b1f5293b" translate="yes" xml:space="preserve">
          <source>Allocator used for memory blocks that are expected to be long-lived, for example, Erlang code.</source>
          <target state="translated">Аллокатор используется для блоков памяти,которые,как ожидается,будут долгоживущими,например,код Erlang.</target>
        </trans-unit>
        <trans-unit id="a3b32174d0cb257a1aff46d5fa0ab778500a96d6" translate="yes" xml:space="preserve">
          <source>Allocator used for memory blocks that are expected to be short-lived.</source>
          <target state="translated">Распределитель используется для блоков памяти,которые,как ожидается,будут недолговечными.</target>
        </trans-unit>
        <trans-unit id="d37461cad7f410e82c9bcd356e966dab124d9b70" translate="yes" xml:space="preserve">
          <source>Allocator used for most memory blocks not allocated through any of the other allocators described above.</source>
          <target state="translated">Аллокатор,используемый для большинства блоков памяти,не выделенных ни одним из описанных выше аллокаторов.</target>
        </trans-unit>
        <trans-unit id="e693dfe3e7d7c8a81002580ac04e0ce504a69571" translate="yes" xml:space="preserve">
          <source>Allocator used for temporary allocations.</source>
          <target state="translated">Распределитель,используемый для временных распределений.</target>
        </trans-unit>
        <trans-unit id="10f9e4423c6925e89dc2106becb3f6ab79d98e45" translate="yes" xml:space="preserve">
          <source>Allow &lt;code&gt;sys_alloc&lt;/code&gt; carriers. Defaults to &lt;code&gt;true&lt;/code&gt;. If set to &lt;code&gt;false&lt;/code&gt;, &lt;code&gt;sys_alloc&lt;/code&gt; carriers are never created by allocators using the &lt;code&gt;alloc_util&lt;/code&gt; framework.</source>
          <target state="translated">Разрешить носителей &lt;code&gt;sys_alloc&lt;/code&gt; . По умолчанию &lt;code&gt;true&lt;/code&gt; . Если установлено значение &lt;code&gt;false&lt;/code&gt; , носители &lt;code&gt;sys_alloc&lt;/code&gt; никогда не создаются распределителями, использующими структуру &lt;code&gt;alloc_util&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eff7134dcdaeb2b5c83d79ef04547c8d9cc7e16d" translate="yes" xml:space="preserve">
          <source>Allow Erlang code to supply annotations.</source>
          <target state="translated">Разрешите Erlang-коду поставлять аннотации.</target>
        </trans-unit>
        <trans-unit id="2367e7a84c9f7bf24def174981a401bf837d2c24" translate="yes" xml:space="preserve">
          <source>Allowed in guard tests if &lt;code&gt;RecordTag&lt;/code&gt; is a literal atom and &lt;code&gt;Size&lt;/code&gt; is a literal integer.</source>
          <target state="translated">Допускается в защитных тестах, если &lt;code&gt;RecordTag&lt;/code&gt; - буквальный атом, а &lt;code&gt;Size&lt;/code&gt; - буквальное целое число.</target>
        </trans-unit>
        <trans-unit id="501b2ae74253f22d1b49c8d28118aa90b6840545" translate="yes" xml:space="preserve">
          <source>Allowed in guard tests, if &lt;code&gt;RecordTag&lt;/code&gt; is a literal atom.</source>
          <target state="translated">Допускается в сторожевых тестах, если &lt;code&gt;RecordTag&lt;/code&gt; - буквальный атом.</target>
        </trans-unit>
        <trans-unit id="bc41d2a47a402c530d62da0bb42913ffb6baf173" translate="yes" xml:space="preserve">
          <source>Allowed in guard tests.</source>
          <target state="translated">Допускается в тесты на охрану.</target>
        </trans-unit>
        <trans-unit id="36ba60d3da32240e2b1d7c2743d638c321c3a258" translate="yes" xml:space="preserve">
          <source>Allowed values for &lt;code&gt;Encoding&lt;/code&gt;:</source>
          <target state="translated">Допустимые значения для &lt;code&gt;Encoding&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="99a20c43f2025ca6e009397d28af92a72d22a63a" translate="yes" xml:space="preserve">
          <source>Allows &lt;code&gt;&lt;a href=&quot;#cycle&quot;&gt;cycles&lt;/a&gt;&lt;/code&gt; in the digraph (default).</source>
          <target state="translated">Разрешает &lt;code&gt;&lt;a href=&quot;#cycle&quot;&gt;cycles&lt;/a&gt;&lt;/code&gt; в орграфе (по умолчанию).</target>
        </trans-unit>
        <trans-unit id="9f8f1bb0255618251aa9f45e2eb49f1f0585198d" translate="yes" xml:space="preserve">
          <source>Allows Igor to work as a component of the Erlang compiler. Including the term &lt;code&gt;{parse_transform, igor}&lt;/code&gt; in the compile options when compiling an Erlang module (cf. &lt;code&gt;compile:file/2&lt;/code&gt;), will call upon Igor to process the source code, allowing automatic inclusion of other source files. No files are created or overwritten when this function is used.</source>
          <target state="translated">Позволяет Игорю работать как компонент компилятора Erlang. Включение термина &lt;code&gt;{parse_transform, igor}&lt;/code&gt; в параметры компиляции при компиляции модуля Erlang (см. &lt;code&gt;compile:file/2&lt;/code&gt; ) вызовет у Игоря обработку исходного кода, что позволит автоматически включать другие исходные файлы. При использовании этой функции файлы не создаются и не перезаписываются.</target>
        </trans-unit>
        <trans-unit id="d62f1a06265052c97727445916da061a31b46c03" translate="yes" xml:space="preserve">
          <source>Allows an Erlang process to access any currently opened file descriptors used by Erlang. The file descriptor &lt;code&gt;In&lt;/code&gt; can be used for standard input, and the file descriptor &lt;code&gt;Out&lt;/code&gt; for standard output. It is only used for various servers in the Erlang OS (&lt;code&gt;shell&lt;/code&gt; and &lt;code&gt;user&lt;/code&gt;). Hence, its use is limited.</source>
          <target state="translated">Позволяет процессу Erlang получить доступ к любым открытым в данный момент файловым дескрипторам, используемым Erlang. Файловый дескриптор &lt;code&gt;In&lt;/code&gt; может использоваться для стандартного ввода, а файловый дескриптор &lt;code&gt;Out&lt;/code&gt; - для стандартного вывода. Он используется только для различных серверов в ОС Erlang ( &lt;code&gt;shell&lt;/code&gt; и &lt;code&gt;user&lt;/code&gt; ). Следовательно, его использование ограничено.</target>
        </trans-unit>
        <trans-unit id="720d85d8bcd2b0982465cd89217c4403945af062" translate="yes" xml:space="preserve">
          <source>Allows an existing file-descriptor to be used (passed on to the transport protocol).</source>
          <target state="translated">Позволяет использовать существующий файл-дизайнер (передается в транспортный протокол).</target>
        </trans-unit>
        <trans-unit id="5a7d300ab2bf430dd90e7faf7d031bdea72764be" translate="yes" xml:space="preserve">
          <source>Allows compilers built on top of &lt;code&gt;compile&lt;/code&gt; to attach extra compilation metadata to the &lt;code&gt;compile_info&lt;/code&gt; chunk in the generated beam file.</source>
          <target state="translated">Позволяет компиляторам, созданным поверх &lt;code&gt;compile&lt;/code&gt; присоединять дополнительные метаданные компиляции к &lt;code&gt;compile_info&lt;/code&gt; в сгенерированном файле луча.</target>
        </trans-unit>
        <trans-unit id="e2d9ebd39621d33904a794e05cf3bb97eb76cd7e" translate="yes" xml:space="preserve">
          <source>Allows faster access to a file, as no Erlang process is needed to handle the file. However, a file opened in this way has the following limitations:</source>
          <target state="translated">Позволяет быстрее получить доступ к файлу,так как для работы с ним не требуется процесс Erlang.Однако файл,открытый таким образом,имеет следующие ограничения:</target>
        </trans-unit>
        <trans-unit id="11d38a6520a61a4489f42b5d87122e227d5717f7" translate="yes" xml:space="preserve">
          <source>Allows or disallows local reuse of port numbers. By default, reuse is disallowed.</source>
          <target state="translated">Позволяет или запрещает локальное повторное использование номеров портов.По умолчанию повторное использование запрещено.</target>
        </trans-unit>
        <trans-unit id="ffa1d032886c439e4bec827547cfb0410648a8e3" translate="yes" xml:space="preserve">
          <source>Allows specification of the directory to fetch the data to. If the directory already exists, an error is thrown.</source>
          <target state="translated">Позволяет специфицировать каталог для получения данных.Если каталог уже существует,то выдается ошибка.</target>
        </trans-unit>
        <trans-unit id="cb4fe77b0bd1f96cbd1b0f77fd621a2567c4e7b4" translate="yes" xml:space="preserve">
          <source>Allows to enable overload checking on the nodes under trace. &lt;code&gt;Module:Function(check)&lt;/code&gt; is performed each &lt;code&gt;MSec&lt;/code&gt; millisecond. If the check returns &lt;code&gt;true&lt;/code&gt;, the tracing is disabled on a specified node.</source>
          <target state="translated">Позволяет включить проверку перегрузки на отслеживаемых узлах. &lt;code&gt;Module:Function(check)&lt;/code&gt; выполняется каждую миллисекунду &lt;code&gt;MSec&lt;/code&gt; . Если проверка вернула &lt;code&gt;true&lt;/code&gt; , трассировка на указанном узле отключена.</target>
        </trans-unit>
        <trans-unit id="4d34cd5d35400761bb61a8de2c3b8cac8b75f88f" translate="yes" xml:space="preserve">
          <source>Allows to specify DTD name when it isn't available in the XML document. This option has effect only together with &lt;code&gt;{validation,'dtd'&lt;/code&gt; option.</source>
          <target state="translated">Позволяет указать имя DTD, если оно недоступно в XML-документе. Эта опция действует только вместе с опцией &lt;code&gt;{validation,'dtd'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="47912c360e75c64559b07b272500ccc88ac1869a" translate="yes" xml:space="preserve">
          <source>Allows to specify the order of preference for named curves and to restrict their usage when using a cipher suite supporting them.</source>
          <target state="translated">Позволяет указать порядок предпочтений именованных кривых и ограничить их использование при использовании поддерживающего их набора шифров.</target>
        </trans-unit>
        <trans-unit id="f489a56c04187aff8cb1e8fd899369509580cc57" translate="yes" xml:space="preserve">
          <source>Allows user-specific terms in a test specification (described later).</source>
          <target state="translated">Позволяет использовать специфические для пользователя термины в спецификации испытания (описано ниже).</target>
        </trans-unit>
        <trans-unit id="a041c6fe34c8772f10490994f72eedc84ac17b8e" translate="yes" xml:space="preserve">
          <source>Allows you to disable chunked transfer-encoding when sending a response to an HTTP/1.1 client. Default is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Позволяет отключить фрагментированное кодирование передачи при отправке ответа клиенту HTTP / 1.1. По умолчанию - &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2f7dfd6f2f9e5a386b1eb293fb8cbfe622a3386d" translate="yes" xml:space="preserve">
          <source>Almost all functionality available in the &lt;code&gt;et_viewer&lt;/code&gt; is also available via shortcuts. Which key that has the same effect as selecting a menu entry is shown enclosed in parentheses. For example pressing the key &lt;code&gt;r&lt;/code&gt; is equivalent to selecting the menu entry &lt;code&gt;Viewer-&amp;gt;Refresh&lt;/code&gt;.</source>
          <target state="translated">Почти все функции, доступные в &lt;code&gt;et_viewer&lt;/code&gt; , также доступны через ярлыки. Клавиша, имеющая такой же эффект, как выбор пункта меню, показана в круглых скобках. Например, нажатие клавиши &lt;code&gt;r&lt;/code&gt; эквивалентно выбору пункта меню &lt;code&gt;Viewer-&amp;gt;Refresh&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d5ddea236d72017f9bb6251d4cd4ca6ee8c89d93" translate="yes" xml:space="preserve">
          <source>Almost all server functionality has been implemented using an especially crafted server API, which is described in the Erlang Web Server API. This API can be used to enhance the core server functionality, for example with custom logging and authentication.</source>
          <target state="translated">Практически вся функциональность сервера была реализована с использованием специально созданного API сервера,который описан в API веб-сервера Erlang.Этот API можно использовать для расширения функциональности ядра сервера,например,с помощью пользовательской регистрации и аутентификации.</target>
        </trans-unit>
        <trans-unit id="e164535afa87d85e1d8e4d869a83d45ecdea2bd2" translate="yes" xml:space="preserve">
          <source>Alpha converts a pattern (renames variables). Similar to tsubst/1, but only renames variables (including globs).</source>
          <target state="translated">Альфа преобразует шаблон (переименовывает переменные).Аналогично tsubst/1,но только переименовывает переменные (включая глобусы).</target>
        </trans-unit>
        <trans-unit id="94e6d313a320186aef8a05e769cde9d6aee31ec8" translate="yes" xml:space="preserve">
          <source>Also a simulation of a busy server. Inserts a delay before a reply is sent.</source>
          <target state="translated">Также симуляция занятого сервера.Вставляет задержку перед отправкой ответа.</target>
        </trans-unit>
        <trans-unit id="c107930bfba767a92d8fada4aaa539db162143a4" translate="yes" xml:space="preserve">
          <source>Also environment variable operations used to accept names and values of environment variables containing null characters (integer value zero). This caused operations to silently produce erroneous results. Environment variable names and values containing null characters inside the name or value are now &lt;strong&gt;rejected&lt;/strong&gt; and will cause environment variable operations to fail.</source>
          <target state="translated">Также операции с переменными среды используются для приема имен и значений переменных среды, содержащих нулевые символы (целочисленное значение ноль). Это заставляло операции автоматически выдавать ошибочные результаты. Имена и значения переменных среды, содержащие пустые символы внутри имени или значения, теперь &lt;strong&gt;отклоняются,&lt;/strong&gt; что приведет к сбою операций с переменными среды.</target>
        </trans-unit>
        <trans-unit id="d9b60222b2c75f1c86ff987c34e09f8cde41625a" translate="yes" xml:space="preserve">
          <source>Also for convenience, record notation is allowed to be used. Records are shorthands for the corresponding tuples:</source>
          <target state="translated">Также для удобства разрешено использовать записывающую запись.Записи-это сокращения для соответствующих кортежей:</target>
        </trans-unit>
        <trans-unit id="a3a4b07a56cad329b79384243949038cbc1372cd" translate="yes" xml:space="preserve">
          <source>Also note that Erlang records will be renamed as necessary to avoid non-equivalent definitions using the same record name. This does not work if the source code accesses the name field of such record tuples by &lt;code&gt;element/2&lt;/code&gt; or similar methods. Always use the record syntax to handle record tuples, if possible.</source>
          <target state="translated">Также обратите внимание, что записи Erlang будут переименованы по мере необходимости, чтобы избежать неэквивалентных определений, использующих то же имя записи. Это не работает, если исходный код обращается к полю имени таких кортежей записей с помощью &lt;code&gt;element/2&lt;/code&gt; или аналогичных методов. По возможности всегда используйте синтаксис записи для обработки кортежей записей.</target>
        </trans-unit>
        <trans-unit id="7ac5f975913185a02359637f04ddfbdfbcd994b3" translate="yes" xml:space="preserve">
          <source>Also note that there are some shell features like history list (control-p and control-n), in line editing (Emacs key bindings) and module and function name completion (tab) if the module is loaded.</source>
          <target state="translated">Также обратите внимание на некоторые возможности оболочки,такие как список истории (control-p и controll-n),линейное редактирование (привязки клавиш Emacs)и завершение имени модуля и функции (табуляция),если модуль загружен.</target>
        </trans-unit>
        <trans-unit id="8a063b92ca8f32cb5670e7484a2f6224c06de2e7" translate="yes" xml:space="preserve">
          <source>Also note when upgrading a &lt;code&gt;gen_statem&lt;/code&gt;, this function and hence the &lt;code&gt;Change={advanced,Extra}&lt;/code&gt; parameter in the &lt;code&gt;appup&lt;/code&gt; file is not only needed to update the internal state or to act on the &lt;code&gt;Extra&lt;/code&gt; argument. It is also needed if an upgrade or downgrade should change &lt;code&gt;&lt;a href=&quot;#type-callback_mode&quot;&gt;&lt;strong&gt;callback mode&lt;/strong&gt;&lt;/a&gt;&lt;/code&gt;, or else the callback mode after the code change will not be honoured, most probably causing a server crash.</source>
          <target state="translated">Также обратите внимание, что при обновлении &lt;code&gt;gen_statem&lt;/code&gt; эта функция и, следовательно, параметр &lt;code&gt;Change={advanced,Extra}&lt;/code&gt; в файле &lt;code&gt;appup&lt;/code&gt; необходимы не только для обновления внутреннего состояния или для воздействия на аргумент &lt;code&gt;Extra&lt;/code&gt; . Это также необходимо, если при обновлении или понижении версии следует изменить &lt;code&gt;&lt;a href=&quot;#type-callback_mode&quot;&gt;&lt;strong&gt;callback mode&lt;/strong&gt;&lt;/a&gt;&lt;/code&gt; , иначе режим обратного вызова после изменения кода не будет соблюдаться, что, скорее всего, приведет к сбою сервера.</target>
        </trans-unit>
        <trans-unit id="b03a08b970bd32744c558ee650c59b74bf3ec43b" translate="yes" xml:space="preserve">
          <source>Also try the &lt;code&gt;&lt;a href=&quot;erl_tidy&quot;&gt;erl_tidy&lt;/a&gt;&lt;/code&gt; module, as follows:</source>
          <target state="translated">Также попробуйте модуль &lt;code&gt;&lt;a href=&quot;erl_tidy&quot;&gt;erl_tidy&lt;/a&gt;&lt;/code&gt; , как показано ниже:</target>
        </trans-unit>
        <trans-unit id="c49a065dda16af9230d583d9a156ea20f71a1f7b" translate="yes" xml:space="preserve">
          <source>Also, &lt;code&gt;errno&lt;/code&gt; values from &lt;code&gt;socket&lt;/code&gt;&lt;strong&gt;(2)&lt;/strong&gt; and &lt;code&gt;connect&lt;/code&gt;&lt;strong&gt;(2)&lt;/strong&gt; system calls can be propagated into &lt;code&gt;erl_errno&lt;/code&gt;.</source>
          <target state="translated">Кроме того, значения &lt;code&gt;errno&lt;/code&gt; из системных вызовов &lt;code&gt;socket&lt;/code&gt; &lt;strong&gt;(2)&lt;/strong&gt; и &lt;code&gt;connect&lt;/code&gt; &lt;strong&gt;(2)&lt;/strong&gt; могут быть &lt;code&gt;erl_errno&lt;/code&gt; в erl_errno .</target>
        </trans-unit>
        <trans-unit id="0950deda4048dd3e61bbd230b1ca6f75c0083a70" translate="yes" xml:space="preserve">
          <source>Also, &lt;code&gt;errno&lt;/code&gt; values from &lt;code&gt;socket&lt;/code&gt;&lt;strong&gt;(2)&lt;/strong&gt; and &lt;code&gt;connect&lt;/code&gt;&lt;strong&gt;(2)&lt;/strong&gt; system calls may be propagated into &lt;code&gt;erl_errno&lt;/code&gt;.</source>
          <target state="translated">Кроме того, значения &lt;code&gt;errno&lt;/code&gt; из системных вызовов &lt;code&gt;socket&lt;/code&gt; &lt;strong&gt;(2)&lt;/strong&gt; и &lt;code&gt;connect&lt;/code&gt; &lt;strong&gt;(2)&lt;/strong&gt; могут быть &lt;code&gt;erl_errno&lt;/code&gt; в erl_errno .</target>
        </trans-unit>
        <trans-unit id="89386e204a09fa8d2107f970fae5575cde96ce99" translate="yes" xml:space="preserve">
          <source>Also, a read-only traversal of the source backup can be performed without updating a target backup. If &lt;code&gt;TargetMod==read_only&lt;/code&gt;, no target backup is accessed.</source>
          <target state="translated">Кроме того, просмотр исходной резервной копии только для чтения может выполняться без обновления целевой резервной копии. Если &lt;code&gt;TargetMod==read_only&lt;/code&gt; , доступ к целевой резервной копии не осуществляется.</target>
        </trans-unit>
        <trans-unit id="35a2ab2594479e34bf702bdcbfc2a6ff056e0ee5" translate="yes" xml:space="preserve">
          <source>Also, a time-out of five seconds has been introduced in the &lt;code&gt;await_result&lt;/code&gt; function. That is, if the server does not reply within five seconds (5000 ms), the client terminates. This is only needed in the logon sequence before the client and the server are linked.</source>
          <target state="translated">Кроме того, в функции &lt;code&gt;await_result&lt;/code&gt; был введен тайм-аут в пять секунд . То есть, если сервер не отвечает в течение пяти секунд (5000 мс), клиент завершает работу. Это необходимо только в последовательности входа в систему перед установлением связи между клиентом и сервером.</target>
        </trans-unit>
        <trans-unit id="fbe49c130871a8ea81b48a336d4846f52b1db188" translate="yes" xml:space="preserve">
          <source>Also, aim for testing everything once, no less, no more. It is not effective having every test case fail only because one function in the interface changed.</source>
          <target state="translated">Кроме того,постарайтесь протестировать все один раз,не меньше,не больше.Неэффективно,когда каждый тестовый случай заканчивается неудачей только потому,что одна функция в интерфейсе изменилась.</target>
        </trans-unit>
        <trans-unit id="38092a15de7c4da112bf97ddb70a794cc7c246e0" translate="yes" xml:space="preserve">
          <source>Also, because of fragmentation and prereservation of memory areas, the size of the memory segments containing the dynamically allocated memory blocks can be much larger than the total size of the dynamically allocated memory blocks.</source>
          <target state="translated">Кроме того,из-за фрагментации и предварительного сохранения областей памяти,размер сегментов памяти,содержащих динамически выделяемые блоки памяти,может быть значительно больше,чем общий размер динамически выделяемых блоков памяти.</target>
        </trans-unit>
        <trans-unit id="d5b32fcc26a6a8b9a2395401bc02ead29333f9bb" translate="yes" xml:space="preserve">
          <source>Also, different activity access contexts can be mixed while nesting. However, the dirty ones (&lt;code&gt;async_dirty&lt;/code&gt;, &lt;code&gt;sync_dirty&lt;/code&gt;, and &lt;code&gt;ets&lt;/code&gt;) inherit the transaction semantics if they are called inside a transaction and thus grab locks and use two or three phase commit.</source>
          <target state="translated">Кроме того, во время вложения могут использоваться разные контексты доступа к действиям. Однако грязные ( &lt;code&gt;async_dirty&lt;/code&gt; , &lt;code&gt;sync_dirty&lt;/code&gt; и &lt;code&gt;ets&lt;/code&gt; ) наследуют семантику транзакции, если они вызываются внутри транзакции, и, таким образом, захватывают блокировки и используют двух- или трехфазную фиксацию.</target>
        </trans-unit>
        <trans-unit id="823028d8a3ebcfad8bc2f54c9ca2e8fbebc07b0d" translate="yes" xml:space="preserve">
          <source>Also, for documentation purposes, argument names can be given:</source>
          <target state="translated">Кроме того,в целях документирования могут быть даны имена аргументов:</target>
        </trans-unit>
        <trans-unit id="d5a32ab36ee173194b5ab198d8e878626de325e7" translate="yes" xml:space="preserve">
          <source>Also, if &lt;code&gt;encoding&lt;/code&gt; is set to something else than &lt;code&gt;latin1&lt;/code&gt;, the &lt;code&gt;read/3&lt;/code&gt; call fails if the data contains characters larger than 255, which is why module &lt;code&gt;io(3)&lt;/code&gt; is to be preferred when reading such a file.</source>
          <target state="translated">Кроме того, если для &lt;code&gt;encoding&lt;/code&gt; установлено значение, &lt;code&gt;latin1&lt;/code&gt; от latin1 , вызов &lt;code&gt;read/3&lt;/code&gt; завершится ошибкой, если данные содержат символы больше 255, поэтому при чтении такого файла предпочтительнее использовать модуль &lt;code&gt;io(3)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="425722573d70397b1c7d94c9000e50ce9ddd142d" translate="yes" xml:space="preserve">
          <source>Also, the API driver functions &lt;code&gt;driver_output*&lt;/code&gt; and &lt;code&gt;driver_vec_to_buf&lt;/code&gt;, &lt;code&gt;driver_alloc/realloc*&lt;/code&gt;, and the &lt;code&gt;driver_*&lt;/code&gt; queue functions were changed to have larger length arguments and return values. This is a lesser problem, as code that passes smaller types gets them auto-converted in the calls, and as long as the driver does not handle sizes that overflow an &lt;code&gt;int&lt;/code&gt;, all will work as before.</source>
          <target state="translated">Кроме того, функции драйвера API &lt;code&gt;driver_output*&lt;/code&gt; и &lt;code&gt;driver_vec_to_buf&lt;/code&gt; , &lt;code&gt;driver_alloc/realloc*&lt;/code&gt; и &lt;code&gt;driver_*&lt;/code&gt; очереди driver_ * были изменены, чтобы иметь аргументы и возвращаемые значения большей длины. Это меньшая проблема, поскольку код, который передает меньшие типы, автоматически преобразует их в вызовах, и пока драйвер не обрабатывает размеры, которые переполняют &lt;code&gt;int&lt;/code&gt; , все будет работать, как раньше.</target>
        </trans-unit>
        <trans-unit id="5bf6719ad80d4978b49cbb0963084e0b9ffea279" translate="yes" xml:space="preserve">
          <source>Also, the Erlang implementation requires understanding of concepts that were never an issue for many (Erlang) programmers. To understand and use Unicode characters requires that you study the subject thoroughly, even if you are an experienced programmer.</source>
          <target state="translated">Кроме того,реализация Erlang требует понимания концепций,которые никогда не были проблемой для многих (Erlang)программистов.Для понимания и использования символов Юникода необходимо досконально изучить предмет,даже если вы опытный программист.</target>
        </trans-unit>
        <trans-unit id="97ffcd43fe119d65b1c38d259f0ad035db9d9f66" translate="yes" xml:space="preserve">
          <source>Also, the toolkit does not support dependencies between sub-agents. A sub-agent should by definition be stand alone and it is therefore not good design to create dependencies between them.</source>
          <target state="translated">Кроме того,инструментарий не поддерживает зависимости между субагентами.Субагент по определению должен быть самостоятельным,и поэтому создание зависимостей между ними-плохая идея.</target>
        </trans-unit>
        <trans-unit id="36abf7ef6c434f71bc62120ad73dd9f305fae2ba" translate="yes" xml:space="preserve">
          <source>Also, this code compares lists elements using the &quot;&lt;code&gt;==&lt;/code&gt;&quot; operator, while &quot;&lt;code&gt;--&lt;/code&gt;&quot; uses the &quot;&lt;code&gt;=:=&lt;/code&gt;&quot; operator. If that difference is important, &lt;code&gt;sets&lt;/code&gt; can be used instead of &lt;code&gt;gb_sets&lt;/code&gt;, but &lt;code&gt;sets:from_list/1&lt;/code&gt; is much slower than &lt;code&gt;gb_sets:from_list/1&lt;/code&gt; for long lists.</source>
          <target state="translated">Кроме того, этот код сравнивает элементы списков с помощью оператора &amp;laquo; &lt;code&gt;==&lt;/code&gt; &amp;raquo;, а &amp;laquo; &lt;code&gt;--&lt;/code&gt; &amp;raquo; использует оператор &amp;laquo; &lt;code&gt;=:=&lt;/code&gt; &amp;raquo;. Если эта разница имеет важное значение, &lt;code&gt;sets&lt;/code&gt; могут быть использованы вместо &lt;code&gt;gb_sets&lt;/code&gt; , но &lt;code&gt;sets:from_list/1&lt;/code&gt; гораздо медленнее , чем &lt;code&gt;gb_sets:from_list/1&lt;/code&gt; для длинных списков.</target>
        </trans-unit>
        <trans-unit id="6b487a502989be65a999a414931c10e73d9e958d" translate="yes" xml:space="preserve">
          <source>Also, when &lt;code&gt;OptionList == []&lt;/code&gt;, only visible nodes, that is, nodes that appear in the result of &lt;code&gt;erlang:nodes/0&lt;/code&gt;, are monitored.</source>
          <target state="translated">Кроме того, когда &lt;code&gt;OptionList == []&lt;/code&gt; , отслеживаются только видимые узлы, то есть узлы, которые появляются в результате &lt;code&gt;erlang:nodes/0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7c7e2f70e0a7fca68066437851c1d0da8c3f758e" translate="yes" xml:space="preserve">
          <source>Also, when a table is opened this file is read, if it exists.</source>
          <target state="translated">Также при открытии таблицы этот файл читается,если он существует.</target>
        </trans-unit>
        <trans-unit id="bf226a59dfe6aed5d51c1238c21cc12d02623322" translate="yes" xml:space="preserve">
          <source>Alternation. It matches either &lt;code&gt;r1&lt;/code&gt; or &lt;code&gt;r2&lt;/code&gt;.</source>
          <target state="translated">Чередование. Соответствует либо &lt;code&gt;r1&lt;/code&gt; , либо &lt;code&gt;r2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2d3884e669febf89019a2dd3d1f7118c5ae8dd7e" translate="yes" xml:space="preserve">
          <source>Alternation. Matches one of the alternatives.</source>
          <target state="translated">Альтернатива.Совпадает с одной из альтернатив.</target>
        </trans-unit>
        <trans-unit id="b0e0df8a7d7ac3abd4437e1480f042a0637f8891" translate="yes" xml:space="preserve">
          <source>Alternative &lt;code&gt;ab&lt;/code&gt; is found and the result is [{1,2},{1,2}]. The result is added to the list of results and the position in the search string is advanced two steps.</source>
          <target state="translated">Альтернатива &lt;code&gt;ab&lt;/code&gt; найдена, и результат будет [{1,2}, {1,2}]. Результат добавляется в список результатов, а позиция в строке поиска увеличивается на два шага.</target>
        </trans-unit>
        <trans-unit id="388bde91034a0c2bd5c6b83f406e6d950cb39478" translate="yes" xml:space="preserve">
          <source>Alternative syntax for acquisition of table locks is as follows:</source>
          <target state="translated">Альтернативный синтаксис для получения замков таблицы следующий:</target>
        </trans-unit>
        <trans-unit id="de359fc26767f6609fd33d4bab9ab9ec84302a3a" translate="yes" xml:space="preserve">
          <source>Alternative way to stop the HTTP client profile:</source>
          <target state="translated">Альтернативный способ остановить профиль HTTP-клиента:</target>
        </trans-unit>
        <trans-unit id="3b8239e68048624328c3887db9856779071451e0" translate="yes" xml:space="preserve">
          <source>Alternative:</source>
          <target state="translated">Alternative:</target>
        </trans-unit>
        <trans-unit id="84eb863ce8c5fe0eaf266247b00e7b639109efa7" translate="yes" xml:space="preserve">
          <source>Alternatively you download MinGW and MSYS. You'll find the latest installer at:</source>
          <target state="translated">Также вы можете скачать MinGW и MSYS.Вы найдете последнюю версию инсталлятора на сайте:</target>
        </trans-unit>
        <trans-unit id="2a9a5b357a1ebe1596911f8227c3f50733821b16" translate="yes" xml:space="preserve">
          <source>Alternatively, application configuration parameters can be added or updated in &lt;code&gt;sys.config&lt;/code&gt;.</source>
          <target state="translated">Как вариант, параметры конфигурации приложения можно добавить или обновить в &lt;code&gt;sys.config&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1d257655b31583a29c42cb081673cc370da4eb39" translate="yes" xml:space="preserve">
          <source>Alternatively, for more control, use functions &lt;code&gt;&lt;a href=&quot;#open-2&quot;&gt;open/2&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#add-3&quot;&gt;add/3,4&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;#close-1&quot;&gt;close/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">В качестве альтернативы, для большего контроля используйте функции &lt;code&gt;&lt;a href=&quot;#open-2&quot;&gt;open/2&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#add-3&quot;&gt;add/3,4&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;#close-1&quot;&gt;close/1&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1d20174a3ef0c0e03812655f5a1538626e3ef7e1" translate="yes" xml:space="preserve">
          <source>Alternatively, setting flags to &lt;code&gt;EI_FORCE&lt;/code&gt; causes a full backup to be done, and &lt;code&gt;EI_NOPURGE&lt;/code&gt; causes the deleted objects to be left in the registry afterwards. These can be bitwise OR'ed together if both behaviors are desired. If &lt;code&gt;EI_NOPURGE&lt;/code&gt; was specified, &lt;code&gt;ei_reg_purge()&lt;/code&gt; can be used to explicitly remove the deleted items from the registry later.</source>
          <target state="translated">В качестве альтернативы установка флагов на &lt;code&gt;EI_FORCE&lt;/code&gt; приводит к полному резервному копированию, а &lt;code&gt;EI_NOPURGE&lt;/code&gt; заставляет удаленные объекты впоследствии оставаться в реестре. Их можно объединить с помощью поразрядного ИЛИ, если требуется оба поведения. Если &lt;code&gt;EI_NOPURGE&lt;/code&gt; было указано, &lt;code&gt;ei_reg_purge()&lt;/code&gt; можно использовать для явного удаления удаленных элементов из реестра позже.</target>
        </trans-unit>
        <trans-unit id="eda106df891b543c9d37c11d60d93578eda797a2" translate="yes" xml:space="preserve">
          <source>Alternatively, you can use &lt;code&gt;erl_send()&lt;/code&gt; and &lt;code&gt;erl_receive_msg&lt;/code&gt;, which handle the encoding and decoding of messages transparently.</source>
          <target state="translated">В качестве альтернативы вы можете использовать &lt;code&gt;erl_send()&lt;/code&gt; и &lt;code&gt;erl_receive_msg&lt;/code&gt; , которые прозрачно обрабатывают кодирование и декодирование сообщений.</target>
        </trans-unit>
        <trans-unit id="8a36a8fbf04bc6a8060ec964f113d3388e9e6727" translate="yes" xml:space="preserve">
          <source>Although &lt;code&gt;Common Test&lt;/code&gt; was created primarily for black-box testing, nothing prevents it from working perfectly as a white-box testing tool as well. This is especially true when the application to test is written in Erlang. Then the test ports are easily realized with Erlang function calls.</source>
          <target state="translated">Хотя &lt;code&gt;Common Test&lt;/code&gt; был создан в первую очередь для тестирования черного ящика, ничто не мешает ему отлично работать и как инструмент тестирования белого ящика. Это особенно верно, когда тестируемое приложение написано на Erlang. Тогда тестовые порты легко реализовать с помощью вызовов функций Erlang.</target>
        </trans-unit>
        <trans-unit id="4b19755925d10feb1c1eeb84ec413b87f2a2d0e8" translate="yes" xml:space="preserve">
          <source>Although EUnit uses many preprocessor macros, they have been designed to be as nonintrusive as possible, and should not cause conflicts with existing code. Adding EUnit tests to a module should thus not normally require changing existing code. Furthermore, tests that only exercise the exported functions of a module can always be placed in a completely separate module, avoiding any conflicts entirely.</source>
          <target state="translated">Несмотря на то,что EUnit использует много препроцессорных макросов,они были разработаны таким образом,чтобы быть как можно более ненавязчивыми и не вызывать конфликтов с существующим кодом.Таким образом,добавление EUnit-тестов в модуль не должно,как правило,требовать изменения существующего кода.Более того,тесты,которые выполняют только экспортируемые функции модуля,всегда можно поместить в совершенно отдельный модуль,полностью избегая конфликтов.</target>
        </trans-unit>
        <trans-unit id="16e985c50acb7aa3cc2e37887e81edfb84b36580" translate="yes" xml:space="preserve">
          <source>Although Erlang can handle Unicode data in many forms does not automatically mean that the content of any file can be Unicode text. The external entities, such as ports and I/O servers, are not generally Unicode capable.</source>
          <target state="translated">Хотя Erlang может обрабатывать данные в Юникоде во многих формах,это не означает,что содержимое любого файла может быть текстом в Юникоде.Внешние объекты,такие как порты и серверы ввода/вывода,как правило,не поддерживают Юникод.</target>
        </trans-unit>
        <trans-unit id="02df0b028081655673738d27b03c581fc80907e4" translate="yes" xml:space="preserve">
          <source>Although Erlang drivers in general can be beyond the scope of this section, a brief introduction seems to be in place.</source>
          <target state="translated">Хотя водители на Эрланге в целом могут выходить за рамки данного раздела,краткое введение,по-видимому,существует.</target>
        </trans-unit>
        <trans-unit id="145c19dfbd3603b0f1f5d0df7751ed8d04c50799" translate="yes" xml:space="preserve">
          <source>Although all the functionality of EUnit is available even without the use of preprocessor macros, the EUnit header file defines a number of such macros in order to make it as easy as possible to write unit tests as compactly as possible and without getting too many details in the way.</source>
          <target state="translated">Несмотря на то,что весь функционал EUnit доступен даже без использования макросов препроцессора,заголовочный файл EUnit определяет ряд таких макросов,чтобы максимально упростить запись юнит-тестов,не получая при этом слишком много деталей.</target>
        </trans-unit>
        <trans-unit id="288b1873eb386778abf8c7efb5abf1c61cbff2fe" translate="yes" xml:space="preserve">
          <source>Although it would be both pointless and counterproductive to use segmentation on a transport that already does this (e.g. TCP), the megaco application does not check this. Instead, it is up to the user to configure this properly.</source>
          <target state="translated">Хотя использование сегментации на транспорте,который уже делает это (например,TCP),было бы и бессмысленным,и контрпродуктивным,приложение megaco этого не проверяет.Вместо этого,пользователь должен настроить это должным образом.</target>
        </trans-unit>
        <trans-unit id="beb0a28a74c40d09218865dad1a734397c647414" translate="yes" xml:space="preserve">
          <source>Although public key algorithms are supported in FIPS mode they can only be used with secure key sizes. The Security Policy requires the following minimum values:</source>
          <target state="translated">Хотя алгоритмы открытого ключа поддерживаются в режиме FIPS,их можно использовать только с безопасными размерами ключей.Политика безопасности требует следующих минимальных значений:</target>
        </trans-unit>
        <trans-unit id="bc4daacf4342e7c4815a182117afe540cdf564a1" translate="yes" xml:space="preserve">
          <source>Although the garbage collector grows the heap, it grows it step-by-step, which is more costly than directly establishing a larger heap when the process is spawned.</source>
          <target state="translated">Несмотря на то,что сборщик мусора выращивает кучу,он выращивает ее шаг за шагом,что обходится дороже,чем непосредственное создание большой кучи при икрометании.</target>
        </trans-unit>
        <trans-unit id="24878073b1b7f8b78f02e6ee00d8bf88d852b349" translate="yes" xml:space="preserve">
          <source>Although the options are described in a Unix-like format, the case of the options or commands is not relevant, and both character &quot;/&quot; and &quot;-&quot; can be used for options.</source>
          <target state="translated">Хотя опции описаны в Unix-подобном формате,случай опций или команд не имеет значения,и для опций можно использовать как символ &quot;/&quot;,так и символ &quot;-&quot;.</target>
        </trans-unit>
        <trans-unit id="bce09f2137d6fc334364eda633d224f186c26d70" translate="yes" xml:space="preserve">
          <source>Although the program is located together with files specific to the emulator version, it is not expected to be specific to the emulator version. The release handler does &lt;strong&gt;not&lt;/strong&gt; change option &lt;code&gt;-machine&lt;/code&gt; to &lt;code&gt;erlsrv&lt;/code&gt; during emulator restart. Locate the (possibly customized) &lt;code&gt;start_erl&lt;/code&gt; program so that it is not overwritten during upgrade.</source>
          <target state="translated">Хотя программа находится вместе с файлами, относящимися к версии эмулятора, не ожидается, что она будет специфичной для данной версии эмулятора. Обработчик выпуска &lt;strong&gt;не&lt;/strong&gt; изменяет параметр &lt;code&gt;-machine&lt;/code&gt; на &lt;code&gt;erlsrv&lt;/code&gt; во время перезапуска эмулятора. Найдите (возможно, настроенную) программу &lt;code&gt;start_erl&lt;/code&gt; , чтобы она не была перезаписана во время обновления.</target>
        </trans-unit>
        <trans-unit id="3f57a9d4c00bcaabefc52fe8a80642733e554720" translate="yes" xml:space="preserve">
          <source>Although the record syntax is used, it is still hard to read and even harder to write. The first element of the tuple, &lt;code&gt;#emp{empno = '$1', dept = sales, _='_'}&lt;/code&gt;, tells what to match. Elements not matching this are not returned, as in the &lt;code&gt;ets:match/2&lt;/code&gt; example. The second element, the empty list, is a list of guard expressions, which we do not need. The third element is the list of expressions constructing the return value (in ETS this is almost always a list containing one single term). In our case &lt;code&gt;'$1'&lt;/code&gt; is bound to the employee number in the head (first element of the tuple), and hence the employee number is returned. The result is &lt;code&gt;[&quot;011103&quot;,&quot;076324&quot;]&lt;/code&gt;, as in the &lt;code&gt;ets:foldr/3&lt;/code&gt; example, but the result is retrieved much more efficiently in terms of execution speed and memory consumption.</source>
          <target state="translated">Несмотря на то, что используется синтаксис записи, его все еще трудно читать и еще труднее писать. Первый элемент кортежа, &lt;code&gt;#emp{empno = '$1', dept = sales, _='_'}&lt;/code&gt; , сообщает, что сопоставить. Элементы, не соответствующие этому параметру, не возвращаются, как в примере с &lt;code&gt;ets:match/2&lt;/code&gt; . Второй элемент, пустой список, представляет собой список охранных выражений, которые нам не нужны. Третий элемент - это список выражений, составляющих возвращаемое значение (в ETS это почти всегда список, содержащий один единственный термин). В нашем случае &lt;code&gt;'$1'&lt;/code&gt; привязан к номеру сотрудника в заголовке (первый элемент кортежа), и, следовательно, возвращается номер сотрудника. Результатом будет &lt;code&gt;[&quot;011103&quot;,&quot;076324&quot;]&lt;/code&gt; , как в &lt;code&gt;ets:foldr/3&lt;/code&gt; . пример, но результат получается намного эффективнее с точки зрения скорости выполнения и потребления памяти.</target>
        </trans-unit>
        <trans-unit id="2efab97f3a7a5d8ce0a89e59cc48828bf99d33d8" translate="yes" xml:space="preserve">
          <source>Always &lt;code&gt;binary()&lt;/code&gt; when used as return value</source>
          <target state="translated">Всегда &lt;code&gt;binary()&lt;/code&gt; при использовании в качестве возвращаемого значения</target>
        </trans-unit>
        <trans-unit id="92fdd4e6d9d913fcd655491ab0c7675897f9b7ef" translate="yes" xml:space="preserve">
          <source>Always a back reference</source>
          <target state="translated">Всегда обратная ссылка</target>
        </trans-unit>
        <trans-unit id="34df78fa84d9ab6d470efe918d9b6fe7aa623768" translate="yes" xml:space="preserve">
          <source>Always a tab</source>
          <target state="translated">Всегда на вкладке</target>
        </trans-unit>
        <trans-unit id="a4786c7c8c425f21c582ab746681367ee698691a" translate="yes" xml:space="preserve">
          <source>Always derefrence aliases.</source>
          <target state="translated">Всегда отказываешься от псевдонимов.</target>
        </trans-unit>
        <trans-unit id="f8137d77147791c2cdd31baefa8bf6fa8cd8ceff" translate="yes" xml:space="preserve">
          <source>Always returns &lt;code&gt;ok&lt;/code&gt;, regardless of the validity of each individual &lt;code&gt;Dir&lt;/code&gt;.</source>
          <target state="translated">Всегда возвращает &lt;code&gt;ok&lt;/code&gt; , независимо от действительности каждого отдельного &lt;code&gt;Dir&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="27f040498856798609fee3be2f41e6c84980a8f5" translate="yes" xml:space="preserve">
          <source>Always use this function instead of the BIF for processes started using &lt;code&gt;proc_lib&lt;/code&gt; functions.</source>
          <target state="translated">Всегда используйте эту функцию вместо BIF для процессов, запущенных с использованием функций &lt;code&gt;proc_lib&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1816d6498b5f2b91f67cb09f0eef413cb5e709bf" translate="yes" xml:space="preserve">
          <source>An  &lt;strong id=&quot;analyzed_module&quot;&gt;analyzed module&lt;/strong&gt; is a module that has been added to an Xref server together with its module data. A  &lt;strong id=&quot;library_module&quot;&gt;library module&lt;/strong&gt; is a module located in some directory mentioned in the  &lt;strong id=&quot;library_path&quot;&gt;library path&lt;/strong&gt;. A library module is said to be used if some of its exported functions are used by some analyzed module. An  &lt;strong id=&quot;unknown_module&quot;&gt;unknown module&lt;/strong&gt; is a module that is neither an analyzed module nor a library module, but whose exported functions are used by some analyzed module. An  &lt;strong id=&quot;unknown_function&quot;&gt;unknown function&lt;/strong&gt; is a used function that is neither local or exported by any analyzed module nor exported by any library module. An  &lt;strong id=&quot;undefined_function&quot;&gt;undefined function&lt;/strong&gt; is an externally used function that is not exported by any analyzed module or library module. With this notion, a local function can be an undefined function, namely if it is externally used from some module. All unknown functions are also undefined functions; there is a &lt;code&gt;&lt;a href=&quot;xref_chapter#venn2&quot;&gt;figure&lt;/a&gt;&lt;/code&gt; in the User's Guide that illustrates this relationship.</source>
          <target state="translated">&lt;strong id=&quot;analyzed_module&quot;&gt;Проанализирован модуль&lt;/strong&gt; представляет собой модуль , который был добавлен к серверу внешних ссылок вместе с его данными модуля. &lt;strong id=&quot;library_module&quot;&gt;Библиотечный модуль&lt;/strong&gt; представляет собой модуль находится в каком - то каталоге , указанном в &lt;strong id=&quot;library_path&quot;&gt;пути к библиотеке&lt;/strong&gt; . Библиотечный модуль называется используемым, если некоторые из его экспортируемых функций используются каким-либо анализируемым модулем. &lt;strong id=&quot;unknown_module&quot;&gt;Неизвестный модуль&lt;/strong&gt; является модулем , который не является ни анализируемый модуль , ни библиотечный модуль, но экспортируются функции которого используются некоторыми анализируемый модуль. &lt;strong id=&quot;unknown_function&quot;&gt;Неизвестная функция&lt;/strong&gt; является используемой функцией , которая не является ни локальной или вывозимым любым анализируемым модулем и не экспортируются ни библиотека модуля. &lt;strong id=&quot;undefined_function&quot;&gt;Неопределенная функция&lt;/strong&gt;- это функция, используемая извне, которая не экспортируется ни одним анализируемым модулем или библиотечным модулем. Согласно этому понятию, локальная функция может быть неопределенной функцией, а именно, если она используется извне из некоторого модуля. Все неизвестные функции также являются неопределенными функциями; есть &lt;code&gt;&lt;a href=&quot;xref_chapter#venn2&quot;&gt;figure&lt;/a&gt;&lt;/code&gt; в руководстве пользователя , которая иллюстрирует эту связь.</target>
        </trans-unit>
        <trans-unit id="61d493bfba03f3650f2161ca9afdcc61c11c1f50" translate="yes" xml:space="preserve">
          <source>An &quot;electric&quot; command is a character that in addition to just inserting the character performs some type of action. For example the &quot;;&quot; character is typed in a situation where is ends a function clause a new function header is generated. The electric commands are as follows:</source>
          <target state="translated">Электрическая&quot; команда-это символ,который помимо того,что просто вставляет символ,выполняет некоторый тип действия.Например,символ &quot;;&quot; вводится в ситуации,когда после завершения выражения функции генерируется новый заголовок функции.Электрические команды выглядят следующим образом:</target>
        </trans-unit>
        <trans-unit id="6226e0305af70826bf5fe3ce4b1308a84190ed32" translate="yes" xml:space="preserve">
          <source>An &quot;index.html&quot; page is written for each test run (that is, stored in the &lt;code&gt;ct_run&lt;/code&gt; directory tagged with node name, date, and time). This file provides an overview of all individual tests performed in the same test run. The test names follow the following convention:</source>
          <target state="translated">Страница index.html пишется для каждого запуска теста (то есть сохраняется в каталоге &lt;code&gt;ct_run&lt;/code&gt; , помеченном именем узла, датой и временем). Этот файл содержит обзор всех отдельных тестов, выполненных за один тестовый прогон. Названия тестов соответствуют следующему соглашению:</target>
        </trans-unit>
        <trans-unit id="00e6ea986b63d5c9739d49f4c3238bab97235630" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;&lt;a href=&quot;#external_set&quot;&gt;external set&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#external_set&quot;&gt;external set&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1a0395f6f1fbeee27182938ba0839ebfac3dc6b9" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;&lt;a href=&quot;#n_ary_relation&quot;&gt;n-ary relation&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#n_ary_relation&quot;&gt;n-ary relation&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8ad952e4eb8fcd79b39f9d7f3056d23ad1340548" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;&lt;a href=&quot;#sets_definition&quot;&gt;ordered set&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#sets_definition&quot;&gt;ordered set&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f732501fb2f351bec1b39a9b35f38cdddbe7895e" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;&lt;a href=&quot;#sets_definition&quot;&gt;unordered set&lt;/a&gt;&lt;/code&gt; of unordered sets.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#sets_definition&quot;&gt;unordered set&lt;/a&gt;&lt;/code&gt; неупорядоченных множеств.</target>
        </trans-unit>
        <trans-unit id="abe550712a0e6ae829a57ff7d8dfef218ca5d4e5" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;&lt;a href=&quot;#sets_definition&quot;&gt;unordered set&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#sets_definition&quot;&gt;unordered set&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0255682239807b3289c234495e03c8b41192e931" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Event&lt;/code&gt; may be an action performed by one single actor (blue text label) or it may involve two actors and is then depicted as an arrow directed from one actor to another (red text label). Details of an &lt;code&gt;Event&lt;/code&gt; can be shown by clicking (press and release the mouse button 1) on the event label text or on the arrow. When doing that a &lt;code&gt;Contents Viewer&lt;/code&gt; window pops up. It may look like this:</source>
          <target state="translated">&lt;code&gt;Event&lt;/code&gt; может быть действием , выполняемое одного актера (синий текст этикетки) , или он может включать в себя два актера , а затем изображается в виде стрелки , направленные от одного актера к другой (красной текстовой метке). Подробную информацию о &lt;code&gt;Event&lt;/code&gt; можно просмотреть, щелкнув (нажмите и отпустите кнопку мыши 1) текст метки события или стрелку. При этом всплывает окно &lt;code&gt;Contents Viewer&lt;/code&gt; . Это может выглядеть так:</target>
        </trans-unit>
        <trans-unit id="0255b57e28b30c83aed0be71d9a37eb90b3506e9" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;FTP&lt;/code&gt; client.</source>
          <target state="translated">&lt;code&gt;FTP&lt;/code&gt; - клиент.</target>
        </trans-unit>
        <trans-unit id="3fb173ebbce3795b42d50041e455d5925eea1573" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Instantiator&lt;/code&gt; function receives the same value as the &lt;code&gt;Cleanup&lt;/code&gt; function, i.e., the value returned by the &lt;code&gt;Setup&lt;/code&gt; function. It should then behave much like a generator (see &lt;code&gt;&lt;a href=&quot;#Primitives&quot;&gt;Primitives&lt;/a&gt;&lt;/code&gt;), and return a test set whose tests have been &lt;strong&gt;instantiated&lt;/strong&gt; with the given value. A special case is the syntax &lt;code&gt;{with, [AbstractTestFun]}&lt;/code&gt; which represents an instantiator function that distributes the value over a list of unary functions; see &lt;code&gt;&lt;a href=&quot;#Primitives&quot;&gt;Primitives&lt;/a&gt;&lt;/code&gt;: &lt;code&gt;{with, X, [...]}&lt;/code&gt; for more details.</source>
          <target state="translated">&lt;code&gt;Instantiator&lt;/code&gt; функция принимает то же значение, что и &lt;code&gt;Cleanup&lt;/code&gt; функция, то есть, значение , возвращаемое в &lt;code&gt;Setup&lt;/code&gt; функции. Затем он должен вести себя так же, как генератор (см. &amp;laquo; &lt;code&gt;&lt;a href=&quot;#Primitives&quot;&gt;Primitives&lt;/a&gt;&lt;/code&gt; ), и возвращать набор тестов, чьи тесты были &lt;strong&gt;созданы&lt;/strong&gt; с заданным значением. Особым случаем является синтаксис &lt;code&gt;{with, [AbstractTestFun]}&lt;/code&gt; который представляет функцию создания экземпляра, которая распределяет значение по списку унарных функций; см. &lt;code&gt;&lt;a href=&quot;#Primitives&quot;&gt;Primitives&lt;/a&gt;&lt;/code&gt; : &lt;code&gt;{with, X, [...]}&lt;/code&gt; для более подробной информации.</target>
        </trans-unit>
        <trans-unit id="616e10ae1a8e1fb39bdb912ebeef6ab5ca6b40b1" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;accept_callback()&lt;/code&gt; will be called and the boolean return value &lt;code&gt;true&lt;/code&gt; will make the client accept the Host Key. A return value of &lt;code&gt;false&lt;/code&gt; will make the client to reject the Host Key and as a result the connection will be closed. The arguments to the fun are:</source>
          <target state="translated">&lt;code&gt;accept_callback()&lt;/code&gt; будет вызываться и логическое значение , возвращаемое &lt;code&gt;true&lt;/code&gt; сделает клиент принять ключ хоста. Возвращаемое значение &lt;code&gt;false&lt;/code&gt; заставит клиента отклонить ключ хоста, и в результате соединение будет закрыто. Аргументы в пользу веселья:</target>
        </trans-unit>
        <trans-unit id="413cf6d7a307b2b9673ad27e8dbed416e9a8cd0b" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;atom&lt;/code&gt;, defaults to &lt;code&gt;megaco_pretty_text_encoder&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;atom&lt;/code&gt; , по умолчанию &lt;code&gt;megaco_pretty_text_encoder&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fa860461448cf61fc6c4412f7dfeeae18b2f5502" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;atom&lt;/code&gt;, defaults to &lt;code&gt;megaco_tcp&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;atom&lt;/code&gt; , по умолчанию &lt;code&gt;megaco_tcp&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="51e3e48053897de71e5e9525b4fac400d5d8b48f" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;boolean&lt;/code&gt;, default is true.</source>
          <target state="translated">&lt;code&gt;boolean&lt;/code&gt; , по умолчанию так.</target>
        </trans-unit>
        <trans-unit id="a54f797ba37540946ac0de61f8e73f6a99a9bc1c" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;boolean&lt;/code&gt;, defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;boolean&lt;/code&gt; , по умолчанию &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7304f44642298f3032f1c5b607dd7eafc4c3c8ed" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;eval&lt;/code&gt; term for the node and &lt;code&gt;startup_functions&lt;/code&gt; in the &lt;code&gt;node_start&lt;/code&gt; options list can be specified. In this case, the node is started first, then the &lt;code&gt;startup_functions&lt;/code&gt; are executed, and finally functions specified with &lt;code&gt;eval&lt;/code&gt; are called.</source>
          <target state="translated">Можно &lt;code&gt;eval&lt;/code&gt; термин eval для node и &lt;code&gt;startup_functions&lt;/code&gt; в &lt;code&gt;node_start&lt;/code&gt; опций node_start . В этом случае сначала запускается узел, затем &lt;code&gt;startup_functions&lt;/code&gt; и, наконец, вызываются функции, указанные с помощью &lt;code&gt;eval&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8cf0639c1fa382f7a371e1fb9d74d243f730a9ec" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;in_cookie&lt;/code&gt; is the cookie expected to be used by another node when communicating with us, so that &lt;code&gt;A&lt;/code&gt;'s &lt;code&gt;in_cookie&lt;/code&gt; for &lt;code&gt;B&lt;/code&gt; corresponds with &lt;code&gt;B&lt;/code&gt;'s &lt;code&gt;out_cookie&lt;/code&gt; for &lt;code&gt;A&lt;/code&gt;. Below the function &lt;code&gt;in_cookie(Node)&lt;/code&gt; returns the current node's &lt;code&gt;in_cookie&lt;/code&gt; for &lt;code&gt;Node&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;in_cookie&lt;/code&gt; это печенье , как ожидается, будет использоваться другим узлом при обмене данными с нами, так что &amp;laquo;ы &lt;code&gt;in_cookie&lt;/code&gt; для &lt;code&gt;B&lt;/code&gt; соответствует &lt;code&gt;B&lt;/code&gt; &amp;raquo; ы &lt;code&gt;out_cookie&lt;/code&gt; для &lt;code&gt;A&lt;/code&gt; . Ниже функция &lt;code&gt;in_cookie(Node)&lt;/code&gt; возвращает &lt;code&gt;in_cookie&lt;/code&gt; текущего узла для &lt;code&gt;Node&lt;/code&gt; . &lt;code&gt;A&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9d7e048e19b245a7755b67de29c724332d234fef" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;install&lt;/code&gt; program that can take multiple file names.</source>
          <target state="translated">&lt;code&gt;install&lt;/code&gt; программу , которая может принимать несколько имен файлов.</target>
        </trans-unit>
        <trans-unit id="dc1cc59f23e31d3f2faabd0e06404fca41020443" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;integer()&lt;/code&gt; representing a valid ISO Latin-1 character (0-255).</source>
          <target state="translated">Целое &lt;code&gt;integer()&lt;/code&gt; представляющее допустимый символ ISO Latin-1 (0&amp;ndash;255).</target>
        </trans-unit>
        <trans-unit id="1e0bac35dea3f1f84ddba60032770d90571b70a9" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;integer&lt;/code&gt;, default is 1.</source>
          <target state="translated">Целое &lt;code&gt;integer&lt;/code&gt; , по умолчанию 1.</target>
        </trans-unit>
        <trans-unit id="873fbda47245c24d2fb8c42c588854a5bbbe1999" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;integer&lt;/code&gt;, defaults to 0.</source>
          <target state="translated">Целое &lt;code&gt;integer&lt;/code&gt; , по умолчанию 0.</target>
        </trans-unit>
        <trans-unit id="0db32e18586f2823cb1832056d1faf59a25ee88d" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;integer&lt;/code&gt;, defaults to 10.</source>
          <target state="translated">Целое &lt;code&gt;integer&lt;/code&gt; , по умолчанию 10.</target>
        </trans-unit>
        <trans-unit id="be7525ff96efc958521012096b0629c32d985beb" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;integer&lt;/code&gt;, defaults to 2048.</source>
          <target state="translated">Целое &lt;code&gt;integer&lt;/code&gt; , по умолчанию 2048.</target>
        </trans-unit>
        <trans-unit id="226fe72bb662892694081c7e4669e49ce4dfb607" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;ok&lt;/code&gt; return value only means that &lt;code&gt;sanity_check/0&lt;/code&gt; did not find any issues, &lt;strong&gt;not&lt;/strong&gt; that no issues exist.</source>
          <target state="translated">&lt;code&gt;ok&lt;/code&gt; возвращаемое значение означает только то , что &lt;code&gt;sanity_check/0&lt;/code&gt; не нашли каких - либо проблем, &lt;strong&gt;не&lt;/strong&gt; которые существуют никаких проблем.</target>
        </trans-unit>
        <trans-unit id="cb144d37fcad9dec67a783fea0c08715340b0e47" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;ordered_set&lt;/code&gt; only guarantees that objects are processed in &lt;strong&gt;key&lt;/strong&gt; order. Results from functions such as &lt;code&gt;ets:select/2&lt;/code&gt; appear in &lt;strong&gt;key&lt;/strong&gt; order even if the key is not included in the result.</source>
          <target state="translated">&lt;code&gt;ordered_set&lt;/code&gt; только гарантирует , что объекты обрабатываются в &lt;strong&gt;ключевом&lt;/strong&gt; порядке. Результаты таких функций, как &lt;code&gt;ets:select/2&lt;/code&gt; , отображаются в порядке &lt;strong&gt;клавиш&lt;/strong&gt; , даже если ключ не включен в результат.</target>
        </trans-unit>
        <trans-unit id="1ac32ce0e6bfa96623b07134d73e1a74a678a422" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;other_error()&lt;/code&gt;, indicates some other error such as timeout.</source>
          <target state="translated">&lt;code&gt;other_error()&lt;/code&gt; , указывает на некоторую другую ошибку , например , как тайм - аут.</target>
        </trans-unit>
        <trans-unit id="c055e209749d7630d0667a2b7111dd1440c4439d" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;other_reason()&lt;/code&gt;, indicates some other error such as:</source>
          <target state="translated">&lt;code&gt;other_reason()&lt;/code&gt; , указывает на некоторую другую ошибку , такие как:</target>
        </trans-unit>
        <trans-unit id="894fd973b7b8b5b01a93ed5aca695081618b3394" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;out_cookie&lt;/code&gt; is the cookie used in outgoing communication to a certain node, so that &lt;code&gt;A&lt;/code&gt;'s &lt;code&gt;out_cookie&lt;/code&gt; for &lt;code&gt;B&lt;/code&gt; is to correspond with &lt;code&gt;B&lt;/code&gt;'s &lt;code&gt;in_cookie&lt;/code&gt; for &lt;code&gt;A&lt;/code&gt; and conversely. &lt;code&gt;A&lt;/code&gt;'s &lt;code&gt;out_cookie&lt;/code&gt; for &lt;code&gt;B&lt;/code&gt; and &lt;code&gt;A&lt;/code&gt;'s &lt;code&gt;in_cookie&lt;/code&gt; for &lt;code&gt;B&lt;/code&gt; need &lt;strong&gt;not&lt;/strong&gt; be the same. Below the function &lt;code&gt;out_cookie(Node)&lt;/code&gt; returns the current node's &lt;code&gt;out_cookie&lt;/code&gt; for &lt;code&gt;Node&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;out_cookie&lt;/code&gt; этого печенье используется в исходящей связи к определенному узлу, так что &amp;laquo;ы &lt;code&gt;out_cookie&lt;/code&gt; для &lt;code&gt;B&lt;/code&gt; должен соответствовать с &lt;code&gt;B&lt;/code&gt; &amp;raquo; s &lt;code&gt;in_cookie&lt;/code&gt; для &lt;code&gt;A&lt;/code&gt; и наоборот. &amp;laquo;Ы &lt;code&gt;out_cookie&lt;/code&gt; для &lt;code&gt;B&lt;/code&gt; и &amp;raquo; ы &lt;code&gt;in_cookie&lt;/code&gt; для &lt;code&gt;B&lt;/code&gt; должен &lt;strong&gt;не&lt;/strong&gt; быть одинаковыми. Ниже функция &lt;code&gt;out_cookie(Node)&lt;/code&gt; возвращает &lt;code&gt;out_cookie&lt;/code&gt; текущего узла для &lt;code&gt;Node&lt;/code&gt; . &lt;code&gt;A&lt;/code&gt; &lt;code&gt;A&lt;/code&gt; &lt;code&gt;A&lt;/code&gt; &lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d7eef5074a9774a00c738e43d74f620a383d53d0" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;ssl_options&lt;/code&gt; list must be specified if and only if the transport in question has set &lt;code&gt;Inband-Security-Id&lt;/code&gt; to 1 (&lt;code&gt;TLS&lt;/code&gt;), as specified to either &lt;code&gt;&lt;a href=&quot;diameter#start_service-2&quot;&gt;diameter:start_service/2&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;diameter#add_transport-2&quot;&gt;diameter:add_transport/2&lt;/a&gt;&lt;/code&gt;, so that the transport process will receive notification of whether or not to commence with a TLS handshake following capabilities exchange. Failing to specify an options list on a TLS-capable transport for which TLS is negotiated will cause TLS handshake to fail. Failing to specify TLS capability when &lt;code&gt;ssl_options&lt;/code&gt; has been specified will cause the transport process to wait for a notification that will not be forthcoming, which will eventually cause the RFC 3539 watchdog to take down the connection.</source>
          <target state="translated">Ань &lt;code&gt;ssl_options&lt;/code&gt; список должен быть указан , если и только если транспорт в вопросе поставил &lt;code&gt;Inband-Security-Id&lt;/code&gt; 1 ( &lt;code&gt;TLS&lt;/code&gt; ), как указан в любой &lt;code&gt;&lt;a href=&quot;diameter#start_service-2&quot;&gt;diameter:start_service/2&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;diameter#add_transport-2&quot;&gt;diameter:add_transport/2&lt;/a&gt;&lt;/code&gt; , так что процесс переноса получит уведомление о том, следует ли начинать рукопожатие TLS после обмена возможностями. Неспособность указать список опций для транспорта с поддержкой TLS, для которого согласован TLS, приведет к сбою подтверждения TLS. &lt;code&gt;ssl_options&lt;/code&gt; указать возможность TLS при ssl_options Было указано, что транспортный процесс будет ждать уведомления, которое не поступит, что в конечном итоге заставит сторожевой таймер RFC 3539 разорвать соединение.</target>
        </trans-unit>
        <trans-unit id="5953af02f70fe1bd6cb42949e24f0078af4d3ff4" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;{outstream, Id}&lt;/code&gt; tuple in the &lt;code&gt;transport_data&lt;/code&gt; field of a outgoing diameter_packet record sets the outbound stream on which the message is sent, modulo the negotiated number of outbound streams. Any other value causes successive such sends to cycle though all outbound streams.</source>
          <target state="translated">&lt;code&gt;{outstream, Id}&lt;/code&gt; кортеж в &lt;code&gt;transport_data&lt;/code&gt; поле записи исходящего diameter_packet устанавливает исходящий поток , на котором посылает сообщение, по модулю согласованного количества исходящих потоков. Любое другое значение заставляет последовательные такие посылки циклически проходить через все исходящие потоки.</target>
        </trans-unit>
        <trans-unit id="d5fa362d0f65e987c4b8318080cab175e37513ad" translate="yes" xml:space="preserve">
          <source>An &lt;strong id=&quot;acyclic_digraph&quot;&gt;acyclic digraph&lt;/strong&gt; is a digraph without cycles.</source>
          <target state="translated">&lt;strong id=&quot;acyclic_digraph&quot;&gt;Ациклический орграф&lt;/strong&gt; является орграф без циклов.</target>
        </trans-unit>
        <trans-unit id="c3aa68fd8d0814a5d205c457e0d32e4bc17b0175" translate="yes" xml:space="preserve">
          <source>An &lt;strong id=&quot;arborescence&quot;&gt;arborescence&lt;/strong&gt; is an acyclic digraph with a vertex V, the &lt;strong id=&quot;root&quot;&gt;root&lt;/strong&gt;, such that there is a unique path from V to every other vertex of G.</source>
          <target state="translated">&lt;strong id=&quot;arborescence&quot;&gt;Древовидный&lt;/strong&gt; представляет собой ациклический орграф с вершиной V, в &lt;strong id=&quot;root&quot;&gt;корневом каталоге&lt;/strong&gt; , например , что существует единственный путь от V к любой другой вершине G.</target>
        </trans-unit>
        <trans-unit id="742a6d0f8438c960e1610deecf0bc0fce6d56d78" translate="yes" xml:space="preserve">
          <source>An &lt;strong id=&quot;external_set&quot;&gt;external set&lt;/strong&gt; is an element of the range of Sets.</source>
          <target state="translated">&lt;strong id=&quot;external_set&quot;&gt;Внешнее множество&lt;/strong&gt; является элементом диапазона множеств.</target>
        </trans-unit>
        <trans-unit id="edf6ff8399e6bc41f3e349775438bc0fb18b7111" translate="yes" xml:space="preserve">
          <source>An &lt;strong&gt;embedded target system&lt;/strong&gt; where there is also support for logging output from the system to file for later inspection, and where the system can be started automatically at boot time.</source>
          <target state="translated">&lt;strong&gt;Встроенная целевая система&lt;/strong&gt; , где имеется также поддержка для регистрации выхода из системы в файл для последующего анализа, и где система может быть запущена автоматически во время загрузки.</target>
        </trans-unit>
        <trans-unit id="380c35ec1379b2732006ec744451c0160e09d7d7" translate="yes" xml:space="preserve">
          <source>An ASN.1 compiler for Erlang, which generates encode and decode functions to be used by Erlang programs sending and receiving ASN.1 specified data.</source>
          <target state="translated">Компилятор ASN.1 для Erlang,который генерирует функции кодирования и декодирования для использования программами Erlang,посылающими и получающими данные,указанные в ASN.1.</target>
        </trans-unit>
        <trans-unit id="2072c4a338574b8129ce6b5952267c903a250059" translate="yes" xml:space="preserve">
          <source>An Alarm Handling Process</source>
          <target state="translated">Процесс обработки сигналов тревоги</target>
        </trans-unit>
        <trans-unit id="23ba32dda2e50be421eaa9dbe7743df19b802a29" translate="yes" xml:space="preserve">
          <source>An Erlang code preprocessor.</source>
          <target state="translated">Препроцессор кода Эрланга.</target>
        </trans-unit>
        <trans-unit id="163e8de0a613994fca6438b452c975b50aeb03f4" translate="yes" xml:space="preserve">
          <source>An Erlang crash dump is produced with &lt;code&gt;Status&lt;/code&gt; as slogan. Then the runtime system exits with status code &lt;code&gt;1&lt;/code&gt;. The string will be truncated if longer than 200 characters.</source>
          <target state="translated">Аварийный дамп Erlang создается со слоганом &amp;laquo; &lt;code&gt;Status&lt;/code&gt; . Затем система выполнения завершает работу с кодом состояния &lt;code&gt;1&lt;/code&gt; . Строка будет обрезана, если ее длина превышает 200 символов.</target>
        </trans-unit>
        <trans-unit id="4512b1e2b9f7565d7aad070a59e6db442ba6e364" translate="yes" xml:space="preserve">
          <source>An Erlang driver is a library containing a set of native driver callback functions that the Erlang Virtual Machine calls when certain events occur. There can be multiple instances of a driver, each instance is associated with an Erlang port.</source>
          <target state="translated">Драйвер Erlang-это библиотека,содержащая набор нативных функций обратного вызова драйвера,которые виртуальная машина Erlang вызывает при возникновении определенных событий.Драйверов может быть несколько,каждый экземпляр связан с портом Erlang.</target>
        </trans-unit>
        <trans-unit id="46d02d2d1f7bf010b89b68c50051d352cdf1f1c7" translate="yes" xml:space="preserve">
          <source>An Erlang driver is a native code module written in C (or assembler), which serves as an interface for some special operating system service. This is a general mechanism that is used throughout the Erlang emulator for all kinds of I/O. An Erlang driver can be dynamically linked (or loaded) to the Erlang emulator at runtime by using the &lt;code&gt;erl_ddll&lt;/code&gt; Erlang module. Some of the drivers in OTP are however statically linked to the runtime system, but that is more an optimization than a necessity.</source>
          <target state="translated">Драйвер Erlang - это модуль собственного кода, написанный на C (или ассемблере), который служит интерфейсом для некоторой специальной службы операционной системы. Это общий механизм, который используется в эмуляторе Erlang для всех видов ввода-вывода. Драйвер Erlang может быть динамически связан (или загружен) с эмулятором Erlang во время выполнения с помощью &lt;code&gt;erl_ddll&lt;/code&gt; Erlang erl_ddll . Однако некоторые драйверы в OTP статически связаны с системой выполнения, но это скорее оптимизация, чем необходимость.</target>
        </trans-unit>
        <trans-unit id="e9d5ba03efbb958aec77ffebac7f1f229efa740a" translate="yes" xml:space="preserve">
          <source>An Erlang driver only exports one function: the driver entry function. This is defined with a macro, &lt;code&gt;DRIVER_INIT&lt;/code&gt;, which returns a pointer to a C &lt;code&gt;struct&lt;/code&gt; containing the entry points that are called from the emulator. The &lt;code&gt;struct&lt;/code&gt; defines the entries that the emulator calls to call the driver, with a &lt;code&gt;NULL&lt;/code&gt; pointer for entries that are not defined and used by the driver.</source>
          <target state="translated">Драйвер Erlang экспортирует только одну функцию: функцию ввода драйвера. Это определяется макросом &lt;code&gt;DRIVER_INIT&lt;/code&gt; , который возвращает указатель на &lt;code&gt;struct&lt;/code&gt; C, содержащую точки входа, которые вызываются из эмулятора. &lt;code&gt;struct&lt;/code&gt; определяет запись , что эмулятор звонков для вызова водителя, с &lt;code&gt;NULL&lt;/code&gt; указателем для записей, которые не определены и используются драйвером.</target>
        </trans-unit>
        <trans-unit id="bd548a3ef940c79c88bddfa47cccbd8fb1829c8b" translate="yes" xml:space="preserve">
          <source>An Erlang module containing a collection of test cases for a specific functional area.</source>
          <target state="translated">Модуль Erlang,содержащий набор тестовых кейсов для конкретной функциональной области.</target>
        </trans-unit>
        <trans-unit id="ad9ae30d2c55cc4178422772dd42ca73a04b1365" translate="yes" xml:space="preserve">
          <source>An Erlang node acting as a client to another Erlang node typically sends a request and waits for a reply. Such a request is included in a function call at a remote node and is called a remote procedure call.</source>
          <target state="translated">Узел Erlang,выступающий в качестве клиента другого узла Erlang,обычно посылает запрос и ждет ответа.Такой запрос включается в вызов функции на удаленном узле и называется вызовом удаленной процедуры.</target>
        </trans-unit>
        <trans-unit id="56710ac893f31a54d4164ee165dd753222462531" translate="yes" xml:space="preserve">
          <source>An Erlang node is started using command-line flag &lt;code&gt;-name&lt;/code&gt; or &lt;code&gt;-sname&lt;/code&gt;:</source>
          <target state="translated">Узел Erlang запускается с использованием флага командной строки &lt;code&gt;-name&lt;/code&gt; или &lt;code&gt;-sname&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="599c98b38dfe8d71da51449f0bdd899eee1b39d4" translate="yes" xml:space="preserve">
          <source>An Erlang node name has the form host@shortname or host@longname. The node name is used as an atom within the system, so the maximum size of 255 holds also for the node name.</source>
          <target state="translated">Имя узла Erlang имеет форму host@shortname или host@longname.Имя узла используется в качестве атома в системе,поэтому максимальный размер 255 также используется для имени узла.</target>
        </trans-unit>
        <trans-unit id="1e0759134862f9ad1e90191482caa5537f8967ba" translate="yes" xml:space="preserve">
          <source>An Erlang pattern is a term that can contain unbound variables or &lt;code&gt;&quot;do not care&quot;&lt;/code&gt; symbols. Such a pattern can be matched against a term and, if the match is successful, any unbound variables in the pattern will be bound as a side effect. The content of a bound variable can then be retrieved:</source>
          <target state="translated">Шаблон Erlang - это термин, который может содержать несвязанные переменные или символы &lt;code&gt;&quot;do not care&quot;&lt;/code&gt; . Такой шаблон можно сопоставить с термином, и, если сопоставление будет успешным, любые несвязанные переменные в шаблоне будут связаны как побочный эффект. Затем можно получить содержимое связанной переменной:</target>
        </trans-unit>
        <trans-unit id="1200c0da52a399921a5c78fb7e044cea6d860a20" translate="yes" xml:space="preserve">
          <source>An Erlang process (conceptually) runs until it does a &lt;code&gt;receive&lt;/code&gt; and there is no message which it wants to receive in the message queue. &quot;conceptually&quot; is used here because the Erlang system shares the CPU time between the active processes in the system.</source>
          <target state="translated">Erlang процесс (концептуально) работает до тех пор, пока не делает &lt;code&gt;receive&lt;/code&gt; и нет никакого сообщения , которое он хочет получить в очереди сообщений. &amp;laquo;концептуально&amp;raquo; используется здесь, потому что система Erlang разделяет процессорное время между активными процессами в системе.</target>
        </trans-unit>
        <trans-unit id="51ffaec9560fba4d779993b121c3d8e77dcf2ff0" translate="yes" xml:space="preserve">
          <source>An Erlang process can set up links to other Erlang processes. If a process calls &lt;code&gt;link(Other_Pid)&lt;/code&gt; it sets up a bidirectional link between itself and the process called &lt;code&gt;Other_Pid&lt;/code&gt;. When a process terminates, it sends something called a &lt;strong&gt;signal&lt;/strong&gt; to all the processes it has links to.</source>
          <target state="translated">Процесс Erlang может устанавливать ссылки на другие процессы Erlang. Если процесс вызывает &lt;code&gt;link(Other_Pid)&lt;/code&gt; он устанавливает двунаправленную ссылку между собой и процессом с именем &lt;code&gt;Other_Pid&lt;/code&gt; . Когда процесс завершается, он отправляет так называемый &lt;strong&gt;сигнал&lt;/strong&gt; всем процессам, с которыми у него есть ссылки.</target>
        </trans-unit>
        <trans-unit id="9970a8a7b56df81fb08ac05a8463925914e6cf12" translate="yes" xml:space="preserve">
          <source>An Erlang process is lightweight compared to threads and processes in operating systems.</source>
          <target state="translated">Процесс Erlang легковесен по сравнению с резьбой и процессами в операционных системах.</target>
        </trans-unit>
        <trans-unit id="09a9e4871d3bc24cfef4abf9dd5b18af33c141ab" translate="yes" xml:space="preserve">
          <source>An Erlang runtime system internal memory allocator library.</source>
          <target state="translated">Библиотека аллокатора внутренней памяти системы исполнения Erlang.</target>
        </trans-unit>
        <trans-unit id="e0378125a458b38016849cc67d1615f3807c8d9e" translate="yes" xml:space="preserve">
          <source>An Erlang runtime system is made a distributed Erlang node by giving it a name. A distributed Erlang node can connect to, and monitor, other nodes. It can also spawn processes at other nodes. Message passing and error handling between processes at different nodes are transparent. A number of useful STDLIB modules are available in a distributed Erlang system. For example, &lt;code&gt;global&lt;/code&gt;, which provides global name registration. The distribution mechanism is implemented using TCP/IP sockets.</source>
          <target state="translated">Система времени выполнения Erlang превращается в распределенный узел Erlang путем присвоения ему имени. Распределенный узел Erlang может подключаться к другим узлам и контролировать их. Он также может порождать процессы на других узлах. Передача сообщений и обработка ошибок между процессами на разных узлах прозрачны. В распределенной системе Erlang доступен ряд полезных модулей STDLIB. Например, &lt;code&gt;global&lt;/code&gt; , который обеспечивает регистрацию глобального имени. Механизм распространения реализован с использованием сокетов TCP / IP.</target>
        </trans-unit>
        <trans-unit id="04046988b941940151b9b5fc8a82309ae841ddb6" translate="yes" xml:space="preserve">
          <source>An Erlang runtime system is started with command &lt;code&gt;erl&lt;/code&gt;:</source>
          <target state="translated">Система времени выполнения Erlang запускается с помощью команды &lt;code&gt;erl&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="3393487efc373a12bc45e05f1eacb861280e2ede" translate="yes" xml:space="preserve">
          <source>An Erlang runtime system to be monitored by a heart program is to be started with command-line flag &lt;code&gt;-heart&lt;/code&gt; (see also &lt;code&gt;erl(1)&lt;/code&gt;). The &lt;code&gt;heart&lt;/code&gt; process is then started automatically:</source>
          <target state="translated">Система времени выполнения Erlang, за которой должна следить программа-сердце, должна запускаться с флагом командной строки &lt;code&gt;-heart&lt;/code&gt; (см. Также &lt;code&gt;erl(1)&lt;/code&gt; ). &lt;code&gt;heart&lt;/code&gt; процесс запускается автоматически:</target>
        </trans-unit>
        <trans-unit id="f733ec70702901146b379fda30a66a57a35b70fb" translate="yes" xml:space="preserve">
          <source>An Erlang script file must always contain the &lt;code&gt;main/1&lt;/code&gt; function. When the script is run, the &lt;code&gt;main/1&lt;/code&gt; function is called with a list of strings representing the arguments specified to the script (not changed or interpreted in any way).</source>
          <target state="translated">Файл сценария Erlang всегда должен содержать функцию &lt;code&gt;main/1&lt;/code&gt; . При запуске сценария вызывается функция &lt;code&gt;main/1&lt;/code&gt; со списком строк, представляющих аргументы, указанные для сценария (не измененные и не интерпретируемые каким-либо образом).</target>
        </trans-unit>
        <trans-unit id="73dec7304e5c6b791062b7b3aca15db293d62078" translate="yes" xml:space="preserve">
          <source>An Erlang session must be started and a &lt;code&gt;Mnesia&lt;/code&gt; directory must be specified for the database.</source>
          <target state="translated">Необходимо запустить сеанс Erlang и указать каталог &lt;code&gt;Mnesia&lt;/code&gt; для базы данных.</target>
        </trans-unit>
        <trans-unit id="ce5518b8587007e4c494155014d3a550a3741ae1" translate="yes" xml:space="preserve">
          <source>An Erlang term is represented by a C structure of type &lt;code&gt;ETERM&lt;/code&gt;. Applications should not reference any fields in this structure directly, as it can be changed in future releases to provide faster and more compact term storage. Instead, applications should use the macros and functions provided.</source>
          <target state="translated">Термин Erlang представлен структурой C типа &lt;code&gt;ETERM&lt;/code&gt; . Приложения не должны напрямую ссылаться на какие-либо поля в этой структуре, поскольку в будущих выпусках она может быть изменена для обеспечения более быстрого и компактного хранения терминов. Вместо этого приложения должны использовать предоставленные макросы и функции.</target>
        </trans-unit>
        <trans-unit id="164c80b922f57a9bdd50001a74df476a789dbd1f" translate="yes" xml:space="preserve">
          <source>An Erlang/OTP installation.</source>
          <target state="translated">Установка Erlang/OTP.</target>
        </trans-unit>
        <trans-unit id="1054640745b3e48822c3fd2338dfbcd899d7c1b8" translate="yes" xml:space="preserve">
          <source>An Erlang/OTP source tree containing the updated applications that you want to patch into the existing Erlang/OTP installation.</source>
          <target state="translated">Дерево исходных текстов Erlang/OTP,содержащее обновленные приложения,которые вы хотите исправить в существующей установке Erlang/OTP.</target>
        </trans-unit>
        <trans-unit id="33e5f51ee47766fa568bcc250e6552444bf87f73" translate="yes" xml:space="preserve">
          <source>An Ets table is a single-key table (either a hash table or a tree ordered by the key) and is to be used as one. In other words, use the key to look up things whenever possible. A lookup by a known key in a &lt;code&gt;set&lt;/code&gt; Ets table is constant and for an &lt;code&gt;ordered_set&lt;/code&gt; Ets table it is O(logN). A key lookup is always preferable to a call where the whole table has to be scanned. In the previous examples, the field &lt;code&gt;idno&lt;/code&gt; is the key of the table and all lookups where only the name is known result in a complete scan of the (possibly large) table for a matching result.</source>
          <target state="translated">Таблица Ets - это таблица с одним ключом (либо хеш-таблица, либо дерево, упорядоченное по ключу), и ее следует использовать как единое целое. Другими словами, по возможности используйте ключ для поиска вещей. Поиск по известному ключу в таблице &lt;code&gt;set&lt;/code&gt; Ets является постоянным, а для &lt;code&gt;ordered_set&lt;/code&gt; Ets order_set это O (logN). Поиск по ключу всегда предпочтительнее вызова, когда необходимо сканировать всю таблицу. В предыдущих примерах поле &lt;code&gt;idno&lt;/code&gt; является ключом таблицы, и все поиски, в которых известно только имя, приводят к полному сканированию (возможно, большой) таблицы для получения результата сопоставления.</target>
        </trans-unit>
        <trans-unit id="a7cf253c697b4afabd6dffd4bbe2047b45daa497" translate="yes" xml:space="preserve">
          <source>An Extensible multi-lingual SNMP agent, which understands SNMPv1 (RFC1157), SNMPv2c (RFC1901, 1905, 1906 and 1907), SNMPv3 (RFC2271, 2272, 2273, 2274 and 2275), or any combination of these protocols.</source>
          <target state="translated">Расширяемый мультиязычный агент SNMP,понимающий SNMPv1 (RFC1157),SNMPv2c (RFC1901,1905,1906 и 1907),SNMPv3 (RFC2271,2272,2273,2274 и 2275),или любую комбинацию этих протоколов.</target>
        </trans-unit>
        <trans-unit id="05553bae8eb36ff1c70b542ddf36a56af29990c8" translate="yes" xml:space="preserve">
          <source>An FTP client can be started in two ways. One is using the &lt;code&gt;&lt;a href=&quot;#service_start&quot;&gt;service_start&lt;/a&gt;&lt;/code&gt; function, the other is to start it directly as a standalone process using function &lt;code&gt;&lt;a href=&quot;#open&quot;&gt;open&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">FTP-клиент можно запустить двумя способами. Один использует функцию &lt;code&gt;&lt;a href=&quot;#service_start&quot;&gt;service_start&lt;/a&gt;&lt;/code&gt; , другой - запускает его напрямую как отдельный процесс с помощью функции &lt;code&gt;&lt;a href=&quot;#open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="142111236af13f256edac0459b9be958dddb9369" translate="yes" xml:space="preserve">
          <source>An HTTP client and server</source>
          <target state="translated">HTTP клиент и сервер</target>
        </trans-unit>
        <trans-unit id="2afe7b47404b7ad13ca9bd0ff2a980472ed68c85" translate="yes" xml:space="preserve">
          <source>An HTTP client can be configured to start when starting the &lt;code&gt;Inets&lt;/code&gt; application or started dynamically in runtime by calling the &lt;code&gt;Inets&lt;/code&gt; application API &lt;code&gt;inets:start(httpc, ServiceConfig)&lt;/code&gt; or &lt;code&gt;inets:start(httpc, ServiceConfig, How)&lt;/code&gt;, see &lt;code&gt;&lt;a href=&quot;inets&quot;&gt;inets(3)&lt;/a&gt;&lt;/code&gt;. The configuration options are as follows:</source>
          <target state="translated">Клиент HTTP может быть настроен на запуск при запуске &lt;code&gt;Inets&lt;/code&gt; приложения или начал динамически во время выполнения вызова &lt;code&gt;Inets&lt;/code&gt; приложения API &lt;code&gt;inets:start(httpc, ServiceConfig)&lt;/code&gt; или &lt;code&gt;inets:start(httpc, ServiceConfig, How)&lt;/code&gt; , см &lt;code&gt;&lt;a href=&quot;inets&quot;&gt;inets(3)&lt;/a&gt;&lt;/code&gt; . Возможны следующие варианты конфигурации:</target>
        </trans-unit>
        <trans-unit id="ac94cd7f217b34f41616cfaaff0e53eb269f96bc" translate="yes" xml:space="preserve">
          <source>An HTTP/1.1 client</source>
          <target state="translated">Клиент HTTP/1.1</target>
        </trans-unit>
        <trans-unit id="42eecf40b49071e953314f2ad636039400fdbb0d" translate="yes" xml:space="preserve">
          <source>An I/O device, either &lt;code&gt;standard_io&lt;/code&gt;, &lt;code&gt;standard_error&lt;/code&gt;, a registered name, or a pid handling I/O protocols (returned from &lt;code&gt;file:open/2&lt;/code&gt;).</source>
          <target state="translated">Устройство ввода-вывода, либо &lt;code&gt;standard_io&lt;/code&gt; , &lt;code&gt;standard_error&lt;/code&gt; , зарегистрированное имя, или pid, обрабатывающее протоколы ввода-вывода (возвращается из &lt;code&gt;file:open/2&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="ae711fee4d3a7baed5f9d46d07c066788a61f314" translate="yes" xml:space="preserve">
          <source>An I/O server in binary mode affects the data sent to the client, so that it must be able to handle binary data. For convenience, the modes of an I/O server can be set and retrieved using the following I/O requests:</source>
          <target state="translated">Сервер ввода/вывода в двоичном режиме влияет на данные,передаваемые клиенту,поэтому он должен быть способен обрабатывать двоичные данные.Для удобства настройки и извлечения режимов сервера ввода/вывода можно использовать следующие запросы на ввод/вывод:</target>
        </trans-unit>
        <trans-unit id="b62015dba8d016181c61cc4f29681a2a099c1f41" translate="yes" xml:space="preserve">
          <source>An I/O server is any process capable of handling the I/O protocol. There is no generic I/O server behavior, but could well be. The framework is simple, a process handling incoming requests, usually both I/O-requests and other I/O device-specific requests (positioning, closing, and so on).</source>
          <target state="translated">Сервер ввода/вывода-это любой процесс,способный работать с протоколом ввода/вывода.Общего поведения сервера ввода/вывода нет,но вполне может быть.Фреймворк прост,процесс обрабатывает входящие запросы,обычно как запросы на ввод/вывод,так и другие специфические для устройства ввода/вывода запросы (позиционирование,закрытие и т.д.).</target>
        </trans-unit>
        <trans-unit id="71aa558a385dde730a823188e9e6c5a3a9ad8c43" translate="yes" xml:space="preserve">
          <source>An I/O vector containing &lt;code&gt;iovcnt&lt;/code&gt;&lt;code&gt;SysIOVec&lt;/code&gt;s pointing to the data. It is used by &lt;code&gt;&lt;a href=&quot;#enif_inspect_iovec&quot;&gt;enif_inspect_iovec&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#enif_ioq_enqv&quot;&gt;enif_ioq_enqv&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Вектор ввода-вывода, содержащий &lt;code&gt;iovcnt&lt;/code&gt; &lt;code&gt;SysIOVec&lt;/code&gt; , указывающий на данные. Он используется &lt;code&gt;&lt;a href=&quot;#enif_inspect_iovec&quot;&gt;enif_inspect_iovec&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;#enif_ioq_enqv&quot;&gt;enif_ioq_enqv&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="41130f0f20d700a7cd9c6bd00e3e478bc7b4d3be" translate="yes" xml:space="preserve">
          <source>An IP datagram header is of variable length. This length is measured in the number of 32-bit words and is given in the segment corresponding to &lt;code&gt;HLen&lt;/code&gt;. The minimum value of &lt;code&gt;HLen&lt;/code&gt; is 5. It is the segment corresponding to &lt;code&gt;Opts&lt;/code&gt; that is variable, so if &lt;code&gt;HLen&lt;/code&gt; is equal to 5, &lt;code&gt;Opts&lt;/code&gt; becomes an empty binary.</source>
          <target state="translated">Заголовок IP-дейтаграммы имеет переменную длину. Эта длина измеряется количеством 32-битных слов и указывается в сегменте, соответствующем &lt;code&gt;HLen&lt;/code&gt; . Минимальное значение &lt;code&gt;HLen&lt;/code&gt; - 5. Это сегмент, соответствующий &lt;code&gt;Opts&lt;/code&gt; , который является переменным, поэтому, если &lt;code&gt;HLen&lt;/code&gt; равен 5, &lt;code&gt;Opts&lt;/code&gt; становится пустым двоичным файлом .</target>
        </trans-unit>
        <trans-unit id="8b34d40f0dbe3b588d3da6f27a42d0abb207e154" translate="yes" xml:space="preserve">
          <source>An LALR-1 parser generator for Erlang, similar to &lt;code&gt;yacc&lt;/code&gt;. Takes a BNF grammar definition as input, and produces Erlang code for a parser.</source>
          <target state="translated">Генератор парсера LALR-1 для Erlang, похожий на &lt;code&gt;yacc&lt;/code&gt; . Принимает определение грамматики BNF в качестве входных данных и создает код Erlang для синтаксического анализатора.</target>
        </trans-unit>
        <trans-unit id="7f4de0ab059529b74fa404e77bd9bce10ca57adb" translate="yes" xml:space="preserve">
          <source>An MGC must initiate its transport service in order to listen to MG's trying to connect. How the actual transport is initiated is outside the scope of this application. However a send handle (typically a socket id or host and port) must be provided from the transport service in order to enable us to send the message to the correct destination. We do however not assume anything about this, from our point of view, opaque handle. Hopefully it is rather small since it will passed around the system between processes rather frequently.</source>
          <target state="translated">MGC должен инициировать свою транспортную службу,чтобы прослушать попытку MG подключиться.То,как инициируется фактическая транспортировка,выходит за рамки этого применения.Однако,ручка отправки (обычно идентификатор сокета или хоста и порта)должна быть предоставлена транспортной службой для того,чтобы мы могли отправить сообщение в правильное место назначения.Однако мы ничего не предполагаем по этому поводу,с нашей точки зрения,непрозрачной обработкой.Надеюсь,что он достаточно мал,так как будет передаваться по системе между процессами довольно часто.</target>
        </trans-unit>
        <trans-unit id="3f19384fb5f4be8e031ef20ebc7f31d2d84b520a" translate="yes" xml:space="preserve">
          <source>An MIB view is a collection of included and excluded sub-trees. A sub-tree is identified by an OBJECT IDENTIFIER. A mask is associated with each sub-tree.</source>
          <target state="translated">Взгляд MIB представляет собой коллекцию включенных и исключенных поддеревьев.Поддеревья идентифицируются ИДЕНТИФАЦИОННЫМ ОБЪЕКТОМ.С каждым поддеревом ассоциируется маска.</target>
        </trans-unit>
        <trans-unit id="a21abf65ff184b2ac5dfa83b3fd2726d82ff5f71" translate="yes" xml:space="preserve">
          <source>An RFC 3539 watchdog state machine has changed state.</source>
          <target state="translated">Сторожевая машина RFC 3539 изменила состояние.</target>
        </trans-unit>
        <trans-unit id="3111bfc27ffe841290b619c09a5ae5ead1e40f85" translate="yes" xml:space="preserve">
          <source>An RSA private key encrypted with a password can look as follows:</source>
          <target state="translated">Закрытый ключ RSA,зашифрованный с помощью пароля,может выглядеть следующим образом:</target>
        </trans-unit>
        <trans-unit id="bc7347d7de31b66546bd97686f70b5b899b1f5d0" translate="yes" xml:space="preserve">
          <source>An SFTP client (&lt;code&gt;&lt;a href=&quot;ssh_sftp&quot;&gt;ssh_sftp&lt;/a&gt;&lt;/code&gt;) and server (&lt;code&gt;&lt;a href=&quot;ssh_sftp&quot;&gt;ssh_sftpd&lt;/a&gt;&lt;/code&gt;)</source>
          <target state="translated">Клиент SFTP ( &lt;code&gt;&lt;a href=&quot;ssh_sftp&quot;&gt;ssh_sftp&lt;/a&gt;&lt;/code&gt; ) и сервер ( &lt;code&gt;&lt;a href=&quot;ssh_sftp&quot;&gt;ssh_sftpd&lt;/a&gt;&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="c30ebe58cf85f0d3449f206c0fc62e2bc8c29633" translate="yes" xml:space="preserve">
          <source>An SNMP &lt;strong&gt;community&lt;/strong&gt; is a relationship between an SNMP agent and a set of SNMP managers that defines authentication, access control and proxy characteristics.</source>
          <target state="translated">&lt;strong&gt;Сообщество&lt;/strong&gt; SNMP - это отношения между агентом SNMP и набором менеджеров SNMP, которые определяют аутентификацию, контроль доступа и характеристики прокси.</target>
        </trans-unit>
        <trans-unit id="5c02aa7e99ca473f6341708b73eb0f8e28713993" translate="yes" xml:space="preserve">
          <source>An SNMPv3 agent must implement the SNMP-FRAMEWORK-MIB and SNMP-MPD-MIB. These MIBs are loaded by default, if the agent is configured for SNMPv3. These MIBs can be loaded for other versions as well.</source>
          <target state="translated">Агент SNMPv3 должен реализовать SNMP-FRAMEWORK-MIB и SNMP-MPD-MIB.Эти MIB загружаются по умолчанию,если агент настроен на SNMPv3.Эти MIB могут быть загружены и для других версий.</target>
        </trans-unit>
        <trans-unit id="7e6913d726a46e4ef23b14ab9fbfca01ba07d162" translate="yes" xml:space="preserve">
          <source>An abstract character-based &quot;document&quot; representing a number of possible layouts, which can be processed to produce a single concrete layout. A concrete layout can then be rendered as a sequence of characters containing linebreaks, which can be passed to a printer or terminal that uses a fixed-width font.</source>
          <target state="translated">Абстрактный символьный &quot;документ&quot;,представляющий собой ряд возможных макетов,которые могут быть обработаны для создания единого конкретного макета.Конкретный макет может быть отображен в виде последовательности символов,содержащих разрывы строк,которые могут быть переданы на принтер или терминал,использующий шрифт фиксированной ширины.</target>
        </trans-unit>
        <trans-unit id="5ec400c22d9bf133e13c29bd14a5a46147f57249" translate="yes" xml:space="preserve">
          <source>An abstract syntax tree. See the &lt;code&gt;&lt;a href=&quot;erl_syntax&quot;&gt;erl_syntax&lt;/a&gt;&lt;/code&gt; module for details.</source>
          <target state="translated">Абстрактное синтаксическое дерево. Подробнее &lt;code&gt;&lt;a href=&quot;erl_syntax&quot;&gt;erl_syntax&lt;/a&gt;&lt;/code&gt; Модуль erl_syntax .</target>
        </trans-unit>
        <trans-unit id="1d7ca6b5f69a072fd3b2d3d406795b2d4821be23" translate="yes" xml:space="preserve">
          <source>An abstract syntax tree. The &lt;code&gt;&lt;a href=&quot;#type-erl_parse&quot;&gt;erl_parse()&lt;/a&gt;&lt;/code&gt; &quot;parse tree&quot; representation is a proper subset of the &lt;code&gt;syntaxTree()&lt;/code&gt; representation.</source>
          <target state="translated">Абстрактное синтаксическое дерево. Представление &quot;дерево синтаксического анализа&quot; &lt;code&gt;&lt;a href=&quot;#type-erl_parse&quot;&gt;erl_parse()&lt;/a&gt;&lt;/code&gt; является правильным подмножеством представления &lt;code&gt;syntaxTree()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e5d3cde78159d4684ac47feb70581b71c34485ec" translate="yes" xml:space="preserve">
          <source>An additional filter, &lt;code&gt;integer(X)&lt;/code&gt;, can be added to restrict the result to integers:</source>
          <target state="translated">Можно добавить дополнительный фильтр &lt;code&gt;integer(X)&lt;/code&gt; , чтобы ограничить результат целыми числами:</target>
        </trans-unit>
        <trans-unit id="ce6cdc456e7459d3c957081ebfa2dcff54001d0a" translate="yes" xml:space="preserve">
          <source>An address list is available to the start function of a &lt;code&gt;&lt;a href=&quot;diameter_transport&quot;&gt;transport module&lt;/a&gt;&lt;/code&gt;, which can return a new list for use in the subsequent CER or CEA. Host-IP-Address need not be specified if the transport module in question communicates an address list as described in &lt;code&gt;&lt;a href=&quot;diameter_transport&quot;&gt;diameter_transport(3)&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">Список адресов доступен для функции запуска &lt;code&gt;&lt;a href=&quot;diameter_transport&quot;&gt;transport module&lt;/a&gt;&lt;/code&gt; , который может возвращать новый список для использования в последующих CER или CEA. Host-IP-Address указывать не нужно, если рассматриваемый транспортный модуль передает список адресов, как описано в &lt;code&gt;&lt;a href=&quot;diameter_transport&quot;&gt;diameter_transport(3)&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d1e1407ae2e41532b81ffc2fdaec5e23d7093e2d" translate="yes" xml:space="preserve">
          <source>An agent can have many MIBs loaded at the same time.</source>
          <target state="translated">Агент может загружать много MIB одновременно.</target>
        </trans-unit>
        <trans-unit id="f492d7625cc14110ff6afa2865fa5e903887bda9" translate="yes" xml:space="preserve">
          <source>An agent responds to commands from the manager, and sends notification to the manager. There are potentially many agents in a system.</source>
          <target state="translated">Агент отвечает на команды менеджера и посылает уведомление менеджеру.В системе потенциально много агентов.</target>
        </trans-unit>
        <trans-unit id="ca2e691f8fc810a8b8ce022a203ae58e956a286d" translate="yes" xml:space="preserve">
          <source>An algorithm is selected for computing a secret encryption key. Among examples are: the old nowadays week &lt;code&gt;'diffie-hellman-group-exchange-sha1'&lt;/code&gt; and the very strong and modern &lt;code&gt;'ecdh-sha2-nistp512'&lt;/code&gt;.</source>
          <target state="translated">Выбирается алгоритм вычисления секретного ключа шифрования. Среди примеров: старая ныне неделя &lt;code&gt;'diffie-hellman-group-exchange-sha1'&lt;/code&gt; и очень сильная и современная &lt;code&gt;'ecdh-sha2-nistp512'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="40a51c62e24096d5cc5decd65a67cd1b36502a80" translate="yes" xml:space="preserve">
          <source>An alias for &lt;code&gt;utf8&lt;/code&gt;, as this is the preferred encoding for Unicode characters in binaries.</source>
          <target state="translated">Псевдоним для &lt;code&gt;utf8&lt;/code&gt; , так как это предпочтительная кодировка для символов Unicode в двоичных файлах.</target>
        </trans-unit>
        <trans-unit id="e889063dded89fc29b40235f1212d83a1c277549" translate="yes" xml:space="preserve">
          <source>An alias for &lt;code&gt;{utf16,big}&lt;/code&gt;.</source>
          <target state="translated">Псевдоним для &lt;code&gt;{utf16,big}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2d83d259ee7d8e8db95f58d4f28b7d2b435fc514" translate="yes" xml:space="preserve">
          <source>An alias for &lt;code&gt;{utf32,big}&lt;/code&gt;.</source>
          <target state="translated">Псевдоним для &lt;code&gt;{utf32,big}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="77817f9811fa0bbd6bf15b9e08ba9162578eb833" translate="yes" xml:space="preserve">
          <source>An alias for debug.</source>
          <target state="translated">Псевдоним для отладки.</target>
        </trans-unit>
        <trans-unit id="44d338f0d6e24a84de02e7eea09361912aac703c" translate="yes" xml:space="preserve">
          <source>An alias for none.</source>
          <target state="translated">Псевдоним ни для кого.</target>
        </trans-unit>
        <trans-unit id="47cdcc943c5527c2b6d51204fba8e07c3ec38fe4" translate="yes" xml:space="preserve">
          <source>An allocator manages multiple areas, called carriers, in which memory blocks are placed. A carrier is either placed in a separate memory segment (allocated through &lt;code&gt;mseg_alloc&lt;/code&gt;), or in the heap segment (allocated through &lt;code&gt;sys_alloc&lt;/code&gt;).</source>
          <target state="translated">Распределитель управляет несколькими областями, называемыми носителями, в которых размещаются блоки памяти. Носитель помещается либо в отдельный сегмент памяти (выделенный через &lt;code&gt;mseg_alloc&lt;/code&gt; ), либо в сегмент кучи (выделенный через &lt;code&gt;sys_alloc&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="6febbd430369646d426d8b717469d67277d0bee6" translate="yes" xml:space="preserve">
          <source>An alternative &lt;code&gt;RequestURI&lt;/code&gt; has been generated.</source>
          <target state="translated">Создан альтернативный &lt;code&gt;RequestURI&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ef675fb1db408db7ca8ad5c68c12c4eb53d35683" translate="yes" xml:space="preserve">
          <source>An alternative approach is to use named parentheses instead. The Perl syntax for this is (?&amp;amp;name). The earlier PCRE syntax (?P&amp;gt;name) is also supported. We can rewrite the above example as follows:</source>
          <target state="translated">Альтернативный подход - использовать вместо этого именованные круглые скобки. Синтаксис Perl для этого - (? &amp;amp; Name). Также поддерживается более ранний синтаксис PCRE (? P&amp;gt; name). Мы можем переписать приведенный выше пример следующим образом:</target>
        </trans-unit>
        <trans-unit id="5e8ca0dc7201fb7d51c9dde7758788591e257936" translate="yes" xml:space="preserve">
          <source>An alternative approach using this &quot;branch reset&quot; feature is to use duplicate named subpatterns, as described in the next section.</source>
          <target state="translated">Альтернативный подход с использованием этой функции &quot;сброса ветки&quot; заключается в использовании дубликатов именованных подмастерн,как это описано в следующем разделе.</target>
        </trans-unit>
        <trans-unit id="a0a954e9d1a777f3530d50c8cc1016f12452336b" translate="yes" xml:space="preserve">
          <source>An alternative description is that a subpattern of this type matches the string of characters that an identical standalone pattern would match, if anchored at the current point in the subject string.</source>
          <target state="translated">Альтернативным описанием является то,что подмасказка этого типа совпадает со строкой символов,которым идентичная автономная модель будет соответствовать,если она привязана к текущей точке в строке темы.</target>
        </trans-unit>
        <trans-unit id="9ba8c75b43a6385ab4627c92aea25e2d33f00302" translate="yes" xml:space="preserve">
          <source>An alternative to links are &lt;strong&gt;monitors&lt;/strong&gt;. A process &lt;code&gt;Pid1&lt;/code&gt; can create a monitor for &lt;code&gt;Pid2&lt;/code&gt; by calling the BIF &lt;code&gt;erlang:monitor(process, Pid2)&lt;/code&gt;. The function returns a reference &lt;code&gt;Ref&lt;/code&gt;.</source>
          <target state="translated">Альтернативой ссылкам являются &lt;strong&gt;мониторы&lt;/strong&gt; . Процесс &lt;code&gt;Pid1&lt;/code&gt; может создать монитор для &lt;code&gt;Pid2&lt;/code&gt; , вызвав BIF &lt;code&gt;erlang:monitor(process, Pid2)&lt;/code&gt; . Функция возвращает ссылку &lt;code&gt;Ref&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8533112274eb7c989f917717ae151564846d5862" translate="yes" xml:space="preserve">
          <source>An alternative to the &lt;code&gt;rsh&lt;/code&gt; program can be specified on the command line to &lt;code&gt;erl(1)&lt;/code&gt; as follows:</source>
          <target state="translated">Альтернативу программе &lt;code&gt;rsh&lt;/code&gt; можно указать в командной строке для &lt;code&gt;erl(1)&lt;/code&gt; следующим образом:</target>
        </trans-unit>
        <trans-unit id="a41af40dfe8039be24689b8d9fa5a4dec7a7425d" translate="yes" xml:space="preserve">
          <source>An application &lt;code&gt;myapp&lt;/code&gt; is to run at the node &lt;code&gt;cp1@cave&lt;/code&gt;. If this node goes down, &lt;code&gt;myapp&lt;/code&gt; is to be restarted at &lt;code&gt;cp2@cave&lt;/code&gt; or &lt;code&gt;cp3@cave&lt;/code&gt;. A system configuration file &lt;code&gt;cp1.config&lt;/code&gt; for &lt;code&gt;cp1@cave&lt;/code&gt; can look as follows:</source>
          <target state="translated">Приложение &lt;code&gt;myapp&lt;/code&gt; должно запускаться на узле &lt;code&gt;cp1@cave&lt;/code&gt; . Если этот узел выйдет из &lt;code&gt;cp2@cave&lt;/code&gt; , &lt;code&gt;myapp&lt;/code&gt; необходимо перезапустить на cp2 @ cave или &lt;code&gt;cp3@cave&lt;/code&gt; . Файл конфигурации системы &lt;code&gt;cp1.config&lt;/code&gt; для &lt;code&gt;cp1@cave&lt;/code&gt; может выглядеть следующим образом:</target>
        </trans-unit>
        <trans-unit id="476b23116cd9f8d3580ef27603fba21f5399f9c3" translate="yes" xml:space="preserve">
          <source>An application archive file and a regular application directory can coexist. This can be useful when it is needed to have parts of the application as regular files. A typical case is the &lt;code&gt;priv&lt;/code&gt; directory, which must reside as a regular directory to link in drivers dynamically and start port programs. For other applications that do not need this, directory &lt;code&gt;priv&lt;/code&gt; can reside in the archive and the files under the directory &lt;code&gt;priv&lt;/code&gt; can be read through &lt;code&gt;erl_prim_loader&lt;/code&gt;.</source>
          <target state="translated">Файл архива приложения и обычный каталог приложения могут сосуществовать. Это может быть полезно, когда необходимо, чтобы части приложения были в виде обычных файлов. Типичный случай - это каталог &lt;code&gt;priv&lt;/code&gt; , который должен находиться как обычный каталог для динамического связывания драйверов и запуска программ порта. Для других приложений, которым это не нужно, каталог &lt;code&gt;priv&lt;/code&gt; может находиться в архиве, а файлы в каталоге &lt;code&gt;priv&lt;/code&gt; можно читать с помощью &lt;code&gt;erl_prim_loader&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="81e9ecb32e44895786dfebfa55679adffcc065bb" translate="yes" xml:space="preserve">
          <source>An application can &lt;strong&gt;include&lt;/strong&gt; other applications. An &lt;strong&gt;included application&lt;/strong&gt; has its own application directory and &lt;code&gt;.app&lt;/code&gt; file, but it is started as part of the supervisor tree of another application.</source>
          <target state="translated">Приложение может &lt;strong&gt;включать в себя&lt;/strong&gt; другие приложения. &lt;strong&gt;Включено приложение&lt;/strong&gt; имеет свой собственный каталог приложений и &lt;code&gt;.app&lt;/code&gt; файл, но он запускается как часть супервизора дерева другого приложения.</target>
        </trans-unit>
        <trans-unit id="bbba1c85e48e64885f006fdefa341a6cc281a7c7" translate="yes" xml:space="preserve">
          <source>An application can always be stopped explicitly by calling &lt;code&gt;application:stop/1&lt;/code&gt;. Regardless of the mode, no other applications are affected.</source>
          <target state="translated">Приложение всегда можно остановить явным образом, вызвав &lt;code&gt;application:stop/1&lt;/code&gt; . Независимо от режима, никакие другие приложения не затронуты.</target>
        </trans-unit>
        <trans-unit id="4237e4a4e71361c449280ec1eb5b5ab2013b9c88" translate="yes" xml:space="preserve">
          <source>An application can be configured using &lt;strong&gt;configuration parameters&lt;/strong&gt;. These are a list of &lt;code&gt;{Par,Val}&lt;/code&gt; tuples specified by a key &lt;code&gt;env&lt;/code&gt; in the &lt;code&gt;.app&lt;/code&gt; file:</source>
          <target state="translated">Приложение можно настроить с &lt;strong&gt;помощью параметров конфигурации&lt;/strong&gt; . Это список кортежей &lt;code&gt;{Par,Val}&lt;/code&gt; , определенных ключевым &lt;code&gt;env&lt;/code&gt; в файле &lt;code&gt;.app&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="2e4737552f8acb83cea1b0aaa1c749b9a4b1bebd" translate="yes" xml:space="preserve">
          <source>An application can only be included by one other application.</source>
          <target state="translated">Приложение может быть включено только одним другим приложением.</target>
        </trans-unit>
        <trans-unit id="1b998578ccefe4ab3f65c6754297234509b764f6" translate="yes" xml:space="preserve">
          <source>An application can use the atom &lt;code&gt;asn1_DEFAULT&lt;/code&gt; to indicate that the encoding is to be omitted for that position in the &lt;code&gt;SEQUENCE&lt;/code&gt;.</source>
          <target state="translated">Приложение может использовать атом &lt;code&gt;asn1_DEFAULT&lt;/code&gt; , чтобы указать, что кодировка должна быть опущена для этой позиции в &lt;code&gt;SEQUENCE&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="610dd49b9ed69c0fcdd8e4b86353cb6bb81aba12" translate="yes" xml:space="preserve">
          <source>An application directory &lt;code&gt;AppDir&lt;/code&gt; under a library directory is recognized by the existence of an &lt;code&gt;AppDir/ebin&lt;/code&gt; directory. If this does not exist, Reltool will not consider &lt;code&gt;AppDir&lt;/code&gt; at all when looking for applications.</source>
          <target state="translated">Каталог приложения &lt;code&gt;AppDir&lt;/code&gt; в каталоге библиотеки распознается по наличию &lt;code&gt;AppDir/ebin&lt;/code&gt; . Если он не существует, Reltool вообще не будет учитывать &lt;code&gt;AppDir&lt;/code&gt; при поиске приложений.</target>
        </trans-unit>
        <trans-unit id="11790a3abc0ee5cdb260b3defc07c38712b24580" translate="yes" xml:space="preserve">
          <source>An application has an invalid &lt;code&gt;.app&lt;/code&gt; file. The second element identifies the application which has the invalid &lt;code&gt;.app&lt;/code&gt; file.</source>
          <target state="translated">В приложении есть недопустимый файл &lt;code&gt;.app&lt;/code&gt; . Второй элемент идентифицирует приложение, которое имеет недопустимый файл &lt;code&gt;.app&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b872a6c7b25b61b98a67c571917b77e9c18745dd" translate="yes" xml:space="preserve">
          <source>An application has an invalid application version. The second element identifies the application version that is invalid.</source>
          <target state="translated">Приложение имеет недействительную версию.Второй элемент идентифицирует версию приложения,которая является недействительной.</target>
        </trans-unit>
        <trans-unit id="f6f21f5a29839ae0eb3a520c3267f5725a862871" translate="yes" xml:space="preserve">
          <source>An application is defined by an &lt;strong&gt;application specification&lt;/strong&gt;. The specification is normally located in an &lt;strong&gt;application resource file&lt;/strong&gt; named &lt;code&gt;Application.app&lt;/code&gt;, where &lt;code&gt;Application&lt;/code&gt; is the application name. For details about the application specification, see &lt;code&gt;&lt;a href=&quot;app&quot;&gt;app(4)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Приложение определяется &lt;strong&gt;спецификацией приложения&lt;/strong&gt; . Спецификация обычно находится в &lt;strong&gt;файле ресурсов приложения с&lt;/strong&gt; именем &lt;code&gt;Application.app&lt;/code&gt; , где &lt;code&gt;Application&lt;/code&gt; - это имя приложения. Подробные сведения о спецификации &lt;code&gt;&lt;a href=&quot;app&quot;&gt;app(4)&lt;/a&gt;&lt;/code&gt; см. В приложении (4) .</target>
        </trans-unit>
        <trans-unit id="35cc8d34265eba507b77d8ce059b8e74c5366d40" translate="yes" xml:space="preserve">
          <source>An application is missing &lt;code&gt;runtime dependencies&lt;/code&gt;. The second element identifies the application (with version) that has missing dependencies. The third element contains the missing dependencies.</source>
          <target state="translated">В приложении отсутствуют &lt;code&gt;runtime dependencies&lt;/code&gt; . Второй элемент определяет приложение (с версией), у которого отсутствуют зависимости. Третий элемент содержит недостающие зависимости.</target>
        </trans-unit>
        <trans-unit id="de2d6a9e6ff979b71cea277fe00e98011788f397" translate="yes" xml:space="preserve">
          <source>An application is started by calling:</source>
          <target state="translated">Приложение запускается по вызову:</target>
        </trans-unit>
        <trans-unit id="2fec5bb7dc2630ef6ad69450c1671267747da522" translate="yes" xml:space="preserve">
          <source>An application is stopped, but not unloaded, by calling:</source>
          <target state="translated">Приложение останавливается,но не выгружается по вызову:</target>
        </trans-unit>
        <trans-unit id="bce15355fd14cfb6694d5cb7ccae2f7417ded65c" translate="yes" xml:space="preserve">
          <source>An application started the function &lt;code&gt;&lt;a href=&quot;mnesia#report_event-1&quot;&gt;mnesia:report_event(Event)&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;Event&lt;/code&gt; can be any Erlang data structure. When tracing a system of &lt;code&gt;Mnesia&lt;/code&gt; applications, it is useful to be able to interleave own events of &lt;code&gt;Mnesia&lt;/code&gt; with application-related events that give information about the application context. Whenever the application starts with a new and demanding &lt;code&gt;Mnesia&lt;/code&gt; activity, or enters a new and interesting phase in its execution, it can be a good idea to use &lt;code&gt;mnesia:report_event/1&lt;/code&gt;.</source>
          <target state="translated">Приложение запустило функцию &lt;code&gt;&lt;a href=&quot;mnesia#report_event-1&quot;&gt;mnesia:report_event(Event)&lt;/a&gt;&lt;/code&gt; . &lt;code&gt;Event&lt;/code&gt; может быть любой структурой данных Erlang. При отслеживании системы приложений &lt;code&gt;Mnesia&lt;/code&gt; полезно иметь возможность чередовать собственные события &lt;code&gt;Mnesia&lt;/code&gt; с событиями, связанными с приложениями, которые предоставляют информацию о контексте приложения. Каждый раз, когда приложение запускается с новой и требовательной &lt;code&gt;Mnesia&lt;/code&gt; или входит в новую и интересную фазу своего выполнения, может быть хорошей идеей использовать &lt;code&gt;mnesia:report_event/1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f14ca986d2f7db147026ee6782679a5a03b84408" translate="yes" xml:space="preserve">
          <source>An application that has been stopped, or has never been started, can be unloaded. The information about the application is erased from the internal database of the application controller.</source>
          <target state="translated">Приложение,которое было остановлено или никогда не запускалось,может быть выгружено.Информация о приложении стирается из внутренней базы данных контроллера приложений.</target>
        </trans-unit>
        <trans-unit id="c9401bc6499ac0973c3774424958a83ea895fc37" translate="yes" xml:space="preserve">
          <source>An application that is not included by any other application is called a &lt;strong&gt;primary application&lt;/strong&gt;.</source>
          <target state="translated">Приложение, которое не включено ни в одно другое приложение, называется &lt;strong&gt;основным приложением&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="6d9139252544974ea454236628ab9eb7e354e643" translate="yes" xml:space="preserve">
          <source>An application that needs to import this MIB into another MIB is to use the &lt;code&gt;il&lt;/code&gt; option to the SNMP MIB compiler:</source>
          <target state="translated">Приложение, которому необходимо импортировать этот MIB в другой MIB, должно использовать параметр &lt;code&gt;il&lt;/code&gt; в компиляторе SNMP MIB:</target>
        </trans-unit>
        <trans-unit id="aedbc71f0d851c4a267d3a1c0c5aaf62f7d4dba9" translate="yes" xml:space="preserve">
          <source>An application version or an OTP version identifies source code versions. That is, it implies nothing about how the application or OTP has been built.</source>
          <target state="translated">Версия приложения или версия OTP идентифицирует версии исходного кода.То есть,она ничего не подразумевает о том,как было собрано приложение или OTP.</target>
        </trans-unit>
        <trans-unit id="0f4a2e38a016cb917aa540b614b135781aa21ea6" translate="yes" xml:space="preserve">
          <source>An application with processes is easiest implemented as a supervision tree using the standard behaviours.</source>
          <target state="translated">Приложение с процессами проще всего реализовать в виде дерева наблюдения с использованием стандартных поведений.</target>
        </trans-unit>
        <trans-unit id="66dea70011adf556837c53a3cf0529342b0737a2" translate="yes" xml:space="preserve">
          <source>An arbitrary term of meaning only to the transport process in question, as documented in &lt;code&gt;&lt;a href=&quot;diameter_transport&quot;&gt;diameter_transport(3)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Произвольный термин, имеющий значение только для рассматриваемого процесса транспортировки, как описано в &lt;code&gt;&lt;a href=&quot;diameter_transport&quot;&gt;diameter_transport(3)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bd2f0e142f69d7ddafd6b4e615512721bf634753" translate="yes" xml:space="preserve">
          <source>An archive file for an application can, for example, be created like this:</source>
          <target state="translated">Архивный файл приложения можно,например,создать таким образом:</target>
        </trans-unit>
        <trans-unit id="893f8dfc800bfa1b0e951f0e6684d0ff5c925843" translate="yes" xml:space="preserve">
          <source>An arithmetic expression can be used within a pattern if it meets both of the following two conditions:</source>
          <target state="translated">Арифметическое выражение может быть использовано внутри шаблона,если оно удовлетворяет обоим из следующих двух условий:</target>
        </trans-unit>
        <trans-unit id="c099d0285433de3759b9f43727e0ca89ef8d8154" translate="yes" xml:space="preserve">
          <source>An assertion is a test on the characters following or preceding the current matching point that does not consume any characters. The simple assertions coded as \b, \B, \A, \G, \Z, \z, ^, and $ are described in the previous sections.</source>
          <target state="translated">Утверждение-это тест на символы,следующие за или предшествующие текущей точке совпадения,не потребляющие никаких символов.Простые утверждения,закодированные как \b,\B,\A,\G,\Z,\z,^ и $,описаны в предыдущих разделах.</target>
        </trans-unit>
        <trans-unit id="978ae9153d3b935114d56f1e2ba916c150175de4" translate="yes" xml:space="preserve">
          <source>An association A is one of the following:</source>
          <target state="translated">Ассоциация А-одна из следующих:</target>
        </trans-unit>
        <trans-unit id="fdf937e643d3d794f4dfc3d3b0be30aaa9ddfa6d" translate="yes" xml:space="preserve">
          <source>An atom is a literal, a constant with name. An atom is to be enclosed in single quotes (') if it does not begin with a lower-case letter or if it contains other characters than alphanumeric characters, underscore (_), or @.</source>
          <target state="translated">Атом-это буквально,константа с именем.Атом должен быть заключен в кавычки ('),если он не начинается с строчной буквы или содержит другие символы,кроме буквенно-цифровых,подчеркивания (_)или @.</target>
        </trans-unit>
        <trans-unit id="8c8ee9420b38206282974e3cd3d3b4d8640789fe" translate="yes" xml:space="preserve">
          <source>An atom is stored with a 1 byte unsigned length, followed by &lt;code&gt;Len&lt;/code&gt; bytes containing the &lt;code&gt;AtomName&lt;/code&gt; encoded in UTF-8. Longer atoms encoded in UTF-8 can be represented using &lt;code&gt;&lt;a href=&quot;#ATOM_UTF8_EXT&quot;&gt;ATOM_UTF8_EXT&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Атом хранится с длиной без знака 1 байт, за которым следуют байты &lt;code&gt;Len&lt;/code&gt; , содержащие &lt;code&gt;AtomName&lt;/code&gt; в кодировке UTF-8. Более длинные атомы, закодированные в UTF-8, могут быть представлены с помощью &lt;code&gt;&lt;a href=&quot;#ATOM_UTF8_EXT&quot;&gt;ATOM_UTF8_EXT&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f5b4b168d4917cd1441088fb0d3d767f247862aa" translate="yes" xml:space="preserve">
          <source>An atom is stored with a 1 byte unsigned length, followed by &lt;code&gt;Len&lt;/code&gt; numbers of 8-bit Latin-1 characters that forms the &lt;code&gt;AtomName&lt;/code&gt;.</source>
          <target state="translated">Атом хранится с длиной без знака 1 байт, за которой следуют числа &lt;code&gt;Len&lt;/code&gt; из 8-битных символов Latin-1, которые образуют &lt;code&gt;AtomName&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="07c34b58920482b4d31c13cdc559df7d2359423e" translate="yes" xml:space="preserve">
          <source>An atom is stored with a 2 byte unsigned length in big-endian order, followed by &lt;code&gt;Len&lt;/code&gt; bytes containing the &lt;code&gt;AtomName&lt;/code&gt; encoded in UTF-8.</source>
          <target state="translated">Атом хранится с длиной без знака 2 байта в обратном порядке, за которым следуют байты &lt;code&gt;Len&lt;/code&gt; , содержащие &lt;code&gt;AtomName&lt;/code&gt; в кодировке UTF-8.</target>
        </trans-unit>
        <trans-unit id="025e110ec6c6fcee1721f7cbcbad132a16cef024" translate="yes" xml:space="preserve">
          <source>An atom is stored with a 2 byte unsigned length in big-endian order, followed by &lt;code&gt;Len&lt;/code&gt; numbers of 8-bit Latin-1 characters that forms the &lt;code&gt;AtomName&lt;/code&gt;. The maximum allowed value for &lt;code&gt;Len&lt;/code&gt; is 255.</source>
          <target state="translated">Атом хранится с двухбайтовой длиной без знака в прямом порядке байтов, за которым следуют номера &lt;code&gt;Len&lt;/code&gt; из 8-битных символов Latin-1, которые образуют &lt;code&gt;AtomName&lt;/code&gt; . Максимально допустимое значение для &lt;code&gt;Len&lt;/code&gt; - 255.</target>
        </trans-unit>
        <trans-unit id="b431bae2fda8c033fdb39409998689e38c1c1e1e" translate="yes" xml:space="preserve">
          <source>An atom refers into an atom table, which also consumes memory. The atom text is stored once for each unique atom in this table. The atom table is &lt;strong&gt;not&lt;/strong&gt; garbage-collected.</source>
          <target state="translated">Атом ссылается на таблицу атомов, которая также потребляет память. Текст атома сохраняется один раз для каждого уникального атома в этой таблице. Таблица атомов &lt;strong&gt;не&lt;/strong&gt; собирается сборщиком мусора.</target>
        </trans-unit>
        <trans-unit id="8a0191848aafc2915da6d60330900193c80a5474" translate="yes" xml:space="preserve">
          <source>An atom that is named from the POSIX error codes used in Unix, and in the runtime libraries of most C compilers.</source>
          <target state="translated">Атом,названный по кодам ошибок POSIX,используемым в Unix и в библиотеках времени исполнения большинства компиляторов Си.</target>
        </trans-unit>
        <trans-unit id="96460aed347ebf24b2ed9071452af314293b4756" translate="yes" xml:space="preserve">
          <source>An atom that is named from the POSIX error codes used in Unix, and in the runtime libraries of most C compilers. See section &lt;code&gt;&lt;a href=&quot;#error_codes&quot;&gt;POSIX Error Codes&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Атом, названный из кодов ошибок POSIX, используемых в Unix и в библиотеках времени выполнения большинства компиляторов C. See section &lt;code&gt;&lt;a href=&quot;#error_codes&quot;&gt;POSIX Error Codes&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9e8843a0acaa52daf81257b21ad8836b998c8089" translate="yes" xml:space="preserve">
          <source>An earlier application version to downgrade to. If it is a string, it is interpreted as a specific version number. If it is a binary, it is interpreted as a regular expression that can match multiple version numbers.</source>
          <target state="translated">Более ранняя версия приложения для понижения рейтинга до.Если это строка,то она интерпретируется как конкретный номер версии.Если это бинарное выражение,оно интерпретируется как регулярное выражение,которое может соответствовать нескольким номерам версий.</target>
        </trans-unit>
        <trans-unit id="63ac8cc2733af5ba4520a25e1a0a5d26e1de0048" translate="yes" xml:space="preserve">
          <source>An earlier application version to upgrade from. If it is a string, it is interpreted as a specific version number. If it is a binary, it is interpreted as a regular expression that can match multiple version numbers.</source>
          <target state="translated">Более ранняя версия приложения для обновления с.Если это строка,то она интерпретируется как конкретный номер версии.Если это бинарное выражение,оно интерпретируется как регулярное выражение,которое может совпадать с несколькими номерами версий.</target>
        </trans-unit>
        <trans-unit id="86d25cc1b1c119f7c9ce21b1b20f631ca251d2b2" translate="yes" xml:space="preserve">
          <source>An earlier example pointed out that the following pattern matches &quot;sense and sensibility&quot; and &quot;response and responsibility&quot;, but not &quot;sense and responsibility&quot;:</source>
          <target state="translated">В одном из более ранних примеров указывалось,что следующий образец совпадает с &quot;чувством и чувствительностью&quot; и &quot;реакцией и ответственностью&quot;,но не с &quot;чувством и ответственностью&quot;:</target>
        </trans-unit>
        <trans-unit id="c42c79091566f1fa867808f3997379fa20e2ae07" translate="yes" xml:space="preserve">
          <source>An easier way to do this is to use &lt;code&gt;&lt;a href=&quot;erlang#monotonic_time-1&quot;&gt;erlang:monotonic_time/1&lt;/a&gt;&lt;/code&gt; with the desired time unit. However, you can then lose accuracy and precision.</source>
          <target state="translated">Более простой способ сделать это - использовать &lt;code&gt;&lt;a href=&quot;erlang#monotonic_time-1&quot;&gt;erlang:monotonic_time/1&lt;/a&gt;&lt;/code&gt; с желаемой единицей времени. Однако вы можете потерять точность и точность.</target>
        </trans-unit>
        <trans-unit id="f3e6d13ae9ee54a2968464f59c022d1a0a22fec2" translate="yes" xml:space="preserve">
          <source>An edge e = (v, w) is said to &lt;strong id=&quot;emanate&quot;&gt;emanate&lt;/strong&gt; from vertex v and to be &lt;strong id=&quot;incident&quot;&gt;incident&lt;/strong&gt; on vertex w.</source>
          <target state="translated">Говорят, что ребро e = (v, w) &lt;strong id=&quot;emanate&quot;&gt;исходит&lt;/strong&gt; из вершины v и &lt;strong id=&quot;incident&quot;&gt;инцидентно&lt;/strong&gt; вершине w.</target>
        </trans-unit>
        <trans-unit id="172599b2aba9fdd5cd8e0641d69258937859fbb4" translate="yes" xml:space="preserve">
          <source>An employee works at a department, hence the &lt;code&gt;at_dep&lt;/code&gt; relationship.</source>
          <target state="translated">Сотрудник работает в отделе, отсюда и отношение &lt;code&gt;at_dep&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="536601c2cbcd6150b3784edaf6a33c2948983d16" translate="yes" xml:space="preserve">
          <source>An empty list &lt;code&gt;[]&lt;/code&gt;. This is equivalent to passing &lt;code&gt;none&lt;/code&gt;.</source>
          <target state="translated">Пустой список &lt;code&gt;[]&lt;/code&gt; . Это эквивалентно &lt;code&gt;none&lt;/code&gt; передачи .</target>
        </trans-unit>
        <trans-unit id="da49af945864fc175e1244b31cb186e75a716158" translate="yes" xml:space="preserve">
          <source>An empty map is constructed by not associating any terms with each other:</source>
          <target state="translated">Пустая карта строится без привязки каких-либо терминов друг к другу:</target>
        </trans-unit>
        <trans-unit id="20bc15d4624ad61f2625ada525d5ff17ad373837" translate="yes" xml:space="preserve">
          <source>An empty match spec deactivates tracing of calls to &lt;code&gt;et:trace_me/4,5&lt;/code&gt;</source>
          <target state="translated">Пустая спецификация соответствия деактивирует отслеживание вызовов &lt;code&gt;et:trace_me/4,5&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f0f2a6b5cf3bee32b54e68dd8605481238a3fa00" translate="yes" xml:space="preserve">
          <source>An empty schema must be initialized on all the participating nodes.</source>
          <target state="translated">Пустая схема должна быть инициализирована на всех участвующих узлах.</target>
        </trans-unit>
        <trans-unit id="82d8e46ec9a0b6406017d5e01235b4160883931e" translate="yes" xml:space="preserve">
          <source>An empty string is interpreted as local time. The values &lt;code&gt;&quot;Z&quot;&lt;/code&gt;, &lt;code&gt;&quot;z&quot;&lt;/code&gt; or &lt;code&gt;0&lt;/code&gt; are interpreted as Universal Coordinated Time (UTC).</source>
          <target state="translated">Пустая строка интерпретируется как местное время. Значения &lt;code&gt;&quot;Z&quot;&lt;/code&gt; , &lt;code&gt;&quot;z&quot;&lt;/code&gt; или &lt;code&gt;0&lt;/code&gt; интерпретируются как универсальное координированное время (UTC).</target>
        </trans-unit>
        <trans-unit id="67b4376e4a5d5d2b6491c06b36b24207239ad5a6" translate="yes" xml:space="preserve">
          <source>An empty string is not considered to be a valid match if this option is specified. If alternatives in the pattern exist, they are tried. If all the alternatives match the empty string, the entire match fails.</source>
          <target state="translated">Пустая строка не считается достоверным совпадением,если указан этот параметр.Если в шаблоне имеются альтернативы,то они пробуются.Если все альтернативы совпадают с пустой строкой,полное совпадение не удается.</target>
        </trans-unit>
        <trans-unit id="ede47d5a8df58bc759c031e79f49d50dd3d6152e" translate="yes" xml:space="preserve">
          <source>An emulation of the &lt;code&gt;get_line&lt;/code&gt; request can be (inefficiently) implemented using the following functions:</source>
          <target state="translated">Эмуляция &lt;code&gt;get_line&lt;/code&gt; запроса может быть (неэффективной) реализована с использованием следующих функций:</target>
        </trans-unit>
        <trans-unit id="769ee572886ec7114895ada8db85a98957037066" translate="yes" xml:space="preserve">
          <source>An engine could among other tasks provide a storage for private or public keys. Such a storage could be made safer than the normal file system. Thoose techniques are not described in this User's Guide. Here we concentrate on how to use private or public keys stored in such an engine.</source>
          <target state="translated">Двигатель может,среди прочих задач,обеспечивать хранение частных или публичных ключей.Такое хранилище можно было бы сделать более безопасным,чем обычная файловая система.Методы взлома не описаны в этом руководстве пользователя.Здесь мы сосредоточимся на том,как использовать частные или публичные ключи,хранящиеся в таком движке.</target>
        </trans-unit>
        <trans-unit id="de3c35730fbd4317113e17cb1a8316aa1ba146c4" translate="yes" xml:space="preserve">
          <source>An entry &lt;code&gt;init&lt;/code&gt; is called when the driver is loaded. However, we do not use this, as it is executed only once, and we want to have the possibility of several instances of the driver.</source>
          <target state="translated">Запись &lt;code&gt;init&lt;/code&gt; вызывается при загрузке драйвера. Однако мы не используем это, поскольку оно выполняется только один раз, и мы хотим иметь возможность использования нескольких экземпляров драйвера.</target>
        </trans-unit>
        <trans-unit id="f8c9e3c9a42748333730203820467c57427c23cd" translate="yes" xml:space="preserve">
          <source>An entry in the &lt;code&gt;snmpNotifyTable&lt;/code&gt; selects a set of management targets, which should receive notifications, as well as the type (trap or inform) of notification that should be sent to each selected management target. When an application sends a notification using the function &lt;code&gt;send_notification/5&lt;/code&gt; or the function &lt;code&gt;send_trap&lt;/code&gt; the parameter &lt;code&gt;NotifyName&lt;/code&gt;, specified in the call, is used as an index in the table. The notification is sent to the management targets selected by that entry.</source>
          <target state="translated">Запись в &lt;code&gt;snmpNotifyTable&lt;/code&gt; выбирает набор целей управления, которые должны получать уведомления, а также тип (прерывание или информирование) уведомления, которое должно быть отправлено каждой выбранной цели управления. Когда приложение отправляет уведомление с помощью функции &lt;code&gt;send_notification/5&lt;/code&gt; или функции &lt;code&gt;send_trap&lt;/code&gt; , параметр &lt;code&gt;NotifyName&lt;/code&gt; , указанный в вызове, используется в качестве индекса в таблице. Уведомление отправляется целям управления, выбранным этой записью.</target>
        </trans-unit>
        <trans-unit id="d30f9a9d06d4cdda3d95205ef3f8e3559b78ed6a" translate="yes" xml:space="preserve">
          <source>An entry in the &lt;code&gt;snmpTargetAddrTable&lt;/code&gt; defines transport parameters (such as IP address and UDP port) for each management target. Each row in the &lt;code&gt;snmpNotifyTable&lt;/code&gt; refers to potentially many rows in the &lt;code&gt;snmpTargetAddrTable&lt;/code&gt;. Each row in the &lt;code&gt;snmpTargetAddrTable&lt;/code&gt; refers to an entry in the &lt;code&gt;snmpTargetParamsTable&lt;/code&gt;.</source>
          <target state="translated">Запись в &lt;code&gt;snmpTargetAddrTable&lt;/code&gt; определяет транспортные параметры (такие как IP-адрес и порт UDP) для каждой цели управления. Каждая строка в &lt;code&gt;snmpNotifyTable&lt;/code&gt; ссылается на потенциально много строк в &lt;code&gt;snmpTargetAddrTable&lt;/code&gt; . Каждая строка в &lt;code&gt;snmpTargetAddrTable&lt;/code&gt; ссылается на запись в &lt;code&gt;snmpTargetParamsTable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c864a3c020fb7453c6c9230310fc8c808b2ea57f" translate="yes" xml:space="preserve">
          <source>An entry in the &lt;code&gt;snmpTargetParamsTable&lt;/code&gt; defines which SNMP version to use, and which security parameters to use.</source>
          <target state="translated">Запись в &lt;code&gt;snmpTargetParamsTable&lt;/code&gt; определяет, какую версию SNMP использовать и какие параметры безопасности использовать.</target>
        </trans-unit>
        <trans-unit id="c6d027e6ae888a87324f48f2f95ccca79a8943b4" translate="yes" xml:space="preserve">
          <source>An enum is defined for the different types of ports:</source>
          <target state="translated">Перечень определяется для различных типов портов:</target>
        </trans-unit>
        <trans-unit id="112db680b6814a15cbebf4072e243401d2d30dc2" translate="yes" xml:space="preserve">
          <source>An enumeration of the options that can be specified to &lt;code&gt;&lt;a href=&quot;#enif_binary_to_term&quot;&gt;enif_binary_to_term&lt;/a&gt;&lt;/code&gt;. For default behavior, use value &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">Перечисление параметров, которые можно указать для &lt;code&gt;&lt;a href=&quot;#enif_binary_to_term&quot;&gt;enif_binary_to_term&lt;/a&gt;&lt;/code&gt; . Для поведения по умолчанию используйте значение &lt;code&gt;0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6252cac5ba4fabe28fb4f86a057202e9f901cf22" translate="yes" xml:space="preserve">
          <source>An enumeration of the properties that can be requested from &lt;code&gt;&lt;a href=&quot;#enif_make_unique_integer&quot;&gt;enif_make_unique_integer&lt;/a&gt;&lt;/code&gt;. For default properties, use value &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">Перечисление свойств, которые могут быть запрошены у &lt;code&gt;&lt;a href=&quot;#enif_make_unique_integer&quot;&gt;enif_make_unique_integer&lt;/a&gt;&lt;/code&gt; . Для свойств по умолчанию используйте значение &lt;code&gt;0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="65635c741693783b8faf9619014d7e4c157b5504" translate="yes" xml:space="preserve">
          <source>An enumeration of the supported hash types that can be generated using &lt;code&gt;&lt;a href=&quot;#enif_hash&quot;&gt;enif_hash&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Перечисление поддерживаемых типов хэшей, которые могут быть сгенерированы с помощью &lt;code&gt;&lt;a href=&quot;#enif_hash&quot;&gt;enif_hash&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a0579ec30b9bde18751f5dc44f0719d4615425a5" translate="yes" xml:space="preserve">
          <source>An enumeration of time units supported by the NIF API:</source>
          <target state="translated">Перечень единиц времени,поддерживаемых API NIF:</target>
        </trans-unit>
        <trans-unit id="168bb5a8fd94c8cd10d8ed3f141a0191574b88ed" translate="yes" xml:space="preserve">
          <source>An enumeration of time units supported by the driver API:</source>
          <target state="translated">Перечень единиц времени,поддерживаемых API драйвера:</target>
        </trans-unit>
        <trans-unit id="5667406f6f2878a322440a8811e0537af3474b50" translate="yes" xml:space="preserve">
          <source>An erroneous port driver causes the entire Erlang runtime system to leak memory, hang or crash.</source>
          <target state="translated">Ошибочный драйвер порта приводит к утечке памяти,зависанию или аварийному завершению работы всей системы Erlang.</target>
        </trans-unit>
        <trans-unit id="a25480ae66be12a6963d7a72edaa77057ebfd25a" translate="yes" xml:space="preserve">
          <source>An erroneously implemented driver callback can cause a VM internal state inconsistency, which can cause a crash of the VM, or miscellaneous misbehaviors of the VM at any point after the call to the driver callback.</source>
          <target state="translated">Ошибочно реализованный обратный вызов драйвера может привести к несоответствию внутреннего состояния ВМ,что может привести к аварийному завершению работы ВМ,или к различным ошибкам в работе ВМ в любой момент после вызова драйвера.</target>
        </trans-unit>
        <trans-unit id="b8892af8dce296a6140e1075e6fda16d2be53087" translate="yes" xml:space="preserve">
          <source>An erroneously implemented native function can cause a VM internal state inconsistency, which can cause a crash of the VM, or miscellaneous misbehaviors of the VM at any point after the call to the native function.</source>
          <target state="translated">Ошибочно реализованная нативная функция может привести к несоответствию внутреннего состояния ВМ,что может привести к падению ВМ,или к различным нарушениям поведения ВМ в любой момент после вызова нативной функции.</target>
        </trans-unit>
        <trans-unit id="7e29ee9045f599d9ba3e88fde145184df3fac58d" translate="yes" xml:space="preserve">
          <source>An error (preferably &lt;code&gt;enotsup&lt;/code&gt;) is to be expected if the option is not supported by the I/O server (like if an &lt;code&gt;echo&lt;/code&gt; option is sent in a &lt;code&gt;setopts&lt;/code&gt; request to a plain file).</source>
          <target state="translated">Ошибка (предпочтительно &lt;code&gt;enotsup&lt;/code&gt; ) должна ожидаться, если опция не поддерживается сервером ввода-вывода (например, если опция &lt;code&gt;echo&lt;/code&gt; отправляется в запросе &lt;code&gt;setopts&lt;/code&gt; в простой файл).</target>
        </trans-unit>
        <trans-unit id="ef53805af65d4aec1042beb62bf786a927bf0949" translate="yes" xml:space="preserve">
          <source>An error in the token, &lt;code&gt;ErrString&lt;/code&gt; is a string describing the error.</source>
          <target state="translated">Ошибка в токене, &lt;code&gt;ErrString&lt;/code&gt; - это строка с описанием ошибки.</target>
        </trans-unit>
        <trans-unit id="9675f812e2ec4204b8069b26c2c16fc3d11e7e72" translate="yes" xml:space="preserve">
          <source>An error is generated if a POSIX character class (see below) or an escape sequence other than one that defines a single character appears at a point where a range ending character is expected. For example, [z-\xff] is valid, but [A-\d] and [A-[:digit:]] are not.</source>
          <target state="translated">Ошибка возникает,если в точке,где ожидается символ окончания диапазона,появляется POSIX-символьный класс (см.ниже)или экранирующая последовательность,отличная от той,которая определяет один символ.Например,[z-\xff]является допустимым,а [A-\d]и [A-[:цифра:]]-нет.</target>
        </trans-unit>
        <trans-unit id="70ffc117acf0983da95ec8d6661c1771f05359ce" translate="yes" xml:space="preserve">
          <source>An error is returned if the file is inaccessible, badly damaged, or not produced with &lt;code&gt;&lt;a href=&quot;#tab2file-2&quot;&gt;tab2file/2&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#tab2file-3&quot;&gt;tab2file/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Ошибка возвращается, если файл недоступен, сильно поврежден или создан не с помощью &lt;code&gt;&lt;a href=&quot;#tab2file-2&quot;&gt;tab2file/2&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;#tab2file-3&quot;&gt;tab2file/3&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f4fccfc1950a3f6ff91e3d72c1993a335c05397b" translate="yes" xml:space="preserve">
          <source>An error message from Yecc will be shown if the grammar is not of the LALR type (for example too ambiguous). Shift/reduce conflicts are resolved in favor of shifting if there are no operator precedence declarations. Refer to the &lt;code&gt;yacc&lt;/code&gt; documentation on the use of operator precedence.</source>
          <target state="translated">Сообщение об ошибке от Yecc будет показано, если грамматика не относится к типу LALR (например, слишком неоднозначна). Конфликты сдвига / уменьшения разрешаются в пользу сдвига, если нет деклараций приоритета операторов. Обратитесь к документации &lt;code&gt;yacc&lt;/code&gt; об использовании приоритета операторов.</target>
        </trans-unit>
        <trans-unit id="31c2414153ba301793b3dd12a7fe55e753d09f20" translate="yes" xml:space="preserve">
          <source>An error occurred and parameter &lt;code&gt;What&lt;/code&gt; gives a hint about the error.</source>
          <target state="translated">Произошла ошибка, и параметр &lt;code&gt;What&lt;/code&gt; дает подсказку об ошибке.</target>
        </trans-unit>
        <trans-unit id="b554e8c8ed24e5d9bc17d2154801582fa6248c31" translate="yes" xml:space="preserve">
          <source>An error occurred when interpreting the Erlang expressions in the file. To convert the three-element tuple to an English description of the error, use &lt;code&gt;&lt;a href=&quot;#format_error-1&quot;&gt;format_error/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Произошла ошибка при интерпретации выражений Erlang в файле. Чтобы преобразовать трехэлементный кортеж в описание ошибки на английском языке, используйте &lt;code&gt;&lt;a href=&quot;#format_error-1&quot;&gt;format_error/1&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="767d840af8cc500417913c45ac5faa2d43fc36cf" translate="yes" xml:space="preserve">
          <source>An error occurred when interpreting the Erlang expressions in the file. Use &lt;code&gt;&lt;a href=&quot;#format_error-1&quot;&gt;format_error/1&lt;/a&gt;&lt;/code&gt; to convert the three-element tuple to an English description of the error.</source>
          <target state="translated">Произошла ошибка при интерпретации выражений Erlang в файле. Используйте &lt;code&gt;&lt;a href=&quot;#format_error-1&quot;&gt;format_error/1&lt;/a&gt;&lt;/code&gt; , чтобы преобразовать трехэлементный кортеж в английское описание ошибки.</target>
        </trans-unit>
        <trans-unit id="08fb924c8d5034ec7f5547cd83f8fcb4ccca9d79" translate="yes" xml:space="preserve">
          <source>An error occurred when interpreting the Erlang terms in the file. To convert the three-element tuple to an English description of the error, use &lt;code&gt;&lt;a href=&quot;#format_error-1&quot;&gt;format_error/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Произошла ошибка при интерпретации терминов Erlang в файле. Чтобы преобразовать трехэлементный кортеж в описание ошибки на английском языке, используйте &lt;code&gt;&lt;a href=&quot;#format_error-1&quot;&gt;format_error/1&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="33ce206664f8a29d19d98811cc9c199fb73695df" translate="yes" xml:space="preserve">
          <source>An error occurred when interpreting the Erlang terms in the file. Use &lt;code&gt;&lt;a href=&quot;#format_error-1&quot;&gt;format_error/1&lt;/a&gt;&lt;/code&gt; to convert the three-element tuple to an English description of the error.</source>
          <target state="translated">Произошла ошибка при интерпретации терминов Erlang в файле. Используйте &lt;code&gt;&lt;a href=&quot;#format_error-1&quot;&gt;format_error/1&lt;/a&gt;&lt;/code&gt; , чтобы преобразовать трехэлементный кортеж в английское описание ошибки.</target>
        </trans-unit>
        <trans-unit id="d42f0460cf512a9c365e9827248b96d2dd4f4f2b" translate="yes" xml:space="preserve">
          <source>An error occurred when opening the file or reading it. For a list of typical error codes, see &lt;code&gt;&lt;a href=&quot;#open-2&quot;&gt;open/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Произошла ошибка при открытии файла или его чтении. Список типичных кодов ошибок см. В &lt;code&gt;&lt;a href=&quot;#open-2&quot;&gt;open/2&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="865e7e88d043baea59e5a9ce2c7bdc0ec2a285ad" translate="yes" xml:space="preserve">
          <source>An error occurred while tokenizing or parsing.</source>
          <target state="translated">Ошибка произошла при токенировании или разборе.</target>
        </trans-unit>
        <trans-unit id="4c273a93c70896df1c5d70c89b20ce9bedbd1cc9" translate="yes" xml:space="preserve">
          <source>An error occurred while tokenizing.</source>
          <target state="translated">Во время токенирования произошла ошибка.</target>
        </trans-unit>
        <trans-unit id="bccc6f1f5cca72606032b0c35b12d1e01e8749d0" translate="yes" xml:space="preserve">
          <source>An error occurred.</source>
          <target state="translated">Произошла ошибка.</target>
        </trans-unit>
        <trans-unit id="956fbfe776acc43caa6cf6b2b6cd39d20367cfeb" translate="yes" xml:space="preserve">
          <source>An error occurred. &lt;code&gt;ErrorLocation&lt;/code&gt; is the first location after the erroneous token.</source>
          <target state="translated">Произошла ошибка. &lt;code&gt;ErrorLocation&lt;/code&gt; - это первое местоположение после ошибочного токена.</target>
        </trans-unit>
        <trans-unit id="b5debc76cc659427400c33c7089e9a450f8d6749" translate="yes" xml:space="preserve">
          <source>An error occurred. &lt;code&gt;LeftOverChars&lt;/code&gt; is the remaining characters of the input data, starting from &lt;code&gt;EndLocation&lt;/code&gt;.</source>
          <target state="translated">Произошла ошибка. &lt;code&gt;LeftOverChars&lt;/code&gt; - это оставшиеся символы входных данных, начиная с &lt;code&gt;EndLocation&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b04e7309a02162567e2429e9aecf5da14464d91f" translate="yes" xml:space="preserve">
          <source>An error with this reason is caused by the user &lt;code&gt;&lt;a href=&quot;megaco_user#connect&quot;&gt;handle_connect&lt;/a&gt;&lt;/code&gt; callback function either returning an error or an invalid value.</source>
          <target state="translated">Ошибка по этой причине вызвана функцией обратного вызова &lt;code&gt;&lt;a href=&quot;megaco_user#connect&quot;&gt;handle_connect&lt;/a&gt;&lt;/code&gt; пользователя, которая либо возвращает ошибку, либо недопустимое значение.</target>
        </trans-unit>
        <trans-unit id="6c4ed44541e86a0e82fda185481726a9fa534460" translate="yes" xml:space="preserve">
          <source>An error with this reason is generated by the megaco application itself.</source>
          <target state="translated">Ошибка по этой причине генерируется самим приложением megaco.</target>
        </trans-unit>
        <trans-unit id="40f386a85299f082984b2271fcfb815a37ab5075" translate="yes" xml:space="preserve">
          <source>An escape such as \d or \pL that matches a single character</source>
          <target state="translated">Побег,такой как \d или \pL,совпадающий с одним символом.</target>
        </trans-unit>
        <trans-unit id="3dbab65b35422e9a5f18088ebc06d25e9fad346a" translate="yes" xml:space="preserve">
          <source>An escript without header can be created as follows:</source>
          <target state="translated">Эскрипт без заголовка может быть создан следующим образом:</target>
        </trans-unit>
        <trans-unit id="caa651d62e89a3194457422deac44f5099468104" translate="yes" xml:space="preserve">
          <source>An event handler that logs events to disk.</source>
          <target state="translated">Обработчик событий,который записывает события на диск.</target>
        </trans-unit>
        <trans-unit id="5819d554802a07971f53d1cb6535b01dfcbb09e8" translate="yes" xml:space="preserve">
          <source>An event manager can also be stopped by calling:</source>
          <target state="translated">Менеджер событий также может быть остановлен,позвонив по телефону:</target>
        </trans-unit>
        <trans-unit id="f0e3aa08515364f27e3115f4b2dbde9ad919a3bf" translate="yes" xml:space="preserve">
          <source>An event manager implemented using this module has a standard set of interface functions and includes functionality for tracing and error reporting. It also fits into an OTP supervision tree. For more information, see &lt;code&gt;OTP Design Principles&lt;/code&gt;.</source>
          <target state="translated">Менеджер событий, реализованный с помощью этого модуля, имеет стандартный набор интерфейсных функций и включает в себя функции для отслеживания и сообщения об ошибках. Он также вписывается в дерево контроля OTP. Для получения дополнительной информации см. &lt;code&gt;OTP Design Principles&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="886ccc722947fa7b5754f99dcfc5af3986ac55e6" translate="yes" xml:space="preserve">
          <source>An event manager is implemented as a process and each event handler is implemented as a callback module.</source>
          <target state="translated">Менеджер событий реализован как процесс,а каждый обработчик событий реализован как модуль обратного вызова.</target>
        </trans-unit>
        <trans-unit id="f09b12972f030994c4bc8f915a66c78fbd4519e1" translate="yes" xml:space="preserve">
          <source>An event message sent to processes that have subscribed to these using &lt;code&gt;&lt;a href=&quot;#subscribe-1&quot;&gt;subscribe/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Сообщение о событии, отправляемое процессам, которые подписались на них с помощью &lt;code&gt;&lt;a href=&quot;#subscribe-1&quot;&gt;subscribe/1&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7912692308fccb18e880ce6533510b32643ba616" translate="yes" xml:space="preserve">
          <source>An event of type &lt;code&gt;&lt;a href=&quot;#type-event_type&quot;&gt;internal&lt;/a&gt;&lt;/code&gt; is to be used when you want to reliably distinguish an event inserted this way from any external event.</source>
          <target state="translated">Если вы хотите надежно отличить вставленное таким образом событие от любого внешнего события, следует использовать событие типа &lt;code&gt;&lt;a href=&quot;#type-event_type&quot;&gt;internal&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a40597cb2b6a0fd7a5b617f8cfce1e45596c4fc9" translate="yes" xml:space="preserve">
          <source>An event record consists of the following fields:</source>
          <target state="translated">Запись события состоит из следующих полей:</target>
        </trans-unit>
        <trans-unit id="c961b5dc628efa399b055d52eefc6a02b7a6cc27" translate="yes" xml:space="preserve">
          <source>An event time-out is cancelled by any other event so you either get some other event or the time-out event. It is therefore not possible nor needed to cancel or restart an event time-out. Whatever event you act on has already cancelled the event time-out...</source>
          <target state="translated">Тайм-аут отменяется любым другим событием,поэтому Вы получаете либо другое событие,либо тайм-аут.Поэтому отменить или возобновить тайм-аут не представляется возможным и не требуется.Какое бы мероприятие Вы ни проводили,оно уже отменило тайм-аут....</target>
        </trans-unit>
        <trans-unit id="a3e4ac702417db8112a904d57243c3232ddfe095" translate="yes" xml:space="preserve">
          <source>An event_handler tuple in argument &lt;code&gt;Opts&lt;/code&gt; has the following definition (see &lt;code&gt;&lt;a href=&quot;ct#run_test-1&quot;&gt;ct:run_test/1&lt;/a&gt;&lt;/code&gt;):</source>
          <target state="translated">Кортеж event_handler в аргументе &lt;code&gt;Opts&lt;/code&gt; имеет следующее определение (см &lt;code&gt;&lt;a href=&quot;ct#run_test-1&quot;&gt;ct:run_test/1&lt;/a&gt;&lt;/code&gt; ):</target>
        </trans-unit>
        <trans-unit id="3a969467552c52e537f903625bc429c6574d2c9a" translate="yes" xml:space="preserve">
          <source>An example command line doing the same as the example in the previous section can now look as follows (line breaks in the command are for readability, and shall not be there when typed):</source>
          <target state="translated">Пример командной строки,делающий то же самое,что и в предыдущем разделе,теперь может выглядеть следующим образом (разрывы строк в команде служат для удобочитаемости,и не должны присутствовать при наборе):</target>
        </trans-unit>
        <trans-unit id="24e3e494ce66660334a3ee83d7103bc438d96d0c" translate="yes" xml:space="preserve">
          <source>An example command line with this option would look like this:</source>
          <target state="translated">Пример командной строки с этой опцией будет выглядеть так:</target>
        </trans-unit>
        <trans-unit id="3a72f95d3b2dbe62f799c4b641925aa95c266cbd" translate="yes" xml:space="preserve">
          <source>An example implementation of a distribution module can be found in &lt;code&gt;$ERL_TOP/lib/kernel/examples/gen_tcp_dist/src/gen_tcp_dist.erl&lt;/code&gt;. It implements the distribution over TCP/IP using the &lt;code&gt;gen_tcp&lt;/code&gt; API with distribution controllers implemented by processes. This instead of using port distribution controllers as the ordinary TCP/IP distribution uses.</source>
          <target state="translated">Пример реализации модуля распространения можно найти в &lt;code&gt;$ERL_TOP/lib/kernel/examples/gen_tcp_dist/src/gen_tcp_dist.erl&lt;/code&gt; . Он реализует распределение по TCP / IP с использованием API &lt;code&gt;gen_tcp&lt;/code&gt; с контроллерами распределения, реализованными процессами. Это вместо использования контроллеров распределения портов, как в обычном распределении TCP / IP.</target>
        </trans-unit>
        <trans-unit id="f25cec01bb097ac34ef114606afd83d4604845c7" translate="yes" xml:space="preserve">
          <source>An example of &lt;code&gt;&amp;lt;MibName&amp;gt;&lt;/code&gt; is &lt;code&gt;RFC1213-MIB&lt;/code&gt;.</source>
          <target state="translated">Примером &lt;code&gt;&amp;lt;MibName&amp;gt;&lt;/code&gt; является &lt;code&gt;RFC1213-MIB&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dd190ce9f4e4adebb4a1e9e43f55af888513aa13" translate="yes" xml:space="preserve">
          <source>An example of a connection string: &lt;code&gt;&quot;DSN=sql-server;UID=aladdin;PWD=sesame&quot;&lt;/code&gt; where DSN is your ODBC Data Source Name, UID is a database user id and PWD is the password for that user. These are usually the attributes required in the connection string, but some drivers have other driver specific attributes, for example &lt;code&gt;&quot;DSN=Oracle8;DBQ=gandalf;UID=aladdin;PWD=sesame&quot;&lt;/code&gt; where DBQ is your TNSNAMES.ORA entry name e.g. some Oracle specific configuration attribute.</source>
          <target state="translated">Пример строки подключения: &lt;code&gt;&quot;DSN=sql-server;UID=aladdin;PWD=sesame&quot;&lt;/code&gt; где DSN - это ваше имя источника данных ODBC, UID - это идентификатор пользователя базы данных, а PWD - пароль для этого пользователя. Обычно это атрибуты, необходимые в строке подключения, но некоторые драйверы имеют другие атрибуты, специфичные для драйвера, например &lt;code&gt;&quot;DSN=Oracle8;DBQ=gandalf;UID=aladdin;PWD=sesame&quot;&lt;/code&gt; где DBQ - это ваше имя записи TNSNAMES.ORA, например, некоторые Атрибут конфигурации, специфичный для Oracle.</target>
        </trans-unit>
        <trans-unit id="4c63ca8ea69582d13ba623fe7884e3eaf6dde10a" translate="yes" xml:space="preserve">
          <source>An example of a simple server written in plain Erlang is provided in &lt;code&gt;&lt;a href=&quot;des_princ#ch1&quot;&gt;Overview&lt;/a&gt;&lt;/code&gt;. The server can be reimplemented using &lt;code&gt;gen_server&lt;/code&gt;, resulting in this callback module:</source>
          <target state="translated">Пример простого сервера, написанного на простом Erlang, приведен в &lt;code&gt;&lt;a href=&quot;des_princ#ch1&quot;&gt;Overview&lt;/a&gt;&lt;/code&gt; . Сервер можно переопределить с помощью &lt;code&gt;gen_server&lt;/code&gt; , в результате чего получится этот модуль обратного вызова:</target>
        </trans-unit>
        <trans-unit id="766c8ed5398a618e0ab57071580f3ae767ca73f1" translate="yes" xml:space="preserve">
          <source>An example of a simple test function could be the following:</source>
          <target state="translated">Примером простой функции тестирования может служить следующее:</target>
        </trans-unit>
        <trans-unit id="fc8a1c6616df7bc9e05cd29f7f66081b9d15ab3e" translate="yes" xml:space="preserve">
          <source>An example of a test case information function follows:</source>
          <target state="translated">Ниже приведен пример информационной функции контрольного примера:</target>
        </trans-unit>
        <trans-unit id="263edddce7f8f5ac177f18b46f0285f0e12e001a" translate="yes" xml:space="preserve">
          <source>An example of a typical ordering function is less than or equal to: &lt;code&gt;=&amp;lt;/2&lt;/code&gt;.</source>
          <target state="translated">Пример типичной функции упорядочивания меньше или равен: &lt;code&gt;=&amp;lt;/2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e0cfd15cad67827179545aee45fbe9cd3e6e0b77" translate="yes" xml:space="preserve">
          <source>An example of a value that can be encoded as type &lt;code&gt;T1&lt;/code&gt; is &lt;code&gt;{12,&quot;hello&quot;}&lt;/code&gt;.</source>
          <target state="translated">Примером значения, которое может быть закодировано как тип &lt;code&gt;T1&lt;/code&gt; , является &lt;code&gt;{12,&quot;hello&quot;}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="641b3d8cec6c829548d6cff0640c2452dac92d4d" translate="yes" xml:space="preserve">
          <source>An example of an XML configuration file follows:</source>
          <target state="translated">Ниже приведен пример файла конфигурации XML:</target>
        </trans-unit>
        <trans-unit id="3c953ad1d3b8e0a028a4a0e50272f51e08c62029" translate="yes" xml:space="preserve">
          <source>An example of branched versions: The version &lt;code&gt;6.0.2.1&lt;/code&gt; is a branched version from the base version &lt;code&gt;6.0.2&lt;/code&gt;. Versions on the form &lt;code&gt;6.0.2.&amp;lt;X&amp;gt;&lt;/code&gt; can be compared with normal versions smaller than or equal to &lt;code&gt;6.0.2&lt;/code&gt;, and other versions on the form &lt;code&gt;6.0.2.&amp;lt;X&amp;gt;&lt;/code&gt;. The version &lt;code&gt;6.0.2.1&lt;/code&gt; will include all changes in &lt;code&gt;6.0.2&lt;/code&gt;. However, &lt;code&gt;6.0.3&lt;/code&gt; will most likely &lt;strong&gt;not&lt;/strong&gt; include all changes in &lt;code&gt;6.0.2.1&lt;/code&gt; (note that these versions have no order). A second branched version from the base version &lt;code&gt;6.0.2&lt;/code&gt; will be version &lt;code&gt;6.0.2.0.1&lt;/code&gt;, and a third branched version will be &lt;code&gt;6.0.2.0.0.1&lt;/code&gt;.</source>
          <target state="translated">Пример разветвленных версий: Версия &lt;code&gt;6.0.2.1&lt;/code&gt; является разветвленной версией базовой версии &lt;code&gt;6.0.2&lt;/code&gt; . Версии в форме &lt;code&gt;6.0.2.&amp;lt;X&amp;gt;&lt;/code&gt; можно сравнить с обычными версиями, меньшими или равными &lt;code&gt;6.0.2&lt;/code&gt; , и другими версиями в форме &lt;code&gt;6.0.2.&amp;lt;X&amp;gt;&lt;/code&gt; . Версия &lt;code&gt;6.0.2.1&lt;/code&gt; будет включать все изменения &lt;code&gt;6.0.2&lt;/code&gt; . Однако &lt;code&gt;6.0.3&lt;/code&gt; , скорее всего, &lt;strong&gt;не будет&lt;/strong&gt; включать все изменения &lt;code&gt;6.0.2.1&lt;/code&gt; (обратите внимание, что в этих версиях нет порядка). Второй разветвленной версией базовой версии &lt;code&gt;6.0.2&lt;/code&gt; будет версия &lt;code&gt;6.0.2.0.1&lt;/code&gt; , а третьей разветвленной версией будет версия. &lt;code&gt;6.0.2.0.0.1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4d2b79780a92a75d625b2977e20ae40bf2d1dc5d" translate="yes" xml:space="preserve">
          <source>An example of how to compile code with debug information from the Erlang shell:</source>
          <target state="translated">Пример компиляции кода с отладочной информацией из оболочки Erlang:</target>
        </trans-unit>
        <trans-unit id="283dddecff25e45c32ff2ee6dc6f7deae1f48787" translate="yes" xml:space="preserve">
          <source>An example of how to compile code with debug information using &lt;code&gt;erlc&lt;/code&gt;:</source>
          <target state="translated">Пример того, как скомпилировать код с отладочной информацией с помощью &lt;code&gt;erlc&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="0b041b3192c84c6c42972b6454b8d190b043db34" translate="yes" xml:space="preserve">
          <source>An example of how to replace the standard handler with a disk_log handler at startup is found in the &lt;code&gt;&lt;a href=&quot;logger_disk_log_h&quot;&gt;logger_disk_log_h&lt;/a&gt;&lt;/code&gt; manual.</source>
          <target state="translated">Пример того, как заменить стандартный обработчик обработчиком disk_log при запуске, можно найти в руководстве &lt;code&gt;&lt;a href=&quot;logger_disk_log_h&quot;&gt;logger_disk_log_h&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ad7a08deebfc0de42e62f5ac0c0a37270a88259d" translate="yes" xml:space="preserve">
          <source>An example of how to use function &lt;code&gt;seq_trigger_ms/0,1&lt;/code&gt; follows:</source>
          <target state="translated">Пример использования функции &lt;code&gt;seq_trigger_ms/0,1&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="52a1c522c256f4824c6c143ccc112c9b3e8d1721" translate="yes" xml:space="preserve">
          <source>An example of process tracing of &lt;code&gt;os_mon&lt;/code&gt; and friends.</source>
          <target state="translated">Пример отслеживания процесса &lt;code&gt;os_mon&lt;/code&gt; и друзей.</target>
        </trans-unit>
        <trans-unit id="d183a4063c6f62966aa70116abbdb5e2ed3c3fa0" translate="yes" xml:space="preserve">
          <source>An example of the suite information function follows:</source>
          <target state="translated">Ниже приведен пример информационной функции пакета:</target>
        </trans-unit>
        <trans-unit id="71b617f2d4fc8a3ed842c6355b6026c8ba8babba" translate="yes" xml:space="preserve">
          <source>An example of this is the SFTP support in &lt;code&gt;ssh_sftp:open_tar/3&lt;/code&gt;. This function opens a tar file on a remote machine using an SFTP channel.</source>
          <target state="translated">Примером этого является поддержка SFTP в &lt;code&gt;ssh_sftp:open_tar/3&lt;/code&gt; . Эта функция открывает файл tar на удаленном компьютере, используя канал SFTP.</target>
        </trans-unit>
        <trans-unit id="623a8785811ca24208a4398108f7f9357baa4841" translate="yes" xml:space="preserve">
          <source>An example with an implicit match specification:</source>
          <target state="translated">Пример с неявной спецификацией соответствия:</target>
        </trans-unit>
        <trans-unit id="b77a79055b4c741418b72739ec8b6223e715e638" translate="yes" xml:space="preserve">
          <source>An example with implicit match specification:</source>
          <target state="translated">Пример с неявной спецификацией соответствия:</target>
        </trans-unit>
        <trans-unit id="8f768fcb2e6876510a24de877e85b8f46f23c3ca" translate="yes" xml:space="preserve">
          <source>An exception (such as &lt;code&gt;badarg&lt;/code&gt;) in the &lt;code&gt;MatchCondition&lt;/code&gt; part, which resembles an Erlang guard, generates immediate failure.</source>
          <target state="translated">Исключение (такое как &lt;code&gt;badarg&lt;/code&gt; ) в части &lt;code&gt;MatchCondition&lt;/code&gt; , напоминающее защиту Erlang, немедленно вызывает сбой.</target>
        </trans-unit>
        <trans-unit id="c55f6f36b8c26386f173147d732e092f93370b5b" translate="yes" xml:space="preserve">
          <source>An exception consists of its class, an exit reason (see &lt;code&gt;&lt;a href=&quot;#exit_reasons&quot;&gt;Exit Reason&lt;/a&gt;&lt;/code&gt;), and a stack trace (which aids in finding the code location of the exception).</source>
          <target state="translated">Исключение состоит из его класса, причины выхода (см. &lt;code&gt;&lt;a href=&quot;#exit_reasons&quot;&gt;Exit Reason&lt;/a&gt;&lt;/code&gt; ) и трассировки стека (которая помогает найти местоположение кода исключения).</target>
        </trans-unit>
        <trans-unit id="786ccd01cb23da0a273209436d12e92170626910" translate="yes" xml:space="preserve">
          <source>An exception in the &lt;code&gt;MatchBody&lt;/code&gt; part, which resembles the body of an Erlang function, is implicitly caught and results in the single atom &lt;code&gt;'EXIT'&lt;/code&gt;.</source>
          <target state="translated">Исключение в части &lt;code&gt;MatchBody&lt;/code&gt; , которая напоминает тело функции Erlang, неявно перехватывается и приводит к единственному элементу &lt;code&gt;'EXIT'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eea16817ebabde2bb1160184fce27148bc39b259" translate="yes" xml:space="preserve">
          <source>An exception is if the application has the &lt;code&gt;start_phases&lt;/code&gt; key defined (see &lt;code&gt;&lt;a href=&quot;included_applications&quot;&gt;Included Applications&lt;/a&gt;&lt;/code&gt;). The application is then instead started by calling:</source>
          <target state="translated">Исключением является то, что для приложения &lt;code&gt;start_phases&lt;/code&gt; ключ start_phases (см. &lt;code&gt;&lt;a href=&quot;included_applications&quot;&gt;Included Applications&lt;/a&gt;&lt;/code&gt; ). Затем приложение запускается путем вызова:</target>
        </trans-unit>
        <trans-unit id="ccfc7a550c54e8241796ed0b6744cf68e3304ef5" translate="yes" xml:space="preserve">
          <source>An exception is thrown if &lt;code&gt;fun_expr_clauses(Node)&lt;/code&gt; returns an empty list, or if the first element of that list is not a syntax tree &lt;code&gt;C&lt;/code&gt; of type &lt;code&gt;clause&lt;/code&gt; such that &lt;code&gt;clause_patterns(C)&lt;/code&gt; is a nonempty list.</source>
          <target state="translated">Исключение , если &lt;code&gt;fun_expr_clauses(Node)&lt;/code&gt; возвращает пустой список, или если первый элемент этого списка не является синтаксическим деревом &lt;code&gt;C&lt;/code&gt; типом &lt;code&gt;clause&lt;/code&gt; таким образом, что &lt;code&gt;clause_patterns(C)&lt;/code&gt; представляет собой список непустого.</target>
        </trans-unit>
        <trans-unit id="b82407baecc4ff5b4d3851e388407e7da330afd7" translate="yes" xml:space="preserve">
          <source>An exception is thrown if &lt;code&gt;function_clauses(Node)&lt;/code&gt; returns an empty list, or if the first element of that list is not a syntax tree &lt;code&gt;C&lt;/code&gt; of type &lt;code&gt;clause&lt;/code&gt; such that &lt;code&gt;clause_patterns(C)&lt;/code&gt; is a nonempty list.</source>
          <target state="translated">Исключение , если &lt;code&gt;function_clauses(Node)&lt;/code&gt; возвращает пустой список, или если первый элемент этого списка не является синтаксическим деревом &lt;code&gt;C&lt;/code&gt; типом &lt;code&gt;clause&lt;/code&gt; таким образом, что &lt;code&gt;clause_patterns(C)&lt;/code&gt; представляет собой список непустого.</target>
        </trans-unit>
        <trans-unit id="f52143a4be751dfd326004be48fd5e21eb1bb7aa" translate="yes" xml:space="preserve">
          <source>An exception is thrown if &lt;code&gt;named_fun_expr_clauses(Node)&lt;/code&gt; returns an empty list, or if the first element of that list is not a syntax tree &lt;code&gt;C&lt;/code&gt; of type &lt;code&gt;clause&lt;/code&gt; such that &lt;code&gt;clause_patterns(C)&lt;/code&gt; is a nonempty list.</source>
          <target state="translated">Исключение &lt;code&gt;named_fun_expr_clauses(Node)&lt;/code&gt; если named_fun_expr_clauses (Node) возвращает пустой список или если первый элемент этого списка не является синтаксическим деревом &lt;code&gt;C&lt;/code&gt; с &lt;code&gt;clause&lt;/code&gt; типа, так что &lt;code&gt;clause_patterns(C)&lt;/code&gt; является непустым списком.</target>
        </trans-unit>
        <trans-unit id="e847ae794f483b76a1568dd706204639135518bf" translate="yes" xml:space="preserve">
          <source>An exception occurring during the evaluation of &lt;code&gt;Body&lt;/code&gt; is not caught.</source>
          <target state="translated">Исключение, возникающее во время оценки &lt;code&gt;Body&lt;/code&gt; , не обнаруживается.</target>
        </trans-unit>
        <trans-unit id="7b5eab4cdd40c5d5e4cc289495dd5e5e68d0fea2" translate="yes" xml:space="preserve">
          <source>An exception of class &lt;code&gt;error&lt;/code&gt; is also known as a run-time error.</source>
          <target state="translated">Исключение &lt;code&gt;error&lt;/code&gt; класса также известно как ошибка времени выполнения.</target>
        </trans-unit>
        <trans-unit id="4450a7ddfc454818593e6096f098ce6aa2d7511c" translate="yes" xml:space="preserve">
          <source>An exception to the above is if the exit reason is &lt;code&gt;kill&lt;/code&gt;, that is if &lt;code&gt;exit(Pid,kill)&lt;/code&gt; has been called. This unconditionally terminates the process, regardless of if it is trapping exit signals.</source>
          <target state="translated">Исключением из вышеперечисленного является случай, когда причина выхода - &lt;code&gt;kill&lt;/code&gt; , то есть если был вызван &lt;code&gt;exit(Pid,kill)&lt;/code&gt; . Это безоговорочно завершает процесс, независимо от того, перехватывает ли он сигналы выхода.</target>
        </trans-unit>
        <trans-unit id="d07cbfc2bcd69590e32840931392d6ea6afd078a" translate="yes" xml:space="preserve">
          <source>An exception will be thrown if a preset dictionary is required for further decompression. See &lt;code&gt;&lt;a href=&quot;#inflateSetDictionary-2&quot;&gt;inflateSetDictionary/2&lt;/a&gt;&lt;/code&gt; for details.</source>
          <target state="translated">Будет создано исключение, если для дальнейшей декомпрессии потребуется предустановленный словарь. См. Подробности в &lt;code&gt;&lt;a href=&quot;#inflateSetDictionary-2&quot;&gt;inflateSetDictionary/2&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b1c641f1b9af49cd4d1923ca86b8594f8f949e59" translate="yes" xml:space="preserve">
          <source>An exception within the callback will be treated as a validation failure.</source>
          <target state="translated">Исключение в рамках обратного вызова будет рассматриваться как ошибка проверки.</target>
        </trans-unit>
        <trans-unit id="f30fc06164cbf07d72025eed006de40eb4481362" translate="yes" xml:space="preserve">
          <source>An executable line contains an Erlang expression such as a matching or a function call. A blank line or a line containing a comment, function head or pattern in a &lt;code&gt;case&lt;/code&gt;- or &lt;code&gt;receive&lt;/code&gt; statement is not executable.</source>
          <target state="translated">Исполняемая строка содержит выражение Erlang, такое как сопоставление или вызов функции. Пустая строка или строка, содержащая комментарий, заголовок функции или шаблон в операторе &lt;code&gt;case&lt;/code&gt; - или &lt;code&gt;receive&lt;/code&gt; , не могут быть выполнены.</target>
        </trans-unit>
        <trans-unit id="8606c5f9fe59cd2685a78631470346707ae72155" translate="yes" xml:space="preserve">
          <source>An expected CEA was not received within &lt;code&gt;&lt;a href=&quot;#capx_timeout&quot;&gt;capx_timeout&lt;/a&gt;&lt;/code&gt; of connection establishment.</source>
          <target state="translated">Ожидаемый CEA не был получен в течение &lt;code&gt;&lt;a href=&quot;#capx_timeout&quot;&gt;capx_timeout&lt;/a&gt;&lt;/code&gt; установления соединения.</target>
        </trans-unit>
        <trans-unit id="0cfddc07c615cb5d5e6262a7a3331cc836bbb0c2" translate="yes" xml:space="preserve">
          <source>An expected CER was not received within &lt;code&gt;&lt;a href=&quot;#capx_timeout&quot;&gt;capx_timeout&lt;/a&gt;&lt;/code&gt; of connection establishment.</source>
          <target state="translated">Ожидаемый CER не был получен в течение &lt;code&gt;&lt;a href=&quot;#capx_timeout&quot;&gt;capx_timeout&lt;/a&gt;&lt;/code&gt; установления соединения.</target>
        </trans-unit>
        <trans-unit id="d1e9be959321b894a2874f0c88caf59a243a800d" translate="yes" xml:space="preserve">
          <source>An explicit match specification is here used to traverse the table:</source>
          <target state="translated">Здесь для перемещения по таблице используется явная спецификация соответствия:</target>
        </trans-unit>
        <trans-unit id="057acda345b8319968a51559e553710109f3e800" translate="yes" xml:space="preserve">
          <source>An expression E is one of the following:</source>
          <target state="translated">Выражение Е является одним из следующих:</target>
        </trans-unit>
        <trans-unit id="79ec765b52e5254ae35be2bfa0a2b1b7402af860" translate="yes" xml:space="preserve">
          <source>An expression defining the map to be updated, is put in front of the expression defining the keys to be updated and their respective values:</source>
          <target state="translated">Перед выражением,определяющим обновляемую карту,ставится выражение,определяющее обновляемые клавиши и их соответствующие значения:</target>
        </trans-unit>
        <trans-unit id="4c5709bbd83330fdb0802325f414deebc289f34a" translate="yes" xml:space="preserve">
          <source>An expression that can be evaluated as a function in the following sense.</source>
          <target state="translated">Выражение,которое может быть оценено как функция в следующем смысле.</target>
        </trans-unit>
        <trans-unit id="b3ffd3c48acbdb730fd9ee6452c9c6da8b28f7c0" translate="yes" xml:space="preserve">
          <source>An extendible array can be made fixed-size later:</source>
          <target state="translated">Расширяемый массив можно сделать фиксированным позже:</target>
        </trans-unit>
        <trans-unit id="8053c45d586487397b53559d19e27dd0eec873c5" translate="yes" xml:space="preserve">
          <source>An identity parse transform.</source>
          <target state="translated">Трансформация анализа личности.</target>
        </trans-unit>
        <trans-unit id="ecdfc6b7cd9818342bbf2008fadc35280070bfc8" translate="yes" xml:space="preserve">
          <source>An implementation of an HTTP 1.1 compliant web server, as defined in &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc2616.txt&quot;&gt;RFC 2616&lt;/a&gt;&lt;/code&gt;. Provides web server start options, administrative functions, and an Erlang callback API.</source>
          <target state="translated">Реализация веб-сервера, совместимого с HTTP 1.1, как определено в &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc2616.txt&quot;&gt;RFC 2616&lt;/a&gt;&lt;/code&gt; . Предоставляет параметры запуска веб-сервера, административные функции и API обратного вызова Erlang.</target>
        </trans-unit>
        <trans-unit id="bccff937aee314a7a7bbe2e29ed38d05e459fc04" translate="yes" xml:space="preserve">
          <source>An important aspect of these functions is that the system can access a table while it is being reconfigured. For example, it is possible to move a table and simultaneously perform write operations to the same table. This feature is essential for applications that require continuous service.</source>
          <target state="translated">Важным аспектом этих функций является то,что система может получить доступ к таблице во время ее перенастройки.Например,можно перемещать таблицу и одновременно выполнять операции записи в одну и ту же таблицу.Эта функция необходима для приложений,требующих непрерывной работы.</target>
        </trans-unit>
        <trans-unit id="8103190c74242180849af27697a68cc90031c667" translate="yes" xml:space="preserve">
          <source>An important feature of the Erlang programming language is the ability to change module code in runtime, &lt;strong&gt;code replacement&lt;/strong&gt;, as described in the Erlang Reference Manual.</source>
          <target state="translated">Важной особенностью языка программирования Erlang является возможность изменения кода модуля во время выполнения, &lt;strong&gt;замены кода&lt;/strong&gt; , как описано в Справочном руководстве Erlang.</target>
        </trans-unit>
        <trans-unit id="b984515f043cbeceb35298b231ea0fb8cdbe98e2" translate="yes" xml:space="preserve">
          <source>An important notion is that of  &lt;strong id=&quot;conversion&quot;&gt;conversion&lt;/strong&gt; of expressions. The syntax of a cast expression is:</source>
          <target state="translated">Важное понятие - это &lt;strong id=&quot;conversion&quot;&gt;преобразование&lt;/strong&gt; выражений. Синтаксис выражения приведения:</target>
        </trans-unit>
        <trans-unit id="e7373b7e60caa76da4c06b8f17342dc9bd893d3f" translate="yes" xml:space="preserve">
          <source>An inbound Diameter message.</source>
          <target state="translated">Сообщение о входящем диаметре.</target>
        </trans-unit>
        <trans-unit id="27e2e729d2af483eadb06f0f20ab32c601a79adb" translate="yes" xml:space="preserve">
          <source>An included application can include other applications.</source>
          <target state="translated">Входящее в комплект приложение может включать в себя и другие приложения.</target>
        </trans-unit>
        <trans-unit id="6fad7fec6bf12045b5bbf5068c4c8a4f43bff8d4" translate="yes" xml:space="preserve">
          <source>An incoming CEA contained errors and has been rejected. &lt;code&gt;Caps&lt;/code&gt; contains only values for the local node. &lt;code&gt;Pkt&lt;/code&gt; contains the CEA in question.</source>
          <target state="translated">Входящий CEA содержал ошибки и был отклонен. &lt;code&gt;Caps&lt;/code&gt; содержит только значения для локального узла. &lt;code&gt;Pkt&lt;/code&gt; содержит рассматриваемый CEA.</target>
        </trans-unit>
        <trans-unit id="59cee863f9f3f47fe8ac63e3064c6869185c82bc" translate="yes" xml:space="preserve">
          <source>An incoming CEA has been rejected for the indicated reason. An integer-valued &lt;code&gt;Result&lt;/code&gt; indicates the result code sent by the peer. &lt;code&gt;Caps&lt;/code&gt; contains pairs of values for the local node and remote peer. &lt;code&gt;Pkt&lt;/code&gt; contains the CEA in question. In the case of rejection by a capabilities callback, the tuple contains the rejecting callback.</source>
          <target state="translated">Входящий CEA был отклонен по указанной причине. Целочисленный &lt;code&gt;Result&lt;/code&gt; указывает код результата, отправленный партнером. &lt;code&gt;Caps&lt;/code&gt; содержит пары значений для локального узла и удаленного узла. &lt;code&gt;Pkt&lt;/code&gt; содержит рассматриваемый CEA. В случае отклонения обратным вызовом возможностей кортеж содержит отклоняющий обратный вызов.</target>
        </trans-unit>
        <trans-unit id="b1def14681d1943bacda3c612720c72d742fb87a" translate="yes" xml:space="preserve">
          <source>An incoming CER contained errors and has been answered with the indicated result code. &lt;code&gt;Caps&lt;/code&gt; contains values for the local node only. &lt;code&gt;Pkt&lt;/code&gt; contains the CER in question.</source>
          <target state="translated">Входящий CER содержал ошибки и получил ответ с указанным кодом результата. &lt;code&gt;Caps&lt;/code&gt; содержит значения только для локального узла. &lt;code&gt;Pkt&lt;/code&gt; содержит рассматриваемую CER.</target>
        </trans-unit>
        <trans-unit id="44f0c3ff8baccd820cf7209b6da707bb1df632ba" translate="yes" xml:space="preserve">
          <source>An incoming CER has been answered with the indicated result code, or discarded. &lt;code&gt;Caps&lt;/code&gt; contains pairs of values, for the local node and remote peer respectively. &lt;code&gt;Pkt&lt;/code&gt; contains the CER in question. In the case of rejection by a capabilities callback, the tuple contains the rejecting callback.</source>
          <target state="translated">На входящий CER был дан ответ с указанным кодом результата или он был отклонен. &lt;code&gt;Caps&lt;/code&gt; содержит пары значений для локального узла и удаленного узла соответственно. &lt;code&gt;Pkt&lt;/code&gt; содержит рассматриваемую CER. В случае отклонения обратным вызовом возможностей кортеж содержит отклоняющий обратный вызов.</target>
        </trans-unit>
        <trans-unit id="c010a7263cd57740edb22b37dcc807299770bfbd" translate="yes" xml:space="preserve">
          <source>An index number. Each fun within a module has an unique index. &lt;code&gt;Index&lt;/code&gt; is stored in big-endian byte order.</source>
          <target state="translated">Порядковый номер. Каждое развлечение в модуле имеет уникальный индекс. &lt;code&gt;Index&lt;/code&gt; хранится в порядке байтов с прямым порядком байтов.</target>
        </trans-unit>
        <trans-unit id="e0917d687832d3450bdf1dd4a6ec48cbe0e0d9e3" translate="yes" xml:space="preserve">
          <source>An index table for the table in the previous examples would have to be a bag (as keys would appear more than once) and can have the following contents:</source>
          <target state="translated">Индексная таблица для таблицы в предыдущих примерах должна быть сумкой (так как ключи появляются несколько раз)и может иметь следующее содержимое:</target>
        </trans-unit>
        <trans-unit id="f3a716603d7f6fd090e2b620d82712d6086ee98c" translate="yes" xml:space="preserve">
          <source>An info report is written when the upgrade is completed. To programmatically determine if the upgrade is complete, call &lt;code&gt;&lt;a href=&quot;release_handler#which_releases-0&quot;&gt;release_handler:which_releases/0,1&lt;/a&gt;&lt;/code&gt; and check if the expected release has status &lt;code&gt;current&lt;/code&gt;.</source>
          <target state="translated">Информационный отчет пишется, когда обновление завершено. Чтобы программно определить, завершено ли обновление, вызовите &lt;code&gt;&lt;a href=&quot;release_handler#which_releases-0&quot;&gt;release_handler:which_releases/0,1&lt;/a&gt;&lt;/code&gt; и проверьте, имеет ли ожидаемый выпуск &lt;code&gt;current&lt;/code&gt; статус .</target>
        </trans-unit>
        <trans-unit id="4c23fa577741650a0b90f37b9ba01e57e91c10bd" translate="yes" xml:space="preserve">
          <source>An info report is written when the upgrade is completed. To programmatically find out if the upgrade is complete, call &lt;code&gt;release_handler:which_releases(current)&lt;/code&gt; and check if it returns the expected (that is, the new) release.</source>
          <target state="translated">Информационный отчет пишется, когда обновление завершено. Чтобы программно узнать, завершено ли обновление, вызовите &lt;code&gt;release_handler:which_releases(current)&lt;/code&gt; и проверьте, возвращает ли он ожидаемый (то есть новый) выпуск.</target>
        </trans-unit>
        <trans-unit id="54c7f8a299a2c3884adcc720f6b4c75f5057c0ab" translate="yes" xml:space="preserve">
          <source>An initial megaco_receive_handle record may be obtained with megaco:user_info(UserMid, receive_handle)</source>
          <target state="translated">Начальная запись megaco_receive_handle может быть получена с помощью megaco:user_info(UserMid,receive_handle).</target>
        </trans-unit>
        <trans-unit id="1540a39cc27f66083ac255242e015830b64ff885" translate="yes" xml:space="preserve">
          <source>An installed, but not permanent, release can be &lt;strong&gt;removed&lt;/strong&gt;. Information about the release is then deleted from &lt;code&gt;$ROOT/releases/RELEASES&lt;/code&gt; and the release-specific code, that is, the new application directories and the &lt;code&gt;$ROOT/releases/Vsn&lt;/code&gt; directory, are removed.</source>
          <target state="translated">Установленный, но не постоянный выпуск можно &lt;strong&gt;удалить&lt;/strong&gt; . Информация о выпуске затем удаляется из &lt;code&gt;$ROOT/releases/RELEASES&lt;/code&gt; &lt;code&gt;$ROOT/releases/Vsn&lt;/code&gt; , а специфичный для выпуска код, то есть новые каталоги приложений и каталог $ ROOT / Release / Vsn , удаляются.</target>
        </trans-unit>
        <trans-unit id="543b81b3ca97b671430c105dbe9f1ef27cc417d9" translate="yes" xml:space="preserve">
          <source>An instance of the global group server, &lt;code&gt;global_group&lt;/code&gt;, must be running on each node. The processes are automatically started and synchronized when a node is started.</source>
          <target state="translated">Экземпляр сервера глобальной группы &lt;code&gt;global_group&lt;/code&gt; должен работать на каждом узле. Процессы автоматически запускаются и синхронизируются при запуске узла.</target>
        </trans-unit>
        <trans-unit id="37e43d40c9bbabdd039d304ba4e86e08e3ffdef1" translate="yes" xml:space="preserve">
          <source>An instrumentation function is associated with each managed object. This is the function, which actually implements the operations and will be called by the agent when it receives a request from the management station.</source>
          <target state="translated">Функция приборов связана с каждым управляемым объектом.Это функция,которая фактически реализует операции и будет вызываться агентом при получении запроса от станции управления.</target>
        </trans-unit>
        <trans-unit id="c415bc220831ee9b6e63013e939f47504d9e06e6" translate="yes" xml:space="preserve">
          <source>An integer &amp;gt; 1.</source>
          <target state="translated">Целое число&amp;gt; 1.</target>
        </trans-unit>
        <trans-unit id="02913d17fb755af0fd3c86a0adae0000c2d01a6b" translate="yes" xml:space="preserve">
          <source>An integer &amp;gt; 16#10FFFF (the maximum Unicode character)</source>
          <target state="translated">Целое число&amp;gt; 16 # 10FFFF (максимальный символ Unicode)</target>
        </trans-unit>
        <trans-unit id="ad0ece817502015092c7dcb2a91f78120a1b145a" translate="yes" xml:space="preserve">
          <source>An integer &amp;gt;= 0, defaults to 5000 (= 5 seconds).</source>
          <target state="translated">Целое число&amp;gt; = 0, по умолчанию 5000 (= 5 секунд).</target>
        </trans-unit>
        <trans-unit id="20367003fe74f6da823d6b30bb16e4e87af78658" translate="yes" xml:space="preserve">
          <source>An integer (1-3) that together with the node name identifies a specific instance of the node.</source>
          <target state="translated">Целое число (1-3),которое вместе с именем узла идентифицирует конкретный экземпляр узла.</target>
        </trans-unit>
        <trans-unit id="2b542080580abe037742a55ddf14a6930d08becf" translate="yes" xml:space="preserve">
          <source>An integer encoded using &lt;code&gt;&lt;a href=&quot;#SMALL_INTEGER_EXT&quot;&gt;SMALL_INTEGER_EXT&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#INTEGER_EXT&quot;&gt;INTEGER_EXT&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;Uniq&lt;/code&gt; is the hash value of the parse for the fun.</source>
          <target state="translated">Целое число, закодированное с помощью &lt;code&gt;&lt;a href=&quot;#SMALL_INTEGER_EXT&quot;&gt;SMALL_INTEGER_EXT&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;#INTEGER_EXT&quot;&gt;INTEGER_EXT&lt;/a&gt;&lt;/code&gt; . &lt;code&gt;Uniq&lt;/code&gt; - это хеш-значение синтаксического анализа для развлечения.</target>
        </trans-unit>
        <trans-unit id="1e4efa5efcaeac48981fcfd626c607b83f7f9504" translate="yes" xml:space="preserve">
          <source>An integer encoded using &lt;code&gt;&lt;a href=&quot;#SMALL_INTEGER_EXT&quot;&gt;SMALL_INTEGER_EXT&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#INTEGER_EXT&quot;&gt;INTEGER_EXT&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;Uniq&lt;/code&gt; is the hash value of the parse tree for the fun.</source>
          <target state="translated">Целое число, закодированное с помощью &lt;code&gt;&lt;a href=&quot;#SMALL_INTEGER_EXT&quot;&gt;SMALL_INTEGER_EXT&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;#INTEGER_EXT&quot;&gt;INTEGER_EXT&lt;/a&gt;&lt;/code&gt; . &lt;code&gt;Uniq&lt;/code&gt; - это хеш-значение дерева синтаксического анализа для развлечения.</target>
        </trans-unit>
        <trans-unit id="6a456c7d96d3be7599b8cda2609e6963d6b1de33" translate="yes" xml:space="preserve">
          <source>An integer encoded using &lt;code&gt;&lt;a href=&quot;#SMALL_INTEGER_EXT&quot;&gt;SMALL_INTEGER_EXT&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#INTEGER_EXT&quot;&gt;INTEGER_EXT&lt;/a&gt;&lt;/code&gt;. Is typically a small index into the module's fun table.</source>
          <target state="translated">Целое число, закодированное с помощью &lt;code&gt;&lt;a href=&quot;#SMALL_INTEGER_EXT&quot;&gt;SMALL_INTEGER_EXT&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;#INTEGER_EXT&quot;&gt;INTEGER_EXT&lt;/a&gt;&lt;/code&gt; . Обычно представляет собой небольшой индекс в таблице развлечений модуля.</target>
        </trans-unit>
        <trans-unit id="6847ab27f51bb9e93819111b69d00c639f57f360" translate="yes" xml:space="preserve">
          <source>An integer encoded using &lt;code&gt;&lt;a href=&quot;#SMALL_INTEGER_EXT&quot;&gt;SMALL_INTEGER_EXT&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#INTEGER_EXT&quot;&gt;INTEGER_EXT&lt;/a&gt;&lt;/code&gt;. It is typically a small index into the module's fun table.</source>
          <target state="translated">Целое число, закодированное с помощью &lt;code&gt;&lt;a href=&quot;#SMALL_INTEGER_EXT&quot;&gt;SMALL_INTEGER_EXT&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;#INTEGER_EXT&quot;&gt;INTEGER_EXT&lt;/a&gt;&lt;/code&gt; . Обычно это небольшой указатель в таблице развлечений модуля.</target>
        </trans-unit>
        <trans-unit id="52ca0689079aeaec22ad11a25c6606e5822f73a2" translate="yes" xml:space="preserve">
          <source>An integer in base 2-36 with Erlang-style base prefix (for example, &lt;code&gt;&quot;16#ffff&quot;&lt;/code&gt;) is expected.</source>
          <target state="translated">Ожидается целое число в базе 2-36 с базовым префиксом в стиле Эрланга (например, &lt;code&gt;&quot;16#ffff&quot;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="0baa0e36919cfd4cb52692449c99e08703eaa7db" translate="yes" xml:space="preserve">
          <source>An integer in the range 16#D800 to 16#DFFF (invalid range reserved for UTF-16 surrogate pairs)</source>
          <target state="translated">Целое число в диапазоне от 16#D800 до 16#DFFF (недействительный диапазон,зарезервированный для суррогатных пар UTF-16)</target>
        </trans-unit>
        <trans-unit id="bb1ed6dc3882ba274f91970e7d75def0f49d509c" translate="yes" xml:space="preserve">
          <source>An integer time-out value means that the supervisor tells the child process to terminate by calling &lt;code&gt;exit(Child, shutdown)&lt;/code&gt; and then waits for an exit signal back. If no exit signal is received within the specified time, the child process is unconditionally terminated using &lt;code&gt;exit(Child, kill)&lt;/code&gt;.</source>
          <target state="translated">Целочисленное значение тайм-аута означает, что супервизор сообщает дочернему процессу о завершении, вызывая &lt;code&gt;exit(Child, shutdown)&lt;/code&gt; а затем ожидает ответного сигнала выхода. Если в течение указанного времени не будет получен сигнал выхода, дочерний процесс безоговорочно завершается с помощью &lt;code&gt;exit(Child, kill)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dabb549e21a83ec6de830a51776d90cd83956482" translate="yes" xml:space="preserve">
          <source>An integer value must be at least 6000 as required by RFC 3539. Defaults to 30000.</source>
          <target state="translated">Целое значение должно быть не менее 6000,как того требует RFC 3539.По умолчанию 30000.</target>
        </trans-unit>
        <trans-unit id="d78dcbf8380694136f9fe0e5e3000d89748b331e" translate="yes" xml:space="preserve">
          <source>An integer() =&amp;lt; byte_size(Replacement)</source>
          <target state="translated">Целое число () = &amp;lt;byte_size (Замена)</target>
        </trans-unit>
        <trans-unit id="eae8aee5e13d9ea04bc6a6da3331604fadfde37c" translate="yes" xml:space="preserve">
          <source>An integer, defaults to 10.</source>
          <target state="translated">Целое число,по умолчанию 10.</target>
        </trans-unit>
        <trans-unit id="aaa8bce129155fc26fcd48a021b1aba6aab1fe3e" translate="yes" xml:space="preserve">
          <source>An interesting case is if the client terminates before the server links to it. This is taken care of because linking to a non-existent process causes an exit signal, &lt;code&gt;{'EXIT',From,noproc}&lt;/code&gt;, to be automatically generated. This is as if the process terminated immediately after the link operation.</source>
          <target state="translated">Интересный случай, если клиент завершает работу до того, как сервер свяжется с ним. Об этом позаботятся, потому что связывание с несуществующим процессом вызывает автоматическую генерацию сигнала выхода &lt;code&gt;{'EXIT',From,noproc}&lt;/code&gt; . Это как если бы процесс завершился сразу после операции связывания.</target>
        </trans-unit>
        <trans-unit id="ee03f04c6056f21df390b2f5c06e43f9b491765e" translate="yes" xml:space="preserve">
          <source>An interface to the BEAM file format.</source>
          <target state="translated">Интерфейс для формата файла BEAM.</target>
        </trans-unit>
        <trans-unit id="4ca4ff078056e9ca1ab23144711d3518ee5bc785" translate="yes" xml:space="preserve">
          <source>An interval timer, that is, a timer created by evaluating any of the functions &lt;code&gt;&lt;a href=&quot;#apply_interval-4&quot;&gt;apply_interval/4&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#send_interval-3&quot;&gt;send_interval/3&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;#send_interval-2&quot;&gt;send_interval/2&lt;/a&gt;&lt;/code&gt; is linked to the process to which the timer performs its task.</source>
          <target state="translated">Интервальный таймер, то есть таймер, созданный путем оценки любой из функций &lt;code&gt;&lt;a href=&quot;#apply_interval-4&quot;&gt;apply_interval/4&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#send_interval-3&quot;&gt;send_interval/3&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;#send_interval-2&quot;&gt;send_interval/2&lt;/a&gt;&lt;/code&gt; , связан с процессом, с которым таймер выполняет свою задачу.</target>
        </trans-unit>
        <trans-unit id="627a27fca6a1a1ae0460efe310199a632e472370" translate="yes" xml:space="preserve">
          <source>An introduction to release handling and an example is provided in &lt;code&gt;OTP Design Principles&lt;/code&gt; in &lt;strong&gt;System Documentation&lt;/strong&gt;.</source>
          <target state="translated">Введение в обработку релизов и пример приведены в &lt;code&gt;OTP Design Principles&lt;/code&gt; в &lt;strong&gt;системной документации&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="287260ebb6db5e5582d099b0dc6bfe58c59eb75e" translate="yes" xml:space="preserve">
          <source>An invalid filter is equivalent to &lt;code&gt;{any,[]}&lt;/code&gt;, a filter that matches no peer.</source>
          <target state="translated">Недопустимый фильтр эквивалентен &lt;code&gt;{any,[]}&lt;/code&gt; , фильтру, который не соответствует ни одному узлу.</target>
        </trans-unit>
        <trans-unit id="9e6dcd0df7d6d68a6b64b4961a4174415586bdf3" translate="yes" xml:space="preserve">
          <source>An invalid option will cause &lt;code&gt;&lt;a href=&quot;#call-4&quot;&gt;call/4&lt;/a&gt;&lt;/code&gt; to fail.</source>
          <target state="translated">Недопустимая опция приведет к сбою &lt;code&gt;&lt;a href=&quot;#call-4&quot;&gt;call/4&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="76b5573333f8a9fca96e5af38089644ca66d3800" translate="yes" xml:space="preserve">
          <source>An iterator representing the key value associations in a map.</source>
          <target state="translated">Итератор,представляющий ассоциации ключевых значений на карте.</target>
        </trans-unit>
        <trans-unit id="14321e1cc5b6395a120d907a4630fb98a62c2d1a" translate="yes" xml:space="preserve">
          <source>An object has a DESCRIPTIONS field. The descriptions-field will not be included in the compiled mib by default. In order to get the description, the mib must be compiled with the option &lt;code&gt;description&lt;/code&gt;.</source>
          <target state="translated">У объекта есть поле DESCRIPTIONS. Поле описания не будет включено в скомпилированный mib по умолчанию. Чтобы получить описание, mib должен быть скомпилирован с &lt;code&gt;description&lt;/code&gt; опции .</target>
        </trans-unit>
        <trans-unit id="ee729cb9bca371486670bc70823bacf43371b316" translate="yes" xml:space="preserve">
          <source>An object is an instance of a class. An object set is a set containing objects of a specified class. A definition can look as follows:</source>
          <target state="translated">Объект является экземпляром класса.Набор объектов-это набор,содержащий объекты указанного класса.Определение может выглядеть следующим образом:</target>
        </trans-unit>
        <trans-unit id="e2b7535d7ca9a8df2239bf3e1efc196455c377ac" translate="yes" xml:space="preserve">
          <source>An object stored on the process heap, called a &lt;strong&gt;ProcBin&lt;/strong&gt;</source>
          <target state="translated">Объект, хранящийся в куче процесса, называется &lt;strong&gt;ProcBin&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3818f7783f7171a63429c22bb4302a762ba63b49" translate="yes" xml:space="preserve">
          <source>An on-the-fly FIPS mode change would thus have to be performed in a critical section protected from any concurrently running crypto operations. Furthermore in case of failure all crypto calls would have to be disabled from the Erlang or nif code. This would be too much effort put into this not too important feature.</source>
          <target state="translated">Таким образом,изменение режима FIPS &quot;на лету&quot; должно выполняться в критической секции,защищенной от любых параллельно выполняемых криптографических операций.Более того,в случае сбоя все крипто-вызовы должны быть отключены из кода Erlang или nif.Это было бы слишком усердно вложено в эту не слишком важную функцию.</target>
        </trans-unit>
        <trans-unit id="9371fdc5c24675c1a03db0e4febf59f3f93d39d8" translate="yes" xml:space="preserve">
          <source>An opaque continuation.</source>
          <target state="translated">Непрозрачное продолжение.</target>
        </trans-unit>
        <trans-unit id="9edd135f1be094e9884cdcb725f6b9ae29fe3900" translate="yes" xml:space="preserve">
          <source>An opaque handle identifing a distribution channel.</source>
          <target state="translated">Непрозрачная ручка,идентифицирующая канал распространения.</target>
        </trans-unit>
        <trans-unit id="8c06de9b53b4d538ad0727d2caa8126ac3202325" translate="yes" xml:space="preserve">
          <source>An opaque term (a tuple) representing a trace token.</source>
          <target state="translated">Непрозрачный термин (кортеж),представляющий собой жетон следа.</target>
        </trans-unit>
        <trans-unit id="ffe2dac12bf2d4212d4d945b02bbd44d5376742d" translate="yes" xml:space="preserve">
          <source>An opaque term holding prepared code.</source>
          <target state="translated">Непрозрачный термин с подготовленным кодом.</target>
        </trans-unit>
        <trans-unit id="03858ce2c3f12ebaf6e00e9dd03bc97d803626cb" translate="yes" xml:space="preserve">
          <source>An opaque term returned in, for example, &lt;code&gt;#sctp_paddr_change{}&lt;/code&gt;, which identifies an association for an SCTP socket. The term is opaque except for the special value &lt;code&gt;0&lt;/code&gt;, which has a meaning such as &quot;the whole endpoint&quot; or &quot;all future associations&quot;.</source>
          <target state="translated">Непрозрачный термин, возвращаемый, например, в &lt;code&gt;#sctp_paddr_change{}&lt;/code&gt; , который определяет связь для сокета SCTP. Термин непрозрачен, за исключением специального значения &lt;code&gt;0&lt;/code&gt; , которое имеет такое значение, как &amp;laquo;вся конечная точка&amp;raquo; или &amp;laquo;все будущие ассоциации&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="1e180467754d1704f0a1df2c1b8933d6555d46e3" translate="yes" xml:space="preserve">
          <source>An open disk log that is not a distributed disk log is said to be a &lt;strong&gt;local disk log&lt;/strong&gt;. A local disk log is only accessible from the node where the disk log process runs, whereas a distributed disk log is accessible from all nodes in the Erlang system, except for those nodes where a local disk log with the same name as the distributed disk log exists. All processes on nodes that have access to a local or distributed disk log can log items or otherwise change, inspect, or close the log.</source>
          <target state="translated">Журнал открытого диска, который не является журналом распределенного диска, называется журналом &lt;strong&gt;локального диска&lt;/strong&gt; . Журнал локального диска доступен только с узла, на котором выполняется процесс журнала диска, тогда как журнал распределенного диска доступен со всех узлов в системе Erlang, за исключением тех узлов, где журнал локального диска с тем же именем, что и журнал распределенного диска существуют. Все процессы на узлах, которые имеют доступ к журналу локального или распределенного диска, могут записывать элементы или иным образом изменять, проверять или закрывать журнал.</target>
        </trans-unit>
        <trans-unit id="663c631411ce98e587cb31bbdd92c54b2f404346" translate="yes" xml:space="preserve">
          <source>An opening curly bracket that appears in a position where a quantifier is not allowed, or one that does not match the syntax of a quantifier, is taken as a literal character. For example, {,6} is not a quantifier, but a literal string of four characters.</source>
          <target state="translated">Открывающаяся фигурная скобка,которая появляется в позиции,где квантификатор не разрешен,или в позиции,которая не соответствует синтаксису квантификатора,принимается за буквальный символ.Например,{,6}-это не квантификатор,а буквальная строка из четырех символов.</target>
        </trans-unit>
        <trans-unit id="6d91a90e980eb6fd08ac0210bb0e415b4c7d6aec" translate="yes" xml:space="preserve">
          <source>An opening square bracket introduces a character class, terminated by a closing square bracket. A closing square bracket on its own is not special by default. However, if option &lt;code&gt;PCRE_JAVASCRIPT_COMPAT&lt;/code&gt; is set, a lone closing square bracket causes a compile-time error. If a closing square bracket is required as a member of the class, it is to be the first data character in the class (after an initial circumflex, if present) or escaped with a backslash.</source>
          <target state="translated">Открывающая квадратная скобка вводит класс символов, заканчивающийся закрывающей квадратной скобкой. Сама по себе закрывающая квадратная скобка не является особенной по умолчанию. Однако, если установлен параметр &lt;code&gt;PCRE_JAVASCRIPT_COMPAT&lt;/code&gt; , одиночная закрывающая квадратная скобка вызывает ошибку времени компиляции. Если в качестве члена класса требуется закрывающая квадратная скобка, она должна быть первым символом данных в классе (после начального циркумфлекса, если он есть) или экранироваться обратной косой чертой.</target>
        </trans-unit>
        <trans-unit id="421ee4a2487ab9d284a55e10a7feef99df36fe1c" translate="yes" xml:space="preserve">
          <source>An operator &lt;code&gt;Op/A&lt;/code&gt; is called (this is handled as a call to function &lt;code&gt;erlang:Op/A&lt;/code&gt;).</source>
          <target state="translated">Вызывается оператор &lt;code&gt;Op/A&lt;/code&gt; (это обрабатывается как вызов функции &lt;code&gt;erlang:Op/A&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="e3b3ea6fc52831c5fd41836eff34ba6b00be455a" translate="yes" xml:space="preserve">
          <source>An option change within a subpattern (see section &lt;code&gt;&lt;a href=&quot;#sect11&quot;&gt;Subpatterns&lt;/a&gt;&lt;/code&gt;) affects only that part of the subpattern that follows it. So, the following matches abc and aBc and no other strings (assuming &lt;code&gt;caseless&lt;/code&gt; is not used):</source>
          <target state="translated">Изменение параметра внутри подшаблона (смотрите раздел &lt;code&gt;&lt;a href=&quot;#sect11&quot;&gt;Subpatterns&lt;/a&gt;&lt;/code&gt; ) влияет только на ту часть подшаблона, которая следует за ним. Итак, следующие строки соответствуют abc и aBc и никаким другим строкам (при условии, что &lt;code&gt;caseless&lt;/code&gt; не используется):</target>
        </trans-unit>
        <trans-unit id="551e2c1420f8fdac698ff16d393dbd32e2b136d1" translate="yes" xml:space="preserve">
          <source>An option is to have table columns that are not visible through the SNMP protocol. These columns must be the last columns of the table. In the previous example, the SNMP table could have columns &lt;code&gt;department&lt;/code&gt; and &lt;code&gt;name&lt;/code&gt; only. The application could then use column &lt;code&gt;telno&lt;/code&gt; internally, but it would not be visible to the SNMP managers.</source>
          <target state="translated">Как вариант, столбцы таблицы не видны по протоколу SNMP. Эти столбцы должны быть последними столбцами таблицы. В предыдущем примере таблица SNMP могла содержать только столбцы &amp;laquo; &lt;code&gt;department&lt;/code&gt; и &amp;laquo; &lt;code&gt;name&lt;/code&gt; . После этого приложение могло бы использовать столбец &lt;code&gt;telno&lt;/code&gt; внутри, но он не был бы виден менеджерам SNMP.</target>
        </trans-unit>
        <trans-unit id="251d94f1b858e81b3828d5510ef8d65b4159fa2d" translate="yes" xml:space="preserve">
          <source>An optional sign character is expected. A sign character &lt;code&gt;-&lt;/code&gt; gives return value &lt;code&gt;-1&lt;/code&gt;. Sign character &lt;code&gt;+&lt;/code&gt; or none gives &lt;code&gt;1&lt;/code&gt;. The field width parameter is ignored. Leading whitespace characters are not skipped.</source>
          <target state="translated">Ожидается необязательный знаковый символ. Знаковый символ &lt;code&gt;-&lt;/code&gt; возвращает значение &lt;code&gt;-1&lt;/code&gt; . Знак &lt;code&gt;+&lt;/code&gt; или ничего не дает &lt;code&gt;1&lt;/code&gt; . Параметр ширины поля игнорируется. Начальные пробельные символы не пропускаются.</target>
        </trans-unit>
        <trans-unit id="5bd063d57db649e289c855dd3e2315e3fa45b28a" translate="yes" xml:space="preserve">
          <source>An ordinary send operation has occurred and &lt;code&gt;emsg-&amp;gt;to&lt;/code&gt; contains the pid of the recipient. The message is in &lt;code&gt;emsg-&amp;gt;msg&lt;/code&gt;.</source>
          <target state="translated">Произошла обычная операция отправки, и в &lt;code&gt;emsg-&amp;gt;to&lt;/code&gt; содержится pid-адрес получателя. Сообщение находится в &lt;code&gt;emsg-&amp;gt;msg&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e1d95c4d5591cafb0876b899034ba6f76ed65f97" translate="yes" xml:space="preserve">
          <source>An outbound Diameter message.</source>
          <target state="translated">Сообщение об исходящем диаметре.</target>
        </trans-unit>
        <trans-unit id="1e88996446c45983e274f354d9264bc09768f004" translate="yes" xml:space="preserve">
          <source>An overview and summary log file for one or more test suites.</source>
          <target state="translated">Обзор и сводный лог-файл для одного или нескольких комплектов тестов.</target>
        </trans-unit>
        <trans-unit id="07c751adb15fe1a4d90ad6b7ab4efbae14d0517a" translate="yes" xml:space="preserve">
          <source>An positive integer, Current default is 1.</source>
          <target state="translated">Положительное целое число,по умолчанию Текущее-1.</target>
        </trans-unit>
        <trans-unit id="787be85125e87b09b59e0cb657acd9746aadc985" translate="yes" xml:space="preserve">
          <source>An small receive buffer may result in a peer having to resend incoming messages: set the &lt;code&gt;inet(3)&lt;/code&gt; option &lt;code&gt;recbuf&lt;/code&gt; to increase the buffer size.</source>
          <target state="translated">Небольшой буфер приема может привести к тому, что &lt;code&gt;recbuf&lt;/code&gt; повторно отправлять входящие сообщения: установите параметр recbuf &lt;code&gt;inet(3)&lt;/code&gt; чтобы увеличить размер буфера.</target>
        </trans-unit>
        <trans-unit id="b84da375fbfec2799e71fb40dea34b2a15da15f8" translate="yes" xml:space="preserve">
          <source>An small send buffer may result in outgoing messages being discarded: set the &lt;code&gt;inet(3)&lt;/code&gt; option &lt;code&gt;sndbuf&lt;/code&gt; to increase the buffer size.</source>
          <target state="translated">Небольшой буфер отправки может привести к тому, что исходящие сообщения будут отброшены: установите параметр &lt;code&gt;sndbuf&lt;/code&gt; &lt;code&gt;inet(3)&lt;/code&gt; чтобы увеличить размер буфера.</target>
        </trans-unit>
        <trans-unit id="d96da95c5f83e85028d2b14bb4d255a0e3e94e02" translate="yes" xml:space="preserve">
          <source>An unanchored pattern is required to match before or at the first newline in the subject string, although the matched text can continue over the newline.</source>
          <target state="translated">Некорректированный образец должен совпадать до или при первой новой строке темы,хотя совпадающий текст может продолжаться поверх новой строки.</target>
        </trans-unit>
        <trans-unit id="4b306841248c236a72e8f0555640ea69d77d6059" translate="yes" xml:space="preserve">
          <source>An unpacked release can be &lt;strong&gt;installed&lt;/strong&gt;. The release handler then evaluates the instructions in &lt;code&gt;relup&lt;/code&gt;, step by step:</source>
          <target state="translated">Можно &lt;strong&gt;установить&lt;/strong&gt; распакованный выпуск . Затем обработчик выпуска оценивает инструкции в &lt;code&gt;relup&lt;/code&gt; , шаг за шагом:</target>
        </trans-unit>
        <trans-unit id="e2a7a24dafaa1825d952fc1c97adf9898005d178" translate="yes" xml:space="preserve">
          <source>An unsigned integer in base 2-36 is expected. The field width parameter is used to specify base. Leading whitespace characters are not skipped.</source>
          <target state="translated">В базе 2-36 ожидается беззнаковое целое число.Параметр width поля используется для задания базы.Не пропускаются ведущие пробельные символы.</target>
        </trans-unit>
        <trans-unit id="5286dbe6f7d10b81b53f17ba799c7e96413f6797" translate="yes" xml:space="preserve">
          <source>An unsigned integer type to be used as &lt;code&gt;size_t&lt;/code&gt;.</source>
          <target state="translated">Целочисленный тип без знака, который будет использоваться как &lt;code&gt;size_t&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e3acdebb60e03e4a5883afd990fc02df22667fa4" translate="yes" xml:space="preserve">
          <source>An unsigned number specifies an absolute reference without the ambiguity that is present in the older syntax. It is also useful when literal digits follow the reference. A negative number is a relative reference. Consider the following example:</source>
          <target state="translated">Беззнаковое число задает абсолютную ссылку без двусмысленности,присутствующей в старом синтаксисе.Это также полезно,когда буквальные цифры следуют за ссылкой.Отрицательное число является относительной ссылкой.Рассмотрим следующий пример:</target>
        </trans-unit>
        <trans-unit id="a5a2acb9415f75900acb288ec02a5216db6932a2" translate="yes" xml:space="preserve">
          <source>An unsuccessful parse results in an error, which may be a tuple &lt;code&gt;{error,Reason}&lt;/code&gt; or an exit: &lt;code&gt;{'EXIT',Reason}&lt;/code&gt;. According to the XML 1.0 standard there are &lt;code&gt;fatal error&lt;/code&gt; and &lt;code&gt;error&lt;/code&gt; situations. The fatal errors &lt;strong&gt;must&lt;/strong&gt; be detected by a conforming parser while an error &lt;strong&gt;may&lt;/strong&gt; be detected. Both categories of errors are reported as fatal errors by this version of xmerl, most often as an exit.</source>
          <target state="translated">Неудачный синтаксический анализ приводит к ошибке, которая может быть кортежем &lt;code&gt;{error,Reason}&lt;/code&gt; или выходом: &lt;code&gt;{'EXIT',Reason}&lt;/code&gt; . Согласно стандарту XML 1.0 существуют &lt;code&gt;fatal error&lt;/code&gt; и &lt;code&gt;error&lt;/code&gt; ситуации. Фатальные ошибки &lt;strong&gt;должны&lt;/strong&gt; быть обнаружены соответствующим анализатором, в то время как ошибка &lt;strong&gt;может&lt;/strong&gt; быть обнаружена. Обе категории ошибок сообщаются этой версией xmerl как фатальные, чаще всего как выход.</target>
        </trans-unit>
        <trans-unit id="7163f714c0d7d3d9c32d044b0d111ec28a619786" translate="yes" xml:space="preserve">
          <source>An unsuccessful parse returns &lt;code&gt;fail&lt;/code&gt;.</source>
          <target state="translated">Неудачный синтаксический анализ возвращает &lt;code&gt;fail&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="02f4b27ab4513330d46be679798a210b6836a2bb" translate="yes" xml:space="preserve">
          <source>Analogous to &lt;code&gt;file/1&lt;/code&gt;, but takes a list of forms (in the Erlang abstract format representation) as first argument. Option &lt;code&gt;binary&lt;/code&gt; is implicit, that is, no object code file is produced. For options that normally produce a listing file, such as 'E', the internal format for that compiler pass (an Erlang term, usually not a binary) is returned instead of a binary.</source>
          <target state="translated">Аналогично &lt;code&gt;file/1&lt;/code&gt; , но принимает список форм (в представлении абстрактного формата Erlang) в качестве первого аргумента. Параметр &lt;code&gt;binary&lt;/code&gt; является неявным, то есть файл объектного кода не создается. Для параметров, которые обычно создают файл листинга, например 'E', вместо двоичного файла возвращается внутренний формат для этого прохода компилятора (термин Erlang, обычно не двоичный).</target>
        </trans-unit>
        <trans-unit id="3cfe04f04027764dce50d28f04c6ecdc62b2192c" translate="yes" xml:space="preserve">
          <source>Analyses raw profile data in the &lt;code&gt;fprof&lt;/code&gt; server. If called while there is no raw profile data available, &lt;code&gt;{error, no_profile}&lt;/code&gt; is returned.</source>
          <target state="translated">Анализирует необработанные данные профиля на сервере &lt;code&gt;fprof&lt;/code&gt; . Если вызывается при отсутствии доступных сырых данных профиля &lt;code&gt;{error, no_profile}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="89317b6eabbaf1e93c0ba769bafe3e74241cb74f" translate="yes" xml:space="preserve">
          <source>Analysing; the raw profile data is sorted and dumped in text format either to file or console.</source>
          <target state="translated">Анализ;необработанные данные профиля сортируются и выгружаются в текстовом формате в файл или в консоль.</target>
        </trans-unit>
        <trans-unit id="d2cf6f5074202c6dffeb5df464d0d684dc5098ed" translate="yes" xml:space="preserve">
          <source>Analysing; the raw profile data is sorted, filtered and dumped in text format either to file or console. The text format intended to be both readable for a human reader, as well as parsable with the standard erlang parsing tools.</source>
          <target state="translated">Анализ;исходные данные профиля сортируются,фильтруются и выгружаются в текстовом формате в файл или в консоль.Текстовый формат предназначен как для чтения человеком,так и для разбора стандартными инструментами для разбора erlang.</target>
        </trans-unit>
        <trans-unit id="4263863a7deae978003d2e013055bda2bff811e8" translate="yes" xml:space="preserve">
          <source>Analysis and Utility Functions for Instrumentation</source>
          <target state="translated">Функции анализа и полезности для приборостроения</target>
        </trans-unit>
        <trans-unit id="33f45b6fb7384ec22cc9390f7b457147372d66b4" translate="yes" xml:space="preserve">
          <source>Analysis of type &lt;code&gt;calls&lt;/code&gt; is used to find out how many times something has been called and is represented by an integer &lt;code&gt;Calls&lt;/code&gt;.</source>
          <target state="translated">Анализ типов &lt;code&gt;calls&lt;/code&gt; используется, чтобы узнать, сколько раз что-то было вызвано и представлено целым числом &lt;code&gt;Calls&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="48073b1fc4f77f2b869e441fa62a40b84feeabf7" translate="yes" xml:space="preserve">
          <source>Analysis of type &lt;code&gt;coverage&lt;/code&gt; is used to find out how much of the code has been executed and how much has not been executed. Coverage is represented by a tuple &lt;code&gt;{Cov,NotCov}&lt;/code&gt;, where &lt;code&gt;Cov&lt;/code&gt; is the number of executable lines that have been executed at least once and &lt;code&gt;NotCov&lt;/code&gt; is the number of executable lines that have not been executed.</source>
          <target state="translated">Анализ &lt;code&gt;coverage&lt;/code&gt; типов используется, чтобы узнать, какая часть кода была выполнена, а какая не выполнена. Покрытие представлено кортежем &lt;code&gt;{Cov,NotCov}&lt;/code&gt; , где &lt;code&gt;Cov&lt;/code&gt; - это количество исполняемых строк, которые были выполнены хотя бы один раз, а &lt;code&gt;NotCov&lt;/code&gt; - это количество исполняемых строк, которые не были выполнены.</target>
        </trans-unit>
        <trans-unit id="28ba17ebd62463c58ee41d92b0a1a95c3083533c" translate="yes" xml:space="preserve">
          <source>Analyzed Modules.</source>
          <target state="translated">Анализируемые модули.</target>
        </trans-unit>
        <trans-unit id="460a405a1e58156272bea6a12fd732a955bce079" translate="yes" xml:space="preserve">
          <source>Analyzes a &quot;source code form&quot; node. If &lt;code&gt;Node&lt;/code&gt; is a &quot;form&quot; type (cf. &lt;code&gt;erl_syntax:is_form/1&lt;/code&gt;), the returned value is a tuple &lt;code&gt;{Type, Info}&lt;/code&gt; where &lt;code&gt;Type&lt;/code&gt; is the node type and &lt;code&gt;Info&lt;/code&gt; depends on &lt;code&gt;Type&lt;/code&gt;, as follows:</source>
          <target state="translated">Анализирует узел &amp;laquo;формы исходного кода&amp;raquo;. Если &lt;code&gt;Node&lt;/code&gt; является типом &quot;формы&quot; (см. &lt;code&gt;erl_syntax:is_form/1&lt;/code&gt; ), возвращаемое значение представляет собой кортеж &lt;code&gt;{Type, Info}&lt;/code&gt; где &lt;code&gt;Type&lt;/code&gt; - это тип узла, а &lt;code&gt;Info&lt;/code&gt; зависит от &lt;code&gt;Type&lt;/code&gt; , как показано ниже:</target>
        </trans-unit>
        <trans-unit id="70965802de1cdb6b126e1b8a48df610079f9270c" translate="yes" xml:space="preserve">
          <source>Analyzes a sequence of &quot;program forms&quot;. The given &lt;code&gt;Forms&lt;/code&gt; may be a single syntax tree of type &lt;code&gt;form_list&lt;/code&gt;, or a list of &quot;program form&quot; syntax trees. The returned value is a list of pairs &lt;code&gt;{Key, Info}&lt;/code&gt;, where each value of &lt;code&gt;Key&lt;/code&gt; occurs at most once in the list; the absence of a particular key indicates that there is no well-defined value for that key.</source>
          <target state="translated">Анализирует последовательность &amp;laquo;программных форм&amp;raquo;. Данные &lt;code&gt;Forms&lt;/code&gt; могут быть одним синтаксическим деревом типа &lt;code&gt;form_list&lt;/code&gt; или списком синтаксических деревьев &quot;программной формы&quot;. Возвращаемое значение представляет собой список пар &lt;code&gt;{Key, Info}&lt;/code&gt; , где каждое значение &lt;code&gt;Key&lt;/code&gt; встречается в списке не более одного раза; отсутствие конкретного ключа указывает на то, что для этого ключа нет четко определенного значения.</target>
        </trans-unit>
        <trans-unit id="125ee5a1deaa5b8939564769889b333464e04925" translate="yes" xml:space="preserve">
          <source>Analyzes an attribute node. If &lt;code&gt;Node&lt;/code&gt; represents a preprocessor directive, the atom &lt;code&gt;preprocessor&lt;/code&gt; is returned. Otherwise, if &lt;code&gt;Node&lt;/code&gt; represents a module attribute &quot;&lt;code&gt;-&amp;lt;em&amp;gt;Name&amp;lt;/em&amp;gt;...&lt;/code&gt;&quot;, a tuple &lt;code&gt;{Name, Info}&lt;/code&gt; is returned, where &lt;code&gt;Info&lt;/code&gt; depends on &lt;code&gt;Name&lt;/code&gt;, as follows:</source>
          <target state="translated">Анализирует узел атрибута. Если &lt;code&gt;Node&lt;/code&gt; представляет директиву &lt;code&gt;preprocessor&lt;/code&gt; , возвращается препроцессор атома . В противном случае, если &lt;code&gt;Node&lt;/code&gt; представляет атрибут модуля &quot; &lt;code&gt;-&amp;lt;em&amp;gt;Name&amp;lt;/em&amp;gt;...&lt;/code&gt; &quot;, возвращается кортеж &lt;code&gt;{Name, Info}&lt;/code&gt; , где &lt;code&gt;Info&lt;/code&gt; зависит от &lt;code&gt;Name&lt;/code&gt; , как показано ниже:</target>
        </trans-unit>
        <trans-unit id="ef0e889da6c5673f0c6c3783750b01ddef2430db" translate="yes" xml:space="preserve">
          <source>Anchoring a regular expression with &lt;code&gt;^&lt;/code&gt; and &lt;code&gt;$&lt;/code&gt; is not implemented in the current version of Leex and just generates a parse error.</source>
          <target state="translated">Привязка регулярного выражения с помощью &lt;code&gt;^&lt;/code&gt; и &lt;code&gt;$&lt;/code&gt; не реализована в текущей версии Leex и просто генерирует ошибку синтаксического анализа.</target>
        </trans-unit>
        <trans-unit id="5aace8ed00b60bb7e100a0b020b8edb7ad2f3f46" translate="yes" xml:space="preserve">
          <source>And Erlang can, for example, be started as follows:</source>
          <target state="translated">А Эрланг,например,можно начинать следующим образом:</target>
        </trans-unit>
        <trans-unit id="b8f34731c7287aa9d542ce40b48dcd5e89055c21" translate="yes" xml:space="preserve">
          <source>And Fred logs on at c3@gollum:</source>
          <target state="translated">И Фред заходит на сайт c3@gollum:</target>
        </trans-unit>
        <trans-unit id="ad418175758dc89c620d8f9c8bf36148160d3cc4" translate="yes" xml:space="preserve">
          <source>And a callback module &lt;code&gt;ch2.erl&lt;/code&gt;:</source>
          <target state="translated">И модуль обратного вызова &lt;code&gt;ch2.erl&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="bc42de5f14df63fba8158204084452c3de1e9550" translate="yes" xml:space="preserve">
          <source>And a message is sent to &lt;code&gt;mess_client&lt;/code&gt;:</source>
          <target state="translated">И сообщение отправляется &lt;code&gt;mess_client&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="f85832be1eb32b29f34ce60cf06e70f7454181cc" translate="yes" xml:space="preserve">
          <source>And a registered process &lt;code&gt;call_server&lt;/code&gt; with &lt;code&gt;Pid == &amp;lt;0.31.0&amp;gt;&lt;/code&gt; like this:</source>
          <target state="translated">И зарегистрированный процесс &lt;code&gt;call_server&lt;/code&gt; с &lt;code&gt;Pid == &amp;lt;0.31.0&amp;gt;&lt;/code&gt; следующим образом:</target>
        </trans-unit>
        <trans-unit id="016bfa826d5a0a1dc763d9d701f8d84a2f10cb83" translate="yes" xml:space="preserve">
          <source>And finally a print-out of the entire internal form:</source>
          <target state="translated">И,наконец,распечатка всей внутренней формы:</target>
        </trans-unit>
        <trans-unit id="2dce29dbbed23249542b78338df490da31ae18ce" translate="yes" xml:space="preserve">
          <source>And for 32 bit MSYS2:</source>
          <target state="translated">И за 32-битный MSYS2:</target>
        </trans-unit>
        <trans-unit id="18268da8563e564ff18a86c591d17c9624d33b67" translate="yes" xml:space="preserve">
          <source>And for &lt;code&gt;id_key_purpose()&lt;/code&gt;:</source>
          <target state="translated">И для &lt;code&gt;id_key_purpose()&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="768d8655abda5968a013c7a5532efc554753aa5e" translate="yes" xml:space="preserve">
          <source>And for a general range, with &lt;code&gt;N = 1&lt;/code&gt; for &lt;code&gt;exrop&lt;/code&gt;, and &lt;code&gt;N = 3&lt;/code&gt; for &lt;code&gt;exs1024s&lt;/code&gt;:</source>
          <target state="translated">И для общего диапазона с &lt;code&gt;N = 1&lt;/code&gt; для &lt;code&gt;exrop&lt;/code&gt; и &lt;code&gt;N = 3&lt;/code&gt; для &lt;code&gt;exs1024s&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="61f39e10b59f839d05bcb5b7c68284a73641ca05" translate="yes" xml:space="preserve">
          <source>And for a table:</source>
          <target state="translated">И за стол:</target>
        </trans-unit>
        <trans-unit id="f32a5379f3901539fad45723e5315643f98fc032" translate="yes" xml:space="preserve">
          <source>And in, for example, a test suite or a &lt;code&gt;Common Test Hook&lt;/code&gt; function:</source>
          <target state="translated">И, например, в наборе тестов или функции &lt;code&gt;Common Test Hook&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b39e800fe601dd23ff96f3b954343b70886eba71" translate="yes" xml:space="preserve">
          <source>And now calculate the factorial of 4.</source>
          <target state="translated">А теперь посчитай факториал 4.</target>
        </trans-unit>
        <trans-unit id="ff53b326c9030dfc8cca6e6eeea89ed1bca8b120" translate="yes" xml:space="preserve">
          <source>And so on. This is an example of &quot;lazy embedding&quot;.</source>
          <target state="translated">И так далее.Это пример &quot;ленивого встраивания&quot;.</target>
        </trans-unit>
        <trans-unit id="3d04ebfadc776eff044e9ab17fb00bbb3672b0de" translate="yes" xml:space="preserve">
          <source>And some more missing time can be explained by the fact that &lt;code&gt;prim_file:open_int/4&lt;/code&gt; both calls &lt;code&gt;prim_file:drv_command/2&lt;/code&gt; directly as well as through &lt;code&gt;prim_file:open_int_setopts/3&lt;/code&gt;, which complicates the picture.</source>
          <target state="translated">И еще немного пропущенного времени можно объяснить тем фактом, что &lt;code&gt;prim_file:open_int/4&lt;/code&gt; вызывает как &lt;code&gt;prim_file:drv_command/2&lt;/code&gt; напрямую, так и через &lt;code&gt;prim_file:open_int_setopts/3&lt;/code&gt; , что усложняет картину.</target>
        </trans-unit>
        <trans-unit id="8cf834b4e9e15474add0506b2ca7667f1657b7fc" translate="yes" xml:space="preserve">
          <source>And that the following &lt;code&gt;match_object/2&lt;/code&gt; call:</source>
          <target state="translated">И что следующий &lt;code&gt;match_object/2&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="8f00d04a945f184b6b51fdfb0f37681af77ca055" translate="yes" xml:space="preserve">
          <source>And the &quot;ping&quot; process on kosken is started (from the code above you can see that a parameter of the &lt;code&gt;start_ping&lt;/code&gt; function is the node name of the Erlang system where &quot;pong&quot; is running):</source>
          <target state="translated">И процесс &quot;ping&quot; на kosken запускается (из приведенного выше кода вы можете видеть, что параметр функции &lt;code&gt;start_ping&lt;/code&gt; - это имя узла системы Erlang, в которой выполняется &quot;pong&quot;):</target>
        </trans-unit>
        <trans-unit id="2693ffaa052313e03eb07995024a1c7e72e3275b" translate="yes" xml:space="preserve">
          <source>And the following is seen on (ping@gollum):</source>
          <target state="translated">А на (ping@gollum)видно следующее:</target>
        </trans-unit>
        <trans-unit id="ebfe1b54ebc30947606f5975c34d6ebe29e39c89" translate="yes" xml:space="preserve">
          <source>And the programmers view of the same message. First a list of ActionRequest records are constructed and then it is sent with one of the send functions in the API:</source>
          <target state="translated">И программисты видят то же самое сообщение.Сначала строится список записей ActionRequest,а затем он отправляется с помощью одной из функций отправки в API:</target>
        </trans-unit>
        <trans-unit id="03698758048cbbb8b318d7515b41284328ea7526" translate="yes" xml:space="preserve">
          <source>And the result shows that the Diffie-Hellman Group1 is added at the head of the kex list</source>
          <target state="translated">И результат показывает,что группа Diffie-Hellman Group1 добавлена во главе списка клавиш.</target>
        </trans-unit>
        <trans-unit id="677cd0a3c0fb90ee5c86c4248e6d3267ac590429" translate="yes" xml:space="preserve">
          <source>And then start the node like this (line breaks in the command are for readability, and shall not be there when typed):</source>
          <target state="translated">А затем запустите узел вот так (разрывы строк в команде для удобочитаемости,и не должны быть там при наборе):</target>
        </trans-unit>
        <trans-unit id="fde94e3ac5c46972cb11a3709289f9bf4a90825b" translate="yes" xml:space="preserve">
          <source>And waits for a reply from the server.</source>
          <target state="translated">И ждет ответа от сервера.</target>
        </trans-unit>
        <trans-unit id="f29a859de34d8206276e4fbe86c78577ef463680" translate="yes" xml:space="preserve">
          <source>And:</source>
          <target state="translated">And:</target>
        </trans-unit>
        <trans-unit id="ad0b0ead53d6b8fc85f3fce651e80aab826cba51" translate="yes" xml:space="preserve">
          <source>Anders Lindgren. The Erlang editing mode for Emacs. Ericsson, 1998.</source>
          <target state="translated">Андерс Линдгрен.Режим редактирования Эрланга для Emacs.Эрикссон,1998.</target>
        </trans-unit>
        <trans-unit id="3739bc370f12e87066b88cf2270e55e1c92949ae" translate="yes" xml:space="preserve">
          <source>Annotate as much of the Erlang VM as is practical.</source>
          <target state="translated">Аннотируйте столько Erlang VM,сколько это практично.</target>
        </trans-unit>
        <trans-unit id="42f041d8d82dfcdd94c890b27d2f3e8b347c5ee7" translate="yes" xml:space="preserve">
          <source>Another (and quite common) case is where the regular expression matches all of the subject:</source>
          <target state="translated">Другой (и довольно распространенный)случай,когда регулярное выражение соответствует всему предмету:</target>
        </trans-unit>
        <trans-unit id="e1571b6f7c9e0a03f663d6275fdaf99d08ee31ce" translate="yes" xml:space="preserve">
          <source>Another (probably more) useful value is to calculate total scheduler utilization weighted against maximum amount of available CPU time:</source>
          <target state="translated">Другое (возможно,более)полезное значение-это вычисление общей загрузки планировщика,взвешенной по максимальному количеству доступного процессорного времени:</target>
        </trans-unit>
        <trans-unit id="b99bcf832002b6fe6b87b103723c706b4bdbbefb" translate="yes" xml:space="preserve">
          <source>Another case where implicit anchoring is not applied is when the leading .* is inside an atomic group. Once again, a match at the start can fail where a later one succeeds. Consider the following pattern:</source>
          <target state="translated">Другой случай,когда неявная привязка не применяется,это когда ведущий .*находится внутри атомарной группы.Опять же,матч в начале может провалиться,если более поздний матч завершится успешно.Рассмотрим следующий пример:</target>
        </trans-unit>
        <trans-unit id="b6501d70d60a5f422101c69f878f9e7bfb3e72c3" translate="yes" xml:space="preserve">
          <source>Another change in OTP R16 is that the generated function &lt;code&gt;encode/2&lt;/code&gt; always returns a binary. Function &lt;code&gt;encode/2&lt;/code&gt; for the &lt;code&gt;BER&lt;/code&gt; back end used to return an iolist.</source>
          <target state="translated">Еще одно изменение в OTP R16 заключается в том, что сгенерированная функция &lt;code&gt;encode/2&lt;/code&gt; всегда возвращает двоичный файл. Функция &lt;code&gt;encode/2&lt;/code&gt; для серверной части &lt;code&gt;BER&lt;/code&gt; используется для возврата списка iolist.</target>
        </trans-unit>
        <trans-unit id="b70c5cc0d369162e261ca81ea1735ca702bccb0d" translate="yes" xml:space="preserve">
          <source>Another class of warnings is generated by the compiler during optimization and code generation. They warn about patterns that will never match (such as &lt;code&gt;a=b&lt;/code&gt;), guards that always evaluate to false, and expressions that always fail (such as &lt;code&gt;atom+42&lt;/code&gt;).</source>
          <target state="translated">Другой класс предупреждений генерируется компилятором во время оптимизации и генерации кода. Они предупреждают о шаблонах, которые никогда не будут совпадать (например, &lt;code&gt;a=b&lt;/code&gt; ), охранниках, которые всегда имеют значение false, и выражениях, которые всегда терпят неудачу (например, &lt;code&gt;atom+42&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="59b4ff59fcdc233f63b2cf21983b15abb6faf95d" translate="yes" xml:space="preserve">
          <source>Another epmd module may return port and distribution protocol version as well.</source>
          <target state="translated">Другой модуль epmd может вернуть порт и версию протокола распространения.</target>
        </trans-unit>
        <trans-unit id="ea09d8fd71909463182da1b49dfda6ea71b82be5" translate="yes" xml:space="preserve">
          <source>Another example is provided in the discussion of DEFINE earlier.</source>
          <target state="translated">Другой пример приведен ранее в обсуждении DEFINE.</target>
        </trans-unit>
        <trans-unit id="3ea9622b1ad7af37a9c244233dff71af29dca1a6" translate="yes" xml:space="preserve">
          <source>Another example is the accented characters, where the same glyph has two different representations. The Swedish letter &quot;&amp;ouml;&quot; is one example. The Unicode standard has a code point for it, but you can also write it as &quot;o&quot; followed by &quot;U+0308&quot; (Combining Diaeresis, with the simplified meaning that the last letter is to have &quot;&amp;uml;&quot; above). They have the same glyph, user perceived character. They are for most purposes the same, but have different representations. For example, MacOS X converts all filenames to use Combining Diaeresis, while most other programs (including Erlang) try to hide that by doing the opposite when, for example, listing directories. However it is done, it is usually important to normalize such characters to avoid confusion.</source>
          <target state="translated">Другой пример - символы с диакритическими знаками, где один и тот же глиф имеет два разных представления. Шведская буква &amp;laquo;&amp;ouml;&amp;raquo; является одним из примеров. В стандарте Unicode есть кодовая точка для этого, но вы также можете написать ее как &amp;laquo;o&amp;raquo;, за которой следует &amp;laquo;U + 0308&amp;raquo; (объединение диэрезиса, с упрощенным значением, что последняя буква должна иметь &amp;laquo;&amp;uml;&amp;raquo; выше). У них одинаковый символ, воспринимаемый пользователем. Для большинства целей они одинаковы, но имеют разные представления. Например, MacOS X преобразует все имена файлов для использования Combining Diaeresis, в то время как большинство других программ (включая Erlang) пытаются скрыть это, делая обратное, например, при выводе списка каталогов. Как бы то ни было, обычно важно нормализовать такие символы, чтобы избежать путаницы.</target>
        </trans-unit>
        <trans-unit id="dedf5ccdeb6bf446ef7cfb01d8db4c4b042b2078" translate="yes" xml:space="preserve">
          <source>Another example:</source>
          <target state="translated">Еще один пример:</target>
        </trans-unit>
        <trans-unit id="10e22f420f5fb57de1efd47e3c06ac5d2818764b" translate="yes" xml:space="preserve">
          <source>Another format handler can be used to calculate the time spent by the garbage collector:</source>
          <target state="translated">Другой обработчик форматов может быть использован для расчета времени,затрачиваемого сборщиком мусора:</target>
        </trans-unit>
        <trans-unit id="e08d37d65c3f60aefa8f056e068de920de2ce50a" translate="yes" xml:space="preserve">
          <source>Another function, &lt;code&gt;FunctionName&lt;/code&gt;, written in the same module, can be passed as an argument, using the following syntax:</source>
          <target state="translated">Другая функция, &lt;code&gt;FunctionName&lt;/code&gt; , написанная в том же модуле, может быть передана в качестве аргумента, используя следующий синтаксис:</target>
        </trans-unit>
        <trans-unit id="309724e134f98c0df5fbbbce98193626ec467206" translate="yes" xml:space="preserve">
          <source>Another interesting category of test suites is the one checking that fixed bugs do not reoccur. When a bugfix is introduced, a test case that checks for that specific bug is written and submitted to the affected test suites.</source>
          <target state="translated">Другая интересная категория тестовых наборов-это проверка того,что исправленные ошибки не повторяются.Когда вводится исправление ошибки,тестовый случай,который проверяет эту конкретную ошибку,записывается и передаётся в соответствующие наборы тестов.</target>
        </trans-unit>
        <trans-unit id="cb92a0549dc41682e51c74824d96791888dae3f5" translate="yes" xml:space="preserve">
          <source>Another list-valued representation allows a message to be specified as a list whose head is a &lt;code&gt;&lt;a href=&quot;#header&quot;&gt;header()&lt;/a&gt;&lt;/code&gt; and whose tail is an &lt;code&gt;&lt;a href=&quot;#avp&quot;&gt;avp()&lt;/a&gt;&lt;/code&gt; list. This representation is used by diameter itself when relaying requests as directed by the return value of a &lt;code&gt;handle_request/3&lt;/code&gt; callback. It differs from the other two in that it bypasses the checks for messages that do not agree with their definitions in the dictionary in question: messages are sent exactly as specified.</source>
          <target state="translated">Другое представление со списком значений позволяет указать сообщение в виде списка, &lt;code&gt;&lt;a href=&quot;#header&quot;&gt;header()&lt;/a&gt;&lt;/code&gt; которого является header (), а хвостом - список &lt;code&gt;&lt;a href=&quot;#avp&quot;&gt;avp()&lt;/a&gt;&lt;/code&gt; . Это представление используется самим диаметром при ретрансляции запросов в соответствии с указанием возвращаемого значения обратного вызова &lt;code&gt;handle_request/3&lt;/code&gt; . Он отличается от двух других тем, что обходит проверки сообщений, которые не соответствуют их определениям в рассматриваемом словаре: сообщения отправляются точно так, как указано.</target>
        </trans-unit>
        <trans-unit id="3bc710dca2b3bdaba9f012e29980c13b5a971099" translate="yes" xml:space="preserve">
          <source>Another not uncommon scenario is to use the &lt;code&gt;&lt;a href=&quot;#Event%20Time-Outs&quot;&gt;Event Time-Out&lt;/a&gt;&lt;/code&gt; to trigger hibernation after a certain time of inactivity. There is also a server start option &lt;code&gt;{hibernate_after, Timeout}&lt;/code&gt; for &lt;code&gt;start/3,4&lt;/code&gt; or &lt;code&gt;start_link/3,4&lt;/code&gt; that may be used to automatically hibernate the server.</source>
          <target state="translated">Другой нередкий сценарий - использование &lt;code&gt;&lt;a href=&quot;#Event%20Time-Outs&quot;&gt;Event Time-Out&lt;/a&gt;&lt;/code&gt; для перехода в спящий режим после определенного времени бездействия. Существует также опция запуска сервера &lt;code&gt;{hibernate_after, Timeout}&lt;/code&gt; для &lt;code&gt;start/3,4&lt;/code&gt; или &lt;code&gt;start_link/3,4&lt;/code&gt; , которая может использоваться для автоматического перехода сервера в спящий режим.</target>
        </trans-unit>
        <trans-unit id="044ae5d76a606877516f83b8c8933abd5c6a7076" translate="yes" xml:space="preserve">
          <source>Another obstacle is that some drivers do not support scrollable cursors which has the effect that the only way to traverse the result set is sequentially, with next, from the first row to the last, and once you pass a row you can not go back. This means that some functions in the interface will not work together with certain drivers. A similar problem is that not all drivers support &quot;row count&quot; for select queries, hence resulting in that the function &lt;code&gt;select_count/[3,4]&lt;/code&gt; will return &lt;code&gt;{ok, undefined}&lt;/code&gt; instead of &lt;code&gt;{ok, NrRows}&lt;/code&gt; where &lt;code&gt;NrRows&lt;/code&gt; is the number of rows in the result set.</source>
          <target state="translated">Еще одним препятствием является то, что некоторые драйверы не поддерживают прокручиваемые курсоры, что приводит к тому, что единственный способ пройти по набору результатов - последовательно, со следующим, от первой строки до последней, и после прохождения строки вы не можете вернуться. Это означает, что некоторые функции интерфейса не будут работать вместе с определенными драйверами. Похожая проблема заключается в том, что не все драйверы поддерживают &amp;laquo;счетчик строк&amp;raquo; ​​для запросов на выборку, в результате чего функция &lt;code&gt;select_count/[3,4]&lt;/code&gt; вернет &lt;code&gt;{ok, undefined}&lt;/code&gt; вместо &lt;code&gt;{ok, NrRows}&lt;/code&gt; где &lt;code&gt;NrRows&lt;/code&gt; - количество строк в наборе результатов.</target>
        </trans-unit>
        <trans-unit id="03ee6d9c0afb580323a804d3eab4b79501841ee3" translate="yes" xml:space="preserve">
          <source>Another option is to have an entire Erlang archive in the script. In an archive script, the interpretation of the script header is the same as in a script containing source code. This means that you can make an archive file executable by prepending the file with the lines starting with &lt;code&gt;#!&lt;/code&gt; and &lt;code&gt;%%!&lt;/code&gt; mentioned above. In an archive script, the &lt;code&gt;main/1&lt;/code&gt; function must be exported. By default the &lt;code&gt;main/1&lt;/code&gt; function in the module with the same name as the basename of the &lt;code&gt;escript&lt;/code&gt; file is invoked. This behavior can be overridden by setting flag &lt;code&gt;-escript main Module&lt;/code&gt; as one of the emulator flags. &lt;code&gt;Module&lt;/code&gt; must be the name of a module that has an exported &lt;code&gt;main/1&lt;/code&gt; function. For more information about archives and code loading, see &lt;code&gt;code(3)&lt;/code&gt;.</source>
          <target state="translated">Другой вариант - иметь в скрипте весь архив Erlang. В сценарии архива интерпретация заголовка сценария такая же, как и в сценарии, содержащем исходный код. Это означает , что вы можете сделать архивный файл исполняемым, предваряя файл с линией , начиная с &lt;code&gt;#!&lt;/code&gt; и &lt;code&gt;%%!&lt;/code&gt; упомянутое выше. В сценарии архива необходимо экспортировать функцию &lt;code&gt;main/1&lt;/code&gt; . По умолчанию вызывается функция &lt;code&gt;main/1&lt;/code&gt; в модуле с тем же именем, что и базовое &lt;code&gt;escript&lt;/code&gt; файла escript . Это поведение можно &lt;code&gt;-escript main Module&lt;/code&gt; установив флаг -escript main Module в качестве одного из флагов эмулятора. &lt;code&gt;Module&lt;/code&gt; должен быть именем модуля, у которого есть экспортированный &lt;code&gt;main/1&lt;/code&gt; функция. Для получения дополнительной информации об архивах и загрузке &lt;code&gt;code(3)&lt;/code&gt; см. Code (3) .</target>
        </trans-unit>
        <trans-unit id="4546ea403c4311f977adb2b766d698fe32f245cc" translate="yes" xml:space="preserve">
          <source>Another option is to try to read the whole file in UTF-8 encoding and see if it fails. Here we need to read the file using function &lt;code&gt;io:get_chars/3&lt;/code&gt;, as we have to read characters with a code point &amp;gt; 255:</source>
          <target state="translated">Другой вариант - попытаться прочитать весь файл в кодировке UTF-8 и посмотреть, не удастся ли это. Здесь нам нужно прочитать файл с помощью функции &lt;code&gt;io:get_chars/3&lt;/code&gt; , так как мы должны читать символы с кодовой точкой&amp;gt; 255:</target>
        </trans-unit>
        <trans-unit id="2021d9cc317b0927635ce1f21baa6d5c5c2fd2c7" translate="yes" xml:space="preserve">
          <source>Another reason to filter the state can be that the state is too large to print, as it fills the error log with uninteresting details.</source>
          <target state="translated">Другой причиной для фильтрации состояния может быть то,что состояние слишком большое для печати,так как оно заполняет журнал ошибок неинтересными деталями.</target>
        </trans-unit>
        <trans-unit id="7a115c72c46457e1cc897d74c27eca7f1027cedb" translate="yes" xml:space="preserve">
          <source>Another special case is &lt;code&gt;{message, true}&lt;/code&gt;, which sets the default behavior, as if the function had no match specification; trace message is sent with no extra information (if no other calls to &lt;code&gt;message&lt;/code&gt; are placed before &lt;code&gt;{message, true}&lt;/code&gt;, it is in fact a &quot;noop&quot;).</source>
          <target state="translated">Другой особый случай - &lt;code&gt;{message, true}&lt;/code&gt; , который устанавливает поведение по умолчанию, как если бы функция не имела спецификации соответствия; Сообщение трассировки отправляется без дополнительной информации (если перед &lt;code&gt;{message, true}&lt;/code&gt; выполняются никакие другие вызовы &lt;code&gt;message&lt;/code&gt; , это фактически &quot;noop&quot;).</target>
        </trans-unit>
        <trans-unit id="b328fda19cc7c09a7238c9e06a0a0739b5922118" translate="yes" xml:space="preserve">
          <source>Another thing that has been added to the messenger is a macro. The file &lt;code&gt;mess_config.hrl&lt;/code&gt; contains the definition:</source>
          <target state="translated">Еще одна вещь, которая добавлена ​​в мессенджер, - это макрос. Файл &lt;code&gt;mess_config.hrl&lt;/code&gt; содержит определение:</target>
        </trans-unit>
        <trans-unit id="99d5f93c71127e50ff2df112ec2940a1427d89fd" translate="yes" xml:space="preserve">
          <source>Another top type is &lt;code&gt;Window&lt;/code&gt; whose subcomponent actions in type &lt;code&gt;Status&lt;/code&gt; and the parts of component &lt;code&gt;buttonList&lt;/code&gt; are to be left undecoded. For this type, the function is named &lt;code&gt;decode__Window_exclusive&lt;/code&gt;. The complete &lt;code&gt;Exclusive_Decode_Instruction&lt;/code&gt; configuration is as follows:</source>
          <target state="translated">Другой верхний тип - это &lt;code&gt;Window&lt;/code&gt; , действия подкомпонентов которого в типе &lt;code&gt;Status&lt;/code&gt; и части компонента &lt;code&gt;buttonList&lt;/code&gt; следует оставить незакодированными. Для этого типа функция называется &lt;code&gt;decode__Window_exclusive&lt;/code&gt; . Полная конфигурация &lt;code&gt;Exclusive_Decode_Instruction&lt;/code&gt; выглядит следующим образом:</target>
        </trans-unit>
        <trans-unit id="13dcc540145f3717c4e3da385edb41a46331941d" translate="yes" xml:space="preserve">
          <source>Another typical overload situation is when the transaction manager cannot commit transactions at the same pace as the applications perform updates of disc resident tables. When this occurs, the message queue of the transaction manager continues to grow until the memory is exhausted or the load decreases.</source>
          <target state="translated">Другая типичная ситуация перегрузки-это когда менеджер транзакций не может совершать транзакции с той же скоростью,с которой приложения выполняют обновление таблиц-резидентов дисков.Когда это происходит,очередь сообщений менеджера транзакций продолжает расти до тех пор,пока память не будет исчерпана или нагрузка не уменьшится.</target>
        </trans-unit>
        <trans-unit id="98678e4d7ab8dd43533df21422a00a975cfb7ba2" translate="yes" xml:space="preserve">
          <source>Another use of backslash is for specifying generic character types:</source>
          <target state="translated">Другое использование обратного слеша-для указания общих типов символов:</target>
        </trans-unit>
        <trans-unit id="d11989cebb406290ee365764c7d5bbc4cda6a5df" translate="yes" xml:space="preserve">
          <source>Another use of resource objects is to create binary terms with user-defined memory management. &lt;code&gt;&lt;a href=&quot;#enif_make_resource_binary&quot;&gt;enif_make_resource_binary&lt;/a&gt;&lt;/code&gt; creates a binary term that is connected to a resource object. The destructor of the resource is called when the binary is garbage collected, at which time the binary data can be released. An example of this can be a binary term consisting of data from a &lt;code&gt;mmap&lt;/code&gt;'ed file. The destructor can then do &lt;code&gt;munmap&lt;/code&gt; to release the memory region.</source>
          <target state="translated">Другое использование объектов ресурсов - создание двоичных терминов с пользовательским управлением памятью. &lt;code&gt;&lt;a href=&quot;#enif_make_resource_binary&quot;&gt;enif_make_resource_binary&lt;/a&gt;&lt;/code&gt; создает двоичный термин, связанный с объектом ресурса. Деструктор ресурса вызывается, когда двоичный файл собирается сборщиком мусора, после чего двоичные данные могут быть освобождены. Примером этого может быть двоичный термин, состоящий из данных из файла &lt;code&gt;mmap&lt;/code&gt; . Затем деструктор может выполнить &lt;code&gt;munmap&lt;/code&gt; , чтобы освободить область памяти.</target>
        </trans-unit>
        <trans-unit id="89a360b85a80ca71d493e71ccdbdd60966421147" translate="yes" xml:space="preserve">
          <source>Another usefull way to debug the agent is to pretty-print the content of all the tables and/or variables handled directly by the agent. This can be done by simply calling:</source>
          <target state="translated">Другой полезный способ отладки агента-распечатка содержимого всех таблиц и/или переменных,обрабатываемых агентом напрямую.Это можно сделать простым вызовом:</target>
        </trans-unit>
        <trans-unit id="631c1a6022578e3dee77a77d5a201dbaf7fc890e" translate="yes" xml:space="preserve">
          <source>Another way of creating and giving a variable a value is by using the match operator = . So if you write &lt;code&gt;M = 5&lt;/code&gt;, a variable called &lt;code&gt;M&lt;/code&gt; is created with the value 5. If, in the same scope, you then write &lt;code&gt;M = 6&lt;/code&gt;, an error is returned. Try this out in the shell:</source>
          <target state="translated">Другой способ создания и присвоения переменной значения - использование оператора сопоставления =. Итак, если вы напишете &lt;code&gt;M = 5&lt;/code&gt; , будет создана переменная с именем &lt;code&gt;M&lt;/code&gt; со значением 5. Если в той же области вы напишете &lt;code&gt;M = 6&lt;/code&gt; , будет возвращена ошибка. Попробуйте это в оболочке:</target>
        </trans-unit>
        <trans-unit id="beaca871bb31a9b7342a385e8665dcccb5f095c3" translate="yes" xml:space="preserve">
          <source>Another way of measuring system load is to divide the number of busy CPU cycles by the total number of CPU cycles. This produces values in the 0-100 range immediately. However, this method hides the fact that a machine can be more or less saturated. CPU utilization is therefore a better name than system load for this measure.</source>
          <target state="translated">Другим способом измерения нагрузки системы является деление количества занятых циклов ЦП на общее количество циклов ЦП.При этом сразу же получаются значения в диапазоне 0-100.Однако за этим методом скрывается тот факт,что машина может быть более или менее насыщенной.Таким образом,использование процессора-это лучшее название,чем системная нагрузка для данной меры.</target>
        </trans-unit>
        <trans-unit id="b77873668d8c56ac39491fa5217a49f4134bcf11" translate="yes" xml:space="preserve">
          <source>Another way of tracing from the shell is to explicitly start a &lt;strong&gt;tracer&lt;/strong&gt; and then set the &lt;strong&gt;trace flags&lt;/strong&gt; of your choice on the processes you want to trace, e.g. trace messages and process events:</source>
          <target state="translated">Другой способ трассировки из оболочки - явно запустить &lt;strong&gt;трассировщик,&lt;/strong&gt; а затем установить &lt;strong&gt;флажки трассировки&lt;/strong&gt; по вашему выбору для процессов, которые вы хотите отслеживать, например, сообщений трассировки и событий процесса:</target>
        </trans-unit>
        <trans-unit id="4b3ea1157a1e3ea0689f0faf146db56bad7d2042" translate="yes" xml:space="preserve">
          <source>Another way of writing an ASCII space</source>
          <target state="translated">Другой способ написания пространства ASCII</target>
        </trans-unit>
        <trans-unit id="a5bc6479b6ef5274ab93784eff95e33c9f88ddd5" translate="yes" xml:space="preserve">
          <source>Another way to avoid the ambiguity inherent in the use of digits following a backslash is to use the \g escape sequence. This escape must be followed by an unsigned number or a negative number, optionally enclosed in braces. The following examples are identical:</source>
          <target state="translated">Другой способ избежать двусмысленности,присущей использованию цифр после обратного слеша,заключается в использовании экранирующей последовательности \g.За этой экранирующей последовательностью должно следовать неподписанное число или отрицательное число,опционально заключенное в фигурные скобки.Следующие примеры идентичны:</target>
        </trans-unit>
        <trans-unit id="f458a6491b77ecc59537584a0547eeea4ea55395" translate="yes" xml:space="preserve">
          <source>Another way to do it is through a convenience macro &lt;code&gt;?HANDLE_COMMON/0&lt;/code&gt;:</source>
          <target state="translated">Другой способ сделать это - использовать &lt;code&gt;?HANDLE_COMMON/0&lt;/code&gt; макрос ? HANDLE_COMMON / 0 :</target>
        </trans-unit>
        <trans-unit id="b35642aab3a9386c91529db83078918912ca068a" translate="yes" xml:space="preserve">
          <source>Another way to handle a late time-out can be to not cancel it, but to ignore it if it arrives in a state where it is known to be late.</source>
          <target state="translated">Другой способ справиться с поздним тайм-аутом может заключаться в том,чтобы не отменять его,а игнорировать,если он приходит в состояние,в котором,как известно,он опаздывает.</target>
        </trans-unit>
        <trans-unit id="eab5fcb4424189a95f4719598653f6d7d5dc728f" translate="yes" xml:space="preserve">
          <source>Another way to shut down the Erlang system is by entering &lt;code&gt;halt()&lt;/code&gt;:</source>
          <target state="translated">Другой способ выключить систему Erlang - ввести &lt;code&gt;halt()&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="92b1a017090fced695e7f6bcf9c838e8a0d3d945" translate="yes" xml:space="preserve">
          <source>Another way to to profile a specific function is to use &lt;code&gt;lcnt:apply/3&lt;/code&gt; or &lt;code&gt;lcnt:apply/1&lt;/code&gt; which does &lt;code&gt;lcnt:clear/0&lt;/code&gt; before the function and &lt;code&gt;lcnt:collect/0&lt;/code&gt; after its invocation. This method should only be used in micro-benchmarks since it sets &lt;code&gt;copy_save&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; for the duration of the function call, which may cause the emulator to run out of memory if attempted under load.</source>
          <target state="translated">Другой способ профилировать конкретную функцию - использовать &lt;code&gt;lcnt:apply/3&lt;/code&gt; или &lt;code&gt;lcnt:apply/1&lt;/code&gt; , который выполняет &lt;code&gt;lcnt:clear/0&lt;/code&gt; перед функцией и &lt;code&gt;lcnt:collect/0&lt;/code&gt; после ее вызова. Этот метод следует использовать только в &lt;code&gt;copy_save&lt;/code&gt; поскольку он устанавливает для copy_save значение &lt;code&gt;true&lt;/code&gt; на время вызова функции, что может привести к нехватке памяти в эмуляторе при попытке выполнить попытку под нагрузкой.</target>
        </trans-unit>
        <trans-unit id="5c508f0c9fa83edd30ab43020e59877671989a88" translate="yes" xml:space="preserve">
          <source>Answer message are constructed by the user, except in the case of some protocol errors, in which case the procedures are followed.</source>
          <target state="translated">Ответное сообщение строится пользователем,за исключением некоторых ошибок протокола,в случае которых выполняются процедуры.</target>
        </trans-unit>
        <trans-unit id="f990ff206be9a4e762b0a5b682dfe432e3832419" translate="yes" xml:space="preserve">
          <source>Answers are formulated by the user in most cases. Answers setting the E-bit can be sent by diameter itself in response to a request that cannot be handled by the user.</source>
          <target state="translated">Ответы в большинстве случаев формулируются пользователем.Ответы,задающие E-бит,могут быть отправлены сами по диаметру в ответ на запрос,который не может быть обработан пользователем.</target>
        </trans-unit>
        <trans-unit id="169733414ac8e9f0faf1ef2e5d16061544324aa9" translate="yes" xml:space="preserve">
          <source>Answers sent by diameter set the E-bit in the Diameter Header. Since RFC 3588 allows only 3xxx result codes in an &lt;code&gt;answer-message&lt;/code&gt;, &lt;code&gt;answer&lt;/code&gt; has the same semantics as &lt;code&gt;answer_3xxx&lt;/code&gt; when the transport in question has been configured with &lt;code&gt;diameter_gen_base_rfc3588&lt;/code&gt; as its common dictionary. Since RFC 6733 allows both 3xxx and 5xxx result codes in an &lt;code&gt;answer-message&lt;/code&gt;, a transport with &lt;code&gt;diameter_gen_base_rfc6733&lt;/code&gt; as its common dictionary does distinguish between &lt;code&gt;answer_3xxx&lt;/code&gt; and &lt;code&gt;answer&lt;/code&gt;.</source>
          <target state="translated">Ответы, отправленные по диаметру, устанавливают бит E в заголовке диаметра. Поскольку RFC 3588 допускает только 3ххх результирующих кодов в сообщении- &lt;code&gt;answer-message&lt;/code&gt; , &lt;code&gt;answer&lt;/code&gt; имеет ту же семантику, что и &lt;code&gt;answer_3xxx&lt;/code&gt; , когда рассматриваемый транспорт настроен с &lt;code&gt;diameter_gen_base_rfc3588&lt;/code&gt; качестве общего словаря. Так как RFC 6733 позволяет как 3xxx и 5XXX результирующие коды в &lt;code&gt;answer-message&lt;/code&gt; , транспортный с &lt;code&gt;diameter_gen_base_rfc6733&lt;/code&gt; в качестве своего общего словаря делает различие между &lt;code&gt;answer_3xxx&lt;/code&gt; и &lt;code&gt;answer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9583537a8ed59cb672cc8682638edb7ea0041ae4" translate="yes" xml:space="preserve">
          <source>Answers with an unknown Hop-by-Hop Identifier are discarded.</source>
          <target state="translated">Ответы с неизвестным Hop-by-Hop Identifier отбрасываются.</target>
        </trans-unit>
        <trans-unit id="3e81377569d145d2611633104ee94d8766283535" translate="yes" xml:space="preserve">
          <source>Any &quot;non-word&quot; character</source>
          <target state="translated">Любой &quot;не-словесный&quot; персонаж</target>
        </trans-unit>
        <trans-unit id="85b67100ee7b90e2d2abf4839ebeec56e0874f69" translate="yes" xml:space="preserve">
          <source>Any &quot;word&quot; character</source>
          <target state="translated">Любой &quot;словесный&quot; символ</target>
        </trans-unit>
        <trans-unit id="1da1afe530c2a09d5e4de484a6f1c75175270218" translate="yes" xml:space="preserve">
          <source>Any &lt;code&gt;&lt;a href=&quot;#type-enter_action&quot;&gt;actions&lt;/a&gt;&lt;/code&gt; returned from this call are handled as if they were appended to the actions returned by the state callback that caused the state entry.</source>
          <target state="translated">Любые &lt;code&gt;&lt;a href=&quot;#type-enter_action&quot;&gt;actions&lt;/a&gt;&lt;/code&gt; возвращаемые из этого вызова, обрабатываются так, как если бы они были добавлены к действиям, возвращаемым обратным вызовом состояния, вызвавшим запись состояния.</target>
        </trans-unit>
        <trans-unit id="0b7cf207a939aac0db4a1f7cbab14794dc67dd5e" translate="yes" xml:space="preserve">
          <source>Any &lt;code&gt;{netmask,_}&lt;/code&gt;, &lt;code&gt;{broadaddr,_}&lt;/code&gt;, or &lt;code&gt;{dstaddr,_}&lt;/code&gt; tuples that follow an &lt;code&gt;{addr,_}&lt;/code&gt; tuple concerns that address.</source>
          <target state="translated">Любые &lt;code&gt;{broadaddr,_}&lt;/code&gt; &lt;code&gt;{netmask,_}&lt;/code&gt; , {broadaddr, _} или &lt;code&gt;{dstaddr,_}&lt;/code&gt; , следующие за кортежем &lt;code&gt;{addr,_}&lt;/code&gt; , относятся к этому адресу.</target>
        </trans-unit>
        <trans-unit id="9fe20daf09d18f48c6423a6e429a2fc557aba724" translate="yes" xml:space="preserve">
          <source>Any Erlang terms can be passed to a NIF as function arguments and be returned as function return values. The terms are of C-type &lt;code&gt;&lt;a href=&quot;#ERL_NIF_TERM&quot;&gt;ERL_NIF_TERM&lt;/a&gt;&lt;/code&gt; and can only be read or written using API functions. Most functions to read the content of a term are prefixed &lt;code&gt;enif_get_&lt;/code&gt; and usually return &lt;code&gt;true&lt;/code&gt; (or &lt;code&gt;false&lt;/code&gt;) if the term is of the expected type (or not). The functions to write terms are all prefixed &lt;code&gt;enif_make_&lt;/code&gt; and usually return the created &lt;code&gt;ERL_NIF_TERM&lt;/code&gt;. There are also some functions to query terms, like &lt;code&gt;enif_is_atom&lt;/code&gt;, &lt;code&gt;enif_is_identical&lt;/code&gt;, and &lt;code&gt;enif_compare&lt;/code&gt;.</source>
          <target state="translated">Любые термины Erlang могут быть переданы в NIF как аргументы функции и возвращены как возвращаемые функцией значения. Термины относятся к типу C &lt;code&gt;&lt;a href=&quot;#ERL_NIF_TERM&quot;&gt;ERL_NIF_TERM&lt;/a&gt;&lt;/code&gt; и могут быть прочитаны или записаны только с использованием функций API. Большинство функций для чтения содержимого термина имеют префикс &lt;code&gt;enif_get_&lt;/code&gt; и обычно возвращают &lt;code&gt;true&lt;/code&gt; (или &lt;code&gt;false&lt;/code&gt; ), если термин имеет ожидаемый тип (или нет). Все функции для записи терминов имеют префикс &lt;code&gt;enif_make_&lt;/code&gt; и обычно возвращают созданный &lt;code&gt;ERL_NIF_TERM&lt;/code&gt; . Есть также некоторые функции для запроса терминов, например &lt;code&gt;enif_is_atom&lt;/code&gt; , &lt;code&gt;enif_is_identical&lt;/code&gt; и &lt;code&gt;enif_compare&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="91ee5b553226d8e2804f2a9b1b852b4188f05b90" translate="yes" xml:space="preserve">
          <source>Any Perl &quot;word&quot; character. Matches the same characters as Xan, plus underscore.</source>
          <target state="translated">Любой Перл &quot;слово&quot;.Совпадает с теми же символами,что и Xan,плюс подчеркивание.</target>
        </trans-unit>
        <trans-unit id="2a6ee9049397cf4af2bc8f42c671c9f43f3a14a3" translate="yes" xml:space="preserve">
          <source>Any Perl space character. Matches the same as Xps, except that vertical tab is excluded.</source>
          <target state="translated">Любой персонаж пробела Perl.Совпадает с Xps,за исключением того,что вертикальная закладка исключена.</target>
        </trans-unit>
        <trans-unit id="226314c00726c9d0643044e7e14db2c1e0125f64" translate="yes" xml:space="preserve">
          <source>Any Posix space character. Matches the characters tab, line feed, vertical tab, form feed, carriage return, and any other character that has the Z (separator) property.</source>
          <target state="translated">Любой символ пробела Posix.Подходит для символов табуляции,перевода строки,вертикальной табуляции,перевода формы,возврата каретки и любого другого символа,имеющего свойство Z (разделитель).</target>
        </trans-unit>
        <trans-unit id="86c83cd82d7f4cc2cb73a7ce452f11a22f90230a" translate="yes" xml:space="preserve">
          <source>Any SNMP agent must implement the &lt;code&gt;system&lt;/code&gt; group and the &lt;code&gt;snmp&lt;/code&gt; group, defined in MIB-II. The definitions of these groups have changed from SNMPv1 to SNMPv2. MIBs and implementations for both of these versions are Provided in the distribution. The MIB file for SNMPv1 is called STANDARD-MIB, and the corresponding for SNMPv2 is called SNMPv2-MIB. If the agent is configured for SNMPv1 only, the STANDARD-MIB is loaded by default; otherwise, the SNMPv2-MIB is loaded by default. It is possible to override this default behavior, by explicitly loading another version of this MIB, for example, you could choose to implement the union of all objects in these two MIBs.</source>
          <target state="translated">Любой агент SNMP должен реализовывать &lt;code&gt;system&lt;/code&gt; группу и группу &lt;code&gt;snmp&lt;/code&gt; , определенные в MIB-II. Определения этих групп были изменены с SNMPv1 на SNMPv2. MIB и реализации для обеих этих версий входят в комплект поставки. Файл MIB для SNMPv1 называется STANDARD-MIB, а соответствующий файл для SNMPv2 называется SNMPv2-MIB. Если агент настроен только для SNMPv1, STANDARD-MIB загружается по умолчанию; в противном случае по умолчанию загружается SNMPv2-MIB. Это поведение по умолчанию можно переопределить, явно загрузив другую версию этой MIB, например, вы можете выбрать реализацию объединения всех объектов в этих двух MIB.</target>
        </trans-unit>
        <trans-unit id="196d50214eeaa49a69b1974dba346995c28a22e1" translate="yes" xml:space="preserve">
          <source>Any Unicode newline sequence</source>
          <target state="translated">Любая новая последовательность Unicode</target>
        </trans-unit>
        <trans-unit id="a65ddd3bdd2944c171915eb7fa336f1a4c035808" translate="yes" xml:space="preserve">
          <source>Any alphanumeric character. Matches characters that have either the L (letter) or the N (number) property.</source>
          <target state="translated">Любой буквенно-цифровой символ.Совпадает с символами,имеющими свойство L (буква)или N (цифра).</target>
        </trans-unit>
        <trans-unit id="8e4c53abc141aa6a5505d99af2747ead8bf5f3b8" translate="yes" xml:space="preserve">
          <source>Any argument starting with character &lt;code&gt;+&lt;/code&gt; is interpreted as an &lt;code&gt;&lt;a href=&quot;#emu_flags&quot;&gt;emulator flag&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Любой аргумент, начинающийся с символа &lt;code&gt;+&lt;/code&gt; , интерпретируется как &lt;code&gt;&lt;a href=&quot;#emu_flags&quot;&gt;emulator flag&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2ec0d985bf2bc312c2013a5109c14aa8377ee3b4" translate="yes" xml:space="preserve">
          <source>Any argument starting with character &lt;code&gt;-&lt;/code&gt; (hyphen) is interpreted as a &lt;code&gt;&lt;a href=&quot;#init_flags&quot;&gt;flag&lt;/a&gt;&lt;/code&gt;, which is to be passed to the Erlang part of the runtime system, more specifically to the &lt;code&gt;init&lt;/code&gt; system process, see &lt;code&gt;&lt;a href=&quot;init&quot;&gt;init(3)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Любой аргумент , начиная с символом &lt;code&gt;-&lt;/code&gt; (дефис) интерпретируются как &lt;code&gt;&lt;a href=&quot;#init_flags&quot;&gt;flag&lt;/a&gt;&lt;/code&gt; , который должен быть передан в Эрланге часть системы во время выполнения, а более конкретно к &lt;code&gt;init&lt;/code&gt; системного процессу, см &lt;code&gt;&lt;a href=&quot;init&quot;&gt;init(3)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a38632ef9e937e28c7efee903ba40a94fa4e2fdf" translate="yes" xml:space="preserve">
          <source>Any available SSL/TLS option can be specified in an options file, but note that options that take a &lt;code&gt;fun()&lt;/code&gt; has to use the syntax &lt;code&gt;fun Mod:Func/Arity&lt;/code&gt; since a function body can not be compiled when consulting a file.</source>
          <target state="translated">Любая доступная опция SSL / TLS может быть указана в файле опций, но обратите внимание, что опции, которые принимают &lt;code&gt;fun()&lt;/code&gt; , должны использовать синтаксис &lt;code&gt;fun Mod:Func/Arity&lt;/code&gt; , поскольку тело функции не может быть скомпилировано при обращении к файлу.</target>
        </trans-unit>
        <trans-unit id="01cf19500fd684b4fcd4ae4381bd475d059416c3" translate="yes" xml:space="preserve">
          <source>Any binaries in the input must be encoded with utf8 encoding.</source>
          <target state="translated">Любые двоичные файлы на входе должны быть закодированы в кодировке utf8.</target>
        </trans-unit>
        <trans-unit id="d4fbd6641fa6af8908c4acddf8ea7d500dda6804" translate="yes" xml:space="preserve">
          <source>Any character that \p{Nd} matches (decimal digit)</source>
          <target state="translated">Любой символ,совпадающий с \p{Nd}(десятичная цифра).</target>
        </trans-unit>
        <trans-unit id="ea8d8e8635593d775e42e49ce0087f6c13f6687f" translate="yes" xml:space="preserve">
          <source>Any character that \p{Z} or \h or \v</source>
          <target state="translated">Любой символ,который \p{Z}или \h или \v.</target>
        </trans-unit>
        <trans-unit id="5a07d4df31dba87893c12b1bbe3486e16831b58c" translate="yes" xml:space="preserve">
          <source>Any character that is not a decimal digit</source>
          <target state="translated">Любой символ,не являющийся десятичной цифрой.</target>
        </trans-unit>
        <trans-unit id="a220eeb7e71547f74bdb672a46dbf62304938ae3" translate="yes" xml:space="preserve">
          <source>Any character that is not a horizontal whitespace character</source>
          <target state="translated">Любой символ,не являющийся горизонтальным пробелом.</target>
        </trans-unit>
        <trans-unit id="38b05e383aff7b661066a32cce33de8ce1d64c59" translate="yes" xml:space="preserve">
          <source>Any character that is not a vertical whitespace character</source>
          <target state="translated">Любой символ,не являющийся вертикальным пробелом.</target>
        </trans-unit>
        <trans-unit id="637eb6003dd0e91f78519cb1c04ebd5b49030962" translate="yes" xml:space="preserve">
          <source>Any character that is not a whitespace character</source>
          <target state="translated">Любой символ,не являющийся пробелом.</target>
        </trans-unit>
        <trans-unit id="4f01080c6afb4764ff8a2fd9f3cf18325105c6f2" translate="yes" xml:space="preserve">
          <source>Any character that matches \p{L} or \p{N} matches, plus underscore</source>
          <target state="translated">Любой символ,совпадающий с \p{L}или \p{N},плюс подчеркивание.</target>
        </trans-unit>
        <trans-unit id="9e0fc4e31db4954506ff95018d4e32009cec2276" translate="yes" xml:space="preserve">
          <source>Any child process, static or dynamic, can be stopped in accordance with the shutdown specification:</source>
          <target state="translated">Любой дочерний процесс,статический или динамический,может быть остановлен в соответствии со спецификацией выключения:</target>
        </trans-unit>
        <trans-unit id="e61f1827d9b493037b4c65e46ae25e3793bc6166" translate="yes" xml:space="preserve">
          <source>Any decimal digit</source>
          <target state="translated">Любая десятичная цифра</target>
        </trans-unit>
        <trans-unit id="319ee56af7d8c4842eef10b32506ec7273db2e2d" translate="yes" xml:space="preserve">
          <source>Any directory structure for development will suffice as long as the released directory structure adhere to the &lt;code&gt;&lt;a href=&quot;#app_dir_released&quot;&gt;description below&lt;/a&gt;&lt;/code&gt;, but it is encouraged that the same directory structure also be used in a development environment. The version number should be omitted from the application directory name since this is an artifact of the release step.</source>
          <target state="translated">Любая структура каталогов для разработки будет достаточной, если выпущенная структура каталогов соответствует приведенному &lt;code&gt;&lt;a href=&quot;#app_dir_released&quot;&gt;description below&lt;/a&gt;&lt;/code&gt; , но рекомендуется, чтобы та же структура каталогов также использовалась в среде разработки. Номер версии не следует указывать в имени каталога приложения, поскольку это артефакт этапа выпуска.</target>
        </trans-unit>
        <trans-unit id="0f8a0eebe69f32841c1055bf42eb38c869fc05ac" translate="yes" xml:space="preserve">
          <source>Any error responded from ssl:connect/3</source>
          <target state="translated">Любая ошибка,на которую отвечает ssl:connect/3</target>
        </trans-unit>
        <trans-unit id="dec33b5efd25869658a9a136d55b25ab0eb75ddb" translate="yes" xml:space="preserve">
          <source>Any event cancels an &lt;code&gt;&lt;a href=&quot;#type-event_timeout&quot;&gt;event_timeout()&lt;/a&gt;&lt;/code&gt; so a zero time event time-out is only generated if the event queue is empty.</source>
          <target state="translated">Любое событие отменяет &lt;code&gt;&lt;a href=&quot;#type-event_timeout&quot;&gt;event_timeout()&lt;/a&gt;&lt;/code&gt; поэтому нулевой тайм-аут события генерируется только в том случае, если очередь событий пуста.</target>
        </trans-unit>
        <trans-unit id="f3230758bd2f1f41e208786128600a644fbcfaad" translate="yes" xml:space="preserve">
          <source>Any event that arrives cancels this time-out. Note that a retried or inserted event counts as arrived. So does a state time-out zero event, if it was generated before this time-out is requested.</source>
          <target state="translated">Любое прибывающее событие отменяет этот тайм-аут.Обратите внимание,что повторное тестирование или вставка события засчитывается как прибывшее.Так же как и состояние тайм-аута нулевого события,если оно было сгенерировано до того,как был запрошен этот тайм-аут.</target>
        </trans-unit>
        <trans-unit id="8b1366eda009f3cb3ff94bd016d0c7d4a6262e2b" translate="yes" xml:space="preserve">
          <source>Any existing file &lt;code&gt;ConfigFile&lt;/code&gt; is deleted and a new file is created when &lt;code&gt;write_config/2&lt;/code&gt; is called. Option &lt;code&gt;append&lt;/code&gt; can be used to add something at the end of an existing configuration file, for example, &lt;code&gt;ttb:write_config(ConfigFile,What,[append])&lt;/code&gt;.</source>
          <target state="translated">Любой существующий файл &lt;code&gt;ConfigFile&lt;/code&gt; удаляется, и при &lt;code&gt;write_config/2&lt;/code&gt; создается новый файл . Опцию &lt;code&gt;append&lt;/code&gt; можно использовать для добавления чего-либо в конец существующего файла конфигурации, например, &lt;code&gt;ttb:write_config(ConfigFile,What,[append])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="566ef8318f6e8dea307d9a0b22e6f9fb3da4fcf5" translate="yes" xml:space="preserve">
          <source>Any field from the default object that is updated is not an integer.</source>
          <target state="translated">Любое поле из объекта по умолчанию,которое обновляется,не является целым числом.</target>
        </trans-unit>
        <trans-unit id="633c884f979bcb23bdcf6332835bc8f4a916554f" translate="yes" xml:space="preserve">
          <source>Any file in the archive can be compressed, but to speed up the access of frequently read files, it can be a good idea to store &lt;code&gt;beam&lt;/code&gt; and &lt;code&gt;app&lt;/code&gt; files uncompressed in the archive.</source>
          <target state="translated">Любой файл в архиве можно сжать, но для ускорения доступа к часто читаемым файлам может быть хорошей идеей хранить в архиве файлы &lt;code&gt;beam&lt;/code&gt; и &lt;code&gt;app&lt;/code&gt; без сжатия.</target>
        </trans-unit>
        <trans-unit id="c9e92376776fce4af3e899f17a6815d5de8767ca" translate="yes" xml:space="preserve">
          <source>Any further messages sent to the servers, after this function has returned, are received by all servers after this message.</source>
          <target state="translated">Любые последующие сообщения,отправленные на серверы,после возвращения этой функции,принимаются всеми серверами после этого сообщения.</target>
        </trans-unit>
        <trans-unit id="05a7cdc632d004fced39b4b64081edd1072ad277" translate="yes" xml:space="preserve">
          <source>Any help module (that is, regular Erlang module with name not ending with &quot;_SUITE&quot;) that resides in the same test object directory as a suite, which is part of the test, is also automatically compiled. A help module is not mistaken for a test suite (unless it has a &quot;_SUITE&quot; name). All help modules in a particular test object directory are compiled, no matter if all or only particular suites in the directory are part of the test.</source>
          <target state="translated">Любой справочный модуль (то есть обычный модуль Erlang с именем,не заканчивающимся на &quot;_SUITE&quot;),который находится в том же каталоге тестовых объектов,что и набор,являющийся частью теста,также автоматически компилируется.Справочный модуль не путают с тестовым набором (если только он не имеет имени &quot;_SUITE&quot;).Все справочные модули в конкретном каталоге тестовых объектов компилируются,независимо от того,все или только отдельные наборы в этом каталоге являются частью теста.</target>
        </trans-unit>
        <trans-unit id="3a6931e3ecbbcf6123711ba9b45a1b2a389671aa" translate="yes" xml:space="preserve">
          <source>Any horizontal whitespace character</source>
          <target state="translated">Любой горизонтальный символ пробела</target>
        </trans-unit>
        <trans-unit id="59054d406899b9265407eef94618b3745ddccb9c" translate="yes" xml:space="preserve">
          <source>Any kind of set (also included are the atomic sets).</source>
          <target state="translated">Любой вид множеств (в него также входят атомные множества).</target>
        </trans-unit>
        <trans-unit id="3059e6bd637c2c7edbf7392d90b2b06549a0c4a4" translate="yes" xml:space="preserve">
          <source>Any message from an agent that is not registered is delivered to the &lt;strong&gt;default user&lt;/strong&gt;.</source>
          <target state="translated">Любое сообщение от незарегистрированного агента доставляется пользователю по &lt;strong&gt;умолчанию&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="9e3cde1fa4436f7ff04b9991cb3b2f50c010632c" translate="yes" xml:space="preserve">
          <source>Any module attribute can be specified. The attributes are stored in the compiled code and can be retrieved by calling &lt;code&gt;Module:module_info(attributes)&lt;/code&gt;, or by using the module &lt;code&gt;beam_lib(3)&lt;/code&gt; in STDLIB.</source>
          <target state="translated">Можно указать любой атрибут модуля. Атрибуты хранятся в скомпилированном коде и могут быть получены вызовом &lt;code&gt;Module:module_info(attributes)&lt;/code&gt; или с помощью модуля &lt;code&gt;beam_lib(3)&lt;/code&gt; в STDLIB.</target>
        </trans-unit>
        <trans-unit id="29b8882fa4dee978fed00f1684dc7ee4e8066671" translate="yes" xml:space="preserve">
          <source>Any more option that is applied is passed to the final step when the generated &lt;code&gt;.erl&lt;/code&gt; file is compiled.</source>
          <target state="translated">Любая дополнительная опция, которая применяется, передается на последний шаг при &lt;code&gt;.erl&lt;/code&gt; сгенерированного файла .erl .</target>
        </trans-unit>
        <trans-unit id="b639a0e3ab8cf373688218aa41c8bf04708e870b" translate="yes" xml:space="preserve">
          <source>Any node in &lt;code&gt;Tree&lt;/code&gt; whose node type is &lt;code&gt;variable&lt;/code&gt; (see &lt;code&gt;&lt;a href=&quot;#type-1&quot;&gt;type/1&lt;/a&gt;&lt;/code&gt;), and whose list of annotations (see &lt;code&gt;&lt;a href=&quot;#get_ann-1&quot;&gt;get_ann/1&lt;/a&gt;&lt;/code&gt;) contains the atom &lt;code&gt;meta_var&lt;/code&gt;, will remain unchanged in the resulting tree, except that exactly one occurrence of &lt;code&gt;meta_var&lt;/code&gt; is removed from its annotation list.</source>
          <target state="translated">Любой узел в &lt;code&gt;Tree&lt;/code&gt; , тип узла которого является &lt;code&gt;variable&lt;/code&gt; (см. &lt;code&gt;&lt;a href=&quot;#type-1&quot;&gt;type/1&lt;/a&gt;&lt;/code&gt; ), и чей список аннотаций (см. &lt;code&gt;&lt;a href=&quot;#get_ann-1&quot;&gt;get_ann/1&lt;/a&gt;&lt;/code&gt; ) содержит атом &lt;code&gt;meta_var&lt;/code&gt; , останется неизменным в результирующем дереве, за исключением того, что ровно одно вхождение &lt;code&gt;meta_var&lt;/code&gt; будет удалено из его список аннотаций.</target>
        </trans-unit>
        <trans-unit id="12506e60046e3f66a27e9d0f21bb59c5951fbf0d" translate="yes" xml:space="preserve">
          <source>Any nodes created outside of this module must have type tags distinct from those currently defined by this module; see &lt;code&gt;&lt;a href=&quot;#type-1&quot;&gt;type/1&lt;/a&gt;&lt;/code&gt; for a complete list.</source>
          <target state="translated">Любые узлы, созданные вне этого модуля, должны иметь теги типов, отличные от тех, которые в настоящее время определены этим модулем; см. полный список в &lt;code&gt;&lt;a href=&quot;#type-1&quot;&gt;type/1&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2dd390a9f5c9070fbf0caa7f7decb4d0243c2039" translate="yes" xml:space="preserve">
          <source>Any number of alternatives can appear, and an empty alternative is permitted (matching the empty string). The matching process tries each alternative in turn, from left to right, and the first that succeeds is used. If the alternatives are within a subpattern (defined in section &lt;code&gt;&lt;a href=&quot;#sect11&quot;&gt;Subpatterns&lt;/a&gt;&lt;/code&gt;), &quot;succeeds&quot; means matching the remaining main pattern and the alternative in the subpattern.</source>
          <target state="translated">Может появиться любое количество альтернатив, и разрешена пустая альтернатива (соответствующая пустой строке). Процесс сопоставления пробует каждую альтернативу по очереди слева направо, и используется первая, которая удалась. Если альтернативы находятся внутри подшаблона (определенного в разделе &amp;laquo; &lt;code&gt;&lt;a href=&quot;#sect11&quot;&gt;Subpatterns&lt;/a&gt;&lt;/code&gt; ), &amp;laquo;успешно&amp;raquo; означает сопоставление оставшегося основного шаблона и альтернативы в подшаблонах.</target>
        </trans-unit>
        <trans-unit id="3b219ac3ab7183b58c39d339b6c5af13a6e6e890" translate="yes" xml:space="preserve">
          <source>Any number of test terms can be declared in sequence. &lt;code&gt;Common Test&lt;/code&gt; compiles by default the terms into one or more tests to be performed in one resulting test run. A term that specifies a set of test cases &quot;swallows&quot; one that only specifies a subset of these cases. For example, the result of merging one term specifying that all cases in suite S are to be executed, with another term specifying only test case X and Y in S, is a test of all cases in S. However, if a term specifying test case X and Y in S is merged with a term specifying case Z in S, the result is a test of X, Y, and Z in S. To disable this behavior, that is, to instead perform each test sequentially in a &quot;script-like&quot; manner, set term &lt;code&gt;merge_tests&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; in the test specification.</source>
          <target state="translated">Последовательно может быть объявлено любое количество условий теста. &lt;code&gt;Common Test&lt;/code&gt; по умолчанию компилирует термины в один или несколько тестов, которые будут выполняться в одном результирующем тестовом прогоне. Термин, определяющий набор тестовых примеров, &amp;laquo;проглатывает&amp;raquo; тот, который определяет только подмножество этих случаев. Например, результат объединения одного термина, указывающего, что все варианты в наборе S должны быть выполнены, с другим термином, определяющим только тестовые примеры X и Y в S, является тестом всех случаев в S. Однако, если термин, определяющий тест case X и Y в S объединяется с термином, определяющим случай Z в S, результатом является проверка X, Y и Z в S. Чтобы отключить это поведение, то есть вместо этого выполнять каждый тест последовательно в сценарии -подобным способом установите для термина &lt;code&gt;merge_tests&lt;/code&gt; значение &lt;code&gt;false&lt;/code&gt; в спецификации теста.</target>
        </trans-unit>
        <trans-unit id="7f1d0eacfac7695ff6458e838ae9c63e075002a8" translate="yes" xml:space="preserve">
          <source>Any of &lt;code&gt;Pos&lt;/code&gt;, &lt;code&gt;Incr&lt;/code&gt;, &lt;code&gt;Threshold&lt;/code&gt;, or &lt;code&gt;SetValue&lt;/code&gt; is not an integer.</source>
          <target state="translated">Любое из значений &lt;code&gt;Pos&lt;/code&gt; , &lt;code&gt;Incr&lt;/code&gt; , &lt;code&gt;Threshold&lt;/code&gt; или &lt;code&gt;SetValue&lt;/code&gt; не является целым числом.</target>
        </trans-unit>
        <trans-unit id="a07471bf046332e50c16cdbf9fa2f0e4219c9dce" translate="yes" xml:space="preserve">
          <source>Any of the Boolean options can be set to &lt;code&gt;true&lt;/code&gt; by stating the name of the option. For example, &lt;code&gt;verbose&lt;/code&gt; is equivalent to &lt;code&gt;{verbose, true}&lt;/code&gt;.</source>
          <target state="translated">Любой из логических параметров можно присвоить значение &lt;code&gt;true&lt;/code&gt; , указав имя параметра. Например, &lt;code&gt;verbose&lt;/code&gt; эквивалентно &lt;code&gt;{verbose, true}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0d0154918457ea334a0a14f2ca39bfe72abe9e56" translate="yes" xml:space="preserve">
          <source>Any of the newline sequences above, and the Unicode sequences VT (vertical tab, U+000B), FF (formfeed, U+000C), NEL (next line, U+0085), LS (line separator, U+2028), and PS (paragraph separator, U+2029).</source>
          <target state="translated">Любая из вышеперечисленных новых последовательностей строк,а также Unicode последовательности VT (вертикальная закладка,U+000B),FF (formfeed,U+000C),NEL (следующая строка,U+0085),LS (разделитель строк,U+2028),и PS (разделитель абзацев,U+2029).</target>
        </trans-unit>
        <trans-unit id="4e36b2886b60e8d8125482994d6c845a19875794" translate="yes" xml:space="preserve">
          <source>Any of the three above</source>
          <target state="translated">Любой из трех вышеперечисленных</target>
        </trans-unit>
        <trans-unit id="86ba96738491ceb49b98c521a1260c55ed5485fb" translate="yes" xml:space="preserve">
          <source>Any of the three preceding sequences is be recognized.</source>
          <target state="translated">Любая из трех предыдущих последовательностей распознается.</target>
        </trans-unit>
        <trans-unit id="81ac719a424443fef6b057e36ab2fb49dfe28608" translate="yes" xml:space="preserve">
          <source>Any of the three preceding sequences is to be recognized.</source>
          <target state="translated">Любая из трех предыдущих последовательностей должна быть распознана.</target>
        </trans-unit>
        <trans-unit id="58b743365bb43cbc12421219d500fe35e8ea844d" translate="yes" xml:space="preserve">
          <source>Any option can be added to the Erlang compiler when compiling the generated Erlang files. Any option unrecognized by the ASN.1 compiler is passed to the Erlang compiler.</source>
          <target state="translated">Любая опция может быть добавлена в компилятор Erlang при компиляции сгенерированных файлов Erlang.Любая опция,не распознанная компилятором ASN.1,передается компилятору Erlang.</target>
        </trans-unit>
        <trans-unit id="d80bad487ffa73c04585c5699f22527d1888dc5c" translate="yes" xml:space="preserve">
          <source>Any other character literally, for example &lt;code&gt;\\&lt;/code&gt; for backslash, &lt;code&gt;\&quot;&lt;/code&gt; for &lt;code&gt;&quot;&lt;/code&gt;.</source>
          <target state="translated">Буквально любой другой символ, например &lt;code&gt;\\&lt;/code&gt; для обратной косой черты, &lt;code&gt;\&quot;&lt;/code&gt; для &lt;code&gt;&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2982c9337e5698148dd46ac21f02f3137461b4a8" translate="yes" xml:space="preserve">
          <source>Any other return values (including exit signals or throw) and the &lt;code&gt;DefaultED&lt;/code&gt; will be used.</source>
          <target state="translated">Будут использоваться любые другие возвращаемые значения (включая сигналы выхода или выброс) и &lt;code&gt;DefaultED&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="249dc2b99b732aa6241eec01386b07432c7788b4" translate="yes" xml:space="preserve">
          <source>Any other return values (including exit signals or throw) will result in an error descriptor with code 500 (internal gateway error) and the module name (of the callback module) as reason.</source>
          <target state="translated">Любые другие возвращаемые значения (включая сигналы выхода или броска)приводят к появлению дескриптора ошибок с кодом 500 (ошибка внутреннего шлюза)и именем модуля (модуля обратного вызова)в качестве причины.</target>
        </trans-unit>
        <trans-unit id="a942dcaa5bd45f30971473c45442d68ed922cbd5" translate="yes" xml:space="preserve">
          <source>Any other value &lt;code&gt;OtherValue&lt;/code&gt; returned by &lt;code&gt;Fun&lt;/code&gt; terminates the traversal and is returned immediately.</source>
          <target state="translated">Любое другое значение &lt;code&gt;OtherValue&lt;/code&gt; , возвращаемое &lt;code&gt;Fun&lt;/code&gt; , завершает обход и возвращается немедленно.</target>
        </trans-unit>
        <trans-unit id="f4d82480914c3ee14ba49d105622133bf704f763" translate="yes" xml:space="preserve">
          <source>Any other value is immediately returned as value of the current call to &lt;code&gt;sort&lt;/code&gt; or &lt;code&gt;keysort&lt;/code&gt;. Each input function is called exactly once. If an error occurs, the last function is called with argument &lt;code&gt;close&lt;/code&gt;, the reply of which is ignored.</source>
          <target state="translated">Любое другое значение немедленно возвращается как значение текущего вызова &lt;code&gt;sort&lt;/code&gt; или &lt;code&gt;keysort&lt;/code&gt; . Каждая функция ввода вызывается ровно один раз. В случае ошибки вызывается последняя функция с аргументом &lt;code&gt;close&lt;/code&gt; , ответ которой игнорируется.</target>
        </trans-unit>
        <trans-unit id="f850a68f9f85d9da673e19d77155ac0b55fea37c" translate="yes" xml:space="preserve">
          <source>Any other variable needed by the test</source>
          <target state="translated">Любая другая переменная,необходимая для теста</target>
        </trans-unit>
        <trans-unit id="9d0e66f20ad63939bfb7baf4ceddb82fb6504347" translate="yes" xml:space="preserve">
          <source>Any parameters are of the wrong type.</source>
          <target state="translated">Любые параметры неправильного типа.</target>
        </trans-unit>
        <trans-unit id="933ef808931a1467e93c9ed25ccfb4780e6ed6ed" translate="yes" xml:space="preserve">
          <source>Any process can probe a blocked log with &lt;code&gt;info/1&lt;/code&gt; or close it with &lt;code&gt;close/1&lt;/code&gt;. The blocking process can also use functions &lt;code&gt;chunk/2,3&lt;/code&gt;, &lt;code&gt;bchunk/2,3&lt;/code&gt;, &lt;code&gt;chunk_step/3&lt;/code&gt;, and &lt;code&gt;unblock/1&lt;/code&gt; without being affected by the block. Any other attempt than those mentioned so far to update or read a blocked log suspends the calling process until the log is unblocked or returns error message &lt;code&gt;{blocked_log, Log}&lt;/code&gt;, depending on whether the value of &lt;code&gt;QueueLogRecords&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;. &lt;code&gt;QueueLogRecords&lt;/code&gt; defaults to &lt;code&gt;true&lt;/code&gt;, which is used by &lt;code&gt;block/1&lt;/code&gt;.</source>
          <target state="translated">Любой процесс может проверить заблокированный журнал с помощью &lt;code&gt;info/1&lt;/code&gt; или закрыть его с помощью &lt;code&gt;close/1&lt;/code&gt; . Процесс блокировки также может использовать функции &lt;code&gt;chunk/2,3&lt;/code&gt; , &lt;code&gt;bchunk/2,3&lt;/code&gt; , &lt;code&gt;chunk_step/3&lt;/code&gt; и unblock &lt;code&gt;unblock/1&lt;/code&gt; без влияния блока. Любая другая попытка , чем те , которые упомянуты до сих пор обновления или читать заблокированного журнал приостанавливает вызывающий процесс до тех пор , пока журнал разблокирован или возвращает сообщение об ошибке &lt;code&gt;{blocked_log, Log}&lt;/code&gt; , в зависимости от того, является ли значение &lt;code&gt;QueueLogRecords&lt;/code&gt; является &lt;code&gt;true&lt;/code&gt; или &lt;code&gt;false&lt;/code&gt; . &lt;code&gt;QueueLogRecords&lt;/code&gt; умолчанию QueueLogRecords имеет значение &lt;code&gt;true&lt;/code&gt; , которое используется &lt;code&gt;block/1&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="08eca955417b5ab22bebcc976cc21d89efe94422" translate="yes" xml:space="preserve">
          <source>Any process can read or write to the table.</source>
          <target state="translated">Любой процесс может читать или записывать в таблицу.</target>
        </trans-unit>
        <trans-unit id="782da514823c3f76e59a01f8bc9028c411c82cda" translate="yes" xml:space="preserve">
          <source>Any process, in any application, with &lt;code&gt;Module&lt;/code&gt; as residence module, is killed when the instruction is evaluated. The user must therefore ensure that all such processes are terminated before deleting the module, to avoid a situation with failing supervisor restarts.</source>
          <target state="translated">Любой процесс в любом приложении с &lt;code&gt;Module&lt;/code&gt; качестве резидентного модуля завершается при оценке инструкции. Поэтому пользователь должен убедиться, что все такие процессы завершены перед удалением модуля, чтобы избежать ситуации с неудачным перезапуском супервизора.</target>
        </trans-unit>
        <trans-unit id="89c73d072c780c8bd405077821b4399412adb61c" translate="yes" xml:space="preserve">
          <source>Any record, containing type information or not, once defined, can be used as a type using the following syntax:</source>
          <target state="translated">Любая запись,содержащая или не содержащая информацию о типе,после ее определения,может быть использована в качестве типа с использованием следующего синтаксиса:</target>
        </trans-unit>
        <trans-unit id="4b9ac647f7a1c06663cb2845807c8bed2b8a0381" translate="yes" xml:space="preserve">
          <source>Any relative paths, specified in the test specification, are relative to the directory containing the test specification file if &lt;code&gt;ct_run -spec TestSpecFile ...&lt;/code&gt; or &lt;code&gt;ct:run:test([{spec,TestSpecFile},...])&lt;/code&gt; executes the test.</source>
          <target state="translated">Любые относительные пути, указанные в спецификации теста, относятся к каталогу, содержащему файл спецификации теста, если &lt;code&gt;ct_run -spec TestSpecFile ...&lt;/code&gt; или &lt;code&gt;ct:run:test([{spec,TestSpecFile},...])&lt;/code&gt; выполняет тест ,</target>
        </trans-unit>
        <trans-unit id="b95b8d2f2c5d4e842e94679e4847a285aed6e939" translate="yes" xml:space="preserve">
          <source>Any required padding is added by diameter when encoding outgoing messages.</source>
          <target state="translated">Любая необходимая набивка добавляется по диаметру при кодировании исходящих сообщений.</target>
        </trans-unit>
        <trans-unit id="6a9a8124f1b80519c1f040df8df911b83b4c84b7" translate="yes" xml:space="preserve">
          <source>Any start flags to the Erlang runtime system (application ERTS) can also be passed as parameters to &lt;code&gt;ct_run&lt;/code&gt;. It is, for example, useful to be able to pass directories to be added to the Erlang code server search path with flag &lt;code&gt;-pa&lt;/code&gt; or &lt;code&gt;-pz&lt;/code&gt;. If you have common help- or library modules for test suites (separately compiled), stored in other directories than the test suite directories, these &lt;code&gt;help/lib&lt;/code&gt; directories are preferably added to the code path this way.</source>
          <target state="translated">Любые стартовые флаги в систему времени выполнения Erlang (приложение ERTS) также могут быть переданы в качестве параметров в &lt;code&gt;ct_run&lt;/code&gt; . Это, например, полезно , чтобы иметь возможность пройти каталоги , которые будут добавлены в поисковый код сервера пути Эрланга с флагом &lt;code&gt;-pa&lt;/code&gt; или &lt;code&gt;-pz&lt;/code&gt; . Если у вас есть общие справочные или библиотечные модули для наборов тестов (скомпилированные отдельно), хранящиеся в каталогах, отличных от каталогов набора тестов, эти каталоги &lt;code&gt;help/lib&lt;/code&gt; предпочтительно добавляются в путь кода таким образом.</target>
        </trans-unit>
        <trans-unit id="f182f567f67c83a2ce8839de78f5dd9c2331c337" translate="yes" xml:space="preserve">
          <source>Any term, defaults to the atom &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">Любой термин, по умолчанию атом &lt;code&gt;undefined&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="05f2f648b8aa07f43583597f53b95459b0d86b71" translate="yes" xml:space="preserve">
          <source>Any test or test set &lt;code&gt;T&lt;/code&gt; can be annotated with a title, by wrapping it in a pair &lt;code&gt;{Title, T}&lt;/code&gt;, where &lt;code&gt;Title&lt;/code&gt; is a string. For convenience, any test which is normally represented using a tuple can simply be given a title string as the first element, i.e., writing &lt;code&gt;{&quot;The Title&quot;, ...}&lt;/code&gt; instead of adding an extra tuple wrapper as in &lt;code&gt;{&quot;The Title&quot;, {...}}&lt;/code&gt;.</source>
          <target state="translated">Любой тест или набор тестов &lt;code&gt;T&lt;/code&gt; можно аннотировать заголовком, заключив его в пару &lt;code&gt;{Title, T}&lt;/code&gt; , где &lt;code&gt;Title&lt;/code&gt; - это строка. Для удобства любому тесту, который обычно представлен с использованием кортежа, можно просто дать строку заголовка в качестве первого элемента, т. Е. Написать &lt;code&gt;{&quot;The Title&quot;, ...}&lt;/code&gt; вместо добавления дополнительной оболочки кортежа, как в &lt;code&gt;{&quot;The Title&quot;, {...}}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cdfd965642f53e0b7729140f8c9073111a331ea3" translate="yes" xml:space="preserve">
          <source>Any transport option except &lt;code&gt;applications&lt;/code&gt; or &lt;code&gt;capabilities&lt;/code&gt;. Used as defaults for transport configuration, values passed to &lt;code&gt;&lt;a href=&quot;#add_transport-2&quot;&gt;add_transport/2&lt;/a&gt;&lt;/code&gt; overriding values configured on the service.</source>
          <target state="translated">Любой вариант транспорта, кроме &lt;code&gt;applications&lt;/code&gt; или &lt;code&gt;capabilities&lt;/code&gt; . Используемые по умолчанию для конфигурации транспорта, значения, переданные в &lt;code&gt;&lt;a href=&quot;#add_transport-2&quot;&gt;add_transport/2&lt;/a&gt;&lt;/code&gt; , переопределяют значения, настроенные в службе.</target>
        </trans-unit>
        <trans-unit id="36287aab00e4133075843c606c024c1da69b5da0" translate="yes" xml:space="preserve">
          <source>Any undocumented functions in &lt;code&gt;string&lt;/code&gt; are not to be used.</source>
          <target state="translated">Недокументированные &lt;code&gt;string&lt;/code&gt; функции использовать нельзя.</target>
        </trans-unit>
        <trans-unit id="4472d33a875806b4fa8c5622d64ebe7f23ffe886" translate="yes" xml:space="preserve">
          <source>Any unspecified fields are assumed to have the type in the original record declaration.</source>
          <target state="translated">Предполагается,что любые неуказанные поля имеют тип,указанный в первоначальном объявлении записи.</target>
        </trans-unit>
        <trans-unit id="f8b06f554103b0e00f9de05aa58d618718ce1b34" translate="yes" xml:space="preserve">
          <source>Any variables that are defined before the list comprehension, and that are used in filters, have the values they had before the list comprehension.</source>
          <target state="translated">Любые переменные,которые определены до понимания списка и которые используются в фильтрах,имеют значения,которые они имели до понимания списка.</target>
        </trans-unit>
        <trans-unit id="f184dfb123fe5531382db694e54de8fc62711d8d" translate="yes" xml:space="preserve">
          <source>Any vertical whitespace character</source>
          <target state="translated">Любой вертикальный символ пробела</target>
        </trans-unit>
        <trans-unit id="dc95992a9a8880a458bf0ac420ad7827afd47252" translate="yes" xml:space="preserve">
          <source>Any whitespace character</source>
          <target state="translated">Любой символ пробела</target>
        </trans-unit>
        <trans-unit id="7d41ee854a3d2e6ed49f2b637df36ad7f9e23190" translate="yes" xml:space="preserve">
          <source>Apart from the ordinary allocators described above, some pre-allocators are used for some specific data types. These pre-allocators pre-allocate a fixed amount of memory for certain data types when the runtime system starts. As long as pre-allocated memory is available, it is used. When no pre-allocated memory is available, memory is allocated in ordinary allocators. These pre-allocators are typically much faster than the ordinary allocators, but can only satisfy a limited number of requests.</source>
          <target state="translated">Помимо обычных аллокаторов,описанных выше,некоторые предварительные аллокаторы используются для некоторых конкретных типов данных.Эти предварительные аллокаторы предварительно выделяют фиксированный объем памяти для определенных типов данных при запуске исполняемой системы.Пока имеется предварительно выделенная память,она используется.Если предварительно выделенной памяти нет,то она выделяется обычными аллокаторами.Обычно эти предвыделенные ресурсы намного быстрее,чем обычные аллокаторы,но могут удовлетворить только ограниченное количество запросов.</target>
        </trans-unit>
        <trans-unit id="b6fbecd567654b9cb7f086f33e2e4b65e3a20dbc" translate="yes" xml:space="preserve">
          <source>Appart from the reply message, the &lt;code&gt;{asynchronous, ReplyTag}&lt;/code&gt; option behaves exactly the same as the &lt;code&gt;asynchronous&lt;/code&gt; option without reply tag.</source>
          <target state="translated">Как видно из ответного сообщения, параметр &lt;code&gt;{asynchronous, ReplyTag}&lt;/code&gt; ведет себя точно так же, как &lt;code&gt;asynchronous&lt;/code&gt; вариант без тега ответа.</target>
        </trans-unit>
        <trans-unit id="e3e791b60ddfbf72d731c8a8fbb0e6ea943e25bd" translate="yes" xml:space="preserve">
          <source>Appears when option &lt;code&gt;reload&lt;/code&gt; is specified. The driver &lt;code&gt;Name&lt;/code&gt; is not in the system. Only drivers loaded by this process can be reloaded.</source>
          <target state="translated">Появляется, когда указана опция &lt;code&gt;reload&lt;/code&gt; . Водитель &lt;code&gt;Name&lt;/code&gt; не в системе. Перезагрузить можно только драйверы, загруженные этим процессом.</target>
        </trans-unit>
        <trans-unit id="49cc99a35d08f4016ff481d7d8153734e5631682" translate="yes" xml:space="preserve">
          <source>Appears when option &lt;code&gt;reload&lt;/code&gt; is specified. The driver &lt;code&gt;Name&lt;/code&gt; is present in the system, but there is no &lt;code&gt;&lt;a href=&quot;#users&quot;&gt;user&lt;/a&gt;&lt;/code&gt; of it in this process.</source>
          <target state="translated">Появляется, когда указана опция &lt;code&gt;reload&lt;/code&gt; . Водитель &lt;code&gt;Name&lt;/code&gt; присутствует в системе, но не &lt;code&gt;&lt;a href=&quot;#users&quot;&gt;user&lt;/a&gt;&lt;/code&gt; его в этом процессе.</target>
        </trans-unit>
        <trans-unit id="9ca9605c2bfb20ec231ac66a12bdad85113549dc" translate="yes" xml:space="preserve">
          <source>Append or prepend supported but not enabled algorithm(s) to the list of algorithms. If the wanted algorithms already are in &lt;code&gt;A&lt;/code&gt; they will first be removed and then appended or prepended,</source>
          <target state="translated">Добавить или добавить поддерживаемые, но не включенные алгоритмы к списку алгоритмов. Если требуемые алгоритмы уже находятся в &lt;code&gt;A&lt;/code&gt; , они сначала будут удалены, а затем добавлены или добавлены в начале,</target>
        </trans-unit>
        <trans-unit id="0eee5e3eef37b4e12873f20fbe9bf8c113511624" translate="yes" xml:space="preserve">
          <source>Append the agents config to the current manager agents config file.</source>
          <target state="translated">Приложите конфигурацию агентов к текущему файлу конфигурации агентов менеджера.</target>
        </trans-unit>
        <trans-unit id="670ede32b75903ea1e527f007ab3467a091effc0" translate="yes" xml:space="preserve">
          <source>Append the community config to the current agent community config file.</source>
          <target state="translated">Примените конфигурацию сообщества к текущему файлу конфигурации сообщества агентов.</target>
        </trans-unit>
        <trans-unit id="7f98e246919d3685a6470b54ee550be705b1a20d" translate="yes" xml:space="preserve">
          <source>Append the config to the current agent config file.</source>
          <target state="translated">Приложите конфигурацию к текущему файлу конфигурации агента.</target>
        </trans-unit>
        <trans-unit id="5b99d7bbf0744498145642e57ca0d9bbc5019b3e" translate="yes" xml:space="preserve">
          <source>Append the config to the current manager config file.</source>
          <target state="translated">Приложите конфигурацию к текущему файлу конфигурации менеджера.</target>
        </trans-unit>
        <trans-unit id="4715714a265ef18003ce3a95c049a6579c5fdc19" translate="yes" xml:space="preserve">
          <source>Append the context config to the current agent context config file.</source>
          <target state="translated">Добавить контекстный конфигуратор к текущему файлу конфигурации контекста агента.</target>
        </trans-unit>
        <trans-unit id="098b355d60044dcd195c72fb3d8921d6f5c79432" translate="yes" xml:space="preserve">
          <source>Append the notify config to the current agent notify config file.</source>
          <target state="translated">Добавить конфигурацию уведомления к текущему файлу конфигурации уведомления агента.</target>
        </trans-unit>
        <trans-unit id="eacde046205397e77177cf51c65a5911a57b8615" translate="yes" xml:space="preserve">
          <source>Append the standard config to the current agent standard config file.</source>
          <target state="translated">Добавить стандартную конфигурацию к текущему стандартному файлу конфигурации агента.</target>
        </trans-unit>
        <trans-unit id="10e85fc06cc23b8efed1d3e1c3fb54a94ebffb97" translate="yes" xml:space="preserve">
          <source>Append the target_addr config to the current agent target_addr config file.</source>
          <target state="translated">Добавить конфигурацию target_addr к текущему файлу config агента target_addr.</target>
        </trans-unit>
        <trans-unit id="87b72ce0520ffbff2c18e79fe54c87ebbca4b2fe" translate="yes" xml:space="preserve">
          <source>Append the target_params config to the current agent target_params config file.</source>
          <target state="translated">Добавить конфигурацию target_params в текущий конфигурационный файл target_params агента.</target>
        </trans-unit>
        <trans-unit id="95a8435503ae194bc5982a16880db13756b12c3e" translate="yes" xml:space="preserve">
          <source>Append the users config to the current manager users config file.</source>
          <target state="translated">Приложите конфигурацию пользователей к текущему файлу конфигурации пользователей менеджера.</target>
        </trans-unit>
        <trans-unit id="20d781b651b76cd62733934321351ec945be0a2a" translate="yes" xml:space="preserve">
          <source>Append the usm config to the current agent vacm config file.</source>
          <target state="translated">Добавить конфигурацию usm к текущему файлу конфигурации vacm агента.</target>
        </trans-unit>
        <trans-unit id="57c21804df817ec8d20c17ff38774329e716571b" translate="yes" xml:space="preserve">
          <source>Append the usm config to the current manager usm config file.</source>
          <target state="translated">Приложите конфигурацию usm к текущему конфигурационному файлу менеджера usm.</target>
        </trans-unit>
        <trans-unit id="5ed7647b353b68ed84afe6fde045a7489b9154cc" translate="yes" xml:space="preserve">
          <source>Append the vacm config to the current agent vacm config file.</source>
          <target state="translated">Приложите конфигурацию vacm к текущему файлу конфигурации vacm агента.</target>
        </trans-unit>
        <trans-unit id="85d8a97e8351cb485e2588c8ecfff62c9d854b68" translate="yes" xml:space="preserve">
          <source>Appending to a binary in an efficient way can be done as follows:</source>
          <target state="translated">Эффективное добавление к двоичному файлу может быть выполнено следующим образом:</target>
        </trans-unit>
        <trans-unit id="ea77b245b41191501f470789eca4aba72934b9e1" translate="yes" xml:space="preserve">
          <source>Appending to a binary or bitstring is specially optimized by the &lt;strong&gt;runtime system&lt;/strong&gt;:</source>
          <target state="translated">Добавление к двоичному файлу или строке битов специально оптимизировано системой &lt;strong&gt;выполнения&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="6eda043cc568cf13970a30ffbc0034adfa99e03f" translate="yes" xml:space="preserve">
          <source>Appendix A describes the conversion of SNMPv2 to SNMPv1 error messages.</source>
          <target state="translated">Приложение А описывает преобразование сообщений об ошибках SNMPv2 в SNMPv1.</target>
        </trans-unit>
        <trans-unit id="ee91e579fc45ec4f74f6a038125846de007b671e" translate="yes" xml:space="preserve">
          <source>Appendix B contains the RFC1903 text on &lt;code&gt;RowStatus&lt;/code&gt;.</source>
          <target state="translated">Приложение B содержит текст &lt;code&gt;RowStatus&lt;/code&gt; по RowStatus .</target>
        </trans-unit>
        <trans-unit id="df0c86c3bdb24e665fb2b6f20747db8d823ab88c" translate="yes" xml:space="preserve">
          <source>Appends &lt;code&gt;Comments&lt;/code&gt; to the post-comments of &lt;code&gt;Node&lt;/code&gt;.</source>
          <target state="translated">Добавляет &lt;code&gt;Comments&lt;/code&gt; к пост-комментариям &lt;code&gt;Node&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f2d60430814dd0a0d3f29b110da1184762bf96c4" translate="yes" xml:space="preserve">
          <source>Appends &lt;code&gt;Comments&lt;/code&gt; to the pre-comments of &lt;code&gt;Node&lt;/code&gt;.</source>
          <target state="translated">Добавляет &lt;code&gt;Comments&lt;/code&gt; к предварительным комментариям &lt;code&gt;Node&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a59eafb92455934508f727a752eaa14a058cbb57" translate="yes" xml:space="preserve">
          <source>Appends &lt;code&gt;Directory&lt;/code&gt; to the code path in the invoked Erlang emulator.</source>
          <target state="translated">Добавляет &lt;code&gt;Directory&lt;/code&gt; к пути кода в вызванном эмуляторе Erlang.</target>
        </trans-unit>
        <trans-unit id="f1ae1ca945105d0b0412c9d33c6ca6cdfd36c3ed" translate="yes" xml:space="preserve">
          <source>Appends &lt;code&gt;Directory&lt;/code&gt; to the front of the code path in the invoked Erlang emulator. This can be used to invoke another compiler than the default one.</source>
          <target state="translated">Добавляет &lt;code&gt;Directory&lt;/code&gt; в начало пути кода в вызванном эмуляторе Erlang. Это можно использовать для вызова другого компилятора, чем компилятор по умолчанию.</target>
        </trans-unit>
        <trans-unit id="cb49cdd164f55f2c7a30cfc667b98571effb1dc9" translate="yes" xml:space="preserve">
          <source>Appends a list of values &lt;code&gt;ValList&lt;/code&gt; to the current list of values associated with &lt;code&gt;Key&lt;/code&gt;. An exception is generated if the initial value associated with &lt;code&gt;Key&lt;/code&gt; is not a list of values.</source>
          <target state="translated">Добавляет список значений &lt;code&gt;ValList&lt;/code&gt; к текущему списку значений, связанных с &lt;code&gt;Key&lt;/code&gt; . Исключение создается, если начальное значение, связанное с &lt;code&gt;Key&lt;/code&gt; , не является списком значений.</target>
        </trans-unit>
        <trans-unit id="598f89859880c8e0c4b7b657bbbf567d531c94b2" translate="yes" xml:space="preserve">
          <source>Appends a new &lt;code&gt;Value&lt;/code&gt; to the current list of values associated with &lt;code&gt;Key&lt;/code&gt;.</source>
          <target state="translated">Добавляет новое &lt;code&gt;Value&lt;/code&gt; в текущий список значений, связанных с &lt;code&gt;Key&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="84026150b614acc7231607e9aad74b0ddcd360b0" translate="yes" xml:space="preserve">
          <source>Appends a new &lt;code&gt;Value&lt;/code&gt; to the current list of values associated with &lt;code&gt;Key&lt;/code&gt;. An exception is generated if the initial value associated with &lt;code&gt;Key&lt;/code&gt; is not a list of values.</source>
          <target state="translated">Добавляет новое &lt;code&gt;Value&lt;/code&gt; в текущий список значений, связанных с &lt;code&gt;Key&lt;/code&gt; . Исключение создается, если начальное значение, связанное с &lt;code&gt;Key&lt;/code&gt; , не является списком значений.</target>
        </trans-unit>
        <trans-unit id="cc8c687a22dd5ccfe5def8e49d349b9718a5a0ba" translate="yes" xml:space="preserve">
          <source>Appends data at the end of buffer &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">Добавляет данные в конец буфера &lt;code&gt;x&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="394be8930f77fa3eaca7c0be83cce9cd9e021402" translate="yes" xml:space="preserve">
          <source>Appends items to a single file, which size can be limited by the &lt;code&gt;disk_log&lt;/code&gt; module.</source>
          <target state="translated">Добавляет элементы в один файл, размер которого может быть ограничен модулем &lt;code&gt;disk_log&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cdc7f1a4511966dfd1a8a1b210a23216447ca621" translate="yes" xml:space="preserve">
          <source>Appends the comments of &lt;code&gt;Source&lt;/code&gt; to the current comments of &lt;code&gt;Target&lt;/code&gt;.</source>
          <target state="translated">Добавляет комментарии &lt;code&gt;Source&lt;/code&gt; к текущим комментариям &lt;code&gt;Target&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ea301cbca7c8ac46cf5931d51f42837ef8522c8f" translate="yes" xml:space="preserve">
          <source>Appends the term &lt;code&gt;Annotation&lt;/code&gt; to the list of user annotations of &lt;code&gt;Node&lt;/code&gt;.</source>
          <target state="translated">Добавляет термин &lt;code&gt;Annotation&lt;/code&gt; к списку пользовательских аннотаций &lt;code&gt;Node&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="42124fae91a7c7b871162f34d0590a73350f98e4" translate="yes" xml:space="preserve">
          <source>Application - skeletons for the OTP application behavior</source>
          <target state="translated">Приложение-скелеты для поведения OTP-приложений</target>
        </trans-unit>
        <trans-unit id="b92e83d37579fa02e707537bdedda6f2347cdd94" translate="yes" xml:space="preserve">
          <source>Application ::= Atom</source>
          <target state="translated">Применение ::=Атом</target>
        </trans-unit>
        <trans-unit id="3101ceef607cbc0ae4473ea0836a862c09e72c75" translate="yes" xml:space="preserve">
          <source>Application Edges. All application calls.</source>
          <target state="translated">Края применения.Все вызовы приложений.</target>
        </trans-unit>
        <trans-unit id="3925a6e948fb7872d335532f8d20c939d631d4b3" translate="yes" xml:space="preserve">
          <source>Application Identifiers</source>
          <target state="translated">Идентификаторы приложений</target>
        </trans-unit>
        <trans-unit id="d291c82890b136b5e80c48e67c846c73663b4e1e" translate="yes" xml:space="preserve">
          <source>Application dependencies</source>
          <target state="translated">Зависимости приложения</target>
        </trans-unit>
        <trans-unit id="cf171227ff1428401819ab3800da2acc36ae658c" translate="yes" xml:space="preserve">
          <source>Application name.</source>
          <target state="translated">Название приложения.</target>
        </trans-unit>
        <trans-unit id="8c7c4bdcb550a019467191f10d8c79d46c9076de" translate="yes" xml:space="preserve">
          <source>Application parameter &lt;code&gt;schema_location&lt;/code&gt; controls where &lt;code&gt;Mnesia&lt;/code&gt; searches for its schema. The parameter can be one of the following atoms:</source>
          <target state="translated">Параметр приложения &lt;code&gt;schema_location&lt;/code&gt; определяет, где &lt;code&gt;Mnesia&lt;/code&gt; ищет свою схему. Параметр может быть одним из следующих атомов:</target>
        </trans-unit>
        <trans-unit id="1c8d3536642343f82c03359ee86f1e6c6ed51cdc" translate="yes" xml:space="preserve">
          <source>Application programs can access the values of the command-line arguments by calling the function &lt;code&gt;init:get_argument(Key)&lt;/code&gt; or &lt;code&gt;init:get_arguments()&lt;/code&gt;. See the &lt;code&gt;init(3)&lt;/code&gt; manual page in ERTS.</source>
          <target state="translated">Прикладные программы могут получить доступ к значениям аргументов командной строки, вызвав функцию &lt;code&gt;init:get_argument(Key)&lt;/code&gt; или &lt;code&gt;init:get_arguments()&lt;/code&gt; . См. &lt;code&gt;init(3)&lt;/code&gt; страницу init (3) в ERTS.</target>
        </trans-unit>
        <trans-unit id="9a3c99c39895beeb540f03e2907eaa65e2e3d13b" translate="yes" xml:space="preserve">
          <source>Application resource file</source>
          <target state="translated">Файл ресурса приложения</target>
        </trans-unit>
        <trans-unit id="75ccf582ca3ec68d22db59ba1f474b3c7e769bc8" translate="yes" xml:space="preserve">
          <source>Application resource file.</source>
          <target state="translated">Файл ресурса приложения.</target>
        </trans-unit>
        <trans-unit id="d7df03c04ece2fd1b98a72e8d327f0eca8e79615" translate="yes" xml:space="preserve">
          <source>Application settings</source>
          <target state="translated">Настройки приложения</target>
        </trans-unit>
        <trans-unit id="e32c3cf432797b7c1d1e8a63e8761c1703d72948" translate="yes" xml:space="preserve">
          <source>Application specific configuration. An application has a mandatory name and application level options that are described below.</source>
          <target state="translated">Конфигурация,специфичная для конкретного приложения.У приложения есть обязательные варианты названия и уровня приложения,которые описаны ниже.</target>
        </trans-unit>
        <trans-unit id="ae55983f0b6d7e237d6c21df4a6fc064eb76c1b8" translate="yes" xml:space="preserve">
          <source>Application upgrade file</source>
          <target state="translated">Файл обновления приложения</target>
        </trans-unit>
        <trans-unit id="781ef14400b810abfadd4a95a97b21db97359040" translate="yes" xml:space="preserve">
          <source>Application-specific error reason that is to be checked by the &lt;code&gt;verify_fun&lt;/code&gt;.</source>
          <target state="translated">Причина ошибки, &lt;code&gt;verify_fun&lt;/code&gt; от приложения, которую необходимо проверить с помощью verify_fun .</target>
        </trans-unit>
        <trans-unit id="4507ffa27565890275789b83392e39507e0ef155" translate="yes" xml:space="preserve">
          <source>Application-specific records are defined in the hrl files resulting from dictionary file compilation.</source>
          <target state="translated">В hrl-файлах,полученных в результате компиляции файла словаря,определяются специфические для приложения записи.</target>
        </trans-unit>
        <trans-unit id="76c74bd071dd73f01696fddbbffc77712a479faf" translate="yes" xml:space="preserve">
          <source>Applications</source>
          <target state="translated">Applications</target>
        </trans-unit>
        <trans-unit id="5dd7e803139ba20c70acea8fa0e0d5743ed7b495" translate="yes" xml:space="preserve">
          <source>Applications are not required to be located under directory &lt;code&gt;$ROOT/lib&lt;/code&gt;. Several installation directories, which contain different parts of a system, can thus exist. For example, the previous example can be extended as follows:</source>
          <target state="translated">Приложения не обязательно должны находиться в каталоге &lt;code&gt;$ROOT/lib&lt;/code&gt; . Таким образом, может существовать несколько установочных каталогов, содержащих разные части системы. Например, предыдущий пример можно расширить следующим образом:</target>
        </trans-unit>
        <trans-unit id="362b31da52f21329511e4763851061ec08ac4166" translate="yes" xml:space="preserve">
          <source>Applications that access databases or log files often write a tiny data fragment (for example, one line in a log file) and then call &lt;code&gt;fsync()&lt;/code&gt; immediately to ensure that the written data is physically stored on the hard disk. Unfortunately, &lt;code&gt;fsync()&lt;/code&gt; always initiates two write operations: one for the newly written data and another one to update the modification time stored in the &lt;code&gt;inode&lt;/code&gt;. If the modification time is not a part of the transaction concept, &lt;code&gt;fdatasync()&lt;/code&gt; can be used to avoid unnecessary &lt;code&gt;inode&lt;/code&gt; disk write operations.</source>
          <target state="translated">Приложения, которые обращаются к базам данных или файлам журналов, часто записывают крошечный фрагмент данных (например, одну строку в файле журнала), а затем немедленно вызывают &lt;code&gt;fsync()&lt;/code&gt; чтобы убедиться, что записанные данные физически хранятся на жестком диске. К сожалению, &lt;code&gt;fsync()&lt;/code&gt; всегда инициирует две операции записи: одну для вновь записанных данных, а другую для обновления времени модификации, хранящегося в &lt;code&gt;inode&lt;/code&gt; . Если время модификации не является частью концепции транзакции, можно использовать &lt;code&gt;fdatasync()&lt;/code&gt; , чтобы избежать ненужных операций записи на диск &lt;code&gt;inode&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="36e5e3b3c875b142ebb079646179db76a16ac509" translate="yes" xml:space="preserve">
          <source>Applications that merely need a look-up dictionary that can be stored to disc. Those applications use the standard library module &lt;code&gt;dets&lt;/code&gt;, which is a disc-based version of the module &lt;code&gt;ets&lt;/code&gt;. For information about &lt;code&gt;dets&lt;/code&gt;, see the &lt;code&gt;dets&lt;/code&gt; manual page in STDLIB.</source>
          <target state="translated">Приложения, которым просто нужен справочный словарь, который можно сохранить на диск. Эти приложения используют стандартный библиотечный модуль &lt;code&gt;dets&lt;/code&gt; , который представляет собой дисковую версию модуля &lt;code&gt;ets&lt;/code&gt; . Для получения информации о &lt;code&gt;dets&lt;/code&gt; см. &lt;code&gt;dets&lt;/code&gt; руководства dets в STDLIB.</target>
        </trans-unit>
        <trans-unit id="08caa89c85c4c4b67db04b49770e72f7b261a582" translate="yes" xml:space="preserve">
          <source>Applications that need disc logging facilities. Those applications can use the module &lt;code&gt;disk_log&lt;/code&gt; by preference. For information about &lt;code&gt;disk_log&lt;/code&gt;, see the &lt;code&gt;disk_log&lt;/code&gt; manual page in Kernel.</source>
          <target state="translated">Приложения, которым нужны средства записи дисков. Эти приложения могут по &lt;code&gt;disk_log&lt;/code&gt; использовать модуль disk_log . Для получения информации о &lt;code&gt;disk_log&lt;/code&gt; см. &lt;code&gt;disk_log&lt;/code&gt; страницу disk_log в ядре.</target>
        </trans-unit>
        <trans-unit id="d65e8afb7e2d8dc2f453fde746bc143e776e7bfd" translate="yes" xml:space="preserve">
          <source>Applications that need to replicate data.</source>
          <target state="translated">Приложения,которые нуждаются в репликации данных.</target>
        </trans-unit>
        <trans-unit id="0a893d683aa9bd2d820b6ec80f57f8073df0221a" translate="yes" xml:space="preserve">
          <source>Applications that need to use atomic transactions to update several records simultaneously.</source>
          <target state="translated">Приложения,которые должны использовать атомные транзакции для обновления нескольких записей одновременно.</target>
        </trans-unit>
        <trans-unit id="b472e8ea80b9c154d3b89eb9393528fe5e667863" translate="yes" xml:space="preserve">
          <source>Applications that perform complicated searches on data.</source>
          <target state="translated">Приложения,выполняющие сложный поиск данных.</target>
        </trans-unit>
        <trans-unit id="218beaf6e33b2c2bfe36be6da2b6bedcdac994cd" translate="yes" xml:space="preserve">
          <source>Applications that use soft real-time characteristics.</source>
          <target state="translated">Приложения,использующие мягкие характеристики в реальном времени.</target>
        </trans-unit>
        <trans-unit id="e2d9778da73c053006242c383a365963dcdf2431" translate="yes" xml:space="preserve">
          <source>Applications.</source>
          <target state="translated">Applications.</target>
        </trans-unit>
        <trans-unit id="fa321d507b3a35d5a25a7182b72ba551d90893aa" translate="yes" xml:space="preserve">
          <source>Applies &lt;code&gt;Fun&lt;/code&gt; to each object stored in table &lt;code&gt;Name&lt;/code&gt; in some unspecified order. Different actions are taken depending on the return value of &lt;code&gt;Fun&lt;/code&gt;. The following &lt;code&gt;Fun&lt;/code&gt; return values are allowed:</source>
          <target state="translated">Применяет &lt;code&gt;Fun&lt;/code&gt; к каждому объекту, хранящемуся в таблице &lt;code&gt;Name&lt;/code&gt; , в неопределенном порядке. В зависимости от возвращаемого значения &lt;code&gt;Fun&lt;/code&gt; выполняются разные действия . Допускаются следующие возвращаемые значения &lt;code&gt;Fun&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c175a40ddabcc4446ea6e7c02e64574ef36699b4" translate="yes" xml:space="preserve">
          <source>Applies a function to each immediate subtree of a syntax tree. The result of each application replaces the corresponding original node.</source>
          <target state="translated">Применяет функцию к каждому непосредственному поддереву синтаксического дерева.Результат работы каждого приложения заменяет соответствующий оригинальный узел.</target>
        </trans-unit>
        <trans-unit id="a163f49988d544f596168407c81d1f2429198f1c" translate="yes" xml:space="preserve">
          <source>Applies a function to each node of a syntax tree. The result of each application replaces the corresponding original node. The order of traversal is bottom-up.</source>
          <target state="translated">Применяет функцию к каждому узлу синтаксического дерева.Результат работы каждого приложения заменяет соответствующий оригинальный узел.Порядок обхода-снизу вверх.</target>
        </trans-unit>
        <trans-unit id="2f3b02962a0c819c60e2a8cb9eea77ed6172b4d6" translate="yes" xml:space="preserve">
          <source>Applies a match specification to some objects stored in a table and returns a non-empty list of the results. The table, the match specification, and the number of objects that are matched are all defined by &lt;code&gt;Continuation&lt;/code&gt;, which is returned by a previous call to &lt;code&gt;&lt;a href=&quot;#select-1&quot;&gt;select/1&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#select-3&quot;&gt;select/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Применяет спецификацию соответствия к некоторым объектам, хранящимся в таблице, и возвращает непустой список результатов. Таблица, спецификация соответствия и количество сопоставленных объектов определяются &lt;code&gt;Continuation&lt;/code&gt; , которая возвращается предыдущим вызовом &lt;code&gt;&lt;a href=&quot;#select-1&quot;&gt;select/1&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;#select-3&quot;&gt;select/3&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4c464d5076dfa5b81db106edd89f699c8ab10fb5" translate="yes" xml:space="preserve">
          <source>Applies argument &lt;code&gt;Fun&lt;/code&gt; to all records in the table. &lt;code&gt;Fun&lt;/code&gt; is a function that takes a record of the old type and returns a transformed record of the new type. Argument &lt;code&gt;Fun&lt;/code&gt; can also be the atom &lt;code&gt;ignore&lt;/code&gt;, which indicates that only the metadata about the table is updated. Use of &lt;code&gt;ignore&lt;/code&gt; is not recommended, but included as a possibility for the user do to an own transformation.</source>
          <target state="translated">Применяет аргумент &lt;code&gt;Fun&lt;/code&gt; ко всем записям в таблице. &lt;code&gt;Fun&lt;/code&gt; - это функция, которая принимает запись старого типа и возвращает преобразованную запись нового типа. Argument &lt;code&gt;Fun&lt;/code&gt; также может быть &lt;code&gt;ignore&lt;/code&gt; атома , что указывает на то, что обновляются только метаданные о таблице. Использование &lt;code&gt;ignore&lt;/code&gt; не рекомендуется, но включено как возможность для пользователя сделать собственное преобразование.</target>
        </trans-unit>
        <trans-unit id="cf3f39b03019ec061c371b31fff84840bf62260f" translate="yes" xml:space="preserve">
          <source>Applies file extension specific rules to find the source file for a given object file relative to the object directory. For example, for a file with the extension &lt;code&gt;.beam&lt;/code&gt;, the default rule is to look for a file with a corresponding extension &lt;code&gt;.erl&lt;/code&gt; by replacing the suffix &lt;code&gt;&quot;ebin&quot;&lt;/code&gt; of the object directory path with &lt;code&gt;&quot;src&quot;&lt;/code&gt; or &lt;code&gt;&quot;src/*&quot;&lt;/code&gt;. The file search is done through &lt;code&gt;&lt;a href=&quot;#find_file-3&quot;&gt;find_file/3&lt;/a&gt;&lt;/code&gt;. The directory of the object file is always tried before any other directory specified by the rules.</source>
          <target state="translated">Применяет специальные правила для расширения файла, чтобы найти исходный файл для заданного объектного файла относительно каталога объектов. Например, для файла с расширением &lt;code&gt;.beam&lt;/code&gt; правилом по умолчанию является поиск файла с соответствующим расширением &lt;code&gt;.erl&lt;/code&gt; путем замены суффикса &lt;code&gt;&quot;ebin&quot;&lt;/code&gt; в пути к каталогу объектов на &lt;code&gt;&quot;src&quot;&lt;/code&gt; или &lt;code&gt;&quot;src/*&quot;&lt;/code&gt; . Поиск файлов осуществляется через &lt;code&gt;&lt;a href=&quot;#find_file-3&quot;&gt;find_file/3&lt;/a&gt;&lt;/code&gt; . Каталог объектного файла всегда проверяется перед любым другим каталогом, указанным в правилах.</target>
        </trans-unit>
        <trans-unit id="e8f326da15ffb7ae813d23c15eec50f7c444699f" translate="yes" xml:space="preserve">
          <source>Applying an &lt;code&gt;&lt;code&gt;&lt;a href=&quot;#eval&quot;&gt;eval()&lt;/a&gt;&lt;/code&gt;&lt;/code&gt;&lt;code&gt;E&lt;/code&gt; to an argument list &lt;code&gt;A&lt;/code&gt; is meant in the sense of &lt;code&gt;eval([E|A])&lt;/code&gt;.</source>
          <target state="translated">Применение &lt;code&gt;&lt;code&gt;&lt;a href=&quot;#eval&quot;&gt;eval()&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; &lt;code&gt;E&lt;/code&gt; к списку аргументов &lt;code&gt;A&lt;/code&gt; подразумевается в смысле &lt;code&gt;eval([E|A])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b14b38298fd4bda910b4630394ad60fbf3511557" translate="yes" xml:space="preserve">
          <source>Applying an exported function (&lt;code&gt;Mod:Name()&lt;/code&gt;, &lt;code&gt;apply(Mod, Name, [])&lt;/code&gt;) is about twice as expensive as calling a fun or about &lt;strong&gt;six times&lt;/strong&gt; as expensive as calling a local function.</source>
          <target state="translated">Применение экспортированной функции ( &lt;code&gt;Mod:Name()&lt;/code&gt; , &lt;code&gt;apply(Mod, Name, [])&lt;/code&gt; ) примерно в два раза дороже, чем вызов забавы, или примерно в &lt;strong&gt;шесть раз&lt;/strong&gt; дороже, чем вызов локальной функции.</target>
        </trans-unit>
        <trans-unit id="953254328751bb2f8e674cc873b7ff2bdf1e5334" translate="yes" xml:space="preserve">
          <source>Approach to Extensibility</source>
          <target state="translated">Подход к расширяемости</target>
        </trans-unit>
        <trans-unit id="0d9fa01dbd526bfbb910c0a4cf194e3ddc6ecb6f" translate="yes" xml:space="preserve">
          <source>Approximate consumed fraction of a full time-slice in percent.</source>
          <target state="translated">Ориентировочная потребляемая доля полного рабочего времени в процентах.</target>
        </trans-unit>
        <trans-unit id="3c77ccb79f8b6f72613400296314a0c96ee58298" translate="yes" xml:space="preserve">
          <source>Approximation of '$1' | '$2' | '$3' | ...</source>
          <target state="translated">Приближение &quot;$1&quot; | &quot;$2&quot; | &quot;$3&quot; | ...</target>
        </trans-unit>
        <trans-unit id="af4f4762f9bd3f0f4a10caf5b6e63dc4ce543724" translate="yes" xml:space="preserve">
          <source>Arabic</source>
          <target state="translated">Arabic</target>
        </trans-unit>
        <trans-unit id="9a1bdf411ab1c83198eecd5f0731a5c27bbb4381" translate="yes" xml:space="preserve">
          <source>Arabic Letter Mark</source>
          <target state="translated">арабская буква Марк</target>
        </trans-unit>
        <trans-unit id="594b76f0b7b11a63e0ba97c983e39193011c18c1" translate="yes" xml:space="preserve">
          <source>Arbitrary derived data formats are supported by the dictionary interface.</source>
          <target state="translated">Форматы произвольных производных данных поддерживаются словарным интерфейсом.</target>
        </trans-unit>
        <trans-unit id="a286f7c446f5fbd534896a188edddbc7d7a34e76" translate="yes" xml:space="preserve">
          <source>Arbitrary term state</source>
          <target state="translated">Произвольное состояние</target>
        </trans-unit>
        <trans-unit id="b4ea29fb4d4c1648e6d2e3c64705a89e987e421d" translate="yes" xml:space="preserve">
          <source>Are there other ways to do this that are equivalent and more efficient?</source>
          <target state="translated">Существуют ли другие способы сделать это эквивалентным и более эффективным?</target>
        </trans-unit>
        <trans-unit id="c7427a7532716d8ddc0f775b7a270adc70ce506b" translate="yes" xml:space="preserve">
          <source>Args :: term(),</source>
          <target state="translated">Аргументы::термин(),</target>
        </trans-unit>
        <trans-unit id="0fde5a51f492378b1ac1c7a090a3a9a9c4d7e9b5" translate="yes" xml:space="preserve">
          <source>Argument &lt;code&gt;Args&lt;/code&gt; is a list of &lt;code&gt;{Key, Val}&lt;/code&gt; tuples, where the following values are allowed:</source>
          <target state="translated">Argument &lt;code&gt;Args&lt;/code&gt; - это список кортежей &lt;code&gt;{Key, Val}&lt;/code&gt; , в которых разрешены следующие значения:</target>
        </trans-unit>
        <trans-unit id="2a8f4ad3dae9bd362edcdfe9517b3ed392fd27ef" translate="yes" xml:space="preserve">
          <source>Argument &lt;code&gt;Args&lt;/code&gt; is used to set &lt;code&gt;erl&lt;/code&gt; command-line arguments. If provided, it is passed to the new node and can be used for a variety of purposes; see &lt;code&gt;erl(1)&lt;/code&gt;.</source>
          <target state="translated">Argument &lt;code&gt;Args&lt;/code&gt; используется для установки аргументов командной строки &lt;code&gt;erl&lt;/code&gt; . Если предоставлен, он передается новому узлу и может использоваться для различных целей; см. &lt;code&gt;erl(1)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="528cc3f851bb138092b3a54cd9007848b26b85a1" translate="yes" xml:space="preserve">
          <source>Argument &lt;code&gt;Beam&lt;/code&gt;, which can be a string or an atom, specifies either the module name or the path to the source code, with or without extension &lt;code&gt;&quot;.erl&quot;&lt;/code&gt;. In either case, the module must be known by the code server, that is, &lt;code&gt;code:which(Module)&lt;/code&gt; must succeed.</source>
          <target state="translated">Аргумент &lt;code&gt;Beam&lt;/code&gt; , который может быть строкой или атомом, указывает либо имя модуля, либо путь к исходному коду, с расширением &lt;code&gt;&quot;.erl&quot;&lt;/code&gt; или без него . В любом случае модуль должен быть известен серверу кода, то есть &lt;code&gt;code:which(Module)&lt;/code&gt; должен быть успешным.</target>
        </trans-unit>
        <trans-unit id="e0c91ae2ecb7961a54a5e641d90a053be1d77b62" translate="yes" xml:space="preserve">
          <source>Argument &lt;code&gt;Category&lt;/code&gt; in the previous example can have the value (atom) &lt;code&gt;sys_config&lt;/code&gt; (blue background), &lt;code&gt;sys_state&lt;/code&gt; (yellow background), or &lt;code&gt;error&lt;/code&gt; (white text on red background).</source>
          <target state="translated">&lt;code&gt;Category&lt;/code&gt; аргумента в предыдущем примере может иметь значение (атом) &lt;code&gt;sys_config&lt;/code&gt; (синий фон), &lt;code&gt;sys_state&lt;/code&gt; (желтый фон) или &lt;code&gt;error&lt;/code&gt; (белый текст на красном фоне).</target>
        </trans-unit>
        <trans-unit id="cf43e2c4fa0b2acf4779f5e6cae85724db020b9a" translate="yes" xml:space="preserve">
          <source>Argument &lt;code&gt;ExtraOptions&lt;/code&gt; is added to the options found in the configuration file. If the same options are specified, the values from the configuration file overwrite &lt;code&gt;ExtraOptions&lt;/code&gt;.</source>
          <target state="translated">Аргумент &lt;code&gt;ExtraOptions&lt;/code&gt; добавляется к параметрам, найденным в файле конфигурации. Если указаны те же параметры, значения из файла конфигурации перезаписывают &lt;code&gt;ExtraOptions&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c6e370d885f073ebe4056fc20b4ead3d6c0bc12b" translate="yes" xml:space="preserve">
          <source>Argument &lt;code&gt;FlagList&lt;/code&gt; must be &lt;code&gt;[]&lt;/code&gt; for receive tracing.</source>
          <target state="translated">Аргумент &lt;code&gt;FlagList&lt;/code&gt; должен быть &lt;code&gt;[]&lt;/code&gt; для трассировки приема.</target>
        </trans-unit>
        <trans-unit id="63c68c228727c0c08a966c916cd09a8193ea4126" translate="yes" xml:space="preserve">
          <source>Argument &lt;code&gt;FlagList&lt;/code&gt; must be &lt;code&gt;[]&lt;/code&gt; for send tracing.</source>
          <target state="translated">Аргумент &lt;code&gt;FlagList&lt;/code&gt; должен быть &lt;code&gt;[]&lt;/code&gt; для трассировки отправки.</target>
        </trans-unit>
        <trans-unit id="5969bfd1f2a4922bae1c797825bd94636e7492ca" translate="yes" xml:space="preserve">
          <source>Argument &lt;code&gt;Fun&lt;/code&gt; can also be the atom &lt;code&gt;ignore&lt;/code&gt;, which indicates that only the metadata about the table is updated. Use of &lt;code&gt;ignore&lt;/code&gt; is not recommended (as it creates inconsistencies between the metadata and the actual data) but it is included as a possibility for the user do to an own (offline) transform.</source>
          <target state="translated">Argument &lt;code&gt;Fun&lt;/code&gt; также может быть &lt;code&gt;ignore&lt;/code&gt; атома , что указывает на то, что обновляются только метаданные о таблице. Использование &lt;code&gt;ignore&lt;/code&gt; не рекомендуется (так как это создает несоответствия между метаданными и фактическими данными), но оно включено как возможность для пользователя сделать собственное (автономное) преобразование.</target>
        </trans-unit>
        <trans-unit id="ede8746fe6cfaaaacae3ce131c1347e609e2da3f" translate="yes" xml:space="preserve">
          <source>Argument &lt;code&gt;Importance&lt;/code&gt; specifies a level of importance that, compared to a verbosity level (general and/or set per category), determines if the printout is to be visible. &lt;code&gt;Importance&lt;/code&gt; is any integer in the range 0..99. Predefined constants exist in the &lt;code&gt;ct.hrl&lt;/code&gt; header file. The default importance level, &lt;code&gt;?STD_IMPORTANCE&lt;/code&gt; (used if argument &lt;code&gt;Importance&lt;/code&gt; is not provided), is 50. This is also the importance used for standard I/O, for example, from printouts made with &lt;code&gt;io:format/2&lt;/code&gt;, &lt;code&gt;io:put_chars/1&lt;/code&gt;, and so on.</source>
          <target state="translated">&lt;code&gt;Importance&lt;/code&gt; аргумента определяет уровень важности, который по сравнению с уровнем детализации (общим и / или установленным для каждой категории) определяет, должна ли распечатка быть видимой. &lt;code&gt;Importance&lt;/code&gt; - любое целое число в диапазоне 0..99. Предопределенные константы существуют в &lt;code&gt;ct.hrl&lt;/code&gt; заголовка ct.hrl . Уровень важности по умолчанию &lt;code&gt;?STD_IMPORTANCE&lt;/code&gt; (используется, если аргумент &lt;code&gt;Importance&lt;/code&gt; не указан ), равен 50. Это также важность, используемая для стандартного ввода-вывода, например, из распечаток, сделанных с помощью &lt;code&gt;io:format/2&lt;/code&gt; , &lt;code&gt;io:put_chars/1&lt;/code&gt; , и так далее.</target>
        </trans-unit>
        <trans-unit id="a74c242839b6e17cec6e9fda29e9cd4d39199929" translate="yes" xml:space="preserve">
          <source>Argument &lt;code&gt;Length&lt;/code&gt; is meaningful only when the socket is in mode &lt;code&gt;raw&lt;/code&gt; and denotes the number of bytes to read. If &lt;code&gt;Length&lt;/code&gt; = 0, all available bytes are returned. If &lt;code&gt;Length&lt;/code&gt; &amp;gt; 0, exactly &lt;code&gt;Length&lt;/code&gt; bytes are returned, or an error; possibly discarding less than &lt;code&gt;Length&lt;/code&gt; bytes of data when the socket gets closed from the other side.</source>
          <target state="translated">&lt;code&gt;Length&lt;/code&gt; аргумента имеет смысл только тогда, когда сокет находится в режиме &lt;code&gt;raw&lt;/code&gt; и обозначает количество байтов для чтения. Если &lt;code&gt;Length&lt;/code&gt; = 0, возвращаются все доступные байты. Если &lt;code&gt;Length&lt;/code&gt; &amp;gt; 0, возвращаются именно байты &lt;code&gt;Length&lt;/code&gt; или ошибка; возможно, отбрасывание данных размером меньше &lt;code&gt;Length&lt;/code&gt; , когда сокет закрывается с другой стороны.</target>
        </trans-unit>
        <trans-unit id="cbac04ffb93617fd9cb7fd3fdb28dcbec27f1793" translate="yes" xml:space="preserve">
          <source>Argument &lt;code&gt;Length&lt;/code&gt; is only meaningful when the socket is in &lt;code&gt;raw&lt;/code&gt; mode and denotes the number of bytes to read. If &lt;code&gt;Length&lt;/code&gt; is &lt;code&gt;0&lt;/code&gt;, all available bytes are returned. If &lt;code&gt;Length&lt;/code&gt; &amp;gt; &lt;code&gt;0&lt;/code&gt;, exactly &lt;code&gt;Length&lt;/code&gt; bytes are returned, or an error; possibly discarding less than &lt;code&gt;Length&lt;/code&gt; bytes of data when the socket is closed from the other side.</source>
          <target state="translated">&lt;code&gt;Length&lt;/code&gt; аргумента имеет значение только тогда, когда сокет находится в &lt;code&gt;raw&lt;/code&gt; режиме и обозначает количество байтов для чтения. Если &lt;code&gt;Length&lt;/code&gt; равна &lt;code&gt;0&lt;/code&gt; , возвращаются все доступные байты. Если &lt;code&gt;Length&lt;/code&gt; &amp;gt; &lt;code&gt;0&lt;/code&gt; , возвращаются именно байты &lt;code&gt;Length&lt;/code&gt; или ошибка; возможно отбрасывание данных размером меньше &lt;code&gt;Length&lt;/code&gt; , когда сокет закрыт с другой стороны.</target>
        </trans-unit>
        <trans-unit id="7df54cbc41d8be6702a7d18339b129a60b117176" translate="yes" xml:space="preserve">
          <source>Argument &lt;code&gt;MFA&lt;/code&gt; is to be a tuple, such as &lt;code&gt;{Module, Function, Arity}&lt;/code&gt;, or the atom &lt;code&gt;on_load&lt;/code&gt; (described below). It can be the module, function, and arity for a function (or a BIF in any module). The atom &lt;code&gt;'_'&lt;/code&gt; can be used as a wildcard in any of the following ways:</source>
          <target state="translated">Аргумент &lt;code&gt;MFA&lt;/code&gt; должен быть кортежем, например &lt;code&gt;{Module, Function, Arity}&lt;/code&gt; или атомом &lt;code&gt;on_load&lt;/code&gt; (описано ниже). Это может быть модуль, функция и арность для функции (или BIF в любом модуле). Атом &lt;code&gt;'_'&lt;/code&gt; можно использовать как подстановочный знак любым из следующих способов:</target>
        </trans-unit>
        <trans-unit id="9c5ab418823236be2e40f29077d515164f418559" translate="yes" xml:space="preserve">
          <source>Argument &lt;code&gt;MatchSpec&lt;/code&gt; can take the following forms:</source>
          <target state="translated">Аргумент &lt;code&gt;MatchSpec&lt;/code&gt; может принимать следующие формы:</target>
        </trans-unit>
        <trans-unit id="632db5ffef7ffbf7896b027d5a4845557c315e16" translate="yes" xml:space="preserve">
          <source>Argument &lt;code&gt;Misc&lt;/code&gt; can be used to save internal data in a process, for example, its state. It is sent to &lt;code&gt;Module:system_continue/3&lt;/code&gt; or &lt;code&gt;Module:system_terminate/4&lt;/code&gt;.</source>
          <target state="translated">Аргумент &lt;code&gt;Misc&lt;/code&gt; может использоваться для сохранения внутренних данных процесса, например, его состояния. Он отправляется в &lt;code&gt;Module:system_continue/3&lt;/code&gt; или &lt;code&gt;Module:system_terminate/4&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f490daf6a024205229629ca457c94764493e4043" translate="yes" xml:space="preserve">
          <source>Argument &lt;code&gt;Modes&lt;/code&gt; is a list of possible modes, see &lt;code&gt;&lt;a href=&quot;#open-2&quot;&gt;open/2&lt;/a&gt;&lt;/code&gt;, and defaults to &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Modes&lt;/code&gt; аргументов - это список возможных режимов, см. &lt;code&gt;&lt;a href=&quot;#open-2&quot;&gt;open/2&lt;/a&gt;&lt;/code&gt; , по умолчанию &lt;code&gt;[]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c41785291fefd33e5c56b0234e5a635c5016d3b1" translate="yes" xml:space="preserve">
          <source>Argument &lt;code&gt;NodesOrDist&lt;/code&gt; can either be a list of nodes or the result from the function &lt;code&gt;&lt;a href=&quot;mnesia#table_info-2&quot;&gt;mnesia:table_info(Tab, frag_dist)&lt;/a&gt;&lt;/code&gt;. Argument &lt;code&gt;NodesOrDist&lt;/code&gt; is assumed to be a sorted list with the best nodes to host new replicas first in the list. The new fragment gets the same number of replicas as the first fragment (see &lt;code&gt;n_ram_copies&lt;/code&gt;, &lt;code&gt;n_disc_copies&lt;/code&gt;, and &lt;code&gt;n_disc_only_copies&lt;/code&gt;). The &lt;code&gt;NodesOrDist&lt;/code&gt; list must at least contain one element for each replica that needs to be allocated.</source>
          <target state="translated">Аргумент &lt;code&gt;NodesOrDist&lt;/code&gt; может быть списком узлов или результатом функции &lt;code&gt;&lt;a href=&quot;mnesia#table_info-2&quot;&gt;mnesia:table_info(Tab, frag_dist)&lt;/a&gt;&lt;/code&gt; . Предполагается, что аргумент &lt;code&gt;NodesOrDist&lt;/code&gt; представляет собой отсортированный список с лучшими узлами для размещения новых реплик первыми в списке. Новый фрагмент получает то же количество реплик, что и первый фрагмент (см. &lt;code&gt;n_ram_copies&lt;/code&gt; , &lt;code&gt;n_disc_copies&lt;/code&gt; и &lt;code&gt;n_disc_only_copies&lt;/code&gt; ). Список &lt;code&gt;NodesOrDist&lt;/code&gt; должен содержать хотя бы один элемент для каждой реплики, которую необходимо выделить.</target>
        </trans-unit>
        <trans-unit id="46d85843a85d8a0d52723585742b11afd0899160" translate="yes" xml:space="preserve">
          <source>Argument &lt;code&gt;OptionList&lt;/code&gt; can be used to specify certain behavior regarding ports and triggering monitors under certain conditions:</source>
          <target state="translated">Аргумент &lt;code&gt;OptionList&lt;/code&gt; может использоваться для указания определенного поведения в отношении портов и запуска мониторов при определенных условиях:</target>
        </trans-unit>
        <trans-unit id="de736e1203b55111eca5eccfabbf9c9e91ef73a2" translate="yes" xml:space="preserve">
          <source>Argument &lt;code&gt;Options&lt;/code&gt; is a list of &lt;code&gt;{Key, Val}&lt;/code&gt; tuples, where the following values are allowed:</source>
          <target state="translated">&lt;code&gt;Options&lt;/code&gt; аргумента - это список кортежей &lt;code&gt;{Key, Val}&lt;/code&gt; , в которых разрешены следующие значения:</target>
        </trans-unit>
        <trans-unit id="f846b2639fdccdd7fe83e5494fa41e5843c66eb2" translate="yes" xml:space="preserve">
          <source>Argument &lt;code&gt;PreArgs&lt;/code&gt; is a list of tagged values. There are two tags, &lt;code&gt;parent_value&lt;/code&gt; and &lt;code&gt;stop_fun&lt;/code&gt;, used by Mnesia for managing transactions.</source>
          <target state="translated">Аргумент &lt;code&gt;PreArgs&lt;/code&gt; - это список помеченных значений. Mnesia использует два &lt;code&gt;parent_value&lt;/code&gt; , parent_value и &lt;code&gt;stop_fun&lt;/code&gt; , для управления транзакциями.</target>
        </trans-unit>
        <trans-unit id="63f20a5312d5f256e87436cce6c76d1a556dfbb0" translate="yes" xml:space="preserve">
          <source>Argument &lt;code&gt;Server&lt;/code&gt; in the SFTP functions is only to be used for SFTP sessions that have been started on existing SSH connections (that is, when the original connection type is &lt;code&gt;ssh&lt;/code&gt;). Whenever the connection type is &lt;code&gt;sftp&lt;/code&gt;, use the SSH connection reference only.</source>
          <target state="translated">&lt;code&gt;Server&lt;/code&gt; аргументов в функциях SFTP должен использоваться только для сеансов SFTP, которые были запущены на существующих соединениях SSH (то есть, когда исходный тип соединения - &lt;code&gt;ssh&lt;/code&gt; ). Если тип соединения - &lt;code&gt;sftp&lt;/code&gt; , используйте только ссылку на соединение SSH.</target>
        </trans-unit>
        <trans-unit id="127495432a40845ab9ada867dc7fc2fee4865175" translate="yes" xml:space="preserve">
          <source>Argument &lt;code&gt;SnmpStruct&lt;/code&gt; is a list of SNMP information. Currently, the only information needed is information about the key types in the table. Multiple keys cannot be handled in Mnesia, but many SNMP tables have multiple keys. Therefore, the following convention is used: if a table has multiple keys, these must always be stored as a tuple of the keys. Information about the key types is specified as a tuple of atoms describing the types. The only significant type is &lt;code&gt;fix_string&lt;/code&gt;. This means that a string has a fixed size.</source>
          <target state="translated">Аргумент &lt;code&gt;SnmpStruct&lt;/code&gt; - это список информации SNMP. В настоящее время требуется только информация о типах ключей в таблице. В Mnesia нельзя обрабатывать несколько ключей, но многие таблицы SNMP имеют несколько ключей. Поэтому используется следующее соглашение: если таблица имеет несколько ключей, они всегда должны храниться в виде кортежа ключей. Информация о типах ключей указывается в виде кортежа атомов, описывающих типы. Единственный значимый тип - &lt;code&gt;fix_string&lt;/code&gt; . Это означает, что строка имеет фиксированный размер.</target>
        </trans-unit>
        <trans-unit id="134ccc578ec25f4a1b41da580e909377b6e00202" translate="yes" xml:space="preserve">
          <source>Argument &lt;code&gt;SpawnOpts&lt;/code&gt;, if specified, is passed as the last argument to the &lt;code&gt;spawn_opt/2,3,4,5&lt;/code&gt; BIF.</source>
          <target state="translated">Аргумент &lt;code&gt;SpawnOpts&lt;/code&gt; , если он указан, передается в качестве последнего аргумента &lt;code&gt;spawn_opt/2,3,4,5&lt;/code&gt; BIF.</target>
        </trans-unit>
        <trans-unit id="e3cedb4f6297db65a16db517b2fa86b4c83da9c5" translate="yes" xml:space="preserve">
          <source>Argument &lt;code&gt;State&lt;/code&gt; is a tuple &lt;code&gt;{ShellState,ExprState}&lt;/code&gt;. The return value &lt;code&gt;NewState&lt;/code&gt; has the same form. This can be used to carry a state between calls to the callback functions. Data saved in &lt;code&gt;ShellState&lt;/code&gt; lives through an entire shell session. Data saved in &lt;code&gt;ExprState&lt;/code&gt; lives only through the evaluation of the current expression.</source>
          <target state="translated">&lt;code&gt;State&lt;/code&gt; аргумента - это кортеж &lt;code&gt;{ShellState,ExprState}&lt;/code&gt; . Возвращаемое значение &lt;code&gt;NewState&lt;/code&gt; имеет ту же форму. Это можно использовать для переноса состояния между вызовами функций обратного вызова. Данные, сохраненные в &lt;code&gt;ShellState&lt;/code&gt; , живут в течение всего сеанса оболочки. Данные, сохраненные в &lt;code&gt;ExprState&lt;/code&gt; , живут только после вычисления текущего выражения.</target>
        </trans-unit>
        <trans-unit id="4b4b0aee165785dc7cf379568e4015cc77271225" translate="yes" xml:space="preserve">
          <source>Argument &lt;code&gt;String&lt;/code&gt; is expected to start with a valid text represented float (the digits are ASCII values). Remaining characters in the string after the float are returned in &lt;code&gt;Rest&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; аргумента должна начинаться с допустимого текста, представленного с плавающей точкой (цифры являются значениями ASCII). Оставшиеся символы в строке после поплавка возвращаются в &lt;code&gt;Rest&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="99bddf0ad5e13463903ca5db19b6f229eaaa62d0" translate="yes" xml:space="preserve">
          <source>Argument &lt;code&gt;String&lt;/code&gt; is expected to start with a valid text represented integer (the digits are ASCII values). Remaining characters in the string after the integer are returned in &lt;code&gt;Rest&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; аргумента должна начинаться с допустимого текста, представленного целым числом (цифры являются значениями ASCII). Оставшиеся символы в строке после целого числа возвращаются в &lt;code&gt;Rest&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8f022d7270d5362d0771335ef05b9154a045868e" translate="yes" xml:space="preserve">
          <source>Argument &lt;code&gt;Type&lt;/code&gt; specifies the type of the application. If omitted, it defaults to &lt;code&gt;temporary&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Type&lt;/code&gt; аргумента указывает тип приложения. Если не указано, по умолчанию используется &lt;code&gt;temporary&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="52529ec5b3dbe90218521bf7062ae0ba51481ae8" translate="yes" xml:space="preserve">
          <source>Argument &lt;code&gt;event&lt;/code&gt; identifies the event object. On Unix systems, the functions &lt;code&gt;select&lt;/code&gt;/&lt;code&gt;poll&lt;/code&gt; are used. The event object must be a socket, pipe or other file descriptor object that &lt;code&gt;select&lt;/code&gt;/&lt;code&gt;poll&lt;/code&gt; can use.</source>
          <target state="translated">&lt;code&gt;event&lt;/code&gt; аргумента идентифицирует объект события. В системах Unix используются функции &lt;code&gt;select&lt;/code&gt; / &lt;code&gt;poll&lt;/code&gt; . Объект события должен быть сокетом, конвейером или другим объектом дескриптора файла, который может использовать &lt;code&gt;select&lt;/code&gt; / &lt;code&gt;poll&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8c82d16dce6414cf83d8d93f8e672741f4d9ca8a" translate="yes" xml:space="preserve">
          <source>Argument &lt;code&gt;event&lt;/code&gt; is not a valid OS event object.</source>
          <target state="translated">&lt;code&gt;event&lt;/code&gt; аргумента не является допустимым объектом события ОС.</target>
        </trans-unit>
        <trans-unit id="7980baebdda9326ef971ef864a7e3442b2b16145" translate="yes" xml:space="preserve">
          <source>Argument &lt;code&gt;index&lt;/code&gt; is updated, that is, this function can be viewed as a decode function that decodes a term into a human-readable format.</source>
          <target state="translated">&lt;code&gt;index&lt;/code&gt; аргумента обновляется, то есть эту функцию можно рассматривать как функцию декодирования, которая декодирует термин в удобочитаемый формат.</target>
        </trans-unit>
        <trans-unit id="a75ce9ef93d0395faba2903cbdd1f49f30b2929e" translate="yes" xml:space="preserve">
          <source>Argument &lt;code&gt;init&lt;/code&gt; is a pointer to an &lt;code&gt;&lt;a href=&quot;#ErlNifResourceTypeInit&quot;&gt;ErlNifResourceTypeInit&lt;/a&gt;&lt;/code&gt; structure that contains the function pointers for destructor, down and stop callbacks for the resource type.</source>
          <target state="translated">Аргумент &lt;code&gt;init&lt;/code&gt; - это указатель на структуру &lt;code&gt;&lt;a href=&quot;#ErlNifResourceTypeInit&quot;&gt;ErlNifResourceTypeInit&lt;/a&gt;&lt;/code&gt; , которая содержит указатели функций для деструктора, обратных вызовов вниз и остановки для типа ресурса.</target>
        </trans-unit>
        <trans-unit id="9dfed7a573331b550431a030fa57b0d3e26d11e8" translate="yes" xml:space="preserve">
          <source>Argument &lt;code&gt;mode&lt;/code&gt; describes the type of events to wait for. It can be &lt;code&gt;ERL_NIF_SELECT_READ&lt;/code&gt;, &lt;code&gt;ERL_NIF_SELECT_WRITE&lt;/code&gt; or a bitwise OR combination to wait for both. It can also be &lt;code&gt;ERL_NIF_SELECT_STOP&lt;/code&gt; which is described further below. When a read or write event is triggered, a notification message like this is sent to the process identified by &lt;code&gt;pid&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;mode&lt;/code&gt; аргумента описывает тип ожидаемых событий. Это может быть &lt;code&gt;ERL_NIF_SELECT_READ&lt;/code&gt; , &lt;code&gt;ERL_NIF_SELECT_WRITE&lt;/code&gt; или комбинация побитового ИЛИ для ожидания обоих. Это также может быть &lt;code&gt;ERL_NIF_SELECT_STOP&lt;/code&gt; , что описано ниже. Когда запускается событие чтения или записи, такое уведомление отправляется процессу, идентифицированному &lt;code&gt;pid&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="5a90058d12d7cac1628a470a0a7fcf5ea024b094" translate="yes" xml:space="preserve">
          <source>Argument &lt;code&gt;obj&lt;/code&gt; is a resource object obtained from &lt;code&gt;&lt;a href=&quot;#enif_alloc_resource&quot;&gt;enif_alloc_resource&lt;/a&gt;&lt;/code&gt;. The purpose of the resource objects is as a container of the event object to manage its state and lifetime. A handle to the resource is received in the notification message as &lt;code&gt;Obj&lt;/code&gt;.</source>
          <target state="translated">Аргумент &lt;code&gt;obj&lt;/code&gt; - это объект ресурса, полученный из &lt;code&gt;&lt;a href=&quot;#enif_alloc_resource&quot;&gt;enif_alloc_resource&lt;/a&gt;&lt;/code&gt; . Назначение объектов ресурсов - это контейнер объекта события для управления его состоянием и временем жизни. Дескриптор ресурса получен в сообщении уведомления как &lt;code&gt;Obj&lt;/code&gt; .</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
