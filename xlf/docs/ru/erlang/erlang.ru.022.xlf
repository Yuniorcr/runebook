<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="erlang">
    <body>
      <group id="erlang">
        <trans-unit id="5dd5c53526024f8af02322fcf011be99c77bbb2e" translate="yes" xml:space="preserve">
          <source>Deletes file or directory &lt;code&gt;File&lt;/code&gt;. If &lt;code&gt;File&lt;/code&gt; is a directory, its contents is first recursively deleted. Returns:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae4fe94c9918f898de81f8233a9ef1f179233cfb" translate="yes" xml:space="preserve">
          <source>Deletes the breakpoint at &lt;code&gt;Line&lt;/code&gt; in &lt;code&gt;Module&lt;/code&gt;.</source>
          <target state="translated">Удаляет точку останова в &lt;code&gt;Line&lt;/code&gt; в &lt;code&gt;Module&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8a8a3823a04d3923ed4cecf755bd1cd98d275849" translate="yes" xml:space="preserve">
          <source>Deletes the breakpoints at the first line of every clause of function &lt;code&gt;Module:Name/Arity&lt;/code&gt;.</source>
          <target state="translated">Удаляет точки останова в первой строке каждого предложения функции &lt;code&gt;Module:Name/Arity&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="46e356165916fa441c4393d47df41d4f5eafc033" translate="yes" xml:space="preserve">
          <source>Deletes the current key, if it is valid. Calls the Win32 API function &lt;code&gt;RegDeleteKey()&lt;/code&gt;. Notice that this call does not change the current key (unlike &lt;code&gt;&lt;a href=&quot;#change_key_create-2&quot;&gt; change_key_create/2&lt;/a&gt;&lt;/code&gt;). This means that after the call, the current key is invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f4c876adf78c7429ea484cfe8d592f3d4950615" translate="yes" xml:space="preserve">
          <source>Deletes the current key, if it is valid. Calls the Win32 API function &lt;code&gt;RegDeleteKey()&lt;/code&gt;. Notice that this call does not change the current key (unlike &lt;code&gt;&lt;a href=&quot;#change_key_create-2&quot;&gt;change_key_create/2&lt;/a&gt;&lt;/code&gt;). This means that after the call, the current key is invalid.</source>
          <target state="translated">Удаляет текущий ключ, если он действителен. Вызывает функцию Win32 API &lt;code&gt;RegDeleteKey()&lt;/code&gt; . Обратите внимание, что этот вызов не изменяет текущий ключ (в отличие от &lt;code&gt;&lt;a href=&quot;#change_key_create-2&quot;&gt;change_key_create/2&lt;/a&gt;&lt;/code&gt; ). Это означает, что после вызова текущий ключ недействителен.</target>
        </trans-unit>
        <trans-unit id="4f8afd6d7d8311edbd37e3839c01ce48b35a3601" translate="yes" xml:space="preserve">
          <source>Deletes the edges in list &lt;code&gt;Edges&lt;/code&gt; from digraph &lt;code&gt;G&lt;/code&gt;.</source>
          <target state="translated">Удаляет края в список &lt;code&gt;Edges&lt;/code&gt; из орграфа &lt;code&gt;G&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e090b8665faa778d2ef9696ec7f8fe8a880abb2f" translate="yes" xml:space="preserve">
          <source>Deletes the entire table &lt;code&gt;Tab&lt;/code&gt;.</source>
          <target state="translated">Удаляет всю таблицу &lt;code&gt;Tab&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="71fc151dee30c6abe6f031a8b13b17a8191c83f4" translate="yes" xml:space="preserve">
          <source>Deletes the environment variable &lt;code&gt;VarName&lt;/code&gt;.</source>
          <target state="translated">Удаляет переменную среды &lt;code&gt;VarName&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f708faba6af97f22007037df3f544635b58fb9f9" translate="yes" xml:space="preserve">
          <source>Deletes the file &lt;code&gt;File&lt;/code&gt; at the remote server.</source>
          <target state="translated">Удаляет файл &lt;code&gt;File&lt;/code&gt; на удаленном сервере.</target>
        </trans-unit>
        <trans-unit id="1220b4e312e97076f6d4fd5b1f7cb6ed925918bd" translate="yes" xml:space="preserve">
          <source>Deletes the file specified by &lt;code&gt;Name&lt;/code&gt;.</source>
          <target state="translated">Удаляет файл, указанный в &lt;code&gt;Name&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="311abc79f8faf3f31f0de87d15262b09b11f065e" translate="yes" xml:space="preserve">
          <source>Deletes the files &lt;code&gt;erl&lt;/code&gt; and &lt;code&gt;start&lt;/code&gt; from &lt;code&gt;tmp/erts-5.10.4/bin&lt;/code&gt;. These files are created again from source when installing the release.</source>
          <target state="translated">Удаляет файлы &lt;code&gt;erl&lt;/code&gt; и &lt;code&gt;start&lt;/code&gt; с &lt;code&gt;tmp/erts-5.10.4/bin&lt;/code&gt; . Эти файлы снова создаются из исходников при установке выпуска.</target>
        </trans-unit>
        <trans-unit id="a4766320246a7839926e41b58ceb885afd72bb95" translate="yes" xml:space="preserve">
          <source>Deletes the index on attribute with name &lt;code&gt;AttrName&lt;/code&gt; in a table.</source>
          <target state="translated">Удаляет индекс по атрибуту с именем &lt;code&gt;AttrName&lt;/code&gt; в таблице.</target>
        </trans-unit>
        <trans-unit id="87ff8ee5f5ac17a2346e6941ae9fe9a8f102c0fd" translate="yes" xml:space="preserve">
          <source>Deletes the lock &lt;code&gt;Id&lt;/code&gt; synchronously.</source>
          <target state="translated">Удаляет &lt;code&gt;Id&lt;/code&gt; блокировки синхронно.</target>
        </trans-unit>
        <trans-unit id="b5d31af51e57f1d619a23240313fc7f8259cab1f" translate="yes" xml:space="preserve">
          <source>Deletes the replica of table &lt;code&gt;Tab&lt;/code&gt; at node &lt;code&gt;Node&lt;/code&gt;. When the last replica is deleted with this function, the table disappears entirely.</source>
          <target state="translated">Удаляет реплику таблицы &lt;code&gt;Tab&lt;/code&gt; на узле &lt;code&gt;Node&lt;/code&gt; . Когда последняя реплика удаляется с помощью этой функции, таблица полностью исчезает.</target>
        </trans-unit>
        <trans-unit id="327e2bdef58dc2b2885dab77476a029eecf521cd" translate="yes" xml:space="preserve">
          <source>Deletes the row in the table.</source>
          <target state="translated">Удаляет строку в таблице.</target>
        </trans-unit>
        <trans-unit id="ef466f07da53b5c5a842ff32c0bb33037d702347" translate="yes" xml:space="preserve">
          <source>Deletes the vertices in list &lt;code&gt;Vertices&lt;/code&gt; from digraph &lt;code&gt;G&lt;/code&gt;.</source>
          <target state="translated">Удаляет вершины в списке &lt;code&gt;Vertices&lt;/code&gt; из орграфа &lt;code&gt;G&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ae125b029da9f118d4a67820ec02ed4a2262e06a" translate="yes" xml:space="preserve">
          <source>Deletes these extensions from the list of compress extensions.</source>
          <target state="translated">Удаляет эти удлинители из списка удлинителей компрессора.</target>
        </trans-unit>
        <trans-unit id="d7cebb65c66062e754f67e7cd84ff3910ba98a0e" translate="yes" xml:space="preserve">
          <source>Deletes these extensions from the list of uncompress extensions.</source>
          <target state="translated">Удаляет эти расширения из списка несжатых расширений.</target>
        </trans-unit>
        <trans-unit id="d080c61dd65db208d878d0084fbbff8bedd06443" translate="yes" xml:space="preserve">
          <source>Deletes vertex &lt;code&gt;V&lt;/code&gt; from digraph &lt;code&gt;G&lt;/code&gt;. Any edges &lt;code&gt;&lt;a href=&quot;#emanate&quot;&gt;emanating&lt;/a&gt;&lt;/code&gt; from &lt;code&gt;V&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#incident&quot;&gt;incident&lt;/a&gt;&lt;/code&gt; on &lt;code&gt;V&lt;/code&gt; are also deleted.</source>
          <target state="translated">Удаление вершинных &lt;code&gt;V&lt;/code&gt; от орграфа &lt;code&gt;G&lt;/code&gt; . Любые ребра, &lt;code&gt;&lt;a href=&quot;#emanate&quot;&gt;emanating&lt;/a&gt;&lt;/code&gt; из &lt;code&gt;V&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;#incident&quot;&gt;incident&lt;/a&gt;&lt;/code&gt; на &lt;code&gt;V&lt;/code&gt; , также удаляются.</target>
        </trans-unit>
        <trans-unit id="743f41b9c4291a0f1388dfcb3326f2e76e1e6fe5" translate="yes" xml:space="preserve">
          <source>Deleting an Element</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b21f3d4de11cc4c159ce99657c2fbc90fdf1feff" translate="yes" xml:space="preserve">
          <source>Deletion of atoms and other terms that fit in one machine word is specially optimized to avoid doing a global GC. It is still not recommended to update persistent terms with such values too frequently because the hash table holding the keys is copied every time a persistent term is updated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dcabc9ea39d37218edc79435c06dbd50a0deb2e" translate="yes" xml:space="preserve">
          <source>Deliver distribution channel data from a remote node to the local node.</source>
          <target state="translated">Доставка данных канала распределения от удаленного узла к локальному.</target>
        </trans-unit>
        <trans-unit id="f56e9fc6568538a640442392ddf7c4208577ff80" translate="yes" xml:space="preserve">
          <source>Delivered when a peer sends an adaptation layer indication parameter (configured through option &lt;code&gt;&lt;a href=&quot;#option-sctp_adaptation_layer&quot;&gt;sctp_adaptation_layer&lt;/a&gt;&lt;/code&gt;). Notice that with the current implementation of the Erlang/SCTP binding, this event is disabled by default.</source>
          <target state="translated">Доставляется, когда одноранговый узел отправляет параметр индикации уровня адаптации (настраивается с помощью опции &lt;code&gt;&lt;a href=&quot;#option-sctp_adaptation_layer&quot;&gt;sctp_adaptation_layer&lt;/a&gt;&lt;/code&gt; ). Обратите внимание, что в текущей реализации привязки Erlang / SCTP это событие отключено по умолчанию.</target>
        </trans-unit>
        <trans-unit id="41529ae1ea2763fa3d1c8d48455acf9f20804cf1" translate="yes" xml:space="preserve">
          <source>Delivery is done differently depending on the value of &lt;code&gt;tag_receiver()&lt;/code&gt;:</source>
          <target state="translated">Доставка осуществляется по-разному в зависимости от значения &lt;code&gt;tag_receiver()&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="af78bc157d8b4fffa9286db1b886ea4e95d3453e" translate="yes" xml:space="preserve">
          <source>Demanding reload when a reload is already in progress is always an error. Using the high-level functions, it is also an error to demand reloading when more than one &lt;code&gt;&lt;a href=&quot;#users&quot;&gt;user&lt;/a&gt;&lt;/code&gt; has the driver loaded.</source>
          <target state="translated">Требование перезагрузки, когда перезагрузка уже выполняется, всегда является ошибкой. При использовании функций высокого уровня также является ошибкой требование перезагрузки, если драйвер загружен более чем одним &lt;code&gt;&lt;a href=&quot;#users&quot;&gt;user&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4dcb269c56df9edcec6a92cbe87d6a1b141f056d" translate="yes" xml:space="preserve">
          <source>Demands for efficiency when reading data from an I/O server has not only lead to the addition of the &lt;code&gt;get_line&lt;/code&gt; and &lt;code&gt;get_chars&lt;/code&gt; requests, but has also added the concept of I/O server options. No options are mandatory to implement, but all I/O servers in the Erlang standard libraries honor the &lt;code&gt;binary&lt;/code&gt; option, which allows element &lt;code&gt;Data&lt;/code&gt; of the &lt;code&gt;io_reply&lt;/code&gt; tuple to be a binary instead of a list &lt;strong&gt;when possible&lt;/strong&gt;. If the data is sent as a binary, Unicode data is sent in the standard Erlang Unicode format, that is, UTF-8 (notice that the function of the &lt;code&gt;get_until&lt;/code&gt; request still gets list data regardless of the I/O server mode).</source>
          <target state="translated">Требования к эффективности при чтении данных с сервера ввода-вывода не только привели к добавлению запросов &lt;code&gt;get_line&lt;/code&gt; и &lt;code&gt;get_chars&lt;/code&gt; , но также добавили концепцию опций сервера ввода-вывода. Параметры не являются обязательными для выполнения, но все сервера ввода / вывода в стандартных библиотеках Erlang чтить &lt;code&gt;binary&lt;/code&gt; вариант, который позволяет элемент &lt;code&gt;Data&lt;/code&gt; из &lt;code&gt;io_reply&lt;/code&gt; кортежа бинарных вместо списка , &lt;strong&gt;когда это возможно&lt;/strong&gt; . Если данные отправляются как двоичные, данные Unicode отправляются в стандартном формате Erlang Unicode, то есть UTF-8 (обратите внимание, что функция запроса &lt;code&gt;get_until&lt;/code&gt; по- прежнему получает данные списка независимо от режима сервера ввода-вывода).</target>
        </trans-unit>
        <trans-unit id="9b75d5fa2d821733c84521ae433ed2c40237c592" translate="yes" xml:space="preserve">
          <source>Denotes if the terminal is to echo input. Only supported for the standard shell I/O server (&lt;code&gt;group.erl&lt;/code&gt;)</source>
          <target state="translated">Обозначает, должен ли терминал отображать ввод. Поддерживается только для стандартной оболочки сервера ввода-вывода ( &lt;code&gt;group.erl&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="770427e097fad59d1892a79f3d07020d064304fe" translate="yes" xml:space="preserve">
          <source>Denotes the last part of the OID which specifies the index of the row in the table (see RFC1212, 4.1.6 for more information about INDEX).</source>
          <target state="translated">Обозначает последнюю часть OID,определяющую индекс строки в таблице (подробнее об ИНДЕКСе см.RFC1212,4.1.6).</target>
        </trans-unit>
        <trans-unit id="0562f32dc56f5c702810cbe010068ddd38dbd69a" translate="yes" xml:space="preserve">
          <source>Dependencies</source>
          <target state="translated">Dependencies</target>
        </trans-unit>
        <trans-unit id="9617b6235113e37c04bab7c3ca9a40d08c2fd9ba" translate="yes" xml:space="preserve">
          <source>Dependencies between applications or modules displayed as a graph</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed42c382496ca9fcfe7ec583d2cd5e90ce4a7bae" translate="yes" xml:space="preserve">
          <source>Depending on &lt;code&gt;Arg&lt;/code&gt;, this function can return a list not only of visible nodes, but also hidden nodes and previously known nodes, and so on.</source>
          <target state="translated">В зависимости от &lt;code&gt;Arg&lt;/code&gt; эта функция может возвращать список не только видимых узлов, но также скрытых узлов и ранее известных узлов и так далее.</target>
        </trans-unit>
        <trans-unit id="888f8a801100b3047d49eff8aacaa93e0afae980" translate="yes" xml:space="preserve">
          <source>Depending on &lt;code&gt;Flag&lt;/code&gt;, the calling process starts subscribing (&lt;code&gt;Flag&lt;/code&gt; equal to &lt;code&gt;true&lt;/code&gt;) or stops subscribing (&lt;code&gt;Flag&lt;/code&gt; equal to &lt;code&gt;false&lt;/code&gt;) to node status change messages.</source>
          <target state="translated">В зависимости от &lt;code&gt;Flag&lt;/code&gt; вызывающий процесс начинает подписываться ( &lt;code&gt;Flag&lt;/code&gt; равен &lt;code&gt;true&lt;/code&gt; ) или прекращает подписку ( &lt;code&gt;Flag&lt;/code&gt; равен &lt;code&gt;false&lt;/code&gt; ) на сообщения об изменении статуса узла.</target>
        </trans-unit>
        <trans-unit id="3a593c77b3451c58e4a483fc1a4c2ed4a7460896" translate="yes" xml:space="preserve">
          <source>Depending on Unix:</source>
          <target state="translated">В зависимости от Unix:</target>
        </trans-unit>
        <trans-unit id="243bac6201188d4c8745d8544eb1a7983b8606fa" translate="yes" xml:space="preserve">
          <source>Depending on current directory, and writing there:</source>
          <target state="translated">В зависимости от текущего каталога и записи туда:</target>
        </trans-unit>
        <trans-unit id="cdde803659c57ac2ddc339522c646af01e6694a2" translate="yes" xml:space="preserve">
          <source>Depending on execution order:</source>
          <target state="translated">В зависимости от заказа на исполнение:</target>
        </trans-unit>
        <trans-unit id="4e25fe3d3f1520c00d56f174734b9eb9bce227c1" translate="yes" xml:space="preserve">
          <source>Depending on how your state machine is specified, this can be a very useful feature, but it forces you to handle the &lt;strong&gt;state enter calls&lt;/strong&gt; in all states. See also the &lt;code&gt;&lt;a href=&quot;#State%20Enter%20Actions&quot;&gt; State Enter Actions &lt;/a&gt;&lt;/code&gt; section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dee5fe53ac8542b7adfcc26071a2cc098a90e75" translate="yes" xml:space="preserve">
          <source>Depending on how your state machine is specified, this can be a very useful feature, but it forces you to handle the state enter calls in all states. See also the &lt;code&gt;&lt;a href=&quot;#State%20Enter%20Actions&quot;&gt;State Enter Actions&lt;/a&gt;&lt;/code&gt; chapter.</source>
          <target state="translated">В зависимости от того, как указан ваш конечный автомат, это может быть очень полезной функцией, но она заставляет вас обрабатывать вызовы ввода состояния во всех состояниях. См. Также главу &amp;laquo; &lt;code&gt;&lt;a href=&quot;#State%20Enter%20Actions&quot;&gt;State Enter Actions&lt;/a&gt;&lt;/code&gt; входе в состояние&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="9291af56bff8b9929663e0373b04939eaa6165fd" translate="yes" xml:space="preserve">
          <source>Depending on the application, it can be a good idea to use the dirty functions for certain operations. Almost all Mnesia functions that can be called within transactions have a dirty equivalent, which is much more efficient.</source>
          <target state="translated">В зависимости от приложения,может быть хорошей идеей использовать грязные функции для определенных операций.Почти все функции Mnesia,которые могут быть вызваны внутри транзакций,имеют грязный эквивалент,что гораздо эффективнее.</target>
        </trans-unit>
        <trans-unit id="dabd0167e15f1eb7094245774e052022449eed10" translate="yes" xml:space="preserve">
          <source>Depending on the encoding rules, the encoder can also compare the given value to the default value and automatically omit the encoding if the values are equal. How much effort the encoder makes to compare the values depends on the encoding rules. The DER encoding rules forbid encoding a value equal to the default value, so it has a more thorough and time-consuming comparison than the encoders for the other encoding rules.</source>
          <target state="translated">В зависимости от правил кодирования,кодировщик может также сравнить заданное значение со значением по умолчанию и автоматически пропустить кодировку,если значения равны.Сколько усилий кодировщик прилагает для сравнения значений,зависит от правил кодирования.Правила кодирования DER запрещают кодировать значение,равное значению по умолчанию,поэтому сравнение более тщательное и трудоемкое,чем кодировщики для других правил кодирования.</target>
        </trans-unit>
        <trans-unit id="08626437fb40efba7dbca9b44d332c33a8162802" translate="yes" xml:space="preserve">
          <source>Depending on the encoding, different methods of reading and writing data is preferred. The default encoding of &lt;code&gt;latin1&lt;/code&gt; implies using this module (&lt;code&gt;file&lt;/code&gt;) for reading and writing data as the interfaces provided here work with byte-oriented data. Using other (Unicode) encodings makes the &lt;code&gt;io(3)&lt;/code&gt; functions &lt;code&gt;get_chars&lt;/code&gt;, &lt;code&gt;get_line&lt;/code&gt;, and &lt;code&gt;put_chars&lt;/code&gt; more suitable, as they can work with the full Unicode range.</source>
          <target state="translated">В зависимости от кодировки предпочтительны разные методы чтения и записи данных. Кодировка по умолчанию &lt;code&gt;latin1&lt;/code&gt; подразумевает использование этого модуля ( &lt;code&gt;file&lt;/code&gt; ) для чтения и записи данных, поскольку предоставленные здесь интерфейсы работают с байтовыми данными. Использование других (Unicode) кодировок делает функции &lt;code&gt;get_chars&lt;/code&gt; , &lt;code&gt;get_line&lt;/code&gt; и &lt;code&gt;put_chars&lt;/code&gt; &lt;code&gt;io(3)&lt;/code&gt; более подходящими, поскольку они могут работать со всем диапазоном Unicode.</target>
        </trans-unit>
        <trans-unit id="3a4a2bd194c4b302cc838a7198f9734aad7fbc66" translate="yes" xml:space="preserve">
          <source>Depending on the platform, the value may need to be quoted if the shell itself interprets certain characters. On Unix, terms containing tuples and lists must be quoted. Terms containing spaces must be quoted on all platforms.</source>
          <target state="translated">В зависимости от платформы,значение может понадобиться процитировать,если оболочка сама интерпретирует определенные символы.В Unix термины,содержащие кортежи и списки,должны быть процитированы.Термины,содержащие пробелы,должны быть процитированы на всех платформах.</target>
        </trans-unit>
        <trans-unit id="03c613c2a141cff91e371843ee43ffefd0b81ace" translate="yes" xml:space="preserve">
          <source>Depending on the type of &lt;code&gt;Node&lt;/code&gt;, the size of some groups may be variable (e.g., the group consisting of all the elements of a tuple), while others always contain the same number of elements - usually exactly one (e.g., the group containing the argument expression of a case-expression). Note, however, that the exact structure of the returned list (for a given node type) should in general not be depended upon, since it might be subject to change without notice.</source>
          <target state="translated">В зависимости от типа &lt;code&gt;Node&lt;/code&gt; размер некоторых групп может быть переменным (например, группа, состоящая из всех элементов кортежа), в то время как другие всегда содержат одинаковое количество элементов - обычно ровно один (например, группа, содержащая выражение-аргумент case-выражения). Обратите внимание, однако, что на точную структуру возвращаемого списка (для данного типа узла), как правило, не следует полагаться, поскольку она может быть изменена без уведомления.</target>
        </trans-unit>
        <trans-unit id="377f14389e9e0ac790724578e98e3d818a0aadfe" translate="yes" xml:space="preserve">
          <source>Depending on the underlying OS:es links might be followed and info on the final file, directory etc is returned. See &lt;code&gt;&lt;a href=&quot;#read_link_info-2&quot;&gt;read_link_info/2&lt;/a&gt;&lt;/code&gt; on how to get information on links instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f72e0a79aede683f74da3cac9428753ce30b12f5" translate="yes" xml:space="preserve">
          <source>Depending on the underlying OS:es links might be followed and info on the final file, directory etc is returned. See &lt;code&gt;&lt;a href=&quot;#read_link_info-2&quot;&gt;ssh_sftp::read_link_info/2&lt;/a&gt;&lt;/code&gt; on how to get information on links instead.</source>
          <target state="translated">В зависимости от базовой ОС: по ссылкам можно переходить и возвращать информацию о конечном файле, каталоге и т. Д. См. &lt;code&gt;&lt;a href=&quot;#read_link_info-2&quot;&gt;ssh_sftp::read_link_info/2&lt;/a&gt;&lt;/code&gt; о том, как вместо этого получить информацию о ссылках.</target>
        </trans-unit>
        <trans-unit id="ccc799c653ce6450978e4f7f091a0e0d6ab495d4" translate="yes" xml:space="preserve">
          <source>Depending on the value of the &lt;code&gt;open/1&lt;/code&gt; options &lt;code&gt;head&lt;/code&gt; and &lt;code&gt;head_func&lt;/code&gt;, or set by function &lt;code&gt;change_header/2&lt;/code&gt;, the value of &lt;code&gt;Head&lt;/code&gt; is &lt;code&gt;none&lt;/code&gt; (default), &lt;code&gt;{head, H}&lt;/code&gt; (&lt;code&gt;head&lt;/code&gt; option), or &lt;code&gt;{M,F,A}&lt;/code&gt; (&lt;code&gt;head_func&lt;/code&gt; option).</source>
          <target state="translated">В зависимости от стоимости &lt;code&gt;open/1&lt;/code&gt; вариантов &lt;code&gt;head&lt;/code&gt; и &lt;code&gt;head_func&lt;/code&gt; или набор по функции &lt;code&gt;change_header/2&lt;/code&gt; , значение &lt;code&gt;Head&lt;/code&gt; пока &lt;code&gt;none&lt;/code&gt; ( по умолчанию), &lt;code&gt;{head, H}&lt;/code&gt; ( &lt;code&gt;head&lt;/code&gt; опция) или &lt;code&gt;{M,F,A}&lt;/code&gt; ( опция &lt;code&gt;head_func&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="28c197c51b5a2b60df55d2b8e85ac6377c6edcdf" translate="yes" xml:space="preserve">
          <source>Depending on use, issue appropriate memory barrier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bb075a29d7a66c030bf16e5aa81d3289b5d0649" translate="yes" xml:space="preserve">
          <source>Deprecated Functions. All deprecated exported functions and all used deprecated BIFs.</source>
          <target state="translated">Исключительные функции.Все устаревшие экспортированные функции и все используемые устаревшие BIF.</target>
        </trans-unit>
        <trans-unit id="a556f0c9e78725f0dc7ec5f5f6ccfab7c94fba9a" translate="yes" xml:space="preserve">
          <source>Deprecated Functions. All deprecated functions to be removed in next version or next major release.</source>
          <target state="translated">Исключительные функции.Все устаревшие функции будут удалены в следующей версии или следующем мажорном релизе.</target>
        </trans-unit>
        <trans-unit id="d7d871c4d8fedf1c0044ae045b46fd1f875d4207" translate="yes" xml:space="preserve">
          <source>Deprecated Functions. All deprecated functions to be removed in next version, next major release, or later.</source>
          <target state="translated">Исключительные функции.Все устаревшие функции будут удалены в следующей версии,следующем мажорном выпуске или более поздней версии.</target>
        </trans-unit>
        <trans-unit id="f45d730453472e45c49f2d3ea99fe5527787aad8" translate="yes" xml:space="preserve">
          <source>Deprecated Functions. All deprecated functions to be removed in next version.</source>
          <target state="translated">Исключительные функции.Все устаревшие функции будут удалены в следующей версии.</target>
        </trans-unit>
        <trans-unit id="5da4152a4415189ae859a586a766eb23b8a72225" translate="yes" xml:space="preserve">
          <source>Deprecated Representations for BIT STRING</source>
          <target state="translated">Исключительное представительство для BIT STRING</target>
        </trans-unit>
        <trans-unit id="362d66bda77ba72de253405d1082913585d5d87f" translate="yes" xml:space="preserve">
          <source>Deprecated and replaced by &lt;code&gt;&lt;a href=&quot;gen_statem&quot;&gt;gen_statem&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">Устаревшие и заменен &lt;code&gt;&lt;a href=&quot;gen_statem&quot;&gt;gen_statem&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8dfe918164e8ddccb6f55f262eee83b0adbb2128" translate="yes" xml:space="preserve">
          <source>Deprecated and replaced by gen_statem</source>
          <target state="translated">Исключено и заменено на gen_statem</target>
        </trans-unit>
        <trans-unit id="2d09e5160c09486ccb7f3219abc0b47f86c4eaad" translate="yes" xml:space="preserve">
          <source>Deprecated functionality will be documented as deprecated, and compiler warnings will be issued, when appropriate, as early as possible. That is, the new preferred functionality will appear at the same time as the deprecation is issued. A new deprecation will at least be announced in a release note and the documentation.</source>
          <target state="translated">Утраченная функциональность будет документироваться как устаревшая,а предупреждения компилятора будут выдаваться при необходимости как можно раньше.То есть,новая предпочитаемая функциональность будет появляться одновременно с выдачей deprecated.Новое устаревание,по крайней мере,будет объявлено в примечании к выпуску и документации.</target>
        </trans-unit>
        <trans-unit id="5501a25bd160cca4c73c256fc484e054f744501e" translate="yes" xml:space="preserve">
          <source>Deprecated functions which for the time being are kept for backwards compatibility. Invokes &lt;code&gt;et:trace_me/4&lt;/code&gt; and &lt;code&gt;et:trace_me/5&lt;/code&gt; respectively.</source>
          <target state="translated">Устаревшие функции, которые на данный момент сохранены для обратной совместимости. Вызывает &lt;code&gt;et:trace_me/4&lt;/code&gt; и &lt;code&gt;et:trace_me/5&lt;/code&gt; соответственно.</target>
        </trans-unit>
        <trans-unit id="965c6319eb78a51b51236820480c381b647f09bb" translate="yes" xml:space="preserve">
          <source>Deprecated in OTP 21, use &lt;code&gt;&lt;a href=&quot;#cipher_suites-2&quot;&gt;cipher_suites/2&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">Не рекомендуется в OTP 21, используйте вместо него &lt;code&gt;&lt;a href=&quot;#cipher_suites-2&quot;&gt;cipher_suites/2&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="25f06dfe2aac9021d2c4c0bc121eaf600a0aee3b" translate="yes" xml:space="preserve">
          <source>Deprecated in OTP 21, use &lt;code&gt;&lt;a href=&quot;#handshake-1&quot;&gt;handshake/[1,2]&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">Не рекомендуется в OTP 21, используйте вместо этого &lt;code&gt;&lt;a href=&quot;#handshake-1&quot;&gt;handshake/[1,2]&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8b63d6692da10960246b76d0c20aee73217670bc" translate="yes" xml:space="preserve">
          <source>Deprecated in OTP 21, use &lt;code&gt;&lt;a href=&quot;#handshake-3&quot;&gt;handshake/[2,3]&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">Не рекомендуется в OTP 21, используйте вместо этого &lt;code&gt;&lt;a href=&quot;#handshake-3&quot;&gt;handshake/[2,3]&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5a7061dbbf40f9e3bde38b8239ae3785a056588f" translate="yes" xml:space="preserve">
          <source>Deprecated since OTP-17, has no affect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5abdc016e3ae09e4ee089a39076e52bb4e75f1b8" translate="yes" xml:space="preserve">
          <source>Deprecated symbolic representations kept for backwards-compatibility.</source>
          <target state="translated">Исключительные символьные представления сохраняются для обратной совместимости.</target>
        </trans-unit>
        <trans-unit id="e933a4c105525e5dfc66dc5b016c7a5b06ca6392" translate="yes" xml:space="preserve">
          <source>Dequeue &lt;code&gt;count&lt;/code&gt; bytes from the I/O queue. If &lt;code&gt;size&lt;/code&gt; is not &lt;code&gt;NULL&lt;/code&gt;, the new size of the queue is placed there.</source>
          <target state="translated">Удалите &lt;code&gt;count&lt;/code&gt; байтов из очереди ввода-вывода. Если &lt;code&gt;size&lt;/code&gt; не равен &lt;code&gt;NULL&lt;/code&gt; , туда помещается новый размер очереди.</target>
        </trans-unit>
        <trans-unit id="8547a26aec952c41fbd7b425889713b88c8b7d6f" translate="yes" xml:space="preserve">
          <source>Dequeues data by moving the head pointer forward in the driver queue by &lt;code&gt;size&lt;/code&gt; bytes. The data in the queue is deallocated.</source>
          <target state="translated">Удаляет данные из очереди, перемещая указатель заголовка вперед в очереди драйвера на &lt;code&gt;size&lt;/code&gt; байтах. Данные в очереди освобождены.</target>
        </trans-unit>
        <trans-unit id="b853231d0010f08413d6054783b30b188c434c4a" translate="yes" xml:space="preserve">
          <source>Derefrence aliases only in finding the base.</source>
          <target state="translated">Псевдонимы Дерефренса только при поиске базы.</target>
        </trans-unit>
        <trans-unit id="5c2b102c8b83b66f415c2f7f1cf6b0396528bb0f" translate="yes" xml:space="preserve">
          <source>Derefrence aliases only when searching.</source>
          <target state="translated">Псевдонимы Дерефренса только при поиске.</target>
        </trans-unit>
        <trans-unit id="755b53dcef95fd29638c16d7fa9871ffe3d7b5e1" translate="yes" xml:space="preserve">
          <source>Derived AVP Data Formats</source>
          <target state="translated">Производные форматы данных AVP</target>
        </trans-unit>
        <trans-unit id="d6478c428f7d07b93ad21693c15abb2cd2e82f3b" translate="yes" xml:space="preserve">
          <source>Descend recursively down all the directories in &lt;code&gt;DirList&lt;/code&gt; and create a &lt;code&gt;TAGS&lt;/code&gt; file based on all files found.</source>
          <target state="translated">Рекурсивно спуститесь вниз по всем каталогам в &lt;code&gt;DirList&lt;/code&gt; и создайте файл &lt;code&gt;TAGS&lt;/code&gt; на основе всех найденных файлов.</target>
        </trans-unit>
        <trans-unit id="4cc3d8cf36128f6171cdd77d236ce5ede8a12c4f" translate="yes" xml:space="preserve">
          <source>Descend recursively down the directory &lt;code&gt;Dir&lt;/code&gt; and create a &lt;code&gt;TAGS&lt;/code&gt; file based on all files found.</source>
          <target state="translated">Рекурсивно спуститесь вниз по каталогу &lt;code&gt;Dir&lt;/code&gt; и создайте файл &lt;code&gt;TAGS&lt;/code&gt; на основе всех найденных файлов.</target>
        </trans-unit>
        <trans-unit id="891725ab5273cf87959338e5bc21f141aba5aa78" translate="yes" xml:space="preserve">
          <source>Describes a NIF by its name, arity, and implementation.</source>
          <target state="translated">Описывает NIF по его имени,знатности и реализации.</target>
        </trans-unit>
        <trans-unit id="55f8ebc805e65b5b71ddafdae390e3be2bcd69af" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Description</target>
        </trans-unit>
        <trans-unit id="499f6cd092c8652ffec52836471379de11dd40d4" translate="yes" xml:space="preserve">
          <source>Description of &lt;code&gt;UtilDesc = {Cpus, Busy, NonBusy, Misc}&lt;/code&gt;:</source>
          <target state="translated">Описание &lt;code&gt;UtilDesc = {Cpus, Busy, NonBusy, Misc}&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="412f84d6c51e529e7f68c4a06240d52b125fd201" translate="yes" xml:space="preserve">
          <source>Description of the Document Set</source>
          <target state="translated">Описание набора документов</target>
        </trans-unit>
        <trans-unit id="d59825af02793e907b66e437b654eff9f3807b1e" translate="yes" xml:space="preserve">
          <source>Description of the host that owns the &lt;code&gt;PublicHostKey&lt;/code&gt;.</source>
          <target state="translated">Описание хоста, которому принадлежит &lt;code&gt;PublicHostKey&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="292c41cb165afd021dffaa514987a15d6445b9ee" translate="yes" xml:space="preserve">
          <source>Description of the host with one or more IP addresses or hostnames.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87643cd5a8d832b71e24272865a5a2ded4e2c63e" translate="yes" xml:space="preserve">
          <source>Description of the host.</source>
          <target state="translated">Описание хозяина.</target>
        </trans-unit>
        <trans-unit id="04f0f87cdf30f41863595935bdd7b915c84a0c3d" translate="yes" xml:space="preserve">
          <source>Deseret</source>
          <target state="translated">Deseret</target>
        </trans-unit>
        <trans-unit id="83c759c4a62a19e65caab6e8de56c9cb7053ee02" translate="yes" xml:space="preserve">
          <source>Desired SFTP protocol version. The actual version is the minimum of the desired version and the maximum supported versions by the SFTP server.</source>
          <target state="translated">Желаемая версия протокола SFTP.Фактическая версия-это минимум желаемой версии и максимум поддерживаемых SFTP-сервером версий.</target>
        </trans-unit>
        <trans-unit id="652ab8315d7abab90d9e337481a24abc1229eff3" translate="yes" xml:space="preserve">
          <source>Despite its name, the &lt;code&gt;write_concurrency&lt;/code&gt; optimization does not improve &lt;code&gt;put&lt;/code&gt;. A call to &lt;code&gt;put&lt;/code&gt; is a relatively heavy operation compared to the very lightweight and scalable &lt;code&gt;&lt;a href=&quot;#add-3&quot;&gt;add&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#sub-3&quot;&gt; sub&lt;/a&gt;&lt;/code&gt;. The cost for a &lt;code&gt;put&lt;/code&gt; with &lt;code&gt;write_concurrency&lt;/code&gt; is like a &lt;code&gt;&lt;a href=&quot;#get-2&quot;&gt;get &lt;/a&gt;&lt;/code&gt; plus a &lt;code&gt;put&lt;/code&gt; without &lt;code&gt;write_concurrency&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="019fcd14827e4a50079afc44c4fe1765763ca455" translate="yes" xml:space="preserve">
          <source>Dest :: term(),</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b52d2e5001c6beab510f1e417136efb8ee6c86c6" translate="yes" xml:space="preserve">
          <source>DestMod :: module(),</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d01e9be8767f7e2e6949f04a35d1a79f0e103c92" translate="yes" xml:space="preserve">
          <source>Destination to use when replying through, for example, the &lt;code&gt;&lt;a href=&quot;#type-action&quot;&gt;action()&lt;/a&gt;&lt;/code&gt;&lt;code&gt;{reply,From,Reply}&lt;/code&gt; to a process that has called the &lt;code&gt;gen_statem&lt;/code&gt; server using &lt;code&gt;&lt;a href=&quot;#call-2&quot;&gt;call/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Назначение для использования при ответе через, например, &lt;code&gt;&lt;a href=&quot;#type-action&quot;&gt;action()&lt;/a&gt;&lt;/code&gt; &lt;code&gt;{reply,From,Reply}&lt;/code&gt; процессу, который вызвал сервер &lt;code&gt;gen_statem&lt;/code&gt; с помощью &lt;code&gt;&lt;a href=&quot;#call-2&quot;&gt;call/2&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8ddcb395a27a31d4dfd5b2bb0dc66b34ad576576" translate="yes" xml:space="preserve">
          <source>Destination-Host AVP</source>
          <target state="translated">AVP-адрес назначения-хозяина</target>
        </trans-unit>
        <trans-unit id="b299ccf590d9a47c91911a41b7d51c688221f560" translate="yes" xml:space="preserve">
          <source>Destination-Realm AVP</source>
          <target state="translated">Назначение-аудитория AVP</target>
        </trans-unit>
        <trans-unit id="fc2125ded371f86e9696529d4db25dedd6c7c623" translate="yes" xml:space="preserve">
          <source>Destroy the I/O queue and free all of it's contents</source>
          <target state="translated">Уничтожьте очередь ввода/вывода и освободите все ее содержимое.</target>
        </trans-unit>
        <trans-unit id="686336652b0b8485839d71165534446f3f08ddd2" translate="yes" xml:space="preserve">
          <source>Destroys a condition variable previously created by &lt;code&gt;&lt;a href=&quot;#erl_drv_cond_create&quot;&gt; erl_drv_cond_create&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b90c654815fb3f69b2082f0f64d7d604be536d4" translate="yes" xml:space="preserve">
          <source>Destroys a condition variable previously created by &lt;code&gt;&lt;a href=&quot;#erl_drv_cond_create&quot;&gt;erl_drv_cond_create&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Уничтожает условную переменную, ранее созданную &lt;code&gt;&lt;a href=&quot;#erl_drv_cond_create&quot;&gt;erl_drv_cond_create&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4fded6dd473e9af526f374078b9cb9f47a5c41b7" translate="yes" xml:space="preserve">
          <source>Destroys a map iterator created by &lt;code&gt;&lt;a href=&quot;#enif_map_iterator_create&quot;&gt; enif_map_iterator_create&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9ccd649edff0e0054033a6999d53c7cb699f818" translate="yes" xml:space="preserve">
          <source>Destroys a map iterator created by &lt;code&gt;&lt;a href=&quot;#enif_map_iterator_create&quot;&gt;enif_map_iterator_create&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Уничтожает итератор карты, созданный &lt;code&gt;&lt;a href=&quot;#enif_map_iterator_create&quot;&gt;enif_map_iterator_create&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bdf95201e16b693cf6f94bf4481ff5340ba5d6a7" translate="yes" xml:space="preserve">
          <source>Destroys a mutex previously created by &lt;code&gt;&lt;a href=&quot;#erl_drv_mutex_create&quot;&gt; erl_drv_mutex_create&lt;/a&gt;&lt;/code&gt;. The mutex must be in an unlocked state before it is destroyed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edc5f8f0098d5350b10b0be3993f3fb15f2a5f4d" translate="yes" xml:space="preserve">
          <source>Destroys a mutex previously created by &lt;code&gt;&lt;a href=&quot;#erl_drv_mutex_create&quot;&gt;erl_drv_mutex_create&lt;/a&gt;&lt;/code&gt;. The mutex must be in an unlocked state before it is destroyed.</source>
          <target state="translated">Уничтожает мьютекс, ранее созданный &lt;code&gt;&lt;a href=&quot;#erl_drv_mutex_create&quot;&gt;erl_drv_mutex_create&lt;/a&gt;&lt;/code&gt; . Перед уничтожением мьютекс должен находиться в разблокированном состоянии.</target>
        </trans-unit>
        <trans-unit id="bc40d70420852faca2590402be5acb9907ef63f2" translate="yes" xml:space="preserve">
          <source>Destroys a thread-specific data key previously created by &lt;code&gt;&lt;a href=&quot;#erl_drv_tsd_key_create&quot;&gt; erl_drv_tsd_key_create&lt;/a&gt;&lt;/code&gt;. All thread-specific data using this key in all threads must be cleared (see &lt;code&gt;&lt;a href=&quot;#erl_drv_tsd_set&quot;&gt; erl_drv_tsd_set&lt;/a&gt;&lt;/code&gt;) before the call to &lt;code&gt;erl_drv_tsd_key_destroy&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d44a717d9aab8a55fea66c1028c0d144717bb04" translate="yes" xml:space="preserve">
          <source>Destroys a thread-specific data key previously created by &lt;code&gt;&lt;a href=&quot;#erl_drv_tsd_key_create&quot;&gt;erl_drv_tsd_key_create&lt;/a&gt;&lt;/code&gt;. All thread-specific data using this key in all threads must be cleared (see &lt;code&gt;&lt;a href=&quot;#erl_drv_tsd_set&quot;&gt;erl_drv_tsd_set&lt;/a&gt;&lt;/code&gt;) before the call to &lt;code&gt;erl_drv_tsd_key_destroy&lt;/code&gt;.</source>
          <target state="translated">Уничтожает зависящий от потока ключ данных, ранее созданный &lt;code&gt;&lt;a href=&quot;#erl_drv_tsd_key_create&quot;&gt;erl_drv_tsd_key_create&lt;/a&gt;&lt;/code&gt; . Все данные токарно-специфические , используя этот ключ во всех потоках должны быть очищены (см &lt;code&gt;&lt;a href=&quot;#erl_drv_tsd_set&quot;&gt;erl_drv_tsd_set&lt;/a&gt;&lt;/code&gt; ) перед вызовом &lt;code&gt;erl_drv_tsd_key_destroy&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e658c382534c856d431058beb111c01082645188" translate="yes" xml:space="preserve">
          <source>Destroys an rwlock previously created by &lt;code&gt;&lt;a href=&quot;#erl_drv_rwlock_create&quot;&gt; erl_drv_rwlock_create&lt;/a&gt;&lt;/code&gt;. The rwlock must be in an unlocked state before it is destroyed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21b3af691689dac990e8e2ccddd4e24df729f48e" translate="yes" xml:space="preserve">
          <source>Destroys an rwlock previously created by &lt;code&gt;&lt;a href=&quot;#erl_drv_rwlock_create&quot;&gt;erl_drv_rwlock_create&lt;/a&gt;&lt;/code&gt;. The rwlock must be in an unlocked state before it is destroyed.</source>
          <target state="translated">Уничтожает rwlock, ранее созданный &lt;code&gt;&lt;a href=&quot;#erl_drv_rwlock_create&quot;&gt;erl_drv_rwlock_create&lt;/a&gt;&lt;/code&gt; . Rwlock должен находиться в разблокированном состоянии, прежде чем он будет уничтожен.</target>
        </trans-unit>
        <trans-unit id="a4e23cf2d48d29757ae624f3a6516ed15e25c39f" translate="yes" xml:space="preserve">
          <source>Destroys thread options previously created by &lt;code&gt;&lt;a href=&quot;#erl_drv_thread_opts_create&quot;&gt; erl_drv_thread_opts_create&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f60f49d47af6ed0c00205d050757b397270ed04" translate="yes" xml:space="preserve">
          <source>Destroys thread options previously created by &lt;code&gt;&lt;a href=&quot;#erl_drv_thread_opts_create&quot;&gt;erl_drv_thread_opts_create&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Уничтожает параметры потока, ранее созданные &lt;code&gt;&lt;a href=&quot;#erl_drv_thread_opts_create&quot;&gt;erl_drv_thread_opts_create&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="db7dbdd40f8bae0fb5f7afe2f1bddf7982c90e55" translate="yes" xml:space="preserve">
          <source>Details of these features are described in the following sections.</source>
          <target state="translated">Подробная информация об этих особенностях описана в следующих разделах.</target>
        </trans-unit>
        <trans-unit id="3e7cdda7f4aca965020ab0e29b81d2360a041c83" translate="yes" xml:space="preserve">
          <source>Determine Order of Events</source>
          <target state="translated">Определить порядок событий</target>
        </trans-unit>
        <trans-unit id="6ad97781dba7865aa1783063debcdb2d537a0ac1" translate="yes" xml:space="preserve">
          <source>Determine Order of Events with Time of the Event</source>
          <target state="translated">Определение порядка событий со временем события</target>
        </trans-unit>
        <trans-unit id="aa1c5cb64107d746ebde75e0958a8f3a6e27958e" translate="yes" xml:space="preserve">
          <source>Determine the order of events by saving a time stamp with &lt;code&gt;erlang:now/0&lt;/code&gt; when the event occurs.</source>
          <target state="translated">Определить порядок событий, сохранив отметку времени с &lt;code&gt;erlang:now/0&lt;/code&gt; , когда происходит событие.</target>
        </trans-unit>
        <trans-unit id="24c4a586b3011bab7b0f4e3856359ff4e771deb5" translate="yes" xml:space="preserve">
          <source>Determine the order of events by saving a tuple containing &lt;code&gt;&lt;a href=&quot;erlang#monotonic_time-0&quot;&gt;monotonic time&lt;/a&gt;&lt;/code&gt; and a &lt;code&gt;&lt;a href=&quot;erlang#unique_integer-1&quot;&gt;strictly monotonically increasing integer&lt;/a&gt;&lt;/code&gt; as follows:</source>
          <target state="translated">Определите порядок событий, сохранив кортеж, содержащий &lt;code&gt;&lt;a href=&quot;erlang#monotonic_time-0&quot;&gt;monotonic time&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;erlang#unique_integer-1&quot;&gt;strictly monotonically increasing integer&lt;/a&gt;&lt;/code&gt; как показано ниже:</target>
        </trans-unit>
        <trans-unit id="caceed1b4e4a0639759a625df6beeb4bac2b9f9c" translate="yes" xml:space="preserve">
          <source>Determine the order of events by saving the integer returned by &lt;code&gt;&lt;a href=&quot;erlang#unique_integer-1&quot;&gt; erlang:unique_integer([monotonic])&lt;/a&gt;&lt;/code&gt; when the event occurs. These integers are strictly monotonically ordered on current runtime system instance corresponding to creation time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ae8da9095099ca068859dc483a63073a1a878ab" translate="yes" xml:space="preserve">
          <source>Determine the order of events by saving the integer returned by &lt;code&gt;&lt;a href=&quot;erlang#unique_integer-1&quot;&gt;erlang:unique_integer([monotonic])&lt;/a&gt;&lt;/code&gt; when the event occurs. These integers are strictly monotonically ordered on current runtime system instance corresponding to creation time.</source>
          <target state="translated">Определите порядок событий, сохранив целое число, возвращаемое &lt;code&gt;&lt;a href=&quot;erlang#unique_integer-1&quot;&gt;erlang:unique_integer([monotonic])&lt;/a&gt;&lt;/code&gt; когда событие происходит. Эти целые числа строго монотонно упорядочены в текущем экземпляре системы времени выполнения в соответствии со временем создания.</target>
        </trans-unit>
        <trans-unit id="fdebe34699b9ee4d99aed0852756308878b8bc53" translate="yes" xml:space="preserve">
          <source>Determine the type of currently executing thread. A positive value indicates a scheduler thread while a negative value or zero indicates another type of thread. Currently the following specific types exist (which may be extended in the future):</source>
          <target state="translated">Определите тип выполняющегося в данный момент потока.Положительное значение указывает на поток планировщика,а отрицательное или нулевое-на другой тип потока.В настоящее время существуют следующие специфические типы (которые могут быть расширены в будущем):</target>
        </trans-unit>
        <trans-unit id="adde7c24299e69435a0426b9738108140c225ee8" translate="yes" xml:space="preserve">
          <source>Determine where the top directory of your OTP installation is. To find this, start Erlang and enter the following command at the Eshell prompt:</source>
          <target state="translated">Определите,где находится верхний каталог вашей установки OTP.Чтобы найти это,запустите Erlang и введите следующую команду в интерпретаторе Eshell:</target>
        </trans-unit>
        <trans-unit id="cac67eecea540c0d8b80ffd58fa1854184fabfdc" translate="yes" xml:space="preserve">
          <source>Determines association parameters for the association(s) specified by &lt;code&gt;assoc_id&lt;/code&gt;.</source>
          <target state="translated">Определяет параметры ассоциации для ассоциаций, указанных в &lt;code&gt;assoc_id&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="077579a209e2327105a616031f529dd3c6552c1e" translate="yes" xml:space="preserve">
          <source>Determines if garbage collection is allowed when performing the operation. If &lt;code&gt;{allow_gc, false}&lt;/code&gt; is passed, and a garbage collection is needed to determine the result of the operation, the operation is aborted (see information on &lt;code&gt;CheckResult&lt;/code&gt; below). The default is to allow garbage collection, that is, &lt;code&gt;{allow_gc, true}&lt;/code&gt;.</source>
          <target state="translated">Определяет, разрешена ли сборка мусора при выполнении операции. Если &lt;code&gt;{allow_gc, false}&lt;/code&gt; и требуется сборка мусора для определения результата операции, операция прерывается (см. Информацию о &lt;code&gt;CheckResult&lt;/code&gt; ниже). По умолчанию сборка мусора разрешена, то есть &lt;code&gt;{allow_gc, true}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="53ce682c952fe8edaea9c1423565e6576408341f" translate="yes" xml:space="preserve">
          <source>Determines if the FTP communication is to be verbose or not.</source>
          <target state="translated">Определяет,должна ли FTP-связь быть многословной или нет.</target>
        </trans-unit>
        <trans-unit id="494dbc80105974dbc6fb49506b454d2e0d793029" translate="yes" xml:space="preserve">
          <source>Determines retransmission time-out parameters, in milliseconds, for the association(s) specified by &lt;code&gt;assoc_id&lt;/code&gt;.</source>
          <target state="translated">Определяет параметры тайм-аута повторной передачи в миллисекундах для ассоциаций, указанных в &lt;code&gt;assoc_id&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c58d40a211958b5e215990f2db8b6a14f80c8fc1" translate="yes" xml:space="preserve">
          <source>Determines the behaviour of the &lt;code&gt;&lt;a href=&quot;#get_system_memory_data-0&quot;&gt;get_system_memory_data()&lt;/a&gt;&lt;/code&gt; function. When this configuration parameter is &lt;code&gt;false&lt;/code&gt;, &lt;code&gt;get_system_memory_data()&lt;/code&gt; behaves as it has done up until the point of the introduction of the configuration parameter. When set to &lt;code&gt;true&lt;/code&gt; new tagged tuples are allowed in the result. Such new tuples may be introduced at any time without prior notice. The classification of &lt;code&gt;cached_memory&lt;/code&gt; on Linux systems will also change so that more memory is classified as &lt;code&gt;cached_memory&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="083ff9a731e189edd69feae97ddfd7141e0e3a9e" translate="yes" xml:space="preserve">
          <source>Determines the buffer space that would be needed by &lt;code&gt;t&lt;/code&gt; if it were encoded into Erlang external format by &lt;code&gt;erl_encode()&lt;/code&gt;.</source>
          <target state="translated">Определяет буферное пространство, которое потребовалось бы &lt;code&gt;t&lt;/code&gt; , если бы оно было закодировано во внешний формат Erlang с помощью &lt;code&gt;erl_encode()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="77798bfac995896462ccc3ef147a4e0ae7afccf2" translate="yes" xml:space="preserve">
          <source>Determines the default parameters that this socket tries to negotiate with its peer while establishing an association with it. Is to be set after &lt;code&gt;&lt;a href=&quot;#open-1&quot;&gt;open/*&lt;/a&gt;&lt;/code&gt; but before the first &lt;code&gt;&lt;a href=&quot;#connect-4&quot;&gt;connect/*&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;#sctp_initmsg{}&lt;/code&gt; can also be used as ancillary data with the first call of &lt;code&gt;&lt;a href=&quot;#send-3&quot;&gt;send/*&lt;/a&gt;&lt;/code&gt; to a new peer (when a new association is created).</source>
          <target state="translated">Определяет параметры по умолчанию, которые этот сокет пытается согласовать со своим одноранговым узлом, устанавливая с ним связь. Устанавливается после &lt;code&gt;&lt;a href=&quot;#open-1&quot;&gt;open/*&lt;/a&gt;&lt;/code&gt; , но перед первым &lt;code&gt;&lt;a href=&quot;#connect-4&quot;&gt;connect/*&lt;/a&gt;&lt;/code&gt; . &lt;code&gt;#sctp_initmsg{}&lt;/code&gt; также можно использовать в качестве вспомогательных данных при первом вызове &lt;code&gt;&lt;a href=&quot;#send-3&quot;&gt;send/*&lt;/a&gt;&lt;/code&gt; новому партнеру (при создании новой ассоциации).</target>
        </trans-unit>
        <trans-unit id="55a2f53f97f755fd2dbcd1b670c65f1dc001d09f" translate="yes" xml:space="preserve">
          <source>Determines the length of a proper list.</source>
          <target state="translated">Определяет длину соответствующего списка.</target>
        </trans-unit>
        <trans-unit id="e2a8218334957019102a6de9a1ec80fa4cca7917" translate="yes" xml:space="preserve">
          <source>Determines the maximum chunk size if message fragmentation is used. If &lt;code&gt;0&lt;/code&gt;, the chunk size is limited by the Path MTU only.</source>
          <target state="translated">Определяет максимальный размер блока, если используется фрагментация сообщения. Если &lt;code&gt;0&lt;/code&gt; , размер блока ограничен только значением Path MTU.</target>
        </trans-unit>
        <trans-unit id="7a2c66961d77ac3d187d28893d33c58111b6ef76" translate="yes" xml:space="preserve">
          <source>Determines the time, in seconds, after which an idle association is automatically closed. &lt;code&gt;0&lt;/code&gt; means that the association is never automatically closed.</source>
          <target state="translated">Определяет время в секундах, по истечении которого неактивная ассоциация автоматически закрывается. &lt;code&gt;0&lt;/code&gt; означает, что ассоциация никогда не закрывается автоматически.</target>
        </trans-unit>
        <trans-unit id="515405b131cb1928594e2abd951d111519cdd02e" translate="yes" xml:space="preserve">
          <source>Determines the time-out, in seconds, for flushing unsent data in the &lt;code&gt;close/1&lt;/code&gt; socket call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfea908ad3f80022ee7a6824d7720b3ffbfb7ffe" translate="yes" xml:space="preserve">
          <source>Determines the time-out, in seconds, for flushing unsent data in the &lt;code&gt;close/1&lt;/code&gt; socket call. If the first component of the value tuple is &lt;code&gt;false&lt;/code&gt;, the second is ignored. This means that &lt;code&gt;close/1&lt;/code&gt; returns immediately, not waiting for data to be flushed. Otherwise, the second component is the flushing time-out, in seconds.</source>
          <target state="translated">Определяет тайм-аут в секундах для сброса неотправленных данных при вызове сокета &lt;code&gt;close/1&lt;/code&gt; . Если первый компонент кортежа значений является &lt;code&gt;false&lt;/code&gt; , второй игнорируется. Это означает, что &lt;code&gt;close/1&lt;/code&gt; возвращается немедленно, не дожидаясь сброса данных. В противном случае второй компонент - это тайм-аут промывки в секундах.</target>
        </trans-unit>
        <trans-unit id="731b42a8df83c81b419568ef3bb86ac028eef737" translate="yes" xml:space="preserve">
          <source>Determines the type of data returned from &lt;code&gt;&lt;a href=&quot;#recv-1&quot;&gt;recv/1,2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Определяет тип данных, возвращаемых из &lt;code&gt;&lt;a href=&quot;#recv-1&quot;&gt;recv/1,2&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="66920f12401db8094f5300be52c85662ab8939e0" translate="yes" xml:space="preserve">
          <source>Determines the type of the given term. The term must be an ordinary Erlang term and not one of the special terms returned by &lt;code&gt;&lt;a href=&quot;#enif_raise_exception&quot;&gt; enif_raise_exception&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#enif_schedule_nif&quot;&gt; enif_schedule_nif&lt;/a&gt;&lt;/code&gt;, or similar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df0c701d33903386824172bab733ce9700d585ae" translate="yes" xml:space="preserve">
          <source>Determines various per-address parameters for the association specified by &lt;code&gt;assoc_id&lt;/code&gt; and the peer address &lt;code&gt;address&lt;/code&gt; (the SCTP protocol supports multi-homing, so more than one address can correspond to a specified association).</source>
          <target state="translated">Определяет различные параметры за адреса для объединения указанного &lt;code&gt;assoc_id&lt;/code&gt; и равноправного адреса &lt;code&gt;address&lt;/code&gt; (опоры протокола SCTP , мульти-ГСН, так что больше , чем один адрес может соответствовать указанной ассоциации).</target>
        </trans-unit>
        <trans-unit id="ff32eb1db11aaa5dba28236c5193d1eda53b59af" translate="yes" xml:space="preserve">
          <source>Determines whether the compiler generates a &lt;code&gt;beam&lt;/code&gt; file with the given options. &lt;code&gt;true&lt;/code&gt; means that a &lt;code&gt;beam&lt;/code&gt; file is generated. &lt;code&gt;false&lt;/code&gt; means that the compiler generates some listing file, returns a binary, or merely checks the syntax of the source code.</source>
          <target state="translated">Определяет, создает ли компилятор файл &lt;code&gt;beam&lt;/code&gt; с заданными параметрами. &lt;code&gt;true&lt;/code&gt; означает, что создается файл &lt;code&gt;beam&lt;/code&gt; . &lt;code&gt;false&lt;/code&gt; означает, что компилятор генерирует какой-то файл листинга, возвращает двоичный файл или просто проверяет синтаксис исходного кода.</target>
        </trans-unit>
        <trans-unit id="0fde766270c08bb2c143bb1ffbdcba5107b28312" translate="yes" xml:space="preserve">
          <source>Determines whether the parser generator should give full information about resolved and unresolved parse action conflicts (&lt;code&gt;true&lt;/code&gt;), or only about those conflicts that prevent a parser from being generated from the input grammar (&lt;code&gt;false&lt;/code&gt;, the default).</source>
          <target state="translated">Определяет, должен ли генератор синтаксического анализатора предоставлять полную информацию о разрешенных и неразрешенных конфликтах действий синтаксического анализа ( &lt;code&gt;true&lt;/code&gt; ) или только о тех конфликтах, которые препятствуют созданию синтаксического анализатора из входной грамматики ( &lt;code&gt;false&lt;/code&gt; , по умолчанию).</target>
        </trans-unit>
        <trans-unit id="f5765dc87a449f2a174d7f995a9dba949217fc42" translate="yes" xml:space="preserve">
          <source>Determines which module to call for accessing the file server. The default value is &lt;code&gt;ssh_sftpd_file&lt;/code&gt;, which uses the &lt;code&gt;file&lt;/code&gt; and &lt;code&gt;filelib&lt;/code&gt; APIs to access the standard OTP file server. This option can be used to plug in other file servers.</source>
          <target state="translated">Определяет, какой модуль вызывать для доступа к файловому серверу. Значение по умолчанию - &lt;code&gt;ssh_sftpd_file&lt;/code&gt; , который использует API-интерфейсы &lt;code&gt;file&lt;/code&gt; и &lt;code&gt;filelib&lt;/code&gt; для доступа к стандартному файловому серверу OTP. Этот параметр можно использовать для подключения других файловых серверов.</target>
        </trans-unit>
        <trans-unit id="194e22e942d1687afcd0c6b99914e56add4b87df" translate="yes" xml:space="preserve">
          <source>Determining what data to keep after a communication failure is outside the scope of &lt;code&gt;Mnesia&lt;/code&gt;. One approach is to determine which &quot;island&quot; contains most of the nodes. Using option &lt;code&gt;{majority,true}&lt;/code&gt; for critical tables can be a way to ensure that nodes that are not part of a &quot;majority island&quot; cannot update those tables. Notice that this constitutes a reduction in service on the minority nodes. This would be a tradeoff in favor of higher consistency guarantees.</source>
          <target state="translated">Определение того, какие данные хранить после сбоя связи, выходит за рамки &lt;code&gt;Mnesia&lt;/code&gt; . Один из подходов - определить, какой &amp;laquo;остров&amp;raquo; содержит больше всего узлов. Использование опции &lt;code&gt;{majority,true}&lt;/code&gt; для критических таблиц может быть способом гарантировать, что узлы, которые не являются частью &amp;laquo;острова большинства&amp;raquo;, не смогут обновить эти таблицы. Обратите внимание, что это означает сокращение обслуживания на меньших узлах. Это был бы компромисс в пользу более высоких гарантий согласованности.</target>
        </trans-unit>
        <trans-unit id="08783d6c0e8f974bda4d0f0259a9bced7702d406" translate="yes" xml:space="preserve">
          <source>Dets organizes data as a linear hash list and the hash list grows gracefully as more data is inserted into the table. Space management on the file is performed by what is called a buddy system. The current implementation keeps the entire buddy system in RAM, which implies that if the table gets heavily fragmented, quite some memory can be used up. The only way to defragment a table is to close it and then open it again with option &lt;code&gt;repair&lt;/code&gt; set to &lt;code&gt;force&lt;/code&gt;.</source>
          <target state="translated">Dets организует данные в виде линейного хеш-списка, и этот хеш-список плавно увеличивается по мере добавления данных в таблицу. Управление пространством в файле выполняется так называемой системой друзей. Текущая реализация хранит всю систему друзей в ОЗУ, что означает, что если таблица сильно фрагментируется, может быть израсходована значительная часть памяти. Единственный способ дефрагментировать таблицу, чтобы закрыть его , а затем открыть его снова с опцией &lt;code&gt;repair&lt;/code&gt; набора для &lt;code&gt;force&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d589e63f8dc652ae3141561171bed423eef70c79" translate="yes" xml:space="preserve">
          <source>Dets tables must be opened before they can be updated or read, and when finished they must be properly closed. If a table is not properly closed, Dets automatically repairs the table. This can take a substantial time if the table is large. A Dets table is closed when the process which opened the table terminates. If many Erlang processes (users) open the same Dets table, they share the table. The table is properly closed when all users have either terminated or closed the table. Dets tables are not properly closed if the Erlang runtime system terminates abnormally.</source>
          <target state="translated">Перед обновлением или прочтением таблиц Dets необходимо открыть их,а по их окончании должным образом закрыть.Если стол закрыт неправильно,то Dets автоматически восстанавливает стол.Это может занять значительное время,если стол большой.Таблица детсов закрывается,когда завершается процесс,в результате которого был открыт стол.Если многие процессы (пользователи)Erlang открывают одну и ту же таблицу Dets,то они совместно используют эту таблицу.Таблица правильно закрывается,когда все пользователи либо закончили работу,либо закрыли таблицу.Dets-таблицы закрываются некорректно,если система исполнения Erlang прекращает работу аномально.</target>
        </trans-unit>
        <trans-unit id="c3376a9770679682419b8a2b1d090a087ba2468b" translate="yes" xml:space="preserve">
          <source>Devanagari</source>
          <target state="translated">Devanagari</target>
        </trans-unit>
        <trans-unit id="456219399c5e2e2d6869a33bf75f63ddc05cd05c" translate="yes" xml:space="preserve">
          <source>Developers must always invoke the &lt;code&gt;debug_info/4&lt;/code&gt; function and never rely on the &lt;code&gt;Data&lt;/code&gt; stored in the &lt;code&gt;debug_info&lt;/code&gt; chunk, as it is opaque and may change at any moment. &lt;code&gt;no_debug_info&lt;/code&gt; means that chunk &lt;code&gt;&quot;Dbgi&quot;&lt;/code&gt; is present, but empty.</source>
          <target state="translated">Разработчики должны всегда вызывать &lt;code&gt;debug_info/4&lt;/code&gt; и никогда не полагаться на &lt;code&gt;Data&lt;/code&gt; хранящиеся в &lt;code&gt;debug_info&lt;/code&gt; , поскольку они непрозрачны и могут измениться в любой момент. &lt;code&gt;no_debug_info&lt;/code&gt; означает, что чанк &lt;code&gt;&quot;Dbgi&quot;&lt;/code&gt; присутствует, но пуст.</target>
        </trans-unit>
        <trans-unit id="16446bdea2b981010fbb150f3aca921d223adb77" translate="yes" xml:space="preserve">
          <source>Developers should rely on stacktrace entries only for debugging purposes.</source>
          <target state="translated">Разработчикам следует полагаться только на записи стековой дорожки в целях отладки.</target>
        </trans-unit>
        <trans-unit id="5c2648f2b3ce72e567281814263f70dc09c18843" translate="yes" xml:space="preserve">
          <source>Deviations from the standard</source>
          <target state="translated">Отклонения от стандарта</target>
        </trans-unit>
        <trans-unit id="cb81d10268def1ddcd9e7ea7d13651d61cbb6e0a" translate="yes" xml:space="preserve">
          <source>Device-Watchdog-Answer</source>
          <target state="translated">Device-Watchdog-Answer</target>
        </trans-unit>
        <trans-unit id="ded250e2e75f5d9108516c8323ac1f5e2d1f881d" translate="yes" xml:space="preserve">
          <source>Device-Watchdog-Request</source>
          <target state="translated">Device-Watchdog-Request</target>
        </trans-unit>
        <trans-unit id="64f91465847372ce990aad877a06eb2ed199d44b" translate="yes" xml:space="preserve">
          <source>Dialyzer GUI version.</source>
          <target state="translated">Версия графического интерфейса диализатора.</target>
        </trans-unit>
        <trans-unit id="4147ae5f76685fdd79ca81b8faa42c7d8a8edcc8" translate="yes" xml:space="preserve">
          <source>Dialyzer can also be used directly from Erlang. See &lt;code&gt;&lt;a href=&quot;dialyzer&quot;&gt;dialyzer(3)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Dialyzer также можно использовать прямо из Erlang. См. &lt;code&gt;&lt;a href=&quot;dialyzer&quot;&gt;dialyzer(3)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="628db5ea350d60eef0f983d37cdceaf38ea7f18b" translate="yes" xml:space="preserve">
          <source>Dialyzer can be called from the command line, from Erlang, and from a GUI.</source>
          <target state="translated">Диализатор можно вызвать из командной строки,из Erlang и из GUI.</target>
        </trans-unit>
        <trans-unit id="2e7d2d8ec7f1493ae5e9513f0acbf5fb6b111813" translate="yes" xml:space="preserve">
          <source>Dialyzer can be used directly from Erlang. Both the GUI and the command-line versions are also available. The options are similar to the ones given from the command line, see section &lt;code&gt;&lt;a href=&quot;#command_line&quot;&gt; Using Dialyzer from the Command Line&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d35fb792c27e96d88efcff82ddb3bdb62e1411a" translate="yes" xml:space="preserve">
          <source>Dialyzer can be used directly from Erlang. Both the GUI and the command-line versions are also available. The options are similar to the ones given from the command line, see section &lt;code&gt;&lt;a href=&quot;#command_line&quot;&gt;Using Dialyzer from the Command Line&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Диализатор можно использовать прямо из Erlang. Также доступны версии с графическим интерфейсом и командной строкой. Параметры аналогичны тем, которые задаются в командной строке, см. Раздел &lt;code&gt;&lt;a href=&quot;#command_line&quot;&gt;Using Dialyzer from the Command Line&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d8021a0b92f30253eca0f240a4f65bb36bd5a3b5" translate="yes" xml:space="preserve">
          <source>Dialyzer command-line version.</source>
          <target state="translated">Командная версия диализатора.</target>
        </trans-unit>
        <trans-unit id="efa6b71916bdfbf21fa4dff08a93a9d1ac41b102" translate="yes" xml:space="preserve">
          <source>Dialyzer has a command-line version for automated use. See &lt;code&gt;&lt;a href=&quot;dialyzer&quot;&gt;dialyzer(3)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Dialyzer имеет версию командной строки для автоматического использования. См. &lt;code&gt;&lt;a href=&quot;dialyzer&quot;&gt;dialyzer(3)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="da84b06d671a1c03ee7934e17676e95918b41dab" translate="yes" xml:space="preserve">
          <source>Dialyzer has a command-line version for automated use. This section provides a brief description of the options. The same information can be obtained by writing the following in a shell:</source>
          <target state="translated">Dialyzer имеет версию командной строки для автоматического использования.В данном разделе представлено краткое описание опций.Эту же информацию можно получить,написав в оболочке следующее:</target>
        </trans-unit>
        <trans-unit id="21cb03f781be29c029b6c322b9928599481570de" translate="yes" xml:space="preserve">
          <source>Dialyzer has two analysis modes: &quot;Byte Code&quot; and &quot;Source Code&quot;. They are controlled by the buttons in the top-middle part of the main window, under &lt;strong&gt;Analysis Options&lt;/strong&gt;.</source>
          <target state="translated">Dialyzer имеет два режима анализа: &amp;laquo;Байт-код&amp;raquo; и &amp;laquo;Исходный код&amp;raquo;. Они управляются кнопками в верхней средней части главного окна в разделе &amp;laquo; &lt;strong&gt;Параметры анализа&amp;raquo;&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="7a5351192a936d150a3e55c047000d982954a92b" translate="yes" xml:space="preserve">
          <source>Dialyzer is a static analysis tool that identifies software discrepancies, such as definite type errors, code that has become dead or unreachable because of programming error, and unnecessary tests, in single Erlang modules or entire (sets of) applications.</source>
          <target state="translated">Dialyzer-инструмент статического анализа,который идентифицирует несоответствия программного обеспечения,такие как ошибки определенного типа,код,который стал недоступен или мертв из-за ошибки программирования,и ненужные тесты,в отдельных модулях Erlang или в целых (комплектах)приложениях.</target>
        </trans-unit>
        <trans-unit id="4856ad4cc2225ddaaa94171f074e8b6f1592a9b9" translate="yes" xml:space="preserve">
          <source>Dialyzer looks if there is an environment variable called &lt;code&gt;DIALYZER_PLT&lt;/code&gt; and places the PLT at this location. If no such variable is set, Dialyzer places the PLT at &lt;code&gt;$HOME/.dialyzer_plt&lt;/code&gt;. The placement can also be specified using the options &lt;code&gt;--plt&lt;/code&gt; or &lt;code&gt;--output_plt&lt;/code&gt;.</source>
          <target state="translated">Dialyzer проверяет наличие переменной среды с именем &lt;code&gt;DIALYZER_PLT&lt;/code&gt; и помещает PLT в это место. Если такая переменная не установлена, Dialyzer помещает PLT в &lt;code&gt;$HOME/.dialyzer_plt&lt;/code&gt; . Размещение также можно указать с помощью параметров &lt;code&gt;--plt&lt;/code&gt; или &lt;code&gt;--output_plt&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a144d9aa62d8283331e0453d170211eae479447c" translate="yes" xml:space="preserve">
          <source>Dialyzer starts its analysis from either debug-compiled BEAM bytecode or from Erlang source code. The file and line number of a discrepancy is reported along with an indication of what the discrepancy is about. Dialyzer bases its analysis on the concept of success typings, which allows for sound warnings (no false positives).</source>
          <target state="translated">Dialyzer начинает свой анализ либо с отладочного байткода BEAM,либо с исходных текстов Erlang.Сообщается номер файла и строки расхождения,а также указание на то,о чем это расхождение.Диализатор основывает свой анализ на концепции наборов успешных типов,что позволяет получать звуковые предупреждения (без ложных срабатываний).</target>
        </trans-unit>
        <trans-unit id="10608feb501f52bd03b6ddf98a4210f55bd5af23" translate="yes" xml:space="preserve">
          <source>Dialyzer stores the information of the analyzed functions in a Persistent Lookup Table (PLT), see section &lt;code&gt;&lt;a href=&quot;#plt&quot;&gt;The Persistent Lookup Table&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Dialyzer сохраняет информацию об анализируемых функциях в постоянной таблице поиска (PLT), см. Раздел &lt;code&gt;&lt;a href=&quot;#plt&quot;&gt;The Persistent Lookup Table&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="494e2325bcc3322adec1ce4f072ada1bb99b4f8d" translate="yes" xml:space="preserve">
          <source>Dialyzer stores the result of an analysis in a Persistent Lookup Table (PLT). The PLT can then be used as a starting point for later analyses. It is recommended to build a PLT with the Erlang/OTP applications that you are using, but also to include your own applications that you are using frequently.</source>
          <target state="translated">Диализатор хранит результат анализа в таблице постоянного поиска (Persistent Lookup Table,PLT).Затем PLT можно использовать в качестве отправной точки для последующих анализов.Рекомендуется строить PLT с приложениями Erlang/OTP,которые вы используете,а также включать собственные приложения,которые вы часто используете.</target>
        </trans-unit>
        <trans-unit id="838da0bec6523e8f2f3da58812e9f1ef6f9a9fc7" translate="yes" xml:space="preserve">
          <source>Dialyzer then reanalyzes the changed files and the files that depend on these files. Notice that this consistency check is performed automatically the next time you run Dialyzer with this PLT. Option &lt;code&gt;--check_plt&lt;/code&gt; is only for doing so without doing any other analysis.</source>
          <target state="translated">Затем Dialyzer повторно анализирует измененные файлы и файлы, которые зависят от этих файлов. Обратите внимание, что эта проверка согласованности выполняется автоматически при следующем запуске Dialyzer с этим PLT. Опция &lt;code&gt;--check_plt&lt;/code&gt; предназначена только для этого без выполнения какого-либо другого анализа.</target>
        </trans-unit>
        <trans-unit id="510a8a06e0d737b5aa0df793bf420e94ca04a8ea" translate="yes" xml:space="preserve">
          <source>Dialyzer, a DIscrepancy AnaLYZer for ERlang programs.</source>
          <target state="translated">Dialyzer,DIscrepancy AnaLYZer для программ ERlang.</target>
        </trans-unit>
        <trans-unit id="07d09b590e7c65396fb0af8b4e685bc5f08fc46f" translate="yes" xml:space="preserve">
          <source>Diameter AVPs</source>
          <target state="translated">Диаметр AVPs</target>
        </trans-unit>
        <trans-unit id="595221e9670fe2806542b1909df3759ecc51c609" translate="yes" xml:space="preserve">
          <source>Diameter Answer Processing</source>
          <target state="translated">Диаметр Обработка ответов</target>
        </trans-unit>
        <trans-unit id="492ddd4795919309b00e3cb99b03e084593644b2" translate="yes" xml:space="preserve">
          <source>Diameter Application Compliance</source>
          <target state="translated">Соответствие диаметра применения</target>
        </trans-unit>
        <trans-unit id="233b44598089548f0cb439d8260d802c42d8d926" translate="yes" xml:space="preserve">
          <source>Diameter Base Protocol AVPs</source>
          <target state="translated">Базовый протокол диаметра AVPs</target>
        </trans-unit>
        <trans-unit id="95745ee3caa29c97347231fc7062812cc1cabc48" translate="yes" xml:space="preserve">
          <source>Diameter Command Naming Conventions</source>
          <target state="translated">Конвенции по наименованию команд по диаметру</target>
        </trans-unit>
        <trans-unit id="f8e96b9bc84f819f28cac97e61334c92e49b6d2c" translate="yes" xml:space="preserve">
          <source>Diameter Header</source>
          <target state="translated">Диаметр заголовка</target>
        </trans-unit>
        <trans-unit id="fb85483589f2a0d213806104d451a8bbb89a7a0f" translate="yes" xml:space="preserve">
          <source>Diameter Message Processing</source>
          <target state="translated">Обработка сообщений о диаметре</target>
        </trans-unit>
        <trans-unit id="cf7b0cf80edb413895d382c150dbc8ff733c12d1" translate="yes" xml:space="preserve">
          <source>Diameter Path Authorization</source>
          <target state="translated">Авторизация пути диаметра</target>
        </trans-unit>
        <trans-unit id="07688cd69d8a46c450445f8b85d3d9fe42582147" translate="yes" xml:space="preserve">
          <source>Diameter Peer Discovery</source>
          <target state="translated">Диаметр равный обнаружению</target>
        </trans-unit>
        <trans-unit id="de4ce74cc36fc385d21c9d15a70dc2b2131b85a5" translate="yes" xml:space="preserve">
          <source>Diameter Peers</source>
          <target state="translated">Диаметр Равные</target>
        </trans-unit>
        <trans-unit id="305ef1f7771347650724f9757c11f8edfa0beab3" translate="yes" xml:space="preserve">
          <source>Diameter Protocol</source>
          <target state="translated">Протокол диаметра</target>
        </trans-unit>
        <trans-unit id="2877c6abfd87eef90c657292849be45de67435cd" translate="yes" xml:space="preserve">
          <source>Diameter Protocol-Related Configurable Parameters</source>
          <target state="translated">Настраиваемые параметры с привязкой к протоколу диаметра</target>
        </trans-unit>
        <trans-unit id="41c8a11b72baca5ae179f4f1fcd33229819687ce" translate="yes" xml:space="preserve">
          <source>Diameter Request Routing Overview</source>
          <target state="translated">Обзор маршрутов запроса диаметра</target>
        </trans-unit>
        <trans-unit id="32dcfb391752d0e475c6c43a642bd9b52b1747e5" translate="yes" xml:space="preserve">
          <source>Diameter User Sessions</source>
          <target state="translated">Диаметр сеансов пользователя</target>
        </trans-unit>
        <trans-unit id="803d3673bba0aa163b1bd90094ca9f273861f900" translate="yes" xml:space="preserve">
          <source>Diameter applications to which the transport should be restricted. Defaults to all applications configured on the service in question. Applications not configured on the service in question are ignored.</source>
          <target state="translated">Диаметр,на который должна быть ограничена транспортировка.По умолчанию все прикладные программы,сконфигурированные на данной службе.Приложения,не сконфигурированные на данной службе,игнорируются.</target>
        </trans-unit>
        <trans-unit id="a6fa8fdf84e2a98961b3740684166200004f3961" translate="yes" xml:space="preserve">
          <source>Diameter dictionary compilation.</source>
          <target state="translated">Составление словаря диаметров.</target>
        </trans-unit>
        <trans-unit id="2addd157d30e019e6a4e7e180d209a97e4c55ca4" translate="yes" xml:space="preserve">
          <source>Diameter transport interface.</source>
          <target state="translated">Диаметр транспортного интерфейса.</target>
        </trans-unit>
        <trans-unit id="43b3cac5780593e4e3d7bc6239e48a349da15068" translate="yes" xml:space="preserve">
          <source>Diameter transport over SCTP.</source>
          <target state="translated">Транспортировка по диаметру через SCTP.</target>
        </trans-unit>
        <trans-unit id="acdb14fc245c23daf5748b9e75a3fe1897608e0b" translate="yes" xml:space="preserve">
          <source>Diameter transport over TCP.</source>
          <target state="translated">Диаметр транспортировки по ППГ.</target>
        </trans-unit>
        <trans-unit id="7b58dbac06038c0f0528d8a4e1d07f33a1316add" translate="yes" xml:space="preserve">
          <source>Dictionary as returned by &lt;code&gt;&lt;a href=&quot;#new-0&quot;&gt;new/0&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Словарь, возвращенный функцией &lt;code&gt;&lt;a href=&quot;#new-0&quot;&gt;new/0&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="87d89e495b6fa6aeacaa5f11b3b341c160db5603" translate="yes" xml:space="preserve">
          <source>Dictionary interface of the diameter application.</source>
          <target state="translated">Словарный интерфейс приложения диаметра.</target>
        </trans-unit>
        <trans-unit id="8e8972c07f023589103328ced29174f0a45e8b6f" translate="yes" xml:space="preserve">
          <source>Dictionary module generation also results in a hrl file that defines records for the messages and Grouped AVPs defined by the dictionary, these records being what a user of the diameter application sends and receives, modulo other possible formats as discussed in &lt;code&gt;diameter_app(3)&lt;/code&gt;. These records and the underlying Erlang data types corresponding to Diameter data formats are discussed in &lt;code&gt;&lt;a href=&quot;#MESSAGE_RECORDS&quot;&gt;MESSAGE RECORDS&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#DATA_TYPES&quot;&gt;DATA TYPES&lt;/a&gt;&lt;/code&gt; respectively. The generated hrl also contains macro definitions for the possible values of AVPs of type Enumerated.</source>
          <target state="translated">Генерация модуля словаря также приводит к созданию файла hrl, который определяет записи для сообщений и сгруппированных AVP, определенных словарем, причем эти записи представляют собой то, что пользователь приложения Diameter отправляет и принимает по модулю других возможных форматов, как описано в &lt;code&gt;diameter_app(3)&lt;/code&gt; . Эти записи и соответствующие типы данных Erlang, соответствующие форматам данных Diameter, обсуждаются в &lt;code&gt;&lt;a href=&quot;#MESSAGE_RECORDS&quot;&gt;MESSAGE RECORDS&lt;/a&gt;&lt;/code&gt; и &amp;laquo; &lt;code&gt;&lt;a href=&quot;#DATA_TYPES&quot;&gt;DATA TYPES&lt;/a&gt;&lt;/code&gt; соответственно. Сгенерированный hrl также содержит макроопределения для возможных значений AVP типа Enumerated.</target>
        </trans-unit>
        <trans-unit id="2239e5358e76aa29c75a70053325a0133f68eb6a" translate="yes" xml:space="preserve">
          <source>Different Information Transfers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f28cb22fc88809e7a4c9bd4d34ed7db7571189a7" translate="yes" xml:space="preserve">
          <source>Different applications using this library may have very different requirements. One application could be running on a high performance server, while another is running on a small device with very limited cpu capacity. For example, the first one may accept many users simultaneously logged in, while the second one wants to limit them to only one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6883ae1d8644737fc04ee8e419ba151be5af18e0" translate="yes" xml:space="preserve">
          <source>Different databases may also support creating of procedures that contains more than one SQL query. For example, the following SQLServer-specific statement creates a procedure that returns a result set containing information about employees that work at the department and a result set listing the customers of that department.</source>
          <target state="translated">Различные базы данных также могут поддерживать создание процедур,содержащих более одного SQL-запроса.Например,следующий SQLServer-специфический запрос создает процедуру,которая возвращает результирующий набор,содержащий информацию о сотрудниках,работающих в отделе,и результирующий набор со списком клиентов этого отдела.</target>
        </trans-unit>
        <trans-unit id="5612af3537f6d424dafb548b8d0f2861de1fab1e" translate="yes" xml:space="preserve">
          <source>Different definitions exist for the week of the year. This module contains a week of the year implementation conforming to the ISO 8601 standard. As the week number for a specified date can fall on the previous, the current, or on the next year, it is important to specify both the year and the week number. Functions &lt;code&gt;iso_week_number/0&lt;/code&gt; and &lt;code&gt;iso_week_number/1&lt;/code&gt; return a tuple of the year and the week number.</source>
          <target state="translated">Существуют разные определения недели в году. Этот модуль содержит неделю реализации в году в соответствии со стандартом ISO 8601. Поскольку номер недели для указанной даты может приходиться на предыдущий, текущий или следующий год, важно указать и год, и номер недели. Функции &lt;code&gt;iso_week_number/0&lt;/code&gt; и &lt;code&gt;iso_week_number/1&lt;/code&gt; возвращают кортеж года и номер недели.</target>
        </trans-unit>
        <trans-unit id="ce0e98d45f7debe7b95b821f0db8cec8b4e61285" translate="yes" xml:space="preserve">
          <source>Different hardware architectures have different memory models. Some architectures allows very aggressive reordering of memory accesses while other architectures only reorder a few specific cases. Common to all modern hardware is, however, that some type of reordering will occur. When using locks to protect all memory accesses made from multiple threads such reorderings will not be visible. The locking primitives will ensure that the memory accesses will be ordered. When using lock free algorithms one do however have to take this reordering made by the hardware into account.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a780becc239b49b491b75f64fbceae7f3572be1d" translate="yes" xml:space="preserve">
          <source>Different operating systems and tools support different encodings. For example, Linux and MacOS X have chosen the UTF-8 encoding, which is backward compatible with 7-bit ASCII and therefore affects programs written in plain English the least. Windows supports a limited version of UTF-16, namely all the code planes where the characters can be stored in one single 16-bit entity, which includes most living languages.</source>
          <target state="translated">Различные операционные системы и инструменты поддерживают различные кодировки.Например,Linux и MacOS X выбрали кодировку UTF-8,которая обратно совместима с 7-битным ASCII и поэтому меньше всего влияет на программы,написанные на простом английском языке.Windows поддерживает ограниченную версию UTF-16,а именно все кодовые плоскости,где символы могут храниться в одной единственной 16-битной сущности,включающей большинство живых языков.</target>
        </trans-unit>
        <trans-unit id="2e33264a68973aa9eaf05e50aaef661eca484cb2" translate="yes" xml:space="preserve">
          <source>Different parts of the system will be handled differently regarding compatibility. The following items describe how different parts of the system are handled.</source>
          <target state="translated">Различные части системы будут обрабатываться по-разному с точки зрения совместимости.Следующие пункты описывают,как различные части системы обрабатываются.</target>
        </trans-unit>
        <trans-unit id="0cabc30640c262e4e1ee03e71abfde75a1286e90" translate="yes" xml:space="preserve">
          <source>Different runtime system instances will use different unspecified points in time as base for their Erlang monotonic clocks. That is, it is &lt;strong&gt;pointless&lt;/strong&gt; comparing monotonic times from different runtime system instances. Different runtime system instances can also place this unspecified point in time different relative runtime system start. It can be placed in the future (time at start is a negative value), the past (time at start is a positive value), or the runtime system start (time at start is zero). The monotonic time at runtime system start can be retrieved by calling &lt;code&gt;&lt;a href=&quot;#system_info_start_time&quot;&gt; erlang:system_info(start_time)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aed32969a09a784815b2c2d1e9d839fe9acde992" translate="yes" xml:space="preserve">
          <source>Different runtime system instances will use different unspecified points in time as base for their Erlang monotonic clocks. That is, it is &lt;strong&gt;pointless&lt;/strong&gt; comparing monotonic times from different runtime system instances. Different runtime system instances can also place this unspecified point in time different relative runtime system start. It can be placed in the future (time at start is a negative value), the past (time at start is a positive value), or the runtime system start (time at start is zero). The monotonic time at runtime system start can be retrieved by calling &lt;code&gt;&lt;a href=&quot;#system_info_start_time&quot;&gt;erlang:system_info(start_time)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Различные экземпляры системы времени выполнения будут использовать разные неуказанные моменты времени в качестве основы для своих монотонных часов Erlang. То есть &lt;strong&gt;бессмысленно&lt;/strong&gt; сравнивать монотонное время для разных экземпляров системы времени выполнения. Различные экземпляры системы времени выполнения также могут помещать этот неопределенный момент времени в другой относительный запуск системы времени выполнения. Он может быть помещен в будущее (время при запуске - отрицательное значение), прошлое (время при запуске - положительное значение) или запуск системы времени выполнения (время при запуске равно нулю). Монотонное время при запуске системы времени выполнения можно получить, вызвав &lt;code&gt;&lt;a href=&quot;#system_info_start_time&quot;&gt;erlang:system_info(start_time)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3b3df3df2ca9d872263d17d4c6946b215d1cf6da" translate="yes" xml:space="preserve">
          <source>Different transaction managers employ different strategies to satisfy the isolation property. &lt;code&gt;Mnesia&lt;/code&gt; uses the standard technique of two phase locking. That is, locks are set on records before they are read or written. &lt;code&gt;Mnesia&lt;/code&gt; uses the following lock types:</source>
          <target state="translated">Разные менеджеры транзакций используют разные стратегии для удовлетворения свойства изоляции. &lt;code&gt;Mnesia&lt;/code&gt; использует стандартную технику двухфазной синхронизации. То есть блокировки устанавливаются на записи до того, как они будут прочитаны или записаны. &lt;code&gt;Mnesia&lt;/code&gt; использует следующие типы замков:</target>
        </trans-unit>
        <trans-unit id="5f30aa1d84a5056694b8a279afb906ca8147af45" translate="yes" xml:space="preserve">
          <source>Diffie-Hellman</source>
          <target state="translated">Diffie-Hellman</target>
        </trans-unit>
        <trans-unit id="1799dfd79ce2607c8a41d935527b9f4ab8fcdd66" translate="yes" xml:space="preserve">
          <source>Diffie-Hellman Keys and parameters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="335eaacb0e06e9f01d986f626e623ea878a4ed44" translate="yes" xml:space="preserve">
          <source>Diffie-Hellman computations are available with OpenSSL versions compatible with Erlang CRYPTO if not disabled by configuration. To dynamically check availability, check that the atom &lt;code&gt;dh&lt;/code&gt; is present in the list returned by &lt;code&gt;&lt;a href=&quot;crypto#supports-1&quot;&gt;crypto:supports(public_keys)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cef6fbd636e82ab4f62121042f17cc0a73b0b502" translate="yes" xml:space="preserve">
          <source>DigestType ::</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="132c55c7377232a793fc2764c202db07a983c1ab" translate="yes" xml:space="preserve">
          <source>Digests and hash</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc94430bcd2bf3633999f075c4aa5f4c6e00a26c" translate="yes" xml:space="preserve">
          <source>Digital signatures &lt;code&gt;&lt;a href=&quot;http://csrc.nist.gov/publications/drafts/fips186-3/fips_186-3.pdf&quot;&gt;Digital Signature Standard (DSS)&lt;/a&gt;&lt;/code&gt; and&lt;code&gt;&lt;a href=&quot;http://csrc.nist.gov/groups/STM/cavp/documents/dss2/ecdsa2vs.pdf&quot;&gt; Elliptic Curve Digital Signature Algorithm (ECDSA) &lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">Цифровые подписи &lt;code&gt;&lt;a href=&quot;http://csrc.nist.gov/publications/drafts/fips186-3/fips_186-3.pdf&quot;&gt;Digital Signature Standard (DSS)&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;http://csrc.nist.gov/groups/STM/cavp/documents/dss2/ecdsa2vs.pdf&quot;&gt; Elliptic Curve Digital Signature Algorithm (ECDSA) &lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f2d1527ad440c65c78936fafa709eaae0056a11c" translate="yes" xml:space="preserve">
          <source>Digraph &lt;code&gt;G&lt;/code&gt; is traversed in a breadth-first manner, and the first found path is returned.</source>
          <target state="translated">Digraph &lt;code&gt;G&lt;/code&gt; просматривается в ширину, и возвращается первый найденный путь.</target>
        </trans-unit>
        <trans-unit id="70e541d54d4571932b5458248248c88322d737b3" translate="yes" xml:space="preserve">
          <source>Digraph &lt;code&gt;G&lt;/code&gt; is traversed in a depth-first manner, and the first found path is returned.</source>
          <target state="translated">Digraph &lt;code&gt;G&lt;/code&gt; просматривается в глубину, и возвращается первый найденный путь.</target>
        </trans-unit>
        <trans-unit id="93dca2efcca5c19009fb242e9a74ae8b5859f1a9" translate="yes" xml:space="preserve">
          <source>Digraphs can be annotated with more information. Such information can be attached to the vertices and to the edges of the digraph. An annotated digraph is called a &lt;strong&gt;labeled digraph&lt;/strong&gt;, and the information attached to a vertex or an edge is called a &lt;strong id=&quot;label&quot;&gt;label&lt;/strong&gt;.</source>
          <target state="translated">Диграфы можно аннотировать с дополнительной информацией. Такую информацию можно прикрепить к вершинам и ребрам орграфа. Аннотированный орграф называется &lt;strong&gt;помеченным орграфом&lt;/strong&gt; , а информация, прикрепленная к вершине или ребру, называется &lt;strong id=&quot;label&quot;&gt;меткой&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="2bdb5f32ccbfb6d3d1a3147e65f438a4ec636024" translate="yes" xml:space="preserve">
          <source>Digraphs can be annotated with more information. Such information can be attached to the vertices and to the edges of the digraph. An annotated digraph is called a &lt;strong&gt;labeled digraph&lt;/strong&gt;, and the information attached to a vertex or an edge is called a &lt;strong id=&quot;label&quot;&gt;label&lt;/strong&gt;. Labels are Erlang terms.</source>
          <target state="translated">Диграфы можно аннотировать с дополнительной информацией. Такую информацию можно прикрепить к вершинам и ребрам орграфа. Аннотированный орграф называется &lt;strong&gt;помеченным орграфом&lt;/strong&gt; , а информация, прикрепленная к вершине или ребру, называется &lt;strong id=&quot;label&quot;&gt;меткой&lt;/strong&gt; . Ярлыки - это термины Erlang.</target>
        </trans-unit>
        <trans-unit id="8c283a0fe4d5df5390c92bd0efb703342217ba6b" translate="yes" xml:space="preserve">
          <source>Digraphs will not be garbage collected. The ETS tables used for a digraph will only be deleted when &lt;code&gt;&lt;a href=&quot;#delete-1&quot;&gt;delete/1&lt;/a&gt;&lt;/code&gt; is called or the process that created the digraph terminates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5e38d6b903ccda016759402d329e33a83548707" translate="yes" xml:space="preserve">
          <source>Dir :: &lt;code&gt;&lt;a href=&quot;#type-filename&quot;&gt;filename()&lt;/a&gt;&lt;/code&gt;,</source>
          <target state="translated">Dir :: &lt;code&gt;&lt;a href=&quot;#type-filename&quot;&gt;filename()&lt;/a&gt;&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="ad2c0ce42ca198c5519523a969e131463983adf5" translate="yes" xml:space="preserve">
          <source>Directed graphs.</source>
          <target state="translated">Направленные графики.</target>
        </trans-unit>
        <trans-unit id="243cff888dae22be4e6f01a534ee25469aa6a683" translate="yes" xml:space="preserve">
          <source>Directly by using module &lt;code&gt;seq_trace&lt;/code&gt;.</source>
          <target state="translated">Напрямую с помощью модуля &lt;code&gt;seq_trace&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c9ecc417c112f66b0e63b1f01eb83e8458007c11" translate="yes" xml:space="preserve">
          <source>Directories containing Erlang modules to be included in a code coverage test must exist in the code server path. Otherwise, the Cover tool fails to recompile the modules. It is not sufficient to specify these directories in the cover specification file for &lt;code&gt;Common Test&lt;/code&gt;.</source>
          <target state="translated">Каталоги, содержащие модули Erlang для включения в тест покрытия кода, должны существовать в пути сервера кода. В противном случае инструмент Cover не сможет перекомпилировать модули. Недостаточно указать эти каталоги в файле спецификации обложки для &lt;code&gt;Common Test&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5ab4b58d628fe3f03e24fefd9e79c9cd5305431f" translate="yes" xml:space="preserve">
          <source>Directories passed to &lt;code&gt;Common Test&lt;/code&gt; can have either relative or absolute paths.</source>
          <target state="translated">Каталоги, передаваемые в &lt;code&gt;Common Test&lt;/code&gt; , могут иметь относительные или абсолютные пути.</target>
        </trans-unit>
        <trans-unit id="1f6cb58a29cb92f80451b089ee8dcc6df2383846" translate="yes" xml:space="preserve">
          <source>Directory &lt;code&gt;Dir&lt;/code&gt; is to be added to the code path.</source>
          <target state="translated">Каталог &lt;code&gt;Dir&lt;/code&gt; должен быть добавлен к пути кода.</target>
        </trans-unit>
        <trans-unit id="37da76e6522f5231ccef0cde70e3579a65e938f9" translate="yes" xml:space="preserve">
          <source>Directory Listings</source>
          <target state="translated">Списки каталогов</target>
        </trans-unit>
        <trans-unit id="fd7d9fd644987840c54fd62d80a891889bfcc421" translate="yes" xml:space="preserve">
          <source>Directory Structure Guidelines for a Development Environment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef0d89c504070d30a057e3e2666364d93ceb17ea" translate="yes" xml:space="preserve">
          <source>Directory contents</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="406373555c5db06a112c39c5633ef075b4eb9b4c" translate="yes" xml:space="preserve">
          <source>Directory names not starting with &lt;code&gt;/&lt;/code&gt; are assumed to be relative the current working directory.</source>
          <target state="translated">Имена каталогов, не начинающиеся с &lt;code&gt;/&lt;/code&gt; , считаются относительными к текущему рабочему каталогу.</target>
        </trans-unit>
        <trans-unit id="69c1b321a3a3f10dbb43a3ed72a72c42e77de3a4" translate="yes" xml:space="preserve">
          <source>Directory names should not be capitalized.</source>
          <target state="translated">Имена каталогов не должны быть заглавными.</target>
        </trans-unit>
        <trans-unit id="a65c287fbc14b015d2a237c8c17c5222537b05bb" translate="yes" xml:space="preserve">
          <source>Directory names starting with &lt;code&gt;/&lt;/code&gt; are assumed to be absolute path names.</source>
          <target state="translated">Имена каталогов, начинающиеся с &lt;code&gt;/&lt;/code&gt; , считаются абсолютными путями.</target>
        </trans-unit>
        <trans-unit id="f87cbc37768d43bb57fe075ed3cecacb04c89d4c" translate="yes" xml:space="preserve">
          <source>Directory separators must always be written as &lt;code&gt;/&lt;/code&gt;, even on Windows.</source>
          <target state="translated">Разделители каталогов всегда должны быть записаны как &lt;code&gt;/&lt;/code&gt; , даже в Windows.</target>
        </trans-unit>
        <trans-unit id="caac219f13e886f255200fff4fa6a28d1f9a338f" translate="yes" xml:space="preserve">
          <source>Directory where the profile can save persistent data. If omitted, all cookies are treated as session cookies.</source>
          <target state="translated">Каталог,в котором профиль может сохранять постоянные данные.Если все куки-файлы пропущены,то они рассматриваются как сессионные куки-файлы.</target>
        </trans-unit>
        <trans-unit id="284afc0808fc43fcb8ad33e37b614c07e484dbef" translate="yes" xml:space="preserve">
          <source>Dirty IO schedulers will have scheduler identifiers in the range &lt;code&gt;&lt;a href=&quot;#system_info_schedulers&quot;&gt; erlang:system_info(schedulers)&lt;/a&gt;&lt;/code&gt;&lt;code&gt;+&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#system_info_dirty_cpu_schedulers&quot;&gt; erlang:system_info(dirty_cpu_schedulers)&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&amp;lt; SchedulerId =&amp;lt; erlang:system_info(schedulers) + erlang:system_info(dirty_cpu_schedulers) +&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#system_info_dirty_io_schedulers&quot;&gt; erlang:system_info(dirty_io_schedulers)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dde8a410b2cef8745dc367bbeecd37822cd25d7" translate="yes" xml:space="preserve">
          <source>Dirty IO schedulers will have scheduler identifiers in the range &lt;code&gt;&lt;a href=&quot;#system_info_schedulers&quot;&gt;erlang:system_info(schedulers)&lt;/a&gt;&lt;/code&gt;&lt;code&gt;+&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#system_info_dirty_cpu_schedulers&quot;&gt;erlang:system_info(dirty_cpu_schedulers)&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&amp;lt; SchedulerId =&amp;lt; erlang:system_info(schedulers) + erlang:system_info(dirty_cpu_schedulers) +&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#system_info_dirty_io_schedulers&quot;&gt;erlang:system_info(dirty_io_schedulers)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Грязные IO планировщики будут иметь идентификаторы планировщика в диапазоне &lt;code&gt;&lt;a href=&quot;#system_info_schedulers&quot;&gt;erlang:system_info(schedulers)&lt;/a&gt;&lt;/code&gt; &lt;code&gt;+&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#system_info_dirty_cpu_schedulers&quot;&gt;erlang:system_info(dirty_cpu_schedulers)&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&amp;lt; SchedulerId =&amp;lt; erlang:system_info(schedulers) + erlang:system_info(dirty_cpu_schedulers) +&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#system_info_dirty_io_schedulers&quot;&gt;erlang:system_info(dirty_io_schedulers)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="03c764c23e6f3e21522962d8392207a9aec42ffc" translate="yes" xml:space="preserve">
          <source>Dirty NIF support is available only when the emulator is configured with dirty scheduler support. As of ERTS version 9.0, dirty scheduler support is enabled by default on the runtime system with SMP support. The Erlang runtime without SMP support does &lt;strong&gt;not&lt;/strong&gt; support dirty schedulers even when the dirty scheduler support is explicitly enabled. To check at runtime for the presence of dirty scheduler threads, code can use the &lt;code&gt;&lt;a href=&quot;#enif_system_info&quot;&gt; enif_system_info()&lt;/a&gt;&lt;/code&gt; API function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f776c53728b9a78e34582415361299583c2f7ae1" translate="yes" xml:space="preserve">
          <source>Dirty NIF support is available only when the emulator is configured with dirty scheduler support. As of ERTS version 9.0, dirty scheduler support is enabled by default on the runtime system with SMP support. The Erlang runtime without SMP support does &lt;strong&gt;not&lt;/strong&gt; support dirty schedulers even when the dirty scheduler support is explicitly enabled. To check at runtime for the presence of dirty scheduler threads, code can use the &lt;code&gt;&lt;a href=&quot;#enif_system_info&quot;&gt;enif_system_info()&lt;/a&gt;&lt;/code&gt; API function.</source>
          <target state="translated">Поддержка грязного NIF доступна, только если эмулятор настроен с поддержкой грязного планировщика. Начиная с версии 9.0 ERTS, поддержка грязного планировщика включена по умолчанию в системе времени выполнения с поддержкой SMP. Среда выполнения Erlang без поддержки SMP &lt;strong&gt;не&lt;/strong&gt; поддерживает грязные планировщики, даже если поддержка грязного планировщика включена явно. Чтобы проверить во время выполнения на наличие грязных потоков планировщика, код может использовать &lt;code&gt;&lt;a href=&quot;#enif_system_info&quot;&gt;enif_system_info()&lt;/a&gt;&lt;/code&gt; API enif_system_info () .</target>
        </trans-unit>
        <trans-unit id="a963571ffbcc2363316cb4131267d7bb18e560a3" translate="yes" xml:space="preserve">
          <source>Dirty equivalent of the function &lt;code&gt;mnesia:all_keys/1&lt;/code&gt;.</source>
          <target state="translated">Грязный эквивалент функции &lt;code&gt;mnesia:all_keys/1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6730f17243320e93c4820bdb3347a524eb6f76be" translate="yes" xml:space="preserve">
          <source>Dirty equivalent of the function &lt;code&gt;mnesia:delete/3&lt;/code&gt;.</source>
          <target state="translated">Грязный эквивалент функции &lt;code&gt;mnesia:delete/3&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4803a712add1388359b074286a97c71ac03a18ec" translate="yes" xml:space="preserve">
          <source>Dirty equivalent of the function &lt;code&gt;mnesia:delete_object/3&lt;/code&gt;.</source>
          <target state="translated">Грязный эквивалент функции &lt;code&gt;mnesia:delete_object/3&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9819320bcc19465d5dbe72db932ce31e969e4f47" translate="yes" xml:space="preserve">
          <source>Dirty equivalent of the function &lt;code&gt;mnesia:index_match_object/4&lt;/code&gt;.</source>
          <target state="translated">Грязный эквивалент функции &lt;code&gt;mnesia:index_match_object/4&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ae95fb440f9f0e27b1eda44b2c952a05213b976d" translate="yes" xml:space="preserve">
          <source>Dirty equivalent of the function &lt;code&gt;mnesia:index_read/3&lt;/code&gt;.</source>
          <target state="translated">Грязный эквивалент функции &lt;code&gt;mnesia:index_read/3&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="064b2b60b7cec261b9641cfb6150d6b98fa5d361" translate="yes" xml:space="preserve">
          <source>Dirty equivalent of the function &lt;code&gt;mnesia:match_object/3&lt;/code&gt;.</source>
          <target state="translated">Грязный эквивалент функции &lt;code&gt;mnesia:match_object/3&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d027124011b6d5898913193904cb44d1bf7613d9" translate="yes" xml:space="preserve">
          <source>Dirty equivalent of the function &lt;code&gt;mnesia:read/3&lt;/code&gt;.</source>
          <target state="translated">Грязный эквивалент функции &lt;code&gt;mnesia:read/3&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8d5501c6a210dcc1de9608082f9d1e416032c68f" translate="yes" xml:space="preserve">
          <source>Dirty equivalent of the function &lt;code&gt;mnesia:select/2&lt;/code&gt;.</source>
          <target state="translated">Грязный эквивалент функции &lt;code&gt;mnesia:select/2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="18d67f692bf5bd1046b2d5956ee8e53a74a3f5c6" translate="yes" xml:space="preserve">
          <source>Dirty equivalent of the function &lt;code&gt;mnesia:write/3&lt;/code&gt;.</source>
          <target state="translated">Грязный эквивалент функции &lt;code&gt;mnesia:write/3&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="72b8a4c5a40ea145e7c00b5e635182a9120bdea4" translate="yes" xml:space="preserve">
          <source>Dirty operation are often useful, for example, in a datagram routing application where &lt;code&gt;Mnesia&lt;/code&gt; stores the routing table, and it is time consuming to start a whole transaction every time a packet is received. &lt;code&gt;Mnesia&lt;/code&gt; has therefore functions that manipulate tables without using transactions. This alternative to processing is known as a dirty operation. However, notice the trade-off in avoiding the overhead of transaction processing:</source>
          <target state="translated">Грязные операции часто полезны, например, в приложении маршрутизации дейтаграмм, где &lt;code&gt;Mnesia&lt;/code&gt; хранит таблицу маршрутизации, и запуск всей транзакции каждый раз при получении пакета занимает много времени. Таким образом, у &lt;code&gt;Mnesia&lt;/code&gt; есть функции, которые управляют таблицами без использования транзакций. Эта альтернатива обработке известна как грязная операция. Однако обратите внимание на компромисс во избежание накладных расходов на обработку транзакций:</target>
        </trans-unit>
        <trans-unit id="136014a72498b6b9b3b61aa360cdefc56a3dc1d1" translate="yes" xml:space="preserve">
          <source>Dirty operations</source>
          <target state="translated">Грязные работы</target>
        </trans-unit>
        <trans-unit id="c4275fbd897af2315c2118648b50df4435cebdd9" translate="yes" xml:space="preserve">
          <source>Dirty operations always contain only one update and thus no activity event is sent.</source>
          <target state="translated">Грязные операции всегда содержат только одно обновление,поэтому событие активности не отправляется.</target>
        </trans-unit>
        <trans-unit id="aa50ffb6abfb356d785f0330d2d417505b69d837" translate="yes" xml:space="preserve">
          <source>Dirty operations are written to disc if they are performed on a table of type &lt;code&gt;disc_copies&lt;/code&gt; or type &lt;code&gt;disc_only_copies&lt;/code&gt;. &lt;code&gt;Mnesia&lt;/code&gt; also ensures that all replicas of a table are updated if a dirty write operation is performed on a table.</source>
          <target state="translated">Грязные операции записываются на диск, если они выполняются с таблицей типа &lt;code&gt;disc_copies&lt;/code&gt; или типа &lt;code&gt;disc_only_copies&lt;/code&gt; . &lt;code&gt;Mnesia&lt;/code&gt; также гарантирует, что все реплики таблицы обновляются, если в таблице выполняется грязная операция записи.</target>
        </trans-unit>
        <trans-unit id="853438de86dac28cac55a35b9641e0bd67c6f648" translate="yes" xml:space="preserve">
          <source>DirtyCPUSchedulersOnline) -&amp;gt;</source>
          <target state="translated">DirtyCPUSchedulersOnline) -&amp;gt;</target>
        </trans-unit>
        <trans-unit id="46015467f190d633f418a569f23109bb67051807" translate="yes" xml:space="preserve">
          <source>Disable automatic gc of the mib server cache.</source>
          <target state="translated">Отключить автоматический gc кэш сервера mib.</target>
        </trans-unit>
        <trans-unit id="bbc557db02430ed632f545e4b3a20960ff5fe9b2" translate="yes" xml:space="preserve">
          <source>Disable one-time execution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76bd3c5c018e2a61d5610b964b32a5deefa1bba1" translate="yes" xml:space="preserve">
          <source>Disable the auto-compilation feature (similar to &lt;code&gt;ct_run -no_auto_compile&lt;/code&gt;).</source>
          <target state="translated">Отключите функцию автоматической компиляции (аналогично &lt;code&gt;ct_run -no_auto_compile&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="197dd9bc80386b0df3c823b696ec70695af97e98" translate="yes" xml:space="preserve">
          <source>Disable the mib server cache.</source>
          <target state="translated">Отключите кэш сервера Миб.</target>
        </trans-unit>
        <trans-unit id="73f00fae8033ed7aa00f57da49d8f4afc54218e6" translate="yes" xml:space="preserve">
          <source>Disables SAC delay</source>
          <target state="translated">Отключает задержку SAC</target>
        </trans-unit>
        <trans-unit id="5b110f63f186be3c7c93c8e0719d6c40201f32e3" translate="yes" xml:space="preserve">
          <source>Disables all allocators that can be disabled.</source>
          <target state="translated">Отключает все аллокаторы,которые можно отключить.</target>
        </trans-unit>
        <trans-unit id="b1603559997a45d4ab53133ad023c7c6fbd13e90" translate="yes" xml:space="preserve">
          <source>Disables all breakpoints.</source>
          <target state="translated">Отключает все точки останова.</target>
        </trans-unit>
        <trans-unit id="f0f1900b113d92659c235dfcb60389ba9de8dc08" translate="yes" xml:space="preserve">
          <source>Disables automatic Path MTU discovery</source>
          <target state="translated">Отключает автоматическое обнаружение пути MTU</target>
        </trans-unit>
        <trans-unit id="5ab25d2aff103bc762d22d0efc7b35138f46952e" translate="yes" xml:space="preserve">
          <source>Disables automatic escaping of special HTML characters. See the &lt;code&gt;&lt;a href=&quot;write_test_chapter#logging&quot;&gt;Logging chapter&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Отключает автоматическое экранирование специальных символов HTML. См. &lt;code&gt;&lt;a href=&quot;write_test_chapter#logging&quot;&gt;Logging chapter&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="63f7882a53b38e4243f12b5b79a4cd7893cd5b26" translate="yes" xml:space="preserve">
          <source>Disables busy port message queue functionality. For more information, see &lt;code&gt;&lt;a href=&quot;erl_driver#erl_drv_busy_msgq_limits&quot;&gt; erl_driver:erl_drv_busy_msgq_limits&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7593253a728d7cf78461e61c33450c17030aafde" translate="yes" xml:space="preserve">
          <source>Disables busy port message queue functionality. For more information, see &lt;code&gt;&lt;a href=&quot;erl_driver#erl_drv_busy_msgq_limits&quot;&gt;erl_driver:erl_drv_busy_msgq_limits&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Отключает функцию очереди сообщений занятого порта. Для получения дополнительной информации см. &lt;code&gt;&lt;a href=&quot;erl_driver#erl_drv_busy_msgq_limits&quot;&gt;erl_driver:erl_drv_busy_msgq_limits&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="70bb3a7d47ffdd3bc94f55af3bbfd79dcc5fd262" translate="yes" xml:space="preserve">
          <source>Disables features that cannot be enabled while creating an allocator configuration with &lt;code&gt; erts_alloc_config(3)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37be9cbf19e8c4d94f4cdadb90d4e87688cdbc77" translate="yes" xml:space="preserve">
          <source>Disables features that cannot be enabled while creating an allocator configuration with &lt;code&gt;erts_alloc_config(3)&lt;/code&gt;.</source>
          <target state="translated">Отключает функции, которые нельзя включить при создании конфигурации распределителя с помощью &lt;code&gt;erts_alloc_config(3)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a614d492ceaa156affdf5d4bdefafec5576bcceb" translate="yes" xml:space="preserve">
          <source>Disables heartbeat</source>
          <target state="translated">Отключает сердцебиение</target>
        </trans-unit>
        <trans-unit id="ef9f0619eb9caef8a34d63963c121785d1466e86" translate="yes" xml:space="preserve">
          <source>Disables optimization that can malfunction if &quot;Special start-of-pattern items&quot; are present in the regular expression. A typical example would be when matching &quot;DEFABC&quot; against &quot;(*COMMIT)ABC&quot;, where the start optimization of PCRE would skip the subject up to &quot;A&quot; and never realize that the (*COMMIT) instruction is to have made the matching fail. This option is only relevant if you use &quot;start-of-pattern items&quot;, as discussed in section &lt;code&gt;&lt;a href=&quot;#regexp_syntax_details&quot;&gt;PCRE Regular Expression Details&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Отключает оптимизацию, которая может дать сбой, если в регулярном выражении присутствуют &amp;laquo;Особые элементы начала шаблона&amp;raquo;. Типичным примером может служить сопоставление &amp;laquo;DEFABC&amp;raquo; с &amp;laquo;(* COMMIT) ABC&amp;raquo;, где при начальной оптимизации PCRE пропустить тему до &amp;laquo;A&amp;raquo; и никогда не понять, что инструкция (* COMMIT) должна выполнить сопоставление потерпеть поражение. Эта опция актуальна только в том случае, если вы используете &amp;laquo;элементы начала шаблона&amp;raquo;, как описано в разделе &lt;code&gt;&lt;a href=&quot;#regexp_syntax_details&quot;&gt;PCRE Regular Expression Details&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c404f858a3fcd9bae301bbd98fe536b9fe7a1a7c" translate="yes" xml:space="preserve">
          <source>Disables the &lt;code&gt;os_sup&lt;/code&gt; service. Needed on Solaris only.</source>
          <target state="translated">Отключает службу &lt;code&gt;os_sup&lt;/code&gt; . Требуется только для Solaris.</target>
        </trans-unit>
        <trans-unit id="d93c1136104c42e8c7c1536818cabe58700fba0c" translate="yes" xml:space="preserve">
          <source>Disables the automatic test suite compilation feature (described earlier).</source>
          <target state="translated">Отключает функцию автоматической компиляции набора тестов (описанную выше).</target>
        </trans-unit>
        <trans-unit id="91d420658fc46ab94b4ff3545d61fc2d3c8cde2c" translate="yes" xml:space="preserve">
          <source>Disables the default handler. This allows another application to add its own default handler.</source>
          <target state="translated">Отключает обработчик по умолчанию.Это позволяет другому приложению добавить свой обработчик по умолчанию.</target>
        </trans-unit>
        <trans-unit id="133d6494dcd6c46493ddf1685293a36623e293f5" translate="yes" xml:space="preserve">
          <source>Disables the sticky directory facility of the Erlang code server; see &lt;code&gt;code(3)&lt;/code&gt;.</source>
          <target state="translated">Отключает возможность закрепления каталогов на сервере кода Erlang; см. &lt;code&gt;code(3)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e8303ac8a6039acc7c220b67fab46629f1b907fc" translate="yes" xml:space="preserve">
          <source>Disables the use of numbered capturing parentheses in the pattern. Any opening parenthesis that is not followed by &lt;code&gt;?&lt;/code&gt; behaves as if it is followed by &lt;code&gt;?:&lt;/code&gt;. Named parentheses can still be used for capturing (and they acquire numbers in the usual way). There is no equivalent option in Perl.</source>
          <target state="translated">Отключает использование пронумерованных скобок захвата в шаблоне. Открывающая скобка, за которой не следует &lt;code&gt;?&lt;/code&gt; ведет себя так, как если бы за ним следует &lt;code&gt;?:&lt;/code&gt; . Именованные скобки по-прежнему можно использовать для захвата (и они получают числа обычным образом). В Perl нет эквивалентной опции.</target>
        </trans-unit>
        <trans-unit id="62c3939a2d0370b4df3b4f65b029525d3f10ac74" translate="yes" xml:space="preserve">
          <source>Disables time correction.</source>
          <target state="translated">Отключает временную коррекцию.</target>
        </trans-unit>
        <trans-unit id="f747dca83f7e533bc9f21ec112a00de20b04ac59" translate="yes" xml:space="preserve">
          <source>Disables tracing for all received messages. Any match specification is removed.</source>
          <target state="translated">Отключает отслеживание всех полученных сообщений.Любое совпадение спецификации удаляется.</target>
        </trans-unit>
        <trans-unit id="d3c6f60ed2d58ddd2546f1c92f3b23c7fc7b8db7" translate="yes" xml:space="preserve">
          <source>Disables tracing for all sent messages. Any match specification is removed.</source>
          <target state="translated">Отключает отслеживание всех отправленных сообщений.Любое совпадение спецификации удаляется.</target>
        </trans-unit>
        <trans-unit id="052bd1ec9b7d0195d48f3445314353c790266505" translate="yes" xml:space="preserve">
          <source>Disables tracing for the matching functions. Any match specification is removed.</source>
          <target state="translated">Отключает трассировку для функций совпадения.Любое совпадение спецификации удаляется.</target>
        </trans-unit>
        <trans-unit id="b4b4aed9d646971376493a208349a826cb4c12b9" translate="yes" xml:space="preserve">
          <source>Disabling arity checks affects the form of messages at encode/decode. In particular, decoded AVPs are represented as lists of values, regardless of the AVP's arity (ie. expected number in the message/AVP grammar in question), and values are expected to be supplied as lists at encode. This differs from the historic decode behaviour of representing AVPs of arity 1 as bare values, not wrapped in a list.</source>
          <target state="translated">Отключение проверки arity влияет на форму сообщений при кодировании/декодировании.В частности,декодированные AVP представляются как списки значений,независимо от arity's AVP (т.е.ожидаемое число в сообщении/грамматике AVP),а значения ожидаются в виде списков при кодировании.Это отличается от исторического поведения декодирования представления AVP arity 1 в виде голых значений,не обернутых в список.</target>
        </trans-unit>
        <trans-unit id="019544662459c34c84ab1f2f72c6fedddbe538f0" translate="yes" xml:space="preserve">
          <source>Disabling counters is a performance improvement, but means that the omitted counters are not returned by &lt;code&gt;&lt;a href=&quot;#service_info-2&quot;&gt;service_info/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Отключение счетчиков улучшает производительность, но означает, что пропущенные счетчики не возвращаются &lt;code&gt;&lt;a href=&quot;#service_info-2&quot;&gt;service_info/2&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="76a831e0997e7ea4fb9c444b8f508021eca00f12" translate="yes" xml:space="preserve">
          <source>Disabling shell and exec in a daemon</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30dcc2129cb59bbec6b75af27e09310eb15a967b" translate="yes" xml:space="preserve">
          <source>Disaster Recovery</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad694189656d6d69aa0303359764d4f191934c22" translate="yes" xml:space="preserve">
          <source>Disc-less nodes</source>
          <target state="translated">Бездисковые узлы</target>
        </trans-unit>
        <trans-unit id="ba6ed47955f40df472a5f8beac813210c9595e35" translate="yes" xml:space="preserve">
          <source>Disclaimer: The author accepts no responsibility for errors introduced in code that has been processed by the program. It has been reasonably well tested, but the possibility of errors remains. Keep backups of your original code safely stored, until you feel confident that the new, modified code can be trusted.</source>
          <target state="translated">Оговорка:автор не несет никакой ответственности за ошибки,внесенные в код,который был обработан программой.Он был достаточно хорошо протестирован,но вероятность возникновения ошибок остается.Храните резервные копии оригинального кода в безопасном месте до тех пор,пока не почувствуете уверенность в том,что новому,измененному коду можно доверять.</target>
        </trans-unit>
        <trans-unit id="cfd988cdc067039f90d04d2baa7c90c660553b55" translate="yes" xml:space="preserve">
          <source>Disclaimer: the author of this program takes no responsibility for the correctness of the produced output, or for any effects of its execution. In particular, the author may not be held responsible should Igor include the code of a deceased madman in the result.</source>
          <target state="translated">Отказ от ответственности:автор данной программы не несет никакой ответственности за правильность выпускаемой продукции,а также за любые последствия ее выполнения.В частности,автор не может нести ответственность,если Игорь включит в результат работы код умершего сумасшедшего.</target>
        </trans-unit>
        <trans-unit id="6a2cce7325057892153f44eaa30a90a3c86e5de3" translate="yes" xml:space="preserve">
          <source>Disconnect-Cause AVP</source>
          <target state="translated">Отключение-причина AVP</target>
        </trans-unit>
        <trans-unit id="ff1396a2181372840b5ab3bd74b8cad283adf658" translate="yes" xml:space="preserve">
          <source>Disconnect-Cause AVP Values</source>
          <target state="translated">Отключение-Причина,по которой значения AVP</target>
        </trans-unit>
        <trans-unit id="f14abc14828dff0b3991be236d7f7cf54da51f12" translate="yes" xml:space="preserve">
          <source>Disconnect-Cause to send, &lt;code&gt;REBOOTING&lt;/code&gt;, &lt;code&gt;BUSY&lt;/code&gt; and &lt;code&gt;DO_NOT_WANT_TO_TALK_TO_YOU&lt;/code&gt; respectively. Defaults to &lt;code&gt;rebooting&lt;/code&gt; for &lt;code&gt;Reason=service|application&lt;/code&gt; and &lt;code&gt;goaway&lt;/code&gt; for &lt;code&gt;Reason=transport&lt;/code&gt;.</source>
          <target state="translated">Disconnect-Причина отправки, &lt;code&gt;REBOOTING&lt;/code&gt; , &lt;code&gt;BUSY&lt;/code&gt; и &lt;code&gt;DO_NOT_WANT_TO_TALK_TO_YOU&lt;/code&gt; соответственно. По умолчанию для &lt;code&gt;Reason=service|application&lt;/code&gt; &lt;code&gt;goaway&lt;/code&gt; &lt;code&gt;rebooting&lt;/code&gt; а для &lt;code&gt;Reason=transport&lt;/code&gt; -выход .</target>
        </trans-unit>
        <trans-unit id="0cb6f5b85df7280837caa7684c21ebca654127f2" translate="yes" xml:space="preserve">
          <source>Disconnect-Peer-Answer</source>
          <target state="translated">Disconnect-Peer-Answer</target>
        </trans-unit>
        <trans-unit id="ac00be15043552408adbb950359743263da6af3c" translate="yes" xml:space="preserve">
          <source>Disconnect-Peer-Request</source>
          <target state="translated">Disconnect-Peer-Request</target>
        </trans-unit>
        <trans-unit id="0b89ba1fee4ae5db5b5cbdc2a3e20cb0bb715a06" translate="yes" xml:space="preserve">
          <source>Disconnecting Peer Connections</source>
          <target state="translated">Разъединение одноранговых соединений</target>
        </trans-unit>
        <trans-unit id="4130fdb42bbd68fda4590cd56ee038ef4ac9d67b" translate="yes" xml:space="preserve">
          <source>Disconnecting a client from the server</source>
          <target state="translated">Отключение клиента от сервера</target>
        </trans-unit>
        <trans-unit id="4777f6524a18a233a6b8a935dab6c2675a1c7aaf" translate="yes" xml:space="preserve">
          <source>Discovery can only be performed towards one manager at a time.</source>
          <target state="translated">Обнаружение может быть выполнено только по отношению к одному менеджеру одновременно.</target>
        </trans-unit>
        <trans-unit id="fcb2aee26678c8fa201281e24483d3205c8e34b7" translate="yes" xml:space="preserve">
          <source>Disk log format. Defaults to &lt;code&gt;internal&lt;/code&gt;.</source>
          <target state="translated">Формат дискового журнала. По умолчанию &lt;code&gt;internal&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4601cd5c257aa63f669ff263176f89589ca3b4c9" translate="yes" xml:space="preserve">
          <source>Disk-Less and/or Read-Only Clients</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17a3fc955cb5b0276df9b096dfd6ba69365aa9bf" translate="yes" xml:space="preserve">
          <source>Disk-based term storage</source>
          <target state="translated">Дисковое срочное хранение</target>
        </trans-unit>
        <trans-unit id="e1031ece5a091584f5140674ba7245074e05f5c1" translate="yes" xml:space="preserve">
          <source>Diskless Node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ec64952288dde39e7db9059f483c43d01b58273" translate="yes" xml:space="preserve">
          <source>Display the full path names of files for which warnings are emitted.</source>
          <target state="translated">Отображать полные имена путей к файлам,для которых выдаются предупреждения.</target>
        </trans-unit>
        <trans-unit id="407bbaf1e0c2d0df752601703a3d425897a28222" translate="yes" xml:space="preserve">
          <source>Displays a brief help text.</source>
          <target state="translated">Отображает краткий справочный текст.</target>
        </trans-unit>
        <trans-unit id="809fd057f19b915d80930c6f7d96f0ece197660c" translate="yes" xml:space="preserve">
          <source>Displays a sequence chart for trace events (messages/actions)</source>
          <target state="translated">Отображает график последовательности событий трассировки (сообщений/действия).</target>
        </trans-unit>
        <trans-unit id="b4addbd06f3a7b652cedffa28ba11f824f0e54ed" translate="yes" xml:space="preserve">
          <source>Displays help information: all valid shell internal commands, and commands in this module.</source>
          <target state="translated">Отображает справочную информацию:все действующие внутренние команды оболочки,а также команды в этом модуле.</target>
        </trans-unit>
        <trans-unit id="ee3534b5896b26b70a09071e094b09fecc246f93" translate="yes" xml:space="preserve">
          <source>Displays information about &lt;code&gt;Module&lt;/code&gt;.</source>
          <target state="translated">Отображает информацию о &lt;code&gt;Module&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1e2cdacb04ccc59eb03b366e2ce6107106171ce9" translate="yes" xml:space="preserve">
          <source>Displays information about a process, Equivalent to &lt;code&gt;process_info(pid(X, Y, Z))&lt;/code&gt;, but location transparent.</source>
          <target state="translated">Отображает информацию о процессе, эквивалентную &lt;code&gt;process_info(pid(X, Y, Z))&lt;/code&gt; , но прозрачное местоположение.</target>
        </trans-unit>
        <trans-unit id="8676997e6d31e5d1792fc72017136c1969e4743f" translate="yes" xml:space="preserve">
          <source>Displays information about all ETS tables on a terminal.</source>
          <target state="translated">Отображает информацию обо всех таблицах ETS на терминале.</target>
        </trans-unit>
        <trans-unit id="af76d957f2761590236e17f9749346c28a31a1c0" translate="yes" xml:space="preserve">
          <source>Displays information about all traced processes and ports.</source>
          <target state="translated">Отображает информацию обо всех отслеживаемых процессах и портах.</target>
        </trans-unit>
        <trans-unit id="492951a4c4a95971c08b9e19f0dc88adebe37075" translate="yes" xml:space="preserve">
          <source>Displays information about the loaded modules, including the files from which they have been loaded.</source>
          <target state="translated">Отображает информацию о загруженных модулях,включая файлы,из которых они были загружены.</target>
        </trans-unit>
        <trans-unit id="ee93296f3843197e51b182a1bafc98d3a64cbf54" translate="yes" xml:space="preserve">
          <source>Displays more details about the running tests.</source>
          <target state="translated">Отображает более подробную информацию о запущенных тестах.</target>
        </trans-unit>
        <trans-unit id="e0eaa044d1402f6158dbb94e6f37cec632aa9c72" translate="yes" xml:space="preserve">
          <source>Displays online help information.</source>
          <target state="translated">Отображает онлайн справочную информацию.</target>
        </trans-unit>
        <trans-unit id="df72e35e6b1d65a27a8d6d508bdb3a1cdc2b8d9e" translate="yes" xml:space="preserve">
          <source>Displays the back trace of the process, a summary of the current function calls on the stack, in the Trace area. Requires that the Trace area is visible and that the Stack Trace option is &lt;strong&gt;Stack On, Tail&lt;/strong&gt; or &lt;strong&gt;Stack On, No Tail&lt;/strong&gt;.</source>
          <target state="translated">Отображает обратную трассировку процесса, сводку текущих вызовов функций в стеке в области трассировки. Требуется, чтобы область трассировки была видна и для параметра трассировки стека было выбрано значение &amp;laquo; &lt;strong&gt;Сложить&amp;raquo;, &amp;laquo;Хвост&amp;raquo;&lt;/strong&gt; или &amp;laquo; &lt;strong&gt;Сложить, без хвоста&amp;raquo;&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="b1b1e3477e899e5e51d8015f9d12fef517565150" translate="yes" xml:space="preserve">
          <source>Displays the help message above.</source>
          <target state="translated">Выводит на экран справочное сообщение,приведенное выше.</target>
        </trans-unit>
        <trans-unit id="5e637c32ead50fb05a7176006aa2e317c3d4a119" translate="yes" xml:space="preserve">
          <source>Displays the help of &lt;code&gt;etop&lt;/code&gt; and its options.</source>
          <target state="translated">Отображает справку по &lt;code&gt;etop&lt;/code&gt; и его параметрам.</target>
        </trans-unit>
        <trans-unit id="5a62bffd61747c2b3f643917a2167e1db67450af" translate="yes" xml:space="preserve">
          <source>Displays the manual page for the Erlang module &lt;code&gt;Module&lt;/code&gt;. Only supported on Unix.</source>
          <target state="translated">Отображает страницу руководства для модуля &lt;code&gt;Module&lt;/code&gt; Erlang . Поддерживается только в Unix.</target>
        </trans-unit>
        <trans-unit id="5a8997e7d54421e54131f64252ff4df84aeddf01" translate="yes" xml:space="preserve">
          <source>Displays the reports that match the provided filters.</source>
          <target state="translated">Отображает отчеты,соответствующие предоставленным фильтрам.</target>
        </trans-unit>
        <trans-unit id="7d09436ef1c7f1d4275b15c0e3bfd26a0e52a4a3" translate="yes" xml:space="preserve">
          <source>Dissecting form-urlencoded query strings into a list of key-value pairs</source>
          <target state="translated">Разделение строк запроса,закодированных в форме,на пары ключей-значений</target>
        </trans-unit>
        <trans-unit id="6639179da9a9db22208ccf1f96fbd66121e3d490" translate="yes" xml:space="preserve">
          <source>Dissects an urlencoded &lt;code&gt;QueryString&lt;/code&gt; and returns a &lt;code&gt;QueryList&lt;/code&gt;, a list of non-percent-encoded key-value pairs. Form-urlencoding is defined in section 4.10.21.6 of the &lt;code&gt;&lt;a href=&quot;https://www.w3.org/TR/html52/&quot;&gt;HTML 5.2&lt;/a&gt;&lt;/code&gt; specification and in section 4.10.22.6 of the &lt;code&gt;&lt;a href=&quot;https://www.w3.org/TR/html50/&quot;&gt;HTML 5.0&lt;/a&gt;&lt;/code&gt; specification for non-UTF-8 encodings.</source>
          <target state="translated">Анализирует закодированную с &lt;code&gt;QueryString&lt;/code&gt; urlen-кодов QueryString и возвращает &lt;code&gt;QueryList&lt;/code&gt; , список пар ключ-значение, не закодированных в процентах. Кодирование формы-urlencoding определено в разделе 4.10.21.6 спецификации &lt;code&gt;&lt;a href=&quot;https://www.w3.org/TR/html52/&quot;&gt;HTML 5.2&lt;/a&gt;&lt;/code&gt; и в разделе 4.10.22.6 спецификации &lt;code&gt;&lt;a href=&quot;https://www.w3.org/TR/html50/&quot;&gt;HTML 5.0&lt;/a&gt;&lt;/code&gt; для кодировок, отличных от UTF-8.</target>
        </trans-unit>
        <trans-unit id="357d35fa45410f9789ac601d8a4028142c2abc4b" translate="yes" xml:space="preserve">
          <source>Distinguish between different exception classes.</source>
          <target state="translated">Различать различные классы исключений.</target>
        </trans-unit>
        <trans-unit id="3154ac05c2e6649bcc819cae0791db7441479164" translate="yes" xml:space="preserve">
          <source>Distinguished Encoding Rules (DER), a specialized form of BER that is used in security-conscious applications</source>
          <target state="translated">Выдающиеся правила кодирования (DER),специализированная форма BER,которая используется в приложениях,заботящихся о безопасности.</target>
        </trans-unit>
        <trans-unit id="9f5bcc7ade38e78551b447d80b79861812a69887" translate="yes" xml:space="preserve">
          <source>Distributed Disk Logs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d179b3dee705e502ba9df5acd57b35bada26be1a" translate="yes" xml:space="preserve">
          <source>Distributed Erlang</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df5f720cb5c3693e400bc2af610c190506b2e22e" translate="yes" xml:space="preserve">
          <source>Distributed applications are controlled by both the application controller and a distributed application controller process, &lt;code&gt;dist_ac&lt;/code&gt;. Both these processes are part of the Kernel application. Distributed applications are thus specified by configuring the Kernel application, using the following configuration parameter (see also &lt;code&gt;kernel(6)&lt;/code&gt;):</source>
          <target state="translated">Распределенные приложения контролируются как контроллером приложений, так и процессом контроллера распределенных приложений &lt;code&gt;dist_ac&lt;/code&gt; . Оба эти процесса являются частью приложения ядра. Таким образом, распределенные приложения задаются путем настройки приложения ядра с использованием следующего параметра конфигурации (см. Также &lt;code&gt;kernel(6)&lt;/code&gt; ):</target>
        </trans-unit>
        <trans-unit id="777820c0dccfcaf6763a1dc23065b452f73b88aa" translate="yes" xml:space="preserve">
          <source>Distributed data because of distributed applications</source>
          <target state="translated">Распределенные данные из-за распределенных приложений</target>
        </trans-unit>
        <trans-unit id="1058cfc322dd64ad274d9afc48318f15475644a8" translate="yes" xml:space="preserve">
          <source>Distributed message sending, that is, if &lt;code&gt;Expr1&lt;/code&gt; evaluates to a tuple &lt;code&gt;{Name,Node}&lt;/code&gt; (or a pid located at another node), also never fails.</source>
          <target state="translated">Распределенная отправка сообщений, то есть, если &lt;code&gt;Expr1&lt;/code&gt; оценивается как кортеж &lt;code&gt;{Name,Node}&lt;/code&gt; (или pid, расположенный на другом узле), также никогда не завершается ошибкой.</target>
        </trans-unit>
        <trans-unit id="646778caa7cd85accfc80935a72b9a69681a64bf" translate="yes" xml:space="preserve">
          <source>Distributed named process groups.</source>
          <target state="translated">Распределенные именованные группы процессов.</target>
        </trans-unit>
        <trans-unit id="fe70fcb303dd369d876e8b04a66fbb3f051957f9" translate="yes" xml:space="preserve">
          <source>Distributed tables</source>
          <target state="translated">Распределенные таблицы</target>
        </trans-unit>
        <trans-unit id="ef3a717afb5526323e5d0fa2e1c8c91f28e31043" translate="yes" xml:space="preserve">
          <source>Distributed test execution control for &lt;code&gt;Common Test&lt;/code&gt;.</source>
          <target state="translated">Распределенный контроль выполнения теста для &lt;code&gt;Common Test&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f23d56f2b96b77ba15c94f5727ade9fc8a5345f9" translate="yes" xml:space="preserve">
          <source>Distributed test execution control for Common Test.</source>
          <target state="translated">Распределенный контроль выполнения тестов для общего теста.</target>
        </trans-unit>
        <trans-unit id="6b1412269556b8a825737e56637796f585ef89c0" translate="yes" xml:space="preserve">
          <source>Distributes the value &lt;code&gt;X&lt;/code&gt; over the unary functions in the list, turning them into nullary test functions. An &lt;code&gt;AbstractTestFun&lt;/code&gt; is like an ordinary test fun, but takes one argument instead of zero - it's basically missing some information before it can be a proper test. In practice, &lt;code&gt;{with, X, [F_1, ..., F_N]}&lt;/code&gt; is equivalent to &lt;code&gt;[fun () -&amp;gt; F_1(X) end, ..., fun () -&amp;gt; F_N(X) end]&lt;/code&gt;. This is particularly useful if your abstract test functions are already implemented as proper functions: &lt;code&gt;{with, FD, [fun filetest_a/1, fun filetest_b/1, fun filetest_c/1]}&lt;/code&gt; is equivalent to &lt;code&gt;[fun () -&amp;gt; filetest_a(FD) end, fun () -&amp;gt; filetest_b(FD) end, fun () -&amp;gt; filetest_c(FD) end]&lt;/code&gt;, but much more compact. See also &lt;code&gt;&lt;a href=&quot;#Fixtures&quot;&gt;Fixtures&lt;/a&gt;&lt;/code&gt;, below.</source>
          <target state="translated">Распределяет значение &lt;code&gt;X&lt;/code&gt; по унарным функциям в списке, превращая их в нулевые тестовые функции. &lt;code&gt;AbstractTestFun&lt;/code&gt; , как обычный тест удовольствие, но принимает один аргумент вместо нуля - это в основном не хватает какой - то информации , прежде чем он может быть надлежащим испытанием. На практике &lt;code&gt;{with, X, [F_1, ..., F_N]}&lt;/code&gt; эквивалентно &lt;code&gt;[fun () -&amp;gt; F_1(X) end, ..., fun () -&amp;gt; F_N(X) end]&lt;/code&gt; . Это особенно полезно, если ваши абстрактные тестовые функции уже реализованы как правильные функции: &lt;code&gt;{with, FD, [fun filetest_a/1, fun filetest_b/1, fun filetest_c/1]}&lt;/code&gt; эквивалентно &lt;code&gt;[fun () -&amp;gt; filetest_a(FD) end, fun () -&amp;gt; filetest_b(FD) end, fun () -&amp;gt; filetest_c(FD) end]&lt;/code&gt; , но гораздо более компактный. Смотрите также &lt;code&gt;&lt;a href=&quot;#Fixtures&quot;&gt;Fixtures&lt;/a&gt;&lt;/code&gt; , ниже.</target>
        </trans-unit>
        <trans-unit id="1d3c457cbe3e35739086346e0a4048653efa42e7" translate="yes" xml:space="preserve">
          <source>Distribution</source>
          <target state="translated">Distribution</target>
        </trans-unit>
        <trans-unit id="1fb2ec77dec0827e6e0ae703f668a7a543d0ca5f" translate="yes" xml:space="preserve">
          <source>Distribution and fault tolerance</source>
          <target state="translated">Распределение и отказоустойчивость</target>
        </trans-unit>
        <trans-unit id="c005e1759172af47ea6a2a358db5688f108d75cf" translate="yes" xml:space="preserve">
          <source>Distribution of applications is highly dependent of the global group definitions. It is not recommended that an application is distributed over many global groups, as the registered names can be moved to another global group at failover/takeover. Nothing prevents this to be done, but the application code must then handle the situation.</source>
          <target state="translated">Распределение приложений сильно зависит от глобальных определений групп.Не рекомендуется распределять приложение по многим глобальным группам,так как зарегистрированные имена могут быть перемещены в другую глобальную группу при обходе отказа/поглощении.Ничто не мешает этому,но код приложения должен обрабатывать ситуацию.</target>
        </trans-unit>
        <trans-unit id="3cf125e37f22237a163b399ac03840410729489d" translate="yes" xml:space="preserve">
          <source>Distribution over TLS/SSL, See the &lt;code&gt; Using SSL for Erlang Distribution&lt;/code&gt; User's Guide for details on how to setup a secure distributed node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dfeb8d1362ff3508945cdb79fdb677bffbb7cb3" translate="yes" xml:space="preserve">
          <source>Distribution over TLS/SSL, See the &lt;code&gt;Using SSL for Erlang Distribution&lt;/code&gt; User's Guide for details on how to setup a secure distributed node.</source>
          <target state="translated">Распространение через TLS / SSL. Подробную информацию о том, как настроить безопасный распределенный узел, см. В Руководстве пользователя &amp;laquo; &lt;code&gt;Using SSL for Erlang Distribution&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="19983b43869ec19057fd09428fe2401294f12747" translate="yes" xml:space="preserve">
          <source>Distribution sequential/parallel</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22bdf47be3fd0a53ecdf5d6edbde0a2c6b97f0e0" translate="yes" xml:space="preserve">
          <source>Do</source>
          <target state="translated">Do</target>
        </trans-unit>
        <trans-unit id="47613c6fda4292bd08e25bf20eb869bc678389c9" translate="yes" xml:space="preserve">
          <source>Do &lt;strong&gt;not&lt;/strong&gt; declare the &lt;code&gt;driver_entry&lt;/code&gt;&lt;code&gt;const&lt;/code&gt;. This because the emulator must modify the &lt;code&gt;handle&lt;/code&gt; and the &lt;code&gt;handle2&lt;/code&gt; fields. A statically allocated, and &lt;code&gt;const&lt;/code&gt;-declared &lt;code&gt;driver_entry&lt;/code&gt; can be located in read-only memory, which causes the emulator to crash.</source>
          <target state="translated">Вы &lt;strong&gt;не&lt;/strong&gt; объявлять &lt;code&gt;driver_entry&lt;/code&gt; &lt;code&gt;const&lt;/code&gt; . Это потому, что эмулятор должен изменить поля &lt;code&gt;handle&lt;/code&gt; и &lt;code&gt;handle2&lt;/code&gt; . Статический распределенный, и &lt;code&gt;const&lt;/code&gt; -declared &lt;code&gt;driver_entry&lt;/code&gt; может находиться в памяти только для чтения, что приводит эмулятор к аварии.</target>
        </trans-unit>
        <trans-unit id="156a410dd8c4aec29054efddcf1aca187e334ab2" translate="yes" xml:space="preserve">
          <source>Do a one-time execution of a remote command over &lt;code&gt;ssh&lt;/code&gt;:</source>
          <target state="translated">Выполните однократное выполнение удаленной команды по &lt;code&gt;ssh&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="61182cd5c5652e8bcee439979d35fb7735c6a0ae" translate="yes" xml:space="preserve">
          <source>Do an one-time execution of a remote OS command (&quot;pwd&quot;) over &lt;code&gt;ssh&lt;/code&gt; to the ssh server of the OS at the host &quot;tarlop&quot;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d221ae72367256bfa0f670f2336dceacee61b0d4" translate="yes" xml:space="preserve">
          <source>Do as follows:</source>
          <target state="translated">Сделайте следующее:</target>
        </trans-unit>
        <trans-unit id="f27b06d07e1966b0b6864e00ebac2e38b9abf992" translate="yes" xml:space="preserve">
          <source>Do not assume that the fastest implementation of a given algorithm on computer architecture X is also the fastest on computer architecture Y.</source>
          <target state="translated">Не стоит считать,что самая быстрая реализация данного алгоритма на архитектуре компьютера X также самая быстрая на архитектуре компьютера Y.</target>
        </trans-unit>
        <trans-unit id="60772b6696dbf4ac12380ab3e94aae181f9d5c26" translate="yes" xml:space="preserve">
          <source>Do not auto-import any functions from &lt;code&gt;erlang&lt;/code&gt; module.</source>
          <target state="translated">Не импортируйте автоматически какие-либо функции из модуля &lt;code&gt;erlang&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3d5e059893acb8b0449b6d1e96a2752f9bacf037" translate="yes" xml:space="preserve">
          <source>Do not break Hangul (a Korean script) syllable sequences. Hangul characters are of five types: L, V, T, LV, and LVT. An L character can be followed by an L, V, LV, or LVT character. An LV or V character can be followed by a V or T character. An LVT or T character can be followed only by a T character.</source>
          <target state="translated">Не нарушайте последовательности слогов Хангыль (корейский сценарий).Символы хангула имеют пять типов:L,V,T,LV и LVT.За L-символом может следовать L,V,LV или LVT.За LV или V персонажем может следовать V или T персонаж.За LV или T-символом может следовать только T-символ.</target>
        </trans-unit>
        <trans-unit id="651bee959850d9f68d5849e0d8ebd34b2d42f910" translate="yes" xml:space="preserve">
          <source>Do not call &lt;code&gt;port_call&lt;/code&gt; with an unknown &lt;code&gt;Port&lt;/code&gt; identifier and expect &lt;code&gt;badarg&lt;/code&gt; exception. Any undefined behavior is possible (including node crash) depending on how the port driver interprets the supplied arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c9ced6e360a50fea15816bc67ccef8964b7f8f6" translate="yes" xml:space="preserve">
          <source>Do not call &lt;code&gt;port_control/3&lt;/code&gt; with an unknown &lt;code&gt;Port&lt;/code&gt; identifier and expect &lt;code&gt;badarg&lt;/code&gt; exception. Any undefined behavior is possible (including node crash) depending on how the port driver interprets the supplied arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b521b45cda7d42ddb8d4e9de9054fb540ecd742d" translate="yes" xml:space="preserve">
          <source>Do not compile (that is, do not produce object code) the generated &lt;code&gt;.erl&lt;/code&gt; file. If this option is omitted, the generated Erlang module is compiled.</source>
          <target state="translated">Не компилируйте (то есть не &lt;code&gt;.erl&lt;/code&gt; объектный код) созданный файл .erl . Если этот параметр не указан, сгенерированный модуль Erlang компилируется.</target>
        </trans-unit>
        <trans-unit id="14f32868df4cab74a92ca7e529102aa97cd5b714" translate="yes" xml:space="preserve">
          <source>Do not confuse item (?R) with condition (R), which tests for recursion. Consider the following pattern, which matches text in angle brackets, allowing for arbitrary nesting. Only digits are allowed in nested brackets (that is, when recursing), while any characters are permitted at the outer level.</source>
          <target state="translated">Не путайте пункт (?R)с условием (R),которое проверяет на рекурсию.Рассмотрим следующий шаблон,который совпадает с текстом в угловых скобках,позволяя произвольное вложение.Вложенные скобки допускают только цифры (т.е.при рекурсии),а на внешнем уровне-любые символы.</target>
        </trans-unit>
        <trans-unit id="37e72f477291161d4ca7e88c63da4fba798ca16b" translate="yes" xml:space="preserve">
          <source>Do not confuse this feature with the &lt;code&gt;repeat&lt;/code&gt; property of a test case group. The options described here are used to repeat execution of entire test runs, while the &lt;code&gt;repeat&lt;/code&gt; property of a test case group makes it possible to repeat execution of sets of test cases within a suite. For more information about the latter, see section &lt;code&gt;&lt;a href=&quot;write_test_chapter#test_case_groups&quot;&gt;Test Case Groups &lt;/a&gt;&lt;/code&gt; in section Writing Test Suites.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15b14d23d02c2d810eb7ff4dafcb04db866620a8" translate="yes" xml:space="preserve">
          <source>Do not confuse this feature with the &lt;code&gt;repeat&lt;/code&gt; property of a test case group. The options described here are used to repeat execution of entire test runs, while the &lt;code&gt;repeat&lt;/code&gt; property of a test case group makes it possible to repeat execution of sets of test cases within a suite. For more information about the latter, see section &lt;code&gt;&lt;a href=&quot;write_test_chapter#test_case_groups&quot;&gt;Test Case Groups&lt;/a&gt;&lt;/code&gt; in section Writing Test Suites.</source>
          <target state="translated">Не путайте эту функцию со свойством &lt;code&gt;repeat&lt;/code&gt; группы тестовых примеров. Описанные здесь параметры используются для повторения выполнения всех тестовых прогонов, в то время как свойство &lt;code&gt;repeat&lt;/code&gt; группы тестовых примеров позволяет повторять выполнение наборов тестовых примеров в наборе. Дополнительные сведения о последнем см. В разделе &amp;laquo; &lt;code&gt;&lt;a href=&quot;write_test_chapter#test_case_groups&quot;&gt;Test Case Groups&lt;/a&gt;&lt;/code&gt; в разделе &amp;laquo;Написание наборов тестов&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="5fd5a1472c6fe43a652bdd8bc5aa386723882a15" translate="yes" xml:space="preserve">
          <source>Do not depend on the current working directory for reading and writing data files, as this is not portable. All scratch files are to be written in the &lt;code&gt;priv_dir&lt;/code&gt; and all data files are to be located in &lt;code&gt;data_dir&lt;/code&gt;. Also, the &lt;code&gt;Common Test&lt;/code&gt; server sets the current working directory to the test case log directory at the start of every case.</source>
          <target state="translated">Не полагайтесь на текущий рабочий каталог для чтения и записи файлов данных, поскольку он не переносится. Все &lt;code&gt;priv_dir&lt;/code&gt; файлы должны быть записаны в Priv_dir, а все файлы данных должны быть расположены в &lt;code&gt;data_dir&lt;/code&gt; . Кроме того, сервер &lt;code&gt;Common Test&lt;/code&gt; устанавливает текущий рабочий каталог в каталог журнала тестовых случаев в начале каждого случая.</target>
        </trans-unit>
        <trans-unit id="7194a989708cb9ceda8cc7192a66b9bda23def2c" translate="yes" xml:space="preserve">
          <source>Do not depend on the scheduling to remain exactly as it is today. Scheduling is likely to be changed in a future release to use available processor cores better.</source>
          <target state="translated">Не зависите от расписания,чтобы остаться в точности таким,каким оно есть сегодня.Планирование,скорее всего,будет изменено в будущем релизе,чтобы лучше использовать доступные процессорные ядра.</target>
        </trans-unit>
        <trans-unit id="a2f31ff69a8594f7ef57326c9ad5ac44bf992a75" translate="yes" xml:space="preserve">
          <source>Do not disable the Erlang shell while running the GUI.</source>
          <target state="translated">Не отключайте оболочку Эрланга во время работы графического интерфейса.</target>
        </trans-unit>
        <trans-unit id="9940ce9bb1d237e4d18a0edeb4db476b18a97e5d" translate="yes" xml:space="preserve">
          <source>Do not enable &lt;code&gt;parallel_logins&lt;/code&gt; without protecting the server by other means, for example, by the &lt;code&gt;max_sessions&lt;/code&gt; option or a firewall configuration. If set to &lt;code&gt;true&lt;/code&gt;, there is no protection against DOS attacks.</source>
          <target state="translated">Не включайте &lt;code&gt;parallel_logins&lt;/code&gt; без защиты сервера другими способами, например, с &lt;code&gt;max_sessions&lt;/code&gt; параметра max_sessions или конфигурации брандмауэра. Если установлено значение &lt;code&gt;true&lt;/code&gt; , защита от DOS-атак отсутствует.</target>
        </trans-unit>
        <trans-unit id="c71ebfa08b5476018b372c85a3329c913b294dc2" translate="yes" xml:space="preserve">
          <source>Do not end after prepend characters.</source>
          <target state="translated">Не заканчивайте после предваряющих символов.</target>
        </trans-unit>
        <trans-unit id="d8c471ab6552051ae9d3261971ab9ca63bf52f14" translate="yes" xml:space="preserve">
          <source>Do not end before extending characters or spacing marks. Characters with the &quot;mark&quot; property always have the &quot;extend&quot; grapheme breaking property.</source>
          <target state="translated">Не заканчивайте до продления символов или интервалов.Символы со свойством &quot;метка&quot; всегда имеют свойство разрыва графемы &quot;расширение&quot;.</target>
        </trans-unit>
        <trans-unit id="3c01623e5d9ea8f28b667a75484db29adf450c8b" translate="yes" xml:space="preserve">
          <source>Do not end between CR and LF; otherwise end after any control character.</source>
          <target state="translated">Не заканчивайте между CR и LF;в противном случае заканчивайте после любого управляющего символа.</target>
        </trans-unit>
        <trans-unit id="8d0cf1528511fb26d91115dbca4234d18f655418" translate="yes" xml:space="preserve">
          <source>Do not fetch data that you already have.</source>
          <target state="translated">Не извлекайте данные,которые у вас уже есть.</target>
        </trans-unit>
        <trans-unit id="188b0c662f5109429f4e7982a599520d181b7813" translate="yes" xml:space="preserve">
          <source>Do not forget to consider the burst rate. If you set intensity to 1 and period to 6, it gives the same sustained error rate as 5/30 or 10/60, but will not allow even 2 restart attempts in quick succession. This is probably not what you wanted.</source>
          <target state="translated">Не забудьте учесть скорость взрыва.Если вы установите интенсивность в 1 и период в 6,то это даст такую же постоянную погрешность,как 5/30 или 10/60,но не позволит даже 2 попыткам перезапуска в быстрой последовательности.Скорее всего,это не то,что вы хотели.</target>
        </trans-unit>
        <trans-unit id="cb6ff35f68a8fe238498bd152090f1aefc3c00b3" translate="yes" xml:space="preserve">
          <source>Do not insert line breaks in types, contracts, and Erlang Code when formatting warnings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78a25e53c1d1a1e9e8efea26b3a8a018a5711c79" translate="yes" xml:space="preserve">
          <source>Do not rely too much on the order of &lt;code&gt;Flag&lt;/code&gt; atoms or &lt;code&gt;Ifopt&lt;/code&gt; tuples. There are however some rules:</source>
          <target state="translated">Не полагайтесь слишком сильно на порядок атомов &lt;code&gt;Flag&lt;/code&gt; или кортежей &lt;code&gt;Ifopt&lt;/code&gt; . Однако есть некоторые правила:</target>
        </trans-unit>
        <trans-unit id="ed5a829acbf86b446537c7e77035b74ae3ff6884" translate="yes" xml:space="preserve">
          <source>Do not rely too much on the order of &lt;code&gt;Flags&lt;/code&gt; atoms or the &lt;code&gt;Ifopt&lt;/code&gt; tuples. There are however some rules:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1c9c02fa7973c5d114818811d89f50e2cadfc9c" translate="yes" xml:space="preserve">
          <source>Do not segment outgoing reply messages. This is useful when either it is known that messages are never to large or that the transport protocol can handle such things on its own (e.g. TCP or SCTP).</source>
          <target state="translated">Не сегментируйте исходящие ответные сообщения.Это полезно,когда известно,что сообщения никогда не бывают большими или что транспортный протокол может справиться с такими вещами самостоятельно (например,TCP или SCTP).</target>
        </trans-unit>
        <trans-unit id="80935dcf9b5a6ea229aecf6d20098f3db3dec414" translate="yes" xml:space="preserve">
          <source>Do not send data to an unknown port. Any undefined behavior is possible (including node crash) depending on how the port driver interprets the data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d463f746b0b7fd7109b1a49ad6fea1f1a13ac94" translate="yes" xml:space="preserve">
          <source>Do not send messages or issue port commands to the &lt;code&gt;Tracee&lt;/code&gt; in any of the callbacks. This is not allowed and can cause all sorts of strange behavior, including, but not limited to, infinite recursions.</source>
          <target state="translated">Не отправляйте сообщения или не &lt;code&gt;Tracee&lt;/code&gt; команды порта Tracee ни в одном из обратных вызовов. Это недопустимо и может вызывать разные странные вещи, включая, помимо прочего, бесконечные рекурсии.</target>
        </trans-unit>
        <trans-unit id="8a73abdea57b18933ecedd87b093ff6419e3300f" translate="yes" xml:space="preserve">
          <source>Do not set the period to a very high value if you want to tolerate bursts. If you set intensity to 5 and period to 3600 (one hour), the supervisor will allow a short burst of 5 restarts, but then gives up if it sees another single restart almost an hour later. You probably want to regard those crashes as separate incidents, so setting the period to 5 or 10 minutes will be more reasonable.</source>
          <target state="translated">Не устанавливайте период на очень высокое значение,если вы хотите выдержать всплески.Если вы установите интенсивность 5 и период 3600 (один час),то супервайзер разрешит кратковременный всплеск 5 перезагрузок,но затем сдастся,если увидит еще один перезагрузочный всплеск почти через час.Вероятно,вы захотите рассматривать эти аварии как отдельные инциденты,поэтому установка периода в 5 или 10 минут будет более разумной.</target>
        </trans-unit>
        <trans-unit id="b65301fb79ef8b7b35e60f636541eaf5d9009d6f" translate="yes" xml:space="preserve">
          <source>Do not tamper with the socket options &lt;code&gt;list&lt;/code&gt;, &lt;code&gt;binary&lt;/code&gt;, &lt;code&gt;active&lt;/code&gt;, &lt;code&gt;packet&lt;/code&gt;, &lt;code&gt;nodelay&lt;/code&gt; and &lt;code&gt;deliver&lt;/code&gt; since they are used by the distribution protocol handler itself. Other raw socket options such as &lt;code&gt;packet_size&lt;/code&gt; may interfere severely, so beware!</source>
          <target state="translated">Не &lt;code&gt;nodelay&lt;/code&gt; &lt;code&gt;list&lt;/code&gt; опций сокета , &lt;code&gt;binary&lt;/code&gt; , &lt;code&gt;active&lt;/code&gt; , &lt;code&gt;packet&lt;/code&gt; , nodelay и &lt;code&gt;deliver&lt;/code&gt; поскольку они используются самим обработчиком протокола распространения. Другие параметры сырых сокетов, такие как &lt;code&gt;packet_size&lt;/code&gt; , могут сильно мешать, так что будьте осторожны!</target>
        </trans-unit>
        <trans-unit id="d8589c5d62b43bc732186af17da7031d4ee16b0e" translate="yes" xml:space="preserve">
          <source>Do not try to work around these problems by using alternative implementations of the missing algorithms! An application can only claim to be using a FIPS 140-2 validated cryptographic module if it uses it exclusively for every cryptographic operation.</source>
          <target state="translated">Не пытайтесь обойти эти проблемы,используя альтернативные реализации недостающих алгоритмов! Приложение может претендовать на использование криптографического модуля,сертифицированного по стандарту FIPS 140-2,только в том случае,если оно использует его исключительно для каждой криптографической операции.</target>
        </trans-unit>
        <trans-unit id="c5651954dc46885391a1490aca0bd0b8cd7aaad8" translate="yes" xml:space="preserve">
          <source>Do not use a &lt;code&gt;Context&lt;/code&gt; as argument in more than one call to hmac_update or hmac_final. The semantics of reusing old contexts in any way is undefined and could even crash the VM in earlier releases. The reason for this limitation is a lack of support in the underlying OpenSSL API.</source>
          <target state="translated">Не используйте &lt;code&gt;Context&lt;/code&gt; качестве аргумента более чем в одном вызове hmac_update или hmac_final. Семантика повторного использования старых контекстов каким-либо образом не определена и даже могла привести к сбою виртуальной машины в более ранних выпусках. Причина этого ограничения - отсутствие поддержки в базовом API OpenSSL.</target>
        </trans-unit>
        <trans-unit id="f5aebc45ba913c9940dd21c63300e4d022b07a05" translate="yes" xml:space="preserve">
          <source>Do not use a &lt;code&gt;Context&lt;/code&gt; as argument in more than one call to hmac_update or hmac_final. The semantics of reusing old contexts in any way is undefined and could even crash the VM in earlier releases. The reason for this limitation is a lack of support in the underlying libcrypto API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71cc879e1a9b34f9f8f3f275c6f8a0b14927f088" translate="yes" xml:space="preserve">
          <source>Do not use any of the keys in these examples. Use your own keys.</source>
          <target state="translated">Не используйте ни одну из клавиш в этих примерах.Используйте свои собственные ключи.</target>
        </trans-unit>
        <trans-unit id="3e3d2471e72d9c62935331dbceb31a316086f28e" translate="yes" xml:space="preserve">
          <source>Do not use atom cache over this connection.</source>
          <target state="translated">Не используйте атомный кэш над этим соединением.</target>
        </trans-unit>
        <trans-unit id="25bba2adbeee67303d12a8d397918f4ee984e826" translate="yes" xml:space="preserve">
          <source>Do not use the &lt;code&gt;&lt;a href=&quot;#compile_server&quot;&gt;compile server&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1356865819ece0e9984d524eb4ee4ec65b6f89d1" translate="yes" xml:space="preserve">
          <source>Do recover from a testcase failure using CTHs only a last resort. If used wrongly, it can be very difficult to determine which tests that pass or fail in a test run.</source>
          <target state="translated">Восстановитесь после сбоя теста с помощью КТГ только в крайнем случае.При неправильном использовании может быть очень сложно определить,какие тесты пройдут или не пройдут в тестовом режиме.</target>
        </trans-unit>
        <trans-unit id="42c7dd7ef6767859363ae1932a37452672de1454" translate="yes" xml:space="preserve">
          <source>Do something like this:</source>
          <target state="translated">Сделай что-нибудь вроде этого:</target>
        </trans-unit>
        <trans-unit id="038970f21cbb8e0488428da90f3fabf1886c4212" translate="yes" xml:space="preserve">
          <source>Do the following:</source>
          <target state="translated">Сделайте следующее:</target>
        </trans-unit>
        <trans-unit id="a21d03cec610102299b9a7e2e16ecfa597e7dd26" translate="yes" xml:space="preserve">
          <source>Do this on the command line or add the flags to the &lt;code&gt;LDFLAGS&lt;/code&gt; definition in your &lt;code&gt;Makefile&lt;/code&gt;.</source>
          <target state="translated">Сделайте это в командной строке или добавьте флаги в определение &lt;code&gt;LDFLAGS&lt;/code&gt; в вашем &lt;code&gt;Makefile&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a47ab2b6ee02bee6a7cd7e90891dab0064937d7b" translate="yes" xml:space="preserve">
          <source>DoS (Denial of Service) attacks are hard to fight at the node level. Here are firewalls and other means needed, but that is out of scope for this guide. However, some measures could be taken in the configuration of the SSH server to increase the resilence. The options to use are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70b871cacc7e26cab738e21fdfbb99e29543867f" translate="yes" xml:space="preserve">
          <source>Documents can be joined into a single new document using the constructor functions of this module. Note that the new document often represents a larger number of possible layouts than just the sum of the components.</source>
          <target state="translated">Документы могут быть объединены в единый новый документ с помощью конструкторских функций данного модуля.Обратите внимание,что новый документ часто представляет собой большее количество возможных компоновок,чем просто сумму компонентов.</target>
        </trans-unit>
        <trans-unit id="95accc1330c740146e565879f30ee3adeae7d539" translate="yes" xml:space="preserve">
          <source>Does a combined map/fold operation on the nodes of the tree. It begins by calling &lt;code&gt;Pre&lt;/code&gt; on the tree, using the &lt;code&gt;Initial&lt;/code&gt; value. It then deconstructs the top node of the returned tree and recurses on the children, using the returned value as the new initial and carrying the returned values from one call to the next. Finally it reassembles the top node from the children, calls &lt;code&gt;Post&lt;/code&gt; on it and returns the result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fa79c867895a507674579a9fc26baed8ad72e50" translate="yes" xml:space="preserve">
          <source>Does a combined map/fold operation on the nodes of the tree. This is similar to &lt;code&gt;map/2&lt;/code&gt;, but also propagates a value from each application of &lt;code&gt;Function&lt;/code&gt; to the next, starting with the given value &lt;code&gt;Initial&lt;/code&gt;, while doing a post-order traversal of the tree, much like &lt;code&gt;fold/3&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f98f19de9abb11350f639509d2fefdec19472e9" translate="yes" xml:space="preserve">
          <source>Does a fold operation over the nodes of the tree. The result is the value of &lt;code&gt;Function(X1, Function(X2, ... Function(Xn, Unit) ... ))&lt;/code&gt;, where &lt;code&gt;X1, ..., Xn&lt;/code&gt; are the nodes of &lt;code&gt;Tree&lt;/code&gt; in a post-order traversal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1cfa809f5e0beeb3084719dfa48bc7be279ead2" translate="yes" xml:space="preserve">
          <source>Does a mapfold operation over the immediate subtrees of a syntax tree. This is similar to &lt;code&gt;mapfold/3&lt;/code&gt;, but only on the immediate subtrees of &lt;code&gt;Tree&lt;/code&gt;, in left-to-right order; it does not include the root node of &lt;code&gt;Tree&lt;/code&gt;.</source>
          <target state="translated">Выполняет операцию сопоставления непосредственных поддеревьев синтаксического дерева. Это похоже на &lt;code&gt;mapfold/3&lt;/code&gt; , но только для непосредственных поддеревьев &lt;code&gt;Tree&lt;/code&gt; , в порядке слева направо; он не включает корневой узел &lt;code&gt;Tree&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7c7eea79bea4b2b9cde4e71269ff5f714a49433e" translate="yes" xml:space="preserve">
          <source>Does any calculated expression give the same result each time?</source>
          <target state="translated">Каждый раз ли какое-либо вычисленное выражение дает один и тот же результат?</target>
        </trans-unit>
        <trans-unit id="bba1dfbc290a2c0b8836c89e393aabd52f91892a" translate="yes" xml:space="preserve">
          <source>Does the IO polling for the emulator. See &lt;code&gt;erl +IOt&lt;/code&gt; for more details.</source>
          <target state="translated">Выполняет опрос ввода-вывода для эмулятора. См. &lt;code&gt;erl +IOt&lt;/code&gt; подробную информацию в erl + IOt .</target>
        </trans-unit>
        <trans-unit id="7bb0a8f4f91e9cee2cc8f3782dde3817b9d0995c" translate="yes" xml:space="preserve">
          <source>Does the same as &lt;code&gt;compile/1,2&lt;/code&gt;, but uses an existing &lt;code&gt;.beam&lt;/code&gt; file as base, i.e. the module is not compiled from source. Thus &lt;code&gt;compile_beam/1&lt;/code&gt; is faster than &lt;code&gt;compile/1,2&lt;/code&gt;.</source>
          <target state="translated">Выполняет то же самое, что и &lt;code&gt;compile/1,2&lt;/code&gt; , но использует существующий файл &lt;code&gt;.beam&lt;/code&gt; в качестве основы, т.е. модуль не компилируется из исходников. Таким образом, &lt;code&gt;compile_beam/1&lt;/code&gt; быстрее, чем &lt;code&gt;compile/1,2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="75b2ead98f7bae72a0d0db8e893db529be8b23f3" translate="yes" xml:space="preserve">
          <source>Does this mean that 3 is in inches? Or does it mean that 3 is in centimeters and is to be converted to inches? Erlang has a way to group things together to make things more understandable. These are called &lt;strong&gt;tuples&lt;/strong&gt; and are surrounded by curly brackets, &quot;{&quot; and &quot;}&quot;.</source>
          <target state="translated">Значит ли это, что 3 в дюймах? Или это означает, что 3 в сантиметрах и нужно преобразовать в дюймы? В Erlang есть способ группировать вещи вместе, чтобы сделать их более понятными. Они называются &lt;strong&gt;кортежами&lt;/strong&gt; и заключаются в фигурные скобки &quot;{&quot; и &quot;}&quot;.</target>
        </trans-unit>
        <trans-unit id="6ed065e8e03cc0ab27b9fb8825a8074464256599" translate="yes" xml:space="preserve">
          <source>Doing &lt;code&gt;./otp_build save_bootstrap&lt;/code&gt; from the &lt;code&gt;$ERL_TOP&lt;/code&gt; directory before doing &lt;code&gt;make clean&lt;/code&gt; will ensure that it will be possible to build after doing &lt;code&gt;make clean&lt;/code&gt;. &lt;code&gt;./otp_build save_bootstrap&lt;/code&gt; will be invoked automatically when &lt;code&gt;make&lt;/code&gt; is invoked from &lt;code&gt;$ERL_TOP&lt;/code&gt; with either the &lt;code&gt;clean&lt;/code&gt; target, or the default target. It is also automatically invoked if &lt;code&gt;./otp_build remove_prebuilt_files&lt;/code&gt; is invoked.</source>
          <target state="translated">Выполнение &lt;code&gt;./otp_build save_bootstrap&lt;/code&gt; из каталога &lt;code&gt;$ERL_TOP&lt;/code&gt; перед выполнением &lt;code&gt;make clean&lt;/code&gt; гарантирует, что сборка будет возможна после выполнения &lt;code&gt;make clean&lt;/code&gt; . &lt;code&gt;./otp_build save_bootstrap&lt;/code&gt; будет вызываться автоматически, когда &lt;code&gt;make&lt;/code&gt; вызывается из &lt;code&gt;$ERL_TOP&lt;/code&gt; либо с &lt;code&gt;clean&lt;/code&gt; целью, либо с целью по умолчанию. Он также автоматически вызывается, если вызывается &lt;code&gt;./otp_build remove_prebuilt_files&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d5095e2d590b30dd7a9838e94c8dcfb9378c175e" translate="yes" xml:space="preserve">
          <source>Doing &lt;code&gt;make clean&lt;/code&gt; in an arbitrary directory of the source tree, may remove files needed for bootstrapping the build.</source>
          <target state="translated">Выполнение &lt;code&gt;make clean&lt;/code&gt; в произвольном каталоге исходного дерева может удалить файлы, необходимые для начальной загрузки сборки.</target>
        </trans-unit>
        <trans-unit id="9ce2e932ba7981e63888adfbaf825292b137d8d5" translate="yes" xml:space="preserve">
          <source>Doing it this way we will get a communication pattern of information going from the leader thread out to all other managed threads and then back from the other threads to the leader thread. This since only the leader thread will write to the global counter and all other threads will only read it, and since each confirmation cache lines will only be written by one specific thread and only read by the leader thread. When each managed thread is distributed over different processors, the communication between processors will be a reflection of this communication pattern between threads.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bc2ad929348c83942c5653f9bd9442fa893930a" translate="yes" xml:space="preserve">
          <source>Doing it this way we will preserve the low latency at the expense of lost potential parallel execution of the signal and other code in the process sending the signal. This default behaviour can however be changed on port basis or system wide, forcing scheduling of all signals from processes to ports that are not part of a synchronous communication. That is, an unconditional request/response pair of asynchronous signals. In this case it is no potential for parallelism, and by that no point forcing scheduling of the request signal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c13571de66cf331de3075eb6e61e83544211de9" translate="yes" xml:space="preserve">
          <source>Doing too much work in each NIF call will &lt;code&gt;degrade responsiveness of the VM&lt;/code&gt;. Doing too little work may mean that the gain of the faster processing in the NIF is eaten up by the overhead of calling the NIF and checking the arguments.</source>
          <target state="translated">Слишком много работы в каждом вызове NIF &lt;code&gt;degrade responsiveness of the VM&lt;/code&gt; . Слишком мало работы может означать, что выигрыш от более быстрой обработки в NIF съедается накладными расходами на вызов NIF и проверку аргументов.</target>
        </trans-unit>
        <trans-unit id="4f3e8da48850a3c1cd0e52b36112de4478075ac8" translate="yes" xml:space="preserve">
          <source>Doing, for example, a &lt;code&gt;file:list_dir/1&lt;/code&gt; on one of these systems can return Unicode lists with code points &amp;gt; 255, depending on the content of the file system.</source>
          <target state="translated">Выполнение, например, &lt;code&gt;file:list_dir/1&lt;/code&gt; в одной из этих систем может вернуть списки Unicode с кодовыми точками&amp;gt; 255, в зависимости от содержимого файловой системы.</target>
        </trans-unit>
        <trans-unit id="79f88a9bb9f4ec699c8ec64acf057a2ef9a2bf7c" translate="yes" xml:space="preserve">
          <source>Domain name</source>
          <target state="translated">Доменное имя</target>
        </trans-unit>
        <trans-unit id="a0d641b3f1afe93a0323a0128a013778c7d8ae93" translate="yes" xml:space="preserve">
          <source>Domains</source>
          <target state="translated">Domains</target>
        </trans-unit>
        <trans-unit id="a3f7119b88e739226568a8bca00099c4a3fd6f89" translate="yes" xml:space="preserve">
          <source>Domains are used to specify which subsystem a certain log event originates from. The default handler will by default only log events with the domain &lt;code&gt;[otp]&lt;/code&gt; or without a domain. If you would like to include SSL log events into the default handler log you could do this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfed24b7dd9052ba2e02af6212f78e990e171c40" translate="yes" xml:space="preserve">
          <source>Don't</source>
          <target state="translated">Don't</target>
        </trans-unit>
        <trans-unit id="630fe2c2ec0f26d7c7ab82e064c7272e10c58466" translate="yes" xml:space="preserve">
          <source>Don't trace the &lt;code&gt;user&lt;/code&gt; process if using the default trace handler function.</source>
          <target state="translated">Не отслеживайте &lt;code&gt;user&lt;/code&gt; процесс при использовании функции обработчика трассировки по умолчанию.</target>
        </trans-unit>
        <trans-unit id="d72584f09d299f253db50d82b0ad0f89ba8e4dfc" translate="yes" xml:space="preserve">
          <source>Don't trace the group leader of the tracer process. If tracing has been switched on for all processes, call &lt;code&gt;dbg:p(TracerGLPid,clear)&lt;/code&gt; to stop tracing the group leader (&lt;code&gt;TracerGLPid&lt;/code&gt;). &lt;code&gt;process_info(TracerPid,group_leader)&lt;/code&gt; tells you which process this is (&lt;code&gt;TracerPid&lt;/code&gt; is returned from &lt;code&gt;dbg:get_tracer/0&lt;/code&gt;).</source>
          <target state="translated">Не отслеживайте лидера группы трассирующего процесса. Если трассировка была включена для всех процессов, вызовите &lt;code&gt;dbg:p(TracerGLPid,clear)&lt;/code&gt; чтобы остановить отслеживание лидера группы ( &lt;code&gt;TracerGLPid&lt;/code&gt; ). &lt;code&gt;process_info(TracerPid,group_leader)&lt;/code&gt; сообщает, какой это процесс ( &lt;code&gt;TracerPid&lt;/code&gt; возвращается из &lt;code&gt;dbg:get_tracer/0&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="054d20e29b31a7dc242eecac1da33a510fa0468c" translate="yes" xml:space="preserve">
          <source>Don't use this function for new programs! Use &lt;code&gt;&lt;a href=&quot;crypto#mac-3&quot;&gt;mac/3&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;crypto#macN-4&quot;&gt;macN/4&lt;/a&gt;&lt;/code&gt; in &lt;code&gt;the new api&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8ba45b217c72f3f75416d0775d28dd10e48873a" translate="yes" xml:space="preserve">
          <source>Don't use this function for new programs! Use &lt;code&gt;&lt;a href=&quot;crypto#mac-4&quot;&gt;mac/4&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;crypto#macN-5&quot;&gt;macN/5&lt;/a&gt;&lt;/code&gt; in &lt;code&gt;the new api&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b547dd5eb8a9ab71774df482eaf9a63b99216e9" translate="yes" xml:space="preserve">
          <source>Don't use this function for new programs! Use &lt;code&gt;&lt;a href=&quot;crypto#mac_final-1&quot;&gt;mac_final/1&lt;/a&gt;&lt;/code&gt; in &lt;code&gt;the new api&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3c1eb5c704da26324afa628da4101d147e12985" translate="yes" xml:space="preserve">
          <source>Don't use this function for new programs! Use &lt;code&gt;&lt;a href=&quot;crypto#mac_finalN-2&quot;&gt;mac_finalN/2&lt;/a&gt;&lt;/code&gt; in &lt;code&gt;the new api&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f4bf31835f16c522a03db912ad57fda743aa9ac" translate="yes" xml:space="preserve">
          <source>Don't use this function for new programs! Use &lt;code&gt;&lt;a href=&quot;crypto#mac_init-3&quot;&gt;mac_init/3&lt;/a&gt;&lt;/code&gt; in &lt;code&gt;the new api&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0d36416c033d36d114a19002281936f351061e7" translate="yes" xml:space="preserve">
          <source>Don't use this function for new programs! Use &lt;code&gt;&lt;a href=&quot;crypto#mac_update-2&quot;&gt;mac_update/2&lt;/a&gt;&lt;/code&gt; in &lt;code&gt;the new api&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29e0ca68b6e317c3f3073a2a5d354b33b114b9e8" translate="yes" xml:space="preserve">
          <source>Don't use this function for new programs! Use &lt;code&gt;&lt;a href=&quot;crypto#supports-1&quot;&gt;supports/1&lt;/a&gt;&lt;/code&gt; in &lt;code&gt;the new api&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93f156c9d5846e41687691e96e6feaa98351982e" translate="yes" xml:space="preserve">
          <source>Don't use this function for new programs! Use &lt;code&gt;the new api&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="556496238ed71dda06d56a97bfeabfb740671257" translate="yes" xml:space="preserve">
          <source>Don't use this function for new programs! Use &lt;code&gt;the-new-api&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a383c2a1d1bc03092c280bce505afe5bc0da6bba" translate="yes" xml:space="preserve">
          <source>Double UTF-8 Encoding</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ecae28cccab7ebddc79205dd193d3992e39be12" translate="yes" xml:space="preserve">
          <source>Double click on a module to launch its module window.</source>
          <target state="translated">Дважды щелкните по модулю,чтобы запустить его окно.</target>
        </trans-unit>
        <trans-unit id="524d6b5e2eb391c06d7d662842ea304a3428ac3a" translate="yes" xml:space="preserve">
          <source>Double click on an application name to launch an application window.</source>
          <target state="translated">Дважды щелкните по имени приложения,чтобы запустить окно приложения.</target>
        </trans-unit>
        <trans-unit id="717495e0494703ed6df39cf7df4eec3540f9699b" translate="yes" xml:space="preserve">
          <source>Double click on an application to launch its application window.</source>
          <target state="translated">Дважды щелкните по приложению,чтобы запустить его окно.</target>
        </trans-unit>
        <trans-unit id="e3ef104fbe6551b62e8dd5aed2698114cc2960eb" translate="yes" xml:space="preserve">
          <source>Double click on an module name to launch a module window.</source>
          <target state="translated">Дважды щелкните на имени модуля,чтобы запустить окно модуля.</target>
        </trans-unit>
        <trans-unit id="c9ca655edf4df9beaad28b4f1e93729b97bd7328" translate="yes" xml:space="preserve">
          <source>Double quote</source>
          <target state="translated">Двойная кавычка</target>
        </trans-unit>
        <trans-unit id="03b4a91fa37fa8f5be07f6954e031f5c6ab94101" translate="yes" xml:space="preserve">
          <source>Double-click to view the table content, or right-click and select option &lt;strong&gt;Show Table Content&lt;/strong&gt;. To view table information, select the table and activate menu &lt;strong&gt;View &amp;gt; Table information&lt;/strong&gt;, or right-click and select option &lt;strong&gt;Table info&lt;/strong&gt;.</source>
          <target state="translated">Дважды щелкните, чтобы просмотреть содержимое таблицы, или щелкните правой кнопкой мыши и выберите параметр &amp;laquo; &lt;strong&gt;Показать содержимое таблицы&amp;raquo;&lt;/strong&gt; . Чтобы просмотреть информацию о таблице, выберите таблицу и активируйте меню &amp;laquo; &lt;strong&gt;Вид&amp;raquo;&amp;gt; &amp;laquo;Информация о таблице&amp;raquo;&lt;/strong&gt; или щелкните правой кнопкой мыши и выберите параметр &amp;laquo; &lt;strong&gt;Информация о таблице&amp;raquo;&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="a5ea8d16867528d169d37b0acf9151c1e9bd53c9" translate="yes" xml:space="preserve">
          <source>Double-clicking a module brings up the View Module window.</source>
          <target state="translated">Двойной щелчок по модулю вызывает окно View Module (Вид модуля).</target>
        </trans-unit>
        <trans-unit id="bc28dc5bddbb75b67327c00dba2ea708871fd1af" translate="yes" xml:space="preserve">
          <source>Double-clicking a row in the &lt;strong&gt;Funs&lt;/strong&gt; tab has no effect.</source>
          <target state="translated">Двойной щелчок по строке на вкладке &amp;laquo; &lt;strong&gt;Развлечения&lt;/strong&gt; &amp;raquo; не имеет никакого эффекта.</target>
        </trans-unit>
        <trans-unit id="32db7d6a7602f3bd7441157fad4ae41131e6d87d" translate="yes" xml:space="preserve">
          <source>Double-clicking a row in the &lt;strong&gt;Timers&lt;/strong&gt; tab has no effect.</source>
          <target state="translated">Двойной щелчок по строке на вкладке &amp;laquo; &lt;strong&gt;Таймеры&lt;/strong&gt; &amp;raquo; не имеет никакого эффекта.</target>
        </trans-unit>
        <trans-unit id="124373b861cdaa55ee48064bb5c358db179e8021" translate="yes" xml:space="preserve">
          <source>Downgrades an application &lt;code&gt;App&lt;/code&gt; from the current version to a previous version &lt;code&gt;OldVsn&lt;/code&gt; located in &lt;code&gt;Dir&lt;/code&gt; according to the &lt;code&gt;.appup&lt;/code&gt; file.</source>
          <target state="translated">&lt;code&gt;OldVsn&lt;/code&gt; версию приложения &lt;code&gt;App&lt;/code&gt; с текущей версии до предыдущей версии OldVsn, расположенной в каталоге &lt;code&gt;Dir&lt;/code&gt; ,в соответствии с файлом &lt;code&gt;.appup&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="700c1cf0a5db3e391a57da8114050240b46bbc58" translate="yes" xml:space="preserve">
          <source>Download and run the installer from: URL: &lt;code&gt;&lt;a href=&quot;http://nsis.sourceforge.net/download&quot;&gt;http://nsis.sourceforge.net/download&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="213b68c824beb73900e74352c19c9f193673f2e0" translate="yes" xml:space="preserve">
          <source>Download from &lt;code&gt;&lt;a href=&quot;http://sourceforge.net/projects/wxwindows/files/3.0.0/&quot;&gt;http://sourceforge.net/projects/wxwindows/files/3.0.0/&lt;/a&gt;&lt;/code&gt; or get it from GitHub: &lt;code&gt;&lt;a href=&quot;https://github.com/wxWidgets/wxWidgets&quot;&gt;https://github.com/wxWidgets/wxWidgets&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">Загрузите с &lt;code&gt;&lt;a href=&quot;http://sourceforge.net/projects/wxwindows/files/3.0.0/&quot;&gt;http://sourceforge.net/projects/wxwindows/files/3.0.0/&lt;/a&gt;&lt;/code&gt; или получите с GitHub: &lt;code&gt;&lt;a href=&quot;https://github.com/wxWidgets/wxWidgets&quot;&gt;https://github.com/wxWidgets/wxWidgets&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8386933fe8a4856441fadd580fff299db5a4ba8b" translate="yes" xml:space="preserve">
          <source>Download from &lt;code&gt;&lt;a href=&quot;http://www.oracle.com/technetwork/java/javase/downloads&quot;&gt;http://www.oracle.com/technetwork/java/javase/downloads&lt;/a&gt;&lt;/code&gt;. We have also tested with IBM's JDK 1.6.0.</source>
          <target state="translated">Загрузите с &lt;code&gt;&lt;a href=&quot;http://www.oracle.com/technetwork/java/javase/downloads&quot;&gt;http://www.oracle.com/technetwork/java/javase/downloads&lt;/a&gt;&lt;/code&gt; . Мы также протестировали IBM JDK 1.6.0.</target>
        </trans-unit>
        <trans-unit id="dd74420bfa1633b901a0fe446335566f0d40938e" translate="yes" xml:space="preserve">
          <source>Download from &lt;code&gt;&lt;a href=&quot;https://sourceforge.net/projects/wxwindows/files/3.0.0/&quot;&gt;http://sourceforge.net/projects/wxwindows/files/3.0.0/&lt;/a&gt;&lt;/code&gt; or get it from GitHub: &lt;code&gt;&lt;a href=&quot;https://github.com/wxWidgets/wxWidgets&quot;&gt;https://github.com/wxWidgets/wxWidgets&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9768700bae7b9637335b2ee2dad1a46acc972fd" translate="yes" xml:space="preserve">
          <source>Driver binaries are created with &lt;code&gt;&lt;a href=&quot;#driver_alloc_binary&quot;&gt; driver_alloc_binary&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b39a8d218c5ca3f8fc57bb3b20d659b2903e3cd" translate="yes" xml:space="preserve">
          <source>Driver binaries are created with &lt;code&gt;&lt;a href=&quot;#driver_alloc_binary&quot;&gt;driver_alloc_binary&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#driver_alloc_binary&quot;&gt;driver_alloc_binary&lt;/a&gt;&lt;/code&gt; файлы драйверов создаются с помощью driver_alloc_binary .</target>
        </trans-unit>
        <trans-unit id="b2925af43f193d05bd9c132c6b819683491e75cf" translate="yes" xml:space="preserve">
          <source>Driver binaries are used in the &lt;code&gt;driver_output2&lt;/code&gt; and &lt;code&gt;driver_outputv&lt;/code&gt; calls, and in the queue. Also the driver callback &lt;code&gt;&lt;a href=&quot;driver_entry#outputv&quot;&gt; outputv&lt;/a&gt;&lt;/code&gt; uses driver binaries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="226324127bebbb68d2978adef667b4d99ce22ea6" translate="yes" xml:space="preserve">
          <source>Driver binaries are used in the &lt;code&gt;driver_output2&lt;/code&gt; and &lt;code&gt;driver_outputv&lt;/code&gt; calls, and in the queue. Also the driver callback &lt;code&gt;&lt;a href=&quot;driver_entry#outputv&quot;&gt;outputv&lt;/a&gt;&lt;/code&gt; uses driver binaries.</source>
          <target state="translated">Двоичные файлы драйверов используются в вызовах &lt;code&gt;driver_output2&lt;/code&gt; и &lt;code&gt;driver_outputv&lt;/code&gt; , а также в очереди. Также &lt;code&gt;&lt;a href=&quot;driver_entry#outputv&quot;&gt;outputv&lt;/a&gt;&lt;/code&gt; обратного вызова драйвера v использует двоичные файлы драйверов.</target>
        </trans-unit>
        <trans-unit id="124a28d8951fffb18c027deaea920077ee90b6a5" translate="yes" xml:space="preserve">
          <source>Driver callback &lt;code&gt;&lt;a href=&quot;driver_entry#call&quot;&gt;call&lt;/a&gt;&lt;/code&gt; now gets &lt;code&gt;ErlDrvSizeT&lt;/code&gt; as 4th and 6th arguments instead of previously &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;driver_entry#call&quot;&gt;call&lt;/a&gt;&lt;/code&gt; обратного вызова драйвера теперь получает &lt;code&gt;ErlDrvSizeT&lt;/code&gt; в качестве 4-го и 6-го аргументов вместо ранее &lt;code&gt;int&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d01a22bd67104135a24eaf6baba00db329c9e8ca" translate="yes" xml:space="preserve">
          <source>Driver callback &lt;code&gt;&lt;a href=&quot;driver_entry#control&quot;&gt;control&lt;/a&gt;&lt;/code&gt; now gets &lt;code&gt;ErlDrvSizeT&lt;/code&gt; as 4th and 6th arguments instead of previously &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ErlDrvSizeT&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;driver_entry#control&quot;&gt;control&lt;/a&gt;&lt;/code&gt; обратным вызовом драйвера теперь получает ErlDrvSizeT в качестве 4-го и 6-го аргументов вместо ранее &lt;code&gt;int&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1ecab8b8577923531622a9e5fde5fb02223fdfd2" translate="yes" xml:space="preserve">
          <source>Driver callback &lt;code&gt;&lt;a href=&quot;driver_entry#output&quot;&gt;output&lt;/a&gt;&lt;/code&gt; now gets &lt;code&gt;ErlDrvSizeT&lt;/code&gt; as 3rd argument instead of previously &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;driver_entry#output&quot;&gt;output&lt;/a&gt;&lt;/code&gt; обратного вызова драйвера теперь получает &lt;code&gt;ErlDrvSizeT&lt;/code&gt; в качестве третьего аргумента вместо ранее &lt;code&gt;int&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="114ae7f217d84b109210122fb59fad19e5bf87ab" translate="yes" xml:space="preserve">
          <source>Driver entries added by the &lt;code&gt;erl_ddll&lt;/code&gt; Erlang interface cannot be removed by using this interface.</source>
          <target state="translated">Записи драйвера, добавленные интерфейсом Erlang &lt;code&gt;erl_ddll&lt;/code&gt; , не могут быть удалены с помощью этого интерфейса.</target>
        </trans-unit>
        <trans-unit id="82d2f62d7632df80ba77337f6c50bfc5274b667e" translate="yes" xml:space="preserve">
          <source>Driver reload is already requested by another &lt;code&gt;&lt;a href=&quot;#users&quot;&gt;user&lt;/a&gt;&lt;/code&gt; when option &lt;code&gt;{reload, ReloadOption}&lt;/code&gt; was specified.</source>
          <target state="translated">Перезагрузка драйвера уже запрошена другим &lt;code&gt;&lt;a href=&quot;#users&quot;&gt;user&lt;/a&gt;&lt;/code&gt; когда была указана опция &lt;code&gt;{reload, ReloadOption}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7e9c5911b425f5ebbb8cd801d9119d40f84c087f" translate="yes" xml:space="preserve">
          <source>Drivers in General</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdb0405c87a9568c87483f079e1ba66cba5e95d4" translate="yes" xml:space="preserve">
          <source>Drops elements &lt;code&gt;Elem&lt;/code&gt; from &lt;code&gt;List1&lt;/code&gt; while &lt;code&gt;Pred(Elem)&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt; and returns the remaining list.</source>
          <target state="translated">Удаляет элементы &lt;code&gt;Elem&lt;/code&gt; из &lt;code&gt;List1&lt;/code&gt; ,в то время как &lt;code&gt;Pred(Elem)&lt;/code&gt; возвращает &lt;code&gt;true&lt;/code&gt; и возвращает оставшийся список.</target>
        </trans-unit>
        <trans-unit id="57da8705f25d5b4e6976bd3ef06dda9c36e25b6f" translate="yes" xml:space="preserve">
          <source>Drops the last element of a &lt;code&gt;List&lt;/code&gt;. The list is to be non-empty, otherwise the function crashes with a &lt;code&gt;function_clause&lt;/code&gt;.</source>
          <target state="translated">Удаляет последний элемент &lt;code&gt;List&lt;/code&gt; . Список не должен быть пустым, иначе функция выйдет из строя с предложением &lt;code&gt;function_clause&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7cc89c1203fd6f662ab09bafe6724b5d26d8fe8d" translate="yes" xml:space="preserve">
          <source>Drops usage of the latin1 atom encoding and unconditionally use utf8 encoding for all atoms. This will be changed to the default in a future major release of Erlang/OTP. Erlang/OTP systems as of R16B can decode this representation.</source>
          <target state="translated">Сбрасывает использование латинской1-атомной кодировки и безоговорочно использует кодировку utf8 для всех атомов.В будущем мажорном релизе Erlang/OTP это будет изменено на кодировку по умолчанию.Системы Erlang/OTP,начиная с R16B,могут декодировать это представление.</target>
        </trans-unit>
        <trans-unit id="6da6b942d555f9de8c518f3adfc3e33593613231" translate="yes" xml:space="preserve">
          <source>Due to a known bug in the underlying zlib library, &lt;code&gt;WindowBits&lt;/code&gt; values 8 and -8 do not work as expected. In zlib versions before 1.2.9 values 8 and -8 are automatically changed to 9 and -9. &lt;strong&gt;From zlib version 1.2.9 value -8 is rejected&lt;/strong&gt; causing &lt;code&gt;zlib:deflateInit/6&lt;/code&gt; to fail (8 is still changed to 9). It also seem possible that future versions of zlib may fix this bug and start accepting 8 and -8 as is.</source>
          <target state="translated">Из-за известной ошибки в базовой библиотеке zlib значения &lt;code&gt;WindowBits&lt;/code&gt; 8 и -8 не работают должным образом . В версиях zlib до 1.2.9 значения 8 и -8 автоматически меняются на 9 и -9. &lt;strong&gt;Начиная с версии zlib 1.2.9 значение -8 отклоняется,&lt;/strong&gt; что &lt;code&gt;zlib:deflateInit/6&lt;/code&gt; к сбою zlib: deflateInit / 6 (8 все еще изменено на 9). Также кажется возможным, что будущие версии zlib могут исправить эту ошибку и начать принимать 8 и -8 как есть.</target>
        </trans-unit>
        <trans-unit id="2822bca8453c024a99d2e74a4a983430ebe051e4" translate="yes" xml:space="preserve">
          <source>Due to irregular naming conventions, some cipher names in the old api are substitued by new names in the new api. For a list of retired names, see &lt;code&gt;Retired cipher names&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d53965dff14f4c80f0cc877167f2591ff39df7af" translate="yes" xml:space="preserve">
          <source>Due to the above, pull requests are only accepted on the &lt;code&gt;maint&lt;/code&gt; and the &lt;code&gt;master&lt;/code&gt; branches in our &lt;code&gt;&lt;a href=&quot;https://github.com/erlang/otp&quot;&gt;git repository&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;maint&lt;/code&gt; branch contains changes planned for the next &lt;code&gt;&lt;a href=&quot;versions#releases_and_patches&quot;&gt;maintenance patch package&lt;/a&gt;&lt;/code&gt; on the latest OTP release and the &lt;code&gt;master&lt;/code&gt; branch contain changes planned for the upcoming OTP release.</source>
          <target state="translated">В связи с вышеизложенным, выдвижными запросы принимаются только на &lt;code&gt;maint&lt;/code&gt; и &lt;code&gt;master&lt;/code&gt; - филиалах в нашем &lt;code&gt;&lt;a href=&quot;https://github.com/erlang/otp&quot;&gt;git repository&lt;/a&gt;&lt;/code&gt; . &lt;code&gt;maint&lt;/code&gt; ветвь содержит изменения , запланированные для следующего &lt;code&gt;&lt;a href=&quot;versions#releases_and_patches&quot;&gt;maintenance patch package&lt;/a&gt;&lt;/code&gt; на последней OTP выпуска и &lt;code&gt;master&lt;/code&gt; - ветви содержат изменения , запланированные для предстоящего выпуска ОТП.</target>
        </trans-unit>
        <trans-unit id="e660da5a81bd948d3a902e014b76d86f2073ccc5" translate="yes" xml:space="preserve">
          <source>Due to the specific event handlers, the output format slightly differed from other log events.</source>
          <target state="translated">В связи с особенностями обработчиков событий,формат вывода немного отличался от других событий журнала.</target>
        </trans-unit>
        <trans-unit id="3b3085bf736f2191e0ea07d229bfdc596b32d81d" translate="yes" xml:space="preserve">
          <source>Due to this, it impossible to list in documentation what algorithms that are available in a certain installation.</source>
          <target state="translated">В связи с этим,невозможно перечислить в документации,какие алгоритмы доступны в определенной установке.</target>
        </trans-unit>
        <trans-unit id="ca23fb39635657b375eb678fc3b116eafb204f3f" translate="yes" xml:space="preserve">
          <source>Dump All Data from EPMD</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce420c0f0f57998f7dfd12f03c2f66c6e5fb8dfe" translate="yes" xml:space="preserve">
          <source>Dump support for registries in erl_interface.</source>
          <target state="translated">Поддержка дампов реестров в erl_interface.</target>
        </trans-unit>
        <trans-unit id="1f4861e7450b77c73b64988357d50c9f18f21437" translate="yes" xml:space="preserve">
          <source>Dump the call graph into the specified file whose format is determined by the filename extension. Supported extensions are: &lt;code&gt;raw&lt;/code&gt;, &lt;code&gt;dot&lt;/code&gt;, and &lt;code&gt;ps&lt;/code&gt;. If something else is used as filename extension, default format &lt;code&gt;.raw&lt;/code&gt; is used.</source>
          <target state="translated">Выгрузить граф вызовов в указанный файл, формат которого определяется расширением имени файла. Поддерживаемые расширения: &lt;code&gt;raw&lt;/code&gt; , &lt;code&gt;dot&lt;/code&gt; и &lt;code&gt;ps&lt;/code&gt; . Если в качестве расширения имени файла используется что-то еще, по умолчанию используется формат &lt;code&gt;.raw&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7184caff176c543302376cf7fec1ce54dda7f0ad" translate="yes" xml:space="preserve">
          <source>Dump the mib-server data to &lt;code&gt;stdio&lt;/code&gt; (Destination = &lt;code&gt;io&lt;/code&gt;) or the specified file.</source>
          <target state="translated">Выгрузить данные mib-сервера в &lt;code&gt;stdio&lt;/code&gt; (Destination = &lt;code&gt;io&lt;/code&gt; ) или в указанный файл.</target>
        </trans-unit>
        <trans-unit id="b43f288c439d0cc70ad21f7402ed35ef10441966" translate="yes" xml:space="preserve">
          <source>Dumping tables</source>
          <target state="translated">Сбросные столы</target>
        </trans-unit>
        <trans-unit id="0e499b1b81d04e4a0963798172f050c39de889ef" translate="yes" xml:space="preserve">
          <source>Dumps a set of &lt;code&gt;ram_copies&lt;/code&gt; tables to disc. The next time the system is started, these tables are initiated with the data found in the files that are the result of this dump. None of the tables can have disc-resident replicas.</source>
          <target state="translated">&lt;code&gt;ram_copies&lt;/code&gt; на диск набор таблиц ram_copies . При следующем запуске системы эти таблицы будут инициированы данными, найденными в файлах, которые являются результатом этого дампа. Ни одна из таблиц не может иметь резидентных реплик.</target>
        </trans-unit>
        <trans-unit id="618d5bf84eb8eca747b739ce93060fbefb9445fd" translate="yes" xml:space="preserve">
          <source>Dumps all local tables of a Mnesia system into a text file, which can be edited (by a normal text editor) and then be reloaded with &lt;code&gt;mnesia:load_textfile/1&lt;/code&gt;. Only use this function for educational purposes. Use other functions to deal with real backups.</source>
          <target state="translated">Сохраняет все локальные таблицы системы Mnesia в текстовый файл, который можно редактировать (с помощью обычного текстового редактора), а затем перезагружать с помощью &lt;code&gt;mnesia:load_textfile/1&lt;/code&gt; . Используйте эту функцию только в образовательных целях. Используйте другие функции для работы с настоящими резервными копиями.</target>
        </trans-unit>
        <trans-unit id="2352588b3802464c989b95a72e96df7dfb9c6a62" translate="yes" xml:space="preserve">
          <source>Dumps table &lt;code&gt;Tab&lt;/code&gt; to file &lt;code&gt;Filename&lt;/code&gt;.</source>
          <target state="translated">Сохраняет таблицу &lt;code&gt;Tab&lt;/code&gt; в файл &lt;code&gt;Filename&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="64618333cf2b9688dec82445992bc0cf066f76aa" translate="yes" xml:space="preserve">
          <source>Dumps the contents of a registry to a &lt;code&gt;Mnesia&lt;/code&gt; table in an atomic manner, that is, either all data or no data is updated. If any errors are encountered while backing up the data, the entire operation is aborted.</source>
          <target state="translated">Сбрасывает содержимое реестра в таблицу &lt;code&gt;Mnesia&lt;/code&gt; атомарно, то есть обновляются либо все данные, либо никакие данные. Если при резервном копировании данных возникают какие-либо ошибки, вся операция прерывается.</target>
        </trans-unit>
        <trans-unit id="381fbf5f76a0f53fc2e4740d2ab79b2103d820ba" translate="yes" xml:space="preserve">
          <source>Dumps the current display to a text file.</source>
          <target state="translated">Сбрасывает текущее отображение в текстовый файл.</target>
        </trans-unit>
        <trans-unit id="be9c5accb485dc0af7b5ea90f3fd262da4a6064d" translate="yes" xml:space="preserve">
          <source>Dumps the current microstate statistics counters to a file that can be parsed with &lt;code&gt; file:consult/1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf5d48b8bd681f58ec639f6849aa1f7b2833bc07" translate="yes" xml:space="preserve">
          <source>Dumps the current microstate statistics counters to a file that can be parsed with &lt;code&gt;file:consult/1&lt;/code&gt;.</source>
          <target state="translated">Сбрасывает текущие счетчики статистики микросостояний в файл, который можно проанализировать с помощью &lt;code&gt;file:consult/1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ce3c464e1eb2b91ec8a590cec1b8615bf230f5fd" translate="yes" xml:space="preserve">
          <source>Duplicate keys are allowed in matching and match each pattern associated to the keys:</source>
          <target state="translated">Допускается дублирование ключей в соответствии и совпадение каждого шаблона,связанного с ключами:</target>
        </trans-unit>
        <trans-unit id="6d0d7bffffa2a241910a42a63e36f337c3babbe2" translate="yes" xml:space="preserve">
          <source>Duployan</source>
          <target state="translated">Duployan</target>
        </trans-unit>
        <trans-unit id="74dd08678521bd750ecafbc34a117a08ebb03272" translate="yes" xml:space="preserve">
          <source>Durability</source>
          <target state="translated">Durability</target>
        </trans-unit>
        <trans-unit id="d87dba077b41e186992c67cc1c5d9b2114870c66" translate="yes" xml:space="preserve">
          <source>During OTP adaptation it was tested on:</source>
          <target state="translated">Во время адаптации OTP он был протестирован:</target>
        </trans-unit>
        <trans-unit id="c602387b4583b4dcd026c20a3a1e8e7bf61738f3" translate="yes" xml:space="preserve">
          <source>During VM execution, code is accessed through a number of data structures. These &lt;strong&gt;code access structures&lt;/strong&gt; are</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc319898536d39c91dbdba24fb8261626c9c368d" translate="yes" xml:space="preserve">
          <source>During decoding, the &lt;code&gt;b&lt;/code&gt; field of the record gets the decoded value of the &lt;code&gt;b&lt;/code&gt; component, if present, otherwise the value &lt;code&gt;asn1_NOVALUE&lt;/code&gt;.</source>
          <target state="translated">Во время декодирования поле &lt;code&gt;b&lt;/code&gt; записи получает декодированное значение компонента &lt;code&gt;b&lt;/code&gt; , если он присутствует, в противном случае - значение &lt;code&gt;asn1_NOVALUE&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5902a6cefe9cb9c77a6268f9ff9e2f539dc55d82" translate="yes" xml:space="preserve">
          <source>During development of test suites, make no assumptions on the execution order of the test cases or suites. For example, a test case must not assume that a server it depends on is already started by a previous test case. Reasons for this follows:</source>
          <target state="translated">При разработке тестовых наборов не делайте никаких предположений о порядке выполнения тестовых наборов или наборов.Например,тестовый случай не должен предполагать,что сервер,от которого он зависит,уже запущен по предыдущему тестовому случаю.Причины этого заключаются в следующем:</target>
        </trans-unit>
        <trans-unit id="a18568484e447163575693c3283eebfe40833924" translate="yes" xml:space="preserve">
          <source>During development, this implementation was tested on:</source>
          <target state="translated">Во время разработки эта реализация была протестирована:</target>
        </trans-unit>
        <trans-unit id="60d0badad83e33a80707cc8700ad85c090cff46a" translate="yes" xml:space="preserve">
          <source>During evaluation of a function, no calls can be made to local functions. An undefined function error would be generated. However, the optional argument &lt;code&gt;LocalFunctionHandler&lt;/code&gt; can be used to define a function that is called when there is a call to a local function. The argument can have the following formats:</source>
          <target state="translated">Во время оценки функции нельзя вызывать локальные функции. Будет сгенерирована ошибка неопределенной функции. Однако необязательный аргумент &lt;code&gt;LocalFunctionHandler&lt;/code&gt; может использоваться для определения функции, которая вызывается при вызове локальной функции. Аргумент может иметь следующие форматы:</target>
        </trans-unit>
        <trans-unit id="7e943e84a017c01c905cb5e4d5d51f8602aca5de" translate="yes" xml:space="preserve">
          <source>During execution of tests started with &lt;code&gt;&lt;a href=&quot;ct#run_test-1&quot;&gt;ct:run_test/1&lt;/a&gt;&lt;/code&gt;, the Erlang shell process, controlling &lt;code&gt;stdin&lt;/code&gt;, remains the top-level process of the &lt;code&gt;Common Test&lt;/code&gt; system of processes. Consequently, the Erlang shell is not available for interaction during the test run. If this is not desirable, for example, because the shell is needed for debugging purposes or for interaction with the SUT during test execution, set start option &lt;code&gt;release_shell&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; (in the call to &lt;code&gt;ct:run_test/1&lt;/code&gt; or by using the corresponding test specification term, described later). This makes &lt;code&gt;Common Test&lt;/code&gt; release the shell immediately after the test suite compilation stage. To accomplish this, a test runner process is spawned to take control of the test execution. The effect is that &lt;code&gt;ct:run_test/1&lt;/code&gt; returns the pid of this process rather than the test result, which instead is printed to tty at the end of the test run.</source>
          <target state="translated">Во время выполнения тестов, запускаемых с помощью &lt;code&gt;&lt;a href=&quot;ct#run_test-1&quot;&gt;ct:run_test/1&lt;/a&gt;&lt;/code&gt; , процесс оболочки Erlang, управляющий стандартным &lt;code&gt;stdin&lt;/code&gt; , остается процессом верхнего уровня в &lt;code&gt;Common Test&lt;/code&gt; системе процессов. Следовательно, оболочка Erlang недоступна для взаимодействия во время выполнения теста. Если это нежелательно, например, потому что оболочка необходима для целей отладки или для взаимодействия с SUT во время выполнения теста, установите для параметра запуска &lt;code&gt;release_shell&lt;/code&gt; значение &lt;code&gt;true&lt;/code&gt; (при вызове &lt;code&gt;ct:run_test/1&lt;/code&gt; или с помощью соответствующей спецификации теста срок, описанный позже). Это делает &lt;code&gt;Common Test&lt;/code&gt; выпустить оболочку сразу после этапа компиляции набора тестов. Для этого создается процесс запуска тестов, который берет на себя управление выполнением теста. В результате &lt;code&gt;ct:run_test/1&lt;/code&gt; возвращает pid этого процесса, а не результат теста, который вместо этого выводится на tty в конце выполнения теста.</target>
        </trans-unit>
        <trans-unit id="13400d5db5a1edd12b574982f7247626a4d1afa8" translate="yes" xml:space="preserve">
          <source>During finalization, the time offset is adjusted and fixed so that current Erlang system time aligns with the current OS system time. As the time offset can change during the finalization, Erlang system time can do a time warp at this point. The time offset is from now on fixed until the runtime system terminates. If time correction has been enabled, the time correction from now on also makes adjustments to align Erlang system time with OS system time. When the system is in the final phase, it behaves exactly as in &lt;code&gt;&lt;a href=&quot;#No_Time_Warp_Mode&quot;&gt;no time warp mode&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Во время завершения смещение времени корректируется и фиксируется так, чтобы текущее системное время Erlang совпадало с текущим системным временем ОС. Поскольку временное смещение может измениться во время завершения, системное время Erlang может в этот момент сделать временную деформацию. С этого момента смещение по времени фиксировано до завершения работы системы времени выполнения. Если корректировка времени включена, корректировка времени с этого момента также вносит корректировки, чтобы согласовать системное время Erlang с системным временем ОС. Когда система находится в заключительной фазе, она ведет себя точно так же, как в режиме &lt;code&gt;&lt;a href=&quot;#No_Time_Warp_Mode&quot;&gt;no time warp mode&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b5ae35332de729b88634ea8fa41480ea60f856d4" translate="yes" xml:space="preserve">
          <source>During high load scenarios, the length of the handler message queue rarely grows in a linear and predictable way. Instead, whenever the handler process is scheduled in, it can have an almost arbitrary number of messages waiting in the message queue. It is for this reason that the overload protection mechanism is focused on acting quickly, and quite drastically, such as immediately dropping or flushing messages, when a large queue length is detected.</source>
          <target state="translated">При сценариях высокой нагрузки длина очереди сообщений обработчика редко растет линейно и предсказуемо.Вместо этого,всякий раз,когда запланирован обработчик,он может иметь в очереди сообщений практически произвольное количество сообщений.Именно по этой причине механизм защиты от перегрузки ориентирован на быстрые и довольно радикальные действия,такие как немедленное сброс или промывка сообщений при обнаружении большой длины очереди.</target>
        </trans-unit>
        <trans-unit id="7aee45b439d948d5b7d76272a33b0c86bf4997e8" translate="yes" xml:space="preserve">
          <source>During model testing, the first test results in &lt;code&gt;{badmatch,16}&lt;/code&gt; in &lt;code&gt;{toy,start,1}&lt;/code&gt;, why?</source>
          <target state="translated">Во время тестирования модели первый тест дает результат &lt;code&gt;{badmatch,16}&lt;/code&gt; в &lt;code&gt;{toy,start,1}&lt;/code&gt; , почему?</target>
        </trans-unit>
        <trans-unit id="455e439587f82803aed60d48bf6da00489a0f0b5" translate="yes" xml:space="preserve">
          <source>During release handling, non-affected processes continue normal execution. This can lead to time-outs or other problems. For example, new processes created in the time window between suspending processes using a certain module, and loading a new version of this module, can execute old code.</source>
          <target state="translated">Во время обработки релизов незатронутые процессы продолжают выполняться в обычном режиме.Это может привести к тайм-аутам или другим проблемам.Например,новые процессы,созданные в промежутке времени между приостановкой процессов с помощью определенного модуля и загрузкой новой версии этого модуля,могут выполнить старый код.</target>
        </trans-unit>
        <trans-unit id="c18e5c5d63b2a2373e5f2ba0870a87b60d5f9fcf" translate="yes" xml:space="preserve">
          <source>During runtime, Logger configuration is changed via API functions. See section &lt;code&gt;&lt;a href=&quot;logger#configuration_API&quot;&gt;Configuration API Functions&lt;/a&gt;&lt;/code&gt; in the &lt;code&gt;logger(3)&lt;/code&gt; manual page.</source>
          <target state="translated">Во время выполнения конфигурация Регистратора изменяется с помощью функций API. См. Раздел &amp;laquo; &lt;code&gt;&lt;a href=&quot;logger#configuration_API&quot;&gt;Configuration API Functions&lt;/a&gt;&lt;/code&gt; на странице руководства &lt;code&gt;logger(3)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="379217a163897fd309c000e61bde6b6a65a2d7a3" translate="yes" xml:space="preserve">
          <source>During the lifetime of a socket, the file descriptor &lt;strong&gt;has&lt;/strong&gt; to remain the same. That is, repeated calls to this callback with the same context &lt;code&gt;should&lt;/code&gt; always report the same file descriptor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f4912b2aa75fe22c51b1c959d8391db7589b749" translate="yes" xml:space="preserve">
          <source>During the lifetime of a socket, the pointer &lt;code&gt;*ctx&lt;/code&gt;&lt;strong&gt;has&lt;/strong&gt; to remain the same. That is, it cannot later be relocated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20bc30338e4de5739d661e0625d9f9d24eeca0b3" translate="yes" xml:space="preserve">
          <source>During the start of a system, when a client application &lt;strong&gt;could&lt;/strong&gt; start prior to the SNMP manager but is dependent upon it, and therefor has to wait for it to start.</source>
          <target state="translated">Во время запуска системы, когда клиентское приложение &lt;strong&gt;может&lt;/strong&gt; запускаться раньше, чем менеджер SNMP, но зависит от него и поэтому должно ждать его запуска.</target>
        </trans-unit>
        <trans-unit id="6fcbdddd017956cd0019e350d24a1939cbcd022e" translate="yes" xml:space="preserve">
          <source>During use of a port opened using &lt;code&gt;{spawn, Name}&lt;/code&gt;, &lt;code&gt;{spawn_driver, Name}&lt;/code&gt;, or &lt;code&gt;{spawn_executable, Name}&lt;/code&gt;, errors arising when sending messages to it are reported to the owning process using signals of the form &lt;code&gt;{'EXIT', Port, PosixCode}&lt;/code&gt;. For the possible values of &lt;code&gt;PosixCode&lt;/code&gt;, see &lt;code&gt;file(3)&lt;/code&gt;.</source>
          <target state="translated">При использовании порта, открытого с использованием &lt;code&gt;{spawn, Name}&lt;/code&gt; , &lt;code&gt;{spawn_driver, Name}&lt;/code&gt; или &lt;code&gt;{spawn_executable, Name}&lt;/code&gt; , ошибки, возникающие при отправке сообщений на него, сообщаются процессу-владельцу с помощью сигналов формы &lt;code&gt;{'EXIT', Port, PosixCode}&lt;/code&gt; . Возможные значения &lt;code&gt;PosixCode&lt;/code&gt; см. В &lt;code&gt;file(3)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b34f8bde4114e100ca5b54c517844199b48657fc" translate="yes" xml:space="preserve">
          <source>Dynamic Erlang Driver Linking</source>
          <target state="translated">Динамическая связь водителя Эрланг</target>
        </trans-unit>
        <trans-unit id="a44067361315b05c273ea0405f7864e1bd1bf576" translate="yes" xml:space="preserve">
          <source>Dynamic driver loader and linker.</source>
          <target state="translated">Динамический драйвер погрузчика и линкер.</target>
        </trans-unit>
        <trans-unit id="8d5b8175b7f2d3d1d7c21e7c0e5bbee352f3bc51" translate="yes" xml:space="preserve">
          <source>Dynamic node name. This is not a capability but rather used as a request from the connecting node to receive its node name from the accepting node as part of the handshake.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d13cc2f7953cdc9f758c18be9f7b8a02412bfdd7" translate="yes" xml:space="preserve">
          <source>Dynamic reconfiguration</source>
          <target state="translated">Динамическая реконфигурация</target>
        </trans-unit>
        <trans-unit id="13aa9a50086b6ac76b1cb8c6f3e9af0f9dba8709" translate="yes" xml:space="preserve">
          <source>Dynamic version detection</source>
          <target state="translated">Динамическое определение версии</target>
        </trans-unit>
        <trans-unit id="8c2f2c4c8b8adb6ccd5249a4e952ee59713af7b6" translate="yes" xml:space="preserve">
          <source>Dynamically adds a child specification to supervisor &lt;code&gt;SupRef&lt;/code&gt;, which starts the corresponding child process.</source>
          <target state="translated">Динамически добавляет &lt;code&gt;SupRef&lt;/code&gt; спецификацию к супервизору SupRef , который запускает соответствующий дочерний процесс.</target>
        </trans-unit>
        <trans-unit id="d3ec976f32b93a40ffe278626358ad5300808f4e" translate="yes" xml:space="preserve">
          <source>Dynamically load an engine from default directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdde27315f8fe4afa9c39d16385e94b637fcfb0c" translate="yes" xml:space="preserve">
          <source>Dynamically loaded into the Erlang machines address space, which is the only alternative if a precompiled version of Erlang is to be used</source>
          <target state="translated">Динамически загружается в адресное пространство машин Erlang,что является единственной альтернативой при использовании прекомпилированной версии Erlang.</target>
        </trans-unit>
        <trans-unit id="47cb4a6e83f17f59d314ef1f01f8353a46aca8ff" translate="yes" xml:space="preserve">
          <source>Dynamically started services are not handled by application takeover and failover behavior when &lt;code&gt;Inets&lt;/code&gt; is run as a distributed application. Nor are they automatically restarted when the &lt;code&gt;Inets&lt;/code&gt; application is restarted. As long as the &lt;code&gt;Inets&lt;/code&gt; application is operational, they are supervised and can be soft code upgraded.</source>
          <target state="translated">Когда &lt;code&gt;Inets&lt;/code&gt; работает как распределенное приложение, динамически запускаемые службы не обрабатываются за счет переключения приложений и переключения при отказе . Они также не перезапускаются автоматически при &lt;code&gt;Inets&lt;/code&gt; приложения Inets . Пока приложение &lt;code&gt;Inets&lt;/code&gt; работает, они контролируются и могут обновляться программным кодом.</target>
        </trans-unit>
        <trans-unit id="36f230b8bfa12c208281cb0fc0f2a5f1622391c2" translate="yes" xml:space="preserve">
          <source>Dynamically starts an &lt;code&gt;FTP&lt;/code&gt; session after the &lt;code&gt;ftp&lt;/code&gt; application has been started.</source>
          <target state="translated">Динамически запускает сеанс &lt;code&gt;FTP&lt;/code&gt; после запуска приложения &lt;code&gt;ftp&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1096e1dba137c5f15869f0236240de198946ed71" translate="yes" xml:space="preserve">
          <source>Dynamically starts an &lt;code&gt;Inets&lt;/code&gt; service after the &lt;code&gt;Inets&lt;/code&gt; application has been started.</source>
          <target state="translated">Динамически запускает службу &lt;code&gt;Inets&lt;/code&gt; после &lt;code&gt;Inets&lt;/code&gt; приложения Inets .</target>
        </trans-unit>
        <trans-unit id="3be880303bce628299b41c673e201ce5941eb9d6" translate="yes" xml:space="preserve">
          <source>Dynamically updates the compression level and compression strategy. The interpretation of &lt;code&gt;Level&lt;/code&gt; and &lt;code&gt;Strategy&lt;/code&gt; is as in &lt;code&gt;&lt;a href=&quot;#deflateInit-6&quot;&gt;deflateInit/6&lt;/a&gt;&lt;/code&gt;. This can be used to switch between compression and straight copy of the input data, or to switch to a different kind of input data requiring a different strategy. If the compression level is changed, the input available so far is compressed with the old level (and can be flushed); the new level takes effect only at the next call of &lt;code&gt;&lt;a href=&quot;#deflate-3&quot;&gt;deflate/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Динамически обновляет уровень сжатия и стратегию сжатия. Интерпретация &lt;code&gt;Level&lt;/code&gt; и &lt;code&gt;Strategy&lt;/code&gt; такая же, как в &lt;code&gt;&lt;a href=&quot;#deflateInit-6&quot;&gt;deflateInit/6&lt;/a&gt;&lt;/code&gt; . Это можно использовать для переключения между сжатием и прямым копированием входных данных или для переключения на другой тип входных данных, требующий другой стратегии. Если уровень сжатия изменен, доступный на данный момент ввод сжимается до старого уровня (и может быть сброшен); новый уровень вступает в силу только при следующем вызове &lt;code&gt;&lt;a href=&quot;#deflate-3&quot;&gt;deflate/3&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2ff063a21bc0ed86e6a4e8962b8993962632c55d" translate="yes" xml:space="preserve">
          <source>ECDSA</source>
          <target state="translated">ECDSA</target>
        </trans-unit>
        <trans-unit id="80e3d524de972452501598eb804f71534022451d" translate="yes" xml:space="preserve">
          <source>ECDSA is available with OpenSSL 0.9.8o or later if not disabled by configuration. To dynamically check availability, check that the atom &lt;code&gt;ecdsa&lt;/code&gt; is present in the list returned by &lt;code&gt;&lt;a href=&quot;crypto#supports-1&quot;&gt;crypto:supports(public_keys)&lt;/a&gt;&lt;/code&gt;. If the atom &lt;code&gt;ec_gf2m&lt;/code&gt; also is present, the characteristic two field curves are available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ebc0a5394d8ebbe656f6c55943154c331bf1d57" translate="yes" xml:space="preserve">
          <source>EEP 40 suggests that the language is also to allow for Unicode characters &amp;gt; 255 in variable names. Whether to implement that EEP is yet to be decided.</source>
          <target state="translated">EEP 40 предполагает, что язык также позволяет использовать символы Unicode&amp;gt; 255 в именах переменных. Реализовать ли этот EEP еще предстоит.</target>
        </trans-unit>
        <trans-unit id="db5d4c5f39084ed8a98f2f308319f6fc3f3fec69" translate="yes" xml:space="preserve">
          <source>ERL Scheme</source>
          <target state="translated">схема ERL</target>
        </trans-unit>
        <trans-unit id="778ad9b263b62197707df5c99c6055f019a776e0" translate="yes" xml:space="preserve">
          <source>ERTS</source>
          <target state="translated">ERTS</target>
        </trans-unit>
        <trans-unit id="084c82f27172e39caac8b32a5c5a3de227cdada9" translate="yes" xml:space="preserve">
          <source>ERTS 5.9 introduced two new integer types, &lt;code&gt;&lt;a href=&quot;#ErlDrvSizeT&quot;&gt;ErlDrvSizeT&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#ErlDrvSSizeT&quot;&gt;ErlDrvSSizeT&lt;/a&gt;&lt;/code&gt;, which can hold 64-bit sizes if necessary.</source>
          <target state="translated">В ERTS 5.9 представлены два новых целочисленных типа, &lt;code&gt;&lt;a href=&quot;#ErlDrvSizeT&quot;&gt;ErlDrvSizeT&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;#ErlDrvSSizeT&quot;&gt;ErlDrvSSizeT&lt;/a&gt;&lt;/code&gt; , которые при необходимости могут содержать 64-битные размеры.</target>
        </trans-unit>
        <trans-unit id="85dc1296e2947a844efb66d65438ec8b2ad8252a" translate="yes" xml:space="preserve">
          <source>ERTS User's Guide</source>
          <target state="translated">Руководство пользователя ERTS</target>
        </trans-unit>
        <trans-unit id="44f592d8979778308c2fb81544db747d809abcc9" translate="yes" xml:space="preserve">
          <source>ERTS version the release is intended for.</source>
          <target state="translated">Версия ERTS,для которой предназначен релиз.</target>
        </trans-unit>
        <trans-unit id="b612ad3744b82b6590ec2ed7801b6b4e71c44b19" translate="yes" xml:space="preserve">
          <source>ERTS/erl_driver</source>
          <target state="translated">ERTS/erl_driver</target>
        </trans-unit>
        <trans-unit id="c73f4aaaa252f5447d44e10d202890c287a9dd79" translate="yes" xml:space="preserve">
          <source>ERTS/erl_nif</source>
          <target state="translated">ERTS/erl_nif</target>
        </trans-unit>
        <trans-unit id="6dba289d5b794a18ff5aa78141b1611e24fd604f" translate="yes" xml:space="preserve">
          <source>ERTS/erl_prim_loader</source>
          <target state="translated">ERTS/erl_prim_loader</target>
        </trans-unit>
        <trans-unit id="003545865b7dee179c081e0d8ec83daa48033c14" translate="yes" xml:space="preserve">
          <source>ERTS/erl_tracer</source>
          <target state="translated">ERTS/erl_tracer</target>
        </trans-unit>
        <trans-unit id="207651703485ebb3590aa930b3610f9237b9b992" translate="yes" xml:space="preserve">
          <source>ERTS/erlang</source>
          <target state="translated">ERTS/erlang</target>
        </trans-unit>
        <trans-unit id="b64df6cef05617dfbd4d20c2d8b1cc669b3edfb0" translate="yes" xml:space="preserve">
          <source>ERTS/init</source>
          <target state="translated">ERTS/init</target>
        </trans-unit>
        <trans-unit id="95d08dc392df8636331cdbdbd25742c1d876eac5" translate="yes" xml:space="preserve">
          <source>ERTS/zlib</source>
          <target state="translated">ERTS/zlib</target>
        </trans-unit>
        <trans-unit id="4ecfa2773154e370fba9b018a43ed42a95f19d49" translate="yes" xml:space="preserve">
          <source>ESI</source>
          <target state="translated">ESI</target>
        </trans-unit>
        <trans-unit id="4bfaf341d88c4cc708fd53de2a4d0b2f36cb3596" translate="yes" xml:space="preserve">
          <source>ESI Callback Functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7eceb14d6ed554f3e39c3487db659c8d63e28acd" translate="yes" xml:space="preserve">
          <source>ETS</source>
          <target state="translated">ETS</target>
        </trans-unit>
        <trans-unit id="535109603d1d3983bd1504d46e58246d0b9b5c5b" translate="yes" xml:space="preserve">
          <source>ETS match specifications produce a return value. Usually the &lt;code&gt;MatchBody&lt;/code&gt; contains one single &lt;code&gt;ConditionExpression&lt;/code&gt; that defines the return value without any side effects. Calls with side effects are not allowed in the ETS context.</source>
          <target state="translated">Спецификации соответствия ETS производят возвращаемое значение. Обычно &lt;code&gt;MatchBody&lt;/code&gt; содержит одно выражение &lt;code&gt;ConditionExpression&lt;/code&gt; , которое определяет возвращаемое значение без каких-либо побочных эффектов. Вызовы с побочными эффектами не разрешены в контексте ETS.</target>
        </trans-unit>
        <trans-unit id="46b5844c30f17802c3dbe2a6160c75fb2768d9bb" translate="yes" xml:space="preserve">
          <source>EUnit builds on ideas from the family of unit testing frameworks for Object Oriented languages that originated with JUnit by Beck and Gamma (and Beck's previous framework SUnit for Smalltalk). However, EUnit uses techniques more adapted to functional and concurrent programming, and is typically less verbose than its relatives.</source>
          <target state="translated">EUnit базируется на идеях из семейства фреймворков модульного тестирования для Объектно-ориентированных языков,которые возникли с JUnit от Beck и Gamma (и предыдущего фреймворка SUnit от Beck для Smalltalk).Однако EUnit использует методики,более адаптированные к функциональному и параллельному программированию,и,как правило,менее многословны,чем его родственники.</target>
        </trans-unit>
        <trans-unit id="bb84cfb674cc9c07befa3e836772f6d49451b0b9" translate="yes" xml:space="preserve">
          <source>EUnit is a unit testing framework for Erlang. It is very powerful and flexible, is easy to use, and has small syntactical overhead.</source>
          <target state="translated">EUnit-это система единичного тестирования для Эрланга.Она очень мощная и гибкая,проста в использовании и имеет небольшие синтаксические накладные расходы.</target>
        </trans-unit>
        <trans-unit id="dcb5c9416725af47e0dde86a44e3726fa172542f" translate="yes" xml:space="preserve">
          <source>EVAL Scheme</source>
          <target state="translated">EVAL-схема</target>
        </trans-unit>
        <trans-unit id="e986cd2e713da6eeece44cdc6f88d025029df261" translate="yes" xml:space="preserve">
          <source>EXPERIMENTAL support in &lt;code&gt;Common Test&lt;/code&gt; for calling property-based tests.</source>
          <target state="translated">ЭКСПЕРИМЕНТАЛЬНАЯ поддержка в &lt;code&gt;Common Test&lt;/code&gt; для вызова тестов на основе свойств.</target>
        </trans-unit>
        <trans-unit id="3535800729023232937a5a75329edb6d668dc3ac" translate="yes" xml:space="preserve">
          <source>EXPERIMENTAL support in Common Test for calling property-based tests.</source>
          <target state="translated">ЭКСПЕРИМЕНТАЛЬНАЯ поддержка в Общем тесте для вызова тестов на основе свойств.</target>
        </trans-unit>
        <trans-unit id="d179ef076d3ba549c1eaefd6c4000085c521b739" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;-spec&lt;/code&gt; contract is to be a subtype of the respective &lt;code&gt;-callback&lt;/code&gt; contract.</source>
          <target state="translated">Каждый контракт &lt;code&gt;-spec&lt;/code&gt; должен быть подтипом соответствующего контракта &lt;code&gt;-callback&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bbeba8f50a6d88947fa61a1c562fdec9908b5f80" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;&lt;a href=&quot;#cycle&quot;&gt;cycle&lt;/a&gt;&lt;/code&gt; is included in some strongly connected component, which implies that a &lt;code&gt;&lt;a href=&quot;#topsort&quot;&gt;topological ordering&lt;/a&gt;&lt;/code&gt; of the created digraph always exists.</source>
          <target state="translated">Каждый &lt;code&gt;&lt;a href=&quot;#cycle&quot;&gt;cycle&lt;/a&gt;&lt;/code&gt; включен в некоторый сильно связный компонент, что означает, что &lt;code&gt;&lt;a href=&quot;#topsort&quot;&gt;topological ordering&lt;/a&gt;&lt;/code&gt; созданного орграфа всегда существует.</target>
        </trans-unit>
        <trans-unit id="b91672b8b9d9c1074d5c3616da5bbe87be145768" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;&lt;a href=&quot;#users&quot;&gt;user&lt;/a&gt;&lt;/code&gt; of the driver use &lt;strong&gt;literally&lt;/strong&gt; the same pathname for the driver when demanding load, but the &lt;code&gt;&lt;a href=&quot;#users&quot;&gt;users&lt;/a&gt;&lt;/code&gt; are not concerned with if the driver is already loaded from the file system or if the object code must be loaded from file system.</source>
          <target state="translated">Каждый &lt;code&gt;&lt;a href=&quot;#users&quot;&gt;user&lt;/a&gt;&lt;/code&gt; драйвера использует &lt;strong&gt;буквально один и&lt;/strong&gt; тот же путь к драйверу, когда запрашивает загрузку, но &lt;code&gt;&lt;a href=&quot;#users&quot;&gt;users&lt;/a&gt;&lt;/code&gt; не волнует, загружен ли драйвер из файловой системы или нужно ли загружать объектный код из файловой системы.</target>
        </trans-unit>
        <trans-unit id="4b7b0c5e0a6ab9f7071cc3d4509396575aab0f1b" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;Application&lt;/code&gt; (atom) and &lt;code&gt;AppVsn&lt;/code&gt; is the name and version of an application included in the release. The minimal release based on Erlang/OTP consists of the Kernel and STDLIB applications, so these applications must be included in the list.</source>
          <target state="translated">Каждое &lt;code&gt;Application&lt;/code&gt; (атом) и &lt;code&gt;AppVsn&lt;/code&gt; - это имя и версия приложения, включенного в выпуск. Минимальный выпуск, основанный на Erlang / OTP, состоит из приложений Kernel и STDLIB, поэтому эти приложения должны быть включены в список.</target>
        </trans-unit>
        <trans-unit id="756a2cbaa3819961fd2a604970deabef7e47b59c" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;DownToVsn&lt;/code&gt; is a previous version of the application to downgrade to.</source>
          <target state="translated">Каждый &lt;code&gt;DownToVsn&lt;/code&gt; - это предыдущая версия приложения, до которой нужно перейти на более раннюю версию.</target>
        </trans-unit>
        <trans-unit id="00de80a9bd6be23947f13b18c11247e44b2c0111" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;Instructions&lt;/code&gt; is a list of release handling instructions.</source>
          <target state="translated">Каждая &lt;code&gt;Instructions&lt;/code&gt; представляет собой список инструкций по работе с выпуском.</target>
        </trans-unit>
        <trans-unit id="cc4e66320e4a665094adabc03dbd562a3b958289" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;Opt&lt;/code&gt; is a tuple &lt;code&gt;{Key,Value}&lt;/code&gt;, which define a certain property of the application. All keys are optional. Default values are used for any omitted keys.</source>
          <target state="translated">Каждая &lt;code&gt;Opt&lt;/code&gt; - это кортеж &lt;code&gt;{Key,Value}&lt;/code&gt; , который определяет определенное свойство приложения. Все ключи необязательны. Для любых пропущенных ключей используются значения по умолчанию.</target>
        </trans-unit>
        <trans-unit id="12aba37f1fd213ff8df833310991e7fddad7fb81" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;Opt&lt;/code&gt; is a tuple &lt;code&gt;{Key,Value}&lt;/code&gt;, which defines a certain property of the application. All keys are optional. Default values are used for any omitted keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="481b5fd9f4ed559d8d313890de73dd0798ebaefc" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;UpFromVsn&lt;/code&gt; is a previous version of the application to upgrade from.</source>
          <target state="translated">Каждый &lt;code&gt;UpFromVsn&lt;/code&gt; - это предыдущая версия приложения, с которой нужно выполнить обновление.</target>
        </trans-unit>
        <trans-unit id="67d62d9c347c69602abcb833f8f9c4300f1c4701" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;declaration&lt;/code&gt; or &lt;code&gt;rule&lt;/code&gt; ends with a dot (the character &lt;code&gt;'.'&lt;/code&gt;).</source>
          <target state="translated">Каждое &lt;code&gt;declaration&lt;/code&gt; или &lt;code&gt;rule&lt;/code&gt; заканчивается точкой (символ &lt;code&gt;'.'&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="65770ef193425908bddd8a2670963b17addf7cbb" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;vacmViewTreeFamilyViewName&lt;/code&gt; refers to a collection of sub-trees.</source>
          <target state="translated">Каждый &lt;code&gt;vacmViewTreeFamilyViewName&lt;/code&gt; относится к набору поддеревьев.</target>
        </trans-unit>
        <trans-unit id="5ed7282900bb5fdbff5958dd466870a2cefa9c4c" translate="yes" xml:space="preserve">
          <source>Each CPU will be specified separately (assuming this information can be retrieved from the operating system), that is, a list with one &lt;code&gt;UtilDesc&lt;/code&gt; per CPU will be returned.</source>
          <target state="translated">Каждый ЦП будет указан отдельно (при условии, что эту информацию можно получить из операционной системы), то есть будет возвращен список с одним &lt;code&gt;UtilDesc&lt;/code&gt; на ЦП.</target>
        </trans-unit>
        <trans-unit id="34310bfb92de50fb3fdb84c9be6468f58c6dd477" translate="yes" xml:space="preserve">
          <source>Each Diameter application defined on a service is configured with a callback module that implements the &lt;code&gt;application interface&lt;/code&gt; through which diameter communicates the connectivity of remote peers, requests peer selection for outgoing requests, and communicates the reception of incoming Diameter request and answer messages. An application using diameter implements these application callback modules to provide the functionality of the Diameter node(s) it implements.</source>
          <target state="translated">Каждое приложение Diameter, определенное для службы, настраивается с помощью модуля обратного вызова, который реализует &lt;code&gt;application interface&lt;/code&gt; через который Diameter передает возможность подключения удаленных одноранговых узлов, запрашивает выбор однорангового узла для исходящих запросов и сообщает о приеме входящих сообщений Diameter-запроса и сообщений ответа. Приложение, использующее диаметр, реализует эти модули обратного вызова приложения, чтобы обеспечить функциональность реализуемых им узлов Diameter.</target>
        </trans-unit>
        <trans-unit id="55244236933611821163d373997b240e1ad6204a" translate="yes" xml:space="preserve">
          <source>Each Diameter application is also configured with a dictionary module that provide encode/decode functionality for outgoing/incoming Diameter messages belonging to the application. A dictionary module is generated from a &lt;code&gt;&lt;a href=&quot;diameter_dict&quot;&gt;dictionary file&lt;/a&gt;&lt;/code&gt; using the &lt;code&gt;&lt;a href=&quot;diameterc&quot;&gt;diameterc&lt;/a&gt;&lt;/code&gt; utility. Dictionaries for the RFC 6733 Diameter Common Messages, Base Accounting and Relay applications are provided with the diameter application.</source>
          <target state="translated">Каждое приложение Diameter также сконфигурировано с модулем словаря, который обеспечивает функции кодирования / декодирования исходящих / входящих сообщений Diameter, принадлежащих приложению. Словарь модуль генерируется из &lt;code&gt;&lt;a href=&quot;diameter_dict&quot;&gt;dictionary file&lt;/a&gt;&lt;/code&gt; с помощью &lt;code&gt;&lt;a href=&quot;diameterc&quot;&gt;diameterc&lt;/a&gt;&lt;/code&gt; утилиты. Словари для приложений &quot;Общие сообщения диаметра&quot;, &quot;Базовый учет&quot; и &quot;Ретрансляция&quot; RFC 6733 поставляются с приложением &quot;Диаметр&quot;.</target>
        </trans-unit>
        <trans-unit id="a1a9b6fe619d4d507768382269489dfde40d427b" translate="yes" xml:space="preserve">
          <source>Each Erlang process has its own stack and heap which are allocated in the same memory block and grow towards each other. When the stack and the heap &lt;code&gt;&lt;a href=&quot;https://github.com/erlang/otp/blob/OTP-18.0/erts/emulator/beam/beam_emu.c#L387&quot;&gt;meet&lt;/a&gt;&lt;/code&gt;, the garbage collector is triggered and memory is reclaimed. If not enough memory was reclaimed, the heap will grow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b240e5a20e54b9eb0bd09de0e35e15bc9e2fc55" translate="yes" xml:space="preserve">
          <source>Each Logger handler has a configured formatter specified as a module and a configuration term. The purpose of the formatter is to translate the log events to a final printable string (&lt;code&gt;unicode:chardata() &lt;/code&gt;) which can be written to the output device of the handler. See sections &lt;code&gt;&lt;a href=&quot;logger_chapter#handlers&quot;&gt;Handlers&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;logger_chapter#formatters&quot;&gt;Formatters&lt;/a&gt;&lt;/code&gt; in the Kernel User's Guide for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9eadf73a0c0284009b59a288825d06c68918732" translate="yes" xml:space="preserve">
          <source>Each Logger handler has a configured formatter specified as a module and a configuration term. The purpose of the formatter is to translate the log events to a final printable string (&lt;code&gt;unicode:chardata()&lt;/code&gt;) which can be written to the output device of the handler. See sections &lt;code&gt;&lt;a href=&quot;logger_chapter#handlers&quot;&gt;Handlers&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;logger_chapter#formatters&quot;&gt;Formatters&lt;/a&gt;&lt;/code&gt; in the Kernel User's Guide for more information.</source>
          <target state="translated">Каждый обработчик Logger имеет настроенное средство форматирования, указанное как модуль и термин конфигурации. Назначение средства форматирования - преобразовать события журнала в окончательную строку для печати ( &lt;code&gt;unicode:chardata()&lt;/code&gt; ), которая может быть записана на устройство вывода обработчика. Дополнительную информацию см. В разделах &amp;laquo; &lt;code&gt;&lt;a href=&quot;logger_chapter#handlers&quot;&gt;Handlers&lt;/a&gt;&lt;/code&gt; и средства &lt;code&gt;&lt;a href=&quot;logger_chapter#formatters&quot;&gt;Formatters&lt;/a&gt;&lt;/code&gt; в Руководстве пользователя ядра.</target>
        </trans-unit>
        <trans-unit id="5a2217ea4fb630dde08bc31f8f4df9f225a8d461" translate="yes" xml:space="preserve">
          <source>Each MIB is contained in one application. The MIB text files are stored under &lt;code&gt;mibs/&amp;lt;MIB&amp;gt;.mib&lt;/code&gt; in the application directory. The generated &lt;code&gt;.hrl&lt;/code&gt; files with constant declarations are stored under &lt;code&gt;include/&amp;lt;MIB&amp;gt;.hrl&lt;/code&gt;, and the compiled MIBs are stored under &lt;code&gt;priv/mibs/&amp;lt;MIB&amp;gt;.bin&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f596e5edca19c4fb206995b44af1186fe1cc57ca" translate="yes" xml:space="preserve">
          <source>Each MIB is contained in one application. The MIB text files are stored under &lt;code&gt;mibs/&amp;lt;MIB&amp;gt;.mib&lt;/code&gt; in the application directory. The generated &lt;code&gt;.hrl&lt;/code&gt; files with constant declarations are stored under &lt;code&gt;include/&amp;lt;MIB&amp;gt;.hrl&lt;/code&gt;, and the compiled MIBs are stored under &lt;code&gt;priv/mibs/&amp;lt;MIB&amp;gt;.bin&lt;/code&gt;. For example, the &lt;code&gt;OTP-MIB&lt;/code&gt; is included in the SASL application:</source>
          <target state="translated">Каждая MIB содержится в одном приложении. Текстовые файлы MIB хранятся в &lt;code&gt;mibs/&amp;lt;MIB&amp;gt;.mib&lt;/code&gt; в каталоге приложения. Сгенерированные файлы &lt;code&gt;.hrl&lt;/code&gt; с объявлениями констант хранятся в &lt;code&gt;include/&amp;lt;MIB&amp;gt;.hrl&lt;/code&gt; , а скомпилированные MIB хранятся в &lt;code&gt;priv/mibs/&amp;lt;MIB&amp;gt;.bin&lt;/code&gt; . Например, &lt;code&gt;OTP-MIB&lt;/code&gt; включен в приложение SASL:</target>
        </trans-unit>
        <trans-unit id="9402652033c3052c1ef00f2688bbca891d3a41f8" translate="yes" xml:space="preserve">
          <source>Each NIF must have an implementation in Erlang to be invoked if the function is called before the NIF library is successfully loaded. A typical such stub implementation is to call &lt;code&gt;&lt;a href=&quot;erlang#nif_error-1&quot;&gt; erlang:nif_error&lt;/a&gt;&lt;/code&gt; which will raise an exception. The Erlang function can also be used as a fallback implementation if the NIF library lacks implementation for some OS or hardware architecture for example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96c9a5aa6202f44778f708491759e58be7229aa8" translate="yes" xml:space="preserve">
          <source>Each OAM component in OTP is implemented as one sub-application, which can be included in a management application for the system. Notice that such a complete management application is not in the scope of this generic functionality. However, this section includes examples illustrating how such an application can be built.</source>
          <target state="translated">Каждый компонент OAM в OTP реализован как одно подприложение,которое может быть включено в приложение для управления системой.Обратите внимание,что такое полное приложение управления не входит в сферу этой общей функциональности.Однако,этот раздел включает примеры,иллюстрирующие,как такое приложение может быть построено.</target>
        </trans-unit>
        <trans-unit id="c6f070d243c99f1d0073b04e83aa5a92016f0467" translate="yes" xml:space="preserve">
          <source>Each Object Identifier (OID) is made up of a table name and a key. For example, if an employee record is represented by the tuple &lt;code&gt;{employee, 104732, klacke, 7, male, 98108, {221, 015}}&lt;/code&gt;, this record has an OID, which is the tuple &lt;code&gt;{employee, 104732}&lt;/code&gt;.</source>
          <target state="translated">Каждый идентификатор объекта (OID) состоит из имени таблицы и ключа. Например, если запись о сотруднике представлена ​​кортежем &lt;code&gt;{employee, 104732, klacke, 7, male, 98108, {221, 015}}&lt;/code&gt; , эта запись имеет OID, который является кортежем &lt;code&gt;{employee, 104732}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="407a711f08b93a1ab121c3edfb578a68342eed52" translate="yes" xml:space="preserve">
          <source>Each SSH client or daemon presents themselves to each other with brand and version. This may look like</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19d3a9c7f3953415557107b9a4fed3fe829f6388" translate="yes" xml:space="preserve">
          <source>Each Xref server is referred to by a unique name. The name is given when creating the server:</source>
          <target state="translated">Каждый Xref-сервер называется уникальным именем.Имя дается при создании сервера:</target>
        </trans-unit>
        <trans-unit id="305e27dbe27580eb3422e180a4b909efd7529202" translate="yes" xml:space="preserve">
          <source>Each allocator instance keeps track of the current utilization of its multi-block carriers. When the total utilization falls below the &quot;abandon carrier utilization limit&quot; it starts to inspect the utilization of the current carrier when deallocations are made. If also the utilization of the carrier falls below the &quot;abandon carrier utilization limit&quot; it unlinks the carrier from its data structure of available free blocks and inserts the carrier into the pool.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55f7fd00c871ae23ab70f17a8c5addef99b7eb4f" translate="yes" xml:space="preserve">
          <source>Each breakpoint has a &lt;strong&gt;trigger action&lt;/strong&gt; that specifies what is to happen when a process has reached it (and stopped):</source>
          <target state="translated">Каждая точка останова имеет &lt;strong&gt;действие триггера,&lt;/strong&gt; которое указывает, что должно произойти, когда процесс достигнет ее (и остановится):</target>
        </trans-unit>
        <trans-unit id="74b7aaf3eab007c9a636fe0aee9104cf045a98ec" translate="yes" xml:space="preserve">
          <source>Each carrier has an atomic word containing a pointer to the employing allocator instance and three bit flags; IN_POOL, BUSY and HOMECOMING.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37cf7b36c1772164368bfd9e88986c528dd6631f" translate="yes" xml:space="preserve">
          <source>Each certificate in the certificate chain is issued by the previous one.</source>
          <target state="translated">Каждый сертификат в цепочке сертификатов выдается предыдущим.</target>
        </trans-unit>
        <trans-unit id="69b524a56767c5a464e26aa46fb5fd446cb873ad" translate="yes" xml:space="preserve">
          <source>Each channel is an isolated &quot;pipe&quot; between a client-side process and a server-side process. Thoose process pairs could handle for example file transfers (sftp) or remote command execution (shell, exec and/or cli). If a custom shell is implemented, the user of the client could execute the special commands remotely. Note that the user is not necessarily a human but probably a system interfacing the SSH app.</source>
          <target state="translated">Каждый канал представляет собой изолированную &quot;трубу&quot; между клиентским и серверным процессами.Пары процессов могут обрабатывать,например,передачу файлов (sftp)или удаленное выполнение команд (shell,exec и/или cli).Если реализована пользовательская оболочка,то пользователь клиента может выполнять специальные команды удаленно.Обратите внимание,что пользователь не обязательно человек,но,вероятно,система,взаимодействующая с приложением SSH.</target>
        </trans-unit>
        <trans-unit id="dfca402560954e5b142511c310fe441400c48117" translate="yes" xml:space="preserve">
          <source>Each channel is an isolated &quot;pipe&quot; between a client-side process and a server-side process. Those process pairs could handle for example file transfers (sftp) or remote command execution (shell, exec and/or cli). If a custom shell is implemented, the user of the client could execute the special commands remotely. Note that the user is not necessarily a human but probably a system interfacing the SSH app.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab979cd854906b4b575e775a64fa69a8a251b961" translate="yes" xml:space="preserve">
          <source>Each character has exactly one Unicode general category property, specified by a two-letter acronym. For compatibility with Perl, negation can be specified by including a circumflex between the opening brace and the property name. For example, \p{^Lu} is the same as \P{Lu}.</source>
          <target state="translated">Каждый символ имеет ровно одно свойство Unicode общей категории,заданное двухбуквенным акронимом.Для совместимости с Perl,отрицание может быть задано включением циркумфлекса между открывающей скобкой и именем свойства.Например,\p{^Lu}совпадает с \P{Lu}.</target>
        </trans-unit>
        <trans-unit id="ee28d4558757e9383cb566bdb9b21b23482e6efe" translate="yes" xml:space="preserve">
          <source>Each character in the entry's name and value that cannot be expressed using the selected character encoding, is replaced by a string consisting of a U+0026 AMPERSAND character (&amp;amp;), a &quot;#&quot; (U+0023) character, one or more ASCII digits representing the Unicode code point of the character in base ten, and finally a &quot;;&quot; (U+003B) character.</source>
          <target state="translated">Каждый символ в имени и значении записи, который не может быть выражен с помощью выбранной кодировки символов, заменяется строкой, состоящей из символа U + 0026 AMPERSAND (&amp;amp;), символа &amp;laquo;#&amp;raquo; (U + 0023), одного или нескольких символов ASCII. цифры, представляющие кодовую точку Unicode символа с основанием десять, и, наконец, &quot;;&quot; (U + 003B) персонаж.</target>
        </trans-unit>
        <trans-unit id="4e32cc8ee72e653d2a8bc902dfb063ec8881e171" translate="yes" xml:space="preserve">
          <source>Each character is stored in one to four bytes depending on code point. The encoding is backward compatible with bytewise representation of 7-bit ASCII, as all 7-bit characters are stored in one single byte in UTF-8. The characters beyond code point 127 are stored in more bytes, letting the most significant bit in the first character indicate a multi-byte character. For details on the encoding, the RFC is publicly available.</source>
          <target state="translated">Каждый символ хранится от одного до четырех байт в зависимости от точки кода.Кодирование обратно совместимо с байтовым представлением 7-битного ASCII,так как все 7-битные символы хранятся в одном единственном байте в UTF-8.Символы,находящиеся за точкой 127 кода,хранятся в большем количестве байтов,что позволяет указать на многобайтовый символ,имеющий наиболее значительный бит в первом символе.Для получения более подробной информации о кодировке RFC является общедоступным.</target>
        </trans-unit>
        <trans-unit id="4fc3cbdbc904d26469c742d8bcc9d626c6068c21" translate="yes" xml:space="preserve">
          <source>Each client and server in &lt;code&gt;Inets&lt;/code&gt; is viewed as a service. Services can be configured to be started at application startup or dynamically in runtime. To run &lt;code&gt;Inets&lt;/code&gt; as a distributed application that handles application failover and takeover, configure the services to be started at application startup. When starting the &lt;code&gt;Inets&lt;/code&gt; application, the &lt;code&gt;Inets&lt;/code&gt; top supervisor starts a number of subsupervisors and worker processes for handling the provided services. When starting services dynamically, new children are added to the supervision tree, unless the service is started with the standalone option. In this case the service is linked to the calling process and all OTP application features, such as soft upgrade, are lost.</source>
          <target state="translated">Каждый клиент и сервер в &lt;code&gt;Inets&lt;/code&gt; рассматривается как услуга. Службы можно настроить для запуска при запуске приложения или динамически во время выполнения. Чтобы запустить &lt;code&gt;Inets&lt;/code&gt; как распределенное приложение, которое обрабатывает отработку отказа и подмену приложений, настройте службы, которые будут запускаться при запуске приложения. При запуске &lt;code&gt;Inets&lt;/code&gt; приложения, то &lt;code&gt;Inets&lt;/code&gt; верхнего руководитель начинает ряд subsupervisors и рабочие процессы для обработки предоставляемых услуг. При динамическом запуске служб новые дочерние элементы добавляются в дерево наблюдения, если служба не запускается с автономным параметром. В этом случае услуга связана с вызывающим процессом, и все функции приложения OTP, такие как мягкое обновление, теряются.</target>
        </trans-unit>
        <trans-unit id="ea67a6cd5709298d77de8bb9187376f1a4c88dd1" translate="yes" xml:space="preserve">
          <source>Each connection may have its own configuration of callback modules, re-send timers, transaction id ranges etc. and they may be re-configured on-the-fly.</source>
          <target state="translated">Каждое соединение может иметь свою собственную конфигурацию модулей обратного вызова,таймеров повторной отправки,диапазонов идентификаторов транзакций и т.д.и может быть переконфигурировано &quot;на лету&quot;.</target>
        </trans-unit>
        <trans-unit id="20dd79dc25ece038d84ac0a232d7057d3f1bdbf6" translate="yes" xml:space="preserve">
          <source>Each directory in the path to the requested asset is searched for an access file (default is &lt;code&gt;.htaccess&lt;/code&gt;), which restricts the web servers rights to respond to a request. If an access file is found, the rules in that file is applied to the request.</source>
          <target state="translated">В каждом каталоге на пути к запрошенному активу выполняется поиск файла доступа (по умолчанию &lt;code&gt;.htaccess&lt;/code&gt; ), который ограничивает права веб-серверов на ответ на запрос. Если файл доступа найден, к запросу применяются правила из этого файла.</target>
        </trans-unit>
        <trans-unit id="b25bd9fdb05a15b59ad44d21195b54cd7e275826" translate="yes" xml:space="preserve">
          <source>Each driver instance is associated with a port. Every port has a port owner process. Communication with the port is normally done through the port owner process. Most of the functions take the &lt;code&gt;port&lt;/code&gt; handle as an argument. This identifies the driver instance. Notice that this port handle must be stored by the driver, it is not given when the driver is called from the emulator (see &lt;code&gt;&lt;a href=&quot;driver_entry#emulator&quot;&gt; driver_entry&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e833d3f6d71147154bc1a01e9a0319de7a5932f" translate="yes" xml:space="preserve">
          <source>Each driver instance is associated with a port. Every port has a port owner process. Communication with the port is normally done through the port owner process. Most of the functions take the &lt;code&gt;port&lt;/code&gt; handle as an argument. This identifies the driver instance. Notice that this port handle must be stored by the driver, it is not given when the driver is called from the emulator (see &lt;code&gt;&lt;a href=&quot;driver_entry#emulator&quot;&gt;driver_entry&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">Каждый экземпляр драйвера связан с портом. У каждого порта есть процесс владельца порта. Связь с портом обычно осуществляется через процесс владельца порта. Большинство функций принимают в качестве аргумента дескриптор &lt;code&gt;port&lt;/code&gt; . Это идентифицирует экземпляр драйвера. Обратите внимание, что этот дескриптор порта должен быть сохранен драйвером, он не указывается, когда драйвер вызывается из эмулятора (см. &lt;code&gt;&lt;a href=&quot;driver_entry#emulator&quot;&gt;driver_entry&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="56bbcc2fd8950bda744a20f900b28a4f1c7248c3" translate="yes" xml:space="preserve">
          <source>Each element &lt;code&gt;Ei&lt;/code&gt; specifies a &lt;strong&gt;segment&lt;/strong&gt; of the bit string. Each element &lt;code&gt;Ei&lt;/code&gt; is a value, followed by an optional &lt;strong&gt;size expression&lt;/strong&gt; and an optional &lt;strong&gt;type specifier list&lt;/strong&gt;.</source>
          <target state="translated">Каждый элемент &lt;code&gt;Ei&lt;/code&gt; определяет &lt;strong&gt;сегмент&lt;/strong&gt; битовой строки. Каждый элемент &lt;code&gt;Ei&lt;/code&gt; является значением, за которым следует необязательное &lt;strong&gt;выражение размера&lt;/strong&gt; и необязательный &lt;strong&gt;список спецификаторов типа&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="003d91a46f3f2bb18a1d90076a666cbaafc26e27" translate="yes" xml:space="preserve">
          <source>Each element specifies a certain &lt;strong&gt;segment&lt;/strong&gt; of the bitstring. A segment is a set of contiguous bits of the binary (not necessarily on a byte boundary). The first element specifies the initial segment, the second element specifies the following segment, and so on.</source>
          <target state="translated">Каждый элемент определяет определенный &lt;strong&gt;сегмент&lt;/strong&gt; цепочки битов. Сегмент - это набор смежных битов двоичного файла (не обязательно на границе байта). Первый элемент определяет начальный сегмент, второй элемент определяет следующий сегмент и так далее.</target>
        </trans-unit>
        <trans-unit id="5dc571d2da8f66291be308f1e1c565752924414f" translate="yes" xml:space="preserve">
          <source>Each employee works on a number of projects, hence the &lt;code&gt;in_proj&lt;/code&gt; relationship.</source>
          <target state="translated">Каждый сотрудник работает над несколькими проектами, отсюда и связь &lt;code&gt;in_proj&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="94646e4e155f2a1439c478997cfa6928f0711fd2" translate="yes" xml:space="preserve">
          <source>Each entry in the resulting list contains the following corresponding information about the program forms:</source>
          <target state="translated">Каждая запись в результирующем списке содержит следующую соответствующую информацию о программных формах:</target>
        </trans-unit>
        <trans-unit id="864db500c08a498afdb397e4ebfd890146597d0d" translate="yes" xml:space="preserve">
          <source>Each entry is a term:</source>
          <target state="translated">Каждая запись-это термин:</target>
        </trans-unit>
        <trans-unit id="70625b8b976b15fa4bf08d632aae581c8cb53c9f" translate="yes" xml:space="preserve">
          <source>Each entry is a tuple of size four:</source>
          <target state="translated">Каждая запись-кортеж четвертого размера:</target>
        </trans-unit>
        <trans-unit id="ef1dcdb71453a9f45d4f9107238b7424b3b3c1cb" translate="yes" xml:space="preserve">
          <source>Each entry is a tuple of size two:</source>
          <target state="translated">Каждая запись-кортеж второго размера:</target>
        </trans-unit>
        <trans-unit id="a06e8aaaa5386a6a92b409b8c6444e276227cb07" translate="yes" xml:space="preserve">
          <source>Each entry is a tuple:</source>
          <target state="translated">Каждая запись-кортеж:</target>
        </trans-unit>
        <trans-unit id="d485e82d6d63995f59c4df6b1bc20bfb19eec6ff" translate="yes" xml:space="preserve">
          <source>Each entry is one of the terms, one entry corresponds to one row in one of the tables.</source>
          <target state="translated">Каждая запись является одним из терминов,одна запись соответствует одной строке в одной из таблиц.</target>
        </trans-unit>
        <trans-unit id="4b7bb37e8a1565d711f264425424279d0037ae37" translate="yes" xml:space="preserve">
          <source>Each event handler is implemented as a callback module exporting a predefined set of functions. The relationship between the behavior functions and the callback functions is as follows:</source>
          <target state="translated">Каждый обработчик событий реализован в виде модуля обратного вызова,экспортирующего предопределенный набор функций.Взаимосвязь между поведенческими функциями и функциями обратного вызова выглядит следующим образом:</target>
        </trans-unit>
        <trans-unit id="d2b50254a125e7c325c0c24b3cf7ecc55cb97d9a" translate="yes" xml:space="preserve">
          <source>Each execution of a match specification is done against a match target term. The format and content of the target term depends on the context in which the match is done. The match target for ETS is always a full table tuple. The match target for call trace is always a list of all function arguments. The match target for event trace depends on the event type, see table below.</source>
          <target state="translated">Каждое выполнение спецификации на соответствие выполняется в соответствии с целевым сроком.Формат и содержание целевого термина зависит от контекста,в котором выполняется сравнение.Целевой срок соответствия для ETS всегда является полным кортежом таблицы.Целевая метка соответствия для трассы вызова всегда представляет собой список всех аргументов функции.Целевое значение для трассы события зависит от типа события,см.таблицу ниже.</target>
        </trans-unit>
        <trans-unit id="6e17c8755f13e7dc1db4b809ecd86d0b89dadb10" translate="yes" xml:space="preserve">
          <source>Each field in a record declaration can have an optional, explicit, default initializer expression, and an optional type.</source>
          <target state="translated">Каждое поле в объявлении записи может иметь необязательное,явное выражение инициализатора по умолчанию,а также необязательный тип.</target>
        </trans-unit>
        <trans-unit id="35a4d77421dde7b897b30082bb04311e87287900" translate="yes" xml:space="preserve">
          <source>Each file in the list will be read and processed separately. For every file, each reference to some module M, such that there is an entry &lt;code&gt;{&amp;lt;em&amp;gt;M&amp;lt;/em&amp;gt;, &amp;lt;em&amp;gt;M1&amp;lt;/em&amp;gt;}&lt;/code&gt; in &lt;code&gt;Renamings&lt;/code&gt;, will be changed to the corresponding M1. Furthermore, if a file F defines module M, and there is an entry &lt;code&gt;{&amp;lt;em&amp;gt;M&amp;lt;/em&amp;gt;, &amp;lt;em&amp;gt;M1&amp;lt;/em&amp;gt;}&lt;/code&gt; in &lt;code&gt;Renamings&lt;/code&gt;, a new file named &lt;code&gt;&amp;lt;em&amp;gt;M1&amp;lt;/em&amp;gt;.erl&lt;/code&gt; will be created in the same directory as F, containing the source code for module M, renamed to M1. If M does not have an entry in &lt;code&gt;Renamings&lt;/code&gt;, the module is not renamed, only updated, and the resulting source code is written to &lt;code&gt;&amp;lt;em&amp;gt;M&amp;lt;/em&amp;gt;.erl&lt;/code&gt; (typically, this overwrites the original file). The &lt;code&gt;suffix&lt;/code&gt; option (see below) can be used to change the default &quot;&lt;code&gt;.erl&lt;/code&gt;&quot; suffix for the generated files.</source>
          <target state="translated">Каждый файл в списке будет прочитан и обработан отдельно. Для каждого файла каждая ссылка на некоторый модуль M, такой, что есть запись &lt;code&gt;{&amp;lt;em&amp;gt;M&amp;lt;/em&amp;gt;, &amp;lt;em&amp;gt;M1&amp;lt;/em&amp;gt;}&lt;/code&gt; в &lt;code&gt;Renamings&lt;/code&gt; , будет изменена на соответствующий M1. Более того, если файл F определяет модуль M и есть запись &lt;code&gt;{&amp;lt;em&amp;gt;M&amp;lt;/em&amp;gt;, &amp;lt;em&amp;gt;M1&amp;lt;/em&amp;gt;}&lt;/code&gt; в &lt;code&gt;Renamings&lt;/code&gt; , создается новый файл с именем &lt;code&gt;&amp;lt;em&amp;gt;M1&amp;lt;/em&amp;gt;.erl&lt;/code&gt; будет создан в том же каталоге, что и F, и будет содержать исходный код для модуля M, переименованного в M1. Если M не имеет записи в &lt;code&gt;Renamings&lt;/code&gt; , модуль не переименовывается, а только обновляется, и полученный исходный код записывается в &lt;code&gt;&amp;lt;em&amp;gt;M&amp;lt;/em&amp;gt;.erl&lt;/code&gt; (обычно,это перезаписывает исходный файл). &lt;code&gt;suffix&lt;/code&gt; &lt;code&gt;.erl&lt;/code&gt; суффикс (см. ниже) может использоваться для изменения суффикса &quot; .erl &quot; по умолчанию для сгенерированных файлов.</target>
        </trans-unit>
        <trans-unit id="49eefe6dc97d048f34dac5cabf7a205b16b70416" translate="yes" xml:space="preserve">
          <source>Each filter set consists of a &lt;strong&gt;log level check&lt;/strong&gt;, followed by zero or more &lt;strong&gt;filter functions&lt;/strong&gt;.</source>
          <target state="translated">Каждый набор фильтров состоит из &lt;strong&gt;проверки уровня журнала&lt;/strong&gt; , за которой следуют ноль или более &lt;strong&gt;функций фильтрации&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="a9677f896b4c452b2ab214f54b61495167737353" translate="yes" xml:space="preserve">
          <source>Each function takes the argument &lt;code&gt;NameDb&lt;/code&gt;, which is a tuple &lt;code&gt;{Name, Db}&lt;/code&gt;, to identify which database the functions should use. &lt;code&gt;Name&lt;/code&gt; is the symbolic name of the managed object as defined in the MIB, and &lt;code&gt;Db&lt;/code&gt; is either &lt;code&gt;volatile&lt;/code&gt;, &lt;code&gt;persistent&lt;/code&gt;, or &lt;code&gt;mnesia&lt;/code&gt;. If it is &lt;code&gt;mnesia&lt;/code&gt;, all variables are stored in the Mnesia table &lt;code&gt;snmp_variables&lt;/code&gt; which must be a table with two attributes (not a Mnesia SNMP table). The SNMP tables are stored in Mnesia tables with the same names as the SNMP tables. All functions assume that a Mnesia table exists with the correct name and attributes. It is the programmer's responsibility to ensure this. Specifically, if variables are stored in Mnesia, the table &lt;code&gt;snmp_variables&lt;/code&gt; must be created by the programmer. The record definition for this table is defined in the file &lt;code&gt;snmp/include/snmp_types.hrl&lt;/code&gt;.</source>
          <target state="translated">Каждая функция принимает аргумент &lt;code&gt;NameDb&lt;/code&gt; , который представляет собой кортеж &lt;code&gt;{Name, Db}&lt;/code&gt; , чтобы определить, какую базу данных должны использовать функции. &lt;code&gt;Name&lt;/code&gt; - это символическое имя управляемого объекта, как определено в MIB, а &lt;code&gt;Db&lt;/code&gt; может быть &lt;code&gt;volatile&lt;/code&gt; , &lt;code&gt;persistent&lt;/code&gt; или &lt;code&gt;mnesia&lt;/code&gt; . Если это &lt;code&gt;mnesia&lt;/code&gt; , все переменные хранятся в таблице Mnesia &lt;code&gt;snmp_variables&lt;/code&gt; которая должна быть таблицей с двумя атрибутами (не таблицей Mnesia SNMP). Таблицы SNMP хранятся в таблицах Mnesia с теми же именами, что и таблицы SNMP. Все функции предполагают, что таблица Mnesia существует с правильным именем и атрибутами. За это отвечает программист. В частности, если переменные хранятся в Mnesia, таблица &lt;code&gt;snmp_variables&lt;/code&gt; должна быть создана программистом. Определение записи для этой таблицы определяется в файле &lt;code&gt;snmp/include/snmp_types.hrl&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9c3a776596635896e94dd107e595da2486f16447" translate="yes" xml:space="preserve">
          <source>Each generic instruction has an opcode. The opcode is an integer, greater than or equal to 1. For an external generic instruction, it must be explicitly given &lt;code&gt;genop.tab&lt;/code&gt;, while internal generic instructions are automatically numbered by &lt;strong&gt;beam_makeops&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c1190978962592425d6b4592ae603c7ba88ca4d" translate="yes" xml:space="preserve">
          <source>Each instance of &lt;code&gt;ErlNifResourceType&lt;/code&gt; represents a class of memory-managed resource objects that can be garbage collected. Each resource type has a unique name and a destructor function that is called when objects of its type are released.</source>
          <target state="translated">Каждый экземпляр &lt;code&gt;ErlNifResourceType&lt;/code&gt; представляет собой класс объектов ресурсов, управляемых памятью, которые могут быть удалены сборщиком мусора. Каждый тип ресурса имеет уникальное имя и функцию деструктора, которая вызывается при освобождении объектов этого типа.</target>
        </trans-unit>
        <trans-unit id="45e1ea35cab57f7ba717000c69e30acd0ba46d49" translate="yes" xml:space="preserve">
          <source>Each key part is 64 bits (in CBC mode only 8 bits are used)</source>
          <target state="translated">Каждая ключевая часть составляет 64 бита (в режиме CBC используется только 8 бит).</target>
        </trans-unit>
        <trans-unit id="35103fefad295298276e9cfdc33729d99099ac1d" translate="yes" xml:space="preserve">
          <source>Each key-value association in the map is called an &lt;strong&gt;association pair&lt;/strong&gt;. The key and value parts of the pair are called &lt;strong&gt;elements&lt;/strong&gt;. The number of association pairs is said to be the &lt;strong&gt;size&lt;/strong&gt; of the map.</source>
          <target state="translated">Каждая ассоциация &quot;ключ-значение&quot; на карте называется &lt;strong&gt;парой ассоциаций&lt;/strong&gt; . Ключ и значение пары называются &lt;strong&gt;элементами&lt;/strong&gt; . Количество ассоциативных пар называется &lt;strong&gt;размером&lt;/strong&gt; карты.</target>
        </trans-unit>
        <trans-unit id="603c93584be31e061e41c3144cba0c9593d7cc4e" translate="yes" xml:space="preserve">
          <source>Each list element is copied only once. The growing result &lt;code&gt;Acc&lt;/code&gt; is the right operand for the &lt;code&gt;++&lt;/code&gt; operator, and it is &lt;strong&gt;not&lt;/strong&gt; copied.</source>
          <target state="translated">Каждый элемент списка копируется только один раз. Растущий результат &lt;code&gt;Acc&lt;/code&gt; является правильным операндом для оператора &lt;code&gt;++&lt;/code&gt; , и он &lt;strong&gt;не&lt;/strong&gt; копируется.</target>
        </trans-unit>
        <trans-unit id="53cec8595242fffcee11b05ab4b26518e9f93ca7" translate="yes" xml:space="preserve">
          <source>Each managed object can exist in many instances within a SNMP entity. To identify the instances, specified by an MIB module, a method to distinguish the actual instance by its 'scope' or context is used. Often the context is a physical or a logical device. It can include multiple devices, a subset of a single device or a subset of multiple devices, but the context is always defined as a subset of a single SNMP entity. To be able to identify a specific item of management information within an SNMP entity, the context, the object type and its instance must be used.</source>
          <target state="translated">Каждый управляемый объект может существовать во многих случаях внутри объекта SNMP.Для идентификации экземпляров,указанных модулем MIB,используется метод,позволяющий отличить реальный экземпляр по его &quot;области действия&quot; или контексту.Часто контекст является физическим или логическим устройством.Он может включать несколько устройств,подмножество одного устройства или подмножество нескольких устройств,но контекст всегда определяется как подмножество одного объекта SNMP.Чтобы иметь возможность идентифицировать определенный элемент управленческой информации внутри объекта SNMP,необходимо использовать контекст,тип объекта и его экземпляр.</target>
        </trans-unit>
        <trans-unit id="19f263cbfb73620501381b721ea1278aa4679eb0" translate="yes" xml:space="preserve">
          <source>Each match spec in the file ends with a full stop (&lt;code&gt;.&lt;/code&gt;) and new (syntactically correct) match specifications can be added to the file manually.</source>
          <target state="translated">Каждая спецификация соответствия в файле заканчивается точкой ( &lt;code&gt;.&lt;/code&gt; ), И новые (синтаксически правильные) спецификации соответствия могут быть добавлены в файл вручную.</target>
        </trans-unit>
        <trans-unit id="452318e4e784ce1e7d0ad04612ebccef8576f3c0" translate="yes" xml:space="preserve">
          <source>Each megaco application maintains its own set of counters. So in a large (distributed) MG/MGC it could be necessary to collect the statistics from several nodes (each) running the megaco application (only one of them with the transport).</source>
          <target state="translated">Каждое приложение megaco имеет свой собственный набор счетчиков.Поэтому в большом (распределенном)MG/MGC может понадобиться собрать статистику с нескольких узлов (каждого),на которых работает приложение megaco (только один из них с транспортом).</target>
        </trans-unit>
        <trans-unit id="4a78fbb6a60dc9e6fef3ef416e95740b3e7b0bfe" translate="yes" xml:space="preserve">
          <source>Each module that implements server functionality using the Erlang web server API is to implement the following call back functions:</source>
          <target state="translated">Каждый модуль,реализующий серверную функциональность с помощью API веб-сервера Erlang,должен реализовать следующие функции обратного вызова:</target>
        </trans-unit>
        <trans-unit id="93853d05ce58ebbbdc0ba0d0956af3c6652ad3e5" translate="yes" xml:space="preserve">
          <source>Each name in &lt;code&gt;Element_List&lt;/code&gt; must be a constructed type except the last name, which can be any type.</source>
          <target state="translated">Каждое имя в &lt;code&gt;Element_List&lt;/code&gt; должно быть сконструированным типом, за исключением фамилии, которая может быть любого типа.</target>
        </trans-unit>
        <trans-unit id="01165d972ec961ccac57f0f5b0159f2b826a6985" translate="yes" xml:space="preserve">
          <source>Each normal scheduler has one run queue that it manages. If dirty schedulers schedulers are supported, all dirty CPU schedulers share one run queue, and all dirty IO schedulers share one run queue. That is, we have multiple normal run queues, one dirty CPU run queue and one dirty IO run queue. Work can &lt;strong&gt;not&lt;/strong&gt; migrate between the different types of run queues. Only work in normal run queues can migrate to other normal run queues. This has to be taken into account when evaluating the result.</source>
          <target state="translated">У каждого обычного планировщика есть одна очередь выполнения, которой он управляет. Если поддерживаются грязные планировщики планировщиков, все грязные планировщики ЦП совместно используют одну очередь выполнения, а все грязные планировщики ввода-вывода совместно используют одну очередь выполнения. То есть у нас есть несколько обычных очередей выполнения, одна грязная очередь выполнения ЦП и одна грязная очередь выполнения ввода-вывода. Работа &lt;strong&gt;не&lt;/strong&gt; может перемещаться между разными типами очередей выполнения. Только работа в обычных очередях выполнения может быть перенесена в другие обычные очереди выполнения. Это необходимо учитывать при оценке результата.</target>
        </trans-unit>
        <trans-unit id="353f12c04da0c03581d99ccf42ebe1a0217c5270" translate="yes" xml:space="preserve">
          <source>Each of the &lt;code&gt;...&lt;/code&gt; can be a &lt;code&gt;algs_list()&lt;/code&gt; as the argument to the &lt;code&gt;preferred_algorithms&lt;/code&gt; option.</source>
          <target state="translated">Каждый из &lt;code&gt;...&lt;/code&gt; может быть &lt;code&gt;algs_list()&lt;/code&gt; в качестве аргумента опции &lt;code&gt;preferred_algorithms&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d164e93e542a99949cf0db6b6c3b3b7a076d10ae" translate="yes" xml:space="preserve">
          <source>Each of the following examples shows a simple system configuration file that configures Logger according to the description.</source>
          <target state="translated">В каждом из следующих примеров показан простой системный конфигурационный файл,который настраивает Журнал регистрации в соответствии с описанием.</target>
        </trans-unit>
        <trans-unit id="4dbc90fa1fdea3ab66bbf8b0c21d295490ffe46d" translate="yes" xml:space="preserve">
          <source>Each of the following macros takes a single &lt;code&gt;ETERM&lt;/code&gt; pointer as an argument. The macros return a non-zero value if the test is true, otherwise &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">Каждый из следующих макросов принимает в качестве аргумента один указатель &lt;code&gt;ETERM&lt;/code&gt; . Макросы возвращают ненулевое значение, если проверка верна, в противном случае - &lt;code&gt;0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="179773253948546e5bdc1e564395d6ef5da831bc" translate="yes" xml:space="preserve">
          <source>Each of the functions described below accept either the filename (as a string) or a binary containing the BEAM module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71dbb11141d1b29bdf605883a9525fa04b5926c7" translate="yes" xml:space="preserve">
          <source>Each of the functions described below accept either the module name, the filename, or a binary containing the BEAM module.</source>
          <target state="translated">Каждая из функций,описанных ниже,принимает либо имя модуля,либо имя файла,либо двоичный файл,содержащий модуль BEAM.</target>
        </trans-unit>
        <trans-unit id="8027ec76b3d9944bc76e04598ff295232263ba37" translate="yes" xml:space="preserve">
          <source>Each operand of a generic instruction is tagged with its type. A generic instruction can have one of the following types:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3a9a70f579bb2d61aec78b5a4d09bff55e0674f" translate="yes" xml:space="preserve">
          <source>Each pair of lowercase and uppercase escape sequences partitions the complete set of characters into two disjoint sets. Any given character matches one, and only one, of each pair. The sequences can appear both inside and outside character classes. They each match one character of the appropriate type. If the current matching point is at the end of the subject string, all fail, as there is no character to match.</source>
          <target state="translated">Каждая пара строчных и заглавных экранирующих последовательностей разделов представляет собой полный набор символов в два разделенных множества.Любой данный символ соответствует одному,и только одному,каждой паре.Последовательности могут появляться как внутри,так и снаружи классов символов.Каждая из них соответствует одному символу соответствующего типа.Если текущая точка совпадения находится в конце тематической строки,то все не удается,так как не существует символов,которым можно было бы соответствовать.</target>
        </trans-unit>
        <trans-unit id="5f109778bad8f5715e79853119dab9d94dca5e64" translate="yes" xml:space="preserve">
          <source>Each port is protected by its own lock to protect against simultaneous execution in multiple threads. Previously when a process, executing on a scheduler thread, sent a port a signal, it locked the port lock and synchronously executed the code corresponding to the signal. If the lock was busy, the scheduler thread blocked waiting until it could lock the lock. If multiple processes executing simultaneously on different scheduler threads, sent signals to the same port, schedulers suffered from heavy lock contention. Such contention could also occur between I/O signals for the port executing on one scheduler thread, and a signal from a process to the port executing on another scheduler thread. Beside the contention issues, we also loose potential work to execute in parallel on different scheduler threads. This since the process sending the &lt;strong&gt;asynchronous&lt;/strong&gt; signal is blocked while the code implementing the signal is executed synchronously.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="541ed98ae654af7db259dfc961c4315c8d1d922e" translate="yes" xml:space="preserve">
          <source>Each predefined analysis is a shorthand for a &lt;code&gt;&lt;a href=&quot;xref#query&quot;&gt;query&lt;/a&gt;&lt;/code&gt;, a sentence of a tiny language providing cross reference data as values of &lt;code&gt;&lt;a href=&quot;xref#predefined_variable&quot;&gt;predefined variables&lt;/a&gt;&lt;/code&gt;. The check for calls to undefined functions can thus be stated as a query:</source>
          <target state="translated">Каждый предопределенный анализ является сокращением &lt;code&gt;&lt;a href=&quot;xref#query&quot;&gt;query&lt;/a&gt;&lt;/code&gt; , предложением крошечного языка, предоставляющим данные перекрестных ссылок в виде значений &lt;code&gt;&lt;a href=&quot;xref#predefined_variable&quot;&gt;predefined variables&lt;/a&gt;&lt;/code&gt; . Таким образом, проверку вызовов неопределенных функций можно сформулировать как запрос:</target>
        </trans-unit>
        <trans-unit id="b3bb6f4a5547e885fc3c22cefa6ca8cc6b8272be" translate="yes" xml:space="preserve">
          <source>Each process can only be traced by one tracer. Therefore, attempts to trace an already traced process fail.</source>
          <target state="translated">Каждый процесс может быть отслежен только одним трассировщиком.Поэтому попытки проследить уже прослеженный процесс терпят неудачу.</target>
        </trans-unit>
        <trans-unit id="f53dfe1cf607f1f76b3cdacc1a7c9ad3df04d899" translate="yes" xml:space="preserve">
          <source>Each process encodes and decodes their messages. The number of messages processed in total (for all processes) is the mstone value.</source>
          <target state="translated">Каждый процесс кодирует и декодирует свои сообщения.Общее количество обработанных сообщений (для всех процессов)является значением mstone.</target>
        </trans-unit>
        <trans-unit id="8ce0c9866e7ef56611d672edfd84466b1d3ddb78" translate="yes" xml:space="preserve">
          <source>Each process has a &lt;strong&gt;trace token&lt;/strong&gt;, which can be empty or not empty. When not empty, the trace token can be seen as the tuple &lt;code&gt;{Label, Flags, Serial, From}&lt;/code&gt;. The trace token is passed invisibly when information is passed between processes. In most cases the information is passed in ordinary messages between processes, but information is also passed between processes by other means. For example, by spawning a new process. An information transfer between two processes is represented by a send event and a receive event regardless of how it is passed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a21488145b83b166a252047079205488e77b957" translate="yes" xml:space="preserve">
          <source>Each process has a &lt;strong&gt;trace token&lt;/strong&gt;, which can be empty or not empty. When not empty, the trace token can be seen as the tuple &lt;code&gt;{Label, Flags, Serial, From}&lt;/code&gt;. The trace token is passed invisibly with each message.</source>
          <target state="translated">У каждого процесса есть &lt;strong&gt;токен трассировки&lt;/strong&gt; , который может быть пустым или непустым. Если маркер трассировки не пуст, его можно увидеть как кортеж &lt;code&gt;{Label, Flags, Serial, From}&lt;/code&gt; . Маркер трассировки передается невидимо с каждым сообщением.</target>
        </trans-unit>
        <trans-unit id="62f3da47feea5422680300f867c5ab0500b7eef7" translate="yes" xml:space="preserve">
          <source>Each process has a current trace token which is &quot;invisibly&quot; passed from the parent process on creation of the process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e73293ff85edf8b221fca58a7375966b63368aa5" translate="yes" xml:space="preserve">
          <source>Each process has a current trace token. Initially, the token is empty. When the process sends a message to another process, a copy of the current token is sent &quot;invisibly&quot; along with the message.</source>
          <target state="translated">Каждый процесс имеет текущий маркер трассировки.Изначально маркер пуст.Когда процесс посылает сообщение другому процессу,вместе с сообщением &quot;невидимо&quot; посылается копия текущего маркера.</target>
        </trans-unit>
        <trans-unit id="5144322b868d1af68042a24893fdf17ce8ae7e7a" translate="yes" xml:space="preserve">
          <source>Each process has a heap reserved for its use and no references between heaps of different processes are allowed. Messages passed between processes are copied between heaps.</source>
          <target state="translated">Каждый процесс имеет кучи,зарезервированные для его использования,и никакие ссылки между кучами различных процессов не допускаются.Сообщения,передаваемые между процессами,копируются между кучами.</target>
        </trans-unit>
        <trans-unit id="d795f27c853b15d567e346c313ca515710ccd7a9" translate="yes" xml:space="preserve">
          <source>Each process has a virtual binary heap associated with it that has the size of all the current off-heap binaries that the process has references to. The virtual binary heap also has a limit and grows and shrinks depending on how off-heap binaries are used by the process. The same growth and shrink mechanisms are used for the binary heap and for the term heap, so first a Fibonacci like series and then 20% growth.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="096913c6437e32f4cf474b346e119faa89b965e8" translate="yes" xml:space="preserve">
          <source>Each process has its own input queue for messages it receives. New messages received are put at the end of the queue. When a process executes a &lt;code&gt;receive&lt;/code&gt;, the first message in the queue is matched against the first pattern in the &lt;code&gt;receive&lt;/code&gt;. If this matches, the message is removed from the queue and the actions corresponding to the pattern are executed.</source>
          <target state="translated">У каждого процесса есть собственная очередь ввода сообщений, которые он получает. Новые полученные сообщения помещаются в конец очереди. Когда процесс выполняет &lt;code&gt;receive&lt;/code&gt; , первое сообщение в очереди сопоставляется с первым шаблоном &lt;code&gt;receive&lt;/code&gt; . Если это совпадает, сообщение удаляется из очереди и выполняются действия, соответствующие шаблону.</target>
        </trans-unit>
        <trans-unit id="3a4ee2d15983f4a7bc92b54819b47d8c32a6e680" translate="yes" xml:space="preserve">
          <source>Each process has its own process dictionary, accessed by calling the following BIFs:</source>
          <target state="translated">Каждый процесс имеет свой собственный словарь процессов,доступ к которому осуществляется путем вызова следующих BIF-файлов:</target>
        </trans-unit>
        <trans-unit id="c1effb1c4303b519ce39735425f5a670ab0dcb4b" translate="yes" xml:space="preserve">
          <source>Each release version has a status, which can be &lt;code&gt;unpacked&lt;/code&gt;, &lt;code&gt;current&lt;/code&gt;, &lt;code&gt;permanent&lt;/code&gt;, or &lt;code&gt;old&lt;/code&gt;. There is always one latest release, which either has status &lt;code&gt;permanent&lt;/code&gt; (normal case) or &lt;code&gt;current&lt;/code&gt; (installed, but not yet made permanent). The meaning of the status values are illustrated in the following table:</source>
          <target state="translated">Каждая версия выпуска имеет статус, который может быть &lt;code&gt;unpacked&lt;/code&gt; , &lt;code&gt;current&lt;/code&gt; , &lt;code&gt;permanent&lt;/code&gt; или &lt;code&gt;old&lt;/code&gt; . Всегда есть одна последняя версия, которая имеет статус &amp;laquo; &lt;code&gt;permanent&lt;/code&gt; (нормальный случай) или &lt;code&gt;current&lt;/code&gt; (установлен, но еще не стал постоянным). Значение значений статуса проиллюстрировано в следующей таблице:</target>
        </trans-unit>
        <trans-unit id="b22912e88f3fff6681ff427aa02b35651d16061b" translate="yes" xml:space="preserve">
          <source>Each request &lt;code&gt;*_REQ&lt;/code&gt; is preceded by a 2 byte length field. Thus, the overall request format is as follows:</source>
          <target state="translated">Каждому запросу &lt;code&gt;*_REQ&lt;/code&gt; предшествует поле длиной 2 байта. Таким образом, общий формат запроса выглядит следующим образом:</target>
        </trans-unit>
        <trans-unit id="214cfe9188b99ecc651497388a529d4ed886ff20" translate="yes" xml:space="preserve">
          <source>Each row defines a &lt;strong&gt;manager user&lt;/strong&gt; of the manager.</source>
          <target state="translated">Каждая строка определяет &lt;strong&gt;пользователя&lt;/strong&gt; менеджера менеджера.</target>
        </trans-unit>
        <trans-unit id="ca374bc8a75c956aa890688fd1192654850ec9a4" translate="yes" xml:space="preserve">
          <source>Each row defines a context in the agent. This information is used in the table &lt;code&gt;vacmContextTable&lt;/code&gt; in the SNMP-VIEW-BASED-ACM-MIB.</source>
          <target state="translated">Каждая строка определяет контекст в агенте. Эта информация используется в таблице &lt;code&gt;vacmContextTable&lt;/code&gt; в SNMP-VIEW-BASED-ACM-MIB.</target>
        </trans-unit>
        <trans-unit id="8644f9741490487b00047e43487ce1247a0d6219" translate="yes" xml:space="preserve">
          <source>Each row specifies which security model to use, along with security level and security parameters.</source>
          <target state="translated">Каждая строка указывает,какую модель безопасности использовать,а также уровень безопасности и параметры безопасности.</target>
        </trans-unit>
        <trans-unit id="2b467749361658abb4d12ab5e9dc82af9af422e5" translate="yes" xml:space="preserve">
          <source>Each scheduler thread has its own set of references, and all other threads have a shared set of references. Each set of references consist of &lt;code&gt;2⁶⁴ - 1&lt;/code&gt; unique references. That is, the total amount of unique references that can be produced on a runtime system instance is &lt;code&gt;(NoSchedulers + 1) &amp;times; (2⁶⁴ - 1)&lt;/code&gt;.</source>
          <target state="translated">Каждый поток планировщика имеет свой собственный набор ссылок, а все другие потоки имеют общий набор ссылок. Каждый набор ссылок состоит из &lt;code&gt;2⁶⁴ - 1&lt;/code&gt; уникальной ссылки. То есть общее количество уникальных ссылок, которые могут быть созданы в экземпляре системы времени выполнения, составляет &lt;code&gt;(NoSchedulers + 1) &amp;times; (2⁶⁴ - 1)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bd0f886f081fb98e606d025bb4bf36be701fdf0b" translate="yes" xml:space="preserve">
          <source>Each schema has a unique cookie, which can be regarded as a unique schema identifier. The cookie must be the same on all nodes where Mnesia is supposed to run. For details, see the User's Guide.</source>
          <target state="translated">Каждая схема имеет уникальный куки-файл,который можно рассматривать как уникальный идентификатор схемы.Файл cookie должен быть одинаковым на всех узлах,где должна работать Мнезия.Подробности см.в Руководстве пользователя.</target>
        </trans-unit>
        <trans-unit id="549337d666fba4ddace993e54e248a26130c024d" translate="yes" xml:space="preserve">
          <source>Each segment has the following general syntax:</source>
          <target state="translated">Каждый сегмент имеет следующий общий синтаксис:</target>
        </trans-unit>
        <trans-unit id="1cd372994dfc3344f859a57d088fd0676fe4b69b" translate="yes" xml:space="preserve">
          <source>Each segment in a binary can consist of zero or more bits. A segment of type &lt;code&gt;binary&lt;/code&gt; must have a size evenly divisible by 8 (or divisible by the unit size, if the unit size has been changed). A segment of type &lt;code&gt;bitstring&lt;/code&gt; has no restrictions on the size.</source>
          <target state="translated">Каждый сегмент в двоичном формате может состоять из нуля или более битов. Сегмент &lt;code&gt;binary&lt;/code&gt; типа должен иметь размер, делимый на 8 (или на размер единицы, если размер единицы был изменен). Сегмент типа &lt;code&gt;bitstring&lt;/code&gt; не имеет ограничений по размеру.</target>
        </trans-unit>
        <trans-unit id="1aa9835051b7281d11e9f067f29f705681499a78" translate="yes" xml:space="preserve">
          <source>Each segment in a binary can consist of zero or more bits. A segment of type &lt;code&gt;binary&lt;/code&gt; must have a size evenly divisible by 8 (or divisible by the unit size, if the unit size has been changed). A segment of type &lt;code&gt;bitstring&lt;/code&gt; has no restrictions on the size. A segment of type &lt;code&gt;float&lt;/code&gt; must have size 64 or 32.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1671b1a7b09bbb4a1297d80f839111ba93c1ee9" translate="yes" xml:space="preserve">
          <source>Each segment in a binary can consist of zero or more bits. There are no alignment rules for individual segments of type &lt;code&gt;integer&lt;/code&gt; and &lt;code&gt;float&lt;/code&gt;. For binaries and bitstrings without size, the unit specifies the alignment. Since the default alignment for the &lt;code&gt;binary&lt;/code&gt; type is 8, the size of a binary segment must be a multiple of 8 bits, that is, only whole bytes.</source>
          <target state="translated">Каждый сегмент в двоичном формате может состоять из нуля или более битов. Нет никаких правил выравнивания для отдельных сегментов типа &lt;code&gt;integer&lt;/code&gt; и &lt;code&gt;float&lt;/code&gt; . Для двоичных файлов и цепочек битов без размера единица определяет выравнивание. Поскольку выравнивание по умолчанию для &lt;code&gt;binary&lt;/code&gt; типа равно 8, размер двоичного сегмента должен быть кратным 8 битам, то есть только целым байтам.</target>
        </trans-unit>
        <trans-unit id="e9282b1591676f5d2f51bfb0beccffd06d1eb513" translate="yes" xml:space="preserve">
          <source>Each separate (variable) package is generated as a separate file in the same directory as the &lt;code&gt;ReleaseName.tar.gz&lt;/code&gt; file.</source>
          <target state="translated">Каждый отдельный (переменный) пакет создается как отдельный файл в том же каталоге, что и файл &lt;code&gt;ReleaseName.tar.gz&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="024f41e5f9df7f8bc9804c8c5a80f4b99f3d7274" translate="yes" xml:space="preserve">
          <source>Each separate (variable) package is included in the main &lt;code&gt;ReleaseName.tar.gz&lt;/code&gt; file. This is the default.</source>
          <target state="translated">Каждый отдельный (переменный) пакет включен в основной файл &lt;code&gt;ReleaseName.tar.gz&lt;/code&gt; . Это значение по умолчанию.</target>
        </trans-unit>
        <trans-unit id="c3e8c329b13e4f651f71df7ff5c490cb04afca90" translate="yes" xml:space="preserve">
          <source>Each signal my be set to one of the following options:</source>
          <target state="translated">Каждый мой сигнал устанавливается на один из следующих вариантов:</target>
        </trans-unit>
        <trans-unit id="14b191f37496bd40bb6e48f5c7122d0518587ab2" translate="yes" xml:space="preserve">
          <source>Each specific instructions is defined by following the name of the instruction with the types for each operand. An operand type is a single letter. For example, &lt;code&gt;x&lt;/code&gt; means an X register, &lt;code&gt;y&lt;/code&gt; means a Y register, and &lt;code&gt;c&lt;/code&gt; is a &quot;constant&quot; (a tagged term such as an integer, an atom, or a literal).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d75df3fed93d33a1b26f0df41aacf7a9c5e0bb4" translate="yes" xml:space="preserve">
          <source>Each sub-agent calls the instrumentation for its loaded MIBs.</source>
          <target state="translated">Каждый субагент вызывает приборы для своих загруженных MIB.</target>
        </trans-unit>
        <trans-unit id="a920af7f1bd15ab26a0a0f35363ebaf253b19753" translate="yes" xml:space="preserve">
          <source>Each sub-agent can implement its own mechanisms for &lt;code&gt;set&lt;/code&gt;, &lt;code&gt;get&lt;/code&gt; and &lt;code&gt;get-next&lt;/code&gt;. For example, if the application requires the &lt;code&gt;get&lt;/code&gt; mechanism to be asynchronous, or needs a N-phase &lt;code&gt;set&lt;/code&gt; mechanism, a specialized sub-agent should be used.</source>
          <target state="translated">Каждый субагент может реализовать свои собственные механизмы для &lt;code&gt;set&lt;/code&gt; , &lt;code&gt;get&lt;/code&gt; и &lt;code&gt;get-next&lt;/code&gt; . Например, если приложение требует &lt;code&gt;get&lt;/code&gt; механизма быть асинхронными или нуждается в N-фазовый &lt;code&gt;set&lt;/code&gt; механизме, специализированный суб-агент должен быть использован.</target>
        </trans-unit>
        <trans-unit id="82ff02bedfa4335374a1f6b3ca8faa6ef8a2d000" translate="yes" xml:space="preserve">
          <source>Each tab in the main window contains an information page. If no information is found for an item, the page is empty. The reason for not finding information about an item can be the following:</source>
          <target state="translated">Каждая вкладка главного окна содержит информационную страницу.Если информация по элементу не найдена,то страница пуста.Причина,по которой информация об элементе не найдена,может заключаться в следующем:</target>
        </trans-unit>
        <trans-unit id="552992daca4c23db6bff1830043b762334b97510" translate="yes" xml:space="preserve">
          <source>Each table retains its old contents in a checkpoint retainer. For performance critical applications, it can be important to realize the processing overhead associated with checkpoints. In a worst case scenario, the checkpoint retainer consumes more memory than the table itself. Also, each update becomes slightly slower on those nodes where checkpoint retainers are attached to the tables.</source>
          <target state="translated">Каждая таблица сохраняет свое старое содержимое в контрольно-пропускном пункте.Для приложений,критически важных с точки зрения производительности,может быть важно реализовать накладные расходы на обработку,связанные с контрольно-пропускными пунктами.В худшем случае фиксатор контрольных точек потребляет больше памяти,чем сама таблица.Кроме того,каждое обновление становится немного медленнее на тех узлах,где к таблицам прикреплены фиксаторы контрольных точек.</target>
        </trans-unit>
        <trans-unit id="791a1f2a4037ba80b05edb94447b37b4e2364aa6" translate="yes" xml:space="preserve">
          <source>Each term &lt;code&gt;Term&lt;/code&gt; in the list is called an &lt;strong&gt;element&lt;/strong&gt;. The number of elements is said to be the &lt;strong&gt;length&lt;/strong&gt; of the list.</source>
          <target state="translated">Каждый термин &lt;code&gt;Term&lt;/code&gt; в списке называется &lt;strong&gt;элементом&lt;/strong&gt; . Количество элементов называется &lt;strong&gt;длиной&lt;/strong&gt; списка.</target>
        </trans-unit>
        <trans-unit id="ed00d75d5c4d6192c54f9d2b21cf805e6461e449" translate="yes" xml:space="preserve">
          <source>Each term &lt;code&gt;Term&lt;/code&gt; in the tuple is called an &lt;strong&gt;element&lt;/strong&gt;. The number of elements is said to be the &lt;strong&gt;size&lt;/strong&gt; of the tuple.</source>
          <target state="translated">Каждый термин &lt;code&gt;Term&lt;/code&gt; в кортеже называется &lt;strong&gt;элементом&lt;/strong&gt; . Количество элементов называется &lt;strong&gt;размером&lt;/strong&gt; кортежа.</target>
        </trans-unit>
        <trans-unit id="5abbd52c08a811a8e991cd9188a923d201e7731f" translate="yes" xml:space="preserve">
          <source>Each test case is executed by a dedicated Erlang process. The process is spawned when the test case starts, and terminated when the test case is finished. The configuration functions &lt;code&gt;init_per_testcase&lt;/code&gt; and &lt;code&gt;end_per_testcase&lt;/code&gt; execute on the same process as the test case.</source>
          <target state="translated">Каждый тестовый пример выполняется отдельным процессом Erlang. Процесс запускается при запуске тестового примера и завершается, когда тестовый пример завершается. Функции конфигурации &lt;code&gt;init_per_testcase&lt;/code&gt; и &lt;code&gt;end_per_testcase&lt;/code&gt; выполняются в том же процессе, что и тестовый пример.</target>
        </trans-unit>
        <trans-unit id="5c925270da28c693f61f4f9343e6c13b128264b9" translate="yes" xml:space="preserve">
          <source>Each test suite module can contain the optional configuration functions &lt;code&gt;&lt;a href=&quot;common_test#Module:init_per_suite-1&quot;&gt;init_per_suite/1&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;common_test#Module:end_per_suite-1&quot;&gt;end_per_suite/1&lt;/a&gt;&lt;/code&gt;. If the init function is defined, so must the end function be.</source>
          <target state="translated">Каждый модуль набора тестов может содержать дополнительные функции конфигурации &lt;code&gt;&lt;a href=&quot;common_test#Module:init_per_suite-1&quot;&gt;init_per_suite/1&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;common_test#Module:end_per_suite-1&quot;&gt;end_per_suite/1&lt;/a&gt;&lt;/code&gt; . Если определена функция инициализации, то должна быть и конечная функция.</target>
        </trans-unit>
        <trans-unit id="fa673338880fff3b8ab5d57c56ce74931075ef5e" translate="yes" xml:space="preserve">
          <source>Each test suite module can contain the optional configuration functions &lt;code&gt;&lt;a href=&quot;common_test#Module:init_per_testcase-2&quot;&gt;init_per_testcase/2&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;common_test#Module:end_per_testcase-2&quot;&gt;end_per_testcase/2&lt;/a&gt;&lt;/code&gt;. If the init function is defined, so must the end function be.</source>
          <target state="translated">Каждый модуль набора тестов может содержать дополнительные функции конфигурации &lt;code&gt;&lt;a href=&quot;common_test#Module:init_per_testcase-2&quot;&gt;init_per_testcase/2&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;common_test#Module:end_per_testcase-2&quot;&gt;end_per_testcase/2&lt;/a&gt;&lt;/code&gt; . Если определена функция инициализации, то должна быть и конечная функция.</target>
        </trans-unit>
        <trans-unit id="9be9dbf46883bfb6649b9dde3024776b2bfb78fc" translate="yes" xml:space="preserve">
          <source>Each test suite module can contain the optional configuration functions &lt;code&gt;&lt;a href=&quot;ct_suite#Module:init_per_suite-1&quot;&gt;init_per_suite/1&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;ct_suite#Module:end_per_suite-1&quot;&gt;end_per_suite/1&lt;/a&gt;&lt;/code&gt;. If the init function is defined, so must the end function be.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dab76f0335fb30cc022494a15a9102a1b1aa7be" translate="yes" xml:space="preserve">
          <source>Each test suite module can contain the optional configuration functions &lt;code&gt;&lt;a href=&quot;ct_suite#Module:init_per_testcase-2&quot;&gt;init_per_testcase/2&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;ct_suite#Module:end_per_testcase-2&quot;&gt;end_per_testcase/2&lt;/a&gt;&lt;/code&gt;. If the init function is defined, so must the end function be.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5862fbfb3f074c11d24b7727c36cf9bdbbbda72" translate="yes" xml:space="preserve">
          <source>Each test suite module must export function &lt;code&gt;&lt;a href=&quot;common_test#Module:all-0&quot;&gt;all/0&lt;/a&gt;&lt;/code&gt;, which returns the list of all test case groups and test cases to be executed in that module.</source>
          <target state="translated">Каждый модуль набора тестов должен экспортировать функцию &lt;code&gt;&lt;a href=&quot;common_test#Module:all-0&quot;&gt;all/0&lt;/a&gt;&lt;/code&gt; , которая возвращает список всех групп тестовых примеров и тестовых примеров, которые должны быть выполнены в этом модуле.</target>
        </trans-unit>
        <trans-unit id="fd56725b7b7c70889ceb04697172f3594442c52b" translate="yes" xml:space="preserve">
          <source>Each test suite module must export function &lt;code&gt;&lt;a href=&quot;ct_suite#Module:all-0&quot;&gt;all/0&lt;/a&gt;&lt;/code&gt;, which returns the list of all test case groups and test cases to be executed in that module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a82d0b878fdfaab3c22f520d67abc9156fa79d67" translate="yes" xml:space="preserve">
          <source>Each time a function in a Cover compiled module is called, information about the call is added to an internal database of Cover. The coverage analysis is performed by examining the contents of the Cover database. The output &lt;code&gt;Answer&lt;/code&gt; is determined by two parameters, &lt;code&gt;Level&lt;/code&gt; and &lt;code&gt;Analysis&lt;/code&gt;.</source>
          <target state="translated">Каждый раз, когда вызывается функция в скомпилированном модуле Cover, информация о вызове добавляется во внутреннюю базу данных Cover. Анализ покрытия выполняется путем изучения содержимого базы данных Cover. Выходной &lt;code&gt;Answer&lt;/code&gt; определяется двумя параметрами: &amp;laquo; &lt;code&gt;Level&lt;/code&gt; и &amp;laquo; &lt;code&gt;Analysis&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d291b759129a65a7c92477a04e632cac3277ae53" translate="yes" xml:space="preserve">
          <source>Each time a function in the Cover compiled module &lt;code&gt;channel&lt;/code&gt; is called, information about the call will be added to the Cover database. Run the test case:</source>
          <target state="translated">Каждый раз , когда функция в скомпилированный модуль крышки &lt;code&gt;channel&lt;/code&gt; называется, информация о вызове будет добавлена в базу данных Cover. Запустите тестовый пример:</target>
        </trans-unit>
        <trans-unit id="9e8ff16c70c1fc0240fb75f09e0d951deab35788" translate="yes" xml:space="preserve">
          <source>Each tuple contains an atom describing the type of memory as first element and the amount of allocated memory in bytes as second element. When information about allocated and used memory is present, also a third element is present, containing the amount of used memory in bytes.</source>
          <target state="translated">Каждый кортеж содержит атом,описывающий тип памяти как первый элемент,а объем выделенной памяти в байтах-как второй элемент.При наличии информации о выделенной и используемой памяти присутствует и третий элемент,содержащий объем используемой памяти в байтах.</target>
        </trans-unit>
        <trans-unit id="3fbaab76ee048157643094a4fa7baae8b1f26b60" translate="yes" xml:space="preserve">
          <source>Each tuple will produce one table in the order of their places in the list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51cb2aa921488217e96ac224fc5c13f88ab59cb5" translate="yes" xml:space="preserve">
          <source>Each undecoded part that is to be decoded must be fed into function &lt;code&gt;decode_part/2&lt;/code&gt; as follows:</source>
          <target state="translated">Каждая недекодированная часть, которая должна быть декодирована, должна быть &lt;code&gt;decode_part/2&lt;/code&gt; в функцию decode_part / 2 следующим образом:</target>
        </trans-unit>
        <trans-unit id="a3eef4129b67bd506209f344f64f0d81fa4e275d" translate="yes" xml:space="preserve">
          <source>Each update is appended to the transaction log and occasionally (depending on how it is configured) dumped to the tables files. The table file storage is more compact than the transaction log storage, especially if the same record is updated repeatedly. If the thresholds for dumping the transaction log are reached before the previous dump is finished, an overload event is triggered.</source>
          <target state="translated">Каждое обновление добавляется в журнал транзакций и время от времени (в зависимости от того,как оно настроено)дамплируется в файлы таблиц.Файловое хранилище таблиц является более компактным,чем хранилище журнала транзакций,особенно если одна и та же запись обновляется несколько раз.Если пороговые значения для дампа журнала транзакций достигаются до завершения предыдущего дампа,срабатывает событие перегрузки.</target>
        </trans-unit>
        <trans-unit id="91222363ea25938785424fffb48446fa72022ad1" translate="yes" xml:space="preserve">
          <source>Each user is represented by a tuple with the Mid of the user and a list of config parameters (each parameter is in turn a tuple: &lt;code&gt;{Item, Value}&lt;/code&gt;).</source>
          <target state="translated">Каждый пользователь представлен кортежем с Mid пользователя и списком параметров конфигурации (каждый параметр, в свою очередь, является кортежем: &lt;code&gt;{Item, Value}&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="c5960487e6583117a3e71addee6d735530434ddc" translate="yes" xml:space="preserve">
          <source>Earlier it was mentioned that a variable can only be given a value once in its scope. In the above you see that &lt;code&gt;Result_so_far&lt;/code&gt; is given several values. This is OK since every time you call &lt;code&gt;list_max/2&lt;/code&gt; you create a new scope and one can regard &lt;code&gt;Result_so_far&lt;/code&gt; as a different variable in each scope.</source>
          <target state="translated">Ранее упоминалось, что переменной можно присвоить значение только один раз в своей области действия. Выше вы видите, что &lt;code&gt;Result_so_far&lt;/code&gt; имеет несколько значений. Это нормально, поскольку каждый раз, когда вы вызываете &lt;code&gt;list_max/2&lt;/code&gt; , вы создаете новую область видимости, и можно рассматривать &lt;code&gt;Result_so_far&lt;/code&gt; как другую переменную в каждой области.</target>
        </trans-unit>
        <trans-unit id="ed6caed0e440a7ff0deaaa66f177152c69eb3afa" translate="yes" xml:space="preserve">
          <source>Earlier version of the release to downgrade to.</source>
          <target state="translated">Более ранняя версия релиза с понижением рейтинга до.</target>
        </trans-unit>
        <trans-unit id="4f12071fcb232719f7acbb29f4900300360385fd" translate="yes" xml:space="preserve">
          <source>Earlier version of the release to upgrade from.</source>
          <target state="translated">Более ранняя версия релиза для обновления.</target>
        </trans-unit>
        <trans-unit id="65cd0c7004f4d160355d98a242b0f8b159d1373f" translate="yes" xml:space="preserve">
          <source>Earlier versions of Perl and PCRE used to give an error at compile time for such patterns. However, as there are cases where this can be useful, such patterns are now accepted. However, if any repetition of the subpattern matches no characters, the loop is forcibly broken.</source>
          <target state="translated">Более ранние версии Perl и PCRE использовались для выдачи ошибки во время компиляции таких шаблонов.Однако,поскольку бывают случаи,когда это может быть полезно,такие шаблоны теперь принимаются.Однако,если любое повторение подмаскировки не совпадает ни с одним символом,то цикл принудительно прерывается.</target>
        </trans-unit>
        <trans-unit id="a53b52768e55858c81dd4d8fab520a67888c0d03" translate="yes" xml:space="preserve">
          <source>Earlier versions of the ASN.1 compiler required that modules that were imported from had to be compiled before the module that imported. This caused problems when ASN.1 modules had circular dependencies.</source>
          <target state="translated">Более ранние версии компилятора ASN.1 требовали,чтобы импортируемые модули были скомпилированы перед импортируемым модулем.Это вызывало проблемы,когда модули ASN.1 имели циклические зависимости.</target>
        </trans-unit>
        <trans-unit id="e9d22090baa7934a13d02450261873967d2a0be1" translate="yes" xml:space="preserve">
          <source>Earlier, &lt;code&gt;Fun&lt;/code&gt; could also be specified as &lt;code&gt;{Module, Function}&lt;/code&gt;, equivalent to &lt;code&gt;apply(Module, Function, Args)&lt;/code&gt;. &lt;strong&gt;This use is deprecated and will stop working in a future release.&lt;/strong&gt;</source>
          <target state="translated">Раньше &lt;code&gt;Fun&lt;/code&gt; также можно было указать как &lt;code&gt;{Module, Function}&lt;/code&gt; , что эквивалентно &lt;code&gt;apply(Module, Function, Args)&lt;/code&gt; . &lt;strong&gt;Это использование не рекомендуется и перестанет работать в следующем выпуске.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a827c06f458eb4b34a5493fad94681c358ea9853" translate="yes" xml:space="preserve">
          <source>Early data and 0-RTT not supported</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e93bb4ae1ee898eabe1fd55cee195f346cb5664b" translate="yes" xml:space="preserve">
          <source>Early versions of the SMP support for the runtime system completely relied on locking in order to protect data accesses from multiple threads. In some cases this isn't that problematic, but in some cases it really is. It complicates the code, ensuring all locks needed are actually held, and ensuring that all locks are acquired in such an order that no deadlock occur. Acquiring locks in the right order often also involve releasing locks held, forcing threads to reread data already read. A good recipe for creation of bugs. Trying to use more fine-grained locking in order to increase possible parallelism in the system makes the complexity situation even worse. Having to acquire a bunch of locks when doing operations also often cause heavy lock contention which cause poor scalability.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c686e62b44ec832b4f549d529f5cabc55a92a0e4" translate="yes" xml:space="preserve">
          <source>Easy-to-use time-outs (&lt;code&gt;&lt;a href=&quot;#State%20Time-Outs&quot;&gt;State Time-Outs&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#Event%20Time-Outs&quot;&gt;Event Time-Outs&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#Generic%20Time-Outs&quot;&gt;Generic Time-Outs&lt;/a&gt;&lt;/code&gt; (named time-outs))</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5887655182350a5c85026cd7362d3a2f232dbf4f" translate="yes" xml:space="preserve">
          <source>Easy-to-use timeouts (&lt;code&gt;&lt;a href=&quot;#State%20Time-Outs&quot;&gt;State Time-Outs&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#Event%20Time-Outs&quot;&gt;Event Time-Outs&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#Generic%20Time-Outs&quot;&gt;Generic Time-outs&lt;/a&gt;&lt;/code&gt; (named time-outs))</source>
          <target state="translated">Легкие в использовании тайм - аут ( &lt;code&gt;&lt;a href=&quot;#State%20Time-Outs&quot;&gt;State Time-Outs&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#Event%20Time-Outs&quot;&gt;Event Time-Outs&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;#Generic%20Time-Outs&quot;&gt;Generic Time-outs&lt;/a&gt;&lt;/code&gt; (названные таймауты))</target>
        </trans-unit>
        <trans-unit id="b7a4d28f1dcb53979e4d42597be409788c8c24e0" translate="yes" xml:space="preserve">
          <source>EdDSA</source>
          <target state="translated">EdDSA</target>
        </trans-unit>
        <trans-unit id="acaad14ae3e35bc5c73d5e321dcb75cadd81a530" translate="yes" xml:space="preserve">
          <source>EdDSA is available with OpenSSL 1.1.1 or later if not disabled by configuration. To dynamically check availability, check that the atom &lt;code&gt;eddsa&lt;/code&gt; is present in the list returned by &lt;code&gt;&lt;a href=&quot;crypto#supports-1&quot;&gt;crypto:supports(public_keys)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31ae59bd2171bda6147d55588f9a8b6efcfaac82" translate="yes" xml:space="preserve">
          <source>Edit - Arrows</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="387693905beccb2acf0088228590ecc875a53e2d" translate="yes" xml:space="preserve">
          <source>Edit - Comment/Uncomment Region</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bc821a9e3f4964085c2a30d0c26d8c14aa5da39" translate="yes" xml:space="preserve">
          <source>Edit - Fill Comment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2dac947ec0acff1f5944051e24327213806c67c" translate="yes" xml:space="preserve">
          <source>Edit - Function Header Commands</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b76420fb41ff4f81dc37493d7f65967ae412e88" translate="yes" xml:space="preserve">
          <source>Edit - Marking</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd879ab973df7fb91e2bc55f2a3c82dc78b25bb9" translate="yes" xml:space="preserve">
          <source>Edit - Moving the marker</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33c5225e7c12b757b24805fea66268f9fbf3a6f5" translate="yes" xml:space="preserve">
          <source>Edit Menu</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff096aaeb82c6666e39fc680c917cdb6ff501824" translate="yes" xml:space="preserve">
          <source>Edits configuration data.</source>
          <target state="translated">Редактирует данные конфигурации.</target>
        </trans-unit>
        <trans-unit id="07db18ae9dcddd7fea233a4299ad559f0aca25b2" translate="yes" xml:space="preserve">
          <source>Edits the environment block for the service. Every environment variable specified is added to the system environment block. If a variable specified here has the same name as a system-wide environment variable, the specified value overrides the system-wide. Environment variables are added to this list by specifying &amp;lt;variable&amp;gt;=&amp;lt;value&amp;gt; and deleted from the list by specifying &amp;lt;variable&amp;gt; alone. The environment block is automatically sorted. Any number of &lt;code&gt;-env&lt;/code&gt; options can be specified in one command. Default is to use the system environment block unmodified (except for two additions, see section &lt;code&gt;&lt;a href=&quot;#002&quot;&gt;Environment&lt;/a&gt;&lt;/code&gt; below).</source>
          <target state="translated">Редактирует блок среды для службы. Каждая указанная переменная среды добавляется в блок системной среды. Если указанная здесь переменная имеет то же имя, что и общесистемная переменная среды, указанное значение переопределяет общесистемное. Переменные среды добавляются в этот список путем указания &amp;lt;variable&amp;gt; = &amp;lt;value&amp;gt; и удаляются из списка путем указания только &amp;lt;variable&amp;gt;. Блок среды автоматически сортируется. В одной &lt;code&gt;-env&lt;/code&gt; можно указать любое количество параметров -env . По умолчанию используется неизмененный блок системной среды (за исключением двух добавлений, см. Раздел &amp;laquo; &lt;code&gt;&lt;a href=&quot;#002&quot;&gt;Environment&lt;/a&gt;&lt;/code&gt; ниже).</target>
        </trans-unit>
        <trans-unit id="7c924cdd3b737d8ecc484367e45f459b20ec7e9f" translate="yes" xml:space="preserve">
          <source>Effects like this are improbable but possible. The probability will further be reduced (if not vanish) if table option &lt;code&gt;&lt;a href=&quot;#new_2_write_concurrency&quot;&gt;write_concurrency&lt;/a&gt;&lt;/code&gt; is not enabled. This can also only be a potential concern for &lt;code&gt;ordered_set&lt;/code&gt; where the traversal order is defined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a956986208caa4daeb338ab4f70268aa64edc8b" translate="yes" xml:space="preserve">
          <source>Efficient code can be well-structured and clean, based on a sound overall architecture and sound algorithms. Efficient code can be highly implementation-code that bypasses documented interfaces and takes advantage of obscure quirks in the current implementation.</source>
          <target state="translated">Эффективный код может быть хорошо структурирован и чистым,основанным на общей звуковой архитектуре и звуковых алгоритмах.Эффективный код может быть высокореализованным кодом,который обходит документированные интерфейсы и использует преимущества неясных причуд в текущей реализации.</target>
        </trans-unit>
        <trans-unit id="95eb187386528f0442d2d1a0d814ad6080e6245c" translate="yes" xml:space="preserve">
          <source>Efficiently reads the terms that are appended to an internally formatted log. It minimizes disk I/O by reading 64 kilobyte chunks from the file. Functions &lt;code&gt;bchunk/2,3&lt;/code&gt; return the binaries read from the file, they do not call &lt;code&gt;binary_to_term()&lt;/code&gt;. Apart from that, they work just like &lt;code&gt;chunk/2,3&lt;/code&gt;.</source>
          <target state="translated">Эффективно читает термины, добавленные к внутреннему форматированному журналу. Он минимизирует дисковый ввод-вывод за счет чтения фрагментов размером 64 килобайта из файла. Функции &lt;code&gt;bchunk/2,3&lt;/code&gt; возвращают двоичные файлы, прочитанные из файла, они не вызывают &lt;code&gt;binary_to_term()&lt;/code&gt; . В остальном они работают так же, как &lt;code&gt;chunk/2,3&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bb212465dbae7203df4ab62ae8863407da33e722" translate="yes" xml:space="preserve">
          <source>Egyptian_Hieroglyphs</source>
          <target state="translated">Egyptian_Hieroglyphs</target>
        </trans-unit>
        <trans-unit id="b605c9a1d38aeb2128970f4cfddf46cfbbab5716" translate="yes" xml:space="preserve">
          <source>Either &lt;code&gt;Location&lt;/code&gt; is illegal, or it is evaluated to a negative offset in the file. Notice that if the resulting position is a negative value, the result is an error, and after the call the file position is undefined.</source>
          <target state="translated">Либо &lt;code&gt;Location&lt;/code&gt; является недопустимым, либо оно оценивается как отрицательное смещение в файле. Обратите внимание, что если результирующая позиция является отрицательным значением, результатом будет ошибка, а после вызова позиция файла не определена.</target>
        </trans-unit>
        <trans-unit id="821623002947dfb13bf46c9ba373aec903676684" translate="yes" xml:space="preserve">
          <source>Either &lt;code&gt;NULL&lt;/code&gt; or &lt;code&gt;*bitoffsp&lt;/code&gt; returns the number of unused bits in the first byte pointed to by &lt;code&gt;*pp&lt;/code&gt;. The value of &lt;code&gt;*bitoffsp&lt;/code&gt; is between 0 and 7. Unused bits in the first byte are the most significant bits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38b33826fe0b1c666930574c956c3943ee063250" translate="yes" xml:space="preserve">
          <source>Either &lt;code&gt;NULL&lt;/code&gt; or &lt;code&gt;*nbitsp&lt;/code&gt; returns the length of the bit string in &lt;strong&gt;bits&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e8e8cc57d2a9968ec2ba254f6454f8c8cc973ee" translate="yes" xml:space="preserve">
          <source>Either &lt;code&gt;NULL&lt;/code&gt; or &lt;code&gt;*pp&lt;/code&gt; returns a pointer to the first byte of the bit string. The returned bit string is readable as long as the buffer pointed to by &lt;code&gt;buf&lt;/code&gt; is readable and not written to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d30f451140817c7d120ec001c6cece0c48331e09" translate="yes" xml:space="preserve">
          <source>Either a back reference, or the two characters &quot;8&quot; and &quot;1&quot;</source>
          <target state="translated">Либо задняя ссылка,либо два знака &quot;8&quot; и &quot;1&quot;.</target>
        </trans-unit>
        <trans-unit id="cd46349522982f37a5a0818f644ecd4fc728303c" translate="yes" xml:space="preserve">
          <source>Either sends a message and returns &lt;code&gt;ok&lt;/code&gt;, or does not send the message but returns something else (see below). Otherwise the same as &lt;code&gt;&lt;a href=&quot;#send-2&quot;&gt;erlang:send/2&lt;/a&gt;&lt;/code&gt;. For more detailed explanation and warnings, see &lt;code&gt;&lt;a href=&quot;#send_nosuspend-2&quot;&gt; erlang:send_nosuspend/2,3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6f7085abc2ccef85b192b8c6868e5479f1516a2" translate="yes" xml:space="preserve">
          <source>Either sends a message and returns &lt;code&gt;ok&lt;/code&gt;, or does not send the message but returns something else (see below). Otherwise the same as &lt;code&gt;&lt;a href=&quot;#send-2&quot;&gt;erlang:send/2&lt;/a&gt;&lt;/code&gt;. For more detailed explanation and warnings, see &lt;code&gt;&lt;a href=&quot;#send_nosuspend-2&quot;&gt;erlang:send_nosuspend/2,3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Либо отправляет сообщение и возвращает &lt;code&gt;ok&lt;/code&gt; , либо не отправляет сообщение, а возвращает что-то еще (см. Ниже). В остальном то же, что и &lt;code&gt;&lt;a href=&quot;#send-2&quot;&gt;erlang:send/2&lt;/a&gt;&lt;/code&gt; . Более подробные объяснения и предупреждения см &lt;code&gt;&lt;a href=&quot;#send_nosuspend-2&quot;&gt;erlang:send_nosuspend/2,3&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9c7329b4b0e253e39f89da454478a65965c06ad0" translate="yes" xml:space="preserve">
          <source>Either set all or none of the &lt;code&gt;DED_LD*&lt;/code&gt; variables.</source>
          <target state="translated">Либо установите все переменные &lt;code&gt;DED_LD*&lt;/code&gt; либо ни одну из них .</target>
        </trans-unit>
        <trans-unit id="4e7799671ee9bcf125ace44830967d9f98d8d690" translate="yes" xml:space="preserve">
          <source>Either set all or none of the &lt;code&gt;LFS_*&lt;/code&gt; variables.</source>
          <target state="translated">Либо установите все переменные &lt;code&gt;LFS_*&lt;/code&gt; , либо ни одну из них .</target>
        </trans-unit>
        <trans-unit id="93c3f6c0504a02d19f3c9ca403c6b9bad1813d62" translate="yes" xml:space="preserve">
          <source>Either the atom &lt;code&gt;longnames&lt;/code&gt; or the atom &lt;code&gt;shortnames&lt;/code&gt; indicating whether long or short names is used.</source>
          <target state="translated">Либо атом &lt;code&gt;longnames&lt;/code&gt; или атомные &lt;code&gt;shortnames&lt;/code&gt; , указывающие, используются ли длинные или короткие имена.</target>
        </trans-unit>
        <trans-unit id="487f7c8a7538e9346944b722752c3236ffa482d3" translate="yes" xml:space="preserve">
          <source>Either the exit reason of the process, &lt;code&gt;noproc&lt;/code&gt; (process or port did not exist at the time of monitor creation), or &lt;code&gt;noconnection&lt;/code&gt; (no connection to the node where the monitored process resides).</source>
          <target state="translated">Либо причина выхода процесса, &lt;code&gt;noproc&lt;/code&gt; (процесс или порт не существовал во время создания монитора), либо &lt;code&gt;noconnection&lt;/code&gt; (отсутствие соединения с узлом, на котором находится отслеживаемый процесс).</target>
        </trans-unit>
        <trans-unit id="c34e480bf57ef7e38dbf93bd6c9f5b3abdddea2f" translate="yes" xml:space="preserve">
          <source>Elbasan</source>
          <target state="translated">Elbasan</target>
        </trans-unit>
        <trans-unit id="92bdb0ad601fb48f836694c9ca704b151de6f4e6" translate="yes" xml:space="preserve">
          <source>Element &lt;code&gt;GroupSpec&lt;/code&gt; makes it possible to specify group execution properties that overrides those in the group definition (that is, in &lt;code&gt;groups/0&lt;/code&gt;). Execution properties for subgroups might be overridden as well. This feature makes it possible to change properties of groups at the time of execution, without having to edit the test suite. The same feature is available for &lt;code&gt;group&lt;/code&gt; elements in the &lt;code&gt;Suite:all/0&lt;/code&gt; list. For details and examples, see section &lt;code&gt;&lt;a href=&quot;write_test_chapter#test_case_groups&quot;&gt; Test Case Groups&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3ca208403466a4841f552219491c8eba018e929" translate="yes" xml:space="preserve">
          <source>Element &lt;code&gt;GroupSpec&lt;/code&gt; makes it possible to specify group execution properties that overrides those in the group definition (that is, in &lt;code&gt;groups/0&lt;/code&gt;). Execution properties for subgroups might be overridden as well. This feature makes it possible to change properties of groups at the time of execution, without having to edit the test suite. The same feature is available for &lt;code&gt;group&lt;/code&gt; elements in the &lt;code&gt;Suite:all/0&lt;/code&gt; list. For details and examples, see section &lt;code&gt;&lt;a href=&quot;write_test_chapter#test_case_groups&quot;&gt;Test Case Groups&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Элемент &lt;code&gt;GroupSpec&lt;/code&gt; позволяет указать свойства выполнения группы, которые переопределяют свойства в определении группы (то есть в &lt;code&gt;groups/0&lt;/code&gt; ). Свойства выполнения для подгрупп также могут быть переопределены. Эта функция позволяет изменять свойства групп во время выполнения без необходимости редактировать набор тестов. Та же функция доступна для &lt;code&gt;group&lt;/code&gt; элементов в списке &lt;code&gt;Suite:all/0&lt;/code&gt; . Подробности и примеры см. В разделе &amp;laquo; &lt;code&gt;&lt;a href=&quot;write_test_chapter#test_case_groups&quot;&gt;Test Case Groups&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7e3308f88fa7e4a90eab00a6aeedd94b192c76f8" translate="yes" xml:space="preserve">
          <source>Element &lt;code&gt;Location&lt;/code&gt; at the end is optional. Omitting it is equivalent to specifying an empty list.</source>
          <target state="translated">&lt;code&gt;Location&lt;/code&gt; элемента в конце не является обязательным. Его пропуск равносилен указанию пустого списка.</target>
        </trans-unit>
        <trans-unit id="ec9d8fff696522dd91cca874c3d28af6c174f71c" translate="yes" xml:space="preserve">
          <source>Element is any of:</source>
          <target state="translated">Элемент-любой из них:</target>
        </trans-unit>
        <trans-unit id="968e60ba1bd927549a1b23411ba40213ea222600" translate="yes" xml:space="preserve">
          <source>Elements from the &lt;code&gt;Config&lt;/code&gt; list can, for example, be read with &lt;code&gt;proplists:get_value/2&lt;/code&gt; in STDLIB (or the macro &lt;code&gt;?config&lt;/code&gt; defined in &lt;code&gt;ct.hrl&lt;/code&gt;).</source>
          <target state="translated">Элементы из списка &lt;code&gt;Config&lt;/code&gt; можно, например, прочитать с помощью &lt;code&gt;proplists:get_value/2&lt;/code&gt; в STDLIB (или макроса &lt;code&gt;?config&lt;/code&gt; определенного в &lt;code&gt;ct.hrl&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="eb2cb18900c542ca840a5c213e23f0b3dc15b660" translate="yes" xml:space="preserve">
          <source>Elements in a tuple</source>
          <target state="translated">Элементы в кортеже</target>
        </trans-unit>
        <trans-unit id="d545793775877375fff2627af68fdce76d7bc2fa" translate="yes" xml:space="preserve">
          <source>Elen</source>
          <target state="translated">Elen</target>
        </trans-unit>
        <trans-unit id="5da3766347deb74cc1b458df110c22be94db592b" translate="yes" xml:space="preserve">
          <source>Elliptic Curve Diffie-Hellman</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa431301195dd48fed6f23a7bbd84655388a6540" translate="yes" xml:space="preserve">
          <source>Elliptic Curve Diffie-Hellman is available with OpenSSL 0.9.8o or later if not disabled by configuration. To dynamically check availability, check that the atom &lt;code&gt;ecdh&lt;/code&gt; is present in the list returned by &lt;code&gt;&lt;a href=&quot;crypto#supports-1&quot;&gt;crypto:supports(public_keys)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e73e966bd4df71c027a4c118ea65eb7371a4243d" translate="yes" xml:space="preserve">
          <source>Elliptic Curve cipher suites are supported if the Crypto application supports it and named curves are used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e700b1007a66e60f0a7f4f535b564650dfff800d" translate="yes" xml:space="preserve">
          <source>Elliptic Curves</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c85b928f430187c761aebf5278e8b29dec297af" translate="yes" xml:space="preserve">
          <source>Else the subdirectory &lt;code&gt;.ssh&lt;/code&gt; in the home directory of the user executing the OS process of the Erlang emulator is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9ce2f8df70b3b9f7f699376e6dadcb10ce14fcd" translate="yes" xml:space="preserve">
          <source>Else, If the option &lt;code&gt;user_dir&lt;/code&gt; is defined, that directory is used,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee7b0201083ca11d6276fbd37e317c08dff08162" translate="yes" xml:space="preserve">
          <source>Else, if the &lt;code&gt;user_passwords&lt;/code&gt; option is defined and the username and the password matches, the authentication is a success.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a589281f720ad2a72d778b5bb32dc24d843f4342" translate="yes" xml:space="preserve">
          <source>Else, if the option &lt;code&gt;password&lt;/code&gt; is defined and matches the password the authentication is a success. Note that the use of this option is not recommended in non-test code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4222989fc4f8ea6a86e6368dd890fe3a7e3a9888" translate="yes" xml:space="preserve">
          <source>Em quad</source>
          <target state="translated">В квадранте</target>
        </trans-unit>
        <trans-unit id="b895da879ed23d9e84111f08fcadea33bce091c1" translate="yes" xml:space="preserve">
          <source>Em space</source>
          <target state="translated">В космосе</target>
        </trans-unit>
        <trans-unit id="9bf49a8e8e16e64d1e80f11162b14dd5a6925b12" translate="yes" xml:space="preserve">
          <source>Emacs integration</source>
          <target state="translated">интеграция Emacs</target>
        </trans-unit>
        <trans-unit id="74ecfadd2780297c01438b6cea78b633f6b22ee8" translate="yes" xml:space="preserve">
          <source>Emakefile</source>
          <target state="translated">Emakefile</target>
        </trans-unit>
        <trans-unit id="57277b8bd9c47d99e492b166fbdc87545de80f47" translate="yes" xml:space="preserve">
          <source>Embedded Named Types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53217bbe98515c64d0537b3a416e9cda98f14cfd" translate="yes" xml:space="preserve">
          <source>Embedded Structured Types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a9e1619cb718522f7ab0f0dba6e08852aa8d86c" translate="yes" xml:space="preserve">
          <source>Emits warnings for all implicitly exported variables referred to after the primitives where they were first defined. By default, the compiler only emits warnings for exported variables referred to in a pattern.</source>
          <target state="translated">Выдает предупреждения для всех неявно экспортируемых переменных,на которые ссылаются после примитивов,где они были впервые определены.По умолчанию компилятор выдает предупреждения только для экспортируемых переменных,указанных в шаблоне.</target>
        </trans-unit>
        <trans-unit id="d4c2117b6ef3fcf84bfe3899fed68d89773c2661" translate="yes" xml:space="preserve">
          <source>Emits warnings for unused imported functions. Default is to emit no warnings for unused imported functions.</source>
          <target state="translated">Выдает предупреждения для неиспользуемых импортированных функций.По умолчанию не выдает предупреждения для неиспользуемых импортируемых функций.</target>
        </trans-unit>
        <trans-unit id="d8599dc127f27a271f0836cf6a62d5941fe3178a" translate="yes" xml:space="preserve">
          <source>Emitting Exit Signals</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d901413f50becfae6fdd27d649c08a5d538e0014" translate="yes" xml:space="preserve">
          <source>Empty documents are occasionally useful; in particular, they have the property that &lt;code&gt;above(X, empty())&lt;/code&gt; will force a new line after &lt;code&gt;X&lt;/code&gt; without leaving an empty line below it; since this is a common idiom, the utility function &lt;code&gt;&lt;a href=&quot;#break-1&quot;&gt;break/1&lt;/a&gt;&lt;/code&gt; will place a given document in such a context.</source>
          <target state="translated">Иногда полезны пустые документы; в частности, у них есть свойство, которое &lt;code&gt;above(X, empty())&lt;/code&gt; заставит новую строку после &lt;code&gt;X&lt;/code&gt; , не оставляя пустую строку под ней; поскольку это обычная идиома, служебная функция &lt;code&gt;&lt;a href=&quot;#break-1&quot;&gt;break/1&lt;/a&gt;&lt;/code&gt; поместит данный документ в такой контекст.</target>
        </trans-unit>
        <trans-unit id="fc00f52599abed8376aa0a197e15e0ea835df63f" translate="yes" xml:space="preserve">
          <source>Emulator flag &lt;code&gt;+fnu&lt;/code&gt; is ignored.</source>
          <target state="translated">Флаг эмулятора &lt;code&gt;+fnu&lt;/code&gt; игнорируется.</target>
        </trans-unit>
        <trans-unit id="55e05c2f7b68cf5e80a54adf43f642d47a0f59b3" translate="yes" xml:space="preserve">
          <source>En quad</source>
          <target state="translated">En quad</target>
        </trans-unit>
        <trans-unit id="5b62229c904d32c8112d3be27a54257af67d740a" translate="yes" xml:space="preserve">
          <source>En space</source>
          <target state="translated">В пространстве</target>
        </trans-unit>
        <trans-unit id="25ffb040887bf2788091d6954b71659dc5c37d66" translate="yes" xml:space="preserve">
          <source>Enable automatic gc of the mib server cache.</source>
          <target state="translated">Включить автоматический gc кэш сервера mib.</target>
        </trans-unit>
        <trans-unit id="fd6f2bb237a816f3fbfe6d4d2c6878e556d33f2f" translate="yes" xml:space="preserve">
          <source>Enable code coverage analysis (similar to &lt;code&gt;ct_run -cover&lt;/code&gt;).</source>
          <target state="translated">Включить анализ покрытия кода (аналогично &lt;code&gt;ct_run -cover&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="90a330d2bc3b5e0f4b42739d294b1f200e628844" translate="yes" xml:space="preserve">
          <source>Enable or disable debug during the open call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c21cd0052bbd4aec688bd575486e424a3296ba0c" translate="yes" xml:space="preserve">
          <source>Enable or disable use of the socket registry for this socket. This overrides the global value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47033a4bb8f28d29d58e4994c4d9050176047e9e" translate="yes" xml:space="preserve">
          <source>Enable process tracing for new processes and use &lt;code&gt;dyntrace&lt;/code&gt; as tracer backend.</source>
          <target state="translated">Включите трассировку процессов для новых процессов и используйте &lt;code&gt;dyntrace&lt;/code&gt; как серверную часть трассировщика.</target>
        </trans-unit>
        <trans-unit id="42b73ef7216dacb5d34f7ba030c613404e7e43a1" translate="yes" xml:space="preserve">
          <source>Enable the mib server cache.</source>
          <target state="translated">Включите кэш сервера Миб.</target>
        </trans-unit>
        <trans-unit id="4d4a9638a58d251377650d5cc7a8a58f9862c35d" translate="yes" xml:space="preserve">
          <source>Enable the process_register LTTng tracepoint for Erlang.</source>
          <target state="translated">Включите Process_register LTTng tracepoint для Erlang.</target>
        </trans-unit>
        <trans-unit id="9a59268c48f3b857ba83c67b5ea54f91ebdaa5a0" translate="yes" xml:space="preserve">
          <source>Enables (&lt;code&gt;Enable = true&lt;/code&gt;) or disables (&lt;code&gt;Enable = false&lt;/code&gt;) FIPS mode. Returns &lt;code&gt;true&lt;/code&gt; if the operation was successful or &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="086f907d75188b886010563f8bd5580d7dfa5ad7" translate="yes" xml:space="preserve">
          <source>Enables (&lt;code&gt;Flag == true&lt;/code&gt;) or disables (&lt;code&gt;Flag == false&lt;/code&gt;) printout of standard events to the terminal.</source>
          <target state="translated">Включает ( &lt;code&gt;Flag == true&lt;/code&gt; ) или отключает ( &lt;code&gt;Flag == false&lt;/code&gt; ) вывод стандартных событий на терминал.</target>
        </trans-unit>
        <trans-unit id="c455979edd964441a42bf74cc46c686c8c9674e4" translate="yes" xml:space="preserve">
          <source>Enables (&lt;code&gt;true&lt;/code&gt;) or disables (&lt;code&gt;false&lt;/code&gt;) the possibility to tunnel a TCP/IP connection in to a &lt;code&gt;server&lt;/code&gt;. Disabled per default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c34c585883308ccf10a9a0f2b7ca4c0bea6cad17" translate="yes" xml:space="preserve">
          <source>Enables (&lt;code&gt;true&lt;/code&gt;) or disables (&lt;code&gt;false&lt;/code&gt;) the possibility to tunnel a TCP/IP connection out of a &lt;code&gt;server&lt;/code&gt;. Disabled per default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19643cf04bb22173cf35df90be432b41c2c0c80f" translate="yes" xml:space="preserve">
          <source>Enables &lt;code&gt;sys_alloc&lt;/code&gt;.</source>
          <target state="translated">Включает &lt;code&gt;sys_alloc&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2925b3bafb5ae4152db5d7ac7ad43b60459fcd09" translate="yes" xml:space="preserve">
          <source>Enables SAC delay</source>
          <target state="translated">Включает задержку SAC</target>
        </trans-unit>
        <trans-unit id="60585639720a7d6f2dcd45081510159d2d44e676" translate="yes" xml:space="preserve">
          <source>Enables a table-specific parameterization of a generic hash module. This property can explicitly be set at table creation. Default is &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">Включает специфичную для таблицы параметризацию универсального хэш-модуля. Это свойство можно явно задать при создании таблицы. По умолчанию не &lt;code&gt;undefined&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a8e12000a8c8fd6dc64847bf440cb7b251ca8594" translate="yes" xml:space="preserve">
          <source>Enables all allocators (default).</source>
          <target state="translated">Включает все аллокаторы (по умолчанию).</target>
        </trans-unit>
        <trans-unit id="66de0b189789174995d11e9a7ecdc4b4c55056e9" translate="yes" xml:space="preserve">
          <source>Enables all breakpoints.</source>
          <target state="translated">Включает все точки останова.</target>
        </trans-unit>
        <trans-unit id="77e83ac48ceff1b4f43eaffc497baace9759de30" translate="yes" xml:space="preserve">
          <source>Enables allocator &lt;code&gt;&amp;lt;S&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Включает распределитель &lt;code&gt;&amp;lt;S&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2df58c7f8ed4e32b890b81f44943b59779b18455" translate="yes" xml:space="preserve">
          <source>Enables autoload tracing, displaying information while loading code.</source>
          <target state="translated">Включает автозагрузку,отображая информацию во время загрузки кода.</target>
        </trans-unit>
        <trans-unit id="e63213e4ec392a2d1540f7cfff72fc5cfb579a1d" translate="yes" xml:space="preserve">
          <source>Enables automatic &lt;code&gt;&lt;a href=&quot;write_test_chapter#timetraps&quot;&gt;timetrap time-out&lt;/a&gt;&lt;/code&gt; scaling.</source>
          <target state="translated">Включает автоматическое &lt;code&gt;&lt;a href=&quot;write_test_chapter#timetraps&quot;&gt;timetrap time-out&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7c1880c250eb08af05373e2f459afdf06f86ade5" translate="yes" xml:space="preserve">
          <source>Enables automatic Path MTU discovery</source>
          <target state="translated">Включает автоматическое обнаружение пути MTU</target>
        </trans-unit>
        <trans-unit id="4a450a6d403248f14eea46a3f225948ab6482c2b" translate="yes" xml:space="preserve">
          <source>Enables checking of the &lt;code&gt;&lt;a href=&quot;#type-authentication_client_options&quot;&gt;client's user name&lt;/a&gt;&lt;/code&gt; in the server when doing public key authentication. It is disabled by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1aaeb3427c0032642a4226c0cd3b5f50f5fb209d" translate="yes" xml:space="preserve">
          <source>Enables debug output. The more &lt;code&gt;-d&lt;/code&gt; flags specified, the more debug output you will get (to a certain limit). This option is most useful when the &lt;code&gt;epmd&lt;/code&gt; daemon is not started as a daemon.</source>
          <target state="translated">Включает вывод отладки. Чем больше указано &lt;code&gt;-d&lt;/code&gt; флагов, тем больше отладочных данных вы получите (до определенного предела). Эта опция наиболее полезна, когда демон &lt;code&gt;epmd&lt;/code&gt; не запущен как демон.</target>
        </trans-unit>
        <trans-unit id="dc4bb9c9b6967fcf2db9ac785f5fa835fda825a8" translate="yes" xml:space="preserve">
          <source>Enables definition of an alternative hashing scheme. The module must implement the &lt;code&gt;&lt;a href=&quot;mnesia_frag_hash&quot;&gt;mnesia_frag_hash&lt;/a&gt;&lt;/code&gt; callback behavior. This property can explicitly be set at table creation. Default is &lt;code&gt;mnesia_frag_hash&lt;/code&gt;.</source>
          <target state="translated">Позволяет определить альтернативную схему хеширования. Модуль должен реализовывать поведение обратного вызова &lt;code&gt;&lt;a href=&quot;mnesia_frag_hash&quot;&gt;mnesia_frag_hash&lt;/a&gt;&lt;/code&gt; . Это свойство можно явно задать при создании таблицы. По умолчанию &lt;code&gt;mnesia_frag_hash&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3a700ff4718bb88a01bb446ce6cbb93500e0f99a" translate="yes" xml:space="preserve">
          <source>Enables fetching of CRLs specified as http URIs in&lt;code&gt;X509 certificate extensions&lt;/code&gt;. Requires the OTP inets application.</source>
          <target state="translated">Включает получение списков отзыва &lt;code&gt;X509 certificate extensions&lt;/code&gt; указанных как http URI в расширениях сертификатов X509 . Требуется приложение OTP inets.</target>
        </trans-unit>
        <trans-unit id="ad67ee1b0fedae077d66e983c37484352f51633e" translate="yes" xml:space="preserve">
          <source>Enables heartbeat</source>
          <target state="translated">Позволяет сердцебиение</target>
        </trans-unit>
        <trans-unit id="a3907a70a0b2989a151817232d2aeddc263d8c16" translate="yes" xml:space="preserve">
          <source>Enables installation of alternative debug functions. An example of such a function is a trigger, a function that waits for some special event and performs some action when the event is generated. For example, turning on low-level tracing.</source>
          <target state="translated">Позволяет устанавливать альтернативные функции отладки.Примером такой функции является триггер-функция,которая ждет какого-то специального события и выполняет какое-то действие при генерации события.Например,включение низкоуровневой трассировки.</target>
        </trans-unit>
        <trans-unit id="ffe6f57150e2b9c16f36b6e2673242748d6ce067" translate="yes" xml:space="preserve">
          <source>Enables modification of the logging behavior, see &lt;code&gt;&lt;a href=&quot;run_test_chapter#logopts&quot;&gt;Log options&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Позволяет изменить поведение журнала, см. &lt;code&gt;&lt;a href=&quot;run_test_chapter#logopts&quot;&gt;Log options&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="357280b780d03061af846c26360d95eeff0c67f7" translate="yes" xml:space="preserve">
          <source>Enables modified timing and sets the modified timing level. Valid range is 0-9. The timing of the runtime system is changed. A high level usually means a greater change than a low level. Changing the timing can be very useful for finding timing-related bugs.</source>
          <target state="translated">Включает модифицированное время и устанавливает модифицированный уровень времени.Допустимый диапазон-0-9.Время работы системы изменяется.Высокий уровень обычно означает большее изменение,чем низкий уровень.Изменение тайминга может быть очень полезно для поиска ошибок,связанных с таймингом.</target>
        </trans-unit>
        <trans-unit id="2af7dc33c7cb12530925d2f6df368f232e29cfaa" translate="yes" xml:space="preserve">
          <source>Enables or disables &lt;code&gt; scheduler utilization&lt;/code&gt; balancing of load. By default scheduler utilization balancing is disabled and instead scheduler compaction of load is enabled, which strives for a load distribution that causes as many scheduler threads as possible to be fully loaded (that is, not run out of work). When scheduler utilization balancing is enabled, the system instead tries to balance scheduler utilization between schedulers. That is, strive for equal scheduler utilization on all schedulers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="615f0c0aff5e4fca8ae52bd7ab1a8c331579d793" translate="yes" xml:space="preserve">
          <source>Enables or disables &lt;code&gt;&lt;a href=&quot;time_correction#Time_Correction&quot;&gt;time correction&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">Включает или отключает &lt;code&gt;&lt;a href=&quot;time_correction#Time_Correction&quot;&gt;time correction&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="d823391dc2d43021b24dfe428d56fd43f464182a" translate="yes" xml:space="preserve">
          <source>Enables or disables &lt;code&gt;scheduler utilization&lt;/code&gt; balancing of load. By default scheduler utilization balancing is disabled and instead scheduler compaction of load is enabled, which strives for a load distribution that causes as many scheduler threads as possible to be fully loaded (that is, not run out of work). When scheduler utilization balancing is enabled, the system instead tries to balance scheduler utilization between schedulers. That is, strive for equal scheduler utilization on all schedulers.</source>
          <target state="translated">Включает или отключает балансировку нагрузки с &lt;code&gt;scheduler utilization&lt;/code&gt; . По умолчанию балансировка использования планировщика отключена, и вместо этого включено уплотнение нагрузки планировщиком, которое стремится к распределению нагрузки, которое приводит к полной загрузке максимально возможного количества потоков планировщика (то есть не к выходу из работы). Когда балансировка использования планировщика включена, система вместо этого пытается сбалансировать использование планировщика между планировщиками. То есть стремитесь к равному использованию планировщика на всех планировщиках.</target>
        </trans-unit>
        <trans-unit id="1e32eab9107eaf08c77b89032d18371faffb6cdc" translate="yes" xml:space="preserve">
          <source>Enables or disables &lt;strong&gt;call tracing&lt;/strong&gt; for one or more functions. Must be combined with &lt;code&gt;&lt;a href=&quot;#trace-3&quot;&gt;erlang:trace/3&lt;/a&gt;&lt;/code&gt; to set the &lt;code&gt;call&lt;/code&gt; trace flag for one or more processes.</source>
          <target state="translated">Включает или отключает &lt;strong&gt;трассировку вызовов&lt;/strong&gt; для одной или нескольких функций. Должен сочетаться с &lt;code&gt;&lt;a href=&quot;#trace-3&quot;&gt;erlang:trace/3&lt;/a&gt;&lt;/code&gt; , чтобы установить флаг трассировки &lt;code&gt;call&lt;/code&gt; для одного или нескольких процессов.</target>
        </trans-unit>
        <trans-unit id="2526ae91dd204d3d2ab7ffcfeb2b5857d6c093f2" translate="yes" xml:space="preserve">
          <source>Enables or disables OS signals.</source>
          <target state="translated">Включает или отключает сигналы ОС.</target>
        </trans-unit>
        <trans-unit id="1c4032d67b9cd3bef26458eda1149afa48dbaf5f" translate="yes" xml:space="preserve">
          <source>Enables or disables printout of standard events to a file.</source>
          <target state="translated">Разрешает или запрещает распечатку стандартных событий в файл.</target>
        </trans-unit>
        <trans-unit id="f873933c3614b84347efc49bd44a15cf27eb0ad2" translate="yes" xml:space="preserve">
          <source>Enables or disables scheduler compaction of load. By default scheduler compaction of load is enabled. When enabled, load balancing strives for a load distribution, which causes as many scheduler threads as possible to be fully loaded (that is, not run out of work). This is accomplished by migrating load (for example, runnable processes) into a smaller set of schedulers when schedulers frequently run out of work. When disabled, the frequency with which schedulers run out of work is not taken into account by the load balancing logic.</source>
          <target state="translated">Включает или выключает уплотнение нагрузки планировщиком.По умолчанию уплотнение нагрузки в планировщике включено.Когда включено,балансировка нагрузки стремится к распределению нагрузки,что приводит к полной загрузке как можно большего количества потоков планировщика (т.е.не заканчивается работа).Это достигается путём миграции нагрузки (например,запущенных процессов)в меньший набор планировщиков,когда планировщики часто заканчивают работу.При отключении,частота,с которой планировщики заканчивают работу,не учитывается логикой балансировки нагрузки.</target>
        </trans-unit>
        <trans-unit id="8cac6a4d74e5fb7ad5378afd8802105af7c1d25f" translate="yes" xml:space="preserve">
          <source>Enables or disables the collection of statistics. If &lt;code&gt;Flag&lt;/code&gt; is &lt;code&gt;get&lt;/code&gt;, the statistical collection is returned.</source>
          <target state="translated">Включает или отключает сбор статистики. Если &lt;code&gt;Flag&lt;/code&gt; имеет значение &lt;code&gt;get&lt;/code&gt; , возвращается статистический сборник.</target>
        </trans-unit>
        <trans-unit id="38ff1c7d6436d6406a601e79d21b1dc7a693e097" translate="yes" xml:space="preserve">
          <source>Enables or disables the logging of all system events in text format to the file. The events are formatted with a function that is defined by the process that generated the event (with a call to &lt;code&gt;&lt;a href=&quot;#handle_debug-4&quot;&gt;handle_debug/4&lt;/a&gt;&lt;/code&gt;). The file is opened with encoding UTF-8.</source>
          <target state="translated">Включает или отключает запись всех системных событий в текстовом формате в файл. События форматируются с помощью функции, которая определяется процессом, &lt;code&gt;&lt;a href=&quot;#handle_debug-4&quot;&gt;handle_debug/4&lt;/a&gt;&lt;/code&gt; событие (с вызовом handle_debug / 4 ). Файл открывается в кодировке UTF-8.</target>
        </trans-unit>
        <trans-unit id="706a0f363687eafe06b91d6585ebbab3881c8cb3" translate="yes" xml:space="preserve">
          <source>Enables saving of abstract structure on file for debugging purpose.</source>
          <target state="translated">Позволяет сохранить абстрактную структуру в файле для отладки.</target>
        </trans-unit>
        <trans-unit id="d9853ba1a8ea65043efdb893f1250a28d51ec84b" translate="yes" xml:space="preserve">
          <source>Enables the &lt;code&gt;os_sup&lt;/code&gt; service. Needed on Solaris only.</source>
          <target state="translated">Включает службу &lt;code&gt;os_sup&lt;/code&gt; . Требуется только для Solaris.</target>
        </trans-unit>
        <trans-unit id="3299ed2aa6cc796f27c06b5528ac008312e30a87" translate="yes" xml:space="preserve">
          <source>Enables the TLS/DTLS server to have a local policy for deciding if a session is to be reused or not. Meaningful only if &lt;code&gt;reuse_sessions&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;. &lt;code&gt;SuggestedSessionId&lt;/code&gt; is a &lt;code&gt;binary()&lt;/code&gt;, &lt;code&gt;PeerCert&lt;/code&gt; is a DER-encoded certificate, &lt;code&gt;Compression&lt;/code&gt; is an enumeration integer, and &lt;code&gt;CipherSuite&lt;/code&gt; is of type &lt;code&gt;ciphersuite()&lt;/code&gt;.</source>
          <target state="translated">Позволяет серверу TLS / DTLS иметь локальную политику для принятия решения о том, следует ли повторно использовать сеанс или нет. &lt;code&gt;reuse_sessions&lt;/code&gt; только если для reuse_sessions установлено значение &lt;code&gt;true&lt;/code&gt; . &lt;code&gt;SuggestedSessionId&lt;/code&gt; - это &lt;code&gt;binary()&lt;/code&gt; , &lt;code&gt;PeerCert&lt;/code&gt; - это сертификат в формате DER, &lt;code&gt;Compression&lt;/code&gt; - это целое число перечисления, а &lt;code&gt;CipherSuite&lt;/code&gt; имеет тип &lt;code&gt;ciphersuite()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c522128b3a7019b49d9a0b8a5e0473a314dfc7fa" translate="yes" xml:space="preserve">
          <source>Enables the autoresume feature. When enabled, remote nodes try to reconnect to the controlling node if they are restarted. The feature requires application Runtime_Tools to be started (so it has to be present in the &lt;code&gt;.boot&lt;/code&gt; scripts if the traced nodes run with embedded Erlang). If this is not possible, resume can be performed manually by starting &lt;code&gt;Runtime_Tools&lt;/code&gt; remotely using &lt;code&gt;rpc:call/4&lt;/code&gt;.</source>
          <target state="translated">Включает функцию автоматического возобновления. Если этот параметр включен, удаленные узлы пытаются повторно подключиться к управляющему узлу при перезапуске. Эта функция требует запуска приложения Runtime_Tools (поэтому оно должно присутствовать в сценариях &lt;code&gt;.boot&lt;/code&gt; , если отслеживаемые узлы работают со встроенным Erlang). Если это невозможно, возобновить работу можно вручную, запустив &lt;code&gt;Runtime_Tools&lt;/code&gt; удаленно с помощью &lt;code&gt;rpc:call/4&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="44c529662c2d69b9e4411fc182619f06a2aa4994" translate="yes" xml:space="preserve">
          <source>Enables the code path cache of the code server; see &lt;code&gt;code(3)&lt;/code&gt;.</source>
          <target state="translated">Включает кеширование пути кода сервера кода; см. &lt;code&gt;code(3)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="27f7a0694e3964dbe3f3f0deff4a82e761a20c55" translate="yes" xml:space="preserve">
          <source>Enables time correction. This is the default if time correction is supported on the specific platform.</source>
          <target state="translated">Позволяет корректировать время.Это значение используется по умолчанию,если временная коррекция поддерживается на конкретной платформе.</target>
        </trans-unit>
        <trans-unit id="1f48bf86a5ea414b568d06bccd0c39df4107ada1" translate="yes" xml:space="preserve">
          <source>Enables to efficiently read the terms that are appended to a log. Minimises disk I/O by reading 64 kilobyte chunks from the file.</source>
          <target state="translated">Позволяет эффективно читать термины,которые прилагаются к журналу.Минимизирует дисковый ввод/вывод,считывая 64 килобайтных кусочка из файла.</target>
        </trans-unit>
        <trans-unit id="9a0c56d593d7b6385220fb5c3c0f22c02a031e9c" translate="yes" xml:space="preserve">
          <source>Enables tracing for all received messages (to &lt;code&gt;'receive'&lt;/code&gt; traced processes). Any match specification is removed. &lt;strong&gt;This is the default&lt;/strong&gt;.</source>
          <target state="translated">Включает трассировку для всех полученных сообщений (для &lt;code&gt;'receive'&lt;/code&gt; отслеживаемых процессов). Любая спецификация соответствия удаляется. &lt;strong&gt;Это значение по умолчанию&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="c0650d46dedcd7a949e16c3270a03871e5edb6c2" translate="yes" xml:space="preserve">
          <source>Enables tracing for all sent messages (from &lt;code&gt;send&lt;/code&gt; traced processes). Any match specification is removed. &lt;strong&gt;This is the default&lt;/strong&gt;.</source>
          <target state="translated">Включает отслеживание всех отправленных сообщений (из отслеживаемых процессов &lt;code&gt;send&lt;/code&gt; ). Любая спецификация соответствия удаляется. &lt;strong&gt;Это значение по умолчанию&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="24884b0a02a3d3730cdbdf4ea864f21b5887858d" translate="yes" xml:space="preserve">
          <source>Enables tracing for the matching functions. Any match specification is removed.</source>
          <target state="translated">Включает трассировку для функций совпадения.Любое совпадение спецификации удаляется.</target>
        </trans-unit>
        <trans-unit id="4dbe510dd55a873bed641c91ad586814883d3ac4" translate="yes" xml:space="preserve">
          <source>Enables verbose output.</source>
          <target state="translated">Включает многословный вывод.</target>
        </trans-unit>
        <trans-unit id="1d63208713c20c60f36d4a0bd52fdfeeaac74557" translate="yes" xml:space="preserve">
          <source>Enables/disables periodic transmission on a connected socket when no other data is exchanged. If the other end does not respond, the connection is considered broken and an error message is sent to the controlling process. Defaults to &lt;code&gt;disabled&lt;/code&gt;.</source>
          <target state="translated">Включает / отключает периодическую передачу по подключенному сокету, когда другие данные не обмениваются. Если другой конец не отвечает, соединение считается разорванным, и управляющему процессу отправляется сообщение об ошибке. По умолчанию &lt;code&gt;disabled&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dc8852a728863245cf6c2ea5864c53ec32099900" translate="yes" xml:space="preserve">
          <source>Enables/disables permission to send broadcasts.</source>
          <target state="translated">Включает/выключает разрешение на отправку трансляций.</target>
        </trans-unit>
        <trans-unit id="50b6e1cb035c7e1653d306c33b0528a17000184c" translate="yes" xml:space="preserve">
          <source>Enables/disables routing bypass for outgoing messages.</source>
          <target state="translated">Включение/выключение обхода маршрутизации для исходящих сообщений.</target>
        </trans-unit>
        <trans-unit id="9fcc3abb54019e5dbbe11160d545772b5ffb3c9a" translate="yes" xml:space="preserve">
          <source>Enabling FIPS mode will also disable algorithms and features.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="573a8fde2e1fa269c9fcf8e97134769f903a40af" translate="yes" xml:space="preserve">
          <source>Enabling the service includes actions which require root privileges, such as change of ownership and file privileges of an executable binary file, and creating a modified copy of the configuration file for &lt;code&gt;syslogd&lt;/code&gt;. When &lt;code&gt;os_sup&lt;/code&gt; is terminated, the service must be disabled, meaning the original configuration must be restored. Enabling/disabling can be done either outside or inside &lt;code&gt;os_sup&lt;/code&gt;, see &lt;code&gt;&lt;a href=&quot;#config&quot;&gt;Configuration&lt;/a&gt;&lt;/code&gt; below.</source>
          <target state="translated">Включение службы включает в себя действия, требующие привилегий суперпользователя, такие как смена владельца и привилегии файла исполняемого двоичного файла, а также создание измененной копии файла конфигурации для &lt;code&gt;syslogd&lt;/code&gt; . Когда &lt;code&gt;os_sup&lt;/code&gt; завершается, служба должна быть отключена, то есть исходная конфигурация должна быть восстановлена. Включение / отключение может быть выполнено как снаружи, так и внутри &lt;code&gt;os_sup&lt;/code&gt; , см. &lt;code&gt;&lt;a href=&quot;#config&quot;&gt;Configuration&lt;/a&gt;&lt;/code&gt; ниже.</target>
        </trans-unit>
        <trans-unit id="d9f192da9606fd7fd5869526f37b21f3dd2a7c7e" translate="yes" xml:space="preserve">
          <source>Enabling the service includes actions which require root privileges, such as change of ownership and file privileges of an executable binary file, and creating a modified copy of the configuration file for &lt;code&gt;syslogd&lt;/code&gt;. When &lt;code&gt;os_sup&lt;/code&gt; is terminated, the service must be disabled, meaning the original configuration must be restored. Enabling/disabling can be done either outside or inside &lt;code&gt;os_sup&lt;/code&gt;. See &lt;code&gt;&lt;a href=&quot;#config&quot;&gt;Configuration&lt;/a&gt;&lt;/code&gt; below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c23d78e950c37608799201d0c2cc33f07da966c6" translate="yes" xml:space="preserve">
          <source>EncFlag :: true) -&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c511033aa027d017fda29e8a006bfb9f353b3a48" translate="yes" xml:space="preserve">
          <source>EncFlag) -&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4393b5f9d380987d4ced572aaef9ee8a74133bf" translate="yes" xml:space="preserve">
          <source>Enclosing mark</source>
          <target state="translated">Знак ограждения</target>
        </trans-unit>
        <trans-unit id="bca8cc4256c0c31c63935cf063643e54997e3d43" translate="yes" xml:space="preserve">
          <source>Encode (generate) an SDP construct.</source>
          <target state="translated">Кодируйте (генерируйте)конструкцию SDP.</target>
        </trans-unit>
        <trans-unit id="bc6b76a0bae3808e8c4c861292502c13fd082970" translate="yes" xml:space="preserve">
          <source>Encode a Diameter message.</source>
          <target state="translated">Кодируйте сообщение Диаметр.</target>
        </trans-unit>
        <trans-unit id="f48c48f6cdcaa4ee965faed6f3e5d2dd4fe0ed0a" translate="yes" xml:space="preserve">
          <source>Encode a megaco action reply. If this, for whatever reason, is not supported, the function should return the error reason &lt;code&gt;not_implemented&lt;/code&gt;.</source>
          <target state="translated">Закодируйте ответ мегако-действия. Если это по какой-либо причине не поддерживается, функция должна вернуть причину ошибки &lt;code&gt;not_implemented&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="919696abd8a16da6f19a76ce339cffb55a6348e1" translate="yes" xml:space="preserve">
          <source>Encode a megaco message.</source>
          <target state="translated">Кодируй мега-сообщение.</target>
        </trans-unit>
        <trans-unit id="267e2bf6ea12bf30c6d27046637855d09ac7cfca" translate="yes" xml:space="preserve">
          <source>Encode a megaco transaction. If this, for whatever reason, is not supported, the function should return the error reason &lt;code&gt;not_implemented&lt;/code&gt;.</source>
          <target state="translated">Закодируйте транзакцию мегако. Если это по какой-либо причине не поддерживается, функция должна вернуть причину ошибки &lt;code&gt;not_implemented&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="70ef8fa05ae9c6457354b1cad354772ba81b3d6f" translate="yes" xml:space="preserve">
          <source>Encode and Decode Functions for SNMP PDUs</source>
          <target state="translated">Функции кодирования и декодирования для SNMP PDU</target>
        </trans-unit>
        <trans-unit id="102d654a81f03bcc7db3fbb3416263b493d476e7" translate="yes" xml:space="preserve">
          <source>Encode megaco action requests. This function is called when the user calls the function &lt;code&gt;&lt;a href=&quot;megaco#encode_actions&quot;&gt;encode_actions/3&lt;/a&gt;&lt;/code&gt;. If that function is never used or if the codec cannot support this (the encoding of individual actions), then return with error reason &lt;code&gt;not_implemented&lt;/code&gt;.</source>
          <target state="translated">Кодировать запросы на действия мегако. Эта функция вызывается, когда пользователь вызывает функцию &lt;code&gt;&lt;a href=&quot;megaco#encode_actions&quot;&gt;encode_actions/3&lt;/a&gt;&lt;/code&gt; . Если эта функция никогда не используется или кодек не может ее поддерживать (кодирование отдельных действий), то возвратите с причиной ошибки &lt;code&gt;not_implemented&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="27f649a79f32171afe094c758b92176d7cfd9a23" translate="yes" xml:space="preserve">
          <source>Encoded as an atom, using &lt;code&gt;&lt;a href=&quot;#ATOM_EXT&quot;&gt;ATOM_UTF8_EXT&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#SMALL_ATOM_EXT&quot;&gt;SMALL_ATOM_UTF8_EXT&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;#ATOM_CACHE_REF&quot;&gt; ATOM_CACHE_REF&lt;/a&gt;&lt;/code&gt;. Is the module that the fun is implemented in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc7359ada67aed32ddecafb9495d6e88769570ad" translate="yes" xml:space="preserve">
          <source>Encoded as an atom, using &lt;code&gt;&lt;a href=&quot;#ATOM_EXT&quot;&gt;ATOM_UTF8_EXT&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#SMALL_ATOM_EXT&quot;&gt;SMALL_ATOM_UTF8_EXT&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;#ATOM_CACHE_REF&quot;&gt;ATOM_CACHE_REF&lt;/a&gt;&lt;/code&gt;. Is the module that the fun is implemented in.</source>
          <target state="translated">Кодируется как атом с использованием &lt;code&gt;&lt;a href=&quot;#ATOM_EXT&quot;&gt;ATOM_UTF8_EXT&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#SMALL_ATOM_EXT&quot;&gt;SMALL_ATOM_UTF8_EXT&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;#ATOM_CACHE_REF&quot;&gt;ATOM_CACHE_REF&lt;/a&gt;&lt;/code&gt; . Модуль, в котором реализовано веселье.</target>
        </trans-unit>
        <trans-unit id="e3b928bc70891ebc97a0d114e15fcabc81155c57" translate="yes" xml:space="preserve">
          <source>Encoded as an atom, using &lt;code&gt;&lt;a href=&quot;#ATOM_UTF8_EXT&quot;&gt;ATOM_UTF8_EXT&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#SMALL_ATOM_UTF8_EXT&quot;&gt;SMALL_ATOM_UTF8_EXT&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;#ATOM_CACHE_REF&quot;&gt; ATOM_CACHE_REF&lt;/a&gt;&lt;/code&gt;. This is the module that the fun is implemented in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a95dc8048f6280b2e1bb9aeb3ae170e17dd6166e" translate="yes" xml:space="preserve">
          <source>Encoded as an atom, using &lt;code&gt;&lt;a href=&quot;#ATOM_UTF8_EXT&quot;&gt;ATOM_UTF8_EXT&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#SMALL_ATOM_UTF8_EXT&quot;&gt;SMALL_ATOM_UTF8_EXT&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;#ATOM_CACHE_REF&quot;&gt;ATOM_CACHE_REF&lt;/a&gt;&lt;/code&gt;. This is the module that the fun is implemented in.</source>
          <target state="translated">Кодируется как атом с использованием &lt;code&gt;&lt;a href=&quot;#ATOM_UTF8_EXT&quot;&gt;ATOM_UTF8_EXT&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#SMALL_ATOM_UTF8_EXT&quot;&gt;SMALL_ATOM_UTF8_EXT&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;#ATOM_CACHE_REF&quot;&gt;ATOM_CACHE_REF&lt;/a&gt;&lt;/code&gt; . Это модуль, в котором реализовано веселье.</target>
        </trans-unit>
        <trans-unit id="5443536e350a97a2172212037b9f508ff80ac36e" translate="yes" xml:space="preserve">
          <source>Encodes SNMP UsmSecurityParameters into a list of bytes.</source>
          <target state="translated">Кодирует SNMP UsmSecurityParameters в список байт.</target>
        </trans-unit>
        <trans-unit id="05c49e564fbd4be907c60f1d9484dc8cfc4ffd8d" translate="yes" xml:space="preserve">
          <source>Encodes a GCC &lt;code&gt;long long&lt;/code&gt; or Visual C++ &lt;code&gt;__int64&lt;/code&gt; (64-bit) integer in the binary format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ea1eab2759b39f44eff8aedf3f696f0b6c8fa67" translate="yes" xml:space="preserve">
          <source>Encodes a GCC &lt;code&gt;long long&lt;/code&gt; or Visual C++ &lt;code&gt;__int64&lt;/code&gt; (64-bit) integer in the binary format. This function is missing in the VxWorks port.</source>
          <target state="translated">Кодирует &lt;code&gt;long long&lt;/code&gt; целое число GCC или Visual C ++ &lt;code&gt;__int64&lt;/code&gt; (64-разрядное) в двоичном формате. Эта функция отсутствует в порте VxWorks.</target>
        </trans-unit>
        <trans-unit id="d64be51e43c6327060d25b2637eaf89a5fdf21ec" translate="yes" xml:space="preserve">
          <source>Encodes a GCC &lt;code&gt;unsigned long long&lt;/code&gt; or Visual C++ &lt;code&gt;unsigned __int64&lt;/code&gt; (64-bit) integer in the binary format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39db68723a1e70c2f41cfe15c0c139b726cce330" translate="yes" xml:space="preserve">
          <source>Encodes a GCC &lt;code&gt;unsigned long long&lt;/code&gt; or Visual C++ &lt;code&gt;unsigned __int64&lt;/code&gt; (64-bit) integer in the binary format. This function is missing in the VxWorks port.</source>
          <target state="translated">Кодирует целое число GCC &lt;code&gt;unsigned long long&lt;/code&gt; или Visual C ++ &lt;code&gt;unsigned __int64&lt;/code&gt; (64-разрядное) в двоичном формате. Эта функция отсутствует в порте VxWorks.</target>
        </trans-unit>
        <trans-unit id="55cf245f3abef1d97562ca0510d5aa54ddef2103" translate="yes" xml:space="preserve">
          <source>Encodes a GMP &lt;code&gt;mpz_t&lt;/code&gt; integer to binary format. To use this function, the &lt;code&gt;ei&lt;/code&gt; library must be configured and compiled to use the GMP library.</source>
          <target state="translated">Кодирует целое число GMP &lt;code&gt;mpz_t&lt;/code&gt; в двоичный формат. Чтобы использовать эту функцию, библиотека &lt;code&gt;ei&lt;/code&gt; должна быть настроена и скомпилирована для использования библиотеки GMP.</target>
        </trans-unit>
        <trans-unit id="544dc6535c1f9dfc1c63c385c2a64dabd5493e6d" translate="yes" xml:space="preserve">
          <source>Encodes a binary in the binary format. The data is at &lt;code&gt;p&lt;/code&gt;, of &lt;code&gt;len&lt;/code&gt; bytes length.</source>
          <target state="translated">Кодирует двоичный файл в двоичный формат. Данные находятся в &lt;code&gt;p&lt;/code&gt; размером &lt;code&gt;len&lt;/code&gt; байтов.</target>
        </trans-unit>
        <trans-unit id="d8c975263ee4e63639cef44170082c635d8ecbe5" translate="yes" xml:space="preserve">
          <source>Encodes a bit string in the binary format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="299ae563f3b560341ecaf360dad29cc4e64c195f" translate="yes" xml:space="preserve">
          <source>Encodes a boolean value as the atom &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;p&lt;/code&gt; is not zero, or &lt;code&gt;false&lt;/code&gt; if &lt;code&gt;p&lt;/code&gt; is zero.</source>
          <target state="translated">Кодирует логическое значение как атом &lt;code&gt;true&lt;/code&gt; , если &lt;code&gt;p&lt;/code&gt; не равно нулю, или &lt;code&gt;false&lt;/code&gt; , если &lt;code&gt;p&lt;/code&gt; равно нулю.</target>
        </trans-unit>
        <trans-unit id="142d43fe975c5f4b8920a4641578639d19a398ce" translate="yes" xml:space="preserve">
          <source>Encodes a char (8-bit) as an integer between 0-255 in the binary format. For historical reasons the integer argument is of type &lt;code&gt;char&lt;/code&gt;. Your C code is to consider the specified argument to be of type &lt;code&gt;unsigned char&lt;/code&gt; even if the C compilers and system may define &lt;code&gt;char&lt;/code&gt; to be signed.</source>
          <target state="translated">Кодирует 8-битный символ как целое число от 0 до 255 в двоичном формате. По историческим причинам целочисленный аргумент имеет тип &lt;code&gt;char&lt;/code&gt; . Ваш код C должен рассматривать указанный аргумент как тип &lt;code&gt;unsigned char&lt;/code&gt; , даже если компиляторы C и система могут определить &lt;code&gt;char&lt;/code&gt; для подписи.</target>
        </trans-unit>
        <trans-unit id="67efd073e483aab3ad7bd50ac03659126a68c7e9" translate="yes" xml:space="preserve">
          <source>Encodes a double-precision (64-bit) floating point number in the binary format.</source>
          <target state="translated">Кодирует число с плавающей точкой двойной точности (64-битное)в двоичном формате.</target>
        </trans-unit>
        <trans-unit id="db6231d4a9f50aa12152f662f310840279de88e9" translate="yes" xml:space="preserve">
          <source>Encodes a fun in the binary format. Parameter &lt;code&gt;p&lt;/code&gt; points to an &lt;code&gt;erlang_fun&lt;/code&gt; structure. The &lt;code&gt;erlang_fun&lt;/code&gt; is not freed automatically, the &lt;code&gt;free_fun&lt;/code&gt; is to be called if the fun is not needed after encoding.</source>
          <target state="translated">Кодирует веселье в двоичном формате. Параметр &lt;code&gt;p&lt;/code&gt; указывает на структуру &lt;code&gt;erlang_fun&lt;/code&gt; . &lt;code&gt;erlang_fun&lt;/code&gt; не освобождается автоматически, то &lt;code&gt;free_fun&lt;/code&gt; будет называться , если удовольствие не требуется после кодирования.</target>
        </trans-unit>
        <trans-unit id="f3eb79e01a1e1ed3ff93bc0825828edeff65ab2a" translate="yes" xml:space="preserve">
          <source>Encodes a hexadecimal encoded URI.</source>
          <target state="translated">Кодирует шестнадцатеричный кодированный URI.</target>
        </trans-unit>
        <trans-unit id="5399714ce3209e4c7dc2e47140aed28f61fcb18b" translate="yes" xml:space="preserve">
          <source>Encodes a list header, with a specified arity. The next &lt;code&gt;arity+1&lt;/code&gt; terms are the elements (actually its &lt;code&gt;arity&lt;/code&gt; cons cells) and the tail of the list. Lists and tuples are encoded recursively, so that a list can contain another list or tuple.</source>
          <target state="translated">Кодирует заголовок списка с указанной арностью. Следующие термины с &lt;code&gt;arity+1&lt;/code&gt; - это элементы (фактически, это элементы с &lt;code&gt;arity&lt;/code&gt; ) и конец списка. Списки и кортежи кодируются рекурсивно, поэтому список может содержать другой список или кортеж.</target>
        </trans-unit>
        <trans-unit id="c38845bcb5dace03433d108ba34545ffac9a2ca1" translate="yes" xml:space="preserve">
          <source>Encodes a list of SSH file entries (public keys and attributes) to a binary. Possible attributes depend on the file type, see &lt;code&gt;&lt;a href=&quot;#ssh_decode-2&quot;&gt; ssh_decode/2 &lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="147dc6f64e18686ce3670e474f6c9a004c8a9d94" translate="yes" xml:space="preserve">
          <source>Encodes a list of SSH file entries (public keys and attributes) to a binary. Possible attributes depend on the file type, see &lt;code&gt;&lt;a href=&quot;#ssh_decode-2&quot;&gt;ssh_decode/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Кодирует список записей файла SSH (открытых ключей и атрибутов) в двоичный файл. Возможные атрибуты зависят от типа файла, см. &lt;code&gt;&lt;a href=&quot;#ssh_decode-2&quot;&gt;ssh_decode/2&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6f31b421de29ccdfdf7d6795da67adc1e51b10ef" translate="yes" xml:space="preserve">
          <source>Encodes a long integer in the binary format. If the code is 64 bits, the function &lt;code&gt;ei_encode_long()&lt;/code&gt; is the same as &lt;code&gt;ei_encode_longlong()&lt;/code&gt;.</source>
          <target state="translated">Кодирует длинное целое число в двоичном формате. Если код 64- &lt;code&gt;ei_encode_long()&lt;/code&gt; функция ei_encode_long () совпадает с &lt;code&gt;ei_encode_longlong()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e21387f38bf5a4c0a9713f0fa95d428b5ff9e790" translate="yes" xml:space="preserve">
          <source>Encodes a map header, with a specified arity. The next &lt;code&gt;arity*2&lt;/code&gt; terms encoded will be the keys and values of the map encoded in the following order: &lt;code&gt;K1, V1, K2, V2, ..., Kn, Vn&lt;/code&gt;.</source>
          <target state="translated">Кодирует заголовок карты с заданной арностью. Следующие закодированные термины &lt;code&gt;arity*2&lt;/code&gt; будут ключами и значениями карты, закодированными в следующем порядке: &lt;code&gt;K1, V1, K2, V2, ..., Kn, Vn&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2546def3bbd440ddf28860d54071b17b07162883" translate="yes" xml:space="preserve">
          <source>Encodes a map. The &lt;code&gt;Arity&lt;/code&gt; field is an unsigned 4 byte integer in big-endian format that determines the number of key-value pairs in the map. Key and value pairs (&lt;code&gt;Ki =&amp;gt; Vi&lt;/code&gt;) are encoded in section &lt;code&gt;Pairs&lt;/code&gt; in the following order: &lt;code&gt;K1, V1, K2, V2,..., Kn, Vn&lt;/code&gt;. Duplicate keys are &lt;strong&gt;not allowed&lt;/strong&gt; within the same map.</source>
          <target state="translated">Кодирует карту. Поле &lt;code&gt;Arity&lt;/code&gt; представляет собой 4-байтовое целое число без знака в формате big-endian, которое определяет количество пар ключ-значение на карте. Пары ключ и значение ( &lt;code&gt;Ki =&amp;gt; Vi&lt;/code&gt; ) кодируются в разделе &lt;code&gt;Pairs&lt;/code&gt; в следующем порядке: &lt;code&gt;K1, V1, K2, V2,..., Kn, Vn&lt;/code&gt; . Использование одинаковых ключей на одной карте &lt;strong&gt;не допускается&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="b27883b4382c2510b413fda75eddb65df243c0c9" translate="yes" xml:space="preserve">
          <source>Encodes a message record to a list of bytes.</source>
          <target state="translated">Кодирует запись сообщения в список байтов.</target>
        </trans-unit>
        <trans-unit id="b6f25f641b062915fd5ff3685b3d015468c770da" translate="yes" xml:space="preserve">
          <source>Encodes a plain ASCII string into base64. The result is 33% larger than the data.</source>
          <target state="translated">Кодирует простую ASCII-строку в base64.Результат на 33% больше данных.</target>
        </trans-unit>
        <trans-unit id="b802ae599eede9a33aeccb37997540cbabbc2e45" translate="yes" xml:space="preserve">
          <source>Encodes a port identifier (obtained from &lt;code&gt;&lt;a href=&quot;erlang#open_port-2&quot;&gt;erlang:open_port/2&lt;/a&gt;&lt;/code&gt;). &lt;code&gt;Node&lt;/code&gt; is an encoded atom, that is, &lt;code&gt;&lt;a href=&quot;#ATOM_UTF8_EXT&quot;&gt;ATOM_UTF8_EXT&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#SMALL_ATOM_UTF8_EXT&quot;&gt;SMALL_ATOM_UTF8_EXT&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#ATOM_CACHE_REF&quot;&gt;ATOM_CACHE_REF&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;ID&lt;/code&gt; is a 32-bit big endian unsigned integer. Only 28 bits are significant; the rest are to be 0. The &lt;code&gt;Creation&lt;/code&gt; works just like in &lt;code&gt;&lt;a href=&quot;#NEW_PID_EXT&quot;&gt;NEW_PID_EXT&lt;/a&gt;&lt;/code&gt;. Port operations are not allowed across node boundaries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f259a9111053ee9b0ff27ad8b8e26394495297ef" translate="yes" xml:space="preserve">
          <source>Encodes a port object (obtained from &lt;code&gt;erlang:open_port/2&lt;/code&gt;). The &lt;code&gt;ID&lt;/code&gt; is a node-specific identifier for a local port. Port operations are not allowed across node boundaries. The &lt;code&gt;Creation&lt;/code&gt; works just like in &lt;code&gt;&lt;a href=&quot;#REFERENCE_EXT&quot;&gt;REFERENCE_EXT&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Кодирует объект порта (полученный из &lt;code&gt;erlang:open_port/2&lt;/code&gt; ). &lt;code&gt;ID&lt;/code&gt; является узел-конкретным идентификатором для локального порта. Операции порта не разрешены через границы узла. &lt;code&gt;Creation&lt;/code&gt; работает точно так же , как и в &lt;code&gt;&lt;a href=&quot;#REFERENCE_EXT&quot;&gt;REFERENCE_EXT&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="932182b383208ca8056944faa1099a6c8e6ac0c8" translate="yes" xml:space="preserve">
          <source>Encodes a process identifier object (obtained from &lt;code&gt;erlang:spawn/3&lt;/code&gt; or friends). The &lt;code&gt;ID&lt;/code&gt; and &lt;code&gt;Creation&lt;/code&gt; fields works just like in &lt;code&gt;&lt;a href=&quot;#REFERENCE_EXT&quot;&gt;REFERENCE_EXT&lt;/a&gt;&lt;/code&gt;, while the &lt;code&gt;Serial&lt;/code&gt; field is used to improve safety. In &lt;code&gt;ID&lt;/code&gt;, only 15 bits are significant; the rest are to be 0.</source>
          <target state="translated">Кодирует объект идентификатора процесса (полученный из &lt;code&gt;erlang:spawn/3&lt;/code&gt; или друзей). &lt;code&gt;ID&lt;/code&gt; и &lt;code&gt;Creation&lt;/code&gt; полое работают точно так же , как и в &lt;code&gt;&lt;a href=&quot;#REFERENCE_EXT&quot;&gt;REFERENCE_EXT&lt;/a&gt;&lt;/code&gt; , в то время как &lt;code&gt;Serial&lt;/code&gt; поле используется для повышения уровня безопасности. В &lt;code&gt;ID&lt;/code&gt; значимы только 15 бит; остальные должны быть равны 0.</target>
        </trans-unit>
        <trans-unit id="d1d57a8c127d4d4f839416c50c0fbbba2f4d4ff0" translate="yes" xml:space="preserve">
          <source>Encodes a public-key entity with ASN.1 DER encoding.</source>
          <target state="translated">Кодирует объект с открытым ключом с кодировкой ASN.1 DER.</target>
        </trans-unit>
        <trans-unit id="d5c308d0994008ccda7fbbad7266dbb74c32be53" translate="yes" xml:space="preserve">
          <source>Encodes a reference object (an object generated with &lt;code&gt;erlang:make_ref/0&lt;/code&gt;). The &lt;code&gt;Node&lt;/code&gt; term is an encoded atom, that is, &lt;code&gt;&lt;a href=&quot;#ATOM_UTF8_EXT&quot;&gt;ATOM_UTF8_EXT&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#SMALL_ATOM_UTF8_EXT&quot;&gt;SMALL_ATOM_UTF8_EXT&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;#ATOM_CACHE_REF&quot;&gt;ATOM_CACHE_REF&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;ID&lt;/code&gt; field contains a big-endian unsigned integer, but &lt;strong&gt;is to be regarded as uninterpreted data&lt;/strong&gt;, as this field is node-specific. &lt;code&gt;Creation&lt;/code&gt; is a byte containing a node serial number, which makes it possible to separate old (crashed) nodes from a new one.</source>
          <target state="translated">Кодирует ссылочный объект (объект, созданный с помощью &lt;code&gt;erlang:make_ref/0&lt;/code&gt; ). &lt;code&gt;Node&lt;/code&gt; термин кодированный атом, то есть, &lt;code&gt;&lt;a href=&quot;#ATOM_UTF8_EXT&quot;&gt;ATOM_UTF8_EXT&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#SMALL_ATOM_UTF8_EXT&quot;&gt;SMALL_ATOM_UTF8_EXT&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;#ATOM_CACHE_REF&quot;&gt;ATOM_CACHE_REF&lt;/a&gt;&lt;/code&gt; . Поле &lt;code&gt;ID&lt;/code&gt; содержит целое число без знака с прямым порядком байтов, но &lt;strong&gt;его следует рассматривать как неинтерпретируемые данные&lt;/strong&gt; , поскольку это поле зависит от узла. &lt;code&gt;Creation&lt;/code&gt; - это байт, содержащий порядковый номер узла, который позволяет отделить старые (разбитые) узлы от новых.</target>
        </trans-unit>
        <trans-unit id="24deef8b706bf9138b53949d3749385135e65888" translate="yes" xml:space="preserve">
          <source>Encodes a reference term generated with &lt;code&gt;erlang:make_ref/0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6983fa67de59179a533f84dd86b3b1e63cddb353" translate="yes" xml:space="preserve">
          <source>Encodes a string in the binary format. (A string in Erlang is a list, but is encoded as a character array in the binary format.) The string is to be &lt;code&gt;NULL&lt;/code&gt;-terminated, except for the &lt;code&gt;ei_x_encode_string_len()&lt;/code&gt; function.</source>
          <target state="translated">Кодирует строку в двоичном формате. (Строка в Erlang - это список, но кодируется как массив символов в двоичном формате.) Строка должна быть завершена &lt;code&gt;NULL&lt;/code&gt; , за исключением функции &lt;code&gt;ei_x_encode_string_len()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e2ae83f97c681fcce7637008f4816fc10f123e4c" translate="yes" xml:space="preserve">
          <source>Encodes a tuple header, with a specified arity. The next &lt;code&gt;arity&lt;/code&gt; terms encoded will be the elements of the tuple. Tuples and lists are encoded recursively, so that a tuple can contain another tuple or list.</source>
          <target state="translated">Кодирует заголовок кортежа с указанной арностью. Следующие закодированные термины &lt;code&gt;arity&lt;/code&gt; будут элементами кортежа. Кортежи и списки кодируются рекурсивно, поэтому кортеж может содержать другой кортеж или список.</target>
        </trans-unit>
        <trans-unit id="af2b02a0991d4ce3fe7390de348cf477759d00a2" translate="yes" xml:space="preserve">
          <source>Encodes a tuple. The &lt;code&gt;Arity&lt;/code&gt; field is an unsigned byte that determines how many elements that follows in section &lt;code&gt;Elements&lt;/code&gt;.</source>
          <target state="translated">Кодирует кортеж. Поле &lt;code&gt;Arity&lt;/code&gt; - это беззнаковый байт, который определяет, сколько элементов следует в разделе &lt;code&gt;Elements&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ff2f2a72085c885a819e529abe0ff0a7d2d676e0" translate="yes" xml:space="preserve">
          <source>Encodes a version magic number for the binary format. Must be the first token in a binary term.</source>
          <target state="translated">Кодирует магическое число версии для двоичного формата.Должно быть,первый токен в двоичном термине.</target>
        </trans-unit>
        <trans-unit id="ae0c72ad2f8d0c485999de767a4b3183dca88051" translate="yes" xml:space="preserve">
          <source>Encodes an &lt;code&gt;ETERM&lt;/code&gt;, as obtained from &lt;code&gt;erl_interface&lt;/code&gt;. Parameter &lt;code&gt;t&lt;/code&gt; is actually an &lt;code&gt;ETERM&lt;/code&gt; pointer. This function does not free the &lt;code&gt;ETERM&lt;/code&gt;.</source>
          <target state="translated">Кодирует &lt;code&gt;ETERM&lt;/code&gt; , полученный из &lt;code&gt;erl_interface&lt;/code&gt; . Параметр &lt;code&gt;t&lt;/code&gt; на самом деле является указателем &lt;code&gt;ETERM&lt;/code&gt; . Эта функция не освобождает &lt;code&gt;ETERM&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="10d886679d977f90bbba34649f46a0bc55f76d91" translate="yes" xml:space="preserve">
          <source>Encodes an Erlang port in the binary format. Parameter &lt;code&gt;p&lt;/code&gt; points to a &lt;code&gt;erlang_port&lt;/code&gt; structure (which should have been obtained earlier with &lt;code&gt;ei_decode_port()&lt;/code&gt;).</source>
          <target state="translated">Кодирует порт Erlang в двоичном формате. Параметр &lt;code&gt;p&lt;/code&gt; указывает на структуру &lt;code&gt;erlang_port&lt;/code&gt; (которая должна была быть получена ранее с помощью &lt;code&gt;ei_decode_port()&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="57c2dd5bf4d9ab71118fad79de37a4af2bd1eb60" translate="yes" xml:space="preserve">
          <source>Encodes an Erlang port in the binary format. Parameter &lt;code&gt;p&lt;/code&gt; points to an &lt;code&gt;erlang_port&lt;/code&gt; structure which should have been obtained earlier with &lt;code&gt;&lt;a href=&quot;#ei_decode_port&quot;&gt;ei_decode_port()&lt;/a&gt;&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84cff2ec5d925031dfc127de573af284d6e74099" translate="yes" xml:space="preserve">
          <source>Encodes an Erlang process identifier (pid) in the binary format. Parameter &lt;code&gt;p&lt;/code&gt; points to an &lt;code&gt;erlang_pid&lt;/code&gt; structure (which should have been obtained earlier with &lt;code&gt;ei_decode_pid()&lt;/code&gt;).</source>
          <target state="translated">Кодирует идентификатор процесса Erlang (pid) в двоичном формате. Параметр &lt;code&gt;p&lt;/code&gt; указывает на структуру &lt;code&gt;erlang_pid&lt;/code&gt; (которая должна была быть получена ранее с помощью &lt;code&gt;ei_decode_pid()&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="76d4026c81383707cf21ce4f5ea832412535d302" translate="yes" xml:space="preserve">
          <source>Encodes an Erlang process identifier (pid) in the binary format. Parameter &lt;code&gt;p&lt;/code&gt; points to an &lt;code&gt;erlang_pid&lt;/code&gt; structure which should either have been obtained earlier with &lt;code&gt;&lt;a href=&quot;#ei_decode_pid&quot;&gt;ei_decode_pid()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;ei_connect#ei_self&quot;&gt;ei_self()&lt;/a&gt;&lt;/code&gt; or created by &lt;code&gt;&lt;a href=&quot;ei_connect#ei_make_pid&quot;&gt;ei_make_pid()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3be5890e73faf95f1e9738591e16dd49e1a75403" translate="yes" xml:space="preserve">
          <source>Encodes an Erlang process identifier object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ce17988f46a89b28dc4f99e5d98e8c260c68401" translate="yes" xml:space="preserve">
          <source>Encodes an Erlang reference in the binary format. Parameter &lt;code&gt;p&lt;/code&gt; points to a &lt;code&gt;erlang_ref&lt;/code&gt; structure (which should have been obtained earlier with &lt;code&gt;ei_decode_ref()&lt;/code&gt;).</source>
          <target state="translated">Кодирует ссылку на Erlang в двоичном формате. Параметр &lt;code&gt;p&lt;/code&gt; указывает на структуру &lt;code&gt;erlang_ref&lt;/code&gt; (которая должна была быть получена ранее с помощью &lt;code&gt;ei_decode_ref()&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="42aec85ff02503e0f4c4f2565e162785b5c185dc" translate="yes" xml:space="preserve">
          <source>Encodes an Erlang reference in the binary format. Parameter &lt;code&gt;p&lt;/code&gt; points to an &lt;code&gt;erlang_ref&lt;/code&gt; structure which either should have been obtained earlier with &lt;code&gt;&lt;a href=&quot;#ei_decode_ref&quot;&gt;ei_decode_ref()&lt;/a&gt;&lt;/code&gt;, or created by &lt;code&gt;&lt;a href=&quot;ei_connect#ei_make_ref&quot;&gt;ei_make_ref()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0c685069d4686caf8919a29aeb6dfc4a6579c5a" translate="yes" xml:space="preserve">
          <source>Encodes an Erlang trace token in the binary format. Parameter &lt;code&gt;p&lt;/code&gt; points to a &lt;code&gt;erlang_trace&lt;/code&gt; structure (which should have been obtained earlier with &lt;code&gt;ei_decode_trace()&lt;/code&gt;).</source>
          <target state="translated">Кодирует токен трассировки Erlang в двоичном формате. Параметр &lt;code&gt;p&lt;/code&gt; указывает на структуру &lt;code&gt;erlang_trace&lt;/code&gt; (которая должна была быть получена ранее с помощью &lt;code&gt;ei_decode_trace()&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="cccb0cf6d3e8be746acb491ce06d7536ce870985" translate="yes" xml:space="preserve">
          <source>Encodes an Erlang trace token in the binary format. Parameter &lt;code&gt;p&lt;/code&gt; points to a &lt;code&gt;erlang_trace&lt;/code&gt; structure which should have been obtained earlier with &lt;code&gt;&lt;a href=&quot;#ei_decode_trace&quot;&gt;ei_decode_trace()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9f856403e1104e3c2f173fa6a9b9b6e634523b8" translate="yes" xml:space="preserve">
          <source>Encodes an SNMP Pdu into a list of bytes.</source>
          <target state="translated">Кодирует SNMP-канал в список байтов.</target>
        </trans-unit>
        <trans-unit id="9d75b733671e6cee7bbd4d4fc7c1ed464bbc1703" translate="yes" xml:space="preserve">
          <source>Encodes an SNMP ScopedPdu into a list of bytes, which can be encrypted, and after encryption, encoded with a call to &lt;code&gt;enc_encrypted_scoped_pdu/1&lt;/code&gt;; or it can be used as the &lt;code&gt;data&lt;/code&gt; field in a &lt;code&gt;message&lt;/code&gt; record, which then can be encoded with &lt;code&gt;enc_message_only/1&lt;/code&gt;.</source>
          <target state="translated">Кодирует SNMP ScopedPdu в список байтов, который может быть зашифрован, а после шифрования закодирован с вызовом &lt;code&gt;enc_encrypted_scoped_pdu/1&lt;/code&gt; ; или его можно использовать как поле &lt;code&gt;data&lt;/code&gt; в записи &lt;code&gt;message&lt;/code&gt; , которое затем можно закодировать с помощью &lt;code&gt;enc_message_only/1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7fa4782273dd88937b487ef08be79b1c172a8262" translate="yes" xml:space="preserve">
          <source>Encodes an atom in the binary format. Parameter &lt;code&gt;p&lt;/code&gt; is the name of the atom in Latin-1 encoding. Only up to &lt;code&gt;MAXATOMLEN-1&lt;/code&gt; bytes are encoded. The name is to be &lt;code&gt;NULL&lt;/code&gt;-terminated, except for the &lt;code&gt;ei_x_encode_atom_len()&lt;/code&gt; function.</source>
          <target state="translated">Кодирует атом в двоичном формате. Параметр &lt;code&gt;p&lt;/code&gt; - это имя атома в кодировке Latin-1. &lt;code&gt;MAXATOMLEN-1&lt;/code&gt; только до MAXATOMLEN-1 байт. Имя должно быть завершено &lt;code&gt;NULL&lt;/code&gt; , за исключением функции &lt;code&gt;ei_x_encode_atom_len()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f94986d6669031c5feff3d3d35f84974a46d32f0" translate="yes" xml:space="preserve">
          <source>Encodes an atom in the binary format. Parameter &lt;code&gt;p&lt;/code&gt; is the name of the atom with character encoding &lt;code&gt;&lt;a href=&quot;#erlang_char_encoding&quot;&gt;from_enc&lt;/a&gt;&lt;/code&gt; (ASCII, Latin-1, or UTF-8). The name must either be &lt;code&gt;NULL&lt;/code&gt;-terminated or a function variant with a &lt;code&gt;len&lt;/code&gt; parameter must be used.</source>
          <target state="translated">Кодирует атом в двоичном формате. Параметр &lt;code&gt;p&lt;/code&gt; - это имя атома в кодировке &lt;code&gt;&lt;a href=&quot;#erlang_char_encoding&quot;&gt;from_enc&lt;/a&gt;&lt;/code&gt; (ASCII, Latin-1 или UTF-8). Имя должно быть либо завершено &lt;code&gt;NULL&lt;/code&gt; , либо должен использоваться вариант функции с параметром &lt;code&gt;len&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3e3d0bd7014773a7515a0eaf7ab7f8024249203d" translate="yes" xml:space="preserve">
          <source>Encodes an empty list. It is often used at the tail of a list.</source>
          <target state="translated">Кодирует пустой список.Часто используется в хвосте списка.</target>
        </trans-unit>
        <trans-unit id="4c2b02552e4f57bba027c20fbe76f0bfb0d75eba" translate="yes" xml:space="preserve">
          <source>Encodes an encrypted SNMP ScopedPdu into an OCTET STRING that can be used as the &lt;code&gt;data&lt;/code&gt; field in a &lt;code&gt;message&lt;/code&gt; record, that later can be encoded with a call to &lt;code&gt;enc_message_only/1&lt;/code&gt;.</source>
          <target state="translated">Кодирует зашифрованный SNMP ScopedPdu в OCTET STRING, который можно использовать в качестве поля &lt;code&gt;data&lt;/code&gt; в записи &lt;code&gt;message&lt;/code&gt; , которое позже может быть закодировано с помощью вызова &lt;code&gt;enc_message_only/1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="962d839134381a7bc1e8c5ef4283f55dd77d150b" translate="yes" xml:space="preserve">
          <source>Encodes an unsigned long integer in the binary format. If the code is 64 bits, the function &lt;code&gt;ei_encode_ulong()&lt;/code&gt; is the same as &lt;code&gt;ei_encode_ulonglong()&lt;/code&gt;.</source>
          <target state="translated">Кодирует длинное целое число без знака в двоичном формате. Если код 64- &lt;code&gt;ei_encode_ulong()&lt;/code&gt; функция ei_encode_ulong () совпадает с &lt;code&gt;ei_encode_ulonglong()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5e5e1d27c122466d30fe5743763ed3cb3299cfda" translate="yes" xml:space="preserve">
          <source>Encodes lists of action requests for one or more transaction request(s).</source>
          <target state="translated">Кодирует списки запросов действий для одного или нескольких запросов транзакций.</target>
        </trans-unit>
        <trans-unit id="bbe3771766e51314eec821af32519256d9e1cc6d" translate="yes" xml:space="preserve">
          <source>Encodes the message into a sequence of bytes.</source>
          <target state="translated">Кодирует сообщение в последовательность байтов.</target>
        </trans-unit>
        <trans-unit id="a2c2a3dc80ffb53312ecf36ad1055545de7126f8" translate="yes" xml:space="preserve">
          <source>Encoding Public-Key Data to PEM Format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf6e4cd7c6b0e3f5f929b22e1120f33b38cfc968" translate="yes" xml:space="preserve">
          <source>Encoding and decoding a string with Unicode characters:</source>
          <target state="translated">Кодирование и декодирование строки с символами Юникода:</target>
        </trans-unit>
        <trans-unit id="a833e98a67285a4ac9faa7fbff167440c5860f43" translate="yes" xml:space="preserve">
          <source>Encoding and decoding must be done explicitly when writing your own Net if process.</source>
          <target state="translated">Кодирование и декодирование должно быть сделано явно при написании вашей собственной сети,если процесс.</target>
        </trans-unit>
        <trans-unit id="821139729ae337d85e016cf0241920c56421ecd7" translate="yes" xml:space="preserve">
          <source>Encoding and decoding of Erlang data types for transmission or storage</source>
          <target state="translated">Кодирование и декодирование типов данных Erlang для передачи или хранения</target>
        </trans-unit>
        <trans-unit id="f9f2b1897f0182522c31ea4a8622e8b2d5090ec8" translate="yes" xml:space="preserve">
          <source>Encoding and decoding of Erlang terms.</source>
          <target state="translated">Кодирование и декодирование терминов Эрланга.</target>
        </trans-unit>
        <trans-unit id="362851a55df47e950b8ac4b7e6c244c360537b26" translate="yes" xml:space="preserve">
          <source>Encoding and decoding some strings:</source>
          <target state="translated">Кодирование и декодирование некоторых строк:</target>
        </trans-unit>
        <trans-unit id="957bacdea81312911c1ae130271010f5a65da159" translate="yes" xml:space="preserve">
          <source>Encoding callback module which exports encode_message/2 and decode_message/2. The function EncodingMod:encode_message(EncodingConfig, MegacoMessage) is invoked whenever a 'MegacoMessage' record needs to be translated into an Erlang binary. The function EncodingMod:decode_message(EncodingConfig, Binary) is invoked whenever an Erlang binary needs to be translated into a 'MegacoMessage' record.</source>
          <target state="translated">Модуль обратного кодирования,который экспортирует encode_message/2 и decode_message/2.Функция EncodingMod:encode_message(EncodingConfig,MegacoMessage)вызывается всякий раз,когда необходимо перевести запись 'MegacoMessage' в двоичный файл Erlang.Функция EncodingMod:decode_message(EncodingConfig,Binary)вызывается всякий раз,когда необходимо перевести двоичный файл Erlang в запись 'MegacoMessage'.</target>
        </trans-unit>
        <trans-unit id="3b6dcbba484d1d5cfa44ed74c9d6e15650c65e9b" translate="yes" xml:space="preserve">
          <source>Encoding is &quot;overlong&quot;, meaning that a number should have been encoded in fewer bytes.</source>
          <target state="translated">Кодирование является &quot;сверхдлинным&quot;,что означает,что число должно было быть закодировано в меньшем количестве байт.</target>
        </trans-unit>
        <trans-unit id="07619d75ac86081189ed5a07edb91fcbca8bed3f" translate="yes" xml:space="preserve">
          <source>Encoding module config.</source>
          <target state="translated">Конфигурация модуля кодирования.</target>
        </trans-unit>
        <trans-unit id="5fb7ced99a059fd0dc7bab3f9bf3bb8440646b2e" translate="yes" xml:space="preserve">
          <source>Encoding, decoding, and sending Erlang terms</source>
          <target state="translated">Кодирование,декодирование и отправка терминов Эрланга</target>
        </trans-unit>
        <trans-unit id="df2853591e29cd99c0fa5882b318aef52125c157" translate="yes" xml:space="preserve">
          <source>Encrypt &lt;code&gt;PlainText&lt;/code&gt; according to &lt;code&gt;Type&lt;/code&gt; block cipher.</source>
          <target state="translated">Зашифруйте &lt;code&gt;PlainText&lt;/code&gt; в соответствии с блочным шифром &lt;code&gt;Type&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="43483bf8b1f6e3650db5b3d5c23dd089bcdb2fa2" translate="yes" xml:space="preserve">
          <source>Encrypt &lt;code&gt;PlainText&lt;/code&gt; according to &lt;code&gt;Type&lt;/code&gt; block cipher. &lt;code&gt;IVec&lt;/code&gt; is an arbitrary initializing vector.</source>
          <target state="translated">Зашифруйте &lt;code&gt;PlainText&lt;/code&gt; в соответствии с блочным шифром &lt;code&gt;Type&lt;/code&gt; . &lt;code&gt;IVec&lt;/code&gt; - произвольный инициализирующий вектор.</target>
        </trans-unit>
        <trans-unit id="381b8d80049d7a04cdf2994121808a8cdf165223" translate="yes" xml:space="preserve">
          <source>Encrypt with the private key:</source>
          <target state="translated">Зашифровать личным ключом:</target>
        </trans-unit>
        <trans-unit id="9703c3f11251af2de6116ae0c93744a07f772858" translate="yes" xml:space="preserve">
          <source>Encrypt with the public key:</source>
          <target state="translated">Зашифровать открытым ключом:</target>
        </trans-unit>
        <trans-unit id="80dae3701dd53c67de85f8a43dc357a2e8e2e978" translate="yes" xml:space="preserve">
          <source>Encrypted Debug Information</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a59ab59dac8804687753e19c3d53c00d3eedb1a" translate="yes" xml:space="preserve">
          <source>Encryption and authentication is added.</source>
          <target state="translated">Добавлено шифрование и аутентификация.</target>
        </trans-unit>
        <trans-unit id="d09656784058ea42ea6ac009c67cf6b347770cc2" translate="yes" xml:space="preserve">
          <source>Encryption and decryption</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e0dab077d689a486cbd877d4183f36242417a19" translate="yes" xml:space="preserve">
          <source>Encrypts &lt;code&gt;PlainText&lt;/code&gt; according to the stream cipher &lt;code&gt;Type&lt;/code&gt; specified in stream_init/3. &lt;code&gt;Text&lt;/code&gt; can be any number of bytes. The initial &lt;code&gt;State&lt;/code&gt; is created using &lt;code&gt;&lt;a href=&quot;#stream_init-2&quot;&gt;stream_init&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;NewState&lt;/code&gt; must be passed into the next call to &lt;code&gt;stream_encrypt&lt;/code&gt;.</source>
          <target state="translated">Шифрует &lt;code&gt;PlainText&lt;/code&gt; в соответствии с &lt;code&gt;Type&lt;/code&gt; потокового шифра, указанным в stream_init / 3. &lt;code&gt;Text&lt;/code&gt; может иметь любое количество байтов. Начальное &lt;code&gt;State&lt;/code&gt; создается с помощью &lt;code&gt;&lt;a href=&quot;#stream_init-2&quot;&gt;stream_init&lt;/a&gt;&lt;/code&gt; . &lt;code&gt;NewState&lt;/code&gt; необходимо передать в следующий вызов &lt;code&gt;stream_encrypt&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9217b6473788c015aacdede9c8b8e5f29a5c7690" translate="yes" xml:space="preserve">
          <source>Encrypts the &lt;code&gt;PlainText&lt;/code&gt; (message digest) using the &lt;code&gt;PublicKey&lt;/code&gt; and returns the &lt;code&gt;CipherText&lt;/code&gt;. This is a low level signature operation used for instance by older versions of the SSL protocol. See also &lt;code&gt;public_key:encrypt_public/[2,3]&lt;/code&gt;</source>
          <target state="translated">Шифрует &lt;code&gt;PlainText&lt;/code&gt; (дайджест сообщения) с помощью &lt;code&gt;PublicKey&lt;/code&gt; и возвращает &lt;code&gt;CipherText&lt;/code&gt; . Это операция подписи низкого уровня, используемая, например, более старыми версиями протокола SSL. См. Также &lt;code&gt;public_key:encrypt_public/[2,3]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6aba32daed03d9e5587e8d7857b21ac52bb10760" translate="yes" xml:space="preserve">
          <source>Encrypts the &lt;code&gt;PlainText&lt;/code&gt; using the &lt;code&gt;PrivateKey&lt;/code&gt; and returns the ciphertext. This is a low level signature operation used for instance by older versions of the SSL protocol. See also &lt;code&gt;public_key:encrypt_private/[2,3]&lt;/code&gt;</source>
          <target state="translated">Шифрует &lt;code&gt;PlainText&lt;/code&gt; с помощью &lt;code&gt;PrivateKey&lt;/code&gt; и возвращает зашифрованный текст. Это операция подписи низкого уровня, используемая, например, более старыми версиями протокола SSL. См. Также &lt;code&gt;public_key:encrypt_private/[2,3]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1a45a71f8411b2012ac69eee03c3cb9761ef63f0" translate="yes" xml:space="preserve">
          <source>Encrypts the source configuration file with DES3 and saves the result in file &lt;code&gt;EncryptFileName&lt;/code&gt;. The key, a string, must be available in a text file named &lt;code&gt;.ct_config.crypt&lt;/code&gt;, either in the current directory, or the home directory of the user (it is searched for in that order).</source>
          <target state="translated">Шифрует исходный файл конфигурации с помощью DES3 и сохраняет результат в файле &lt;code&gt;EncryptFileName&lt;/code&gt; . Ключ, строка, должен быть доступен в текстовом файле с именем &lt;code&gt;.ct_config.crypt&lt;/code&gt; либо в текущем каталоге, либо в домашнем каталоге пользователя (поиск выполняется в указанном порядке).</target>
        </trans-unit>
        <trans-unit id="e1b7e8ad6b293828786733653b84e98f56e63171" translate="yes" xml:space="preserve">
          <source>Encrypts the source configuration file with DES3 and saves the result in the target file &lt;code&gt;EncryptFileName&lt;/code&gt;. The encryption key to use is either the value in &lt;code&gt;{key,Key}&lt;/code&gt; or the value stored in the file specified by &lt;code&gt;{file,File}&lt;/code&gt;.</source>
          <target state="translated">Шифрует исходный файл конфигурации с помощью DES3 и сохраняет результат в целевом файле &lt;code&gt;EncryptFileName&lt;/code&gt; . Используемый ключ шифрования - это либо значение в &lt;code&gt;{key,Key}&lt;/code&gt; , либо значение, хранящееся в файле, указанном в &lt;code&gt;{file,File}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a2bb9d34b8a1a79665858d354585cf147e0dee4e" translate="yes" xml:space="preserve">
          <source>End</source>
          <target state="translated">End</target>
        </trans-unit>
        <trans-unit id="de60abfb17a90423ee6919dc63adf8282f5b06fb" translate="yes" xml:space="preserve">
          <source>End at the end of the subject string.</source>
          <target state="translated">Конец строки темы.</target>
        </trans-unit>
        <trans-unit id="57a63878b5826fd26a531b55737bab2bbbbaebcc" translate="yes" xml:space="preserve">
          <source>End of file was encountered before any more tokens.</source>
          <target state="translated">Конец файла был встречен раньше,чем появились еще жетоны.</target>
        </trans-unit>
        <trans-unit id="026ff6a17a44a34ca50397b4a1b628c91e49b9d7" translate="yes" xml:space="preserve">
          <source>End of file was encountered by the I/O server.</source>
          <target state="translated">Конец файла был встречен сервером ввода/вывода.</target>
        </trans-unit>
        <trans-unit id="e31ad58996b6f675a81eae4e18dab4de0ed09a2f" translate="yes" xml:space="preserve">
          <source>End of file was encountered by the tokenizer.</source>
          <target state="translated">Конец файла встретился с маркером.</target>
        </trans-unit>
        <trans-unit id="a212d4671531affb8d170219150ca3d881db83f3" translate="yes" xml:space="preserve">
          <source>End of file was encountered.</source>
          <target state="translated">Конец файла был найден.</target>
        </trans-unit>
        <trans-unit id="9e3ce0d3bac0fd9f1bf58f3420981013f4efbb94" translate="yes" xml:space="preserve">
          <source>End of file was encountered. &lt;code&gt;LeftOverChars&lt;/code&gt; are the input characters not used.</source>
          <target state="translated">Обнаружен конец файла. &lt;code&gt;LeftOverChars&lt;/code&gt; - входные символы, которые не используются.</target>
        </trans-unit>
        <trans-unit id="a8e61f729a44e47cf20e58421010bf77fedcd7c3" translate="yes" xml:space="preserve">
          <source>End of line</source>
          <target state="translated">Конец строки</target>
        </trans-unit>
        <trans-unit id="60aa06caf4ce9d91f78983d5c80292d55ad0043f" translate="yes" xml:space="preserve">
          <source>End subpattern</source>
          <target state="translated">Конечная подмаска</target>
        </trans-unit>
        <trans-unit id="b750001d7ab130d7ac487cd2ca42bd5cd9f92224" translate="yes" xml:space="preserve">
          <source>End the scope of a prefix-URI mapping.</source>
          <target state="translated">Конец области отображения префикса-URI.</target>
        </trans-unit>
        <trans-unit id="21e320b076f89e4cd5f68347182e92594c72d3c2" translate="yes" xml:space="preserve">
          <source>Ends an FTP session, created using function &lt;code&gt;&lt;a href=&quot;#open&quot;&gt;open&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Завершает сеанс FTP, созданный с помощью функции &lt;code&gt;&lt;a href=&quot;#open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="95951d40d8039b0e33d4c019627487ef398366d4" translate="yes" xml:space="preserve">
          <source>Ends the deflate session and cleans all data used. Notice that this function throws a &lt;code&gt;data_error&lt;/code&gt; exception if the last call to &lt;code&gt;&lt;a href=&quot;#deflate-3&quot;&gt;deflate/3&lt;/a&gt;&lt;/code&gt; was not called with &lt;code&gt;Flush&lt;/code&gt; set to &lt;code&gt;finish&lt;/code&gt;.</source>
          <target state="translated">Завершает сеанс дефляции и очищает все использованные данные. Обратите внимание, что эта функция выдает исключение &lt;code&gt;data_error&lt;/code&gt; , если последний вызов &lt;code&gt;&lt;a href=&quot;#deflate-3&quot;&gt;deflate/3&lt;/a&gt;&lt;/code&gt; не был вызван с установленным для &lt;code&gt;Flush&lt;/code&gt; &lt;code&gt;finish&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8b45853fd46d5ba321de71a27af54573d044a5ee" translate="yes" xml:space="preserve">
          <source>Ends the inflate session and cleans all data used. Notice that this function throws a &lt;code&gt;data_error&lt;/code&gt; exception if no end of stream was found (meaning that not all data has been uncompressed).</source>
          <target state="translated">Завершает сеанс накачки и очищает все использованные данные. Обратите внимание, что эта функция выдает исключение &lt;code&gt;data_error&lt;/code&gt; , если конец потока не был найден (это означает, что не все данные были распакованы).</target>
        </trans-unit>
        <trans-unit id="ab9116cba897b6ab266baa70720fa04bcdb04dc2" translate="yes" xml:space="preserve">
          <source>Enforces chunking of a HTTP PUT or POST body data to be deliverd to the mod_esi callback. Note this is not supported for mod_cgi. Default is no limit e.i the whole body is deliverd as one entity, which could be very memory consuming. &lt;code&gt;&lt;a href=&quot;mod_esi&quot;&gt;mod_esi(3)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Обеспечивает фрагменты данных тела HTTP PUT или POST для доставки в обратный вызов mod_esi. Обратите внимание, что это не поддерживается для mod_cgi. По умолчанию нет ограничений, т.е. все тело доставляется как одно целое, что может потреблять очень много памяти. &lt;code&gt;&lt;a href=&quot;mod_esi&quot;&gt;mod_esi(3)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="df9bb310faa70aa0d761987d05cd45db9928b704" translate="yes" xml:space="preserve">
          <source>Engine API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4274910e7ccb1de8bd66b8871cfb848933020382" translate="yes" xml:space="preserve">
          <source>Enhanced Remote Procedure Call</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f62489d96dcaee9fe090844ec3761e76e272966a" translate="yes" xml:space="preserve">
          <source>Enhanced error codes.</source>
          <target state="translated">Улучшенные коды ошибок.</target>
        </trans-unit>
        <trans-unit id="b0af252697cfc3bd079e25301b747579d8cb929b" translate="yes" xml:space="preserve">
          <source>Enqueue the &lt;code&gt;bin&lt;/code&gt; into &lt;code&gt;q&lt;/code&gt; skipping the first &lt;code&gt;skip&lt;/code&gt; bytes.</source>
          <target state="translated">Ставить в &lt;code&gt;bin&lt;/code&gt; в &lt;code&gt;q&lt;/code&gt; пропуском первые &lt;code&gt;skip&lt;/code&gt; байт.</target>
        </trans-unit>
        <trans-unit id="f6dbd5b5f41e43310556c16363a928d564f24e99" translate="yes" xml:space="preserve">
          <source>Enqueue the &lt;code&gt;iovec&lt;/code&gt; into &lt;code&gt;q&lt;/code&gt; skipping the first &lt;code&gt;skip&lt;/code&gt; bytes.</source>
          <target state="translated">Ставить на &lt;code&gt;iovec&lt;/code&gt; в &lt;code&gt;q&lt;/code&gt; пропуск первых &lt;code&gt;skip&lt;/code&gt; байт.</target>
        </trans-unit>
        <trans-unit id="c52745843cb391f37a0d2a1328df5d9cae8a3eb4" translate="yes" xml:space="preserve">
          <source>Enqueues a driver binary in the driver queue. The data in &lt;code&gt;bin&lt;/code&gt; at &lt;code&gt;offset&lt;/code&gt; with length &lt;code&gt;len&lt;/code&gt; is placed at the end of the queue. This function is most often faster than &lt;code&gt;&lt;a href=&quot;#driver_enq&quot;&gt;driver_enq&lt;/a&gt;&lt;/code&gt;, because no data must be copied.</source>
          <target state="translated">Ставит двоичный файл драйвера в очередь драйвера. Данные в &lt;code&gt;bin&lt;/code&gt; со &lt;code&gt;offset&lt;/code&gt; длины &lt;code&gt;len&lt;/code&gt; помещаются в конец очереди. Эта функция чаще всего работает быстрее, чем &lt;code&gt;&lt;a href=&quot;#driver_enq&quot;&gt;driver_enq&lt;/a&gt;&lt;/code&gt; , потому что не нужно копировать данные.</target>
        </trans-unit>
        <trans-unit id="5687001b5e2fa4b62bebc2dc93d279fbbdd53c1f" translate="yes" xml:space="preserve">
          <source>Enqueues data in the driver queue. The data in &lt;code&gt;buf&lt;/code&gt; is copied (&lt;code&gt;len&lt;/code&gt; bytes) and placed at the end of the driver queue. The driver queue is normally used in a FIFO way.</source>
          <target state="translated">Ставит данные в очередь драйвера. Данные в &lt;code&gt;buf&lt;/code&gt; копируются ( &lt;code&gt;len&lt;/code&gt; байт) и помещаются в конец очереди драйвера. Очередь драйверов обычно используется по принципу FIFO.</target>
        </trans-unit>
        <trans-unit id="da9bea378d6eda4a2eccc46e57c3a42efdd7761b" translate="yes" xml:space="preserve">
          <source>Enqueues the data in &lt;code&gt;ev&lt;/code&gt;, skipping the first &lt;code&gt;skip&lt;/code&gt; bytes of it, at the end of the driver queue. It is faster than &lt;code&gt;&lt;a href=&quot;#driver_enq&quot;&gt;driver_enq&lt;/a&gt;&lt;/code&gt;, because no data must be copied.</source>
          <target state="translated">Ставит в очередь данные в &lt;code&gt;ev&lt;/code&gt; , пропустив первый &lt;code&gt;skip&lt;/code&gt; байтов этого, в конце очереди драйвера. Это быстрее, чем &lt;code&gt;&lt;a href=&quot;#driver_enq&quot;&gt;driver_enq&lt;/a&gt;&lt;/code&gt; , потому что не нужно копировать данные.</target>
        </trans-unit>
        <trans-unit id="014cabf718cf24ef9b31ec84cd11c02beef4f694" translate="yes" xml:space="preserve">
          <source>Ensure that all nodes (Erlang-, C-, and Java nodes) of a distributed Erlang system is of the same Erlang/OTP release, or from two different Erlang/OTP releases X and Y, where &lt;strong&gt;all&lt;/strong&gt; Y nodes have compatibility mode X.</source>
          <target state="translated">Убедитесь, что все узлы (узлы Erlang-, C- и Java) распределенной системы Erlang относятся к одному и тому же выпуску Erlang / OTP или от двух разных выпусков Erlang / OTP X и Y, где &lt;strong&gt;все&lt;/strong&gt; узлы Y имеют режим совместимости X.</target>
        </trans-unit>
        <trans-unit id="958b68eb429026f1debb7fb95959ba06f9687fcd" translate="yes" xml:space="preserve">
          <source>Ensure that the &lt;code&gt;priv&lt;/code&gt; directory, where the C program is located, is included in the new release package:</source>
          <target state="translated">Убедитесь, что каталог &lt;code&gt;priv&lt;/code&gt; , в котором находится программа C, включен в пакет нового выпуска:</target>
        </trans-unit>
        <trans-unit id="b4983262d3266b73c45b4b7746403f7f7b7d9740" translate="yes" xml:space="preserve">
          <source>Ensure that the configuration parameters for the &lt;code&gt;os_sup&lt;/code&gt; module in the &lt;code&gt;os_mon&lt;/code&gt; application are correct.</source>
          <target state="translated">Убедитесь , что параметры конфигурации для &lt;code&gt;os_sup&lt;/code&gt; модуля в &lt;code&gt;os_mon&lt;/code&gt; приложения являются правильными.</target>
        </trans-unit>
        <trans-unit id="6fc8dbfdde6b1e68d82e36f6f6fa0143435b8681" translate="yes" xml:space="preserve">
          <source>Ensure that the following configuration parameters have correct values:</source>
          <target state="translated">Убедитесь в том,что следующие параметры конфигурации имеют правильные значения:</target>
        </trans-unit>
        <trans-unit id="3c544c06d01afec781e1835ca1c990d2bf3d3fdb" translate="yes" xml:space="preserve">
          <source>Ensure that the header is included when using &lt;code&gt;ets&lt;/code&gt; and &lt;code&gt;dbg:fun2ms/1&lt;/code&gt; in compiled code.</source>
          <target state="translated">Убедитесь, что заголовок включен при использовании &lt;code&gt;ets&lt;/code&gt; и &lt;code&gt;dbg:fun2ms/1&lt;/code&gt; в скомпилированном коде.</target>
        </trans-unit>
        <trans-unit id="5c48b0c8103147c698d11fdc42ece8fa98d1b45c" translate="yes" xml:space="preserve">
          <source>Ensure you know what a binary contains before converting it to a string. If no other option exists, try heuristics:</source>
          <target state="translated">Убедитесь,что вы знаете,что содержит двоичный файл,прежде чем преобразовывать его в строку.Если других вариантов нет,попробуйте эвристику:</target>
        </trans-unit>
        <trans-unit id="b1ea6f53738aaf6c0f29ca61cdc22d0e4ce92e45" translate="yes" xml:space="preserve">
          <source>Ensures that a copy of all events of type &lt;code&gt;Event-Category&lt;/code&gt; are sent to the calling process</source>
          <target state="translated">Гарантирует, что копии всех событий типа &lt;code&gt;Event-Category&lt;/code&gt; отправляются вызывающему процессу.</target>
        </trans-unit>
        <trans-unit id="5dced8b350b5f94877c96cbc4ab7c21ba7f688da" translate="yes" xml:space="preserve">
          <source>Ensures that a copy of all events of type &lt;code&gt;EventCategory&lt;/code&gt; is sent to the caller. The available event types are described in the &lt;code&gt;&lt;a href=&quot;mnesia_chap5#event_handling&quot;&gt;User's Guide&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Обеспечивает &lt;code&gt;EventCategory&lt;/code&gt; копии всех событий типа EventCategory вызывающей стороне. Доступные типы событий описаны в &lt;code&gt;&lt;a href=&quot;mnesia_chap5#event_handling&quot;&gt;User's Guide&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ef731b04fa2fb82f85b737d70f620dea873787e1" translate="yes" xml:space="preserve">
          <source>Ensures that a pool master is running and includes &lt;code&gt;Node&lt;/code&gt; in the pool master's pool of nodes.</source>
          <target state="translated">Гарантирует, что мастер пула работает и включает &lt;code&gt;Node&lt;/code&gt; в пул узлов мастера пула.</target>
        </trans-unit>
        <trans-unit id="d5e41d06cf30ae1415f82183a24356df8156803f" translate="yes" xml:space="preserve">
          <source>Ensures that all parent directories for the specified file or directory name &lt;code&gt;Name&lt;/code&gt; exist, trying to create them if necessary.</source>
          <target state="translated">Обеспечивает существование всех родительских каталогов для указанного файла или каталога с именем &lt;code&gt;Name&lt;/code&gt; , пытаясь при необходимости их создать.</target>
        </trans-unit>
        <trans-unit id="6c6ccaf34a6cba3c5b5de6abfd26bbd92cd970b6" translate="yes" xml:space="preserve">
          <source>Ensures that all updates made to table &lt;code&gt;Name&lt;/code&gt; are written to disk. This also applies to tables that have been opened with flag &lt;code&gt;ram_file&lt;/code&gt; set to &lt;code&gt;true&lt;/code&gt;. In this case, the contents of the RAM file are flushed to disk.</source>
          <target state="translated">Гарантирует, что все обновления, внесенные в таблицу &lt;code&gt;Name&lt;/code&gt; , записываются на диск. Это также относится к таблицам, которые были открыты с флагом &lt;code&gt;ram_file&lt;/code&gt; , установленным в значение &lt;code&gt;true&lt;/code&gt; . В этом случае содержимое файла RAM сбрасывается на диск.</target>
        </trans-unit>
        <trans-unit id="179be22883a6aff731d18c72553f15ebd6342f7c" translate="yes" xml:space="preserve">
          <source>Ensures that any buffers kept by the operating system (not by the Erlang runtime system) are written to disk. In many ways it resembles &lt;code&gt;fsync&lt;/code&gt; but it does not update some of the metadata of the file, such as the access time. On some platforms this function has no effect.</source>
          <target state="translated">Гарантирует, что все буферы, хранящиеся в операционной системе (а не в системе времени выполнения Erlang), записываются на диск. Во многом он похож на &lt;code&gt;fsync&lt;/code&gt; , но не обновляет некоторые метаданные файла, такие как время доступа. На некоторых платформах эта функция не работает.</target>
        </trans-unit>
        <trans-unit id="52b1c024e514cd8bc30b642609203a562f517997" translate="yes" xml:space="preserve">
          <source>Ensures that any buffers kept by the operating system (not by the Erlang runtime system) are written to disk. On some platforms, this function might have no effect.</source>
          <target state="translated">Обеспечивает запись на диск любых буферов,хранящихся в операционной системе (а не в системе исполнения Erlang).На некоторых платформах эта функция может не иметь никакого эффекта.</target>
        </trans-unit>
        <trans-unit id="7bf2bc1e9755470f51dfd03724a8f65fe715b5ae" translate="yes" xml:space="preserve">
          <source>Ensures that the Erlang runtime system never tries to read any input. Implies &lt;code&gt;-noshell&lt;/code&gt;.</source>
          <target state="translated">Гарантирует, что система времени выполнения Erlang никогда не пытается прочитать ввод. Подразумевает &lt;code&gt;-noshell&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fe6fc0efb68605c111d7aad1e10930fb3e4c27d7" translate="yes" xml:space="preserve">
          <source>Ensures that the contents of the log are written to the disk. This is usually a rather expensive operation.</source>
          <target state="translated">Убедитесь,что содержимое журнала записано на диск.Обычно это довольно дорогая операция.</target>
        </trans-unit>
        <trans-unit id="483ad84b3b9a9460f181b8df2506d3da9749a272" translate="yes" xml:space="preserve">
          <source>Ensures that the local transaction log file is synced to disk. On a single node system, data written to disk tables since the last dump can be lost if there is a power outage. See &lt;code&gt;&lt;a href=&quot;#dump_log-0&quot;&gt;dump_log/0&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Обеспечивает синхронизацию локального файла журнала транзакций с диском. В системе с одним узлом данные, записанные в дисковые таблицы с момента последнего дампа, могут быть потеряны в случае отключения электроэнергии. См. &lt;code&gt;&lt;a href=&quot;#dump_log-0&quot;&gt;dump_log/0&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7b10764358fd20fca794865132b50fac708751e7" translate="yes" xml:space="preserve">
          <source>Enter command &lt;code&gt;&lt;a href=&quot;rb#help-0&quot;&gt;rb:help()&lt;/a&gt;&lt;/code&gt; to access the report browser online help system.</source>
          <target state="translated">Введите команду &lt;code&gt;&lt;a href=&quot;rb#help-0&quot;&gt;rb:help()&lt;/a&gt;&lt;/code&gt; для доступа к интерактивной справочной системе браузера отчетов.</target>
        </trans-unit>
        <trans-unit id="6c4d5a3c58a4c3838082c4cf0b51e1e37c9596f3" translate="yes" xml:space="preserve">
          <source>Enter shell break mode</source>
          <target state="translated">Войти в режим обрыва оболочки</target>
        </trans-unit>
        <trans-unit id="934d0063917157179a390d3ca343867e46640984" translate="yes" xml:space="preserve">
          <source>Enter the &lt;code&gt;telnet_settings&lt;/code&gt; term in a configuration file included in the test and &lt;code&gt;ct_telnet&lt;/code&gt; retrieves the information automatically.</source>
          <target state="translated">Введите термин &lt;code&gt;telnet_settings&lt;/code&gt; в файл конфигурации, включенный в тест, и &lt;code&gt;ct_telnet&lt;/code&gt; получит информацию автоматически.</target>
        </trans-unit>
        <trans-unit id="8246546eefded8a17ce0a5c88984bec6f308377e" translate="yes" xml:space="preserve">
          <source>Enter the following code in a file named &lt;code&gt;tut1.erl&lt;/code&gt;:</source>
          <target state="translated">Введите следующий код в файл с именем &lt;code&gt;tut1.erl&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="4b1f029dd1bd7aa1c9278ca0308da576f46de6b2" translate="yes" xml:space="preserve">
          <source>Enter the next program in a file named &lt;code&gt;tut2.erl&lt;/code&gt;). It can be useful for converting from inches to centimeters and conversely:</source>
          <target state="translated">Введите следующую программу в файл с именем &lt;code&gt;tut2.erl&lt;/code&gt; ). Это может быть полезно для преобразования дюймов в сантиметры и наоборот:</target>
        </trans-unit>
        <trans-unit id="115b9de9f1e80ff76c3ea96d77950a47bd332297" translate="yes" xml:space="preserve">
          <source>Entering and leaving FIPS mode on a node already running crypto is not supported. The reason is that OpenSSL is designed to prevent an application requesting FIPS mode to end up accidentally running in non-FIPS mode. If entering FIPS mode fails (e.g. the Object Module is not found or is compromised) any subsequent use of the OpenSSL API would terminate the emulator.</source>
          <target state="translated">Вход и выход из режима FIPS на узле,на котором уже работает криптография,не поддерживается.Причина в том,что OpenSSL разработан для предотвращения того,чтобы приложение,запрашивающее FIPS-режим,случайно оказалось запущенным в режиме,отличном от FIPS.В случае сбоя при входе в режим FIPS (например,объектный модуль не найден или скомпрометирован)любое последующее использование API OpenSSL приведет к завершению работы эмулятора.</target>
        </trans-unit>
        <trans-unit id="ef0d6a83dcf4276ea47f6fec92e31ab033e3e3cf" translate="yes" xml:space="preserve">
          <source>Entering at the front and exiting at the rear are reverse operations on the queue.</source>
          <target state="translated">Вход в очередь спереди и выход сзади-это обратные операции в очереди.</target>
        </trans-unit>
        <trans-unit id="f6b1269b202f34cf628bd423eacf8afa6ad2feb0" translate="yes" xml:space="preserve">
          <source>Entries in &lt;code&gt;Comments&lt;/code&gt; represent multi-line comments. For each entry, &lt;code&gt;Line&lt;/code&gt; is the line number and &lt;code&gt;Column&lt;/code&gt; the left column of the comment (the column of the first comment-introducing &quot;&lt;code&gt;%&lt;/code&gt;&quot; character). &lt;code&gt;Indentation&lt;/code&gt; is the number of character positions between the last non-whitespace character before the comment (or the left margin) and the left column of the comment. &lt;code&gt;Text&lt;/code&gt; is a list of strings representing the consecutive comment lines in top-down order, where each string contains all characters following (but not including) the comment-introducing &quot;&lt;code&gt;%&lt;/code&gt;&quot; and up to (but not including) the terminating newline. (Cf. module &lt;code&gt;erl_comment_scan&lt;/code&gt;.)</source>
          <target state="translated">Записи в &lt;code&gt;Comments&lt;/code&gt; представляют собой многострочные комментарии. Для каждой записи &lt;code&gt;Line&lt;/code&gt; - это номер строки, а &lt;code&gt;Column&lt;/code&gt; - левый столбец комментария (столбец первого символа &amp;laquo; &lt;code&gt;%&lt;/code&gt; &amp;raquo;, представляющего комментарий ). &lt;code&gt;Indentation&lt;/code&gt; - это количество позиций символов между последним непробельным символом перед комментарием (или левым полем) и левым столбцом комментария. &lt;code&gt;Text&lt;/code&gt; - это список строк, представляющих последовательные строки комментариев в порядке сверху вниз, где каждая строка содержит все символы, следующие (но не включая) вводящий комментарий &quot; &lt;code&gt;%&lt;/code&gt; &quot; и до (но не включая) завершающей новой строки. (См. Модуль &lt;code&gt;erl_comment_scan&lt;/code&gt; .)</target>
        </trans-unit>
        <trans-unit id="f83c27f29cda32a5c88a37a073106cf111ae03bb" translate="yes" xml:space="preserve">
          <source>Entry point for the the new process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d443a1185575c125d61e0af393b044d7b06ef572" translate="yes" xml:space="preserve">
          <source>Environment</source>
          <target state="translated">Environment</target>
        </trans-unit>
        <trans-unit id="6749984c5ebae89f18b1be2a7e0c97e3f86eb6c8" translate="yes" xml:space="preserve">
          <source>Environment Variable Passing (RFC 4254, section 6.4)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d714f219a186c0491f87d10110aaba7764529397" translate="yes" xml:space="preserve">
          <source>Environment variable &lt;code&gt;ERL_LIBS&lt;/code&gt; (defined in the operating system) can be used to define more library directories to be handled in the same way as the standard OTP library directory described above, except that directories without an &lt;code&gt;ebin&lt;/code&gt; directory are ignored.</source>
          <target state="translated">Переменная среды &lt;code&gt;ERL_LIBS&lt;/code&gt; (определенная в операционной системе) может использоваться для определения дополнительных каталогов библиотек, которые будут обрабатываться так же, как и стандартный каталог библиотеки OTP, описанный выше, за исключением того, что каталоги без каталога &lt;code&gt;ebin&lt;/code&gt; игнорируются.</target>
        </trans-unit>
        <trans-unit id="b6daa47d47d30c06a68597fafd923e987f5a36cd" translate="yes" xml:space="preserve">
          <source>Environment variable &lt;code&gt;ERL_LIBS&lt;/code&gt; (if defined) is to contain a colon-separated (for Unix-like systems) or semicolon-separated (for Windows) list of additional libraries.</source>
          <target state="translated">Переменная среды &lt;code&gt;ERL_LIBS&lt;/code&gt; (если определена) должна содержать список дополнительных библиотек, разделенных двоеточиями (для Unix-подобных систем) или точкой с запятой (для Windows).</target>
        </trans-unit>
        <trans-unit id="c57186053f185252b9718153515cfe2460506345" translate="yes" xml:space="preserve">
          <source>Environment variable &lt;code&gt;RELDIR&lt;/code&gt; can be set before calling this example, which sets the directory where to find the release files.</source>
          <target state="translated">Перед вызовом этого примера можно задать переменную среды &lt;code&gt;RELDIR&lt;/code&gt; , которая устанавливает каталог, в котором будут искать файлы выпуска.</target>
        </trans-unit>
        <trans-unit id="b1eaa79bc837d6866d6b6f457d286e20d9c99f7f" translate="yes" xml:space="preserve">
          <source>Environment variables and their interpretation are handled much in the same way as filenames. If Unicode filenames are enabled, environment variables as well as parameters to the Erlang VM are expected to be in Unicode.</source>
          <target state="translated">Переменные окружения и их интерпретация обрабатываются так же,как и имена файлов.Если включены имена файлов в Unicode,то переменные окружения,а также параметры виртуальной машины Erlang должны быть в Unicode.</target>
        </trans-unit>
        <trans-unit id="cd7c85d03b98190d36904693a2164d38b1a38d5f" translate="yes" xml:space="preserve">
          <source>Environment variables can be passed before starting the shell/command. Is to be called by a client channel processes.</source>
          <target state="translated">Переменные окружения могут быть переданы перед запуском оболочки/команды.Должны быть вызваны процессами клиентского канала.</target>
        </trans-unit>
        <trans-unit id="39882a4b7ec9443b18dbf778a96b5f0d21018ee8" translate="yes" xml:space="preserve">
          <source>Environment variables can be passed to the shell/command to be started later. This event is sent as a result of calling &lt;code&gt;&lt;a href=&quot;ssh_connection#setenv-5&quot;&gt; ssh_connection:setenv/5&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfb3775bf1b5456a3e06e36f98664cca58126e02" translate="yes" xml:space="preserve">
          <source>Environment variables can be passed to the shell/command to be started later. This event is sent as a result of calling &lt;code&gt;&lt;a href=&quot;ssh_connection#setenv-5&quot;&gt;ssh_connection:setenv/5&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Переменные среды можно передать в оболочку / команду для запуска позже. Это событие отправляется в результате вызова &lt;code&gt;&lt;a href=&quot;ssh_connection#setenv-5&quot;&gt;ssh_connection:setenv/5&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="44890b07830149c521ba5c9ad6cfa1ad85c5f3e9" translate="yes" xml:space="preserve">
          <source>Ephemeral Diffie-Hellman cipher suites are supported, but not Diffie Hellman Certificates cipher suites.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13b9a04dcb3e0ce7661aca803fc0ceecf849e1d8" translate="yes" xml:space="preserve">
          <source>Equal to</source>
          <target state="translated">Равный</target>
        </trans-unit>
        <trans-unit id="dcf80d8cab4aa6589affe9378df2d8dcf3a48955" translate="yes" xml:space="preserve">
          <source>Equal to 1 + n + m.</source>
          <target state="translated">Равно 1+н+м.</target>
        </trans-unit>
        <trans-unit id="09bb5e7c769262bf6d1a2aaff9bd4edf5501c760" translate="yes" xml:space="preserve">
          <source>Equal to &lt;code&gt;112&lt;/code&gt; (pass through).</source>
          <target state="translated">Равно &lt;code&gt;112&lt;/code&gt; (проход).</target>
        </trans-unit>
        <trans-unit id="05c13973f975cc581a5888850198e264ef30dee6" translate="yes" xml:space="preserve">
          <source>Equal to d + n + m.</source>
          <target state="translated">Равно как d+n+m.</target>
        </trans-unit>
        <trans-unit id="16b53a690e60aff7bf7cb6594412ef2ab0ee11e0" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#ann_c_bitstr-6&quot;&gt;ann_c_bitstr(As, Value, Size, abstract(1), Type, Flags)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4371bb175da3106bcb8069b1e138ae8955b39c79" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#ann_c_clause-4&quot;&gt;ann_c_clause(As, Patterns, c_atom(true), Body)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="426e43a8cca6f35d12cbaa419095ab24bb54a147" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#ann_c_receive-4&quot;&gt;ann_c_receive(As, Clauses, c_atom(infinity), c_atom(true))&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57131c4f5251e48576073e9ae91ab0dd3431ac0f" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#ann_c_var-2&quot;&gt;ann_c_var(As, {Atom, Arity})&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a2eecf99e77358f8e73373df62b8ac930c49352" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#ann_make_list-3&quot;&gt;ann_make_list(As, List, none)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1b3143e9955ab9adddb2b4dd2f3b4517e127a1a" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#attribute-2&quot;&gt;attribute(Name, none)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентен &lt;code&gt;&lt;a href=&quot;#attribute-2&quot;&gt;attribute(Name, none)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4ae4ec2e93db85feb5a2578e005f1e4886d234c3" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#basedir-3&quot;&gt;basedir(Type,Application, #{})&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентен &lt;code&gt;&lt;a href=&quot;#basedir-3&quot;&gt;basedir(Type,Application, #{})&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f4b1f57c66209d56e715b24a7143c02e424c2a1e" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#basedir_3_1&quot;&gt; basedir(PathType, Application, #{})&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#basedir_3_2&quot;&gt; basedir(PathsType, Application, #{})&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="582aebe00b21d5836a2498deb6d665024c07f6cb" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#best-2&quot;&gt;best(Tree, [])&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентен &lt;code&gt;&lt;a href=&quot;#best-2&quot;&gt;best(Tree, [])&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f918eb40249a6defccff4175d40e68cfa2e2dee0" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#binary_field-2&quot;&gt;binary_field(Body, [])&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#binary_field-2&quot;&gt;binary_field(Body, [])&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a6125894016cef185475df8034bb52c772f1e365" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#c_bitstr-5&quot;&gt;c_bitstr(Value, Size, abstract(1), Type, Flags)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91416c2a47641a61221f60e3af3ff79f8fc791fa" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#c_bitstr-5&quot;&gt;c_bitstr(Value, abstract(all), abstract(1), Type, Flags)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e083c319e8db2f5270e0830102043f89b198f901" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#c_clause-3&quot;&gt;c_clause(Patterns, c_atom(true), Body)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce39d94d40077a836dd6fc4a347035c2aff1db6e" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#c_module-4&quot;&gt;c_module(Name, Exports, [], Definitions)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="102237203e3bbf092a460bf7f8aa761f4ba6d295" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#c_receive-3&quot;&gt;c_receive(Clauses, c_atom(infinity), c_atom(true))&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d54191892c882d880f2a51b32fc5643c07541c4f" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#c_var-1&quot;&gt;c_var({Name, Arity})&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c852d2a7e09eb55c48f03a8f28bb6f72b6141d58" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#capture_get-1&quot;&gt;ct:capture_get([default])&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#capture_get-1&quot;&gt;ct:capture_get([default])&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e1c49fe52a91556ff0aaa7944a2bc8b6e613b0b7" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#clause-3&quot;&gt;clause([], Guard, Body)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#clause-3&quot;&gt;clause([], Guard, Body)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1aa8a2e37f287064a6e3f946a19187bec0ce0ac5" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#cmd-3&quot;&gt;ct_telnet:cmd(Connection, Cmd, [])&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#cmd-3&quot;&gt;ct_telnet:cmd(Connection, Cmd, [])&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="928a260bdb3b3e5d3caf0e440128bbb17938454c" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#cmdf-4&quot;&gt;ct_telnet:cmdf(Connection, CmdFormat, Args, [])&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#cmdf-4&quot;&gt;ct_telnet:cmdf(Connection, CmdFormat, Args, [])&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="684e9655a8ec58d496dd036380b5470505aec75d" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#comment-2&quot;&gt;comment(none, Strings)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалент &lt;code&gt;&lt;a href=&quot;#comment-2&quot;&gt;comment(none, Strings)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ddbe0b3f767b85def18a6f538394f315db70b95f" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#compile-2&quot;&gt;compile(Code, [])&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#compile-2&quot;&gt;compile(Code, [])&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4746c2d2b85dce9582bc7fd1835cfb6190066aff" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#compile_and_load-2&quot;&gt;compile_and_load(Code, [])&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#compile_and_load-2&quot;&gt;compile_and_load(Code, [])&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="34c3413e854719b0fdea410e48287f5f055af37f" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#connect-3&quot;&gt;ct_ssh:connect(KeyOrName, ConnType, [])&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#connect-3&quot;&gt;ct_ssh:connect(KeyOrName, ConnType, [])&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aa210fba1d3569a7a58c6f3bf220d9b782fa4cc2" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#connect-3&quot;&gt;ct_ssh:connect(KeyOrName, host, [])&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#connect-3&quot;&gt;ct_ssh:connect(KeyOrName, host, [])&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2c9d6a6a81b7654b8215baad7f8ccd2d21ee286d" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#cont_state-2&quot;&gt;cont_state(ContinuationState, S)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#cont_state-2&quot;&gt;cont_state(ContinuationState, S)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="32756e4dc130dec691ae949f865ea7edf04d260d" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#deflateEnd-1&quot;&gt;deflateEnd/1&lt;/a&gt;&lt;/code&gt; followed by &lt;code&gt;&lt;a href=&quot;#deflateInit-1&quot;&gt;deflateInit/1,2,6&lt;/a&gt;&lt;/code&gt;, but does not free and reallocate all the internal compression state. The stream keeps the same compression level and any other attributes.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#deflateEnd-1&quot;&gt;deflateEnd/1&lt;/a&gt;&lt;/code&gt; , за которым следует &lt;code&gt;&lt;a href=&quot;#deflateInit-1&quot;&gt;deflateInit/1,2,6&lt;/a&gt;&lt;/code&gt; , но не освобождает и не перераспределяет все внутреннее состояние сжатия. Поток сохраняет тот же уровень сжатия и любые другие атрибуты.</target>
        </trans-unit>
        <trans-unit id="0b6695db18a2f2dd98d7dd3f365cdbbbafda43a3" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#dir-1&quot;&gt;dir(&quot;&quot;)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#dir-1&quot;&gt;dir(&quot;&quot;)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2c23622ea4c2372f9268551a9c4cc18a67a0a649" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#dir-2&quot;&gt;dir(Dir, [])&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#dir-2&quot;&gt;dir(Dir, [])&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="652b45ea11a1ce0fa9b4d6dc294b0e3c62bfcff8" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#enif_fprintf&quot;&gt;enif_fprintf&lt;/a&gt;&lt;/code&gt; except that its called with a &lt;code&gt;va_list&lt;/code&gt; instead of a variable number of arguments.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#enif_fprintf&quot;&gt;enif_fprintf&lt;/a&gt;&lt;/code&gt; , за исключением того, что он вызывается с &lt;code&gt;va_list&lt;/code&gt; вместо переменного числа аргументов.</target>
        </trans-unit>
        <trans-unit id="ce8f3d87e78ddae6d3f4b53dea2eed3842f805e4" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#enif_snprintf&quot;&gt;enif_snprintf&lt;/a&gt;&lt;/code&gt; except that its called with a &lt;code&gt;va_list&lt;/code&gt; instead of a variable number of arguments.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#enif_snprintf&quot;&gt;enif_snprintf&lt;/a&gt;&lt;/code&gt; , за исключением того, что он вызывается с &lt;code&gt;va_list&lt;/code&gt; вместо переменного числа аргументов.</target>
        </trans-unit>
        <trans-unit id="40e5dfc329510d56dfeca51783615fe5be99ae88" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#event_state-2&quot;&gt;event_state(EventState, S)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#event_state-2&quot;&gt;event_state(EventState, S)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0822b99fc1db87c102d8944b91b0d47d78c92c70" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#exec-3&quot;&gt;ct_ssh:exec(SSH, Command, DefaultTimeout)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#exec-3&quot;&gt;ct_ssh:exec(SSH, Command, DefaultTimeout)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2f749471e89ae46c17f92a3f8623d58c76ab4410" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#expect-3&quot;&gt;ct_telnet:expect(Connections, Patterns, [])&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#expect-3&quot;&gt;ct_telnet:expect(Connections, Patterns, [])&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="53258dbd9b4c7a9e2fd1a5cca64f75032c0d6e84" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#export-3&quot;&gt;export(Data, Callback, [])&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#export-3&quot;&gt;export(Data, Callback, [])&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d4cc4c14f33a49c9f42d6c4d916b5e3b17d0d09f" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#export_simple-3&quot;&gt;export_simple(Content, Callback, [])&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентен &lt;code&gt;&lt;a href=&quot;#export_simple-3&quot;&gt;export_simple(Content, Callback, [])&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5479a778e5dff6538cd581dcd60edf566f436a01" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#fetch_state-2&quot;&gt;fetch_state(FetchState, S)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#fetch_state-2&quot;&gt;fetch_state(FetchState, S)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bf3f8d846a3d7912cbd2a46e4afbf7705e4e3dbd" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#file-2&quot;&gt;file(Filename, [])&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#file-2&quot;&gt;file(Filename, [])&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f40228bea002526f6dd9192eca4c4d2a44c23921" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#file-2&quot;&gt;file(Name, [])&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалент &lt;code&gt;&lt;a href=&quot;#file-2&quot;&gt;file(Name, [])&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0b11106b6d688183433883568c03ecb5e7c95160" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#floating-3&quot;&gt;floating(D, 0, 0)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#floating-3&quot;&gt;floating(D, 0, 0)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7409ce92240a99bb687331e86d1562839b83251f" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#follow-3&quot;&gt;follow(D1, D2, 0)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Аналогично &lt;code&gt;&lt;a href=&quot;#follow-3&quot;&gt;follow(D1, D2, 0)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4e87ef28b8ea2817254f842c3a48fc6a838b2ab2" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#format-2&quot;&gt; format(CrashReport, latin1)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c489e8c7139b8f43147689cd42f9bc1c6af4163b" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#format-2&quot;&gt;format(CrashReport, latin1)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#format-2&quot;&gt;format(CrashReport, latin1)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="70e8c43e3058793de183c9f16830fd6cfbc7d1fb" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#format-2&quot;&gt;format(D, 80)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#format-2&quot;&gt;format(D, 80)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2b4d0ee5dd2b855eb33bd99a8a50f0cf9bc94f6a" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#format-2&quot;&gt;format(Tree, [])&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#format-2&quot;&gt;format(Tree, [])&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6d1a5fec2195ff4e40181e992b455c707bba03aa" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#format-3&quot;&gt;format(D, PaperWidth, 65)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#format-3&quot;&gt;format(D, PaperWidth, 65)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c7fae69455d869a0b7ebb1ada8defd3089ff9387" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#from_list-2&quot;&gt;from_list(List, undefined)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентен &lt;code&gt;&lt;a href=&quot;#from_list-2&quot;&gt;from_list(List, undefined)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="99e70718d2848b64a547637e78268770d0aaf785" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#from_orddict-2&quot;&gt;from_orddict(Orddict, undefined)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентен &lt;code&gt;&lt;a href=&quot;#from_orddict-2&quot;&gt;from_orddict(Orddict, undefined)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5608d95603de58cc55eae36484f15c095b2086bc" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#function_type-2&quot;&gt;function_type(any_arity, Type)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#function_type-2&quot;&gt;function_type(any_arity, Type)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ebc826b0fca1c5dadf35269879027b11f5557ead" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#get_config-3&quot;&gt;ct:get_config(Required, Default, [])&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#get_config-3&quot;&gt;ct:get_config(Required, Default, [])&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="31d74b3bb9d8e21565792d25a739f19c3dced447" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#get_config-3&quot;&gt;ct:get_config(Required, undefined, [])&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#get_config-3&quot;&gt;ct:get_config(Required, undefined, [])&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="de26403ff29a5f94199e561aaaf5a64b1a96fee6" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#hook_state-2&quot;&gt;hook_state(HookState, S)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентен &lt;code&gt;&lt;a href=&quot;#hook_state-2&quot;&gt;hook_state(HookState, S)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4ef8b521ad0c1199b211d0467922ee92c5e23a6b" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#inflate-3&quot;&gt;inflate(Z, Data, [])&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#inflate-3&quot;&gt;inflate(Z, Data, [])&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b9453f561abca3673472314180640b1dd67d37e0" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#inflateEnd-1&quot;&gt;inflateEnd/1&lt;/a&gt;&lt;/code&gt; followed by &lt;code&gt;&lt;a href=&quot;#inflateInit-1&quot;&gt;inflateInit/1&lt;/a&gt;&lt;/code&gt;, but does not free and reallocate all the internal decompression state. The stream will keep attributes that could have been set by &lt;code&gt;inflateInit/1,2&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#inflateEnd-1&quot;&gt;inflateEnd/1&lt;/a&gt;&lt;/code&gt; , за которым следует &lt;code&gt;&lt;a href=&quot;#inflateInit-1&quot;&gt;inflateInit/1&lt;/a&gt;&lt;/code&gt; , но не освобождает и не перераспределяет все внутреннее состояние декомпрессии. В потоке сохранятся атрибуты, которые могли быть установлены с помощью &lt;code&gt;inflateInit/1,2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="493def41aaecfc7ac142be1b24f624231144cb36" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#label-2&quot;&gt;label(Tree, 0)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7229176aa8687e3ace20595b98b2167d75c17ad2" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#layout-2&quot;&gt;layout(Tree, [])&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#layout-2&quot;&gt;layout(Tree, [])&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="495ce089c721e454dbee6f4d4c9f70c5eed41844" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#list-2&quot;&gt;list(List, none)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентен &lt;code&gt;&lt;a href=&quot;#list-2&quot;&gt;list(List, none)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="22ede575071e89d794133470da9ef9e63ed3be8b" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#log-2&quot;&gt;log(alert,...)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалент &lt;code&gt;&lt;a href=&quot;#log-2&quot;&gt;log(alert,...)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="96fc6e6987a2592263865919948ca920427939ae" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#log-2&quot;&gt;log(critical,...)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалент &lt;code&gt;&lt;a href=&quot;#log-2&quot;&gt;log(critical,...)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bdbbee6065747c1e726e943a8952d721bfb3041c" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#log-2&quot;&gt;log(debug,...)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#log-2&quot;&gt;log(debug,...)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="30ac05a356e0df5a38b45ed160d3843d24041880" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#log-2&quot;&gt;log(emergency,...)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалент &lt;code&gt;&lt;a href=&quot;#log-2&quot;&gt;log(emergency,...)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="843545483e6b90487c50735820ade8a00f8c158f" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#log-2&quot;&gt;log(error,...)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#log-2&quot;&gt;log(error,...)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="07f018f04f3b382e02d814f5ca34e99f73093dbc" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#log-2&quot;&gt;log(info,...)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#log-2&quot;&gt;log(info,...)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="effe595c7e33bea5f348ed478d2dd412222f5593" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#log-2&quot;&gt;log(notice,...)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалент &lt;code&gt;&lt;a href=&quot;#log-2&quot;&gt;log(notice,...)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="909dd42f0266829be1bcfc81baf284b864756039" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#log-2&quot;&gt;log(warning,...)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалент &lt;code&gt;&lt;a href=&quot;#log-2&quot;&gt;log(warning,...)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="031e62392f8b08c26ecfd5a63b767af5b2410005" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#log-5&quot;&gt;ct:log(Category, Importance, Format, FormatArgs, Opts)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#log-5&quot;&gt;ct:log(Category, Importance, Format, FormatArgs, Opts)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f78c74016c2ef95eb55b46f915e05a429b746c54" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#log-5&quot;&gt;ct:log(Category, Importance, Format, FormatArgs, [])&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#log-5&quot;&gt;ct:log(Category, Importance, Format, FormatArgs, [])&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="505fd95ce8db366d54edc502b7dee81fbdde38c6" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#log-5&quot;&gt;ct:log(default, 50, Format, [], [])&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#log-5&quot;&gt;ct:log(default, 50, Format, [], [])&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c9aae0057a0fab531d0ad07f8b10a8cc7377ee3f" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#macro-2&quot;&gt;macro(Name, none)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#macro-2&quot;&gt;macro(Name, none)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6f7c5f5029244f4d68c3600f0d04a632db381519" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#make_list-2&quot;&gt;make_list(List, none)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2b356415f1c1d0fd662228c416ab1a936d4a3a2" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#map_expr-2&quot;&gt;map_expr(none, Fields)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентен &lt;code&gt;&lt;a href=&quot;#map_expr-2&quot;&gt;map_expr(none, Fields)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d1b1c0a4d526bb9484aac2f70daf6dbda88b735c" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#map_type-1&quot;&gt;map_type(any_size)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентен &lt;code&gt;&lt;a href=&quot;#map_type-1&quot;&gt;map_type(any_size)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c8460b3918f4611b439fc4fabc2dabf75810d353" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#merge-3&quot;&gt;merge(Name, Files, [])&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#merge-3&quot;&gt;merge(Name, Files, [])&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="058dca5fef272e099ea76f35dd557286960d85df" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#merge_files-4&quot;&gt;merge_files(Name, [], Files, Options)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#merge_files-4&quot;&gt;merge_files(Name, [], Files, Options)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d8b5be16c6e3ce9dce377c124b8b86e0dd70e104" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#module-2&quot;&gt;module(Forms, [])&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентен &lt;code&gt;&lt;a href=&quot;#module-2&quot;&gt;module(Forms, [])&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9dff7bc3a95b3d2751d732f4f61bae3bff575214" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#node_cookie-2&quot;&gt;node_cookie(Node, Cookie)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#node_cookie-2&quot;&gt;node_cookie(Node, Cookie)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fbe56e3a6d4c4c4d056d19f87306c2b02cda9418" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#open-2&quot;&gt;ct_telnet:open(Name, telnet)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалент &lt;code&gt;&lt;a href=&quot;#open-2&quot;&gt;ct_telnet:open(Name, telnet)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9074015814dfdcda73445d0bb6e483a88fb30e37" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#open-4&quot;&gt;ct_telnet:ct_telnet:open(KeyOrName, ConnType, TargetMod, [])&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#open-4&quot;&gt;ct_telnet:ct_telnet:open(KeyOrName, ConnType, TargetMod, [])&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2fe23231fc9809b7b87073f0fedc1728bd143d12" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#pal-5&quot;&gt;ct:pal(Category, Importance, Format, FormatArgs, Opts)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#pal-5&quot;&gt;ct:pal(Category, Importance, Format, FormatArgs, Opts)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fddf0305a41900f720db893c1b025d24f5d57976" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#pal-5&quot;&gt;ct:pal(Category, Importance, Format, FormatArgs, [])&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#pal-5&quot;&gt;ct:pal(Category, Importance, Format, FormatArgs, [])&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2db3eb8f9e318ab9cb1176763427f045aa1eaa3d" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#pal-5&quot;&gt;ct:pal(default, 50, Format, [], [])&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#pal-5&quot;&gt;ct:pal(default, 50, Format, [], [])&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e694e97a0df6b8bd3fe42d77130aff60cc089d7c" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#par-2&quot;&gt;par(Ds, 0)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентен &lt;code&gt;&lt;a href=&quot;#par-2&quot;&gt;par(Ds, 0)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a79ecf48b582b5855fe12375ff3b195eb0c23cb0" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#parse-2&quot;&gt;parse(IODevice, 1)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#parse-2&quot;&gt;parse(IODevice, 1)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1d3131562cf48362cfd9a9e385cf4a230fb3e6c4" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#parse-3&quot;&gt;parse(IODevice, StartLine, [])&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#parse-3&quot;&gt;parse(IODevice, StartLine, [])&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="28d88e4a38d4759d866979030f4ad9a3e958000c" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#parse_file-2&quot;&gt;parse_file(File, [])&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентен &lt;code&gt;&lt;a href=&quot;#parse_file-2&quot;&gt;parse_file(File, [])&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="916c501e4401286d2e8e7591743632d2e9e079da" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#parse_form-3&quot;&gt;parse_form(IODevice, StartLine, [])&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#parse_form-3&quot;&gt;parse_form(IODevice, StartLine, [])&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="10ee37c4b617207780a88dcbc33d40ef16cffd02" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#peernames-2&quot;&gt;peernames(Socket, 0)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#peernames-2&quot;&gt;peernames(Socket, 0)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7b5796bfde1378041039e80c7d77bc7ef1952313" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#print-5&quot;&gt;ct:print(Category, Importance, Format, FormatArgs, Opts)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#print-5&quot;&gt;ct:print(Category, Importance, Format, FormatArgs, Opts)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fe90e72bb9403cedd2354abb523c2f6b59eaade1" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#print-5&quot;&gt;ct:print(Category, Importance, Format, FormatArgs, [])&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#print-5&quot;&gt;ct:print(Category, Importance, Format, FormatArgs, [])&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d53de3e423970ed78f487a85dc4ee2dfc925444b" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#print-5&quot;&gt;ct:print(default, 50, Format, [], [])&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#print-5&quot;&gt;ct:print(default, 50, Format, [], [])&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="685bd8420dff68959c9c4bac76f0135fc06c0392" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#process_schema-2&quot;&gt;process_schema(Schema, [])&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентен &lt;code&gt;&lt;a href=&quot;#process_schema-2&quot;&gt;process_schema(Schema, [])&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0281413d62a4d2a6f4f3901d8ea1c0c99c3ec440" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#process_schema-2&quot;&gt;process_schema(Schemas, [])&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентен &lt;code&gt;&lt;a href=&quot;#process_schema-2&quot;&gt;process_schema(Schemas, [])&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2307340747392bf7458f2055790759706fe2d6cb" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#process_validate-3&quot;&gt;process_validate(Schema, Xml, [])&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентен &lt;code&gt;&lt;a href=&quot;#process_validate-3&quot;&gt;process_validate(Schema, Xml, [])&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7f2a5c5b7acd67a6550329c7640c70eadfa9bbdc" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#quick_parse-2&quot;&gt;quick_parse(IODevice, 1)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентен &lt;code&gt;&lt;a href=&quot;#quick_parse-2&quot;&gt;quick_parse(IODevice, 1)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1de891905e2e1a7b28384d0a8089b088c42cdf02" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#quick_parse-3&quot;&gt;quick_parse(IODevice, StartLine, [])&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентен &lt;code&gt;&lt;a href=&quot;#quick_parse-3&quot;&gt;quick_parse(IODevice, StartLine, [])&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="db445508d4699ebd2d86938da09208b59a495f31" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#quick_parse_file-2&quot;&gt;quick_parse_file(File, [])&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентен &lt;code&gt;&lt;a href=&quot;#quick_parse_file-2&quot;&gt;quick_parse_file(File, [])&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="981024e7eceead14c19c9252f00804dea25cf405" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#quick_parse_form-3&quot;&gt;quick_parse_form(IODevice, StartLine, [])&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентен &lt;code&gt;&lt;a href=&quot;#quick_parse_form-3&quot;&gt;quick_parse_form(IODevice, StartLine, [])&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="86599ee28ea3d0bf9edecbffc71bbd8071a2bb71" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#receive_expr-3&quot;&gt;receive_expr(Clauses, none, [])&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#receive_expr-3&quot;&gt;receive_expr(Clauses, none, [])&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="192a0c055b0a7f305086e17c8d52a91bbdb3e3dc" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#receive_response-3&quot;&gt;ct_ssh:receive_response(SSH, ChannelId, close)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#receive_response-3&quot;&gt;ct_ssh:receive_response(SSH, ChannelId, close)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a152765304b128f527af338bc05c41eab2dcc311" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#receive_response-4&quot;&gt;ct_ssh:receive_response(SSH, ChannelId, End, DefaultTimeout)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#receive_response-4&quot;&gt;ct_ssh:receive_response(SSH, ChannelId, End, DefaultTimeout)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3d250fdf49915e189b7b0130f0aa3faa67965d0f" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#record_expr-3&quot;&gt;record_expr(none, Type, Fields)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#record_expr-3&quot;&gt;record_expr(none, Type, Fields)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f487a795ccb5b3fdfb85baefaa33578a7eb710e2" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#record_field-2&quot;&gt;record_field(Name, none)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#record_field-2&quot;&gt;record_field(Name, none)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="38656cab93b86ea74a998970c9b0544d386c6958" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#reduce-2&quot;&gt;reduce(Cs, [])&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="696d369384e5d978cb226b92c9abd9144508c96f" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#rename-3&quot;&gt;rename(Files, Renamings, [])&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#rename-3&quot;&gt;rename(Files, Renamings, [])&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="597e95a32f82e2835176c69b48afb4438664a140" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#rules_state-2&quot;&gt;rules_state(RulesState, S)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#rules_state-2&quot;&gt;rules_state(RulesState, S)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eb92da3443dcfab77967e8cf4e2bc5e36700dc84" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#run-4&quot;&gt;ct_master:run(TestSpecs, false, InclNodes, ExclNodes)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#run-4&quot;&gt;ct_master:run(TestSpecs, false, InclNodes, ExclNodes)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3135af91c20771eb093b83d0faf3312b92b6f30c" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#run-4&quot;&gt;ct_master:run(TestSpecs, false, [], [])&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#run-4&quot;&gt;ct_master:run(TestSpecs, false, [], [])&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="32ffd1be0fd6193cee701eaac01c190adaef08e0" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#run_on_node-3&quot;&gt;ct_master:run_on_node(TestSpecs, false, Node)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#run_on_node-3&quot;&gt;ct_master:run_on_node(TestSpecs, false, Node)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7b32b5b0e405a63e2563aa6475f1fddf39e3b546" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#send-3&quot;&gt;ct_telnet:send(Connection, Cmd, [])&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#send-3&quot;&gt;ct_telnet:send(Connection, Cmd, [])&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="63f62404934f90ad154a6a24bcde3026eed8da1f" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#send-5&quot;&gt;ct_ssh:send(SSH, ChannelId, 0, Data, DefaultTimeout)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#send-5&quot;&gt;ct_ssh:send(SSH, ChannelId, 0, Data, DefaultTimeout)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ffc923e4fd5096607780b11e6dd43151ead2d96d" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#send-5&quot;&gt;ct_ssh:send(SSH, ChannelId, 0, Data, Timeout)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#send-5&quot;&gt;ct_ssh:send(SSH, ChannelId, 0, Data, Timeout)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fb108cc17a2794d7db63f1d180faebf6e2d46a5e" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#send_and_receive-4&quot;&gt;ct_ssh:send_and_receive(SSH, ChannelId, Data, close)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#send_and_receive-4&quot;&gt;ct_ssh:send_and_receive(SSH, ChannelId, Data, close)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="093aebead82785744f51a5f644ae70298b854a6c" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#send_and_receive-6&quot;&gt;ct_ssh:send_and_receive(SSH, ChannelId, 0, Data, End, Timeout)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентен &lt;code&gt;&lt;a href=&quot;#send_and_receive-6&quot;&gt;ct_ssh:send_and_receive(SSH, ChannelId, 0, Data, End, Timeout)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a308097eb51467b4d7a5348b10aabe977ac9ca34" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#send_and_receive-6&quot;&gt;ct_ssh;send_and_receive(SSH, ChannelId, 0, Data, End, DefaultTimeout)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#send_and_receive-6&quot;&gt;ct_ssh;send_and_receive(SSH, ChannelId, 0, Data, End, DefaultTimeout)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5531a67354abe2466d4f6bdcf4cb300aed1b289a" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#sendf-4&quot;&gt;ct_telnet:sendf(Connection, CmdFormat, Args, [])&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#sendf-4&quot;&gt;ct_telnet:sendf(Connection, CmdFormat, Args, [])&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="28d60fb429ec157bfba67f0024b3f13e4b30f298" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#session_open-2&quot;&gt;ct_ssh:session_open(SSH, DefaultTimeout)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#session_open-2&quot;&gt;ct_ssh:session_open(SSH, DefaultTimeout)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="748fc47780e0cffa40f2a4d6684163ed9f8a388d" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#shell-3&quot;&gt;ct_ssh:shell(SSH, ChannelId, DefaultTimeout)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентен &lt;code&gt;&lt;a href=&quot;#shell-3&quot;&gt;ct_ssh:shell(SSH, ChannelId, DefaultTimeout)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5847b1d6a4c1cbd5f9c7a9d17a643c6495212b2b" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#socknames-2&quot;&gt;socknames(Socket, 0)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентен &lt;code&gt;&lt;a href=&quot;#socknames-2&quot;&gt;socknames(Socket, 0)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="984186eb7309dbab51162e38d9773627b7539190" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#start-1&quot;&gt;start/1,2&lt;/a&gt;&lt;/code&gt; except it returns &lt;code&gt;ok&lt;/code&gt; for already started applications.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#start-1&quot;&gt;start/1,2&lt;/a&gt;&lt;/code&gt; , за исключением того, что возвращает &lt;code&gt;ok&lt;/code&gt; для уже запущенных приложений.</target>
        </trans-unit>
        <trans-unit id="559f72d708af708ecaccec78db858d90a2a93952" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#start-3&quot;&gt;ct_snmp:start(Config, MgrAgentConfName, undefined)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#start-3&quot;&gt;ct_snmp:start(Config, MgrAgentConfName, undefined)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7465f3b70b812611f2b839f4be2f68f7756bd422" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#stop-3&quot;&gt; stop(Process, normal, infinity)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87d4bb462cb2b05b3682a59f158cf0c1eac2da50" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#stop-3&quot;&gt;stop(Process, normal, infinity)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#stop-3&quot;&gt;stop(Process, normal, infinity)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8fc48bb6764fb6905d96cb3af30a21cb3522075e" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#string-2&quot;&gt;string(Test, [])&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентен &lt;code&gt;&lt;a href=&quot;#string-2&quot;&gt;string(Test, [])&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3082ff8847953fbb53b67ee205753da5412f05b0" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#string-2&quot;&gt;string(Text, [])&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3983bb17205ecce0781b18cfc33ffa250f3f9b17" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#string-3&quot;&gt;string(Str, Doc, [])&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентен &lt;code&gt;&lt;a href=&quot;#string-3&quot;&gt;string(Str, Doc, [])&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1e0f34e497a773dfe8e54c1c139a731148987e9d" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#string-5&quot;&gt;string(Str, Doc, [], Doc, Options)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#string-5&quot;&gt;string(Str, Doc, [], Doc, Options)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="da1e8a62e145e55d0bd478bbeb5ac881b7ffeacb" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#subsystem-4&quot;&gt;ct_ssh:subsystem(SSH, ChannelId, Subsystem, DefaultTimeout)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#subsystem-4&quot;&gt;ct_ssh:subsystem(SSH, ChannelId, Subsystem, DefaultTimeout)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="78f28f79846ca0d9d0380c448740fa3ab461f085" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#test-2&quot;&gt;test(Tests, [])&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#test-2&quot;&gt;test(Tests, [])&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="46bdb4ffd5f07ccfe657f5f363eace18e995517c" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#text_par-2&quot;&gt;text_par(Text, 0)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентен &lt;code&gt;&lt;a href=&quot;#text_par-2&quot;&gt;text_par(Text, 0)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cc2c778c9538e4aaf70ffe1027c64dcd4ad52318" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#to_comment-2&quot;&gt;to_comment(Tree, &quot;% &quot;)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#to_comment-2&quot;&gt;to_comment(Tree, &quot;% &quot;)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="172f30366b5eca51448ccd156117ffe4ef4dd270" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#tree-2&quot;&gt;tree(Type, [])&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентен &lt;code&gt;&lt;a href=&quot;#tree-2&quot;&gt;tree(Type, [])&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b4290fa5b9abeafbfbee520a470759133a359776" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#try_expr-3&quot;&gt;try_expr(Body, [], Handlers)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентен &lt;code&gt;&lt;a href=&quot;#try_expr-3&quot;&gt;try_expr(Body, [], Handlers)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a98cc95b855b196a73d2dbe2e87621b4e9461e44" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#try_expr-4&quot;&gt;try_expr(Body, Clauses, Handlers, [])&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентен &lt;code&gt;&lt;a href=&quot;#try_expr-4&quot;&gt;try_expr(Body, Clauses, Handlers, [])&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="393eab34c4091b6c396a9cb3f5afdce92b4d5690" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#try_expr-4&quot;&gt;try_expr(Body, [], [], After)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентен &lt;code&gt;&lt;a href=&quot;#try_expr-4&quot;&gt;try_expr(Body, [], [], After)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3525075cc649f0b865bf28dc206116f3a75e6bb0" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#tuple_type-1&quot;&gt;tuple_type(any_size)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентен &lt;code&gt;&lt;a href=&quot;#tuple_type-1&quot;&gt;tuple_type(any_size)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a65926c5005cfc07b105de8bdb2f49ec2fd7bd0b" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#update_c_bitstr-6&quot;&gt;update_c_bitstr(Node, Value, Size, abstract(1), Type, Flags)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b300fe7fb5ee04fa800d8b1594780a62dd5668f" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#update_c_var-2&quot;&gt;update_c_var(Old, {Atom, Arity})&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e0ae2cb3c1ac8a7815d4c943853ad68b65894a7" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#update_list-3&quot;&gt;update_list(Old, List, none)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e65f3d4be993cb540daefebbf089c080fd2bcc0a" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#user_state-2&quot;&gt;user_state(UserState, S)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#user_state-2&quot;&gt;user_state(UserState, S)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0a648640af68a7a3424b5fa2d1643a50975caaa7" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;#validate-3&quot;&gt;validate(Element, State, [])&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;#validate-3&quot;&gt;validate(Element, State, [])&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="873f285eec04cc2d338a6f123c329f06b8d6906b" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;abcast([node()|nodes()], Name, Msg)&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;abcast([node()|nodes()], Name, Msg)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3e2314ba79d059b9f70d68a46f23db90b5096b14" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;assert(not (BoolExpr))&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;assert(not (BoolExpr))&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="49d07bde253c258b6e5119a225803e592c5bd6ac" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;c(Mod, Fun, Args, all)&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;c(Mod, Fun, Args, all)&lt;/code&gt; .</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
