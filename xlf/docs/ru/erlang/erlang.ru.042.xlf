<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="erlang">
    <body>
      <group id="erlang">
        <trans-unit id="aa57b7a761159ee02439dd9f7a7248614deec258" translate="yes" xml:space="preserve">
          <source>The type &lt;code&gt;NULL&lt;/code&gt; is suitable where supply and recognition of a value is important but the actual value is not.</source>
          <target state="translated">Тип &lt;code&gt;NULL&lt;/code&gt; подходит для случаев, когда передача и распознавание значения важны, а фактическое значение - нет.</target>
        </trans-unit>
        <trans-unit id="8f171db85c218b70d6addcc8e6fc151a7cbbadd9" translate="yes" xml:space="preserve">
          <source>The type &lt;code&gt;OBJECT IDENTIFIER&lt;/code&gt; is used whenever a unique identity is required. An ASN.1 module, a transfer syntax, and so on, is identified with an &lt;code&gt;OBJECT IDENTIFIER&lt;/code&gt;. Assume the following example:</source>
          <target state="translated">Тип &lt;code&gt;OBJECT IDENTIFIER&lt;/code&gt; используется всякий раз, когда требуется уникальная идентичность. Модуль ASN.1, синтаксис передачи и т. Д. Идентифицируются &lt;code&gt;OBJECT IDENTIFIER&lt;/code&gt; . Предположим следующий пример:</target>
        </trans-unit>
        <trans-unit id="9360300fbf341e9ae2dadc1fc262f79e78fb2fc1" translate="yes" xml:space="preserve">
          <source>The type &lt;code&gt;TimeOut&lt;/code&gt; has the default value &lt;code&gt;infinity&lt;/code&gt;, so for instance:</source>
          <target state="translated">Тип &lt;code&gt;TimeOut&lt;/code&gt; имеет значение по умолчанию &lt;code&gt;infinity&lt;/code&gt; , например:</target>
        </trans-unit>
        <trans-unit id="25b9026ac150bd3535441298ee5fe811ce22b776" translate="yes" xml:space="preserve">
          <source>The type a port has when it is opened, but not bound to any file descriptor.</source>
          <target state="translated">Тип порта,когда он открыт,но не привязан ни к какому файловому дескриптору.</target>
        </trans-unit>
        <trans-unit id="92d522e36d256191ae801d58140abe1b10a81a7f" translate="yes" xml:space="preserve">
          <source>The type checking in the SEQUENCE construct is non-strict (i.e. subtypes may be specified). The reason for this is that some standard MIBs use this.</source>
          <target state="translated">Проверка типа в конструкции SEQUENCE не является жесткой (т.е.могут быть указаны подтипы).Причина этого заключается в том,что в некоторых стандартных MIB это используется.</target>
        </trans-unit>
        <trans-unit id="1be2df477daeda02d0883ed07f5157d20b6857d8" translate="yes" xml:space="preserve">
          <source>The type definition for a child specification is as follows:</source>
          <target state="translated">Определение типа для спецификации ребенка следующее:</target>
        </trans-unit>
        <trans-unit id="a191726a17db26ad276e59c3d2dbd9a5d58a79fa" translate="yes" xml:space="preserve">
          <source>The type definition of a child specification is as follows:</source>
          <target state="translated">Определение типа спецификации ребенка выглядит следующим образом:</target>
        </trans-unit>
        <trans-unit id="6def97965eb0171fce707fed1d80f680f68afe44" translate="yes" xml:space="preserve">
          <source>The type name is the atom &lt;code&gt;my_struct_type&lt;/code&gt;, followed by parentheses. &lt;code&gt;Type&lt;/code&gt; is a type as defined in the previous section. A current restriction is that &lt;code&gt;Type&lt;/code&gt; can contain only predefined types, or user-defined types which are either of the following:</source>
          <target state="translated">Имя типа - это атом &lt;code&gt;my_struct_type&lt;/code&gt; , за которым следуют круглые скобки. &lt;code&gt;Type&lt;/code&gt; - это тип, определенный в предыдущем разделе. Текущее ограничение состоит в том, что &lt;code&gt;Type&lt;/code&gt; может содержать только предопределенные типы или определяемые пользователем типы, которые могут быть одним из следующих:</target>
        </trans-unit>
        <trans-unit id="309c924e1cd088d894f3ed5124531ce4037037e9" translate="yes" xml:space="preserve">
          <source>The type of &lt;code&gt;Val&lt;/code&gt; depends on &lt;code&gt;Item&lt;/code&gt;:</source>
          <target state="translated">Тип &lt;code&gt;Val&lt;/code&gt; зависит от &lt;code&gt;Item&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="55a401f10752570792b382f21d74eedbc9c46cc7" translate="yes" xml:space="preserve">
          <source>The type of &lt;code&gt;Val&lt;/code&gt; depends on the value of &lt;code&gt;Tag&lt;/code&gt;, see &lt;code&gt;&lt;a href=&quot;snmp_agent_config_files#agent_information&quot;&gt;Agent Information&lt;/a&gt;&lt;/code&gt; for more info.</source>
          <target state="translated">Тип &lt;code&gt;Val&lt;/code&gt; зависит от значения &lt;code&gt;Tag&lt;/code&gt; , дополнительную информацию см. В разделе &amp;laquo; &lt;code&gt;&lt;a href=&quot;snmp_agent_config_files#agent_information&quot;&gt;Agent Information&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="88149033eb0717d0b52143637014a89740d11a73" translate="yes" xml:space="preserve">
          <source>The type of &lt;code&gt;Val&lt;/code&gt; depends on the value of &lt;code&gt;Tag&lt;/code&gt;, see &lt;code&gt;&lt;a href=&quot;snmp_agent_config_files#system_information&quot;&gt;System Information&lt;/a&gt;&lt;/code&gt; for more info.</source>
          <target state="translated">Тип &lt;code&gt;Val&lt;/code&gt; зависит от значения &lt;code&gt;Tag&lt;/code&gt; , для получения дополнительной информации см. &lt;code&gt;&lt;a href=&quot;snmp_agent_config_files#system_information&quot;&gt;System Information&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5e5d162e866719ba45f57bb291d7dab0d1fc5d64" translate="yes" xml:space="preserve">
          <source>The type of &lt;code&gt;Val&lt;/code&gt; depends on the value of &lt;code&gt;Tag&lt;/code&gt;, see &lt;code&gt;&lt;a href=&quot;snmp_manager_config_files#manager_information&quot;&gt;Manager Information&lt;/a&gt;&lt;/code&gt; for more info.</source>
          <target state="translated">Тип &lt;code&gt;Val&lt;/code&gt; зависит от значения &lt;code&gt;Tag&lt;/code&gt; , дополнительную информацию см. В разделе &amp;laquo; &lt;code&gt;&lt;a href=&quot;snmp_manager_config_files#manager_information&quot;&gt;Manager Information&lt;/a&gt;&lt;/code&gt; о менеджере&amp;raquo; .</target>
        </trans-unit>
        <trans-unit id="329ae914482ca32cea66526a39a0dbcd107a797e" translate="yes" xml:space="preserve">
          <source>The type of the AVP as specified in the dictionary file in question (or one it inherits). Possible types are &lt;code&gt;undefined&lt;/code&gt; and the Diameter types: &lt;code&gt;OctetString&lt;/code&gt;, &lt;code&gt;Integer32&lt;/code&gt;, &lt;code&gt;Integer64&lt;/code&gt;, &lt;code&gt;Unsigned32&lt;/code&gt;, &lt;code&gt;Unsigned64&lt;/code&gt;, &lt;code&gt;Float32&lt;/code&gt;, &lt;code&gt;Float64&lt;/code&gt;, &lt;code&gt;Grouped&lt;/code&gt;, &lt;code&gt;Enumerated&lt;/code&gt;, &lt;code&gt;Address&lt;/code&gt;, &lt;code&gt;Time&lt;/code&gt;, &lt;code&gt;UTF8String&lt;/code&gt;, &lt;code&gt;DiameterIdentity&lt;/code&gt;, &lt;code&gt;DiameterURI&lt;/code&gt;, &lt;code&gt;IPFilterRule&lt;/code&gt; and &lt;code&gt;QoSFilterRule&lt;/code&gt;.</source>
          <target state="translated">Тип AVP, указанный в рассматриваемом файле словаря (или в том, который он наследует). Возможные типы &lt;code&gt;undefined&lt;/code&gt; и типы Диаметр: &lt;code&gt;OctetString&lt;/code&gt; , &lt;code&gt;Integer32&lt;/code&gt; , &lt;code&gt;Integer64&lt;/code&gt; , &lt;code&gt;Unsigned32&lt;/code&gt; , &lt;code&gt;Unsigned64&lt;/code&gt; , &lt;code&gt;Float32&lt;/code&gt; , &lt;code&gt;Float64&lt;/code&gt; , &lt;code&gt;Grouped&lt;/code&gt; , &lt;code&gt;Enumerated&lt;/code&gt; , &lt;code&gt;Address&lt;/code&gt; , &lt;code&gt;Time&lt;/code&gt; , &lt;code&gt;UTF8String&lt;/code&gt; , &lt;code&gt;DiameterIdentity&lt;/code&gt; , &lt;code&gt;DiameterURI&lt;/code&gt; , &lt;code&gt;IPFilterRule&lt;/code&gt; и &lt;code&gt;QoSFilterRule&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fb4be47d081c9f00e1e008293842739b1e591c97" translate="yes" xml:space="preserve">
          <source>The type of the file.</source>
          <target state="translated">Тип файла.</target>
        </trans-unit>
        <trans-unit id="e102bd5c8529a3fcee9a46e71dac57efe0a0a2dd" translate="yes" xml:space="preserve">
          <source>The type of the padding as provided in the call ot &lt;code&gt;&lt;a href=&quot;#crypto_init-3&quot;&gt;crypto_init/3,4&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a0aaded2e1891fac9206e8409a5f01261f2d116" translate="yes" xml:space="preserve">
          <source>The type tag of a syntax tree node may also be used as a primary tag by the &lt;code&gt;erl_parse&lt;/code&gt; representation; in that case, the selector functions for that node type &lt;strong&gt;must&lt;/strong&gt; handle both the abstract syntax tree and the &lt;code&gt;erl_parse&lt;/code&gt; form. The function &lt;code&gt;type(T)&lt;/code&gt; should return the correct type tag regardless of the representation of &lt;code&gt;T&lt;/code&gt;, so that the user sees no difference between &lt;code&gt;erl_syntax&lt;/code&gt; and &lt;code&gt;erl_parse&lt;/code&gt; nodes.</source>
          <target state="translated">Тег типа узла синтаксического дерева может также использоваться в качестве основного тега в представлении &lt;code&gt;erl_parse&lt;/code&gt; ; в этом случае функции селектора для этого типа узла &lt;strong&gt;должны&lt;/strong&gt; обрабатывать как абстрактное синтаксическое дерево, так и форму &lt;code&gt;erl_parse&lt;/code&gt; . Тип функции &lt;code&gt;type(T)&lt;/code&gt; должен возвращать тег правильного типа независимо от представления &lt;code&gt;T&lt;/code&gt; , чтобы пользователь не видел разницы между &lt;code&gt;erl_syntax&lt;/code&gt; и &lt;code&gt;erl_parse&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fe3202d206f4f93d7d4689f53e891b3fc4e897bc" translate="yes" xml:space="preserve">
          <source>The types &lt;code&gt;ANY&lt;/code&gt; and &lt;code&gt;ANY DEFINED BY&lt;/code&gt; have been removed from the standard since 1994. It is recommended not to use these types any more. They can, however, exist in some old ASN.1 modules. The idea with this type was to leave a &quot;hole&quot; in a definition where it was possible to put unspecified data of any kind, even non-ASN.1 data.</source>
          <target state="translated">Типы &lt;code&gt;ANY&lt;/code&gt; и &lt;code&gt;ANY DEFINED BY&lt;/code&gt; были удалены из стандарта с 1994 года. Рекомендуется больше не использовать эти типы. Однако они могут присутствовать в некоторых старых модулях ASN.1. Идея этого типа заключалась в том, чтобы оставить &amp;laquo;дыру&amp;raquo; в определении, куда можно было бы поместить неуказанные данные любого типа, даже данные, не относящиеся к ASN.1.</target>
        </trans-unit>
        <trans-unit id="7d97ad7fc3d758f8f7503253b112a82e8b959c1f" translate="yes" xml:space="preserve">
          <source>The types &lt;code&gt;EXTERNAL&lt;/code&gt;, &lt;code&gt;EMBEDDED PDV&lt;/code&gt;, and &lt;code&gt;CHARACTER STRING&lt;/code&gt; are used in presentation layer negotiation. They are encoded according to their associated type, see X.680.</source>
          <target state="translated">Типы &lt;code&gt;EXTERNAL&lt;/code&gt; , &lt;code&gt;EMBEDDED PDV&lt;/code&gt; и &lt;code&gt;CHARACTER STRING&lt;/code&gt; используются при согласовании уровня представления. Они кодируются в соответствии с их ассоциированным типом, см. X.680.</target>
        </trans-unit>
        <trans-unit id="31206f08c9e0b285f83486faa623acb15de23275" translate="yes" xml:space="preserve">
          <source>The types &lt;code&gt;SET OF&lt;/code&gt; and &lt;code&gt;SEQUENCE OF&lt;/code&gt; correspond to the concept of an array in several programming languages. The Erlang syntax for both types is straightforward, for example:</source>
          <target state="translated">Типы &lt;code&gt;SET OF&lt;/code&gt; и &lt;code&gt;SEQUENCE OF&lt;/code&gt; соответствуют концепции массива в нескольких языках программирования. Синтаксис Erlang для обоих типов прост, например:</target>
        </trans-unit>
        <trans-unit id="b29412cfed4840e6735cd1786ded80d86e51e8fe" translate="yes" xml:space="preserve">
          <source>The types &lt;code&gt;utf8&lt;/code&gt;, &lt;code&gt;utf16&lt;/code&gt;, and &lt;code&gt;utf32&lt;/code&gt; specifies encoding/decoding of the &lt;strong&gt;Unicode Transformation Format&lt;/strong&gt;s UTF-8, UTF-16, and UTF-32, respectively.</source>
          <target state="translated">Типы &lt;code&gt;utf8&lt;/code&gt; , &lt;code&gt;utf16&lt;/code&gt; и &lt;code&gt;utf32&lt;/code&gt; определяют кодирование / декодирование &lt;strong&gt;форматов преобразования Unicode&lt;/strong&gt; UTF-8, UTF-16 и UTF-32 соответственно.</target>
        </trans-unit>
        <trans-unit id="45d28fc4f610ea2772ed9802ce16df2bd01cc6f6" translate="yes" xml:space="preserve">
          <source>The types are used to implement the various conditions that sets must fulfill. As an example, consider the relative product of two sets R and S, and recall that the relative product of R and S is defined if R is a binary relation to Y and S is a binary relation from Y. The function that implements the relative product, &lt;code&gt;&lt;a href=&quot;#relative_product-2&quot;&gt; relative_product/2&lt;/a&gt;&lt;/code&gt;, checks that the arguments represent binary relations by matching [{A,B}] against the type of the first argument (Arg1 say), and [{C,D}] against the type of the second argument (Arg2 say). The fact that [{A,B}] matches the type of Arg1 is to be interpreted as Arg1 representing a binary relation from X to Y, where X is defined as all sets Set(x) for some element x in Sets the type of which is A, and similarly for Y. In the same way Arg2 is interpreted as representing a binary relation from W to Z. Finally it is checked that B matches C, which is sufficient to ensure that W is equal to Y. The untyped empty set is handled separately: its type, ['_'], matches the type of any unordered set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="397ab02499d0458aff045535e75d83bc31f4cbeb" translate="yes" xml:space="preserve">
          <source>The types are used to implement the various conditions that sets must fulfill. As an example, consider the relative product of two sets R and S, and recall that the relative product of R and S is defined if R is a binary relation to Y and S is a binary relation from Y. The function that implements the relative product, &lt;code&gt;&lt;a href=&quot;#relative_product-2&quot;&gt;relative_product/2&lt;/a&gt;&lt;/code&gt;, checks that the arguments represent binary relations by matching [{A,B}] against the type of the first argument (Arg1 say), and [{C,D}] against the type of the second argument (Arg2 say). The fact that [{A,B}] matches the type of Arg1 is to be interpreted as Arg1 representing a binary relation from X to Y, where X is defined as all sets Set(x) for some element x in Sets the type of which is A, and similarly for Y. In the same way Arg2 is interpreted as representing a binary relation from W to Z. Finally it is checked that B matches C, which is sufficient to ensure that W is equal to Y. The untyped empty set is handled separately: its type, ['_'], matches the type of any unordered set.</source>
          <target state="translated">Типы используются для реализации различных условий, которым должны соответствовать наборы. В качестве примера рассмотрим относительное произведение двух множеств R и S и напомним, что относительное произведение R и S определено, если R - бинарное отношение к Y, а S - бинарное отношение из Y. Функция, реализующая относительное product, &lt;code&gt;&lt;a href=&quot;#relative_product-2&quot;&gt;relative_product/2&lt;/a&gt;&lt;/code&gt; , проверяет, что аргументы представляют бинарные отношения, сопоставляя [{A, B}] с типом первого аргумента (например, Arg1) и [{C, D}] с типом второго аргумента (например, Arg2). Тот факт, что [{A, B}] соответствует типу Arg1, следует интерпретировать как Arg1, представляющий бинарное отношение от X к Y, где X определяется как все наборы Set (x) для некоторого элемента x in Наборы типа который является A, и аналогично для Y. Таким же образом Arg2 интерпретируется как представление бинарного отношения от W к Z. Наконец, проверяется, что B соответствует C, что достаточно, чтобы гарантировать, что W равно Y. Нетипизированный пустой set обрабатывается отдельно: его тип, ['_'], соответствует типу любого неупорядоченного набора.</target>
        </trans-unit>
        <trans-unit id="92a2f2f4039eb9cab39f41c392f86d30d282c1cf" translate="yes" xml:space="preserve">
          <source>The types of errors that may occur can be divide into the following categories.</source>
          <target state="translated">Виды ошибок,которые могут возникнуть,можно разделить на следующие категории.</target>
        </trans-unit>
        <trans-unit id="ccc80a70996f3fb5f7ac83b02a6f6f55b6b8c98c" translate="yes" xml:space="preserve">
          <source>The types of record fields can be specified in the declaration of the record. The syntax for this is as follows:</source>
          <target state="translated">Типы полей записи могут быть указаны в объявлении записи.Синтаксис для этого следующий:</target>
        </trans-unit>
        <trans-unit id="b0b9fd9ae89eff0834b9b47daece1217c2da1a05" translate="yes" xml:space="preserve">
          <source>The types that follow do a type test of the operand at runtime; thus, they are generally more expensive in terms of runtime than the types described earlier. However, those operand types are needed to avoid a combinatorial explosion in the number of specific instructions and overall code size of &lt;code&gt;process_main()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7b6e93a6a81ebbecd527612eefc77626b9faa25" translate="yes" xml:space="preserve">
          <source>The types that follows are all applied to an operand that has the &lt;code&gt;u&lt;/code&gt; type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="015a6a68261fd2baee3f181670e406ef25582853" translate="yes" xml:space="preserve">
          <source>The typical round-trip of a message can be viewed as follows. Firstly we view the call flow on the originating side:</source>
          <target state="translated">Типичную поездку туда-обратно можно просмотреть следующим образом.Сначала мы рассматриваем поток звонка на исходной стороне:</target>
        </trans-unit>
        <trans-unit id="ffb34ce1e3c3b26351d07518729543600aa64ad5" translate="yes" xml:space="preserve">
          <source>The typical use case for &lt;code&gt;write_concurrency&lt;/code&gt; is when concurrent calls to &lt;code&gt;&lt;a href=&quot;#add-3&quot;&gt;add&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#sub-3&quot;&gt;sub&lt;/a&gt;&lt;/code&gt; toward the same counters are very frequent, while calls to &lt;code&gt;&lt;a href=&quot;#get-2&quot;&gt;get &lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#put-3&quot;&gt;put&lt;/a&gt;&lt;/code&gt; are much less frequent. The lack of absolute read consistency must also be acceptable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a092e2bd3b4745048655568b0b490cb79d98d82c" translate="yes" xml:space="preserve">
          <source>The unit of measurement is memory words. There exists both a 32-bit and a 64-bit implementation. A word is therefore 4 bytes or 8 bytes, respectively.</source>
          <target state="translated">Единицей измерения являются слова памяти.Существует как 32-битная,так и 64-битная реализация.Следовательно,слово составляет 4 байта или 8 байт соответственно.</target>
        </trans-unit>
        <trans-unit id="d78579febd40e018de674b923ab2dd8480cc6d1a" translate="yes" xml:space="preserve">
          <source>The unit size is given as &lt;code&gt;unit:IntegerLiteral&lt;/code&gt;. The allowed range is 1-256. It is multiplied by the &lt;code&gt;Size&lt;/code&gt; specifier to give the effective size of the segment. The unit size specifies the alignment for binary segments without size.</source>
          <target state="translated">Размер единицы задается как &lt;code&gt;unit:IntegerLiteral&lt;/code&gt; . Допустимый диапазон - 1-256. Он умножается на спецификатор &lt;code&gt;Size&lt;/code&gt; чтобы получить эффективный размер сегмента. Размер блока определяет выравнивание для двоичных сегментов без размера.</target>
        </trans-unit>
        <trans-unit id="5ee4d7b5711971b4db427f1d7dcb1848a313bcc2" translate="yes" xml:space="preserve">
          <source>The unload request is registered, but other &lt;code&gt;&lt;a href=&quot;#users&quot;&gt;users&lt;/a&gt;&lt;/code&gt; still hold the driver. Notice that the term &lt;code&gt;pending_process&lt;/code&gt; can refer to the running process; there can be more than one &lt;code&gt;&lt;a href=&quot;#users&quot;&gt;user&lt;/a&gt;&lt;/code&gt; in the same process.</source>
          <target state="translated">Запрос на выгрузку зарегистрирован, но другие &lt;code&gt;&lt;a href=&quot;#users&quot;&gt;users&lt;/a&gt;&lt;/code&gt; прежнему держат драйвер. Обратите внимание, что термин &lt;code&gt;pending_process&lt;/code&gt; может относиться к запущенному процессу; в одном процессе может быть более одного &lt;code&gt;&lt;a href=&quot;#users&quot;&gt;user&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a92c5b2b8040b8ecbc28851e51c3e75943648293" translate="yes" xml:space="preserve">
          <source>The unloading/loading is done as one atomic operation, blocking all processes in the system from using the driver in question while in progress.</source>
          <target state="translated">Разгрузка/выгрузка производится как одна атомная операция,блокируя все процессы в системе от использования данного драйвера в процессе работы.</target>
        </trans-unit>
        <trans-unit id="b2bb7ad491dec5db9c49126bb51367d385e40bcc" translate="yes" xml:space="preserve">
          <source>The unsigned integer data type &lt;code&gt;ErlDrvUInt64&lt;/code&gt; and the signed integer data type &lt;code&gt;ErlDrvSInt64&lt;/code&gt; are always 64 bits wide. They were introduced in ERTS 5.7.4.</source>
          <target state="translated">Целочисленный тип данных без знака &lt;code&gt;ErlDrvUInt64&lt;/code&gt; и целочисленный тип данных &lt;code&gt;ErlDrvSInt64&lt;/code&gt; со знаком всегда имеют ширину 64 бита. Они были введены в ERTS 5.7.4.</target>
        </trans-unit>
        <trans-unit id="06cd090adf77b790656c62fa3caa0f561db0b42b" translate="yes" xml:space="preserve">
          <source>The unsigned integer data type &lt;code&gt;ErlDrvUInt&lt;/code&gt; and the signed integer data type &lt;code&gt;ErlDrvSInt&lt;/code&gt; are 64 bits wide on a 64-bit runtime system and 32 bits wide on a 32-bit runtime system. They were introduced in ERTS 5.6 and replaced some of the &lt;code&gt;int&lt;/code&gt; arguments in the list above.</source>
          <target state="translated">Целочисленный тип данных без знака &lt;code&gt;ErlDrvUInt&lt;/code&gt; и целочисленный тип данных &lt;code&gt;ErlDrvSInt&lt;/code&gt; со знаком имеют ширину 64 бита в 64-битной системе времени выполнения и 32 бита в 32-битной системе времени выполнения. Они были введены в ERTS 5.6 и заменили некоторые аргументы типа &lt;code&gt;int&lt;/code&gt; в приведенном выше списке.</target>
        </trans-unit>
        <trans-unit id="d4dbe8cb85a6484b8db2e5ddc4f7e81602e6c250" translate="yes" xml:space="preserve">
          <source>The unsigned integer value of &lt;code&gt;t&lt;/code&gt;.</source>
          <target state="translated">Беззнаковое целое значение &lt;code&gt;t&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="634b3eb0cccf55ffe20b68558982833221c90d25" translate="yes" xml:space="preserve">
          <source>The unsleeping reader may notice that the ACC times for &lt;code&gt;prim_file:drv_command/2&lt;/code&gt; and &lt;code&gt;prim_file:drv_command/4&lt;/code&gt; is not equal between the paragraphs above, even though it is easy to believe that &lt;code&gt;prim_file:drv_command/2&lt;/code&gt; is just a passthrough function.</source>
          <target state="translated">Не спящий читатель может заметить, что времена ACC для &lt;code&gt;prim_file:drv_command/2&lt;/code&gt; и &lt;code&gt;prim_file:drv_command/4&lt;/code&gt; не равны между параграфами выше, хотя легко поверить, что &lt;code&gt;prim_file:drv_command/2&lt;/code&gt; - это просто функция пересылки.</target>
        </trans-unit>
        <trans-unit id="53c140ed888506c0fa3ce30e4732a3ab8d9bef72" translate="yes" xml:space="preserve">
          <source>The upgrade is done in two phases: first the server is asked for permission to upgrade. Second, if the request is acknowledged, the upgrade to tls is performed.</source>
          <target state="translated">Обновление производится в два этапа:сначала серверу запрашивается разрешение на обновление.Во-вторых,если запрос подтвержден,обновление до tls выполняется.</target>
        </trans-unit>
        <trans-unit id="f1abe4219b1176145faaf51a5d5248cfe9c5cdbb" translate="yes" xml:space="preserve">
          <source>The upgrade script can then be evaluated using &lt;code&gt;&lt;a href=&quot;#eval_appup_script-4&quot;&gt;eval_appup_script/4&lt;/a&gt;&lt;/code&gt;. It is recommended to use &lt;code&gt;&lt;a href=&quot;#upgrade_app-2&quot;&gt;upgrade_app/2&lt;/a&gt;&lt;/code&gt; instead, but this function (&lt;code&gt;upgrade_script&lt;/code&gt;) is useful to inspect the contents of the script.</source>
          <target state="translated">Затем сценарий обновления можно оценить с помощью &lt;code&gt;&lt;a href=&quot;#eval_appup_script-4&quot;&gt;eval_appup_script/4&lt;/a&gt;&lt;/code&gt; . Вместо этого рекомендуется использовать &lt;code&gt;&lt;a href=&quot;#upgrade_app-2&quot;&gt;upgrade_app/2&lt;/a&gt;&lt;/code&gt; , но эта функция ( &lt;code&gt;upgrade_script&lt;/code&gt; ) полезна для проверки содержимого сценария.</target>
        </trans-unit>
        <trans-unit id="66b6bbe8cee241bbe5ef7774f674afa0a63f5765" translate="yes" xml:space="preserve">
          <source>The upgrade was refused by the LDAP server. The &lt;code&gt;ResponseFromServer&lt;/code&gt; is an atom delivered byt the LDAP server explained in section 2.3 of rfc 2830. The connection is not affected, so it is still un-encrypted.</source>
          <target state="translated">Сервер LDAP отказался от обновления. &lt;code&gt;ResponseFromServer&lt;/code&gt; представляет собой атом доставлены бет сервера LDAP описан в разделе 2.3 RFC 2830. соединения не влияют, так что это еще не-зашифровано.</target>
        </trans-unit>
        <trans-unit id="24e4c40c9265bed4ba5b9b42f433f1e4b84ab6f0" translate="yes" xml:space="preserve">
          <source>The upper bound of the first interval in the allocated block size histograms. Defaults to 128.</source>
          <target state="translated">Верхняя граница первого интервала в выделенных гистограммах размера блока.По умолчанию 128.</target>
        </trans-unit>
        <trans-unit id="cbc1809e93754ae11d777adddcabee5582e3ea4f" translate="yes" xml:space="preserve">
          <source>The upper bound of the first interval in the free block size histograms. Defaults to 512.</source>
          <target state="translated">Верхняя граница первого интервала на гистограммах свободного размера блока.По умолчанию 512.</target>
        </trans-unit>
        <trans-unit id="49138c2017ae769df1dbe3fdeaaab6a9e2775cc2" translate="yes" xml:space="preserve">
          <source>The upper bound of the first interval is provided by the function that returned the histogram, and the last interval has no upper bound.</source>
          <target state="translated">Верхняя граница первого интервала обеспечивается функцией,возвращающей гистограмму,а последний интервал не имеет верхней границы.</target>
        </trans-unit>
        <trans-unit id="0dc8cf3ce6b3c8880a720af10de4f0e69e030978" translate="yes" xml:space="preserve">
          <source>The uppercase escapes match the inverse sets of characters. Notice that \d matches only decimal digits, while \w matches any Unicode digit, any Unicode letter, and underscore. Notice also that &lt;code&gt;ucp&lt;/code&gt; affects \b and \B, as they are defined in terms of \w and \W. Matching these sequences is noticeably slower when &lt;code&gt;ucp&lt;/code&gt; is set.</source>
          <target state="translated">Прописные escape-символы соответствуют обратным наборам символов. Обратите внимание, что \ d соответствует только десятичным цифрам, а \ w соответствует любой цифре Unicode, любой букве Unicode и подчеркиванию. Также обратите внимание, что &lt;code&gt;ucp&lt;/code&gt; влияет на \ b и \ B, поскольку они определены в терминах \ w и \ W. Согласование этих последовательностей заметно медленнее, когда установлен &lt;code&gt;ucp&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b043a2c5698c1e7d1fd873979502125e49e702d8" translate="yes" xml:space="preserve">
          <source>The use and effect of the actions are as follows:</source>
          <target state="translated">Использование и эффект от действий выглядят следующим образом:</target>
        </trans-unit>
        <trans-unit id="ca7d622dd82e1d3aeae321fc0b43126901f71c4f" translate="yes" xml:space="preserve">
          <source>The use of resource objects is a safe way to return pointers to native data structures from a NIF. A resource object is only a block of memory allocated with &lt;code&gt;&lt;a href=&quot;#enif_alloc_resource&quot;&gt; enif_alloc_resource&lt;/a&gt;&lt;/code&gt;. A handle (&quot;safe pointer&quot;) to this memory block can then be returned to Erlang by the use of &lt;code&gt;&lt;a href=&quot;#enif_make_resource&quot;&gt; enif_make_resource&lt;/a&gt;&lt;/code&gt;. The term returned by &lt;code&gt;enif_make_resource&lt;/code&gt; is opaque in nature. It can be stored and passed between processes, but the only real end usage is to pass it back as an argument to a NIF. The NIF can then call &lt;code&gt;&lt;a href=&quot;#enif_get_resource&quot;&gt; enif_get_resource&lt;/a&gt;&lt;/code&gt; and get back a pointer to the memory block, which is guaranteed to still be valid. A resource object is not deallocated until the last handle term is garbage collected by the VM and the resource is released with &lt;code&gt;&lt;a href=&quot;#enif_release_resource&quot;&gt; enif_release_resource&lt;/a&gt;&lt;/code&gt; (not necessarily in that order).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea64d7717e78cf5f593ec4e6046b9c45fcf5ca9f" translate="yes" xml:space="preserve">
          <source>The use of resource objects is a safe way to return pointers to native data structures from a NIF. A resource object is only a block of memory allocated with &lt;code&gt;&lt;a href=&quot;#enif_alloc_resource&quot;&gt;enif_alloc_resource&lt;/a&gt;&lt;/code&gt;. A handle (&quot;safe pointer&quot;) to this memory block can then be returned to Erlang by the use of &lt;code&gt;&lt;a href=&quot;#enif_make_resource&quot;&gt;enif_make_resource&lt;/a&gt;&lt;/code&gt;. The term returned by &lt;code&gt;enif_make_resource&lt;/code&gt; is opaque in nature. It can be stored and passed between processes, but the only real end usage is to pass it back as an argument to a NIF. The NIF can then call &lt;code&gt;&lt;a href=&quot;#enif_get_resource&quot;&gt;enif_get_resource&lt;/a&gt;&lt;/code&gt; and get back a pointer to the memory block, which is guaranteed to still be valid. A resource object is not deallocated until the last handle term is garbage collected by the VM and the resource is released with &lt;code&gt;&lt;a href=&quot;#enif_release_resource&quot;&gt;enif_release_resource&lt;/a&gt;&lt;/code&gt; (not necessarily in that order).</source>
          <target state="translated">Использование объектов ресурсов - это безопасный способ возврата указателей на собственные структуры данных из NIF. Объект ресурса - это только блок памяти, выделенный с помощью &lt;code&gt;&lt;a href=&quot;#enif_alloc_resource&quot;&gt;enif_alloc_resource&lt;/a&gt;&lt;/code&gt; . Дескриптор (&amp;laquo;безопасный указатель&amp;raquo;) этого блока памяти может быть затем возвращен в Erlang с помощью &lt;code&gt;&lt;a href=&quot;#enif_make_resource&quot;&gt;enif_make_resource&lt;/a&gt;&lt;/code&gt; . Термин, возвращаемый &lt;code&gt;enif_make_resource&lt;/code&gt; , непрозрачен по своей природе. Его можно хранить и передавать между процессами, но единственное реальное конечное использование - это передать его в качестве аргумента NIF. Затем NIF может вызвать &lt;code&gt;&lt;a href=&quot;#enif_get_resource&quot;&gt;enif_get_resource&lt;/a&gt;&lt;/code&gt; и вернуть указатель на блок памяти, который гарантированно останется действительным. Объект ресурса не освобождается до тех пор, пока виртуальная машина не соберет последний элемент дескриптора, и ресурс не будет освобожден с &lt;code&gt;&lt;a href=&quot;#enif_release_resource&quot;&gt;enif_release_resource&lt;/a&gt;&lt;/code&gt; (не обязательно в таком порядке).</target>
        </trans-unit>
        <trans-unit id="7d704eb78317ca9acd08384d4f2bcb2bb1355fb7" translate="yes" xml:space="preserve">
          <source>The use of the &lt;code&gt;flags&lt;/code&gt; field is that any flag provided must exist for the interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abd42e11d00d705e28195f82bd49864a0d14541e" translate="yes" xml:space="preserve">
          <source>The use of the match operator is particularly useful for pulling apart Erlang terms and creating new ones.</source>
          <target state="translated">Использование оператора сравнения особенно полезно для разбора терминов Erlang и создания новых.</target>
        </trans-unit>
        <trans-unit id="9361a4a5f036e16a92bbb4fe0af3e2c751d37ab7" translate="yes" xml:space="preserve">
          <source>The use of this option has always been discouraged. As from R14A, it is an error to use it.</source>
          <target state="translated">Использование этой опции всегда было обескураживающим.Как и в случае с R14A,его использование является ошибкой.</target>
        </trans-unit>
        <trans-unit id="6184f0737f651dbcd0feb09612ee2a07afce0951" translate="yes" xml:space="preserve">
          <source>The use of this strategy of abandoning carriers with poor utilization and reusing them in allocator instances with an increased carrier demand is extremely effective and completely eliminates the problems that otherwise sometimes occurred when CPU load dropped while memory load did not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7051fa8cce86b7e9e63652f268c7db87c6180ee0" translate="yes" xml:space="preserve">
          <source>The used memory for all ETS tables.</source>
          <target state="translated">Использованная память для всех таблиц ETS.</target>
        </trans-unit>
        <trans-unit id="8f9be74fa1ece2bebb8a5ba0433d42158ebba618" translate="yes" xml:space="preserve">
          <source>The user &lt;code&gt;otptest&lt;/code&gt;, which has bash as default shell, uses the &lt;code&gt;ssh:shell/1&lt;/code&gt; client to connect to the &lt;strong&gt;openssh&lt;/strong&gt; daemon running on a host called &lt;strong&gt;tarlop&lt;/strong&gt;:</source>
          <target state="translated">Пользователь &lt;code&gt;otptest&lt;/code&gt; , у которого в качестве оболочки по умолчанию используется bash, использует клиент &lt;code&gt;ssh:shell/1&lt;/code&gt; для подключения к демону &lt;strong&gt;openssh&lt;/strong&gt; , запущенному на хосте &lt;strong&gt;tarlop&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="d301c340a5de16be3a33995e9e04d1a25c73f970" translate="yes" xml:space="preserve">
          <source>The user can include this AVP as required.</source>
          <target state="translated">Пользователь может включить этот AVP по мере необходимости.</target>
        </trans-unit>
        <trans-unit id="b476a06d8305252521da860471bca0c708d1246d" translate="yes" xml:space="preserve">
          <source>The user can provide a test specification including (for &lt;code&gt;Common Test&lt;/code&gt;) unrecognizable terms. If this is desired, use flag &lt;code&gt;-allow_user_terms&lt;/code&gt; when starting tests with &lt;code&gt;ct_run&lt;/code&gt;. This forces &lt;code&gt;Common Test&lt;/code&gt; to ignore unrecognizable terms. In this mode, &lt;code&gt;Common Test&lt;/code&gt; is not able to check the specification for errors as efficiently as if the scanner runs in default mode. If &lt;code&gt;&lt;a href=&quot;ct#run_test-1&quot;&gt;ct:run_test/1&lt;/a&gt;&lt;/code&gt; is used for starting the tests, the relaxed scanner mode is enabled by tuple &lt;code&gt;{allow_user_terms,true}&lt;/code&gt;.</source>
          <target state="translated">Пользователь может предоставить спецификацию теста, включая (для &lt;code&gt;Common Test&lt;/code&gt; ) неузнаваемые термины. Если это желательно, используйте флаг &lt;code&gt;-allow_user_terms&lt;/code&gt; при запуске тестов с &lt;code&gt;ct_run&lt;/code&gt; . Это заставляет &lt;code&gt;Common Test&lt;/code&gt; игнорировать неузнаваемые термины. В этом режиме &lt;code&gt;Common Test&lt;/code&gt; не может проверить спецификацию на наличие ошибок так же эффективно, как если бы сканер работал в режиме по умолчанию. Если &lt;code&gt;&lt;a href=&quot;ct#run_test-1&quot;&gt;ct:run_test/1&lt;/a&gt;&lt;/code&gt; используется для запуска тестов, расслабленный режим сканирования включается кортежем &lt;code&gt;{allow_user_terms,true}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aec8dfaf1d2231e245fe0cd75a270293f3d428b2" translate="yes" xml:space="preserve">
          <source>The user can request a range of characters that are to be considered printable in heuristic detection of strings by the shell and by the formatting functions. This is done by supplying &lt;code&gt;+pc &amp;lt;range&amp;gt;&lt;/code&gt; when starting Erlang.</source>
          <target state="translated">Пользователь может запросить диапазон символов, которые должны считаться печатаемыми при эвристическом обнаружении строк оболочкой и функциями форматирования. Для этого нужно указать &lt;code&gt;+pc &amp;lt;range&amp;gt;&lt;/code&gt; при запуске Erlang.</target>
        </trans-unit>
        <trans-unit id="5ae2400e1fce55a0b4d9b7318948b8627b3d6a40" translate="yes" xml:space="preserve">
          <source>The user can specify a specific group path with parameter &lt;code&gt;group_names_or_paths&lt;/code&gt;. With this type of specification execution of unwanted groups (in otherwise matching paths), and/or the execution of subgroups can be avoided. The command line syntax of the group path is a list of group names in the path, for example:</source>
          <target state="translated">Пользователь может указать конкретный путь к группе с помощью параметра &lt;code&gt;group_names_or_paths&lt;/code&gt; . С помощью этого типа спецификации можно избежать выполнения нежелательных групп (в противном случае совпадающих путей) и / или выполнения подгрупп. Синтаксис командной строки пути к группе - это список имен групп в пути, например:</target>
        </trans-unit>
        <trans-unit id="0130ad65a7625b17e035e835fe6eaf0679e0f246" translate="yes" xml:space="preserve">
          <source>The user can specify configuration data on a different format than key-value tuples in a text file, as described so far. The data can, for example, be read from any files, fetched from the web over HTTP, or requested from a user-specific process. To support this, &lt;code&gt;Common Test&lt;/code&gt; provides a callback module plugin mechanism to handle configuration data.</source>
          <target state="translated">Пользователь может указать данные конфигурации в формате, отличном от формата кортежей &quot;ключ-значение&quot; в текстовом файле, как описано выше. Данные могут, например, быть прочитаны из любых файлов, получены из Интернета через HTTP или запрошены из процесса, специфичного для пользователя. Для поддержки этого &lt;code&gt;Common Test&lt;/code&gt; предоставляет плагин модуля обратного вызова для обработки данных конфигурации.</target>
        </trans-unit>
        <trans-unit id="660461224293f1991c368482cebc005aee961e52" translate="yes" xml:space="preserve">
          <source>The user configures diameter with the identifiers to send at capabilities exchange, along with corresponding dictionaries defining the messages of the applications.</source>
          <target state="translated">Пользователь настраивает диаметр с идентификаторами для отправки при обмене возможностями,а также соответствующие словари,определяющие сообщения приложений.</target>
        </trans-unit>
        <trans-unit id="b475ffe342e790093cd964ba6cc829f6bd45785f" translate="yes" xml:space="preserve">
          <source>The user constructs application-specific messages, but diameter provides failed AVPs in message callbacks. Failed component AVPs are grouped within the relevant Grouped AVPs.</source>
          <target state="translated">Пользователь создает сообщения,специфичные для конкретного приложения,но диаметр обеспечивает отказоустойчивость AVP в ответах на сообщения.Сбойные компоненты AVP группируются в соответствующие сгруппированные AVP.</target>
        </trans-unit>
        <trans-unit id="3591203b72caf861e6110120cbe93c01af2b88a2" translate="yes" xml:space="preserve">
          <source>The user decides whether or not to process a request locally in the request callback from diameter.</source>
          <target state="translated">Пользователь решает,обрабатывать ли запрос локально в обратном вызове по диаметру.</target>
        </trans-unit>
        <trans-unit id="3464961bd356a69bfcff6ac160a461e76a93d25f" translate="yes" xml:space="preserve">
          <source>The user has explicitly cancelled the wait (megaco:cancel/2).</source>
          <target state="translated">Пользователь явно отменил ожидание (megaco:cancel/2).</target>
        </trans-unit>
        <trans-unit id="d18a93e929b37cd21f4c79e7536ff6532ff0f893" translate="yes" xml:space="preserve">
          <source>The user has logged off (the &quot;logoff&quot; message is removed).</source>
          <target state="translated">Пользователь вышел из системы (сообщение &quot;логотип&quot; удалено).</target>
        </trans-unit>
        <trans-unit id="66d08744fcbef8850f22e132fcee2b95959ddf93" translate="yes" xml:space="preserve">
          <source>The user keys directory could be changed with the option &lt;code&gt;&lt;a href=&quot;#type-user_dir_common_option&quot;&gt;user_dir&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Каталог пользовательских ключей можно изменить с помощью опции &lt;code&gt;&lt;a href=&quot;#type-user_dir_common_option&quot;&gt;user_dir&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c9960888cee8c9b6bfc6612c16d696a491bd6e28" translate="yes" xml:space="preserve">
          <source>The user keys directory could be changed with the option &lt;code&gt;&lt;a href=&quot;ssh_file#type-user_dir_common_option&quot;&gt;user_dir&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddf02e29035334a18d18c5e1b94c79095367bd56" translate="yes" xml:space="preserve">
          <source>The user may (for special purposes) create additional nodes with other type tags, using the &lt;code&gt;&lt;a href=&quot;#tree-2&quot;&gt;tree/2&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="translated">Пользователь может (для специальных целей) создавать дополнительные узлы с тегами других типов, используя функцию &lt;code&gt;&lt;a href=&quot;#tree-2&quot;&gt;tree/2&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ddc2e0d09942d83a7b04fe20082be1f80957f4d6" translate="yes" xml:space="preserve">
          <source>The user must also be prepared to receive an abort message:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30f40f2ea6a4143c3ec3b1ecd54ea0fd079d720a" translate="yes" xml:space="preserve">
          <source>The user name of the OS process running the Erlang virtual machine (emulator).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1a184f2287a73fa0e22dbeefc3837ae54223d8d" translate="yes" xml:space="preserve">
          <source>The user name, public key and cryptographic data (a signature) that is sent by the client, are used as follows (some steps left out for clearity):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ee238ea123b1d44a60398d5285952819fc3ede9" translate="yes" xml:space="preserve">
          <source>The user should implement a scanner that segments the input text, and turns it into one or more lists of tokens. Each token should be a tuple containing information about syntactic category, position in the text (e.g. line number), and the actual terminal symbol found in the text: &lt;code&gt;{Category, LineNumber, Symbol}&lt;/code&gt;.</source>
          <target state="translated">Пользователь должен реализовать сканер, который сегментирует вводимый текст и превращает его в один или несколько списков токенов. Каждый токен должен быть кортежем, содержащим информацию о синтаксической категории, позиции в тексте (например, номер строки) и фактический символ терминала, найденный в тексте: &lt;code&gt;{Category, LineNumber, Symbol}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d9c7796fd10aeef2e76370d88ff426dec7a02695" translate="yes" xml:space="preserve">
          <source>The user tag is provided to the user probes triggered by calls top &lt;code&gt;dyntrace:p/{1,2,3,4,5,6,7,8}&lt;/code&gt; as well as probes in the efile_driver. In the future, user tags might be added to more probes.</source>
          <target state="translated">Пользовательский тег предоставляется пользовательским зондам, запускаемым вызовами top &lt;code&gt;dyntrace:p/{1,2,3,4,5,6,7,8}&lt;/code&gt; , а также зондам в efile_driver. В будущем пользовательские теги могут быть добавлены к большему количеству зондов.</target>
        </trans-unit>
        <trans-unit id="935cfbe6393df2b605ae54a72dfb24e180f2b45e" translate="yes" xml:space="preserve">
          <source>The user timetrap function can be used for two things as follows:</source>
          <target state="translated">Функция пользовательского расписания может быть использована для двух целей:</target>
        </trans-unit>
        <trans-unit id="2f2130a51941a7dd2f7d9af37266ecb1c20f0d79" translate="yes" xml:space="preserve">
          <source>The user timetrap function can return a time value after a delay. The effective timetrap time is then the delay time &lt;strong&gt;plus&lt;/strong&gt; the returned time.</source>
          <target state="translated">Пользовательская функция timetrap может возвращать значение времени после задержки. Эффективное время прерывания - это время задержки &lt;strong&gt;плюс&lt;/strong&gt; возвращенное время.</target>
        </trans-unit>
        <trans-unit id="b5ee7bda12decc24125202f276f6922f07234b3a" translate="yes" xml:space="preserve">
          <source>The user(s) register their agents.</source>
          <target state="translated">Пользователь(и)регистрирует своих агентов.</target>
        </trans-unit>
        <trans-unit id="1d94abedc5a45d3a00396f6b9115ee0199e9b2d1" translate="yes" xml:space="preserve">
          <source>The user-defined CPU topology can also be set by passing command-line argument &lt;code&gt;+sct&lt;/code&gt; to &lt;code&gt;erl(1)&lt;/code&gt;.</source>
          <target state="translated">Определяемую пользователем топологию ЦП также можно установить, передав аргумент командной строки &lt;code&gt;+sct&lt;/code&gt; в &lt;code&gt;erl(1)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3eac153a48412697b04bd3f7c3679f6e2cb43d77" translate="yes" xml:space="preserve">
          <source>The user-specific handler can be written to handle special configuration file formats. The parameter can be either file names or configuration strings (the empty list is valid).</source>
          <target state="translated">Пользовательский обработчик может быть написан для работы со специальными форматами конфигурационных файлов.Параметром могут быть как имена файлов,так и строки конфигурации (пустой список действителен).</target>
        </trans-unit>
        <trans-unit id="070ed6c048e93f78c36ea8f0ccfec711d97f3991" translate="yes" xml:space="preserve">
          <source>The user/operator can specify the order at will, and maybe a different execution order is sometimes more relevant or efficient.</source>
          <target state="translated">Пользователь/оператор может указывать ордер по своему усмотрению,и,возможно,другой ордер исполнения иногда более актуален или эффективен.</target>
        </trans-unit>
        <trans-unit id="816667b752baf90b5891d2f5483693ef98e188ca" translate="yes" xml:space="preserve">
          <source>The username used for authentication.</source>
          <target state="translated">Имя пользователя,используемое для аутентификации.</target>
        </trans-unit>
        <trans-unit id="32f031cef47e0932c6309630147b6b75921f94b2" translate="yes" xml:space="preserve">
          <source>The utilities are also suitable to use in system testing on large systems, where other tools have too much impact on the system performance. Some primitive support for sequential tracing is also included, see the &lt;code&gt;&lt;a href=&quot;#advanced&quot;&gt;advanced topics&lt;/a&gt;&lt;/code&gt; section.</source>
          <target state="translated">Утилиты также подходят для тестирования систем в больших системах, где другие инструменты слишком сильно влияют на производительность системы. Также включена некоторая примитивная поддержка последовательной трассировки, см. Раздел &lt;code&gt;&lt;a href=&quot;#advanced&quot;&gt;advanced topics&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1b998cc802660cc78a04365f6fb84a62e62e8e56" translate="yes" xml:space="preserve">
          <source>The utility &lt;code&gt;&lt;a href=&quot;diameterc&quot;&gt;diameterc(1)&lt;/a&gt;&lt;/code&gt; provides an alternate compilation interface.</source>
          <target state="translated">Утилита &lt;code&gt;&lt;a href=&quot;diameterc&quot;&gt;diameterc(1)&lt;/a&gt;&lt;/code&gt; предоставляет альтернативный интерфейс компиляции.</target>
        </trans-unit>
        <trans-unit id="88c9fe090556e5d2d20b460fae9afd89cea9e45c" translate="yes" xml:space="preserve">
          <source>The utility function &lt;code&gt;&lt;a href=&quot;#text_par-2&quot;&gt;text_par/2&lt;/a&gt;&lt;/code&gt; can be used to easily transform a string of text into a &lt;code&gt;par&lt;/code&gt; representation by splitting it into words.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#text_par-2&quot;&gt;text_par/2&lt;/a&gt;&lt;/code&gt; функцию text_par / 2 можно использовать для простого преобразования строки текста в представление &lt;code&gt;par&lt;/code&gt; путем разделения ее на слова.</target>
        </trans-unit>
        <trans-unit id="fd02acb46e123ade0af1cb132c81a7c98e6cbd55" translate="yes" xml:space="preserve">
          <source>The utility module &lt;code&gt;msacc(3)&lt;/code&gt; can be used to more easily analyse these statistics.</source>
          <target state="translated">&lt;code&gt;msacc(3)&lt;/code&gt; модуль msacc (3) может использоваться для более простого анализа этой статистики.</target>
        </trans-unit>
        <trans-unit id="86003c423491838636e87b46780a42310a82d73b" translate="yes" xml:space="preserve">
          <source>The valid configuration parameters are as follows:</source>
          <target state="translated">Действительные параметры конфигурации следующие:</target>
        </trans-unit>
        <trans-unit id="98a22ffb82809edcc4e94af08c6c5c821a27b003" translate="yes" xml:space="preserve">
          <source>The valid values are &lt;code&gt;0&lt;/code&gt; (&quot;normal&quot;) and &lt;code&gt;1&lt;/code&gt; (&quot;stderr&quot;), see &lt;code&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc4254#page/8&quot;&gt;RFC 4254, Section 5.2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fb94796638387a4f1cb0c6ac15343b38548969a" translate="yes" xml:space="preserve">
          <source>The validation fun, &lt;code&gt;Validate&lt;/code&gt;, allows for a more &quot;flexible&quot; validation of the &lt;code&gt;DateAndTime&lt;/code&gt; argument. Whenever the data is found to not follow RFC2579, the fun is called to allow a more &quot;lax&quot; validation. See the &lt;code&gt;&lt;a href=&quot;#vdat&quot;&gt;validate_date_and_time/2&lt;/a&gt;&lt;/code&gt; function for more info on the &lt;code&gt;Validate&lt;/code&gt; fun.</source>
          <target state="translated">&lt;code&gt;DateAndTime&lt;/code&gt; от проверки, &lt;code&gt;Validate&lt;/code&gt; , обеспечивает более &amp;laquo;гибкую&amp;raquo; проверку аргумента DateAndTime . Всякий раз, когда обнаруживается, что данные не соответствуют RFC2579, вызывается забава, чтобы обеспечить более &amp;laquo;слабую&amp;raquo; проверку. См. Функцию &lt;code&gt;&lt;a href=&quot;#vdat&quot;&gt;validate_date_and_time/2&lt;/a&gt;&lt;/code&gt; для получения дополнительной информации о проверке &lt;code&gt;Validate&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="60c703f2c6b10b3e79aabc8eaf2dfdc52607c370" translate="yes" xml:space="preserve">
          <source>The validation fun, &lt;code&gt;Validate&lt;/code&gt;, allows for a more &quot;flexible&quot; validation of the &lt;code&gt;DateAndTime&lt;/code&gt; argument. Whenever the data is found to not follow RFC2579, the fun is called to allow a more &quot;lax&quot; validation. The input to the validation fun looks like this:</source>
          <target state="translated">&lt;code&gt;DateAndTime&lt;/code&gt; от проверки, &lt;code&gt;Validate&lt;/code&gt; , обеспечивает более &amp;laquo;гибкую&amp;raquo; проверку аргумента DateAndTime . Всякий раз, когда обнаруживается, что данные не соответствуют RFC2579, вызывается забава, чтобы обеспечить более &amp;laquo;слабую&amp;raquo; проверку. Входные данные для валидации выглядят так:</target>
        </trans-unit>
        <trans-unit id="58a5e20ed6c2d29e3e861f7702b4763df798e9a1" translate="yes" xml:space="preserve">
          <source>The validity of the options is &lt;strong&gt;not&lt;/strong&gt; checked by the HTTP client they are assumed to be correct and passed on to ssl application and inet driver, which may reject them if they are not correct.</source>
          <target state="translated">Достоверность параметров &lt;strong&gt;не&lt;/strong&gt; проверяется HTTP-клиентом, они считаются правильными и передаются в приложение ssl и драйвер inet, которые могут отклонить их, если они неверны.</target>
        </trans-unit>
        <trans-unit id="247d880cbbfe17329068c2a487e83b52be0b8fd0" translate="yes" xml:space="preserve">
          <source>The validity period of the certificate.</source>
          <target state="translated">Срок действия сертификата.</target>
        </trans-unit>
        <trans-unit id="de095b0c0154458957667b823417f32d9c762772" translate="yes" xml:space="preserve">
          <source>The value (in seconds) must be in the range 10 &amp;lt; X &amp;lt;= 65535.</source>
          <target state="translated">Значение (в секундах) должно быть в диапазоне 10 &amp;lt;X &amp;lt;= 65535.</target>
        </trans-unit>
        <trans-unit id="c7d9f4f2d7422b47b5c88e4d58854e12adae49bd" translate="yes" xml:space="preserve">
          <source>The value &lt;code&gt;-1&lt;/code&gt; in any field means &quot;unknown&quot;, and in most cases it means that the dump was truncated somewhere around this field.</source>
          <target state="translated">Значение &lt;code&gt;-1&lt;/code&gt; в любом поле означает &amp;laquo;неизвестно&amp;raquo; и в большинстве случаев означает, что дамп был усечен где-то вокруг этого поля.</target>
        </trans-unit>
        <trans-unit id="86c20a3a7328e6bc498fe9dc567872d5f84e6318" translate="yes" xml:space="preserve">
          <source>The value &lt;code&gt;extended&lt;/code&gt; means that a special 'process' is also created intended to handle &lt;strong&gt;all&lt;/strong&gt; notifications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebb9639bd59b81ac3f0302e2ea6264dd43e978a9" translate="yes" xml:space="preserve">
          <source>The value &lt;code&gt;random&lt;/code&gt; will cause a random string to be created at each connection attempt. This is to make it a bit more difficult for a malicious peer to find the ssh software brand and version.</source>
          <target state="translated">Значение &lt;code&gt;random&lt;/code&gt; приведет к созданию случайной строки при каждой попытке подключения. Это сделано для того, чтобы злоумышленнику было немного сложнее найти марку и версию программного обеспечения ssh.</target>
        </trans-unit>
        <trans-unit id="59cae5c48ebf4d4c60edc8af8c6900b2f10cdd93" translate="yes" xml:space="preserve">
          <source>The value &lt;code&gt;{random, Nmin, Nmax}&lt;/code&gt; will make a random string with at least &lt;code&gt;Nmin&lt;/code&gt; characters and at most &lt;code&gt;Nmax&lt;/code&gt; characters.</source>
          <target state="translated">Значение &lt;code&gt;{random, Nmin, Nmax}&lt;/code&gt; будет создавать случайную строку, содержащую не менее &lt;code&gt;Nmin&lt;/code&gt; символов и не более &lt;code&gt;Nmax&lt;/code&gt; символов.</target>
        </trans-unit>
        <trans-unit id="cc2e81fd931d300e3783349335314abc90033f4a" translate="yes" xml:space="preserve">
          <source>The value associated with key &lt;code&gt;alpha&lt;/code&gt; is fetched for both arguments using the &lt;code&gt;:=&lt;/code&gt; operator. The other keys in the map are ignored, only the key &lt;code&gt;alpha&lt;/code&gt; is required and checked for.</source>
          <target state="translated">Значение, связанное с ключом &lt;code&gt;alpha&lt;/code&gt; , выбирается для обоих аргументов с помощью оператора &lt;code&gt;:=&lt;/code&gt; . Остальные ключи на карте игнорируются, требуется только &lt;code&gt;alpha&lt;/code&gt; ключа и проверяется.</target>
        </trans-unit>
        <trans-unit id="ae3beea41eb5f49f177e89c9a2690def73d412bd" translate="yes" xml:space="preserve">
          <source>The value associated with this key is used by filters for grouping log events originating from, for example, specific functional areas. See &lt;code&gt;&lt;a href=&quot;logger_filters#domain-2&quot;&gt; logger_filters:domain/2&lt;/a&gt;&lt;/code&gt; for a description of how this field can be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86b0b34c5895cd8049a0c1760924204afc238fc1" translate="yes" xml:space="preserve">
          <source>The value associated with this key is used by filters for grouping log events originating from, for example, specific functional areas. See &lt;code&gt;&lt;a href=&quot;logger_filters#domain-2&quot;&gt;logger_filters:domain/2&lt;/a&gt;&lt;/code&gt; for a description of how this field can be used.</source>
          <target state="translated">Значение, связанное с этим ключом, используется фильтрами для группировки событий журнала, происходящих, например, из определенных функциональных областей. См. &lt;code&gt;&lt;a href=&quot;logger_filters#domain-2&quot;&gt;logger_filters:domain/2&lt;/a&gt;&lt;/code&gt; для описания того, как можно использовать это поле.</target>
        </trans-unit>
        <trans-unit id="8a9b31d1fc7f3b413bcae938dfe03589bb5285a5" translate="yes" xml:space="preserve">
          <source>The value defaults to &lt;code&gt;infinity&lt;/code&gt;.</source>
          <target state="translated">Значение по умолчанию - &lt;code&gt;infinity&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="73cc3165471e18765106ff9988f4618f4de5f7c9" translate="yes" xml:space="preserve">
          <source>The value defined here can be used in several ways. It can, for example, be used as the value in some &lt;code&gt;DEFAULT&lt;/code&gt; component:</source>
          <target state="translated">Определенное здесь значение можно использовать несколькими способами. Его можно, например, использовать как значение в каком-то компоненте &lt;code&gt;DEFAULT&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="00cedad00d133d50963e34c659f0ef80545f6ee4" translate="yes" xml:space="preserve">
          <source>The value denotes a regular expression (see module &lt;code&gt;re&lt;/code&gt;). Tidying will only be applied to those regular files whose names match this pattern. The default value is &lt;code&gt;&quot;.*\\.erl$&quot;&lt;/code&gt;, which matches normal Erlang source file names.</source>
          <target state="translated">Значение обозначает регулярное выражение (см. Модуль &lt;code&gt;re&lt;/code&gt; ). Упорядочение будет применяться только к тем обычным файлам, имена которых соответствуют этому шаблону. Значение по умолчанию - &lt;code&gt;&quot;.*\\.erl$&quot;&lt;/code&gt; , что соответствует обычным именам исходных файлов Erlang.</target>
        </trans-unit>
        <trans-unit id="a7fc7c904bc65fe1f04425c2c4301dd4dfba43f3" translate="yes" xml:space="preserve">
          <source>The value has the form required by section 8.8 of RFC 6733. Ident should be the Origin-Host of the peer from which the message containing the returned value will be sent.</source>
          <target state="translated">Значение имеет форму,требуемую разделом 8.8 RFC 6733.Идентификатором должен быть Origin-Host коллеги,с которого будет отправлено сообщение,содержащее возвращаемое значение.</target>
        </trans-unit>
        <trans-unit id="df5a9468ae2eff2ec8d99706ab1e3ddc685940bb" translate="yes" xml:space="preserve">
          <source>The value is &lt;code&gt;false&lt;/code&gt; if call saving is not active for the process (see &lt;code&gt;&lt;a href=&quot;#process_flag-3&quot;&gt; process_flag/3&lt;/a&gt;&lt;/code&gt;). If call saving is active, a list is returned, in which the last element is the most recent called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="565bd9ff9980988d34e45f60f24a9df4493a532c" translate="yes" xml:space="preserve">
          <source>The value is &lt;code&gt;false&lt;/code&gt; if call saving is not active for the process (see &lt;code&gt;&lt;a href=&quot;#process_flag-3&quot;&gt;process_flag/3&lt;/a&gt;&lt;/code&gt;). If call saving is active, a list is returned, in which the last element is the most recent called.</source>
          <target state="translated">Значение &lt;code&gt;false&lt;/code&gt; , если сохранение вызова неактивно для процесса (см. &lt;code&gt;&lt;a href=&quot;#process_flag-3&quot;&gt;process_flag/3&lt;/a&gt;&lt;/code&gt; ). Если сохранение вызовов активно, возвращается список, в котором последний элемент вызывается последним.</target>
        </trans-unit>
        <trans-unit id="fca5756bcf0742c5fb8a83c510ae9ce36b623343" translate="yes" xml:space="preserve">
          <source>The value is a &lt;code&gt;boolean()&lt;/code&gt;. The value &lt;code&gt;true&lt;/code&gt; will make the client accept any unknown Host Key without any user interaction. The value &lt;code&gt;false&lt;/code&gt; preserves the default behaviour of asking the user on stdio.</source>
          <target state="translated">Значение - &lt;code&gt;boolean()&lt;/code&gt; . Значение &lt;code&gt;true&lt;/code&gt; заставит клиента принять любой неизвестный ключ хоста без какого-либо взаимодействия с пользователем. Значение &lt;code&gt;false&lt;/code&gt; сохраняет поведение по умолчанию - запрос пользователя на stdio.</target>
        </trans-unit>
        <trans-unit id="4b03c47ccab46f2579d8f24abc755f87cc416f2a" translate="yes" xml:space="preserve">
          <source>The value is a list of pairs, associating tuples &lt;code&gt;{Module, Name, Arity}&lt;/code&gt; with tuples &lt;code&gt;{NewModule, NewName}&lt;/code&gt;, specifying renamings of calls to remote functions. By default, the value is the empty list.</source>
          <target state="translated">Значение представляет собой список пар, связывающих кортежи &lt;code&gt;{Module, Name, Arity}&lt;/code&gt; с кортежами &lt;code&gt;{NewModule, NewName}&lt;/code&gt; , определяющих переименование вызовов удаленных функций. По умолчанию значение - пустой список.</target>
        </trans-unit>
        <trans-unit id="1df1db1ba1c8748b25a7c5b626dd8804fd835229" translate="yes" xml:space="preserve">
          <source>The value is formed from the sftp error codes in the protocol-level responses as defined in &lt;code&gt;&lt;a href=&quot;https://tools.ietf.org/id/draft-ietf-secsh-filexfer-13.txt&quot;&gt;draft-ietf-secsh-filexfer-13.txt&lt;/a&gt;&lt;/code&gt; section 9.1.</source>
          <target state="translated">Значение формируется из кодов ошибок &lt;code&gt;&lt;a href=&quot;https://tools.ietf.org/id/draft-ietf-secsh-filexfer-13.txt&quot;&gt;draft-ietf-secsh-filexfer-13.txt&lt;/a&gt;&lt;/code&gt; уровне протокола, как определено в разделе 9.1 draft-ietf-secsh-filexfer-13.txt .</target>
        </trans-unit>
        <trans-unit id="148473653e344b665aad6d10ff3c1fcf44e7835b" translate="yes" xml:space="preserve">
          <source>The value is set when the handler is added, and it cannot be changed in runtime.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd41f86d28c143add491ec9132e29dfc8b19621e" translate="yes" xml:space="preserve">
          <source>The value list is a list of indexes for the subpatterns to return, where index 0 is for all of the pattern, and 1 is for the first explicit capturing subpattern in the regular expression, and so on. When using named captured subpatterns (see below) in the regular expression, one can use &lt;code&gt;atom()&lt;/code&gt;s or &lt;code&gt;string()&lt;/code&gt;s to specify the subpatterns to be returned. For example, consider the regular expression:</source>
          <target state="translated">Список значений - это список индексов для возвращаемых подшаблонов, где индекс 0 предназначен для всего шаблона, а 1 - для первого явного подшаблона захвата в регулярном выражении и т. Д. При использовании именованных захваченных подшаблонов (см. Ниже) в регулярном выражении можно использовать &lt;code&gt;atom()&lt;/code&gt; s или &lt;code&gt;string()&lt;/code&gt; s для указания возвращаемых подшаблонов. Например, рассмотрим регулярное выражение:</target>
        </trans-unit>
        <trans-unit id="c81f48007ff0ed091ec4764a41dbf0e172a8f0bb" translate="yes" xml:space="preserve">
          <source>The value must be a function with arity 1, returning &lt;code&gt;{Format,Args}&lt;/code&gt;, and it will be called with a report as only argument.</source>
          <target state="translated">Значение должно быть функцией с арностью 1, возвращающей &lt;code&gt;{Format,Args}&lt;/code&gt; , и она будет вызываться с отчетом в качестве единственного аргумента.</target>
        </trans-unit>
        <trans-unit id="07ff5095c8d8cce91ccc3bf32364fcee41686369" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;&lt;a href=&quot;#version_management&quot;&gt; ERL_DRV_EXTENDED_MAJOR_VERSION&lt;/a&gt;&lt;/code&gt; when the runtime system was compiled. This value is the same as the value of &lt;code&gt;&lt;a href=&quot;#version_management&quot;&gt; ERL_DRV_EXTENDED_MAJOR_VERSION&lt;/a&gt;&lt;/code&gt; used when compiling the driver; otherwise the runtime system would have refused to load the driver.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4212c98e758e516a6abcce4b67d7189dbcf1c3f9" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;&lt;a href=&quot;#version_management&quot;&gt; ERL_DRV_EXTENDED_MINOR_VERSION&lt;/a&gt;&lt;/code&gt; when the runtime system was compiled. This value can differ from the value of &lt;code&gt;&lt;a href=&quot;#version_management&quot;&gt; ERL_DRV_EXTENDED_MINOR_VERSION&lt;/a&gt;&lt;/code&gt; used when compiling the driver.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e234819107a6b5dcfa3fe173976c85b1ea1b28f9" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;&lt;a href=&quot;#version_management&quot;&gt;ERL_DRV_EXTENDED_MAJOR_VERSION&lt;/a&gt;&lt;/code&gt; when the runtime system was compiled. This value is the same as the value of &lt;code&gt;&lt;a href=&quot;#version_management&quot;&gt;ERL_DRV_EXTENDED_MAJOR_VERSION&lt;/a&gt;&lt;/code&gt; used when compiling the driver; otherwise the runtime system would have refused to load the driver.</source>
          <target state="translated">Значение &lt;code&gt;&lt;a href=&quot;#version_management&quot;&gt;ERL_DRV_EXTENDED_MAJOR_VERSION&lt;/a&gt;&lt;/code&gt; при компиляции системы времени выполнения. Это значение совпадает со значением &lt;code&gt;&lt;a href=&quot;#version_management&quot;&gt;ERL_DRV_EXTENDED_MAJOR_VERSION&lt;/a&gt;&lt;/code&gt; , используемым при компиляции драйвера; в противном случае исполняющая система отказалась бы загрузить драйвер.</target>
        </trans-unit>
        <trans-unit id="116150239ed1360f1b36349687371da72b694bcd" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;&lt;a href=&quot;#version_management&quot;&gt;ERL_DRV_EXTENDED_MINOR_VERSION&lt;/a&gt;&lt;/code&gt; when the runtime system was compiled. This value can differ from the value of &lt;code&gt;&lt;a href=&quot;#version_management&quot;&gt;ERL_DRV_EXTENDED_MINOR_VERSION&lt;/a&gt;&lt;/code&gt; used when compiling the driver.</source>
          <target state="translated">Значение &lt;code&gt;&lt;a href=&quot;#version_management&quot;&gt;ERL_DRV_EXTENDED_MINOR_VERSION&lt;/a&gt;&lt;/code&gt; при компиляции системы времени выполнения. Это значение может отличаться от значения &lt;code&gt;&lt;a href=&quot;#version_management&quot;&gt;ERL_DRV_EXTENDED_MINOR_VERSION&lt;/a&gt;&lt;/code&gt; , используемого при компиляции драйвера.</target>
        </trans-unit>
        <trans-unit id="78be37cd91f4cf995f8b06a4daace135c812602c" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;ERL_NIF_MAJOR_VERSION&lt;/code&gt; when the runtime system was compiled.</source>
          <target state="translated">Значение &lt;code&gt;ERL_NIF_MAJOR_VERSION&lt;/code&gt; при компиляции системы времени выполнения.</target>
        </trans-unit>
        <trans-unit id="0b2195f8068d2a10ede4ea4cc9fcbf6ff4d98d21" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;ERL_NIF_MINOR_VERSION&lt;/code&gt; when the runtime system was compiled.</source>
          <target state="translated">Значение &lt;code&gt;ERL_NIF_MINOR_VERSION&lt;/code&gt; при компиляции системы времени выполнения.</target>
        </trans-unit>
        <trans-unit id="b118746e3fc7bb9edb78696fb5442fd44cb5a3e1" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;Misc&lt;/code&gt; varies for different types of processes, for example:</source>
          <target state="translated">Значение &lt;code&gt;Misc&lt;/code&gt; варьируется для разных типов процессов, например:</target>
        </trans-unit>
        <trans-unit id="8dae040f4f2546c55f00cef77a0cb74993dea2c6" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;Size&lt;/code&gt; multiplied with the unit gives the number of bits. A segment of type &lt;code&gt;binary&lt;/code&gt; must have a size that is evenly divisible by 8.</source>
          <target state="translated">Значение &lt;code&gt;Size&lt;/code&gt; , умноженное на единицу, дает количество бит. Сегмент &lt;code&gt;binary&lt;/code&gt; типа должен иметь размер, который делится на 8.</target>
        </trans-unit>
        <trans-unit id="bed25a5020d26519961367afdf71569ec20e8253" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;Size&lt;/code&gt; multiplied with the unit gives the number of bits. A segment of type &lt;code&gt;binary&lt;/code&gt; must have a size that is evenly divisible by 8. For a segment of type &lt;code&gt;float&lt;/code&gt; the size must be either 64 or 32.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="780ca2b28783a99a4c631093f06c672e54bdfc8a" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;Size&lt;/code&gt; specifies the size of the segment in units (see below). The default value depends on the type (see below):</source>
          <target state="translated">Значение &lt;code&gt;Size&lt;/code&gt; указывает размер сегмента в единицах (см. Ниже). Значение по умолчанию зависит от типа (см. Ниже):</target>
        </trans-unit>
        <trans-unit id="b1854e31941d7fbfcb3749a7e6c4457829e3447d" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;State&lt;/code&gt; varies for different types of processes, as follows:</source>
          <target state="translated">Значение &lt;code&gt;State&lt;/code&gt; различается для разных типов процессов, а именно:</target>
        </trans-unit>
        <trans-unit id="67326e380fdef2e7ca1cffaffc1a499d8945109f" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;engine_id&lt;/code&gt; is a string, which should have a very specific structure. See RFC 2271/2571 for details.</source>
          <target state="translated">Значение &lt;code&gt;engine_id&lt;/code&gt; - это строка, которая должна иметь очень конкретную структуру. Подробнее см. RFC 2271/2571.</target>
        </trans-unit>
        <trans-unit id="67a488abfbc3355615ef1fdf9842c10e39f374ee" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;file&lt;/code&gt; overrides the value of &lt;code&gt;file&lt;/code&gt; as defined in the &lt;code&gt;.app&lt;/code&gt; file:</source>
          <target state="translated">Значение &lt;code&gt;file&lt;/code&gt; переопределяет значение &lt;code&gt;file&lt;/code&gt; как определено в файле &lt;code&gt;.app&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="ce398bd65bb25721ffa1a8a7e0185e8682912540" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;intAgentTransports&lt;/code&gt; is a list of &lt;code&gt;{Domain, Addr}&lt;/code&gt; tuples, where &lt;code&gt;Domain&lt;/code&gt; is either &lt;code&gt;transportDomainUdpIpv4&lt;/code&gt; or &lt;code&gt;transportDomainUdpIpv6&lt;/code&gt;, and &lt;code&gt;Addr&lt;/code&gt; is the address in the domain. &lt;code&gt;Addr&lt;/code&gt; can be specified either as an &lt;code&gt;IpAddr&lt;/code&gt; or as an &lt;code&gt;{IpAddr, IpPort}&lt;/code&gt; tuple. &lt;code&gt;IpAddr&lt;/code&gt; is either a regular Erlang/OTP &lt;code&gt;ip_address()&lt;/code&gt; or a traditional SNMP integer list and &lt;code&gt;IpPort&lt;/code&gt; is an integer.</source>
          <target state="translated">Значение &lt;code&gt;intAgentTransports&lt;/code&gt; - это список кортежей &lt;code&gt;{Domain, Addr}&lt;/code&gt; , где &lt;code&gt;Domain&lt;/code&gt; - это &lt;code&gt;transportDomainUdpIpv4&lt;/code&gt; или &lt;code&gt;transportDomainUdpIpv6&lt;/code&gt; , а &lt;code&gt;Addr&lt;/code&gt; - адрес в домене. &lt;code&gt;Addr&lt;/code&gt; можно указать либо как &lt;code&gt;IpAddr&lt;/code&gt; , либо как &lt;code&gt;{IpAddr, IpPort}&lt;/code&gt; . &lt;code&gt;IpAddr&lt;/code&gt; - это либо обычный &lt;code&gt;ip_address()&lt;/code&gt; Erlang / OTP, либо традиционный список целых чисел SNMP, а &lt;code&gt;IpPort&lt;/code&gt; - целое число.</target>
        </trans-unit>
        <trans-unit id="fa552c79540af3ff0c608c82bebe09aa87d449b9" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;parent_value&lt;/code&gt; is the value returned by &lt;code&gt;ParentFun&lt;/code&gt;, or &lt;code&gt;undefined&lt;/code&gt; if there is no &lt;code&gt;ParentFun&lt;/code&gt;. &lt;code&gt;ParentFun&lt;/code&gt; is called once just before the call of &lt;code&gt;PreFun&lt;/code&gt; in the context of the process calling &lt;code&gt;&lt;a href=&quot;#eval-1&quot;&gt;eval/1,2&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#fold-3&quot;&gt;fold/3,4&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;#cursor-1&quot;&gt;cursor/1,2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Значение &lt;code&gt;parent_value&lt;/code&gt; - это значение, возвращаемое &lt;code&gt;ParentFun&lt;/code&gt; , или &lt;code&gt;undefined&lt;/code&gt; , если &lt;code&gt;ParentFun&lt;/code&gt; не существует . &lt;code&gt;ParentFun&lt;/code&gt; вызывается один раз непосредственно перед вызовом &lt;code&gt;PreFun&lt;/code&gt; в контексте процесса, вызывающего &lt;code&gt;&lt;a href=&quot;#eval-1&quot;&gt;eval/1,2&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#fold-3&quot;&gt;fold/3,4&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;#cursor-1&quot;&gt;cursor/1,2&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="403588e32c3c599137f65e61edac93c0adc811e6" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;snmpEngineID&lt;/code&gt; is a string, which for a deployed agent should have a very specific structure. See RFC 2271/2571 for details.</source>
          <target state="translated">Значение &lt;code&gt;snmpEngineID&lt;/code&gt; - это строка, которая для развернутого агента должна иметь очень конкретную структуру. Подробнее см. RFC 2271/2571.</target>
        </trans-unit>
        <trans-unit id="39576763fb2878e58995adcb19edf7b1f8b5b52e" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;stop_fun&lt;/code&gt; is a nullary fun that deletes the cursor if called from the parent, or &lt;code&gt;undefined&lt;/code&gt; if there is no cursor.</source>
          <target state="translated">Значение &lt;code&gt;stop_fun&lt;/code&gt; - это пустая игра, которая удаляет курсор, если вызывается из родительского объекта , или &lt;code&gt;undefined&lt;/code&gt; , если курсора нет.</target>
        </trans-unit>
        <trans-unit id="bbda166cbb0a64342130a713cafa3ff8a579278c" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;tc_group_properties&lt;/code&gt; is a list of status tuples, each with the key &lt;code&gt;ok&lt;/code&gt;, &lt;code&gt;skipped&lt;/code&gt;, and &lt;code&gt;failed&lt;/code&gt;. The value of a status tuple is a list with names of test cases that have been executed with the corresponding status as result.</source>
          <target state="translated">Значение &lt;code&gt;tc_group_properties&lt;/code&gt; - это список кортежей состояния, каждый из которых имеет ключ &lt;code&gt;ok&lt;/code&gt; , &lt;code&gt;skipped&lt;/code&gt; и &lt;code&gt;failed&lt;/code&gt; . Значение кортежа состояния - это список с именами тестовых примеров, которые были выполнены с соответствующим статусом в качестве результата.</target>
        </trans-unit>
        <trans-unit id="c90e20096422723556a7637012d02aa52ba6cd06" translate="yes" xml:space="preserve">
          <source>The value of a configuration parameter is retrieved by calling &lt;code&gt;application:get_env/1,2&lt;/code&gt;.</source>
          <target state="translated">Значение параметра конфигурации можно получить, вызвав &lt;code&gt;application:get_env/1,2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0e674f5f0ae9761a28b0e34a6e1578f6940f7307" translate="yes" xml:space="preserve">
          <source>The value of a field in a record can be an instance of a record. Retrieval of nested data can be done stepwise, or in a single step, as shown in the following example:</source>
          <target state="translated">Значение поля в записи может быть экземпляром записи.Извлечение вложенных данных может быть выполнено пошагово или за один шаг,как показано в следующем примере:</target>
        </trans-unit>
        <trans-unit id="090fd2fb5e0fd0eb93688d1bfcea8e341fe24db7" translate="yes" xml:space="preserve">
          <source>The value of option &lt;code id=&quot;key_equality&quot;&gt;key_equality&lt;/code&gt; is to be &lt;code&gt;'=:='&lt;/code&gt; if the table considers two keys equal if they match, and to be &lt;code&gt;'=='&lt;/code&gt; if two keys are equal if they compare equal. Defaults to &lt;code&gt;'=:='&lt;/code&gt;.</source>
          <target state="translated">Значение опции &lt;code id=&quot;key_equality&quot;&gt;key_equality&lt;/code&gt; должно быть &lt;code&gt;'=:='&lt;/code&gt; , если таблица считает два ключа равными, если они совпадают, и быть &lt;code&gt;'=='&lt;/code&gt; , если два ключа равны, если они сравниваются равными. По умолчанию &lt;code&gt;'=:='&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8b5f4463cd58d2c1d9f4f3e85881555f2a7d602d" translate="yes" xml:space="preserve">
          <source>The value of the &lt;code&gt;Parserfile&lt;/code&gt; option stripped of the &lt;code&gt;.erl&lt;/code&gt; extension is used by Yecc as the module name of the generated parser file.</source>
          <target state="translated">Значение &lt;code&gt;Parserfile&lt;/code&gt; опции Лишенный &lt;code&gt;.erl&lt;/code&gt; расширения используется Yecc в качестве имени модуля генерируемого файла анализатора.</target>
        </trans-unit>
        <trans-unit id="2c64d7956fe51b588938aacaa6f88fb7a9310598" translate="yes" xml:space="preserve">
          <source>The value of the &lt;code&gt;closure&lt;/code&gt; operator (the &lt;code&gt;digraph&lt;/code&gt; representation) is represented by the atom &lt;code&gt;'closure()'&lt;/code&gt;.</source>
          <target state="translated">Значение оператора &lt;code&gt;closure&lt;/code&gt; ( представление &lt;code&gt;digraph&lt;/code&gt; ) представлено атомом &lt;code&gt;'closure()'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="22be0277bd691cf393301070a38cd39e17abb844" translate="yes" xml:space="preserve">
          <source>The value of the &lt;code&gt;mod&lt;/code&gt; key of the including application must be set to &lt;code&gt;{application_starter,[Module,StartArgs]}&lt;/code&gt;, where &lt;code&gt;Module&lt;/code&gt; as usual is the application callback module. &lt;code&gt;StartArgs&lt;/code&gt; is a term provided as argument to the callback function &lt;code&gt;Module:start/2&lt;/code&gt;:</source>
          <target state="translated">Значение ключа &lt;code&gt;mod&lt;/code&gt; &lt;code&gt;{application_starter,[Module,StartArgs]}&lt;/code&gt; приложения должно быть установлено на {application_starter, [Module, StartArgs]} , где &lt;code&gt;Module&lt;/code&gt; , как обычно, является модулем обратного вызова приложения. &lt;code&gt;StartArgs&lt;/code&gt; - это термин, предоставляемый в качестве аргумента функции обратного вызова &lt;code&gt;Module:start/2&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="da373a852b7bee0733084683f1b87c03b30e88ac" translate="yes" xml:space="preserve">
          <source>The value of the &lt;code&gt;native&lt;/code&gt; time unit gives you more or less no information about the quality of time values. It sets a limit for the &lt;code&gt;&lt;a href=&quot;time_correction#Time_Resolution&quot;&gt; resolution&lt;/a&gt;&lt;/code&gt; and for the &lt;code&gt;&lt;a href=&quot;time_correction#Time_Precision&quot;&gt; precision&lt;/a&gt;&lt;/code&gt; of time values, but it gives no information about the &lt;code&gt;&lt;a href=&quot;time_correction#Time_Accuracy&quot;&gt; accuracy&lt;/a&gt;&lt;/code&gt; of time values. The resolution of the &lt;code&gt;native&lt;/code&gt; time unit and the resolution of time values can differ significantly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1d24fa6cc650f3b91539b4d964f2dd68411a599" translate="yes" xml:space="preserve">
          <source>The value of the &lt;code&gt;native&lt;/code&gt; time unit gives you more or less no information about the quality of time values. It sets a limit for the &lt;code&gt;&lt;a href=&quot;time_correction#Time_Resolution&quot;&gt;resolution&lt;/a&gt;&lt;/code&gt; and for the &lt;code&gt;&lt;a href=&quot;time_correction#Time_Precision&quot;&gt;precision&lt;/a&gt;&lt;/code&gt; of time values, but it gives no information about the &lt;code&gt;&lt;a href=&quot;time_correction#Time_Accuracy&quot;&gt;accuracy&lt;/a&gt;&lt;/code&gt; of time values. The resolution of the &lt;code&gt;native&lt;/code&gt; time unit and the resolution of time values can differ significantly.</source>
          <target state="translated">Значение &lt;code&gt;native&lt;/code&gt; единицы времени не дает вам более или менее никакой информации о качестве значений времени. Он устанавливает предел &lt;code&gt;&lt;a href=&quot;time_correction#Time_Resolution&quot;&gt;resolution&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;time_correction#Time_Precision&quot;&gt;precision&lt;/a&gt;&lt;/code&gt; значений времени, но не дает информации о &lt;code&gt;&lt;a href=&quot;time_correction#Time_Accuracy&quot;&gt;accuracy&lt;/a&gt;&lt;/code&gt; значений времени. Разрешение &lt;code&gt;native&lt;/code&gt; единицы времени и разрешение значений времени могут значительно различаться.</target>
        </trans-unit>
        <trans-unit id="75115f0cbc11f2e0c976711bd383faef47f72f73" translate="yes" xml:space="preserve">
          <source>The value of the Kernel configuration parameter &lt;code&gt;logger&lt;/code&gt; is a list of tuples. It is possible to write the term on the command line when starting an erlang node, but as the term grows, a better approach is to use the system configuration file. See the &lt;code&gt;&lt;a href=&quot;config&quot;&gt;config(4)&lt;/a&gt;&lt;/code&gt; manual page for more information about this file.</source>
          <target state="translated">Значение &lt;code&gt;logger&lt;/code&gt; параметров конфигурации ядра - это список кортежей. Можно написать термин в командной строке при запуске узла erlang, но по мере роста термина лучше использовать файл конфигурации системы. См. Страницу руководства &lt;code&gt;&lt;a href=&quot;config&quot;&gt;config(4)&lt;/a&gt;&lt;/code&gt; для получения дополнительной информации об этом файле.</target>
        </trans-unit>
        <trans-unit id="096809c94755b1b48047ae78701c25d723875bee" translate="yes" xml:space="preserve">
          <source>The value of this parameter is used as the &lt;code&gt;offset&lt;/code&gt; option to &lt;code&gt; calendar:system_time_to_rcf3339/2&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ed44d3d955ffacf489b8abf33f5d265d4032122" translate="yes" xml:space="preserve">
          <source>The value of this parameter is used as the &lt;code&gt;offset&lt;/code&gt; option to &lt;code&gt;calendar:system_time_to_rcf3339/2&lt;/code&gt;.</source>
          <target state="translated">Значение этого параметра используется как опция &lt;code&gt;offset&lt;/code&gt; для &lt;code&gt;calendar:system_time_to_rcf3339/2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="de235421fccf5bce601796cc084376b482bb1b5e" translate="yes" xml:space="preserve">
          <source>The value of this parameter is used as the &lt;code&gt;time_designator&lt;/code&gt; option to &lt;code&gt; calendar:system_time_to_rcf3339/2&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c25e0afe475bdf7bd456a401767e588d0dff287" translate="yes" xml:space="preserve">
          <source>The value of this parameter is used as the &lt;code&gt;time_designator&lt;/code&gt; option to &lt;code&gt;calendar:system_time_to_rcf3339/2&lt;/code&gt;.</source>
          <target state="translated">Значение этого параметра используется как параметр &lt;code&gt;time_designator&lt;/code&gt; для &lt;code&gt;calendar:system_time_to_rcf3339/2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fcf4c591c4a3e4e565b4ce6c5bc397552958d5be" translate="yes" xml:space="preserve">
          <source>The value of this parameter overrides the parameter with the same name on application level.</source>
          <target state="translated">Значение этого параметра перекрывает одноименный параметр на прикладном уровне.</target>
        </trans-unit>
        <trans-unit id="5f26c290284005b85aff4a14161e0e2b51659761" translate="yes" xml:space="preserve">
          <source>The value of this parameter overrides the parameter with the same name on system level.</source>
          <target state="translated">Значение этого параметра переопределяет одноименный параметр на системном уровне.</target>
        </trans-unit>
        <trans-unit id="afeb557b1f15dc186755d5f00deaf5e3432d37f3" translate="yes" xml:space="preserve">
          <source>The value range stated at the top of this function description is technically correct, but &lt;code&gt;0.0 =&amp;lt; X &amp;lt; 1.0&lt;/code&gt; is a better description of the generated numbers' statistical distribution. Except that exactly 0.0 is never returned, which is not possible to observe statistically.</source>
          <target state="translated">Диапазон значений, указанный в верхней части этого описания функции, технически правильный, но &lt;code&gt;0.0 =&amp;lt; X &amp;lt; 1.0&lt;/code&gt; - лучшее описание статистического распределения сгенерированных чисел. За исключением того, что ровно 0,0 никогда не возвращается, что невозможно наблюдать статистически.</target>
        </trans-unit>
        <trans-unit id="f7e9882005855e83068faaf2ba230799c0a1530e" translate="yes" xml:space="preserve">
          <source>The value returned from &lt;code&gt;erts_thr_progress_later()&lt;/code&gt; equals the, by this thread, latest confirmed value plus two. The global value may be latest confirmed value or latest confirmed value minus one. In order to be certain that all other managed threads actually will call &lt;code&gt;erts_thr_progress_update()&lt;/code&gt; at least once before we reach the value returned from &lt;code&gt;erts_thr_progress_later()&lt;/code&gt;, the global counter plus one is not enough. This since all other threads may already have confirmed current global value plus one at the time when we call &lt;code&gt;erts_thr_progress_later()&lt;/code&gt;. They are however guaranteed not to have confirmed global value plus two at this time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de293b0684a913e1bf7ebfb80ee4f6ab7675b8bf" translate="yes" xml:space="preserve">
          <source>The value returned is the number of seconds since 19680120T031408Z, the first value that can be encoded as a Diameter &lt;code&gt;&lt;code&gt;&lt;a href=&quot;diameter_dict#DATA_TYPES&quot;&gt;Time()&lt;/a&gt;&lt;/code&gt;&lt;/code&gt;, at the time the diameter application was started.</source>
          <target state="translated">Возвращаемое значение представляет собой количество секунд с 19680120T031408Z, первого значения, которое может быть закодировано как время диаметра &lt;code&gt;&lt;code&gt;&lt;a href=&quot;diameter_dict#DATA_TYPES&quot;&gt;Time()&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; , на момент запуска приложения диаметра.</target>
        </trans-unit>
        <trans-unit id="a55ba7f90cd067fd29a372ba9492df0943f53a10" translate="yes" xml:space="preserve">
          <source>The value specifies a list of source files to be merged with the file being compiled; cf. &lt;code&gt;merge_files/4&lt;/code&gt;.</source>
          <target state="translated">Значение указывает список исходных файлов, которые нужно объединить с компилируемым файлом; ср &lt;code&gt;merge_files/4&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d9a745307527128e1be0119641ffa2f422dcd359" translate="yes" xml:space="preserve">
          <source>The value(s) correspond to the currently active socket &lt;code&gt;&lt;a href=&quot;#type-socket_setopt&quot;&gt;options&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;inet#option-recvtos&quot;&gt;recvtos&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;inet#option-recvtclass&quot;&gt;recvtclass&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;inet#option-recvttl&quot;&gt;recvttl&lt;/a&gt;&lt;/code&gt;, or for a single send operation the option(s) to override the currently active socket option(s).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f03a18e612b75547971d666854d8f1114a5bb61" translate="yes" xml:space="preserve">
          <source>The values encoded in the fields of generated records depends on the type and number of times the AVP can occur. In particular, an AVP which is specified as occurring exactly once is encoded as a value of the AVP's type while an AVP with any other specification is encoded as a list of values of the AVP's type. The AVP's type is as specified in the AVP definition, the RFC 6733 types being described below.</source>
          <target state="translated">Значения,закодированные в полях генерируемых записей,зависят от типа и количества раз,когда может произойти AVP.В частности,AVP,которая указана как встречающаяся ровно один раз,кодируется как значение типа AVP,в то время как AVP с любой другой спецификацией кодируется как список значений типа AVP.Тип AVP соответствует определению AVP,типы RFC 6733 описаны ниже.</target>
        </trans-unit>
        <trans-unit id="28cbef0507c54b3b51d13679291493de8c4ec6f1" translate="yes" xml:space="preserve">
          <source>The values in the &lt;code&gt;.app&lt;/code&gt; file and the values in a system configuration file can be overridden directly from the command line:</source>
          <target state="translated">Значения в файле &lt;code&gt;.app&lt;/code&gt; и значения в файле конфигурации системы можно переопределить непосредственно из командной строки:</target>
        </trans-unit>
        <trans-unit id="25131865afbeb61db1691607b17034d98faf548c" translate="yes" xml:space="preserve">
          <source>The values in the &lt;code&gt;.app&lt;/code&gt; file can be overridden by values in a &lt;strong&gt;system configuration file&lt;/strong&gt;. This is a file that contains configuration parameters for relevant applications:</source>
          <target state="translated">Значения в файле &lt;code&gt;.app&lt;/code&gt; можно переопределить значениями в &lt;strong&gt;файле конфигурации системы&lt;/strong&gt; . Это файл, содержащий параметры конфигурации для соответствующих приложений:</target>
        </trans-unit>
        <trans-unit id="626a57e5be3f05ed3f7f8f360fb873aeecee8e88" translate="yes" xml:space="preserve">
          <source>The values list can specify indexes or names not present in the regular expression, in which case the return values vary depending on the type. If the type is &lt;code&gt;index&lt;/code&gt;, the tuple &lt;code&gt;{-1,0}&lt;/code&gt; is returned for values with no corresponding subpattern in the regular expression, but for the other types (&lt;code&gt;binary&lt;/code&gt; and &lt;code&gt;list&lt;/code&gt;), the values are the empty binary or list, respectively.</source>
          <target state="translated">В списке значений могут быть указаны индексы или имена, отсутствующие в регулярном выражении, и в этом случае возвращаемые значения зависят от типа. Если тип является &lt;code&gt;index&lt;/code&gt; , кортеж &lt;code&gt;{-1,0}&lt;/code&gt; возвращается для значений без соответствующего подшаблона в регулярном выражении, но для других типов ( &lt;code&gt;binary&lt;/code&gt; и &lt;code&gt;list&lt;/code&gt; ) значения являются пустым двоичным кодом или списком, соответственно.</target>
        </trans-unit>
        <trans-unit id="98c64e5c6439b461a184b2c5ad5e2ae137e1bafa" translate="yes" xml:space="preserve">
          <source>The values of L used in the tree is a dense range from &lt;code&gt;N&lt;/code&gt; to &lt;code&gt;Max - 1&lt;/code&gt;, where &lt;code&gt;N =&amp;lt; Max =&amp;lt; N + size(Tree)&lt;/code&gt;. Note that it is possible that no labels are used at all, i.e., &lt;code&gt;N = Max&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="863d5cefc2b644473a83e6d5a4a11ff192199273" translate="yes" xml:space="preserve">
          <source>The values of each ASN.1 type have their own representation in Erlang, as described in the following sections. Users must provide these values for encoding according to the representation, as shown in the following example:</source>
          <target state="translated">Значения каждого типа ASN.1 имеют свое собственное представление на Erlang,как это описано в следующих разделах.Пользователи должны предоставить эти значения для кодирования в соответствии с представлением,как показано в следующем примере:</target>
        </trans-unit>
        <trans-unit id="3cda52f885cae0f363921f91bfa5571c49510a4d" translate="yes" xml:space="preserve">
          <source>The values of the largest multiblock carrier size (&lt;code&gt;&lt;a href=&quot;#M_lmbcs&quot;&gt;lmbcs&lt;/a&gt;&lt;/code&gt;)</source>
          <target state="translated">Значения наибольшего размера мультиблочной несущей ( &lt;code&gt;&lt;a href=&quot;#M_lmbcs&quot;&gt;lmbcs&lt;/a&gt;&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="dcd3ad0ab905a987c601beb85b07dfe07ff7ed75" translate="yes" xml:space="preserve">
          <source>The values of the previously listed thresholds can be specified by the user. This way, a handler can be configured to, for example, not drop or flush messages unless the message queue length of the handler process grows extremely large. Notice that large amounts of memory can be required for the node under such circumstances. Another example of user configuration is when, for performance reasons, the client processes must never be blocked by synchronous log requests. It is possible, perhaps, that dropping or flushing events is still acceptable, since it does not affect the performance of the client processes sending the log events.</source>
          <target state="translated">Значения ранее перечисленных порогов могут быть заданы пользователем.Таким образом,обработчик может быть настроен,например,на то,чтобы не бросать или не смывать сообщения,если только длина очереди сообщений обработчика не увеличивается до чрезвычайно больших размеров.Обратите внимание,что в таких условиях для узла может потребоваться большой объем памяти.Другим примером настройки пользователя является ситуация,когда по причинам производительности клиентские процессы никогда не должны блокироваться синхронными запросами лога.Возможно,что события падения или промывки все еще допустимы,так как это не влияет на производительность клиентских процессов,посылающих лог-события.</target>
        </trans-unit>
        <trans-unit id="98636015bbae4c3fb1d161c6f8cb32205bc5b72f" translate="yes" xml:space="preserve">
          <source>The values of unused bits are disregarded and does not need to be cleared.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b7f02eea975023ab88f97c824c6cf6ba208bfb2" translate="yes" xml:space="preserve">
          <source>The values of unused bits in the first and last byte are undefined and cannot be relied on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20d445c310ac867e11827b280d08f4096d3c3c12" translate="yes" xml:space="preserve">
          <source>The values stored when &lt;code&gt;put&lt;/code&gt; is evaluated within the scope of a &lt;code&gt;catch&lt;/code&gt; are not retracted if a &lt;code&gt;throw&lt;/code&gt; is evaluated, or if an error occurs.</source>
          <target state="translated">Значения, сохраненные при оценке &lt;code&gt;put&lt;/code&gt; в пределах области действия &lt;code&gt;catch&lt;/code&gt; , не удаляются, если оценивается &lt;code&gt;throw&lt;/code&gt; или если возникает ошибка.</target>
        </trans-unit>
        <trans-unit id="f0e48d6dd38ad6c9102722d33252c5ae65615ba8" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;$ERL_TOP&lt;/code&gt; will be mentioned a lot of times. It refers to the top directory in the source tree. More information about &lt;code&gt;$ERL_TOP&lt;/code&gt; can be found in the &lt;code&gt;&lt;a href=&quot;#Advanced-configuration-and-build-of-ErlangOTP_make-and-ERLTOP&quot;&gt;make and $ERL_TOP&lt;/a&gt;&lt;/code&gt; section below. If you are building in git you probably want to take a look at the &lt;code&gt;&lt;a href=&quot;#Advanced-configuration-and-build-of-ErlangOTP_Building_Within-Git&quot;&gt;Building in Git&lt;/a&gt;&lt;/code&gt; section below before proceeding.</source>
          <target state="translated">Переменная &lt;code&gt;$ERL_TOP&lt;/code&gt; будет упоминаться много раз. Он относится к верхнему каталогу в дереве исходного кода. Более подробную информацию о &lt;code&gt;$ERL_TOP&lt;/code&gt; можно найти в разделе &lt;code&gt;&lt;a href=&quot;#Advanced-configuration-and-build-of-ErlangOTP_make-and-ERLTOP&quot;&gt;make and $ERL_TOP&lt;/a&gt;&lt;/code&gt; ниже. Если вы строите в git, вы, вероятно, захотите взглянуть на раздел &lt;code&gt;&lt;a href=&quot;#Advanced-configuration-and-build-of-ErlangOTP_Building_Within-Git&quot;&gt;Building in Git&lt;/a&gt;&lt;/code&gt; ниже, прежде чем продолжить.</target>
        </trans-unit>
        <trans-unit id="b71a4a47f8b57681eb67d0f149cf4d7c4811e3e6" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;'$$'&lt;/code&gt; expands to a list of the values of all bound variables in order (that is, &lt;code&gt;['$1','$2', ...]&lt;/code&gt;).</source>
          <target state="translated">Переменная &lt;code&gt;'$$'&lt;/code&gt; расширяется до списка значений всех связанных переменных по порядку (то есть &lt;code&gt;['$1','$2', ...]&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="9e92c9812c408c5ff3803c9050d025112ca40670" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;'$_'&lt;/code&gt; expands to the whole &lt;code&gt;&lt;a href=&quot;#match_target&quot;&gt;match target&lt;/a&gt;&lt;/code&gt; term.</source>
          <target state="translated">Переменная &lt;code&gt;'$_'&lt;/code&gt; заменяется на весь &lt;code&gt;&lt;a href=&quot;#match_target&quot;&gt;match target&lt;/a&gt;&lt;/code&gt; термин соответствия.</target>
        </trans-unit>
        <trans-unit id="223547b0ee006d68fdeafe7dbabcdb4195ccc06b" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;Bin&lt;/code&gt; must contain a whole number of bytes, because the &lt;code&gt;binary&lt;/code&gt; type defaults to &lt;code&gt;unit:8&lt;/code&gt;. A &lt;code&gt;badarg&lt;/code&gt; exception is generated if &lt;code&gt;Bin&lt;/code&gt; consist of, for example, 17 bits.</source>
          <target state="translated">Переменная &lt;code&gt;Bin&lt;/code&gt; должна содержать целое количество байтов, поскольку &lt;code&gt;binary&lt;/code&gt; тип по умолчанию равен &lt;code&gt;unit:8&lt;/code&gt; . &lt;code&gt;badarg&lt;/code&gt; генерируется исключение , если &lt;code&gt;Bin&lt;/code&gt; состоит из, например, 17 бит.</target>
        </trans-unit>
        <trans-unit id="b327cd3ab139aaaeb5479b3a8cd2e03a44cba9d4" translate="yes" xml:space="preserve">
          <source>The variables in the generator patterns, shadow variables in the function clause, surrounding the bit string comprehensions.</source>
          <target state="translated">Переменные в шаблонах генератора,теневые переменные в выражении функции,окружающие понимание битовой строки.</target>
        </trans-unit>
        <trans-unit id="ba7b76fc37dd4760f96fd86e277ce66335f21492" translate="yes" xml:space="preserve">
          <source>The variables in the generator patterns, shadow variables in the function clause, surrounding the list comprehensions.</source>
          <target state="translated">Переменные в шаблонах генератора,теневые переменные в пункте функции,окружающие понимание списка.</target>
        </trans-unit>
        <trans-unit id="c3cbd2f6779e41d23e6821f5cc806aa75af8d5cf" translate="yes" xml:space="preserve">
          <source>The variables in the specified test system configuration files are imported for the test.</source>
          <target state="translated">Переменные в указанных файлах конфигурации тестовой системы импортируются для проведения теста.</target>
        </trans-unit>
        <trans-unit id="16b31340c6df5777f901eec1b8dd72202ecc99a3" translate="yes" xml:space="preserve">
          <source>The variant of &lt;code&gt;iodata()&lt;/code&gt; that gives the least copying of data with the current implementation (often a binary, but do not depend on it).</source>
          <target state="translated">Вариант &lt;code&gt;iodata()&lt;/code&gt; который дает наименьшее копирование данных с текущей реализацией (часто двоичный, но не зависит от него).</target>
        </trans-unit>
        <trans-unit id="7db0c9c9f81aaee69d11da93235542d480ff9436" translate="yes" xml:space="preserve">
          <source>The variants &lt;code&gt;http_bin&lt;/code&gt; and &lt;code&gt;httph_bin&lt;/code&gt; return strings (&lt;code&gt;HttpString&lt;/code&gt;) as binaries instead of lists.</source>
          <target state="translated">Варианты &lt;code&gt;http_bin&lt;/code&gt; и &lt;code&gt;httph_bin&lt;/code&gt; возвращают строки ( &lt;code&gt;HttpString&lt;/code&gt; ) как двоичные файлы, а не списки.</target>
        </trans-unit>
        <trans-unit id="386d7a023ddb83a55d49c04d2e00b77bbc947fdc" translate="yes" xml:space="preserve">
          <source>The verb name comes from the observation that it can be used for a pattern-based if-then-else block:</source>
          <target state="translated">Имя глагола происходит от наблюдения,что он может быть использован для блока if-then-else,основанного на шаблоне:</target>
        </trans-unit>
        <trans-unit id="e53a018823f7d0826b490411f9a345448e7e805f" translate="yes" xml:space="preserve">
          <source>The verbs described above provide four different &quot;strengths&quot; of control when subsequent matching fails:</source>
          <target state="translated">Описанные выше глаголы обеспечивают четыре различные &quot;сильные стороны&quot; контроля,когда последующее совпадение не удается:</target>
        </trans-unit>
        <trans-unit id="f2b992bf8000e459ed5b0cdc131fc96ec8dcdccf" translate="yes" xml:space="preserve">
          <source>The verification fun is called during the X509-path validation when an error or an extension unknown to the SSL application is encountered. It is also called when a certificate is considered valid by the path validation to allow access to each certificate in the path to the user application. It differentiates between the peer certificate and the CA certificates by using &lt;code&gt;valid_peer&lt;/code&gt; or &lt;code&gt;valid&lt;/code&gt; as second argument to the verification fun. See the &lt;code&gt;public_key User's Guide&lt;/code&gt; for definition of &lt;code&gt;#'OTPCertificate'{}&lt;/code&gt; and &lt;code&gt;#'Extension'{}&lt;/code&gt;.</source>
          <target state="translated">Удовольствие от проверки вызывается во время проверки пути X509, когда обнаруживается ошибка или расширение, неизвестное приложению SSL. Он также вызывается, когда сертификат считается действительным при проверке пути, чтобы разрешить доступ к каждому сертификату на пути к пользовательскому приложению. Он различает сертификат однорангового &lt;code&gt;valid_peer&lt;/code&gt; и сертификаты CA, используя valid_peer или &lt;code&gt;valid&lt;/code&gt; в качестве второго аргумента для развлечения. См. &lt;code&gt;public_key User's Guide&lt;/code&gt; для определения &lt;code&gt;#'OTPCertificate'{}&lt;/code&gt; и &lt;code&gt;#'Extension'{}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1de90c0b2842f11f7973bd5edddedba51c5c85c5" translate="yes" xml:space="preserve">
          <source>The verification fun is to be defined as follows:</source>
          <target state="translated">Веселье с проверкой должно быть определено следующим образом:</target>
        </trans-unit>
        <trans-unit id="e534d40ef492be59da6ec155736a8f23e023fdd5" translate="yes" xml:space="preserve">
          <source>The verification process</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7587f36555080700643b0019cdfdef45f4827cd" translate="yes" xml:space="preserve">
          <source>The version is defined by the module attribute &lt;code&gt;vsn&lt;/code&gt;, if any. There is no such attribute in &lt;code&gt;ch3&lt;/code&gt;, so in this case the version is the checksum (a huge integer) of the beam file, an uninteresting value, which is ignored.</source>
          <target state="translated">Версия определяется атрибутом модуля &lt;code&gt;vsn&lt;/code&gt; , если таковой имеется. В &lt;code&gt;ch3&lt;/code&gt; такого атрибута нет , поэтому в данном случае версия - это контрольная сумма (огромное целое число) файла луча, неинтересное значение, которое игнорируется.</target>
        </trans-unit>
        <trans-unit id="b6440cebe392d666b5024e49f82c9929c9694517" translate="yes" xml:space="preserve">
          <source>The version numbers differ in your system. Whenever one of the applications included in the script is upgraded, change the script.</source>
          <target state="translated">Номера версий отличаются в вашей системе.При обновлении одного из приложений,включенных в скрипт,измените скрипт.</target>
        </trans-unit>
        <trans-unit id="81ee8706973e7d65b914ed727a2144141d282b58" translate="yes" xml:space="preserve">
          <source>The version of an application specified in the &lt;code&gt;.rel&lt;/code&gt; file is to be the same as the version specified in the &lt;code&gt;.app&lt;/code&gt; file.</source>
          <target state="translated">Версия приложения, указанная в файле &lt;code&gt;.rel&lt;/code&gt; , должна быть такой же, как версия, указанная в файле &lt;code&gt;.app&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d2168251640676c1f75844920669340f83623b6f" translate="yes" xml:space="preserve">
          <source>The version of net-if provided by this application makes no use of this data, with one exception: Any tuple containing the atom &lt;code&gt;snmpa_default_notification_extra_info&lt;/code&gt; may be used by the agent and is therefor &lt;strong&gt;reserved&lt;/strong&gt;.</source>
          <target state="translated">Версия net-if, предоставленная этим приложением, не использует эти данные, за одним исключением: любой кортеж, содержащий атом &lt;code&gt;snmpa_default_notification_extra_info&lt;/code&gt; , может использоваться агентом и поэтому &lt;strong&gt;зарезервирован&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="35ae167373b6abecea965d3976c2d1e8cb0f8001" translate="yes" xml:space="preserve">
          <source>The version of the application. In an installed system there may exist several versions of an application. The &lt;code&gt;vsn&lt;/code&gt; parameter controls which version of the application will be chosen.</source>
          <target state="translated">Версия приложения. В установленной системе может существовать несколько версий приложения. Параметр &lt;code&gt;vsn&lt;/code&gt; определяет, какая версия приложения будет выбрана.</target>
        </trans-unit>
        <trans-unit id="0f6691af69660ac2dbeef6458e54f6b092b02a7f" translate="yes" xml:space="preserve">
          <source>The version scheme was changed as of OTP 17.0. This implies that application versions used prior to OTP 17.0 do not adhere to this version scheme. &lt;code&gt;&lt;a href=&quot;#otp_17_0_app_versions&quot;&gt;A list of application versions used in OTP 17.0&lt;/a&gt;&lt;/code&gt; is included at the end of this section</source>
          <target state="translated">Схема версии была изменена с OTP 17.0. Это означает, что версии приложений, использованные до OTP 17.0, не соответствуют этой схеме версий. &lt;code&gt;&lt;a href=&quot;#otp_17_0_app_versions&quot;&gt;A list of application versions used in OTP 17.0&lt;/a&gt;&lt;/code&gt; приведен в конце этого раздела.</target>
        </trans-unit>
        <trans-unit id="71667a4b4c466db83cfa8dccda4dd2b33a602563" translate="yes" xml:space="preserve">
          <source>The versions are defined in following RFCs</source>
          <target state="translated">Версии определены в следующих RFC</target>
        </trans-unit>
        <trans-unit id="b4892e73c1831bf8a3d6b46b7aa415cf267e8507" translate="yes" xml:space="preserve">
          <source>The viewed trace data is normally collected from Erlang trace ports or files.</source>
          <target state="translated">Просмотренные данные трассы обычно собираются из портов или файлов трассы Erlang.</target>
        </trans-unit>
        <trans-unit id="1a0d8d976122d98e4cfd120d6e6af690ee189bd4" translate="yes" xml:space="preserve">
          <source>The virtual binary heap exists in order to &lt;code&gt;&lt;a href=&quot;https://github.com/erlang/otp/blob/OTP-18.0/erts/emulator/beam/beam_emu.c#L364&quot;&gt;trigger&lt;/a&gt;&lt;/code&gt; garbage collections earlier when potentially there is a very large amount of off-heap binary data that could be reclaimed. This approach does not catch all problems with binary memory not being released soon enough, but it does catch a lot of them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c8e60b869b23fc7c125b17fff74830d66f135c3" translate="yes" xml:space="preserve">
          <source>The virtual machine also needs elevated privileges, either running as superuser or (for Linux) having capability &lt;code&gt;CAP_NET_RAW&lt;/code&gt;.</source>
          <target state="translated">Виртуальной машине также требуются повышенные привилегии для работы в качестве суперпользователя или (для Linux) с возможностью &lt;code&gt;CAP_NET_RAW&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cc464fdb800c73159385639322d0fc6141087504" translate="yes" xml:space="preserve">
          <source>The virtual machine also needs elevated privileges, either running as superuser or (for Linux) having capability &lt;code&gt;CAP_SYS_ADMIN&lt;/code&gt; according to the documentation for &lt;code&gt;setns(2)&lt;/code&gt;. However, during testing also &lt;code&gt;CAP_SYS_PTRACE&lt;/code&gt; and &lt;code&gt;CAP_DAC_READ_SEARCH&lt;/code&gt; have proven to be necessary.</source>
          <target state="translated">Виртуальной машине также требуются повышенные привилегии для работы в качестве суперпользователя или (для Linux) с возможностью &lt;code&gt;CAP_SYS_ADMIN&lt;/code&gt; в соответствии с документацией для &lt;code&gt;setns(2)&lt;/code&gt; . Однако во время тестирования также оказались необходимыми &lt;code&gt;CAP_SYS_PTRACE&lt;/code&gt; и &lt;code&gt;CAP_DAC_READ_SEARCH&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c60aa1ccef629b3d22eb0b09964d1681efe07a87" translate="yes" xml:space="preserve">
          <source>The virtual machine works with filenames as if they are encoded using UTF-8 (or some other system-specific Unicode encoding). This is the default on operating systems that enforce Unicode encoding, that is, Windows MacOS X and Android.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="006ddc155b00e369e7d44f1b15919a8110bdd467" translate="yes" xml:space="preserve">
          <source>The virtual machine works with filenames as if they are encoded using UTF-8 (or some other system-specific Unicode encoding). This is the default on operating systems that enforce Unicode encoding, that is, Windows and MacOS X.</source>
          <target state="translated">Виртуальная машина работает с именами файлов так,как если бы они были закодированы в кодировке UTF-8 (или другой системной кодировке Unicode).По умолчанию это используется в операционных системах,которые применяют кодировку Юникода,то есть в Windows и MacOS X.</target>
        </trans-unit>
        <trans-unit id="c517daaf8ca72cb9652e4e1b82ea25a6ea34e353" translate="yes" xml:space="preserve">
          <source>The virtual machine works with filenames as if they are encoded using the ISO Latin-1 encoding, disallowing Unicode characters with code points &amp;gt; 255.</source>
          <target state="translated">Виртуальная машина работает с именами файлов, как если бы они были закодированы с использованием кодировки ISO Latin-1, запрещая символы Unicode с кодовыми точками&amp;gt; 255.</target>
        </trans-unit>
        <trans-unit id="7328722d5a1a5caf291033df806ee0e4a77a5bcb" translate="yes" xml:space="preserve">
          <source>The waiting for thread progress in 4-6 is necessary in order for processes to read &lt;code&gt;the_active_code_index&lt;/code&gt; atomic during normal execution without any expensive memory barriers. When we write a new value into &lt;code&gt;the_active_code_index&lt;/code&gt; in step 6, we know that all schedulers will see an updated and consistent view of all the new active access structures once they become reachable through &lt;code&gt;the_active_code_index&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8d97e463a7a60c3b6aea9ab7db9eb585b1ed683" translate="yes" xml:space="preserve">
          <source>The waiting in step 10 is to make sure no lingering thread is still accessing disabled breakpoint structures to be deallocated in step 12.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72bf42f8550a67bb1de6bfd1cb44b03b77930eb8" translate="yes" xml:space="preserve">
          <source>The waiting in step 4 is to make sure all threads will see an updated view of the breakpoint structures once they become reachable through the &lt;code&gt;op_i_generic_breakpoint&lt;/code&gt; instruction written in step 5.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="053a67fd8d554f23b57dd15ba93a7604fd04b7ad" translate="yes" xml:space="preserve">
          <source>The waiting in step 6 is to make the activation of the new trace settings &quot;as atomic as possible&quot;. Different cores might see the new value of &lt;code&gt;erts_active_bp_index&lt;/code&gt; at different times as it is read without any memory barrier. But this is the best we can do without more expensive thread synchronization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e0755f04339935ab04dbc314aa1c277dab33406" translate="yes" xml:space="preserve">
          <source>The waiting in step 8 is to make sure we dont't restore the original bream instructions for disabled breakpoints until we know that no thread is still accessing the old enabled part of a disabled breakpoint.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13ed31f912a0c3756dff51206169f32f13717017" translate="yes" xml:space="preserve">
          <source>The wanted string encoding is specified by &lt;code&gt;&lt;a href=&quot;#erlang_char_encoding&quot;&gt;want&lt;/a&gt;&lt;/code&gt;. The original encoding used in the binary format (Latin-1 or UTF-8) can be obtained from &lt;code&gt;*was&lt;/code&gt;. The encoding of the resulting string (7-bit ASCII, Latin-1, or UTF-8) can be obtained from &lt;code&gt;*result&lt;/code&gt;. Both &lt;code&gt;was&lt;/code&gt; and &lt;code&gt;result&lt;/code&gt; can be &lt;code&gt;NULL&lt;/code&gt;. &lt;code&gt;*result&lt;/code&gt; can differ from &lt;code&gt;want&lt;/code&gt; if &lt;code&gt;want&lt;/code&gt; is a bitwise OR'd combination like &lt;code&gt;ERLANG_LATIN1|ERLANG_UTF8&lt;/code&gt; or if &lt;code&gt;*result&lt;/code&gt; turns out to be pure 7-bit ASCII (compatible with both Latin-1 and UTF-8).</source>
          <target state="translated">Требуемая кодировка строки указывается с помощью &lt;code&gt;&lt;a href=&quot;#erlang_char_encoding&quot;&gt;want&lt;/a&gt;&lt;/code&gt; . Исходная кодировка, используемая в двоичном формате (Latin-1 или UTF-8), может быть получена из &lt;code&gt;*was&lt;/code&gt; . Кодировку результирующей строки (7-битный ASCII, Latin-1 или UTF-8) можно получить из &lt;code&gt;*result&lt;/code&gt; . Оба &lt;code&gt;was&lt;/code&gt; и &lt;code&gt;result&lt;/code&gt; может быть &lt;code&gt;NULL&lt;/code&gt; . &lt;code&gt;*result&lt;/code&gt; может отличаться от &lt;code&gt;want&lt;/code&gt; если &lt;code&gt;want&lt;/code&gt; является комбинацией побитового &lt;code&gt;ERLANG_LATIN1|ERLANG_UTF8&lt;/code&gt; например ERLANG_LATIN1 | ERLANG_UTF8, или если &lt;code&gt;*result&lt;/code&gt; оказывается чистым 7-битным ASCII (совместимым как с Latin-1, так и с UTF-8).</target>
        </trans-unit>
        <trans-unit id="018d5b3762ed16f8137ce9fdaea1d65522f0b4e2" translate="yes" xml:space="preserve">
          <source>The warning for the first clause says that the creation of a sub binary cannot be delayed, because it will be returned. The warning for the second clause says that a sub binary will not be created (yet).</source>
          <target state="translated">Предупреждение для первого пункта гласит,что создание подбинарного файла не может быть отложено,так как он будет возвращен.Предупреждение для второго пункта говорит о том,что поддвоичный файл не будет создан (пока).</target>
        </trans-unit>
        <trans-unit id="5ce61e8b18d0497bc2e9762acc6fdf3697ac3b7b" translate="yes" xml:space="preserve">
          <source>The warning is given if the number of shift/reduce conflicts differs from 2, or if there are reduce/reduce conflicts.</source>
          <target state="translated">Предупреждение дается,если число конфликтов сдвига/снижения отличается от 2,или если конфликты уменьшаются/снижаются.</target>
        </trans-unit>
        <trans-unit id="eac3dbbed6bc0bb402c42ed8978c9b0740688aad" translate="yes" xml:space="preserve">
          <source>The warning message will look like this:</source>
          <target state="translated">Предупреждающее сообщение будет выглядеть так:</target>
        </trans-unit>
        <trans-unit id="40ff587868921130f6eb1c6a720b2933f27272e9" translate="yes" xml:space="preserve">
          <source>The warnings detected include:</source>
          <target state="translated">Обнаруженные предупреждения включают в себя:</target>
        </trans-unit>
        <trans-unit id="57441a0a1920375468fcb3cda7b741895e7ab716" translate="yes" xml:space="preserve">
          <source>The warnings look as follows:</source>
          <target state="translated">Предупреждения выглядят следующим образом:</target>
        </trans-unit>
        <trans-unit id="3bcce3258cf3577717dad6c74c35c711e27cd4cd" translate="yes" xml:space="preserve">
          <source>The way EUnit represents tests and test sets as data is flexible, powerful, and concise. This section describes the representation in detail.</source>
          <target state="translated">То,как EUnit представляет тесты и наборы тестов в виде данных,является гибким,мощным и лаконичным.Этот раздел подробно описывает представление.</target>
        </trans-unit>
        <trans-unit id="965b7339512f62c1c68183166bad964a056729e8" translate="yes" xml:space="preserve">
          <source>The web-based GUI, Virtual Test Server (VTS), is started with the &lt;code&gt;&lt;a href=&quot;run_test_chapter#ct_run&quot;&gt;ct_run&lt;/a&gt;&lt;/code&gt; program. From the GUI, you can load configuration files and select directories, suites, and cases to run. You can also state the configuration files, directories, suites, and cases on the command line when starting the web-based GUI.</source>
          <target state="translated">Графический веб-интерфейс Virtual Test Server (VTS) запускается с &lt;code&gt;&lt;a href=&quot;run_test_chapter#ct_run&quot;&gt;ct_run&lt;/a&gt;&lt;/code&gt; программы ct_run . Из графического интерфейса вы можете загружать файлы конфигурации и выбирать каталоги, наборы и дела для запуска. Вы также можете указать файлы конфигурации, каталоги, наборы и кейсы в командной строке при запуске графического веб-интерфейса.</target>
        </trans-unit>
        <trans-unit id="6550d3349d235f242c72f62c04f437d2ce48c34b" translate="yes" xml:space="preserve">
          <source>The well-known quick sort routine can be written as follows:</source>
          <target state="translated">Известную рутину быстрой сортировки можно написать следующим образом:</target>
        </trans-unit>
        <trans-unit id="1daf9c055686d26205a86325249ab61a258c6aa6" translate="yes" xml:space="preserve">
          <source>The whole list comprehension must be given to the function &lt;code&gt;qlc:q/1&lt;/code&gt;.</source>
          <target state="translated">Понимание всего списка должно быть отдано функции &lt;code&gt;qlc:q/1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a700c9c164740d8193a70ef5191bc6f87818b7c6" translate="yes" xml:space="preserve">
          <source>The whole original data chunk attempted to be sent.</source>
          <target state="translated">Вся исходная часть данных пыталась быть отправлена.</target>
        </trans-unit>
        <trans-unit id="3f50dc8a9a7232f081e9d82f5c58d1d5ab88774d" translate="yes" xml:space="preserve">
          <source>The wildcard string looks like an ordinary filename, except that the following &quot;wildcard characters&quot; are interpreted in a special way:</source>
          <target state="translated">Строка подстановочного знака выглядит как обычное имя файла,за исключением того,что следующие &quot;символы подстановочного знака&quot; интерпретируются особым образом:</target>
        </trans-unit>
        <trans-unit id="445ca2425df9850fe9ecf76a693661ab20880f20" translate="yes" xml:space="preserve">
          <source>The window is divided into the following five parts:</source>
          <target state="translated">Окно разделено на следующие пять частей:</target>
        </trans-unit>
        <trans-unit id="7aff75c1f4395e5c6a248f745c978774f96901a5" translate="yes" xml:space="preserve">
          <source>The word &lt;code&gt;ANNO&lt;/code&gt; in this section represents an annotation, and denotes among other things the number of the line in the source file where the construction occurred. See &lt;code&gt;erl_anno(3)&lt;/code&gt; for details. Several instances of &lt;code&gt;ANNO&lt;/code&gt; in the same construction can denote different annotations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c5d5fc6a6c1a668ddf6252dfa60f0a768f4fd44" translate="yes" xml:space="preserve">
          <source>The word &lt;code&gt;LINE&lt;/code&gt; in this section represents an integer, and denotes the number of the line in the source file where the construction occurred. Several instances of &lt;code&gt;LINE&lt;/code&gt; in the same construction can denote different lines.</source>
          <target state="translated">Слово &lt;code&gt;LINE&lt;/code&gt; в этом разделе представляет собой целое число и обозначает номер строки в исходном файле, где произошло построение. Несколько экземпляров &lt;code&gt;LINE&lt;/code&gt; в одной конструкции могут обозначать разные линии.</target>
        </trans-unit>
        <trans-unit id="eade7caf0a719386f3ed9bf0405c428ad15ea3eb" translate="yes" xml:space="preserve">
          <source>The workflow is as follows:</source>
          <target state="translated">Рабочий процесс выглядит следующим образом:</target>
        </trans-unit>
        <trans-unit id="c9930007b7ab7effc4f3827d9e45f7224f2de6c3" translate="yes" xml:space="preserve">
          <source>The working directory for the Erlang emulator. Must be on a local drive (no network drives are mounted when a service starts). Default working directory for services is &lt;code&gt;%SystemDrive%%SystemPath%&lt;/code&gt;. Debug log files will be placed in this directory.</source>
          <target state="translated">Рабочий каталог для эмулятора Erlang. Должен быть на локальном диске (при запуске службы сетевые диски не подключаются). Рабочий каталог по умолчанию для служб - &lt;code&gt;%SystemDrive%%SystemPath%&lt;/code&gt; . Файлы журнала отладки будут помещены в этот каталог.</target>
        </trans-unit>
        <trans-unit id="256bb673e1707d94ab2537efadaa95bffde4c53b" translate="yes" xml:space="preserve">
          <source>The written string is always &lt;code&gt;NULL&lt;/code&gt;-terminated, unless buffer &lt;code&gt;size&lt;/code&gt; is &amp;lt; &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">Письменная строка всегда &lt;code&gt;NULL&lt;/code&gt; -завершённой, если буфер &lt;code&gt;size&lt;/code&gt; не &amp;lt; &lt;code&gt;1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8f7a1436c802ad678039fa82fd904d4269922bbb" translate="yes" xml:space="preserve">
          <source>The wxWidgets-3.1 version should also work if 2.8 compatibility is enabled, add &lt;code&gt;--enable-compat28&lt;/code&gt; to configure commands below.</source>
          <target state="translated">Версия wxWidgets-3.1 также должна работать, если включена совместимость с 2.8, добавьте &lt;code&gt;--enable-compat28&lt;/code&gt; для настройки команд ниже.</target>
        </trans-unit>
        <trans-unit id="8a53a91ff254f2bc93279dc81109c603e90d0d26" translate="yes" xml:space="preserve">
          <source>The xmerl_xpath module handles the entire XPath 1.0 spec.</source>
          <target state="translated">Модуль xmerl_xpath обрабатывает всю спецификацию XPath 1.0.</target>
        </trans-unit>
        <trans-unit id="119bf8dc786018631b7988a88beda339c2ba800b" translate="yes" xml:space="preserve">
          <source>The xmerl_xpath module handles the entire XPath 1.0 spec. XPath expressions typically occur in XML attributes and are used to address parts of an XML document. The grammar is defined in &lt;code&gt;xmerl_xpath_parse.yrl&lt;/code&gt;. The core functions are defined in &lt;code&gt;xmerl_xpath_pred.erl&lt;/code&gt;.</source>
          <target state="translated">Модуль xmerl_xpath обрабатывает всю спецификацию XPath 1.0. Выражения XPath обычно встречаются в атрибутах XML и используются для адресации частей документа XML. Грамматика определена в &lt;code&gt;xmerl_xpath_parse.yrl&lt;/code&gt; . Основные функции определены в &lt;code&gt;xmerl_xpath_pred.erl&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6a5386595bb90d8f1e716194fa384056a3c48037" translate="yes" xml:space="preserve">
          <source>The young heap, or the allocation heap, consists of the stack and heap as described in the Overview. However, it also includes any heap fragments that are attached to the heap. All of the heap fragments are considered to be above the high-watermark and part of the young generation. Heap fragments contain terms that either did not fit on the heap, or were created by another process and then attached to the heap. For instance if the bif &lt;code&gt;binary_to_term/1&lt;/code&gt; created a term which does not fit on the current heap without doing a garbage collection, it will create a heap-fragment for the term and then schedule a garbage collection for later. Also if a message is sent to the process, the payload may be placed in a heap-fragment and that fragment is added to young heap when the message is matched in a receive clause.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0a5d4ec5e9af18ded993eb6992af6fcaadb42e4" translate="yes" xml:space="preserve">
          <source>The zip module supports zip archive versions up to 6.1. However, password-protection and Zip64 are not supported.</source>
          <target state="translated">Модуль zip поддерживает версии архива zip до 6.1.Однако,защита паролем и Zip64 не поддерживаются.</target>
        </trans-unit>
        <trans-unit id="f89ec6f488689cc3f3700cb5183e203d59254205" translate="yes" xml:space="preserve">
          <source>The | operator can also be used to add a head to a list:</source>
          <target state="translated">Оператор | также может быть использован для добавления заголовка в список:</target>
        </trans-unit>
        <trans-unit id="40fe3907425ba07df22ef0d6959c2d137d54e469" translate="yes" xml:space="preserve">
          <source>Then &lt;code&gt;m1&lt;/code&gt; is cover compiled in test run &lt;code&gt;s2&lt;/code&gt;, but not shown in the coverage log. Instead, if &lt;code&gt;&lt;a href=&quot;ct_cover#cross_cover_analyse-2&quot;&gt;ct_cover:cross_cover_analyse/2&lt;/a&gt;&lt;/code&gt; is called after both &lt;code&gt;s1&lt;/code&gt; and &lt;code&gt;s2&lt;/code&gt; test runs are completed, the accumulated result for &lt;code&gt;m1&lt;/code&gt; is available in the cross cover log for test run &lt;code&gt;s1&lt;/code&gt;.</source>
          <target state="translated">Тогда покрытие &lt;code&gt;m1&lt;/code&gt; скомпилировано в тестовом прогоне &lt;code&gt;s2&lt;/code&gt; , но не отображается в журнале покрытия. Вместо этого, если &lt;code&gt;&lt;a href=&quot;ct_cover#cross_cover_analyse-2&quot;&gt;ct_cover:cross_cover_analyse/2&lt;/a&gt;&lt;/code&gt; вызывается после завершения обоих тестовых прогонов &lt;code&gt;s1&lt;/code&gt; и &lt;code&gt;s2&lt;/code&gt; , накопленный результат для &lt;code&gt;m1&lt;/code&gt; доступен в журнале перекрестного покрытия для тестового прогона &lt;code&gt;s1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a8047a09730147dedb7e9d78a5e192ccf03ab6c4" translate="yes" xml:space="preserve">
          <source>Then go to the cross host system and setup the erlang installed in (4) or (5) to be in your &lt;code&gt;$PATH&lt;/code&gt;. Then go to what previously was &lt;code&gt;$ERL_TOP/release/tests/test_server&lt;/code&gt; and issue the following command.</source>
          <target state="translated">Затем перейдите в систему с перекрестным хостом и настройте erlang, установленный в (4) или (5), в ваш &lt;code&gt;$PATH&lt;/code&gt; . Затем перейдите к тому, что раньше было &lt;code&gt;$ERL_TOP/release/tests/test_server&lt;/code&gt; и выполните следующую команду.</target>
        </trans-unit>
        <trans-unit id="d8c63d4c24a80d8a897066cde6b4458486a7ca80" translate="yes" xml:space="preserve">
          <source>Then one column per state is printed with a the percentage of time this thread spent in the state out of it's own real-time. After the thread specific time, the accumulated time for each type of thread is printed in a similar format.</source>
          <target state="translated">Затем выводится один столбец на состояние с процентным соотношением времени,которое этот поток провел в состоянии вне своего собственного реального времени.После определенного времени потока накопленное время для каждого типа потоков распечатывается в аналогичном формате.</target>
        </trans-unit>
        <trans-unit id="58043576d5fe13fa1a246436e2e8c6ef745d143f" translate="yes" xml:space="preserve">
          <source>Then proceed as follows:</source>
          <target state="translated">Тогда действуйте следующим образом:</target>
        </trans-unit>
        <trans-unit id="7d9412fbd0462825f974f875c15e384433c2ca1a" translate="yes" xml:space="preserve">
          <source>Then read the trace file and create the raw profile data with &lt;code&gt;fprof:profile()&lt;/code&gt;, or perhaps &lt;code&gt;fprof:profile(file, &quot;my_fprof.trace&quot;)&lt;/code&gt; for non-default filename.</source>
          <target state="translated">Затем прочтите файл трассировки и создайте необработанные данные профиля с помощью &lt;code&gt;fprof:profile()&lt;/code&gt; или, возможно, &lt;code&gt;fprof:profile(file, &quot;my_fprof.trace&quot;)&lt;/code&gt; для файла, отличного от значения по умолчанию.</target>
        </trans-unit>
        <trans-unit id="5663aeb9e710685d724afdba3fc67379b487af35" translate="yes" xml:space="preserve">
          <source>Then the compact text version without indentation and with short keywords:</source>
          <target state="translated">Затем компактная текстовая версия без отступов и с короткими ключевыми словами:</target>
        </trans-unit>
        <trans-unit id="139ac9c79449e95e5f9e070852b997046b48832a" translate="yes" xml:space="preserve">
          <source>Then the compact version without indentation and with short keywords:</source>
          <target state="translated">Затем компактная версия без отступов и с короткими ключевыми словами:</target>
        </trans-unit>
        <trans-unit id="b190b45bdf5a8e168cb79c9debb9d2ba24df930e" translate="yes" xml:space="preserve">
          <source>Then the listing of the atoms comes, starting with 10 and 5 which are the atom refs of the already cached atoms. Then the new atoms are sent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="641d01dad066a8551404d7310477baa1cb6f8772" translate="yes" xml:space="preserve">
          <source>Then the new event handler &lt;code&gt;Handler2&lt;/code&gt; is added and initiated by calling &lt;code&gt;Module2:init({Args2,Term})&lt;/code&gt;, where &lt;code&gt;Module2&lt;/code&gt; is the callback module of &lt;code&gt;Handler2&lt;/code&gt; and &lt;code&gt;Term&lt;/code&gt; is the return value of &lt;code&gt;Module1:terminate/2&lt;/code&gt;. This makes it possible to transfer information from &lt;code&gt;Handler1&lt;/code&gt; to &lt;code&gt;Handler2&lt;/code&gt;.</source>
          <target state="translated">Затем добавляется новый обработчик событий &lt;code&gt;Handler2&lt;/code&gt; , который инициируется вызовом &lt;code&gt;Module2:init({Args2,Term})&lt;/code&gt; , где &lt;code&gt;Module2&lt;/code&gt; - это модуль обратного вызова &lt;code&gt;Handler2&lt;/code&gt; , а &lt;code&gt;Term&lt;/code&gt; - это возвращаемое значение &lt;code&gt;Module1:terminate/2&lt;/code&gt; . Это позволяет передавать информацию от &lt;code&gt;Handler1&lt;/code&gt; к &lt;code&gt;Handler2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e0c562a001db2c4ae28ac1742e8925ddf8af7163" translate="yes" xml:space="preserve">
          <source>Then the sublists are sorted and the results are combined.</source>
          <target state="translated">Затем подлисты сортируются и результаты объединяются.</target>
        </trans-unit>
        <trans-unit id="73b24c998d871947414c80ba0ded68c358316e6c" translate="yes" xml:space="preserve">
          <source>Then we continue with the call flow on the destination side:</source>
          <target state="translated">Затем мы продолжаем с потоком звонков на стороне назначения:</target>
        </trans-unit>
        <trans-unit id="57e50fb97a5f7d14f675710dd9c64d82897d7f75" translate="yes" xml:space="preserve">
          <source>Then we have the updates to the atom cache:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5acd2104208de4c3faf2546e133d8d457c2a417" translate="yes" xml:space="preserve">
          <source>Then you can add your favorite application my_app to the new PLT:</source>
          <target state="translated">Затем вы можете добавить ваше любимое приложение my_app в новый PLT:</target>
        </trans-unit>
        <trans-unit id="d31669bbfe7c81803e33f753695ac857feb8b190" translate="yes" xml:space="preserve">
          <source>Then you can proceed as follows:</source>
          <target state="translated">Тогда вы можете действовать следующим образом:</target>
        </trans-unit>
        <trans-unit id="78475e203a352f84ea57f7b84f34d9e978f720ec" translate="yes" xml:space="preserve">
          <source>Then you can run it through the export_simple/2 function:</source>
          <target state="translated">Затем вы можете запустить его через функцию export_simple/2:</target>
        </trans-unit>
        <trans-unit id="7e9e10c047b34e0b14a433931956d6784d8af0a2" translate="yes" xml:space="preserve">
          <source>Then you send events to the &lt;code&gt;Collector&lt;/code&gt; with the function &lt;code&gt;et_collector:report_event/6&lt;/code&gt; like this:</source>
          <target state="translated">Затем вы отправляете события в &lt;code&gt;Collector&lt;/code&gt; с помощью функции &lt;code&gt;et_collector:report_event/6&lt;/code&gt; следующим образом:</target>
        </trans-unit>
        <trans-unit id="84181b0c3516063c275e5c08beaa5fc4213cccf5" translate="yes" xml:space="preserve">
          <source>Then, add a new handler which prints to file. You can use the handler module &lt;code&gt;&lt;a href=&quot;logger_std_h&quot;&gt;logger_std_h&lt;/a&gt;&lt;/code&gt;, and configure it to log to file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32ec0c3065e7c7e83edd0f5ba55760ca9ae6826d" translate="yes" xml:space="preserve">
          <source>Then, add a new handler which prints to file. You can use the handler module &lt;code&gt;&lt;a href=&quot;logger_std_h&quot;&gt;logger_std_h&lt;/a&gt;&lt;/code&gt;, and specify type &lt;code&gt;{file,File}&lt;/code&gt;.:</source>
          <target state="translated">Затем добавьте новый обработчик, который печатает в файл. Вы можете использовать модуль обработчика &lt;code&gt;&lt;a href=&quot;logger_std_h&quot;&gt;logger_std_h&lt;/a&gt;&lt;/code&gt; и указать тип &lt;code&gt;{file,File}&lt;/code&gt; .:</target>
        </trans-unit>
        <trans-unit id="6ff57f64121d7cfa622102225ba9e153cee5fdd8" translate="yes" xml:space="preserve">
          <source>Then, all loaded modules are listed. The following fields exist:</source>
          <target state="translated">Затем перечисляются все загруженные модули.Существуют следующие поля:</target>
        </trans-unit>
        <trans-unit id="37285406a539aba18b235f1780c7ea66141aed2d" translate="yes" xml:space="preserve">
          <source>Then, an &lt;strong&gt;application specification&lt;/strong&gt; is needed, which is put in an &lt;code&gt;&lt;a href=&quot;#appl_res_file&quot;&gt;application resource file&lt;/a&gt;&lt;/code&gt;. Among other things, this file specifies which modules the application consists of and the name of the callback module.</source>
          <target state="translated">Затем требуется &lt;strong&gt;спецификация приложения&lt;/strong&gt; , которая помещается в &lt;code&gt;&lt;a href=&quot;#appl_res_file&quot;&gt;application resource file&lt;/a&gt;&lt;/code&gt; . Помимо прочего, в этом файле указывается, из каких модулей состоит приложение, и имя модуля обратного вызова.</target>
        </trans-unit>
        <trans-unit id="6b038b9a866b08fa7aa12d5de74309b996761d25" translate="yes" xml:space="preserve">
          <source>Then, for each &lt;strong&gt;system event&lt;/strong&gt; to be logged or traced, the following function is to be called.</source>
          <target state="translated">Затем для каждого &lt;strong&gt;системного события, которое&lt;/strong&gt; должно быть зарегистрировано или отслежено, должна быть вызвана следующая функция.</target>
        </trans-unit>
        <trans-unit id="b2b275200d1a22a2d00f625e244ca1c19bb04f51" translate="yes" xml:space="preserve">
          <source>Then, for the primary application and each included application in top-down, left-to-right order, the application master calls &lt;code&gt;Module:start_phase(Phase, Type, PhaseArgs)&lt;/code&gt; for each phase defined for the primary application, in that order. If a phase is not defined for an included application, the function is not called for this phase and application.</source>
          <target state="translated">Затем для основного приложения и каждого включенного приложения в порядке сверху вниз слева направо мастер приложения вызывает &lt;code&gt;Module:start_phase(Phase, Type, PhaseArgs)&lt;/code&gt; для каждой фазы, определенной для основного приложения, в этом порядке. Если фаза не определена для включенного приложения, функция не вызывается для этой фазы и приложения.</target>
        </trans-unit>
        <trans-unit id="9bce82c8d0395aa60449fa59c5a8cfb50a252f9b" translate="yes" xml:space="preserve">
          <source>Then, you can use the &lt;code&gt;?Q(Text)&lt;/code&gt; macros in your code to create ASTs or match on existing ASTs. For example:</source>
          <target state="translated">Затем вы можете использовать макросы &lt;code&gt;?Q(Text)&lt;/code&gt; в своем коде для создания AST или сопоставления с существующими AST. Например:</target>
        </trans-unit>
        <trans-unit id="2304d640a16ae9bfebc931161006126d186e787e" translate="yes" xml:space="preserve">
          <source>Then:</source>
          <target state="translated">Then:</target>
        </trans-unit>
        <trans-unit id="54025678c0a48ad36d078ae7c486444ea8302d6e" translate="yes" xml:space="preserve">
          <source>There are 146097 days in a 400 year period.</source>
          <target state="translated">За период в 400 лет-146097 дней.</target>
        </trans-unit>
        <trans-unit id="4922e83fd8840f5a8507bbf756cb975adb85c4c4" translate="yes" xml:space="preserve">
          <source>There are 1461 days in a 4 year period.</source>
          <target state="translated">В течение 4-х летнего периода 1461 день.</target>
        </trans-unit>
        <trans-unit id="a006b5eea15a1aff01c844f4450c0802ffc7c5a3" translate="yes" xml:space="preserve">
          <source>There are 3 categories of events: &lt;code&gt;&lt;a href=&quot;#type-external_event_type&quot;&gt;external&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#type-timeout_event_type&quot;&gt;timeout&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;internal&lt;/code&gt;.</source>
          <target state="translated">Есть 3 категории событий: &lt;code&gt;&lt;a href=&quot;#type-external_event_type&quot;&gt;external&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#type-timeout_event_type&quot;&gt;timeout&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;internal&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5e61c510a0f262f537c452aa189ebaa55b2635db" translate="yes" xml:space="preserve">
          <source>There are 3 types of time-out events that the state machine can generate for itself with the corresponding &lt;code&gt;&lt;a href=&quot;#type-timeout_action&quot;&gt;timeout_action()&lt;/a&gt;&lt;/code&gt;s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ff16aed8586d53e007c3bcd2bdd6ec77fd89ba9" translate="yes" xml:space="preserve">
          <source>There are 3 types of time-outs in &lt;code&gt;gen_statem&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2631fe7788bb799ec0d53ee0b2da8319a05517e4" translate="yes" xml:space="preserve">
          <source>There are 3 types of timeout events that the state machine can generate for itself with the corresponding &lt;code&gt;&lt;a href=&quot;#type-timeout_action&quot;&gt;timeout_action()&lt;/a&gt;&lt;/code&gt;s.</source>
          <target state="translated">Существует 3 типа событий тайм-аута, которые конечный автомат может генерировать для себя с соответствующими &lt;code&gt;&lt;a href=&quot;#type-timeout_action&quot;&gt;timeout_action()&lt;/a&gt;&lt;/code&gt; s.</target>
        </trans-unit>
        <trans-unit id="32e2588a4d8a20d2c12320bd314f5979f4fc80b1" translate="yes" xml:space="preserve">
          <source>There are 365 days in an ordinary year.</source>
          <target state="translated">В обычном году 365 дней.</target>
        </trans-unit>
        <trans-unit id="d970b2470b79eb6a87c891f0b7f5a8f224ef200c" translate="yes" xml:space="preserve">
          <source>There are 36524 days in a 100 year period.</source>
          <target state="translated">Есть 36524 дня за 100 лет.</target>
        </trans-unit>
        <trans-unit id="dd3485b6c23bf0750711aa938792fc3cb9795cf2" translate="yes" xml:space="preserve">
          <source>There are 366 days in a leap year.</source>
          <target state="translated">В високосном году 366 дней.</target>
        </trans-unit>
        <trans-unit id="e5fe64c83f46614adbd1fbe2801f7f2ef313c16d" translate="yes" xml:space="preserve">
          <source>There are 719528 days between Jan 1, 0 and Jan 1, 1970.</source>
          <target state="translated">С 1 по 0 января по 1 января 1970 года-719528 дней.</target>
        </trans-unit>
        <trans-unit id="f35333b685e5533111f684a33ff4796d2d156cad" translate="yes" xml:space="preserve">
          <source>There are 86400 seconds in a day.</source>
          <target state="translated">86400 секунд в день.</target>
        </trans-unit>
        <trans-unit id="7cc84f53d33e39866ff05a650b846f5a9e42e844" translate="yes" xml:space="preserve">
          <source>There are a bunch of different tradeoffs that come into play when trying to figure out which of the strategies you want to use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="180512e757bce690ec3e5179e5aff8954ea8a216" translate="yes" xml:space="preserve">
          <source>There are a few other shells available, but in all examples below we assume that you use bash.</source>
          <target state="translated">Есть несколько других оболочек,но во всех приведенных ниже примерах мы предполагаем,что вы используете bash.</target>
        </trans-unit>
        <trans-unit id="1edf8f04e2a157900339e6be967c14131457929f" translate="yes" xml:space="preserve">
          <source>There are a number of BIFs for type conversions.</source>
          <target state="translated">Существует несколько BIF-файлов для приведения типов.</target>
        </trans-unit>
        <trans-unit id="242b6cdf7d5bf2f5010f113ba9575096eca5ab25" translate="yes" xml:space="preserve">
          <source>There are a number of configuration parameter's that control the operation of the transaction sender. In principle, a message with everything stored (ack's and request's) is sent from the process when:</source>
          <target state="translated">Существует ряд конфигурационных параметров,которые управляют работой отправителя транзакции.В принципе,от процесса посылается сообщение со всем сохраненным (ack's и request's),когда:</target>
        </trans-unit>
        <trans-unit id="14ebd1b2612f7ab9a04862c2c58993cbe8294ef0" translate="yes" xml:space="preserve">
          <source>There are also Erlang plugins for other code editors &lt;a href=&quot;http://github.com/vim-erlang&quot;&gt;Vim (vim-erlang)&lt;/a&gt; , &lt;a href=&quot;http://atom.io/packages/language-erlang&quot;&gt; Atom &lt;/a&gt; , &lt;a href=&quot;http://erlide.org/index.html&quot;&gt;Eclipse (ErlIDE)&lt;/a&gt; and &lt;a href=&quot;http://ignatov.github.io/intellij-erlang/&quot;&gt;IntelliJ IDEA&lt;/a&gt;.</source>
          <target state="translated">Существуют также плагины Erlang для других редакторов кода &lt;a href=&quot;http://github.com/vim-erlang&quot;&gt;Vim (vim-erlang)&lt;/a&gt; , &lt;a href=&quot;http://atom.io/packages/language-erlang&quot;&gt;Atom&lt;/a&gt; , &lt;a href=&quot;http://erlide.org/index.html&quot;&gt;Eclipse (ErlIDE)&lt;/a&gt; и &lt;a href=&quot;http://ignatov.github.io/intellij-erlang/&quot;&gt;IntelliJ IDEA&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="dacd4b2a595b258191f9bba3bf3a510ecad7a248" translate="yes" xml:space="preserve">
          <source>There are also Erlang plugins for other code editors &lt;a href=&quot;https://github.com/vim-erlang&quot;&gt;Vim (vim-erlang)&lt;/a&gt; , &lt;a href=&quot;https://atom.io/packages/language-erlang&quot;&gt; Atom &lt;/a&gt; , &lt;a href=&quot;http://erlide.org/index.html&quot;&gt;Eclipse (ErlIDE)&lt;/a&gt; and &lt;a href=&quot;https://ignatov.github.io/intellij-erlang/&quot;&gt;IntelliJ IDEA&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ab85aacb25c2dac1de9193bd4c1c96c59434beb" translate="yes" xml:space="preserve">
          <source>There are also buttons to clear the contents of each window.</source>
          <target state="translated">Есть также кнопки для очистки содержимого каждого окна.</target>
        </trans-unit>
        <trans-unit id="a0e9837f18730715ec49993436d5ae3ed6b58962" translate="yes" xml:space="preserve">
          <source>There are also corresponding trace client types that can read the Erlang trace data format from such files or ports. The &lt;code&gt;et_collector:start_trace_client/3&lt;/code&gt; function makes use of these Erlang trace clients and redirects the trace data to the &lt;code&gt;Collector&lt;/code&gt;.</source>
          <target state="translated">Существуют также соответствующие типы клиентов трассировки, которые могут считывать формат данных трассировки Erlang из таких файлов или портов. Функция &lt;code&gt;et_collector:start_trace_client/3&lt;/code&gt; использует этих клиентов трассировки Erlang и перенаправляет данные трассировки в &lt;code&gt;Collector&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c99ca7c6f5a9145961cb429767668ca00d8aa464" translate="yes" xml:space="preserve">
          <source>There are also encode functions that use a dynamic buffer. It is often more convenient to use these to encode data. All encode functions comes in two versions; those starting with &lt;code&gt;ei_x&lt;/code&gt; use a dynamic buffer.</source>
          <target state="translated">Также существуют функции кодирования, использующие динамический буфер. Часто их удобнее использовать для кодирования данных. Все функции кодирования представлены в двух версиях; те, которые начинаются с &lt;code&gt;ei_x&lt;/code&gt; , используют динамический буфер.</target>
        </trans-unit>
        <trans-unit id="f9d5093112a2fcba39a0f2eed1157356fdbc134d" translate="yes" xml:space="preserve">
          <source>There are also encode functions that use a dynamic buffer. It is often more convenient to use these to encode data. All encode functions comes in two versions; those starting with &lt;code&gt;ei_x_&lt;/code&gt; use a dynamic buffer of type &lt;code&gt;&lt;a href=&quot;#ei_x_buff&quot;&gt;ei_x_buff&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c973e8a6ad46963c3452623094e6dbd1de252e5" translate="yes" xml:space="preserve">
          <source>There are also existing functions in the API that reads from various sources and calls &lt;code&gt;et_collector:report/2&lt;/code&gt;:</source>
          <target state="translated">В API также есть функции, которые читают из различных источников и вызывают &lt;code&gt;et_collector:report/2&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="6b0b6ca2d317b12bcab295cfefa25fba1f494f42" translate="yes" xml:space="preserve">
          <source>There are also several open source tools outside of Erlang/OTP that can be used to help profiling. Some of them are:</source>
          <target state="translated">Есть также несколько инструментов с открытым исходным кодом вне Erlang/OTP,которые могут быть использованы для помощи в профилировании.Некоторые из них:</target>
        </trans-unit>
        <trans-unit id="142cde2c5e7c063e8b6e633dcb4d8f992d4a63a0" translate="yes" xml:space="preserve">
          <source>There are also some tools that can be used to get a view of the whole system with more or less overhead.</source>
          <target state="translated">Есть также некоторые инструменты,которые можно использовать,чтобы получить представление о всей системе с более или менее накладными расходами.</target>
        </trans-unit>
        <trans-unit id="d345e5c9462888e4d0e72da3171fd099f28666f6" translate="yes" xml:space="preserve">
          <source>There are also some useful functions for encoding and decoding of SNMP messages in the module &lt;code&gt;&lt;a href=&quot;snmp_pdus&quot;&gt;snmp_pdus&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Также в модуле &lt;code&gt;&lt;a href=&quot;snmp_pdus&quot;&gt;snmp_pdus&lt;/a&gt;&lt;/code&gt; есть несколько полезных функций для кодирования и декодирования сообщений SNMP .</target>
        </trans-unit>
        <trans-unit id="d2c12c548107750b36f7254260f1588ab2784f00" translate="yes" xml:space="preserve">
          <source>There are also some useful functions for encoding and decoding of SNMP messages in the module &lt;code&gt;snmp_pdus&lt;/code&gt;.</source>
          <target state="translated">Также в модуле &lt;code&gt;snmp_pdus&lt;/code&gt; есть несколько полезных функций для кодирования и декодирования сообщений SNMP .</target>
        </trans-unit>
        <trans-unit id="fc4b5b08a6ea2fb2b0f10fe9a664d0767cb557d8" translate="yes" xml:space="preserve">
          <source>There are also two optional functions that may be exported:</source>
          <target state="translated">Есть также две дополнительные функции,которые могут быть экспортированы:</target>
        </trans-unit>
        <trans-unit id="02924d8e6964e4587d120c6a611e73172eec6d8f" translate="yes" xml:space="preserve">
          <source>There are also unary set operators:</source>
          <target state="translated">Есть также операторы с одинарными настройками:</target>
        </trans-unit>
        <trans-unit id="3acf11feebdd585e34d9bb7c8762ccd18c3ff0dc" translate="yes" xml:space="preserve">
          <source>There are any number of &lt;code&gt;&lt;a href=&quot;#Generic%20Time-Outs&quot;&gt;Generic Time-Outs&lt;/a&gt;&lt;/code&gt; differing by their &lt;code&gt;Name&lt;/code&gt;. They have no automatic cancelling.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18a4256a63577ca8fbaba2b8f665cf1ca462e6b4" translate="yes" xml:space="preserve">
          <source>There are basically two reasons for using more than one table replica: fault tolerance and speed. Notice that table replication provides a solution to both of these system requirements.</source>
          <target state="translated">Существуют,по сути,две причины использования более одной реплики таблицы:отказоустойчивость и скорость.Обратите внимание,что репликация таблиц обеспечивает решение обоих этих системных требований.</target>
        </trans-unit>
        <trans-unit id="efcb011fbe2418732f8e84878ff0611edcbe6375" translate="yes" xml:space="preserve">
          <source>There are basically two ways to avoid copying a binary that is sent to a driver:</source>
          <target state="translated">Есть,по сути,два способа избежать копирования двоичного файла,который отправляется драйверу:</target>
        </trans-unit>
        <trans-unit id="3f19d4715aab222132c414bca72739542361f550" translate="yes" xml:space="preserve">
          <source>There are cryptographic limits on the amount of plaintext which can be safely encrypted under a given set of keys. If the amount of data surpasses those limits, a key update is triggered and a new set of keys are installed. See also the option &lt;code&gt;key_update_at&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34bb0f988efea166c1a1ee7437789e3a88d3fdd7" translate="yes" xml:space="preserve">
          <source>There are cryptographic limits on the amount of plaintext which can be safely encrypted under a given set of keys. The current default ensures that data integrity will not be breached with probability greater than 1/2^57. For more information see &lt;code&gt;&lt;a href=&quot;http://www.isg.rhul.ac.uk/~kp/TLS-AEbounds.pdf&quot;&gt;Limits on Authenticated Encryption Use in TLS&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="427d1b12162110ab82e9ecb95a1e779c90521928" translate="yes" xml:space="preserve">
          <source>There are different ways to run the mstone1 tool, e.g. with or without the use of drivers, with &lt;strong&gt;only&lt;/strong&gt; flex-empowered configs.</source>
          <target state="translated">Есть разные способы запустить инструмент mstone1, например, с использованием драйверов или без них, &lt;strong&gt;только&lt;/strong&gt; с конфигурациями с расширенными возможностями flex.</target>
        </trans-unit>
        <trans-unit id="d082ef660d4f3ab42a161139d41ebc8c9796aa24" translate="yes" xml:space="preserve">
          <source>There are different ways to traverse through the objects of a table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb3a2985df3c8dbb9f72f40ce1f7662ef09722ea" translate="yes" xml:space="preserve">
          <source>There are directives to classify specific instructions depending on how frequently used they are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83886161e156439b88f864a15f0682e914bef032" translate="yes" xml:space="preserve">
          <source>There are errors in the module.</source>
          <target state="translated">В модуле есть ошибки.</target>
        </trans-unit>
        <trans-unit id="9f2059c62b05489c060b2ff7738b1e0f09fb659b" translate="yes" xml:space="preserve">
          <source>There are five capturing substrings, but only one is ever set after a match. (An alternative way of solving this problem is to use a &quot;branch reset&quot; subpattern, as described in the previous section.)</source>
          <target state="translated">Есть пять подложек для захвата,но только одна когда-нибудь устанавливается после матча.(Альтернативным способом решения этой проблемы является использование подмаскировки &quot;сброс ветви&quot;,как описано в предыдущем разделе).</target>
        </trans-unit>
        <trans-unit id="33595bb67b93a0d4d29156619db2bde17172f1a9" translate="yes" xml:space="preserve">
          <source>There are five kinds of atomic literals, which are represented in the same way in patterns, expressions, and guards:</source>
          <target state="translated">Существует пять видов атомных букв,которые одинаково представлены в узорах,выражениях и охранниках:</target>
        </trans-unit>
        <trans-unit id="51d0a41716062d2a82d15d8d350dc23a6b9ec6b3" translate="yes" xml:space="preserve">
          <source>There are five lists exchanged in the connection setup. Three of them are also divided in two directions, to and from the server.</source>
          <target state="translated">При установке соединения происходит обмен пятью списками.Три из них также разделены на два направления,к серверу и от сервера.</target>
        </trans-unit>
        <trans-unit id="cf8e92c428bfd92f9fbf9d5334e7e6eb53e744e5" translate="yes" xml:space="preserve">
          <source>There are five other standard MIBs, which also may be loaded into the agent. These MIBs are:</source>
          <target state="translated">Существует пять других стандартных MIB,которые также могут быть загружены в агент.Эти MIB:</target>
        </trans-unit>
        <trans-unit id="152329e6587feacf4160245f8023f9e4b43d1b9a" translate="yes" xml:space="preserve">
          <source>There are four categories of applications on the &lt;code&gt;Application dependencies&lt;/code&gt; page. If the application is used by other applications, these are listed under &lt;code&gt;Used by&lt;/code&gt;. If the application requires other applications be started before it can be started, these are listed under &lt;code&gt;Required&lt;/code&gt;. These applications are listed in the &lt;code&gt;applications&lt;/code&gt; part of the &lt;code&gt;app&lt;/code&gt; file. If the application includes other applications, these are listed under &lt;code&gt;Included&lt;/code&gt;. These applications are listed in the &lt;code&gt;included_applications&lt;/code&gt; part of the &lt;code&gt;app&lt;/code&gt; file. If the application uses other applications, these are listed under &lt;code&gt;Uses&lt;/code&gt;.</source>
          <target state="translated">На странице &lt;code&gt;Application dependencies&lt;/code&gt; есть четыре категории приложений . Если приложение используется другими приложениями, они перечислены в разделе &lt;code&gt;Used by&lt;/code&gt; . Если приложение требует запуска других приложений, прежде чем его можно будет запустить, они будут перечислены в разделе &amp;laquo; &lt;code&gt;Required&lt;/code&gt; . Эти приложения перечислены в &lt;code&gt;applications&lt;/code&gt; части &lt;code&gt;app&lt;/code&gt; файла. Если приложение включает в себя другие приложения, они перечислены в разделе &amp;laquo; &lt;code&gt;Included&lt;/code&gt; . Эти приложения перечислены в &lt;code&gt;included_applications&lt;/code&gt; части &lt;code&gt;app&lt;/code&gt; файла. Если приложение использует другие приложения, они перечислены в разделе &amp;laquo; &lt;code&gt;Uses&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="11d82c54f7bd20fbaa9331c2a4418fb92d7a4c19" translate="yes" xml:space="preserve">
          <source>There are four categories of applications on the applications page. &lt;code&gt;Included&lt;/code&gt; contains applications that are explicitly included. &lt;code&gt;Excluded&lt;/code&gt; contains applications that are explicitly excluded. &lt;code&gt;Derived&lt;/code&gt; contains applications that either are used directly by explicitly included applications or by other derived applications. &lt;code&gt;Available&lt;/code&gt; contains the remaining applications.</source>
          <target state="translated">На странице приложений есть четыре категории приложений. &lt;code&gt;Included&lt;/code&gt; содержит явно включенные приложения. &lt;code&gt;Excluded&lt;/code&gt; содержит приложения, которые явно исключены. &lt;code&gt;Derived&lt;/code&gt; содержат приложения, которые используются напрямую явно включенными приложениями или другими производными приложениями. &lt;code&gt;Available&lt;/code&gt; содержит остальные приложения.</target>
        </trans-unit>
        <trans-unit id="b68efc29dbc075cb27e8313dd48ca56abcbcbd47" translate="yes" xml:space="preserve">
          <source>There are four categories of modules on the modules page. &lt;code&gt;Included&lt;/code&gt; contains modules that are explicitly included. &lt;code&gt;Excluded&lt;/code&gt; contains modules that are explicitly excluded. &lt;code&gt;Derived&lt;/code&gt; contains modules that either are used directly by explicitly included modules or by other derived modules. &lt;code&gt;Available&lt;/code&gt; contains the remaining modules.</source>
          <target state="translated">На странице модулей есть четыре категории модулей. &lt;code&gt;Included&lt;/code&gt; содержит модули, которые включены явно. &lt;code&gt;Excluded&lt;/code&gt; содержит модули, которые явно исключены. &lt;code&gt;Derived&lt;/code&gt; содержит модули, которые используются напрямую явно включенными модулями или другими производными модулями. &lt;code&gt;Available&lt;/code&gt; находятся остальные модули.</target>
        </trans-unit>
        <trans-unit id="c2b0337aead7f70c27290d4535794d260d389da6" translate="yes" xml:space="preserve">
          <source>There are four different encodings present during the handling of URIs:</source>
          <target state="translated">При работе с URI-адресами присутствуют четыре различные кодировки:</target>
        </trans-unit>
        <trans-unit id="413ab333b189c985048445074e9603bae2ba9723" translate="yes" xml:space="preserve">
          <source>There are four kinds of condition: references to subpatterns, references to recursion, a pseudo-condition called DEFINE, and assertions.</source>
          <target state="translated">Существует четыре вида условий:ссылки на подмаски,ссылки на рекурсию,псевдо-условие DEFINE и утверждения.</target>
        </trans-unit>
        <trans-unit id="0e3cede13e2f3ea6f18d8aafca7fbdcb89de6d8f" translate="yes" xml:space="preserve">
          <source>There are four rounds of waiting for thread progress in the above sequence. In the code loading sequence we sacrificed memory overhead of three generations to avoid a second round of thread progress. The latency of &lt;code&gt;trace_pattern&lt;/code&gt; should not be such a big problem for however, as it is normally not called in a rapid sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff7d1dc7b48a9dea55fd34247a8586111ade0080" translate="yes" xml:space="preserve">
          <source>There are from OTP-23.0 two main ways to set an option:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afecc58bc3779a5734aaac232e18d7916a22144d" translate="yes" xml:space="preserve">
          <source>There are function clauses, if clauses, case clauses, and catch clauses.</source>
          <target state="translated">Существуют функциональные клаузулы,если они есть,то клаузулы о делах,а также клаузулы о подвохе.</target>
        </trans-unit>
        <trans-unit id="72251a5ed304e5df93ccf96c6a4cfa369e458578" translate="yes" xml:space="preserve">
          <source>There are however attacks that are not detected by those checks. Suppose a bad guy has succeded with a DNS infection. Then the client could belive it is connecting to one host but ends up at another but evil one. Though it is evil, it could have a perfectly legal certificate! The certificate has a valid signature, it is not revoked, the certificate chain is not faked and has a trusted root and so on.</source>
          <target state="translated">Однако существуют атаки,которые не обнаруживаются этими проверками.Предположим,плохой парень заразился DNS.Тогда клиент может поверить,что он соединяется с одним хостом,но заканчивается на другом,но злобном.Хотя это и зло,но у него может быть совершенно легальный сертификат! Сертификат имеет действительную подпись,он не отозван,цепочка сертификатов не подделана и имеет доверенный корень и так далее.</target>
        </trans-unit>
        <trans-unit id="3713f84d148979b203b3befe641b4b77769eb559" translate="yes" xml:space="preserve">
          <source>There are limitations to when you can execute time warp unsafe code using this mode. If it is possible to use time warp safe code only, it is &lt;strong&gt;much&lt;/strong&gt; better to use the &lt;code&gt;&lt;a href=&quot;#Multi_Time_Warp_Mode&quot;&gt;multi-time warp mode&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">Существуют ограничения на то, когда вы можете выполнить небезопасный код деформации времени в этом режиме. Если можно использовать только безопасный код временной деформации, &lt;strong&gt;гораздо&lt;/strong&gt; лучше использовать режим &lt;code&gt;&lt;a href=&quot;#Multi_Time_Warp_Mode&quot;&gt;multi-time warp mode&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cd4bd83b271a665a5b58936e70ef38dadf1155ad" translate="yes" xml:space="preserve">
          <source>There are limitations with this transaction mechanism. If complex dependencies exist between variables, for example between &lt;code&gt;month&lt;/code&gt; and &lt;code&gt;day&lt;/code&gt;, another mechanism is needed. Setting the date to 'Feb 31' can be avoided by a somewhat more generic transaction mechanism. You can continue and find more and more complex situations and construct an N-phase set-mechanism. This toolkit only contains a trivial mechanism.</source>
          <target state="translated">У этого механизма транзакции есть ограничения. Если между переменными существуют сложные зависимости, например, между &lt;code&gt;month&lt;/code&gt; и &lt;code&gt;day&lt;/code&gt; , необходим другой механизм. Установка даты на &amp;laquo;31 февраля&amp;raquo; может быть предотвращена с помощью несколько более общего механизма транзакций. Вы можете продолжить, найти все более и более сложные ситуации и построить N-фазный установочный механизм. Этот инструментарий содержит только тривиальный механизм.</target>
        </trans-unit>
        <trans-unit id="439879eaa90ceaba58052efe3928a2c96e71eaa0" translate="yes" xml:space="preserve">
          <source>There are many different ways of writing back references to named subpatterns. The .NET syntax &lt;code&gt;\k{name}&lt;/code&gt; and the Perl syntax &lt;code&gt;\k&amp;lt;name&amp;gt;&lt;/code&gt; or &lt;code&gt;\k'name'&lt;/code&gt; are supported, as is the Python syntax &lt;code&gt;(?P=name)&lt;/code&gt;. The unified back reference syntax in Perl 5.10, in which \g can be used for both numeric and named references, is also supported. The previous example can be rewritten in the following ways:</source>
          <target state="translated">Есть много разных способов обратной записи ссылок на именованные подшаблоны. Поддерживаются синтаксис .NET &lt;code&gt;\k{name}&lt;/code&gt; и синтаксис Perl &lt;code&gt;\k&amp;lt;name&amp;gt;&lt;/code&gt; или &lt;code&gt;\k'name'&lt;/code&gt; , как и синтаксис Python &lt;code&gt;(?P=name)&lt;/code&gt; . Также поддерживается унифицированный синтаксис обратной ссылки в Perl 5.10, в котором \ g может использоваться как для числовых, так и для именованных ссылок. Предыдущий пример можно переписать следующим образом:</target>
        </trans-unit>
        <trans-unit id="ed05625b139b4d644de6d7f67ce1fa7c2638ef57" translate="yes" xml:space="preserve">
          <source>There are many kinds of test suites. Some concentrate on calling every function or command (in the documented way) in a certain interface. Some others do the same, but use all kinds of illegal parameters, and verify that the server stays alive and rejects the requests with reasonable error codes. Some test suites simulate an application (typically consisting of a few modules of an application), some try to do tricky requests in general, and some test suites even test internal functions with help of special Load Modules on target.</source>
          <target state="translated">Есть много видов тестовых наборов.Некоторые концентрируются на вызове каждой функции или команды (документированным образом)в определенном интерфейсе.Некоторые делают то же самое,но используют все виды незаконных параметров,и проверяют,что сервер остается в живых и отклоняет запросы с разумными кодами ошибок.Некоторые наборы тестов имитируют приложение (обычно состоящее из нескольких модулей приложения),некоторые пытаются выполнять каверзные запросы в целом,а некоторые наборы тестов даже тестируют внутренние функции с помощью специальных Загрузочных модулей на целевом сервере.</target>
        </trans-unit>
        <trans-unit id="7c87c0f774843afd2689dfb3a9a1edad461eb107" translate="yes" xml:space="preserve">
          <source>There are many other BIFs such as &lt;code&gt;trunc&lt;/code&gt;. Only a few BIFs can be used in guards, and you cannot use functions you have defined yourself in guards. (see &lt;code&gt;Guard Sequences&lt;/code&gt;) (For advanced readers: This is to ensure that guards do not have side effects.) Let us play with a few of these functions in the shell:</source>
          <target state="translated">Есть много других BIF, таких как &lt;code&gt;trunc&lt;/code&gt; . В охранниках можно использовать только несколько BIF, и вы не можете использовать функции, которые вы определили сами, в охранниках. (см. &lt;code&gt;Guard Sequences&lt;/code&gt; ) (Для опытных читателей: это необходимо для того, чтобы гарантировать, что охранники не имеют побочных эффектов.) Давайте поиграемся с некоторыми из этих функций в оболочке:</target>
        </trans-unit>
        <trans-unit id="7ad50dd0c2f864512dffbc3444e8c2dbdeaa7fbe" translate="yes" xml:space="preserve">
          <source>There are many very useful functions in the &lt;code&gt;lists&lt;/code&gt; module.</source>
          <target state="translated">В модуле &lt;code&gt;lists&lt;/code&gt; есть много очень полезных функций .</target>
        </trans-unit>
        <trans-unit id="ebf4e0ad405ef3fed32697182bdabfe322f69cbb" translate="yes" xml:space="preserve">
          <source>There are more efficient ways to create tables manually, i.e. to use the module &lt;code&gt;snmp_index&lt;/code&gt;.</source>
          <target state="translated">Существуют более эффективные способы создания таблиц вручную, то есть использовать модуль &lt;code&gt;snmp_index&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7e356f188420ccd305fbbe430543827bbca4a813" translate="yes" xml:space="preserve">
          <source>There are more specific &lt;strong&gt;transition actions&lt;/strong&gt; that a callback function can command the &lt;code&gt;gen_statem&lt;/code&gt; engine to do after the callback function return. These are commanded by returning a list of &lt;code&gt;actions&lt;/code&gt; in the &lt;code&gt; return value &lt;/code&gt; from the &lt;code&gt;callback function&lt;/code&gt;. These are the possible &lt;strong&gt;transition actions&lt;/strong&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd92c71af502e8043671a8043ed8709a47495a40" translate="yes" xml:space="preserve">
          <source>There are more specific state-transition actions that a callback function can command the &lt;code&gt;gen_statem&lt;/code&gt; engine to do after the callback function return. These are commanded by returning a list of &lt;code&gt;actions&lt;/code&gt; in the &lt;code&gt;return value&lt;/code&gt; from the &lt;code&gt;callback function&lt;/code&gt;. These are the possible state transition actions:</source>
          <target state="translated">Существуют более конкретные действия по переходу между состояниями, которые функция обратного вызова может &lt;code&gt;gen_statem&lt;/code&gt; механизму gen_statem выполнить после возврата из функции обратного вызова. Они командуют возвращающий список &lt;code&gt;actions&lt;/code&gt; в &lt;code&gt;return value&lt;/code&gt; из &lt;code&gt;callback function&lt;/code&gt; . Это возможные действия при переходе между состояниями:</target>
        </trans-unit>
        <trans-unit id="b36a2cfd042d4aa3ef25491b61074f01870dd914" translate="yes" xml:space="preserve">
          <source>There are no errors in the module.</source>
          <target state="translated">Ошибок в модуле нет.</target>
        </trans-unit>
        <trans-unit id="cf5c5dc136c77b62a5f73ee583f29675f0867a0a" translate="yes" xml:space="preserve">
          <source>There are no good and explicit ways to declare dependencies, so it can be difficult to see and understand these in test suite code and in test logs.</source>
          <target state="translated">Хороших и явных способов объявления зависимостей не существует,поэтому их сложно увидеть и понять в коде тестового пакета и в тестовых журналах.</target>
        </trans-unit>
        <trans-unit id="ccfb4d80adcf6550acd24e6e86b074a68a3505fb" translate="yes" xml:space="preserve">
          <source>There are no guarantees exactly when the destructor of an unreferenced resource is called. It could be called directly by &lt;code&gt;enif_release_resource&lt;/code&gt; but it could also be scheduled to be called at a later time possibly by another thread.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79dc22722039d0f06f11ce0ecbb4a728b9b8c1f7" translate="yes" xml:space="preserve">
          <source>There are no restrictions on the number of bits in the tail.</source>
          <target state="translated">Нет никаких ограничений на количество бит в хвосте.</target>
        </trans-unit>
        <trans-unit id="5da19bcdc35b1de403b2d378cd184c875b0de577" translate="yes" xml:space="preserve">
          <source>There are no special option values (like zero) to clear an option. Some of the options have a unspecified minimum value. Lower values will be adjusted to the minimum value. For example, it is currently not possible to monitor all garbage collections with &lt;code&gt;{long_gc, 0}&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e0f9557377e4510903384f151fd0ecbad27b195" translate="yes" xml:space="preserve">
          <source>There are obvious dependencies between the listed functions. The server cannot be configured if it has not first been started, a client connot be connectd until the server is properly configured, and so on. If we want to have one test case for each function, we might be tempted to try to always run the test cases in the stated order and carry possible data (identities, handles, and so on) between the cases and therefore introduce dependencies between them.</source>
          <target state="translated">Существуют очевидные зависимости между перечисленными функциями.Сервер не может быть сконфигурирован,если он не был запущен в первый раз,соединение клиента будет подключаться до тех пор,пока сервер не будет сконфигурирован должным образом,и так далее.Если мы хотим иметь один тестовый случай для каждой функции,мы можем быть соблазн,чтобы попытаться всегда запускать тестовые случаи в указанном порядке и нести возможные данные (идентичности,ручки и т.д.)между случаями и,следовательно,ввести зависимости между ними.</target>
        </trans-unit>
        <trans-unit id="8523e884f51973cbccd87b9cb2dffcddaeb778e9" translate="yes" xml:space="preserve">
          <source>There are often sufficient means to work around the need for test case dependencies. Generally, the problem is related to the state of the System Under Test (SUT). The action of one test case can change the system state. For some other test case to run properly, this new state must be known.</source>
          <target state="translated">Часто бывает достаточно средств,чтобы обойти потребность в тестовых зависимостях.Как правило,проблема связана с состоянием тестируемой системы (SUT).Действие одного тестового случая может изменить состояние системы.Для корректной работы другого тестового случая это новое состояние должно быть известно.</target>
        </trans-unit>
        <trans-unit id="e108f06d2e6b2fe834e0d25027b8927df7aa555e" translate="yes" xml:space="preserve">
          <source>There are other types of runtime systems that can be built as well using the similar steps just described.</source>
          <target state="translated">Существуют и другие типы исполнительных систем,которые могут быть собраны с помощью аналогичных шагов,описанных выше.</target>
        </trans-unit>
        <trans-unit id="e163c970efe377af5c8f879ce7a54392863fd666" translate="yes" xml:space="preserve">
          <source>There are several algorithms for distributing records in a fragmented table evenly over a pool of nodes. No one is best, it depends on the application needs. The following examples of situations need some attention:</source>
          <target state="translated">Существует несколько алгоритмов равномерного распределения записей во фрагментированной таблице по пулу узлов.Никто не является лучшим,это зависит от потребностей приложения.Следующие примеры ситуаций требуют некоторого внимания:</target>
        </trans-unit>
        <trans-unit id="ba499c73dc1ea2d5a2d0497363ce986917b4ed09" translate="yes" xml:space="preserve">
          <source>There are several constraints available for testing whether a call is to a BIF or a function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3da498f3aa13476c3eb92930717e01466d88d04f" translate="yes" xml:space="preserve">
          <source>There are several error cases which may prevent an answer from being received and passed to a &lt;code&gt;handle_answer/4&lt;/code&gt; callback:</source>
          <target state="translated">Есть несколько случаев ошибок, которые могут помешать получению ответа и его &lt;code&gt;handle_answer/4&lt;/code&gt; обратный вызов handle_answer / 4 :</target>
        </trans-unit>
        <trans-unit id="d5e18c76899cc79f203e980d3f385f0b37cfdefe" translate="yes" xml:space="preserve">
          <source>There are several implementations provided with the agent: &lt;code&gt;snmpa_mib_storage_ets&lt;/code&gt;, &lt;code&gt;snmpa_mib_storage_dets&lt;/code&gt; and &lt;code&gt;snmpa_mib_storage_mnesia&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;snmpa_mib_storage_ets&lt;/code&gt; с агентом предоставляется несколько реализаций: snmpa_mib_storage_ets , &lt;code&gt;snmpa_mib_storage_dets&lt;/code&gt; и &lt;code&gt;snmpa_mib_storage_mnesia&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b3ff816ccd8ec855be66bcf7ca689d7727faafd3" translate="yes" xml:space="preserve">
          <source>There are several occasions when &lt;code&gt;Mnesia&lt;/code&gt; can detect that the network has been partitioned because of a communication failure, for example:</source>
          <target state="translated">Есть несколько случаев, когда &lt;code&gt;Mnesia&lt;/code&gt; может обнаружить, что сеть была разделена из-за сбоя связи, например:</target>
        </trans-unit>
        <trans-unit id="7c57bfac8bb05da0f5a10e7726d24981a1293333" translate="yes" xml:space="preserve">
          <source>There are several other process flags, see &lt;code&gt;erlang(3)&lt;/code&gt;. Changing the default behaviour of a process in this way is usually not done in standard user programs, but is left to the supervisory programs in OTP. However, the ping pong program is modified to illustrate exit trapping.</source>
          <target state="translated">Есть несколько других флагов процесса, см. &lt;code&gt;erlang(3)&lt;/code&gt; . Подобное изменение поведения процесса по умолчанию обычно не выполняется в стандартных пользовательских программах, а остается на усмотрение управляющих программ в OTP. Однако программа для игры в пинг-понг модифицирована, чтобы показать ловушку на выходе.</target>
        </trans-unit>
        <trans-unit id="8ff05058f0f15f23c288c9626be84922c9b765fc" translate="yes" xml:space="preserve">
          <source>There are several pre-made filter rule(s) and one general:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e75da42e192bf5430b68298e12cdc636289e3c2" translate="yes" xml:space="preserve">
          <source>There are several ways to send a binary created with &lt;code&gt;driver_alloc_binary()&lt;/code&gt;:</source>
          <target state="translated">Есть несколько способов отправить двоичный файл, созданный с помощью &lt;code&gt;driver_alloc_binary()&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="75f05fa20e3e2427a955f3a2446bd3c23ed22b34" translate="yes" xml:space="preserve">
          <source>There are several ways to write a metavariable in your quoted code:</source>
          <target state="translated">Есть несколько способов написать мета-переменную в вашем цитируемом коде:</target>
        </trans-unit>
        <trans-unit id="f82aa827e8118fb053e3d4c4658ad116b8c399af" translate="yes" xml:space="preserve">
          <source>There are six entry points in the Windows registry, top-level keys. They can be abbreviated in this module as follows:</source>
          <target state="translated">В реестре Windows есть шесть точек входа,ключи верхнего уровня.Их можно сократить в этом модуле следующим образом:</target>
        </trans-unit>
        <trans-unit id="70680607de60b05f98568bdca23a84c98a7353e4" translate="yes" xml:space="preserve">
          <source>There are some new data types in SNMPv2 that are useful in SNMPv1 as well. In the STANDARD-MIB, three data types are defined, &lt;code&gt;RowStatus&lt;/code&gt;, &lt;code&gt;TruthValue&lt;/code&gt; and &lt;code&gt;DateAndTime&lt;/code&gt;. These data types are originally defined as textual conventions in SNMPv2-TC (RFC1903).</source>
          <target state="translated">В SNMPv2 есть несколько новых типов данных, которые также полезны в SNMPv1. В STANDARD-MIB определены три типа данных: &lt;code&gt;RowStatus&lt;/code&gt; , &lt;code&gt;TruthValue&lt;/code&gt; и &lt;code&gt;DateAndTime&lt;/code&gt; . Эти типы данных изначально определены как текстовые соглашения в SNMPv2-TC (RFC1903).</target>
        </trans-unit>
        <trans-unit id="0e7ae6c930ff553042b2aaa2a5bab43d6e99da70" translate="yes" xml:space="preserve">
          <source>There are still a few percent-encoded triplets left in the output. At this point, when the URI is already parsed, it is safe to apply application specific decoding on the remaining character triplets. Erlang/OTP provides a function, &lt;code&gt;&lt;a href=&quot;uri_string#percent_decode-1&quot;&gt;uri_string:percent_decode/1&lt;/a&gt;&lt;/code&gt; for raw percent decoding that you can use on the host and path components, or on the whole map:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d7f436b6808fb57326aab28c43cc3d495d3886b" translate="yes" xml:space="preserve">
          <source>There are three built-in trace patterns: &lt;code&gt;exception_trace&lt;/code&gt;, &lt;code&gt;caller_trace&lt;/code&gt; and &lt;code&gt;caller_exception_trace&lt;/code&gt; (or &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;c&lt;/code&gt; and &lt;code&gt;cx&lt;/code&gt; respectively). Exception trace sets a trace which will show function names, parameters, return values and exceptions thrown from functions. Caller traces display function names, parameters and information about which function called it. An example using a built-in alias:</source>
          <target state="translated">Есть три встроенных шаблона трассировки: &lt;code&gt;exception_trace&lt;/code&gt; , &lt;code&gt;caller_trace&lt;/code&gt; и &lt;code&gt;caller_exception_trace&lt;/code&gt; (или &lt;code&gt;x&lt;/code&gt; , &lt;code&gt;c&lt;/code&gt; и &lt;code&gt;cx&lt;/code&gt; соответственно). Трассировка исключений устанавливает трассировку, которая будет показывать имена функций, параметры, возвращаемые значения и исключения, созданные функциями. Трассы вызывающего абонента отображают имена функций, параметры и информацию о том, какая функция вызвала его. Пример использования встроенного псевдонима:</target>
        </trans-unit>
        <trans-unit id="ce6e977a031f0f78d9783247027132e2871000ad" translate="yes" xml:space="preserve">
          <source>There are three entities: department, employee, and project.</source>
          <target state="translated">Существует три подразделения:отдел,сотрудник и проект.</target>
        </trans-unit>
        <trans-unit id="b95942457dca44926353518936009aaa1a127415" translate="yes" xml:space="preserve">
          <source>There are three explicitly capturing subpatterns, where the opening parenthesis position determines the order in the result, hence &lt;code&gt;((?&amp;lt;FOO&amp;gt;abdd)|a(..d))&lt;/code&gt; is subpattern index 1, &lt;code&gt;(?&amp;lt;FOO&amp;gt;abdd)&lt;/code&gt; is subpattern index 2, and &lt;code&gt;(..d)&lt;/code&gt; is subpattern index 3. When matched against the following string:</source>
          <target state="translated">Есть три явно захватывающих подшаблона, где позиция открывающих скобок определяет порядок в результате, следовательно &lt;code&gt;((?&amp;lt;FOO&amp;gt;abdd)|a(..d))&lt;/code&gt; - это подшаблон с индексом 1, &lt;code&gt;(?&amp;lt;FOO&amp;gt;abdd)&lt;/code&gt; - подшаблон индекс 2, а &lt;code&gt;(..d)&lt;/code&gt; - индекс подшаблона 3. При сопоставлении со следующей строкой:</target>
        </trans-unit>
        <trans-unit id="b9d8071a7cab5fe6bb06cfbf16feb00bf5b9bf05" translate="yes" xml:space="preserve">
          <source>There are three kinds of configuration:</source>
          <target state="translated">Существует три вида конфигурации:</target>
        </trans-unit>
        <trans-unit id="6f596c95045c35d0f6872618b7a800aff23b78f1" translate="yes" xml:space="preserve">
          <source>There are three main reasons for using this mapping:</source>
          <target state="translated">Существуют три основные причины использования этого картографирования:</target>
        </trans-unit>
        <trans-unit id="21dcf13609dda19f86b7a0c362b1f37accd05aea" translate="yes" xml:space="preserve">
          <source>There are three relationships between these entities:</source>
          <target state="translated">Между этими организациями существуют три связи:</target>
        </trans-unit>
        <trans-unit id="a6f8a9d2ff844ea14957c3bca79e832dabec9620" translate="yes" xml:space="preserve">
          <source>There are to be no circular dependencies among the applications.</source>
          <target state="translated">Не должно быть никаких круговых зависимостей между приложениями.</target>
        </trans-unit>
        <trans-unit id="a76c3a9ace292c2e0f4031bfd80c3c9f908baded" translate="yes" xml:space="preserve">
          <source>There are to be no duplicated modules, that is, modules with the same name but belonging to different applications.</source>
          <target state="translated">Не должно быть дублирующих друг друга модулей,то есть модулей с одним и тем же именем,но принадлежащих различным приложениям.</target>
        </trans-unit>
        <trans-unit id="b018774fca4517707ee8766e662ecc9fb5f61fbf" translate="yes" xml:space="preserve">
          <source>There are to be no undefined applications, that is, dependencies to applications that are not included in the release. (Key &lt;code&gt;applications&lt;/code&gt; in the &lt;code&gt;.app&lt;/code&gt; file).</source>
          <target state="translated">Не должно быть неопределенных приложений, то есть зависимостей от приложений, которые не включены в выпуск. (Ключевые &lt;code&gt;applications&lt;/code&gt; в файле &lt;code&gt;.app&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="8657af51c1708a2f767083749fec728b2f15dd21" translate="yes" xml:space="preserve">
          <source>There are two Elisp modules included in this tool package for Emacs. There is erlang.el that defines the actual erlang mode and there is erlang-start.el that makes some nice initializations.</source>
          <target state="translated">В этот пакет включены два модуля Elisp для Emacs.Есть erlang.el,который определяет реальный режим erlang,и есть erlang-start.el,который делает некоторые приятные инициализации.</target>
        </trans-unit>
        <trans-unit id="4650ca14e027a543e950b128c780c1aff1d2ced2" translate="yes" xml:space="preserve">
          <source>There are two alternatives for &lt;code&gt;select&lt;/code&gt;:</source>
          <target state="translated">Для &lt;code&gt;select&lt;/code&gt; есть две альтернативы :</target>
        </trans-unit>
        <trans-unit id="e8bf9361085b975630319d83556ce12329f9229c" translate="yes" xml:space="preserve">
          <source>There are two basic ways to use the binary encodings: With package related name and termination id transformation (the 'native' encoding config) or without. This transformation converts package related names and termination id's to a more convenient internal form (equivalent with the decoded text message).</source>
          <target state="translated">Существует два основных способа использования бинарных кодировок:С преобразованием имени пакета и идентификатора завершения (конфигурация 'родной' кодировки)или без него.Это преобразование преобразует имена,связанные с пакетами и идентификаторы завершения в более удобную внутреннюю форму (эквивалентную декодированному текстовому сообщению).</target>
        </trans-unit>
        <trans-unit id="dd1db3d75a354d15737e7ae7563e82290092028f" translate="yes" xml:space="preserve">
          <source>There are two categories of modules on the &lt;code&gt;Dependencies&lt;/code&gt; page. If the module is used by other modules, these are listed under &lt;code&gt;Modules using this&lt;/code&gt;. If the module uses other modules, these are listed under &lt;code&gt;Used modules&lt;/code&gt;.</source>
          <target state="translated">На странице &lt;code&gt;Dependencies&lt;/code&gt; есть две категории модулей . Если модуль используется другими модулями, они перечислены в разделе &amp;laquo; &lt;code&gt;Modules using this&lt;/code&gt; . Если модуль использует другие модули, они перечислены в разделе &amp;laquo; &lt;code&gt;Used modules&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="887d7e8bf421025bcb8d521eeed1d2552d08027f" translate="yes" xml:space="preserve">
          <source>There are two categories of modules on the &lt;code&gt;Module dependencies&lt;/code&gt; page. If the module is used by other modules, these are listed under &lt;code&gt;Modules using this&lt;/code&gt;. If the module uses other modules, these are listed under &lt;code&gt;Used modules&lt;/code&gt;.</source>
          <target state="translated">На странице &lt;code&gt;Module dependencies&lt;/code&gt; модулей есть две категории модулей . Если модуль используется другими модулями, они перечислены в разделе &amp;laquo; &lt;code&gt;Modules using this&lt;/code&gt; . Если модуль использует другие модули, они перечислены в разделе &amp;laquo; &lt;code&gt;Used modules&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e74dd0da2a3747be954c0f8457f4880fc1f5333a" translate="yes" xml:space="preserve">
          <source>There are two differences when using Erl_Interface on the C side compared to the example in &lt;code&gt;&lt;a href=&quot;c_port&quot;&gt; Ports&lt;/a&gt;&lt;/code&gt;, using only the plain port:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="599878b5a82e164996281429b80e489ea9c477d5" translate="yes" xml:space="preserve">
          <source>There are two differences when using Erl_Interface on the C side compared to the example in &lt;code&gt;&lt;a href=&quot;c_port&quot;&gt;Ports&lt;/a&gt;&lt;/code&gt;, using only the plain port:</source>
          <target state="translated">Есть два отличия при использовании Erl_Interface на стороне C по сравнению с примером в &lt;code&gt;&lt;a href=&quot;c_port&quot;&gt;Ports&lt;/a&gt;&lt;/code&gt; , где используется только простой порт:</target>
        </trans-unit>
        <trans-unit id="23c004d4c8512a14978a320110e39b1a0ff94575" translate="yes" xml:space="preserve">
          <source>There are two different measurement tools:</source>
          <target state="translated">Есть два разных инструмента измерения:</target>
        </trans-unit>
        <trans-unit id="a94aa96b73c7ee440863f41a5aef58bc994511af" translate="yes" xml:space="preserve">
          <source>There are two implementations available:</source>
          <target state="translated">Существует две реализации:</target>
        </trans-unit>
        <trans-unit id="6b217d8aaa3bcdc7db2e259b15d48c394ea4df29" translate="yes" xml:space="preserve">
          <source>There are two kinds of variables: predefined variables and user variables.  &lt;strong id=&quot;predefined_variable&quot;&gt;Predefined variables&lt;/strong&gt; hold set up module data, and cannot be assigned to but only used in queries.  &lt;strong id=&quot;user_variable&quot;&gt;User variables&lt;/strong&gt; on the other hand can be assigned to, and are typically used for temporary results while evaluating a query, and for keeping results of queries for use in subsequent queries. The predefined variables are (variables marked with (*) are available in &lt;code&gt;functions&lt;/code&gt; mode only):</source>
          <target state="translated">Есть два типа переменных: предопределенные переменные и пользовательские переменные. &lt;strong id=&quot;predefined_variable&quot;&gt;Предопределенные переменные&lt;/strong&gt; содержат настроенные данные модуля и не могут быть назначены, а используются только в запросах. &lt;strong id=&quot;user_variable&quot;&gt;С&lt;/strong&gt; другой стороны, &lt;strong id=&quot;user_variable&quot;&gt;пользовательские переменные&lt;/strong&gt; могут быть присвоены и обычно используются для временных результатов при оценке запроса, а также для сохранения результатов запросов для использования в последующих запросах. Предопределенные переменные (переменные, отмеченные (*), доступны только в режиме &lt;code&gt;functions&lt;/code&gt; ):</target>
        </trans-unit>
        <trans-unit id="51e96249f31fef90280598a64efcee667d150bd9" translate="yes" xml:space="preserve">
          <source>There are two known shortcomings in xmerl:</source>
          <target state="translated">Есть два известных недостатка в xmerl:</target>
        </trans-unit>
        <trans-unit id="99e9898726a4d1ec0a543937d2f79fae5062fc44" translate="yes" xml:space="preserve">
          <source>There are two occasions when the young heap grows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9f480805fea8601c547a9eb29f50f8f9cd8ca43" translate="yes" xml:space="preserve">
          <source>There are two occasions when the young heap is shrunk:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc0e3ffc28ca1f923c575a2ec112ffd273f7f33c" translate="yes" xml:space="preserve">
          <source>There are two options for handling syntax errors (that is when an unexpected event is received when the digit map evaluator is expecting some other event). The unexpected events may either be ignored or rejected. The latter means that the evaluation is aborted and an error is returned.</source>
          <target state="translated">Существует два варианта обработки синтаксических ошибок (т.е.когда поступает неожиданное событие,когда вычислитель цифровой карты ожидает какое-либо другое событие).Неожиданные события могут быть либо проигнорированы,либо отклонены.Последнее означает,что оценка прерывается и возвращается ошибка.</target>
        </trans-unit>
        <trans-unit id="e7ea701d75f10ddf239c1c9acff7a8b7f85969f9" translate="yes" xml:space="preserve">
          <source>There are two reasons why &lt;code&gt;first/1&lt;/code&gt; and &lt;code&gt;next/2&lt;/code&gt; are not to be used: they are not efficient, and they prevent the use of key &lt;code&gt;'$end_of_table'&lt;/code&gt;, as this atom is used to indicate the end of the table. If possible, use functions &lt;code&gt;&lt;a href=&quot;#match-1&quot;&gt;match&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#match_object-1&quot;&gt;match_object&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;#select-1&quot;&gt;select&lt;/a&gt;&lt;/code&gt; for traversing tables.</source>
          <target state="translated">Есть две причины, по которым нельзя использовать &lt;code&gt;first/1&lt;/code&gt; и &lt;code&gt;next/2&lt;/code&gt; : они неэффективны и предотвращают использование ключа &lt;code&gt;'$end_of_table'&lt;/code&gt; , поскольку этот атом используется для обозначения конца таблицы. Если возможно, используйте функции &lt;code&gt;&lt;a href=&quot;#match-1&quot;&gt;match&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#match_object-1&quot;&gt;match_object&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;#select-1&quot;&gt;select&lt;/a&gt;&lt;/code&gt; для обхода таблиц.</target>
        </trans-unit>
        <trans-unit id="80545dc051cca46852b43329d06d54cf9d266b54" translate="yes" xml:space="preserve">
          <source>There are two significant differences when using this function instead of reading the record, performing the arithmetic, and writing the record:</source>
          <target state="translated">Существуют два существенных отличия при использовании этой функции вместо чтения записи,выполнения арифметики и записи записи:</target>
        </trans-unit>
        <trans-unit id="7dad1bd4e1026419dc7de0c5664baefca6532877" translate="yes" xml:space="preserve">
          <source>There are two special cases for the timeout value &lt;code&gt;ExprT&lt;/code&gt;:</source>
          <target state="translated">Существует два особых случая для значения тайм-аута &lt;code&gt;ExprT&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c56d561a526dd7ff6bad858caa6d005781753b5c" translate="yes" xml:space="preserve">
          <source>There are two types of numeric literals, &lt;strong&gt;integers&lt;/strong&gt; and &lt;strong&gt;floats&lt;/strong&gt;. Besides the conventional notation, there are two Erlang-specific notations:</source>
          <target state="translated">Есть два типа числовых литералов: &lt;strong&gt;целые числа&lt;/strong&gt; и &lt;strong&gt;числа&lt;/strong&gt; с &lt;strong&gt;плавающей запятой&lt;/strong&gt; . Помимо общепринятых обозначений, существуют две специфичные для Erlang обозначения:</target>
        </trans-unit>
        <trans-unit id="a3c927021e9667cac0b76e4d583b237c1b874a0a" translate="yes" xml:space="preserve">
          <source>There are two types of unique integers both created using the &lt;code&gt;erlang:unique_integer()&lt;/code&gt; BIF:</source>
          <target state="translated">Есть два типа уникальных целых чисел, которые создаются с помощью &lt;code&gt;erlang:unique_integer()&lt;/code&gt; BIF:</target>
        </trans-unit>
        <trans-unit id="adcec4978d9685360563b69cc57cc9c6d0c475d9" translate="yes" xml:space="preserve">
          <source>There are two versions of the &lt;code&gt;server_transfer&lt;/code&gt; function: one with four arguments (&lt;code&gt;server_transfer/4&lt;/code&gt;) and one with five (&lt;code&gt;server_transfer/5&lt;/code&gt;). These are regarded by Erlang as two separate functions.</source>
          <target state="translated">Существует две версии функции &lt;code&gt;server_transfer&lt;/code&gt; : одна с четырьмя аргументами ( &lt;code&gt;server_transfer/4&lt;/code&gt; ) и одна с пятью ( &lt;code&gt;server_transfer/5&lt;/code&gt; ). Они рассматриваются в Erlang как две отдельные функции.</target>
        </trans-unit>
        <trans-unit id="1b723932d3f965d03f997c2929d90177ac53f1a0" translate="yes" xml:space="preserve">
          <source>There are two ways of shutting down an &lt;code&gt;ssh&lt;/code&gt; daemon, see &lt;strong&gt;Step 5a&lt;/strong&gt; and &lt;strong&gt;Step 5b&lt;/strong&gt;.</source>
          <target state="translated">Есть два способа выключить демон &lt;code&gt;ssh&lt;/code&gt; , см. &lt;strong&gt;Шаг 5a&lt;/strong&gt; и &lt;strong&gt;Шаг 5b&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="ca0c875bf6657b9c2873d094d99069621f5c3b26" translate="yes" xml:space="preserve">
          <source>There are two ways to define internal generic instructions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67a5f230cec8e69ad074e79327cb344b91c01c42" translate="yes" xml:space="preserve">
          <source>There are two ways to handle the different megaco encoding versions. Either using &lt;strong&gt;dynamic version detection&lt;/strong&gt; (only valid for for incoming messages) or by &lt;strong&gt;explicit version&lt;/strong&gt; setting in the connection info.</source>
          <target state="translated">Есть два способа обработки различных версий кодирования мегако. Либо с использованием &lt;strong&gt;динамического определения версии&lt;/strong&gt; (действительно только для входящих сообщений), либо путем &lt;strong&gt;явной&lt;/strong&gt; установки &lt;strong&gt;версии&lt;/strong&gt; в информации о соединении.</target>
        </trans-unit>
        <trans-unit id="d9e65fcf80d23dd2690fb225a26bd4c0425947c3" translate="yes" xml:space="preserve">
          <source>There are two ways to include comments in patterns that are processed by PCRE. In both cases, the start of the comment must not be in a character class, or in the middle of any other sequence of related characters such as (?: or a subpattern name or number. The characters that make up a comment play no part in the pattern matching.</source>
          <target state="translated">Существует два способа включения комментариев в шаблоны,которые обрабатываются PCRE.В обоих случаях начало комментария не должно располагаться в классе символов или посередине любой другой последовательности связанных символов,таких как (?:или имя или номер подшаблона.Символы,составляющие комментарий,не играют никакой роли в совпадении образца.</target>
        </trans-unit>
        <trans-unit id="d20c200558da5edbf4cd1004014da1b7247909e5" translate="yes" xml:space="preserve">
          <source>There are two ways to set a timeout for the underlying ssh connection:</source>
          <target state="translated">Есть два способа установить таймаут для основного соединения ssh:</target>
        </trans-unit>
        <trans-unit id="f355209178288a170c04f2c9a20a04655a8e5d7d" translate="yes" xml:space="preserve">
          <source>There are two ways to start a restricted shell session:</source>
          <target state="translated">Есть два способа начать сеанс ограниченной оболочки:</target>
        </trans-unit>
        <trans-unit id="6b5c659495ea0b68ab11f6dd415042864496550c" translate="yes" xml:space="preserve">
          <source>There are various reasons for using multi-file compilation:</source>
          <target state="translated">Существуют различные причины использования многофайловой компиляции:</target>
        </trans-unit>
        <trans-unit id="a4bd267d265d01937064d3e1fb0e66e780b2cf5c" translate="yes" xml:space="preserve">
          <source>There can be more than one back reference to the same subpattern. If a subpattern has not been used in a particular match, any back references to it always fails. For example, the following pattern always fails if it starts to match &quot;a&quot; rather than &quot;bc&quot;:</source>
          <target state="translated">Может быть более одной обратной ссылки на одну и ту же подмакетку.Если подмаска не была использована в определенном совпадении,любая обратная ссылка на нее всегда дает сбой.Например,следующая подмаска всегда дает сбой,если она начинает совпадать с &quot;a&quot;,а не с &quot;bc&quot;:</target>
        </trans-unit>
        <trans-unit id="23ffd59215d348fa8988a623fd249aee7018b927" translate="yes" xml:space="preserve">
          <source>There can be no more than four parameters of any type (integer() or string()), so the first parameter has to be an integer() and the last a string().</source>
          <target state="translated">Не может быть более четырех параметров любого типа (integer()или string()),поэтому первым параметром должна быть функция integer(),а последним-функция string().</target>
        </trans-unit>
        <trans-unit id="1112d47dc0a89deb75a8a7d00a4b483aae845be6" translate="yes" xml:space="preserve">
          <source>There can be no more than four parameters of any type (integer() or string()), so the first three parameters has to be integer()'s and the last three string()'s.</source>
          <target state="translated">Не может быть более четырех параметров любого типа (integer()или string()),поэтому первые три параметра должны быть функциями integer()и последние три string().</target>
        </trans-unit>
        <trans-unit id="abdb1ae11dc35da6f7877497944147afcc093ef4" translate="yes" xml:space="preserve">
          <source>There can be no more than four parameters of any type (integer() or string()), so the first two parameters has to be integer()'s and the last two string()'s.</source>
          <target state="translated">Не может быть более четырех параметров любого типа (integer()или string()),поэтому первые два параметра должны быть функциями integer()и последние два string().</target>
        </trans-unit>
        <trans-unit id="a9363b97aec7cf5ddf082ad0d169c592d9050f71" translate="yes" xml:space="preserve">
          <source>There can be zero or more segments in a binary pattern. A binary pattern can occur wherever patterns are allowed, including inside other patterns. Binary patterns cannot be nested. The pattern &lt;code&gt;&amp;lt;&amp;lt;&amp;gt;&amp;gt;&lt;/code&gt; matches a zero length binary.</source>
          <target state="translated">В двоичном шаблоне может быть ноль или более сегментов. Бинарный шаблон может встречаться везде, где разрешены шаблоны, в том числе внутри других шаблонов. Бинарные шаблоны не могут быть вложенными. Шаблон &lt;code&gt;&amp;lt;&amp;lt;&amp;gt;&amp;gt;&lt;/code&gt; соответствует двоичному файлу нулевой длины.</target>
        </trans-unit>
        <trans-unit id="e406e24fdab0c44cf1156b1456ae80afb50bb754" translate="yes" xml:space="preserve">
          <source>There can be zero or more segments in a binary to be constructed. The expression &lt;code&gt;&amp;lt;&amp;lt;&amp;gt;&amp;gt;&lt;/code&gt; constructs a zero length binary.</source>
          <target state="translated">В создаваемом двоичном файле может быть ноль или более сегментов. Выражение &lt;code&gt;&amp;lt;&amp;lt;&amp;gt;&amp;gt;&lt;/code&gt; создает двоичный файл нулевой длины.</target>
        </trans-unit>
        <trans-unit id="92428ad0a4bfb32617492b37faa92496b8ccd220" translate="yes" xml:space="preserve">
          <source>There exist a number of other &lt;code&gt;spawn&lt;/code&gt; BIFs, for example, &lt;code&gt;spawn/4&lt;/code&gt; for spawning a process at another node.</source>
          <target state="translated">Там существует целый ряд других &lt;code&gt;spawn&lt;/code&gt; BIFS, например, &lt;code&gt;spawn/4&lt;/code&gt; для порождая процесс на другом узле.</target>
        </trans-unit>
        <trans-unit id="0bf1452fa6d696c476949e9f9eb92d75ee28307f" translate="yes" xml:space="preserve">
          <source>There exists a number of BIFs to manipulate maps.</source>
          <target state="translated">Существует ряд BIF для манипулирования картами.</target>
        </trans-unit>
        <trans-unit id="5a19838f7ca93f30ce58e7113784f915faaff575" translate="yes" xml:space="preserve">
          <source>There exists a number of BIFs to manipulate tuples.</source>
          <target state="translated">Существует несколько БИФов для манипулирования кортежами.</target>
        </trans-unit>
        <trans-unit id="d71ba36f320e1a48ef1d206a22dd1cb9d13cc9ef" translate="yes" xml:space="preserve">
          <source>There is &lt;strong&gt;no&lt;/strong&gt; automatic mechanism for avoiding priority inversion, such as priority inheritance or priority ceilings. When using priorities, take this into account and handle such scenarios by yourself.</source>
          <target state="translated">Не &lt;strong&gt;существует&lt;/strong&gt; автоматического механизма, позволяющего избежать инверсии приоритета, например наследования приоритета или ограничения приоритета. При использовании приоритетов учитывайте это и справляйтесь с такими сценариями самостоятельно.</target>
        </trans-unit>
        <trans-unit id="9a070af877637494ae1a1cb6aabfadc95370405a" translate="yes" xml:space="preserve">
          <source>There is a &lt;code&gt;&lt;a href=&quot;configure_algos#introduction&quot;&gt;separate chapter&lt;/a&gt;&lt;/code&gt; about how &lt;code&gt;&lt;a href=&quot;ssh#type-preferred_algorithms_common_option&quot;&gt;preferred_algorithms&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;ssh#type-modify_algorithms_common_option&quot;&gt;modify_algorithms&lt;/a&gt;&lt;/code&gt; co-operate. How the different configuration levels affect them, is described here in this section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e441464fc3e7bb22aba940b66dbb7ca5c94b38df" translate="yes" xml:space="preserve">
          <source>There is a &lt;code&gt;server&lt;/code&gt; config option, &lt;code&gt;&lt;a href=&quot;snmp_config#manager_server_nis&quot;&gt;netif_sup&lt;/a&gt;&lt;/code&gt; that enables &quot;active&quot; Net If supervision. This is very simple mechanism. The (supervising) process simply sends a &lt;code&gt;&lt;a href=&quot;#im_ping&quot;&gt;ping&lt;/a&gt;&lt;/code&gt; message and expects a &lt;code&gt;&lt;a href=&quot;#om_pong&quot;&gt;pong&lt;/a&gt;&lt;/code&gt; message response (withing a specific time). The interval between each &lt;code&gt;ping/pong&lt;/code&gt; exhange is user configurable. As is the time that is allowed for the &lt;code&gt;&lt;a href=&quot;#om_pong&quot;&gt;pong&lt;/a&gt;&lt;/code&gt; message to arrive. Both the NetIf module(s) provided with the app supports active supervision. If a NetIf module/process is used which do not implement this, then the server cannot be configured with active supervision.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea2c52d8c1115defbbd414994b65799bf1261e4f" translate="yes" xml:space="preserve">
          <source>There is a MIB, SNMP-COMMUNITY-MIB, which maps a community string to a &lt;code&gt;contextEngineID&lt;/code&gt; and &lt;code&gt;contextName&lt;/code&gt;. Thus, each message, an SNMPv1, SNMPv2c or an SNMPv3 message, always uniquely identifies a context.</source>
          <target state="translated">Существует MIB, SNMP-COMMUNITY-MIB, который отображает строку сообщества в &lt;code&gt;contextEngineID&lt;/code&gt; и &lt;code&gt;contextName&lt;/code&gt; . Таким образом, каждое сообщение, сообщение SNMPv1, SNMPv2c или SNMPv3, всегда однозначно идентифицирует контекст.</target>
        </trans-unit>
        <trans-unit id="4962d5e61edd677f3200f2d2f1cbd369fddee679" translate="yes" xml:space="preserve">
          <source>There is a bit of setup needed to allow filters to decide whether a specific process should be allowed to log. This is because the default primary log level is notice and it is enforced before the primary filters. So in order for the pid filter to be useful we have to raise the primary log level to &lt;code&gt;all&lt;/code&gt; and then add a level filter that only lets certain messages at or greater than notice through. When the setup is done, it is simple to add a filter that allows a certain pid through.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ade9e507a62a79d9f797b73458450166ab26545" translate="yes" xml:space="preserve">
          <source>There is a default hostname matching procedure defined in &lt;code&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc6125#section-6&quot;&gt;RFC 6125, section 6&lt;/a&gt;&lt;/code&gt; as well as protocol dependent variations defined in &lt;code&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc6125#appendix-B&quot;&gt;RFC 6125 appendix B&lt;/a&gt;&lt;/code&gt;. The default procedure is implemented in &lt;code&gt;public_key:pkix_verify_hostname/2,3&lt;/code&gt;. It is possible for a client to hook in modified rules using the options list.</source>
          <target state="translated">Существует процедура сопоставления имен хостов по умолчанию, определенная в &lt;code&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc6125#section-6&quot;&gt;RFC 6125, section 6&lt;/a&gt;&lt;/code&gt; а также варианты, зависящие от протокола, определенные в &lt;code&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc6125#appendix-B&quot;&gt;RFC 6125 appendix B&lt;/a&gt;&lt;/code&gt; . Процедура по умолчанию реализована в &lt;code&gt;public_key:pkix_verify_hostname/2,3&lt;/code&gt; . Клиент может подключиться к измененным правилам, используя список опций.</target>
        </trans-unit>
        <trans-unit id="a6736bbeb782d86b747de9c6e8819acd895d1cff" translate="yes" xml:space="preserve">
          <source>There is a default hostname matching procedure defined in &lt;code&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc6125#section/6&quot;&gt;RFC 6125, section 6&lt;/a&gt;&lt;/code&gt; as well as protocol dependent variations defined in &lt;code&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc6125#appendix-B&quot;&gt;RFC 6125 appendix B&lt;/a&gt;&lt;/code&gt;. The default procedure is implemented in &lt;code&gt;public_key:pkix_verify_hostname/2,3&lt;/code&gt;. It is possible for a client to hook in modified rules using the options list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d57b5d67847213c70927a42448b10614ec369aea" translate="yes" xml:space="preserve">
          <source>There is a scaling problem with this database.</source>
          <target state="translated">Существует проблема с масштабированием этой базы данных.</target>
        </trans-unit>
        <trans-unit id="2622c0a39c247fb494769606e0e52cccfb438701" translate="yes" xml:space="preserve">
          <source>There is a set of standard MIBs, which are used to control and configure an SNMP agent. All of these MIBs, with the exception of the optional SNMP-PROXY-MIB (which is only used for proxy agents), are implemented in this agent. Further, it is configurable which of these MIBs are actually loaded, and thus made visible to SNMP managers. For example, in a non-secure environment, it might be a good idea to not make MIBs that define access control visible. Note, the data the MIBs define is used internally in the agent, even if the MIBs not are loaded. This chapter describes these standard MIBs, and some aspects of their implementation.</source>
          <target state="translated">Существует набор стандартных MIB,которые используются для управления и настройки SNMP агента.Все эти MIB,за исключением дополнительного SNMP-PROXY-MIB (который используется только для прокси-агентов),реализованы в данном агенте.Кроме того,можно настраивать,какие из этих MIB-агентов фактически загружены и,таким образом,становятся видимыми для менеджеров SNMP.Например,в небезопасной среде,возможно,будет хорошей идеей не делать MIB,которые определяют контроль доступа видимыми.Обратите внимание,данные,определяющие MIB,используются внутри агента,даже если MIB не загружены.В этой главе описываются эти стандартные MIB,а также некоторые аспекты их реализации.</target>
        </trans-unit>
        <trans-unit id="245adc1cc09d9e8cf3fbaea30fefe11a104de911" translate="yes" xml:space="preserve">
          <source>There is a severe performance penalty in using &lt;code&gt;mnesia:select/[1|2|3|4]&lt;/code&gt; after any modifying operation is done on that table in the same transaction. That is, avoid using &lt;code&gt;&lt;a href=&quot;mnesia#write-1&quot;&gt;mnesia:write/1&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;mnesia#delete-1&quot;&gt;mnesia:delete/1&lt;/a&gt;&lt;/code&gt; before &lt;code&gt;mnesia:select&lt;/code&gt; in the same transaction.</source>
          <target state="translated">Использование &lt;code&gt;mnesia:select/[1|2|3|4]&lt;/code&gt; приводит к серьезному снижению производительности после того, как в этой же транзакции выполняется любая операция изменения этой таблицы. То есть избегайте использования &lt;code&gt;&lt;a href=&quot;mnesia#write-1&quot;&gt;mnesia:write/1&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;mnesia#delete-1&quot;&gt;mnesia:delete/1&lt;/a&gt;&lt;/code&gt; перед &lt;code&gt;mnesia:select&lt;/code&gt; в той же транзакции.</target>
        </trans-unit>
        <trans-unit id="fd2145693c339b562c11a1ada444dad48f07688b" translate="yes" xml:space="preserve">
          <source>There is a special case for the argument &lt;code&gt;Length&lt;/code&gt;. If it is set to zero (0), it means &quot;give me everything you currently have&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e3a6368bd3434309374ec5b9d503fef73c80480" translate="yes" xml:space="preserve">
          <source>There is a special case for this field. When the &lt;code&gt;max_retries&lt;/code&gt; has the value &lt;code&gt;infinity_restartable&lt;/code&gt;, it means that the timer is restartable as long as some external event occurs (e.g. receipt of a pending message for instance). But the timer will never be restarted &quot;by itself&quot;, i.e. when the timer expires (whatever the timeout time), so does the timer. Whenever the timer is restarted, the timeout time will be calculated in the usual way! Also, as mentioned above, beware the consequences of setting the value to &lt;code&gt;infinity&lt;/code&gt; if &lt;strong&gt;incr&lt;/strong&gt; has been set to an negative value.</source>
          <target state="translated">Для этого поля есть особый случай. Когда &lt;code&gt;max_retries&lt;/code&gt; имеет значение &lt;code&gt;infinity_restartable&lt;/code&gt; , это означает, что таймер можно перезапустить, пока происходит какое-то внешнее событие (например, получение ожидающего сообщения). Но таймер никогда не будет перезапущен &amp;laquo;сам по себе&amp;raquo;, то есть по истечении времени таймера (независимо от времени тайм-аута), как и таймер. Каждый раз при перезапуске таймера время ожидания будет рассчитываться обычным образом! Также, как упоминалось выше, остерегайтесь последствий установки значения на &lt;code&gt;infinity&lt;/code&gt; если &lt;strong&gt;incr&lt;/strong&gt; было установлено на отрицательное значение.</target>
        </trans-unit>
        <trans-unit id="518160f1e4844414329120e09f304c63bc2e3610" translate="yes" xml:space="preserve">
          <source>There is a way to exclude a varbind from the notification. In the normal &lt;code&gt;varbinds&lt;/code&gt; list, providing the special value &lt;code&gt;'$ignore-oid'&lt;/code&gt; (instead of a normal value) will exclude this varbind from the notification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="447c2e61ea99ad24abf33df5c7d87ca6d434b459" translate="yes" xml:space="preserve">
          <source>There is also a &quot;default&quot; value, which has the empty string as name. It is read and written with the atom &lt;code&gt;default&lt;/code&gt; instead of the name.</source>
          <target state="translated">Также существует значение &quot;по умолчанию&quot;, в котором в качестве имени используется пустая строка. Он читается и записывается с использованием атома по &lt;code&gt;default&lt;/code&gt; вместо имени.</target>
        </trans-unit>
        <trans-unit id="72a2dc39e7a01a6896da1efca2f9a2f1bfe9f0eb" translate="yes" xml:space="preserve">
          <source>There is also a file that only contains macro definitions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f4ba43d3ad9541719761e12f97fd9eb701de696" translate="yes" xml:space="preserve">
          <source>There is also a interface to system dependent memory data, &lt;code&gt;&lt;a href=&quot;#get_system_memory_data-0&quot;&gt;get_system_memory_data()&lt;/a&gt;&lt;/code&gt;. The result is highly dependent on the underlying operating system and the interface is targeted primarily for systems without virtual memory (e.g. VxWorks). The output on other systems is however still valid, although sparse.</source>
          <target state="translated">Также существует интерфейс для системных данных в памяти, &lt;code&gt;&lt;a href=&quot;#get_system_memory_data-0&quot;&gt;get_system_memory_data()&lt;/a&gt;&lt;/code&gt; . Результат сильно зависит от базовой операционной системы, а интерфейс предназначен в первую очередь для систем без виртуальной памяти (например, VxWorks). Однако выходные данные в других системах все еще действительны, хотя и немногочисленны.</target>
        </trans-unit>
        <trans-unit id="f33caba16ae1707839afdef5cf02caa858272566" translate="yes" xml:space="preserve">
          <source>There is also a interface to system dependent memory data, &lt;code&gt;&lt;a href=&quot;#get_system_memory_data-0&quot;&gt;get_system_memory_data()&lt;/a&gt;&lt;/code&gt;. The result is highly dependent on the underlying operating system and the interface is targeted primarily for systems without virtual memory. However, the output on other systems is still valid, although sparse.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52cbe6243fc1056f1d917ea0abcda645d19b3500" translate="yes" xml:space="preserve">
          <source>There is also a low limit. When the amount of queued &lt;code&gt;command&lt;/code&gt; data falls below this limit and the port is in a busy port queue state, the busy port queue state is automatically disabled. The low limit should typically be significantly lower than the high limit in order to prevent frequent oscillation around the busy port queue state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c9bc41f259857156ea8f5d5261fcd25f2b407e3" translate="yes" xml:space="preserve">
          <source>There is also a module &lt;code&gt;make&lt;/code&gt;, which provides a set of functions similar to the UNIX type Make functions, see the &lt;code&gt;make(3)&lt;/code&gt; manual page in Tools.</source>
          <target state="translated">Существует также модуль &lt;code&gt;make&lt;/code&gt; , который предоставляет набор функций, аналогичных функциям Make в UNIX, см. Страницу руководства &lt;code&gt;make(3)&lt;/code&gt; в разделе Инструменты.</target>
        </trans-unit>
        <trans-unit id="d5ca1aa3efc4be83f80c48a432fa83fd2335f9cf" translate="yes" xml:space="preserve">
          <source>There is also a server start option &lt;code&gt;&lt;a href=&quot;#type-enter_loop_opt&quot;&gt; {hibernate_after, Timeout} &lt;/a&gt;&lt;/code&gt; for &lt;code&gt;&lt;a href=&quot;#start-3&quot;&gt;start/3,4&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#start_monitor-3&quot;&gt;start_monitor/3,4&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#start_link-3&quot;&gt;start_link/3,4&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#enter_loop-4&quot;&gt;enter_loop/4,5,6&lt;/a&gt;&lt;/code&gt;, that may be used to automatically hibernate the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dad695a19ca238ba2a763d955fb786b98d2dc49" translate="yes" xml:space="preserve">
          <source>There is also a server start option &lt;code&gt;&lt;a href=&quot;#type-hibernate_after_opt&quot;&gt;{hibernate_after, Timeout}&lt;/a&gt;&lt;/code&gt; for &lt;code&gt;&lt;a href=&quot;#start-3&quot;&gt;start/3,4&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#start_link-3&quot;&gt;start_link/3,4&lt;/a&gt;&lt;/code&gt; that may be used to automatically hibernate the server.</source>
          <target state="translated">Также существует опция запуска сервера &lt;code&gt;&lt;a href=&quot;#type-hibernate_after_opt&quot;&gt;{hibernate_after, Timeout}&lt;/a&gt;&lt;/code&gt; для &lt;code&gt;&lt;a href=&quot;#start-3&quot;&gt;start/3,4&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;#start_link-3&quot;&gt;start_link/3,4&lt;/a&gt;&lt;/code&gt; , которая может использоваться для автоматического перехода сервера в спящий режим.</target>
        </trans-unit>
        <trans-unit id="f24b3a3437fd8a632ab4bcd78a41f42013e20b72" translate="yes" xml:space="preserve">
          <source>There is also a type test BIF &lt;code&gt;is_record(Term, RecordTag)&lt;/code&gt;.</source>
          <target state="translated">Также существует типовой тест BIF &lt;code&gt;is_record(Term, RecordTag)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="daa23f797927415980ee4810932d3c90b6953794" translate="yes" xml:space="preserve">
          <source>There is also an API to block or unblock users manually. This API can also list blocked users or users who have been authenticated within a configurable amount of time.</source>
          <target state="translated">Также существует API для блокирования или разблокирования пользователей вручную.Этот API также может содержать список заблокированных пользователей или пользователей,которые были аутентифицированы в течение настраиваемого промежутка времени.</target>
        </trans-unit>
        <trans-unit id="7110ad7a4f42b784159bbbf21bed3303346edd8d" translate="yes" xml:space="preserve">
          <source>There is also function &lt;code&gt;dist_util:strict_order_flags/0&lt;/code&gt; returning all flags (bitwise or:ed together) corresponding to features that require strict ordering of data over distribution channels.</source>
          <target state="translated">Также существует функция &lt;code&gt;dist_util:strict_order_flags/0&lt;/code&gt; , возвращающая все флаги (побитовые или: ed вместе), соответствующие функциям, требующим строгого упорядочивания данных по каналам распределения.</target>
        </trans-unit>
        <trans-unit id="6fa8c8dbb4f5b93ed951ec7e3ddcfaace3c9a8bb" translate="yes" xml:space="preserve">
          <source>There is also the single sequence \N, which matches a non-newline character. This is the same as the &quot;.&quot; metacharacter when &lt;code&gt;dotall&lt;/code&gt; is not set. Perl also uses \N to match characters by name, but PCRE does not support this.</source>
          <target state="translated">Также существует одиночная последовательность \ N, которая соответствует символу, отличному от символа новой строки. Это то же самое, что и &quot;.&quot; метасимвол, если &lt;code&gt;dotall&lt;/code&gt; не установлен. Perl также использует \ N для сопоставления символов по имени, но PCRE не поддерживает это.</target>
        </trans-unit>
        <trans-unit id="b98454e1dad347bf57900e7a0165181c58bc516a" translate="yes" xml:space="preserve">
          <source>There is always a process registered under the name of &lt;code&gt;user&lt;/code&gt;. This can be used for sending output to the user.</source>
          <target state="translated">Всегда есть процесс, зарегистрированный под именем &lt;code&gt;user&lt;/code&gt; . Это можно использовать для отправки вывода пользователю.</target>
        </trans-unit>
        <trans-unit id="48f05fa36ef8d48104e41cb6957499643b973e55" translate="yes" xml:space="preserve">
          <source>There is an important command to list the actual algorithms and their ordering: &lt;code&gt;&lt;a href=&quot;ssh#default_algorithms-0&quot;&gt;ssh:default_algorithms/0&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Существует важная команда для перечисления реальных алгоритмов и их порядка: &lt;code&gt;&lt;a href=&quot;ssh#default_algorithms-0&quot;&gt;ssh:default_algorithms/0&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d83f929c7ba80aeba27f85a0a055bddbdc902825" translate="yes" xml:space="preserve">
          <source>There is an information function for the types above:</source>
          <target state="translated">Для вышеперечисленных типов существует информационная функция:</target>
        </trans-unit>
        <trans-unit id="dacb594bad469f1ce7f5caf10b3b3ec583858f47" translate="yes" xml:space="preserve">
          <source>There is an ordering, which is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bbb406addbf195bc5bf6f601577bdb5f7463970" translate="yes" xml:space="preserve">
          <source>There is another non-standard property, Xuc, which matches any character that can be represented by a Universal Character Name in C++ and other programming languages. These are the characters $, @, ` (grave accent), and all characters with Unicode code points &amp;gt;= U+00A0, except for the surrogates U+D800 to U+DFFF. Notice that most base (ASCII) characters are excluded. (Universal Character Names are of the form \uHHHH or \UHHHHHHHH, where H is a hexadecimal digit. Notice that the Xuc property does not match these sequences but the characters that they represent.)</source>
          <target state="translated">Есть еще одно нестандартное свойство, Xuc, которое соответствует любому символу, который может быть представлен универсальным именем символа в C ++ и других языках программирования. Это символы $, @, `(серьезный ударение) и все символы с кодовыми точками Unicode&amp;gt; = U + 00A0, за исключением суррогатов U + D800 до U + DFFF. Обратите внимание, что большинство основных (ASCII) символов исключено. (Универсальные имена символов имеют форму \ uHHHH или \ UHHHHHHHH, где H - шестнадцатеричная цифра. Обратите внимание, что свойство Xuc соответствует не этим последовательностям, а символам, которые они представляют.)</target>
        </trans-unit>
        <trans-unit id="24db043e3e85ec5f96858860abaa48c0bebec77d" translate="yes" xml:space="preserve">
          <source>There is currently &lt;strong&gt;no&lt;/strong&gt; support for Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01441ce6d74363dda8f15648c06b7b0537c64a86" translate="yes" xml:space="preserve">
          <source>There is however a utility module, &lt;code&gt;dist_util&lt;/code&gt;, which does most of the hard work of handling handshakes, cookies, timers, and ticking. Using &lt;code&gt;dist_util&lt;/code&gt; makes implementing a distribution module much easier and that is done in the example application.</source>
          <target state="translated">Однако существует служебный модуль &lt;code&gt;dist_util&lt;/code&gt; , который выполняет большую часть тяжелой работы по обработке рукопожатий, файлов cookie, таймеров и тикания. Использование &lt;code&gt;dist_util&lt;/code&gt; значительно упрощает реализацию модуля распространения, и это сделано в примере приложения.</target>
        </trans-unit>
        <trans-unit id="4ca5bc74ccdc1a7e5bdfd46cd1aa8fff1884417d" translate="yes" xml:space="preserve">
          <source>There is no &lt;code&gt;rsh&lt;/code&gt; program on the computer.</source>
          <target state="translated">На компьютере нет программы &lt;code&gt;rsh&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="df2ff6a55b257f4164ad71e8f10123efe9394150" translate="yes" xml:space="preserve">
          <source>There is no &lt;code&gt;send&lt;/code&gt; call with a time-out option, use socket option &lt;code&gt;send_timeout&lt;/code&gt; if time-outs are desired. See section &lt;code&gt;&lt;a href=&quot;#examples&quot;&gt;Examples&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Нет вызова &lt;code&gt;send&lt;/code&gt; с опцией тайм-аута, используйте опцию сокета &lt;code&gt;send_timeout&lt;/code&gt; , если требуются тайм-ауты. См. Раздел &lt;code&gt;&lt;a href=&quot;#examples&quot;&gt;Examples&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="788a001e209f8fbfb495d59e087ae4ffbefebb3f" translate="yes" xml:space="preserve">
          <source>There is no Boolean data type in Erlang. Instead the atoms &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt; are used to denote Boolean values.</source>
          <target state="translated">В Erlang нет логического типа данных. Вместо этого атомы &lt;code&gt;true&lt;/code&gt; и &lt;code&gt;false&lt;/code&gt; используются для обозначения логических значений.</target>
        </trans-unit>
        <trans-unit id="37147d996eecd281a8ba511598164eac1e447d2f" translate="yes" xml:space="preserve">
          <source>There is no attempt to balance trees after deletions. As deletions do not increase the height of a tree, this should be OK.</source>
          <target state="translated">Попытки сбалансировать деревья после удаления не предпринимаются.Так как удаление не увеличивает высоту дерева,это должно быть нормально.</target>
        </trans-unit>
        <trans-unit id="caf2aa5b2cbffe36cef8b0ea41ca0022fd85db8a" translate="yes" xml:space="preserve">
          <source>There is no connection to the node where the process is located.</source>
          <target state="translated">Нет связи с узлом,на котором находится процесс.</target>
        </trans-unit>
        <trans-unit id="5b7a1543335bb44ae5cf0c88c1eac25c65cd7e3b" translate="yes" xml:space="preserve">
          <source>There is no difference between rows in a table and &lt;code&gt;Mnesia&lt;/code&gt; records. Both concepts are the same and are used interchangeably throughout this User's Guide.</source>
          <target state="translated">Нет разницы между строками в таблице и записями &lt;code&gt;Mnesia&lt;/code&gt; . Оба понятия одинаковы и взаимозаменяемы в данном Руководстве пользователя.</target>
        </trans-unit>
        <trans-unit id="9a1861aef615622b38a7ac58736c71ae81c27ee3" translate="yes" xml:space="preserve">
          <source>There is no guarantee of consistency in the returned list. Tables created or deleted by other processes &quot;during&quot; the &lt;code&gt;ets:all()&lt;/code&gt; call either are or are not included in the list. Only tables created/deleted &lt;strong&gt;before&lt;/strong&gt;&lt;code&gt;ets:all()&lt;/code&gt; is called are guaranteed to be included/excluded.</source>
          <target state="translated">В возвращенном списке нет гарантии согласованности. Таблицы, созданные или удаленные другими процессами &amp;laquo;во время&amp;raquo; вызова &lt;code&gt;ets:all()&lt;/code&gt; либо включены, либо не включены в список. Только таблицы, созданные / удаленные &lt;strong&gt;до &lt;/strong&gt; &lt;code&gt;ets:all()&lt;/code&gt; , гарантированно будут включены / исключены.</target>
        </trans-unit>
        <trans-unit id="23cb6eb28b6463357c5d086be78e4c28d974313b" translate="yes" xml:space="preserve">
          <source>There is no guarantee that this function will return the same encoded representation for the same term.</source>
          <target state="translated">Нет гарантии,что эта функция вернет одно и то же кодированное представление для одного и того же термина.</target>
        </trans-unit>
        <trans-unit id="9a78fbe3d9cb96a901b01d191391ac77c129ae95" translate="yes" xml:space="preserve">
          <source>There is no local function handler.</source>
          <target state="translated">Локального обработчика функций нет.</target>
        </trans-unit>
        <trans-unit id="33d688593567ec97b98492916d41c5719d414cf7" translate="yes" xml:space="preserve">
          <source>There is no non-local function handler.</source>
          <target state="translated">Нет никакого нелокального обработчика функций.</target>
        </trans-unit>
        <trans-unit id="7e798f2b7954fbb8128c8deaa8091eb40c413ae4" translate="yes" xml:space="preserve">
          <source>There is no performance advantage of building (and using) a non-reentrant flex scanner over a reentrant flex scanner (if flex supports building such a scanner).</source>
          <target state="translated">Нет никакого преимущества в производительности при создании (и использовании)не входящего в комплект гибкого сканера по сравнению с входящим в комплект гибким сканером (если гибкий сканер поддерживает создание такого сканера).</target>
        </trans-unit>
        <trans-unit id="c626748bd3f9380817d9836ccd98f9458d1a0bc7" translate="yes" xml:space="preserve">
          <source>There is no space left on the device (if &lt;code&gt;write&lt;/code&gt; access was specified).</source>
          <target state="translated">На устройстве не осталось свободного места (если был указан доступ для &lt;code&gt;write&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="2a40eb7111de1638bc04c597cd24719439c9fafa" translate="yes" xml:space="preserve">
          <source>There is not enough memory for the contents of the file.</source>
          <target state="translated">Недостаточно памяти для содержимого файла.</target>
        </trans-unit>
        <trans-unit id="68171e010dd69d363d2cc2e5daa9281d1e1ce0d2" translate="yes" xml:space="preserve">
          <source>There is now a &lt;code&gt;start_ssl.boot&lt;/code&gt; file in the current directory.</source>
          <target state="translated">Теперь в текущем каталоге &lt;code&gt;start_ssl.boot&lt;/code&gt; файл start_ssl.boot .</target>
        </trans-unit>
        <trans-unit id="894f17b55577d9c71ce16f3c9d0e450cd2e02a30" translate="yes" xml:space="preserve">
          <source>There is often a need to configure some other exec evaluator to tailor the input language or restrict the possible functions to call. There are two ways of doing this which will be shown with examples below. See &lt;code&gt;&lt;a href=&quot;ssh#daemon-2&quot;&gt;ssh:daemon/2,3&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;ssh#type-exec_daemon_option&quot;&gt;exec_daemon_option()&lt;/a&gt;&lt;/code&gt;) for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e42ae9f7b3d65e666833c9febb65491e9e97dc0" translate="yes" xml:space="preserve">
          <source>There is one &lt;code&gt;&lt;a href=&quot;#Event%20Time-Outs&quot;&gt;Event Time-Out&lt;/a&gt;&lt;/code&gt; that is automatically cancelled by any event. Note that &lt;code&gt;&lt;a href=&quot;#Postponing%20Events&quot;&gt;postponed &lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#Inserted%20Events&quot;&gt;inserted&lt;/a&gt;&lt;/code&gt; events cancel this time-out just as external events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b94bfc7e6754ca3ea8a6de36cb806cf966b369f7" translate="yes" xml:space="preserve">
          <source>There is one &lt;code&gt;&lt;a href=&quot;#State%20Time-Outs&quot;&gt;State Time-Out&lt;/a&gt;&lt;/code&gt; that is automatically cancelled by a &lt;strong&gt;state change&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50c0d56eee94679c32dbfb957c35b23a7c464276" translate="yes" xml:space="preserve">
          <source>There is one exception to the rule that a variable that is as size must be previously bound. It is possible to match and bind a variable, and use it as a size within the the same binary pattern. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="982e604305f35dec38eb296c4a9c3f70aede4f41" translate="yes" xml:space="preserve">
          <source>There is one exception to the rule that the tuple is copied. If the compiler clearly can see that destructively updating the tuple would give the same result as if the tuple was copied, the call to &lt;code&gt;setelement/3&lt;/code&gt; is replaced with a special destructive &lt;code&gt;setelement&lt;/code&gt; instruction. In the following code sequence, the first &lt;code&gt;setelement/3&lt;/code&gt; call copies the tuple and modifies the ninth element:</source>
          <target state="translated">Есть одно исключение из правила, что кортеж копируется. Если компилятор ясно видит, что деструктивное обновление кортежа даст такой же результат, как если бы кортеж был скопирован, вызов &lt;code&gt;setelement/3&lt;/code&gt; заменяется специальной деструктивной инструкцией &lt;code&gt;setelement&lt;/code&gt; . В следующей кодовой последовательности первый &lt;code&gt;setelement/3&lt;/code&gt; копирует кортеж и изменяет девятый элемент:</target>
        </trans-unit>
        <trans-unit id="961aa3429c05e4421a44dd6baffbd85ca75ea3dd" translate="yes" xml:space="preserve">
          <source>There is one exception. &lt;strong&gt;Any&lt;/strong&gt; tuple containing the atom &lt;code&gt;snmpa_default_notification_extra_info&lt;/code&gt; will, in this context, be considered belonging to this application, and may be processed by the agent.</source>
          <target state="translated">Есть одно исключение. &lt;strong&gt;Любой&lt;/strong&gt; кортеж, содержащий атом &lt;code&gt;snmpa_default_notification_extra_info&lt;/code&gt; , в этом контексте будет считаться принадлежащим этому приложению и может быть обработан агентом.</target>
        </trans-unit>
        <trans-unit id="fb83be6c2e955864087572066b00b5e6d77bfed6" translate="yes" xml:space="preserve">
          <source>There is seldom or never any need to use this BIF as other processes have a chance to run in another scheduler thread anyway. Using this BIF without a thorough grasp of how the scheduler works can cause performance degradation.</source>
          <target state="translated">Редко или никогда не нужно использовать этот BIF,так как у других процессов все равно есть шанс запуститься в другом потоке планировщика.Использование этого BIF без глубокого понимания того,как работает планировщик,может привести к снижению производительности.</target>
        </trans-unit>
        <trans-unit id="672d0cbc29fa0c58939d66ddc95453e76a3b8e80" translate="yes" xml:space="preserve">
          <source>There is some support for reading and printing records in the shell. During compilation record expressions are translated to tuple expressions. In runtime it is not known whether a tuple represents a record, and the record definitions used by the compiler are unavailable at runtime. So, to read the record syntax and print tuples as records when possible, record definitions must be maintained by the shell itself.</source>
          <target state="translated">Существует некоторая поддержка чтения и печати записей в оболочке.Во время компиляции выражения записи транслируются в кортежи.Во время исполнения неизвестно,представляет ли кортеж запись,и определения записи,используемые компилятором,недоступны во время исполнения.Поэтому для чтения синтаксиса записи и печати кортежей в качестве записей,когда это возможно,определения записи должны поддерживаться самой оболочкой.</target>
        </trans-unit>
        <trans-unit id="f75ce9844eb4486f4e4b30867918c3e4b3911386" translate="yes" xml:space="preserve">
          <source>There is support for this in xmerl by the &quot;simple-form&quot; format. You can put your data in a simple-form data structure and feed it into &lt;code&gt;xmerl:export_simple(Content,Callback,RootAttributes)&lt;/code&gt;. Content may be a mixture of simple-form and xmerl records as xmlElement and xmlText.</source>
          <target state="translated">В xmerl для этого есть поддержка в формате &quot;простой формы&quot;. Вы можете поместить свои данные в структуру данных простой формы и &lt;code&gt;xmerl:export_simple(Content,Callback,RootAttributes)&lt;/code&gt; их в xmerl: export_simple (Content, Callback, RootAttributes) . Содержимое может быть смесью записей простой формы и xmerl как xmlElement и xmlText.</target>
        </trans-unit>
        <trans-unit id="3edc744598fcc737ca378c211064f17614a02e99" translate="yes" xml:space="preserve">
          <source>There is usually not much difference between a body-recursive list function and tail-recursive function that reverses the list at the end. Therefore, concentrate on writing beautiful code and forget about the performance of your list functions. In the time-critical parts of your code (and only there), &lt;strong&gt;measure&lt;/strong&gt; before rewriting your code.</source>
          <target state="translated">Обычно нет большой разницы между функцией списка с основной рекурсией и функцией с хвостовой рекурсией, которая переворачивает список в конце. Поэтому сконцентрируйтесь на написании красивого кода и забудьте о производительности функций списка. В критических по времени частях кода (и только там) &lt;strong&gt;измерьте,&lt;/strong&gt; прежде чем переписывать код.</target>
        </trans-unit>
        <trans-unit id="175f3e4c19799f026ed2193325a08cc18afee059" translate="yes" xml:space="preserve">
          <source>There may be a tuple &lt;code&gt;{saved, N}&lt;/code&gt; in the return value, if the MatchSpec is other than []. The integer &lt;code&gt;N&lt;/code&gt; may then be used in subsequent calls to this function and will stand as an &quot;alias&quot; for the given expression. There are also a couple of built-in aliases for common expressions, see &lt;code&gt;&lt;a href=&quot;#ltp-0&quot;&gt;ltp/0&lt;/a&gt;&lt;/code&gt; below for details.</source>
          <target state="translated">В возвращаемом значении может быть кортеж &lt;code&gt;{saved, N}&lt;/code&gt; , если MatchSpec отличается от []. Затем целое число &lt;code&gt;N&lt;/code&gt; может использоваться в последующих вызовах этой функции и будет использоваться как &amp;laquo;псевдоним&amp;raquo; для данного выражения. Также есть несколько встроенных псевдонимов для общих выражений, подробнее см. &lt;code&gt;&lt;a href=&quot;#ltp-0&quot;&gt;ltp/0&lt;/a&gt;&lt;/code&gt; ниже.</target>
        </trans-unit>
        <trans-unit id="439af89f2aedc3e47e38162227f9dad598919f3e" translate="yes" xml:space="preserve">
          <source>There may be label characters before or/and after the wildcard. For example: &lt;code&gt;a*d.example.com&lt;/code&gt; matches &lt;code&gt;abcd.example.com&lt;/code&gt; and &lt;code&gt;ad.example.com&lt;/code&gt;, but not &lt;code&gt;ab.cd.example.com&lt;/code&gt;.</source>
          <target state="translated">До и / или после подстановочного знака могут быть символы метки. Например: &lt;code&gt;a*d.example.com&lt;/code&gt; соответствует &lt;code&gt;abcd.example.com&lt;/code&gt; и &lt;code&gt;ad.example.com&lt;/code&gt; , но не &lt;code&gt;ab.cd.example.com&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2139ae87af2ed5426b73952d31a1c1937f8c40d6" translate="yes" xml:space="preserve">
          <source>There may only be one wildcard character and that is in the first label, for example: &lt;code&gt;*.example.com&lt;/code&gt;. This matches &lt;code&gt;foo.example.com&lt;/code&gt; but neither &lt;code&gt;example.com&lt;/code&gt; nor &lt;code&gt;foo.bar.example.com&lt;/code&gt;.</source>
          <target state="translated">Может быть только один подстановочный знак, и он находится в первой метке, например: &lt;code&gt;*.example.com&lt;/code&gt; . Это соответствует &lt;code&gt;foo.example.com&lt;/code&gt; но ни &lt;code&gt;example.com&lt;/code&gt; , ни &lt;code&gt;foo.bar.example.com&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="86d38102deb0f5be31f5b5646bc1d23391a9239c" translate="yes" xml:space="preserve">
          <source>There must be no calls to another function in between the calls to &lt;code&gt;setelement/3&lt;/code&gt;.</source>
          <target state="translated">Между вызовами &lt;code&gt;setelement/3&lt;/code&gt; не должно быть вызовов другой функции .</target>
        </trans-unit>
        <trans-unit id="4379219137f82ad3d5f85ec7793035a5647a5347" translate="yes" xml:space="preserve">
          <source>There were a number of problems in the implementation of the now undocumented algorithms, which is why they are deprecated. The new algorithms are a bit slower but do not have these problems:</source>
          <target state="translated">В реализации ныне недокументированных алгоритмов возник ряд проблем,поэтому они устарели.Новые алгоритмы работают немного медленнее,но не имеют таких проблем:</target>
        </trans-unit>
        <trans-unit id="c8702fd6526747089f634470b6b71a67546749e1" translate="yes" xml:space="preserve">
          <source>There will be three almost identical copies of the code. Given the size of the code, that could be too high cost to pay.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94edc56fd4c7a685211aeb70698042dc2126321d" translate="yes" xml:space="preserve">
          <source>Therefor in the tests, binary codecs are tested with four different encoding configs to determine exactly how the different options effect the performance: with transformation and without driver ([]), without transformation and without driver ([native]), with transformation and with driver ([driver]) and finally without transformation and with driver ([driver,native]).</source>
          <target state="translated">Для этого в тестах тестируются бинарные кодеки с четырьмя разными конфигурациями кодирования,чтобы определить,как именно различные опции влияют на производительность:с преобразованием и без драйвера ([]),без преобразования и без драйвера ([native]),с преобразованием и с драйвером ([driver])и,наконец,без преобразования и с драйвером ([driver,native]).</target>
        </trans-unit>
        <trans-unit id="243f02477e6596c18fd3c62ae8ed5666e8ef7097" translate="yes" xml:space="preserve">
          <source>Therefore &lt;code&gt;my_binary_to_list/1&lt;/code&gt; calls itself with the match context instead of with a sub binary. The instruction that initializes the matching operation basically does nothing when it sees that it was passed a match context instead of a binary.</source>
          <target state="translated">Поэтому &lt;code&gt;my_binary_to_list/1&lt;/code&gt; вызывает себя с контекстом совпадения, а не с дополнительным двоичным файлом . Инструкция, инициализирующая операцию сопоставления, в основном ничего не делает, когда видит, что ей был передан контекст сопоставления вместо двоичного файла.</target>
        </trans-unit>
        <trans-unit id="a8aae9f4ba098f331d48e185f24980e7223ed137" translate="yes" xml:space="preserve">
          <source>Therefore it is not enough to only recompile drivers written with version management for pre R15B types; the types must be changed in the driver suggesting other rewrites, especially regarding size variables. &lt;strong&gt;Investigate all warnings when recompiling.&lt;/strong&gt;</source>
          <target state="translated">Поэтому недостаточно просто перекомпилировать драйверы, написанные с помощью управления версиями для типов до R15B; типы должны быть изменены в драйвере, предлагая другие перезаписи, особенно в отношении переменных размера. &lt;strong&gt;Изучите все предупреждения при перекомпиляции.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8451cc048f68604a8e6f8398bb63201daf908b58" translate="yes" xml:space="preserve">
          <source>Therefore the following call:</source>
          <target state="translated">Поэтому следующий звонок:</target>
        </trans-unit>
        <trans-unit id="cac855cec75c6e990039722ee7ddfc227fe28ddc" translate="yes" xml:space="preserve">
          <source>Therefore the old api (see next section) is kept for now but internally implemented with new primitives.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4080dae433bd65ba4f78438abd73a9dcd511aa9" translate="yes" xml:space="preserve">
          <source>Therefore, &lt;code&gt;after_zero/1&lt;/code&gt; builds one match context and one sub binary (assuming it is passed a binary that contains a zero byte).</source>
          <target state="translated">Следовательно, &lt;code&gt;after_zero/1&lt;/code&gt; создает один контекст совпадения и один вспомогательный двоичный файл (при условии, что ему передается двоичный файл, содержащий нулевой байт).</target>
        </trans-unit>
        <trans-unit id="9e7c3bfd969d68d13350f73c07ad4f037893dc43" translate="yes" xml:space="preserve">
          <source>Therefore, certain operations on a binary mark it so that any future append operation will be forced to copy the binary. In most cases, the binary object will be shrunk at the same time to reclaim the extra space allocated for growing.</source>
          <target state="translated">Поэтому некоторые операции с двоичным файлом помечают его так,что любая будущая операция приложения будет вынуждена скопировать двоичный файл.В большинстве случаев,двоичный объект будет уменьшен в то же время,чтобы восстановить дополнительное пространство,выделенное для роста.</target>
        </trans-unit>
        <trans-unit id="1bd6b474df592c0536d4daa44f7c1bfcafdb1fcf" translate="yes" xml:space="preserve">
          <source>Therefore, converting arbitrary input strings to atoms can be dangerous in a system that runs continuously. If only certain well-defined atoms are allowed as input, &lt;code&gt;list_to_existing_atom/1&lt;/code&gt; can be used to guard against a denial-of-service attack. (All atoms that are allowed must have been created earlier, for example, by simply using all of them in a module and loading that module.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92e119795a21e7955d1c30f27f5a24fcb874b645" translate="yes" xml:space="preserve">
          <source>Therefore, converting arbitrary input strings to atoms can be dangerous in a system that runs continuously. If only certain well-defined atoms are allowed as input, &lt;code&gt;list_to_existing_atom/1&lt;/code&gt; can be used to to guard against a denial-of-service attack. (All atoms that are allowed must have been created earlier, for example, by simply using all of them in a module and loading that module.)</source>
          <target state="translated">Следовательно, преобразование произвольных входных строк в атомы может быть опасным в системе, которая работает непрерывно. Если только определенные четко определенные атомы разрешены в качестве входных данных, &lt;code&gt;list_to_existing_atom/1&lt;/code&gt; может использоваться для защиты от атаки типа &amp;laquo;отказ в обслуживании&amp;raquo;. (Все разрешенные атомы должны быть созданы ранее, например, путем простого использования их всех в модуле и загрузки этого модуля.)</target>
        </trans-unit>
        <trans-unit id="0afb1e74cde0028071d12983306cbaa758aaee89" translate="yes" xml:space="preserve">
          <source>Therefore, if you want to send both a pre-existing binary and some extra data to a driver without copying the binary, you must call &lt;code&gt;port_control/3&lt;/code&gt; twice; once with the binary and once with the extra data. However, that will only work if there is only one process communicating with the port (because otherwise another process can call the driver in-between the calls).</source>
          <target state="translated">Следовательно, если вы хотите отправить драйверу как уже существующий двоичный файл, так и некоторые дополнительные данные, не копируя двоичный файл, вы должны дважды вызвать &lt;code&gt;port_control/3&lt;/code&gt; ; один раз с двоичными данными и один раз с дополнительными данными. Однако это будет работать только в том случае, если с портом обменивается данными только один процесс (потому что в противном случае другой процесс может вызвать драйвер между вызовами).</target>
        </trans-unit>
        <trans-unit id="e1058e576d020e27852d4dd63c7e76baf9cb4f3e" translate="yes" xml:space="preserve">
          <source>Therefore, setting this option to &lt;code&gt;true&lt;/code&gt; when creating a socket never fails, except possibly on a platform where you have customized the kernel to only allow &lt;code&gt;false&lt;/code&gt;, which can be doable (but awkward) on, for example, OpenBSD.</source>
          <target state="translated">Следовательно, установка этого параметра в значение &lt;code&gt;true&lt;/code&gt; при создании сокета никогда не приведет к сбою, за исключением, возможно, платформы, где вы настроили ядро, чтобы разрешить только значение &lt;code&gt;false&lt;/code&gt; , что может быть выполнимо (но неудобно), например, в OpenBSD.</target>
        </trans-unit>
        <trans-unit id="fa03132e315d50b20abbcf96beb07d6fa4be6ede" translate="yes" xml:space="preserve">
          <source>Therefore, the following example is a valid Erlang instance of type 'Oid':</source>
          <target state="translated">Поэтому следующим примером является действительный экземпляр Erlang типа 'Oid':</target>
        </trans-unit>
        <trans-unit id="3d5269f23f196ee210eee4acf06c960dda47d1df" translate="yes" xml:space="preserve">
          <source>These &lt;strong&gt;transition actions&lt;/strong&gt; can be invoked by returning them from the &lt;code&gt;&lt;a href=&quot;#state%20callback&quot;&gt;&lt;strong&gt;state callback&lt;/strong&gt;&lt;/a&gt;&lt;/code&gt; when it is called with an &lt;code&gt;&lt;a href=&quot;#type-event_type&quot;&gt;event&lt;/a&gt;&lt;/code&gt;, from &lt;code&gt;&lt;a href=&quot;#Module:init-1&quot;&gt;Module:init/1&lt;/a&gt;&lt;/code&gt; or by giving them to &lt;code&gt;&lt;a href=&quot;#enter_loop-5&quot;&gt;enter_loop/5,6&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02bc7790d560067efd73b09c97b9c65eaaef9ebf" translate="yes" xml:space="preserve">
          <source>These &lt;strong&gt;transition actions&lt;/strong&gt; can be invoked by returning them from the &lt;code&gt;&lt;a href=&quot;#state%20callback&quot;&gt;&lt;strong&gt;state callback&lt;/strong&gt;&lt;/a&gt;&lt;/code&gt;, from &lt;code&gt;&lt;a href=&quot;#Module:init-1&quot;&gt;Module:init/1&lt;/a&gt;&lt;/code&gt; or by giving them to &lt;code&gt;&lt;a href=&quot;#enter_loop-5&quot;&gt;enter_loop/5,6&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a00c80e549287bbb93dadd392554fafbbbc24b24" translate="yes" xml:space="preserve">
          <source>These Erlang variables are now bound to valid instances of ASN.1 defined types. This style of value can be passed directly to the encoder for transformation into a series of bytes.</source>
          <target state="translated">Эти переменные Erlang теперь привязаны к действительным экземплярам определенных типов ASN.1.Этот стиль значения может быть передан непосредственно энкодеру для преобразования в серию байт.</target>
        </trans-unit>
        <trans-unit id="0f0a03fdc3b62893e944bf31939f2cfaecae96b7" translate="yes" xml:space="preserve">
          <source>These MIBs are not loaded by default.</source>
          <target state="translated">Эти MIB не загружаются по умолчанию.</target>
        </trans-unit>
        <trans-unit id="2ec64a39b7d4c54784cd2ad56d92c227d3e17b9a" translate="yes" xml:space="preserve">
          <source>These MIBs contain the &lt;code&gt;snmp-&lt;/code&gt; and &lt;code&gt;system&lt;/code&gt; groups from MIB-II which is defined in RFC1213 (STANDARD-MIB) or RFC1907 (SNMPv2-MIB). They are implemented in the &lt;code&gt;snmp_standard_mib&lt;/code&gt; module. The &lt;code&gt;snmp&lt;/code&gt; counters all reside in volatile memory and the &lt;code&gt;system&lt;/code&gt; and &lt;code&gt;snmpEnableAuthenTraps&lt;/code&gt; variables in persistent memory, using the SNMP built-in database (refer to the Reference Manual, section &lt;code&gt;snmp&lt;/code&gt;, module &lt;code&gt;snmpa_local_db&lt;/code&gt; for more details).</source>
          <target state="translated">Эти MIB содержат &lt;code&gt;snmp-&lt;/code&gt; и &lt;code&gt;system&lt;/code&gt; группы из MIB-II, который определен в RFC1213 (STANDARD-MIB) или RFC1907 (SNMPv2-MIB). Они реализованы в модуле &lt;code&gt;snmp_standard_mib&lt;/code&gt; . Все счетчики &lt;code&gt;snmp&lt;/code&gt; находятся в энергозависимой памяти, а &lt;code&gt;system&lt;/code&gt; переменные и переменные &lt;code&gt;snmpEnableAuthenTraps&lt;/code&gt; - в постоянной памяти с использованием встроенной базы данных SNMP (дополнительные сведения см. В Справочном руководстве, раздел &lt;code&gt;snmp&lt;/code&gt; , модуль &lt;code&gt;snmpa_local_db&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="e67a93a99a7e370f0477c918676f4cf69ff8699a" translate="yes" xml:space="preserve">
          <source>These are a few  facts about the predefined variables (the set operators &lt;code id=&quot;simple_facts&quot;&gt;+&lt;/code&gt; (union) and &lt;code&gt;-&lt;/code&gt; (difference) as well as the cast operator &lt;code&gt;(&lt;/code&gt;Type&lt;code&gt;)&lt;/code&gt; are described below):</source>
          <target state="translated">Вот несколько фактов о предопределенных переменных (операторы набора &lt;code id=&quot;simple_facts&quot;&gt;+&lt;/code&gt; (объединение) и &lt;code&gt;-&lt;/code&gt; (разница), а также оператор приведения &lt;code&gt;(&lt;/code&gt; Type &lt;code&gt;)&lt;/code&gt; описаны ниже):</target>
        </trans-unit>
        <trans-unit id="b41fa5eb73a7806528a8254a84f2a17ca0515977" translate="yes" xml:space="preserve">
          <source>These are deprecated because the annoying double meaning of the name servers/time-out argument, and because they have no decent place for a resolver options list.</source>
          <target state="translated">Они устарели,потому что раздражающий двойной смысл серверов имен/аргумент тайм-аут,и потому что у них нет приличного места для списка опций резольвера.</target>
        </trans-unit>
        <trans-unit id="60cf421719fdc337d9a96b28085e43063192f175" translate="yes" xml:space="preserve">
          <source>These are only recognized by Erlang nodes, not by hidden nodes.</source>
          <target state="translated">Они распознаются только узлами Эрланга,а не скрытыми узлами.</target>
        </trans-unit>
        <trans-unit id="3295d73ec7e802c1f14b2c332abe46ab60bbbcd5" translate="yes" xml:space="preserve">
          <source>These are options effecting discovery &lt;code&gt;originating&lt;/code&gt; in this agent.</source>
          <target state="translated">Это параметры, влияющие на обнаружение, &lt;code&gt;originating&lt;/code&gt; этого агента.</target>
        </trans-unit>
        <trans-unit id="e5c03f74465d648a5862f1fc098e9296ee6d6bfb" translate="yes" xml:space="preserve">
          <source>These are options effecting discovery &lt;code&gt;terminating&lt;/code&gt; in this agent (i.e. initiated by a manager).</source>
          <target state="translated">Это параметры, выполняющие обнаружение, &lt;code&gt;terminating&lt;/code&gt; в этом агенте (то есть инициированное менеджером).</target>
        </trans-unit>
        <trans-unit id="1fced9f787994ac75d8652655a2b16fb12a62921" translate="yes" xml:space="preserve">
          <source>These are read-only and cannot be changed in runtime.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="787f23076fd9f126101a07d4716e5cdc858d0ff6" translate="yes" xml:space="preserve">
          <source>These are the supported entries and their value types:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b54f8e7581e4b11655c99aa67637a8c43ce11aa5" translate="yes" xml:space="preserve">
          <source>These are the tools you need in order to unpack and build Erlang/OTP.</source>
          <target state="translated">Это инструменты,необходимые для распаковки и сборки Erlang/OTP.</target>
        </trans-unit>
        <trans-unit id="c2b3c62dddfeb24a018a3dfcfce0b24364d8a6b9" translate="yes" xml:space="preserve">
          <source>These are to behave as &lt;code&gt;{get_until, latin1, Prompt, Module, Function, ExtraArgs}&lt;/code&gt;, &lt;code&gt;{get_chars, latin1, Prompt, N}&lt;/code&gt;, and &lt;code&gt;{get_line, latin1, Prompt}&lt;/code&gt;, respectively.</source>
          <target state="translated">Они должны вести себя как &lt;code&gt;{get_until, latin1, Prompt, Module, Function, ExtraArgs}&lt;/code&gt; , &lt;code&gt;{get_chars, latin1, Prompt, N}&lt;/code&gt; и &lt;code&gt;{get_line, latin1, Prompt}&lt;/code&gt; соответственно.</target>
        </trans-unit>
        <trans-unit id="c1e4b991ff6fe7d1f2495f5a84c72e419f949594" translate="yes" xml:space="preserve">
          <source>These are to behave as &lt;code&gt;{put_chars, latin1, Characters}&lt;/code&gt; and &lt;code&gt;{put_chars, latin1, Module, Function, Args}&lt;/code&gt;, respectively.</source>
          <target state="translated">Они должны вести себя как &lt;code&gt;{put_chars, latin1, Characters}&lt;/code&gt; и &lt;code&gt;{put_chars, latin1, Module, Function, Args}&lt;/code&gt; соответственно.</target>
        </trans-unit>
        <trans-unit id="187481b8c7b89208071bec932d3843dbbff8e5a2" translate="yes" xml:space="preserve">
          <source>These are two different SMP performance monitoring tool(s).</source>
          <target state="translated">Это два различных инструмента мониторинга производительности SMP.</target>
        </trans-unit>
        <trans-unit id="8edbe321eae68320d9237c6f46dbbe92c6832bc5" translate="yes" xml:space="preserve">
          <source>These are variants of &lt;code&gt;&lt;a href=&quot;#enif_select&quot;&gt;enif_select&lt;/a&gt;&lt;/code&gt; where you can supply your own message term &lt;code&gt;msg&lt;/code&gt; that will be sent to the process instead of the predefined tuple &lt;code&gt;{select,_,_,_}.&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a7d9dd0e596b5ce481a5779ed708189763b4369" translate="yes" xml:space="preserve">
          <source>These behaviors occur regardless if the subpattern is called recursively. The treatment of subroutines in Perl is different in some cases.</source>
          <target state="translated">Такое поведение происходит независимо от того,называется ли подмасказка рекурсивной.Лечение подмашин в Perl в некоторых случаях отличается.</target>
        </trans-unit>
        <trans-unit id="4ec49381162072262ed7e981970a8f6edfbd0ee9" translate="yes" xml:space="preserve">
          <source>These books are highly recommended as a start for learning Erlang.</source>
          <target state="translated">Эти книги настоятельно рекомендуются для начала изучения Эрланга.</target>
        </trans-unit>
        <trans-unit id="f21525376606a80acbcf6dfcd0372134852c9de3" translate="yes" xml:space="preserve">
          <source>These callback functions are called from local and non-local evaluation function handlers, described in the &lt;code&gt;&lt;a href=&quot;erl_eval&quot;&gt;erl_eval&lt;/a&gt;&lt;/code&gt; manual page. (Arguments in &lt;code&gt;ArgList&lt;/code&gt; are evaluated before the callback functions are called.)</source>
          <target state="translated">Эти функции обратного вызова вызываются из локальных и нелокальных обработчиков оценочных функций, описанных на &lt;code&gt;&lt;a href=&quot;erl_eval&quot;&gt;erl_eval&lt;/a&gt;&lt;/code&gt; справочника erl_eval . (Аргументы в &lt;code&gt;ArgList&lt;/code&gt; оцениваются до вызова функций обратного вызова.)</target>
        </trans-unit>
        <trans-unit id="0717b31aef17edf30fcfa1ecdd0c63f7b41ab7a8" translate="yes" xml:space="preserve">
          <source>These case switches only allow &lt;code&gt;?Q(...)&lt;/code&gt; or &lt;code&gt;_&lt;/code&gt; as clause patterns, and the guards may contain any expressions, not just Erlang guard expressions.</source>
          <target state="translated">Эти переключатели регистра допускают только &lt;code&gt;?Q(...)&lt;/code&gt; или &lt;code&gt;_&lt;/code&gt; в качестве шаблонов предложений, а защитные элементы могут содержать любые выражения, а не только защитные выражения Erlang.</target>
        </trans-unit>
        <trans-unit id="b82509cdccdd98b3f35ff2498648839db3e7e6d5" translate="yes" xml:space="preserve">
          <source>These changes are essential not to crash the emulator or worse cause malfunction. Without them a driver can return garbage in the high 32 bits to the emulator, causing it to build a huge result from random bytes, either crashing on memory allocation or succeeding with a random result from the driver call.</source>
          <target state="translated">Эти изменения необходимы для того,чтобы не допустить сбоя эмулятора или,что еще хуже,вызвать его неисправность.Без них драйвер может вернуть мусор в старших 32 битах в эмулятор,в результате чего он построит огромный результат из случайных байт,либо аварийно завершится при выделении памяти,либо получится случайный результат при вызове драйвера.</target>
        </trans-unit>
        <trans-unit id="573248e1d06102f3107f0a34b228df99492a4b03" translate="yes" xml:space="preserve">
          <source>These choices depend a lot on your problem domain. If you don't have real time monitoring and ability to fix problems quickly, for example in an embedded system, you might want to accept at most one restart per minute before the supervisor should give up and escalate to the next level to try to clear the error automatically. On the other hand, if it is more important that you keep trying even at a high failure rate, you might want a sustained rate of as much as 1-2 restarts per second.</source>
          <target state="translated">Эти варианты во многом зависят от вашего проблемного домена.Если у вас нет мониторинга в реальном времени и возможности быстро устранять проблемы,например,во встроенной системе,вы,возможно,захотите принять не более одного перезапуска в минуту,прежде чем супервизор сдастся и перейдет на следующий уровень,чтобы попытаться устранить ошибку автоматически.С другой стороны,если более важно,чтобы вы продолжали попытки даже при высокой частоте отказов,вы можете захотеть иметь устойчивую частоту перезагрузок до 1-2 перезагрузок в секунду.</target>
        </trans-unit>
        <trans-unit id="7cc39d5ee560666c19b1d761a7fa1de1841363b5" translate="yes" xml:space="preserve">
          <source>These commands are only added for convenience, the normal way to manipulate the state of a service is through the control panels services applet.</source>
          <target state="translated">Эти команды добавляются только для удобства,обычный способ манипулирования состоянием сервиса-через апплет сервисов панелей управления.</target>
        </trans-unit>
        <trans-unit id="f0bb49d0ba352c03c469accf5e7d24180534a7f3" translate="yes" xml:space="preserve">
          <source>These constructs makes it possible to define open types, that is, values of that type can be of any ASN.1 type. Also, relationships can be defined between different types and values, as classes can hold types, values, objects, object sets, and other classes in their fields. A class can be defined in ASN.1 as follows:</source>
          <target state="translated">Эти конструкции позволяют определить открытые типы,то есть значения этого типа могут быть любого типа ASN.1.Кроме того,могут быть определены связи между различными типами и значениями,поскольку классы могут содержать в своих полях типы,значения,объекты,наборы объектов и другие классы.Класс может быть определен в ASN.1 следующим образом:</target>
        </trans-unit>
        <trans-unit id="befa22022ba0fc273ee1c740958946648b1b19ef" translate="yes" xml:space="preserve">
          <source>These data types are described in the documentation for the &lt;code&gt;SNMP&lt;/code&gt; application.</source>
          <target state="translated">Эти типы данных описаны в документации к приложению &lt;code&gt;SNMP&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7607e5152380b649a4dfea1427608d47b7252b27" translate="yes" xml:space="preserve">
          <source>These declarations mean that &lt;code&gt;'='&lt;/code&gt; is defined as a &lt;code&gt;right associative binary&lt;/code&gt; operator with precedence 100, &lt;code&gt;'=='&lt;/code&gt; and &lt;code&gt;'=/='&lt;/code&gt; are operators with &lt;code&gt;no associativity&lt;/code&gt;, &lt;code&gt;'+'&lt;/code&gt; and &lt;code&gt;'*'&lt;/code&gt; are &lt;code&gt;left associative binary&lt;/code&gt; operators, where &lt;code&gt;'*'&lt;/code&gt; takes precedence over &lt;code&gt;'+'&lt;/code&gt; (the normal case), and &lt;code&gt;'-'&lt;/code&gt; is a &lt;code&gt;unary&lt;/code&gt; operator of higher precedence than &lt;code&gt;'*'&lt;/code&gt;. The fact that '==' has no associativity means that an expression like &lt;code&gt;a == b == c&lt;/code&gt; is considered a syntax error.</source>
          <target state="translated">Эти объявления означают, что &lt;code&gt;'='&lt;/code&gt; определяется как &lt;code&gt;right associative binary&lt;/code&gt; оператор с приоритетом 100, &lt;code&gt;'=='&lt;/code&gt; и &lt;code&gt;'=/='&lt;/code&gt; являются операторами &lt;code&gt;no associativity&lt;/code&gt; , &lt;code&gt;'+'&lt;/code&gt; и &lt;code&gt;'*'&lt;/code&gt; являются &lt;code&gt;left associative binary&lt;/code&gt; операторами, где &lt;code&gt;'*'&lt;/code&gt; имеет приоритет над &lt;code&gt;'+'&lt;/code&gt; (нормальный случай), а &lt;code&gt;'-'&lt;/code&gt; является &lt;code&gt;unary&lt;/code&gt; оператором с более высоким приоритетом, чем &lt;code&gt;'*'&lt;/code&gt; . Тот факт, что '==' не имеет ассоциативности, означает, что выражение вроде &lt;code&gt;a == b == c&lt;/code&gt; считается синтаксической ошибкой.</target>
        </trans-unit>
        <trans-unit id="c79b2e48d3b3c9cd539a4e7c436d24545530e8a9" translate="yes" xml:space="preserve">
          <source>These events, of course, need to occur ordered to other memory operations. The operation of determining this begins by initiating the thread progress operation. The thread that initiated the thread progress operation after this poll for the completion of the operation. Both of these events must occur at least once &lt;strong&gt;after&lt;/strong&gt; the thread progress operation has been initiated, and at least once &lt;strong&gt;before&lt;/strong&gt; the operation has completed in each managed thread. This is ordered using communication via memory which makes it possible to draw conclusion about the memory state after the thread progress operation has completed. Lets call the progress made from initiation to comletion for &quot;thread progress&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="751552b3c6781f0e0e58af55485f1a42f3adbfcd" translate="yes" xml:space="preserve">
          <source>These function simply fetch the appropriate field from the &lt;code&gt;ec&lt;/code&gt; structure. Read the field directly will probably be safe for a long time, so these functions are not really needed.</source>
          <target state="translated">Эти функции просто выбирают соответствующее поле из структуры &lt;code&gt;ec&lt;/code&gt; . Чтение поля напрямую, вероятно, будет безопасным в течение длительного времени, поэтому эти функции на самом деле не нужны.</target>
        </trans-unit>
        <trans-unit id="04605460ad130e7237d6de8796f71c1d7f55abcb" translate="yes" xml:space="preserve">
          <source>These functions are all called in the same manner as &lt;code&gt;printf()&lt;/code&gt;, that is, with a string containing format specifiers followed by a list of corresponding arguments. All output from these functions is to &lt;code&gt;stderr&lt;/code&gt;.</source>
          <target state="translated">Все эти функции вызываются так же, как &lt;code&gt;printf()&lt;/code&gt; , то есть со строкой, содержащей спецификаторы формата, за которой следует список соответствующих аргументов. Все выходные данные этих функций &lt;code&gt;stderr&lt;/code&gt; на stderr .</target>
        </trans-unit>
        <trans-unit id="52fc81f0ba111d2acbf6995d34d870aacab348cf" translate="yes" xml:space="preserve">
          <source>These functions are called for each object in an MIB when the MIB is unloaded or loaded, respectively.</source>
          <target state="translated">Эти функции вызываются для каждого объекта в MIB,когда MIB выгружается или загружается соответственно.</target>
        </trans-unit>
        <trans-unit id="d9faf69dba0c1f70caf123cc3782e49dc958f249" translate="yes" xml:space="preserve">
          <source>These functions are described in detail in &lt;code&gt;&lt;a href=&quot;snmp_def_instr_functions&quot;&gt;Definition of Instrumentation Functions&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эти функции подробно описаны в &lt;code&gt;&lt;a href=&quot;snmp_def_instr_functions&quot;&gt;Definition of Instrumentation Functions&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fd7a6a1b98572c10143c1d93f4f329a609ec28fe" translate="yes" xml:space="preserve">
          <source>These functions are equivalent to the corresponding functions in module &lt;code&gt;dbg&lt;/code&gt;, but all calls are stored in the history. The history buffer makes it easy to create configuration files; the same trace environment can be set up many times, for example, to compare two test runs. It also reduces the amount of typing when using &lt;code&gt;ttb&lt;/code&gt; from the Erlang shell.</source>
          <target state="translated">Эти функции эквивалентны соответствующим функциям в модуле &lt;code&gt;dbg&lt;/code&gt; , но все вызовы сохраняются в истории. Буфер истории позволяет легко создавать файлы конфигурации; одну и ту же среду трассировки можно настраивать много раз, например, для сравнения двух прогонов теста. Это также сокращает объем ввода при использовании &lt;code&gt;ttb&lt;/code&gt; из оболочки Erlang.</target>
        </trans-unit>
        <trans-unit id="158d67977a08a84d4924f2a647ba82873c18061b" translate="yes" xml:space="preserve">
          <source>These functions are explained in the following sections. See also &lt;code&gt;&lt;a href=&quot;#checkpoints&quot;&gt;Checkpoints&lt;/a&gt;&lt;/code&gt;, which describes the two functions used to activate and deactivate checkpoints.</source>
          <target state="translated">Эти функции описаны в следующих разделах. См. Также &lt;code&gt;&lt;a href=&quot;#checkpoints&quot;&gt;Checkpoints&lt;/a&gt;&lt;/code&gt; , где описаны две функции, используемые для активации и деактивации контрольных точек.</target>
        </trans-unit>
        <trans-unit id="60e3f3ff3408849e7fd9edf60400f772dde55362" translate="yes" xml:space="preserve">
          <source>These functions are further described and exemplified in &lt;code&gt;&lt;a href=&quot;mnesia_chap4#matching&quot;&gt;Pattern Matching&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эти функции дополнительно описаны и проиллюстрированы в &lt;code&gt;&lt;a href=&quot;mnesia_chap4#matching&quot;&gt;Pattern Matching&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fa8057e2cae698872b37c80f8aa0f3fe06d7cf59" translate="yes" xml:space="preserve">
          <source>These functions are intended for interactive use in the Erlang shell only. The module prefix can be omitted.</source>
          <target state="translated">Эти функции предназначены только для интерактивного использования в оболочке Erlang.Префикс модуля можно опустить.</target>
        </trans-unit>
        <trans-unit id="9545561ba594c4d5a35ac49f33ac5958ae1e125a" translate="yes" xml:space="preserve">
          <source>These functions are intended only to help with debugging, and are not to be called from normal code. They are provided for convenience, allowing developers to avoid having to create their own custom state replacement functions.</source>
          <target state="translated">Эти функции предназначены только для помощи в отладке и не должны вызываться из обычного кода.Они предоставляются для удобства,позволяя разработчикам избежать необходимости создания собственных функций замены состояния.</target>
        </trans-unit>
        <trans-unit id="b678d1c2ff800ccba92fa1081c74821cd431ce2f" translate="yes" xml:space="preserve">
          <source>These functions are intended only to help with debugging. They are provided for convenience, allowing developers to avoid having to create their own state extraction functions and also avoid having to interactively extract the state from the return values of &lt;code&gt;&lt;a href=&quot;#get_status-1&quot;&gt;get_status/1&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#get_status-2&quot;&gt;get_status/2&lt;/a&gt;&lt;/code&gt; while debugging.</source>
          <target state="translated">Эти функции предназначены только для помощи в отладке. Они предоставляются для удобства, позволяя разработчикам избежать необходимости создавать свои собственные функции извлечения состояния, а также избежать необходимости интерактивного извлечения состояния из возвращаемых значений &lt;code&gt;&lt;a href=&quot;#get_status-1&quot;&gt;get_status/1&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;#get_status-2&quot;&gt;get_status/2&lt;/a&gt;&lt;/code&gt; во время отладки.</target>
        </trans-unit>
        <trans-unit id="9805074016be864764142bf2ab2b984041e919be" translate="yes" xml:space="preserve">
          <source>These functions are kept for backwards compatibility and must not be used by new code. Use the &lt;code&gt;&lt;a href=&quot;logger#macros&quot;&gt; ?LOG_ERROR&lt;/a&gt;&lt;/code&gt; macro or &lt;code&gt;&lt;a href=&quot;logger#error-1&quot;&gt;logger:error/1,2,3&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3ee8c4cccd9aad5a3a976e7ebf9dacddb3f7a5d" translate="yes" xml:space="preserve">
          <source>These functions are kept for backwards compatibility and must not be used by new code. Use the &lt;code&gt;&lt;a href=&quot;logger#macros&quot;&gt; ?LOG_INFO&lt;/a&gt;&lt;/code&gt; macro or &lt;code&gt;&lt;a href=&quot;logger#info-1&quot;&gt;logger:info/1,2,3&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82227a3a076544e3bda2b44fe272f5c2177cda00" translate="yes" xml:space="preserve">
          <source>These functions are kept for backwards compatibility and must not be used by new code. Use the &lt;code&gt;&lt;a href=&quot;logger#macros&quot;&gt; ?LOG_WARNING&lt;/a&gt;&lt;/code&gt; macro or &lt;code&gt;&lt;a href=&quot;logger#warning-1&quot;&gt;logger:warning/1,2,3&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb8d168e922a05dff4b0cd171803a7675b2fbf08" translate="yes" xml:space="preserve">
          <source>These functions are kept for backwards compatibility and must not be used by new code. Use the &lt;code&gt;&lt;a href=&quot;logger#macros&quot;&gt;?LOG_ERROR&lt;/a&gt;&lt;/code&gt; macro or &lt;code&gt;&lt;a href=&quot;logger#error-1&quot;&gt;logger:error/1,2,3&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">Эти функции сохранены для обратной совместимости и не должны использоваться в новом коде. Используйте &lt;code&gt;&lt;a href=&quot;logger#macros&quot;&gt;?LOG_ERROR&lt;/a&gt;&lt;/code&gt; Макрокоманду или &lt;code&gt;&lt;a href=&quot;logger#error-1&quot;&gt;logger:error/1,2,3&lt;/a&gt;&lt;/code&gt; вместо этого.</target>
        </trans-unit>
        <trans-unit id="35c1fc44955a642a5777cca455981c0556303f1d" translate="yes" xml:space="preserve">
          <source>These functions are kept for backwards compatibility and must not be used by new code. Use the &lt;code&gt;&lt;a href=&quot;logger#macros&quot;&gt;?LOG_INFO&lt;/a&gt;&lt;/code&gt; macro or &lt;code&gt;&lt;a href=&quot;logger#info-1&quot;&gt;logger:info/1,2,3&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">Эти функции сохранены для обратной совместимости и не должны использоваться в новом коде. Используйте &lt;code&gt;&lt;a href=&quot;logger#macros&quot;&gt;?LOG_INFO&lt;/a&gt;&lt;/code&gt; Макрокоманду или &lt;code&gt;&lt;a href=&quot;logger#info-1&quot;&gt;logger:info/1,2,3&lt;/a&gt;&lt;/code&gt; вместо этого.</target>
        </trans-unit>
        <trans-unit id="5de333f99c5ead1d8115c4087c9a72a0f601d546" translate="yes" xml:space="preserve">
          <source>These functions are kept for backwards compatibility and must not be used by new code. Use the &lt;code&gt;&lt;a href=&quot;logger#macros&quot;&gt;?LOG_WARNING&lt;/a&gt;&lt;/code&gt; macro or &lt;code&gt;&lt;a href=&quot;logger#warning-1&quot;&gt;logger:warning/1,2,3&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">Эти функции сохранены для обратной совместимости и не должны использоваться в новом коде. Используйте &lt;code&gt;&lt;a href=&quot;logger#macros&quot;&gt;?LOG_WARNING&lt;/a&gt;&lt;/code&gt; Макрокоманду или &lt;code&gt;&lt;a href=&quot;logger#warning-1&quot;&gt;logger:warning/1,2,3&lt;/a&gt;&lt;/code&gt; вместо этого.</target>
        </trans-unit>
        <trans-unit id="2d9a4daca1ac6f764626bf603aa4c73a5aa770a0" translate="yes" xml:space="preserve">
          <source>These functions are much slower than the ordinary store and load functions of &lt;code&gt;Mnesia&lt;/code&gt;. However, this is mainly intended for minor experiments and initial prototyping. The major advantage of these functions is that they are easy to use.</source>
          <target state="translated">Эти функции намного медленнее, чем обычные функции сохранения и загрузки &lt;code&gt;Mnesia&lt;/code&gt; . Однако это в основном предназначено для небольших экспериментов и первоначального прототипирования. Основное преимущество этих функций в том, что они просты в использовании.</target>
        </trans-unit>
        <trans-unit id="cc96780ae3ae54fcc394e1c818c2355204d00877" translate="yes" xml:space="preserve">
          <source>These functions are not thread safe.</source>
          <target state="translated">Эти функции не являются безопасными для резьбы.</target>
        </trans-unit>
        <trans-unit id="8afae98b4e16a8e03fc3cf30a7699eb78e0fa80a" translate="yes" xml:space="preserve">
          <source>These functions are performed in a transaction context involving mechanisms, such as locking, logging, replication, checkpoints, subscriptions, and commit protocols. However, the same function can also be evaluated in other activity contexts.</source>
          <target state="translated">Эти функции выполняются в контексте транзакции с использованием таких механизмов,как блокировка,протоколирование,репликация,контрольные точки,подписки и протоколы фиксации.Однако эта же функция может быть оценена и в других контекстах деятельности.</target>
        </trans-unit>
        <trans-unit id="d43be56fdde5e5de270664b9730584c3eb30df12" translate="yes" xml:space="preserve">
          <source>These functions are primarily intended for simplified testing of &lt;code&gt;.appup&lt;/code&gt; files. They are not run within the context of the &lt;code&gt;release_handler&lt;/code&gt; process. They must therefore &lt;strong&gt;not&lt;/strong&gt; be used together with calls to &lt;code&gt;&lt;a href=&quot;#install_release-1&quot;&gt;install_release/1,2&lt;/a&gt;&lt;/code&gt;, as this causes the &lt;code&gt;release_handler&lt;/code&gt; to end up in an inconsistent state.</source>
          <target state="translated">Эти функции в первую очередь предназначены для упрощенного тестирования файлов &lt;code&gt;.appup&lt;/code&gt; . Они не выполняются в контексте процесса &lt;code&gt;release_handler&lt;/code&gt; . Поэтому они должны &lt;strong&gt;не&lt;/strong&gt; использоваться вместе с вызовами &lt;code&gt;&lt;a href=&quot;#install_release-1&quot;&gt;install_release/1,2&lt;/a&gt;&lt;/code&gt; , так как это приводит к тому , &lt;code&gt;release_handler&lt;/code&gt; оказаться в неустойчивом состоянии.</target>
        </trans-unit>
        <trans-unit id="bfdb7ec140eb86cb272ecdbb50138f14fef17e5c" translate="yes" xml:space="preserve">
          <source>These functions are to be used with trace flag &lt;code&gt;call&lt;/code&gt;, &lt;code&gt;send&lt;/code&gt;, and &lt;code&gt;'receive'&lt;/code&gt; for setting and clearing trace patterns.</source>
          <target state="translated">Эти функции должны использоваться с &lt;code&gt;call&lt;/code&gt; флага трассировки , &lt;code&gt;send&lt;/code&gt; и &lt;code&gt;'receive'&lt;/code&gt; для установки и очистки шаблонов трассировки.</target>
        </trans-unit>
        <trans-unit id="1f17b4d328843c30adfc4895bdc753282346f128" translate="yes" xml:space="preserve">
          <source>These functions can be called to retrieve information about the module.</source>
          <target state="translated">Эти функции могут быть вызваны для получения информации о модуле.</target>
        </trans-unit>
        <trans-unit id="1311856f69e61fe882b7ae9bfc9de73ea32a8732" translate="yes" xml:space="preserve">
          <source>These functions can be used to find records in a table when it is impossible to write constraints for the function &lt;code&gt;&lt;a href=&quot;mnesia#match_object-3&quot;&gt;mnesia:match_object/3&lt;/a&gt;&lt;/code&gt;, or when you want to perform some action on certain records.</source>
          <target state="translated">Эти функции могут использоваться для поиска записей в таблице, когда невозможно записать ограничения для функции &lt;code&gt;&lt;a href=&quot;mnesia#match_object-3&quot;&gt;mnesia:match_object/3&lt;/a&gt;&lt;/code&gt; , или когда вы хотите выполнить какое-либо действие с определенными записями.</target>
        </trans-unit>
        <trans-unit id="0186f872732540e967fd668deb3a4c289a66df35" translate="yes" xml:space="preserve">
          <source>These functions create or delete a table index on a field defined by &lt;code&gt;AttributeName&lt;/code&gt;. To illustrate this, add an index to the table definition &lt;code&gt;(employee, {emp_no, name, salary, sex, phone, room_no})&lt;/code&gt;, which is the example table from the &lt;code&gt;Company&lt;/code&gt; database. The function that adds an index on element &lt;code&gt;salary&lt;/code&gt; can be expressed as &lt;code&gt;mnesia:add_table_index(employee, salary)&lt;/code&gt;.</source>
          <target state="translated">Эти функции создают или удаляют индекс таблицы в поле, определенном &lt;code&gt;AttributeName&lt;/code&gt; . Чтобы проиллюстрировать это, добавьте индекс к определению таблицы &lt;code&gt;(employee, {emp_no, name, salary, sex, phone, room_no})&lt;/code&gt; , который является примером таблицы из базы данных &lt;code&gt;Company&lt;/code&gt; . Функция, которая добавляет индекс элементарной &lt;code&gt;salary&lt;/code&gt; может быть выражена как &lt;code&gt;mnesia:add_table_index(employee, salary)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b321dfec9cbea3824adf71432c75a84bb7f39aaa" translate="yes" xml:space="preserve">
          <source>These functions iterate over the &lt;code&gt;Mnesia&lt;/code&gt; table &lt;code&gt;Tab&lt;/code&gt; and apply the function &lt;code&gt;Fun&lt;/code&gt; to each record. &lt;code&gt;Fun&lt;/code&gt; takes two arguments, the first is a record from the table, and the second is the accumulator. &lt;code&gt;Fun&lt;/code&gt; returns a new accumulator.</source>
          <target state="translated">Эти функции перебирают &lt;code&gt;Tab&lt;/code&gt; таблицы &lt;code&gt;Mnesia&lt;/code&gt; и применяют функцию &lt;code&gt;Fun&lt;/code&gt; к каждой записи. &lt;code&gt;Fun&lt;/code&gt; принимает два аргумента: первый - это запись из таблицы, а второй - аккумулятор. &lt;code&gt;Fun&lt;/code&gt; возвращает новый аккумулятор.</target>
        </trans-unit>
        <trans-unit id="e2241c04aed6e2c04c16cc3d0bc2e51744dc9b5c" translate="yes" xml:space="preserve">
          <source>These functions match a &lt;code&gt;Pattern&lt;/code&gt; against all records in table &lt;code&gt;Tab&lt;/code&gt;. In a &lt;code&gt;&lt;a href=&quot;mnesia#select-2&quot;&gt;mnesia:select&lt;/a&gt;&lt;/code&gt; call, &lt;code&gt;Pattern&lt;/code&gt; is a part of &lt;code&gt;MatchSpecification&lt;/code&gt; described in the following. It is not necessarily performed as an exhaustive search of the entire table. By using indexes and bound values in the key of the pattern, the actual work done by the function can be condensed into a few hash lookups. Using &lt;code&gt;ordered_set&lt;/code&gt; tables can reduce the search space if the keys are partially bound.</source>
          <target state="translated">Эти функции сопоставляют &lt;code&gt;Pattern&lt;/code&gt; со всеми записями в таблице &lt;code&gt;Tab&lt;/code&gt; . В &lt;code&gt;&lt;a href=&quot;mnesia#select-2&quot;&gt;mnesia:select&lt;/a&gt;&lt;/code&gt; вызов, &lt;code&gt;Pattern&lt;/code&gt; является частью &lt;code&gt;MatchSpecification&lt;/code&gt; описано ниже. Это не обязательно выполняется как исчерпывающий поиск по всей таблице. Используя индексы и связанные значения в ключе шаблона, фактическая работа, выполняемая функцией, может быть сведена в несколько поисков хэша. Использование таблиц &lt;code&gt;ordered_set&lt;/code&gt; может уменьшить пространство поиска, если ключи частично связаны.</target>
        </trans-unit>
        <trans-unit id="4380dbd51df4c218d4fc67f122b3a31fa9dad5e7" translate="yes" xml:space="preserve">
          <source>These functions must return the current values of the associated variables.</source>
          <target state="translated">Эти функции должны возвращать текущие значения связанных с ними переменных.</target>
        </trans-unit>
        <trans-unit id="d73e48f290f1971fad9fc4d6418f2f3ddc239932" translate="yes" xml:space="preserve">
          <source>These functions return a negative value indicating that an error occurred.</source>
          <target state="translated">Эти функции возвращают отрицательное значение,указывающее на ошибку.</target>
        </trans-unit>
        <trans-unit id="f2d4535f8dedc594af82a7502daf5f4472256bee" translate="yes" xml:space="preserve">
          <source>These functions return an open file descriptor on success, or a negative value indicating that an error occurred. In the latter case they set &lt;code&gt;erl_errno&lt;/code&gt; to one of the following:</source>
          <target state="translated">Эти функции возвращают дескриптор открытого файла в случае успеха или отрицательное значение, указывающее, что произошла ошибка. В последнем случае они устанавливают &lt;code&gt;erl_errno&lt;/code&gt; в одно из следующих значений:</target>
        </trans-unit>
        <trans-unit id="33b0bf879f0be35d9275b8556a8bb8e4605058f4" translate="yes" xml:space="preserve">
          <source>These functions return the number of bytes written to buffer on success, otherwise &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">Эти функции возвращают количество байтов, записанных в буфер в случае успеха, в противном случае - &lt;code&gt;0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="492a4ea8131a6460ecb2bb728f7492324b79c821" translate="yes" xml:space="preserve">
          <source>These functions returns &lt;code&gt;noError&lt;/code&gt; if the assignment was successful, otherwise an error code.</source>
          <target state="translated">Эти функции возвращают &lt;code&gt;noError&lt;/code&gt; , если присвоение было успешным, в противном случае - код ошибки.</target>
        </trans-unit>
        <trans-unit id="a52d30d9d64255b930d9d116fb319458b1376b07" translate="yes" xml:space="preserve">
          <source>These functions sends a signal to the outer space and the caller hopes that someone is listening. In other words, they invoke &lt;code&gt;et:trace_me/4&lt;/code&gt; and &lt;code&gt;et:trace_me/5&lt;/code&gt; respectively.</source>
          <target state="translated">Эти функции отправляют сигнал в космическое пространство, и вызывающий надеется, что кто-то его слушает. Другими словами, они вызывают &lt;code&gt;et:trace_me/4&lt;/code&gt; и &lt;code&gt;et:trace_me/5&lt;/code&gt; соответственно.</target>
        </trans-unit>
        <trans-unit id="7c5096edbc3525bc8e760ed1084c3016bcbfb9a7" translate="yes" xml:space="preserve">
          <source>These have the same meanings as the normal returns but the characters in &lt;code&gt;PushBackList&lt;/code&gt; will be prepended to the input characters and scanned for the next token. Note that pushing back a newline will mean the line numbering will no longer be correct.</source>
          <target state="translated">Они имеют то же значение, что и обычные возвраты, но символы в &lt;code&gt;PushBackList&lt;/code&gt; будут добавлены к входным символам и сканируются в поисках следующего токена. Обратите внимание, что перенос новой строки назад будет означать, что нумерация строк больше не будет правильной.</target>
        </trans-unit>
        <trans-unit id="28abed6097a4fa5f0db1c6ca4ce80910586cfeeb" translate="yes" xml:space="preserve">
          <source>These heuristics are also used by &lt;code&gt;io:format/2&lt;/code&gt;, &lt;code&gt;io_lib:format/2&lt;/code&gt;, and friends when modifier &lt;code&gt;t&lt;/code&gt; is used with &lt;code&gt;~p&lt;/code&gt; or &lt;code&gt;~P&lt;/code&gt;:</source>
          <target state="translated">Эти эвристики также используются &lt;code&gt;io:format/2&lt;/code&gt; , &lt;code&gt;io_lib:format/2&lt;/code&gt; и друзьями, когда модификатор &lt;code&gt;t&lt;/code&gt; используется с &lt;code&gt;~p&lt;/code&gt; или &lt;code&gt;~P&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="216fd64a35c1d2baaf5b3f037d998a945eb81f1e" translate="yes" xml:space="preserve">
          <source>These host entries are searched after all added with &lt;code&gt;{file, hosts, File}&lt;/code&gt; above or &lt;code&gt;{host, IP, Aliases}&lt;/code&gt; below when lookup option &lt;code&gt;file&lt;/code&gt; is used.</source>
          <target state="translated">Эти записи хоста ищутся после того, как все они добавлены с &lt;code&gt;{file, hosts, File}&lt;/code&gt; выше или &lt;code&gt;{host, IP, Aliases}&lt;/code&gt; ниже, когда используется &lt;code&gt;file&lt;/code&gt; параметров поиска .</target>
        </trans-unit>
        <trans-unit id="07700975c4ec0500ef74d72b43eae1d34a325990" translate="yes" xml:space="preserve">
          <source>These instructions apply for both 32-bit and 64-bit Windows. Note that even if you build a 64-bit version of Erlang, most of the directories and files involved are still named win32. Some occurances of the name win64 are however present. The installation file for a 64-bit Windows version of Erlang, for example, is &lt;code&gt;otp_win64_21.exe&lt;/code&gt;.</source>
          <target state="translated">Эти инструкции применимы как для 32-разрядной, так и для 64-разрядной версии Windows. Обратите внимание, что даже если вы создаете 64-разрядную версию Erlang, большинство задействованных каталогов и файлов по-прежнему будут иметь имена win32. Однако присутствуют некоторые вхождения названия win64. Например, установочный файл для 64-разрядной версии Erlang для Windows - это &lt;code&gt;otp_win64_21.exe&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a77e8aed44d3c5857cf64a2b419ef6f4260faa79" translate="yes" xml:space="preserve">
          <source>These instructions apply for both 32-bit and 64-bit Windows. Note that even if you build a 64-bit version of Erlang, most of the directories and files involved are still named win32. Some occurrences of the name win64 are however present. The installation file for a 64-bit Windows version of Erlang, for example, is &lt;code&gt;otp_win64_23.exe&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c394330d6ef054d071d8f890cc4c3711a8bdc95c" translate="yes" xml:space="preserve">
          <source>These interfaces are intended to be used when it is considered an error that ports are open to a driver that no &lt;code&gt;&lt;a href=&quot;#users&quot;&gt;user&lt;/a&gt;&lt;/code&gt; has loaded. The ports that are still open when the last &lt;code&gt;&lt;a href=&quot;#users&quot;&gt;user&lt;/a&gt;&lt;/code&gt; calls &lt;code&gt;unload_driver/1&lt;/code&gt; or when the last process having the driver loaded dies, are killed with reason &lt;code&gt;driver_unloaded&lt;/code&gt;.</source>
          <target state="translated">Эти интерфейсы предназначены для использования, когда считается ошибкой то, что порты открыты для драйвера, который не загружен ни одним &lt;code&gt;&lt;a href=&quot;#users&quot;&gt;user&lt;/a&gt;&lt;/code&gt; . Порты, которые все еще открыты, когда последний &lt;code&gt;&lt;a href=&quot;#users&quot;&gt;user&lt;/a&gt;&lt;/code&gt; вызывает &lt;code&gt;unload_driver/1&lt;/code&gt; или когда последний процесс с загруженным драйвером умирает, уничтожаются по причине &lt;code&gt;driver_unloaded&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="976444f76eef13967574c5a3e92db1199465ca38" translate="yes" xml:space="preserve">
          <source>These options are actually specific to the used module. The ones shown here are applicable to the default &lt;code&gt;agent_net_if_filter_module()&lt;/code&gt;.</source>
          <target state="translated">Эти параметры фактически относятся к используемому модулю. Показанные здесь применимы к &lt;code&gt;agent_net_if_filter_module()&lt;/code&gt; по умолчанию .</target>
        </trans-unit>
        <trans-unit id="79c5c84c302204b5ad2412f8768bea313cd0255d" translate="yes" xml:space="preserve">
          <source>These options are actually specific to the used module. The ones shown here are applicable to the default &lt;code&gt;agent_net_if_module()&lt;/code&gt;.</source>
          <target state="translated">Эти параметры фактически относятся к используемому модулю. Показанные здесь применимы к &lt;code&gt;agent_net_if_module()&lt;/code&gt; по умолчанию .</target>
        </trans-unit>
        <trans-unit id="dc7fa27f4823b4c40fb38224a9f2c44f5dc1ff3d" translate="yes" xml:space="preserve">
          <source>These options are actually specific to the used module. The ones shown here are applicable to the default &lt;code&gt;manager_net_if_filter_module()&lt;/code&gt;.</source>
          <target state="translated">Эти параметры фактически относятся к используемому модулю. Показанные здесь применимы к &lt;code&gt;manager_net_if_filter_module()&lt;/code&gt; по умолчанию .</target>
        </trans-unit>
        <trans-unit id="05b3a993da19e30da69e0542004935e23fe64b41" translate="yes" xml:space="preserve">
          <source>These options are actually specific to the used module. The ones shown here are applicable to the default &lt;code&gt;manager_net_if_module()&lt;/code&gt;.</source>
          <target state="translated">Эти параметры фактически относятся к используемому модулю. Показанные здесь применимы к функции &lt;code&gt;manager_net_if_module()&lt;/code&gt; по умолчанию .</target>
        </trans-unit>
        <trans-unit id="f52e46ef3067f96590cea6bfd8ffc4461c4cb9d7" translate="yes" xml:space="preserve">
          <source>These options are available when starting the name server. The name server is normally started automatically by command &lt;code&gt;&lt;a href=&quot;erl&quot;&gt;erl(1)&lt;/a&gt;&lt;/code&gt; (if not already available), but it can also be started at system startup.</source>
          <target state="translated">Эти параметры доступны при запуске сервера имен. Сервер имен обычно запускается автоматически командой &lt;code&gt;&lt;a href=&quot;erl&quot;&gt;erl(1)&lt;/a&gt;&lt;/code&gt; (если он еще не доступен), но он также может быть запущен при запуске системы.</target>
        </trans-unit>
        <trans-unit id="b991dcaf8a3c7fdb1bfc134be14dc32ae7b61b5d" translate="yes" xml:space="preserve">
          <source>These options are described in &lt;code&gt;&lt;a href=&quot;#zip_options&quot;&gt; create/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60feb775a5a2a0fc8f58b8ddfb26ab5e82088613" translate="yes" xml:space="preserve">
          <source>These options are described in &lt;code&gt;&lt;a href=&quot;#zip_options&quot;&gt;create/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эти параметры описаны в &lt;code&gt;&lt;a href=&quot;#zip_options&quot;&gt;create/3&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e6e76727821c709b0e581bace27e5e3b9ee3793f" translate="yes" xml:space="preserve">
          <source>These options are only for debugging and testing &lt;code&gt;epmd&lt;/code&gt; clients. They are not to be used in normal operation.</source>
          <target state="translated">Эти параметры предназначены только для отладки и тестирования клиентов &lt;code&gt;epmd&lt;/code&gt; . Их нельзя использовать при нормальной работе.</target>
        </trans-unit>
        <trans-unit id="3184ea6ec742a62558f1e2dbf393dc6981719dd9" translate="yes" xml:space="preserve">
          <source>These options are preset by the &lt;code&gt;rename&lt;/code&gt; function and cannot be overridden by the user.</source>
          <target state="translated">Эти параметры предварительно устанавливаются функцией &lt;code&gt;rename&lt;/code&gt; и не могут быть изменены пользователем.</target>
        </trans-unit>
        <trans-unit id="7d74113369f61132f3b23365e982841353df0d4a" translate="yes" xml:space="preserve">
          <source>These options make &lt;code&gt;epmd&lt;/code&gt; run as an interactive command, displaying the results of sending queries to an already running instance of &lt;code&gt;epmd&lt;/code&gt;. The &lt;code&gt;epmd&lt;/code&gt; contacted is always on the local node, but option &lt;code&gt;-port&lt;/code&gt; can be used to select between instances if several are running using different ports on the host.</source>
          <target state="translated">Эти параметры позволяют запускать &lt;code&gt;epmd&lt;/code&gt; как интерактивную команду, отображающую результаты отправки запросов уже запущенному экземпляру &lt;code&gt;epmd&lt;/code&gt; . Установленный &lt;code&gt;epmd&lt;/code&gt; всегда находится на локальном узле, но для выбора между экземплярами можно использовать параметр &lt;code&gt;-port&lt;/code&gt; , если несколько экземпляров работают с разными портами на хосте.</target>
        </trans-unit>
        <trans-unit id="e10be32239987c6f4a5a6c8dce5e7fc454e9dfca" translate="yes" xml:space="preserve">
          <source>These override the default and the options specified to &lt;code&gt;&lt;a href=&quot;#compile-2&quot;&gt;compile/2&lt;/a&gt;&lt;/code&gt;. For example, the following pattern changes the convention to CR:</source>
          <target state="translated">Они переопределяют значение по умолчанию и параметры, указанные для &lt;code&gt;&lt;a href=&quot;#compile-2&quot;&gt;compile/2&lt;/a&gt;&lt;/code&gt; . Например, следующий шаблон изменяет соглашение на CR:</target>
        </trans-unit>
        <trans-unit id="76493b00ea7c71eb89b79e6053d97efaadb6e80f" translate="yes" xml:space="preserve">
          <source>These override the default and the options specified to the compiling function, but they can themselves be overridden by options specified to a matching function. Notice that these special settings, which are not Perl-compatible, are recognized only at the very start of a pattern, and that they must be in upper case. If more than one of them is present, the last one is used. They can be combined with a change of newline convention; for example, a pattern can start with:</source>
          <target state="translated">Они переопределяют опции по умолчанию и опции,указанные в компилирующей функции,но они могут быть сами переопределены опциями,указанными в соответствующей функции.Обратите внимание,что эти специальные настройки,не совместимые с Perl,распознаются только в самом начале работы детали,и они должны быть в верхнем регистре.Если их несколько,используется последняя.Их можно комбинировать с изменением условного обозначения новой линии;например,можно начать работу с детали:</target>
        </trans-unit>
        <trans-unit id="7c8826c9e11e1f3d846a339b100ceac99eba779d" translate="yes" xml:space="preserve">
          <source>These packet types only have effect on receiving. When sending a packet, it is the responsibility of the application to supply a correct header. On receiving, however, one message is sent to the controlling process for each complete packet received, and, similarly, each call to &lt;code&gt;gen_tcp:recv/2,3&lt;/code&gt; returns one complete packet. The header is &lt;strong&gt;not&lt;/strong&gt; stripped off.</source>
          <target state="translated">Эти типы пакетов влияют только на получение. При отправке пакета ответственность за правильный заголовок лежит на приложении. Однако при получении одно сообщение отправляется контролирующему процессу для каждого полученного полного пакета, и, аналогично, каждый вызов &lt;code&gt;gen_tcp:recv/2,3&lt;/code&gt; возвращает один полный пакет. Заголовок &lt;strong&gt;не&lt;/strong&gt; сдирается.</target>
        </trans-unit>
        <trans-unit id="703061c1f2854688bcb586643b95905fd657c226" translate="yes" xml:space="preserve">
          <source>These parameters can be modified by the user with the following configuration term:</source>
          <target state="translated">Эти параметры могут быть изменены пользователем с помощью следующего конфигурационного термина:</target>
        </trans-unit>
        <trans-unit id="019f3eb722d3988d7298c6a669ca65df0fbbaa93" translate="yes" xml:space="preserve">
          <source>These questions are not always trivial to answer. Some benchmarks might be needed to back up your theory and to avoid making things slower if your theory is wrong. For details, see &lt;code&gt;&lt;a href=&quot;#benchmark&quot;&gt;Benchmarking&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">На эти вопросы не всегда легко ответить. Некоторые тесты могут потребоваться для подтверждения вашей теории и во избежание замедления работы, если ваша теория неверна. Для получения дополнительной информации см. &lt;code&gt;&lt;a href=&quot;#benchmark&quot;&gt;Benchmarking&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="764b3f2b692c282ad0bd05c88a3b6913fb526534" translate="yes" xml:space="preserve">
          <source>These record definitions use the &quot;new&quot; spelling 'adaptation', not the deprecated 'adaption', regardless of which spelling the underlying C API uses.</source>
          <target state="translated">В этих определениях записи используется &quot;новая&quot; орфографическая &quot;адаптация&quot;,а не устаревшая &quot;адаптация&quot;,независимо от того,какое написание используется в базовом C API.</target>
        </trans-unit>
        <trans-unit id="dc5ac270ae2ee1136906b421f96b332ee47c42ac" translate="yes" xml:space="preserve">
          <source>These relations are interpreted as follows: if we are in state &lt;code&gt;S&lt;/code&gt; and event &lt;code&gt;E&lt;/code&gt; occurs, we are to perform actions &lt;code&gt;A&lt;/code&gt; and make a transition to state &lt;code&gt;S'&lt;/code&gt;. Notice that &lt;code&gt;S'&lt;/code&gt; can be equal to &lt;code&gt;S&lt;/code&gt; and that &lt;code&gt;A&lt;/code&gt; can be empty.</source>
          <target state="translated">Эти отношения интерпретируются следующим образом: если мы находимся в состоянии &lt;code&gt;S&lt;/code&gt; и происходит событие &lt;code&gt;E&lt;/code&gt; , мы должны выполнить действия &lt;code&gt;A&lt;/code&gt; и перейти в состояние &lt;code&gt;S'&lt;/code&gt; . Обратите внимание, что &lt;code&gt;S'&lt;/code&gt; может быть равно &lt;code&gt;S&lt;/code&gt; , а &lt;code&gt;A&lt;/code&gt; может быть пустым.</target>
        </trans-unit>
        <trans-unit id="ae00fb07c3a51201cd4652ed075fa902a7ed72cb" translate="yes" xml:space="preserve">
          <source>These relations are interpreted as follows: if we are in state &lt;code&gt;S&lt;/code&gt; and event &lt;code&gt;E&lt;/code&gt; occurs, we are to perform actions &lt;code&gt;A&lt;/code&gt;, and make a transition to state &lt;code&gt;S'&lt;/code&gt;. Notice that &lt;code&gt;S'&lt;/code&gt; can be equal to &lt;code&gt;S&lt;/code&gt;, and that &lt;code&gt;A&lt;/code&gt; can be empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="663a0dde4969fddd76e6f124e908bc76a6818654" translate="yes" xml:space="preserve">
          <source>These services are controlled through the process &lt;code&gt;global_name_server&lt;/code&gt; that exists on every node. The global name server starts automatically when a node is started. With the term &lt;strong&gt;global&lt;/strong&gt; is meant over a system consisting of many Erlang nodes.</source>
          <target state="translated">Эти службы управляются процессом &lt;code&gt;global_name_server&lt;/code&gt; , который существует на каждом узле. Сервер глобальных имен запускается автоматически при запуске узла. Термин &amp;laquo; &lt;strong&gt;глобальный&amp;raquo;&lt;/strong&gt; означает систему, состоящую из множества узлов Erlang.</target>
        </trans-unit>
        <trans-unit id="18b3db7ac68ef66e01ea9e3110a4d7998bc037fb" translate="yes" xml:space="preserve">
          <source>These state transition actions can be invoked by returning them from the &lt;code&gt;&lt;a href=&quot;#state%20callback&quot;&gt;state callback&lt;/a&gt;&lt;/code&gt; when it is called with an &lt;code&gt;&lt;a href=&quot;#type-event_type&quot;&gt;event&lt;/a&gt;&lt;/code&gt;, from &lt;code&gt;&lt;a href=&quot;#Module:init-1&quot;&gt;Module:init/1&lt;/a&gt;&lt;/code&gt; or by giving them to &lt;code&gt;&lt;a href=&quot;#enter_loop-5&quot;&gt;enter_loop/5,6&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эти действия перехода между состояниями могут быть вызваны путем возврата их из &lt;code&gt;&lt;a href=&quot;#state%20callback&quot;&gt;state callback&lt;/a&gt;&lt;/code&gt; когда он вызывается с &lt;code&gt;&lt;a href=&quot;#type-event_type&quot;&gt;event&lt;/a&gt;&lt;/code&gt; , из &lt;code&gt;&lt;a href=&quot;#Module:init-1&quot;&gt;Module:init/1&lt;/a&gt;&lt;/code&gt; или путем передачи их в &lt;code&gt;&lt;a href=&quot;#enter_loop-5&quot;&gt;enter_loop/5,6&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f84a998101580824af52c1efde9742c062b4f3ac" translate="yes" xml:space="preserve">
          <source>These state transition actions can be invoked by returning them from the &lt;code&gt;&lt;a href=&quot;#state%20callback&quot;&gt;state callback&lt;/a&gt;&lt;/code&gt;, from &lt;code&gt;&lt;a href=&quot;#Module:init-1&quot;&gt;Module:init/1&lt;/a&gt;&lt;/code&gt; or by giving them to &lt;code&gt;&lt;a href=&quot;#enter_loop-5&quot;&gt;enter_loop/5,6&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эти действия перехода между состояниями могут быть вызваны путем возврата их из &lt;code&gt;&lt;a href=&quot;#state%20callback&quot;&gt;state callback&lt;/a&gt;&lt;/code&gt; , из &lt;code&gt;&lt;a href=&quot;#Module:init-1&quot;&gt;Module:init/1&lt;/a&gt;&lt;/code&gt; или передачи их в &lt;code&gt;&lt;a href=&quot;#enter_loop-5&quot;&gt;enter_loop/5,6&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="61a80d0c0fec3872bf24b97867cc3c3fed9d0143" translate="yes" xml:space="preserve">
          <source>These tests cannot (always) be done automatically when cross compiling. You usually do not need to set these variables.</source>
          <target state="translated">Эти тесты не могут (всегда)выполняться автоматически при перекрестной компиляции.Обычно нет необходимости устанавливать эти переменные.</target>
        </trans-unit>
        <trans-unit id="2d05ecef6dec2328daa1fa8983fc44a7ac6b969f" translate="yes" xml:space="preserve">
          <source>These three BIFs do conversions that would be difficult (or impossible) to do in Erlang.</source>
          <target state="translated">Эти три BIF делают преобразования,которые было бы трудно (или невозможно)сделать в Эрланге.</target>
        </trans-unit>
        <trans-unit id="9fc1faee4aad725a39321bd959c62d7b61fc838d" translate="yes" xml:space="preserve">
          <source>These three tables, &lt;code&gt;employees&lt;/code&gt;, &lt;code&gt;dept&lt;/code&gt;, and &lt;code&gt;projects&lt;/code&gt;, are made up of real records. The following database content is stored in the tables and is built on relationships. These tables are &lt;code&gt;manager&lt;/code&gt;, &lt;code&gt;at_dep&lt;/code&gt;, and &lt;code&gt;in_proj&lt;/code&gt;.</source>
          <target state="translated">Эти три таблицы, &lt;code&gt;employees&lt;/code&gt; , &lt;code&gt;dept&lt;/code&gt; и &lt;code&gt;projects&lt;/code&gt; , состоят из реальных записей. Следующее содержимое базы данных хранится в таблицах и построено на отношениях. Эти таблицы - &lt;code&gt;manager&lt;/code&gt; , &lt;code&gt;at_dep&lt;/code&gt; и &lt;code&gt;in_proj&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b0128c9fb51c2ef33512e0f9218f6c647c34f70b" translate="yes" xml:space="preserve">
          <source>These time-out actions sets time-out &lt;code&gt;&lt;a href=&quot;#type-transition_option&quot;&gt;transition options&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2be4aeb784d73a7483bb30162082ef141d284732" translate="yes" xml:space="preserve">
          <source>These timeout actions sets timeout &lt;code&gt;&lt;a href=&quot;#type-transition_option&quot;&gt;transition options&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эти действия по таймауту устанавливают &lt;code&gt;&lt;a href=&quot;#type-transition_option&quot;&gt;transition options&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e1c1c65f29a414599f1da742468bf0977b89b3ea" translate="yes" xml:space="preserve">
          <source>These tuples are strictly monotonically ordered on the current runtime system instance according to creation time. It is important that the monotonic time is in the first element (the most significant element when comparing two-tuples). Using the monotonic time in the tuples, you can calculate time between events.</source>
          <target state="translated">Эти кортежи строго монотонно упорядочены на текущем экземпляре системы в зависимости от времени создания.Важно,чтобы монотонное время находилось в первом элементе (наиболее значимом при сравнении двух пар).Используя монотонное время в кортежах,можно вычислить время между событиями.</target>
        </trans-unit>
        <trans-unit id="d52f80b222da3d294b0f671c73049263b3d9e584" translate="yes" xml:space="preserve">
          <source>These two functions are provided in the standard module &lt;code&gt;lists&lt;/code&gt;. &lt;code&gt;foreach&lt;/code&gt; takes a list and applies a fun to every element in the list. &lt;code&gt;map&lt;/code&gt; creates a new list by applying a fun to every element in a list. Going back to the shell, &lt;code&gt;map&lt;/code&gt; is used and a fun to add 3 to every element of a list:</source>
          <target state="translated">Эти две функции представлены в стандартных &lt;code&gt;lists&lt;/code&gt; модулей . &lt;code&gt;foreach&lt;/code&gt; берет список и применяет забаву к каждому элементу в списке. &lt;code&gt;map&lt;/code&gt; создает новый список, применяя забаву к каждому элементу в списке. Возвращаясь к оболочке, используется &lt;code&gt;map&lt;/code&gt; и забавно добавить 3 к каждому элементу списка:</target>
        </trans-unit>
        <trans-unit id="4144563beb40dfa20763e7a44f564ed7df7e5fe8" translate="yes" xml:space="preserve">
          <source>These two functions have a similar structure. They both iterate over a list and do something to each element in the list. The &quot;something&quot; is passed on as an extra argument to the function that does this.</source>
          <target state="translated">Эти две функции имеют схожую структуру.Обе они выполняют итерацию по списку и что-то делают с каждым элементом списка.Функция,которая это делает,передает &quot;что-то&quot; в качестве дополнительного аргумента.</target>
        </trans-unit>
        <trans-unit id="6bf31d937cdb8656e463da3517deb67f3a158915" translate="yes" xml:space="preserve">
          <source>These two functions look up an executable program, with the specified name and a search path, in the same way as the underlying OS. &lt;code&gt;find_executable/1&lt;/code&gt; uses the current execution path (that is, the environment variable &lt;code&gt;PATH&lt;/code&gt; on Unix and Windows).</source>
          <target state="translated">Эти две функции ищут исполняемую программу с указанным именем и путем поиска так же, как и в базовой ОС. &lt;code&gt;find_executable/1&lt;/code&gt; использует текущий путь выполнения (то есть переменную среды &lt;code&gt;PATH&lt;/code&gt; в Unix и Windows).</target>
        </trans-unit>
        <trans-unit id="e0d074a20ddd5e5f33562cc40bc5760ad507e2a6" translate="yes" xml:space="preserve">
          <source>These two pieces work in concert. Basically, the &lt;code&gt;Collector&lt;/code&gt; receives &lt;code&gt;Raw Trace Data&lt;/code&gt; and processes it into &lt;code&gt;Events&lt;/code&gt; in a &lt;code&gt;et&lt;/code&gt; specific format (defined in &lt;code&gt;et/include/et.hrl&lt;/code&gt;). The &lt;code&gt;Viewer&lt;/code&gt; interrogates the &lt;code&gt;Collector&lt;/code&gt; and displays an interactive representation of the data.</source>
          <target state="translated">Эти две пьесы работают согласованно. По сути, &lt;code&gt;Collector&lt;/code&gt; получает &lt;code&gt;Raw Trace Data&lt;/code&gt; и преобразует их в &lt;code&gt;Events&lt;/code&gt; в специальном формате &lt;code&gt;et&lt;/code&gt; (определенном в &lt;code&gt;et/include/et.hrl&lt;/code&gt; ). Средство &lt;code&gt;Viewer&lt;/code&gt; опрашивает &lt;code&gt;Collector&lt;/code&gt; и отображает интерактивное представление данных.</target>
        </trans-unit>
        <trans-unit id="dda87b11f0a5cbea6a2795c81d6b6e5706e62c96" translate="yes" xml:space="preserve">
          <source>These two types are often not needed, as the socket automatically switches from &lt;code&gt;http&lt;/code&gt;/&lt;code&gt;http_bin&lt;/code&gt; to &lt;code&gt;httph&lt;/code&gt;/&lt;code&gt;httph_bin&lt;/code&gt; internally after the first line is read. However, there can be occasions when they are useful, such as parsing trailers from chunked encoding.</source>
          <target state="translated">Эти два типа часто не нужны, поскольку сокет автоматически переключается с &lt;code&gt;http&lt;/code&gt; / &lt;code&gt;http_bin&lt;/code&gt; на &lt;code&gt;httph&lt;/code&gt; / &lt;code&gt;httph_bin&lt;/code&gt; изнутри после чтения первой строки. Однако в некоторых случаях они могут оказаться полезными, например, при синтаксическом разборе трейлеров из фрагментированной кодировки.</target>
        </trans-unit>
        <trans-unit id="1c70e7bfedf23869960675efaf18a91ce706b0d2" translate="yes" xml:space="preserve">
          <source>These values can be used to determine order between events on the runtime system instance. That is, if both &lt;code&gt;X = erlang:unique_integer([monotonic])&lt;/code&gt; and &lt;code&gt;Y = erlang:unique_integer([monotonic])&lt;/code&gt; are executed by different processes (or the same process) on the same runtime system instance and &lt;code&gt;X &amp;lt; Y&lt;/code&gt;, we know that &lt;code&gt;X&lt;/code&gt; was created before &lt;code&gt;Y&lt;/code&gt;.</source>
          <target state="translated">Эти значения можно использовать для определения порядка между событиями в экземпляре системы времени выполнения. То есть, если и &lt;code&gt;X = erlang:unique_integer([monotonic])&lt;/code&gt; и &lt;code&gt;Y = erlang:unique_integer([monotonic])&lt;/code&gt; выполняются разными процессами (или одним и тем же процессом) в одном экземпляре системы времени выполнения и &lt;code&gt;X &amp;lt; Y&lt;/code&gt; , мы знаем что &lt;code&gt;X&lt;/code&gt; был создан до &lt;code&gt;Y&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="64037abeafa784d21870f15a8f477ebe7f35dde2" translate="yes" xml:space="preserve">
          <source>These variables currently have &lt;strong&gt;no&lt;/strong&gt; effect if you configure using the &lt;code&gt;configure&lt;/code&gt; script directly.</source>
          <target state="translated">Эти переменные в настоящее время &lt;strong&gt;не&lt;/strong&gt; действуют, если вы настраиваете напрямую с &lt;code&gt;configure&lt;/code&gt; скрипта configure .</target>
        </trans-unit>
        <trans-unit id="e4eeacbbfedd76f9009cc450f49274f9b8f50cf0" translate="yes" xml:space="preserve">
          <source>These verbs differ in exactly what kind of failure occurs when backtracking reaches them. The behavior described below is what occurs when the verb is not in a subroutine or an assertion. Subsequent sections cover these special cases.</source>
          <target state="translated">Эти глаголы отличаются тем,какой именно провал происходит,когда до них доходит обратное движение.Поведение,описанное ниже,это то,что происходит,когда глагол не находится в подпрограмме или утверждении.Последующие разделы посвящены этим особым случаям.</target>
        </trans-unit>
        <trans-unit id="2fdbca7f7f11b6cf955d9574790794bb8f837662" translate="yes" xml:space="preserve">
          <source>They are deprecated from 23.0 and for removal in 24.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcb7ed1357b82ff56473fd5066848225a0c020e2" translate="yes" xml:space="preserve">
          <source>They can also be combined with the (*UTF8), (*UTF), or (*UCP) special sequences. Inside a character class, \R is treated as an unrecognized escape sequence, and so matches the letter &quot;R&quot; by default.</source>
          <target state="translated">Они также могут комбинироваться со специальными последовательностями (*UTF8),(*UTF)или (*UCP).Внутри символьного класса,\R рассматривается как нераспознанная экранирующая последовательность,и поэтому по умолчанию соответствует букве &quot;R&quot;.</target>
        </trans-unit>
        <trans-unit id="4f19fb9eb943279dbf1aab1f1a7e9449243b24c1" translate="yes" xml:space="preserve">
          <source>They can then be used in either of the following ways:</source>
          <target state="translated">Они могут быть использованы любым из следующих способов:</target>
        </trans-unit>
        <trans-unit id="f10af1c6b334490e5b1459d0c8bfcff29264cd5a" translate="yes" xml:space="preserve">
          <source>Thin space</source>
          <target state="translated">Тонкое пространство</target>
        </trans-unit>
        <trans-unit id="6196f53beeed99bac9dd3ff39c523037e81c3134" translate="yes" xml:space="preserve">
          <source>Think twice before using this function. If you still need to use it, always &lt;code&gt;call os:type()&lt;/code&gt; first.</source>
          <target state="translated">Дважды подумайте, прежде чем использовать эту функцию. Если вам все еще нужно его использовать, всегда сначала &lt;code&gt;call os:type()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6ea8743046d2b98d1556841772481beb6c8b7be7" translate="yes" xml:space="preserve">
          <source>Think twice before using this function. Use module &lt;code&gt;filename&lt;/code&gt; if you want to inspect or build filenames in a portable way. Avoid matching on atom &lt;code&gt;Osname&lt;/code&gt;.</source>
          <target state="translated">Дважды подумайте, прежде чем использовать эту функцию. Используйте &lt;code&gt;filename&lt;/code&gt; модуля, если вы хотите проверить или создать имена файлов переносимым способом. Избегайте совпадения по &lt;code&gt;Osname&lt;/code&gt; атома .</target>
        </trans-unit>
        <trans-unit id="3f8c7ac9b539ff01e43c48a7bf8bc197468de776" translate="yes" xml:space="preserve">
          <source>Third, its possible to alter the global default value in runtime by calling the function &lt;code&gt;&lt;a href=&quot;socket#use_registry-1&quot;&gt;use_registry/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b64bf09f4307d3d16c58fc0bfca8ad10a7fe410" translate="yes" xml:space="preserve">
          <source>This &quot;bad&quot; state consists of a cluster of small and/or highly fragmented carriers located at the sentinel in the pool. The largest free block in such a &quot;bad&quot; carrier is rather small, making it unable to satisfy most allocation requests. As the search always started at the sentinel, any such &quot;bad&quot; carriers that had been left in the pool would eventually cluster together at the sentinel. All searches first have to skip past this cluster of &quot;bad&quot; carriers to reach a &quot;good&quot; carrier. When the cluster gets to the same size as the search limit, all searches will essentially fail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d592d2f7893043a1b846652e39ab1418e618bc4e" translate="yes" xml:space="preserve">
          <source>This (most common) scenario simply supports that each &lt;code&gt;&lt;a href=&quot;#users&quot;&gt;user&lt;/a&gt;&lt;/code&gt; of the driver loads it when needed and unloads it when no longer needed. The driver is always reference counted and as long as a process keeping the driver loaded is still alive, the driver is present in the system.</source>
          <target state="translated">Этот (наиболее распространенный) сценарий просто поддерживает то, что каждый &lt;code&gt;&lt;a href=&quot;#users&quot;&gt;user&lt;/a&gt;&lt;/code&gt; драйвера загружает его, когда это необходимо, и выгружает, когда он больше не нужен. Драйвер всегда подсчитывается по ссылкам, и пока процесс, поддерживающий загруженный драйвер, все еще жив, драйвер присутствует в системе.</target>
        </trans-unit>
        <trans-unit id="cb6a47e588a181452c326fa39e3e06a8bbaf215e" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;at_dep&lt;/code&gt; record has the Erlang tuple representation &lt;code&gt;{at_dep, klacke, 'B/SFR'}&lt;/code&gt;.</source>
          <target state="translated">Эта запись &lt;code&gt;at_dep&lt;/code&gt; имеет представление кортежа Erlang &lt;code&gt;{at_dep, klacke, 'B/SFR'}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1bb50969a4322693220f1622878a187ec8ef7865" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;employee&lt;/code&gt; record has the Erlang record/tuple representation &lt;code&gt;{employee, 104732, klacke, 7, male, 98108, {221, 015}}&lt;/code&gt;.</source>
          <target state="translated">Эта запись &lt;code&gt;employee&lt;/code&gt; имеет представление записи / кортежа Erlang &lt;code&gt;{employee, 104732, klacke, 7, male, 98108, {221, 015}}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a6f78a7a573f4788a961abb21d13018ab8263739" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;in_proj&lt;/code&gt; record has the Erlang tuple representation &lt;code&gt;{in_proj, klacke, 'Erlang', klacke, 'otp', klacke, 'mnesia'}&lt;/code&gt;.</source>
          <target state="translated">Эта запись &lt;code&gt;in_proj&lt;/code&gt; имеет представление кортежа Erlang &lt;code&gt;{in_proj, klacke, 'Erlang', klacke, 'otp', klacke, 'mnesia'}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="30eaf1b61fcff886440404502320b8087244781b" translate="yes" xml:space="preserve">
          <source>This &lt;strong&gt;Implementation Example&lt;/strong&gt; section describes how a simple manager can be implemented with the SNMP Development Toolkit.</source>
          <target state="translated">В этом разделе &lt;strong&gt;Пример реализации&lt;/strong&gt; описывается, как простой менеджер может быть реализован с помощью набора инструментов разработки SNMP.</target>
        </trans-unit>
        <trans-unit id="ffdeda27af47f2d41561b45e8678ebc080646b29" translate="yes" xml:space="preserve">
          <source>This &lt;strong&gt;Implementation Example&lt;/strong&gt; section describes how an MIB can be implemented with the SNMP Development Toolkit.</source>
          <target state="translated">В этом разделе &amp;laquo; &lt;strong&gt;Пример реализации&lt;/strong&gt; &amp;raquo; описывается, как можно реализовать MIB с помощью набора инструментов разработки SNMP.</target>
        </trans-unit>
        <trans-unit id="90786d1bedc2d134f9012ff5026a27ec4ce6ae1d" translate="yes" xml:space="preserve">
          <source>This &lt;strong&gt;transition action&lt;/strong&gt; can be invoked by returning it from the &lt;code&gt;&lt;a href=&quot;#state%20callback&quot;&gt;&lt;strong&gt;state callback&lt;/strong&gt;&lt;/a&gt;&lt;/code&gt;, from &lt;code&gt;&lt;a href=&quot;#Module:init-1&quot;&gt;Module:init/1&lt;/a&gt;&lt;/code&gt; or by giving it to &lt;code&gt;&lt;a href=&quot;#enter_loop-5&quot;&gt;enter_loop/5,6&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8285515d6a8ffd60d079855281d19dbb335db5a" translate="yes" xml:space="preserve">
          <source>This BIF can be removed in a future version of the Beam machine without prior warning. It is unlikely to be implemented in other Erlang implementations.</source>
          <target state="translated">Этот BIF может быть удален в будущей версии Beam-машины без предварительного предупреждения.Вряд ли он будет реализован в других реализациях Erlang.</target>
        </trans-unit>
        <trans-unit id="d2c9f52ffa82790c5add5ce609c3b465fa6b5f87" translate="yes" xml:space="preserve">
          <source>This BIF is always to be used for hashing terms. It distributes small integers better than &lt;code&gt;phash/2&lt;/code&gt;, and it is faster for bignums and binaries.</source>
          <target state="translated">Этот BIF всегда должен использоваться для терминов хеширования. Он распределяет небольшие целые числа лучше, чем &lt;code&gt;phash/2&lt;/code&gt; , и быстрее для больших и двоичных файлов.</target>
        </trans-unit>
        <trans-unit id="ca02fa554a6262c386a3db4a859b0b9b57b609dd" translate="yes" xml:space="preserve">
          <source>This BIF is documented for completeness. Usually &lt;code&gt;is_record/2&lt;/code&gt; is to be used.</source>
          <target state="translated">Этот BIF задокументирован для полноты. Обычно используется &lt;code&gt;is_record/2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="83e449dcefb700e8a09d27413d7037f287088ef7" translate="yes" xml:space="preserve">
          <source>This BIF is intended for &lt;strong&gt;debugging only&lt;/strong&gt;. For all other purposes, use &lt;code&gt;&lt;a href=&quot;#process_info-2&quot;&gt; process_info/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e919cc7df793008049931bcf01d09ffb06683260" translate="yes" xml:space="preserve">
          <source>This BIF is intended for &lt;strong&gt;debugging only&lt;/strong&gt;. For all other purposes, use &lt;code&gt;&lt;a href=&quot;#process_info-2&quot;&gt;process_info/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Этот BIF предназначен &lt;strong&gt;только&lt;/strong&gt; для &lt;strong&gt;отладки&lt;/strong&gt; . Для всех остальных целей используйте &lt;code&gt;&lt;a href=&quot;#process_info-2&quot;&gt;process_info/2&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b16cda9185776fda7cf953473f68ed8eae22005c" translate="yes" xml:space="preserve">
          <source>This BIF is intended for debugging and is not to be used in application programs.</source>
          <target state="translated">Данный BIF предназначен для отладки и не предназначен для использования в прикладных программах.</target>
        </trans-unit>
        <trans-unit id="3a485a9d729fff78ad515ca89ab62a61dc168854" translate="yes" xml:space="preserve">
          <source>This BIF is intended for debugging only.</source>
          <target state="translated">Этот BIF предназначен только для отладки.</target>
        </trans-unit>
        <trans-unit id="33eab8a0dcb284396b1bdbf0824f52f98a707748" translate="yes" xml:space="preserve">
          <source>This BIF is intended for the code server (see &lt;code&gt;code(3)&lt;/code&gt;) and is not to be used elsewhere.</source>
          <target state="translated">Этот BIF предназначен для сервера кода (см. &lt;code&gt;code(3)&lt;/code&gt; ) и не должен использоваться где-либо еще.</target>
        </trans-unit>
        <trans-unit id="bbc3f97203615ffb6be54801dfb7bad70393f210" translate="yes" xml:space="preserve">
          <source>This BIF is mainly intended for debugging, but it can sometimes be useful in library functions that need to verify, for example, the arity of a fun.</source>
          <target state="translated">Этот BIF в основном предназначен для отладки,но иногда может быть полезен в библиотечных функциях,которые должны проверять,например,arity of a fun.</target>
        </trans-unit>
        <trans-unit id="ed42f39086e8ec9c7b1c29cd5a589cf6f72ca9ff" translate="yes" xml:space="preserve">
          <source>This BIF is useful for builders of cross-reference tools.</source>
          <target state="translated">Этот BIF полезен для создателей инструментов с перекрестными ссылками.</target>
        </trans-unit>
        <trans-unit id="c6cc75865613bc58e0eb7ecb4f457c6d233e733d" translate="yes" xml:space="preserve">
          <source>This DNS client can resolve DNS records even if it is not used for normal name resolving in the node.</source>
          <target state="translated">Этот DNS-клиент может разрешать DNS-записи,даже если он не используется для обычного разрешения имен в узле.</target>
        </trans-unit>
        <trans-unit id="babe61c293ec427280b1edacc01c731077dee4c0" translate="yes" xml:space="preserve">
          <source>This Efficiency Guide cannot really teach you how to write efficient code. It can give you a few pointers about what to avoid and what to use, and some understanding of how certain language features are implemented. This guide does not include general tips about optimization that works in any language, such as moving common calculations out of loops.</source>
          <target state="translated">Данное руководство по эффективности не может реально научить вас писать эффективный код.Оно может дать вам несколько советов о том,чего следует избегать и что использовать,а также некоторое понимание того,как реализуются определенные возможности языка.Данное руководство не содержит общих советов по оптимизации,которая работает на любом языке,например,перемещение обычных вычислений из циклов.</target>
        </trans-unit>
        <trans-unit id="ae1ff29eb10c59731ea6c65a3606a80e84b3335c" translate="yes" xml:space="preserve">
          <source>This Erlang/OTP application supplies a framework for building applications that needs to utilize the Megaco/H.248 protocol.</source>
          <target state="translated">Это приложение Erlang/OTP поставляет фреймворк для строительных приложений,которые должны использовать протокол Megaco/H.248.</target>
        </trans-unit>
        <trans-unit id="b18f63f410f90b5069c9dc2f1ae77d811c62158c" translate="yes" xml:space="preserve">
          <source>This MIB is not loaded by default.</source>
          <target state="translated">Этот MIB не загружается по умолчанию.</target>
        </trans-unit>
        <trans-unit id="a407b3d8ce92982dd769f80205472707dd33acd9" translate="yes" xml:space="preserve">
          <source>This MIB is now loaded into the agent, and a manager can ask questions. As an example of this, we start another Erlang system and the simple Erlang manager in the toolkit:</source>
          <target state="translated">Теперь этот MIB загружается в агента,и менеджер может задавать вопросы.В качестве примера можно привести другую систему Erlang и простой менеджер Erlang в инструментарии:</target>
        </trans-unit>
        <trans-unit id="8bee977533f2540fecf48c418b1e1c4b1c9441e8" translate="yes" xml:space="preserve">
          <source>This PCRE pattern solves the nested parentheses problem (assume that option &lt;code&gt;extended&lt;/code&gt; is set so that whitespace is ignored):</source>
          <target state="translated">Этот шаблон PCRE решает проблему вложенных круглых скобок (предположим, что опция &lt;code&gt;extended&lt;/code&gt; установлена ​​таким образом, что пробелы игнорируются):</target>
        </trans-unit>
        <trans-unit id="ba3b1c781a2b003455c5f276cc7adab4167d61a9" translate="yes" xml:space="preserve">
          <source>This Reference Manual describes the Mnesia API. This includes functions that define and manipulate Mnesia tables.</source>
          <target state="translated">Данное Справочное руководство описывает API Мнезии.Он включает в себя функции,которые определяют таблицы Мнезии и манипулируют ими.</target>
        </trans-unit>
        <trans-unit id="5a1ea321f8ef4337012dd060505384a468b6d8b6" translate="yes" xml:space="preserve">
          <source>This Reference Manual uses a table of persons to illustrate various examples. The following record definition is assumed:</source>
          <target state="translated">Для иллюстрации различных примеров в настоящем Справочном руководстве используется таблица лиц.Предполагается следующее определение записи:</target>
        </trans-unit>
        <trans-unit id="eba208a5a64a9fe2d23e89684b28919d090b1bf5" translate="yes" xml:space="preserve">
          <source>This User's Guide describes how to build Mnesia database applications, and how to integrate and use the Mnesia database management system with OTP. Programming constructs are described, and numerous programming examples are included to illustrate the use of Mnesia.</source>
          <target state="translated">В этом руководстве пользователя описывается,как создавать приложения для работы с базами данных Mnesia,а также как интегрировать и использовать систему управления базами данных Mnesia с OTP.Описаны конструкции программирования,а также приведены многочисленные примеры программирования,иллюстрирующие использование Mnesia.</target>
        </trans-unit>
        <trans-unit id="4f455597a879e8e0b44bd2b0f60e41d0029eaba8" translate="yes" xml:space="preserve">
          <source>This User's Guide describes the documentation storage format initially described in &lt;code&gt;&lt;a href=&quot;https://www.erlang.org/erlang-enhancement-proposals/eep-0048.html&quot;&gt;EEP-48&lt;/a&gt;&lt;/code&gt;. By standardizing how API documentation is stored, it will be possible to write tools that work across languages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7c2e051140679b5fabfd3850166d5e44acd182d" translate="yes" xml:space="preserve">
          <source>This User's Guide is organized as follows:</source>
          <target state="translated">Данное Руководство пользователя организовано следующим образом:</target>
        </trans-unit>
        <trans-unit id="6e07c970a29206fa6177bb430aa23651cee332f1" translate="yes" xml:space="preserve">
          <source>This access functions example shows how &lt;code&gt;&lt;a href=&quot;#lookup-3&quot;&gt;lookup/3&lt;/a&gt;&lt;/code&gt; can be implemented using &lt;code&gt;&lt;a href=&quot;#resolve-3&quot;&gt;resolve/3&lt;/a&gt;&lt;/code&gt; from outside the module:</source>
          <target state="translated">В этом примере функций доступа показано, как можно реализовать &lt;code&gt;&lt;a href=&quot;#lookup-3&quot;&gt;lookup/3&lt;/a&gt;&lt;/code&gt; с помощью &lt;code&gt;&lt;a href=&quot;#resolve-3&quot;&gt;resolve/3&lt;/a&gt;&lt;/code&gt; извне модуля:</target>
        </trans-unit>
        <trans-unit id="e453611cc830c0fe9b4a7d78e62c5d3c550a27db" translate="yes" xml:space="preserve">
          <source>This acquires a lock of type &lt;code&gt;LockKind&lt;/code&gt; on the entire table &lt;code&gt;Tab&lt;/code&gt;.</source>
          <target state="translated">Это приобретает блокировку типа &lt;code&gt;LockKind&lt;/code&gt; для всей таблицы &lt;code&gt;Tab&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f91dd38ac67f0332e475b1b711e06f95a62ba56f" translate="yes" xml:space="preserve">
          <source>This acquires a lock of type &lt;code&gt;LockKind&lt;/code&gt; on the global resource &lt;code&gt;GlobalKey&lt;/code&gt;. The lock is acquired on all active nodes in the &lt;code&gt;Nodes&lt;/code&gt; list.</source>
          <target state="translated">Это получает блокировку типа &lt;code&gt;LockKind&lt;/code&gt; на глобальном ресурсе &lt;code&gt;GlobalKey&lt;/code&gt; . Блокировка устанавливается на все активные узлы в списке &lt;code&gt;Nodes&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c854770bc65f05e5983d655656fa66f6c7914156" translate="yes" xml:space="preserve">
          <source>This action does not set any &lt;code&gt;&lt;a href=&quot;#type-transition_option&quot;&gt; transition_option() &lt;/a&gt;&lt;/code&gt; but instead stores the specified &lt;code&gt;EventType&lt;/code&gt; and &lt;code&gt;EventContent&lt;/code&gt; for insertion after all actions have been executed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52b66d36db3f8d918f682c24c470f8a1a0d1add9" translate="yes" xml:space="preserve">
          <source>This action does not set any &lt;code&gt;&lt;a href=&quot;#type-transition_option&quot;&gt;transition_option()&lt;/a&gt;&lt;/code&gt; but instead stores the specified &lt;code&gt;EventType&lt;/code&gt; and &lt;code&gt;EventContent&lt;/code&gt; for insertion after all actions have been executed.</source>
          <target state="translated">Это действие не устанавливает никакого &lt;code&gt;&lt;a href=&quot;#type-transition_option&quot;&gt;transition_option()&lt;/a&gt;&lt;/code&gt; но вместо этого сохраняет указанные &lt;code&gt;EventType&lt;/code&gt; и &lt;code&gt;EventContent&lt;/code&gt; для вставки после выполнения всех действий.</target>
        </trans-unit>
        <trans-unit id="49d5b8cf3248f457c3e4fd7bf845d80256d7c600" translate="yes" xml:space="preserve">
          <source>This actually is a simulation of the process &lt;code&gt;Events&lt;/code&gt; caused by a &lt;code&gt;Mnesia&lt;/code&gt; transaction that writes a record in a local table:</source>
          <target state="translated">Фактически это имитация процесса &lt;code&gt;Events&lt;/code&gt; , вызванного транзакцией &lt;code&gt;Mnesia&lt;/code&gt; , которая записывает запись в локальную таблицу:</target>
        </trans-unit>
        <trans-unit id="dbd8d5b06b09c15de60879a1a8a9947df8335726" translate="yes" xml:space="preserve">
          <source>This address family only works on Unix-like systems.</source>
          <target state="translated">Это семейство адресов работает только на Unix-подобных системах.</target>
        </trans-unit>
        <trans-unit id="b5576569da19d1b2e935e949277425b3e7400242" translate="yes" xml:space="preserve">
          <source>This address format is for now experimental and for completeness to make all address families have a &lt;code&gt;{Family, Destination}&lt;/code&gt; representation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63d593ef2ab6f3e8b14006b9f741f5c521ea7089" translate="yes" xml:space="preserve">
          <source>This affects the access logs written by &lt;code&gt;mod_log&lt;/code&gt; and &lt;code&gt;mod_disk_log&lt;/code&gt;.</source>
          <target state="translated">Это влияет на журналы доступа, записанные &lt;code&gt;mod_log&lt;/code&gt; и &lt;code&gt;mod_disk_log&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2fd1765db5e4a1421a5a77cd061597e64ef02887" translate="yes" xml:space="preserve">
          <source>This affects the error logs written by &lt;code&gt;mod_log&lt;/code&gt; and &lt;code&gt;mod_disk_log&lt;/code&gt;.</source>
          <target state="translated">Это влияет на журналы ошибок, написанные &lt;code&gt;mod_log&lt;/code&gt; и &lt;code&gt;mod_disk_log&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bbd6bb60897f850ec49a0aac99503d287bd1842d" translate="yes" xml:space="preserve">
          <source>This allows info events to pass through to the default handler, and be printed to the terminal as well. If there are many info events, it can be useful to print these to a file instead.</source>
          <target state="translated">Это позволяет передавать информационные события в обработчик по умолчанию,а также распечатывать их на терминале.Если информационных событий много,может быть полезно распечатать их в файл.</target>
        </trans-unit>
        <trans-unit id="23e19f7d8ad7331e73f9393236fe1782f10bda23" translate="yes" xml:space="preserve">
          <source>This also causes characters between an unescaped # outside a character class and the next newline, inclusive, to be ignored. This is equivalent to Perl's &lt;code&gt;/x&lt;/code&gt; option, and it can be changed within a pattern by a &lt;code&gt;(?x)&lt;/code&gt; option setting.</source>
          <target state="translated">Это также приводит к игнорированию символов между неэкранированным # вне класса символов и следующей новой строкой включительно. Это эквивалентно параметру &lt;code&gt;/x&lt;/code&gt; в Perl , и его можно изменить в шаблоне с помощью параметра &lt;code&gt;(?x)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="58f3cb66f380a5c19ef8ab400cfe6287edaa6dfa" translate="yes" xml:space="preserve">
          <source>This also means that if a user implement their own transport service then it has to maintain its own statistics.</source>
          <target state="translated">Это также означает,что если пользователь реализует свою транспортную службу,то он должен вести свою собственную статистику.</target>
        </trans-unit>
        <trans-unit id="6e14170723475328c130ae9f6473e132cd1b01e7" translate="yes" xml:space="preserve">
          <source>This and also previous implementation do not work well when the table is nearly full. We will both get long search times for free slots, and we will reuse identifiers more frequently since we more frequently wrap during the search. These tables works best when the table is much larger than the amount of simultaneous existing processes. One easy improvement is to always have room for more processes than we allow in the table. This will also be implemented in the next release, but this should probably also be worked more on trying to find an even better solution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7dd22038e1768c05bfb1a8b06817075c1c09560" translate="yes" xml:space="preserve">
          <source>This appendix describes the conversion of SNMPv2 to SNMPv1 error messages. The instrumentation functions should return v2 error messages.</source>
          <target state="translated">Данное приложение описывает преобразование сообщений об ошибках SNMPv2 в SNMPv1.Функции приборов должны возвращать сообщения об ошибках v2.</target>
        </trans-unit>
        <trans-unit id="87860fce150658815e0dd8f84b7b2d2085183f77" translate="yes" xml:space="preserve">
          <source>This application covers all features of ASN.1 up to the 1997 edition of the specification. In the 2002 edition, new features were introduced. The following features of the 2002 edition are fully or partly supported:</source>
          <target state="translated">Это приложение охватывает все особенности ASN.1 вплоть до издания спецификации 1997 года.В издании 2002 года были введены новые функции.Следующие возможности версии 2002 года полностью или частично поддерживаются:</target>
        </trans-unit>
        <trans-unit id="569634e92b8ce1ce008d5489ba01f7e7d69d8d45" translate="yes" xml:space="preserve">
          <source>This application has been deprecated and will be removed in a furture release.</source>
          <target state="translated">Это приложение было устарело и будет удалено при высвобождении шерсти.</target>
        </trans-unit>
        <trans-unit id="dfc6af9c7770c0d0747ed2380e862e5393774125" translate="yes" xml:space="preserve">
          <source>This application provides an Erlang interface to communicate with relational SQL-databases. It is built on top of Microsofts ODBC interface and therefore requires that you have an ODBC driver to the database that you want to connect to.</source>
          <target state="translated">Это приложение предоставляет интерфейс Erlang для связи с реляционными базами данных SQL.Оно построено поверх ODBC-интерфейса Microsofts и поэтому требует наличия ODBC-драйвера к базе данных,к которой вы хотите подключиться.</target>
        </trans-unit>
        <trans-unit id="33c8dd3d5797a890a9a711bb22cf2594354b0bee" translate="yes" xml:space="preserve">
          <source>This approach is always preferred over the other alternatives described below. This both from a performance perspective and a system characteristics perspective.</source>
          <target state="translated">Этот подход всегда является предпочтительным по сравнению с другими альтернативами,описанными ниже.Как с точки зрения производительности,так и с точки зрения характеристик системы.</target>
        </trans-unit>
        <trans-unit id="8068bc8d1c806d61b5dde8f35515f5de0ccd108c" translate="yes" xml:space="preserve">
          <source>This approach is probably easier for an Erlanger but if you need to use real XSLT stylesheets in order to &quot;comply to the standard&quot; there is an adapter available to the Sablotron XSLT package which is written i C++. See also the &lt;code&gt;Tutorial&lt;/code&gt;.</source>
          <target state="translated">Этот подход, вероятно, проще для Erlanger, но если вам нужно использовать настоящие таблицы стилей XSLT, чтобы &amp;laquo;соответствовать стандарту&amp;raquo;, ​​для пакета Sablotron XSLT доступен адаптер, который написан на C ++. См. Также &lt;code&gt;Tutorial&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f62d188dacb48bbbcc2b2321f9f579397d8bbfe1" translate="yes" xml:space="preserve">
          <source>This associates the name &lt;code&gt;a&lt;/code&gt; with the top-level &lt;code&gt;node&lt;/code&gt; entry. For this to work, the configuration file must at least contain:</source>
          <target state="translated">Это связывает имя &lt;code&gt;a&lt;/code&gt; с записью &lt;code&gt;node&lt;/code&gt; верхнего уровня . Чтобы это работало, конфигурационный файл должен как минимум содержать:</target>
        </trans-unit>
        <trans-unit id="3e34095000c0319f418ac3ee68cd3bf8ccd8bc10" translate="yes" xml:space="preserve">
          <source>This assumes that this is the first line of the input text, and that &lt;code&gt;'$end'&lt;/code&gt; is the distinguished &lt;code&gt;end_of_input&lt;/code&gt; symbol.</source>
          <target state="translated">Предполагается, что это первая строка входного текста, а &lt;code&gt;'$end'&lt;/code&gt; - это выделенный символ &lt;code&gt;end_of_input&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="821b03bacc21c4d7e259e58631986fc8983788a2" translate="yes" xml:space="preserve">
          <source>This attribute is to be specified first and is the only mandatory attribute.</source>
          <target state="translated">Данный атрибут должен быть указан первым и является единственным обязательным атрибутом.</target>
        </trans-unit>
        <trans-unit id="d5e89f840b948b0e856ea77d5bc34a2eb62f41fa" translate="yes" xml:space="preserve">
          <source>This attribute is used by tools, such as Yecc, to inform the compiler that the source program is generated by another tool. It also indicates the correspondence of source files to lines of the original user-written file, from which the source program is produced.</source>
          <target state="translated">Данный атрибут используется такими инструментами,как Yecc,чтобы сообщить компилятору,что исходная программа сгенерирована другим инструментом.Он также указывает на соответствие исходных файлов строкам оригинального пользовательского файла,из которого производится исходная программа.</target>
        </trans-unit>
        <trans-unit id="d9c8cd0265b456f941da20d0c6f623c0e29a3c55" translate="yes" xml:space="preserve">
          <source>This attribute names a function that is to be run automatically when a module is loaded. For more information, see &lt;code&gt;&lt;a href=&quot;code_loading#on_load&quot;&gt; Running a Function When a Module is Loaded&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e21a2982771a0d227b0a5afc10f4b081e89b3ac5" translate="yes" xml:space="preserve">
          <source>This attribute names a function that is to be run automatically when a module is loaded. For more information, see &lt;code&gt;&lt;a href=&quot;code_loading#on_load&quot;&gt;Running a Function When a Module is Loaded&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Этот атрибут называет функцию, которая должна запускаться автоматически при загрузке модуля. Для получения дополнительной информации см. &lt;code&gt;&lt;a href=&quot;code_loading#on_load&quot;&gt;Running a Function When a Module is Loaded&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1862f101a5a9233b48a831149fc7167f1c97802b" translate="yes" xml:space="preserve">
          <source>This automatically starts the error logger event manager, and adds &lt;code&gt;error_logger&lt;/code&gt; as a handler to Logger, with the following configuration:</source>
          <target state="translated">Это автоматически запускает диспетчер событий журнала ошибок и добавляет &lt;code&gt;error_logger&lt;/code&gt; в качестве обработчика в Logger со следующей конфигурацией:</target>
        </trans-unit>
        <trans-unit id="ce539a9df53bac997ca6cb301b22b25cdb3ea47c" translate="yes" xml:space="preserve">
          <source>This avoids TCP's TIME_WAIT state, but leaves open the possibility that another &quot;incarnation&quot; of this connection being created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fdb9b714260fc3296ea31ac0070bb8141246799" translate="yes" xml:space="preserve">
          <source>This behavior appeared in Erlang/OTP 19.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6abecdecbe55a6c353c6503f8fff17fe757dd78" translate="yes" xml:space="preserve">
          <source>This behavior appeared in Erlang/OTP 19.0. In OTP 19.1 a backwards incompatible change of the return tuple from &lt;code&gt;&lt;a href=&quot;#Module:init-1&quot;&gt;Module:init/1&lt;/a&gt;&lt;/code&gt; was made and the mandatory callback function &lt;code&gt;&lt;a href=&quot;#Module:callback_mode-0&quot;&gt;Module:callback_mode/0&lt;/a&gt;&lt;/code&gt; was introduced. In OTP 20.0 the &lt;code&gt;&lt;a href=&quot;#type-generic_timeout&quot;&gt;generic timeouts&lt;/a&gt;&lt;/code&gt; were added.</source>
          <target state="translated">Такое поведение появилось в Erlang / OTP 19.0. В OTP 19.1 было внесено обратно несовместимое изменение кортежа, возвращаемого из &lt;code&gt;&lt;a href=&quot;#Module:init-1&quot;&gt;Module:init/1&lt;/a&gt;&lt;/code&gt; , и введена обязательная функция обратного вызова &lt;code&gt;&lt;a href=&quot;#Module:callback_mode-0&quot;&gt;Module:callback_mode/0&lt;/a&gt;&lt;/code&gt; . В OTP 20.0 были добавлены &lt;code&gt;&lt;a href=&quot;#type-generic_timeout&quot;&gt;generic timeouts&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="785543b1d2c442c04e0906335bd46635b1eb96f6" translate="yes" xml:space="preserve">
          <source>This behavior can be controlled through command-line flag &lt;code&gt;-code_path_choice Choice&lt;/code&gt;. If the flag is set to &lt;code&gt;relaxed&lt;/code&gt;, the code server instead chooses a suitable directory depending on the actual file structure. If a regular application &lt;code&gt;ebin&lt;/code&gt; directory exists, it is chosen. Otherwise, the directory &lt;code&gt;ebin&lt;/code&gt; in the archive is chosen if it exists. If neither of them exists, the original directory is chosen.</source>
          <target state="translated">Этим поведением можно управлять с помощью флага командной строки &lt;code&gt;-code_path_choice Choice&lt;/code&gt; . Если для флага установлено &lt;code&gt;relaxed&lt;/code&gt; , сервер кода вместо этого выбирает подходящий каталог в зависимости от фактической файловой структуры. Если существует обычный каталог &lt;code&gt;ebin&lt;/code&gt; приложения , он будет выбран. В противном случае &lt;code&gt;ebin&lt;/code&gt; каталог ebin в архиве, если он существует. Если ни один из них не существует, выбирается исходный каталог.</target>
        </trans-unit>
        <trans-unit id="53636ccb870bbfa8ce6166a610a444015328245d" translate="yes" xml:space="preserve">
          <source>This behavior module implements the back end of the Erlang tracing system. The functions in this module are called whenever a trace probe is triggered. Both the &lt;code&gt;enabled&lt;/code&gt; and &lt;code&gt;trace&lt;/code&gt; functions are called in the context of the entity that triggered the trace probe. This means that the overhead by having the tracing enabled is greatly effected by how much time is spent in these functions. So, do as little work as possible in these functions.</source>
          <target state="translated">Этот модуль поведения реализует внутреннюю часть системы трассировки Erlang. Функции в этом модуле вызываются всякий раз, когда запускается зонд трассировки. И &lt;code&gt;enabled&lt;/code&gt; и функция &lt;code&gt;trace&lt;/code&gt; вызываются в контексте объекта, запустившего зонд трассировки. Это означает, что накладные расходы, связанные с включенной трассировкой, сильно зависят от того, сколько времени тратится на эти функции. Так что старайтесь выполнять эти функции как можно меньше.</target>
        </trans-unit>
        <trans-unit id="23ed37aa93d3cb97e2709aafd5c39ba7bb1b8c68" translate="yes" xml:space="preserve">
          <source>This behavior module provides a supervisor bridge, a process that connects a subsystem not designed according to the OTP design principles to a supervision tree. The supervisor bridge sits between a supervisor and the subsystem. It behaves like a real supervisor to its own supervisor, but has a different interface than a real supervisor to the subsystem. For more information, see &lt;code&gt; Supervisor Behaviour&lt;/code&gt; in OTP Design Principles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70c20f09b1094d916dd54fcb5f009aa1d7c32e52" translate="yes" xml:space="preserve">
          <source>This behavior module provides a supervisor bridge, a process that connects a subsystem not designed according to the OTP design principles to a supervision tree. The supervisor bridge sits between a supervisor and the subsystem. It behaves like a real supervisor to its own supervisor, but has a different interface than a real supervisor to the subsystem. For more information, see &lt;code&gt;Supervisor Behaviour&lt;/code&gt; in OTP Design Principles.</source>
          <target state="translated">Этот модуль поведения обеспечивает мост супервизора - процесс, который соединяет подсистему, не разработанную в соответствии с принципами проектирования одноразовых паролей, к дереву контроля. Мост супервизора находится между супервизором и подсистемой. Он ведет себя как настоящий супервизор по отношению к своему собственному супервизору, но имеет другой интерфейс, чем настоящий супервизор для подсистемы. Для получения дополнительной информации см. &lt;code&gt;Supervisor Behaviour&lt;/code&gt; в Принципах проектирования OTP.</target>
        </trans-unit>
        <trans-unit id="8d78ebb85e52ea715b460d534876e2e64780e260" translate="yes" xml:space="preserve">
          <source>This behavior module provides a supervisor, a process that supervises other processes called child processes. A child process can either be another supervisor or a worker process. Worker processes are normally implemented using one of the &lt;code&gt;&lt;a href=&quot;gen_event&quot;&gt;gen_event&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;gen_server&quot;&gt;gen_server&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;gen_statem&quot;&gt;gen_statem&lt;/a&gt;&lt;/code&gt; behaviors. A supervisor implemented using this module has a standard set of interface functions and include functionality for tracing and error reporting. Supervisors are used to build a hierarchical process structure called a supervision tree, a nice way to structure a fault-tolerant application. For more information, see &lt;code&gt; Supervisor Behaviour&lt;/code&gt; in OTP Design Principles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce3316c8111b9876ff9b5ef8da2949d18e1dd45d" translate="yes" xml:space="preserve">
          <source>This behavior module provides a supervisor, a process that supervises other processes called child processes. A child process can either be another supervisor or a worker process. Worker processes are normally implemented using one of the &lt;code&gt;&lt;a href=&quot;gen_event&quot;&gt;gen_event&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;gen_server&quot;&gt;gen_server&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;gen_statem&quot;&gt;gen_statem&lt;/a&gt;&lt;/code&gt; behaviors. A supervisor implemented using this module has a standard set of interface functions and include functionality for tracing and error reporting. Supervisors are used to build a hierarchical process structure called a supervision tree, a nice way to structure a fault-tolerant application. For more information, see &lt;code&gt;Supervisor Behaviour&lt;/code&gt; in OTP Design Principles.</source>
          <target state="translated">Этот модуль поведения предоставляет супервизор, процесс, который контролирует другие процессы, называемые дочерними процессами. Дочерний процесс может быть другим супервизором или рабочим процессом. Рабочие процессы , как правило , реализуется с помощью одного из &lt;code&gt;&lt;a href=&quot;gen_event&quot;&gt;gen_event&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;gen_server&quot;&gt;gen_server&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;gen_statem&quot;&gt;gen_statem&lt;/a&gt;&lt;/code&gt; поведения. Супервизор, реализованный с помощью этого модуля, имеет стандартный набор функций интерфейса и включает в себя функции отслеживания и сообщения об ошибках. Супервизоры используются для построения иерархической структуры процессов, называемой деревом супервизоров, что является прекрасным способом структурировать отказоустойчивое приложение. Для получения дополнительной информации см. &lt;code&gt;Supervisor Behaviour&lt;/code&gt; в Принципах проектирования OTP.</target>
        </trans-unit>
        <trans-unit id="8d6df5b9b0f7a74dbafdab8bc790e47d7e7f9481" translate="yes" xml:space="preserve">
          <source>This behavior module provides event handling functionality. It consists of a generic event manager process with any number of event handlers that are added and deleted dynamically.</source>
          <target state="translated">Этот поведенческий модуль обеспечивает функциональность обработки событий.Он состоит из общего процесса управления событиями с любым количеством обработчиков событий,которые добавляются и удаляются динамически.</target>
        </trans-unit>
        <trans-unit id="80aef52a4a9d2d5e57ced3f744cf231173e5382d" translate="yes" xml:space="preserve">
          <source>This behavior module provides the server of a client-server relation. A generic server process (&lt;code&gt;gen_server&lt;/code&gt;) implemented using this module has a standard set of interface functions and includes functionality for tracing and error reporting. It also fits into an OTP supervision tree. For more information, see section &lt;code&gt; gen_server Behaviour&lt;/code&gt; in OTP Design Principles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abfb5bf41909c33228afc455141ff017bc6cbde2" translate="yes" xml:space="preserve">
          <source>This behavior module provides the server of a client-server relation. A generic server process (&lt;code&gt;gen_server&lt;/code&gt;) implemented using this module has a standard set of interface functions and includes functionality for tracing and error reporting. It also fits into an OTP supervision tree. For more information, see section &lt;code&gt;gen_server Behaviour&lt;/code&gt; in OTP Design Principles.</source>
          <target state="translated">Этот модуль поведения обеспечивает сервер отношений клиент-сервер. Общий серверный процесс ( &lt;code&gt;gen_server&lt;/code&gt; ), реализованный с помощью этого модуля, имеет стандартный набор интерфейсных функций и включает в себя функции отслеживания и сообщения об ошибках. Он также вписывается в дерево контроля OTP. Для получения дополнительной информации см. Раздел &amp;laquo; &lt;code&gt;gen_server Behaviour&lt;/code&gt; в Принципах проектирования OTP.</target>
        </trans-unit>
        <trans-unit id="73e10e87f957712b985d39a62945e43bbfb9c199" translate="yes" xml:space="preserve">
          <source>This behaviour is different from how it worked prior to Erlang/OTP 19.0. Before 19.0 the literal check was done by checking if the pointer pointed to the young or old heap block. If it did not, then it was considered a literal. This lead to considerable overhead and strange memory usage scenarios, so it was removed in 19.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfe536c202221de15418e3b0398e40a018dac1a4" translate="yes" xml:space="preserve">
          <source>This binds variable &lt;code&gt;B&lt;/code&gt; to integer &lt;code&gt;2&lt;/code&gt;.</source>
          <target state="translated">Это связывает переменную &lt;code&gt;B&lt;/code&gt; с целым числом &lt;code&gt;2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5921d4e93c827b7d95c4a9acb4bbf5b9f3ecb5c5" translate="yes" xml:space="preserve">
          <source>This brand and version may be changed with the option &lt;code&gt;&lt;a href=&quot;ssh#type-id_string_common_option&quot;&gt;id_string&lt;/a&gt;&lt;/code&gt;. We start a daemon with that option:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43864d6a93dcab0bbcc900bd0174b5bbab1fdc75" translate="yes" xml:space="preserve">
          <source>This call is equivalent to &lt;code&gt;public_key:pem_entry_decode(CertEntry1)&lt;/code&gt;:</source>
          <target state="translated">Этот вызов эквивалентен &lt;code&gt;public_key:pem_entry_decode(CertEntry1)&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="5d23eee97c1eb9e0a1493c034b0bfc305e9ddf21" translate="yes" xml:space="preserve">
          <source>This call is used with connection-based socket types (&lt;code&gt;stream&lt;/code&gt; or &lt;code&gt;seqpacket&lt;/code&gt;). It extracs the first pending connection request for the listen socket and returns the (newly) connected socket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cb45c675dbc6c57c7e83453d414ea4d5859f32a" translate="yes" xml:space="preserve">
          <source>This callback format consumes much memory, as the whole response must be generated before it is sent to the user. This callback format is deprecated. For new development, use &lt;code&gt;Module:Function/3&lt;/code&gt;.</source>
          <target state="translated">Этот формат обратного вызова потребляет много памяти, так как весь ответ должен быть сгенерирован, прежде чем он будет отправлен пользователю. Этот формат обратного вызова устарел. Для новой разработки используйте &lt;code&gt;Module:Function/3&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c021922a0bcd25050486be93ca9a01fe228c8b3e" translate="yes" xml:space="preserve">
          <source>This callback function is mandatory.</source>
          <target state="translated">Эта функция обратного вызова обязательна.</target>
        </trans-unit>
        <trans-unit id="19c59aed8326cb258e589ba8cff9c5c632aa9fd0" translate="yes" xml:space="preserve">
          <source>This callback function is optional.</source>
          <target state="translated">Эта функция обратного вызова необязательна.</target>
        </trans-unit>
        <trans-unit id="f25d747572c59dd9f293a1f0fcfc6c190d3c0ac9" translate="yes" xml:space="preserve">
          <source>This callback is called when a tracepoint is triggered and the &lt;code&gt;&lt;a href=&quot;#Module:enabled-3&quot;&gt;Module:enabled/3&lt;/a&gt;&lt;/code&gt; callback returned &lt;code&gt;trace&lt;/code&gt;. In it any side effects needed by the tracer are to be done. The tracepoint payload is located in the &lt;code&gt;TraceTerm&lt;/code&gt;. The content of the &lt;code&gt;TraceTerm&lt;/code&gt; depends on which &lt;code&gt;TraceTag&lt;/code&gt; is triggered. &lt;code&gt;TraceTerm&lt;/code&gt; corresponds to the fourth element in the trace tuples described in &lt;code&gt;&lt;a href=&quot;erlang#trace_3_trace_messages&quot;&gt; erlang:trace/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38e550ff4f657cf80a8775b069566d9feb16c83b" translate="yes" xml:space="preserve">
          <source>This callback is called when a tracepoint is triggered and the &lt;code&gt;&lt;a href=&quot;#Module:enabled-3&quot;&gt;Module:enabled/3&lt;/a&gt;&lt;/code&gt; callback returned &lt;code&gt;trace&lt;/code&gt;. In it any side effects needed by the tracer are to be done. The tracepoint payload is located in the &lt;code&gt;TraceTerm&lt;/code&gt;. The content of the &lt;code&gt;TraceTerm&lt;/code&gt; depends on which &lt;code&gt;TraceTag&lt;/code&gt; is triggered. &lt;code&gt;TraceTerm&lt;/code&gt; corresponds to the fourth element in the trace tuples described in &lt;code&gt;&lt;a href=&quot;erlang#trace_3_trace_messages&quot;&gt;erlang:trace/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Этот обратный вызов вызывается, когда срабатывает точка трассировки и обратный вызов &lt;code&gt;&lt;a href=&quot;#Module:enabled-3&quot;&gt;Module:enabled/3&lt;/a&gt;&lt;/code&gt; возвращает &lt;code&gt;trace&lt;/code&gt; . В нем должны быть устранены любые побочные эффекты, необходимые для трассера. Полезные данные точки трассировки находятся в &lt;code&gt;TraceTerm&lt;/code&gt; . Содержимое &lt;code&gt;TraceTerm&lt;/code&gt; зависит от того, какой &lt;code&gt;TraceTag&lt;/code&gt; запускается. &lt;code&gt;TraceTerm&lt;/code&gt; соответствует четвертому элементу в кортежах трассировки, описанных в &lt;code&gt;&lt;a href=&quot;erlang#trace_3_trace_messages&quot;&gt;erlang:trace/3&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b5b2df4ee795088b10e9a8743810a608e160f791" translate="yes" xml:space="preserve">
          <source>This callback is called when a tracepoint is triggered and the &lt;code&gt;&lt;a href=&quot;#Module:enabled_call-3&quot;&gt; Module:enabled_call/3&lt;/a&gt;&lt;/code&gt; callback returned &lt;code&gt;trace&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d37d000bba6ae99564128c8b7446cc5273b6a04e" translate="yes" xml:space="preserve">
          <source>This callback is called when a tracepoint is triggered and the &lt;code&gt;&lt;a href=&quot;#Module:enabled_call-3&quot;&gt;Module:enabled_call/3&lt;/a&gt;&lt;/code&gt; callback returned &lt;code&gt;trace&lt;/code&gt;.</source>
          <target state="translated">Этот обратный вызов вызывается, когда срабатывает &lt;code&gt;&lt;a href=&quot;#Module:enabled_call-3&quot;&gt;Module:enabled_call/3&lt;/a&gt;&lt;/code&gt; обратный вызов Module: enabled_call / 3 возвращает &lt;code&gt;trace&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="09e7a6fd7ae94a8b204e4555cbdb97edc835e6f0" translate="yes" xml:space="preserve">
          <source>This callback is called when a tracepoint is triggered and the &lt;code&gt;&lt;a href=&quot;#Module:enabled_garbage_collection-3&quot;&gt; Module:enabled_garbage_collection/3&lt;/a&gt;&lt;/code&gt; callback returned &lt;code&gt;trace&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15198a7c2fc8240482ba94b944bdfc0b14e586ba" translate="yes" xml:space="preserve">
          <source>This callback is called when a tracepoint is triggered and the &lt;code&gt;&lt;a href=&quot;#Module:enabled_garbage_collection-3&quot;&gt;Module:enabled_garbage_collection/3&lt;/a&gt;&lt;/code&gt; callback returned &lt;code&gt;trace&lt;/code&gt;.</source>
          <target state="translated">Этот обратный вызов вызывается, когда запускается &lt;code&gt;&lt;a href=&quot;#Module:enabled_garbage_collection-3&quot;&gt;Module:enabled_garbage_collection/3&lt;/a&gt;&lt;/code&gt; обратный вызов Module: enabled_garbage_collection / 3 возвращает &lt;code&gt;trace&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7b7f965ceb723c3e428aae9e712be01c5751a24c" translate="yes" xml:space="preserve">
          <source>This callback is called when a tracepoint is triggered and the &lt;code&gt;&lt;a href=&quot;#Module:enabled_ports-3&quot;&gt; Module:enabled_ports/3&lt;/a&gt;&lt;/code&gt; callback returned &lt;code&gt;trace&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2aa5dde256677cc6703eaf4ec5d19bc2b8283932" translate="yes" xml:space="preserve">
          <source>This callback is called when a tracepoint is triggered and the &lt;code&gt;&lt;a href=&quot;#Module:enabled_ports-3&quot;&gt;Module:enabled_ports/3&lt;/a&gt;&lt;/code&gt; callback returned &lt;code&gt;trace&lt;/code&gt;.</source>
          <target state="translated">Этот обратный вызов вызывается, когда запускается &lt;code&gt;&lt;a href=&quot;#Module:enabled_ports-3&quot;&gt;Module:enabled_ports/3&lt;/a&gt;&lt;/code&gt; обратный вызов Module: enabled_ports / 3 возвращает &lt;code&gt;trace&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="de8b6dabb1b9aedf64269ee027289b838928ff19" translate="yes" xml:space="preserve">
          <source>This callback is called when a tracepoint is triggered and the &lt;code&gt;&lt;a href=&quot;#Module:enabled_procs-3&quot;&gt; Module:enabled_procs/3&lt;/a&gt;&lt;/code&gt; callback returned &lt;code&gt;trace&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dcc032a652781d3a4cff57f32134bdf4ec6b88d" translate="yes" xml:space="preserve">
          <source>This callback is called when a tracepoint is triggered and the &lt;code&gt;&lt;a href=&quot;#Module:enabled_procs-3&quot;&gt;Module:enabled_procs/3&lt;/a&gt;&lt;/code&gt; callback returned &lt;code&gt;trace&lt;/code&gt;.</source>
          <target state="translated">Этот обратный вызов вызывается, когда срабатывает &lt;code&gt;&lt;a href=&quot;#Module:enabled_procs-3&quot;&gt;Module:enabled_procs/3&lt;/a&gt;&lt;/code&gt; обратный вызов Module: enabled_procs / 3 возвращает &lt;code&gt;trace&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3c07c7052c71939e18500a6ffce1aa3ea1692a61" translate="yes" xml:space="preserve">
          <source>This callback is called when a tracepoint is triggered and the &lt;code&gt;&lt;a href=&quot;#Module:enabled_receive-3&quot;&gt; Module:enabled_receive/3&lt;/a&gt;&lt;/code&gt; callback returned &lt;code&gt;trace&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfff3392a7d289ca0c61ca7155845689c03dcb44" translate="yes" xml:space="preserve">
          <source>This callback is called when a tracepoint is triggered and the &lt;code&gt;&lt;a href=&quot;#Module:enabled_receive-3&quot;&gt;Module:enabled_receive/3&lt;/a&gt;&lt;/code&gt; callback returned &lt;code&gt;trace&lt;/code&gt;.</source>
          <target state="translated">Этот обратный вызов вызывается, когда срабатывает &lt;code&gt;&lt;a href=&quot;#Module:enabled_receive-3&quot;&gt;Module:enabled_receive/3&lt;/a&gt;&lt;/code&gt; обратный вызов Module: enabled_receive / 3 возвращает &lt;code&gt;trace&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="389d25478a53bcbad4b00f57b0c975a597be05f0" translate="yes" xml:space="preserve">
          <source>This callback is called when a tracepoint is triggered and the &lt;code&gt;&lt;a href=&quot;#Module:enabled_running_ports-3&quot;&gt; Module:enabled_running_ports/3&lt;/a&gt;&lt;/code&gt; callback returned &lt;code&gt;trace&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c24bf92b0df20158eb77c36643c943e9fdb3807a" translate="yes" xml:space="preserve">
          <source>This callback is called when a tracepoint is triggered and the &lt;code&gt;&lt;a href=&quot;#Module:enabled_running_ports-3&quot;&gt;Module:enabled_running_ports/3&lt;/a&gt;&lt;/code&gt; callback returned &lt;code&gt;trace&lt;/code&gt;.</source>
          <target state="translated">Этот обратный вызов вызывается, когда запускается &lt;code&gt;&lt;a href=&quot;#Module:enabled_running_ports-3&quot;&gt;Module:enabled_running_ports/3&lt;/a&gt;&lt;/code&gt; обратный вызов Module: enabled_running_ports / 3 возвращает &lt;code&gt;trace&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eedf109955855e438df9878211bbefe0268cab51" translate="yes" xml:space="preserve">
          <source>This callback is called when a tracepoint is triggered and the &lt;code&gt;&lt;a href=&quot;#Module:enabled_running_procs-3&quot;&gt; Module:enabled_running_procs/3&lt;/a&gt;&lt;/code&gt; callback returned &lt;code&gt;trace&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6742c8972ca63b4eed6ff400182d4ad91035680" translate="yes" xml:space="preserve">
          <source>This callback is called when a tracepoint is triggered and the &lt;code&gt;&lt;a href=&quot;#Module:enabled_running_procs-3&quot;&gt;Module:enabled_running_procs/3&lt;/a&gt;&lt;/code&gt; callback returned &lt;code&gt;trace&lt;/code&gt;.</source>
          <target state="translated">Этот обратный вызов вызывается, когда запускается &lt;code&gt;&lt;a href=&quot;#Module:enabled_running_procs-3&quot;&gt;Module:enabled_running_procs/3&lt;/a&gt;&lt;/code&gt; обратный вызов Module: enabled_running_procs / 3 возвращает &lt;code&gt;trace&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9102deaae3699fe52f8c3288eb5f0454907ef640" translate="yes" xml:space="preserve">
          <source>This callback is called when a tracepoint is triggered and the &lt;code&gt;&lt;a href=&quot;#Module:enabled_send-3&quot;&gt; Module:enabled_send/3&lt;/a&gt;&lt;/code&gt; callback returned &lt;code&gt;trace&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f48d6f8f965dcfd900008bb64742372d353ae2d" translate="yes" xml:space="preserve">
          <source>This callback is called when a tracepoint is triggered and the &lt;code&gt;&lt;a href=&quot;#Module:enabled_send-3&quot;&gt;Module:enabled_send/3&lt;/a&gt;&lt;/code&gt; callback returned &lt;code&gt;trace&lt;/code&gt;.</source>
          <target state="translated">Этот обратный вызов вызывается, когда срабатывает &lt;code&gt;&lt;a href=&quot;#Module:enabled_send-3&quot;&gt;Module:enabled_send/3&lt;/a&gt;&lt;/code&gt; обратный вызов Module: enabled_send / 3 возвращает &lt;code&gt;trace&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7d06f96f4aade9b952b7ce9c8005f3b70b23dcd8" translate="yes" xml:space="preserve">
          <source>This callback is called whenever a tracepoint is triggered. It allows the tracer to decide whether a trace is to be generated or not. This check is made as early as possible to limit the amount of overhead associated with tracing. If &lt;code&gt;trace&lt;/code&gt; is returned, the necessary trace data is created and the trace callback of the tracer is called. If &lt;code&gt;discard&lt;/code&gt; is returned, this trace call is discarded and no call to trace is done.</source>
          <target state="translated">Этот обратный вызов вызывается всякий раз, когда запускается точка трассировки. Это позволяет трассировщику решать, нужно ли создавать трассу. Эта проверка выполняется как можно раньше, чтобы ограничить объем накладных расходов, связанных с трассировкой. Если &lt;code&gt;trace&lt;/code&gt; возвращается, создаются необходимые данные трассировки и вызывается обратный вызов трассировки трассировщика. Если возвращается &lt;code&gt;discard&lt;/code&gt; , этот вызов трассировки сбрасывается и вызов трассировки не выполняется.</target>
        </trans-unit>
        <trans-unit id="d90dbf0e78bbedf9e4bcbc34379a7cf3dd298fa5" translate="yes" xml:space="preserve">
          <source>This callback is called whenever a tracepoint with trace flag &lt;code&gt;&lt;a href=&quot;erlang#trace-3&quot;&gt; running_procs | running&lt;/a&gt;&lt;/code&gt; is triggered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94e6048cf0014e861feb66ee170c873413ff3161" translate="yes" xml:space="preserve">
          <source>This callback is called whenever a tracepoint with trace flag &lt;code&gt;&lt;a href=&quot;erlang#trace-3&quot;&gt;'receive'&lt;/a&gt;&lt;/code&gt; is triggered.</source>
          <target state="translated">Этот обратный вызов вызывается всякий раз, когда запускается точка трассировки с флагом трассировки &lt;code&gt;&lt;a href=&quot;erlang#trace-3&quot;&gt;'receive'&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6fa7e2961f153a4436cefe4499cc280336994838" translate="yes" xml:space="preserve">
          <source>This callback is called whenever a tracepoint with trace flag &lt;code&gt;&lt;a href=&quot;erlang#trace-3&quot;&gt;call | return_to&lt;/a&gt;&lt;/code&gt; is triggered.</source>
          <target state="translated">Этот обратный вызов вызывается всякий раз, когда точка трассировки с &lt;code&gt;&lt;a href=&quot;erlang#trace-3&quot;&gt;call | return_to&lt;/a&gt;&lt;/code&gt; флага трассировки | return_to запускается.</target>
        </trans-unit>
        <trans-unit id="69b3512c1f3ede51a7ecf30950dad7b0634b3377" translate="yes" xml:space="preserve">
          <source>This callback is called whenever a tracepoint with trace flag &lt;code&gt;&lt;a href=&quot;erlang#trace-3&quot;&gt;garbage_collection&lt;/a&gt;&lt;/code&gt; is triggered.</source>
          <target state="translated">Этот обратный вызов вызывается всякий раз, когда запускается точка трассировки с флагом трассировки &lt;code&gt;&lt;a href=&quot;erlang#trace-3&quot;&gt;garbage_collection&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="04e6a249465c46d45e283c5f1f0285668b198409" translate="yes" xml:space="preserve">
          <source>This callback is called whenever a tracepoint with trace flag &lt;code&gt;&lt;a href=&quot;erlang#trace-3&quot;&gt;ports&lt;/a&gt;&lt;/code&gt; is triggered.</source>
          <target state="translated">Этот обратный вызов вызывается всякий раз, когда запускается точка трассировки с &lt;code&gt;&lt;a href=&quot;erlang#trace-3&quot;&gt;ports&lt;/a&gt;&lt;/code&gt; флага трассировки .</target>
        </trans-unit>
        <trans-unit id="af6001baab0a6ade22947ab13bfa31245cf0abe6" translate="yes" xml:space="preserve">
          <source>This callback is called whenever a tracepoint with trace flag &lt;code&gt;&lt;a href=&quot;erlang#trace-3&quot;&gt;procs&lt;/a&gt;&lt;/code&gt; is triggered.</source>
          <target state="translated">Эта функция вызывается всякий раз , когда с флагом Точка трассировки след &lt;code&gt;&lt;a href=&quot;erlang#trace-3&quot;&gt;procs&lt;/a&gt;&lt;/code&gt; срабатывает.</target>
        </trans-unit>
        <trans-unit id="0be59b7c2110146187e5c0eeaf4bc0878afe0cb6" translate="yes" xml:space="preserve">
          <source>This callback is called whenever a tracepoint with trace flag &lt;code&gt;&lt;a href=&quot;erlang#trace-3&quot;&gt;running_ports&lt;/a&gt;&lt;/code&gt; is triggered.</source>
          <target state="translated">Этот обратный вызов вызывается всякий раз, когда запускается точка трассировки с флагом трассировки &lt;code&gt;&lt;a href=&quot;erlang#trace-3&quot;&gt;running_ports&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="334c413e0dbeba2235f5db1ca4ea0969695570e1" translate="yes" xml:space="preserve">
          <source>This callback is called whenever a tracepoint with trace flag &lt;code&gt;&lt;a href=&quot;erlang#trace-3&quot;&gt;running_procs | running&lt;/a&gt;&lt;/code&gt; is triggered.</source>
          <target state="translated">Этот обратный вызов вызывается всякий раз, когда точка трассировки с флагом трассировки &lt;code&gt;&lt;a href=&quot;erlang#trace-3&quot;&gt;running_procs | running&lt;/a&gt;&lt;/code&gt; срабатывает.</target>
        </trans-unit>
        <trans-unit id="7c04ab99901eac2f63941068c90d7843bba53367" translate="yes" xml:space="preserve">
          <source>This callback is called whenever a tracepoint with trace flag &lt;code&gt;&lt;a href=&quot;erlang#trace-3&quot;&gt;send&lt;/a&gt;&lt;/code&gt; is triggered.</source>
          <target state="translated">Эта функция вызывается всякий раз , когда с флагом Точка трассировки след &lt;code&gt;&lt;a href=&quot;erlang#trace-3&quot;&gt;send&lt;/a&gt;&lt;/code&gt; срабатывает.</target>
        </trans-unit>
        <trans-unit id="69eb6ef56ec8902494bd21822d312f399e05340c" translate="yes" xml:space="preserve">
          <source>This callback is delegated to the &lt;code&gt;ssh_file&lt;/code&gt; module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0eb3991244f8edb7b0e0b02b52e72b978996b94e" translate="yes" xml:space="preserve">
          <source>This callback is mandatory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="945a522c510e59f03864e9eeb3d8a618307d8e56" translate="yes" xml:space="preserve">
          <source>This callback is optional, so a callback module does not need to export it. The &lt;code&gt;gen_statem&lt;/code&gt; module provides a default implementation of this function that returns &lt;code&gt;{State,Data}&lt;/code&gt;.</source>
          <target state="translated">Этот обратный вызов не является обязательным, поэтому модулю обратного вызова не нужно его экспортировать. Модуль &lt;code&gt;gen_statem&lt;/code&gt; предоставляет реализацию по умолчанию для этой функции, которая возвращает &lt;code&gt;{State,Data}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="53a31bbe3f39f2d360082e09b97e8bd9a8a3c01e" translate="yes" xml:space="preserve">
          <source>This callback is optional, so callback modules need not export it. If a release upgrade/downgrade with &lt;code&gt;Change = {advanced,Extra}&lt;/code&gt; specified in the &lt;code&gt;.appup&lt;/code&gt; file is made when &lt;code&gt;code_change/4&lt;/code&gt; is not implemented the process will crash with exit reason &lt;code&gt;undef&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adab3ff296df418bda26c9ab38b8afebec6b2122" translate="yes" xml:space="preserve">
          <source>This callback is optional, so callback modules need not export it. If a release upgrade/downgrade with &lt;code&gt;Change={advanced,Extra}&lt;/code&gt; specified in the &lt;code&gt;.appup&lt;/code&gt; file is made when &lt;code&gt;code_change/3&lt;/code&gt; isn't implemented the event handler will crash with an &lt;code&gt;undef&lt;/code&gt; error reason.</source>
          <target state="translated">Этот обратный вызов не является обязательным, поэтому модули обратного вызова не должны его экспортировать. Если обновление / понижение версии с параметром &lt;code&gt;Change={advanced,Extra}&lt;/code&gt; , указанным в файле &lt;code&gt;.appup&lt;/code&gt; , выполняется, когда &lt;code&gt;code_change/3&lt;/code&gt; не реализован, обработчик событий завершится с ошибкой с ошибкой &lt;code&gt;undef&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="02bb4941fa7a9741c99ed42c9b52e91f322657b1" translate="yes" xml:space="preserve">
          <source>This callback is optional, so callback modules need not export it. If a release upgrade/downgrade with &lt;code&gt;Change={advanced,Extra}&lt;/code&gt; specified in the &lt;code&gt;.appup&lt;/code&gt; file is made when &lt;code&gt;code_change/4&lt;/code&gt; is not implemented the process will crash with exit reason &lt;code&gt;undef&lt;/code&gt;.</source>
          <target state="translated">Этот обратный вызов не является обязательным, поэтому модули обратного вызова не должны его экспортировать. Если обновление / понижение версии с параметром &lt;code&gt;Change={advanced,Extra}&lt;/code&gt; , указанным в файле &lt;code&gt;.appup&lt;/code&gt; , выполняется, когда &lt;code&gt;code_change/4&lt;/code&gt; не реализован, процесс завершится с ошибкой с причиной выхода &lt;code&gt;undef&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="09246fb26a04b28ca2f447f072f0daaf17b1ea05" translate="yes" xml:space="preserve">
          <source>This callback is optional, so callback modules need not export it. If a release upgrade/downgrade with &lt;code&gt;Change={advanced,Extra}&lt;/code&gt; specified in the &lt;code&gt;appup&lt;/code&gt; file is made when &lt;code&gt;code_change/3&lt;/code&gt; isn't implemented the process will crash with an &lt;code&gt;undef&lt;/code&gt; exit reason.</source>
          <target state="translated">Этот обратный вызов не является обязательным, поэтому модули обратного вызова не должны его экспортировать. Если выпуск обновления / понижение с &lt;code&gt;Change={advanced,Extra}&lt;/code&gt; , указанная в &lt;code&gt;appup&lt;/code&gt; файл производится при &lt;code&gt;code_change/3&lt;/code&gt; не реализована процесс будет врезаться с &lt;code&gt;undef&lt;/code&gt; выхода причиной.</target>
        </trans-unit>
        <trans-unit id="449de06640c440754deb50b818d7f03da9dfc15a" translate="yes" xml:space="preserve">
          <source>This callback is optional, so callback modules need not export it. The &lt;code&gt;gen_event&lt;/code&gt; module provides a default implementation of this function that logs about the unexpected &lt;code&gt;Info&lt;/code&gt; message, drops it and returns &lt;code&gt;{noreply, State}&lt;/code&gt;.</source>
          <target state="translated">Этот обратный вызов не является обязательным, поэтому модули обратного вызова не должны его экспортировать. Модуль &lt;code&gt;gen_event&lt;/code&gt; предоставляет реализацию по умолчанию этой функции, которая регистрирует неожиданное &lt;code&gt;Info&lt;/code&gt; сообщение, отбрасывает его и возвращает &lt;code&gt;{noreply, State}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8cfc4d1b1611e681e7a69a610747f2faafb9e670" translate="yes" xml:space="preserve">
          <source>This callback is optional, so callback modules need not export it. The &lt;code&gt;gen_event&lt;/code&gt; module provides a default implementation of this function that logs about the unexpected &lt;code&gt;Info&lt;/code&gt; message, drops it and returns &lt;code&gt;{ok, State}&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="642a938f2c13878b19e630eed4ff743e43a98666" translate="yes" xml:space="preserve">
          <source>This callback is optional, so callback modules need not export it. The &lt;code&gt;gen_event&lt;/code&gt; module provides a default implementation without cleanup.</source>
          <target state="translated">Этот обратный вызов не является обязательным, поэтому модули обратного вызова не должны его экспортировать. Модуль &lt;code&gt;gen_event&lt;/code&gt; предоставляет реализацию по умолчанию без очистки.</target>
        </trans-unit>
        <trans-unit id="33b5eb4eda106379d214a532dea20df13c6ee4a7" translate="yes" xml:space="preserve">
          <source>This callback is optional, so callback modules need not export it. The &lt;code&gt;gen_server&lt;/code&gt; module provides a default implementation of this function that logs about the unexpected &lt;code&gt;Info&lt;/code&gt; message, drops it and returns &lt;code&gt;{noreply, State}&lt;/code&gt;.</source>
          <target state="translated">Этот обратный вызов не является обязательным, поэтому модули обратного вызова не должны его экспортировать. Модуль &lt;code&gt;gen_server&lt;/code&gt; предоставляет реализацию этой функции по умолчанию, которая регистрирует неожиданное &lt;code&gt;Info&lt;/code&gt; сообщение, отбрасывает его и возвращает &lt;code&gt;{noreply, State}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a0950a9f920ccec0ce58fea7dd4cc52647d84000" translate="yes" xml:space="preserve">
          <source>This callback is optional, so callback modules need not export it. The &lt;code&gt;gen_server&lt;/code&gt; module provides a default implementation of this function that returns the callback module state.</source>
          <target state="translated">Этот обратный вызов не является обязательным, поэтому модули обратного вызова не должны его экспортировать. Модуль &lt;code&gt;gen_server&lt;/code&gt; предоставляет реализацию по умолчанию для этой функции, которая возвращает состояние модуля обратного вызова.</target>
        </trans-unit>
        <trans-unit id="d3374de84ad48d0fa717caa3233068cba7f0a810" translate="yes" xml:space="preserve">
          <source>This callback is optional, so callback modules need not export it. The &lt;code&gt;gen_server&lt;/code&gt; module provides a default implementation without cleanup.</source>
          <target state="translated">Этот обратный вызов не является обязательным, поэтому модули обратного вызова не должны его экспортировать. Модуль &lt;code&gt;gen_server&lt;/code&gt; предоставляет реализацию по умолчанию без очистки.</target>
        </trans-unit>
        <trans-unit id="ed16700adf3de2342c41a38a47218a24b4797c88" translate="yes" xml:space="preserve">
          <source>This callback is optional, so callback modules need not export it. The &lt;code&gt;gen_statem&lt;/code&gt; module provides a default implementation without cleanup.</source>
          <target state="translated">Этот обратный вызов не является обязательным, поэтому модули обратного вызова не должны его экспортировать. Модуль &lt;code&gt;gen_statem&lt;/code&gt; предоставляет реализацию по умолчанию без очистки.</target>
        </trans-unit>
        <trans-unit id="b14aaa8a71c534451d8b2fa83d586d1d7132b252" translate="yes" xml:space="preserve">
          <source>This callback is optional, so callback modules need to export it only if they return &lt;code&gt;{continue,Continue}&lt;/code&gt; from another callback. If continue is used and the callback is not implemented, the process will exit with &lt;code&gt;undef&lt;/code&gt; error.</source>
          <target state="translated">Этот обратный вызов является необязательным, поэтому модули обратного вызова должны экспортировать его, только если они возвращают &lt;code&gt;{continue,Continue}&lt;/code&gt; из другого обратного вызова. Если используется continue, а обратный вызов не реализован, процесс завершится с ошибкой &lt;code&gt;undef&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d62e7ff4624439456f6274f30841bc2cd438369b" translate="yes" xml:space="preserve">
          <source>This callback is optional, so event handler modules need not export it. If a handler does not export this function, the &lt;code&gt;gen_event&lt;/code&gt; module uses the handler state directly for the purposes described below.</source>
          <target state="translated">Этот обратный вызов не является обязательным, поэтому модули обработчика событий не должны его экспортировать. Если обработчик не экспортирует эту функцию, модуль &lt;code&gt;gen_event&lt;/code&gt; использует состояние обработчика напрямую для целей, описанных ниже.</target>
        </trans-unit>
        <trans-unit id="a8935ee23c0cb706a83f87286f51dc3308c662e0" translate="yes" xml:space="preserve">
          <source>This callback is optional. Set the &lt;code&gt;accept_handshake_complete&lt;/code&gt; field in the &lt;code&gt;ei_socket_callbacks&lt;/code&gt; structure to &lt;code&gt;NULL&lt;/code&gt; if not implemented.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c513a3136958e118a1ed88eed71f06f5a1ba1689" translate="yes" xml:space="preserve">
          <source>This callback is optional. Set the &lt;code&gt;connect_handshake_complete&lt;/code&gt; field in the &lt;code&gt;ei_socket_callbacks&lt;/code&gt; structure to &lt;code&gt;NULL&lt;/code&gt; if not implemented.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0e38e8024185274ef8f80ab9c3c0eabdc425b5d" translate="yes" xml:space="preserve">
          <source>This callback is optional. Set the &lt;code&gt;writev&lt;/code&gt; field in the the &lt;code&gt;ei_socket_callbacks&lt;/code&gt; structure to &lt;code&gt;NULL&lt;/code&gt; if not implemented.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e665adac2e338eb903db4caf99617c276a94da3" translate="yes" xml:space="preserve">
          <source>This callback may also return the port of the given node. In that case &lt;code&gt;port_please/3&lt;/code&gt; may be omitted.</source>
          <target state="translated">Этот обратный вызов также может возвращать порт данного узла. В этом случае можно не указывать &lt;code&gt;port_please/3&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="220a2abc00984810bc967fbaf4c4a46c06726d6c" translate="yes" xml:space="preserve">
          <source>This can also be achieved in a more customized way by using parameter &lt;code&gt;export&lt;/code&gt; in the cover specification and analysing the result off line. However, the cross cover mechanism is a built-in solution that also provides logging.</source>
          <target state="translated">Этого также можно добиться более индивидуально, используя &lt;code&gt;export&lt;/code&gt; параметров в спецификации обложки и анализируя результат в автономном режиме. Однако механизм поперечной крышки - это встроенное решение, которое также обеспечивает ведение журнала.</target>
        </trans-unit>
        <trans-unit id="d55911e226611b9c595d6a76da5448bc48c50a57" translate="yes" xml:space="preserve">
          <source>This can be defined as follows, but is faster:</source>
          <target state="translated">Это можно определить следующим образом,но это быстрее:</target>
        </trans-unit>
        <trans-unit id="051b7b690babeaa0408d0d0c0e8d2f3f38cca0df" translate="yes" xml:space="preserve">
          <source>This can be done, for example, by focusing on one state at the time and for every state ensure that all events are handled. Alternatively, you can focus on one event at the time and ensure that it is handled in every state. You can also use a mix of these strategies.</source>
          <target state="translated">Это можно сделать,например,сосредоточившись на одном состоянии за раз,и для каждого состояния обеспечить обработку всех событий.Кроме того,вы можете сфокусироваться на одном событии за раз и убедиться,что оно обработано в каждом состоянии.Вы также можете использовать сочетание этих стратегий.</target>
        </trans-unit>
        <trans-unit id="d4598fb964d80c17b9042cf3810c56c1f2f70ecf" translate="yes" xml:space="preserve">
          <source>This can be the name of a binary log, a list of such logs, or the name of a directory containing one or more binary logs.</source>
          <target state="translated">Это может быть имя двоичного журнала,список таких журналов или имя каталога,содержащего один или несколько двоичных журналов.</target>
        </trans-unit>
        <trans-unit id="0d49d5ccf3611383b79c9580f8c0026d786e3ee8" translate="yes" xml:space="preserve">
          <source>This can be used for various purposes, for example, writing a term to a file in an efficient way, or sending an Erlang term to some type of communications channel not supported by distributed Erlang.</source>
          <target state="translated">Это может быть использовано для различных целей,например,для эффективной записи термина в файл или отправки термина Erlang на некоторый канал связи,не поддерживаемый распределенным Erlang.</target>
        </trans-unit>
        <trans-unit id="a87fd0d612d477544f48342a46839027b50293f1" translate="yes" xml:space="preserve">
          <source>This can be used to detect problems with NIFs or drivers that take too long to execute. 1 ms is considered a good maximum time for a driver callback or a NIF. However, a time-sharing system is usually to consider everything &amp;lt; 100 ms as &quot;possible&quot; and fairly &quot;normal&quot;. However, longer schedule times can indicate swapping or a misbehaving NIF/driver. Misbehaving NIFs and drivers can cause bad resource utilization and bad overall system performance.</source>
          <target state="translated">Это можно использовать для обнаружения проблем с NIF или драйверами, выполнение которых занимает слишком много времени. 1 мс считается хорошим максимальным временем для обратного вызова драйвера или NIF. Однако система с разделением времени обычно рассматривает все &amp;lt;100 мс как &amp;laquo;возможное&amp;raquo; и довольно &amp;laquo;нормальное&amp;raquo;. Однако более длительное расписание может указывать на замену или неправильную работу NIF / драйвера. Неправильное поведение NIF и драйверов может привести к плохому использованию ресурсов и снижению общей производительности системы.</target>
        </trans-unit>
        <trans-unit id="7c309ba8d110cc132caf3f434048be18fd8c888d" translate="yes" xml:space="preserve">
          <source>This can be useful to know, even if &lt;code&gt;systools&lt;/code&gt; is not used, since Erlang/OTP is packaged according to the OTP principles and thus comes with a specific directory structure. The code server (see the &lt;code&gt;code(3)&lt;/code&gt; manual page in Kernel) automatically uses code from the directory with the highest version number, if more than one version of an application is present.</source>
          <target state="translated">Это может быть полезно знать, даже если &lt;code&gt;systools&lt;/code&gt; не используются, поскольку Erlang / OTP упакован в соответствии с принципами OTP и, следовательно, имеет определенную структуру каталогов. Сервер кода (см. Страницу руководства &lt;code&gt;code(3)&lt;/code&gt; в ядре) автоматически использует код из каталога с наивысшим номером версии, если присутствует более одной версии приложения.</target>
        </trans-unit>
        <trans-unit id="c0a78708d83a11d18d7b6fde7a226d981a5c9a17" translate="yes" xml:space="preserve">
          <source>This can be useful when you want to hold arbitrary terms: skip them and copy the binary term data to some buffer.</source>
          <target state="translated">Это может быть полезно,когда вы хотите удержать произвольные термины:пропустите их и скопируйте данные двоичного термина в какой-нибудь буфер.</target>
        </trans-unit>
        <trans-unit id="9dccf3f6d2f60b79a3b5bd80d61cef8142d3c9f1" translate="yes" xml:space="preserve">
          <source>This can occur even if a &lt;code&gt;reload&lt;/code&gt; option is specified, if &lt;code&gt;DriverOptionList&lt;/code&gt; differs from the current.</source>
          <target state="translated">Это может произойти, даже если указан параметр &lt;code&gt;reload&lt;/code&gt; , если &lt;code&gt;DriverOptionList&lt;/code&gt; отличается от текущего.</target>
        </trans-unit>
        <trans-unit id="e696f35629ec0f432c29538e2e6c58a6cd4c896e" translate="yes" xml:space="preserve">
          <source>This can override the configuration parameters &lt;code&gt;nameserver&lt;/code&gt; and &lt;code&gt;search&lt;/code&gt; depending on the contents of the specified file. They can also change any time in the future reflecting the file contents.</source>
          <target state="translated">Это может переопределить параметры конфигурации &lt;code&gt;nameserver&lt;/code&gt; и &lt;code&gt;search&lt;/code&gt; зависимости от содержимого указанного файла. Они также могут измениться в любой момент в будущем, отражая содержимое файла.</target>
        </trans-unit>
        <trans-unit id="8dec9a62f192435d695441ed01fd661a8d8c315a" translate="yes" xml:space="preserve">
          <source>This causes &lt;code&gt;epmd&lt;/code&gt; to close the connection from the far end. Notice that if the name was in fact still in use by a node, the results of this operation are unpredictable. Also, doing this does not cause the local end of the connection to close, so resources can be consumed.</source>
          <target state="translated">Это заставляет &lt;code&gt;epmd&lt;/code&gt; закрыть соединение с дальнего конца. Обратите внимание, что если имя фактически все еще использовалось узлом, результаты этой операции непредсказуемы. Кроме того, это не приводит к закрытию локального конца соединения, поэтому ресурсы могут потребляться.</target>
        </trans-unit>
        <trans-unit id="b14b393bb418a216b0875dc8287af117dd7067bb" translate="yes" xml:space="preserve">
          <source>This causes a parse transform to substitute a fun for the QLC. The (compiled) fun is called when the query handle is evaluated.</source>
          <target state="translated">Это приводит к тому,что преобразование разбора заменяет удовольствие от QLC.Веселье (скомпилированное)вызывается,когда обрабатывается хэндл запроса.</target>
        </trans-unit>
        <trans-unit id="6b5f81b2ddca32cf291bc3217d330648ab91cbde" translate="yes" xml:space="preserve">
          <source>This causes a warning for an unused variable, &lt;code&gt;Elem&lt;/code&gt;, if the code is compiled with the flag &lt;code&gt;warn_unused_vars&lt;/code&gt; set. Instead, the code can be rewritten to:</source>
          <target state="translated">Это вызывает предупреждение для неиспользуемой переменной &lt;code&gt;Elem&lt;/code&gt; , если код компилируется с установленным флагом &lt;code&gt;warn_unused_vars&lt;/code&gt; . Вместо этого код можно переписать так:</target>
        </trans-unit>
        <trans-unit id="6cb1d2e7687337b9f0ef3870a3a41bbcb1151114" translate="yes" xml:space="preserve">
          <source>This causes outstanding megaco:call/3 requests to return. The callback functions UserMod:handle_reply/4 and UserMod:handle_trans_ack/4 are also invoked where it applies. See the megaco_user module for more info about the callback arguments.</source>
          <target state="translated">Это приводит к невыполненным требованиям megaco:call/3.Функции обратного вызова UserMod:handle_reply/4 и UserMod:handle_trans_ack/4 также вызываются там,где это применимо.Дополнительную информацию об аргументах обратного вызова смотрите в модуле megaco_user.</target>
        </trans-unit>
        <trans-unit id="68c0a11988374396554e35c1339e4b4d296f9cbb" translate="yes" xml:space="preserve">
          <source>This causes the variable to be lifted (after parsing) to the next higher level in the syntax tree, replacing that entire subtree. In this case, the &lt;code&gt;'@_@Name'/0&lt;/code&gt; will be replaced with &lt;code&gt;'@@Name'&lt;/code&gt;, and the &lt;code&gt;/0&lt;/code&gt; part was just used as dummy notation and will be discarded.</source>
          <target state="translated">Это приводит к тому, что переменная поднимается (после синтаксического анализа) на следующий более высокий уровень в синтаксическом дереве, заменяя все это поддерево. В этом случае &lt;code&gt;'@_@Name'/0&lt;/code&gt; будет заменено на &lt;code&gt;'@@Name'&lt;/code&gt; , а часть &lt;code&gt;/0&lt;/code&gt; просто использовалась как фиктивная нотация и будет отброшена.</target>
        </trans-unit>
        <trans-unit id="9ae4d618ecb9ded2a891114f68fd094d009bf146" translate="yes" xml:space="preserve">
          <source>This chapter aims at explaining the differences and giving a rationale for why Erlang/OTP handles &quot;user&quot; as it does.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84078e161475adc15a1fe15da8646e8557d4b551" translate="yes" xml:space="preserve">
          <source>This chapter briefly describes Erlang records derived from ASN.1 specifications used to handle public key infrastructure. The scope is to describe the data types of each component, not the semantics. For information on the semantics, refer to the relevant standards and RFCs linked in the sections below.</source>
          <target state="translated">В этой главе кратко описываются записи Erlang,полученные на основе спецификаций ASN.1,используемых для работы с инфраструктурой открытого ключа.Область применения-описание типов данных каждого компонента,а не семантика.Информацию о семантике см.в соответствующих стандартах и RFC,ссылки на которые приведены в разделах ниже.</target>
        </trans-unit>
        <trans-unit id="b2f23bd1830ba030caede6017d114b23d96a8156" translate="yes" xml:space="preserve">
          <source>This chapter contains in extenso versions of the OpenSSL and SSLeay licenses.</source>
          <target state="translated">Эта глава содержит в extenso версии лицензий OpenSSL и SSLeay.</target>
        </trans-unit>
        <trans-unit id="6b1d044a8e1dfdfc0b3ead8b82c9c3d5d936b5ef" translate="yes" xml:space="preserve">
          <source>This chapter describes FIPS mode support in the crypto application.</source>
          <target state="translated">В этой главе описывается поддержка режима FIPS в криптографическом приложении.</target>
        </trans-unit>
        <trans-unit id="5241988387a67e2c505ee80c2f8d37b1169baacf" translate="yes" xml:space="preserve">
          <source>This chapter describes details of algorithms in the crypto application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f466e689949ed0c106ed58e883f29857cfc9906" translate="yes" xml:space="preserve">
          <source>This chapter describes the new api to encryption and decryption.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffd1f44c4ed57b40721b93cf5c0efd3d78d52a33" translate="yes" xml:space="preserve">
          <source>This chapter describes the support for loading encryption engines in the crypto application.</source>
          <target state="translated">В этой главе описывается поддержка загрузки механизмов шифрования в крипто-приложении.</target>
        </trans-unit>
        <trans-unit id="84e8d13b539f47c00293308a5f44715292e8675e" translate="yes" xml:space="preserve">
          <source>This chapter describes the support in the crypto application for using public and private keys stored in encryption engines.</source>
          <target state="translated">В этой главе описывается поддержка в крипто-приложении использования открытых и закрытых ключей,хранящихся в системах шифрования.</target>
        </trans-unit>
        <trans-unit id="66dda50ba5ba17ea40a6d362cc6e7f81e1f3b82a" translate="yes" xml:space="preserve">
          <source>This chapter is about creating such a system, which is called a &lt;strong&gt;target system&lt;/strong&gt;.</source>
          <target state="translated">Эта глава посвящена созданию такой системы, которая называется &lt;strong&gt;целевой системой&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="303cc2fd7c07d62117308f568c6c7a69cd42b456" translate="yes" xml:space="preserve">
          <source>This checks that the pid &lt;code&gt;From&lt;/code&gt; is in the &lt;code&gt;User_List&lt;/code&gt;:</source>
          <target state="translated">Это проверяет, находится ли pid &lt;code&gt;From&lt;/code&gt; в &lt;code&gt;User_List&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="d13a092e40b41fbf6f89dd0baee37b0578462112" translate="yes" xml:space="preserve">
          <source>This clause is equivalent to &lt;code&gt;&lt;a href=&quot;#send-5&quot;&gt;send(Socket, Host, Port, [], Packet)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd754cddd9c96097f025a6b91734f43531e07dcf" translate="yes" xml:space="preserve">
          <source>This closes the Erlang/OTP shell.</source>
          <target state="translated">Это закрывает оболочку Erlang/OTP.</target>
        </trans-unit>
        <trans-unit id="7d1fa1715e259b26d3b25f592aabf2747c705ee2" translate="yes" xml:space="preserve">
          <source>This code adds a set of people to the database. Running this code within one transaction ensures that either the whole family is added to the database, or the whole transaction terminates. For example, if the last child is badly formatted, or the executing process terminates because of an &lt;code&gt;'EXIT'&lt;/code&gt; signal while executing the family code, the transaction terminates. Thus, the situation where half a family is added can never occur.</source>
          <target state="translated">Этот код добавляет в базу данных набор людей. Выполнение этого кода в рамках одной транзакции гарантирует, что либо все семейство будет добавлено в базу данных, либо вся транзакция завершится. Например, если последний дочерний элемент плохо отформатирован или выполняющийся процесс завершается из-за сигнала &lt;code&gt;'EXIT'&lt;/code&gt; при выполнении кода семейства, транзакция завершается. Таким образом, ситуация, когда добавляется половина семьи, никогда не может возникнуть.</target>
        </trans-unit>
        <trans-unit id="98b115ab987715d60781ca89e47fa4411fb40cb5" translate="yes" xml:space="preserve">
          <source>This code behaves differently from &quot;&lt;code&gt;--&lt;/code&gt;&quot; if the lists contain duplicate elements (one occurrence of an element in HugeList2 removes &lt;strong&gt;all&lt;/strong&gt; occurrences in HugeList1.)</source>
          <target state="translated">Этот код ведет себя иначе, чем &quot; &lt;code&gt;--&lt;/code&gt; &quot;, если списки содержат повторяющиеся элементы (одно вхождение элемента в HugeList2 удаляет &lt;strong&gt;все&lt;/strong&gt; вхождения в HugeList1.)</target>
        </trans-unit>
        <trans-unit id="620f0e09a670821d9a2abe04fa98afa74a5ef2a9" translate="yes" xml:space="preserve">
          <source>This code is easier to write and to understand, and it also executes much faster.</source>
          <target state="translated">Этот код легче писать и понимать,а также выполняется намного быстрее.</target>
        </trans-unit>
        <trans-unit id="92fb78009d0b11b8b67edb3a1a517f7f5d300af8" translate="yes" xml:space="preserve">
          <source>This code lock state machine can be implemented using &lt;code&gt;gen_statem&lt;/code&gt; with the following &lt;strong&gt;callback module&lt;/strong&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2b34933ffae95b8a853f8ff645604fbd952d3ab" translate="yes" xml:space="preserve">
          <source>This code lock state machine can be implemented using &lt;code&gt;gen_statem&lt;/code&gt; with the following callback module:</source>
          <target state="translated">Этот &lt;code&gt;gen_statem&lt;/code&gt; автомат кодовой блокировки может быть реализован с использованием gen_statem со следующим модулем обратного вызова:</target>
        </trans-unit>
        <trans-unit id="7b2443919e593a0d589592796a6acfa56ef58bd8" translate="yes" xml:space="preserve">
          <source>This code uses the function &lt;code&gt;&lt;a href=&quot;mnesia#s_write-1&quot;&gt;s_write/1&lt;/a&gt;&lt;/code&gt; instead of the function &lt;code&gt;&lt;a href=&quot;mnesia#write-1&quot;&gt;write/1&lt;/a&gt;&lt;/code&gt; The function &lt;code&gt;s_write/1&lt;/code&gt; sets a sticky lock instead of a normal lock. If the table is not replicated, sticky locks have no special effect. If the table is replicated, and a sticky lock is set on node &lt;code&gt;N1&lt;/code&gt;, this lock then sticks to node &lt;code&gt;N1&lt;/code&gt;. The next time you try to set a sticky lock on the same record at node &lt;code&gt;N1&lt;/code&gt;, &lt;code&gt;Mnesia&lt;/code&gt; detects that the lock is already set and do no network operation to acquire the lock.</source>
          <target state="translated">Этот код использует функцию &lt;code&gt;&lt;a href=&quot;mnesia#s_write-1&quot;&gt;s_write/1&lt;/a&gt;&lt;/code&gt; вместо функции &lt;code&gt;&lt;a href=&quot;mnesia#write-1&quot;&gt;write/1&lt;/a&gt;&lt;/code&gt; . Функция &lt;code&gt;s_write/1&lt;/code&gt; устанавливает липкую блокировку вместо нормальной блокировки. Если таблица не реплицируется, липкие блокировки не имеют особого эффекта. Если таблица реплицируется и на узле &lt;code&gt;N1&lt;/code&gt; установлена ​​липкая блокировка , эта блокировка затем прикрепляется к узлу &lt;code&gt;N1&lt;/code&gt; . В следующий раз, когда вы попытаетесь установить липкую блокировку для той же записи на узле &lt;code&gt;N1&lt;/code&gt; , &lt;code&gt;Mnesia&lt;/code&gt; обнаружит, что блокировка уже установлена, и не выполнит никаких сетевых операций для получения блокировки.</target>
        </trans-unit>
        <trans-unit id="d473cae681409fa329e6bc7b44d312e6bb308a91" translate="yes" xml:space="preserve">
          <source>This command can only be used when contacting &lt;code&gt;epmd&lt;/code&gt; instances started with flag &lt;code&gt;-relaxed_command_check&lt;/code&gt;.</source>
          <target state="translated">Эту команду можно использовать только при обращении &lt;code&gt;epmd&lt;/code&gt; экземплярам epmd, запущенным с флагом &lt;code&gt;-relaxed_command_check&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a8da29ec7d90c1769855d7fc9ae5d438b9bb9d86" translate="yes" xml:space="preserve">
          <source>This command file is then set as heart command.</source>
          <target state="translated">Затем этот командный файл устанавливается как команда сердца.</target>
        </trans-unit>
        <trans-unit id="52d8f2983dee948139d1e9e434673f9c52bda692" translate="yes" xml:space="preserve">
          <source>This command will create a file named &lt;code&gt;root.TAGS&lt;/code&gt; in the current directory. The file will contain references to all Erlang source files in the Erlang distribution.</source>
          <target state="translated">Эта команда создаст файл с именем &lt;code&gt;root.TAGS&lt;/code&gt; в текущем каталоге. Файл будет содержать ссылки на все исходные файлы Erlang в дистрибутиве Erlang.</target>
        </trans-unit>
        <trans-unit id="aa2bc19b983020ccb9b326fcd4731f0bd1161c57" translate="yes" xml:space="preserve">
          <source>This composes a test set from the exported test functions of the named module, i.e., those functions with arity zero whose names end with &lt;code&gt;_test&lt;/code&gt; or &lt;code&gt;_test_&lt;/code&gt;. Basically, the &lt;code&gt;..._test()&lt;/code&gt; functions become simple tests, while the &lt;code&gt;..._test_()&lt;/code&gt; functions become generators.</source>
          <target state="translated">Это составляет набор тестов из экспортированных тестовых функций названного модуля, т. &lt;code&gt;_test&lt;/code&gt; Тех функций с нулевой арностью, имена которых заканчиваются на _test или &lt;code&gt;_test_&lt;/code&gt; . По сути, функции &lt;code&gt;..._test()&lt;/code&gt; становятся простыми тестами, а функции &lt;code&gt;..._test_()&lt;/code&gt; - генераторами.</target>
        </trans-unit>
        <trans-unit id="63c3c21b3eef82be8246811ccf2f3c14d371f943" translate="yes" xml:space="preserve">
          <source>This concludes the example. It is fully runnable and you can read or write to the I/O server by using, for example, the &lt;code&gt;io&lt;/code&gt; module or even the &lt;code&gt;file&lt;/code&gt; module. It is as simple as that to implement a fully fledged I/O server in Erlang.</source>
          <target state="translated">На этом пример закончен. Он полностью работоспособен, и вы можете читать или писать на сервер ввода-вывода, используя, например, модуль &lt;code&gt;io&lt;/code&gt; или даже &lt;code&gt;file&lt;/code&gt; модуль. Вот так просто реализовать полноценный сервер ввода-вывода в Erlang.</target>
        </trans-unit>
        <trans-unit id="1bc6422d46a0ceffe44a706f105bee33bbb50726" translate="yes" xml:space="preserve">
          <source>This concludes the quick tour of the features of &lt;strong&gt;beam_makeops&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33f0e49393f960fdbb1f12f5f92189e125a0ce06" translate="yes" xml:space="preserve">
          <source>This configuration function is called as the first function in the suite. It typically contains initializations that are common for all test cases in the suite, and that must only be done once. Parameter &lt;code&gt;Config&lt;/code&gt; is the configuration data that can be modified. Whatever is returned from this function is specified as &lt;code&gt;Config&lt;/code&gt; to all configuration functions and test cases in the suite.</source>
          <target state="translated">Эта функция конфигурации вызывается как первая функция в пакете. Обычно он содержит инициализации, которые являются общими для всех тестовых случаев в наборе, и которые должны выполняться только один раз. Параметр &lt;code&gt;Config&lt;/code&gt; - это данные конфигурации, которые можно изменять. Все, что возвращается из этой функции, указывается как &lt;code&gt;Config&lt;/code&gt; для всех функций конфигурации и тестовых примеров в наборе.</target>
        </trans-unit>
        <trans-unit id="e7813765274dd4ee3556852945789f955a7b535a" translate="yes" xml:space="preserve">
          <source>This configuration function is called before execution of a test case group. It typically contains initializations that are common for all test cases and subgroups in the group, and that must only be performed once. &lt;code&gt;GroupName&lt;/code&gt; is the name of the group, as specified in the group definition (see &lt;code&gt;&lt;a href=&quot;#Module:groups-0&quot;&gt;Module:groups/0&lt;/a&gt;&lt;/code&gt;). Parameter &lt;code&gt;Config&lt;/code&gt; is the configuration data that can be modified. The return value of this function is given as &lt;code&gt;Config&lt;/code&gt; to all test cases and subgroups in the group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fc12196aaa3c7c817d997888a6e0c0d511e97b1" translate="yes" xml:space="preserve">
          <source>This configuration function is called before execution of a test case group. It typically contains initializations that are common for all test cases and subgroups in the group, and that must only be performed once. &lt;code&gt;GroupName&lt;/code&gt; is the name of the group, as specified in the group definition (see &lt;code&gt;&lt;a href=&quot;#Module:groups-0&quot;&gt;groups/0&lt;/a&gt;&lt;/code&gt;). Parameter &lt;code&gt;Config&lt;/code&gt; is the configuration data that can be modified. The return value of this function is given as &lt;code&gt;Config&lt;/code&gt; to all test cases and subgroups in the group.</source>
          <target state="translated">Эта функция конфигурации вызывается перед выполнением группы тестовых примеров. Обычно он содержит инициализации, общие для всех тестовых примеров и подгрупп в группе, и которые должны выполняться только один раз. &lt;code&gt;GroupName&lt;/code&gt; - это имя группы, как указано в определении группы (см. &lt;code&gt;&lt;a href=&quot;#Module:groups-0&quot;&gt;groups/0&lt;/a&gt;&lt;/code&gt; ). Параметр &lt;code&gt;Config&lt;/code&gt; - это данные конфигурации, которые можно изменять. Возвращаемое значение этой функции передается как &lt;code&gt;Config&lt;/code&gt; всем тестовым примерам и подгруппам в группе.</target>
        </trans-unit>
        <trans-unit id="7b59f052b21fb5d16deae6ffc52f3f1d17300c30" translate="yes" xml:space="preserve">
          <source>This configuration parameter defaults &lt;code&gt;false&lt;/code&gt; and will do so up until OTP 23. As of OTP 24 this configuration parameter will be removed and &lt;code&gt;get_system_memory_data()&lt;/code&gt; will begin behaving as it does now when the configuration parameter has been set to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23368b3fe2d449c2692eb8e3e91bed68d4ab16da" translate="yes" xml:space="preserve">
          <source>This conforms to the format used by the scanner in the Erlang &lt;code&gt;io&lt;/code&gt; library module.</source>
          <target state="translated">Это соответствует формату, используемому сканером в библиотечном модуле Erlang &lt;code&gt;io&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="89e7ad5998bd8d56a5635438c81b21cdbc5fbf20" translate="yes" xml:space="preserve">
          <source>This construction does not consume any messages, only suspends execution in the process for &lt;code&gt;ExprT&lt;/code&gt; milliseconds. This can be used to implement simple timers.</source>
          <target state="translated">Эта конструкция не потребляет никаких сообщений, а только приостанавливает выполнение в процессе на &lt;code&gt;ExprT&lt;/code&gt; миллисекунд. Это можно использовать для реализации простых таймеров.</target>
        </trans-unit>
        <trans-unit id="e9b232bbe87386ece629cac0a167c63032d6651c" translate="yes" xml:space="preserve">
          <source>This control message replaces the &lt;code&gt;EXIT2&lt;/code&gt; control message and will be sent when the distribution flag &lt;code&gt;&lt;a href=&quot;erl_dist_protocol#dflags&quot;&gt;DFLAG_EXIT_PAYLOAD&lt;/a&gt;&lt;/code&gt; has been negotiated in the connection setup handshake.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31e56f278047c16bfcdee2f58fb054509e25ef75" translate="yes" xml:space="preserve">
          <source>This control message replaces the &lt;code&gt;EXIT2_TT&lt;/code&gt; control message and will be sent when the distribution flag &lt;code&gt;&lt;a href=&quot;erl_dist_protocol#dflags&quot;&gt;DFLAG_EXIT_PAYLOAD&lt;/a&gt;&lt;/code&gt; has been negotiated in the connection setup handshake.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f2c61e7c0a9740ed09540a374d303740287e237" translate="yes" xml:space="preserve">
          <source>This control message replaces the &lt;code&gt;EXIT&lt;/code&gt; control message and will be sent when the distribution flag &lt;code&gt;&lt;a href=&quot;erl_dist_protocol#dflags&quot;&gt;DFLAG_EXIT_PAYLOAD&lt;/a&gt;&lt;/code&gt; has been negotiated in the connection setup handshake.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="900bb411e26a0ffdc2a46615c860d514eaa89642" translate="yes" xml:space="preserve">
          <source>This control message replaces the &lt;code&gt;EXIT_TT&lt;/code&gt; control message and will be sent when the distribution flag &lt;code&gt;&lt;a href=&quot;erl_dist_protocol#dflags&quot;&gt;DFLAG_EXIT_PAYLOAD&lt;/a&gt;&lt;/code&gt; has been negotiated in the connection setup handshake.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b27db693ded90f8d66758ebab03e1e0cfcb72730" translate="yes" xml:space="preserve">
          <source>This control message replaces the &lt;code&gt;MONITOR_P_EXIT&lt;/code&gt; control message and will be sent when the distribution flag &lt;code&gt;&lt;a href=&quot;erl_dist_protocol#dflags&quot;&gt;DFLAG_EXIT_PAYLOAD&lt;/a&gt;&lt;/code&gt; has been negotiated in the connection setup handshake.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ba4af6a7f34aa01d96e5575c3aff6bb9e026456" translate="yes" xml:space="preserve">
          <source>This control message replaces the &lt;code&gt;SEND&lt;/code&gt; control message and will be sent when the distribution flag &lt;code&gt;&lt;a href=&quot;erl_dist_protocol#dflags&quot;&gt;DFLAG_SEND_SENDER&lt;/a&gt;&lt;/code&gt; has been negotiated in the connection setup handshake.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13ed13e3031f229e67c3f6d88ff54ba590b010d0" translate="yes" xml:space="preserve">
          <source>This control message replaces the &lt;code&gt;SEND_TT&lt;/code&gt; control message and will be sent when the distribution flag &lt;code&gt;&lt;a href=&quot;erl_dist_protocol#dflags&quot;&gt;DFLAG_SEND_SENDER&lt;/a&gt;&lt;/code&gt; has been negotiated in the connection setup handshake.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff79977655b81c53aa0929475789c463d4c65ccd" translate="yes" xml:space="preserve">
          <source>This control messages replace the &lt;code&gt;SEND&lt;/code&gt; control message and will be sent when the distribution flag &lt;code&gt;&lt;a href=&quot;erl_dist_protocol#dflags&quot;&gt;DFLAG_SEND_SENDER&lt;/a&gt;&lt;/code&gt; has been negotiated in the connection setup handshake.</source>
          <target state="translated">Эти управляющие сообщения заменяют управляющее сообщение &lt;code&gt;SEND&lt;/code&gt; и будут отправлены после &lt;code&gt;&lt;a href=&quot;erl_dist_protocol#dflags&quot;&gt;DFLAG_SEND_SENDER&lt;/a&gt;&lt;/code&gt; флага распространения DFLAG_SEND_SENDER в подтверждении установления соединения.</target>
        </trans-unit>
        <trans-unit id="61b1bf1e5da0665206d28c63a8251c70f9437da9" translate="yes" xml:space="preserve">
          <source>This control messages replace the &lt;code&gt;SEND_TT&lt;/code&gt; control message and will be sent when the distribution flag &lt;code&gt;&lt;a href=&quot;erl_dist_protocol#dflags&quot;&gt;DFLAG_SEND_SENDER&lt;/a&gt;&lt;/code&gt; has been negotiated in the connection setup handshake.</source>
          <target state="translated">Эти управляющие сообщения заменяют управляющее сообщение &lt;code&gt;SEND_TT&lt;/code&gt; и будут отправлены, когда флаг распределения &lt;code&gt;&lt;a href=&quot;erl_dist_protocol#dflags&quot;&gt;DFLAG_SEND_SENDER&lt;/a&gt;&lt;/code&gt; будет согласован в подтверждении установления соединения.</target>
        </trans-unit>
        <trans-unit id="3811bd05c74f86fcbc14a9c1b9034f65fa2fcd06" translate="yes" xml:space="preserve">
          <source>This could be accomplished with the option &lt;code&gt;fail_callback&lt;/code&gt; which will be called if the hostname verification fails:</source>
          <target state="translated">Это может быть выполнено с помощью опции &lt;code&gt;fail_callback&lt;/code&gt; , которая будет вызываться, если проверка имени хоста не удалась:</target>
        </trans-unit>
        <trans-unit id="51a1cc36e31cb197216b50eb9eb632d0459ddabc" translate="yes" xml:space="preserve">
          <source>This creates a boot script, both the readable version, &lt;code&gt;ch_rel-1.script&lt;/code&gt;, and the binary version, &lt;code&gt;ch_rel-1.boot&lt;/code&gt;, used by the runtime system.</source>
          <target state="translated">Это создает сценарий загрузки, как читаемую версию, &lt;code&gt;ch_rel-1.script&lt;/code&gt; , так и двоичную версию, &lt;code&gt;ch_rel-1.boot&lt;/code&gt; , используемую системой времени выполнения.</target>
        </trans-unit>
        <trans-unit id="8f83e183c685a8bf96ad1d1d03b74d255f5c951a" translate="yes" xml:space="preserve">
          <source>This creates a test set from all the modules belonging to the specified application, by consulting the application's &lt;code&gt;.app&lt;/code&gt; file (see &lt;code&gt;{file, FileName}&lt;/code&gt;), or if no such file exists, by testing all object files in the application's &lt;code&gt;ebin&lt;/code&gt;-directory (see &lt;code&gt;{dir, Path}&lt;/code&gt;); if that does not exist, the &lt;code&gt;code:lib_dir(AppName)&lt;/code&gt; directory is used.</source>
          <target state="translated">При этом создается набор тестов из всех модулей, принадлежащих указанному приложению, путем обращения к файлу &lt;code&gt;.app&lt;/code&gt; приложения (см. &lt;code&gt;{file, FileName}&lt;/code&gt; ) или, если такой файл не существует, путем тестирования всех объектных файлов в &lt;code&gt;ebin&lt;/code&gt; приложения ( см. &lt;code&gt;{dir, Path}&lt;/code&gt; ); если он не существует, используется &lt;code&gt;code:lib_dir(AppName)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7dfbabbf55ded6bc40cb089b7e7b9db65720b207" translate="yes" xml:space="preserve">
          <source>This creates a tuple with the brand of the motorcycle and the output format. We use the brand name only for sorting purpose. We have to end the template function with the &quot;built in clause&quot; &lt;code&gt;template(E) -&amp;gt; built_in_rules(fun template/1, E).&lt;/code&gt;</source>
          <target state="translated">Это создает кортеж с маркой мотоцикла и выходным форматом. Мы используем название бренда только для сортировки. Мы должны завершить функцию шаблона с помощью шаблона &amp;laquo;встроенного предложения&amp;raquo; &lt;code&gt;template(E) -&amp;gt; built_in_rules(fun template/1, E).&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cd1d3feb38283e93bdf7380a9a3f2767d2d85c6a" translate="yes" xml:space="preserve">
          <source>This creates an &lt;code&gt;(ETERM *)&lt;/code&gt; structure corresponding to the Erlang term &lt;code&gt;[{name,madonna},{age,21},{data,[{adr,&quot;E-street&quot;,42}]}]&lt;/code&gt;</source>
          <target state="translated">Это создает структуру &lt;code&gt;(ETERM *)&lt;/code&gt; , соответствующую термину Эрланга &lt;code&gt;[{name,madonna},{age,21},{data,[{adr,&quot;E-street&quot;,42}]}]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ae606f82f5ea62f5942a0adf3b9e512950c71e07" translate="yes" xml:space="preserve">
          <source>This creates an additional folder in &lt;code&gt;$ERL_TOP/release&lt;/code&gt; called &lt;code&gt;tests&lt;/code&gt;. Now, it's time to start the smoke test.</source>
          <target state="translated">Это создает дополнительную папку в &lt;code&gt;$ERL_TOP/release&lt;/code&gt; под названием &lt;code&gt;tests&lt;/code&gt; . Пришло время начать дымовой тест.</target>
        </trans-unit>
        <trans-unit id="ef73a8deed0f6aa219ae36f5994c464c421d1dae" translate="yes" xml:space="preserve">
          <source>This creates an anonymous function of &lt;code&gt;N&lt;/code&gt; arguments and binds it to the variable &lt;code&gt;F&lt;/code&gt;.</source>
          <target state="translated">Это создает анонимную функцию от &lt;code&gt;N&lt;/code&gt; аргументов и связывает его с переменной &lt;code&gt;F&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="524be8f1a981b01e7043d75c61d487bdaac91459" translate="yes" xml:space="preserve">
          <source>This creates:</source>
          <target state="translated">Это создает:</target>
        </trans-unit>
        <trans-unit id="c46e82b8048ee48e1624490a06ae6b4a6e2f1c62" translate="yes" xml:space="preserve">
          <source>This daemon acts as a name server on all hosts involved in distributed Erlang computations. When an Erlang node starts, the node has a name and it obtains an address from the host OS kernel. The name and address are sent to the &lt;code&gt;epmd&lt;/code&gt; daemon running on the local host. In a TCP/IP environment, the address consists of the IP address and a port number. The node name is an atom on the form of &lt;code&gt;Name@Node&lt;/code&gt;. The job of the &lt;code&gt;epmd&lt;/code&gt; daemon is to keep track of which node name listens on which address. Hence, &lt;code&gt;epmd&lt;/code&gt; maps symbolic node names to machine addresses.</source>
          <target state="translated">Этот демон действует как сервер имен на всех хостах, участвующих в распределенных вычислениях Erlang. Когда узел Erlang запускается, узел имеет имя и получает адрес от ядра ОС хоста. Имя и адрес отправляются демону &lt;code&gt;epmd&lt;/code&gt; , работающему на локальном хосте. В среде TCP / IP адрес состоит из IP-адреса и номера порта. Имя узла - это атом в форме &lt;code&gt;Name@Node&lt;/code&gt; . Работа в &lt;code&gt;epmd&lt;/code&gt; демона, чтобы отслеживать, какое имя узла прослушиваний на какой адрес. Следовательно, &lt;code&gt;epmd&lt;/code&gt; отображает символьные имена узлов на машинные адреса.</target>
        </trans-unit>
        <trans-unit id="be132e0b64312cab1412b3c061af9dbcd07c2db2" translate="yes" xml:space="preserve">
          <source>This data can also be specified explicitly in the user configuration file. This file is to contain lines of configuration parameters (each terminated with a full stop). Some parameters add data to the configuration (such as host and nameserver), others overwrite any previous settings (such as domain and lookup). The user configuration file is always examined last in the configuration process, making it possible for the user to override any default values or previously made settings. Call &lt;code&gt;inet:get_rc()&lt;/code&gt; to view the state of the &lt;code&gt;inet&lt;/code&gt; configuration database.</source>
          <target state="translated">Эти данные также могут быть явно указаны в файле конфигурации пользователя. Этот файл должен содержать строки параметров конфигурации (каждая заканчивается точкой). Некоторые параметры добавляют данные в конфигурацию (например, хост и сервер имен), другие перезаписывают любые предыдущие настройки (например, домен и поиск). Файл конфигурации пользователя всегда проверяется последним в процессе настройки, что позволяет пользователю изменить любые значения по умолчанию или ранее сделанные настройки. Вызовите &lt;code&gt;inet:get_rc()&lt;/code&gt; чтобы просмотреть состояние базы данных конфигурации &lt;code&gt;inet&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="48f25fc645975c60f249d68b5dd230f51d28d68c" translate="yes" xml:space="preserve">
          <source>This date and time identifier has the same format as the XML type &lt;code&gt;dateTime&lt;/code&gt; and is compliant with RFC 3339 Date and Time on the Internet Timestamps. The format is as follows:</source>
          <target state="translated">Этот идентификатор даты и времени имеет тот же формат, что и тип XML &lt;code&gt;dateTime&lt;/code&gt; , и соответствует требованиям RFC 3339 &amp;laquo;Дата и время в метках времени в Интернете&amp;raquo;. Формат следующий:</target>
        </trans-unit>
        <trans-unit id="738523548a30e709bb5b81f10988c30ec76d3772" translate="yes" xml:space="preserve">
          <source>This defines a local function handler that is called with:</source>
          <target state="translated">Это определяет обработчик локальной функции,который вызывается с:</target>
        </trans-unit>
        <trans-unit id="948cd7e2c415cc3a421a26b31393fafc514d648b" translate="yes" xml:space="preserve">
          <source>This defines a non-local function handler that is called with:</source>
          <target state="translated">Это определяет нелокальный обработчик функции,который вызывается с:</target>
        </trans-unit>
        <trans-unit id="662f224ab983c6f766721b42aada149c79c7000c" translate="yes" xml:space="preserve">
          <source>This description is far from complete. It will be updated if the protocol is updated. However, the protocols, both from Erlang nodes to the Erlang Port Mapper Daemon (EPMD) and between Erlang nodes are stable since many years.</source>
          <target state="translated">Это описание далеко не полное.Оно будет обновлено,если протокол будет обновлен.Однако,протоколы,как от узлов Erlang до даемона Erlang Port Mapper (EPMD),так и между узлами Erlang стабильны уже много лет.</target>
        </trans-unit>
        <trans-unit id="e8b60a37d6f9b5dab9afb438915682d979c1ca85" translate="yes" xml:space="preserve">
          <source>This diagnostic warns that the variable &lt;code&gt;X&lt;/code&gt; in the pattern is not the same as the variable &lt;code&gt;X&lt;/code&gt; that occurs in the function head.</source>
          <target state="translated">Эта диагностика предупреждает, что переменная &lt;code&gt;X&lt;/code&gt; в шаблоне не совпадает с переменной &lt;code&gt;X&lt;/code&gt; , которая встречается в заголовке функции.</target>
        </trans-unit>
        <trans-unit id="9c0a88d7e60d7e7f1439fe6fcfcc1a50b22440f9" translate="yes" xml:space="preserve">
          <source>This directory is the &lt;strong&gt;installation directory&lt;/strong&gt; of the embedded environment.</source>
          <target state="translated">Этот каталог является каталогом &lt;strong&gt;установки&lt;/strong&gt; встроенной среды.</target>
        </trans-unit>
        <trans-unit id="7a3cf407193e52ba658ffaccdcac32c81fba9803" translate="yes" xml:space="preserve">
          <source>This disables the use of style sheets and JavaScripts (see &lt;code&gt;&lt;a href=&quot;#table_sorting&quot;&gt;Sorting HTML Table Columns&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">Это отключает использование таблиц стилей и сценариев JavaScripts (см. &lt;code&gt;&lt;a href=&quot;#table_sorting&quot;&gt;Sorting HTML Table Columns&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="5ecec3c07eff61196ca0de8babf79aab0e2d1d31" translate="yes" xml:space="preserve">
          <source>This document describes how to build and install Erlang/OTP-21. Erlang/OTP should be possible to build from source on any Unix/Linux system, including OS X. You are advised to read the whole document before attempting to build and install Erlang/OTP.</source>
          <target state="translated">Этот документ описывает,как построить и установить Erlang/OTP-21.Erlang/OTP можно собирать из исходников на любой Unix/Linux системе,включая OS X.Рекомендуется прочитать весь документ перед тем,как пытаться собрать и установить Erlang/OTP.</target>
        </trans-unit>
        <trans-unit id="b4d112b823ab84ed3043a977bee18b4c73f73d72" translate="yes" xml:space="preserve">
          <source>This document describes how to build and install Erlang/OTP-23. Erlang/OTP should be possible to build from source on any Unix/Linux system, including OS X. You are advised to read the whole document before attempting to build and install Erlang/OTP.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="154342527042516d1b93b9115b8c8965ef041d9a" translate="yes" xml:space="preserve">
          <source>This document describes how to cross compile Erlang/OTP-21. You are advised to read the whole document before attempting to cross compile Erlang/OTP. However, before reading this document, you should read the &lt;code&gt;&lt;a href=&quot;install&quot;&gt;$ERL_TOP/HOWTO/INSTALL.md&lt;/a&gt;&lt;/code&gt; document which describes building and installing Erlang/OTP in general. &lt;code&gt;$ERL_TOP&lt;/code&gt; is the top directory in the source tree.</source>
          <target state="translated">В этом документе описывается кросс-компиляция Erlang / OTP-21. Рекомендуется прочитать весь документ перед попыткой кросс-компиляции Erlang / OTP. Однако перед чтением этого документа вы должны прочитать документ &lt;code&gt;&lt;a href=&quot;install&quot;&gt;$ERL_TOP/HOWTO/INSTALL.md&lt;/a&gt;&lt;/code&gt; который описывает сборку и установку Erlang / OTP в целом. &lt;code&gt;$ERL_TOP&lt;/code&gt; - это верхний каталог в дереве исходных текстов .</target>
        </trans-unit>
        <trans-unit id="8a45990179b4af3d1fed1b433dba16b703f213db" translate="yes" xml:space="preserve">
          <source>This document describes how to cross compile Erlang/OTP-23. You are advised to read the whole document before attempting to cross compile Erlang/OTP. However, before reading this document, you should read the &lt;code&gt;&lt;a href=&quot;install&quot;&gt;$ERL_TOP/HOWTO/INSTALL.md&lt;/a&gt;&lt;/code&gt; document which describes building and installing Erlang/OTP in general. &lt;code&gt;$ERL_TOP&lt;/code&gt; is the top directory in the source tree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="191135bf8635f2eb1fba713547f0e7f062a60990" translate="yes" xml:space="preserve">
          <source>This document describes strategy regarding supported Releases, compatibility, deprecations and removal of functionality. This document was introduced in OTP 21. Actions taken regarding these issues before OTP 21 did not adhere this document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc5c2a0c7bfb9a9029380c09ce1ef9700c0544c7" translate="yes" xml:space="preserve">
          <source>This document describes the &lt;strong&gt;beam_makeops&lt;/strong&gt; script.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71a24568f8a61fe472275bbbf1ab8d95f3724c6d" translate="yes" xml:space="preserve">
          <source>This document describes the process of patching an existing OTP installation with one or more Erlang/OTP applications of newer versions than already installed. The tool &lt;code&gt;otp_patch_apply&lt;/code&gt; is available for this specific purpose. It resides in the top directory of the Erlang/OTP source tree.</source>
          <target state="translated">В этом документе описан процесс исправления существующей установки OTP с помощью одного или нескольких приложений Erlang / OTP более новых версий, чем уже установленные. Инструмент &lt;code&gt;otp_patch_apply&lt;/code&gt; доступен для этой конкретной цели. Он находится в верхнем каталоге дерева исходных текстов Erlang / OTP.</target>
        </trans-unit>
        <trans-unit id="a3d8a881ed785c2bbf80ae1ed7354f59f5918b23" translate="yes" xml:space="preserve">
          <source>This document does not give an introduction to XML. There are a lot of books available that describe XML from different views. At the &lt;code&gt;&lt;a href=&quot;http://www.w3.org&quot;&gt;www.W3.org&lt;/a&gt;&lt;/code&gt; site you will find the &lt;code&gt;&lt;a href=&quot;http://www.w3.org/TR/REC-xml/&quot;&gt;XML 1.0 specification&lt;/a&gt;&lt;/code&gt; and other related specs. One site were you can find tutorials on XML and related specs is &lt;code&gt;&lt;a href=&quot;http://www.zvon.org&quot;&gt;ZVON.org&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Этот документ не дает введения в XML. Доступно множество книг, в которых XML описывается с разных точек зрения. На сайте &lt;code&gt;&lt;a href=&quot;http://www.w3.org&quot;&gt;www.W3.org&lt;/a&gt;&lt;/code&gt; вы найдете &lt;code&gt;&lt;a href=&quot;http://www.w3.org/TR/REC-xml/&quot;&gt;XML 1.0 specification&lt;/a&gt;&lt;/code&gt; и другие связанные спецификации. Один из сайтов, на котором вы можете найти руководства по XML и связанным спецификациям, - это &lt;code&gt;&lt;a href=&quot;http://www.zvon.org&quot;&gt;ZVON.org&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b4fa866665377dd271c3d0c726f5c45d923171b8" translate="yes" xml:space="preserve">
          <source>This document does not give an introduction to XML. There are a lot of books available that describe XML from different views. At the &lt;code&gt;&lt;a href=&quot;https://www.w3.org&quot;&gt;www.W3.org&lt;/a&gt;&lt;/code&gt; site you will find the &lt;code&gt;&lt;a href=&quot;https://www.w3.org/TR/REC-xml/&quot;&gt;XML 1.0 specification&lt;/a&gt;&lt;/code&gt; and other related specs. One site were you can find tutorials on XML and related specs is &lt;code&gt;&lt;a href=&quot;http://www.zvon.org&quot;&gt;ZVON.org&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="143fad2c70e90531f505c4657ec791c944d5326a" translate="yes" xml:space="preserve">
          <source>This document focuses on the graphical parts of the tool. The concepts are explained in the reference manual for the module &lt;code&gt;reltool&lt;/code&gt;.</source>
          <target state="translated">В этом документе основное внимание уделяется графическим частям инструмента. Эти концепции объясняются в справочном руководстве для модуля &lt;code&gt;reltool&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c0852a621150eac160bbaa6ef0c4a98523bb7541" translate="yes" xml:space="preserve">
          <source>This document list all functionality in Erlang/OTP that currently are scheduled for removal. For more information regarding the strategy regarding removal of functionality see the documentation of &lt;code&gt;Support, Compatibility, Deprecations, and Removal&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb9c1c47dda29ee89c688498445546e5263115a7" translate="yes" xml:space="preserve">
          <source>This document lists all deprecated functionality in Erlang/OTP. For more information regarding the strategy regarding deprecations see the documentation of &lt;code&gt;Support, Compatibility, Deprecations, and Removal&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0a13f41d530fac43cd74427e80d4e61f60e1273" translate="yes" xml:space="preserve">
          <source>This does not reduce the overall time for the upgrade, but it allows checks and purge to be executed in the background before the real upgrade is started.</source>
          <target state="translated">Это не сокращает общее время обновления,но позволяет выполнять проверки и очистку в фоновом режиме до начала реального обновления.</target>
        </trans-unit>
        <trans-unit id="05624a0b5087d8c82b1545072e5dc7e9346c97f4" translate="yes" xml:space="preserve">
          <source>This driver is called like the others from Erlang. However, as we use &lt;code&gt;driver_output_term&lt;/code&gt;, there is no need to call &lt;code&gt;binary_to_term&lt;/code&gt;. The Erlang code is in the sample file &lt;code&gt;next_perm.erl&lt;/code&gt;.</source>
          <target state="translated">Этот драйвер называется так же, как и другие из Erlang. Однако, поскольку мы используем &lt;code&gt;driver_output_term&lt;/code&gt; , нет необходимости вызывать &lt;code&gt;binary_to_term&lt;/code&gt; . Код на Erlang находится в образце файла &lt;code&gt;next_perm.erl&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0d94d056a098777bcb956ee04ca4b41885a25660" translate="yes" xml:space="preserve">
          <source>This driver uses the &lt;code&gt;writev&lt;/code&gt; system call to send data onto the socket. A combination of &lt;code&gt;writev&lt;/code&gt; and the driver output queues is very convenient. An &lt;code&gt;ErlIOVec&lt;/code&gt; structure contains a &lt;code&gt;SysIOVec&lt;/code&gt; (which is equivalent to the &lt;code&gt;struct iovec&lt;/code&gt; structure defined in &lt;code&gt;uio.h&lt;/code&gt;. The &lt;code&gt;ErlIOVec&lt;/code&gt; also contains an array of &lt;code&gt;ErlDrvBinary&lt;/code&gt; pointers, of the same length as the number of buffers in the I/O vector itself. One can use this to allocate the binaries for the queue &quot;manually&quot; in the driver, but here the binary array is filled with &lt;code&gt;NULL&lt;/code&gt; values (line 7). The runtime system then allocates its own buffers when &lt;code&gt;driver_enqv&lt;/code&gt; is called (line 37).</source>
          <target state="translated">Этот драйвер использует системный вызов &lt;code&gt;writev&lt;/code&gt; для отправки данных в сокет. Комбинация &lt;code&gt;writev&lt;/code&gt; и вывода драйвера очень удобна. &lt;code&gt;ErlIOVec&lt;/code&gt; структура содержит &lt;code&gt;SysIOVec&lt;/code&gt; (что эквивалентно &lt;code&gt;struct iovec&lt;/code&gt; структуры , определенной в &lt;code&gt;uio.h&lt;/code&gt; . &lt;code&gt;ErlIOVec&lt;/code&gt; также содержит массив &lt;code&gt;ErlDrvBinary&lt;/code&gt; указателей, такой же длины , как количество буферов в I / O вектор сам. Можно используйте это, чтобы выделить двоичные файлы для очереди &amp;laquo;вручную&amp;raquo; в драйвере, но здесь двоичный массив заполняется значениями &lt;code&gt;NULL&lt;/code&gt; (строка 7). Система времени выполнения затем выделяет свои собственные буферы, когда &lt;code&gt;driver_enqv&lt;/code&gt; называется (строка 37).</target>
        </trans-unit>
        <trans-unit id="93162ce71b1395d9e7f9c6b572069d33e4ac790f" translate="yes" xml:space="preserve">
          <source>This driver was written before the runtime system had SMP support. The driver will still function in the runtime system with SMP support, but performance will suffer from lock contention on the driver lock used for the driver. This can be alleviated by reviewing and perhaps rewriting the code so that each instance of the driver safely can execute in parallel. When instances safely can execute in parallel, it is safe to enable instance-specific locking on the driver. This is done by passing &lt;code&gt;&lt;a href=&quot;driver_entry#driver_flags&quot;&gt; ERL_DRV_FLAG_USE_PORT_LOCKING&lt;/a&gt;&lt;/code&gt; as a driver flag. This is left as an exercise for the reader.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08f20d866bfb101e15cb4fdb27b1335c719c4f1c" translate="yes" xml:space="preserve">
          <source>This driver was written before the runtime system had SMP support. The driver will still function in the runtime system with SMP support, but performance will suffer from lock contention on the driver lock used for the driver. This can be alleviated by reviewing and perhaps rewriting the code so that each instance of the driver safely can execute in parallel. When instances safely can execute in parallel, it is safe to enable instance-specific locking on the driver. This is done by passing &lt;code&gt;&lt;a href=&quot;driver_entry#driver_flags&quot;&gt;ERL_DRV_FLAG_USE_PORT_LOCKING&lt;/a&gt;&lt;/code&gt; as a driver flag. This is left as an exercise for the reader.</source>
          <target state="translated">Этот драйвер был написан до того, как в исполняющей системе появилась поддержка SMP. Драйвер по-прежнему будет работать в системе времени выполнения с поддержкой SMP, но производительность будет страдать из-за конфликта блокировок для блокировки драйвера, используемой для драйвера. Этого можно избежать, просмотрев и, возможно, переписав код, чтобы каждый экземпляр драйвера мог безопасно выполняться параллельно. Когда экземпляры могут безопасно выполняться параллельно, можно безопасно включить блокировку конкретного экземпляра для драйвера. Это делается путем передачи &lt;code&gt;&lt;a href=&quot;driver_entry#driver_flags&quot;&gt;ERL_DRV_FLAG_USE_PORT_LOCKING&lt;/a&gt;&lt;/code&gt; в качестве флага драйвера. Это оставлено в качестве упражнения для читателя.</target>
        </trans-unit>
        <trans-unit id="c64c900bac343dda7e6756119d5d4e6241d815d7" translate="yes" xml:space="preserve">
          <source>This effectively closes down the Erlang node. Therefore, use the erl scheme instead, until this security breach is fixed.</source>
          <target state="translated">Это эффективно закрывает узел Эрланга.Поэтому используйте вместо этого схему erl,пока это нарушение безопасности не будет исправлено.</target>
        </trans-unit>
        <trans-unit id="bc0795bd08428b2fedc177925549e5f08fa86748" translate="yes" xml:space="preserve">
          <source>This element has a total size of 4*8 = 32 bits, and it contains a signed integer in little-endian order.</source>
          <target state="translated">Этот элемент имеет суммарный размер 4*8=32 бита,и содержит знаковое целое число в малом порядке.</target>
        </trans-unit>
        <trans-unit id="60545e850b697ee47719a2ce1a4b108461f703aa" translate="yes" xml:space="preserve">
          <source>This enables references to the fields of the record by name. For example, if &lt;code&gt;P&lt;/code&gt; is a variable whose value is a &lt;code&gt;person&lt;/code&gt; record, the following code access the name and address fields of the records:</source>
          <target state="translated">Это позволяет ссылаться на поля записи по имени. Например, если &lt;code&gt;P&lt;/code&gt; - переменная, значением которой является запись о &lt;code&gt;person&lt;/code&gt; , следующий код обращается к полям имени и адреса записей:</target>
        </trans-unit>
        <trans-unit id="aa641702f4a74845596c27dedfc3c223048bd207" translate="yes" xml:space="preserve">
          <source>This encoding has many similarities to UTF-8, but the basic unit is a 16-bit number. This means that all characters occupy at least two bytes, and some high numbers four bytes. Some programs, libraries, and operating systems claiming to use UTF-16 only allow for characters that can be stored in one 16-bit entity, which is usually sufficient to handle living languages. As the basic unit is more than one byte, byte-order issues occur, which is why UTF-16 exists in both a big-endian and a little-endian variant.</source>
          <target state="translated">Эта кодировка имеет много общего с UTF-8,но основной единицей является 16-битное число.Это означает,что все символы занимают не менее двух байт,а некоторые высокие числа-четыре байта.Некоторые программы,библиотеки и операционные системы,утверждающие,что используют UTF-16,допускают только символы,которые могут храниться в одной 16-битной сущности,чего обычно достаточно для работы с живыми языками.Так как основная сущность больше одного байта,возникают проблемы с порядком байт,поэтому UTF-16 существует как в варианте big-endian,так и в варианте little-endian.</target>
        </trans-unit>
        <trans-unit id="57b04c69f42e5cd6d283dd11cf050111e35a9d54" translate="yes" xml:space="preserve">
          <source>This entry is normally not shown. It signifies that getting the rest of the information about this scheduler failed for some reason.</source>
          <target state="translated">Эта запись обычно не отображается.Это означает,что получение остальной информации об этом планировщике по каким-то причинам не удалось.</target>
        </trans-unit>
        <trans-unit id="5a4d6d82470e813a7acad87293099d4181101f42" translate="yes" xml:space="preserve">
          <source>This entry is shown only if there is a current process. It is similar to &lt;code&gt;&lt;a href=&quot;#proc_data&quot;&gt; &lt;strong&gt;=proc_stack&lt;/strong&gt;&lt;/a&gt;&lt;/code&gt;, except that only the function frames are shown (that is, the stack variables are omitted). Also, only the top and bottom part of the stack are shown. If the stack is small (&amp;lt; 512 slots), the entire stack is shown. Otherwise the entry &lt;strong&gt;skipping ## slots&lt;/strong&gt; is shown, where &lt;code&gt;##&lt;/code&gt; is replaced by the number of slots that has been skipped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ee6d539dd946aea2f2282406d3b99f607f84e26" translate="yes" xml:space="preserve">
          <source>This entry is shown only if there is a current process. It is similar to &lt;code&gt;&lt;a href=&quot;#proc_data&quot;&gt;&lt;strong&gt;=proc_stack&lt;/strong&gt;&lt;/a&gt;&lt;/code&gt;, except that only the function frames are shown (that is, the stack variables are omitted). Also, only the top and bottom part of the stack are shown. If the stack is small (&amp;lt; 512 slots), the entire stack is shown. Otherwise the entry &lt;strong&gt;skipping ## slots&lt;/strong&gt; is shown, where &lt;code&gt;##&lt;/code&gt; is replaced by the number of slots that has been skipped.</source>
          <target state="translated">Эта запись отображается только при наличии текущего процесса. Это похоже на &lt;code&gt;&lt;a href=&quot;#proc_data&quot;&gt;&lt;strong&gt;=proc_stack&lt;/strong&gt;&lt;/a&gt;&lt;/code&gt; , за исключением того, что &lt;strong&gt;отображаются&lt;/strong&gt; только фреймы функций (то есть переменные стека опускаются). Кроме того, отображаются только верхняя и нижняя часть стопки. Если стек небольшой (&amp;lt;512 слотов), отображается весь стек. В противном случае отображается запись, &lt;strong&gt;пропускающая ## слоты&lt;/strong&gt; , где &lt;code&gt;##&lt;/code&gt; заменяется числом пропущенных слотов.</target>
        </trans-unit>
        <trans-unit id="f4c1826f8578bafadcea5382ece74a9e3ca2e0c8" translate="yes" xml:space="preserve">
          <source>This equals:</source>
          <target state="translated">Это равнозначно:</target>
        </trans-unit>
        <trans-unit id="8ee9f6a74af74dded0ab21396013fd65cb0cdb5f" translate="yes" xml:space="preserve">
          <source>This error is very similar to &lt;code&gt;match_limit&lt;/code&gt;, but occurs when the internal match function of PCRE is &quot;recursively&quot; called more times than the &lt;code&gt;match_limit_recursion&lt;/code&gt; limit, which defaults to 10,000,000 as well. Notice that as long as the &lt;code&gt;match_limit&lt;/code&gt; and &lt;code&gt;match_limit_default&lt;/code&gt; values are kept at the default values, the &lt;code&gt;match_limit_recursion&lt;/code&gt; error cannot occur, as the &lt;code&gt;match_limit&lt;/code&gt; error occurs before that (each recursive call is also a call, but not conversely). Both limits can however be changed, either by setting limits directly in the regular expression string (see section &lt;code&gt;&lt;a href=&quot;#regexp_syntax_details&quot;&gt;PCRE Regular Eexpression Details&lt;/a&gt;&lt;/code&gt;) or by specifying options to &lt;code&gt;run/3&lt;/code&gt;.</source>
          <target state="translated">Эта ошибка очень похожа на &lt;code&gt;match_limit&lt;/code&gt; , но возникает, когда внутренняя функция соответствия PCRE &amp;laquo;рекурсивно&amp;raquo; вызывается больше раз, чем предел &lt;code&gt;match_limit_recursion&lt;/code&gt; , который также по умолчанию равен 10 000 000. Обратите внимание, что до тех &lt;code&gt;match_limit&lt;/code&gt; &lt;code&gt;match_limit_default&lt;/code&gt; значения match_limit и match_limit_default сохраняются в значениях по умолчанию, ошибка &lt;code&gt;match_limit_recursion&lt;/code&gt; не может возникнуть, поскольку ошибка &lt;code&gt;match_limit&lt;/code&gt; возникает до этого (каждый рекурсивный вызов также является вызовом, но не наоборот). Однако оба предела можно изменить, либо установив пределы непосредственно в строке регулярного выражения (см. Раздел &lt;code&gt;&lt;a href=&quot;#regexp_syntax_details&quot;&gt;PCRE Regular Eexpression Details&lt;/a&gt;&lt;/code&gt; ), либо указав параметры для &lt;code&gt;run/3&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="b2c6321b6b0826055e2105517a81fb4bbe80e26b" translate="yes" xml:space="preserve">
          <source>This event gives initial test run information that can be interpreted as: &quot;This test run will execute &lt;code&gt;Tests&lt;/code&gt; separate tests, in total containing &lt;code&gt;Cases&lt;/code&gt; number of test cases, in &lt;code&gt;Suites&lt;/code&gt; number of suites&quot;. However, if a test case group with a repeat property exists in any test, the total number of test cases cannot be calculated (unknown).</source>
          <target state="translated">Это событие дает исходную информацию тестового запуска , который может быть интерпретирован как: &amp;laquo;Этот пробный запуск будет выполнять &lt;code&gt;Tests&lt;/code&gt; отдельные тесты, в общем , содержащие &lt;code&gt;Cases&lt;/code&gt; количество тестовых случаев, в &lt;code&gt;Suites&lt;/code&gt; Число мест&amp;raquo;. Однако, если группа тестовых примеров со свойством повторения существует в любом тесте, общее количество тестовых примеров не может быть вычислено (неизвестно).</target>
        </trans-unit>
        <trans-unit id="157a7ac786729b7a02e45935d66765ea641c0a63" translate="yes" xml:space="preserve">
          <source>This event indicates that &lt;code&gt;Common Test&lt;/code&gt; has finished initial preparations and begins executing test cases.</source>
          <target state="translated">Это событие означает, что &lt;code&gt;Common Test&lt;/code&gt; завершил начальную подготовку и начал выполнение тестовых примеров.</target>
        </trans-unit>
        <trans-unit id="a311dceedd521d1962d136632b3e667b19bb56be" translate="yes" xml:space="preserve">
          <source>This event indicates that the last test case has been executed and &lt;code&gt;Common Test&lt;/code&gt; is shutting down.</source>
          <target state="translated">Это событие означает, что последний тестовый пример был выполнен и &lt;code&gt;Common Test&lt;/code&gt; завершает работу.</target>
        </trans-unit>
        <trans-unit id="e53e8156bb201879d980af4d7b34c6aceaecd401" translate="yes" xml:space="preserve">
          <source>This event indicates that the logging process of &lt;code&gt;Common Test&lt;/code&gt; has started successfully and is ready to receive I/O messages.</source>
          <target state="translated">Это событие означает, что процесс ведения журнала &lt;code&gt;Common Test&lt;/code&gt; успешно запущен и готов к приему сообщений ввода-вывода.</target>
        </trans-unit>
        <trans-unit id="76a023ae70d60675cb788ca95f5784d5e17403bb" translate="yes" xml:space="preserve">
          <source>This event indicates that the logging process of &lt;code&gt;Common Test&lt;/code&gt; was shut down at the end of the test run.</source>
          <target state="translated">Это событие указывает на то, что процесс ведения журнала &lt;code&gt;Common Test&lt;/code&gt; был остановлен в конце выполнения теста.</target>
        </trans-unit>
        <trans-unit id="1defde33c0ddbc9bf09303976e2df4c21eb56168" translate="yes" xml:space="preserve">
          <source>This event informs about the end of a test case or a configuration function (see event &lt;code&gt;tc_start&lt;/code&gt; for details on element &lt;code&gt;FuncOrGroup&lt;/code&gt;). With this event comes the final result of the function in question. It is possible to determine on the top level of &lt;code&gt;Result&lt;/code&gt; if the function was successful, skipped (by the user), or if it failed.</source>
          <target state="translated">Это событие сообщает об окончании тестового примера или функции конфигурации (см события &lt;code&gt;tc_start&lt;/code&gt; для деталей на элемент &lt;code&gt;FuncOrGroup&lt;/code&gt; ). С этим событием приходит окончательный результат рассматриваемой функции. На верхнем уровне &lt;code&gt;Result&lt;/code&gt; можно определить, была ли функция успешной, пропущенной (пользователем) или неудачной.</target>
        </trans-unit>
        <trans-unit id="196853db3112d60fc49c52cb43e5304105859b69" translate="yes" xml:space="preserve">
          <source>This event informs about the start of a test case, or a group configuration function. The event is sent also for &lt;code&gt;init_per_suite&lt;/code&gt; and &lt;code&gt;end_per_suite&lt;/code&gt;, but not for &lt;code&gt;init_per_testcase&lt;/code&gt; and &lt;code&gt;end_per_testcase&lt;/code&gt;. If a group configuration function starts, the group name and execution properties are also specified.</source>
          <target state="translated">Это событие сообщает о запуске тестового примера или функции конфигурации группы. Событие отправляется также для &lt;code&gt;init_per_suite&lt;/code&gt; и &lt;code&gt;end_per_suite&lt;/code&gt; , но не для &lt;code&gt;init_per_testcase&lt;/code&gt; и &lt;code&gt;end_per_testcase&lt;/code&gt; . Если запускается функция конфигурации группы, также указываются имя группы и свойства выполнения.</target>
        </trans-unit>
        <trans-unit id="55e3d00fdb284c9c490ae4f7d70ddb7a214409ea" translate="yes" xml:space="preserve">
          <source>This event is generated by &lt;code&gt;alarm_handler:clear_alarm(AlarmId)&lt;/code&gt;.</source>
          <target state="translated">Это событие генерируется &lt;code&gt;alarm_handler:clear_alarm(AlarmId)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3c14d9a9fed395d121d6715f83a9e812993ef517" translate="yes" xml:space="preserve">
          <source>This event is generated by &lt;code&gt;alarm_handler:set_alarm({AlarmId, AlarmDecsr})&lt;/code&gt;.</source>
          <target state="translated">Это событие генерируется &lt;code&gt;alarm_handler:set_alarm({AlarmId, AlarmDecsr})&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="87c6d6cfcfdec46a1017f209d71402b88e99f222" translate="yes" xml:space="preserve">
          <source>This event is sent as a result of calling &lt;code&gt;&lt;a href=&quot;ssh_connection#close-2&quot;&gt;ssh_connection:close/2&lt;/a&gt;&lt;/code&gt;. Both the handling of this event and sending it are taken care of by the &lt;code&gt;&lt;a href=&quot;ssh_client_channel&quot;&gt;ssh_client_channel&lt;/a&gt;&lt;/code&gt; behavior.</source>
          <target state="translated">Это событие отправляется в результате вызова &lt;code&gt;&lt;a href=&quot;ssh_connection#close-2&quot;&gt;ssh_connection:close/2&lt;/a&gt;&lt;/code&gt; . Об обработке этого события и его отправке &lt;code&gt;&lt;a href=&quot;ssh_client_channel&quot;&gt;ssh_client_channel&lt;/a&gt;&lt;/code&gt; поведение ssh_client_channel .</target>
        </trans-unit>
        <trans-unit id="3bce9afff012f4ef208193d1a3f362891fa380a1" translate="yes" xml:space="preserve">
          <source>This event is sent at the start of each test case (and configuration function except &lt;code&gt;init/end_per_testcase&lt;/code&gt;) and carries information about the full name (that is, the file name including the absolute directory path) of the current test case log file.</source>
          <target state="translated">Это событие отправляется в начале каждого тестового примера (и функции конфигурации, кроме &lt;code&gt;init/end_per_testcase&lt;/code&gt; ) и содержит информацию о полном имени (то есть имени файла, включая абсолютный путь к каталогу) текущего файла журнала тестового примера.</target>
        </trans-unit>
        <trans-unit id="e4a38f01911d280761b98159e93b62180b939625" translate="yes" xml:space="preserve">
          <source>This event is sent for every test case or configuration function that &lt;code&gt;Common Test&lt;/code&gt; has skipped automatically because of either a failed &lt;code&gt;init_per_suite&lt;/code&gt; or &lt;code&gt;init_per_group&lt;/code&gt;, a failed &lt;code&gt;require&lt;/code&gt; in &lt;code&gt;suite/0&lt;/code&gt;, or a failed test case in a sequence. Notice that this event is never received as a result of a test case getting skipped because of &lt;code&gt;init_per_testcase&lt;/code&gt; failing, as that information is carried with event &lt;code&gt;tc_done&lt;/code&gt;. If a failed test case belongs to a test case group, the second data element is a tuple &lt;code&gt;{FuncName,GroupName}&lt;/code&gt;, otherwise only the function name.</source>
          <target state="translated">Это событие отправляется для каждого тестового примера или функции конфигурации, которые &lt;code&gt;Common Test&lt;/code&gt; пропустил автоматически из-за &lt;code&gt;init_per_suite&lt;/code&gt; или &lt;code&gt;init_per_group&lt;/code&gt; , сбоя &lt;code&gt;require&lt;/code&gt; в &lt;code&gt;suite/0&lt;/code&gt; или неудачного тестового примера в последовательности. Обратите внимание, что это событие никогда не получено в результате пропуска тестового примера из-за &lt;code&gt;init_per_testcase&lt;/code&gt; , поскольку эта информация передается с событием &lt;code&gt;tc_done&lt;/code&gt; . Если неудачный тестовый пример принадлежит к группе тестовых примеров, второй элемент данных - это кортеж &lt;code&gt;{FuncName,GroupName}&lt;/code&gt; , в противном случае - только имя функции.</target>
        </trans-unit>
        <trans-unit id="85637c33d8358bfa807af40ed5b12cab4e94ad14" translate="yes" xml:space="preserve">
          <source>This event occurs when a transaction that caused a modification to the database is completed. It is useful for determining when a set of table events (see the next section), caused by a given activity, have been sent. Once this event is received, it is guaranteed that no further table events with the same &lt;code&gt;ActivityID&lt;/code&gt; will be received. Notice that this event can still be received even if no table events with a corresponding &lt;code&gt;ActivityID&lt;/code&gt; were received, depending on the tables to which the receiving process is subscribed.</source>
          <target state="translated">Это событие происходит, когда транзакция, вызвавшая изменение базы данных, завершена. Это полезно для определения того, когда был отправлен набор событий таблицы (см. Следующий раздел), вызванных заданным действием. После получения этого события гарантируется, что никакие другие события таблицы с тем же &lt;code&gt;ActivityID&lt;/code&gt; не будут получены. Обратите внимание, что это событие все еще может быть получено, даже если не было получено никаких событий таблицы с соответствующим &lt;code&gt;ActivityID&lt;/code&gt; , в зависимости от таблиц, на которые подписан принимающий процесс.</target>
        </trans-unit>
        <trans-unit id="f45e922ec57563cdea35247f1f7ed0e1f7d09af7" translate="yes" xml:space="preserve">
          <source>This event specifies that a test case was skipped by the user. It is only received if the skip is declared in a test specification. Otherwise, user skip information is received as a &lt;code&gt;{skipped,SkipReason}&lt;/code&gt; result in event &lt;code&gt;tc_done&lt;/code&gt; for the test case. If a skipped test case belongs to a test case group, the second data element is a tuple &lt;code&gt;{FuncName,GroupName}&lt;/code&gt;, otherwise only the function name.</source>
          <target state="translated">Это событие указывает, что тестовый пример был пропущен пользователем. Он принимается только в том случае, если пропуск объявлен в спецификации теста. В противном случае информация о пропуске пользователя будет получена как результат &lt;code&gt;{skipped,SkipReason}&lt;/code&gt; в событии &lt;code&gt;tc_done&lt;/code&gt; для тестового примера. Если пропущенный тестовый пример принадлежит группе тестовых примеров, второй элемент данных - это кортеж &lt;code&gt;{FuncName,GroupName}&lt;/code&gt; , в противном случае - только имя функции.</target>
        </trans-unit>
        <trans-unit id="33a5b9cb740e8f063e9a381622f742f49651eec3" translate="yes" xml:space="preserve">
          <source>This example and all other examples in the document assumes a 64-bit archictecture, and furthermore that pointers to C code fit in 32 bits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a24b66f55b1608bf70f4eb21d0c378bcfcc90e0" translate="yes" xml:space="preserve">
          <source>This example back up the contents of the registry to the specified &lt;code&gt;Mnesia&lt;/code&gt; table &lt;code&gt;&quot;mtab&quot;&lt;/code&gt;. Once a registry has been backed up to &lt;code&gt;Mnesia&lt;/code&gt; like this, more backups only affect objects that have been modified since the most recent backup, that is, objects that have been created, changed, or deleted. The backup operation is done as a single atomic transaction, so that either the entire backup is performed or none of it.</source>
          <target state="translated">В этом примере выполняется резервное копирование содержимого реестра в указанную таблицу &lt;code&gt;Mnesia&lt;/code&gt; &lt;code&gt;&quot;mtab&quot;&lt;/code&gt; . После того, как реестр был скопирован в &lt;code&gt;Mnesia&lt;/code&gt; таким образом, дополнительные резервные копии влияют только на объекты, которые были изменены с момента последнего резервного копирования, то есть на объекты, которые были созданы, изменены или удалены. Операция резервного копирования выполняется как отдельная атомарная транзакция, поэтому выполняется либо все резервное копирование, либо не выполняется ничего.</target>
        </trans-unit>
        <trans-unit id="8e5008e4f2f2212bcc7d9051d31593661ec6ce4d" translate="yes" xml:space="preserve">
          <source>This example concerns the body of the fun. Assume that all employee numbers beginning with zero (&lt;code&gt;0&lt;/code&gt;) must be changed to begin with one (&lt;code&gt;1&lt;/code&gt;) instead, and that we want to create the list &lt;code&gt;[{&amp;lt;Old empno&amp;gt;,&amp;lt;New empno&amp;gt;}]&lt;/code&gt;:</source>
          <target state="translated">Этот пример касается основной части игры. Предположим, что все номера сотрудников, начинающиеся с нуля ( &lt;code&gt;0&lt;/code&gt; ), должны быть изменены, чтобы они начинались с единицы ( &lt;code&gt;1&lt;/code&gt; ), и что мы хотим создать список &lt;code&gt;[{&amp;lt;Old empno&amp;gt;,&amp;lt;New empno&amp;gt;}]&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b9cd78123d895f5c9e7c353280ff2f48b8ea86e8" translate="yes" xml:space="preserve">
          <source>This example concerns the use of raw options. Consider a Linux system where you want to set option &lt;code&gt;TCP_LINGER2&lt;/code&gt; on protocol level &lt;code&gt;IPPROTO_TCP&lt;/code&gt; in the stack. You know that on this particular system it defaults to 60 (seconds), but you want to lower it to 30 for a particular socket. Option &lt;code&gt;TCP_LINGER2&lt;/code&gt; is not explicitly supported by &lt;code&gt;inet&lt;/code&gt;, but you know that the protocol level translates to number 6, the option number to number 8, and the value is to be specified as a 32-bit integer. You can use this code line to set the option for the socket named &lt;code&gt;Sock&lt;/code&gt;:</source>
          <target state="translated">Этот пример касается использования необработанных опций. Рассмотрим систему Linux, в которой вы хотите установить опцию &lt;code&gt;TCP_LINGER2&lt;/code&gt; на уровне протокола &lt;code&gt;IPPROTO_TCP&lt;/code&gt; в стеке. Вы знаете, что в этой конкретной системе оно по умолчанию составляет 60 (секунд), но вы хотите снизить его до 30 для конкретного сокета. Параметр &lt;code&gt;TCP_LINGER2&lt;/code&gt; явно не поддерживается &lt;code&gt;inet&lt;/code&gt; , но вы знаете, что уровень протокола преобразуется в число 6, номер параметра в число 8, а значение должно быть указано как 32-битное целое число. Вы можете использовать эту строку кода, чтобы установить параметр для сокета с именем &lt;code&gt;Sock&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="530266a6d25402966cea0cb8b232a85a4ff316d8" translate="yes" xml:space="preserve">
          <source>This example gives a rough idea of how the new primitives can be used and what kind of output it produces.</source>
          <target state="translated">Этот пример дает примерное представление о том,как можно использовать новые примитивы и какой вывод они производят.</target>
        </trans-unit>
        <trans-unit id="0ddfeb93d9d64b8470aa81333fa112e188816f26" translate="yes" xml:space="preserve">
          <source>This example has two functions:</source>
          <target state="translated">Этот пример имеет две функции:</target>
        </trans-unit>
        <trans-unit id="2408082cfd117d50361179146f7eb693e76f1486" translate="yes" xml:space="preserve">
          <source>This example illustrates the most used calls in match specifications for &lt;code&gt;dbg&lt;/code&gt;. The other, more esoteric, calls are listed and explained in &lt;code&gt;Match specifications in Erlang&lt;/code&gt; in ERTS User's Guide, as they are beyond the scope of this description.</source>
          <target state="translated">В этом примере показаны наиболее часто используемые вызовы в спецификациях соответствия для &lt;code&gt;dbg&lt;/code&gt; . Другие, более эзотерические вызовы перечислены и объяснены в &lt;code&gt;Match specifications in Erlang&lt;/code&gt; в Руководстве пользователя ERTS, поскольку они выходят за рамки этого описания.</target>
        </trans-unit>
        <trans-unit id="033dde8b7dbcadc4f83a911a11c711666e02a4d2" translate="yes" xml:space="preserve">
          <source>This example is, as can be seen, run in an environment where the terminal supports Unicode input and output.</source>
          <target state="translated">Этот пример,как видно,выполняется в среде,где терминал поддерживает вход и выход Юникода.</target>
        </trans-unit>
        <trans-unit id="140c4136b4fe3317fa34f309b20873f708ff5543" translate="yes" xml:space="preserve">
          <source>This example only shows the message passing logic - no attempt has been made to provide a nice graphical user interface, although this can also be done in Erlang.</source>
          <target state="translated">В этом примере показана только логика передачи сообщений-не было предпринято никаких попыток предоставить красивый графический интерфейс пользователя,хотя это можно сделать и на Erlang.</target>
        </trans-unit>
        <trans-unit id="d78541768b15176d63561103133f9d3936557387" translate="yes" xml:space="preserve">
          <source>This example requires no special knowledge of match specifications to understand. The head of the fun matches what you want to filter out and the body returns what you want returned. As long as the fun can be kept within the limits of the match specifications, there is no need to transfer all table data to the process for filtering as in the &lt;code&gt;ets:foldr/3&lt;/code&gt; example. It is easier to read than the &lt;code&gt;ets:foldr/3&lt;/code&gt; example, as the select call in itself discards anything that does not match, while the fun of the &lt;code&gt;ets:foldr/3&lt;/code&gt; call needs to handle both the elements matching and the ones not matching.</source>
          <target state="translated">Для понимания этого примера не требуется специальных знаний о спецификациях совпадений. Заголовок веселья соответствует тому, что вы хотите отфильтровать, а тело возвращает то, что вы хотите вернуть. До тех пор, пока веселье может быть в рамках спецификаций соответствия, нет необходимости передавать все данные таблицы в процесс для фильтрации, как в примере &lt;code&gt;ets:foldr/3&lt;/code&gt; . Его легче читать, чем пример &lt;code&gt;ets:foldr/3&lt;/code&gt; , поскольку вызов select сам по себе отбрасывает все, что не соответствует, в то время как для удовольствия от вызова &lt;code&gt;ets:foldr/3&lt;/code&gt; необходимо обрабатывать как совпадающие элементы, так и те, которые не соответствуют ,</target>
        </trans-unit>
        <trans-unit id="bf3189bf5037bf6c221e85b916b6c16513c6b111" translate="yes" xml:space="preserve">
          <source>This example showed that we could augment the set of algorithms with a config-file without the need to change the actual call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="742fc993326979930f137bea9115c77d5cbe9464" translate="yes" xml:space="preserve">
          <source>This example showed the use of &lt;code&gt;trunc&lt;/code&gt;. It is easier to use the Erlang operator &lt;code&gt;rem&lt;/code&gt; that gives the remainder after division, for example:</source>
          <target state="translated">В этом примере показано использование &lt;code&gt;trunc&lt;/code&gt; . Проще использовать оператор Erlang &lt;code&gt;rem&lt;/code&gt; , который дает остаток после деления, например:</target>
        </trans-unit>
        <trans-unit id="1657ddee206598159941c1bc09bfc039bda09595" translate="yes" xml:space="preserve">
          <source>This example shows first the encryption of two blocks and then decryptions of the cipher text, but divided into three blocks just to show that it is possible to divide the plain text and cipher text differently for some ciphers:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="576a654b801abd888323686420eb2be87d1e88d9" translate="yes" xml:space="preserve">
          <source>This example shows how to construct a key reference that is used in a sign operation. The actual key is stored in the engine that is loaded at prompt 1.</source>
          <target state="translated">В этом примере показано,как построить ссылку на ключ,который используется в операции со знаком.Фактический ключ хранится в двигателе,который загружается при запросе 1.</target>
        </trans-unit>
        <trans-unit id="8fc9c6e1c892b5ff940b330284e799595fb70aed" translate="yes" xml:space="preserve">
          <source>This example shows how to create a database called &lt;code&gt;Company&lt;/code&gt; and the relationships shown in the following diagram:</source>
          <target state="translated">В этом примере показано, как создать базу данных под названием &lt;code&gt;Company&lt;/code&gt; и отношения, показанные на следующей диаграмме:</target>
        </trans-unit>
        <trans-unit id="4ce8c4280e865227838d76a758d3b12d799a6916" translate="yes" xml:space="preserve">
          <source>This example shows that a function is generated by the compiler that returns a valid Erlang representation of the value, although the value is of a complex type.</source>
          <target state="translated">Данный пример показывает,что компилятор генерирует функцию,которая возвращает корректное представление значения Erlang,хотя значение имеет сложный тип.</target>
        </trans-unit>
        <trans-unit id="50ace829c34f91c2367e23e83ddbe5d2a03a399f" translate="yes" xml:space="preserve">
          <source>This example specifies the same tests as the original example. But now if started with a call to &lt;code&gt;ct_master:run(TestSpecName)&lt;/code&gt;, test &lt;code&gt;t1&lt;/code&gt; is executed on node &lt;code&gt;ct_node@host_x&lt;/code&gt; (&lt;code&gt;node1&lt;/code&gt;), test &lt;code&gt;t2&lt;/code&gt; on &lt;code&gt;ct_node@host_y&lt;/code&gt; (&lt;code&gt;node2&lt;/code&gt;) and test &lt;code&gt;t3&lt;/code&gt; on both &lt;code&gt;node1&lt;/code&gt; and &lt;code&gt;node2&lt;/code&gt;. Configuration file &lt;code&gt;t1&lt;/code&gt; is only read on &lt;code&gt;node1&lt;/code&gt; and configuration file &lt;code&gt;t2&lt;/code&gt; only on &lt;code&gt;node2&lt;/code&gt;, while the configuration file &lt;code&gt;t3&lt;/code&gt; is read on both &lt;code&gt;node1&lt;/code&gt; and &lt;code&gt;node2&lt;/code&gt;. Both test nodes write log files to the same directory. (However, the &lt;code&gt;Common Test&lt;/code&gt; Master node uses a different log directory than the test nodes.)</source>
          <target state="translated">В этом примере указаны те же тесты, что и в исходном примере. Но теперь, если он запущен с вызова &lt;code&gt;ct_master:run(TestSpecName)&lt;/code&gt; , тест &lt;code&gt;t1&lt;/code&gt; выполняется на узле &lt;code&gt;ct_node@host_x&lt;/code&gt; ( &lt;code&gt;node1&lt;/code&gt; ), тест &lt;code&gt;t2&lt;/code&gt; на &lt;code&gt;ct_node@host_y&lt;/code&gt; ( &lt;code&gt;node2&lt;/code&gt; ) и тест &lt;code&gt;t3&lt;/code&gt; на обоих &lt;code&gt;node1&lt;/code&gt; и &lt;code&gt;node2&lt;/code&gt; . Файл конфигурации &lt;code&gt;t1&lt;/code&gt; читается только на &lt;code&gt;node1&lt;/code&gt; а файл конфигурации &lt;code&gt;t2&lt;/code&gt; - только на &lt;code&gt;node2&lt;/code&gt; , тогда как файл конфигурации &lt;code&gt;t3&lt;/code&gt; читается как на &lt;code&gt;node1&lt;/code&gt; 1, так и на &lt;code&gt;node2&lt;/code&gt; , Оба тестовых узла записывают файлы журнала в один и тот же каталог. (Однако узел &lt;code&gt;Common Test&lt;/code&gt; Master использует другой каталог журналов, чем тестовые узлы.)</target>
        </trans-unit>
        <trans-unit id="f919e3be6e1b9a58c077da63d3fa4b652b1b834d" translate="yes" xml:space="preserve">
          <source>This example uses &lt;code&gt;gen_statem:call/2&lt;/code&gt;, which waits for a reply from the server. The reply is sent with a &lt;code&gt;{reply,From,Reply}&lt;/code&gt; tuple in an action list in the &lt;code&gt;{keep_state, ...}&lt;/code&gt; tuple that retains the current state. This return form is convenient when you want to stay in the current state but do not know or care about what it is.</source>
          <target state="translated">В этом примере используется &lt;code&gt;gen_statem:call/2&lt;/code&gt; , который ожидает ответа от сервера. Ответ отправляется с кортежем &lt;code&gt;{reply,From,Reply}&lt;/code&gt; в списке действий в &lt;code&gt;{keep_state, ...}&lt;/code&gt; который сохраняет текущее состояние. Эта форма возврата удобна, когда вы хотите остаться в текущем состоянии, но не знаете и не заботитесь о том, что это такое.</target>
        </trans-unit>
        <trans-unit id="7e5afbec3d662e48a79fce4ee47d58154c988214" translate="yes" xml:space="preserve">
          <source>This example warrants some explanation:</source>
          <target state="translated">Этот пример заслуживает объяснений:</target>
        </trans-unit>
        <trans-unit id="b3dcc44bb471a63d75b0052d4b54fe647a04cb07" translate="yes" xml:space="preserve">
          <source>This example with the &lt;code&gt;file&lt;/code&gt; module operations is not necessary to use directly, as that is what function &lt;code&gt;&lt;a href=&quot;#open-2&quot;&gt;open/2&lt;/a&gt;&lt;/code&gt; in principle does.</source>
          <target state="translated">Этот пример с операциями &lt;code&gt;file&lt;/code&gt; модуля не обязательно использовать напрямую, так как это в принципе то, что делает функция &lt;code&gt;&lt;a href=&quot;#open-2&quot;&gt;open/2&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9e9ac426961d89606271dd5da2f24c9429dfc0a7" translate="yes" xml:space="preserve">
          <source>This expression matches if the expression &lt;code&gt;Expr&lt;/code&gt; is of type map, otherwise it fails with an exception &lt;code&gt;badmatch&lt;/code&gt;.</source>
          <target state="translated">Это выражение соответствует, если выражение &lt;code&gt;Expr&lt;/code&gt; относится к типу map, в противном случае оно не выполняется из-за &lt;code&gt;badmatch&lt;/code&gt; соответствия исключения .</target>
        </trans-unit>
        <trans-unit id="6184c20ff4fb14fe7267625d422557cd4d0fc7b2" translate="yes" xml:space="preserve">
          <source>This expression must be rewritten into the following, to be accepted by the compiler:</source>
          <target state="translated">Это выражение должно быть переписано,чтобы компилятор принял его:</target>
        </trans-unit>
        <trans-unit id="87be2665458e0e8a04daa6def7ad816271a337f0" translate="yes" xml:space="preserve">
          <source>This feature also requires &lt;code&gt;&lt;a href=&quot;#M_t&quot;&gt;multiple thread specific instances&lt;/a&gt;&lt;/code&gt; to be enabled. When enabling this feature, multiple thread-specific instances are enabled if not already enabled, and the &lt;code&gt;aoffcbf&lt;/code&gt; strategy is enabled if the current strategy does not support abandoned carriers. This feature can be enabled on all allocators based on the &lt;code&gt;alloc_util&lt;/code&gt; framework, except &lt;code&gt;temp_alloc&lt;/code&gt; (which would be pointless).</source>
          <target state="translated">Эта функция также требует включения &lt;code&gt;&lt;a href=&quot;#M_t&quot;&gt;multiple thread specific instances&lt;/a&gt;&lt;/code&gt; . При включении этой функции несколько экземпляров, зависящих от потока, включаются, если они еще не включены, и стратегия &lt;code&gt;aoffcbf&lt;/code&gt; включается, если текущая стратегия не поддерживает брошенных носителей. Эта функция может быть включена для всех распределителей на основе платформы &lt;code&gt;alloc_util&lt;/code&gt; , кроме &lt;code&gt;temp_alloc&lt;/code&gt; (что было бы бессмысленно).</target>
        </trans-unit>
        <trans-unit id="bab1aaa22d7c52e3e995a41f937d2e85596d7686" translate="yes" xml:space="preserve">
          <source>This feature has been introduced as a temporary workaround for long-executing native code, and native code that does not bump reductions properly in OTP. When these bugs have be fixed, this flag will be removed.</source>
          <target state="translated">Эта функция была введена как временный обходной путь для долгого исполняемого нативного кода,и нативного кода,который не обеспечивает корректное уменьшение бампа в OTP.Когда эти ошибки будут исправлены,этот флаг будет удален.</target>
        </trans-unit>
        <trans-unit id="f75f84efbe70a72e01ed3ffc4edbe4eb52121806" translate="yes" xml:space="preserve">
          <source>This feature is similar to a lookbehind assertion (described below). However, in this case, the part of the subject before the real match does not have to be of fixed length, as lookbehind assertions do. The use of \K does not interfere with the setting of captured substrings. For example, when the following pattern matches &quot;foobar&quot;, the first substring is still set to &quot;foo&quot;:</source>
          <target state="translated">Эта особенность похожа на утверждение lookbehind (описанное ниже).Однако,в этом случае,часть предмета перед реальным совпадением не обязательно должна иметь фиксированную длину,как это делают lookbehind утверждения.Использование \K не мешает установке захваченных подстрок.Например,когда следующий шаблон совпадает с &quot;foobar&quot;,первая подстрока все равно устанавливается в &quot;foo&quot;:</target>
        </trans-unit>
        <trans-unit id="495e6e419f3ba6bc2ae861673f26fe3c4b80e6f5" translate="yes" xml:space="preserve">
          <source>This feature is temporary and will be removed in a future release</source>
          <target state="translated">Эта функция является временной и будет удалена в одном из будущих релизов.</target>
        </trans-unit>
        <trans-unit id="bd4f30e27a6dd0784703ad9bdea45ca916a2edb1" translate="yes" xml:space="preserve">
          <source>This feature is temporary and will be removed in future releases.</source>
          <target state="translated">Эта функция является временной и будет удалена в будущих релизах.</target>
        </trans-unit>
        <trans-unit id="77b5f46e3e133913367475d2045dfdc254bfa20f" translate="yes" xml:space="preserve">
          <source>This feature must be explicitly enabled with a compiler option or a &lt;code&gt;-compile()&lt;/code&gt; attribute in the source module.</source>
          <target state="translated">Эта функция должна быть явно включена с помощью параметра компилятора или &lt;code&gt;-compile()&lt;/code&gt; в исходном модуле.</target>
        </trans-unit>
        <trans-unit id="aa96a44c28979dae84ca1a2a0e7d8160bebc38ef" translate="yes" xml:space="preserve">
          <source>This feature was added in Erlang 5.0/OTP R7.</source>
          <target state="translated">Эта функция была добавлена в Erlang 5.0/OTP R7.</target>
        </trans-unit>
        <trans-unit id="1fc9bd5588c9ab451cbffd844cd0ccc06f39f29c" translate="yes" xml:space="preserve">
          <source>This field is either to be equal to &lt;code&gt;ERL_DRV_EXTENDED_MARKER&lt;/code&gt; or &lt;code&gt;0&lt;/code&gt;. An old driver (not aware of the extended driver interface) is to set this field to &lt;code&gt;0&lt;/code&gt;. If this field is &lt;code&gt;0&lt;/code&gt;, all the following fields &lt;strong&gt;must&lt;/strong&gt; also be &lt;code&gt;0&lt;/code&gt;, or &lt;code&gt;NULL&lt;/code&gt; if it is a pointer field.</source>
          <target state="translated">Это поле должно быть равно &lt;code&gt;ERL_DRV_EXTENDED_MARKER&lt;/code&gt; или &lt;code&gt;0&lt;/code&gt; . Старый драйвер (не знающий о расширенном интерфейсе драйвера) должен установить это поле в &lt;code&gt;0&lt;/code&gt; . Если это поле равно &lt;code&gt;0&lt;/code&gt; , все следующие поля также &lt;strong&gt;должны&lt;/strong&gt; быть &lt;code&gt;0&lt;/code&gt; или &lt;code&gt;NULL&lt;/code&gt; , если это поле указателя.</target>
        </trans-unit>
        <trans-unit id="0406d7a19c673109ce77b1bb24bda04bd2987652" translate="yes" xml:space="preserve">
          <source>This field is reserved for the emulator's internal use. The emulator modifies this field, so it is important that the &lt;code&gt;driver_entry&lt;/code&gt; is not declared &lt;code&gt;const&lt;/code&gt;.</source>
          <target state="translated">Это поле зарезервировано для внутреннего использования эмулятора. Эмулятор изменяет это поле, поэтому важно, чтобы &lt;code&gt;driver_entry&lt;/code&gt; не был объявлен как &lt;code&gt;const&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="881f24225a8501e9d8e685397754715f57019f9b" translate="yes" xml:space="preserve">
          <source>This field is reserved for the emulator's internal use. The emulator will modify this field, so it is important that the &lt;code&gt;driver_entry&lt;/code&gt; is not declared &lt;code&gt;const&lt;/code&gt;.</source>
          <target state="translated">Это поле зарезервировано для внутреннего использования эмулятора. Эмулятор изменит это поле, поэтому важно, чтобы &lt;code&gt;driver_entry&lt;/code&gt; не был объявлен как &lt;code&gt;const&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d71232de0ecbfffa5c29cf32c925bafa8bc48c5f" translate="yes" xml:space="preserve">
          <source>This field is to equal &lt;code&gt;ERL_DRV_EXTENDED_MAJOR_VERSION&lt;/code&gt; if field &lt;code&gt;extended_marker&lt;/code&gt; equals &lt;code&gt;ERL_DRV_EXTENDED_MARKER&lt;/code&gt;.</source>
          <target state="translated">Это поле должно быть равно &lt;code&gt;ERL_DRV_EXTENDED_MAJOR_VERSION&lt;/code&gt; , если поле &lt;code&gt;extended_marker&lt;/code&gt; равно &lt;code&gt;ERL_DRV_EXTENDED_MARKER&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ad9c786ae5049c8d53b5e5f11b7a559ebf7746cc" translate="yes" xml:space="preserve">
          <source>This field is to equal &lt;code&gt;ERL_DRV_EXTENDED_MINOR_VERSION&lt;/code&gt; if field &lt;code&gt;extended_marker&lt;/code&gt; equals &lt;code&gt;ERL_DRV_EXTENDED_MARKER&lt;/code&gt;.</source>
          <target state="translated">Это поле должно быть равно &lt;code&gt;ERL_DRV_EXTENDED_MINOR_VERSION&lt;/code&gt; , если поле &lt;code&gt;extended_marker&lt;/code&gt; равно &lt;code&gt;ERL_DRV_EXTENDED_MARKER&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8e98f5c415766c2c77bb045a0e8a36481a3244e3" translate="yes" xml:space="preserve">
          <source>This field is used to pass driver capability and other information to the runtime system. If field &lt;code&gt;extended_marker&lt;/code&gt; equals &lt;code&gt;ERL_DRV_EXTENDED_MARKER&lt;/code&gt;, it is to contain &lt;code&gt;0&lt;/code&gt; or driver flags (&lt;code&gt;ERL_DRV_FLAG_*&lt;/code&gt;) OR'ed bitwise. The following driver flags exist:</source>
          <target state="translated">Это поле используется для передачи возможностей драйвера и другой информации системе времени выполнения. Если поле &lt;code&gt;extended_marker&lt;/code&gt; равно &lt;code&gt;ERL_DRV_EXTENDED_MARKER&lt;/code&gt; , оно должно содержать &lt;code&gt;0&lt;/code&gt; или флаги драйвера ( &lt;code&gt;ERL_DRV_FLAG_*&lt;/code&gt; ), объединенные побитовым ИЛИ. Существуют следующие флаги драйверов:</target>
        </trans-unit>
        <trans-unit id="53e33ba3e6e3853e3483bf977da426923d2e9210" translate="yes" xml:space="preserve">
          <source>This file can be &lt;code&gt;exported&lt;/code&gt; to a file structure by calling the &lt;code&gt;&lt;a href=&quot;megaco_codec_transform#export_messages&quot;&gt;export_messages&lt;/a&gt;&lt;/code&gt; function. This can be usefull if a measurement shall be done with an external tool. Exporting the messages creates a directory tree with the following structure:</source>
          <target state="translated">Этот файл можно &lt;code&gt;exported&lt;/code&gt; в файловую структуру, вызвав функцию &lt;code&gt;&lt;a href=&quot;megaco_codec_transform#export_messages&quot;&gt;export_messages&lt;/a&gt;&lt;/code&gt; . Это может быть полезно, если измерение должно выполняться с помощью внешнего инструмента. При экспорте сообщений создается дерево каталогов со следующей структурой:</target>
        </trans-unit>
        <trans-unit id="0a51732516468cf6dd3707af7a833e061746c186" translate="yes" xml:space="preserve">
          <source>This file does not need to be created manually, it can be generated by &lt;code&gt;systools:make_relup/3,4&lt;/code&gt;. The relevant versions of the &lt;code&gt;.rel&lt;/code&gt; file, &lt;code&gt;.app&lt;/code&gt; files, and &lt;code&gt;.appup&lt;/code&gt; files are used as input. It is deduced which applications are to be added and deleted, and which applications that must be upgraded and/or downgraded. The instructions for this are fetched from the &lt;code&gt;.appup&lt;/code&gt; files and transformed into a single list of low-level instructions in the right order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b4a5fcbbcbba39461ee90e5035cbad9ed093754" translate="yes" xml:space="preserve">
          <source>This file does not need to be created manually, it can be generated by &lt;code&gt;systools:make_relup/3,4&lt;/code&gt;. The relevant versions of the &lt;code&gt;.rel&lt;/code&gt; file, &lt;code&gt;.app&lt;/code&gt; files, and &lt;code&gt;.appup&lt;/code&gt; files are used as input. It is deducted which applications are to be added and deleted, and which applications that must be upgraded and/or downgraded. The instructions for this are fetched from the &lt;code&gt;.appup&lt;/code&gt; files and transformed into a single list of low-level instructions in the right order.</source>
          <target state="translated">Этот файл не нужно создавать вручную, его можно сгенерировать с помощью &lt;code&gt;systools:make_relup/3,4&lt;/code&gt; . Соответствующие версии &lt;code&gt;.rel&lt;/code&gt; файла, &lt;code&gt;.app&lt;/code&gt; файлы и &lt;code&gt;.appup&lt;/code&gt; файлы используются в качестве входных данных. Вычитается, какие приложения должны быть добавлены и удалены, а какие приложения необходимо обновить и / или понизить. Инструкции для этого &lt;code&gt;.appup&lt;/code&gt; файлов .appup и преобразуются в один список низкоуровневых инструкций в правильном порядке.</target>
        </trans-unit>
        <trans-unit id="9fb48b81944131df296ecee7753475785f0204cf" translate="yes" xml:space="preserve">
          <source>This file is automatically generated by &lt;code&gt;&lt;a href=&quot;systools#make_relup-3&quot;&gt;systools:make_relup/3,4&lt;/a&gt;&lt;/code&gt;, using a release resource file (&lt;code&gt;.rel&lt;/code&gt;), application resource files (&lt;code&gt;.app&lt;/code&gt;), and application upgrade files (&lt;code&gt;.appup&lt;/code&gt;) as input.</source>
          <target state="translated">Этот файл автоматически генерируется &lt;code&gt;&lt;a href=&quot;systools#make_relup-3&quot;&gt;systools:make_relup/3,4&lt;/a&gt;&lt;/code&gt; , используя в качестве &lt;code&gt;.rel&lt;/code&gt; файл ресурсов выпуска ( .rel ), файлы ресурсов приложения ( &lt;code&gt;.app&lt;/code&gt; ) и файлы обновления приложения ( &lt;code&gt;.appup&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="3aeac0892cbf387cc4689f055a52de4d8bad4eb9" translate="yes" xml:space="preserve">
          <source>This file is included in &lt;code&gt;mess_server.erl&lt;/code&gt;:</source>
          <target state="translated">Этот файл включен в &lt;code&gt;mess_server.erl&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="0a6831b7fc3cca45884bb8df55f7ae10d0fb0b2b" translate="yes" xml:space="preserve">
          <source>This file is used by the functions in &lt;code&gt;&lt;a href=&quot;systools&quot;&gt;systools&lt;/a&gt;&lt;/code&gt; when generating a release upgrade file &lt;code&gt;relup&lt;/code&gt;.</source>
          <target state="translated">Этот файл используется функциями в &lt;code&gt;&lt;a href=&quot;systools&quot;&gt;systools&lt;/a&gt;&lt;/code&gt; при генерации повторной установки файла обновления &lt;code&gt;relup&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="efd4a3fe5e769769e91e2007d57ff8d294a747ea" translate="yes" xml:space="preserve">
          <source>This file is used by the functions in &lt;code&gt;&lt;a href=&quot;systools&quot;&gt;systools&lt;/a&gt;&lt;/code&gt; when generating start scripts (&lt;code&gt;.script&lt;/code&gt;, &lt;code&gt;.boot&lt;/code&gt;) and release upgrade files (&lt;code&gt;relup&lt;/code&gt;).</source>
          <target state="translated">Этот файл используется функциями в &lt;code&gt;&lt;a href=&quot;systools&quot;&gt;systools&lt;/a&gt;&lt;/code&gt; при генерации сценариев запуска ( &lt;code&gt;.script&lt;/code&gt; , &lt;code&gt;.boot&lt;/code&gt; ) и файлов обновления выпуска ( &lt;code&gt;relup&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="2d508ac4a54e356dd39279346e885dd774ae9ca6" translate="yes" xml:space="preserve">
          <source>This file must be compiled before it can be used. The ASN.1 compiler checks that the syntax is correct and that the text represents proper ASN.1 code before generating an abstract syntax tree. The code-generator then uses the abstract syntax tree to generate code.</source>
          <target state="translated">Этот файл должен быть скомпилирован перед тем,как его можно будет использовать.Компилятор ASN.1 проверяет правильность синтаксиса и правильность текста ASN.1 перед генерацией абстрактного синтаксического дерева.Затем генератор кода использует абстрактное дерево синтаксиса для генерации кода.</target>
        </trans-unit>
        <trans-unit id="868c84f12466baa660608254f7e7fa45a1ab087f" translate="yes" xml:space="preserve">
          <source>This filter matches all events originating from a process that has its group leader on a remote node.</source>
          <target state="translated">Этот фильтр соответствует всем событиям,происходящим от процесса,в котором лидер группы находится на удаленном узле.</target>
        </trans-unit>
        <trans-unit id="41612185cf4eec8055aef32ce6a1e85ef2253041" translate="yes" xml:space="preserve">
          <source>This filter matches all progress reports from &lt;code&gt;supervisor&lt;/code&gt; and &lt;code&gt;application_controller&lt;/code&gt;.</source>
          <target state="translated">Этот фильтр соответствует всем отчетам о ходе выполнения от &lt;code&gt;supervisor&lt;/code&gt; и &lt;code&gt;application_controller&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3139608738bfff344c3bbc9f537737137e32b777" translate="yes" xml:space="preserve">
          <source>This filter provides a way of filtering log events based on a &lt;code&gt;domain&lt;/code&gt; field in &lt;code&gt;Metadata&lt;/code&gt;. This field is optional, and the purpose of using it is to group log events from, for example, a specific functional area. This allows filtering or other specialized treatment in a Logger handler.</source>
          <target state="translated">Этот фильтр обеспечивает способ фильтрации событий журнала на основе поля &lt;code&gt;domain&lt;/code&gt; в &lt;code&gt;Metadata&lt;/code&gt; . Это поле не является обязательным, и цель его использования - группировать события, например, из определенной функциональной области. Это позволяет выполнять фильтрацию или другую специализированную обработку в обработчике Logger.</target>
        </trans-unit>
        <trans-unit id="d6c38d318267fc9b1e770c2f91391135ae4bc653" translate="yes" xml:space="preserve">
          <source>This filter provides a way of filtering log events based on the log level. It matches log events by comparing the log level with a specified &lt;code&gt;MatchLevel&lt;/code&gt;</source>
          <target state="translated">Этот фильтр обеспечивает способ фильтрации событий журнала на основе уровня журнала. Он сопоставляет события журнала, сравнивая уровень журнала с указанным &lt;code&gt;MatchLevel&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d91f4f911f4f31e3b8fc52c8256e3280febf9a2b" translate="yes" xml:space="preserve">
          <source>This first command enables microstate accounting for 1000 milliseconds. See &lt;code&gt;&lt;a href=&quot;#start-0&quot;&gt;start/0&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#stop-0&quot;&gt;stop/0&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#reset-0&quot;&gt;reset/0&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#start-1&quot;&gt;start/1&lt;/a&gt;&lt;/code&gt; for more details. The second command prints the statistics gathered during that time. First three general statistics are printed.</source>
          <target state="translated">Эта первая команда включает учет микросостояний для 1000 миллисекунд. См. &lt;code&gt;&lt;a href=&quot;#start-0&quot;&gt;start/0&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#stop-0&quot;&gt;stop/0&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#reset-0&quot;&gt;reset/0&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;#start-1&quot;&gt;start/1&lt;/a&gt;&lt;/code&gt; для получения более подробной информации. Вторая команда распечатывает статистику, собранную за это время. Распечатываются первые три общих статистики.</target>
        </trans-unit>
        <trans-unit id="1bcacf63cfd99cc81866dfa553a1b3c4711304ba" translate="yes" xml:space="preserve">
          <source>This flag affects how the filenames are to be interpreted. On operating systems with transparent file naming, this must be specified to allow for file naming in Unicode characters (and for correct interpretation of filenames containing characters &amp;gt; 255).</source>
          <target state="translated">Этот флаг влияет на то, как следует интерпретировать имена файлов. В операционных системах с прозрачным именованием файлов это необходимо указать, чтобы разрешить именование файлов с использованием символов Unicode (и для правильной интерпретации имен файлов, содержащих символы&amp;gt; 255).</target>
        </trans-unit>
        <trans-unit id="401ad721e8e42c6f1dc3f91e171c1c2bd9b985da" translate="yes" xml:space="preserve">
          <source>This flag affects what is interpreted as string data when doing heuristic string detection in the shell and in &lt;code&gt;io&lt;/code&gt;/ &lt;code&gt;io_lib:format&lt;/code&gt; with the &lt;code&gt;&quot;~tp&quot;&lt;/code&gt; and &lt;code&gt;~tP&lt;/code&gt; formatting instructions, as described earlier.</source>
          <target state="translated">Этот флаг влияет на то, что интерпретируется как строковые данные при эвристическом обнаружении строки в оболочке и в &lt;code&gt;io_lib:format&lt;/code&gt; &lt;code&gt;io&lt;/code&gt; / io_lib: с помощью инструкций форматирования &lt;code&gt;&quot;~tp&quot;&lt;/code&gt; и &lt;code&gt;~tP&lt;/code&gt; , как описано ранее.</target>
        </trans-unit>
        <trans-unit id="b90bcd3825735414823381e680fcf705ea0d5299" translate="yes" xml:space="preserve">
          <source>This flag can be removed or changed at any time without prior notice.</source>
          <target state="translated">Этот флаг может быть снят или изменен в любое время без предварительного уведомления.</target>
        </trans-unit>
        <trans-unit id="a25b86654b752dec058dc76f9788b85101c1cf33" translate="yes" xml:space="preserve">
          <source>This flag determines how messages in the message queue are stored, as follows:</source>
          <target state="translated">Этот флаг определяет,как сохраняются сообщения в очереди сообщений:</target>
        </trans-unit>
        <trans-unit id="af384f81db1d48b161cd5aace187074a44597516" translate="yes" xml:space="preserve">
          <source>This flag field is optional.</source>
          <target state="translated">Это поле флага является необязательным.</target>
        </trans-unit>
        <trans-unit id="26248d39ec39b326e49e6de9a0200d4728253816" translate="yes" xml:space="preserve">
          <source>This flag has effect only when the emulator is linked with the GNU C library, and uses its &lt;code&gt;malloc&lt;/code&gt; implementation.</source>
          <target state="translated">Этот флаг действует только тогда, когда эмулятор связан с библиотекой GNU C и использует свою реализацию &lt;code&gt;malloc&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e70f57e7a7cbebfcc2d03ba88bc253eef993a7f7" translate="yes" xml:space="preserve">
          <source>This flag is only valid for allocators that have an associated carrier pool. Besides that, there are no restrictions on carrier pools to use for an allocator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4f9950c6c7df7d55c31f657a13915f580c4acd7" translate="yes" xml:space="preserve">
          <source>This flag is particular useful when you want to elaborate with code loading from archives without editing the &lt;code&gt;boot script&lt;/code&gt;. For more information about interpretation of boot scripts, see &lt;code&gt;script(4)&lt;/code&gt;. The flag has also a similar effect on how the code server works; see &lt;code&gt;code(3)&lt;/code&gt;.</source>
          <target state="translated">Этот флаг особенно полезен, когда вы хотите уточнить загрузку кода из архивов без редактирования &lt;code&gt;boot script&lt;/code&gt; . Для получения дополнительной информации об интерпретации сценариев загрузки см. &lt;code&gt;script(4)&lt;/code&gt; . Флаг также оказывает аналогичное влияние на работу сервера кода; см. &lt;code&gt;code(3)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6dbde97932c8eaba9606eccfc93ef4a1443c2369" translate="yes" xml:space="preserve">
          <source>This flag sets the maximum heap size for the calling process. If &lt;code&gt;MaxHeapSize&lt;/code&gt; is an integer, the system default values for &lt;code&gt;kill&lt;/code&gt; and &lt;code&gt;error_logger&lt;/code&gt; are used.</source>
          <target state="translated">Этот флаг устанавливает максимальный размер кучи для вызывающего процесса. Если &lt;code&gt;MaxHeapSize&lt;/code&gt; является целым числом, используются системные значения по умолчанию для &lt;code&gt;kill&lt;/code&gt; и &lt;code&gt;error_logger&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f9f03daf9384ca8f19df9da9a248cad12c12009a" translate="yes" xml:space="preserve">
          <source>This following definition of a &lt;code&gt;person&lt;/code&gt; is used in several examples in this section. Three fields are included, &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;phone&lt;/code&gt;, and &lt;code&gt;address&lt;/code&gt;. The default values for &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;phone&lt;/code&gt; is &quot;&quot; and [], respectively. The default value for &lt;code&gt;address&lt;/code&gt; is the atom &lt;code&gt;undefined&lt;/code&gt;, since no default value is supplied for this field:</source>
          <target state="translated">Следующее ниже определение &lt;code&gt;person&lt;/code&gt; используется в нескольких примерах в этом разделе. Включены три поля: &lt;code&gt;name&lt;/code&gt; , &lt;code&gt;phone&lt;/code&gt; и &lt;code&gt;address&lt;/code&gt; . Значения по умолчанию для &lt;code&gt;name&lt;/code&gt; и &lt;code&gt;phone&lt;/code&gt; - &amp;laquo;&amp;raquo; и [] соответственно. Значением по умолчанию для &lt;code&gt;address&lt;/code&gt; является атом &lt;code&gt;undefined&lt;/code&gt; , поскольку для этого поля не указано значение по умолчанию:</target>
        </trans-unit>
        <trans-unit id="02f5811e131af42f984f54f852032dfcb1311211" translate="yes" xml:space="preserve">
          <source>This form can also be used in header files (.hrl) to declare type information for exported functions. Then these header files can be included in files that (implicitly or explicitly) import these functions.</source>
          <target state="translated">Эта форма также может быть использована в заголовочных файлах (.hrl)для объявления информации о типе экспортируемых функций.Затем эти заголовочные файлы могут быть включены в файлы,которые (неявно или явно)импортируют эти функции.</target>
        </trans-unit>
        <trans-unit id="2059c23a56cf58a2c4674e36d5fde6d6cdf2124b" translate="yes" xml:space="preserve">
          <source>This form is the one mostly used in the &lt;code&gt;&lt;a href=&quot;#Example&quot;&gt;Example&lt;/a&gt;&lt;/code&gt; section.</source>
          <target state="translated">Эта форма чаще всего используется в разделе &amp;laquo; &lt;code&gt;&lt;a href=&quot;#Example&quot;&gt;Example&lt;/a&gt;&lt;/code&gt; &amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="966c16aa39dbb79b8cefa816f56010ae727285a2" translate="yes" xml:space="preserve">
          <source>This format can be used for printing any object and truncating the output so it fits a specified field:</source>
          <target state="translated">Этот формат может быть использован для печати любого объекта и усечения вывода таким образом,чтобы он вписывался в заданное поле:</target>
        </trans-unit>
        <trans-unit id="be0b18a70e2d41ab8912dadf086b908126403976" translate="yes" xml:space="preserve">
          <source>This format of the EdDSA curves is temporary and may change without prior notice!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96bf1314fc9e30514fade10f4ed25bb52dc94221" translate="yes" xml:space="preserve">
          <source>This formats the text like &lt;code&gt;io:format(FmtString, Args)&lt;/code&gt; and outputs it like &lt;code&gt;debugMsg&lt;/code&gt;. The result is always &lt;code&gt;ok&lt;/code&gt;.</source>
          <target state="translated">Это форматирует текст как &lt;code&gt;io:format(FmtString, Args)&lt;/code&gt; и выводит его как &lt;code&gt;debugMsg&lt;/code&gt; . Результат всегда в &lt;code&gt;ok&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a1dba461392e21176e94cffd9044c02a52e238da" translate="yes" xml:space="preserve">
          <source>This fun can also be used to make delays in authentication tries for example by calling &lt;code&gt;timer:sleep/1&lt;/code&gt;.</source>
          <target state="translated">Эту забаву также можно использовать для задержки попыток аутентификации, например, путем вызова &lt;code&gt;timer:sleep/1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="336ab36451349be053fe7e9e786bb4268ca4fe0b" translate="yes" xml:space="preserve">
          <source>This function (&lt;code&gt;mnesia:activity/4&lt;/code&gt;) differs in an important way from the functions &lt;code&gt;mnesia:transaction&lt;/code&gt;, &lt;code&gt;mnesia:sync_transaction&lt;/code&gt;, &lt;code&gt;mnesia:async_dirty&lt;/code&gt;, &lt;code&gt;mnesia:sync_dirty&lt;/code&gt;, and &lt;code&gt;mnesia:ets&lt;/code&gt;. Argument &lt;code&gt;AccessMod&lt;/code&gt; is the name of a callback module, which implements the &lt;code&gt;mnesia_access&lt;/code&gt; behavior.</source>
          <target state="translated">Эта функция ( &lt;code&gt;mnesia:activity/4&lt;/code&gt; ) существенно отличается от функций &lt;code&gt;mnesia:transaction&lt;/code&gt; , &lt;code&gt;mnesia:sync_transaction&lt;/code&gt; , &lt;code&gt;mnesia:async_dirty&lt;/code&gt; , &lt;code&gt;mnesia:sync_dirty&lt;/code&gt; и &lt;code&gt;mnesia:ets&lt;/code&gt; . Аргумент &lt;code&gt;AccessMod&lt;/code&gt; - это имя модуля обратного вызова, который реализует поведение &lt;code&gt;mnesia_access&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a856a99360229d9e49c9035cef153bdfeb299a54" translate="yes" xml:space="preserve">
          <source>This function &lt;strong&gt;never&lt;/strong&gt; returns. It calls either of the following functions:</source>
          <target state="translated">Эта функция &lt;strong&gt;никогда не&lt;/strong&gt; возвращается. Он вызывает любую из следующих функций:</target>
        </trans-unit>
        <trans-unit id="dfd2b9df4a36c64900ffcea705f4eb600cd796ec" translate="yes" xml:space="preserve">
          <source>This function adds a remote node (&lt;code&gt;Nodename&lt;/code&gt;) to the list of nodes where tracing is performed. It starts a tracer process on the remote node, which will send all trace messages to the tracer process on the local node (via the Erlang distribution). If no tracer process is running on the local node, the error reason &lt;code&gt;no_local_tracer&lt;/code&gt; is returned. The tracer process on the local node must be started with the &lt;code&gt;&lt;a href=&quot;#tracer-2&quot;&gt;tracer/0/2&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="translated">Эта функция добавляет удаленный узел ( &lt;code&gt;Nodename&lt;/code&gt; ) в список узлов, на которых выполняется трассировка. Он запускает процесс трассировки на удаленном узле, который отправляет все сообщения трассировки процессу трассировки на локальном узле (через дистрибутив Erlang). Если на локальном узле не запущен процесс трассировки, возвращается причина ошибки &lt;code&gt;no_local_tracer&lt;/code&gt; . Процесс трассировки на локальном узле должен запускаться с помощью функции &lt;code&gt;&lt;a href=&quot;#tracer-2&quot;&gt;tracer/0/2&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e377bf478ddc23f833b9b7a7f1af28105f09ad03" translate="yes" xml:space="preserve">
          <source>This function always creates a new binary, even if &lt;code&gt;N = 1&lt;/code&gt;. By using &lt;code&gt;&lt;a href=&quot;#copy-1&quot;&gt;copy/1&lt;/a&gt;&lt;/code&gt; on a binary referencing a larger binary, one can free up the larger binary for garbage collection.</source>
          <target state="translated">Эта функция всегда создает новый двоичный файл, даже если &lt;code&gt;N = 1&lt;/code&gt; . Используя &lt;code&gt;&lt;a href=&quot;#copy-1&quot;&gt;copy/1&lt;/a&gt;&lt;/code&gt; для двоичного файла, ссылающегося на более крупный двоичный файл, можно освободить более крупный двоичный файл для сбора мусора.</target>
        </trans-unit>
        <trans-unit id="72153fe9aa2fe79a7632e3bef35203ef37b284e3" translate="yes" xml:space="preserve">
          <source>This function and the related &lt;code&gt;&lt;a href=&quot;#is_tree-1&quot;&gt;is_tree/1&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#data-1&quot;&gt;data/1&lt;/a&gt;&lt;/code&gt; provide a uniform way to extend the set of &lt;code&gt;erl_parse&lt;/code&gt; node types. The associated data is any term, whose format may depend on the type tag.</source>
          <target state="translated">Эта функция и связанные с ней &lt;code&gt;&lt;a href=&quot;#is_tree-1&quot;&gt;is_tree/1&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;#data-1&quot;&gt;data/1&lt;/a&gt;&lt;/code&gt; обеспечивают единообразный способ расширения набора &lt;code&gt;erl_parse&lt;/code&gt; узлов erl_parse . Связанные данные - это любой термин, формат которого может зависеть от тега типа.</target>
        </trans-unit>
        <trans-unit id="433b989897815cc9d57ace923542cbea3cc51b3e" translate="yes" xml:space="preserve">
          <source>This function associates a match specification with trace event &lt;code&gt;send&lt;/code&gt; or &lt;code&gt;'receive'&lt;/code&gt;. By default all executed &lt;code&gt;send&lt;/code&gt; and &lt;code&gt;'receive'&lt;/code&gt; events are traced if enabled for a process. A match specification can be used to filter traced events based on sender, receiver and/or message content.</source>
          <target state="translated">Эта функция связывает спецификацию соответствия с &lt;code&gt;send&lt;/code&gt; или &lt;code&gt;'receive'&lt;/code&gt; события трассировки . По умолчанию отслеживаются все выполненные события &lt;code&gt;send&lt;/code&gt; и &lt;code&gt;'receive'&lt;/code&gt; , если они включены для процесса. Спецификацию соответствия можно использовать для фильтрации отслеживаемых событий на основе отправителя, получателя и / или содержимого сообщения.</target>
        </trans-unit>
        <trans-unit id="cc6a6435d8001a9dac7c73b8bb892f7ef3f27946" translate="yes" xml:space="preserve">
          <source>This function behaves like &lt;code&gt;&lt;a href=&quot;#send_nosuspend-2&quot;&gt; erlang:send_nosuspend/2&lt;/a&gt;&lt;/code&gt;, but takes a third parameter, a list of options. The only option is &lt;code&gt;noconnect&lt;/code&gt;, which makes the function return &lt;code&gt;false&lt;/code&gt; if the remote node is not currently reachable by the local node. The normal behavior is to try to connect to the node, which can stall the process during a short period. The use of option &lt;code&gt;noconnect&lt;/code&gt; makes it possible to be sure not to get the slightest delay when sending to a remote process. This is especially useful when communicating with nodes that expect to always be the connecting part (that is, nodes written in C or Java).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89635cf270dd169c3a41d472bf8e396339e0014e" translate="yes" xml:space="preserve">
          <source>This function behaves like &lt;code&gt;&lt;a href=&quot;#send_nosuspend-2&quot;&gt;erlang:send_nosuspend/2&lt;/a&gt;&lt;/code&gt;, but takes a third parameter, a list of options. The only option is &lt;code&gt;noconnect&lt;/code&gt;, which makes the function return &lt;code&gt;false&lt;/code&gt; if the remote node is not currently reachable by the local node. The normal behavior is to try to connect to the node, which can stall the process during a short period. The use of option &lt;code&gt;noconnect&lt;/code&gt; makes it possible to be sure not to get the slightest delay when sending to a remote process. This is especially useful when communicating with nodes that expect to always be the connecting part (that is, nodes written in C or Java).</source>
          <target state="translated">Эта функция ведет себя как &lt;code&gt;&lt;a href=&quot;#send_nosuspend-2&quot;&gt;erlang:send_nosuspend/2&lt;/a&gt;&lt;/code&gt; , но принимает третий параметр - список параметров. Единственная опция - &lt;code&gt;noconnect&lt;/code&gt; , которая заставляет функцию возвращать &lt;code&gt;false&lt;/code&gt; , если удаленный узел в настоящее время недоступен для локального узла. Обычное поведение - попытка подключиться к узлу, что может приостановить процесс на короткое время. Использование опции &lt;code&gt;noconnect&lt;/code&gt; позволяет быть уверенным, что при отправке удаленному процессу не будет ни малейшей задержки. Это особенно полезно при взаимодействии с узлами, которые всегда должны быть соединительной частью (то есть узлы, написанные на C или Java).</target>
        </trans-unit>
        <trans-unit id="83333525c2547e13927665951a088eb3ec49c561" translate="yes" xml:space="preserve">
          <source>This function broadcasts a message to a list of processes:</source>
          <target state="translated">Данная функция передает сообщение на список процессов:</target>
        </trans-unit>
        <trans-unit id="925f375ec656eb11d5f62a0c683bf9b5d73e0618" translate="yes" xml:space="preserve">
          <source>This function calls the &lt;code&gt;inet:getopts/2&lt;/code&gt;, read that documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbb073505ffa4a104f2a1483e1c97422cdc3c61a" translate="yes" xml:space="preserve">
          <source>This function calls the &lt;code&gt;inet:setopts/2&lt;/code&gt;, read that documentation and for &lt;code&gt;gen_tcp:option()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acaeb65b7a88cf8025f411bf5bf4220c48f96174" translate="yes" xml:space="preserve">
          <source>This function can also be used to add a replica of the table named &lt;code&gt;schema&lt;/code&gt;.</source>
          <target state="translated">Эту функцию также можно использовать для добавления реплики таблицы с именем &lt;code&gt;schema&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e0129c56bbfa8049fef6fe88075e59972e7cc29c" translate="yes" xml:space="preserve">
          <source>This function can also be used to change the storage type of the table named &lt;code&gt;schema&lt;/code&gt;. The schema table can only have &lt;code&gt;ram_copies&lt;/code&gt; or &lt;code&gt;disc_copies&lt;/code&gt; as the storage type. If the storage type of the schema is &lt;code&gt;ram_copies&lt;/code&gt;, no other table can be disc-resident on that node.</source>
          <target state="translated">Эту функцию также можно использовать для изменения типа хранения таблицы с именем &lt;code&gt;schema&lt;/code&gt; . Таблица схемы может иметь только &lt;code&gt;ram_copies&lt;/code&gt; или &lt;code&gt;disc_copies&lt;/code&gt; в качестве типа хранилища. Если тип хранения схемы - &lt;code&gt;ram_copies&lt;/code&gt; , никакая другая таблица не может быть резидентной на этом узле.</target>
        </trans-unit>
        <trans-unit id="298f0bbfcd306bc36a218e1e5c945f51e02abf73" translate="yes" xml:space="preserve">
          <source>This function can also be used to delete a replica of the table named &lt;code&gt;schema&lt;/code&gt;. The Mnesia node is then removed. Notice that Mnesia must be stopped on the node first.</source>
          <target state="translated">Эту функцию также можно использовать для удаления реплики таблицы с именем &lt;code&gt;schema&lt;/code&gt; . Затем удаляется узел Mnesia. Обратите внимание, что сначала необходимо остановить Mnesia на узле.</target>
        </trans-unit>
        <trans-unit id="81355cc6547701f3b5dbcf62012e8964f7fd6864" translate="yes" xml:space="preserve">
          <source>This function can be called by a process to unregister a specified node from EPMD on the local host. This is, however, usually not allowed, unless EPMD was started with flag &lt;code&gt;-relaxed_command_check&lt;/code&gt;, which it normally is not.</source>
          <target state="translated">Эта функция может быть вызвана процессом для отмены регистрации указанного узла в EPMD на локальном хосте. Однако это обычно недопустимо, если только EPMD не был запущен с флагом &lt;code&gt;-relaxed_command_check&lt;/code&gt; , что обычно не так.</target>
        </trans-unit>
        <trans-unit id="0b9254d1fc6a965191d944b7d91a6f039c16821e" translate="yes" xml:space="preserve">
          <source>This function can be called from any thread if a &lt;code&gt;&lt;a href=&quot;#ErlDrvPDL&quot;&gt;port data lock&lt;/a&gt;&lt;/code&gt; associated with the &lt;code&gt;port&lt;/code&gt; is locked by the calling thread during the call.</source>
          <target state="translated">This function can be called from any thread if a &lt;code&gt;&lt;a href=&quot;#ErlDrvPDL&quot;&gt;port data lock&lt;/a&gt;&lt;/code&gt; associated with the &lt;code&gt;port&lt;/code&gt; is locked by the calling thread during the call.</target>
        </trans-unit>
        <trans-unit id="f6c82e6849bd9680e104431bbaa2e398b9142d98" translate="yes" xml:space="preserve">
          <source>This function can be called from the net_if process at start-up. The options list defines which versions to use.</source>
          <target state="translated">Эта функция может быть вызвана из процесса net_if при запуске.Список опций определяет,какие версии использовать.</target>
        </trans-unit>
        <trans-unit id="f2ad971b905f90b5afe4b3c7ffde91a0186892d8" translate="yes" xml:space="preserve">
          <source>This function can be called from the shell as follows:</source>
          <target state="translated">Эта функция может быть вызвана из оболочки следующим образом:</target>
        </trans-unit>
        <trans-unit id="522d795e31428058f3384591f93786fc5c38e61f" translate="yes" xml:space="preserve">
          <source>This function can be called multiple times per tracepoint, so it is important that it is both fast and without side effects.</source>
          <target state="translated">Эта функция может быть вызвана несколько раз на каждую точку трассировки,поэтому важно,чтобы она была быстрой и без побочных эффектов.</target>
        </trans-unit>
        <trans-unit id="19493e2b3285e45af7ae976c2c5428e204167ea2" translate="yes" xml:space="preserve">
          <source>This function can be described as a &lt;code&gt;&lt;a href=&quot;#match_delete-2&quot;&gt;match_delete/2&lt;/a&gt;&lt;/code&gt; function that does not delete any elements, but only counts them.</source>
          <target state="translated">Эту функцию можно описать как функцию &lt;code&gt;&lt;a href=&quot;#match_delete-2&quot;&gt;match_delete/2&lt;/a&gt;&lt;/code&gt; , которая не удаляет никакие элементы, а только считает их.</target>
        </trans-unit>
        <trans-unit id="ce984ece3bfa8ffe74ac15019b28eb788ccbbd1c" translate="yes" xml:space="preserve">
          <source>This function can be used as follows:</source>
          <target state="translated">Эту функцию можно использовать следующим образом:</target>
        </trans-unit>
        <trans-unit id="921fb0259ece312d46dac0b38aa1e96766ac7ff6" translate="yes" xml:space="preserve">
          <source>This function can be used by a &lt;code&gt;gen_server&lt;/code&gt; process to explicitly send a reply to a client that called &lt;code&gt;&lt;a href=&quot;#call-2&quot;&gt;call/2,3&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#multi_call-2&quot;&gt;multi_call/2,3,4&lt;/a&gt;&lt;/code&gt;, when the reply cannot be defined in the return value of &lt;code&gt;&lt;a href=&quot;#Module:handle_call-3&quot;&gt; Module:handle_call/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85a27177a667f0e1465cbdbd2008515b2cc73a28" translate="yes" xml:space="preserve">
          <source>This function can be used by a &lt;code&gt;gen_server&lt;/code&gt; process to explicitly send a reply to a client that called &lt;code&gt;&lt;a href=&quot;#call-2&quot;&gt;call/2,3&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#multi_call-2&quot;&gt;multi_call/2,3,4&lt;/a&gt;&lt;/code&gt;, when the reply cannot be defined in the return value of &lt;code&gt;&lt;a href=&quot;#Module:handle_call-3&quot;&gt;Module:handle_call/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эта функция может использоваться процессом &lt;code&gt;gen_server&lt;/code&gt; для явной отправки ответа клиенту, который вызвал &lt;code&gt;&lt;a href=&quot;#call-2&quot;&gt;call/2,3&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;#multi_call-2&quot;&gt;multi_call/2,3,4&lt;/a&gt;&lt;/code&gt; , когда ответ не может быть определен в возвращаемом значении &lt;code&gt;&lt;a href=&quot;#Module:handle_call-3&quot;&gt;Module:handle_call/3&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2456490ca8943865684bc759cd5cd3ada4a8a3f8" translate="yes" xml:space="preserve">
          <source>This function can be used by a &lt;code&gt;gen_statem&lt;/code&gt; to explicitly send a reply to a process that waits in &lt;code&gt;&lt;a href=&quot;#call-2&quot;&gt;call/2&lt;/a&gt;&lt;/code&gt; when the reply cannot be defined in the return value of a &lt;code&gt;&lt;a href=&quot;#state%20callback&quot;&gt;&lt;strong&gt;state callback&lt;/strong&gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08f1b8ca49849c35cc0d4d177f183a0add904508" translate="yes" xml:space="preserve">
          <source>This function can be used by a &lt;code&gt;gen_statem&lt;/code&gt; to explicitly send a reply to a process that waits in &lt;code&gt;&lt;a href=&quot;#call-2&quot;&gt;call/2&lt;/a&gt;&lt;/code&gt; when the reply cannot be defined in the return value of a &lt;code&gt;&lt;a href=&quot;#state%20callback&quot;&gt;state callback&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эта функция может использоваться &lt;code&gt;gen_statem&lt;/code&gt; для явной отправки ответа процессу, который ожидает в &lt;code&gt;&lt;a href=&quot;#call-2&quot;&gt;call/2&lt;/a&gt;&lt;/code&gt; , когда ответ не может быть определен в возвращаемом значении &lt;code&gt;&lt;a href=&quot;#state%20callback&quot;&gt;state callback&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8ea9dc0753a135b5574eec22abe8e746d04ba274" translate="yes" xml:space="preserve">
          <source>This function can be used by a channel to send a reply to a client that called &lt;code&gt;call/[2,3]&lt;/code&gt; when the reply cannot be defined in the return value of &lt;code&gt;&lt;a href=&quot;#Module:handle_call-3&quot;&gt;Module:handle_call/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эта функция может использоваться каналом для отправки ответа клиенту, который вызвал &lt;code&gt;call/[2,3]&lt;/code&gt; , когда ответ не может быть определен в возвращаемом значении &lt;code&gt;&lt;a href=&quot;#Module:handle_call-3&quot;&gt;Module:handle_call/3&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dc2835de3bfc4793d24e098729054ecbb7df5c48" translate="yes" xml:space="preserve">
          <source>This function can be used by a user-defined legacy &lt;code&gt;error_logger&lt;/code&gt; event handler to format a crash report. The crash report is sent using &lt;code&gt; logger(3)&lt;/code&gt;, and the event to be handled is of the format &lt;code&gt;{error_report, GL, {Pid, crash_report, CrashReport}}&lt;/code&gt;, where &lt;code&gt;GL&lt;/code&gt; is the group leader pid of process &lt;code&gt;Pid&lt;/code&gt; that sent the crash report.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db47f123c4d7737adc530bd1064733d21b41df5e" translate="yes" xml:space="preserve">
          <source>This function can be used by a user-defined legacy &lt;code&gt;error_logger&lt;/code&gt; event handler to format a crash report. The crash report is sent using &lt;code&gt;logger(3)&lt;/code&gt;, and the event to be handled is of the format &lt;code&gt;{error_report, GL, {Pid, crash_report, CrashReport}}&lt;/code&gt;, where &lt;code&gt;GL&lt;/code&gt; is the group leader pid of process &lt;code&gt;Pid&lt;/code&gt; that sent the crash report.</source>
          <target state="translated">Эта функция может использоваться определенным пользователем устаревшим обработчиком событий &lt;code&gt;error_logger&lt;/code&gt; для форматирования отчета о сбое. Отчет о сбое отправляется с помощью &lt;code&gt;logger(3)&lt;/code&gt; , а событие, которое необходимо обработать, имеет формат &lt;code&gt;{error_report, GL, {Pid, crash_report, CrashReport}}&lt;/code&gt; , где &lt;code&gt;GL&lt;/code&gt; - это идентификатор лидера группы процесса &lt;code&gt;Pid&lt;/code&gt; , который отправил отчет о сбое. ,</target>
        </trans-unit>
        <trans-unit id="9ee5cef59a670b3b68b71dece0a9f5e79fdb8155" translate="yes" xml:space="preserve">
          <source>This function can be used by a user-defined legacy &lt;code&gt;error_logger&lt;/code&gt; event handler to format a crash report. When Depth is specified as a positive integer, it is used in the format string to limit the output as follows: &lt;code&gt;io_lib:format(&quot;~P&quot;, [Term,Depth])&lt;/code&gt;.</source>
          <target state="translated">Эта функция может использоваться определенным пользователем устаревшим обработчиком событий &lt;code&gt;error_logger&lt;/code&gt; для форматирования отчета о сбое. Когда глубина указывается как положительное целое число, она используется в строке формата для ограничения вывода следующим образом: &lt;code&gt;io_lib:format(&quot;~P&quot;, [Term,Depth])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="617658033c030647cebceeeec015013360ae0d7a" translate="yes" xml:space="preserve">
          <source>This function can be used for sending &lt;code&gt;rpc&lt;/code&gt; requests that cannot be expressed by other interface functions in this module.</source>
          <target state="translated">Эта функция может использоваться для отправки запросов &lt;code&gt;rpc&lt;/code&gt; , которые не могут быть выражены другими функциями интерфейса в этом модуле.</target>
        </trans-unit>
        <trans-unit id="42e7b32dc0277f5046892f45b1b0cb119299d8f7" translate="yes" xml:space="preserve">
          <source>This function can be used in instrumentation functions for &lt;code&gt;is_set_ok&lt;/code&gt;, &lt;code&gt;undo&lt;/code&gt; or &lt;code&gt;set&lt;/code&gt; to check if the status column of a table is modified.</source>
          <target state="translated">Эта функция может использоваться в функциях инструментария для &lt;code&gt;is_set_ok&lt;/code&gt; , &lt;code&gt;undo&lt;/code&gt; или &lt;code&gt;set&lt;/code&gt; , чтобы проверить, изменен ли столбец статуса таблицы.</target>
        </trans-unit>
        <trans-unit id="fc3c92535fa29f8db696545ba3457c73577af82b" translate="yes" xml:space="preserve">
          <source>This function can be used in instrumentation functions to retrieve a given part of the table info.</source>
          <target state="translated">Эта функция может быть использована в функциях КИП для получения определенной части информации о таблице.</target>
        </trans-unit>
        <trans-unit id="7cdbbfa3213f416586603dfe437066c58b3bceec" translate="yes" xml:space="preserve">
          <source>This function can be used in instrumentation functions to retrieve the index types part of the table info.</source>
          <target state="translated">Эта функция может быть использована в функциях КИП для получения части информации по типам индексов в таблице.</target>
        </trans-unit>
        <trans-unit id="f7be1756bfcf7a6c64caef1e2a4983a257ac163e" translate="yes" xml:space="preserve">
          <source>This function can be used to add an AGENT-CAPABILITY statement to the sysORTable in the agent. The table is defined in the SNMPv2-MIB.</source>
          <target state="translated">Эта функция может быть использована для добавления заявления об АГЕНТНОЙ КАПАБИЛЬНОСТИ к sysORTable в агенте.Таблица определена в SNMPv2-MIB.</target>
        </trans-unit>
        <trans-unit id="c7dac437f7278e03fe570daafa7cce023be74ce5" translate="yes" xml:space="preserve">
          <source>This function can be used to delete an AGENT-CAPABILITY statement to the sysORTable in the agent. This table is defined in the SNMPv2-MIB.</source>
          <target state="translated">Эта функция может быть использована для удаления оператора AGENT-CAPABILITY в sysORTable в агенте.Данная таблица определена в SNMPv2-MIB.</target>
        </trans-unit>
        <trans-unit id="6c31d13d96b292d87ce9f4d791883f49fbaeb4b3" translate="yes" xml:space="preserve">
          <source>This function can be used to do a basic validation of the doc content of &lt;code&gt;application/erlang+html&lt;/code&gt; format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="840ed8b7989fdd1ae020baa41575fc56dc513298" translate="yes" xml:space="preserve">
          <source>This function can be used to do whitespace normalization of &lt;code&gt;application/erlang+html&lt;/code&gt; documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72de58b341af03e3b7cb427708c4b243cb6b024a" translate="yes" xml:space="preserve">
          <source>This function can be used to explicitly start a key update on a TLS 1.3 connection. There are two types of the key update: if &lt;strong&gt;Type&lt;/strong&gt; is set to &lt;strong&gt;write&lt;/strong&gt;, only the writing key is updated; if &lt;strong&gt;Type&lt;/strong&gt; is set to &lt;strong&gt;read_write&lt;/strong&gt;, both the reading and writing keys are updated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1102b37c65aef3cec918cc4b7670f14b8a81dbe0" translate="yes" xml:space="preserve">
          <source>This function can be used to load object code on remote Erlang nodes. Argument &lt;code&gt;Binary&lt;/code&gt; must contain object code for &lt;code&gt;Module&lt;/code&gt;. &lt;code&gt;Filename&lt;/code&gt; is only used by the code server to keep a record of from which file the object code for &lt;code&gt;Module&lt;/code&gt; comes. Thus, &lt;code&gt;Filename&lt;/code&gt; is not opened and read by the code server.</source>
          <target state="translated">Эта функция может использоваться для загрузки объектного кода на удаленные узлы Erlang. Аргумент &lt;code&gt;Binary&lt;/code&gt; должен содержать объектный код для &lt;code&gt;Module&lt;/code&gt; . &lt;code&gt;Filename&lt;/code&gt; используется сервером кода только для записи того, из какого файла исходит объектный код для &lt;code&gt;Module&lt;/code&gt; . Таким образом, &lt;code&gt;Filename&lt;/code&gt; не открывается и не читается сервером кода.</target>
        </trans-unit>
        <trans-unit id="8a7a1c49364121587618310df79e658f758f578a" translate="yes" xml:space="preserve">
          <source>This function can be used to manually dump the database to file.</source>
          <target state="translated">Эта функция может быть использована для ручного дампа базы данных в файл.</target>
        </trans-unit>
        <trans-unit id="b39cd5560dc28e0d7d30d0cfa028ea7e687fcd3a" translate="yes" xml:space="preserve">
          <source>This function can be used to receive asynchronous notifications when OS-specific event objects become ready for either read or write operations.</source>
          <target state="translated">Эта функция может быть использована для получения асинхронных уведомлений,когда специфические для ОС объекты событий становятся готовыми либо к операциям чтения,либо к операциям записи.</target>
        </trans-unit>
        <trans-unit id="4f3a58dc913baae062f654243c29c7f5eb0a4f46" translate="yes" xml:space="preserve">
          <source>This function can be used to restore an opaque continuation returned by &lt;code&gt;&lt;a href=&quot;#select-3&quot;&gt;select/3&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#select-1&quot;&gt;select/1&lt;/a&gt;&lt;/code&gt; if the continuation has passed through external term format (been sent between nodes or stored on disk).</source>
          <target state="translated">Эта функция может использоваться для восстановления непрозрачного продолжения, возвращенного &lt;code&gt;&lt;a href=&quot;#select-3&quot;&gt;select/3&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;#select-1&quot;&gt;select/1&lt;/a&gt;&lt;/code&gt; , если продолжение прошло через внешний формат термина (было отправлено между узлами или сохранено на диске).</target>
        </trans-unit>
        <trans-unit id="fd7807ec473936d9df7098fd46d3b3b79853551d" translate="yes" xml:space="preserve">
          <source>This function can be useful when a node is started, and the names of the other network nodes are not initially known.</source>
          <target state="translated">Эта функция может быть полезна,когда узел запускается,а имена других сетевых узлов изначально неизвестны.</target>
        </trans-unit>
        <trans-unit id="2f62afda090010612a0f62b821ddb83bdcfdcffb" translate="yes" xml:space="preserve">
          <source>This function can fail with one of the following error reasons:</source>
          <target state="translated">Эта функция может выйти из строя по одной из следующих причин:</target>
        </trans-unit>
        <trans-unit id="ba63a9a987b164fc62f29fa35526154bc8f7f106" translate="yes" xml:space="preserve">
          <source>This function can introduce some output latency (reading input without producing any output).</source>
          <target state="translated">Эта функция может ввести некоторую задержку на выходе (чтение входа без вывода).</target>
        </trans-unit>
        <trans-unit id="988314974f83c89323479c44bd0becefb3b2384f" translate="yes" xml:space="preserve">
          <source>This function can not change the result of the test case by returning skip or fail tuples, but it may insert items in &lt;code&gt;Config&lt;/code&gt; that can be read in &lt;code&gt;end_per_testcase/2&lt;/code&gt; or in &lt;code&gt;post_end_per_testcase/5&lt;/code&gt;.</source>
          <target state="translated">Эта функция не может изменить результат тестового примера, возвращая пропущенные или неудачные кортежи, но она может вставлять элементы в &lt;code&gt;Config&lt;/code&gt; , которые можно прочитать в &lt;code&gt;end_per_testcase/2&lt;/code&gt; или в &lt;code&gt;post_end_per_testcase/5&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6e10609e0797e589efd9411b6aba855461126929" translate="yes" xml:space="preserve">
          <source>This function can only be used from a NIF-calling thread, and with an environment corresponding to currently executing processes.</source>
          <target state="translated">Эта функция может использоваться только из NIF-вызывающего потока и со средой,соответствующей выполняемым в данный момент процессам.</target>
        </trans-unit>
        <trans-unit id="e042388a21a809a3fccbdc2d157a9abe40eeec97" translate="yes" xml:space="preserve">
          <source>This function can return multiple addresses for multihomed sockets, such as SCTP sockets. For other sockets it returns a one-element list.</source>
          <target state="translated">Эта функция может возвращать несколько адресов для многодоменных сокетов,например,SCTP-сокетов.Для других сокетов она возвращает одноэлементный список.</target>
        </trans-unit>
        <trans-unit id="11d63c52aba2de9f19866ae14e84baa28f340645" translate="yes" xml:space="preserve">
          <source>This function cannot be used on &lt;code&gt;local_content&lt;/code&gt; tables.</source>
          <target state="translated">Эту функцию нельзя использовать в таблицах &lt;code&gt;local_content&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="87440255dae77d1bf8907255759052234cd4e35c" translate="yes" xml:space="preserve">
          <source>This function cannot change the result of the test case by returning skip or fail tuples, but it may insert items in &lt;code&gt;Config&lt;/code&gt; that can be read in &lt;code&gt;end_per_testcase/2&lt;/code&gt; or in &lt;code&gt;post_end_per_testcase/5&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe1d649e804662b3a5a46052ca328e2902ff015f" translate="yes" xml:space="preserve">
          <source>This function checks if a date is a valid.</source>
          <target state="translated">Эта функция проверяет,является ли дата действительной.</target>
        </trans-unit>
        <trans-unit id="3517712921153c86ac3e375c1576c43c6781f969" translate="yes" xml:space="preserve">
          <source>This function checks that the</source>
          <target state="translated">Эта функция проверяет,что</target>
        </trans-unit>
        <trans-unit id="ddd56f29dbf260ed1f448685268e0f12bf606e89" translate="yes" xml:space="preserve">
          <source>This function checks whether microstate accounting is available or not.</source>
          <target state="translated">Эта функция проверяет,доступен ли микрогосударственный учет или нет.</target>
        </trans-unit>
        <trans-unit id="e7a6086739c9e28533ed8c3e368502ee3f910824" translate="yes" xml:space="preserve">
          <source>This function clears match specifications for the specified trace event (&lt;code&gt;send&lt;/code&gt; or &lt;code&gt;'receive'&lt;/code&gt;). It will revert back to the default behavior of tracing all triggered events.</source>
          <target state="translated">Эта функция очищает спецификации совпадений для указанного события трассировки ( &lt;code&gt;send&lt;/code&gt; или &lt;code&gt;'receive'&lt;/code&gt; ). Он вернется к поведению по умолчанию, отслеживая все инициированные события.</target>
        </trans-unit>
        <trans-unit id="4c77841076843635a1a94dc794341ef980b21d96" translate="yes" xml:space="preserve">
          <source>This function connects the socket to the address specied by the &lt;code&gt;SockAddr&lt;/code&gt; argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6638616d01daa0310e5374bdd67d7c94f4479869" translate="yes" xml:space="preserve">
          <source>This function controls if user tags are to be spread to other processes with the next message. Spreading of user tags work like spreading of sequential trace tokens, so that a received user tag will be active in the process until the next message arrives (if that message does not also contain the user tag.</source>
          <target state="translated">Эта функция контролирует,будут ли пользовательские теги распространяться на другие процессы со следующим сообщением.Распространение пользовательских тегов работает как распространение последовательных токенов трассы,так что полученный тег пользователя будет активен в процессе до тех пор,пока не поступит следующее сообщение (если это сообщение также не содержит тег пользователя).</target>
        </trans-unit>
        <trans-unit id="3f633655709ac9db491c14cd930f2f22fb70ea32" translate="yes" xml:space="preserve">
          <source>This function creates a trace port generating &lt;strong&gt;fun&lt;/strong&gt;. The &lt;strong&gt;fun&lt;/strong&gt; takes no arguments and returns a newly opened trace port. The return value from this function is suitable as a second parameter to tracer/2, i.e. &lt;code&gt;dbg:tracer(port, dbg:trace_port(ip, 4711))&lt;/code&gt;.</source>
          <target state="translated">Эта функция создает порт трассировки, генерирующий &lt;strong&gt;удовольствие&lt;/strong&gt; . &lt;strong&gt;Забава&lt;/strong&gt; не принимает никаких аргументов и возвращает вновь открытый порт трассировки. Возвращаемое этой функцией значение подходит в качестве второго параметра для tracer / 2, т.е. &lt;code&gt;dbg:tracer(port, dbg:trace_port(ip, 4711))&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c39c3cc91bfce26f7b990777dc0e4b36098e14e8" translate="yes" xml:space="preserve">
          <source>This function destructively update the object with key &lt;code&gt;Key&lt;/code&gt; in table &lt;code&gt;Tab&lt;/code&gt; by adding &lt;code&gt;Incr&lt;/code&gt; to the element at position &lt;code&gt;Pos&lt;/code&gt;. The new counter value is returned. If no position is specified, the element directly following key (&lt;code&gt;&amp;lt;keypos&amp;gt;+1&lt;/code&gt;) is updated.</source>
          <target state="translated">Эта функция деструктивно обновляет объект с помощью клавиши &lt;code&gt;Key&lt;/code&gt; в таблице &lt;code&gt;Tab&lt;/code&gt; , добавляя &lt;code&gt;Incr&lt;/code&gt; к элементу в позиции &lt;code&gt;Pos&lt;/code&gt; . Возвращается новое значение счетчика. Если позиция не указана, обновляется элемент, следующий за клавишей ( &lt;code&gt;&amp;lt;keypos&amp;gt;+1&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="ae92bc5423506c0c5495964ace9028451dd49af5" translate="yes" xml:space="preserve">
          <source>This function destructively updates the object with key &lt;code&gt;Key&lt;/code&gt; in table &lt;code&gt;Tab&lt;/code&gt;. The element at position &lt;code&gt;Pos&lt;/code&gt; is given the value &lt;code&gt;Value&lt;/code&gt;.</source>
          <target state="translated">Эта функция деструктивно обновляет объект с помощью клавиши &lt;code&gt;Key&lt;/code&gt; в таблице &lt;code&gt;Tab&lt;/code&gt; . Элементу в позиции &lt;code&gt;Pos&lt;/code&gt; присваивается значение &lt;code&gt;Value&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4dbc5b017b8dfa31be93dfdf684be5e007a7e9bb" translate="yes" xml:space="preserve">
          <source>This function determines the set of modules to compile and the compile options to use, by first looking for the &lt;code&gt;emake&lt;/code&gt; make option, if not present reads the configuration from a file named &lt;code&gt;Emakefile&lt;/code&gt; (see below). If no such file is found, the set of modules to compile defaults to all modules in the current working directory.</source>
          <target state="translated">Эта функция определяет набор модулей для компиляции и используемые параметры компиляции, сначала ища параметр &lt;code&gt;emake&lt;/code&gt; make, если он отсутствует, считывает конфигурацию из файла с именем &lt;code&gt;Emakefile&lt;/code&gt; (см. Ниже). Если такой файл не найден, набор модулей для компиляции по умолчанию используется для всех модулей в текущем рабочем каталоге.</target>
        </trans-unit>
        <trans-unit id="64faa483024d3289527baea651fb01006a7adc8e" translate="yes" xml:space="preserve">
          <source>This function disables call tracing on the specified functions. The semantics of the parameter is the same as for the corresponding function specification in &lt;code&gt;&lt;a href=&quot;#tp-2&quot;&gt;tp/2&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#tpl-2&quot;&gt;tpl/2&lt;/a&gt;&lt;/code&gt;. Both local and global call trace is disabled.</source>
          <target state="translated">Эта функция отключает трассировку вызовов для указанных функций. Семантика параметра такая же, как и для соответствующей спецификации функции в &lt;code&gt;&lt;a href=&quot;#tp-2&quot;&gt;tp/2&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;#tpl-2&quot;&gt;tpl/2&lt;/a&gt;&lt;/code&gt; . Локальная и глобальная трассировка вызовов отключена.</target>
        </trans-unit>
        <trans-unit id="730e9eafa28a60b99c0ff8551559f6cf3f087431" translate="yes" xml:space="preserve">
          <source>This function does not address the problem of a deadlock. A deadlock can never occur as long as processes only lock one resource at a time. A deadlock can occur if some processes try to lock two or more resources. It is up to the application to detect and rectify a deadlock.</source>
          <target state="translated">Эта функция не решает проблему тупика.Тупик не может возникнуть до тех пор,пока процессы блокируют только один ресурс одновременно.Тупик может возникнуть,если некоторые процессы пытаются заблокировать два или более ресурса.Обнаружить и устранить тупиковую ситуацию-дело приложения.</target>
        </trans-unit>
        <trans-unit id="35227fc1f3835cb57763b0f1a4bfacec807769bc" translate="yes" xml:space="preserve">
          <source>This function does not return. It handles the system message and then either calls the following if process execution is to continue:</source>
          <target state="translated">Эта функция не возвращается.Она обрабатывает системное сообщение,а затем либо вызывает следующее,если необходимо продолжить выполнение процесса:</target>
        </trans-unit>
        <trans-unit id="0b16f3df149c3928770bb6f3facb54e082bb7a4e" translate="yes" xml:space="preserve">
          <source>This function does the same as (and does call) the &lt;code&gt; hibernate/3&lt;/code&gt; BIF, but ensures that exception handling and logging continues to work as expected when the process wakes up.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faacbdb3dacf5784f01df9011f0ba223b7d60c23" translate="yes" xml:space="preserve">
          <source>This function does the same as (and does call) the &lt;code&gt;hibernate/3&lt;/code&gt; BIF, but ensures that exception handling and logging continues to work as expected when the process wakes up.</source>
          <target state="translated">Эта функция делает то же самое (и вызывает) &lt;code&gt;hibernate/3&lt;/code&gt; BIF, но гарантирует, что обработка исключений и ведение журнала продолжают работать должным образом, когда процесс просыпается.</target>
        </trans-unit>
        <trans-unit id="36733f4f0e4a47c473ebe622e8727d51028dd793" translate="yes" xml:space="preserve">
          <source>This function enables call trace for one or more functions. All exported functions matching the &lt;code&gt;{Module, Function, Arity}&lt;/code&gt; argument will be concerned, but the &lt;code&gt;match_spec()&lt;/code&gt; may further narrow down the set of function calls generating trace messages.</source>
          <target state="translated">Эта функция позволяет отслеживать вызовы для одной или нескольких функций. Будут затронуты все экспортируемые функции, соответствующие аргументу &lt;code&gt;{Module, Function, Arity}&lt;/code&gt; , но &lt;code&gt;match_spec()&lt;/code&gt; может еще больше сузить набор вызовов функций, генерирующих сообщения трассировки.</target>
        </trans-unit>
        <trans-unit id="368666e6ad2867a60cda73d9bf0c86e3149c145a" translate="yes" xml:space="preserve">
          <source>This function ensures that the results displayed by &lt;code&gt;analyze/0,1,2&lt;/code&gt; are printed both to the file &lt;code&gt;File&lt;/code&gt; and the screen.</source>
          <target state="translated">Эта функция гарантирует, что результаты, отображаемые методом &lt;code&gt;analyze/0,1,2&lt;/code&gt; будут распечатаны как в файл &lt;code&gt;File&lt;/code&gt; ,так и на экран.</target>
        </trans-unit>
        <trans-unit id="1a7330bbeab182a749c3e5f5deba94d5a86ea474" translate="yes" xml:space="preserve">
          <source>This function extracts the initial call of a process that was started using one of the spawn or start functions in this module, and translates it to more useful information. &lt;code&gt;Process&lt;/code&gt; can either be a pid, an integer tuple (from which a pid can be created), or the process information of a process &lt;code&gt;Pid&lt;/code&gt; fetched through an &lt;code&gt;erlang:process_info(Pid)&lt;/code&gt; function call.</source>
          <target state="translated">Эта функция извлекает начальный вызов процесса, который был запущен с использованием одной из функций порождения или запуска в этом модуле, и преобразует его в более полезную информацию. &lt;code&gt;Process&lt;/code&gt; может быть либо pid, либо целочисленным кортежем (из которого может быть создан pid), либо информацией процесса &lt;code&gt;Pid&lt;/code&gt; процесса, полученной посредством вызова функции &lt;code&gt;erlang:process_info(Pid)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0051f23484a69ef2e8f6f7524656de38ffd28765" translate="yes" xml:space="preserve">
          <source>This function fail with a &lt;code&gt;badarg&lt;/code&gt; exception if &lt;code&gt;ReqId&lt;/code&gt; is not a reference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e682f273c8e96989f5d96e73eb77713bc1444f02" translate="yes" xml:space="preserve">
          <source>This function fails if the atom is too long for the buffer or if it cannot be represented with encoding &lt;code&gt;want&lt;/code&gt;.</source>
          <target state="translated">Эта функция не работает, если атом слишком длинный для буфера или если он не может быть представлен с &lt;code&gt;want&lt;/code&gt; кодировкой .</target>
        </trans-unit>
        <trans-unit id="83106e1343a863599453b8ae91e66534e53d1ef0" translate="yes" xml:space="preserve">
          <source>This function fails with a &lt;code&gt;badarg&lt;/code&gt; exception if no term has been stored with the key &lt;code&gt;Key&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0da14902361aba9b7fcf3f2ac32b625e0ac51f73" translate="yes" xml:space="preserve">
          <source>This function first attempts to autoload &lt;code&gt;Module&lt;/code&gt;. If that is not possible, an &lt;code&gt;undef&lt;/code&gt; exception is raised.</source>
          <target state="translated">Эта функция сначала пытается автозагрузить &lt;code&gt;Module&lt;/code&gt; . Если это невозможно, возникает исключение &lt;code&gt;undef&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2d26740fa881de95c3af6c29ab8da1324a33cbdf" translate="yes" xml:space="preserve">
          <source>This function first spawns a process &lt;code&gt;P&lt;/code&gt; which evaluates &lt;code&gt;Fun()&lt;/code&gt; or &lt;code&gt;apply(Module,Function,Args)&lt;/code&gt;. Then, it starts profiling for &lt;code&gt;P&lt;/code&gt; and the processes in &lt;code&gt;Rootset&lt;/code&gt; (and any new processes spawned from them). Information about activity in any profiled process is stored in the Eprof database.</source>
          <target state="translated">Эта функция сначала порождает процесс &lt;code&gt;P&lt;/code&gt; , который оценивает &lt;code&gt;Fun()&lt;/code&gt; или &lt;code&gt;apply(Module,Function,Args)&lt;/code&gt; . Затем он начинает профилирование &lt;code&gt;P&lt;/code&gt; и процессов в &lt;code&gt;Rootset&lt;/code&gt; (и любых новых процессов, порожденных из них). Информация об активности в любом профилированном процессе хранится в базе данных Eprof.</target>
        </trans-unit>
        <trans-unit id="a51eb8328b3ca7e73bd2ddec9c6cd1f1f6bce2fa" translate="yes" xml:space="preserve">
          <source>This function generates a &lt;code&gt;not_implemented&lt;/code&gt; error exception when the jump function is not implemented for the algorithm specified in the state in the process dictionary.</source>
          <target state="translated">Эта функция генерирует &lt;code&gt;not_implemented&lt;/code&gt; ошибки not_implemented, когда функция перехода не реализована для алгоритма, указанного в состоянии в словаре процесса.</target>
        </trans-unit>
        <trans-unit id="886d1bea974ef611ef862bdf736eeb1b8ee5deb0" translate="yes" xml:space="preserve">
          <source>This function generates a &lt;code&gt;not_implemented&lt;/code&gt; error exception when the jump function is not implemented for the algorithm specified in the state.</source>
          <target state="translated">Эта функция генерирует &lt;code&gt;not_implemented&lt;/code&gt; ошибки not_implemented, когда функция перехода не реализована для алгоритма, указанного в состоянии.</target>
        </trans-unit>
        <trans-unit id="6058a385a21e4246b670869f65aa6fd981a5a8b7" translate="yes" xml:space="preserve">
          <source>This function has limited use in normal code. It is used by the &lt;code&gt;&lt;a href=&quot;dets&quot;&gt;dets&lt;/a&gt;&lt;/code&gt; module to perform the &lt;code&gt;dets:select()&lt;/code&gt; operations and by Mnesia during transactions.</source>
          <target state="translated">Эта функция имеет ограниченное использование в обычном коде. Он используется модулем &lt;code&gt;&lt;a href=&quot;dets&quot;&gt;dets&lt;/a&gt;&lt;/code&gt; для выполнения &lt;code&gt;dets:select()&lt;/code&gt; и Mnesia во время транзакций.</target>
        </trans-unit>
        <trans-unit id="523fd33cf3afa46e759133c868d60920d18b1dc7" translate="yes" xml:space="preserve">
          <source>This function has limited use in normal code. It is used by the &lt;code&gt;&lt;a href=&quot;dets&quot;&gt;dets&lt;/a&gt;&lt;/code&gt; module to perform the &lt;code&gt;dets:select()&lt;/code&gt; operations.</source>
          <target state="translated">Эта функция имеет ограниченное использование в обычном коде. Он используется модулем &lt;code&gt;&lt;a href=&quot;dets&quot;&gt;dets&lt;/a&gt;&lt;/code&gt; для выполнения &lt;code&gt;dets:select()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d58459e2ceed77eb8305bceed246e818de9ca01c" translate="yes" xml:space="preserve">
          <source>This function implements case normalization, percent-encoding normalization, path segment normalization and scheme based normalization for HTTP(S) with basic support for FTP, SSH, SFTP and TFTP.</source>
          <target state="translated">Эта функция реализует нормализацию случая,нормализацию процента кодирования,нормализацию сегмента пути и нормализацию на основе схемы для HTTP(S)с базовой поддержкой FTP,SSH,SFTP и TFTP.</target>
        </trans-unit>
        <trans-unit id="c8514d81ff22e1ff67620750cdc3dfb27e9e6f77" translate="yes" xml:space="preserve">
          <source>This function initiates the DBMS locally.</source>
          <target state="translated">Данная функция инициирует СУБД локально.</target>
        </trans-unit>
        <trans-unit id="57afe95d276fab56b0cc11453585653b09b00be9" translate="yes" xml:space="preserve">
          <source>This function investigates if support is available for either &lt;code&gt;&lt;a href=&quot;http://www.quviq.com&quot;&gt;QuickCheck&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://proper-testing.github.io&quot;&gt;PropEr&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;https://github.com/krestenkrab/triq&quot;&gt;Triq&lt;/a&gt;&lt;/code&gt; and compiles the properties with the first tool found. It is supposed to be called in the &lt;code&gt;init_per_suite/1&lt;/code&gt; function in a CommonTest test suite.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcbc273861fed1e51bf947867b1a084c27622209" translate="yes" xml:space="preserve">
          <source>This function investigates if support is available for either Quickcheck, PropEr, or Triq. The options &lt;code&gt;{property_dir,AbsPath}&lt;/code&gt; and &lt;code&gt;{property_test_tool,Tool}&lt;/code&gt; are set in the &lt;code&gt;Config&lt;/code&gt; returned.</source>
          <target state="translated">Эта функция проверяет, доступна ли поддержка для Quickcheck, PropEr или Triq. Параметры &lt;code&gt;{property_dir,AbsPath}&lt;/code&gt; и &lt;code&gt;{property_test_tool,Tool}&lt;/code&gt; устанавливаются в возвращаемой &lt;code&gt;Config&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6a7d3a4b7f3328d175ce6a9a9eb8e20886f3bda3" translate="yes" xml:space="preserve">
          <source>This function is &lt;code&gt;&lt;a href=&quot;#oldapi&quot;&gt;obsolete&lt;/a&gt;&lt;/code&gt; use &lt;code&gt;&lt;a href=&quot;#lowercase-1&quot;&gt;lowercase/1&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#uppercase-1&quot;&gt;uppercase/1&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#titlecase-1&quot;&gt;titlecase/1&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#casefold-1&quot;&gt;casefold/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эта функция &lt;code&gt;&lt;a href=&quot;#oldapi&quot;&gt;obsolete&lt;/a&gt;&lt;/code&gt; используйте &lt;code&gt;&lt;a href=&quot;#lowercase-1&quot;&gt;lowercase/1&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#uppercase-1&quot;&gt;uppercase/1&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#titlecase-1&quot;&gt;titlecase/1&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;#casefold-1&quot;&gt;casefold/1&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="423ca16d197ccc978bd5081d6b3eb1c403bc0744" translate="yes" xml:space="preserve">
          <source>This function is &lt;code&gt;&lt;a href=&quot;#oldapi&quot;&gt;obsolete&lt;/a&gt;&lt;/code&gt;. Use &lt;code&gt;&lt;a href=&quot;#find-2&quot;&gt;find/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эта функция &lt;code&gt;&lt;a href=&quot;#oldapi&quot;&gt;obsolete&lt;/a&gt;&lt;/code&gt; . Используйте &lt;code&gt;&lt;a href=&quot;#find-2&quot;&gt;find/2&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2a516abdfc30d7c9e3685abf6e57bb1e1d0b658e" translate="yes" xml:space="preserve">
          <source>This function is &lt;code&gt;&lt;a href=&quot;#oldapi&quot;&gt;obsolete&lt;/a&gt;&lt;/code&gt;. Use &lt;code&gt;&lt;a href=&quot;#find-3&quot;&gt;find/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эта функция &lt;code&gt;&lt;a href=&quot;#oldapi&quot;&gt;obsolete&lt;/a&gt;&lt;/code&gt; . Используйте &lt;code&gt;&lt;a href=&quot;#find-3&quot;&gt;find/3&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="52d494db0c1567d04ee40812bdffbefd6c016473" translate="yes" xml:space="preserve">
          <source>This function is &lt;code&gt;&lt;a href=&quot;#oldapi&quot;&gt;obsolete&lt;/a&gt;&lt;/code&gt;. Use &lt;code&gt;&lt;a href=&quot;#length-1&quot;&gt;length/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эта функция &lt;code&gt;&lt;a href=&quot;#oldapi&quot;&gt;obsolete&lt;/a&gt;&lt;/code&gt; . Используйте &lt;code&gt;&lt;a href=&quot;#length-1&quot;&gt;length/1&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ab94cedb464e4260389af7be6dfaf6ffb7bd2291" translate="yes" xml:space="preserve">
          <source>This function is &lt;code&gt;&lt;a href=&quot;#oldapi&quot;&gt;obsolete&lt;/a&gt;&lt;/code&gt;. Use &lt;code&gt;&lt;a href=&quot;#lexemes-2&quot;&gt;lexemes/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эта функция &lt;code&gt;&lt;a href=&quot;#oldapi&quot;&gt;obsolete&lt;/a&gt;&lt;/code&gt; . Используйте &lt;code&gt;&lt;a href=&quot;#lexemes-2&quot;&gt;lexemes/2&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="205cdd304fd7174c14274c85d2328b2a17ae0a9e" translate="yes" xml:space="preserve">
          <source>This function is &lt;code&gt;&lt;a href=&quot;#oldapi&quot;&gt;obsolete&lt;/a&gt;&lt;/code&gt;. Use &lt;code&gt;&lt;a href=&quot;#nth_lexeme-3&quot;&gt;nth_lexeme/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эта функция &lt;code&gt;&lt;a href=&quot;#oldapi&quot;&gt;obsolete&lt;/a&gt;&lt;/code&gt; . Используйте &lt;code&gt;&lt;a href=&quot;#nth_lexeme-3&quot;&gt;nth_lexeme/3&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ef02bd0b5153d37d1fa93514bd445ad29bc64930" translate="yes" xml:space="preserve">
          <source>This function is &lt;code&gt;&lt;a href=&quot;#oldapi&quot;&gt;obsolete&lt;/a&gt;&lt;/code&gt;. Use &lt;code&gt;&lt;a href=&quot;#pad-2&quot;&gt;pad/2&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#pad-3&quot;&gt;pad/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эта функция &lt;code&gt;&lt;a href=&quot;#oldapi&quot;&gt;obsolete&lt;/a&gt;&lt;/code&gt; . Используйте &lt;code&gt;&lt;a href=&quot;#pad-2&quot;&gt;pad/2&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;#pad-3&quot;&gt;pad/3&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ba5aba1911d9f1f71e6680b8d5f950e286eccad6" translate="yes" xml:space="preserve">
          <source>This function is &lt;code&gt;&lt;a href=&quot;#oldapi&quot;&gt;obsolete&lt;/a&gt;&lt;/code&gt;. Use &lt;code&gt;&lt;a href=&quot;#pad-3&quot;&gt;pad/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эта функция &lt;code&gt;&lt;a href=&quot;#oldapi&quot;&gt;obsolete&lt;/a&gt;&lt;/code&gt; . Используйте &lt;code&gt;&lt;a href=&quot;#pad-3&quot;&gt;pad/3&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0297c83560fb40b3e25160700b963d4d28d8cb3d" translate="yes" xml:space="preserve">
          <source>This function is &lt;code&gt;&lt;a href=&quot;#oldapi&quot;&gt;obsolete&lt;/a&gt;&lt;/code&gt;. Use &lt;code&gt;&lt;a href=&quot;#slice-3&quot;&gt;slice/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эта функция &lt;code&gt;&lt;a href=&quot;#oldapi&quot;&gt;obsolete&lt;/a&gt;&lt;/code&gt; . Используйте &lt;code&gt;&lt;a href=&quot;#slice-3&quot;&gt;slice/3&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9483920738b267719838628a8df6eae176da3415" translate="yes" xml:space="preserve">
          <source>This function is &lt;code&gt;&lt;a href=&quot;#oldapi&quot;&gt;obsolete&lt;/a&gt;&lt;/code&gt;. Use &lt;code&gt;&lt;a href=&quot;#take-2&quot;&gt;take/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эта функция &lt;code&gt;&lt;a href=&quot;#oldapi&quot;&gt;obsolete&lt;/a&gt;&lt;/code&gt; . Используйте &lt;code&gt;&lt;a href=&quot;#take-2&quot;&gt;take/2&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="29b69004da0d2e1742321c5e08d6472bd345f1bd" translate="yes" xml:space="preserve">
          <source>This function is &lt;code&gt;&lt;a href=&quot;#oldapi&quot;&gt;obsolete&lt;/a&gt;&lt;/code&gt;. Use &lt;code&gt;&lt;a href=&quot;#take-3&quot;&gt;take/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эта функция &lt;code&gt;&lt;a href=&quot;#oldapi&quot;&gt;obsolete&lt;/a&gt;&lt;/code&gt; . Используйте &lt;code&gt;&lt;a href=&quot;#take-3&quot;&gt;take/3&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b1fca9e1ff35bcfc01c17bd46889f3070478dc5b" translate="yes" xml:space="preserve">
          <source>This function is &lt;code&gt;&lt;a href=&quot;#oldapi&quot;&gt;obsolete&lt;/a&gt;&lt;/code&gt;. Use &lt;code&gt;&lt;a href=&quot;#trim-3&quot;&gt;trim/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эта функция &lt;code&gt;&lt;a href=&quot;#oldapi&quot;&gt;obsolete&lt;/a&gt;&lt;/code&gt; . Используйте &lt;code&gt;&lt;a href=&quot;#trim-3&quot;&gt;trim/3&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="206343ba93558e03d83b7d9b6041c45a9f4e4762" translate="yes" xml:space="preserve">
          <source>This function is &lt;code&gt;&lt;a href=&quot;#oldapi&quot;&gt;obsolete&lt;/a&gt;&lt;/code&gt;. Use &lt;code&gt;&lt;a href=&quot;lists#duplicate-2&quot;&gt;lists:duplicate/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эта функция &lt;code&gt;&lt;a href=&quot;#oldapi&quot;&gt;obsolete&lt;/a&gt;&lt;/code&gt; . &lt;code&gt;&lt;a href=&quot;lists#duplicate-2&quot;&gt;lists:duplicate/2&lt;/a&gt;&lt;/code&gt; использования : дубликат / 2 .</target>
        </trans-unit>
        <trans-unit id="bdc288f4c8566ab96ad5a3c012d039a6f14b114d" translate="yes" xml:space="preserve">
          <source>This function is &lt;code&gt;&lt;a href=&quot;#oldapi&quot;&gt;obsolete&lt;/a&gt;&lt;/code&gt;. Use &lt;code&gt;&lt;a href=&quot;lists#join-2&quot;&gt;lists:join/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эта функция &lt;code&gt;&lt;a href=&quot;#oldapi&quot;&gt;obsolete&lt;/a&gt;&lt;/code&gt; . &lt;code&gt;&lt;a href=&quot;lists#join-2&quot;&gt;lists:join/2&lt;/a&gt;&lt;/code&gt; использования : присоединиться / 2 .</target>
        </trans-unit>
        <trans-unit id="ad0121ab408cec82bbe0b526be72140c81e0eb43" translate="yes" xml:space="preserve">
          <source>This function is &lt;code&gt;&lt;a href=&quot;#oldapi&quot;&gt;obsolete&lt;/a&gt;&lt;/code&gt;. Use &lt;code&gt;[String1, String2]&lt;/code&gt; as &lt;code&gt;Data&lt;/code&gt; argument, and call &lt;code&gt;&lt;a href=&quot;unicode#characters_to_list-2&quot;&gt; unicode:characters_to_list/2&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;unicode#characters_to_binary-2&quot;&gt; unicode:characters_to_binary/2&lt;/a&gt;&lt;/code&gt; to flatten the output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be41039c1c345076e4346d099bd59b24ee69b28b" translate="yes" xml:space="preserve">
          <source>This function is &lt;code&gt;&lt;a href=&quot;#oldapi&quot;&gt;obsolete&lt;/a&gt;&lt;/code&gt;. Use &lt;code&gt;[String1, String2]&lt;/code&gt; as &lt;code&gt;Data&lt;/code&gt; argument, and call &lt;code&gt;&lt;a href=&quot;unicode#characters_to_list-2&quot;&gt;unicode:characters_to_list/2&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;unicode#characters_to_binary-2&quot;&gt;unicode:characters_to_binary/2&lt;/a&gt;&lt;/code&gt; to flatten the output.</source>
          <target state="translated">Эта функция &lt;code&gt;&lt;a href=&quot;#oldapi&quot;&gt;obsolete&lt;/a&gt;&lt;/code&gt; . Используйте &lt;code&gt;[String1, String2]&lt;/code&gt; качестве аргумента &lt;code&gt;Data&lt;/code&gt; и вызовите &lt;code&gt;&lt;a href=&quot;unicode#characters_to_list-2&quot;&gt;unicode:characters_to_list/2&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;unicode#characters_to_binary-2&quot;&gt;unicode:characters_to_binary/2&lt;/a&gt;&lt;/code&gt; , чтобы сгладить вывод.</target>
        </trans-unit>
        <trans-unit id="0fe0ff73852f97430972aade26b365aeb9d4dcca" translate="yes" xml:space="preserve">
          <source>This function is &lt;strong&gt;not&lt;/strong&gt; to have any side effects, as it can be called multiple times by &lt;code&gt;Common Test&lt;/code&gt;.</source>
          <target state="translated">Эта функция &lt;strong&gt;не&lt;/strong&gt; должна иметь никаких побочных эффектов, так как &lt;code&gt;Common Test&lt;/code&gt; может вызывать ее несколько раз .</target>
        </trans-unit>
        <trans-unit id="d1601bc7321a92135715173d0e057687db27b297" translate="yes" xml:space="preserve">
          <source>This function is &lt;strong&gt;only&lt;/strong&gt; intended to be used from functions called by the Erl Scheme interface to deliver parts of the content to the user.</source>
          <target state="translated">Эта функция предназначена &lt;strong&gt;только&lt;/strong&gt; для использования из функций, вызываемых интерфейсом Erl Scheme для доставки частей содержимого пользователю.</target>
        </trans-unit>
        <trans-unit id="c89b38cb90d4a8e0a8fc69ed167ebc21578ef61c" translate="yes" xml:space="preserve">
          <source>This function is a convenience function that calls &lt;code&gt;&lt;a href=&quot;#set_module_level-2&quot;&gt;logger:set_module_level/2&lt;/a&gt;&lt;/code&gt; for each module associated with an application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d39ae8bfc4be5823eb01c3edca7562d0f24640b9" translate="yes" xml:space="preserve">
          <source>This function is a convinience function that calls &lt;code&gt;&lt;a href=&quot;#unset_module_level-1&quot;&gt;logger:unset_module_level/2&lt;/a&gt;&lt;/code&gt; for each module associated with an application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aef47781d467db25a7963a68f242afbbc794ce0b" translate="yes" xml:space="preserve">
          <source>This function is a shortcut allowing to start a trace with one command. Each tuple in &lt;code&gt;Patterns&lt;/code&gt; is converted to a list, which in turn is passed to &lt;code&gt;ttb:tpl/2,3,4&lt;/code&gt;.</source>
          <target state="translated">Эта функция представляет собой ярлык, позволяющий запустить трассировку одной командой. Каждый кортеж в &lt;code&gt;Patterns&lt;/code&gt; преобразуется в список, который, в свою очередь, передается в &lt;code&gt;ttb:tpl/2,3,4&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b43d5979e9394159963538ec618354c0f2550802" translate="yes" xml:space="preserve">
          <source>This function is a utility to test a &lt;code&gt;&lt;a href=&quot;#match_spec&quot;&gt;match specification&lt;/a&gt;&lt;/code&gt; used in calls to &lt;code&gt;&lt;a href=&quot;#select-2&quot;&gt;select/2&lt;/a&gt;&lt;/code&gt;. The function both tests &lt;code&gt;MatchSpec&lt;/code&gt; for &quot;syntactic&quot; correctness and runs the match specification against object &lt;code&gt;Tuple&lt;/code&gt;.</source>
          <target state="translated">Эта функция представляет собой служебную программу для проверки &lt;code&gt;&lt;a href=&quot;#match_spec&quot;&gt;match specification&lt;/a&gt;&lt;/code&gt; используемой в вызовах &lt;code&gt;&lt;a href=&quot;#select-2&quot;&gt;select/2&lt;/a&gt;&lt;/code&gt; . Функция проверяет &lt;code&gt;MatchSpec&lt;/code&gt; на &amp;laquo;синтаксическую&amp;raquo; правильность и запускает спецификацию сопоставления для объекта &lt;code&gt;Tuple&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d988191fa0dabe515db4af812656eff83c34cb63" translate="yes" xml:space="preserve">
          <source>This function is always called before any other callback function. Use it to initiate any common state. It is to return a state for this CTH.</source>
          <target state="translated">Эта функция всегда вызывается перед любой другой функцией обратного вызова.Используйте ее для инициирования любого общего состояния.Она возвращает состояние для этого CTH.</target>
        </trans-unit>
        <trans-unit id="b516bc2e9034c1590527ec443de2c6737bcd4f59" translate="yes" xml:space="preserve">
          <source>This function is asynchronous, and does not return any information. If an error occurs, &lt;code&gt;user_err/2&lt;/code&gt; of the error report module is called and the notification is discarded.</source>
          <target state="translated">Эта функция асинхронна и не возвращает никакой информации. При возникновении ошибки &lt;code&gt;user_err/2&lt;/code&gt; модуля отчета об ошибках, и уведомление отбрасывается.</target>
        </trans-unit>
        <trans-unit id="85c98f3d29d4a07045be121e9e487541dab759e4" translate="yes" xml:space="preserve">
          <source>This function is automatically run by program &lt;code&gt;ct_run&lt;/code&gt;.</source>
          <target state="translated">Эта функция автоматически запускается программой &lt;code&gt;ct_run&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3279d0d6b02338f13c8bc53782a187d1879ee456" translate="yes" xml:space="preserve">
          <source>This function is called after &lt;code&gt;&lt;a href=&quot;common_test#Module:end_per_group-2&quot;&gt;end_per_group&lt;/a&gt;&lt;/code&gt; if it exists. It behaves the same way as &lt;code&gt;&lt;a href=&quot;ct_hooks#Module:post_init_per_suite-4&quot;&gt;post_init_per_suite&lt;/a&gt;&lt;/code&gt;, but for function &lt;code&gt;&lt;a href=&quot;common_test#Module:end_per_group-2&quot;&gt;end_per_group&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">Эта функция вызывается после &lt;code&gt;&lt;a href=&quot;common_test#Module:end_per_group-2&quot;&gt;end_per_group&lt;/a&gt;&lt;/code&gt; , если она существует. Он ведет себя так же, как &lt;code&gt;&lt;a href=&quot;ct_hooks#Module:post_init_per_suite-4&quot;&gt;post_init_per_suite&lt;/a&gt;&lt;/code&gt; , но вместо этого для функции &lt;code&gt;&lt;a href=&quot;common_test#Module:end_per_group-2&quot;&gt;end_per_group&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9188edb1cc0ebdde86ffdb4193d6c9cead6cb834" translate="yes" xml:space="preserve">
          <source>This function is called after &lt;code&gt;&lt;a href=&quot;common_test#Module:end_per_suite-1&quot;&gt;end_per_suite&lt;/a&gt;&lt;/code&gt; if it exists. It behaves the same way as &lt;code&gt;&lt;a href=&quot;ct_hooks#Module:post_init_per_suite-4&quot;&gt;post_init_per_suite&lt;/a&gt;&lt;/code&gt;, but for function &lt;code&gt;&lt;a href=&quot;common_test#Module:end_per_suite-1&quot;&gt;end_per_suite&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">Эта функция вызывается после &lt;code&gt;&lt;a href=&quot;common_test#Module:end_per_suite-1&quot;&gt;end_per_suite&lt;/a&gt;&lt;/code&gt; , если она существует. Он ведет себя так же, как &lt;code&gt;&lt;a href=&quot;ct_hooks#Module:post_init_per_suite-4&quot;&gt;post_init_per_suite&lt;/a&gt;&lt;/code&gt; , но вместо этого для функции &lt;code&gt;&lt;a href=&quot;common_test#Module:end_per_suite-1&quot;&gt;end_per_suite&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5632d3f19a46e6a63364561ccdcd84c5cbd07239" translate="yes" xml:space="preserve">
          <source>This function is called after &lt;code&gt;&lt;a href=&quot;common_test#Module:end_per_testcase-2&quot;&gt;end_per_testcase&lt;/a&gt;&lt;/code&gt; if it exists. It behaves the same way as &lt;code&gt;&lt;a href=&quot;ct_hooks#Module:post_end_per_suite-4&quot;&gt;post_end_per_suite&lt;/a&gt;&lt;/code&gt;, but for function &lt;code&gt;&lt;a href=&quot;common_test#Module:end_per_testcase-2&quot;&gt;end_per_testcase&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">Эта функция вызывается после &lt;code&gt;&lt;a href=&quot;common_test#Module:end_per_testcase-2&quot;&gt;end_per_testcase&lt;/a&gt;&lt;/code&gt; , если он существует. Он ведет себя так же, как &lt;code&gt;&lt;a href=&quot;ct_hooks#Module:post_end_per_suite-4&quot;&gt;post_end_per_suite&lt;/a&gt;&lt;/code&gt; , но вместо этого для функции &lt;code&gt;&lt;a href=&quot;common_test#Module:end_per_testcase-2&quot;&gt;end_per_testcase&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ed2c8cbf6eea27fe25c9e2e37745c13758f418bf" translate="yes" xml:space="preserve">
          <source>This function is called after &lt;code&gt;&lt;a href=&quot;common_test#Module:init_per_group-2&quot;&gt;init_per_group&lt;/a&gt;&lt;/code&gt; if it exists. It behaves the same way as &lt;code&gt;&lt;a href=&quot;ct_hooks#Module:post_init_per_suite-4&quot;&gt;post_init_per_suite&lt;/a&gt;&lt;/code&gt;, but for function &lt;code&gt;&lt;a href=&quot;common_test#Module:init_per_group-2&quot;&gt;init_per_group&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">Эта функция вызывается после &lt;code&gt;&lt;a href=&quot;common_test#Module:init_per_group-2&quot;&gt;init_per_group&lt;/a&gt;&lt;/code&gt; , если она существует. Он ведет себя так же, как &lt;code&gt;&lt;a href=&quot;ct_hooks#Module:post_init_per_suite-4&quot;&gt;post_init_per_suite&lt;/a&gt;&lt;/code&gt; , но вместо этого для функции &lt;code&gt;&lt;a href=&quot;common_test#Module:init_per_group-2&quot;&gt;init_per_group&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eeb41891de5f47fa39556ecfa785a92f82d5ca45" translate="yes" xml:space="preserve">
          <source>This function is called after &lt;code&gt;&lt;a href=&quot;common_test#Module:init_per_suite-1&quot;&gt;init_per_suite&lt;/a&gt;&lt;/code&gt; if it exists. It typically contains extra checks to ensure that all the correct dependencies are started correctly.</source>
          <target state="translated">Эта функция вызывается после &lt;code&gt;&lt;a href=&quot;common_test#Module:init_per_suite-1&quot;&gt;init_per_suite&lt;/a&gt;&lt;/code&gt; , если она существует. Обычно он содержит дополнительные проверки, чтобы убедиться, что все правильные зависимости запущены правильно.</target>
        </trans-unit>
        <trans-unit id="ab712217cf24a26d75845255e5f1d384ed7df651" translate="yes" xml:space="preserve">
          <source>This function is called after &lt;code&gt;&lt;a href=&quot;common_test#Module:init_per_testcase-2&quot;&gt;init_per_testcase&lt;/a&gt;&lt;/code&gt; if it exists. It behaves the same way as &lt;code&gt;&lt;a href=&quot;ct_hooks#Module:post_init_per_suite-4&quot;&gt;post_init_per_suite&lt;/a&gt;&lt;/code&gt;, but for function &lt;code&gt;&lt;a href=&quot;common_test#Module:init_per_testcase-2&quot;&gt;init_per_testcase&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">Эта функция вызывается после &lt;code&gt;&lt;a href=&quot;common_test#Module:init_per_testcase-2&quot;&gt;init_per_testcase&lt;/a&gt;&lt;/code&gt; , если она существует. Он ведет себя так же, как &lt;code&gt;&lt;a href=&quot;ct_hooks#Module:post_init_per_suite-4&quot;&gt;post_init_per_suite&lt;/a&gt;&lt;/code&gt; , но вместо этого для функции &lt;code&gt;&lt;a href=&quot;common_test#Module:init_per_testcase-2&quot;&gt;init_per_testcase&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3219df17fd8b1eea0c06b8129d77d9cbe10e0bf9" translate="yes" xml:space="preserve">
          <source>This function is called after &lt;code&gt;&lt;a href=&quot;ct_suite#Module:all-0&quot;&gt;all/0&lt;/a&gt;&lt;/code&gt;. It is used to modify the set of test cases and test group to be executed, for instance to add or remove test cases and groups, change group properties, or even skip all tests in the suite.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9805b08693eb6111d0c6f22681e3bb9e3c04afab" translate="yes" xml:space="preserve">
          <source>This function is called after &lt;code&gt;&lt;a href=&quot;ct_suite#Module:end_per_group-2&quot;&gt;end_per_group&lt;/a&gt;&lt;/code&gt; if it exists. It behaves the same way as &lt;code&gt;&lt;a href=&quot;ct_hooks#Module:post_init_per_suite-4&quot;&gt;post_init_per_suite&lt;/a&gt;&lt;/code&gt;, but for function &lt;code&gt;&lt;a href=&quot;ct_suite#Module:end_per_group-2&quot;&gt;end_per_group&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2965ff805c434996c492ec9bfa82d7f12ef9f74a" translate="yes" xml:space="preserve">
          <source>This function is called after &lt;code&gt;&lt;a href=&quot;ct_suite#Module:end_per_suite-1&quot;&gt;end_per_suite&lt;/a&gt;&lt;/code&gt; if it exists. It behaves the same way as &lt;code&gt;&lt;a href=&quot;ct_hooks#Module:post_init_per_suite-4&quot;&gt;post_init_per_suite&lt;/a&gt;&lt;/code&gt;, but for function &lt;code&gt;&lt;a href=&quot;ct_suite#Module:end_per_suite-1&quot;&gt;end_per_suite&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="519b61330b5ab107e5552267a7095ddb95972fc7" translate="yes" xml:space="preserve">
          <source>This function is called after &lt;code&gt;&lt;a href=&quot;ct_suite#Module:end_per_testcase-2&quot;&gt;end_per_testcase&lt;/a&gt;&lt;/code&gt; if it exists. It behaves the same way as &lt;code&gt;&lt;a href=&quot;ct_hooks#Module:post_end_per_suite-4&quot;&gt;post_end_per_suite&lt;/a&gt;&lt;/code&gt;, but for function &lt;code&gt;&lt;a href=&quot;ct_suite#Module:end_per_testcase-2&quot;&gt;end_per_testcase&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3ff042e6f427cdbf0b138b5e0423a5307d82d20" translate="yes" xml:space="preserve">
          <source>This function is called after &lt;code&gt;&lt;a href=&quot;ct_suite#Module:groups-0&quot;&gt;groups/0&lt;/a&gt;&lt;/code&gt;. It is used to modify the test group definitions, for instance to add or remove groups or change group properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f0db9c38b62ae93794067200327fd462e7ff4fe" translate="yes" xml:space="preserve">
          <source>This function is called after &lt;code&gt;&lt;a href=&quot;ct_suite#Module:init_per_group-2&quot;&gt;init_per_group&lt;/a&gt;&lt;/code&gt; if it exists. It behaves the same way as &lt;code&gt;&lt;a href=&quot;ct_hooks#Module:post_init_per_suite-4&quot;&gt;post_init_per_suite&lt;/a&gt;&lt;/code&gt;, but for function &lt;code&gt;&lt;a href=&quot;ct_suite#Module:init_per_group-2&quot;&gt;init_per_group&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5820559120dedeb2862c70d6818189112741a21" translate="yes" xml:space="preserve">
          <source>This function is called after &lt;code&gt;&lt;a href=&quot;ct_suite#Module:init_per_suite-1&quot;&gt;init_per_suite&lt;/a&gt;&lt;/code&gt; if it exists. It typically contains extra checks to ensure that all the correct dependencies are started correctly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c20b079f55383c227fa6f9819a5bdb26e2f8e5a" translate="yes" xml:space="preserve">
          <source>This function is called after &lt;code&gt;&lt;a href=&quot;ct_suite#Module:init_per_testcase-2&quot;&gt;init_per_testcase&lt;/a&gt;&lt;/code&gt; if it exists. It behaves the same way as &lt;code&gt;&lt;a href=&quot;ct_hooks#Module:post_init_per_suite-4&quot;&gt;post_init_per_suite&lt;/a&gt;&lt;/code&gt;, but for function &lt;code&gt;&lt;a href=&quot;ct_suite#Module:init_per_testcase-2&quot;&gt;init_per_testcase&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aeda1395509b804f56af9852e8e45793868dfa12" translate="yes" xml:space="preserve">
          <source>This function is called after each test case, and can be used to clean up after &lt;code&gt;&lt;a href=&quot;#Module:init_per_testcase-2&quot;&gt;Module:init_per_testcase/2&lt;/a&gt;&lt;/code&gt; and the test case. Any return value (besides &lt;code&gt;{fail, Reason}&lt;/code&gt; and &lt;code&gt;{save_config, SaveConfig}&lt;/code&gt;) is ignored. By returning &lt;code&gt;{fail, Reason}&lt;/code&gt;, &lt;code&gt;TestCase&lt;/code&gt; is marked as faulty (even though it was successful in the sense that it returned a value instead of terminating).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac4e91297af25f1c85d719157b005b8f81db41e7" translate="yes" xml:space="preserve">
          <source>This function is called after each test case, and can be used to clean up after &lt;code&gt;&lt;a href=&quot;#Module:init_per_testcase-2&quot;&gt;init_per_testcase/2&lt;/a&gt;&lt;/code&gt; and the test case. Any return value (besides &lt;code&gt;{fail,Reason}&lt;/code&gt; and &lt;code&gt;{save_config,SaveConfig}&lt;/code&gt;) is ignored. By returning &lt;code&gt;{fail,Reason}&lt;/code&gt;, &lt;code&gt;TestCase&lt;/code&gt; is marked as faulty (even though it was successful in the sense that it returned a value instead of terminating).</source>
          <target state="translated">Эта функция вызывается после каждого тестового примера и может использоваться для очистки после &lt;code&gt;&lt;a href=&quot;#Module:init_per_testcase-2&quot;&gt;init_per_testcase/2&lt;/a&gt;&lt;/code&gt; и тестового примера. Любое возвращаемое значение (кроме &lt;code&gt;{fail,Reason}&lt;/code&gt; и &lt;code&gt;{save_config,SaveConfig}&lt;/code&gt; ) игнорируется. Возвращая &lt;code&gt;{fail,Reason}&lt;/code&gt; , &lt;code&gt;TestCase&lt;/code&gt; помечается как ошибочный (даже если он был успешным в том смысле, что он возвратил значение вместо завершения).</target>
        </trans-unit>
        <trans-unit id="7e30b5449913eda1e06199d0387c5463aed4235b" translate="yes" xml:space="preserve">
          <source>This function is called after the execution of a test case group is finished. It is meant to be used for cleaning up after &lt;code&gt;&lt;a href=&quot;#Module:init_per_group-2&quot;&gt;Module:init_per_group/2&lt;/a&gt;&lt;/code&gt;. A status value for a nested subgroup can be returned with &lt;code&gt;{return_group_result, Status}&lt;/code&gt;. The status can be retrieved in &lt;code&gt;&lt;a href=&quot;#Module:end_per_group-2&quot;&gt;Module:end_per_group/2&lt;/a&gt;&lt;/code&gt; for the group on the level above. The status is also used by &lt;code&gt;Common Test&lt;/code&gt; for deciding if execution of a group is to proceed if property &lt;code&gt;sequence&lt;/code&gt; or &lt;code&gt;repeat_until_*&lt;/code&gt; is set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="648d9b19e4f1798cccb4aa970ca13730d675986d" translate="yes" xml:space="preserve">
          <source>This function is called after the execution of a test case group is finished. It is meant to be used for cleaning up after &lt;code&gt;&lt;a href=&quot;#Module:init_per_group-2&quot;&gt;init_per_group/2&lt;/a&gt;&lt;/code&gt;. A status value for a nested subgroup can be returned with &lt;code&gt;{return_group_result,Status}&lt;/code&gt;. The status can be retrieved in &lt;code&gt;&lt;a href=&quot;#Module:end_per_group-2&quot;&gt;end_per_group/2&lt;/a&gt;&lt;/code&gt; for the group on the level above. The status is also used by &lt;code&gt;Common Test&lt;/code&gt; for deciding if execution of a group is to proceed if property &lt;code&gt;sequence&lt;/code&gt; or &lt;code&gt;repeat_until_*&lt;/code&gt; is set.</source>
          <target state="translated">Эта функция вызывается после завершения выполнения группы тестовых примеров. Он предназначен для очистки после &lt;code&gt;&lt;a href=&quot;#Module:init_per_group-2&quot;&gt;init_per_group/2&lt;/a&gt;&lt;/code&gt; . Значение статуса для вложенной подгруппы может быть возвращено с помощью &lt;code&gt;{return_group_result,Status}&lt;/code&gt; . Статус можно получить в &lt;code&gt;&lt;a href=&quot;#Module:end_per_group-2&quot;&gt;end_per_group/2&lt;/a&gt;&lt;/code&gt; для группы на уровне выше. Состояние также используется &lt;code&gt;Common Test&lt;/code&gt; для принятия решения о продолжении выполнения группы, если установлено свойство &lt;code&gt;sequence&lt;/code&gt; или &lt;code&gt;repeat_until_*&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="345b7139db6080b24fa35a4e0da978a876eccf7f" translate="yes" xml:space="preserve">
          <source>This function is called as the last test case in the suite. It is meant to be used for cleaning up after &lt;code&gt;&lt;a href=&quot;#Module:init_per_suite-1&quot;&gt;Module:init_per_suite/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="897cf1fddb4813f2f697f362b138508da5c7dd0a" translate="yes" xml:space="preserve">
          <source>This function is called as the last test case in the suite. It is meant to be used for cleaning up after &lt;code&gt;&lt;a href=&quot;#Module:init_per_suite-1&quot;&gt;init_per_suite/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эта функция вызывается как последний тестовый пример в наборе. Он предназначен для использования для очистки после &lt;code&gt;&lt;a href=&quot;#Module:init_per_suite-1&quot;&gt;init_per_suite/1&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a0372e5f1383e52f209cab7781bd11e0c4ba8e71" translate="yes" xml:space="preserve">
          <source>This function is called at the end of a CTH &lt;code&gt;&lt;a href=&quot;ct_hooks_chapter#scope&quot;&gt;scope&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эта функция вызывается в конце CTH &lt;code&gt;&lt;a href=&quot;ct_hooks_chapter#scope&quot;&gt;scope&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f0807a57b644a344571e1467f9b13cb9f18d17f0" translate="yes" xml:space="preserve">
          <source>This function is called at the end of stage 1 of the discovery process. It should return either the atom &lt;code&gt;ignore&lt;/code&gt; or &lt;code&gt;{ok, usm_entry() | [usm_entry()]}&lt;/code&gt;. See &lt;code&gt;&lt;a href=&quot;snmp_agent_config_files#usm&quot;&gt;usm_entry()&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;snmpa_conf#usm_entry&quot;&gt;usm_entry/13&lt;/a&gt;&lt;/code&gt; for more info.</source>
          <target state="translated">Эта функция вызывается в конце этапа 1 процесса обнаружения. Он должен вернуть либо &lt;code&gt;ignore&lt;/code&gt; атома, либо &lt;code&gt;{ok, usm_entry() | [usm_entry()]}&lt;/code&gt; . См. &lt;code&gt;&lt;a href=&quot;snmp_agent_config_files#usm&quot;&gt;usm_entry()&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;snmpa_conf#usm_entry&quot;&gt;usm_entry/13&lt;/a&gt;&lt;/code&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="fb32881cf0a426df77fb1522665bfe4e0e2538b1" translate="yes" xml:space="preserve">
          <source>This function is called before &lt;code&gt;&lt;a href=&quot;common_test#Module:end_per_group-2&quot;&gt;end_per_group&lt;/a&gt;&lt;/code&gt; if it exists. It behaves the same way as &lt;code&gt;&lt;a href=&quot;ct_hooks#Module:pre_init_per_suite-3&quot;&gt;pre_init_per_suite&lt;/a&gt;&lt;/code&gt;, but for function &lt;code&gt;&lt;a href=&quot;common_test#Module:end_per_group-2&quot;&gt;end_per_group&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">Эта функция вызывается перед &lt;code&gt;&lt;a href=&quot;common_test#Module:end_per_group-2&quot;&gt;end_per_group&lt;/a&gt;&lt;/code&gt; , если она существует. Он ведет себя так же, как &lt;code&gt;&lt;a href=&quot;ct_hooks#Module:pre_init_per_suite-3&quot;&gt;pre_init_per_suite&lt;/a&gt;&lt;/code&gt; , но вместо этого для функции &lt;code&gt;&lt;a href=&quot;common_test#Module:end_per_group-2&quot;&gt;end_per_group&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e874f35f84af17d413fa61bed6f2c2a545583190" translate="yes" xml:space="preserve">
          <source>This function is called before &lt;code&gt;&lt;a href=&quot;common_test#Module:end_per_suite-1&quot;&gt;end_per_suite&lt;/a&gt;&lt;/code&gt; if it exists. It behaves the same way as &lt;code&gt;&lt;a href=&quot;ct_hooks#Module:pre_init_per_suite-3&quot;&gt;pre_init_per_suite&lt;/a&gt;&lt;/code&gt;, but for function &lt;code&gt;&lt;a href=&quot;common_test#Module:end_per_suite-1&quot;&gt;end_per_suite&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">Эта функция вызывается перед &lt;code&gt;&lt;a href=&quot;common_test#Module:end_per_suite-1&quot;&gt;end_per_suite&lt;/a&gt;&lt;/code&gt; , если он существует. Он ведет себя так же, как &lt;code&gt;&lt;a href=&quot;ct_hooks#Module:pre_init_per_suite-3&quot;&gt;pre_init_per_suite&lt;/a&gt;&lt;/code&gt; , но вместо этого для функции &lt;code&gt;&lt;a href=&quot;common_test#Module:end_per_suite-1&quot;&gt;end_per_suite&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5d541acf0f757f563f08bac98ff0a9411ac868f8" translate="yes" xml:space="preserve">
          <source>This function is called before &lt;code&gt;&lt;a href=&quot;common_test#Module:end_per_testcase-2&quot;&gt;end_per_testcase&lt;/a&gt;&lt;/code&gt; if it exists. It behaves the same way as &lt;code&gt;&lt;a href=&quot;ct_hooks#Module:pre_end_per_suite-3&quot;&gt;pre_end_per_suite&lt;/a&gt;&lt;/code&gt;, but for function &lt;code&gt;&lt;a href=&quot;common_test#Module:end_per_testcase-2&quot;&gt;end_per_testcase&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">Эта функция вызывается перед &lt;code&gt;&lt;a href=&quot;common_test#Module:end_per_testcase-2&quot;&gt;end_per_testcase&lt;/a&gt;&lt;/code&gt; , если он существует. Он ведет себя так же, как &lt;code&gt;&lt;a href=&quot;ct_hooks#Module:pre_end_per_suite-3&quot;&gt;pre_end_per_suite&lt;/a&gt;&lt;/code&gt; , но вместо этого для функции &lt;code&gt;&lt;a href=&quot;common_test#Module:end_per_testcase-2&quot;&gt;end_per_testcase&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6d4fd2c714fc08ec0ac6579748777b65c3366a58" translate="yes" xml:space="preserve">
          <source>This function is called before &lt;code&gt;&lt;a href=&quot;common_test#Module:init_per_group-2&quot;&gt;init_per_group&lt;/a&gt;&lt;/code&gt; if it exists. It behaves the same way as &lt;code&gt;&lt;a href=&quot;ct_hooks#Module:pre_init_per_suite-3&quot;&gt;pre_init_per_suite&lt;/a&gt;&lt;/code&gt;, but for function &lt;code&gt;&lt;a href=&quot;common_test#Module:init_per_group-2&quot;&gt;init_per_group&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">Эта функция вызывается перед &lt;code&gt;&lt;a href=&quot;common_test#Module:init_per_group-2&quot;&gt;init_per_group&lt;/a&gt;&lt;/code&gt; , если она существует. Он ведет себя так же, как &lt;code&gt;&lt;a href=&quot;ct_hooks#Module:pre_init_per_suite-3&quot;&gt;pre_init_per_suite&lt;/a&gt;&lt;/code&gt; , но вместо этого для функции &lt;code&gt;&lt;a href=&quot;common_test#Module:init_per_group-2&quot;&gt;init_per_group&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c4fada08cbaf8b15ce7f51c95c9fe3b326d58378" translate="yes" xml:space="preserve">
          <source>This function is called before &lt;code&gt;&lt;a href=&quot;common_test#Module:init_per_suite-1&quot;&gt;init_per_suite&lt;/a&gt;&lt;/code&gt; if it exists. It typically contains initialization/logging that must be done before &lt;code&gt;init_per_suite&lt;/code&gt; is called. If &lt;code&gt;{skip,Reason}&lt;/code&gt; or &lt;code&gt;{fail,Reason}&lt;/code&gt; is returned, &lt;code&gt;init_per_suite&lt;/code&gt; and all test cases of the suite are skipped and &lt;code&gt;Reason&lt;/code&gt; printed in the overview log of the suite.</source>
          <target state="translated">Эта функция вызывается перед &lt;code&gt;&lt;a href=&quot;common_test#Module:init_per_suite-1&quot;&gt;init_per_suite&lt;/a&gt;&lt;/code&gt; , если она существует. Обычно он содержит инициализацию / ведение журнала, которое необходимо выполнить до &lt;code&gt;init_per_suite&lt;/code&gt; . Если возвращается &lt;code&gt;{skip,Reason}&lt;/code&gt; или &lt;code&gt;{fail,Reason}&lt;/code&gt; , &lt;code&gt;init_per_suite&lt;/code&gt; и все тестовые примеры набора пропускаются, а &lt;code&gt;Reason&lt;/code&gt; печатается в обзорном журнале пакета.</target>
        </trans-unit>
        <trans-unit id="14766708da0b30b7e24b398d506799e96916c97e" translate="yes" xml:space="preserve">
          <source>This function is called before &lt;code&gt;&lt;a href=&quot;common_test#Module:init_per_testcase-2&quot;&gt;init_per_testcase&lt;/a&gt;&lt;/code&gt; if it exists. It behaves the same way as &lt;code&gt;&lt;a href=&quot;ct_hooks#Module:pre_init_per_suite-3&quot;&gt;pre_init_per_suite&lt;/a&gt;&lt;/code&gt;, but for function &lt;code&gt;&lt;a href=&quot;common_test#Module:init_per_testcase-2&quot;&gt;init_per_testcase&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">Эта функция вызывается перед &lt;code&gt;&lt;a href=&quot;common_test#Module:init_per_testcase-2&quot;&gt;init_per_testcase&lt;/a&gt;&lt;/code&gt; , если она существует. Он ведет себя так же, как &lt;code&gt;&lt;a href=&quot;ct_hooks#Module:pre_init_per_suite-3&quot;&gt;pre_init_per_suite&lt;/a&gt;&lt;/code&gt; , но вместо этого для функции &lt;code&gt;&lt;a href=&quot;common_test#Module:init_per_testcase-2&quot;&gt;init_per_testcase&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7d6fc181db4b0ff6e75db5d82c2a426d2f669226" translate="yes" xml:space="preserve">
          <source>This function is called before &lt;code&gt;&lt;a href=&quot;ct_suite#Module:end_per_group-2&quot;&gt;end_per_group&lt;/a&gt;&lt;/code&gt; if it exists. It behaves the same way as &lt;code&gt;&lt;a href=&quot;ct_hooks#Module:pre_init_per_suite-3&quot;&gt;pre_init_per_suite&lt;/a&gt;&lt;/code&gt;, but for function &lt;code&gt;&lt;a href=&quot;ct_suite#Module:end_per_group-2&quot;&gt;end_per_group&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f27a4871105482ca23e5467359a27c568a72b833" translate="yes" xml:space="preserve">
          <source>This function is called before &lt;code&gt;&lt;a href=&quot;ct_suite#Module:end_per_suite-1&quot;&gt;end_per_suite&lt;/a&gt;&lt;/code&gt; if it exists. It behaves the same way as &lt;code&gt;&lt;a href=&quot;ct_hooks#Module:pre_init_per_suite-3&quot;&gt;pre_init_per_suite&lt;/a&gt;&lt;/code&gt;, but for function &lt;code&gt;&lt;a href=&quot;ct_suite#Module:end_per_suite-1&quot;&gt;end_per_suite&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a88007750928f37d5492b2d8205ae78bccd986b1" translate="yes" xml:space="preserve">
          <source>This function is called before &lt;code&gt;&lt;a href=&quot;ct_suite#Module:end_per_testcase-2&quot;&gt;end_per_testcase&lt;/a&gt;&lt;/code&gt; if it exists. It behaves the same way as &lt;code&gt;&lt;a href=&quot;ct_hooks#Module:pre_end_per_suite-3&quot;&gt;pre_end_per_suite&lt;/a&gt;&lt;/code&gt;, but for function &lt;code&gt;&lt;a href=&quot;ct_suite#Module:end_per_testcase-2&quot;&gt;end_per_testcase&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccff703964dc8daaeec8f102943579dce11bf4b9" translate="yes" xml:space="preserve">
          <source>This function is called before &lt;code&gt;&lt;a href=&quot;ct_suite#Module:init_per_group-2&quot;&gt;init_per_group&lt;/a&gt;&lt;/code&gt; if it exists. It behaves the same way as &lt;code&gt;&lt;a href=&quot;ct_hooks#Module:pre_init_per_suite-3&quot;&gt;pre_init_per_suite&lt;/a&gt;&lt;/code&gt;, but for function &lt;code&gt;&lt;a href=&quot;ct_suite#Module:init_per_group-2&quot;&gt;init_per_group&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb9adcaaae996c1718d810cc082dbbef5007dab0" translate="yes" xml:space="preserve">
          <source>This function is called before &lt;code&gt;&lt;a href=&quot;ct_suite#Module:init_per_suite-1&quot;&gt;init_per_suite&lt;/a&gt;&lt;/code&gt; if it exists. It typically contains initialization/logging that must be done before &lt;code&gt;init_per_suite&lt;/code&gt; is called. If &lt;code&gt;{skip,Reason}&lt;/code&gt; or &lt;code&gt;{fail,Reason}&lt;/code&gt; is returned, &lt;code&gt;init_per_suite&lt;/code&gt; and all test cases of the suite are skipped and &lt;code&gt;Reason&lt;/code&gt; printed in the overview log of the suite.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5865db8d52a4bd048de6b63002a57691f1a85fd1" translate="yes" xml:space="preserve">
          <source>This function is called before &lt;code&gt;&lt;a href=&quot;ct_suite#Module:init_per_testcase-2&quot;&gt;init_per_testcase&lt;/a&gt;&lt;/code&gt; if it exists. It behaves the same way as &lt;code&gt;&lt;a href=&quot;ct_hooks#Module:pre_init_per_suite-3&quot;&gt;pre_init_per_suite&lt;/a&gt;&lt;/code&gt;, but for function &lt;code&gt;&lt;a href=&quot;ct_suite#Module:init_per_testcase-2&quot;&gt;init_per_testcase&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcb7e548f11fe13eae236fe02392162189ee68cc" translate="yes" xml:space="preserve">
          <source>This function is called before each test case. Argument &lt;code&gt;TestCase&lt;/code&gt; is the test case name, and &lt;code&gt;Config&lt;/code&gt; (list of key-value tuples) is the configuration data that can be modified. The &lt;code&gt;NewConfig&lt;/code&gt; list returned from this function is given as &lt;code&gt;Config&lt;/code&gt; to the test case. If &lt;code&gt;{fail, Reason}&lt;/code&gt; is returned, the test case is marked as failed without being executed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ec02031e2fa8bc763f23eebb36182a4725659b4" translate="yes" xml:space="preserve">
          <source>This function is called before each test case. Argument &lt;code&gt;TestCase&lt;/code&gt; is the test case name, and &lt;code&gt;Config&lt;/code&gt; (list of key-value tuples) is the configuration data that can be modified. The &lt;code&gt;NewConfig&lt;/code&gt; list returned from this function is given as &lt;code&gt;Config&lt;/code&gt; to the test case. If &lt;code&gt;{fail,Reason}&lt;/code&gt; is returned, the test case is marked as failed without being executed.</source>
          <target state="translated">Эта функция вызывается перед каждым тестовым примером. Аргумент &lt;code&gt;TestCase&lt;/code&gt; - это имя тестового примера, а &lt;code&gt;Config&lt;/code&gt; (список кортежей &quot;ключ-значение&quot;) - это данные конфигурации, которые можно изменять. Список &lt;code&gt;NewConfig&lt;/code&gt; , возвращаемый этой функцией, дается как &lt;code&gt;Config&lt;/code&gt; для тестового примера. Если возвращается &lt;code&gt;{fail,Reason}&lt;/code&gt; , тестовый пример помечается как неудачный и не выполняется.</target>
        </trans-unit>
        <trans-unit id="7cef0bc6ae48b3bc1a5099f8d9c601b37d907e07" translate="yes" xml:space="preserve">
          <source>This function is called by a &lt;code&gt;gen_event&lt;/code&gt; process in the following situations:</source>
          <target state="translated">Эта функция &lt;code&gt;gen_event&lt;/code&gt; процессом gen_event в следующих ситуациях:</target>
        </trans-unit>
        <trans-unit id="4e47279564d310806f28fccb0940fabd880414dd" translate="yes" xml:space="preserve">
          <source>This function is called by a &lt;code&gt;gen_server&lt;/code&gt; process in the following situations:</source>
          <target state="translated">Эта функция вызывается процессом &lt;code&gt;gen_server&lt;/code&gt; в следующих ситуациях:</target>
        </trans-unit>
        <trans-unit id="a51ead4642d619f15354dcc0634fe8062618949d" translate="yes" xml:space="preserve">
          <source>This function is called by a &lt;code&gt;gen_server&lt;/code&gt; process when a time-out occurs or when it receives any other message than a synchronous or asynchronous request (or a system message).</source>
          <target state="translated">Эта функция вызывается процессом &lt;code&gt;gen_server&lt;/code&gt; при истечении времени ожидания или при получении любого другого сообщения, кроме синхронного или асинхронного запроса (или системного сообщения).</target>
        </trans-unit>
        <trans-unit id="81f55aa9a3503931bbd4c62f78241c8bfccce378" translate="yes" xml:space="preserve">
          <source>This function is called by a &lt;code&gt;gen_server&lt;/code&gt; process when it is about to terminate. It is to be the opposite of &lt;code&gt;&lt;a href=&quot;#Module:init-1&quot;&gt;Module:init/1&lt;/a&gt;&lt;/code&gt; and do any necessary cleaning up. When it returns, the &lt;code&gt;gen_server&lt;/code&gt; process terminates with &lt;code&gt;Reason&lt;/code&gt;. The return value is ignored.</source>
          <target state="translated">Эта функция вызывается процессом &lt;code&gt;gen_server&lt;/code&gt; , когда он собирается завершить работу. Это должно быть противоположно &lt;code&gt;&lt;a href=&quot;#Module:init-1&quot;&gt;Module:init/1&lt;/a&gt;&lt;/code&gt; и производить необходимую очистку. Когда он возвращается, процесс &lt;code&gt;gen_server&lt;/code&gt; завершается с помощью &lt;code&gt;Reason&lt;/code&gt; . Возвращаемое значение игнорируется.</target>
        </trans-unit>
        <trans-unit id="7103be2d22d49472aeafdc33422e8317e9a60060" translate="yes" xml:space="preserve">
          <source>This function is called by a &lt;code&gt;gen_server&lt;/code&gt; process when it is to update its internal state during a release upgrade/downgrade, that is, when the instruction &lt;code&gt;{update,Module,Change,...}&lt;/code&gt;, where &lt;code&gt;Change={advanced,Extra}&lt;/code&gt;, is specifed in the &lt;code&gt;appup&lt;/code&gt; file. For more information, see section &lt;code&gt; Release Handling Instructions&lt;/code&gt; in OTP Design Principles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="854175a561611b0f58880036cbf8c4836509caea" translate="yes" xml:space="preserve">
          <source>This function is called by a &lt;code&gt;gen_server&lt;/code&gt; process when it is to update its internal state during a release upgrade/downgrade, that is, when the instruction &lt;code&gt;{update,Module,Change,...}&lt;/code&gt;, where &lt;code&gt;Change={advanced,Extra}&lt;/code&gt;, is specifed in the &lt;code&gt;appup&lt;/code&gt; file. For more information, see section &lt;code&gt;Release Handling Instructions&lt;/code&gt; in OTP Design Principles.</source>
          <target state="translated">Эта функция вызывается процессом &lt;code&gt;gen_server&lt;/code&gt; , когда он должен обновить свое внутреннее состояние во время обновления / понижения версии, то есть когда инструкция &lt;code&gt;{update,Module,Change,...}&lt;/code&gt; , где &lt;code&gt;Change={advanced,Extra}&lt;/code&gt; , находится в предписанных в технических заданиях &lt;code&gt;appup&lt;/code&gt; файла. Для получения дополнительной информации см. Раздел &amp;laquo; &lt;code&gt;Release Handling Instructions&lt;/code&gt; по обработке релизов&amp;raquo; в Принципах проектирования OTP.</target>
        </trans-unit>
        <trans-unit id="6d4c34ae1c200b76e11bc231bee8bd2807964c89" translate="yes" xml:space="preserve">
          <source>This function is called by a &lt;code&gt;gen_server&lt;/code&gt; process whenever a previous callback returns &lt;code&gt;{continue, Continue}&lt;/code&gt;. &lt;code&gt;handle_continue/2&lt;/code&gt; is invoked immediately after the previous callback, which makes it useful for performing work after initialization or for splitting the work in a callback in multiple steps, updating the process state along the way.</source>
          <target state="translated">Эта функция вызывается процессом &lt;code&gt;gen_server&lt;/code&gt; всякий раз, когда предыдущий обратный вызов возвращает &lt;code&gt;{continue, Continue}&lt;/code&gt; . &lt;code&gt;handle_continue/2&lt;/code&gt; вызывается сразу после предыдущего обратного вызова, что делает его полезным для выполнения работы после инициализации или для разделения работы в обратном вызове на несколько шагов, обновляя состояние процесса по ходу.</target>
        </trans-unit>
        <trans-unit id="7c755e5f75a4b9ab817fb2fc0f0f130048764892" translate="yes" xml:space="preserve">
          <source>This function is called by a &lt;code&gt;gen_statem&lt;/code&gt; process when any of the following apply:</source>
          <target state="translated">Эта функция &lt;code&gt;gen_statem&lt;/code&gt; процессом gen_statem, когда применяется любое из следующих условий:</target>
        </trans-unit>
        <trans-unit id="012052cb437447cd791b721593de5a645b47fd05" translate="yes" xml:space="preserve">
          <source>This function is called by a &lt;code&gt;gen_statem&lt;/code&gt; when it is about to terminate. It is to be the opposite of &lt;code&gt;&lt;a href=&quot;#Module:init-1&quot;&gt;Module:init/1&lt;/a&gt;&lt;/code&gt; and do any necessary cleaning up. When it returns, the &lt;code&gt;gen_statem&lt;/code&gt; terminates with &lt;code&gt;Reason&lt;/code&gt;. The return value is ignored.</source>
          <target state="translated">Эта функция вызывается &lt;code&gt;gen_statem&lt;/code&gt; , когда она собирается завершить работу. Это должно быть противоположно &lt;code&gt;&lt;a href=&quot;#Module:init-1&quot;&gt;Module:init/1&lt;/a&gt;&lt;/code&gt; и производить необходимую очистку. Когда он возвращается, &lt;code&gt;gen_statem&lt;/code&gt; завершается на &lt;code&gt;Reason&lt;/code&gt; . Возвращаемое значение игнорируется.</target>
        </trans-unit>
        <trans-unit id="5286eefe6ed32df7949b89004772557939570746" translate="yes" xml:space="preserve">
          <source>This function is called by a &lt;code&gt;gen_statem&lt;/code&gt; when it is to update its internal state during a release upgrade/downgrade, that is, when the instruction &lt;code&gt;{update,Module,Change,...}&lt;/code&gt;, where &lt;code&gt;Change = {advanced,Extra}&lt;/code&gt;, is specified in the &lt;code&gt;appup&lt;/code&gt; file. For more information, see &lt;code&gt;OTP Design Principles&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ca2b78a5bbaa99a4fbd81da5ab6158558318d3b" translate="yes" xml:space="preserve">
          <source>This function is called by a &lt;code&gt;gen_statem&lt;/code&gt; when it is to update its internal state during a release upgrade/downgrade, that is, when the instruction &lt;code&gt;{update,Module,Change,...}&lt;/code&gt;, where &lt;code&gt;Change={advanced,Extra}&lt;/code&gt;, is specified in the &lt;code&gt;appup&lt;/code&gt; file. For more information, see &lt;code&gt;OTP Design Principles&lt;/code&gt;.</source>
          <target state="translated">Эта функция вызывается &lt;code&gt;gen_statem&lt;/code&gt; , когда он должен обновить свое внутреннее состояние во время обновления / понижения версии, то есть когда инструкция &lt;code&gt;{update,Module,Change,...}&lt;/code&gt; , где &lt;code&gt;Change={advanced,Extra}&lt;/code&gt; , является указанный в &lt;code&gt;appup&lt;/code&gt; файле. Для получения дополнительной информации см. &lt;code&gt;OTP Design Principles&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b1029bd58312f364737a518c22f5aea571963829" translate="yes" xml:space="preserve">
          <source>This function is called by a &lt;code&gt;gen_statem&lt;/code&gt; when it needs to find out the &lt;code&gt;&lt;a href=&quot;#type-callback_mode&quot;&gt;&lt;strong&gt;callback mode&lt;/strong&gt;&lt;/a&gt;&lt;/code&gt; of the callback module. The value is cached by &lt;code&gt;gen_statem&lt;/code&gt; for efficiency reasons, so this function is only called once after server start and after code change, but before the first &lt;code&gt;&lt;a href=&quot;#state%20callback&quot;&gt;state callback&lt;/a&gt;&lt;/code&gt; in the current code version is called. More occasions may be added in future versions of &lt;code&gt;gen_statem&lt;/code&gt;.</source>
          <target state="translated">Эта функция вызывается &lt;code&gt;gen_statem&lt;/code&gt; , когда ему нужно узнать &lt;code&gt;&lt;a href=&quot;#type-callback_mode&quot;&gt;&lt;strong&gt;callback mode&lt;/strong&gt;&lt;/a&gt;&lt;/code&gt; обратного вызова модуля обратного вызова. Значение кэшируется &lt;code&gt;gen_statem&lt;/code&gt; из соображений эффективности, поэтому эта функция вызывается только один раз после запуска сервера и после изменения кода, но до &lt;code&gt;&lt;a href=&quot;#state%20callback&quot;&gt;state callback&lt;/a&gt;&lt;/code&gt; первого обратного вызова состояния в текущей версии кода. В будущих версиях &lt;code&gt;gen_statem&lt;/code&gt; могут быть добавлены другие случаи .</target>
        </trans-unit>
        <trans-unit id="0e7042442cd0c5a7ca8465130a637143865c36ff" translate="yes" xml:space="preserve">
          <source>This function is called by a &lt;code&gt;gen_statem&lt;/code&gt; when it needs to find out the &lt;code&gt;&lt;a href=&quot;#type-callback_mode&quot;&gt;&lt;strong&gt;callback mode&lt;/strong&gt;&lt;/a&gt;&lt;/code&gt; of the callback module. The value is cached by &lt;code&gt;gen_statem&lt;/code&gt; for efficiency reasons, so this function is only called once after server start, after code change, and after changing the callback module, but before the first &lt;code&gt;&lt;a href=&quot;#state%20callback&quot;&gt;&lt;strong&gt;state callback&lt;/strong&gt;&lt;/a&gt;&lt;/code&gt; in the current callback module's code version is called. More occasions may be added in future versions of &lt;code&gt;gen_statem&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86e4a64914f5fa58c43e59cda9e1371225dd82b8" translate="yes" xml:space="preserve">
          <source>This function is called by a channel process when it is about to terminate. Before this function is called, &lt;code&gt;&lt;a href=&quot;ssh_connection#close-2&quot;&gt; ssh_connection:close/2 &lt;/a&gt;&lt;/code&gt; is called, if it has not been called earlier. This function does any necessary cleaning up. When it returns, the channel process terminates with reason &lt;code&gt;Reason&lt;/code&gt;. The return value is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46850b150e8f033a9f9fa7fa23905fcd27c1aa8d" translate="yes" xml:space="preserve">
          <source>This function is called by a channel process when it is about to terminate. Before this function is called, &lt;code&gt;&lt;a href=&quot;ssh_connection#close-2&quot;&gt;ssh_connection:close/2&lt;/a&gt;&lt;/code&gt; is called, if it has not been called earlier. This function does any necessary cleaning up. When it returns, the channel process terminates with reason &lt;code&gt;Reason&lt;/code&gt;. The return value is ignored.</source>
          <target state="translated">Эта функция вызывается канальным процессом, когда он собирается завершить работу. Перед &lt;code&gt;&lt;a href=&quot;ssh_connection#close-2&quot;&gt;ssh_connection:close/2&lt;/a&gt;&lt;/code&gt; этой функции вызывается ssh_connection: close / 2 , если она не вызывалась ранее. Эта функция выполняет всю необходимую очистку. Когда он возвращается, процесс канала завершается с &lt;code&gt;Reason&lt;/code&gt; причины Reason . Возвращаемое значение игнорируется.</target>
        </trans-unit>
        <trans-unit id="56c006741953e55f77a4441e9b362d11c170439b" translate="yes" xml:space="preserve">
          <source>This function is called by a client-side channel when it is to update its internal state during a release upgrade or downgrade, that is, when the instruction &lt;code&gt;{update,Module,Change,...}&lt;/code&gt;, where &lt;code&gt;Change={advanced,Extra}&lt;/code&gt;, is given in the &lt;code&gt;appup&lt;/code&gt; file. For more information, refer to Section 9.11.6 Release Handling Instructions in the &lt;code&gt;System Documentation&lt;/code&gt;.</source>
          <target state="translated">Эта функция вызывается клиентским каналом, когда он должен обновить свое внутреннее состояние во время обновления или понижения версии, то есть когда инструкция &lt;code&gt;{update,Module,Change,...}&lt;/code&gt; , где &lt;code&gt;Change={advanced,Extra}&lt;/code&gt; , дается в &lt;code&gt;appup&lt;/code&gt; файле. Для получения дополнительной информации обратитесь к разделу 9.11.6 &amp;laquo;Инструкции по обработке релиза&amp;raquo; в &lt;code&gt;System Documentation&lt;/code&gt; .</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
