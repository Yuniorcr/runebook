<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="erlang">
    <body>
      <group id="erlang">
        <trans-unit id="a56e60b23176db0cb2d2d95c2eafaaa18c7c1f5c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Term&lt;/code&gt; and &lt;code&gt;Pattern&lt;/code&gt; are compared and any unbound variables in &lt;code&gt;Pattern&lt;/code&gt; are bound to corresponding values in &lt;code&gt;Term&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Term&lt;/code&gt; и &lt;code&gt;Pattern&lt;/code&gt; сравниваются, и любые несвязанные переменные в &lt;code&gt;Pattern&lt;/code&gt; привязываются к соответствующим значениям в &lt;code&gt;Term&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bf476955e74f9154602025a23e3e5cae87c2ace9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Term&lt;/code&gt; is an Erlang term that we wish to match against &lt;code&gt;Pattern&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Term&lt;/code&gt; - это термин Erlang, который мы хотим сопоставить с &lt;code&gt;Pattern&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0f3c1fd31c4e11f6e32cba2acc95aa631ef1a055" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TestRunnerPid&lt;/code&gt; is returned if &lt;code&gt;release_shell == true&lt;/code&gt;. For details, see &lt;code&gt;&lt;a href=&quot;#break-1&quot;&gt;ct:break/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;TestRunnerPid&lt;/code&gt; возвращается, если &lt;code&gt;release_shell == true&lt;/code&gt; . Подробнее см. &lt;code&gt;&lt;a href=&quot;#break-1&quot;&gt;ct:break/1&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ac7c5d090304206771de9956f277e657e4d709f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TestSpecs&lt;/code&gt; is either the name of a test specification file (string) or a list of test specifications. If it is a list, the specifications are handled (and the corresponding tests executed) in sequence. An element in a &lt;code&gt;TestSpecs&lt;/code&gt; list can also be list of test specifications. The specifications in such a list are merged into one combined specification before test execution.</source>
          <target state="translated">&lt;code&gt;TestSpecs&lt;/code&gt; - это либо имя файла спецификации теста (строка), либо список спецификаций теста. Если это список, спецификации обрабатываются (и выполняются соответствующие тесты) последовательно. Элемент в списке &lt;code&gt;TestSpecs&lt;/code&gt; также может быть списком тестовых спецификаций. Спецификации в таком списке объединяются в одну комбинированную спецификацию перед выполнением теста.</target>
        </trans-unit>
        <trans-unit id="d81834531a603d737b666471ac079013bd166a16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tests = integer()&lt;/code&gt;, number of tests.</source>
          <target state="translated">&lt;code&gt;Tests = integer()&lt;/code&gt; , количество тестов.</target>
        </trans-unit>
        <trans-unit id="d2ab37503e0f5d591f2ef9a8d69441935dc0621d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Timeout = integer()&lt;/code&gt; specifies how many milliseconds to wait before restarting the application at another node. It defaults to 0.</source>
          <target state="translated">&lt;code&gt;Timeout = integer()&lt;/code&gt; указывает, сколько миллисекунд ждать перед перезапуском приложения на другом узле. По умолчанию 0.</target>
        </trans-unit>
        <trans-unit id="1f12197e5f73601f07d80574f4fe8292d8a488f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Timeout&lt;/code&gt; can also be a tuple &lt;code&gt;{clean_timeout,T}&lt;/code&gt; or &lt;code&gt;{dirty_timeout,T}&lt;/code&gt;, where &lt;code&gt;T&lt;/code&gt; is the time-out time. &lt;code&gt;{clean_timeout,T}&lt;/code&gt; works like just &lt;code&gt;T&lt;/code&gt; described in the note above and uses a proxy process while &lt;code&gt;{dirty_timeout,T}&lt;/code&gt; bypasses the proxy process which is more lightweight.</source>
          <target state="translated">&lt;code&gt;Timeout&lt;/code&gt; также может быть кортежем &lt;code&gt;{clean_timeout,T}&lt;/code&gt; или &lt;code&gt;{dirty_timeout,T}&lt;/code&gt; , где &lt;code&gt;T&lt;/code&gt; - время ожидания. &lt;code&gt;{clean_timeout,T}&lt;/code&gt; работает так же, как &lt;code&gt;T&lt;/code&gt; , описанный в примечании выше, и использует прокси-процесс, в то время как &lt;code&gt;{dirty_timeout,T}&lt;/code&gt; обходит более легкий прокси-процесс.</target>
        </trans-unit>
        <trans-unit id="215dd1441c7a7f4cf2328f29cce8b0be80081cf9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Timeout&lt;/code&gt; is an integer &amp;gt; 0, which specifies how many milliseconds to wait for a reply, or the atom &lt;code&gt;infinity&lt;/code&gt; to wait indefinitely, which is the default. If no reply is received within the specified time, the function call fails.</source>
          <target state="translated">&lt;code&gt;Timeout&lt;/code&gt; - это целое число&amp;gt; 0, которое указывает, сколько миллисекунд ждать ответа, или &lt;code&gt;infinity&lt;/code&gt; атома ждать бесконечно, что является значением по умолчанию. Если в течение указанного времени ответа не получено, вызов функции завершается ошибкой.</target>
        </trans-unit>
        <trans-unit id="011d9f71bfc5974e239f39bd3079f6a8ecf96f60" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Timeout&lt;/code&gt; is an integer &amp;gt; 0, which specifies how many milliseconds to wait for the server to terminate, or the atom &lt;code&gt;infinity&lt;/code&gt; to wait indefinitely. Defaults to &lt;code&gt;infinity&lt;/code&gt;. If the server does not terminate within the specified time, a &lt;code&gt;timeout&lt;/code&gt; exception is raised.</source>
          <target state="translated">&lt;code&gt;Timeout&lt;/code&gt; - это целое число&amp;gt; 0, которое указывает, сколько миллисекунд ждать завершения работы сервера или &lt;code&gt;infinity&lt;/code&gt; долго ждать атома . По умолчанию &lt;code&gt;infinity&lt;/code&gt; . Если сервер не завершает работу в течение указанного времени, возникает исключение &lt;code&gt;timeout&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cce26af6f0b969072f77bb631d40ef61dff02358" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Timeout&lt;/code&gt; is an integer greater than zero that specifies how many milliseconds to wait for a reply, or the atom &lt;code&gt;infinity&lt;/code&gt; to wait indefinitely. Defaults to 5000. If no reply is received within the specified time, the function call fails.</source>
          <target state="translated">&lt;code&gt;Timeout&lt;/code&gt; представляет собой целое число больше нуля , что указывает , сколько миллисекунд ждать ответа, или атом &lt;code&gt;infinity&lt;/code&gt; ждать до бесконечности. По умолчанию 5000. Если ответ не получен в течение указанного времени, вызов функции завершается ошибкой.</target>
        </trans-unit>
        <trans-unit id="19ea6b4ba0c408aac46d4d54817adbdb89d5b3c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Timeout&lt;/code&gt; is an integer greater than zero that specifies how many milliseconds to wait for a reply, or the atom &lt;code&gt;infinity&lt;/code&gt; to wait indefinitely. Defaults to 5000. If no reply is received within the specified time, the function call fails. If the caller catches the failure and continues running, and the server is just late with the reply, it can arrive at any time later into the message queue of the caller. The caller must in this case be prepared for this and discard any such garbage messages that are two element tuples with a reference as the first element.</source>
          <target state="translated">&lt;code&gt;Timeout&lt;/code&gt; представляет собой целое число больше нуля , что указывает , сколько миллисекунд ждать ответа, или атом &lt;code&gt;infinity&lt;/code&gt; ждать до бесконечности. По умолчанию 5000. Если ответ не получен в течение указанного времени, вызов функции завершается ошибкой. Если вызывающий абонент обнаруживает сбой и продолжает работу, а сервер просто опаздывает с ответом, он может прибыть в любое время позже в очередь сообщений вызывающего абонента. В этом случае вызывающая сторона должна быть к этому готова и отбросить любые такие сообщения мусора, которые представляют собой двухэлементные кортежи со ссылкой в ​​качестве первого элемента.</target>
        </trans-unit>
        <trans-unit id="2a545390927615be3be95ee2e3e869ac058d8bc9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Timeout&lt;/code&gt; is an integer greater than zero that specifies how many milliseconds to wait for each reply, or the atom &lt;code&gt;infinity&lt;/code&gt; to wait indefinitely. Defaults to &lt;code&gt;infinity&lt;/code&gt;. If no reply is received from a node within the specified time, the node is added to &lt;code&gt;BadNodes&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Timeout&lt;/code&gt; представляет собой целое число больше нуля , что указывает , сколько миллисекунд ждать каждого ответа, или атом &lt;code&gt;infinity&lt;/code&gt; ждать до бесконечности. По умолчанию &lt;code&gt;infinity&lt;/code&gt; . Если в течение указанного времени от узла не получено ответа, узел добавляется в &lt;code&gt;BadNodes&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d491898fa68143f83f4eb3b922d722a2efee0e58" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Timeout&lt;/code&gt; is an integer greater than zero that specifies how many milliseconds to wait for the event manager to terminate, or the atom &lt;code&gt;infinity&lt;/code&gt; to wait indefinitely. Defaults to &lt;code&gt;infinity&lt;/code&gt;. If the event manager has not terminated within the specified time, a &lt;code&gt;timeout&lt;/code&gt; exception is raised.</source>
          <target state="translated">&lt;code&gt;Timeout&lt;/code&gt; - это целое число больше нуля, указывающее, сколько миллисекунд ждать завершения работы диспетчера событий или &lt;code&gt;infinity&lt;/code&gt; долго ждать атома . По умолчанию &lt;code&gt;infinity&lt;/code&gt; . Если диспетчер событий не завершил работу в течение указанного времени, возникает исключение &lt;code&gt;timeout&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3aff9a13c5adb8de3081f2e611e5f7eef5cbf9d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Timeout&lt;/code&gt; is an integer greater than zero that specifies how many milliseconds to wait for the server to terminate, or the atom &lt;code&gt;infinity&lt;/code&gt; to wait indefinitely. Defaults to &lt;code&gt;infinity&lt;/code&gt;. If the server has not terminated within the specified time, a &lt;code&gt;timeout&lt;/code&gt; exception is raised.</source>
          <target state="translated">&lt;code&gt;Timeout&lt;/code&gt; - это целое число больше нуля, указывающее, сколько миллисекунд ждать завершения работы сервера или &lt;code&gt;infinity&lt;/code&gt; долго ждать атома . По умолчанию &lt;code&gt;infinity&lt;/code&gt; . Если сервер не завершил работу в течение указанного времени, возникает исключение &lt;code&gt;timeout&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b00c0031f23e811b5959b8ca6b50758268da0686" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Timeout&lt;/code&gt; is an integer.</source>
          <target state="translated">&lt;code&gt;Timeout&lt;/code&gt; - целое число.</target>
        </trans-unit>
        <trans-unit id="09ab16be1768304f7b3ae52beebf6843b75263fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Timeout&lt;/code&gt; is re-transmission timeout (&lt;code&gt;infinity&lt;/code&gt; | integer).</source>
          <target state="translated">&lt;code&gt;Timeout&lt;/code&gt; - это тайм- аут повторной передачи ( &lt;code&gt;infinity&lt;/code&gt; | целое число).</target>
        </trans-unit>
        <trans-unit id="36032d5c1155f9053b9b358a83bd315f89ea768e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;To&lt;/code&gt; is a list of &lt;code&gt;{Address, SecData}&lt;/code&gt; tuples i.e the destination addresses and their corresponding security parameters. This value is normally sent to &lt;code&gt;snmpa_mpd:generate_message/4&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;To&lt;/code&gt; - это список кортежей &lt;code&gt;{Address, SecData}&lt;/code&gt; т. Е. Адресов назначения и соответствующих им параметров безопасности. Это значение обычно отправляется в &lt;code&gt;snmpa_mpd:generate_message/4&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e3d75fff4d3df97c5e4a676379dc6d3b23205c1b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;To&lt;/code&gt; is a list of destination addresses and their corresponding security parameters. This value is received in the same message from the agent and then transformed trough &lt;code&gt;&lt;a href=&quot;#process_taddrs&quot;&gt;process_taddrs&lt;/a&gt;&lt;/code&gt; before passed to this function.</source>
          <target state="translated">&lt;code&gt;To&lt;/code&gt; - это список адресов назначения и соответствующих им параметров безопасности. Это значение получено в том же сообщении от агента и затем преобразовано через &lt;code&gt;&lt;a href=&quot;#process_taddrs&quot;&gt;process_taddrs&lt;/a&gt;&lt;/code&gt; перед передачей этой функции.</target>
        </trans-unit>
        <trans-unit id="a81d51ec2c3ae7ef365362e3fa993d2c65d6fbc4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;To&lt;/code&gt; is the destination &lt;code&gt;Address&lt;/code&gt; that comes from the &lt;code&gt;From&lt;/code&gt; field in the corresponding &lt;code&gt;snmp_pdu&lt;/code&gt; message previously sent to the MasterAgent.</source>
          <target state="translated">&lt;code&gt;To&lt;/code&gt; - это &lt;code&gt;Address&lt;/code&gt; назначения, который поступает из поля &lt;code&gt;From&lt;/code&gt; в соответствующем сообщении &lt;code&gt;snmp_pdu&lt;/code&gt; , ранее отправленном агенту MasterAgent.</target>
        </trans-unit>
        <trans-unit id="cc19d9af430281397afd69b96199ad787711bbc9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tokens&lt;/code&gt; are the Erlang tokens from &lt;code&gt;String&lt;/code&gt;. &lt;code&gt;EndLocation&lt;/code&gt; is the first location after the last token.</source>
          <target state="translated">&lt;code&gt;Tokens&lt;/code&gt; - это токены Erlang из &lt;code&gt;String&lt;/code&gt; . &lt;code&gt;EndLocation&lt;/code&gt; - это первое местоположение после последнего токена.</target>
        </trans-unit>
        <trans-unit id="e71b6178fb3f5623b522a62907f6a2520e1b70cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Toks1&lt;/code&gt; is a tail of &lt;code&gt;Tree&lt;/code&gt; that contains symbols encountered after the structure that was correctly parsed.</source>
          <target state="translated">&lt;code&gt;Toks1&lt;/code&gt; - это хвост &lt;code&gt;Tree&lt;/code&gt; который содержит символы, обнаруженные после правильно проанализированной структуры.</target>
        </trans-unit>
        <trans-unit id="6cd6d06f77d587468003982f885e5ec5c02e9a2f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Toks&lt;/code&gt; is the list of tokens to be parsed. A successful parse returns &lt;code&gt;{ok, Tree, Toks1}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Toks&lt;/code&gt; - это список токенов для анализа. Успешный синтаксический анализ возвращает &lt;code&gt;{ok, Tree, Toks1}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6751800615a1cb23fcc3c1f7501055d38d9b53af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TopLevelDir.TestDir.Suite.Case&lt;/code&gt; (only &lt;code&gt;Case&lt;/code&gt; executed)</source>
          <target state="translated">&lt;code&gt;TopLevelDir.TestDir.Suite.Case&lt;/code&gt; ( выполняется только &lt;code&gt;Case&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="4c056acdec22d7bfe5f76c418b61c2b6a38aaa75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TopLevelDir.TestDir.Suite:cases&lt;/code&gt; (specific test cases executed)</source>
          <target state="translated">&lt;code&gt;TopLevelDir.TestDir.Suite:cases&lt;/code&gt; (выполняются конкретные тестовые кейсы)</target>
        </trans-unit>
        <trans-unit id="53a4e7815a1b5ed03c8521155ca5d53f619655f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TopLevelDir.TestDir.Suite&lt;/code&gt; (all cases in &lt;code&gt;Suite&lt;/code&gt; executed)</source>
          <target state="translated">&lt;code&gt;TopLevelDir.TestDir.Suite&lt;/code&gt; (все кейсы в &lt;code&gt;Suite&lt;/code&gt; выполнены)</target>
        </trans-unit>
        <trans-unit id="b0c25c2ac8ada173e3ada323fedd5e473bc8fc57" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TopLevelDir.TestDir:suites&lt;/code&gt; (specific suites executed)</source>
          <target state="translated">&lt;code&gt;TopLevelDir.TestDir:suites&lt;/code&gt; (выполняются определенные наборы)</target>
        </trans-unit>
        <trans-unit id="3c900707be7126a57aeae34e26cf071a34d5bc6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TopLevelDir.TestDir&lt;/code&gt; (all suites in &lt;code&gt;TestDir&lt;/code&gt; executed)</source>
          <target state="translated">&lt;code&gt;TopLevelDir.TestDir&lt;/code&gt; (все наборы в &lt;code&gt;TestDir&lt;/code&gt; выполнены)</target>
        </trans-unit>
        <trans-unit id="b3c728124c4ee20bb4ed11c28dc23eb6ec9d1bf6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TotalSize&lt;/code&gt; is the total size of the carrier, including its header.</source>
          <target state="translated">&lt;code&gt;TotalSize&lt;/code&gt; - это общий размер носителя, включая его заголовок.</target>
        </trans-unit>
        <trans-unit id="0459fa483f3ecb25277426566103557b3c846abb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TransportTag&lt;/code&gt; is a string.</source>
          <target state="translated">&lt;code&gt;TransportTag&lt;/code&gt; - это строка.</target>
        </trans-unit>
        <trans-unit id="c21d9eef6e37bcd0c4a7b122aab8b0580e5c7a93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Trap&lt;/code&gt; is either an SNMP pdu record or an trappdu record, as defined in &lt;code&gt;snmp_types.hrl&lt;/code&gt;, with the SNMP request.</source>
          <target state="translated">&lt;code&gt;Trap&lt;/code&gt; - это либо запись SNMP pdu, либо запись trappdu, как определено в &lt;code&gt;snmp_types.hrl&lt;/code&gt; , с запросом SNMP.</target>
        </trans-unit>
        <trans-unit id="65dd984c5baa99a7d4646077d3ee4d1d44ac88e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tree&lt;/code&gt; is a parse tree.</source>
          <target state="translated">&lt;code&gt;Tree&lt;/code&gt; - это дерево разбора.</target>
        </trans-unit>
        <trans-unit id="2aba2002f72fe530f98fd7101e061e4b3297f1a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tree&lt;/code&gt; is composed of nodes of the form &lt;code&gt;{Key, Value, Smaller, Bigger}&lt;/code&gt; and the &quot;empty tree&quot; node &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tree&lt;/code&gt; состоит из узлов формы &lt;code&gt;{Key, Value, Smaller, Bigger}&lt;/code&gt; и узла &quot;пустого дерева&quot; &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c0e09fc0cdcfd3b13f03705a9747a48dbd8225ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Type&lt;/code&gt; - As defined in the child specification.</source>
          <target state="translated">&lt;code&gt;Type&lt;/code&gt; - как определено в дочерней спецификации.</target>
        </trans-unit>
        <trans-unit id="cf4c43f92c2af697a01e28db83e4dd71f728f48e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Type&lt;/code&gt; can be one of the following atoms: &lt;code&gt;process&lt;/code&gt;, &lt;code&gt;port&lt;/code&gt; or &lt;code&gt;time_offset&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Type&lt;/code&gt; может быть одним из следующих атомов: &lt;code&gt;process&lt;/code&gt; , &lt;code&gt;port&lt;/code&gt; или &lt;code&gt;time_offset&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="61183d8e316d16b3aa5c4554b988cdbba5dc340e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Type&lt;/code&gt; can be one of the following:</source>
          <target state="translated">&lt;code&gt;Type&lt;/code&gt; может быть одним из следующих:</target>
        </trans-unit>
        <trans-unit id="4385c3e5e9c975a726b306526b500f71a36eb85b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Type&lt;/code&gt; defaults to &lt;code&gt;permanent&lt;/code&gt; and specifies the start type of the application. If &lt;code&gt;Type = permanent | transient | temporary&lt;/code&gt;, the application is loaded and started in the corresponding way, see &lt;code&gt;application(3)&lt;/code&gt;. If &lt;code&gt;Type = load&lt;/code&gt;, the application is only loaded. If &lt;code&gt;Type = none&lt;/code&gt;, the application is not loaded and not started, although the code for its modules is loaded.</source>
          <target state="translated">&lt;code&gt;Type&lt;/code&gt; умолчанию - &lt;code&gt;permanent&lt;/code&gt; и указывает тип запуска приложения. Если &lt;code&gt;Type = permanent | transient | temporary&lt;/code&gt; , приложение загружается и запускается соответствующим образом, см. &lt;code&gt;application(3)&lt;/code&gt; . Если &lt;code&gt;Type = load&lt;/code&gt; , приложение только загружается. Если &lt;code&gt;Type = none&lt;/code&gt; , приложение не загружается и не запускается, хотя код его модулей загружается.</target>
        </trans-unit>
        <trans-unit id="1a821d99536316865b2c699500c68f9bdc5a4a7c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Type&lt;/code&gt; indicates whether the transport process in question is being started for a connecting (&lt;code&gt;Type=connect&lt;/code&gt;) or listening (&lt;code&gt;Type=accept&lt;/code&gt;) transport. In the latter case, transport processes are started as required to accept connections from multiple peers.</source>
          <target state="translated">&lt;code&gt;Type&lt;/code&gt; указывает, запускается ли рассматриваемый процесс транспорта для транспорта с подключением ( &lt;code&gt;Type=connect&lt;/code&gt; ) или прослушивания ( &lt;code&gt;Type=accept&lt;/code&gt; ). В последнем случае процессы транспорта запускаются по мере необходимости для приема соединений от множества одноранговых узлов.</target>
        </trans-unit>
        <trans-unit id="caa2a7b6c0d3d07c66b2ba1852eb95b6ad894452" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Type&lt;/code&gt; is &lt;code&gt;local&lt;/code&gt; or &lt;code&gt;external&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Type&lt;/code&gt; - &lt;code&gt;local&lt;/code&gt; или &lt;code&gt;external&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="21a3d803e336bd6545c9bb32aaf535f91c6cd58b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Type&lt;/code&gt; is &lt;code&gt;trap&lt;/code&gt; or &lt;code&gt;inform&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Type&lt;/code&gt; - &lt;code&gt;trap&lt;/code&gt; или &lt;code&gt;inform&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="78a42ed7b9af09a90a6a1a7f72087dce6cf5aaa9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Type&lt;/code&gt; is the &lt;code&gt;#pdu.type&lt;/code&gt; of the original request.</source>
          <target state="translated">&lt;code&gt;Type&lt;/code&gt; - это &lt;code&gt;#pdu.type&lt;/code&gt; исходного запроса.</target>
        </trans-unit>
        <trans-unit id="474c526b3a9922a8544184a9fea2d5525d45e1a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Type&lt;/code&gt; is the allocation category that the blocks belong to, e.g. &lt;code&gt;db_term&lt;/code&gt;, &lt;code&gt;message&lt;/code&gt; or &lt;code&gt;binary&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Type&lt;/code&gt; - это категория распределения, к которой принадлежат блоки, например, &lt;code&gt;db_term&lt;/code&gt; , &lt;code&gt;message&lt;/code&gt; или &lt;code&gt;binary&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7f588287c1752d7a84c22fc8bac47e0998fd6580" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Type&lt;/code&gt; is the log type as specified by the &lt;code&gt;open/1&lt;/code&gt; option &lt;code&gt;type&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Type&lt;/code&gt; типа журнала , как указано в &lt;code&gt;open/1&lt;/code&gt; варианты &lt;code&gt;type&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="86f3e21045c0b286b88a7bf8195dcc67e9c22f4f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Type&lt;/code&gt;s:</source>
          <target state="translated">&lt;code&gt;Type&lt;/code&gt;s:</target>
        </trans-unit>
        <trans-unit id="d742e2818a5942c0c8ad73169e0d207bcb488c4f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TypeSpecifierList&lt;/code&gt; is a list of type specifiers, in any order, separated by hyphens (-). Default values are used for any omitted type specifiers.</source>
          <target state="translated">&lt;code&gt;TypeSpecifierList&lt;/code&gt; - это список спецификаторов типов в любом порядке, разделенных дефисами (-). Значения по умолчанию используются для любых пропущенных спецификаторов типа.</target>
        </trans-unit>
        <trans-unit id="a6f854978f4d26e8bf1b337746390f7a670e3302" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U&lt;/code&gt; is a subset of &lt;code&gt;XU&lt;/code&gt; (the unknown functions are a subset of the externally used functions since the compiler ensures that locally used functions are defined);</source>
          <target state="translated">&lt;code&gt;U&lt;/code&gt; - это подмножество &lt;code&gt;XU&lt;/code&gt; (неизвестные функции являются подмножеством функций, используемых извне, поскольку компилятор обеспечивает определение локально используемых функций);</target>
        </trans-unit>
        <trans-unit id="898c75cebff3b4805c07d2121c4d51fc7f18c417" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U&lt;/code&gt; is a subset of &lt;code&gt;XU&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;U&lt;/code&gt; является подмножеством &lt;code&gt;XU&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="692cf8ef50be5b3d2f0e042185cef7f3bd34073c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;URLPath = string()&lt;/code&gt; and &lt;code&gt;AllowedModule = atom()&lt;/code&gt;. &lt;code&gt;erl_script_alias&lt;/code&gt; marks all URLs matching url-path as erl scheme scripts. A matching URL is mapped into a specific module and function, for example:</source>
          <target state="translated">&lt;code&gt;URLPath = string()&lt;/code&gt; и &lt;code&gt;AllowedModule = atom()&lt;/code&gt; . &lt;code&gt;erl_script_alias&lt;/code&gt; отмечает все URL-адреса, соответствующие url-path, как сценарии схемы erl. Соответствующий URL-адрес отображается в конкретный модуль и функцию, например:</target>
        </trans-unit>
        <trans-unit id="e3fcbaddb590a3c617dece38aa9d0f190c6b03c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;URLPath = string()&lt;/code&gt; and &lt;code&gt;AllowedModule = atom()&lt;/code&gt;. Same as &lt;code&gt;erl_script_alias&lt;/code&gt; but for scripts using the eval scheme. This is only supported for backwards compatibility. The eval scheme is deprecated.</source>
          <target state="translated">&lt;code&gt;URLPath = string()&lt;/code&gt; и &lt;code&gt;AllowedModule = atom()&lt;/code&gt; . То же, что и &lt;code&gt;erl_script_alias&lt;/code&gt; , но для скриптов, использующих схему eval. Поддерживается только для обратной совместимости. Схема eval устарела.</target>
        </trans-unit>
        <trans-unit id="56aaf7274c51ed95f7dca6ce7cf373f53f104484" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UU&lt;/code&gt; is a subset of &lt;code&gt;F&lt;/code&gt; (the unused functions are defined in analyzed modules).</source>
          <target state="translated">&lt;code&gt;UU&lt;/code&gt; - это подмножество &lt;code&gt;F&lt;/code&gt; (неиспользуемые функции определены в анализируемых модулях).</target>
        </trans-unit>
        <trans-unit id="923f18e488650bde9c66947168e35c3510bff3c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UU&lt;/code&gt; is a subset of &lt;code&gt;F&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;UU&lt;/code&gt; является подмножеством &lt;code&gt;F&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="985635c99efb3d556bc5a1bd15f0d0809ae440a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UU&lt;/code&gt; is equal to &lt;code&gt;F&amp;nbsp;-&amp;nbsp;(XU&amp;nbsp;+&amp;nbsp;LU)&lt;/code&gt; (the unused functions are defined functions that are neither used externally nor locally);</source>
          <target state="translated">&lt;code&gt;UU&lt;/code&gt; равно &lt;code&gt;F&amp;nbsp;-&amp;nbsp;(XU&amp;nbsp;+&amp;nbsp;LU)&lt;/code&gt; (неиспользуемые функции - это определенные функции, которые не используются ни внешне, ни локально);</target>
        </trans-unit>
        <trans-unit id="a6ad183e880144b686df72a44944a8942cb3f72a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UU&lt;/code&gt; is equal to &lt;code&gt;V - (XU + LU)&lt;/code&gt;, where &lt;code&gt;LU&lt;/code&gt; and &lt;code&gt;XU&lt;/code&gt; may have elements in common. Put in another way:</source>
          <target state="translated">&lt;code&gt;UU&lt;/code&gt; равно &lt;code&gt;V - (XU + LU)&lt;/code&gt; , где &lt;code&gt;LU&lt;/code&gt; и &lt;code&gt;XU&lt;/code&gt; могут иметь общие элементы. Другими словами:</target>
        </trans-unit>
        <trans-unit id="6a37ede7bba99908c3022cc088f335a2bc827250" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Uniq&lt;/code&gt; (a binary) is a unique value for this fun. It is calculated from the compiled code for the entire module.</source>
          <target state="translated">&lt;code&gt;Uniq&lt;/code&gt; (двоичный) - уникальная ценность для этого развлечения. Он рассчитывается из скомпилированного кода для всего модуля.</target>
        </trans-unit>
        <trans-unit id="978d04a9f4220b7460a6bb0a4cd9469028d7122d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Uniq&lt;/code&gt; (an integer) is a unique value for this fun. As from Erlang/OTP R15, this integer is calculated from the compiled code for the entire module. Before Erlang/OTP R15, this integer was based on only the body of the fun.</source>
          <target state="translated">&lt;code&gt;Uniq&lt;/code&gt; (целое число) - уникальное значение для этого развлечения. Начиная с Erlang / OTP R15, это целое число вычисляется из скомпилированного кода для всего модуля. До Erlang / OTP R15 это целое число основывалось только на основной части веселья.</target>
        </trans-unit>
        <trans-unit id="b831d0ef7e2c0b7e197c7d455d68c63a0d8fb048" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Unused&lt;/code&gt; is kept for backward compatibility.</source>
          <target state="translated">&lt;code&gt;Unused&lt;/code&gt; сохранены для обратной совместимости.</target>
        </trans-unit>
        <trans-unit id="77b2f412b2fb0912036dac462a9a4e4850f5bdf0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Up&lt;/code&gt; - Scrolls a few &lt;code&gt;Events&lt;/code&gt; backwards.</source>
          <target state="translated">&lt;code&gt;Up&lt;/code&gt; - прокручивает несколько &lt;code&gt;Events&lt;/code&gt; назад.</target>
        </trans-unit>
        <trans-unit id="850108996895fb2380a6485c752faf8c898a91ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UserData&lt;/code&gt; is any term (passed on to the user when calling the &lt;code&gt;UserMod&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;UserData&lt;/code&gt; - это любой термин (передаваемый пользователю при вызове &lt;code&gt;UserMod&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f09467cf53584d767e4c5e69e967429a82ad2714" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UserId&lt;/code&gt; is any term (used to uniquely identify the user).</source>
          <target state="translated">&lt;code&gt;UserId&lt;/code&gt; - это любой термин (используется для однозначной идентификации пользователя).</target>
        </trans-unit>
        <trans-unit id="22808b8a3c6d7b84d5745416d67571f11e1a0442" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UserId&lt;/code&gt; is the identity of the &lt;strong&gt;manager user&lt;/strong&gt; responsible for this agent (term).</source>
          <target state="translated">&lt;code&gt;UserId&lt;/code&gt; - это идентификатор &lt;strong&gt;пользователя-менеджера,&lt;/strong&gt; ответственного за этого агента (термин).</target>
        </trans-unit>
        <trans-unit id="b9d22184964dda04a4d08ccfc2be8b52eaedeee6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UserMod&lt;/code&gt; is the user callback module (atom).</source>
          <target state="translated">&lt;code&gt;UserMod&lt;/code&gt; - это модуль обратного вызова пользователя (атом).</target>
        </trans-unit>
        <trans-unit id="2521b3d0d73fad2c771ef3561fd8380204b50113" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UserName&lt;/code&gt; is a string.</source>
          <target state="translated">&lt;code&gt;UserName&lt;/code&gt; - это строка.</target>
        </trans-unit>
        <trans-unit id="1ca9127303df3ff21e5a17edd24b25a7dc70cb28" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UserSkipped = integer()&lt;/code&gt;, current number of user-skipped test cases.</source>
          <target state="translated">&lt;code&gt;UserSkipped = integer()&lt;/code&gt; , текущее количество пропущенных пользователем тестовых случаев.</target>
        </trans-unit>
        <trans-unit id="e51e2e7486a7b928ab3d073c838ff2142d45244b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UserTerm = term()&lt;/code&gt;, any data specified by user, or &lt;code&gt;exit/1&lt;/code&gt; information.</source>
          <target state="translated">&lt;code&gt;UserTerm = term()&lt;/code&gt; , любые данные, указанные пользователем, или информация &lt;code&gt;exit/1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b2c3b6cd47ef5163f721ec91a2f369ed108802f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Users&lt;/code&gt; is the number of anonymous users of the log, see the &lt;code&gt;open/1&lt;/code&gt; option &lt;code&gt;&lt;a href=&quot;#linkto&quot;&gt;linkto&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Users&lt;/code&gt; - это количество анонимных пользователей журнала, см. &lt;code&gt;&lt;a href=&quot;#linkto&quot;&gt;linkto&lt;/a&gt;&lt;/code&gt; параметр &lt;code&gt;open/1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ed4cd6a7c66d0b27c2526a87a5235887da7fa0c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;V&lt;/code&gt; is equal to &lt;code&gt;UU + XU + LU&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;V&lt;/code&gt; равно &lt;code&gt;UU + XU + LU&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="13864afd22295498915949c8328005e8401306ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;V&lt;/code&gt; is equal to &lt;code&gt;X + L + B + U&lt;/code&gt;, where &lt;code&gt;X&lt;/code&gt;, &lt;code&gt;L&lt;/code&gt;, &lt;code&gt;B&lt;/code&gt; and &lt;code&gt;U&lt;/code&gt; are pairwise disjoint (that is, have no elements in common).</source>
          <target state="translated">&lt;code&gt;V&lt;/code&gt; равно &lt;code&gt;X + L + B + U&lt;/code&gt; , где &lt;code&gt;X&lt;/code&gt; , &lt;code&gt;L&lt;/code&gt; , &lt;code&gt;B&lt;/code&gt; и &lt;code&gt;U&lt;/code&gt; попарно не пересекаются (то есть не имеют общих элементов).</target>
        </trans-unit>
        <trans-unit id="d3b45dda6645d1ad036aa3e2e0d7b212c1824905" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Val =&lt;/code&gt;&lt;code&gt;os:env_var_value()&lt;/code&gt;&lt;code&gt;| false&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Val =&lt;/code&gt; &lt;code&gt;os:env_var_value()&lt;/code&gt; &lt;code&gt;| false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b9962cc66b1d0ac5b6d7fe0959e6ad5260006baa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Value = Calls&lt;/code&gt; which is the number of times the module, function, or clause has been called. In the case of line level analysis, &lt;code&gt;Calls&lt;/code&gt; is the number of times the line has been executed.</source>
          <target state="translated">&lt;code&gt;Value = Calls&lt;/code&gt; которое представляет собой количество вызовов модуля, функции или предложения. В случае анализа на уровне строки &lt;code&gt;Calls&lt;/code&gt; - это количество раз, когда линия была выполнена.</target>
        </trans-unit>
        <trans-unit id="d6f5604e0a71deea504de90e82a4af07fa943256" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Value = {Cov,NotCov}&lt;/code&gt; where &lt;code&gt;Cov&lt;/code&gt; is the number of executable lines in the module, function, clause or line that have been executed at least once and &lt;code&gt;NotCov&lt;/code&gt; is the number of executable lines that have not been executed.</source>
          <target state="translated">&lt;code&gt;Value = {Cov,NotCov}&lt;/code&gt; где &lt;code&gt;Cov&lt;/code&gt; - это количество исполняемых строк в модуле, функции, предложении или строке, которые были выполнены хотя бы один раз, а &lt;code&gt;NotCov&lt;/code&gt; - это количество исполняемых строк, которые не были выполнены.</target>
        </trans-unit>
        <trans-unit id="baee74f8aa36dfbcf94704bdd32a05e6ae0af5ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Value&lt;/code&gt; is a list of &lt;code&gt;{Domain, Addr}&lt;/code&gt; tuples or &lt;code&gt;Domain&lt;/code&gt; atoms.</source>
          <target state="translated">&lt;code&gt;Value&lt;/code&gt; - это список кортежей &lt;code&gt;{Domain, Addr}&lt;/code&gt; или атомов &lt;code&gt;Domain&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b7b4a7e9e0cc8b0f9454280487bec8d861f8ef24" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Value&lt;/code&gt; is a list of nodes that Mnesia is to try to connect to. &lt;code&gt;ReturnValue&lt;/code&gt; is those nodes in &lt;code&gt;Value&lt;/code&gt; that Mnesia is connected to.</source>
          <target state="translated">&lt;code&gt;Value&lt;/code&gt; - это список узлов, к которым Mnesia должна попытаться подключиться. &lt;code&gt;ReturnValue&lt;/code&gt; - это те узлы в &lt;code&gt;Value&lt;/code&gt; ,к которым подключена Mnesia.</target>
        </trans-unit>
        <trans-unit id="72846c6b4da6ad54d3d04e819f5408ac00adfc90" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Value&lt;/code&gt; is a number. See the description in &lt;code&gt;&lt;a href=&quot;#configuration_parameters&quot;&gt;Section Configuration Parameters&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;ReturnValue&lt;/code&gt; is the new value. Notice that this configuration parameter is not persistent. It is lost when Mnesia has stopped.</source>
          <target state="translated">&lt;code&gt;Value&lt;/code&gt; - это число. См. Описание в &lt;code&gt;&lt;a href=&quot;#configuration_parameters&quot;&gt;Section Configuration Parameters&lt;/a&gt;&lt;/code&gt; . &lt;code&gt;ReturnValue&lt;/code&gt; - это новое значение. Обратите внимание, что этот параметр конфигурации не является постоянным. Он теряется, когда Мнесия остановилась.</target>
        </trans-unit>
        <trans-unit id="1f22d08710d3e6e26eba94834579e768d366c20b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Value&lt;/code&gt; is the value for the variable.</source>
          <target state="translated">&lt;code&gt;Value&lt;/code&gt; - это значение переменной.</target>
        </trans-unit>
        <trans-unit id="f62230dbd1849de5dc78c615fa8ef9a53f0ff6ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Value&lt;/code&gt; is the value of the local function and &lt;code&gt;NewBindings&lt;/code&gt; are the updated variable bindings. In this case, the function handler must itself evaluate all the function arguments and manage the bindings. To signal an error, the function handler calls &lt;code&gt;exit/1&lt;/code&gt; with a suitable exit value.</source>
          <target state="translated">&lt;code&gt;Value&lt;/code&gt; - это значение локальной функции, а &lt;code&gt;NewBindings&lt;/code&gt; - это обновленные привязки переменных. В этом случае обработчик функции должен сам оценить все аргументы функции и управлять привязками. Чтобы сигнализировать об ошибке, обработчик функции вызывает &lt;code&gt;exit/1&lt;/code&gt; с подходящим значением выхода.</target>
        </trans-unit>
        <trans-unit id="3f0a3eea786c80eae5b545d3520742c7013b454e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VarName&lt;/code&gt; is not allowed to contain an &lt;code&gt;$=&lt;/code&gt; character. Previous implementations used to just let the &lt;code&gt;$=&lt;/code&gt; character through which silently caused erroneous results. Current implementation will instead throw a &lt;code&gt;badarg&lt;/code&gt; exception.</source>
          <target state="translated">&lt;code&gt;VarName&lt;/code&gt; не может содержать символ &lt;code&gt;$=&lt;/code&gt; . Предыдущие реализации использовали только символ &lt;code&gt;$=&lt;/code&gt; через который молча вызывали ошибочные результаты. Текущая реализация вместо этого &lt;code&gt;badarg&lt;/code&gt; исключение badarg .</target>
        </trans-unit>
        <trans-unit id="0fc30d9332cb5cfec95e997882c52b8354b7ce68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Varbinds&lt;/code&gt; is a list of &lt;code&gt;Varbind&lt;/code&gt;, where each &lt;code&gt;Varbind&lt;/code&gt; is one of:</source>
          <target state="translated">&lt;code&gt;Varbinds&lt;/code&gt; - это список &lt;code&gt;Varbind&lt;/code&gt; , каждый из &lt;code&gt;Varbind&lt;/code&gt; является одним из:</target>
        </trans-unit>
        <trans-unit id="3e677cce83d72c68f0f465cb2703534bb5e400c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Variable&lt;/code&gt; is one of the following:</source>
          <target state="translated">&lt;code&gt;Variable&lt;/code&gt; может быть одной из следующих:</target>
        </trans-unit>
        <trans-unit id="721a9626bd422fd41c8d0315e98d9fdd147f0bb6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Variable&lt;/code&gt; is the name of an snmp counter that represents the error, e.g. &lt;code&gt;snmpInBadCommunityUses&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Variable&lt;/code&gt; - это имя счетчика snmp, который представляет ошибку, например &lt;code&gt;snmpInBadCommunityUses&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0d2e705985127250e1520f53cd10886301c014c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Verbosity&lt;/code&gt; selects the number of warnings:</source>
          <target state="translated">&lt;code&gt;Verbosity&lt;/code&gt; выбирает количество предупреждений:</target>
        </trans-unit>
        <trans-unit id="fa81f8262be8a5db9d978a99dd1429afc1b0f466" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Version&lt;/code&gt; is a list of integers (but not a string) representing the version of the &lt;code&gt;malloc()&lt;/code&gt; implementation used.</source>
          <target state="translated">&lt;code&gt;Version&lt;/code&gt; - это список целых чисел (но не строка), представляющий версию используемой реализации &lt;code&gt;malloc()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5ede0ab7783eb1db9dd131beaf71db55e5b5ec5c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Version&lt;/code&gt; is the version (v1 | v2 | v3).</source>
          <target state="translated">&lt;code&gt;Version&lt;/code&gt; - это версия (v1 | v2 | v3).</target>
        </trans-unit>
        <trans-unit id="d8fdc13f8c9dec6bd7182368d2888e4d44f478cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Vertical scroll&lt;/code&gt; - Use mouse wheel and up/down arrows to scroll little. Use page up/down and home/end buttons to scroll more.</source>
          <target state="translated">&lt;code&gt;Vertical scroll&lt;/code&gt; - используйте колесо мыши и стрелки вверх / вниз для небольшой прокрутки. Используйте кнопки page up / down и home / end для дополнительной прокрутки.</target>
        </trans-unit>
        <trans-unit id="043fc434cfc73c5942afd1a187be1469249995f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ViewIndex&lt;/code&gt; is an integer.</source>
          <target state="translated">&lt;code&gt;ViewIndex&lt;/code&gt; - целое число.</target>
        </trans-unit>
        <trans-unit id="003ad343d524731748fa7e406e57075b3e7e6e88" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ViewMask&lt;/code&gt; is either &lt;code&gt;null&lt;/code&gt; or a list of ones and zeros. Ones nominate that an exact match is used for this sub-identifier. Zeros are wild-cards which match any sub-identifier. If the mask is shorter than the sub-tree, the tail is regarded as all ones. &lt;code&gt;null&lt;/code&gt; is shorthand for a mask with all ones.</source>
          <target state="translated">&lt;code&gt;ViewMask&lt;/code&gt; либо &lt;code&gt;null&lt;/code&gt; , либо список единиц и нулей. Одни предполагают, что для этого подидентификатора используется точное совпадение. Нули - это подстановочные символы, соответствующие любому подидентификатору. Если маска короче поддерева, хвост рассматривается как все. &lt;code&gt;null&lt;/code&gt; - это сокращение от маски со всеми единицами.</target>
        </trans-unit>
        <trans-unit id="a48f36a84da2ba75598f614390ad3b91426f84b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ViewStatus&lt;/code&gt; is either &lt;code&gt;included&lt;/code&gt; or &lt;code&gt;excluded&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ViewStatus&lt;/code&gt; либо &lt;code&gt;included&lt;/code&gt; либо &lt;code&gt;excluded&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3975efbe626e831a2efa0b407d3965e89ef55890" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ViewSubtree&lt;/code&gt; is a list of integer.</source>
          <target state="translated">&lt;code&gt;ViewSubtree&lt;/code&gt; - это список целых чисел.</target>
        </trans-unit>
        <trans-unit id="18aed3b4e846ed1f46169b8da859862cf66f91f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Vsn&lt;/code&gt; is either &lt;code&gt;'version-1'&lt;/code&gt;, &lt;code&gt;'version-2'&lt;/code&gt;, or &lt;code&gt;'version-3'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Vsn&lt;/code&gt; имеет значение &lt;code&gt;'version-1'&lt;/code&gt; , &lt;code&gt;'version-2'&lt;/code&gt; или &lt;code&gt;'version-3'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="21d2c2d7d6fb04eb51d34b2892169d49616585df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Vsn&lt;/code&gt; is the version of the unpacked release, as defined in its &lt;code&gt;.rel&lt;/code&gt; file.</source>
          <target state="translated">&lt;code&gt;Vsn&lt;/code&gt; - это версия распакованного выпуска, как определено в его файле &lt;code&gt;.rel&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cf1e2347ff1a47b8054894bc5ee840c48e283af8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Vsn&lt;/code&gt; translates into &lt;code&gt;MPModel&lt;/code&gt; and &lt;code&gt;SecModel&lt;/code&gt; as follows:</source>
          <target state="translated">&lt;code&gt;Vsn&lt;/code&gt; переводится в &lt;code&gt;MPModel&lt;/code&gt; и &lt;code&gt;SecModel&lt;/code&gt; следующим образом:</target>
        </trans-unit>
        <trans-unit id="539a0b79730e7fe2753fa19b8c1f70811d5cdce8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Vsn&lt;/code&gt;, a string, is the current version of the application, as defined in the &lt;code&gt;.app&lt;/code&gt; file.</source>
          <target state="translated">&lt;code&gt;Vsn&lt;/code&gt; , строка, представляет собой текущую версию приложения, как определено в файле &lt;code&gt;.app&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1d74b48eb4dafe5b1a84d39c7571b47db235583a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Warnings&lt;/code&gt; is the list of error descriptors of all &lt;code&gt;warning_marker&lt;/code&gt; nodes that occur in &lt;code&gt;Forms&lt;/code&gt;. The order of listing is not defined.</source>
          <target state="translated">&lt;code&gt;Warnings&lt;/code&gt; - это список дескрипторов ошибок всех узлов &lt;code&gt;warning_marker&lt;/code&gt; , которые встречаются в &lt;code&gt;Forms&lt;/code&gt; . Порядок размещения не определен.</target>
        </trans-unit>
        <trans-unit id="2b12237380545e4bf33fbb504a64fcae9ffd1e9f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;WindowBits&lt;/code&gt; is the base two logarithm of the maximum window size (the size of the history buffer). It is to be in the range 8 through 15. Default to 15 if &lt;code&gt;&lt;a href=&quot;#inflateInit-1&quot;&gt;inflateInit/1&lt;/a&gt;&lt;/code&gt; is used.</source>
          <target state="translated">&lt;code&gt;WindowBits&lt;/code&gt; - это два основных логарифма максимального размера окна (размер буфера истории). Он должен находиться в диапазоне от 8 до 15. По умолчанию - 15, если используется &lt;code&gt;&lt;a href=&quot;#inflateInit-1&quot;&gt;inflateInit/1&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="67643a3996b12f24a2be5b13581df35894f74afa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Worst&lt;/code&gt; is the pid and number of allocated bytes of the largest Erlang process on the node. If &lt;code&gt;memsup&lt;/code&gt; should not collect process data, that is if the configuration parameter &lt;code&gt;memsup_system_only&lt;/code&gt; was set to &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;Worst&lt;/code&gt; is &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Worst&lt;/code&gt; является pid и количество выделенных байтов самого большого процесса Erlang на узле. Если &lt;code&gt;memsup&lt;/code&gt; не должен собирать данные процесса, то есть если для параметра конфигурации &lt;code&gt;memsup_system_only&lt;/code&gt; было установлено значение &lt;code&gt;true&lt;/code&gt; , &lt;code&gt;Worst&lt;/code&gt; не &lt;code&gt;undefined&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6b531ca937cb5f2bc8d867b283a607daa9fa7067" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;WriteView&lt;/code&gt; is a string.</source>
          <target state="translated">&lt;code&gt;WriteView&lt;/code&gt; - это строка.</target>
        </trans-unit>
        <trans-unit id="71485d56546b0beefd97ba59c6341b838a69db4e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;XU&lt;/code&gt; is equal to &lt;code&gt;range XC&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;XU&lt;/code&gt; равен &lt;code&gt;range XC&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b55b14897dffa6289441d6eec18178caacd827ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[Address = string()]&lt;/code&gt; The contents of &lt;code&gt;Address&lt;/code&gt; is server dependent.</source>
          <target state="translated">&lt;code&gt;[Address = string()]&lt;/code&gt; Содержимое &lt;code&gt;Address&lt;/code&gt; зависит от сервера.</target>
        </trans-unit>
        <trans-unit id="58843a980ea15f66b4f7ac4eb722358bcaea97c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[X || X &amp;lt;- T, X &amp;gt;= Pivot]&lt;/code&gt; is the list of all elements in &lt;code&gt;T&lt;/code&gt; that are greater than or equal to &lt;code&gt;Pivot&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;[X || X &amp;lt;- T, X &amp;gt;= Pivot]&lt;/code&gt; - это список всех элементов в &lt;code&gt;T&lt;/code&gt; , которые больше или равны &lt;code&gt;Pivot&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dea3522b3a4df1d03b0280b5a307ea6a99e0fa56" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[]&lt;/code&gt; - An empty list indicates that the erlang scanner should be used.</source>
          <target state="translated">&lt;code&gt;[]&lt;/code&gt; - пустой список указывает, что следует использовать сканер erlang.</target>
        </trans-unit>
        <trans-unit id="f1a5dbac4542b98d3918ab1701aa9b17885cf7cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[]&lt;/code&gt; - Encodes the messages to the standard distribution format. It is rather verbose but encoding and decoding is blinding fast.</source>
          <target state="translated">&lt;code&gt;[]&lt;/code&gt; - кодирует сообщения в стандартный формат рассылки. Это довольно многословно, но кодирование и декодирование ослепительно быстро.</target>
        </trans-unit>
        <trans-unit id="6c891c0bdf07c0c81085ac2c512cee221239be01" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[]&lt;/code&gt; - Translated into a list of the own node: &lt;code&gt;[node()]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;[]&lt;/code&gt; - Переведено в список собственного узла: &lt;code&gt;[node()]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7aa73ff63e63b1712133831888e0ae7bf769ff2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[]&lt;/code&gt; is a list, thus</source>
          <target state="translated">&lt;code&gt;[]&lt;/code&gt; - это список, поэтому</target>
        </trans-unit>
        <trans-unit id="aa2de75acee60f52e83af54911ecab2fefde928b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[a|[b|[c|[]]]]&lt;/code&gt; is a list, or in short &lt;code&gt;[a,b,c]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;[a|[b|[c|[]]]]&lt;/code&gt; - это список, или вкратце &lt;code&gt;[a,b,c]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="750d5e9c1dd1fee3cefa4cddb1d680d4b85ef850" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[b|[c|[]]]&lt;/code&gt; is a list, thus</source>
          <target state="translated">&lt;code&gt;[b|[c|[]]]&lt;/code&gt; - это список, поэтому</target>
        </trans-unit>
        <trans-unit id="0202ab521e4c16fbff04b0cfab46068d12850e94" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[compressed]&lt;/code&gt; - Encodes the messages to a compressed form of the standard distribution format. It is less verbose, but the encoding and decoding will on the other hand be slower.</source>
          <target state="translated">&lt;code&gt;[compressed]&lt;/code&gt; - кодирует сообщения в сжатую форму стандартного формата распространения. Он менее подробный, но, с другой стороны, кодирование и декодирование будут медленнее.</target>
        </trans-unit>
        <trans-unit id="63387f3e32b6c484f5f5e51cb1368ac62f111ef9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[c|[]]&lt;/code&gt; is a list, thus</source>
          <target state="translated">&lt;code&gt;[c|[]]&lt;/code&gt; - это список, поэтому</target>
        </trans-unit>
        <trans-unit id="d1ac90eb55ddae0ac46e10c6c8ccb4a49a75c07b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[erlang, mnesia, otp]&lt;/code&gt; is a list of three direct references to three different &lt;code&gt;projects&lt;/code&gt; records.</source>
          <target state="translated">&lt;code&gt;[erlang, mnesia, otp]&lt;/code&gt; - это список из трех прямых ссылок на три различных записи &lt;code&gt;projects&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="70194f0f6e78d3b9d059251ec3e1ee77938ce1d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[integer()]&lt;/code&gt; - A list containing the size (the number of bits) of each level. Example: &lt;code&gt;[3,8,5,8]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;[integer()]&lt;/code&gt; - список, содержащий размер (количество бит) каждого уровня. Пример: &lt;code&gt;[3,8,5,8]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0c182d51ea654aead7a970e38ac9d8f31da1f5c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[megaco_compressed]&lt;/code&gt; - Encodes the messages to the standard distribution format after an internal transformation. It is less verbose, but the total time of the encoding and decoding will on the other hand be somewhat slower (see the &lt;code&gt;&lt;a href=&quot;megaco_performance&quot;&gt;performance&lt;/a&gt;&lt;/code&gt; chapter for more info).</source>
          <target state="translated">&lt;code&gt;[megaco_compressed]&lt;/code&gt; - кодирует сообщения в стандартный формат распространения после внутреннего преобразования. Это менее многословным, но общее время кодирования и декодирования воли с другой стороны, несколько медленнее (см &lt;code&gt;&lt;a href=&quot;megaco_performance&quot;&gt;performance&lt;/a&gt;&lt;/code&gt; раздел для получения дополнительной информации).</target>
        </trans-unit>
        <trans-unit id="43866a70271e9e7412e1575a585b4c57bb5da68c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[native]&lt;/code&gt; - skips the transformation phase, i.e. the decoded message(s) will not be transformed into our internal form.</source>
          <target state="translated">&lt;code&gt;[native]&lt;/code&gt; - пропускает фазу преобразования, т.е. декодированные сообщения не будут преобразованы в нашу внутреннюю форму.</target>
        </trans-unit>
        <trans-unit id="1b77d9eaa24a5dc309ea50d131abb91effdda6a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[{flex, port()}]&lt;/code&gt; - Use the flex scanner when decoding (not optimized for SMP). See &lt;code&gt;&lt;a href=&quot;megaco_run#initial_config&quot;&gt;initial configuration&lt;/a&gt;&lt;/code&gt; for more info.</source>
          <target state="translated">&lt;code&gt;[{flex, port()}]&lt;/code&gt; - использовать гибкий сканер при декодировании (не оптимизирован для SMP). См. &lt;code&gt;&lt;a href=&quot;megaco_run#initial_config&quot;&gt;initial configuration&lt;/a&gt;&lt;/code&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="3499321580179f3fe8caf62b26b14282cb7f2190" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[{flex, ports()}]&lt;/code&gt; - Use the flex scanner when decoding (optimized for SMP). See &lt;code&gt;&lt;a href=&quot;megaco_run#initial_config&quot;&gt;initial configuration&lt;/a&gt;&lt;/code&gt; for more info.</source>
          <target state="translated">&lt;code&gt;[{flex, ports()}]&lt;/code&gt; - использовать гибкий сканер при декодировании (оптимизирован для SMP). См. &lt;code&gt;&lt;a href=&quot;megaco_run#initial_config&quot;&gt;initial configuration&lt;/a&gt;&lt;/code&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="09facbac0459a65b1017b50c767631ac01b79cad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[{megaco_compressed, Module}]&lt;/code&gt; - Works in the same way as the megaco_compressed config parameter, only here the user provide their own compress module. This module must implement the &lt;code&gt;&lt;a href=&quot;megaco_edist_compress&quot;&gt;megaco_edist_compress&lt;/a&gt;&lt;/code&gt; behaviour.</source>
          <target state="translated">&lt;code&gt;[{megaco_compressed, Module}]&lt;/code&gt; - работает так же, как параметр конфигурации megaco_compressed, только здесь пользователь предоставляет свой собственный модуль сжатия. Этот модуль должен реализовывать поведение &lt;code&gt;&lt;a href=&quot;megaco_edist_compress&quot;&gt;megaco_edist_compress&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d3e70c82e02eafb1e915c5f2e6c5ec86bf5015a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_@@bar&lt;/code&gt; is a glob variable, and &lt;code&gt;_@_@bar&lt;/code&gt; is a lifted glob variable</source>
          <target state="translated">&lt;code&gt;_@@bar&lt;/code&gt; - глобальная переменная, а &lt;code&gt;_@_@bar&lt;/code&gt; - поднятая глобальная переменная.</target>
        </trans-unit>
        <trans-unit id="41a3c6bccdc4eba63910c97a11f5b7cecefb8721" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;accept/1&lt;/code&gt; should spawn a process that accepts connections. This process should preferably execute on &lt;code&gt;max&lt;/code&gt; priority. The process identifier of this process should be returned.</source>
          <target state="translated">&lt;code&gt;accept/1&lt;/code&gt; должен порождать процесс, принимающий соединения. Этот процесс предпочтительно должен выполняться с &lt;code&gt;max&lt;/code&gt; приоритетом. Должен быть возвращен идентификатор этого процесса.</target>
        </trans-unit>
        <trans-unit id="b6840e0824da7ebe7963f46402afd300355102b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;accept_connection/5&lt;/code&gt; should spawn a process that will perform the Erlang distribution handshake for the connection. If the handshake successfully completes it should continue to function as a connection supervisor. This process should preferably execute on &lt;code&gt;max&lt;/code&gt; priority.</source>
          <target state="translated">&lt;code&gt;accept_connection/5&lt;/code&gt; должен порождать процесс, который будет выполнять рукопожатие распределения Erlang для соединения. Если рукопожатие успешно завершено, оно должно продолжать работать как супервизор соединения. Этот процесс предпочтительно должен выполняться с &lt;code&gt;max&lt;/code&gt; приоритетом.</target>
        </trans-unit>
        <trans-unit id="29bcee8a7eb3171caee510874100c571edbbea57" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;access_mode&lt;/code&gt;. Returns the access mode of the table. The access mode can be &lt;code&gt;read_only&lt;/code&gt; or &lt;code&gt;read_write&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;access_mode&lt;/code&gt; . Возвращает режим доступа к таблице. Режим доступа может быть &lt;code&gt;read_only&lt;/code&gt; или &lt;code&gt;read_write&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c020fa4d0f91915fcdac48754da555e007b99d6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;access_module&lt;/code&gt;. Returns the name of module that is configured to be the activity access callback module.</source>
          <target state="translated">&lt;code&gt;access_module&lt;/code&gt; . Возвращает имя модуля, который настроен как модуль обратного вызова доступа к активности.</target>
        </trans-unit>
        <trans-unit id="aa5ffb64ce2d689521884392fc8b8b73bc8d6d79" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;action&lt;/code&gt; - Specifies the behaviour when a non-empty file is found: Keep its content or clear it out.</source>
          <target state="translated">&lt;code&gt;action&lt;/code&gt; - определяет поведение при обнаружении непустого файла: сохранить его содержимое или очистить его.</target>
        </trans-unit>
        <trans-unit id="64cadd3e914fb604781d58492bacaec15601919e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;action&lt;/code&gt; - Specifies the behaviour when a non-empty, already existing, table: Keep its content or clear it out.</source>
          <target state="translated">&lt;code&gt;action&lt;/code&gt; - Определяет поведение при непустой, уже существующей таблице: сохранить ее содержимое или очистить его.</target>
        </trans-unit>
        <trans-unit id="30e97d5d522210ddfce2ee69bd50abe4408333e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;active&lt;/code&gt; - The count of all actively running child processes managed by this supervisor. For a &lt;code&gt;simple_one_for_one&lt;/code&gt; supervisors, no check is done to ensure that each child process is still alive, although the result provided here is likely to be very accurate unless the supervisor is heavily overloaded.</source>
          <target state="translated">&lt;code&gt;active&lt;/code&gt; - количество всех активно запущенных дочерних процессов, управляемых этим супервизором. Для супервизоров &lt;code&gt;simple_one_for_one&lt;/code&gt; не выполняется проверка, чтобы гарантировать, что каждый дочерний процесс все еще жив, хотя результат, представленный здесь, вероятно, будет очень точным, если супервизор не сильно перегружен.</target>
        </trans-unit>
        <trans-unit id="41c87e7c264e7abea50c1af32323b798c2bcd229" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;active&lt;/code&gt;. Some delete operations require that all active records are removed.</source>
          <target state="translated">&lt;code&gt;active&lt;/code&gt; . Некоторые операции удаления требуют удаления всех активных записей.</target>
        </trans-unit>
        <trans-unit id="3dcbcbbb783a768c2123748bed02001e19267544" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;add_edge(G,&amp;nbsp;V1,&amp;nbsp;V2)&lt;/code&gt; is equivalent to &lt;code&gt;add_edge(G,&amp;nbsp;V1,&amp;nbsp;V2,&amp;nbsp;[])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;add_edge(G,&amp;nbsp;V1,&amp;nbsp;V2)&lt;/code&gt; эквивалентен &lt;code&gt;add_edge(G,&amp;nbsp;V1,&amp;nbsp;V2,&amp;nbsp;[])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6735b21a34f8a3b318add28bc939db34c74e7c65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;add_edge(G,&amp;nbsp;V1,&amp;nbsp;V2,&amp;nbsp;Label)&lt;/code&gt; is equivalent to &lt;code&gt;add_edge(G,&amp;nbsp;E,&amp;nbsp;V1,&amp;nbsp;V2,&amp;nbsp;Label)&lt;/code&gt;, where &lt;code&gt;E&lt;/code&gt; is a created edge. The created edge is represented by term &lt;code&gt;['$e'&amp;nbsp;|&amp;nbsp;N]&lt;/code&gt;, where &lt;code&gt;N&lt;/code&gt; is an integer &amp;gt;= 0.</source>
          <target state="translated">&lt;code&gt;add_edge(G,&amp;nbsp;V1,&amp;nbsp;V2,&amp;nbsp;Label)&lt;/code&gt; эквивалентно &lt;code&gt;add_edge(G,&amp;nbsp;E,&amp;nbsp;V1,&amp;nbsp;V2,&amp;nbsp;Label)&lt;/code&gt; , где &lt;code&gt;E&lt;/code&gt; - созданное ребро. Созданное ребро представлено термином &lt;code&gt;['$e'&amp;nbsp;|&amp;nbsp;N]&lt;/code&gt; , где &lt;code&gt;N&lt;/code&gt; - целое число&amp;gt; = 0.</target>
        </trans-unit>
        <trans-unit id="eded226af24e6ef08af042767a734cf0549eb6d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;add_edge/5&lt;/code&gt; creates (or modifies) edge &lt;code&gt;E&lt;/code&gt; of digraph &lt;code&gt;G&lt;/code&gt;, using &lt;code&gt;Label&lt;/code&gt; as the (new) &lt;code&gt;&lt;a href=&quot;#label&quot;&gt;label&lt;/a&gt;&lt;/code&gt; of the edge. The edge is &lt;code&gt;&lt;a href=&quot;#emanate&quot;&gt;emanating&lt;/a&gt;&lt;/code&gt; from &lt;code&gt;V1&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#incident&quot;&gt;incident&lt;/a&gt;&lt;/code&gt; on &lt;code&gt;V2&lt;/code&gt;. Returns &lt;code&gt;E&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;add_edge/5&lt;/code&gt; создает (или изменяет) ребро &lt;code&gt;E&lt;/code&gt; орграфа &lt;code&gt;G&lt;/code&gt; , используя &lt;code&gt;Label&lt;/code&gt; в качестве (новой) &lt;code&gt;&lt;a href=&quot;#label&quot;&gt;label&lt;/a&gt;&lt;/code&gt; ребра. Ребро &lt;code&gt;&lt;a href=&quot;#emanate&quot;&gt;emanating&lt;/a&gt;&lt;/code&gt; из &lt;code&gt;V1&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;#incident&quot;&gt;incident&lt;/a&gt;&lt;/code&gt; на &lt;code&gt;V2&lt;/code&gt; . Возвращает &lt;code&gt;E&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9f8f0e4ece533d195d622a71e998720d95b7462c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;add_group_member/3, add_group_member/4&lt;/code&gt;, and &lt;code&gt;add_group_member/5&lt;/code&gt; each adds a user to a group. If the group does not exist, it is created and the user is added to the group. Upon successful operation, this function returns &lt;code&gt;true&lt;/code&gt;. When &lt;code&gt;add_group_members/3&lt;/code&gt; is called, options &lt;code&gt;Port&lt;/code&gt; and &lt;code&gt;Dir&lt;/code&gt; are mandatory.</source>
          <target state="translated">&lt;code&gt;add_group_member/3, add_group_member/4&lt;/code&gt; и &lt;code&gt;add_group_member/5&lt;/code&gt; добавляют пользователя в группу. Если группа не существует, она создается, и пользователь добавляется в группу. После успешной работы эта функция возвращает &lt;code&gt;true&lt;/code&gt; . Когда &lt;code&gt;add_group_members/3&lt;/code&gt; , параметры &lt;code&gt;Port&lt;/code&gt; и &lt;code&gt;Dir&lt;/code&gt; являются обязательными.</target>
        </trans-unit>
        <trans-unit id="308570fc650deac37e209d4ae7a7f26b09b0e8ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;add_release/3&lt;/code&gt; assumes that all subdirectories of the library directory returned by &lt;code&gt;code:lib_dir()&lt;/code&gt; contain applications; the effect is that of reading all applications' BEAM files.</source>
          <target state="translated">&lt;code&gt;add_release/3&lt;/code&gt; предполагает, что все подкаталоги каталога библиотеки, возвращенные &lt;code&gt;code:lib_dir()&lt;/code&gt; содержат приложения; эффект заключается в чтении файлов BEAM всех приложений.</target>
        </trans-unit>
        <trans-unit id="fdd6583035bdd4a5eac07667a90ffcfda05e87c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;add_user/2, add_user/5&lt;/code&gt;, and &lt;code&gt;add_user/6&lt;/code&gt; each adds a user to the user database. If the operation is successful, this function returns &lt;code&gt;true&lt;/code&gt;. If an error occurs, &lt;code&gt;{error,Reason}&lt;/code&gt; is returned. When &lt;code&gt;add_user/2&lt;/code&gt; is called, options &lt;code&gt;Password&lt;/code&gt;, &lt;code&gt;UserData&lt;/code&gt;, &lt;code&gt;Port&lt;/code&gt;, and &lt;code&gt;Dir&lt;/code&gt; are mandatory.</source>
          <target state="translated">&lt;code&gt;add_user/2, add_user/5&lt;/code&gt; и &lt;code&gt;add_user/6&lt;/code&gt; каждый добавляет пользователя в базу данных пользователей. Если операция прошла успешно, эта функция возвращает &lt;code&gt;true&lt;/code&gt; . Если возникает &lt;code&gt;{error,Reason}&lt;/code&gt; возвращается {error, Reason} . Когда &lt;code&gt;add_user/2&lt;/code&gt; , параметры &lt;code&gt;Password&lt;/code&gt; , &lt;code&gt;UserData&lt;/code&gt; , &lt;code&gt;Port&lt;/code&gt; и &lt;code&gt;Dir&lt;/code&gt; являются обязательными.</target>
        </trans-unit>
        <trans-unit id="d2ec99872166f08f95ed1e017a3afbe33be8d472" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;add_vertex(G,&amp;nbsp;V)&lt;/code&gt; is equivalent to &lt;code&gt;add_vertex(G,&amp;nbsp;V,&amp;nbsp;[])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;add_vertex(G,&amp;nbsp;V)&lt;/code&gt; эквивалентно &lt;code&gt;add_vertex(G,&amp;nbsp;V,&amp;nbsp;[])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dfe09666e83bbac0e7cc8dda7e715e28c12cf23f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;add_vertex/1&lt;/code&gt; creates a vertex using the empty list as label, and returns the created vertex. The created vertex is represented by term &lt;code&gt;['$v'&amp;nbsp;|&amp;nbsp;N]&lt;/code&gt;, where &lt;code&gt;N&lt;/code&gt; is an integer &amp;gt;= 0.</source>
          <target state="translated">&lt;code&gt;add_vertex/1&lt;/code&gt; создает вершину, используя пустой список в качестве метки, и возвращает созданную вершину. Созданная вершина представлена ​​термином &lt;code&gt;['$v'&amp;nbsp;|&amp;nbsp;N]&lt;/code&gt; , где &lt;code&gt;N&lt;/code&gt; - целое число&amp;gt; = 0.</target>
        </trans-unit>
        <trans-unit id="c3656692fbaf0860268c5e0ce6f05c82ca2871b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;add_vertex/3&lt;/code&gt; creates (or modifies) vertex &lt;code&gt;V&lt;/code&gt; of digraph &lt;code&gt;G&lt;/code&gt;, using &lt;code&gt;Label&lt;/code&gt; as the (new) &lt;code&gt;&lt;a href=&quot;#label&quot;&gt;label&lt;/a&gt;&lt;/code&gt; of the vertex. Returns &lt;code&gt;V&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;add_vertex/3&lt;/code&gt; создает (или изменяет) вершину &lt;code&gt;V&lt;/code&gt; орграфа &lt;code&gt;G&lt;/code&gt; , используя &lt;code&gt;Label&lt;/code&gt; в качестве (новой) &lt;code&gt;&lt;a href=&quot;#label&quot;&gt;label&lt;/a&gt;&lt;/code&gt; вершины. Возвращает &lt;code&gt;V&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="80632824b7883f4a1c74ee9b61dead483f3d0ed7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;addr&lt;/code&gt; is the 32-bit IP address of &lt;code&gt;host&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;addr&lt;/code&gt; - это 32-битный IP-адрес &lt;code&gt;host&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9b87e1985b177cc9187727ee7c46851207be8ebc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;addr&lt;/code&gt; is the 32-bit IP address of the local host.</source>
          <target state="translated">&lt;code&gt;addr&lt;/code&gt; - это 32-битный IP-адрес локального хоста.</target>
        </trans-unit>
        <trans-unit id="0c836ff71ba1f47fd39e9623dfc614ddc05108b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;addr&lt;/code&gt; is the 32-bit IP address of the remote host.</source>
          <target state="translated">&lt;code&gt;addr&lt;/code&gt; - это 32-битный IP-адрес удаленного хоста.</target>
        </trans-unit>
        <trans-unit id="699d2abaabfbb891035645ffeaa860104a2bae0c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;adjust&lt;/code&gt; is the adjustment.</source>
          <target state="translated">&lt;code&gt;adjust&lt;/code&gt; это корректировка.</target>
        </trans-unit>
        <trans-unit id="34a1320a67660e060d22139d7d8a87305e9f7a33" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;advise/4&lt;/code&gt; can be used to announce an intention to access file data in a specific pattern in the future, thus allowing the operating system to perform appropriate optimizations.</source>
          <target state="translated">&lt;code&gt;advise/4&lt;/code&gt; можно использовать для объявления о намерении получить доступ к данным файла по определенному шаблону в будущем, что позволит операционной системе выполнить соответствующие оптимизации.</target>
        </trans-unit>
        <trans-unit id="7afecc1566f50ee3ca0ab54ffb403b65ddf62d6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;af&lt;/code&gt; (a fit)</source>
          <target state="translated">&lt;code&gt;af&lt;/code&gt; (подходит)</target>
        </trans-unit>
        <trans-unit id="c3e122732fccd7058e1f787f0962d549d6b90ea7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ageffcaobf&lt;/code&gt; (age order first fit carrier address order best fit)</source>
          <target state="translated">&lt;code&gt;ageffcaobf&lt;/code&gt; (возрастной порядок первого соответствия адрес перевозчика порядок наилучшего соответствия)</target>
        </trans-unit>
        <trans-unit id="cd0cb8c2759f83ac86614295146be45f26220600" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ageffcaoff&lt;/code&gt; (age order first fit carrier address order first fit)</source>
          <target state="translated">&lt;code&gt;ageffcaoff&lt;/code&gt; (возраст соответствует порядку первого соответствия, адрес перевозчика порядок первого соответствия)</target>
        </trans-unit>
        <trans-unit id="b6ab35af9ae11e26a3b715cd4c3eee87ea061bb4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ageffcbf&lt;/code&gt; (age order first fit carrier best fit)</source>
          <target state="translated">&lt;code&gt;ageffcbf&lt;/code&gt; (возрастная категория: наиболее подходящий носитель)</target>
        </trans-unit>
        <trans-unit id="23de4c452f541d98707bd07e4cfbb7d5d4d16c28" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;agent.conf&lt;/code&gt;: see &lt;code&gt;&lt;a href=&quot;#agent_information&quot;&gt;Agent Information&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;agent.conf&lt;/code&gt; : см. &lt;code&gt;&lt;a href=&quot;#agent_information&quot;&gt;Agent Information&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8ff47ce1780c480f2faaa98dfc2c6486b2589cd7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;alarm_handler(3)&lt;/code&gt;, &lt;code&gt;os_mon(3)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;alarm_handler(3)&lt;/code&gt; , &lt;code&gt;os_mon(3)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8a84641b8fd6385c030bd6d3537dbcab356b1105" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;alive&lt;/code&gt; is the alivename of the node.</source>
          <target state="translated">&lt;code&gt;alive&lt;/code&gt; является alivename узла.</target>
        </trans-unit>
        <trans-unit id="f79edcb1662e15c5611ff0fbb2208fbc936b2d69" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;alive&lt;/code&gt; is the alivename of the remote node.</source>
          <target state="translated">&lt;code&gt;alive&lt;/code&gt; является alivename удаленного узла.</target>
        </trans-unit>
        <trans-unit id="093965dc89e02aa9accca4f967a1fef9354be4ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;alive&lt;/code&gt; is the name of the node to unregister, that is, the first component of the node name, without &lt;code&gt;@hostname&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;alive&lt;/code&gt; - это имя узла, регистрацию которого нужно отменить, то есть первый компонент имени узла без &lt;code&gt;@hostname&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b8a0984d3f52dfd8e9a64abbcc05a017870ce387" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;all (0)&lt;/code&gt; - Starts a new &lt;code&gt;Viewer&lt;/code&gt; with the &lt;code&gt;Collector Filter&lt;/code&gt; as active filter. It will cause all events in the collector to be viewed.</source>
          <target state="translated">&lt;code&gt;all (0)&lt;/code&gt; - запускает новую программу &lt;code&gt;Viewer&lt;/code&gt; с &lt;code&gt;Collector Filter&lt;/code&gt; качестве активного фильтра. Это приведет к просмотру всех событий в сборщике.</target>
        </trans-unit>
        <trans-unit id="9d2afce67f341c097c5a287163fbb70f92d80119" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;all&lt;/code&gt; - &lt;code&gt;erlang:nodes()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;all&lt;/code&gt; - &lt;code&gt;erlang:nodes()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="88d72784a763c7cf3461bef60775be585c6a51d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;all&lt;/code&gt; has the same arguments as &lt;code&gt;any&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;all&lt;/code&gt; те же аргументы, что и у &lt;code&gt;any&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="0d3b15afd2f020d868a11605a2aace698272fc93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;all&lt;/code&gt;. Returns a list of all local system information. Each element is a &lt;code&gt;{InfoKey, InfoVal}&lt;/code&gt; tuple.</source>
          <target state="translated">&lt;code&gt;all&lt;/code&gt; . Возвращает список всей локальной системной информации. Каждый элемент представляет собой кортеж &lt;code&gt;{InfoKey, InfoVal}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e5120726b82e227b3d64104d915e704131f8333b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;all&lt;/code&gt;. Returns a list of all local table information. Each element is a &lt;code&gt;{InfoKey, ItemVal}&lt;/code&gt; tuple.</source>
          <target state="translated">&lt;code&gt;all&lt;/code&gt; . Возвращает список всей информации о локальной таблице. Каждый элемент представляет собой кортеж &lt;code&gt;{InfoKey, ItemVal}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="97512066008b8088626fc161f01045faad633407" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;allocate/3&lt;/code&gt; can be used to preallocate space for a file.</source>
          <target state="translated">&lt;code&gt;allocate/3&lt;/code&gt; можно использовать для предварительного выделения места для файла.</target>
        </trans-unit>
        <trans-unit id="41666bf49b92f45df37f91724cb8f4bdd3d83fd2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;allocated&lt;/code&gt; and &lt;code&gt;freed&lt;/code&gt; are initialized to contain information about the fix-allocator used to allocate &lt;code&gt;ETERM&lt;/code&gt; components.</source>
          <target state="translated">&lt;code&gt;allocated&lt;/code&gt; и &lt;code&gt;freed&lt;/code&gt; инициализируются, чтобы содержать информацию о распределителе исправлений, используемом для распределения компонентов &lt;code&gt;ETERM&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="81e1b5bb6f005718b97cdcef18327ce1a6e6497b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;allocated&lt;/code&gt; is the number of blocks currently allocated to &lt;code&gt;ETERM&lt;/code&gt; objects.</source>
          <target state="translated">&lt;code&gt;allocated&lt;/code&gt; - количество блоков, выделенных в &lt;code&gt;ETERM&lt;/code&gt; объектам ETERM .</target>
        </trans-unit>
        <trans-unit id="12a3f3a12999ecd68f3a41d6438ae747b45cc2a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;already_exists&lt;/code&gt;. Schema option to be activated is already on.</source>
          <target state="translated">&lt;code&gt;already_exists&lt;/code&gt; . Опция схемы, которую нужно активировать, уже включена.</target>
        </trans-unit>
        <trans-unit id="e09c32739412caf3bb45902d7c7c54f88a8121e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;any&lt;/code&gt; takes a predicate &lt;code&gt;P&lt;/code&gt; of one argument and a list of terms:</source>
          <target state="translated">&lt;code&gt;any&lt;/code&gt; принимает предикат &lt;code&gt;P&lt;/code&gt; из одного аргумента и списка терминов:</target>
        </trans-unit>
        <trans-unit id="c04a1d0a8b42c3f884cc4061d4be2169366adfa0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aobf&lt;/code&gt; (address order best fit)</source>
          <target state="translated">&lt;code&gt;aobf&lt;/code&gt; (адресный заказ лучше всего подходит)</target>
        </trans-unit>
        <trans-unit id="8e3886f8937bc796389366681b1568f292057745" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aoff&lt;/code&gt; (address order first fit)</source>
          <target state="translated">&lt;code&gt;aoff&lt;/code&gt; (адресный порядок подходит первым)</target>
        </trans-unit>
        <trans-unit id="1c1a2a991912818f34517a6d59e8ac8bf23861a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aoffcaobf&lt;/code&gt; (address order first fit carrier address order best fit)</source>
          <target state="translated">&lt;code&gt;aoffcaobf&lt;/code&gt; (адресный заказ - первый подходящий адрес оператора - адресный заказ лучше всего подходит)</target>
        </trans-unit>
        <trans-unit id="d36eb867ec84d005b2b36939491b867b1a074b86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aoffcbf&lt;/code&gt; (address order first fit carrier best fit)</source>
          <target state="translated">&lt;code&gt;aoffcbf&lt;/code&gt; (адресный заказ, наиболее подходящий перевозчик)</target>
        </trans-unit>
        <trans-unit id="2346e55f01b0a576c1d4c1c0db448da3cc8b60e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;app(4)&lt;/code&gt; manual page in Kernel</source>
          <target state="translated">&lt;code&gt;app(4)&lt;/code&gt; справочная страница в ядре</target>
        </trans-unit>
        <trans-unit id="33877b32d205ddb1b7629894b405b3964320c267" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;app(4)&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;appup&quot;&gt;appup(4)&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;rel&quot;&gt;rel(4)&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;release_handler&quot;&gt;release_handler(3)&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;systools&quot;&gt;systools(3)&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;app(4)&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;appup&quot;&gt;appup(4)&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;rel&quot;&gt;rel(4)&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;release_handler&quot;&gt;release_handler(3)&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;systools&quot;&gt;systools(3)&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ff621ce736ff1d127c1f08d97a3f6143ea2fd097" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;app(4)&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;appup&quot;&gt;appup(4)&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;erl(1)&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;rel&quot;&gt;rel(4)&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;release_handler&quot;&gt;release_handler(3)&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;relup&quot;&gt;relup(4)&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;script&quot;&gt;script(4)&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;app(4)&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;appup&quot;&gt;appup(4)&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;erl(1)&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;rel&quot;&gt;rel(4)&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;release_handler&quot;&gt;release_handler(3)&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;relup&quot;&gt;relup(4)&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;script&quot;&gt;script(4)&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ff8e1c38283104e4739a04e604ae9ffe2a9d5475" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;append(QH1,&amp;nbsp;QH2)&lt;/code&gt; is equivalent to &lt;code&gt;append([QH1,&amp;nbsp;QH2])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;append(QH1,&amp;nbsp;QH2)&lt;/code&gt; эквивалентно &lt;code&gt;append([QH1,&amp;nbsp;QH2])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="99af6c4c16c5603f3b5358b847dfe0ee6145c1bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;application(3)&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;relup&quot;&gt;relup(4)&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;systools&quot;&gt;systools(3)&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;application(3)&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;relup&quot;&gt;relup(4)&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;systools&quot;&gt;systools(3)&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ee035bbbbb046cffe841b862f3e718ba886d5d71" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;application(3)&lt;/code&gt;, &lt;code&gt;dets(3)&lt;/code&gt;, &lt;code&gt;disk_log(3)&lt;/code&gt;, &lt;code&gt;ets(3)&lt;/code&gt;, &lt;code&gt;mnesia_registry(3)&lt;/code&gt;, &lt;code&gt;qlc(3)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;application(3)&lt;/code&gt; , &lt;code&gt;dets(3)&lt;/code&gt; , &lt;code&gt;disk_log(3)&lt;/code&gt; , &lt;code&gt;ets(3)&lt;/code&gt; , &lt;code&gt;mnesia_registry(3)&lt;/code&gt; , &lt;code&gt;qlc(3)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b5e0a257fc769705d9cc09d4843a08142ab8f99d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;application:start(Application)&lt;/code&gt; is the same as calling &lt;code&gt;application:start(Application, temporary)&lt;/code&gt;. The type can also be &lt;code&gt;permanent&lt;/code&gt; or &lt;code&gt;transient&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;application:start(Application)&lt;/code&gt; аналогично вызывающему &lt;code&gt;application:start(Application, temporary)&lt;/code&gt; . Тип также может быть &lt;code&gt;permanent&lt;/code&gt; или &lt;code&gt;transient&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b67edaacaf648cc6cc9a6d897e31e09389b2df1e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;application:start(mnesia)&lt;/code&gt; can also be used.</source>
          <target state="translated">&lt;code&gt;application:start(mnesia)&lt;/code&gt; также можно использовать.</target>
        </trans-unit>
        <trans-unit id="29d1b7a8c27256b457dce1b3bad8e849c11d21cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;application:stop(mnesia)&lt;/code&gt; can also be used.</source>
          <target state="translated">&lt;code&gt;application:stop(mnesia)&lt;/code&gt; также можно использовать.</target>
        </trans-unit>
        <trans-unit id="10da2c0c84c016a1b85a0996d30c8e11ab967b5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;application&lt;/code&gt;, an empty list if the module does not belong to any application, otherwise a list of the application name;</source>
          <target state="translated">&lt;code&gt;application&lt;/code&gt; , пустой список, если модуль не принадлежит ни к какому приложению, в противном случае список имени приложения;</target>
        </trans-unit>
        <trans-unit id="fe02e9a6876c897082028610a15994bce0a292ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;applications&lt;/code&gt; - All applications that must be started before this application is started. &lt;code&gt;systools&lt;/code&gt; uses this list to generate correct boot scripts. Defaults to &lt;code&gt;[]&lt;/code&gt;. Notice that all applications have dependencies to at least Kernel and STDLIB.</source>
          <target state="translated">&lt;code&gt;applications&lt;/code&gt; - все приложения, которые необходимо запустить перед запуском этого приложения. &lt;code&gt;systools&lt;/code&gt; использует этот список для создания правильных сценариев загрузки. По умолчанию &lt;code&gt;[]&lt;/code&gt; . Обратите внимание, что все приложения имеют зависимости как минимум от ядра и STDLIB.</target>
        </trans-unit>
        <trans-unit id="76b082504e28452bfce3331d887c3a70c2f2f89c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;apply(M, F, A)&lt;/code&gt; must return a list of nodes.</source>
          <target state="translated">&lt;code&gt;apply(M, F, A)&lt;/code&gt; должен возвращать список узлов.</target>
        </trans-unit>
        <trans-unit id="8cd751c794ca79775ae24d2dfc9d496c92f7760b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;apply/3&lt;/code&gt; must look up the code for the function to execute in a hash table. It is therefore always slower than a direct call or a fun call.</source>
          <target state="translated">&lt;code&gt;apply/3&lt;/code&gt; должен искать код функции в хэш-таблице. Поэтому он всегда медленнее, чем прямой звонок или веселый звонок.</target>
        </trans-unit>
        <trans-unit id="ae6d24752d6fc9146e5c784eb3fee2f7efa454a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;appup(4)&lt;/code&gt; manual page in SASL</source>
          <target state="translated">&lt;code&gt;appup(4)&lt;/code&gt; руководства appup (4) в SASL</target>
        </trans-unit>
        <trans-unit id="452b708022856c63df251c357fb144407fbbbcf4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;argbuf&lt;/code&gt; is a pointer to a buffer with an encoded Erlang list, without a version magic number, containing the arguments to be passed to the function.</source>
          <target state="translated">&lt;code&gt;argbuf&lt;/code&gt; - это указатель на буфер с закодированным списком Erlang без магического номера версии, содержащий аргументы, передаваемые в функцию.</target>
        </trans-unit>
        <trans-unit id="69e4b05d2799b12c1213f74c3f1fee1d1dadd624" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;argbuflen&lt;/code&gt; is the length of the buffer containing the encoded Erlang list.</source>
          <target state="translated">&lt;code&gt;argbuflen&lt;/code&gt; - это длина буфера, содержащего закодированный список Erlang.</target>
        </trans-unit>
        <trans-unit id="c88058fb856fee3f23186a49ad08ec45b32134a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;args&lt;/code&gt; is a list of the arguments used by the control sequence, or an empty list if the control sequence does not take any arguments.</source>
          <target state="translated">&lt;code&gt;args&lt;/code&gt; - это список аргументов, используемых управляющей последовательностью, или пустой список, если управляющая последовательность не принимает никаких аргументов.</target>
        </trans-unit>
        <trans-unit id="ae238075082754126f87767b4a55847888febf8d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;args&lt;/code&gt; is an Erlang list, containing the arguments to be passed to the function.</source>
          <target state="translated">&lt;code&gt;args&lt;/code&gt; - это список Erlang, содержащий аргументы, передаваемые функции.</target>
        </trans-unit>
        <trans-unit id="c84b082d7993b958953e81c49576799ca90e5562" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;arity&lt;/code&gt;. Returns the arity of records in the table as specified in the schema.</source>
          <target state="translated">&lt;code&gt;arity&lt;/code&gt; . Возвращает арность записей в таблице, как указано в схеме.</target>
        </trans-unit>
        <trans-unit id="ad562cc01c455bf87c89d7be370aa5f77e08a499" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;array&lt;/code&gt; is an array of ETERM* objects.</source>
          <target state="translated">&lt;code&gt;array&lt;/code&gt; - это массив объектов ETERM *.</target>
        </trans-unit>
        <trans-unit id="ef69e9b959914df8490c32f8a040f98d0e9915b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;array&lt;/code&gt; is an array of Erlang terms.</source>
          <target state="translated">&lt;code&gt;array&lt;/code&gt; - это массив терминов Erlang.</target>
        </trans-unit>
        <trans-unit id="801e399b2373cb64af1a6eb34f634da9351c826b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;arrsize&lt;/code&gt; is the number of elements in &lt;code&gt;array&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;arrsize&lt;/code&gt; - количество элементов в &lt;code&gt;array&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7dfaa3306dd3215bd527ea3b5c3ae28a064d66a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;asn1&lt;/code&gt; - ASN.1 BER</source>
          <target state="translated">&lt;code&gt;asn1&lt;/code&gt; - ASN.1 BER</target>
        </trans-unit>
        <trans-unit id="19ce5393e1baf8f5daf548c839d26e7fcbf42a55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assertEqual&lt;/code&gt; is more suitable than &lt;code&gt;assertMatch&lt;/code&gt; when the left-hand side is a computed value rather than a simple pattern, and gives more details than &lt;code&gt;?assert(Expect =:= Expr)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;assertEqual&lt;/code&gt; более подходит, чем &lt;code&gt;assertMatch&lt;/code&gt; , когда левая часть представляет собой вычисленное значение, а не простой шаблон, и дает больше деталей, чем &lt;code&gt;?assert(Expect =:= Expr)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="86ebca600c491611d59fb81bbc64178a4240b3f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assoc_id = 0&lt;/code&gt; (default) indicates the whole endpoint.</source>
          <target state="translated">&lt;code&gt;assoc_id = 0&lt;/code&gt; (по умолчанию) указывает всю конечную точку.</target>
        </trans-unit>
        <trans-unit id="47d49bdd1ccd72b394fa212477403df138818b65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assoc_id = 0&lt;/code&gt; (default) indicates the whole endpoint. See &lt;code&gt;&lt;a href=&quot;http://tools.ietf.org/html/draft-ietf-tsvwg-sctpsocket-13&quot;&gt;Sockets API Extensions for SCTP&lt;/a&gt;&lt;/code&gt; for the discussion of their semantics. Rarely used.</source>
          <target state="translated">&lt;code&gt;assoc_id = 0&lt;/code&gt; (по умолчанию) указывает всю конечную точку. См. &lt;code&gt;&lt;a href=&quot;http://tools.ietf.org/html/draft-ietf-tsvwg-sctpsocket-13&quot;&gt;Sockets API Extensions for SCTP&lt;/a&gt;&lt;/code&gt; где обсуждается их семантика. Редко используемый.</target>
        </trans-unit>
        <trans-unit id="77a37a0c7eea6ce81d051e4508dbb3d63745df6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assoc_id = 0&lt;/code&gt; (default) indicates the whole endpoint. See &lt;code&gt;&lt;a href=&quot;http://www.rfc-archive.org/getrfc.php?rfc=2960&quot;&gt;RFC 2960&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;http://tools.ietf.org/html/draft-ietf-tsvwg-sctpsocket-13&quot;&gt;Sockets API Extensions for SCTP&lt;/a&gt;&lt;/code&gt; for the exact semantics of the field values.</source>
          <target state="translated">&lt;code&gt;assoc_id = 0&lt;/code&gt; (по умолчанию) указывает всю конечную точку. См. &lt;code&gt;&lt;a href=&quot;http://www.rfc-archive.org/getrfc.php?rfc=2960&quot;&gt;RFC 2960&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;http://tools.ietf.org/html/draft-ietf-tsvwg-sctpsocket-13&quot;&gt;Sockets API Extensions for SCTP&lt;/a&gt;&lt;/code&gt; для получения точной семантики значений полей.</target>
        </trans-unit>
        <trans-unit id="548784c9ecca55c0e2f953786b10d16508a546dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;at_dep&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;at_dep&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="e2b407a1b20fb27935afd6e6402d358e469774cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;atom()&lt;/code&gt; - Name of the Erlang module implementing the subsystem using the &lt;code&gt;&lt;a href=&quot;ssh_server_channel&quot;&gt;ssh_server_channel&lt;/a&gt;&lt;/code&gt; (replaces ssh_daemon_channel) behaviour.</source>
          <target state="translated">&lt;code&gt;atom()&lt;/code&gt; - Имя модуля Erlang, реализующего подсистему с использованием &lt;code&gt;&lt;a href=&quot;ssh_server_channel&quot;&gt;ssh_server_channel&lt;/a&gt;&lt;/code&gt; (заменяет ssh_daemon_channel).</target>
        </trans-unit>
        <trans-unit id="9f0910ef212626435d10caf31c55cc021319b923" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;atom&lt;/code&gt;&lt;code&gt;char&lt;/code&gt;&lt;code&gt;comment&lt;/code&gt;&lt;code&gt;eof_marker&lt;/code&gt;&lt;code&gt;error_marker&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;atom&lt;/code&gt;&lt;code&gt;char&lt;/code&gt;&lt;code&gt;comment&lt;/code&gt;&lt;code&gt;eof_marker&lt;/code&gt;&lt;code&gt;error_marker&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bb28b98225e6725d1affc9694f0217b20bf6bea7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attribute&lt;/code&gt;&lt;code&gt;comment&lt;/code&gt;&lt;code&gt;error_marker&lt;/code&gt;&lt;code&gt;eof_marker&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;attribute&lt;/code&gt;&lt;code&gt;comment&lt;/code&gt;&lt;code&gt;error_marker&lt;/code&gt;&lt;code&gt;eof_marker&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e130d8e013ac7037c4959d9a5f7ffcfc196ab056" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attributes&lt;/code&gt;. Returns the table attribute names that are specified in the schema.</source>
          <target state="translated">&lt;code&gt;attributes&lt;/code&gt; . Возвращает имена атрибутов таблицы, указанные в схеме.</target>
        </trans-unit>
        <trans-unit id="3b3596ead5d9a3e64e7012a2a7b63056949098c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attributes&lt;/code&gt;. The names of the attributes for the records that are inserted in the table.</source>
          <target state="translated">&lt;code&gt;attributes&lt;/code&gt; . Имена атрибутов для записей, которые вставляются в таблицу.</target>
        </trans-unit>
        <trans-unit id="1c86778ee7c43bedb81a6ab931654f75426d16ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;auto&lt;/code&gt; - The manager will autonomously send response (acknowledgment&amp;gt; to inform-request messages.</source>
          <target state="translated">&lt;code&gt;auto&lt;/code&gt; - Менеджер самостоятельно отправит ответ (подтверждение&amp;gt; на сообщения с информационным запросом.</target>
        </trans-unit>
        <trans-unit id="70f7fd21bd95427295d93939701fb17fb5970164" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;auto_repair&lt;/code&gt;. Returns &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; to indicate if Mnesia is configured to start the auto-repair facility on corrupted disc files.</source>
          <target state="translated">&lt;code&gt;auto_repair&lt;/code&gt; . Возвращает &lt;code&gt;true&lt;/code&gt; или &lt;code&gt;false&lt;/code&gt; чтобы указать, настроена ли Mnesia для запуска средства автоматического восстановления поврежденных файлов на диске.</target>
        </trans-unit>
        <trans-unit id="12902d8c010c7b4a0b48c006e43d19093456b157" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;auto_save&lt;/code&gt; - Defines the dets auto-save frequency.</source>
          <target state="translated">&lt;code&gt;auto_save&lt;/code&gt; - определяет частоту автосохранения dets.</target>
        </trans-unit>
        <trans-unit id="a0a50c3b5330a8697925d8971b617a7169d59dca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;backup_module&lt;/code&gt;. Returns the name of the module that is configured to be the backup callback module.</source>
          <target state="translated">&lt;code&gt;backup_module&lt;/code&gt; . Возвращает имя модуля, который настроен как резервный модуль обратного вызова.</target>
        </trans-unit>
        <trans-unit id="fb90c9513934f1b3ccb086efcb411f60d1384f16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;badValue | noSuchName | genErr&lt;/code&gt;(SNMPv1)</source>
          <target state="translated">&lt;code&gt;badValue | noSuchName | genErr&lt;/code&gt; (SNMPv1)</target>
        </trans-unit>
        <trans-unit id="4af55acb7f44704d193041128ca3204b65f3131d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bad_index&lt;/code&gt;. Index already exists, or was out of bounds.</source>
          <target state="translated">&lt;code&gt;bad_index&lt;/code&gt; . Индекс уже существует или был за пределами допустимого диапазона.</target>
        </trans-unit>
        <trans-unit id="9bd7847208820cb3e5fdf7d4e616b5b19e7ae8cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bad_object&lt;/code&gt;, &lt;code&gt;{bad_object, FileName}&lt;/code&gt; - Applying the format function failed for some binary, or the key(s) could not be extracted from some term.</source>
          <target state="translated">&lt;code&gt;bad_object&lt;/code&gt; , &lt;code&gt;{bad_object, FileName}&lt;/code&gt; - Не удалось применить функцию форматирования для некоторого двоичного файла, или не удалось извлечь ключ (и) из некоторого термина.</target>
        </trans-unit>
        <trans-unit id="5674a81ffc13a9d93f73c262d178d85abcf93d77" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bad_type&lt;/code&gt;. Bad type specified in argument.</source>
          <target state="translated">&lt;code&gt;bad_type&lt;/code&gt; . В аргументе указан неверный тип.</target>
        </trans-unit>
        <trans-unit id="9e242d45e0b73cd73950c8c730a1c126ad7d4759" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;badarg&lt;/code&gt;. Bad or invalid argument, possibly bad type.</source>
          <target state="translated">&lt;code&gt;badarg&lt;/code&gt; . Неверный или недопустимый аргумент, возможно, неверный тип.</target>
        </trans-unit>
        <trans-unit id="d96b34618ac7c8372a4d6e8854d04be5a47813b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;badarg&lt;/code&gt;: an argument is of wrong type or has an illegal value,</source>
          <target state="translated">&lt;code&gt;badarg&lt;/code&gt; : аргумент неправильного типа или имеет недопустимое значение,</target>
        </trans-unit>
        <trans-unit id="b57f829716070bd0c69b1a4bc15f6e129e32659a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bag&lt;/code&gt;. A table of this type has zero or more different objects with a given key.</source>
          <target state="translated">&lt;code&gt;bag&lt;/code&gt; . Таблица этого типа содержит ноль или более различных объектов с данным ключом.</target>
        </trans-unit>
        <trans-unit id="b5bc9fef180d5478185c5f11107e1a7205f908fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bchunk/2&lt;/code&gt; returns &lt;code&gt;'$end_of_table'&lt;/code&gt; when all objects are returned, or &lt;code&gt;{error, Reason}&lt;/code&gt; if an error occurs.</source>
          <target state="translated">&lt;code&gt;bchunk/2&lt;/code&gt; возвращает &lt;code&gt;'$end_of_table'&lt;/code&gt; когда возвращаются все объекты, или &lt;code&gt;{error, Reason}&lt;/code&gt; если возникает ошибка.</target>
        </trans-unit>
        <trans-unit id="f0b881e6b811651503573d24bdc82b31cac8ea6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bchunk/2&lt;/code&gt; returns a tuple &lt;code&gt;{Continuation2, Data}&lt;/code&gt;, where &lt;code&gt;Data&lt;/code&gt; is a list of objects. &lt;code&gt;Continuation2&lt;/code&gt; is another continuation that is to be passed on to a subsequent call to &lt;code&gt;bchunk/2&lt;/code&gt;. With a series of calls to &lt;code&gt;bchunk/2&lt;/code&gt;, all table objects can be extracted.</source>
          <target state="translated">&lt;code&gt;bchunk/2&lt;/code&gt; возвращает кортеж &lt;code&gt;{Continuation2, Data}&lt;/code&gt; , где &lt;code&gt;Data&lt;/code&gt; - это список объектов. &lt;code&gt;Continuation2&lt;/code&gt; - это еще одно продолжение, которое должно быть передано последующему вызову &lt;code&gt;bchunk/2&lt;/code&gt; . &lt;code&gt;bchunk/2&lt;/code&gt; серии вызовов bchunk / 2 можно извлечь все объекты таблицы.</target>
        </trans-unit>
        <trans-unit id="17286180de0e85fd3a121d782dd8fb920eb0a2ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;beam_lib(3)&lt;/code&gt;, &lt;code&gt;digraph(3)&lt;/code&gt;, &lt;code&gt;digraph_utils(3)&lt;/code&gt;, &lt;code&gt;re(3)&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;xref_chapter&quot;&gt;TOOLS User's Guide&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;beam_lib(3)&lt;/code&gt; , &lt;code&gt;digraph(3)&lt;/code&gt; , &lt;code&gt;digraph_utils(3)&lt;/code&gt; , &lt;code&gt;re(3)&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;xref_chapter&quot;&gt;TOOLS User's Guide&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="48806351aad0a7742944c693a884af8352b2a223" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;beam_lib&lt;/code&gt; searches for &lt;code&gt;.erlang.crypt&lt;/code&gt; in the current directory and then the home directory for the current user. If the file is found and contains a key, &lt;code&gt;beam_lib&lt;/code&gt; implicitly creates a crypto key fun and registers it.</source>
          <target state="translated">&lt;code&gt;beam_lib&lt;/code&gt; ищет &lt;code&gt;.erlang.crypt&lt;/code&gt; в текущем каталоге, а затем в домашнем каталоге текущего пользователя. Если файл найден и содержит ключ, &lt;code&gt;beam_lib&lt;/code&gt; неявно создает криптоключ fun и регистрирует его.</target>
        </trans-unit>
        <trans-unit id="7359f360c9f4db5152553296e4b58927d5d35196" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bf&lt;/code&gt; (best fit)</source>
          <target state="translated">&lt;code&gt;bf&lt;/code&gt; (лучше всего подходит)</target>
        </trans-unit>
        <trans-unit id="8f9b4da975d568447e2e26dc29abe90a4b68b3cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bin/erl&lt;/code&gt; (obtained from &lt;code&gt;erts-5.10.4/bin/erl.src&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;bin/erl&lt;/code&gt; (получено из &lt;code&gt;erts-5.10.4/bin/erl.src&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="cb8b254fb956ab3a3b6c9b8239ceaa2c312d5831" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bin/start.boot&lt;/code&gt; (a copy of &lt;code&gt;plain.boot&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;bin/start.boot&lt;/code&gt; (копия &lt;code&gt;plain.boot&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="91bc86af405ae4d15ef21b7029302ff95b1bed86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bin&lt;/code&gt; - Optional. Any executable that is a product of the application, such as escripts or shell-scripts, should be placed here.</source>
          <target state="translated">&lt;code&gt;bin&lt;/code&gt; - Необязательно. Здесь следует разместить любой исполняемый файл, являющийся продуктом приложения, такой как сценарии или сценарии оболочки.</target>
        </trans-unit>
        <trans-unit id="25aa1b40cfc688459920a27ed9809c66c8adfe1b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bin&lt;/code&gt; - Top-level Erlang runtime system executables</source>
          <target state="translated">&lt;code&gt;bin&lt;/code&gt; - исполняемые файлы системы времени выполнения Erlang верхнего уровня</target>
        </trans-unit>
        <trans-unit id="f9adab0d87be8165335a800dfe74c3b1e4b411a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;binary_to_list(Bin11)&lt;/code&gt; evaluates to &lt;code&gt;[1, 17, 42]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;binary_to_list(Bin11)&lt;/code&gt; оценивается как &lt;code&gt;[1, 17, 42]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7f94a75319672458a8993a5a6018445eb933bcfb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;binary_to_list(Bin12)&lt;/code&gt; evaluates to &lt;code&gt;[97, 98, 99]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;binary_to_list(Bin12)&lt;/code&gt; оценивается как &lt;code&gt;[97, 98, 99]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9ec897cc6cac414b8d4a65707211e9d38f731a5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;binary_to_list(Bin2)&lt;/code&gt; evaluates to &lt;code&gt;[1, 17, 00, 42]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;binary_to_list(Bin2)&lt;/code&gt; оценивается как &lt;code&gt;[1, 17, 00, 42]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c8d746c582c845b2e8bdd3c53e79719945a24fd5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;block&lt;/code&gt; - Block the transport. &lt;strong&gt;Optional&lt;/strong&gt;</source>
          <target state="translated">&lt;code&gt;block&lt;/code&gt; - Заблокировать транспорт. &lt;strong&gt;По желанию&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8e968dd092a4817ba1e07fce1cdafbd392928772" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;block_user/4&lt;/code&gt; and &lt;code&gt;block_user/5&lt;/code&gt; each blocks the user &lt;code&gt;User&lt;/code&gt; from directory &lt;code&gt;Dir&lt;/code&gt; for a specified amount of time.</source>
          <target state="translated">&lt;code&gt;block_user/4&lt;/code&gt; и &lt;code&gt;block_user/5&lt;/code&gt; каждый блокирует пользователя &lt;code&gt;User&lt;/code&gt; из каталога &lt;code&gt;Dir&lt;/code&gt; на указанное количество времени.</target>
        </trans-unit>
        <trans-unit id="c1b720c8577ec8fd5220d4a8ab719326268b9fa1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bptr&lt;/code&gt; is a pointer to a buffer containing data to be converted.</source>
          <target state="translated">&lt;code&gt;bptr&lt;/code&gt; - это указатель на буфер, содержащий данные для преобразования.</target>
        </trans-unit>
        <trans-unit id="36f44964a85f04c8b6fd92e92eb38af4ff7f6f7e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;break&lt;/code&gt; - Attach whenever a process reaches a breakpoint.</source>
          <target state="translated">&lt;code&gt;break&lt;/code&gt; - присоединяться всякий раз, когда процесс достигает точки останова.</target>
        </trans-unit>
        <trans-unit id="e70a93a8806770419d539bbdd5ae7c24fdc883a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;break&lt;/code&gt; - Process execution is stopped, normally at a breakpoint. &lt;code&gt;Info={Module,Line}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;break&lt;/code&gt; - выполнение процесса останавливается, обычно в точке останова. &lt;code&gt;Info={Module,Line}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="974f7fe09a42b6e842cb2ad460448861f2988cd4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;brutal_kill&lt;/code&gt; means that the child process is unconditionally terminated using &lt;code&gt;exit(Child, kill)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;brutal_kill&lt;/code&gt; означает, что дочерний процесс безоговорочно завершается с помощью &lt;code&gt;exit(Child, kill)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="84a05fdf241e6eb39d9d64cdb875bec6a8355d2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;buf&lt;/code&gt; and &lt;code&gt;len&lt;/code&gt; provide the arguments to the call (the third argument to &lt;code&gt;erlang:port_call/3&lt;/code&gt;). They can be decoded using &lt;code&gt;ei&lt;/code&gt; functions.</source>
          <target state="translated">&lt;code&gt;buf&lt;/code&gt; и &lt;code&gt;len&lt;/code&gt; предоставляют аргументы для вызова (третий аргумент &lt;code&gt;erlang:port_call/3&lt;/code&gt; ). Их можно декодировать с помощью функций &lt;code&gt;ei&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9592d5baeb6834995af947204ffd16d322a0d8dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;buf&lt;/code&gt; is a pointer to the buffer where the binary data is or will be.</source>
          <target state="translated">&lt;code&gt;buf&lt;/code&gt; - указатель на буфер, в котором находятся или будут двоичные данные.</target>
        </trans-unit>
        <trans-unit id="020f366ef6e7fa93ca2d78487b1d29ac830fae17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;buf&lt;/code&gt; is the buffer containing the term in binary format.</source>
          <target state="translated">&lt;code&gt;buf&lt;/code&gt; - это буфер, содержащий термин в двоичном формате.</target>
        </trans-unit>
        <trans-unit id="9358fda02a3a522860f468e50b529164546407cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;buf&lt;/code&gt; is the buffer.</source>
          <target state="translated">&lt;code&gt;buf&lt;/code&gt; - это буфер.</target>
        </trans-unit>
        <trans-unit id="91989446ab3fcfb17a358cc47a306a6845e22013" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bufp1&lt;/code&gt; is a buffer containing an encoded Erlang term term1.</source>
          <target state="translated">&lt;code&gt;bufp1&lt;/code&gt; - это буфер, содержащий закодированный термин Erlang term1.</target>
        </trans-unit>
        <trans-unit id="9c2a34acb00a733fae7ddd41aef79e0f36fd2fad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bufp2&lt;/code&gt; is a buffer containing an encoded Erlang term term2.</source>
          <target state="translated">&lt;code&gt;bufp2&lt;/code&gt; - это буфер, содержащий закодированный термин Erlang term2.</target>
        </trans-unit>
        <trans-unit id="b514f398a673f0c3431c37ce1fb7770505f66066" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bufp&lt;/code&gt; is a buffer large enough to hold the expected message.</source>
          <target state="translated">&lt;code&gt;bufp&lt;/code&gt; - это буфер, достаточно большой, чтобы вместить ожидаемое сообщение.</target>
        </trans-unit>
        <trans-unit id="7a7a9c6db496d05d90264fc19c723591c92e6bca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bufp&lt;/code&gt; is a pointer to a buffer containing one or more encoded Erlang terms.</source>
          <target state="translated">&lt;code&gt;bufp&lt;/code&gt; - это указатель на буфер, содержащий один или несколько закодированных терминов Erlang.</target>
        </trans-unit>
        <trans-unit id="8aa554368e3bfa313e84792c87a0f8a742e01733" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bufpp&lt;/code&gt; is a pointer to a pointer to a buffer containing one or more consecutively encoded Erlang terms. Following a successful call to &lt;code&gt;erl_encode_buf()&lt;/code&gt;, &lt;code&gt;bufpp&lt;/code&gt; is updated so that it points to the position for the next encoded term.</source>
          <target state="translated">&lt;code&gt;bufpp&lt;/code&gt; - указатель на указатель на буфер, содержащий один или несколько последовательно закодированных терминов Эрланга. После успешного вызова к &lt;code&gt;erl_encode_buf()&lt;/code&gt; , &lt;code&gt;bufpp&lt;/code&gt; обновляется так , чтобы она указывала на позицию для следующего кодированного срока.</target>
        </trans-unit>
        <trans-unit id="4f44057b5d737547a2be6a24c89bb7f43bfb7987" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bufpp&lt;/code&gt; is the address of a buffer pointer. The buffer contains one or more consecutively encoded Erlang terms. Following a successful call to &lt;code&gt;erl_decode_buf()&lt;/code&gt;, &lt;code&gt;bufpp&lt;/code&gt; is updated so that it points to the next encoded term.</source>
          <target state="translated">&lt;code&gt;bufpp&lt;/code&gt; - это адрес указателя буфера. Буфер содержит один или несколько последовательно закодированных терминов Эрланга. После успешного вызова к &lt;code&gt;erl_decode_buf()&lt;/code&gt; , &lt;code&gt;bufpp&lt;/code&gt; обновляется так , что он указывает на следующий кодированный срок.</target>
        </trans-unit>
        <trans-unit id="bb000a625bd54e5bdff350e8317e6d7e6df9d728" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bufsize&lt;/code&gt; indicates the size of &lt;code&gt;bufp&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;bufsize&lt;/code&gt; указывает размер &lt;code&gt;bufp&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b755c56effd11bcf791291be14253f76dff8c89e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;builtins&lt;/code&gt;, whether calls to BIFs are included in the module's data;</source>
          <target state="translated">&lt;code&gt;builtins&lt;/code&gt; функции, включаются ли вызовы BIF в данные модуля;</target>
        </trans-unit>
        <trans-unit id="c0301210a3f69e9e7dbee51658c14c1044ce91d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;builtins&lt;/code&gt;, with initial default value &lt;code&gt;false&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;builtins&lt;/code&gt; с начальным значением по умолчанию &lt;code&gt;false&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="3919372d103739aa529efd10f11352ffde571ce2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bytes : integer&lt;/code&gt; :: Size of data returned. Ex. &lt;code&gt;82&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;bytes : integer&lt;/code&gt; :: Размер возвращаемых данных. Ex. &lt;code&gt;82&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fc288deb34eff3dd05d8920de133e55c4a5b9bc1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;c:c/1&lt;/code&gt; is called to compile the specified module on the remote node. &lt;code&gt;erl_match()&lt;/code&gt; checks that the compilation was successful by testing for the expected &lt;code&gt;ok&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;c:c/1&lt;/code&gt; вызывается для компиляции указанного модуля на удаленном узле. &lt;code&gt;erl_match()&lt;/code&gt; проверяет , что компиляция прошла успешно, проверив для ожидаемых &lt;code&gt;ok&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="94dfd35ae9c24c3703a59348eb4cbd1a8470272c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;calendar(3)&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;error_logger&quot;&gt;error_logger(3)&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;io(3)&lt;/code&gt;, &lt;code&gt;io_lib(3)&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;logger&quot;&gt;logger(3)&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;maps(3)&lt;/code&gt;, &lt;code&gt;sasl(6)&lt;/code&gt;, &lt;code&gt;unicode(3)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;calendar(3)&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;error_logger&quot;&gt;error_logger(3)&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;io(3)&lt;/code&gt; , &lt;code&gt;io_lib(3)&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;logger&quot;&gt;logger(3)&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;maps(3)&lt;/code&gt; , &lt;code&gt;sasl(6)&lt;/code&gt; , &lt;code&gt;unicode(3)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0d9fe36a3e680b5ea19a76fae4b2fa4139cc89e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;caller&lt;/code&gt; - for &lt;code&gt;[{'_',[],[{message,{caller}}]}]&lt;/code&gt; (report the calling function)</source>
          <target state="translated">&lt;code&gt;caller&lt;/code&gt; - для &lt;code&gt;[{'_',[],[{message,{caller}}]}]&lt;/code&gt; (сообщить о вызывающей функции)</target>
        </trans-unit>
        <trans-unit id="9cf793eea4bf1fd73379c6d4492be1f7ee4cfe4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;case&lt;/code&gt; is another construct in Erlang. Recall that the &lt;code&gt;convert_length&lt;/code&gt; function was written as:</source>
          <target state="translated">&lt;code&gt;case&lt;/code&gt; - еще одна конструкция в Erlang. Напомним, что функция &lt;code&gt;convert_length&lt;/code&gt; была записана как:</target>
        </trans-unit>
        <trans-unit id="cbddc7998ac2e4b689116df33702d9e847ccfa7f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cdr&lt;/code&gt; - CORBA (GIOP 1.1)</source>
          <target state="translated">&lt;code&gt;cdr&lt;/code&gt; - CORBA (GIOP 1.1)</target>
        </trans-unit>
        <trans-unit id="4245c60051fa28f6c993f4eb8e040393fb293656" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ch3&lt;/code&gt; does not need to do any cleaning up before termination. Thus, no shutdown time is needed, but &lt;code&gt;brutal_kill&lt;/code&gt; is sufficient. &lt;code&gt;error_man&lt;/code&gt; can need some time for the event handlers to clean up, thus the shutdown time is set to 5000 ms (which is the default value).</source>
          <target state="translated">&lt;code&gt;ch3&lt;/code&gt; не нуждается в очистке перед завершением. Таким образом, время выключения не требуется, но достаточно &lt;code&gt;brutal_kill&lt;/code&gt; . &lt;code&gt;error_man&lt;/code&gt; может потребоваться некоторое время для очистки обработчиков событий, поэтому время выключения установлено на 5000 мс (что является значением по умолчанию).</target>
        </trans-unit>
        <trans-unit id="da4e6492a6a940b0b8ec65b4d2008b4e92ab6526" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ch3&lt;/code&gt; is the name of the &lt;code&gt;gen_server&lt;/code&gt; and must agree with the name used to start it. &lt;code&gt;alloc&lt;/code&gt; is the actual request.</source>
          <target state="translated">&lt;code&gt;ch3&lt;/code&gt; это имя &lt;code&gt;gen_server&lt;/code&gt; и должно совпадать с именем , используемым для его запуска. &lt;code&gt;alloc&lt;/code&gt; - это фактический запрос.</target>
        </trans-unit>
        <trans-unit id="c4d3e6a239f3f0a72fbae0ffce0d02ba9c239e4c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ch3&lt;/code&gt; is the name of the &lt;code&gt;gen_server&lt;/code&gt;. &lt;code&gt;{free, Ch}&lt;/code&gt; is the actual request.</source>
          <target state="translated">&lt;code&gt;ch3&lt;/code&gt; - это имя &lt;code&gt;gen_server&lt;/code&gt; . &lt;code&gt;{free, Ch}&lt;/code&gt; - это фактический запрос.</target>
        </trans-unit>
        <trans-unit id="637a97c0869f0dca51007ec5f8dd019cbe62121d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ch4:start_link&lt;/code&gt; calls the function &lt;code&gt;proc_lib:start_link&lt;/code&gt;. This function takes a module name, a function name, and an argument list as arguments, spawns, and links to a new process. The new process starts by executing the given function, here &lt;code&gt;ch4:init(Pid)&lt;/code&gt;, where &lt;code&gt;Pid&lt;/code&gt; is the pid (&lt;code&gt;self()&lt;/code&gt;) of the first process, which is the parent process.</source>
          <target state="translated">&lt;code&gt;ch4:start_link&lt;/code&gt; вызывает функцию &lt;code&gt;proc_lib:start_link&lt;/code&gt; . Эта функция принимает имя модуля, имя функции и список аргументов в качестве аргументов, порождает и связывает новый процесс. Новый процесс начинается с выполнения данной функции, здесь &lt;code&gt;ch4:init(Pid)&lt;/code&gt; , где &lt;code&gt;Pid&lt;/code&gt; - это pid ( &lt;code&gt;self()&lt;/code&gt; ) первого процесса, который является родительским процессом.</target>
        </trans-unit>
        <trans-unit id="450040c43153c267bc9a946c817b748e058c6967" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ch_sup:start_link&lt;/code&gt; calls function &lt;code&gt;supervisor:start_link/2&lt;/code&gt;, which spawns and links to a new process, a supervisor.</source>
          <target state="translated">&lt;code&gt;ch_sup:start_link&lt;/code&gt; вызывает &lt;code&gt;supervisor:start_link/2&lt;/code&gt; функции : start_link / 2 , который порождает и связывает новый процесс, супервизор.</target>
        </trans-unit>
        <trans-unit id="e07f79a4537803dd33d38991ec86dbac443c7e00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;change_table_copy_type(Tab, Node, ToType)&lt;/code&gt; changes the storage type of a table. For example, a RAM table is changed to a &lt;code&gt;disc_table&lt;/code&gt; at the node specified as &lt;code&gt;Node&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;change_table_copy_type(Tab, Node, ToType)&lt;/code&gt; изменяет тип хранения таблицы. Например, таблица RAM изменяется на &lt;code&gt;disc_table&lt;/code&gt; в узле, указанном как &lt;code&gt;Node&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="166ed2a7f68758ef24b82ee6382f345020f96be9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;check(FileName)&lt;/code&gt; is equivalent to &lt;code&gt;check([FileName], [])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;check(FileName)&lt;/code&gt; эквивалентен &lt;code&gt;check([FileName], [])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="87fdff375b367943a5a921c311557301ab0babbd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;check&lt;/code&gt; is always called by the same process, so &lt;code&gt;put&lt;/code&gt; and &lt;code&gt;get&lt;/code&gt; are possible.</source>
          <target state="translated">&lt;code&gt;check&lt;/code&gt; всегда вызывается одним и тем же процессом, поэтому возможны &lt;code&gt;put&lt;/code&gt; и &lt;code&gt;get&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="41d0640805bfcc8da28c3b66b06e58325aec4149" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;checkpoints&lt;/code&gt;. Returns a list of the names of the checkpoints currently active on this node.</source>
          <target state="translated">&lt;code&gt;checkpoints&lt;/code&gt; . Возвращает список имен контрольных точек, активных в данный момент на этом узле.</target>
        </trans-unit>
        <trans-unit id="b95bc3b85036835357a490f2507a02039107f20c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;checkpoints&lt;/code&gt;. Returns the names of the currently active checkpoints, which involve this table on this node.</source>
          <target state="translated">&lt;code&gt;checkpoints&lt;/code&gt; . Возвращает имена текущих активных контрольных точек, которые включают эту таблицу на этом узле.</target>
        </trans-unit>
        <trans-unit id="62376e5d841ce4eadcf7894ca3146f0f84dd99a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;checksum&lt;/code&gt; - Defines if the file is checksummed or not.</source>
          <target state="translated">&lt;code&gt;checksum&lt;/code&gt; - определяет, подсчитывается ли файл контрольной суммой или нет.</target>
        </trans-unit>
        <trans-unit id="8af5ef256449de22112f9e1149d05baa4c4e4b9f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;chunk()&lt;/code&gt; returns &lt;code&gt;eof&lt;/code&gt; when the end of the log is reached, or &lt;code&gt;{error, Reason}&lt;/code&gt; if an error occurs. If a wrap log file is missing, a message is output on the error log.</source>
          <target state="translated">&lt;code&gt;chunk()&lt;/code&gt; возвращает &lt;code&gt;eof&lt;/code&gt; при достижении конца журнала или &lt;code&gt;{error, Reason}&lt;/code&gt; при возникновении ошибки. Если файл журнала переноса отсутствует, в журнал ошибок выводится сообщение.</target>
        </trans-unit>
        <trans-unit id="9f7b3958ce6e0d433e93aee48cfd7872c6879d58" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;chunk()&lt;/code&gt; returns a tuple &lt;code&gt;{Continuation2, Terms, Badbytes}&lt;/code&gt; if the log is opened in read-only mode and the read chunk is corrupt. &lt;code&gt;Badbytes&lt;/code&gt; is the number of bytes in the file found not to be Erlang terms in the chunk. Notice that the log is not repaired. When trying to read chunks from a log opened in read-write mode, tuple &lt;code&gt;{corrupt_log_file, FileName}&lt;/code&gt; is returned if the read chunk is corrupt.</source>
          <target state="translated">&lt;code&gt;chunk()&lt;/code&gt; возвращает кортеж &lt;code&gt;{Continuation2, Terms, Badbytes}&lt;/code&gt; если журнал открыт в режиме только для чтения и прочитанный фрагмент поврежден. &lt;code&gt;Badbytes&lt;/code&gt; - это количество байтов в файле, которые не являются терминами Эрланга в блоке. Обратите внимание, что журнал не ремонтируется. При попытке прочитать фрагменты из журнала, открытого в режиме чтения-записи, &lt;code&gt;{corrupt_log_file, FileName}&lt;/code&gt; кортеж {коррумпированный_log_file, FileName}, если считанный фрагмент поврежден.</target>
        </trans-unit>
        <trans-unit id="4e8f124c0786dad7795dc48255d2a5526f66a2d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;chunk()&lt;/code&gt; returns a tuple &lt;code&gt;{Continuation2, Terms}&lt;/code&gt;, where &lt;code&gt;Terms&lt;/code&gt; is a list of terms found in the log. &lt;code&gt;Continuation2&lt;/code&gt; is yet another continuation, which must be passed on to any subsequent calls to &lt;code&gt;chunk()&lt;/code&gt;. With a series of calls to &lt;code&gt;chunk()&lt;/code&gt;, all terms from a log can be extracted.</source>
          <target state="translated">&lt;code&gt;chunk()&lt;/code&gt; возвращает кортеж &lt;code&gt;{Continuation2, Terms}&lt;/code&gt; , где &lt;code&gt;Terms&lt;/code&gt; - это список терминов, найденных в журнале. &lt;code&gt;Continuation2&lt;/code&gt; - это еще одно продолжение, которое должно передаваться любым последующим вызовам &lt;code&gt;chunk()&lt;/code&gt; . Посредством серии вызовов &lt;code&gt;chunk()&lt;/code&gt; можно извлечь все термины из журнала.</target>
        </trans-unit>
        <trans-unit id="ded3fda3b82e0ccd56e08c222c189eac20f2fc84" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ciphers&lt;/code&gt; (use old string format)</source>
          <target state="translated">&lt;code&gt;ciphers&lt;/code&gt; (использовать старый строковый формат)</target>
        </trans-unit>
        <trans-unit id="b770f867791c517d00ec5b11366aa1a2498c5247" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class : string&lt;/code&gt; :: Error reason. Ex. &lt;code&gt;&quot;error&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;class : string&lt;/code&gt; :: Причина ошибки. Ex. &lt;code&gt;&quot;error&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0bb984aad855371b26b1a2f3af1bb51acc7b751d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;client_&lt;/code&gt;-prefixed options are used when the distribution initiates a connection to another node. &lt;code&gt;server_&lt;/code&gt;-prefixed options are used when accepting a connection from a remote node.</source>
          <target state="translated">&lt;code&gt;client_&lt;/code&gt; -prefixed используются, когда распределение инициирует соединение с другим узлом. &lt;code&gt;server_&lt;/code&gt; -prefixed используются при приеме соединения с удаленного узла.</target>
        </trans-unit>
        <trans-unit id="753db8f1aebf437e5a6b184af761bd6afff70793" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;closure&lt;/code&gt;, &lt;code&gt;components&lt;/code&gt;, &lt;code&gt;condensation&lt;/code&gt;, &lt;code&gt;domain&lt;/code&gt;, &lt;code&gt;range&lt;/code&gt;, &lt;code&gt;strict&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;closure&lt;/code&gt; , &lt;code&gt;components&lt;/code&gt; , &lt;code&gt;condensation&lt;/code&gt; , &lt;code&gt;domain&lt;/code&gt; , &lt;code&gt;range&lt;/code&gt; , &lt;code&gt;strict&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8b877d0edd90635ff602145be40854a914d08981" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cnd&lt;/code&gt; is a pointer to a condition variable to broadcast on.</source>
          <target state="translated">&lt;code&gt;cnd&lt;/code&gt; - это указатель на переменную условия для широковещательной передачи.</target>
        </trans-unit>
        <trans-unit id="e184f22bd87babddbbb471c5a0861f5744761602" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cnd&lt;/code&gt; is a pointer to a condition variable to destroy.</source>
          <target state="translated">&lt;code&gt;cnd&lt;/code&gt; - указатель на переменную условия, которую нужно уничтожить.</target>
        </trans-unit>
        <trans-unit id="b732e57aaef8e8081a9cf4e1a000c041ccd968fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cnd&lt;/code&gt; is a pointer to a condition variable to signal on.</source>
          <target state="translated">&lt;code&gt;cnd&lt;/code&gt; - это указатель на переменную условия, о которой нужно сигнализировать.</target>
        </trans-unit>
        <trans-unit id="2201e749d7512aceb643478b0c70a66fff6c7656" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cnd&lt;/code&gt; is a pointer to a condition variable to wait on. &lt;code&gt;mtx&lt;/code&gt; is a pointer to a mutex to unlock while waiting.</source>
          <target state="translated">&lt;code&gt;cnd&lt;/code&gt; - указатель на переменную условия, которую нужно ждать. &lt;code&gt;mtx&lt;/code&gt; - это указатель на мьютекс, который нужно разблокировать во время ожидания.</target>
        </trans-unit>
        <trans-unit id="5f33e80633efeed0de41cd20b145beba0880de34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cnd&lt;/code&gt; is a pointer to an initialized condition.</source>
          <target state="translated">&lt;code&gt;cnd&lt;/code&gt; - указатель на инициализированное условие.</target>
        </trans-unit>
        <trans-unit id="00473b126d0a7652ea3254f682ffc5bf58d1f9a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;collisions&lt;/code&gt; indicates how many elements are sharing positions in the registry.</source>
          <target state="translated">&lt;code&gt;collisions&lt;/code&gt; указывает, сколько элементов разделяют позиции в реестре.</target>
        </trans-unit>
        <trans-unit id="add781ee986781b3ce385d7886b10f9ee188263a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;combine_error&lt;/code&gt;. Table options illegally combined.</source>
          <target state="translated">&lt;code&gt;combine_error&lt;/code&gt; . Варианты стола незаконно совмещены.</target>
        </trans-unit>
        <trans-unit id="7c4e1a52bbe022a8fb6a2c2758fc57367d5661e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;command : integer&lt;/code&gt; :: Command integer. Ex. &lt;code&gt;1&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;command : integer&lt;/code&gt; :: целое число команды. Ex. &lt;code&gt;1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9152f8b34bf476261276d6aa9b6c95677788059d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;command [parameters]&lt;/code&gt; is executed.</source>
          <target state="translated">&lt;code&gt;command [parameters]&lt;/code&gt; выполняется.</target>
        </trans-unit>
        <trans-unit id="2803cf83c29548794241441d3248a8c8eab2eb02" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;command&lt;/code&gt; is an integer, obtained from the call from Erlang (the second argument to &lt;code&gt;erlang:port_call/3&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;command&lt;/code&gt; - это целое число, полученное в результате вызова из Erlang (второй аргумент &lt;code&gt;erlang:port_call/3&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="43dafc94528a941655db75f3381463d76dbe825d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;commitFailed | undoFailed | genErr&lt;/code&gt;(SNMPv2)</source>
          <target state="translated">&lt;code&gt;commitFailed | undoFailed | genErr&lt;/code&gt; (SNMPv2)</target>
        </trans-unit>
        <trans-unit id="629a12e24a17f3ddef11586998dd4ec5c3c51f43" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;common_reason()&lt;/code&gt; = &lt;code&gt;econn | eclosed | term()&lt;/code&gt; - some explanation of what went wrong</source>
          <target state="translated">&lt;code&gt;common_reason()&lt;/code&gt; = &lt;code&gt;econn | eclosed | term()&lt;/code&gt; - некоторое объяснение того, что пошло не так</target>
        </trans-unit>
        <trans-unit id="b63b48b8aaf391f30a8116cb628cde3ab4e343e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;community.conf&lt;/code&gt;: see &lt;code&gt;&lt;a href=&quot;#community&quot;&gt;Communities&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;community.conf&lt;/code&gt; : см. &lt;code&gt;&lt;a href=&quot;#community&quot;&gt;Communities&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="45a5fc99e43f5b724b30d2b4e7e4f8273e1b7ca1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;community_entry(&quot;all-rights&quot;)&lt;/code&gt; translates to the following call: &lt;code&gt;community_entry(CommunityIndex, CommunityIndex, CommunityIndex, &quot;&quot;, &quot;&quot;)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;community_entry(&quot;all-rights&quot;)&lt;/code&gt; преобразуется в следующий вызов: &lt;code&gt;community_entry(CommunityIndex, CommunityIndex, CommunityIndex, &quot;&quot;, &quot;&quot;)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="af49f290ae8123993fe5f818dccec559995abe76" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;community_entry(&quot;public&quot;)&lt;/code&gt; translates to the following call: &lt;code&gt;community_entry(CommunityIndex, CommunityIndex, &quot;initial&quot;, &quot;&quot;, &quot;&quot;)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;community_entry(&quot;public&quot;)&lt;/code&gt; преобразуется в следующий вызов: &lt;code&gt;community_entry(CommunityIndex, CommunityIndex, &quot;initial&quot;, &quot;&quot;, &quot;&quot;)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eb25bc344c91ef01ac5c00d3d9049a4cf28d55ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;compact&lt;/code&gt; has a format corresponding to:</source>
          <target state="translated">&lt;code&gt;compact&lt;/code&gt; имеет формат, соответствующий:</target>
        </trans-unit>
        <trans-unit id="fe08b2d80ea20fe5a1d5d0f983bdce680e583294" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;computation_failed&lt;/code&gt;: the computation fails of another reason than &lt;code&gt;low_entropy&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;computation_failed&lt;/code&gt; : вычисление не выполняется по другой причине, кроме &lt;code&gt;low_entropy&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eee140ce407e22cfe49926dc2ef9bf00fd7505e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config(4)&lt;/code&gt; manual page in Kernel</source>
          <target state="translated">&lt;code&gt;config(4)&lt;/code&gt; справочная страница в ядре</target>
        </trans-unit>
        <trans-unit id="26e21c618a893d7c89837a650fffcc4cd8145f7b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;conn_log_mod()&lt;/code&gt; is the name of the &lt;code&gt;Common Test&lt;/code&gt; module implementing the connection protocol, for example, &lt;code&gt;ct_netconfc&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;conn_log_mod()&lt;/code&gt; - это имя модуля &lt;code&gt;Common Test&lt;/code&gt; , реализующего протокол соединения, например &lt;code&gt;ct_netconfc&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1fb163139309bd997116d5508149a3a80552684d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;conn_mod()&lt;/code&gt; is the name of the &lt;code&gt;Common Test&lt;/code&gt; module implementing the connection protocol, that is, &lt;code&gt;ct_telnet&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;conn_mod()&lt;/code&gt; - это имя модуля &lt;code&gt;Common Test&lt;/code&gt; , реализующего протокол соединения, то есть &lt;code&gt;ct_telnet&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="310dcb78a58000d40b19999fd64d7d840f17e923" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;connect/1&lt;/code&gt; loads the driver, opens it, and logs on to the database, returning the Erlang port if successful.</source>
          <target state="translated">&lt;code&gt;connect/1&lt;/code&gt; загружает драйвер, открывает его и входит в базу данных, возвращая порт Erlang в случае успеха.</target>
        </trans-unit>
        <trans-unit id="caa42197c0e7896b05b8108667bc65c22464af97" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;connected&lt;/code&gt; - &lt;code&gt;erlang:nodes(connected)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;connected&lt;/code&gt; - &lt;code&gt;erlang:nodes(connected)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="92cd3d4350ce9efed99d6d467dd677d61cb05c12" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;conp&lt;/code&gt; is a pointer to an &lt;code&gt;ErlConnect&lt;/code&gt; struct, described as follows:</source>
          <target state="translated">&lt;code&gt;conp&lt;/code&gt; - это указатель на структуру &lt;code&gt;ErlConnect&lt;/code&gt; , описанную следующим образом:</target>
        </trans-unit>
        <trans-unit id="407ba3561e1cb3e4c0b4b87da7dc3dc9b0ac5071" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;const char *ei_thisnodename(ei_cnode *ec)&lt;/code&gt;&lt;code&gt;const char *ei_thishostname(ei_cnode *ec)&lt;/code&gt;&lt;code&gt;const char *ei_thisalivename(ei_cnode *ec)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;const char *ei_thisnodename(ei_cnode *ec)&lt;/code&gt; &lt;code&gt;const char *ei_thishostname(ei_cnode *ec)&lt;/code&gt; &lt;code&gt;const char *ei_thisalivename(ei_cnode *ec)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1da83c6b37e4b57bb63855bce371b9fcb0518fc9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;const char *erl_thisalivename()&lt;/code&gt;&lt;code&gt;const char *erl_thiscookie()&lt;/code&gt;&lt;code&gt;short erl_thiscreation()&lt;/code&gt;&lt;code&gt;const char *erl_thishostname()&lt;/code&gt;&lt;code&gt;const char *erl_thisnodename()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;const char *erl_thisalivename()&lt;/code&gt; &lt;code&gt;const char *erl_thiscookie()&lt;/code&gt; &lt;code&gt;short erl_thiscreation()&lt;/code&gt; &lt;code&gt;const char *erl_thishostname()&lt;/code&gt; &lt;code&gt;const char *erl_thisnodename()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="77a34029e14cc38271c72a531e899e83f34ccd47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;context.conf&lt;/code&gt;: see &lt;code&gt;&lt;a href=&quot;#context&quot;&gt;Contexts&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;context.conf&lt;/code&gt; : см. &lt;code&gt;&lt;a href=&quot;#context&quot;&gt;Contexts&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="786a0affbb3ef2981961c506021e8f22cf48941d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;control_char&lt;/code&gt; is the type of control sequence: &lt;code&gt;$P&lt;/code&gt;, &lt;code&gt;$w&lt;/code&gt;, and so on.</source>
          <target state="translated">&lt;code&gt;control_char&lt;/code&gt; - это тип управляющей последовательности: &lt;code&gt;$P&lt;/code&gt; , &lt;code&gt;$w&lt;/code&gt; и так далее.</target>
        </trans-unit>
        <trans-unit id="0c7c364bf87067f9368199dfab8f0e9200d5c802" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;convert_request_date/1&lt;/code&gt; converts &lt;code&gt;DateString&lt;/code&gt; to the Erlang date format. &lt;code&gt;DateString&lt;/code&gt; must be in one of the three date formats defined in &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc2616.txt&quot;&gt;RFC 2616&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;convert_request_date/1&lt;/code&gt; преобразует &lt;code&gt;DateString&lt;/code&gt; в формат даты Erlang. &lt;code&gt;DateString&lt;/code&gt; должен быть в одном из трех форматов даты, определенных в &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc2616.txt&quot;&gt;RFC 2616&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ba2866f0d5129f4ab2b29e9d8b58c81aad9e098f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cookie&lt;/code&gt; is the authorization string required for access to the remote node. If &lt;code&gt;NULL&lt;/code&gt;, the user &lt;code&gt;HOME&lt;/code&gt; directory is searched for a cookie file &lt;code&gt;.erlang.cookie&lt;/code&gt;. The path to the home directory is retrieved from environment variable &lt;code&gt;HOME&lt;/code&gt; on Unix and from the &lt;code&gt;HOMEDRIVE&lt;/code&gt; and &lt;code&gt;HOMEPATH&lt;/code&gt; variables on Windows. For more details, see the &lt;code&gt;auth&lt;/code&gt; module in Kernel.</source>
          <target state="translated">&lt;code&gt;cookie&lt;/code&gt; - это строка авторизации, необходимая для доступа к удаленному узлу. Если &lt;code&gt;NULL&lt;/code&gt; , то пользователь &lt;code&gt;HOME&lt;/code&gt; каталог ищется печенья файл &lt;code&gt;.erlang.cookie&lt;/code&gt; . Путь к домашней директории извлекается из переменной окружения &lt;code&gt;HOME&lt;/code&gt; на Unix и от &lt;code&gt;HOMEDRIVE&lt;/code&gt; и &lt;code&gt;HOMEPATH&lt;/code&gt; переменных на Windows. Дополнительные сведения см. В модуле &lt;code&gt;auth&lt;/code&gt; в ядре.</target>
        </trans-unit>
        <trans-unit id="42bca715a9185b21349e1aec4da49804e0dd0c2c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cookie&lt;/code&gt; is the cookie for the node.</source>
          <target state="translated">&lt;code&gt;cookie&lt;/code&gt; - это файл cookie для узла.</target>
        </trans-unit>
        <trans-unit id="817b59120c7e12c5e02241436194d11a4a5ba478" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cookie&lt;/code&gt;. Returns a table cookie, which is a unique system-generated identifier for the table. The cookie is used internally to ensure that two different table definitions using the same table name cannot accidentally be intermixed. The cookie is generated when the table is created initially.</source>
          <target state="translated">&lt;code&gt;cookie&lt;/code&gt; . Возвращает файл cookie таблицы, который представляет собой уникальный идентификатор таблицы, сгенерированный системой. Файл cookie используется внутри, чтобы гарантировать, что два разных определения таблицы, использующие одно и то же имя таблицы, не могут случайно смешаться. Файл cookie создается при первоначальном создании таблицы.</target>
        </trans-unit>
        <trans-unit id="c8a1d24e0052f8872cb46a15e10a289509b724e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;count&lt;/code&gt; is the address of an integer, or &lt;code&gt;NULL&lt;/code&gt;. If &lt;code&gt;count&lt;/code&gt; is not &lt;code&gt;NULL&lt;/code&gt;, it is set by the function to the number of names found.</source>
          <target state="translated">&lt;code&gt;count&lt;/code&gt; - это адрес целого числа или &lt;code&gt;NULL&lt;/code&gt; . Если &lt;code&gt;count&lt;/code&gt; не &lt;code&gt;NULL&lt;/code&gt; , функция устанавливает его равным количеству найденных имен.</target>
        </trans-unit>
        <trans-unit id="49e81525989f91eca7e0066fbeaa05638d14a178" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cprof&lt;/code&gt; is a profiling tool that can be used to get a picture of how often different functions in the system are called.</source>
          <target state="translated">&lt;code&gt;cprof&lt;/code&gt; - это инструмент профилирования, который можно использовать, чтобы получить представление о том, как часто вызываются различные функции в системе.</target>
        </trans-unit>
        <trans-unit id="d0e94809d26e0e40fc7bfc527ddb50f2314ed029" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cprof&lt;/code&gt; is something in between &lt;code&gt;fprof&lt;/code&gt; and &lt;code&gt;cover&lt;/code&gt; regarding features. It counts how many times each function is called when the program is run, on a per module basis. &lt;code&gt;cprof&lt;/code&gt; has a low performance degradation effect (compared with &lt;code&gt;fprof&lt;/code&gt;) and does not need to recompile any modules to profile (compared with &lt;code&gt;cover&lt;/code&gt;). For more information, see the &lt;code&gt;cprof&lt;/code&gt; manual page in Tools.</source>
          <target state="translated">&lt;code&gt;cprof&lt;/code&gt; - это что-то среднее между &lt;code&gt;fprof&lt;/code&gt; и &lt;code&gt;cover&lt;/code&gt; в отношении функций. Он подсчитывает, сколько раз каждая функция вызывается при запуске программы для каждого модуля. &lt;code&gt;cprof&lt;/code&gt; имеет низкий эффект снижения производительности (по сравнению с &lt;code&gt;fprof&lt;/code&gt; ) и не требует перекомпиляции каких-либо модулей для профилирования (по сравнению с &lt;code&gt;cover&lt;/code&gt; ). Для получения дополнительной информации см. &lt;code&gt;cprof&lt;/code&gt; руководства cprof в разделе Инструменты.</target>
        </trans-unit>
        <trans-unit id="44744f0de84bc9d55c4eadbd5ce38738d9c24e19" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cprof&lt;/code&gt; is the most lightweight tool, but it only provides execution counts on a function basis (for all processes, not per process).</source>
          <target state="translated">&lt;code&gt;cprof&lt;/code&gt; - самый легкий инструмент, но он обеспечивает подсчет выполнения только для каждой функции (для всех процессов, а не для каждого процесса).</target>
        </trans-unit>
        <trans-unit id="4048a0d6fa4c493f01ecbc1d21704dcaaed1ce8c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cprof&lt;/code&gt; presents all profiled modules in decreasing total call count order, and for each module presents all profiled functions also in decreasing call count order. A call count limit can be specified to filter out all functions below the limit.</source>
          <target state="translated">&lt;code&gt;cprof&lt;/code&gt; представляет все профилированные модули в порядке убывания общего количества вызовов, и для каждого модуля все профилированные функции также отображаются в порядке убывания количества вызовов. Можно указать ограничение на количество вызовов, чтобы отфильтровать все функции ниже лимита.</target>
        </trans-unit>
        <trans-unit id="6ab6878d3ec5d2819f77ff8acce68315369d55fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cprof&lt;/code&gt; uses breakpoints similar to local call trace, but containing counters, to collect profiling data. Therfore there is no need for special compilation of any module to be profiled.</source>
          <target state="translated">&lt;code&gt;cprof&lt;/code&gt; использует точки останова, похожие на локальную трассировку вызовов, но содержащие счетчики, для сбора данных профилирования. Таким образом, нет необходимости в специальной компиляции какого-либо профилируемого модуля.</target>
        </trans-unit>
        <trans-unit id="f6c7f300bac5b6c58891e7324251fa70ca1a183c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cpu_sup&lt;/code&gt; is a process which supervises the CPU load and CPU utilization. It is part of the OS_Mon application, see &lt;code&gt;os_mon(6)&lt;/code&gt;. Available for Unix, although CPU utilization values (&lt;code&gt;util/0,1&lt;/code&gt;) are only available for Solaris, Linux and FreeBSD.</source>
          <target state="translated">&lt;code&gt;cpu_sup&lt;/code&gt; - это процесс, который контролирует загрузку ЦП и использование ЦП. Это часть приложения OS_Mon, см. &lt;code&gt;os_mon(6)&lt;/code&gt; . Доступно для Unix, хотя значения использования ЦП ( &lt;code&gt;util/0,1&lt;/code&gt; ) доступны только для Solaris, Linux и FreeBSD.</target>
        </trans-unit>
        <trans-unit id="8f733e1e243b4e78c37aa3bf12d9888559fd4e16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;create/2&lt;/code&gt; and &lt;code&gt;create/3&lt;/code&gt; are provided as synonyms to resemble module &lt;code&gt;&lt;a href=&quot;erl_tar&quot;&gt;erl_tar&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;create/2&lt;/code&gt; и &lt;code&gt;create/3&lt;/code&gt; предоставляются как синонимы, чтобы напоминать модуль &lt;code&gt;&lt;a href=&quot;erl_tar&quot;&gt;erl_tar&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="86837ff50eb1f72f6c14616c4e5ab70595b6c916" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;create_etag/1&lt;/code&gt; calculates the Etag for a file from its size and time for last modification. &lt;code&gt;FileInfo&lt;/code&gt; is a record defined in &lt;code&gt;kernel/include/file.hrl&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;create_etag/1&lt;/code&gt; вычисляет Etag для файла, исходя из его размера и времени последней модификации. &lt;code&gt;FileInfo&lt;/code&gt; - это запись, определенная в &lt;code&gt;kernel/include/file.hrl&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="147786f0517ecc77a8c88e11d308b3b944b51008" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;creation&lt;/code&gt; helps identifying a particular instance of a C-node. In particular, it can help prevent us from receiving messages sent to an earlier process with the same registered name.</source>
          <target state="translated">&lt;code&gt;creation&lt;/code&gt; помогает идентифицировать конкретный экземпляр C-узла. В частности, это может помочь предотвратить получение сообщений, отправленных более раннему процессу с тем же зарегистрированным именем.</target>
        </trans-unit>
        <trans-unit id="ecba77368ea7d93ebe0e99703e7acc590f0dcbe7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;creation&lt;/code&gt; identifies a specific instance of a C-node. It can help prevent the node from receiving messages sent to an earlier process with the same registered name.</source>
          <target state="translated">&lt;code&gt;creation&lt;/code&gt; идентифицирует конкретный экземпляр C-узла. Это может помочь предотвратить получение узлом сообщений, отправленных более раннему процессу с тем же зарегистрированным именем.</target>
        </trans-unit>
        <trans-unit id="3e2f0434ccaddbdbdb4597f9f04a694d0d591ab6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;creation&lt;/code&gt; is an arbitrary number.</source>
          <target state="translated">&lt;code&gt;creation&lt;/code&gt; - произвольное число.</target>
        </trans-unit>
        <trans-unit id="25c1f766dcf6145f2806239ba1561f608c475382" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;crl_cache&lt;/code&gt; (write as Erlang term)</source>
          <target state="translated">&lt;code&gt;crl_cache&lt;/code&gt; (пишите как термин Erlang)</target>
        </trans-unit>
        <trans-unit id="8089a68b245ea2612a5252f221bffda58f3203e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;crypto&lt;/code&gt; app,</source>
          <target state="translated">&lt;code&gt;crypto&lt;/code&gt; приложение,</target>
        </trans-unit>
        <trans-unit id="7321043699f44cee2da66b5796e5d39f980b3ac0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cserver&lt;/code&gt; takes a port number as argument and must be started before trying to call the Erlang functions.</source>
          <target state="translated">&lt;code&gt;cserver&lt;/code&gt; принимает номер порта в качестве аргумента и должен быть запущен перед попыткой вызова функций Erlang.</target>
        </trans-unit>
        <trans-unit id="10356f1cc74fd351a9c0427a2d1e1cde1bc2e480" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ct:pal/4&lt;/code&gt; and &lt;code&gt;ct:log/5&lt;/code&gt; add headers to strings being printed to the log file. The strings are also wrapped in div tags with a CSS class attribute, so that stylesheet formatting can be applied. To disable this feature for a printout (i.e. to get a result similar to using &lt;code&gt;io:format/2&lt;/code&gt;), call &lt;code&gt;ct:log/5&lt;/code&gt; with the &lt;code&gt;no_css&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;ct:pal/4&lt;/code&gt; и &lt;code&gt;ct:log/5&lt;/code&gt; добавляют заголовки к строкам, которые выводятся в файл журнала. Строки также заключены в теги div с атрибутом класса CSS, чтобы можно было применить форматирование таблицы стилей. Чтобы отключить эту функцию для распечатки (т.е. получить результат, аналогичный использованию &lt;code&gt;io:format/2&lt;/code&gt; ), вызовите &lt;code&gt;ct:log/5&lt;/code&gt; с параметром &lt;code&gt;no_css&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="54304822e601b32f1e90725086f938a28fcf450c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ct_config_plain&lt;/code&gt; - for reading configuration files with key-value tuples (standard format). This handler is used to parse configuration files if no user callback is specified.</source>
          <target state="translated">&lt;code&gt;ct_config_plain&lt;/code&gt; - для чтения файлов конфигурации с кортежами ключ-значение (стандартный формат). Этот обработчик используется для анализа файлов конфигурации, если обратный вызов пользователя не указан.</target>
        </trans-unit>
        <trans-unit id="091701f10b9171bbae6e609be4ad908a55b0470e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ct_config_xml&lt;/code&gt; - for reading configuration data from XML files.</source>
          <target state="translated">&lt;code&gt;ct_config_xml&lt;/code&gt; - для чтения данных конфигурации из файлов XML.</target>
        </trans-unit>
        <trans-unit id="37e7b4ba19bc3cee61acb03a5fc00aa6977d70d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ct_run -vts&lt;/code&gt; tries to open the &lt;code&gt;Common Test&lt;/code&gt; start page in an existing web browser window, or start the browser if it is not running. Which browser to start can be specified with the browser start command option:</source>
          <target state="translated">&lt;code&gt;ct_run -vts&lt;/code&gt; пытается открыть начальную страницу &lt;code&gt;Common Test&lt;/code&gt; в существующем окне веб-браузера или запустить браузер, если он не запущен. Какой браузер запускать, можно указать с помощью параметра команды запуска браузера:</target>
        </trans-unit>
        <trans-unit id="aa208b1437d15d60958b21cccaad22bef6c56934" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ct_run&lt;/code&gt; also accepts Erlang emulator flags. These are used when &lt;code&gt;ct_run&lt;/code&gt; calls &lt;code&gt;erl&lt;/code&gt; to start the Erlang node (this makes it possible to add directories to the code server path, change the cookie on the node, start more applications, and so on).</source>
          <target state="translated">&lt;code&gt;ct_run&lt;/code&gt; также принимает флаги эмулятора Erlang. Они используются, когда &lt;code&gt;ct_run&lt;/code&gt; вызывает &lt;code&gt;erl&lt;/code&gt; для запуска узла Erlang (это позволяет добавлять каталоги к пути сервера кода, изменять cookie на узле, запускать другие приложения и т. Д.).</target>
        </trans-unit>
        <trans-unit id="33d2727d6cc062836a6b35673aead9f43b2d4bf8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ct_telnet&lt;/code&gt; does not search for a prompt at all. This is useful if, for example, &lt;code&gt;Pattern&lt;/code&gt; itself matches the prompt.</source>
          <target state="translated">&lt;code&gt;ct_telnet&lt;/code&gt; вообще не ищет подсказку. Это полезно, если, например, сам &lt;code&gt;Pattern&lt;/code&gt; соответствует подсказке.</target>
        </trans-unit>
        <trans-unit id="601ce49083458a71b06687598df31090de331f21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ct_telnet&lt;/code&gt; ignores any prompt found. This option is useful if data sent by the server can include a pattern matching prompt &lt;code&gt;regexp&lt;/code&gt; (as returned by &lt;code&gt;TargedMod:get_prompt_regexp/0&lt;/code&gt;), but is not to not cause the function to return.</source>
          <target state="translated">&lt;code&gt;ct_telnet&lt;/code&gt; игнорирует все найденные подсказки. Эта опция полезна, если данные, отправленные сервером, могут включать &lt;code&gt;regexp&lt;/code&gt; приглашения сопоставления с образцом (как возвращено &lt;code&gt;TargedMod:get_prompt_regexp/0&lt;/code&gt; ), но не для того, чтобы функция не возвращалась.</target>
        </trans-unit>
        <trans-unit id="e90e605d39bb0cb048192d764d517674520c0dcb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;curr_cnt&lt;/code&gt; of a process is incremented each time the process is involved in a sequential trace. The counter can reach its limit (27 bits) if a process is very long-lived and is involved in much sequential tracing. If the counter overflows, the serial for ordering of the trace events cannot be used. To prevent the counter from overflowing in the middle of a sequential trace, function &lt;code&gt;seq_trace:reset_trace/0&lt;/code&gt; can be called to reset &lt;code&gt;prev_cnt&lt;/code&gt; and &lt;code&gt;curr_cnt&lt;/code&gt; of all processes in the Erlang node. This function also sets all trace tokens in processes and their message queues to empty, and thus stops all ongoing sequential tracing.</source>
          <target state="translated">&lt;code&gt;curr_cnt&lt;/code&gt; процесса увеличивается каждый раз, когда процесс участвует в последовательной трассировке. Счетчик может достичь своего предела (27 бит), если процесс очень долгоживущий и участвует в большом количестве последовательной трассировки. При переполнении счетчика нельзя использовать серийный номер для упорядочивания событий трассировки. Чтобы предотвратить переполнение счетчика в середине последовательной трассировки, можно &lt;code&gt;seq_trace:reset_trace/0&lt;/code&gt; функцию seq_trace: reset_trace / 0 для сброса &lt;code&gt;prev_cnt&lt;/code&gt; и &lt;code&gt;curr_cnt&lt;/code&gt; всех процессов в узле Erlang. Эта функция также устанавливает все токены трассировки в процессах и их очереди сообщений в состояние пустоты и, таким образом, останавливает всю текущую последовательную трассировку.</target>
        </trans-unit>
        <trans-unit id="fd1fe4536e2fae04ef35ef44090a99cd91b682a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cursor(QH)&lt;/code&gt; is equivalent to &lt;code&gt;cursor(QH, [])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;cursor(QH)&lt;/code&gt; эквивалентен &lt;code&gt;cursor(QH, [])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ba3f5edef89533291e58134f4f1cd47d203131b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;d(0)&lt;/code&gt; ... &lt;code&gt;d(n-1)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;d(0)&lt;/code&gt; ... &lt;code&gt;d(n-1)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6694b45c0235e642c971889424fd4c54eb60c6ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;data&lt;/code&gt; is a pointer to data to associate with &lt;code&gt;key&lt;/code&gt; in the calling thread.</source>
          <target state="translated">&lt;code&gt;data&lt;/code&gt; - это указатель на данные, которые нужно связать с &lt;code&gt;key&lt;/code&gt; в вызывающем потоке.</target>
        </trans-unit>
        <trans-unit id="6783d1593c9182ec656f533a2360e5b136b6243c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;data_dir&lt;/code&gt; - Data file directory</source>
          <target state="translated">&lt;code&gt;data_dir&lt;/code&gt; - Каталог файлов данных</target>
        </trans-unit>
        <trans-unit id="029a6b0ab70f3edd3986db227e2072871162f8ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;date-time-string&lt;/code&gt; is the date and time the message is written, default in local time (can be changed to UTC if needed). It is formatted with the ANSI-C function &lt;code&gt;strftime&lt;/code&gt; using the format string &lt;code&gt;%a %b %e %T %Z %Y&lt;/code&gt;, which produces messages like &lt;code&gt;===== ALIVE Thu May 15 10:13:36 MEST 2003&lt;/code&gt;; this can be changed, see the next section.</source>
          <target state="translated">&lt;code&gt;date-time-string&lt;/code&gt; - это дата и время написания сообщения, по умолчанию - местное время (при необходимости может быть изменено на UTC). Он форматируется с помощью функции ANSI-C &lt;code&gt;strftime&lt;/code&gt; с использованием строки формата &lt;code&gt;%a %b %e %T %Z %Y&lt;/code&gt; , что создает такие сообщения, как &lt;code&gt;===== ALIVE Thu May 15 10:13:36 MEST 2003&lt;/code&gt; ; это можно изменить, см. следующий раздел.</target>
        </trans-unit>
        <trans-unit id="9033cd3570d0562271c3a2e4d7db4ffa6b191f45" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;day/1&lt;/code&gt; converts the day of the week (&lt;code&gt;NthDayOfWeek&lt;/code&gt;) from an integer (1-7) to an abbreviated string, that is:</source>
          <target state="translated">&lt;code&gt;day/1&lt;/code&gt; преобразует день недели ( &lt;code&gt;NthDayOfWeek&lt;/code&gt; ) из целого числа (1-7) в сокращенную строку, то есть:</target>
        </trans-unit>
        <trans-unit id="1cb11a621938f8a8d62fba1b13fd3331878eb3f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;db&lt;/code&gt; (ETS tables)</source>
          <target state="translated">&lt;code&gt;db&lt;/code&gt; (таблицы ETS)</target>
        </trans-unit>
        <trans-unit id="358f4b1996cf482f96fc6cfa013716990e4ee122" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;db_dir&lt;/code&gt; is mandatory.</source>
          <target state="translated">&lt;code&gt;db_dir&lt;/code&gt; является обязательным.</target>
        </trans-unit>
        <trans-unit id="2f664d4edb004cdde8a06354bf8d85f3788b0c41" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;db_nodes&lt;/code&gt; - &lt;code&gt;mnesia:system_info(db_nodes)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;db_nodes&lt;/code&gt; - &lt;code&gt;mnesia:system_info(db_nodes)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="70a6744faefa1713ffbd9721315da438a25ed6e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;db_nodes&lt;/code&gt;. Returns the nodes that make up the persistent database. Disc-less nodes are only included in the list of nodes if they explicitly have been added to the schema, for example, with &lt;code&gt;mnesia:add_table_copy/3&lt;/code&gt;. The function can be started even if Mnesia is not yet running.</source>
          <target state="translated">&lt;code&gt;db_nodes&lt;/code&gt; . Возвращает узлы, составляющие постоянную базу данных. Бездисковые узлы включаются в список узлов только в том случае, если они явно были добавлены в схему, например, с помощью &lt;code&gt;mnesia:add_table_copy/3&lt;/code&gt; . Функцию можно запустить, даже если Mnesia еще не запущена.</target>
        </trans-unit>
        <trans-unit id="c673477036951a729c93b1f7508951bcd97906c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dbg&lt;/code&gt; is a generic Erlang trace tool. By using the &lt;code&gt;timestamp&lt;/code&gt; or &lt;code&gt;cpu_timestamp&lt;/code&gt; options it can be used as a precision instrument to profile how long time a function call takes for a specific process. This can be very useful when trying to understand where time is spent in a heavily loaded system as it is possible to limit the scope of what is profiled to be very small. For more information, see the &lt;code&gt;dbg&lt;/code&gt; manual page in Runtime Tools.</source>
          <target state="translated">&lt;code&gt;dbg&lt;/code&gt; - это универсальный инструмент трассировки Erlang. Используя параметры &lt;code&gt;timestamp&lt;/code&gt; или &lt;code&gt;cpu_timestamp&lt;/code&gt; , его можно использовать в качестве точного инструмента для определения того, сколько времени занимает вызов функции для конкретного процесса. Это может быть очень полезно, когда вы пытаетесь понять, на что тратится время в сильно загруженной системе, так как можно ограничить объем профилируемого объекта очень маленьким. Дополнительные сведения см. На странице руководства &lt;code&gt;dbg&lt;/code&gt; в разделе &amp;laquo;Инструменты времени выполнения&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="999dad6d17987fb1d2c6e7351c9927faffa26e0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dbg&lt;/code&gt; is equivalent to &lt;code&gt;tracer(node(),[{shell, only}])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;dbg&lt;/code&gt; эквивалентен &lt;code&gt;tracer(node(),[{shell, only}])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="17caedf6cb86230e39ee34c9c7862972a59e53b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dbg&lt;/code&gt; is the generic erlang tracing frontend. By using the &lt;code&gt;timestamp&lt;/code&gt; or &lt;code&gt;cpu_timestamp&lt;/code&gt; options it can be used to time how long function calls in a live system take.</source>
          <target state="translated">&lt;code&gt;dbg&lt;/code&gt; - это общий интерфейс трассировки erlang. Используя параметры &lt;code&gt;timestamp&lt;/code&gt; или &lt;code&gt;cpu_timestamp&lt;/code&gt; , его можно использовать для определения времени, сколько времени занимают вызовы функций в живой системе.</target>
        </trans-unit>
        <trans-unit id="383891b92b7728a806802597bdf39747dcb86b32" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dbg&lt;/code&gt; mode</source>
          <target state="translated">&lt;code&gt;dbg&lt;/code&gt; режим dbg</target>
        </trans-unit>
        <trans-unit id="108caa6a9c7c9fe0b3f193cf88ae1a060d7ab2de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;debug&lt;/code&gt;. Returns the current debug level of Mnesia.</source>
          <target state="translated">&lt;code&gt;debug&lt;/code&gt; . Возвращает текущий уровень отладки Mnesia.</target>
        </trans-unit>
        <trans-unit id="65c5fbce6c513cedd45826710958863898a9a595" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;default&lt;/code&gt; for normal data</source>
          <target state="translated">&lt;code&gt;default&lt;/code&gt; для обычных данных</target>
        </trans-unit>
        <trans-unit id="3bfd8f4c4d96227dcf3984ef94def308ee7c9e83" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;default_bind&lt;/code&gt; - Binds schedulers the default way. Defaults to &lt;code&gt;thread_no_node_processor_spread&lt;/code&gt; (which can change in the future).</source>
          <target state="translated">&lt;code&gt;default_bind&lt;/code&gt; - связывает планировщики по умолчанию. По умолчанию &lt;code&gt;thread_no_node_processor_spread&lt;/code&gt; (который может измениться в будущем).</target>
        </trans-unit>
        <trans-unit id="100310a5ba2c1c425121b816b4152b6d3217a9ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;delete_group/2, delete_group/3&lt;/code&gt;, and &lt;code&gt;delete_group/4&lt;/code&gt; each deletes the group specified and returns &lt;code&gt;true&lt;/code&gt;. If there is an error, &lt;code&gt;{error, Reason}&lt;/code&gt; is returned. When &lt;code&gt;delete_group/2&lt;/code&gt; is called, option &lt;code&gt;Port&lt;/code&gt; and &lt;code&gt;Dir&lt;/code&gt; are mandatory.</source>
          <target state="translated">&lt;code&gt;delete_group/2, delete_group/3&lt;/code&gt; и &lt;code&gt;delete_group/4&lt;/code&gt; каждый удаляет указанную группу и возвращает &lt;code&gt;true&lt;/code&gt; . В случае ошибки возвращается &lt;code&gt;{error, Reason}&lt;/code&gt; . Когда &lt;code&gt;delete_group/2&lt;/code&gt; , опции &lt;code&gt;Port&lt;/code&gt; и &lt;code&gt;Dir&lt;/code&gt; являются обязательными.</target>
        </trans-unit>
        <trans-unit id="5d4db6f5286e6d6750d8c05c56534f0a1605b2dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;delete_group_member/3, delete_group_member/4&lt;/code&gt;, and &lt;code&gt;delete_group_member/5&lt;/code&gt; each deletes a user from a group. If the group or the user does not exist, this function returns an error, otherwise &lt;code&gt;true&lt;/code&gt;. When &lt;code&gt;delete_group_member/3&lt;/code&gt; is called, the options &lt;code&gt;Port&lt;/code&gt; and &lt;code&gt;Dir&lt;/code&gt; are mandatory.</source>
          <target state="translated">&lt;code&gt;delete_group_member/3, delete_group_member/4&lt;/code&gt; и &lt;code&gt;delete_group_member/5&lt;/code&gt; удаляет пользователя из группы. Если группа или пользователь не существует, эта функция возвращает ошибку, в противном случае - &lt;code&gt;true&lt;/code&gt; . Когда &lt;code&gt;delete_group_member/3&lt;/code&gt; , параметры &lt;code&gt;Port&lt;/code&gt; и &lt;code&gt;Dir&lt;/code&gt; являются обязательными.</target>
        </trans-unit>
        <trans-unit id="7a9b6df1fd63a50104f12248edc73eeabaafd916" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;delete_user/2, delete_user/3&lt;/code&gt;, and &lt;code&gt;delete_user/4&lt;/code&gt; each deletes a user from the user database. If the operation is successful, this function returns &lt;code&gt;true&lt;/code&gt;. If an error occurs, &lt;code&gt;{error,Reason}&lt;/code&gt; is returned. When &lt;code&gt;delete_user/2&lt;/code&gt; is called, options &lt;code&gt;Port&lt;/code&gt; and &lt;code&gt;Dir&lt;/code&gt; are mandatory.</source>
          <target state="translated">&lt;code&gt;delete_user/2, delete_user/3&lt;/code&gt; и &lt;code&gt;delete_user/4&lt;/code&gt; каждый удаляет пользователя из базы данных пользователей. Если операция прошла успешно, эта функция возвращает &lt;code&gt;true&lt;/code&gt; . Если возникает &lt;code&gt;{error,Reason}&lt;/code&gt; возвращается {error, Reason} . Когда &lt;code&gt;delete_user/2&lt;/code&gt; , параметры &lt;code&gt;Port&lt;/code&gt; и &lt;code&gt;Dir&lt;/code&gt; являются обязательными.</target>
        </trans-unit>
        <trans-unit id="a7b518efd8daf88742e92d33d880b350e2bac1f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;deliver/3&lt;/code&gt; sends &lt;code&gt;Data&lt;/code&gt; over &lt;code&gt;Socket&lt;/code&gt; using the specified &lt;code&gt;SocketType&lt;/code&gt;. &lt;code&gt;Socket&lt;/code&gt; and &lt;code&gt;SocketType&lt;/code&gt; is to be the socket and the &lt;code&gt;socket_type&lt;/code&gt; form the &lt;code&gt;mod&lt;/code&gt; record as defined in &lt;code&gt;httpd.hrl&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;deliver/3&lt;/code&gt; &lt;code&gt;SocketType&lt;/code&gt; / 3 отправляет &lt;code&gt;Data&lt;/code&gt; через &lt;code&gt;Socket&lt;/code&gt; , используя указанный SocketType . &lt;code&gt;Socket&lt;/code&gt; и &lt;code&gt;SocketType&lt;/code&gt; должны быть сокетом, а &lt;code&gt;socket_type&lt;/code&gt; формирует запись &lt;code&gt;mod&lt;/code&gt; как определено в &lt;code&gt;httpd.hrl&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="31ef7900d5c5757691bc7bbeceb5751161d490e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;demonitor(MonitorRef, [])&lt;/code&gt; is equivalent to &lt;code&gt;&lt;a href=&quot;#demonitor-1&quot;&gt;demonitor(MonitorRef)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;demonitor(MonitorRef, [])&lt;/code&gt; эквивалентен &lt;code&gt;&lt;a href=&quot;#demonitor-1&quot;&gt;demonitor(MonitorRef)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cd2fdb40dfa166ca494c05463a92fced74b0557b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;deprecated&lt;/code&gt;, the second element is a sorted list of calls to deprecated functions;</source>
          <target state="translated">&lt;code&gt;deprecated&lt;/code&gt; , второй элемент представляет собой отсортированный список вызовов устаревших функций;</target>
        </trans-unit>
        <trans-unit id="ee868e13126c26dc9a787ae1e2cc0dbb0a70c58b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;deprecated&lt;/code&gt;, the second element is a sorted list of externally used deprecated functions;</source>
          <target state="translated">&lt;code&gt;deprecated&lt;/code&gt; , второй элемент представляет собой отсортированный список устаревших функций, используемых извне;</target>
        </trans-unit>
        <trans-unit id="319a0fb5eab817dda6c01d5820ff0037dd8bd878" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dept&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;dept&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="cc29ccdb337f80df256280bd273a5e77f44127bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;depth : integer&lt;/code&gt; :: Stack depth. Ex. &lt;code&gt;0&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;depth : integer&lt;/code&gt; :: Глубина стека. Ex. &lt;code&gt;0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cd05717828c4848f5d3564e59af45c2ef0f343af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;description&lt;/code&gt; - A short description, a string. Defaults to &quot;&quot;.</source>
          <target state="translated">&lt;code&gt;description&lt;/code&gt; - Краткое описание, строка. По умолчанию &quot;&quot;.</target>
        </trans-unit>
        <trans-unit id="85b6308eff6598024e34eb55b4a1298c9e62a106" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;diameter_app(3)&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;diameter_transport&quot;&gt;diameter_transport(3)&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;diameter_dict&quot;&gt;diameter_dict(4)&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;diameter_app(3)&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;diameter_transport&quot;&gt;diameter_transport(3)&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;diameter_dict&quot;&gt;diameter_dict(4)&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d55ee1f62fef4cf459b94cd5df403faf0b90ddee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dir&lt;/code&gt; - If present, points to a directory where a file to which all data in the ets table is &quot;synced&quot;.</source>
          <target state="translated">&lt;code&gt;dir&lt;/code&gt; - если присутствует, указывает на каталог, в котором находится файл, с которым &amp;laquo;синхронизированы&amp;raquo; все данные в таблице ets.</target>
        </trans-unit>
        <trans-unit id="0cb1144fcd4bf4d5089b297e90a677a15ff4c23b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dir&lt;/code&gt; - This &lt;strong&gt;mandatory&lt;/strong&gt; option points to a directory where to place the file of a dets table.</source>
          <target state="translated">&lt;code&gt;dir&lt;/code&gt; - этот &lt;strong&gt;обязательный&lt;/strong&gt; параметр указывает на каталог, в котором можно разместить файл таблицы dets.</target>
        </trans-unit>
        <trans-unit id="b605d7fbb8a0d7d4f4a4bbe6c4e2e64588b8aa6c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dir&lt;/code&gt; in config is mandatory.</source>
          <target state="translated">&lt;code&gt;dir&lt;/code&gt; в config является обязательным.</target>
        </trans-unit>
        <trans-unit id="1458b26f6035d8be2020b2d8b4ef95611795c664" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;directory&lt;/code&gt;, the directory where the &lt;code&gt;&lt;a href=&quot;#library_module&quot;&gt;library module's&lt;/a&gt;&lt;/code&gt; BEAM file is located.</source>
          <target state="translated">&lt;code&gt;directory&lt;/code&gt; -каталог , в котором &lt;code&gt;&lt;a href=&quot;#library_module&quot;&gt;library module's&lt;/a&gt;&lt;/code&gt; файл BEAM библиотечного модуля .</target>
        </trans-unit>
        <trans-unit id="f2e9238fb07723dc0c2f90525328a7856c465077" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;directory&lt;/code&gt;, the directory where the module's BEAM file is located;</source>
          <target state="translated">&lt;code&gt;directory&lt;/code&gt; -каталог , в котором находится BEAM-файл модуля;</target>
        </trans-unit>
        <trans-unit id="44f4e0e98d0c51c1545f8ddde56354f21e9a0c98" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;directory&lt;/code&gt;, the directory where the modules' BEAM files are located;</source>
          <target state="translated">&lt;code&gt;directory&lt;/code&gt; , в котором расположены файлы BEAM модулей;</target>
        </trans-unit>
        <trans-unit id="7cb229102fa7099945b4b0429f46df0906ccb986" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;directory&lt;/code&gt;, the release directory;</source>
          <target state="translated">&lt;code&gt;directory&lt;/code&gt; , каталог выпуска;</target>
        </trans-unit>
        <trans-unit id="cade714c9bb756cacf4a7301a0c998f14afc09d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;directory&lt;/code&gt;. Returns the name of the Mnesia directory. It can be called even if Mnesia is not yet running.</source>
          <target state="translated">&lt;code&gt;directory&lt;/code&gt; . Возвращает имя каталога Mnesia. Его можно вызвать, даже если Mnesia еще не запущена.</target>
        </trans-unit>
        <trans-unit id="48d0811320e12d34ce2b617aeb062bab8990a26c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;directory_index&lt;/code&gt; specifies a list of resources to look for if a client requests a directory using a &lt;code&gt;/&lt;/code&gt; at the end of the directory name. &lt;code&gt;file&lt;/code&gt; depicts the name of a file in the directory. Several files can be given, in which case the server returns the first it finds, for example:</source>
          <target state="translated">&lt;code&gt;directory_index&lt;/code&gt; определяет список ресурсов, которые нужно искать, если клиент запрашивает каталог, используя &lt;code&gt;/&lt;/code&gt; в конце имени каталога. &lt;code&gt;file&lt;/code&gt; отображает имя файла в каталоге. Можно указать несколько файлов, и в этом случае сервер вернет первый найденный, например:</target>
        </trans-unit>
        <trans-unit id="043ee13ece50666ab9350e2d84d985c18e0bfb0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;disabled&lt;/code&gt; - Disable BEAST mitigation.</source>
          <target state="translated">&lt;code&gt;disabled&lt;/code&gt; - Отключить защиту BEAST.</target>
        </trans-unit>
        <trans-unit id="91c6fec592eea4d837be060abf6f9d6a2694d8bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;disc_copies&lt;/code&gt;. Returns the nodes where a &lt;code&gt;disc_copy&lt;/code&gt; of the table resides according to the schema.</source>
          <target state="translated">&lt;code&gt;disc_copies&lt;/code&gt; . Возвращает узлы, в которых находится &lt;code&gt;disc_copy&lt;/code&gt; таблицы, согласно схеме.</target>
        </trans-unit>
        <trans-unit id="528b7a8d42d9b5d4952e0db2f2ad3f096a0108ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;disc_copies&lt;/code&gt;. The value of the attribute is a list of Erlang nodes, and a replica of the table resides both in RAM and on disc on each node in the list. Write operations addressed to the table address both the RAM and the disc copy of the table.</source>
          <target state="translated">&lt;code&gt;disc_copies&lt;/code&gt; . Значение атрибута представляет собой список узлов Erlang, а копия таблицы находится как в ОЗУ, так и на диске на каждом узле в списке. Операции записи, адресованные к таблице, обращаются как к ОЗУ, так и к копии таблицы на диске.</target>
        </trans-unit>
        <trans-unit id="f7e2c5cdc73ebc52fd236fc4cf50f7ba471876d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;disc_copies&lt;/code&gt;. This property specifies a list of Erlang nodes where the table is kept in RAM and on disc. All updates of the table are performed in the actual table and are also logged to disc. If a table is of type &lt;code&gt;disc_copies&lt;/code&gt; at a certain node, the entire table is resident in RAM memory and on disc. Each transaction performed on the table is appended to a &lt;code&gt;LOG&lt;/code&gt; file and written into the RAM table.</source>
          <target state="translated">&lt;code&gt;disc_copies&lt;/code&gt; . Это свойство определяет список узлов Erlang, где таблица хранится в ОЗУ и на диске. Все обновления таблицы выполняются в самой таблице и также записываются на диск. Если таблица имеет тип &lt;code&gt;disc_copies&lt;/code&gt; на определенном узле, вся таблица находится в оперативной памяти и на диске. Каждая транзакция, выполняемая в таблице, добавляется в файл &lt;code&gt;LOG&lt;/code&gt; и записывается в таблицу RAM.</target>
        </trans-unit>
        <trans-unit id="726573780291c89bb3847af9c71db60a2833ec14" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;disc_only_copies&lt;/code&gt;. Returns the nodes where a &lt;code&gt;disc_only_copy&lt;/code&gt; of the table resides according to the schema.</source>
          <target state="translated">&lt;code&gt;disc_only_copies&lt;/code&gt; . Возвращает узлы, в которых находится &lt;code&gt;disc_only_copy&lt;/code&gt; таблицы, согласно схеме.</target>
        </trans-unit>
        <trans-unit id="54cb9adf6cce29c6773c5ad5c9dc1dfcea2dfc60" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;disc_only_copies&lt;/code&gt;. Some, or all, table replicas can be kept on disc only. These replicas are considerably slower than the RAM-based replicas.</source>
          <target state="translated">&lt;code&gt;disc_only_copies&lt;/code&gt; . Некоторые или все реплики таблиц могут храниться только на диске. Эти реплики значительно медленнее, чем реплики в оперативной памяти.</target>
        </trans-unit>
        <trans-unit id="c18b242d445ffca079379b754a73022a336f4a85" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;disc_only_copies&lt;/code&gt;. The value of the attribute is a list of Erlang nodes, and a replica of the table resides only as a disc copy on each node in the list. The major disadvantage of this type of table replica is the access speed. The major advantage is that the table does not occupy space in memory.</source>
          <target state="translated">&lt;code&gt;disc_only_copies&lt;/code&gt; . Значение атрибута - это список узлов Erlang, а реплика таблицы находится только как копия диска на каждом узле в списке. Основным недостатком такого типа реплики таблицы является скорость доступа. Главное преимущество в том, что таблица не занимает места в памяти.</target>
        </trans-unit>
        <trans-unit id="7f03df437c65ff33591d435acb1cef33342009d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;disconnect/1&lt;/code&gt; closes the database connection and the driver. (However, it does not unload it.)</source>
          <target state="translated">&lt;code&gt;disconnect/1&lt;/code&gt; закрывает соединение с базой данных и драйвер. (Однако он не разгружает его.)</target>
        </trans-unit>
        <trans-unit id="40239310c66be0c67b6c6e72002aa2ac11ea8c0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;disconnect&lt;/code&gt; if a SSH_MSG_DISCONNECT message should be sent immediately. It will be followed by a close of the underlying tcp connection.</source>
          <target state="translated">&lt;code&gt;disconnect&lt;/code&gt; если сообщение SSH_MSG_DISCONNECT должно быть отправлено немедленно. За этим последует закрытие базового TCP-соединения.</target>
        </trans-unit>
        <trans-unit id="337d23a9ffc8ed74295386f439f4029d6e7bccc7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;disk_log&lt;/code&gt; is a disk-based term logger that enables efficient logging of items on files.</source>
          <target state="translated">&lt;code&gt;disk_log&lt;/code&gt; - это дисковый регистратор терминов, который обеспечивает эффективную регистрацию элементов в файлах.</target>
        </trans-unit>
        <trans-unit id="557289d732508771fba2de6df7f71aa4fd478af4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;disksup&lt;/code&gt; is a process which supervises the available disk space in the system. It is part of the OS_Mon application, see &lt;code&gt;os_mon(6)&lt;/code&gt;. Available for Unix and Windows.</source>
          <target state="translated">&lt;code&gt;disksup&lt;/code&gt; - это процесс, контролирующий доступное дисковое пространство в системе. Это часть приложения OS_Mon, см. &lt;code&gt;os_mon(6)&lt;/code&gt; . Доступно для Unix и Windows.</target>
        </trans-unit>
        <trans-unit id="aed630569409785073ef89b28862b9ae641e65a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dist_util:handshake_other_started(HsData)&lt;/code&gt; will perform the handshake and if the handshake successfully completes this process will then continue in a connection supervisor loop as long as the connection is up.</source>
          <target state="translated">&lt;code&gt;dist_util:handshake_other_started(HsData)&lt;/code&gt; выполнит рукопожатие, и, если рукопожатие успешно завершится, этот процесс будет продолжаться в цикле супервизора соединения, пока соединение установлено.</target>
        </trans-unit>
        <trans-unit id="27751a38cd4a9b2acc5282619252530fe6ce8226" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dist_util:handshake_we_started(HsData)&lt;/code&gt; will perform the handshake and the handshake successfully completes this process will then continue in a connection supervisor loop as long as the connection is up.</source>
          <target state="translated">&lt;code&gt;dist_util:handshake_we_started(HsData)&lt;/code&gt; выполнит рукопожатие, и рукопожатие успешно завершится, этот процесс будет продолжаться в цикле супервизора соединений, пока соединение установлено.</target>
        </trans-unit>
        <trans-unit id="4429d38e80eee115e892f24ce877c4a14468e02d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;distrvsn&lt;/code&gt; 2 was never used.</source>
          <target state="translated">&lt;code&gt;distrvsn&lt;/code&gt; 2 никогда не использовался.</target>
        </trans-unit>
        <trans-unit id="cc8e261e926a667c2b9c7d3069b083201c1d8312" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dns&lt;/code&gt; (use the Erlang DNS client &lt;code&gt;inet_res(3)&lt;/code&gt; for nameserver queries)</source>
          <target state="translated">&lt;code&gt;dns&lt;/code&gt; (используйте Erlang DNS-клиент &lt;code&gt;inet_res(3)&lt;/code&gt; для запросов к серверу имен)</target>
        </trans-unit>
        <trans-unit id="6c08cc6086a582b21e793f0239a11699599eac87" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;do/1&lt;/code&gt; (mandatory) - the function called when a request is to be handled</source>
          <target state="translated">&lt;code&gt;do/1&lt;/code&gt; (обязательный) - функция, вызываемая, когда запрос должен быть обработан</target>
        </trans-unit>
        <trans-unit id="758e77371d75d6c6e7aebbc8c64b91f227479100" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;do_connect&lt;/code&gt; is where we log in to the database. If the connection was successful, we store the connection handle in the driver data, and return &lt;code&gt;'ok'&lt;/code&gt;. Otherwise, we return the error message from postgres and store &lt;code&gt;NULL&lt;/code&gt; in the driver data.</source>
          <target state="translated">&lt;code&gt;do_connect&lt;/code&gt; - это место, где мы регистрируемся в базе данных. Если соединение было успешным, мы сохраняем дескриптор соединения в данных драйвера и возвращаем &lt;code&gt;'ok'&lt;/code&gt; . В противном случае мы возвращаем сообщение об ошибке из postgres и сохраняем &lt;code&gt;NULL&lt;/code&gt; в данных драйвера.</target>
        </trans-unit>
        <trans-unit id="0ca9c6c5b4c69e3276930037f7b9016cb2b8633f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;doc/examples&lt;/code&gt; - Recommended. Source code for examples on how to use this application should be placed here. It is encouraged that examples are sourced to the public documentation from this directory.</source>
          <target state="translated">&lt;code&gt;doc/examples&lt;/code&gt; - рекомендуется. Исходный код для примеров использования этого приложения должен быть размещен здесь. Приветствуется, что примеры взяты из общедоступной документации из этого каталога.</target>
        </trans-unit>
        <trans-unit id="cd6258308058537c9e5e0c91ffb5f785a17fe90d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;doc/html&lt;/code&gt; - Optional. HTML pages for the entire Application.</source>
          <target state="translated">&lt;code&gt;doc/html&lt;/code&gt; - необязательно. HTML-страницы для всего приложения.</target>
        </trans-unit>
        <trans-unit id="d19b63341025752926dd220b3c4dcdb81e31d112" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;doc/internal&lt;/code&gt; - Recommended. Any documentation that describes implementation details about this application, not intended for publication, should be placed here.</source>
          <target state="translated">&lt;code&gt;doc/internal&lt;/code&gt; - рекомендуется. Любая документация, описывающая детали реализации этого приложения, не предназначенная для публикации, должна быть размещена здесь.</target>
        </trans-unit>
        <trans-unit id="2758f6c8961028bd2d92836df413d8c156acb8dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;doc/man1&lt;/code&gt; - Recommended. Man pages for Application executables.</source>
          <target state="translated">&lt;code&gt;doc/man1&lt;/code&gt; - рекомендуется. Страницы руководства для исполняемых файлов приложения.</target>
        </trans-unit>
        <trans-unit id="b6861858042b0017b401d18b45b93129267b5273" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;doc/man3&lt;/code&gt; - Recommended. Man pages for module APIs.</source>
          <target state="translated">&lt;code&gt;doc/man3&lt;/code&gt; - рекомендуется. Страницы руководства для API модулей.</target>
        </trans-unit>
        <trans-unit id="b02f30cc869ef03af4b822d7cbda0d15b2fdf155" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;doc/man6&lt;/code&gt; - Recommended. Man pages for Application overview.</source>
          <target state="translated">&lt;code&gt;doc/man6&lt;/code&gt; - рекомендуется. Страницы руководства для обзора приложения.</target>
        </trans-unit>
        <trans-unit id="f0cd45a88d7bad374736ea37b733712282132583" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;doc/pdf&lt;/code&gt; - Optional. PDF documentation for the entire Application.</source>
          <target state="translated">&lt;code&gt;doc/pdf&lt;/code&gt; - необязательно. Документация в формате PDF для всего приложения.</target>
        </trans-unit>
        <trans-unit id="e22d1099778d41d3465cbe9215d1d489edc223b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;doc/src&lt;/code&gt; - Recommended. All source files for documentation, such as Markdown, AsciiDoc or XML-files, should be placed here.</source>
          <target state="translated">&lt;code&gt;doc/src&lt;/code&gt; - рекомендуется. Здесь должны быть размещены все исходные файлы для документации, такие как Markdown, AsciiDoc или XML-файлы.</target>
        </trans-unit>
        <trans-unit id="a5e549dfbc183aa20b7e60adc165e6f9ab1412b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;doc&lt;/code&gt; - Optional. Any released documentation should be placed in sub-directories here.</source>
          <target state="translated">&lt;code&gt;doc&lt;/code&gt; - Необязательно. Любая выпущенная документация должна быть помещена в подкаталоги здесь.</target>
        </trans-unit>
        <trans-unit id="7f056e1e74df915b2c2fa2305e33ff60673a4ab2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;doc&lt;/code&gt; - Recommended. Any source documentation should be placed in sub-directories here.</source>
          <target state="translated">&lt;code&gt;doc&lt;/code&gt; - Рекомендуется. Любая исходная документация должна быть размещена здесь в подкаталогах.</target>
        </trans-unit>
        <trans-unit id="6f833f13a1c81da53aed690dbf7008110c793525" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;drestriction(F,&amp;nbsp;S1,&amp;nbsp;S2)&lt;/code&gt; is equivalent to &lt;code&gt;difference(S1,&amp;nbsp;restriction(F,&amp;nbsp;S1,&amp;nbsp;S2))&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;drestriction(F,&amp;nbsp;S1,&amp;nbsp;S2)&lt;/code&gt; эквивалентно &lt;code&gt;difference(S1,&amp;nbsp;restriction(F,&amp;nbsp;S1,&amp;nbsp;S2))&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="10d9ee6303d3aae6c02ed6122ee8a1ba1cce072a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;drestriction(R,&amp;nbsp;S)&lt;/code&gt; is equivalent to &lt;code&gt;difference(R,&amp;nbsp;restriction(R,&amp;nbsp;S))&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;drestriction(R,&amp;nbsp;S)&lt;/code&gt; эквивалентно &lt;code&gt;difference(R,&amp;nbsp;restriction(R,&amp;nbsp;S))&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="293430c5917d960f03ddc8507df43a37a619109e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;driver : string&lt;/code&gt; :: Driver name. Ex. &lt;code&gt;&quot;tcp_inet&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;driver : string&lt;/code&gt; :: Имя драйвера. Ex. &lt;code&gt;&quot;tcp_inet&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8aff5f2fa6f9e60bdccdad2300f684488c04eea2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;driver_binary_dec_refc&lt;/code&gt; does &lt;strong&gt;not&lt;/strong&gt; free the binary if the reference count reaches zero. &lt;strong&gt;Only&lt;/strong&gt; use &lt;code&gt;driver_binary_dec_refc&lt;/code&gt; when you are sure &lt;strong&gt;not&lt;/strong&gt; to reach a reference count of zero.</source>
          <target state="translated">&lt;code&gt;driver_binary_dec_refc&lt;/code&gt; вовсе &lt;strong&gt;не&lt;/strong&gt; освобождает бинарник , если счетчик ссылок достигает нуля. Используйте &lt;code&gt;driver_binary_dec_refc&lt;/code&gt; &lt;strong&gt;только в том &lt;/strong&gt;случае, если вы уверены, что счетчик ссылок &lt;strong&gt;не&lt;/strong&gt; достигнет нуля.</target>
        </trans-unit>
        <trans-unit id="15e677a3b16d73ec64d29f8ceacede85bc67cf35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;driver_level&lt;/code&gt; (driver-specific locking)</source>
          <target state="translated">&lt;code&gt;driver_level&lt;/code&gt; (блокировка для конкретного драйвера)</target>
        </trans-unit>
        <trans-unit id="0125d3a924b41ddc0030d5e7607910de2b7b720f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dropwhile&lt;/code&gt; is the complement of &lt;code&gt;takewhile&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;dropwhile&lt;/code&gt; - это дополнение &lt;code&gt;takewhile&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="9f7909fee906d343c0aa5bd36ea79f988740fc50" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dump_log_load_regulation&lt;/code&gt;. Returns a boolean that tells if Mnesia is configured to regulate the dumper process load.</source>
          <target state="translated">&lt;code&gt;dump_log_load_regulation&lt;/code&gt; . Возвращает логическое значение, которое сообщает, настроена ли Mnesia для регулирования загрузки процесса дампера.</target>
        </trans-unit>
        <trans-unit id="8104ad964b40039298afcda9708b67844d8e557a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dump_log_time_threshold&lt;/code&gt;. Returns the time threshold for transaction log dumps in milliseconds.</source>
          <target state="translated">&lt;code&gt;dump_log_time_threshold&lt;/code&gt; . Возвращает порог времени для дампа журнала транзакций в миллисекундах.</target>
        </trans-unit>
        <trans-unit id="68fa023d228fd1006cc26e2b3d488a47193b8260" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dump_log_update_in_place&lt;/code&gt;. Returns a boolean that tells if Mnesia is configured to perform the updates in the Dets files directly, or if the updates are to be performed in a copy of the Dets files.</source>
          <target state="translated">&lt;code&gt;dump_log_update_in_place&lt;/code&gt; . Возвращает логическое значение, которое сообщает, настроена ли Mnesia для выполнения обновлений непосредственно в файлах Dets или должны ли обновления выполняться в копии файлов Dets.</target>
        </trans-unit>
        <trans-unit id="164ccf30a88e90adbcef980a0252f2b5604f51da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dump_log_write_threshold&lt;/code&gt;. Returns the write threshold for transaction log dumps as the number of writes to the transaction log.</source>
          <target state="translated">&lt;code&gt;dump_log_write_threshold&lt;/code&gt; . Возвращает порог записи для дампов журнала транзакций как количество записей в журнал транзакций.</target>
        </trans-unit>
        <trans-unit id="8efd7acd752040ce0610dba0bc21d842b2acc5b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;duplicate_bag&lt;/code&gt;. A table of this type has zero or more possibly matching objects with a given key.</source>
          <target state="translated">&lt;code&gt;duplicate_bag&lt;/code&gt; . В таблице этого типа есть ноль или более возможных совпадающих объектов с данным ключом.</target>
        </trans-unit>
        <trans-unit id="509e99235626804ee03942d4e4dd128dc2a449a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;e2big&lt;/code&gt; - Too long argument list</source>
          <target state="translated">&lt;code&gt;e2big&lt;/code&gt; - слишком длинный список аргументов</target>
        </trans-unit>
        <trans-unit id="f4aa1de11e8b801606f716b414193a95f9a37f1d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;e&lt;/code&gt; means that the API function returns an error whenever a wrongly encoded filename (or directory name) is encountered.</source>
          <target state="translated">&lt;code&gt;e&lt;/code&gt; означает, что функция API возвращает ошибку всякий раз, когда встречается неправильно закодированное имя файла (или имя каталога).</target>
        </trans-unit>
        <trans-unit id="55039e91caf7b40fa7a456c35f26b3365687917a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eacces&lt;/code&gt; - Permission denied</source>
          <target state="translated">&lt;code&gt;eacces&lt;/code&gt; - В доступе отказано</target>
        </trans-unit>
        <trans-unit id="3e6bd5eb4b99ab85b151e2a5a7e15c6634cd9406" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eaddrinuse&lt;/code&gt; - Address already in use</source>
          <target state="translated">&lt;code&gt;eaddrinuse&lt;/code&gt; - Адрес уже используется</target>
        </trans-unit>
        <trans-unit id="6892434fcb77e07ac4e5efceb1883f60123c5823" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eaddrnotavail&lt;/code&gt; - Cannot assign requested address</source>
          <target state="translated">&lt;code&gt;eaddrnotavail&lt;/code&gt; - Невозможно назначить запрошенный адрес</target>
        </trans-unit>
        <trans-unit id="e6a773b56de31ecc678e62af9fd28a27b8596efd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eadv&lt;/code&gt; - Advertise error</source>
          <target state="translated">&lt;code&gt;eadv&lt;/code&gt; - ошибка объявления</target>
        </trans-unit>
        <trans-unit id="2a4fb7993ee899f4b8be63772b158c656628ee70" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eafnosupport&lt;/code&gt; - Address family not supported by protocol family</source>
          <target state="translated">&lt;code&gt;eafnosupport&lt;/code&gt; - Семейство адресов не поддерживается семейством протоколов</target>
        </trans-unit>
        <trans-unit id="d3dbabbe2c23aeadb69a13791d0d4b64efcc1a95" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eagain&lt;/code&gt; - Resource temporarily unavailable</source>
          <target state="translated">&lt;code&gt;eagain&lt;/code&gt; - Ресурс временно недоступен</target>
        </trans-unit>
        <trans-unit id="2b77a28f808897941f7957faf3870802a8b1b4d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ealign&lt;/code&gt; - EALIGN</source>
          <target state="translated">&lt;code&gt;ealign&lt;/code&gt; - EALIGN</target>
        </trans-unit>
        <trans-unit id="73fe5ba1c39c10b02ecef45d731f5cc948ad1ec9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ealready&lt;/code&gt; - Operation already in progress</source>
          <target state="translated">&lt;code&gt;ealready&lt;/code&gt; - операция уже выполняется</target>
        </trans-unit>
        <trans-unit id="fa9f8ee2675777b13c8dd3149c36f018ef9d52b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ebade&lt;/code&gt; - Bad exchange descriptor</source>
          <target state="translated">&lt;code&gt;ebade&lt;/code&gt; - Неверный дескриптор обмена</target>
        </trans-unit>
        <trans-unit id="345608161dc45c2d891a9f54a66016b63ff612e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ebadf&lt;/code&gt; - Bad file number</source>
          <target state="translated">&lt;code&gt;ebadf&lt;/code&gt; - Неверный номер файла</target>
        </trans-unit>
        <trans-unit id="521c40efbf72458304815b505d5ba642ba7e891b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ebadfd&lt;/code&gt; - File descriptor in bad state</source>
          <target state="translated">&lt;code&gt;ebadfd&lt;/code&gt; - дескриптор файла в плохом состоянии</target>
        </trans-unit>
        <trans-unit id="5068b7a48dbca1388c29202a255de4ca6a39c5f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ebadmsg&lt;/code&gt; - Not a data message</source>
          <target state="translated">&lt;code&gt;ebadmsg&lt;/code&gt; - не сообщение с данными</target>
        </trans-unit>
        <trans-unit id="5e392c0f388fdfe7a467c0c9dd6424d6c866be27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ebadr&lt;/code&gt; - Bad request descriptor</source>
          <target state="translated">&lt;code&gt;ebadr&lt;/code&gt; - неверный дескриптор запроса</target>
        </trans-unit>
        <trans-unit id="d2d55204466ecfc02bb0f07f33c4374f20ddd7f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ebadrpc&lt;/code&gt; - Bad RPC structure</source>
          <target state="translated">&lt;code&gt;ebadrpc&lt;/code&gt; - Плохая структура RPC</target>
        </trans-unit>
        <trans-unit id="bd4bbeab4c0e94ea1d9093a6f486e8a4d099de5a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ebadrqc&lt;/code&gt; - Bad request code</source>
          <target state="translated">&lt;code&gt;ebadrqc&lt;/code&gt; - неверный код запроса</target>
        </trans-unit>
        <trans-unit id="e909c26b6f3cab35940f74e951dbb315e35ad206" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ebadslt&lt;/code&gt; - Invalid slot</source>
          <target state="translated">&lt;code&gt;ebadslt&lt;/code&gt; - Неверный слот</target>
        </trans-unit>
        <trans-unit id="3adf2baab88df72fcbac594781c1731bb7d238fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ebfont&lt;/code&gt; - Bad font file format</source>
          <target state="translated">&lt;code&gt;ebfont&lt;/code&gt; - неверный формат файла шрифта</target>
        </trans-unit>
        <trans-unit id="b2fa84d5408c4cb2ac9e31aa0044d4ee1ff1e9d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ebin&lt;/code&gt; - Required. Contains the Erlang object code, the &lt;code&gt;beam&lt;/code&gt; files. The &lt;code&gt;.app&lt;/code&gt; file must also be placed here.</source>
          <target state="translated">&lt;code&gt;ebin&lt;/code&gt; - обязательно. Содержит объектный код Erlang, файлы &lt;code&gt;beam&lt;/code&gt; . &lt;code&gt;.app&lt;/code&gt; файл также должен быть размещен здесь.</target>
        </trans-unit>
        <trans-unit id="4fa121fdbbaf2c38de45f0099796666e958a373c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ebusy&lt;/code&gt; - File busy</source>
          <target state="translated">&lt;code&gt;ebusy&lt;/code&gt; - файл занят</target>
        </trans-unit>
        <trans-unit id="8d187bbf6c20594ac206cda3e5be0ba56355a74e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ec&lt;/code&gt; is a structure containing information about the C-node. It is used in other &lt;code&gt;ei&lt;/code&gt; functions for connecting and receiving data.</source>
          <target state="translated">&lt;code&gt;ec&lt;/code&gt; - это структура, содержащая информацию о C-узле. Он используется в других функциях &lt;code&gt;ei&lt;/code&gt; для подключения и приема данных.</target>
        </trans-unit>
        <trans-unit id="6340a11a3bc8bd9ce89fd41568927cda040c6ca0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ec&lt;/code&gt; is the C-node structure previously initiated by a call to &lt;code&gt;ei_connect_init()&lt;/code&gt; or &lt;code&gt;ei_connect_xinit()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ec&lt;/code&gt; - это структура C-узла, ранее инициированная вызовом &lt;code&gt;ei_connect_init()&lt;/code&gt; или &lt;code&gt;ei_connect_xinit()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="afdad500375ddaef47fb87c7209e14cdecbf5534" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ec&lt;/code&gt; is the C-node structure.</source>
          <target state="translated">&lt;code&gt;ec&lt;/code&gt; - это структура C-узла.</target>
        </trans-unit>
        <trans-unit id="e3416d6f2e71e8704055690440931e55bd73f834" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ec&lt;/code&gt; is the node structure of the node to unregister.</source>
          <target state="translated">&lt;code&gt;ec&lt;/code&gt; - это структура узла, регистрацию которого нужно отменить.</target>
        </trans-unit>
        <trans-unit id="9198cdf1d84cf072370c01ff67cd3c441fafd696" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;echild&lt;/code&gt; - No children</source>
          <target state="translated">&lt;code&gt;echild&lt;/code&gt; - Нет детей</target>
        </trans-unit>
        <trans-unit id="d8c274cda0e7265a697f0208a5d2f6b2ea43125c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;echrng&lt;/code&gt; - Channel number out of range</source>
          <target state="translated">&lt;code&gt;echrng&lt;/code&gt; - Номер канала вне допустимого диапазона</target>
        </trans-unit>
        <trans-unit id="f86009a519d34374f034ee01de66ece004213c92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ecomm&lt;/code&gt; - Communication error on send</source>
          <target state="translated">&lt;code&gt;ecomm&lt;/code&gt; - Ошибка связи при отправке</target>
        </trans-unit>
        <trans-unit id="ad02f03d6a203fffc5404da7433b3dce465e04ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;econnaborted&lt;/code&gt; - Software caused connection abort</source>
          <target state="translated">&lt;code&gt;econnaborted&lt;/code&gt; - Программное обеспечение вызвало прерывание соединения</target>
        </trans-unit>
        <trans-unit id="cd5292bfcde1c23a92c0b953fb2f9864055919e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;econnrefused&lt;/code&gt; - Connection refused</source>
          <target state="translated">&lt;code&gt;econnrefused&lt;/code&gt; - в соединении отказано</target>
        </trans-unit>
        <trans-unit id="9e02a71ef8223a81da0683e22f774c0548e5e3f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;econnreset&lt;/code&gt; - Connection reset by peer</source>
          <target state="translated">&lt;code&gt;econnreset&lt;/code&gt; - сброс соединения одноранговым узлом</target>
        </trans-unit>
        <trans-unit id="64225ea069eca2fe11239f4dd101bbf3a344b646" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;edeadlk&lt;/code&gt; - Resource deadlock avoided</source>
          <target state="translated">&lt;code&gt;edeadlk&lt;/code&gt; - предотвращение блокировки ресурсов</target>
        </trans-unit>
        <trans-unit id="095df8379d52a8da678df15db5e4fcfb4ed3f32e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;edeadlock&lt;/code&gt; - Resource deadlock avoided</source>
          <target state="translated">&lt;code&gt;edeadlock&lt;/code&gt; - предотвращение блокировки ресурсов</target>
        </trans-unit>
        <trans-unit id="ab55eeadd852f02dc987140e5e80954ca723033a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;edestaddrreq&lt;/code&gt; - Destination address required</source>
          <target state="translated">&lt;code&gt;edestaddrreq&lt;/code&gt; - Требуется адрес назначения</target>
        </trans-unit>
        <trans-unit id="32714baed792ef1ae2ba1ddeba140d9e1d5c75ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;edirty&lt;/code&gt; - Mounting a dirty fs without force</source>
          <target state="translated">&lt;code&gt;edirty&lt;/code&gt; - монтирование грязной фс без применения силы</target>
        </trans-unit>
        <trans-unit id="c96fb6b356634fa47ecc45e13e4767f1a487be6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;edom&lt;/code&gt; - Math argument out of range</source>
          <target state="translated">&lt;code&gt;edom&lt;/code&gt; - Математический аргумент вне допустимого диапазона</target>
        </trans-unit>
        <trans-unit id="c2b16bb6289f694cad74cd8a713645eaee77ff9d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;edotdot&lt;/code&gt; - Cross mount point</source>
          <target state="translated">&lt;code&gt;edotdot&lt;/code&gt; - Крест точка монтирования</target>
        </trans-unit>
        <trans-unit id="bf780eaa3cf1f92292584c219151a16c7c97f893" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;edquot&lt;/code&gt; - Disk quota exceeded</source>
          <target state="translated">&lt;code&gt;edquot&lt;/code&gt; - превышена дисковая квота</target>
        </trans-unit>
        <trans-unit id="8101e6d13cf9ad1420ddb02686af8efbc7ee96ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eduppkg&lt;/code&gt; - Duplicate package name</source>
          <target state="translated">&lt;code&gt;eduppkg&lt;/code&gt; - Повторяющееся имя пакета</target>
        </trans-unit>
        <trans-unit id="253045380edccb1e96e308e563f065d78d92da16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eexist&lt;/code&gt; - File already exists</source>
          <target state="translated">&lt;code&gt;eexist&lt;/code&gt; - файл уже существует</target>
        </trans-unit>
        <trans-unit id="7861bdf01f2da8926a782fa7b91b00ece5ce08d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;efault&lt;/code&gt; - Bad address in system call argument</source>
          <target state="translated">&lt;code&gt;efault&lt;/code&gt; - неверный адрес в аргументе системного вызова</target>
        </trans-unit>
        <trans-unit id="16c138959d338b1ce08e97d4d9602167e5b1e243" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;efbig&lt;/code&gt; - File too large</source>
          <target state="translated">&lt;code&gt;efbig&lt;/code&gt; - файл слишком большой</target>
        </trans-unit>
        <trans-unit id="31cc1351f1ed0ac67d43d86b384cf0bb5de1249f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;efile&lt;/code&gt;, which means use the local file system, this is the default.</source>
          <target state="translated">&lt;code&gt;efile&lt;/code&gt; , что означает использование локальной файловой системы, это значение по умолчанию.</target>
        </trans-unit>
        <trans-unit id="ae15036943ab0422753787cf1a0571db4d5b858c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ehostdown&lt;/code&gt; - Host is down</source>
          <target state="translated">&lt;code&gt;ehostdown&lt;/code&gt; - Хост не работает</target>
        </trans-unit>
        <trans-unit id="41a1e20311ed6f9be07007469e8c77d42a57d62e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ehostunreach&lt;/code&gt; - Host is unreachable</source>
          <target state="translated">&lt;code&gt;ehostunreach&lt;/code&gt; - Хост недоступен</target>
        </trans-unit>
        <trans-unit id="4057bd8b1f1bcdec284da63d635ca2a15dc8dc16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ei&lt;/code&gt; allows you to convert atoms, lists, numbers, and binaries to and from the binary format. This is useful when writing port programs and drivers. &lt;code&gt;ei&lt;/code&gt; uses a given buffer, no dynamic memory (except &lt;code&gt;ei_decode_fun()&lt;/code&gt;) and is often quite fast.</source>
          <target state="translated">&lt;code&gt;ei&lt;/code&gt; позволяет преобразовывать атомы, списки, числа и двоичные файлы в двоичный формат и обратно. Это полезно при написании программ порта и драйверов. &lt;code&gt;ei&lt;/code&gt; использует заданный буфер, не использует динамическую память (за исключением &lt;code&gt;ei_decode_fun()&lt;/code&gt; ) и часто работает довольно быстро.</target>
        </trans-unit>
        <trans-unit id="4f1822707a34fb31d15140ca9063ce11388efb7d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ei&lt;/code&gt; also handles C-nodes, C-programs that talks Erlang distribution with Erlang nodes (or other C-nodes) using the Erlang distribution format. The difference between &lt;code&gt;ei&lt;/code&gt; and &lt;code&gt;erl_interface&lt;/code&gt; is that &lt;code&gt;ei&lt;/code&gt; uses the binary format directly when sending and receiving terms. It is also thread safe, and using threads, one process can handle multiple C-nodes. The &lt;code&gt;erl_interface&lt;/code&gt; library is built on top of &lt;code&gt;ei&lt;/code&gt;, but of legacy reasons, it does not allow for multiple C-nodes. In general, &lt;code&gt;ei&lt;/code&gt; is the preferred way of doing C-nodes.</source>
          <target state="translated">&lt;code&gt;ei&lt;/code&gt; также обрабатывает C-узлы, C-программы, которые говорят о распределении Erlang с узлами Erlang (или другими C-узлами), используя формат распределения Erlang. Разница между &lt;code&gt;ei&lt;/code&gt; и &lt;code&gt;erl_interface&lt;/code&gt; заключается в том, что &lt;code&gt;ei&lt;/code&gt; использует двоичный формат напрямую при отправке и получении терминов. Он также является потокобезопасным, и, используя потоки, один процесс может обрабатывать несколько C-узлов. Библиотека &lt;code&gt;erl_interface&lt;/code&gt; построена на основе &lt;code&gt;ei&lt;/code&gt; , но по устаревшим причинам она не позволяет использовать несколько C-узлов. В общем, &lt;code&gt;ei&lt;/code&gt; - предпочтительный способ создания C-узлов.</target>
        </trans-unit>
        <trans-unit id="f1c93b6c19f85a0fc04f92de1e46e22e3da2959e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ei_rpc()&lt;/code&gt; returns the number of bytes in the result on success and &lt;code&gt;-1&lt;/code&gt; on failure. &lt;code&gt;ei_rpc_from()&lt;/code&gt; returns the number of bytes, otherwise one of &lt;code&gt;ERL_TICK&lt;/code&gt;, &lt;code&gt;ERL_TIMEOUT&lt;/code&gt;, and &lt;code&gt;ERL_ERROR&lt;/code&gt;. When failing, all three functions set &lt;code&gt;erl_errno&lt;/code&gt; to one of the following:</source>
          <target state="translated">&lt;code&gt;ei_rpc()&lt;/code&gt; возвращает количество байтов в результате в случае успеха и &lt;code&gt;-1&lt;/code&gt; в случае ошибки. &lt;code&gt;ei_rpc_from()&lt;/code&gt; возвращает количество байтов, в противном случае один из &lt;code&gt;ERL_TICK&lt;/code&gt; , &lt;code&gt;ERL_TIMEOUT&lt;/code&gt; и &lt;code&gt;ERL_ERROR&lt;/code&gt; . В случае сбоя все три функции устанавливают для &lt;code&gt;erl_errno&lt;/code&gt; одно из следующих значений:</target>
        </trans-unit>
        <trans-unit id="d9e4fb15102075457afaf44985139aa7327294ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ei_x_format_wo_ver()&lt;/code&gt; formats into a buffer, without the initial version byte.</source>
          <target state="translated">&lt;code&gt;ei_x_format_wo_ver()&lt;/code&gt; форматирует в буфер без байта начальной версии.</target>
        </trans-unit>
        <trans-unit id="e61e585ef7827c4765a03c5e289877218bfe74d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ei_xconnect()&lt;/code&gt; requires the IP address of the remote host and the alive name of the remote node to be specified. &lt;code&gt;ei_connect()&lt;/code&gt; provides an alternative interface and determines the information from the node name provided.</source>
          <target state="translated">&lt;code&gt;ei_xconnect()&lt;/code&gt; требует указания IP-адреса удаленного хоста и действующего имени удаленного узла. &lt;code&gt;ei_connect()&lt;/code&gt; предоставляет альтернативный интерфейс и определяет информацию из предоставленного имени узла.</target>
        </trans-unit>
        <trans-unit id="5fc4aad0082154201868dc5e78b89ad56b713f6f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eidrm&lt;/code&gt; - Identifier removed</source>
          <target state="translated">&lt;code&gt;eidrm&lt;/code&gt; - Идентификатор удален</target>
        </trans-unit>
        <trans-unit id="4c51e97e2d1b60cae1995ba4c14365cf239a4da3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;einit&lt;/code&gt; - Initialization error</source>
          <target state="translated">&lt;code&gt;einit&lt;/code&gt; - Ошибка инициализации</target>
        </trans-unit>
        <trans-unit id="c83b6f5034fbf175dad5e5be227bf0995311d4ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;einprogress&lt;/code&gt; - Operation now in progress</source>
          <target state="translated">&lt;code&gt;einprogress&lt;/code&gt; - операция сейчас в процессе</target>
        </trans-unit>
        <trans-unit id="60eb0596371343d8ec3552422eb1e34f1b36f5a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eintr&lt;/code&gt; - Interrupted system call</source>
          <target state="translated">&lt;code&gt;eintr&lt;/code&gt; - Прерванный системный вызов</target>
        </trans-unit>
        <trans-unit id="089a96dc9bcb8bd0620721e7fb8a694b138afc61" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;einval&lt;/code&gt; - Invalid argument</source>
          <target state="translated">&lt;code&gt;einval&lt;/code&gt; - Неверный аргумент</target>
        </trans-unit>
        <trans-unit id="44bfb9ae0f478b8485ecf3c9086e42e717fdc5a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eio&lt;/code&gt; - I/O error</source>
          <target state="translated">&lt;code&gt;eio&lt;/code&gt; - ошибка ввода / вывода</target>
        </trans-unit>
        <trans-unit id="69f2935e8dc5ed0862669551b2a84e850d91a37e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eisconn&lt;/code&gt; - Socket is already connected</source>
          <target state="translated">&lt;code&gt;eisconn&lt;/code&gt; - сокет уже подключен</target>
        </trans-unit>
        <trans-unit id="ec13cd39a788418050c228cc6c985bb0287cbe7f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eisdir&lt;/code&gt; - Illegal operation on a directory</source>
          <target state="translated">&lt;code&gt;eisdir&lt;/code&gt; - Незаконная операция с каталогом</target>
        </trans-unit>
        <trans-unit id="85e5e80b311605ed81269e38433a78231c243cda" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eisnam&lt;/code&gt; - Is a named file</source>
          <target state="translated">&lt;code&gt;eisnam&lt;/code&gt; - это именованный файл</target>
        </trans-unit>
        <trans-unit id="0e8947aa5bf1f600183d01c17b799dedea023825" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;el2hlt&lt;/code&gt; - Level 2 halted</source>
          <target state="translated">&lt;code&gt;el2hlt&lt;/code&gt; - Уровень 2 остановлен</target>
        </trans-unit>
        <trans-unit id="f4bb64c4510653aeb5bcf4358b3c523b6fb03c45" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;el2nsync&lt;/code&gt; - Level 2 not synchronized</source>
          <target state="translated">&lt;code&gt;el2nsync&lt;/code&gt; - Уровень 2 не синхронизирован</target>
        </trans-unit>
        <trans-unit id="b379560048c7b16c077af37a1f69690c4f351025" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;el3hlt&lt;/code&gt; - Level 3 halted</source>
          <target state="translated">&lt;code&gt;el3hlt&lt;/code&gt; - Уровень 3 остановлен</target>
        </trans-unit>
        <trans-unit id="7ab7bb692a6b3432357ba5a73cd34a83e0c73f16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;el3rst&lt;/code&gt; - Level 3 reset</source>
          <target state="translated">&lt;code&gt;el3rst&lt;/code&gt; - сброс уровня 3</target>
        </trans-unit>
        <trans-unit id="089ddb4594d97b9bd5c862b25c1247687f01825e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;elbin&lt;/code&gt; - ELBIN</source>
          <target state="translated">&lt;code&gt;elbin&lt;/code&gt; - ЭЛЬБИН</target>
        </trans-unit>
        <trans-unit id="7893f5bf1e4c46bc941bcaa83534b3929acfdcbf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;elibacc&lt;/code&gt; - Cannot access a needed shared library</source>
          <target state="translated">&lt;code&gt;elibacc&lt;/code&gt; - Нет доступа к необходимой разделяемой библиотеке</target>
        </trans-unit>
        <trans-unit id="357a0d86ed459bc468c8d677e6ff04d9d2040835" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;elibbad&lt;/code&gt; - Accessing a corrupted shared library</source>
          <target state="translated">&lt;code&gt;elibbad&lt;/code&gt; - Доступ к поврежденной разделяемой библиотеке</target>
        </trans-unit>
        <trans-unit id="480018e122be7dff83c1c18a0429df262ad75fc3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;elibexec&lt;/code&gt; - Cannot exec a shared library directly</source>
          <target state="translated">&lt;code&gt;elibexec&lt;/code&gt; - Невозможно запустить общую библиотеку напрямую</target>
        </trans-unit>
        <trans-unit id="3e3ec25d0793f3f2912fb4fd28a414479e7dd127" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;elibmax&lt;/code&gt; - Attempting to link in more shared libraries than system limit</source>
          <target state="translated">&lt;code&gt;elibmax&lt;/code&gt; - Попытка линковать больше разделяемых библиотек, чем системный предел</target>
        </trans-unit>
        <trans-unit id="3105e6fc8eecafc0b2847ad8cc45d60256cc4d81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;elibscn&lt;/code&gt; - &lt;code&gt;.lib&lt;/code&gt; section in &lt;code&gt;a.out&lt;/code&gt; corrupted</source>
          <target state="translated">&lt;code&gt;elibscn&lt;/code&gt; - &lt;code&gt;.lib&lt;/code&gt; раздел в &lt;code&gt;a.out&lt;/code&gt; поврежден</target>
        </trans-unit>
        <trans-unit id="3f0b20734661bcc8b565e3f90edaef1087de0de3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;elnrng&lt;/code&gt; - Link number out of range</source>
          <target state="translated">&lt;code&gt;elnrng&lt;/code&gt; - Номер ссылки вне допустимого диапазона</target>
        </trans-unit>
        <trans-unit id="9fb670ce931ef5c988ddc7fd596bb9cd1d21c77f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eloop&lt;/code&gt; - Too many levels of symbolic links</source>
          <target state="translated">&lt;code&gt;eloop&lt;/code&gt; - Слишком много уровней символических ссылок</target>
        </trans-unit>
        <trans-unit id="2fc1dce9eee780c04d77b3e8a50f5a25e8d2ff32" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;emfile&lt;/code&gt; - Too many open files</source>
          <target state="translated">&lt;code&gt;emfile&lt;/code&gt; - слишком много открытых файлов</target>
        </trans-unit>
        <trans-unit id="2a3b681741f87f0b7429e3b04d706f100ccf509d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;emlink&lt;/code&gt; - Too many links</source>
          <target state="translated">&lt;code&gt;emlink&lt;/code&gt; - слишком много ссылок</target>
        </trans-unit>
        <trans-unit id="8a1d37f90fe18af44c2a3274e64ac741146447d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;employees&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;employees&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="130bca2165b56dfb95f44ac6bc899a93d144d99e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;emsg-&amp;gt;to&lt;/code&gt; and &lt;code&gt;emsg-&amp;gt;from&lt;/code&gt; contain the pids of the sender and recipient of the link or unlink. &lt;code&gt;emsg-&amp;gt;msg&lt;/code&gt; is not used.</source>
          <target state="translated">&lt;code&gt;emsg-&amp;gt;to&lt;/code&gt; и &lt;code&gt;emsg-&amp;gt;from&lt;/code&gt; содержат идентификаторы отправителя и получателя ссылки или отмены ссылки. &lt;code&gt;emsg-&amp;gt;msg&lt;/code&gt; не используется.</target>
        </trans-unit>
        <trans-unit id="c4bbc97a72df14a53a10a400594a735a501ac68f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;emsg&lt;/code&gt; is a message containing the result of the function call.</source>
          <target state="translated">&lt;code&gt;emsg&lt;/code&gt; - это сообщение, содержащее результат вызова функции.</target>
        </trans-unit>
        <trans-unit id="03a7f883653ee2b993695a1420dcbbaf32bda40b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;emsgsize&lt;/code&gt; - Message too long</source>
          <target state="translated">&lt;code&gt;emsgsize&lt;/code&gt; - Сообщение слишком длинное</target>
        </trans-unit>
        <trans-unit id="102cae3d1e294580076f0c6f8592c5ebc0801b3c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;emultihop&lt;/code&gt; - Multihop attempted</source>
          <target state="translated">&lt;code&gt;emultihop&lt;/code&gt; - попытка множественного перехода</target>
        </trans-unit>
        <trans-unit id="2556046b270169e44d74ac1fb288534230cb139a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enametoolong&lt;/code&gt; - Filename too long</source>
          <target state="translated">&lt;code&gt;enametoolong&lt;/code&gt; - Слишком длинное имя файла</target>
        </trans-unit>
        <trans-unit id="bcbd188eaa9772dd6612fedc594abf7a0a61490e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enavail&lt;/code&gt; - Unavailable</source>
          <target state="translated">&lt;code&gt;enavail&lt;/code&gt; - Недоступно</target>
        </trans-unit>
        <trans-unit id="6bbf5c89562882c073e0b94fa2ca48188ccc5cf9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;encoding&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt; if translation modifier &lt;code&gt;t&lt;/code&gt; is present.</source>
          <target state="translated">&lt;code&gt;encoding&lt;/code&gt; имеет значение &lt;code&gt;true&lt;/code&gt; , если присутствует модификатор перевода &lt;code&gt;t&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="77ad1d68e180848defa5a42f1cfd114110c7021e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;endOfTable&lt;/code&gt; if there are no accessible elements after this one.</source>
          <target state="translated">&lt;code&gt;endOfTable&lt;/code&gt; , если после этого нет доступных элементов.</target>
        </trans-unit>
        <trans-unit id="8ebcf0b3d7ac6630fc3b9e901b85d8574f089344" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;end_of_input&lt;/code&gt; or &lt;code&gt;{end_of_input, Value}}&lt;/code&gt; when there is no more input (&lt;code&gt;Value&lt;/code&gt; is explained below).</source>
          <target state="translated">&lt;code&gt;end_of_input&lt;/code&gt; или &lt;code&gt;{end_of_input, Value}}&lt;/code&gt; когда больше нет ввода ( &lt;code&gt;Value&lt;/code&gt; поясняется ниже).</target>
        </trans-unit>
        <trans-unit id="24c71d34c36f947bf9e07bafbc7fd0128dc8ea25" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;end_of_trace&lt;/code&gt; received once when all trace messages are processed</source>
          <target state="translated">&lt;code&gt;end_of_trace&lt;/code&gt; получен один раз, когда все сообщения трассировки обработаны</target>
        </trans-unit>
        <trans-unit id="2054f317a98e73dae658de2ba34699735cf4aae8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;end_per_suite&lt;/code&gt; is called as the final stage of the test suite execution (after the last test case has finished). The function is meant to be used for cleaning up after &lt;code&gt;init_per_suite&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;end_per_suite&lt;/code&gt; вызывается как заключительный этап выполнения набора тестов (после завершения последнего тестового примера). Функция предназначена для очистки после &lt;code&gt;init_per_suite&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="95b3a9204cfbdde6851a387b796c8b1372e2cf81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;end_per_testcase/2&lt;/code&gt; is called after each test case has finished, enabling cleanup after &lt;code&gt;init_per_testcase&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;end_per_testcase/2&lt;/code&gt; вызывается после завершения каждого тестового примера, обеспечивая очистку после &lt;code&gt;init_per_testcase&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="71141edd68217ecbf7ec91855ad9f0f114eec22c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;end_per_testcase&lt;/code&gt; can check if the test case was successful. (which in turn can determine how cleanup is to be performed). This is done by reading the value tagged with &lt;code&gt;tc_status&lt;/code&gt; from &lt;code&gt;Config&lt;/code&gt;. The value is one of the following:</source>
          <target state="translated">&lt;code&gt;end_per_testcase&lt;/code&gt; может проверить, был ли тестовый пример успешным. (что, в свою очередь, может определить, как должна выполняться очистка). Это делается путем чтения значения, помеченного &lt;code&gt;tc_status&lt;/code&gt; , из &lt;code&gt;Config&lt;/code&gt; . Значение может быть одним из следующих:</target>
        </trans-unit>
        <trans-unit id="48bd9d18a9587e2a04f0df5a9be5f8de167faab0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enet&lt;/code&gt; - ENET</source>
          <target state="translated">&lt;code&gt;enet&lt;/code&gt; - ENET</target>
        </trans-unit>
        <trans-unit id="d6f6cddb018e4c86ad70e55e121582d34b1ea0d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enetdown&lt;/code&gt; - Network is down</source>
          <target state="translated">&lt;code&gt;enetdown&lt;/code&gt; - Сеть не работает</target>
        </trans-unit>
        <trans-unit id="3190f061d30e04fb6a9271caec20dcc8cae8b1a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enetreset&lt;/code&gt; - Network dropped connection on reset</source>
          <target state="translated">&lt;code&gt;enetreset&lt;/code&gt; - Сеть разорвала соединение при сбросе</target>
        </trans-unit>
        <trans-unit id="1a62bf7fb5581eaca549145ce947c94cfc5f3959" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enetunreach&lt;/code&gt; - Network is unreachable</source>
          <target state="translated">&lt;code&gt;enetunreach&lt;/code&gt; - Сеть недоступна</target>
        </trans-unit>
        <trans-unit id="4f8785aeddbafa426e841211571332ba5939a806" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enfile&lt;/code&gt; - File table overflow</source>
          <target state="translated">&lt;code&gt;enfile&lt;/code&gt; - Переполнение таблицы файлов</target>
        </trans-unit>
        <trans-unit id="54a8b1a4b729abfb9356f547e7fdeff3d76af8b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;engine_id&lt;/code&gt; - The &lt;code&gt;SnmpEngineID&lt;/code&gt; as defined in SNMP-FRAMEWORK-MIB. &lt;strong&gt;Mandatory&lt;/strong&gt;.</source>
          <target state="translated">&lt;code&gt;engine_id&lt;/code&gt; - &lt;code&gt;SnmpEngineID&lt;/code&gt; , как определено в SNMP-FRAMEWORK-MIB. &lt;strong&gt;Обязательно&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="75550d802589c6c6b20bac1563529e207c77a98e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enoano&lt;/code&gt; - Anode table overflow</source>
          <target state="translated">&lt;code&gt;enoano&lt;/code&gt; - Переполнение анодной таблицы</target>
        </trans-unit>
        <trans-unit id="8b5d30d3536f96de39693eab21b683c9e068bb33" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enobufs&lt;/code&gt; - No buffer space available</source>
          <target state="translated">&lt;code&gt;enobufs&lt;/code&gt; - нет доступного буферного пространства</target>
        </trans-unit>
        <trans-unit id="9ade4c792c85383a29ecbaecd7d25e02675bd122" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enocsi&lt;/code&gt; - No CSI structure available</source>
          <target state="translated">&lt;code&gt;enocsi&lt;/code&gt; - Нет доступной структуры CSI</target>
        </trans-unit>
        <trans-unit id="b51598a142f5adfd48865e15d2853468237f6904" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enodata&lt;/code&gt; - No data available</source>
          <target state="translated">&lt;code&gt;enodata&lt;/code&gt; - Нет данных</target>
        </trans-unit>
        <trans-unit id="639726d99f469fa0e2c3a27f02d5fe5c112c4bbe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enodev&lt;/code&gt; - No such device</source>
          <target state="translated">&lt;code&gt;enodev&lt;/code&gt; - такого устройства нет</target>
        </trans-unit>
        <trans-unit id="207e9dbcef7e01416cb292284f380209b08848a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enoent&lt;/code&gt; - No such file or directory</source>
          <target state="translated">&lt;code&gt;enoent&lt;/code&gt; - Нет такого файла или каталога</target>
        </trans-unit>
        <trans-unit id="3cec8eb5ae7ddb7d7764f3372daa2d4639a9effb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enoexec&lt;/code&gt; - Exec format error</source>
          <target state="translated">&lt;code&gt;enoexec&lt;/code&gt; - Ошибка формата Exec</target>
        </trans-unit>
        <trans-unit id="f675251cb3c179443922755eedf43090c4515f53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enolck&lt;/code&gt; - No locks available</source>
          <target state="translated">&lt;code&gt;enolck&lt;/code&gt; - замков нет</target>
        </trans-unit>
        <trans-unit id="b27dbfa5ca362faa9bbad9c3f5a851ad95da1b11" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enolink&lt;/code&gt; - Link has been severed</source>
          <target state="translated">&lt;code&gt;enolink&lt;/code&gt; - Ссылка была разорвана</target>
        </trans-unit>
        <trans-unit id="18d5419c4c7dafc4ffba680f090c207753780a17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enomem&lt;/code&gt; - Not enough memory</source>
          <target state="translated">&lt;code&gt;enomem&lt;/code&gt; - Недостаточно памяти</target>
        </trans-unit>
        <trans-unit id="cc5bf49e1ed5cac7ae5e4342347a7f1aeb8023f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enomsg&lt;/code&gt; - No message of desired type</source>
          <target state="translated">&lt;code&gt;enomsg&lt;/code&gt; - Нет сообщения желаемого типа</target>
        </trans-unit>
        <trans-unit id="267e3cc8e7d629bfb57dabde53f4cd944f66da79" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enonet&lt;/code&gt; - Machine is not on the network</source>
          <target state="translated">&lt;code&gt;enonet&lt;/code&gt; - Машина не в сети</target>
        </trans-unit>
        <trans-unit id="c0d0064742538f0cc7b2aafaa47cd3b373913a8c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enopkg&lt;/code&gt; - Package not installed</source>
          <target state="translated">&lt;code&gt;enopkg&lt;/code&gt; - Пакет не установлен</target>
        </trans-unit>
        <trans-unit id="dff3e3a7e09c55f7c822e50d7aeeef880bd851e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enoprotoopt&lt;/code&gt; - Bad protocol option</source>
          <target state="translated">&lt;code&gt;enoprotoopt&lt;/code&gt; - неверный вариант протокола</target>
        </trans-unit>
        <trans-unit id="5275d397f6cd736b2edca9458f06aa57eb1cbd25" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enospc&lt;/code&gt; - No space left on device</source>
          <target state="translated">&lt;code&gt;enospc&lt;/code&gt; - На устройстве не осталось места</target>
        </trans-unit>
        <trans-unit id="192bdec7e1688f7d63574f033a7eeffedbe06a6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enosr&lt;/code&gt; - Out of stream resources or not a stream device</source>
          <target state="translated">&lt;code&gt;enosr&lt;/code&gt; - Нет потоковых ресурсов или нет потокового устройства</target>
        </trans-unit>
        <trans-unit id="238a62098e5522c7e83140c8c5f6f2fdb2a04538" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enosym&lt;/code&gt; - Unresolved symbol name</source>
          <target state="translated">&lt;code&gt;enosym&lt;/code&gt; - Неразрешенное имя символа</target>
        </trans-unit>
        <trans-unit id="c8da2ae1a896bcd38d3b6a9dcf887cdc34b28716" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enosys&lt;/code&gt; - Function not implemented</source>
          <target state="translated">&lt;code&gt;enosys&lt;/code&gt; - Функция не реализована</target>
        </trans-unit>
        <trans-unit id="dec216448c3efc0faeb0edbea9314a0181d9bf35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enotblk&lt;/code&gt; - Block device required</source>
          <target state="translated">&lt;code&gt;enotblk&lt;/code&gt; - Требуется блочное устройство</target>
        </trans-unit>
        <trans-unit id="bbbcb6b3a0232b5c17cddb598ce5486d8330a32a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enotconn&lt;/code&gt; - Socket is not connected</source>
          <target state="translated">&lt;code&gt;enotconn&lt;/code&gt; - Сокет не подключен</target>
        </trans-unit>
        <trans-unit id="3e856fac0948ae324d17302e6dcd8b7afdda165a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enotdir&lt;/code&gt; - Not a directory</source>
          <target state="translated">&lt;code&gt;enotdir&lt;/code&gt; - Не каталог</target>
        </trans-unit>
        <trans-unit id="aec13d9ecfaec761c963eb0401f932c6b4b9f938" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enotempty&lt;/code&gt; - Directory not empty</source>
          <target state="translated">&lt;code&gt;enotempty&lt;/code&gt; - Каталог не пустой</target>
        </trans-unit>
        <trans-unit id="36208f5ca80acaab61024d264f8e262047f77925" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enotnam&lt;/code&gt; - Not a named file</source>
          <target state="translated">&lt;code&gt;enotnam&lt;/code&gt; - файл без имени</target>
        </trans-unit>
        <trans-unit id="d7bf022427ba88027346245447278833a84b30f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enotsock&lt;/code&gt; - Socket operation on non-socket</source>
          <target state="translated">&lt;code&gt;enotsock&lt;/code&gt; - Операция с сокетом без сокета</target>
        </trans-unit>
        <trans-unit id="975ae1e1fcad4609f74ccb56d18372b4b618e2be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enotsup&lt;/code&gt; - Operation not supported</source>
          <target state="translated">&lt;code&gt;enotsup&lt;/code&gt; - Операция не поддерживается</target>
        </trans-unit>
        <trans-unit id="37baef27664f2f027f8596627a18fdd91eabac75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enotty&lt;/code&gt; - Inappropriate device for &lt;code&gt;ioctl&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;enotty&lt;/code&gt; - неподходящее устройство для &lt;code&gt;ioctl&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c26af36618a187ea918910bd849a4767ee11c3ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enotuniq&lt;/code&gt; - Name not unique on network</source>
          <target state="translated">&lt;code&gt;enotuniq&lt;/code&gt; - Имя не уникально в сети</target>
        </trans-unit>
        <trans-unit id="d99513c6779f948197a541bcc8422a406bc4f431" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;entry : string&lt;/code&gt; :: Callback. Ex. &lt;code&gt;&quot;open&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;entry : string&lt;/code&gt; :: Обратный вызов. Ex. &lt;code&gt;&quot;open&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bb02e114e2c1fde43be0da07271a78e932961018" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;entry : string&lt;/code&gt; :: Code Location. Ex. &lt;code&gt;&quot;lists:sort/1&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;entry : string&lt;/code&gt; :: Местоположение кода. Ex. &lt;code&gt;&quot;lists:sort/1&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="50969a87c39c7067507ba1ec276755112123047b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;env&lt;/code&gt; is the environment to create the integer in.</source>
          <target state="translated">&lt;code&gt;env&lt;/code&gt; - это среда для создания целого числа.</target>
        </trans-unit>
        <trans-unit id="90fb6782bb3c397635cfbc2261e23050ca063522" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enxio&lt;/code&gt; - No such device or address</source>
          <target state="translated">&lt;code&gt;enxio&lt;/code&gt; - Нет такого устройства или адреса</target>
        </trans-unit>
        <trans-unit id="d2f629d33624f31488b1207001514d888e268c43" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eof&lt;/code&gt; is returned when input end is reached and no more data is available to the client process.</source>
          <target state="translated">&lt;code&gt;eof&lt;/code&gt; возвращается, когда достигается конец ввода и больше нет данных для клиентского процесса.</target>
        </trans-unit>
        <trans-unit id="e651310d843b6c7bd6e82b604450e074230f1a92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eopnotsupp&lt;/code&gt; - Operation not supported on socket</source>
          <target state="translated">&lt;code&gt;eopnotsupp&lt;/code&gt; - Операция не поддерживается на сокете</target>
        </trans-unit>
        <trans-unit id="24d7acce6b9b6b3034ac2fa3bd2e3167b56d7b30" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eperm&lt;/code&gt; - Not owner</source>
          <target state="translated">&lt;code&gt;eperm&lt;/code&gt; - Не владелец</target>
        </trans-unit>
        <trans-unit id="83fe66c0d41d687f28d271224381581a51e4f4d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;epfnosupport&lt;/code&gt; - Protocol family not supported</source>
          <target state="translated">&lt;code&gt;epfnosupport&lt;/code&gt; - Семейство протоколов не поддерживается</target>
        </trans-unit>
        <trans-unit id="a5890a451bc7bc2396126616a34b508e37acee62" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;epipe&lt;/code&gt; - Broken pipe</source>
          <target state="translated">&lt;code&gt;epipe&lt;/code&gt; - Сломанная труба</target>
        </trans-unit>
        <trans-unit id="3a3c9451329835184c27bda61d6c4f1db59493c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;epp(3)&lt;/code&gt;, &lt;code&gt;erl_id_trans(3)&lt;/code&gt;, &lt;code&gt;erl_lint(3)&lt;/code&gt;, &lt;code&gt;beam_lib(3)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;epp(3)&lt;/code&gt; , &lt;code&gt;erl_id_trans(3)&lt;/code&gt; , &lt;code&gt;erl_lint(3)&lt;/code&gt; , &lt;code&gt;beam_lib(3)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c9cc6dfb6663cdc6905981a6aad8775ee92c2f6f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;epp_dodger&lt;/code&gt; - bypasses the Erlang preprocessor.</source>
          <target state="translated">&lt;code&gt;epp_dodger&lt;/code&gt; - обходит препроцессор Erlang.</target>
        </trans-unit>
        <trans-unit id="1bce7f5c9a030269923955a2f607ccb131557d9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eproclim&lt;/code&gt; - Too many processes</source>
          <target state="translated">&lt;code&gt;eproclim&lt;/code&gt; - слишком много процессов</target>
        </trans-unit>
        <trans-unit id="ee317501a8917bf4010a5d1847674fd1b04f1d41" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eprocunavail&lt;/code&gt; - Bad procedure for program</source>
          <target state="translated">&lt;code&gt;eprocunavail&lt;/code&gt; - Плохая процедура для программы</target>
        </trans-unit>
        <trans-unit id="2a6544d4bd7e297872f3fbfd89bf149778b4a8c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eprof&lt;/code&gt; is based on the Erlang &lt;code&gt;trace_info&lt;/code&gt; BIFs. &lt;code&gt;eprof&lt;/code&gt; shows how much time has been used by each process, and in which function calls this time has been spent. Time is shown as percentage of total time and absolute time. For more information, see the &lt;code&gt;eprof&lt;/code&gt; manual page in Tools.</source>
          <target state="translated">&lt;code&gt;eprof&lt;/code&gt; основан на Erlang &lt;code&gt;trace_info&lt;/code&gt; BIF. &lt;code&gt;eprof&lt;/code&gt; показывает, сколько времени было использовано каждым процессом и на какие вызовы функций это время было потрачено. Время отображается как процент от общего времени и абсолютное время. Для получения дополнительной информации см. &lt;code&gt;eprof&lt;/code&gt; руководства eprof в разделе Инструменты.</target>
        </trans-unit>
        <trans-unit id="df8a0bfc19c4581b404979fadfe7bb7fe1af084e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eprof&lt;/code&gt; provides time information of each function used in the program. No call graph is produced, but &lt;code&gt;eprof&lt;/code&gt; has considerable less impact on the program it profiles.</source>
          <target state="translated">&lt;code&gt;eprof&lt;/code&gt; предоставляет информацию о времени для каждой функции, используемой в программе. Граф вызовов не создается, но &lt;code&gt;eprof&lt;/code&gt; оказывает значительно меньшее влияние на профилируемую программу.</target>
        </trans-unit>
        <trans-unit id="118e7ea83469a9ed5135f96574380a30caa372d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eprogmismatch&lt;/code&gt; - Wrong program version</source>
          <target state="translated">&lt;code&gt;eprogmismatch&lt;/code&gt; - Неверная версия программы</target>
        </trans-unit>
        <trans-unit id="3bc26d2260fdf4375c7fd2b218c14427464bcfb2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eprogunavail&lt;/code&gt; - RPC program unavailable</source>
          <target state="translated">&lt;code&gt;eprogunavail&lt;/code&gt; - программа RPC недоступна</target>
        </trans-unit>
        <trans-unit id="704e5e1b7cb8deb8b66028feb0898d97ca3b81df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eproto&lt;/code&gt; - Protocol error</source>
          <target state="translated">&lt;code&gt;eproto&lt;/code&gt; - Ошибка протокола</target>
        </trans-unit>
        <trans-unit id="c0020dd6a856517b832382f8abd689c0c2eeed9f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eprotonosupport&lt;/code&gt; - Protocol not supported</source>
          <target state="translated">&lt;code&gt;eprotonosupport&lt;/code&gt; - Протокол не поддерживается</target>
        </trans-unit>
        <trans-unit id="4b8b4842c1185ca09dc81075ef61632061cf04b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eprototype&lt;/code&gt; - Wrong protocol type for socket</source>
          <target state="translated">&lt;code&gt;eprototype&lt;/code&gt; - Неверный тип протокола для сокета</target>
        </trans-unit>
        <trans-unit id="46f7516e9a6f87ecce854e8fe14964d1676c262b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erange&lt;/code&gt; - Math result unrepresentable</source>
          <target state="translated">&lt;code&gt;erange&lt;/code&gt; - математический результат непредставим</target>
        </trans-unit>
        <trans-unit id="2168cb87b30ae036d5a752f6631954b5bca507db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erefused&lt;/code&gt; - EREFUSED</source>
          <target state="translated">&lt;code&gt;erefused&lt;/code&gt; - ОТКАЗАНО</target>
        </trans-unit>
        <trans-unit id="fcbd5c16cd9f879ec603082074b2199d36e01aa6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eremchg&lt;/code&gt; - Remote address changed</source>
          <target state="translated">&lt;code&gt;eremchg&lt;/code&gt; - Удаленный адрес изменен</target>
        </trans-unit>
        <trans-unit id="5c95010734339dc1d2a5d965eeb932f6d9de0ef4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eremdev&lt;/code&gt; - Remote device</source>
          <target state="translated">&lt;code&gt;eremdev&lt;/code&gt; - Удаленное устройство</target>
        </trans-unit>
        <trans-unit id="b2f04df4c1e858750d480db0e44d49d24ea12173" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eremote&lt;/code&gt; - Pathname hit remote filesystem</source>
          <target state="translated">&lt;code&gt;eremote&lt;/code&gt; - Путь к удаленной файловой системе</target>
        </trans-unit>
        <trans-unit id="7e9563a352891721a204a1c6ba35db8d2eece943" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eremoteio&lt;/code&gt; - Remote I/O error</source>
          <target state="translated">&lt;code&gt;eremoteio&lt;/code&gt; - Ошибка удаленного ввода / вывода</target>
        </trans-unit>
        <trans-unit id="e0ac33ee9203cd0385e20aa9c0173c8736a05eda" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eremoterelease&lt;/code&gt; - EREMOTERELEASE</source>
          <target state="translated">&lt;code&gt;eremoterelease&lt;/code&gt; - EREMOTERELEASE</target>
        </trans-unit>
        <trans-unit id="cc66bcb60fa11e17ee7a373b05b8b0426e827c02" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erfc(X)&lt;/code&gt; returns &lt;code&gt;1.0&lt;/code&gt; - &lt;code&gt;erf(X)&lt;/code&gt;, computed by methods that avoid cancellation for large &lt;code&gt;X&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;erfc(X)&lt;/code&gt; возвращает &lt;code&gt;1.0&lt;/code&gt; - &lt;code&gt;erf(X)&lt;/code&gt; , вычисленный с помощью методов , которые позволяют избежать отмены при больших &lt;code&gt;X&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a89b1c7135dfce3f2ec861c7930ee0cb688dc19a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl&lt;/code&gt; invokes the code for the Erlang emulator (virtual machine), which supports the following flags:</source>
          <target state="translated">&lt;code&gt;erl&lt;/code&gt; вызывает код для эмулятора Erlang (виртуальной машины), который поддерживает следующие флаги:</target>
        </trans-unit>
        <trans-unit id="72c212cae138df8bbf42d46cba38fbb6050a107d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl&lt;/code&gt; understands a number of command-line arguments, see the &lt;code&gt;erl(1)&lt;/code&gt; manual page in ERTS. Some of them are also described in this chapter.</source>
          <target state="translated">&lt;code&gt;erl&lt;/code&gt; понимает ряд аргументов командной строки, см. справочную страницу &lt;code&gt;erl(1)&lt;/code&gt; в ERTS. Некоторые из них также описаны в этой главе.</target>
        </trans-unit>
        <trans-unit id="7d5f44fb6c1012e9c0e060443ea59a1df2d043c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_connect&lt;/code&gt;: Communication with distributed Erlang, see &lt;code&gt;&lt;a href=&quot;#cnode&quot;&gt;C nodes&lt;/a&gt;&lt;/code&gt; below</source>
          <target state="translated">&lt;code&gt;erl_connect&lt;/code&gt; : связь с распределенным Erlang, см. &lt;code&gt;&lt;a href=&quot;#cnode&quot;&gt;C nodes&lt;/a&gt;&lt;/code&gt; ниже</target>
        </trans-unit>
        <trans-unit id="05e08ca32ae709584e9cf5968c63680192d4b3ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_connect_init()&lt;/code&gt; provides an alternative interface that does not require as much information from the caller. Instead, &lt;code&gt;erl_connect_init()&lt;/code&gt; uses &lt;code&gt;gethostbyname()&lt;/code&gt; to obtain default values.</source>
          <target state="translated">&lt;code&gt;erl_connect_init()&lt;/code&gt; предоставляет альтернативный интерфейс, который не требует от вызывающего столько информации. Вместо этого &lt;code&gt;erl_connect_init()&lt;/code&gt; использует &lt;code&gt;gethostbyname()&lt;/code&gt; для получения значений по умолчанию.</target>
        </trans-unit>
        <trans-unit id="5ed42cee4f0d59de8a0c21cbc5f26281d66a293b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_connect_xinit()&lt;/code&gt; stores for later use information about:</source>
          <target state="translated">&lt;code&gt;erl_connect_xinit()&lt;/code&gt; сохраняет для дальнейшего использования информацию о:</target>
        </trans-unit>
        <trans-unit id="eab23ac51e1e03f27475648663ab9f2fbebdee92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_decode()&lt;/code&gt; and &lt;code&gt;erl_decode_buf()&lt;/code&gt; decode the contents of a buffer and return the corresponding Erlang term. &lt;code&gt;erl_decode_buf()&lt;/code&gt; provides a simple mechanism for dealing with several encoded terms stored consecutively in the buffer.</source>
          <target state="translated">&lt;code&gt;erl_decode()&lt;/code&gt; и &lt;code&gt;erl_decode_buf()&lt;/code&gt; декодируют содержимое буфера и возвращают соответствующий термин Erlang. &lt;code&gt;erl_decode_buf()&lt;/code&gt; предоставляет простой механизм для работы с несколькими закодированными терминами, последовательно хранящимися в буфере.</target>
        </trans-unit>
        <trans-unit id="ba5ce02b66c6ebb8266816eb2a37f2798dcf9446" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_decode()&lt;/code&gt; returns an Erlang term corresponding to the contents of &lt;code&gt;bufp&lt;/code&gt; on success, otherwise &lt;code&gt;NULL&lt;/code&gt;. &lt;code&gt;erl_decode_buf()&lt;/code&gt; returns an Erlang term corresponding to the first of the consecutive terms in &lt;code&gt;bufpp&lt;/code&gt; and moves &lt;code&gt;bufpp&lt;/code&gt; forward to point to the next term in the buffer. On failure, each of the functions return &lt;code&gt;NULL&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;erl_decode()&lt;/code&gt; возвращает термин Erlang, соответствующий содержимому &lt;code&gt;bufp&lt;/code&gt; в случае успеха, иначе &lt;code&gt;NULL&lt;/code&gt; . &lt;code&gt;erl_decode_buf()&lt;/code&gt; возвращает термин Erlang, соответствующий первому из последовательных терминов в &lt;code&gt;bufpp&lt;/code&gt; , и перемещает &lt;code&gt;bufpp&lt;/code&gt; вперед, чтобы указать на следующий член в буфере. В случае сбоя каждая из функций возвращает &lt;code&gt;NULL&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="379b4dd10cbc4012f16c19966712684f66e8debd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_drv_cond_wait&lt;/code&gt; can return even if no one has signaled or broadcast on the condition variable. Code calling &lt;code&gt;erl_drv_cond_wait&lt;/code&gt; is always to be prepared for &lt;code&gt;erl_drv_cond_wait&lt;/code&gt; returning even if the condition that the thread was waiting for has not occurred. That is, when returning from &lt;code&gt;erl_drv_cond_wait&lt;/code&gt;, always check if the condition has occurred, and if not call &lt;code&gt;erl_drv_cond_wait&lt;/code&gt; again.</source>
          <target state="translated">&lt;code&gt;erl_drv_cond_wait&lt;/code&gt; может возвращать, даже если никто не сигнализировал или не транслировал переменную условия. Код, вызывающий &lt;code&gt;erl_drv_cond_wait&lt;/code&gt; , всегда должен быть готов к &lt;code&gt;erl_drv_cond_wait&lt;/code&gt; даже если условие, которого ожидал поток, не произошло. То есть при возврате из &lt;code&gt;erl_drv_cond_wait&lt;/code&gt; всегда проверяйте, возникло ли условие, и, если нет, снова вызывайте &lt;code&gt;erl_drv_cond_wait&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="79e9b0e47149950882d7b60dc390797727177f33" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_encode()&lt;/code&gt; and &lt;code&gt;erl_encode_buf()&lt;/code&gt; encode Erlang terms into external format for storage or transmission. &lt;code&gt;erl_encode_buf()&lt;/code&gt; provides a simple mechanism for encoding several terms consecutively in the same buffer.</source>
          <target state="translated">&lt;code&gt;erl_encode()&lt;/code&gt; и &lt;code&gt;erl_encode_buf()&lt;/code&gt; кодируют термины Erlang во внешний формат для хранения или передачи. &lt;code&gt;erl_encode_buf()&lt;/code&gt; предоставляет простой механизм для последовательного кодирования нескольких терминов в одном буфере.</target>
        </trans-unit>
        <trans-unit id="4baf900ef87e2e2fe298443cfb69dc4f01e7196b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_err_quit()&lt;/code&gt; prints the specified string and terminates the program. For more information, see the &lt;code&gt;&lt;a href=&quot;erl_error&quot;&gt;erl_error&lt;/a&gt;&lt;/code&gt; module.</source>
          <target state="translated">&lt;code&gt;erl_err_quit()&lt;/code&gt; печатает указанную строку и завершает программу. Для получения дополнительной информации см. Модуль &lt;code&gt;&lt;a href=&quot;erl_error&quot;&gt;erl_error&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e8ad05d64d240eb35447227773b5efeb35da3b2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_errno&lt;/code&gt; is a &quot;modifiable lvalue&quot; (just like ISO C defines &lt;code&gt;errno&lt;/code&gt; to be) rather than a variable. This means it can be implemented as a macro (expanding to, for example, &lt;code&gt;*_erl_errno()&lt;/code&gt;). For reasons of thread safety (or task safety), this is exactly what we do on most platforms.</source>
          <target state="translated">&lt;code&gt;erl_errno&lt;/code&gt; - это &quot;изменяемое lvalue&quot; (точно так же, как ISO C определяет &lt;code&gt;errno&lt;/code&gt; как значение), а не переменную. Это означает, что его можно реализовать в виде макроса (расширяясь, например, до &lt;code&gt;*_erl_errno()&lt;/code&gt; ). По соображениям безопасности потоков (или безопасности задач) это именно то, что мы делаем на большинстве платформ.</target>
        </trans-unit>
        <trans-unit id="34bc77955b3edc6f1b005dd775d48e0ab7698cfa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_errno&lt;/code&gt; is initially (at program startup) zero and is then set by many &lt;code&gt;Erl_Interface&lt;/code&gt; functions on failure to a non-zero error code to indicate what kind of error it encountered. A successful function call can change &lt;code&gt;erl_errno&lt;/code&gt; (by calling some other function that fails), but no function does never set it to zero. This means that you cannot use &lt;code&gt;erl_errno&lt;/code&gt; to see &lt;strong&gt;if&lt;/strong&gt; a function call failed. Instead, each function reports failure in its own way (usually by returning a negative number or &lt;code&gt;NULL&lt;/code&gt;), in which case you can examine &lt;code&gt;erl_errno&lt;/code&gt; for details.</source>
          <target state="translated">&lt;code&gt;erl_errno&lt;/code&gt; изначально (при запуске программы) равен нулю, а затем при &lt;code&gt;Erl_Interface&lt;/code&gt; многими функциями Erl_Interface устанавливается код ошибки, отличный от нуля, чтобы указать, с какой ошибкой возникла ошибка. Успешный вызов функции может изменить &lt;code&gt;erl_errno&lt;/code&gt; (путем вызова какой-либо другой функции, которая не работает), но ни одна функция никогда не устанавливает его в ноль. Это означает , что вы не можете использовать &lt;code&gt;erl_errno&lt;/code&gt; , чтобы увидеть , &lt;strong&gt;если&lt;/strong&gt; вызов функции не удалось. Вместо этого каждая функция сообщает об ошибке по-своему (обычно возвращая отрицательное число или &lt;code&gt;NULL&lt;/code&gt; ), и в этом случае вы можете изучить &lt;code&gt;erl_errno&lt;/code&gt; для получения подробной информации.</target>
        </trans-unit>
        <trans-unit id="5acd6abeba816006f87b24f69ff2b195240238f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_errno&lt;/code&gt; uses the error codes defined in your system's &lt;code&gt;&amp;lt;errno.h&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;erl_errno&lt;/code&gt; использует коды ошибок, определенные в &lt;code&gt;&amp;lt;errno.h&amp;gt;&lt;/code&gt; вашей системы .</target>
        </trans-unit>
        <trans-unit id="c80f4ee4dd5d5e5944250455f8a4fb7e666fa984" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_errno&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;erl_errno&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="d0255913a82bda8266c0f53fd482ec96e0c756fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_error&lt;/code&gt;: Error print routines</source>
          <target state="translated">&lt;code&gt;erl_error&lt;/code&gt; : процедуры печати ошибок</target>
        </trans-unit>
        <trans-unit id="49742a982f4b2c3d65ba0271a9f9167804fd4846" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_free_compound()&lt;/code&gt; recursively frees all of the subterms associated with a specified Erlang term, regardless of whether we are still holding pointers to the subterms.</source>
          <target state="translated">&lt;code&gt;erl_free_compound()&lt;/code&gt; рекурсивно освобождает все подтермы, связанные с указанным термином Erlang, независимо от того, хранятся ли мы по-прежнему указатели на подтермы.</target>
        </trans-unit>
        <trans-unit id="350f05cc0384f5d9c9b0647d551ddc37ead71eac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_global&lt;/code&gt;: Access globally registered names</source>
          <target state="translated">&lt;code&gt;erl_global&lt;/code&gt; : доступ к глобально зарегистрированным именам</target>
        </trans-unit>
        <trans-unit id="490136f48685bc8e7f8c28eeeb4b753f9cc34900" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_interface(3)&lt;/code&gt;, &lt;code&gt;mnesia(3)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;erl_interface(3)&lt;/code&gt; , &lt;code&gt;mnesia(3)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fd8d30fa75a8dd672597b51ad9c0775fc3e85859" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_marshal&lt;/code&gt;, &lt;code&gt;erl_eterm&lt;/code&gt;, &lt;code&gt;erl_format&lt;/code&gt;, and &lt;code&gt;erl_malloc&lt;/code&gt;: Handling of the Erlang external term format</source>
          <target state="translated">&lt;code&gt;erl_marshal&lt;/code&gt; , &lt;code&gt;erl_eterm&lt;/code&gt; , &lt;code&gt;erl_format&lt;/code&gt; и &lt;code&gt;erl_malloc&lt;/code&gt; : обработка внешнего формата терминов Erlang</target>
        </trans-unit>
        <trans-unit id="efb7d603ad2ca6fa5979574f628b6e1c162ab191" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_match&lt;/code&gt; binds the contents of &lt;code&gt;Age&lt;/code&gt; to &lt;code&gt;21&lt;/code&gt; the first time it reaches the variable.</source>
          <target state="translated">&lt;code&gt;erl_match&lt;/code&gt; связывает содержимое &lt;code&gt;Age&lt;/code&gt; с &lt;code&gt;21&lt;/code&gt; при первом достижении переменной.</target>
        </trans-unit>
        <trans-unit id="af3381bc3757ea5261200b0904f682283cefe98b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_msg_tracer.c&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;erl_msg_tracer.c&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="ea57a0603e747c503f3a87106e1a80f8b2912c6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_msg_tracer.erl&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;erl_msg_tracer.erl&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="89cb1a04729fbf36b9855226acaf9cc258a9716d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_parse:abstract(T)&lt;/code&gt; is equivalent to &lt;code&gt;erl_parse:abstract(T, 0)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;erl_parse:abstract(T)&lt;/code&gt; эквивалентен &lt;code&gt;erl_parse:abstract(T, 0)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2093087b106d203fc3331e7c52e280825f272e4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_posix_msg&lt;/code&gt;, The Windows 95 Registry (book from O'Reilly), Win32 Programmer's Reference (from Microsoft)</source>
          <target state="translated">&lt;code&gt;erl_posix_msg&lt;/code&gt; , Реестр Windows 95 (книга от О'Рейли), Справочник программиста Win32 (от Microsoft)</target>
        </trans-unit>
        <trans-unit id="cc72680de9e578548629cdb44d689e02a1caf3c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_prim_loader&lt;/code&gt; knows about the environment and how to fetch modules.</source>
          <target state="translated">&lt;code&gt;erl_prim_loader&lt;/code&gt; знает о среде и способах получения модулей.</target>
        </trans-unit>
        <trans-unit id="08fa747747934ae4281559134142942e7b3025fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_rcp_from()&lt;/code&gt; returns &lt;code&gt;ERL_MSG&lt;/code&gt; on success (with &lt;code&gt;Emsg&lt;/code&gt; now containing the reply tuple), otherwise one of &lt;code&gt;ERL_TICK&lt;/code&gt;, &lt;code&gt;ERL_TIMEOUT&lt;/code&gt;, or &lt;code&gt;ERL_ERROR&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;erl_rcp_from()&lt;/code&gt; возвращает &lt;code&gt;ERL_MSG&lt;/code&gt; в случае успеха ( теперь &lt;code&gt;Emsg&lt;/code&gt; содержит кортеж ответа), в противном случае - &lt;code&gt;ERL_TICK&lt;/code&gt; , &lt;code&gt;ERL_TIMEOUT&lt;/code&gt; или &lt;code&gt;ERL_ERROR&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="89c060673603e3855cc1a3582950f440f3246668" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_receive()&lt;/code&gt; receives the message into a buffer, while &lt;code&gt;erl_receive_msg()&lt;/code&gt; decodes the message into an Erlang term.</source>
          <target state="translated">&lt;code&gt;erl_receive()&lt;/code&gt; принимает сообщение в буфер, в то время как &lt;code&gt;erl_receive_msg()&lt;/code&gt; декодирует сообщение в термин Erlang.</target>
        </trans-unit>
        <trans-unit id="d4ac18969a90445e9ba83fceb181b0b596248c83" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_rpc()&lt;/code&gt; returns the remote function's return value on success, otherwise &lt;code&gt;NULL&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;erl_rpc()&lt;/code&gt; возвращает возвращаемое значение удаленной функции в случае успеха, иначе &lt;code&gt;NULL&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3e044b0f96b07d741727eb619036b486758dba48" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_rpc_to()&lt;/code&gt; returns &lt;code&gt;0&lt;/code&gt; on success, otherwise a negative number.</source>
          <target state="translated">&lt;code&gt;erl_rpc_to()&lt;/code&gt; возвращает &lt;code&gt;0&lt;/code&gt; в случае успеха, в противном случае - отрицательное число.</target>
        </trans-unit>
        <trans-unit id="ca8e4d92e12ea7bf88d771549108973539edd2f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_var_content()&lt;/code&gt; can be used to retrieve the content of any variables bound as a result of a call to &lt;code&gt;erl_match()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;erl_var_content()&lt;/code&gt; может использоваться для получения содержимого любых переменных, связанных в результате вызова &lt;code&gt;erl_match()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ffa2b16333b2357002f2b172891b3aeee189267a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_xcomp_after_morecore_hook&lt;/code&gt; - &lt;code&gt;yes|no&lt;/code&gt;. Defaults to &lt;code&gt;no&lt;/code&gt;. If &lt;code&gt;yes&lt;/code&gt;, the target system must have a working &lt;code&gt;__after_morecore_hook&lt;/code&gt; that can be used for tracking used &lt;code&gt;malloc()&lt;/code&gt; implementations core memory usage. This is currently only used by unsupported features.</source>
          <target state="translated">&lt;code&gt;erl_xcomp_after_morecore_hook&lt;/code&gt; - &lt;code&gt;yes|no&lt;/code&gt; . По умолчанию &lt;code&gt;no&lt;/code&gt; . Если &lt;code&gt;yes&lt;/code&gt; , целевая система должна иметь рабочий &lt;code&gt;__after_morecore_hook&lt;/code&gt; , который можно использовать для отслеживания использования памяти ядра используемыми реализациями &lt;code&gt;malloc()&lt;/code&gt; . В настоящее время это используется только неподдерживаемыми функциями.</target>
        </trans-unit>
        <trans-unit id="106ac2ae4f4d78615c4b22c9cdecd2ff5ea16abc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_xcomp_bigendian&lt;/code&gt; - &lt;code&gt;yes|no&lt;/code&gt;. No default. If &lt;code&gt;yes&lt;/code&gt;, the target system must be big endian. If &lt;code&gt;no&lt;/code&gt;, little endian. This can often be automatically detected, but not always. If not automatically detected, &lt;code&gt;configure&lt;/code&gt; will fail unless this variable is set. Since no default value is used, &lt;code&gt;configure&lt;/code&gt; will try to figure this out automatically.</source>
          <target state="translated">&lt;code&gt;erl_xcomp_bigendian&lt;/code&gt; - &lt;code&gt;yes|no&lt;/code&gt; . По умолчанию нет. Если &lt;code&gt;yes&lt;/code&gt; , целевая система должна иметь прямой порядок байтов. Если &lt;code&gt;no&lt;/code&gt; , то с прямым порядком байтов. Часто это можно обнаружить автоматически, но не всегда. Если не обнаружено автоматически, &lt;code&gt;configure&lt;/code&gt; завершится ошибкой, если эта переменная не установлена. Поскольку значение по умолчанию не используется, &lt;code&gt;configure&lt;/code&gt; попытается определить это автоматически.</target>
        </trans-unit>
        <trans-unit id="fb0788951887b98a8dbe08eb03f7145f14563a31" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_xcomp_build&lt;/code&gt; - The build system used. This value will be passed as &lt;code&gt;--build=$erl_xcomp_build&lt;/code&gt; argument to the &lt;code&gt;configure&lt;/code&gt; script. It does not have to be a full &lt;code&gt;CPU-VENDOR-OS&lt;/code&gt; triplet, but can be. The full &lt;code&gt;CPU-VENDOR-OS&lt;/code&gt; triplet will be created by &lt;code&gt;$ERL_TOP/erts/autoconf/config.sub $erl_xcomp_build&lt;/code&gt;. If set to &lt;code&gt;guess&lt;/code&gt;, the build system will be guessed using &lt;code&gt;$ERL_TOP/erts/autoconf/config.guess&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;erl_xcomp_build&lt;/code&gt; - используемая система сборки. Это значение будет передаваться как &lt;code&gt;--build=$erl_xcomp_build&lt;/code&gt; аргумент &lt;code&gt;configure&lt;/code&gt; сценария. Это не обязательно должен быть полный триплет &lt;code&gt;CPU-VENDOR-OS&lt;/code&gt; , но может быть. Полный триплет &lt;code&gt;CPU-VENDOR-OS&lt;/code&gt; будет создан &lt;code&gt;$ERL_TOP/erts/autoconf/config.sub $erl_xcomp_build&lt;/code&gt; . Если задано &lt;code&gt;guess&lt;/code&gt; , система сборки будет &lt;code&gt;$ERL_TOP/erts/autoconf/config.guess&lt;/code&gt; с помощью $ ERL_TOP / erts / autoconf / config.guess .</target>
        </trans-unit>
        <trans-unit id="0d2e7a09a0a046af724617716e923bd5dc46a979" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_xcomp_clock_gettime_cpu_time&lt;/code&gt; - &lt;code&gt;yes|no&lt;/code&gt;. Defaults to &lt;code&gt;no&lt;/code&gt;. If &lt;code&gt;yes&lt;/code&gt;, the target system must have a working &lt;code&gt;clock_gettime()&lt;/code&gt; implementation that can be used for retrieving process CPU time.</source>
          <target state="translated">&lt;code&gt;erl_xcomp_clock_gettime_cpu_time&lt;/code&gt; - &lt;code&gt;yes|no&lt;/code&gt; . По умолчанию &lt;code&gt;no&lt;/code&gt; . Если &lt;code&gt;yes&lt;/code&gt; , целевая система должна иметь работающую реализацию &lt;code&gt;clock_gettime()&lt;/code&gt; которую можно использовать для получения времени ЦП процесса.</target>
        </trans-unit>
        <trans-unit id="93989cef7ebb320f151ef5c78056c91b8be2ae50" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_xcomp_configure_flags&lt;/code&gt; - Extra configure flags to pass to the &lt;code&gt;configure&lt;/code&gt; script.</source>
          <target state="translated">&lt;code&gt;erl_xcomp_configure_flags&lt;/code&gt; - Дополнительные флаги конфигурации для передачи сценарию &lt;code&gt;configure&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9fc611160841c3877cca40ed51cce51ec4d3a98f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_xcomp_dlsym_brk_wrappers&lt;/code&gt; - &lt;code&gt;yes|no&lt;/code&gt;. Defaults to &lt;code&gt;no&lt;/code&gt;. If &lt;code&gt;yes&lt;/code&gt;, the target system must have a working &lt;code&gt;dlsym(RTLD_NEXT, &amp;lt;S&amp;gt;)&lt;/code&gt; implementation that can be used on &lt;code&gt;brk&lt;/code&gt; and &lt;code&gt;sbrk&lt;/code&gt; symbols used by the &lt;code&gt;malloc()&lt;/code&gt; implementation in use, and by this track the &lt;code&gt;malloc()&lt;/code&gt; implementations core memory usage. This is currently only used by unsupported features.</source>
          <target state="translated">&lt;code&gt;erl_xcomp_dlsym_brk_wrappers&lt;/code&gt; - &lt;code&gt;yes|no&lt;/code&gt; . По умолчанию &lt;code&gt;no&lt;/code&gt; . Если &lt;code&gt;yes&lt;/code&gt; , целевая система должна иметь рабочую реализацию &lt;code&gt;dlsym(RTLD_NEXT, &amp;lt;S&amp;gt;)&lt;/code&gt; которая может использоваться с символами &lt;code&gt;brk&lt;/code&gt; и &lt;code&gt;sbrk&lt;/code&gt; , используемыми используемой реализацией &lt;code&gt;malloc()&lt;/code&gt; , и таким образом отслеживать использование памяти ядра реализацией &lt;code&gt;malloc()&lt;/code&gt; , В настоящее время это используется только неподдерживаемыми функциями.</target>
        </trans-unit>
        <trans-unit id="88772d054eb8016bb1571c489deaadde7477ef0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_xcomp_double_middle&lt;/code&gt; - &lt;code&gt;yes|no&lt;/code&gt;. Defaults to &lt;code&gt;no&lt;/code&gt;. If &lt;code&gt;yes&lt;/code&gt;, the target system must have doubles in &quot;middle-endian&quot; format. If &lt;code&gt;no&lt;/code&gt;, it has &quot;regular&quot; endianness.</source>
          <target state="translated">&lt;code&gt;erl_xcomp_double_middle&lt;/code&gt; - &lt;code&gt;yes|no&lt;/code&gt; . По умолчанию &lt;code&gt;no&lt;/code&gt; . Если &lt;code&gt;yes&lt;/code&gt; , целевая система должна иметь двойные значения в формате &quot;средний порядок байтов&quot;. Если &lt;code&gt;no&lt;/code&gt; , то у него &quot;обычный&quot; порядок байтов.</target>
        </trans-unit>
        <trans-unit id="062309279417fd3e6eea7ce95bfd1cb641ae88a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_xcomp_getaddrinfo&lt;/code&gt; - &lt;code&gt;yes|no&lt;/code&gt;. Defaults to &lt;code&gt;no&lt;/code&gt;. If &lt;code&gt;yes&lt;/code&gt;, the target system must have a working &lt;code&gt;getaddrinfo()&lt;/code&gt; implementation that can handle both IPv4 and IPv6.</source>
          <target state="translated">&lt;code&gt;erl_xcomp_getaddrinfo&lt;/code&gt; - &lt;code&gt;yes|no&lt;/code&gt; . По умолчанию &lt;code&gt;no&lt;/code&gt; . Если &lt;code&gt;yes&lt;/code&gt; , целевая система должна иметь работающую реализацию &lt;code&gt;getaddrinfo()&lt;/code&gt; которая может обрабатывать как IPv4, так и IPv6.</target>
        </trans-unit>
        <trans-unit id="62ef40ba2e6666bf10a25e23fa6e022f5d43ccad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_xcomp_gethrvtime_procfs_ioctl&lt;/code&gt; - &lt;code&gt;yes|no&lt;/code&gt;. Defaults to &lt;code&gt;no&lt;/code&gt;. If &lt;code&gt;yes&lt;/code&gt;, the target system must have a working &lt;code&gt;gethrvtime()&lt;/code&gt; implementation and is used with procfs &lt;code&gt;ioctl()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;erl_xcomp_gethrvtime_procfs_ioctl&lt;/code&gt; - &lt;code&gt;yes|no&lt;/code&gt; . По умолчанию &lt;code&gt;no&lt;/code&gt; . Если &lt;code&gt;yes&lt;/code&gt; , целевая система должна иметь работающую реализацию &lt;code&gt;gethrvtime()&lt;/code&gt; и использоваться с procfs &lt;code&gt;ioctl()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="de14cddf739b273dffb0ae8cd1c96f5b04ac40e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_xcomp_host&lt;/code&gt; - Cross host/target system to build for. This value will be passed as &lt;code&gt;--host=$erl_xcomp_host&lt;/code&gt; argument to the &lt;code&gt;configure&lt;/code&gt; script. It does not have to be a full &lt;code&gt;CPU-VENDOR-OS&lt;/code&gt; triplet, but can be. The full &lt;code&gt;CPU-VENDOR-OS&lt;/code&gt; triplet will be created by &lt;code&gt;$ERL_TOP/erts/autoconf/config.sub $erl_xcomp_host&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;erl_xcomp_host&lt;/code&gt; - Перекрестная хост / целевая система для сборки. Это значение будет передано сценарию &lt;code&gt;configure&lt;/code&gt; аргумент &lt;code&gt;--host=$erl_xcomp_host&lt;/code&gt; . Это не обязательно должен быть полный триплет &lt;code&gt;CPU-VENDOR-OS&lt;/code&gt; , но может быть. Полный триплет &lt;code&gt;CPU-VENDOR-OS&lt;/code&gt; будет создан &lt;code&gt;$ERL_TOP/erts/autoconf/config.sub $erl_xcomp_host&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d8a2469b397bddd3193a3cceadcdc867f41c4929" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_xcomp_isysroot&lt;/code&gt; - The absolute path to the system root for includes of the cross compilation environment. If not set, this value defaults to &lt;code&gt;$erl_xcomp_sysroot&lt;/code&gt;, i.e., only set this value if the include system root path is not the same as the system root path.</source>
          <target state="translated">&lt;code&gt;erl_xcomp_isysroot&lt;/code&gt; - Абсолютный путь к корневому каталогу системы для включения среды кросс-компиляции. Если не задано, это значение по умолчанию равно &lt;code&gt;$erl_xcomp_sysroot&lt;/code&gt; , то есть устанавливайте это значение только в том случае, если корневой путь включаемой системы не совпадает с корневым путем системы.</target>
        </trans-unit>
        <trans-unit id="a174542bd82e842d632bc9a19384e17908d3094d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_xcomp_kqueue&lt;/code&gt; - &lt;code&gt;yes|no&lt;/code&gt;. Defaults to &lt;code&gt;no&lt;/code&gt;. If &lt;code&gt;yes&lt;/code&gt;, the target system must have a working &lt;code&gt;kqueue()&lt;/code&gt; implementation that returns a file descriptor which can be used by &lt;code&gt;poll()&lt;/code&gt; and/or &lt;code&gt;select()&lt;/code&gt;. If &lt;code&gt;no&lt;/code&gt; and the target system has not got &lt;code&gt;epoll()&lt;/code&gt; or &lt;code&gt;/dev/poll&lt;/code&gt;, the kernel-poll feature will be disabled.</source>
          <target state="translated">&lt;code&gt;erl_xcomp_kqueue&lt;/code&gt; - &lt;code&gt;yes|no&lt;/code&gt; . По умолчанию &lt;code&gt;no&lt;/code&gt; . Если &lt;code&gt;yes&lt;/code&gt; , целевая система должна иметь работающую реализацию &lt;code&gt;kqueue()&lt;/code&gt; которая возвращает дескриптор файла, который может использоваться &lt;code&gt;poll()&lt;/code&gt; и / или &lt;code&gt;select()&lt;/code&gt; . Если &lt;code&gt;no&lt;/code&gt; и целевая система не имеет &lt;code&gt;epoll()&lt;/code&gt; или &lt;code&gt;/dev/poll&lt;/code&gt; , функция опроса ядра будет отключена.</target>
        </trans-unit>
        <trans-unit id="b7613c86b3bd0e02cd1f155080c92d4b46295b46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_xcomp_linux_clock_gettime_correction&lt;/code&gt; - &lt;code&gt;yes|no&lt;/code&gt;. Defaults to &lt;code&gt;yes&lt;/code&gt; on Linux; otherwise, &lt;code&gt;no&lt;/code&gt;. If &lt;code&gt;yes&lt;/code&gt;, &lt;code&gt;clock_gettime(CLOCK_MONOTONIC, _)&lt;/code&gt; on the target system must work. This variable is recommended to be set to &lt;code&gt;no&lt;/code&gt; on Linux systems with kernel versions less than 2.6.</source>
          <target state="translated">&lt;code&gt;erl_xcomp_linux_clock_gettime_correction&lt;/code&gt; - &lt;code&gt;yes|no&lt;/code&gt; . По умолчанию в Linux - &lt;code&gt;yes&lt;/code&gt; ; в противном случае &lt;code&gt;no&lt;/code&gt; . Если &lt;code&gt;yes&lt;/code&gt; , &lt;code&gt;clock_gettime(CLOCK_MONOTONIC, _)&lt;/code&gt; в целевой системе должны работать. Для этой переменной рекомендуется установить значение &lt;code&gt;no&lt;/code&gt; в системах Linux с версиями ядра менее 2.6.</target>
        </trans-unit>
        <trans-unit id="2d3e383de5424f1e5dee790ee61b3f671152983e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_xcomp_linux_nptl&lt;/code&gt; - &lt;code&gt;yes|no&lt;/code&gt;. Defaults to &lt;code&gt;yes&lt;/code&gt; on Linux; otherwise, &lt;code&gt;no&lt;/code&gt;. If &lt;code&gt;yes&lt;/code&gt;, the target system must have NPTL (Native POSIX Thread Library). Older Linux systems have LinuxThreads instead of NPTL (Linux kernel versions typically less than 2.6).</source>
          <target state="translated">&lt;code&gt;erl_xcomp_linux_nptl&lt;/code&gt; - &lt;code&gt;yes|no&lt;/code&gt; . По умолчанию в Linux - &lt;code&gt;yes&lt;/code&gt; ; в противном случае &lt;code&gt;no&lt;/code&gt; . Если &lt;code&gt;yes&lt;/code&gt; , целевая система должна иметь NPTL (собственная библиотека потоков POSIX). Старые системы Linux имеют LinuxThreads вместо NPTL (версии ядра Linux обычно меньше 2.6).</target>
        </trans-unit>
        <trans-unit id="cc0916eebc7a8310a6d4f48aed9731ce70a892fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_xcomp_linux_usable_sigaltstack&lt;/code&gt; - &lt;code&gt;yes|no&lt;/code&gt;. Defaults to &lt;code&gt;yes&lt;/code&gt; on Linux; otherwise, &lt;code&gt;no&lt;/code&gt;. If &lt;code&gt;yes&lt;/code&gt;, &lt;code&gt;sigaltstack()&lt;/code&gt; must be usable on the target system. &lt;code&gt;sigaltstack()&lt;/code&gt; on Linux kernel versions less than 2.4 are broken.</source>
          <target state="translated">&lt;code&gt;erl_xcomp_linux_usable_sigaltstack&lt;/code&gt; - &lt;code&gt;yes|no&lt;/code&gt; . По умолчанию в Linux - &lt;code&gt;yes&lt;/code&gt; ; в противном случае &lt;code&gt;no&lt;/code&gt; . Если &lt;code&gt;yes&lt;/code&gt; , то &lt;code&gt;sigaltstack()&lt;/code&gt; должен быть доступен в целевой системе. &lt;code&gt;sigaltstack()&lt;/code&gt; в версиях ядра Linux ниже 2.4 не работает.</target>
        </trans-unit>
        <trans-unit id="c2acd0cc21779f12608e8b02afc45f6f35d3f129" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_xcomp_linux_usable_sigusrx&lt;/code&gt; - &lt;code&gt;yes|no&lt;/code&gt;. Defaults to &lt;code&gt;yes&lt;/code&gt;. If &lt;code&gt;yes&lt;/code&gt;, the &lt;code&gt;SIGUSR1&lt;/code&gt; and &lt;code&gt;SIGUSR2&lt;/code&gt; signals must be usable by the ERTS. Old LinuxThreads thread libraries (Linux kernel versions typically less than 2.2) used these signals and made them unusable by the ERTS.</source>
          <target state="translated">&lt;code&gt;erl_xcomp_linux_usable_sigusrx&lt;/code&gt; - &lt;code&gt;yes|no&lt;/code&gt; . По умолчанию &lt;code&gt;yes&lt;/code&gt; . Если &lt;code&gt;yes&lt;/code&gt; , то сигналы &lt;code&gt;SIGUSR1&lt;/code&gt; и &lt;code&gt;SIGUSR2&lt;/code&gt; должны использоваться ERTS. Старые библиотеки потоков LinuxThreads (версии ядра Linux обычно менее 2.2) использовали эти сигналы и делали их непригодными для использования ERTS.</target>
        </trans-unit>
        <trans-unit id="cfcf1f57f212db2dd52856094c1fc2c9722d44db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_xcomp_poll&lt;/code&gt; - &lt;code&gt;yes|no&lt;/code&gt;. Defaults to &lt;code&gt;no&lt;/code&gt; on Darwin/MacOSX; otherwise, &lt;code&gt;yes&lt;/code&gt;. If &lt;code&gt;yes&lt;/code&gt;, the target system must have a working &lt;code&gt;poll()&lt;/code&gt; implementation that also can handle devices. If &lt;code&gt;no&lt;/code&gt;, &lt;code&gt;select()&lt;/code&gt; will be used instead of &lt;code&gt;poll()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;erl_xcomp_poll&lt;/code&gt; - &lt;code&gt;yes|no&lt;/code&gt; . По умолчанию &lt;code&gt;no&lt;/code&gt; на Darwin / MacOSX; в противном случае &lt;code&gt;yes&lt;/code&gt; . Если &lt;code&gt;yes&lt;/code&gt; , целевая система должна иметь работающую реализацию &lt;code&gt;poll()&lt;/code&gt; которая также может обрабатывать устройства. Если &lt;code&gt;no&lt;/code&gt; , то будет использоваться &lt;code&gt;select()&lt;/code&gt; вместо &lt;code&gt;poll()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4509c2e0afa469bdbca4de5f6467f7509e094da4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_xcomp_posix_memalign&lt;/code&gt; - &lt;code&gt;yes|no&lt;/code&gt;. Defaults to &lt;code&gt;yes&lt;/code&gt; if &lt;code&gt;posix_memalign&lt;/code&gt; system call exists; otherwise &lt;code&gt;no&lt;/code&gt;. If &lt;code&gt;yes&lt;/code&gt;, the target system must have a &lt;code&gt;posix_memalign&lt;/code&gt; implementation that accepts larger than page size alignment.</source>
          <target state="translated">&lt;code&gt;erl_xcomp_posix_memalign&lt;/code&gt; - &lt;code&gt;yes|no&lt;/code&gt; . По умолчанию &lt;code&gt;yes&lt;/code&gt; если &lt;code&gt;posix_memalign&lt;/code&gt; системный вызов posix_memalign ; иначе &lt;code&gt;no&lt;/code&gt; . Если &lt;code&gt;yes&lt;/code&gt; , целевая система должна иметь реализацию &lt;code&gt;posix_memalign&lt;/code&gt; , которая допускает выравнивание больше, чем размер страницы.</target>
        </trans-unit>
        <trans-unit id="269062cd25f17f7a80763e13e0627d10f6195d71" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_xcomp_putenv_copy&lt;/code&gt; - &lt;code&gt;yes|no&lt;/code&gt;. Defaults to &lt;code&gt;no&lt;/code&gt;. If &lt;code&gt;yes&lt;/code&gt;, the target system must have a &lt;code&gt;putenv()&lt;/code&gt; implementation that stores a copy of the key/value pair.</source>
          <target state="translated">&lt;code&gt;erl_xcomp_putenv_copy&lt;/code&gt; - &lt;code&gt;yes|no&lt;/code&gt; . По умолчанию &lt;code&gt;no&lt;/code&gt; . Если &lt;code&gt;yes&lt;/code&gt; , целевая система должна иметь реализацию &lt;code&gt;putenv()&lt;/code&gt; которая хранит копию пары ключ / значение.</target>
        </trans-unit>
        <trans-unit id="ed767b8a3c4a99b707ed643536c651996e6dc1ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_xcomp_reliable_fpe&lt;/code&gt; - &lt;code&gt;yes|no&lt;/code&gt;. Defaults to &lt;code&gt;no&lt;/code&gt;. If &lt;code&gt;yes&lt;/code&gt;, the target system must have reliable floating point exceptions.</source>
          <target state="translated">&lt;code&gt;erl_xcomp_reliable_fpe&lt;/code&gt; - &lt;code&gt;yes|no&lt;/code&gt; . По умолчанию &lt;code&gt;no&lt;/code&gt; . Если &lt;code&gt;yes&lt;/code&gt; , целевая система должна иметь надежные исключения с плавающей запятой.</target>
        </trans-unit>
        <trans-unit id="59e72f4c7e19b8159ea2181e2997a8a05d20d518" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_xcomp_sysroot&lt;/code&gt; - The absolute path to the system root of the cross compilation environment. Currently, the &lt;code&gt;crypto&lt;/code&gt;, &lt;code&gt;odbc&lt;/code&gt;, &lt;code&gt;ssh&lt;/code&gt; and &lt;code&gt;ssl&lt;/code&gt; applications need the system root. These applications will be skipped if the system root has not been set. The system root might be needed for other things too. If this is the case and the system root has not been set, &lt;code&gt;configure&lt;/code&gt; will fail and request you to set it.</source>
          <target state="translated">&lt;code&gt;erl_xcomp_sysroot&lt;/code&gt; - Абсолютный путь к системному корню среды кросс-компиляции. В настоящее время приложениям &lt;code&gt;crypto&lt;/code&gt; , &lt;code&gt;odbc&lt;/code&gt; , &lt;code&gt;ssh&lt;/code&gt; и &lt;code&gt;ssl&lt;/code&gt; требуется корень системы. Эти приложения будут пропущены, если системный корень не был установлен. Системный корень может понадобиться и для других целей. Если это так и системный корень не был установлен, &lt;code&gt;configure&lt;/code&gt; завершится ошибкой и попросит вас установить его.</target>
        </trans-unit>
        <trans-unit id="3e6a8bf12dc9d18db013d9943a8ccd5cd0ddde1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erl_xconnect()&lt;/code&gt; requires the IP address of the remote host and the alivename of the remote node to be specified. &lt;code&gt;erl_connect()&lt;/code&gt; provides an alternative interface, and determines the information from the node name provided.</source>
          <target state="translated">&lt;code&gt;erl_xconnect()&lt;/code&gt; требует, чтобы были указаны IP-адрес удаленного хоста и живое имя удаленного узла. &lt;code&gt;erl_connect()&lt;/code&gt; предоставляет альтернативный интерфейс и определяет информацию из предоставленного имени узла.</target>
        </trans-unit>
        <trans-unit id="d03a004dcad6782a74f3ee2ad45aaa77ce5e8b9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erlang:get_stacktrace/0&lt;/code&gt; is deprecated and will stop working in a future release.</source>
          <target state="translated">&lt;code&gt;erlang:get_stacktrace/0&lt;/code&gt; устарел и перестанет работать в следующем выпуске.</target>
        </trans-unit>
        <trans-unit id="b541018cbc16f83926cf0aa53af10640840326d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erlang:get_stacktrace/0&lt;/code&gt; retrieves the call stack back-trace (&lt;strong&gt;stacktrace&lt;/strong&gt;) for an exception that has just been caught in the calling process as a list of &lt;code&gt;{Module,Function,Arity,Location}&lt;/code&gt; tuples. Field &lt;code&gt;Arity&lt;/code&gt; in the first tuple can be the argument list of that function call instead of an arity integer, depending on the exception.</source>
          <target state="translated">&lt;code&gt;erlang:get_stacktrace/0&lt;/code&gt; извлекает обратную трассировку стека вызовов ( &lt;strong&gt;stacktrace&lt;/strong&gt; ) для исключения, которое только что было &lt;strong&gt;перехвачено&lt;/strong&gt; вызывающим процессом, как список кортежей &lt;code&gt;{Module,Function,Arity,Location}&lt;/code&gt; . Поле &lt;code&gt;Arity&lt;/code&gt; в первом кортеже может быть списком аргументов этого вызова функции вместо целого числа arity, в зависимости от исключения.</target>
        </trans-unit>
        <trans-unit id="05fef3fa781d4e70da7ee356acf9e2ff1ed81a93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erlang:system_info(allocated_areas)&lt;/code&gt; is intended for debugging, and the content is highly implementation-dependent. The content of the results therefore changes when needed without prior notice.</source>
          <target state="translated">&lt;code&gt;erlang:system_info(allocated_areas)&lt;/code&gt; предназначен для отладки, и его содержимое сильно зависит от реализации. Поэтому содержание результатов изменяется при необходимости без предварительного уведомления.</target>
        </trans-unit>
        <trans-unit id="830e05bfdcbac8e2927b778f03e4949758867586" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erlang:system_profile&lt;/code&gt; behavior can change in a future release.</source>
          <target state="translated">&lt;code&gt;erlang:system_profile&lt;/code&gt; поведение system_profile может измениться в будущем выпуске.</target>
        </trans-unit>
        <trans-unit id="9ade3f5ef6d20dce54cf803b26b865572f5eadab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erlang&lt;/code&gt; manual page in ERTS (describes the BIFs)</source>
          <target state="translated">&lt;code&gt;erlang&lt;/code&gt; страница руководства в ЭРЦЕ (описывает BIFS)</target>
        </trans-unit>
        <trans-unit id="fbf642775d24722a69d5fce0d0743d85adca8813" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erlsrv&lt;/code&gt; also provides a command-line interface for registering, changing, starting, and stopping services.</source>
          <target state="translated">&lt;code&gt;erlsrv&lt;/code&gt; также предоставляет интерфейс командной строки для регистрации, изменения, запуска и остановки служб.</target>
        </trans-unit>
        <trans-unit id="ffcc31c05996b61bdabb7b7e8aff7930a4d83bb5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erofs&lt;/code&gt; - Read-only file system</source>
          <target state="translated">&lt;code&gt;erofs&lt;/code&gt; - файловая система только для чтения</target>
        </trans-unit>
        <trans-unit id="b80c4112296dc76f5ba849a8a385bdf8af5edca9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erofs&lt;/code&gt; - Read-only filesystem</source>
          <target state="translated">&lt;code&gt;erofs&lt;/code&gt; - файловая система только для чтения</target>
        </trans-unit>
        <trans-unit id="20240f074145c249d4dd67a56257df5ecab46378" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erpcmismatch&lt;/code&gt; - Wrong RPC version</source>
          <target state="translated">&lt;code&gt;erpcmismatch&lt;/code&gt; - Неверная версия RPC</target>
        </trans-unit>
        <trans-unit id="d1ff3aacd3633fcdf694fcdcba924da80f94fb62" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erremote&lt;/code&gt; - Object is remote</source>
          <target state="translated">&lt;code&gt;erremote&lt;/code&gt; - Объект удален</target>
        </trans-unit>
        <trans-unit id="da7a5cd48bf89d6d3e5afa1bd3d7b154e5ab549b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;error_handler:undefined_function(Module, Function, Args)&lt;/code&gt; is evaluated by the new process if &lt;code&gt;Module:Function/Arity&lt;/code&gt; does not exist (where &lt;code&gt;Arity&lt;/code&gt; is the length of &lt;code&gt;Args&lt;/code&gt;). The error handler can be redefined (see &lt;code&gt;&lt;a href=&quot;#process_flag-2&quot;&gt;process_flag/2&lt;/a&gt;&lt;/code&gt;). If &lt;code&gt;error_handler&lt;/code&gt; is undefined, or the user has redefined the default &lt;code&gt;error_handler&lt;/code&gt; and its replacement is undefined, a failure with reason &lt;code&gt;undef&lt;/code&gt; occurs.</source>
          <target state="translated">&lt;code&gt;error_handler:undefined_function(Module, Function, Args)&lt;/code&gt; оценивается новым процессом, если &lt;code&gt;Module:Function/Arity&lt;/code&gt; не существует (где &lt;code&gt;Arity&lt;/code&gt; - длина &lt;code&gt;Args&lt;/code&gt; ). Обработчик ошибок можно переопределить (см. &lt;code&gt;&lt;a href=&quot;#process_flag-2&quot;&gt;process_flag/2&lt;/a&gt;&lt;/code&gt; ). Если &lt;code&gt;error_handler&lt;/code&gt; не определен, или пользователь переопределил &lt;code&gt;error_handler&lt;/code&gt; по умолчанию и его замена undefined, происходит сбой с причиной &lt;code&gt;undef&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f3c883521cdee8e2481c0a180da1faa37dba1788" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;error_logger(3)&lt;/code&gt;, &lt;code&gt;gen_event(3)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;error_logger(3)&lt;/code&gt; , &lt;code&gt;gen_event(3)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d15e04a68c3e4f67bc4f5129d30fa1ef4d1ea0c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;error_logger(3)&lt;/code&gt;, &lt;code&gt;os_mon(3)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;error_logger(3)&lt;/code&gt; , &lt;code&gt;os_mon(3)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bd36f251c6677faaaa0ae26d9f33603a67e12e26" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;error_logger&lt;/code&gt; is no longer started by default, but is automatically started when an event handler is added with &lt;code&gt;error_logger:add_report_handler/1,2&lt;/code&gt;. The &lt;code&gt;error_logger&lt;/code&gt; module is then also added as a handler to the new logger.</source>
          <target state="translated">&lt;code&gt;error_logger&lt;/code&gt; больше не запускается по умолчанию, но запускается автоматически при добавлении обработчика событий с &lt;code&gt;error_logger:add_report_handler/1,2&lt;/code&gt; . Затем модуль &lt;code&gt;error_logger&lt;/code&gt; также добавляется в качестве обработчика к новому регистратору.</target>
        </trans-unit>
        <trans-unit id="6de5fad938e46467ba29d2b5d7c334433a3dadc9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;error_man&lt;/code&gt; is the name of the event manager and &lt;code&gt;no_reply&lt;/code&gt; is the event.</source>
          <target state="translated">&lt;code&gt;error_man&lt;/code&gt; - это имя менеджера событий, а &lt;code&gt;no_reply&lt;/code&gt; - это событие.</target>
        </trans-unit>
        <trans-unit id="9a7a600cb0b03c7fab63405b22d151fdd5e372af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erts-EVsn/bin&lt;/code&gt; - Erlang runtime system executables</source>
          <target state="translated">&lt;code&gt;erts-EVsn/bin&lt;/code&gt; - исполняемые файлы системы времени выполнения Erlang</target>
        </trans-unit>
        <trans-unit id="b3cd589ffe1e4085965d3df7d06bb33b62969904" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erts:epmd&lt;/code&gt; is the Erlang Port Mapper Daemon. Distributed Erlang nodes register with &lt;code&gt;epmd&lt;/code&gt; on the local host to indicate to other nodes that they exist and can accept connections. &lt;code&gt;epmd&lt;/code&gt; maintains a register of node and port number information, and when a node wishes to connect to another node, it first contacts &lt;code&gt;epmd&lt;/code&gt; to find the correct port number to connect to.</source>
          <target state="translated">&lt;code&gt;erts:epmd&lt;/code&gt; - демон для сопоставления портов на Erlang. Распределенные узлы Erlang регистрируются в &lt;code&gt;epmd&lt;/code&gt; на локальном хосте, чтобы указать другим узлам, что они существуют и могут принимать соединения. &lt;code&gt;epmd&lt;/code&gt; ведет регистр информации об узле и номере порта, и когда узел хочет подключиться к другому узлу, он сначала связывается с &lt;code&gt;epmd&lt;/code&gt; , чтобы найти правильный номер порта для подключения.</target>
        </trans-unit>
        <trans-unit id="ae7b6b8838371f3daac96a3427a870a4e86c1b06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erts:erl_driver(4)&lt;/code&gt;, &lt;code&gt;erts:driver_entry(4)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;erts:erl_driver(4)&lt;/code&gt; , &lt;code&gt;erts:driver_entry(4)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e9eb2668d0733b1a059266643087f67a7951fae3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erts:init(3)&lt;/code&gt;, &lt;code&gt;erts:erl_prim_loader(3)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;erts:init(3)&lt;/code&gt; , &lt;code&gt;erts:erl_prim_loader(3)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1115b36b9dcc89e47be8c97d9257688803ed8b28" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erts_alloc(3)&lt;/code&gt; is an Erlang Run-Time System internal memory allocator library. &lt;code&gt;erts_alloc_config&lt;/code&gt; is intended to be used to aid creation of an &lt;code&gt;erts_alloc(3)&lt;/code&gt; configuration that is suitable for a limited number of runtime scenarios. The configuration that &lt;code&gt;erts_alloc_config&lt;/code&gt; produce is intended as a suggestion, and may need to be adjusted manually.</source>
          <target state="translated">&lt;code&gt;erts_alloc(3)&lt;/code&gt; - это внутренняя библиотека распределителя памяти Erlang Run-Time System. &lt;code&gt;erts_alloc_config&lt;/code&gt; предназначен для помощи в создании конфигурации &lt;code&gt;erts_alloc(3)&lt;/code&gt; которая подходит для ограниченного числа сценариев выполнения. Конфигурация, которую &lt;code&gt;erts_alloc_config&lt;/code&gt; является предложением и может потребовать ручной настройки .</target>
        </trans-unit>
        <trans-unit id="95026c5f783035878205a90f4cb4555ca1c9fa28" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erts_alloc(3)&lt;/code&gt;, &lt;code&gt;erl(1)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;erts_alloc(3)&lt;/code&gt; , &lt;code&gt;erl(1)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="68e02d443e095b148ffff877159464806e11f021" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erts_alloc(3)&lt;/code&gt;, &lt;code&gt;erl(1)&lt;/code&gt;, &lt;code&gt;io(3)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;erts_alloc(3)&lt;/code&gt; , &lt;code&gt;erl(1)&lt;/code&gt; , &lt;code&gt;io(3)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="658b0104deb072b5a8e17ebc4dd1534274ff60dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erts_alloc&lt;/code&gt; is an Erlang runtime system internal memory allocator library. &lt;code&gt;erts_alloc&lt;/code&gt; provides the Erlang runtime system with a number of memory allocators.</source>
          <target state="translated">&lt;code&gt;erts_alloc&lt;/code&gt; - это библиотека распределения внутренней памяти системы времени выполнения Erlang. &lt;code&gt;erts_alloc&lt;/code&gt; предоставляет системе времени выполнения Erlang ряд распределителей памяти.</target>
        </trans-unit>
        <trans-unit id="370d5868be6fac8c1b10ed1322a0d21f5022ecbe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erts_alloc&lt;/code&gt; is not obliged to strictly use the settings that have been passed to it (it can even ignore them).</source>
          <target state="translated">&lt;code&gt;erts_alloc&lt;/code&gt; не обязан строго использовать переданные ему настройки (он может даже игнорировать их).</target>
        </trans-unit>
        <trans-unit id="bbb376e06ce127dfb22a85316aa719e697c7b3e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erts_alloc_config&lt;/code&gt; is currently an experimental tool and might be subject to backward incompatible changes.</source>
          <target state="translated">&lt;code&gt;erts_alloc_config&lt;/code&gt; в настоящее время является экспериментальным инструментом и может подвергаться обратно несовместимым изменениям.</target>
        </trans-unit>
        <trans-unit id="0e5e5c670aa0173db46bdf3b49c89809166cfaa5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;erts_alloc_config&lt;/code&gt; saves information about runtime scenarios and performs computations in a server that is automatically started. The server register itself under the name &lt;code&gt;'__erts_alloc_config__'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;erts_alloc_config&lt;/code&gt; сохраняет информацию о сценариях выполнения и выполняет вычисления на сервере, который запускается автоматически. Сервер регистрируется под именем &lt;code&gt;'__erts_alloc_config__'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c6e621d5787597839455dcc92891d1cbff909ae1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;escript&lt;/code&gt; provides support for running short Erlang programs without having to compile them first, and an easy way to retrieve the command-line arguments.</source>
          <target state="translated">&lt;code&gt;escript&lt;/code&gt; обеспечивает поддержку запуска коротких программ на Erlang без необходимости их предварительной компиляции и простой способ получить аргументы командной строки.</target>
        </trans-unit>
        <trans-unit id="923c13835194b71ecffb751d0a9fc46ca90ebf18" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;escript&lt;/code&gt; runs a script written in Erlang.</source>
          <target state="translated">&lt;code&gt;escript&lt;/code&gt; запускает сценарий, написанный на Erlang.</target>
        </trans-unit>
        <trans-unit id="f3c95ecfec85bbad180888eae3642fcb4b398a54" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eshutdown&lt;/code&gt; - Cannot send after socket shutdown</source>
          <target state="translated">&lt;code&gt;eshutdown&lt;/code&gt; - Невозможно отправить после выключения сокета</target>
        </trans-unit>
        <trans-unit id="be442bbd7b626986bef7a3e9d34492da2887e492" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;esocktnosupport&lt;/code&gt; - Socket type not supported</source>
          <target state="translated">&lt;code&gt;esocktnosupport&lt;/code&gt; - Тип сокета не поддерживается</target>
        </trans-unit>
        <trans-unit id="3da6e627fa5069bddcb047c9829a058f0cc9b92f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;espipe&lt;/code&gt; - Invalid seek</source>
          <target state="translated">&lt;code&gt;espipe&lt;/code&gt; - Недействительный поиск</target>
        </trans-unit>
        <trans-unit id="5d99cde7dd1bcef9ce2943aadb4ecbfe6e28f43c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;esrch&lt;/code&gt; - No such process</source>
          <target state="translated">&lt;code&gt;esrch&lt;/code&gt; - Нет такого процесса</target>
        </trans-unit>
        <trans-unit id="43537a957d419bfe1cf591954ad9844fbb88e1ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;esrmnt&lt;/code&gt; - Srmount error</source>
          <target state="translated">&lt;code&gt;esrmnt&lt;/code&gt; - Ошибка подключения</target>
        </trans-unit>
        <trans-unit id="d321374d4998327a70229d5b61947b76054c84b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;estale&lt;/code&gt; - Stale remote file handle</source>
          <target state="translated">&lt;code&gt;estale&lt;/code&gt; - Устаревший дескриптор удаленного файла</target>
        </trans-unit>
        <trans-unit id="84c3404f080f386a5f54b535e2881b13895740ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;esuccess&lt;/code&gt; - Error 0</source>
          <target state="translated">&lt;code&gt;esuccess&lt;/code&gt; - Ошибка 0</target>
        </trans-unit>
        <trans-unit id="d828893783957c44cc9a5374156eb809901283c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;etags&lt;/code&gt; is a program that is part of the Emacs distribution. It is normally executed from a command line, like a unix shell or a DOS box.</source>
          <target state="translated">&lt;code&gt;etags&lt;/code&gt; - это программа, которая является частью дистрибутива Emacs. Обычно он выполняется из командной строки, как оболочка unix или окно DOS.</target>
        </trans-unit>
        <trans-unit id="049235ae709c3c7df1621c487c02748d53a4c649" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;etime&lt;/code&gt; - Timer expired</source>
          <target state="translated">&lt;code&gt;etime&lt;/code&gt; - Таймер истек</target>
        </trans-unit>
        <trans-unit id="6a7498e3491a6c3896e8f29e803459eaa6a5883b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;etimedout&lt;/code&gt; - Connection timed out</source>
          <target state="translated">&lt;code&gt;etimedout&lt;/code&gt; - Истекло время ожидания подключения</target>
        </trans-unit>
        <trans-unit id="2d425e09562b04579b949b00346af666eb229720" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;etoomanyrefs&lt;/code&gt; - Too many references</source>
          <target state="translated">&lt;code&gt;etoomanyrefs&lt;/code&gt; - слишком много ссылок</target>
        </trans-unit>
        <trans-unit id="7a995246edf0e806fcbf5ba45cc75e92eabb10f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;etop&lt;/code&gt; is a command line tool that can connect to remote nodes and display information similar to what the UNIX tool top shows.</source>
          <target state="translated">&lt;code&gt;etop&lt;/code&gt; - это инструмент командной строки, который может подключаться к удаленным узлам и отображать информацию, аналогичную той, что показывает верхняя часть инструментов UNIX.</target>
        </trans-unit>
        <trans-unit id="42facdd428b4102c19724fc2bdc7a4d3a66c9b05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;etop&lt;/code&gt; uses the Erlang trace facility, and thus no other tracing is possible on the measured node while &lt;code&gt;etop&lt;/code&gt; is running, unless this option is set to &lt;code&gt;off&lt;/code&gt;. Also helpful if the &lt;code&gt;etop&lt;/code&gt; tracing causes too high load on the measured node. With tracing off, runtime is not measured.</source>
          <target state="translated">&lt;code&gt;etop&lt;/code&gt; использует средство трассировки Erlang, и, следовательно, никакая другая трассировка на измеряемом узле во время работы &lt;code&gt;etop&lt;/code&gt; невозможна , если эта опция не &lt;code&gt;off&lt;/code&gt; . Также полезно, если трассировка &lt;code&gt;etop&lt;/code&gt; вызывает слишком высокую нагрузку на измеряемый узел. При отключенной трассировке время выполнения не измеряется.</target>
        </trans-unit>
        <trans-unit id="fc401f6cd9a2d36e07c3cf1d78783b78d1a3eed2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ets:match/2&lt;/code&gt; can be used:</source>
          <target state="translated">&lt;code&gt;ets:match/2&lt;/code&gt; можно использовать:</target>
        </trans-unit>
        <trans-unit id="b1b574263d8adbf3b35dace50b687638d4f62929" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ets:match/2&lt;/code&gt; uses a simpler type of match specification, but it is still unreadable, and one has little control over the returned result. It is always a list of lists.</source>
          <target state="translated">&lt;code&gt;ets:match/2&lt;/code&gt; используется более простой тип спецификации соответствия, но он по-прежнему нечитаем, и никто не может контролировать возвращаемый результат. Это всегда список списков.</target>
        </trans-unit>
        <trans-unit id="ada7ea1adf9a7618d24851cc46af35f4d10c76c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;etxtbsy&lt;/code&gt; - Text file or pseudo-device busy</source>
          <target state="translated">&lt;code&gt;etxtbsy&lt;/code&gt; - текстовый файл или псевдоустройство занято</target>
        </trans-unit>
        <trans-unit id="083cb827d71dd1a6114c058f15bd888df569133a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;euclean&lt;/code&gt; - Structure needs cleaning</source>
          <target state="translated">&lt;code&gt;euclean&lt;/code&gt; - Требуется очистка конструкции</target>
        </trans-unit>
        <trans-unit id="46f3f1bf6d759cafaec1d054c45a3fe6884ec756" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eunatch&lt;/code&gt; - Protocol driver not attached</source>
          <target state="translated">&lt;code&gt;eunatch&lt;/code&gt; - драйвер протокола не подключен</target>
        </trans-unit>
        <trans-unit id="bf7c59b5877e3b8c7849fc033914477748ab7802" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eusers&lt;/code&gt; - Too many users</source>
          <target state="translated">&lt;code&gt;eusers&lt;/code&gt; - Слишком много пользователей</target>
        </trans-unit>
        <trans-unit id="f2801a73f510bc70a1b17da34cd3262897d9abd6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eval(QH)&lt;/code&gt; is equivalent to &lt;code&gt;eval(QH, [])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;eval(QH)&lt;/code&gt; эквивалентен &lt;code&gt;eval(QH, [])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a9fdd159f121d70ae36287cfa787183d9208f811" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;event/4&lt;/code&gt; or &lt;code&gt;event/5&lt;/code&gt; is called whenever an event occurs in the &lt;code&gt;mod_security&lt;/code&gt; Erlang web server API module. (&lt;code&gt;event/4&lt;/code&gt; is called if &lt;code&gt;Address&lt;/code&gt; is undefined, otherwise &lt;code&gt;event/5&lt;/code&gt;. Argument &lt;code&gt;What&lt;/code&gt; specifies the type of event that has occurred and is one of the following reasons:</source>
          <target state="translated">&lt;code&gt;event/4&lt;/code&gt; или &lt;code&gt;event/5&lt;/code&gt; вызывается всякий раз, когда происходит событие в &lt;code&gt;mod_security&lt;/code&gt; API веб-сервера Erlang mod_security . ( &lt;code&gt;event/4&lt;/code&gt; вызывается , если &lt;code&gt;Address&lt;/code&gt; не определен, в противном случае &lt;code&gt;event/5&lt;/code&gt; Аргумент. &lt;code&gt;What&lt;/code&gt; определяет тип события , которое произошло , и это одна из следующих причин:</target>
        </trans-unit>
        <trans-unit id="d072a3b6d526de4f74b49703af037576bdfad4f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;event_module&lt;/code&gt;. Returns the name of the module that is the event handler callback module.</source>
          <target state="translated">&lt;code&gt;event_module&lt;/code&gt; . Возвращает имя модуля, который является модулем обратного вызова обработчика событий.</target>
        </trans-unit>
        <trans-unit id="402ed55637d27b6db5c346a697b27c4e23aecf6e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eversion&lt;/code&gt; - Version mismatch</source>
          <target state="translated">&lt;code&gt;eversion&lt;/code&gt; - Несоответствие версий</target>
        </trans-unit>
        <trans-unit id="647d5575d47453143c12212c48433892a90fd193" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ewouldblock&lt;/code&gt; - Operation would block</source>
          <target state="translated">&lt;code&gt;ewouldblock&lt;/code&gt; - операция будет заблокирована</target>
        </trans-unit>
        <trans-unit id="602c2395d81920b3a86446adde96bb734365f744" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;exceeded_recv_pending_limit&lt;/code&gt; - the pending limit was exceeded for this request.</source>
          <target state="translated">&lt;code&gt;exceeded_recv_pending_limit&lt;/code&gt; - для этого запроса превышен лимит ожидания.</target>
        </trans-unit>
        <trans-unit id="6b268350b68fa90a8d331488111c0e0759b39f7f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;exdev&lt;/code&gt; - Cross-domain link</source>
          <target state="translated">&lt;code&gt;exdev&lt;/code&gt; - Междоменная ссылка</target>
        </trans-unit>
        <trans-unit id="f1ccd99602a56cc38a8aa304df9bea1e99ee891b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;exfull&lt;/code&gt; - Message tables full</source>
          <target state="translated">&lt;code&gt;exfull&lt;/code&gt; - Таблицы сообщений заполнены</target>
        </trans-unit>
        <trans-unit id="60af1af3777d71cfb1fd237bb62937ec1d06ed92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;exit&lt;/code&gt; - Attach when a process terminates.</source>
          <target state="translated">&lt;code&gt;exit&lt;/code&gt; - Присоединиться, когда процесс завершится.</target>
        </trans-unit>
        <trans-unit id="1c1059adcf3427060a2029651784203116bcc11d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;exit&lt;/code&gt; - The process is terminated. &lt;code&gt;Info=ExitReason&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;exit&lt;/code&gt; - процесс завершен. &lt;code&gt;Info=ExitReason&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9f3609f531c6a4767738d2bcd3db8440c4cc3ea7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;exit_after/2&lt;/code&gt; is the same as &lt;code&gt;exit_after(Time, self(), Reason1)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;exit_after/2&lt;/code&gt; совпадает с &lt;code&gt;exit_after(Time, self(), Reason1)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="118d8c64ed002fe7fab5312cc2217b8f07167d7a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;exit_after/3&lt;/code&gt; sends an exit signal with reason &lt;code&gt;Reason1&lt;/code&gt; to pid &lt;code&gt;Pid&lt;/code&gt;. Returns &lt;code&gt;{ok, TRef}&lt;/code&gt; or &lt;code&gt;{error, Reason2}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;exit_after/3&lt;/code&gt; отправляет сигнал выхода с причиной &lt;code&gt;Reason1&lt;/code&gt; на pid &lt;code&gt;Pid&lt;/code&gt; . Возвращает &lt;code&gt;{ok, TRef}&lt;/code&gt; или &lt;code&gt;{error, Reason2}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="57a4da802d829e65d707a43afdecdefa889b176e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extra_db_nodes&lt;/code&gt;. Returns a list of extra &lt;code&gt;db_nodes&lt;/code&gt; to be contacted at startup.</source>
          <target state="translated">&lt;code&gt;extra_db_nodes&lt;/code&gt; . Возвращает список дополнительных &lt;code&gt;db_nodes&lt;/code&gt; , с которыми нужно связаться при запуске.</target>
        </trans-unit>
        <trans-unit id="f67bbcd2f5db6c737e1cdcaf62c45bea5806d3ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extract/1&lt;/code&gt; and &lt;code&gt;extract/2&lt;/code&gt; are provided as synonyms to resemble module &lt;code&gt;&lt;a href=&quot;erl_tar&quot;&gt;erl_tar&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;extract/1&lt;/code&gt; и &lt;code&gt;extract/2&lt;/code&gt; предоставляются как синонимы, чтобы напоминать модуль &lt;code&gt;&lt;a href=&quot;erl_tar&quot;&gt;erl_tar&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bad8d8a74a2c1e67fba0103c4e0b9e8fc42f8bad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;f&lt;/code&gt; is a value to be converted to an Erlang float.</source>
          <target state="translated">&lt;code&gt;f&lt;/code&gt; - это значение, которое нужно преобразовать в число с плавающей запятой Эрланга.</target>
        </trans-unit>
        <trans-unit id="8abcbec2f75b3c23ae1c64ef59eb60038bca7348" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;f&lt;/code&gt; is the floating point value to assign.</source>
          <target state="translated">&lt;code&gt;f&lt;/code&gt; - значение с плавающей запятой, которое нужно присвоить.</target>
        </trans-unit>
        <trans-unit id="710e9ee5a7d68edae919806d740836a6e6769825" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;failure()&lt;/code&gt; indicates an local or external error and can be one of the following:</source>
          <target state="translated">&lt;code&gt;failure()&lt;/code&gt; указывает на локальную или внешнюю ошибку и может быть одним из следующих:</target>
        </trans-unit>
        <trans-unit id="c2469c8655cb917a2bb9031e6447254c2660c34c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fallback_activated&lt;/code&gt;. Returns &lt;code&gt;true&lt;/code&gt; if a fallback is activated, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;fallback_activated&lt;/code&gt; . Возвращает &lt;code&gt;true&lt;/code&gt; , если активирован откат, иначе &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="60075ae08f50200bea797fc51fb20fd327586f4f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt; if a trace message is not to be emitted</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; , если сообщение трассировки не должно отправляться</target>
        </trans-unit>
        <trans-unit id="691de5e0cb4604679c034ecba0f7307479b83501" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt; if the user or password is invalid</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; , если пользователь или пароль недействительны</target>
        </trans-unit>
        <trans-unit id="92bf1a588f04ff032c351f4a75c7475ff39b9c13" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt; is returned if the object is not defined in any loaded MIB.</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; возвращается, если объект не определен ни в одной загруженной MIB.</target>
        </trans-unit>
        <trans-unit id="8ab5542919b9a6acd08b698295fc02f6c85b9d2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt; is returned if the object or type is not defined in any loaded MIB, or if it does not define the symbolic value as enumerated.</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; возвращается, если объект или тип не определены ни в одной загруженной MIB или если они не определяют символическое значение как перечисленное.</target>
        </trans-unit>
        <trans-unit id="8cf27dbee3f5798e5fa468395970992d97c075a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;family_field(Family1)&lt;/code&gt; is equivalent to &lt;code&gt;family_union(family_domain(Family1), family_range(Family1))&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;family_field(Family1)&lt;/code&gt; эквивалентно &lt;code&gt;family_union(family_domain(Family1), family_range(Family1))&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3854004da408f511ea42cc065efe9087aef81ab0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;family_union(F)&lt;/code&gt; is equivalent to &lt;code&gt;family_projection(fun sofs:union/1,&amp;nbsp;F)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;family_union(F)&lt;/code&gt; эквивалентно &lt;code&gt;family_projection(fun sofs:union/1,&amp;nbsp;F)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2e799cbff48f1a907111621ca53afcebf32efbdf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fcgi&lt;/code&gt; - Fast CGI</source>
          <target state="translated">&lt;code&gt;fcgi&lt;/code&gt; - Быстрый CGI</target>
        </trans-unit>
        <trans-unit id="71f8b0c3fdcfff764a1aed30bb055ba063f18789" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fd&lt;/code&gt; is an open connection to Erlang. &lt;code&gt;Mnesia&lt;/code&gt; 3.0 or later must be running on the Erlang node.</source>
          <target state="translated">&lt;code&gt;fd&lt;/code&gt; - это открытое соединение с Erlang. На узле Erlang должна быть запущена &lt;code&gt;Mnesia&lt;/code&gt; 3.0 или более поздняя версия.</target>
        </trans-unit>
        <trans-unit id="c5ec650d9bc77e0e1686955a7fe9bc4c0e0189bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fd&lt;/code&gt; is an open descriptor to an Erlang connection.</source>
          <target state="translated">&lt;code&gt;fd&lt;/code&gt; - это открытый дескриптор соединения Erlang.</target>
        </trans-unit>
        <trans-unit id="f656dcfaaac691553d45cbf7a151c9b166ddc18f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fd&lt;/code&gt; is an open descriptor to an Erlang connection. It is obtained from a previous &lt;code&gt;ei_connect&lt;/code&gt; or &lt;code&gt;ei_accept&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;fd&lt;/code&gt; - это открытый дескриптор соединения Erlang. Он получен из предыдущего &lt;code&gt;ei_connect&lt;/code&gt; или &lt;code&gt;ei_accept&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3fa5627f362a188635bb87aa757264405865e18d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;field(R)&lt;/code&gt; is equivalent to &lt;code&gt;union(domain(R), range(R))&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;field(R)&lt;/code&gt; эквивалентно &lt;code&gt;union(domain(R), range(R))&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="88a3db78fcb0a551e7d60442210a1053b3e2932b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;file(3)&lt;/code&gt;&lt;code&gt;filename(3)&lt;/code&gt; and J. Postel and J. Reynolds: File Transfer Protocol (&lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc959.txt&quot;&gt;RFC 959&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;file(3)&lt;/code&gt; &lt;code&gt;filename(3)&lt;/code&gt; и J. Postel и J. Reynolds: File Transfer Protocol ( &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc959.txt&quot;&gt;RFC 959&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="ae107562ea3ff90c303c98876ec07e8a82752603" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;file&lt;/code&gt; (use host data retrieved from system configuration files and/or the user configuration file)</source>
          <target state="translated">&lt;code&gt;file&lt;/code&gt; (используйте данные хоста, полученные из файлов конфигурации системы и / или файла конфигурации пользователя)</target>
        </trans-unit>
        <trans-unit id="e166683d3f6708ae36021cc46bb7886dd1a606ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;files/1,2&lt;/code&gt; does exactly the same thing as &lt;code&gt;all/0,1&lt;/code&gt; but for the specified &lt;code&gt;ModFiles&lt;/code&gt;, which is a list of module or file names. The file extension &lt;code&gt;.erl&lt;/code&gt; may be omitted.</source>
          <target state="translated">&lt;code&gt;files/1,2&lt;/code&gt; делает то же самое, что и &lt;code&gt;all/0,1&lt;/code&gt; , но для указанного &lt;code&gt;ModFiles&lt;/code&gt; , который представляет собой список имен модулей или файлов. Расширение файла &lt;code&gt;.erl&lt;/code&gt; можно не указывать.</target>
        </trans-unit>
        <trans-unit id="5432ba00c886379b53d593a55e1fa224fcc98201" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;filter&lt;/code&gt; takes a predicate of one argument and a list and returns all elements in the list that satisfy the predicate:</source>
          <target state="translated">&lt;code&gt;filter&lt;/code&gt; принимает предикат из одного аргумента и списка и возвращает все элементы в списке, которые удовлетворяют этому предикату:</target>
        </trans-unit>
        <trans-unit id="a94764c4b442f372ab753c4167e78edef5fc2f32" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;filtered&lt;/code&gt; for data produced by a filter (or predictor)</source>
          <target state="translated">&lt;code&gt;filtered&lt;/code&gt; для данных, созданных фильтром (или предсказателем)</target>
        </trans-unit>
        <trans-unit id="51bcc70ead8fb8bc2ab7ac0e1c47dccadf16d1f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;first_next&lt;/code&gt; - The table is traversed one key at a time by calling &lt;code&gt;dets:first/1&lt;/code&gt; and &lt;code&gt;dets:next/2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;first_next&lt;/code&gt; - таблица просматривается по одному ключу за раз, вызывая &lt;code&gt;dets:first/1&lt;/code&gt; и &lt;code&gt;dets:next/2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7974437ce9ad4bbc04754256eae30cd9612e597c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;flags : integer&lt;/code&gt; :: Flags. Ex. &lt;code&gt;1&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;flags : integer&lt;/code&gt; :: флаги. Ex. &lt;code&gt;1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cf65ddbad42b1d629c4b6ca8ef8bcda3605fd18f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;flags&lt;/code&gt; can be used to indicate that the NIF is a &lt;code&gt;&lt;a href=&quot;#dirty_nifs&quot;&gt;dirty NIF&lt;/a&gt;&lt;/code&gt; that is to be executed on a dirty scheduler thread.</source>
          <target state="translated">&lt;code&gt;flags&lt;/code&gt; могут использоваться, чтобы указать, что NIF - это &lt;code&gt;&lt;a href=&quot;#dirty_nifs&quot;&gt;dirty NIF&lt;/a&gt;&lt;/code&gt; который должен выполняться в грязном потоке планировщика.</target>
        </trans-unit>
        <trans-unit id="c858ca62bcf9034a74cbe5df92bfb1e723cebb8d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;flags&lt;/code&gt; indicates the type of object that you are looking for. If &lt;code&gt;flags&lt;/code&gt; is &lt;code&gt;0&lt;/code&gt;, any kind of object is returned. If &lt;code&gt;flags&lt;/code&gt; is &lt;code&gt;EI_INT&lt;/code&gt;, &lt;code&gt;EI_FLT&lt;/code&gt;, &lt;code&gt;EI_STR&lt;/code&gt;, or &lt;code&gt;EI_BIN&lt;/code&gt;, then only values of that kind are returned.</source>
          <target state="translated">&lt;code&gt;flags&lt;/code&gt; указывает тип объекта, который вы ищете. Если &lt;code&gt;flags&lt;/code&gt; равен &lt;code&gt;0&lt;/code&gt; , возвращается любой тип объекта. Если &lt;code&gt;flags&lt;/code&gt; - &lt;code&gt;EI_INT&lt;/code&gt; , &lt;code&gt;EI_FLT&lt;/code&gt; , &lt;code&gt;EI_STR&lt;/code&gt; или &lt;code&gt;EI_BIN&lt;/code&gt; , то возвращаются только значения этого типа.</target>
        </trans-unit>
        <trans-unit id="7026828ff9a171c85e41a7ecb9f0d2892a14feae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;flags&lt;/code&gt; indicates the type of the object specified by &lt;code&gt;v&lt;/code&gt;. Flags must be one of &lt;code&gt;EI_INT&lt;/code&gt;, &lt;code&gt;EI_FLT&lt;/code&gt;, &lt;code&gt;EI_STR&lt;/code&gt;, and &lt;code&gt;EI_BIN&lt;/code&gt;, indicating whether &lt;code&gt;v&lt;/code&gt; is &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;char*&lt;/code&gt;, or &lt;code&gt;void*&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;flags&lt;/code&gt; указывает тип объекта, указанного в &lt;code&gt;v&lt;/code&gt; . Флаги должны быть одним из &lt;code&gt;EI_INT&lt;/code&gt; , &lt;code&gt;EI_FLT&lt;/code&gt; , &lt;code&gt;EI_STR&lt;/code&gt; и &lt;code&gt;EI_BIN&lt;/code&gt; , указывая, является ли &lt;code&gt;v&lt;/code&gt; &lt;code&gt;int&lt;/code&gt; , &lt;code&gt;double&lt;/code&gt; , &lt;code&gt;char*&lt;/code&gt; или &lt;code&gt;void*&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d1184739e754d1651142d3172c8ebc5daed12ca8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;flatlength/1&lt;/code&gt; computes the size of the possibly nested list &lt;code&gt;NestedList&lt;/code&gt;, which can contain binaries.</source>
          <target state="translated">&lt;code&gt;flatlength/1&lt;/code&gt; вычисляет размер возможно вложенного списка &lt;code&gt;NestedList&lt;/code&gt; , который может содержать двоичные файлы.</target>
        </trans-unit>
        <trans-unit id="d74b4f2af562e2114e0b51bbff230bb4388dd991" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;flex&lt;/code&gt; -- Headers and libraries are needed to build the flex scanner for the &lt;code&gt;megaco&lt;/code&gt; application on Unix/Linux.</source>
          <target state="translated">&lt;code&gt;flex&lt;/code&gt; - заголовки и библиотеки необходимы для создания сканера гибкости для приложения &lt;code&gt;megaco&lt;/code&gt; в Unix / Linux.</target>
        </trans-unit>
        <trans-unit id="74fcf3c78913fbf821758d89dc44c494d6454f23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;flex&lt;/code&gt; will result in the start of the flex scanner with default options.</source>
          <target state="translated">&lt;code&gt;flex&lt;/code&gt; приведет к запуску сканера гибкости с параметрами по умолчанию.</target>
        </trans-unit>
        <trans-unit id="04d9e76a3083198e0e59eb9805b99dc252f52cde" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;float&lt;/code&gt;&lt;code&gt;fun_type&lt;/code&gt;&lt;code&gt;integer&lt;/code&gt;&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;operator&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;float&lt;/code&gt;&lt;code&gt;fun_type&lt;/code&gt;&lt;code&gt;integer&lt;/code&gt;&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;operator&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8a2dfdcae3e72af0b397272b11d334a775438639" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fold(Function, Acc0, QH)&lt;/code&gt; is equivalent to &lt;code&gt;fold(Function, Acc0, QH, [])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;fold(Function, Acc0, QH)&lt;/code&gt; эквивалентна &lt;code&gt;fold(Function, Acc0, QH, [])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1c9191670935d46aa880cfa8823a02f644b56726" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;foldl/3&lt;/code&gt; is tail recursive and is usually preferred to &lt;code&gt;foldr/3&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;foldl/3&lt;/code&gt; является хвостовой рекурсивной и обычно предпочтительнее &lt;code&gt;foldr/3&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="04cf8d6f179bfc7ed5f275591a68540638d661bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;foldl&lt;/code&gt; returns the same term as the last call to &lt;code&gt;Function&lt;/code&gt; returned.</source>
          <target state="translated">&lt;code&gt;foldl&lt;/code&gt; возвращает тот же термин, что и последний вызов возвращенной &lt;code&gt;Function&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d7383e57980283ddf219642ad6992f8786be273a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;foldl&lt;/code&gt; takes a function of two arguments, an accumulator and a list:</source>
          <target state="translated">&lt;code&gt;foldl&lt;/code&gt; принимает функцию двух аргументов, аккумулятора и списка:</target>
        </trans-unit>
        <trans-unit id="a980ecb6db0f72525911b3c138d4624899757f5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;foldl&lt;/code&gt; works like a &lt;code&gt;while&lt;/code&gt; loop in an imperative language:</source>
          <target state="translated">&lt;code&gt;foldl&lt;/code&gt; работает как в &lt;code&gt;while&lt;/code&gt; цикл в императивном языке:</target>
        </trans-unit>
        <trans-unit id="12ddc2a809fd7bd86fa64a14a9b0ed6d0aafdc5f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fop&lt;/code&gt; -- Apache FOP print formatter (requires Java). Can be downloaded from &lt;code&gt;&lt;a href=&quot;http://xmlgraphics.apache.org/fop&quot;&gt;http://xmlgraphics.apache.org/fop&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;fop&lt;/code&gt; - форматтер печати Apache FOP (требуется Java). Можно загрузить с &lt;code&gt;&lt;a href=&quot;http://xmlgraphics.apache.org/fop&quot;&gt;http://xmlgraphics.apache.org/fop&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bedcbc2018e10c74468d728a87e55c720602281d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;foreach&lt;/code&gt; is evaluated for its side-effect and not its value. &lt;code&gt;foreach(Fun ,L)&lt;/code&gt; calls &lt;code&gt;Fun(X)&lt;/code&gt; for each element &lt;code&gt;X&lt;/code&gt; in &lt;code&gt;L&lt;/code&gt; and the processing occurs in the order that the elements were defined in &lt;code&gt;L&lt;/code&gt;. &lt;code&gt;map&lt;/code&gt; does not define the order in which its elements are processed.</source>
          <target state="translated">&lt;code&gt;foreach&lt;/code&gt; оценивается по побочным эффектам, а не по ценности. &lt;code&gt;foreach(Fun ,L)&lt;/code&gt; называет &lt;code&gt;Fun(X)&lt;/code&gt; для каждого элемента &lt;code&gt;X&lt;/code&gt; в &lt;code&gt;L&lt;/code&gt; , и обработка происходит в том порядке , что элементы были определены в &lt;code&gt;L&lt;/code&gt; . &lt;code&gt;map&lt;/code&gt; не определяет порядок, в котором обрабатываются его элементы.</target>
        </trans-unit>
        <trans-unit id="d703eafa2f7859dc0a44a15d49ee91bb344ed005" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;foreach&lt;/code&gt; is used to set up a fixture and optionally tear it down afterwards, repeated for each single one of the specified test sets.</source>
          <target state="translated">&lt;code&gt;foreach&lt;/code&gt; используется для настройки приспособления и, при необходимости, его последующего снятия, повторяется для каждого отдельного из указанных наборов тестов.</target>
        </trans-unit>
        <trans-unit id="56fd27fe59112334feaeed6957c8dbff87298ad2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;foreach&lt;/code&gt; takes a function of one argument and a list of terms:</source>
          <target state="translated">&lt;code&gt;foreach&lt;/code&gt; принимает функцию одного аргумента и списка терминов:</target>
        </trans-unit>
        <trans-unit id="4fd5bd17516785e7ede0ee6695159118bb728df0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;foreachx&lt;/code&gt; is like &lt;code&gt;foreach&lt;/code&gt;, but uses a list of pairs, each containing an extra argument &lt;code&gt;X&lt;/code&gt; and an extended instantiator function.</source>
          <target state="translated">&lt;code&gt;foreachx&lt;/code&gt; похож на &lt;code&gt;foreach&lt;/code&gt; , но использует список пар, каждая из которых содержит дополнительный аргумент &lt;code&gt;X&lt;/code&gt; и расширенную функцию создания экземпляра.</target>
        </trans-unit>
        <trans-unit id="5c71dc112956ef23a5424e4aff313183bf49b551" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;forget/1&lt;/code&gt; and &lt;code&gt;forget/2&lt;/code&gt; remove all or some of the &lt;code&gt;&lt;a href=&quot;#user_variable&quot;&gt;user variables&lt;/a&gt;&lt;/code&gt; of an &lt;code&gt;&lt;a href=&quot;#xref_server&quot;&gt;xref server&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;forget/1&lt;/code&gt; и &lt;code&gt;forget/2&lt;/code&gt; удалить все или некоторые из &lt;code&gt;&lt;a href=&quot;#user_variable&quot;&gt;user variables&lt;/a&gt;&lt;/code&gt; в качестве &lt;code&gt;&lt;a href=&quot;#xref_server&quot;&gt;xref server&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f00ae3ff9af5cc09d1f13d0f3746886336de4af2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;form_list&lt;/code&gt;&lt;code&gt;function&lt;/code&gt;&lt;code&gt;warning_marker&lt;/code&gt;&lt;code&gt;text&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;form_list&lt;/code&gt;&lt;code&gt;function&lt;/code&gt;&lt;code&gt;warning_marker&lt;/code&gt;&lt;code&gt;text&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="610ce2e022ce5a4fd6884f8f718789dd55a1503e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;formatter =&amp;gt; {logger_formatter, DefaultFormatterConfig&lt;/code&gt;}</source>
          <target state="translated">&lt;code&gt;formatter =&amp;gt; {logger_formatter, DefaultFormatterConfig&lt;/code&gt; }</target>
        </trans-unit>
        <trans-unit id="efa356d7300f5cd22345e642cd285b2f01a4f7b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fprof&lt;/code&gt; can also skip the file step and trace to a tracer process that does the profiling in runtime.</source>
          <target state="translated">&lt;code&gt;fprof&lt;/code&gt; также может пропустить этап файла и отследить процесс трассировки, который выполняет профилирование во время выполнения.</target>
        </trans-unit>
        <trans-unit id="3fe51a77f60d52398c4a8e87c24c7b8fa78fef7a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fprof&lt;/code&gt; is a profiling tool that can be used to get a picture of how much processing time different functions consumes and in which processes.</source>
          <target state="translated">&lt;code&gt;fprof&lt;/code&gt; - это инструмент профилирования, который можно использовать, чтобы получить представление о том, сколько времени обработки потребляют различные функции и в каких процессах.</target>
        </trans-unit>
        <trans-unit id="2380ad9f8becb6453300ae34891cf4b2cdc38957" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fprof&lt;/code&gt; is based on trace to file to minimize runtime performance impact. Using &lt;code&gt;fprof&lt;/code&gt; is just a matter of calling a few library functions, see the &lt;code&gt;fprof&lt;/code&gt; manual page in Tools.</source>
          <target state="translated">&lt;code&gt;fprof&lt;/code&gt; основан на трассировке до файла, чтобы минимизировать влияние на производительность во время выполнения. Использование &lt;code&gt;fprof&lt;/code&gt; - это всего лишь вызов нескольких библиотечных функций, см. &lt;code&gt;fprof&lt;/code&gt; руководства fprof в разделе Инструменты.</target>
        </trans-unit>
        <trans-unit id="e0651f71599e95f3f7558bb0b476db9a8cb6717d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fprof&lt;/code&gt; measures the execution time for each function, both own time, that is, how much time a function has used for its own execution, and accumulated time, that is, including called functions. The values are displayed per process. You also get to know how many times each function has been called.</source>
          <target state="translated">&lt;code&gt;fprof&lt;/code&gt; измеряет время выполнения для каждой функции, как собственное время, то есть сколько времени функция использовала для своего собственного выполнения, так и накопленное время, то есть включая вызываемые функции. Значения отображаются для каждого процесса. Вы также узнаете, сколько раз была вызвана каждая функция.</target>
        </trans-unit>
        <trans-unit id="ac2c5cd2f94fa13cc2b4ab8dc8bf96fda7723eee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fprof&lt;/code&gt; presents both &lt;strong&gt;own time&lt;/strong&gt; i.e how much time a function has used for its own execution, and &lt;strong&gt;accumulated time&lt;/strong&gt; i.e including called functions. All presented times are collected using trace timestamps. &lt;code&gt;fprof&lt;/code&gt; tries to collect cpu time timestamps, if the host machine OS supports it. Therefore the times may be wallclock times and OS scheduling will randomly strike all called functions in a presumably fair way.</source>
          <target state="translated">&lt;code&gt;fprof&lt;/code&gt; представляет как &lt;strong&gt;собственное время,&lt;/strong&gt; т.е. сколько времени функция использовала для своего собственного выполнения, так и &lt;strong&gt;накопленное время,&lt;/strong&gt; то есть включая вызываемые функции. Все представленные значения времени собраны с использованием меток времени трассировки. &lt;code&gt;fprof&lt;/code&gt; пытается собрать временные метки процессора, если ОС хост-машины это поддерживает. Таким образом, это может быть время настенного времени, и планирование ОС будет случайным образом поражать все вызываемые функции предположительно справедливым образом.</target>
        </trans-unit>
        <trans-unit id="fe28aa0072f7e8bf4af0009cc2b0fb9c81ff3dde" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fprof&lt;/code&gt; presents wall clock times from the host machine OS, with the assumption that OS scheduling will randomly load the profiled functions in a fair way. Both &lt;strong&gt;own time&lt;/strong&gt; i.e the time used by a function for its own execution, and &lt;strong&gt;accumulated time&lt;/strong&gt; i.e execution time including called functions.</source>
          <target state="translated">&lt;code&gt;fprof&lt;/code&gt; представляет время настенных часов из ОС хост-машины, при условии, что планирование ОС будет произвольно загружать профилированные функции справедливым образом. Как &lt;strong&gt;собственное время,&lt;/strong&gt; то есть время, используемое функцией для ее собственного выполнения, так и &lt;strong&gt;накопленное время,&lt;/strong&gt; то есть время выполнения, включая вызываемые функции.</target>
        </trans-unit>
        <trans-unit id="a92fbd44c76bf7c734ba1bee78aed13fedb670b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fprof&lt;/code&gt; provides the most detailed information about where the program time is spent, but it significantly slows down the program it profiles.</source>
          <target state="translated">&lt;code&gt;fprof&lt;/code&gt; предоставляет наиболее подробную информацию о том, на что тратится время программы, но значительно замедляет профилируемую программу.</target>
        </trans-unit>
        <trans-unit id="5f19df80da559208071940bf6f95e75083056945" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fprof&lt;/code&gt; uses tracing with timestamps to collect profiling data. Therfore there is no need for special compilation of any module to be profiled.</source>
          <target state="translated">&lt;code&gt;fprof&lt;/code&gt; использует трассировку с отметками времени для сбора данных профилирования. Таким образом, нет необходимости в специальной компиляции какого-либо профилируемого модуля.</target>
        </trans-unit>
        <trans-unit id="e277f356c9acf9d949db5fc2d6cccc75c8f7d1e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;freed&lt;/code&gt; is the length of the freelist, where blocks are placed when they are released by &lt;code&gt;erl_free_term()&lt;/code&gt; and &lt;code&gt;erl_free_compound()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;freed&lt;/code&gt; - это длина &lt;code&gt;erl_free_term()&lt;/code&gt; , в который помещаются блоки после их освобождения с помощью erl_free_term () и &lt;code&gt;erl_free_compound()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e1e8867e117c12deea9b78559ed6b7640546dad9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;from : string&lt;/code&gt; :: Process ID or Port ID. Ex. &lt;code&gt;&quot;&amp;lt;0.131.0&amp;gt;&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;from : string&lt;/code&gt; :: ID процесса или ID порта. Ex. &lt;code&gt;&quot;&amp;lt;0.131.0&amp;gt;&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a127c73f210bc87afb69376ea85cedf158139fee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;from : string&lt;/code&gt; :: Process ID. Ex. &lt;code&gt;&quot;&amp;lt;0.131.0&amp;gt;&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;from : string&lt;/code&gt; :: ID процесса. Ex. &lt;code&gt;&quot;&amp;lt;0.131.0&amp;gt;&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cef5c56cbd60fbf9774a4484f7312c970e9fc9f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;from_term&lt;/code&gt; can be used for creating atomic or ordered sets. The only purpose of such a set is that of later building unordered sets, as all functions in this module that &lt;strong&gt;do&lt;/strong&gt; anything operate on unordered sets. Creating unordered sets from a collection of ordered sets can be the way to go if the ordered sets are big and one does not want to waste heap by rebuilding the elements of the unordered set. The following example shows that a set can be built &quot;layer by layer&quot;:</source>
          <target state="translated">&lt;code&gt;from_term&lt;/code&gt; можно использовать для создания атомарных или упорядоченных наборов. Единственная цель такого набора - это последующее построение неупорядоченных наборов, поскольку все функции в этом модуле, которые &lt;strong&gt;что-&lt;/strong&gt; либо &lt;strong&gt;делают,&lt;/strong&gt; работают с неупорядоченными наборами. Создание неупорядоченных наборов из коллекции упорядоченных наборов может быть подходящим вариантом, если упорядоченные наборы велики и никто не хочет тратить кучу напрасно, перестраивая элементы неупорядоченного набора. В следующем примере показано, что набор может быть построен &amp;laquo;слой за слоем&amp;raquo;:</target>
        </trans-unit>
        <trans-unit id="5f43d0c2eeca9964a6809b3f352521aa472473ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fun fresh_crl/2&lt;/code&gt; will be used as input option &lt;code&gt;update_crl&lt;/code&gt; to &lt;code&gt;public_key:pkix_crls_validate/3&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;fun fresh_crl/2&lt;/code&gt; будет использоваться как параметр ввода &lt;code&gt;update_crl&lt;/code&gt; для &lt;code&gt;public_key:pkix_crls_validate/3&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9ddcb04653f095ae99c208679aa62928da9bbca4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fun&lt;/code&gt; is the name of the function to run.</source>
          <target state="translated">&lt;code&gt;fun&lt;/code&gt; - это имя запускаемой функции.</target>
        </trans-unit>
        <trans-unit id="bbead72e2d93c2b28399e3cd53d75a097b878521" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;funcs&lt;/code&gt; is a static array of function descriptors for all the implemented NIFs in this library.</source>
          <target state="translated">&lt;code&gt;funcs&lt;/code&gt; - это статический массив дескрипторов функций для всех реализованных NIF в этой библиотеке.</target>
        </trans-unit>
        <trans-unit id="caba8665f73b66e1d73b83a0e84d50c336b865da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;genErr&lt;/code&gt;(SNMPv1)</source>
          <target state="translated">&lt;code&gt;genErr&lt;/code&gt;(SNMPv1)</target>
        </trans-unit>
        <trans-unit id="088bc3d713ad96f8f563cfc0d235b8f6b27c13b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;genErr&lt;/code&gt;. Used if an error occurred. Note that this should be an internal processing error, e.g. a caused by a programing fault somewhere. If some column does not exist, use &lt;code&gt;{noValue, noSuchName}&lt;/code&gt; or &lt;code&gt;{noValue, noSuchInstance}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;genErr&lt;/code&gt; . Используется, если произошла ошибка. Обратите внимание, что это должна быть внутренняя ошибка обработки, например, вызванная ошибкой программирования. Если какой-либо столбец не существует, используйте &lt;code&gt;{noValue, noSuchName}&lt;/code&gt; или &lt;code&gt;{noValue, noSuchInstance}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c4b15564b3f657fea0a7a4683b8b9183417b2490" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;genErr&lt;/code&gt;. Used if an error occurred. Note, this should be an internal processing error, e.g. a caused by a programing fault somewhere. If the variable does not exist, use &lt;code&gt;{noValue, noSuchName}&lt;/code&gt; or &lt;code&gt;{noValue, noSuchInstance}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;genErr&lt;/code&gt; . Используется, если произошла ошибка. Обратите внимание, это должна быть внутренняя ошибка обработки, например, вызванная ошибкой программирования. Если переменная не существует, используйте &lt;code&gt;{noValue, noSuchName}&lt;/code&gt; или &lt;code&gt;{noValue, noSuchInstance}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="daa48225a7f95c221293572ba86a3622a59538be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gen_event(3)&lt;/code&gt;, &lt;code&gt;logger(3)&lt;/code&gt;, &lt;code&gt;log_mf_h(3)&lt;/code&gt;, &lt;code&gt;kernel(6)&lt;/code&gt;, &lt;code&gt;sasl(6)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;gen_event(3)&lt;/code&gt; , &lt;code&gt;logger(3)&lt;/code&gt; , &lt;code&gt;log_mf_h(3)&lt;/code&gt; , &lt;code&gt;kernel(6)&lt;/code&gt; , &lt;code&gt;sasl(6)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c4c26a8d6d446889b7679693876dc59c6aa2cace" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gen_event:start_link&lt;/code&gt; must be used if the event manager is part of a supervision tree, that is, started by a supervisor. There is another function, &lt;code&gt;gen_event:start&lt;/code&gt;, to start a standalone event manager, that is, an event manager that is not part of a supervision tree.</source>
          <target state="translated">&lt;code&gt;gen_event:start_link&lt;/code&gt; необходимо использовать, если менеджер событий является частью дерева супервизора, то есть запущен супервизором. Существует еще одна функция, &lt;code&gt;gen_event:start&lt;/code&gt; , для запуска автономного диспетчера событий, то есть диспетчера событий, который не является частью дерева наблюдения.</target>
        </trans-unit>
        <trans-unit id="c3326920226e31e863ef987e5e66516c9a795a98" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gen_server:start_link&lt;/code&gt; is synchronous. It does not return until the &lt;code&gt;gen_server&lt;/code&gt; has been initialized and is ready to receive requests.</source>
          <target state="translated">&lt;code&gt;gen_server:start_link&lt;/code&gt; синхронно. Он не возвращается, пока &lt;code&gt;gen_server&lt;/code&gt; не будет инициализирован и не будет готов принимать запросы.</target>
        </trans-unit>
        <trans-unit id="fec974a8ca4f720c2183784b14d9eeffe9f4c01b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gen_server:start_link&lt;/code&gt; must be used if the &lt;code&gt;gen_server&lt;/code&gt; is part of a supervision tree, that is, started by a supervisor. There is another function, &lt;code&gt;gen_server:start&lt;/code&gt;, to start a standalone &lt;code&gt;gen_server&lt;/code&gt;, that is, a &lt;code&gt;gen_server&lt;/code&gt; that is not part of a supervision tree.</source>
          <target state="translated">&lt;code&gt;gen_server:start_link&lt;/code&gt; необходимо использовать, если &lt;code&gt;gen_server&lt;/code&gt; является частью дерева супервизора, то есть запущен супервизором. Есть еще одна функция, &lt;code&gt;gen_server:start&lt;/code&gt; , для запуска автономного &lt;code&gt;gen_server&lt;/code&gt; , то есть &lt;code&gt;gen_server&lt;/code&gt; , который не является частью дерева надзора.</target>
        </trans-unit>
        <trans-unit id="69c3808d97812c478604c1ee7338f86c0e5166ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gen_statem&lt;/code&gt; has got the same features that &lt;code&gt;&lt;a href=&quot;gen_fsm&quot;&gt;gen_fsm&lt;/a&gt;&lt;/code&gt; had and adds some really useful:</source>
          <target state="translated">&lt;code&gt;gen_statem&lt;/code&gt; имеет те же функции, что и &lt;code&gt;&lt;a href=&quot;gen_fsm&quot;&gt;gen_fsm&lt;/a&gt;&lt;/code&gt; , и добавляет несколько действительно полезных:</target>
        </trans-unit>
        <trans-unit id="7b7677dfa28038792b14524f84d7e0b361703437" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gen_statem&lt;/code&gt; provides a generic state machine behaviour and replaces its predecessor &lt;code&gt;&lt;a href=&quot;gen_fsm&quot;&gt;gen_fsm&lt;/a&gt;&lt;/code&gt; since Erlang/OTP 20.0.</source>
          <target state="translated">&lt;code&gt;gen_statem&lt;/code&gt; обеспечивает общее поведение конечного автомата и заменяет своего предшественника &lt;code&gt;&lt;a href=&quot;gen_fsm&quot;&gt;gen_fsm&lt;/a&gt;&lt;/code&gt; , начиная с Erlang / OTP 20.0.</target>
        </trans-unit>
        <trans-unit id="a66592831b022c6187fbf41f64b27f39b86141fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;get_user/2, get_user/3&lt;/code&gt;, and &lt;code&gt;get_user/4&lt;/code&gt; each returns an &lt;code&gt;httpd_user&lt;/code&gt; record containing the userdata for a specific user. If the user cannot be found, &lt;code&gt;{error, Reason}&lt;/code&gt; is returned. When &lt;code&gt;get_user/2&lt;/code&gt; is called, options &lt;code&gt;Port&lt;/code&gt; and &lt;code&gt;Dir&lt;/code&gt; are mandatory.</source>
          <target state="translated">&lt;code&gt;get_user/2, get_user/3&lt;/code&gt; и &lt;code&gt;get_user/4&lt;/code&gt; каждый возвращает запись &lt;code&gt;httpd_user&lt;/code&gt; , содержащую пользовательские данные для конкретного пользователя. Если пользователя не удается найти, возвращается &lt;code&gt;{error, Reason}&lt;/code&gt; . Когда &lt;code&gt;get_user/2&lt;/code&gt; , параметры &lt;code&gt;Port&lt;/code&gt; и &lt;code&gt;Dir&lt;/code&gt; являются обязательными.</target>
        </trans-unit>
        <trans-unit id="e27858e682235d2210b717885d84526ff21837cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getstat(Socket)&lt;/code&gt; is equivalent to &lt;code&gt;getstat(Socket, [recv_avg, recv_cnt, recv_dvi, recv_max, recv_oct, send_avg, send_cnt, send_dvi, send_max, send_oct])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;getstat(Socket)&lt;/code&gt; эквивалентен &lt;code&gt;getstat(Socket, [recv_avg, recv_cnt, recv_dvi, recv_max, recv_oct, send_avg, send_cnt, send_dvi, send_max, send_oct])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="982cff1d1cf0bd8b04cb3522a543b231f993a363" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gf&lt;/code&gt; (good fit)</source>
          <target state="translated">&lt;code&gt;gf&lt;/code&gt; (хорошо подходит)</target>
        </trans-unit>
        <trans-unit id="994c8be6a654ef85767135d61bce7835d49034dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;global&lt;/code&gt; manual page in Kernel</source>
          <target state="translated">&lt;code&gt;global&lt;/code&gt; страница руководства в ядре</target>
        </trans-unit>
        <trans-unit id="b2e6d5d11db36f7553eadc07fb64579b6abc300f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;handle_connect/3&lt;/code&gt; (with &lt;code&gt;Extra&lt;/code&gt;) can also be called as a result of a call to the &lt;code&gt;&lt;a href=&quot;megaco#connect&quot;&gt;megaco:connect/5&lt;/a&gt;&lt;/code&gt; function (if that function is called with the &lt;code&gt;Extra&lt;/code&gt; argument different than &lt;code&gt;ignore_extra&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;handle_connect/3&lt;/code&gt; (с &lt;code&gt;Extra&lt;/code&gt; ) также может быть вызван в результате вызова функции &lt;code&gt;&lt;a href=&quot;megaco#connect&quot;&gt;megaco:connect/5&lt;/a&gt;&lt;/code&gt; (если эта функция вызывается с аргументом &lt;code&gt;Extra&lt;/code&gt; , отличным от &lt;code&gt;ignore_extra&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ae6028bcc62cde51d474be425c9dc7e8b6e3fcb9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;handle_debug&lt;/code&gt; returns an updated debug structure &lt;code&gt;Deb1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;handle_debug&lt;/code&gt; возвращает обновленную структуру отладки &lt;code&gt;Deb1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2644c967c0e4c82c2e1deca1624de9aa881599b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;head&lt;/code&gt; is the new term to be added.</source>
          <target state="translated">&lt;code&gt;head&lt;/code&gt; - это новый термин, который будет добавлен.</target>
        </trans-unit>
        <trans-unit id="3a24a5b08e442f4a933596f4d876eec4e71ed413" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;heap : integer&lt;/code&gt; :: Young heap word size. Ex. &lt;code&gt;233&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;heap : integer&lt;/code&gt; :: Размер слова молодой кучи. Ex. &lt;code&gt;233&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="68732f44924e2380dcf4ce13c8cf3802ce686c88" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;heart&lt;/code&gt; waits for &lt;code&gt;S&lt;/code&gt; seconds to let the crash dump file be written. After &lt;code&gt;S&lt;/code&gt; seconds, &lt;code&gt;heart&lt;/code&gt; reboots the runtime system, whether the crash dump file is written or not.</source>
          <target state="translated">&lt;code&gt;heart&lt;/code&gt; ждет &lt;code&gt;S&lt;/code&gt; секунд, чтобы дать возможность записать файл аварийного дампа. Через &lt;code&gt;S&lt;/code&gt; секунд &lt;code&gt;heart&lt;/code&gt; перезагружает исполняющую систему независимо от того, записан файл аварийного дампа или нет.</target>
        </trans-unit>
        <trans-unit id="b0d40b0219f08a0f10b7e507264f269367c19823" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;held_locks&lt;/code&gt;. Returns a list of all locks held by the local Mnesia lock manager.</source>
          <target state="translated">&lt;code&gt;held_locks&lt;/code&gt; . Возвращает список всех блокировок, удерживаемых локальным менеджером блокировок Mnesia.</target>
        </trans-unit>
        <trans-unit id="9fad5755a99ed660ab018a9fff07227514ac9eb0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hexlist_to_integer&lt;/code&gt; converts the hexadecimal value of &lt;code&gt;HexString&lt;/code&gt; to an integer.</source>
          <target state="translated">&lt;code&gt;hexlist_to_integer&lt;/code&gt; преобразует шестнадцатеричное значение &lt;code&gt;HexString&lt;/code&gt; в целое число.</target>
        </trans-unit>
        <trans-unit id="2ea1441c110f6e78254e897aca6367ee86b423c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;host&lt;/code&gt; is the name of the host on which the node is running.</source>
          <target state="translated">&lt;code&gt;host&lt;/code&gt; - это имя хоста, на котором работает узел.</target>
        </trans-unit>
        <trans-unit id="6892bcdba176157478bff75149fde20c9a8386b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;host_conf_bsdos&lt;/code&gt; (BSDOS host.conf)</source>
          <target state="translated">&lt;code&gt;host_conf_bsdos&lt;/code&gt; (BSDOS host.conf)</target>
        </trans-unit>
        <trans-unit id="b4278631e51356e08db77d683e4b1a8b8c3dcc64" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;host_conf_freebsd&lt;/code&gt; (FreeBSD host.conf)</source>
          <target state="translated">&lt;code&gt;host_conf_freebsd&lt;/code&gt; (FreeBSD host.conf)</target>
        </trans-unit>
        <trans-unit id="22bf7cfd92c8878929dd2ba3dbfc046fecfa77d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;host_conf_linux&lt;/code&gt; (Linux host.conf)</source>
          <target state="translated">&lt;code&gt;host_conf_linux&lt;/code&gt; (Linux host.conf)</target>
        </trans-unit>
        <trans-unit id="65041a647fe612fd0f8e59c072f652532fdd0022" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hostname() = string()&lt;/code&gt; representing a host, for example, &quot;foo.bar.com&quot;</source>
          <target state="translated">&lt;code&gt;hostname() = string()&lt;/code&gt; представляющий хост, например, &quot;foo.bar.com&quot;</target>
        </trans-unit>
        <trans-unit id="288a4d5e846f07e37dc5f2adefbad2e128b52c95" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hosts&lt;/code&gt; (Unix hosts)</source>
          <target state="translated">&lt;code&gt;hosts&lt;/code&gt; (хосты Unix)</target>
        </trans-unit>
        <trans-unit id="00a3f3236838b7283ceee66027d32a5f53946422" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;http_version() = string()&lt;/code&gt;, for example, &lt;code&gt;&quot;HTTP/1.1&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;http_version() = string()&lt;/code&gt; , например, &lt;code&gt;&quot;HTTP/1.1&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="be5d05c29412198b5aad22b78cfb2269d337b20e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;huffman_only&lt;/code&gt; to force Huffman encoding only (no string match)</source>
          <target state="translated">&lt;code&gt;huffman_only&lt;/code&gt; для принудительного кодирования только Хаффмана (без совпадения строк)</target>
        </trans-unit>
        <trans-unit id="c26f26d92be7aca623c0670870412d9071dfda8c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;i/0&lt;/code&gt; displays system information, listing information about all processes. &lt;code&gt;ni/0&lt;/code&gt; does the same, but for all nodes the network.</source>
          <target state="translated">&lt;code&gt;i/0&lt;/code&gt; отображает системную информацию, перечисляя информацию обо всех процессах. &lt;code&gt;ni/0&lt;/code&gt; делает то же самое, но для всех узлов сети.</target>
        </trans-unit>
        <trans-unit id="04504bb8a8501acb73e0a9c43df2d2573c8f8d4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;i&lt;/code&gt; is the integer value to assign.</source>
          <target state="translated">&lt;code&gt;i&lt;/code&gt; - целочисленное значение, которое нужно присвоить.</target>
        </trans-unit>
        <trans-unit id="aeb4e82d784870d44776ba9fe6d7d59e24f25aad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;i&lt;/code&gt; means that those wrongly encoded filenames are silently ignored.</source>
          <target state="translated">&lt;code&gt;i&lt;/code&gt; означает, что эти неправильно закодированные имена файлов игнорируются.</target>
        </trans-unit>
        <trans-unit id="49464c713cc0dfa648fc3b3996eac6de20e38891" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;i&lt;/code&gt; means that wrongly encoded filenames are silently ignored.</source>
          <target state="translated">&lt;code&gt;i&lt;/code&gt; означает, что неправильно закодированные имена файлов игнорируются.</target>
        </trans-unit>
        <trans-unit id="8b2c2514743abe13e9d9eb27f4df8d2b692d9190" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;id&lt;/code&gt; is used to identify the child specification internally by the supervisor.</source>
          <target state="translated">&lt;code&gt;id&lt;/code&gt; используется для внутренней идентификации дочерней спецификации супервизором.</target>
        </trans-unit>
        <trans-unit id="5f4e88723c35f3efa703d12f4affbf36cd42c91e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;id_dsa&lt;/code&gt; and &lt;code&gt;id_dsa.pub&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;id_dsa&lt;/code&gt; и &lt;code&gt;id_dsa.pub&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="80ccb7cf09932459281c51978ce18d9ff93af219" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;id_ecdsa&lt;/code&gt; and &lt;code&gt;id_ecdsa.pub&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;id_ecdsa&lt;/code&gt; и &lt;code&gt;id_ecdsa.pub&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="723683dd18200916f32eee524f5fbab106cc4413" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;id_extensions()&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#StdCertExt&quot;&gt;Standard Certificate Extensions&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#PrivIntExt&quot;&gt;Private Internet Extensions&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#CRLCertExt&quot;&gt;CRL Extensions&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#CRLEntryExt&quot;&gt;CRL Entry Extensions&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;id_extensions()&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#StdCertExt&quot;&gt;Standard Certificate Extensions&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#PrivIntExt&quot;&gt;Private Internet Extensions&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#CRLCertExt&quot;&gt;CRL Extensions&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;#CRLEntryExt&quot;&gt;CRL Entry Extensions&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4342ad081d7e782eb3338029656546ad8c13fd5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;id_rsa&lt;/code&gt; and &lt;code&gt;id_rsa.pub&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;id_rsa&lt;/code&gt; и &lt;code&gt;id_rsa.pub&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1d55a9218deae1e2f1a323296767e1091ef421a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;idle&lt;/code&gt; - The process is no longer executing interpreted code. &lt;code&gt;Info={}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;idle&lt;/code&gt; - процесс больше не выполняет интерпретируемый код. &lt;code&gt;Info={}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="97edd1f6a72a731415e37a350ebe8714d5866342" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;illegal&lt;/code&gt;. Operation not supported on this record.</source>
          <target state="translated">&lt;code&gt;illegal&lt;/code&gt; . Операция не поддерживается для этой записи.</target>
        </trans-unit>
        <trans-unit id="e0d828be650dc009669d1246020f154926727ed7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;in_proj&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;in_proj&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="39587b4554e60c1cfb91fac58c0e382b5990cc79" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;include&lt;/code&gt; - Optional. Used for public include files that must be reachable from other applications.</source>
          <target state="translated">&lt;code&gt;include&lt;/code&gt; - Необязательно. Используется для общедоступных включаемых файлов, которые должны быть доступны из других приложений.</target>
        </trans-unit>
        <trans-unit id="ff81597bd53cf57baebbb47293e8636989951804" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;include_lib&lt;/code&gt; is similar to &lt;code&gt;include&lt;/code&gt;, but is not to point out an absolute file. Instead, the first path component (possibly after variable substitution) is assumed to be the name of an application.</source>
          <target state="translated">&lt;code&gt;include_lib&lt;/code&gt; похож на &lt;code&gt;include&lt;/code&gt; , но не указывает на абсолютный файл. Вместо этого предполагается, что первый компонент пути (возможно, после подстановки переменной) является именем приложения.</target>
        </trans-unit>
        <trans-unit id="9744fcb90bd27c49fdf4cfd20fe6418dbb84565a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;index&lt;/code&gt; is a pointer to an index into the buffer. This parameter is incremented with the size of the term decoded/encoded.</source>
          <target state="translated">&lt;code&gt;index&lt;/code&gt; - это указатель на индекс в буфере. Этот параметр увеличивается с размером термина &amp;laquo;декодировано / кодировано&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="07a79fcd5e7e859a1bfb106d04905bda27b10a72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;index&lt;/code&gt; is updated to point right after the term in the buffer.</source>
          <target state="translated">&lt;code&gt;index&lt;/code&gt; обновляется до точки сразу после термина в буфере.</target>
        </trans-unit>
        <trans-unit id="12a90a4197d89466d42f3702437e9477be000759" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;index&lt;/code&gt;. Returns the list of index position integers for the table.</source>
          <target state="translated">&lt;code&gt;index&lt;/code&gt; . Возвращает список целых чисел позиции индекса для таблицы.</target>
        </trans-unit>
        <trans-unit id="5c289c0b66d867cf14ffd06f2af4e444ec7ce62b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;index&lt;/code&gt;. This is a list of attribute names, or integers, which specify the tuple positions on which Mnesia is to build and maintain an extra index table.</source>
          <target state="translated">&lt;code&gt;index&lt;/code&gt; . Это список имен атрибутов или целых чисел, которые определяют позиции кортежа, на которых Mnesia должна построить и поддерживать дополнительную индексную таблицу.</target>
        </trans-unit>
        <trans-unit id="299804c67eba285bef67c03d6985c74f5637d6e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;index_exists&lt;/code&gt;. Some operations cannot be performed on tables with an index.</source>
          <target state="translated">&lt;code&gt;index_exists&lt;/code&gt; . Некоторые операции нельзя выполнять с таблицами с индексом.</target>
        </trans-unit>
        <trans-unit id="35288bdbfca9c20f1bac1d4269d301589fa492cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;inet(3)&lt;/code&gt; and &lt;code&gt;gen_tcp(3)&lt;/code&gt;&lt;code&gt;gen_udp(3)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;inet(3)&lt;/code&gt; и &lt;code&gt;gen_tcp(3)&lt;/code&gt; &lt;code&gt;gen_udp(3)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5575a48905c6f63a11c7f5d59026e31b283a2521" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;inet&lt;/code&gt;, which means use a boot server on another machine. The flags &lt;code&gt;-id&lt;/code&gt;, &lt;code&gt;-hosts&lt;/code&gt; and &lt;code&gt;-setcookie&lt;/code&gt; must also be specified.</source>
          <target state="translated">&lt;code&gt;inet&lt;/code&gt; , что означает использование загрузочного сервера на другом компьютере. Флаги &lt;code&gt;-id&lt;/code&gt; , &lt;code&gt;-hosts&lt;/code&gt; и &lt;code&gt;-setcookie&lt;/code&gt; также должны быть указаны.</target>
        </trans-unit>
        <trans-unit id="c21f2b2d8202e01c49f29155f77d095834971b99" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;inet_default_connect_options&lt;/code&gt; can contain a list of default options used for all sockets returned when doing &lt;code&gt;connect&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;inet_default_connect_options&lt;/code&gt; может содержать список параметров по умолчанию, используемых для всех сокетов, возвращаемых при &lt;code&gt;connect&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="316be20dad523a52aa6cd2952f69c8c219b175d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;inet_default_listen_options&lt;/code&gt; can contain a list of default options used when issuing a &lt;code&gt;listen&lt;/code&gt; call.</source>
          <target state="translated">&lt;code&gt;inet_default_listen_options&lt;/code&gt; может содержать список параметров по умолчанию, используемых при вызове &lt;code&gt;listen&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ea69b75cb33493fc4da8be9dffb968455023d48e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;infinity | integer()&lt;/code&gt; in milliseconds</source>
          <target state="translated">&lt;code&gt;infinity | integer()&lt;/code&gt; в миллисекундах</target>
        </trans-unit>
        <trans-unit id="390aff2544ff87cbe26c86eedc5d59d2f18ed009" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;infinity&lt;/code&gt; is the default setting and is used if no value is specified for &lt;code&gt;Retries&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;infinity&lt;/code&gt; является настройкой по умолчанию и используется, если для &lt;code&gt;Retries&lt;/code&gt; не указано значение .</target>
        </trans-unit>
        <trans-unit id="7ac01f9afaec9772afec2df62e36b10d97bad25e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;info(QH)&lt;/code&gt; is equivalent to &lt;code&gt;info(QH, [])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;info(QH)&lt;/code&gt; эквивалентен &lt;code&gt;info(QH, [])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4248d925e08b67df047ba4b4a75b159b2cf6fe92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;info/1&lt;/code&gt; returns information with the following tags (tags marked with (*) are available in &lt;code&gt;functions&lt;/code&gt; mode only):</source>
          <target state="translated">&lt;code&gt;info/1&lt;/code&gt; возвращает информацию со следующими тегами (теги, отмеченные (*), доступны только в режиме &lt;code&gt;functions&lt;/code&gt; ):</target>
        </trans-unit>
        <trans-unit id="c38f7b349b67d95eb067d2b2e780bc5bba3e8947" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;info/2&lt;/code&gt; and &lt;code&gt;info/3&lt;/code&gt; return information about all or some of the analyzed modules, applications, releases or library modules of an Xref server. The following information is returned for every analyzed module:</source>
          <target state="translated">&lt;code&gt;info/2&lt;/code&gt; и &lt;code&gt;info/3&lt;/code&gt; возвращают информацию обо всех или некоторых из проанализированных модулей, приложений, выпусков или библиотечных модулей сервера Xref. По каждому проанализированному модулю возвращается следующая информация:</target>
        </trans-unit>
        <trans-unit id="683651a15dcf311e9b19d04c85dc14a9f375a0f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;inform&lt;/code&gt; - &lt;code&gt;SnmpInformInfo&lt;/code&gt; (see &lt;code&gt;&lt;a href=&quot;#handle_inform&quot;&gt;handle_inform&lt;/a&gt;&lt;/code&gt; for more info).</source>
          <target state="translated">&lt;code&gt;inform&lt;/code&gt; - &lt;code&gt;SnmpInformInfo&lt;/code&gt; (подробнее см. &lt;code&gt;&lt;a href=&quot;#handle_inform&quot;&gt;handle_inform&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="a9fa86f5d62c2a621fc4a7b799f474d4390f1874" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;init&lt;/code&gt; - Attach when a process for the first time calls an interpreted function.</source>
          <target state="translated">&lt;code&gt;init&lt;/code&gt; - присоединяется, когда процесс впервые вызывает интерпретируемую функцию.</target>
        </trans-unit>
        <trans-unit id="680e743ff4e349f082f22cdac8b3c1404575f222" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;init&lt;/code&gt; also contains functions to restart, reboot, and stop the system.</source>
          <target state="translated">&lt;code&gt;init&lt;/code&gt; также содержит функции для перезапуска, перезагрузки и остановки системы.</target>
        </trans-unit>
        <trans-unit id="13bb39ed7c33de63e493e1ee19876051fea085ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;init&lt;/code&gt; interprets some of the flags, see section &lt;code&gt;&lt;a href=&quot;#flags&quot;&gt;Command-Line Flags&lt;/a&gt;&lt;/code&gt; below. The remaining flags (&quot;user flags&quot;) and plain arguments are passed to the &lt;code&gt;init&lt;/code&gt; loop and can be retrieved by calling &lt;code&gt;&lt;a href=&quot;#get_arguments-0&quot;&gt;get_arguments/0&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#get_plain_arguments-0&quot;&gt;get_plain_arguments/0&lt;/a&gt;&lt;/code&gt;, respectively.</source>
          <target state="translated">&lt;code&gt;init&lt;/code&gt; интерпретирует некоторые флаги, см. раздел &amp;laquo; &lt;code&gt;&lt;a href=&quot;#flags&quot;&gt;Command-Line Flags&lt;/a&gt;&lt;/code&gt; ниже. Остальные флаги (&amp;laquo;пользовательские флаги&amp;raquo;) и простые аргументы передаются в цикл &lt;code&gt;init&lt;/code&gt; и могут быть получены вызовом &lt;code&gt;&lt;a href=&quot;#get_arguments-0&quot;&gt;get_arguments/0&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;#get_plain_arguments-0&quot;&gt;get_plain_arguments/0&lt;/a&gt;&lt;/code&gt; соответственно.</target>
        </trans-unit>
        <trans-unit id="c38637dc28fce554e15219ccf24908263dea5b60" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;init&lt;/code&gt; is to be more relaxed and try to find a suitable directory if it can choose from a regular &lt;code&gt;ebin&lt;/code&gt; directory and an &lt;code&gt;ebin&lt;/code&gt; directory in an archive file.</source>
          <target state="translated">&lt;code&gt;init&lt;/code&gt; должен быть более расслабленным и попытаться найти подходящий каталог, если он может выбрать из обычного &lt;code&gt;ebin&lt;/code&gt; каталога &lt;code&gt;ebin&lt;/code&gt; в архивном файле.</target>
        </trans-unit>
        <trans-unit id="2ee39a96a98454ce0a566fbbb59a17f31c9cbea9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;init&lt;/code&gt; reads the boot script, which contains instructions on how to initiate the system. For more information about boot scripts, see &lt;code&gt;script(4)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;init&lt;/code&gt; читает сценарий загрузки, который содержит инструкции по запуску системы. Для получения дополнительной информации о сценариях загрузки см. &lt;code&gt;script(4)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e45c87967eb337eebf81776beb7aaa4bfa06b39a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;init_per_suite&lt;/code&gt; and &lt;code&gt;end_per_suite&lt;/code&gt; execute on dedicated Erlang processes, just like the test cases do. The result of these functions is however not included in the test run statistics of successful, failed, and skipped cases.</source>
          <target state="translated">&lt;code&gt;init_per_suite&lt;/code&gt; и &lt;code&gt;end_per_suite&lt;/code&gt; выполняются в выделенных процессах Erlang, как и в тестовых примерах . Однако результат этих функций не включается в статистику тестового запуска успешных, неудачных и пропущенных случаев.</target>
        </trans-unit>
        <trans-unit id="509c1f98726ea5069dd4a7b20c1da24a315239b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;init_per_testcase/2&lt;/code&gt; and &lt;code&gt;end_per_testcase/2&lt;/code&gt; are always called for each individual test case, no matter if the case belongs to a group or not.</source>
          <target state="translated">&lt;code&gt;init_per_testcase/2&lt;/code&gt; и &lt;code&gt;end_per_testcase/2&lt;/code&gt; всегда вызываются для каждого отдельного тестового примера, независимо от того, принадлежит он группе или нет.</target>
        </trans-unit>
        <trans-unit id="70b146254b559ead89fe36b3a1611f87764c53ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;instance : integer&lt;/code&gt; :: Allocator instance. Ex. &lt;code&gt;1&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;instance : integer&lt;/code&gt; :: экземпляр Allocator. Ex. &lt;code&gt;1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4b79a730e545f8e3ff2db30fb944cc1b654c4bbb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int driver_failure(ErlDrvPort port, int error)&lt;/code&gt;&lt;code&gt;int driver_failure_atom(ErlDrvPort port, char *string)&lt;/code&gt;&lt;code&gt;int driver_failure_posix(ErlDrvPort port, int error)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int driver_failure(ErlDrvPort port, int error)&lt;/code&gt; &lt;code&gt;int driver_failure_atom(ErlDrvPort port, char *string)&lt;/code&gt; &lt;code&gt;int driver_failure_posix(ErlDrvPort port, int error)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="be1945883a0b8cbfcb490c14db372bb25d9db0b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int ei_connect(ei_cnode* ec, char *nodename)&lt;/code&gt;&lt;code&gt;int ei_xconnect(ei_cnode* ec, Erl_IpAddr adr, char *alivename)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int ei_connect(ei_cnode* ec, char *nodename)&lt;/code&gt; &lt;code&gt;int ei_xconnect(ei_cnode* ec, Erl_IpAddr adr, char *alivename)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4ff7079026e8f25428ecfb521719ef3ecbd565b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int ei_connect_init(ei_cnode* ec, const char* this_node_name, const char *cookie, short creation)&lt;/code&gt;&lt;code&gt;int ei_connect_xinit(ei_cnode* ec, const char *thishostname, const char *thisalivename, const char *thisnodename, Erl_IpAddr thisipaddr, const char *cookie, short creation)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int ei_connect_init(ei_cnode* ec, const char* this_node_name, const char *cookie, short creation)&lt;/code&gt; &lt;code&gt;int ei_connect_xinit(ei_cnode* ec, const char *thishostname, const char *thisalivename, const char *thisnodename, Erl_IpAddr thisipaddr, const char *cookie, short creation)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dd6698c77f48b2b51843711ba5f7c9f2f29fbe55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int ei_connect_tmo(ei_cnode* ec, char *nodename, unsigned timeout_ms)&lt;/code&gt;&lt;code&gt;int ei_xconnect_tmo(ei_cnode* ec, Erl_IpAddr adr, char *alivename, unsigned timeout_ms)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int ei_connect_tmo(ei_cnode* ec, char *nodename, unsigned timeout_ms)&lt;/code&gt; &lt;code&gt;int ei_xconnect_tmo(ei_cnode* ec, Erl_IpAddr adr, char *alivename, unsigned timeout_ms)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ca6137afa29c562b89f3c439e6e82ddb851d06ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int ei_decode_fun(const char *buf, int *index, erlang_fun *p)&lt;/code&gt;&lt;code&gt;void free_fun(erlang_fun* f)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int ei_decode_fun(const char *buf, int *index, erlang_fun *p)&lt;/code&gt; &lt;code&gt;void free_fun(erlang_fun* f)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="eacdedc6fed3d45e90327b3441131b4d5183df0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int ei_encode_atom(char *buf, int *index, const char *p)&lt;/code&gt;&lt;code&gt;int ei_encode_atom_len(char *buf, int *index, const char *p, int len)&lt;/code&gt;&lt;code&gt;int ei_x_encode_atom(ei_x_buff* x, const char *p)&lt;/code&gt;&lt;code&gt;int ei_x_encode_atom_len(ei_x_buff* x, const char *p, int len)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int ei_encode_atom(char *buf, int *index, const char *p)&lt;/code&gt; &lt;code&gt;int ei_encode_atom_len(char *buf, int *index, const char *p, int len)&lt;/code&gt; &lt;code&gt;int ei_x_encode_atom(ei_x_buff* x, const char *p)&lt;/code&gt; &lt;code&gt;int ei_x_encode_atom_len(ei_x_buff* x, const char *p, int len)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="be30a51c472ad623c20f08691eaa3cb3b6a3fd49" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int ei_encode_atom_as(char *buf, int *index, const char *p, erlang_char_encoding from_enc, erlang_char_encoding to_enc)&lt;/code&gt;&lt;code&gt;int ei_encode_atom_len_as(char *buf, int *index, const char *p, int len, erlang_char_encoding from_enc, erlang_char_encoding to_enc)&lt;/code&gt;&lt;code&gt;int ei_x_encode_atom_as(ei_x_buff* x, const char *p, erlang_char_encoding from_enc, erlang_char_encoding to_enc)&lt;/code&gt;&lt;code&gt;int ei_x_encode_atom_len_as(ei_x_buff* x, const char *p, int len, erlang_char_encoding from_enc, erlang_char_encoding to_enc)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int ei_encode_atom_as(char *buf, int *index, const char *p, erlang_char_encoding from_enc, erlang_char_encoding to_enc)&lt;/code&gt; &lt;code&gt;int ei_encode_atom_len_as(char *buf, int *index, const char *p, int len, erlang_char_encoding from_enc, erlang_char_encoding to_enc)&lt;/code&gt; &lt;code&gt;int ei_x_encode_atom_as(ei_x_buff* x, const char *p, erlang_char_encoding from_enc, erlang_char_encoding to_enc)&lt;/code&gt; &lt;code&gt;int ei_x_encode_atom_len_as(ei_x_buff* x, const char *p, int len, erlang_char_encoding from_enc, erlang_char_encoding to_enc)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3ea13f554194e5458f1b6b02dd68627201ffe404" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int ei_encode_bignum(char *buf, int *index, mpz_t obj)&lt;/code&gt;&lt;code&gt;int ei_x_encode_bignum(ei_x_buff *x, mpz_t obj)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int ei_encode_bignum(char *buf, int *index, mpz_t obj)&lt;/code&gt; &lt;code&gt;int ei_x_encode_bignum(ei_x_buff *x, mpz_t obj)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="48bf8d9396606ef33a48249f42efdab728cb1da7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int ei_encode_binary(char *buf, int *index, const void *p, long len)&lt;/code&gt;&lt;code&gt;int ei_x_encode_binary(ei_x_buff* x, const void *p, long len)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int ei_encode_binary(char *buf, int *index, const void *p, long len)&lt;/code&gt; &lt;code&gt;int ei_x_encode_binary(ei_x_buff* x, const void *p, long len)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2036bf25dd701ed737d16a5b650b8201a78fa88f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int ei_encode_boolean(char *buf, int *index, int p)&lt;/code&gt;&lt;code&gt;int ei_x_encode_boolean(ei_x_buff* x, int p)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int ei_encode_boolean(char *buf, int *index, int p)&lt;/code&gt; &lt;code&gt;int ei_x_encode_boolean(ei_x_buff* x, int p)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e7bea77c7872775d24efe304b06dab54aafb9fe2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int ei_encode_char(char *buf, int *index, char p)&lt;/code&gt;&lt;code&gt;int ei_x_encode_char(ei_x_buff* x, char p)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int ei_encode_char(char *buf, int *index, char p)&lt;/code&gt; &lt;code&gt;int ei_x_encode_char(ei_x_buff* x, char p)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e7a307beceb96b6b11795cc5d766ff3b85d63f5e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int ei_encode_double(char *buf, int *index, double p)&lt;/code&gt;&lt;code&gt;int ei_x_encode_double(ei_x_buff* x, double p)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int ei_encode_double(char *buf, int *index, double p)&lt;/code&gt; &lt;code&gt;int ei_x_encode_double(ei_x_buff* x, double p)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="46bb642408497ffc04bfcca020474f0aa1fecd11" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int ei_encode_empty_list(char* buf, int* index)&lt;/code&gt;&lt;code&gt;int ei_x_encode_empty_list(ei_x_buff* x)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int ei_encode_empty_list(char* buf, int* index)&lt;/code&gt; &lt;code&gt;int ei_x_encode_empty_list(ei_x_buff* x)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8d11f2b7062f3ff5a2ef7070264d5a23834561eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int ei_encode_fun(char *buf, int *index, const erlang_fun *p)&lt;/code&gt;&lt;code&gt;int ei_x_encode_fun(ei_x_buff* x, const erlang_fun* fun)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int ei_encode_fun(char *buf, int *index, const erlang_fun *p)&lt;/code&gt; &lt;code&gt;int ei_x_encode_fun(ei_x_buff* x, const erlang_fun* fun)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6f94e9eeb3c7fa27d29242a807c7c2dcdc61aa93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int ei_encode_list_header(char *buf, int *index, int arity)&lt;/code&gt;&lt;code&gt;int ei_x_encode_list_header(ei_x_buff* x, int arity)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int ei_encode_list_header(char *buf, int *index, int arity)&lt;/code&gt; &lt;code&gt;int ei_x_encode_list_header(ei_x_buff* x, int arity)&lt;/code&gt; ) int ei_x_encode_list_header (ei_x_buff * x, int arity)</target>
        </trans-unit>
        <trans-unit id="699de4bfe5a5c6b39bb40badc010d9377f47377f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int ei_encode_long(char *buf, int *index, long p)&lt;/code&gt;&lt;code&gt;int ei_x_encode_long(ei_x_buff* x, long p)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int ei_encode_long(char *buf, int *index, long p)&lt;/code&gt; &lt;code&gt;int ei_x_encode_long(ei_x_buff* x, long p)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6d5ceb8605c9a0883944a415416a2c549942dbba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int ei_encode_longlong(char *buf, int *index, long long p)&lt;/code&gt;&lt;code&gt;int ei_x_encode_longlong(ei_x_buff* x, long long p)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int ei_encode_longlong(char *buf, int *index, long long p)&lt;/code&gt; &lt;code&gt;int ei_x_encode_longlong(ei_x_buff* x, long long p)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dd56ee0ea342ac9f86cdfde930e73cae153464b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int ei_encode_map_header(char *buf, int *index, int arity)&lt;/code&gt;&lt;code&gt;int ei_x_encode_map_header(ei_x_buff* x, int arity)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int ei_encode_map_header(char *buf, int *index, int arity)&lt;/code&gt; &lt;code&gt;int ei_x_encode_map_header(ei_x_buff* x, int arity)&lt;/code&gt; ) int ei_x_encode_map_header (ei_x_buff * x, int arity)</target>
        </trans-unit>
        <trans-unit id="cc14f613a1608fff8e0bf6ca396586b812bcd8cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int ei_encode_pid(char *buf, int *index, const erlang_pid *p)&lt;/code&gt;&lt;code&gt;int ei_x_encode_pid(ei_x_buff* x, const erlang_pid *p)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int ei_encode_pid(char *buf, int *index, const erlang_pid *p)&lt;/code&gt; &lt;code&gt;int ei_x_encode_pid(ei_x_buff* x, const erlang_pid *p)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e44f4b6b918ff2e63fef2cea2444b864243aeb86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int ei_encode_port(char *buf, int *index, const erlang_port *p)&lt;/code&gt;&lt;code&gt;int ei_x_encode_port(ei_x_buff* x, const erlang_port *p)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int ei_encode_port(char *buf, int *index, const erlang_port *p)&lt;/code&gt; &lt;code&gt;int ei_x_encode_port(ei_x_buff* x, const erlang_port *p)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="688c30a81e6d6b45df50fc30788fa09ac0e7f0d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int ei_encode_ref(char *buf, int *index, const erlang_ref *p)&lt;/code&gt;&lt;code&gt;int ei_x_encode_ref(ei_x_buff* x, const erlang_ref *p)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int ei_encode_ref(char *buf, int *index, const erlang_ref *p)&lt;/code&gt; &lt;code&gt;int ei_x_encode_ref(ei_x_buff* x, const erlang_ref *p)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5f8310f88f6d74915d49b6ec786895f64af370f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int ei_encode_string(char *buf, int *index, const char *p)&lt;/code&gt;&lt;code&gt;int ei_encode_string_len(char *buf, int *index, const char *p, int len)&lt;/code&gt;&lt;code&gt;int ei_x_encode_string(ei_x_buff* x, const char *p)&lt;/code&gt;&lt;code&gt;int ei_x_encode_string_len(ei_x_buff* x, const char* s, int len)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int ei_encode_string(char *buf, int *index, const char *p)&lt;/code&gt; &lt;code&gt;int ei_encode_string_len(char *buf, int *index, const char *p, int len)&lt;/code&gt; &lt;code&gt;int ei_x_encode_string(ei_x_buff* x, const char *p)&lt;/code&gt; &lt;code&gt;int ei_x_encode_string_len(ei_x_buff* x, const char* s, int len)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="469a7cbf204d88ae986d22602c11633064a3c9c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int ei_encode_term(char *buf, int *index, void *t)&lt;/code&gt;&lt;code&gt;int ei_x_encode_term(ei_x_buff* x, void *t)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int ei_encode_term(char *buf, int *index, void *t)&lt;/code&gt; &lt;code&gt;int ei_x_encode_term(ei_x_buff* x, void *t)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="14ed282e7e4dfaa0b843938fb67c0e25efaa762f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int ei_encode_trace(char *buf, int *index, const erlang_trace *p)&lt;/code&gt;&lt;code&gt;int ei_x_encode_trace(ei_x_buff* x, const erlang_trace *p)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int ei_encode_trace(char *buf, int *index, const erlang_trace *p)&lt;/code&gt; &lt;code&gt;int ei_x_encode_trace(ei_x_buff* x, const erlang_trace *p)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="112c190f71f80d6eaa400a3238d67dbb40922af4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int ei_encode_tuple_header(char *buf, int *index, int arity)&lt;/code&gt;&lt;code&gt;int ei_x_encode_tuple_header(ei_x_buff* x, int arity)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int ei_encode_tuple_header(char *buf, int *index, int arity)&lt;/code&gt; &lt;code&gt;int ei_x_encode_tuple_header(ei_x_buff* x, int arity)&lt;/code&gt; ) int ei_x_encode_tuple_header (ei_x_buff * x, int arity)</target>
        </trans-unit>
        <trans-unit id="dfb532bb3bb9ce2ee09e4eccf39e41e279f1006b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int ei_encode_ulong(char *buf, int *index, unsigned long p)&lt;/code&gt;&lt;code&gt;int ei_x_encode_ulong(ei_x_buff* x, unsigned long p)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int ei_encode_ulong(char *buf, int *index, unsigned long p)&lt;/code&gt; &lt;code&gt;int ei_x_encode_ulong(ei_x_buff* x, unsigned long p)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="019fbefed5026bbc34c9e6979be2537cc256dedc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int ei_encode_ulonglong(char *buf, int *index, unsigned long long p)&lt;/code&gt;&lt;code&gt;int ei_x_encode_ulonglong(ei_x_buff* x, unsigned long long p)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int ei_encode_ulonglong(char *buf, int *index, unsigned long long p)&lt;/code&gt; &lt;code&gt;int ei_x_encode_ulonglong(ei_x_buff* x, unsigned long long p)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fe8ceacaa74ce9f2c063d93033c64c5bbe89b4c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int ei_encode_version(char *buf, int *index)&lt;/code&gt;&lt;code&gt;int ei_x_encode_version(ei_x_buff* x)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int ei_encode_version(char *buf, int *index)&lt;/code&gt; &lt;code&gt;int ei_x_encode_version(ei_x_buff* x)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d45c8a894d11b0d401c9fdc952eed8c7dcbbe3ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int ei_get_tracelevel(void)&lt;/code&gt;&lt;code&gt;void ei_set_tracelevel(int level)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int ei_get_tracelevel(void)&lt;/code&gt; &lt;code&gt;void ei_set_tracelevel(int level)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7bdd2328e271f8df92925f8466c03928cd7c9ce2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int ei_print_term(FILE* fp, const char* buf, int* index)&lt;/code&gt;&lt;code&gt;int ei_s_print_term(char** s, const char* buf, int* index)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int ei_print_term(FILE* fp, const char* buf, int* index)&lt;/code&gt; &lt;code&gt;int ei_s_print_term(char** s, const char* buf, int* index)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d8b0d3f6a8e08a1c738ae68ed805b1083c6c33ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int ei_receive_msg(int fd, erlang_msg* msg, ei_x_buff* x)&lt;/code&gt;&lt;code&gt;int ei_xreceive_msg(int fd, erlang_msg* msg, ei_x_buff* x)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int ei_receive_msg(int fd, erlang_msg* msg, ei_x_buff* x)&lt;/code&gt; &lt;code&gt;int ei_xreceive_msg(int fd, erlang_msg* msg, ei_x_buff* x)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="331943191dca2a990a6af07c55b4f10f92c87292" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int ei_receive_msg_tmo(int fd, erlang_msg* msg, ei_x_buff* x, unsigned imeout_ms)&lt;/code&gt;&lt;code&gt;int ei_xreceive_msg_tmo(int fd, erlang_msg* msg, ei_x_buff* x, unsigned timeout_ms)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int ei_receive_msg_tmo(int fd, erlang_msg* msg, ei_x_buff* x, unsigned imeout_ms)&lt;/code&gt; &lt;code&gt;int ei_xreceive_msg_tmo(int fd, erlang_msg* msg, ei_x_buff* x, unsigned timeout_ms)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d91019c4a2f8ebf576c7bb98050381bb000e354b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int ei_rpc(ei_cnode *ec, int fd, char *mod, char *fun, const char *argbuf, int argbuflen, ei_x_buff *x)&lt;/code&gt;&lt;code&gt;int ei_rpc_to(ei_cnode *ec, int fd, char *mod, char *fun, const char *argbuf, int argbuflen)&lt;/code&gt;&lt;code&gt;int ei_rpc_from(ei_cnode *ec, int fd, int timeout, erlang_msg *msg, ei_x_buff *x)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int ei_rpc(ei_cnode *ec, int fd, char *mod, char *fun, const char *argbuf, int argbuflen, ei_x_buff *x)&lt;/code&gt; &lt;code&gt;int ei_rpc_to(ei_cnode *ec, int fd, char *mod, char *fun, const char *argbuf, int argbuflen)&lt;/code&gt; &lt;code&gt;int ei_rpc_from(ei_cnode *ec, int fd, int timeout, erlang_msg *msg, ei_x_buff *x)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="445fe207224c1f75197df7f04fb651ad9b3ba503" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int ei_x_append(ei_x_buff* x, const ei_x_buff* x2)&lt;/code&gt;&lt;code&gt;int ei_x_append_buf(ei_x_buff* x, const char* buf, int len)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int ei_x_append(ei_x_buff* x, const ei_x_buff* x2)&lt;/code&gt; &lt;code&gt;int ei_x_append_buf(ei_x_buff* x, const char* buf, int len)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e10a620f8be39d23877b27b41dac3c2f350b5bd1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int ei_x_format(ei_x_buff* x, const char* fmt, ...)&lt;/code&gt;&lt;code&gt;int ei_x_format_wo_ver(ei_x_buff* x, const char *fmt, ... )&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int ei_x_format(ei_x_buff* x, const char* fmt, ...)&lt;/code&gt; &lt;code&gt;int ei_x_format_wo_ver(ei_x_buff* x, const char *fmt, ... )&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="018d33e014f50ed74ec24117fc37109e44069386" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int ei_x_new(ei_x_buff* x)&lt;/code&gt;&lt;code&gt;int ei_x_new_with_version(ei_x_buff* x)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int ei_x_new(ei_x_buff* x)&lt;/code&gt; &lt;code&gt;int ei_x_new_with_version(ei_x_buff* x)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="26837ab721255d45129355ee69a318ca6bc81fdf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int erl_connect(node)&lt;/code&gt;&lt;code&gt;int erl_xconnect(addr, alive)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int erl_connect(node)&lt;/code&gt; &lt;code&gt;int erl_xconnect(addr, alive)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="588463869a047e0b1d0a80c0d79ae9d660ecdeed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int erl_connect_init(number, cookie, creation)&lt;/code&gt;&lt;code&gt;int erl_connect_xinit(host, alive, node, addr, cookie, creation)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int erl_connect_init(number, cookie, creation)&lt;/code&gt; &lt;code&gt;int erl_connect_xinit(host, alive, node, addr, cookie, creation)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d16cf527dc908f09cd0db2c343fe6cb66a87d133" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int erl_encode(term, bufp)&lt;/code&gt;&lt;code&gt;int erl_encode_buf(term, bufpp)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;int erl_encode(term, bufp)&lt;/code&gt; &lt;code&gt;int erl_encode_buf(term, bufpp)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="393a2472afa0171614a18b904106ac786c500efc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;integer()&lt;/code&gt; - Number of one byte (8 bits) levels. N.B. This is currently converted into the previous config. Example: &lt;code&gt;3&lt;/code&gt; (&lt;code&gt;[8,8,8]&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;integer()&lt;/code&gt; - Количество однобайтовых (8 битных) уровней. NB Это в настоящее время преобразовано в предыдущую конфигурацию. Пример: &lt;code&gt;3&lt;/code&gt; ( &lt;code&gt;[8,8,8]&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="e4e0259d3ce79d7297bd5ad1a52aae25ce5f1430" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;integer(X)&lt;/code&gt; detail level activates tracing of all calls to &lt;code&gt;et:trace_me/4,5&lt;/code&gt; whose detail level argument is lesser than &lt;code&gt;X&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;integer(X)&lt;/code&gt; , уровень детализации активирует отслеживание всех вызовов и &lt;code&gt;et:trace_me/4,5&lt;/code&gt; , чей уровень детализации аргумент меньше , чем &lt;code&gt;X&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="519fcfd30d77b691b28ee08274f947ef51b3eb02" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;integer_to_hexlist/1&lt;/code&gt; returns a string representing &lt;code&gt;Number&lt;/code&gt; in a hexadecimal form.</source>
          <target state="translated">&lt;code&gt;integer_to_hexlist/1&lt;/code&gt; возвращает строку, представляющую &lt;code&gt;Number&lt;/code&gt; в шестнадцатеричной форме.</target>
        </trans-unit>
        <trans-unit id="c0459dd21410bb32e2caa968faae901be29d26e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;intensity&lt;/code&gt; and &lt;code&gt;period&lt;/code&gt; specify the &lt;code&gt;&lt;a href=&quot;#max_intensity&quot;&gt;maximum restart intensity&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;intensity&lt;/code&gt; и &lt;code&gt;period&lt;/code&gt; определяют &lt;code&gt;&lt;a href=&quot;#max_intensity&quot;&gt;maximum restart intensity&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b9da6792d5381c0374b3b5c0b0e01146f242648e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;internal&lt;/code&gt; events can only be generated by the state machine itself through the state transition action &lt;code&gt;&lt;a href=&quot;#type-action&quot;&gt;next_event&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;internal&lt;/code&gt; события могут быть сгенерированы только самим &lt;code&gt;&lt;a href=&quot;#type-action&quot;&gt;next_event&lt;/a&gt;&lt;/code&gt; автоматом посредством действия перехода состояния next_event .</target>
        </trans-unit>
        <trans-unit id="052da6b8c13b64c4de1be8693701070b4456a3d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ip_address()&lt;/code&gt; = See the &lt;code&gt;inet(3)&lt;/code&gt; manual page in Kernel.</source>
          <target state="translated">&lt;code&gt;ip_address()&lt;/code&gt; = См. &lt;code&gt;inet(3)&lt;/code&gt; в ядре.</target>
        </trans-unit>
        <trans-unit id="d15106f06513f1512bae59b8a4c904bfbb4c82cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;is_map/1&lt;/code&gt; in the &lt;code&gt;erlang&lt;/code&gt; module</source>
          <target state="translated">&lt;code&gt;is_map/1&lt;/code&gt; в &lt;code&gt;erlang&lt;/code&gt; модуле</target>
        </trans-unit>
        <trans-unit id="eab25ca15c5ebd96d89c5f3cb640e10dfbf70da8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;is_running&lt;/code&gt;. Returns &lt;code&gt;yes&lt;/code&gt; or &lt;code&gt;no&lt;/code&gt; to indicate if Mnesia is running. It can also return &lt;code&gt;starting&lt;/code&gt; or &lt;code&gt;stopping&lt;/code&gt;. Can be called even if Mnesia is not yet running.</source>
          <target state="translated">&lt;code&gt;is_running&lt;/code&gt; . Возвращает &lt;code&gt;yes&lt;/code&gt; или &lt;code&gt;no&lt;/code&gt; чтобы указать, запущена ли Mnesia. Он также может возвращать &lt;code&gt;starting&lt;/code&gt; или &lt;code&gt;stopping&lt;/code&gt; . Может быть вызван, даже если Mnesia еще не запущена.</target>
        </trans-unit>
        <trans-unit id="69fb27581ce389de2b4ec69e225d611abc764ffd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;keep_alive&lt;/code&gt; can be specified per connection, if necessary. For details, see &lt;code&gt;&lt;a href=&quot;unix_telnet&quot;&gt;unix_telnet&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;keep_alive&lt;/code&gt; можно указать для каждого соединения. Подробнее см. &lt;code&gt;&lt;a href=&quot;unix_telnet&quot;&gt;unix_telnet&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="72bc07236831563c46426c5fd4ba3421fe698394" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;key&lt;/code&gt; is a &lt;code&gt;NULL&lt;/code&gt;-terminated string containing the name of the environment variable.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; - это строка с окончанием &lt;code&gt;NULL&lt;/code&gt; , содержащая имя переменной среды.</target>
        </trans-unit>
        <trans-unit id="ab8db5d02ae63708074e0b1525ec52f65485b9b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;key&lt;/code&gt; is a pointer to a thread-specific data key variable.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; - это указатель на переменную ключа данных, зависящую от потока.</target>
        </trans-unit>
        <trans-unit id="cf8d00475384e1c2d6c03e977342f7a4663a8b9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;key&lt;/code&gt; is a thread-specific data key to destroy.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; - это ключ данных, специфичный для потока, который необходимо уничтожить.</target>
        </trans-unit>
        <trans-unit id="49d61a7c51ab43fc47076647d598e74cb1b133fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;key&lt;/code&gt; is a thread-specific data key.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; - это ключ данных, зависящий от потока.</target>
        </trans-unit>
        <trans-unit id="51e80ce3f022ac7ddd37c33041f888f7a50e185f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;key&lt;/code&gt; is the name of the object to look up.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; - это имя объекта для поиска.</target>
        </trans-unit>
        <trans-unit id="66ac280c75c00617aac9e9816ad94d4f5a24d431" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;key&lt;/code&gt; is the name of the object to mark.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; - это имя объекта, который нужно отметить.</target>
        </trans-unit>
        <trans-unit id="726bf6575c9ae5d90f62fcec7dc7845829be36b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;key&lt;/code&gt; is the object name.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; - это имя объекта.</target>
        </trans-unit>
        <trans-unit id="76519f7a0036105d1631983a266c6debeb747f04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;key&lt;/code&gt; is the object to remove.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; - это объект, который нужно удалить.</target>
        </trans-unit>
        <trans-unit id="e8cd1655c5d738878c7393018e2810925863b821" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;keycheck(KeyPos, FileName)&lt;/code&gt; is equivalent to &lt;code&gt;keycheck(KeyPos, [FileName], [])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;keycheck(KeyPos, FileName)&lt;/code&gt; эквивалентен &lt;code&gt;keycheck(KeyPos, [FileName], [])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b153c6268ac50c18ffa73eb104aea23685d06fcb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;keymerge(KeyPos, FileNames, Output)&lt;/code&gt; is equivalent to &lt;code&gt;keymerge(KeyPos, FileNames, Output, [])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;keymerge(KeyPos, FileNames, Output)&lt;/code&gt; эквивалентно &lt;code&gt;keymerge(KeyPos, FileNames, Output, [])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="83f036648bec0822f57409f769b8c88456b350cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;keysort(KeyPos, QH1)&lt;/code&gt; is equivalent to &lt;code&gt;keysort(KeyPos, QH1, [])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;keysort(KeyPos, QH1)&lt;/code&gt; эквивалентна &lt;code&gt;keysort(KeyPos, QH1, [])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="77feb0f99a79d08708c49d907392d66a805a7e24" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;keysort(N, FileName)&lt;/code&gt; is equivalent to &lt;code&gt;keysort(N, [FileName], FileName)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;keysort(N, FileName)&lt;/code&gt; эквивалентен &lt;code&gt;keysort(N, [FileName], FileName)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b8625b8ba314e33b76213d1ccfea99983f2ec845" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;keysort(N, Input, Output)&lt;/code&gt; is equivalent to &lt;code&gt;keysort(N, Input, Output, [])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;keysort(N, Input, Output)&lt;/code&gt; эквивалентен &lt;code&gt;keysort(N, Input, Output, [])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0f07ab05f9a848556d1aad520ac884d2eed8199a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;kill_after/1&lt;/code&gt; is the same as &lt;code&gt;exit_after(Time, self(), kill)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;kill_after/1&lt;/code&gt; совпадает с &lt;code&gt;exit_after(Time, self(), kill)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="72e34eb6858bc7ffa3f15fb1b75c7afcc44387d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;kill_after/2&lt;/code&gt; is the same as &lt;code&gt;exit_after(Time, Pid, kill)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;kill_after/2&lt;/code&gt; совпадает с &lt;code&gt;exit_after(Time, Pid, kill)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="91e9db6ac63dd2f97d0bf7188e8fe47bd6f8a04f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;kilo_byte/1&lt;/code&gt; creates a deep list. If &lt;code&gt;list_to_binary/1&lt;/code&gt; is called, the deep list can be converted to a binary of 1024 bytes:</source>
          <target state="translated">&lt;code&gt;kilo_byte/1&lt;/code&gt; создает глубокий список. Если &lt;code&gt;list_to_binary/1&lt;/code&gt; , глубокий список может быть преобразован в двоичный файл размером 1024 байта:</target>
        </trans-unit>
        <trans-unit id="f538b0c5d5f89b037756df3ff6ce4f215129573b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lclose(Log)&lt;/code&gt; is equivalent to &lt;code&gt;lclose(Log,&amp;nbsp;node())&lt;/code&gt;. See also &lt;code&gt;&lt;a href=&quot;#close_1&quot;&gt;close/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;lclose(Log)&lt;/code&gt; эквивалентно &lt;code&gt;lclose(Log,&amp;nbsp;node())&lt;/code&gt; . См. Также &lt;code&gt;&lt;a href=&quot;#close_1&quot;&gt;close/1&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a67b1c8d7dbf4d841c943dc2946b4f7a2cdfea71" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lclose/1&lt;/code&gt; closes a local log or an individual distributed log on the current node.</source>
          <target state="translated">&lt;code&gt;lclose/1&lt;/code&gt; закрывает локальный журнал или отдельный распределенный журнал на текущем узле.</target>
        </trans-unit>
        <trans-unit id="9b103b7c84a1c1813d67554045b1245a8aec0af6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lclose/2&lt;/code&gt; closes an individual distributed log on the specified node if the node is not the current one.</source>
          <target state="translated">&lt;code&gt;lclose/2&lt;/code&gt; закрывает отдельный распределенный журнал на указанном узле, если узел не является текущим.</target>
        </trans-unit>
        <trans-unit id="fb237ae7bc4ddc5bd78c0bc0383db41484ff959d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lcnt&lt;/code&gt; is used to find contention points in the Erlang Run-Time System's internal locking mechanisms. It is useful when looking for bottlenecks in interaction between process, port, ets tables and other entities that can be run in parallel.</source>
          <target state="translated">&lt;code&gt;lcnt&lt;/code&gt; используется для поиска конфликтных точек во внутренних механизмах блокировки Erlang Run-Time System. Это полезно при поиске узких мест во взаимодействии между процессами, портами, таблицами ets и другими объектами, которые могут выполняться параллельно.</target>
        </trans-unit>
        <trans-unit id="331dee2c2ee873ecad7db7a741ab79842dccabfa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lcnt&lt;/code&gt; is used to profile interactions inbetween entities that run in parallel. For example if you have a process that all other processes in the system needs to interact with (maybe it has some global configuration), then &lt;code&gt;lcnt&lt;/code&gt; can be used to figure out if the interaction with that process is a problem.</source>
          <target state="translated">&lt;code&gt;lcnt&lt;/code&gt; используется для профилирования взаимодействий между сущностями, которые работают параллельно. Например, если у вас есть процесс, с которым должны взаимодействовать все другие процессы в системе (возможно, он имеет некоторую глобальную конфигурацию), то &lt;code&gt;lcnt&lt;/code&gt; можно использовать, чтобы выяснить, является ли взаимодействие с этим процессом проблемой.</target>
        </trans-unit>
        <trans-unit id="25ce4f2b1f1e06d9949ea3fe11c52d35da9121ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;len&lt;/code&gt; is the length of &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;len&lt;/code&gt; - длина &lt;code&gt;string&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="de4624d2d9acec6c37f781ba7bd5df326bc8a4a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;len&lt;/code&gt; is the length of the message in bytes.</source>
          <target state="translated">&lt;code&gt;len&lt;/code&gt; - длина сообщения в байтах.</target>
        </trans-unit>
        <trans-unit id="98f88a9115e57d8f3563b9d731c267d124cd7da9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;length : integer&lt;/code&gt; :: Async queue length. Ex. &lt;code&gt;-1&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;length : integer&lt;/code&gt; :: Длина асинхронной очереди. Ex. &lt;code&gt;-1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="afc5c6080141465fcafeeef615a30ef4d6eed1a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;length : integer&lt;/code&gt; :: Async queue length. Ex. &lt;code&gt;0&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;length : integer&lt;/code&gt; :: Длина асинхронной очереди. Ex. &lt;code&gt;0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="031b6f26da3f37178c8c4740ef267aec1a691654" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lib&lt;/code&gt; - Application directories</source>
          <target state="translated">&lt;code&gt;lib&lt;/code&gt; - каталоги приложений</target>
        </trans-unit>
        <trans-unit id="2a4f8d53fb0ae82e919ce51996fe4ba629c04004" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;library_path&lt;/code&gt;, the &lt;code&gt;&lt;a href=&quot;#library_path&quot;&gt;library path&lt;/a&gt;&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;library_path&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#library_path&quot;&gt;library path&lt;/a&gt;&lt;/code&gt; к библиотеке ;</target>
        </trans-unit>
        <trans-unit id="eaef050de46766049525e30b626f851658013532" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;line&lt;/code&gt; - Line mode, a packet is a line-terminated with newline, lines longer than the receive buffer are truncated</source>
          <target state="translated">&lt;code&gt;line&lt;/code&gt; - строковый режим, пакет заканчивается строкой новой строкой, строки длиннее принимающего буфера обрезаются</target>
        </trans-unit>
        <trans-unit id="9790f41088482266e752413781e0ffe00199475f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;list()&lt;/code&gt; - The one given as argument to function &lt;code&gt;subsystem_spec/1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;list()&lt;/code&gt; - тот, который указан в качестве аргумента функции &lt;code&gt;subsystem_spec/1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8a7718bab464f8ceacbe2b50a1165970a64023b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;list&lt;/code&gt; is an Erlang term containing a list.</source>
          <target state="translated">&lt;code&gt;list&lt;/code&gt; - это термин Erlang, содержащий список.</target>
        </trans-unit>
        <trans-unit id="726a4da1d64ef4b3b69b2ea4714bcdd39c26c4b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;list&lt;/code&gt; is an Erlang term containing a proper list. In a proper list, all tails except the last point to another list cell, and the last tail points to an empty list.</source>
          <target state="translated">&lt;code&gt;list&lt;/code&gt; - это термин Erlang, содержащий правильный список. В правильном списке все хвосты, кроме последней, указывают на другую ячейку списка, а последняя хвостовая часть указывает на пустой список.</target>
        </trans-unit>
        <trans-unit id="3a18e9029c5b8737849184d7fa1445abea54500c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;list&lt;/code&gt; is an Erlang term containing an I/O list.</source>
          <target state="translated">&lt;code&gt;list&lt;/code&gt; - это термин Erlang, содержащий список ввода-вывода.</target>
        </trans-unit>
        <trans-unit id="be5f65fbdbd15a19650c5680eb95cc7ff30b8e07" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;list&lt;/code&gt; is an Erlang term containing an I/O list. The I/O list must not contain the integer 0, as C strings may not contain this value except as a terminating marker.</source>
          <target state="translated">&lt;code&gt;list&lt;/code&gt; - это термин Erlang, содержащий список ввода-вывода. Список ввода-вывода не должен содержать целое число 0, так как строки C могут не содержать этого значения, кроме как маркера завершения.</target>
        </trans-unit>
        <trans-unit id="1ff60fee6c0558227a68fafe4201fffd5289ccfb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;list_auth_users/1&lt;/code&gt;, &lt;code&gt;list_auth_users/2&lt;/code&gt;, and &lt;code&gt;list_auth_users/3&lt;/code&gt; each returns a list of users that are currently authenticated. Authentications are stored for &lt;code&gt;SecurityAuthTimeout&lt;/code&gt; seconds, and then discarded.</source>
          <target state="translated">&lt;code&gt;list_auth_users/1&lt;/code&gt; , &lt;code&gt;list_auth_users/2&lt;/code&gt; и &lt;code&gt;list_auth_users/3&lt;/code&gt; каждый возвращает список пользователей, которые в настоящее время аутентифицированы. Аутентификации сохраняются в течение секунд &lt;code&gt;SecurityAuthTimeout&lt;/code&gt; , а затем отбрасываются.</target>
        </trans-unit>
        <trans-unit id="5acfd7019e137b4cdc2774dc25661afca35ffbef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;list_blocked_users/1&lt;/code&gt;, &lt;code&gt;list_blocked_users/2&lt;/code&gt;, and &lt;code&gt;list_blocked_users/3&lt;/code&gt; each returns a list of users that are currently blocked from access.</source>
          <target state="translated">&lt;code&gt;list_blocked_users/1&lt;/code&gt; , &lt;code&gt;list_blocked_users/2&lt;/code&gt; и &lt;code&gt;list_blocked_users/3&lt;/code&gt; возвращает список пользователей, доступ к которым в настоящее время заблокирован.</target>
        </trans-unit>
        <trans-unit id="8fa5a48c1d351eb3391bd3d93f9d211ac75dc2d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;list_dir/1&lt;/code&gt; retrieves all filenames in the zip archive &lt;code&gt;Archive&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;list_dir/1&lt;/code&gt; получает все имена файлов в zip-архиве &lt;code&gt;Archive&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a4ce3ce5745733f123cf322f55e9ef14e233b7a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;list_dir/2&lt;/code&gt; provides options.</source>
          <target state="translated">&lt;code&gt;list_dir/2&lt;/code&gt; предоставляет параметры.</target>
        </trans-unit>
        <trans-unit id="f53ab94d5ba9db56fa66c8232d30db5fa6547050" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;list_group_members/2, list_group_members/3&lt;/code&gt;, and &lt;code&gt;list_group_members/4&lt;/code&gt; each lists the members of a specified group. If the group does not exist or there is an error, &lt;code&gt;{error, Reason}&lt;/code&gt; is returned. When &lt;code&gt;list_group_members/2&lt;/code&gt; is called, options &lt;code&gt;Port&lt;/code&gt; and &lt;code&gt;Dir&lt;/code&gt; are mandatory.</source>
          <target state="translated">&lt;code&gt;list_group_members/2, list_group_members/3&lt;/code&gt; и &lt;code&gt;list_group_members/4&lt;/code&gt; каждый перечисляет членов указанной группы. Если группа не существует или есть ошибка, возвращается &lt;code&gt;{error, Reason}&lt;/code&gt; . Когда &lt;code&gt;list_group_members/2&lt;/code&gt; , параметры &lt;code&gt;Port&lt;/code&gt; и &lt;code&gt;Dir&lt;/code&gt; являются обязательными.</target>
        </trans-unit>
        <trans-unit id="18d59539d0fef19e0d714af933d9eefa77a0818d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;list_groups/1, list_groups/2&lt;/code&gt;, and &lt;code&gt;list_groups/3&lt;/code&gt; each lists all the groups available. If there is an error, &lt;code&gt;{error, Reason}&lt;/code&gt; is returned. When &lt;code&gt;list_groups/1&lt;/code&gt; is called, options &lt;code&gt;Port&lt;/code&gt; and &lt;code&gt;Dir&lt;/code&gt; are mandatory.</source>
          <target state="translated">&lt;code&gt;list_groups/1, list_groups/2&lt;/code&gt; и &lt;code&gt;list_groups/3&lt;/code&gt; каждый перечисляет все доступные группы. В случае ошибки возвращается &lt;code&gt;{error, Reason}&lt;/code&gt; . Когда &lt;code&gt;list_groups/1&lt;/code&gt; , параметры &lt;code&gt;Port&lt;/code&gt; и &lt;code&gt;Dir&lt;/code&gt; являются обязательными.</target>
        </trans-unit>
        <trans-unit id="7c79260e7f4c22a26aa9f665a18df6729efbe233" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;list_users/1, list_users/2&lt;/code&gt;, and &lt;code&gt;list_users/3&lt;/code&gt; each returns a list of users in the user database for a specific &lt;code&gt;Port/Dir&lt;/code&gt;. When &lt;code&gt;list_users/1&lt;/code&gt; is called, options &lt;code&gt;Port&lt;/code&gt; and &lt;code&gt;Dir&lt;/code&gt; are mandatory.</source>
          <target state="translated">&lt;code&gt;list_users/1, list_users/2&lt;/code&gt; и &lt;code&gt;list_users/3&lt;/code&gt; каждый возвращает список пользователей в базе данных пользователей для определенного &lt;code&gt;Port/Dir&lt;/code&gt; . Когда &lt;code&gt;list_users/1&lt;/code&gt; , параметры &lt;code&gt;Port&lt;/code&gt; и &lt;code&gt;Dir&lt;/code&gt; являются обязательными.</target>
        </trans-unit>
        <trans-unit id="7e6cad36a8a85579416bf1628b19e45d5eefb715" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;listen/1&lt;/code&gt; is called once in order to listen for incoming connection requests. The call is made when the distribution is brought up. The argument &lt;code&gt;Name&lt;/code&gt; is the part of the node name before the &lt;code&gt;@&lt;/code&gt; sign in the full node name. It can be either an atom or a string.</source>
          <target state="translated">&lt;code&gt;listen/1&lt;/code&gt; вызывается один раз для прослушивания входящих запросов на соединение. Вызов совершается при запуске раздачи. Аргумент &lt;code&gt;Name&lt;/code&gt; - это часть имени узла перед знаком &lt;code&gt;@&lt;/code&gt; в полном имени узла. Это может быть атом или строка.</target>
        </trans-unit>
        <trans-unit id="3390bea1740da3235aebc0537125e1e385dc069f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;listensock&lt;/code&gt; is an open socket descriptor on which &lt;code&gt;listen()&lt;/code&gt; has previously been called.</source>
          <target state="translated">&lt;code&gt;listensock&lt;/code&gt; - это дескриптор открытого сокета, для которого ранее был вызван &lt;code&gt;listen()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="93ca30f0b36fd9439a8c607bf40abd0dde1401b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lists:append(A, B)&lt;/code&gt; is equivalent to &lt;code&gt;A ++ B&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;lists:append(A, B)&lt;/code&gt; эквивалентно &lt;code&gt;A ++ B&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cd0e2167b19a98d558382b7069180326cf81741b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lists:flatten/1&lt;/code&gt; builds an entirely new list. It is therefore expensive, and even &lt;strong&gt;more&lt;/strong&gt; expensive than the &lt;code&gt;++&lt;/code&gt; operator (which copies its left argument, but not its right argument).</source>
          <target state="translated">&lt;code&gt;lists:flatten/1&lt;/code&gt; List : flatten / 1 создает совершенно новый список. Следовательно , дорогой, и даже &lt;strong&gt;более&lt;/strong&gt; дорогой , чем &lt;code&gt;++&lt;/code&gt; оператор (который копирует свой левый аргумент, но не его право аргумента).</target>
        </trans-unit>
        <trans-unit id="2fc30df23df0d4aae69fe65f114fd554b7fccaaf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lists:keydelete&lt;/code&gt; works in the same way but deletes the first tuple found (if any) and returns the remaining list:</source>
          <target state="translated">&lt;code&gt;lists:keydelete&lt;/code&gt; работает таким же образом, но удаляет первый найденный кортеж (если есть) и возвращает оставшийся список:</target>
        </trans-unit>
        <trans-unit id="8f4eb825c0ab4a344284bd22859baffe203e6edc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lists:keysearch&lt;/code&gt; is like &lt;code&gt;lists:keymember&lt;/code&gt;, but it returns &lt;code&gt;{value,Tuple_Found}&lt;/code&gt; or the atom &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;lists:keysearch&lt;/code&gt; похож на &lt;code&gt;lists:keymember&lt;/code&gt; , но возвращает &lt;code&gt;{value,Tuple_Found}&lt;/code&gt; или атом &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e11c251dfb860431b23cc06d48025147f0ce53f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lists:subtract(A, B)&lt;/code&gt; is equivalent to &lt;code&gt;A -- B&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;lists:subtract(A, B)&lt;/code&gt; эквивалентно &lt;code&gt;A -- B&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3e66636fc0a180beb50c9d8299fb3e8f7cda2095" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;literal_alloc&lt;/code&gt; super carrier size (in MB). The amount of &lt;strong&gt;virtual&lt;/strong&gt; address space reserved for literal terms in Erlang code on 64-bit architectures. Defaults to &lt;code&gt;1024&lt;/code&gt; (that is, 1 GB), which is usually sufficient. The flag is ignored on 32-bit architectures.</source>
          <target state="translated">&lt;code&gt;literal_alloc&lt;/code&gt; - размер супер-носителя (в МБ). Объем &lt;strong&gt;виртуального&lt;/strong&gt; адресного пространства, зарезервированного для буквальных терминов в коде Erlang на 64-битных архитектурах. По умолчанию &lt;code&gt;1024&lt;/code&gt; (то есть 1 ГБ), что обычно достаточно. Флаг игнорируется на 32-битных архитектурах.</target>
        </trans-unit>
        <trans-unit id="d54c2beccdcdadf7b8b8e9e5d5d92fd60ac7d4ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;load&lt;/code&gt; is called when the NIF library is loaded and no previously loaded library exists for this module.</source>
          <target state="translated">&lt;code&gt;load&lt;/code&gt; вызывается, когда загружается библиотека NIF и для этого модуля не существует ранее загруженной библиотеки.</target>
        </trans-unit>
        <trans-unit id="99e9f90b11036e44681cbe3af66054d11205eaec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;load&lt;/code&gt;, &lt;code&gt;upgrade&lt;/code&gt; and &lt;code&gt;unload&lt;/code&gt; are pointers to functions. One of &lt;code&gt;load&lt;/code&gt; or &lt;code&gt;upgrade&lt;/code&gt; is called to initialize the library. &lt;code&gt;unload&lt;/code&gt; is called to release the library. All are described individually below.</source>
          <target state="translated">&lt;code&gt;load&lt;/code&gt; , &lt;code&gt;upgrade&lt;/code&gt; и &lt;code&gt;unload&lt;/code&gt; - это указатели на функции. Один из вариантов &lt;code&gt;load&lt;/code&gt; или &lt;code&gt;upgrade&lt;/code&gt; вызывается для инициализации библиотеки. &lt;code&gt;unload&lt;/code&gt; вызывается для освобождения библиотеки. Все они описаны ниже по отдельности.</target>
        </trans-unit>
        <trans-unit id="04f795031c0a3191dc6833462193ff8535894cb4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;load_info&lt;/code&gt; is the second argument to &lt;code&gt;&lt;a href=&quot;erlang#load_nif-2&quot;&gt;erlang:load_nif/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;load_info&lt;/code&gt; - это второй аргумент &lt;code&gt;&lt;a href=&quot;erlang#load_nif-2&quot;&gt;erlang:load_nif/2&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aff9e8cdbf9e030064b2b7fe81a987f154b034d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;load_node&lt;/code&gt;. Returns the name of the node that Mnesia loaded the table from. The structure of the returned value is unspecified, but can be useful for debugging purposes.</source>
          <target state="translated">&lt;code&gt;load_node&lt;/code&gt; . Возвращает имя узла, с которого Mnesia загрузила таблицу. Структура возвращаемого значения не указана, но может быть полезна для целей отладки.</target>
        </trans-unit>
        <trans-unit id="a643fb5182da0ca35ae74da8a11c5192585d1561" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;load_order&lt;/code&gt;. Returns the load order priority of the table. It is an integer and defaults to &lt;code&gt;0&lt;/code&gt; (zero).</source>
          <target state="translated">&lt;code&gt;load_order&lt;/code&gt; . Возвращает приоритет порядка загрузки таблицы. Это целое число и по умолчанию &lt;code&gt;0&lt;/code&gt; (ноль).</target>
        </trans-unit>
        <trans-unit id="24aaff6b3ceaf8f7959a64ecaf82f686d9c3c0fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;load_reason&lt;/code&gt;. Returns the reason of why Mnesia decided to load the table. The structure of the returned value is unspecified, but can be useful for debugging purposes.</source>
          <target state="translated">&lt;code&gt;load_reason&lt;/code&gt; . Возвращает причину, по которой Mnesia решила загрузить таблицу. Структура возвращаемого значения не указана, но может быть полезна для целей отладки.</target>
        </trans-unit>
        <trans-unit id="45ed93e5123c7e83801fb2528f0aa02733e06e2c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;local&lt;/code&gt; is an option that means that the directories where the applications are found are used in the boot script, instead of &lt;code&gt;$ROOT/lib&lt;/code&gt; (&lt;code&gt;$ROOT&lt;/code&gt; is the root directory of the installed release).</source>
          <target state="translated">&lt;code&gt;local&lt;/code&gt; - это параметр, который означает, что каталоги, в которых находятся приложения, используются в сценарии загрузки вместо &lt;code&gt;$ROOT/lib&lt;/code&gt; ( &lt;code&gt;$ROOT&lt;/code&gt; - это корневой каталог установленной версии).</target>
        </trans-unit>
        <trans-unit id="182486b044d3d61e0e4eb3eba30d58307f59efbf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;local&lt;/code&gt; is returned if only parts of the application are restarted (by a supervisor), or if the function is called outside a startup.</source>
          <target state="translated">&lt;code&gt;local&lt;/code&gt; возвращается, если перезапускаются только части приложения (супервизором) или если функция вызывается вне запуска.</target>
        </trans-unit>
        <trans-unit id="8803b8be9dd903808934ee41a2901394e37636cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;local_content&lt;/code&gt;. Returns &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; to indicate if the table is configured to have locally unique content on each node.</source>
          <target state="translated">&lt;code&gt;local_content&lt;/code&gt; . Возвращает &lt;code&gt;true&lt;/code&gt; или &lt;code&gt;false&lt;/code&gt; чтобы указать, настроена ли таблица для локального уникального содержимого на каждом узле.</target>
        </trans-unit>
        <trans-unit id="24e5e058c6b2dcae03991ec71d8aa2c47c7d3153" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;local_content&lt;/code&gt;. When an application requires tables whose contents are local to each node, &lt;code&gt;local_content&lt;/code&gt; tables can be used. The table name is known to all Mnesia nodes, but its content is unique on each node. This means that access to such a table must be done locally. Set field &lt;code&gt;local_content&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; to enable the &lt;code&gt;local_content&lt;/code&gt; behavior. Default is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;local_content&lt;/code&gt; . Когда приложению требуются таблицы, содержимое которых является локальным для каждого узла, можно использовать таблицы &lt;code&gt;local_content&lt;/code&gt; . Имя таблицы известно всем узлам Mnesia, но ее содержимое уникально на каждом узле. Это означает, что доступ к такой таблице должен осуществляться локально. Установите для поля &lt;code&gt;local_content&lt;/code&gt; значение &lt;code&gt;true&lt;/code&gt; , чтобы включить поведение &lt;code&gt;local_content&lt;/code&gt; . По умолчанию - &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3a5f52568d19693d798aaa7dde969e33e5993d63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;local_tables&lt;/code&gt;. Returns a list of all tables that are configured to reside locally.</source>
          <target state="translated">&lt;code&gt;local_tables&lt;/code&gt; . Возвращает список всех таблиц, настроенных для локального размещения.</target>
        </trans-unit>
        <trans-unit id="3105149e9ac8a04e76c7b0fb03db073b4ea51a3a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lock&lt;/code&gt; specifies whether &lt;code&gt;Mnesia&lt;/code&gt; is to acquire a read or write lock on the table.</source>
          <target state="translated">&lt;code&gt;lock&lt;/code&gt; указывает, должна ли &lt;code&gt;Mnesia&lt;/code&gt; получить блокировку чтения или записи для таблицы.</target>
        </trans-unit>
        <trans-unit id="47c000df4e030c56062201fa1e4645513ad3cf9d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lock_queue&lt;/code&gt;. Returns a list of all transactions that are queued for execution by the local lock manager.</source>
          <target state="translated">&lt;code&gt;lock_queue&lt;/code&gt; . Возвращает список всех транзакций, поставленных в очередь для выполнения локальным диспетчером блокировок.</target>
        </trans-unit>
        <trans-unit id="dfc11c648eda5a7d9fdd3f797b74aafa254dfc21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;log/2&lt;/code&gt; is used for internally formatted logs, and &lt;code&gt;blog/2&lt;/code&gt; for externally formatted logs. &lt;code&gt;blog/2&lt;/code&gt; can also be used for internally formatted logs if the binary is constructed with a call to &lt;code&gt;term_to_binary/1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;log/2&lt;/code&gt; используется для журналов внутреннего формата, а &lt;code&gt;blog/2&lt;/code&gt; - для журналов внешнего формата. &lt;code&gt;blog/2&lt;/code&gt; также можно использовать для журналов с внутренним форматированием, если двоичный файл создается с помощью вызова &lt;code&gt;term_to_binary/1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="35f86282b4a84e4c8c3d37ec0a3d441cd2b85619" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;log_dir&lt;/code&gt; is where the log files are written.</source>
          <target state="translated">&lt;code&gt;log_dir&lt;/code&gt; - это место, где записываются файлы журнала.</target>
        </trans-unit>
        <trans-unit id="995e2d2521421390d9a06c23bfa3a101cfb1b278" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;log_terms/2&lt;/code&gt; is used for internally formatted logs, and &lt;code&gt;blog_terms/2&lt;/code&gt; for externally formatted logs. &lt;code&gt;blog_terms/2&lt;/code&gt; can also be used for internally formatted logs if the binaries are constructed with calls to &lt;code&gt;term_to_binary/1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;log_terms/2&lt;/code&gt; используется для журналов внутреннего формата, а &lt;code&gt;blog_terms/2&lt;/code&gt; - для журналов внешнего формата. &lt;code&gt;blog_terms/2&lt;/code&gt; также можно использовать для журналов с внутренним форматированием, если двоичные файлы созданы с помощью вызовов &lt;code&gt;term_to_binary/1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="23529896ccb5d645b44d285439cb214a836bfc9f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;log_version&lt;/code&gt;. Returns the version number of the Mnesia transaction log format.</source>
          <target state="translated">&lt;code&gt;log_version&lt;/code&gt; . Возвращает номер версии формата журнала транзакций Mnesia.</target>
        </trans-unit>
        <trans-unit id="3dcb31be04290d5acce7d33cd9a0cee64c351d93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;logger_formatter&lt;/code&gt; is the default formatter used by Logger.</source>
          <target state="translated">&lt;code&gt;logger_formatter&lt;/code&gt; - это средство форматирования по умолчанию, используемое Logger.</target>
        </trans-unit>
        <trans-unit id="d273bde00c44f84e57b534c9ee265abf11e0eb98" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lookup&lt;/code&gt; extracts &lt;code&gt;{Key,Value}&lt;/code&gt; tuples from &lt;code&gt;ETSTable&lt;/code&gt; and returns the &lt;code&gt;Value&lt;/code&gt; associated with &lt;code&gt;Key&lt;/code&gt;. If &lt;code&gt;ETSTable&lt;/code&gt; is of type &lt;code&gt;bag&lt;/code&gt;, only the first &lt;code&gt;Value&lt;/code&gt; associated with &lt;code&gt;Key&lt;/code&gt; is returned. &lt;code&gt;lookup/2&lt;/code&gt; returns &lt;code&gt;undefined&lt;/code&gt; and &lt;code&gt;lookup/3&lt;/code&gt; returns &lt;code&gt;Undefined&lt;/code&gt; if no &lt;code&gt;Value&lt;/code&gt; is found.</source>
          <target state="translated">&lt;code&gt;lookup&lt;/code&gt; извлекает кортежи &lt;code&gt;{Key,Value}&lt;/code&gt; из &lt;code&gt;ETSTable&lt;/code&gt; и возвращает &lt;code&gt;Value&lt;/code&gt; связанное с &lt;code&gt;Key&lt;/code&gt; . Если &lt;code&gt;ETSTable&lt;/code&gt; имеет тип &lt;code&gt;bag&lt;/code&gt; , возвращается только первое &lt;code&gt;Value&lt;/code&gt; связанное с &lt;code&gt;Key&lt;/code&gt; . &lt;code&gt;lookup/2&lt;/code&gt; возвращает &lt;code&gt;undefined&lt;/code&gt; , а &lt;code&gt;lookup/3&lt;/code&gt; возвращает &lt;code&gt;Undefined&lt;/code&gt; , если &lt;code&gt;Value&lt;/code&gt; не найдено.</target>
        </trans-unit>
        <trans-unit id="eb86b8f77b9b208e6a11d12b37271d4c192f67f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lookup_mime&lt;/code&gt; returns the MIME type associated with a specific file suffix as specified in the file &lt;code&gt;mime.types&lt;/code&gt; (located in the config directory).</source>
          <target state="translated">&lt;code&gt;lookup_mime&lt;/code&gt; возвращает тип MIME, связанный с определенным суффиксом файла, как указано в файле &lt;code&gt;mime.types&lt;/code&gt; (расположенном в каталоге конфигурации).</target>
        </trans-unit>
        <trans-unit id="c90fbcda6ae10bb657658395cb0d63bc3c4582c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lookup_mime_default&lt;/code&gt; returns the MIME type associated with a specific file suffix as specified in the &lt;code&gt;mime.types&lt;/code&gt; file (located in the config directory). If no appropriate association is found, the value of &lt;code&gt;DefaultType&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;code&gt;lookup_mime_default&lt;/code&gt; возвращает тип MIME, связанный с определенным суффиксом файла, как указано в файле &lt;code&gt;mime.types&lt;/code&gt; (расположенном в каталоге config). Если подходящая связь не найдена, возвращается значение &lt;code&gt;DefaultType&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3dfec20f4c61fd18fa24269ea42272c9fc181327" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;low_entropy&lt;/code&gt;: the random generator failed due to lack of secure &quot;randomness&quot;,</source>
          <target state="translated">&lt;code&gt;low_entropy&lt;/code&gt; : генератор случайных чисел отказал из-за отсутствия безопасной &amp;laquo;случайности&amp;raquo;,</target>
        </trans-unit>
        <trans-unit id="61f5cddd2234c71cd616f814453f29c2cac4203d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ls/1&lt;/code&gt; implies the current remote directory of the user.</source>
          <target state="translated">&lt;code&gt;ls/1&lt;/code&gt; подразумевает текущий удаленный каталог пользователя.</target>
        </trans-unit>
        <trans-unit id="86263d48661c7d702923e5fea293faecb2b162c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;m/1&lt;/code&gt; is also suitable for checking that the BEAM file of a module that is about to be loaded into a running a system does not call any undefined functions. In either case, the code path of the code server (see the module &lt;code&gt;code&lt;/code&gt;) is used for finding modules that export externally called functions not exported by the checked module itself, so called &lt;code&gt;&lt;a href=&quot;xref#library_module&quot;&gt;library modules&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;m/1&lt;/code&gt; также подходит для проверки того, что файл BEAM модуля, который будет загружен в работающую систему, не вызывает каких-либо неопределенных функций. В любом случае путь кода сервера кода (см. &lt;code&gt;code&lt;/code&gt; модуля ) используется для поиска модулей, которые экспортируют вызываемые извне функции, не экспортируемые самим отмеченным модулем, так называемые &lt;code&gt;&lt;a href=&quot;xref#library_module&quot;&gt;library modules&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="df9537a65ebbc229094f9e153efaf34118a0a025" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;m1&lt;/code&gt; is dependent on &lt;code&gt;ch3&lt;/code&gt; also when downgrading. &lt;code&gt;systools&lt;/code&gt; knows the difference between up- and downgrading and generates a correct &lt;code&gt;relup&lt;/code&gt;, where &lt;code&gt;ch3&lt;/code&gt; is loaded before &lt;code&gt;m1&lt;/code&gt; when upgrading, but &lt;code&gt;m1&lt;/code&gt; is loaded before &lt;code&gt;ch3&lt;/code&gt; when downgrading.</source>
          <target state="translated">&lt;code&gt;m1&lt;/code&gt; зависит от &lt;code&gt;ch3&lt;/code&gt; также при понижении версии . &lt;code&gt;systools&lt;/code&gt; знает разницу между повышением и понижением &lt;code&gt;relup&lt;/code&gt; и генерирует правильное повторное подключение , где &lt;code&gt;ch3&lt;/code&gt; загружается перед &lt;code&gt;m1&lt;/code&gt; при обновлении, но &lt;code&gt;m1&lt;/code&gt; загружается перед &lt;code&gt;ch3&lt;/code&gt; при понижении.</target>
        </trans-unit>
        <trans-unit id="be74c7b55753734ee046ceff4ef299316ae01ad4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;major : integer&lt;/code&gt; :: Major version. Ex. &lt;code&gt;3&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;major : integer&lt;/code&gt; :: Основная версия. Ex. &lt;code&gt;3&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5e5f4e2011f683da4cdaf06fa133ff71c470850c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;majority&lt;/code&gt;. This attribute is &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;; default is &lt;code&gt;false&lt;/code&gt;. When &lt;code&gt;true&lt;/code&gt;, a majority of the table replicas must be available for an update to succeed. Majority checking can be enabled on tables with mission-critical data, where it is vital to avoid inconsistencies because of network splits.</source>
          <target state="translated">&lt;code&gt;majority&lt;/code&gt; . Этот атрибут имеет значение &lt;code&gt;true&lt;/code&gt; или &lt;code&gt;false&lt;/code&gt; ; по умолчанию - &lt;code&gt;false&lt;/code&gt; . Если установлено значение &lt;code&gt;true&lt;/code&gt; , для успешного обновления должно быть доступно большинство реплик таблиц. Проверка большинства может быть включена для таблиц с критически важными данными, где жизненно важно избежать несогласованности из-за разделения сети.</target>
        </trans-unit>
        <trans-unit id="f325d85c7b8a9fe60e4ce65f1b1b9a5d59c1afcd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;make install&lt;/code&gt; will install at a location specified when doing &lt;code&gt;configure&lt;/code&gt;. &lt;code&gt;configure&lt;/code&gt; arguments specifying where the installation should reside are for example: &lt;code&gt;--prefix&lt;/code&gt;, &lt;code&gt;--exec-prefix&lt;/code&gt;, &lt;code&gt;--libdir&lt;/code&gt;, &lt;code&gt;--bindir&lt;/code&gt;, etc. By default it will install under &lt;code&gt;/usr/local&lt;/code&gt;. You typically do not want to install your cross build under &lt;code&gt;/usr/local&lt;/code&gt; on your build machine. Using &lt;code&gt;&lt;a href=&quot;http://www.gnu.org/prep/standards/html_node/DESTDIR.html&quot;&gt;DESTDIR&lt;/a&gt;&lt;/code&gt; will cause the installation paths to be prefixed by &lt;code&gt;$DESTDIR&lt;/code&gt;. This makes it possible to install and package the installation on the build machine without having to place the installation in the same directory on the build machine as it should be executed from on the target machine.</source>
          <target state="translated">&lt;code&gt;make install&lt;/code&gt; будет установлена ​​в место, указанное при &lt;code&gt;configure&lt;/code&gt; . &lt;code&gt;--exec-prefix&lt;/code&gt; &lt;code&gt;configure&lt;/code&gt; , указывающие, где должна находиться установка, например: &lt;code&gt;--prefix&lt;/code&gt; , --exec-prefix , &lt;code&gt;--libdir&lt;/code&gt; , &lt;code&gt;--bindir&lt;/code&gt; и т. д. По умолчанию он устанавливается в &lt;code&gt;/usr/local&lt;/code&gt; . Обычно вы не хотите устанавливать кросс-сборку в &lt;code&gt;/usr/local&lt;/code&gt; на вашем компьютере сборки. Использование &lt;code&gt;&lt;a href=&quot;http://www.gnu.org/prep/standards/html_node/DESTDIR.html&quot;&gt;DESTDIR&lt;/a&gt;&lt;/code&gt; приведет к тому, что пути установки будут иметь префикс &lt;code&gt;$DESTDIR&lt;/code&gt; , Это позволяет установить и упаковать установку на машине сборки без необходимости помещать установку в тот же каталог на машине сборки, из которого она должна выполняться на целевой машине.</target>
        </trans-unit>
        <trans-unit id="1f6c951c6749c15435d2980eb4aa791a53af9775" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;make release&lt;/code&gt; will copy what you have built for the target machine to &lt;code&gt;&amp;lt;RELEASE_DIR&amp;gt;&lt;/code&gt;. The &lt;code&gt;Install&lt;/code&gt; script will not be run. The content of &lt;code&gt;&amp;lt;RELEASE_DIR&amp;gt;&lt;/code&gt; is what by default ends up in &lt;code&gt;/usr/local/lib/erlang&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;make release&lt;/code&gt; скопирует то, что вы создали для целевой машины, в &lt;code&gt;&amp;lt;RELEASE_DIR&amp;gt;&lt;/code&gt; . Сценарий &lt;code&gt;Install&lt;/code&gt; не запускается. Содержимое &lt;code&gt;&amp;lt;RELEASE_DIR&amp;gt;&lt;/code&gt; по умолчанию попадает в &lt;code&gt;/usr/local/lib/erlang&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9e66362068d2d90fa1b3b40af705bb7adc3fbdf8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;make:all/0,1&lt;/code&gt; and &lt;code&gt;make:files/1,2&lt;/code&gt; first looks for &lt;code&gt;{emake, Emake}&lt;/code&gt; in options, then in the current working directory for a file named &lt;code&gt;Emakefile&lt;/code&gt;. If present &lt;code&gt;Emake&lt;/code&gt; should contain elements like this:</source>
          <target state="translated">&lt;code&gt;make:all/0,1&lt;/code&gt; и &lt;code&gt;make:files/1,2&lt;/code&gt; сначала ищет &lt;code&gt;{emake, Emake}&lt;/code&gt; в параметрах, а затем в текущем рабочем каталоге &lt;code&gt;Emakefile&lt;/code&gt; файл с именем Emakefile . Если присутствует &lt;code&gt;Emake&lt;/code&gt; ,он должен содержать такие элементы:</target>
        </trans-unit>
        <trans-unit id="270393b4583bd924998e84467ba7373cbe65d1f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;make&lt;/code&gt; will verify that the Erlang/OTP system used when building is of the same release as the system being built, and will fail if this is not the case. It is possible, however not recommended, to force the cross compilation even though the wrong Erlang/OTP system is used. This by invoking &lt;code&gt;make&lt;/code&gt; like this: &lt;code&gt;make ERL_XCOMP_FORCE_DIFFERENT_OTP=yes&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;make&lt;/code&gt; проверит, что используемая при сборке система Erlang / OTP имеет тот же выпуск, что и создаваемая система, и завершится ошибкой, если это не так. Возможно, но не рекомендуется, принудительную кросс-компиляцию, даже если используется неправильная система Erlang / OTP. Для этого &lt;code&gt;make ERL_XCOMP_FORCE_DIFFERENT_OTP=yes&lt;/code&gt; вызвать &lt;code&gt;make&lt;/code&gt; следующим образом: make ERL_XCOMP_FORCE_DIFFERENT_OTP = yes .</target>
        </trans-unit>
        <trans-unit id="840792aa7619bb306720f20c2ce63c67a313843f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;make_config/1&lt;/code&gt; uses the information previously saved by &lt;code&gt;&lt;a href=&quot;#save_scenario-0&quot;&gt;save_scenario/0&lt;/a&gt;&lt;/code&gt; in order to produce an &lt;code&gt;erts_alloc&lt;/code&gt; configuration. At least one scenario have had to be saved. All scenarios previously saved will be used when creating the configuration.</source>
          <target state="translated">&lt;code&gt;make_config/1&lt;/code&gt; использует информацию, ранее сохраненную с помощью &lt;code&gt;&lt;a href=&quot;#save_scenario-0&quot;&gt;save_scenario/0&lt;/a&gt;&lt;/code&gt; , для создания конфигурации &lt;code&gt;erts_alloc&lt;/code&gt; . По крайней мере, один сценарий нужно было сохранить. При создании конфигурации будут использованы все ранее сохраненные сценарии.</target>
        </trans-unit>
        <trans-unit id="1c2f1daea4e34d2fedd33079cf5e22510ff82244" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;malloc&lt;/code&gt; library to use. Only &lt;code&gt;libc&lt;/code&gt; is available. &lt;code&gt;libc&lt;/code&gt; enables the standard &lt;code&gt;libc&lt;/code&gt;&lt;code&gt;malloc&lt;/code&gt; implementation. By default &lt;code&gt;libc&lt;/code&gt; is used.</source>
          <target state="translated">&lt;code&gt;malloc&lt;/code&gt; Библиотека malloc для использования. Доступна только &lt;code&gt;libc&lt;/code&gt; . &lt;code&gt;libc&lt;/code&gt; включает стандартную реализацию &lt;code&gt;libc&lt;/code&gt; &lt;code&gt;malloc&lt;/code&gt; . По умолчанию используется &lt;code&gt;libc&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1ea55247b858a5b4454ad7ae65a30311cf2685ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;managed_agents&lt;/code&gt; is optional.</source>
          <target state="translated">&lt;code&gt;managed_agents&lt;/code&gt; не является обязательным.</target>
        </trans-unit>
        <trans-unit id="5a1d0c4b1351ca6835e9615992a7cec1a2c9a3dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;manager&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;manager&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="0b88984e46f4e980107b12a96398e4e130cc9eb8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;map(F, List)&lt;/code&gt; is a function that takes a function &lt;code&gt;F&lt;/code&gt; and a list &lt;code&gt;L&lt;/code&gt; as arguments and returns a new list, obtained by applying &lt;code&gt;F&lt;/code&gt; to each of the elements in &lt;code&gt;L&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;map(F, List)&lt;/code&gt; это функция , которая принимает функцию &lt;code&gt;F&lt;/code&gt; и список &lt;code&gt;L&lt;/code&gt; в качестве аргументов и возвращает новый список, полученный с применением &lt;code&gt;F&lt;/code&gt; к каждому из элементов &lt;code&gt;L&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6c156a66d82d82f9cf513b470fba98bac2bda89f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;map&lt;/code&gt; takes a function of one argument and a list of terms:</source>
          <target state="translated">&lt;code&gt;map&lt;/code&gt; принимает функцию одного аргумента и списка терминов:</target>
        </trans-unit>
        <trans-unit id="0d89ff44a50df5ef56c87f8de40fab752c012f38" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;map_size/1&lt;/code&gt; in the &lt;code&gt;erlang&lt;/code&gt; module</source>
          <target state="translated">&lt;code&gt;map_size/1&lt;/code&gt; в &lt;code&gt;erlang&lt;/code&gt; модуле</target>
        </trans-unit>
        <trans-unit id="b536a3850f767c913c875a0f2abcf64f84ffa387" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mapfoldl&lt;/code&gt; simultaneously maps and folds over a list:</source>
          <target state="translated">&lt;code&gt;mapfoldl&lt;/code&gt; одновременно отображает и сворачивает список:</target>
        </trans-unit>
        <trans-unit id="28e4cb0b9a019365b62b7f7670f762f6307804f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;master_node_tables&lt;/code&gt;. Returns a list of all tables with at least one master node.</source>
          <target state="translated">&lt;code&gt;master_node_tables&lt;/code&gt; . Возвращает список всех таблиц хотя бы с одним главным узлом.</target>
        </trans-unit>
        <trans-unit id="320b3e2e69db81bdb1bce46253be76bbb16cbd8b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;master_nodes&lt;/code&gt;. Returns the master nodes of a table.</source>
          <target state="translated">&lt;code&gt;master_nodes&lt;/code&gt; . Возвращает главные узлы таблицы.</target>
        </trans-unit>
        <trans-unit id="c7de2c527a233cc022f6da1c0a8ed25204d08b0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;max&lt;/code&gt; detail level activates tracing of all calls to &lt;code&gt;et:trace_me/4,5&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;max&lt;/code&gt; уровень детализации активирует отслеживание всех вызовов &lt;code&gt;et:trace_me/4,5&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="12cbb5e7aef12e76368e070ef17e62260df0b61b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;max_message_size&lt;/code&gt; - The &lt;code&gt;snmpEngineMaxMessageSize&lt;/code&gt; as defined in SNMP-FRAMEWORK-MIB. &lt;strong&gt;Mandatory&lt;/strong&gt;.</source>
          <target state="translated">&lt;code&gt;max_message_size&lt;/code&gt; - &lt;code&gt;snmpEngineMaxMessageSize&lt;/code&gt; , как определено в SNMP-FRAMEWORK-MIB. &lt;strong&gt;Обязательно&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="26fa86b89f3755b53f687395b2ba2fe437b5c4d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mbc_blocks : integer&lt;/code&gt; :: Number of multiblock blocks in instance. Ex. &lt;code&gt;122&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;mbc_blocks : integer&lt;/code&gt; :: Количество мультиблочных блоков в экземпляре. Ex. &lt;code&gt;122&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a20575c861819959a88555afdd99d04e48f52c95" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mbc_blocks_size : integer&lt;/code&gt; :: Total size of all multiblock blocks in instance. Ex. &lt;code&gt;285296&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;mbc_blocks_size : integer&lt;/code&gt; :: Общий размер всех мультиблочных блоков в экземпляре. Ex. &lt;code&gt;285296&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f38ae9d9af5aeaf996199c066c1e1c011b303785" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mbc_carriers : integer&lt;/code&gt; :: Number of multiblock carriers in instance. Ex. &lt;code&gt;3&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;mbc_carriers : integer&lt;/code&gt; :: Количество мультиблочных несущих в экземпляре. Ex. &lt;code&gt;3&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ac2207eda8c89c866a3cc4bbd0c29488a23573ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mbc_carriers_size : integer&lt;/code&gt; :: Total size of multiblock blocks carriers in instance. Ex. &lt;code&gt;1343488&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;mbc_carriers_size : integer&lt;/code&gt; :: Общий размер несущих мультиблочных блоков. Ex. &lt;code&gt;1343488&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4a957db9d5d62748a8fe5b4b90936c5d5cd85161" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;megaco:conn_info(ConnHandle, protocol_version)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;megaco:conn_info(ConnHandle, protocol_version)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f743dbd63891f34f678b14fd5065b8728a4d1ce3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;memory&lt;/code&gt;. Returns the number of words allocated to the table on this node.</source>
          <target state="translated">&lt;code&gt;memory&lt;/code&gt; . Возвращает количество слов, выделенных для таблицы на этом узле.</target>
        </trans-unit>
        <trans-unit id="ac55a1117d87b92c9643256061c0f84aef319452" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;memsup&lt;/code&gt; is a process which supervises the memory usage for the system and for individual processes. It is part of the OS_Mon application, see &lt;code&gt;os_mon(6)&lt;/code&gt;. Available for Unix, Windows and VxWorks.</source>
          <target state="translated">&lt;code&gt;memsup&lt;/code&gt; - это процесс, который контролирует использование памяти для системы и для отдельных процессов. Это часть приложения OS_Mon, см. &lt;code&gt;os_mon(6)&lt;/code&gt; . Доступно для Unix, Windows и VxWorks.</target>
        </trans-unit>
        <trans-unit id="50ed296aaff830f87c5d0ebf8ad050d27c8c72ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;merge(FileNames, Output)&lt;/code&gt; is equivalent to &lt;code&gt;merge(FileNames, Output, [])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;merge(FileNames, Output)&lt;/code&gt; эквивалентно &lt;code&gt;merge(FileNames, Output, [])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9d72ee5a4a1079ff1a0d9263eef7932f68891cc2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;message : string&lt;/code&gt; :: Message received. Ex. &lt;code&gt;&quot;{&amp;lt;0.162.0&amp;gt;,ok}&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;message : string&lt;/code&gt; :: Сообщение получено. Ex. &lt;code&gt;&quot;{&amp;lt;0.162.0&amp;gt;,ok}&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0fadf469f5c070a369f6f352483d71d18c16afb1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;message : string&lt;/code&gt; :: Message sent. Ex. &lt;code&gt;&quot;{&amp;lt;0.162.0&amp;gt;,ok}&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;message : string&lt;/code&gt; :: Сообщение отправлено. Ex. &lt;code&gt;&quot;{&amp;lt;0.162.0&amp;gt;,ok}&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="601216269fe1b6b0bfa4efef50ce0ac22a21a694" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;message/3&lt;/code&gt; returns an informative HTTP 1.1 status string in HTML. Each &lt;code&gt;StatusCode&lt;/code&gt; requires a specific &lt;code&gt;PhraseArgs&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;message/3&lt;/code&gt; возвращает информативную строку состояния HTTP 1.1 в HTML. Для каждого &lt;code&gt;StatusCode&lt;/code&gt; требуется определенный &lt;code&gt;PhraseArgs&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="a1b80be3f4eccb9a5e62f9291cf18851ca762db8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mime_decode/1&lt;/code&gt; and &lt;code&gt;mime_decode_to_string/1&lt;/code&gt; strip away illegal characters, while &lt;code&gt;decode/1&lt;/code&gt; and &lt;code&gt;decode_to_string/1&lt;/code&gt; only strip away whitespace characters.</source>
          <target state="translated">&lt;code&gt;mime_decode/1&lt;/code&gt; и &lt;code&gt;mime_decode_to_string/1&lt;/code&gt; стирают недопустимые символы, в то время &lt;code&gt;decode/1&lt;/code&gt; и &lt;code&gt;decode_to_string/1&lt;/code&gt; только стирают пробельные символы.</target>
        </trans-unit>
        <trans-unit id="f16de9b44c98ce3bac0c21ea5706a65429350ead" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;min&lt;/code&gt; detail level deactivates tracing of calls to &lt;code&gt;et:trace_me/4,5&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;min&lt;/code&gt; уровень детализации отключает отслеживание вызовов &lt;code&gt;et:trace_me/4,5&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ba8ce7ebe8ebbc9b5d6407ac6c488b0c9adbeefa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;minimum(NetTicktime, PreviousNetTicktime)*1000 div 4&lt;/code&gt; milliseconds.</source>
          <target state="translated">&lt;code&gt;minimum(NetTicktime, PreviousNetTicktime)*1000 div 4&lt;/code&gt; миллисекунды.</target>
        </trans-unit>
        <trans-unit id="07be14c2aee6768816e2158303036823a4f263b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;minor : integer&lt;/code&gt; :: Minor version. Ex. &lt;code&gt;1&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;minor : integer&lt;/code&gt; :: Дополнительная версия. Ex. &lt;code&gt;1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3c8f4454f124c597a614bdb6b3aaa486fa4b5803" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mnesia:create_schema/1&lt;/code&gt; fails if any of the Erlang nodes given as &lt;code&gt;DiscNodes&lt;/code&gt; are not alive, if Mnesia is running on any of the nodes, or if any of the nodes already have a schema. Use &lt;code&gt;mnesia:delete_schema/1&lt;/code&gt; to get rid of old faulty schemas.</source>
          <target state="translated">&lt;code&gt;mnesia:create_schema/1&lt;/code&gt; завершается ошибкой, если какой-либо из узлов Erlang, заданных как &lt;code&gt;DiscNodes&lt;/code&gt; ,неактивен , если Mnesia работает на любом из узлов или если какой-либо из узлов уже имеет схему. Используйте &lt;code&gt;mnesia:delete_schema/1&lt;/code&gt; , чтобы избавиться от старых ошибочных схем.</target>
        </trans-unit>
        <trans-unit id="46f82c21c22d4616aecf7c8b1c56ec2a760ab03c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mnesia:create_table/2&lt;/code&gt; writes records into the table &lt;code&gt;schema&lt;/code&gt;. This function, and all other schema manipulation functions, are implemented with the normal transaction management system. This guarantees that schema updates are performed on all nodes in an atomic manner.</source>
          <target state="translated">&lt;code&gt;mnesia:create_table/2&lt;/code&gt; записывает записи в &lt;code&gt;schema&lt;/code&gt; таблицы . Эта функция и все другие функции управления схемой реализуются с помощью обычной системы управления транзакциями. Это гарантирует, что обновления схемы выполняются на всех узлах атомарно.</target>
        </trans-unit>
        <trans-unit id="6674a440da17f45c124781667eb63ea358c2a30b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mnesia:dirty_update_counter/3&lt;/code&gt; is performed as an atomic operation although it is not protected by a transaction.</source>
          <target state="translated">&lt;code&gt;mnesia:dirty_update_counter/3&lt;/code&gt; выполняется как атомарная операция, хотя она не защищена транзакцией.</target>
        </trans-unit>
        <trans-unit id="b38f14a2c660b4fcf832b846b6f767d27365af15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mnesia_down&lt;/code&gt; is returned from all other nodes that hold a disc resident replica of the table.</source>
          <target state="translated">&lt;code&gt;mnesia_down&lt;/code&gt; возвращается от всех других узлов, которые содержат резидентную реплику таблицы.</target>
        </trans-unit>
        <trans-unit id="24fe5ec7d38e879b10d409aa6aba87736ab0122e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mnesia_down&lt;/code&gt;. A transaction involves records on a remote node, which became unavailable before the transaction was completed. Records are no longer available elsewhere in the network.</source>
          <target state="translated">&lt;code&gt;mnesia_down&lt;/code&gt; . Транзакция включает записи на удаленном узле, который стал недоступен до завершения транзакции. Записи больше не доступны в других частях сети.</target>
        </trans-unit>
        <trans-unit id="567e8d7f662b9af7f74d10c817224f15a1738818" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mntab&lt;/code&gt; is the name of the &lt;code&gt;Mnesia&lt;/code&gt; table to read data from.</source>
          <target state="translated">&lt;code&gt;mntab&lt;/code&gt; - это имя таблицы &lt;code&gt;Mnesia&lt;/code&gt; ,из которой следует читать данные.</target>
        </trans-unit>
        <trans-unit id="d466aa59733b9c7afb864608aa50ab84e769dcc6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mntab&lt;/code&gt; is the name of the &lt;code&gt;Mnesia&lt;/code&gt; table where the backed up data is to be placed. If the table does not exist, it is created automatically using configurable defaults. For information about configuring this behavior, see &lt;code&gt;Mnesia&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;mntab&lt;/code&gt; - это имя таблицы &lt;code&gt;Mnesia&lt;/code&gt; , в которую должны быть помещены резервные копии данных. Если таблица не существует, она создается автоматически с использованием настраиваемых значений по умолчанию. Для получения информации о настройке этого поведения см. &lt;code&gt;Mnesia&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9079c9ee03a2fc36036aa585f9863836334d2c47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mod&lt;/code&gt; is the name of the module containing the function to be run on the remote node.</source>
          <target state="translated">&lt;code&gt;mod&lt;/code&gt; - это имя модуля, содержащего функцию, которая будет запущена на удаленном узле.</target>
        </trans-unit>
        <trans-unit id="7fe0cc57f51f2f563f5070318f42a0f60a10fb63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mod_esi:deliver/2&lt;/code&gt; shall be used to generate the response to the client and &lt;code&gt;SessionID&lt;/code&gt; is an identifier that shall by used when calling this function, do not assume anything about the datatype. This function may be called several times to chunk the response data. Notice that the first chunk of data sent to the client must at least contain all HTTP header fields that the response will generate. If the first chunk does not contain the &lt;strong&gt;end of HTTP header&lt;/strong&gt;, that is, &lt;code&gt;&quot;\r\n\r\n&quot;,&lt;/code&gt; the server assumes that no HTTP header fields will be generated.</source>
          <target state="translated">&lt;code&gt;mod_esi:deliver/2&lt;/code&gt; должен использоваться для генерации ответа клиенту, а &lt;code&gt;SessionID&lt;/code&gt; - это идентификатор, который должен использоваться при вызове этой функции, ничего не предполагая о типе данных. Эта функция может быть вызвана несколько раз для фрагментации данных ответа. Обратите внимание, что первый фрагмент данных, отправленный клиенту, должен как минимум содержать все поля заголовка HTTP, которые будет сгенерирован ответом. Если первый блок не содержит &lt;strong&gt;конца заголовка HTTP&lt;/strong&gt; , то есть &lt;code&gt;&quot;\r\n\r\n&quot;,&lt;/code&gt; сервер предполагает, что поля заголовка HTTP не будут созданы.</target>
        </trans-unit>
        <trans-unit id="02e694fd8e5b2a45b9d55cc7b7826a876370412c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mod_trace&lt;/code&gt; is responsible for handling of TRACE requests. Trace is a new request method in HTTP/1.1. The intended use of trace requests is for testing. The body of the trace response is the request message that the responding web server or proxy received.</source>
          <target state="translated">&lt;code&gt;mod_trace&lt;/code&gt; отвечает за обработку запросов TRACE. Trace - это новый метод запроса в HTTP / 1.1. Предполагаемое использование запросов трассировки - для тестирования. Тело ответа трассировки - это сообщение запроса, полученное отвечающим веб-сервером или прокси-сервером.</target>
        </trans-unit>
        <trans-unit id="cf62704361b32700ceed8b9c8103394aec1e8938" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mode&lt;/code&gt;, the &lt;code&gt;&lt;a href=&quot;#mode&quot;&gt;mode&lt;/a&gt;&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;mode&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#mode&quot;&gt;mode&lt;/a&gt;&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="2bc1b5285a427c281494717339716191820f816f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;modules&lt;/code&gt; - All modules &lt;strong&gt;introduced&lt;/strong&gt; by this application. &lt;code&gt;systools&lt;/code&gt; uses this list when generating boot scripts and tar files. A module must be defined in only one application. Defaults to &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;modules&lt;/code&gt; - все модули, &lt;strong&gt;представленные&lt;/strong&gt; этим приложением. &lt;code&gt;systools&lt;/code&gt; использует этот список при создании сценариев загрузки и файлов tar. Модуль должен быть определен только в одном приложении. По умолчанию &lt;code&gt;[]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="174a7f88b7a6eb2b8bf56c05ce0a6e77c48d7c50" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;modules&lt;/code&gt; are to be a list with one element &lt;code&gt;[Module]&lt;/code&gt;, where &lt;code&gt;Module&lt;/code&gt; is the name of the callback module, if the child process is a supervisor, gen_server, gen_statem. If the child process is a gen_event, the value shall be &lt;code&gt;dynamic&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;modules&lt;/code&gt; должны быть списком с одним элементом &lt;code&gt;[Module]&lt;/code&gt; , где &lt;code&gt;Module&lt;/code&gt; - это имя модуля обратного вызова, если дочерний процесс является супервизором, gen_server, gen_statem. Если дочерний процесс является gen_event, значение должно быть &lt;code&gt;dynamic&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="da2a0d5417825c1c00e64aa8d17a85f6fc76ae13" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;modules&lt;/code&gt; is used by the release handler during code replacement to determine which processes are using a certain module. As a rule of thumb, if the child process is a &lt;code&gt;supervisor&lt;/code&gt;, &lt;code&gt;gen_server&lt;/code&gt; or, &lt;code&gt;gen_statem&lt;/code&gt;, this is to be a list with one element &lt;code&gt;[Module]&lt;/code&gt;, where &lt;code&gt;Module&lt;/code&gt; is the callback module. If the child process is an event manager (&lt;code&gt;gen_event&lt;/code&gt;) with a dynamic set of callback modules, value &lt;code&gt;dynamic&lt;/code&gt; must be used. For more information about release handling, see &lt;code&gt;Release Handling&lt;/code&gt; in OTP Design Principles.</source>
          <target state="translated">&lt;code&gt;modules&lt;/code&gt; используется обработчиком выпуска во время замены кода, чтобы определить, какие процессы используют определенный модуль. Как показывает опыт, если дочерний процесс является &lt;code&gt;supervisor&lt;/code&gt; , &lt;code&gt;gen_server&lt;/code&gt; или &lt;code&gt;gen_statem&lt;/code&gt; , это должен быть список с одним элементом &lt;code&gt;[Module]&lt;/code&gt; , где &lt;code&gt;Module&lt;/code&gt; - это модуль обратного вызова. Если дочерний процесс является диспетчером событий ( &lt;code&gt;gen_event&lt;/code&gt; ) с динамическим набором модулей обратного вызова, необходимо использовать значение &lt;code&gt;dynamic&lt;/code&gt; . Дополнительные сведения об обработке выпуска см. В разделе &lt;code&gt;Release Handling&lt;/code&gt; в принципах проектирования OTP.</target>
        </trans-unit>
        <trans-unit id="4876f5e9a1f661a63193eee3608f5279e00e9f89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;month/1&lt;/code&gt; converts the month &lt;code&gt;NthMonth&lt;/code&gt; as an integer (1-12) to an abbreviated string, that is:</source>
          <target state="translated">&lt;code&gt;month/1&lt;/code&gt; преобразует месяц &lt;code&gt;NthMonth&lt;/code&gt; как целое число (1-12) в сокращенную строку, то есть:</target>
        </trans-unit>
        <trans-unit id="372b1faae3b4202378e772ec2ba948e196923700" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;msacc&lt;/code&gt; allows the user to get a view of what the Erlang Run-Time system is spending its time doing. Has a very low overhead, which makes it useful to run in heavily loaded systems to get some idea of where to start doing more granular profiling.</source>
          <target state="translated">&lt;code&gt;msacc&lt;/code&gt; позволяет пользователю получить представление о том, на что система времени выполнения Erlang тратит свое время. Имеет очень низкие накладные расходы, что делает его полезным для работы в сильно загруженных системах, чтобы получить представление о том, с чего начать более детальное профилирование.</target>
        </trans-unit>
        <trans-unit id="b6a46ad591043ab4ae0fea0e7f2898189d63d07a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;msg-&amp;gt;to&lt;/code&gt; and &lt;code&gt;msg-&amp;gt;from&lt;/code&gt; contain the pids of the sender and recipient of the link or unlink.</source>
          <target state="translated">&lt;code&gt;msg-&amp;gt;to&lt;/code&gt; и &lt;code&gt;msg-&amp;gt;from&lt;/code&gt; содержат идентификаторы отправителя и получателя ссылки или отмены ссылки.</target>
        </trans-unit>
        <trans-unit id="4cf8ae8a05e8bb032f0bf6cf2d8b798baa20d8c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;msg&lt;/code&gt; is a pointer to an &lt;code&gt;erlang_msg&lt;/code&gt; structure and contains information on the message received.</source>
          <target state="translated">&lt;code&gt;msg&lt;/code&gt; является указателем на структуру &lt;code&gt;erlang_msg&lt;/code&gt; и содержит информацию о полученном сообщении.</target>
        </trans-unit>
        <trans-unit id="22c0db150f06272113cf3e563d8f9e1095dd87d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;msg&lt;/code&gt; is invalid.</source>
          <target state="translated">&lt;code&gt;msg&lt;/code&gt; недействительно.</target>
        </trans-unit>
        <trans-unit id="1147a6079cbd57aaa4dfbf2532b4f6db49e2c8eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;msg&lt;/code&gt; is structure of type &lt;code&gt;erlang_msg&lt;/code&gt; and contains information on the message received. For a description of the &lt;code&gt;erlang_msg&lt;/code&gt; format, see &lt;code&gt;&lt;a href=&quot;#ei_receive_msg&quot;&gt;ei_receive_msg&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;msg&lt;/code&gt; - это структура типа &lt;code&gt;erlang_msg&lt;/code&gt; , содержащая информацию о полученном сообщении. Для описания &lt;code&gt;erlang_msg&lt;/code&gt; формата см &lt;code&gt;&lt;a href=&quot;#ei_receive_msg&quot;&gt;ei_receive_msg&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="20165fce6029f6b12357cbf628fa9de97c536db8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;msg&lt;/code&gt; is the Erlang term to be sent.</source>
          <target state="translated">&lt;code&gt;msg&lt;/code&gt; - это отправляемый термин Erlang.</target>
        </trans-unit>
        <trans-unit id="bc5255648412b02a4f9b38e4d992a126891957fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;msgtype&lt;/code&gt; identifies the type of message, and is one of the following:</source>
          <target state="translated">&lt;code&gt;msgtype&lt;/code&gt; определяет тип сообщения и может быть одним из следующих:</target>
        </trans-unit>
        <trans-unit id="dbfc40aa62adc558872dc112f3dcd085f1f3c0d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mtx&lt;/code&gt; is a pointer to a mutex to destroy.</source>
          <target state="translated">&lt;code&gt;mtx&lt;/code&gt; - это указатель на уничтожаемый мьютекс.</target>
        </trans-unit>
        <trans-unit id="6d81444be058267cf4efbf703c68af2992a43a56" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mtx&lt;/code&gt; is a pointer to a mutex to lock.</source>
          <target state="translated">&lt;code&gt;mtx&lt;/code&gt; - это указатель на мьютекс, который нужно заблокировать.</target>
        </trans-unit>
        <trans-unit id="5936c828bb2d79c6205b045b38c650dc9143623b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mtx&lt;/code&gt; is a pointer to a mutex to try to lock.</source>
          <target state="translated">&lt;code&gt;mtx&lt;/code&gt; - это указатель на мьютекс, который нужно заблокировать.</target>
        </trans-unit>
        <trans-unit id="3eb0e6be023472e5e5f0684561604b16264eeed6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mtx&lt;/code&gt; is a pointer to a mutex to unlock.</source>
          <target state="translated">&lt;code&gt;mtx&lt;/code&gt; - это указатель на мьютекс, который нужно разблокировать.</target>
        </trans-unit>
        <trans-unit id="25674df362fe7127698044f736e6a5bccb2c4c1c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mtx&lt;/code&gt; is a pointer to an initialized mutex.</source>
          <target state="translated">&lt;code&gt;mtx&lt;/code&gt; - это указатель на инициализированный мьютекс.</target>
        </trans-unit>
        <trans-unit id="3c5b24424f7a846897e6dcfd9abec76c096523c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;multi_lookup&lt;/code&gt; extracts all &lt;code&gt;{Key,Value}&lt;/code&gt; tuples from an &lt;code&gt;ETSTable&lt;/code&gt; and returns &lt;strong&gt;all&lt;/strong&gt;&lt;code&gt;Values&lt;/code&gt; associated with &lt;code&gt;Key&lt;/code&gt; in a list.</source>
          <target state="translated">&lt;code&gt;multi_lookup&lt;/code&gt; извлекает все кортежи &lt;code&gt;{Key,Value}&lt;/code&gt; из &lt;code&gt;ETSTable&lt;/code&gt; и возвращает &lt;strong&gt;все &lt;/strong&gt; &lt;code&gt;Values&lt;/code&gt; связанные с &lt;code&gt;Key&lt;/code&gt; в списке.</target>
        </trans-unit>
        <trans-unit id="d49b62334dd0db4dc2fedcbf91c9bb076556cc52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;n1&lt;/code&gt;, &lt;code&gt;n2&lt;/code&gt;, and &lt;code&gt;n3&lt;/code&gt; can be seen as one big number &lt;code&gt;n1*2^64+n2*2^32+n3&lt;/code&gt;, which is to be chosen uniquely for each reference created for a given C-node.</source>
          <target state="translated">&lt;code&gt;n1&lt;/code&gt; , &lt;code&gt;n2&lt;/code&gt; и &lt;code&gt;n3&lt;/code&gt; можно рассматривать как одно большое число &lt;code&gt;n1*2^64+n2*2^32+n3&lt;/code&gt; , которое следует выбирать уникально для каждой ссылки, созданной для данного C-узла.</target>
        </trans-unit>
        <trans-unit id="2fd292a665c7c30f1d00a7e90ee7c62733e8db29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;n&lt;/code&gt; is a value to be converted to an Erlang integer.</source>
          <target state="translated">&lt;code&gt;n&lt;/code&gt; - значение, которое нужно преобразовать в целое число Эрланга.</target>
        </trans-unit>
        <trans-unit id="d099369481ceff3dd7587926a74ba6b8dc5743a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;n&lt;/code&gt; is a value to be converted to an Erlang unsigned integer.</source>
          <target state="translated">&lt;code&gt;n&lt;/code&gt; - значение, которое нужно преобразовать в целое число без знака Эрланга.</target>
        </trans-unit>
        <trans-unit id="0f5ea2f8a335ce2ed24182b2525ae37a7cb70475" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;n_fragments&lt;/code&gt; regulates how many fragments that the table currently has. This property can explicitly be set at table creation and later be changed with &lt;code&gt;{add_frag, NodesOrDist}&lt;/code&gt; or &lt;code&gt;del_frag&lt;/code&gt;. &lt;code&gt;n_fragments&lt;/code&gt; defaults to &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;n_fragments&lt;/code&gt; регулирует количество фрагментов в таблице в настоящее время. Это свойство можно явно задать при создании таблицы, а затем изменить с помощью &lt;code&gt;{add_frag, NodesOrDist}&lt;/code&gt; или &lt;code&gt;del_frag&lt;/code&gt; . &lt;code&gt;n_fragments&lt;/code&gt; по умолчанию &lt;code&gt;1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1c5a457d41e6ae7e94e7e3d8c8a26bc2b3e9197c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;n_objects&lt;/code&gt; specifies how many results are to be returned in each chunk to QLC.</source>
          <target state="translated">&lt;code&gt;n_objects&lt;/code&gt; указывает, сколько результатов должно быть возвращено в каждом блоке QLC.</target>
        </trans-unit>
        <trans-unit id="3c6a49a98ce970577a69add0b2ce5dd0761ad6df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name : string&lt;/code&gt; :: Registered name. Ex. &lt;code&gt;&quot;logger&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;name : string&lt;/code&gt; :: Зарегистрированное имя. Ex. &lt;code&gt;&quot;logger&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5f891725c21b2707440243c2bc9084bb45473388" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt; is a string identifying the created condition variable. It is used to identify the condition variable in planned future debug functionality.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; - это строка, определяющая созданную переменную условия. Он используется для идентификации переменной условия в запланированных будущих функциях отладки.</target>
        </trans-unit>
        <trans-unit id="9005585938ef363159ea0e38ae100ad8b0083ce7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt; is a string identifying the created key. It is used to identify the key in planned future debug functionality.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; - строка, идентифицирующая созданный ключ. Он используется для определения ключа в запланированных будущих функциях отладки.</target>
        </trans-unit>
        <trans-unit id="fee59da4861c233d62875099989d331d001a77da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt; is a string identifying the created mutex. It is used to identify the mutex in planned future debug functionality.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; - это строка, идентифицирующая созданный мьютекс. Он используется для идентификации мьютекса в запланированных будущих функциях отладки.</target>
        </trans-unit>
        <trans-unit id="0bc55479881a50f624c0787926ae8ec6c27e0224" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt; is a string identifying the created rwlock. It is used to identify the rwlock in planned future debug functionality.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; - строка, идентифицирующая созданный rwlock. Он используется для определения rwlock в запланированных будущих функциях отладки.</target>
        </trans-unit>
        <trans-unit id="91885e35be8ed3cdfd57070017e0699b72001e5a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt; is a string identifying the created thread options. It is used to identify the thread options in planned future debug functionality.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; - это строка, определяющая параметры созданного потока. Он используется для определения параметров потока в запланированных будущих функциях отладки.</target>
        </trans-unit>
        <trans-unit id="4e31c0e3a151e7e9fd2582a1217ca703e8c6e0a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt; is the name of an Erlang variable.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; - это имя переменной Erlang.</target>
        </trans-unit>
        <trans-unit id="8ba02d1316dffaa7b68ab37e7cabdfac2a3c0bb1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt; is the name that is to be looked up in &lt;code&gt;global&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; - это имя, которое нужно искать в &lt;code&gt;global&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9d5f477a2f79558137ade0d9eae972259ebd80ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt; is the name to register in &lt;code&gt;global&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; - это имя для регистрации в &lt;code&gt;global&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c4b71ebb0fda30fdf6c7946ed1028e59dded179e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt; is the name to unregister from &lt;code&gt;global&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; это имя , которое разрегистрировать от &lt;code&gt;global&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d79ecca34f6c2aacf2c6870aed8fce76455f8934" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt; specifies a name for the variable.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; определяет имя переменной.</target>
        </trans-unit>
        <trans-unit id="769cceefe1f47133ec711e95ce5be764e5817ea0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;native&lt;/code&gt; (use system calls)</source>
          <target state="translated">&lt;code&gt;native&lt;/code&gt; (использовать системные вызовы)</target>
        </trans-unit>
        <trans-unit id="c868fc11902a21e9495c0a11e40b16c7d9e8fd16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ncurses&lt;/code&gt;, &lt;code&gt;termcap&lt;/code&gt;, or &lt;code&gt;termlib&lt;/code&gt; -- The development headers and libraries are needed, often known as &lt;code&gt;ncurses-devel&lt;/code&gt;. Use &lt;code&gt;--without-termcap&lt;/code&gt; to build without any of these libraries. Note that in this case only the old shell (without any line editing) can be used.</source>
          <target state="translated">&lt;code&gt;ncurses&lt;/code&gt; , &lt;code&gt;termcap&lt;/code&gt; или &lt;code&gt;termlib&lt;/code&gt; - необходимы заголовки и библиотеки для разработки, часто известные как &lt;code&gt;ncurses-devel&lt;/code&gt; . Используйте &lt;code&gt;--without-termcap&lt;/code&gt; для сборки без какой-либо из этих библиотек. Обратите внимание, что в этом случае можно использовать только старую оболочку (без редактирования строки).</target>
        </trans-unit>
        <trans-unit id="4cb421db8786573c2d90d153eed83c0fd7c21add" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;need : integer&lt;/code&gt; :: Heap need. Ex. &lt;code&gt;2&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;need : integer&lt;/code&gt; :: Heap need. Ex. &lt;code&gt;2&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="04f4489712d3c89f2b4be69a6634b8131e4bd2d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nelem&lt;/code&gt; indicates the number of elements stored in the registry. It includes objects that are deleted but not purged.</source>
          <target state="translated">&lt;code&gt;nelem&lt;/code&gt; указывает количество элементов, хранящихся в реестре. Он включает объекты, которые были удалены, но не очищены.</target>
        </trans-unit>
        <trans-unit id="e7b6371a40fb9455fad414b3df774c818c7f3d0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nested_transaction&lt;/code&gt;. Nested transactions are not allowed in this context.</source>
          <target state="translated">&lt;code&gt;nested_transaction&lt;/code&gt; . Вложенные транзакции в этом контексте недопустимы.</target>
        </trans-unit>
        <trans-unit id="1fc2b6c244fff1fe70ace444e757507dced6c537" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;net_adm&lt;/code&gt; manual page in Kernel</source>
          <target state="translated">&lt;code&gt;net_adm&lt;/code&gt; руководства net_adm в ядре</target>
        </trans-unit>
        <trans-unit id="1d5426b369889eee7c87754160b79b56b7c18acd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;net_kernel&lt;/code&gt; initiated the change of &lt;code&gt;net_ticktime&lt;/code&gt; to &lt;code&gt;NetTicktime&lt;/code&gt; seconds.</source>
          <target state="translated">&lt;code&gt;net_kernel&lt;/code&gt; инициировал изменение &lt;code&gt;net_ticktime&lt;/code&gt; на &lt;code&gt;NetTicktime&lt;/code&gt; секунд.</target>
        </trans-unit>
        <trans-unit id="cdcc9a34292ef88c7a62f0501732e3ae263fd743" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;net_kernel&lt;/code&gt; is currently changing &lt;code&gt;net_ticktime&lt;/code&gt; to &lt;code&gt;NetTicktime&lt;/code&gt; seconds.</source>
          <target state="translated">&lt;code&gt;net_kernel&lt;/code&gt; в настоящее время изменяет &lt;code&gt;net_ticktime&lt;/code&gt; на &lt;code&gt;NetTicktime&lt;/code&gt; секунд.</target>
        </trans-unit>
        <trans-unit id="7fa27e0f8d4084ef0de130edbef970fc568ef473" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;net_ticktime&lt;/code&gt; already has the value of &lt;code&gt;NetTicktime&lt;/code&gt; and is left unchanged.</source>
          <target state="translated">&lt;code&gt;net_ticktime&lt;/code&gt; уже имеет значение &lt;code&gt;NetTicktime&lt;/code&gt; и остается неизменным.</target>
        </trans-unit>
        <trans-unit id="760639fc9617306dbe2ce1727ab88ed2772d3eda" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;net_ticktime&lt;/code&gt; is &lt;code&gt;NetTicktime&lt;/code&gt; seconds.</source>
          <target state="translated">&lt;code&gt;net_ticktime&lt;/code&gt; - время &lt;code&gt;NetTicktime&lt;/code&gt; в секундах.</target>
        </trans-unit>
        <trans-unit id="4194f1bdbdb59175d9e98ce7bce52e4d06cc5f04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;newsize&lt;/code&gt; is the new size to make the registry. The number is increased to the nearest larger prime number.</source>
          <target state="translated">&lt;code&gt;newsize&lt;/code&gt; - это новый размер реестра. Число увеличивается до ближайшего большего простого числа.</target>
        </trans-unit>
        <trans-unit id="2d9ac12bfeb85194d6703f13ff62908d7dff3137" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nlist/1&lt;/code&gt; implies the current remote directory of the user.</source>
          <target state="translated">&lt;code&gt;nlist/1&lt;/code&gt; подразумевает текущий удаленный каталог пользователя.</target>
        </trans-unit>
        <trans-unit id="996bd783b3b0be1ac2fd7f1d1f7864a698f318a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;noAccess | noCreation | inconsistentValue | resourceUnavailable | inconsistentName | genErr&lt;/code&gt;(SNMPv2)</source>
          <target state="translated">&lt;code&gt;noAccess | noCreation | inconsistentValue | resourceUnavailable | inconsistentName | genErr&lt;/code&gt; (SNMPv2)</target>
        </trans-unit>
        <trans-unit id="c14f29fb4ebe8bd8a2dcabf138abc103e734c572" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;no_analyzed_modules&lt;/code&gt;, number of analyzed modules;</source>
          <target state="translated">&lt;code&gt;no_analyzed_modules&lt;/code&gt; , количество анализируемых модулей;</target>
        </trans-unit>
        <trans-unit id="36919705ab2ed85e787da97c4e019137e9726097" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;no_analyzed_modules&lt;/code&gt;, total number of &lt;code&gt;&lt;a href=&quot;#analyzed_module&quot;&gt;analyzed modules&lt;/a&gt;&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;no_analyzed_modules&lt;/code&gt; , общее количество &lt;code&gt;&lt;a href=&quot;#analyzed_module&quot;&gt;analyzed modules&lt;/a&gt;&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="247daf07bfeb0cf313c1ab73c118bdd56a4373e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;no_applications&lt;/code&gt;, number of applications;</source>
          <target state="translated">&lt;code&gt;no_applications&lt;/code&gt; , количество заявок;</target>
        </trans-unit>
        <trans-unit id="855d76897472ff9db8a9ed317585bf67aa23b49b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;no_applications&lt;/code&gt;, total number of applications (of all releases);</source>
          <target state="translated">&lt;code&gt;no_applications&lt;/code&gt; , общее количество приложений (всех релизов);</target>
        </trans-unit>
        <trans-unit id="4f0e51a4da187fedf95a7f531d9dfa0a174eb37d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;no_calls&lt;/code&gt; (*), number of calls of the application's modules, regarding instances of one function call in different lines as separate calls;</source>
          <target state="translated">&lt;code&gt;no_calls&lt;/code&gt; (*), количество вызовов модулей приложения, в отношении экземпляров одного вызова функции в разных строках как отдельных вызовов;</target>
        </trans-unit>
        <trans-unit id="370301c631577eec18b5ccc7eaaa194046fdf349" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;no_calls&lt;/code&gt; (*), number of calls of the release's modules, regarding instances of one function call in different lines as separate calls;</source>
          <target state="translated">&lt;code&gt;no_calls&lt;/code&gt; (*), количество вызовов модулей релиза, относительно экземпляров одного вызова функции в разных строках как отдельных вызовов;</target>
        </trans-unit>
        <trans-unit id="c93593df8ed4fcf1f94cc16ef3853f5868e322df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;no_calls&lt;/code&gt; (*), number of calls, regarding instances of one function call in different lines as separate calls;</source>
          <target state="translated">&lt;code&gt;no_calls&lt;/code&gt; (*), количество вызовов, относительно экземпляров одного вызова функции в разных строках как отдельных вызовов;</target>
        </trans-unit>
        <trans-unit id="1393436244f6630af5c0e5ff63ac5783ce91a856" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;no_calls&lt;/code&gt; (*), total number of calls (in all modules), regarding instances of one function call in different lines as separate calls;</source>
          <target state="translated">&lt;code&gt;no_calls&lt;/code&gt; (*), общее количество вызовов (во всех модулях) с учетом экземпляров одного вызова функции в разных строках как отдельных вызовов;</target>
        </trans-unit>
        <trans-unit id="d2d90de1c8b1a6e7443e04db5bab61e57e304f72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;no_calls&lt;/code&gt;. The sum of the number of resolved and unresolved calls:</source>
          <target state="translated">&lt;code&gt;no_calls&lt;/code&gt; . Сумма количества разрешенных и неразрешенных вызовов:</target>
        </trans-unit>
        <trans-unit id="af1e22dd263bf80de4de1df5f3df4fd3955182ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;no_conn&lt;/code&gt; - The connection is down to the node where the process is running. &lt;code&gt;Info={}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;no_conn&lt;/code&gt; - соединение не работает с узлом, на котором выполняется процесс. &lt;code&gt;Info={}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8c814217a417ac2d857d76edca4a5d41c91a647d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;no_dot_erlang.boot&lt;/code&gt; - Loads the code for and starts the applications Kernel and STDLIB. Skips loading the file &lt;code&gt;.erlang&lt;/code&gt;. Useful for scripts and other tools that are to behave the same irrespective of user preferences.</source>
          <target state="translated">&lt;code&gt;no_dot_erlang.boot&lt;/code&gt; - загружает код и запускает ядро ​​приложений и STDLIB. Пропускает загрузку файла &lt;code&gt;.erlang&lt;/code&gt; . Полезно для скриптов и других инструментов, которые должны вести себя одинаково независимо от предпочтений пользователя.</target>
        </trans-unit>
        <trans-unit id="f8159cf71197decb91bba2603f85ca3c5311257c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;no_exists&lt;/code&gt;. Tried to perform operation on non-existing (not-alive) item.</source>
          <target state="translated">&lt;code&gt;no_exists&lt;/code&gt; . Пытался выполнить операцию с несуществующим (неактивным) элементом.</target>
        </trans-unit>
        <trans-unit id="82885b597712907220180d0456fef06dc2e5ad77" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;no_function_calls&lt;/code&gt; (*), number of local calls, resolved external calls and unresolved calls of the application's modules;</source>
          <target state="translated">&lt;code&gt;no_function_calls&lt;/code&gt; (*), количество локальных вызовов, разрешенных внешних вызовов и неразрешенных вызовов модулей приложения;</target>
        </trans-unit>
        <trans-unit id="abad1ab806a090043a7399d16fc637d9d45bfa9d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;no_function_calls&lt;/code&gt; (*), number of local calls, resolved external calls and unresolved calls of the release's modules;</source>
          <target state="translated">&lt;code&gt;no_function_calls&lt;/code&gt; (*), количество локальных вызовов, разрешенных внешних вызовов и неразрешенных вызовов модулей релиза;</target>
        </trans-unit>
        <trans-unit id="927ea8a6ac92101eaeee49fc7759faa70479b07e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;no_function_calls&lt;/code&gt; (*), number of local calls, resolved external calls and unresolved calls;</source>
          <target state="translated">&lt;code&gt;no_function_calls&lt;/code&gt; (*), количество локальных вызовов, разрешенных внешних вызовов и неразрешенных вызовов;</target>
        </trans-unit>
        <trans-unit id="dddc264cec4aa69635153ca10c089b48a0f915cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;no_function_calls&lt;/code&gt; (*), total number of &lt;code&gt;&lt;a href=&quot;#local_call&quot;&gt;local calls&lt;/a&gt;&lt;/code&gt;, resolved &lt;code&gt;&lt;a href=&quot;#external_call&quot;&gt;external calls&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#unresolved_call&quot;&gt;unresolved calls&lt;/a&gt;&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;no_function_calls&lt;/code&gt; (*), общее количество &lt;code&gt;&lt;a href=&quot;#local_call&quot;&gt;local calls&lt;/a&gt;&lt;/code&gt; , разрешенных &lt;code&gt;&lt;a href=&quot;#external_call&quot;&gt;external calls&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;#unresolved_call&quot;&gt;unresolved calls&lt;/a&gt;&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="3f93645c3a2ad16c4c220fb0f5903bb022c20d75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;no_function_calls&lt;/code&gt;. The sum of the number of local calls, resolved external calls and unresolved calls:</source>
          <target state="translated">&lt;code&gt;no_function_calls&lt;/code&gt; . Сумма количества местных вызовов, разрешенных внешних вызовов и неразрешенных вызовов:</target>
        </trans-unit>
        <trans-unit id="5d54535e458072031c144f3342d1a1d99b65bc88" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;no_functions&lt;/code&gt; (*), number of local and exported functions of the application's modules;</source>
          <target state="translated">&lt;code&gt;no_functions&lt;/code&gt; (*), количество локальных и экспортируемых функций модулей приложения;</target>
        </trans-unit>
        <trans-unit id="6d9dd2a7d5654afbf1777e3b26dacb4c6829409f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;no_functions&lt;/code&gt; (*), number of local and exported functions of the release's modules;</source>
          <target state="translated">&lt;code&gt;no_functions&lt;/code&gt; (*), количество локальных и экспортируемых функций модулей релиза;</target>
        </trans-unit>
        <trans-unit id="edef508993f68f5059132aaa9faba0b60b516a90" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;no_functions&lt;/code&gt; (*), number of local and exported functions;</source>
          <target state="translated">&lt;code&gt;no_functions&lt;/code&gt; (*), количество локальных и экспортируемых функций;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
