<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="erlang">
    <body>
      <group id="erlang">
        <trans-unit id="400e9b2c243f2f7c7d92b4dcf08486534cb1952f" translate="yes" xml:space="preserve">
          <source>Time Precision</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cad164c081a78f266eeeb300b8131692f7bc1b2f" translate="yes" xml:space="preserve">
          <source>Time Resolution</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b437206adf14eaf51046c0192d059cd605c7e97" translate="yes" xml:space="preserve">
          <source>Time Warp</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a82ad5fd600ff000d4dd1a4b75dec09bd53099b8" translate="yes" xml:space="preserve">
          <source>Time in milli-seconds.</source>
          <target state="translated">Время в миллисекундах.</target>
        </trans-unit>
        <trans-unit id="fb90c3d94bbbbb48a0690451d16d4a2746e6cf58" translate="yes" xml:space="preserve">
          <source>Time in milliseconds.</source>
          <target state="translated">Время в миллисекундах.</target>
        </trans-unit>
        <trans-unit id="52f73c9f88768be27ae1df301f0781defb2c8b55" translate="yes" xml:space="preserve">
          <source>Time interval (in seconds) between each update of the display.</source>
          <target state="translated">Интервал времени (в секундах)между каждым обновлением дисплея.</target>
        </trans-unit>
        <trans-unit id="aa2bb96c7dd2c54fd6b747929cbd2b7c505afa22" translate="yes" xml:space="preserve">
          <source>Time is in milliseconds.</source>
          <target state="translated">Время в миллисекундах.</target>
        </trans-unit>
        <trans-unit id="9335c98c7b128731a14ad90889a8a634ba7a0e3f" translate="yes" xml:space="preserve">
          <source>Time is local when it is adjusted in accordance with the current time zone and daylight saving. Time is universal when it reflects the time at longitude zero, without any adjustment for daylight saving. Universal Coordinated Time (UTC) time is also called Greenwich Mean Time (GMT).</source>
          <target state="translated">Время является локальным,если оно отрегулировано в соответствии с текущим часовым поясом и летним светом.Время является универсальным,когда оно отражает время при нулевой долготе,без какой-либо настройки для летнего времени.Универсальное координированное время (UTC)также называется средним временем по Гринвичу (GMT).</target>
        </trans-unit>
        <trans-unit id="778cab80afb8fbb53cb2e3770f0d9802c84b4243" translate="yes" xml:space="preserve">
          <source>Time is shown as percentage of total time and as absolute time.</source>
          <target state="translated">Время отображается в процентах от общего времени и в абсолютном выражении.</target>
        </trans-unit>
        <trans-unit id="bfab7fde2f2bd1c95dae042160e5b78de938455d" translate="yes" xml:space="preserve">
          <source>Time is vital to an Erlang program and, more importantly, &lt;strong&gt;correct&lt;/strong&gt; time is vital to an Erlang program. As Erlang is a language with soft real-time properties and we can express time in our programs, the Virtual Machine and the language must be careful about what is considered a correct time and in how time functions behave.</source>
          <target state="translated">Время жизненно важно для программы на Erlang и, что более важно, &lt;strong&gt;правильное&lt;/strong&gt; время жизненно важно для программы на Erlang. Поскольку Erlang - это язык с мягкими свойствами реального времени, и мы можем выражать время в наших программах, виртуальная машина и язык должны быть осторожны с тем, что считается правильным временем и как ведут себя функции времени.</target>
        </trans-unit>
        <trans-unit id="dfb8ee1d3368aa29179a6d65ecd926cdeee8b67e" translate="yes" xml:space="preserve">
          <source>Time of failure.</source>
          <target state="translated">Время провала.</target>
        </trans-unit>
        <trans-unit id="e5b5ff320546cded57bcdfd8e9154e88bfce347b" translate="yes" xml:space="preserve">
          <source>Time since &lt;code&gt;&lt;a href=&quot;http://pubs.opengroup.org/onlinepubs/9699919799/xrat/V4_xbd_chap03.html#tag_21_03_00_17&quot;&gt; Epoch&lt;/a&gt;&lt;/code&gt;. Epoch is defined to be 00:00:00 &lt;code&gt;&lt;a href=&quot;#UTC&quot;&gt;UTC&lt;/a&gt;&lt;/code&gt;, 1970-01-01. &lt;code&gt;&lt;a href=&quot;http://pubs.opengroup.org/onlinepubs/009604499/basedefs/xbd_chap04.html#tag_04_14&quot;&gt; A day in POSIX time&lt;/a&gt;&lt;/code&gt; is defined to be exactly 86400 seconds long. Strangely enough, Epoch is defined to be a time in UTC, and UTC has another definition of how long a day is. Quoting the Open Group &lt;code&gt;&lt;a href=&quot;http://pubs.opengroup.org/onlinepubs/9699919799/xrat/V4_xbd_chap04.html#tag_21_04_15&quot;&gt; &quot;POSIX time is therefore not necessarily UTC, despite its appearance&quot;&lt;/a&gt;&lt;/code&gt;. The effect of this is that when an UTC leap second is inserted, POSIX time either stops for a second, or repeats the last second. If an UTC leap second would be deleted (which has not happened yet), POSIX time would make a one second leap forward.</source>
          <target state="translated">Время с &lt;code&gt;&lt;a href=&quot;http://pubs.opengroup.org/onlinepubs/9699919799/xrat/V4_xbd_chap03.html#tag_21_03_00_17&quot;&gt; Epoch&lt;/a&gt;&lt;/code&gt; . Эпоха определена как 00:00:00 &lt;code&gt;&lt;a href=&quot;#UTC&quot;&gt;UTC&lt;/a&gt;&lt;/code&gt; , 01.01.1970. &lt;code&gt;&lt;a href=&quot;http://pubs.opengroup.org/onlinepubs/009604499/basedefs/xbd_chap04.html#tag_04_14&quot;&gt; A day in POSIX time&lt;/a&gt;&lt;/code&gt; определен как ровно 86400 секунд. Как ни странно, эпоха определяется как время в формате UTC, а в формате UTC есть другое определение продолжительности дня. Цитата из Open Group: &lt;code&gt;&lt;a href=&quot;http://pubs.opengroup.org/onlinepubs/9699919799/xrat/V4_xbd_chap04.html#tag_21_04_15&quot;&gt; &quot;POSIX time is therefore not necessarily UTC, despite its appearance&quot;&lt;/a&gt;&lt;/code&gt; . Результатом этого является то, что при вставке секунды координации UTC время POSIX либо останавливается на секунду, либо повторяет последнюю секунду. Если будет удалена дополнительная секунда в формате UTC (чего еще не произошло), время POSIX сделает скачок на одну секунду вперед.</target>
        </trans-unit>
        <trans-unit id="c633e68c77dad8ff55d69828cca1fdead9120622" translate="yes" xml:space="preserve">
          <source>Time spent busy waiting. This is also the state where a scheduler no longer reports that it is active when using &lt;code&gt;&lt;a href=&quot;#statistics_scheduler_wall_time&quot;&gt; statistics(scheduler_wall_time)&lt;/a&gt;&lt;/code&gt;. So, if you add all other states but this and sleep, and then divide that by all time in the thread, you should get something very similar to the &lt;code&gt;scheduler_wall_time&lt;/code&gt; fraction. Without extra states this time is part of the &lt;code&gt;other&lt;/code&gt; state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daff1c5051fc31c193cbc0ef30cf4e11a8fa0acc" translate="yes" xml:space="preserve">
          <source>Time spent busy waiting. This is also the state where a scheduler no longer reports that it is active when using &lt;code&gt;&lt;a href=&quot;#statistics_scheduler_wall_time&quot;&gt;statistics(scheduler_wall_time)&lt;/a&gt;&lt;/code&gt;. So, if you add all other states but this and sleep, and then divide that by all time in the thread, you should get something very similar to the &lt;code&gt;scheduler_wall_time&lt;/code&gt; fraction. Without extra states this time is part of the &lt;code&gt;other&lt;/code&gt; state.</source>
          <target state="translated">Время, потраченное на ожидание. Это также состояние, когда планировщик больше не сообщает, что он активен при использовании &lt;code&gt;&lt;a href=&quot;#statistics_scheduler_wall_time&quot;&gt;statistics(scheduler_wall_time)&lt;/a&gt;&lt;/code&gt; . Итак, если вы добавите все остальные состояния, кроме этого и сна, а затем разделите их на все время в потоке, вы должны получить что-то очень похожее на долю &lt;code&gt;scheduler_wall_time&lt;/code&gt; . Без дополнительных состояний это время является частью &lt;code&gt;other&lt;/code&gt; состояния.</target>
        </trans-unit>
        <trans-unit id="4b70b59840bac36480b4ca278b19551bc7ff7ba0" translate="yes" xml:space="preserve">
          <source>Time spent checking for new I/O events.</source>
          <target state="translated">Время,потраченное на проверку новых событий ввода/вывода.</target>
        </trans-unit>
        <trans-unit id="f8c4236fa95ff532dbcc0e2d31ef284b6605be9f" translate="yes" xml:space="preserve">
          <source>Time spent doing fullsweep garbage collection. Without extra states this time is part of the &lt;code&gt;gc&lt;/code&gt; state.</source>
          <target state="translated">Время, потраченное на сборку мусора с полной очисткой. Без дополнительных состояний на этот раз это часть состояния &lt;code&gt;gc&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="804fe3e4c31d22ca440eb466bced64dac260645c" translate="yes" xml:space="preserve">
          <source>Time spent doing garbage collection. When extra states are enabled this is the time spent doing non-fullsweep garbage collections.</source>
          <target state="translated">Время,потраченное на сбор мусора.Когда включены дополнительные состояния,это время,потраченное на сбор мусора без полной уборки.</target>
        </trans-unit>
        <trans-unit id="f0d5415566936904747ef14c0c4e3fb853196c06" translate="yes" xml:space="preserve">
          <source>Time spent doing unaccounted things.</source>
          <target state="translated">Время,потраченное на неучтенные вещи.</target>
        </trans-unit>
        <trans-unit id="4ba30f1fc2208657042880d6015e182708b6ae95" translate="yes" xml:space="preserve">
          <source>Time spent executing ETS BIFs. Without extra states this time is part of the &lt;code&gt;emulator&lt;/code&gt; state.</source>
          <target state="translated">Время, затраченное на выполнение ETS BIF. Без дополнительных состояний это время является частью состояния &lt;code&gt;emulator&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6f0aba2d54a382bffda8610e637bf0f9265a1fa2" translate="yes" xml:space="preserve">
          <source>Time spent executing Erlang processes.</source>
          <target state="translated">Время,потраченное на выполнение процессов Эрланга.</target>
        </trans-unit>
        <trans-unit id="2140217ef427aad1b621513a3b193759d78a1510" translate="yes" xml:space="preserve">
          <source>Time spent executing ports.</source>
          <target state="translated">Время,потраченное на выполнение портов.</target>
        </trans-unit>
        <trans-unit id="1d9aa0e3f8d5f8534bd40659e4d0e67ab0101833" translate="yes" xml:space="preserve">
          <source>Time spent handling auxiliary jobs.</source>
          <target state="translated">Время,потраченное на выполнение вспомогательных работ.</target>
        </trans-unit>
        <trans-unit id="18b77c82a332110e23d9be0001f08986fee15519" translate="yes" xml:space="preserve">
          <source>Time spent in BIFs. Without extra states this time is part of the &lt;code&gt;emulator&lt;/code&gt; state.</source>
          <target state="translated">Время, проведенное в BIF. Без дополнительных состояний это время является частью состояния &lt;code&gt;emulator&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bcdc57b7f7275d059418c6711b15d167f486f63c" translate="yes" xml:space="preserve">
          <source>Time spent in NIFs. Without extra states this time is part of the &lt;code&gt;emulator&lt;/code&gt; state.</source>
          <target state="translated">Время, проведенное в НИФах. Без дополнительных состояний это время является частью состояния &lt;code&gt;emulator&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4050018617b293ffdfb42ee633136a70a84f563a" translate="yes" xml:space="preserve">
          <source>Time spent managing memory. Without extra states this time is spread out over all other states.</source>
          <target state="translated">Время,потраченное на управление памятью.Без дополнительных состояний это время распределяется по всем остальным состояниям.</target>
        </trans-unit>
        <trans-unit id="9c01fc3b7f3c2c3c0d6942008a58943e7689d103" translate="yes" xml:space="preserve">
          <source>Time spent managing timers. Without extra states this time is part of the &lt;code&gt;other&lt;/code&gt; state.</source>
          <target state="translated">Время, потраченное на управление таймерами. Без дополнительных состояний это время является частью &lt;code&gt;other&lt;/code&gt; состояния.</target>
        </trans-unit>
        <trans-unit id="219f1ac61c024af183643b65bf00f27585517b49" translate="yes" xml:space="preserve">
          <source>Time spent sending messages (processes only). Without extra states this time is part of the &lt;code&gt;emulator&lt;/code&gt; state.</source>
          <target state="translated">Время, затраченное на отправку сообщений (только процессы). Без дополнительных состояний это время является частью состояния &lt;code&gt;emulator&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cbdb8b8de682894a050f647f9b6f67984322b3e7" translate="yes" xml:space="preserve">
          <source>Time spent sleeping.</source>
          <target state="translated">Время,проведенное во сне.</target>
        </trans-unit>
        <trans-unit id="5e12873ae797e4ba07d58c20986f4c5eb0d01fbc" translate="yes" xml:space="preserve">
          <source>Time stamps in profile messages consist of &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_Monotonic_Time&quot;&gt;Erlang monotonic time&lt;/a&gt;&lt;/code&gt; and a monotonically increasing integer. The time stamp (Ts) has the same format and value as produced by &lt;code&gt;{erlang:monotonic_time(nanosecond), erlang:unique_integer([monotonic])}&lt;/code&gt;.</source>
          <target state="translated">Отметки времени в сообщениях профиля состоят из &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_Monotonic_Time&quot;&gt;Erlang monotonic time&lt;/a&gt;&lt;/code&gt; и монотонно увеличивающегося целого числа. Отметка времени (Ts) имеет тот же формат и значение, что и &lt;code&gt;{erlang:monotonic_time(nanosecond), erlang:unique_integer([monotonic])}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0a74926d30453b95a42997402e366f9dbba46f4a" translate="yes" xml:space="preserve">
          <source>Time stamps in profile messages include a time stamp (Ts) that has the same form as returned by &lt;code&gt;erlang:now()&lt;/code&gt;. This is also the default if no time stamp flag is specified. If &lt;code&gt;cpu_timestamp&lt;/code&gt; has been enabled through &lt;code&gt;&lt;a href=&quot;#trace-3&quot;&gt;erlang:trace/3&lt;/a&gt;&lt;/code&gt;, this also effects the time stamp produced in profiling messages when flag &lt;code&gt;timestamp&lt;/code&gt; is enabled.</source>
          <target state="translated">Отметки времени в сообщениях профиля включают отметку времени (Ts), которая имеет ту же форму, что и возвращаемая &lt;code&gt;erlang:now()&lt;/code&gt; . Это также значение по умолчанию, если не указан флаг отметки времени. Если &lt;code&gt;cpu_timestamp&lt;/code&gt; был включен через &lt;code&gt;&lt;a href=&quot;#trace-3&quot;&gt;erlang:trace/3&lt;/a&gt;&lt;/code&gt; , это также влияет на &lt;code&gt;timestamp&lt;/code&gt; созданную в сообщениях профилирования, когда включена отметка timestamp .</target>
        </trans-unit>
        <trans-unit id="22076e8ed9090afa79ae14afc1154da3fcea7d53" translate="yes" xml:space="preserve">
          <source>Time stamps in profile messages use &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_Monotonic_Time&quot;&gt;Erlang monotonic time&lt;/a&gt;&lt;/code&gt;. The time stamp (Ts) has the same format and value as produced by &lt;code&gt;erlang:monotonic_time(nanosecond)&lt;/code&gt;.</source>
          <target state="translated">Отметки времени в сообщениях профиля используют &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_Monotonic_Time&quot;&gt;Erlang monotonic time&lt;/a&gt;&lt;/code&gt; . Отметка времени (Ts) имеет тот же формат и значение, что и &lt;code&gt;erlang:monotonic_time(nanosecond)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="08ca334e927c4c6c13a180ed022f0e1809c6b0ea" translate="yes" xml:space="preserve">
          <source>Time unit expressed in parts per second. That is, the time unit equals &lt;code&gt;1/PartsPerSecond&lt;/code&gt; second.</source>
          <target state="translated">Единица времени, выраженная в частях в секунду. То есть единица времени равна &lt;code&gt;1/PartsPerSecond&lt;/code&gt; секунда.</target>
        </trans-unit>
        <trans-unit id="56955f846ca14fda201279a48f5480070c862756" translate="yes" xml:space="preserve">
          <source>Time unit of &lt;code&gt;val&lt;/code&gt;.</source>
          <target state="translated">Единица времени &lt;code&gt;val&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ddf7ef9b043acd2fefcc767917bfb64bbe68691e" translate="yes" xml:space="preserve">
          <source>Time unit of returned value.</source>
          <target state="translated">Единица времени возвращаемого значения.</target>
        </trans-unit>
        <trans-unit id="c31fd1a438289cad94f807ff509ea2830cb0a280" translate="yes" xml:space="preserve">
          <source>Time used for creating a setup timer by a call to &lt;code&gt;dist_util:start_timer(SetupTime)&lt;/code&gt;. The timer should be passed along to &lt;code&gt;dist_util:handshake_other_started(HsData)&lt;/code&gt;.</source>
          <target state="translated">Время, используемое для создания таймера настройки с помощью вызова &lt;code&gt;dist_util:start_timer(SetupTime)&lt;/code&gt; . Таймер следует передать в &lt;code&gt;dist_util:handshake_other_started(HsData)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cba69c610e8e4d4cb1aafc070b3b00791654be26" translate="yes" xml:space="preserve">
          <source>Time used for creating a setup timer by a call to &lt;code&gt;dist_util:start_timer(SetupTime)&lt;/code&gt;. The timer should be passed along to &lt;code&gt;dist_util:handshake_we_started(HsData)&lt;/code&gt;.</source>
          <target state="translated">Время, используемое для создания таймера настройки с помощью вызова &lt;code&gt;dist_util:start_timer(SetupTime)&lt;/code&gt; . Таймер следует передать в &lt;code&gt;dist_util:handshake_we_started(HsData)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6ead486368f8803155ffc6453947e99e4019e5bc" translate="yes" xml:space="preserve">
          <source>Time warp safe code can handle a &lt;code&gt;&lt;a href=&quot;#Time_Warp&quot;&gt;time warp&lt;/a&gt;&lt;/code&gt; of &lt;code&gt;&lt;a href=&quot;#Erlang_System_Time&quot;&gt;Erlang system time&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Time Warp безопасный код может обрабатывать &lt;code&gt;&lt;a href=&quot;#Time_Warp&quot;&gt;time warp&lt;/a&gt;&lt;/code&gt; в &lt;code&gt;&lt;a href=&quot;#Erlang_System_Time&quot;&gt;Erlang system time&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="75c9ade9b7ea54157fc5ea15b058fcb35255e656" translate="yes" xml:space="preserve">
          <source>Time when the event record was created.</source>
          <target state="translated">Время,когда была создана запись события.</target>
        </trans-unit>
        <trans-unit id="1078e1766373df8f70c0326e90a0881d10d2001d" translate="yes" xml:space="preserve">
          <source>Time when the trace was generated. Same as event_ts if omitted in trace data.</source>
          <target state="translated">Время,когда был создан след.То же самое,что и event_ts,если пропущено в данных трассы.</target>
        </trans-unit>
        <trans-unit id="ea920146725e69689044ec910022adb3cb308cc6" translate="yes" xml:space="preserve">
          <source>Time-Constrained Tracing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b588b2f86ac72f24f2b525ef5518aac39862ff1" translate="yes" xml:space="preserve">
          <source>Time-Out Functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c54440dd4618f7bc17db7c59ce90a91687e0a3f" translate="yes" xml:space="preserve">
          <source>Time-constrained tracing</source>
          <target state="translated">Отслеживание с ограничением по времени</target>
        </trans-unit>
        <trans-unit id="dad879fd6c0ee22983f6de70e89c35317fb40e21" translate="yes" xml:space="preserve">
          <source>Time-out expired.</source>
          <target state="translated">Тайм-аут истек.</target>
        </trans-unit>
        <trans-unit id="3e8c25c48b5132875c91d0c03a35c580928a7337" translate="yes" xml:space="preserve">
          <source>Time-out time for the request.</source>
          <target state="translated">Тайм-аут для запроса.</target>
        </trans-unit>
        <trans-unit id="dbff00965ebcca637b30964828cca5002698389b" translate="yes" xml:space="preserve">
          <source>Time-out timers &lt;code&gt;&lt;a href=&quot;#type-event_timeout&quot;&gt;event_timeout()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#type-generic_timeout&quot;&gt;generic_timeout()&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#type-state_timeout&quot;&gt;state_timeout()&lt;/a&gt;&lt;/code&gt; are handled. Time-outs with zero time are guaranteed to be delivered to the state machine before any external not yet received event so if there is such a time-out requested, the corresponding time-out zero event is enqueued as the newest received event; that is after already queued events such as inserted and postponed events.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#type-generic_timeout&quot;&gt;generic_timeout()&lt;/a&gt;&lt;/code&gt; таймеры времени ожидания &lt;code&gt;&lt;a href=&quot;#type-event_timeout&quot;&gt;event_timeout()&lt;/a&gt;&lt;/code&gt; , generic_timeout () и &lt;code&gt;&lt;a href=&quot;#type-state_timeout&quot;&gt;state_timeout()&lt;/a&gt;&lt;/code&gt; . Тайм-ауты с нулевым временем гарантированно будут доставлены в конечный автомат до любого внешнего еще не полученного события, поэтому, если запрошен такой тайм-аут, соответствующее нулевое событие тайм-аута ставится в очередь как самое новое полученное событие; то есть после уже поставленных в очередь событий, таких как вставленные и отложенные события.</target>
        </trans-unit>
        <trans-unit id="921bd14fe959f56d9bf6ef39fbc93c256e6bb1db" translate="yes" xml:space="preserve">
          <source>Time-out, in milliseconds, for establishing an association</source>
          <target state="translated">Тайм-аут,в миллисекундах,для создания ассоциации...</target>
        </trans-unit>
        <trans-unit id="321d15a7cc404b6bf384999b2f747b4923bb6c12" translate="yes" xml:space="preserve">
          <source>Time-outs in &lt;code&gt;gen_statem&lt;/code&gt; are started from a &lt;code&gt;&lt;a href=&quot;#Transition%20Actions&quot;&gt; &lt;strong&gt;transition action&lt;/strong&gt; &lt;/a&gt;&lt;/code&gt; during a state transition that is when exiting from the &lt;code&gt;&lt;a href=&quot;#State%20Callback&quot;&gt;&lt;strong&gt;state callback&lt;/strong&gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9d894573097754c7b54a6191c10c2264d5de941" translate="yes" xml:space="preserve">
          <source>Timeout ::</source>
          <target state="translated">Тайм-аут :..:</target>
        </trans-unit>
        <trans-unit id="9ba0fea57692bed3e35ebe6f8f6d8f58f2ad3a37" translate="yes" xml:space="preserve">
          <source>Timeout :: timeout()) -&amp;gt;</source>
          <target state="translated">Тайм-аут :: тайм-аут ()) -&amp;gt;</target>
        </trans-unit>
        <trans-unit id="6fd55cd4f150e662912da414d712d8565cc5d6ef" translate="yes" xml:space="preserve">
          <source>Timeout = &lt;code&gt;non_neg_integer()&lt;/code&gt;</source>
          <target state="translated">Тайм-аут = &lt;code&gt;non_neg_integer()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c83fda5023992a3a755c63b7feecf8cc4bb563b5" translate="yes" xml:space="preserve">
          <source>Timeout has expired.</source>
          <target state="translated">Тайм-аут истёк.</target>
        </trans-unit>
        <trans-unit id="4de3dd3689e574562fe201d283c89d77aad9ff30" translate="yes" xml:space="preserve">
          <source>Timeout set the maximum time in milliseconds that each server request may take.</source>
          <target state="translated">Таймаут устанавливает максимальное время в миллисекундах,которое может занять каждый запрос сервера.</target>
        </trans-unit>
        <trans-unit id="0c72d1236b15e71c6081373a09d082eddd39e1e9" translate="yes" xml:space="preserve">
          <source>Timeout time for the call proxy.</source>
          <target state="translated">Время таймаута для прокси-сервера.</target>
        </trans-unit>
        <trans-unit id="b5240d69e014aa8db2761b61b654dac666884a70" translate="yes" xml:space="preserve">
          <source>Timeout) -&amp;gt;</source>
          <target state="translated">Тайм-аут) -&amp;gt;</target>
        </trans-unit>
        <trans-unit id="27a4f2c5a6aa7d957af2668e0ec53e32944aba26" translate="yes" xml:space="preserve">
          <source>Timeouts</source>
          <target state="translated">Timeouts</target>
        </trans-unit>
        <trans-unit id="cbe7ffd10c56674d0aeb143b8aef6a19536cbe9f" translate="yes" xml:space="preserve">
          <source>Timer functions.</source>
          <target state="translated">Функции таймера.</target>
        </trans-unit>
        <trans-unit id="5775c0fa857a175458a6f31fe323d1c61544a03a" translate="yes" xml:space="preserve">
          <source>Timers and re-send of messages will be handled on locally on one node, that is node(1), in order to avoid unnecessary transfer of data between the Erlang nodes.</source>
          <target state="translated">Таймеры и повторная отправка сообщений будут обрабатываться локально на одном узле,то есть на узле(1),чтобы избежать ненужной передачи данных между узлами Erlang.</target>
        </trans-unit>
        <trans-unit id="345e4b38e568b767b30f56f4731767a882691f68" translate="yes" xml:space="preserve">
          <source>Timestamp = {MegaSecs, Secs, MicroSecs}</source>
          <target state="translated">Timestamp={MegaSecs,Secs,MicroSecs}</target>
        </trans-unit>
        <trans-unit id="15a044fe233b5f5d8f3f995d7e5a1a639fcad92c" translate="yes" xml:space="preserve">
          <source>Timestamps are formatted according to RFC3339, and the time designator is the character used as date and time separator.</source>
          <target state="translated">Штампы времени отформатированы в соответствии с RFC3339,а обозначение времени-это символ,используемый в качестве разделителя даты и времени.</target>
        </trans-unit>
        <trans-unit id="ec489097f09779c8f0337c7ffff14c271f605260" translate="yes" xml:space="preserve">
          <source>Timetrap values can be extended with a multiplier value specified at startup with option &lt;code&gt;multiply_timetraps&lt;/code&gt;. It is also possible to let the test server decide to scale up timetrap time-out values automatically. That is, if tools such as &lt;code&gt;cover&lt;/code&gt; or &lt;code&gt;trace&lt;/code&gt; are running during the test. This feature is disabled by default and can be enabled with start option &lt;code&gt;scale_timetraps&lt;/code&gt;.</source>
          <target state="translated">Значения временной ловушки могут быть расширены с помощью значения множителя, указанного при запуске с помощью опции &lt;code&gt;multiply_timetraps&lt;/code&gt; . Также можно позволить тестирующему серверу автоматически увеличивать значения тайм-аута временной ловушки. То есть, если во время теста работают такие инструменты, как &lt;code&gt;cover&lt;/code&gt; или &lt;code&gt;trace&lt;/code&gt; . Эта функция отключена по умолчанию и может быть включена с помощью опции запуска &lt;code&gt;scale_timetraps&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ce4a7717f17e9b8af076c5d38d2f59e28a523086" translate="yes" xml:space="preserve">
          <source>Tirhuta</source>
          <target state="translated">Tirhuta</target>
        </trans-unit>
        <trans-unit id="b51456deb293c14e281cc125141b1ca93bd63d71" translate="yes" xml:space="preserve">
          <source>Title case letter</source>
          <target state="translated">заглавная буква</target>
        </trans-unit>
        <trans-unit id="175f9c3cbfadc16808edf4696a9a651beef5a26c" translate="yes" xml:space="preserve">
          <source>Tls/dtls option descriptions - client side</source>
          <target state="translated">Описания опционов Tls/dtls-клиентская сторона</target>
        </trans-unit>
        <trans-unit id="ebe960548ac60cdb2adcef7ca8456b9e2d23126c" translate="yes" xml:space="preserve">
          <source>Tls/dtls option descriptions - server side</source>
          <target state="translated">Описания опций Tls/dtls-серверная сторона</target>
        </trans-unit>
        <trans-unit id="bf91222de5df25eb68a0c8123513399e374daae1" translate="yes" xml:space="preserve">
          <source>To &quot;teach&quot; the function how to extract, you can give a fun which replaces the default extraction function. The &lt;code&gt;fqdn_fun&lt;/code&gt; takes one argument and returns either a &lt;code&gt;string()&lt;/code&gt; to be matched to each CN-name or the atom &lt;code&gt;default&lt;/code&gt; which will invoke the default fqdn extraction function. The return value &lt;code&gt;undefined&lt;/code&gt; removes the current URI from the fqdn extraction.</source>
          <target state="translated">Чтобы &amp;laquo;научить&amp;raquo; функцию извлекать, вы можете устроить забаву, которая заменяет функцию извлечения по умолчанию. &lt;code&gt;fqdn_fun&lt;/code&gt; принимает один аргумент и возвращают либо &lt;code&gt;string()&lt;/code&gt; , чтобы быть согласовано с каждой CN-именем или атом по &lt;code&gt;default&lt;/code&gt; , который будет ссылаться на функцию экстракционной FQDN по умолчанию. Возвращаемое значение &lt;code&gt;undefined&lt;/code&gt; удаляет текущий URI из извлечения fqdn.</target>
        </trans-unit>
        <trans-unit id="2c5be475329fded4946b65a55d659b706b6fb900" translate="yes" xml:space="preserve">
          <source>To :: &lt;code&gt;&lt;a href=&quot;#type-storage_type&quot;&gt;storage_type()&lt;/a&gt;&lt;/code&gt;) -&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6ddde9755b765c3b046311bcbccd6ae209f1079" translate="yes" xml:space="preserve">
          <source>To access such tables, simplified access functions (as described earlier) cannot be used. For example, writing a subscriber record into a table requires the function &lt;code&gt;&lt;a href=&quot;mnesia#write-3&quot;&gt;mnesia:write/3&lt;/a&gt;&lt;/code&gt; instead of the simplified functions &lt;code&gt;&lt;a href=&quot;mnesia#write-1&quot;&gt;mnesia:write/1&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;mnesia#s_write-1&quot;&gt;mnesia:s_write/1&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">Для доступа к таким таблицам нельзя использовать упрощенные функции доступа (как описано ранее). Например, для записи абонентской записи в таблицу требуется функция &lt;code&gt;&lt;a href=&quot;mnesia#write-3&quot;&gt;mnesia:write/3&lt;/a&gt;&lt;/code&gt; вместо упрощенных функций &lt;code&gt;&lt;a href=&quot;mnesia#write-1&quot;&gt;mnesia:write/1&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;mnesia#s_write-1&quot;&gt;mnesia:s_write/1&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="fff8dcb832da82946e10018f4faeadf19cfc862a" translate="yes" xml:space="preserve">
          <source>To acess the record in your callback-module use:</source>
          <target state="translated">Чтобы получить запись в вашем использовании модуля обратного вызова:</target>
        </trans-unit>
        <trans-unit id="2e9f9ccb32571596628f903ebec0197042453a6d" translate="yes" xml:space="preserve">
          <source>To achieve authentication and privacy, the client and server perform a TLS/DTLS handshake procedure before transmitting or receiving any data. During the handshake, they agree on a protocol version and cryptographic algorithms, generate shared secrets using public key cryptographies, and optionally authenticate each other with digital certificates.</source>
          <target state="translated">Для достижения аутентификации и конфиденциальности клиент и сервер выполняют процедуру TLS/DTLS рукопожатия перед передачей или получением любых данных.Во время рукопожатия они согласовывают версию протокола и криптографические алгоритмы,генерируют общие секреты с использованием криптографических данных с открытым ключом и по желанию аутентифицируют друг друга с помощью цифровых сертификатов.</target>
        </trans-unit>
        <trans-unit id="0ec1db4ecbaf3ec0b305eae994234d479d4f46e8" translate="yes" xml:space="preserve">
          <source>To act as a timetrap. The time-out is triggered when the function returns.</source>
          <target state="translated">В качестве расписания.Тайм-аут срабатывает,когда функция возвращается.</target>
        </trans-unit>
        <trans-unit id="589688126179f4b6262587b2faac1c9d33d97234" translate="yes" xml:space="preserve">
          <source>To activate the code coverage support, specify the name of the cover specification file as you start &lt;code&gt;Common Test&lt;/code&gt;. Do this by using flag &lt;code&gt;-cover&lt;/code&gt; with &lt;code&gt;&lt;a href=&quot;ct_run&quot;&gt;ct_run&lt;/a&gt;&lt;/code&gt;, for example:</source>
          <target state="translated">Чтобы активировать поддержку покрытия кода, укажите имя файла спецификации обложки при запуске &lt;code&gt;Common Test&lt;/code&gt; . Сделайте это, используя flag &lt;code&gt;-cover&lt;/code&gt; с &lt;code&gt;&lt;a href=&quot;ct_run&quot;&gt;ct_run&lt;/a&gt;&lt;/code&gt; , например:</target>
        </trans-unit>
        <trans-unit id="9cae8d843ee99890bf287306d3e1fa2ea6334285" translate="yes" xml:space="preserve">
          <source>To actor, such as receiver of message.</source>
          <target state="translated">К актеру,например,к получателю сообщения.</target>
        </trans-unit>
        <trans-unit id="c17cd393cb68cd745fb32bcdd513d6e91ea1d3f7" translate="yes" xml:space="preserve">
          <source>To add a new instance of the disk_log handler, use &lt;code&gt;&lt;a href=&quot;logger#add_handler-3&quot;&gt;logger:add_handler/3 &lt;/a&gt;&lt;/code&gt;. The handler configuration argument is a map which can contain general configuration parameters, as documented in the &lt;code&gt;&lt;a href=&quot;logger_chapter#handler_configuration&quot;&gt;User's Guide &lt;/a&gt;&lt;/code&gt;, and handler specific parameters. The specific data is stored in a sub map with the key &lt;code&gt;config&lt;/code&gt;, and can contain the following parameters:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7c67d81ad5962900cef3025ec2c90eb9d886e13" translate="yes" xml:space="preserve">
          <source>To add a new instance of the disk_log handler, use &lt;code&gt;&lt;a href=&quot;logger#add_handler-3&quot;&gt;logger:add_handler/3&lt;/a&gt;&lt;/code&gt;. The handler configuration argument is a map which can contain general configuration parameters, as documented in the &lt;code&gt;&lt;a href=&quot;logger_chapter#handler_configuration&quot;&gt;User's Guide&lt;/a&gt;&lt;/code&gt;, and handler specific parameters. The specific data is stored in a sub map with the key &lt;code&gt;config&lt;/code&gt;, and can contain the following parameters:</source>
          <target state="translated">Чтобы добавить новый экземпляр обработчика disk_log, используйте &lt;code&gt;&lt;a href=&quot;logger#add_handler-3&quot;&gt;logger:add_handler/3&lt;/a&gt;&lt;/code&gt; . Аргумент конфигурации обработчика - это карта, которая может содержать общие параметры конфигурации, как описано в &lt;code&gt;&lt;a href=&quot;logger_chapter#handler_configuration&quot;&gt;User's Guide&lt;/a&gt;&lt;/code&gt; , и параметры конкретного обработчика. Конкретные данные хранятся на дополнительной карте с ключевой &lt;code&gt;config&lt;/code&gt; и могут содержать следующие параметры:</target>
        </trans-unit>
        <trans-unit id="a62dcd7f8a5f7512f140f3f638e7ecdf1954fe0c" translate="yes" xml:space="preserve">
          <source>To add a new instance of the standard handler, use &lt;code&gt;&lt;a href=&quot;logger#add_handler-3&quot;&gt;logger:add_handler/3 &lt;/a&gt;&lt;/code&gt;. The handler configuration argument is a map which can contain general configuration parameters, as documented in the &lt;code&gt;&lt;a href=&quot;logger_chapter#handler_configuration&quot;&gt;User's Guide &lt;/a&gt;&lt;/code&gt;, and handler specific parameters. The specific data is stored in a sub map with the key &lt;code&gt;config&lt;/code&gt;, and can contain the following parameters:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc71d9dc8116b79c66537800da31d34775d71f00" translate="yes" xml:space="preserve">
          <source>To add a new instance of the standard handler, use &lt;code&gt;&lt;a href=&quot;logger#add_handler-3&quot;&gt;logger:add_handler/3&lt;/a&gt;&lt;/code&gt;. The handler configuration argument is a map which can contain general configuration parameters, as documented in the &lt;code&gt;&lt;a href=&quot;logger_chapter#handler_configuration&quot;&gt;User's Guide&lt;/a&gt;&lt;/code&gt;, and handler specific parameters. The specific data is stored in a sub map with the key &lt;code&gt;config&lt;/code&gt;, and can contain the following parameters:</source>
          <target state="translated">Чтобы добавить новый экземпляр стандартного обработчика, используйте &lt;code&gt;&lt;a href=&quot;logger#add_handler-3&quot;&gt;logger:add_handler/3&lt;/a&gt;&lt;/code&gt; . Аргумент конфигурации обработчика - это карта, которая может содержать общие параметры конфигурации, как описано в &lt;code&gt;&lt;a href=&quot;logger_chapter#handler_configuration&quot;&gt;User's Guide&lt;/a&gt;&lt;/code&gt; , и параметры конкретного обработчика. Конкретные данные хранятся на дополнительной карте с ключевой &lt;code&gt;config&lt;/code&gt; и могут содержать следующие параметры:</target>
        </trans-unit>
        <trans-unit id="d25bba7220a4f7baf1911b739eb15c54b0c0b82c" translate="yes" xml:space="preserve">
          <source>To add hipe options, write like this from the Erlang shell:</source>
          <target state="translated">Чтобы добавить опции hipe,напишите вот так из оболочки Erlang:</target>
        </trans-unit>
        <trans-unit id="fce45144e65c70b074644a796eba73061cd36112" translate="yes" xml:space="preserve">
          <source>To add one file at the time into an opened tar file, use function &lt;code&gt;&lt;a href=&quot;#add-3&quot;&gt;add/3,4&lt;/a&gt;&lt;/code&gt;. When you are finished adding files, use function &lt;code&gt;&lt;a href=&quot;#close-1&quot;&gt; close/1&lt;/a&gt;&lt;/code&gt; to close the tar file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3baa48763297e23c94a7b912bd0879afc5570f44" translate="yes" xml:space="preserve">
          <source>To add one file at the time into an opened tar file, use function &lt;code&gt;&lt;a href=&quot;#add-3&quot;&gt;add/3,4&lt;/a&gt;&lt;/code&gt;. When you are finished adding files, use function &lt;code&gt;&lt;a href=&quot;#close-1&quot;&gt;close/1&lt;/a&gt;&lt;/code&gt; to close the tar file.</source>
          <target state="translated">Чтобы добавить по одному файлу в открытый tar-файл, используйте функцию &lt;code&gt;&lt;a href=&quot;#add-3&quot;&gt;add/3,4&lt;/a&gt;&lt;/code&gt; . Когда вы закончите добавлять файлы, используйте функцию &lt;code&gt;&lt;a href=&quot;#close-1&quot;&gt;close/1&lt;/a&gt;&lt;/code&gt; , чтобы закрыть tar-файл.</target>
        </trans-unit>
        <trans-unit id="a84e38b55e72c3e97104e0980726fd48cb3019f6" translate="yes" xml:space="preserve">
          <source>To add or remove functions to the set of traced functions, use &lt;code&gt;erlang:trace_pattern/3&lt;/code&gt;.</source>
          <target state="translated">Чтобы добавить или удалить функции из набора отслеживаемых функций, используйте &lt;code&gt;erlang:trace_pattern/3&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fda79af0ac4d5d28c0ded42a7d7b009f4b62fd23" translate="yes" xml:space="preserve">
          <source>To add or remove one or more processes to the set of traced processes, use &lt;code&gt;&lt;a href=&quot;#trace-3&quot;&gt;erlang:trace/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Чтобы добавить или удалить один или несколько процессов из набора отслеживаемых процессов, используйте &lt;code&gt;&lt;a href=&quot;#trace-3&quot;&gt;erlang:trace/3&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="97e9dc37875751d49fa3a200c5e6307140fdca4a" translate="yes" xml:space="preserve">
          <source>To allow Emacs to auto-indent the code, each file starts with the following line:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd9ff12ed931dadbc8c2436f103539b09520bf39" translate="yes" xml:space="preserve">
          <source>To allow the &lt;code&gt;&lt;a href=&quot;#users&quot;&gt;user&lt;/a&gt;&lt;/code&gt; to &lt;strong&gt;request unloading&lt;/strong&gt; to wait for &lt;strong&gt;actual unloading&lt;/strong&gt;, &lt;code&gt;monitor&lt;/code&gt; triggers can be specified in much the same way as when loading. However, as &lt;code&gt;&lt;a href=&quot;#users&quot;&gt;users&lt;/a&gt;&lt;/code&gt; of this function seldom are interested in more than decrementing the reference counts, monitoring is seldom needed.</source>
          <target state="translated">Чтобы разрешить &lt;code&gt;&lt;a href=&quot;#users&quot;&gt;user&lt;/a&gt;&lt;/code&gt; для &lt;strong&gt;запроса выгрузки&lt;/strong&gt; ждать &lt;strong&gt;фактической выгрузки&lt;/strong&gt; , &lt;code&gt;monitor&lt;/code&gt; Триггеры могут быть заданы во многом так же, как и при загрузке. Однако, поскольку &lt;code&gt;&lt;a href=&quot;#users&quot;&gt;users&lt;/a&gt;&lt;/code&gt; этой функции редко заинтересованы в большем, чем уменьшение счетчика ссылок, редко требуется мониторинг.</target>
        </trans-unit>
        <trans-unit id="59bb251ccc89a2f6d964901c5abf9140c03fcff3" translate="yes" xml:space="preserve">
          <source>To avoid copying data when a large binary is sent or returned from the driver to an Erlang process, the driver must first allocate the binary and then send it to an Erlang process in some way.</source>
          <target state="translated">Чтобы избежать копирования данных,когда большой двоичный файл отправляется или возвращается драйвером в процесс Erlang,драйвер должен сначала выделить двоичный файл,а затем каким-то образом отправить его в процесс Erlang.</target>
        </trans-unit>
        <trans-unit id="2865a7885b23338eb552d918abbacdfb214f7e88" translate="yes" xml:space="preserve">
          <source>To avoid copying the result in each iteration, build the list in reverse order and reverse the list when you are done:</source>
          <target state="translated">Чтобы избежать копирования результата в каждой итерации,стройте список в обратном порядке и переверните список,когда закончите:</target>
        </trans-unit>
        <trans-unit id="0e09f8fda1e6fc4cf2056ba424646d85461e4106" translate="yes" xml:space="preserve">
          <source>To avoid duplication of upgrade instructions, it is allowed to use regular expressions to specify &lt;code&gt;UpFromVsn&lt;/code&gt; and &lt;code&gt;DownToVsn&lt;/code&gt;. To be considered a regular expression, the version identifier must be specified as a binary. For example, the following match all versions &lt;code&gt;2.1.x&lt;/code&gt;, where &lt;code&gt;x&lt;/code&gt; is any number:</source>
          <target state="translated">Чтобы избежать дублирования инструкций по обновлению, разрешено использовать регулярные выражения для указания &lt;code&gt;UpFromVsn&lt;/code&gt; и &lt;code&gt;DownToVsn&lt;/code&gt; . Чтобы считаться регулярным выражением, идентификатор версии должен быть указан как двоичный. Например, следующее соответствует всем версиям &lt;code&gt;2.1.x&lt;/code&gt; , где &lt;code&gt;x&lt;/code&gt; - любое число:</target>
        </trans-unit>
        <trans-unit id="f3e4e6304ab6854db5a3171fca0bb16d781ed384" translate="yes" xml:space="preserve">
          <source>To avoid hanging on open ports, use function &lt;code&gt;&lt;a href=&quot;#try_load-3&quot;&gt;try_load/3&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">Чтобы избежать зависания на открытых портах, используйте вместо этого функцию &lt;code&gt;&lt;a href=&quot;#try_load-3&quot;&gt;try_load/3&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="31d3d102c2bccbc776e3cf95a6211839f76eac95" translate="yes" xml:space="preserve">
          <source>To avoid hard-coding data values related to the test and/or System Under Test (SUT) in the test suites, the data can instead be specified through configuration files or strings that &lt;code&gt;Common Test&lt;/code&gt; reads before the start of a test run. External configuration data makes it possible to change test properties without modifying the test suites using the data. Examples of configuration data follows:</source>
          <target state="translated">Чтобы избежать жесткого кодирования значений данных, связанных с тестом и / или тестируемой системой (SUT) в тестовых наборах, данные можно вместо этого указать через файлы конфигурации или строки, которые &lt;code&gt;Common Test&lt;/code&gt; считывает перед запуском теста. Данные внешней конфигурации позволяют изменять свойства теста без изменения наборов тестов, использующих эти данные. Ниже приведены примеры данных конфигурации:</target>
        </trans-unit>
        <trans-unit id="dfbb5760a4f99858bb3dbeadd3c934b25eba7307" translate="yes" xml:space="preserve">
          <source>To avoid messing up the indentation, all comments are written as C++ style comments (&lt;code&gt;//&lt;/code&gt;) instead of &lt;code&gt;#&lt;/code&gt;. Note that a comment must start at the beginning of a line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a0e028a0de585306a96650beddc8214b6be458a" translate="yes" xml:space="preserve">
          <source>To avoid the three copies of the code, we could use only one specific instruction:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff4064fdc26dd0f01d01190c1a8e9d791a3c3dfd" translate="yes" xml:space="preserve">
          <source>To avoid this, we can consider starting and stopping the server for every test. We can thus implement the start and stop action as common functions to be called from &lt;code&gt;&lt;a href=&quot;common_test#Module:init_per_testcase-2&quot;&gt;init_per_testcase&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;common_test#Module:end_per_testcase-2&quot;&gt;end_per_testcase&lt;/a&gt;&lt;/code&gt;. (Remember to test the start and stop functionality separately.) The configuration can also be implemented as a common function, maybe grouped with the start function. Finally, the testing of connecting and disconnecting a client can be grouped into one test case. The resulting suite can look as follows:</source>
          <target state="translated">Чтобы избежать этого, мы можем рассмотреть возможность запуска и остановки сервера для каждого теста. Таким образом, мы можем реализовать действия start и stop как общие функции, которые будут вызываться из &lt;code&gt;&lt;a href=&quot;common_test#Module:init_per_testcase-2&quot;&gt;init_per_testcase&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;common_test#Module:end_per_testcase-2&quot;&gt;end_per_testcase&lt;/a&gt;&lt;/code&gt; . (Не забудьте протестировать функции запуска и остановки по отдельности.) Конфигурация также может быть реализована как общая функция, возможно, сгруппирована с функцией запуска. Наконец, тестирование подключения и отключения клиента можно сгруппировать в один тестовый пример. Полученный пакет может выглядеть следующим образом:</target>
        </trans-unit>
        <trans-unit id="b9201ec7b8336f2387fa27a7eefb8cd01282e065" translate="yes" xml:space="preserve">
          <source>To avoid this, we can consider starting and stopping the server for every test. We can thus implement the start and stop action as common functions to be called from &lt;code&gt;&lt;a href=&quot;ct_suite#Module:init_per_testcase-2&quot;&gt;init_per_testcase&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;ct_suite#Module:end_per_testcase-2&quot;&gt;end_per_testcase&lt;/a&gt;&lt;/code&gt;. (Remember to test the start and stop functionality separately.) The configuration can also be implemented as a common function, maybe grouped with the start function. Finally, the testing of connecting and disconnecting a client can be grouped into one test case. The resulting suite can look as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da22d86c6d5a5e12ab72051b2e07972d39e8f4d0" translate="yes" xml:space="preserve">
          <source>To avoid this, you can format the internal state that gets in the error log and gets returned from &lt;code&gt;sys:get_status/1,2&lt;/code&gt; by implementing function &lt;code&gt;Module:format_status/2&lt;/code&gt;, for example like this:</source>
          <target state="translated">Чтобы избежать этого, вы можете отформатировать внутреннее состояние, которое попадает в журнал ошибок и возвращается из &lt;code&gt;sys:get_status/1,2&lt;/code&gt; , реализуя функцию &lt;code&gt;Module:format_status/2&lt;/code&gt; , например, так:</target>
        </trans-unit>
        <trans-unit id="5df12af7ca1de496492c0fd73285a97d145fbb83" translate="yes" xml:space="preserve">
          <source>To be able to access a record in a fragmented table, &lt;code&gt;Mnesia&lt;/code&gt; must determine to which fragment the actual record belongs. This is done by module &lt;code&gt;mnesia_frag&lt;/code&gt;, which implements the &lt;code&gt;mnesia_access&lt;/code&gt; callback behavior. It is recommended to read the documentation about the function &lt;code&gt;&lt;a href=&quot;mnesia#activity-4&quot;&gt;mnesia:activity/4&lt;/a&gt;&lt;/code&gt; to see how &lt;code&gt;mnesia_frag&lt;/code&gt; can be used as a &lt;code&gt;mnesia_access&lt;/code&gt; callback module.</source>
          <target state="translated">Чтобы иметь возможность получить доступ к записи во фрагментированной таблице, &lt;code&gt;Mnesia&lt;/code&gt; должен определить, к какому фрагменту принадлежит фактическая запись. Это делается модулем &lt;code&gt;mnesia_frag&lt;/code&gt; , который реализует поведение обратного вызова &lt;code&gt;mnesia_access&lt;/code&gt; . Рекомендуется прочитать документацию о функции &lt;code&gt;&lt;a href=&quot;mnesia#activity-4&quot;&gt;mnesia:activity/4&lt;/a&gt;&lt;/code&gt; , чтобы узнать, как &lt;code&gt;mnesia_frag&lt;/code&gt; можно использовать в качестве &lt;code&gt;mnesia_access&lt;/code&gt; обратного вызова mnesia_access .</target>
        </trans-unit>
        <trans-unit id="23318e76150bd1f0abc3ba7a0d5c11d745ade1e5" translate="yes" xml:space="preserve">
          <source>To be able to access another source than &lt;code&gt;running&lt;/code&gt;, the server must advertise &lt;code&gt;:candidate&lt;/code&gt; and/or &lt;code&gt;:startup&lt;/code&gt;.</source>
          <target state="translated">Чтобы иметь возможность получить доступ к другому источнику, кроме &lt;code&gt;running&lt;/code&gt; , сервер должен объявить &lt;code&gt;:candidate&lt;/code&gt; и / или &lt;code&gt;:startup&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b51f87825f77244a25cc2b4cb931c55829d08561" translate="yes" xml:space="preserve">
          <source>To be able to build the 64bit VM, you will also need the 64bit MinGW compiler from:</source>
          <target state="translated">Для сборки 64-битной ВМ также потребуется 64-битный компилятор MinGW:</target>
        </trans-unit>
        <trans-unit id="26291c0ee8be34dfdaf3cc8ddf503e49e01d4215" translate="yes" xml:space="preserve">
          <source>To be able to handle that the peer has done a shutdown on the write side, option &lt;code&gt;{exit_on_close, false}&lt;/code&gt; is useful.</source>
          <target state="translated">Чтобы иметь возможность обрабатывать, что одноранговый &lt;code&gt;{exit_on_close, false}&lt;/code&gt; на стороне записи, полезна опция {exit_on_close, false} .</target>
        </trans-unit>
        <trans-unit id="e5203ca51ac51dc3846f4da1bcecefb73078a29b" translate="yes" xml:space="preserve">
          <source>To be able to match on events, the event handler module must include the header file &lt;code&gt;ct_event.hrl&lt;/code&gt;. An event is a record with the following definition:</source>
          <target state="translated">Чтобы иметь возможность сопоставлять события, модуль обработчика событий должен включать файл заголовка &lt;code&gt;ct_event.hrl&lt;/code&gt; . Событие - это запись со следующим определением:</target>
        </trans-unit>
        <trans-unit id="485420cfd5dcbb3ebc3984f14efff913d6cf6cf5" translate="yes" xml:space="preserve">
          <source>To be able to react to a change in Erlang system time, you must be able to detect that it happened. The change in Erlang system time occurs when the current time offset is changed. We have therefore introduced the possibility to monitor the time offset using &lt;code&gt;&lt;a href=&quot;erlang#monitor-2&quot;&gt; erlang:monitor(time_offset, clock_service)&lt;/a&gt;&lt;/code&gt;. A process monitoring the time offset is sent a message on the following format when the time offset is changed:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3749ffc8118407236ba6c1778f7ad9201b5e31f" translate="yes" xml:space="preserve">
          <source>To be able to react to a change in Erlang system time, you must be able to detect that it happened. The change in Erlang system time occurs when the current time offset is changed. We have therefore introduced the possibility to monitor the time offset using &lt;code&gt;&lt;a href=&quot;erlang#monitor-2&quot;&gt;erlang:monitor(time_offset, clock_service)&lt;/a&gt;&lt;/code&gt;. A process monitoring the time offset is sent a message on the following format when the time offset is changed:</source>
          <target state="translated">Чтобы иметь возможность реагировать на изменение системного времени Erlang, вы должны уметь определять, что это произошло. Изменение системного времени Erlang происходит при изменении текущего смещения времени. Поэтому мы ввели возможность отслеживать смещение времени с помощью &lt;code&gt;&lt;a href=&quot;erlang#monitor-2&quot;&gt;erlang:monitor(time_offset, clock_service)&lt;/a&gt;&lt;/code&gt; . Процесс, отслеживающий смещение времени, отправляет сообщение в следующем формате, когда смещение времени изменяется:</target>
        </trans-unit>
        <trans-unit id="247dec3e8d99aa407189a0694139d1d0d984205d" translate="yes" xml:space="preserve">
          <source>To be able to specify the different variants of version 3, the encoding config option &lt;code&gt;{version3, version3()}&lt;/code&gt;&lt;strong&gt;still&lt;/strong&gt; exists. This option, if present, has to be &lt;strong&gt;first&lt;/strong&gt; in the encoding config list. Version 1 and 2 codec's ignore this option, if found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4db2f48a1319253c8231fa7c3d7cafe6f17c3bfc" translate="yes" xml:space="preserve">
          <source>To be backward compatible, &lt;code&gt;erlang:now/0&lt;/code&gt; remains &quot;as is&quot;, but &lt;strong&gt;you are strongly discouraged from using it&lt;/strong&gt;. Many use cases of &lt;code&gt;erlang:now/0&lt;/code&gt; prevents you from using the new &lt;code&gt;&lt;a href=&quot;#Multi_Time_Warp_Mode&quot;&gt;multi-time warp mode&lt;/a&gt;&lt;/code&gt;, which is an important part of this new time functionality improvement.</source>
          <target state="translated">Для обеспечения обратной совместимости &lt;code&gt;erlang:now/0&lt;/code&gt; остается &amp;laquo;как есть&amp;raquo;, но &lt;strong&gt;вам настоятельно не рекомендуется его использовать&lt;/strong&gt; . Многие варианты использования &lt;code&gt;erlang:now/0&lt;/code&gt; не позволяют вам использовать новый &lt;code&gt;&lt;a href=&quot;#Multi_Time_Warp_Mode&quot;&gt;multi-time warp mode&lt;/a&gt;&lt;/code&gt; , который является важной частью этого нового улучшения функциональности времени.</target>
        </trans-unit>
        <trans-unit id="329020006d74005fa227c858badad448a18d5417" translate="yes" xml:space="preserve">
          <source>To be explicit, this does not work:</source>
          <target state="translated">Если быть откровенным,это не работает:</target>
        </trans-unit>
        <trans-unit id="921be93011160f60c5394e46977ec4ffed9f386b" translate="yes" xml:space="preserve">
          <source>To be exploited by documentation tools, such as EDoc, for generating program documentation of various forms</source>
          <target state="translated">Используется инструментами документирования,такими как EDoc,для создания программной документации различных форм.</target>
        </trans-unit>
        <trans-unit id="f48ee1f9c7b05fd181e829e8e9aa1a1a445ae544" translate="yes" xml:space="preserve">
          <source>To be made the default version, the newly installed release must be made &lt;strong&gt;permanent&lt;/strong&gt;, which means the previous version becomes &lt;strong&gt;old&lt;/strong&gt;:</source>
          <target state="translated">Чтобы сделать версию по умолчанию, только что установленный выпуск должен быть &lt;strong&gt;постоянным&lt;/strong&gt; , что означает, что предыдущая версия становится &lt;strong&gt;старой&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="e74a300fec94193e2bb8d4e9a20ec23ef6d08170" translate="yes" xml:space="preserve">
          <source>To be passed along to &lt;code&gt;dist_util:handshake_other_started(HsData)&lt;/code&gt;.</source>
          <target state="translated">Для передачи &lt;code&gt;dist_util:handshake_other_started(HsData)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f188872bc4af8764a7f9a37cf3e8af8d364819f6" translate="yes" xml:space="preserve">
          <source>To be used in &lt;code&gt;&lt;a href=&quot;crypto#mac-4&quot;&gt;mac/4&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;related functions&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74a03c9a55622acfb1073ad485959792425762b4" translate="yes" xml:space="preserve">
          <source>To be used with:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9599c6de97f8d0342f31be2e0d82a6fa8e679162" translate="yes" xml:space="preserve">
          <source>To be written.</source>
          <target state="translated">Чтобы быть написанным.</target>
        </trans-unit>
        <trans-unit id="478342ff97001f76e051ff05457f998d192f9c98" translate="yes" xml:space="preserve">
          <source>To bring up all functions of the module in the listbox, click the &lt;strong&gt;OK&lt;/strong&gt; button (or press the &lt;strong&gt;Return&lt;/strong&gt; or &lt;strong&gt;Tab&lt;/strong&gt; key) when a module name has been specified,.</source>
          <target state="translated">Чтобы вывести все функции модуля в список, нажмите кнопку &lt;strong&gt;ОК&lt;/strong&gt; (или нажмите клавишу &lt;strong&gt;Return&lt;/strong&gt; или &lt;strong&gt;Tab&lt;/strong&gt; ), когда имя модуля было указано.</target>
        </trans-unit>
        <trans-unit id="eef5c50b74cfb025ae830e60721c49d26fd50ea9" translate="yes" xml:space="preserve">
          <source>To browse the file hierarchy and interpret the appropriate modules, either select a module name and click &lt;strong&gt;Choose&lt;/strong&gt; (or press carriage return), or double-click the module name. Interpreted modules have the type &lt;code&gt;erl src&lt;/code&gt;.</source>
          <target state="translated">Чтобы просмотреть иерархию файлов и интерпретировать соответствующие модули, либо выберите имя модуля и нажмите &amp;laquo; &lt;strong&gt;Выбрать&amp;raquo;&lt;/strong&gt; (или нажмите клавишу возврата каретки), либо дважды щелкните имя модуля. Интерпретируемые модули имеют тип &lt;code&gt;erl src&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="28e906186648188c00413e57f57d46fc8b55c323" translate="yes" xml:space="preserve">
          <source>To build the map &lt;code&gt;#{key1 =&amp;gt; 100, key2 =&amp;gt; {200, 300}}&lt;/code&gt;, the following call can be made.</source>
          <target state="translated">Чтобы построить карту &lt;code&gt;#{key1 =&amp;gt; 100, key2 =&amp;gt; {200, 300}}&lt;/code&gt; , можно сделать следующий вызов.</target>
        </trans-unit>
        <trans-unit id="cf559a27d31b4ba64718074dda19ef0d468cf4ad" translate="yes" xml:space="preserve">
          <source>To build the tuple &lt;code&gt;{tcp, Port, [100 | Binary]}&lt;/code&gt;, the following call can be made.</source>
          <target state="translated">Чтобы построить кортеж &lt;code&gt;{tcp, Port, [100 | Binary]}&lt;/code&gt; можно сделать следующий вызов.</target>
        </trans-unit>
        <trans-unit id="94328137f8adf38a2d5782ddb946585047133b14" translate="yes" xml:space="preserve">
          <source>To call an arbitrary function from the release handler, the following instruction is used:</source>
          <target state="translated">Для вызова произвольной функции из обработчика выпуска используется следующая инструкция:</target>
        </trans-unit>
        <trans-unit id="648e7cf5c6adf0a3796e8cd7e102571a81de2b0f" translate="yes" xml:space="preserve">
          <source>To call the parser generator, use the following command:</source>
          <target state="translated">Чтобы вызвать генератор синтаксического анализатора,используйте следующую команду:</target>
        </trans-unit>
        <trans-unit id="d0f9713393429e6796bf7c377bd68256251a30fd" translate="yes" xml:space="preserve">
          <source>To catch the exception, use for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="754fcce3ba1a05a254eee986bb434f3d90945ecd" translate="yes" xml:space="preserve">
          <source>To change from old code to current code, a process must make a fully qualified function call.</source>
          <target state="translated">Чтобы перейти от старого кода к текущему,процесс должен выполнить вызов полностью квалифицированной функции.</target>
        </trans-unit>
        <trans-unit id="d43cb0d79f1f2a05084529861044cff6d89a0ac1" translate="yes" xml:space="preserve">
          <source>To change that we would need to insert action &lt;code&gt;hibernate&lt;/code&gt; in more places. For example, the state-independent &lt;code&gt;set_lock_button&lt;/code&gt; operation would have to use &lt;code&gt;hibernate&lt;/code&gt; but only in the &lt;code&gt;{open,_}&lt;/code&gt; state, which would clutter the code.</source>
          <target state="translated">Чтобы изменить это, нам нужно будет вставить действие &lt;code&gt;hibernate&lt;/code&gt; в большее количество мест. Например, независимая от &lt;code&gt;set_lock_button&lt;/code&gt; операция set_lock_button должна использовать &lt;code&gt;hibernate&lt;/code&gt; но только в состоянии &lt;code&gt;{open,_}&lt;/code&gt; , что приведет к загромождению кода.</target>
        </trans-unit>
        <trans-unit id="8177a3463ef365dc1edec90cb008147223f97121" translate="yes" xml:space="preserve">
          <source>To change the SYSDIR, see the &lt;code&gt;&lt;a href=&quot;#type-system_dir_daemon_option&quot;&gt;system_dir&lt;/a&gt;&lt;/code&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e21c4ee2840bdc59e21153e6a7bd3fa7292bfdf0" translate="yes" xml:space="preserve">
          <source>To change the USERDIR, see the &lt;code&gt;&lt;a href=&quot;#type-user_dir_common_option&quot;&gt;user_dir&lt;/a&gt;&lt;/code&gt; option</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d2291b5accb98f7fdfc37910802e511d2e8b381" translate="yes" xml:space="preserve">
          <source>To change the above program to one that works out the minimum value of the element in a list, you only need to write &amp;lt; instead of &amp;gt;. (But it would be wise to change the name of the function to &lt;code&gt;list_min&lt;/code&gt;.)</source>
          <target state="translated">Чтобы изменить указанную выше программу на программу, которая определяет минимальное значение элемента в списке, вам нужно только написать &amp;lt;вместо&amp;gt;. (Но было бы разумно изменить имя функции на &lt;code&gt;list_min&lt;/code&gt; .)</target>
        </trans-unit>
        <trans-unit id="df565b9f1ce8851c5511996238157f3f30542cab" translate="yes" xml:space="preserve">
          <source>To change the algorithm list, there are two options which can be used in &lt;code&gt;&lt;a href=&quot;ssh#connect-3&quot;&gt;ssh:connect/2,3,4&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;ssh#daemon-2&quot;&gt;ssh:daemon/2,3&lt;/a&gt;&lt;/code&gt;. The options could of course be used in all other functions that initiates connections.</source>
          <target state="translated">Чтобы изменить список алгоритмов, в &lt;code&gt;&lt;a href=&quot;ssh#connect-3&quot;&gt;ssh:connect/2,3,4&lt;/a&gt;&lt;/code&gt; можно использовать две опции : connect / 2,3,4 и &lt;code&gt;&lt;a href=&quot;ssh#daemon-2&quot;&gt;ssh:daemon/2,3&lt;/a&gt;&lt;/code&gt; . Эти параметры, конечно, можно использовать во всех других функциях, которые инициируют соединения.</target>
        </trans-unit>
        <trans-unit id="20b354ae68e6f4458aeb56c8ff9e5b341166ae57" translate="yes" xml:space="preserve">
          <source>To change the log level for a handler, use &lt;code&gt;&lt;a href=&quot;#set_handler_config-3&quot;&gt; set_handler_config(HandlerId, level, Level) &lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="645ec6265eaa80d65a779b7caa5860ddbfdebc42" translate="yes" xml:space="preserve">
          <source>To change the log level for a handler, use &lt;code&gt;&lt;a href=&quot;#set_handler_config-3&quot;&gt;set_handler_config(HandlerId, level, Level)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Чтобы изменить уровень журнала для обработчика, используйте &lt;code&gt;&lt;a href=&quot;#set_handler_config-3&quot;&gt;set_handler_config(HandlerId, level, Level)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dd786bf281877aa85271503f3c21215f44679fd5" translate="yes" xml:space="preserve">
          <source>To change the pattern so that it matches all palindromic strings, not only those with an odd number of characters, it is tempting to change the pattern to this:</source>
          <target state="translated">Чтобы изменить шаблон таким образом,чтобы он совпадал со всеми палиндромными строками,а не только с нечетным количеством символов,возникает соблазн изменить шаблон на этот:</target>
        </trans-unit>
        <trans-unit id="a6051fffc9d710c7ebcc3e122883720f210d4ada" translate="yes" xml:space="preserve">
          <source>To change the primary log level for Logger, use &lt;code&gt;&lt;a href=&quot;#set_primary_config-2&quot;&gt; set_primary_config(level, Level)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9656eb62d534763e64141fc6d3d1d35b0b442bc" translate="yes" xml:space="preserve">
          <source>To change the primary log level for Logger, use &lt;code&gt;&lt;a href=&quot;#set_primary_config-2&quot;&gt;set_primary_config(level, Level)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Чтобы изменить основной уровень журнала для Logger, используйте &lt;code&gt;&lt;a href=&quot;#set_primary_config-2&quot;&gt;set_primary_config(level, Level)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="866ca5de7c21c0cf7da2438015592c26ee8d81d7" translate="yes" xml:space="preserve">
          <source>To change the rules that restrict the use of an asset, the user only needs write access to the directory where the asset is.</source>
          <target state="translated">Чтобы изменить правила,ограничивающие использование актива,пользователю нужен только доступ на запись в каталог,в котором находится актив.</target>
        </trans-unit>
        <trans-unit id="f5621caa72f0f06f014de0ebbc8d407830e5d0da" translate="yes" xml:space="preserve">
          <source>To check if your code is executed within a transaction, use the function &lt;code&gt;&lt;a href=&quot;mnesia#is_transaction-0&quot;&gt;mnesia:is_transaction/0&lt;/a&gt;&lt;/code&gt;. It returns &lt;code&gt;true&lt;/code&gt; when called inside a transaction context, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Чтобы проверить, выполняется ли ваш код в транзакции, используйте функцию &lt;code&gt;&lt;a href=&quot;mnesia#is_transaction-0&quot;&gt;mnesia:is_transaction/0&lt;/a&gt;&lt;/code&gt; . Он возвращает &lt;code&gt;true&lt;/code&gt; при вызове внутри контекста транзакции, в противном случае - &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6b2516b6faafd214fb55f7400a6a5d85502f13d2" translate="yes" xml:space="preserve">
          <source>To check whether a term is a fun, use the test &lt;code&gt;is_function/1&lt;/code&gt; in a guard.</source>
          <target state="translated">Чтобы проверить, является ли термин забавным, используйте тест &lt;code&gt;is_function/1&lt;/code&gt; в охраннике.</target>
        </trans-unit>
        <trans-unit id="61eaab6c693a13cade1df8955eec714a449d7d24" translate="yes" xml:space="preserve">
          <source>To choose the name for the generated module, for example, because you need to compile the same specs for different encoding rules.</source>
          <target state="translated">Выбрать имя для сгенерированного модуля,например,потому,что вам нужно скомпилировать одни и те же спецификации для разных правил кодирования.</target>
        </trans-unit>
        <trans-unit id="77676158a92effec6457676e808555ae1fd71986" translate="yes" xml:space="preserve">
          <source>To close the connection, call the function &lt;code&gt;&lt;a href=&quot;ssh#close-1&quot;&gt;ssh:close(ConnectionRef)&lt;/a&gt;&lt;/code&gt;. As an alternative, set the option &lt;code&gt;&lt;a href=&quot;ssh#type-max_idle_time_common_option&quot;&gt;{idle_time, 1}&lt;/a&gt;&lt;/code&gt; when opening the connection. This will cause the connection to be closed automaticaly when there are no channels open for the specified time period, in this case 1 ms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1427a1da5e3a256c344db44b11dc0bba14915bf8" translate="yes" xml:space="preserve">
          <source>To close the window, click &lt;strong&gt;Done&lt;/strong&gt;.</source>
          <target state="translated">Чтобы закрыть окно, нажмите &lt;strong&gt;Готово&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="8529722ba2eb984fe7acaf5239aaeee899afd795" translate="yes" xml:space="preserve">
          <source>To collect the channel messages in a program, use &lt;code&gt;receive...end&lt;/code&gt; instead of &lt;code&gt;flush/1&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b49e3e39a1c8fd0e9ebc5aae6e7cbc8ac29bcce" translate="yes" xml:space="preserve">
          <source>To communicate through Telnet to the host specified by &lt;code&gt;HostNameOrIpAddress&lt;/code&gt;, use the interface functions in &lt;code&gt;&lt;a href=&quot;ct_telnet&quot;&gt;ct_telnet&lt;/a&gt;&lt;/code&gt;, for example, &lt;code&gt;open(Name)&lt;/code&gt; and &lt;code&gt;cmd(Name,Cmd)&lt;/code&gt;.</source>
          <target state="translated">Для связи через Telnet с хостом, указанным &lt;code&gt;HostNameOrIpAddress&lt;/code&gt; , используйте функции интерфейса в &lt;code&gt;&lt;a href=&quot;ct_telnet&quot;&gt;ct_telnet&lt;/a&gt;&lt;/code&gt; , например &lt;code&gt;open(Name)&lt;/code&gt; и &lt;code&gt;cmd(Name,Cmd)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8cc63914adafb29982dfe6a5968660a48f49ce2e" translate="yes" xml:space="preserve">
          <source>To compare styles, here follows the same example using &lt;code&gt;&lt;a href=&quot;#type-callback_mode&quot;&gt;&lt;strong&gt;callback mode&lt;/strong&gt;&lt;/a&gt;&lt;/code&gt;&lt;code&gt;handle_event_function&lt;/code&gt;, or rather the code to replace after function &lt;code&gt;init/1&lt;/code&gt; of the &lt;code&gt;pushbutton.erl&lt;/code&gt; example file above:</source>
          <target state="translated">Для сравнения стилей, здесь следует тому же примеру с использованием &lt;code&gt;&lt;a href=&quot;#type-callback_mode&quot;&gt;&lt;strong&gt;callback mode&lt;/strong&gt;&lt;/a&gt;&lt;/code&gt; &lt;code&gt;handle_event_function&lt;/code&gt; , или , вернее кода для замены после функции &lt;code&gt;init/1&lt;/code&gt; из &lt;code&gt;pushbutton.erl&lt;/code&gt; вышеприведенного файла:</target>
        </trans-unit>
        <trans-unit id="f9bdaaae36af33eb796c91b4364a72c96ddef2b5" translate="yes" xml:space="preserve">
          <source>To compare the importance of the printout to a specific verbosity level.</source>
          <target state="translated">Сравнить важность распечатки с определенным уровнем глаголов.</target>
        </trans-unit>
        <trans-unit id="ce902aa7e185b10f95db9c5e6db8ef30884a21be" translate="yes" xml:space="preserve">
          <source>To compile your code, ensure that your C compiler knows where to find &lt;code&gt;ei.h&lt;/code&gt; by specifying an appropriate &lt;code&gt;-I&lt;/code&gt; argument on the command line, or add it to the &lt;code&gt;CFLAGS&lt;/code&gt; definition in your &lt;code&gt;Makefile&lt;/code&gt;. The correct value for this path is &lt;code&gt;$OTPROOT/lib/erl_interface-$EIVSN/include&lt;/code&gt;, where:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54ed5bb067e17e1fa5d9fb9384ef7e59e200b2f4" translate="yes" xml:space="preserve">
          <source>To compile your code, ensure that your C compiler knows where to find &lt;code&gt;erl_interface.h&lt;/code&gt; by specifying an appropriate &lt;code&gt;-I&lt;/code&gt; argument on the command line, or add it to the &lt;code&gt;CFLAGS&lt;/code&gt; definition in your &lt;code&gt;Makefile&lt;/code&gt;. The correct value for this path is &lt;code&gt;$OTPROOT/lib/erl_interface-$EIVSN/include&lt;/code&gt;, where:</source>
          <target state="translated">Чтобы скомпилировать ваш код, убедитесь, что ваш компилятор C знает, где найти &lt;code&gt;erl_interface.h&lt;/code&gt; , указав соответствующий аргумент &lt;code&gt;-I&lt;/code&gt; в командной строке, или добавьте его в определение &lt;code&gt;CFLAGS&lt;/code&gt; в вашем &lt;code&gt;Makefile&lt;/code&gt; . Правильное значение для этого пути - &lt;code&gt;$OTPROOT/lib/erl_interface-$EIVSN/include&lt;/code&gt; , где:</target>
        </trans-unit>
        <trans-unit id="99dbaa9ef513face3ab175774b7916127ae86697" translate="yes" xml:space="preserve">
          <source>To complete the I/O server, we only need to read and write the table in an appropriate way:</source>
          <target state="translated">Для завершения работы сервера ввода/вывода нам достаточно прочитать и записать таблицу соответствующим образом:</target>
        </trans-unit>
        <trans-unit id="ef56703b3c226b895e39bdf18576e702cab5ae0b" translate="yes" xml:space="preserve">
          <source>To configure the Logger backend, use &lt;code&gt;Kernel configuration parameters&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#configuration_API&quot;&gt;configuration functions&lt;/a&gt;&lt;/code&gt; in the Logger API.</source>
          <target state="translated">Чтобы настроить серверную часть Logger, используйте &lt;code&gt;Kernel configuration parameters&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#configuration_API&quot;&gt;configuration functions&lt;/a&gt;&lt;/code&gt; ядра или функции конфигурации в Logger API.</target>
        </trans-unit>
        <trans-unit id="a8abc4316358324e879aa4fb86c41abefacbe121" translate="yes" xml:space="preserve">
          <source>To connect to a distributed Erlang node, you must first initialize the connection routine with &lt;code&gt;&lt;a href=&quot;erl_connect#erl_connect_init&quot;&gt;erl_connect:erl_connect_init&lt;/a&gt;&lt;/code&gt;, which stores information, such as the hostname, node name, and IP address for later use:</source>
          <target state="translated">Чтобы подключиться к распределенному узлу Erlang, вы должны сначала инициализировать процедуру подключения с помощью &lt;code&gt;&lt;a href=&quot;erl_connect#erl_connect_init&quot;&gt;erl_connect:erl_connect_init&lt;/a&gt;&lt;/code&gt; , в котором хранится информация, такая как имя хоста, имя узла и IP-адрес для дальнейшего использования:</target>
        </trans-unit>
        <trans-unit id="814ff103d76eb9252c18ebc95545cfae2963c042" translate="yes" xml:space="preserve">
          <source>To connect to a distributed Erlang node, you must first initialize the connection routine with one of the &lt;code&gt;&lt;a href=&quot;ei_connect#ei_connect_init&quot;&gt; ei_connect_init_*&lt;/a&gt;&lt;/code&gt; functions, which stores information, such as the hostname, and node name for later use:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da53f52f9b6e989d7d98084c289e93041ec03817" translate="yes" xml:space="preserve">
          <source>To constrain the match, it is needed to replace some of the &lt;code&gt;'_'&lt;/code&gt; elements. The code for matching out all female employees looks as follows:</source>
          <target state="translated">Чтобы ограничить совпадение, необходимо заменить некоторые элементы &lt;code&gt;'_'&lt;/code&gt; . Код для сопоставления всех сотрудников-женщин выглядит следующим образом:</target>
        </trans-unit>
        <trans-unit id="db8fca00f1d4d2a5725d8baaafde57fb1f7e09a3" translate="yes" xml:space="preserve">
          <source>To convert an error term returned from one of the functions above to a readable message, use function &lt;code&gt;&lt;a href=&quot;#format_error-1&quot;&gt;format_error/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Чтобы преобразовать термин ошибки, возвращаемый одной из функций выше, в удобочитаемое сообщение, используйте функцию &lt;code&gt;&lt;a href=&quot;#format_error-1&quot;&gt;format_error/1&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="746ad6da742f525d196ec4f846fc54c5b8d6665f" translate="yes" xml:space="preserve">
          <source>To copy text to the clipboard, use &lt;code&gt;Ctrl-C&lt;/code&gt;.</source>
          <target state="translated">Чтобы скопировать текст в буфер обмена, используйте &lt;code&gt;Ctrl-C&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8f0c639143cf961891408084facf2efc28d6f4b6" translate="yes" xml:space="preserve">
          <source>To copy the selected text to the clipboard, either use &lt;code&gt;Ctrl-C&lt;/code&gt;, use the menu, or press the copy button in the toolbar.</source>
          <target state="translated">Чтобы скопировать выделенный текст в буфер обмена, используйте &lt;code&gt;Ctrl-C&lt;/code&gt; , используйте меню или нажмите кнопку копирования на панели инструментов.</target>
        </trans-unit>
        <trans-unit id="d0e2976d5ba6748c5f943edab22facd4c396be64" translate="yes" xml:space="preserve">
          <source>To counter the &quot;bad cluster&quot; problem and also ease the contention, the search will now always start by first looking at the allocators &lt;strong&gt;own&lt;/strong&gt; carriers. That is, carriers that were initially created by the allocator itself and later had been abandoned to the pool. If none of our own abandoned carrier would do, then the search continues into the pool, as before, to look for carriers created by other allocators. However, if we have at least one abandoned carrier of our own that could not satisfy the request, we can use that as entry point into the pool.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b54150ad2122f90546c148d80de8d120283f00f8" translate="yes" xml:space="preserve">
          <source>To create a list of binaries from an arbitrary iolist, use &lt;code&gt; erlang:iolist_to_iovec/1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2f36469b72d764889b8bc2c05eb18e7c2e00c94" translate="yes" xml:space="preserve">
          <source>To create a list of binaries from an arbitrary iolist, use &lt;code&gt;erlang:iolist_to_iovec/1&lt;/code&gt;.</source>
          <target state="translated">Чтобы создать список двоичных файлов из произвольного списка iolist, используйте &lt;code&gt;erlang:iolist_to_iovec/1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b64ef8fa41b5eb9b9fbad8912a240355ac0b560d" translate="yes" xml:space="preserve">
          <source>To create a port:</source>
          <target state="translated">Чтобы создать порт:</target>
        </trans-unit>
        <trans-unit id="c1b10e93b99ca718329a25a25398d8dc9f5d3821" translate="yes" xml:space="preserve">
          <source>To create the Mnesia tables, we use two records defined in &lt;code&gt;mod_auth.hrl&lt;/code&gt;, so that file must be included. &lt;code&gt;first_start/0&lt;/code&gt; creates a schema that specifies on which nodes the database is to reside. Then it starts Mnesia and creates the tables. The first argument is the name of the tables, the second argument is a list of options of how to create the table, see &lt;code&gt;mnesia(3)&lt;/code&gt;, documentation for more information. As the implementation of the &lt;code&gt;mod_auth_mnesia&lt;/code&gt; saves one row for each user, the type must be &lt;code&gt;bag&lt;/code&gt;. When the schema and the tables are created, function &lt;code&gt;mnesia:start/0&lt;/code&gt; is used to start Mnesia and waits for the tables to be loaded. Mnesia uses the directory specified as &lt;code&gt;mnesia_dir&lt;/code&gt; at startup if specified, otherwise Mnesia uses the current directory. For security reasons, ensure that the Mnesia tables are stored outside the document tree of the HTTP server. If they are placed in the directory which it protects, clients can download the tables. Only the Dets and Mnesia storage methods allow writing of dynamic user data to disk. &lt;code&gt;plain&lt;/code&gt; is a read only method.</source>
          <target state="translated">Для создания таблиц Mnesia мы используем две записи, определенные в &lt;code&gt;mod_auth.hrl&lt;/code&gt; , поэтому этот файл должен быть включен. &lt;code&gt;first_start/0&lt;/code&gt; создает схему, определяющую, на каких узлах должна располагаться база данных. Затем он запускает Mnesia и создает таблицы. Первый аргумент - это имя таблиц, второй аргумент - это список вариантов создания таблицы, дополнительную информацию см. В документации &lt;code&gt;mnesia(3)&lt;/code&gt; . Поскольку реализация &lt;code&gt;mod_auth_mnesia&lt;/code&gt; сохраняет одну строку для каждого пользователя, тип должен быть &lt;code&gt;bag&lt;/code&gt; . Когда схема и таблицы созданы, функция &lt;code&gt;mnesia:start/0&lt;/code&gt; используется для запуска Mnesia и ожидает загрузки таблиц. Mnesia использует каталог, указанный как &lt;code&gt;mnesia_dir&lt;/code&gt; при запуске, если указано, в противном случае Mnesia использует текущий каталог. По соображениям безопасности убедитесь, что таблицы Mnesia хранятся вне дерева документов HTTP-сервера. Если они помещены в каталог, который он защищает, клиенты могут загружать таблицы. Только методы хранения Dets и Mnesia позволяют записывать динамические данные пользователя на диск. &lt;code&gt;plain&lt;/code&gt; - это метод только для чтения.</target>
        </trans-unit>
        <trans-unit id="7026fff802f7dac35b82f566aac0d4c80c766528" translate="yes" xml:space="preserve">
          <source>To create zip archives, use function &lt;code&gt;&lt;a href=&quot;#zip-2&quot;&gt;zip/2&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#zip-2&quot;&gt;zip/3&lt;/a&gt;&lt;/code&gt;. They are also available as &lt;code&gt;create/2,3&lt;/code&gt;, to resemble the &lt;code&gt;&lt;a href=&quot;erl_tar&quot;&gt;erl_tar&lt;/a&gt;&lt;/code&gt; module.</source>
          <target state="translated">Для создания zip-архивов используйте функцию &lt;code&gt;&lt;a href=&quot;#zip-2&quot;&gt;zip/2&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;#zip-2&quot;&gt;zip/3&lt;/a&gt;&lt;/code&gt; . Они также доступны как &lt;code&gt;create/2,3&lt;/code&gt; , чтобы напоминать модуль &lt;code&gt;&lt;a href=&quot;erl_tar&quot;&gt;erl_tar&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ebc5fc7bc8bd769bb1bb61a99c206e8739bf277b" translate="yes" xml:space="preserve">
          <source>To decide the first state the &lt;code&gt; Module:init(Args) &lt;/code&gt; callback function is called before any &lt;code&gt;&lt;a href=&quot;#State%20Callback&quot;&gt;&lt;strong&gt;state callback&lt;/strong&gt;&lt;/a&gt;&lt;/code&gt; is called. This function behaves like a &lt;strong&gt;state callback&lt;/strong&gt; function, but gets its only argument &lt;code&gt;Args&lt;/code&gt; from the &lt;code&gt;gen_statem&lt;/code&gt;&lt;code&gt; start/3,4 &lt;/code&gt; or &lt;code&gt; start_link/3,4 &lt;/code&gt; function, and returns &lt;code&gt;{ok, State, Data}&lt;/code&gt; or &lt;code&gt;{ok, State, Data, Actions}&lt;/code&gt;. If you use the &lt;code&gt;&lt;a href=&quot;#Postponing%20Events&quot;&gt;postpone&lt;/a&gt;&lt;/code&gt; action from this function, that action is ignored, since there is no event to postpone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96ba6751b435aa130ce8000c31fb7a59eb14a8a4" translate="yes" xml:space="preserve">
          <source>To decide the first state the &lt;code&gt;Module:init(Args)&lt;/code&gt; callback function is called before any &lt;code&gt;&lt;a href=&quot;#Event%20Handler&quot;&gt;Event Handler&lt;/a&gt;&lt;/code&gt; is called. This function behaves like an event handler function, but gets its only argument &lt;code&gt;Args&lt;/code&gt; from the &lt;code&gt;gen_statem&lt;/code&gt;&lt;code&gt;start/3,4&lt;/code&gt; or &lt;code&gt;start_link/3,4&lt;/code&gt; function, and returns &lt;code&gt;{ok, State, Data}&lt;/code&gt; or &lt;code&gt;{ok, State, Data, Actions}&lt;/code&gt;. If you use the &lt;code&gt;&lt;a href=&quot;#Postponing%20Events&quot;&gt;postpone&lt;/a&gt;&lt;/code&gt; action from this function, that action is ignored, since there is no event to postpone.</source>
          <target state="translated">Чтобы определить первое состояние, перед вызовом любого &lt;code&gt;&lt;a href=&quot;#Event%20Handler&quot;&gt;Event Handler&lt;/a&gt;&lt;/code&gt; вызывается функция обратного вызова &lt;code&gt;Module:init(Args)&lt;/code&gt; . Эта функция ведет себя как функция обработчика событий, но получает свой единственный аргумент &lt;code&gt;Args&lt;/code&gt; от функции &lt;code&gt;gen_statem&lt;/code&gt; &lt;code&gt;start/3,4&lt;/code&gt; или &lt;code&gt;start_link/3,4&lt;/code&gt; и возвращает &lt;code&gt;{ok, State, Data}&lt;/code&gt; или &lt;code&gt;{ok, State, Data, Actions}&lt;/code&gt; , Если вы используете действие &lt;code&gt;&lt;a href=&quot;#Postponing%20Events&quot;&gt;postpone&lt;/a&gt;&lt;/code&gt; из этой функции, это действие игнорируется, поскольку нет события, которое нужно отложить.</target>
        </trans-unit>
        <trans-unit id="51c111740de9350080c7972bf37d34610910e708" translate="yes" xml:space="preserve">
          <source>To define a release, create a &lt;strong&gt;release resource file&lt;/strong&gt;, or in short a &lt;code&gt;.rel&lt;/code&gt; file. In the file, specify the name and version of the release, which ERTS version it is based on, and which applications it consists of:</source>
          <target state="translated">Чтобы определить выпуск, создайте &lt;strong&gt;файл ресурсов выпуска&lt;/strong&gt; или, короче, файл &lt;code&gt;.rel&lt;/code&gt; . В файле укажите название и версию выпуска, на какой версии ERTS он основан и из каких приложений он состоит:</target>
        </trans-unit>
        <trans-unit id="7dcb9b11962f5e7cb3516154fef97049f24faad8" translate="yes" xml:space="preserve">
          <source>To define an application, an &lt;strong&gt;application specification&lt;/strong&gt; is created, which is put in an &lt;strong&gt;application resource file&lt;/strong&gt;, or in short an &lt;code&gt;.app&lt;/code&gt; file:</source>
          <target state="translated">Чтобы определить приложение, создается &lt;strong&gt;спецификация приложения&lt;/strong&gt; , которая помещается в &lt;strong&gt;файл ресурсов приложения&lt;/strong&gt; или, короче, в файл &lt;code&gt;.app&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="54b3619697604e99e71233bb1079a1597fb1c5a2" translate="yes" xml:space="preserve">
          <source>To define how to upgrade/downgrade between the current version and previous versions of an application, an &lt;strong&gt;application upgrade file&lt;/strong&gt;, or in short an &lt;code&gt;.appup&lt;/code&gt; file is created. The file is to be called &lt;code&gt;Application.appup&lt;/code&gt;, where &lt;code&gt;Application&lt;/code&gt; is the application name:</source>
          <target state="translated">Чтобы определить, как обновлять / &lt;code&gt;.appup&lt;/code&gt; более раннюю версию между текущей версией и предыдущими версиями приложения, создается &lt;strong&gt;файл обновления приложения&lt;/strong&gt; или, короче, файл .appup . Файл должен называться &lt;code&gt;Application.appup&lt;/code&gt; , где &lt;code&gt;Application&lt;/code&gt; - это имя приложения:</target>
        </trans-unit>
        <trans-unit id="f1125003b8abae474fb015968f66692981cd19a0" translate="yes" xml:space="preserve">
          <source>To define how to upgrade/downgrade between the new version and previous versions of a release, a &lt;strong&gt;release upgrade file&lt;/strong&gt;, or in short &lt;code&gt;relup&lt;/code&gt; file, is to be created.</source>
          <target state="translated">Чтобы определить, как обновлять / &lt;code&gt;relup&lt;/code&gt; версию между новой версией и предыдущими версиями выпуска, должен быть создан &lt;strong&gt;файл обновления выпуска&lt;/strong&gt; или, вкратце, файл повторной установки.</target>
        </trans-unit>
        <trans-unit id="1e010624d4e818c00508b53d915d93db2cfd9d3a" translate="yes" xml:space="preserve">
          <source>To detect that the server is not the intended one, the client must additionaly perform a</source>
          <target state="translated">Чтобы обнаружить,что сервер не тот,для которого он предназначен,клиент должен дополнительно выполнить следующие действия</target>
        </trans-unit>
        <trans-unit id="29f1578f8a4341b69585b80b12a72f76a9569382" translate="yes" xml:space="preserve">
          <source>To dig deeper into the general results, or the result of a specific test case, the operator can do so by following the links in the HTML presentation and read the major or minor log files. The &quot;all_runs.html&quot; page is a good starting point. It is located in &lt;code&gt;logdir&lt;/code&gt; and contains a link to each test run, including a quick overview (with date and time, node name, number of tests, test names, and test result totals).</source>
          <target state="translated">Чтобы глубже изучить общие результаты или результат конкретного тестового примера, оператор может сделать это, перейдя по ссылкам в HTML-презентации и прочитав основные или второстепенные файлы журнала. Страница all_runs.html - хорошая отправная точка. Он находится в &lt;code&gt;logdir&lt;/code&gt; и содержит ссылку на каждый запуск теста, включая краткий обзор (с датой и временем, именем узла, количеством тестов, именами тестов и итоговыми результатами тестов).</target>
        </trans-unit>
        <trans-unit id="a47ea787070856206ef8e8c44cdc817088453a80" translate="yes" xml:space="preserve">
          <source>To disable all electric commands set the variable &lt;code&gt;erlang-electric-commands&lt;/code&gt; to the empty list. In short, place the following line in your &lt;code&gt;.emacs&lt;/code&gt;-file:</source>
          <target state="translated">Чтобы отключить все электрические команды, установите переменную &lt;code&gt;erlang-electric-commands&lt;/code&gt; в пустой список. Короче говоря, поместите следующую строку в свой &lt;code&gt;.emacs&lt;/code&gt; -файл:</target>
        </trans-unit>
        <trans-unit id="2719f4e1a729a417c71b36c21728b88e49361422" translate="yes" xml:space="preserve">
          <source>To disable certain modes, do the following:</source>
          <target state="translated">Чтобы отключить некоторые режимы,сделайте следующее:</target>
        </trans-unit>
        <trans-unit id="7d843b983a258077823d6e0bf23f5a51462fef79" translate="yes" xml:space="preserve">
          <source>To disable the automatic compilation feature, use flag &lt;code&gt;-no_auto_compile&lt;/code&gt; with &lt;code&gt;ct_run&lt;/code&gt;, or option &lt;code&gt;{auto_compile,false}&lt;/code&gt; with &lt;code&gt;ct:run_test/1&lt;/code&gt;. With automatic compilation disabled, the user is responsible for compiling the test suite modules (and any help modules) before the test run. If the modules cannot be loaded from the local file system during startup of &lt;code&gt;Common Test&lt;/code&gt;, the user must preload the modules before starting the test. &lt;code&gt;Common Test&lt;/code&gt; only verifies that the specified test suites exist (that is, that they are, or can be, loaded). This is useful, for example, if the test suites are transferred and loaded as binaries through RPC from a remote node.</source>
          <target state="translated">Чтобы отключить функцию автоматической компиляции, используйте флаг &lt;code&gt;-no_auto_compile&lt;/code&gt; с &lt;code&gt;ct_run&lt;/code&gt; или опцию &lt;code&gt;{auto_compile,false}&lt;/code&gt; с &lt;code&gt;ct:run_test/1&lt;/code&gt; . Если автоматическая компиляция отключена, пользователь несет ответственность за компиляцию модулей набора тестов (и любых модулей справки) перед запуском теста. Если модули не могут быть загружены из локальной файловой системы во время запуска &lt;code&gt;Common Test&lt;/code&gt; , пользователь должен предварительно загрузить модули перед запуском теста. &lt;code&gt;Common Test&lt;/code&gt; только проверяет наличие указанных наборов тестов (то есть, что они загружены или могут быть загружены). Это полезно, например, если наборы тестов передаются и загружаются как двоичные файлы через RPC с удаленного узла.</target>
        </trans-unit>
        <trans-unit id="ceb4119cc35a0a33e9fed4f8110e9358a175961e" translate="yes" xml:space="preserve">
          <source>To disconnect from the shell without exiting the Erlang system, type &lt;code&gt;Ctrl-D&lt;/code&gt;.</source>
          <target state="translated">Чтобы отключиться от оболочки без выхода из системы Erlang, введите &lt;code&gt;Ctrl-D&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b548ad5d8837c627142ce75e81cde50b52ba7141" translate="yes" xml:space="preserve">
          <source>To distinguish trace logs produced with this tool from other logs, option &lt;code&gt;file&lt;/code&gt; is used in &lt;code&gt;&lt;a href=&quot;ttb#tracer-2&quot;&gt;tracer/2&lt;/a&gt;&lt;/code&gt;. The logs are therefore fetched to a directory named &lt;code&gt;ttb_upload_debug_log-YYYYMMDD-HHMMSS&lt;/code&gt;</source>
          <target state="translated">Чтобы отличить журналы трассировки, созданные с помощью этого инструмента, от других журналов, в &lt;code&gt;&lt;a href=&quot;ttb#tracer-2&quot;&gt;tracer/2&lt;/a&gt;&lt;/code&gt; используется &lt;code&gt;file&lt;/code&gt; параметров . Поэтому журналы &lt;code&gt;ttb_upload_debug_log-YYYYMMDD-HHMMSS&lt;/code&gt; в каталог с именем ttb_upload_debug_log-YYYYMMDD-HHMMSS</target>
        </trans-unit>
        <trans-unit id="896795105dbda22e2604c15284900f9f7aafa1c2" translate="yes" xml:space="preserve">
          <source>To do the first search among own carriers, every allocator instance has a &lt;code&gt;pooled_tree&lt;/code&gt; of carriers. This tree is only accessed by the allocator itself and can only contain its own carriers. When a carrier is abandoned and put in the pool, it is also inserted into &lt;code&gt;pooled_tree&lt;/code&gt;. This is either done direct, if the carrier was already employed by its owner, or by first passing it back to the owner via the delayed dealloc queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e40468ed8befabe466118a08bf6fc28c0f6c6eb" translate="yes" xml:space="preserve">
          <source>To do this, create a &lt;code&gt;&lt;a href=&quot;#res_file&quot;&gt;release resource file&lt;/a&gt;&lt;/code&gt; that defines which applications are included in the release.</source>
          <target state="translated">Для этого создайте &lt;code&gt;&lt;a href=&quot;#res_file&quot;&gt;release resource file&lt;/a&gt;&lt;/code&gt; который определяет, какие приложения включены в выпуск.</target>
        </trans-unit>
        <trans-unit id="71c169e0b7cdb28847a1d261315129b8416e6027" translate="yes" xml:space="preserve">
          <source>To do this, create an &lt;code&gt;&lt;a href=&quot;#callback_module&quot;&gt;application callback module&lt;/a&gt;&lt;/code&gt;, and describe how the application is to be started and stopped.</source>
          <target state="translated">Для этого создайте &lt;code&gt;&lt;a href=&quot;#callback_module&quot;&gt;application callback module&lt;/a&gt;&lt;/code&gt; и опишите, как приложение должно запускаться и останавливаться.</target>
        </trans-unit>
        <trans-unit id="24f741a20f0106dade011b163f1322e4510ccc13" translate="yes" xml:space="preserve">
          <source>To document function interfaces</source>
          <target state="translated">Для документирования функциональных интерфейсов</target>
        </trans-unit>
        <trans-unit id="4e2effe3d108d7692e70e0242432ef9323088c3f" translate="yes" xml:space="preserve">
          <source>To downgrade from &lt;code&gt;Vsn&lt;/code&gt; to &lt;code&gt;FromVsn&lt;/code&gt;, &lt;code&gt;install_release&lt;/code&gt; must be called again:</source>
          <target state="translated">Чтобы &lt;code&gt;Vsn&lt;/code&gt; с Vsn на &lt;code&gt;FromVsn&lt;/code&gt; , необходимо снова вызвать &lt;code&gt;install_release&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="66dd305cb60ccb1d581b1532183a42d9550cf7c0" translate="yes" xml:space="preserve">
          <source>To dynamically check availability, check that the name &lt;code&gt;cmac&lt;/code&gt; is present in the list returned by &lt;code&gt;&lt;a href=&quot;crypto#supports-1&quot;&gt;crypto:supports(macs)&lt;/a&gt;&lt;/code&gt;. Also check that the name in the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6aee92d122edd91f99a63916628811ec1c754e0" translate="yes" xml:space="preserve">
          <source>To dynamically check availability, check that the name &lt;code&gt;hmac&lt;/code&gt; is present in the list returned by &lt;code&gt;&lt;a href=&quot;crypto#supports-1&quot;&gt;crypto:supports(macs)&lt;/a&gt;&lt;/code&gt; and that the hash name is present in the list returned by &lt;code&gt;&lt;a href=&quot;crypto#supports-1&quot;&gt;crypto:supports(hashs)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96b27582a0af681e39e67a0fb66383f1af501a73" translate="yes" xml:space="preserve">
          <source>To dynamically check availability, check that the name &lt;code&gt;poly1305&lt;/code&gt; is present in the list returned by &lt;code&gt;&lt;a href=&quot;crypto#supports-1&quot;&gt;crypto:supports(macs)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bca713a31b268396f2f08d09009aa103834e0eb" translate="yes" xml:space="preserve">
          <source>To dynamically check availability, check that the name in the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bd074941949eff62a2f10ace8d8745188c15d3a" translate="yes" xml:space="preserve">
          <source>To dynamically check availability, check that the wanted name in the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c857b1910cd745feb809b3e36bb979959ad34032" translate="yes" xml:space="preserve">
          <source>To each module using records, a pseudo function is added during compilation to obtain information about records:</source>
          <target state="translated">К каждому модулю,использующему записи,при компиляции добавляется псевдофункция для получения информации о записях:</target>
        </trans-unit>
        <trans-unit id="aa7093d0b40db64d8d5dbb29fff9e15755ac8d7c" translate="yes" xml:space="preserve">
          <source>To effectively perform a batch of similar queries, you can use parameterized queries. This means that you in your SQL query string will mark the places that usually would contain values with question marks and then provide lists of values for each parameter. For instance you can use this to insert multiple rows into the &lt;code&gt;EMPLOYEE&lt;/code&gt; table while executing only a single SQL statement, for example code see &lt;code&gt;&lt;a href=&quot;getting_started#param_query&quot;&gt;&quot;Using the Erlang API&quot;&lt;/a&gt;&lt;/code&gt; section in the &quot;Getting Started&quot; chapter.</source>
          <target state="translated">Чтобы эффективно выполнять пакет похожих запросов, вы можете использовать параметризованные запросы. Это означает, что вы в строке запроса SQL отметите места, которые обычно содержат значения, вопросительными знаками, а затем предоставите списки значений для каждого параметра. Например, вы можете использовать это для вставки нескольких строк в таблицу &lt;code&gt;EMPLOYEE&lt;/code&gt; при выполнении только одного оператора SQL, например, код см. В разделе &lt;code&gt;&lt;a href=&quot;getting_started#param_query&quot;&gt;&quot;Using the Erlang API&quot;&lt;/a&gt;&lt;/code&gt; главе &amp;laquo;Начало работы&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="4b87466d719f55a7d0bc6167a3744c10376e2896" translate="yes" xml:space="preserve">
          <source>To enable inlining of list functions, use option &lt;code&gt;inline_list_funcs&lt;/code&gt;.</source>
          <target state="translated">Чтобы включить встраивание функций списка, используйте опцию &lt;code&gt;inline_list_funcs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="51f30cb208852b09d381f6f12d3f9662837e7b58" translate="yes" xml:space="preserve">
          <source>To enable inlining, either use the option &lt;code&gt;inline&lt;/code&gt; to let the compiler decide which functions to inline, or &lt;code&gt;{inline,[{Name,Arity},...]}&lt;/code&gt; to have the compiler inline all calls to the given functions. If the option is given inside a &lt;code&gt;compile&lt;/code&gt; directive in an Erlang module, &lt;code&gt;{Name,Arity}&lt;/code&gt; can be written as &lt;code&gt;Name/Arity&lt;/code&gt;.</source>
          <target state="translated">Чтобы включить встраивание, либо используйте параметр &lt;code&gt;inline&lt;/code&gt; , чтобы позволить компилятору решать, какие функции встраивать, либо &lt;code&gt;{inline,[{Name,Arity},...]}&lt;/code&gt; , чтобы компилятор встраивал все вызовы данных функций. Если параметр указан в директиве &lt;code&gt;compile&lt;/code&gt; в модуле Erlang, &lt;code&gt;{Name,Arity}&lt;/code&gt; можно записать как &lt;code&gt;Name/Arity&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="85f19bd3dcfaf9ef3d9cd6caa0e986c9a4690183" translate="yes" xml:space="preserve">
          <source>To enable or disable &lt;code&gt;&lt;a href=&quot;ct_hooks_chapter#builtin_cths&quot;&gt;Built-in Common Test Hooks&lt;/a&gt;&lt;/code&gt;. Default is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Включение или отключение &lt;code&gt;&lt;a href=&quot;ct_hooks_chapter#builtin_cths&quot;&gt;Built-in Common Test Hooks&lt;/a&gt;&lt;/code&gt; . По умолчанию &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="82cdfffdcb7bb12d82a554ed4fb4604dfb3bff2f" translate="yes" xml:space="preserve">
          <source>To enable or disable time correction, pass command-line argument &lt;code&gt;&lt;a href=&quot;erl#+c&quot;&gt;+c [true|false]&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;&lt;a href=&quot;erl&quot;&gt;erl(1)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Чтобы включить или отключить коррекцию времени, передайте аргумент командной строки &lt;code&gt;&lt;a href=&quot;erl#+c&quot;&gt;+c [true|false]&lt;/a&gt;&lt;/code&gt; в &lt;code&gt;&lt;a href=&quot;erl&quot;&gt;erl(1)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="708713ed825ecbbe1d0ddcd36ee2857e998c3c1b" translate="yes" xml:space="preserve">
          <source>To enable the full power of Merl, your module needs to include the Merl header file:</source>
          <target state="translated">Чтобы включить всю мощь Merl,ваш модуль должен включать заголовочный файл Merl:</target>
        </trans-unit>
        <trans-unit id="8d53019e25d31ae87446a8faff92ab534fbdf049" translate="yes" xml:space="preserve">
          <source>To encode a list, without knowing the arity in advance:</source>
          <target state="translated">Чтобы кодировать список,не зная заранее о подметальности:</target>
        </trans-unit>
        <trans-unit id="6cd4ebf865b6fcb86e3b3c3d86118b3cbc2de974" translate="yes" xml:space="preserve">
          <source>To ensure that &lt;code&gt;Common Test&lt;/code&gt; does not start executing tests, or closes its log files and shuts down, before the external application is ready for it, &lt;code&gt;Common Test&lt;/code&gt; can be synchronized with the application. During startup and shutdown, &lt;code&gt;Common Test&lt;/code&gt; can be suspended, simply by having a CTH evaluate a &lt;code&gt;receive&lt;/code&gt; expression in the init- or terminate function. The macros &lt;code&gt;?CT_HOOK_INIT_PROCESS&lt;/code&gt; (the process executing the hook init function) and &lt;code&gt;?CT_HOOK_TERMINATE_PROCESS&lt;/code&gt; (the process executing the hook terminate function) each specifies the name of the correct &lt;code&gt;Common Test&lt;/code&gt; process to send a message to. This is done to return from the &lt;code&gt;receive&lt;/code&gt;. These macros are defined in &lt;code&gt;ct.hrl&lt;/code&gt;.</source>
          <target state="translated">Чтобы гарантировать, что &lt;code&gt;Common Test&lt;/code&gt; не начнет выполнение тестов или не закроет свои файлы журналов и не завершит свою работу до того, как внешнее приложение будет готово для этого, &lt;code&gt;Common Test&lt;/code&gt; можно синхронизировать с приложением. Во время запуска и выключения &lt;code&gt;Common Test&lt;/code&gt; можно приостановить, просто попросив CTH оценить выражение &lt;code&gt;receive&lt;/code&gt; в функции init или terminate. Макросы &lt;code&gt;?CT_HOOK_INIT_PROCESS&lt;/code&gt; (процесс выполнения функции инициализации крючков) и &lt;code&gt;?CT_HOOK_TERMINATE_PROCESS&lt;/code&gt; (процесс выполнения крюка прекращает функцию) каждый определяет имя правильного &lt;code&gt;Common Test&lt;/code&gt; процесса , чтобы отправить сообщение. Это сделано для возврата из &lt;code&gt;receive&lt;/code&gt; , Эти макросы определены в &lt;code&gt;ct.hrl&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d6a3ca4567317dc34953b8a7c1cc3b757bbc4816" translate="yes" xml:space="preserve">
          <source>To ensure that a driver instance always uses the same thread, the following call can be used:</source>
          <target state="translated">Чтобы гарантировать,что экземпляр драйвера всегда использует один и тот же поток,можно воспользоваться следующим вызовом:</target>
        </trans-unit>
        <trans-unit id="a02dfbcc12d9a0c310d33ec7050492a8ba5fa268" translate="yes" xml:space="preserve">
          <source>To ensure that printouts to &lt;code&gt;stdout&lt;/code&gt; (or printouts made with &lt;code&gt;&lt;a href=&quot;ct#log-2&quot;&gt;ct:log/2,3&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;ct#pal-2&quot;&gt;ct:pal,2,3&lt;/a&gt;&lt;/code&gt;) get written to the test case log file, and not to the &lt;code&gt;Common Test&lt;/code&gt; framework log, you can synchronize with the &lt;code&gt;Common Test&lt;/code&gt; server by matching on evvents &lt;code&gt;tc_start&lt;/code&gt; and &lt;code&gt;tc_done&lt;/code&gt;. In the period between these events, all I/O is directed to the test case log file. These events are sent synchronously to avoid potential timing problems (for example, that the test case log file is closed just before an I/O message from an external process gets through). Knowing this, you need to be careful that your &lt;code&gt;handle_event/2&lt;/code&gt; callback function does not stall the test execution, possibly causing unexpected behavior as a result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8b277a4b4779423015664e7a3f401ea54aeecd5" translate="yes" xml:space="preserve">
          <source>To ensure that printouts to &lt;code&gt;stdout&lt;/code&gt; (or printouts made with &lt;code&gt;&lt;a href=&quot;ct#log-2&quot;&gt;ct:log/2,3&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;ct:pal,2,3&lt;/code&gt;) get written to the test case log file, and not to the &lt;code&gt;Common Test&lt;/code&gt; framework log, you can synchronize with the &lt;code&gt;Common Test&lt;/code&gt; server by matching on evvents &lt;code&gt;tc_start&lt;/code&gt; and &lt;code&gt;tc_done&lt;/code&gt;. In the period between these events, all I/O is directed to the test case log file. These events are sent synchronously to avoid potential timing problems (for example, that the test case log file is closed just before an I/O message from an external process gets through). Knowing this, you need to be careful that your &lt;code&gt;handle_event/2&lt;/code&gt; callback function does not stall the test execution, possibly causing unexpected behavior as a result.</source>
          <target state="translated">Чтобы гарантировать, что распечатки в стандартный &lt;code&gt;stdout&lt;/code&gt; (или распечатки, сделанные с помощью &lt;code&gt;&lt;a href=&quot;ct#log-2&quot;&gt;ct:log/2,3&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;ct:pal,2,3&lt;/code&gt; ), записываются в файл журнала тестового примера, а не в журнал платформы &lt;code&gt;Common Test&lt;/code&gt; , вы можете выполнить синхронизацию с &lt;code&gt;Common Test&lt;/code&gt; сервер путем сопоставления по evvents &lt;code&gt;tc_start&lt;/code&gt; и &lt;code&gt;tc_done&lt;/code&gt; . В период между этими событиями весь ввод-вывод направляется в файл журнала тестового случая. Эти события отправляются синхронно, чтобы избежать потенциальных проблем с синхронизацией (например, что файл журнала тестового примера закрывается непосредственно перед тем, как сообщение ввода-вывода от внешнего процесса пройдет). Зная это, вы должны быть осторожны, чтобы ваш &lt;code&gt;handle_event/2&lt;/code&gt; функция обратного вызова не останавливает выполнение теста, что может вызвать неожиданное поведение в результате.</target>
        </trans-unit>
        <trans-unit id="a63e4ff906295f7807af4b654281729a99f4d599" translate="yes" xml:space="preserve">
          <source>To execute group &lt;code&gt;tests1&lt;/code&gt; twice with different properties for &lt;code&gt;tests2&lt;/code&gt; each time:</source>
          <target state="translated">Чтобы выполнить group &lt;code&gt;tests1&lt;/code&gt; дважды с разными свойствами для &lt;code&gt;tests2&lt;/code&gt; каждый раз:</target>
        </trans-unit>
        <trans-unit id="7239843e8d90d77d86be2ae7b38276b2e33faca1" translate="yes" xml:space="preserve">
          <source>To execute the test cases in the recent test suite, type the following on the UNIX/Linux command line (assuming that the suite module is in the current working directory):</source>
          <target state="translated">Для выполнения тестовых сценариев в последнем наборе тестов введите в командной строке UNIX/Linux следующее (предполагая,что модуль набора находится в текущей рабочей директории):</target>
        </trans-unit>
        <trans-unit id="15b464ff8a64913edd497cc9c55da6f1268e3b00" translate="yes" xml:space="preserve">
          <source>To explain how it works, let us examine the following code line by line:</source>
          <target state="translated">Чтобы объяснить,как это работает,рассмотрим следующий код построчно:</target>
        </trans-unit>
        <trans-unit id="6ace97c5b62d1ba123d6323684c350a22b583d3a" translate="yes" xml:space="preserve">
          <source>To extract all files from a tar file, use function &lt;code&gt;&lt;a href=&quot;#extract-1&quot;&gt;extract/1&lt;/a&gt;&lt;/code&gt;. To extract only some files or to be able to specify some more options, use function &lt;code&gt;&lt;a href=&quot;#extract-2&quot;&gt;extract/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Чтобы извлечь все файлы из tar-файла, используйте функцию &lt;code&gt;&lt;a href=&quot;#extract-1&quot;&gt;extract/1&lt;/a&gt;&lt;/code&gt; . Чтобы извлечь только некоторые файлы или указать дополнительные параметры, используйте функцию &lt;code&gt;&lt;a href=&quot;#extract-2&quot;&gt;extract/2&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0d79465290c25ae2d243af5890aece9f3a5c6794" translate="yes" xml:space="preserve">
          <source>To extract files from a zip archive, use function &lt;code&gt;&lt;a href=&quot;#unzip-1&quot;&gt;unzip/1&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#unzip-2&quot;&gt;unzip/2&lt;/a&gt;&lt;/code&gt;. They are also available as &lt;code&gt;extract/1,2&lt;/code&gt;, to resemble the &lt;code&gt;&lt;a href=&quot;erl_tar&quot;&gt;erl_tar&lt;/a&gt;&lt;/code&gt; module.</source>
          <target state="translated">Чтобы извлечь файлы из zip-архива, используйте функцию &lt;code&gt;&lt;a href=&quot;#unzip-1&quot;&gt;unzip/1&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;#unzip-2&quot;&gt;unzip/2&lt;/a&gt;&lt;/code&gt; . Они также доступны как &lt;code&gt;extract/1,2&lt;/code&gt; , чтобы напоминать модуль &lt;code&gt;&lt;a href=&quot;erl_tar&quot;&gt;erl_tar&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="49b523abf1ecfbea37ac71cc8ad901ada87596e3" translate="yes" xml:space="preserve">
          <source>To facilitate addition or removal of algorithms the option &lt;code&gt;modify_algorithms&lt;/code&gt; is available. See the &lt;code&gt;&lt;a href=&quot;ssh#type-modify_algorithms_common_option&quot;&gt;Reference Manual&lt;/a&gt;&lt;/code&gt; for details.</source>
          <target state="translated">Для облегчения добавления или удаления алгоритмов доступна опция &lt;code&gt;modify_algorithms&lt;/code&gt; . Подробности см. В &lt;code&gt;&lt;a href=&quot;ssh#type-modify_algorithms_common_option&quot;&gt;Reference Manual&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="318d261f2e9e44898ab106149f1818df3611a4d0" translate="yes" xml:space="preserve">
          <source>To facilitate for instance counting of failed tries, the &lt;code&gt;State&lt;/code&gt; variable could be used. This state is per connection only. The first time the pwdfun is called for a connection, the &lt;code&gt;State&lt;/code&gt; variable has the value &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">Чтобы облегчить, например, подсчет неудачных попыток, можно использовать переменную &lt;code&gt;State&lt;/code&gt; . Это состояние только для каждого соединения. При первом вызове pwdfun для подключения переменная &lt;code&gt;State&lt;/code&gt; имеет значение &lt;code&gt;undefined&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fb30040c24cb4398d4f306c6f75be49b3309b50e" translate="yes" xml:space="preserve">
          <source>To facilitate incremental MIB implementation, the tool can generate a prototype implementation for a whole MIB, or parts thereof. This allows different MIBs and management applications to be developed at the same time.</source>
          <target state="translated">Для облегчения постепенной реализации MIB,инструмент может генерировать прототип реализации для всего MIB,или его частей.Это позволяет одновременно разрабатывать различные MIB и приложения для управления.</target>
        </trans-unit>
        <trans-unit id="e3b821acb43789b1950f11a1cb4212f690e5c52d" translate="yes" xml:space="preserve">
          <source>To fetch the EEP-48 documentation for a module you can use &lt;code&gt;&lt;a href=&quot;code#get_doc-1&quot;&gt;code:get_doc/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2bbbdeeda7bd5404449757f8d9770ca2ef7aaa9" translate="yes" xml:space="preserve">
          <source>To filter only by dates, specify the empty list as the &lt;code&gt;Filters&lt;/code&gt; parameter.</source>
          <target state="translated">Чтобы фильтровать только по датам, укажите пустой список в качестве параметра &lt;code&gt;Filters&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="630e50a14a964d68d3d5576b2cd371a11e3b187e" translate="yes" xml:space="preserve">
          <source>To find &lt;code&gt;.erl&lt;/code&gt; or &lt;code&gt;.hrl&lt;/code&gt; in all applications &lt;code&gt;src&lt;/code&gt; directories, use either of the following lines:</source>
          <target state="translated">Чтобы найти &lt;code&gt;.erl&lt;/code&gt; или &lt;code&gt;.hrl&lt;/code&gt; во всех каталогах &lt;code&gt;src&lt;/code&gt; приложений , используйте любую из следующих строк:</target>
        </trans-unit>
        <trans-unit id="a6396773c2bde8a4d52d39cd61a041b4f1f183b7" translate="yes" xml:space="preserve">
          <source>To find all &lt;code&gt;.beam&lt;/code&gt; files in all applications, use the following line:</source>
          <target state="translated">Чтобы найти все файлы &lt;code&gt;.beam&lt;/code&gt; во всех приложениях, используйте следующую строку:</target>
        </trans-unit>
        <trans-unit id="20cf9c172afcf3da74dfc71cb0f3fcae5974105f" translate="yes" xml:space="preserve">
          <source>To find all &lt;code&gt;.erl&lt;/code&gt; or &lt;code&gt;.hrl&lt;/code&gt; files in any subdirectory:</source>
          <target state="translated">Чтобы найти все &lt;code&gt;.erl&lt;/code&gt; или &lt;code&gt;.hrl&lt;/code&gt; в любом подкаталоге:</target>
        </trans-unit>
        <trans-unit id="7ed6cec65dd2913192c7cb022d1a0950d0fa1dc6" translate="yes" xml:space="preserve">
          <source>To find all &lt;code&gt;.erl&lt;/code&gt; or &lt;code&gt;.hrl&lt;/code&gt; files in either &lt;code&gt;src&lt;/code&gt; or &lt;code&gt;include&lt;/code&gt; directories:</source>
          <target state="translated">Чтобы найти все &lt;code&gt;.erl&lt;/code&gt; или &lt;code&gt;.hrl&lt;/code&gt; в каталогах &lt;code&gt;src&lt;/code&gt; или &lt;code&gt;include&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="fccdf7c91c9fff2872abc1dbafd75d06a060282b" translate="yes" xml:space="preserve">
          <source>To find all &lt;code&gt;.hrl&lt;/code&gt; files in &lt;code&gt;src&lt;/code&gt; or &lt;code&gt;include&lt;/code&gt; directories:</source>
          <target state="translated">Чтобы найти все файлы &lt;code&gt;.hrl&lt;/code&gt; в каталогах &lt;code&gt;src&lt;/code&gt; или &lt;code&gt;include&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="8e72309f663e0cdb8ebe00ece9160cd743a20ac1" translate="yes" xml:space="preserve">
          <source>To find out which data types will be returned for the columns in a table use the function &lt;code&gt;&lt;a href=&quot;odbc#describe_table&quot;&gt;describe_table/[2,3]&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">Чтобы узнать, какие типы данных будут возвращены для столбцов в таблице, используйте функцию &lt;code&gt;&lt;a href=&quot;odbc#describe_table&quot;&gt;describe_table/[2,3]&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="df081f6643e87b8a4d20937b6cf7036fe456bdf3" translate="yes" xml:space="preserve">
          <source>To find preceding keys in the table, use &lt;code&gt;&lt;a href=&quot;#prev-2&quot;&gt;prev/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Чтобы найти предыдущие ключи в таблице, используйте &lt;code&gt;&lt;a href=&quot;#prev-2&quot;&gt;prev/2&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bab05c393dca1da866e4258e15bc30ee1a82d0d1" translate="yes" xml:space="preserve">
          <source>To find subsequent keys in the table, use &lt;code&gt;&lt;a href=&quot;#next-2&quot;&gt;next/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Чтобы найти последующие ключи в таблице, используйте &lt;code&gt;&lt;a href=&quot;#next-2&quot;&gt;next/2&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5305b16b9a4a45c3c66348bdacc0a4e5b3a4971f" translate="yes" xml:space="preserve">
          <source>To find the first key in the table, use &lt;code&gt;&lt;a href=&quot;#first-1&quot;&gt;first/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Для того, чтобы найти первый ключ в таблице, используйте &lt;code&gt;&lt;a href=&quot;#first-1&quot;&gt;first/1&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="42cc32e7cca81e536a322edfe74f1ef1ef453ef3" translate="yes" xml:space="preserve">
          <source>To find the last key in an &lt;code&gt;ordered_set&lt;/code&gt; table, use &lt;code&gt;&lt;a href=&quot;#last-1&quot;&gt;last/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f84576968a9f5a5747d5c908246715868508fa22" translate="yes" xml:space="preserve">
          <source>To find the last key in the table, use &lt;code&gt;&lt;a href=&quot;#last-1&quot;&gt;last/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Чтобы найти последний ключ в таблице, используйте &lt;code&gt;&lt;a href=&quot;#last-1&quot;&gt;last/1&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f1a928f27f842a3eeb3e94898ada404294f44440" translate="yes" xml:space="preserve">
          <source>To find the smallest free segment that will satisfy a carrier allocation (best fit), the free segments are organized in a tree sorted by size (&lt;code&gt;stree&lt;/code&gt;). We search in this tree at allocation. If no free segment of sufficient size was found, the area (&lt;code&gt;sa&lt;/code&gt; or &lt;code&gt;sua&lt;/code&gt;) is instead expanded. If two or more free segments with equal size exist, the one at lowest address is chosen for &lt;code&gt;sa&lt;/code&gt; and highest address for &lt;code&gt;sua&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b08cebc24b1775a65769e106895c5039d3db4448" translate="yes" xml:space="preserve">
          <source>To fold a function over all files in a zip archive, use function &lt;code&gt;&lt;a href=&quot;#foldl-3&quot;&gt;foldl/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Чтобы свернуть функцию по всем файлам в zip-архиве, используйте функцию &lt;code&gt;&lt;a href=&quot;#foldl-3&quot;&gt;foldl/3&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3107d752335f18f59b4878dac8c20e1cc44001a3" translate="yes" xml:space="preserve">
          <source>To force Unicode filename translation mode on systems where this is not the default was considered experimental in Erlang/OTP R14B01. This was because the initial implementation did not ignore wrongly encoded filenames, so that raw filenames could spread unexpectedly throughout the system. As from Erlang/OTP R16B, the wrongly encoded filenames are only retrieved by special functions (such as &lt;code&gt;file:list_dir_all/1&lt;/code&gt;). Since the impact on existing code is therefore much lower it is now supported. Unicode filename translation is expected to be default in future releases.</source>
          <target state="translated">Принудительный режим перевода имени файла в Unicode в системах, где это не является значением по умолчанию, в Erlang / OTP R14B01 считался экспериментальным. Это было связано с тем, что первоначальная реализация не игнорировала неправильно закодированные имена файлов, так что необработанные имена файлов могли неожиданно распространиться по системе. Начиная с Erlang / OTP R16B, неправильно закодированные имена файлов извлекаются только специальными функциями (такими как &lt;code&gt;file:list_dir_all/1&lt;/code&gt; ). Поскольку влияние на существующий код намного меньше, теперь он поддерживается. Ожидается, что перевод имени файла в Unicode будет по умолчанию в будущих выпусках.</target>
        </trans-unit>
        <trans-unit id="286ba4fce2df7e992d24f0fa54be1d66081e5721" translate="yes" xml:space="preserve">
          <source>To format the printout according to a user-specific HTML Style Sheet (CSS).</source>
          <target state="translated">Форматирование распечатки в соответствии с пользовательским HTML листком стиля (CSS).</target>
        </trans-unit>
        <trans-unit id="d829ca082ad3db2ea55b112c3bcb9aa6980d21fb" translate="yes" xml:space="preserve">
          <source>To forsee the effect of an option there is an experimental function &lt;code&gt;ssh:chk_algos_opts(Opts)&lt;/code&gt;. It mangles the options &lt;code&gt;preferred_algorithms&lt;/code&gt; and &lt;code&gt;modify_algorithms&lt;/code&gt; in the same way as &lt;code&gt;ssh:dameon&lt;/code&gt;, &lt;code&gt;ssh:connect&lt;/code&gt; and their friends does.</source>
          <target state="translated">Чтобы увидеть эффект от опции, есть экспериментальная функция &lt;code&gt;ssh:chk_algos_opts(Opts)&lt;/code&gt; . Он искалечил на варианты &lt;code&gt;preferred_algorithms&lt;/code&gt; и &lt;code&gt;modify_algorithms&lt;/code&gt; таким же образом , как &lt;code&gt;ssh:dameon&lt;/code&gt; , &lt;code&gt;ssh:connect&lt;/code&gt; и их друзей делает.</target>
        </trans-unit>
        <trans-unit id="6dec9bf90ad555856d14e7f8a0bcc0b6c2749f95" translate="yes" xml:space="preserve">
          <source>To fully understand how to configure the algorithms, it is essential to have a basic understanding of the SSH protocol and how OTP SSH app handles the corresponding items</source>
          <target state="translated">Чтобы полностью понять,как настраивать алгоритмы,необходимо иметь базовое понимание протокола SSH и того,как приложение OTP SSH обрабатывает соответствующие элементы</target>
        </trans-unit>
        <trans-unit id="105f7930b5d0bd6dbe4b596f6e5e1aa3c7bab464" translate="yes" xml:space="preserve">
          <source>To gain performance by using the SMP emulator, your application &lt;strong&gt;must have more than one runnable Erlang process&lt;/strong&gt; most of the time. Otherwise, the Erlang emulator can still only run one Erlang process at the time, but you must still pay the overhead for locking. Although Erlang/OTP tries to reduce the locking overhead as much as possible, it will never become exactly zero.</source>
          <target state="translated">Чтобы повысить производительность за счет использования эмулятора SMP, ваше приложение большую часть времени &lt;strong&gt;должно иметь более одного работающего процесса Erlang&lt;/strong&gt; . В противном случае эмулятор Erlang может одновременно запускать только один процесс Erlang, но вам все равно придется оплачивать накладные расходы на блокировку. Хотя Erlang / OTP пытается максимально снизить накладные расходы на блокировку, они никогда не станут точно равными нулю.</target>
        </trans-unit>
        <trans-unit id="a634d1c3b542e6ded32efa3015b3577d54cdb1be" translate="yes" xml:space="preserve">
          <source>To get a long period the Xoroshiro928 generator from the &lt;code&gt;rand&lt;/code&gt; module is used as a counter (with period 2^928 - 1) and the generator states are scrambled through AES to create 58-bit pseudo random values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cbd28c322c2b7823640cb5d04b4000794237448" translate="yes" xml:space="preserve">
          <source>To get an overview of the concepts and operation of &lt;code&gt;gen_statem&lt;/code&gt;, do read the &lt;code&gt;gen_statem&amp;nbsp;Behaviour&lt;/code&gt; in &lt;code&gt;OTP Design Principles&lt;/code&gt; which frequently links back to this reference manual to avoid containing detailed facts that may rot by age.</source>
          <target state="translated">Чтобы получить обзор концепций и работы &lt;code&gt;gen_statem&lt;/code&gt; , прочтите &amp;laquo; &lt;code&gt;gen_statem&amp;nbsp;Behaviour&lt;/code&gt; в &lt;code&gt;OTP Design Principles&lt;/code&gt; которое часто ссылается на это справочное руководство, чтобы не содержать подробных фактов, которые могут ухудшиться с возрастом.</target>
        </trans-unit>
        <trans-unit id="01d79833ca3942345f121a64dcc3d55c1d0c6500" translate="yes" xml:space="preserve">
          <source>To get information about a PLT, use the following option:</source>
          <target state="translated">Для получения информации о PLT используйте следующую опцию:</target>
        </trans-unit>
        <trans-unit id="c0e64c3c0e0f616c357b7610945241b260af495d" translate="yes" xml:space="preserve">
          <source>To get information about the Erlang runtime system's source of OS monotonic time, call &lt;code&gt;&lt;a href=&quot;erlang#system_info_os_monotonic_time_source&quot;&gt; erlang:system_info(os_monotonic_time_source)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1d5a6ae5a2a64c460f8242067e0ee912a4a4259" translate="yes" xml:space="preserve">
          <source>To get information about the Erlang runtime system's source of OS monotonic time, call &lt;code&gt;&lt;a href=&quot;erlang#system_info_os_monotonic_time_source&quot;&gt;erlang:system_info(os_monotonic_time_source)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Чтобы получить информацию об источнике монотонного времени ОС в системе времени выполнения Erlang, вызовите &lt;code&gt;&lt;a href=&quot;erlang#system_info_os_monotonic_time_source&quot;&gt;erlang:system_info(os_monotonic_time_source)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9d18259669e7618d7a319f9a564a8e6fb8e56985" translate="yes" xml:space="preserve">
          <source>To get information about the Erlang runtime system's source of OS system time, call &lt;code&gt;&lt;a href=&quot;erlang#system_info_os_system_time_source&quot;&gt; erlang:system_info(os_system_time_source)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1abf6bacf41753f2d4e4f3e187da0b6ca761589" translate="yes" xml:space="preserve">
          <source>To get information about the Erlang runtime system's source of OS system time, call &lt;code&gt;&lt;a href=&quot;erlang#system_info_os_system_time_source&quot;&gt;erlang:system_info(os_system_time_source)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Чтобы получить информацию об источнике системного времени ОС в &lt;code&gt;&lt;a href=&quot;erlang#system_info_os_system_time_source&quot;&gt;erlang:system_info(os_system_time_source)&lt;/a&gt;&lt;/code&gt; системе Erlang, вызовите erlang: system_info (os_system_time_source) .</target>
        </trans-unit>
        <trans-unit id="b209da3c80686caad1fbe93f4b143a75dbb826a1" translate="yes" xml:space="preserve">
          <source>To get log events on the same format as produced by &lt;code&gt;error_logger_tty_h&lt;/code&gt; and &lt;code&gt;error_logger_file_h&lt;/code&gt;, use the default formatter, &lt;code&gt;logger_formatter&lt;/code&gt;, with configuration parameter &lt;code&gt;legacy_header&lt;/code&gt; set to &lt;code&gt;true&lt;/code&gt;. This is the default configuration of the &lt;code&gt;default&lt;/code&gt; handler started by Kernel.</source>
          <target state="translated">Чтобы получать события журнала в том же формате, что и &lt;code&gt;error_logger_tty_h&lt;/code&gt; и &lt;code&gt;error_logger_file_h&lt;/code&gt; , используйте &lt;code&gt;logger_formatter&lt;/code&gt; форматирования по умолчанию, logger_formatter , с параметром конфигурации &lt;code&gt;legacy_header&lt;/code&gt; , установленным в значение &lt;code&gt;true&lt;/code&gt; . Это конфигурация по &lt;code&gt;default&lt;/code&gt; обработчика по умолчанию, запускаемого ядром.</target>
        </trans-unit>
        <trans-unit id="51cf577b00fc8216155e456c21c9c0183f56b93f" translate="yes" xml:space="preserve">
          <source>To get started, the least you need to do is to start a tracer with &lt;code&gt;&lt;a href=&quot;ttb#tracer-0&quot;&gt;ttb:tracer/0,1,2&lt;/a&gt;&lt;/code&gt;, and set the required trace flags on the processes you want to trace with &lt;code&gt;&lt;a href=&quot;ttb#p-2&quot;&gt;ttb:p/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Для начала вам нужно, как минимум, запустить трассировщик с помощью &lt;code&gt;&lt;a href=&quot;ttb#tracer-0&quot;&gt;ttb:tracer/0,1,2&lt;/a&gt;&lt;/code&gt; и установить необходимые флаги трассировки для процессов, которые вы хотите отслеживать, с помощью &lt;code&gt;&lt;a href=&quot;ttb#p-2&quot;&gt;ttb:p/2&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fc4b00be659493772c3eb90fac788afdac82d1da" translate="yes" xml:space="preserve">
          <source>To get started, you should read about the &lt;code&gt;&lt;a href=&quot;#type-document&quot;&gt;document()&lt;/a&gt;&lt;/code&gt; data type; the main constructor functions: &lt;code&gt;&lt;a href=&quot;#text-1&quot;&gt;text/1&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#above-2&quot;&gt;above/2&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#beside-2&quot;&gt;beside/2&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#nest-2&quot;&gt;nest/2&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#sep-1&quot;&gt;sep/1&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;#par-2&quot;&gt;par/2&lt;/a&gt;&lt;/code&gt;; and the main layout function &lt;code&gt;&lt;a href=&quot;#format-3&quot;&gt;format/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Для начала вам следует прочитать о типе данных &lt;code&gt;&lt;a href=&quot;#type-document&quot;&gt;document()&lt;/a&gt;&lt;/code&gt; ; основные функции конструктора: &lt;code&gt;&lt;a href=&quot;#text-1&quot;&gt;text/1&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#above-2&quot;&gt;above/2&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#beside-2&quot;&gt;beside/2&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#nest-2&quot;&gt;nest/2&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#sep-1&quot;&gt;sep/1&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;#par-2&quot;&gt;par/2&lt;/a&gt;&lt;/code&gt; ; и основной &lt;code&gt;&lt;a href=&quot;#format-3&quot;&gt;format/3&lt;/a&gt;&lt;/code&gt; функции макета / 3 .</target>
        </trans-unit>
        <trans-unit id="80a72b65fea86a98c851ba990e410aac5fd9f4fb" translate="yes" xml:space="preserve">
          <source>To get the consistent behavior of killing ports when the last &lt;code&gt;&lt;a href=&quot;#users&quot;&gt;user&lt;/a&gt;&lt;/code&gt; unloads, use driver option &lt;code&gt;kill_ports&lt;/code&gt; when loading the driver instead.</source>
          <target state="translated">Чтобы добиться согласованного поведения уничтожения портов при &lt;code&gt;kill_ports&lt;/code&gt; последнего &lt;code&gt;&lt;a href=&quot;#users&quot;&gt;user&lt;/a&gt;&lt;/code&gt; , вместо этого используйте параметр драйвера kill_ports при загрузке драйвера.</target>
        </trans-unit>
        <trans-unit id="97de7a8dc23625a08e5a773780e14b0a5c65aae2" translate="yes" xml:space="preserve">
          <source>To get the output printed to a file, use option &lt;code&gt;--output_file&lt;/code&gt;.</source>
          <target state="translated">Для вывода вывода на печать в файл используйте параметр &lt;code&gt;--output_file&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4f76cd184a6e7c8d866643b588a8bdefe5b9edef" translate="yes" xml:space="preserve">
          <source>To get trace messages containing return values from functions, use the &lt;code&gt;{return_trace}&lt;/code&gt; match specification action instead.</source>
          <target state="translated">Чтобы получить сообщения трассировки, содержащие возвращаемые значения из функций, используйте вместо этого действие спецификации соответствия &lt;code&gt;{return_trace}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1820d2a1d5bd22bcad0e15651513a749cd0ea7ac" translate="yes" xml:space="preserve">
          <source>To give an indication on the possible performance gain using the specialized decodes, some measures have been performed. The relative figures in the outcome between selective, exclusive, and complete decode (the normal case) depend on the structure of the type, the size of the message, and on what level the selective and exclusive decodes are specified.</source>
          <target state="translated">Для того чтобы дать представление о возможном приросте производительности с использованием специализированных декодов,были проведены некоторые мероприятия.Относительные цифры в результатах между выборочным,эксклюзивным и полным декодированием (в обычном случае)зависят от структуры типа,размера сообщения,а также от того,на каком уровне заданы селективный и эксклюзивный декоды.</target>
        </trans-unit>
        <trans-unit id="dcc0da7706c1bd437120fd6114754c61c3ba2f69" translate="yes" xml:space="preserve">
          <source>To give some background to the rest of this document, here follows a quick overview of how instructions are loaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6bae83c7d1a2e1a895f2a1aac969ea5d6956ad8" translate="yes" xml:space="preserve">
          <source>To hack the erlang libraries, you simply do a &lt;code&gt;make opt&lt;/code&gt; in the specific &quot;applications&quot; directory, like:</source>
          <target state="translated">Чтобы взломать библиотеки erlang, вы просто делаете &lt;code&gt;make opt&lt;/code&gt; в конкретном каталоге &amp;laquo;приложений&amp;raquo;, например:</target>
        </trans-unit>
        <trans-unit id="25afbf964210cbb860d968d22f8aec5dd76f1cff" translate="yes" xml:space="preserve">
          <source>To handle Unicode characters in Erlang, a common representation in both lists and binaries is needed. EEP (10) and the subsequent initial implementation in Erlang/OTP R13A settled a standard representation of Unicode characters in Erlang.</source>
          <target state="translated">Для работы с символами Юникода в Erlang необходимо общее представление как в списках,так и в двоичных файлах.EEP (10)и последующая начальная реализация в Erlang/OTP R13A установили стандартное представление символов Юникода в Erlang.</target>
        </trans-unit>
        <trans-unit id="aff10dfbf070c41d255dec1932b739bd7e3bde90" translate="yes" xml:space="preserve">
          <source>To harbor real time characteristics, searching the pool is limited. We only inspect a limited number of carriers. If none of those carriers had a free block large enough to satisfy the allocation request, the search will fail. A carrier in the pool can also be BUSY if another thread is currently doing block deallocation work on the carrier. A BUSY carrier will also be skipped by the search as it cannot satisfy the request. The pool is lock-free and we do not want to block, waiting for the other thread to finish.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="342c993bd4e7155816205341dd7a1c3953a4f6f8" translate="yes" xml:space="preserve">
          <source>To have &lt;code&gt;Common Test&lt;/code&gt; encrypt a specified file using function &lt;code&gt;DES3&lt;/code&gt; in application &lt;code&gt;Crypto&lt;/code&gt;, call &lt;code&gt;&lt;a href=&quot;ct#encrypt_config_file-2&quot;&gt;ct:encrypt_config_file/2,3&lt;/a&gt;&lt;/code&gt; The encrypted file can then be used as a regular configuration file in combination with other encrypted files or normal text files. However, the key for decrypting the configuration file must be provided when running the test. This can be done with flag/option &lt;code&gt;decrypt_key&lt;/code&gt; or &lt;code&gt;decrypt_file&lt;/code&gt;, or a key file in a predefined location.</source>
          <target state="translated">Чтобы &lt;code&gt;Common Test&lt;/code&gt; зашифровал указанный файл с помощью функции &lt;code&gt;DES3&lt;/code&gt; в приложении &lt;code&gt;Crypto&lt;/code&gt; , вызовите &lt;code&gt;&lt;a href=&quot;ct#encrypt_config_file-2&quot;&gt;ct:encrypt_config_file/2,3&lt;/a&gt;&lt;/code&gt; . Зашифрованный файл можно затем использовать как обычный файл конфигурации в сочетании с другими зашифрованными файлами или обычными текстовыми файлами. Однако ключ для расшифровки файла конфигурации должен быть предоставлен при запуске теста. Это можно сделать с помощью флага / опции &lt;code&gt;decrypt_key&lt;/code&gt; или &lt;code&gt;decrypt_file&lt;/code&gt; или файла ключа в заранее определенном месте.</target>
        </trans-unit>
        <trans-unit id="85cad9012ac3a0f7585ee9eb3d18653bcfe48b6e" translate="yes" xml:space="preserve">
          <source>To have an effect, a breakpoint must be set at an &lt;strong&gt;executable line&lt;/strong&gt;, which is a line of code containing an executable expression such as a matching or a function call. A blank line or a line containing a comment, function head, or pattern in a &lt;code&gt;case&lt;/code&gt; statement or &lt;code&gt;receive&lt;/code&gt; statement is not executable.</source>
          <target state="translated">Чтобы иметь эффект, точка останова должна быть установлена ​​на &lt;strong&gt;исполняемой строке&lt;/strong&gt; , которая представляет собой строку кода, содержащую исполняемое выражение, такое как сопоставление или вызов функции. Пустая строка или строка, содержащая комментарий, заголовок функции или шаблон в операторе &lt;code&gt;case&lt;/code&gt; или операторе &lt;code&gt;receive&lt;/code&gt; не являются исполняемыми.</target>
        </trans-unit>
        <trans-unit id="3526ad99fb939a42fd2ac8a732fa13795a7fc7c2" translate="yes" xml:space="preserve">
          <source>To have effect, this function is to be called from &lt;code&gt;init_per_suite/1&lt;/code&gt; (see &lt;code&gt;&lt;a href=&quot;common_test&quot;&gt;common_test&lt;/a&gt;&lt;/code&gt;) before any tests are performed.</source>
          <target state="translated">Для &lt;code&gt;init_per_suite/1&lt;/code&gt; эффекта эта функция должна вызываться из init_per_suite / 1 (см. &lt;code&gt;&lt;a href=&quot;common_test&quot;&gt;common_test&lt;/a&gt;&lt;/code&gt; ) перед выполнением любых тестов.</target>
        </trans-unit>
        <trans-unit id="2708c75c960cc2ecf9c829562c09567eee5b452b" translate="yes" xml:space="preserve">
          <source>To help adapt configuration data to a test suite (or test case) and improve readability.</source>
          <target state="translated">Помогает адаптировать данные конфигурации к тестовому комплекту (или тестовому случаю)и улучшить читабельность.</target>
        </trans-unit>
        <trans-unit id="030c50a15bdc06f6e3b51217f3e73b7d2d5a9ad8" translate="yes" xml:space="preserve">
          <source>To help setup the environment, there is a bat file, &lt;code&gt;%PROGRAMFILES%\Mirosoft Visual Studio 12.0\VC\vcvarsall.bat&lt;/code&gt;, that set's the appropriate environment for a Windows command prompt. This is not appropriate for bash, so you'll need to convert it to bash-style environments by editing your &lt;code&gt;.bash_profile&lt;/code&gt;. In my case, where the SDK is installed in the default directory and &lt;code&gt;%PROGRAMFILES%&lt;/code&gt; is &lt;code&gt;C:\Program Files&lt;/code&gt;, the commands for setting up a 32bit build environment (on a 64bit or 32bit machine) look like this (in Cygwin):</source>
          <target state="translated">Чтобы помочь настроить среду, существует файл bat, &lt;code&gt;%PROGRAMFILES%\Mirosoft Visual Studio 12.0\VC\vcvarsall.bat&lt;/code&gt; , который устанавливает соответствующую среду для командной строки Windows. Это не подходит для bash, поэтому вам нужно преобразовать его в среду в стиле bash, отредактировав свой &lt;code&gt;.bash_profile&lt;/code&gt; . В моем случае, когда SDK установлен в каталог по умолчанию, а &lt;code&gt;%PROGRAMFILES%&lt;/code&gt; - это &lt;code&gt;C:\Program Files&lt;/code&gt; , команды для настройки 32-битной среды сборки (на 64-битной или 32-битной машине) выглядят следующим образом (в Cygwin):</target>
        </trans-unit>
        <trans-unit id="8c68f332c622b4567e9853c18f5bd4711a371dc7" translate="yes" xml:space="preserve">
          <source>To help with debugging, EUnit defines several useful macros for printing messages directly to the console (rather than to the standard output). Furthermore, these macros all use the same basic format, which includes the file and line number where they occur, making it possible in some development environments (e.g., when running Erlang in an Emacs buffer) to simply click on the message and jump directly to the corresponding line in the code.</source>
          <target state="translated">Для помощи в отладке EUnit определяет несколько полезных макросов для печати сообщений непосредственно на консоли (а не на стандартном выводе).Более того,все эти макросы используют один и тот же базовый формат,который включает в себя номер файла и строки,где они появляются,что позволяет в некоторых средах разработки (например,при запуске Erlang в буфере Emacs)просто щелкнуть по сообщению и перейти непосредственно к соответствующей строке в коде.</target>
        </trans-unit>
        <trans-unit id="f2bf4f85026136c5e9d89c67190507dcee8f99df" translate="yes" xml:space="preserve">
          <source>To identify connections (described later).</source>
          <target state="translated">Для идентификации соединений (описано ниже).</target>
        </trans-unit>
        <trans-unit id="a3a37007760548419af74fbda4faaad4a58f472b" translate="yes" xml:space="preserve">
          <source>To illustrate the interoperability principles, C programs running in a UNIX environment have been used. It is assumed that you have enough knowledge to apply these principles to the relevant programming languages and platforms.</source>
          <target state="translated">Для иллюстрации принципов интероперабельности были использованы программы на языке Си,работающие в среде UNIX.Предполагается,что вы обладаете достаточными знаниями для применения этих принципов к соответствующим языкам и платформам программирования.</target>
        </trans-unit>
        <trans-unit id="e25970fd2bf365203fb3a3002e19cdcdbb27a907" translate="yes" xml:space="preserve">
          <source>To illustrate this we make up an example where the buttons instead generate down and up (press and release) events, and the lock responds to an up event only after the corresponding down event.</source>
          <target state="translated">Чтобы проиллюстрировать это,мы составляем пример,в котором кнопки вместо этого генерируют события спуска и спуска (нажатия и отпускания),а блокировка реагирует на событие спуска только после соответствующего события спуска.</target>
        </trans-unit>
        <trans-unit id="272786a4055a77679447504bd8a8b3f74b9c24f1" translate="yes" xml:space="preserve">
          <source>To illustrate this, do &lt;strong&gt;not&lt;/strong&gt; write as follows:</source>
          <target state="translated">Чтобы проиллюстрировать это, &lt;strong&gt;не&lt;/strong&gt; пишите следующее:</target>
        </trans-unit>
        <trans-unit id="968314d317898e187c56ec55b8af76cc4a65eba4" translate="yes" xml:space="preserve">
          <source>To illustrate this, suppose we extend our Mnesia &lt;code&gt;empTable&lt;/code&gt; with one internal column. We create it as before, but with an arity of 4, by adding another attribute.</source>
          <target state="translated">Чтобы проиллюстрировать это, предположим, что мы расширили нашу &lt;code&gt;empTable&lt;/code&gt; Mnesia empTable одним внутренним столбцом. Создаем его, как и раньше, но с арностью 4, добавляя еще один атрибут.</target>
        </trans-unit>
        <trans-unit id="a162dc5a66ab8801f7f0ce0a26a9e8e3d6ef7a06" translate="yes" xml:space="preserve">
          <source>To illustrate this, the messenger example from the previous section is divided into the following five files:</source>
          <target state="translated">Чтобы проиллюстрировать это,пример мессенджера из предыдущего раздела разделен на следующие пять файлов:</target>
        </trans-unit>
        <trans-unit id="6bb28103d410bbb4345e8969c22657c7565cfc3a" translate="yes" xml:space="preserve">
          <source>To implement a new carrier for the Erlang distribution, the main steps are as follows.</source>
          <target state="translated">Для реализации нового перевозчика для дистрибуции Erlang,основные этапы заключаются в следующем.</target>
        </trans-unit>
        <trans-unit id="279afddbfce41bfb8c90b18f6a7106e81cad960d" translate="yes" xml:space="preserve">
          <source>To implement a user-defined behaviour, write code similar to code for a special process, but call functions in a callback module for handling specific tasks.</source>
          <target state="translated">Чтобы реализовать поведение,определяемое пользователем,напишите код,похожий на код специального процесса,но вызывающий функции в модуле обратного вызова для работы с конкретными задачами.</target>
        </trans-unit>
        <trans-unit id="bbcff46d509465f1d50c1bdbf6bb8561780d4955" translate="yes" xml:space="preserve">
          <source>To implement an agent, the programmer writes instrumentation functions for the variables and the tables in the MIBs that the agent is going to support. A running prototype which handles &lt;code&gt;set&lt;/code&gt;, &lt;code&gt;get&lt;/code&gt;, and &lt;code&gt;get-next&lt;/code&gt; can be created without any programming.</source>
          <target state="translated">Для реализации агента программист пишет инструментальные функции для переменных и таблиц в MIB, которые агент собирается поддерживать. Работающий прототип, который обрабатывает &lt;code&gt;set&lt;/code&gt; , &lt;code&gt;get&lt;/code&gt; и &lt;code&gt;get-next&lt;/code&gt; , может быть создан без какого-либо программирования.</target>
        </trans-unit>
        <trans-unit id="96a8f8e3de715f80a2e00a49b8a93d3352e72e52" translate="yes" xml:space="preserve">
          <source>To implement your own node discovery module you have to write your own EPMD module. The &lt;code&gt;EPMD module&lt;/code&gt; is responsible for providing the location of another node. The distribution modules (&lt;code&gt;inet_tcp_dist&lt;/code&gt;/&lt;code&gt;inet_tls_dist&lt;/code&gt;) call the EPMD module to get the IP address and port of the other node. The EPMD module that is part of Erlang/OTP will resolve the hostname using DNS and uses the EPMD unix process to get the port of another node. The EPMD unix process does this by connecting to the other node on a well-known port, port 4369.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="330de1ad3973af593bbd7d81e03664889a42ea4e" translate="yes" xml:space="preserve">
          <source>To implement your own service discovery module you have to write your own EPMD module. The &lt;code&gt;EPMD module&lt;/code&gt; is responsible for providing the location of another node. The distribution modules (&lt;code&gt;inet_tcp_dist&lt;/code&gt;/&lt;code&gt;inet_tls_dist&lt;/code&gt;) call the EPMD module to get the IP address and port of the other node. The EPMD module that is part of Erlang/OTP will resolve the hostname using DNS and uses the EPMD unix process to get the port of another node. The EPMD unix process does this by connecting to the other node on a well-known port, port 4369.</source>
          <target state="translated">Чтобы реализовать собственный модуль обнаружения сервисов, вам необходимо написать собственный модуль EPMD. Модуль &lt;code&gt;EPMD module&lt;/code&gt; отвечает за предоставление местоположения другого узла. Модули распределения ( &lt;code&gt;inet_tcp_dist&lt;/code&gt; / &lt;code&gt;inet_tls_dist&lt;/code&gt; ) вызывают модуль EPMD, чтобы получить IP-адрес и порт другого узла. Модуль EPMD, который является частью Erlang / OTP, разрешает имя хоста с помощью DNS и использует процесс Unix EPMD для получения порта другого узла. Процесс Unix EPMD делает это, подключаясь к другому узлу через хорошо известный порт, порт 4369.</target>
        </trans-unit>
        <trans-unit id="79134b2c4e38df5717fe5011c4463fea24abb3c3" translate="yes" xml:space="preserve">
          <source>To improve performance when analysing cover results it is possible to do multiple calls to &lt;code&gt;&lt;a href=&quot;cover#analyse-1&quot;&gt;analyse&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;cover#analyse_to_file-1&quot;&gt;analyse_to_file&lt;/a&gt;&lt;/code&gt; at once. You can also use the &lt;code&gt;&lt;a href=&quot;cover#async_analyse_to_file-1&quot;&gt;async_analyse_to_file&lt;/a&gt;&lt;/code&gt; convenience function.</source>
          <target state="translated">Для повышения производительности , когда результаты анализа крышки можно сделать несколько вызовов &lt;code&gt;&lt;a href=&quot;cover#analyse-1&quot;&gt;analyse&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;cover#analyse_to_file-1&quot;&gt;analyse_to_file&lt;/a&gt;&lt;/code&gt; сразу. Вы также можете использовать &lt;code&gt;&lt;a href=&quot;cover#async_analyse_to_file-1&quot;&gt;async_analyse_to_file&lt;/a&gt;&lt;/code&gt; функцию async_analyse_to_file .</target>
        </trans-unit>
        <trans-unit id="d70eada12ec2a8f92aa033daf56e896f20d26d8f" translate="yes" xml:space="preserve">
          <source>To include other nodes in the coverage analysis, use &lt;code&gt;start/1&lt;/code&gt;. All cover compiled modules will then be loaded on all nodes, and data from all nodes will be summed up when analysing. For simplicity this example only involves the current node.</source>
          <target state="translated">Чтобы включить другие узлы в анализ покрытия, используйте &lt;code&gt;start/1&lt;/code&gt; . Все скомпилированные модули обложки будут загружены на все узлы, и данные со всех узлов будут суммированы при анализе. Для простоты в этом примере задействован только текущий узел.</target>
        </trans-unit>
        <trans-unit id="a5478a26ee1ac879ac54fc75bcb8b9a9f083c3ec" translate="yes" xml:space="preserve">
          <source>To include private shell commands, define them in a module &lt;code&gt;user_default&lt;/code&gt; and add the following argument as the first line in the &lt;code&gt;.erlang&lt;/code&gt; file:</source>
          <target state="translated">Чтобы включить частные команды оболочки, определите их в модуле &lt;code&gt;user_default&lt;/code&gt; и добавьте следующий аргумент в качестве первой строки в файле &lt;code&gt;.erlang&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="203ccb7faa11c702e1202041c2be3ef44596552b" translate="yes" xml:space="preserve">
          <source>To initialize the database, execute the following code on one of the two nodes:</source>
          <target state="translated">Для инициализации базы данных выполните следующий код на одном из двух узлов:</target>
        </trans-unit>
        <trans-unit id="026d2b6accddb0e61f3eda91aff0268e88788933" translate="yes" xml:space="preserve">
          <source>To insert an &amp;amp; or a \ in the result, precede it with a \. Notice that Erlang already gives a special meaning to \ in literal strings, so a single \ must be written as &lt;code&gt;&quot;\\&quot;&lt;/code&gt; and therefore a double \ as &lt;code&gt;&quot;\\\\&quot;&lt;/code&gt;.</source>
          <target state="translated">Чтобы вставить в результат &amp;amp; или \, поставьте перед ним \. Обратите внимание, что Erlang уже придает особое значение \ в буквальных строках, поэтому одиночный \ должен быть записан как &lt;code&gt;&quot;\\&quot;&lt;/code&gt; а двойной \ как &lt;code&gt;&quot;\\\\&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c018c38250aabfbb51e23ce90651060a950f1b96" translate="yes" xml:space="preserve">
          <source>To install &lt;code&gt;&lt;a href=&quot;ct_hooks_chapter#installing&quot;&gt;Common Test Hooks&lt;/a&gt;&lt;/code&gt; including start arguments.</source>
          <target state="translated">Чтобы установить &lt;code&gt;&lt;a href=&quot;ct_hooks_chapter#installing&quot;&gt;Common Test Hooks&lt;/a&gt;&lt;/code&gt; , включая аргументы запуска.</target>
        </trans-unit>
        <trans-unit id="44e25aea36620d24d591fc0a361139dfb3c4b11c" translate="yes" xml:space="preserve">
          <source>To install &lt;code&gt;&lt;a href=&quot;event_handler_chapter#event_handling&quot;&gt;event handlers&lt;/a&gt;&lt;/code&gt; including start arguments.</source>
          <target state="translated">Для установки &lt;code&gt;&lt;a href=&quot;event_handler_chapter#event_handling&quot;&gt;event handlers&lt;/a&gt;&lt;/code&gt; включая стартовые аргументы.</target>
        </trans-unit>
        <trans-unit id="c9c7864f1c5249a35705cc8dcabba48f995e8ae5" translate="yes" xml:space="preserve">
          <source>To install &lt;code&gt;&lt;a href=&quot;event_handler_chapter#event_handling&quot;&gt;event handlers&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Установить &lt;code&gt;&lt;a href=&quot;event_handler_chapter#event_handling&quot;&gt;event handlers&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="025cdabf9ad94f75800cda5f1e9747d7ccc0323d" translate="yes" xml:space="preserve">
          <source>To install the CSS file (&lt;code&gt;Common Test&lt;/code&gt; inlines the definition in the HTML code), the file name can be provided when executing &lt;code&gt;ct_run&lt;/code&gt;.</source>
          <target state="translated">Чтобы установить файл CSS ( &lt;code&gt;Common Test&lt;/code&gt; вставляет определение в код HTML), имя файла можно &lt;code&gt;ct_run&lt;/code&gt; при выполнении ct_run .</target>
        </trans-unit>
        <trans-unit id="deb96dbc16afa611fcde38057919ecf9cc751bfa" translate="yes" xml:space="preserve">
          <source>To install the new version of the release in runtime, the &lt;strong&gt;release handler&lt;/strong&gt; is used. This is a process belonging to the SASL application, which handles unpacking, installation, and removal of release packages. It is communicated through the &lt;code&gt;release_handler&lt;/code&gt; module. For details, see the &lt;code&gt;release_handler(3)&lt;/code&gt; manual page in SASL.</source>
          <target state="translated">Для установки новой версии релиза во время исполнения используется &lt;strong&gt;обработчик релиза&lt;/strong&gt; . Это процесс, принадлежащий приложению SASL, который обрабатывает распаковку, установку и удаление пакетов выпуска. Это передается через модуль &lt;code&gt;release_handler&lt;/code&gt; . Подробности смотрите на &lt;code&gt;release_handler(3)&lt;/code&gt; в SASL.</target>
        </trans-unit>
        <trans-unit id="73c1bf364dc283d1176ab1d289c500fd685a5dab" translate="yes" xml:space="preserve">
          <source>To interpret all displayed modules in the chosen directory, click &lt;strong&gt;All&lt;/strong&gt;.</source>
          <target state="translated">Чтобы интерпретировать все отображаемые модули в выбранном каталоге, щелкните &lt;strong&gt;Все&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="3292879da2b34dcadcc9f9ce0648b935ba4e7f92" translate="yes" xml:space="preserve">
          <source>To interrupt the runtime system or the shell process (depending on what has been specified with system flag &lt;code&gt;+B&lt;/code&gt;), use &lt;code&gt;Ctrl-Break&lt;/code&gt;.</source>
          <target state="translated">Чтобы прервать исполняющую систему или процесс оболочки (в зависимости от того, что было указано с помощью системного флага &lt;code&gt;+B&lt;/code&gt; ), используйте &lt;code&gt;Ctrl-Break&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4d9005b012d1045c52922820e7322a9dfa02e1f6" translate="yes" xml:space="preserve">
          <source>To investigate what Erlang thinks about the terminal, the call &lt;code&gt;io:getopts()&lt;/code&gt; can be used when the shell is started:</source>
          <target state="translated">Чтобы узнать, что Erlang думает о терминале, можно использовать вызов &lt;code&gt;io:getopts()&lt;/code&gt; при запуске оболочки:</target>
        </trans-unit>
        <trans-unit id="11a6e867a167f9a4a740ad92d9902eefad28664c" translate="yes" xml:space="preserve">
          <source>To just run a shell on a remote machine, there are functions that bundles the needed three steps needed into one: &lt;code&gt;&lt;a href=&quot;#shell-1&quot;&gt;shell/1,2,3&lt;/a&gt;&lt;/code&gt;. Similarily, to just open an sftp (file transfer) connection to a remote machine, the simplest way is to use &lt;code&gt;&lt;a href=&quot;ssh_sftp#start_channel-1&quot;&gt;ssh_sftp:start_channel/1,2,3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Чтобы просто запустить оболочку на удаленном компьютере, есть функции, которые объединяют три необходимых шага в один: &lt;code&gt;&lt;a href=&quot;#shell-1&quot;&gt;shell/1,2,3&lt;/a&gt;&lt;/code&gt; . Точно так же, чтобы просто открыть соединение sftp (передача файлов) с удаленным компьютером, самый простой способ - использовать &lt;code&gt;&lt;a href=&quot;ssh_sftp#start_channel-1&quot;&gt;ssh_sftp:start_channel/1,2,3&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9f2634ff9e5775d30c933d162e116bcf2daeb2ae" translate="yes" xml:space="preserve">
          <source>To learn what sequential tracing is and how it can be used, see the Reference Manual for &lt;code&gt;seq_trace&lt;/code&gt;.</source>
          <target state="translated">Чтобы узнать, что такое последовательная трассировка и как ее использовать, см. Справочное руководство для &lt;code&gt;seq_trace&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ea8c91f9201e13f8a7af2544d0b6f79400981a45" translate="yes" xml:space="preserve">
          <source>To let the test suite continue on executing, return the configuration list that you want the test to use as the result.</source>
          <target state="translated">Чтобы позволить тестовому комплекту продолжить выполнение,верните список настроек,который вы хотите использовать в качестве результата теста.</target>
        </trans-unit>
        <trans-unit id="d62397eee2357878fc975aeb84771b8bc2c06ea8" translate="yes" xml:space="preserve">
          <source>To limit the shutdown time, the time &lt;code&gt;init&lt;/code&gt; is allowed to spend taking down applications, command-line flag &lt;code&gt;-shutdown_time&lt;/code&gt; is to be used.</source>
          <target state="translated">Чтобы ограничить время выключения, время, которое &lt;code&gt;init&lt;/code&gt; может тратить на отключение приложений, должен использоваться флаг командной строки &lt;code&gt;-shutdown_time&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="31df00fd05b2b4e7d3ede7fd0ed32c7595a82e9c" translate="yes" xml:space="preserve">
          <source>To list the contents of a configuration file, use &lt;code&gt;list_config/1&lt;/code&gt;.</source>
          <target state="translated">Чтобы просмотреть содержимое файла конфигурации, используйте &lt;code&gt;list_config/1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f5d893e9a4aaa1eb2af17414123d7e17dc6fd363" translate="yes" xml:space="preserve">
          <source>To listen on both SCTP and TCP, define one transport for each.</source>
          <target state="translated">Для прослушивания как SCTP,так и TCP,определите по одному транспорту для каждого.</target>
        </trans-unit>
        <trans-unit id="11429257331a6c9848f977d465c2a19dfb56ed6e" translate="yes" xml:space="preserve">
          <source>To look for documentation for a module name example, a tool should:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07a54ad0b2a1bb175cf95b725d86a06fc8b48cbd" translate="yes" xml:space="preserve">
          <source>To look up one of the names:</source>
          <target state="translated">Чтобы найти одно из имён:</target>
        </trans-unit>
        <trans-unit id="8a56bbc15981f1188aa9ff7ef71388335fe7c6a6" translate="yes" xml:space="preserve">
          <source>To make a debug build of the emulator, you need to recompile both &lt;code&gt;beam.dll&lt;/code&gt; (the actual runtime system) and &lt;code&gt;erlexec.dll&lt;/code&gt;. Do like this</source>
          <target state="translated">Чтобы сделать отладочную сборку эмулятора, вам необходимо перекомпилировать и &lt;code&gt;beam.dll&lt;/code&gt; ( текущую систему времени выполнения), и &lt;code&gt;erlexec.dll&lt;/code&gt; . Сделай так</target>
        </trans-unit>
        <trans-unit id="038da331fd12e331816c4b78d58a10e2cc57ca86" translate="yes" xml:space="preserve">
          <source>To make it clearer exactly what code the warnings refer to, the warnings in the following examples are inserted as comments after the clause they refer to, for example:</source>
          <target state="translated">Чтобы было понятно,к какому коду относятся предупреждения,предупреждения в следующих примерах вставляются в виде комментариев после пункта,на который они ссылаются,например:</target>
        </trans-unit>
        <trans-unit id="9a3d3828bd3e752b691c02502aca9ad44d8387dc" translate="yes" xml:space="preserve">
          <source>To make it easier to manage breakpoints without single threaded mode a redesign of the breakpoint mechanism has been made. The old &quot;breakpoint wheel&quot; data structure was a circular double-linked list of breakpoints for each instrumented function. It was invented before the SMP emulator. To support it in the SMP emulator, is was essentially expanded to one breakpoint wheel per scheduler. As more breakpoint types have been added, the implementation have become messy and hard to understand and maintain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd2982d9a90975bc47a9c7a7530d4f0cbaa3f7f2" translate="yes" xml:space="preserve">
          <source>To make it easier to understand this section, some terms are defined. This is a mix of our own terminology (Erlang/OS system time, Erlang/OS monotonic time, time warp) and globally accepted terminology.</source>
          <target state="translated">Для облегчения понимания этого раздела определены некоторые термины.Это смесь нашей собственной терминологии (Erlang/OS системное время,Erlang/OS монотонное время,искривление времени)и общепринятой терминологии.</target>
        </trans-unit>
        <trans-unit id="2921bab0b743bbb6198162ca9c596c8d4e059429" translate="yes" xml:space="preserve">
          <source>To make the descriptions simpler, we first list some definitions:</source>
          <target state="translated">Чтобы упростить описания,мы сначала перечислим некоторые определения:</target>
        </trans-unit>
        <trans-unit id="9c4714caed05dab02e49dd183a4006e068e3199f" translate="yes" xml:space="preserve">
          <source>To make the example runnable, we start implementing the reading and writing of the data to/from the ETS table. First function &lt;code&gt;put_chars/3&lt;/code&gt;:</source>
          <target state="translated">Чтобы сделать пример работоспособным, мы начинаем реализовывать чтение и запись данных в / из таблицы ETS. Первая функция &lt;code&gt;put_chars/3&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="632f6f737e1f0ad548a43d9ad64573eca55f152d" translate="yes" xml:space="preserve">
          <source>To make the process change code, send the message &lt;code&gt;code_switch&lt;/code&gt; to it. The process then makes a fully qualified call to &lt;code&gt;m:loop()&lt;/code&gt; and changes to current code. Notice that &lt;code&gt;m:loop/0&lt;/code&gt; must be exported.</source>
          <target state="translated">Чтобы заставить процесс изменить код, отправьте ему сообщение &lt;code&gt;code_switch&lt;/code&gt; . Затем процесс выполняет полный вызов &lt;code&gt;m:loop()&lt;/code&gt; и переходит к текущему коду. Обратите внимание, что &lt;code&gt;m:loop/0&lt;/code&gt; необходимо экспортировать.</target>
        </trans-unit>
        <trans-unit id="e177c9389e3d182722e09e0544b0a24268ff84e3" translate="yes" xml:space="preserve">
          <source>To make the test fair, each new test run is to run in its own, newly created Erlang process. Otherwise, if all tests run in the same process, the later tests start out with larger heap sizes and therefore probably do fewer garbage collections. Also consider restarting the Erlang emulator between each test.</source>
          <target state="translated">Чтобы сделать тест справедливым,каждый новый пробный прогон должен выполняться в собственном,вновь созданном процессе Erlang.В противном случае,если все тесты будут выполняться в одном процессе,более поздние тесты будут начинаться с больших кучи и поэтому,вероятно,будут собирать меньше мусора.Также следует подумать о перезапуске эмулятора Erlang в промежутке между каждым тестом.</target>
        </trans-unit>
        <trans-unit id="120ecf4e057892d6019b012a82abcf83ac9ffd85" translate="yes" xml:space="preserve">
          <source>To make this happen the megaco stack has to be configured:</source>
          <target state="translated">Чтобы это произошло,стек megaco должен быть настроен:</target>
        </trans-unit>
        <trans-unit id="13169d7b871948e1e9a9c4457e119e83fe7939d4" translate="yes" xml:space="preserve">
          <source>To manipulate services, the logged on user is to have administrator privileges on the machine. The Erlang machine itself is (default) run as the local administrator. This can be changed with the Services applet in Windows.</source>
          <target state="translated">Для манипулирования службами,входящий в систему пользователь должен иметь права администратора на машине.Сама машина Erlang (по умолчанию)запущена от имени локального администратора.Это можно изменить с помощью апплета служб в Windows.</target>
        </trans-unit>
        <trans-unit id="330fd48fdffeb44ebc089750d09d688535c7db34" translate="yes" xml:space="preserve">
          <source>To manipulate the Erlang services easily, put the &lt;code&gt;&amp;lt;erlang_root&amp;gt;\erts-&amp;lt;version&amp;gt;\bin&lt;/code&gt; directory in the path instead of &lt;code&gt;&amp;lt;erlang_root&amp;gt;\bin&lt;/code&gt;. The &lt;code&gt;erlsrv&lt;/code&gt; program can be found from inside Erlang by using the &lt;code&gt;os:find_executable/1&lt;/code&gt; Erlang function.</source>
          <target state="translated">Чтобы легко управлять службами Erlang, поместите &lt;code&gt;&amp;lt;erlang_root&amp;gt;\erts-&amp;lt;version&amp;gt;\bin&lt;/code&gt; в путь вместо &lt;code&gt;&amp;lt;erlang_root&amp;gt;\bin&lt;/code&gt; . Программу &lt;code&gt;erlsrv&lt;/code&gt; можно найти внутри Erlang с помощью функции Erlang &lt;code&gt;os:find_executable/1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7b0e537b9e6e88eafa3eeae7f7a02f18b4e1430f" translate="yes" xml:space="preserve">
          <source>To manipulate the table we implement the following utility functions:</source>
          <target state="translated">Для работы с таблицей мы реализуем следующие функции утилиты:</target>
        </trans-unit>
        <trans-unit id="ffb58770364e94bc236d60f5ec83adb55db02d32" translate="yes" xml:space="preserve">
          <source>To match a variable number of arguments we need to use the special operand type &lt;code&gt;*&lt;/code&gt; like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af1c290996a023ca9ee9b2902b6c1dc2a988f5c7" translate="yes" xml:space="preserve">
          <source>To match out the rest of a binary, specify a binary field without size:</source>
          <target state="translated">Для соответствия остальной части двоичного файла укажите двоичное поле без размера:</target>
        </trans-unit>
        <trans-unit id="50f6c59cd17dfe4a6719c66fb938f13bf13c9cd5" translate="yes" xml:space="preserve">
          <source>To match out the rest of a bitstring, specify a field without size:</source>
          <target state="translated">Чтобы выровнять оставшуюся часть битовой строки,укажите поле без размера:</target>
        </trans-unit>
        <trans-unit id="3c74e2148772d016b06b50e91a05f48c85c5db24" translate="yes" xml:space="preserve">
          <source>To merge all wrap logs from two nodes:</source>
          <target state="translated">Объединить все оберточные журналы с двух узлов:</target>
        </trans-unit>
        <trans-unit id="9118cf58e561adea3d50918592e59eb25b8578d5" translate="yes" xml:space="preserve">
          <source>To modify the daemon start example above to reject one-time execution requests, we change &lt;code&gt;&lt;a href=&quot;#start-daemon-step3&quot;&gt;Step 3&lt;/a&gt;&lt;/code&gt; by adding the option &lt;code&gt;{exec, disabled}&lt;/code&gt; to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca89d09befb2046f7583acd51b179a73eb3778d1" translate="yes" xml:space="preserve">
          <source>To modify the existing configuration, use &lt;code&gt;&lt;a href=&quot;#update_handler_config-2&quot;&gt; update_handler_config/2&lt;/a&gt;&lt;/code&gt;, or, if a more complex merge is needed, read the current configuration with &lt;code&gt;&lt;a href=&quot;#get_handler_config-1&quot;&gt;get_handler_config/1 &lt;/a&gt;&lt;/code&gt;, then do the merge before writing the new configuration back with this function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ec3ba5252c54ac879e329c670bb92c1a4f26979" translate="yes" xml:space="preserve">
          <source>To modify the existing configuration, use &lt;code&gt;&lt;a href=&quot;#update_handler_config-2&quot;&gt;update_handler_config/2&lt;/a&gt;&lt;/code&gt;, or, if a more complex merge is needed, read the current configuration with &lt;code&gt;&lt;a href=&quot;#get_handler_config-1&quot;&gt;get_handler_config/1&lt;/a&gt;&lt;/code&gt;, then do the merge before writing the new configuration back with this function.</source>
          <target state="translated">Чтобы изменить существующую конфигурацию, используйте &lt;code&gt;&lt;a href=&quot;#update_handler_config-2&quot;&gt;update_handler_config/2&lt;/a&gt;&lt;/code&gt; или, если требуется более сложное слияние, прочтите текущую конфигурацию с помощью &lt;code&gt;&lt;a href=&quot;#get_handler_config-1&quot;&gt;get_handler_config/1&lt;/a&gt;&lt;/code&gt; , затем выполните слияние перед записью новой конфигурации обратно с помощью этой функции.</target>
        </trans-unit>
        <trans-unit id="d0497742c0aa1174886ab877594f8e6b707bfc8f" translate="yes" xml:space="preserve">
          <source>To modify the existing configuration, use &lt;code&gt;&lt;a href=&quot;#update_primary_config-1&quot;&gt; update_primary_config/1&lt;/a&gt;&lt;/code&gt;, or, if a more complex merge is needed, read the current configuration with &lt;code&gt;&lt;a href=&quot;#get_primary_config-0&quot;&gt;get_primary_config/0 &lt;/a&gt;&lt;/code&gt;, then do the merge before writing the new configuration back with this function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cbe08d74968e08a72c3be83982bb750cd3d4357" translate="yes" xml:space="preserve">
          <source>To modify the existing configuration, use &lt;code&gt;&lt;a href=&quot;#update_primary_config-1&quot;&gt;update_primary_config/1&lt;/a&gt;&lt;/code&gt;, or, if a more complex merge is needed, read the current configuration with &lt;code&gt;&lt;a href=&quot;#get_primary_config-0&quot;&gt;get_primary_config/0&lt;/a&gt;&lt;/code&gt;, then do the merge before writing the new configuration back with this function.</source>
          <target state="translated">Чтобы изменить существующую конфигурацию, используйте &lt;code&gt;&lt;a href=&quot;#update_primary_config-1&quot;&gt;update_primary_config/1&lt;/a&gt;&lt;/code&gt; или, если требуется более сложное слияние, прочтите текущую конфигурацию с помощью &lt;code&gt;&lt;a href=&quot;#get_primary_config-0&quot;&gt;get_primary_config/0&lt;/a&gt;&lt;/code&gt; , затем выполните слияние перед записью новой конфигурации обратно с помощью этой функции.</target>
        </trans-unit>
        <trans-unit id="32727eea82b60880074a4863f6cda445f1b0e965" translate="yes" xml:space="preserve">
          <source>To modify the existing configuration, use &lt;code&gt;&lt;a href=&quot;#update_proxy_config-1&quot;&gt; update_proxy_config/1&lt;/a&gt;&lt;/code&gt;, or, if a more complex merge is needed, read the current configuration with &lt;code&gt;&lt;a href=&quot;#get_proxy_config-0&quot;&gt;get_proxy_config/0 &lt;/a&gt;&lt;/code&gt;, then do the merge before writing the new configuration back with this function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5232b103674f04a52f0f595b415d6da9c86b5634" translate="yes" xml:space="preserve">
          <source>To not lose the data that the failing node stored up to the point of crash, the control node tries to fetch it before restarting trace. This must occur within the allowed time frame, otherwise it is aborted (default is 10 seconds, but it can be changed with &lt;code&gt;{resume, MSec}&lt;/code&gt;). The data fetched this way is then merged with all other traces.</source>
          <target state="translated">Чтобы не потерять данные, которые сбойный узел хранил до точки сбоя, управляющий узел пытается получить их перед перезапуском трассировки. Это должно произойти в течение разрешенного периода времени, в противном случае оно будет прервано (по умолчанию 10 секунд, но его можно изменить с помощью &lt;code&gt;{resume, MSec}&lt;/code&gt; ). Полученные таким образом данные затем объединяются со всеми остальными трассировками.</target>
        </trans-unit>
        <trans-unit id="eead728bbb8cc0046ae68985d45f67a85158d6b1" translate="yes" xml:space="preserve">
          <source>To not update a driver and only recompile, it probably works when building for a 32-bit machine creating a false sense of security. Hopefully that will generate many important warnings. But when recompiling the same driver later on for a 64-bit machine, there &lt;strong&gt;will&lt;/strong&gt; be warnings and almost certainly crashes. So it is a &lt;strong&gt;bad&lt;/strong&gt; idea to postpone updating the driver and not fixing the warnings.</source>
          <target state="translated">Чтобы не обновлять драйвер, а только перекомпилировать, он, вероятно, работает при сборке для 32-разрядной машины, создавая ложное чувство безопасности. Надеюсь, это приведет к появлению многих важных предупреждений. Но при повторной компиляции того же драйвера позже для 64-битной машины &lt;strong&gt;будут&lt;/strong&gt; предупреждения и почти наверняка &lt;strong&gt;произойдет&lt;/strong&gt; сбой. Поэтому откладывать обновление драйвера и не исправлять предупреждения - &lt;strong&gt;плохая&lt;/strong&gt; идея.</target>
        </trans-unit>
        <trans-unit id="25dd351d674ee351bc0d61f733e4bc4ab3924c98" translate="yes" xml:space="preserve">
          <source>To only collect data from remote nodes without stopping &lt;code&gt;cover&lt;/code&gt; on those nodes, use &lt;code&gt;cover:flush/1&lt;/code&gt;</source>
          <target state="translated">Чтобы собирать данные только с удаленных узлов, не останавливая &lt;code&gt;cover&lt;/code&gt; на этих узлах, используйте &lt;code&gt;cover:flush/1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9228c30057d8d3d2590c6d0ceb056f1bc0cfdc8f" translate="yes" xml:space="preserve">
          <source>To only update an existing value, the following syntax is used:</source>
          <target state="translated">Для обновления только существующего значения используется следующий синтаксис:</target>
        </trans-unit>
        <trans-unit id="91ac146297375e57e22dd83d0532b37bf8d61261" translate="yes" xml:space="preserve">
          <source>To open a file for writing and place the BOM first is even simpler:</source>
          <target state="translated">Открыть файл для записи и разместить BOM первым еще проще:</target>
        </trans-unit>
        <trans-unit id="58c7c0dd2c707e847605f73d2bf4f644bea3024e" translate="yes" xml:space="preserve">
          <source>To open a popup menu from which the appropriate module can be selected, right-click the &lt;strong&gt;Module&lt;/strong&gt; entry.</source>
          <target state="translated">Чтобы открыть всплывающее меню, из которого можно выбрать соответствующий модуль, щелкните правой кнопкой мыши запись &lt;strong&gt;Module&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="14f5619a76f5c4433353480eb14374da920455d5" translate="yes" xml:space="preserve">
          <source>To open the detailed information page about the module to which the fun belongs, right-click the row and select &lt;strong&gt;Properties for &amp;lt;mod&amp;gt;&lt;/strong&gt;.</source>
          <target state="translated">Чтобы открыть страницу с подробной информацией о модуле, к которому относится игра, щелкните строку правой кнопкой мыши и выберите &lt;strong&gt;Свойства для &amp;lt;mod&amp;gt;&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="707dccebf0704f68a732417b3f2c2e2a669bd41f" translate="yes" xml:space="preserve">
          <source>To open the detailed information page about the owner process of a timer, right-click the row and select &lt;strong&gt;Properties for &amp;lt;pid&amp;gt;&lt;/strong&gt;.</source>
          <target state="translated">Чтобы открыть страницу с подробной информацией о процессе-владельце таймера, щелкните строку правой кнопкой мыши и выберите &amp;laquo; &lt;strong&gt;Свойства&amp;raquo; для &amp;lt;pid&amp;gt;&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="67b5909ded381e129ca3cf333f0952bd76fc77a6" translate="yes" xml:space="preserve">
          <source>To open the detailed information page about the owner process of an ETS table, right-click the row and select &lt;strong&gt;Properties for &amp;lt;pid&amp;gt;&lt;/strong&gt;.</source>
          <target state="translated">Чтобы открыть страницу с подробной информацией о процессе-владельце таблицы ETS, щелкните строку правой кнопкой мыши и выберите &lt;strong&gt;Свойства для &amp;lt;pid&amp;gt;&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="310178f41809534c7c90fe35f112b61d4b6677f5" translate="yes" xml:space="preserve">
          <source>To open the detailed information page about the scheduler, double-click, or right-click the row and select &lt;strong&gt;Properties for 'Identifier'&lt;/strong&gt;.</source>
          <target state="translated">Чтобы открыть страницу с подробной информацией о планировщике, дважды щелкните или щелкните правой кнопкой мыши строку и выберите &amp;laquo; &lt;strong&gt;Свойства&amp;raquo; для &amp;laquo;Идентификатор&amp;raquo;&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="571318d856ef4524500a9b751e49f54bd8327c0e" translate="yes" xml:space="preserve">
          <source>To open the detailed information page about the table, double- click, or right-click the row and select &lt;strong&gt;Properties for 'Identifier'&lt;/strong&gt;.</source>
          <target state="translated">Чтобы открыть страницу с подробной информацией о таблице, дважды щелкните или щелкните правой кнопкой мыши строку и выберите &amp;laquo; &lt;strong&gt;Свойства&amp;raquo; для &amp;laquo;Идентификатор&amp;raquo;&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="9d9f96527be2bbc3f0e5c421b45a10f8abedace3" translate="yes" xml:space="preserve">
          <source>To optimize the copy operation in step 2, code access structures are reused. In current solution we have three sets of code access structures, identified by a code index of 0, 1 and 2. These indexes are used in a round robin fashion. Instead of having to initialize a completely new copy of all access structures for every load operation we just have to update with the changes that have happened since the last two code load operations. We could get by with only two code indexes (0 and 1), but that would require yet another round of waiting for thread progress before step 2 in the &lt;code&gt;finish_loading&lt;/code&gt; sequence. We cannot start reusing a code index as staging area until we know that no lingering scheduler thread is still using it as the active code index. With three generations of code indexes, the waiting for thread progress in step 4-6 will give this guarantee for us. Thread progress will wait for all running schedulers to reschedule at least one time. No ongoing execution reading code access structures reached from an old value of &lt;code&gt;the_active_code_index&lt;/code&gt; can exist after a second round of thread progress.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f882324ba7cf66c628fe99da4190c380235eb46" translate="yes" xml:space="preserve">
          <source>To output characters on an I/O device, the following &lt;code&gt;Request&lt;/code&gt;s exist:</source>
          <target state="translated">Для вывода символов на устройстве ввода-вывода существуют следующие &lt;code&gt;Request&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="4460b3a67f9f027204de0ad12d5d1dec14e5f20d" translate="yes" xml:space="preserve">
          <source>To overcome this situation, try to restart the ongoing transactions that are accessing tables on the failing node, and write a &lt;code&gt;mnesia_down&lt;/code&gt; entry to a log file.</source>
          <target state="translated">Чтобы преодолеть эту ситуацию, попробуйте перезапустить текущие транзакции, которые обращаются к таблицам на &lt;code&gt;mnesia_down&lt;/code&gt; узле, и запишите запись mnesia_down в файл журнала.</target>
        </trans-unit>
        <trans-unit id="7e7f8360d8ea17a73622310335fec57f5f594e5a" translate="yes" xml:space="preserve">
          <source>To overwrite the existing configuration without any merge, use</source>
          <target state="translated">Чтобы перезаписать существующую конфигурацию без какого-либо слияния,используйте</target>
        </trans-unit>
        <trans-unit id="f7234cbfd68a0c262c592cc7d358092db950cccb" translate="yes" xml:space="preserve">
          <source>To overwrite the existing configuration without any merge, use &lt;code&gt;&lt;a href=&quot;#set_handler_config-2&quot;&gt;set_handler_config/2 &lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eb9c41fc2b2f98f04f5d6d6242bc28f6713bd31" translate="yes" xml:space="preserve">
          <source>To overwrite the existing configuration without any merge, use &lt;code&gt;&lt;a href=&quot;#set_handler_config-2&quot;&gt;set_handler_config/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Чтобы перезаписать существующую конфигурацию без слияния, используйте &lt;code&gt;&lt;a href=&quot;#set_handler_config-2&quot;&gt;set_handler_config/2&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c898f6aa3f00a6669d0ce126d552a738c9ef72d7" translate="yes" xml:space="preserve">
          <source>To overwrite the existing configuration without any merge, use &lt;code&gt;&lt;a href=&quot;#set_primary_config-1&quot;&gt;set_primary_config/1 &lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db040bf59efb80826409bf9f754e7a7431f35000" translate="yes" xml:space="preserve">
          <source>To overwrite the existing configuration without any merge, use &lt;code&gt;&lt;a href=&quot;#set_primary_config-1&quot;&gt;set_primary_config/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Чтобы перезаписать существующую конфигурацию без слияния, используйте &lt;code&gt;&lt;a href=&quot;#set_primary_config-1&quot;&gt;set_primary_config/1&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="49fbf2912e0f2c254843c85e6a31555d4db4ff43" translate="yes" xml:space="preserve">
          <source>To overwrite the existing configuration without any merge, use &lt;code&gt;&lt;a href=&quot;#set_proxy_config-1&quot;&gt;set_proxy_config/1 &lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef5df41f2e14a8f5ccfe8eb5134454968930bd33" translate="yes" xml:space="preserve">
          <source>To pass data from one test suite to another, the same mechanism is used. The data is to be saved by finction &lt;code&gt;&lt;a href=&quot;common_test#Module:end_per_suite-1&quot;&gt;end_per_suite&lt;/a&gt;&lt;/code&gt; and read by function &lt;code&gt;&lt;a href=&quot;common_test#Module:init_per_suite-1&quot;&gt;init_per_suite&lt;/a&gt;&lt;/code&gt; in the suite that follows. When passing data between suites, &lt;code&gt;Saver&lt;/code&gt; carries the name of the test suite.</source>
          <target state="translated">Для передачи данных из одного набора тестов в другой используется тот же механизм. Данные должны быть сохранены &lt;code&gt;&lt;a href=&quot;common_test#Module:end_per_suite-1&quot;&gt;end_per_suite&lt;/a&gt;&lt;/code&gt; и прочитаны функцией &lt;code&gt;&lt;a href=&quot;common_test#Module:init_per_suite-1&quot;&gt;init_per_suite&lt;/a&gt;&lt;/code&gt; в следующем наборе. При передаче данных между наборами &lt;code&gt;Saver&lt;/code&gt; носит имя набора тестов.</target>
        </trans-unit>
        <trans-unit id="7a2133d0447986ef047f45d46d57b0cba23ddd16" translate="yes" xml:space="preserve">
          <source>To pass data from one test suite to another, the same mechanism is used. The data is to be saved by finction &lt;code&gt;&lt;a href=&quot;ct_suite#Module:end_per_suite-1&quot;&gt;end_per_suite&lt;/a&gt;&lt;/code&gt; and read by function &lt;code&gt;&lt;a href=&quot;ct_suite#Module:init_per_suite-1&quot;&gt;init_per_suite&lt;/a&gt;&lt;/code&gt; in the suite that follows. When passing data between suites, &lt;code&gt;Saver&lt;/code&gt; carries the name of the test suite.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de196dbd1fc4727b3381ea786892e523ea66df78" translate="yes" xml:space="preserve">
          <source>To pass start arguments to the event handler init function, use option &lt;code&gt;ct_run -event_handler_init&lt;/code&gt; instead of &lt;code&gt;-event_handler&lt;/code&gt;.</source>
          <target state="translated">Чтобы передать стартовые аргументы в функцию инициализации обработчика событий, используйте параметр &lt;code&gt;ct_run -event_handler_init&lt;/code&gt; вместо &lt;code&gt;-event_handler&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="05760d82d1ff0699d6462cb51afbab4089fd15b2" translate="yes" xml:space="preserve">
          <source>To paste text, use &lt;code&gt;Ctrl-V&lt;/code&gt;.</source>
          <target state="translated">Чтобы вставить текст, используйте &lt;code&gt;Ctrl-V&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9a0ab25b4dbcc22e8a0f55cfd17389d320947558" translate="yes" xml:space="preserve">
          <source>To perform a selective decode:</source>
          <target state="translated">Для выполнения селективного декодирования:</target>
        </trans-unit>
        <trans-unit id="e34161a911d532a3fe5b96ed7a79392865f455a4" translate="yes" xml:space="preserve">
          <source>To perform an exclusive decode:</source>
          <target state="translated">Для выполнения эксклюзивного декодирования:</target>
        </trans-unit>
        <trans-unit id="3f8dad79e2d5118a556c41ca87119ccb799f35ee" translate="yes" xml:space="preserve">
          <source>To perform code coverage test (see &lt;code&gt;&lt;a href=&quot;cover_chapter#cover&quot;&gt;Code Coverage Analysis&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">Чтобы выполнить тест покрытия кода (см. &lt;code&gt;&lt;a href=&quot;cover_chapter#cover&quot;&gt;Code Coverage Analysis&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="a431fccb77738e590c035501f73871c8ebfc0dd5" translate="yes" xml:space="preserve">
          <source>To plug in a handler to the &lt;code&gt;Common Test&lt;/code&gt; Master event manager, specify &lt;code&gt;master&lt;/code&gt; as the node in &lt;code&gt;NodeRefs&lt;/code&gt;.</source>
          <target state="translated">Чтобы подключить обработчик к диспетчеру событий &lt;code&gt;Common Test&lt;/code&gt; Master, укажите &lt;code&gt;master&lt;/code&gt; в качестве узла в &lt;code&gt;NodeRefs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a9a49f1cec23382260ab3c7111ed66a3064f4b5e" translate="yes" xml:space="preserve">
          <source>To prevent a supervisor from getting into an infinite loop of child process terminations and restarts, a &lt;strong&gt;maximum restart intensity&lt;/strong&gt; is defined using two integer values specified with keys &lt;code&gt;intensity&lt;/code&gt; and &lt;code&gt;period&lt;/code&gt; in the above map. Assuming the values &lt;code&gt;MaxR&lt;/code&gt; for &lt;code&gt;intensity&lt;/code&gt; and &lt;code&gt;MaxT&lt;/code&gt; for &lt;code&gt;period&lt;/code&gt;, then, if more than &lt;code&gt;MaxR&lt;/code&gt; restarts occur within &lt;code&gt;MaxT&lt;/code&gt; seconds, the supervisor terminates all child processes and then itself. The termination reason for the supervisor itself in that case will be &lt;code&gt;shutdown&lt;/code&gt;. &lt;code&gt;intensity&lt;/code&gt; defaults to &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;period&lt;/code&gt; defaults to &lt;code&gt;5&lt;/code&gt;.</source>
          <target state="translated">Чтобы предотвратить супервизор от попадания в бесконечный цикл процесс ребенка окончаний и перезапусков, А &lt;strong&gt;максимальная интенсивность перезапуска&lt;/strong&gt; определяются с помощью двух целочисленных значений , указанных с ключами &lt;code&gt;intensity&lt;/code&gt; и &lt;code&gt;period&lt;/code&gt; в карте выше. Если &lt;code&gt;MaxR&lt;/code&gt; значения MaxR для &lt;code&gt;intensity&lt;/code&gt; и &lt;code&gt;MaxT&lt;/code&gt; для &lt;code&gt;period&lt;/code&gt; , то, если в течение &lt;code&gt;MaxT&lt;/code&gt; секунд происходит больше, чем &lt;code&gt;MaxR&lt;/code&gt; перезапусков , супервизор завершает все дочерние процессы, а затем сам. Причиной завершения работы самого супервизора в этом случае будет &lt;code&gt;shutdown&lt;/code&gt; . &lt;code&gt;intensity&lt;/code&gt; умолчанию &lt;code&gt;1&lt;/code&gt; и &lt;code&gt;period&lt;/code&gt; умолчанию равен &lt;code&gt;5&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8b6bd58de0f6a9d2c9e5412e4769e5fc57c89331" translate="yes" xml:space="preserve">
          <source>To prevent accidentally reloading of modules affecting the Erlang runtime system, directories &lt;code&gt;kernel&lt;/code&gt;, &lt;code&gt;stdlib&lt;/code&gt;, and &lt;code&gt;compiler&lt;/code&gt; are considered &lt;strong&gt;sticky&lt;/strong&gt;. This means that the system issues a warning and rejects the request if a user tries to reload a module residing in any of them. The feature can be disabled by using command-line flag &lt;code&gt;-nostick&lt;/code&gt;.</source>
          <target state="translated">Для предотвращения случайной перегрузки модулей , влияющих на систему выполнения Erlang, каталоги &lt;code&gt;kernel&lt;/code&gt; , &lt;code&gt;stdlib&lt;/code&gt; , и &lt;code&gt;compiler&lt;/code&gt; считаются &lt;strong&gt;липким&lt;/strong&gt; . Это означает, что система выдает предупреждение и отклоняет запрос, если пользователь пытается перезагрузить модуль, находящийся в любом из них. Эту функцию можно отключить с помощью флага командной строки &lt;code&gt;-nostick&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dec616600e41a5b6ef771d942e395567b990586c" translate="yes" xml:space="preserve">
          <source>To prevent late answers (after the time-out) from polluting the message queue of the caller, a middleman process is used to do the calls. Late answers are then discarded when they arrive to a terminated process.</source>
          <target state="translated">Для предотвращения загрязнения очереди сообщений вызывающего абонента поздними ответами (после тайм-аута)используется процесс среднего абонента.Поздние ответы затем отбрасываются,когда они поступают в завершенный процесс.</target>
        </trans-unit>
        <trans-unit id="3c59c8bcb62921917057af6666d0e9bc306363f2" translate="yes" xml:space="preserve">
          <source>To print a list of files to the Erlang shell, use function &lt;code&gt;&lt;a href=&quot;#t-1&quot;&gt;t/1&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#tt-1&quot;&gt;tt/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Чтобы распечатать список файлов в оболочке Erlang, используйте функцию &lt;code&gt;&lt;a href=&quot;#t-1&quot;&gt;t/1&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;#tt-1&quot;&gt;tt/1&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c96078a18d7d337d7863d89fe19020a3f6b4c5e0" translate="yes" xml:space="preserve">
          <source>To print some information in field &lt;code&gt;Comment&lt;/code&gt; on the HTML result page, return &lt;code&gt;{comment, Comment}&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e7f46b82ce549b77ba51c1629aef0ab23feab88" translate="yes" xml:space="preserve">
          <source>To print some information in field &lt;code&gt;Comment&lt;/code&gt; on the HTML result page, return &lt;code&gt;{comment,Comment}&lt;/code&gt;.</source>
          <target state="translated">Чтобы напечатать некоторую информацию в поле &amp;laquo; &lt;code&gt;Comment&lt;/code&gt; на странице результатов HTML, верните &lt;code&gt;{comment,Comment}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5cc0874eca15de116c6433f2f6c8188ae52c6b95" translate="yes" xml:space="preserve">
          <source>To produce sensible results, &lt;code&gt;fprof&lt;/code&gt; tries not to charge any function more than once for ACC time. The instance highest up (with longest duration) in the call stack is chosen.</source>
          <target state="translated">Для получения разумных результатов &lt;code&gt;fprof&lt;/code&gt; старается не заряжать какую-либо функцию более одного раза в течение времени ACC. Выбирается самый верхний (с наибольшей продолжительностью) экземпляр в стеке вызовов.</target>
        </trans-unit>
        <trans-unit id="fdb950e45ab67b6a47da12b4482a70174dcfdd0c" translate="yes" xml:space="preserve">
          <source>To provide customization and extensibility of the request handling of the HTTP servers, most of these steps are handled by one or more modules. These modules can be replaced or removed at runtime and new ones can be added. For each request, all modules are traversed in the order specified by the module directive in the server configuration file. Some parts, mainly the communication- related steps, are considered server core functionality and are not implemented using the Erlang web server API. A description of functionality implemented by the Erlang webserver API is described in &lt;code&gt;&lt;a href=&quot;#Inets_Web_Server_Modules&quot;&gt;Section Inets Web Server Modules&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Чтобы обеспечить настройку и расширяемость обработки запросов на HTTP-серверах, большинство этих шагов обрабатываются одним или несколькими модулями. Эти модули могут быть заменены или удалены во время выполнения, а также могут быть добавлены новые. Для каждого запроса все модули просматриваются в порядке, указанном в директиве модуля в файле конфигурации сервера. Некоторые части, в основном связанные с коммуникацией, считаются функциональными возможностями серверного ядра и не реализуются с помощью API веб-сервера Erlang. Описание функциональности, реализованной API веб-сервера Erlang, приведено в &lt;code&gt;&lt;a href=&quot;#Inets_Web_Server_Modules&quot;&gt;Section Inets Web Server Modules&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7caa6e3412703737187f18930265da85c613b9f8" translate="yes" xml:space="preserve">
          <source>To provide more information for bug detection tools, such as Dialyzer</source>
          <target state="translated">Для получения дополнительной информации об инструментах обнаружения ошибок,таких как Dialyzer</target>
        </trans-unit>
        <trans-unit id="70140cd0cd31cb537fdab4b337a2d1d9434b3002" translate="yes" xml:space="preserve">
          <source>To provide robustness, a distributed Erlang node occasionally polls all its connected neighbors in an attempt to detect failed nodes or communication links. A node that receives such a message is expected to respond immediately with an &lt;code&gt;ERL_TICK&lt;/code&gt; message. This is done automatically by &lt;code&gt;ei_xreceive_msg()&lt;/code&gt;. However, when this has occurred, &lt;code&gt;ei_xreceive_msg&lt;/code&gt; returns &lt;code&gt;ERL_TICK&lt;/code&gt; to the caller without storing a message into the &lt;code&gt;erlang_msg&lt;/code&gt; structure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5563a933e99748f8947b5b13de253c9bebd73132" translate="yes" xml:space="preserve">
          <source>To provide robustness, a distributed Erlang node occasionally polls all its connected neighbors in an attempt to detect failed nodes or communication links. A node that receives such a message is expected to respond immediately with an &lt;code&gt;ERL_TICK&lt;/code&gt; message. This is done automatically by &lt;code&gt;erl_receive()&lt;/code&gt;. However, when this has occurred, &lt;code&gt;erl_receive&lt;/code&gt; returns &lt;code&gt;ERL_TICK&lt;/code&gt; to the caller without storing a message into the &lt;code&gt;ErlMessage&lt;/code&gt; structure.</source>
          <target state="translated">Чтобы обеспечить надежность, распределенный узел Erlang иногда опрашивает всех своих подключенных соседей в попытке обнаружить отказавшие узлы или каналы связи. Ожидается, что узел, получивший такое сообщение, немедленно &lt;code&gt;ERL_TICK&lt;/code&gt; сообщением ERL_TICK . Это делается автоматически с помощью &lt;code&gt;erl_receive()&lt;/code&gt; . Однако, когда это произошло, &lt;code&gt;erl_receive&lt;/code&gt; возвращает &lt;code&gt;ERL_TICK&lt;/code&gt; вызывающей стороне, не сохраняя сообщение в структуре &lt;code&gt;ErlMessage&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c22d22ca8626a0d9ad4822b6abdf3304ff0e2ed1" translate="yes" xml:space="preserve">
          <source>To quickly get started on tracing function calls you can use the following code in the Erlang shell:</source>
          <target state="translated">Для быстрого начала работы с вызовами функций трассировки можно использовать следующий код в оболочке Erlang:</target>
        </trans-unit>
        <trans-unit id="4216c6c1555a4ffc81851d786b4c47388d4033ab" translate="yes" xml:space="preserve">
          <source>To raise the salary to 10 for everyone with a salary less than 10 and return the sum of all raises:</source>
          <target state="translated">Поднять зарплату до 10 для всех,у кого зарплата меньше 10 и вернуть сумму всех повышений:</target>
        </trans-unit>
        <trans-unit id="487f9ae77ed1f6bfc72656beab390cd3da83a3a4" translate="yes" xml:space="preserve">
          <source>To read characters from an I/O device, the following &lt;code&gt;Request&lt;/code&gt;s exist:</source>
          <target state="translated">Для чтения символов с устройства ввода-вывода существуют следующие &lt;code&gt;Request&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="8ebc4e78936132f1c46d3f47b17ef930ad86f68e" translate="yes" xml:space="preserve">
          <source>To read data saved by a previous test case, use macro &lt;code&gt;config&lt;/code&gt; with a &lt;code&gt;saved_config&lt;/code&gt; key as follows:</source>
          <target state="translated">Для того, чтобы прочитать данные , сохраненные в предыдущем тесте, используйте макрос &lt;code&gt;config&lt;/code&gt; с &lt;code&gt;saved_config&lt;/code&gt; ключа следующим образом :</target>
        </trans-unit>
        <trans-unit id="0e65ac5f6db83037a2248f75d84c868aa8830d0a" translate="yes" xml:space="preserve">
          <source>To read test terms, use &lt;code&gt;Tag = tests&lt;/code&gt; (rather than &lt;code&gt;suites&lt;/code&gt;, &lt;code&gt;groups&lt;/code&gt;, or &lt;code&gt;cases&lt;/code&gt;). &lt;code&gt;Value&lt;/code&gt; is then the list of &lt;strong&gt;all&lt;/strong&gt; tests on the form &lt;code&gt;[{Node,Dir,[{TestSpec,GroupsAndCases1},...]},...]&lt;/code&gt;, where &lt;code&gt;GroupsAndCases = [{Group,[Case]}] | [Case]&lt;/code&gt;.</source>
          <target state="translated">Чтобы прочитать условия тестирования, используйте &lt;code&gt;Tag = tests&lt;/code&gt; (а не &lt;code&gt;suites&lt;/code&gt; , &lt;code&gt;groups&lt;/code&gt; или &lt;code&gt;cases&lt;/code&gt; ). &lt;code&gt;Value&lt;/code&gt; будет список &lt;strong&gt;всех&lt;/strong&gt; тестов в форме &lt;code&gt;[{Node,Dir,[{TestSpec,GroupsAndCases1},...]},...]&lt;/code&gt; , где &lt;code&gt;GroupsAndCases = [{Group,[Case]}] | [Case]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f7c528844ef8d79cae8d20604fa518c2950e82af" translate="yes" xml:space="preserve">
          <source>To read the counter value, use &lt;code&gt;&lt;a href=&quot;#trace_info-2&quot;&gt; erlang:trace_info/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5502e1d91075568dbfad6a71c308a3359400e11e" translate="yes" xml:space="preserve">
          <source>To read the counter value, use &lt;code&gt;&lt;a href=&quot;#trace_info-2&quot;&gt;erlang:trace_info/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Чтобы прочитать значение счетчика, используйте &lt;code&gt;&lt;a href=&quot;#trace_info-2&quot;&gt;erlang:trace_info/2&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cf5d7d89573645295c9ea3ad3f20e180a97f562f" translate="yes" xml:space="preserve">
          <source>To read the value of a configuration variable, use function &lt;code&gt;&lt;a href=&quot;ct#get_config-1&quot;&gt;get_config/1,2,3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Чтобы прочитать значение переменной конфигурации, используйте функцию &lt;code&gt;&lt;a href=&quot;ct#get_config-1&quot;&gt;get_config/1,2,3&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="85dbe7571965e09b1298a761ceeca08b4c2e5f97" translate="yes" xml:space="preserve">
          <source>To read the values from the table directly is not always possible. It can be needed to search one or more tables to get the wanted data, and this is done by writing database queries. Queries are always more expensive operations than direct lookups done with &lt;code&gt;mnesia:read&lt;/code&gt;. Therefore, avoid queries in performance-critical code.</source>
          <target state="translated">Считать значения из таблицы напрямую не всегда возможно. Может потребоваться поиск в одной или нескольких таблицах для получения требуемых данных, и это делается путем написания запросов к базе данных. Запросы всегда являются более дорогостоящими операциями, чем прямой поиск, выполняемый с помощью &lt;code&gt;mnesia:read&lt;/code&gt; . Поэтому избегайте запросов в коде, критичном к производительности.</target>
        </trans-unit>
        <trans-unit id="9ca82b142769fd54c89e1f8c4e76ea91942c4a3b" translate="yes" xml:space="preserve">
          <source>To reboot on Windows, &lt;code&gt;HEART_COMMAND&lt;/code&gt; can be set to &lt;code&gt;heart -shutdown&lt;/code&gt; (included in the Erlang delivery) or to any other suitable program that can activate a reboot.</source>
          <target state="translated">Для перезагрузки в Windows &lt;code&gt;HEART_COMMAND&lt;/code&gt; может быть установлен на &lt;code&gt;heart -shutdown&lt;/code&gt; (входит в поставку Erlang) или на любую другую подходящую программу, которая может активировать перезагрузку.</target>
        </trans-unit>
        <trans-unit id="193023780b4eaa20d8ea195a384aafb6f435f70c" translate="yes" xml:space="preserve">
          <source>To reclaim data from the old heap, both young and old heaps are included during the collection and copied to a common &lt;strong&gt;to space&lt;/strong&gt;. Both the &lt;strong&gt;from space&lt;/strong&gt; of the young and old heap are then deallocated and the procedure will start over from the beginning. This type of garbage collection is called a full sweep and is triggered when the size of the area under the high-watermark is larger than the size of the free area of the old heap. It can also be triggered by doing a manual call to &lt;code&gt;&lt;a href=&quot;http://erlang.org/doc/man/erlang.html#garbage_collect-0&quot;&gt;erlang:garbage_collect()&lt;/a&gt;&lt;/code&gt;, or by running into the young garbage collection limit set by &lt;code&gt;&lt;a href=&quot;http://erlang.org/doc/man/erlang.html#spawn_opt-4&quot;&gt;spawn_opt(fun(),[{fullsweep_after, N}])&lt;/a&gt;&lt;/code&gt; where N is the number of young garbage collections to do before forcing a garbage collection of both young and old heap.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="904a52a917c4933054a167b0ca9069fffee62faa" translate="yes" xml:space="preserve">
          <source>To reduce fragmentation within the super carrier, it is good to keep SBCs and MBCs apart. MBCs with their uniform alignment and sizes can be packed very efficiently together. SBCs without demand for aligment can also be allocated quite efficiently together. But mixing them can lead to a lot of memory wasted when we need to create large holes of padding to the next alignment limit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7356ba3e6c5278038b64fa42047a269f1c25742e" translate="yes" xml:space="preserve">
          <source>To reload a driver, the process must have loaded the driver before, that is, there must be an active &lt;code&gt;&lt;a href=&quot;#users&quot;&gt;user&lt;/a&gt;&lt;/code&gt; of the driver in the process.</source>
          <target state="translated">Чтобы перезагрузить драйвер, процесс должен предварительно загрузить драйвер, то есть в процессе должен быть активный &lt;code&gt;&lt;a href=&quot;#users&quot;&gt;user&lt;/a&gt;&lt;/code&gt; драйвера.</target>
        </trans-unit>
        <trans-unit id="d5d80cf56917698c815ead9031a1b70952ad813b" translate="yes" xml:space="preserve">
          <source>To remove a breakpoint some more steps are needed. The idea is to first stage the breakpoint as disabled, do the switch, wait for thread progress and then remove the disabled breakpoint by restoring the original beam instruction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa3cdbff1f4721e1fea3341a44c74cdfddea8582" translate="yes" xml:space="preserve">
          <source>To remove the special meaning from a sequence of characters, put them between \Q and \E. This is different from Perl in that $ and @ are handled as literals in \Q...\E sequences in PCRE, while $ and @ cause variable interpolation in Perl. Notice the following examples:</source>
          <target state="translated">Чтобы убрать особое значение из последовательности символов,поместите их между \Q и \E.Это отличается от Perl тем,что $ и @ обрабатываются как литералы в последовательностях \Q...\E в PCRE,в то время как $ и @ вызывают интерполяцию переменных в Perl.Обратите внимание на следующие примеры:</target>
        </trans-unit>
        <trans-unit id="e4533b5e08e30a08269677e74e6167edc56c190c" translate="yes" xml:space="preserve">
          <source>To render the EEP-48 documentation for an Erlang module you can use &lt;code&gt;shell_docs:render/2&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18463ee935cca0988ac023c8a2bb9233c9fed26c" translate="yes" xml:space="preserve">
          <source>To resolve BIF clashes, use explicit module names or the &lt;code&gt;{no_auto_import,[F/A]}&lt;/code&gt; compiler directive.</source>
          <target state="translated">Чтобы разрешить конфликты BIF, используйте явные имена модулей или директиву компилятора &lt;code&gt;{no_auto_import,[F/A]}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b836fc9905c583f17eeb633ad4676ccd91021746" translate="yes" xml:space="preserve">
          <source>To restrict access further, firewall software must be used.</source>
          <target state="translated">Для дальнейшего ограничения доступа необходимо использовать программное обеспечение брандмауэра.</target>
        </trans-unit>
        <trans-unit id="d8f49586e1a231ba1f54695cd73e9669c2fc73d3" translate="yes" xml:space="preserve">
          <source>To retain backwards compatibility, this module can also be used to start a standalone &lt;code&gt;nteventlog&lt;/code&gt; process which is not part of the OS_Mon supervision tree. When starting such a process, the user has to supply an identifier as well as a callback function to handle the messages.</source>
          <target state="translated">Чтобы сохранить обратную совместимость, этот модуль также можно использовать для запуска автономного процесса &lt;code&gt;nteventlog&lt;/code&gt; , который не является частью дерева наблюдения OS_Mon. При запуске такого процесса пользователь должен предоставить идентификатор, а также функцию обратного вызова для обработки сообщений.</target>
        </trans-unit>
        <trans-unit id="a959b682cb9f11efcb53765708cc1ed01908dbd3" translate="yes" xml:space="preserve">
          <source>To retrieve information about which processes have fixed which tables, use &lt;code&gt;&lt;a href=&quot;#info_2_safe_fixed_monotonic_time&quot;&gt; info(Tab, safe_fixed_monotonic_time)&lt;/a&gt;&lt;/code&gt;. A system with many processes fixing tables can need a monitor that sends alarms when tables have been fixed for too long.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df78eacbc0781784bde23219396762a59c5fc919" translate="yes" xml:space="preserve">
          <source>To retrieve information about which processes have fixed which tables, use &lt;code&gt;&lt;a href=&quot;#info_2_safe_fixed_monotonic_time&quot;&gt;info(Tab, safe_fixed_monotonic_time)&lt;/a&gt;&lt;/code&gt;. A system with many processes fixing tables can need a monitor that sends alarms when tables have been fixed for too long.</source>
          <target state="translated">Чтобы получить информацию о том, какие процессы зафиксировали какие таблицы, используйте &lt;code&gt;&lt;a href=&quot;#info_2_safe_fixed_monotonic_time&quot;&gt;info(Tab, safe_fixed_monotonic_time)&lt;/a&gt;&lt;/code&gt; . Системе с множеством процессов, фиксирующих таблицы, может потребоваться монитор, который отправляет аварийные сигналы, когда таблицы фиксируются слишком долго.</target>
        </trans-unit>
        <trans-unit id="d6e2ab13997144de0b0946f9bce9ea8b713fdb68" translate="yes" xml:space="preserve">
          <source>To retrieve lock statistics information, use &lt;code&gt;lcnt:collect/0,1&lt;/code&gt;. The collect operation will start a &lt;code&gt;lcnt&lt;/code&gt; server if it not already started. All collected data will be built into an Erlang term and uploaded to the server and a duration time will also be uploaded. This duration is the time between &lt;code&gt;lcnt:clear/0,1&lt;/code&gt; and &lt;code&gt;lcnt:collect/0,1&lt;/code&gt;.</source>
          <target state="translated">Чтобы получить информацию о статистике блокировок, используйте &lt;code&gt;lcnt:collect/0,1&lt;/code&gt; . Операция сбора запустит сервер &lt;code&gt;lcnt&lt;/code&gt; , если он еще не запущен. Все собранные данные будут встроены в термин Erlang и загружены на сервер, а также будет загружено время продолжительности. Это время между &lt;code&gt;lcnt:clear/0,1&lt;/code&gt; и &lt;code&gt;lcnt:collect/0,1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ed81e642c8e411bd6b5d4f1ff2f2a981ab28269a" translate="yes" xml:space="preserve">
          <source>To retrieve options, the following request is used:</source>
          <target state="translated">Для извлечения опций используется следующий запрос:</target>
        </trans-unit>
        <trans-unit id="c9ff785694d496350bf52e12cf31257901fe0f9a" translate="yes" xml:space="preserve">
          <source>To retrieve previous command lines, press the &lt;code&gt;Up arrow&lt;/code&gt; or use &lt;code&gt;Ctrl-P&lt;/code&gt;.</source>
          <target state="translated">Чтобы восстановить предыдущие командные строки, нажмите &lt;code&gt;Up arrow&lt;/code&gt; или используйте &lt;code&gt;Ctrl-P&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7fa4079733e0da1dfbe5a6ebd7c48cf9cb0263ef" translate="yes" xml:space="preserve">
          <source>To retrieve the current time offset, call &lt;code&gt;&lt;a href=&quot;erlang#time_offset-0&quot;&gt; erlang:time_offset/0&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="559902e638ff39f33df6bbdca42175eae97e1371" translate="yes" xml:space="preserve">
          <source>To retrieve the current time offset, call &lt;code&gt;&lt;a href=&quot;erlang#time_offset-0&quot;&gt;erlang:time_offset/0&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Чтобы получить текущее смещение времени, вызовите &lt;code&gt;&lt;a href=&quot;erlang#time_offset-0&quot;&gt;erlang:time_offset/0&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2cbf41d37fbb9107d553f0edbf762bf1a41464d8" translate="yes" xml:space="preserve">
          <source>To retrieve the pathname of the script, call &lt;code&gt;&lt;a href=&quot;#script_name-0&quot;&gt; escript:script_name() &lt;/a&gt;&lt;/code&gt; from your script (the pathname is usually, but not always, absolute).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3766f9d946545324fc3caa134e7e2c3cc1ac0495" translate="yes" xml:space="preserve">
          <source>To retrieve the pathname of the script, call &lt;code&gt;&lt;a href=&quot;#script_name_0&quot;&gt;escript:script_name()&lt;/a&gt;&lt;/code&gt; from your script (the pathname is usually, but not always, absolute).</source>
          <target state="translated">Чтобы получить путь к сценарию, вызовите &lt;code&gt;&lt;a href=&quot;#script_name_0&quot;&gt;escript:script_name()&lt;/a&gt;&lt;/code&gt; из вашего сценария (путь обычно, но не всегда, является абсолютным).</target>
        </trans-unit>
        <trans-unit id="2fa3ffd8aedc2e1d61b1e455bb122f9f20bde0a5" translate="yes" xml:space="preserve">
          <source>To retrieve the size of a tuple, either use function &lt;code&gt;erl_size&lt;/code&gt; (which checks the type of the checked term and works for a binary as well as for a tuple) or &lt;code&gt;ERL_TUPLE_SIZE(tuple)&lt;/code&gt; returns the arity of a tuple. &lt;code&gt;erl_size()&lt;/code&gt; does the same thing, but it checks that the argument is a tuple. &lt;code&gt;erl_element(index,tuple)&lt;/code&gt; returns the element corresponding to a given position in the tuple.</source>
          <target state="translated">Чтобы получить размер кортежа, либо используйте функцию &lt;code&gt;erl_size&lt;/code&gt; (которая проверяет тип проверяемого термина и работает как для двоичного, так и для кортежа), либо &lt;code&gt;ERL_TUPLE_SIZE(tuple)&lt;/code&gt; возвращает арность кортежа. &lt;code&gt;erl_size()&lt;/code&gt; делает то же самое, но проверяет, является ли аргумент кортежем. &lt;code&gt;erl_element(index,tuple)&lt;/code&gt; возвращает элемент, соответствующий данной позиции в кортеже.</target>
        </trans-unit>
        <trans-unit id="e48e571028f75c8447b25387e9c4c4797341c527" translate="yes" xml:space="preserve">
          <source>To return a list of the files in a tar file, use function &lt;code&gt;&lt;a href=&quot;#table-1&quot;&gt;table/1&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#table-2&quot;&gt;table/2&lt;/a&gt;&lt;/code&gt;. To print a list of files to the Erlang shell, use function &lt;code&gt;&lt;a href=&quot;#t-1&quot;&gt;t/1&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#tt-1&quot;&gt;tt/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Чтобы вернуть список файлов в файле tar, используйте функцию &lt;code&gt;&lt;a href=&quot;#table-1&quot;&gt;table/1&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;#table-2&quot;&gt;table/2&lt;/a&gt;&lt;/code&gt; . Чтобы распечатать список файлов в оболочке Erlang, используйте функцию &lt;code&gt;&lt;a href=&quot;#t-1&quot;&gt;t/1&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;#tt-1&quot;&gt;tt/1&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="340c1d928e96b2c334351d4a254c0683a554ee08" translate="yes" xml:space="preserve">
          <source>To return a list of the files in a zip archive, use function &lt;code&gt;&lt;a href=&quot;#list_dir-1&quot;&gt;list_dir/1&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#list_dir-2&quot;&gt;list_dir/2&lt;/a&gt;&lt;/code&gt;. They are also available as &lt;code&gt;table/1,2&lt;/code&gt;, to resemble the &lt;code&gt;&lt;a href=&quot;erl_tar&quot;&gt;erl_tar&lt;/a&gt;&lt;/code&gt; module.</source>
          <target state="translated">Чтобы вернуть список файлов в zip-архиве, используйте функцию &lt;code&gt;&lt;a href=&quot;#list_dir-1&quot;&gt;list_dir/1&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;#list_dir-2&quot;&gt;list_dir/2&lt;/a&gt;&lt;/code&gt; . Они также доступны как &lt;code&gt;table/1,2&lt;/code&gt; , чтобы напоминать модуль &lt;code&gt;&lt;a href=&quot;erl_tar&quot;&gt;erl_tar&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ede464349d4cd7d18cdfbdde4b663fdde07fb367" translate="yes" xml:space="preserve">
          <source>To return a timetrap time value (other than a function).</source>
          <target state="translated">Для возврата значения временного интервала (кроме функции).</target>
        </trans-unit>
        <trans-unit id="8b77285912aad5ab1ca119d023b421a0ece59988" translate="yes" xml:space="preserve">
          <source>To return only a few answers, cursors can be used. The following code returns no more than five answers using an ETS table for storing the unique answers:</source>
          <target state="translated">Для возврата только нескольких ответов можно использовать курсоры.Следующий код возвращает не более пяти ответов,используя таблицу ETS для хранения уникальных ответов:</target>
        </trans-unit>
        <trans-unit id="9f1313328915fb09221beb5318c9e4409d5bb780" translate="yes" xml:space="preserve">
          <source>To return your own non-zero exit code, call &lt;code&gt;halt(ExitCode)&lt;/code&gt;, for example:</source>
          <target state="translated">Чтобы вернуть собственный ненулевой код выхода, вызовите &lt;code&gt;halt(ExitCode)&lt;/code&gt; , например:</target>
        </trans-unit>
        <trans-unit id="1b79ecfdca80ef63664553eeb43bf5bf50699646" translate="yes" xml:space="preserve">
          <source>To revert to the old representation of the types, use option &lt;code&gt;legacy_erlang_types&lt;/code&gt;.</source>
          <target state="translated">Чтобы вернуться к старому представлению типов, используйте опцию &lt;code&gt;legacy_erlang_types&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="91cba5ad0a4514ff3580b9b3644134649e4008a3" translate="yes" xml:space="preserve">
          <source>To run DTLS add the option {protocol, dtls} to third argument.</source>
          <target state="translated">Чтобы запустить DTLS,добавьте опцию {protocol,dtls}к третьему аргументу.</target>
        </trans-unit>
        <trans-unit id="6379d836d463079cbc440c281ea46705465f1d9e" translate="yes" xml:space="preserve">
          <source>To run it manually do the following:</source>
          <target state="translated">Чтобы запустить его вручную,сделайте следующее:</target>
        </trans-unit>
        <trans-unit id="adfad10f00ccaf0e104d2a8e3a7d4d9ca3d7a1f4" translate="yes" xml:space="preserve">
          <source>To save &lt;code&gt;Config&lt;/code&gt; data from a test case that is to be skipped, return tuple &lt;code&gt;{skip_and_save,Reason,ConfigList}&lt;/code&gt;.</source>
          <target state="translated">Чтобы сохранить данные &lt;code&gt;Config&lt;/code&gt; из тестового примера, который необходимо пропустить, верните кортеж &lt;code&gt;{skip_and_save,Reason,ConfigList}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="519bc4bce2b33dabd607dc6ed921c16f90d09ddb" translate="yes" xml:space="preserve">
          <source>To save &lt;code&gt;Config&lt;/code&gt; data, return tuple &lt;code&gt;{save_config,ConfigList}&lt;/code&gt; from &lt;code&gt;end_per_testcase&lt;/code&gt; or from the main test case function.</source>
          <target state="translated">Чтобы сохранить данные &lt;code&gt;Config&lt;/code&gt; , верните кортеж &lt;code&gt;{save_config,ConfigList}&lt;/code&gt; из &lt;code&gt;end_per_testcase&lt;/code&gt; или из функции основного тестового примера.</target>
        </trans-unit>
        <trans-unit id="27c3f8d5138cdbd33fa95b3ba65e0753971bf624" translate="yes" xml:space="preserve">
          <source>To scale well, it is a good idea to ensure that the records are evenly distributed over all fragments, including the new one.</source>
          <target state="translated">Для хорошего масштабирования целесообразно обеспечить равномерное распределение записей по всем фрагментам,в том числе и по новому.</target>
        </trans-unit>
        <trans-unit id="4c8083213bdb28df6c894a96e97a47fb6b900182" translate="yes" xml:space="preserve">
          <source>To schedule a dirty NIF for execution, the application has two options:</source>
          <target state="translated">Чтобы запланировать грязный NIF на исполнение,у приложения есть два варианта:</target>
        </trans-unit>
        <trans-unit id="f67e6c0f7313593a134591d24c1deff4f24d43c9" translate="yes" xml:space="preserve">
          <source>To see all supported cipher suites, call &lt;code&gt;ssl:cipher_suites(all) &lt;/code&gt;. The available cipher suites for a connection depend on your certificate. Specific cipher suites that you want your connection to use can also be specified. Default is to use the strongest available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dcc54bfbac822c2d50a90e01df3c8520791a56a" translate="yes" xml:space="preserve">
          <source>To see all supported cipher suites, call &lt;code&gt;ssl:cipher_suites(all)&lt;/code&gt;. The available cipher suites for a connection depend on your certificate. Specific cipher suites that you want your connection to use can also be specified. Default is to use the strongest available.</source>
          <target state="translated">Чтобы увидеть все поддерживаемые наборы шифров, вызовите &lt;code&gt;ssl:cipher_suites(all)&lt;/code&gt; . Доступные наборы шифров для подключения зависят от вашего сертификата. Также можно указать конкретные наборы шифров, которые вы хотите использовать в своем соединении. По умолчанию используется самый сильный из доступных.</target>
        </trans-unit>
        <trans-unit id="faa6a0098bcbb7837e8269c97adc5d1ee4575f3f" translate="yes" xml:space="preserve">
          <source>To see more detailed information about a node, double-click the row, or right-click the row and select &lt;strong&gt;Properties for node &amp;lt;node&amp;gt;&lt;/strong&gt;. From the right-click menu, you can also select &lt;strong&gt;Properties for &amp;lt;port&amp;gt;&lt;/strong&gt;, to open the detailed information window for the controlling port.</source>
          <target state="translated">Чтобы просмотреть более подробную информацию об узле, дважды щелкните строку или щелкните строку правой кнопкой мыши и выберите &amp;laquo; &lt;strong&gt;Свойства&amp;raquo; для узла &amp;lt;узел&amp;gt;&lt;/strong&gt; . Из контекстного меню вы также можете выбрать &lt;strong&gt;Свойства для &amp;lt;port&amp;gt;&lt;/strong&gt; , чтобы открыть окно с подробной информацией для управляющего порта.</target>
        </trans-unit>
        <trans-unit id="9b51fe379feee1d788abaddbf99683f3e6711cc7" translate="yes" xml:space="preserve">
          <source>To see relevant version information for ssl, call &lt;code&gt;ssl:versions/0&lt;/code&gt; .</source>
          <target state="translated">Чтобы увидеть соответствующую информацию о версии для ssl, вызовите &lt;code&gt;ssl:versions/0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b01a4feb6bffa4cdaf907be61314c3a9080a6778" translate="yes" xml:space="preserve">
          <source>To see what &lt;code&gt;-no_prefetch&lt;/code&gt; does, let's first look at the default code generation. Here is the code generated for &lt;code&gt;move_cx&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f1a753c21aa1ee5d67b189d4fc20785c035d677" translate="yes" xml:space="preserve">
          <source>To see what names there are:</source>
          <target state="translated">Посмотреть,какие там имена:</target>
        </trans-unit>
        <trans-unit id="fac884f3e42129e5cef89147e288ea2b8ca2327a" translate="yes" xml:space="preserve">
          <source>To see which filters are currently installed in the system, use &lt;code&gt;&lt;a href=&quot;logger#get_config-0&quot;&gt; logger:get_config/0&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;logger#get_primary_config-0&quot;&gt; logger:get_primary_config/0&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;logger#get_handler_config-1&quot;&gt; logger:get_handler_config/1&lt;/a&gt;&lt;/code&gt;. Filters are listed in the order they are applied, that is, the first filter in the list is applied first, and so on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1859a2e235479aee5e6ed677756b1cdde77dacdb" translate="yes" xml:space="preserve">
          <source>To see which filters are currently installed in the system, use &lt;code&gt;&lt;a href=&quot;logger#get_config-0&quot;&gt;logger:get_config/0&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;logger#get_primary_config-0&quot;&gt;logger:get_primary_config/0&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;logger#get_handler_config-1&quot;&gt;logger:get_handler_config/1&lt;/a&gt;&lt;/code&gt;. Filters are listed in the order they are applied, that is, the first filter in the list is applied first, and so on.</source>
          <target state="translated">Чтобы увидеть, какие фильтры в настоящее время установлены в системе, используйте &lt;code&gt;&lt;a href=&quot;logger#get_config-0&quot;&gt;logger:get_config/0&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;logger#get_primary_config-0&quot;&gt;logger:get_primary_config/0&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;logger#get_handler_config-1&quot;&gt;logger:get_handler_config/1&lt;/a&gt;&lt;/code&gt; . Фильтры перечислены в порядке их применения, т. Е. Первый фильтр в списке применяется первым и так далее.</target>
        </trans-unit>
        <trans-unit id="45a5562edb75b6f3eb1acaabf3b28d155bb31931" translate="yes" xml:space="preserve">
          <source>To select more text than fits in the window, start by selecting a small part in the beginning of the text you want, then use the scrollbar to view the end of the desired selection, point to it, and press the &lt;strong&gt;right&lt;/strong&gt; mouse button. The whole area between your first selection and the point where you right-clicked is included in the selection.</source>
          <target state="translated">Чтобы выделить больше текста, чем умещается в окне, начните с выделения небольшой части в начале нужного текста, затем используйте полосу прокрутки, чтобы просмотреть конец желаемого выделения, наведите на него курсор и нажмите &lt;strong&gt;правую&lt;/strong&gt; кнопку мыши. Вся область между вашим первым выбором и точкой, в которой вы щелкнули правой кнопкой мыши, включается в выборку.</target>
        </trans-unit>
        <trans-unit id="33c0c20ef88e8a421c1e58b4d073cd8cec174df4" translate="yes" xml:space="preserve">
          <source>To select text in the &lt;code&gt;werl&lt;/code&gt; window, press and hold the left mouse button and drag the mouse over the text you want to select. If the selection crosses line boundaries, the selected text consists of complete lines where applicable (just like in a word processor).</source>
          <target state="translated">Чтобы выделить текст в окне &lt;code&gt;werl&lt;/code&gt; , нажмите и удерживайте левую кнопку мыши и перетащите указатель мыши на текст, который хотите выделить. Если выделенный фрагмент пересекает границы строки, выбранный текст состоит из полных строк, где это применимо (как в текстовом процессоре).</target>
        </trans-unit>
        <trans-unit id="baa709b93b3829a0df77188d6fd0ef0592956e57" translate="yes" xml:space="preserve">
          <source>To separate the first elements of the list from the rest of the list, &lt;code&gt;|&lt;/code&gt; is used. &lt;code&gt;First&lt;/code&gt; has got value 1 and &lt;code&gt;TheRest&lt;/code&gt; has got the value [2,3,4,5].</source>
          <target state="translated">Чтобы отделить первые элементы списка от остальной части списка, &lt;code&gt;|&lt;/code&gt; используется. &lt;code&gt;First&lt;/code&gt; имеет значение 1, а &lt;code&gt;TheRest&lt;/code&gt; - значение [2,3,4,5].</target>
        </trans-unit>
        <trans-unit id="99399a80e908574c88a36cb976c633b07714e9f8" translate="yes" xml:space="preserve">
          <source>To set it, set the option &lt;code&gt;{key_cb, {ssh_file, [{optimize,TimeOrSpace}]}&lt;/code&gt; in the call of &lt;code&gt;&lt;a href=&quot;ssh#connect-3&quot;&gt;&quot;ssh:connect/3&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;ssh#daemon-2&quot;&gt;ssh:daemon/2&lt;/a&gt;&lt;/code&gt; or similar function call that initiates an ssh connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c01449dac6b2c1e79ac6f7a80fed6fdc43f67423" translate="yes" xml:space="preserve">
          <source>To set the default handler, that starts initially with the Kernel application, to log to file instead of &lt;code&gt;standard_io&lt;/code&gt;, change the Kernel default logger configuration. Example:</source>
          <target state="translated">Чтобы установить обработчик по умолчанию, который изначально запускается с приложением ядра, для ведения журнала в файл вместо &lt;code&gt;standard_io&lt;/code&gt; , измените конфигурацию регистратора ядра по умолчанию. Пример:</target>
        </trans-unit>
        <trans-unit id="f3ccaabc6c6c384fa4607146b378de54d2e651c3" translate="yes" xml:space="preserve">
          <source>To set the time warp mode, pass command-line argument &lt;code&gt;&lt;a href=&quot;erl#+C_&quot;&gt;+C [no_time_warp|single_time_warp|multi_time_warp]&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;&lt;a href=&quot;erl&quot;&gt;erl(1)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Чтобы установить режим временной деформации, передайте аргумент командной строки &lt;code&gt;&lt;a href=&quot;erl#+C_&quot;&gt;+C [no_time_warp|single_time_warp|multi_time_warp]&lt;/a&gt;&lt;/code&gt; в &lt;code&gt;&lt;a href=&quot;erl&quot;&gt;erl(1)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aa0688ed50c18775a5b27e32c9d7ee33f891bdef" translate="yes" xml:space="preserve">
          <source>To set up Erlang distribution over TLS:</source>
          <target state="translated">Чтобы настроить распределение Эрланга по TLS:</target>
        </trans-unit>
        <trans-unit id="d2cce9d630a9f1b9f9af96de1b5c45472cb5cc3c" translate="yes" xml:space="preserve">
          <source>To set up client/server connections:</source>
          <target state="translated">Для настройки соединений клиент/сервер:</target>
        </trans-unit>
        <trans-unit id="b43c85b2017cddcd0eeca4a7ee756681a2b5279f" translate="yes" xml:space="preserve">
          <source>To set up the Erlang Emacs mode on a UNIX systems, edit/create the file &lt;code&gt;.emacs&lt;/code&gt; in the your home directory.</source>
          <target state="translated">Чтобы настроить режим Erlang Emacs в системах UNIX, отредактируйте / создайте файл &lt;code&gt;.emacs&lt;/code&gt; в вашем домашнем каталоге.</target>
        </trans-unit>
        <trans-unit id="17525f3111c9dc221811cc59d7953bea94c55a6a" translate="yes" xml:space="preserve">
          <source>To set up the Erlang Emacs mode on a Windows systems, edit/create the file &lt;code&gt;.emacs&lt;/code&gt;, the location of the file depends on the configuration of the system. If the &lt;strong&gt;HOME&lt;/strong&gt; environment variable is set, Emacs will look for the &lt;code&gt;.emacs&lt;/code&gt; file in the directory indicated by the &lt;strong&gt;HOME&lt;/strong&gt; variable. If &lt;strong&gt;HOME&lt;/strong&gt; is not set, Emacs will look for the &lt;code&gt;.emacs&lt;/code&gt; file in &lt;code&gt;C:\&lt;/code&gt;.</source>
          <target state="translated">Чтобы настроить режим Erlang Emacs в системах Windows, отредактируйте / создайте файл &lt;code&gt;.emacs&lt;/code&gt; , расположение файла зависит от конфигурации системы. Если установлена переменная среды &lt;strong&gt;HOME&lt;/strong&gt; , Emacs будет искать файл &lt;code&gt;.emacs&lt;/code&gt; в каталоге, указанном переменной &lt;strong&gt;HOME&lt;/strong&gt; . Если &lt;strong&gt;HOME&lt;/strong&gt; не установлен, Emacs будет искать файл &lt;code&gt;.emacs&lt;/code&gt; в &lt;code&gt;C:\&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8b3c1a4e5864dbab572e9a5afb37792b236ea4a2" translate="yes" xml:space="preserve">
          <source>To simplify driver replacement, avoid designing your system so that more than one &lt;code&gt;&lt;a href=&quot;#users&quot;&gt;user&lt;/a&gt;&lt;/code&gt; has the driver loaded.</source>
          <target state="translated">Чтобы упростить замену драйвера, избегайте проектирования вашей системы так, чтобы драйвер загружался более чем одним &lt;code&gt;&lt;a href=&quot;#users&quot;&gt;user&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6657bbbea9ee8b248ced80c3f983940e0a515151" translate="yes" xml:space="preserve">
          <source>To simulate a busy server, you can insert a delay between when &lt;code&gt;epmd&lt;/code&gt; gets notified that a new connection is requested and when the connection gets accepted.</source>
          <target state="translated">Чтобы имитировать загруженный сервер, вы можете вставить задержку между получением &lt;code&gt;epmd&lt;/code&gt; уведомления о запросе нового соединения и принятием соединения.</target>
        </trans-unit>
        <trans-unit id="70ce8a79d8ffb4771e6a29808f1bcbc9c8b69320" translate="yes" xml:space="preserve">
          <source>To specify if the &lt;code&gt;cover&lt;/code&gt; tool is to be stopped after the test is completed (see &lt;code&gt;&lt;a href=&quot;cover_chapter#cover_stop&quot;&gt;Code Coverage Analysis&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">Чтобы указать, следует ли останавливать инструмент &lt;code&gt;cover&lt;/code&gt; после завершения теста (см. &lt;code&gt;&lt;a href=&quot;cover_chapter#cover_stop&quot;&gt;Code Coverage Analysis&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="f982d3b08151a090766a53c8ae58a0af1c7b2c36" translate="yes" xml:space="preserve">
          <source>To specify in which order groups are to be executed (also with respect to test cases that are not part of any group), add tuples on the form &lt;code&gt;{group,GroupName}&lt;/code&gt; to the &lt;code&gt;all/0&lt;/code&gt; list.</source>
          <target state="translated">Чтобы указать, в каком порядке группы должны выполняться (также в отношении тестовых примеров, которые не являются частью какой-либо группы), добавьте кортежи в форме &lt;code&gt;{group,GroupName}&lt;/code&gt; в список &lt;code&gt;all/0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1db9eb6998e57480fd022b5b675c80cbbd9dce31" translate="yes" xml:space="preserve">
          <source>To specify starting line for scanning in document which contains fragments of XML.</source>
          <target state="translated">Указать стартовую строку для сканирования в документе,содержащем фрагменты XML.</target>
        </trans-unit>
        <trans-unit id="f61119c7e1b2cdde6ff6d2fa7c86881726228a8c" translate="yes" xml:space="preserve">
          <source>To specify the modules to be included in the code coverage test, provide a cover specification file. With this file you can point out specific modules or specify directories containing modules to be included in the analysis. You can also specify modules to be excluded from the analysis.</source>
          <target state="translated">Для указания модулей,которые будут включены в тест на покрытие кода,предоставьте файл спецификации покрытия.С помощью этого файла можно указать конкретные модули или указать каталоги,содержащие модули,которые будут включены в анализ.Также можно указать модули,которые будут исключены из анализа.</target>
        </trans-unit>
        <trans-unit id="a7e24433e118f3675a94b0839832059d75700c72" translate="yes" xml:space="preserve">
          <source>To specify which PLT, use option &lt;code&gt;--plt&lt;/code&gt;.</source>
          <target state="translated">Чтобы указать, какой PLT, используйте параметр &lt;code&gt;--plt&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="18d24b6fe052b97ca4a3faae65960b6ff118b488" translate="yes" xml:space="preserve">
          <source>To speed up the execution of &lt;code&gt;&lt;a href=&quot;#install_release-1&quot;&gt;install_release&lt;/a&gt;&lt;/code&gt;, first call &lt;code&gt;&lt;a href=&quot;#check_install_release-1&quot;&gt;check_install_release&lt;/a&gt;&lt;/code&gt;, using option &lt;code&gt;purge&lt;/code&gt;. This does the same check for old code. Then purges all modules that can be soft-purged. The purged modules do then no longer have any old code, and &lt;code&gt;&lt;a href=&quot;#install_release-1&quot;&gt;install_release&lt;/a&gt;&lt;/code&gt; does not need to do the checks.</source>
          <target state="translated">Чтобы ускорить выполнение &lt;code&gt;&lt;a href=&quot;#install_release-1&quot;&gt;install_release&lt;/a&gt;&lt;/code&gt; , сначала вызовите &lt;code&gt;&lt;a href=&quot;#check_install_release-1&quot;&gt;check_install_release&lt;/a&gt;&lt;/code&gt; , используя опцию &lt;code&gt;purge&lt;/code&gt; . Это та же проверка для старого кода. Затем очищает все модули, которые можно очистить мягким способом. В очищенных модулях больше нет старого кода, и &lt;code&gt;&lt;a href=&quot;#install_release-1&quot;&gt;install_release&lt;/a&gt;&lt;/code&gt; не нужно выполнять проверки.</target>
        </trans-unit>
        <trans-unit id="bcb51d3d9e102b6569769ee6c7abeefeaf086476" translate="yes" xml:space="preserve">
          <source>To start a sequential trace, the user must explicitly set the trace token in the process that will send the first information in a sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="881ed36f05e94ae0a21c8004b304eb3bc37646d6" translate="yes" xml:space="preserve">
          <source>To start a sequential trace, the user must explicitly set the trace token in the process that will send the first message in a sequence.</source>
          <target state="translated">Чтобы запустить последовательную трассу,пользователь должен явно задать маркер трассы в процессе,который будет посылать первое сообщение в последовательности.</target>
        </trans-unit>
        <trans-unit id="76f1852c3add5606a83bf5fb3f21588a546c38d4" translate="yes" xml:space="preserve">
          <source>To start a similar tracer on a remote node, use &lt;code&gt;&lt;a href=&quot;#n-1&quot;&gt;n/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Чтобы запустить аналогичный трассировщик на удаленном узле, используйте &lt;code&gt;&lt;a href=&quot;#n-1&quot;&gt;n/1&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="af5676be701d6ebffdcd18fcceb076e666de274b" translate="yes" xml:space="preserve">
          <source>To start a similar tracer on a remote node, use &lt;code&gt;&lt;a href=&quot;#tracer-3&quot;&gt;tracer/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Чтобы запустить аналогичный трассировщик на удаленном узле, используйте &lt;code&gt;&lt;a href=&quot;#tracer-3&quot;&gt;tracer/3&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="069df5419adf0afb2c7538e01048c5b636cbd10a" translate="yes" xml:space="preserve">
          <source>To start all applications specified in the original &lt;code&gt;mysystem.rel&lt;/code&gt; file, use flag &lt;code&gt;-boot&lt;/code&gt; as follows:</source>
          <target state="translated">Чтобы запустить все приложения, указанные в исходном файле &lt;code&gt;mysystem.rel&lt;/code&gt; , используйте флаг &lt;code&gt;-boot&lt;/code&gt; следующим образом:</target>
        </trans-unit>
        <trans-unit id="c6430f32849bacfbbbfdd73794b90f8a5cb5633c" translate="yes" xml:space="preserve">
          <source>To start an &lt;strong&gt;embedded target system&lt;/strong&gt;, the shell script &lt;code&gt;bin/start&lt;/code&gt; is used. The script calls &lt;code&gt;bin/run_erl&lt;/code&gt;, which in turn calls &lt;code&gt;bin/start_erl&lt;/code&gt; (roughly, &lt;code&gt;start_erl&lt;/code&gt; is an embedded variant of &lt;code&gt;erl&lt;/code&gt;).</source>
          <target state="translated">Для запуска &lt;strong&gt;встроенной целевой системы&lt;/strong&gt; используется сценарий оболочки &lt;code&gt;bin/start&lt;/code&gt; . Сценарий вызывает &lt;code&gt;bin/run_erl&lt;/code&gt; , который, в свою очередь, вызывает &lt;code&gt;bin/start_erl&lt;/code&gt; (грубо говоря, &lt;code&gt;start_erl&lt;/code&gt; - это встроенный вариант &lt;code&gt;erl&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="9d22fc7b6b61af9ef2d6145dba2c1c36bbe3774d" translate="yes" xml:space="preserve">
          <source>To start an event manager for handling errors, as described in the previous example, call the following function:</source>
          <target state="translated">Чтобы запустить менеджер событий для обработки ошибок,как описано в предыдущем примере,вызовите следующую функцию:</target>
        </trans-unit>
        <trans-unit id="65443b4fc91dab6b76dab71d1d80de342db77ebd" translate="yes" xml:space="preserve">
          <source>To start the &lt;code&gt;Company&lt;/code&gt; database and get it running on the two specified nodes, enter the following commands:</source>
          <target state="translated">Чтобы запустить базу данных &lt;code&gt;Company&lt;/code&gt; и запустить ее на двух указанных узлах, введите следующие команды:</target>
        </trans-unit>
        <trans-unit id="b812e0ece5117a4dc75569139c24b19927c8e4d0" translate="yes" xml:space="preserve">
          <source>To start the debug enabled runtime system execute:</source>
          <target state="translated">Для запуска отладки включено выполнение системы во время выполнения:</target>
        </trans-unit>
        <trans-unit id="7fffc54b92267ef311f536c196ba13936bd59530" translate="yes" xml:space="preserve">
          <source>To start the interactive shell mode, start an Erlang shell manually and call &lt;code&gt;&lt;a href=&quot;ct#install-1&quot;&gt;ct:install/1&lt;/a&gt;&lt;/code&gt; to install any configuration data you might need (use &lt;code&gt;[]&lt;/code&gt; as argument otherwise). Then call &lt;code&gt;&lt;a href=&quot;ct#start_interactive-0&quot;&gt;ct:start_interactive/0&lt;/a&gt;&lt;/code&gt; to start &lt;code&gt;Common Test&lt;/code&gt;.</source>
          <target state="translated">Чтобы запустить интерактивный режим оболочки, запустите оболочку Erlang вручную и вызовите &lt;code&gt;&lt;a href=&quot;ct#install-1&quot;&gt;ct:install/1&lt;/a&gt;&lt;/code&gt; для установки любых данных конфигурации, которые могут вам понадобиться ( в противном случае используйте &lt;code&gt;[]&lt;/code&gt; в качестве аргумента). Затем вызовите &lt;code&gt;&lt;a href=&quot;ct#start_interactive-0&quot;&gt;ct:start_interactive/0&lt;/a&gt;&lt;/code&gt; , чтобы запустить &lt;code&gt;Common Test&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2407e72a3ed0dce989e1ddb620f5b91d6fb2b5a8" translate="yes" xml:space="preserve">
          <source>To start, open a registry:</source>
          <target state="translated">Чтобы начать,откройте реестр:</target>
        </trans-unit>
        <trans-unit id="37329084650848867e8284198738d0867fe2834a" translate="yes" xml:space="preserve">
          <source>To stop Erlang Top, use function &lt;code&gt;&lt;a href=&quot;etop#stop-0&quot;&gt;etop:stop/0&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Чтобы остановить Erlang Top, используйте функцию &lt;code&gt;&lt;a href=&quot;etop#stop-0&quot;&gt;etop:stop/0&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d0a960f069bc98edbba1ff0928e02093c32ffad4" translate="yes" xml:space="preserve">
          <source>To stop a distributed application, &lt;code&gt;stop/1&lt;/code&gt; must be called on all nodes where it can execute (that is, on all nodes where it has been started). The call to &lt;code&gt;stop/1&lt;/code&gt; on the node where the application currently executes stops its execution. The application is not moved between nodes, as &lt;code&gt;stop/1&lt;/code&gt; is called on the node where the application currently executes before &lt;code&gt;stop/1&lt;/code&gt; is called on the other nodes.</source>
          <target state="translated">Чтобы остановить распределенное приложение, необходимо вызвать &lt;code&gt;stop/1&lt;/code&gt; на всех узлах, где оно может выполняться (то есть на всех узлах, где оно было запущено). Вызов &lt;code&gt;stop/1&lt;/code&gt; на узле, где в настоящее время выполняется приложение, останавливает его выполнение. Приложение не перемещается между узлами, так как &lt;code&gt;stop/1&lt;/code&gt; вызывается на узле, где приложение в настоящее время выполняется, прежде чем &lt;code&gt;stop/1&lt;/code&gt; вызывается на других узлах.</target>
        </trans-unit>
        <trans-unit id="5b81bcf2bbed22c8b9d584525dc2bbe3c5752e21" translate="yes" xml:space="preserve">
          <source>To stop one or more tests, use function &lt;code&gt;&lt;a href=&quot;ct_master#abort-0&quot;&gt;ct_master:abort()&lt;/a&gt;&lt;/code&gt; (to stop all) or &lt;code&gt;&lt;a href=&quot;ct_master#abort-1&quot;&gt;ct_master:abort(Nodes)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Чтобы остановить один или несколько тестов, используйте функцию &lt;code&gt;&lt;a href=&quot;ct_master#abort-0&quot;&gt;ct_master:abort()&lt;/a&gt;&lt;/code&gt; (чтобы остановить все) или &lt;code&gt;&lt;a href=&quot;ct_master#abort-1&quot;&gt;ct_master:abort(Nodes)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b41c55a13290a9e7e9fdbffa7dec308f34e8baa6" translate="yes" xml:space="preserve">
          <source>To stop the Erlang emulator, close the &lt;code&gt;werl&lt;/code&gt; window.</source>
          <target state="translated">Чтобы остановить эмулятор Erlang, закройте окно &lt;code&gt;werl&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="805a085d9254eb5937e5f4dd565453dd8d6af7f9" translate="yes" xml:space="preserve">
          <source>To sum up this section: &lt;strong&gt;Do not use &lt;code&gt;erlang:now/0&lt;/code&gt;.&lt;/strong&gt;</source>
          <target state="translated">Подводя итог этому разделу: &lt;strong&gt;не используйте &lt;code&gt;erlang:now/0&lt;/code&gt; .&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a4c3f23c8b7d11fd791f43a0f06c76ab501c60d6" translate="yes" xml:space="preserve">
          <source>To summarize, &lt;code&gt;my_binary_to_list/1&lt;/code&gt; only needs to create &lt;strong&gt;one&lt;/strong&gt; match context and no sub binaries.</source>
          <target state="translated">Подводя итог, &lt;code&gt;my_binary_to_list/1&lt;/code&gt; необходимо создать только &lt;strong&gt;один&lt;/strong&gt; контекст соответствия и никаких дополнительных двоичных файлов.</target>
        </trans-unit>
        <trans-unit id="76f6d1c7fd98a557f9e7456fd478d01cb713b47b" translate="yes" xml:space="preserve">
          <source>To support Unicode in Erlang, problems in various areas have been addressed. This section describes each area briefly and more thoroughly later in this User's Guide.</source>
          <target state="translated">Для поддержки Юникода в Эрланге были решены проблемы в различных областях.Этот раздел кратко и более подробно описывает каждую из этих областей далее в этом руководстве пользователя.</target>
        </trans-unit>
        <trans-unit id="490eb8f14b00a3993b65db4b76111ea78b82422f" translate="yes" xml:space="preserve">
          <source>To support the debug facilites in &lt;code&gt;sys&lt;/code&gt;, a &lt;strong&gt;debug structure&lt;/strong&gt; is needed. The &lt;code&gt;Deb&lt;/code&gt; term is initialized using &lt;code&gt;sys:debug_options/1&lt;/code&gt;:</source>
          <target state="translated">Для поддержки возможностей отладки в &lt;code&gt;sys&lt;/code&gt; необходима &lt;strong&gt;структура отладки&lt;/strong&gt; . &lt;code&gt;Deb&lt;/code&gt; термин инициализирована с помощью &lt;code&gt;sys:debug_options/1&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="27cb03280676d8f91c2c5f4617f6dcad84db1918" translate="yes" xml:space="preserve">
          <source>To take Erlang down gracefully, see the &lt;code&gt;erl_call(1)&lt;/code&gt; manual page in &lt;code&gt;erl_interface&lt;/code&gt; for details on the use of &lt;code&gt;erl_call&lt;/code&gt;. However, that requires that Erlang runs as a distributed node, which is not always the case.</source>
          <target state="translated">Чтобы изящно &lt;code&gt;erl_call(1)&lt;/code&gt; Erlang, обратитесь к странице справочника erl_call (1) в &lt;code&gt;erl_interface&lt;/code&gt; для получения подробной информации об использовании &lt;code&gt;erl_call&lt;/code&gt; . Однако для этого требуется, чтобы Erlang работал как распределенный узел, что не всегда так.</target>
        </trans-unit>
        <trans-unit id="794cd63b456b29e5f25c1b3a3a1a7cadacb90ffd" translate="yes" xml:space="preserve">
          <source>To test the distribution, the &lt;code&gt;net_kernel:start/1&lt;/code&gt; function can be used. It is useful, as it starts the distribution on a running system, where tracing/debugging can be performed. The &lt;code&gt;net_kernel:start/1&lt;/code&gt; routine takes a list as its single argument. The list first element in the list is to be the node name (without the &quot;@hostname&quot;) as an atom. The second (and last) element is to be one of the atoms &lt;code&gt;shortnames&lt;/code&gt; or &lt;code&gt;longnames&lt;/code&gt;. In the example case, &lt;code&gt;shortnames&lt;/code&gt; is preferred.</source>
          <target state="translated">Для тестирования распределения можно использовать функцию &lt;code&gt;net_kernel:start/1&lt;/code&gt; . Это полезно, поскольку запускает распространение в работающей системе, в которой можно выполнять трассировку / отладку. Процедура &lt;code&gt;net_kernel:start/1&lt;/code&gt; принимает список в качестве единственного аргумента. Первый элемент списка в списке должен быть именем узла (без &quot;@hostname&quot;) в виде атома. Второй (и последний) элемент должен быть одним из &lt;code&gt;shortnames&lt;/code&gt; или &lt;code&gt;longnames&lt;/code&gt; имен атомов . В данном примере предпочтительнее использовать &lt;code&gt;shortnames&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1e25ada887f1b7f960ffeb09cb03b19c929e33ba" translate="yes" xml:space="preserve">
          <source>To the extent that it's practical, support SystemTap on Linux via DTrace provider compatibility.</source>
          <target state="translated">Насколько это практично,поддерживайте SystemTap на Linux через совместимость с DTrace провайдером.</target>
        </trans-unit>
        <trans-unit id="250e07e289185ee8c7406f121d27b06d85769339" translate="yes" xml:space="preserve">
          <source>To the left of the &lt;code&gt;:=&lt;/code&gt; is the name of the specific instruction that should be implemented by the fragments, in this case &lt;code&gt;i_increment&lt;/code&gt;. To the right of &lt;code&gt;:=&lt;/code&gt; is the name of the group with the fragments, followed by a &lt;code&gt;.&lt;/code&gt;. Then the name of the fragments in the group are listed in the order they should be executed. Note that the &lt;code&gt;head&lt;/code&gt; fragment is not listed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fded3aabb510b1e1a75f760a53342f304a3c739e" translate="yes" xml:space="preserve">
          <source>To to start the application (agent and/or manager), the configuration files must be modified and there are two ways of doing this. Either edit the files manually, or run the configuration tool as follows.</source>
          <target state="translated">Для запуска приложения (агента и/или менеджера)необходимо изменить конфигурационные файлы,и это можно сделать двумя способами.Либо отредактировать файлы вручную,либо запустить инструмент конфигурации следующим образом.</target>
        </trans-unit>
        <trans-unit id="840859542432e2ae9a768d1a2567eb03227d2acc" translate="yes" xml:space="preserve">
          <source>To trace function calls, you also need to set up &lt;strong&gt;trace patterns&lt;/strong&gt;. Trace patterns select the function calls to be traced. The number of traced function calls can be further reduced with &lt;strong&gt;match specifications&lt;/strong&gt;. Match specifications can also be used to trigger more information in the trace messages.</source>
          <target state="translated">Чтобы отслеживать вызовы функций, вам также необходимо настроить &lt;strong&gt;шаблоны трассировки&lt;/strong&gt; . Шаблоны трассировки выбирают вызовы функций для трассировки. Количество отслеживаемых вызовов функций может быть дополнительно уменьшено с помощью &lt;strong&gt;спецификаций соответствия&lt;/strong&gt; . Спецификации соответствия также могут использоваться для включения дополнительной информации в сообщениях трассировки.</target>
        </trans-unit>
        <trans-unit id="0c07cb7f2e8d2563df9d5fc9199e90556dc33e70" translate="yes" xml:space="preserve">
          <source>To trigger file compression, its extension must match with the &lt;code&gt;compress&lt;/code&gt; condition and must not match the &lt;code&gt;uncompress&lt;/code&gt; condition. For example, if &lt;code&gt;compress&lt;/code&gt; is set to &lt;code&gt;[&quot;gif&quot;, &quot;jpg&quot;]&lt;/code&gt; and &lt;code&gt;uncompress&lt;/code&gt; is set to &lt;code&gt;[&quot;jpg&quot;]&lt;/code&gt;, only files with extension &lt;code&gt;&quot;gif&quot;&lt;/code&gt; are compressed.</source>
          <target state="translated">Чтобы запустить сжатие файла, его расширение должно соответствовать условию &lt;code&gt;compress&lt;/code&gt; и не должно соответствовать условию &lt;code&gt;uncompress&lt;/code&gt; . Например, если для параметра &lt;code&gt;compress&lt;/code&gt; установлено значение &lt;code&gt;[&quot;gif&quot;, &quot;jpg&quot;]&lt;/code&gt; а для параметра &lt;code&gt;uncompress&lt;/code&gt; установлено значение &lt;code&gt;[&quot;jpg&quot;]&lt;/code&gt; , сжимаются только файлы с расширением &lt;code&gt;&quot;gif&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bdcf647abab37b8b3f8542efaeba10430ea6f745" translate="yes" xml:space="preserve">
          <source>To turn off the Debugger stack trace facility, select option &lt;strong&gt;Stack Off&lt;/strong&gt;.</source>
          <target state="translated">Чтобы отключить средство трассировки стека отладчика, выберите опцию &lt;strong&gt;Stack Off&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="25889e4ee1555771488e4d2de1a7bf2d51b5a3ab" translate="yes" xml:space="preserve">
          <source>To turn off warnings for improper lists, add the following line to the source file:</source>
          <target state="translated">Чтобы отключить предупреждения о неправильных списках,добавьте следующую строку в исходный файл:</target>
        </trans-unit>
        <trans-unit id="8ed98f94cb168a3368774c5de90ad9aac72676b6" translate="yes" xml:space="preserve">
          <source>To understand the behavior of &lt;code&gt;Mnesia&lt;/code&gt; at startup, it is essential to understand how &lt;code&gt;Mnesia&lt;/code&gt; reacts when it loses contact with &lt;code&gt;Mnesia&lt;/code&gt; on another node. At this stage, &lt;code&gt;Mnesia&lt;/code&gt; cannot distinguish between a communication failure and a &quot;normal&quot; node-down. When this occurs, &lt;code&gt;Mnesia&lt;/code&gt; assumes that the other node is no longer running, whereas, in reality, the communication between the nodes has failed.</source>
          <target state="translated">Чтобы понять поведение &lt;code&gt;Mnesia&lt;/code&gt; при запуске, важно понять, как &lt;code&gt;Mnesia&lt;/code&gt; реагирует, когда теряет контакт с &lt;code&gt;Mnesia&lt;/code&gt; на другом узле. На этом этапе &lt;code&gt;Mnesia&lt;/code&gt; не может отличить сбой связи от &amp;laquo;нормального&amp;raquo; отказа узла. Когда это происходит, &lt;code&gt;Mnesia&lt;/code&gt; предполагает, что другой узел больше не работает, тогда как на самом деле связь между узлами не удалась.</target>
        </trans-unit>
        <trans-unit id="57ca1753f443dcffddf87cab0a01f1c5e59426d5" translate="yes" xml:space="preserve">
          <source>To understand this text, you also have to look at the &lt;code&gt;yacc&lt;/code&gt; documentation in the UNIX(TM) manual. This is most probably necessary in order to understand the idea of a parser generator, and the principle and problems of LALR parsing with finite look-ahead.</source>
          <target state="translated">Чтобы понять этот текст, вам также необходимо изучить документацию по &lt;code&gt;yacc&lt;/code&gt; в руководстве UNIX (TM). Это, скорее всего, необходимо для понимания идеи генератора синтаксического анализатора, а также принципа и проблем синтаксического анализа LALR с конечным упреждением.</target>
        </trans-unit>
        <trans-unit id="257c2b917b12b68949e96a87bad80aa179cede62" translate="yes" xml:space="preserve">
          <source>To understand what is discussed and examplified here, we recommended you to first read section &lt;code&gt;&lt;a href=&quot;basics_chapter#basics&quot;&gt;Common Test Basics&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Чтобы понять, что здесь обсуждается и проверяется, мы рекомендуем вам сначала прочитать раздел &lt;code&gt;&lt;a href=&quot;basics_chapter#basics&quot;&gt;Common Test Basics&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c214f91d106ddf617278abe4918056162b083c9a" translate="yes" xml:space="preserve">
          <source>To unload it use crypto:ensure_engine_unloaded/1 which removes the ID from the internal list before unloading the engine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0d1537131067c43e7df0631cf8f01ef0dfa991f" translate="yes" xml:space="preserve">
          <source>To unregister a name:</source>
          <target state="translated">Чтобы отменить регистрацию имени:</target>
        </trans-unit>
        <trans-unit id="2d2a671d4b2f16d7f91c51ff47e2d4c92fb46607" translate="yes" xml:space="preserve">
          <source>To unregister a node you have published, you should close the descriptor that was returned by &lt;code&gt;ei_publish()&lt;/code&gt;.</source>
          <target state="translated">Чтобы отменить регистрацию опубликованного вами узла, вы должны закрыть дескриптор, возвращенный &lt;code&gt;ei_publish()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f3c7fc1b435a8defaf215479b11edd52150783be" translate="yes" xml:space="preserve">
          <source>To unregister a node you have published, you should instead close the descriptor that was returned by &lt;code&gt;ei_publish()&lt;/code&gt;.</source>
          <target state="translated">Чтобы отменить регистрацию опубликованного вами узла, вы должны вместо этого закрыть дескриптор, возвращенный &lt;code&gt;ei_publish()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2b518c28463d854508111ea65fca22a57c4c2cf2" translate="yes" xml:space="preserve">
          <source>To unregister with EPMD, simply close the returned descriptor.</source>
          <target state="translated">Чтобы отменить регистрацию в EPMD,просто закройте возвращаемый дескриптор.</target>
        </trans-unit>
        <trans-unit id="769d2fa177fb9e7db683f9606bab6d12279b1eda" translate="yes" xml:space="preserve">
          <source>To unregister with EPMD, simply close the returned descriptor. Do not use &lt;code&gt;ei_unpublish()&lt;/code&gt;, which is deprecated anyway.</source>
          <target state="translated">Чтобы отменить регистрацию в EPMD, просто закройте возвращенный дескриптор. Не используйте &lt;code&gt;ei_unpublish()&lt;/code&gt; , который в любом случае устарел.</target>
        </trans-unit>
        <trans-unit id="84b4679c04fbfbaa9588413bb040c5640c41eacc" translate="yes" xml:space="preserve">
          <source>To upgrade &lt;code&gt;ch_app&lt;/code&gt; from &lt;code&gt;&quot;1&quot;&lt;/code&gt; to &lt;code&gt;&quot;2&quot;&lt;/code&gt; (and to downgrade from &lt;code&gt;&quot;2&quot;&lt;/code&gt; to &lt;code&gt;&quot;1&quot;&lt;/code&gt;), you only need to load the new (old) version of the &lt;code&gt;ch3&lt;/code&gt; callback module. Create the application upgrade file &lt;code&gt;ch_app.appup&lt;/code&gt; in the &lt;code&gt;ebin&lt;/code&gt; directory:</source>
          <target state="translated">Чтобы обновить &lt;code&gt;ch_app&lt;/code&gt; с &lt;code&gt;&quot;1&quot;&lt;/code&gt; до &lt;code&gt;&quot;2&quot;&lt;/code&gt; (и для понижения с &lt;code&gt;&quot;2&quot;&lt;/code&gt; до &lt;code&gt;&quot;1&quot;&lt;/code&gt; ), вам нужно только загрузить новую (старую) версию &lt;code&gt;ch3&lt;/code&gt; обратного вызова ch3 . Создайте файл обновления приложения &lt;code&gt;ch_app.appup&lt;/code&gt; в каталоге &lt;code&gt;ebin&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="9c873673fdbf39b186e8a04df81cc090fc729ac9" translate="yes" xml:space="preserve">
          <source>To upgrade a TCP/IP connection to a TLS connection, the client and server must agree to do so. The agreement can be accomplished by using a protocol, for example, the one used by HTTP specified in RFC 2817.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f84bf7f2f7861b776ed5c35e1c7e32583ad5a627" translate="yes" xml:space="preserve">
          <source>To upgrade a TCP/IP connection to an SSL connection, the client and server must agree to do so. The agreement can be accomplished by using a protocol, for example, the one used by HTTP specified in RFC 2817.</source>
          <target state="translated">Для обновления TCP/IP соединения до SSL соединения клиент и сервер должны согласиться на это.Согласие может быть достигнуто с помощью протокола,например,используемого HTTP,указанного в RFC 2817.</target>
        </trans-unit>
        <trans-unit id="cd3aeb788d6c5ac30b033b2b969b7da351f17b7f" translate="yes" xml:space="preserve">
          <source>To upgrade to a TLS connection:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a48c54fe1c18b840875cc0d8882a5c73ce80e02" translate="yes" xml:space="preserve">
          <source>To upgrade to an SSL connection:</source>
          <target state="translated">Для перехода на SSL-соединение:</target>
        </trans-unit>
        <trans-unit id="ea7b425544bac4acf2d4b893b416d117aa7a59a1" translate="yes" xml:space="preserve">
          <source>To use Debugger, the basic steps are as follows:</source>
          <target state="translated">Для использования Debugger необходимо выполнить следующие основные действия:</target>
        </trans-unit>
        <trans-unit id="68fe3f1ab7b67db6b1b7b0c723fb8ab99d7ba09b" translate="yes" xml:space="preserve">
          <source>To use a literal &lt;code&gt;*&lt;/code&gt; character as &lt;code&gt;Pad&lt;/code&gt;, it must be passed as an argument:</source>
          <target state="translated">Чтобы использовать буквальный символ &lt;code&gt;*&lt;/code&gt; в качестве &lt;code&gt;Pad&lt;/code&gt; , его необходимо передать как аргумент:</target>
        </trans-unit>
        <trans-unit id="818b4f8cff2ed9c56e379af0203202630de033f4" translate="yes" xml:space="preserve">
          <source>To use any of the &lt;code&gt;Erl_Interface&lt;/code&gt; functions, include the following line in your code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfffbe9810584067e7d160ff8bce5770cf34f906" translate="yes" xml:space="preserve">
          <source>To use any of the &lt;code&gt;Erl_Interface&lt;/code&gt; functions, include the following lines in your code:</source>
          <target state="translated">Чтобы использовать любую из функций &lt;code&gt;Erl_Interface&lt;/code&gt; , включите в свой код следующие строки:</target>
        </trans-unit>
        <trans-unit id="e865188bf7a27ada82ac1699872c1f2decf0665c" translate="yes" xml:space="preserve">
          <source>To use encrypted debug information, a key must be provided to the compiler and &lt;code&gt;beam_lib&lt;/code&gt;. The key is specified as a string. It is recommended that the string contains at least 32 characters and that both upper and lower case letters as well as digits and special characters are used.</source>
          <target state="translated">Чтобы использовать зашифрованную отладочную информацию, необходимо предоставить ключ компилятору и &lt;code&gt;beam_lib&lt;/code&gt; . Ключ указывается в виде строки. Рекомендуется, чтобы строка содержала не менее 32 символов и чтобы использовались буквы верхнего и нижнего регистра, а также цифры и специальные символы.</target>
        </trans-unit>
        <trans-unit id="eb23e34638bd9093d10ee97bb3a0e372512e3fc8" translate="yes" xml:space="preserve">
          <source>To use event handlers written for &lt;code&gt;error_logger&lt;/code&gt;, just add your event handler with</source>
          <target state="translated">Чтобы использовать обработчики событий, написанные для &lt;code&gt;error_logger&lt;/code&gt; , просто добавьте обработчик событий с помощью</target>
        </trans-unit>
        <trans-unit id="0bdc7b110d3152a509f4766a597abefcfa1ed87d" translate="yes" xml:space="preserve">
          <source>To use the Erlang shell to run our test, you can evaluate the following call:</source>
          <target state="translated">Чтобы использовать оболочку Erlang для выполнения нашего теста,вы можете оценить следующий вызов:</target>
        </trans-unit>
        <trans-unit id="0f4462aadd9025ab266be32a2032bf299d0b46f7" translate="yes" xml:space="preserve">
          <source>To use the disk_log handler instead of the default standard handler when starting an Erlang node, change the Kernel default logger to use &lt;code&gt;logger_disk_log_h&lt;/code&gt;. Example:</source>
          <target state="translated">Чтобы использовать обработчик disk_log вместо стандартного обработчика по умолчанию при запуске узла Erlang, измените &lt;code&gt;logger_disk_log_h&lt;/code&gt; журнала ядра по умолчанию на использование logger_disk_log_h . Пример:</target>
        </trans-unit>
        <trans-unit id="48d471ac0f461634b1a46f1744c359ab442ae3b1" translate="yes" xml:space="preserve">
          <source>To use the functions &lt;code&gt;&lt;a href=&quot;ct#break-1&quot;&gt;ct:break/1,2&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;ct#continue-0&quot;&gt;ct:continue/0,1&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;release_shell&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be set to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Чтобы использовать функции &lt;code&gt;&lt;a href=&quot;ct#break-1&quot;&gt;ct:break/1,2&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;ct#continue-0&quot;&gt;ct:continue/0,1&lt;/a&gt;&lt;/code&gt; , для &lt;code&gt;release_shell&lt;/code&gt; &lt;strong&gt;должно&lt;/strong&gt; быть установлено значение &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d698f2ffb5c429ffda0ac4557a52f1824b92cf1d" translate="yes" xml:space="preserve">
          <source>To use the pseudo functions triggering the translation, ensure to include the header file &lt;code&gt;ms_transform.hrl&lt;/code&gt; in the source code. Failure to do so possibly results in runtime errors rather than compile time, as the expression can be valid as a plain Erlang program without translation.</source>
          <target state="translated">Чтобы использовать &lt;code&gt;ms_transform.hrl&lt;/code&gt; запускающие перевод, убедитесь, что в исходный код включен файл заголовка ms_transform.hrl . Неспособность сделать это может привести к ошибкам времени выполнения, а не времени компиляции, поскольку выражение может быть действительным как простая программа на Erlang без перевода.</target>
        </trans-unit>
        <trans-unit id="03f67b62fca597162026995f6815a18764fa1055" translate="yes" xml:space="preserve">
          <source>To use the real implementation, we must recompile the MIB and load it into the agent.</source>
          <target state="translated">Чтобы использовать реальную реализацию,мы должны перекомпилировать MIB и загрузить его в агент.</target>
        </trans-unit>
        <trans-unit id="d6519596ccb4c5e8b4c324416978687438404d59" translate="yes" xml:space="preserve">
          <source>To use this function for adding drivers residing in dynamically loaded code is dangerous. If the driver code for the added driver resides in the same dynamically loaded module (that is, &lt;code&gt;.so&lt;/code&gt; file) as a normal dynamically loaded driver (loaded with the &lt;code&gt;erl_ddll&lt;/code&gt; interface), the caller is to call &lt;code&gt;&lt;a href=&quot;#driver_lock_driver&quot;&gt; driver_lock_driver&lt;/a&gt;&lt;/code&gt; before adding driver entries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="002952436d64ac58aa3de156b66387b85dc58e15" translate="yes" xml:space="preserve">
          <source>To use this function for adding drivers residing in dynamically loaded code is dangerous. If the driver code for the added driver resides in the same dynamically loaded module (that is, &lt;code&gt;.so&lt;/code&gt; file) as a normal dynamically loaded driver (loaded with the &lt;code&gt;erl_ddll&lt;/code&gt; interface), the caller is to call &lt;code&gt;&lt;a href=&quot;#driver_lock_driver&quot;&gt;driver_lock_driver&lt;/a&gt;&lt;/code&gt; before adding driver entries.</source>
          <target state="translated">Использование этой функции для добавления драйверов, находящихся в динамически загружаемом коде, опасно. Если код драйвера для добавленного драйвера находится в том же динамически загружаемом модуле (то есть в файле &lt;code&gt;.so&lt;/code&gt; ), что и обычный динамически загружаемый драйвер (загруженный с интерфейсом &lt;code&gt;erl_ddll&lt;/code&gt; ), вызывающий должен вызвать &lt;code&gt;&lt;a href=&quot;#driver_lock_driver&quot;&gt;driver_lock_driver&lt;/a&gt;&lt;/code&gt; перед добавлением записей драйвера.</target>
        </trans-unit>
        <trans-unit id="06c29935ed139b37075ecc2db062cd1dfb073f59" translate="yes" xml:space="preserve">
          <source>To use this mode, ensure that all Erlang code that will execute in both phases is &lt;code&gt;&lt;a href=&quot;#Time_Warp_Safe_Code&quot;&gt;time warp safe&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Чтобы использовать этот режим, убедитесь, что весь код Erlang, который будет выполняться на обеих фазах, &lt;code&gt;&lt;a href=&quot;#Time_Warp_Safe_Code&quot;&gt;time warp safe&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="af48a71f55d5ffa8ab787fda3994e5f52dec889c" translate="yes" xml:space="preserve">
          <source>To use this mode, ensure that all Erlang code that will execute on the runtime system is &lt;code&gt;&lt;a href=&quot;#Time_Warp_Safe_Code&quot;&gt;time warp safe&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Чтобы использовать этот режим, убедитесь, что весь код Erlang, который будет выполняться в системе &lt;code&gt;&lt;a href=&quot;#Time_Warp_Safe_Code&quot;&gt;time warp safe&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="847b164165eea8a7ac372dcfbedc4f6fbc9d1539" translate="yes" xml:space="preserve">
          <source>To use this program, you need to:</source>
          <target state="translated">Чтобы использовать эту программу,вам нужно:</target>
        </trans-unit>
        <trans-unit id="6a7e1aba43c701aa62b9243d847578c39295abed" translate="yes" xml:space="preserve">
          <source>To use this with threads and asynchronous routines, create a pipe on Unix and an &lt;code&gt;Event&lt;/code&gt; on Windows. When the routine completes, write to the pipe (use &lt;code&gt;SetEvent&lt;/code&gt; on Windows), this makes the emulator call &lt;code&gt;ready_input&lt;/code&gt; or &lt;code&gt;ready_output&lt;/code&gt;.</source>
          <target state="translated">Чтобы использовать это с потоками и асинхронными подпрограммами, создайте конвейер в Unix и &lt;code&gt;Event&lt;/code&gt; в Windows. Когда процедура завершится, напишите в канал (используйте &lt;code&gt;SetEvent&lt;/code&gt; в Windows), это заставит эмулятор вызвать &lt;code&gt;ready_input&lt;/code&gt; или &lt;code&gt;ready_output&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="01b8773f5a669a11ac026442b354c5f873c02791" translate="yes" xml:space="preserve">
          <source>To validate the configuration strings, the callback module is to have function &lt;code&gt;Callback:check_parameter/1&lt;/code&gt; exported.</source>
          <target state="translated">Для проверки строк конфигурации в модуле обратного вызова должна быть экспортирована функция &lt;code&gt;Callback:check_parameter/1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fe32e508b386431ed270d6f4036397947cfdf797" translate="yes" xml:space="preserve">
          <source>To verify that everything is ok you should open &lt;code&gt;$ERL_TOP/release/tests/test_server/index.html&lt;/code&gt; in your web browser and make sure that there are zero failed test cases.</source>
          <target state="translated">Чтобы убедиться, что все в порядке, вы должны открыть &lt;code&gt;$ERL_TOP/release/tests/test_server/index.html&lt;/code&gt; в своем веб-браузере и убедиться, что нет ни одного неудачного тестового примера.</target>
        </trans-unit>
        <trans-unit id="816f7f291832fe5da7fded15c95dc5548b14b744" translate="yes" xml:space="preserve">
          <source>To verify that lock counting is enabled check that &lt;code&gt;[lock-counting]&lt;/code&gt; appears in the status text when the VM is started.</source>
          <target state="translated">Чтобы проверить, включен ли подсчет блокировок, убедитесь, что &lt;code&gt;[lock-counting]&lt;/code&gt; отображается в тексте состояния при запуске виртуальной машины.</target>
        </trans-unit>
        <trans-unit id="d79825059ed41d40f1eb38140584c29e49d43c05" translate="yes" xml:space="preserve">
          <source>To view detailed information about a specific module, double- click the row, or right-click it and select &lt;strong&gt;Properties for &amp;lt;mod&amp;gt;&lt;/strong&gt;.</source>
          <target state="translated">Чтобы просмотреть подробную информацию о конкретном модуле, дважды щелкните строку или щелкните ее правой кнопкой мыши и выберите &lt;strong&gt;Свойства для &amp;lt;mod&amp;gt;&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="e3ee7cdc20eb34f07a508b3dffa9cad2da375fa2" translate="yes" xml:space="preserve">
          <source>To view detailed information about a specific process, double- click the row in the list, or right-click the row and select &lt;strong&gt;Properties for &amp;lt;pid&amp;gt;&lt;/strong&gt;.</source>
          <target state="translated">Чтобы просмотреть подробную информацию о конкретном процессе, дважды щелкните строку в списке или щелкните строку правой кнопкой мыши и выберите &amp;laquo; &lt;strong&gt;Свойства&amp;raquo; для &amp;lt;pid&amp;gt;&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="f9a2be366e30f8af91ea3157c65f941baf52859b" translate="yes" xml:space="preserve">
          <source>To view more details about a specific port, double-click the row or right-click it and select &lt;strong&gt;Properties for &amp;lt;port&amp;gt;&lt;/strong&gt;. From the right-click menu, you can also select &lt;strong&gt;Properties for &amp;lt;pid&amp;gt;&lt;/strong&gt;, where &lt;code&gt;&amp;lt;pid&amp;gt;&lt;/code&gt; is the process connected to the port.</source>
          <target state="translated">Чтобы просмотреть дополнительные сведения о конкретном порте, дважды щелкните строку или щелкните ее правой кнопкой мыши и выберите &lt;strong&gt;Свойства для &amp;lt;порт&amp;gt;&lt;/strong&gt; . Из контекстного меню вы также можете выбрать &amp;laquo; &lt;strong&gt;Свойства&amp;raquo; для &amp;lt;pid&amp;gt;&lt;/strong&gt; , где &lt;code&gt;&amp;lt;pid&amp;gt;&lt;/code&gt; - это процесс, подключенный к порту.</target>
        </trans-unit>
        <trans-unit id="7c537dc716e918cf2d036be1a35d64af3e41081c" translate="yes" xml:space="preserve">
          <source>To view the result of a code coverage test, click the button labeled &quot;COVER LOG&quot; in the top-level index page for the test run.</source>
          <target state="translated">Чтобы просмотреть результат теста на покрытие кода,нажмите кнопку с надписью &quot;COVER LOG&quot; на главной странице индекса верхнего уровня.</target>
        </trans-unit>
        <trans-unit id="254465b8f25a6c97a3848f10e6162c3f124f7768" translate="yes" xml:space="preserve">
          <source>To view the result of macro expansion, a module can be compiled with the &lt;code&gt;'P'&lt;/code&gt; option. &lt;code&gt;compile:file(File, ['P'])&lt;/code&gt;. This produces a listing of the parsed code after preprocessing and parse transforms, in the file &lt;code&gt;File.P&lt;/code&gt;.</source>
          <target state="translated">Чтобы просмотреть результат расширения макроса, модуль может быть скомпилирован с опцией &lt;code&gt;'P'&lt;/code&gt; . &lt;code&gt;compile:file(File, ['P'])&lt;/code&gt; . Это создает список разобранной кода после предварительной обработки и синтаксического анализа преобразований, в файле &lt;code&gt;File.P&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2863e2789d755b777cac4c624de8395bb36a4b90" translate="yes" xml:space="preserve">
          <source>To visualize the structure of a syntax tree, you can use the function &lt;code&gt;merl:show(T)&lt;/code&gt;, which prints a summary. For example, entering</source>
          <target state="translated">Чтобы визуализировать структуру синтаксического дерева, вы можете использовать функцию &lt;code&gt;merl:show(T)&lt;/code&gt; , которая печатает сводку. Например, ввод</target>
        </trans-unit>
        <trans-unit id="420f383fbb828ef9ba78290b1722db9b09af55f0" translate="yes" xml:space="preserve">
          <source>To work with binaries in ISO Latin-1 encoding, use the &lt;code&gt;file&lt;/code&gt; module instead.</source>
          <target state="translated">Для работы с двоичными файлами в кодировке ISO Latin-1 используйте вместо этого &lt;code&gt;file&lt;/code&gt; модуль.</target>
        </trans-unit>
        <trans-unit id="9368499385b79811c6e242f08579ba92f510e423" translate="yes" xml:space="preserve">
          <source>To write a function that inserts an employee record into the database, there must be an &lt;code&gt;at_dep&lt;/code&gt; record and a set of &lt;code&gt;in_proj&lt;/code&gt; records inserted. Examine the following code used to complete this action:</source>
          <target state="translated">Чтобы написать функцию, которая вставляет запись о сотруднике в базу данных, должна быть &lt;code&gt;at_dep&lt;/code&gt; запись at_dep и набор записей &lt;code&gt;in_proj&lt;/code&gt; . Изучите следующий код, используемый для выполнения этого действия:</target>
        </trans-unit>
        <trans-unit id="870bc92e8fb7bb157e38a72767baac7170c3e8c4" translate="yes" xml:space="preserve">
          <source>To write functions that manipulate this data, remember the following:</source>
          <target state="translated">Чтобы записать функции,которые манипулируют этими данными,запомните следующее:</target>
        </trans-unit>
        <trans-unit id="49f4806c44f9e994d710db8f38c6399e247bca8a" translate="yes" xml:space="preserve">
          <source>To write your own client channel handler, use the behaviour &lt;code&gt;&lt;a href=&quot;ssh_client_channel&quot;&gt;ssh_client_channel&lt;/a&gt;&lt;/code&gt;. For server channel handlers use &lt;code&gt;&lt;a href=&quot;ssh_server_channel&quot;&gt;ssh_server_channel&lt;/a&gt;&lt;/code&gt; behaviour (replaces ssh_daemon_channel).</source>
          <target state="translated">Чтобы написать собственный обработчик клиентского канала, используйте поведение &lt;code&gt;&lt;a href=&quot;ssh_client_channel&quot;&gt;ssh_client_channel&lt;/a&gt;&lt;/code&gt; . Для обработчиков серверных каналов используйте поведение &lt;code&gt;&lt;a href=&quot;ssh_server_channel&quot;&gt;ssh_server_channel&lt;/a&gt;&lt;/code&gt; (заменяет ssh_daemon_channel).</target>
        </trans-unit>
        <trans-unit id="f57b7cb4b41a526a6b5b1f9a162d27692ca9284c" translate="yes" xml:space="preserve">
          <source>Today there are no good ways of solving this problem and therefore the eval scheme can be removed in future release of &lt;code&gt;Inets&lt;/code&gt;.</source>
          <target state="translated">На сегодняшний день нет хороших способов решения этой проблемы, и поэтому схема eval может быть удалена в будущих версиях &lt;code&gt;Inets&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7edb68e9d3675d0ca9b5133bc31d9005c2bc6f47" translate="yes" xml:space="preserve">
          <source>Too long external command.</source>
          <target state="translated">Слишком длинная внешняя команда.</target>
        </trans-unit>
        <trans-unit id="306ef8d015fe20a0dcd8430c726d60b2b800ac4a" translate="yes" xml:space="preserve">
          <source>Tool Summary</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b53132babe55797aa27d88cc20db666d7ee40a5b" translate="yes" xml:space="preserve">
          <source>Tools that need to know about optional callback functions can call &lt;code&gt;Behaviour:behaviour_info(optional_callbacks)&lt;/code&gt; to get a list of all optional callback functions.</source>
          <target state="translated">Инструменты, которым необходимо знать о дополнительных функциях обратного вызова, могут вызывать &lt;code&gt;Behaviour:behaviour_info(optional_callbacks)&lt;/code&gt; чтобы получить список всех дополнительных функций обратного вызова.</target>
        </trans-unit>
        <trans-unit id="dd3a74b17c3a112fdfc9b4f6b58e1ba85a6ec96d" translate="yes" xml:space="preserve">
          <source>Top pad size (in kilobytes). This is the amount of extra memory that is allocated by &lt;code&gt;malloc&lt;/code&gt; when &lt;code&gt;sbrk&lt;/code&gt; is called to get more memory from the operating system. Defaults to &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">Размер верхней панели (в килобайтах). Это объем дополнительной памяти, которая выделяется &lt;code&gt;malloc&lt;/code&gt; при &lt;code&gt;sbrk&lt;/code&gt; для получения дополнительной памяти от операционной системы. По умолчанию &lt;code&gt;0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8688b9f02fc264d86ffee1ffffdff34e5d5032b9" translate="yes" xml:space="preserve">
          <source>Total amount of data allocated by an Erlang node</source>
          <target state="translated">Общий объем данных,выделенных узлом Эрланг</target>
        </trans-unit>
        <trans-unit id="15b379311d06275e570d3c8276f0c74ac315b01b" translate="yes" xml:space="preserve">
          <source>Total and own</source>
          <target state="translated">Всего и собственного</target>
        </trans-unit>
        <trans-unit id="c2270f01832f95299124e422ec6e4ca5b86124d0" translate="yes" xml:space="preserve">
          <source>Total memory of all fragments</source>
          <target state="translated">Общая память всех фрагментов</target>
        </trans-unit>
        <trans-unit id="7e54e8f9975c397f222301a7b10e36746a3fb103" translate="yes" xml:space="preserve">
          <source>Total scheduler utilization will equal &lt;code&gt;1.0&lt;/code&gt; when all schedulers have been active all the time between the two measurements.</source>
          <target state="translated">Общее использование планировщика будет равно &lt;code&gt;1.0&lt;/code&gt; если все планировщики будут активны все время между двумя измерениями.</target>
        </trans-unit>
        <trans-unit id="75f139724c9414120075277ba75a5a2d7bac69ee" translate="yes" xml:space="preserve">
          <source>Total size of all fragments</source>
          <target state="translated">Общий размер всех фрагментов</target>
        </trans-unit>
        <trans-unit id="3d7796a77f0c2216ea352ac72490e4ec4449ab38" translate="yes" xml:space="preserve">
          <source>Total utilization of all normal and dirty-cpu schedulers, weighted against maximum amount of available CPU time.</source>
          <target state="translated">Общее использование всех обычных и грязных планировщиков,взвешенных по максимальному количеству доступного процессорного времени.</target>
        </trans-unit>
        <trans-unit id="6da5bac4a207bc853f48fee09219f38e35859ae6" translate="yes" xml:space="preserve">
          <source>Total utilization of all normal and dirty-cpu schedulers.</source>
          <target state="translated">Общее использование всех обычных и грязных вычислительных планировщиков.</target>
        </trans-unit>
        <trans-unit id="9bff8a7fc7360671cf907e56ce21842e96c20fad" translate="yes" xml:space="preserve">
          <source>TotalRunQueueLengths</source>
          <target state="translated">TotalRunQueueLengths</target>
        </trans-unit>
        <trans-unit id="2f38169a712e499b917900e244feafc980a814f4" translate="yes" xml:space="preserve">
          <source>Trace</source>
          <target state="translated">Trace</target>
        </trans-unit>
        <trans-unit id="b977e923c4efbcbf64ad078300b599a2f20c534b" translate="yes" xml:space="preserve">
          <source>Trace Messages Sent to the System Tracer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0588c9e7ac9a2b21ded90cbcf26c439c837482b1" translate="yes" xml:space="preserve">
          <source>Trace Token</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80bb48f4677c815e975d8c45891c82e4681bcb89" translate="yes" xml:space="preserve">
          <source>Trace Tool Builder</source>
          <target state="translated">Конструктор инструментов трассировки</target>
        </trans-unit>
        <trans-unit id="250a4f0c0db1541060f17b5d70ba72e38869d686" translate="yes" xml:space="preserve">
          <source>Trace Tool Builder is a base for building trace tools for single node or distributed Erlang systems. It requires the Runtime_Tools application to be available on the traced node.</source>
          <target state="translated">Trace Tool Builder является базой для построения инструментов трассировки для одноузловых или распределенных систем Erlang.Для этого необходимо,чтобы приложение Runtime_Tools было доступно на трассируемом узле.</target>
        </trans-unit>
        <trans-unit id="d0e39bcc8d71bbaa0fa6b28e8699f8f1993f5c4d" translate="yes" xml:space="preserve">
          <source>Trace flag &lt;code&gt;arity&lt;/code&gt; can be used to change the contents of this message, so that &lt;code&gt;Arity&lt;/code&gt; is specified instead of &lt;code&gt;Args&lt;/code&gt;.</source>
          <target state="translated">Флаг трассировки &lt;code&gt;arity&lt;/code&gt; может быть использован для изменения содержимого этого сообщения, так что &lt;code&gt;Arity&lt;/code&gt; указан вместо &lt;code&gt;Args&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2211485216352092a3c7b3ce77ba8fdb799ae23c" translate="yes" xml:space="preserve">
          <source>Trace flag &lt;code&gt;call&lt;/code&gt; is set on all processes. This means that any function activated with command &lt;code&gt;trc/1&lt;/code&gt; is traced on all existing and new processes.</source>
          <target state="translated">&lt;code&gt;call&lt;/code&gt; флага трассировки устанавливается для всех процессов. Это означает, что любая функция, активированная командой &lt;code&gt;trc/1&lt;/code&gt; , отслеживается во всех существующих и новых процессах.</target>
        </trans-unit>
        <trans-unit id="0712efc6140a7fd34097a10dbcb83e8a2711b2c0" translate="yes" xml:space="preserve">
          <source>Trace garbage collection on the specified process(es). The format handler used is &lt;code&gt;multitrace:handle_gc/4&lt;/code&gt; that prints start, stop, and the time spent for each garbage collection.</source>
          <target state="translated">Отслеживать сборку мусора в указанном процессе (ах). Используемый обработчик формата - &lt;code&gt;multitrace:handle_gc/4&lt;/code&gt; , который выводит начало, остановку и время, затраченное на каждую сборку мусора.</target>
        </trans-unit>
        <trans-unit id="8ad201247194a3bc5c13be5040f0d1b1e662cf18" translate="yes" xml:space="preserve">
          <source>Trace in-scheduling and out-scheduling on the specified process(es). The format handler used is &lt;code&gt;multitrace:handle_schedule/4&lt;/code&gt; that prints each in-scheduling and out-scheduling with process, time-stamp, and current function. It also prints the total time each traced process was scheduled in.</source>
          <target state="translated">Отслеживайте входящие и исходящие расписания для указанного процесса (ов). Используемый обработчик формата - &lt;code&gt;multitrace:handle_schedule/4&lt;/code&gt; , который печатает каждое входящее и исходящее расписание с процессом, отметкой времени и текущей функцией. Он также печатает общее время, в течение которого был запланирован каждый отслеживаемый процесс.</target>
        </trans-unit>
        <trans-unit id="ffc9984032978aa3b6449468569d3553d6cf5759" translate="yes" xml:space="preserve">
          <source>Trace messages:</source>
          <target state="translated">Отслеживать сообщения:</target>
        </trans-unit>
        <trans-unit id="4d4722f0d0980b84f26e05618ea2d6105d2b13ac" translate="yes" xml:space="preserve">
          <source>Trace patterns can also be added for traced messages. Click button &lt;strong&gt;Add Trace Pattern&lt;/strong&gt; and select &lt;strong&gt;Messages sent&lt;/strong&gt; or &lt;strong&gt;Messages received&lt;/strong&gt;, and a match specification.</source>
          <target state="translated">Шаблоны трассировки также могут быть добавлены для отслеживаемых сообщений. Нажмите кнопку &amp;laquo; &lt;strong&gt;Добавить образец трассировки&amp;raquo;&lt;/strong&gt; и выберите &amp;laquo; &lt;strong&gt;Отправленные &lt;/strong&gt;&lt;strong&gt;сообщения&amp;raquo;&lt;/strong&gt; или &amp;laquo; &lt;strong&gt;Полученные сообщения&amp;raquo;&lt;/strong&gt; и спецификацию соответствия.</target>
        </trans-unit>
        <trans-unit id="0940d3dfe2f33f718de044f09bc83c6282e8f2ee" translate="yes" xml:space="preserve">
          <source>Trace patterns only apply to the traced processes and ports.</source>
          <target state="translated">Шаблоны трассировки применяются только к трассируемым процессам и портам.</target>
        </trans-unit>
        <trans-unit id="2a9473289ba2f7fdb4aceac50e9847d3fb9343a9" translate="yes" xml:space="preserve">
          <source>Trace patterns specify how to trace a function or a message by using match specifications. Match specifications are described in the &lt;code&gt;ERTS User's Guide&lt;/code&gt;.</source>
          <target state="translated">Шаблоны трассировки указывают, как отслеживать функцию или сообщение с помощью спецификаций соответствия. Технические характеристики соответствия описаны в &lt;code&gt;ERTS User's Guide&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a02e22fba6caaac8c0531907ae75bbb4f037b1bf" translate="yes" xml:space="preserve">
          <source>Traces &lt;code&gt;Item&lt;/code&gt; in accordance to the value specified by &lt;code&gt;Flags&lt;/code&gt;. The variation of &lt;code&gt;Item&lt;/code&gt; is listed below:</source>
          <target state="translated">Трассирует &lt;code&gt;Item&lt;/code&gt; в соответствии со значением, заданным &lt;code&gt;Flags&lt;/code&gt; . Варианты &lt;code&gt;Item&lt;/code&gt; перечислены ниже:</target>
        </trans-unit>
        <trans-unit id="3d4251419a7232d0215690c25726bd1d8598264d" translate="yes" xml:space="preserve">
          <source>Traces certain function calls. Specify which function calls to trace by calling &lt;code&gt;&lt;a href=&quot;#trace_pattern-3&quot;&gt; erlang:trace_pattern/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d86b88eb80a4cb0c1e2e56d320a47a7c0a552ac" translate="yes" xml:space="preserve">
          <source>Traces certain function calls. Specify which function calls to trace by calling &lt;code&gt;&lt;a href=&quot;#trace_pattern-3&quot;&gt;erlang:trace_pattern/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Отслеживает определенные вызовы функций. Укажите, какие вызовы функции следует отслеживать, вызвав &lt;code&gt;&lt;a href=&quot;#trace_pattern-3&quot;&gt;erlang:trace_pattern/3&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e6a38811b152556838705c34470f7050c3304700" translate="yes" xml:space="preserve">
          <source>Traces garbage collections of processes.</source>
          <target state="translated">Следит за сбором мусора.</target>
        </trans-unit>
        <trans-unit id="0bfeea5f77e5e80144fb5c69582ff8a4c4aa0a8c" translate="yes" xml:space="preserve">
          <source>Traces global function calls for the process according to the trace patterns set in the system (see tp/2).</source>
          <target state="translated">Глобальная функция трасс запрашивает процесс в соответствии с шаблонами трасс,заданными в системе (см.tp/2).</target>
        </trans-unit>
        <trans-unit id="7b9365396596fa47926ca8347796645d68615fc5" translate="yes" xml:space="preserve">
          <source>Traces port related events to the port.</source>
          <target state="translated">Отслеживает события,связанные с портом.</target>
        </trans-unit>
        <trans-unit id="9984d03ffd8c79d353ed1035134b4b78d308578d" translate="yes" xml:space="preserve">
          <source>Traces port-related events.</source>
          <target state="translated">Следит за событиями в порту.</target>
        </trans-unit>
        <trans-unit id="53c6e4ac66fc9e05350a56f9ce0407168d386402" translate="yes" xml:space="preserve">
          <source>Traces process related events to the process.</source>
          <target state="translated">Отслеживает события,связанные с процессом.</target>
        </trans-unit>
        <trans-unit id="29908912e6fff8dc5249509363a4412791547f21" translate="yes" xml:space="preserve">
          <source>Traces process-related events.</source>
          <target state="translated">Следит за событиями,связанными с процессом.</target>
        </trans-unit>
        <trans-unit id="5fea32fcd1026ba95b7747cfa7687d7877ce29fa" translate="yes" xml:space="preserve">
          <source>Traces receiving of messages.</source>
          <target state="translated">Следы получения сообщений.</target>
        </trans-unit>
        <trans-unit id="cc07cb20090b0accf4d5bc83ba241371cabc9b3a" translate="yes" xml:space="preserve">
          <source>Traces scheduling of exiting processes.</source>
          <target state="translated">Следы планирования выходящих процессов.</target>
        </trans-unit>
        <trans-unit id="67d22b046457a4e977f4835a302c705d01e90b51" translate="yes" xml:space="preserve">
          <source>Traces scheduling of ports.</source>
          <target state="translated">Следы планирования портов.</target>
        </trans-unit>
        <trans-unit id="2f48a05431b99fc7b0ddcdfbdc7ffb069ba16117" translate="yes" xml:space="preserve">
          <source>Traces scheduling of processes just like &lt;code&gt;running&lt;/code&gt;. However, this option also includes schedule events when the process executes within the context of a port without being scheduled out itself.</source>
          <target state="translated">Отслеживает планирование процессов так же, как &lt;code&gt;running&lt;/code&gt; . Однако этот параметр также включает запланированные события, когда процесс выполняется в контексте порта, не будучи запланированным.</target>
        </trans-unit>
        <trans-unit id="7ce958853f2f4b0ef08e9d0a61efd87ba237714e" translate="yes" xml:space="preserve">
          <source>Traces scheduling of processes.</source>
          <target state="translated">Следы планирования процессов.</target>
        </trans-unit>
        <trans-unit id="c4c7172939e3bf7fce3abeb0aee363e0caeecf04" translate="yes" xml:space="preserve">
          <source>Traces sending of messages.</source>
          <target state="translated">Следы отправки сообщений.</target>
        </trans-unit>
        <trans-unit id="47adf62bbb5b7db2ff2d321ec8c4e3902e48036a" translate="yes" xml:space="preserve">
          <source>Traces the messages the process or port receives and sends.</source>
          <target state="translated">Отслеживает сообщения,которые процесс или порт получает и отправляет.</target>
        </trans-unit>
        <trans-unit id="139350008a2a0843c976fc5033dee778dfce8767" translate="yes" xml:space="preserve">
          <source>Traces the messages the process or port receives.</source>
          <target state="translated">Отслеживает сообщения,получаемые процессом или портом.</target>
        </trans-unit>
        <trans-unit id="bd14c1efd1ddeca64fe6450f80e57e6c1564eaab" translate="yes" xml:space="preserve">
          <source>Traces the messages the process or port sends.</source>
          <target state="translated">Отслеживает сообщения,отправляемые процессом или портом.</target>
        </trans-unit>
        <trans-unit id="1253e547a3faeb02225fd239c7816e109cca29cf" translate="yes" xml:space="preserve">
          <source>Tracing Local Node from Erlang Shell</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c82c46612470fc95ddd9cc9407e733f834757c70" translate="yes" xml:space="preserve">
          <source>Tracing. Trace flags can still be set for the process, but no trace messages of any kind are generated. (If flag &lt;code&gt;sensitive&lt;/code&gt; is turned off, trace messages are again generated if any trace flags are set.)</source>
          <target state="translated">Трассировка. Флаги трассировки все еще могут быть установлены для процесса, но никаких сообщений трассировки не создается. (Если параметр &lt;code&gt;sensitive&lt;/code&gt; флагам выключен, сообщения трассировки снова создаются, если установлены какие-либо флаги трассировки.)</target>
        </trans-unit>
        <trans-unit id="47fc4ea1f09f1ee696b546f14553f696094e6dba" translate="yes" xml:space="preserve">
          <source>Tracing; to file, as mentioned in the previous paragraph.</source>
          <target state="translated">Трассировка;подавать в файл,как указано в предыдущем абзаце.</target>
        </trans-unit>
        <trans-unit id="41e7b60cc9f2be5dd1ce4620f59c4b34f7bff5d2" translate="yes" xml:space="preserve">
          <source>Tracing; to file, as mentioned in the previous paragraph. The trace contains entries for function calls, returns to function, process scheduling, other process related (spawn, etc) events, and garbage collection. All trace entries are timestamped.</source>
          <target state="translated">Трассировка;подавать в файл,как указано в предыдущем абзаце.Трассировка содержит записи для вызовов функций,возврата к функциям,планирования процесса,других событий,связанных с процессом (порождение и т.д.),и сбора мусора.Все записи трассировки имеют временные метки.</target>
        </trans-unit>
        <trans-unit id="8fe0486a60ee6a3c01827363742db14787a69569" translate="yes" xml:space="preserve">
          <source>Traditionally the Presented IDs were found in the &lt;code&gt;Subject&lt;/code&gt; certificate field as &lt;code&gt;CN&lt;/code&gt; names. This is still quite common. When printing a certificate they show up as:</source>
          <target state="translated">Традиционно представленные идентификаторы находились в поле сертификата &lt;code&gt;Subject&lt;/code&gt; как имена &lt;code&gt;CN&lt;/code&gt; . Это все еще довольно распространено. При печати сертификата они отображаются как:</target>
        </trans-unit>
        <trans-unit id="cd6a9e832dedaac8dfc95165be3ac0b240579c52" translate="yes" xml:space="preserve">
          <source>Transaction properties, which include atomicity, consistency, isolation, and durability</source>
          <target state="translated">Свойства сделки,которые включают в себя атомарность,постоянство,изоляцию и долговечность.</target>
        </trans-unit>
        <trans-unit id="0c055699e2752b762bcaa8253255fc14b9bef9a9" translate="yes" xml:space="preserve">
          <source>Transaction sender timeout time. Has two functions. First, if the value is 0, then transactions will not be accumulated (e.g. the transaction sender process will not be started). Second, if the value is greater then 0 and &lt;code&gt;auto_ack&lt;/code&gt; and &lt;code&gt;trans_ack&lt;/code&gt; are both true or if &lt;code&gt;trans_req&lt;/code&gt; is true, then transaction sender will be started and transactions (which is depending on the values of &lt;code&gt;auto_ack&lt;/code&gt;, &lt;code&gt;trans_ack&lt;/code&gt; and &lt;code&gt;trans_req&lt;/code&gt;) will be accumulated, for later sending.</source>
          <target state="translated">Время ожидания отправителя транзакции. Имеет две функции. Во-первых, если значение равно 0, то транзакции не будут накапливаться (например, процесс отправителя транзакции не будет запущен). Во-вторых, если значение больше 0 и &lt;code&gt;auto_ack&lt;/code&gt; и &lt;code&gt;trans_ack&lt;/code&gt; оба истинны, или если &lt;code&gt;trans_req&lt;/code&gt; истинно, то отправитель транзакции будет запущен, и транзакции (что зависит от значений &lt;code&gt;auto_ack&lt;/code&gt; , &lt;code&gt;trans_ack&lt;/code&gt; и &lt;code&gt;trans_req&lt;/code&gt; ) будут накапливаться для дальнейшего использования. отправка.</target>
        </trans-unit>
        <trans-unit id="269959a97a6fb575e49d0eca74353214adfc6c11" translate="yes" xml:space="preserve">
          <source>Transaction sender timeout time. Has two functions. First, if the value is 0, then transactions will not be accumulated (e.g. the transaction sender process will not be started). Second, if the value is greater then 0 and &lt;code&gt;auto_ack&lt;/code&gt; and &lt;code&gt;trans_ack&lt;/code&gt; is true or if &lt;code&gt;trans_req&lt;/code&gt; is true, then transaction sender will be started and transactions (which is depending on the values of &lt;code&gt;auto_ack&lt;/code&gt;, &lt;code&gt;trans_ack&lt;/code&gt; and &lt;code&gt;trans_req&lt;/code&gt;) will be accumulated, for later sending.</source>
          <target state="translated">Время ожидания отправителя транзакции. Имеет две функции. Во-первых, если значение равно 0, то транзакции не будут накапливаться (например, процесс отправителя транзакции не будет запущен). Во-вторых, если значение больше 0 и &lt;code&gt;auto_ack&lt;/code&gt; и &lt;code&gt;trans_ack&lt;/code&gt; истинны, или если &lt;code&gt;trans_req&lt;/code&gt; истинно, то будет запущен отправитель транзакции и транзакции (что зависит от значений &lt;code&gt;auto_ack&lt;/code&gt; , &lt;code&gt;trans_ack&lt;/code&gt; и &lt;code&gt;trans_req&lt;/code&gt; ) будут накапливаться для последующей отправки ,</target>
        </trans-unit>
        <trans-unit id="8663c67ab2c24806fdfac1e594f2b7c4880ae74b" translate="yes" xml:space="preserve">
          <source>Transaction-protected updates of counter records are not possible.</source>
          <target state="translated">Обновление записей счетчиков,защищенных от транзакций,невозможно.</target>
        </trans-unit>
        <trans-unit id="1e3281a962e6db2e54e787f796eb7d2b1582389a" translate="yes" xml:space="preserve">
          <source>Transactions</source>
          <target state="translated">Transactions</target>
        </trans-unit>
        <trans-unit id="92857e4acd00ac4a82a3a5846abb0210105c9b13" translate="yes" xml:space="preserve">
          <source>Transactions are important when designing fault-tolerant, distributed systems. A &lt;code&gt;Mnesia&lt;/code&gt; transaction is a mechanism by which a series of database operations can be executed as one functional block. The functional block that is run as a transaction is called a Functional Object (Fun), and this code can read, write, and delete &lt;code&gt;Mnesia&lt;/code&gt; records. The Fun is evaluated as a transaction that either commits or terminates. If a transaction succeeds in executing the Fun, it replicates the action on all nodes involved, or terminates if an error occurs.</source>
          <target state="translated">Транзакции важны при разработке отказоустойчивых распределенных систем. &lt;code&gt;Mnesia&lt;/code&gt; сделка представляет собой механизм , с помощью которой последовательность операций базы данных может быть выполнена в виде одного функционального блока. Функциональный блок, который запускается как транзакция, называется функциональным объектом (развлечением), и этот код может читать, записывать и удалять записи &lt;code&gt;Mnesia&lt;/code&gt; . Удовольствие оценивается как транзакция, которая либо фиксируется, либо завершается. Если транзакция успешно выполняет Fun, она реплицирует действие на всех задействованных узлах или завершается в случае возникновения ошибки.</target>
        </trans-unit>
        <trans-unit id="4eb9104f2b09d1b5d4b87d82abb898d1890e970f" translate="yes" xml:space="preserve">
          <source>Transactions can be assigned the property of being executed on all nodes in the system, or on none. Transactions can also be bypassed in favor of running &quot;dirty operations&quot;, which reduce overheads and run fast.</source>
          <target state="translated">Транзакциям может быть присвоено свойство выполняться на всех узлах системы,или ни на одном.Транзакции также можно обойти в пользу выполнения &quot;грязных операций&quot;,что снижает накладные расходы и ускоряет их выполнение.</target>
        </trans-unit>
        <trans-unit id="a91a6387bdeb5a997e5106ce0eb7dbddb3fbc79e" translate="yes" xml:space="preserve">
          <source>Transactions can be nested in an arbitrary fashion. A child transaction must run in the same process as its parent. When a child transaction terminates, the caller of the child transaction gets return value &lt;code&gt;{aborted, Reason}&lt;/code&gt; and any work performed by the child is erased. If a child transaction commits, the records written by the child are propagated to the parent.</source>
          <target state="translated">Транзакции могут быть вложены произвольным образом. Дочерняя транзакция должна выполняться в том же процессе, что и ее родительская. Когда дочерняя транзакция завершается, вызывающий дочерней транзакции получает возвращаемое значение &lt;code&gt;{aborted, Reason}&lt;/code&gt; и вся работа, выполненная дочерней транзакцией, стирается. Если дочерняя транзакция фиксируется, записи, написанные дочерним элементом, передаются родительскому.</target>
        </trans-unit>
        <trans-unit id="c7c5e2dea68a50fc96da311191d6565ac73e322c" translate="yes" xml:space="preserve">
          <source>Transactions that update the definition of a table requires that &lt;code&gt;Mnesia&lt;/code&gt; is started on all nodes where the storage type of the schema is &lt;code&gt;disc_copies&lt;/code&gt;. All replicas of the table on these nodes must also be loaded. There are a few exceptions to these availability rules:</source>
          <target state="translated">Транзакции, обновляющие определение таблицы, требуют, чтобы &lt;code&gt;Mnesia&lt;/code&gt; была запущена на всех узлах, где тип хранения схемы - &lt;code&gt;disc_copies&lt;/code&gt; . Все реплики таблицы на этих узлах также должны быть загружены. Из правил доступности есть несколько исключений:</target>
        </trans-unit>
        <trans-unit id="f8042cfa4648048958e1595a0cff5bd3d748ab7d" translate="yes" xml:space="preserve">
          <source>Transcodes an &lt;code&gt;&lt;a href=&quot;https://www.ietf.org/rfc/rfc3986.txt&quot;&gt;RFC 3986&lt;/a&gt;&lt;/code&gt; compliant &lt;code&gt;URIString&lt;/code&gt;, where &lt;code&gt;Options&lt;/code&gt; is a list of tagged tuples, specifying the inbound (&lt;code&gt;in_encoding&lt;/code&gt;) and outbound (&lt;code&gt;out_encoding&lt;/code&gt;) encodings. &lt;code&gt;in_encoding&lt;/code&gt; and &lt;code&gt;out_encoding&lt;/code&gt; specifies both binary encoding and percent-encoding for the input and output data. Mixed encoding, where binary encoding is not the same as percent-encoding, is not supported. If an argument is invalid, an error tuple is returned.</source>
          <target state="translated">&lt;code&gt;URIString&lt;/code&gt; , совместимую с &lt;code&gt;&lt;a href=&quot;https://www.ietf.org/rfc/rfc3986.txt&quot;&gt;RFC 3986&lt;/a&gt;&lt;/code&gt; , где &lt;code&gt;Options&lt;/code&gt; - это список помеченных кортежей с указанием входящей ( &lt;code&gt;in_encoding&lt;/code&gt; ) и исходящей ( &lt;code&gt;out_encoding&lt;/code&gt; ) кодировки. &lt;code&gt;in_encoding&lt;/code&gt; и &lt;code&gt;out_encoding&lt;/code&gt; определяют как двоичное кодирование, так и процентное кодирование для входных и выходных данных. Смешанное кодирование, в котором двоичное кодирование отличается от процентного кодирования, не поддерживается. Если аргумент недопустим, возвращается кортеж с ошибкой.</target>
        </trans-unit>
        <trans-unit id="5bcd602254f322e5e2715324aa9c41970279ec4f" translate="yes" xml:space="preserve">
          <source>Transcript</source>
          <target state="translated">Transcript</target>
        </trans-unit>
        <trans-unit id="0276c8258f3ca2236ded67dcb45cec51cdd4d087" translate="yes" xml:space="preserve">
          <source>Transfers the binary &lt;code&gt;Bin&lt;/code&gt; into the file &lt;code&gt;RemoteFile&lt;/code&gt; at the remote server.</source>
          <target state="translated">Перечисления двоичный &lt;code&gt;Bin&lt;/code&gt; в файл &lt;code&gt;RemoteFile&lt;/code&gt; на удаленном сервере.</target>
        </trans-unit>
        <trans-unit id="a31be82768a8a14fe4e45c8c31cc87a5a005d692" translate="yes" xml:space="preserve">
          <source>Transfers the binary &lt;code&gt;Bin&lt;/code&gt; to the remote server and appends it to the file &lt;code&gt;RemoteFile&lt;/code&gt;. If the file does not exist, it is created.</source>
          <target state="translated">Передает двоичную &lt;code&gt;Bin&lt;/code&gt; на удаленный сервер и добавляет ее в файл &lt;code&gt;RemoteFile&lt;/code&gt; . Если файл не существует, он создается.</target>
        </trans-unit>
        <trans-unit id="96ecc5026b0a2d6e144a5dcc9d3d15bc2637fba5" translate="yes" xml:space="preserve">
          <source>Transfers the chunk &lt;code&gt;Bin&lt;/code&gt; to the remote server, which appends it to the file specified in the call to &lt;code&gt;append_chunk_start/2&lt;/code&gt;.</source>
          <target state="translated">Передает &lt;code&gt;Bin&lt;/code&gt; фрагментов удаленному серверу, который добавляет его в файл, указанный в вызове &lt;code&gt;append_chunk_start/2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6d777ccd8cf743ce8e8b1db94238262ce12eba79" translate="yes" xml:space="preserve">
          <source>Transfers the chunk &lt;code&gt;Bin&lt;/code&gt; to the remote server, which writes it into the file specified in the call to &lt;code&gt;send_chunk_start/2&lt;/code&gt;.</source>
          <target state="translated">Перечисления Кусок &lt;code&gt;Bin&lt;/code&gt; на удаленный сервер, который записывает его в файл , указанный в вызове &lt;code&gt;send_chunk_start/2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="78ac497764b60c7c85e8349f223a68fe68089947" translate="yes" xml:space="preserve">
          <source>Transfers the file &lt;code&gt;LocalFile&lt;/code&gt; to the remote server. If &lt;code&gt;RemoteFile&lt;/code&gt; is specified, the name of the remote file is set to &lt;code&gt;RemoteFile&lt;/code&gt;, otherwise to &lt;code&gt;LocalFile&lt;/code&gt;.</source>
          <target state="translated">Переносит файл &lt;code&gt;LocalFile&lt;/code&gt; на удаленный сервер. Если &lt;code&gt;RemoteFile&lt;/code&gt; , имя удаленного файла устанавливается на &lt;code&gt;RemoteFile&lt;/code&gt; , в противном случае - на &lt;code&gt;LocalFile&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aec29636456fbdaa72ac911c194e9cb134c0de35" translate="yes" xml:space="preserve">
          <source>Transfers the file &lt;code&gt;LocalFile&lt;/code&gt; to the remote server. If &lt;code&gt;RemoteFile&lt;/code&gt; is specified, the name of the remote file that the file is appended to is set to &lt;code&gt;RemoteFile&lt;/code&gt;, otherwise to &lt;code&gt;LocalFile&lt;/code&gt;. If the file does not exists, it is created.</source>
          <target state="translated">Переносит файл &lt;code&gt;LocalFile&lt;/code&gt; на удаленный сервер. Если &lt;code&gt;RemoteFile&lt;/code&gt; , имя удаленного файла, к которому добавляется файл, устанавливается на &lt;code&gt;RemoteFile&lt;/code&gt; , в противном случае - на &lt;code&gt;LocalFile&lt;/code&gt; . Если файл не существует, он создается.</target>
        </trans-unit>
        <trans-unit id="90ba80cf80c63c0d2c8f02175aa1e10f13204467" translate="yes" xml:space="preserve">
          <source>Transfers the file &lt;code&gt;RemoteFile&lt;/code&gt; from the remote server and receives it as a binary.</source>
          <target state="translated">Передает файл &lt;code&gt;RemoteFile&lt;/code&gt; с удаленного сервера и получает его в виде двоичного файла .</target>
        </trans-unit>
        <trans-unit id="ef6a6bd4453d0b36a0f55436c56df830215430fd" translate="yes" xml:space="preserve">
          <source>Transfers the file &lt;code&gt;RemoteFile&lt;/code&gt; from the remote server to the file system of the local client. If &lt;code&gt;LocalFile&lt;/code&gt; is specified, the local file will be &lt;code&gt;LocalFile&lt;/code&gt;, otherwise &lt;code&gt;RemoteFile&lt;/code&gt;.</source>
          <target state="translated">Передает файл &lt;code&gt;RemoteFile&lt;/code&gt; с удаленного сервера в файловую систему локального клиента. Если &lt;code&gt;LocalFile&lt;/code&gt; , локальным файлом будет &lt;code&gt;LocalFile&lt;/code&gt; , в противном случае - &lt;code&gt;RemoteFile&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f0ad6ecb9ddaf64bd66989047cba27a4d5603ff1" translate="yes" xml:space="preserve">
          <source>Transform a alias-name to its oid.</source>
          <target state="translated">Трансформируйте псевдоним в ее псевдоним.</target>
        </trans-unit>
        <trans-unit id="36c585abe302937d577b48572bd7c0e3655c0630" translate="yes" xml:space="preserve">
          <source>Transform a oid to its aliasname.</source>
          <target state="translated">Трансформируйте оид в его псевдоним.</target>
        </trans-unit>
        <trans-unit id="1d5829db0e03928c4e7cde6f753299a051ba3577" translate="yes" xml:space="preserve">
          <source>Transform the input dictionary before compilation, appending &lt;code&gt;&lt;code&gt;&lt;a href=&quot;diameter_dict#inherits&quot;&gt;@inherits&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; of the specified string.</source>
          <target state="translated">Преобразуйте входной словарь перед компиляцией, добавив &lt;code&gt;&lt;code&gt;&lt;a href=&quot;diameter_dict#inherits&quot;&gt;@inherits&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; указанной строки.</target>
        </trans-unit>
        <trans-unit id="1b3111884f3054cc372ba38df92c0a135c770202" translate="yes" xml:space="preserve">
          <source>Transform the input dictionary before compilation, setting &lt;code&gt;&lt;code&gt;&lt;a href=&quot;diameter_dict#name&quot;&gt;@name&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; or &lt;code&gt;&lt;code&gt;&lt;a href=&quot;diameter_dict#prefix&quot;&gt;@prefix&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; to the specified string.</source>
          <target state="translated">Преобразуйте входной словарь перед компиляцией, установив &lt;code&gt;&lt;code&gt;&lt;a href=&quot;diameter_dict#name&quot;&gt;@name&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; или &lt;code&gt;&lt;code&gt;&lt;a href=&quot;diameter_dict#prefix&quot;&gt;@prefix&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; для указанной строки.</target>
        </trans-unit>
        <trans-unit id="c21ae8bb9de07f6c449c2bda96f788a3baf2c6fe" translate="yes" xml:space="preserve">
          <source>Transformation rules are used to rewrite generic instructions to other generic instructions. The transformations rules are applied repeatedly until no rule match. At that point, the first instruction in the resulting instruction sequence will be converted to a specific instruction and added to the code for the module being loaded. Then the transformation rules for the remaining instructions are run in the same way.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="846b9581964cb477d07383c10e4204a0b7ad99e6" translate="yes" xml:space="preserve">
          <source>Transformations that are not possible to describe with the rule language as described here can be written as a C function in &lt;code&gt;beam_load.c&lt;/code&gt; and called from the right side of a transformation. The left side of the transformation will perform the match and bind operands to variables. The variables can then be passed to a generator function on the right side. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4f1d57f141d31ace69a30793395cb3994e3e4b6" translate="yes" xml:space="preserve">
          <source>Transforming URIs into a normalized form</source>
          <target state="translated">Преобразование URI в нормализованную форму</target>
        </trans-unit>
        <trans-unit id="52a09e92d39be036799f55f3466102e3964c9981" translate="yes" xml:space="preserve">
          <source>Transforms a &lt;code&gt;&lt;a href=&quot;#match_spec&quot;&gt;match specification&lt;/a&gt;&lt;/code&gt; into an internal representation that can be used in subsequent calls to &lt;code&gt;&lt;a href=&quot;#match_spec_run-2&quot;&gt;match_spec_run/2&lt;/a&gt;&lt;/code&gt;. The internal representation is opaque and cannot be converted to external term format and then back again without losing its properties (that is, it cannot be sent to a process on another node and still remain a valid compiled match specification, nor can it be stored on disk). To check the validity of a compiled match specification, use &lt;code&gt;&lt;a href=&quot;#is_compiled_ms-1&quot;&gt;is_compiled_ms/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Преобразует &lt;code&gt;&lt;a href=&quot;#match_spec&quot;&gt;match specification&lt;/a&gt;&lt;/code&gt; во внутреннее представление, которое можно использовать в последующих вызовах &lt;code&gt;&lt;a href=&quot;#match_spec_run-2&quot;&gt;match_spec_run/2&lt;/a&gt;&lt;/code&gt; . Внутреннее представление непрозрачно и не может быть преобразовано во внешний формат термина, а затем обратно без потери его свойств (то есть его нельзя отправить процессу на другом узле и по-прежнему оставаться действительной скомпилированной спецификацией соответствия, и его нельзя сохранить на диск). Чтобы проверить действительность скомпилированной спецификации соответствия, используйте &lt;code&gt;&lt;a href=&quot;#is_compiled_ms-1&quot;&gt;is_compiled_ms/1&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="127c97ad73e2098d2302e04d73b62ee91a692d00" translate="yes" xml:space="preserve">
          <source>Transforms a &lt;code&gt;&lt;a href=&quot;#match_spec&quot;&gt;match specification&lt;/a&gt;&lt;/code&gt; into an internal representation that can be used in subsequent calls to &lt;code&gt;&lt;a href=&quot;#match_spec_run-2&quot;&gt;match_spec_run/2&lt;/a&gt;&lt;/code&gt;. The internal representation is opaque. To check the validity of a compiled match specification, use &lt;code&gt;&lt;a href=&quot;#is_compiled_ms-1&quot;&gt;is_compiled_ms/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29484fe337b3af71da5ca7a2dac4e696f5f79d47" translate="yes" xml:space="preserve">
          <source>Transforms a syntax tree into an abstract comment. The lines of the comment contain the text for &lt;code&gt;Node&lt;/code&gt;, as produced by the given &lt;code&gt;Printer&lt;/code&gt; function. Each line of the comment is prefixed by the string &lt;code&gt;Prefix&lt;/code&gt; (this does not include the initial &quot;&lt;code&gt;%&lt;/code&gt;&quot; character of the comment line).</source>
          <target state="translated">Преобразует синтаксическое дерево в абстрактный комментарий. Строки комментария содержат текст для &lt;code&gt;Node&lt;/code&gt; , созданный данной функцией &lt;code&gt;Printer&lt;/code&gt; . Каждая строка комментария имеет префикс строки &lt;code&gt;Prefix&lt;/code&gt; (он не включает начальный символ &amp;laquo; &lt;code&gt;%&lt;/code&gt; &amp;raquo; строки комментария).</target>
        </trans-unit>
        <trans-unit id="0cbb6e0e6a14a90b777a9f90d55d975cb9b29ca2" translate="yes" xml:space="preserve">
          <source>Transforms addresses from internal MIB format to one more useful to &lt;code&gt;&lt;a href=&quot;snmp_agent_netif&quot;&gt;Agent Net if&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Преобразует адреса из внутреннего формата MIB в еще один полезный для &lt;code&gt;&lt;a href=&quot;snmp_agent_netif&quot;&gt;Agent Net if&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dec43f85ac93650f89af6686bc1b1b60f6b9599f" translate="yes" xml:space="preserve">
          <source>Transforms an &lt;code&gt;URI&lt;/code&gt; into a normalized form using Syntax-Based Normalization as defined by &lt;code&gt;&lt;a href=&quot;https://www.ietf.org/rfc/rfc3986.txt&quot;&gt;RFC 3986&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Преобразует &lt;code&gt;URI&lt;/code&gt; в нормализованную форму с помощью нормализации на основе синтаксиса, как определено в &lt;code&gt;&lt;a href=&quot;https://www.ietf.org/rfc/rfc3986.txt&quot;&gt;RFC 3986&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d1d9a9fd8f3259ae9990008a8a6bec24b152a43a" translate="yes" xml:space="preserve">
          <source>Transforms an SNMP index to the corresponding Mnesia key. If the SNMP table has multiple keys, the key is a tuple of the key columns.</source>
          <target state="translated">Преобразовывает индекс SNMP в соответствующий ключ Мнезии.Если в таблице SNMP имеется несколько ключей,ключ представляет собой кортеж столбцов ключей.</target>
        </trans-unit>
        <trans-unit id="187ea5deff287a5504fddf1b7e36cd0f09e23500" translate="yes" xml:space="preserve">
          <source>Transforms the &lt;code&gt;person&lt;/code&gt; table from a RAM table into a disc-based table at &lt;code&gt;Node&lt;/code&gt;.</source>
          <target state="translated">Превращает &lt;code&gt;person&lt;/code&gt; таблицу из таблицы ОЗУ в таблицу дисковой основы в &lt;code&gt;Node&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e599fefddd1839d024d114d1fae1e8b80cf9332c" translate="yes" xml:space="preserve">
          <source>Transforms trace data and makes an event record out of it.</source>
          <target state="translated">Преобразовывает данные трассировки и делает из них запись события.</target>
        </trans-unit>
        <trans-unit id="dae87e24dc1095e84bcbb6fcaaaa2c5136770260" translate="yes" xml:space="preserve">
          <source>Transient Failures</source>
          <target state="translated">Переходные неудачи</target>
        </trans-unit>
        <trans-unit id="635a90e0c9623c778cd92020a4761e58257d50d3" translate="yes" xml:space="preserve">
          <source>Transition options can be set by &lt;code&gt;&lt;a href=&quot;#type-action&quot;&gt;actions&lt;/a&gt;&lt;/code&gt; and modify the &lt;strong&gt;state transition&lt;/strong&gt;. The &lt;strong&gt;state transition&lt;/strong&gt; takes place when the &lt;code&gt;&lt;a href=&quot;#state%20callback&quot;&gt;&lt;strong&gt;state callback&lt;/strong&gt;&lt;/a&gt;&lt;/code&gt; has processed an event and returns. Here are the sequence of steps for a &lt;strong&gt;state transition&lt;/strong&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="340b8d86a3623f3b21be6c18b845921955f1271a" translate="yes" xml:space="preserve">
          <source>Transition options can be set by &lt;code&gt;&lt;a href=&quot;#type-action&quot;&gt;actions&lt;/a&gt;&lt;/code&gt; and modify the state transition. Here are the sequence of steps for a state transition:</source>
          <target state="translated">Параметры перехода можно задать &lt;code&gt;&lt;a href=&quot;#type-action&quot;&gt;actions&lt;/a&gt;&lt;/code&gt; и изменить переход состояния. Вот последовательность шагов для перехода между состояниями:</target>
        </trans-unit>
        <trans-unit id="1c6cfa47dfcc18ddefe84ebeb0f5989ee0e3d8d7" translate="yes" xml:space="preserve">
          <source>Translates OID to Erlang digest type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f68e1d1cfad7a14a47ac7096b71655133e8d261" translate="yes" xml:space="preserve">
          <source>Translates an SCTP error number from, for example, &lt;code&gt;#sctp_remote_error{}&lt;/code&gt; or &lt;code&gt;#sctp_send_failed{}&lt;/code&gt; into an explanatory string, or one of the atoms &lt;code&gt;ok&lt;/code&gt; for no error or &lt;code&gt;undefined&lt;/code&gt; for an unrecognized error.</source>
          <target state="translated">Преобразует номер ошибки SCTP, например, из &lt;code&gt;#sctp_remote_error{}&lt;/code&gt; или &lt;code&gt;#sctp_send_failed{}&lt;/code&gt; в пояснительную строку, или один из атомов в &lt;code&gt;ok&lt;/code&gt; ошибка отсутствует, или &lt;code&gt;undefined&lt;/code&gt; для нераспознанной ошибки.</target>
        </trans-unit>
        <trans-unit id="80c4059735d8cda62f939032264b405f285841d8" translate="yes" xml:space="preserve">
          <source>Translates an abstract syntax tree to a corresponding explicit record representation. The records are defined in the file &quot;&lt;code&gt;cerl.hrl&lt;/code&gt;&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d19487fcfdbdd7c9b9b7de31aef67e2f1e3c0f27" translate="yes" xml:space="preserve">
          <source>Translates an explicit record representation to a corresponding abstract syntax tree. The records are defined in the file &quot;&lt;code&gt;core_parse.hrl&lt;/code&gt;&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fca7eec0c5c2c402ec9feaf20fb1cf586209144" translate="yes" xml:space="preserve">
          <source>Translates signature algorithm OID to Erlang digest and signature types.</source>
          <target state="translated">Транслирует OID алгоритма подписи в дайджест Erlang и типы подписей.</target>
        </trans-unit>
        <trans-unit id="2dd26e871e1b0c6741054f66f2c8c6fd1ff461e9" translate="yes" xml:space="preserve">
          <source>Translates the binary trace logs into something readable. By default, &lt;code&gt;ttb&lt;/code&gt; presents each trace message as a line of text, but you can also write your own handler to make more complex interpretations of the trace information. A trace log can also be presented graphically with application Event Tracer (ET).</source>
          <target state="translated">Преобразует двоичные журналы трассировки во что-то читаемое. По умолчанию &lt;code&gt;ttb&lt;/code&gt; представляет каждое сообщение трассировки в виде строки текста, но вы также можете написать свой собственный обработчик для более сложной интерпретации информации трассировки. Журнал трассировки также может быть представлен графически с помощью приложения Event Tracer (ET).</target>
        </trans-unit>
        <trans-unit id="247b327869ef6106bf80329969b8c8bd5956cb2a" translate="yes" xml:space="preserve">
          <source>Translation Agents</source>
          <target state="translated">Агенты по переводу</target>
        </trans-unit>
        <trans-unit id="c10d76c9a4b81c39c13a3bbf7cdb7a157dfb1551" translate="yes" xml:space="preserve">
          <source>Transport</source>
          <target state="translated">Transport</target>
        </trans-unit>
        <trans-unit id="b374a75b21ba249e1509b4f849a514f5f64e23f6" translate="yes" xml:space="preserve">
          <source>Transport Failure Algorithm</source>
          <target state="translated">Алгоритм отказа при транспортировке</target>
        </trans-unit>
        <trans-unit id="67ca25bf09fe1a4bc0aa43dea06a3fcf06720b9d" translate="yes" xml:space="preserve">
          <source>Transport Failure Detection</source>
          <target state="translated">Обнаружение сбоев при транспортировке</target>
        </trans-unit>
        <trans-unit id="c24199b7fc627de79e3a1c89011039b836457577" translate="yes" xml:space="preserve">
          <source>Transport Layer Security (TLS) and its predecessor, the Secure Sockets Layer (SSL), are cryptographic protocols designed to provide communications security over a computer network. The protocols use X.509 certificates and hence public key (asymmetric) cryptography to authenticate the counterpart with whom they communicate, and to exchange a symmetric key for payload encryption. The protocol provides data/message confidentiality (encryption), integrity (through message authentication code checks) and host verification (through certificate path validation). DTLS (Datagram Transport Layer Security) that is based on TLS but datagram oriented instead of stream oriented.</source>
          <target state="translated">Transport Layer Security (TLS)и его предшественник,Secure Sockets Layer (SSL),представляют собой криптографические протоколы,предназначенные для обеспечения безопасности коммуникаций в компьютерной сети.В протоколах используются сертификаты X.509 и,следовательно,криптография с открытым ключом (асимметричная)для аутентификации контрагента,с которым они общаются,а также для обмена симметричным ключом для шифрования полезной нагрузки.Протокол обеспечивает конфиденциальность данных/сообщений (шифрование),целостность (с помощью проверки подлинности кода сообщения)и проверку хоста (с помощью проверки пути к сертификату).DTLS (Datagram Transport Layer Security),который основан на TLS,но ориентирован на датаграмму,а не на поток.</target>
        </trans-unit>
        <trans-unit id="6d4ed04955b99e2e25f46f14a243ff2be9d1edb1" translate="yes" xml:space="preserve">
          <source>Transport Protocol</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="784cd0f786d540e1df407cfe0bdede50bd4a091f" translate="yes" xml:space="preserve">
          <source>Transpose characters</source>
          <target state="translated">Прозрачные символы</target>
        </trans-unit>
        <trans-unit id="ad327557b2eecc894c5ce680d047ddb9ce864548" translate="yes" xml:space="preserve">
          <source>Trap Sending</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b87b3f0b12dc0cda40b5e7c065f4352f65c40f7f" translate="yes" xml:space="preserve">
          <source>Traversals using &lt;code&gt;match&lt;/code&gt; and &lt;code&gt;select&lt;/code&gt; functions may not need to scan the entire table depending on how the key is specified. A match pattern with a &lt;strong&gt;fully bound key&lt;/strong&gt; (without any match variables) will optimize the operation to a single key lookup without any table traversal at all. For &lt;code&gt;ordered_set&lt;/code&gt; a &lt;strong&gt;partially bound key&lt;/strong&gt; will limit the traversal to only scan a subset of the table based on term order. A partially bound key is either a list or a tuple with a prefix that is fully bound. Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e192302cce69f9e090d601f54b7e73e6fdccdad" translate="yes" xml:space="preserve">
          <source>Traverses &lt;code&gt;Dirs&lt;/code&gt; and adds each &lt;code&gt;Dir&lt;/code&gt; to the beginning of the code path. This means that the order of &lt;code&gt;Dirs&lt;/code&gt; is reversed in the resulting code path. For example, if you add &lt;code&gt;[Dir1,Dir2]&lt;/code&gt;, the resulting path will be &lt;code&gt;[Dir2,Dir1|OldCodePath]&lt;/code&gt;.</source>
          <target state="translated">Обходит &lt;code&gt;Dirs&lt;/code&gt; и добавляет каждый &lt;code&gt;Dir&lt;/code&gt; в начало пути кода. Это означает, что порядок &lt;code&gt;Dirs&lt;/code&gt; в результирующем пути кода меняется на обратный. Например, если вы добавите &lt;code&gt;[Dir1,Dir2]&lt;/code&gt; , результирующий путь будет &lt;code&gt;[Dir2,Dir1|OldCodePath]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="137a357a519bf577c3a49eea20ac865057de4ba8" translate="yes" xml:space="preserve">
          <source>Traverses a table and performs operations on all records in the table. When the end of the table is reached, the special key &lt;code&gt;'$end_of_table'&lt;/code&gt; is returned. Otherwise the function returns a key that can be used to read the actual record.</source>
          <target state="translated">Обходит таблицу и выполняет операции со всеми записями в таблице. Когда достигается конец таблицы, возвращается специальный ключ &lt;code&gt;'$end_of_table'&lt;/code&gt; . В противном случае функция возвращает ключ, который можно использовать для чтения фактической записи.</target>
        </trans-unit>
        <trans-unit id="d196f97744321413a11b3f30616c9f2f4eec01c6" translate="yes" xml:space="preserve">
          <source>Traverses a table and performs operations on all records in the table. When the end of the table is reached, the special key &lt;code&gt;'$end_of_table'&lt;/code&gt; is returned. Otherwise, the function returns a key that can be used to read the actual record. The behavior is undefined if another Erlang process performs write operations on the table while it is being traversed with the function &lt;code&gt;mnesia:dirty_next/2&lt;/code&gt;.</source>
          <target state="translated">Обходит таблицу и выполняет операции со всеми записями в таблице. Когда достигается конец таблицы, возвращается специальный ключ &lt;code&gt;'$end_of_table'&lt;/code&gt; . В противном случае функция возвращает ключ, который можно использовать для чтения фактической записи. Поведение не определено, если другой процесс Erlang выполняет операции записи в таблицу, пока она &lt;code&gt;mnesia:dirty_next/2&lt;/code&gt; с помощью функции mnesia: dirty_next / 2 .</target>
        </trans-unit>
        <trans-unit id="8dc9f15de712d9d574738e5b2e0901706f6adc90" translate="yes" xml:space="preserve">
          <source>Traverses a table in a manner similar to the function &lt;code&gt;mnesia:dirty_next/2&lt;/code&gt;. A table has a number of slots that range from 0 (zero) to an unknown upper bound. The function &lt;code&gt;mnesia:dirty_slot/2&lt;/code&gt; returns the special atom &lt;code&gt;'$end_of_table'&lt;/code&gt; when the end of the table is reached. The behavior of this function is undefined if a write operation is performed on the table while it is being traversed.</source>
          <target state="translated">Обходит таблицу аналогично функции &lt;code&gt;mnesia:dirty_next/2&lt;/code&gt; . В таблице есть количество слотов от 0 (нуля) до неизвестной верхней границы. Функция &lt;code&gt;mnesia:dirty_slot/2&lt;/code&gt; возвращает специальный атом &lt;code&gt;'$end_of_table'&lt;/code&gt; когда достигается конец таблицы. Поведение этой функции не определено, если операция записи выполняется в таблице во время обхода.</target>
        </trans-unit>
        <trans-unit id="d5bce8436ec86270c2bccf19db4667aa0c4b7a23" translate="yes" xml:space="preserve">
          <source>Traversing the set of modules, it then recompiles every module for which at least one of the following conditions apply:</source>
          <target state="translated">Обращаясь к набору модулей,он перекомпилирует каждый модуль,для которого действует хотя бы одно из следующих условий:</target>
        </trans-unit>
        <trans-unit id="7c6a05bfb91163574fcaf2b49273abce7fc5b093" translate="yes" xml:space="preserve">
          <source>Trees and iterators are built using opaque data structures that should not be pattern-matched from outside this module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0c84ee4b222403ef3c2a2f6e4a34ab18cd985d5" translate="yes" xml:space="preserve">
          <source>Tries to create directory &lt;code&gt;Dir&lt;/code&gt;. Missing parent directories are &lt;strong&gt;not&lt;/strong&gt; created. Returns &lt;code&gt;ok&lt;/code&gt; if successful.</source>
          <target state="translated">Пытается создать каталог &lt;code&gt;Dir&lt;/code&gt; . Отсутствующие родительские каталоги &lt;strong&gt;не&lt;/strong&gt; создаются. Возвращает &lt;code&gt;ok&lt;/code&gt; случае успеха.</target>
        </trans-unit>
        <trans-unit id="7539b9bc23bf1a63079b6009b66e55de1f511775" translate="yes" xml:space="preserve">
          <source>Tries to create the term of an already existing atom from the &lt;code&gt;NULL&lt;/code&gt;-terminated C-string &lt;code&gt;name&lt;/code&gt; with encoding &lt;code&gt;&lt;a href=&quot;#ErlNifCharEncoding&quot;&gt;encode&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Пытаюсь создать срок уже существующий атом от &lt;code&gt;NULL&lt;/code&gt; -завершённого C-строка &lt;code&gt;name&lt;/code&gt; с кодирующим &lt;code&gt;&lt;a href=&quot;#ErlNifCharEncoding&quot;&gt;encode&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d956aa4d45e626e33feccc52c2e668a01e46c2de" translate="yes" xml:space="preserve">
          <source>Tries to create the term of an already existing atom from the string &lt;code&gt;name&lt;/code&gt; with length &lt;code&gt;len&lt;/code&gt; and encoding &lt;code&gt;&lt;a href=&quot;#ErlNifCharEncoding&quot;&gt;encode&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;NULL&lt;/code&gt; characters are treated as any other characters.</source>
          <target state="translated">Пытается создать срок уже существующего атома из строки &lt;code&gt;name&lt;/code&gt; с длиной &lt;code&gt;len&lt;/code&gt; и кодирующим &lt;code&gt;&lt;a href=&quot;#ErlNifCharEncoding&quot;&gt;encode&lt;/a&gt;&lt;/code&gt; . &lt;code&gt;NULL&lt;/code&gt; - символы рассматриваются как любые другие символы.</target>
        </trans-unit>
        <trans-unit id="c7380de8914d3d9d8e70fd1f6c74d924099655d6" translate="yes" xml:space="preserve">
          <source>Tries to delete directory &lt;code&gt;Dir&lt;/code&gt;. The directory must be empty before it can be deleted. Returns &lt;code&gt;ok&lt;/code&gt; if successful.</source>
          <target state="translated">Пытается удалить каталог &lt;code&gt;Dir&lt;/code&gt; . Каталог должен быть пустым, прежде чем его можно будет удалить. Возвращает &lt;code&gt;ok&lt;/code&gt; случае успеха.</target>
        </trans-unit>
        <trans-unit id="0694587d26aecfbb0a43b20ea81eab04225a2a67" translate="yes" xml:space="preserve">
          <source>Tries to delete file &lt;code&gt;Filename&lt;/code&gt;. Returns &lt;code&gt;ok&lt;/code&gt; if successful.</source>
          <target state="translated">Пытается удалить файл &lt;code&gt;Filename&lt;/code&gt; . Возвращает &lt;code&gt;ok&lt;/code&gt; случае успеха.</target>
        </trans-unit>
        <trans-unit id="917cb6bdcab3e4dcc84eba06ed763b346415331e" translate="yes" xml:space="preserve">
          <source>Tries to find a &lt;code&gt;&lt;a href=&quot;#simple_path&quot;&gt;simple path&lt;/a&gt;&lt;/code&gt; from vertex &lt;code&gt;V1&lt;/code&gt; to vertex &lt;code&gt;V2&lt;/code&gt; of digraph &lt;code&gt;G&lt;/code&gt;. Returns the path as a list &lt;code&gt;[V1,&amp;nbsp;...,&amp;nbsp;V2]&lt;/code&gt; of vertices, or &lt;code&gt;false&lt;/code&gt; if no simple path from &lt;code&gt;V1&lt;/code&gt; to &lt;code&gt;V2&lt;/code&gt; of length one or more exists.</source>
          <target state="translated">Пытается найти &lt;code&gt;&lt;a href=&quot;#simple_path&quot;&gt;simple path&lt;/a&gt;&lt;/code&gt; из вершины &lt;code&gt;V1&lt;/code&gt; , чтобы вершина &lt;code&gt;V2&lt;/code&gt; из орграфа &lt;code&gt;G&lt;/code&gt; . Возвращает путь в виде списка &lt;code&gt;[V1,&amp;nbsp;...,&amp;nbsp;V2]&lt;/code&gt; вершин или &lt;code&gt;false&lt;/code&gt; , если не существует простого пути от &lt;code&gt;V1&lt;/code&gt; до &lt;code&gt;V2&lt;/code&gt; длиной один или несколько.</target>
        </trans-unit>
        <trans-unit id="d6d56eefae6afa713ee58d8d532711a39f9d00e8" translate="yes" xml:space="preserve">
          <source>Tries to find an application downgrade script for &lt;code&gt;App&lt;/code&gt; from the current version to a previous version &lt;code&gt;OldVsn&lt;/code&gt; located in &lt;code&gt;Dir&lt;/code&gt;.</source>
          <target state="translated">Пытается найти сценарий понижения версии приложения для &lt;code&gt;App&lt;/code&gt; с текущей версии до предыдущей версии &lt;code&gt;OldVsn&lt;/code&gt; , расположенной в каталоге &lt;code&gt;Dir&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5b3cdb4b87509cbcdcf3943a3bdad2d3f9b6d987" translate="yes" xml:space="preserve">
          <source>Tries to find an application upgrade script for &lt;code&gt;App&lt;/code&gt; from the current version to a new version located in &lt;code&gt;Dir&lt;/code&gt;.</source>
          <target state="translated">Пытается найти сценарий обновления приложения для &lt;code&gt;App&lt;/code&gt; с текущей версии до новой версии, расположенной в &lt;code&gt;Dir&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="63810144427574ddc18730d454daf02c43dd8338" translate="yes" xml:space="preserve">
          <source>Tries to find an as short as possible &lt;code&gt;&lt;a href=&quot;#simple_cycle&quot;&gt;simple cycle&lt;/a&gt;&lt;/code&gt; through vertex &lt;code&gt;V&lt;/code&gt; of digraph &lt;code&gt;G&lt;/code&gt;. Returns the cycle as a list &lt;code&gt;[V,&amp;nbsp;...,&amp;nbsp;V]&lt;/code&gt; of vertices, or &lt;code&gt;false&lt;/code&gt; if no simple cycle through &lt;code&gt;V&lt;/code&gt; exists. Notice that a &lt;code&gt;&lt;a href=&quot;#loop&quot;&gt;loop&lt;/a&gt;&lt;/code&gt; through &lt;code&gt;V&lt;/code&gt; is returned as list &lt;code&gt;[V,&amp;nbsp;V]&lt;/code&gt;.</source>
          <target state="translated">Пытаешься найти как можно короче &lt;code&gt;&lt;a href=&quot;#simple_cycle&quot;&gt;simple cycle&lt;/a&gt;&lt;/code&gt; через вершину &lt;code&gt;V&lt;/code&gt; из орграфа &lt;code&gt;G&lt;/code&gt; . Возвращает цикл как список &lt;code&gt;[V,&amp;nbsp;...,&amp;nbsp;V]&lt;/code&gt; вершин или &lt;code&gt;false&lt;/code&gt; , если простого цикла через &lt;code&gt;V&lt;/code&gt; не существует. Обратите внимание, что &lt;code&gt;&lt;a href=&quot;#loop&quot;&gt;loop&lt;/a&gt;&lt;/code&gt; через &lt;code&gt;V&lt;/code&gt; возвращается как список &lt;code&gt;[V,&amp;nbsp;V]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7dd32105e9ea9dba4a3239b99d2841486b3f987d" translate="yes" xml:space="preserve">
          <source>Tries to find an as short as possible &lt;code&gt;&lt;a href=&quot;#simple_path&quot;&gt;simple path&lt;/a&gt;&lt;/code&gt; from vertex &lt;code&gt;V1&lt;/code&gt; to vertex &lt;code&gt;V2&lt;/code&gt; of digraph &lt;code&gt;G&lt;/code&gt;. Returns the path as a list &lt;code&gt;[V1,&amp;nbsp;...,&amp;nbsp;V2]&lt;/code&gt; of vertices, or &lt;code&gt;false&lt;/code&gt; if no simple path from &lt;code&gt;V1&lt;/code&gt; to &lt;code&gt;V2&lt;/code&gt; of length one or more exists.</source>
          <target state="translated">Пытаешься найти как можно более короткий &lt;code&gt;&lt;a href=&quot;#simple_path&quot;&gt;simple path&lt;/a&gt;&lt;/code&gt; из вершины &lt;code&gt;V1&lt;/code&gt; , чтобы вершина &lt;code&gt;V2&lt;/code&gt; из орграфа &lt;code&gt;G&lt;/code&gt; . Возвращает путь в виде списка &lt;code&gt;[V1,&amp;nbsp;...,&amp;nbsp;V2]&lt;/code&gt; вершин или &lt;code&gt;false&lt;/code&gt; , если не существует простого пути от &lt;code&gt;V1&lt;/code&gt; до &lt;code&gt;V2&lt;/code&gt; с длиной один или несколько.</target>
        </trans-unit>
        <trans-unit id="f904e656f227e2a584648e9091f6b33093af20b3" translate="yes" xml:space="preserve">
          <source>Tries to load a module in the same way as &lt;code&gt;&lt;a href=&quot;#load_file-1&quot;&gt;load_file/1&lt;/a&gt;&lt;/code&gt;, unless the module is already loaded. However, in embedded mode it does not load a module that is not already loaded, but returns &lt;code&gt;{error, embedded}&lt;/code&gt; instead. See &lt;code&gt;&lt;a href=&quot;#error_reasons&quot;&gt;Error Reasons for Code-Loading Functions&lt;/a&gt;&lt;/code&gt; for a description of other possible error reasons.</source>
          <target state="translated">Пытается загрузить модуль так же, как и &lt;code&gt;&lt;a href=&quot;#load_file-1&quot;&gt;load_file/1&lt;/a&gt;&lt;/code&gt; , если только модуль уже не загружен. Однако во встроенном режиме он не загружает модуль, который еще не загружен, а вместо этого возвращает &lt;code&gt;{error, embedded}&lt;/code&gt; . См. &amp;laquo; &lt;code&gt;&lt;a href=&quot;#error_reasons&quot;&gt;Error Reasons for Code-Loading Functions&lt;/a&gt;&lt;/code&gt; для описания других возможных причин ошибок.</target>
        </trans-unit>
        <trans-unit id="ec25834fa1b726007249264a0c7c78aaaf71538e" translate="yes" xml:space="preserve">
          <source>Tries to load all of the modules in the list &lt;code&gt;Modules&lt;/code&gt; atomically. That means that either all modules are loaded at the same time, or none of the modules are loaded if there is a problem with any of the modules.</source>
          <target state="translated">Пытается загрузить все модули в списке &lt;code&gt;Modules&lt;/code&gt; атомарно. Это означает, что либо все модули загружаются одновременно, либо ни один из модулей не загружается, если есть проблема с любым из модулей.</target>
        </trans-unit>
        <trans-unit id="1aaf9b09924ea99accd919111039be58e3e4e9fc" translate="yes" xml:space="preserve">
          <source>Tries to load and restore Debugger settings from a file previously saved using &lt;strong&gt;Save Settings...&lt;/strong&gt; (see below). Any errors are silently ignored.</source>
          <target state="translated">Пытается загрузить и восстановить настройки отладчика из файла, ранее сохраненного с помощью команды &amp;laquo; &lt;strong&gt;Сохранить настройки ...&amp;raquo;&lt;/strong&gt; (см. Ниже). Любые ошибки игнорируются.</target>
        </trans-unit>
        <trans-unit id="9bc1b21fc8af03b36192dd6ac14e4e4450744f7e" translate="yes" xml:space="preserve">
          <source>Tries to load any modules not already loaded in the list &lt;code&gt;Modules&lt;/code&gt; in the same way as &lt;code&gt;&lt;a href=&quot;#load_file-1&quot;&gt;load_file/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Пытается загрузить любые модули, которые еще не загружены в список &lt;code&gt;Modules&lt;/code&gt; таким же образом, как &lt;code&gt;&lt;a href=&quot;#load_file-1&quot;&gt;load_file/1&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b645a31575ab3155bc8f781878d4d3b627bae342" translate="yes" xml:space="preserve">
          <source>Tries to load code for all modules that have been previously prepared by &lt;code&gt;&lt;a href=&quot;#prepare_loading-1&quot;&gt;prepare_loading/1&lt;/a&gt;&lt;/code&gt;. The loading occurs atomically, meaning that either all modules are loaded at the same time, or none of the modules are loaded.</source>
          <target state="translated">Пытается загрузить код для всех модулей, которые были предварительно подготовлены с помощью &lt;code&gt;&lt;a href=&quot;#prepare_loading-1&quot;&gt;prepare_loading/1&lt;/a&gt;&lt;/code&gt; . Загрузка происходит атомарно, что означает, что либо все модули загружаются одновременно, либо ни один из модулей не загружается.</target>
        </trans-unit>
        <trans-unit id="f4b988df2289cf719529adabbdd5889a80ea66c6" translate="yes" xml:space="preserve">
          <source>Tries to load the Erlang module &lt;code&gt;Module&lt;/code&gt;, using the code path. It looks for the object code file with an extension corresponding to the Erlang machine used, for example, &lt;code&gt;Module.beam&lt;/code&gt;. The loading fails if the module name found in the object code differs from the name &lt;code&gt;Module&lt;/code&gt;. &lt;code&gt;&lt;a href=&quot;#load_binary-3&quot;&gt;load_binary/3&lt;/a&gt;&lt;/code&gt; must be used to load object code with a module name that is different from the file name.</source>
          <target state="translated">Пытается загрузить модуль &lt;code&gt;Module&lt;/code&gt; Erlang , используя путь кода. Он ищет файл объектного кода с расширением, соответствующим используемой машине Erlang, например, &lt;code&gt;Module.beam&lt;/code&gt; . Загрузка не выполняется, если имя модуля, найденное в объектном коде, отличается от имени &lt;code&gt;Module&lt;/code&gt; . &lt;code&gt;&lt;a href=&quot;#load_binary-3&quot;&gt;load_binary/3&lt;/a&gt;&lt;/code&gt; должен использоваться для загрузки объектного кода с именем модуля, отличным от имени файла.</target>
        </trans-unit>
        <trans-unit id="b49e8d37404b75156cbbeb1637eb4e0c68260be5" translate="yes" xml:space="preserve">
          <source>Tries to lock a mutex. A thread that has currently locked the mutex &lt;strong&gt;cannot&lt;/strong&gt; try to lock the same mutex again.</source>
          <target state="translated">Пытается заблокировать мьютекс. Поток, который в данный момент заблокировал мьютекс, &lt;strong&gt;не может&lt;/strong&gt; попытаться снова заблокировать тот же мьютекс.</target>
        </trans-unit>
        <trans-unit id="369d095339d331183fd1de82b70ca1f958ce57f3" translate="yes" xml:space="preserve">
          <source>Tries to read &lt;code&gt;String&lt;/code&gt; in accordance with the control sequences in &lt;code&gt;Format&lt;/code&gt;. For a detailed description of the available formatting options, see &lt;code&gt;&lt;a href=&quot;io#fread-3&quot;&gt;io:fread/3&lt;/a&gt;&lt;/code&gt;. It is assumed that &lt;code&gt;String&lt;/code&gt; contains whole lines.</source>
          <target state="translated">Пытается прочитать &lt;code&gt;String&lt;/code&gt; в соответствии с управляющими последовательностями в &lt;code&gt;Format&lt;/code&gt; . Подробное описание доступных параметров форматирования см. В разделе &lt;code&gt;&lt;a href=&quot;io#fread-3&quot;&gt;io:fread/3&lt;/a&gt;&lt;/code&gt; . Предполагается, что &lt;code&gt;String&lt;/code&gt; содержит целые строки.</target>
        </trans-unit>
        <trans-unit id="b5361d5cdb192bb80b006486e2deeb6e3a86a448" translate="yes" xml:space="preserve">
          <source>Tries to read lock an rwlock.</source>
          <target state="translated">Пытается прочитать блокировку замка.</target>
        </trans-unit>
        <trans-unit id="078c41228c821f4992dac3d604b1f36b0a4cc3ba" translate="yes" xml:space="preserve">
          <source>Tries to read/write lock an rwlock. A thread that currently has read or read/write locked the rwlock &lt;strong&gt;cannot&lt;/strong&gt; try to lock the same rwlock again.</source>
          <target state="translated">Пытается заблокировать чтение / запись rwlock. Поток, который в настоящее время заблокировал чтение или чтение / запись rwlock, &lt;strong&gt;не может&lt;/strong&gt; попытаться снова заблокировать тот же rwlock.</target>
        </trans-unit>
        <trans-unit id="dc8fa12e3d041770e3cb72f5520664da24c9462a" translate="yes" xml:space="preserve">
          <source>Tries to reduce a guard expression to a single constant value, if possible. The returned value is &lt;code&gt;{value, Term}&lt;/code&gt; if the guard expression &lt;code&gt;Expr&lt;/code&gt; always yields the constant value &lt;code&gt;Term&lt;/code&gt;, and is otherwise &lt;code&gt;none&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="542b3a8d434cdeb35d54c993e320baf91923b244" translate="yes" xml:space="preserve">
          <source>Tries to rename the file &lt;code&gt;Source&lt;/code&gt; to &lt;code&gt;Destination&lt;/code&gt;. It can be used to move files (and directories) between directories, but it is not sufficient to specify the destination only. The destination filename must also be specified. For example, if &lt;code&gt;bar&lt;/code&gt; is a normal file and &lt;code&gt;foo&lt;/code&gt; and &lt;code&gt;baz&lt;/code&gt; are directories, &lt;code&gt;rename(&quot;foo/bar&quot;, &quot;baz&quot;)&lt;/code&gt; returns an error, but &lt;code&gt;rename(&quot;foo/bar&quot;, &quot;baz/bar&quot;)&lt;/code&gt; succeeds. Returns &lt;code&gt;ok&lt;/code&gt; if it is successful.</source>
          <target state="translated">Пытается переименовать файл &lt;code&gt;Source&lt;/code&gt; в &lt;code&gt;Destination&lt;/code&gt; . Его можно использовать для перемещения файлов (и каталогов) между каталогами, но недостаточно указать только место назначения. Также необходимо указать имя файла назначения. Например, если &lt;code&gt;bar&lt;/code&gt; - это обычный файл, а &lt;code&gt;foo&lt;/code&gt; и &lt;code&gt;baz&lt;/code&gt; - каталоги, &lt;code&gt;rename(&quot;foo/bar&quot;, &quot;baz&quot;)&lt;/code&gt; возвращает ошибку, но &lt;code&gt;rename(&quot;foo/bar&quot;, &quot;baz/bar&quot;)&lt;/code&gt; выполняется успешно. Возвращает &lt;code&gt;ok&lt;/code&gt; если все прошло успешно.</target>
        </trans-unit>
        <trans-unit id="b69799527904c5b0f81a27b2394603c188136973" translate="yes" xml:space="preserve">
          <source>Tries to set the scheduler bind type. The same as flag &lt;code&gt;&lt;a href=&quot;#+sbt&quot;&gt;+sbt&lt;/a&gt;&lt;/code&gt; except how some errors are handled. For more information, see &lt;code&gt;&lt;a href=&quot;#+sbt&quot;&gt;+sbt&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Пытается установить тип привязки планировщика. То же, что flag &lt;code&gt;&lt;a href=&quot;#+sbt&quot;&gt;+sbt&lt;/a&gt;&lt;/code&gt; , за исключением обработки некоторых ошибок. Для получения дополнительной информации см. &lt;code&gt;&lt;a href=&quot;#+sbt&quot;&gt;+sbt&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3739b1427af771c5c5c521a0baa015d6c8471836" translate="yes" xml:space="preserve">
          <source>Tries to suspend all processes using a module &lt;code&gt;Mod&lt;/code&gt;. If a process does not respond, it is ignored. This can cause the process to die, either because it crashes when it spontaneously switches to new code, or as a result of a purge operation. If no &lt;code&gt;Timeout&lt;/code&gt; is specified or &lt;code&gt;default&lt;/code&gt; is specified, the default value for &lt;code&gt;sys:suspend&lt;/code&gt; is used.</source>
          <target state="translated">Пытается приостановить все процессы с помощью модуля &lt;code&gt;Mod&lt;/code&gt; . Если процесс не отвечает, он игнорируется. Это может привести к остановке процесса либо из-за его сбоя при спонтанном переключении на новый код, либо в результате операции очистки. Если &lt;code&gt;Timeout&lt;/code&gt; не указан или задано значение по &lt;code&gt;default&lt;/code&gt; , используется значение по умолчанию для &lt;code&gt;sys:suspend&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f07a25fbd2993e4438fecb34b5a2a265898a4510" translate="yes" xml:space="preserve">
          <source>Trigger the user-probe &lt;code&gt;user_trace_i4s4&lt;/code&gt; in the NIF library &lt;code&gt;dyntrace.so&lt;/code&gt; by calling &lt;code&gt;dyntrace:p/{1,2,3,4,5,6,7,8}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;user_trace_i4s4&lt;/code&gt; пользовательский зонд user_trace_i4s4 в библиотеке NIF &lt;code&gt;dyntrace.so&lt;/code&gt; , вызвав &lt;code&gt;dyntrace:p/{1,2,3,4,5,6,7,8}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="55b4e339fc739fe569582f228faed311550ce6f3" translate="yes" xml:space="preserve">
          <source>Triggers garbage collection of requested type. Default value is &lt;code&gt;'major'&lt;/code&gt;, which would trigger a fullsweep GC. The option &lt;code&gt;'minor'&lt;/code&gt; is considered a hint and may lead to either minor or major GC run.</source>
          <target state="translated">Запускает сборку мусора запрошенного типа. Значение по умолчанию - &lt;code&gt;'major'&lt;/code&gt; , что запускает сборщик мусора с полной разверткой. Вариант &lt;code&gt;'minor'&lt;/code&gt; считается подсказкой и может привести к незначительному или основному запуску сборщика мусора.</target>
        </trans-unit>
        <trans-unit id="bce7d4bc5bdcfee52b94b55561a6aeaf81f157f5" translate="yes" xml:space="preserve">
          <source>Triggers the next message to be streamed, that is, the same behavior as active ones for sockets.</source>
          <target state="translated">Запускает следующее сообщение для потоковой передачи,то есть такое же поведение,как и у активных для сокетов.</target>
        </trans-unit>
        <trans-unit id="a0f37655e58e53f4d21a5d5b772a98970d6a45b9" translate="yes" xml:space="preserve">
          <source>Trim threshold size (in kilobytes). This is the maximum amount of free memory at the top of the heap (allocated by &lt;code&gt;sbrk&lt;/code&gt;) that is kept by &lt;code&gt;malloc&lt;/code&gt; (not released to the operating system). When the amount of free memory at the top of the heap exceeds the trim threshold, &lt;code&gt;malloc&lt;/code&gt; releases it (by calling &lt;code&gt;sbrk&lt;/code&gt;). Trim threshold is specified in kilobytes. Defaults to &lt;code&gt;128&lt;/code&gt;.</source>
          <target state="translated">Обрезать пороговый размер (в килобайтах). Это максимальный объем свободной памяти в верхней части кучи (выделенной &lt;code&gt;sbrk&lt;/code&gt; ), который хранится &lt;code&gt;malloc&lt;/code&gt; (не передается операционной системе). Когда объем свободной памяти в верхней части кучи превышает пороговое значение обрезки, &lt;code&gt;malloc&lt;/code&gt; освобождает ее (путем вызова &lt;code&gt;sbrk&lt;/code&gt; ). Порог обрезки указывается в килобайтах. По умолчанию &lt;code&gt;128&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="95ec715dc8ff6a5284221ec8f9868a8798be9478" translate="yes" xml:space="preserve">
          <source>Trivial FTP.</source>
          <target state="translated">Тривиальный FTP.</target>
        </trans-unit>
        <trans-unit id="4ba00956ec7cf24ae072a34b8ff599479668e012" translate="yes" xml:space="preserve">
          <source>Trivial example (beep on anything except empty line, which is expanded to &lt;code&gt;&quot;quit&quot;&lt;/code&gt;):</source>
          <target state="translated">Тривиальный пример (звуковой сигнал во всем, кроме пустой строки, которая расширяется до &lt;code&gt;&quot;quit&quot;&lt;/code&gt; ):</target>
        </trans-unit>
        <trans-unit id="c64384e3540118ebd85f8e8adda7b3a0d9d9d577" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;t&lt;/code&gt; is a binary.</source>
          <target state="translated">Истинно, если &lt;code&gt;t&lt;/code&gt; является двоичным.</target>
        </trans-unit>
        <trans-unit id="2184451194ed3a9022be648eb665e2e8303c78bb" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;t&lt;/code&gt; is a floating point number.</source>
          <target state="translated">Истинно, если &lt;code&gt;t&lt;/code&gt; - число с плавающей запятой.</target>
        </trans-unit>
        <trans-unit id="739f16017ed1c1b0d52375a346e88d29489f5f4c" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;t&lt;/code&gt; is a list with at least one element.</source>
          <target state="translated">Истинно, если &lt;code&gt;t&lt;/code&gt; - список, содержащий хотя бы один элемент.</target>
        </trans-unit>
        <trans-unit id="4dc6a0f22eecbe39d3b7bafca6d0ecf3f15fab72" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;t&lt;/code&gt; is a list with zero or more elements.</source>
          <target state="translated">Истинно, если &lt;code&gt;t&lt;/code&gt; - список с нулевым или большим количеством элементов.</target>
        </trans-unit>
        <trans-unit id="7e4dec6465a412dda92c461f8f7e72cba72e9ec3" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;t&lt;/code&gt; is a pid (process identifier).</source>
          <target state="translated">Истинно, если &lt;code&gt;t&lt;/code&gt; - pid (идентификатор процесса).</target>
        </trans-unit>
        <trans-unit id="ca9f92d44502347305071d3028c3415ccc6539b0" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;t&lt;/code&gt; is a port.</source>
          <target state="translated">Истинно, если &lt;code&gt;t&lt;/code&gt; - порт.</target>
        </trans-unit>
        <trans-unit id="63b81f24f20e74b9964fd68165f42bbd5f102696" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;t&lt;/code&gt; is a reference.</source>
          <target state="translated">Истинно, если &lt;code&gt;t&lt;/code&gt; - ссылка.</target>
        </trans-unit>
        <trans-unit id="369ae59368966778ddc2fa05ef42ca484213f640" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;t&lt;/code&gt; is a tuple.</source>
          <target state="translated">Истинно, если &lt;code&gt;t&lt;/code&gt; - кортеж.</target>
        </trans-unit>
        <trans-unit id="200e8169564499251662fa489120aa02ef56f5b7" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;t&lt;/code&gt; is an atom.</source>
          <target state="translated">Верно, если &lt;code&gt;t&lt;/code&gt; - атом.</target>
        </trans-unit>
        <trans-unit id="d2096948a91663a352916722e0007725da8866ba" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;t&lt;/code&gt; is an empty list.</source>
          <target state="translated">Истинно, если &lt;code&gt;t&lt;/code&gt; - пустой список.</target>
        </trans-unit>
        <trans-unit id="7cf519e4319be41a9707146ad88931f2320203e5" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;t&lt;/code&gt; is an integer.</source>
          <target state="translated">Истинно, если &lt;code&gt;t&lt;/code&gt; - целое число.</target>
        </trans-unit>
        <trans-unit id="58de67beda24834e524aecdc74c16cbb945cf7c3" translate="yes" xml:space="preserve">
          <source>Truncates the file referenced by &lt;code&gt;IoDevice&lt;/code&gt; at the current position. Returns &lt;code&gt;ok&lt;/code&gt; if successful, otherwise &lt;code&gt;{error, Reason}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;IoDevice&lt;/code&gt; файл, на который ссылается IoDevice, в текущей позиции. В случае успеха возвращает &lt;code&gt;ok&lt;/code&gt; , в противном случае - &lt;code&gt;{error, Reason}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="37023c65abd347268bb58c87d2fb0048749a483a" translate="yes" xml:space="preserve">
          <source>Try out the new function &lt;code&gt;mult&lt;/code&gt;:</source>
          <target state="translated">Попробуйте новую функцию &lt;code&gt;mult&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="8ff47aa173fda0968a762374da8240dfe8b55c52" translate="yes" xml:space="preserve">
          <source>Trying to evaluate a &lt;code&gt;throw&lt;/code&gt;outside a &lt;code&gt;catch&lt;/code&gt;. &lt;code&gt;V&lt;/code&gt; is the thrown term.</source>
          <target state="translated">Попытка оценить &lt;code&gt;throw&lt;/code&gt; вне &lt;code&gt;catch&lt;/code&gt; . &lt;code&gt;V&lt;/code&gt; - выброшенный член.</target>
        </trans-unit>
        <trans-unit id="07a738ec4060694f8cccf2229438cc8e4149b664" translate="yes" xml:space="preserve">
          <source>Trying to link or monitor to a non-existing process or port.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cae5dd25bf19639aecf488ad3d7ba57e76736991" translate="yes" xml:space="preserve">
          <source>Trying to link to a non-existing process.</source>
          <target state="translated">Попытка связать с несуществующим процессом.</target>
        </trans-unit>
        <trans-unit id="f4134e3f0fb2b5c47f2d5517769378391de080f4" translate="yes" xml:space="preserve">
          <source>Tunes the compression algorithm. Use the following values:</source>
          <target state="translated">Настраивает алгоритм сжатия.Используйте следующие значения:</target>
        </trans-unit>
        <trans-unit id="f3e0a317e78b26f5945cf71664d252d582664be5" translate="yes" xml:space="preserve">
          <source>Tuning the intensity and period</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c41a2be51027c17da2914785c19c9af65da7231f" translate="yes" xml:space="preserve">
          <source>Tuple</source>
          <target state="translated">Tuple</target>
        </trans-unit>
        <trans-unit id="83ed105f4df89ed36299f9fd59a044cb698807f7" translate="yes" xml:space="preserve">
          <source>Tuples &lt;code&gt;{error, error_info()}&lt;/code&gt; and &lt;code&gt;{warning, error_info()}&lt;/code&gt;, denoting syntactically incorrect forms and warnings, and &lt;code&gt;{eof, line()}&lt;/code&gt;, denoting an end-of-stream encountered before a complete form had been parsed.</source>
          <target state="translated">Кортежи &lt;code&gt;{error, error_info()}&lt;/code&gt; и &lt;code&gt;{warning, error_info()}&lt;/code&gt; , обозначающие синтаксически неправильные формы и предупреждения, и &lt;code&gt;{eof, line()}&lt;/code&gt; , обозначающие конец потока, обнаруженный до того, как была проанализирована полная форма.</target>
        </trans-unit>
        <trans-unit id="0ffa679969428a6c8a5fbef9da583b1339b8f137" translate="yes" xml:space="preserve">
          <source>Tuples &lt;code&gt;{error,E}&lt;/code&gt; and &lt;code&gt;{warning,W}&lt;/code&gt;, denoting syntactically incorrect forms and warnings.</source>
          <target state="translated">Кортежи &lt;code&gt;{error,E}&lt;/code&gt; и &lt;code&gt;{warning,W}&lt;/code&gt; , обозначающие синтаксически неправильные формы и предупреждения.</target>
        </trans-unit>
        <trans-unit id="f4a5e32a69d4a4da5b271ce1389ce7de27bf6be9" translate="yes" xml:space="preserve">
          <source>Tuples and string formats accepted by versions before ssl-8.2.4 will be converted for backwards compatibility</source>
          <target state="translated">Кортежи и форматы строк,принятые версиями до ssl-8.2.4,будут преобразованы для обратной совместимости.</target>
        </trans-unit>
        <trans-unit id="f1ed151ede62f70799b920d57a42f17bd5fb2581" translate="yes" xml:space="preserve">
          <source>Tuples can have more than two parts, in fact as many parts as you want, and contain any valid Erlang &lt;strong&gt;term&lt;/strong&gt;. For example, to represent the temperature of various cities of the world:</source>
          <target state="translated">Кортежи могут состоять более чем из двух частей, фактически столько частей, сколько вы хотите, и содержать любой допустимый &lt;strong&gt;термин&lt;/strong&gt; Erlang . Например, чтобы представить температуру различных городов мира:</target>
        </trans-unit>
        <trans-unit id="ef0f5b8ef4ff33f41dc26081793feb3c120d0be9" translate="yes" xml:space="preserve">
          <source>Tuples have a fixed number of items in them. Each item in a tuple is called an &lt;strong&gt;element&lt;/strong&gt;. In the tuple &lt;code&gt;{moscow,{c,-10}}&lt;/code&gt;, element 1 is &lt;code&gt;moscow&lt;/code&gt; and element 2 is &lt;code&gt;{c,-10}&lt;/code&gt;. Here &lt;code&gt;c&lt;/code&gt; represents Celsius and &lt;code&gt;f&lt;/code&gt; Fahrenheit.</source>
          <target state="translated">Кортежи содержат фиксированное количество элементов. Каждый элемент в кортеже называется &lt;strong&gt;элементом&lt;/strong&gt; . В кортеже &lt;code&gt;{moscow,{c,-10}}&lt;/code&gt; элемент 1 - это &lt;code&gt;moscow&lt;/code&gt; , а элемент 2 - &lt;code&gt;{c,-10}&lt;/code&gt; . Здесь &lt;code&gt;c&lt;/code&gt; представляет собой градусы Цельсия, а &lt;code&gt;f&lt;/code&gt; - градусы Фаренгейта.</target>
        </trans-unit>
        <trans-unit id="6af244d55aef38e6c2274514e3d2ab60c94ed28b" translate="yes" xml:space="preserve">
          <source>Tuples in the template express if-exist tests for metadata keys. For example, the following tuple says that if &lt;code&gt;key1&lt;/code&gt; exists in the metadata map, print &lt;code&gt;&quot;key1=Value&quot;&lt;/code&gt;, where &lt;code&gt;Value&lt;/code&gt; is the value that &lt;code&gt;key1&lt;/code&gt; is associated with in the metadata map. If &lt;code&gt;key1&lt;/code&gt; does not exist, print nothing.</source>
          <target state="translated">Кортежи в шаблоне выражают тесты на наличие ключей метаданных. Например, в следующем кортеже говорится, что если &lt;code&gt;key1&lt;/code&gt; существует в карте метаданных, выведите &lt;code&gt;&quot;key1=Value&quot;&lt;/code&gt; , где &lt;code&gt;Value&lt;/code&gt; - это значение, с которым связан &lt;code&gt;key1&lt;/code&gt; в карте метаданных. Если &lt;code&gt;key1&lt;/code&gt; не существует, ничего не печатать.</target>
        </trans-unit>
        <trans-unit id="243da839e833dcd6a7348ba4d1efa268f8e8a3ec" translate="yes" xml:space="preserve">
          <source>Tuples, maps, and lists (except strings, see below) are built in reverse polish notation, so that to build a tuple, the elements are specified first, and then the tuple term, with a count. Likewise for lists and maps.</source>
          <target state="translated">Кортежи,карты и списки (кроме строк,см.ниже)строятся в обратной польской нотации,так что для построения кортежа сначала указываются элементы,а затем и термин кортежа,с графом.Аналогично для списков и карт.</target>
        </trans-unit>
        <trans-unit id="8d71459c65d809aa4497f4a28bfc896fb1085c9c" translate="yes" xml:space="preserve">
          <source>Turn a syntax tree or list of trees into a template or templates. Templates can be instantiated or matched against, and reverted back to normal syntax trees using &lt;code&gt;&lt;a href=&quot;#tree-1&quot;&gt;tree/1&lt;/a&gt;&lt;/code&gt;. If the input is already a template, it is not modified further.</source>
          <target state="translated">Превратите синтаксическое дерево или список деревьев в шаблон или шаблоны. Шаблоны могут быть созданы или сопоставлены с ними и вернуться к нормальным синтаксическим деревьям с помощью &lt;code&gt;&lt;a href=&quot;#tree-1&quot;&gt;tree/1&lt;/a&gt;&lt;/code&gt; . Если входные данные уже являются шаблоном, они больше не изменяются.</target>
        </trans-unit>
        <trans-unit id="d8971cba7199bca87b23c2ec538c7121c59edc40" translate="yes" xml:space="preserve">
          <source>Turn a template into a syntax tree representing the template. Meta-variables in the template are turned into normal Erlang variables if their names (after the metavariable prefix characters) begin with an uppercase character. E.g., &lt;code&gt;_@Foo&lt;/code&gt; in the template becomes the variable &lt;code&gt;Foo&lt;/code&gt; in the meta-template. Furthermore, variables ending with &lt;code&gt;@&lt;/code&gt; are automatically wrapped in a call to merl:term/1, so e.g. &lt;code&gt;_@Foo@ in the template becomes `merl:term(Foo)&lt;/code&gt; in the meta-template.</source>
          <target state="translated">Превратите шаблон в синтаксическое дерево, представляющее шаблон. Мета-переменные в шаблоне превращаются в обычные переменные Erlang, если их имена (после символов префикса метапеременных) начинаются с символа верхнего регистра. Например, &lt;code&gt;_@Foo&lt;/code&gt; в шаблоне становится переменной &lt;code&gt;Foo&lt;/code&gt; в мета-шаблоне. Более того, переменные, заканчивающиеся на &lt;code&gt;@&lt;/code&gt; , автоматически заключаются в вызов merl: term / 1, поэтому, например, &lt;code&gt;_@Foo@ in the template becomes `merl:term(Foo)&lt;/code&gt; в мета-шаблоне.</target>
        </trans-unit>
        <trans-unit id="f11fdfc294615cd6feba1dc471497bd296595a74" translate="yes" xml:space="preserve">
          <source>Turn an error reason returned by &lt;code&gt;&lt;a href=&quot;#codec-2&quot;&gt;codec/2&lt;/a&gt;&lt;/code&gt; into a readable string.</source>
          <target state="translated">Превратите причину ошибки, возвращаемую &lt;code&gt;&lt;a href=&quot;#codec-2&quot;&gt;codec/2&lt;/a&gt;&lt;/code&gt; , в читаемую строку.</target>
        </trans-unit>
        <trans-unit id="0a32475174f92b9fb2f8542dc37a90aaa235a8d8" translate="yes" xml:space="preserve">
          <source>Turn off monitoring of the SNMP manager.</source>
          <target state="translated">Выключите мониторинг SNMP менеджера.</target>
        </trans-unit>
        <trans-unit id="1596e715102816d11edb68278af146f787525ee2" translate="yes" xml:space="preserve">
          <source>Turn on and pare down debugging</source>
          <target state="translated">Включите и выполните отладку.</target>
        </trans-unit>
        <trans-unit id="8d0273b96fc2970b3bd22f825df50106f57a4d5f" translate="yes" xml:space="preserve">
          <source>Turn on distribution tracing on the Erlang node.</source>
          <target state="translated">Включите трассировку распределения на узле Эрланг.</target>
        </trans-unit>
        <trans-unit id="4b6673d76d88179b888141748a220ac4df22b7da" translate="yes" xml:space="preserve">
          <source>Turn on global tracing</source>
          <target state="translated">Включить глобальное отслеживание</target>
        </trans-unit>
        <trans-unit id="b5fd46c0414339fbc6a9a1e9bcad5db789cc32cf" translate="yes" xml:space="preserve">
          <source>Turning the scrollable_cursors option off is noted to make old odbc-drivers able to connect that will otherwhise fail.</source>
          <target state="translated">Выключение опции scrollable_cursors отмечено для того,чтобы старые odbc-драйверы могли подключаться,но в противном случае они не смогут работать.</target>
        </trans-unit>
        <trans-unit id="b3754a20c309fb4bee5151fc9185df3eb19690cf" translate="yes" xml:space="preserve">
          <source>Turns &lt;code&gt;Expr&lt;/code&gt; into a &quot;test object&quot;, by wrapping it in a fun-expression and a source line number. Technically, this is the same as &lt;code&gt;{?LINE, fun () -&amp;gt; (Expr) end}&lt;/code&gt;.</source>
          <target state="translated">Превращает &lt;code&gt;Expr&lt;/code&gt; в &amp;laquo;тестовый объект&amp;raquo;, заключая его в fun-expression и номер исходной строки. Технически это то же самое, что и &lt;code&gt;{?LINE, fun () -&amp;gt; (Expr) end}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f90beb2441a8b6db181aba2d7f261f9f114ad008" translate="yes" xml:space="preserve">
          <source>Turns a distributed node into a non-distributed node. For other nodes in the network, this is the same as the node going down. Only possible when the net kernel was started using &lt;code&gt;&lt;a href=&quot;#start-1&quot;&gt;start/1&lt;/a&gt;&lt;/code&gt;, otherwise &lt;code&gt;{error, not_allowed}&lt;/code&gt; is returned. Returns &lt;code&gt;{error, not_found}&lt;/code&gt; if the local node is not alive.</source>
          <target state="translated">Превращает распределенный узел в нераспределенный узел. Для других узлов в сети это то же самое, что и выход узла из строя. Возможно только тогда, когда сетевое ядро ​​было запущено с использованием &lt;code&gt;&lt;a href=&quot;#start-1&quot;&gt;start/1&lt;/a&gt;&lt;/code&gt; , в противном случае возвращается &lt;code&gt;{error, not_allowed}&lt;/code&gt; . Возвращает &lt;code&gt;{error, not_found}&lt;/code&gt; если локальный узел не работает.</target>
        </trans-unit>
        <trans-unit id="d9857baf63bd4ff78f8a1416e9cce2328191833c" translate="yes" xml:space="preserve">
          <source>Turns a non-distributed node into a distributed node by starting &lt;code&gt;net_kernel&lt;/code&gt; and other necessary processes.</source>
          <target state="translated">Превращает нераспределенный узел в распределенный, запустив &lt;code&gt;net_kernel&lt;/code&gt; и другие необходимые процессы.</target>
        </trans-unit>
        <trans-unit id="3f5c74d445a6ff38a1d1a5a031b9bc86b2fedd78" translate="yes" xml:space="preserve">
          <source>Turns a parsed dictionary, as returned by &lt;code&gt;&lt;a href=&quot;#codec-2&quot;&gt;codec/2&lt;/a&gt;&lt;/code&gt;, back into the dictionary format.</source>
          <target state="translated">Превращает проанализированный словарь, возвращенный &lt;code&gt;&lt;a href=&quot;#codec-2&quot;&gt;codec/2&lt;/a&gt;&lt;/code&gt; , обратно в формат словаря.</target>
        </trans-unit>
        <trans-unit id="e92b0eef302a90ddf93e3d3b8a0765906432d6ac" translate="yes" xml:space="preserve">
          <source>Turns an ordered list &lt;code&gt;List&lt;/code&gt; of key-value tuples into a tree. The list must not contain duplicate keys.</source>
          <target state="translated">Превращает упорядоченный список &lt;code&gt;List&lt;/code&gt; кортежей &quot;ключ-значение&quot; в дерево. В списке не должно быть повторяющихся ключей.</target>
        </trans-unit>
        <trans-unit id="8629e653fd2bdd0ad7cbe844c08311477772efcc" translate="yes" xml:space="preserve">
          <source>Turns an ordered-set list &lt;code&gt;List&lt;/code&gt; into a set. The list must not contain duplicates.</source>
          <target state="translated">Превращает список упорядоченного набора &lt;code&gt;List&lt;/code&gt; в набор. В списке не должно быть дубликатов.</target>
        </trans-unit>
        <trans-unit id="9373344ff9c8b8d02dd03592aeaf47c2fd0e64a6" translate="yes" xml:space="preserve">
          <source>Turns off all debugging for the process. This includes functions that are installed explicitly with function &lt;code&gt;&lt;a href=&quot;#install-2&quot;&gt;install/2,3&lt;/a&gt;&lt;/code&gt;, for example, triggers.</source>
          <target state="translated">Выключает всю отладку для процесса. Сюда входят функции, которые явно устанавливаются с помощью функции &lt;code&gt;&lt;a href=&quot;#install-2&quot;&gt;install/2,3&lt;/a&gt;&lt;/code&gt; , например, триггеры.</target>
        </trans-unit>
        <trans-unit id="d36edf7582655f75400ba16943847aa4c6aa0271" translate="yes" xml:space="preserve">
          <source>Turns off warnings for &quot;fresh&quot; variables in functional objects or list comprehensions with the same name as some already defined variable. Default is to emit warnings for such variables.</source>
          <target state="translated">Выключает предупреждения для &quot;свежих&quot; переменных в функциональных объектах или понимания списков с тем же именем,что и у некоторых уже определенных переменных.По умолчанию выдавать предупреждения для таких переменных.</target>
        </trans-unit>
        <trans-unit id="c093c691688f1f921a86e4bb9a9da3d6975d7358" translate="yes" xml:space="preserve">
          <source>Turns off warnings for calls to deprecated functions like &lt;code&gt;nowarn_deprecated_function&lt;/code&gt; does, but only for the mentioned functions. &lt;code&gt;MFAs&lt;/code&gt; is a tuple &lt;code&gt;{Module,Name,Arity}&lt;/code&gt; or a list of such tuples.</source>
          <target state="translated">Отключает предупреждения для вызовов устаревших функций, таких как &lt;code&gt;nowarn_deprecated_function&lt;/code&gt; , но только для упомянутых функций. &lt;code&gt;MFAs&lt;/code&gt; - это кортеж &lt;code&gt;{Module,Name,Arity}&lt;/code&gt; или список таких кортежей.</target>
        </trans-unit>
        <trans-unit id="31c129b33c46ffb547299340b27a43f495c00d43" translate="yes" xml:space="preserve">
          <source>Turns off warnings for calls to deprecated functions. Default is to emit warnings for every call to a function known by the compiler to be deprecated. Notice that the compiler does not know about attribute &lt;code&gt;-deprecated()&lt;/code&gt;, but uses an assembled list of deprecated functions in Erlang/OTP. To do a more general check, the Xref tool can be used. See also &lt;code&gt;xref(3)&lt;/code&gt; and the function &lt;code&gt;xref:m/1&lt;/code&gt;, also accessible through the function &lt;code&gt;c:xm/1&lt;/code&gt;.</source>
          <target state="translated">Отключает предупреждения о вызовах устаревших функций. По умолчанию выдается предупреждение при каждом вызове функции, которую компилятор считает устаревшей. Обратите внимание, что компилятор не знает об атрибуте &lt;code&gt;-deprecated()&lt;/code&gt; , но использует собранный список устаревших функций в Erlang / OTP. Для более общей проверки можно использовать инструмент Xref. См. Также &lt;code&gt;xref(3)&lt;/code&gt; и функцию &lt;code&gt;xref:m/1&lt;/code&gt; , также доступную через функцию &lt;code&gt;c:xm/1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aee881859be77fa1680f379d9cb9a8b67406b5bf" translate="yes" xml:space="preserve">
          <source>Turns off warnings for calls to functions that have been removed. Default is to emit warnings for every call to a function known by the compiler to have been recently removed from Erlang/OTP.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5a9e8c56d11bc3f831ac60e969adff2295cdb81" translate="yes" xml:space="preserve">
          <source>Turns off warnings for calls to modules or functions that have been removed. Default is to emit warnings for every call to a function known by the compiler to have been recently removed from Erlang/OTP.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8643ee4d5408ecde9d2dfad0ec79316bb062403" translate="yes" xml:space="preserve">
          <source>Turns off warnings for calls to old type testing BIFs, such as &lt;code&gt;pid/1&lt;/code&gt; and &lt;code&gt;list/1&lt;/code&gt;. See the &lt;code&gt;Erlang Reference Manual&lt;/code&gt; for a complete list of type testing BIFs and their old equivalents. Default is to emit warnings for calls to old type testing BIFs.</source>
          <target state="translated">Отключает предупреждения о вызовах BIF тестирования старого типа, например &lt;code&gt;pid/1&lt;/code&gt; и &lt;code&gt;list/1&lt;/code&gt; . См. &lt;code&gt;Erlang Reference Manual&lt;/code&gt; по Erlang для получения полного списка типовых тестов BIF и их старых эквивалентов. По умолчанию выдается предупреждение о вызовах BIF для тестирования старого типа.</target>
        </trans-unit>
        <trans-unit id="858be8f3bcf091fa061e46059bd3158726b548e6" translate="yes" xml:space="preserve">
          <source>Turns off warnings for unused local functions like &lt;code&gt;nowarn_unused_function&lt;/code&gt; does, but only for the mentioned local functions. &lt;code&gt;FAs&lt;/code&gt; is a tuple &lt;code&gt;{Name,Arity}&lt;/code&gt; or a list of such tuples.</source>
          <target state="translated">&lt;code&gt;nowarn_unused_function&lt;/code&gt; предупреждения для неиспользуемых локальных функций, таких как nowarn_unused_function , но только для упомянутых локальных функций. &lt;code&gt;FAs&lt;/code&gt; - это кортеж &lt;code&gt;{Name,Arity}&lt;/code&gt; или список таких кортежей.</target>
        </trans-unit>
        <trans-unit id="c5e54f68af28f7baa91e0a423d6d647a5b8f257e" translate="yes" xml:space="preserve">
          <source>Turns off warnings for unused local functions. Default is to emit warnings for all local functions that are not called directly or indirectly by an exported function. The compiler does not include unused local functions in the generated beam file, but the warning is still useful to keep the source code cleaner.</source>
          <target state="translated">Отключает предупреждения о неиспользуемых локальных функциях.По умолчанию выдаются предупреждения для всех локальных функций,которые не вызываются прямо или косвенно экспортируемой функцией.Компилятор не включает неиспользуемые локальные функции в файл генерируемого луча,но предупреждение все равно полезно для поддержания чистоты исходного кода.</target>
        </trans-unit>
        <trans-unit id="8756279a371f2c74c71bfe9ea11d8fce882bd7ef" translate="yes" xml:space="preserve">
          <source>Turns off warnings for unused record types. Default is to emit warnings for unused locally defined record types.</source>
          <target state="translated">Отключает предупреждения для неиспользуемых типов записей.По умолчанию выдает предупреждения для неиспользуемых локально определенных типов записей.</target>
        </trans-unit>
        <trans-unit id="40e660b8f492c229e1e8f807933c1bba4d2abc6f" translate="yes" xml:space="preserve">
          <source>Turns off warnings for use of deprecated types. Default is to emit warnings for every use of a type known by the compiler to be deprecated.</source>
          <target state="translated">Отключает предупреждения об использовании устаревших типов.По умолчанию предупреждения выдаются за каждое использование типа,известного компилятору как deprecated.</target>
        </trans-unit>
        <trans-unit id="176262640a2c391f662fb5a4f78d832cbe27740e" translate="yes" xml:space="preserve">
          <source>Turns off warnings for uses of the &lt;code&gt;export_all&lt;/code&gt; option. Default is to emit a warning if option &lt;code&gt;export_all&lt;/code&gt; is also given.</source>
          <target state="translated">&lt;code&gt;export_all&lt;/code&gt; предупреждения об использовании параметра export_all . По умолчанию &lt;code&gt;export_all&lt;/code&gt; предупреждение, если также задана опция export_all .</target>
        </trans-unit>
        <trans-unit id="849c8f41403b31c687964c8f844bbdc3100c6d15" translate="yes" xml:space="preserve">
          <source>Turns on (if &lt;code&gt;How == true&lt;/code&gt;) or off (if &lt;code&gt;How == false&lt;/code&gt;) the trace flags in &lt;code&gt;FlagList&lt;/code&gt; for the process or processes represented by &lt;code&gt;PidPortSpec&lt;/code&gt;.</source>
          <target state="translated">Включает (если &lt;code&gt;How == true&lt;/code&gt; ) или выключает (если &lt;code&gt;How == false&lt;/code&gt; ) флаги трассировки в &lt;code&gt;FlagList&lt;/code&gt; для процесса или процессов, представленных &lt;code&gt;PidPortSpec&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="90d4fea9a9eccae1bb6537b80425ce163c0e0e56" translate="yes" xml:space="preserve">
          <source>Turns on or off call tracing for all types of function calls. Trace messages are sent whenever any of the specified functions are called, regardless of how they are called. If flag &lt;code&gt;return_to&lt;/code&gt; is set for the process, a &lt;code&gt;return_to&lt;/code&gt; message is also sent when this function returns to its caller.</source>
          <target state="translated">Включает или отключает трассировку вызовов для всех типов вызовов функций. Сообщения трассировки отправляются всякий раз, когда вызывается любая из указанных функций, независимо от того, как они вызываются. Если для процесса установлен флаг &lt;code&gt;return_to&lt;/code&gt; , сообщение &lt;code&gt;return_to&lt;/code&gt; также отправляется, когда эта функция возвращается к своему вызывающему.</target>
        </trans-unit>
        <trans-unit id="9cdc9034760c5ba6cf5f548250769a126c6a5dc8" translate="yes" xml:space="preserve">
          <source>Turns on or off call tracing for global function calls (that is, calls specifying the module explicitly). Only exported functions match and only global calls generate trace messages. &lt;strong&gt;This is the default&lt;/strong&gt;.</source>
          <target state="translated">Включает или выключает трассировку вызовов для вызовов глобальных функций (то есть вызовов, явно указывающих модуль). Соответствуют только экспортированные функции, и только глобальные вызовы генерируют сообщения трассировки. &lt;strong&gt;Это значение по умолчанию&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="dbac06dc38fd14ffc69474d6cefe052fcc1e6496" translate="yes" xml:space="preserve">
          <source>Turns on or off meta-tracing for all types of function calls. Trace messages are sent to the tracer whenever any of the specified functions are called. If no tracer is specified, &lt;code&gt;self()&lt;/code&gt; is used as a default tracer process.</source>
          <target state="translated">Включает или отключает мета-трассировку для всех типов вызовов функций. Сообщения трассировки отправляются трассировщику при каждом вызове любой из указанных функций. Если трассировщик не указан, в качестве трассирующего процесса по умолчанию используется &lt;code&gt;self()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a4a9e6071c635a8a8f47c7128d5e27fbe6794aa8" translate="yes" xml:space="preserve">
          <source>Turns on or off scheduler wall time measurements.</source>
          <target state="translated">Включает или выключает измерение времени на стене планировщика.</target>
        </trans-unit>
        <trans-unit id="6491707b6fbdad098acea3fe30f8bc3c9caeff41" translate="yes" xml:space="preserve">
          <source>Turns on/off microstate accounting measurements. When passing reset, all counters are reset to 0.</source>
          <target state="translated">Включает/выключает измерения микрогосударственного учета.При прохождении сброса все счетчики сбрасываются на 0.</target>
        </trans-unit>
        <trans-unit id="49209b989e6c3ee063b36215b5a4316a9a7be144" translate="yes" xml:space="preserve">
          <source>Turns on|off automatic mapping of IPv4 addresses into IPv6 ones (if the socket address family is &lt;code&gt;AF_INET6&lt;/code&gt;).</source>
          <target state="translated">Включает | отключает автоматическое отображение адресов IPv4 в адреса IPv6 (если семейство адресов сокета &lt;code&gt;AF_INET6&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="f85ecd85cea1de6466fad134e2d2f8f716405e71" translate="yes" xml:space="preserve">
          <source>Turns on|off the Nagle algorithm for merging small packets into larger ones. This improves throughput at the expense of latency.</source>
          <target state="translated">Перевернул on|off алгоритм Nagle для объединения маленьких пакетов в более крупные.Это улучшает пропускную способность за счет задержки.</target>
        </trans-unit>
        <trans-unit id="a1f9ac44326e752574b33a1f14907aa1c45d24f1" translate="yes" xml:space="preserve">
          <source>Turns the logging of system events on or off. If on, a maximum of &lt;code&gt;N&lt;/code&gt; events are kept in the debug structure (default is 10).</source>
          <target state="translated">Включает или выключает регистрацию системных событий. Если включено, в структуре отладки сохраняется максимум &lt;code&gt;N&lt;/code&gt; событий (по умолчанию 10).</target>
        </trans-unit>
        <trans-unit id="23c458441c0867d8269280b70644bb94df142cbd" translate="yes" xml:space="preserve">
          <source>Two &lt;code&gt;&lt;a href=&quot;#type-callback_mode&quot;&gt;&lt;strong&gt;callback modes&lt;/strong&gt;&lt;/a&gt;&lt;/code&gt; are supported:</source>
          <target state="translated">Поддерживаются два &lt;code&gt;&lt;a href=&quot;#type-callback_mode&quot;&gt;&lt;strong&gt;callback modes&lt;/strong&gt;&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="6e3d52e5b54fd0236c6fd5f3a13294fee0ddff15" translate="yes" xml:space="preserve">
          <source>Two Erlang terms &lt;code&gt;match&lt;/code&gt; if they are of the same type and have the same value, so that &lt;code&gt;1&lt;/code&gt; matches &lt;code&gt;1&lt;/code&gt;, but not &lt;code&gt;1.0&lt;/code&gt; (as &lt;code&gt;1.0&lt;/code&gt; is a &lt;code&gt;float()&lt;/code&gt; and not an &lt;code&gt;integer()&lt;/code&gt;).</source>
          <target state="translated">Два термина Erlang &lt;code&gt;match&lt;/code&gt; если они одного типа и имеют одинаковое значение, так что &lt;code&gt;1&lt;/code&gt; соответствует &lt;code&gt;1&lt;/code&gt; , но не &lt;code&gt;1.0&lt;/code&gt; (поскольку &lt;code&gt;1.0&lt;/code&gt; - это &lt;code&gt;float()&lt;/code&gt; а не &lt;code&gt;integer()&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="d09b25abb2a2cc4ca463f856d47434d8b27efd72" translate="yes" xml:space="preserve">
          <source>Two Erlang terms &lt;strong&gt;compare equal&lt;/strong&gt; if they either are of the same type and value, or if both are numeric types and extend to the same value, so that &lt;code&gt;1&lt;/code&gt; compares equal to both &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;1.0&lt;/code&gt;.</source>
          <target state="translated">Два члена Erlang &lt;strong&gt;сравниваются как равные,&lt;/strong&gt; если они имеют один и тот же тип и значение, или если оба являются числовыми типами и расширяются до одного и того же значения, так что &lt;code&gt;1&lt;/code&gt; сравнивается равным как &lt;code&gt;1&lt;/code&gt; ,так и &lt;code&gt;1.0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fe9db2aa68d2fec9c04e8f17ebd9155b9b06ccb7" translate="yes" xml:space="preserve">
          <source>Two adjacent &lt;code&gt;*&lt;/code&gt; used as a single pattern match all files and zero or more directories and subdirectories.</source>
          <target state="translated">Два соседних символа &lt;code&gt;*&lt;/code&gt; , используемые в качестве единого шаблона, соответствуют всем файлам, нулю или более каталогам и подкаталогам.</target>
        </trans-unit>
        <trans-unit id="b24fbae83d83ea5cfa4199071718c20f64dd2575" translate="yes" xml:space="preserve">
          <source>Two adjacent string literals are concatenated into one. This is done in the compilation, thus, does not incur any runtime overhead.</source>
          <target state="translated">Два соседних строковых литерала соединены в один.Это делается при компиляции,таким образом,не происходит никаких накладных расходов.</target>
        </trans-unit>
        <trans-unit id="1cec8b2ac60b473ad30ad5a9539e9b27a87fdf3d" translate="yes" xml:space="preserve">
          <source>Two are containers for binary data and are called:</source>
          <target state="translated">Два из них являются контейнерами для двоичных данных и называются:</target>
        </trans-unit>
        <trans-unit id="00afe0b16fc4b5dc8fb5d2b5e5c18c2ad4f6f71e" translate="yes" xml:space="preserve">
          <source>Two are merely references to a part of a binary and are called:</source>
          <target state="translated">Две из них являются просто ссылками на часть двоичного файла и вызываются:</target>
        </trans-unit>
        <trans-unit id="98533a56936d4841968d6378e92444f0f102a983" translate="yes" xml:space="preserve">
          <source>Two cases can occur:</source>
          <target state="translated">Могут произойти два случая:</target>
        </trans-unit>
        <trans-unit id="f6f177120050db74caa4e744ec6cff39212557e9" translate="yes" xml:space="preserve">
          <source>Two different methods for opening a connection using the support functions in, for example, &lt;code&gt;&lt;a href=&quot;ct_ssh&quot;&gt;ct_ssh&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;ct_ftp&quot;&gt;ct_ftp&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;ct_telnet&quot;&gt;ct_telnet&lt;/a&gt;&lt;/code&gt; follows:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ct_ssh&quot;&gt;ct_ssh&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;ct_ftp&quot;&gt;ct_ftp&lt;/a&gt;&lt;/code&gt; два разных метода открытия соединения с использованием функций поддержки, например, ct_ssh , ct_ftp и &lt;code&gt;&lt;a href=&quot;ct_telnet&quot;&gt;ct_telnet&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="d8398755c3e867c12fc5deb0d9e53ba2d8bf52d0" translate="yes" xml:space="preserve">
          <source>Two different names cannot define the same OBJECT IDENTIFIER.</source>
          <target state="translated">Два разных имени не могут определить одного и того же ИДЕНТИФАЦИОННОГО ОБЪЕКТА.</target>
        </trans-unit>
        <trans-unit id="e330ec8353880267f056d94838df302f660f82d1" translate="yes" xml:space="preserve">
          <source>Two formats of the log files are supported:</source>
          <target state="translated">Поддерживаются два формата лог-файлов:</target>
        </trans-unit>
        <trans-unit id="a4eef9b92d56df50918b227071f569535a9d01e3" translate="yes" xml:space="preserve">
          <source>Two forms have special meaning:</source>
          <target state="translated">Две формы имеют особое значение:</target>
        </trans-unit>
        <trans-unit id="cfd82c68ad98788490ce7310efdb097df7571def" translate="yes" xml:space="preserve">
          <source>Two forms of &lt;code&gt;--inherits&lt;/code&gt; have special meaning:</source>
          <target state="translated">Две формы &lt;code&gt;--inherits&lt;/code&gt; имеют особое значение:</target>
        </trans-unit>
        <trans-unit id="7200659e5edf764a36bafabfdd35b2bc1867bbcb" translate="yes" xml:space="preserve">
          <source>Two functions (modules, applications, releases) belong to the same strongly connected component if they call each other (in)directly. The interpretation of the &lt;code id=&quot;graph_analyses&quot;&gt;components&lt;/code&gt; operator is the set of strongly connected components of a set of calls. The &lt;code&gt;condensation&lt;/code&gt; of a set of calls is a new set of calls between the strongly connected components such that there is an edge between two components if there is some constant of the first component that calls some constant of the second component.</source>
          <target state="translated">Две функции (модули, приложения, релизы) принадлежат одному и тому же сильно связанному компоненту, если они вызывают друг друга (in) напрямую. Интерпретация оператора &lt;code id=&quot;graph_analyses&quot;&gt;components&lt;/code&gt; - это набор сильно связанных компонентов набора вызовов. &lt;code&gt;condensation&lt;/code&gt; из набора вызовов нового набор вызовов между сильно связанными компонентами , такими , что существует ребро между двумя компонентами , если есть некоторая константа первого компонента , который вызывает некоторую константу второго компонента.</target>
        </trans-unit>
        <trans-unit id="8330baa5a8c7712027a0d478bca1ae0572b758a5" translate="yes" xml:space="preserve">
          <source>Two guard BIFs handle maps:</source>
          <target state="translated">Два охраняемых БИФа обрабатывают карты:</target>
        </trans-unit>
        <trans-unit id="0b0d7874fec4ed30ad6e8758caa4fe777cac7d9b" translate="yes" xml:space="preserve">
          <source>Two interoperability mechanisms are built into the Erlang runtime system, &lt;strong&gt;distributed Erlang&lt;/strong&gt; and &lt;strong&gt;ports&lt;/strong&gt;. A variation of ports is &lt;strong&gt;linked-in drivers&lt;/strong&gt;.</source>
          <target state="translated">В систему времени выполнения Erlang встроены два механизма взаимодействия, &lt;strong&gt;распределенный Erlang&lt;/strong&gt; и &lt;strong&gt;порты&lt;/strong&gt; . Варианты портов &lt;strong&gt;связаны с драйверами&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="5dedccf2b4c340ae3513b7f5da6ce218b6889bec" translate="yes" xml:space="preserve">
          <source>Two keys are considered equal if they match (&lt;code&gt;=:=&lt;/code&gt;). That is, numbers are compared literally rather than by value, so that, for example, &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;1.0&lt;/code&gt; are different keys.</source>
          <target state="translated">Два ключа считаются равными, если они совпадают ( &lt;code&gt;=:=&lt;/code&gt; ). То есть числа сравниваются буквально, а не по значению, так что, например, &lt;code&gt;1&lt;/code&gt; и &lt;code&gt;1.0&lt;/code&gt; - разные ключи.</target>
        </trans-unit>
        <trans-unit id="211827ea828fd59c26ecf8cc7423a3ab35588d32" translate="yes" xml:space="preserve">
          <source>Two methods are available for writing database queries:</source>
          <target state="translated">Для написания запросов к базе данных доступны два метода:</target>
        </trans-unit>
        <trans-unit id="cad65263f8565f810c97115c267d8c4735088c82" translate="yes" xml:space="preserve">
          <source>Two more examples, both selecting Latin-1 as default encoding:</source>
          <target state="translated">Еще два примера,оба выбрали латинскую кодировку по умолчанию:</target>
        </trans-unit>
        <trans-unit id="310abdb2aa2e0aae49bd84e931c4347743cefcc7" translate="yes" xml:space="preserve">
          <source>Two old applications are of interest regarding interoperability. Both have been replaced by IC and are mentioned here for reference only:</source>
          <target state="translated">Два старых приложения представляют интерес с точки зрения интероперабельности.Обе были заменены на IC и упоминаются здесь только для справки:</target>
        </trans-unit>
        <trans-unit id="b2ee15f30d25e865ebb91626574306b0a361ae12" translate="yes" xml:space="preserve">
          <source>Two processes can be &lt;strong&gt;linked&lt;/strong&gt; to each other. A link between two processes &lt;code&gt;Pid1&lt;/code&gt; and &lt;code&gt;Pid2&lt;/code&gt; is created by &lt;code&gt;Pid1&lt;/code&gt; calling the BIF &lt;code&gt;link(Pid2)&lt;/code&gt; (or conversely). There also exist a number of &lt;code&gt;spawn_link&lt;/code&gt; BIFs, which spawn and link to a process in one operation.</source>
          <target state="translated">Два процесса могут быть &lt;strong&gt;связаны&lt;/strong&gt; друг с другом. Связь между двумя процессами &lt;code&gt;Pid1&lt;/code&gt; и &lt;code&gt;Pid2&lt;/code&gt; создается &lt;code&gt;Pid1&lt;/code&gt; , вызывающим &lt;code&gt;link(Pid2)&lt;/code&gt; BIF (Pid2) (или наоборот). Также существует несколько &lt;code&gt;spawn_link&lt;/code&gt; spawn_link, которые порождаются и связываются с процессом за одну операцию.</target>
        </trans-unit>
        <trans-unit id="66233b52f4a68d187c85f03b1740a9c4ed076273" translate="yes" xml:space="preserve">
          <source>Two resource terms will compare equal if and only if they would yield the same resource object pointer when passed to &lt;code&gt;&lt;a href=&quot;#enif_get_resource&quot;&gt;enif_get_resource&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5608c70162089e189da4df1a1b5bf134008a262e" translate="yes" xml:space="preserve">
          <source>Two resource terms will compare equal iff they would yield the same resource object pointer when passed to &lt;code&gt;&lt;a href=&quot;#enif_get_resource&quot;&gt;enif_get_resource&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Два термина ресурса будут сравнивать равные, если и только если они дадут один и тот же указатель объекта ресурса при передаче в &lt;code&gt;&lt;a href=&quot;#enif_get_resource&quot;&gt;enif_get_resource&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="af30a2501d3290d8d47d226b3a9dd6e2917631b1" translate="yes" xml:space="preserve">
          <source>Two sets are &lt;strong id=&quot;disjoint&quot;&gt;disjoint&lt;/strong&gt; if their intersection is the empty set.</source>
          <target state="translated">Два множества не &lt;strong id=&quot;disjoint&quot;&gt;пересекаются,&lt;/strong&gt; если их пересечение - пустое множество.</target>
        </trans-unit>
        <trans-unit id="e7ebc9faf237e0b7af0081118908fcbec68ae6ca" translate="yes" xml:space="preserve">
          <source>Two sets of metacharacters exist: those that are recognized anywhere in the pattern except within square brackets, and those that are recognized within square brackets. Outside square brackets, the metacharacters are as follows:</source>
          <target state="translated">Существует два набора метасимволов:те,которые распознаются в любом месте образца,кроме квадратных скобок,и те,которые распознаются в квадратных скобках.За пределами квадратных скобок мета-символы выглядят следующим образом:</target>
        </trans-unit>
        <trans-unit id="ca80cfab8caa7daafc007467d281bddd65b58bec" translate="yes" xml:space="preserve">
          <source>Two simple implementation(s) is provided with the toolkit; the modules &lt;code&gt;&lt;a href=&quot;snmpa_error_logger&quot;&gt;snmpa_error_logger&lt;/a&gt;&lt;/code&gt; which is the default and &lt;code&gt;&lt;a href=&quot;snmpa_error_io&quot;&gt;snmpa_error_io&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Инструментарий предоставляет две простые реализации; модули &lt;code&gt;&lt;a href=&quot;snmpa_error_logger&quot;&gt;snmpa_error_logger&lt;/a&gt;&lt;/code&gt; по умолчанию и &lt;code&gt;&lt;a href=&quot;snmpa_error_io&quot;&gt;snmpa_error_io&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b8aad91307995a202add0f48ff4e5e1745721276" translate="yes" xml:space="preserve">
          <source>Two subterms are supported, &lt;code&gt;node_start&lt;/code&gt; and &lt;code&gt;eval&lt;/code&gt;.</source>
          <target state="translated">Поддерживаются два подтермина: &lt;code&gt;node_start&lt;/code&gt; и &lt;code&gt;eval&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4a86bc9ecf16a74feace03ab8af025d243363cf6" translate="yes" xml:space="preserve">
          <source>Two terms &lt;code&gt;T1&lt;/code&gt; and &lt;code&gt;T2&lt;/code&gt; compare equal if &lt;code&gt;T1&amp;nbsp;==&amp;nbsp;T2&lt;/code&gt; evaluates to &lt;code&gt;true&lt;/code&gt;. They match if &lt;code&gt;T1&amp;nbsp;=:=&amp;nbsp;T2&lt;/code&gt; evaluates to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Два условия &lt;code&gt;T1&lt;/code&gt; и &lt;code&gt;T2&lt;/code&gt; считаются равными , если &lt;code&gt;T1&amp;nbsp;==&amp;nbsp;T2&lt;/code&gt; имеет значение &lt;code&gt;true&lt;/code&gt; . Они совпадают , если &lt;code&gt;T1&amp;nbsp;=:=&amp;nbsp;T2&lt;/code&gt; имеет значение &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="319ab96ab6a94c595bf510dc2b6df202a2c7e4fb" translate="yes" xml:space="preserve">
          <source>Two time types are defined within ASN.1: Generalized Time and Universal Time Coordinated (UTC). Both are assigned a value as an ordinary string within double quotes, for example, &quot;19820102070533.8&quot;.</source>
          <target state="translated">В рамках ASN.1 определены два типа времени:Обобщенное время и Универсальное координированное время (UTC).Обоим типам присваивается значение в виде обычной строки в двойных кавычках,например,&quot;19820102070533.8&quot;.</target>
        </trans-unit>
        <trans-unit id="5cbed6cd9f648062eb5c7c60f1a880bc94c83866" translate="yes" xml:space="preserve">
          <source>Two trace drivers are currently implemented, the &lt;code&gt;file&lt;/code&gt; and the &lt;code&gt;ip&lt;/code&gt; trace drivers. The file driver sends all trace messages into one or several binary files, from where they later can be fetched and processed with the &lt;code&gt;&lt;a href=&quot;#trace_client-2&quot;&gt;trace_client/2&lt;/a&gt;&lt;/code&gt; function. The ip driver opens a TCP/IP port where it listens for connections. When a client (preferably started by calling &lt;code&gt;&lt;a href=&quot;#trace_client-2&quot;&gt;trace_client/2&lt;/a&gt;&lt;/code&gt; on another Erlang node) connects, all trace messages are sent over the IP network for further processing by the remote client.</source>
          <target state="translated">В настоящее время реализованы два драйвера трассировки: &lt;code&gt;file&lt;/code&gt; и драйвер трассировки &lt;code&gt;ip&lt;/code&gt; . Файловый драйвер отправляет все сообщения трассировки в один или несколько двоичных файлов, откуда они позже могут быть извлечены и обработаны с помощью функции &lt;code&gt;&lt;a href=&quot;#trace_client-2&quot;&gt;trace_client/2&lt;/a&gt;&lt;/code&gt; . Драйвер ip открывает порт TCP / IP, где он прослушивает соединения. Когда &lt;code&gt;&lt;a href=&quot;#trace_client-2&quot;&gt;trace_client/2&lt;/a&gt;&lt;/code&gt; клиент (предпочтительно запускаемый вызовом trace_client / 2 на другом узле Erlang), все сообщения трассировки отправляются по IP-сети для дальнейшей обработки удаленным клиентом.</target>
        </trans-unit>
        <trans-unit id="e5e6393335f1e611665a4a7a24f8bce5b9e0c892" translate="yes" xml:space="preserve">
          <source>Two types of counter arrays can be created with options &lt;code&gt;atomics&lt;/code&gt; or &lt;code&gt;write_concurrency&lt;/code&gt;. The &lt;code&gt;atomics&lt;/code&gt; counters have good allround performance with nice consistent semantics while &lt;code&gt;write_concurrency&lt;/code&gt; counters offers even better concurrent write performance at the expense of some potential read inconsistencies. See &lt;code&gt;&lt;a href=&quot;#new-2&quot;&gt;new/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c70732f422ad9f7dd9ec37500b2c8c51a72ca7dd" translate="yes" xml:space="preserve">
          <source>Two types of funs have slightly different semantics:</source>
          <target state="translated">Два типа веселья имеют слегка различную семантику:</target>
        </trans-unit>
        <trans-unit id="c611be8ba1da86ea53fc2e7c1dde0be77787929a" translate="yes" xml:space="preserve">
          <source>Two types of logs are supported:</source>
          <target state="translated">Поддерживаются два типа журналов:</target>
        </trans-unit>
        <trans-unit id="95838f01360f14fad0ac2ded66819bb7c9468ffa" translate="yes" xml:space="preserve">
          <source>Two upgrade instructions restart the emulator:</source>
          <target state="translated">Две инструкции по обновлению перезапустите эмулятор:</target>
        </trans-unit>
        <trans-unit id="4806b67c077ea8929e31609963501c8a6fe89444" translate="yes" xml:space="preserve">
          <source>Two values are supported for &lt;code&gt;Range&lt;/code&gt;:</source>
          <target state="translated">Для &lt;code&gt;Range&lt;/code&gt; поддерживаются два значения :</target>
        </trans-unit>
        <trans-unit id="3deb7456519697ecf4eefc455516c969a3681bae" translate="yes" xml:space="preserve">
          <source>Type</source>
          <target state="translated">Type</target>
        </trans-unit>
        <trans-unit id="d651b987b0a7139ea05af6dee8d526234f2fc5bb" translate="yes" xml:space="preserve">
          <source>Type &quot;2 + 5.&quot; in the shell and then press Enter (carriage return). Notice that you tell the shell you are done entering code by finishing with a full stop &quot;.&quot; and a carriage return.</source>
          <target state="translated">Введите &quot;2+5.&quot; в оболочку и нажмите Enter (возврат каретки).Обратите внимание,что вы сообщите оболочке,что ввод кода завершен,завершив полный стоп &quot;...&quot; и возврат каретки.</target>
        </trans-unit>
        <trans-unit id="58364f896fc728f993e560667ecfb60de4f30fa0" translate="yes" xml:space="preserve">
          <source>Type &quot;a&quot; to leave the Erlang system.</source>
          <target state="translated">Введите &quot;а&quot;,чтобы покинуть систему Эрланга.</target>
        </trans-unit>
        <trans-unit id="bb5acf833432a1b10201899b4168eeb24706098c" translate="yes" xml:space="preserve">
          <source>Type ::= &lt;code&gt;Fun&lt;/code&gt; | &lt;code&gt;Mod&lt;/code&gt; | &lt;code&gt;App&lt;/code&gt; | &lt;code&gt;Rel&lt;/code&gt;</source>
          <target state="translated">Тип :: = &lt;code&gt;Fun&lt;/code&gt; | &lt;code&gt;Mod&lt;/code&gt; | &lt;code&gt;App&lt;/code&gt; | &lt;code&gt;Rel&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="eca7274bab6669941602b10cce52d6006cb9d4c5" translate="yes" xml:space="preserve">
          <source>Type &lt;code&gt;&quot;GET&quot; | &quot;POST&quot; | &quot;HEAD&quot; | &quot;TRACE&quot;&lt;/code&gt;, that is, the HTTP method.</source>
          <target state="translated">Введите &lt;code&gt;&quot;GET&quot; | &quot;POST&quot; | &quot;HEAD&quot; | &quot;TRACE&quot;&lt;/code&gt; , то есть метод HTTP.</target>
        </trans-unit>
        <trans-unit id="7b17bb0639b15e0f667e2fd419629250d1fac8bc" translate="yes" xml:space="preserve">
          <source>Type &lt;code&gt;[{HeaderKey,HeaderValue}]&lt;/code&gt;. &lt;code&gt;parsed_header&lt;/code&gt; contains all HTTP header fields from the HTTP request stored in a list as key-value tuples. See &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc2616.txt&quot;&gt;RFC 2616&lt;/a&gt;&lt;/code&gt; for a listing of all header fields. For example, the date field is stored as &lt;code&gt;{&quot;date&quot;,&quot;Wed, 15 Oct 1997 14:35:17 GMT&quot;}&lt;/code&gt;. RFC 2616 defines that HTTP is a case-insensitive protocol and the header fields can be in lower case or upper case. &lt;code&gt;httpd&lt;/code&gt; ensures that all header field names are in lower case.</source>
          <target state="translated">Введите &lt;code&gt;[{HeaderKey,HeaderValue}]&lt;/code&gt; . &lt;code&gt;parsed_header&lt;/code&gt; содержит все поля заголовка HTTP из HTTP-запроса, хранящегося в списке в виде кортежей &quot;ключ-значение&quot;. См. &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc2616.txt&quot;&gt;RFC 2616&lt;/a&gt;&lt;/code&gt; для получения списка всех полей заголовка. Например, поле даты хранится как &lt;code&gt;{&quot;date&quot;,&quot;Wed, 15 Oct 1997 14:35:17 GMT&quot;}&lt;/code&gt; . RFC 2616 определяет, что HTTP - это протокол без учета регистра, а поля заголовка могут быть в нижнем или верхнем регистре. &lt;code&gt;httpd&lt;/code&gt; гарантирует, что все имена полей заголовка будут в нижнем регистре.</target>
        </trans-unit>
        <trans-unit id="88ea934d5b010cb0dc7ac9b9cf16bdd13e544370" translate="yes" xml:space="preserve">
          <source>Type &lt;code&gt;[{InteractionKey,InteractionValue}]&lt;/code&gt; is used to propagate data between modules. Depicted &lt;code&gt;interaction_data()&lt;/code&gt; in function type declarations.</source>
          <target state="translated">Тип &lt;code&gt;[{InteractionKey,InteractionValue}]&lt;/code&gt; используется для передачи данных между модулями. Изображено &lt;code&gt;interaction_data()&lt;/code&gt; в объявлениях типов функций.</target>
        </trans-unit>
        <trans-unit id="b6c98d13e8efa980132b032f5c0f337a67821802" translate="yes" xml:space="preserve">
          <source>Type &lt;code&gt;which makensis.exe&lt;/code&gt; in the bash prompt and you should get the path to the program.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a1f7e9e5b0f8e672e72370d1ca9a97b0c0c8e01" translate="yes" xml:space="preserve">
          <source>Type UTF8String is represented as a UTF-8 encoded binary in Erlang. Such binaries can be created directly using the binary syntax or by converting from a list of Unicode code points using function &lt;code&gt;unicode:characters_to_binary/1&lt;/code&gt;.</source>
          <target state="translated">Тип UTF8String представлен в Erlang как двоичный код в кодировке UTF-8. Такие двоичные файлы могут быть созданы непосредственно с использованием двоичного синтаксиса или путем преобразования из списка кодовых точек Unicode с помощью функции &lt;code&gt;unicode:characters_to_binary/1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8e178121a16f6b2c746af40f7c8a4a42ab3a0ec2" translate="yes" xml:space="preserve">
          <source>Type constraints allowed in patterns</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b347ce4e1bb3f750a45e84a0eec8e47bcbc5d1c" translate="yes" xml:space="preserve">
          <source>Type declarations can also be parameterized by including type variables between the parentheses. The syntax of type variables is the same as Erlang variables, that is, starts with an upper-case letter. Naturally, these variables can - and is to - appear on the RHS of the definition. A concrete example follows:</source>
          <target state="translated">Объявления типов также могут быть параметризованы путем включения переменных типов между скобками.Синтаксис переменных типа аналогичен синтаксису переменных типа Erlang,т.е.начинается с заглавной буквы.Естественно,эти переменные могут-и должны-появляться на RHS определения.Ниже приводится конкретный пример:</target>
        </trans-unit>
        <trans-unit id="6300b103de258ff822aa6629b9e4238dd2a5ce7d" translate="yes" xml:space="preserve">
          <source>Type definitions related to HTTP:</source>
          <target state="translated">Определения типов,связанных с HTTP:</target>
        </trans-unit>
        <trans-unit id="833b41c81d15ae09af14347e83ccba5147adbd10" translate="yes" xml:space="preserve">
          <source>Type definitions that are related to URI:</source>
          <target state="translated">Определения типов,которые связаны с URI:</target>
        </trans-unit>
        <trans-unit id="b644ccc50476a72e86f7c39296fad76704713706" translate="yes" xml:space="preserve">
          <source>Type definitions that are used more than once in this module, or abstractions to indicate the intended use of the data type, or both:</source>
          <target state="translated">Определения типов,которые используются более одного раза в данном модуле,или абстракции для обозначения предполагаемого использования типа данных,или и то,и другое:</target>
        </trans-unit>
        <trans-unit id="d2cf34335496de985396b3065117c3a7c2a8fa2b" translate="yes" xml:space="preserve">
          <source>Type definitions that are used more than once in this module:</source>
          <target state="translated">Определения типов,которые используются более одного раза в данном модуле:</target>
        </trans-unit>
        <trans-unit id="589fe68e6ecbba2c443f7f0f1e09900382145a63" translate="yes" xml:space="preserve">
          <source>Type descriptors can be compared for equality or order (in the Erlang term order), but remember that floating-point values should in general never be tested for equality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfb0b5d119973a2ca756d65efb3094aa7a2749aa" translate="yes" xml:space="preserve">
          <source>Type information can be used for the following:</source>
          <target state="translated">Типовая информация может быть использована для следующих целей:</target>
        </trans-unit>
        <trans-unit id="455328c30f9e89d8dd33028cd24752b9087d170d" translate="yes" xml:space="preserve">
          <source>Type letters on the right side</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ebeb58712dc090b9f1c0c555b88300efc0c9f1b" translate="yes" xml:space="preserve">
          <source>Type makensis at the bash prompt and you should get a list of options if everything is OK.</source>
          <target state="translated">Введите makensis в строке bash,и вы должны получить список опций,если все в порядке.</target>
        </trans-unit>
        <trans-unit id="e5d444f8eae5fc410e04ffff9e480446db812725" translate="yes" xml:space="preserve">
          <source>Type of lock: &lt;code&gt;rw_mutex&lt;/code&gt;, &lt;code&gt;mutex&lt;/code&gt;, &lt;code&gt;spinlock&lt;/code&gt;, &lt;code&gt;rw_spinlock&lt;/code&gt; or &lt;code&gt;proclock&lt;/code&gt;.</source>
          <target state="translated">Тип замка: &lt;code&gt;rw_mutex&lt;/code&gt; , &lt;code&gt;mutex&lt;/code&gt; , &lt;code&gt;spinlock&lt;/code&gt; , &lt;code&gt;rw_spinlock&lt;/code&gt; или &lt;code&gt;proclock&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ab1c2b1113b129c21326cea282b309a413da68f9" translate="yes" xml:space="preserve">
          <source>Type tests: &lt;code&gt;is_atom&lt;/code&gt;, &lt;code&gt;is_float&lt;/code&gt;, &lt;code&gt;is_integer&lt;/code&gt;, &lt;code&gt;is_list&lt;/code&gt;, &lt;code&gt;is_number&lt;/code&gt;, &lt;code&gt;is_pid&lt;/code&gt;, &lt;code&gt;is_port&lt;/code&gt;, &lt;code&gt;is_reference&lt;/code&gt;, &lt;code&gt;is_tuple&lt;/code&gt;, &lt;code&gt;is_binary&lt;/code&gt;, &lt;code&gt;is_function&lt;/code&gt;, &lt;code&gt;is_record&lt;/code&gt;</source>
          <target state="translated">Типовые тесты: &lt;code&gt;is_atom&lt;/code&gt; , &lt;code&gt;is_float&lt;/code&gt; , &lt;code&gt;is_integer&lt;/code&gt; , &lt;code&gt;is_list&lt;/code&gt; , &lt;code&gt;is_number&lt;/code&gt; , &lt;code&gt;is_pid&lt;/code&gt; , &lt;code&gt;is_port&lt;/code&gt; , &lt;code&gt;is_reference&lt;/code&gt; , &lt;code&gt;is_tuple&lt;/code&gt; , &lt;code&gt;is_binary&lt;/code&gt; , &lt;code&gt;is_function&lt;/code&gt; , &lt;code&gt;is_record&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ca8a72020b7154672a01a7e0906d7d4fb8f5305d" translate="yes" xml:space="preserve">
          <source>Type variables can be used in specifications to specify relations for the input and output arguments of a function. For example, the following specification defines the type of a polymorphic identity function:</source>
          <target state="translated">Переменные типа могут быть использованы в спецификациях для задания соотношений для входных и выходных аргументов функции.Например,следующая спецификация определяет тип полиморфной функции идентификации:</target>
        </trans-unit>
        <trans-unit id="93b9e289e2842469d001eccf7ad5d79f3c302dc9" translate="yes" xml:space="preserve">
          <source>Types</source>
          <target state="translated">Types</target>
        </trans-unit>
        <trans-unit id="844d69ffa5852c018b86872fd3385643da1684b4" translate="yes" xml:space="preserve">
          <source>Types and function specifications</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9cf88052e09b9cf4919f33ab2053b176aa31518" translate="yes" xml:space="preserve">
          <source>Types corresponding to RFC 6733 AVP Data Formats. Defined in &lt;code&gt;&lt;a href=&quot;diameter_dict#DATA_TYPES&quot;&gt;diameter_dict(4)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Типы, соответствующие форматам данных AVP RFC 6733. Определяется в &lt;code&gt;&lt;a href=&quot;diameter_dict#DATA_TYPES&quot;&gt;diameter_dict(4)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="19b63cf79ea9c163682784b133c791343ee64d2c" translate="yes" xml:space="preserve">
          <source>Types declared as &lt;code&gt;opaque&lt;/code&gt; represent sets of terms whose structure is not supposed to be visible from outside of their defining module. That is, only the module defining them is allowed to depend on their term structure. Consequently, such types do not make much sense as module local - module local types are not accessible by other modules anyway - and is always to be exported.</source>
          <target state="translated">Типы, объявленные как &lt;code&gt;opaque&lt;/code&gt; представляют собой наборы терминов, структура которых не должна быть видимой извне их определяющего модуля. То есть только определяющий их модуль может зависеть от их временной структуры. Следовательно, такие типы не имеют особого смысла, поскольку локальные модули модуля - локальные типы модулей в любом случае недоступны другим модулям - и всегда должны быть экспортированы.</target>
        </trans-unit>
        <trans-unit id="535782a993effddbcbcaf96e815b800bf2866b08" translate="yes" xml:space="preserve">
          <source>Types describe sets of Erlang terms. Types consist of, and are built from, a set of predefined types, for example, &lt;code&gt;integer()&lt;/code&gt;, &lt;code&gt;atom()&lt;/code&gt;, and &lt;code&gt;pid()&lt;/code&gt;. Predefined types represent a typically infinite set of Erlang terms that belong to this type. For example, the type &lt;code&gt;atom()&lt;/code&gt; denotes the set of all Erlang atoms.</source>
          <target state="translated">Типы описывают наборы терминов Erlang. Типы состоят из набора предопределенных типов, например &lt;code&gt;integer()&lt;/code&gt; , &lt;code&gt;atom()&lt;/code&gt; и &lt;code&gt;pid()&lt;/code&gt; , и построены из него . Предопределенные типы обычно представляют собой бесконечный набор терминов Erlang, принадлежащих этому типу. Например, тип &lt;code&gt;atom()&lt;/code&gt; обозначает набор всех атомов Эрланга.</target>
        </trans-unit>
        <trans-unit id="16b7d8aee0365ea3f9bf161364bd57ac3691c6da" translate="yes" xml:space="preserve">
          <source>Types for Engines</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4826f9f1cd21548c629153b4f8bdd98bd55b49d6" translate="yes" xml:space="preserve">
          <source>Types that refer to themselves are called recursive types. Example:</source>
          <target state="translated">Типы,которые ссылаются на себя,называются рекурсивными.Пример:</target>
        </trans-unit>
        <trans-unit id="024abbee89dd93c227a8c61717c55412558d1806" translate="yes" xml:space="preserve">
          <source>Types used in TLS/DTLS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c02047b4473ab1d57fc7225f4164216e6bcfaf2" translate="yes" xml:space="preserve">
          <source>Types:</source>
          <target state="translated">Types:</target>
        </trans-unit>
        <trans-unit id="2f711f90b7022e079d8d5f49cef08ad4c28d080c" translate="yes" xml:space="preserve">
          <source>Typical &lt;code&gt;Reasons&lt;/code&gt;s:</source>
          <target state="translated">Типичные &lt;code&gt;Reasons&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="129bb568100797e751f2b2f98cd51094a6287657" translate="yes" xml:space="preserve">
          <source>Typical Error Reasons</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67c8d97f0dcec5fe713e0be3b64521ea6acf59de" translate="yes" xml:space="preserve">
          <source>Typical error reasons are:</source>
          <target state="translated">Типичными причинами ошибок являются:</target>
        </trans-unit>
        <trans-unit id="2f629170b36b9e9384cae62822a95fe4136c915d" translate="yes" xml:space="preserve">
          <source>Typical error reasons:</source>
          <target state="translated">Типичные причины ошибок:</target>
        </trans-unit>
        <trans-unit id="a875996fe6fd67197a25c652eb601e185ed5cc23" translate="yes" xml:space="preserve">
          <source>Typical error reasons: as for &lt;code&gt;&lt;a href=&quot;#open-2&quot;&gt;open/2&lt;/a&gt;&lt;/code&gt; if a file had to be opened, and as for &lt;code&gt;&lt;a href=&quot;#read-2&quot;&gt;read/2&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#write-2&quot;&gt;write/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Типичные причины ошибки: как для &lt;code&gt;&lt;a href=&quot;#open-2&quot;&gt;open/2&lt;/a&gt;&lt;/code&gt; , если файл нужно было открыть, так и для &lt;code&gt;&lt;a href=&quot;#read-2&quot;&gt;read/2&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;#write-2&quot;&gt;write/2&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fc74151b7056fe15fd99a84d554133408c7c5852" translate="yes" xml:space="preserve">
          <source>Typical usage when writing to a file descriptor looks like this:</source>
          <target state="translated">Типичное использование при записи в дескриптор файла выглядит следующим образом:</target>
        </trans-unit>
        <trans-unit id="9f433de3a09f2cf5cd13a827c57725457d725e39" translate="yes" xml:space="preserve">
          <source>Typical usage:</source>
          <target state="translated">Типичное использование:</target>
        </trans-unit>
        <trans-unit id="987aa67db85afce4340f54b81c2c1c09452ae62a" translate="yes" xml:space="preserve">
          <source>Typical users of the dirty CPU schedulers are large garbage collections, json protocol encode/decoders written as nifs and matrix manipulation libraries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="866cbe1e9d381ba3cdbeb39e4730521fbfcc8133" translate="yes" xml:space="preserve">
          <source>Typical users of the dirty IO schedulers are reading and writing to files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa0583dc7b5aaef5f34ea3fa51cd6e026a525fd0" translate="yes" xml:space="preserve">
          <source>Typically high &lt;code&gt;time&lt;/code&gt; values are bad and this is often the thing to look for. However, one should also look for high lock acquisition frequencies (#tries) since locks generate overhead and because high frequency could become problematic if they begin to have conflicts even if it is not shown in a particular test.</source>
          <target state="translated">Обычно высокие значения &lt;code&gt;time&lt;/code&gt; - это плохо, и часто это то, что нужно искать. Однако следует также обратить внимание на высокие частоты захвата блокировок (# попыток), поскольку блокировки создают накладные расходы и потому, что высокая частота может стать проблематичной, если они начнут конфликтовать, даже если это не показано в конкретном тесте.</target>
        </trans-unit>
        <trans-unit id="2c47ac130c9d90117072288c85fcf5d65c5fe895" translate="yes" xml:space="preserve">
          <source>Typically the operator, possibly running hundreds or thousands of test cases, does not want to fill the console with details about, or printouts from, specific test cases. By default, the operator only sees the following:</source>
          <target state="translated">Обычно оператор,возможно,выполняющий сотни или тысячи тестовых заданий,не хочет заполнять консоль деталями или распечатками с конкретных тестовых заданий.По умолчанию оператор видит только следующее:</target>
        </trans-unit>
        <trans-unit id="97e9960729125226aaee305f3d87924465b5abf5" translate="yes" xml:space="preserve">
          <source>Typically you want to substitute negations first, then aliases, then perform one or more expansions (sometimes you want to pre-expand particular entries before doing the main expansion). You might want to substitute negations and/or aliases repeatedly, to allow such forms in the right-hand side of aliases and expansion lists.</source>
          <target state="translated">Обычно вы хотите сначала заменить отрицания,затем псевдонимы,а затем выполнить одно или несколько расширений (иногда вы хотите предварительно расширить определенные записи перед выполнением основного расширения).Вы можете захотеть многократно подставлять отрицания и/или псевдонимы,чтобы разрешить такие формы в правой части псевдонимов и списков расширений.</target>
        </trans-unit>
        <trans-unit id="4535970fd788996603de7fcae8b5b1132c50cf1f" translate="yes" xml:space="preserve">
          <source>Typically, OpenSSL engines provide a hardware implementation of specific cryptographic operations. The hardware implementation usually offers improved performance over its software-based counterpart, which is known as cryptographic acceleration.</source>
          <target state="translated">Как правило,OpenSSL-движки обеспечивают аппаратную реализацию специфических криптографических операций.Аппаратная реализация обычно обеспечивает более высокую производительность по сравнению со своим программным аналогом,который известен как криптографическое ускорение.</target>
        </trans-unit>
        <trans-unit id="c81772f74c1a9d8da4ff099d810781ce160aacf0" translate="yes" xml:space="preserve">
          <source>Typographic conventions:</source>
          <target state="translated">Типографические конвенции:</target>
        </trans-unit>
        <trans-unit id="0d3d0996d3543e832deef4b0344dd80b1d22ba4d" translate="yes" xml:space="preserve">
          <source>UDP packets from the network</source>
          <target state="translated">UDP-пакеты от сети</target>
        </trans-unit>
        <trans-unit id="50aa3ec0f92e35711e8ffb982901d2c7f9850924" translate="yes" xml:space="preserve">
          <source>UDP queries are used unless resolver option &lt;code&gt;usevc&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, which forces TCP queries. If the query is too large for UDP, TCP is used instead. For regular DNS queries, 512 bytes is the size limit.</source>
          <target state="translated">Запросы UDP используются, если параметр резолвера &lt;code&gt;usevc&lt;/code&gt; не имеет значения &lt;code&gt;true&lt;/code&gt; , что вызывает запросы TCP. Если запрос слишком велик для UDP, вместо него используется TCP. Для обычных DNS-запросов ограничение на размер составляет 512 байт.</target>
        </trans-unit>
        <trans-unit id="486c66a0286294375958525f91cdfdb3f82c9cb3" translate="yes" xml:space="preserve">
          <source>URI processing functions.</source>
          <target state="translated">Функции обработки URI.</target>
        </trans-unit>
        <trans-unit id="1d057bddb70164b040386e82de4c64661e29e8f2" translate="yes" xml:space="preserve">
          <source>URI to filename translation.</source>
          <target state="translated">URI для перевода имени файла.</target>
        </trans-unit>
        <trans-unit id="52c3521da24366089045fe93222bbbea327aa8ee" translate="yes" xml:space="preserve">
          <source>URI utility module</source>
          <target state="translated">утилитный модуль URI</target>
        </trans-unit>
        <trans-unit id="2497da8c1e8f3017cb461e9ead3580ed94a9004a" translate="yes" xml:space="preserve">
          <source>URL Aliasing</source>
          <target state="translated">Псевдонизирование URL-адреса</target>
        </trans-unit>
        <trans-unit id="f09d741a3ad78a10aeac235b7eda60b472c1c7ea" translate="yes" xml:space="preserve">
          <source>URL aliasing.</source>
          <target state="translated">Название URL-адреса.</target>
        </trans-unit>
        <trans-unit id="284501aa026d810fca5e30ec3e6fbb8b907a7d92" translate="yes" xml:space="preserve">
          <source>URL: &lt;code&gt;&lt;a href=&quot;http://java.sun.com&quot;&gt;http://java.sun.com&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">URL: &lt;code&gt;&lt;a href=&quot;http://java.sun.com&quot;&gt;http://java.sun.com&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2390079739ca194b6adba26faaa714759aa93368" translate="yes" xml:space="preserve">
          <source>URL: &lt;code&gt;&lt;a href=&quot;http://nsis.sourceforge.net/download&quot;&gt;http://nsis.sourceforge.net/download&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">URL: &lt;code&gt;&lt;a href=&quot;http://nsis.sourceforge.net/download&quot;&gt;http://nsis.sourceforge.net/download&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d52349cc271c6019348a86ea4c491c0478f8cdd3" translate="yes" xml:space="preserve">
          <source>URL: &lt;code&gt;&lt;a href=&quot;http://openssl.org/community/binaries.html&quot;&gt;http://openssl.org/community/binaries.html&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">URL: &lt;code&gt;&lt;a href=&quot;http://openssl.org/community/binaries.html&quot;&gt;http://openssl.org/community/binaries.html&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b0133be96d80a337735afdf94d4b6d5617e90e15" translate="yes" xml:space="preserve">
          <source>URL: &lt;code&gt;&lt;a href=&quot;http://sourceforge.net/projects/mingw-w64/files/latest/download?source=files&quot;&gt;http://sourceforge.net/projects/mingw-w64/files/latest/download?source=files&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">URL: &lt;code&gt;&lt;a href=&quot;http://sourceforge.net/projects/mingw-w64/files/latest/download?source=files&quot;&gt;http://sourceforge.net/projects/mingw-w64/files/latest/download?source=files&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="71a52ac449904e56f2f8f4257d980b456503a1c2" translate="yes" xml:space="preserve">
          <source>URL: &lt;code&gt;&lt;a href=&quot;http://sourceforge.net/projects/mingw/files/Installer/mingw-get-inst/&quot;&gt;http://sourceforge.net/projects/mingw/files/Installer/mingw-get-inst/&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">URL: &lt;code&gt;&lt;a href=&quot;http://sourceforge.net/projects/mingw/files/Installer/mingw-get-inst/&quot;&gt;http://sourceforge.net/projects/mingw/files/Installer/mingw-get-inst/&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b683663e96daabab32de2bda24157392f5a1dc1c" translate="yes" xml:space="preserve">
          <source>URL: &lt;code&gt;&lt;a href=&quot;http://www.cygwin.com&quot;&gt;http://www.cygwin.com&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">URL: &lt;code&gt;&lt;a href=&quot;http://www.cygwin.com&quot;&gt;http://www.cygwin.com&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="46c81ae6362771f7cb6b8c4396678a5639bfb460" translate="yes" xml:space="preserve">
          <source>URL: &lt;code&gt;&lt;a href=&quot;http://www.oracle.com/java/technologies/javase-downloads.html&quot;&gt;http://www.oracle.com/java/technologies/javase-downloads.html&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="276871ba1190025d3a896ad5f2648a68709c0037" translate="yes" xml:space="preserve">
          <source>URL: &lt;code&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/windows/desktop/bg162891.aspx&quot;&gt;https://msdn.microsoft.com/en-us/windows/desktop/bg162891.aspx&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">URL: &lt;code&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/windows/desktop/bg162891.aspx&quot;&gt;https://msdn.microsoft.com/en-us/windows/desktop/bg162891.aspx&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="53f076fb21dd236ea02ee81db09d3c6d1a9c2d70" translate="yes" xml:space="preserve">
          <source>URL: &lt;code&gt;&lt;a href=&quot;https://msys2.github.io/&quot;&gt;https://msys2.github.io/&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">URL: &lt;code&gt;&lt;a href=&quot;https://msys2.github.io/&quot;&gt;https://msys2.github.io/&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c130e8186817488b08e47f250bc88b4918c57145" translate="yes" xml:space="preserve">
          <source>URL:&lt;code&gt;&lt;a href=&quot;http://code.google.com/p/msysgit/&quot;&gt;http://code.google.com/p/msysgit/&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">URL:&lt;code&gt;&lt;a href=&quot;http://code.google.com/p/msysgit/&quot;&gt;http://code.google.com/p/msysgit/&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ba178104dbef5fc6beaedd696ad3c447ee9da6ac" translate="yes" xml:space="preserve">
          <source>UT1</source>
          <target state="translated">UT1</target>
        </trans-unit>
        <trans-unit id="bdfd4d8d6952777c39403b2d2e2f8a2a52bf255f" translate="yes" xml:space="preserve">
          <source>UTC</source>
          <target state="translated">UTC</target>
        </trans-unit>
        <trans-unit id="8c0cd56da21e982f4424f294a92af6cffab886e5" translate="yes" xml:space="preserve">
          <source>UTF-8 is designed so that ISO Latin-1 characters with numbers beyond the 7-bit ASCII range are seldom considered valid when decoded as UTF-8. Therefore one can usually use heuristics to determine if a file is in UTF-8 or if it is encoded in ISO Latin-1 (one byte per character). The &lt;code&gt;unicode&lt;/code&gt; module can be used to determine if data can be interpreted as UTF-8:</source>
          <target state="translated">UTF-8 разработан таким образом, что символы ISO Latin-1 с числами за пределами 7-битного диапазона ASCII редко считаются допустимыми при декодировании как UTF-8. Поэтому обычно можно использовать эвристику, чтобы определить, находится ли файл в UTF-8 или в кодировке ISO Latin-1 (один байт на символ). Модуль &lt;code&gt;unicode&lt;/code&gt; может использоваться, чтобы определить, можно ли интерпретировать данные как UTF-8:</target>
        </trans-unit>
        <trans-unit id="6328bc9f36f37764a79ddabe4b86ab6e97f09add" translate="yes" xml:space="preserve">
          <source>Ugaritic</source>
          <target state="translated">Ugaritic</target>
        </trans-unit>
        <trans-unit id="7a2f970d37032e17cb13a44bc956fa4e60bba4ed" translate="yes" xml:space="preserve">
          <source>Unary +</source>
          <target state="translated">Унарный +</target>
        </trans-unit>
        <trans-unit id="898ecd6a265af9abef6adb306b4c0c9c0e00c767" translate="yes" xml:space="preserve">
          <source>Unary + - bnot not</source>
          <target state="translated">Унарный+-нет</target>
        </trans-unit>
        <trans-unit id="684c6ddd5eb8c278f83bc5399212042f5f7e16e9" translate="yes" xml:space="preserve">
          <source>Unary -</source>
          <target state="translated">Унарный -</target>
        </trans-unit>
        <trans-unit id="637d4f607a8fd2105b314306ae4c76ef4925ad36" translate="yes" xml:space="preserve">
          <source>Unary bitwise NOT</source>
          <target state="translated">Единобитный НЕ</target>
        </trans-unit>
        <trans-unit id="c9d35054fa41b42db47e25b9d91e662cc93e9f89" translate="yes" xml:space="preserve">
          <source>Unary callback function &lt;code&gt;FormatFun&lt;/code&gt; is used by &lt;code&gt;&lt;a href=&quot;#info-1&quot;&gt;info/1,2&lt;/a&gt;&lt;/code&gt; for displaying the call that created the query handle of the table. Defaults to &lt;code&gt;undefined&lt;/code&gt;, which means that &lt;code&gt;info/1,2&lt;/code&gt; displays a call to &lt;code&gt;'$MOD':'$FUN'/0&lt;/code&gt;. It is up to &lt;code&gt;FormatFun&lt;/code&gt; to present the selected objects of the table in a suitable way. However, if a character list is chosen for presentation, it must be an Erlang expression that can be scanned and parsed (a trailing dot is added by &lt;code&gt;info/1,2&lt;/code&gt; though).</source>
          <target state="translated">&lt;code&gt;FormatFun&lt;/code&gt; функция обратного вызова FormatFun используется &lt;code&gt;&lt;a href=&quot;#info-1&quot;&gt;info/1,2&lt;/a&gt;&lt;/code&gt; для отображения вызова, создавшего дескриптор запроса таблицы. По умолчанию &lt;code&gt;undefined&lt;/code&gt; , что означает, что &lt;code&gt;info/1,2&lt;/code&gt; отображает вызов &lt;code&gt;'$MOD':'$FUN'/0&lt;/code&gt; . Это до &lt;code&gt;FormatFun&lt;/code&gt; , чтобы представить выбранные объекты таблицы соответствующим образом. Однако, если для представления выбран список символов, это должно быть выражение Erlang, которое можно сканировать и анализировать ( хотя завершающая точка добавляется с помощью &lt;code&gt;info/1,2&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="8a8cf6ea70815c5c8dc6febb5bc34ace0255c96a" translate="yes" xml:space="preserve">
          <source>Unary callback function &lt;code&gt;InfoFun&lt;/code&gt; is to return information about the table. &lt;code&gt;undefined&lt;/code&gt; is to be returned if the value of some tag is unknown:</source>
          <target state="translated">&lt;code&gt;InfoFun&lt;/code&gt; функция обратного вызова InfoFun предназначена для возврата информации о таблице. &lt;code&gt;undefined&lt;/code&gt; должно быть возвращено, если значение некоторого тега неизвестно:</target>
        </trans-unit>
        <trans-unit id="1442c4ded70572e00f428d9108e7ae55df7a65b5" translate="yes" xml:space="preserve">
          <source>Unary callback function &lt;code&gt;PreFun&lt;/code&gt; is called once before the table is read for the first time. If the call fails, the query evaluation fails.</source>
          <target state="translated">&lt;code&gt;PreFun&lt;/code&gt; функция обратного вызова PreFun вызывается один раз перед первым чтением таблицы. Если вызов завершился неудачно, оценка запроса не удалась.</target>
        </trans-unit>
        <trans-unit id="5a92175579f60db68a9c361cc251147f8debf6b0" translate="yes" xml:space="preserve">
          <source>Unary logical NOT</source>
          <target state="translated">Унарная логика НЕ</target>
        </trans-unit>
        <trans-unit id="27bb4c7fe8d37999952aa5b0af1c3595bd259bdb" translate="yes" xml:space="preserve">
          <source>UnaryGraphOp ::= &lt;code&gt;components&lt;/code&gt; | &lt;code&gt;condensation&lt;/code&gt;</source>
          <target state="translated">UnaryGraphOp :: = &lt;code&gt;components&lt;/code&gt; | &lt;code&gt;condensation&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c01c0a17c153449bd9a04099f8971f3292a601fb" translate="yes" xml:space="preserve">
          <source>UnarySetOp ::= &lt;code&gt;domain&lt;/code&gt; | &lt;code&gt;range&lt;/code&gt; | &lt;code&gt;strict&lt;/code&gt;</source>
          <target state="translated">UnarySetOp :: = &lt;code&gt;domain&lt;/code&gt; | &lt;code&gt;range&lt;/code&gt; | &lt;code&gt;strict&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e57016edceec7e7b4449fe027bb35d1ba319eb9f" translate="yes" xml:space="preserve">
          <source>Unassigned</source>
          <target state="translated">Unassigned</target>
        </trans-unit>
        <trans-unit id="8707e2ffeef5fa8b41de5e679969a877cb9db6f0" translate="yes" xml:space="preserve">
          <source>Unblocks a log. A log can only be unblocked by the blocking process.</source>
          <target state="translated">Разблокирует журнал.Разблокировать журнал можно только в процессе блокировки.</target>
        </trans-unit>
        <trans-unit id="fe39591d424d43f7cc9d6d4ca1303c1c24c48eab" translate="yes" xml:space="preserve">
          <source>Unbound and unsafe variables</source>
          <target state="translated">Несвязанные и небезопасные переменные</target>
        </trans-unit>
        <trans-unit id="b13fe86cfdf1fdbc7031b4349a4b6f2fc354ab38" translate="yes" xml:space="preserve">
          <source>Uncompressed Size</source>
          <target state="translated">Размер без сжатия</target>
        </trans-unit>
        <trans-unit id="0a4c7b6c3e87ff86f41e836e792f67b6c2bdf902" translate="yes" xml:space="preserve">
          <source>Uncompressed size (unsigned 32-bit integer in big-endian byte order) is the size of the data before it was compressed. The compressed data has the following format when it has been expanded:</source>
          <target state="translated">Несжатый размер (беззнаковое 32-битное целое число в порядке байт big-endian)-это размер данных до их сжатия.При расширении сжатые данные имеют следующий формат:</target>
        </trans-unit>
        <trans-unit id="848b92d8de0252bd79df355552090abc0668ced9" translate="yes" xml:space="preserve">
          <source>Uncompresses data with gz headers and checksum.</source>
          <target state="translated">Распакуйте данные с помощью заголовков и контрольной суммы gz.</target>
        </trans-unit>
        <trans-unit id="79897564d08477a4d49effa829f40061f9569280" translate="yes" xml:space="preserve">
          <source>Uncompresses data with zlib headers and checksum.</source>
          <target state="translated">Распаковка данных с помощью заголовков zlib и контрольной суммы.</target>
        </trans-unit>
        <trans-unit id="6ad0694c3152ef1643cde8ba2d996a0323a6b4d2" translate="yes" xml:space="preserve">
          <source>Uncompresses data without zlib headers and checksum.</source>
          <target state="translated">Распаковка данных без заголовков zlib и контрольной суммы.</target>
        </trans-unit>
        <trans-unit id="a1c0570481ff7f3e6ed039d51cc86442ea076a33" translate="yes" xml:space="preserve">
          <source>Undefined thread that is not a scheduler thread.</source>
          <target state="translated">Неопределенный поток,который не является потоком планировщика.</target>
        </trans-unit>
        <trans-unit id="f7aa71224a65884ef564916a9d0da2f89835d7d4" translate="yes" xml:space="preserve">
          <source>Under &lt;code&gt;$ROOT/releases&lt;/code&gt;, a new directory &lt;code&gt;B&lt;/code&gt; is created, containing &lt;code&gt;ch_rel-2.rel&lt;/code&gt;, &lt;code&gt;start.boot&lt;/code&gt;, &lt;code&gt;sys.config&lt;/code&gt;, and &lt;code&gt;relup&lt;/code&gt;.</source>
          <target state="translated">В &lt;code&gt;$ROOT/releases&lt;/code&gt; &lt;code&gt;ch_rel-2.rel&lt;/code&gt; создается новый каталог &lt;code&gt;B&lt;/code&gt; , содержащий ch_rel-2.rel , &lt;code&gt;start.boot&lt;/code&gt; , &lt;code&gt;sys.config&lt;/code&gt; и &lt;code&gt;relup&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9db2e4f4f838b5c44fe9cf387c90abe7108283e8" translate="yes" xml:space="preserve">
          <source>Under Windows, batch file &lt;code&gt;etop.bat&lt;/code&gt; can be used.</source>
          <target state="translated">Под Windows можно использовать командный файл &lt;code&gt;etop.bat&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3264cd9d9eb75df44ac7458f032202c1c187eb3e" translate="yes" xml:space="preserve">
          <source>Under Windows, the batch file &lt;code&gt;cdv.bat&lt;/code&gt; can be used.</source>
          <target state="translated">Под Windows можно использовать командный файл &lt;code&gt;cdv.bat&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e5c9e5a121880663dee4769e1af65faa7b494736" translate="yes" xml:space="preserve">
          <source>Under a key, any number of named values can be stored. They have names, types, and data.</source>
          <target state="translated">Под ключом может быть сохранено любое количество именованных значений.У них есть имена,типы и данные.</target>
        </trans-unit>
        <trans-unit id="dd8f3b0e81b0f054de52ff314e53658c55941c1a" translate="yes" xml:space="preserve">
          <source>Under certain circumstances incompatible changes might be introduced even in parts of the system that should be compatible between releases. Things that might trigger incompatible changes like this are:</source>
          <target state="translated">При определенных обстоятельствах могут вноситься несовместимые изменения даже в те части системы,которые должны быть совместимы между выпусками.Вещи,которые могут вызывать несовместимые изменения,например,такие,как это:</target>
        </trans-unit>
        <trans-unit id="572aa08aba747d5d8b7a4a50d789147e2afaec76" translate="yes" xml:space="preserve">
          <source>Under the &lt;strong&gt;Warnings&lt;/strong&gt; pull-down menu, there are buttons that control which discrepancies are reported to the user in the &lt;strong&gt;Warnings&lt;/strong&gt; window. By clicking these buttons, you can enable/disable a whole class of warnings. Information about the classes of warnings is found on the &quot;Warnings&quot; item under the &lt;strong&gt;Help&lt;/strong&gt; menu (in the rightmost top corner).</source>
          <target state="translated">В раскрывающемся меню &amp;laquo; &lt;strong&gt;Предупреждения&amp;raquo;&lt;/strong&gt; есть кнопки, которые определяют, о каких расхождениях сообщать пользователю в окне &amp;laquo; &lt;strong&gt;Предупреждения&amp;raquo;&lt;/strong&gt; . Нажимая эти кнопки, вы можете включить / отключить целый класс предупреждений. Информация о классах предупреждений находится в пункте &amp;laquo;Предупреждения&amp;raquo; в меню &amp;laquo; &lt;strong&gt;Справка&amp;raquo;&lt;/strong&gt; (в правом верхнем углу).</target>
        </trans-unit>
        <trans-unit id="f9f2c37bc89cf9d5792256518a7724565bd0f1e9" translate="yes" xml:space="preserve">
          <source>Under the tag &lt;strong&gt;=allocated_areas&lt;/strong&gt; is shown information similar to what can be obtained on a living node with &lt;code&gt; erlang:system_info(allocated_areas)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae6ad23ca12e3d31111c9342b18cb40e19aa690d" translate="yes" xml:space="preserve">
          <source>Under the tag &lt;strong&gt;=allocated_areas&lt;/strong&gt; is shown information similar to what can be obtained on a living node with &lt;code&gt;erlang:system_info(allocated_areas)&lt;/code&gt;.</source>
          <target state="translated">Под тегом tag &lt;strong&gt;= allocated_areas&lt;/strong&gt; отображается информация, аналогичная той, которую можно получить на живом узле с помощью &lt;code&gt;erlang:system_info(allocated_areas)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b011cdf662fa95678104f28ffe7a2bd2b09e3ee6" translate="yes" xml:space="preserve">
          <source>Under the tag &lt;strong&gt;=allocator:&amp;lt;A&amp;gt;&lt;/strong&gt; is shown various information about allocator &amp;lt;A&amp;gt;. The information is similar to what can be obtained on a living node with &lt;code&gt; erlang:system_info({allocator, &amp;lt;A&amp;gt;})&lt;/code&gt;. For more information, see also &lt;code&gt;&lt;a href=&quot;erts_alloc&quot;&gt;erts_alloc(3)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4c5641fd04e324ff84f71ed58f45687d78170d8" translate="yes" xml:space="preserve">
          <source>Under the tag &lt;strong&gt;=allocator:&amp;lt;A&amp;gt;&lt;/strong&gt; is shown various information about allocator &amp;lt;A&amp;gt;. The information is similar to what can be obtained on a living node with &lt;code&gt;erlang:system_info({allocator, &amp;lt;A&amp;gt;})&lt;/code&gt;. For more information, see also &lt;code&gt;&lt;a href=&quot;erts_alloc&quot;&gt;erts_alloc(3)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Под тегом &lt;strong&gt;= allocator: &amp;lt;A&amp;gt;&lt;/strong&gt; отображается различная информация о распределителе &amp;lt;A&amp;gt;. Информация аналогична той, которую можно получить на живом узле с помощью &lt;code&gt;erlang:system_info({allocator, &amp;lt;A&amp;gt;})&lt;/code&gt; . Для получения дополнительной информации см. Также &lt;code&gt;&lt;a href=&quot;erts_alloc&quot;&gt;erts_alloc(3)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d79bffcbce82c370cc6389413481bbd120a99622" translate="yes" xml:space="preserve">
          <source>Under the tag &lt;strong&gt;=memory&lt;/strong&gt; is shown information similar to what can be obtained on a living node with &lt;code&gt; erlang:memory()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d37cd225e87fcc610bec30b5a05911619436d89" translate="yes" xml:space="preserve">
          <source>Under the tag &lt;strong&gt;=memory&lt;/strong&gt; is shown information similar to what can be obtainted on a living node with &lt;code&gt;erlang:memory()&lt;/code&gt;.</source>
          <target state="translated">Под тегом tag &lt;strong&gt;= memory&lt;/strong&gt; отображается информация, аналогичная той, которую можно получить на живом узле с помощью &lt;code&gt;erlang:memory()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="63ce4685b2bc584945411c035f09d36043b054a2" translate="yes" xml:space="preserve">
          <source>Under the tag &lt;strong&gt;=scheduler&lt;/strong&gt; is shown information about the current state and statistics of the schedulers in the runtime system. On operating systems that allow suspension of other threads, the data within this section reflects what the runtime system looks like when a crash occurs.</source>
          <target state="translated">Под тегом &lt;strong&gt;= scheduler&lt;/strong&gt; отображается информация о текущем состоянии и статистика планировщиков в системе времени выполнения. В операционных системах, допускающих приостановку других потоков, данные в этом разделе отражают то, как выглядит система времени выполнения в случае сбоя.</target>
        </trans-unit>
        <trans-unit id="c4dc6bd20baf250db6e40693e866b1962ff4e8bc" translate="yes" xml:space="preserve">
          <source>Under the tags &lt;strong&gt;=hash_table:&amp;lt;table_name&amp;gt;&lt;/strong&gt; and &lt;strong&gt;=index_table:&amp;lt;table_name&amp;gt;&lt;/strong&gt; is shown internal tables. These are mostly of interest for runtime system developers.</source>
          <target state="translated">Под тегами &lt;strong&gt;= hash_table: &amp;lt;table_name&amp;gt;&lt;/strong&gt; и &lt;strong&gt;= index_table: &amp;lt;table_name&amp;gt;&lt;/strong&gt; показаны внутренние таблицы. Они в основном представляют интерес для разработчиков систем времени выполнения.</target>
        </trans-unit>
        <trans-unit id="bd488528eeec3369801c6ace7a039c15038c870d" translate="yes" xml:space="preserve">
          <source>Undo Operation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cc501eac2fcb3163225e3af20fdf997e537c7a6" translate="yes" xml:space="preserve">
          <source>Undocumented (old) algorithms are deprecated but still implemented so old code relying on them will produce the same pseudo random sequences as before.</source>
          <target state="translated">Недокументированные (старые)алгоритмы устарели,но все же реализованы так,что старый код,полагаясь на них,будет производить те же псевдослучайные последовательности,что и раньше.</target>
        </trans-unit>
        <trans-unit id="87e34279dd28e6f111c12cefa204d1bbe4761338" translate="yes" xml:space="preserve">
          <source>Undocumented functions in this module are not to be used.</source>
          <target state="translated">Недокументированные функции в этом модуле не должны использоваться.</target>
        </trans-unit>
        <trans-unit id="196d8f0f66ad490a457b6fb5d6806ec3993a5c10" translate="yes" xml:space="preserve">
          <source>Unfolds all occurrences of atoms in &lt;code&gt;ListIn&lt;/code&gt; to tuples &lt;code&gt;{Atom, true}&lt;/code&gt;.</source>
          <target state="translated">Разворачивает все вхождения атомов в &lt;code&gt;ListIn&lt;/code&gt; в кортежи &lt;code&gt;{Atom, true}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d44efc32ffe75b3dcb95ec9933fa94f5e6f5bc0b" translate="yes" xml:space="preserve">
          <source>Unfortunately not only threads managed by the thread progress functionality may insert memory blocks. Other threads also needs to be taken care of. Other threads will not be as frequent users of this functionality as managed threads, so using a less efficient scheme for them is not that big of a problem. In order to handle unmanaged threads we use two reference counters. When an unmanaged thread enters this implementation it increments the reference counter currently used, and when it leaves this implementation it decrements the same reference counter. When the consumer thread calls &lt;code&gt;erts_thr_progress_later()&lt;/code&gt; in order to determine when it is safe to move &lt;code&gt;head.unref_end&lt;/code&gt;, it also swaps reference counters for unmanaged threads. The previous current represents outstanding references from the time up to this point. The new current represents future reference following this point. When the consumer thread detects that we have both reached the desired thread progress and when the previous current reference counter reach zero it is safe to move the &lt;code&gt;head.unref_end&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47be4025952fbf3894ef86d325a9d331d9d77d10" translate="yes" xml:space="preserve">
          <source>Unicode Support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ab34ddc2bf3b987c39e2558abfd1de510704f88" translate="yes" xml:space="preserve">
          <source>Unicode binary encoded as UTF16 little endian.</source>
          <target state="translated">Двоичный Unicode кодируется как UTF16 little endian.</target>
        </trans-unit>
        <trans-unit id="9476616408be8ddee79977abc7989cebfe910910" translate="yes" xml:space="preserve">
          <source>Unicode filename translation is turned on with switch &lt;code&gt;+fnu&lt;/code&gt;. On Linux, a VM started without explicitly stating the filename translation mode defaults to &lt;code&gt;latin1&lt;/code&gt; as the native filename encoding. On Windows and MacOS X, the default behavior is that of Unicode filename translation. Therefore &lt;code&gt;file:native_name_encoding/0&lt;/code&gt; by default returns &lt;code&gt;utf8&lt;/code&gt; on those systems (Windows does not use UTF-8 on the file system level, but this can safely be ignored by the Erlang programmer). The default behavior can, as stated earlier, be changed using option &lt;code&gt;+fnu&lt;/code&gt; or &lt;code&gt;+fnl&lt;/code&gt; to the VM, see the &lt;code&gt;erl&lt;/code&gt; program. If the VM is started in Unicode filename translation mode, &lt;code&gt;file:native_name_encoding/0&lt;/code&gt; returns atom &lt;code&gt;utf8&lt;/code&gt;. Switch &lt;code&gt;+fnu&lt;/code&gt; can be followed by &lt;code&gt;w&lt;/code&gt;, &lt;code&gt;i&lt;/code&gt;, or &lt;code&gt;e&lt;/code&gt; to control how wrongly encoded filenames are to be reported.</source>
          <target state="translated">Перевод файлов в Юникоде включается переключателем &lt;code&gt;+fnu&lt;/code&gt; . В Linux виртуальная машина запускалась без явного указания режима трансляции имени файла по умолчанию &lt;code&gt;latin1&lt;/code&gt; в качестве собственной кодировки имени файла. В Windows и MacOS X поведение по умолчанию - это перевод имени файла в Юникоде. Поэтому &lt;code&gt;file:native_name_encoding/0&lt;/code&gt; по умолчанию возвращает &lt;code&gt;utf8&lt;/code&gt; в этих системах (Windows не использует UTF-8 на уровне файловой системы, но программист на Erlang может спокойно это игнорировать). Поведение по умолчанию, как было сказано ранее, можно изменить с помощью опции &lt;code&gt;+fnu&lt;/code&gt; или &lt;code&gt;+fnl&lt;/code&gt; для виртуальной машины, см. Программу &lt;code&gt;erl&lt;/code&gt; . Если виртуальная машина запущена в режиме преобразования имени файла Unicode, &lt;code&gt;file:native_name_encoding/0&lt;/code&gt; возвращает атом &lt;code&gt;utf8&lt;/code&gt; . За переключателем &lt;code&gt;+fnu&lt;/code&gt; могут следовать &lt;code&gt;w&lt;/code&gt; , &lt;code&gt;i&lt;/code&gt; или &lt;code&gt;e&lt;/code&gt; , чтобы указать, как следует сообщать о неправильно закодированных именах файлов.</target>
        </trans-unit>
        <trans-unit id="0ae13754db32b01d8c677dc9a973140e8500d0a8" translate="yes" xml:space="preserve">
          <source>Unicode filename translation is turned on with switch &lt;code&gt;+fnu&lt;/code&gt;. On Linux, a VM started without explicitly stating the filename translation mode defaults to &lt;code&gt;latin1&lt;/code&gt; as the native filename encoding. On Windows, MacOS X and Android, the default behavior is that of Unicode filename translation. Therefore &lt;code&gt;file:native_name_encoding/0&lt;/code&gt; by default returns &lt;code&gt;utf8&lt;/code&gt; on those systems (Windows does not use UTF-8 on the file system level, but this can safely be ignored by the Erlang programmer). The default behavior can, as stated earlier, be changed using option &lt;code&gt;+fnu&lt;/code&gt; or &lt;code&gt;+fnl&lt;/code&gt; to the VM, see the &lt;code&gt;erl&lt;/code&gt; program. If the VM is started in Unicode filename translation mode, &lt;code&gt;file:native_name_encoding/0&lt;/code&gt; returns atom &lt;code&gt;utf8&lt;/code&gt;. Switch &lt;code&gt;+fnu&lt;/code&gt; can be followed by &lt;code&gt;w&lt;/code&gt;, &lt;code&gt;i&lt;/code&gt;, or &lt;code&gt;e&lt;/code&gt; to control how wrongly encoded filenames are to be reported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="988784de449d7b8cbc0704eff09bcd0c69371d5a" translate="yes" xml:space="preserve">
          <source>Unicode is a standard defining code points (numbers) for all known, living or dead, scripts. In principle, every symbol used in any language has a Unicode code point. Unicode code points are defined and published by the Unicode Consortium, which is a non-profit organization.</source>
          <target state="translated">Юникод-это стандартный определяющий код точек (чисел)для всех известных,живых или мертвых скриптов.В принципе,каждый символ,используемый в любом языке,имеет точку кода Юникода.Точки кода Юникод определяются и публикуются Консорциумом Юникод,который является некоммерческой организацией.</target>
        </trans-unit>
        <trans-unit id="753a9fc18dc38abc9e40310e1511762a587d6d68" translate="yes" xml:space="preserve">
          <source>Unicode metadata stored in PAX headers is preserved</source>
          <target state="translated">Сохраняются метаданные Юникода,хранящиеся в заголовках PAX.</target>
        </trans-unit>
        <trans-unit id="717d423333854e072ef433389e96fff5bd03e76d" translate="yes" xml:space="preserve">
          <source>Unicode support is basically UTF-8 based. To use Unicode characters, you either call &lt;code&gt;&lt;a href=&quot;#compile-2&quot;&gt;compile/2&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#run-3&quot;&gt;run/3&lt;/a&gt;&lt;/code&gt; with option &lt;code&gt;unicode&lt;/code&gt;, or the pattern must start with one of these special sequences:</source>
          <target state="translated">Поддержка Unicode в основном основана на UTF-8. Чтобы использовать символы Unicode, вы либо вызываете &lt;code&gt;&lt;a href=&quot;#compile-2&quot;&gt;compile/2&lt;/a&gt;&lt;/code&gt; , либо &lt;code&gt;&lt;a href=&quot;#run-3&quot;&gt;run/3&lt;/a&gt;&lt;/code&gt; с опцией &lt;code&gt;unicode&lt;/code&gt; , либо шаблон должен начинаться с одной из этих специальных последовательностей:</target>
        </trans-unit>
        <trans-unit id="9619f5cd0ede72c7dc62df2d3b5ff34d2c75b610" translate="yes" xml:space="preserve">
          <source>Uniform floats had a non-uniform density so small values i.e less than 0.5 had got smaller intervals decreasing as the generated value approached 0.0 although still uniformly distributed for sufficiently large subranges. The new algorithms produces uniformly distributed floats on the form N * 2.0^(-53) hence equally spaced.</source>
          <target state="translated">Равномерные поплавки имели неоднородную плотность,поэтому малые значения,т.е.менее 0.5,уменьшались с уменьшением интервалов по мере приближения полученного значения к 0.0,хотя все еще равномерно распределены для достаточно больших поддиапазонов.Новые алгоритмы производят равномерно распределенные плавающие с плавающей точкой на форме N*2.0^(-53),следовательно,равномерно распределенные интервалы.</target>
        </trans-unit>
        <trans-unit id="4488ef1f56a2d01fb6e741f79e8378c71279a1d3" translate="yes" xml:space="preserve">
          <source>Uniform integer ranges had a skew in the probability distribution that was not noticable for small ranges but for large ranges less than the generator's precision the probability to produce a low number could be twice the probability for a high.</source>
          <target state="translated">Унифицированные целочисленные диапазоны имели перекос в распределении вероятностей,который не был заметен для малых диапазонов,но для больших диапазонов с точностью ниже точности генератора вероятность произвести низкое число может быть в два раза выше вероятности для высокого.</target>
        </trans-unit>
        <trans-unit id="adabbdf2f0cec9c6d0d246d5a204f96b7e74b355" translate="yes" xml:space="preserve">
          <source>Uniform integer ranges larger than or equal to the generator's precision used a floating point fallback that only calculated with 52 bits which is smaller than the requested range and therefore were not all numbers in the requested range even possible to produce.</source>
          <target state="translated">В единообразных целочисленных диапазонах,превышающих или равных точности генератора,использовался метод отката с плавающей точкой,который вычислялся только с 52 битами,что меньше запрашиваемого диапазона,и поэтому не все числа в запрашиваемом диапазоне можно было даже получить.</target>
        </trans-unit>
        <trans-unit id="36e839dc7592fa37041cd55253f794215f4f6c06" translate="yes" xml:space="preserve">
          <source>Union of &lt;code&gt;rsa_digest_type()&lt;/code&gt;, &lt;code&gt;dss_digest_type()&lt;/code&gt;, and &lt;code&gt;ecdsa_digest_type()&lt;/code&gt;.</source>
          <target state="translated">Объединение &lt;code&gt;rsa_digest_type()&lt;/code&gt; , &lt;code&gt;dss_digest_type()&lt;/code&gt; и &lt;code&gt;ecdsa_digest_type()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4a878275b775589505d998070ad22ad6d0081609" translate="yes" xml:space="preserve">
          <source>Unique Integers on a Runtime System Instance</source>
          <target state="translated">Уникальные Интеграторы на Экземпляре системы исполнения</target>
        </trans-unit>
        <trans-unit id="a2cc5144e25dba2fec68e539fbd788a730b7301a" translate="yes" xml:space="preserve">
          <source>Unique References on a Runtime System Instance</source>
          <target state="translated">Уникальные ссылки на экземпляр системы исполнения</target>
        </trans-unit>
        <trans-unit id="1d658374db6cb2482782dbc55d76ade6be07a287" translate="yes" xml:space="preserve">
          <source>Unique Values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a306f316fd3f985303c362b8053185a26f2e0d45" translate="yes" xml:space="preserve">
          <source>Unique identifier for the application in the scope of the service. Defaults to the value of the &lt;code&gt;dictionary&lt;/code&gt; option.</source>
          <target state="translated">Уникальный идентификатор приложения в рамках услуги. По умолчанию используется значение параметра &lt;code&gt;dictionary&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5724b00a081ae3e8a4cc6f50314a3e776bc6f0d2" translate="yes" xml:space="preserve">
          <source>Unit Testing is testing of individual program &quot;units&quot; in relative isolation. There is no particular size requirement: a unit can be a function, a module, a process, or even a whole application, but the most typical testing units are individual functions or modules. In order to test a unit, you specify a set of individual tests, set up the smallest necessary environment for being able to run those tests (often, you don't need to do any setup at all), you run the tests and collect the results, and finally you do any necessary cleanup so that the test can be run again later. A Unit Testing Framework tries to help you in each stage of this process, so that it is easy to write tests, easy to run them, and easy to see which tests failed (so you can fix the bugs).</source>
          <target state="translated">Блок-тестирование-это тестирование отдельных программных &quot;единиц&quot; в относительной изоляции.Никаких особых требований к размеру не предъявляется:единица может быть функцией,модулем,процессом или даже целым приложением,но наиболее типичными тестируемыми единицами являются отдельные функции или модули.Для того чтобы протестировать модуль,вы указываете набор отдельных тестов,настраиваете самую маленькую среду,необходимую для запуска этих тестов (часто вообще не требуется никаких настроек),запускаете тесты и собираете результаты,и,наконец,делаете всю необходимую очистку,чтобы тест можно было запустить еще раз позже.Структура модульного тестирования пытается помочь Вам на каждом этапе этого процесса,чтобы было легко писать тесты,легко их запускать и легко видеть,какие тесты провалились (так что Вы можете исправить ошибки).</target>
        </trans-unit>
        <trans-unit id="9caddb3cd5b7265345df4fab350e48f214540b46" translate="yes" xml:space="preserve">
          <source>Universal Time. UT1 is based on the rotation of the earth and conceptually means solar time at 0&amp;deg; longitude.</source>
          <target state="translated">Мировое время. UT1 основан на вращении Земли и концептуально означает солнечное время на нулевой долготе.</target>
        </trans-unit>
        <trans-unit id="67fdab77a1c02655cb90e9076adda573749aee76" translate="yes" xml:space="preserve">
          <source>Universaltime</source>
          <target state="translated">Universaltime</target>
        </trans-unit>
        <trans-unit id="f0fd69818de3f9565ba68951c5c09c08312d1123" translate="yes" xml:space="preserve">
          <source>Unix 'tar' utility for reading and writing tar archives.</source>
          <target state="translated">Утилита Unix 'tar' для чтения и записи архивов tar.</target>
        </trans-unit>
        <trans-unit id="c497be34c3d12775e6c6e249a2bb96e5096e4688" translate="yes" xml:space="preserve">
          <source>Unix example: &lt;code&gt;/usr/local/bin&lt;/code&gt;</source>
          <target state="translated">Пример Unix: &lt;code&gt;/usr/local/bin&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="52db1f36f26e76a3a2c634008d80678e33f56bbd" translate="yes" xml:space="preserve">
          <source>Unknown Functions.</source>
          <target state="translated">Неизвестные функции.</target>
        </trans-unit>
        <trans-unit id="b20270332ab7fc1d7887105b864abda119f91200" translate="yes" xml:space="preserve">
          <source>Unknown Modules.</source>
          <target state="translated">Неизвестные модули.</target>
        </trans-unit>
        <trans-unit id="c3ac576a2d7732a8c0c77a12f249926d64da2561" translate="yes" xml:space="preserve">
          <source>Unless a table of type &lt;code&gt;set&lt;/code&gt;, &lt;code&gt;bag&lt;/code&gt;, or &lt;code&gt;duplicate_bag&lt;/code&gt; is fixated using &lt;code&gt;&lt;a href=&quot;#safe_fixtable-2&quot;&gt;safe_fixtable/2&lt;/a&gt;&lt;/code&gt;, a call to &lt;code&gt;next/2&lt;/code&gt; will fail if &lt;code&gt;Key1&lt;/code&gt; no longer exists in the table. For table type &lt;code&gt;ordered_set&lt;/code&gt;, the function always returns the next key after &lt;code&gt;Key1&lt;/code&gt; in term order, regardless whether &lt;code&gt;Key1&lt;/code&gt; ever existed in the table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42c65364e9fb4489250a3ae7948a13788521c35e" translate="yes" xml:space="preserve">
          <source>Unless a table of type &lt;code&gt;set&lt;/code&gt;, &lt;code&gt;bag&lt;/code&gt;, or &lt;code&gt;duplicate_bag&lt;/code&gt; is protected using &lt;code&gt;&lt;a href=&quot;#safe_fixtable-2&quot;&gt;safe_fixtable/2&lt;/a&gt;&lt;/code&gt;, a traversal can fail if concurrent updates are made to the table. For table type &lt;code&gt;ordered_set&lt;/code&gt;, the function returns a list containing object &lt;code&gt;I&lt;/code&gt; in Erlang term order.</source>
          <target state="translated">Если таблица типа &lt;code&gt;set&lt;/code&gt; , &lt;code&gt;bag&lt;/code&gt; или &lt;code&gt;duplicate_bag&lt;/code&gt; не защищена с помощью &lt;code&gt;&lt;a href=&quot;#safe_fixtable-2&quot;&gt;safe_fixtable/2&lt;/a&gt;&lt;/code&gt; , обход может завершиться неудачно, если в таблицу производятся одновременные обновления. Для типа таблицы &lt;code&gt;ordered_set&lt;/code&gt; функция возвращает список, содержащий объект &lt;code&gt;I&lt;/code&gt; в порядке терминов Erlang.</target>
        </trans-unit>
        <trans-unit id="efdfb6336f1dc28fe44fc86849dcd9997db099f2" translate="yes" xml:space="preserve">
          <source>Unless a table of type &lt;code&gt;set&lt;/code&gt;, &lt;code&gt;bag&lt;/code&gt;, or &lt;code&gt;duplicate_bag&lt;/code&gt; is protected using &lt;code&gt;&lt;a href=&quot;#safe_fixtable-2&quot;&gt;safe_fixtable/2&lt;/a&gt;&lt;/code&gt;, a traversal can fail if concurrent updates are made to the table. For table type &lt;code&gt;ordered_set&lt;/code&gt;, the function returns the next key in order, even if the object does no longer exist.</source>
          <target state="translated">Если таблица типа &lt;code&gt;set&lt;/code&gt; , &lt;code&gt;bag&lt;/code&gt; или &lt;code&gt;duplicate_bag&lt;/code&gt; не защищена с помощью &lt;code&gt;&lt;a href=&quot;#safe_fixtable-2&quot;&gt;safe_fixtable/2&lt;/a&gt;&lt;/code&gt; , обход может завершиться неудачно, если в таблицу производятся одновременные обновления. Для типа таблицы &lt;code&gt;ordered_set&lt;/code&gt; функция возвращает следующий ключ по порядку, даже если объект больше не существует.</target>
        </trans-unit>
        <trans-unit id="743984ff40a29e25f3a91777282531a480bea68e" translate="yes" xml:space="preserve">
          <source>Unless otherwise specified by the options, all modules are assumed to be at least &quot;static&quot;, and all except the target module are assumed to be &quot;safe&quot;. See the &lt;code&gt;static&lt;/code&gt; and &lt;code&gt;safe&lt;/code&gt; options for details.</source>
          <target state="translated">Если в параметрах не указано иное, все модули считаются как минимум &amp;laquo;статическими&amp;raquo;, и все, кроме целевого модуля, считаются &amp;laquo;безопасными&amp;raquo;. Подробнее см. &lt;code&gt;static&lt;/code&gt; и &lt;code&gt;safe&lt;/code&gt; параметры.</target>
        </trans-unit>
        <trans-unit id="6fd12a82bf92d67e237725f9648f0226fb3bb44f" translate="yes" xml:space="preserve">
          <source>Unless otherwise specified the return value type and encoding are the same as the input type and encoding. That is, binary input returns binary output, list input returns a list output but mixed input returns list output.</source>
          <target state="translated">Если не указано иное,тип возвращаемого значения и кодировка совпадают с типом и кодировкой входа.То есть,двоичный вход возвращает двоичный выход,листовой вход возвращает листовой выход,но смешанный вход возвращает листовой выход.</target>
        </trans-unit>
        <trans-unit id="2452df07cb8ca79cfe0600811352c2e7e3686be8" translate="yes" xml:space="preserve">
          <source>Unless otherwise specified the return value type is the same as the input type. That is, binary input returns binary output, list input returns a list output, and mixed input can return a mixed output.</source>
          <target state="translated">Если не указано иное,тип возвращаемого значения совпадает с типом входного сигнала.То есть,двоичный вход возвращает двоичный выход,листовой вход возвращает листовой выход,а смешанный вход может возвращать смешанный выход.</target>
        </trans-unit>
        <trans-unit id="f3df395f5cdf2fa36eee4743206fa60a6a1a66c2" translate="yes" xml:space="preserve">
          <source>Unless otherwise specified, leading whitespace is ignored for all control sequences. An input field cannot be more than one line wide.</source>
          <target state="translated">Если не указано иное,ведущий пробел игнорируется для всех управляющих последовательностей.Поле ввода не может быть более одной строки шириной.</target>
        </trans-unit>
        <trans-unit id="4a1cc2b0ee63b4df93cb4cef8c16bee9110c56a5" translate="yes" xml:space="preserve">
          <source>Unless otherwise specified, the order of the registered filters will be the order in which they are registered.</source>
          <target state="translated">Если не указано иное,то порядок зарегистрированных фильтров будет соответствовать порядку,в котором они зарегистрированы.</target>
        </trans-unit>
        <trans-unit id="336e16f5b15c1bb3924a2d4ee1f281da2f5d2f39" translate="yes" xml:space="preserve">
          <source>Unless otherwise stated, all functions assume that position numbering starts at 1. That is, the first element of a list is at position 1.</source>
          <target state="translated">Если не указано иное,все функции предполагают,что нумерация позиций начинается с позиции 1,то есть первый элемент списка находится в позиции 1.</target>
        </trans-unit>
        <trans-unit id="a5744f08804fbcbd546e4dfc2b0e6fcafee559f0" translate="yes" xml:space="preserve">
          <source>Unless otherwise stated, all functions in this module fail if the specified &lt;code&gt;gen_server&lt;/code&gt; process does not exist or if bad arguments are specified.</source>
          <target state="translated">Если не указано иное, все функции в этом модуле завершаются ошибкой, если указанный процесс &lt;code&gt;gen_server&lt;/code&gt; не существует или если указаны неверные аргументы.</target>
        </trans-unit>
        <trans-unit id="33f0b9bf676eb2bfd97e1ca14eb9192d3876198f" translate="yes" xml:space="preserve">
          <source>Unless otherwise stated, all functions in this module fail if the specified &lt;code&gt;gen_statem&lt;/code&gt; does not exist or if bad arguments are specified.</source>
          <target state="translated">Если не указано иное, все функции в этом модуле &lt;code&gt;gen_statem&lt;/code&gt; ошибкой, если указанное gen_statem не существует или если указаны неверные аргументы.</target>
        </trans-unit>
        <trans-unit id="2130ed65fd03b5efa6f9266bb204f3dc0f269a98" translate="yes" xml:space="preserve">
          <source>Unless otherwise stated, all functions in this module fail if the specified event manager does not exist or if bad arguments are specified.</source>
          <target state="translated">Если не указано иное,все функции в этом модуле не будут работать,если указанного менеджера событий не существует или если указаны плохие аргументы.</target>
        </trans-unit>
        <trans-unit id="94ecf2431ac506145df210d3f762df7ef9ac568e" translate="yes" xml:space="preserve">
          <source>Unless otherwise stated, all functions in this module fail if the specified supervisor bridge does not exist or if bad arguments are specified.</source>
          <target state="translated">Если не указано иначе,все функции в этом модуле не будут работать,если указанный мост супервизора не существует или если указаны плохие аргументы.</target>
        </trans-unit>
        <trans-unit id="ce6e960d5712a50515c10d0e5588263e19e9ce6b" translate="yes" xml:space="preserve">
          <source>Unless otherwise stated, all functions in this module fail if the specified supervisor does not exist or if bad arguments are specified.</source>
          <target state="translated">Если не указано иначе,все функции в этом модуле не будут работать,если указанного супервизора не существует или если указаны плохие аргументы.</target>
        </trans-unit>
        <trans-unit id="5c7ee08644b98d18eca27766dd86d186eaca4f73" translate="yes" xml:space="preserve">
          <source>Unless specified by the user when the array is created, the default value is the atom &lt;code&gt;undefined&lt;/code&gt;. There is no difference between an unset entry and an entry that has been explicitly set to the same value as the default one (compare &lt;code&gt;&lt;a href=&quot;#reset-2&quot;&gt;reset/2&lt;/a&gt;&lt;/code&gt;). If you need to differentiate between unset and set entries, ensure that the default value cannot be confused with the values of set entries.</source>
          <target state="translated">Если не указано пользователем при создании массива, значением по умолчанию является атом &lt;code&gt;undefined&lt;/code&gt; . Нет никакой разницы между неустановленной записью и записью, для которой явно задано то же значение, что и значение по умолчанию (сравните &lt;code&gt;&lt;a href=&quot;#reset-2&quot;&gt;reset/2&lt;/a&gt;&lt;/code&gt; ). Если вам нужно различать неустановленные и установленные записи, убедитесь, что значение по умолчанию нельзя спутать со значениями установленных записей.</target>
        </trans-unit>
        <trans-unit id="dd13caf6027b189cef2a36a20e0fd13e56485aad" translate="yes" xml:space="preserve">
          <source>Unless the file name is absolute, the file is first searched for relative to the current directory, and then using the normal search path (&lt;code&gt;code:get_path()&lt;/code&gt;). This means that the names of typical &quot;app&quot; files can be used directly, without a path, e.g., &lt;code&gt;&quot;mnesia.app&quot;&lt;/code&gt;.</source>
          <target state="translated">Если имя файла не является абсолютным, файл сначала ищется относительно текущего каталога, а затем используется обычный путь поиска ( &lt;code&gt;code:get_path()&lt;/code&gt; ). Это означает, что имена типичных файлов &amp;laquo;приложений&amp;raquo; можно использовать напрямую, без пути, например, &lt;code&gt;&quot;mnesia.app&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="07a837b10265d2be2c9f800bf253594222b1cdf6" translate="yes" xml:space="preserve">
          <source>Unless the table is protected using &lt;code&gt;safe_fixtable/2&lt;/code&gt;, calls to &lt;code&gt;bchunk/2&lt;/code&gt; do possibly not work as expected if concurrent updates are made to the table.</source>
          <target state="translated">Если таблица не защищена с помощью &lt;code&gt;safe_fixtable/2&lt;/code&gt; , вызовы &lt;code&gt;bchunk/2&lt;/code&gt; , возможно, не работают должным образом, если в таблицу выполняются одновременные обновления.</target>
        </trans-unit>
        <trans-unit id="ec243991d25d3f676894294544e13f5bc4cfeae2" translate="yes" xml:space="preserve">
          <source>Unless the table is protected using &lt;code&gt;safe_fixtable/2&lt;/code&gt;, subsequent calls to &lt;code&gt;&lt;a href=&quot;#next-2&quot;&gt;next/2&lt;/a&gt;&lt;/code&gt; do possibly not work as expected if concurrent updates are made to the table.</source>
          <target state="translated">Если таблица не защищена с помощью &lt;code&gt;safe_fixtable/2&lt;/code&gt; , последующие вызовы &lt;code&gt;&lt;a href=&quot;#next-2&quot;&gt;next/2&lt;/a&gt;&lt;/code&gt; , возможно, не будут работать должным образом, если в таблицу выполняются одновременные обновления.</target>
        </trans-unit>
        <trans-unit id="f2c55317241e5b2c59b25e3b0df5f88453b5f333" translate="yes" xml:space="preserve">
          <source>Unless the value is &lt;code&gt;none&lt;/code&gt;, the given function is called for each node whose list of annotations is not empty; see below for details. The default value is &lt;code&gt;none&lt;/code&gt;.</source>
          <target state="translated">Если значение не равно &lt;code&gt;none&lt;/code&gt; , данная функция вызывается для каждого узла, список аннотаций которого не пуст; подробности см. ниже. Значение по умолчанию - &lt;code&gt;none&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cdff867eb339963be03bd21021856778c904302c" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;&lt;a href=&quot;#getifaddrs-0&quot;&gt;getifaddrs/0&lt;/a&gt;&lt;/code&gt;, Ifname is encoded a binary. In the unlikely case that a system is using non-7-bit-ASCII characters in network device names, special care has to be taken when encoding this argument.</source>
          <target state="translated">В отличие от &lt;code&gt;&lt;a href=&quot;#getifaddrs-0&quot;&gt;getifaddrs/0&lt;/a&gt;&lt;/code&gt; , Ifname кодируется двоичным кодом. В том маловероятном случае, когда система использует не-7-битные символы ASCII в именах сетевых устройств, следует соблюдать особую осторожность при кодировании этого аргумента.</target>
        </trans-unit>
        <trans-unit id="ae5c0bd0a60e997d1705e91f30f45cde14782afc" translate="yes" xml:space="preserve">
          <source>Unlike data tables, information in schema tables can only be accessed and modified by using the schema-related functions described in this section.</source>
          <target state="translated">В отличие от таблиц данных,доступ к информации в таблицах схем и ее модификация возможны только с помощью функций,связанных со схемами,описанных в данном разделе.</target>
        </trans-unit>
        <trans-unit id="315fbdc2014934db1db457f44c68e1cf848dbeb6" translate="yes" xml:space="preserve">
          <source>Unlike in &quot;plain Erlang&quot;, &lt;code&gt;proc_lib&lt;/code&gt; processes will not generate &lt;strong&gt;error reports&lt;/strong&gt;, which are written to the terminal by the emulator. All exceptions are converted to &lt;strong&gt;exits&lt;/strong&gt; which are ignored by the default &lt;code&gt;logger&lt;/code&gt; handler.</source>
          <target state="translated">В отличие от &amp;laquo;простого Erlang&amp;raquo;, процессы &lt;code&gt;proc_lib&lt;/code&gt; не будут генерировать &lt;strong&gt;отчеты об ошибках&lt;/strong&gt; , которые записываются в терминал эмулятором. Все исключения преобразуются в &lt;strong&gt;выходы,&lt;/strong&gt; которые игнорируются обработчиком &lt;code&gt;logger&lt;/code&gt; по умолчанию .</target>
        </trans-unit>
        <trans-unit id="8e53ff65d2dc51b350969a552119bea613d0b243" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;code&gt;&lt;a href=&quot;#send-2&quot;&gt;send&lt;/a&gt;&lt;/code&gt; function, this one sends &lt;strong&gt;one message&lt;/strong&gt;. This means that if, for whatever reason, its not possible to send the message in one go, the function will instead return with the &lt;strong&gt;remaining&lt;/strong&gt; data (&lt;code&gt;{ok, Remaining}&lt;/code&gt;). Thereby leaving it up to the caller to decide what to do (retry with the remaining data of give up).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f0b46a073145149fc17e2f042255d68220cd4a4" translate="yes" xml:space="preserve">
          <source>Unload &lt;code&gt;Mibs&lt;/code&gt; from an agent. If it cannot unload all MIBs (the default value of the &lt;code&gt;Force&lt;/code&gt; argument is &lt;code&gt;false&lt;/code&gt;), it will indicate where unloading was aborted.</source>
          <target state="translated">Выгрузить &lt;code&gt;Mibs&lt;/code&gt; из агента. Если он не может выгрузить все MIB (значение по умолчанию для аргумента &lt;code&gt;Force&lt;/code&gt; - &lt;code&gt;false&lt;/code&gt; ), он укажет, где выгрузка была прервана.</target>
        </trans-unit>
        <trans-unit id="01b2dca21a4f55d7d0fa16561ba72c0a5a938d9c" translate="yes" xml:space="preserve">
          <source>Unload a &lt;code&gt;Mib&lt;/code&gt; from the manager. The &lt;code&gt;MibName&lt;/code&gt; is the name of the Mib, including the path to where the compiled mib is found. For example,</source>
          <target state="translated">Выгрузите &lt;code&gt;Mib&lt;/code&gt; из менеджера. &lt;code&gt;MibName&lt;/code&gt; это имя Mib, включая путь туда , где находится скомпилированный МИБ. Например,</target>
        </trans-unit>
        <trans-unit id="318d9f4d5f03a67d10200c73fcad432663d2f29b" translate="yes" xml:space="preserve">
          <source>Unload a single &lt;code&gt;Mib&lt;/code&gt; from an agent.</source>
          <target state="translated">Выгрузите один &lt;code&gt;Mib&lt;/code&gt; из агента.</target>
        </trans-unit>
        <trans-unit id="769b903ce1d90a72efda3ccafb33dcd1f3d777a4" translate="yes" xml:space="preserve">
          <source>Unload the mib specified by the &lt;code&gt;Filename&lt;/code&gt; argument from the mib-server.</source>
          <target state="translated">Выгрузите mib, указанный аргументом &lt;code&gt;Filename&lt;/code&gt; , с mib-сервера.</target>
        </trans-unit>
        <trans-unit id="ddd4c00f912e6ef2189a832da23d9650d2872c8c" translate="yes" xml:space="preserve">
          <source>Unloading can be described as the process of telling the emulator that this particular part of the code in this particular process (that is, this &lt;code&gt;&lt;a href=&quot;#users&quot;&gt;user&lt;/a&gt;&lt;/code&gt;) no longer needs the driver. That can, if there are no other users, trigger unloading of the driver, in which case the driver name disappears from the system and (if possible) the memory occupied by the driver executable code is reclaimed.</source>
          <target state="translated">Выгрузку можно описать как процесс сообщения эмулятору, что эта конкретная часть кода в этом конкретном процессе (то есть этому &lt;code&gt;&lt;a href=&quot;#users&quot;&gt;user&lt;/a&gt;&lt;/code&gt; ) больше не нуждается в драйвере. Это может, если нет других пользователей, вызвать выгрузку драйвера, и в этом случае имя драйвера исчезнет из системы и (если возможно) будет освобождена память, занятая исполняемым кодом драйвера.</target>
        </trans-unit>
        <trans-unit id="f01cfbd5c8a37883cb11fbfce549beccf62c0bdc" translate="yes" xml:space="preserve">
          <source>Unloads an engine loaded with the &lt;code&gt;ensure_engine_loaded&lt;/code&gt; function. It both removes the label from the OpenSSL internal engine list and unloads the engine. An error tuple is returned if the engine can't be unloaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39ecc66fc726ebe5dc1f5680017eb9863277fd3d" translate="yes" xml:space="preserve">
          <source>Unloads an engine loaded with the &lt;code&gt;ensure_engine_loaded&lt;/code&gt; function. It both removes the label from the OpenSSL internal engine list and unloads the engine. This function is the same as calling &lt;code&gt;ensure_engine_unloaded/2&lt;/code&gt; with &lt;code&gt;EngineMethods&lt;/code&gt; set to a list of all the possible methods. An error tuple is returned if the engine can't be unloaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7779518675ffce53110af3008d7744e065e1a5f3" translate="yes" xml:space="preserve">
          <source>Unloads the MIBs from agent &lt;code&gt;snmp_master_agent&lt;/code&gt;.</source>
          <target state="translated">Выгружает MIB из агента &lt;code&gt;snmp_master_agent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f4a3d6a062d2d5ee9eda88a5ecd1085fce084994" translate="yes" xml:space="preserve">
          <source>Unloads the OTP-MIB.</source>
          <target state="translated">Разгружает OTP-MIB.</target>
        </trans-unit>
        <trans-unit id="c48f8e606621c6fa11b525d4c336815899ff648e" translate="yes" xml:space="preserve">
          <source>Unloads the OTP-OS-MON-MIB.</source>
          <target state="translated">Разгружает OTP-OS-MON-MIB.</target>
        </trans-unit>
        <trans-unit id="66f8e5114123bed6be608b90ce2bc660face1031" translate="yes" xml:space="preserve">
          <source>Unloads the OpenSSL engine given by &lt;code&gt;Engine&lt;/code&gt;. An error tuple is returned if the engine can't be unloaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38ed8242b3b1b71902fb9d376310f5c95786abfe" translate="yes" xml:space="preserve">
          <source>Unloads the OpenSSL engine given by &lt;code&gt;EngineId&lt;/code&gt;. An error tuple is returned if the engine can't be unloaded.</source>
          <target state="translated">Выгружает движок OpenSSL, заданный &lt;code&gt;EngineId&lt;/code&gt; . Если двигатель не может быть выгружен, возвращается кортеж ошибок.</target>
        </trans-unit>
        <trans-unit id="5cff9e0ced01393a829b38eaa7e0451df21ea9d5" translate="yes" xml:space="preserve">
          <source>Unloads the application specification for &lt;code&gt;Application&lt;/code&gt; from the application controller. It also unloads the application specifications for any included applications. Notice that the function does not purge the Erlang object code.</source>
          <target state="translated">Выгружает спецификацию приложения для &lt;code&gt;Application&lt;/code&gt; из контроллера приложения. Он также выгружает спецификации приложений для всех включенных приложений. Обратите внимание, что функция не очищает объектный код Erlang.</target>
        </trans-unit>
        <trans-unit id="351a6f889a5ded537e77bca6799737838e6f4f76" translate="yes" xml:space="preserve">
          <source>Unloads, or at least dereferences the driver named &lt;code&gt;Name&lt;/code&gt;. If the caller is the last &lt;code&gt;&lt;a href=&quot;#users&quot;&gt;user&lt;/a&gt;&lt;/code&gt; of the driver, all remaining open ports using the driver are killed with reason &lt;code&gt;driver_unloaded&lt;/code&gt; and the driver eventually gets unloaded.</source>
          <target state="translated">Выгружает или, по крайней мере, разыменовывает драйвер с именем &lt;code&gt;Name&lt;/code&gt; . Если вызывающий является последним &lt;code&gt;&lt;a href=&quot;#users&quot;&gt;user&lt;/a&gt;&lt;/code&gt; драйвера, все оставшиеся открытые порты, использующие драйвер, уничтожаются по причине &lt;code&gt;driver_unloaded&lt;/code&gt; , и драйвер в конечном итоге выгружается.</target>
        </trans-unit>
        <trans-unit id="2061febf2aa265ba0d12f05d42293814e13d57b8" translate="yes" xml:space="preserve">
          <source>Unloads, or at least dereferences the driver named &lt;code&gt;Name&lt;/code&gt;. If the caller is the last &lt;code&gt;&lt;a href=&quot;#users&quot;&gt;user&lt;/a&gt;&lt;/code&gt; of the driver, and no more open ports use the driver, the driver gets unloaded. Otherwise, unloading is delayed until all ports are closed and no &lt;code&gt;&lt;a href=&quot;#users&quot;&gt;users&lt;/a&gt;&lt;/code&gt; remain.</source>
          <target state="translated">Выгружает или, по крайней мере, разыменовывает драйвер с именем &lt;code&gt;Name&lt;/code&gt; . Если вызывающий абонент является последним &lt;code&gt;&lt;a href=&quot;#users&quot;&gt;user&lt;/a&gt;&lt;/code&gt; драйвера, и более открытые порты не используют драйвер, драйвер выгружается. В противном случае выгрузка откладывается до тех пор, пока не закроются все порты и не останется &lt;code&gt;&lt;a href=&quot;#users&quot;&gt;users&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="38ad66e7caef87bb85f8df32ab5caabf7bf35995" translate="yes" xml:space="preserve">
          <source>Unlocks a mutex. The mutex currently must be locked by the calling thread.</source>
          <target state="translated">Отпирает мьютекс.В настоящее время мьютекс должен быть заблокирован вызывающей нитью.</target>
        </trans-unit>
        <trans-unit id="3b9b1fba9416c1278f7484dce6e469b9ce20199f" translate="yes" xml:space="preserve">
          <source>Unlocks the configuration target.</source>
          <target state="translated">Разблокирует цель конфигурации.</target>
        </trans-unit>
        <trans-unit id="19786a83cc46632e0d13d564e393de3e1de085fe" translate="yes" xml:space="preserve">
          <source>Unlocks the port data lock passed as argument (&lt;code&gt;pdl&lt;/code&gt;).</source>
          <target state="translated">Разблокирует блокировку данных порта, переданную как аргумент ( &lt;code&gt;pdl&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="c1621249e0ef6ecc8c1156b8b07b094cf1d8ea3a" translate="yes" xml:space="preserve">
          <source>Unmanaged threads can delay thread progress being made:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e529736ebba8b22ec528fcbede64fa669b39cc8" translate="yes" xml:space="preserve">
          <source>Unordered sending is configurable in &lt;code&gt;&lt;a href=&quot;diameter_sctp&quot;&gt;diameter_sctp(3)&lt;/a&gt;&lt;/code&gt;. There is no special handling of DPR/DPA: since a user that cares about pending answers should wait for them before initiating DPR.</source>
          <target state="translated">Неупорядоченная отправка настраивается в &lt;code&gt;&lt;a href=&quot;diameter_sctp&quot;&gt;diameter_sctp(3)&lt;/a&gt;&lt;/code&gt; . Особой обработки DPR / DPA не существует: поскольку пользователь, который заботится об ожидающих ответах, должен дождаться их, прежде чем инициировать DPR.</target>
        </trans-unit>
        <trans-unit id="cdfeac47c5892b6d5954da0f63cd683192cebcee" translate="yes" xml:space="preserve">
          <source>Unordered sets and ordered sets are orthogonal, again in this module; there is no unordered set equal to any ordered set.</source>
          <target state="translated">Неупорядоченные и упорядоченные наборы ортогональны,опять же в этом модуле;нет неупорядоченного набора,равного любому упорядоченному набору.</target>
        </trans-unit>
        <trans-unit id="0315bcb1361b2c68fa29fded47a0e3b15d0b5028" translate="yes" xml:space="preserve">
          <source>Unpacking and Installation of Release Packages</source>
          <target state="translated">Распаковка и установка релизационных пакетов</target>
        </trans-unit>
        <trans-unit id="3b45b03b4626e1a53bac859dec0524861ec0a57e" translate="yes" xml:space="preserve">
          <source>Unpacks a release package &lt;code&gt;Name.tar.gz&lt;/code&gt; located in the &lt;code&gt;releases&lt;/code&gt; directory.</source>
          <target state="translated">Распаковывает релиз-пакет &lt;code&gt;Name.tar.gz&lt;/code&gt; , расположенный в каталоге &lt;code&gt;releases&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1a99a056cf6ecaf575d784978bf9746e5f0db64d" translate="yes" xml:space="preserve">
          <source>Unrecognized options are ignored.</source>
          <target state="translated">Неопознанные опции игнорируются.</target>
        </trans-unit>
        <trans-unit id="c3e8f759a055d6a9097dc478f2320ca3772d6837" translate="yes" xml:space="preserve">
          <source>Unrecognized options are silently ignored but are returned unmodified by &lt;code&gt;&lt;a href=&quot;#service_info-2&quot;&gt;service_info/2&lt;/a&gt;&lt;/code&gt; and can be referred to in predicate functions passed to &lt;code&gt;&lt;a href=&quot;#remove_transport-2&quot;&gt;remove_transport/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Нераспознанные параметры игнорируются, но возвращаются в неизмененном виде с &lt;code&gt;&lt;a href=&quot;#service_info-2&quot;&gt;service_info/2&lt;/a&gt;&lt;/code&gt; и на них можно ссылаться в функциях предиката, передаваемых в &lt;code&gt;&lt;a href=&quot;#remove_transport-2&quot;&gt;remove_transport/2&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fcf136da00ab173645906b6446844bfeeb401e42" translate="yes" xml:space="preserve">
          <source>Unrecognized options are silently ignored.</source>
          <target state="translated">Непризнанные опции игнорируются.</target>
        </trans-unit>
        <trans-unit id="54d58ee32687d0ed22df44187d707090c9f1ee63" translate="yes" xml:space="preserve">
          <source>Unregister a Node from EPMD</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db0b20da3e0471bc484aaa9c62ebfd991d58e416" translate="yes" xml:space="preserve">
          <source>Unregister a notification filter.</source>
          <target state="translated">Не регистрировать фильтр уведомлений.</target>
        </trans-unit>
        <trans-unit id="4e280e10a8485894674391e4d6645db6545aff52" translate="yes" xml:space="preserve">
          <source>Unregister a sub-agent. If the second argument is a pid, then that sub-agent will be unregistered from all trees in &lt;code&gt;Agent&lt;/code&gt;.</source>
          <target state="translated">Отмените регистрацию субагента. Если вторым аргументом является pid, тогда этот субагент будет отменен для всех деревьев в &lt;code&gt;Agent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f03ca80c8e4fbe50cea94aadfa5356b1cefa6ea2" translate="yes" xml:space="preserve">
          <source>Unregister the agent.</source>
          <target state="translated">Отмените регистрацию агента.</target>
        </trans-unit>
        <trans-unit id="b5f3dba02392fc14b01a49c5237fb9ba133abd12" translate="yes" xml:space="preserve">
          <source>Unregister the subagent, handling part of the mib-tree, as specified by the &lt;code&gt;oid()&lt;/code&gt; or &lt;code&gt;pid()&lt;/code&gt; (&lt;code&gt;PidOrOid&lt;/code&gt;).</source>
          <target state="translated">Отмените регистрацию подагента, обрабатывающего часть mib-дерева, как указано в &lt;code&gt;oid()&lt;/code&gt; или &lt;code&gt;pid()&lt;/code&gt; ( &lt;code&gt;PidOrOid&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="6f8277a7a1c1b3585ee2c7d6442d480190db4efc" translate="yes" xml:space="preserve">
          <source>Unregister the user.</source>
          <target state="translated">Отмените регистрацию пользователя.</target>
        </trans-unit>
        <trans-unit id="a8a27c51fcd7b00626a6adb2154cd8c213ef4ec1" translate="yes" xml:space="preserve">
          <source>Unregister this USM user.</source>
          <target state="translated">Отмените регистрацию этого пользователя USM.</target>
        </trans-unit>
        <trans-unit id="e8d7b4bee0a41ee99a7b5f42eb631d46c2797262" translate="yes" xml:space="preserve">
          <source>Unregisters a name from &lt;code&gt;global&lt;/code&gt;.</source>
          <target state="translated">Отменяет регистрацию имени в &lt;code&gt;global&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="778ebac023e85b1f0510378d21c9e5c1fcf345ea" translate="yes" xml:space="preserve">
          <source>Unregisters all USM users.</source>
          <target state="translated">Отменяет регистрацию всех пользователей USM.</target>
        </trans-unit>
        <trans-unit id="3c58e843a4c38141952ae3478058bdba2218974e" translate="yes" xml:space="preserve">
          <source>Unregisters all managed agents.</source>
          <target state="translated">Отменить все управляемые агенты.</target>
        </trans-unit>
        <trans-unit id="246367dd21663f20ce31444da8332f55bea35d97" translate="yes" xml:space="preserve">
          <source>Unregisters all users.</source>
          <target state="translated">Отменить регистрацию всех пользователей.</target>
        </trans-unit>
        <trans-unit id="32c40ce96fa1e83b3bd9616363397a86b832aa70" translate="yes" xml:space="preserve">
          <source>Unregisters the crypto key fun and terminates the process holding it, started by &lt;code&gt;&lt;a href=&quot;#crypto_key_fun-1&quot;&gt;crypto_key_fun/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Отменяет регистрацию криптографического ключа fun и завершает удерживающий его процесс, запущенный &lt;code&gt;&lt;a href=&quot;#crypto_key_fun-1&quot;&gt;crypto_key_fun/1&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7c5ba8d70542c76fd25b8d56f14442cbc2255390" translate="yes" xml:space="preserve">
          <source>Unregisters the specified USM users.</source>
          <target state="translated">Отменяет регистрацию указанных пользователей USM.</target>
        </trans-unit>
        <trans-unit id="01d1e628f578a9203fd5dd6ce46d237fc06cee37" translate="yes" xml:space="preserve">
          <source>Unregisters the specified managed agents.</source>
          <target state="translated">Отмените регистрацию указанных управляемых агентов.</target>
        </trans-unit>
        <trans-unit id="b35f5d367e4318dedf6e9eecba89fb487eb5ab44" translate="yes" xml:space="preserve">
          <source>Unregisters the specified users.</source>
          <target state="translated">Отменяет регистрацию указанных пользователей.</target>
        </trans-unit>
        <trans-unit id="39827e01c383c5bfbd3766c32b34efde1bf35451" translate="yes" xml:space="preserve">
          <source>Unresolved Calls. Empty in &lt;code&gt;modules&lt;/code&gt; mode.</source>
          <target state="translated">Неразрешенные вызовы. Пусто в режиме &lt;code&gt;modules&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="19f30d44760477c48d3263ea185339929d64ed8c" translate="yes" xml:space="preserve">
          <source>Unresolved calls make module data incomplete, which implies that the results of analyses may be invalid.</source>
          <target state="translated">Неразрешенные вызовы делают данные модуля неполными,что подразумевает,что результаты анализа могут быть недействительными.</target>
        </trans-unit>
        <trans-unit id="fb40d6160cba8c7f57aa914e409db0d952645ffe" translate="yes" xml:space="preserve">
          <source>Unset the log level for all the modules of the specified application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d813c57ac643b33b15704ddfaac2f69f436d7ab" translate="yes" xml:space="preserve">
          <source>Unsigned 8-bit integer.</source>
          <target state="translated">Беззнаковое 8-битное целое число.</target>
        </trans-unit>
        <trans-unit id="c196c4cb59b173e8333c1a8a5df703d2addbca5b" translate="yes" xml:space="preserve">
          <source>Unspecified connection shutdown.</source>
          <target state="translated">Неопределенное отключение соединения.</target>
        </trans-unit>
        <trans-unit id="23ba21b928bd868bd499fdc4e16f1fbae6b293bf" translate="yes" xml:space="preserve">
          <source>Unsticks a directory that is marked as sticky.</source>
          <target state="translated">Отключает директорию,помеченную как &quot;липкая&quot;.</target>
        </trans-unit>
        <trans-unit id="2277446510c2f9009fdeac95bbe80a1168ba956b" translate="yes" xml:space="preserve">
          <source>Unsubscribe to event messages from a service.</source>
          <target state="translated">Отказ от подписки на сообщения о событиях от службы.</target>
        </trans-unit>
        <trans-unit id="bcf5dcc3da0cf64b87e972ea01a22a51c15d8495" translate="yes" xml:space="preserve">
          <source>Unused Functions (*). All local and exported functions of analyzed modules that have not been used.</source>
          <target state="translated">Неиспользуемые функции (*).Все локальные и экспортированные функции анализируемых модулей,которые не были использованы.</target>
        </trans-unit>
        <trans-unit id="ef54ae19c4ebc6695e02cbec5080af83b195b393" translate="yes" xml:space="preserve">
          <source>Unused Variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48532263f2300b60babe28fff5fbbc91ed7d708c" translate="yes" xml:space="preserve">
          <source>Unused functions and imports</source>
          <target state="translated">Неиспользуемые функции и импорт</target>
        </trans-unit>
        <trans-unit id="e9b3d935e2fe5c05c6efefdff41786dcbb306041" translate="yes" xml:space="preserve">
          <source>Unused variables</source>
          <target state="translated">Неиспользуемые переменные</target>
        </trans-unit>
        <trans-unit id="b7745c954ca016fa895b408f407a03e565617f6b" translate="yes" xml:space="preserve">
          <source>Up to five log files at maximum 100 KB each with the content of the standard streams from and to the command. (Both the number of logs and sizes can be changed by environment variables, see section &lt;code&gt;&lt;a href=&quot;#environment_variables&quot;&gt;Environment Variables&lt;/a&gt;&lt;/code&gt; below.)</source>
          <target state="translated">До пяти файлов журнала размером не более 100 КБ каждый с содержимым стандартных потоков от и до команды. (Как количество журналов, так и размеры могут быть изменены с помощью переменных среды, см. Раздел &amp;laquo; &lt;code&gt;&lt;a href=&quot;#environment_variables&quot;&gt;Environment Variables&lt;/a&gt;&lt;/code&gt; ниже.)</target>
        </trans-unit>
        <trans-unit id="9dd274c7d6098a1a4d8932d92e9e158a8e9dd4b8" translate="yes" xml:space="preserve">
          <source>Up to now, examples of a number of functions that can be used inside a transaction have been shown. The following list shows the &lt;strong&gt;simplest&lt;/strong&gt;&lt;code&gt;Mnesia&lt;/code&gt; functions that work with transactions. Notice that these functions must be embedded in a transaction. If no enclosing transaction (or other enclosing &lt;code&gt;Mnesia&lt;/code&gt; activity) exists, they all fail.</source>
          <target state="translated">До сих пор были показаны примеры ряда функций, которые можно использовать внутри транзакции. В следующем списке показаны &lt;strong&gt;простейшие&lt;/strong&gt; функции &lt;code&gt;Mnesia&lt;/code&gt; , которые работают с транзакциями. Обратите внимание, что эти функции должны быть встроены в транзакцию. Если закрывающая транзакция (или другая включающая активность &lt;code&gt;Mnesia&lt;/code&gt; ) не существует, все они терпят неудачу.</target>
        </trans-unit>
        <trans-unit id="01b4c751d26980e5035738b359c986debcfcf4b4" translate="yes" xml:space="preserve">
          <source>Up until ERTS version 8.*, the check process code operation checks for all types of references to the old code. That is, direct references (e.g. return addresses on the process stack), indirect references (&lt;code&gt;fun&lt;/code&gt;s in process context), and references to literals in the code.</source>
          <target state="translated">До ERTS версии 8. * операция кода процесса проверки проверяет все типы ссылок на старый код. То есть прямые ссылки (например, адреса возврата в стеке процесса), косвенные ссылки ( &lt;code&gt;fun&lt;/code&gt; в контексте процесса) и ссылки на литералы в коде.</target>
        </trans-unit>
        <trans-unit id="8debd6fa2cf5bff1fb2fae483fef9fdfafa670e1" translate="yes" xml:space="preserve">
          <source>Up until OTP 17 there used to exist an experimental &lt;code&gt;pg&lt;/code&gt; module in &lt;code&gt;stdlib&lt;/code&gt;. This &lt;code&gt;pg&lt;/code&gt; module is not the same module as that experimental &lt;code&gt;pg&lt;/code&gt; module, and only share the same module name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c2624bab6b3cfd68919c56a6d5e5cfd349d334b" translate="yes" xml:space="preserve">
          <source>Update a value in a &lt;code&gt;Map1&lt;/code&gt; associated with &lt;code&gt;Key&lt;/code&gt; by calling &lt;code&gt;Fun&lt;/code&gt; on the old value to get a new value. An exception &lt;code&gt;{badkey,Key}&lt;/code&gt; is generated if &lt;code&gt;Key&lt;/code&gt; is not present in the map.</source>
          <target state="translated">Обновите значение в &lt;code&gt;Map1&lt;/code&gt; , связанном с &lt;code&gt;Key&lt;/code&gt; , вызвав &lt;code&gt;Fun&lt;/code&gt; для старого значения, чтобы получить новое значение. Если &lt;code&gt;Key&lt;/code&gt; отсутствует на карте, генерируется исключение &lt;code&gt;{badkey,Key}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1c9b1268f0c338627a3b15658c74da637dde057f" translate="yes" xml:space="preserve">
          <source>Update a value in a &lt;code&gt;Map1&lt;/code&gt; associated with &lt;code&gt;Key&lt;/code&gt; by calling &lt;code&gt;Fun&lt;/code&gt; on the old value to get a new value. If &lt;code&gt;Key&lt;/code&gt; is not present in &lt;code&gt;Map1&lt;/code&gt; then &lt;code&gt;Init&lt;/code&gt; will be associated with &lt;code&gt;Key&lt;/code&gt;.</source>
          <target state="translated">Обновите значение в &lt;code&gt;Map1&lt;/code&gt; , связанном с &lt;code&gt;Key&lt;/code&gt; , вызвав &lt;code&gt;Fun&lt;/code&gt; для старого значения, чтобы получить новое значение. Если &lt;code&gt;Key&lt;/code&gt; отсутствует в &lt;code&gt;Map1&lt;/code&gt; , то &lt;code&gt;Init&lt;/code&gt; будет связан с &lt;code&gt;Key&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5e2fca097e563aa25bfd5fb033663686a751ded2" translate="yes" xml:space="preserve">
          <source>Update agent config. The function &lt;code&gt;update_agent_info/3&lt;/code&gt; should be used when several values needs to be updated atomically.</source>
          <target state="translated">Конфигурация агента обновления. Функцию &lt;code&gt;update_agent_info/3&lt;/code&gt; следует использовать, когда несколько значений необходимо обновить атомарно.</target>
        </trans-unit>
        <trans-unit id="7afc903ad53b7f5b82a666a44760f2b71394b08f" translate="yes" xml:space="preserve">
          <source>Update all access structures in the staging area to include the newly prepared module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e65320d77653af5410845622a9ee939279e72f69" translate="yes" xml:space="preserve">
          <source>Update an MD5 &lt;code&gt;Context&lt;/code&gt; with &lt;code&gt;Data&lt;/code&gt; and returns a &lt;code&gt;NewContext&lt;/code&gt;.</source>
          <target state="translated">Обновите &lt;code&gt;Context&lt;/code&gt; MD5 с &lt;code&gt;Data&lt;/code&gt; и возвращает &lt;code&gt;NewContext&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2d392faf5b221ec067551948fb64c66dc210a1b9" translate="yes" xml:space="preserve">
          <source>Update configuration data for the Logger proxy. This function behaves as if it was implemented as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15c23ed960405748d119e2cf48c12e3dfbd628b3" translate="yes" xml:space="preserve">
          <source>Update configuration data for the specified handler. This function behaves as if it was implemented as follows:</source>
          <target state="translated">Обновите данные конфигурации для указанного обработчика.Эта функция ведет себя так,как если бы она была реализована следующим образом:</target>
        </trans-unit>
        <trans-unit id="fe58a4200c84c77e18dad55e69d7d322faa4c745" translate="yes" xml:space="preserve">
          <source>Update information about a user</source>
          <target state="translated">Обновить информацию о пользователе</target>
        </trans-unit>
        <trans-unit id="312c6091d8eac0e5b07d6cd16487ac2bd404f20a" translate="yes" xml:space="preserve">
          <source>Update information about an active connection</source>
          <target state="translated">Обновить информацию об активном подключении</target>
        </trans-unit>
        <trans-unit id="1fe0611d972ddd201356bf6556896ed52b2f48ec" translate="yes" xml:space="preserve">
          <source>Update primary configuration data for Logger. This function behaves as if it was implemented as follows:</source>
          <target state="translated">Обновление данных первичной конфигурации для логгера.Эта функция ведет себя так,как если бы она была реализована следующим образом:</target>
        </trans-unit>
        <trans-unit id="764a554dd6a058f4ee8b2a49aff080d148edb108" translate="yes" xml:space="preserve">
          <source>Update the application version number in the &lt;code&gt;.app&lt;/code&gt; file and write an &lt;code&gt;.appup&lt;/code&gt; file:</source>
          <target state="translated">Обновите номер версии приложения в файле &lt;code&gt;.app&lt;/code&gt; и напишите файл &lt;code&gt;.appup&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="df2e0eab67dde01477b9adecadae6f860b5f68c2" translate="yes" xml:space="preserve">
          <source>Update the connection info protocol_version.</source>
          <target state="translated">Обновите версию протокола_соответствия.</target>
        </trans-unit>
        <trans-unit id="1ae0552d56ac843dfab3a0e0e90394739c437be4" translate="yes" xml:space="preserve">
          <source>Update the formatter configuration for the specified handler.</source>
          <target state="translated">Обновите конфигурацию формата для указанного обработчика.</target>
        </trans-unit>
        <trans-unit id="e12a74739554e4908ca08a51e98ff68b92ec211d" translate="yes" xml:space="preserve">
          <source>Update the receive handle of the control process (e.g. after having changed protocol version).</source>
          <target state="translated">Обновите приемную оболочку процесса управления (например,после изменения версии протокола).</target>
        </trans-unit>
        <trans-unit id="4ff8cf55883e7040256c251d18a9776b47973fa6" translate="yes" xml:space="preserve">
          <source>Update the receive handle with the encoding-config (the &lt;code&gt;encoding_config&lt;/code&gt; field).</source>
          <target state="translated">Обновите дескриптор приема с помощью encoding-config ( поле &lt;code&gt;encoding_config&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="3fc874196868b2850c4d27972aa555825f4c8abc" translate="yes" xml:space="preserve">
          <source>Update the staging part of all affected breakpoints. Disable breakpoints that are to be removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4e75d0ad461333a3e5a1fa13055100c26a0e7bc" translate="yes" xml:space="preserve">
          <source>Update usm user config.</source>
          <target state="translated">Обновить пользовательскую конфигурацию usm.</target>
        </trans-unit>
        <trans-unit id="5ff39bab1bf1708cca0909e3396800e9779cd838" translate="yes" xml:space="preserve">
          <source>Updates &lt;code&gt;Key&lt;/code&gt; to value &lt;code&gt;Value&lt;/code&gt; in &lt;code&gt;Tree1&lt;/code&gt; and returns the new tree. Assumes that the key is present in the tree.</source>
          <target state="translated">Обновления &lt;code&gt;Key&lt;/code&gt; к значению &lt;code&gt;Value&lt;/code&gt; в &lt;code&gt;Tree1&lt;/code&gt; и возвращает новое дерево. Предполагает, что ключ присутствует в дереве.</target>
        </trans-unit>
        <trans-unit id="ce52fdc3093dff8fef11813ce4ce3d448b0c6f2e" translate="yes" xml:space="preserve">
          <source>Updates a running Adler-32 checksum for &lt;code&gt;Data&lt;/code&gt;. If &lt;code&gt;Data&lt;/code&gt; is the empty binary or the empty iolist, this function returns the required initial value for the checksum.</source>
          <target state="translated">Обновляет текущую контрольную сумму Adler-32 для &lt;code&gt;Data&lt;/code&gt; . Если &lt;code&gt;Data&lt;/code&gt; - пустой двоичный файл или пустой список iolist, эта функция возвращает требуемое начальное значение для контрольной суммы.</target>
        </trans-unit>
        <trans-unit id="39a616ffbea893cd0d7caf81f5c475e558b40da3" translate="yes" xml:space="preserve">
          <source>Updates a running CRC checksum for &lt;code&gt;Data&lt;/code&gt;. If &lt;code&gt;Data&lt;/code&gt; is the empty binary or the empty iolist, this function returns the required initial value for the CRC.</source>
          <target state="translated">Обновляет текущую контрольную сумму CRC для &lt;code&gt;Data&lt;/code&gt; . Если &lt;code&gt;Data&lt;/code&gt; - это пустой двоичный файл или пустой список iolist, эта функция возвращает необходимое начальное значение для CRC.</target>
        </trans-unit>
        <trans-unit id="78c9911ea54430b2ec4c2464fea0fba3c01b13cb" translate="yes" xml:space="preserve">
          <source>Updates a time-out with a new &lt;code&gt;EventContent&lt;/code&gt;. See &lt;code&gt;&lt;a href=&quot;#type-timeout_action&quot;&gt; timeout_action() &lt;/a&gt;&lt;/code&gt; for how to start a time-out.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8d39f7d480179f5db485862d26b6c6e7aed7b81" translate="yes" xml:space="preserve">
          <source>Updates a value in a dictionary by calling &lt;code&gt;Fun&lt;/code&gt; on the value to get a new value. An exception is generated if &lt;code&gt;Key&lt;/code&gt; is not present in the dictionary.</source>
          <target state="translated">Обновляет значение в словаре, вызывая &lt;code&gt;Fun&lt;/code&gt; для значения, чтобы получить новое значение. Если &lt;code&gt;Key&lt;/code&gt; отсутствует в словаре, создается исключение .</target>
        </trans-unit>
        <trans-unit id="ab59d74f46080461c39369f0019171f2f23af955" translate="yes" xml:space="preserve">
          <source>Updates a value in a dictionary by calling &lt;code&gt;Fun&lt;/code&gt; on the value to get a new value. If &lt;code&gt;Key&lt;/code&gt; is not present in the dictionary, &lt;code&gt;Initial&lt;/code&gt; is stored as the first value. For example, &lt;code&gt;append/3&lt;/code&gt; can be defined as follows:</source>
          <target state="translated">Обновляет значение в словаре, вызывая &lt;code&gt;Fun&lt;/code&gt; для значения, чтобы получить новое значение. Если &lt;code&gt;Key&lt;/code&gt; отсутствует в словаре, &lt;code&gt;Initial&lt;/code&gt; сохраняется как первое значение. Например, &lt;code&gt;append/3&lt;/code&gt; можно определить следующим образом:</target>
        </trans-unit>
        <trans-unit id="9f6a761f1dc7fcd9496ff0fc00ba409b036ce20c" translate="yes" xml:space="preserve">
          <source>Updates a value in a dictionary by calling &lt;code&gt;Fun&lt;/code&gt; on the value to get a new value. If &lt;code&gt;Key&lt;/code&gt; is not present in the dictionary, &lt;code&gt;Initial&lt;/code&gt; is stored as the first value. For example, &lt;code&gt;append/3&lt;/code&gt; can be defined as:</source>
          <target state="translated">Обновляет значение в словаре, вызывая &lt;code&gt;Fun&lt;/code&gt; для значения, чтобы получить новое значение. Если &lt;code&gt;Key&lt;/code&gt; отсутствует в словаре, &lt;code&gt;Initial&lt;/code&gt; сохраняется как первое значение. Например, &lt;code&gt;append/3&lt;/code&gt; можно определить как:</target>
        </trans-unit>
        <trans-unit id="37c90a4670b3f9486158db598e8de0114e5577be" translate="yes" xml:space="preserve">
          <source>Updates an accumulator by applying &lt;code&gt;Fun&lt;/code&gt; on each collection of annotations of the &lt;code&gt;erl_parse&lt;/code&gt; tree &lt;code&gt;Abstr&lt;/code&gt;. The first call to &lt;code&gt;Fun&lt;/code&gt; has &lt;code&gt;AccIn&lt;/code&gt; as argument, the returned accumulator &lt;code&gt;AccOut&lt;/code&gt; is passed to the next call, and so on. The final value of the accumulator is returned. The &lt;code&gt;erl_parse&lt;/code&gt; tree is traversed in a depth-first, left-to-right fashion.</source>
          <target state="translated">Обновляет аккумулятор, применяя &lt;code&gt;Fun&lt;/code&gt; на каждую коллекции аннотаций в &lt;code&gt;erl_parse&lt;/code&gt; дереве &lt;code&gt;Abstr&lt;/code&gt; . Первый вызов &lt;code&gt;Fun&lt;/code&gt; имеет аргумент &lt;code&gt;AccIn&lt;/code&gt; , возвращенный аккумулятор &lt;code&gt;AccOut&lt;/code&gt; передается следующему вызову и так далее. Возвращается окончательное значение аккумулятора. &lt;code&gt;erl_parse&lt;/code&gt; дерево проходится в глубину первой слева направо моды.</target>
        </trans-unit>
        <trans-unit id="e6ebcf826afc7224f3463dd215eb5352561a6434" translate="yes" xml:space="preserve">
          <source>Updates information about debugged processes. Information about all terminated processes are removed from the window. All Attach Process windows for terminated processes are closed.</source>
          <target state="translated">Обновляет информацию об отлаженных процессах.Информация обо всех завершенных процессах удаляется из окна.Закрыты все окна Attach Process для завершенных процессов.</target>
        </trans-unit>
        <trans-unit id="a4db32f627e995a84c52631b1bbbde821d611764" translate="yes" xml:space="preserve">
          <source>Updates the HMAC represented by &lt;code&gt;Context&lt;/code&gt; using the given &lt;code&gt;Data&lt;/code&gt;. &lt;code&gt;Context&lt;/code&gt; must have been generated using an HMAC init function (such as &lt;code&gt;&lt;a href=&quot;#hmac_init-2&quot;&gt;hmac_init&lt;/a&gt;&lt;/code&gt;). &lt;code&gt;Data&lt;/code&gt; can be any length. &lt;code&gt;NewContext&lt;/code&gt; must be passed into the next call to &lt;code&gt;hmac_update&lt;/code&gt; or to one of the functions &lt;code&gt;&lt;a href=&quot;#hmac_final-1&quot;&gt;hmac_final&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#hmac_final_n-2&quot;&gt;hmac_final_n&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">Обновляет HMAC, представленный &lt;code&gt;Context&lt;/code&gt; с использованием заданных &lt;code&gt;Data&lt;/code&gt; . &lt;code&gt;Context&lt;/code&gt; должен быть сгенерирован с использованием функции инициализации HMAC (например, &lt;code&gt;&lt;a href=&quot;#hmac_init-2&quot;&gt;hmac_init&lt;/a&gt;&lt;/code&gt; ). &lt;code&gt;Data&lt;/code&gt; могут быть любой длины. &lt;code&gt;NewContext&lt;/code&gt; должен быть передан при следующем вызове &lt;code&gt;hmac_update&lt;/code&gt; или одной из функций &lt;code&gt;&lt;a href=&quot;#hmac_final-1&quot;&gt;hmac_final&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;#hmac_final_n-2&quot;&gt;hmac_final_n&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1728dfd48279b9b9b36c71be367adee8270c7c05" translate="yes" xml:space="preserve">
          <source>Updates the MAC represented by &lt;code&gt;State0&lt;/code&gt; using the given &lt;code&gt;Data&lt;/code&gt; which could be of any length.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cc7f14f3a3fed19f2f8c9a020605209d8a12c68" translate="yes" xml:space="preserve">
          <source>Updates the digest represented by &lt;code&gt;Context&lt;/code&gt; using the given &lt;code&gt;Data&lt;/code&gt;. &lt;code&gt;Context&lt;/code&gt; must have been generated using &lt;code&gt;&lt;a href=&quot;#hash_init-1&quot;&gt;hash_init&lt;/a&gt;&lt;/code&gt; or a previous call to this function. &lt;code&gt;Data&lt;/code&gt; can be any length. &lt;code&gt;NewContext&lt;/code&gt; must be passed into the next call to &lt;code&gt;hash_update&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#hash_final-1&quot;&gt;hash_final&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Обновляет дайджест, представленный &lt;code&gt;Context&lt;/code&gt; с использованием заданных &lt;code&gt;Data&lt;/code&gt; . &lt;code&gt;Context&lt;/code&gt; должен быть создан с помощью &lt;code&gt;&lt;a href=&quot;#hash_init-1&quot;&gt;hash_init&lt;/a&gt;&lt;/code&gt; или предыдущего вызова этой функции. &lt;code&gt;Data&lt;/code&gt; могут быть любой длины. &lt;code&gt;NewContext&lt;/code&gt; должен быть передан в следующий вызов &lt;code&gt;hash_update&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;#hash_final-1&quot;&gt;hash_final&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0a37f581698786fafdf7275742d9f7c793868104" translate="yes" xml:space="preserve">
          <source>Updates the hook function field of the prettyprinter context.</source>
          <target state="translated">Обновление поля функции перехвата в контексте красивого принтера.</target>
        </trans-unit>
        <trans-unit id="c2e71d06680882c2ec32b2dc6bea400636a79824" translate="yes" xml:space="preserve">
          <source>Updates the line widh field of the prettyprinter context.</source>
          <target state="translated">Обновление поля вида строк в контексте красивого принтера.</target>
        </trans-unit>
        <trans-unit id="06a0436ed02af4ad242287fe8c27e31aafc0067b" translate="yes" xml:space="preserve">
          <source>Updates the object with key &lt;code&gt;Key&lt;/code&gt; stored in table &lt;code&gt;Name&lt;/code&gt; of type &lt;code&gt;set&lt;/code&gt; by adding &lt;code&gt;Incr&lt;/code&gt; to the element at the &lt;code&gt;Pos&lt;/code&gt;:th position. The new counter value is returned. If no position is specified, the element directly following the key is updated.</source>
          <target state="translated">Обновляет объект с помощью ключа &lt;code&gt;Key&lt;/code&gt; , хранящегося в таблице &lt;code&gt;Name&lt;/code&gt; типа, &lt;code&gt;set&lt;/code&gt; путем добавления &lt;code&gt;Incr&lt;/code&gt; к элементу в позиции &lt;code&gt;Pos&lt;/code&gt; : th. Возвращается новое значение счетчика. Если позиция не указана, обновляется элемент, следующий за ключом.</target>
        </trans-unit>
        <trans-unit id="74b81e579810979a583fac3a15071ea6d7e0648e" translate="yes" xml:space="preserve">
          <source>Updates the operator precedence field of the prettyprinter context. See the &lt;code&gt;erl_parse(3)&lt;/code&gt; module for operator precedences.</source>
          <target state="translated">Обновляет поле приоритета оператора в контексте prettyprinter. См. &lt;code&gt;erl_parse(3)&lt;/code&gt; для получения информации о приоритетах операторов.</target>
        </trans-unit>
        <trans-unit id="63d2d102522483d5460d1744c9d5282ecfc3df2b" translate="yes" xml:space="preserve">
          <source>Updates the paper widh field of the prettyprinter context.</source>
          <target state="translated">Обновляет видо-поле бумаги контекста красивого принтера.</target>
        </trans-unit>
        <trans-unit id="1f9326e8e858c536ca9e794bc54c6e439dd4f44b" translate="yes" xml:space="preserve">
          <source>Updates the user data field of the prettyprinter context.</source>
          <target state="translated">Обновляет поле пользовательских данных контекста красивого принтера.</target>
        </trans-unit>
        <trans-unit id="d4648225b60a7bf7a7074d97ae9b8282d0ba6646" translate="yes" xml:space="preserve">
          <source>Updating Maps</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb57e471df554364292c825fe5e79967d1cd792b" translate="yes" xml:space="preserve">
          <source>Updating a map has a similar syntax as constructing it.</source>
          <target state="translated">Обновление карты имеет такой же синтаксис,как и ее построение.</target>
        </trans-unit>
        <trans-unit id="20eed44fc68b8b204aedfb0f91c533a64f205785" translate="yes" xml:space="preserve">
          <source>Updating a persistent term with the same value as it already has is specially optimized to do nothing quickly; thus, there is no need compare the old and new values and avoid calling &lt;code&gt;&lt;a href=&quot;#put-2&quot;&gt;put/2&lt;/a&gt;&lt;/code&gt; if the values are equal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02d141042860aca10991eb65163181406dcf7137" translate="yes" xml:space="preserve">
          <source>Updating or deleting a persistent term will trigger a global GC if the term does not fit in one machine word. Processes will be scheduled as usual, but all processes will be made runnable at once, which will make the system less responsive until all process have run and scanned their heaps for the deleted terms. One way to minimize the effects on responsiveness could be to minimize the number of processes on the node before updating or deleting a persistent term. It would also be wise to avoid updating terms when the system is at peak load.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52b5471f4080ddbb8029246652a7263fae21041d" translate="yes" xml:space="preserve">
          <source>Upgrade Example - TLS only</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4ccacf954181a7d1504665a82641050052eb900" translate="yes" xml:space="preserve">
          <source>Upgrade the connection associated with &lt;code&gt;Handle&lt;/code&gt; to a tls connection if possible.</source>
          <target state="translated">Если возможно, обновите соединение, связанное с &lt;code&gt;Handle&lt;/code&gt; , до tls.</target>
        </trans-unit>
        <trans-unit id="db0184af500cc1d274a7e5600d1d6a2de2501102" translate="yes" xml:space="preserve">
          <source>Upgrades a &lt;code&gt;gen_tcp&lt;/code&gt;, or equivalent, connected socket to a TLS socket, that is, performs the client-side TLS handshake.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca4651bcfd7cc66e9b643622e9b6fa5cf9be97fb" translate="yes" xml:space="preserve">
          <source>Upgrades a &lt;code&gt;gen_tcp&lt;/code&gt;, or equivalent, connected socket to an TLS socket, that is, performs the client-side TLS handshake.</source>
          <target state="translated">Обновляет подключенный сокет &lt;code&gt;gen_tcp&lt;/code&gt; или эквивалентный ему до TLS-сокета, то есть выполняет подтверждение TLS на стороне клиента.</target>
        </trans-unit>
        <trans-unit id="0885a1400bd730b033aa9a97c94e31cdcc2976c9" translate="yes" xml:space="preserve">
          <source>Upgrades an application &lt;code&gt;App&lt;/code&gt; from the current version to a new version located in &lt;code&gt;Dir&lt;/code&gt; according to the &lt;code&gt;.appup&lt;/code&gt; file.</source>
          <target state="translated">Обновляет приложение &lt;code&gt;App&lt;/code&gt; с текущей версии до новой версии, расположенной в &lt;code&gt;.appup&lt;/code&gt; &lt;code&gt;Dir&lt;/code&gt; ,в соответствии с файлом .appup .</target>
        </trans-unit>
        <trans-unit id="fe465284017475712d39dd7e9e97f804a2375abf" translate="yes" xml:space="preserve">
          <source>Upon failure to reopen the log, the disk log process terminates with the EXIT message &lt;code&gt;{{failed,Error},[{disk_log,Fun,Arity}]}&lt;/code&gt;. Other processes having requests queued receive the message &lt;code&gt;{disk_log, Node, {error, disk_log_stopped}}&lt;/code&gt;.</source>
          <target state="translated">При неудачном открытии журнала процесс журнала диска завершается с сообщением EXIT &lt;code&gt;{{failed,Error},[{disk_log,Fun,Arity}]}&lt;/code&gt; . Другие процессы, у которых есть запросы в очереди, получают сообщение &lt;code&gt;{disk_log, Node, {error, disk_log_stopped}}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="313cdf1a747cf13f7fb3ba0b75e218a96c2914cd" translate="yes" xml:space="preserve">
          <source>Uppercase letter</source>
          <target state="translated">прописная буква</target>
        </trans-unit>
        <trans-unit id="655dc371ef84593d2a9260f8648168e35e59595a" translate="yes" xml:space="preserve">
          <source>Uppercase letters</source>
          <target state="translated">заглавные буквы</target>
        </trans-unit>
        <trans-unit id="42df97f2f6a736b6736486799c452f7ab2ae5c74" translate="yes" xml:space="preserve">
          <source>Uppercase letters signify real identifiers and lowercase letters signify fake identifiers only used for description of the topology. Identifiers passed as real identifiers can be used by the runtime system when trying to access specific hardware; if they are incorrect the behavior is undefined. Faked logical CPU identifiers are not accepted, as there is no point in defining the CPU topology without real logical CPU identifiers. Thread, core, processor, and node identifiers can be omitted. If omitted, the thread ID defaults to &lt;code&gt;t0&lt;/code&gt;, the core ID defaults to &lt;code&gt;c0&lt;/code&gt;, the processor ID defaults to &lt;code&gt;p0&lt;/code&gt;, and the node ID is left undefined. Either each logical processor must belong to only one NUMA node, or no logical processors must belong to any NUMA nodes.</source>
          <target state="translated">Прописные буквы означают реальные идентификаторы, а строчные буквы означают поддельные идентификаторы, используемые только для описания топологии. Идентификаторы, переданные как реальные идентификаторы, могут использоваться системой времени выполнения при попытке доступа к определенному оборудованию; если они неверны, поведение не определено. Поддельные логические идентификаторы ЦП не принимаются, поскольку нет смысла определять топологию ЦП без реальных логических идентификаторов ЦП. Идентификаторы потока, ядра, процессора и узла можно не указывать. Если он опущен, идентификатор потока по умолчанию &lt;code&gt;t0&lt;/code&gt; , идентификатор ядра по умолчанию - &lt;code&gt;c0&lt;/code&gt; , идентификатор процессора по умолчанию - &lt;code&gt;p0&lt;/code&gt; , а идентификатор узла остается неопределенным. Либо каждый логический процессор должен принадлежать только одному узлу NUMA, либо никакие логические процессоры не должны принадлежать каким-либо узлам NUMA.</target>
        </trans-unit>
        <trans-unit id="19370c86dcca239b2f891f36eb2a0c4f475f930f" translate="yes" xml:space="preserve">
          <source>Uri data types</source>
          <target state="translated">Uri-типы данных</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">Usage</target>
        </trans-unit>
        <trans-unit id="fec43ce445f974147bd0eb223a50147e7fb7202d" translate="yes" xml:space="preserve">
          <source>Usage example:</source>
          <target state="translated">Пример использования:</target>
        </trans-unit>
        <trans-unit id="2c9af3bf645c9bf6cb6b56eedb88807aad3f66ae" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&lt;a href=&quot;#change_key-2&quot;&gt;change_key/2&lt;/a&gt;&lt;/code&gt; with an absolute path after &lt;code&gt;&lt;a href=&quot;#open-1&quot;&gt;open&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Используйте &lt;code&gt;&lt;a href=&quot;#change_key-2&quot;&gt;change_key/2&lt;/a&gt;&lt;/code&gt; с абсолютным путем после &lt;code&gt;&lt;a href=&quot;#open-1&quot;&gt;open&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c47962432a46afd10354bf7faf78b77ebd176482" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&lt;a href=&quot;#enif_monitor_process&quot;&gt;enif_monitor_process&lt;/a&gt;&lt;/code&gt; together with &lt;code&gt;enif_select&lt;/code&gt; to detect failing Erlang processes and prevent them from causing permanent leakage of resources and their contained OS event objects.</source>
          <target state="translated">Используйте &lt;code&gt;&lt;a href=&quot;#enif_monitor_process&quot;&gt;enif_monitor_process&lt;/a&gt;&lt;/code&gt; вместе с &lt;code&gt;enif_select&lt;/code&gt; для обнаружения сбойных процессов Erlang и предотвращения их постоянной утечки ресурсов и содержащихся в них объектов событий ОС.</target>
        </trans-unit>
        <trans-unit id="44e7e015a8657a665a01a0520fdb99490efbc8b2" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&lt;a href=&quot;#safe_fixtable-2&quot;&gt;safe_fixtable/2&lt;/a&gt;&lt;/code&gt; to guarantee &lt;code&gt;&lt;a href=&quot;#traversal&quot;&gt;safe traversal&lt;/a&gt;&lt;/code&gt; for subsequent calls to &lt;code&gt;&lt;a href=&quot;#match-1&quot;&gt;match/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7da24533e796ccef89e6be1ffa753ac897a16df3" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&lt;a href=&quot;#safe_fixtable-2&quot;&gt;safe_fixtable/2&lt;/a&gt;&lt;/code&gt; to guarantee &lt;code&gt;&lt;a href=&quot;#traversal&quot;&gt;safe traversal&lt;/a&gt;&lt;/code&gt; for subsequent calls to &lt;code&gt;&lt;a href=&quot;#match_object-1&quot;&gt; match_object/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fc01bc65b8bccb967f709eb00a1f11cb2c754fc" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&lt;a href=&quot;#safe_fixtable-2&quot;&gt;safe_fixtable/2&lt;/a&gt;&lt;/code&gt; to guarantee &lt;code&gt;&lt;a href=&quot;#traversal&quot;&gt;safe traversal&lt;/a&gt;&lt;/code&gt; for subsequent calls to &lt;code&gt;&lt;a href=&quot;#select-1&quot;&gt;select/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac19f9c55f3cb262bc1bcb3f39438151f391e8ca" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&lt;a href=&quot;#shutdown-2&quot;&gt; gen_tcp:shutdown(Sock, write)&lt;/a&gt;&lt;/code&gt; to signal that no more data is to be sent and wait for the read side of the socket to be closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f81221a29d13782207a78cbfa816c0cbf3c464d7" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&lt;a href=&quot;#shutdown-2&quot;&gt;gen_tcp:shutdown(Sock, write)&lt;/a&gt;&lt;/code&gt; to signal that no more data is to be sent and wait for the read side of the socket to be closed.</source>
          <target state="translated">Используйте &lt;code&gt;&lt;a href=&quot;#shutdown-2&quot;&gt;gen_tcp:shutdown(Sock, write)&lt;/a&gt;&lt;/code&gt; чтобы сигнализировать о том, что больше не нужно отправлять данные, и дождитесь закрытия стороны чтения сокета.</target>
        </trans-unit>
        <trans-unit id="7ead82a2bde7adf5d2bb9488a1ed038033681dd8" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&lt;a href=&quot;erl_ext_dist#fragments&quot;&gt;fragmented&lt;/a&gt;&lt;/code&gt; distribution messages to send large messages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88a6e8689fc8004e74f39f7b9aff0d955c4830e5" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&lt;a href=&quot;erlang#system_time-1&quot;&gt; erlang:system_time/1&lt;/a&gt;&lt;/code&gt; to retrieve the current Erlang system time on the &lt;code&gt;&lt;a href=&quot;erlang#type_time_unit&quot;&gt;time unit&lt;/a&gt;&lt;/code&gt; of your choice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71bd29e8e106825432b11d0f4aa2b931f6f8bf79" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&lt;a href=&quot;erlang#system_time-1&quot;&gt;erlang:system_time/1&lt;/a&gt;&lt;/code&gt; to retrieve the current Erlang system time on the &lt;code&gt;&lt;a href=&quot;erlang#type_time_unit&quot;&gt;time unit&lt;/a&gt;&lt;/code&gt; of your choice.</source>
          <target state="translated">Используйте &lt;code&gt;&lt;a href=&quot;erlang#system_time-1&quot;&gt;erlang:system_time/1&lt;/a&gt;&lt;/code&gt; , чтобы получить текущее системное время Erlang в выбранной вами &lt;code&gt;&lt;a href=&quot;erlang#type_time_unit&quot;&gt;time unit&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0c6d38128136d372de87b2cca11fa0fc14d3b6dd" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&lt;a href=&quot;net_adm#ping-1&quot;&gt;net_adm:ping(Node)&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;net_adm#ping-1&quot;&gt;net_adm:ping(Node)&lt;/a&gt;&lt;/code&gt; используйте net_adm: ping (Node) .</target>
        </trans-unit>
        <trans-unit id="611de99bd7fd476bf937c72c0e0fd5671d5f5338" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&lt;a href=&quot;ttb#list_history-0&quot;&gt;ttb:list_history/0&lt;/a&gt;&lt;/code&gt; to see the content of the history buffer and &lt;code&gt;&lt;a href=&quot;ttb#run_history-1&quot;&gt;ttb:run_history/1&lt;/a&gt;&lt;/code&gt; to re-execute one of the entries.</source>
          <target state="translated">Используйте &lt;code&gt;&lt;a href=&quot;ttb#list_history-0&quot;&gt;ttb:list_history/0&lt;/a&gt;&lt;/code&gt; , чтобы увидеть содержимое буфера истории, и &lt;code&gt;&lt;a href=&quot;ttb#run_history-1&quot;&gt;ttb:run_history/1&lt;/a&gt;&lt;/code&gt; , чтобы повторно выполнить одну из записей.</target>
        </trans-unit>
        <trans-unit id="a08416b12ce433a16c45d0b1b7b6dcc6f100d529" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;ERL_NIF_SELECT_STOP&lt;/code&gt; as &lt;code&gt;mode&lt;/code&gt; in order to safely close an event object that has been passed to &lt;code&gt;enif_select&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;#ErlNifResourceStop&quot;&gt;stop&lt;/a&gt;&lt;/code&gt; callback of the resource &lt;code&gt;obj&lt;/code&gt; will be called when it is safe to close the event object. This safe way of closing event objects must be used even if all notifications have been received (or cancelled) and no further calls to &lt;code&gt;enif_select&lt;/code&gt; have been made. &lt;code&gt;ERL_NIF_SELECT_STOP&lt;/code&gt; will first cancel any selected events before it calls or schedules the &lt;code&gt;stop&lt;/code&gt; callback. Arguments &lt;code&gt;pid&lt;/code&gt; and &lt;code&gt;ref&lt;/code&gt; are ignored when &lt;code&gt;ERL_NIF_SELECT_STOP&lt;/code&gt; is specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03a0a6dcdb4bb774d1d742179139e2e450523f30" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;ERL_NIF_SELECT_STOP&lt;/code&gt; as &lt;code&gt;mode&lt;/code&gt; in order to safely close an event object that has been passed to &lt;code&gt;enif_select&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;#ErlNifResourceStop&quot;&gt;stop&lt;/a&gt;&lt;/code&gt; callback of the resource &lt;code&gt;obj&lt;/code&gt; will be called when it is safe to close the event object. This safe way of closing event objects must be used even if all notifications have been received and no further calls to &lt;code&gt;enif_select&lt;/code&gt; have been made.</source>
          <target state="translated">Используйте &lt;code&gt;ERL_NIF_SELECT_STOP&lt;/code&gt; в качестве &lt;code&gt;mode&lt;/code&gt; , чтобы безопасно закрыть объект события, переданный в &lt;code&gt;enif_select&lt;/code&gt; . &lt;code&gt;&lt;a href=&quot;#ErlNifResourceStop&quot;&gt;stop&lt;/a&gt;&lt;/code&gt; обратного вызова ресурса &lt;code&gt;obj&lt;/code&gt; будет вызываться , когда это безопасно , чтобы закрыть объект события. Этот безопасный способ закрытия объектов событий должен использоваться, даже если все уведомления были получены и никаких дальнейших вызовов &lt;code&gt;enif_select&lt;/code&gt; не производилось.</target>
        </trans-unit>
        <trans-unit id="4dbf19e8e181869d7824e230cc259b4296e049dd" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;M-x compile&lt;/code&gt; to compile an MIB from inside Emacs, and enter:</source>
          <target state="translated">Используйте &lt;code&gt;M-x compile&lt;/code&gt; для компиляции MIB из Emacs и введите:</target>
        </trans-unit>
        <trans-unit id="43487582b9c31bb61fd048104c15adf5df0fcbcf" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;cover:is_compiled/1&lt;/code&gt; or &lt;code&gt;code:which/1&lt;/code&gt; to see if a module is Cover compiled (and still loaded) or not.</source>
          <target state="translated">Используйте &lt;code&gt;cover:is_compiled/1&lt;/code&gt; или &lt;code&gt;code:which/1&lt;/code&gt; , чтобы узнать, скомпилирован ли модуль Cover (и все еще загружен) или нет.</target>
        </trans-unit>
        <trans-unit id="7f85d8a08505e2b0a869a54c5dd45740db5b3406" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;cover:start/1&lt;/code&gt; and &lt;code&gt;cover:stop/1&lt;/code&gt; to add or remove nodes. The same Cover compiled code will be loaded on each node, and analysis will collect and sum up coverage data results from all nodes.</source>
          <target state="translated">Используйте &lt;code&gt;cover:start/1&lt;/code&gt; и &lt;code&gt;cover:stop/1&lt;/code&gt; для добавления или удаления узлов. Один и тот же скомпилированный код Cover будет загружен на каждый узел, и анализ будет собирать и суммировать результаты данных покрытия со всех узлов.</target>
        </trans-unit>
        <trans-unit id="5b51e4203eb742f5eb4fc26e38e7eb765f543077" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;driver_alloc_binary()&lt;/code&gt; to allocate a binary.</source>
          <target state="translated">Используйте &lt;code&gt;driver_alloc_binary()&lt;/code&gt; для выделения двоичного файла .</target>
        </trans-unit>
        <trans-unit id="c95131c00c47173f141a21936f6eef73f82cca9f" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;erlang:get_cookie()&lt;/code&gt; in ERTS instead.</source>
          <target state="translated">&lt;code&gt;erlang:get_cookie()&lt;/code&gt; используйте erlang: get_cookie () в ERTS.</target>
        </trans-unit>
        <trans-unit id="7c041275bff1db161bb6bcf06b8c664a175f0746" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;erlang:now/0&lt;/code&gt; to retrieve the current Erlang system time.</source>
          <target state="translated">Используйте &lt;code&gt;erlang:now/0&lt;/code&gt; , чтобы получить текущее системное время Erlang.</target>
        </trans-unit>
        <trans-unit id="70734f79b3e2d0baca01b45e43fb19b230f1b8af" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;erlang:set_cookie(node(), Cookie) in ERTS&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de069253a09bf6a9eebbd010c198840f5e87a703" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;erlang:set_cookie(node(),Cookie)in ERTS&lt;/code&gt; instead.</source>
          <target state="translated">Использование &lt;code&gt;erlang:set_cookie(node(),Cookie)in ERTS&lt;/code&gt; вместо этого.</target>
        </trans-unit>
        <trans-unit id="4290f2a7a214d1f9ba5e3a266d300f53024ef971" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;hipe:help_options/0&lt;/code&gt; to print out the available options.</source>
          <target state="translated">Используйте &lt;code&gt;hipe:help_options/0&lt;/code&gt; , чтобы распечатать доступные параметры.</target>
        </trans-unit>
        <trans-unit id="ae0a3e8fb6ea6a46c1431393956ad0cdb131d016" translate="yes" xml:space="preserve">
          <source>Use Compiler option &lt;code&gt;{debug_info_key,Key}&lt;/code&gt;, see &lt;code&gt;compile(3)&lt;/code&gt; and function &lt;code&gt;&lt;a href=&quot;#crypto_key_fun-1&quot;&gt;crypto_key_fun/1&lt;/a&gt;&lt;/code&gt; to register a fun that returns the key whenever &lt;code&gt;beam_lib&lt;/code&gt; must decrypt the debug information.</source>
          <target state="translated">Используйте параметр компилятора &lt;code&gt;{debug_info_key,Key}&lt;/code&gt; , см. Compile &lt;code&gt;compile(3)&lt;/code&gt; и функцию &lt;code&gt;&lt;a href=&quot;#crypto_key_fun-1&quot;&gt;crypto_key_fun/1&lt;/a&gt;&lt;/code&gt; , чтобы зарегистрировать забаву, которая возвращает ключ всякий раз, когда &lt;code&gt;beam_lib&lt;/code&gt; должен расшифровать отладочную информацию.</target>
        </trans-unit>
        <trans-unit id="cf76996b770b568aba2d669a4a4c375802561542" translate="yes" xml:space="preserve">
          <source>Use Dialyzer from the command line to detect defects in the specified files or directories containing &lt;code&gt;.erl&lt;/code&gt; or &lt;code&gt;.beam&lt;/code&gt; files, depending on the type of the analysis.</source>
          <target state="translated">Используйте Dialyzer из командной строки для обнаружения дефектов в указанных файлах или каталогах, содержащих &lt;code&gt;.erl&lt;/code&gt; или &lt;code&gt;.beam&lt;/code&gt; , в зависимости от типа анализа.</target>
        </trans-unit>
        <trans-unit id="52ecd59359aa11823ae3489c4b92ca323d2f8686" translate="yes" xml:space="preserve">
          <source>Use Mnesia with the following types of applications:</source>
          <target state="translated">Используйте Mnesia со следующими типами приложений:</target>
        </trans-unit>
        <trans-unit id="cd0851048c67fb91d296c17c79d984235168aa8a" translate="yes" xml:space="preserve">
          <source>Use STDLIB application variable &lt;code&gt;restricted_shell&lt;/code&gt; and specify, as its value, the name of the callback module. Example (with callback functions implemented in &lt;code&gt;callback_mod.erl&lt;/code&gt;): &lt;code&gt;$ erl -stdlib restricted_shell callback_mod&lt;/code&gt;.</source>
          <target state="translated">Используйте переменную приложения STDLIB &lt;code&gt;restricted_shell&lt;/code&gt; и укажите в качестве ее значения имя модуля обратного вызова. Пример (с функциями обратного вызова, реализованными в &lt;code&gt;callback_mod.erl&lt;/code&gt; ): &lt;code&gt;$ erl -stdlib restricted_shell callback_mod&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a9de9466c5fd84c1497ee031330a8bf3182295b3" translate="yes" xml:space="preserve">
          <source>Use a parameterized query to insert many rows in one go.</source>
          <target state="translated">Используйте параметризованный запрос для вставки многих строк за один заход.</target>
        </trans-unit>
        <trans-unit id="4246bdbd0514a46c24c66d6a824bf38823f49b83" translate="yes" xml:space="preserve">
          <source>Use a specified algorithm with a constant seed:</source>
          <target state="translated">Используйте заданный алгоритм с постоянным посевным материалом:</target>
        </trans-unit>
        <trans-unit id="98d7bed7136a80ee2a1f391e37af7b4e25791949" translate="yes" xml:space="preserve">
          <source>Use a specified algorithm:</source>
          <target state="translated">Используйте указанный алгоритм:</target>
        </trans-unit>
        <trans-unit id="0ef43eef2287dfb39d5045b73777b94383dd1809" translate="yes" xml:space="preserve">
          <source>Use active mode only if your high-level protocol provides its own flow control (for example, acknowledging received messages) or the amount of data exchanged is small. &lt;code&gt;{active, false}&lt;/code&gt; mode, use of the &lt;code&gt;{active, once}&lt;/code&gt; mode, or &lt;code&gt;{active, N}&lt;/code&gt; mode with values of &lt;code&gt;N&lt;/code&gt; appropriate for the application provides flow control. The other side cannot send faster than the receiver can read.</source>
          <target state="translated">Используйте активный режим только в том случае, если ваш протокол высокого уровня обеспечивает собственное управление потоком (например, подтверждение полученных сообщений) или объем передаваемых данных невелик. Режим &lt;code&gt;{active, false}&lt;/code&gt; , использование режима &lt;code&gt;{active, once}&lt;/code&gt; или &lt;code&gt;{active, N}&lt;/code&gt; со значениями &lt;code&gt;N&lt;/code&gt; , подходящими для приложения, обеспечивает управление потоком. Другая сторона не может отправить быстрее, чем может прочитать получатель.</target>
        </trans-unit>
        <trans-unit id="0cb9f5afdf0431967f44f8bc5907c7bc9106a55e" translate="yes" xml:space="preserve">
          <source>Use batch file &lt;code&gt;etop.bat&lt;/code&gt;, for example, &lt;code&gt;etop -node tiger@durin&lt;/code&gt;.</source>
          <target state="translated">Используйте командный файл &lt;code&gt;etop.bat&lt;/code&gt; , например, &lt;code&gt;etop -node tiger@durin&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="804cbb37615425c1f58bef26b23df4ccbb998e2d" translate="yes" xml:space="preserve">
          <source>Use bitwise AND to test for specific bits in the return value. New significant bits may be added in future releases to give more detailed information for both failed and successful calls. Do NOT use equality tests like &lt;code&gt;==&lt;/code&gt;, as that may cause your application to stop working.</source>
          <target state="translated">Используйте побитовое И для проверки наличия определенных битов в возвращаемом значении. В будущих версиях могут быть добавлены новые значащие биты для предоставления более подробной информации как для неудачных, так и для успешных вызовов. НЕ используйте тесты на равенство, такие как &lt;code&gt;==&lt;/code&gt; , так как это может привести к прекращению работы вашего приложения.</target>
        </trans-unit>
        <trans-unit id="28d05d6e3c0c6496475b27e170aa3c9890b934a6" translate="yes" xml:space="preserve">
          <source>Use function &lt;code&gt;&lt;a href=&quot;mnesia#table_info-2&quot;&gt;mnesia:table_info(Tab, wild_pattern)&lt;/a&gt;&lt;/code&gt; to obtain a basic pattern, which matches all records in a table, or use the default value in record creation. Do not make the pattern hard-coded, as this makes the code more vulnerable to future changes of the record definition.</source>
          <target state="translated">Используйте функцию &lt;code&gt;&lt;a href=&quot;mnesia#table_info-2&quot;&gt;mnesia:table_info(Tab, wild_pattern)&lt;/a&gt;&lt;/code&gt; чтобы получить базовый шаблон, который соответствует всем записям в таблице, или используйте значение по умолчанию при создании записи. Не делайте шаблон жестко запрограммированным, так как это делает код более уязвимым для будущих изменений определения записи.</target>
        </trans-unit>
        <trans-unit id="36fef5f536ab55188b5441adeba6150367c3ff02" translate="yes" xml:space="preserve">
          <source>Use function &lt;code&gt;&lt;a href=&quot;rb#list-0&quot;&gt;rb:list()&lt;/a&gt;&lt;/code&gt; to list all loaded reports:</source>
          <target state="translated">Используйте функцию &lt;code&gt;&lt;a href=&quot;rb#list-0&quot;&gt;rb:list()&lt;/a&gt;&lt;/code&gt; чтобы просмотреть все загруженные отчеты:</target>
        </trans-unit>
        <trans-unit id="b28b25ff39058f6138bbe1ff3ebce8f3b6ccb94a" translate="yes" xml:space="preserve">
          <source>Use function &lt;code&gt;&lt;a href=&quot;rb#show-1&quot;&gt;rb:show(Number)&lt;/a&gt;&lt;/code&gt; to show details of a specific report:</source>
          <target state="translated">Используйте функцию &lt;code&gt;&lt;a href=&quot;rb#show-1&quot;&gt;rb:show(Number)&lt;/a&gt;&lt;/code&gt; чтобы отобразить детали конкретного отчета:</target>
        </trans-unit>
        <trans-unit id="a0eac0e99e0695efffadbf6a76c731707faeeeea" translate="yes" xml:space="preserve">
          <source>Use function &lt;code&gt;&lt;a href=&quot;rb#stop-0&quot;&gt;rb:stop()&lt;/a&gt;&lt;/code&gt; to stop the &lt;code&gt;rb_server&lt;/code&gt;:</source>
          <target state="translated">Используйте функцию &lt;code&gt;&lt;a href=&quot;rb#stop-0&quot;&gt;rb:stop()&lt;/a&gt;&lt;/code&gt; чтобы остановить &lt;code&gt;rb_server&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="012887c588a915c59771e087bcd639512c6a8489" translate="yes" xml:space="preserve">
          <source>Use function &lt;code&gt;dist_util:strict_order_flags/0&lt;/code&gt; to get all flags for features that require strict order delivery.</source>
          <target state="translated">Используйте функцию &lt;code&gt;dist_util:strict_order_flags/0&lt;/code&gt; , чтобы получить все флаги для функций, которые требуют доставки в строгом порядке.</target>
        </trans-unit>
        <trans-unit id="7f83ae95c5e5857514f24ca4885f3294c1f168dd" translate="yes" xml:space="preserve">
          <source>Use its graphical interface to investigate the state of the current test case.</source>
          <target state="translated">Используйте его графический интерфейс для исследования состояния текущего тестового случая.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
