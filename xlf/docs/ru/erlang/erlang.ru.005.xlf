<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="erlang">
    <body>
      <group id="erlang">
        <trans-unit id="51e80ce3f022ac7ddd37c33041f888f7a50e185f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;key&lt;/code&gt; is the name of the object to look up.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; - это имя объекта для поиска.</target>
        </trans-unit>
        <trans-unit id="66ac280c75c00617aac9e9816ad94d4f5a24d431" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;key&lt;/code&gt; is the name of the object to mark.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; - это имя объекта, который нужно отметить.</target>
        </trans-unit>
        <trans-unit id="726bf6575c9ae5d90f62fcec7dc7845829be36b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;key&lt;/code&gt; is the object name.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; - это имя объекта.</target>
        </trans-unit>
        <trans-unit id="76519f7a0036105d1631983a266c6debeb747f04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;key&lt;/code&gt; is the object to remove.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; - это объект, который нужно удалить.</target>
        </trans-unit>
        <trans-unit id="e8cd1655c5d738878c7393018e2810925863b821" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;keycheck(KeyPos, FileName)&lt;/code&gt; is equivalent to &lt;code&gt;keycheck(KeyPos, [FileName], [])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;keycheck(KeyPos, FileName)&lt;/code&gt; эквивалентен &lt;code&gt;keycheck(KeyPos, [FileName], [])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b153c6268ac50c18ffa73eb104aea23685d06fcb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;keymerge(KeyPos, FileNames, Output)&lt;/code&gt; is equivalent to &lt;code&gt;keymerge(KeyPos, FileNames, Output, [])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;keymerge(KeyPos, FileNames, Output)&lt;/code&gt; эквивалентно &lt;code&gt;keymerge(KeyPos, FileNames, Output, [])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="83f036648bec0822f57409f769b8c88456b350cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;keysort(KeyPos, QH1)&lt;/code&gt; is equivalent to &lt;code&gt;keysort(KeyPos, QH1, [])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;keysort(KeyPos, QH1)&lt;/code&gt; эквивалентна &lt;code&gt;keysort(KeyPos, QH1, [])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="77feb0f99a79d08708c49d907392d66a805a7e24" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;keysort(N, FileName)&lt;/code&gt; is equivalent to &lt;code&gt;keysort(N, [FileName], FileName)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;keysort(N, FileName)&lt;/code&gt; эквивалентен &lt;code&gt;keysort(N, [FileName], FileName)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b8625b8ba314e33b76213d1ccfea99983f2ec845" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;keysort(N, Input, Output)&lt;/code&gt; is equivalent to &lt;code&gt;keysort(N, Input, Output, [])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;keysort(N, Input, Output)&lt;/code&gt; эквивалентен &lt;code&gt;keysort(N, Input, Output, [])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0f07ab05f9a848556d1aad520ac884d2eed8199a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;kill_after/1&lt;/code&gt; is the same as &lt;code&gt;exit_after(Time, self(), kill)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;kill_after/1&lt;/code&gt; совпадает с &lt;code&gt;exit_after(Time, self(), kill)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="72e34eb6858bc7ffa3f15fb1b75c7afcc44387d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;kill_after/2&lt;/code&gt; is the same as &lt;code&gt;exit_after(Time, Pid, kill)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;kill_after/2&lt;/code&gt; совпадает с &lt;code&gt;exit_after(Time, Pid, kill)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="91e9db6ac63dd2f97d0bf7188e8fe47bd6f8a04f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;kilo_byte/1&lt;/code&gt; creates a deep list. If &lt;code&gt;list_to_binary/1&lt;/code&gt; is called, the deep list can be converted to a binary of 1024 bytes:</source>
          <target state="translated">&lt;code&gt;kilo_byte/1&lt;/code&gt; создает глубокий список. Если &lt;code&gt;list_to_binary/1&lt;/code&gt; , глубокий список может быть преобразован в двоичный файл размером 1024 байта:</target>
        </trans-unit>
        <trans-unit id="4b3d2622b5b29785f605dcc3f054e23e1d7bd95d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;l&lt;/code&gt; - Floating point register number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8495a1b0e5b472664b80d02a0f2270674ec85e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;l&lt;/code&gt; - Floating point register number. (Can be packed with other operands.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24dec384bacc51c34304958e9c5ab406404ef7c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;l&lt;/code&gt; - Floating point register number. The default value is 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f538b0c5d5f89b037756df3ff6ce4f215129573b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lclose(Log)&lt;/code&gt; is equivalent to &lt;code&gt;lclose(Log,&amp;nbsp;node())&lt;/code&gt;. See also &lt;code&gt;&lt;a href=&quot;#close_1&quot;&gt;close/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;lclose(Log)&lt;/code&gt; эквивалентно &lt;code&gt;lclose(Log,&amp;nbsp;node())&lt;/code&gt; . См. Также &lt;code&gt;&lt;a href=&quot;#close_1&quot;&gt;close/1&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a67b1c8d7dbf4d841c943dc2946b4f7a2cdfea71" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lclose/1&lt;/code&gt; closes a local log or an individual distributed log on the current node.</source>
          <target state="translated">&lt;code&gt;lclose/1&lt;/code&gt; закрывает локальный журнал или отдельный распределенный журнал на текущем узле.</target>
        </trans-unit>
        <trans-unit id="9b103b7c84a1c1813d67554045b1245a8aec0af6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lclose/2&lt;/code&gt; closes an individual distributed log on the specified node if the node is not the current one.</source>
          <target state="translated">&lt;code&gt;lclose/2&lt;/code&gt; закрывает отдельный распределенный журнал на указанном узле, если узел не является текущим.</target>
        </trans-unit>
        <trans-unit id="fb237ae7bc4ddc5bd78c0bc0383db41484ff959d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lcnt&lt;/code&gt; is used to find contention points in the Erlang Run-Time System's internal locking mechanisms. It is useful when looking for bottlenecks in interaction between process, port, ets tables and other entities that can be run in parallel.</source>
          <target state="translated">&lt;code&gt;lcnt&lt;/code&gt; используется для поиска конфликтных точек во внутренних механизмах блокировки Erlang Run-Time System. Это полезно при поиске узких мест во взаимодействии между процессами, портами, таблицами ets и другими объектами, которые могут выполняться параллельно.</target>
        </trans-unit>
        <trans-unit id="331dee2c2ee873ecad7db7a741ab79842dccabfa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lcnt&lt;/code&gt; is used to profile interactions inbetween entities that run in parallel. For example if you have a process that all other processes in the system needs to interact with (maybe it has some global configuration), then &lt;code&gt;lcnt&lt;/code&gt; can be used to figure out if the interaction with that process is a problem.</source>
          <target state="translated">&lt;code&gt;lcnt&lt;/code&gt; используется для профилирования взаимодействий между сущностями, которые работают параллельно. Например, если у вас есть процесс, с которым должны взаимодействовать все другие процессы в системе (возможно, он имеет некоторую глобальную конфигурацию), то &lt;code&gt;lcnt&lt;/code&gt; можно использовать, чтобы выяснить, является ли взаимодействие с этим процессом проблемой.</target>
        </trans-unit>
        <trans-unit id="25ce4f2b1f1e06d9949ea3fe11c52d35da9121ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;len&lt;/code&gt; is the length of &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;len&lt;/code&gt; - длина &lt;code&gt;string&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="de4624d2d9acec6c37f781ba7bd5df326bc8a4a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;len&lt;/code&gt; is the length of the message in bytes.</source>
          <target state="translated">&lt;code&gt;len&lt;/code&gt; - длина сообщения в байтах.</target>
        </trans-unit>
        <trans-unit id="98f88a9115e57d8f3563b9d731c267d124cd7da9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;length : integer&lt;/code&gt; :: Async queue length. Ex. &lt;code&gt;-1&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;length : integer&lt;/code&gt; :: Длина асинхронной очереди. Ex. &lt;code&gt;-1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="afc5c6080141465fcafeeef615a30ef4d6eed1a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;length : integer&lt;/code&gt; :: Async queue length. Ex. &lt;code&gt;0&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;length : integer&lt;/code&gt; :: Длина асинхронной очереди. Ex. &lt;code&gt;0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="031b6f26da3f37178c8c4740ef267aec1a691654" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lib&lt;/code&gt; - Application directories</source>
          <target state="translated">&lt;code&gt;lib&lt;/code&gt; - каталоги приложений</target>
        </trans-unit>
        <trans-unit id="2a4f8d53fb0ae82e919ce51996fe4ba629c04004" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;library_path&lt;/code&gt;, the &lt;code&gt;&lt;a href=&quot;#library_path&quot;&gt;library path&lt;/a&gt;&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;library_path&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#library_path&quot;&gt;library path&lt;/a&gt;&lt;/code&gt; к библиотеке ;</target>
        </trans-unit>
        <trans-unit id="eaef050de46766049525e30b626f851658013532" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;line&lt;/code&gt; - Line mode, a packet is a line-terminated with newline, lines longer than the receive buffer are truncated</source>
          <target state="translated">&lt;code&gt;line&lt;/code&gt; - строковый режим, пакет заканчивается строкой новой строкой, строки длиннее принимающего буфера обрезаются</target>
        </trans-unit>
        <trans-unit id="9790f41088482266e752413781e0ffe00199475f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;list()&lt;/code&gt; - The one given as argument to function &lt;code&gt;subsystem_spec/1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;list()&lt;/code&gt; - тот, который указан в качестве аргумента функции &lt;code&gt;subsystem_spec/1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8a7718bab464f8ceacbe2b50a1165970a64023b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;list&lt;/code&gt; is an Erlang term containing a list.</source>
          <target state="translated">&lt;code&gt;list&lt;/code&gt; - это термин Erlang, содержащий список.</target>
        </trans-unit>
        <trans-unit id="726a4da1d64ef4b3b69b2ea4714bcdd39c26c4b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;list&lt;/code&gt; is an Erlang term containing a proper list. In a proper list, all tails except the last point to another list cell, and the last tail points to an empty list.</source>
          <target state="translated">&lt;code&gt;list&lt;/code&gt; - это термин Erlang, содержащий правильный список. В правильном списке все хвосты, кроме последней, указывают на другую ячейку списка, а последняя хвостовая часть указывает на пустой список.</target>
        </trans-unit>
        <trans-unit id="3a18e9029c5b8737849184d7fa1445abea54500c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;list&lt;/code&gt; is an Erlang term containing an I/O list.</source>
          <target state="translated">&lt;code&gt;list&lt;/code&gt; - это термин Erlang, содержащий список ввода-вывода.</target>
        </trans-unit>
        <trans-unit id="be5f65fbdbd15a19650c5680eb95cc7ff30b8e07" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;list&lt;/code&gt; is an Erlang term containing an I/O list. The I/O list must not contain the integer 0, as C strings may not contain this value except as a terminating marker.</source>
          <target state="translated">&lt;code&gt;list&lt;/code&gt; - это термин Erlang, содержащий список ввода-вывода. Список ввода-вывода не должен содержать целое число 0, так как строки C могут не содержать этого значения, кроме как маркера завершения.</target>
        </trans-unit>
        <trans-unit id="1ff60fee6c0558227a68fafe4201fffd5289ccfb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;list_auth_users/1&lt;/code&gt;, &lt;code&gt;list_auth_users/2&lt;/code&gt;, and &lt;code&gt;list_auth_users/3&lt;/code&gt; each returns a list of users that are currently authenticated. Authentications are stored for &lt;code&gt;SecurityAuthTimeout&lt;/code&gt; seconds, and then discarded.</source>
          <target state="translated">&lt;code&gt;list_auth_users/1&lt;/code&gt; , &lt;code&gt;list_auth_users/2&lt;/code&gt; и &lt;code&gt;list_auth_users/3&lt;/code&gt; каждый возвращает список пользователей, которые в настоящее время аутентифицированы. Аутентификации сохраняются в течение секунд &lt;code&gt;SecurityAuthTimeout&lt;/code&gt; , а затем отбрасываются.</target>
        </trans-unit>
        <trans-unit id="5acfd7019e137b4cdc2774dc25661afca35ffbef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;list_blocked_users/1&lt;/code&gt;, &lt;code&gt;list_blocked_users/2&lt;/code&gt;, and &lt;code&gt;list_blocked_users/3&lt;/code&gt; each returns a list of users that are currently blocked from access.</source>
          <target state="translated">&lt;code&gt;list_blocked_users/1&lt;/code&gt; , &lt;code&gt;list_blocked_users/2&lt;/code&gt; и &lt;code&gt;list_blocked_users/3&lt;/code&gt; возвращает список пользователей, доступ к которым в настоящее время заблокирован.</target>
        </trans-unit>
        <trans-unit id="8fa5a48c1d351eb3391bd3d93f9d211ac75dc2d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;list_dir/1&lt;/code&gt; retrieves all filenames in the zip archive &lt;code&gt;Archive&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;list_dir/1&lt;/code&gt; получает все имена файлов в zip-архиве &lt;code&gt;Archive&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a4ce3ce5745733f123cf322f55e9ef14e233b7a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;list_dir/2&lt;/code&gt; provides options.</source>
          <target state="translated">&lt;code&gt;list_dir/2&lt;/code&gt; предоставляет параметры.</target>
        </trans-unit>
        <trans-unit id="f53ab94d5ba9db56fa66c8232d30db5fa6547050" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;list_group_members/2, list_group_members/3&lt;/code&gt;, and &lt;code&gt;list_group_members/4&lt;/code&gt; each lists the members of a specified group. If the group does not exist or there is an error, &lt;code&gt;{error, Reason}&lt;/code&gt; is returned. When &lt;code&gt;list_group_members/2&lt;/code&gt; is called, options &lt;code&gt;Port&lt;/code&gt; and &lt;code&gt;Dir&lt;/code&gt; are mandatory.</source>
          <target state="translated">&lt;code&gt;list_group_members/2, list_group_members/3&lt;/code&gt; и &lt;code&gt;list_group_members/4&lt;/code&gt; каждый перечисляет членов указанной группы. Если группа не существует или есть ошибка, возвращается &lt;code&gt;{error, Reason}&lt;/code&gt; . Когда &lt;code&gt;list_group_members/2&lt;/code&gt; , параметры &lt;code&gt;Port&lt;/code&gt; и &lt;code&gt;Dir&lt;/code&gt; являются обязательными.</target>
        </trans-unit>
        <trans-unit id="18d59539d0fef19e0d714af933d9eefa77a0818d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;list_groups/1, list_groups/2&lt;/code&gt;, and &lt;code&gt;list_groups/3&lt;/code&gt; each lists all the groups available. If there is an error, &lt;code&gt;{error, Reason}&lt;/code&gt; is returned. When &lt;code&gt;list_groups/1&lt;/code&gt; is called, options &lt;code&gt;Port&lt;/code&gt; and &lt;code&gt;Dir&lt;/code&gt; are mandatory.</source>
          <target state="translated">&lt;code&gt;list_groups/1, list_groups/2&lt;/code&gt; и &lt;code&gt;list_groups/3&lt;/code&gt; каждый перечисляет все доступные группы. В случае ошибки возвращается &lt;code&gt;{error, Reason}&lt;/code&gt; . Когда &lt;code&gt;list_groups/1&lt;/code&gt; , параметры &lt;code&gt;Port&lt;/code&gt; и &lt;code&gt;Dir&lt;/code&gt; являются обязательными.</target>
        </trans-unit>
        <trans-unit id="7c79260e7f4c22a26aa9f665a18df6729efbe233" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;list_users/1, list_users/2&lt;/code&gt;, and &lt;code&gt;list_users/3&lt;/code&gt; each returns a list of users in the user database for a specific &lt;code&gt;Port/Dir&lt;/code&gt;. When &lt;code&gt;list_users/1&lt;/code&gt; is called, options &lt;code&gt;Port&lt;/code&gt; and &lt;code&gt;Dir&lt;/code&gt; are mandatory.</source>
          <target state="translated">&lt;code&gt;list_users/1, list_users/2&lt;/code&gt; и &lt;code&gt;list_users/3&lt;/code&gt; каждый возвращает список пользователей в базе данных пользователей для определенного &lt;code&gt;Port/Dir&lt;/code&gt; . Когда &lt;code&gt;list_users/1&lt;/code&gt; , параметры &lt;code&gt;Port&lt;/code&gt; и &lt;code&gt;Dir&lt;/code&gt; являются обязательными.</target>
        </trans-unit>
        <trans-unit id="7e6cad36a8a85579416bf1628b19e45d5eefb715" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;listen/1&lt;/code&gt; is called once in order to listen for incoming connection requests. The call is made when the distribution is brought up. The argument &lt;code&gt;Name&lt;/code&gt; is the part of the node name before the &lt;code&gt;@&lt;/code&gt; sign in the full node name. It can be either an atom or a string.</source>
          <target state="translated">&lt;code&gt;listen/1&lt;/code&gt; вызывается один раз для прослушивания входящих запросов на соединение. Вызов совершается при запуске раздачи. Аргумент &lt;code&gt;Name&lt;/code&gt; - это часть имени узла перед знаком &lt;code&gt;@&lt;/code&gt; в полном имени узла. Это может быть атом или строка.</target>
        </trans-unit>
        <trans-unit id="e729638f4b8bc65d2899f07acdd484626a244e37" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;listen/2&lt;/code&gt; is called once in order to listen for incoming connection requests. The call is made when the distribution is brought up. The argument &lt;code&gt;Name&lt;/code&gt; is the part of the node name before the &lt;code&gt;@&lt;/code&gt; sign in the full node name. It can be either an atom or a string. The argument &lt;code&gt;Host&lt;/code&gt; is the part of the node name after the &lt;code&gt;@&lt;/code&gt; sign in the full node name. It is always a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3390bea1740da3235aebc0537125e1e385dc069f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;listensock&lt;/code&gt; is an open socket descriptor on which &lt;code&gt;listen()&lt;/code&gt; has previously been called.</source>
          <target state="translated">&lt;code&gt;listensock&lt;/code&gt; - это дескриптор открытого сокета, для которого ранее был вызван &lt;code&gt;listen()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="93ca30f0b36fd9439a8c607bf40abd0dde1401b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lists:append(A, B)&lt;/code&gt; is equivalent to &lt;code&gt;A ++ B&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;lists:append(A, B)&lt;/code&gt; эквивалентно &lt;code&gt;A ++ B&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cd0e2167b19a98d558382b7069180326cf81741b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lists:flatten/1&lt;/code&gt; builds an entirely new list. It is therefore expensive, and even &lt;strong&gt;more&lt;/strong&gt; expensive than the &lt;code&gt;++&lt;/code&gt; operator (which copies its left argument, but not its right argument).</source>
          <target state="translated">&lt;code&gt;lists:flatten/1&lt;/code&gt; List : flatten / 1 создает совершенно новый список. Следовательно , дорогой, и даже &lt;strong&gt;более&lt;/strong&gt; дорогой , чем &lt;code&gt;++&lt;/code&gt; оператор (который копирует свой левый аргумент, но не его право аргумента).</target>
        </trans-unit>
        <trans-unit id="2fc30df23df0d4aae69fe65f114fd554b7fccaaf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lists:keydelete&lt;/code&gt; works in the same way but deletes the first tuple found (if any) and returns the remaining list:</source>
          <target state="translated">&lt;code&gt;lists:keydelete&lt;/code&gt; работает таким же образом, но удаляет первый найденный кортеж (если есть) и возвращает оставшийся список:</target>
        </trans-unit>
        <trans-unit id="8f4eb825c0ab4a344284bd22859baffe203e6edc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lists:keysearch&lt;/code&gt; is like &lt;code&gt;lists:keymember&lt;/code&gt;, but it returns &lt;code&gt;{value,Tuple_Found}&lt;/code&gt; or the atom &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;lists:keysearch&lt;/code&gt; похож на &lt;code&gt;lists:keymember&lt;/code&gt; , но возвращает &lt;code&gt;{value,Tuple_Found}&lt;/code&gt; или атом &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e11c251dfb860431b23cc06d48025147f0ce53f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lists:subtract(A, B)&lt;/code&gt; is equivalent to &lt;code&gt;A -- B&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;lists:subtract(A, B)&lt;/code&gt; эквивалентно &lt;code&gt;A -- B&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3e66636fc0a180beb50c9d8299fb3e8f7cda2095" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;literal_alloc&lt;/code&gt; super carrier size (in MB). The amount of &lt;strong&gt;virtual&lt;/strong&gt; address space reserved for literal terms in Erlang code on 64-bit architectures. Defaults to &lt;code&gt;1024&lt;/code&gt; (that is, 1 GB), which is usually sufficient. The flag is ignored on 32-bit architectures.</source>
          <target state="translated">&lt;code&gt;literal_alloc&lt;/code&gt; - размер супер-носителя (в МБ). Объем &lt;strong&gt;виртуального&lt;/strong&gt; адресного пространства, зарезервированного для буквальных терминов в коде Erlang на 64-битных архитектурах. По умолчанию &lt;code&gt;1024&lt;/code&gt; (то есть 1 ГБ), что обычно достаточно. Флаг игнорируется на 32-битных архитектурах.</target>
        </trans-unit>
        <trans-unit id="d54c2beccdcdadf7b8b8e9e5d5d92fd60ac7d4ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;load&lt;/code&gt; is called when the NIF library is loaded and no previously loaded library exists for this module.</source>
          <target state="translated">&lt;code&gt;load&lt;/code&gt; вызывается, когда загружается библиотека NIF и для этого модуля не существует ранее загруженной библиотеки.</target>
        </trans-unit>
        <trans-unit id="99e9f90b11036e44681cbe3af66054d11205eaec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;load&lt;/code&gt;, &lt;code&gt;upgrade&lt;/code&gt; and &lt;code&gt;unload&lt;/code&gt; are pointers to functions. One of &lt;code&gt;load&lt;/code&gt; or &lt;code&gt;upgrade&lt;/code&gt; is called to initialize the library. &lt;code&gt;unload&lt;/code&gt; is called to release the library. All are described individually below.</source>
          <target state="translated">&lt;code&gt;load&lt;/code&gt; , &lt;code&gt;upgrade&lt;/code&gt; и &lt;code&gt;unload&lt;/code&gt; - это указатели на функции. Один из вариантов &lt;code&gt;load&lt;/code&gt; или &lt;code&gt;upgrade&lt;/code&gt; вызывается для инициализации библиотеки. &lt;code&gt;unload&lt;/code&gt; вызывается для освобождения библиотеки. Все они описаны ниже по отдельности.</target>
        </trans-unit>
        <trans-unit id="04f795031c0a3191dc6833462193ff8535894cb4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;load_info&lt;/code&gt; is the second argument to &lt;code&gt;&lt;a href=&quot;erlang#load_nif-2&quot;&gt;erlang:load_nif/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;load_info&lt;/code&gt; - это второй аргумент &lt;code&gt;&lt;a href=&quot;erlang#load_nif-2&quot;&gt;erlang:load_nif/2&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aff9e8cdbf9e030064b2b7fe81a987f154b034d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;load_node&lt;/code&gt;. Returns the name of the node that Mnesia loaded the table from. The structure of the returned value is unspecified, but can be useful for debugging purposes.</source>
          <target state="translated">&lt;code&gt;load_node&lt;/code&gt; . Возвращает имя узла, с которого Mnesia загрузила таблицу. Структура возвращаемого значения не указана, но может быть полезна для целей отладки.</target>
        </trans-unit>
        <trans-unit id="a643fb5182da0ca35ae74da8a11c5192585d1561" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;load_order&lt;/code&gt;. Returns the load order priority of the table. It is an integer and defaults to &lt;code&gt;0&lt;/code&gt; (zero).</source>
          <target state="translated">&lt;code&gt;load_order&lt;/code&gt; . Возвращает приоритет порядка загрузки таблицы. Это целое число и по умолчанию &lt;code&gt;0&lt;/code&gt; (ноль).</target>
        </trans-unit>
        <trans-unit id="24aaff6b3ceaf8f7959a64ecaf82f686d9c3c0fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;load_reason&lt;/code&gt;. Returns the reason of why Mnesia decided to load the table. The structure of the returned value is unspecified, but can be useful for debugging purposes.</source>
          <target state="translated">&lt;code&gt;load_reason&lt;/code&gt; . Возвращает причину, по которой Mnesia решила загрузить таблицу. Структура возвращаемого значения не указана, но может быть полезна для целей отладки.</target>
        </trans-unit>
        <trans-unit id="45ed93e5123c7e83801fb2528f0aa02733e06e2c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;local&lt;/code&gt; is an option that means that the directories where the applications are found are used in the boot script, instead of &lt;code&gt;$ROOT/lib&lt;/code&gt; (&lt;code&gt;$ROOT&lt;/code&gt; is the root directory of the installed release).</source>
          <target state="translated">&lt;code&gt;local&lt;/code&gt; - это параметр, который означает, что каталоги, в которых находятся приложения, используются в сценарии загрузки вместо &lt;code&gt;$ROOT/lib&lt;/code&gt; ( &lt;code&gt;$ROOT&lt;/code&gt; - это корневой каталог установленной версии).</target>
        </trans-unit>
        <trans-unit id="182486b044d3d61e0e4eb3eba30d58307f59efbf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;local&lt;/code&gt; is returned if only parts of the application are restarted (by a supervisor), or if the function is called outside a startup.</source>
          <target state="translated">&lt;code&gt;local&lt;/code&gt; возвращается, если перезапускаются только части приложения (супервизором) или если функция вызывается вне запуска.</target>
        </trans-unit>
        <trans-unit id="8803b8be9dd903808934ee41a2901394e37636cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;local_content&lt;/code&gt;. Returns &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; to indicate if the table is configured to have locally unique content on each node.</source>
          <target state="translated">&lt;code&gt;local_content&lt;/code&gt; . Возвращает &lt;code&gt;true&lt;/code&gt; или &lt;code&gt;false&lt;/code&gt; чтобы указать, настроена ли таблица для локального уникального содержимого на каждом узле.</target>
        </trans-unit>
        <trans-unit id="24e5e058c6b2dcae03991ec71d8aa2c47c7d3153" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;local_content&lt;/code&gt;. When an application requires tables whose contents are local to each node, &lt;code&gt;local_content&lt;/code&gt; tables can be used. The table name is known to all Mnesia nodes, but its content is unique on each node. This means that access to such a table must be done locally. Set field &lt;code&gt;local_content&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; to enable the &lt;code&gt;local_content&lt;/code&gt; behavior. Default is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;local_content&lt;/code&gt; . Когда приложению требуются таблицы, содержимое которых является локальным для каждого узла, можно использовать таблицы &lt;code&gt;local_content&lt;/code&gt; . Имя таблицы известно всем узлам Mnesia, но ее содержимое уникально на каждом узле. Это означает, что доступ к такой таблице должен осуществляться локально. Установите для поля &lt;code&gt;local_content&lt;/code&gt; значение &lt;code&gt;true&lt;/code&gt; , чтобы включить поведение &lt;code&gt;local_content&lt;/code&gt; . По умолчанию - &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3a5f52568d19693d798aaa7dde969e33e5993d63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;local_tables&lt;/code&gt;. Returns a list of all tables that are configured to reside locally.</source>
          <target state="translated">&lt;code&gt;local_tables&lt;/code&gt; . Возвращает список всех таблиц, настроенных для локального размещения.</target>
        </trans-unit>
        <trans-unit id="3105149e9ac8a04e76c7b0fb03db073b4ea51a3a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lock&lt;/code&gt; specifies whether &lt;code&gt;Mnesia&lt;/code&gt; is to acquire a read or write lock on the table.</source>
          <target state="translated">&lt;code&gt;lock&lt;/code&gt; указывает, должна ли &lt;code&gt;Mnesia&lt;/code&gt; получить блокировку чтения или записи для таблицы.</target>
        </trans-unit>
        <trans-unit id="47c000df4e030c56062201fa1e4645513ad3cf9d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lock_queue&lt;/code&gt;. Returns a list of all transactions that are queued for execution by the local lock manager.</source>
          <target state="translated">&lt;code&gt;lock_queue&lt;/code&gt; . Возвращает список всех транзакций, поставленных в очередь для выполнения локальным диспетчером блокировок.</target>
        </trans-unit>
        <trans-unit id="7463dfc2a0b31257f39f7c17f060afc5fec85e75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;log/2&lt;/code&gt; is used for internally formatted logs, and &lt;code&gt;blog/2&lt;/code&gt; for externally formatted logs. &lt;code&gt;blog/2&lt;/code&gt; can also be used for internally formatted logs if the binary is constructed with a call to &lt;code&gt; term_to_binary/1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfc11c648eda5a7d9fdd3f797b74aafa254dfc21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;log/2&lt;/code&gt; is used for internally formatted logs, and &lt;code&gt;blog/2&lt;/code&gt; for externally formatted logs. &lt;code&gt;blog/2&lt;/code&gt; can also be used for internally formatted logs if the binary is constructed with a call to &lt;code&gt;term_to_binary/1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;log/2&lt;/code&gt; используется для журналов внутреннего формата, а &lt;code&gt;blog/2&lt;/code&gt; - для журналов внешнего формата. &lt;code&gt;blog/2&lt;/code&gt; также можно использовать для журналов с внутренним форматированием, если двоичный файл создается с помощью вызова &lt;code&gt;term_to_binary/1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="35f86282b4a84e4c8c3d37ec0a3d441cd2b85619" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;log_dir&lt;/code&gt; is where the log files are written.</source>
          <target state="translated">&lt;code&gt;log_dir&lt;/code&gt; - это место, где записываются файлы журнала.</target>
        </trans-unit>
        <trans-unit id="28db9ed3d3a69799b455200ff83296da0c3d5853" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;log_terms/2&lt;/code&gt; is used for internally formatted logs, and &lt;code&gt;blog_terms/2&lt;/code&gt; for externally formatted logs. &lt;code&gt;blog_terms/2&lt;/code&gt; can also be used for internally formatted logs if the binaries are constructed with calls to &lt;code&gt; term_to_binary/1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="995e2d2521421390d9a06c23bfa3a101cfb1b278" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;log_terms/2&lt;/code&gt; is used for internally formatted logs, and &lt;code&gt;blog_terms/2&lt;/code&gt; for externally formatted logs. &lt;code&gt;blog_terms/2&lt;/code&gt; can also be used for internally formatted logs if the binaries are constructed with calls to &lt;code&gt;term_to_binary/1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;log_terms/2&lt;/code&gt; используется для журналов внутреннего формата, а &lt;code&gt;blog_terms/2&lt;/code&gt; - для журналов внешнего формата. &lt;code&gt;blog_terms/2&lt;/code&gt; также можно использовать для журналов с внутренним форматированием, если двоичные файлы созданы с помощью вызовов &lt;code&gt;term_to_binary/1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="23529896ccb5d645b44d285439cb214a836bfc9f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;log_version&lt;/code&gt;. Returns the version number of the Mnesia transaction log format.</source>
          <target state="translated">&lt;code&gt;log_version&lt;/code&gt; . Возвращает номер версии формата журнала транзакций Mnesia.</target>
        </trans-unit>
        <trans-unit id="3dcb31be04290d5acce7d33cd9a0cee64c351d93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;logger_formatter&lt;/code&gt; is the default formatter used by Logger.</source>
          <target state="translated">&lt;code&gt;logger_formatter&lt;/code&gt; - это средство форматирования по умолчанию, используемое Logger.</target>
        </trans-unit>
        <trans-unit id="d273bde00c44f84e57b534c9ee265abf11e0eb98" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lookup&lt;/code&gt; extracts &lt;code&gt;{Key,Value}&lt;/code&gt; tuples from &lt;code&gt;ETSTable&lt;/code&gt; and returns the &lt;code&gt;Value&lt;/code&gt; associated with &lt;code&gt;Key&lt;/code&gt;. If &lt;code&gt;ETSTable&lt;/code&gt; is of type &lt;code&gt;bag&lt;/code&gt;, only the first &lt;code&gt;Value&lt;/code&gt; associated with &lt;code&gt;Key&lt;/code&gt; is returned. &lt;code&gt;lookup/2&lt;/code&gt; returns &lt;code&gt;undefined&lt;/code&gt; and &lt;code&gt;lookup/3&lt;/code&gt; returns &lt;code&gt;Undefined&lt;/code&gt; if no &lt;code&gt;Value&lt;/code&gt; is found.</source>
          <target state="translated">&lt;code&gt;lookup&lt;/code&gt; извлекает кортежи &lt;code&gt;{Key,Value}&lt;/code&gt; из &lt;code&gt;ETSTable&lt;/code&gt; и возвращает &lt;code&gt;Value&lt;/code&gt; связанное с &lt;code&gt;Key&lt;/code&gt; . Если &lt;code&gt;ETSTable&lt;/code&gt; имеет тип &lt;code&gt;bag&lt;/code&gt; , возвращается только первое &lt;code&gt;Value&lt;/code&gt; связанное с &lt;code&gt;Key&lt;/code&gt; . &lt;code&gt;lookup/2&lt;/code&gt; возвращает &lt;code&gt;undefined&lt;/code&gt; , а &lt;code&gt;lookup/3&lt;/code&gt; возвращает &lt;code&gt;Undefined&lt;/code&gt; , если &lt;code&gt;Value&lt;/code&gt; не найдено.</target>
        </trans-unit>
        <trans-unit id="eb86b8f77b9b208e6a11d12b37271d4c192f67f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lookup_mime&lt;/code&gt; returns the MIME type associated with a specific file suffix as specified in the file &lt;code&gt;mime.types&lt;/code&gt; (located in the config directory).</source>
          <target state="translated">&lt;code&gt;lookup_mime&lt;/code&gt; возвращает тип MIME, связанный с определенным суффиксом файла, как указано в файле &lt;code&gt;mime.types&lt;/code&gt; (расположенном в каталоге конфигурации).</target>
        </trans-unit>
        <trans-unit id="c90fbcda6ae10bb657658395cb0d63bc3c4582c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lookup_mime_default&lt;/code&gt; returns the MIME type associated with a specific file suffix as specified in the &lt;code&gt;mime.types&lt;/code&gt; file (located in the config directory). If no appropriate association is found, the value of &lt;code&gt;DefaultType&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;code&gt;lookup_mime_default&lt;/code&gt; возвращает тип MIME, связанный с определенным суффиксом файла, как указано в файле &lt;code&gt;mime.types&lt;/code&gt; (расположенном в каталоге config). Если подходящая связь не найдена, возвращается значение &lt;code&gt;DefaultType&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3dfec20f4c61fd18fa24269ea42272c9fc181327" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;low_entropy&lt;/code&gt;: the random generator failed due to lack of secure &quot;randomness&quot;,</source>
          <target state="translated">&lt;code&gt;low_entropy&lt;/code&gt; : генератор случайных чисел отказал из-за отсутствия безопасной &amp;laquo;случайности&amp;raquo;,</target>
        </trans-unit>
        <trans-unit id="61f5cddd2234c71cd616f814453f29c2cac4203d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ls/1&lt;/code&gt; implies the current remote directory of the user.</source>
          <target state="translated">&lt;code&gt;ls/1&lt;/code&gt; подразумевает текущий удаленный каталог пользователя.</target>
        </trans-unit>
        <trans-unit id="86263d48661c7d702923e5fea293faecb2b162c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;m/1&lt;/code&gt; is also suitable for checking that the BEAM file of a module that is about to be loaded into a running a system does not call any undefined functions. In either case, the code path of the code server (see the module &lt;code&gt;code&lt;/code&gt;) is used for finding modules that export externally called functions not exported by the checked module itself, so called &lt;code&gt;&lt;a href=&quot;xref#library_module&quot;&gt;library modules&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;m/1&lt;/code&gt; также подходит для проверки того, что файл BEAM модуля, который будет загружен в работающую систему, не вызывает каких-либо неопределенных функций. В любом случае путь кода сервера кода (см. &lt;code&gt;code&lt;/code&gt; модуля ) используется для поиска модулей, которые экспортируют вызываемые извне функции, не экспортируемые самим отмеченным модулем, так называемые &lt;code&gt;&lt;a href=&quot;xref#library_module&quot;&gt;library modules&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="df9537a65ebbc229094f9e153efaf34118a0a025" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;m1&lt;/code&gt; is dependent on &lt;code&gt;ch3&lt;/code&gt; also when downgrading. &lt;code&gt;systools&lt;/code&gt; knows the difference between up- and downgrading and generates a correct &lt;code&gt;relup&lt;/code&gt;, where &lt;code&gt;ch3&lt;/code&gt; is loaded before &lt;code&gt;m1&lt;/code&gt; when upgrading, but &lt;code&gt;m1&lt;/code&gt; is loaded before &lt;code&gt;ch3&lt;/code&gt; when downgrading.</source>
          <target state="translated">&lt;code&gt;m1&lt;/code&gt; зависит от &lt;code&gt;ch3&lt;/code&gt; также при понижении версии . &lt;code&gt;systools&lt;/code&gt; знает разницу между повышением и понижением &lt;code&gt;relup&lt;/code&gt; и генерирует правильное повторное подключение , где &lt;code&gt;ch3&lt;/code&gt; загружается перед &lt;code&gt;m1&lt;/code&gt; при обновлении, но &lt;code&gt;m1&lt;/code&gt; загружается перед &lt;code&gt;ch3&lt;/code&gt; при понижении.</target>
        </trans-unit>
        <trans-unit id="be74c7b55753734ee046ceff4ef299316ae01ad4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;major : integer&lt;/code&gt; :: Major version. Ex. &lt;code&gt;3&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;major : integer&lt;/code&gt; :: Основная версия. Ex. &lt;code&gt;3&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5e5f4e2011f683da4cdaf06fa133ff71c470850c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;majority&lt;/code&gt;. This attribute is &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;; default is &lt;code&gt;false&lt;/code&gt;. When &lt;code&gt;true&lt;/code&gt;, a majority of the table replicas must be available for an update to succeed. Majority checking can be enabled on tables with mission-critical data, where it is vital to avoid inconsistencies because of network splits.</source>
          <target state="translated">&lt;code&gt;majority&lt;/code&gt; . Этот атрибут имеет значение &lt;code&gt;true&lt;/code&gt; или &lt;code&gt;false&lt;/code&gt; ; по умолчанию - &lt;code&gt;false&lt;/code&gt; . Если установлено значение &lt;code&gt;true&lt;/code&gt; , для успешного обновления должно быть доступно большинство реплик таблиц. Проверка большинства может быть включена для таблиц с критически важными данными, где жизненно важно избежать несогласованности из-за разделения сети.</target>
        </trans-unit>
        <trans-unit id="f325d85c7b8a9fe60e4ce65f1b1b9a5d59c1afcd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;make install&lt;/code&gt; will install at a location specified when doing &lt;code&gt;configure&lt;/code&gt;. &lt;code&gt;configure&lt;/code&gt; arguments specifying where the installation should reside are for example: &lt;code&gt;--prefix&lt;/code&gt;, &lt;code&gt;--exec-prefix&lt;/code&gt;, &lt;code&gt;--libdir&lt;/code&gt;, &lt;code&gt;--bindir&lt;/code&gt;, etc. By default it will install under &lt;code&gt;/usr/local&lt;/code&gt;. You typically do not want to install your cross build under &lt;code&gt;/usr/local&lt;/code&gt; on your build machine. Using &lt;code&gt;&lt;a href=&quot;http://www.gnu.org/prep/standards/html_node/DESTDIR.html&quot;&gt;DESTDIR&lt;/a&gt;&lt;/code&gt; will cause the installation paths to be prefixed by &lt;code&gt;$DESTDIR&lt;/code&gt;. This makes it possible to install and package the installation on the build machine without having to place the installation in the same directory on the build machine as it should be executed from on the target machine.</source>
          <target state="translated">&lt;code&gt;make install&lt;/code&gt; будет установлена ​​в место, указанное при &lt;code&gt;configure&lt;/code&gt; . &lt;code&gt;--exec-prefix&lt;/code&gt; &lt;code&gt;configure&lt;/code&gt; , указывающие, где должна находиться установка, например: &lt;code&gt;--prefix&lt;/code&gt; , --exec-prefix , &lt;code&gt;--libdir&lt;/code&gt; , &lt;code&gt;--bindir&lt;/code&gt; и т. д. По умолчанию он устанавливается в &lt;code&gt;/usr/local&lt;/code&gt; . Обычно вы не хотите устанавливать кросс-сборку в &lt;code&gt;/usr/local&lt;/code&gt; на вашем компьютере сборки. Использование &lt;code&gt;&lt;a href=&quot;http://www.gnu.org/prep/standards/html_node/DESTDIR.html&quot;&gt;DESTDIR&lt;/a&gt;&lt;/code&gt; приведет к тому, что пути установки будут иметь префикс &lt;code&gt;$DESTDIR&lt;/code&gt; , Это позволяет установить и упаковать установку на машине сборки без необходимости помещать установку в тот же каталог на машине сборки, из которого она должна выполняться на целевой машине.</target>
        </trans-unit>
        <trans-unit id="ed22246e4e8ea667d51c9745349d00cbb18720a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;make install&lt;/code&gt; will install at a location specified when doing &lt;code&gt;configure&lt;/code&gt;. &lt;code&gt;configure&lt;/code&gt; arguments specifying where the installation should reside are for example: &lt;code&gt;--prefix&lt;/code&gt;, &lt;code&gt;--exec-prefix&lt;/code&gt;, &lt;code&gt;--libdir&lt;/code&gt;, &lt;code&gt;--bindir&lt;/code&gt;, etc. By default it will install under &lt;code&gt;/usr/local&lt;/code&gt;. You typically do not want to install your cross build under &lt;code&gt;/usr/local&lt;/code&gt; on your build machine. Using &lt;code&gt;&lt;a href=&quot;https://www.gnu.org/prep/standards/html_node/DESTDIR.html&quot;&gt;DESTDIR&lt;/a&gt;&lt;/code&gt; will cause the installation paths to be prefixed by &lt;code&gt;$DESTDIR&lt;/code&gt;. This makes it possible to install and package the installation on the build machine without having to place the installation in the same directory on the build machine as it should be executed from on the target machine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f6c951c6749c15435d2980eb4aa791a53af9775" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;make release&lt;/code&gt; will copy what you have built for the target machine to &lt;code&gt;&amp;lt;RELEASE_DIR&amp;gt;&lt;/code&gt;. The &lt;code&gt;Install&lt;/code&gt; script will not be run. The content of &lt;code&gt;&amp;lt;RELEASE_DIR&amp;gt;&lt;/code&gt; is what by default ends up in &lt;code&gt;/usr/local/lib/erlang&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;make release&lt;/code&gt; скопирует то, что вы создали для целевой машины, в &lt;code&gt;&amp;lt;RELEASE_DIR&amp;gt;&lt;/code&gt; . Сценарий &lt;code&gt;Install&lt;/code&gt; не запускается. Содержимое &lt;code&gt;&amp;lt;RELEASE_DIR&amp;gt;&lt;/code&gt; по умолчанию попадает в &lt;code&gt;/usr/local/lib/erlang&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9e66362068d2d90fa1b3b40af705bb7adc3fbdf8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;make:all/0,1&lt;/code&gt; and &lt;code&gt;make:files/1,2&lt;/code&gt; first looks for &lt;code&gt;{emake, Emake}&lt;/code&gt; in options, then in the current working directory for a file named &lt;code&gt;Emakefile&lt;/code&gt;. If present &lt;code&gt;Emake&lt;/code&gt; should contain elements like this:</source>
          <target state="translated">&lt;code&gt;make:all/0,1&lt;/code&gt; и &lt;code&gt;make:files/1,2&lt;/code&gt; сначала ищет &lt;code&gt;{emake, Emake}&lt;/code&gt; в параметрах, а затем в текущем рабочем каталоге &lt;code&gt;Emakefile&lt;/code&gt; файл с именем Emakefile . Если присутствует &lt;code&gt;Emake&lt;/code&gt; ,он должен содержать такие элементы:</target>
        </trans-unit>
        <trans-unit id="270393b4583bd924998e84467ba7373cbe65d1f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;make&lt;/code&gt; will verify that the Erlang/OTP system used when building is of the same release as the system being built, and will fail if this is not the case. It is possible, however not recommended, to force the cross compilation even though the wrong Erlang/OTP system is used. This by invoking &lt;code&gt;make&lt;/code&gt; like this: &lt;code&gt;make ERL_XCOMP_FORCE_DIFFERENT_OTP=yes&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;make&lt;/code&gt; проверит, что используемая при сборке система Erlang / OTP имеет тот же выпуск, что и создаваемая система, и завершится ошибкой, если это не так. Возможно, но не рекомендуется, принудительную кросс-компиляцию, даже если используется неправильная система Erlang / OTP. Для этого &lt;code&gt;make ERL_XCOMP_FORCE_DIFFERENT_OTP=yes&lt;/code&gt; вызвать &lt;code&gt;make&lt;/code&gt; следующим образом: make ERL_XCOMP_FORCE_DIFFERENT_OTP = yes .</target>
        </trans-unit>
        <trans-unit id="840792aa7619bb306720f20c2ce63c67a313843f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;make_config/1&lt;/code&gt; uses the information previously saved by &lt;code&gt;&lt;a href=&quot;#save_scenario-0&quot;&gt;save_scenario/0&lt;/a&gt;&lt;/code&gt; in order to produce an &lt;code&gt;erts_alloc&lt;/code&gt; configuration. At least one scenario have had to be saved. All scenarios previously saved will be used when creating the configuration.</source>
          <target state="translated">&lt;code&gt;make_config/1&lt;/code&gt; использует информацию, ранее сохраненную с помощью &lt;code&gt;&lt;a href=&quot;#save_scenario-0&quot;&gt;save_scenario/0&lt;/a&gt;&lt;/code&gt; , для создания конфигурации &lt;code&gt;erts_alloc&lt;/code&gt; . По крайней мере, один сценарий нужно было сохранить. При создании конфигурации будут использованы все ранее сохраненные сценарии.</target>
        </trans-unit>
        <trans-unit id="1c2f1daea4e34d2fedd33079cf5e22510ff82244" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;malloc&lt;/code&gt; library to use. Only &lt;code&gt;libc&lt;/code&gt; is available. &lt;code&gt;libc&lt;/code&gt; enables the standard &lt;code&gt;libc&lt;/code&gt;&lt;code&gt;malloc&lt;/code&gt; implementation. By default &lt;code&gt;libc&lt;/code&gt; is used.</source>
          <target state="translated">&lt;code&gt;malloc&lt;/code&gt; Библиотека malloc для использования. Доступна только &lt;code&gt;libc&lt;/code&gt; . &lt;code&gt;libc&lt;/code&gt; включает стандартную реализацию &lt;code&gt;libc&lt;/code&gt; &lt;code&gt;malloc&lt;/code&gt; . По умолчанию используется &lt;code&gt;libc&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1ea55247b858a5b4454ad7ae65a30311cf2685ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;managed_agents&lt;/code&gt; is optional.</source>
          <target state="translated">&lt;code&gt;managed_agents&lt;/code&gt; не является обязательным.</target>
        </trans-unit>
        <trans-unit id="5a1d0c4b1351ca6835e9615992a7cec1a2c9a3dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;manager&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;manager&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="0b88984e46f4e980107b12a96398e4e130cc9eb8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;map(F, List)&lt;/code&gt; is a function that takes a function &lt;code&gt;F&lt;/code&gt; and a list &lt;code&gt;L&lt;/code&gt; as arguments and returns a new list, obtained by applying &lt;code&gt;F&lt;/code&gt; to each of the elements in &lt;code&gt;L&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;map(F, List)&lt;/code&gt; это функция , которая принимает функцию &lt;code&gt;F&lt;/code&gt; и список &lt;code&gt;L&lt;/code&gt; в качестве аргументов и возвращает новый список, полученный с применением &lt;code&gt;F&lt;/code&gt; к каждому из элементов &lt;code&gt;L&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6c156a66d82d82f9cf513b470fba98bac2bda89f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;map&lt;/code&gt; takes a function of one argument and a list of terms:</source>
          <target state="translated">&lt;code&gt;map&lt;/code&gt; принимает функцию одного аргумента и списка терминов:</target>
        </trans-unit>
        <trans-unit id="87b81a82f548fc7423fc917dd85f6239275c16ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;map_get/2&lt;/code&gt; in the &lt;code&gt;erlang&lt;/code&gt; module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d89ff44a50df5ef56c87f8de40fab752c012f38" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;map_size/1&lt;/code&gt; in the &lt;code&gt;erlang&lt;/code&gt; module</source>
          <target state="translated">&lt;code&gt;map_size/1&lt;/code&gt; в &lt;code&gt;erlang&lt;/code&gt; модуле</target>
        </trans-unit>
        <trans-unit id="b536a3850f767c913c875a0f2abcf64f84ffa387" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mapfoldl&lt;/code&gt; simultaneously maps and folds over a list:</source>
          <target state="translated">&lt;code&gt;mapfoldl&lt;/code&gt; одновременно отображает и сворачивает список:</target>
        </trans-unit>
        <trans-unit id="28e4cb0b9a019365b62b7f7670f762f6307804f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;master_node_tables&lt;/code&gt;. Returns a list of all tables with at least one master node.</source>
          <target state="translated">&lt;code&gt;master_node_tables&lt;/code&gt; . Возвращает список всех таблиц хотя бы с одним главным узлом.</target>
        </trans-unit>
        <trans-unit id="320b3e2e69db81bdb1bce46253be76bbb16cbd8b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;master_nodes&lt;/code&gt;. Returns the master nodes of a table.</source>
          <target state="translated">&lt;code&gt;master_nodes&lt;/code&gt; . Возвращает главные узлы таблицы.</target>
        </trans-unit>
        <trans-unit id="c7de2c527a233cc022f6da1c0a8ed25204d08b0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;max&lt;/code&gt; detail level activates tracing of all calls to &lt;code&gt;et:trace_me/4,5&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;max&lt;/code&gt; уровень детализации активирует отслеживание всех вызовов &lt;code&gt;et:trace_me/4,5&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="12cbb5e7aef12e76368e070ef17e62260df0b61b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;max_message_size&lt;/code&gt; - The &lt;code&gt;snmpEngineMaxMessageSize&lt;/code&gt; as defined in SNMP-FRAMEWORK-MIB. &lt;strong&gt;Mandatory&lt;/strong&gt;.</source>
          <target state="translated">&lt;code&gt;max_message_size&lt;/code&gt; - &lt;code&gt;snmpEngineMaxMessageSize&lt;/code&gt; , как определено в SNMP-FRAMEWORK-MIB. &lt;strong&gt;Обязательно&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="26fa86b89f3755b53f687395b2ba2fe437b5c4d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mbc_blocks : integer&lt;/code&gt; :: Number of multiblock blocks in instance. Ex. &lt;code&gt;122&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;mbc_blocks : integer&lt;/code&gt; :: Количество мультиблочных блоков в экземпляре. Ex. &lt;code&gt;122&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a20575c861819959a88555afdd99d04e48f52c95" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mbc_blocks_size : integer&lt;/code&gt; :: Total size of all multiblock blocks in instance. Ex. &lt;code&gt;285296&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;mbc_blocks_size : integer&lt;/code&gt; :: Общий размер всех мультиблочных блоков в экземпляре. Ex. &lt;code&gt;285296&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f38ae9d9af5aeaf996199c066c1e1c011b303785" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mbc_carriers : integer&lt;/code&gt; :: Number of multiblock carriers in instance. Ex. &lt;code&gt;3&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;mbc_carriers : integer&lt;/code&gt; :: Количество мультиблочных несущих в экземпляре. Ex. &lt;code&gt;3&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ac2207eda8c89c866a3cc4bbd0c29488a23573ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mbc_carriers_size : integer&lt;/code&gt; :: Total size of multiblock blocks carriers in instance. Ex. &lt;code&gt;1343488&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;mbc_carriers_size : integer&lt;/code&gt; :: Общий размер несущих мультиблочных блоков. Ex. &lt;code&gt;1343488&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4a957db9d5d62748a8fe5b4b90936c5d5cd85161" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;megaco:conn_info(ConnHandle, protocol_version)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;megaco:conn_info(ConnHandle, protocol_version)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4f196f7169d5b3ddfc633bdba72c4c3abc5b4517" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;megaco:format_versions/1&lt;/code&gt; (use megaco:print_version_info/0,1 instead.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9604fcf1c18c010dc9acf878086786e04d3c7030" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;memory&lt;/code&gt;. Returns for &lt;code&gt;ram_copies&lt;/code&gt; and &lt;code&gt;disc_copies&lt;/code&gt; tables the number of words allocated in memory to the table on this node. For &lt;code&gt;disc_only_copies&lt;/code&gt; tables the number of bytes stored on disc is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f743dbd63891f34f678b14fd5065b8728a4d1ce3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;memory&lt;/code&gt;. Returns the number of words allocated to the table on this node.</source>
          <target state="translated">&lt;code&gt;memory&lt;/code&gt; . Возвращает количество слов, выделенных для таблицы на этом узле.</target>
        </trans-unit>
        <trans-unit id="b2788527f5bc6a4f21924f9c58f30b61094d2611" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;memsup&lt;/code&gt; is a process which supervises the memory usage for the system and for individual processes. It is part of the OS_Mon application, see &lt;code&gt;os_mon(6)&lt;/code&gt;. Available for Unix and Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac55a1117d87b92c9643256061c0f84aef319452" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;memsup&lt;/code&gt; is a process which supervises the memory usage for the system and for individual processes. It is part of the OS_Mon application, see &lt;code&gt;os_mon(6)&lt;/code&gt;. Available for Unix, Windows and VxWorks.</source>
          <target state="translated">&lt;code&gt;memsup&lt;/code&gt; - это процесс, который контролирует использование памяти для системы и для отдельных процессов. Это часть приложения OS_Mon, см. &lt;code&gt;os_mon(6)&lt;/code&gt; . Доступно для Unix, Windows и VxWorks.</target>
        </trans-unit>
        <trans-unit id="50ed296aaff830f87c5d0ebf8ad050d27c8c72ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;merge(FileNames, Output)&lt;/code&gt; is equivalent to &lt;code&gt;merge(FileNames, Output, [])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;merge(FileNames, Output)&lt;/code&gt; эквивалентно &lt;code&gt;merge(FileNames, Output, [])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9d72ee5a4a1079ff1a0d9263eef7932f68891cc2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;message : string&lt;/code&gt; :: Message received. Ex. &lt;code&gt;&quot;{&amp;lt;0.162.0&amp;gt;,ok}&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;message : string&lt;/code&gt; :: Сообщение получено. Ex. &lt;code&gt;&quot;{&amp;lt;0.162.0&amp;gt;,ok}&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0fadf469f5c070a369f6f352483d71d18c16afb1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;message : string&lt;/code&gt; :: Message sent. Ex. &lt;code&gt;&quot;{&amp;lt;0.162.0&amp;gt;,ok}&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;message : string&lt;/code&gt; :: Сообщение отправлено. Ex. &lt;code&gt;&quot;{&amp;lt;0.162.0&amp;gt;,ok}&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="601216269fe1b6b0bfa4efef50ce0ac22a21a694" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;message/3&lt;/code&gt; returns an informative HTTP 1.1 status string in HTML. Each &lt;code&gt;StatusCode&lt;/code&gt; requires a specific &lt;code&gt;PhraseArgs&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;message/3&lt;/code&gt; возвращает информативную строку состояния HTTP 1.1 в HTML. Для каждого &lt;code&gt;StatusCode&lt;/code&gt; требуется определенный &lt;code&gt;PhraseArgs&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="a1b80be3f4eccb9a5e62f9291cf18851ca762db8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mime_decode/1&lt;/code&gt; and &lt;code&gt;mime_decode_to_string/1&lt;/code&gt; strip away illegal characters, while &lt;code&gt;decode/1&lt;/code&gt; and &lt;code&gt;decode_to_string/1&lt;/code&gt; only strip away whitespace characters.</source>
          <target state="translated">&lt;code&gt;mime_decode/1&lt;/code&gt; и &lt;code&gt;mime_decode_to_string/1&lt;/code&gt; стирают недопустимые символы, в то время &lt;code&gt;decode/1&lt;/code&gt; и &lt;code&gt;decode_to_string/1&lt;/code&gt; только стирают пробельные символы.</target>
        </trans-unit>
        <trans-unit id="f16de9b44c98ce3bac0c21ea5706a65429350ead" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;min&lt;/code&gt; detail level deactivates tracing of calls to &lt;code&gt;et:trace_me/4,5&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;min&lt;/code&gt; уровень детализации отключает отслеживание вызовов &lt;code&gt;et:trace_me/4,5&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ba8ce7ebe8ebbc9b5d6407ac6c488b0c9adbeefa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;minimum(NetTicktime, PreviousNetTicktime)*1000 div 4&lt;/code&gt; milliseconds.</source>
          <target state="translated">&lt;code&gt;minimum(NetTicktime, PreviousNetTicktime)*1000 div 4&lt;/code&gt; миллисекунды.</target>
        </trans-unit>
        <trans-unit id="07be14c2aee6768816e2158303036823a4f263b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;minor : integer&lt;/code&gt; :: Minor version. Ex. &lt;code&gt;1&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;minor : integer&lt;/code&gt; :: Дополнительная версия. Ex. &lt;code&gt;1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3c8f4454f124c597a614bdb6b3aaa486fa4b5803" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mnesia:create_schema/1&lt;/code&gt; fails if any of the Erlang nodes given as &lt;code&gt;DiscNodes&lt;/code&gt; are not alive, if Mnesia is running on any of the nodes, or if any of the nodes already have a schema. Use &lt;code&gt;mnesia:delete_schema/1&lt;/code&gt; to get rid of old faulty schemas.</source>
          <target state="translated">&lt;code&gt;mnesia:create_schema/1&lt;/code&gt; завершается ошибкой, если какой-либо из узлов Erlang, заданных как &lt;code&gt;DiscNodes&lt;/code&gt; ,неактивен , если Mnesia работает на любом из узлов или если какой-либо из узлов уже имеет схему. Используйте &lt;code&gt;mnesia:delete_schema/1&lt;/code&gt; , чтобы избавиться от старых ошибочных схем.</target>
        </trans-unit>
        <trans-unit id="46f82c21c22d4616aecf7c8b1c56ec2a760ab03c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mnesia:create_table/2&lt;/code&gt; writes records into the table &lt;code&gt;schema&lt;/code&gt;. This function, and all other schema manipulation functions, are implemented with the normal transaction management system. This guarantees that schema updates are performed on all nodes in an atomic manner.</source>
          <target state="translated">&lt;code&gt;mnesia:create_table/2&lt;/code&gt; записывает записи в &lt;code&gt;schema&lt;/code&gt; таблицы . Эта функция и все другие функции управления схемой реализуются с помощью обычной системы управления транзакциями. Это гарантирует, что обновления схемы выполняются на всех узлах атомарно.</target>
        </trans-unit>
        <trans-unit id="6674a440da17f45c124781667eb63ea358c2a30b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mnesia:dirty_update_counter/3&lt;/code&gt; is performed as an atomic operation although it is not protected by a transaction.</source>
          <target state="translated">&lt;code&gt;mnesia:dirty_update_counter/3&lt;/code&gt; выполняется как атомарная операция, хотя она не защищена транзакцией.</target>
        </trans-unit>
        <trans-unit id="b38f14a2c660b4fcf832b846b6f767d27365af15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mnesia_down&lt;/code&gt; is returned from all other nodes that hold a disc resident replica of the table.</source>
          <target state="translated">&lt;code&gt;mnesia_down&lt;/code&gt; возвращается от всех других узлов, которые содержат резидентную реплику таблицы.</target>
        </trans-unit>
        <trans-unit id="24fe5ec7d38e879b10d409aa6aba87736ab0122e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mnesia_down&lt;/code&gt;. A transaction involves records on a remote node, which became unavailable before the transaction was completed. Records are no longer available elsewhere in the network.</source>
          <target state="translated">&lt;code&gt;mnesia_down&lt;/code&gt; . Транзакция включает записи на удаленном узле, который стал недоступен до завершения транзакции. Записи больше не доступны в других частях сети.</target>
        </trans-unit>
        <trans-unit id="567e8d7f662b9af7f74d10c817224f15a1738818" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mntab&lt;/code&gt; is the name of the &lt;code&gt;Mnesia&lt;/code&gt; table to read data from.</source>
          <target state="translated">&lt;code&gt;mntab&lt;/code&gt; - это имя таблицы &lt;code&gt;Mnesia&lt;/code&gt; ,из которой следует читать данные.</target>
        </trans-unit>
        <trans-unit id="d466aa59733b9c7afb864608aa50ab84e769dcc6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mntab&lt;/code&gt; is the name of the &lt;code&gt;Mnesia&lt;/code&gt; table where the backed up data is to be placed. If the table does not exist, it is created automatically using configurable defaults. For information about configuring this behavior, see &lt;code&gt;Mnesia&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;mntab&lt;/code&gt; - это имя таблицы &lt;code&gt;Mnesia&lt;/code&gt; , в которую должны быть помещены резервные копии данных. Если таблица не существует, она создается автоматически с использованием настраиваемых значений по умолчанию. Для получения информации о настройке этого поведения см. &lt;code&gt;Mnesia&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9079c9ee03a2fc36036aa585f9863836334d2c47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mod&lt;/code&gt; is the name of the module containing the function to be run on the remote node.</source>
          <target state="translated">&lt;code&gt;mod&lt;/code&gt; - это имя модуля, содержащего функцию, которая будет запущена на удаленном узле.</target>
        </trans-unit>
        <trans-unit id="7fe0cc57f51f2f563f5070318f42a0f60a10fb63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mod_esi:deliver/2&lt;/code&gt; shall be used to generate the response to the client and &lt;code&gt;SessionID&lt;/code&gt; is an identifier that shall by used when calling this function, do not assume anything about the datatype. This function may be called several times to chunk the response data. Notice that the first chunk of data sent to the client must at least contain all HTTP header fields that the response will generate. If the first chunk does not contain the &lt;strong&gt;end of HTTP header&lt;/strong&gt;, that is, &lt;code&gt;&quot;\r\n\r\n&quot;,&lt;/code&gt; the server assumes that no HTTP header fields will be generated.</source>
          <target state="translated">&lt;code&gt;mod_esi:deliver/2&lt;/code&gt; должен использоваться для генерации ответа клиенту, а &lt;code&gt;SessionID&lt;/code&gt; - это идентификатор, который должен использоваться при вызове этой функции, ничего не предполагая о типе данных. Эта функция может быть вызвана несколько раз для фрагментации данных ответа. Обратите внимание, что первый фрагмент данных, отправленный клиенту, должен как минимум содержать все поля заголовка HTTP, которые будет сгенерирован ответом. Если первый блок не содержит &lt;strong&gt;конца заголовка HTTP&lt;/strong&gt; , то есть &lt;code&gt;&quot;\r\n\r\n&quot;,&lt;/code&gt; сервер предполагает, что поля заголовка HTTP не будут созданы.</target>
        </trans-unit>
        <trans-unit id="02e694fd8e5b2a45b9d55cc7b7826a876370412c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mod_trace&lt;/code&gt; is responsible for handling of TRACE requests. Trace is a new request method in HTTP/1.1. The intended use of trace requests is for testing. The body of the trace response is the request message that the responding web server or proxy received.</source>
          <target state="translated">&lt;code&gt;mod_trace&lt;/code&gt; отвечает за обработку запросов TRACE. Trace - это новый метод запроса в HTTP / 1.1. Предполагаемое использование запросов трассировки - для тестирования. Тело ответа трассировки - это сообщение запроса, полученное отвечающим веб-сервером или прокси-сервером.</target>
        </trans-unit>
        <trans-unit id="2eca4f7960a48514efc33c9daaac31280fab0080" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mode&lt;/code&gt; and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf62704361b32700ceed8b9c8103394aec1e8938" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mode&lt;/code&gt;, the &lt;code&gt;&lt;a href=&quot;#mode&quot;&gt;mode&lt;/a&gt;&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;mode&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#mode&quot;&gt;mode&lt;/a&gt;&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="2bc1b5285a427c281494717339716191820f816f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;modules&lt;/code&gt; - All modules &lt;strong&gt;introduced&lt;/strong&gt; by this application. &lt;code&gt;systools&lt;/code&gt; uses this list when generating boot scripts and tar files. A module must be defined in only one application. Defaults to &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;modules&lt;/code&gt; - все модули, &lt;strong&gt;представленные&lt;/strong&gt; этим приложением. &lt;code&gt;systools&lt;/code&gt; использует этот список при создании сценариев загрузки и файлов tar. Модуль должен быть определен только в одном приложении. По умолчанию &lt;code&gt;[]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="174a7f88b7a6eb2b8bf56c05ce0a6e77c48d7c50" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;modules&lt;/code&gt; are to be a list with one element &lt;code&gt;[Module]&lt;/code&gt;, where &lt;code&gt;Module&lt;/code&gt; is the name of the callback module, if the child process is a supervisor, gen_server, gen_statem. If the child process is a gen_event, the value shall be &lt;code&gt;dynamic&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;modules&lt;/code&gt; должны быть списком с одним элементом &lt;code&gt;[Module]&lt;/code&gt; , где &lt;code&gt;Module&lt;/code&gt; - это имя модуля обратного вызова, если дочерний процесс является супервизором, gen_server, gen_statem. Если дочерний процесс является gen_event, значение должно быть &lt;code&gt;dynamic&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="34a0da6c5eaa18f549a88882bb9134e88c6f458e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;modules&lt;/code&gt; is used by the release handler during code replacement to determine which processes are using a certain module. As a rule of thumb, if the child process is a &lt;code&gt;supervisor&lt;/code&gt;, &lt;code&gt;gen_server&lt;/code&gt; or, &lt;code&gt;gen_statem&lt;/code&gt;, this is to be a list with one element &lt;code&gt;[Module]&lt;/code&gt;, where &lt;code&gt;Module&lt;/code&gt; is the callback module. If the child process is an event manager (&lt;code&gt;gen_event&lt;/code&gt;) with a dynamic set of callback modules, value &lt;code&gt;dynamic&lt;/code&gt; must be used. For more information about release handling, see &lt;code&gt; Release Handling&lt;/code&gt; in OTP Design Principles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da2a0d5417825c1c00e64aa8d17a85f6fc76ae13" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;modules&lt;/code&gt; is used by the release handler during code replacement to determine which processes are using a certain module. As a rule of thumb, if the child process is a &lt;code&gt;supervisor&lt;/code&gt;, &lt;code&gt;gen_server&lt;/code&gt; or, &lt;code&gt;gen_statem&lt;/code&gt;, this is to be a list with one element &lt;code&gt;[Module]&lt;/code&gt;, where &lt;code&gt;Module&lt;/code&gt; is the callback module. If the child process is an event manager (&lt;code&gt;gen_event&lt;/code&gt;) with a dynamic set of callback modules, value &lt;code&gt;dynamic&lt;/code&gt; must be used. For more information about release handling, see &lt;code&gt;Release Handling&lt;/code&gt; in OTP Design Principles.</source>
          <target state="translated">&lt;code&gt;modules&lt;/code&gt; используется обработчиком выпуска во время замены кода, чтобы определить, какие процессы используют определенный модуль. Как показывает опыт, если дочерний процесс является &lt;code&gt;supervisor&lt;/code&gt; , &lt;code&gt;gen_server&lt;/code&gt; или &lt;code&gt;gen_statem&lt;/code&gt; , это должен быть список с одним элементом &lt;code&gt;[Module]&lt;/code&gt; , где &lt;code&gt;Module&lt;/code&gt; - это модуль обратного вызова. Если дочерний процесс является диспетчером событий ( &lt;code&gt;gen_event&lt;/code&gt; ) с динамическим набором модулей обратного вызова, необходимо использовать значение &lt;code&gt;dynamic&lt;/code&gt; . Дополнительные сведения об обработке выпуска см. В разделе &lt;code&gt;Release Handling&lt;/code&gt; в принципах проектирования OTP.</target>
        </trans-unit>
        <trans-unit id="4876f5e9a1f661a63193eee3608f5279e00e9f89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;month/1&lt;/code&gt; converts the month &lt;code&gt;NthMonth&lt;/code&gt; as an integer (1-12) to an abbreviated string, that is:</source>
          <target state="translated">&lt;code&gt;month/1&lt;/code&gt; преобразует месяц &lt;code&gt;NthMonth&lt;/code&gt; как целое число (1-12) в сокращенную строку, то есть:</target>
        </trans-unit>
        <trans-unit id="fe31fb6205735e5ec4b71169af05275acea56476" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;move_xy&lt;/code&gt; is almost identical to &lt;code&gt;move_xx&lt;/code&gt;. The only difference is the use of the &lt;code&gt;yb()&lt;/code&gt; macro instead of &lt;code&gt;xb()&lt;/code&gt; to reference the destination register:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="372b1faae3b4202378e772ec2ba948e196923700" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;msacc&lt;/code&gt; allows the user to get a view of what the Erlang Run-Time system is spending its time doing. Has a very low overhead, which makes it useful to run in heavily loaded systems to get some idea of where to start doing more granular profiling.</source>
          <target state="translated">&lt;code&gt;msacc&lt;/code&gt; позволяет пользователю получить представление о том, на что система времени выполнения Erlang тратит свое время. Имеет очень низкие накладные расходы, что делает его полезным для работы в сильно загруженных системах, чтобы получить представление о том, с чего начать более детальное профилирование.</target>
        </trans-unit>
        <trans-unit id="b6a46ad591043ab4ae0fea0e7f2898189d63d07a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;msg-&amp;gt;to&lt;/code&gt; and &lt;code&gt;msg-&amp;gt;from&lt;/code&gt; contain the pids of the sender and recipient of the link or unlink.</source>
          <target state="translated">&lt;code&gt;msg-&amp;gt;to&lt;/code&gt; и &lt;code&gt;msg-&amp;gt;from&lt;/code&gt; содержат идентификаторы отправителя и получателя ссылки или отмены ссылки.</target>
        </trans-unit>
        <trans-unit id="4cf8ae8a05e8bb032f0bf6cf2d8b798baa20d8c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;msg&lt;/code&gt; is a pointer to an &lt;code&gt;erlang_msg&lt;/code&gt; structure and contains information on the message received.</source>
          <target state="translated">&lt;code&gt;msg&lt;/code&gt; является указателем на структуру &lt;code&gt;erlang_msg&lt;/code&gt; и содержит информацию о полученном сообщении.</target>
        </trans-unit>
        <trans-unit id="22c0db150f06272113cf3e563d8f9e1095dd87d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;msg&lt;/code&gt; is invalid.</source>
          <target state="translated">&lt;code&gt;msg&lt;/code&gt; недействительно.</target>
        </trans-unit>
        <trans-unit id="d2c1fe6cff458d23939c5800c42422a4f581bbe6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;msg&lt;/code&gt; is structure of type &lt;code&gt;erlang_msg&lt;/code&gt; and contains information on the message received. For a description of the &lt;code&gt;erlang_msg&lt;/code&gt; format, see &lt;code&gt;&lt;a href=&quot;#ei_receive_msg&quot;&gt; ei_receive_msg&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1147a6079cbd57aaa4dfbf2532b4f6db49e2c8eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;msg&lt;/code&gt; is structure of type &lt;code&gt;erlang_msg&lt;/code&gt; and contains information on the message received. For a description of the &lt;code&gt;erlang_msg&lt;/code&gt; format, see &lt;code&gt;&lt;a href=&quot;#ei_receive_msg&quot;&gt;ei_receive_msg&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;msg&lt;/code&gt; - это структура типа &lt;code&gt;erlang_msg&lt;/code&gt; , содержащая информацию о полученном сообщении. Для описания &lt;code&gt;erlang_msg&lt;/code&gt; формата см &lt;code&gt;&lt;a href=&quot;#ei_receive_msg&quot;&gt;ei_receive_msg&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="20165fce6029f6b12357cbf628fa9de97c536db8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;msg&lt;/code&gt; is the Erlang term to be sent.</source>
          <target state="translated">&lt;code&gt;msg&lt;/code&gt; - это отправляемый термин Erlang.</target>
        </trans-unit>
        <trans-unit id="bc5255648412b02a4f9b38e4d992a126891957fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;msgtype&lt;/code&gt; identifies the type of message, and is one of the following:</source>
          <target state="translated">&lt;code&gt;msgtype&lt;/code&gt; определяет тип сообщения и может быть одним из следующих:</target>
        </trans-unit>
        <trans-unit id="dbfc40aa62adc558872dc112f3dcd085f1f3c0d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mtx&lt;/code&gt; is a pointer to a mutex to destroy.</source>
          <target state="translated">&lt;code&gt;mtx&lt;/code&gt; - это указатель на уничтожаемый мьютекс.</target>
        </trans-unit>
        <trans-unit id="6d81444be058267cf4efbf703c68af2992a43a56" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mtx&lt;/code&gt; is a pointer to a mutex to lock.</source>
          <target state="translated">&lt;code&gt;mtx&lt;/code&gt; - это указатель на мьютекс, который нужно заблокировать.</target>
        </trans-unit>
        <trans-unit id="5936c828bb2d79c6205b045b38c650dc9143623b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mtx&lt;/code&gt; is a pointer to a mutex to try to lock.</source>
          <target state="translated">&lt;code&gt;mtx&lt;/code&gt; - это указатель на мьютекс, который нужно заблокировать.</target>
        </trans-unit>
        <trans-unit id="3eb0e6be023472e5e5f0684561604b16264eeed6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mtx&lt;/code&gt; is a pointer to a mutex to unlock.</source>
          <target state="translated">&lt;code&gt;mtx&lt;/code&gt; - это указатель на мьютекс, который нужно разблокировать.</target>
        </trans-unit>
        <trans-unit id="25674df362fe7127698044f736e6a5bccb2c4c1c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mtx&lt;/code&gt; is a pointer to an initialized mutex.</source>
          <target state="translated">&lt;code&gt;mtx&lt;/code&gt; - это указатель на инициализированный мьютекс.</target>
        </trans-unit>
        <trans-unit id="3c5b24424f7a846897e6dcfd9abec76c096523c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;multi_lookup&lt;/code&gt; extracts all &lt;code&gt;{Key,Value}&lt;/code&gt; tuples from an &lt;code&gt;ETSTable&lt;/code&gt; and returns &lt;strong&gt;all&lt;/strong&gt;&lt;code&gt;Values&lt;/code&gt; associated with &lt;code&gt;Key&lt;/code&gt; in a list.</source>
          <target state="translated">&lt;code&gt;multi_lookup&lt;/code&gt; извлекает все кортежи &lt;code&gt;{Key,Value}&lt;/code&gt; из &lt;code&gt;ETSTable&lt;/code&gt; и возвращает &lt;strong&gt;все &lt;/strong&gt; &lt;code&gt;Values&lt;/code&gt; связанные с &lt;code&gt;Key&lt;/code&gt; в списке.</target>
        </trans-unit>
        <trans-unit id="d49b62334dd0db4dc2fedcbf91c9bb076556cc52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;n1&lt;/code&gt;, &lt;code&gt;n2&lt;/code&gt;, and &lt;code&gt;n3&lt;/code&gt; can be seen as one big number &lt;code&gt;n1*2^64+n2*2^32+n3&lt;/code&gt;, which is to be chosen uniquely for each reference created for a given C-node.</source>
          <target state="translated">&lt;code&gt;n1&lt;/code&gt; , &lt;code&gt;n2&lt;/code&gt; и &lt;code&gt;n3&lt;/code&gt; можно рассматривать как одно большое число &lt;code&gt;n1*2^64+n2*2^32+n3&lt;/code&gt; , которое следует выбирать уникально для каждой ссылки, созданной для данного C-узла.</target>
        </trans-unit>
        <trans-unit id="8bbdff02f87969d40c63d8203eaf115735c0f606" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;n&lt;/code&gt; - NIL (&lt;code&gt;[]&lt;/code&gt;, the empty list).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78e6f1eda520d11a5eb3b31dd39d407ac7cb655c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;n&lt;/code&gt; - NIL or the empty list. (Will not be stored in the loaded code.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fd292a665c7c30f1d00a7e90ee7c62733e8db29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;n&lt;/code&gt; is a value to be converted to an Erlang integer.</source>
          <target state="translated">&lt;code&gt;n&lt;/code&gt; - значение, которое нужно преобразовать в целое число Эрланга.</target>
        </trans-unit>
        <trans-unit id="d099369481ceff3dd7587926a74ba6b8dc5743a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;n&lt;/code&gt; is a value to be converted to an Erlang unsigned integer.</source>
          <target state="translated">&lt;code&gt;n&lt;/code&gt; - значение, которое нужно преобразовать в целое число без знака Эрланга.</target>
        </trans-unit>
        <trans-unit id="0f5ea2f8a335ce2ed24182b2525ae37a7cb70475" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;n_fragments&lt;/code&gt; regulates how many fragments that the table currently has. This property can explicitly be set at table creation and later be changed with &lt;code&gt;{add_frag, NodesOrDist}&lt;/code&gt; or &lt;code&gt;del_frag&lt;/code&gt;. &lt;code&gt;n_fragments&lt;/code&gt; defaults to &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;n_fragments&lt;/code&gt; регулирует количество фрагментов в таблице в настоящее время. Это свойство можно явно задать при создании таблицы, а затем изменить с помощью &lt;code&gt;{add_frag, NodesOrDist}&lt;/code&gt; или &lt;code&gt;del_frag&lt;/code&gt; . &lt;code&gt;n_fragments&lt;/code&gt; по умолчанию &lt;code&gt;1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1c5a457d41e6ae7e94e7e3d8c8a26bc2b3e9197c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;n_objects&lt;/code&gt; specifies how many results are to be returned in each chunk to QLC.</source>
          <target state="translated">&lt;code&gt;n_objects&lt;/code&gt; указывает, сколько результатов должно быть возвращено в каждом блоке QLC.</target>
        </trans-unit>
        <trans-unit id="3c6a49a98ce970577a69add0b2ce5dd0761ad6df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name : string&lt;/code&gt; :: Registered name. Ex. &lt;code&gt;&quot;logger&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;name : string&lt;/code&gt; :: Зарегистрированное имя. Ex. &lt;code&gt;&quot;logger&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5f891725c21b2707440243c2bc9084bb45473388" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt; is a string identifying the created condition variable. It is used to identify the condition variable in planned future debug functionality.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; - это строка, определяющая созданную переменную условия. Он используется для идентификации переменной условия в запланированных будущих функциях отладки.</target>
        </trans-unit>
        <trans-unit id="9005585938ef363159ea0e38ae100ad8b0083ce7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt; is a string identifying the created key. It is used to identify the key in planned future debug functionality.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; - строка, идентифицирующая созданный ключ. Он используется для определения ключа в запланированных будущих функциях отладки.</target>
        </trans-unit>
        <trans-unit id="e58479a0f49a425ef872611cf710aacd2c9c6c74" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt; is a string identifying the created mutex. It is used to identify the mutex in debug functionality (see note).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fee59da4861c233d62875099989d331d001a77da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt; is a string identifying the created mutex. It is used to identify the mutex in planned future debug functionality.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; - это строка, идентифицирующая созданный мьютекс. Он используется для идентификации мьютекса в запланированных будущих функциях отладки.</target>
        </trans-unit>
        <trans-unit id="8eb2cff5df38984b94495ea90c798f5130c71e9e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt; is a string identifying the created rwlock. It is used to identify the rwlock in debug functionality (see note about the &lt;code&gt;&lt;a href=&quot;#lock_checker&quot;&gt;lock checker&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bc55479881a50f624c0787926ae8ec6c27e0224" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt; is a string identifying the created rwlock. It is used to identify the rwlock in planned future debug functionality.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; - строка, идентифицирующая созданный rwlock. Он используется для определения rwlock в запланированных будущих функциях отладки.</target>
        </trans-unit>
        <trans-unit id="91885e35be8ed3cdfd57070017e0699b72001e5a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt; is a string identifying the created thread options. It is used to identify the thread options in planned future debug functionality.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; - это строка, определяющая параметры созданного потока. Он используется для определения параметров потока в запланированных будущих функциях отладки.</target>
        </trans-unit>
        <trans-unit id="4e31c0e3a151e7e9fd2582a1217ca703e8c6e0a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt; is the name of an Erlang variable.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; - это имя переменной Erlang.</target>
        </trans-unit>
        <trans-unit id="8ba02d1316dffaa7b68ab37e7cabdfac2a3c0bb1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt; is the name that is to be looked up in &lt;code&gt;global&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; - это имя, которое нужно искать в &lt;code&gt;global&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9d5f477a2f79558137ade0d9eae972259ebd80ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt; is the name to register in &lt;code&gt;global&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; - это имя для регистрации в &lt;code&gt;global&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c4b71ebb0fda30fdf6c7946ed1028e59dded179e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt; is the name to unregister from &lt;code&gt;global&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; это имя , которое разрегистрировать от &lt;code&gt;global&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d79ecca34f6c2aacf2c6870aed8fce76455f8934" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt; specifies a name for the variable.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; определяет имя переменной.</target>
        </trans-unit>
        <trans-unit id="769cceefe1f47133ec711e95ce5be764e5817ea0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;native&lt;/code&gt; (use system calls)</source>
          <target state="translated">&lt;code&gt;native&lt;/code&gt; (использовать системные вызовы)</target>
        </trans-unit>
        <trans-unit id="c868fc11902a21e9495c0a11e40b16c7d9e8fd16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ncurses&lt;/code&gt;, &lt;code&gt;termcap&lt;/code&gt;, or &lt;code&gt;termlib&lt;/code&gt; -- The development headers and libraries are needed, often known as &lt;code&gt;ncurses-devel&lt;/code&gt;. Use &lt;code&gt;--without-termcap&lt;/code&gt; to build without any of these libraries. Note that in this case only the old shell (without any line editing) can be used.</source>
          <target state="translated">&lt;code&gt;ncurses&lt;/code&gt; , &lt;code&gt;termcap&lt;/code&gt; или &lt;code&gt;termlib&lt;/code&gt; - необходимы заголовки и библиотеки для разработки, часто известные как &lt;code&gt;ncurses-devel&lt;/code&gt; . Используйте &lt;code&gt;--without-termcap&lt;/code&gt; для сборки без какой-либо из этих библиотек. Обратите внимание, что в этом случае можно использовать только старую оболочку (без редактирования строки).</target>
        </trans-unit>
        <trans-unit id="4cb421db8786573c2d90d153eed83c0fd7c21add" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;need : integer&lt;/code&gt; :: Heap need. Ex. &lt;code&gt;2&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;need : integer&lt;/code&gt; :: Heap need. Ex. &lt;code&gt;2&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="04f4489712d3c89f2b4be69a6634b8131e4bd2d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nelem&lt;/code&gt; indicates the number of elements stored in the registry. It includes objects that are deleted but not purged.</source>
          <target state="translated">&lt;code&gt;nelem&lt;/code&gt; указывает количество элементов, хранящихся в реестре. Он включает объекты, которые были удалены, но не очищены.</target>
        </trans-unit>
        <trans-unit id="e7b6371a40fb9455fad414b3df774c818c7f3d0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nested_transaction&lt;/code&gt;. Nested transactions are not allowed in this context.</source>
          <target state="translated">&lt;code&gt;nested_transaction&lt;/code&gt; . Вложенные транзакции в этом контексте недопустимы.</target>
        </trans-unit>
        <trans-unit id="7d2ae966a7504a3172c64d90cc0c533a5d535f0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;net:broadcast/3&lt;/code&gt; (use rpc:eval_everywhere/3 instead)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf8c716b60dfaf1cdb454ec676f282e17c9fbbae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;net:call/4&lt;/code&gt; (use rpc:call/4 instead)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d86827b6dab6e3a5eaa0e394e280b737ac0ca76" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;net:cast/4&lt;/code&gt; (use rpc:cast/4 instead)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73b684420a1cc5ea2459921ea8f228556fbf0821" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;net:ping/1&lt;/code&gt; (use net_adm:ping/1 instead)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b9695516f9e14eb99ecfef2a962c4f1bcec6ed3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;net:relay/1&lt;/code&gt; (use slave:relay/1 instead)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4dc2dc9aa385f4a02f6eb240711418cbd374e96" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;net:sleep/1&lt;/code&gt; (use 'receive after T -&amp;gt; ok end' instead)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fc2b6c244fff1fe70ace444e757507dced6c537" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;net_adm&lt;/code&gt; manual page in Kernel</source>
          <target state="translated">&lt;code&gt;net_adm&lt;/code&gt; руководства net_adm в ядре</target>
        </trans-unit>
        <trans-unit id="1d5426b369889eee7c87754160b79b56b7c18acd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;net_kernel&lt;/code&gt; initiated the change of &lt;code&gt;net_ticktime&lt;/code&gt; to &lt;code&gt;NetTicktime&lt;/code&gt; seconds.</source>
          <target state="translated">&lt;code&gt;net_kernel&lt;/code&gt; инициировал изменение &lt;code&gt;net_ticktime&lt;/code&gt; на &lt;code&gt;NetTicktime&lt;/code&gt; секунд.</target>
        </trans-unit>
        <trans-unit id="cdcc9a34292ef88c7a62f0501732e3ae263fd743" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;net_kernel&lt;/code&gt; is currently changing &lt;code&gt;net_ticktime&lt;/code&gt; to &lt;code&gt;NetTicktime&lt;/code&gt; seconds.</source>
          <target state="translated">&lt;code&gt;net_kernel&lt;/code&gt; в настоящее время изменяет &lt;code&gt;net_ticktime&lt;/code&gt; на &lt;code&gt;NetTicktime&lt;/code&gt; секунд.</target>
        </trans-unit>
        <trans-unit id="7fa27e0f8d4084ef0de130edbef970fc568ef473" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;net_ticktime&lt;/code&gt; already has the value of &lt;code&gt;NetTicktime&lt;/code&gt; and is left unchanged.</source>
          <target state="translated">&lt;code&gt;net_ticktime&lt;/code&gt; уже имеет значение &lt;code&gt;NetTicktime&lt;/code&gt; и остается неизменным.</target>
        </trans-unit>
        <trans-unit id="760639fc9617306dbe2ce1727ab88ed2772d3eda" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;net_ticktime&lt;/code&gt; is &lt;code&gt;NetTicktime&lt;/code&gt; seconds.</source>
          <target state="translated">&lt;code&gt;net_ticktime&lt;/code&gt; - время &lt;code&gt;NetTicktime&lt;/code&gt; в секундах.</target>
        </trans-unit>
        <trans-unit id="4194f1bdbdb59175d9e98ce7bce52e4d06cc5f04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;newsize&lt;/code&gt; is the new size to make the registry. The number is increased to the nearest larger prime number.</source>
          <target state="translated">&lt;code&gt;newsize&lt;/code&gt; - это новый размер реестра. Число увеличивается до ближайшего большего простого числа.</target>
        </trans-unit>
        <trans-unit id="faeda9b26dc42069778e49870677d14ab5403be9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nil&lt;/code&gt; in the previous expression represents the empty list (&lt;code&gt;[]&lt;/code&gt;), which is regarded as a separate type from &lt;code&gt;list/0&lt;/code&gt;. That is why &lt;code&gt;nil &amp;lt; list&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d9ac12bfeb85194d6703f13ff62908d7dff3137" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nlist/1&lt;/code&gt; implies the current remote directory of the user.</source>
          <target state="translated">&lt;code&gt;nlist/1&lt;/code&gt; подразумевает текущий удаленный каталог пользователя.</target>
        </trans-unit>
        <trans-unit id="996bd783b3b0be1ac2fd7f1d1f7864a698f318a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;noAccess | noCreation | inconsistentValue | resourceUnavailable | inconsistentName | genErr&lt;/code&gt;(SNMPv2)</source>
          <target state="translated">&lt;code&gt;noAccess | noCreation | inconsistentValue | resourceUnavailable | inconsistentName | genErr&lt;/code&gt; (SNMPv2)</target>
        </trans-unit>
        <trans-unit id="c14f29fb4ebe8bd8a2dcabf138abc103e734c572" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;no_analyzed_modules&lt;/code&gt;, number of analyzed modules;</source>
          <target state="translated">&lt;code&gt;no_analyzed_modules&lt;/code&gt; , количество анализируемых модулей;</target>
        </trans-unit>
        <trans-unit id="36919705ab2ed85e787da97c4e019137e9726097" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;no_analyzed_modules&lt;/code&gt;, total number of &lt;code&gt;&lt;a href=&quot;#analyzed_module&quot;&gt;analyzed modules&lt;/a&gt;&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;no_analyzed_modules&lt;/code&gt; , общее количество &lt;code&gt;&lt;a href=&quot;#analyzed_module&quot;&gt;analyzed modules&lt;/a&gt;&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="247daf07bfeb0cf313c1ab73c118bdd56a4373e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;no_applications&lt;/code&gt;, number of applications;</source>
          <target state="translated">&lt;code&gt;no_applications&lt;/code&gt; , количество заявок;</target>
        </trans-unit>
        <trans-unit id="855d76897472ff9db8a9ed317585bf67aa23b49b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;no_applications&lt;/code&gt;, total number of applications (of all releases);</source>
          <target state="translated">&lt;code&gt;no_applications&lt;/code&gt; , общее количество приложений (всех релизов);</target>
        </trans-unit>
        <trans-unit id="4f0e51a4da187fedf95a7f531d9dfa0a174eb37d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;no_calls&lt;/code&gt; (*), number of calls of the application's modules, regarding instances of one function call in different lines as separate calls;</source>
          <target state="translated">&lt;code&gt;no_calls&lt;/code&gt; (*), количество вызовов модулей приложения, в отношении экземпляров одного вызова функции в разных строках как отдельных вызовов;</target>
        </trans-unit>
        <trans-unit id="370301c631577eec18b5ccc7eaaa194046fdf349" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;no_calls&lt;/code&gt; (*), number of calls of the release's modules, regarding instances of one function call in different lines as separate calls;</source>
          <target state="translated">&lt;code&gt;no_calls&lt;/code&gt; (*), количество вызовов модулей релиза, относительно экземпляров одного вызова функции в разных строках как отдельных вызовов;</target>
        </trans-unit>
        <trans-unit id="c93593df8ed4fcf1f94cc16ef3853f5868e322df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;no_calls&lt;/code&gt; (*), number of calls, regarding instances of one function call in different lines as separate calls;</source>
          <target state="translated">&lt;code&gt;no_calls&lt;/code&gt; (*), количество вызовов, относительно экземпляров одного вызова функции в разных строках как отдельных вызовов;</target>
        </trans-unit>
        <trans-unit id="1393436244f6630af5c0e5ff63ac5783ce91a856" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;no_calls&lt;/code&gt; (*), total number of calls (in all modules), regarding instances of one function call in different lines as separate calls;</source>
          <target state="translated">&lt;code&gt;no_calls&lt;/code&gt; (*), общее количество вызовов (во всех модулях) с учетом экземпляров одного вызова функции в разных строках как отдельных вызовов;</target>
        </trans-unit>
        <trans-unit id="d2d90de1c8b1a6e7443e04db5bab61e57e304f72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;no_calls&lt;/code&gt;. The sum of the number of resolved and unresolved calls:</source>
          <target state="translated">&lt;code&gt;no_calls&lt;/code&gt; . Сумма количества разрешенных и неразрешенных вызовов:</target>
        </trans-unit>
        <trans-unit id="af1e22dd263bf80de4de1df5f3df4fd3955182ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;no_conn&lt;/code&gt; - The connection is down to the node where the process is running. &lt;code&gt;Info={}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;no_conn&lt;/code&gt; - соединение не работает с узлом, на котором выполняется процесс. &lt;code&gt;Info={}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8c814217a417ac2d857d76edca4a5d41c91a647d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;no_dot_erlang.boot&lt;/code&gt; - Loads the code for and starts the applications Kernel and STDLIB. Skips loading the file &lt;code&gt;.erlang&lt;/code&gt;. Useful for scripts and other tools that are to behave the same irrespective of user preferences.</source>
          <target state="translated">&lt;code&gt;no_dot_erlang.boot&lt;/code&gt; - загружает код и запускает ядро ​​приложений и STDLIB. Пропускает загрузку файла &lt;code&gt;.erlang&lt;/code&gt; . Полезно для скриптов и других инструментов, которые должны вести себя одинаково независимо от предпочтений пользователя.</target>
        </trans-unit>
        <trans-unit id="f8159cf71197decb91bba2603f85ca3c5311257c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;no_exists&lt;/code&gt;. Tried to perform operation on non-existing (not-alive) item.</source>
          <target state="translated">&lt;code&gt;no_exists&lt;/code&gt; . Пытался выполнить операцию с несуществующим (неактивным) элементом.</target>
        </trans-unit>
        <trans-unit id="82885b597712907220180d0456fef06dc2e5ad77" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;no_function_calls&lt;/code&gt; (*), number of local calls, resolved external calls and unresolved calls of the application's modules;</source>
          <target state="translated">&lt;code&gt;no_function_calls&lt;/code&gt; (*), количество локальных вызовов, разрешенных внешних вызовов и неразрешенных вызовов модулей приложения;</target>
        </trans-unit>
        <trans-unit id="abad1ab806a090043a7399d16fc637d9d45bfa9d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;no_function_calls&lt;/code&gt; (*), number of local calls, resolved external calls and unresolved calls of the release's modules;</source>
          <target state="translated">&lt;code&gt;no_function_calls&lt;/code&gt; (*), количество локальных вызовов, разрешенных внешних вызовов и неразрешенных вызовов модулей релиза;</target>
        </trans-unit>
        <trans-unit id="927ea8a6ac92101eaeee49fc7759faa70479b07e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;no_function_calls&lt;/code&gt; (*), number of local calls, resolved external calls and unresolved calls;</source>
          <target state="translated">&lt;code&gt;no_function_calls&lt;/code&gt; (*), количество локальных вызовов, разрешенных внешних вызовов и неразрешенных вызовов;</target>
        </trans-unit>
        <trans-unit id="dddc264cec4aa69635153ca10c089b48a0f915cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;no_function_calls&lt;/code&gt; (*), total number of &lt;code&gt;&lt;a href=&quot;#local_call&quot;&gt;local calls&lt;/a&gt;&lt;/code&gt;, resolved &lt;code&gt;&lt;a href=&quot;#external_call&quot;&gt;external calls&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#unresolved_call&quot;&gt;unresolved calls&lt;/a&gt;&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;no_function_calls&lt;/code&gt; (*), общее количество &lt;code&gt;&lt;a href=&quot;#local_call&quot;&gt;local calls&lt;/a&gt;&lt;/code&gt; , разрешенных &lt;code&gt;&lt;a href=&quot;#external_call&quot;&gt;external calls&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;#unresolved_call&quot;&gt;unresolved calls&lt;/a&gt;&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="3f93645c3a2ad16c4c220fb0f5903bb022c20d75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;no_function_calls&lt;/code&gt;. The sum of the number of local calls, resolved external calls and unresolved calls:</source>
          <target state="translated">&lt;code&gt;no_function_calls&lt;/code&gt; . Сумма количества местных вызовов, разрешенных внешних вызовов и неразрешенных вызовов:</target>
        </trans-unit>
        <trans-unit id="5d54535e458072031c144f3342d1a1d99b65bc88" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;no_functions&lt;/code&gt; (*), number of local and exported functions of the application's modules;</source>
          <target state="translated">&lt;code&gt;no_functions&lt;/code&gt; (*), количество локальных и экспортируемых функций модулей приложения;</target>
        </trans-unit>
        <trans-unit id="6d9dd2a7d5654afbf1777e3b26dacb4c6829409f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;no_functions&lt;/code&gt; (*), number of local and exported functions of the release's modules;</source>
          <target state="translated">&lt;code&gt;no_functions&lt;/code&gt; (*), количество локальных и экспортируемых функций модулей релиза;</target>
        </trans-unit>
        <trans-unit id="edef508993f68f5059132aaa9faba0b60b516a90" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;no_functions&lt;/code&gt; (*), number of local and exported functions;</source>
          <target state="translated">&lt;code&gt;no_functions&lt;/code&gt; (*), количество локальных и экспортируемых функций;</target>
        </trans-unit>
        <trans-unit id="5cb4c090444b4ce0ceb1ab98992c1c0dccb91d53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;no_functions&lt;/code&gt; (*), total number of local and exported functions;</source>
          <target state="translated">&lt;code&gt;no_functions&lt;/code&gt; (*), общее количество локальных и экспортируемых функций;</target>
        </trans-unit>
        <trans-unit id="e39499dbf292fa55f350939b5fb99b2713fa9900" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;no_functions&lt;/code&gt;. Functions in library modules and the functions &lt;code&gt;module_info/0,1&lt;/code&gt; are not counted by &lt;code&gt;info&lt;/code&gt;. Assuming that &lt;code&gt;&quot;Extra := _:module_info/\&quot;(0|1)\&quot; + LM&quot;&lt;/code&gt; has been evaluated, the sum of the number of local and exported functions are:</source>
          <target state="translated">&lt;code&gt;no_functions&lt;/code&gt; . Функции в библиотечных модулях и функции &lt;code&gt;module_info/0,1&lt;/code&gt; не учитываются &lt;code&gt;info&lt;/code&gt; . Предполагая, что &lt;code&gt;&quot;Extra := _:module_info/\&quot;(0|1)\&quot; + LM&quot;&lt;/code&gt; был оценен, сумма количества локальных и экспортированных функций будет:</target>
        </trans-unit>
        <trans-unit id="1cb8c89ebdb82d14e0c41079ed0dccd8096d97e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;no_inter_function_calls&lt;/code&gt; (*), number of calls of the Inter Call Graph of the application's modules;</source>
          <target state="translated">&lt;code&gt;no_inter_function_calls&lt;/code&gt; (*), количество вызовов Inter Call Graph модулей приложения;</target>
        </trans-unit>
        <trans-unit id="efafb2a0b1387c320ddf78855347b5723dfca86b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;no_inter_function_calls&lt;/code&gt; (*), number of calls of the Inter Call Graph of the release's modules.</source>
          <target state="translated">&lt;code&gt;no_inter_function_calls&lt;/code&gt; (*), количество вызовов Inter Call Graph модулей релиза.</target>
        </trans-unit>
        <trans-unit id="d9cad2d263b0da974f0dda709e4093c104a7cbe4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;no_inter_function_calls&lt;/code&gt; (*), number of calls of the Inter Call Graph;</source>
          <target state="translated">&lt;code&gt;no_inter_function_calls&lt;/code&gt; (*), количество вызовов Графа между вызовами;</target>
        </trans-unit>
        <trans-unit id="fac15effd353ffc2744d4b07731c62d5be046974" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;no_inter_function_calls&lt;/code&gt; (*), total number of calls of the &lt;code&gt;&lt;a href=&quot;#inter_call_graph&quot;&gt;Inter Call Graph&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;no_inter_function_calls&lt;/code&gt; (*), общее количество вызовов Графа &lt;code&gt;&lt;a href=&quot;#inter_call_graph&quot;&gt;Inter Call Graph&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="95a89aeb94b0962e6b93fa571936e8b070543d0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;no_node_processor_spread&lt;/code&gt; - Like &lt;code&gt;processor_spread&lt;/code&gt;, but if multiple NUMA nodes exist, schedulers are spread over one NUMA node at a time, that is, all logical processors of one NUMA node are bound to schedulers in sequence.</source>
          <target state="translated">&lt;code&gt;no_node_processor_spread&lt;/code&gt; - Подобно &lt;code&gt;processor_spread&lt;/code&gt; , но если существует несколько узлов NUMA, планировщики распределяются по одному узлу NUMA за раз, то есть все логические процессоры одного узла NUMA последовательно связаны с планировщиками.</target>
        </trans-unit>
        <trans-unit id="a3b2211f23a7d4865f1f6e7f00b1e5d2ad18b34f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;no_node_thread_spread&lt;/code&gt; - Like &lt;code&gt;thread_spread&lt;/code&gt;, but if multiple Non-Uniform Memory Access (NUMA) nodes exist, schedulers are spread over one NUMA node at a time, that is, all logical processors of one NUMA node are bound to schedulers in sequence.</source>
          <target state="translated">&lt;code&gt;no_node_thread_spread&lt;/code&gt; - &lt;code&gt;thread_spread&lt;/code&gt; , но если существует несколько узлов с неоднородным доступом к памяти (NUMA), планировщики распределяются по одному узлу NUMA за раз, то есть все логические процессоры одного узла NUMA последовательно привязаны к планировщикам.</target>
        </trans-unit>
        <trans-unit id="117b2686f08dd4b68e920e9d37b568d3731f34bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;no_receiver&lt;/code&gt; - No information is delivered.</source>
          <target state="translated">&lt;code&gt;no_receiver&lt;/code&gt; - информация не доставляется.</target>
        </trans-unit>
        <trans-unit id="c05df0753367d81aac1fdf741efbac04e91311d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;no_releases&lt;/code&gt;, number of releases;</source>
          <target state="translated">&lt;code&gt;no_releases&lt;/code&gt; , количество релизов;</target>
        </trans-unit>
        <trans-unit id="3e2cdbfae050d374ccc76da5e3157afdfa1155d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;no_spread&lt;/code&gt; - Schedulers with close scheduler identifiers are bound as close as possible in hardware.</source>
          <target state="translated">&lt;code&gt;no_spread&lt;/code&gt; - Планировщики с близкими идентификаторами планировщика связаны как можно ближе аппаратно.</target>
        </trans-unit>
        <trans-unit id="65646aed00a01b3c49898a59a3ec41c01f4675cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;no_transaction&lt;/code&gt;. Operation not allowed outside transactions.</source>
          <target state="translated">&lt;code&gt;no_transaction&lt;/code&gt; . Операция запрещена вне транзакций.</target>
        </trans-unit>
        <trans-unit id="512a2f0959a213189e7c84acd2e0c845f0a8038d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;noconnection&lt;/code&gt; if &lt;code&gt;PidOrPort&lt;/code&gt; is remote and a connection between the nodes could not be established or was severed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d6d1672b50bb8ba17a6c0778791296b674a11a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;node&lt;/code&gt; is like &lt;code&gt;setup&lt;/code&gt;, but with a built-in behaviour: it starts a slave node for the duration of the tests. The atom &lt;code&gt;Node&lt;/code&gt; should have the format &lt;code&gt;nodename@full.machine.name&lt;/code&gt;, and &lt;code&gt;Args&lt;/code&gt; are the optional arguments to the new node; see &lt;code&gt;slave:start_link/3&lt;/code&gt; for details.</source>
          <target state="translated">&lt;code&gt;node&lt;/code&gt; похож на &lt;code&gt;setup&lt;/code&gt; , но со встроенным поведением: он запускает подчиненный узел на время тестов. Атом &lt;code&gt;Node&lt;/code&gt; должен иметь формат &lt;code&gt;nodename@full.machine.name&lt;/code&gt; и &lt;code&gt;Args&lt;/code&gt; являются необязательными аргументами к новому узлу; подробнее см. &lt;code&gt;slave:start_link/3&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ef2a36547ba068cc5c118ce8ed9807723932d8b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;node&lt;/code&gt; is the name of the C-node.</source>
          <target state="translated">&lt;code&gt;node&lt;/code&gt; - это имя C-узла.</target>
        </trans-unit>
        <trans-unit id="f1fff716424eb26367402b1770fad337312150c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;node&lt;/code&gt; is the name of the remote node.</source>
          <target state="translated">&lt;code&gt;node&lt;/code&gt; - это имя удаленного узла.</target>
        </trans-unit>
        <trans-unit id="1db03ee3209b654c2bc23d0ef7b742b288c3bcbd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;node&lt;/code&gt; is the node name. It is to be of the form &lt;strong&gt;alivename@hostname&lt;/strong&gt;.</source>
          <target state="translated">&lt;code&gt;node&lt;/code&gt; - это имя узла. Он должен иметь форму &lt;strong&gt;alivename @ hostname&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="c16649d9dacf014610a0a7e953b7fcc527b42dca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;node&lt;/code&gt; refers to Non-Uniform Memory Access (NUMA) nodes. &lt;code&gt;thread&lt;/code&gt; refers to hardware threads (for example, Intel hyper-threads).</source>
          <target state="translated">&lt;code&gt;node&lt;/code&gt; относится к узлам с неоднородным доступом к памяти (NUMA). &lt;code&gt;thread&lt;/code&gt; - это аппаратные потоки (например, гиперпотоки Intel).</target>
        </trans-unit>
        <trans-unit id="3d6f3c9d02dbc0c583af9223ba277621196dfd9e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;node_not_running&lt;/code&gt;. Node is not running.</source>
          <target state="translated">&lt;code&gt;node_not_running&lt;/code&gt; . Узел не запущен.</target>
        </trans-unit>
        <trans-unit id="052d7914127418dd7d905d2d66a2c30a0b4f0c6f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nodedown&lt;/code&gt; messages are delivered after the corresponding node has disappeared in results from &lt;code&gt;erlang:nodes/X&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;nodedown&lt;/code&gt; сообщения доставляются после того , как соответствующий узел исчез в результатах &lt;code&gt;erlang:nodes/X&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="88213682ffe2404c0b5313c91b5ee679a66af1e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nodedown&lt;/code&gt; messages are not delivered until all messages from the remote node that have been passed through the connection have been delivered.</source>
          <target state="translated">&lt;code&gt;nodedown&lt;/code&gt; Сообщения nodedown не доставляются до тех пор, пока не будут доставлены все сообщения от удаленного узла, которые прошли через соединение.</target>
        </trans-unit>
        <trans-unit id="e2b33fd4c08c6edfd10698a405956ea09f72a3c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nodes&lt;/code&gt; - A list of node names (or an atom describing a list of nodes) defining where to open the table. Its up to the user to ensure that mnesia is actually running on the specified nodes.</source>
          <target state="translated">&lt;code&gt;nodes&lt;/code&gt; - список имен узлов (или атом, описывающий список узлов), определяющий, где открыть таблицу. Пользователь должен убедиться, что mnesia действительно работает на указанных узлах.</target>
        </trans-unit>
        <trans-unit id="9d5f3c6afe58777d4fdf80a91b58e137c8361c9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nodeup&lt;/code&gt; messages are delivered after the corresponding node appears in results from &lt;code&gt;erlang:nodes/X&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;nodeup&lt;/code&gt; сообщения доставляются после соответствующих узлов появляется в результатах &lt;code&gt;erlang:nodes/X&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4408f46c27fe4c804ac77e2e4cada1280ac26afa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nodeup&lt;/code&gt; messages are delivered before delivery of any message from the remote node passed through the newly established connection.</source>
          <target state="translated">&lt;code&gt;nodeup&lt;/code&gt; Сообщения nodeup доставляются до доставки любого сообщения от удаленного узла, прошедшего через вновь установленное соединение.</target>
        </trans-unit>
        <trans-unit id="1a10e15ee092631f16aa5fde85bac87e28461900" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;none&lt;/code&gt; (no &lt;code&gt;PhraseArgs&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;none&lt;/code&gt; (нет &lt;code&gt;PhraseArgs&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="b8ff9db9ac6c14ce550a866f267c9e7f5e48ac09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;noproc&lt;/code&gt; is sent immediately if &lt;code&gt;PidOrPort&lt;/code&gt; does not exist at the time of linking (if the caller is trapping exits or &lt;code&gt;PidOrPort&lt;/code&gt; is remote).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28c2c9dbd3e254fbac7255e0733edb2a01a5dc28" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;normal&lt;/code&gt; also if the application is distributed and started at the current node because of a failover from another node, and the application specification key &lt;code&gt;start_phases == undefined&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;normal&lt;/code&gt; также, если приложение распределяется и запускается на текущем узле из-за переключения на другой узел, а ключ спецификации приложения &lt;code&gt;start_phases == undefined&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4e0c035acf102998ae94e6e36b59b6b942f61072" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;normal&lt;/code&gt; if it is a normal startup.</source>
          <target state="translated">&lt;code&gt;normal&lt;/code&gt; если это нормальный запуск.</target>
        </trans-unit>
        <trans-unit id="ca08e3c6460172425bba8df94434b0ade8addb4c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;normal&lt;/code&gt;, if the event handler has been removed because of a call to &lt;code&gt;delete_handler/3&lt;/code&gt;, or &lt;code&gt;remove_handler&lt;/code&gt; has been returned by a callback function (see below).</source>
          <target state="translated">&lt;code&gt;normal&lt;/code&gt; , если обработчик событий был удален из-за вызова &lt;code&gt;delete_handler/3&lt;/code&gt; или &lt;code&gt;remove_handler&lt;/code&gt; был возвращен функцией обратного вызова (см. ниже).</target>
        </trans-unit>
        <trans-unit id="d640428a232dc900f184e1be43e865d7734ba6fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;not_a_db_node&lt;/code&gt;. A node was mentioned that does not exist in the schema.</source>
          <target state="translated">&lt;code&gt;not_a_db_node&lt;/code&gt; . Был упомянут узел, которого нет в схеме.</target>
        </trans-unit>
        <trans-unit id="49d589507dc218c4682e6aaaeea5ed23e61d1835" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;notification_delivery_info()&lt;/code&gt; - The information is delivered via a function call according to this data. See the &lt;code&gt;&lt;a href=&quot;#data_types&quot;&gt;DATA TYPES&lt;/a&gt;&lt;/code&gt; section above for details.</source>
          <target state="translated">&lt;code&gt;notification_delivery_info()&lt;/code&gt; - информация доставляется через вызов функции в соответствии с этими данными. Подробнее см. В разделе &lt;code&gt;&lt;a href=&quot;#data_types&quot;&gt;DATA TYPES&lt;/a&gt;&lt;/code&gt; выше.</target>
        </trans-unit>
        <trans-unit id="6a1792ff80f20f1b5a27cac8e032c63e0a675629" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;notify.conf&lt;/code&gt;: see &lt;code&gt;&lt;a href=&quot;#notify&quot;&gt;Notify Definitions&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;notify.conf&lt;/code&gt; : см. &lt;code&gt;&lt;a href=&quot;#notify&quot;&gt;Notify Definitions&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6a0c457d12d899dd091d4d9d5e75351206149c80" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;notify/1&lt;/code&gt; does not fail even if the specified event manager does not exist, unless it is specified as &lt;code&gt;Name&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;notify/1&lt;/code&gt; не завершается ошибкой, даже если указанный диспетчер событий не существует, если он не указан как &lt;code&gt;Name&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0c7777adceda0588e49fd9e8d13a21ce238eb170" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;notify/2&lt;/code&gt; is asynchronous and returns immediately after the event notification has been sent. &lt;code&gt;sync_notify/2&lt;/code&gt; is synchronous in the sense that it returns &lt;code&gt;ok&lt;/code&gt; after the event has been handled by all event handlers.</source>
          <target state="translated">&lt;code&gt;notify/2&lt;/code&gt; является асинхронным и возвращается сразу после отправки уведомления о событии. &lt;code&gt;sync_notify/2&lt;/code&gt; является синхронным в том смысле, что он возвращает &lt;code&gt;ok&lt;/code&gt; после того, как событие было обработано всеми обработчиками событий.</target>
        </trans-unit>
        <trans-unit id="cbf7df3164734a2d89b4e5c6fb47a29936b9621e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;npos&lt;/code&gt; indicates the number of unique positions that are occupied in the registry.</source>
          <target state="translated">&lt;code&gt;npos&lt;/code&gt; указывает количество уникальных позиций, которые занимают в реестре.</target>
        </trans-unit>
        <trans-unit id="2eec85f72561346cbcf55f313290a698cf790a12" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nsswitch_conf&lt;/code&gt; (Unix nsswitch.conf)</source>
          <target state="translated">&lt;code&gt;nsswitch_conf&lt;/code&gt; (Unix nsswitch.conf)</target>
        </trans-unit>
        <trans-unit id="94d339f86242bdbeba773c1ed946cc8d90d5e576" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nteventlog&lt;/code&gt; provides a generic interface to the Windows event log. It is part of the OS_Mon application, see &lt;code&gt;os_mon(6)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b33fc178fa190d609bda44ab93d4388cd8bfc865" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nteventlog&lt;/code&gt; provides a generic interface to the Windows event log. It is part of the OS_Mon application, see &lt;code&gt;os_mon(6)&lt;/code&gt;. Available for Windows versions where the event log is available. That is, not for Windows 98 and some other older Windows versions, but for most (all?) newer Windows versions.</source>
          <target state="translated">&lt;code&gt;nteventlog&lt;/code&gt; предоставляет общий интерфейс для журнала событий Windows. Это часть приложения OS_Mon, см. &lt;code&gt;os_mon(6)&lt;/code&gt; . Доступно для версий Windows, в которых доступен журнал событий. То есть не для Windows 98 и некоторых других старых версий Windows, а для большинства (всех?) Более новых версий Windows.</target>
        </trans-unit>
        <trans-unit id="724cb43a4461868a7cf85655c3f71fd1ea4ee699" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;number&lt;/code&gt; and &lt;code&gt;creation&lt;/code&gt; are arbitrary numbers. Notice that these are limited in precision, so only the low 18 and 2 bits of these numbers are used.</source>
          <target state="translated">&lt;code&gt;number&lt;/code&gt; и &lt;code&gt;creation&lt;/code&gt; - произвольные числа. Обратите внимание, что их точность ограничена, поэтому используются только младшие 18 и 2 бита этих чисел.</target>
        </trans-unit>
        <trans-unit id="1d1bb0f0a6792413c00fa6016712868b7695b55f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;number&lt;/code&gt; is to be chosen uniquely for each reference created for a given C-node.</source>
          <target state="translated">&lt;code&gt;number&lt;/code&gt; должен быть выбран уникально для каждой ссылки, созданной для данного C-узла.</target>
        </trans-unit>
        <trans-unit id="1355204958af6b103c98549b7fc8c56811824b4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;number&lt;/code&gt; is used by &lt;code&gt;erl_connect_init()&lt;/code&gt; to construct the actual node name. In Example 2 below, &lt;strong&gt;&quot;c17@a.DNS.name&quot;&lt;/strong&gt; is the resulting node name.</source>
          <target state="translated">&lt;code&gt;number&lt;/code&gt; используется &lt;code&gt;erl_connect_init()&lt;/code&gt; для создания фактического имени узла. В приведенном ниже примере 2 &lt;strong&gt;&quot;c17@a.DNS.name&quot;&lt;/strong&gt; является результирующим именем узла.</target>
        </trans-unit>
        <trans-unit id="79f9dadce8ee4cdc1f698d2d1fb9e7f783442ec2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;number&lt;/code&gt;, &lt;code&gt;serial&lt;/code&gt;, and &lt;code&gt;creation&lt;/code&gt; are arbitrary numbers. Notice that these are limited in precision, so only the low 15, 3, and 2 bits of these numbers are used.</source>
          <target state="translated">&lt;code&gt;number&lt;/code&gt; , &lt;code&gt;serial&lt;/code&gt; и &lt;code&gt;creation&lt;/code&gt; - произвольные числа. Обратите внимание, что их точность ограничена, поэтому используются только младшие 15, 3 и 2 бита этих чисел.</target>
        </trans-unit>
        <trans-unit id="e9d930ab82a22b8379cfe0c39b14e88db889b25b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nxdomain&lt;/code&gt; - Hostname or domain name cannot be found</source>
          <target state="translated">&lt;code&gt;nxdomain&lt;/code&gt; - имя хоста или имя домена не может быть найдено</target>
        </trans-unit>
        <trans-unit id="614d7c30c49dc184868ba92d7ff31fb238df82a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;o&lt;/code&gt; - Overflow. An untagged integer that does not fit in a machine word.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d143797690bba824e96e4e940c127c94ee42769" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;o&lt;/code&gt; - Overflow. If the value for an &lt;code&gt;u&lt;/code&gt; operand does not fit in a machine word, the type of the operand will be changed to &lt;code&gt;o&lt;/code&gt; (with no associated value). Currently only used internally in the loader in the guard constraint function &lt;code&gt;binary_too_big()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56a2a8054663d169121aa0cad1a8723367694a59" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;observer&lt;/code&gt; is a GUI tool that can connect to remote nodes and display a variety of information about the running system.</source>
          <target state="translated">&lt;code&gt;observer&lt;/code&gt; - это инструмент с графическим интерфейсом, который может подключаться к удаленным узлам и отображать различную информацию о работающей системе.</target>
        </trans-unit>
        <trans-unit id="dce652cece3249245763b1426afca45ac811d3c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;obuf&lt;/code&gt; is a pointer to an &lt;code&gt;ei_reg_stat&lt;/code&gt; structure, defined as follows:</source>
          <target state="translated">&lt;code&gt;obuf&lt;/code&gt; - это указатель на структуру &lt;code&gt;ei_reg_stat&lt;/code&gt; , определяемую следующим образом:</target>
        </trans-unit>
        <trans-unit id="85e0627fc7b8ba286acf6b1dc43837e32ecda87f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;obuf&lt;/code&gt; is a pointer to an &lt;code&gt;ei_reg_tabstat&lt;/code&gt; structure, defined as follows:</source>
          <target state="translated">&lt;code&gt;obuf&lt;/code&gt; - это указатель на структуру &lt;code&gt;ei_reg_tabstat&lt;/code&gt; , определяемую следующим образом:</target>
        </trans-unit>
        <trans-unit id="b77505716641f56accb4bd8d20de08b566a0749c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ok&lt;/code&gt; = the transfer is complete.</source>
          <target state="translated">&lt;code&gt;ok&lt;/code&gt; = передача завершена.</target>
        </trans-unit>
        <trans-unit id="afa1fee92c97ddb794986fcd3d2868cd4a22401e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;old_heap : integer&lt;/code&gt; :: Old heap word size. Ex. &lt;code&gt;233&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;old_heap : integer&lt;/code&gt; :: Размер слова старой кучи. Ex. &lt;code&gt;233&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="61a817f913661b77c2a4bc6e8aba530abb4ceb28" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;one_for_all&lt;/code&gt; - If one child process terminates and is to be restarted, all other child processes are terminated and then all child processes are restarted.</source>
          <target state="translated">&lt;code&gt;one_for_all&lt;/code&gt; - Если один дочерний процесс завершается и должен быть перезапущен, все остальные дочерние процессы завершаются, а затем все дочерние процессы перезапускаются.</target>
        </trans-unit>
        <trans-unit id="693ff57ce00caf398f99ebaa04da5ed6e07a518c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;one_for_one&lt;/code&gt; - If one child process terminates and is to be restarted, only that child process is affected. This is the default restart strategy.</source>
          <target state="translated">&lt;code&gt;one_for_one&lt;/code&gt; - Если один дочерний процесс завершается и должен быть перезапущен, затрагивается только этот дочерний процесс. Это стратегия перезапуска по умолчанию.</target>
        </trans-unit>
        <trans-unit id="0259e85e3f9e9bf879d61bd806f545c122cb1235" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;one_n_minus_one&lt;/code&gt; - Perform 1/n-1 BEAST mitigation.</source>
          <target state="translated">&lt;code&gt;one_n_minus_one&lt;/code&gt; - Выполнить 1 / n-1 смягчение BEAST.</target>
        </trans-unit>
        <trans-unit id="4904209ada4d109d17de8535b0eba26ad8a7ec3d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;opaque()&lt;/code&gt; - as returned by &lt;code&gt;&lt;a href=&quot;ssh#connect-3&quot;&gt;ssh:connect/3&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;opaque()&lt;/code&gt; - как возвращается &lt;code&gt;&lt;a href=&quot;ssh#connect-3&quot;&gt;ssh:connect/3&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f152d15bb119d04e3f5da9695e993efdbfc1d484" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;open/1&lt;/code&gt; cannot be used for changing the values of options of an open log. When there are prior owners or users of a log, all option values except &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;linkto&lt;/code&gt;, and &lt;code&gt;notify&lt;/code&gt; are only checked against the values supplied before as option values to function &lt;code&gt;open/1&lt;/code&gt;, &lt;code&gt;change_header/2&lt;/code&gt;, &lt;code&gt;change_notify/3&lt;/code&gt;, or &lt;code&gt;change_size/2&lt;/code&gt;. Thus, none of the options except &lt;code&gt;name&lt;/code&gt; is mandatory. If some specified value differs from the current value, a tuple &lt;code&gt;{error, {arg_mismatch, OptionName, CurrentValue, Value}}&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;code&gt;open/1&lt;/code&gt; не может использоваться для изменения значений опций открытого журнала. Когда есть предыдущие владельцы или пользователей бревна, все значения опций , кроме &lt;code&gt;name&lt;/code&gt; , &lt;code&gt;linkto&lt;/code&gt; и &lt;code&gt;notify&lt;/code&gt; только сверяются значениями поставленных перед тем как значения опций для функции &lt;code&gt;open/1&lt;/code&gt; , &lt;code&gt;change_header/2&lt;/code&gt; , &lt;code&gt;change_notify/3&lt;/code&gt; , или &lt;code&gt;change_size/2&lt;/code&gt; , Таким образом, ни один из параметров, кроме &lt;code&gt;name&lt;/code&gt; является обязательным. Если какое-то указанное значение отличается от текущего значения, &lt;code&gt;{error, {arg_mismatch, OptionName, CurrentValue, Value}}&lt;/code&gt; кортеж {error, {arg_mismatch, OptionName, CurrentValue, Value}} .</target>
        </trans-unit>
        <trans-unit id="6cf7b80caafc11b489ff1be96e9777b37874dc85" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;open/1&lt;/code&gt; returns &lt;code&gt;{ok, Log}&lt;/code&gt; if the log file is successfully opened. If the file is successfully repaired, the tuple &lt;code&gt;{repaired, Log, {recovered, Rec}, {badbytes, Bad}}&lt;/code&gt; is returned, where &lt;code&gt;Rec&lt;/code&gt; is the number of whole Erlang terms found in the file and &lt;code&gt;Bad&lt;/code&gt; is the number of bytes in the file that are non-Erlang terms. If the parameter &lt;code&gt;distributed&lt;/code&gt; is specified, &lt;code&gt;open/1&lt;/code&gt; returns a list of successful replies and a list of erroneous replies. Each reply is tagged with the node name.</source>
          <target state="translated">&lt;code&gt;open/1&lt;/code&gt; возвращает &lt;code&gt;{ok, Log}&lt;/code&gt; если файл журнала успешно открыт. Если файл успешно восстановлен, &lt;code&gt;{repaired, Log, {recovered, Rec}, {badbytes, Bad}}&lt;/code&gt; кортеж {repaired, Log, {recovered, Rec}, {badbytes, Bad}} , где &lt;code&gt;Rec&lt;/code&gt; - это количество полных терминов Erlang, найденных в файле, а &lt;code&gt;Bad&lt;/code&gt; - количество байтов в файле. файл, не относящийся к Erlang. Если указан параметр &lt;code&gt;distributed&lt;/code&gt; , &lt;code&gt;open/1&lt;/code&gt; возвращает список успешных ответов и список ошибочных ответов. Каждый ответ помечен именем узла.</target>
        </trans-unit>
        <trans-unit id="0922ad9842e4e437c67b18ea27fb19fba3030db2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;open_port/2&lt;/code&gt;, which is used to create ports, returns a value of this data type.</source>
          <target state="translated">&lt;code&gt;open_port/2&lt;/code&gt; , который используется для создания портов, возвращает значение этого типа данных.</target>
        </trans-unit>
        <trans-unit id="2c8d92d29c0874bfff3377e8eba0596891a3993f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;opts&lt;/code&gt; is a pointer to thread options to destroy.</source>
          <target state="translated">&lt;code&gt;opts&lt;/code&gt; - это указатель на параметры потока, которые нужно уничтожить.</target>
        </trans-unit>
        <trans-unit id="0ba0202e2d7d4f65a966eb62b085378fc6e20503" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;order&lt;/code&gt; defines if the deny or allow control is to be performed first.</source>
          <target state="translated">&lt;code&gt;order&lt;/code&gt; определяет, следует ли сначала выполнить запрещающий или разрешающий контроль.</target>
        </trans-unit>
        <trans-unit id="1bcf67eeb49a2004ff50fb4545a2daa814129c16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;os:cmd/2&lt;/code&gt; was added in kernel-5.5 (OTP-20.2.1). It makes it possible to pass an options map as the second argument in order to control the behaviour of &lt;code&gt;os:cmd&lt;/code&gt;. The possible options are:</source>
          <target state="translated">&lt;code&gt;os:cmd/2&lt;/code&gt; был добавлен в ядро ​​5.5 (OTP-20.2.1). Это позволяет передать карту параметров в качестве второго аргумента для управления поведением &lt;code&gt;os:cmd&lt;/code&gt; . Возможные варианты:</target>
        </trans-unit>
        <trans-unit id="3763b884735128f6813b3b38f8317f5213464697" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;os_mon(6)&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;os_sup&quot;&gt;os_sup(3)&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;os_mon(6)&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;os_sup&quot;&gt;os_sup(3)&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7896902d5b23e1ba520c38f29ff83e640d15206b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;os_mon(6)&lt;/code&gt;, &lt;code&gt;snmp(3)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;os_mon(6)&lt;/code&gt; , &lt;code&gt;snmp(3)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c2104b5697c69e82cf781d50f0c4e0cef912b6d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;os_sup&lt;/code&gt; is a process providing a message passing service from the operating system to the error logger in the Erlang runtime system. It is part of the OS_Mon application, see &lt;code&gt;os_mon(6)&lt;/code&gt;. Available for Solaris and Windows.</source>
          <target state="translated">&lt;code&gt;os_sup&lt;/code&gt; - это процесс, предоставляющий службу передачи сообщений от операционной системы к регистратору ошибок в системе времени выполнения Erlang. Это часть приложения OS_Mon, см. &lt;code&gt;os_mon(6)&lt;/code&gt; . Доступно для Solaris и Windows.</target>
        </trans-unit>
        <trans-unit id="60ff1866ca37a7e6f32a269217966191d981913e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;otp_build boot -a&lt;/code&gt; will first build a bootstrap system for the build machine and then do the cross build of the system.</source>
          <target state="translated">&lt;code&gt;otp_build boot -a&lt;/code&gt; сначала создаст систему начальной загрузки для машины сборки, а затем выполнит кросс-сборку системы.</target>
        </trans-unit>
        <trans-unit id="0b889d98885a8fabd6556374ff26a8ecc91b72f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;otp_build configure&lt;/code&gt; will configure both for the boostrap system on the build machine and the cross host system.</source>
          <target state="translated">&lt;code&gt;otp_build configure&lt;/code&gt; настроит как систему boostrap на машине сборки, так и систему кросс-хоста.</target>
        </trans-unit>
        <trans-unit id="542f01b9555349076e7a3fea529d9a9b9468c7f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;otp_build release -a&lt;/code&gt; will do the same as (5), and you will after this have to do a manual install either by doing (6), or (7).</source>
          <target state="translated">&lt;code&gt;otp_build release -a&lt;/code&gt; будет делать то же самое, что и (5), и после этого вам придется выполнить ручную установку, выполнив (6) или (7).</target>
        </trans-unit>
        <trans-unit id="dd10f835d85942a34946a9e0c04affd5300253df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;overload threshold&lt;/code&gt;. When the load on some node exceeds some application-specific threshold, it can be time to either add or move some fragment replicas to nodes with lower load. Take extra care if the table has a foreign key relation to some other table. To avoid severe performance penalties, the same redistribution must be performed for all the related tables.</source>
          <target state="translated">&lt;code&gt;overload threshold&lt;/code&gt; . Когда нагрузка на какой-либо узел превышает некоторый порог, зависящий от приложения, может настало время добавить или переместить реплики некоторых фрагментов на узлы с более низкой нагрузкой. Будьте особенно внимательны, если таблица имеет отношение внешнего ключа к какой-либо другой таблице. Чтобы избежать серьезных потерь производительности, необходимо выполнить такое же перераспределение для всех связанных таблиц.</target>
        </trans-unit>
        <trans-unit id="68344155372e6961a5132c56b90b16293cd4ba4e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;p&lt;/code&gt; - The 0 failure label, meaning that an exception should be raised if the instruction fails. (Will not be stored in the loaded code.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bd1ff409ec0750e81aa9d04adfe57598f578571" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;p&lt;/code&gt; - The zero failure label.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eb88be1b347cecde97617dd50ea35054024f673" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;p&lt;/code&gt; - Zero failure label.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="070344dc3c10d66adb7c38d9c733f2ee1324917d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;p&lt;/code&gt; is a pointer to the binary object. The object itself must have been created through a single call to &lt;code&gt;malloc()&lt;/code&gt; or a similar function, so that the registry can later delete it if necessary by calling &lt;code&gt;free()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;p&lt;/code&gt; - указатель на двоичный объект. Сам объект должен быть создан с помощью одного вызова &lt;code&gt;malloc()&lt;/code&gt; или аналогичной функции, чтобы реестр мог позже удалить его, если это необходимо, вызвав &lt;code&gt;free()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="208bfd1fb6273bbc6857f2f1b58c54da33b30f31" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pad_char&lt;/code&gt; is the padding character.</source>
          <target state="translated">&lt;code&gt;pad_char&lt;/code&gt; - это символ заполнения.</target>
        </trans-unit>
        <trans-unit id="5cfb35d103fcd1afcfab0b2ac9968766b8d5ad3b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parent : string&lt;/code&gt; :: Process ID. Ex. &lt;code&gt;&quot;&amp;lt;0.131.0&amp;gt;&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;parent : string&lt;/code&gt; :: ID процесса. Ex. &lt;code&gt;&quot;&amp;lt;0.131.0&amp;gt;&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cd7b814292c1cc0efe1bfa4cd5c0348144c08fc7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parse_query/1&lt;/code&gt; parses incoming data to &lt;code&gt;erl&lt;/code&gt; and &lt;code&gt;eval&lt;/code&gt; scripts (see &lt;code&gt;&lt;a href=&quot;mod_esi&quot;&gt;mod_esi(3)&lt;/a&gt;&lt;/code&gt;) as defined in the standard URL format, that is, '+' becomes 'space' and decoding of hexadecimal characters (&lt;code&gt;%xx&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;parse_query/1&lt;/code&gt; анализирует входящие данные в сценарии &lt;code&gt;erl&lt;/code&gt; и &lt;code&gt;eval&lt;/code&gt; (см. &lt;code&gt;&lt;a href=&quot;mod_esi&quot;&gt;mod_esi(3)&lt;/a&gt;&lt;/code&gt; ), как определено в стандартном формате URL, то есть '+' становится 'пробелом' и декодированием шестнадцатеричных символов ( &lt;code&gt;%xx&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="18fa351e18b546a01891ed3fd67dcf620c2badf2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;partition(F,&amp;nbsp;S1,&amp;nbsp;S2)&lt;/code&gt; is equivalent to &lt;code&gt;{restriction(F,&amp;nbsp;S1,&amp;nbsp;S2), drestriction(F,&amp;nbsp;S1,&amp;nbsp;S2)}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;partition(F,&amp;nbsp;S1,&amp;nbsp;S2)&lt;/code&gt; эквивалентно &lt;code&gt;{restriction(F,&amp;nbsp;S1,&amp;nbsp;S2), drestriction(F,&amp;nbsp;S1,&amp;nbsp;S2)}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8995d005b05558ebaa5646be0205d6be7c6eea89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;path() = string()&lt;/code&gt; representing a file or a directory path</source>
          <target state="translated">&lt;code&gt;path() = string()&lt;/code&gt; представляющий путь к файлу или каталогу</target>
        </trans-unit>
        <trans-unit id="0e73934e89d175b94dad7073f798f7e269c13f6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;path() = string()&lt;/code&gt; representing a file path or directory path</source>
          <target state="translated">&lt;code&gt;path() = string()&lt;/code&gt; представляющий путь к файлу или каталогу</target>
        </trans-unit>
        <trans-unit id="dfd43bedad2dde56094d1fb63abd18f851d30aae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;path/3&lt;/code&gt; returns the file &lt;code&gt;Path&lt;/code&gt; in the &lt;code&gt;RequestURI&lt;/code&gt; (see &lt;code&gt;&lt;a href=&quot;http://www.rfc-base.org/rfc-1945.html&quot;&gt;RFC 1945&lt;/a&gt;&lt;/code&gt;). If the interaction data &lt;code&gt;{real_name,{Path,AfterPath}}&lt;/code&gt; has been exported by &lt;code&gt;mod_alias&lt;/code&gt;, &lt;code&gt;Path&lt;/code&gt; is returned. If no interaction data has been exported, &lt;code&gt;ServerRoot&lt;/code&gt; is used to generate a file &lt;code&gt;Path&lt;/code&gt;. &lt;code&gt;config_db()&lt;/code&gt; and &lt;code&gt;interaction_data()&lt;/code&gt; are as defined in &lt;code&gt;&lt;a href=&quot;http_server&quot;&gt;Inets User's Guide&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;path/3&lt;/code&gt; возвращает &lt;code&gt;Path&lt;/code&gt; к файлу в &lt;code&gt;RequestURI&lt;/code&gt; (см. &lt;code&gt;&lt;a href=&quot;http://www.rfc-base.org/rfc-1945.html&quot;&gt;RFC 1945&lt;/a&gt;&lt;/code&gt; ). Если данные взаимодействия &lt;code&gt;{real_name,{Path,AfterPath}}&lt;/code&gt; были экспортированы с помощью &lt;code&gt;mod_alias&lt;/code&gt; , возвращается &lt;code&gt;Path&lt;/code&gt; . Если данные взаимодействия не были экспортированы, &lt;code&gt;ServerRoot&lt;/code&gt; используется для создания &lt;code&gt;Path&lt;/code&gt; к файлу . &lt;code&gt;config_db()&lt;/code&gt; и &lt;code&gt;interaction_data()&lt;/code&gt; определены в &lt;code&gt;&lt;a href=&quot;http_server&quot;&gt;Inets User's Guide&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d19a6eae0921097bb788ff4b1a29659a02851b5a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pdu&lt;/code&gt; - &lt;code&gt;SnmpPduInfo&lt;/code&gt; (see &lt;code&gt;&lt;a href=&quot;#handle_pdu&quot;&gt;handle_pdu&lt;/a&gt;&lt;/code&gt; for more info).</source>
          <target state="translated">&lt;code&gt;pdu&lt;/code&gt; - &lt;code&gt;SnmpPduInfo&lt;/code&gt; (подробнее см. &lt;code&gt;&lt;a href=&quot;#handle_pdu&quot;&gt;handle_pdu&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="b051d9d29e76a1e1a06594c1849e87c9466b43bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;peername/2&lt;/code&gt; returns the &lt;code&gt;Port&lt;/code&gt; and &lt;code&gt;IPAddress&lt;/code&gt; of the remote &lt;code&gt;Socket&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;peername/2&lt;/code&gt; возвращает &lt;code&gt;Port&lt;/code&gt; и &lt;code&gt;IPAddress&lt;/code&gt; -адрес удаленного &lt;code&gt;Socket&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2924c1e2dad1f40758fc0e5f186d139101ab4805" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;permanent change of nodes&lt;/code&gt;. When a new permanent &lt;code&gt;db_node&lt;/code&gt; is introduced or dropped, it can be time to change the pool of nodes and redistribute the replicas evenly over the new pool of nodes. It can also be time to add or delete a fragment before the replicas are redistributed.</source>
          <target state="translated">&lt;code&gt;permanent change of nodes&lt;/code&gt; . Когда новый постоянный &lt;code&gt;db_node&lt;/code&gt; вводится или удаляется, может настало время изменить пул узлов и равномерно перераспределить реплики по новому пулу узлов. Также может быть пора добавить или удалить фрагмент до того, как реплики будут перераспределены.</target>
        </trans-unit>
        <trans-unit id="c3fb998fa9dbf3b5d118cbadf86f076137bfb4a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pg2:_/_&lt;/code&gt; (use 'pg' instead)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b60ec5325342e0bc65680744f58d7c53501bc7d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pg2&lt;/code&gt; is as of &lt;code&gt;&lt;a href=&quot;deprecations#otp-23&quot;&gt;OTP 23 deprecated&lt;/a&gt;&lt;/code&gt; and will be removed in OTP 24.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8181bde9ea5d7dcd55e6b7e5ae2ab9841a2ed1e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pg2&lt;/code&gt; is now deprecated and has also been &lt;code&gt;&lt;a href=&quot;scheduled_for_removal#otp-24&quot;&gt;scheduled for removal&lt;/a&gt;&lt;/code&gt; in OTP 24.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1260a8f8c0a48670cf7c26a655b61fc47cfed3bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pg2&lt;/code&gt; manual page in Kernel</source>
          <target state="translated">&lt;code&gt;pg2&lt;/code&gt; справочная страница в ядре</target>
        </trans-unit>
        <trans-unit id="3864dcecaccb86632693e7453ef4bec437e11df7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pg&lt;/code&gt; manual page in Kernel</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="609384a2799ee5bf5ed1f7d78fea677596ddb17d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;phash2&lt;/code&gt; - Implies that the &lt;code&gt;erlang:phash2/1&lt;/code&gt; BIF is used.</source>
          <target state="translated">&lt;code&gt;phash2&lt;/code&gt; - подразумевает, что используется BIF &lt;code&gt;erlang:phash2/1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5c472bf2dbda908175ae45fa101c23b6a774d860" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;phash&lt;/code&gt; - Implies that the &lt;code&gt;erlang:phash/2&lt;/code&gt; BIF is used.</source>
          <target state="translated">&lt;code&gt;phash&lt;/code&gt; - подразумевает, что используется &lt;code&gt;erlang:phash/2&lt;/code&gt; BIF.</target>
        </trans-unit>
        <trans-unit id="9ecdfdbad8243eaf2b02881d244cf7f26dcaf8ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pick_peer/4&lt;/code&gt; callbacks are serialized when this option is &lt;code&gt;true&lt;/code&gt;, which is a potential performance bottleneck. A simple Diameter client may suffer no ill effects from using mutable state but a server or agent that responds to incoming request should probably avoid it.</source>
          <target state="translated">&lt;code&gt;pick_peer/4&lt;/code&gt; вызовы pick_peer / 4 сериализуются, когда эта опция &lt;code&gt;true&lt;/code&gt; , что является потенциальным узким местом для производительности. Простой клиент Diameter может не страдать от использования изменяемого состояния, но сервер или агент, который отвечает на входящий запрос, вероятно, должен избегать этого.</target>
        </trans-unit>
        <trans-unit id="3eb4c9f84372672f7a3c34804464e31203703a3c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pid : string&lt;/code&gt; :: Process ID. Ex. &lt;code&gt;&quot;&amp;lt;0.131.0&amp;gt;&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;pid : string&lt;/code&gt; :: ID процесса. Ex. &lt;code&gt;&quot;&amp;lt;0.131.0&amp;gt;&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4a679f107d23fdf533b0c3a4df842d9d172f13d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pid() | atom()&lt;/code&gt; - The info will be delivered in the following messages:</source>
          <target state="translated">&lt;code&gt;pid() | atom()&lt;/code&gt; - информация будет доставлена ​​в следующих сообщениях:</target>
        </trans-unit>
        <trans-unit id="2611f7c1ad6182adf6b84f1e7d41e1baa31948f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pid() | registered_name()&lt;/code&gt; - The info will be delivered in the following messages:</source>
          <target state="translated">&lt;code&gt;pid() | registered_name()&lt;/code&gt; - информация будет доставлена ​​в следующих сообщениях:</target>
        </trans-unit>
        <trans-unit id="ad9c7a366f3a5016df0c4b9e19d80b711b5f6ae0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pid()&lt;/code&gt; = identifier of an FTP connection</source>
          <target state="translated">&lt;code&gt;pid()&lt;/code&gt; = идентификатор FTP-соединения</target>
        </trans-unit>
        <trans-unit id="59c537d320130b9edcbb2fc1f251bcb263292ccf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pid&lt;/code&gt; is the pid that is to be associated with &lt;code&gt;name&lt;/code&gt;. This value is returned by &lt;code&gt;global&lt;/code&gt; when processes request the location of &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;pid&lt;/code&gt; - это pid, который должен быть связан с &lt;code&gt;name&lt;/code&gt; . Это значение возвращается &lt;code&gt;global&lt;/code&gt; , когда процессы запрашивают местоположение &lt;code&gt;name&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5d183c618a6588b0342c1d5adbadab0f89c58b5b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ping/2&lt;/code&gt; now becomes &lt;code&gt;ping/1&lt;/code&gt; as the argument &lt;code&gt;Pong_PID&lt;/code&gt; is not needed.</source>
          <target state="translated">&lt;code&gt;ping/2&lt;/code&gt; теперь становится &lt;code&gt;ping/1&lt;/code&gt; , поскольку аргумент &lt;code&gt;Pong_PID&lt;/code&gt; не нужен.</target>
        </trans-unit>
        <trans-unit id="f6ca9e468db9dd82f4fd2e1990527cb8f2c09d28" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pipe_dir/&lt;/code&gt; is to be &lt;code&gt;/tmp/&lt;/code&gt; (&lt;code&gt;to_erl&lt;/code&gt; uses this name by default).</source>
          <target state="translated">&lt;code&gt;pipe_dir/&lt;/code&gt; должен быть &lt;code&gt;/tmp/&lt;/code&gt; ( &lt;code&gt;to_erl&lt;/code&gt; по умолчанию использует это имя).</target>
        </trans-unit>
        <trans-unit id="19437503e09eb677bc1f209309200b6daec1519c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pool&lt;/code&gt; manual page in STDLIB</source>
          <target state="translated">&lt;code&gt;pool&lt;/code&gt; страницы вручную в STDLIB</target>
        </trans-unit>
        <trans-unit id="d3b0f0c1679880215bb1593abf34a83108819cab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;por(P1, P2)&lt;/code&gt; returns a parser for the language described by the grammar &lt;code&gt;G1&lt;/code&gt; or &lt;code&gt;G2&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;por(P1, P2)&lt;/code&gt; возвращает синтаксический анализатор для языка, описанного грамматикой &lt;code&gt;G1&lt;/code&gt; или &lt;code&gt;G2&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="05b55bccfd69f56af11534635e4e2e953ee20ff6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;port : string&lt;/code&gt; :: Port ID. Ex. &lt;code&gt;&quot;#Port&amp;lt;0.1031&amp;gt;&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;port : string&lt;/code&gt; :: ID порта. Ex. &lt;code&gt;&quot;#Port&amp;lt;0.1031&amp;gt;&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="109d904eb97aa7ced81b96f2b99474ac53cdef13" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;port&lt;/code&gt; - which defines which UDP port the manager uses for communicating with agents. &lt;strong&gt;Mandatory&lt;/strong&gt; if &lt;code&gt;transports&lt;/code&gt; does not define a port number for every transport.</source>
          <target state="translated">&lt;code&gt;port&lt;/code&gt; - который определяет, какой UDP-порт менеджер использует для связи с агентами. &lt;strong&gt;Обязательно,&lt;/strong&gt; если &lt;code&gt;transports&lt;/code&gt; не определяют номер порта для каждого транспорта.</target>
        </trans-unit>
        <trans-unit id="aa55a5750ec0e9d807a7393a28ac605dbbcb194d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;port&lt;/code&gt; and &lt;code&gt;bind_address&lt;/code&gt; cannot be changed. Clients trying to access the server during the reload get a service temporary unavailable answer.</source>
          <target state="translated">&lt;code&gt;port&lt;/code&gt; и &lt;code&gt;bind_address&lt;/code&gt; не могут быть изменены. Клиенты, пытающиеся получить доступ к серверу во время перезагрузки, получают ответ службы о временной недоступности.</target>
        </trans-unit>
        <trans-unit id="f073756b4902fc9ba4d6b862440e2da0e3ccc96f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;port&lt;/code&gt; is a pointer to an integer containing the port number to bind to. If &lt;code&gt;*port&lt;/code&gt; equals &lt;code&gt;0&lt;/code&gt; when calling &lt;code&gt;ei_listen()&lt;/code&gt;, the socket will be bound to an ephemeral port. On success, &lt;code&gt;ei_listen()&lt;/code&gt; will update the value of &lt;code&gt;*port&lt;/code&gt; to the port actually bound to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="548795fb7fe4eb5fa9c6b0c49478298264a15a9a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;port&lt;/code&gt; is the local name to register, and is to be the same as the port number that was previously bound to the socket.</source>
          <target state="translated">&lt;code&gt;port&lt;/code&gt; - это локальное имя для регистрации, которое должно совпадать с номером порта, который ранее был привязан к сокету.</target>
        </trans-unit>
        <trans-unit id="569a0eca1b4d69be90bc6ec21ea099e6fc76cdbe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;port&lt;/code&gt; is the port handle of the port (driver instance) to set the pid on. &lt;code&gt;pid&lt;/code&gt;is the pid to set.</source>
          <target state="translated">&lt;code&gt;port&lt;/code&gt; - это дескриптор порта (экземпляра драйвера), для которого нужно установить pid. &lt;code&gt;pid&lt;/code&gt; - это идентификатор, который нужно установить.</target>
        </trans-unit>
        <trans-unit id="81309f9d960a46f7f26c286ad9952dc0bcce3cdc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;port&lt;/code&gt; is the port number of the remote node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a62ba59a9de638facd1c8357fdcecbb4fee602f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;port_connect/1&lt;/code&gt; is synchronous, see below.</source>
          <target state="translated">&lt;code&gt;port_connect/1&lt;/code&gt; является синхронным, см. ниже.</target>
        </trans-unit>
        <trans-unit id="46275a563a51ed4259f6d468e8ed8b88c206781a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;port_level&lt;/code&gt; (port-specific locking)</source>
          <target state="translated">&lt;code&gt;port_level&lt;/code&gt; (блокировка для конкретного порта)</target>
        </trans-unit>
        <trans-unit id="d054b81553bbe50c72d62a64de29e1a160a9ff8f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pos&lt;/code&gt; indicates how many terms to step over in the buffer.</source>
          <target state="translated">&lt;code&gt;pos&lt;/code&gt; указывает, сколько терминов нужно перешагнуть в буфер.</target>
        </trans-unit>
        <trans-unit id="3005cedef47a43cd61bf191bcae670fb05ba3053" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;position&lt;/code&gt; specifies which element to retrieve from &lt;code&gt;tuple&lt;/code&gt;. The elements are numbered starting from 1.</source>
          <target state="translated">&lt;code&gt;position&lt;/code&gt; указывает, какой элемент извлекать из &lt;code&gt;tuple&lt;/code&gt; . Элементы нумеруются, начиная с 1.</target>
        </trans-unit>
        <trans-unit id="e0f90fded1ca1cc66d4c7a429d464dbe61fd344a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;precision&lt;/code&gt; is the precision of the printed argument.</source>
          <target state="translated">&lt;code&gt;precision&lt;/code&gt; - это точность напечатанного аргумента.</target>
        </trans-unit>
        <trans-unit id="d32e560f58cd69021c34aa6faa3a7d0902c0bf55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pretty&lt;/code&gt; has a format corresponding to:</source>
          <target state="translated">&lt;code&gt;pretty&lt;/code&gt; имеет формат, соответствующий:</target>
        </trans-unit>
        <trans-unit id="98d108566007784e8a1eea8b9a4528d9e7ac1f71" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;print_temp&lt;/code&gt; simply calls &lt;code&gt;io:format&lt;/code&gt; in a similar way to what has been described above. Notice that ~-15w says to print the &quot;term&quot; with a field length (width) of 15 and left justify it. (see the &lt;code&gt;io(3)&lt;/code&gt;) manual page in STDLIB.</source>
          <target state="translated">&lt;code&gt;print_temp&lt;/code&gt; просто вызывает &lt;code&gt;io:format&lt;/code&gt; аналогично тому, как было описано выше. Обратите внимание, что ~ -15w указывает напечатать &amp;laquo;термин&amp;raquo; с длиной (шириной) поля 15 и выровнять его по левому краю. (см. справочную страницу &lt;code&gt;io(3)&lt;/code&gt; ) в STDLIB.</target>
        </trans-unit>
        <trans-unit id="29ac1ca7727ca9cb3d82758e35bac8bf82f020b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;priv/bin&lt;/code&gt; - Recommended. Any executable that is used by the application, such as port-programs, should be placed here.</source>
          <target state="translated">&lt;code&gt;priv/bin&lt;/code&gt; - рекомендуется. Здесь следует разместить любой исполняемый файл, который используется приложением, например программы-порты.</target>
        </trans-unit>
        <trans-unit id="3ad0391cb384a2caca2662bbbf264622930a4b48" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;priv/lib&lt;/code&gt; - Recommended. Any shared-object files that are used by the application, such as NIFs or linked-in-drivers, should be placed here.</source>
          <target state="translated">&lt;code&gt;priv/lib&lt;/code&gt; - рекомендуется. Здесь должны быть размещены любые файлы общих объектов, которые используются приложением, такие как NIF или связанные драйверы.</target>
        </trans-unit>
        <trans-unit id="9645f44b37794152f99af006755a164224c472d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;priv&lt;/code&gt; - Optional. Used for application specific files.</source>
          <target state="translated">&lt;code&gt;priv&lt;/code&gt; - Необязательно. Используется для файлов конкретного приложения.</target>
        </trans-unit>
        <trans-unit id="f4dd7b1d49b0d6d23d041a7e5ef464d98479bb02" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;priv&lt;/code&gt; - Optional. Used for application specific files. &lt;code&gt;code:priv_dir/1&lt;/code&gt; is to be used to access this directory.</source>
          <target state="translated">&lt;code&gt;priv&lt;/code&gt; - Необязательно. Используется для файлов конкретного приложения. &lt;code&gt;code:priv_dir/1&lt;/code&gt; должен использоваться для доступа к этому каталогу.</target>
        </trans-unit>
        <trans-unit id="6ce3ecab75d053087947f57abd113a825750b61f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;priv_dir&lt;/code&gt; - Scratch file directory</source>
          <target state="translated">&lt;code&gt;priv_dir&lt;/code&gt; - каталог с временными файлами</target>
        </trans-unit>
        <trans-unit id="67a3ae34ca8c9e112d3c2b7ea9126b0da8b19f81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;priv_dir&lt;/code&gt; is the private directory for the test cases. This directory can be used whenever a test case (or configuration function) needs to write something to file. The name of the private directory is generated by &lt;code&gt;Common Test&lt;/code&gt;, which also creates the directory.</source>
          <target state="translated">&lt;code&gt;priv_dir&lt;/code&gt; - это личный каталог для тестовых примеров. Этот каталог можно использовать всякий раз, когда тестовый пример (или функция конфигурации) должен что-то записать в файл. Имя частного каталога генерируется &lt;code&gt;Common Test&lt;/code&gt; , который также создает каталог.</target>
        </trans-unit>
        <trans-unit id="cbcc995ab1297c3b9b6bdf4f0a3b2462a99b5673" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;proc_lib:start_link&lt;/code&gt; is synchronous and does not return until &lt;code&gt;proc_lib:init_ack&lt;/code&gt; has been called.</source>
          <target state="translated">&lt;code&gt;proc_lib:start_link&lt;/code&gt; является синхронным и не возвращается до тех &lt;code&gt;proc_lib:init_ack&lt;/code&gt; не будет вызван proc_lib: init_ack .</target>
        </trans-unit>
        <trans-unit id="c16f600ff0527a1c089c36fef0901435cfe8d3d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;proc_sig&lt;/code&gt; is an internal operation and is never to appear, while the others represent the corresponding driver callbacks &lt;code&gt;timeout&lt;/code&gt;, &lt;code&gt;ready_input&lt;/code&gt;, &lt;code&gt;ready_output&lt;/code&gt;, &lt;code&gt;event&lt;/code&gt;, and &lt;code&gt;outputv&lt;/code&gt; (when the port is used by distribution). Value &lt;code&gt;Millis&lt;/code&gt; in tuple &lt;code&gt;timeout&lt;/code&gt; informs about the uninterrupted execution time of the process or port, which always is equal to or higher than the &lt;code&gt;Time&lt;/code&gt; value supplied when starting the trace. New tuples can be added to the &lt;code&gt;Info&lt;/code&gt; list in a future release. The order of the tuples in the list can be changed at any time without prior notice.</source>
          <target state="translated">&lt;code&gt;proc_sig&lt;/code&gt; - это внутренняя операция, которая никогда не появится, в то время как остальные представляют собой &lt;code&gt;timeout&lt;/code&gt; соответствующих обратных вызовов драйвера , &lt;code&gt;ready_input&lt;/code&gt; , &lt;code&gt;ready_output&lt;/code&gt; , &lt;code&gt;event&lt;/code&gt; и &lt;code&gt;outputv&lt;/code&gt; (когда порт используется распределением). Значение &lt;code&gt;Millis&lt;/code&gt; в &lt;code&gt;timeout&lt;/code&gt; кортежа сообщает о времени непрерывного выполнения процесса или порта, которое всегда равно или превышает значение &lt;code&gt;Time&lt;/code&gt; , предоставленное при запуске трассировки. Новые кортежи могут быть добавлены в список &lt;code&gt;Info&lt;/code&gt; в будущем выпуске. Порядок кортежей в списке можно изменить в любое время без предварительного уведомления.</target>
        </trans-unit>
        <trans-unit id="d87254d241e99668ca26900ef8fb734e4609213e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;process_info/1,2&lt;/code&gt; cannot be used to read out the message queue or the process dictionary (both are returned as empty lists).</source>
          <target state="translated">&lt;code&gt;process_info/1,2&lt;/code&gt; не может использоваться для чтения очереди сообщений или словаря процесса (оба возвращаются как пустые списки).</target>
        </trans-unit>
        <trans-unit id="42f2ec202869170e3d096f127fbfcb5b0da8dae6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;processor_spread&lt;/code&gt; - Schedulers are spread like &lt;code&gt;thread_spread&lt;/code&gt;, but also over physical processor chips.</source>
          <target state="translated">&lt;code&gt;processor_spread&lt;/code&gt; - Планировщики распределены как &lt;code&gt;thread_spread&lt;/code&gt; , но также и по физическим процессорам.</target>
        </trans-unit>
        <trans-unit id="03e24a6c1e9a06add5153e63471c1f7d46049c21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;product(S1,&amp;nbsp;S2)&lt;/code&gt; is equivalent to &lt;code&gt;product({S1,&amp;nbsp;S2})&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;product(S1,&amp;nbsp;S2)&lt;/code&gt; эквивалентен &lt;code&gt;product({S1,&amp;nbsp;S2})&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c7a94d6b404703ecfbd99fef0c131bb46e7a4eac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;projects&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;projects&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="7a500192c5cc08ad584ceb4e9ade7823f9cbe5a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;protocol_version&lt;/code&gt;. Returns the version number of the Mnesia inter-process communication protocol.</source>
          <target state="translated">&lt;code&gt;protocol_version&lt;/code&gt; . Возвращает номер версии протокола межпроцессного взаимодействия Mnesia.</target>
        </trans-unit>
        <trans-unit id="89fdc32e873c21bcd965fa0c727ab34dfa25b0dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub&lt;/code&gt; is a file descriptor now connected to &lt;code&gt;epmd&lt;/code&gt;. &lt;code&gt;epmd&lt;/code&gt; monitors the other end of the connection. If it detects that the connection has been closed, the node becomes unregistered. So, if you explicitly close the descriptor or if your node fails, it becomes unregistered from &lt;code&gt;epmd&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;pub&lt;/code&gt; - это файловый дескриптор, подключенный к &lt;code&gt;epmd&lt;/code&gt; . &lt;code&gt;epmd&lt;/code&gt; контролирует другой конец соединения. Если он обнаруживает, что соединение было закрыто, узел становится незарегистрированным. Итак, если вы явно закрываете дескриптор или ваш узел выходит из строя, он становится незарегистрированным в &lt;code&gt;epmd&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="45133641546549589bced5b8fd7d2ba91f50b586" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;q(QLC)&lt;/code&gt; is equivalent to &lt;code&gt;q(QLC, [])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;q(QLC)&lt;/code&gt; эквивалентно &lt;code&gt;q(QLC, [])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e1267fbdcc8542f9ed28ecd5872ce80fdd31606a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;q&lt;/code&gt; - Literal that don't fit in a word, that is an object stored on the heap such as a list or tuple. Any heap object type is supported, even types that don't have real literals such as external references.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c309d104f57e4e02e2071fda0cffcb90958184ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;q&lt;/code&gt; - Literals that don't fit in a word, such as list or tuples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40f5eb1eb7c642f79b3cc3976b07e49111c6865a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;q&lt;/code&gt; - Tagged CONS or BOXED pointer. That is, a term such as a list or tuple. Any heap object type is supported, even types that don't have real literals such as external references.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cca997605390350ccf544e460671ca62bf1cb387" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;qlc:info/1&lt;/code&gt; returns information about a query handle, and in this case identical information is returned for the two query handles.</source>
          <target state="translated">&lt;code&gt;qlc:info/1&lt;/code&gt; возвращает информацию о дескрипторе запроса, и в этом случае идентичная информация возвращается для двух дескрипторов запроса.</target>
        </trans-unit>
        <trans-unit id="45370310318db1bd3f5a6ac06d4a9aff7059abf8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;qlc:info/1&lt;/code&gt; returns information about a query handle. In this case identical information is returned for the two query handles.</source>
          <target state="translated">&lt;code&gt;qlc:info/1&lt;/code&gt; возвращает информацию о дескрипторе запроса. В этом случае для двух дескрипторов запроса возвращается идентичная информация.</target>
        </trans-unit>
        <trans-unit id="f4a9c4966ef235f63e236067f767d17c609fe77f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;queue:lait/1&lt;/code&gt; (use queue:liat/1 instead)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a24780f610cb9cd5f09e60a3ad22852c34ef28d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;r&lt;/code&gt; - X register 0. An implicit operand that will not be stored in the loaded code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b70c2887efa821c69b7024560ca540347c878381" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ram_copies&lt;/code&gt;. A table can be replicated on a number of Erlang nodes. Property &lt;code&gt;ram_copies&lt;/code&gt; specifies a list of Erlang nodes where RAM copies are kept. These copies can be dumped to disc at regular intervals. However, updates to these copies are not written to disc on a transaction basis.</source>
          <target state="translated">&lt;code&gt;ram_copies&lt;/code&gt; . Таблица может быть реплицирована на нескольких узлах Erlang. Свойство &lt;code&gt;ram_copies&lt;/code&gt; определяет список узлов Erlang, на которых хранятся копии RAM. Эти копии можно записывать на диск через определенные промежутки времени. Однако обновления этих копий не записываются на диск на основе транзакции.</target>
        </trans-unit>
        <trans-unit id="31c8132e21ffa4c4e72db0ae37e9ddd5d912ce0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ram_copies&lt;/code&gt;. Returns the nodes where a &lt;code&gt;ram_copy&lt;/code&gt; of the table resides according to the schema.</source>
          <target state="translated">&lt;code&gt;ram_copies&lt;/code&gt; . Возвращает узлы, в которых находится &lt;code&gt;ram_copy&lt;/code&gt; таблицы, согласно схеме.</target>
        </trans-unit>
        <trans-unit id="d6584e7476863ea917f78a32f51523f12856d5a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ram_copies&lt;/code&gt;. The value of the node list is a list of Erlang nodes, and a RAM replica of the table resides on each node in the list.</source>
          <target state="translated">&lt;code&gt;ram_copies&lt;/code&gt; . Значение списка узлов - это список узлов Erlang, а реплика таблицы в ОЗУ находится на каждом узле в списке.</target>
        </trans-unit>
        <trans-unit id="f6bdf85340f7364421c3601ac5291c0a796da850" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;random:_/_&lt;/code&gt; (use the 'rand' module instead)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c23dd2525fd016f79dc555aa6162da527038e0fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;range UC&lt;/code&gt; is a subset of &lt;code&gt;U&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;range UC&lt;/code&gt; является подмножеством &lt;code&gt;U&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4c8f4da3742dafcfcd37d73ed7da6e6e78234fc7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rbuf&lt;/code&gt; points to a return buffer, &lt;code&gt;rlen&lt;/code&gt; bytes long. The return data is to be a valid Erlang term in the external (binary) format. This is converted to an Erlang term and returned by &lt;code&gt;erlang:port_call/3&lt;/code&gt; to the caller. If more space than &lt;code&gt;rlen&lt;/code&gt; bytes is needed to return data, &lt;code&gt;*rbuf&lt;/code&gt; can be set to memory allocated with &lt;code&gt;&lt;a href=&quot;erl_driver#driver_alloc&quot;&gt; erl_driver:driver_alloc&lt;/a&gt;&lt;/code&gt;. This memory is freed automatically after &lt;code&gt;call&lt;/code&gt; has returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd9ced7eacf5082f0499e2bdf51fa7cbb8ed62ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rbuf&lt;/code&gt; points to a return buffer, &lt;code&gt;rlen&lt;/code&gt; bytes long. The return data is to be a valid Erlang term in the external (binary) format. This is converted to an Erlang term and returned by &lt;code&gt;erlang:port_call/3&lt;/code&gt; to the caller. If more space than &lt;code&gt;rlen&lt;/code&gt; bytes is needed to return data, &lt;code&gt;*rbuf&lt;/code&gt; can be set to memory allocated with &lt;code&gt;&lt;a href=&quot;erl_driver#driver_alloc&quot;&gt;erl_driver:driver_alloc&lt;/a&gt;&lt;/code&gt;. This memory is freed automatically after &lt;code&gt;call&lt;/code&gt; has returned.</source>
          <target state="translated">&lt;code&gt;rbuf&lt;/code&gt; указывает на буфер &lt;code&gt;rlen&lt;/code&gt; длиной rlen байтов. Возвращаемые данные должны быть допустимым термином Erlang во внешнем (двоичном) формате. Он конвертируется в термин Erlang и возвращается вызывающей &lt;code&gt;erlang:port_call/3&lt;/code&gt; . Если для возврата данных требуется больше места, чем &lt;code&gt;rlen&lt;/code&gt; байтов, &lt;code&gt;*rbuf&lt;/code&gt; может быть установлен в память, выделенную с помощью &lt;code&gt;&lt;a href=&quot;erl_driver#driver_alloc&quot;&gt;erl_driver:driver_alloc&lt;/a&gt;&lt;/code&gt; . Эта память автоматически освобождается после возврата &lt;code&gt;call&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4f627a24902277dcc859bc9742c883ee206ecf08" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ready_input&lt;/code&gt; or &lt;code&gt;ready_output&lt;/code&gt; indicates if the event object is ready for reading or writing.</source>
          <target state="translated">&lt;code&gt;ready_input&lt;/code&gt; или &lt;code&gt;ready_output&lt;/code&gt; указывает, готов ли объект события к чтению или записи.</target>
        </trans-unit>
        <trans-unit id="df286964dc6b989faeaf3d18c9fbc9f06820d2da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;real_name/3&lt;/code&gt; traverses &lt;code&gt;Aliases&lt;/code&gt;, typically extracted from &lt;code&gt;ConfigDB&lt;/code&gt;, and matches each &lt;code&gt;FakeName&lt;/code&gt; with &lt;code&gt;RequestURI&lt;/code&gt;. If a match is found, &lt;code&gt;FakeName&lt;/code&gt; is replaced with &lt;code&gt;RealName&lt;/code&gt; in the match. The resulting path is split into two parts, &lt;code&gt;ShortPath&lt;/code&gt; and &lt;code&gt;AfterPath&lt;/code&gt;, as defined in &lt;code&gt;&lt;a href=&quot;httpd_util#split_path-1&quot;&gt;httpd_util:split_path/1&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;Path&lt;/code&gt; is generated from &lt;code&gt;ShortPath&lt;/code&gt;, that is, the result from &lt;code&gt;&lt;a href=&quot;#default_index&quot;&gt;default_index/2&lt;/a&gt;&lt;/code&gt; with &lt;code&gt;ShortPath&lt;/code&gt; as an argument. &lt;code&gt;config_db()&lt;/code&gt; is the server config file in ETS table format as described in &lt;code&gt;&lt;a href=&quot;http_server&quot;&gt;Inets User's Guide&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;real_name/3&lt;/code&gt; Траверсы &lt;code&gt;Aliases&lt;/code&gt; , как правило , экстрагируют из &lt;code&gt;ConfigDB&lt;/code&gt; , и соответствует каждому &lt;code&gt;FakeName&lt;/code&gt; с &lt;code&gt;RequestURI&lt;/code&gt; . Если совпадение найдено, &lt;code&gt;FakeName&lt;/code&gt; заменяется на &lt;code&gt;RealName&lt;/code&gt; в совпадении. Результирующий путь делится на две части: &lt;code&gt;ShortPath&lt;/code&gt; и &lt;code&gt;AfterPath&lt;/code&gt; , как определено в &lt;code&gt;&lt;a href=&quot;httpd_util#split_path-1&quot;&gt;httpd_util:split_path/1&lt;/a&gt;&lt;/code&gt; . &lt;code&gt;Path&lt;/code&gt; генерируется из &lt;code&gt;ShortPath&lt;/code&gt; , то есть результатом &lt;code&gt;&lt;a href=&quot;#default_index&quot;&gt;default_index/2&lt;/a&gt;&lt;/code&gt; с &lt;code&gt;ShortPath&lt;/code&gt; в качестве аргумента. &lt;code&gt;config_db()&lt;/code&gt; - это файл конфигурации сервера в формате таблицы ETS, как описано в &lt;code&gt;&lt;a href=&quot;http_server&quot;&gt;Inets User's Guide&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0836e434e21e3ff42c10d3b7cd4440e6ec99c2f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;real_name&lt;/code&gt; - from &lt;code&gt;&lt;a href=&quot;mod_alias&quot;&gt;mod_alias&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;real_name&lt;/code&gt; - из &lt;code&gt;&lt;a href=&quot;mod_alias&quot;&gt;mod_alias&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a0b5268dc3559ae43a4382a13162f0b182bdbc7c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;real_name&lt;/code&gt; - from &lt;code&gt;&lt;a href=&quot;mod_alias&quot;&gt;mod_alias&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;real_name&lt;/code&gt; - из &lt;code&gt;&lt;a href=&quot;mod_alias&quot;&gt;mod_alias&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4a157375902666aadd2e49bc4b005d4f2156ef77" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;real_script_name/3&lt;/code&gt; traverses &lt;code&gt;ScriptAliases&lt;/code&gt;, typically extracted from &lt;code&gt;ConfigDB&lt;/code&gt;, and matches each &lt;code&gt;FakeName&lt;/code&gt; with &lt;code&gt;RequestURI&lt;/code&gt;. If a match is found, &lt;code&gt;FakeName&lt;/code&gt; is replaced with &lt;code&gt;RealName&lt;/code&gt; in the match. If the resulting match is not an executable script, &lt;code&gt;not_a_script&lt;/code&gt; is returned. If it is a script, the resulting script path is in two parts, &lt;code&gt;ShortPath&lt;/code&gt; and &lt;code&gt;AfterPath&lt;/code&gt;, as defined in &lt;code&gt;&lt;a href=&quot;httpd_util#split_script_path-1&quot;&gt;httpd_util:split_script_path/1&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;config_db()&lt;/code&gt; is the server config file in ETS table format as described in &lt;code&gt;&lt;a href=&quot;http_server&quot;&gt;Inets User's Guide&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;real_script_name/3&lt;/code&gt; проходит через &lt;code&gt;ScriptAliases&lt;/code&gt; , обычно извлекаемые из &lt;code&gt;ConfigDB&lt;/code&gt; , и сопоставляет каждое &lt;code&gt;FakeName&lt;/code&gt; с &lt;code&gt;RequestURI&lt;/code&gt; . Если совпадение найдено, &lt;code&gt;FakeName&lt;/code&gt; заменяется на &lt;code&gt;RealName&lt;/code&gt; в совпадении. Если полученное совпадение не является исполняемым скриптом, возвращается &lt;code&gt;not_a_script&lt;/code&gt; . Если это сценарий, результирующий путь к сценарию состоит из двух частей: &lt;code&gt;ShortPath&lt;/code&gt; и &lt;code&gt;AfterPath&lt;/code&gt; , как определено в &lt;code&gt;&lt;a href=&quot;httpd_util#split_script_path-1&quot;&gt;httpd_util:split_script_path/1&lt;/a&gt;&lt;/code&gt; . &lt;code&gt;config_db()&lt;/code&gt; - это файл конфигурации сервера в формате таблицы ETS, как описано в &lt;code&gt;&lt;a href=&quot;http_server&quot;&gt;Inets User's Guide&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5e0c37bb2ccd75117ef5f016b791a40be7494d36" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reason : string&lt;/code&gt; :: Exit reason. Ex. &lt;code&gt;&quot;normal&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;reason : string&lt;/code&gt; :: причина выхода. Ex. &lt;code&gt;&quot;normal&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1d6900a8e02c05d22160da33f9dfea47f1156484" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reason_phrase&lt;/code&gt; returns &lt;code&gt;Description&lt;/code&gt; of an HTTP 1.1 &lt;code&gt;StatusCode&lt;/code&gt;, for example, 200 is &quot;OK&quot; and 201 is &quot;Created&quot;. For more information, see &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc2616.txt&quot;&gt;RFC 2616&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;reason_phrase&lt;/code&gt; возвращает &lt;code&gt;Description&lt;/code&gt; из HTTP 1.1 &lt;code&gt;StatusCode&lt;/code&gt; , например, 200 &amp;laquo;ОК&amp;raquo; и 201 &amp;laquo;Создан&amp;raquo;. Для получения дополнительной информации см. &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc2616.txt&quot;&gt;RFC 2616&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a02d43d67e5020245f51a15b8c6770757765566c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reason_phrase&lt;/code&gt; returns &lt;code&gt;Description&lt;/code&gt; of an HTTP 1.1 &lt;code&gt;StatusCode&lt;/code&gt;, for example, 200 is &quot;OK&quot; and 201 is &quot;Created&quot;. For more information, see &lt;code&gt;&lt;a href=&quot;https://www.ietf.org/rfc/rfc2616.txt&quot;&gt;RFC 2616&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96b53a82396c316d596c1c5cde548c59c4208848" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;receive&lt;/code&gt; never fails. The execution is suspended, possibly indefinitely, until a message arrives that matches one of the patterns and with a true guard sequence.</source>
          <target state="translated">&lt;code&gt;receive&lt;/code&gt; никогда не перестает. Выполнение приостанавливается, возможно, на неопределенный срок, пока не придет сообщение, соответствующее одному из шаблонов и с истинной защитной последовательностью.</target>
        </trans-unit>
        <trans-unit id="b4f40342522395030847fb1f59048644da3381b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reclaimed : integer&lt;/code&gt; :: Heap reclaimed. Ex. &lt;code&gt;2&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;reclaimed : integer&lt;/code&gt; :: Heap reclaimed. Ex. &lt;code&gt;2&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="99f6b849c495470fb32e64e9523f088a51ebdde1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;record_name&lt;/code&gt;. All records stored in a table must have the same name. The records must be instances of the same record type.</source>
          <target state="translated">&lt;code&gt;record_name&lt;/code&gt; . Все записи, хранящиеся в таблице, должны иметь одно и то же имя. Записи должны быть экземплярами одного и того же типа записи.</target>
        </trans-unit>
        <trans-unit id="fa56d3c2adfe99406ea66686179ceb5af48281da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;record_name&lt;/code&gt;. Returns the record name, common for all records in the table.</source>
          <target state="translated">&lt;code&gt;record_name&lt;/code&gt; . Возвращает имя записи, общее для всех записей в таблице.</target>
        </trans-unit>
        <trans-unit id="5eedfd25688f4b7bf285bd5a5cb720455497048d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;recurse&lt;/code&gt;, with initial default value &lt;code&gt;false&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;recurse&lt;/code&gt; , с начальным значением по умолчанию &lt;code&gt;false&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="01c40c86f579b43fad41c6dbf31d16b2a949a840" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reg&lt;/code&gt; is a registry containing objects marked for deletion.</source>
          <target state="translated">&lt;code&gt;reg&lt;/code&gt; - это реестр, содержащий объекты, помеченные для удаления.</target>
        </trans-unit>
        <trans-unit id="1b044a6c45f62d9e2beadb1f75026ec2f09422fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reg&lt;/code&gt; is the registry containing &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;reg&lt;/code&gt; - это реестр, содержащий &lt;code&gt;key&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c08e533ae2d6b16b9462ffaacc69a315a0a28af1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reg&lt;/code&gt; is the registry containing the object.</source>
          <target state="translated">&lt;code&gt;reg&lt;/code&gt; - это реестр, содержащий объект.</target>
        </trans-unit>
        <trans-unit id="581178f5f933f9dfbf88170a27b6f54efa674c52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reg&lt;/code&gt; is the registry to back up.</source>
          <target state="translated">&lt;code&gt;reg&lt;/code&gt; - это реестр для резервного копирования.</target>
        </trans-unit>
        <trans-unit id="07ee2635246bee74e6ad502df9ea0982cb86b58a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reg&lt;/code&gt; is the registry to close.</source>
          <target state="translated">&lt;code&gt;reg&lt;/code&gt; - закрываемый реестр.</target>
        </trans-unit>
        <trans-unit id="cd5f049b7631534f493729a05c946cdc3d746c8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reg&lt;/code&gt; is the registry to return information about.</source>
          <target state="translated">&lt;code&gt;reg&lt;/code&gt; - это реестр, информация о котором возвращается.</target>
        </trans-unit>
        <trans-unit id="d1ffd2d55c41ccf3477a7f547ab99fbfff3beb4f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reg&lt;/code&gt; is the registry where the data is to be placed.</source>
          <target state="translated">&lt;code&gt;reg&lt;/code&gt; - это реестр, в который должны быть помещены данные.</target>
        </trans-unit>
        <trans-unit id="164a95238ac9e60b7492dce09bda4f82ec47bb6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reg&lt;/code&gt; is the registry where the object is to be placed.</source>
          <target state="translated">&lt;code&gt;reg&lt;/code&gt; - реестр, в котором должен быть размещен объект.</target>
        </trans-unit>
        <trans-unit id="b39526fe04fdce43ea4cd218112cef8911cc572c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reg&lt;/code&gt; is the registry where the object will be looked up.</source>
          <target state="translated">&lt;code&gt;reg&lt;/code&gt; - это реестр, в котором будет выполняться поиск объекта.</target>
        </trans-unit>
        <trans-unit id="a02f5d58d4cfe73da9a29969d050d35c1306d29c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;registered&lt;/code&gt; - All names of registered processes in the application. &lt;code&gt;systools&lt;/code&gt; uses this list to detect name clashes between applications. Defaults to &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;registered&lt;/code&gt; - все имена зарегистрированных процессов в приложении. &lt;code&gt;systools&lt;/code&gt; использует этот список для обнаружения конфликтов имен между приложениями. По умолчанию &lt;code&gt;[]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="203f5ef503ea4bb4ad492f21d1f72f1ffbfab112" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;registered_name&lt;/code&gt; (if the port has a registered name)</source>
          <target state="translated">&lt;code&gt;registered_name&lt;/code&gt; (если у порта зарегистрированное имя)</target>
        </trans-unit>
        <trans-unit id="ae0c40de5dcb7f23614d90fbead5c1352234a6fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;regs/0&lt;/code&gt; displays information about all registered processes. &lt;code&gt;nregs/0&lt;/code&gt; does the same, but for all nodes in the network.</source>
          <target state="translated">&lt;code&gt;regs/0&lt;/code&gt; отображает информацию обо всех зарегистрированных процессах. &lt;code&gt;nregs/0&lt;/code&gt; делает то же самое, но для всех узлов в сети.</target>
        </trans-unit>
        <trans-unit id="0cde9bd7c0faf9d85dd5de38e11910f2a6fa285e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rel(4)&lt;/code&gt; manual page in SASL</source>
          <target state="translated">&lt;code&gt;rel(4)&lt;/code&gt; страница rel (4) в SASL</target>
        </trans-unit>
        <trans-unit id="dead67b720c96b0d2e0e43494dae6fb66e47d34b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;relative_product1(R1,&amp;nbsp;R2)&lt;/code&gt; is equivalent to &lt;code&gt;relative_product(converse(R1),&amp;nbsp;R2)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;relative_product1(R1,&amp;nbsp;R2)&lt;/code&gt; эквивалентно &lt;code&gt;relative_product(converse(R1),&amp;nbsp;R2)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ef995371a03355fde0a05fbe0a4a4d9412ad87d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;release&lt;/code&gt;, an empty list if the application does not belong to any release, otherwise a list of the release name;</source>
          <target state="translated">&lt;code&gt;release&lt;/code&gt; , пустой список, если приложение не принадлежит ни к какому релизу, в противном случае список с названием релиза;</target>
        </trans-unit>
        <trans-unit id="aa262afc0752d866f78bd1433169baee2813e4ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;releases/RelVsn&lt;/code&gt; contains the boot script &lt;code&gt;Name.boot&lt;/code&gt; renamed to &lt;code&gt;start.boot&lt;/code&gt; and, if found, the files &lt;code&gt;relup&lt;/code&gt; and &lt;code&gt;sys.config&lt;/code&gt; or &lt;code&gt;sys.config.src&lt;/code&gt;. These files are searched for in the same directory as &lt;code&gt;Name.rel&lt;/code&gt;, in the current working directory, and in any directories specified using option &lt;code&gt;path&lt;/code&gt;. In the case of &lt;code&gt;sys.config&lt;/code&gt; it is not included if &lt;code&gt;sys.config.src&lt;/code&gt; is found.</source>
          <target state="translated">&lt;code&gt;releases/RelVsn&lt;/code&gt; содержит загрузочный сценарий &lt;code&gt;Name.boot&lt;/code&gt; , переименованный в &lt;code&gt;start.boot&lt;/code&gt; , и, если они найдены, файлы &lt;code&gt;relup&lt;/code&gt; и &lt;code&gt;sys.config&lt;/code&gt; или &lt;code&gt;sys.config.src&lt;/code&gt; . Эти файлы ищутся в том же каталоге, что и &lt;code&gt;Name.rel&lt;/code&gt; , в текущем рабочем каталоге и во всех каталогах, указанных с помощью параметра &lt;code&gt;path&lt;/code&gt; . В случае &lt;code&gt;sys.config&lt;/code&gt; он не включается, если &lt;code&gt;sys.config.src&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="73f228fd86b959af55348e7d882e6cec2ca8f954" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;releases/Vsn&lt;/code&gt; - &lt;code&gt;.rel&lt;/code&gt; file and boot script &lt;code&gt;start.boot&lt;/code&gt;; if present in the release package, &lt;code&gt;relup&lt;/code&gt; and/or &lt;code&gt;sys.config&lt;/code&gt; or &lt;code&gt;sys.config.src&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;releases/Vsn&lt;/code&gt; - файл &lt;code&gt;.rel&lt;/code&gt; и загрузочный скрипт &lt;code&gt;start.boot&lt;/code&gt; ; если присутствует в пакете выпуска, &lt;code&gt;relup&lt;/code&gt; и / или &lt;code&gt;sys.config&lt;/code&gt; или &lt;code&gt;sys.config.src&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e4d5f27d10d69fc586f2a1d77639bd08de339c0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;relup(4)&lt;/code&gt; manual page in SASL</source>
          <target state="translated">&lt;code&gt;relup(4)&lt;/code&gt; справочная страница relup (4) в SASL</target>
        </trans-unit>
        <trans-unit id="35e9e07b5104505c091e492434e1b6e2baaad654" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;remote_user&lt;/code&gt; - from &lt;code&gt;mod_auth&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;remote_user&lt;/code&gt; - из &lt;code&gt;mod_auth&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7b912292350e7dd2585255413f48d595db50eac6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reopen/2,3&lt;/code&gt; are used for internally formatted logs, and &lt;code&gt;breopen/3&lt;/code&gt; for externally formatted logs.</source>
          <target state="translated">&lt;code&gt;reopen/2,3&lt;/code&gt; используются для журналов внутреннего формата, а &lt;code&gt;breopen/3&lt;/code&gt; - для журналов внешнего формата.</target>
        </trans-unit>
        <trans-unit id="1caecb3858181e6a505b978fc7cff8ff65ef781c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;repair&lt;/code&gt; - Defines the dets repair behaviour.</source>
          <target state="translated">&lt;code&gt;repair&lt;/code&gt; - Определяет поведение дец ремонта.</target>
        </trans-unit>
        <trans-unit id="be7825ac1d16f6cbbde7219604cc01f08dfc8fc1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;report&lt;/code&gt; - &lt;code&gt;SnmpReportInfo&lt;/code&gt; (see &lt;code&gt;&lt;a href=&quot;#handle_report&quot;&gt;handle_report&lt;/a&gt;&lt;/code&gt; for more info).</source>
          <target state="translated">&lt;code&gt;report&lt;/code&gt; - &lt;code&gt;SnmpReportInfo&lt;/code&gt; (подробнее см. &lt;code&gt;&lt;a href=&quot;#handle_report&quot;&gt;handle_report&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="aa31d0d9da25285cdec40ae21087bdf3875c655b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;require&lt;/code&gt; is an assert statement, which can be part of the &lt;code&gt;&lt;a href=&quot;write_test_chapter#suite&quot;&gt;Test Suite Information Function&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;write_test_chapter#info_function&quot;&gt;Test Case Information Function&lt;/a&gt;&lt;/code&gt;. If the required variable is unavailable, the test is skipped (unless a default value has been specified, see section &lt;code&gt;&lt;a href=&quot;write_test_chapter#info_function&quot;&gt;Test Case Information Function&lt;/a&gt;&lt;/code&gt; for details). Also, function &lt;code&gt;&lt;a href=&quot;ct#require-1&quot;&gt;ct:require/1/2&lt;/a&gt;&lt;/code&gt; can be called from a test case to check if a specific variable is available. The return value from this function must be checked explicitly and appropriate action be taken depending on the result (for example, to skip the test case if the variable in question does not exist).</source>
          <target state="translated">&lt;code&gt;require&lt;/code&gt; - это оператор assert, который может быть частью &lt;code&gt;&lt;a href=&quot;write_test_chapter#suite&quot;&gt;Test Suite Information Function&lt;/a&gt;&lt;/code&gt; или Информационной функции &lt;code&gt;&lt;a href=&quot;write_test_chapter#info_function&quot;&gt;Test Case Information Function&lt;/a&gt;&lt;/code&gt; . Если требуемая переменная недоступна, тест пропускается (если не указано значение по умолчанию, подробности см. В разделе &lt;code&gt;&lt;a href=&quot;write_test_chapter#info_function&quot;&gt;Test Case Information Function&lt;/a&gt;&lt;/code&gt; ). Кроме того, функция &lt;code&gt;&lt;a href=&quot;ct#require-1&quot;&gt;ct:require/1/2&lt;/a&gt;&lt;/code&gt; может быть вызвана из тестового примера, чтобы проверить, доступна ли конкретная переменная. Возвращаемое значение этой функции должно быть явно проверено, и в зависимости от результата должно быть предпринято соответствующее действие (например, чтобы пропустить тестовый пример, если рассматриваемая переменная не существует).</target>
        </trans-unit>
        <trans-unit id="96a7d9eca2ecc0e749453229901995f4b5035a25" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;resolv&lt;/code&gt; (Unix resolv.conf)</source>
          <target state="translated">&lt;code&gt;resolv&lt;/code&gt; (Unix resolv.conf)</target>
        </trans-unit>
        <trans-unit id="6578da0c8fe5f5d149e969260d305851d33ab8a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;resolve/0&lt;/code&gt; returns the official &lt;code&gt;HostName&lt;/code&gt; of the current host.</source>
          <target state="translated">&lt;code&gt;resolve/0&lt;/code&gt; возвращает официальное имя &lt;code&gt;HostName&lt;/code&gt; текущего хоста.</target>
        </trans-unit>
        <trans-unit id="48cc9c7cd30a4bfe2c8d7fc7da352e6dfccd6690" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rest_for_one&lt;/code&gt; - If one child process terminates and is to be restarted, the 'rest' of the child processes (that is, the child processes after the terminated child process in the start order) are terminated. Then the terminated child process and all child processes after it are restarted.</source>
          <target state="translated">&lt;code&gt;rest_for_one&lt;/code&gt; - Если один дочерний процесс завершается и должен быть перезапущен, &amp;laquo;остальные&amp;raquo; дочерние процессы (то есть дочерние процессы после завершенного дочернего процесса в порядке запуска) завершаются. Затем завершенный дочерний процесс и все дочерние процессы после него перезапускаются.</target>
        </trans-unit>
        <trans-unit id="18f6700cb534692c96844b101482fdde04dfa044" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;restart&lt;/code&gt; defines when a terminated child process is to be restarted.</source>
          <target state="translated">&lt;code&gt;restart&lt;/code&gt; определяет, когда должен быть перезапущен завершенный дочерний процесс.</target>
        </trans-unit>
        <trans-unit id="8bb040891b1153b7fb0d8501cd77e1639c12960d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;restart&lt;/code&gt; defines when a terminated child process must be restarted. A &lt;code&gt;permanent&lt;/code&gt; child process is always restarted. A &lt;code&gt;temporary&lt;/code&gt; child process is never restarted (even when the supervisor's restart strategy is &lt;code&gt;rest_for_one&lt;/code&gt; or &lt;code&gt;one_for_all&lt;/code&gt; and a sibling's death causes the temporary process to be terminated). A &lt;code&gt;transient&lt;/code&gt; child process is restarted only if it terminates abnormally, that is, with another exit reason than &lt;code&gt;normal&lt;/code&gt;, &lt;code&gt;shutdown&lt;/code&gt;, or &lt;code&gt;{shutdown,Term}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;restart&lt;/code&gt; определяет, когда необходимо перезапустить завершенный дочерний процесс. &lt;code&gt;permanent&lt;/code&gt; дочерний процесс перезапускается всегда. &lt;code&gt;temporary&lt;/code&gt; дочерний процесс никогда не перезапускается (даже когда стратегия перезапуска супервизора является &lt;code&gt;rest_for_one&lt;/code&gt; или &lt;code&gt;one_for_all&lt;/code&gt; и смерть родного брата причиняет временный процесс будет прекращен). &lt;code&gt;transient&lt;/code&gt; процесс ребенка возобновляются только если он завершается аварийно, то есть, с другой причиной выхода , чем &lt;code&gt;normal&lt;/code&gt; , &lt;code&gt;shutdown&lt;/code&gt; или &lt;code&gt;{shutdown,Term}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b6f13062c07413957b07327b0960e0d7b1c6faae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;restart_emulator&lt;/code&gt; if this instruction is encountered in the script</source>
          <target state="translated">&lt;code&gt;restart_emulator&lt;/code&gt; , если эта инструкция встречается в скрипте</target>
        </trans-unit>
        <trans-unit id="dea520911052ada4482320f73d5f7f7828801afc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;restriction_reason()&lt;/code&gt; = &lt;code&gt;epath | efnamena | elogin | enotbinary&lt;/code&gt; - all restrictions are not always relevant to all functions</source>
          <target state="translated">&lt;code&gt;restriction_reason()&lt;/code&gt; = &lt;code&gt;epath | efnamena | elogin | enotbinary&lt;/code&gt; - все ограничения не всегда актуальны для всех функций</target>
        </trans-unit>
        <trans-unit id="b0b37cf09753b4467c363c85e405ec5a16f552ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;resume&lt;/code&gt; implies the default &lt;code&gt;FetchTimeout&lt;/code&gt;, which is 10 seconds</source>
          <target state="translated">&lt;code&gt;resume&lt;/code&gt; подразумевает значение &lt;code&gt;FetchTimeout&lt;/code&gt; по умолчанию , которое составляет 10 секунд.</target>
        </trans-unit>
        <trans-unit id="73e74acfdcf2b62421adf8e11e6312516974a632" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;return&lt;/code&gt; - for &lt;code&gt;[{'_',[],[{return_trace}]}]&lt;/code&gt; (report the return value from a traced function)</source>
          <target state="translated">&lt;code&gt;return&lt;/code&gt; - для &lt;code&gt;[{'_',[],[{return_trace}]}]&lt;/code&gt; (сообщить возвращаемое значение из отслеживаемой функции)</target>
        </trans-unit>
        <trans-unit id="79dc67411fa6c27a6ed3fa9f9f8b17896ed2f0d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;return_to&lt;/code&gt; and &lt;code&gt;return_from&lt;/code&gt; trace messages are lost when tracing on the spawn BIFs.</source>
          <target state="translated">&lt;code&gt;return_to&lt;/code&gt; и &lt;code&gt;return_from&lt;/code&gt; сообщения трассировки теряются при трассировке на икру BIFS.</target>
        </trans-unit>
        <trans-unit id="10eb0fd561ac4537b0fbc9789464e2edc3507e89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rfc1123_date/0&lt;/code&gt; returns the current date in RFC 1123 format. &lt;code&gt;rfc_date/1&lt;/code&gt; converts the date in the Erlang format to the RFC 1123 date format.</source>
          <target state="translated">&lt;code&gt;rfc1123_date/0&lt;/code&gt; возвращает текущую дату в формате RFC 1123. &lt;code&gt;rfc_date/1&lt;/code&gt; преобразует дату в формате Erlang в формат даты RFC 1123.</target>
        </trans-unit>
        <trans-unit id="becde7626294b47c704773cb540465b1ed4e9390" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rle&lt;/code&gt; to limit match distances to one (run-length encoding)</source>
          <target state="translated">&lt;code&gt;rle&lt;/code&gt; , чтобы ограничить расстояние совпадения до одного (кодирование длин серий)</target>
        </trans-unit>
        <trans-unit id="3a5ff3d1e61f14df1437fd6d188a57803196995b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rpc:call()&lt;/code&gt; and friends makes it quite hard to distinguish between successful results, raised exceptions, and other errors. This cannot be changed due to compatibility reasons. As of OTP 23, a new module &lt;code&gt;&lt;a href=&quot;erpc&quot;&gt;erpc&lt;/a&gt;&lt;/code&gt; was introduced in order to provide an API that makes it possible to distingush between the different results. The &lt;code&gt;erpc&lt;/code&gt; module provides a subset (however, the central subset) of the functionality available in the &lt;code&gt;rpc&lt;/code&gt; module. The &lt;code&gt;erpc&lt;/code&gt; implementation also provides a more scalable implementation with better performance than the original &lt;code&gt;rpc&lt;/code&gt; implementation. However, since the introduction of &lt;code&gt;erpc&lt;/code&gt;, the &lt;code&gt;rpc&lt;/code&gt; module implements large parts of its central functionality using &lt;code&gt;erpc&lt;/code&gt;, so the &lt;code&gt;rpc&lt;/code&gt; module wont not suffer scalability wise and performance wise compared to &lt;code&gt;erpc&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="644dd7e73ac86edeaa8ee314012f84e50ea0d84d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rpc&lt;/code&gt; manual page in Kernel</source>
          <target state="translated">&lt;code&gt;rpc&lt;/code&gt; страница руководства rpc в ядре</target>
        </trans-unit>
        <trans-unit id="878eb63062d735355fcc6c37efb0b6ae5b64477a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;run_erl&lt;/code&gt; is a wrapper that provides logging of output from the runtime system to file. It also provides a simple mechanism for attaching to the Erlang shell (&lt;code&gt;to_erl&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;run_erl&lt;/code&gt; - это оболочка, которая обеспечивает регистрацию вывода из системы времени выполнения в файл. Он также предоставляет простой механизм для подключения к оболочке Erlang ( &lt;code&gt;to_erl&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="59771bcdadf04ee85ff53f63e69f07db4faf3f43" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;runnable : integer&lt;/code&gt; :: Runnable. Ex. &lt;code&gt;1&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;runnable : integer&lt;/code&gt; :: Runnable. Ex. &lt;code&gt;1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="26fd9d14db5e4fcc321544ac7ea25df2ddea3c37" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;runnable&lt;/code&gt; (ready to run, but another process is running)</source>
          <target state="translated">&lt;code&gt;runnable&lt;/code&gt; (готов к запуску, но работает другой процесс)</target>
        </trans-unit>
        <trans-unit id="42b5c15072d71402981ef76eb126e5e00ef61957" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;running&lt;/code&gt; - The process is running. &lt;code&gt;Info={}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;running&lt;/code&gt; - процесс запущен. &lt;code&gt;Info={}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ed752e775d6018a2d31a19161dde1420f6d71649" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;running_db_nodes&lt;/code&gt;. Returns a list of nodes where Mnesia currently is running. This function can be called even if Mnesia is not yet running, but it then has slightly different semantics.</source>
          <target state="translated">&lt;code&gt;running_db_nodes&lt;/code&gt; . Возвращает список узлов, на которых сейчас работает Mnesia. Эта функция может быть вызвана, даже если Mnesia еще не запущена, но тогда ее семантика немного отличается.</target>
        </trans-unit>
        <trans-unit id="2429fa99d76f82928a5958828bb5fbc614b38c52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rwlck&lt;/code&gt; is a pointer to an initialized rwlock.</source>
          <target state="translated">&lt;code&gt;rwlck&lt;/code&gt; - это указатель на инициализированный rwlock.</target>
        </trans-unit>
        <trans-unit id="dff35b17db19797318d995adf141200ee18b5447" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rwlck&lt;/code&gt; is a pointer to an rwlock to destroy.</source>
          <target state="translated">&lt;code&gt;rwlck&lt;/code&gt; - это указатель на rwlock, который нужно уничтожить.</target>
        </trans-unit>
        <trans-unit id="b339605689a0ebacf25c15f5d5d11548a8202e57" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rwlck&lt;/code&gt; is a pointer to an rwlock to read unlock.</source>
          <target state="translated">&lt;code&gt;rwlck&lt;/code&gt; - это указатель на rwlock для разблокировки чтения.</target>
        </trans-unit>
        <trans-unit id="046b572372cc868cfad39d254b43d6ae9d083d90" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rwlck&lt;/code&gt; is a pointer to an rwlock to read/write lock.</source>
          <target state="translated">&lt;code&gt;rwlck&lt;/code&gt; - это указатель на rwlock для блокировки чтения / записи.</target>
        </trans-unit>
        <trans-unit id="31572995258393c7efe7170cf6c689f4f4a92191" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rwlck&lt;/code&gt; is a pointer to an rwlock to read/write unlock.</source>
          <target state="translated">&lt;code&gt;rwlck&lt;/code&gt; - это указатель на rwlock для разблокировки чтения / записи.</target>
        </trans-unit>
        <trans-unit id="48ce4fc95d093a6ebf29155d71fd7dac1ca203b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rwlck&lt;/code&gt; is a pointer to an rwlock to try to read lock.</source>
          <target state="translated">&lt;code&gt;rwlck&lt;/code&gt; - это указатель на rwlock для попытки чтения блокировки.</target>
        </trans-unit>
        <trans-unit id="e5f9fb44b57b22fa7d719d0a6d85f98a900e45ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rwlck&lt;/code&gt; is a pointer to the rwlock to read lock.</source>
          <target state="translated">&lt;code&gt;rwlck&lt;/code&gt; - это указатель на блокировку чтения rwlock.</target>
        </trans-unit>
        <trans-unit id="dc0063396ffd1605ce1871de9ff2d80b9f75e707" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rwlck&lt;/code&gt;is pointer to an rwlock to try to read/write lock.</source>
          <target state="translated">&lt;code&gt;rwlck&lt;/code&gt; - это указатель на rwlock для попытки блокировки чтения / записи.</target>
        </trans-unit>
        <trans-unit id="3b606158c9cccbc0d370680206ab0e93f9610eaf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;s&lt;/code&gt; - Tagged source: X register, Y register, or a literal term. The tag will be tested at runtime to retrieve the value from an X register, a Y register, or simply use the value as a tagged Erlang term. (Implementation note: An X register is tagged as a pid, and a Y register as a port. Therefore the literal term must not contain a port or pid.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80b91b5f13096903adb29e69142a058fe27167c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;s&lt;/code&gt; - X register, Y register, or any literal term. Equivalent to &lt;code&gt;xyc&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5321813fd2597a89aa3f4849e998c3f9004deb9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;s&lt;/code&gt; is the string to assign. The string itself must have been created through a single call to &lt;code&gt;malloc()&lt;/code&gt; or similar a function, so that the registry can later delete it if necessary by calling &lt;code&gt;free()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;s&lt;/code&gt; - строка для назначения. Сама строка должна быть создана с помощью одного вызова &lt;code&gt;malloc()&lt;/code&gt; или аналогичной функции, чтобы реестр мог позже удалить ее, если это необходимо, вызвав &lt;code&gt;free()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="492bb44dd4210fc15721d408bc39dd4a5b08ede2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;save_scenario/0&lt;/code&gt; saves information about the current runtime scenario. This information will later be used when &lt;code&gt;&lt;a href=&quot;#make_config-0&quot;&gt;make_config/0&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;#make_config-1&quot;&gt;make_config/1&lt;/a&gt;&lt;/code&gt; is called.</source>
          <target state="translated">&lt;code&gt;save_scenario/0&lt;/code&gt; сохраняет информацию о текущем сценарии выполнения. Эта информация позже будет использоваться при &lt;code&gt;&lt;a href=&quot;#make_config-0&quot;&gt;make_config/0&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;#make_config-1&quot;&gt;make_config/1&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="67aedacb055a5db07fe0531d8d1bebe9034a83c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sbc_blocks : integer&lt;/code&gt; :: Number of singleblocks in instance. Ex. &lt;code&gt;1&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;sbc_blocks : integer&lt;/code&gt; :: Количество одиночных блоков в экземпляре. Ex. &lt;code&gt;1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="af25a742d41f35c40e2d131a73bf30d935bc24fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sbc_blocks_size : integer&lt;/code&gt; :: Total size of all singleblock blocks in instance. Ex. &lt;code&gt;285296&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;sbc_blocks_size : integer&lt;/code&gt; :: Общий размер всех одноблочных блоков в экземпляре. Ex. &lt;code&gt;285296&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3545b362ef09a5df3c9f9018196ad95d849d099c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sbc_carriers : integer&lt;/code&gt; :: Number of singleblock carriers in instance. Ex. &lt;code&gt;1&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;sbc_carriers : integer&lt;/code&gt; :: Количество одноблочных несущих в экземпляре. Ex. &lt;code&gt;1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b743ba1ac8774f48bcb9e286850e7ca9afbe736c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sbc_carriers_size : integer&lt;/code&gt; :: Total size of singleblock blocks carriers in instance. Ex. &lt;code&gt;1343488&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;sbc_carriers_size : integer&lt;/code&gt; :: Общий размер несущих одноблочных блоков. Ex. &lt;code&gt;1343488&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="24f95fe4dd374b8f761b13faef347622004e30f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;scheduler : integer&lt;/code&gt; :: Scheduler ID. Ex. &lt;code&gt;1&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;scheduler : integer&lt;/code&gt; :: ID планировщика. Ex. &lt;code&gt;1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f2722b92af9ae891cb5c5e5510162b02e6726fde" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;scheduler_wall_time&lt;/code&gt; is by default disabled. To enable it, use &lt;code&gt;erlang:system_flag(scheduler_wall_time, true)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;scheduler_wall_time&lt;/code&gt; по умолчанию отключен. Чтобы включить его, используйте &lt;code&gt;erlang:system_flag(scheduler_wall_time, true)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eddd3519b2c6eba3d7b146567fc4fc81c37d71d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;schema_location&lt;/code&gt;. Returns the initial schema location.</source>
          <target state="translated">&lt;code&gt;schema_location&lt;/code&gt; . Возвращает исходное расположение схемы.</target>
        </trans-unit>
        <trans-unit id="1c69a1656bcc31b0f51d1c5efa9ed2ec0e6e2244" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;script(4)&lt;/code&gt; manual page in SASL</source>
          <target state="translated">&lt;code&gt;script(4)&lt;/code&gt; страница руководства в SASL</target>
        </trans-unit>
        <trans-unit id="5d54d2b5717b12f311300b2446726b7046fefbd8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sed&lt;/code&gt; -- Stream Editor for basic text transformation.</source>
          <target state="translated">&lt;code&gt;sed&lt;/code&gt; - Stream Editor для базового преобразования текста.</target>
        </trans-unit>
        <trans-unit id="dbba17abcfc4e79daeff828f82d82e205b3d595b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;seed({A1, A2, A3})&lt;/code&gt; is equivalent to &lt;code&gt;seed(A1, A2, A3)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;seed({A1, A2, A3})&lt;/code&gt; эквивалентно &lt;code&gt;seed(A1, A2, A3)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="655b5c4be89633126a7de828e0aef4b261102c61" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;select/2&lt;/code&gt; sends a query to the driver and returns the result.</source>
          <target state="translated">&lt;code&gt;select/2&lt;/code&gt; отправляет запрос драйверу и возвращает результат.</target>
        </trans-unit>
        <trans-unit id="81263c4012a8f3ccb2811423405b6a934a01b505" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;select&lt;/code&gt; - The table is traversed by calling &lt;code&gt;&lt;a href=&quot;dets#select-3&quot;&gt;dets:select/3&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;dets#select-1&quot;&gt;dets:select/1&lt;/a&gt;&lt;/code&gt;. Option &lt;code&gt;n_objects&lt;/code&gt; determines the number of objects returned (the third argument of &lt;code&gt;select/3&lt;/code&gt;). The match specification (the second argument of &lt;code&gt;select/3&lt;/code&gt;) is assembled by &lt;code&gt;qlc&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e269f5a1b09faf1cc6193296b165a0f6ac0789e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;select&lt;/code&gt; - The table is traversed by calling &lt;code&gt;dets:select/3&lt;/code&gt; and &lt;code&gt;dets:select/1&lt;/code&gt;. Option &lt;code&gt;n_objects&lt;/code&gt; determines the number of objects returned (the third argument of &lt;code&gt;select/3&lt;/code&gt;). The match specification (the second argument of &lt;code&gt;select/3&lt;/code&gt;) is assembled by &lt;code&gt;qlc&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;select&lt;/code&gt; - таблица &lt;code&gt;dets:select/3&lt;/code&gt; путем вызова dets: select / 3 и &lt;code&gt;dets:select/1&lt;/code&gt; . Опция &lt;code&gt;n_objects&lt;/code&gt; определяет количество возвращаемых объектов (третий аргумент &lt;code&gt;select/3&lt;/code&gt; ). Спецификация соответствия (второй аргумент &lt;code&gt;select/3&lt;/code&gt; ) собирается &lt;code&gt;qlc&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="071408e6c99d649c45dbdcb7cefc777106d38dca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;select&lt;/code&gt; must always run within an activity, such as a transaction. The following function can be constructed to call from the shell:</source>
          <target state="translated">&lt;code&gt;select&lt;/code&gt; всегда должен выполняться в рамках действия, например транзакции. Следующая функция может быть создана для вызова из оболочки:</target>
        </trans-unit>
        <trans-unit id="1aa18bc2dfcbda04a52e65c27f2fd8ae29f3d5af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;select&lt;/code&gt;. The table is traversed by calling &lt;code&gt;mnesia:select/4&lt;/code&gt; and &lt;code&gt;mnesia:select/1&lt;/code&gt;. The match specification (the second argument of &lt;code&gt;select/3&lt;/code&gt;) is assembled by QLC: simple filters are translated into equivalent match specifications. More complicated filters need to be applied to all objects returned by &lt;code&gt;select/3&lt;/code&gt; given a match specification that matches all objects.</source>
          <target state="translated">&lt;code&gt;select&lt;/code&gt; . &lt;code&gt;mnesia:select/4&lt;/code&gt; таблице осуществляется вызовом mnesia: select / 4 и &lt;code&gt;mnesia:select/1&lt;/code&gt; . Спецификация соответствия (второй аргумент &lt;code&gt;select/3&lt;/code&gt; ) собирается QLC: простые фильтры преобразуются в эквивалентные спецификации соответствия. Более сложные фильтры должны применяться ко всем объектам, возвращаемым &lt;code&gt;select/3&lt;/code&gt; ,с учетом спецификации соответствия, которая соответствует всем объектам.</target>
        </trans-unit>
        <trans-unit id="5cdddd354c307fc8695cdc5cf4f7d119e0015163" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;self()&lt;/code&gt; returns the pid of the process that executes &lt;code&gt;self()&lt;/code&gt;, in this case the pid of &quot;ping&quot;. (Recall the code for &quot;pong&quot;, this lands up in the variable &lt;code&gt;Ping_PID&lt;/code&gt; in the &lt;code&gt;receive&lt;/code&gt; previously explained.)</source>
          <target state="translated">&lt;code&gt;self()&lt;/code&gt; возвращает pid процесса, который выполняет &lt;code&gt;self()&lt;/code&gt; , в данном случае pid &quot;ping&quot;. (Вспомните код для &quot;pong&quot;, он попадает в переменную &lt;code&gt;Ping_PID&lt;/code&gt; в ранее объясненном &lt;code&gt;receive&lt;/code&gt; .)</target>
        </trans-unit>
        <trans-unit id="1ba0e279dfc87c895685a3e3f71c780338391921" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;send_cancelled_reason()&lt;/code&gt; - the message sending was deliberately cancelled. &lt;code&gt;reason_for_send_cancel()&lt;/code&gt; is the reason given in the &lt;code&gt;cancel&lt;/code&gt; return from the &lt;code&gt;&lt;a href=&quot;megaco_transport#send_message&quot;&gt;send_message&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="translated">&lt;code&gt;send_cancelled_reason()&lt;/code&gt; - отправка сообщения была намеренно отменена. &lt;code&gt;reason_for_send_cancel()&lt;/code&gt; - причина, указанная в возврате &lt;code&gt;cancel&lt;/code&gt; из функции &lt;code&gt;&lt;a href=&quot;megaco_transport#send_message&quot;&gt;send_message&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="93234f2ab5ee323c0146db35ca1952d365873a35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;send_failed_reason()&lt;/code&gt; - an error occurred while attempting to send the message.</source>
          <target state="translated">&lt;code&gt;send_failed_reason()&lt;/code&gt; - произошла ошибка при попытке отправить сообщение.</target>
        </trans-unit>
        <trans-unit id="d161cb1007cdac7ebd03436dcd7406b549feacd9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;send_message&lt;/code&gt; - Send a message. &lt;strong&gt;Mandatory&lt;/strong&gt;</source>
          <target state="translated">&lt;code&gt;send_message&lt;/code&gt; - Отправить сообщение. &lt;strong&gt;Обязательное&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4ac529b2d6293204d912fe9074ddd8900b55f583" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;seq_trace&lt;/code&gt; implements sequential tracing (known in the AXE10 world, and sometimes called &quot;forlopp tracing&quot;). &lt;code&gt;dbg&lt;/code&gt; can interpret messages generated from &lt;code&gt;seq_trace&lt;/code&gt; and the same tracer function for both types of tracing can be used. The &lt;code&gt;seq_trace&lt;/code&gt; messages can even be sent to a trace port for further analysis.</source>
          <target state="translated">&lt;code&gt;seq_trace&lt;/code&gt; реализует последовательную трассировку (известную в мире AXE10 и иногда называемую &amp;laquo;трассировкой forlopp&amp;raquo;). &lt;code&gt;dbg&lt;/code&gt; может интерпретировать сообщения, сгенерированные из &lt;code&gt;seq_trace&lt;/code&gt; , и можно использовать одну и ту же функцию трассировки для обоих типов трассировки. Сообщения &lt;code&gt;seq_trace&lt;/code&gt; могут даже быть отправлены в порт трассировки для дальнейшего анализа.</target>
        </trans-unit>
        <trans-unit id="d2fb86b915b34891fd5cf4eb06bab85aca636b9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;seq_trace&lt;/code&gt; provides functions that control all aspects of sequential tracing. There are functions for activation, deactivation, inspection, and for collection of the trace output.</source>
          <target state="translated">&lt;code&gt;seq_trace&lt;/code&gt; предоставляет функции, управляющие всеми аспектами последовательной трассировки. Есть функции для активации, деактивации, проверки и сбора результатов трассировки.</target>
        </trans-unit>
        <trans-unit id="9416e87758be922f8530c11afc0f09e59c485bb3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;server_name&lt;/code&gt; is the registered name of the intended recipient.</source>
          <target state="translated">&lt;code&gt;server_name&lt;/code&gt; - это зарегистрированное имя предполагаемого получателя.</target>
        </trans-unit>
        <trans-unit id="b11a92faf8246f597f5eeb51abfdfa89885ec3fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;set&lt;/code&gt;. A table of this type has at most one object with a given key. If an object with a key already present in the table is inserted, the existing object is overwritten by the new object.</source>
          <target state="translated">&lt;code&gt;set&lt;/code&gt; . Таблица этого типа содержит не более одного объекта с данным ключом. Если вставляется объект с ключом, уже присутствующим в таблице, существующий объект перезаписывается новым объектом.</target>
        </trans-unit>
        <trans-unit id="e02f0b470922a4c9e4cbad576e4576163b1b3e5c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;set_env/1&lt;/code&gt; is equivalent to &lt;code&gt;set_env(Config, [])&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb2190aab0ae0b72291ec3b0e215bab6fd2511bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;set_env/2&lt;/code&gt; uses the standard &lt;code&gt;gen_server&lt;/code&gt; time-out value (5000 ms). Option &lt;code&gt;timeout&lt;/code&gt; can be specified if another time-out value is useful, for example, in situations where the application controller is heavily loaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37fc2ac2d7cef365a81e57212caaecd91e549506" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;set_env/4&lt;/code&gt; uses the standard &lt;code&gt;gen_server&lt;/code&gt; time-out value (5000 ms). Option &lt;code&gt;timeout&lt;/code&gt; can be specified if another time-out value is useful, for example, in situations where the application controller is heavily loaded.</source>
          <target state="translated">&lt;code&gt;set_env/4&lt;/code&gt; использует стандартный &lt;code&gt;gen_server&lt;/code&gt; значение тайм-аута (5000 мс). Параметр &lt;code&gt;timeout&lt;/code&gt; может быть указан, если другое значение тайм-аута полезно, например, в ситуациях, когда контроллер приложения сильно загружен.</target>
        </trans-unit>
        <trans-unit id="723b6ec3558b1a05623ea2acefcef07660ef9f02" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setelement/3&lt;/code&gt; copies the tuple it modifies. Therefore, updating a tuple in a loop using &lt;code&gt;setelement/3&lt;/code&gt; creates a new copy of the tuple every time.</source>
          <target state="translated">&lt;code&gt;setelement/3&lt;/code&gt; копирует изменяемый кортеж. Следовательно, обновление кортежа в цикле с использованием &lt;code&gt;setelement/3&lt;/code&gt; каждый раз создает новую копию кортежа.</target>
        </trans-unit>
        <trans-unit id="b519d57675ddcea40e608eb2fe2e7cfc84177a00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setup/5&lt;/code&gt; should spawn a process that connects to &lt;code&gt;Node&lt;/code&gt;. When connection has been established it should perform the Erlang distribution handshake for the connection. If the handshake successfully completes it should continue to function as a connection supervisor. This process should preferably execute on &lt;code&gt;max&lt;/code&gt; priority.</source>
          <target state="translated">&lt;code&gt;setup/5&lt;/code&gt; должен запустить процесс, который подключается к &lt;code&gt;Node&lt;/code&gt; . Когда соединение установлено, он должен выполнить квитирование распределения Erlang для соединения. Если рукопожатие успешно завершено, оно должно продолжать работать как супервизор соединения. Этот процесс предпочтительно должен выполняться с &lt;code&gt;max&lt;/code&gt; приоритетом.</target>
        </trans-unit>
        <trans-unit id="806347a63259d8b7e63c063654b582b47a60b4e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setup&lt;/code&gt; sets up a single fixture for running all of the specified tests, with optional teardown afterwards. The arguments are described in detail below.</source>
          <target state="translated">&lt;code&gt;setup&lt;/code&gt; настраивает единое приспособление для запуска всех указанных тестов с возможностью последующего демонтажа. Аргументы подробно описаны ниже.</target>
        </trans-unit>
        <trans-unit id="1b0bc367b928b31c1cb6db10bc0b9f8e3428ec8b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setup_context&lt;/code&gt; is a pointer to a structure that will be passed as second argument to the &lt;code&gt;socket&lt;/code&gt; callback in the &lt;code&gt;cbs&lt;/code&gt; structure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7deb750b6f0af86ba5927837d5d00ed9a2f687d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;shell&lt;/code&gt; is equivalent to &lt;code&gt;tracer(node(),[{file, {local, &quot;ttb&quot;}}, shell])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;shell&lt;/code&gt; эквивалентна &lt;code&gt;tracer(node(),[{file, {local, &quot;ttb&quot;}}, shell])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0819ffc4c06ffc6f5a24dc6e038264cce8bdb7b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;shortage_reason()&lt;/code&gt; = &lt;code&gt;etnospc | epnospc&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;shortage_reason()&lt;/code&gt; &lt;code&gt;etnospc | epnospc&lt;/code&gt; () = etnospc | epnospc</target>
        </trans-unit>
        <trans-unit id="a4557b700cde27f3499b244e63b6493bece0c7a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;shutdown&lt;/code&gt; defines how a child process is to be terminated.</source>
          <target state="translated">&lt;code&gt;shutdown&lt;/code&gt; определяет, как должен завершаться дочерний процесс.</target>
        </trans-unit>
        <trans-unit id="abf746ddd6d286c4d87ec27da0c65ace89118fc0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;shutdown&lt;/code&gt; defines how a child process must be terminated. &lt;code&gt;brutal_kill&lt;/code&gt; means that the child process is unconditionally terminated using &lt;code&gt;exit(Child,kill)&lt;/code&gt;. An integer time-out value means that the supervisor tells the child process to terminate by calling &lt;code&gt;exit(Child,shutdown)&lt;/code&gt; and then wait for an exit signal with reason &lt;code&gt;shutdown&lt;/code&gt; back from the child process. If no exit signal is received within the specified number of milliseconds, the child process is unconditionally terminated using &lt;code&gt;exit(Child,kill)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;shutdown&lt;/code&gt; определяет, как должен быть завершен дочерний процесс. &lt;code&gt;brutal_kill&lt;/code&gt; означает, что дочерний процесс безоговорочно завершается с помощью &lt;code&gt;exit(Child,kill)&lt;/code&gt; . Целочисленное значение времени ожидания означает, что супервизор сообщает дочернему процессу о завершении, вызывая &lt;code&gt;exit(Child,shutdown)&lt;/code&gt; а затем ждет сигнала выхода с указанием причины &lt;code&gt;shutdown&lt;/code&gt; дочернего процесса. Если в течение указанного количества миллисекунд не получено никакого сигнала выхода, дочерний процесс безоговорочно завершается с использованием &lt;code&gt;exit(Child,kill)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fd4753d2069f000bf12b0df5bc36d0d3ade9d00f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;shutdown&lt;/code&gt;, if the event handler has been removed because the event manager is terminating.</source>
          <target state="translated">&lt;code&gt;shutdown&lt;/code&gt; , если обработчик событий был удален из-за завершения работы диспетчера событий.</target>
        </trans-unit>
        <trans-unit id="040336bda627e687cd170b4ad63d3d08ce8b2d55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;silent_connections&lt;/code&gt; can also be specified in a test suite. This is accomplished by returning a tuple, &lt;code&gt;{silent_connections,ConnTypes}&lt;/code&gt;, in the &lt;code&gt;suite/0&lt;/code&gt; or test case information list. If &lt;code&gt;ConnTypes&lt;/code&gt; is a list of atoms (SSH, Telnet, FTP, RPC and/or SNMP), output for any corresponding connections are suppressed. Full logging is by default enabled for any connection of type not specified in &lt;code&gt;ConnTypes&lt;/code&gt;. Hence, if &lt;code&gt;ConnTypes&lt;/code&gt; is the empty list, logging is enabled for all connections.</source>
          <target state="translated">&lt;code&gt;silent_connections&lt;/code&gt; также можно указать в наборе тестов. Это достигается путем возврата кортежа, &lt;code&gt;{silent_connections,ConnTypes}&lt;/code&gt; , в списке информации &lt;code&gt;suite/0&lt;/code&gt; или тестового примера. Если &lt;code&gt;ConnTypes&lt;/code&gt; представляет собой список атомов (SSH, Telnet, FTP, RPC и / или SNMP), вывод для любых соответствующих подключений подавляется. По умолчанию полное ведение журнала включено для любого соединения типа, не указанного в &lt;code&gt;ConnTypes&lt;/code&gt; . Следовательно, если &lt;code&gt;ConnTypes&lt;/code&gt; - пустой список, ведение журнала включено для всех подключений.</target>
        </trans-unit>
        <trans-unit id="f8bca7dbd674462c4e129a1781b6ba16f4de4629" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;silent_connections&lt;/code&gt; can also be specified with a term in a test specification (see section &lt;code&gt;&lt;a href=&quot;run_test_chapter#test_specifications&quot;&gt;Test Specifications&lt;/a&gt;&lt;/code&gt; in section Running Tests and Analyzing Results). Connections provided with start flag/option &lt;code&gt;silent_connections&lt;/code&gt; are merged with any connections listed in the test specification.</source>
          <target state="translated">&lt;code&gt;silent_connections&lt;/code&gt; также можно указать с помощью термина в спецификации теста (см. раздел &amp;laquo; &lt;code&gt;&lt;a href=&quot;run_test_chapter#test_specifications&quot;&gt;Test Specifications&lt;/a&gt;&lt;/code&gt; в разделе &amp;laquo;Выполнение тестов и анализ результатов&amp;raquo;). Соединения, предоставленные с флагом запуска / опцией &lt;code&gt;silent_connections&lt;/code&gt; , объединяются с любыми соединениями, перечисленными в спецификации теста.</target>
        </trans-unit>
        <trans-unit id="e4275c8d58280a491b97514105528400bb09c2ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;silent_connections&lt;/code&gt;, see &lt;code&gt;&lt;a href=&quot;run_test_chapter#silent_connections&quot;&gt;Silent Connections&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;silent_connections&lt;/code&gt; , см. &lt;code&gt;&lt;a href=&quot;run_test_chapter#silent_connections&quot;&gt;Silent Connections&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a3f84446b808a2de27d8f496e723aae82586d721" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;simple_one_for_one&lt;/code&gt; - A simplified &lt;code&gt;one_for_one&lt;/code&gt; supervisor, where all child processes are dynamically added instances of the same process type, that is, running the same code.</source>
          <target state="translated">&lt;code&gt;simple_one_for_one&lt;/code&gt; - упрощенный супервизор &lt;code&gt;one_for_one&lt;/code&gt; , где все дочерние процессы являются динамически добавленными экземплярами одного и того же типа процесса, то есть выполняющими один и тот же код.</target>
        </trans-unit>
        <trans-unit id="f24bec336969a4cfa5778cf9dca31f097079e3b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;size : integer&lt;/code&gt; :: Carrier size. Ex. &lt;code&gt;262144&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;size : integer&lt;/code&gt; :: Размер несущей. Ex. &lt;code&gt;262144&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b22bcbafe88ddb303bdfa29c4f7d7abffe43cc8e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;size/1&lt;/code&gt; returns the size for both tuples and binaries.</source>
          <target state="translated">&lt;code&gt;size/1&lt;/code&gt; возвращает размер как для кортежей, так и для двоичных файлов.</target>
        </trans-unit>
        <trans-unit id="afd8d87c333023befea22ee5046b439bb227714b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;size/memory threshold&lt;/code&gt;. When the total size or total memory of a fragmented table (or a single fragment) exceeds some application-specific threshold, it can be time to add a new fragment dynamically to obtain a better distribution of records.</source>
          <target state="translated">&lt;code&gt;size/memory threshold&lt;/code&gt; . Когда общий размер или общая память фрагментированной таблицы (или отдельного фрагмента) превышает некоторый порог, зависящий от приложения, может настало время динамически добавить новый фрагмент, чтобы получить лучшее распределение записей.</target>
        </trans-unit>
        <trans-unit id="593f72928313cf299a1b78fe8654af5202977953" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;size&lt;/code&gt; indicates the length of &lt;code&gt;bptr&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;size&lt;/code&gt; указывает длину &lt;code&gt;bptr&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2c2b9ae45157401f1f534a908885aa62b51009e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;size&lt;/code&gt; is initialized to contain the length in bytes of the object, if it is found.</source>
          <target state="translated">&lt;code&gt;size&lt;/code&gt; инициализируется, чтобы содержать длину объекта в байтах, если он найден.</target>
        </trans-unit>
        <trans-unit id="31762ea17d2530a6ffac822a5f27e2801ad03532" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;size&lt;/code&gt; is the approximate number of objects you intend to store in the registry. As the registry uses a hash table with collision chaining, no absolute upper limit exists on the number of objects that can be stored in it. However, for reasons of efficiency, it is a good idea to choose a number that is appropriate for your needs. To change the size later, use &lt;code&gt;ei_reg_resize()&lt;/code&gt;. Notice that the number you provide is increased to the nearest larger prime number.</source>
          <target state="translated">&lt;code&gt;size&lt;/code&gt; - это приблизительное количество объектов, которые вы собираетесь хранить в реестре. Поскольку в реестре используется хэш-таблица с цепочкой конфликтов, не существует абсолютного верхнего предела на количество объектов, которые могут в нем храниться. Однако из соображений эффективности рекомендуется выбрать число, соответствующее вашим потребностям. Чтобы изменить размер позже, используйте &lt;code&gt;ei_reg_resize()&lt;/code&gt; . Обратите внимание, что указанное вами число увеличивается до ближайшего большего простого числа.</target>
        </trans-unit>
        <trans-unit id="5be4df78ae32cf4681c61deb31f75a70671adb82" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;size&lt;/code&gt; is the entire heap of the process when garbage collection is triggered. This includes all generational heaps, the process stack, any &lt;code&gt;&lt;a href=&quot;#process_flag_message_queue_data&quot;&gt; messages that are considered to be part of the heap&lt;/a&gt;&lt;/code&gt;, and any extra memory that the garbage collector needs during collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9883202ed6017270322badd6fb6bd39299529cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;size&lt;/code&gt; is the entire heap of the process when garbage collection is triggered. This includes all generational heaps, the process stack, any &lt;code&gt;&lt;a href=&quot;#process_flag_message_queue_data&quot;&gt;messages that are considered to be part of the heap&lt;/a&gt;&lt;/code&gt;, and any extra memory that the garbage collector needs during collection.</source>
          <target state="translated">&lt;code&gt;size&lt;/code&gt; - это вся куча процесса, когда запускается сборка мусора. Сюда входят все кучи поколений, стек процессов, любые &lt;code&gt;&lt;a href=&quot;#process_flag_message_queue_data&quot;&gt;messages that are considered to be part of the heap&lt;/a&gt;&lt;/code&gt; , и любая дополнительная память, которая требуется сборщику мусора во время сборки.</target>
        </trans-unit>
        <trans-unit id="7429a08dbcf0809973be810f4bb7c48dd9917630" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;size&lt;/code&gt; is the length in bytes of the binary object.</source>
          <target state="translated">&lt;code&gt;size&lt;/code&gt; - это длина двоичного объекта в байтах.</target>
        </trans-unit>
        <trans-unit id="41f6d7e3bce5c9b4edfc3954b162405fbbe52be0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;size&lt;/code&gt; is the number of terms in the array.</source>
          <target state="translated">&lt;code&gt;size&lt;/code&gt; - это количество терминов в массиве.</target>
        </trans-unit>
        <trans-unit id="63f5ed79cf88616154ea2ece68a2bc4f43bcf453" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;size&lt;/code&gt; is the same as can be retrieved using &lt;code&gt;&lt;a href=&quot;#process_info_total_heap_size&quot;&gt; erlang:process_info(Pid, total_heap_size)&lt;/a&gt;&lt;/code&gt;, or by adding &lt;code&gt;heap_block_size&lt;/code&gt;, &lt;code&gt;old_heap_block_size&lt;/code&gt; and &lt;code&gt;mbuf_size&lt;/code&gt; from &lt;code&gt;&lt;a href=&quot;#process_info_garbage_collection_info&quot;&gt; erlang:process_info(Pid, garbage_collection_info)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0273a2f87f92b87933c0bbc16012b385a1fb5f2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;size&lt;/code&gt; is the same as can be retrieved using &lt;code&gt;&lt;a href=&quot;#process_info_total_heap_size&quot;&gt;erlang:process_info(Pid, total_heap_size)&lt;/a&gt;&lt;/code&gt;, or by adding &lt;code&gt;heap_block_size&lt;/code&gt;, &lt;code&gt;old_heap_block_size&lt;/code&gt; and &lt;code&gt;mbuf_size&lt;/code&gt; from &lt;code&gt;&lt;a href=&quot;#process_info_garbage_collection_info&quot;&gt;erlang:process_info(Pid, garbage_collection_info)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;size&lt;/code&gt; такой же, как можно получить с помощью &lt;code&gt;&lt;a href=&quot;#process_info_total_heap_size&quot;&gt;erlang:process_info(Pid, total_heap_size)&lt;/a&gt;&lt;/code&gt; или путем добавления &lt;code&gt;heap_block_size&lt;/code&gt; , &lt;code&gt;old_heap_block_size&lt;/code&gt; и &lt;code&gt;mbuf_size&lt;/code&gt; из erlang &lt;code&gt;&lt;a href=&quot;#process_info_garbage_collection_info&quot;&gt;erlang:process_info(Pid, garbage_collection_info)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cee8406491ef64241ba80f6785359265143b2037" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;size&lt;/code&gt;. Returns the number of records inserted in the table.</source>
          <target state="translated">&lt;code&gt;size&lt;/code&gt; . Возвращает количество записей, вставленных в таблицу.</target>
        </trans-unit>
        <trans-unit id="8ed40372feaa6a6025b87cd5a7f470caed37ea58" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;slave&lt;/code&gt; manual page in STDLIB</source>
          <target state="translated">&lt;code&gt;slave&lt;/code&gt; страница руководства подчиненного устройства в STDLIB</target>
        </trans-unit>
        <trans-unit id="0bb6804996f079bb5059483ddaf10f22a0efdb9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmp:add_agent_caps/2&lt;/code&gt; (use snmpa:add_agent_caps/2 instead.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0d79943899d5897e89b443cb6600ec2b58d3407" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmp:c/1&lt;/code&gt; (use snmpc:compile/1 instead.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8470299e1a75b42bd95865f298b7700b7da93c7a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmp:c/2&lt;/code&gt; (use snmpc:compile/2 instead.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9320d5f5c195f9b98630d92fb9d059679e358a17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmp:change_log_size/1&lt;/code&gt; (use snmpa:change_log_size/1 instead.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a54722054369c3800a09e152441648f1d67579c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmp:compile/3&lt;/code&gt; (use snmpc:compile/3 instead.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17ffe1238d90c341f21e808aba097f70ad24865a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmp:current_address/0&lt;/code&gt; (use snmpa:current_address/0 instead.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43da661dab80b704398affad17b445f1e79264ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmp:current_community/0&lt;/code&gt; (use snmpa:current_community/0 instead.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59eecafdc6c651bd3fcaffb14e4f6cfe6040f446" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmp:current_context/0&lt;/code&gt; (use snmpa:current_context/0 instead.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4a411715714cc56940a0bb716cb831f77986aa5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmp:current_net_if_data/0&lt;/code&gt; (use snmpa:current_net_if_data/0 instead.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95ce1bec6d9b90bfdd1b2bec7901cf3e917270d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmp:current_request_id/0&lt;/code&gt; (use snmpa:current_request_id/0 instead.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc08fc5ace442fad600e72f2c44208df725ce34d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmp:del_agent_caps/1&lt;/code&gt; (use snmpa:del_agent_caps/1 instead.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0756559afb156429ced5712b83ddb4b64ced5434" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmp:dump_mibs/0&lt;/code&gt; (use snmpa:dump_mibs/0 instead.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0439fac5b89caeaec3db66ed784a269d8dab996" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmp:dump_mibs/1&lt;/code&gt; (use snmpa:dump_mibs/1 instead.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bacf8994e878dfcc73661f5d9d7a13c8c93610f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmp:enum_to_int/2&lt;/code&gt; (use snmpa:enum_to_int/2 instead.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28f76a6475327c336266b5e297f349daca5cf613" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmp:enum_to_int/3&lt;/code&gt; (use snmpa:enum_to_int/3 instead.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6896068169767b02a9209a9d25bfd8895dce84c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmp:get/2&lt;/code&gt; (use snmpa:get/2 instead.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a51ff09e354369e81ba6cf234baa3e4389c3f8fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmp:get_agent_caps/0&lt;/code&gt; (use snmpa:get_agent_caps/0 instead.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d12ba5cf946f8fd35a0cc92b525fd127b79cd2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmp:get_symbolic_store_db/0&lt;/code&gt; (use snmpa:get_symbolic_store_db/0 instead.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a38f5ce2b0e2bb12682f68490e7d28748fab0604" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmp:info/1&lt;/code&gt; (use snmpa:info/1 instead.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2496879caa589b357729e0e748c9f6d5a087ebb8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmp:int_to_enum/2&lt;/code&gt; (use snmpa:int_to_enum/2 instead.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="158be1d4d0a63568da7770466874159f4ada3a25" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmp:int_to_enum/3&lt;/code&gt; (use snmpa:int_to_enum/3 instead.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9c8e7d335beb1da306ab367a97ee4b1c362c807" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmp:is_consistent/1&lt;/code&gt; (use snmpc:is_consistent/1 instead.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77d90c681d170e98a789c92205967fe1c3abc1fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmp:load_mibs/2&lt;/code&gt; (use snmpa:load_mibs/2 instead.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d62018fed5384a0b9653fbf771fcc2d90c012ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmp:log_to_txt/2&lt;/code&gt; (use snmpa:log_to_txt/2 instead.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ecd67066fd195e1673c7082efbc0fbc74c5b06b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmp:log_to_txt/3&lt;/code&gt; (use snmpa:log_to_txt/3 instead.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="346a47ed75d7c026d352ff030f6590db038a845a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmp:log_to_txt/4&lt;/code&gt; (use snmpa:log_to_txt/4 instead.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3012af56185e24d78a243d16bc1cf2f95d2958bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmp:mib_to_hrl/1&lt;/code&gt; (use snmpc:mib_to_hrl/1 instead.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abdc268da51135a237b498c66f95171ce8ac2721" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmp:name_to_oid/1&lt;/code&gt; (use snmpa:name_to_oid/1 instead.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32bc5c51601f0dee8d0936b70521374d88c33955" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmp:name_to_oid/2&lt;/code&gt; (use snmpa:name_to_oid/2 instead.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ba53cd831418462a78f26bbb0022aa52087d0d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmp:oid_to_name/1&lt;/code&gt; (use snmpa:oid_to_name/1 instead.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b278c0467fc4bd5bf8dd49e4648586ad156e4a10" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmp:oid_to_name/2&lt;/code&gt; (use snmpa:oid_to_name/2 instead.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1a097a7e25fbe7ed82dfc5633c033dbf00d51bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmp:register_subagent/3&lt;/code&gt; (use snmpa:register_subagent/3 instead.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6e42d0117087108d406001d3175b8849e7bcc73" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmp:send_notification/3&lt;/code&gt; (use snmpa:send_notification/3 instead.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7524727c9eb02de083ceeadda985b2adb88df661" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmp:send_notification/4&lt;/code&gt; (use snmpa:send_notification/4 instead.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b30514e73a58aa226b2837248b7d9fdb6cff642" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmp:send_notification/5&lt;/code&gt; (use snmpa:send_notification/5 instead.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="766e2c6e9239922957fd68392f3c5e4f63131156" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmp:send_notification/6&lt;/code&gt; (use snmpa:send_notification/6 instead.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64c760f05b250c8e8ca3345bde5413df90b9096b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmp:send_trap/3&lt;/code&gt; (use snmpa:send_trap/3 instead.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8824373c9be17533d6f8c499d8fa99f7c59fae6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmp:send_trap/4&lt;/code&gt; (use snmpa:send_trap/4 instead.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1f2ae4ea40988f3d9462939dc82fc1836c5ca15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmp:unload_mibs/2&lt;/code&gt; (use snmpa:unload_mibs/2 instead.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b6ddcc254ec5df2b74f2c2026474b003572bf5b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmp:unregister_subagent/2&lt;/code&gt; (use snmpa:unregister_subagent/2 instead.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7f75d66aeedf5cb31543e8e6532fed127f50d81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmp&lt;/code&gt;. Each (set-based) Mnesia table can be automatically turned into a Simple Network Management Protocol (SNMP) ordered table as well. This property specifies the types of the SNMP keys.</source>
          <target state="translated">&lt;code&gt;snmp&lt;/code&gt; . Каждую (основанную на множестве) таблицу Mnesia можно автоматически превратить в упорядоченную таблицу простого протокола управления сетью (SNMP). Это свойство определяет типы ключей SNMP.</target>
        </trans-unit>
        <trans-unit id="34276129b30a196d6d89752d2ffd300259a79ed7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmp&lt;/code&gt;. Returns the SNMP struct. &lt;code&gt;[]&lt;/code&gt; means that the table currently has no SNMP properties.</source>
          <target state="translated">&lt;code&gt;snmp&lt;/code&gt; . Возвращает структуру SNMP. &lt;code&gt;[]&lt;/code&gt; означает, что таблица в настоящее время не имеет свойств SNMP.</target>
        </trans-unit>
        <trans-unit id="9c431043d51b79719abc18897ca570be601afe5e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmpa:old_info_format/1&lt;/code&gt; (use &quot;new&quot; format instead)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3e53eb546a9efc1da910947e057d8e938d45308" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmpa_mib_storage_dets&lt;/code&gt;: &lt;code&gt;{dir, filename()} | {action, keep | clear}, {auto_save, default | pos_integer()} | {repair, force | boolean()}&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;snmpa_mib_storage_dets&lt;/code&gt; : &lt;code&gt;{dir, filename()} | {action, keep | clear}, {auto_save, default | pos_integer()} | {repair, force | boolean()}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3ce3e1ee0e647789b9adaff949357a3869ef8348" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmpa_mib_storage_ets&lt;/code&gt;: &lt;code&gt;{dir, filename()} | {action, keep | clear}, {checksum, boolean()}&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;snmpa_mib_storage_ets&lt;/code&gt; : &lt;code&gt;{dir, filename()} | {action, keep | clear}, {checksum, boolean()}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="565537ae8e8baac381d245049f24a119fd9ad973" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmpa_mib_storage_mnesia&lt;/code&gt;: &lt;code&gt;{action, keep | clear}, {nodes, [node()]}&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;snmpa_mib_storage_mnesia&lt;/code&gt; : &lt;code&gt;{action, keep | clear}, {nodes, [node()]}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="83de9fb9bce2ac9af00f430e1b421c0097fd4dcf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmpm:async_get/3&lt;/code&gt; (use snmpm:async_get2/3 instead.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27f1ac7b6dac674d0005dd0328538ca59041396e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmpm:async_get/4&lt;/code&gt; (use snmpm:async_get2/4 instead.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="278c52a75282499b88d5b04fa7cbfdaf570b0754" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmpm:async_get/5&lt;/code&gt; (use snmpm:async_get2/4 instead.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2c70e93722acc1b782041992192636293f87631" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmpm:async_get/6&lt;/code&gt; (use snmpm:async_get2/4 instead.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2416e6487f3a6e7a42d2cbf8cb991ec93e7fecaf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmpm:async_get_bulk/5&lt;/code&gt; (use snmpm:async_get_bulk2/5 instead.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d332663206ac3b2b8f0b13beb981a942b24f1a3e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmpm:async_get_bulk/6&lt;/code&gt; (use snmpm:async_get_bulk2/6 instead.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e931f434fb3df79502d0cc01669b260aa6da641" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmpm:async_get_bulk/7&lt;/code&gt; (use snmpm:async_get_bulk2/6 instead.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7ef7142ec3de314bc40c656eec1fa5b50a206a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmpm:async_get_bulk/8&lt;/code&gt; (use snmpm:async_get_bulk2/6 instead.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="223d4118ff305fa49d4f849edaaaef67f0a1d938" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmpm:async_get_next/3&lt;/code&gt; (use snmpm:async_get_next2/3 instead.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91586ba3a450a34f0cd3cc3bd3aadc64f4a3434a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmpm:async_get_next/4&lt;/code&gt; (use snmpm:async_get_next2/4 instead.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb1d7a16bc4513d691b97e0e316072161b6a5913" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmpm:async_get_next/5&lt;/code&gt; (use snmpm:async_get_next2/4 instead.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c265ac70bd8b4adb19529940e8bd7ab67afb92ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmpm:async_get_next/6&lt;/code&gt; (use snmpm:async_get_next2/4 instead.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e414aad16cb2ce88d996c6f9561ed7d13402299c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmpm:async_set/3&lt;/code&gt; (use snmpm:async_set2/3 instead.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5eebe16fd7bb1f1a670035b9621e10aa8c5649c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmpm:async_set/4&lt;/code&gt; (use snmpm:async_set2/4 instead.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66fa3821578971867916e7aa05d8b56a0cdb5a65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmpm:async_set/5&lt;/code&gt; (use snmpm:async_set2/4 instead.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a708d99bd355f82a9c4d35b1f334526f8fc40369" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmpm:async_set/6&lt;/code&gt; (use snmpm:async_set2/4 instead.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8c9c0daadd5b13a3cfb3539db552c34693c8ec7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmpm:sync_get/3&lt;/code&gt; (use snmpm:sync_get2/3 instead.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="965ed48b5c482109d57bffede45b1a28b5310907" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmpm:sync_get/4&lt;/code&gt; (use snmpm:sync_get2/4 instead.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a05fffda4cb99e1dbba2f76e88cdc910d12b5b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmpm:sync_get/5&lt;/code&gt; (use snmpm:sync_get2/4 instead.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a25df5070ad82a7610b184a6d15a2477a0fff03b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmpm:sync_get/6&lt;/code&gt; (use snmpm:sync_get2/4 instead.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b41dcf8550d345694991e16c7bf61ba702fb5ed7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmpm:sync_get_bulk/5&lt;/code&gt; (use snmpm:sync_get_bulk2/5 instead.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70848807d61890c157e0aa6dee48b01ba0860542" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmpm:sync_get_bulk/6&lt;/code&gt; (use snmpm:sync_get_bulk2/6 instead.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ce5c2abd351a8dedbf95ba1bac1d4483ef508ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmpm:sync_get_bulk/7&lt;/code&gt; (use snmpm:sync_get_bulk2/6 instead.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c9116381b6a705540600a9ccbb084b55de57b0c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmpm:sync_get_bulk/8&lt;/code&gt; (use snmpm:sync_get_bulk2/6 instead.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42921d833f7b70b778e14c3e4d5a3799adf8d39c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmpm:sync_get_next/3&lt;/code&gt; (use snmpm:sync_get_next2/3 instead.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09991dd1e34a1d387c760d7bb6f2fa6f02d7bac8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmpm:sync_get_next/4&lt;/code&gt; (use snmpm:sync_get_next2/4 instead.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59eb0fa8adb01ca001300ca9ebbefb6d95efbe91" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmpm:sync_get_next/5&lt;/code&gt; (use snmpm:sync_get_next2/4 instead.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6b8feb1e20d6372d32c5784032cd03852877df0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmpm:sync_get_next/6&lt;/code&gt; (use snmpm:sync_get_next2/4 instead.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="beeb212ccf6a514f0e79bed53743164fdecafd30" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmpm:sync_set/3&lt;/code&gt; (use snmpm:sync_set2/3 instead.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6f97fb222a9530783b6ee6aa5a32b5c11663b9a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmpm:sync_set/4&lt;/code&gt; (use snmpm:sync_set2/4 instead.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12b017c3d959c81bca7244a3f69b9e4c9943e0c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmpm:sync_set/5&lt;/code&gt; (use snmpm:sync_set2/4 instead.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="605bb3e00cbc7721488263c8fc092f050e6c2452" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snmpm:sync_set/6&lt;/code&gt; (use snmpm:sync_set2/4 instead.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d39021fcc4803bee1addaec48011f9baed5f79b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;socket_opt()&lt;/code&gt; = See the options used by &lt;code&gt;gen_tcp(3)&lt;/code&gt;&lt;code&gt;gen_tcp(3)&lt;/code&gt; and &lt;code&gt;ssl(3)&lt;/code&gt; connect(s)</source>
          <target state="translated">&lt;code&gt;socket_opt()&lt;/code&gt; = См. параметры, используемые &lt;code&gt;gen_tcp(3)&lt;/code&gt; &lt;code&gt;gen_tcp(3)&lt;/code&gt; и &lt;code&gt;ssl(3)&lt;/code&gt; connect (s)</target>
        </trans-unit>
        <trans-unit id="509d5d925dab1361294540137bf38125d3476251" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;socket_type()&lt;/code&gt; indicates whether it is an IP socket or an &lt;code&gt;ssl&lt;/code&gt; socket.</source>
          <target state="translated">&lt;code&gt;socket_type()&lt;/code&gt; указывает, является ли это IP-сокетом или &lt;code&gt;ssl&lt;/code&gt; - сокетом.</target>
        </trans-unit>
        <trans-unit id="125884dce5c139bfadf2215d850428fb7085d53e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sort(FileName)&lt;/code&gt; is equivalent to &lt;code&gt;sort([FileName], FileName)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;sort(FileName)&lt;/code&gt; эквивалентен &lt;code&gt;sort([FileName], FileName)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3aa2d0eab807191fd373fc83b15fb7bf339bea37" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sort(Input, Output)&lt;/code&gt; is equivalent to &lt;code&gt;sort(Input, Output, [])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;sort(Input, Output)&lt;/code&gt; эквивалентен &lt;code&gt;sort(Input, Output, [])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1799d21a78b95cf6c719e8ad3a80edb8dd681696" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sort(QH1)&lt;/code&gt; is equivalent to &lt;code&gt;sort(QH1, [])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;sort(QH1)&lt;/code&gt; эквивалентен &lt;code&gt;sort(QH1, [])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7aacbe7f45b65c249b35c82839eac366ce3d4ec6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;spawn&lt;/code&gt; creates a new process and returns the pid.</source>
          <target state="translated">&lt;code&gt;spawn&lt;/code&gt; создает новый процесс и возвращает pid.</target>
        </trans-unit>
        <trans-unit id="3c0bde6fd6085ac2c36c668c5d8fe435e0b3687e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;spawn&lt;/code&gt; returns a &lt;strong&gt;process identifier&lt;/strong&gt;, or &lt;strong&gt;pid&lt;/strong&gt;, which uniquely identifies the process. So &amp;lt;0.63.0&amp;gt; is the pid of the &lt;code&gt;spawn&lt;/code&gt; function call above. The next example shows how to use pids.</source>
          <target state="translated">&lt;code&gt;spawn&lt;/code&gt; возвращает &lt;strong&gt;идентификатор процесса&lt;/strong&gt; или &lt;strong&gt;pid&lt;/strong&gt; , который однозначно идентифицирует процесс. Итак, &amp;lt;0.63.0&amp;gt; - это pid вызова функции &lt;code&gt;spawn&lt;/code&gt; выше. В следующем примере показано, как использовать pid.</target>
        </trans-unit>
        <trans-unit id="f665b6085ee7aa3e793928a554073e5421907ef2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;specs&lt;/code&gt; - The total count of children, dead or alive.</source>
          <target state="translated">&lt;code&gt;specs&lt;/code&gt; - Общее количество детей, мертвых или живых.</target>
        </trans-unit>
        <trans-unit id="cb0f10a6be46a7d41dc675cd473dff341f4a9d3b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;split/3&lt;/code&gt; splits &lt;code&gt;String&lt;/code&gt; in &lt;code&gt;N&lt;/code&gt; chunks using &lt;code&gt;RegExp&lt;/code&gt;. &lt;code&gt;split/3&lt;/code&gt; is equivalent to &lt;code&gt;regexp:split/2&lt;/code&gt; with the exception that &lt;code&gt;N&lt;/code&gt; defines the maximum number of fields in &lt;code&gt;FieldList&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;split/3&lt;/code&gt; разбивает &lt;code&gt;String&lt;/code&gt; на &lt;code&gt;N&lt;/code&gt; частей, используя &lt;code&gt;RegExp&lt;/code&gt; . &lt;code&gt;split/3&lt;/code&gt; эквивалентен &lt;code&gt;regexp:split/2&lt;/code&gt; за исключением того, что &lt;code&gt;N&lt;/code&gt; определяет максимальное количество полей в &lt;code&gt;FieldList&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f10629c86af3dc269235905ff42f7da40cc41716" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;split_path/1&lt;/code&gt; splits &lt;code&gt;RequestLine&lt;/code&gt; in a file reference (&lt;code&gt;Path&lt;/code&gt;), and a &lt;code&gt;QueryString&lt;/code&gt; or a &lt;code&gt;PathInfo&lt;/code&gt; string as specified in &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc2616.txt&quot;&gt;RFC 2616&lt;/a&gt;&lt;/code&gt;. A &lt;code&gt;QueryString&lt;/code&gt; is isolated from &lt;code&gt;Path&lt;/code&gt; with a question mark (&lt;code&gt;?&lt;/code&gt;) and &lt;code&gt;PathInfo&lt;/code&gt; with a slash (/). In the case of a &lt;code&gt;QueryString&lt;/code&gt;, everything before &lt;code&gt;?&lt;/code&gt; is a &lt;code&gt;Path&lt;/code&gt; and everything after &lt;code&gt;?&lt;/code&gt; is a &lt;code&gt;QueryString&lt;/code&gt;. In the case of a &lt;code&gt;PathInfo&lt;/code&gt;, &lt;code&gt;RequestLine&lt;/code&gt; is scanned from left-to-right on the hunt for longest possible &lt;code&gt;Path&lt;/code&gt; being a file or a directory. Everything after the longest possible &lt;code&gt;Path&lt;/code&gt;, isolated with a &lt;code&gt;/&lt;/code&gt;, is regarded as &lt;code&gt;PathInfo&lt;/code&gt;. The resulting &lt;code&gt;Path&lt;/code&gt; is decoded using &lt;code&gt;decode_hex/1&lt;/code&gt; before delivery.</source>
          <target state="translated">&lt;code&gt;split_path/1&lt;/code&gt; разделяет &lt;code&gt;RequestLine&lt;/code&gt; на ссылку на файл ( &lt;code&gt;Path&lt;/code&gt; ) и строку &lt;code&gt;QueryString&lt;/code&gt; или &lt;code&gt;PathInfo&lt;/code&gt; , как указано в &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc2616.txt&quot;&gt;RFC 2616&lt;/a&gt;&lt;/code&gt; . &lt;code&gt;QueryString&lt;/code&gt; изолирован от &lt;code&gt;Path&lt;/code&gt; с вопросительным знаком ( &lt;code&gt;?&lt;/code&gt; ) И &lt;code&gt;PathInfo&lt;/code&gt; с косой чертой (/). В случае &lt;code&gt;QueryString&lt;/code&gt; все, что было раньше &lt;code&gt;?&lt;/code&gt; это &lt;code&gt;Path&lt;/code&gt; и все после &lt;code&gt;?&lt;/code&gt; это &lt;code&gt;QueryString&lt;/code&gt; . В случае &lt;code&gt;PathInfo&lt;/code&gt; , &lt;code&gt;RequestLine&lt;/code&gt; сканируется слева направо в поисках самого длинного &lt;code&gt;Path&lt;/code&gt; являющегося файлом или каталогом. Все, что находится после самого длинного &lt;code&gt;Path&lt;/code&gt; , выделенного &lt;code&gt;PathInfo&lt;/code&gt; &lt;code&gt;/&lt;/code&gt; , рассматривается как PathInfo . Результирующий &lt;code&gt;Path&lt;/code&gt; перед доставкой декодируется с помощью &lt;code&gt;decode_hex/1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="34c614033702c1cad1fedd62a5c780c7ac3b97d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;split_path/1&lt;/code&gt; splits &lt;code&gt;RequestLine&lt;/code&gt; in a file reference (&lt;code&gt;Path&lt;/code&gt;), and a &lt;code&gt;QueryString&lt;/code&gt; or a &lt;code&gt;PathInfo&lt;/code&gt; string as specified in &lt;code&gt;&lt;a href=&quot;https://www.ietf.org/rfc/rfc2616.txt&quot;&gt;RFC 2616&lt;/a&gt;&lt;/code&gt;. A &lt;code&gt;QueryString&lt;/code&gt; is isolated from &lt;code&gt;Path&lt;/code&gt; with a question mark (&lt;code&gt;?&lt;/code&gt;) and &lt;code&gt;PathInfo&lt;/code&gt; with a slash (/). In the case of a &lt;code&gt;QueryString&lt;/code&gt;, everything before &lt;code&gt;?&lt;/code&gt; is a &lt;code&gt;Path&lt;/code&gt; and everything after &lt;code&gt;?&lt;/code&gt; is a &lt;code&gt;QueryString&lt;/code&gt;. In the case of a &lt;code&gt;PathInfo&lt;/code&gt;, &lt;code&gt;RequestLine&lt;/code&gt; is scanned from left-to-right on the hunt for longest possible &lt;code&gt;Path&lt;/code&gt; being a file or a directory. Everything after the longest possible &lt;code&gt;Path&lt;/code&gt;, isolated with a &lt;code&gt;/&lt;/code&gt;, is regarded as &lt;code&gt;PathInfo&lt;/code&gt;. The resulting &lt;code&gt;Path&lt;/code&gt; is decoded using &lt;code&gt;decode_hex/1&lt;/code&gt; before delivery.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="243ac817c483b29b7b069cc9232f2980089daf20" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;split_script_path/1&lt;/code&gt; is equivalent to &lt;code&gt;split_path/1&lt;/code&gt; with one exception. If the longest possible path is not a regular, accessible, and executable file, then &lt;code&gt;not_a_script&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;code&gt;split_script_path/1&lt;/code&gt; эквивалентен &lt;code&gt;split_path/1&lt;/code&gt; с одним исключением. Если самый длинный путь не является обычным, доступным и исполняемым файлом, то возвращается &lt;code&gt;not_a_script&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fba0b32b8dc6f9e05e9832e181bae787f873facb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;splitwith(P, L)&lt;/code&gt; splits the list &lt;code&gt;L&lt;/code&gt; into the two sublists &lt;code&gt;{L1, L2}&lt;/code&gt;, where &lt;code&gt;L = takewhile(P, L)&lt;/code&gt; and &lt;code&gt;L2 = dropwhile(P, L)&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;splitwith(P, L)&lt;/code&gt; разбивает список &lt;code&gt;L&lt;/code&gt; на два подсписка &lt;code&gt;{L1, L2}&lt;/code&gt; , где &lt;code&gt;L = takewhile(P, L)&lt;/code&gt; и &lt;code&gt;L2 = dropwhile(P, L)&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="7991df23ce2c21bcb2141e293c55476b3a3a731d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;spread&lt;/code&gt; - Schedulers are spread as much as possible.</source>
          <target state="translated">&lt;code&gt;spread&lt;/code&gt; - Планировщики максимально распространены.</target>
        </trans-unit>
        <trans-unit id="607cdd102d8cefb6d67db0029039660817230d17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;src&lt;/code&gt; - Optional. Contains the Erlang source code and internal include files used by the application itself. This directory is no longer required in a released application.</source>
          <target state="translated">&lt;code&gt;src&lt;/code&gt; - Необязательно. Содержит исходный код Erlang и внутренние включаемые файлы, используемые самим приложением. Этот каталог больше не требуется в выпущенном приложении.</target>
        </trans-unit>
        <trans-unit id="e2829dd2ff2898f762ac503636aaba0d84ad07e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;src&lt;/code&gt; - Required. Contains the Erlang source code, the source of the &lt;code&gt;.app&lt;/code&gt; file and internal include files used by the application itself. Additional sub-directories within &lt;code&gt;src&lt;/code&gt; can be used as namespaces to organize source files. These directories should never be deeper than one level.</source>
          <target state="translated">&lt;code&gt;src&lt;/code&gt; - Обязательно. Содержит исходный код Erlang, источник файла &lt;code&gt;.app&lt;/code&gt; и внутренние включаемые файлы, используемые самим приложением. Дополнительные подкаталоги в &lt;code&gt;src&lt;/code&gt; могут использоваться как пространства имен для организации исходных файлов. Эти каталоги никогда не должны быть глубже одного уровня.</target>
        </trans-unit>
        <trans-unit id="8e0853734a111ac32d152021a51344463e02d672" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ssh_host_dsa_key&lt;/code&gt; and &lt;code&gt;ssh_host_dsa_key.pub&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ssh_host_dsa_key&lt;/code&gt; и &lt;code&gt;ssh_host_dsa_key.pub&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="78bbd7eeb90e40a666a43bda69f48450bcec107a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ssh_host_ecdsa_key&lt;/code&gt; and &lt;code&gt;ssh_host_ecdsa_key.pub&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ssh_host_ecdsa_key&lt;/code&gt; и &lt;code&gt;ssh_host_ecdsa_key.pub&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ab92ea893e8df5dbbab7e621401907eb5ea41403" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ssh_host_rsa_key&lt;/code&gt; and &lt;code&gt;ssh_host_rsa_key.pub&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ssh_host_rsa_key&lt;/code&gt; и &lt;code&gt;ssh_host_rsa_key.pub&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1261c75030f00e68733d2d30cd1ecbe6fbea217e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ssl:cipher_suites/0&lt;/code&gt; (use cipher_suites/2,3 instead)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96fc667fc6fe92caeb23240200d96852e1fb4288" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ssl:cipher_suites/1&lt;/code&gt; (use cipher_suites/2,3 instead)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84f195717ad563f288294b00c048d11189583926" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ssl:ssl_accept/_&lt;/code&gt; (use ssl_handshake/1,2,3 instead)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="439d7c6b93be148551a89cd3fbe5ee9fcc06e4a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;standard.conf&lt;/code&gt;: see &lt;code&gt;&lt;a href=&quot;#system_information&quot;&gt;System Information&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;standard.conf&lt;/code&gt; : см. &lt;code&gt;&lt;a href=&quot;#system_information&quot;&gt;System Information&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2506feb97f08fc3787807d58fdcd08800b47a8cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;start&lt;/code&gt; defines the function call used to start the child process. It is a module-function-arguments tuple used as &lt;code&gt;apply(M, F, A)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;start&lt;/code&gt; определяет вызов функции, используемый для запуска дочернего процесса. Это кортеж модуль-функция-аргументы, используемый как &lt;code&gt;apply(M, F, A)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1e89edde81ac033d234b9af05716eb9b5a7fd9fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;start&lt;/code&gt; defines the function call used to start the child process. It must be a module-function-arguments tuple &lt;code&gt;{M,F,A}&lt;/code&gt; used as &lt;code&gt;apply(M,F,A)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;start&lt;/code&gt; определяет вызов функции, используемый для запуска дочернего процесса. Это должен быть кортеж &quot;модуль-функция-аргументы&quot; &lt;code&gt;{M,F,A}&lt;/code&gt; , используемый как &lt;code&gt;apply(M,F,A)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="35252648d8669b75501956b567fce0242a698b68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;start&lt;/code&gt; is called when starting the application and is to create the supervision tree by starting the top supervisor. It is expected to return the pid of the top supervisor and an optional term, &lt;code&gt;State&lt;/code&gt;, which defaults to &lt;code&gt;[]&lt;/code&gt;. This term is passed as is to &lt;code&gt;stop&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;start&lt;/code&gt; вызывается при запуске приложения и предназначен для создания дерева супервизора путем запуска верхнего супервизора. Ожидается, что он вернет pid главного супервизора и необязательный термин &lt;code&gt;State&lt;/code&gt; , который по умолчанию равен &lt;code&gt;[]&lt;/code&gt; . Этот срок пропущен как есть до &lt;code&gt;stop&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4a19ed5e0f59c508f5cb3c6869f75fc2329c0c45" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;start_clean.boot&lt;/code&gt; - Loads the code for and starts the applications Kernel and STDLIB.</source>
          <target state="translated">&lt;code&gt;start_clean.boot&lt;/code&gt; - загружает код и запускает ядро ​​приложений и STDLIB.</target>
        </trans-unit>
        <trans-unit id="3dde2b9853406448644292076fe10f5813f6d27f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;start_erl&lt;/code&gt; also assumes that there is &lt;code&gt;sys.config&lt;/code&gt; in the release version directory (&lt;code&gt;&quot;releases/FIRST/sys.config&quot;&lt;/code&gt;). That is the topic of the next section.</source>
          <target state="translated">&lt;code&gt;start_erl&lt;/code&gt; также предполагает наличие &lt;code&gt;sys.config&lt;/code&gt; в каталоге версии выпуска ( &lt;code&gt;&quot;releases/FIRST/sys.config&quot;&lt;/code&gt; ). Это тема следующего раздела.</target>
        </trans-unit>
        <trans-unit id="69fb79270b65287444a8ab1285191d490453d1da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;start_erl&lt;/code&gt; requires:</source>
          <target state="translated">&lt;code&gt;start_erl&lt;/code&gt; требует:</target>
        </trans-unit>
        <trans-unit id="4191a0c3ab40e3daafa908b418808d86ab9c0b4e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;start_link&lt;/code&gt; calls function &lt;code&gt;gen_server:start_link/4&lt;/code&gt;. This function spawns and links to a new process, a &lt;code&gt;gen_server&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;start_link&lt;/code&gt; вызывает функцию &lt;code&gt;gen_server:start_link/4&lt;/code&gt; . Эта функция порождает и связывает с новым процессом &lt;code&gt;gen_server&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d1a11af853b7d89610a9879c8b6ed9b282c31fb6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;start_link&lt;/code&gt; calls function &lt;code&gt;gen_statem:start_link/4&lt;/code&gt;, which spawns and links to a new process, a &lt;code&gt;gen_statem&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;start_link&lt;/code&gt; вызывает функцию &lt;code&gt;gen_statem:start_link/4&lt;/code&gt; , которая порождает и связывает новый процесс, &lt;code&gt;gen_statem&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="43363140a8bc840761fe776e0e8a57f9becdc28e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;start_sasl.boot&lt;/code&gt; - Loads the code for and starts the applications Kernel, STDLIB, and SASL).</source>
          <target state="translated">&lt;code&gt;start_sasl.boot&lt;/code&gt; - загружает код и запускает приложения Kernel, STDLIB и SASL).</target>
        </trans-unit>
        <trans-unit id="3dfeb9d1847183693617efb03a1351fa92500350" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;state&lt;/code&gt; can have the following values:</source>
          <target state="translated">&lt;code&gt;state&lt;/code&gt; может иметь следующие значения:</target>
        </trans-unit>
        <trans-unit id="3156f3424967c1b1692d64b4a5dc78442031d7c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;statistics(exact_reductions)&lt;/code&gt; is a more expensive operation than &lt;code&gt;&lt;a href=&quot;#statistics_reductions&quot;&gt; statistics(reductions)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b458cc47e61e9c6d04d62d041602f53f3b1fe52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;statistics(exact_reductions)&lt;/code&gt; is a more expensive operation than &lt;code&gt;&lt;a href=&quot;#statistics_reductions&quot;&gt;statistics(reductions)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;statistics(exact_reductions)&lt;/code&gt; - более дорогая операция, чем &lt;code&gt;&lt;a href=&quot;#statistics_reductions&quot;&gt;statistics(reductions)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="019d8783135ccd9ba68bec281036a7adc2887fce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;statistics(microstate_accounting)&lt;/code&gt; returns a list of maps representing some of the OS threads within ERTS. Each map contains &lt;code&gt;type&lt;/code&gt; and &lt;code&gt;id&lt;/code&gt; fields that can be used to identify what thread it is, and also a counters field that contains data about how much time has been spent in the various states.</source>
          <target state="translated">&lt;code&gt;statistics(microstate_accounting)&lt;/code&gt; возвращает список карт, представляющих некоторые из потоков ОС в ERTS. Каждая карта содержит поля &lt;code&gt;type&lt;/code&gt; и &lt;code&gt;id&lt;/code&gt; которые можно использовать для определения того, что это за поток, а также поле счетчиков, которое содержит данные о том, сколько времени было потрачено в различных состояниях.</target>
        </trans-unit>
        <trans-unit id="00c3285384a8ed6b0e4fad2229108e7c4bde8d14" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;statistics/1&lt;/code&gt; with argument &lt;code&gt;runtime&lt;/code&gt; measures CPU time spent in the Erlang virtual machine. The advantage with CPU time is that the results are more consistent from run to run. The disadvantage is that the time spent in the operating system kernel (such as swapping and I/O) is not included. Therefore, measuring CPU time is misleading if any I/O (file or socket) is involved.</source>
          <target state="translated">&lt;code&gt;statistics/1&lt;/code&gt; с аргументом &lt;code&gt;runtime&lt;/code&gt; измеряет время процессора, затраченное на виртуальную машину Erlang. Преимущество процессорного времени состоит в том, что результаты более согласованы от запуска к запуску. Недостатком является то, что время, затрачиваемое на ядро ​​операционной системы (такое как свопинг и ввод-вывод), не учитывается. Следовательно, измерение процессорного времени вводит в заблуждение, если задействован какой-либо ввод-вывод (файл или сокет).</target>
        </trans-unit>
        <trans-unit id="7678d708dd11785cfac1ed18d9669be48be7c661" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;stop/1&lt;/code&gt; is called &lt;strong&gt;after&lt;/strong&gt; the application has been stopped and is to do any necessary cleaning up. The actual stopping of the application, that is, the shutdown of the supervision tree, is handled automatically as described in &lt;code&gt;&lt;a href=&quot;#stopping&quot;&gt;Starting and Stopping Applications&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;stop/1&lt;/code&gt; вызывается &lt;strong&gt;после &lt;/strong&gt;остановки приложения и должен выполнить необходимую очистку. Фактическая остановка приложения, то есть завершение работы дерева наблюдения, выполняется автоматически, как описано в разделе &amp;laquo; &lt;code&gt;&lt;a href=&quot;#stopping&quot;&gt;Starting and Stopping Applications&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4ae01a0d4df52cd6a396e8d1a5dda99507c7d96d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;storage_type&lt;/code&gt;. Returns the local storage type of the table. It can be &lt;code&gt;disc_copies&lt;/code&gt;, &lt;code&gt;ram_copies&lt;/code&gt;, &lt;code&gt;disc_only_copies&lt;/code&gt;, or the atom &lt;code&gt;unknown&lt;/code&gt;. &lt;code&gt;unknown&lt;/code&gt; is returned for all tables that only reside remotely.</source>
          <target state="translated">&lt;code&gt;storage_type&lt;/code&gt; . Возвращает тип локального хранилища таблицы. Это может быть &lt;code&gt;disc_copies&lt;/code&gt; , &lt;code&gt;ram_copies&lt;/code&gt; , &lt;code&gt;disc_only_copies&lt;/code&gt; или атом &lt;code&gt;unknown&lt;/code&gt; . &lt;code&gt;unknown&lt;/code&gt; возвращается для всех таблиц, которые находятся только удаленно.</target>
        </trans-unit>
        <trans-unit id="617e6a978094968e10a5f7fc9334eb0d1e7e0df7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;strategy&lt;/code&gt; specifies the &lt;code&gt;&lt;a href=&quot;#strategy&quot;&gt;restart strategy&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;strategy&lt;/code&gt; определяет &lt;code&gt;&lt;a href=&quot;#strategy&quot;&gt;restart strategy&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="979af2982a1f83fdce37c6f9589b4879d42c0c90" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;stream&lt;/code&gt; indicates where the function is to send its output.</source>
          <target state="translated">&lt;code&gt;stream&lt;/code&gt; указывает, куда функция должна отправлять свой вывод.</target>
        </trans-unit>
        <trans-unit id="2d562db6f33bb9eb6da6e6ebda53139e63607b34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string()&lt;/code&gt; = list of ASCII characters</source>
          <target state="translated">&lt;code&gt;string()&lt;/code&gt; = список символов ASCII</target>
        </trans-unit>
        <trans-unit id="0e92b14680ea9fea5b373b2dc3f7248947c4c1ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string()&lt;/code&gt;: A &lt;code&gt;Request-URI&lt;/code&gt; as described in &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc2616.txt&quot;&gt;RFC 2616&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;string()&lt;/code&gt; : &lt;code&gt;Request-URI&lt;/code&gt; , как описано в &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc2616.txt&quot;&gt;RFC 2616&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="57c1457a7bd9e9ff582eac64a5f1f04e248c483d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string()&lt;/code&gt;: A &lt;code&gt;Request-URI&lt;/code&gt; as described in &lt;code&gt;&lt;a href=&quot;https://www.ietf.org/rfc/rfc2616.txt&quot;&gt;RFC 2616&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b47a0b2213c3183aeec65e31bc4b31e6339de8b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string()&lt;/code&gt;: A URL pointing at the new document position.</source>
          <target state="translated">&lt;code&gt;string()&lt;/code&gt; : URL-адрес, указывающий на новую позицию документа.</target>
        </trans-unit>
        <trans-unit id="87b155a297b77961a30cb7943365871e8ddf39bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string()&lt;/code&gt;: A string describing why the service was unavailable.</source>
          <target state="translated">&lt;code&gt;string()&lt;/code&gt; : строка, описывающая, почему служба была недоступна.</target>
        </trans-unit>
        <trans-unit id="0401c3eac3cc2573f6485455cd8b851ee2bc2102" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string(String)&lt;/code&gt; is equivalent to &lt;code&gt;string(String, 1)&lt;/code&gt;, and &lt;code&gt;string(String, StartLocation)&lt;/code&gt; is equivalent to &lt;code&gt;string(String, StartLocation, [])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;string(String)&lt;/code&gt; эквивалентна &lt;code&gt;string(String, 1)&lt;/code&gt; , а &lt;code&gt;string(String, StartLocation)&lt;/code&gt; эквивалентна &lt;code&gt;string(String, StartLocation, [])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="829a7b9e7a070c8eedbe9faf460e1206c04103e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt; is a &lt;code&gt;NULL&lt;/code&gt;-terminated sequence of characters (that is, a C string) from which the list will be created.</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; - это последовательность символов с окончанием &lt;code&gt;NULL&lt;/code&gt; (то есть строка C), из которой будет создан список.</target>
        </trans-unit>
        <trans-unit id="d03b30e20ea1057a49ab478dbea5f53d595df7f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt; is a buffer containing a sequence of bytes. The buffer does not need to be &lt;code&gt;NULL&lt;/code&gt;-terminated.</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; - это буфер, содержащий последовательность байтов. Буфер не обязательно должен завершаться &lt;code&gt;NULL&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5e9b47b52b5189b16db8322be0aa18e9de13e1bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt; is the sequence of characters that will be used to create the atom.</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; - это последовательность символов, которая будет использоваться для создания атома.</target>
        </trans-unit>
        <trans-unit id="6b57290f7648798494a58fa3f5ad151fa956b03e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string_to_handle(QueryString)&lt;/code&gt; is equivalent to &lt;code&gt;string_to_handle(QueryString, [])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;string_to_handle(QueryString)&lt;/code&gt; эквивалентно &lt;code&gt;string_to_handle(QueryString, [])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2c4392ea3ebcf53d0b651f744627722a0ea70099" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string_to_handle(QueryString, Options)&lt;/code&gt; is equivalent to &lt;code&gt;string_to_handle(QueryString, Options, erl_eval:new_bindings())&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;string_to_handle(QueryString, Options)&lt;/code&gt; эквивалентно &lt;code&gt;string_to_handle(QueryString, Options, erl_eval:new_bindings())&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="76cb6b2cad6ff288638a402f533d017bc05a8c4d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;strings&lt;/code&gt; is set to &lt;code&gt;false&lt;/code&gt; if modifier &lt;code&gt;l&lt;/code&gt; is present.</source>
          <target state="translated">&lt;code&gt;strings&lt;/code&gt; устанавливается в &lt;code&gt;false&lt;/code&gt; , если присутствует модификатор &lt;code&gt;l&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cbbab772bcf66672a3f9fd53febd99f1d9336144" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;strip/1&lt;/code&gt; removes any leading or trailing linear white space from the string. Linear white space is to be read as horizontal tab or space.</source>
          <target state="translated">&lt;code&gt;strip/1&lt;/code&gt; удаляет любые начальные или конечные линейные пробелы из строки. Линейный пробел следует читать как горизонтальную табуляцию или пробел.</target>
        </trans-unit>
        <trans-unit id="74e7941fca29115b2e0026a22ec1897cd3510461" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;struct hostent *ei_gethostbyaddr(const char *addr, int len, int type)&lt;/code&gt;&lt;code&gt;struct hostent *ei_gethostbyaddr_r(const char *addr, int length, int type, struct hostent *hostp, char *buffer, int buflen, int *h_errnop)&lt;/code&gt;&lt;code&gt;struct hostent *ei_gethostbyname(const char *name)&lt;/code&gt;&lt;code&gt;struct hostent *ei_gethostbyname_r(const char *name, struct hostent *hostp, char *buffer, int buflen, int *h_errnop)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;struct hostent *ei_gethostbyaddr(const char *addr, int len, int type)&lt;/code&gt; &lt;code&gt;struct hostent *ei_gethostbyaddr_r(const char *addr, int length, int type, struct hostent *hostp, char *buffer, int buflen, int *h_errnop)&lt;/code&gt; &lt;code&gt;struct hostent *ei_gethostbyname(const char *name)&lt;/code&gt; &lt;code&gt;struct hostent *ei_gethostbyname_r(const char *name, struct hostent *hostp, char *buffer, int buflen, int *h_errnop)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1409d6497c88ef60b280850499bdc9c218838121" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;struct hostent *erl_gethostbyaddr(addr, length, type)&lt;/code&gt;&lt;code&gt;struct hostent *erl_gethostbyaddr_r(addr, length, type, hostp, buffer, buflen, h_errnop)&lt;/code&gt;&lt;code&gt;struct hostent *erl_gethostbyname(name)&lt;/code&gt;&lt;code&gt;struct hostent *erl_gethostbyname_r(name, hostp, buffer, buflen, h_errnop)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;struct hostent *erl_gethostbyaddr(addr, length, type)&lt;/code&gt; &lt;code&gt;struct hostent *erl_gethostbyaddr_r(addr, length, type, hostp, buffer, buflen, h_errnop)&lt;/code&gt; &lt;code&gt;struct hostent *erl_gethostbyname(name)&lt;/code&gt; &lt;code&gt;struct hostent *erl_gethostbyname_r(name, hostp, buffer, buflen, h_errnop)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ddbbd8e762f6eb9ca0fb39b8f90973ab856b7681" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;stylesheet&lt;/code&gt;, see &lt;code&gt;&lt;a href=&quot;run_test_chapter#html_stylesheet&quot;&gt;HTML Style Sheets&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;stylesheet&lt;/code&gt; , см. &lt;code&gt;&lt;a href=&quot;run_test_chapter#html_stylesheet&quot;&gt;HTML Style Sheets&lt;/a&gt;&lt;/code&gt; стилей HTML</target>
        </trans-unit>
        <trans-unit id="9101985c9c9e6805623d24ca6be2fc9c755232a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;subgraph(Digraph, Vertices)&lt;/code&gt; is equivalent to &lt;code&gt;subgraph(Digraph, Vertices, [])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;subgraph(Digraph, Vertices)&lt;/code&gt; эквивалентен &lt;code&gt;subgraph(Digraph, Vertices, [])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5ee4cf26515151aee37ffc9071c858cd3b6cfd78" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;subscribers&lt;/code&gt;. Returns a list of local processes currently subscribing to local table events that involve this table on this node.</source>
          <target state="translated">&lt;code&gt;subscribers&lt;/code&gt; . Возвращает список локальных процессов, которые в настоящее время подписываются на события локальной таблицы, которые включают эту таблицу на этом узле.</target>
        </trans-unit>
        <trans-unit id="d465c420098d5c04a06637730255e8f58c196a7f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;subscribers&lt;/code&gt;. Returns a list of local processes currently subscribing to system events.</source>
          <target state="translated">&lt;code&gt;subscribers&lt;/code&gt; . Возвращает список локальных процессов, которые в настоящее время подписываются на системные события.</target>
        </trans-unit>
        <trans-unit id="58eaa436722697bb4b76ecdc62fd661d7e29c9f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;suffix/1&lt;/code&gt; is equivalent to &lt;code&gt;filename:extension/1&lt;/code&gt; with the exception that &lt;code&gt;Suffix&lt;/code&gt; is returned without a leading dot (&lt;code&gt;.&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;suffix/1&lt;/code&gt; эквивалентен &lt;code&gt;filename:extension/1&lt;/code&gt; за исключением того, что &lt;code&gt;Suffix&lt;/code&gt; возвращается без начальной точки ( &lt;code&gt;.&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="33ac829a0b942b7ab697b4c75739d01b6c485a38" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sunrm&lt;/code&gt; - Sun's RPC encoding</source>
          <target state="translated">&lt;code&gt;sunrm&lt;/code&gt; - кодировка Sun RPC</target>
        </trans-unit>
        <trans-unit id="385e46d3cdae470f061ce351f93fa76f5f98d53a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;supervisor:start_link&lt;/code&gt; is synchronous. It does not return until all child processes have been started.</source>
          <target state="translated">&lt;code&gt;supervisor:start_link&lt;/code&gt; синхронный. Он не возвращается, пока не будут запущены все дочерние процессы.</target>
        </trans-unit>
        <trans-unit id="c1371430e2bfeb55d07934cd8e7f7006c3d014b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;supervisors&lt;/code&gt; - The count of all children marked as &lt;code&gt;child_type = supervisor&lt;/code&gt; in the specification list, regardless if the child process is still alive.</source>
          <target state="translated">&lt;code&gt;supervisors&lt;/code&gt; - количество всех дочерних &lt;code&gt;child_type = supervisor&lt;/code&gt; отмеченных как child_type = supervisor в списке спецификации, независимо от того, жив ли дочерний процесс.</target>
        </trans-unit>
        <trans-unit id="74f63f16e6444059fb284c802ba43aacc6c2805a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;suspended&lt;/code&gt; (suspended on a &quot;busy&quot; port or by the BIF &lt;code&gt;erlang:suspend_process/1,2&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;suspended&lt;/code&gt; (приостановлено на &quot;занятом&quot; порту или посредством BIF &lt;code&gt;erlang:suspend_process/1,2&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="8fcbdcec09d43370398600cd05606094a9113ff8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sync_nodes_mandatory = [Node]&lt;/code&gt; - Specifies which other nodes must be started (within the time-out specified by &lt;code&gt;sync_nodes_timeout&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;sync_nodes_mandatory = [Node]&lt;/code&gt; - указывает, какие другие узлы должны быть запущены (в течение времени ожидания, указанного параметром &lt;code&gt;sync_nodes_timeout&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="3ead4131afb9d2c0902c3784d8e8cb2caccdc953" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sync_nodes_optional = [Node]&lt;/code&gt; - Specifies which other nodes can be started (within the time-out specified by &lt;code&gt;sync_nodes_timeout&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;sync_nodes_optional = [Node]&lt;/code&gt; - указывает, какие другие узлы могут быть запущены (в течение времени ожидания, указанного параметром &lt;code&gt;sync_nodes_timeout&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="926a5205a8f3357b54597d3a5903fd2cf3520a75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sync_nodes_timeout = integer() | infinity&lt;/code&gt; - Specifies how many milliseconds to wait for the other nodes to start.</source>
          <target state="translated">&lt;code&gt;sync_nodes_timeout = integer() | infinity&lt;/code&gt; - указывает, сколько миллисекунд ждать запуска других узлов.</target>
        </trans-unit>
        <trans-unit id="331a90ce47d0f3f19fd4260f5da31347814d7050" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sys:debug_options/1&lt;/code&gt; takes a list of options as argument. Here the list is empty, which means no debugging is enabled initially. For information about the possible options, see the &lt;code&gt;sys(3)&lt;/code&gt; manual page in STDLIB.</source>
          <target state="translated">&lt;code&gt;sys:debug_options/1&lt;/code&gt; принимает в качестве аргумента список параметров. Здесь список пуст, что означает, что отладка изначально не включена. Для получения информации о возможных вариантах см. Справочную страницу &lt;code&gt;sys(3)&lt;/code&gt; в STDLIB.</target>
        </trans-unit>
        <trans-unit id="68e8ec2b1dceb4534eb89da5410d555d02177843" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sys:get_debug/3&lt;/code&gt; (incorrectly documented and only for internal use. Can often be replaced with sys:get_log/1)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7df14368372b3646bb181f1597ffba0ecce36e2c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sys_alloc&lt;/code&gt; cannot be disabled.</source>
          <target state="translated">&lt;code&gt;sys_alloc&lt;/code&gt; нельзя отключить.</target>
        </trans-unit>
        <trans-unit id="1bad1d55ed92f2d7503c091b271286408ed77f87" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sys_alloc&lt;/code&gt; carrier size. Carriers allocated through &lt;code&gt;sys_alloc&lt;/code&gt; are allocated in sizes that are multiples of the &lt;code&gt;sys_alloc&lt;/code&gt; carrier size. This is not true for main multiblock carriers and carriers allocated during a memory shortage, though.</source>
          <target state="translated">&lt;code&gt;sys_alloc&lt;/code&gt; размер оператора связи. &lt;code&gt;sys_alloc&lt;/code&gt; выделенные через sys_alloc , выделяются в размерах, кратных &lt;code&gt;sys_alloc&lt;/code&gt; несущей sys_alloc . Однако это не относится к основным многоблочным носителям и операторам связи, выделенным во время нехватки памяти.</target>
        </trans-unit>
        <trans-unit id="0696131f99ac521df2e4ee480eb796e727704385" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sys_alloc&lt;/code&gt;, &lt;code&gt;literal_alloc&lt;/code&gt; and &lt;code&gt;temp_alloc&lt;/code&gt; are always enabled and cannot be disabled. &lt;code&gt;exec_alloc&lt;/code&gt; is only available if it is needed and cannot be disabled. &lt;code&gt;mseg_alloc&lt;/code&gt; is always enabled if it is available and an allocator that uses it is enabled. All other allocators can be &lt;code&gt;&lt;a href=&quot;#M_e&quot;&gt;enabled or disabled&lt;/a&gt;&lt;/code&gt;. By default all allocators are enabled. When an allocator is disabled, &lt;code&gt;sys_alloc&lt;/code&gt; is used instead of the disabled allocator.</source>
          <target state="translated">&lt;code&gt;sys_alloc&lt;/code&gt; , &lt;code&gt;literal_alloc&lt;/code&gt; и &lt;code&gt;temp_alloc&lt;/code&gt; всегда включены и не могут быть отключены. &lt;code&gt;exec_alloc&lt;/code&gt; доступен только в случае необходимости и не может быть отключен. &lt;code&gt;mseg_alloc&lt;/code&gt; всегда включен, если он доступен, и активирован распределитель, который его использует. Все остальные распределители могут быть &lt;code&gt;&lt;a href=&quot;#M_e&quot;&gt;enabled or disabled&lt;/a&gt;&lt;/code&gt; . По умолчанию все распределители включены. Когда распределитель отключен, вместо отключенного распределителя используется &lt;code&gt;sys_alloc&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fc3a0a960790f719d64fa929942a9d6fbc2c76fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;syslogd(1M)&lt;/code&gt;, &lt;code&gt;syslog.conf(4)&lt;/code&gt; in the Solaris documentation.</source>
          <target state="translated">&lt;code&gt;syslogd(1M)&lt;/code&gt; , &lt;code&gt;syslog.conf(4)&lt;/code&gt; в документации Solaris.</target>
        </trans-unit>
        <trans-unit id="88e456495a94fa4b0312e9cb80dbba7fca42938e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;system_limit&lt;/code&gt;. A system limit was exhausted.</source>
          <target state="translated">&lt;code&gt;system_limit&lt;/code&gt; . Системный лимит исчерпан.</target>
        </trans-unit>
        <trans-unit id="7daa58f756a53f96f4454b9b3b4f467760073a12" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;systools&lt;/code&gt; in the SASL application includes tools to build and check releases. The functions read the &lt;code&gt;rel&lt;/code&gt; and &lt;code&gt;.app&lt;/code&gt; files and perform syntax and dependency checks. The &lt;code&gt;systools:make_script/1,2&lt;/code&gt; function is used to generate a boot script (see System Principles):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfba8c97e55470a41ba2f91206458c0f02c7a04e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;systools&lt;/code&gt; in the SASL application includes tools to build and check releases. The functions read the &lt;code&gt;rel&lt;/code&gt; and &lt;code&gt;.app&lt;/code&gt; files and performs syntax and dependency checks. The &lt;code&gt;systools:make_script/1,2&lt;/code&gt; function is used to generate a boot script (see System Principles):</source>
          <target state="translated">&lt;code&gt;systools&lt;/code&gt; в приложении SASL включает инструменты для создания и проверки выпусков. Функции читают файлы &lt;code&gt;rel&lt;/code&gt; и &lt;code&gt;.app&lt;/code&gt; и выполняют проверку синтаксиса и зависимостей. Функция &lt;code&gt;systools:make_script/1,2&lt;/code&gt; используется для создания сценария загрузки (см. Принципы системы):</target>
        </trans-unit>
        <trans-unit id="856d6facf4d5e4a68a3112504169034b280688e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;t&lt;/code&gt; - An untagged integer that will fit in 12 bits (0-4096). It can be packed with other operands in a word. Most often used as the number of live registers in instructions such as &lt;code&gt;test_heap&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23147a1c9e546954a9e2262475563a1f7464f139" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;table/1&lt;/code&gt; and &lt;code&gt;table/2&lt;/code&gt; are provided as synonyms to resemble the &lt;code&gt;&lt;a href=&quot;erl_tar&quot;&gt;erl_tar&lt;/a&gt;&lt;/code&gt; module.</source>
          <target state="translated">&lt;code&gt;table/1&lt;/code&gt; и &lt;code&gt;table/2&lt;/code&gt; предоставляются как синонимы, чтобы напоминать модуль &lt;code&gt;&lt;a href=&quot;erl_tar&quot;&gt;erl_tar&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1dd27b918c10e80696b0e7f929f3871afe8e42d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tables&lt;/code&gt;. Returns a list of all locally known tables.</source>
          <target state="translated">&lt;code&gt;tables&lt;/code&gt; . Возвращает список всех локально известных таблиц.</target>
        </trans-unit>
        <trans-unit id="f13557d0891f440343c770a7f38974aa7b18d43a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tail&lt;/code&gt; is the existing list to which &lt;code&gt;head&lt;/code&gt; is concatenated.</source>
          <target state="translated">&lt;code&gt;tail&lt;/code&gt; - это существующий список, к которому присоединяется &lt;code&gt;head&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a94c21835d4f0bd9bbda995e194228662b999155" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;takewhile(P, L)&lt;/code&gt; takes elements &lt;code&gt;X&lt;/code&gt; from a list &lt;code&gt;L&lt;/code&gt; as long as the predicate &lt;code&gt;P(X)&lt;/code&gt; is true:</source>
          <target state="translated">&lt;code&gt;takewhile(P, L)&lt;/code&gt; берет элементы &lt;code&gt;X&lt;/code&gt; из списка &lt;code&gt;L&lt;/code&gt; , пока предикат &lt;code&gt;P(X)&lt;/code&gt; истинен:</target>
        </trans-unit>
        <trans-unit id="9a85923e1723850515635d311eca20ada2896679" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;target_addr.conf&lt;/code&gt;: see &lt;code&gt;&lt;a href=&quot;#target_addr&quot;&gt;Target Address Definitions&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;target_addr.conf&lt;/code&gt; : см. &lt;code&gt;&lt;a href=&quot;#target_addr&quot;&gt;Target Address Definitions&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7997915870dd0118bf387166df53805fa2ca2cc1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;target_addr_entry/6&lt;/code&gt; translates to the following call: &lt;code&gt;target_addr_entry(Name, Domain, Addr, TagList, ParamsName, EngineId, [])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;target_addr_entry/6&lt;/code&gt; преобразуется в следующий вызов: &lt;code&gt;target_addr_entry(Name, Domain, Addr, TagList, ParamsName, EngineId, [])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="761e8d37fef36675838e1075ac7246df0b0f9388" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;target_addr_entry/7&lt;/code&gt; translates to the following call: &lt;code&gt;target_addr_entry(Name, Domain, Addr, TagList, ParamsName, EngineId, TMask, 2048)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;target_addr_entry/7&lt;/code&gt; преобразуется в следующий вызов: &lt;code&gt;target_addr_entry(Name, Domain, Addr, TagList, ParamsName, EngineId, TMask, 2048)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4e6e4c8cb706ad261a80f5a06b8717a40135dad7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;target_addr_entry/8&lt;/code&gt; translates to the following call: &lt;code&gt;target_addr_entry(Name, Domain, Addr, 1500, 3, TagList, ParamsName, EngineId, TMask, MaxMessageSize)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;target_addr_entry/8&lt;/code&gt; преобразуется в следующий вызов: &lt;code&gt;target_addr_entry(Name, Domain, Addr, 1500, 3, TagList, ParamsName, EngineId, TMask, MaxMessageSize)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4c55935fc69d786c8e3110e7878f71876b4872eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;target_params.conf&lt;/code&gt;: see &lt;code&gt;&lt;a href=&quot;#target_params&quot;&gt;Target Parameters Definitions&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;target_params.conf&lt;/code&gt; : см. &lt;code&gt;&lt;a href=&quot;#target_params&quot;&gt;Target Parameters Definitions&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2e39f6deef95253e516a543858b9c16007f0381a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;target_params_entry/2&lt;/code&gt; translates to the following call: &lt;code&gt;target_params_entry(Name, Vsn, &quot;initial&quot;, noAuthNoPriv)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;target_params_entry/2&lt;/code&gt; преобразуется в следующий вызов: &lt;code&gt;target_params_entry(Name, Vsn, &quot;initial&quot;, noAuthNoPriv)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="92f3d69a48c6de5392426a354488ccecb4f36151" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;target_params_entry/4&lt;/code&gt; translates to the following call: &lt;code&gt;target_params_entry(Name, MPModel, SecModel, SecName, SecLevel)&lt;/code&gt; where &lt;code&gt;MPModel&lt;/code&gt; and &lt;code&gt;SecModel&lt;/code&gt; is mapped from &lt;code&gt;Vsn&lt;/code&gt;, see above.</source>
          <target state="translated">&lt;code&gt;target_params_entry/4&lt;/code&gt; преобразуется в следующий вызов: &lt;code&gt;target_params_entry(Name, MPModel, SecModel, SecName, SecLevel)&lt;/code&gt; где &lt;code&gt;MPModel&lt;/code&gt; и &lt;code&gt;SecModel&lt;/code&gt; отображаются из &lt;code&gt;Vsn&lt;/code&gt; , см. выше.</target>
        </trans-unit>
        <trans-unit id="c65d3504ff6277748a0fcad3381c26b8114325d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;template(E) -&amp;gt; built_in_rules(fun template/1, E)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;template(E) -&amp;gt; built_in_rules(fun template/1, E)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7e29e765113c02fdf4d9903a9db73ab2e862a5dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;temporary node down&lt;/code&gt;. When a node temporarily goes down, it can be time to compensate some fragments with new replicas to keep the desired level of redundancy. When the node comes up again, it can be time to remove the superfluous replica.</source>
          <target state="translated">&lt;code&gt;temporary node down&lt;/code&gt; . Когда узел временно выходит из строя, может быть пора компенсировать некоторые фрагменты новыми репликами, чтобы сохранить желаемый уровень избыточности. Когда узел снова встанет, пора удалить лишнюю реплику.</target>
        </trans-unit>
        <trans-unit id="7889715c1022d3782a9571f294f6bb3d540d2dd7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;term&lt;/code&gt; is an Erlang term to be encoded.</source>
          <target state="translated">&lt;code&gt;term&lt;/code&gt; - это термин Эрланга, который нужно закодировать.</target>
        </trans-unit>
        <trans-unit id="320d2cf3996f3516930b74a7da91a4cf64551e4d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;term&lt;/code&gt; is an Erlang term. In order for this function to succeed, &lt;code&gt;term&lt;/code&gt; must either be an Erlang variable with the specified name, or it must be an Erlang list or tuple containing a variable with the specified name. Other Erlang types cannot contain variables.</source>
          <target state="translated">&lt;code&gt;term&lt;/code&gt; - это термин Эрланга. Для успешного выполнения этой функции &lt;code&gt;term&lt;/code&gt; должен быть либо переменной Erlang с указанным именем, либо списком или кортежем Erlang, содержащим переменную с указанным именем. Другие типы Erlang не могут содержать переменные.</target>
        </trans-unit>
        <trans-unit id="71b560066787dccab3467776d120605cf8423724" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;term&lt;/code&gt; is an Erlang tuple or an Erlang binary object.</source>
          <target state="translated">&lt;code&gt;term&lt;/code&gt; - это кортеж Erlang или двоичный объект Erlang.</target>
        </trans-unit>
        <trans-unit id="4a937529f98cda88d3558d1902ed4ee55409000e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;term&lt;/code&gt; is the Erlang term to print.</source>
          <target state="translated">&lt;code&gt;term&lt;/code&gt; - это термин Erlang для печати.</target>
        </trans-unit>
        <trans-unit id="a92cbdd1716c28f91a4671abcf529fbcc1c587f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;term_to_iovec()&lt;/code&gt; is a pure optimization of the functionality &lt;code&gt;term_to_binary()&lt;/code&gt; provide. &lt;code&gt;term_to_iovec()&lt;/code&gt; can for example refer directly to off heap binaries instead of copying the binary data into the result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d16ca4ce0d4f52adac2af1b6b617d6a2f52d428" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;test/1&lt;/code&gt; iterates over all types in &lt;code&gt;Module&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;test/1&lt;/code&gt; выполняет итерацию по всем типам в &lt;code&gt;Module&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="df87fd3cf67832c938bd2d08b138f9541ee87898" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;test/2&lt;/code&gt; tests type &lt;code&gt;Type&lt;/code&gt; with a random value.</source>
          <target state="translated">&lt;code&gt;test/2&lt;/code&gt; tests type &lt;code&gt;Type&lt;/code&gt; со случайным значением.</target>
        </trans-unit>
        <trans-unit id="80e0809ce9f9b9bd8a8f05ea230004a467758fbc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;test/3&lt;/code&gt; tests type &lt;code&gt;Type&lt;/code&gt; with &lt;code&gt;Value&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;test/3&lt;/code&gt; типа тестов &lt;code&gt;Type&lt;/code&gt; со &lt;code&gt;Value&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="268007540d07f6072d6797eb2ac02f334f5e5063" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;test&lt;/code&gt; - Recommended. All files regarding tests, such as test suites and test specifications, should be placed here.</source>
          <target state="translated">&lt;code&gt;test&lt;/code&gt; - Рекомендуется. Здесь должны быть размещены все файлы, относящиеся к тестам, такие как наборы тестов и спецификации тестов.</target>
        </trans-unit>
        <trans-unit id="ca90e153269c39e9983c8fc84e6edce4aeb819f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;text&lt;/code&gt;&lt;code&gt;underscore&lt;/code&gt;&lt;code&gt;variable&lt;/code&gt;&lt;code&gt;warning_marker&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;text&lt;/code&gt;&lt;code&gt;underscore&lt;/code&gt;&lt;code&gt;variable&lt;/code&gt;&lt;code&gt;warning_marker&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="db691fba104ec38a95d2e5a9028aa4d95a1c4994" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tftp&lt;/code&gt; uses a callback module to handle the file transfer. Two such callback modules are provided, &lt;code&gt;tftp_binary&lt;/code&gt; and &lt;code&gt;tftp_file&lt;/code&gt;. See &lt;code&gt;&lt;a href=&quot;tftp#read_file-3&quot;&gt;read_file/3&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;tftp#write_file-3&quot;&gt;write_file/3&lt;/a&gt;&lt;/code&gt; for details. You can also implement your own callback modules, see &lt;code&gt;&lt;a href=&quot;tftp#tftp_callback&quot;&gt;CALLBACK FUNCTIONS&lt;/a&gt;&lt;/code&gt;. A callback module provided by the user is registered using option &lt;code&gt;callback&lt;/code&gt;, see &lt;code&gt;&lt;a href=&quot;tftp#options&quot;&gt;DATA TYPES&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;tftp&lt;/code&gt; использует модуль обратного вызова для обработки передачи файлов. &lt;code&gt;tftp_binary&lt;/code&gt; два таких модуля обратного вызова: tftp_binary и &lt;code&gt;tftp_file&lt;/code&gt; . Подробнее см. &lt;code&gt;&lt;a href=&quot;tftp#read_file-3&quot;&gt;read_file/3&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;tftp#write_file-3&quot;&gt;write_file/3&lt;/a&gt;&lt;/code&gt; . Вы также можете реализовать свои собственные модули обратного вызова, см. &lt;code&gt;&lt;a href=&quot;tftp#tftp_callback&quot;&gt;CALLBACK FUNCTIONS&lt;/a&gt;&lt;/code&gt; . Модуль обратного вызова, предоставленный пользователем, регистрируется с помощью функции &lt;code&gt;callback&lt;/code&gt; , см. &lt;code&gt;&lt;a href=&quot;tftp#options&quot;&gt;DATA TYPES&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0ef5a1c92460a420f7d128dac4725183327d3897" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;this_node_name&lt;/code&gt; is the name of the C-node (the name before '@' in the full node name).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90c15ece6af02153a9c0355447c31051ed435bd9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;this_node_name&lt;/code&gt; is the registered name of the process (the name before '@').</source>
          <target state="translated">&lt;code&gt;this_node_name&lt;/code&gt; - зарегистрированное имя процесса (имя перед '@').</target>
        </trans-unit>
        <trans-unit id="64b49bb1b6f20c04a2f6a916f4143ca9308000c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;thisalivename&lt;/code&gt; is the name of the local C-node (the name before '@' in the full node name). Can be &lt;code&gt;NULL&lt;/code&gt; (from OTP 23) to get a dynamically assigned name from the peer node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7f87e5cd5088792da9029cd76fb7272efebad16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;thisalivename&lt;/code&gt; is the registered name of the process.</source>
          <target state="translated">&lt;code&gt;thisalivename&lt;/code&gt; - зарегистрированное имя процесса.</target>
        </trans-unit>
        <trans-unit id="3649f198af3e1ea2c017f74b5a68bdabfce69e24" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;thishostname&lt;/code&gt; is the name of the machine we are running on. If long names are to be used, they are to be fully qualified (that is, &lt;code&gt;durin.erix.ericsson.se&lt;/code&gt; instead of &lt;code&gt;durin&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;thishostname&lt;/code&gt; - это имя машины, на которой мы работаем. Если длинные имена , которые будут использоваться, они должны быть полностью квалифицирован (то есть, &lt;code&gt;durin.erix.ericsson.se&lt;/code&gt; вместо &lt;code&gt;durin&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="9d5840f868f900e306b584acc81cf8b8ef3ba6dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;thisnodename&lt;/code&gt; is the full name of the local C-node, that is, &lt;code&gt;mynode@myhost&lt;/code&gt;. Can be &lt;code&gt;NULL&lt;/code&gt; if &lt;code&gt;thisalivename&lt;/code&gt; is &lt;code&gt;NULL&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="432d24d28cb42ea5622738153172fc0b74357d69" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;thisnodename&lt;/code&gt; is the full name of the node, that is, &lt;code&gt;einode@durin&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;thisnodename&lt;/code&gt; - полное имя узла, то есть &lt;code&gt;einode@durin&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fbf9ac7f77cb74e53efc1812f73ebbdaba2d373d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;thispaddr&lt;/code&gt; if the IP address of the host.</source>
          <target state="translated">&lt;code&gt;thispaddr&lt;/code&gt; , если IP-адрес хоста.</target>
        </trans-unit>
        <trans-unit id="e0fb80847311db2ce29decc6603fb4168e8e957b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;thread&lt;/code&gt; can only be a sublevel to &lt;code&gt;core&lt;/code&gt;. &lt;code&gt;core&lt;/code&gt; can be a sublevel to &lt;code&gt;processor&lt;/code&gt; or &lt;code&gt;node&lt;/code&gt;. &lt;code&gt;processor&lt;/code&gt; can be on the top level or a sublevel to &lt;code&gt;node&lt;/code&gt;. &lt;code&gt;node&lt;/code&gt; can be on the top level or a sublevel to &lt;code&gt;processor&lt;/code&gt;. That is, NUMA nodes can be processor internal or processor external. A CPU topology can consist of a mix of processor internal and external NUMA nodes, as long as each logical CPU belongs to &lt;strong&gt;one&lt;/strong&gt; NUMA node. Cache hierarchy is not part of the &lt;code&gt;CpuTopology&lt;/code&gt; type, but will be in a future release. Other things can also make it into the CPU topology in a future release. So, expect the &lt;code&gt;CpuTopology&lt;/code&gt; type to change.</source>
          <target state="translated">&lt;code&gt;thread&lt;/code&gt; может быть только подуровнем к &lt;code&gt;core&lt;/code&gt; . &lt;code&gt;core&lt;/code&gt; может быть подуровнем &lt;code&gt;processor&lt;/code&gt; или &lt;code&gt;node&lt;/code&gt; . &lt;code&gt;processor&lt;/code&gt; может быть на верхнем уровне или на подуровне к &lt;code&gt;node&lt;/code&gt; . &lt;code&gt;node&lt;/code&gt; может быть на верхнем уровне или на подуровне &lt;code&gt;processor&lt;/code&gt; . То есть узлы NUMA могут быть внутренними или внешними. Топология ЦП может состоять из сочетания внутренних и внешних узлов NUMA процессора, если каждый логический ЦП принадлежит &lt;strong&gt;одному&lt;/strong&gt; узлу NUMA. Иерархия кеша не является частью &lt;code&gt;CpuTopology&lt;/code&gt; типа, но будет в будущем выпуске. Другие вещи также могут быть включены в топологию ЦП в будущих версиях. Итак, ожидайте &lt;code&gt;CpuTopology&lt;/code&gt; типа CpuTopology .</target>
        </trans-unit>
        <trans-unit id="24541f485e60b62a748249786f7d12597baf266c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;thread_no_node_processor_spread&lt;/code&gt; - A combination of &lt;code&gt;thread_spread&lt;/code&gt;, and &lt;code&gt;no_node_processor_spread&lt;/code&gt;. Schedulers are spread over hardware threads across NUMA nodes, but schedulers are only spread over processors internally in one NUMA node at a time.</source>
          <target state="translated">&lt;code&gt;thread_no_node_processor_spread&lt;/code&gt; - комбинация &lt;code&gt;thread_spread&lt;/code&gt; и &lt;code&gt;no_node_processor_spread&lt;/code&gt; . Планировщики распределяются по аппаратным потокам между узлами NUMA, но планировщики распределяются по процессорам только внутри одного узла NUMA за раз.</target>
        </trans-unit>
        <trans-unit id="2a7d532f9d46f688ecc7d28920d4f7b069058c53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;thread_spread&lt;/code&gt; - Thread refers to hardware threads (such as Intel's hyper-threads). Schedulers with low scheduler identifiers, are bound to the first hardware thread of each core, then schedulers with higher scheduler identifiers are bound to the second hardware thread of each core,and so on.</source>
          <target state="translated">&lt;code&gt;thread_spread&lt;/code&gt; - поток относится к аппаратным потокам (например, гиперпотокам Intel). Планировщики с низкими идентификаторами планировщика привязываются к первому аппаратному потоку каждого ядра, затем планировщики с более высокими идентификаторами планировщика привязываются ко второму аппаратному потоку каждого ядра и так далее.</target>
        </trans-unit>
        <trans-unit id="75540c4a1a0e614181fe976a238947bf8ef0e5a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tid&lt;/code&gt; is a thread identifier.</source>
          <target state="translated">&lt;code&gt;tid&lt;/code&gt; - это идентификатор потока.</target>
        </trans-unit>
        <trans-unit id="86a072bab3b54671f3a72c29d207b8c67c3ed25b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tid&lt;/code&gt; is the thread identifier of the thread to join. &lt;code&gt;exit_value&lt;/code&gt; is a pointer to a pointer to an exit value, or &lt;code&gt;NULL&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;tid&lt;/code&gt; - это идентификатор потока, к которому нужно присоединиться. &lt;code&gt;exit_value&lt;/code&gt; - это указатель на указатель на значение выхода или &lt;code&gt;NULL&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0cda8edb579f661ac84f8976b1d3b894aa95509a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;time_unit&lt;/code&gt; is the time unit of the returned value.</source>
          <target state="translated">&lt;code&gt;time_unit&lt;/code&gt; - единица времени возвращаемого значения.</target>
        </trans-unit>
        <trans-unit id="da341cd15aab0c23c823c6ed99cd3969e5dae6aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;time_unit&lt;/code&gt; is time unit of returned value.</source>
          <target state="translated">&lt;code&gt;time_unit&lt;/code&gt; - единица времени возвращаемого значения.</target>
        </trans-unit>
        <trans-unit id="42330a1483a712d0f47d8231a0e69cfc00669f19" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;timeout&lt;/code&gt; - the reply failed to arrive before the request timer expired.</source>
          <target state="translated">&lt;code&gt;timeout&lt;/code&gt; - ответ не пришел до истечения таймера запроса.</target>
        </trans-unit>
        <trans-unit id="b1fcaf9b3f13a9751ed481b6dcbf6041cc7f21e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;timeout&lt;/code&gt; is the maximum time (in milliseconds) to wait for results. Specify &lt;code&gt;ERL_NO_TIMEOUT&lt;/code&gt; to wait forever. &lt;code&gt;ei_rpc()&lt;/code&gt; waits infinitely for the answer, that is, the call will never time out.</source>
          <target state="translated">&lt;code&gt;timeout&lt;/code&gt; - максимальное время (в миллисекундах) ожидания результатов. Укажите &lt;code&gt;ERL_NO_TIMEOUT&lt;/code&gt; , чтобы ждать вечно. &lt;code&gt;ei_rpc()&lt;/code&gt; бесконечно ждет ответа, то есть время ожидания вызова никогда не истечет .</target>
        </trans-unit>
        <trans-unit id="7cb3c152383d2fcb4e26042165fb3664492ba3ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;timeout&lt;/code&gt; is the maximum time (in milliseconds) to wait for results. To wait forever, specify &lt;code&gt;ERL_NO_TIMEOUT&lt;/code&gt;. When &lt;code&gt;erl_rpc()&lt;/code&gt; calls &lt;code&gt;erl_rpc_from()&lt;/code&gt;, the call will never timeout.</source>
          <target state="translated">&lt;code&gt;timeout&lt;/code&gt; - максимальное время (в миллисекундах) ожидания результатов. Чтобы ждать вечно, укажите &lt;code&gt;ERL_NO_TIMEOUT&lt;/code&gt; . Когда &lt;code&gt;erl_rpc()&lt;/code&gt; вызывает &lt;code&gt;erl_rpc_from()&lt;/code&gt; , время ожидания вызова никогда не истечет.</target>
        </trans-unit>
        <trans-unit id="9045e2ea725941e1fa92dc5204c53370db518515" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;timer:tc/3&lt;/code&gt; measures wall-clock time. The advantage with wall-clock time is that I/O, swapping, and other activities in the operating system kernel are included in the measurements. The disadvantage is that the measurements vary a lot. Usually it is best to run the benchmark several times and note the shortest time, which is to be the minimum time that is possible to achieve under the best of circumstances.</source>
          <target state="translated">&lt;code&gt;timer:tc/3&lt;/code&gt; измеряет время на настенных часах. Преимущество настенных часов заключается в том, что в измерения включаются операции ввода-вывода, подкачки и другие действия в ядре операционной системы. Недостаток в том, что размеры сильно различаются. Обычно лучше всего запустить тест несколько раз и отметить самое короткое время, которое должно быть минимальным временем, которого можно достичь при наилучших обстоятельствах.</target>
        </trans-unit>
        <trans-unit id="74af5378815bface9865562d1f6d6f60af1412ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;to : string&lt;/code&gt; :: Process ID or Port ID. Ex. &lt;code&gt;&quot;&amp;lt;0.131.0&amp;gt;&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;to : string&lt;/code&gt; :: ID процесса или ID порта. Ex. &lt;code&gt;&quot;&amp;lt;0.131.0&amp;gt;&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0bb3bd077d0ab1872873db7a7cc66cf1860106c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;to : string&lt;/code&gt; :: Process ID. Ex. &lt;code&gt;&quot;&amp;lt;0.131.0&amp;gt;&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;to : string&lt;/code&gt; :: ID процесса. Ex. &lt;code&gt;&quot;&amp;lt;0.131.0&amp;gt;&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="14c23cdd2f94f85a337afca31688e7593a5974a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;to&lt;/code&gt; is a string containing the registered name of the intended recipient of the message.</source>
          <target state="translated">&lt;code&gt;to&lt;/code&gt; - строка, содержащая зарегистрированное имя предполагаемого получателя сообщения.</target>
        </trans-unit>
        <trans-unit id="4e706f37e7305d40f9c8a6f8409f5751f42ebdab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;to&lt;/code&gt; is an Erlang term containing the pid of the intended recipient of the message.</source>
          <target state="translated">&lt;code&gt;to&lt;/code&gt; - это термин Эрланга, содержащий идентификатор предполагаемого получателя сообщения.</target>
        </trans-unit>
        <trans-unit id="a647205e833ea46ec9656a3dc4b119093d9c63ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;to&lt;/code&gt; is the pid of the intended recipient of the message.</source>
          <target state="translated">&lt;code&gt;to&lt;/code&gt; - идентификатор предполагаемого получателя сообщения.</target>
        </trans-unit>
        <trans-unit id="49e6131c83b765eb6ee13c4222538475ad7821d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tokens(Continuation, CharSpec, StartLocation)&lt;/code&gt; is equivalent to &lt;code&gt;tokens(Continuation, CharSpec, StartLocation, [])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;tokens(Continuation, CharSpec, StartLocation)&lt;/code&gt; эквивалентны &lt;code&gt;tokens(Continuation, CharSpec, StartLocation, [])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1526bde11cc439a1544fd43c47b7f90a379e4341" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tpkt&lt;/code&gt; - TPKT format [RFC1006]</source>
          <target state="translated">&lt;code&gt;tpkt&lt;/code&gt; - формат TPKT [RFC1006]</target>
        </trans-unit>
        <trans-unit id="8cfe83b121501308f139a5811816156fc1418da6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;trace_status&lt;/code&gt; is a special type of &lt;code&gt;TraceTag&lt;/code&gt;, which is used to check if the tracer is still to be active. It is called in multiple scenarios, but most significantly it is used when tracing is started using this tracer. If &lt;code&gt;remove&lt;/code&gt; is returned when the &lt;code&gt;trace_status&lt;/code&gt; is checked, the tracer is removed from the tracee.</source>
          <target state="translated">&lt;code&gt;trace_status&lt;/code&gt; - это особый тип &lt;code&gt;TraceTag&lt;/code&gt; , который используется для проверки активности средства трассировки. Он вызывается в нескольких сценариях, но наиболее часто он используется, когда трассировка запускается с помощью этого трассировщика. Если &lt;code&gt;remove&lt;/code&gt; возвращается , когда &lt;code&gt;trace_status&lt;/code&gt; проверяется, трейсер удаляется из Tracee.</target>
        </trans-unit>
        <trans-unit id="2d4d7aadc0aceeb4f0c873290fa582d8a6ce1b67" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;transaction_commits&lt;/code&gt;. Returns a number that indicates how many transactions have terminated successfully since Mnesia was started.</source>
          <target state="translated">&lt;code&gt;transaction_commits&lt;/code&gt; . Возвращает число, указывающее, сколько транзакций было успешно завершено с момента запуска Mnesia.</target>
        </trans-unit>
        <trans-unit id="b33ef20fb3b861edd2647508b04b70a7215c308a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;transaction_failures&lt;/code&gt;. Returns a number that indicates how many transactions have failed since Mnesia was started.</source>
          <target state="translated">&lt;code&gt;transaction_failures&lt;/code&gt; . Возвращает число, указывающее, сколько транзакций не удалось выполнить с момента запуска Mnesia.</target>
        </trans-unit>
        <trans-unit id="3b8578c8fac965dcde57dfd306ea5b0e8f18a44b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;transaction_log_writes&lt;/code&gt;. Returns a number that indicates how many write operations that have been performed to the transaction log since startup.</source>
          <target state="translated">&lt;code&gt;transaction_log_writes&lt;/code&gt; . Возвращает число, указывающее, сколько операций записи было выполнено в журнал транзакций с момента запуска.</target>
        </trans-unit>
        <trans-unit id="630b608fb07ad349a01288188a4e462d8b37ff83" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;transaction_restarts&lt;/code&gt;. Returns a number that indicates how many transactions have been restarted since Mnesia was started.</source>
          <target state="translated">&lt;code&gt;transaction_restarts&lt;/code&gt; . Возвращает число, указывающее, сколько транзакций было перезапущено с момента запуска Mnesia.</target>
        </trans-unit>
        <trans-unit id="3cff235f7cdbcade752ed6a1bc95a08f73663644" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;transactions&lt;/code&gt;. Returns a list of all currently active local transactions.</source>
          <target state="translated">&lt;code&gt;transactions&lt;/code&gt; . Возвращает список всех активных в данный момент локальных транзакций.</target>
        </trans-unit>
        <trans-unit id="ba50d7c6a778eb3b6a00e1942ce619907e536d65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;transports&lt;/code&gt; - which defines the transport domains and their addresses for the manager. &lt;strong&gt;Mandatory&lt;/strong&gt;</source>
          <target state="translated">&lt;code&gt;transports&lt;/code&gt; - определяет транспортные домены и их адреса для менеджера. &lt;strong&gt;Обязательное&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3dd8eb456f4c52d24b17e85ce6db521e59e2245c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;trap&lt;/code&gt; - &lt;code&gt;SnmpTrapInfo&lt;/code&gt; (see &lt;code&gt;&lt;a href=&quot;#handle_trap&quot;&gt;handle_trap&lt;/a&gt;&lt;/code&gt; for more info).</source>
          <target state="translated">&lt;code&gt;trap&lt;/code&gt; - &lt;code&gt;SnmpTrapInfo&lt;/code&gt; (подробнее см. &lt;code&gt;&lt;a href=&quot;#handle_trap&quot;&gt;handle_trap&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="446f1718810d5809e1f7ead841e52b06bb6f50e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;traverse&lt;/code&gt; specifies which function &lt;code&gt;Mnesia&lt;/code&gt; is to use to traverse the table. Default &lt;code&gt;select&lt;/code&gt; is used, but by using &lt;code&gt;{traverse, {select, MatchSpecification}}&lt;/code&gt; as an option to &lt;code&gt;&lt;a href=&quot;mnesia#table-1&quot;&gt;mnesia:table/2&lt;/a&gt;&lt;/code&gt; the user can specify its own view of the table.</source>
          <target state="translated">&lt;code&gt;traverse&lt;/code&gt; указывает, какую функцию &lt;code&gt;Mnesia&lt;/code&gt; будет использовать для перемещения по таблице. Используется &lt;code&gt;select&lt;/code&gt; умолчанию , но с помощью &lt;code&gt;{traverse, {select, MatchSpecification}}&lt;/code&gt; в качестве опции для &lt;code&gt;&lt;a href=&quot;mnesia#table-1&quot;&gt;mnesia:table/2&lt;/a&gt;&lt;/code&gt; пользователь может указать собственное представление таблицы.</target>
        </trans-unit>
        <trans-unit id="7d4ee48dd8e8173edf36c232e2c5be6b9e245fed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true | false&lt;/code&gt;. If set to &lt;code&gt;true&lt;/code&gt;, the connection to the client is a persistent connection and is not closed when the request is served.</source>
          <target state="translated">&lt;code&gt;true | false&lt;/code&gt; . Если установлено значение &lt;code&gt;true&lt;/code&gt; , соединение с клиентом является постоянным и не закрывается при обслуживании запроса.</target>
        </trans-unit>
        <trans-unit id="266f94acd800ab98dff47ae268bf41f76026f4c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; - One worker dedicated to 'set-requests' and one (main) worker for all other requests ('get-request' and notifications).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68dc96fabb05a1ec872239b9f02a798478ea221e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; for the first instance on the hardware; &lt;code&gt;false&lt;/code&gt; for the other instances</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; для первого экземпляра на оборудовании; &lt;code&gt;false&lt;/code&gt; для других экземпляров</target>
        </trans-unit>
        <trans-unit id="bcd42de6128469ebeebe4d2e0a442e58df2a9153" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if a trace message is to be emitted</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; если должно быть отправлено сообщение трассировки</target>
        </trans-unit>
        <trans-unit id="18353e8e2daaa13a6662f880ec1a6fc78bf06729" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if the table was a named table when dumped to file, otherwise &lt;code&gt;false&lt;/code&gt;. Notice that when a named table is loaded from a file, there cannot exist a table in the system with the same name.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; если таблица была именованной таблицей при выгрузке в файл, в противном случае - &lt;code&gt;false&lt;/code&gt; . Обратите внимание, что когда именованная таблица загружается из файла, в системе не может существовать таблица с тем же именем.</target>
        </trans-unit>
        <trans-unit id="0d46dfb8b7176946e3f27d76b5504add1699406b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if the user and password is valid</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; если пользователь и пароль действительны</target>
        </trans-unit>
        <trans-unit id="92d28165d23be12cc717a42800844c089578854a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;truncate/1,2&lt;/code&gt; are used for internally formatted logs, and &lt;code&gt;btruncate/2&lt;/code&gt; for externally formatted logs.</source>
          <target state="translated">&lt;code&gt;truncate/1,2&lt;/code&gt; используются для журналов внутреннего формата, а &lt;code&gt;btruncate/2&lt;/code&gt; - для журналов внешнего форматирования.</target>
        </trans-unit>
        <trans-unit id="6a41d2be1281c8bd4e1513eda91300d754600b5b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;truncate/1&lt;/code&gt; is used for both internally and externally formatted logs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c9eb704a0b90a81182c0cd97d4e79a11f4d27bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;truncate/2&lt;/code&gt; is used for internally formatted logs, and &lt;code&gt;btruncate/2&lt;/code&gt; for externally formatted logs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65e2f1b064d5d8a041a038dab805f66418240fa4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;truncated_binary_file&lt;/code&gt;. Truncated binary in file.</source>
          <target state="translated">&lt;code&gt;truncated_binary_file&lt;/code&gt; . Усеченный двоичный файл в файле.</target>
        </trans-unit>
        <trans-unit id="a2800d67bb959087ca950bfd92b799a449159b00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ttb:write_trace_info(mykey,1)&lt;/code&gt; gives the entry &lt;code&gt;{mykey,[1]}&lt;/code&gt; in &lt;code&gt;TI&lt;/code&gt;. Another call, &lt;code&gt;ttb:write_trace_info(mykey,2)&lt;/code&gt;, changes this entry to &lt;code&gt;{mykey,[1,2]}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ttb:write_trace_info(mykey,1)&lt;/code&gt; дает запись &lt;code&gt;{mykey,[1]}&lt;/code&gt; в &lt;code&gt;TI&lt;/code&gt; . Другой вызов, &lt;code&gt;ttb:write_trace_info(mykey,2)&lt;/code&gt; , изменяет эту запись на &lt;code&gt;{mykey,[1,2]}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fbe86a3e39af79c31af9c34bbdc911f8979ef613" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ttb&lt;/code&gt; tries to fetch all logs from a reconnecting node before reinitializing the trace. This must finish within &lt;code&gt;FetchTimeout&lt;/code&gt; milliseconds or is aborted.</source>
          <target state="translated">&lt;code&gt;ttb&lt;/code&gt; пытается получить все журналы с переподключенного узла перед повторной инициализацией трассировки. Это должно завершиться в &lt;code&gt;FetchTimeout&lt;/code&gt; миллисекунд FetchTimeout или будет прервано.</target>
        </trans-unit>
        <trans-unit id="07485964c7083135b80f0251c1e7c8f4eed4cc23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tty&lt;/code&gt; is a simple command-line interface program where keystrokes are collected and interpreted. Completed lines are sent to the shell for interpretation. A simple history mechanism saves previous lines, which can be edited before sending them to the shell. &lt;code&gt;tty&lt;/code&gt; is started when Erlang is started with the following command:</source>
          <target state="translated">&lt;code&gt;tty&lt;/code&gt; - это простая программа с интерфейсом командной строки, в которой собираются и интерпретируются нажатия клавиш. Завершенные строки отправляются в оболочку для интерпретации. Простой механизм истории сохраняет предыдущие строки, которые можно редактировать перед отправкой их оболочке. &lt;code&gt;tty&lt;/code&gt; запускается при запуске Erlang следующей командой:</target>
        </trans-unit>
        <trans-unit id="dc0fd749433c43d16eea6a7af06feb6b514bf62c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tty&lt;/code&gt; operates in one of two modes:</source>
          <target state="translated">&lt;code&gt;tty&lt;/code&gt; работает в одном из двух режимов:</target>
        </trans-unit>
        <trans-unit id="4ebbadf712e89a804230b6027f7071e95aa1a651" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tuple&lt;/code&gt; is an Erlang term containing at least &lt;code&gt;position&lt;/code&gt; elements.</source>
          <target state="translated">&lt;code&gt;tuple&lt;/code&gt; - это термин Эрланга, содержащий как минимум элементы &lt;code&gt;position&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8ac60446a44e23f2aded6a0ede9778504bc5ab3f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;type : string&lt;/code&gt; :: &lt;code&gt;&quot;in&quot; | &quot;out&quot; | &quot;in_exiting&quot; | &quot;out_exiting&quot; | &quot;out_exited&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;type : string&lt;/code&gt; :: &lt;code&gt;&quot;in&quot; | &quot;out&quot; | &quot;in_exiting&quot; | &quot;out_exiting&quot; | &quot;out_exited&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3c24477fe9a2d11b7159a80dc5da800a125a462b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;type : string&lt;/code&gt; :: &lt;code&gt;&quot;link&quot; | &quot;unlink&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;type : string&lt;/code&gt; :: &lt;code&gt;&quot;link&quot; | &quot;unlink&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="585f31dcada28f11d22dfcf574600e99be503b20" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;type : string&lt;/code&gt; :: &lt;code&gt;&quot;register&quot; | &quot;unregister&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;type : string&lt;/code&gt; :: &lt;code&gt;&quot;register&quot; | &quot;unregister&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dbd1fa42caee07cfdde1d1c49e940873f3ce79f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;type : string&lt;/code&gt; :: Carrier type. Ex. &lt;code&gt;&quot;ets_alloc&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;type : string&lt;/code&gt; :: Тип носителя. Ex. &lt;code&gt;&quot;ets_alloc&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8c2394e962673b95d9475b1dae44e101144cec8c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;type&lt;/code&gt; identifies the type of message, one of the following:</source>
          <target state="translated">&lt;code&gt;type&lt;/code&gt; определяет тип сообщения, одно из следующих:</target>
        </trans-unit>
        <trans-unit id="a9fee4dc8a11ab4ba4394477e638a046f78f7a68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;type&lt;/code&gt; specifies if the child process is a supervisor or a worker.</source>
          <target state="translated">&lt;code&gt;type&lt;/code&gt; указывает, является ли дочерний процесс супервизором или исполнителем.</target>
        </trans-unit>
        <trans-unit id="22dd522a38e2274ef6b8f27311bc2adfb1336d24" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;type&lt;/code&gt;. Each table can have &lt;code&gt;set&lt;/code&gt;, &lt;code&gt;ordered_set&lt;/code&gt;, or &lt;code&gt;bag&lt;/code&gt; semantics. Notice that currently &lt;code&gt;ordered_set&lt;/code&gt; is not supported for &lt;code&gt;disc_only_copies&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;type&lt;/code&gt; . Каждая таблица может иметь семантику &lt;code&gt;set&lt;/code&gt; , &lt;code&gt;ordered_set&lt;/code&gt; или &lt;code&gt;bag&lt;/code&gt; . Обратите внимание, что в настоящее время &lt;code&gt;ordered_set&lt;/code&gt; не поддерживается для &lt;code&gt;disc_only_copies&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d660f599077edf38f61598abfd3239c3295f9d5c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;type&lt;/code&gt;. Returns the table type, which is &lt;code&gt;bag&lt;/code&gt;, &lt;code&gt;set&lt;/code&gt;, or &lt;code&gt;ordered_set&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;type&lt;/code&gt; . Возвращает тип таблицы: &lt;code&gt;bag&lt;/code&gt; , &lt;code&gt;set&lt;/code&gt; или &lt;code&gt;ordered_set&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7ebc80dc48512a3e02eaab7ec3b3650ed4c64e8c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;u&lt;/code&gt; - An untagged integer that fits in a machine word.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08cf0250b4fcdd0b41c8a8196a1d4fd61bf3eb43" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;u&lt;/code&gt; - Construct an untagged integer. The default value is 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe8621aa1cd927f87ae8fe07e4280a0bdad14ba0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;u&lt;/code&gt; - Untagged integer that fits in a machine word. It is used for many different purposes, such as the number of live registers in &lt;code&gt;test_heap/2&lt;/code&gt;, as a reference to the export for &lt;code&gt;call_ext/2&lt;/code&gt;, and as the flags operand for binary syntax instructions. When the generic instruction is translated to a specific instruction, the type for the operand in the specific operation will tell the loader how to treat the operand.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e39642073d12eb94cdb99478d27b4a78a18bb1d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unblock&lt;/code&gt; - Unblock the transport. &lt;strong&gt;Optional&lt;/strong&gt;</source>
          <target state="translated">&lt;code&gt;unblock&lt;/code&gt; - Разблокировать транспорт. &lt;strong&gt;По желанию&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="423ee82a325c45d708f6b53cf08cd2d53eb25179" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unblock_user/2&lt;/code&gt;, &lt;code&gt;unblock_user/3&lt;/code&gt;, and &lt;code&gt;unblock_user/4&lt;/code&gt; each removes the user &lt;code&gt;User&lt;/code&gt; from the list of blocked users for &lt;code&gt;Port&lt;/code&gt; (and &lt;code&gt;Dir&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;unblock_user/2&lt;/code&gt; , &lt;code&gt;unblock_user/3&lt;/code&gt; и &lt;code&gt;unblock_user/4&lt;/code&gt; каждый удаляет пользователя &lt;code&gt;User&lt;/code&gt; из списка заблокированных пользователей для &lt;code&gt;Port&lt;/code&gt; (и &lt;code&gt;Dir&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="cb221b0bddf75be5af7a142e437af28721cb6a0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unbound&lt;/code&gt; - Schedulers are not bound to logical processors, that is, the operating system decides where the scheduler threads execute, and when to migrate them. This is the default.</source>
          <target state="translated">&lt;code&gt;unbound&lt;/code&gt; - планировщики не привязаны к логическим процессорам, то есть операционная система решает, где выполнять потоки планировщика и когда их переносить. Это значение по умолчанию.</target>
        </trans-unit>
        <trans-unit id="68855104bc975265734d17adc4b9717a8921c013" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;undefined&lt;/code&gt;, the second element is a sorted list of calls to undefined functions;</source>
          <target state="translated">&lt;code&gt;undefined&lt;/code&gt; , второй элемент представляет собой отсортированный список вызовов неопределенных функций;</target>
        </trans-unit>
        <trans-unit id="63e0a1a24e1e12c495e661fe3a4d1ed5aad283f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;undefined&lt;/code&gt;, the second element is a sorted list of undefined functions.</source>
          <target state="translated">&lt;code&gt;undefined&lt;/code&gt; , второй элемент - это отсортированный список неопределенных функций.</target>
        </trans-unit>
        <trans-unit id="67836bf0fad080fbc4c92ed4d6e98f6e94d13637" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;undoFailed | genErr&lt;/code&gt;(SNMPv2)</source>
          <target state="translated">&lt;code&gt;undoFailed | genErr&lt;/code&gt; (SNMPv2)</target>
        </trans-unit>
        <trans-unit id="0a528517e33de5358c07ca06e3eeaae09a73f9a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unload&lt;/code&gt; is called when the module code that the NIF library belongs to is purged as old. New code of the same module may or may not exist.</source>
          <target state="translated">&lt;code&gt;unload&lt;/code&gt; вызывается, когда код модуля, которому принадлежит библиотека NIF, очищается как старый. Новый код того же модуля может существовать, а может и не существовать.</target>
        </trans-unit>
        <trans-unit id="a6bdf36f78b9fdab5ef03090b3d26c7df338dd95" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unset_env/2&lt;/code&gt; uses the standard &lt;code&gt;gen_server&lt;/code&gt; time-out value (5000 ms). Option &lt;code&gt;timeout&lt;/code&gt; can be specified if another time-out value is useful, for example, in situations where the application controller is heavily loaded.</source>
          <target state="translated">&lt;code&gt;unset_env/2&lt;/code&gt; использует стандарт &lt;code&gt;gen_server&lt;/code&gt; значение тайм-аута (5000 мс). Параметр &lt;code&gt;timeout&lt;/code&gt; может быть указан, если другое значение тайм-аута полезно, например, в ситуациях, когда контроллер приложения сильно загружен.</target>
        </trans-unit>
        <trans-unit id="0d80596c220fdf814c2817b3df936059e9e5a099" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unset_env/3&lt;/code&gt; also allows the persistent option to be passed (see &lt;code&gt;&lt;a href=&quot;#set_env-4&quot;&gt;set_env/4&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;unset_env/3&lt;/code&gt; также позволяет передавать постоянный параметр (см. &lt;code&gt;&lt;a href=&quot;#set_env-4&quot;&gt;set_env/4&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="54e1b9dc998c783a6780fb73f8b3e07324c6fe3a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unused&lt;/code&gt;, the second element is a sorted list of unused local functions.</source>
          <target state="translated">&lt;code&gt;unused&lt;/code&gt; , второй элемент представляет собой отсортированный список неиспользуемых локальных функций.</target>
        </trans-unit>
        <trans-unit id="f36d1e2dc14b39425abbb472208bfa0155ae6ba1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unzip/1&lt;/code&gt; extracts all files from a zip archive.</source>
          <target state="translated">&lt;code&gt;unzip/1&lt;/code&gt; извлекает все файлы из zip-архива.</target>
        </trans-unit>
        <trans-unit id="cc113f5d9884c328d9e7c3406dd9639241a1f488" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unzip/2&lt;/code&gt; provides options to extract some files, and more.</source>
          <target state="translated">&lt;code&gt;unzip/2&lt;/code&gt; предоставляет опции для извлечения некоторых файлов и многого другого.</target>
        </trans-unit>
        <trans-unit id="0ab2ae7e637a1878f50560a2fa78fba87debfc0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;update&lt;/code&gt; with argument &lt;code&gt;supervisor&lt;/code&gt; is used when changing the start specification of a supervisor.</source>
          <target state="translated">&lt;code&gt;update&lt;/code&gt; с &lt;code&gt;supervisor&lt;/code&gt; аргументов используется при изменении стартовой спецификации супервизора.</target>
        </trans-unit>
        <trans-unit id="0dcf3ccda976ca935ff42a0bd5537ac0500bd082" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;update&lt;/code&gt; with argument &lt;code&gt;supervisor&lt;/code&gt; is used when changing the start specification of a supervisor. See &lt;code&gt;&lt;a href=&quot;appup_cookbook#sup&quot;&gt;Appup Cookbook&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;update&lt;/code&gt; с &lt;code&gt;supervisor&lt;/code&gt; аргументов используется при изменении стартовой спецификации супервизора. См. &lt;code&gt;&lt;a href=&quot;appup_cookbook#sup&quot;&gt;Appup Cookbook&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9c670138846275c9f49bf8cf1cd5a56046082505" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;update&lt;/code&gt; with argument &lt;code&gt;{advanced,Extra}&lt;/code&gt; is used when changing the internal state of a behaviour as described above. It causes behaviour processes to call the callback function &lt;code&gt;code_change&lt;/code&gt;, passing the term &lt;code&gt;Extra&lt;/code&gt; and some other information as arguments. See the manual pages for the respective behaviours and &lt;code&gt;&lt;a href=&quot;appup_cookbook#int_state&quot;&gt;Appup Cookbook&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;update&lt;/code&gt; с аргументом &lt;code&gt;{advanced,Extra}&lt;/code&gt; используется при изменении внутреннего состояния поведения, как описано выше. Он заставляет поведенческие процессы вызывать функцию обратного вызова &lt;code&gt;code_change&lt;/code&gt; , передавая термин &lt;code&gt;Extra&lt;/code&gt; и некоторую другую информацию в качестве аргументов. См. Страницы руководства для получения информации о соответствующем поведении и &lt;code&gt;&lt;a href=&quot;appup_cookbook#int_state&quot;&gt;Appup Cookbook&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d4c8e77e2a3b795490a289f04ccc42ccc8e8b108" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;update_password/5&lt;/code&gt; and &lt;code&gt;update_password/6&lt;/code&gt; each updates &lt;code&gt;AuthAccessPassword&lt;/code&gt; for the specified directory. If &lt;code&gt;NewPassword&lt;/code&gt; is equal to &quot;NoPassword&quot;, no password is required to change authorisation data. If &lt;code&gt;NewPassword&lt;/code&gt; is equal to &quot;DummyPassword&quot;, no changes can be done without changing the password first.</source>
          <target state="translated">&lt;code&gt;update_password/5&lt;/code&gt; и &lt;code&gt;update_password/6&lt;/code&gt; обновляют &lt;code&gt;AuthAccessPassword&lt;/code&gt; для указанного каталога. Если &lt;code&gt;NewPassword&lt;/code&gt; равен &amp;laquo;NoPassword&amp;raquo;, пароль для изменения данных авторизации не требуется. Если &lt;code&gt;NewPassword&lt;/code&gt; равен &amp;laquo;DummyPassword&amp;raquo;, никакие изменения не могут быть сделаны без предварительной смены пароля.</target>
        </trans-unit>
        <trans-unit id="4bf07b2d071383294ff8367d439054c4a5355c3c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;upgrade&lt;/code&gt; is called when the NIF library is loaded and there is old code of this module with a loaded NIF library.</source>
          <target state="translated">&lt;code&gt;upgrade&lt;/code&gt; вызывается при загрузке библиотеки NIF и наличии старого кода этого модуля с загруженной библиотекой NIF.</target>
        </trans-unit>
        <trans-unit id="9877c5fe670c390677a05dcd0f0befd190474c2c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;url() = string()&lt;/code&gt; syntax according to the URI definition in &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc2396.txt&quot;&gt;RFC 2396&lt;/a&gt;&lt;/code&gt;, for example &lt;code&gt;&quot;http://www.erlang.org&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;url() = string()&lt;/code&gt; синтаксис согласно определению URI в &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc2396.txt&quot;&gt;RFC 2396&lt;/a&gt;&lt;/code&gt; , например &lt;code&gt;&quot;http://www.erlang.org&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="57f37f3bdacc119aaec6f52f5f64f0c4f151b5fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;url() = string()&lt;/code&gt; syntax according to the URI definition in &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc3986.txt&quot;&gt;RFC 3986&lt;/a&gt;&lt;/code&gt;, for example &lt;code&gt;&quot;http://www.erlang.org&quot;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="944f40719b13217b07ac5a121f67327f27aeb1f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;url() = string()&lt;/code&gt; syntax according to the URI definition in &lt;code&gt;&lt;a href=&quot;https://www.ietf.org/rfc/rfc3986.txt&quot;&gt;RFC 3986&lt;/a&gt;&lt;/code&gt;, for example &lt;code&gt;&quot;http://www.erlang.org&quot;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02ff37f233e13e3cf91eb9088f454693b539fcb3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;use_dir&lt;/code&gt; can be determined even before &lt;code&gt;Mnesia&lt;/code&gt; is started.</source>
          <target state="translated">&lt;code&gt;use_dir&lt;/code&gt; можно определить еще до запуска &lt;code&gt;Mnesia&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="49d3565fb902c136f502da8d51ef1b3741014827" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;use_dir&lt;/code&gt;. Returns a boolean that indicates if the Mnesia directory is used or not. Can be started even if Mnesia is not yet running.</source>
          <target state="translated">&lt;code&gt;use_dir&lt;/code&gt; . Возвращает логическое значение, указывающее, используется ли каталог Mnesia или нет. Может быть запущен, даже если Mnesia еще не запущена.</target>
        </trans-unit>
        <trans-unit id="eab548437e6b6765ecfed12484803bba2ec9120f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;user&lt;/code&gt; - Same as &lt;code&gt;{user, integer()}&lt;/code&gt;, except that the default time, 15000 milli-seconds, is used.</source>
          <target state="translated">&lt;code&gt;user&lt;/code&gt; - То же, что и &lt;code&gt;{user, integer()}&lt;/code&gt; , за исключением того, что используется время по умолчанию, 15000 миллисекунд.</target>
        </trans-unit>
        <trans-unit id="06dc83804965c938bd881185af62fddd57a33b25" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;user_properties&lt;/code&gt;. Returns the user-associated table properties of the table. It is a list of the stored property records.</source>
          <target state="translated">&lt;code&gt;user_properties&lt;/code&gt; . Возвращает связанные с пользователем свойства таблицы. Это список сохраненных записей свойств.</target>
        </trans-unit>
        <trans-unit id="8bd1cb0e12bb3d7f8ed7b05354e7cf0b36fa0b22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;userdata&lt;/code&gt;, see &lt;code&gt;&lt;a href=&quot;#info_function&quot;&gt;Test Case Information Function&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;userdata&lt;/code&gt; , см. &lt;code&gt;&lt;a href=&quot;#info_function&quot;&gt;Test Case Information Function&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4742a9e95696ac56e7fc3feeda4f22f35508fb81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;users_entry(UserId)&lt;/code&gt; translates to the following call: &lt;code&gt;users_entry(UserId, snmpm_user_default)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;users_entry(UserId)&lt;/code&gt; преобразуется в следующий вызов: &lt;code&gt;users_entry(UserId, snmpm_user_default)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6435fceb839d27af4e14ec590fb387c23e41c7ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;users_entry(UserId, UserMod)&lt;/code&gt; translates to the following call: &lt;code&gt;users_entry(UserId, UserMod, undefined)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;users_entry(UserId, UserMod)&lt;/code&gt; преобразуется в следующий вызов: &lt;code&gt;users_entry(UserId, UserMod, undefined)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6c182bac5e5dc2aa902d528e89a94ffa68f92eb7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;usm.conf&lt;/code&gt;: see &lt;code&gt;&lt;a href=&quot;#usm&quot;&gt;Security data for USM&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;usm.conf&lt;/code&gt; : см &lt;code&gt;&lt;a href=&quot;#usm&quot;&gt;Security data for USM&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2effba39a2bdbac5661cb95841c2d8bca14c6809" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;usm_entry/1&lt;/code&gt; translates to the following call: &lt;code&gt;usm_entry(&quot;initial&quot;, &quot;initial&quot;, zeroDotZero, usmNoAuthProtocol, &quot;&quot;, &quot;&quot;, usmNoPrivProtocol, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;usm_entry/1&lt;/code&gt; преобразуется в следующий вызов: &lt;code&gt;usm_entry(&quot;initial&quot;, &quot;initial&quot;, zeroDotZero, usmNoAuthProtocol, &quot;&quot;, &quot;&quot;, usmNoPrivProtocol, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0df82ac76d269f95a5929d4b0fc6316f680307cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v&lt;/code&gt; - Arity value. Only used internally in the loader.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a02b9268b15ed77101380b6bd5fd4260e828103" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;vacm.conf&lt;/code&gt;: see &lt;code&gt;&lt;a href=&quot;#vacm&quot;&gt;MIB Views for VACM&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;vacm.conf&lt;/code&gt; : см. &lt;code&gt;&lt;a href=&quot;#vacm&quot;&gt;MIB Views for VACM&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7e03dfee301b3b6d50c0ee51604a2f577049e425" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;vacm_vtf_entry/2&lt;/code&gt; translates to the following call: &lt;code&gt;vacm_vtf_entry(ViewIndex, ViewSubtree, included, null)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;vacm_vtf_entry/2&lt;/code&gt; преобразуется в следующий вызов: &lt;code&gt;vacm_vtf_entry(ViewIndex, ViewSubtree, included, null)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="073cac5e7c8a11760b760cc2926fa3def62a9b76" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt; is a &lt;code&gt;NULL&lt;/code&gt;-terminated string containing the new value of the environment variable.</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; - это строка с окончанием &lt;code&gt;NULL&lt;/code&gt; , содержащая новое значение переменной среды.</target>
        </trans-unit>
        <trans-unit id="9d7f39974b19c2176ca01d8f5adf6a53e1a68376" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;verbose&lt;/code&gt;, with initial default value &lt;code&gt;false&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;verbose&lt;/code&gt; , с начальным значением по умолчанию &lt;code&gt;false&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="3cb5607c038d28e092066a66f90ec1d52f18831e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;verify_fun&lt;/code&gt; (write as &lt;code&gt;{Module, Function, InitialUserState}&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;verify_fun&lt;/code&gt; (напишите как &lt;code&gt;{Module, Function, InitialUserState}&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="1999293cc88462714e2740cfd2167d251651472f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;version&lt;/code&gt;, the application's version as a list of numbers. For instance, the directory &quot;kernel-2.6&quot; results in the application name &lt;code&gt;kernel&lt;/code&gt; and the application version [2,6]; &quot;kernel&quot; yields the name &lt;code&gt;kernel&lt;/code&gt; and the version [].</source>
          <target state="translated">&lt;code&gt;version&lt;/code&gt; , версия приложения в виде списка номеров. Например, каталог &quot;kernel-2.6&quot; приводит к имени приложения &lt;code&gt;kernel&lt;/code&gt; и версии приложения [2,6]; &quot;ядро&quot; дает имя &lt;code&gt;kernel&lt;/code&gt; и версию [].</target>
        </trans-unit>
        <trans-unit id="e720fd4c485c4274afccddb66162b94247d7d9cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;version&lt;/code&gt;. Returns the current version number of Mnesia.</source>
          <target state="translated">&lt;code&gt;version&lt;/code&gt; . Возвращает номер текущей версии Mnesia.</target>
        </trans-unit>
        <trans-unit id="725edffef8fa84eb7cd7ee10016f6293ff990de7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;version&lt;/code&gt;. Returns the current version of the table definition. The table version is incremented when the table definition is changed. The table definition can be incremented directly when it has been changed in a schema transaction, or when a committed table definition is merged with table definitions from other nodes during startup.</source>
          <target state="translated">&lt;code&gt;version&lt;/code&gt; . Возвращает текущую версию определения таблицы. Версия таблицы увеличивается при изменении определения таблицы. Определение таблицы может быть увеличено напрямую, когда оно было изменено в транзакции схемы или когда принятое определение таблицы объединяется с определениями таблиц из других узлов во время запуска.</target>
        </trans-unit>
        <trans-unit id="5c9f5faf74adb2bbb2ed57c5511d3a10540cd5b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;visible&lt;/code&gt; - &lt;code&gt;erlang:nodes(visible)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;visible&lt;/code&gt; - &lt;code&gt;erlang:nodes(visible)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1e0b575d9e6c3d8c224a07439118a2000b402bd2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;void erts_schedule_thr_prgr_later_op(void (*funcp)(void *), void *argp, ErtsThrPrgrLaterOp *memp)&lt;/code&gt; - Schedule a call to &lt;code&gt;funcp&lt;/code&gt;. The call &lt;code&gt;(*funcp)(argp)&lt;/code&gt; will be executed when thread progress has been made since the call to &lt;code&gt;erts_schedule_thr_prgr_later_op()&lt;/code&gt; was made.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1bb7edad735c725b503f21c83d2697b6938ae7e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;void erts_thr_progress_unmanaged_continue(ErtsThrPrgrDelayHandle handle)&lt;/code&gt; - Let thread progress continue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7a9fca08b242db4dbccffa4bc65e2560ce4ce1e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;void erts_thr_progress_wakeup(ErtsSchedulerData *esdp, ErtsThrPrgrVal val)&lt;/code&gt; - Request wake up. The calling thread will be woken when thread progress has reached val.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16b4f31a998fa85f82c497b3fb589c1499e35404" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;vsn&lt;/code&gt; - Version number, a string. Defaults to &quot;&quot;.</source>
          <target state="translated">&lt;code&gt;vsn&lt;/code&gt; - Номер версии, строка. По умолчанию &quot;&quot;.</target>
        </trans-unit>
        <trans-unit id="a61b418153ad02dd256a4936a21ae1935d19371a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;w&lt;/code&gt; means that a warning is sent to the &lt;code&gt;error_logger&lt;/code&gt; whenever a wrongly encoded filename is &quot;skipped&quot; in directory listings. &lt;code&gt;w&lt;/code&gt; is the default.</source>
          <target state="translated">&lt;code&gt;w&lt;/code&gt; означает, что &lt;code&gt;error_logger&lt;/code&gt; отправляет предупреждение всякий раз, когда неправильно закодированное имя файла &amp;laquo;пропускается&amp;raquo; в списках каталогов. &lt;code&gt;w&lt;/code&gt; - значение по умолчанию.</target>
        </trans-unit>
        <trans-unit id="93e1ec4a869cdc774ffcf94e406254568b25ee6c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;w&lt;/code&gt; means that a warning is sent to the &lt;code&gt;error_logger&lt;/code&gt; whenever a wrongly encoded filename is &quot;skipped&quot; in directory listings. This is the default.</source>
          <target state="translated">&lt;code&gt;w&lt;/code&gt; означает, что &lt;code&gt;error_logger&lt;/code&gt; отправляет предупреждение всякий раз, когда неправильно закодированное имя файла &amp;laquo;пропускается&amp;raquo; в списках каталогов. Это значение по умолчанию.</target>
        </trans-unit>
        <trans-unit id="0ba27f55a23f1465f57ce405adef9c153873bf6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;waiting&lt;/code&gt; (for a message)</source>
          <target state="translated">&lt;code&gt;waiting&lt;/code&gt; (для сообщения)</target>
        </trans-unit>
        <trans-unit id="56c42310a3adf0203bb9d7775e938a815c481570" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;waiting&lt;/code&gt; - The process is waiting at a &lt;code&gt;receive&lt;/code&gt;. &lt;code&gt;Info={}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;waiting&lt;/code&gt; - процесс ожидает &lt;code&gt;receive&lt;/code&gt; . &lt;code&gt;Info={}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d521421c6c6b4d5cfbc722ae90cdec142a1ea744" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;warnings&lt;/code&gt;, with initial default value &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;warnings&lt;/code&gt; , с начальным значением по умолчанию &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cc3f6825839013d334b382fc8f4d2c9fe25b66a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;where_to_read&lt;/code&gt;. Returns the node where the table can be read. If value &lt;code&gt;nowhere&lt;/code&gt; is returned, either the table is not loaded or it resides at a remote node that is not running.</source>
          <target state="translated">&lt;code&gt;where_to_read&lt;/code&gt; . Возвращает узел, на котором можно прочитать таблицу. Если значение &lt;code&gt;nowhere&lt;/code&gt; не возвращается, таблица либо не загружена, либо находится на удаленном узле, который не работает.</target>
        </trans-unit>
        <trans-unit id="901723e62a25962c4a0f86ef98c81ff41aaa4e1a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;where_to_write&lt;/code&gt;. Returns a list of the nodes that currently hold an active replica of the table.</source>
          <target state="translated">&lt;code&gt;where_to_write&lt;/code&gt; . Возвращает список узлов, которые в настоящее время содержат активную реплику таблицы.</target>
        </trans-unit>
        <trans-unit id="33a6e89a063b3c48d127b9caa3a09c282600833d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;which_applications/0&lt;/code&gt; uses the standard &lt;code&gt;gen_server&lt;/code&gt; time-out value (5000 ms). A &lt;code&gt;Timeout&lt;/code&gt; argument can be specified if another time-out value is useful, for example, in situations where the application controller is heavily loaded.</source>
          <target state="translated">&lt;code&gt;which_applications/0&lt;/code&gt; использует стандарт &lt;code&gt;gen_server&lt;/code&gt; значение тайм-аута (5000 мс). &lt;code&gt;Timeout&lt;/code&gt; аргумент может быть определен , если другое значение времени ожидания является полезным, например, в ситуациях , когда контроллер приложения сильно загружен.</target>
        </trans-unit>
        <trans-unit id="4e3e6f7db7c74274af9a1913d1ef4ed5410ac388" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;width&lt;/code&gt; is the field width.</source>
          <target state="translated">&lt;code&gt;width&lt;/code&gt; - ширина поля.</target>
        </trans-unit>
        <trans-unit id="c1b9c1eb6b0db68c59c0d28ea745a885fec2a2e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;wild_pattern&lt;/code&gt;. Returns a structure that can be given to the various match functions for a certain table. A record tuple is where all record fields have value &lt;code&gt;'_'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;wild_pattern&lt;/code&gt; . Возвращает структуру, которая может быть присвоена различным функциям сопоставления для определенной таблицы. В кортеже записи все поля записи имеют значение &lt;code&gt;'_'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a3b2f203f574e7b0119cebca9fa81660715a611e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;win32reg&lt;/code&gt; supports storing of the following types:</source>
          <target state="translated">&lt;code&gt;win32reg&lt;/code&gt; поддерживает хранение следующих типов:</target>
        </trans-unit>
        <trans-unit id="f509372c189110635eb8dc8b6f332817e7d2689b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;wordsize 32|64&lt;/code&gt; - Defines the word size. Default is 32.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6895e0b101bb33a164e6b5cbf8dccbfa9b543c30" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;workers&lt;/code&gt; - The count of all children marked as &lt;code&gt;child_type = worker&lt;/code&gt; in the specification list, regardless if the child process is still alive.</source>
          <target state="translated">&lt;code&gt;workers&lt;/code&gt; - Количество всех детей , помеченных как &lt;code&gt;child_type = worker&lt;/code&gt; в списке спецификаций, независимо , если дочерний процесс все еще жив.</target>
        </trans-unit>
        <trans-unit id="bc2b9201f92d5072210e29674ade6606a1e5b001" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;wxCalendarCtrl:enableYearChange/1&lt;/code&gt; (not available in wxWidgets-2.9 and later)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c99919e9bafd280daaf1b9599027cb98706a1e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;wxCalendarCtrl:enableYearChange/2&lt;/code&gt; (not available in wxWidgets-2.9 and later)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dce8836f23608dbf80427151fca96240aa79e032" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;wxClientDC:new/0&lt;/code&gt; (not available in wxWidgets-2.9 and later)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a82b6487cc5fe08ea42ba55fd55e88b0df34731" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;wxCursor:new/3&lt;/code&gt; (not available in wxWidgets-2.9 and later)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="784b7666077200096b759c3059024ca756910012" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;wxCursor:new/4&lt;/code&gt; (not available in wxWidgets-2.9 and later)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6042f6b02a1e5ffa0a8bd79babd7439008ea61aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;wxDC:computeScaleAndOrigin/1&lt;/code&gt; (not available in wxWidgets-2.9 and later)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="197513fcef89e49065afdcd45ef1aac569501021" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;wxGraphicsRenderer:createLinearGradientBrush/7&lt;/code&gt; (not available in wxWidgets-2.9 and later)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cc9326a94e583599137802d115fca4902f01258" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;wxGraphicsRenderer:createRadialGradientBrush/8&lt;/code&gt; (not available in wxWidgets-2.9 and later)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb4aab0fd0809f7763a25de51857da13b3d21fc2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;wxGridCellEditor:endEdit/4&lt;/code&gt; (not available in wxWidgets-2.9 and later)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92036594f2e9011aeddb306895531af536207b2f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;wxGridCellEditor:paintBackground/3&lt;/code&gt; (not available in wxWidgets-2.9 and later)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90f6b2da4a9f25f281d6477c5aef03d15b6c5d95" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;wxIdleEvent:canSend/1&lt;/code&gt; (not available in wxWidgets-2.9 and later)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c996a6d72559ef9d856c7ee10ab1ce7e6218bba6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;wxMDIClientWindow:new/1&lt;/code&gt; (not available in wxWidgets-2.9 and later)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcc67c2eb467e0e359f1a4b8a8812d094326405b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;wxMDIClientWindow:new/2&lt;/code&gt; (not available in wxWidgets-2.9 and later)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eed9e7b6fcb5ff4afcd41b721ec2f440844f2091" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;wxPaintDC:new/0&lt;/code&gt; (not available in wxWidgets-2.9 and later)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ed411a512024548098a1bddb9e5622a0455b1f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;wxPostScriptDC:getResolution/0&lt;/code&gt; (not available in wxWidgets-2.9 and later)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a353696879da15a4ce1870b080573a1a6750b1b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;wxPostScriptDC:setResolution/1&lt;/code&gt; (not available in wxWidgets-2.9 and later)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="735321c8d46879ad38b278fad274ca5abf64c723" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;wxWindowDC:new/0&lt;/code&gt; (not available in wxWidgets-2.9 and later)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9ef84109deb08beaabcc5a00c130fd8eeff8151" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - X register.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a2acf1053f174a35264b12f39bb493a6684601d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - X register. The default value is 1023. That makes &lt;code&gt;x&lt;/code&gt; convenient to use as a temporary X register.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fab91c8c8f485a820bcf0799ac7040c6ecb3575" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; - X register. Will be loaded as a byte offset to the X register relative to the base of X register array. (Can be packed with other operands.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b18d65fbb4af8e8bfaebe6445fff22b60a0fc38c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; is buffer obtained from &lt;code&gt;ei_x_new&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; - буфер, полученный из &lt;code&gt;ei_x_new&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e8df1ee779239343d32dfcea45be1e5d3db1ef43" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; points to the dynamic buffer that receives the result. For &lt;code&gt;ei_rpc()&lt;/code&gt; this is the result without the version magic number. For &lt;code&gt;ei_rpc_from()&lt;/code&gt; the result returns a version magic number and a 2-tuple &lt;code&gt;{rex,Reply}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; указывает на динамический буфер, который получает результат. Для &lt;code&gt;ei_rpc()&lt;/code&gt; это результат без магического номера версии. Для &lt;code&gt;ei_rpc_from()&lt;/code&gt; результат возвращает магический номер версии и кортеж из двух частей &lt;code&gt;{rex,Reply}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="69cc9a0b7cc31e8861235d424fa4293afd8c894b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xb((tmp_packed1&amp;gt;&amp;gt;BEAM_TIGHT_SHIFT)) = xb(tmp_packed1&amp;amp;BEAM_TIGHT_MASK);&lt;/code&gt; copies the source to the destination. (For a 64-bit architecture, &lt;code&gt;BEAM_TIGHT_SHIFT&lt;/code&gt; is 16 and &lt;code&gt;BEAM_TIGHT_MASK&lt;/code&gt; is &lt;code&gt;0xFFFF&lt;/code&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d3aa72a740c073381e7266e0b67248d9d2b9717" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xb(BeamExtraData(I[0])) = I[1];&lt;/code&gt; is the expansion of &lt;code&gt;$Dst = $Src&lt;/code&gt;. &lt;code&gt;BeamExtraData()&lt;/code&gt; is a macro that will extract the upper 32 bits from the instruction word. In this example, it will return 40 which is the byte offset for X register 5. The &lt;code&gt;xb()&lt;/code&gt; macro will cast a byte pointer to an &lt;code&gt;Eterm&lt;/code&gt; pointer and dereference it. The &lt;code&gt;I[1]&lt;/code&gt; on the right side of the &lt;code&gt;=&lt;/code&gt; fetches an Erlang term (the atom &lt;code&gt;id&lt;/code&gt; in this case).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e43baae1e033ddbdcc46d820e42d908fb1b1318a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xmerl_xs&lt;/code&gt; does not implement the entire XSLT specification but the basic functionality. For all details see the &lt;code&gt;&lt;a href=&quot;xmerl_xs&quot;&gt;reference manual&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;xmerl_xs&lt;/code&gt; реализует не всю спецификацию XSLT, а базовую функциональность. Подробности см. В &lt;code&gt;&lt;a href=&quot;xmerl_xs&quot;&gt;reference manual&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="aa8864ee1e0998dd64ca65e617a7995967c3e4da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xsltproc&lt;/code&gt; -- A command line XSLT processor.</source>
          <target state="translated">&lt;code&gt;xsltproc&lt;/code&gt; - XSLT-процессор командной строки.</target>
        </trans-unit>
        <trans-unit id="06d89e001d3aba29475ca7ab41858b08c392a728" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - Y register.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3cfb104e24c2fd7c2c93a75141b29a56384ed40" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - Y register. The default value is 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="707a9715d4900a185dea8970c11664530f539eea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; - Y register. Will be loaded as a byte offset to the Y register relative to the stack frame. (Can be packed with other operands.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fd3c4bd87d2ae6804509a008138cc156e5e98cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;zero_n&lt;/code&gt; - Perform 0/n BEAST mitigation.</source>
          <target state="translated">&lt;code&gt;zero_n&lt;/code&gt; - Выполнить устранение 0 / n BEAST.</target>
        </trans-unit>
        <trans-unit id="5db7af8d540f788f1a2740e506659b466273d5f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;zipwith(fun(X, Y) -&amp;gt; {X,Y} end, List1, List2)&lt;/code&gt; is equivalent to &lt;code&gt;zip(List1, List2)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;zipwith(fun(X, Y) -&amp;gt; {X,Y} end, List1, List2)&lt;/code&gt; эквивалентен &lt;code&gt;zip(List1, List2)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1d9843379c0cac92453b79a4bca12fe83c0d6fb9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;zipwith3(fun(X, Y, Z) -&amp;gt; {X,Y,Z} end, List1, List2, List3)&lt;/code&gt; is equivalent to &lt;code&gt;zip3(List1, List2, List3)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;zipwith3(fun(X, Y, Z) -&amp;gt; {X,Y,Z} end, List1, List2, List3)&lt;/code&gt; эквивалентен &lt;code&gt;zip3(List1, List2, List3)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1da76f45fcab9095f99b594226e633028d4474a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{19, FromPid, ToProc, Ref}&lt;/code&gt;, where &lt;code&gt;FromPid&lt;/code&gt; = monitoring process and &lt;code&gt;ToProc&lt;/code&gt; = monitored process pid or name (atom)</source>
          <target state="translated">&lt;code&gt;{19, FromPid, ToProc, Ref}&lt;/code&gt; , где &lt;code&gt;FromPid&lt;/code&gt; = процесс мониторинга, а &lt;code&gt;ToProc&lt;/code&gt; = идентификатор или имя отслеживаемого процесса (атом)</target>
        </trans-unit>
        <trans-unit id="745bab8ee964fe3e77bce95c3f60e8693a9f1bc6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{20, FromPid, ToProc, Ref}&lt;/code&gt;, where &lt;code&gt;FromPid&lt;/code&gt; = monitoring process and &lt;code&gt;ToProc&lt;/code&gt; = monitored process pid or name (atom)</source>
          <target state="translated">&lt;code&gt;{20, FromPid, ToProc, Ref}&lt;/code&gt; , где &lt;code&gt;FromPid&lt;/code&gt; = отслеживаемый процесс, а &lt;code&gt;ToProc&lt;/code&gt; = отслеживаемый pid процесса или имя (атом)</target>
        </trans-unit>
        <trans-unit id="e7aa61d3f02df5f535950d9aa144b4892b912d5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{21, FromProc, ToPid, Ref, Reason}&lt;/code&gt;, where &lt;code&gt;FromProc&lt;/code&gt; = monitored process pid or name (atom), &lt;code&gt;ToPid&lt;/code&gt; = monitoring process, and &lt;code&gt;Reason&lt;/code&gt; = exit reason for the monitored process</source>
          <target state="translated">&lt;code&gt;{21, FromProc, ToPid, Ref, Reason}&lt;/code&gt; , где &lt;code&gt;FromProc&lt;/code&gt; = идентификатор или имя отслеживаемого процесса (атом), &lt;code&gt;ToPid&lt;/code&gt; = процесс мониторинга и &lt;code&gt;Reason&lt;/code&gt; = причина выхода для отслеживаемого процесса</target>
        </trans-unit>
        <trans-unit id="c89dfc5e3616548dbd455d68be110e920352d709" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{?sysLocation_instance, &quot;upstairs&quot;}&lt;/code&gt; (provided that the generated &lt;code&gt;.hrl&lt;/code&gt; file is included)</source>
          <target state="translated">&lt;code&gt;{?sysLocation_instance, &quot;upstairs&quot;}&lt;/code&gt; (при условии, что сгенерированный файл &lt;code&gt;.hrl&lt;/code&gt; включен)</target>
        </trans-unit>
        <trans-unit id="2fdfef9a69f992385af48d17628621ee536dc362" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{Column, RowIndex, Value}&lt;/code&gt;, where &lt;code&gt;Column&lt;/code&gt; is the symbolic name of a column variable. &lt;code&gt;RowIndex&lt;/code&gt; is a list of indices for the specified element. If this is the case, the OBJECT IDENTIFIER sent in the notification is the &lt;code&gt;RowIndex&lt;/code&gt; appended to the OBJECT IDENTIFIER for the table column. This is the OBJECT IDENTIFIER which specifies the element.</source>
          <target state="translated">&lt;code&gt;{Column, RowIndex, Value}&lt;/code&gt; , где &lt;code&gt;Column&lt;/code&gt; - символьное имя переменной столбца. &lt;code&gt;RowIndex&lt;/code&gt; - это список индексов для указанного элемента. В этом случае ИДЕНТИФИКАТОР &lt;code&gt;RowIndex&lt;/code&gt; отправленный в уведомлении, представляет собой RowIndex, добавленный к ИДЕНТИФИКАТОРУ ОБЪЕКТА для столбца таблицы. Это ИДЕНТИФИКАТОР ОБЪЕКТА, который определяет элемент.</target>
        </trans-unit>
        <trans-unit id="0aa7bdabffe6ccfb6463d9dffc6c81df088d816a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{Column, RowIndex, Value}&lt;/code&gt;, where &lt;code&gt;Column&lt;/code&gt; is the symbolic name of a column variable. &lt;code&gt;RowIndex&lt;/code&gt; is a list of indices for the specified element. If this is the case, the OBJECT IDENTIFIER sent in the trap is the &lt;code&gt;RowIndex&lt;/code&gt; appended to the OBJECT IDENTIFIER for the table column. This is the OBJECT IDENTIFIER which specifies the element.</source>
          <target state="translated">&lt;code&gt;{Column, RowIndex, Value}&lt;/code&gt; , где &lt;code&gt;Column&lt;/code&gt; - символьное имя переменной столбца. &lt;code&gt;RowIndex&lt;/code&gt; - это список индексов для указанного элемента. В этом случае ИДЕНТИФИКАТОР &lt;code&gt;RowIndex&lt;/code&gt; отправленный в ловушке, представляет собой RowIndex, добавленный к ИДЕНТИФИКАТОРУ ОБЪЕКТА для столбца таблицы. Это ИДЕНТИФИКАТОР ОБЪЕКТА, который определяет элемент.</target>
        </trans-unit>
        <trans-unit id="68e9922f1a8cafaa9f22afa67427bc13ca21d643" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{Error, Column}&lt;/code&gt; where &lt;code&gt;Error&lt;/code&gt; is the same as &lt;code&gt;set&lt;/code&gt; for variables, and &lt;code&gt;Column&lt;/code&gt; denotes the faulty column. &lt;code&gt;Column&lt;/code&gt; must be one of the columns in the &lt;code&gt;Cols&lt;/code&gt; list.</source>
          <target state="translated">&lt;code&gt;{Error, Column}&lt;/code&gt; где &lt;code&gt;Error&lt;/code&gt; совпадает с &lt;code&gt;set&lt;/code&gt; для переменных, а &lt;code&gt;Column&lt;/code&gt; обозначает неисправный столбец. &lt;code&gt;Column&lt;/code&gt; должен быть одним из столбцов в списке &lt;code&gt;Cols&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dcd1e88ba91e5b34170c883231d5044117a93321" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{Error, Column}&lt;/code&gt; where &lt;code&gt;Error&lt;/code&gt; is the same as for &lt;code&gt;undo&lt;/code&gt; for variables, and &lt;code&gt;Column&lt;/code&gt; denotes the faulty column. &lt;code&gt;Column&lt;/code&gt; must be one of the columns in the &lt;code&gt;Cols&lt;/code&gt; list.</source>
          <target state="translated">&lt;code&gt;{Error, Column}&lt;/code&gt; где &lt;code&gt;Error&lt;/code&gt; - это то же самое, что и для &lt;code&gt;undo&lt;/code&gt; для переменных, а &lt;code&gt;Column&lt;/code&gt; обозначает неисправный столбец. &lt;code&gt;Column&lt;/code&gt; должен быть одним из столбцов в списке &lt;code&gt;Cols&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e0cfe33c1a13ffd17361874ebce5a6d0236fb5f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{Error, Column}&lt;/code&gt;, where &lt;code&gt;Error&lt;/code&gt; is the same as for &lt;code&gt;is_set_ok&lt;/code&gt; for variables, and &lt;code&gt;Column&lt;/code&gt; denotes the faulty column. &lt;code&gt;Column&lt;/code&gt; must be one of the columns in the &lt;code&gt;Cols&lt;/code&gt; list.</source>
          <target state="translated">&lt;code&gt;{Error, Column}&lt;/code&gt; , где &lt;code&gt;Error&lt;/code&gt; совпадает с &lt;code&gt;is_set_ok&lt;/code&gt; для переменных, а &lt;code&gt;Column&lt;/code&gt; обозначает неисправный столбец. &lt;code&gt;Column&lt;/code&gt; должен быть одним из столбцов в списке &lt;code&gt;Cols&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0f76c767a7b91045d3013b6770fd0cec3a923871" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{Method,RequestURI,HTTPVersion}&lt;/code&gt;: The HTTP &lt;code&gt;Method&lt;/code&gt;, &lt;code&gt;Request-URI&lt;/code&gt;, and &lt;code&gt;HTTP-Version&lt;/code&gt; as defined in RFC 2616.</source>
          <target state="translated">&lt;code&gt;{Method,RequestURI,HTTPVersion}&lt;/code&gt; : HTTP- &lt;code&gt;Method&lt;/code&gt; , &lt;code&gt;Request-URI&lt;/code&gt; и &lt;code&gt;HTTP-Version&lt;/code&gt; как определено в RFC 2616.</target>
        </trans-unit>
        <trans-unit id="87ea5a6c647d045751904b0461c8cd31c1bceb7f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{Minutes, Bytes}&lt;/code&gt; initiate rekeying when any of the limits are reached.</source>
          <target state="translated">&lt;code&gt;{Minutes, Bytes}&lt;/code&gt; инициируют смену ключей при достижении любого из пределов.</target>
        </trans-unit>
        <trans-unit id="51cdd4f58a7dd0cb267b633be69777f2c3ff5ab8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{Mod, Func, Args}&lt;/code&gt; - The info will be delivered via the function call:</source>
          <target state="translated">&lt;code&gt;{Mod, Func, Args}&lt;/code&gt; - Информация будет доставлена ​​через вызов функции:</target>
        </trans-unit>
        <trans-unit id="121c70618c48645db2808b42226c45ce988ce357" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{Name,Element_List}&lt;/code&gt; - This action is used when one or more of the subtypes of &lt;code&gt;Name&lt;/code&gt; is exclusive decoded.</source>
          <target state="translated">&lt;code&gt;{Name,Element_List}&lt;/code&gt; - это действие используется, когда один или несколько подтипов &lt;code&gt;Name&lt;/code&gt; эксклюзивно декодируются.</target>
        </trans-unit>
        <trans-unit id="dfec9a14d3d828a4cc27553781fe5c4d1138a461" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{Name,Node}&lt;/code&gt;, if the &lt;code&gt;gen_server&lt;/code&gt; process is locally registered at another node</source>
          <target state="translated">&lt;code&gt;{Name,Node}&lt;/code&gt; , если процесс &lt;code&gt;gen_server&lt;/code&gt; локально зарегистрирован на другом узле</target>
        </trans-unit>
        <trans-unit id="e6f386212dbc840fe094cafb29eab3642697fe16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{Name,Node}&lt;/code&gt;, if the event manager is locally registered at another node</source>
          <target state="translated">&lt;code&gt;{Name,Node}&lt;/code&gt; , если менеджер событий локально зарегистрирован на другом узле</target>
        </trans-unit>
        <trans-unit id="a57c8e34da36b0e1db6113d19bb2c5302361dc15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{Name,Node}&lt;/code&gt;, if the supervisor is locally registered at another node</source>
          <target state="translated">&lt;code&gt;{Name,Node}&lt;/code&gt; , если супервизор локально зарегистрирован на другом узле</target>
        </trans-unit>
        <trans-unit id="6c91af9daa8263300dd0e59c09907e51e34aacb9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{Name,parts}&lt;/code&gt; - The type of &lt;code&gt;Name&lt;/code&gt; can be one of &lt;code&gt;SEQUENCE OF&lt;/code&gt; or &lt;code&gt;SET OF&lt;/code&gt;. The action implies that the different components of &lt;code&gt;Name&lt;/code&gt; are left undecoded. The value of &lt;code&gt;Name&lt;/code&gt; is returned as a tuple (as mentioned in the previous section) where the second element is a list of binaries. This is because the representation of a &lt;code&gt;SEQUENCE OF&lt;/code&gt; or a &lt;code&gt;SET OF&lt;/code&gt; in Erlang is a list of its internal type. Any of the elements in this list or the entire list can be decoded by function &lt;code&gt;decode_part&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{Name,parts}&lt;/code&gt; - Типом &lt;code&gt;Name&lt;/code&gt; может быть &lt;code&gt;SEQUENCE OF&lt;/code&gt; или &lt;code&gt;SET OF&lt;/code&gt; . Действие подразумевает, что различные компоненты &lt;code&gt;Name&lt;/code&gt; остаются незакодированными. Значение &lt;code&gt;Name&lt;/code&gt; возвращается как кортеж (как упоминалось в предыдущем разделе), где второй элемент представляет собой список двоичных файлов. Это потому, что представление &lt;code&gt;SEQUENCE OF&lt;/code&gt; или &lt;code&gt;SET OF&lt;/code&gt; в Erlang является списком их внутреннего типа. Любой из элементов в этом списке или весь список может быть декодирован функцией &lt;code&gt;decode_part&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aa91826344ee57f80e20c6dcb0f9b010c113de3d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{Name,undecoded}&lt;/code&gt; - Tells that the element is left undecoded during the exclusive decode. The type of &lt;code&gt;Name&lt;/code&gt; can be any ASN.1 type. The value of element &lt;code&gt;Name&lt;/code&gt; is returned as a tuple (as mentioned in the previous section) in the value structure of the top type.</source>
          <target state="translated">&lt;code&gt;{Name,undecoded}&lt;/code&gt; - Сообщает, что элемент остается недекодированным во время монопольного декодирования. Тип &lt;code&gt;Name&lt;/code&gt; может быть любым типом ASN.1. Значение элемента &lt;code&gt;Name&lt;/code&gt; возвращается в виде кортежа (как упоминалось в предыдущем разделе) в структуре значений верхнего типа.</target>
        </trans-unit>
        <trans-unit id="4f6d35b81d459330588190ef4d06d768670ee791" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{NextOid, NextValue}&lt;/code&gt;, where &lt;code&gt;NextOid&lt;/code&gt; is the lexicographic next OBJECT IDENTIFIER for the corresponding column. This should be specified as the OBJECT IDENTIFER part following the table entry. This means that the first integer is the column number and the rest is a specification of the keys. &lt;code&gt;NextValue&lt;/code&gt; is the value of this element.</source>
          <target state="translated">&lt;code&gt;{NextOid, NextValue}&lt;/code&gt; , где &lt;code&gt;NextOid&lt;/code&gt; - это лексикографический ИДЕНТИФИКАТОР следующего ОБЪЕКТА для соответствующего столбца. Это должно быть указано как часть OBJECT IDENTIFER после записи в таблице. Это означает, что первое целое число - это номер столбца, а остальное - спецификация ключей. &lt;code&gt;NextValue&lt;/code&gt; - это значение этого элемента.</target>
        </trans-unit>
        <trans-unit id="53ed75176daebf696b0f894701b346d9d74e248b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{OID, Value}&lt;/code&gt;, where &lt;code&gt;OID&lt;/code&gt; is the OBJECT IDENTIFIER for an instance of an object, scalar variable or column variable.</source>
          <target state="translated">&lt;code&gt;{OID, Value}&lt;/code&gt; , где &lt;code&gt;OID&lt;/code&gt; - это ИДЕНТИФИКАТОР ОБЪЕКТА для экземпляра объекта, скалярной переменной или переменной столбца.</target>
        </trans-unit>
        <trans-unit id="72f6021f2030528af2957095894ceec6297672d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{OID, Value}&lt;/code&gt;, where &lt;code&gt;OID&lt;/code&gt; is the OBJECT IDENTIFIER for an instance of an object, scalar variable, or column variable.</source>
          <target state="translated">&lt;code&gt;{OID, Value}&lt;/code&gt; , где &lt;code&gt;OID&lt;/code&gt; - это ИДЕНТИФИКАТОР ОБЪЕКТА для экземпляра объекта, скалярной переменной или переменной столбца.</target>
        </trans-unit>
        <trans-unit id="753b6d106c570016132db8db3aa6c3a4be083ae6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{Objects, Fun}&lt;/code&gt;, where &lt;code&gt;Objects&lt;/code&gt; is a list of binaries or terms depending on the format, and &lt;code&gt;Fun&lt;/code&gt; is a new input function.</source>
          <target state="translated">&lt;code&gt;{Objects, Fun}&lt;/code&gt; , где &lt;code&gt;Objects&lt;/code&gt; - это список двоичных файлов или терминов в зависимости от формата, а &lt;code&gt;Fun&lt;/code&gt; - новая функция ввода.</target>
        </trans-unit>
        <trans-unit id="45f995fedf59632161a42ad9d7ccb7bd9a899c7a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{Record}&lt;/code&gt; specifies a record to be inserted. It can be a tuple with &lt;code&gt;Tab&lt;/code&gt; as first field. Notice that the record name is set to the table name regardless of what &lt;code&gt;record_name&lt;/code&gt; is set to.</source>
          <target state="translated">&lt;code&gt;{Record}&lt;/code&gt; указывает запись для вставки. Это может быть кортеж с &lt;code&gt;Tab&lt;/code&gt; в качестве первого поля. Обратите внимание, что имя записи устанавливается &lt;code&gt;record_name&lt;/code&gt; имени таблицы независимо от того, какое значение record_name установлено.</target>
        </trans-unit>
        <trans-unit id="af175d6f9cb3c148fb9a7a4069a2824b97ab9f32" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{Tab, Key}&lt;/code&gt; specifies the full identity of a record to be deleted.</source>
          <target state="translated">&lt;code&gt;{Tab, Key}&lt;/code&gt; указывает полный идентификатор удаляемой записи.</target>
        </trans-unit>
        <trans-unit id="e06b602b6a57a43d76f0a59f249204dc4ba2186b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{Tag, Recv}&lt;/code&gt; - The information is delivered either via messages or via a function call according to the value of &lt;code&gt;Recv&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{Tag, Recv}&lt;/code&gt; - информация доставляется либо через сообщения, либо через вызов функции в соответствии со значением &lt;code&gt;Recv&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e724f43633b5194fb847b068e538f0756634630c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{Variable, Value}&lt;/code&gt;, where &lt;code&gt;Variable&lt;/code&gt; is the symbolic name of a scalar variable referred to in the notification specification.</source>
          <target state="translated">&lt;code&gt;{Variable, Value}&lt;/code&gt; , где &lt;code&gt;Variable&lt;/code&gt; - это символическое имя скалярной переменной, упоминаемой в спецификации уведомления.</target>
        </trans-unit>
        <trans-unit id="d2de6a0bd542803b390e373274da6b30bd2ba684" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{[1,3,6,1,2,1,1,6,0], &quot;upstairs&quot;}&lt;/code&gt; or</source>
          <target state="translated">&lt;code&gt;{[1,3,6,1,2,1,1,6,0], &quot;upstairs&quot;}&lt;/code&gt; или</target>
        </trans-unit>
        <trans-unit id="d4e6ecb8894ea8a318ccd9bd107e2b468f26a717" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{aborted, Reason}&lt;/code&gt; if the function fails</source>
          <target state="translated">&lt;code&gt;{aborted, Reason}&lt;/code&gt; если функция не работает</target>
        </trans-unit>
        <trans-unit id="cb73ae684b0c9f0fd04462ed9c6c277bab6015d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{aborted, Reason}&lt;/code&gt; if unsuccessful</source>
          <target state="translated">&lt;code&gt;{aborted, Reason}&lt;/code&gt; случае неудачи</target>
        </trans-unit>
        <trans-unit id="ff9354f36140478f5614fbcdbe92dbf514bb45fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{access,&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#type-access&quot;&gt; access()&lt;/a&gt;&lt;/code&gt;&lt;code&gt;}&lt;/code&gt; - Existing tables can be opened in read-only mode. A table that is opened in read-only mode is not subjected to the automatic file reparation algorithm if it is later opened after a crash. Defaults to &lt;code&gt;read_write&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea05d0ec1cc8c19818b2aabe48e26296ac51a91d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{access,&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#type-access&quot;&gt; access()&lt;/a&gt;&lt;/code&gt;&lt;code&gt;}&lt;/code&gt; - The access mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b598621715d0704aaa6c18963a5e82926e142a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{access,&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#type-access&quot;&gt;access()&lt;/a&gt;&lt;/code&gt;&lt;code&gt;}&lt;/code&gt; - Existing tables can be opened in read-only mode. A table that is opened in read-only mode is not subjected to the automatic file reparation algorithm if it is later opened after a crash. Defaults to &lt;code&gt;read_write&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{access,&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#type-access&quot;&gt;access()&lt;/a&gt;&lt;/code&gt; &lt;code&gt;}&lt;/code&gt; - существующие таблицы могут быть открыты в режиме только для чтения. Таблица, открытая в режиме только для чтения, не подвергается алгоритму автоматического восстановления файлов, если она открывается позже после сбоя. По умолчанию &lt;code&gt;read_write&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b25840e04fe11366a2ebd3e0547df57c1396cbc7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{access,&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#type-access&quot;&gt;access()&lt;/a&gt;&lt;/code&gt;&lt;code&gt;}&lt;/code&gt; - The access mode.</source>
          <target state="translated">&lt;code&gt;{access,&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#type-access&quot;&gt;access()&lt;/a&gt;&lt;/code&gt; &lt;code&gt;}&lt;/code&gt; - Режим доступа.</target>
        </trans-unit>
        <trans-unit id="256381df77dde763e4e299fad3baa7f9b73c31bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{access_mode, Atom}&lt;/code&gt;. The access mode is by default the atom &lt;code&gt;read_write&lt;/code&gt; but it can also be set to the atom &lt;code&gt;read_only&lt;/code&gt;. If &lt;code&gt;AccessMode&lt;/code&gt; is set to &lt;code&gt;read_only&lt;/code&gt;, updates to the table cannot be performed.</source>
          <target state="translated">&lt;code&gt;{access_mode, Atom}&lt;/code&gt; . Режим доступа по умолчанию - это атом &lt;code&gt;read_write&lt;/code&gt; , но он также может быть установлен на атом &lt;code&gt;read_only&lt;/code&gt; . Если для &lt;code&gt;AccessMode&lt;/code&gt; установлено значение &lt;code&gt;read_only&lt;/code&gt; , обновление таблицы невозможно.</target>
        </trans-unit>
        <trans-unit id="04243e5d089ec02e4c347961534b65f3d8f7c290" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{allow_remote,Bool}&lt;/code&gt;, where &lt;code&gt;false&lt;/code&gt; means that all checkpoint retainers must be local. If a table does not reside locally, the checkpoint cannot be activated. &lt;code&gt;true&lt;/code&gt; allows checkpoint retainers to be allocated on any node. Default is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{allow_remote,Bool}&lt;/code&gt; , где &lt;code&gt;false&lt;/code&gt; означает, что все фиксаторы контрольных точек должны быть локальными. Если таблица не находится локально, контрольную точку нельзя активировать. &lt;code&gt;true&lt;/code&gt; позволяет размещать фиксаторы контрольных точек на любом узле. По умолчанию &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="543654962db471db6f7243d0b62dc47b8aaac5e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{allow_remote,Bool}&lt;/code&gt;. &lt;code&gt;false&lt;/code&gt; means that all retainers must be local. The checkpoint cannot be activated if a table does not reside locally. &lt;code&gt;true&lt;/code&gt; allows retainers to be allocated on any node. Default is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{allow_remote,Bool}&lt;/code&gt; . &lt;code&gt;false&lt;/code&gt; означает, что все ретейнеры должны быть локальными. Контрольную точку нельзя активировать, если таблица не находится локально. Значение &lt;code&gt;true&lt;/code&gt; позволяет размещать фиксаторы на любом узле. По умолчанию &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="75d7892c93761213afa9e59fa9b02bd32612eee0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{atomic, ok}&lt;/code&gt; if successful</source>
          <target state="translated">&lt;code&gt;{atomic, ok}&lt;/code&gt; случае успеха</target>
        </trans-unit>
        <trans-unit id="491fd1af42e5cc8a3f8520e687adb5bb791d2cb4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{atomic, ok}&lt;/code&gt; if the function executes successfully</source>
          <target state="translated">&lt;code&gt;{atomic, ok}&lt;/code&gt; если функция выполняется успешно</target>
        </trans-unit>
        <trans-unit id="558142c760c908a7542988227c481799c7091023" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{attributes, AtomList}&lt;/code&gt; is a list of the attribute names for the records that are supposed to populate the table. Default is &lt;code&gt;[key, val]&lt;/code&gt;. The table must at least have one extra attribute in addition to the key.</source>
          <target state="translated">&lt;code&gt;{attributes, AtomList}&lt;/code&gt; - это список имен атрибутов для записей, которые должны заполнять таблицу. По умолчанию &lt;code&gt;[key, val]&lt;/code&gt; . В таблице должен быть как минимум один дополнительный атрибут в дополнение к ключу.</target>
        </trans-unit>
        <trans-unit id="709157d32a33aed2347207976b657e2d2e2c7d31" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{attributes, AtomList}&lt;/code&gt; is a list of the attribute names for the records that are supposed to populate the table. Default is the list &lt;code&gt;[key, val]&lt;/code&gt;. The table must at least have one extra attribute besides the key. When accessing single attributes in a record, it is not recommended to hard code the attribute names as atoms. Use the construct &lt;code&gt;record_info(fields, record_name)&lt;/code&gt; instead.</source>
          <target state="translated">&lt;code&gt;{attributes, AtomList}&lt;/code&gt; - это список имен атрибутов для записей, которые должны заполнять таблицу. По умолчанию это список &lt;code&gt;[key, val]&lt;/code&gt; . В таблице должен быть хотя бы один дополнительный атрибут помимо ключа. При доступе к отдельным атрибутам в записи не рекомендуется жестко кодировать имена атрибутов как атомы. &lt;code&gt;record_info(fields, record_name)&lt;/code&gt; этого используйте конструкцию record_info (fields, record_name) .</target>
        </trans-unit>
        <trans-unit id="d08e36f233977c24bf344eaaf089c240159f904c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{auto_save,&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#type-auto_save&quot;&gt; auto_save()&lt;/a&gt;&lt;/code&gt;&lt;code&gt;}&lt;/code&gt; - The autosave interval.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ee5081f85fb7ca2e478a81775ae839b0ae9d3f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{auto_save,&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#type-auto_save&quot;&gt; auto_save()&lt;/a&gt;&lt;/code&gt;&lt;code&gt;}&lt;/code&gt; - The autosave interval. If the interval is an integer &lt;code&gt;Time&lt;/code&gt;, the table is flushed to disk whenever it is not accessed for &lt;code&gt;Time&lt;/code&gt; milliseconds. A table that has been flushed requires no reparation when reopened after an uncontrolled emulator halt. If the interval is the atom &lt;code&gt;infinity&lt;/code&gt;, autosave is disabled. Defaults to 180000 (3 minutes).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6dbda269264f5f79b65fce67f92e25bfbfbf838" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{auto_save,&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#type-auto_save&quot;&gt;auto_save()&lt;/a&gt;&lt;/code&gt;&lt;code&gt;}&lt;/code&gt; - The autosave interval.</source>
          <target state="translated">&lt;code&gt;{auto_save,&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#type-auto_save&quot;&gt;auto_save()&lt;/a&gt;&lt;/code&gt; &lt;code&gt;}&lt;/code&gt; - Интервал автосохранения.</target>
        </trans-unit>
        <trans-unit id="f5e16fd2dfca0361e7fa7a851df10a1f624c6da8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{auto_save,&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#type-auto_save&quot;&gt;auto_save()&lt;/a&gt;&lt;/code&gt;&lt;code&gt;}&lt;/code&gt; - The autosave interval. If the interval is an integer &lt;code&gt;Time&lt;/code&gt;, the table is flushed to disk whenever it is not accessed for &lt;code&gt;Time&lt;/code&gt; milliseconds. A table that has been flushed requires no reparation when reopened after an uncontrolled emulator halt. If the interval is the atom &lt;code&gt;infinity&lt;/code&gt;, autosave is disabled. Defaults to 180000 (3 minutes).</source>
          <target state="translated">&lt;code&gt;{auto_save,&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#type-auto_save&quot;&gt;auto_save()&lt;/a&gt;&lt;/code&gt; &lt;code&gt;}&lt;/code&gt; - Интервал автосохранения. Если интервал является целым числом &lt;code&gt;Time&lt;/code&gt; , таблица сбрасывается на диск всякий раз, когда к ней не обращаются в течение миллисекунд &lt;code&gt;Time&lt;/code&gt; . Таблица, которая была очищена, не требует восстановления при повторном открытии после неконтролируемой остановки эмулятора. Если интервал равен &lt;code&gt;infinity&lt;/code&gt; атомов , автосохранение отключено. По умолчанию 180000 (3 минуты).</target>
        </trans-unit>
        <trans-unit id="67de751a35b068839d2e0911b7ba0813bfff2932" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{bad_term, FileName}&lt;/code&gt; - &lt;code&gt;io:read/2&lt;/code&gt; failed to read some term.</source>
          <target state="translated">&lt;code&gt;{bad_term, FileName}&lt;/code&gt; - &lt;code&gt;io:read/2&lt;/code&gt; не удалось прочитать некоторый термин.</target>
        </trans-unit>
        <trans-unit id="d40543edd5ab817c48f268298c2ababbfa946dcf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{badrpc, Reason}&lt;/code&gt; will be returned in the following circumstances:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9f2ff7c0c12927bf8e9a20e16deb681fcdcfcdc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{bchunk_format, binary()}&lt;/code&gt; - An opaque binary describing the format of the objects returned by &lt;code&gt;bchunk/2&lt;/code&gt;. The binary can be used as argument to &lt;code&gt;is_compatible_chunk_format/2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{bchunk_format, binary()}&lt;/code&gt; - непрозрачный двоичный файл, описывающий формат объектов, возвращаемых &lt;code&gt;bchunk/2&lt;/code&gt; . Бинарный файл можно использовать как аргумент для &lt;code&gt;is_compatible_chunk_format/2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6ade7adb1a5cd475043f45f6ac30d9ac9943304e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{bound, Vars}&lt;/code&gt;, representing the variables that are bound in the subtree.</source>
          <target state="translated">&lt;code&gt;{bound, Vars}&lt;/code&gt; , представляющий переменные, которые связаны в поддереве.</target>
        </trans-unit>
        <trans-unit id="6f21cf30cb0c5ee92e8c76f07637e7269e212e50" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{cache_all, Cache}&lt;/code&gt;, where &lt;code&gt;Cache&lt;/code&gt; is equal to &lt;code&gt;ets&lt;/code&gt; or &lt;code&gt;list&lt;/code&gt; adds a &lt;code&gt;{cache,&amp;nbsp;Cache}&lt;/code&gt; option to every list expression of the query except tables and lists. Defaults to &lt;code&gt;{cache_all,&amp;nbsp;no}&lt;/code&gt;. Option &lt;code&gt;cache_all&lt;/code&gt; is equivalent to &lt;code&gt;{cache_all,&amp;nbsp;ets}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{cache_all, Cache}&lt;/code&gt; , где &lt;code&gt;Cache&lt;/code&gt; равно &lt;code&gt;ets&lt;/code&gt; или &lt;code&gt;list&lt;/code&gt; , добавляет параметр &lt;code&gt;{cache,&amp;nbsp;Cache}&lt;/code&gt; к каждому выражению списка запроса, кроме таблиц и списков. По умолчанию &lt;code&gt;{cache_all,&amp;nbsp;no}&lt;/code&gt; . Опция &lt;code&gt;cache_all&lt;/code&gt; эквивалентна &lt;code&gt;{cache_all,&amp;nbsp;ets}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="23c6babde67dcf358af9ed4cf2ed0b6ffd19b583" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{capture, ValueSpec}/{capture, ValueSpec, Type}&lt;/code&gt; defines what to return from the function upon successful matching. The &lt;code&gt;capture&lt;/code&gt; tuple can contain both a value specification, telling which of the captured substrings are to be returned, and a type specification, telling how captured substrings are to be returned (as index tuples, lists, or binaries). The options are described in detail below.</source>
          <target state="translated">&lt;code&gt;{capture, ValueSpec}/{capture, ValueSpec, Type}&lt;/code&gt; определяет, что возвращать из функции после успешного сопоставления. &lt;code&gt;capture&lt;/code&gt; кортеж может содержать и спецификации значение, рассказав , какой из захваченных подстрок должны быть возвращены, и спецификацию типа, рассказывая , как захваченные подстроки должны быть возвращены (как индексные кортежи, списки или двоичные файлы). Параметры подробно описаны ниже.</target>
        </trans-unit>
        <trans-unit id="058f13cf67604dfbb51081505fbab5ae1b798edf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{clear_tables, TabList}&lt;/code&gt;, where &lt;code&gt;TabList&lt;/code&gt; is a list of tables that is to be cleared before the records from the backup are inserted. That is, all records in the tables are deleted before the tables are restored. Schema information about the tables is not cleared or read from the backup.</source>
          <target state="translated">&lt;code&gt;{clear_tables, TabList}&lt;/code&gt; , где &lt;code&gt;TabList&lt;/code&gt; - это список таблиц, которые должны быть очищены перед вставкой записей из резервной копии. То есть все записи в таблицах удаляются перед восстановлением таблиц. Информация схемы о таблицах не очищается и не считывается из резервной копии.</target>
        </trans-unit>
        <trans-unit id="09a7c945e3a39415308795addf3bdebe75b499da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{clear_tables, TableList}&lt;/code&gt;, where &lt;code&gt;TableList&lt;/code&gt; is a list of tables, which is to be cleared before the records from the backup are inserted. That is, all records in the tables are deleted before the tables are restored. Schema information about the tables is not cleared or read from the backup.</source>
          <target state="translated">&lt;code&gt;{clear_tables, TableList}&lt;/code&gt; , где &lt;code&gt;TableList&lt;/code&gt; - это список таблиц, который необходимо очистить перед вставкой записей из резервной копии. То есть все записи в таблицах удаляются перед восстановлением таблиц. Информация схемы о таблицах не очищается и не считывается из резервной копии.</target>
        </trans-unit>
        <trans-unit id="41021657e70894e4192de73dd05d3438df497291" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{codestr, Str}&lt;/code&gt; - for &lt;code&gt;dbg:fun2ms/1&lt;/code&gt; arguments passed as strings (example: &lt;code&gt;&quot;fun(_) -&amp;gt; return_trace() end&quot;&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;{codestr, Str}&lt;/code&gt; - для аргументов &lt;code&gt;dbg:fun2ms/1&lt;/code&gt; , переданных в виде строк (пример: &lt;code&gt;&quot;fun(_) -&amp;gt; return_trace() end&quot;&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="ddcae99060b7859c45aaabfbbff12ad2a1d320f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{comment,Comment}&lt;/code&gt; prints a comment in the log for the test case.</source>
          <target state="translated">&lt;code&gt;{comment,Comment}&lt;/code&gt; печатает комментарий в журнале для тестового примера.</target>
        </trans-unit>
        <trans-unit id="9c778356ff6d593bf767cf4845abaa4b6473fe25" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{cyclicity, Cyclicity}&lt;/code&gt;, where &lt;code&gt;Cyclicity&lt;/code&gt; is &lt;code&gt;cyclic&lt;/code&gt; or &lt;code&gt;acyclic&lt;/code&gt;, according to the options given to &lt;code&gt;new&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{cyclicity, Cyclicity}&lt;/code&gt; , где &lt;code&gt;Cyclicity&lt;/code&gt; является &lt;code&gt;cyclic&lt;/code&gt; или &lt;code&gt;acyclic&lt;/code&gt; , в соответствии с параметрами, заданными для &lt;code&gt;new&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2f6ba04727e1d0e2533eb38037a592fe109c38c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{default_op, Operation}&lt;/code&gt;, where &lt;code&gt;Operation&lt;/code&gt; is either of the operations &lt;code&gt;skip_tables&lt;/code&gt;, &lt;code&gt;clear_tables&lt;/code&gt;, &lt;code&gt;keep_tables&lt;/code&gt;, or &lt;code&gt;recreate_tables&lt;/code&gt;. The default operation specifies which operation that is to be used on tables from the backup that is not specified in any of the mentioned lists. If omitted, operation &lt;code&gt;clear_tables&lt;/code&gt; is used.</source>
          <target state="translated">&lt;code&gt;{default_op, Operation}&lt;/code&gt; , где &lt;code&gt;Operation&lt;/code&gt; либо из операций &lt;code&gt;skip_tables&lt;/code&gt; , &lt;code&gt;clear_tables&lt;/code&gt; , &lt;code&gt;keep_tables&lt;/code&gt; или &lt;code&gt;recreate_tables&lt;/code&gt; . Операция по умолчанию указывает, какая операция должна использоваться для таблиц из резервной копии, не указанной ни в одном из упомянутых списков. Если опущено, используется операция &lt;code&gt;clear_tables&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="439f11bb81ab22b6ff33534bd040c39bd3fbf26d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{default_op, Operation}&lt;/code&gt;, where &lt;code&gt;Operation&lt;/code&gt; is one of the operations &lt;code&gt;skip_tables&lt;/code&gt;, &lt;code&gt;clear_tables&lt;/code&gt;, &lt;code&gt;keep_tables&lt;/code&gt;, or &lt;code&gt;recreate_tables&lt;/code&gt;. The default operation specifies which operation is to be used on tables from the backup that are not specified in any of the previous lists. If omitted, the operation &lt;code&gt;clear_tables&lt;/code&gt; is used.</source>
          <target state="translated">&lt;code&gt;{default_op, Operation}&lt;/code&gt; , где &lt;code&gt;Operation&lt;/code&gt; является одной из операций &lt;code&gt;skip_tables&lt;/code&gt; , &lt;code&gt;clear_tables&lt;/code&gt; , &lt;code&gt;keep_tables&lt;/code&gt; или &lt;code&gt;recreate_tables&lt;/code&gt; . Операция по умолчанию указывает, какая операция должна использоваться для таблиц из резервной копии, которые не указаны ни в одном из предыдущих списков. Если не &lt;code&gt;clear_tables&lt;/code&gt; , используется операция clear_tables .</target>
        </trans-unit>
        <trans-unit id="8aee08a84e0c2a665df3ef43050a44bfe28b647e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{disc_copies, NodeList}&lt;/code&gt;, where &lt;code&gt;NodeList&lt;/code&gt; is a list of the nodes where this table is to reside on disc.</source>
          <target state="translated">&lt;code&gt;{disc_copies, NodeList}&lt;/code&gt; , где &lt;code&gt;NodeList&lt;/code&gt; - это список узлов, на которых эта таблица должна находиться на диске.</target>
        </trans-unit>
        <trans-unit id="74887bcd48a16968b059dfd44f0ae8dfb337f16d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{disc_copies, Nodelist}&lt;/code&gt;, where &lt;code&gt;Nodelist&lt;/code&gt; is a list of the nodes where this table is supposed to have disc copies. If a table replica is of type &lt;code&gt;disc_copies&lt;/code&gt;, all write operations on this particular replica of the table are written to disc and to the RAM copy of the table.</source>
          <target state="translated">&lt;code&gt;{disc_copies, Nodelist}&lt;/code&gt; , где &lt;code&gt;Nodelist&lt;/code&gt; - это список узлов, на которых эта таблица должна содержать копии дисков. Если реплика таблицы имеет тип &lt;code&gt;disc_copies&lt;/code&gt; , все операции записи в этой конкретной реплике таблицы записываются на диск и в копию таблицы в ОЗУ.</target>
        </trans-unit>
        <trans-unit id="fe337b4b8e9025c8055145973cdc5c502eae324f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{disc_only_copies, NodeList}&lt;/code&gt;. These table replicas are stored on disc only and are therefore slower to access. However, a disc-only replica consumes less memory than a table replica of the other two storage types.</source>
          <target state="translated">&lt;code&gt;{disc_only_copies, NodeList}&lt;/code&gt; . Эти реплики таблиц хранятся только на диске, поэтому доступ к ним осуществляется медленнее. Однако реплика, предназначенная только для диска, потребляет меньше памяти, чем реплика таблицы двух других типов хранилища.</target>
        </trans-unit>
        <trans-unit id="603ef39723034c90e7a6f893a837cadc3f270784" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{disc_only_copies, Nodelist}&lt;/code&gt;, where &lt;code&gt;Nodelist&lt;/code&gt; is a list of the nodes where this table is supposed to have &lt;code&gt;disc_only_copies&lt;/code&gt;. A disc only table replica is kept on disc only and unlike the other replica types, the contents of the replica do not reside in RAM. These replicas are considerably slower than replicas held in RAM.</source>
          <target state="translated">&lt;code&gt;{disc_only_copies, Nodelist}&lt;/code&gt; , где &lt;code&gt;Nodelist&lt;/code&gt; - это список узлов, для которых эта таблица должна содержать &lt;code&gt;disc_only_copies&lt;/code&gt; . Реплика таблицы только для диска хранится только на диске, и, в отличие от реплик других типов, содержимое реплики не находится в ОЗУ. Эти реплики значительно медленнее, чем реплики, хранящиеся в ОЗУ.</target>
        </trans-unit>
        <trans-unit id="c4038658dfedacbebbb43ce13a2cb3105e6b6181" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{done, Result, RestChars}&lt;/code&gt; when enough data is read. In this case &lt;code&gt;Result&lt;/code&gt; is sent to the client and &lt;code&gt;RestChars&lt;/code&gt; is kept in the I/O server as a buffer for later input.</source>
          <target state="translated">&lt;code&gt;{done, Result, RestChars}&lt;/code&gt; когда будет прочитано достаточно данных. В этом случае &lt;code&gt;Result&lt;/code&gt; отправляется клиенту, а &lt;code&gt;RestChars&lt;/code&gt; сохраняется на сервере ввода-вывода в качестве буфера для последующего ввода.</target>
        </trans-unit>
        <trans-unit id="5be2ad09ee53b2e5cfec496d377fadb2ac7303c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{drop, N}&lt;/code&gt; if IP tracer is used (see &lt;code&gt;dbg:trace_port/2&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;{drop, N}&lt;/code&gt; если используется трассировщик IP (см. &lt;code&gt;dbg:trace_port/2&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="b3c7334d9b980c3e17dec4e1eeca3188027f3c41" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{encoding, unicode | latin1}&lt;/code&gt; is supported by both the standard shell (&lt;code&gt;group.erl&lt;/code&gt; including &lt;code&gt;werl&lt;/code&gt; on Windows), the 'oldshell' (&lt;code&gt;user.erl&lt;/code&gt;), and the file I/O servers.</source>
          <target state="translated">&lt;code&gt;{encoding, unicode | latin1}&lt;/code&gt; поддерживается как стандартной оболочкой ( &lt;code&gt;group.erl&lt;/code&gt; , включая &lt;code&gt;werl&lt;/code&gt; в Windows), так и &quot;oldshell&quot; ( &lt;code&gt;user.erl&lt;/code&gt; ), и серверами ввода-вывода файлов.</target>
        </trans-unit>
        <trans-unit id="17d0db6dbc541253b1e540aec7e65b6895d09c3f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{encoding, utf8}&lt;/code&gt; has the same effect as &lt;code&gt;{encoding, unicode}&lt;/code&gt; on files.</source>
          <target state="translated">&lt;code&gt;{encoding, utf8}&lt;/code&gt; действует на файлы так же, как &lt;code&gt;{encoding, unicode}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="97910211bcf2b1dc14a5ea5d92f742e0cd7101c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{env, Vars}&lt;/code&gt;, representing the input environment of the subtree.</source>
          <target state="translated">&lt;code&gt;{env, Vars}&lt;/code&gt; , представляющий входную среду поддерева.</target>
        </trans-unit>
        <trans-unit id="a4d9dc7a846dba951fb97ab94ef5acb2de59918d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{eof,LOCATION}&lt;/code&gt;, denoting an end-of-stream encountered before a complete form had been parsed. The word &lt;code&gt;LOCATION&lt;/code&gt; represents a location, and denotes the number of the last line, and possibly the number of the last column on that line, in the source file. See &lt;code&gt;erl_anno(3)&lt;/code&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d82ffb735ce5cce92124613e85e46968f466588" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{eof,LOCATION}&lt;/code&gt;, denoting an end-of-stream encountered before a complete form had been parsed. The word &lt;code&gt;LOCATION&lt;/code&gt; represents an integer, and denotes the number of the last line in the source file.</source>
          <target state="translated">&lt;code&gt;{eof,LOCATION}&lt;/code&gt; , обозначающий конец потока, обнаруженный до того, как была проанализирована полная форма. Слово &lt;code&gt;LOCATION&lt;/code&gt; представляет собой целое число и обозначает номер последней строки в исходном файле.</target>
        </trans-unit>
        <trans-unit id="d517e0e338452077fe358fb37851f3a9dfe56068" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{error, Reason}&lt;/code&gt; = transfer failed.</source>
          <target state="translated">&lt;code&gt;{error, Reason}&lt;/code&gt; = не удалось выполнить перенос.</target>
        </trans-unit>
        <trans-unit id="c91554869907c5b7202c13894f459e33f47242e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{error, Reason}&lt;/code&gt; if an error occurred when finding or evaluating the script</source>
          <target state="translated">&lt;code&gt;{error, Reason}&lt;/code&gt; если при поиске или оценке скрипта произошла ошибка</target>
        </trans-unit>
        <trans-unit id="4a79489a6baf49c39e888ffb197b871bfd5f5580" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{error, already_started, NodeName}&lt;/code&gt; if the node with the specified name is already started on a specified host.</source>
          <target state="translated">&lt;code&gt;{error, already_started, NodeName}&lt;/code&gt; если узел с указанным именем уже запущен на указанном узле.</target>
        </trans-unit>
        <trans-unit id="8b06ddf348b8496d1396a127437e70f164243c87" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{error, closed}&lt;/code&gt; if &lt;code&gt;ListenSocket&lt;/code&gt; is closed</source>
          <target state="translated">&lt;code&gt;{error, closed}&lt;/code&gt; если &lt;code&gt;ListenSocket&lt;/code&gt; закрыт</target>
        </trans-unit>
        <trans-unit id="59004474b720e6dadcb6e0794d09525f3c0a9677" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{error, not_alive, NodeName}&lt;/code&gt; if the node on which &lt;code&gt;&lt;a href=&quot;#start-3&quot;&gt;ct_slave:start/3&lt;/a&gt;&lt;/code&gt; is called, is not alive. Notice that &lt;code&gt;NodeName&lt;/code&gt; is the name of the current node in this case.</source>
          <target state="translated">&lt;code&gt;{error, not_alive, NodeName}&lt;/code&gt; если узел, на котором &lt;code&gt;&lt;a href=&quot;#start-3&quot;&gt;ct_slave:start/3&lt;/a&gt;&lt;/code&gt; , не жив. Обратите внимание, что в этом случае &lt;code&gt;NodeName&lt;/code&gt; - это имя текущего узла.</target>
        </trans-unit>
        <trans-unit id="4b3164d5b7b3eef93a67b314572e42b89115695f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{error, request}&lt;/code&gt; must be returned if the request is not recognized:</source>
          <target state="translated">&lt;code&gt;{error, request}&lt;/code&gt; должен быть возвращен, если запрос не распознан:</target>
        </trans-unit>
        <trans-unit id="1d2c894c7d8bfc091d3716c83a64be3d3d34828a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{error, started_not_connected, NodeName}&lt;/code&gt; if the node is started, but not connected to the master node.</source>
          <target state="translated">&lt;code&gt;{error, started_not_connected, NodeName}&lt;/code&gt; если узел запущен, но не подключен к главному узлу.</target>
        </trans-unit>
        <trans-unit id="a56a0cf6cc42f97987aef26775a0c84d1908b89c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{error, system_limit}&lt;/code&gt; if all available ports in the Erlang emulator are in use</source>
          <target state="translated">&lt;code&gt;{error, system_limit}&lt;/code&gt; если все доступные порты в эмуляторе Erlang используются</target>
        </trans-unit>
        <trans-unit id="6a51648378a64c49a67e0097e1bee7ecbe71eb05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{error, timeout}&lt;/code&gt; if no connection is established within the specified time</source>
          <target state="translated">&lt;code&gt;{error, timeout}&lt;/code&gt; если соединение не установлено в течение указанного времени</target>
        </trans-unit>
        <trans-unit id="55923bc05b6e7f69a3d0ea4630f2b2759c62eef9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{error, {Error, ErrorDetails}}&lt;/code&gt; - if the callback module fails to proceed with the specified configuration parameters.</source>
          <target state="translated">&lt;code&gt;{error, {Error, ErrorDetails}}&lt;/code&gt; - если модуль обратного вызова не может продолжить работу с указанными параметрами конфигурации.</target>
        </trans-unit>
        <trans-unit id="0a17ec2aabff13a6e5f93cd42dd7eb5e33ee3a74" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{error, {nofile, FileName}}&lt;/code&gt; - there is no file with the specified name in the current directory.</source>
          <target state="translated">&lt;code&gt;{error, {nofile, FileName}}&lt;/code&gt; - в текущем каталоге нет файла с указанным именем.</target>
        </trans-unit>
        <trans-unit id="65e74983593dd76aa96d9aff6b27a0cd3aa84c2c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{error, {wrong_config, ConfigString}}&lt;/code&gt; - the configuration string is wrong.</source>
          <target state="translated">&lt;code&gt;{error, {wrong_config, ConfigString}}&lt;/code&gt; - неверная строка конфигурации.</target>
        </trans-unit>
        <trans-unit id="0121267dfde3f01426807503e7723e7c06a7674d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{error,BeamFile}&lt;/code&gt; is returned if the compiled code can not be loaded on the node.</source>
          <target state="translated">&lt;code&gt;{error,BeamFile}&lt;/code&gt; возвращается, если скомпилированный код не может быть загружен на узел.</target>
        </trans-unit>
        <trans-unit id="cf20496e811182d5cde10e9084ced7ac1b6b2a3d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{error,BeamFile}&lt;/code&gt; is returned if the compiled code cannot be loaded on the node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9809d2085b7478d4a9fe04d2bbc5ff2ab8b7b23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{estimated_no_objects,&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#type-no_slots&quot;&gt; no_slots()&lt;/a&gt;&lt;/code&gt;&lt;code&gt;}&lt;/code&gt; - Equivalent to option &lt;code&gt;min_no_slots&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa83438e6d1a25a32b408a7beba77b7cd4df3e6f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{estimated_no_objects,&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#type-no_slots&quot;&gt;no_slots()&lt;/a&gt;&lt;/code&gt;&lt;code&gt;}&lt;/code&gt; - Equivalent to option &lt;code&gt;min_no_slots&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{estimated_no_objects,&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#type-no_slots&quot;&gt;no_slots()&lt;/a&gt;&lt;/code&gt; , no_slots () &lt;code&gt;}&lt;/code&gt; - эквивалентно опции &lt;code&gt;min_no_slots&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="200fce4da7b83757332ce6829614f3ac02939de6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{failover,Node}&lt;/code&gt; if the application is distributed and started at the current node because of a failover from &lt;code&gt;Node&lt;/code&gt;, and the application specification key &lt;code&gt;start_phases /= undefined&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{failover,Node}&lt;/code&gt; , если приложение распределяется и запускается на текущем узле из-за аварийного переключения с &lt;code&gt;Node&lt;/code&gt; , и ключ спецификации приложения &lt;code&gt;start_phases /= undefined&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b30125af0706579a3e7fa51fda8d0e3c2b5b1ad3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{false, NewState:any()}&lt;/code&gt; if the user or password is invalid</source>
          <target state="translated">&lt;code&gt;{false, NewState:any()}&lt;/code&gt; если пользователь или пароль недействительны</target>
        </trans-unit>
        <trans-unit id="5762d8052930e72e368baa33f643ab2140ea752b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{file,&lt;/code&gt;&lt;code&gt; file:name()&lt;/code&gt;&lt;code&gt;}&lt;/code&gt; - The name of the file to be opened. Defaults to the table name.</source>
          <target state="translated">&lt;code&gt;{file,&lt;/code&gt; &lt;code&gt; file:name()&lt;/code&gt; &lt;code&gt;}&lt;/code&gt; - Имя файла, который нужно открыть. По умолчанию используется имя таблицы.</target>
        </trans-unit>
        <trans-unit id="61254af034595b7987534813de1b2e088c3e46d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{file_error, FileName, file:posix()}&lt;/code&gt; - For an explanation of &lt;code&gt;file:posix()&lt;/code&gt;, see &lt;code&gt;file(3)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{file_error, FileName, file:posix()}&lt;/code&gt; - &lt;code&gt;file:posix()&lt;/code&gt; функции file: posix () см. в &lt;code&gt;file(3)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d330e6d681a7698aeede8f6a5a2d388d0dea2059" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{file_size, integer() &amp;gt;= 0}}&lt;/code&gt; - The file size, in bytes.</source>
          <target state="translated">&lt;code&gt;{file_size, integer() &amp;gt;= 0}}&lt;/code&gt; - размер файла в байтах.</target>
        </trans-unit>
        <trans-unit id="d682226720290e3b12db5f8b8a41cb8bfa06e623" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{filename,&lt;/code&gt;&lt;code&gt; file:name()&lt;/code&gt;&lt;code&gt;}&lt;/code&gt; - The name of the file where objects are stored.</source>
          <target state="translated">&lt;code&gt;{filename,&lt;/code&gt; &lt;code&gt; file:name()&lt;/code&gt; &lt;code&gt;}&lt;/code&gt; - имя файла, в котором хранятся объекты.</target>
        </trans-unit>
        <trans-unit id="666c55195e1ac58921fe07e4247412bd27c34b60" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{format, Format}&lt;/code&gt; - Specifies the format of the objects returned by function &lt;code&gt;InitFun&lt;/code&gt;. If &lt;code&gt;Format&lt;/code&gt; is &lt;code&gt;term&lt;/code&gt; (the default), &lt;code&gt;InitFun&lt;/code&gt; is assumed to return a list of tuples. If &lt;code&gt;Format&lt;/code&gt; is &lt;code&gt;bchunk&lt;/code&gt;, &lt;code&gt;InitFun&lt;/code&gt; is assumed to return &lt;code&gt;Data&lt;/code&gt; as returned by &lt;code&gt;&lt;a href=&quot;#bchunk-2&quot;&gt;bchunk/2&lt;/a&gt;&lt;/code&gt;. This option overrides option &lt;code&gt;min_no_slots&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{format, Format}&lt;/code&gt; - определяет формат объектов, возвращаемых функцией &lt;code&gt;InitFun&lt;/code&gt; . Если &lt;code&gt;Format&lt;/code&gt; равен &lt;code&gt;term&lt;/code&gt; (по умолчанию), предполагается , что &lt;code&gt;InitFun&lt;/code&gt; возвращает список кортежей. Если &lt;code&gt;Format&lt;/code&gt; - &lt;code&gt;bchunk&lt;/code&gt; , предполагается , что &lt;code&gt;InitFun&lt;/code&gt; возвращает &lt;code&gt;Data&lt;/code&gt; возвращенные &lt;code&gt;&lt;a href=&quot;#bchunk-2&quot;&gt;bchunk/2&lt;/a&gt;&lt;/code&gt; . Эта опция переопределяет опцию &lt;code&gt;min_no_slots&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0c96e602ae8d0bde4d2be0765fd1bdbe0116dee7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{free, Vars}&lt;/code&gt;, representing the free variables in the subtree.</source>
          <target state="translated">&lt;code&gt;{free, Vars}&lt;/code&gt; , представляющий свободные переменные в поддереве.</target>
        </trans-unit>
        <trans-unit id="8458cd58e8f0972318e7f564c11dcee8535e5156" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{genErr, Column}&lt;/code&gt; where &lt;code&gt;Column&lt;/code&gt; denotes the column that caused the error. &lt;code&gt;Column&lt;/code&gt; must be one of the columns in the &lt;code&gt;Cols&lt;/code&gt; list. Note that this should be an internal processing error, e.g. a caused by a programing fault somewhere. If some column does not exist, you must return the next accessible element (or &lt;code&gt;endOfTable&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;{genErr, Column}&lt;/code&gt; где &lt;code&gt;Column&lt;/code&gt; обозначает столбец, вызвавший ошибку. &lt;code&gt;Column&lt;/code&gt; должен быть одним из столбцов в списке &lt;code&gt;Cols&lt;/code&gt; . Обратите внимание, что это должна быть внутренняя ошибка обработки, например, вызванная ошибкой программирования. Если какой-то столбец не существует, вы должны вернуть следующий доступный элемент (или &lt;code&gt;endOfTable&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="5bb5448db50d1017d9b3a7fbc58a1a1e7a674abe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{global,GlobalName}&lt;/code&gt;, if the &lt;code&gt;gen_server&lt;/code&gt; process is globally registered</source>
          <target state="translated">&lt;code&gt;{global,GlobalName}&lt;/code&gt; , если &lt;code&gt;gen_server&lt;/code&gt; процесс глобально зарегистрирован</target>
        </trans-unit>
        <trans-unit id="898383d1bed9531809697ca05b4b67bc8fb4fe81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{global,GlobalName}&lt;/code&gt;, if the event manager is globally registered</source>
          <target state="translated">&lt;code&gt;{global,GlobalName}&lt;/code&gt; , если менеджер событий зарегистрирован глобально</target>
        </trans-unit>
        <trans-unit id="be7b3294d93fe45c4ec2a39e21a03192a1daa55f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{global,Name}&lt;/code&gt;, if the supervisor is globally registered</source>
          <target state="translated">&lt;code&gt;{global,Name}&lt;/code&gt; , если супервизор зарегистрирован глобально</target>
        </trans-unit>
        <trans-unit id="2e415dbfbb7c60fef1e32c9683d6b971362579ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{hash, Hash}&lt;/code&gt; - Describes which BIF is used to calculate the hash values of the objects stored in the Dets table. Possible values of &lt;code&gt;Hash&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;{hash, Hash}&lt;/code&gt; - описывает, какой BIF используется для вычисления хеш-значений объектов, хранящихся в таблице Dets. Возможные значения &lt;code&gt;Hash&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="a374ab9eafc23e09b6bb64b12ce7c745aa9b59ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{index, AttributeNameList}&lt;/code&gt;, where &lt;code&gt;AttributeNameList&lt;/code&gt; is a list of atoms specifying the names of the attributes &lt;code&gt;Mnesia&lt;/code&gt; is to build and maintain. An index table exists for every element in the list. The first field of a &lt;code&gt;Mnesia&lt;/code&gt; record is the key and thus need no extra index.</source>
          <target state="translated">&lt;code&gt;{index, AttributeNameList}&lt;/code&gt; , где &lt;code&gt;AttributeNameList&lt;/code&gt; - это список атомов, определяющий имена атрибутов, которые &lt;code&gt;Mnesia&lt;/code&gt; должна создавать и поддерживать. Индексная таблица существует для каждого элемента в списке. Первое поле записи &lt;code&gt;Mnesia&lt;/code&gt; является ключевым и поэтому не требует дополнительного индекса.</target>
        </trans-unit>
        <trans-unit id="37ef0473b803e1cf4873aa4ba9ea84d5d68d8a5e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{index, Intlist}&lt;/code&gt;, where &lt;code&gt;Intlist&lt;/code&gt; is a list of attribute names (atoms) or record fields for which Mnesia is to build and maintain an extra index table. The &lt;code&gt;qlc&lt;/code&gt; query compiler &lt;strong&gt;may&lt;/strong&gt; be able to optimize queries if there are indexes available.</source>
          <target state="translated">&lt;code&gt;{index, Intlist}&lt;/code&gt; , где &lt;code&gt;Intlist&lt;/code&gt; - это список имен атрибутов (атомов) или полей записи, для которых Mnesia должна создать и поддерживать дополнительную таблицу индексов. &lt;code&gt;qlc&lt;/code&gt; компилятор запросов &lt;strong&gt;может&lt;/strong&gt; быть в состоянии оптимизировать запросы , если есть индексы доступны.</target>
        </trans-unit>
        <trans-unit id="46beb7ad494db8c5245b1cc9f5e852fbc349de51" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{join,&amp;nbsp;lookup}&lt;/code&gt; invokes the lookup join method.</source>
          <target state="translated">&lt;code&gt;{join,&amp;nbsp;lookup}&lt;/code&gt; вызывает метод соединения поиска.</target>
        </trans-unit>
        <trans-unit id="05d1b0b67c54e005285e6d55489a5ca39a5ce417" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{join,&amp;nbsp;merge}&lt;/code&gt; invokes the merge join method.</source>
          <target state="translated">&lt;code&gt;{join,&amp;nbsp;merge}&lt;/code&gt; вызывает метод соединения слиянием.</target>
        </trans-unit>
        <trans-unit id="de258ee707f364e898d12e21f0faba7c3d3edae6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{join,&amp;nbsp;nested_loop}&lt;/code&gt; invokes the method of matching every pair of objects from two handles. This method is mostly very slow.</source>
          <target state="translated">&lt;code&gt;{join,&amp;nbsp;nested_loop}&lt;/code&gt; вызывает метод сопоставления каждой пары объектов из двух дескрипторов. Этот метод в основном очень медленный.</target>
        </trans-unit>
        <trans-unit id="c6445e46b5a4c24aba46879d1ed574bc4afce85a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{keep_tables, TabList}&lt;/code&gt;, where &lt;code&gt;TabList&lt;/code&gt; is a list of tables that is not to be cleared before the records from the backup are inserted. That is, the records in the backup are added to the records in the table. Schema information about the tables is not cleared or read from the backup.</source>
          <target state="translated">&lt;code&gt;{keep_tables, TabList}&lt;/code&gt; , где &lt;code&gt;TabList&lt;/code&gt; - это список таблиц, которые не следует очищать перед вставкой записей из резервной копии. То есть записи в резервной копии добавляются к записям в таблице. Информация схемы о таблицах не очищается и не считывается из резервной копии.</target>
        </trans-unit>
        <trans-unit id="59362df85e2f4b8376c9a00771535ddc7c238af0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{keep_tables, TableList}&lt;/code&gt;, where &lt;code&gt;TableList&lt;/code&gt; is a list of tables, which is not to be cleared before the records from the backup are inserted. That is, the records in the backup are added to the records in the table. Schema information about the tables is not cleared or read from the backup.</source>
          <target state="translated">&lt;code&gt;{keep_tables, TableList}&lt;/code&gt; , где &lt;code&gt;TableList&lt;/code&gt; - это список таблиц, который не должен очищаться перед вставкой записей из резервной копии. То есть записи в резервной копии добавляются к записям в таблице. Информация схемы о таблицах не очищается и не считывается из резервной копии.</target>
        </trans-unit>
        <trans-unit id="5d8869b35c3d2930a66acebdc885a312bc8379fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{keypos,&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#type-keypos&quot;&gt; keypos()&lt;/a&gt;&lt;/code&gt;&lt;code&gt;}&lt;/code&gt; - The key position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8040ff2e41818a9f737dc42f9f96ca5e706f77ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{keypos,&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#type-keypos&quot;&gt; keypos()&lt;/a&gt;&lt;/code&gt;&lt;code&gt;}&lt;/code&gt; - The position of the element of each object to be used as key. Defaults to 1. The ability to explicitly state the key position is most convenient when we want to store Erlang records in which the first position of the record is the name of the record type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f8a88b48bda64b8159607e75426a57b42af3aed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{keypos,&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#type-keypos&quot;&gt;keypos()&lt;/a&gt;&lt;/code&gt;&lt;code&gt;}&lt;/code&gt; - The key position.</source>
          <target state="translated">&lt;code&gt;{keypos,&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#type-keypos&quot;&gt;keypos()&lt;/a&gt;&lt;/code&gt; &lt;code&gt;}&lt;/code&gt; - позиция ключа.</target>
        </trans-unit>
        <trans-unit id="ec5f91f331ed2e5e7166be88b1a864aa8121c489" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{keypos,&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#type-keypos&quot;&gt;keypos()&lt;/a&gt;&lt;/code&gt;&lt;code&gt;}&lt;/code&gt; - The position of the element of each object to be used as key. Defaults to 1. The ability to explicitly state the key position is most convenient when we want to store Erlang records in which the first position of the record is the name of the record type.</source>
          <target state="translated">&lt;code&gt;{keypos,&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#type-keypos&quot;&gt;keypos()&lt;/a&gt;&lt;/code&gt; &lt;code&gt;}&lt;/code&gt; - позиция элемента каждого объекта, который будет использоваться в качестве ключа. По умолчанию 1. Возможность явно указывать позицию ключа наиболее удобна, когда мы хотим хранить записи Erlang, в которых первая позиция записи является именем типа записи.</target>
        </trans-unit>
        <trans-unit id="e88ca11648226ceeacd78c7d23ae7dc74e9a92d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{load_order, Integer}&lt;/code&gt;. The load order priority is by default &lt;code&gt;0&lt;/code&gt; (zero) but can be set to any integer. The tables with the highest load order priority are loaded first at startup.</source>
          <target state="translated">&lt;code&gt;{load_order, Integer}&lt;/code&gt; . Приоритет порядка загрузки по умолчанию равен &lt;code&gt;0&lt;/code&gt; (нулю), но может быть установлен в любое целое число. Таблицы с наивысшим приоритетом порядка загрузки загружаются первыми при запуске.</target>
        </trans-unit>
        <trans-unit id="45cabf9a380f9d7e33d05677673b256557b6baf8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{local_content, Bool}&lt;/code&gt;, where &lt;code&gt;Bool&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;. Default is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{local_content, Bool}&lt;/code&gt; , где &lt;code&gt;Bool&lt;/code&gt; - &lt;code&gt;true&lt;/code&gt; или &lt;code&gt;false&lt;/code&gt; . По умолчанию - &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="81d7215c5e595472b6ed53c65cb274e4046851a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{local_content, true}&lt;/code&gt;. When an application needs a table whose contents is to be locally unique on each node, &lt;code&gt;local_content&lt;/code&gt; tables can be used. The name of the table is known to all &lt;code&gt;Mnesia&lt;/code&gt; nodes, but its contents is unique for each node. Access to this type of table must be done locally.</source>
          <target state="translated">&lt;code&gt;{local_content, true}&lt;/code&gt; . Когда приложению требуется таблица, содержимое которой должно быть локально уникальным на каждом узле, можно использовать таблицы &lt;code&gt;local_content&lt;/code&gt; . Имя таблицы известно всем узлам &lt;code&gt;Mnesia&lt;/code&gt; , но ее содержимое уникально для каждого узла. Доступ к этому типу таблицы должен осуществляться локально.</target>
        </trans-unit>
        <trans-unit id="2ad5f430af8a7ecc9f27e3ebd9e41b01243f6480" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{lock, Lock}&lt;/code&gt;, where &lt;code&gt;lock&lt;/code&gt; can be &lt;code&gt;read&lt;/code&gt; or &lt;code&gt;write&lt;/code&gt;. Default is &lt;code&gt;read&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{lock, Lock}&lt;/code&gt; , где &lt;code&gt;lock&lt;/code&gt; может быть &lt;code&gt;read&lt;/code&gt; или &lt;code&gt;write&lt;/code&gt; . По умолчанию &lt;code&gt;read&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9199b07800b6b28d94384629284800525b274b89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{majority, Flag}&lt;/code&gt;, where &lt;code&gt;Flag&lt;/code&gt; must be a boolean. If &lt;code&gt;true&lt;/code&gt;, any (non-dirty) update to the table is aborted, unless a majority of the table replicas are available for the commit. When used on a fragmented table, all fragments are given the same the same majority setting.</source>
          <target state="translated">&lt;code&gt;{majority, Flag}&lt;/code&gt; , где &lt;code&gt;Flag&lt;/code&gt; должен быть логическим. Если &lt;code&gt;true&lt;/code&gt; , любое (не грязное) обновление таблицы прерывается, если для фиксации не доступно большинство реплик таблицы. При использовании с фрагментированной таблицей всем фрагментам присваивается одинаковое значение большинства.</target>
        </trans-unit>
        <trans-unit id="4d454df022f12f6bf2e6223a2b2920b124ad9bfd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{max,MaxTabs}&lt;/code&gt;, where &lt;code&gt;MaxTabs&lt;/code&gt; is a list of tables that are to be included in the checkpoint. Default is &lt;code&gt;[]&lt;/code&gt; (empty list). For these tables, the redundancy is maximized. The old content of the table is retained in the checkpoint retainer when the main table is updated by the applications. The checkpoint is more fault tolerant if the tables have several replicas. When new replicas are added by the schema manipulation function &lt;code&gt;&lt;a href=&quot;mnesia#add_table_copy-3&quot;&gt;mnesia:add_table_copy/3&lt;/a&gt;&lt;/code&gt; it also attaches a local checkpoint retainer.</source>
          <target state="translated">&lt;code&gt;{max,MaxTabs}&lt;/code&gt; , где &lt;code&gt;MaxTabs&lt;/code&gt; - это список таблиц, которые должны быть включены в контрольную точку. По умолчанию &lt;code&gt;[]&lt;/code&gt; (пустой список). Для этих таблиц избыточность максимальна. Старое содержимое таблицы сохраняется в фиксаторе контрольной точки, когда основная таблица обновляется приложениями. Контрольная точка более отказоустойчива, если у таблиц есть несколько реплик. Когда новые реплики добавляются функцией управления схемой &lt;code&gt;&lt;a href=&quot;mnesia#add_table_copy-3&quot;&gt;mnesia:add_table_copy/3&lt;/a&gt;&lt;/code&gt; , она также подключает локальный фиксатор контрольной точки.</target>
        </trans-unit>
        <trans-unit id="45e2bcb2dca4f96ff77291704164fd2b00b283a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{max,MaxTabs}&lt;/code&gt;. &lt;code&gt;MaxTabs&lt;/code&gt; is a list of tables that are to be included in the checkpoint. Default is &lt;code&gt;[]&lt;/code&gt;. For these tables, the redundancy is maximized and checkpoint information is retained together with all replicas. The checkpoint becomes more fault tolerant if the tables have several replicas. When a new replica is added by the schema manipulation function &lt;code&gt;mnesia:add_table_copy/3&lt;/code&gt;, a retainer is also attached automatically.</source>
          <target state="translated">&lt;code&gt;{max,MaxTabs}&lt;/code&gt; . &lt;code&gt;MaxTabs&lt;/code&gt; - это список таблиц, которые должны быть включены в контрольную точку. По умолчанию &lt;code&gt;[]&lt;/code&gt; . Для этих таблиц избыточность максимальна, и информация о контрольных точках сохраняется вместе со всеми репликами. Контрольная точка становится более отказоустойчивой, если таблицы имеют несколько реплик. Когда новая реплика добавляется функцией манипулирования схемой &lt;code&gt;mnesia:add_table_copy/3&lt;/code&gt; , фиксатор также присоединяется автоматически.</target>
        </trans-unit>
        <trans-unit id="1c39c329d5d104a42438aae35f735b622f9bbbda" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{max_no_slots,&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#type-no_slots&quot;&gt; no_slots()&lt;/a&gt;&lt;/code&gt;&lt;code&gt;}&lt;/code&gt; - The maximum number of slots to be used. Defaults to 32 M, which is the maximal value. Notice that a higher value can increase the table fragmentation, and a smaller value can decrease the fragmentation, at the expense of execution time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b6884f951c795e82aa17b73c9ff84c003d6dec9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{max_no_slots,&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#type-no_slots&quot;&gt;no_slots()&lt;/a&gt;&lt;/code&gt;&lt;code&gt;}&lt;/code&gt; - The maximum number of slots to be used. Defaults to 32 M, which is the maximal value. Notice that a higher value can increase the table fragmentation, and a smaller value can decrease the fragmentation, at the expense of execution time.</source>
          <target state="translated">&lt;code&gt;{max_no_slots,&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#type-no_slots&quot;&gt;no_slots()&lt;/a&gt;&lt;/code&gt; &lt;code&gt;}&lt;/code&gt; - максимальное количество используемых слотов. По умолчанию 32 M, что является максимальным значением. Обратите внимание, что более высокое значение может увеличить фрагментацию таблицы, а меньшее значение может уменьшить фрагментацию за счет времени выполнения.</target>
        </trans-unit>
        <trans-unit id="bcffa11391f0042a4f7910a10cf70f2b6fd9a0b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{memory, NoWords}&lt;/code&gt;, where &lt;code&gt;NoWords&lt;/code&gt; is the number of words allocated to the ETS tables.</source>
          <target state="translated">&lt;code&gt;{memory, NoWords}&lt;/code&gt; , где &lt;code&gt;NoWords&lt;/code&gt; - количество слов, выделенных для таблиц ETS.</target>
        </trans-unit>
        <trans-unit id="02ebec2632a45cfdaac9924ad0c858a992edf6bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{memory, integer() &amp;gt;= 0}&lt;/code&gt; - The file size, in bytes. The same value is associated with item &lt;code&gt;file_size&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{memory, integer() &amp;gt;= 0}&lt;/code&gt; - размер файла в байтах. Такое же значение связано с элементом &lt;code&gt;file_size&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3da93d800f85fca3fbe45f3a9805a5a3b1ee89af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{min,MinTabs}&lt;/code&gt;, where &lt;code&gt;MinTabs&lt;/code&gt; is a list of tables that are to be included in the checkpoint. Default is &lt;code&gt;[]&lt;/code&gt;. For these tables, the redundancy is minimized, and there is to be single checkpoint retainer per table, preferably at the local node.</source>
          <target state="translated">&lt;code&gt;{min,MinTabs}&lt;/code&gt; , где &lt;code&gt;MinTabs&lt;/code&gt; - это список таблиц, которые должны быть включены в контрольную точку. По умолчанию &lt;code&gt;[]&lt;/code&gt; . Для этих таблиц избыточность минимизирована, и для каждой таблицы должен быть один фиксатор контрольной точки, предпочтительно на локальном узле.</target>
        </trans-unit>
        <trans-unit id="5b7451c21f760cfc772a8d65ce76366cf97a1883" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{min,MinTabs}&lt;/code&gt;. &lt;code&gt;MinTabs&lt;/code&gt; is a list of tables that are to be included in the checkpoint. Default is []. For these tables, the redundancy is minimized and the checkpoint information is only retained with one replica, preferably on the local node.</source>
          <target state="translated">&lt;code&gt;{min,MinTabs}&lt;/code&gt; . &lt;code&gt;MinTabs&lt;/code&gt; - это список таблиц, которые должны быть включены в контрольную точку. По умолчанию []. Для этих таблиц избыточность минимизирована, и информация о контрольных точках сохраняется только с одной репликой, предпочтительно на локальном узле.</target>
        </trans-unit>
        <trans-unit id="6a9e24381ea0169c10a960dacee071aabe257b3a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{min_no_slots, no_slots()}&lt;/code&gt; - Specifies the estimated number of different keys to be stored in the table. The &lt;code&gt;open_file/2&lt;/code&gt; option with the same name is ignored, unless the table is created, in which case performance can be enhanced by supplying an estimate when initializing the table.</source>
          <target state="translated">&lt;code&gt;{min_no_slots, no_slots()}&lt;/code&gt; - указывает приблизительное количество различных ключей, которые будут храниться в таблице. Опция &lt;code&gt;open_file/2&lt;/code&gt; с тем же именем игнорируется, если таблица не создана, и в этом случае производительность может быть увеличена путем предоставления оценки при инициализации таблицы.</target>
        </trans-unit>
        <trans-unit id="82d08dd850bca20d366de0663b64a87b22fa778f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{min_no_slots,&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#type-no_slots&quot;&gt; no_slots()&lt;/a&gt;&lt;/code&gt;&lt;code&gt;}&lt;/code&gt; - Application performance can be enhanced with this flag by specifying, when the table is created, the estimated number of different keys to be stored in the table. Defaults to 256, which is the minimum value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7a6df2c0d8e4ffafd7e10883a8fc5151f6fa1c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{min_no_slots,&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#type-no_slots&quot;&gt;no_slots()&lt;/a&gt;&lt;/code&gt;&lt;code&gt;}&lt;/code&gt; - Application performance can be enhanced with this flag by specifying, when the table is created, the estimated number of different keys to be stored in the table. Defaults to 256, which is the minimum value.</source>
          <target state="translated">&lt;code&gt;{min_no_slots,&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#type-no_slots&quot;&gt;no_slots()&lt;/a&gt;&lt;/code&gt; &lt;code&gt;}&lt;/code&gt; - с помощью этого флага можно повысить производительность приложения, указав при создании таблицы предполагаемое количество различных ключей, которые будут храниться в таблице. По умолчанию 256, что является минимальным значением.</target>
        </trans-unit>
        <trans-unit id="020b2acf13ecbe155ab504393c96f3d7c2d4a6df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{mnesia_activity_event, Event}&lt;/code&gt; for activity events</source>
          <target state="translated">&lt;code&gt;{mnesia_activity_event, Event}&lt;/code&gt; для событий активности</target>
        </trans-unit>
        <trans-unit id="5e49b567af9fc35b3c423763841b19db3e1220d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{mnesia_dir, AlternateDir}&lt;/code&gt;. For semantics, see &lt;code&gt;mnesia:install_fallback/2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{mnesia_dir, AlternateDir}&lt;/code&gt; . Для семантики см. &lt;code&gt;mnesia:install_fallback/2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fa59ecf754a10370769d675585d0c179840b91f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{mnesia_dir, AlternateDir}&lt;/code&gt;. This argument is only valid if the scope of the installation is &lt;code&gt;local&lt;/code&gt;. Normally the installation of a fallback is targeted to the Mnesia directory, as configured with configuration parameter &lt;code&gt;-mnesia dir&lt;/code&gt;. But by explicitly supplying an &lt;code&gt;AlternateDir&lt;/code&gt;, the fallback is installed there regardless of the Mnesia directory configuration parameter setting. After installation of a fallback on an alternative Mnesia directory, that directory is fully prepared for use as an active Mnesia directory.</source>
          <target state="translated">&lt;code&gt;{mnesia_dir, AlternateDir}&lt;/code&gt; . Этот аргумент действителен только в том случае, если область установки является &lt;code&gt;local&lt;/code&gt; . Обычно установка резервной копии нацелена на каталог Mnesia, как &lt;code&gt;-mnesia dir&lt;/code&gt; параметре конфигурации -mnesia dir . Но при явном указании &lt;code&gt;AlternateDir&lt;/code&gt; резервная копия устанавливается там независимо от значения параметра конфигурации каталога Mnesia. После установки запасного варианта в альтернативный каталог Mnesia, этот каталог полностью готов для использования в качестве активного каталога Mnesia.</target>
        </trans-unit>
        <trans-unit id="15a6e67631f7451becddab09454689ce38403f84" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{mnesia_system_event, Event}&lt;/code&gt; for system events</source>
          <target state="translated">&lt;code&gt;{mnesia_system_event, Event}&lt;/code&gt; для системных событий</target>
        </trans-unit>
        <trans-unit id="20a9c5c4f6b650e83a5bfb3d963fb52a5c24deb8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{mnesia_table_event, Event}&lt;/code&gt; for table events</source>
          <target state="translated">&lt;code&gt;{mnesia_table_event, Event}&lt;/code&gt; для событий таблицы</target>
        </trans-unit>
        <trans-unit id="d89dde70a37a776f24ba4730aff026e25d8d6fc3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{module, BackupMod}&lt;/code&gt;. All accesses of the backup media are performed through a callback module named &lt;code&gt;BackupMod&lt;/code&gt;. Argument &lt;code&gt;Opaque&lt;/code&gt; is forwarded to the callback module, which can interpret it as it wishes. The default callback module is called &lt;code&gt;mnesia_backup&lt;/code&gt; and it interprets argument &lt;code&gt;Opaque&lt;/code&gt; as a local filename. The default for this module is also configurable through configuration parameter &lt;code&gt;-mnesia mnesia_backup&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{module, BackupMod}&lt;/code&gt; . Все обращения к резервному &lt;code&gt;BackupMod&lt;/code&gt; выполняются через модуль обратного вызова с именем BackupMod . Аргумент &lt;code&gt;Opaque&lt;/code&gt; передается модулю обратного вызова, который может интерпретировать его по своему усмотрению. Модуль обратного вызова по умолчанию называется &lt;code&gt;mnesia_backup&lt;/code&gt; и интерпретирует аргумент &lt;code&gt;Opaque&lt;/code&gt; как локальное имя файла. Значение по умолчанию для этого модуля также можно настроить с помощью параметра конфигурации &lt;code&gt;-mnesia mnesia_backup&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ce955821adbf61f9054562a8eb40d595ce2b13ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{module, BackupMod}&lt;/code&gt;. For semantics, see &lt;code&gt;mnesia:install_fallback/2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{module, BackupMod}&lt;/code&gt; . Для семантики см. &lt;code&gt;mnesia:install_fallback/2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="95dda7bdd02cd1dd5dcc6018cf114f71b8fe624d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{module,BackupMod}&lt;/code&gt;. The backup module &lt;code&gt;BackupMod&lt;/code&gt; is used to access the backup media. If omitted, the default backup module is used.</source>
          <target state="translated">&lt;code&gt;{module,BackupMod}&lt;/code&gt; . Модуль резервного копирования &lt;code&gt;BackupMod&lt;/code&gt; используется для доступа к носителю резервных копий. Если не указано, используется модуль резервного копирования по умолчанию.</target>
        </trans-unit>
        <trans-unit id="d7923a37f987c9cc4b56e300558cb7acfc556504" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{module,Mod}&lt;/code&gt;. The backup module &lt;code&gt;Mod&lt;/code&gt; is used to access the backup media. If omitted, the default backup module is used.</source>
          <target state="translated">&lt;code&gt;{module,Mod}&lt;/code&gt; . Модуль резервного копирования &lt;code&gt;Mod&lt;/code&gt; используется для доступа к резервному носителю. Если не указано, используется модуль резервного копирования по умолчанию.</target>
        </trans-unit>
        <trans-unit id="2557615e11785aeb93a447cfea545cd0b43d86c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{more, Continuation}&lt;/code&gt;, which indicates that more characters are needed to complete the request.</source>
          <target state="translated">&lt;code&gt;{more, Continuation}&lt;/code&gt; , что указывает на то, что для выполнения запроса требуется больше символов.</target>
        </trans-unit>
        <trans-unit id="7f9250b8b8e8d9bffc6b3ba47cfd2589c38d888c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{n_objects,Number}&lt;/code&gt;, where &lt;code&gt;n_objects&lt;/code&gt; specifies (roughly) the number of objects returned from Mnesia to QLC. Queries to remote tables can need a larger chunk to reduce network overhead. By default, &lt;code&gt;100&lt;/code&gt; objects at a time are returned.</source>
          <target state="translated">&lt;code&gt;{n_objects,Number}&lt;/code&gt; , где &lt;code&gt;n_objects&lt;/code&gt; указывает (примерно) количество объектов, возвращаемых из Mnesia в QLC. Для запросов к удаленным таблицам может потребоваться больший фрагмент, чтобы снизить нагрузку на сеть. По умолчанию возвращается &lt;code&gt;100&lt;/code&gt; объектов за раз.</target>
        </trans-unit>
        <trans-unit id="e34350363e2d757de7e9bc65a58c386a4d8e7e43" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{name,Name}&lt;/code&gt;, where &lt;code&gt;Name&lt;/code&gt; specifies a temporary name of the checkpoint. The name can be reused when the checkpoint has been deactivated. If no name is specified, a name is generated automatically.</source>
          <target state="translated">&lt;code&gt;{name,Name}&lt;/code&gt; , где &lt;code&gt;Name&lt;/code&gt; указывает временное имя контрольной точки. Имя можно использовать повторно после деактивации контрольной точки. Если имя не указано, имя создается автоматически.</target>
        </trans-unit>
        <trans-unit id="eb118a8443e99439f8464ed53c766a7eced10162" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{name,Name}&lt;/code&gt;. &lt;code&gt;Name&lt;/code&gt; is the checkpoint name. Each checkpoint must have a name that is unique to the associated nodes. The name can be reused only once the checkpoint has been deactivated. By default, a name that is probably unique is generated.</source>
          <target state="translated">&lt;code&gt;{name,Name}&lt;/code&gt; . &lt;code&gt;Name&lt;/code&gt; - это имя контрольной точки. Каждая контрольная точка должна иметь имя, уникальное для связанных узлов. Имя можно использовать повторно только после деактивации контрольной точки. По умолчанию создается имя, которое может быть уникальным.</target>
        </trans-unit>
        <trans-unit id="0bf44ca93bd0c04d57cff4e2e64804e81b9d865b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{noValue, Error}&lt;/code&gt;. If the row does not exist, because all columns have &lt;code&gt;{noValue, Error}&lt;/code&gt;), the single tuple &lt;code&gt;{noValue, Error}&lt;/code&gt; can be returned. This is a shorthand for a list with all elements &lt;code&gt;{noValue, Error}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{noValue, Error}&lt;/code&gt; . Если строка не существует, потому что все столбцы имеют &lt;code&gt;{noValue, Error}&lt;/code&gt; ), может быть возвращен единственный кортеж &lt;code&gt;{noValue, Error}&lt;/code&gt; . Это сокращение для списка со всеми элементами &lt;code&gt;{noValue, Error}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a8a18bfb67dea1e9039f3c962a8044b6329582c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{noValue, noSuchName}&lt;/code&gt;(SNMPv1)</source>
          <target state="translated">&lt;code&gt;{noValue, noSuchName}&lt;/code&gt; (SNMPv1)</target>
        </trans-unit>
        <trans-unit id="eb185b3e27cb0ae3bab7153922988f98506d67e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{noValue, noSuchObject | noSuchInstance}&lt;/code&gt;(SNMPv2)</source>
          <target state="translated">&lt;code&gt;{noValue, noSuchObject | noSuchInstance}&lt;/code&gt; (SNMPv2)</target>
        </trans-unit>
        <trans-unit id="1567a93260af256b21f83ef2666389656273b0e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{no_keys, integer &amp;gt;= 0()}&lt;/code&gt; - The number of different keys stored in the table.</source>
          <target state="translated">&lt;code&gt;{no_keys, integer &amp;gt;= 0()}&lt;/code&gt; - количество различных ключей, хранящихся в таблице.</target>
        </trans-unit>
        <trans-unit id="8f5ec6c0b31567e98e98e3e39655f968ceb698f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{no_objects, integer &amp;gt;= 0()}&lt;/code&gt; - The number of objects stored in the table.</source>
          <target state="translated">&lt;code&gt;{no_objects, integer &amp;gt;= 0()}&lt;/code&gt; - количество объектов, хранящихся в таблице.</target>
        </trans-unit>
        <trans-unit id="78ca7f63c37b87a42189313646e5afdf642458bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{no_slots, {Min, Used, Max}}&lt;/code&gt; - The number of slots of the table. &lt;code&gt;Min&lt;/code&gt; is the minimum number of slots, &lt;code&gt;Used&lt;/code&gt; is the number of currently used slots, and &lt;code&gt;Max&lt;/code&gt; is the maximum number of slots.</source>
          <target state="translated">&lt;code&gt;{no_slots, {Min, Used, Max}}&lt;/code&gt; - количество слотов в таблице. &lt;code&gt;Min&lt;/code&gt; - минимальное количество слотов, &lt;code&gt;Used&lt;/code&gt; - количество используемых в настоящее время слотов, а &lt;code&gt;Max&lt;/code&gt; - максимальное количество слотов.</target>
        </trans-unit>
        <trans-unit id="e1ee7921dd0d8dee1b4c70c5bb54b6d6986ea9d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{ok, Bin}&lt;/code&gt; = just another chunk of the file.</source>
          <target state="translated">&lt;code&gt;{ok, Bin}&lt;/code&gt; = просто еще один фрагмент файла.</target>
        </trans-unit>
        <trans-unit id="34079b1672ff85adaa28c30ad04ddd6e09270a90" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{ok, Config}&lt;/code&gt; - if the configuration variables are read successfully.</source>
          <target state="translated">&lt;code&gt;{ok, Config}&lt;/code&gt; - если переменные конфигурации прочитаны успешно.</target>
        </trans-unit>
        <trans-unit id="c49ea474244ae1f144dd319888cfd4c7ef8a23fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{ok, Socket}&lt;/code&gt; if a connection is established</source>
          <target state="translated">&lt;code&gt;{ok, Socket}&lt;/code&gt; если соединение установлено</target>
        </trans-unit>
        <trans-unit id="cd34396199c7043fb726e19f10d088c26464d424" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{ok, Unpurged}&lt;/code&gt; if evaluating the script is successful, where &lt;code&gt;Unpurged&lt;/code&gt; is a list of unpurged modules</source>
          <target state="translated">&lt;code&gt;{ok, Unpurged}&lt;/code&gt; если оценка скрипта успешна, где &lt;code&gt;Unpurged&lt;/code&gt; - это список неочищенных модулей</target>
        </trans-unit>
        <trans-unit id="e58d96d18a456e3b272e77e3b2902013e7eac97c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{ok, {config, ConfigString}}&lt;/code&gt; - the parameter is a configuration string and it is correct.</source>
          <target state="translated">&lt;code&gt;{ok, {config, ConfigString}}&lt;/code&gt; - параметр является строкой конфигурации, и это правильно.</target>
        </trans-unit>
        <trans-unit id="586d56cdb554b99cf95981aa98f5880c139e5f2a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{ok, {file, FileName}}&lt;/code&gt; - the parameter is a file name and the file exists.</source>
          <target state="translated">&lt;code&gt;{ok, {file, FileName}}&lt;/code&gt; - параметр - это имя файла, и файл существует.</target>
        </trans-unit>
        <trans-unit id="6f6ef68408b88b3e9084f0ee1ced6125c36f561d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{outdir, NameOfDirectory}&lt;/code&gt; Create a file named &lt;code&gt;TAGS&lt;/code&gt; in the directory &lt;code&gt;NameOfDirectory&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{outdir, NameOfDirectory}&lt;/code&gt; Создайте файл с именем &lt;code&gt;TAGS&lt;/code&gt; в каталоге &lt;code&gt;NameOfDirectory&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2f7080f4f9a5af506c8d608197e34eb88f096fa1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{outfile, NameOfTAGSFile}&lt;/code&gt; Create a &lt;code&gt;TAGS&lt;/code&gt; file named &lt;code&gt;NameOfTAGSFile&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{outfile, NameOfTAGSFile}&lt;/code&gt; Создайте файл &lt;code&gt;TAGS&lt;/code&gt; с именем &lt;code&gt;NameOfTAGSFile&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b037d20d6f05d548a2d94fbcc5c53c459b3cbdc5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{overload, MSec, Module, Function}&lt;/code&gt; instructs the &lt;code&gt;ttb&lt;/code&gt; back end (a part of the &lt;code&gt;Runtime_Tools&lt;/code&gt; application) to perform overload check every &lt;code&gt;MSec&lt;/code&gt; millisecond. If the check (named &lt;code&gt;Module:Function(check)&lt;/code&gt;) returns &lt;code&gt;true&lt;/code&gt;, tracing is disabled on the selected node.</source>
          <target state="translated">&lt;code&gt;{overload, MSec, Module, Function}&lt;/code&gt; инструктирует &lt;code&gt;ttb&lt;/code&gt; часть ttb (часть приложения &lt;code&gt;Runtime_Tools&lt;/code&gt; ) выполнять проверку перегрузки каждую миллисекунду &lt;code&gt;MSec&lt;/code&gt; . Если проверка (с именем &lt;code&gt;Module:Function(check)&lt;/code&gt; ) возвращает &lt;code&gt;true&lt;/code&gt; , трассировка на выбранном узле отключена.</target>
        </trans-unit>
        <trans-unit id="e086f4d5f6f75a34f2b76360d4fd11eb54fa50cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{owner, pid()}&lt;/code&gt; - The pid of the process that handles requests to the Dets table.</source>
          <target state="translated">&lt;code&gt;{owner, pid()}&lt;/code&gt; - идентификатор процесса, который обрабатывает запросы к таблице Dets.</target>
        </trans-unit>
        <trans-unit id="71c18d9091aee81f1b72322a48b1012098ea8c19" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{premature_eof, FileName}&lt;/code&gt; - End-of-file was encountered inside some binary term.</source>
          <target state="translated">&lt;code&gt;{premature_eof, FileName}&lt;/code&gt; - конец файла обнаружен внутри некоторого двоичного термина.</target>
        </trans-unit>
        <trans-unit id="92ff9aebf9b9f4b5d40c18b44568093783196a3d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{protection, Protection}&lt;/code&gt;, where &lt;code&gt;Protection&lt;/code&gt; is &lt;code&gt;protected&lt;/code&gt; or &lt;code&gt;private&lt;/code&gt;, according to the options given to &lt;code&gt;new&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{protection, Protection}&lt;/code&gt; , где &lt;code&gt;Protection&lt;/code&gt; является &lt;code&gt;protected&lt;/code&gt; или &lt;code&gt;private&lt;/code&gt; , в соответствии с параметрами, предоставленными &lt;code&gt;new&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eb52fdc714879e3d1d22dcbb05906c7aaa8baad5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{ram_copies, NodeList}&lt;/code&gt;, where &lt;code&gt;NodeList&lt;/code&gt; is a list of the nodes where this table is stored in RAM. Default is &lt;code&gt;[node()]&lt;/code&gt;. If the default value is used to create a table, it is located on the local node only.</source>
          <target state="translated">&lt;code&gt;{ram_copies, NodeList}&lt;/code&gt; , где &lt;code&gt;NodeList&lt;/code&gt; - это список узлов, на которых эта таблица хранится в ОЗУ. По умолчанию &lt;code&gt;[node()]&lt;/code&gt; . Если для создания таблицы используется значение по умолчанию, оно находится только на локальном узле.</target>
        </trans-unit>
        <trans-unit id="322a25bc54945488d6f0af8e9d9eaee319f35062" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{ram_copies, Nodelist}&lt;/code&gt;, where &lt;code&gt;Nodelist&lt;/code&gt; is a list of the nodes where this table is supposed to have RAM copies. A table replica of type &lt;code&gt;ram_copies&lt;/code&gt; is not written to disc on a per transaction basis. &lt;code&gt;ram_copies&lt;/code&gt; replicas can be dumped to disc with the function &lt;code&gt;mnesia:dump_tables(Tabs)&lt;/code&gt;. Default value for this attribute is &lt;code&gt;[node()]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{ram_copies, Nodelist}&lt;/code&gt; , где &lt;code&gt;Nodelist&lt;/code&gt; - это список узлов, на которых эта таблица должна иметь копии RAM. Реплика таблицы типа &lt;code&gt;ram_copies&lt;/code&gt; не записывается на диск для каждой транзакции. Реплики &lt;code&gt;ram_copies&lt;/code&gt; могут быть выгружены на диск с помощью функции &lt;code&gt;mnesia:dump_tables(Tabs)&lt;/code&gt; . Значение по умолчанию для этого атрибута - &lt;code&gt;[node()]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="42d9a33fcf92e64b48344257734e284874cdac4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{ram_file, boolean()}&lt;/code&gt; - Whether the table is kept in RAM.</source>
          <target state="translated">&lt;code&gt;{ram_file, boolean()}&lt;/code&gt; - Хранится ли таблица в ОЗУ.</target>
        </trans-unit>
        <trans-unit id="46d960057443b926051420e7d3bbd8a8cac9a6e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{ram_file, boolean()}&lt;/code&gt; - Whether the table is to be kept in RAM. Keeping the table in RAM can sound like an anomaly, but can enhance the performance of applications that open a table, insert a set of objects, and then close the table. When the table is closed, its contents are written to the disk file. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{ram_file, boolean()}&lt;/code&gt; - должна ли таблица храниться в ОЗУ. Хранение таблицы в ОЗУ может показаться аномалией, но может повысить производительность приложений, которые открывают таблицу, вставляют набор объектов и затем закрывают таблицу. Когда таблица закрывается, ее содержимое записывается в файл на диске. По умолчанию - &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fbd36f5fcc9d5726c6ba599b68c53d675df35f64" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{ram_overrides_dump,Bool}&lt;/code&gt;. Only applicable for &lt;code&gt;ram_copies&lt;/code&gt;. &lt;code&gt;Bool&lt;/code&gt; allows you to choose to back up the table state as it is in RAM, or as it is on disc. &lt;code&gt;true&lt;/code&gt; means that the latest committed records in RAM are to be included in the checkpoint. These are the records that the application accesses. &lt;code&gt;false&lt;/code&gt; means that the records dumped to &lt;code&gt;DAT&lt;/code&gt; files are to be included in the checkpoint. These records are loaded at startup. Default is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{ram_overrides_dump,Bool}&lt;/code&gt; . Применимо только для &lt;code&gt;ram_copies&lt;/code&gt; . &lt;code&gt;Bool&lt;/code&gt; позволяет выбрать резервное копирование состояния таблицы в том виде, в каком оно находится в ОЗУ или на диске. &lt;code&gt;true&lt;/code&gt; означает, что в контрольную точку должны быть включены последние зафиксированные записи в ОЗУ. Это записи, к которым обращается приложение. &lt;code&gt;false&lt;/code&gt; означает, что записи, сброшенные в файлы &lt;code&gt;DAT&lt;/code&gt; , должны быть включены в контрольную точку. Эти записи загружаются при запуске. По умолчанию - &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1cf51f98ca752a45b0295cc77ea5e2cf6277c579" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{ram_overrides_dump,Bool}&lt;/code&gt;. This argument only applies to tables of type &lt;code&gt;ram_copies&lt;/code&gt;. &lt;code&gt;Bool&lt;/code&gt; specifies if the table state in RAM is to override the table state on disc. &lt;code&gt;true&lt;/code&gt; means that the latest committed records in RAM are included in the checkpoint retainer. These are the records that the application accesses. &lt;code&gt;false&lt;/code&gt; means that the records on the disc &lt;code&gt;.DAT&lt;/code&gt; file are included in the checkpoint retainer. These records are loaded on startup. Default is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{ram_overrides_dump,Bool}&lt;/code&gt; . Этот аргумент применим только к таблицам типа &lt;code&gt;ram_copies&lt;/code&gt; . &lt;code&gt;Bool&lt;/code&gt; указывает, должно ли состояние таблицы в ОЗУ переопределять состояние таблицы на диске. &lt;code&gt;true&lt;/code&gt; означает, что последние зафиксированные записи в ОЗУ включены в фиксатор контрольной точки. Это записи, к которым обращается приложение. &lt;code&gt;false&lt;/code&gt; означает, что записи на диске &lt;code&gt;.DAT&lt;/code&gt; - файл включены в фиксатор контрольной точки. Эти записи загружаются при запуске. По умолчанию - &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5ede5bf36d209c4baecd23df1cd8a49ad54e74af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{record_name, Atom}&lt;/code&gt; specifies the common name of all records stored in the table. All records stored in the table must have this name as their first element. &lt;code&gt;record_name&lt;/code&gt; defaults to the name of the table. For more information, see &lt;code&gt;&lt;a href=&quot;mnesia_chap4#recordnames_tablenames&quot;&gt;Record Names versus Table Names&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{record_name, Atom}&lt;/code&gt; указывает общее имя всех записей, хранящихся в таблице. Все записи, хранящиеся в таблице, должны иметь это имя в качестве своего первого элемента. &lt;code&gt;record_name&lt;/code&gt; по умолчанию - имя таблицы. Для получения дополнительной информации см. &lt;code&gt;&lt;a href=&quot;mnesia_chap4#recordnames_tablenames&quot;&gt;Record Names versus Table Names&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0a0bc97046faf3420b318e0dabdd2b1a93af0b0f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{record_name, Name}&lt;/code&gt;, where &lt;code&gt;Name&lt;/code&gt; must be an atom. All records stored in the table must have this name as the first element. It defaults to the same name as the table name.</source>
          <target state="translated">&lt;code&gt;{record_name, Name}&lt;/code&gt; , где &lt;code&gt;Name&lt;/code&gt; должно быть атомом. Все записи, хранящиеся в таблице, должны иметь это имя в качестве первого элемента. По умолчанию используется то же имя, что и имя таблицы.</target>
        </trans-unit>
        <trans-unit id="c0b89fdbd4b54476223ea00064c735aee6648dbb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{recreate_tables, TabList}&lt;/code&gt;, where &lt;code&gt;TabList&lt;/code&gt; is a list of tables that is to be recreated before the records from the backup are inserted. The tables are first deleted and then created with the schema information from the backup. All the nodes in the backup need to be operational.</source>
          <target state="translated">&lt;code&gt;{recreate_tables, TabList}&lt;/code&gt; , где &lt;code&gt;TabList&lt;/code&gt; - это список таблиц, которые необходимо воссоздать перед вставкой записей из резервной копии. Таблицы сначала удаляются, а затем создаются с использованием информации схемы из резервной копии. Все узлы в резервной копии должны быть в рабочем состоянии.</target>
        </trans-unit>
        <trans-unit id="2088f284180d2fc734fe5f7476e6a37ad837564c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{recreate_tables, TableList}&lt;/code&gt;, where &lt;code&gt;TableList&lt;/code&gt; is a list of tables, which is to be recreated before the records from the backup are inserted. The tables are first deleted and then created with the schema information from the backup. All the nodes in the backup need to be operational.</source>
          <target state="translated">&lt;code&gt;{recreate_tables, TableList}&lt;/code&gt; , где &lt;code&gt;TableList&lt;/code&gt; - это список таблиц, который необходимо воссоздать перед вставкой записей из резервной копии. Таблицы сначала удаляются, а затем создаются с использованием информации схемы из резервной копии. Все узлы в резервной копии должны быть в рабочем состоянии.</target>
        </trans-unit>
        <trans-unit id="41f2681a6977142754c24be73f8efb5c1a91a6d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{repair, Value}&lt;/code&gt; - &lt;code&gt;Value&lt;/code&gt; can be either a &lt;code&gt;boolean()&lt;/code&gt; or the atom &lt;code&gt;force&lt;/code&gt;. The flag specifies if the Dets server is to invoke the automatic file reparation algorithm. Defaults to &lt;code&gt;true&lt;/code&gt;. If &lt;code&gt;false&lt;/code&gt; is specified, no attempt is made to repair the file, and &lt;code&gt;{error, {needs_repair, FileName}}&lt;/code&gt; is returned if the table must be repaired.</source>
          <target state="translated">&lt;code&gt;{repair, Value}&lt;/code&gt; - &lt;code&gt;Value&lt;/code&gt; может быть либо &lt;code&gt;boolean()&lt;/code&gt; или атом &lt;code&gt;force&lt;/code&gt; . Флаг указывает, должен ли сервер Dets вызывать алгоритм автоматического восстановления файлов. По умолчанию &lt;code&gt;true&lt;/code&gt; . Если указано значение &lt;code&gt;false&lt;/code&gt; , попытки восстановления файла не предпринимаются, и возвращается &lt;code&gt;{error, {needs_repair, FileName}}&lt;/code&gt; если таблица должна быть восстановлена.</target>
        </trans-unit>
        <trans-unit id="243767f1ab646563a48b7607cfae2f64d36aef78" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{safe_fixed, SafeFixed}&lt;/code&gt; - The same as &lt;code&gt;{safe_fixed_monotonic_time, SafeFixed}&lt;/code&gt; except the format and value of &lt;code&gt;FixedAtTime&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{safe_fixed, SafeFixed}&lt;/code&gt; - то же, что и &lt;code&gt;{safe_fixed_monotonic_time, SafeFixed}&lt;/code&gt; за исключением формата и значения &lt;code&gt;FixedAtTime&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0d60353cd382eaff9eeaa9a965b09427fd0cbd50" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{safe_fixed_monotonic_time, SafeFixed}&lt;/code&gt; - If the table is fixed, &lt;code&gt;SafeFixed&lt;/code&gt; is a tuple &lt;code&gt;{FixedAtTime, [{Pid,RefCount}]}&lt;/code&gt;. &lt;code&gt;FixedAtTime&lt;/code&gt; is the time when the table was first fixed, and &lt;code&gt;Pid&lt;/code&gt; is the pid of the process that fixes the table &lt;code&gt;RefCount&lt;/code&gt; times. There can be any number of processes in the list. If the table is not fixed, &lt;code&gt;SafeFixed&lt;/code&gt; is the atom &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{safe_fixed_monotonic_time, SafeFixed}&lt;/code&gt; - если таблица фиксированная, &lt;code&gt;SafeFixed&lt;/code&gt; представляет собой кортеж &lt;code&gt;{FixedAtTime, [{Pid,RefCount}]}&lt;/code&gt; . &lt;code&gt;FixedAtTime&lt;/code&gt; - это время, когда таблица была впервые исправлена, а &lt;code&gt;Pid&lt;/code&gt; - это pid процесса, который исправляет время &lt;code&gt;RefCount&lt;/code&gt; таблицы . В списке может быть любое количество процессов. Если таблица не зафиксирована, &lt;code&gt;SafeFixed&lt;/code&gt; является атомом &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="77852a8d2f3b9a3a1759e107386593fbe3e304db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{save_config,Config}&lt;/code&gt; makes the &lt;code&gt;Common Test&lt;/code&gt; test server pass &lt;code&gt;Config&lt;/code&gt; to the next test case.</source>
          <target state="translated">&lt;code&gt;{save_config,Config}&lt;/code&gt; заставляет тестовый сервер &lt;code&gt;Common Test&lt;/code&gt; передать &lt;code&gt;Config&lt;/code&gt; в следующий тестовый пример.</target>
        </trans-unit>
        <trans-unit id="b1dc9f14d5ccd2c14b3e15926aa53318e169353a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{schema, Tab, CreateList}&lt;/code&gt; specifies a table to be created. For more information about &lt;code&gt;CreateList&lt;/code&gt;, see &lt;code&gt;&lt;a href=&quot;mnesia#create_table-2&quot;&gt;mnesia:create_table/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{schema, Tab, CreateList}&lt;/code&gt; указывает таблицу, которую необходимо создать. Для получения дополнительной информации о &lt;code&gt;CreateList&lt;/code&gt; см. &lt;code&gt;&lt;a href=&quot;mnesia#create_table-2&quot;&gt;mnesia:create_table/2&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="57353258f3c4518eda050314ab9f959e3312c8a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{schema, Tab}&lt;/code&gt; specifies a table to be deleted.</source>
          <target state="translated">&lt;code&gt;{schema, Tab}&lt;/code&gt; определяет удаляемую таблицу.</target>
        </trans-unit>
        <trans-unit id="ed668e45641d0e0e5c792826f0e8e70c2758fe46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{scope, Scope}&lt;/code&gt;. For semantics, see &lt;code&gt;mnesia:install_fallback/2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{scope, Scope}&lt;/code&gt; . Для семантики см. &lt;code&gt;mnesia:install_fallback/2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cc36685e1cd9495318a45ad14ffeffc16e07473a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{scope, Scope}&lt;/code&gt;. The &lt;code&gt;Scope&lt;/code&gt; of a fallback is either &lt;code&gt;global&lt;/code&gt; for the entire database or &lt;code&gt;local&lt;/code&gt; for one node. By default, the installation of a fallback is a global operation, which either is performed on all nodes with a disc-resident schema or none. Which nodes that are disc-resident is determined from the schema information in the backup.</source>
          <target state="translated">&lt;code&gt;{scope, Scope}&lt;/code&gt; . &lt;code&gt;Scope&lt;/code&gt; в качестве запасного варианта либо &lt;code&gt;global&lt;/code&gt; для всей базы данных или &lt;code&gt;local&lt;/code&gt; для одного узла. По умолчанию установка резервной копии - это глобальная операция, которая либо выполняется на всех узлах с резидентной схемой диска, либо не выполняется ни на одном. Какие узлы являются резидентными на диске, определяется из информации схемы в резервной копии.</target>
        </trans-unit>
        <trans-unit id="95623f8a53dd4b1420c371f2d6dd9a5673aaef18" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{segment_timeout, missing_segments()}&lt;/code&gt; - one or more segments was not delivered before the expire of the segment timer.</source>
          <target state="translated">&lt;code&gt;{segment_timeout, missing_segments()}&lt;/code&gt; - один или несколько сегментов не были доставлены до истечения таймера сегмента.</target>
        </trans-unit>
        <trans-unit id="8c5c407a539f1f47faac870b5988aef24dbcc33e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{select, MatchSpec}&lt;/code&gt;. As for &lt;code&gt;select&lt;/code&gt;, the table is traversed by calling &lt;code&gt;mnesia:select/3&lt;/code&gt; and &lt;code&gt;mnesia:select/1&lt;/code&gt;. The difference is that the match specification is explicitly given. This is how to state match specifications that cannot easily be expressed within the syntax provided by QLC.</source>
          <target state="translated">&lt;code&gt;{select, MatchSpec}&lt;/code&gt; . Что касается &lt;code&gt;select&lt;/code&gt; , таблица &lt;code&gt;mnesia:select/3&lt;/code&gt; путем вызова mnesia: select / 3 и &lt;code&gt;mnesia:select/1&lt;/code&gt; . Разница в том, что спецификация соответствия дается явно. Таким образом можно указать спецификации соответствия, которые нельзя легко выразить в синтаксисе QLC.</target>
        </trans-unit>
        <trans-unit id="5e85082653b7ac8f18fdabcb47399e1bc33af7c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{select,&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#type-match_spec&quot;&gt; match_spec()&lt;/a&gt;&lt;/code&gt;&lt;code&gt;}&lt;/code&gt; - As for &lt;code&gt;select&lt;/code&gt;, the table is traversed by calling &lt;code&gt;dets:select/3&lt;/code&gt; and &lt;code&gt;dets:select/1&lt;/code&gt;. The difference is that the match specification is specified explicitly. This is how to state match specifications that cannot easily be expressed within the syntax provided by &lt;code&gt;qlc&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48dac8aa9a602e73209998e339f05366da69fae3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{select,&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#type-match_spec&quot;&gt;match_spec()&lt;/a&gt;&lt;/code&gt;&lt;code&gt;}&lt;/code&gt; - As for &lt;code&gt;select&lt;/code&gt;, the table is traversed by calling &lt;code&gt;dets:select/3&lt;/code&gt; and &lt;code&gt;dets:select/1&lt;/code&gt;. The difference is that the match specification is specified explicitly. This is how to state match specifications that cannot easily be expressed within the syntax provided by &lt;code&gt;qlc&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{select,&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#type-match_spec&quot;&gt;match_spec()&lt;/a&gt;&lt;/code&gt; &lt;code&gt;}&lt;/code&gt; - Что касается &lt;code&gt;select&lt;/code&gt; , таблица &lt;code&gt;dets:select/3&lt;/code&gt; путем вызова dets: select / 3 и &lt;code&gt;dets:select/1&lt;/code&gt; . Разница в том, что спецификация соответствия указывается явно. Таким образом можно указать спецификации соответствия, которые нелегко выразить в синтаксисе, предоставляемом &lt;code&gt;qlc&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2cccbcce1b79e1a860b4204965ae962164f6d406" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{size, integer() &amp;gt;= 0}&lt;/code&gt; - The number of objects stored in the table.</source>
          <target state="translated">&lt;code&gt;{size, integer() &amp;gt;= 0}&lt;/code&gt; - количество объектов, хранящихся в таблице.</target>
        </trans-unit>
        <trans-unit id="5ded61e40ffff24eb2f94212fd2b15db53bab649" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{skip,Reason}&lt;/code&gt; indicates that the test case is skipped.</source>
          <target state="translated">&lt;code&gt;{skip,Reason}&lt;/code&gt; указывает, что тестовый пример пропущен.</target>
        </trans-unit>
        <trans-unit id="aa0296ab902a7c3358a6e3a79b60f7931701b1ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{skip_tables, TabList}&lt;/code&gt;, where &lt;code&gt;TabList&lt;/code&gt; is a list of tables that is not to be read from the backup.</source>
          <target state="translated">&lt;code&gt;{skip_tables, TabList}&lt;/code&gt; , где &lt;code&gt;TabList&lt;/code&gt; - это список таблиц, которые не следует читать из резервной копии.</target>
        </trans-unit>
        <trans-unit id="01e5959e832820731f76f2b10117d59a86d59b79" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{skip_tables, TableList}&lt;/code&gt;, where &lt;code&gt;TableList&lt;/code&gt; is a list of tables, which is not to be read from the backup.</source>
          <target state="translated">&lt;code&gt;{skip_tables, TableList}&lt;/code&gt; , где &lt;code&gt;TableList&lt;/code&gt; - это список таблиц, которые не следует читать из резервной копии.</target>
        </trans-unit>
        <trans-unit id="81f88cd283cac912e9ca746fd1368767ccfae072" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{snmp, SnmpStruct}&lt;/code&gt;. &lt;code&gt;SnmpStruct&lt;/code&gt; is described in the &lt;code&gt;SNMP&lt;/code&gt; User's Guide. Basically, if this attribute is present in &lt;code&gt;ArgList&lt;/code&gt; of &lt;code&gt;&lt;a href=&quot;mnesia#create_table-2&quot;&gt;mnesia:create_table/2&lt;/a&gt;&lt;/code&gt;, the table is immediately accessible the SNMP.</source>
          <target state="translated">&lt;code&gt;{snmp, SnmpStruct}&lt;/code&gt; . &lt;code&gt;SnmpStruct&lt;/code&gt; описан в Руководстве пользователя &lt;code&gt;SNMP&lt;/code&gt; . В принципе, если этот атрибут присутствует в &lt;code&gt;ArgList&lt;/code&gt; в &lt;code&gt;&lt;a href=&quot;mnesia#create_table-2&quot;&gt;mnesia:create_table/2&lt;/a&gt;&lt;/code&gt; , таблица сразу становится доступной по протоколу SNMP.</target>
        </trans-unit>
        <trans-unit id="f73f7f8e71d79de56f7a81c2efba110fd7464c27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{snmp, SnmpStruct}&lt;/code&gt;. For a description of &lt;code&gt;SnmpStruct&lt;/code&gt;, see &lt;code&gt;mnesia:snmp_open_table/2&lt;/code&gt;. If this attribute is present in &lt;code&gt;ArgList&lt;/code&gt; to &lt;code&gt;mnesia:create_table/2&lt;/code&gt;, the table is immediately accessible by SNMP. Therefore applications that use SNMP to manipulate and control the system can be designed easily, since Mnesia provides a direct mapping between the logical tables that make up an SNMP control application and the physical data that makes up a Mnesia table.</source>
          <target state="translated">&lt;code&gt;{snmp, SnmpStruct}&lt;/code&gt; . Описание &lt;code&gt;SnmpStruct&lt;/code&gt; см. В &lt;code&gt;mnesia:snmp_open_table/2&lt;/code&gt; . Если этот атрибут присутствует в &lt;code&gt;ArgList&lt;/code&gt; для &lt;code&gt;mnesia:create_table/2&lt;/code&gt; , таблица сразу становится доступной по протоколу SNMP. Поэтому приложения, использующие SNMP для управления системой и управления ею, могут быть легко разработаны, поскольку Mnesia обеспечивает прямое отображение между логическими таблицами, составляющими управляющее приложение SNMP, и физическими данными, составляющими таблицу Mnesia.</target>
        </trans-unit>
        <trans-unit id="483b20f491bfb35604228a26d5184138977a2373" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{ssh_cm,&lt;/code&gt;&lt;code&gt;ssh:connection_ref()&lt;/code&gt;&lt;code&gt;,&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#type-channel_msg&quot;&gt;channel_msg()&lt;/a&gt;&lt;/code&gt;&lt;code&gt;}&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;{ssh_cm,&lt;/code&gt;&lt;code&gt;ssh:connection_ref()&lt;/code&gt;&lt;code&gt;,&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#type-channel_msg&quot;&gt;channel_msg()&lt;/a&gt;&lt;/code&gt;&lt;code&gt;}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a5639181ca4df54d5fede198e9c732d7be97d080" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{storage_properties, [{Backend, Properties}]&lt;/code&gt; forwards more properties to the back end storage. &lt;code&gt;Backend&lt;/code&gt; can currently be &lt;code&gt;ets&lt;/code&gt; or &lt;code&gt;dets&lt;/code&gt;. &lt;code&gt;Properties&lt;/code&gt; is a list of options sent to the back end storage during table creation. &lt;code&gt;Properties&lt;/code&gt; cannot contain properties already used by Mnesia, such as &lt;code&gt;type&lt;/code&gt; or &lt;code&gt;named_table&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{storage_properties, [{Backend, Properties}]&lt;/code&gt; пересылает другие свойства в внутреннее хранилище. &lt;code&gt;Backend&lt;/code&gt; в настоящее время может быть &lt;code&gt;ets&lt;/code&gt; или &lt;code&gt;dets&lt;/code&gt; . &lt;code&gt;Properties&lt;/code&gt; - это список параметров, отправленный в внутреннее хранилище во время создания таблицы. &lt;code&gt;Properties&lt;/code&gt; не могут содержать свойства, уже используемые Mnesia, такие как &lt;code&gt;type&lt;/code&gt; или &lt;code&gt;named_table&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9d7627b0cb1b799897a73baf7562f0a6496c70bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{swapped,NewHandler,Pid}&lt;/code&gt;, if the process &lt;code&gt;Pid&lt;/code&gt; has replaced the event handler with another event handler &lt;code&gt;NewHandler&lt;/code&gt; using a call to &lt;code&gt;&lt;a href=&quot;#swap_handler-3&quot;&gt; swap_handler/3&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#swap_sup_handler-3&quot;&gt; swap_sup_handler/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="303e847e69fba2c65d8e3f5d2f62794a6afff2ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{swapped,NewHandler,Pid}&lt;/code&gt;, if the process &lt;code&gt;Pid&lt;/code&gt; has replaced the event handler with another event handler &lt;code&gt;NewHandler&lt;/code&gt; using a call to &lt;code&gt;&lt;a href=&quot;#swap_handler-3&quot;&gt;swap_handler/3&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#swap_sup_handler-3&quot;&gt;swap_sup_handler/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{swapped,NewHandler,Pid}&lt;/code&gt; , если &lt;code&gt;Pid&lt;/code&gt; процесса заменил обработчик событий другим обработчиком событий &lt;code&gt;NewHandler&lt;/code&gt; , используя вызов &lt;code&gt;&lt;a href=&quot;#swap_handler-3&quot;&gt;swap_handler/3&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;#swap_sup_handler-3&quot;&gt;swap_sup_handler/3&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="214b8fac5cbc176fc660ffa7e080e981936cf48d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{sysLocation, &quot;upstairs&quot;}&lt;/code&gt; or</source>
          <target state="translated">&lt;code&gt;{sysLocation, &quot;upstairs&quot;}&lt;/code&gt; или</target>
        </trans-unit>
        <trans-unit id="1c98b73c33e66db686f3e9900cf9664a3071a82b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{tag(), tag_receiver()}&lt;/code&gt; - The information is delivered either via messages or via a function call according to the value of &lt;code&gt;tag_receiver()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{tag(), tag_receiver()}&lt;/code&gt; - информация доставляется либо через сообщения, либо через вызов функции в соответствии со значением &lt;code&gt;tag_receiver()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="df94ed1989d56de807abe8c01846944b974ab972" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{takeover,Node}&lt;/code&gt; if the application is distributed and started at the current node because of a takeover from &lt;code&gt;Node&lt;/code&gt;, either because &lt;code&gt;takeover/2&lt;/code&gt; has been called or because the current node has higher priority than &lt;code&gt;Node&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{takeover,Node}&lt;/code&gt; , если приложение распределяется и запускается на текущем узле из-за перехода от &lt;code&gt;Node&lt;/code&gt; , либо из-за &lt;code&gt;takeover/2&lt;/code&gt; , либо из-за того, что текущий узел имеет более высокий приоритет, чем &lt;code&gt;Node&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="59fc28eb3ef112e55422495e00b1aab70d0440f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{tmpdir, TempDirectory}&lt;/code&gt; sets the directory used by merge join for temporary files and by option &lt;code&gt;{cache,&amp;nbsp;list}&lt;/code&gt;. The option also overrides option &lt;code&gt;tmpdir&lt;/code&gt; of &lt;code&gt;&lt;a href=&quot;#keysort-3&quot;&gt;keysort/3&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#sort-2&quot;&gt;sort/2&lt;/a&gt;&lt;/code&gt;. Defaults to &lt;code&gt;&quot;&quot;&lt;/code&gt;, which means that the directory returned by &lt;code&gt;file:get_cwd()&lt;/code&gt; is used.</source>
          <target state="translated">&lt;code&gt;{tmpdir, TempDirectory}&lt;/code&gt; устанавливает каталог, используемый объединением слиянием для временных файлов и опцией &lt;code&gt;{cache,&amp;nbsp;list}&lt;/code&gt; . Этот параметр также переопределяет параметр &lt;code&gt;tmpdir&lt;/code&gt; для &lt;code&gt;&lt;a href=&quot;#keysort-3&quot;&gt;keysort/3&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;#sort-2&quot;&gt;sort/2&lt;/a&gt;&lt;/code&gt; . По умолчанию &lt;code&gt;&quot;&quot;&lt;/code&gt; , что означает, что используется каталог, возвращаемый &lt;code&gt;file:get_cwd()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5c02f65dac281dd801d3c340819fb91a0408021e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{tmpdir_usage, TmpFileUsage}&lt;/code&gt; determines the action taken when &lt;code&gt;qlc&lt;/code&gt; is about to create temporary files on the directory set by option &lt;code&gt;tmpdir&lt;/code&gt;. If the value is &lt;code&gt;not_allowed&lt;/code&gt;, an error tuple is returned, otherwise temporary files are created as needed. Default is &lt;code&gt;allowed&lt;/code&gt;, which means that no further action is taken. The values &lt;code&gt;info_msg&lt;/code&gt;, &lt;code&gt;warning_msg&lt;/code&gt;, and &lt;code&gt;error_msg&lt;/code&gt; mean that the function with the corresponding name in module &lt;code&gt;error_logger&lt;/code&gt; is called for printing some information (currently the stacktrace).</source>
          <target state="translated">&lt;code&gt;{tmpdir_usage, TmpFileUsage}&lt;/code&gt; определяет действие, предпринимаемое, когда &lt;code&gt;qlc&lt;/code&gt; собирается создать временные файлы в каталоге, установленном опцией &lt;code&gt;tmpdir&lt;/code&gt; . Если значение &lt;code&gt;not_allowed&lt;/code&gt; , возвращается кортеж ошибки, в противном случае временные файлы создаются по мере необходимости. По умолчанию &lt;code&gt;allowed&lt;/code&gt; , что означает, что никаких дальнейших действий не предпринимается. Значения &lt;code&gt;info_msg&lt;/code&gt; , &lt;code&gt;warning_msg&lt;/code&gt; и &lt;code&gt;error_msg&lt;/code&gt; означают, что функция с соответствующим именем в модуле &lt;code&gt;error_logger&lt;/code&gt; вызывается для печати некоторой информации (в настоящее время трассировки стека).</target>
        </trans-unit>
        <trans-unit id="0924fcf739aab6153fb3e9ec406d8635341bb11b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{traverse, SelectMethod}&lt;/code&gt;, where &lt;code&gt;traverse&lt;/code&gt; determines the method to traverse the whole table (if needed). The default method is &lt;code&gt;select&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{traverse, SelectMethod}&lt;/code&gt; , где &lt;code&gt;traverse&lt;/code&gt; определяет метод обхода всей таблицы (при необходимости). По умолчанию &lt;code&gt;select&lt;/code&gt; метод .</target>
        </trans-unit>
        <trans-unit id="569d0f524a0eac87d8e5f5e0b87a720bcb5454fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{true, NewState:any()}&lt;/code&gt; if the user and password is valid</source>
          <target state="translated">&lt;code&gt;{true, NewState:any()}&lt;/code&gt; если пользователь и пароль действительны</target>
        </trans-unit>
        <trans-unit id="004bbb00ed016620bf837455f0176fda6272ee5b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{type, Type}&lt;/code&gt;, where &lt;code&gt;Type&lt;/code&gt; must be either of the atoms &lt;code&gt;set&lt;/code&gt;, &lt;code&gt;ordered_set&lt;/code&gt;, or &lt;code&gt;bag&lt;/code&gt;. Default is &lt;code&gt;set&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{type, Type}&lt;/code&gt; , где &lt;code&gt;Type&lt;/code&gt; должен быть либо &lt;code&gt;set&lt;/code&gt; атомов , либо &lt;code&gt;ordered_set&lt;/code&gt; , либо &lt;code&gt;bag&lt;/code&gt; . По умолчанию &lt;code&gt;set&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="85f91ed15ae3cd74083b647b9660ff6969fbe1ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{type, Type}&lt;/code&gt;, where &lt;code&gt;Type&lt;/code&gt; must be either of the atoms &lt;code&gt;set&lt;/code&gt;, &lt;code&gt;ordered_set&lt;/code&gt;, or &lt;code&gt;bag&lt;/code&gt;. Default is &lt;code&gt;set&lt;/code&gt;. In a &lt;code&gt;set&lt;/code&gt;, all records have unique keys. In a &lt;code&gt;bag&lt;/code&gt;, several records can have the same key, but the record content is unique. If a non-unique record is stored, the old conflicting records are overwritten.</source>
          <target state="translated">&lt;code&gt;{type, Type}&lt;/code&gt; , где &lt;code&gt;Type&lt;/code&gt; должен быть либо &lt;code&gt;set&lt;/code&gt; атомов , либо &lt;code&gt;ordered_set&lt;/code&gt; , либо &lt;code&gt;bag&lt;/code&gt; . По умолчанию &lt;code&gt;set&lt;/code&gt; . В &lt;code&gt;set&lt;/code&gt; все записи имеют уникальные ключи. В &lt;code&gt;bag&lt;/code&gt; несколько записей могут иметь один и тот же ключ, но содержимое записи уникально. Если сохраняется неуникальная запись, старые конфликтующие записи перезаписываются.</target>
        </trans-unit>
        <trans-unit id="ff4b0d9d72ca30ee93822540f5b2f0b9469f6dc1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{type,&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#type-type&quot;&gt; type()&lt;/a&gt;&lt;/code&gt;&lt;code&gt;}&lt;/code&gt; - The table type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f9f40e602854988b8f855fbdae4baf695e10c2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{type,&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#type-type&quot;&gt; type()&lt;/a&gt;&lt;/code&gt;&lt;code&gt;}&lt;/code&gt; - The table type. Defaults to &lt;code&gt;set&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca6d701a597627b7ea0c74deeb39db4494658b6e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{type,&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#type-type&quot;&gt;type()&lt;/a&gt;&lt;/code&gt;&lt;code&gt;}&lt;/code&gt; - The table type.</source>
          <target state="translated">&lt;code&gt;{type,&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#type-type&quot;&gt;type()&lt;/a&gt;&lt;/code&gt; &lt;code&gt;}&lt;/code&gt; - Тип таблицы.</target>
        </trans-unit>
        <trans-unit id="8ba84e0b5e5ac921f95e0e72884ee268f96a3599" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{type,&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#type-type&quot;&gt;type()&lt;/a&gt;&lt;/code&gt;&lt;code&gt;}&lt;/code&gt; - The table type. Defaults to &lt;code&gt;set&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{type,&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#type-type&quot;&gt;type()&lt;/a&gt;&lt;/code&gt; &lt;code&gt;}&lt;/code&gt; - Тип таблицы. По умолчанию &lt;code&gt;set&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c08648a67b6314ee79d4b3c3b7b33303a2238f50" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{unique_all, true}&lt;/code&gt; adds a &lt;code&gt;{unique,&amp;nbsp;true}&lt;/code&gt; option to every list expression of the query. Defaults to &lt;code&gt;{unique_all,&amp;nbsp;false}&lt;/code&gt;. Option &lt;code&gt;unique_all&lt;/code&gt; is equivalent to &lt;code&gt;{unique_all,&amp;nbsp;true}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{unique_all, true}&lt;/code&gt; добавляет параметр &lt;code&gt;{unique,&amp;nbsp;true}&lt;/code&gt; к каждому выражению списка запроса. По умолчанию &lt;code&gt;{unique_all,&amp;nbsp;false}&lt;/code&gt; . Опция &lt;code&gt;unique_all&lt;/code&gt; эквивалентна &lt;code&gt;{unique_all,&amp;nbsp;true}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f6ecb3a5738f399703bfa84defda3f860aa72974" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{user, integer()}&lt;/code&gt; - The manager will send response (acknowledgment) to inform-request messages when the &lt;code&gt;&lt;a href=&quot;snmpm_user#handle_inform&quot;&gt;handle_inform&lt;/a&gt;&lt;/code&gt; function completes. The integer is the time, in milli-seconds, that the manager will consider the stored inform-request info valid.</source>
          <target state="translated">&lt;code&gt;{user, integer()}&lt;/code&gt; - Менеджер отправит ответ (подтверждение) на сообщения с информационным запросом, когда функция &lt;code&gt;&lt;a href=&quot;snmpm_user#handle_inform&quot;&gt;handle_inform&lt;/a&gt;&lt;/code&gt; завершится. Целое число - это время в миллисекундах, в течение которого менеджер будет считать сохраненную информацию информационного запроса действительной.</target>
        </trans-unit>
        <trans-unit id="20dd0d0e6b16c322e326522c5f27fff9cf7fe12e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{value, Value}&lt;/code&gt;. The &lt;code&gt;Value&lt;/code&gt; must be of correct type, length and within ranges, otherwise &lt;code&gt;genErr&lt;/code&gt; is returned in the response PDU. If the object is an enumerated integer, the symbolic enum value may be used (as an atom). If the object is of type BITS, the return value shall be an integer or a list of bits that are set.</source>
          <target state="translated">&lt;code&gt;{value, Value}&lt;/code&gt; . &lt;code&gt;Value&lt;/code&gt; должно быть правильного типа, длины и в пределах диапазонов, в противном случае &lt;code&gt;genErr&lt;/code&gt; возвращается в PDU ответа. Если объект представляет собой пронумерованное целое число, может использоваться символическое значение перечисления (как атом). Если объект имеет тип BITS, возвращаемое значение должно быть целым числом или списком установленных битов.</target>
        </trans-unit>
        <trans-unit id="fab20d7063ea6c7739c32da38b75b8c52aedb4fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{value, Value}&lt;/code&gt;. The &lt;code&gt;Value&lt;/code&gt; must be of correct type, length and within ranges, otherwise &lt;code&gt;genErr&lt;/code&gt; is returned in the response PDU. If the object is an enumerated integer, the symbolic enum value may be used as an atom. If the object is of type BITS, the return value shall be an integer or a list of bits that are set.</source>
          <target state="translated">&lt;code&gt;{value, Value}&lt;/code&gt; . &lt;code&gt;Value&lt;/code&gt; должно быть правильного типа, длины и в пределах диапазонов, в противном случае &lt;code&gt;genErr&lt;/code&gt; возвращается в PDU ответа. Если объект представляет собой пронумерованное целое число, символическое значение перечисления может использоваться как атом. Если объект имеет тип BITS, возвращаемое значение должно быть целым числом или списком установленных битов.</target>
        </trans-unit>
        <trans-unit id="3e4715503e7598b10eb7c577ca59039c7b886250" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{verify,false}&lt;/code&gt; is the default.</source>
          <target state="translated">&lt;code&gt;{verify,false}&lt;/code&gt; - значение по умолчанию.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
