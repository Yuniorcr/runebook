<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="crystal">
    <body>
      <group id="crystal">
        <trans-unit id="54295fc1f2d4407baf17ac3ab214e694b11b0898" translate="yes" xml:space="preserve">
          <source>64#to_i128!</source>
          <target state="translated">64#to_i128!</target>
        </trans-unit>
        <trans-unit id="1543ba77ce1b2c2be74132a559036f822ddd0d17" translate="yes" xml:space="preserve">
          <source>64#to_i16</source>
          <target state="translated">64#to_i16</target>
        </trans-unit>
        <trans-unit id="ec875bb5acc16d934311f5482808f7a2c7193b22" translate="yes" xml:space="preserve">
          <source>64#to_i16!</source>
          <target state="translated">64#to_i16!</target>
        </trans-unit>
        <trans-unit id="f31f5426ef8b5ccfb7c7a925eb658c72029be6d7" translate="yes" xml:space="preserve">
          <source>64#to_i32</source>
          <target state="translated">64#to_i32</target>
        </trans-unit>
        <trans-unit id="df44f568b55a2fba204831e974094ccc4a640193" translate="yes" xml:space="preserve">
          <source>64#to_i32!</source>
          <target state="translated">64#to_i32!</target>
        </trans-unit>
        <trans-unit id="8669ff72588d2a60340f1a42d838db13e7bd11a1" translate="yes" xml:space="preserve">
          <source>64#to_i64</source>
          <target state="translated">64#to_i64</target>
        </trans-unit>
        <trans-unit id="3f042a32c56caf91339372942851ae8b9555d39e" translate="yes" xml:space="preserve">
          <source>64#to_i64!</source>
          <target state="translated">64#to_i64!</target>
        </trans-unit>
        <trans-unit id="bfa9bd59b779c06d45e6fe1d952b74826f64e86a" translate="yes" xml:space="preserve">
          <source>64#to_i8</source>
          <target state="translated">64#to_i8</target>
        </trans-unit>
        <trans-unit id="17ba9967dc176ad3f39a52907ada6fa80a2ee53e" translate="yes" xml:space="preserve">
          <source>64#to_i8!</source>
          <target state="translated">64#to_i8!</target>
        </trans-unit>
        <trans-unit id="72774ce2148312d84421749be8177e8b39fa0ce5" translate="yes" xml:space="preserve">
          <source>64#to_s</source>
          <target state="translated">64#to_s</target>
        </trans-unit>
        <trans-unit id="ac8c9d972496c24ee03b0b9f4422c64ce19d7f4a" translate="yes" xml:space="preserve">
          <source>64#to_u</source>
          <target state="translated">64#to_u</target>
        </trans-unit>
        <trans-unit id="e8f4cc0f6100484ac85bd63c2a7ab24e2c3b6cbd" translate="yes" xml:space="preserve">
          <source>64#to_u!</source>
          <target state="translated">64#to_u!</target>
        </trans-unit>
        <trans-unit id="6667328143d2d3e5930508090907fa38b1dff196" translate="yes" xml:space="preserve">
          <source>64#to_u128</source>
          <target state="translated">64#to_u128</target>
        </trans-unit>
        <trans-unit id="06c06a2e7c267b8f9a941d4c1f0bab2856f532bf" translate="yes" xml:space="preserve">
          <source>64#to_u128!</source>
          <target state="translated">64#to_u128!</target>
        </trans-unit>
        <trans-unit id="a6cd0d9c7ce7f3e095968d2c73734d620939e11e" translate="yes" xml:space="preserve">
          <source>64#to_u16</source>
          <target state="translated">64#to_u16</target>
        </trans-unit>
        <trans-unit id="6d2eb254539fe38f8f68aaae421b58006036d3d0" translate="yes" xml:space="preserve">
          <source>64#to_u16!</source>
          <target state="translated">64#to_u16!</target>
        </trans-unit>
        <trans-unit id="eb009dccfd4e5dddc10732ea24e21959ed058e4a" translate="yes" xml:space="preserve">
          <source>64#to_u32</source>
          <target state="translated">64#to_u32</target>
        </trans-unit>
        <trans-unit id="430543d1a09f70401a3ddc1a0cc6e2cb510d1c55" translate="yes" xml:space="preserve">
          <source>64#to_u32!</source>
          <target state="translated">64#to_u32!</target>
        </trans-unit>
        <trans-unit id="d0ae544b4bf204bd13119ea85814e3c6f4e27172" translate="yes" xml:space="preserve">
          <source>64#to_u64</source>
          <target state="translated">64#to_u64</target>
        </trans-unit>
        <trans-unit id="ce70add0aa2b0e86949fd9a28c4b194de5bd6e97" translate="yes" xml:space="preserve">
          <source>64#to_u64!</source>
          <target state="translated">64#to_u64!</target>
        </trans-unit>
        <trans-unit id="f652b69eb221fb0dc0845dc811bf25aafe75f2fc" translate="yes" xml:space="preserve">
          <source>64#to_u8</source>
          <target state="translated">64#to_u8</target>
        </trans-unit>
        <trans-unit id="480c026767155cee7432771a1665ba3061d9713e" translate="yes" xml:space="preserve">
          <source>64#to_u8!</source>
          <target state="translated">64#to_u8!</target>
        </trans-unit>
        <trans-unit id="974a9317c3e65e5155abf8bae8d0b966b59c81a9" translate="yes" xml:space="preserve">
          <source>64#trailing_zeros_count</source>
          <target state="translated">64#trailing_zeros_count</target>
        </trans-unit>
        <trans-unit id="d7ebb427cb07eb93fbd65662f354e16841a4673a" translate="yes" xml:space="preserve">
          <source>64#trunc</source>
          <target state="translated">64#trunc</target>
        </trans-unit>
        <trans-unit id="0f26b8c28cab948a6238073aefa1942d1d520069" translate="yes" xml:space="preserve">
          <source>64#unsafe_chr</source>
          <target state="translated">64#unsafe_chr</target>
        </trans-unit>
        <trans-unit id="bb90da14972bc7a17a0842abfbdc9e025d51e279" translate="yes" xml:space="preserve">
          <source>64.from_json_object_key?</source>
          <target state="translated">64.from_json_object_key?</target>
        </trans-unit>
        <trans-unit id="06e0c0ac5d077e19f08ffa19aa15e3d8b5c929c7" translate="yes" xml:space="preserve">
          <source>64.new</source>
          <target state="translated">64.new</target>
        </trans-unit>
        <trans-unit id="88e0af1fe995eb78785f025a11b3d96a4aff8c79" translate="yes" xml:space="preserve">
          <source>64.new!</source>
          <target state="translated">64.new!</target>
        </trans-unit>
        <trans-unit id="6e3256d5b94e333e528701f4d1a59ebd44d3891a" translate="yes" xml:space="preserve">
          <source>7. Using an &lt;code&gt;out&lt;/code&gt; lib expression</source>
          <target state="translated">7. Использование выражения &lt;code&gt;out&lt;/code&gt; lib</target>
        </trans-unit>
        <trans-unit id="9814036e919370d0f7b028796b86c928ee836d0d" translate="yes" xml:space="preserve">
          <source>8#&amp;amp;</source>
          <target state="translated">8#&amp;amp;</target>
        </trans-unit>
        <trans-unit id="080afc5d7d3e429be8cd22933292fbfd58bc569d" translate="yes" xml:space="preserve">
          <source>8#&amp;amp;*</source>
          <target state="translated">8#&amp;amp;*</target>
        </trans-unit>
        <trans-unit id="50906057386b92e5109f9384d8d70e5dc661cf9f" translate="yes" xml:space="preserve">
          <source>8#&amp;amp;+</source>
          <target state="translated">8#&amp;amp;+</target>
        </trans-unit>
        <trans-unit id="5e00bb28da81ea0b8d8a811ca99af16adee1e9d4" translate="yes" xml:space="preserve">
          <source>8#&amp;amp;-</source>
          <target state="translated">8#&amp;amp;-</target>
        </trans-unit>
        <trans-unit id="fef4f15145248a5902dd65ba0447be4a0db50629" translate="yes" xml:space="preserve">
          <source>8#&amp;gt;</source>
          <target state="translated">8#&amp;gt;</target>
        </trans-unit>
        <trans-unit id="09b574959b897aeb316832d34430e84f9f2a22c6" translate="yes" xml:space="preserve">
          <source>8#&amp;gt;=</source>
          <target state="translated">8#&amp;gt;=</target>
        </trans-unit>
        <trans-unit id="95666984c077637db4c0489b1ea625b726e10e7e" translate="yes" xml:space="preserve">
          <source>8#&amp;lt;</source>
          <target state="translated">8#&amp;lt;</target>
        </trans-unit>
        <trans-unit id="9cac8a83b62b5aff72c72602f4a4fa03a596506e" translate="yes" xml:space="preserve">
          <source>8#&amp;lt;=</source>
          <target state="translated">8#&amp;lt;=</target>
        </trans-unit>
        <trans-unit id="b301f5fdea7cf0e84260fb71c2d774e3fa811d78" translate="yes" xml:space="preserve">
          <source>8#clone</source>
          <target state="translated">8#clone</target>
        </trans-unit>
        <trans-unit id="9a00a79a35ab390bfca1400a8a21adac7557341d" translate="yes" xml:space="preserve">
          <source>8#leading_zeros_count</source>
          <target state="translated">8#leading_zeros_count</target>
        </trans-unit>
        <trans-unit id="5a0b052448ba04ab800a022604530101eda1ee8e" translate="yes" xml:space="preserve">
          <source>8#popcount</source>
          <target state="translated">8#popcount</target>
        </trans-unit>
        <trans-unit id="a09baffc4c348428469f251ca2c832bbdfd5a4cc" translate="yes" xml:space="preserve">
          <source>8#to_f</source>
          <target state="translated">8#to_f</target>
        </trans-unit>
        <trans-unit id="41229145c7e65c1cf9b04693cfa27183f1ed3fd8" translate="yes" xml:space="preserve">
          <source>8#to_f!</source>
          <target state="translated">8#to_f!</target>
        </trans-unit>
        <trans-unit id="0564d09241b345bd0fba07c4a5ca86cec0c1b480" translate="yes" xml:space="preserve">
          <source>8#to_f32</source>
          <target state="translated">8#to_f32</target>
        </trans-unit>
        <trans-unit id="4dab2b92c27a88dcd43bd738c509112a149d4e45" translate="yes" xml:space="preserve">
          <source>8#to_f32!</source>
          <target state="translated">8#to_f32!</target>
        </trans-unit>
        <trans-unit id="7f032e583202c69c3fdc3b0111a806d239f1ebfe" translate="yes" xml:space="preserve">
          <source>8#to_f64</source>
          <target state="translated">8#to_f64</target>
        </trans-unit>
        <trans-unit id="058387fd0e594e76c7974ab4f88e5b66fe52d223" translate="yes" xml:space="preserve">
          <source>8#to_f64!</source>
          <target state="translated">8#to_f64!</target>
        </trans-unit>
        <trans-unit id="566455b5a5a3ffd1e4adf28df1d50b06406944a9" translate="yes" xml:space="preserve">
          <source>8#to_i</source>
          <target state="translated">8#to_i</target>
        </trans-unit>
        <trans-unit id="bcff574208f577b89db69b88e318dc3eca358772" translate="yes" xml:space="preserve">
          <source>8#to_i!</source>
          <target state="translated">8#to_i!</target>
        </trans-unit>
        <trans-unit id="b0cace6f7b6f544aa54ebe7079f294bf835c79ca" translate="yes" xml:space="preserve">
          <source>8#to_i128</source>
          <target state="translated">8#to_i128</target>
        </trans-unit>
        <trans-unit id="40b9e6c9fbd0c07a61ca9482dbeeab5ebb4bb0d6" translate="yes" xml:space="preserve">
          <source>8#to_i128!</source>
          <target state="translated">8#to_i128!</target>
        </trans-unit>
        <trans-unit id="fad09f6aba80ec0e3db8fee93b97925c7af536aa" translate="yes" xml:space="preserve">
          <source>8#to_i16</source>
          <target state="translated">8#to_i16</target>
        </trans-unit>
        <trans-unit id="8b449344663931daa7bbe67d5308a507928b3568" translate="yes" xml:space="preserve">
          <source>8#to_i16!</source>
          <target state="translated">8#to_i16!</target>
        </trans-unit>
        <trans-unit id="cb347f0466bc5d241df28df4d97b1d917eee35ca" translate="yes" xml:space="preserve">
          <source>8#to_i32</source>
          <target state="translated">8#to_i32</target>
        </trans-unit>
        <trans-unit id="4753ac49c5415030aa9e2f305a1c9d7dd1209680" translate="yes" xml:space="preserve">
          <source>8#to_i32!</source>
          <target state="translated">8#to_i32!</target>
        </trans-unit>
        <trans-unit id="96726a53ed245718ad8622b3c218a739e5c0408e" translate="yes" xml:space="preserve">
          <source>8#to_i64</source>
          <target state="translated">8#to_i64</target>
        </trans-unit>
        <trans-unit id="aff32b1e3a71240992c6dc1d92fd331c5cb48eec" translate="yes" xml:space="preserve">
          <source>8#to_i64!</source>
          <target state="translated">8#to_i64!</target>
        </trans-unit>
        <trans-unit id="176e283da0d05986da9406a4a5b07eabd4310735" translate="yes" xml:space="preserve">
          <source>8#to_i8</source>
          <target state="translated">8#to_i8</target>
        </trans-unit>
        <trans-unit id="1a8262879dd352bc50a085a0978e89e88a54b18a" translate="yes" xml:space="preserve">
          <source>8#to_i8!</source>
          <target state="translated">8#to_i8!</target>
        </trans-unit>
        <trans-unit id="3dd19d145713456b940e25ac2d21c4f03ab58b4a" translate="yes" xml:space="preserve">
          <source>8#to_u</source>
          <target state="translated">8#to_u</target>
        </trans-unit>
        <trans-unit id="7dbb06bf9c7110208096317b49ec7f26d0a3c529" translate="yes" xml:space="preserve">
          <source>8#to_u!</source>
          <target state="translated">8#to_u!</target>
        </trans-unit>
        <trans-unit id="53fcea69cb397cf3094fc2bfce48f3f7324b6f03" translate="yes" xml:space="preserve">
          <source>8#to_u128</source>
          <target state="translated">8#to_u128</target>
        </trans-unit>
        <trans-unit id="adad134c4661d00e4e947025d440c7db0f048ca3" translate="yes" xml:space="preserve">
          <source>8#to_u128!</source>
          <target state="translated">8#to_u128!</target>
        </trans-unit>
        <trans-unit id="595527244b85b70b9c7b6bc7083c2b47c0608a1c" translate="yes" xml:space="preserve">
          <source>8#to_u16</source>
          <target state="translated">8#to_u16</target>
        </trans-unit>
        <trans-unit id="43481b574cccc1385a591a91479f4bcad0105bb1" translate="yes" xml:space="preserve">
          <source>8#to_u16!</source>
          <target state="translated">8#to_u16!</target>
        </trans-unit>
        <trans-unit id="da995e7378b063ba9c1b9379e269afcdd8985259" translate="yes" xml:space="preserve">
          <source>8#to_u32</source>
          <target state="translated">8#to_u32</target>
        </trans-unit>
        <trans-unit id="33c71b3aff1a714263cfd95adf2246b4cb7b6870" translate="yes" xml:space="preserve">
          <source>8#to_u32!</source>
          <target state="translated">8#to_u32!</target>
        </trans-unit>
        <trans-unit id="ba3f11cf866f27a2aa3c220ccab97f2f1bf4a25a" translate="yes" xml:space="preserve">
          <source>8#to_u64</source>
          <target state="translated">8#to_u64</target>
        </trans-unit>
        <trans-unit id="3f23ae5983b0f1440d4cfb3d978b8c93a5e27add" translate="yes" xml:space="preserve">
          <source>8#to_u64!</source>
          <target state="translated">8#to_u64!</target>
        </trans-unit>
        <trans-unit id="317dc8c5ab618c9a055f85c4f3f62621d9e21089" translate="yes" xml:space="preserve">
          <source>8#to_u8</source>
          <target state="translated">8#to_u8</target>
        </trans-unit>
        <trans-unit id="5cfc45de5587eb21a7103ff5215d526ba737d034" translate="yes" xml:space="preserve">
          <source>8#to_u8!</source>
          <target state="translated">8#to_u8!</target>
        </trans-unit>
        <trans-unit id="7f51ad2e1f293e4c5c232126631fd654d5880cc0" translate="yes" xml:space="preserve">
          <source>8#trailing_zeros_count</source>
          <target state="translated">8#trailing_zeros_count</target>
        </trans-unit>
        <trans-unit id="eb651879ff481af45b34f1e5716275e206ba53ba" translate="yes" xml:space="preserve">
          <source>8#unsafe_chr</source>
          <target state="translated">8#unsafe_chr</target>
        </trans-unit>
        <trans-unit id="48d5495356233458c7d18056beb9c2697989e16f" translate="yes" xml:space="preserve">
          <source>8.from_json_object_key?</source>
          <target state="translated">8.from_json_object_key?</target>
        </trans-unit>
        <trans-unit id="928b11a5446732205e9f7601ace99fd4c41aefa1" translate="yes" xml:space="preserve">
          <source>8.new!</source>
          <target state="translated">8.new!</target>
        </trans-unit>
        <trans-unit id="f803a4b62207ba11c7bd81baaff99969e73c9fb0" translate="yes" xml:space="preserve">
          <source>: removes next newline</source>
          <target state="translated">: удаляет следующий перевод строки</target>
        </trans-unit>
        <trans-unit id="25ed56c93872fc6d8361aa97ad67924ee3d8291d" translate="yes" xml:space="preserve">
          <source>: removes previous indentation</source>
          <target state="translated">: удаляет предыдущий отступ</target>
        </trans-unit>
        <trans-unit id="8b176813313c518d7c8339cfe0b7f6a3400d9f47" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#crystal-build&quot;&gt;&lt;code&gt;crystal build&lt;/code&gt;&lt;/a&gt;: build an executable</source>
          <target state="translated">&lt;a href=&quot;#crystal-build&quot;&gt; &lt;code&gt;crystal build&lt;/code&gt; &lt;/a&gt; : сборка исполняемого файла</target>
        </trans-unit>
        <trans-unit id="8d5f7d5a380e626b567beb4064dc777bd97ff38e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#crystal-docs&quot;&gt;&lt;code&gt;crystal docs&lt;/code&gt;&lt;/a&gt;: generate documentation</source>
          <target state="translated">&lt;a href=&quot;#crystal-docs&quot;&gt; &lt;code&gt;crystal docs&lt;/code&gt; &lt;/a&gt; : генерировать документацию</target>
        </trans-unit>
        <trans-unit id="cc211de4588144065692ba747b67c947eae29226" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#crystal-env&quot;&gt;&lt;code&gt;crystal env&lt;/code&gt;&lt;/a&gt;: print Crystal environment information</source>
          <target state="translated">&lt;a href=&quot;#crystal-env&quot;&gt; &lt;code&gt;crystal env&lt;/code&gt; &lt;/a&gt;Crystal Env : печать информации о среде Crystal</target>
        </trans-unit>
        <trans-unit id="6d54f76b758bde501d30bce3ab6e2499216fbcc4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#crystal-eval&quot;&gt;&lt;code&gt;crystal eval&lt;/code&gt;&lt;/a&gt;: eval code from args or standard input</source>
          <target state="translated">&lt;a href=&quot;#crystal-eval&quot;&gt; &lt;code&gt;crystal eval&lt;/code&gt; &lt;/a&gt; : Eval код из аргументов или стандартного ввода</target>
        </trans-unit>
        <trans-unit id="11b1b33230e0b9ceb813865abdfa1f31cfa29021" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#crystal-init&quot;&gt;&lt;code&gt;crystal init&lt;/code&gt;&lt;/a&gt;: generate a new project</source>
          <target state="translated">&lt;a href=&quot;#crystal-init&quot;&gt; &lt;code&gt;crystal init&lt;/code&gt; &lt;/a&gt; : создать новый проект</target>
        </trans-unit>
        <trans-unit id="4e50e8f1e1f1f8fac39c6091ee6172693c43c210" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#crystal-play&quot;&gt;&lt;code&gt;crystal play&lt;/code&gt;&lt;/a&gt;: starts crystal playground server</source>
          <target state="translated">&lt;a href=&quot;#crystal-play&quot;&gt; &lt;code&gt;crystal play&lt;/code&gt; &lt;/a&gt; : запускает сервер Crystal Play</target>
        </trans-unit>
        <trans-unit id="b61d1ca339b1a50ddee6cb62f65ef98da4ef4e55" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#crystal-run&quot;&gt;&lt;code&gt;crystal run&lt;/code&gt;&lt;/a&gt;: build and run program</source>
          <target state="translated">&lt;a href=&quot;#crystal-run&quot;&gt; &lt;code&gt;crystal run&lt;/code&gt; &lt;/a&gt; : сборка и запуск программы</target>
        </trans-unit>
        <trans-unit id="cae71f66ef0667d6b05f1fff2ae75886580d7267" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#crystal-spec&quot;&gt;&lt;code&gt;crystal spec&lt;/code&gt;&lt;/a&gt;: build and run specs</source>
          <target state="translated">&lt;a href=&quot;#crystal-spec&quot;&gt; &lt;code&gt;crystal spec&lt;/code&gt; &lt;/a&gt; : создавать и запускать спецификации</target>
        </trans-unit>
        <trans-unit id="7e0de48a86ae2631dca06458068715d9ac93d6de" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#crystal-tool&quot;&gt;&lt;code&gt;crystal tool&lt;/code&gt;&lt;/a&gt;: run a compiler tool</source>
          <target state="translated">&lt;a href=&quot;#crystal-tool&quot;&gt; &lt;code&gt;crystal tool&lt;/code&gt; &lt;/a&gt; : запустить инструмент компилятора</target>
        </trans-unit>
        <trans-unit id="f5db147cbf12c10fb253318198bf02d62890c3dd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#crystal-tool-format&quot;&gt;&lt;code&gt;crystal tool format&lt;/code&gt;&lt;/a&gt;: Format Crystal files</source>
          <target state="translated">&lt;a href=&quot;#crystal-tool-format&quot;&gt; &lt;code&gt;crystal tool format&lt;/code&gt; &lt;/a&gt; Crystal: Формат файлов Crystal</target>
        </trans-unit>
        <trans-unit id="9c38301eafe4e36f05590084bb006f6a8222b65e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#crystal-version&quot;&gt;&lt;code&gt;crystal version&lt;/code&gt;&lt;/a&gt;: show version</source>
          <target state="translated">&lt;a href=&quot;#crystal-version&quot;&gt; &lt;code&gt;crystal version&lt;/code&gt; &lt;/a&gt; : показать версию</target>
        </trans-unit>
        <trans-unit id="c1dfa3f62b1d5554e22d912b794b3366ad9e5f70" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#shards-build&quot;&gt;&lt;code&gt;shards build&lt;/code&gt;&lt;/a&gt;: Builds an executable</source>
          <target state="translated">&lt;a href=&quot;#shards-build&quot;&gt; &lt;code&gt;shards build&lt;/code&gt; &lt;/a&gt; : создает исполняемый файл</target>
        </trans-unit>
        <trans-unit id="b1378068a1e85b9344373a726f39659627d0c4e3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#shards-check&quot;&gt;&lt;code&gt;shards check&lt;/code&gt;&lt;/a&gt;: Verifies dependencies are installed</source>
          <target state="translated">&lt;a href=&quot;#shards-check&quot;&gt; &lt;code&gt;shards check&lt;/code&gt; &lt;/a&gt; : проверяет, установлены ли зависимости</target>
        </trans-unit>
        <trans-unit id="c87153b4988663265d62e2d9bc59c23178a76128" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#shards-init&quot;&gt;&lt;code&gt;shards init&lt;/code&gt;&lt;/a&gt;: Generates a new &lt;code&gt;shard.yml&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;#shards-init&quot;&gt; &lt;code&gt;shards init&lt;/code&gt; &lt;/a&gt; : генерирует новый &lt;code&gt;shard.yml&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e3f7a4d352103534b338e31a60a8addc2cba7c40" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#shards-install&quot;&gt;&lt;code&gt;shards install&lt;/code&gt;&lt;/a&gt;: Resolves and installs dependencies</source>
          <target state="translated">&lt;a href=&quot;#shards-install&quot;&gt; &lt;code&gt;shards install&lt;/code&gt; &lt;/a&gt; : разрешает и устанавливает зависимости</target>
        </trans-unit>
        <trans-unit id="35badb55d781d673d34d32b6f1bb4433bf2d0468" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#shards-list&quot;&gt;&lt;code&gt;shards list&lt;/code&gt;&lt;/a&gt;: Lists installed dependencies</source>
          <target state="translated">&lt;a href=&quot;#shards-list&quot;&gt; &lt;code&gt;shards list&lt;/code&gt; &lt;/a&gt; : список установленных зависимостей</target>
        </trans-unit>
        <trans-unit id="e7df6b64cea9905198158f86be0c2f697af0ef03" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#shards-prune&quot;&gt;&lt;code&gt;shards prune&lt;/code&gt;&lt;/a&gt;: Removes unused dependencies</source>
          <target state="translated">&lt;a href=&quot;#shards-prune&quot;&gt; &lt;code&gt;shards prune&lt;/code&gt; &lt;/a&gt; : удаляет неиспользуемые зависимости</target>
        </trans-unit>
        <trans-unit id="7c93bbe21debd67bfeea4256350ef0db1ae667b2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#shards-update&quot;&gt;&lt;code&gt;shards update&lt;/code&gt;&lt;/a&gt;: Resolves and updates dependencies</source>
          <target state="translated">&lt;a href=&quot;#shards-update&quot;&gt; &lt;code&gt;shards update&lt;/code&gt; &lt;/a&gt; : устраняет и обновляет зависимости</target>
        </trans-unit>
        <trans-unit id="7f697c70339bc8ee7b8777f1441e5da3500d3ede" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#shards-version&quot;&gt;&lt;code&gt;shards version&lt;/code&gt;&lt;/a&gt;: Shows version of a shard</source>
          <target state="translated">&lt;a href=&quot;#shards-version&quot;&gt; &lt;code&gt;shards version&lt;/code&gt; &lt;/a&gt; : показывает версию осколка</target>
        </trans-unit>
        <trans-unit id="6c5260a8524b0cf44e87e69c5f66e4093ebc65e7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../../comparable#%3C(other:T)-instance-method&quot;&gt;  &amp;lt;&lt;/a&gt;, &lt;a href=&quot;../../../comparable#%3C=(other:T)-instance-method&quot;&gt; &amp;lt;=(other : T) &amp;lt;=&lt;/a&gt;, &lt;a href=&quot;../../../comparable#(other:T)-instance-method&quot;&gt; &amp;lt;=&amp;gt;(other : T) &amp;lt;=&amp;gt;&lt;/a&gt;, &lt;a href=&quot;../../../comparable#==(other:T)-instance-method&quot;&gt; ==(other : T) ==&lt;/a&gt;, &lt;a href=&quot;../../../comparable#%3E(other:T)-instance-method&quot;&gt; &amp;gt;(other : T) &amp;gt;&lt;/a&gt;, &lt;a href=&quot;../../../comparable#%3E=(other:T)-instance-method&quot;&gt; &amp;gt;=(other : T) &amp;gt;=&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../../comparable#%3C(other:T)-instance-method&quot;&gt; &amp;lt;&lt;/a&gt; , &lt;a href=&quot;../../../comparable#%3C=(other:T)-instance-method&quot;&gt;&amp;lt;= (другое: T) &amp;lt;=&lt;/a&gt; , &lt;a href=&quot;../../../comparable#(other:T)-instance-method&quot;&gt;&amp;lt;=&amp;gt; (другое: T) &amp;lt;=&amp;gt;&lt;/a&gt; , &lt;a href=&quot;../../../comparable#==(other:T)-instance-method&quot;&gt;== (другое: T) ==&lt;/a&gt; , &lt;a href=&quot;../../../comparable#%3E(other:T)-instance-method&quot;&gt;&amp;gt; (другое: T)&amp;gt;&lt;/a&gt; , &lt;a href=&quot;../../../comparable#%3E=(other:T)-instance-method&quot;&gt;&amp;gt; = (другое: T)&amp;gt; знак равно&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d732f0766aedce6d335d15079976b56c3310bd9e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../../enum#&amp;amp;(other:self)-instance-method&quot;&gt; &amp;amp;(other : self) &amp;amp;&lt;/a&gt;, &lt;a href=&quot;../../../enum#+(other:Int)-instance-method&quot;&gt; +(other : Int) +&lt;/a&gt;, &lt;a href=&quot;../../../enum#-(other:Int)-instance-method&quot;&gt; -(other : Int) -&lt;/a&gt;, &lt;a href=&quot;../../../enum#(other:self)-instance-method&quot;&gt; &amp;lt;=&amp;gt;(other : self) &amp;lt;=&amp;gt;&lt;/a&gt;, &lt;a href=&quot;../../../enum#==(other:self)-instance-method&quot;&gt; ==(other : self) ==&lt;/a&gt;, &lt;a href=&quot;../../../enum#%5E(other:self)-instance-method&quot;&gt; ^(other : self) ^&lt;/a&gt;, &lt;a href=&quot;../../../enum#clone-instance-method&quot;&gt; clone clone&lt;/a&gt;, &lt;a href=&quot;../../../enum#each(&amp;amp;block)-instance-method&quot;&gt; each(&amp;amp;block) each&lt;/a&gt;, &lt;a href=&quot;../../../enum#hash(hasher)-instance-method&quot;&gt; hash(hasher) hash&lt;/a&gt;, &lt;a href=&quot;../../../enum#includes?(other:self)-instance-method&quot;&gt; includes?(other : self) includes?&lt;/a&gt;, &lt;a href=&quot;../../../enum#to_f32:Float32-instance-method&quot;&gt; to_f32 : Float32 to_f32&lt;/a&gt;, &lt;a href=&quot;../../../enum#to_f32!:Float32-instance-method&quot;&gt; to_f32! : Float32 to_f32!&lt;/a&gt;, &lt;a href=&quot;../../../enum#to_f64:Float64-instance-method&quot;&gt; to_f64 : Float64 to_f64&lt;/a&gt;, &lt;a href=&quot;../../../enum#to_f64!:Float64-instance-method&quot;&gt; to_f64! : Float64 to_f64!&lt;/a&gt;, &lt;a href=&quot;../../../enum#to_i:Int32-instance-method&quot;&gt; to_i : Int32 to_i&lt;/a&gt;, &lt;a href=&quot;../../../enum#to_i16:Int16-instance-method&quot;&gt; to_i16 : Int16 to_i16&lt;/a&gt;, &lt;a href=&quot;../../../enum#to_i16!:Int16-instance-method&quot;&gt; to_i16! : Int16 to_i16!&lt;/a&gt;, &lt;a href=&quot;../../../enum#to_i32:Int32-instance-method&quot;&gt; to_i32 : Int32 to_i32&lt;/a&gt;, &lt;a href=&quot;../../../enum#to_i32!:Int32-instance-method&quot;&gt; to_i32! : Int32 to_i32!&lt;/a&gt;, &lt;a href=&quot;../../../enum#to_i64:Int64-instance-method&quot;&gt; to_i64 : Int64 to_i64&lt;/a&gt;, &lt;a href=&quot;../../../enum#to_i64!:Int64-instance-method&quot;&gt; to_i64! : Int64 to_i64!&lt;/a&gt;, &lt;a href=&quot;../../../enum#to_i8:Int8-instance-method&quot;&gt; to_i8 : Int8 to_i8&lt;/a&gt;, &lt;a href=&quot;../../../enum#to_i8!:Int8-instance-method&quot;&gt; to_i8! : Int8 to_i8!&lt;/a&gt;, &lt;a href=&quot;../../../enum#to_json(json:JSON::Builder)-instance-method&quot;&gt; to_json(json : JSON::Builder) to_json&lt;/a&gt;, &lt;a href=&quot;../../../enum#to_s(io:IO):Nil-instance-method&quot;&gt; to_s(io : IO) : Nil&lt;br/&gt;to_s : String to_s&lt;/a&gt;, &lt;a href=&quot;../../../enum#to_u16:UInt16-instance-method&quot;&gt; to_u16 : UInt16 to_u16&lt;/a&gt;, &lt;a href=&quot;../../../enum#to_u16!:UInt16-instance-method&quot;&gt; to_u16! : UInt16 to_u16!&lt;/a&gt;, &lt;a href=&quot;../../../enum#to_u32:UInt32-instance-method&quot;&gt; to_u32 : UInt32 to_u32&lt;/a&gt;, &lt;a href=&quot;../../../enum#to_u32!:UInt32-instance-method&quot;&gt; to_u32! : UInt32 to_u32!&lt;/a&gt;, &lt;a href=&quot;../../../enum#to_u64:UInt64-instance-method&quot;&gt; to_u64 : UInt64 to_u64&lt;/a&gt;, &lt;a href=&quot;../../../enum#to_u64!:UInt64-instance-method&quot;&gt; to_u64! : UInt64 to_u64!&lt;/a&gt;, &lt;a href=&quot;../../../enum#to_u8:UInt8-instance-method&quot;&gt; to_u8 : UInt8 to_u8&lt;/a&gt;, &lt;a href=&quot;../../../enum#to_u8!:UInt8-instance-method&quot;&gt; to_u8! : UInt8 to_u8!&lt;/a&gt;, &lt;a href=&quot;../../../enum#to_yaml(yaml:YAML::Nodes::Builder)-instance-method&quot;&gt; to_yaml(yaml : YAML::Nodes::Builder) to_yaml&lt;/a&gt;, &lt;a href=&quot;../../../enum#%7C(other:self)-instance-method&quot;&gt; |(other : self) |&lt;/a&gt;, &lt;a href=&quot;../../../enum#~-instance-method&quot;&gt; ~ ~&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../../enum#&amp;amp;(other:self)-instance-method&quot;&gt;&amp;amp; (другое: self) &amp;amp;&lt;/a&gt; , &lt;a href=&quot;../../../enum#+(other:Int)-instance-method&quot;&gt;+ (другое: Int) +&lt;/a&gt; , &lt;a href=&quot;../../../enum#-(other:Int)-instance-method&quot;&gt;- (другое: Int) -&lt;/a&gt; , &lt;a href=&quot;../../../enum#(other:self)-instance-method&quot;&gt;&amp;lt;=&amp;gt; (другое: self) &amp;lt;=&amp;gt;&lt;/a&gt; , &lt;a href=&quot;../../../enum#==(other:self)-instance-method&quot;&gt;== (другое: self) ==&lt;/a&gt; , &lt;a href=&quot;../../../enum#%5E(other:self)-instance-method&quot;&gt;^ (other: self) ^&lt;/a&gt; , &lt;a href=&quot;../../../enum#clone-instance-method&quot;&gt;clone clone&lt;/a&gt; , &lt;a href=&quot;../../../enum#each(&amp;amp;block)-instance-method&quot;&gt;каждый (&amp;amp; block) каждый&lt;/a&gt; , &lt;a href=&quot;../../../enum#hash(hasher)-instance-method&quot;&gt;hash (hasher) hash&lt;/a&gt; , &lt;a href=&quot;../../../enum#includes?(other:self)-instance-method&quot;&gt;включает? (other: self) включает?&lt;/a&gt; , &lt;a href=&quot;../../../enum#to_f32:Float32-instance-method&quot;&gt;to_f32: Float32 to_f32&lt;/a&gt; , &lt;a href=&quot;../../../enum#to_f32!:Float32-instance-method&quot;&gt;to_f32! : Float32 to_f32!&lt;/a&gt; , &lt;a href=&quot;../../../enum#to_f64:Float64-instance-method&quot;&gt;to_f64: Float64 to_f64&lt;/a&gt; , &lt;a href=&quot;../../../enum#to_f64!:Float64-instance-method&quot;&gt;to_f64! : Float64 to_f64!&lt;/a&gt; , &lt;a href=&quot;../../../enum#to_i:Int32-instance-method&quot;&gt;to_i: Int32 to_i&lt;/a&gt; , &lt;a href=&quot;../../../enum#to_i16:Int16-instance-method&quot;&gt;to_i16: Int16 to_i16&lt;/a&gt; , &lt;a href=&quot;../../../enum#to_i16!:Int16-instance-method&quot;&gt;to_i16! : Int16 to_i16!&lt;/a&gt; ,&lt;a href=&quot;../../../enum#to_i32:Int32-instance-method&quot;&gt;to_i32: Int32 to_i32&lt;/a&gt; , &lt;a href=&quot;../../../enum#to_i32!:Int32-instance-method&quot;&gt;to_i32! : Int32 to_i32!&lt;/a&gt; , &lt;a href=&quot;../../../enum#to_i64:Int64-instance-method&quot;&gt;to_i64: Int64 to_i64&lt;/a&gt; , &lt;a href=&quot;../../../enum#to_i64!:Int64-instance-method&quot;&gt;to_i64! : Int64 to_i64!&lt;/a&gt; , &lt;a href=&quot;../../../enum#to_i8:Int8-instance-method&quot;&gt;to_i8: Int8 to_i8&lt;/a&gt; , &lt;a href=&quot;../../../enum#to_i8!:Int8-instance-method&quot;&gt;to_i8! : Int8 to_i8!&lt;/a&gt; , &lt;a href=&quot;../../../enum#to_json(json:JSON::Builder)-instance-method&quot;&gt;to_json (json: JSON :: Builder) to_json&lt;/a&gt; , &lt;a href=&quot;../../../enum#to_s(io:IO):Nil-instance-method&quot;&gt;to_s (io: IO): ноль &lt;br/&gt;to_s: строка to_s&lt;/a&gt; , &lt;a href=&quot;../../../enum#to_u16:UInt16-instance-method&quot;&gt;to_u16: UInt16 to_u16&lt;/a&gt; , &lt;a href=&quot;../../../enum#to_u16!:UInt16-instance-method&quot;&gt;to_u16! : UInt16 to_u16!&lt;/a&gt; , &lt;a href=&quot;../../../enum#to_u32:UInt32-instance-method&quot;&gt;to_u32: UInt32 to_u32&lt;/a&gt; , &lt;a href=&quot;../../../enum#to_u32!:UInt32-instance-method&quot;&gt;to_u32! : UInt32 to_u32!&lt;/a&gt; , &lt;a href=&quot;../../../enum#to_u64:UInt64-instance-method&quot;&gt;to_u64: UInt64 to_u64&lt;/a&gt; , &lt;a href=&quot;../../../enum#to_u64!:UInt64-instance-method&quot;&gt;to_u64! : UInt64 to_u64!&lt;/a&gt; , &lt;a href=&quot;../../../enum#to_u8:UInt8-instance-method&quot;&gt;to_u8: UInt8 to_u8&lt;/a&gt; , &lt;a href=&quot;../../../enum#to_u8!:UInt8-instance-method&quot;&gt;to_u8! : UInt8 to_u8!&lt;/a&gt; ,&lt;a href=&quot;../../../enum#to_yaml(yaml:YAML::Nodes::Builder)-instance-method&quot;&gt;to_yaml (yaml: YAML :: Nodes :: Builder) to_yaml&lt;/a&gt; , &lt;a href=&quot;../../../enum#%7C(other:self)-instance-method&quot;&gt;| (другое: self) | &lt;/a&gt;, &lt;a href=&quot;../../../enum#~-instance-method&quot;&gt;~ ~&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0412e72b0b488baece88b1e9b5f342bbe70d418a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../../enum#each(&amp;amp;block)-class-method&quot;&gt; each(&amp;amp;block) each&lt;/a&gt;, &lt;a href=&quot;../../../enum#names:Array(String)-class-method&quot;&gt; names : Array(String) names&lt;/a&gt;, &lt;a href=&quot;../../../enum#values:Array(self)-class-method&quot;&gt; values : Array(self) values&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../../enum#each(&amp;amp;block)-class-method&quot;&gt;каждый (&amp;amp; блок) каждый&lt;/a&gt; , &lt;a href=&quot;../../../enum#names:Array(String)-class-method&quot;&gt;имена: имена массивов (строк)&lt;/a&gt; , &lt;a href=&quot;../../../enum#values:Array(self)-class-method&quot;&gt;значения: значения массивов (себя)&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e3aac389f7041fe058b248d0178adbab3ce6ec30" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../../enum#from_value(value:Int):self-class-method&quot;&gt; from_value(value : Int) : self from_value&lt;/a&gt;, &lt;a href=&quot;../../../enum#from_value?(value:Int):self?-class-method&quot;&gt; from_value?(value : Int) : self? from_value?&lt;/a&gt;, &lt;a href=&quot;../../../enum#new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method&quot;&gt; new(ctx : YAML::ParseContext, node : YAML::Nodes::Node)&lt;br/&gt;new(pull : JSON::PullParser) new&lt;/a&gt;, &lt;a href=&quot;../../../enum#parse(string:String):self-class-method&quot;&gt; parse(string : String) : self parse&lt;/a&gt;, &lt;a href=&quot;../../../enum#parse?(string:String):self?-class-method&quot;&gt; parse?(string : String) : self? parse?&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../../enum#from_value(value:Int):self-class-method&quot;&gt;from_value (значение: Int): self from_value&lt;/a&gt; , &lt;a href=&quot;../../../enum#from_value?(value:Int):self?-class-method&quot;&gt;from_value? (значение: Int): self? from_value? &lt;/a&gt;, &lt;a href=&quot;../../../enum#new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method&quot;&gt;new (ctx: YAML :: ParseContext, узел: YAML :: Nodes :: Node) &lt;br/&gt;new (pull: JSON :: PullParser) new&lt;/a&gt; , &lt;a href=&quot;../../../enum#parse(string:String):self-class-method&quot;&gt;parse (строка: String): сам анализ&lt;/a&gt; , &lt;a href=&quot;../../../enum#parse?(string:String):self?-class-method&quot;&gt;анализ? (строка: строка): self ? разобрать?&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="23f89fa96f65bfb79941a94a7419b53faf019a4d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../../io#copy(src,dst,limit:Int):UInt64-class-method&quot;&gt; copy(src, dst, limit : Int) : UInt64&lt;br/&gt;copy(src, dst) : UInt64 copy&lt;/a&gt;, &lt;a href=&quot;../../../io#pipe(read_blocking=false,write_blocking=false):Tuple(IO::FileDescriptor,IO::FileDescriptor)-class-method&quot;&gt; pipe(read_blocking = false, write_blocking = false) : Tuple(IO::FileDescriptor, IO::FileDescriptor)&lt;br/&gt;pipe(read_blocking = false, write_blocking = false, &amp;amp;block) pipe&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../../io#copy(src,dst,limit:Int):UInt64-class-method&quot;&gt;copy (src, dst, limit: Int): UInt64 &lt;br/&gt;copy (src, dst): UInt64 copy&lt;/a&gt; , &lt;a href=&quot;../../../io#pipe(read_blocking=false,write_blocking=false):Tuple(IO::FileDescriptor,IO::FileDescriptor)-class-method&quot;&gt;pipe (read_blocking = false, write_blocking = false): Tuple (IO :: FileDescriptor, IO :: FileDescriptor) &lt;br/&gt;pipe (read_blocking = false , write_blocking = false, &amp;amp; block) pipe&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a1e8b7ce5c547f29b5685bf867f4a9865e207364" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../../io#self-instance-method&quot;&gt; &amp;lt;self &amp;lt;&amp;lt;&lt;/a&gt;, &lt;a href=&quot;../../../io#close-instance-method&quot;&gt; close close&lt;/a&gt;, &lt;a href=&quot;../../../io#closed?-instance-method&quot;&gt; closed? closed?&lt;/a&gt;, &lt;a href=&quot;../../../io#each_byte(&amp;amp;block):Nil-instance-method&quot;&gt; each_byte(&amp;amp;block) : Nil&lt;br/&gt;each_byte each_byte&lt;/a&gt;, &lt;a href=&quot;../../../io#each_char(&amp;amp;block):Nil-instance-method&quot;&gt; each_char(&amp;amp;block) : Nil&lt;br/&gt;each_char each_char&lt;/a&gt;, &lt;a href=&quot;../../../io#each_line(*args,**options,&amp;amp;block:String-%3E):Nil-instance-method&quot;&gt; each_line(*args, **options, &amp;amp;block : String -&amp;gt; ) : Nil&lt;br/&gt;each_line(*args, **options) each_line&lt;/a&gt;, &lt;a href=&quot;../../../io#encoding:String-instance-method&quot;&gt; encoding : String encoding&lt;/a&gt;, &lt;a href=&quot;../../../io#flush-instance-method&quot;&gt; flush flush&lt;/a&gt;, &lt;a href=&quot;../../../io#gets(delimiter:Char,limit:Int,chomp=false):String?-instance-method&quot;&gt; gets(delimiter : Char, limit : Int, chomp = false) : String?&lt;br/&gt;gets(delimiter : Char, chomp = false) : String?&lt;br/&gt;gets(chomp = true) : String?&lt;br/&gt;gets(limit : Int, chomp = false) : String?&lt;br/&gt;gets(delimiter : String, chomp = false) : String? gets&lt;/a&gt;, &lt;a href=&quot;../../../io#gets_to_end:String-instance-method&quot;&gt; gets_to_end : String gets_to_end&lt;/a&gt;, &lt;a href=&quot;../../../io#peek:Bytes?-instance-method&quot;&gt; peek : Bytes? peek&lt;/a&gt;, &lt;a href=&quot;../../../io#pos-instance-method&quot;&gt; pos pos&lt;/a&gt;, &lt;a href=&quot;../../../io#pos=(value)-instance-method&quot;&gt; pos=(value) pos=&lt;/a&gt;, &lt;a href=&quot;../../../io#print(*objects:UNDERSCORE):Nil-instance-method&quot;&gt; print(*objects : UNDERSCORE) : Nil&lt;br/&gt;print(obj) : Nil print&lt;/a&gt;, &lt;a href=&quot;../../../io#printf(format_string,*args):Nil-instance-method&quot;&gt; printf(format_string, *args) : Nil&lt;br/&gt;printf(format_string, args : Array | Tuple) : Nil printf&lt;/a&gt;, &lt;a href=&quot;../../../io#puts(*objects:UNDERSCORE):Nil-instance-method&quot;&gt; puts(*objects : UNDERSCORE) : Nil&lt;br/&gt;puts : Nil&lt;br/&gt;puts(obj) : Nil&lt;br/&gt;puts(string : String) : Nil puts&lt;/a&gt;, &lt;a href=&quot;../../../io#read(slice:Bytes)-instance-method&quot;&gt; read(slice : Bytes) read&lt;/a&gt;, &lt;a href=&quot;../../../io#read_at(offset,bytesize,&amp;amp;block)-instance-method&quot;&gt; read_at(offset, bytesize, &amp;amp;block) read_at&lt;/a&gt;, &lt;a href=&quot;../../../io#read_byte:UInt8?-instance-method&quot;&gt; read_byte : UInt8? read_byte&lt;/a&gt;, &lt;a href=&quot;../../../io#read_bytes(type,format:IO::ByteFormat=IO::ByteFormat::SystemEndian)-instance-method&quot;&gt; read_bytes(type, format : IO::ByteFormat = IO::ByteFormat::SystemEndian) read_bytes&lt;/a&gt;, &lt;a href=&quot;../../../io#read_char:Char?-instance-method&quot;&gt; read_char : Char? read_char&lt;/a&gt;, &lt;a href=&quot;../../../io#read_fully(slice:Bytes)-instance-method&quot;&gt; read_fully(slice : Bytes) read_fully&lt;/a&gt;, &lt;a href=&quot;../../../io#read_fully?(slice:Bytes)-instance-method&quot;&gt; read_fully?(slice : Bytes) read_fully?&lt;/a&gt;, &lt;a href=&quot;../../../io#read_line(*args,**options):String-instance-method&quot;&gt; read_line(*args, **options) : String read_line&lt;/a&gt;, &lt;a href=&quot;../../../io#read_string(bytesize:Int):String-instance-method&quot;&gt; read_string(bytesize : Int) : String read_string&lt;/a&gt;, &lt;a href=&quot;../../../io#read_utf8(slice:Bytes)-instance-method&quot;&gt; read_utf8(slice : Bytes) read_utf8&lt;/a&gt;, &lt;a href=&quot;../../../io#read_utf8_byte-instance-method&quot;&gt; read_utf8_byte read_utf8_byte&lt;/a&gt;, &lt;a href=&quot;../../../io#rewind-instance-method&quot;&gt; rewind rewind&lt;/a&gt;, &lt;a href=&quot;../../../io#seek(offset,whence:Seek=Seek::Set)-instance-method&quot;&gt; seek(offset, whence : Seek = Seek::Set) seek&lt;/a&gt;, &lt;a href=&quot;../../../io#set_encoding(encoding:String,invalid:Symbol?=nil)-instance-method&quot;&gt; set_encoding(encoding : String, invalid : Symbol? = nil) set_encoding&lt;/a&gt;, &lt;a href=&quot;../../../io#skip(bytes_count:Int):Nil-instance-method&quot;&gt; skip(bytes_count : Int) : Nil skip&lt;/a&gt;, &lt;a href=&quot;../../../io#skip_to_end:Nil-instance-method&quot;&gt; skip_to_end : Nil skip_to_end&lt;/a&gt;, &lt;a href=&quot;../../../io#tell-instance-method&quot;&gt; tell tell&lt;/a&gt;, &lt;a href=&quot;../../../io#tty?:Bool-instance-method&quot;&gt; tty? : Bool tty?&lt;/a&gt;, &lt;a href=&quot;../../../io#write(slice:Bytes):Nil-instance-method&quot;&gt; write(slice : Bytes) : Nil write&lt;/a&gt;, &lt;a href=&quot;../../../io#write_byte(byte:UInt8)-instance-method&quot;&gt; write_byte(byte : UInt8) write_byte&lt;/a&gt;, &lt;a href=&quot;../../../io#write_bytes(object,format:IO::ByteFormat=IO::ByteFormat::SystemEndian)-instance-method&quot;&gt; write_bytes(object, format : IO::ByteFormat = IO::ByteFormat::SystemEndian) write_bytes&lt;/a&gt;, &lt;a href=&quot;../../../io#write_utf8(slice:Bytes)-instance-method&quot;&gt; write_utf8(slice : Bytes) write_utf8&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../../io#self-instance-method&quot;&gt;&amp;lt;self &amp;lt;&amp;lt;&lt;/a&gt; , &lt;a href=&quot;../../../io#close-instance-method&quot;&gt;закрыть закрыть&lt;/a&gt; , &lt;a href=&quot;../../../io#closed?-instance-method&quot;&gt;закрыть? закрыто?&lt;/a&gt; , &lt;a href=&quot;../../../io#each_byte(&amp;amp;block):Nil-instance-method&quot;&gt;each_byte (&amp;amp; block): ноль &lt;br/&gt;each_byte each_byte&lt;/a&gt; , &lt;a href=&quot;../../../io#each_char(&amp;amp;block):Nil-instance-method&quot;&gt;each_char (&amp;amp; block): ноль &lt;br/&gt;each_char each_char&lt;/a&gt; , &lt;a href=&quot;../../../io#each_line(*args,**options,&amp;amp;block:String-%3E):Nil-instance-method&quot;&gt;each_line (* аргументы, ** параметры, &amp;amp; block: String -&amp;gt;): ноль &lt;br/&gt;each_line (* args, ** options) each_line&lt;/a&gt; , &lt;a href=&quot;../../../io#encoding:String-instance-method&quot;&gt;кодировка: String кодирование&lt;/a&gt; , &lt;a href=&quot;../../../io#flush-instance-method&quot;&gt;флэш-флэш&lt;/a&gt; , &lt;a href=&quot;../../../io#gets(delimiter:Char,limit:Int,chomp=false):String?-instance-method&quot;&gt;получает (разделитель: Char, предел: Int, chomp = false): String? &lt;br/&gt;получает (разделитель: Char, chomp = false): строка? &lt;br/&gt;get (chomp = true): строка? &lt;br/&gt;get (limit: Int, chomp = false): Строка? &lt;br/&gt;get (разделитель: String, chomp = false): String? получает&lt;/a&gt; ,&lt;a href=&quot;../../../io#gets_to_end:String-instance-method&quot;&gt;gets_to_end: String gets_to_end&lt;/a&gt; , &lt;a href=&quot;../../../io#peek:Bytes?-instance-method&quot;&gt;peek: байт? peek&lt;/a&gt; , &lt;a href=&quot;../../../io#pos-instance-method&quot;&gt;pos pos&lt;/a&gt; , &lt;a href=&quot;../../../io#pos=(value)-instance-method&quot;&gt;pos = (значение) pos =&lt;/a&gt; , &lt;a href=&quot;../../../io#print(*objects:UNDERSCORE):Nil-instance-method&quot;&gt;print (* объекты: UNDERSCORE): ноль &lt;br/&gt;print (obj): ноль print&lt;/a&gt; , &lt;a href=&quot;../../../io#printf(format_string,*args):Nil-instance-method&quot;&gt;printf (format_string, * args): ноль &lt;br/&gt;printf (format_string, args: Array | Tuple): Ноль printf&lt;/a&gt; , &lt;a href=&quot;../../../io#puts(*objects:UNDERSCORE):Nil-instance-method&quot;&gt;put (* объекты: UNDERSCORE): Ноль &lt;br/&gt;устанавливает: Нил &lt;br/&gt;ставит (obj): Ноль &lt;br/&gt;ставит (строка: строка): Ноль ставит&lt;/a&gt; , &lt;a href=&quot;../../../io#read(slice:Bytes)-instance-method&quot;&gt;читает (фрагмент: байты), читает&lt;/a&gt; , &lt;a href=&quot;../../../io#read_at(offset,bytesize,&amp;amp;block)-instance-method&quot;&gt;read_at (смещение, размер в байтах и ​​блокирует) read_at&lt;/a&gt; , &lt;a href=&quot;../../../io#read_byte:UInt8?-instance-method&quot;&gt;read_byte : UInt8? read_byte&lt;/a&gt; , &lt;a href=&quot;../../../io#read_bytes(type,format:IO::ByteFormat=IO::ByteFormat::SystemEndian)-instance-method&quot;&gt;read_bytes (тип, формат: IO :: ByteFormat = IO :: ByteFormat :: SystemEndian) read_bytes&lt;/a&gt;, &lt;a href=&quot;../../../io#read_char:Char?-instance-method&quot;&gt;read_char: Char? read_char&lt;/a&gt; , &lt;a href=&quot;../../../io#read_fully(slice:Bytes)-instance-method&quot;&gt;read_fully (slice: Bytes) read_fully&lt;/a&gt; , &lt;a href=&quot;../../../io#read_fully?(slice:Bytes)-instance-method&quot;&gt;read_fully? (slice: Bytes) read_fully?&lt;/a&gt; , &lt;a href=&quot;../../../io#read_line(*args,**options):String-instance-method&quot;&gt;read_line (* args, ** options): строка read_line&lt;/a&gt; , &lt;a href=&quot;../../../io#read_string(bytesize:Int):String-instance-method&quot;&gt;read_string (bytesize: Int): строка read_string&lt;/a&gt; , &lt;a href=&quot;../../../io#read_utf8(slice:Bytes)-instance-method&quot;&gt;read_utf8 (slice: Bytes) read_utf8&lt;/a&gt; , &lt;a href=&quot;../../../io#read_utf8_byte-instance-method&quot;&gt;read_utf8_byte read_utf8_byte&lt;/a&gt; , &lt;a href=&quot;../../../io#rewind-instance-method&quot;&gt;перемотка назад&lt;/a&gt; , перемотка назад , &lt;a href=&quot;../../../io#seek(offset,whence:Seek=Seek::Set)-instance-method&quot;&gt;поиск (смещение, отсюда: Seek = Seek :: Set ) искать&lt;/a&gt; , &lt;a href=&quot;../../../io#set_encoding(encoding:String,invalid:Symbol?=nil)-instance-method&quot;&gt;set_encoding (кодировка: строка, недействительный: символ? = ноль) set_encoding&lt;/a&gt; , &lt;a href=&quot;../../../io#skip(bytes_count:Int):Nil-instance-method&quot;&gt;пропустить (bytes_count: Int): ноль пропустить&lt;/a&gt; , &lt;a href=&quot;../../../io#skip_to_end:Nil-instance-method&quot;&gt;skip_to_end: ноль skip_to_end&lt;/a&gt; , &lt;a href=&quot;../../../io#tell-instance-method&quot;&gt;сказать, сказать&lt;/a&gt; ,&lt;a href=&quot;../../../io#tty?:Bool-instance-method&quot;&gt;терминал? : Bool tty?&lt;/a&gt; , &lt;a href=&quot;../../../io#write(slice:Bytes):Nil-instance-method&quot;&gt;запись (фрагмент: байты): &lt;/a&gt;&lt;a href=&quot;../../../io#write_byte(byte:UInt8)-instance-method&quot;&gt;нулевая &lt;/a&gt;запись , запись_байта (байт: UInt8) запись_байта , &lt;a href=&quot;../../../io#write_bytes(object,format:IO::ByteFormat=IO::ByteFormat::SystemEndian)-instance-method&quot;&gt;запись_байта (объект, формат: IO :: ByteFormat = IO :: ByteFormat :: SystemEndian) запись_байта&lt;/a&gt; , &lt;a href=&quot;../../../io#write_utf8(slice:Bytes)-instance-method&quot;&gt;запись_utf8 (фрагмент: байты) write_utf8&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="097f4cb5eeabef923e5fdfd9b18e7f4c118c7204" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../../io/buffered#buffer_size-instance-method&quot;&gt; buffer_size buffer_size&lt;/a&gt;, &lt;a href=&quot;../../../io/buffered#buffer_size=(value)-instance-method&quot;&gt; buffer_size=(value) buffer_size=&lt;/a&gt;, &lt;a href=&quot;../../../io/buffered#close:Nil-instance-method&quot;&gt; close : Nil close&lt;/a&gt;, &lt;a href=&quot;../../../io/buffered#flush-instance-method&quot;&gt; flush flush&lt;/a&gt;, &lt;a href=&quot;../../../io/buffered#peek:Bytes?-instance-method&quot;&gt; peek : Bytes? peek&lt;/a&gt;, &lt;a href=&quot;../../../io/buffered#read(slice:Bytes)-instance-method&quot;&gt; read(slice : Bytes) read&lt;/a&gt;, &lt;a href=&quot;../../../io/buffered#read_buffering=(read_buffering)-instance-method&quot;&gt; read_buffering=(read_buffering) read_buffering=&lt;/a&gt;, &lt;a href=&quot;../../../io/buffered#read_buffering?-instance-method&quot;&gt; read_buffering? read_buffering?&lt;/a&gt;, &lt;a href=&quot;../../../io/buffered#rewind-instance-method&quot;&gt; rewind rewind&lt;/a&gt;, &lt;a href=&quot;../../../io/buffered#sync=(sync)-instance-method&quot;&gt; sync=(sync) sync=&lt;/a&gt;, &lt;a href=&quot;../../../io/buffered#sync?-instance-method&quot;&gt; sync? sync?&lt;/a&gt;, &lt;a href=&quot;../../../io/buffered#unbuffered_close-instance-method&quot;&gt; unbuffered_close unbuffered_close&lt;/a&gt;, &lt;a href=&quot;../../../io/buffered#unbuffered_flush-instance-method&quot;&gt; unbuffered_flush unbuffered_flush&lt;/a&gt;, &lt;a href=&quot;../../../io/buffered#unbuffered_read(slice:Bytes)-instance-method&quot;&gt; unbuffered_read(slice : Bytes) unbuffered_read&lt;/a&gt;, &lt;a href=&quot;../../../io/buffered#unbuffered_rewind-instance-method&quot;&gt; unbuffered_rewind unbuffered_rewind&lt;/a&gt;, &lt;a href=&quot;../../../io/buffered#unbuffered_write(slice:Bytes)-instance-method&quot;&gt; unbuffered_write(slice : Bytes) unbuffered_write&lt;/a&gt;, &lt;a href=&quot;../../../io/buffered#write(slice:Bytes):Nil-instance-method&quot;&gt; write(slice : Bytes) : Nil write&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../../io/buffered#buffer_size-instance-method&quot;&gt;buffer_size buffer_size&lt;/a&gt; , &lt;a href=&quot;../../../io/buffered#buffer_size=(value)-instance-method&quot;&gt;buffer_size = (значение) buffer_size =&lt;/a&gt; , &lt;a href=&quot;../../../io/buffered#close:Nil-instance-method&quot;&gt;close: ноль закрыть&lt;/a&gt; , &lt;a href=&quot;../../../io/buffered#flush-instance-method&quot;&gt;очистить флэш&lt;/a&gt; , &lt;a href=&quot;../../../io/buffered#peek:Bytes?-instance-method&quot;&gt;посмотреть: байты? заглянуть&lt;/a&gt; , &lt;a href=&quot;../../../io/buffered#read(slice:Bytes)-instance-method&quot;&gt;прочитать (фрагмент: байты), прочитать&lt;/a&gt; , &lt;a href=&quot;../../../io/buffered#read_buffering=(read_buffering)-instance-method&quot;&gt;read_buffering = (read_buffering) read_buffering =&lt;/a&gt; , &lt;a href=&quot;../../../io/buffered#read_buffering?-instance-method&quot;&gt;read_buffering? read_buffering?&lt;/a&gt; , &lt;a href=&quot;../../../io/buffered#rewind-instance-method&quot;&gt;перемотка перемотка&lt;/a&gt; , &lt;a href=&quot;../../../io/buffered#sync=(sync)-instance-method&quot;&gt;синхронизация = (синхронизация) синхронизация =&lt;/a&gt; , &lt;a href=&quot;../../../io/buffered#sync?-instance-method&quot;&gt;синхронизация? синхронизация?&lt;/a&gt; , &lt;a href=&quot;../../../io/buffered#unbuffered_close-instance-method&quot;&gt;unbuffered_close unbuffered_close&lt;/a&gt; , &lt;a href=&quot;../../../io/buffered#unbuffered_flush-instance-method&quot;&gt;unbuffered_flush unbuffered_flush&lt;/a&gt; , &lt;a href=&quot;../../../io/buffered#unbuffered_read(slice:Bytes)-instance-method&quot;&gt;unbuffered_read (фрагмент: байты) unbuffered_read&lt;/a&gt; , &lt;a href=&quot;../../../io/buffered#unbuffered_rewind-instance-method&quot;&gt;unbuffered_rewind unbuffered_rewind&lt;/a&gt; ,&lt;a href=&quot;../../../io/buffered#unbuffered_write(slice:Bytes)-instance-method&quot;&gt;unbuffered_write (фрагмент: байты) unbuffered_write&lt;/a&gt; , &lt;a href=&quot;../../../io/buffered#write(slice:Bytes):Nil-instance-method&quot;&gt;запись (фрагмент: байты): нулевая запись&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="47a792acb478f43125c64712e0f290436a07f39f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../../object#!=(other)-instance-method&quot;&gt; !=(other) !=&lt;/a&gt;, &lt;a href=&quot;../../../object#!~(other)-instance-method&quot;&gt; !~(other) !~&lt;/a&gt;, &lt;a href=&quot;../../../object#==(other)-instance-method&quot;&gt; ==(other) ==&lt;/a&gt;, &lt;a href=&quot;../../../object#===(other:JSON::Any)-instance-method&quot;&gt; ===(other : JSON::Any)&lt;br/&gt;===(other : YAML::Any)&lt;br/&gt;===(other) ===&lt;/a&gt;, &lt;a href=&quot;../../../object#=~(other)-instance-method&quot;&gt; =~(other) =~&lt;/a&gt;, &lt;a href=&quot;../../../object#class-instance-method&quot;&gt; class class&lt;/a&gt;, &lt;a href=&quot;../../../object#dup-instance-method&quot;&gt; dup dup&lt;/a&gt;, &lt;a href=&quot;../../../object#hash(hasher)-instance-method&quot;&gt; hash(hasher)&lt;br/&gt;hash hash&lt;/a&gt;, &lt;a href=&quot;../../../object#inspect(io:IO):Nil-instance-method&quot;&gt; inspect(io : IO) : Nil&lt;br/&gt;inspect : String inspect&lt;/a&gt;, &lt;a href=&quot;../../../object#itself-instance-method&quot;&gt; itself itself&lt;/a&gt;, &lt;a href=&quot;../../../object#not_nil!-instance-method&quot;&gt; not_nil! not_nil!&lt;/a&gt;,  pretty_inspect(width = 79, newline = &quot;\n&quot;, indent = 0) : String pretty_inspect, &lt;a href=&quot;../../../object#pretty_print(pp:PrettyPrint):Nil-instance-method&quot;&gt; pretty_print(pp : PrettyPrint) : Nil pretty_print&lt;/a&gt;, &lt;a href=&quot;../../../object#tap(&amp;amp;block)-instance-method&quot;&gt; tap(&amp;amp;block) tap&lt;/a&gt;, &lt;a href=&quot;../../../object#to_json(io:IO)-instance-method&quot;&gt; to_json(io : IO)&lt;br/&gt;to_json to_json&lt;/a&gt;,  to_pretty_json(indent : String = &quot; &quot;)</source>
          <target state="translated">&lt;a href=&quot;../../../object#!=(other)-instance-method&quot;&gt;! = (другое) =!&lt;/a&gt; , &lt;a href=&quot;../../../object#!~(other)-instance-method&quot;&gt;~ (другой) ~!&lt;/a&gt; , &lt;a href=&quot;../../../object#==(other)-instance-method&quot;&gt;== (другое) ==&lt;/a&gt; , &lt;a href=&quot;../../../object#===(other:JSON::Any)-instance-method&quot;&gt;=== (другое: JSON :: Любой) &lt;br/&gt;=== (другое: YAML :: Любой) &lt;br/&gt;=== ( other) ===&lt;/a&gt; , &lt;a href=&quot;../../../object#=~(other)-instance-method&quot;&gt;= ~ (other) = ~&lt;/a&gt; , &lt;a href=&quot;../../../object#class-instance-method&quot;&gt;класс class&lt;/a&gt; , &lt;a href=&quot;../../../object#dup-instance-method&quot;&gt;dup dup&lt;/a&gt; , &lt;a href=&quot;../../../object#hash(hasher)-instance-method&quot;&gt;hash (hasher) &lt;br/&gt;hash hashes&lt;/a&gt; , &lt;a href=&quot;../../../object#inspect(io:IO):Nil-instance-method&quot;&gt;inspect (io: IO): Nil &lt;br/&gt;inspect: проверка строки&lt;/a&gt; , &lt;a href=&quot;../../../object#itself-instance-method&quot;&gt;сама по себе&lt;/a&gt; , &lt;a href=&quot;../../../object#not_nil!-instance-method&quot;&gt;not_nil! not_nil!&lt;/a&gt; , Pretty_inspect (ширина = 79, перевод строка = &quot;\ п&quot;, отступ = 0): String pretty_inspect, &lt;a href=&quot;../../../object#pretty_print(pp:PrettyPrint):Nil-instance-method&quot;&gt;pretty_print (стр: PrettyPrint): Ноль pretty_print&lt;/a&gt; , &lt;a href=&quot;../../../object#tap(&amp;amp;block)-instance-method&quot;&gt;кран (&amp;amp; блок) кран&lt;/a&gt; , &lt;a href=&quot;../../../object#to_json(io:IO)-instance-method&quot;&gt;to_json (Io: IO) &lt;br/&gt;to_json to_json&lt;/a&gt;, to_pretty_json (indent: String = &quot;&quot;)</target>
        </trans-unit>
        <trans-unit id="f916bb08b17201f6da3d40149b84e42381b7ec47" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../../object#from_json(string_or_io,root:String):self-class-method&quot;&gt; from_json(string_or_io, root : String) : self&lt;br/&gt;from_json(string_or_io) : self from_json&lt;/a&gt;, &lt;a href=&quot;../../../object#from_yaml(string_or_io:String%7CIO):self-class-method&quot;&gt; from_yaml(string_or_io : String | IO) : self from_yaml&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../../object#from_json(string_or_io,root:String):self-class-method&quot;&gt;from_json (string_or_io, root: String): self &lt;br/&gt;from_json (string_or_io): self from_json&lt;/a&gt; , &lt;a href=&quot;../../../object#from_yaml(string_or_io:String%7CIO):self-class-method&quot;&gt;from_yaml (string_or_io: String | IO): self from_yaml&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a1c26c7833304c29cf8dd85fced4eb43a43fe7ff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../../reference#==(other:self)-instance-method&quot;&gt; ==(other : self)&lt;br/&gt;==(other : JSON::Any)&lt;br/&gt;==(other : YAML::Any)&lt;br/&gt;==(other) ==&lt;/a&gt;, &lt;a href=&quot;../../../reference#dup-instance-method&quot;&gt; dup dup&lt;/a&gt;, &lt;a href=&quot;../../../reference#hash(hasher)-instance-method&quot;&gt; hash(hasher) hash&lt;/a&gt;, &lt;a href=&quot;../../../reference#inspect(io:IO):Nil-instance-method&quot;&gt; inspect(io : IO) : Nil inspect&lt;/a&gt;, &lt;a href=&quot;../../../reference#object_id:UInt64-instance-method&quot;&gt; object_id : UInt64 object_id&lt;/a&gt;, &lt;a href=&quot;../../../reference#pretty_print(pp):Nil-instance-method&quot;&gt; pretty_print(pp) : Nil pretty_print&lt;/a&gt;, &lt;a href=&quot;../../../reference#same?(other:Reference)-instance-method&quot;&gt; same?(other : Reference)&lt;br/&gt;same?(other : Nil) same?&lt;/a&gt;, &lt;a href=&quot;../../../reference#to_s(io:IO):Nil-instance-method&quot;&gt; to_s(io : IO) : Nil to_s&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../../reference#==(other:self)-instance-method&quot;&gt;== (прочее: self) &lt;br/&gt;== (прочее: JSON :: Any) &lt;br/&gt;== (прочее: YAML :: Any) &lt;br/&gt;== (прочее) ==&lt;/a&gt; , &lt;a href=&quot;../../../reference#dup-instance-method&quot;&gt;dup dup&lt;/a&gt; , &lt;a href=&quot;../../../reference#hash(hasher)-instance-method&quot;&gt;hash (хэш)&lt;/a&gt; , &lt;a href=&quot;../../../reference#inspect(io:IO):Nil-instance-method&quot;&gt;проверить (io: IO) : Ноль проверять&lt;/a&gt; , &lt;a href=&quot;../../../reference#object_id:UInt64-instance-method&quot;&gt;object_id: UInt64 object_id&lt;/a&gt; , &lt;a href=&quot;../../../reference#pretty_print(pp):Nil-instance-method&quot;&gt;pretty_print (pp): ноль pretty_print&lt;/a&gt; , то &lt;a href=&quot;../../../reference#same?(other:Reference)-instance-method&quot;&gt;же самое? (Другое: ссылка) то &lt;br/&gt;же самое? (Другое: ноль) то же самое? &lt;/a&gt;, &lt;a href=&quot;../../../reference#to_s(io:IO):Nil-instance-method&quot;&gt;to_s (io: IO): ноль to_s&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="41b8ec5192fa216261515a36b5ff818aa526d282" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../../value#==(other:JSON::Any)-instance-method&quot;&gt; ==(other : JSON::Any)&lt;br/&gt;==(other : YAML::Any)&lt;br/&gt;==(other) ==&lt;/a&gt;, &lt;a href=&quot;../../../value#dup-instance-method&quot;&gt; dup dup&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../../value#==(other:JSON::Any)-instance-method&quot;&gt;== (другое: JSON :: Any) &lt;br/&gt;== (другое: YAML :: Any) &lt;br/&gt;== (другое) ==&lt;/a&gt; , &lt;a href=&quot;../../../value#dup-instance-method&quot;&gt;dup dup&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3706220341a649f84a91dd45fc7dc8f6afa82e2f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../comparable#%3C(other:T)-instance-method&quot;&gt;  &amp;lt;&lt;/a&gt;, &lt;a href=&quot;../../comparable#%3C=(other:T)-instance-method&quot;&gt; &amp;lt;=(other : T) &amp;lt;=&lt;/a&gt;, &lt;a href=&quot;../../comparable#(other:T)-instance-method&quot;&gt; &amp;lt;=&amp;gt;(other : T) &amp;lt;=&amp;gt;&lt;/a&gt;, &lt;a href=&quot;../../comparable#==(other:T)-instance-method&quot;&gt; ==(other : T) ==&lt;/a&gt;, &lt;a href=&quot;../../comparable#%3E(other:T)-instance-method&quot;&gt; &amp;gt;(other : T) &amp;gt;&lt;/a&gt;, &lt;a href=&quot;../../comparable#%3E=(other:T)-instance-method&quot;&gt; &amp;gt;=(other : T) &amp;gt;=&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../comparable#%3C(other:T)-instance-method&quot;&gt; &amp;lt;&lt;/a&gt; , &lt;a href=&quot;../../comparable#%3C=(other:T)-instance-method&quot;&gt;&amp;lt;= (другое: T) &amp;lt;=&lt;/a&gt; , &lt;a href=&quot;../../comparable#(other:T)-instance-method&quot;&gt;&amp;lt;=&amp;gt; (другое: T) &amp;lt;=&amp;gt;&lt;/a&gt; , &lt;a href=&quot;../../comparable#==(other:T)-instance-method&quot;&gt;== (другое: T) ==&lt;/a&gt; , &lt;a href=&quot;../../comparable#%3E(other:T)-instance-method&quot;&gt;&amp;gt; (другое: T)&amp;gt;&lt;/a&gt; , &lt;a href=&quot;../../comparable#%3E=(other:T)-instance-method&quot;&gt;&amp;gt; = (другое: T)&amp;gt; знак равно&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a9e6414276725061bd57a026a65b636a676a85c7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../enum#&amp;amp;(other:self)-instance-method&quot;&gt; &amp;amp;(other : self) &amp;amp;&lt;/a&gt;, &lt;a href=&quot;../../enum#+(other:Int)-instance-method&quot;&gt; +(other : Int) +&lt;/a&gt;, &lt;a href=&quot;../../enum#-(other:Int)-instance-method&quot;&gt; -(other : Int) -&lt;/a&gt;, &lt;a href=&quot;../../enum#(other:self)-instance-method&quot;&gt; &amp;lt;=&amp;gt;(other : self) &amp;lt;=&amp;gt;&lt;/a&gt;, &lt;a href=&quot;../../enum#==(other:self)-instance-method&quot;&gt; ==(other : self) ==&lt;/a&gt;, &lt;a href=&quot;../../enum#%5E(other:self)-instance-method&quot;&gt; ^(other : self) ^&lt;/a&gt;, &lt;a href=&quot;../../enum#clone-instance-method&quot;&gt; clone clone&lt;/a&gt;, &lt;a href=&quot;../../enum#each(&amp;amp;block)-instance-method&quot;&gt; each(&amp;amp;block) each&lt;/a&gt;, &lt;a href=&quot;../../enum#hash(hasher)-instance-method&quot;&gt; hash(hasher) hash&lt;/a&gt;, &lt;a href=&quot;../../enum#includes?(other:self)-instance-method&quot;&gt; includes?(other : self) includes?&lt;/a&gt;, &lt;a href=&quot;../../enum#to_f32:Float32-instance-method&quot;&gt; to_f32 : Float32 to_f32&lt;/a&gt;, &lt;a href=&quot;../../enum#to_f32!:Float32-instance-method&quot;&gt; to_f32! : Float32 to_f32!&lt;/a&gt;, &lt;a href=&quot;../../enum#to_f64:Float64-instance-method&quot;&gt; to_f64 : Float64 to_f64&lt;/a&gt;, &lt;a href=&quot;../../enum#to_f64!:Float64-instance-method&quot;&gt; to_f64! : Float64 to_f64!&lt;/a&gt;, &lt;a href=&quot;../../enum#to_i:Int32-instance-method&quot;&gt; to_i : Int32 to_i&lt;/a&gt;, &lt;a href=&quot;../../enum#to_i16:Int16-instance-method&quot;&gt; to_i16 : Int16 to_i16&lt;/a&gt;, &lt;a href=&quot;../../enum#to_i16!:Int16-instance-method&quot;&gt; to_i16! : Int16 to_i16!&lt;/a&gt;, &lt;a href=&quot;../../enum#to_i32:Int32-instance-method&quot;&gt; to_i32 : Int32 to_i32&lt;/a&gt;, &lt;a href=&quot;../../enum#to_i32!:Int32-instance-method&quot;&gt; to_i32! : Int32 to_i32!&lt;/a&gt;, &lt;a href=&quot;../../enum#to_i64:Int64-instance-method&quot;&gt; to_i64 : Int64 to_i64&lt;/a&gt;, &lt;a href=&quot;../../enum#to_i64!:Int64-instance-method&quot;&gt; to_i64! : Int64 to_i64!&lt;/a&gt;, &lt;a href=&quot;../../enum#to_i8:Int8-instance-method&quot;&gt; to_i8 : Int8 to_i8&lt;/a&gt;, &lt;a href=&quot;../../enum#to_i8!:Int8-instance-method&quot;&gt; to_i8! : Int8 to_i8!&lt;/a&gt;, &lt;a href=&quot;../../enum#to_json(json:JSON::Builder)-instance-method&quot;&gt; to_json(json : JSON::Builder) to_json&lt;/a&gt;, &lt;a href=&quot;../../enum#to_s(io:IO):Nil-instance-method&quot;&gt; to_s(io : IO) : Nil&lt;br/&gt;to_s : String to_s&lt;/a&gt;, &lt;a href=&quot;../../enum#to_u16:UInt16-instance-method&quot;&gt; to_u16 : UInt16 to_u16&lt;/a&gt;, &lt;a href=&quot;../../enum#to_u16!:UInt16-instance-method&quot;&gt; to_u16! : UInt16 to_u16!&lt;/a&gt;, &lt;a href=&quot;../../enum#to_u32:UInt32-instance-method&quot;&gt; to_u32 : UInt32 to_u32&lt;/a&gt;, &lt;a href=&quot;../../enum#to_u32!:UInt32-instance-method&quot;&gt; to_u32! : UInt32 to_u32!&lt;/a&gt;, &lt;a href=&quot;../../enum#to_u64:UInt64-instance-method&quot;&gt; to_u64 : UInt64 to_u64&lt;/a&gt;, &lt;a href=&quot;../../enum#to_u64!:UInt64-instance-method&quot;&gt; to_u64! : UInt64 to_u64!&lt;/a&gt;, &lt;a href=&quot;../../enum#to_u8:UInt8-instance-method&quot;&gt; to_u8 : UInt8 to_u8&lt;/a&gt;, &lt;a href=&quot;../../enum#to_u8!:UInt8-instance-method&quot;&gt; to_u8! : UInt8 to_u8!&lt;/a&gt;, &lt;a href=&quot;../../enum#to_yaml(yaml:YAML::Nodes::Builder)-instance-method&quot;&gt; to_yaml(yaml : YAML::Nodes::Builder) to_yaml&lt;/a&gt;, &lt;a href=&quot;../../enum#%7C(other:self)-instance-method&quot;&gt; |(other : self) |&lt;/a&gt;, &lt;a href=&quot;../../enum#~-instance-method&quot;&gt; ~ ~&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../enum#&amp;amp;(other:self)-instance-method&quot;&gt;&amp;amp; (другое: self) &amp;amp;&lt;/a&gt; , &lt;a href=&quot;../../enum#+(other:Int)-instance-method&quot;&gt;+ (другое: Int) +&lt;/a&gt; , &lt;a href=&quot;../../enum#-(other:Int)-instance-method&quot;&gt;- (другое: Int) -&lt;/a&gt; , &lt;a href=&quot;../../enum#(other:self)-instance-method&quot;&gt;&amp;lt;=&amp;gt; (другое: self) &amp;lt;=&amp;gt;&lt;/a&gt; , &lt;a href=&quot;../../enum#==(other:self)-instance-method&quot;&gt;== (другое: self) ==&lt;/a&gt; , &lt;a href=&quot;../../enum#%5E(other:self)-instance-method&quot;&gt;^ (other: self) ^&lt;/a&gt; , &lt;a href=&quot;../../enum#clone-instance-method&quot;&gt;clone clone&lt;/a&gt; , &lt;a href=&quot;../../enum#each(&amp;amp;block)-instance-method&quot;&gt;каждый (&amp;amp; block) каждый&lt;/a&gt; , &lt;a href=&quot;../../enum#hash(hasher)-instance-method&quot;&gt;hash (hasher) hash&lt;/a&gt; , &lt;a href=&quot;../../enum#includes?(other:self)-instance-method&quot;&gt;включает? (other: self) включает?&lt;/a&gt; , &lt;a href=&quot;../../enum#to_f32:Float32-instance-method&quot;&gt;to_f32: Float32 to_f32&lt;/a&gt; , &lt;a href=&quot;../../enum#to_f32!:Float32-instance-method&quot;&gt;to_f32! : Float32 to_f32!&lt;/a&gt; , &lt;a href=&quot;../../enum#to_f64:Float64-instance-method&quot;&gt;to_f64: Float64 to_f64&lt;/a&gt; , &lt;a href=&quot;../../enum#to_f64!:Float64-instance-method&quot;&gt;to_f64! : Float64 to_f64!&lt;/a&gt; , &lt;a href=&quot;../../enum#to_i:Int32-instance-method&quot;&gt;to_i: Int32 to_i&lt;/a&gt; , &lt;a href=&quot;../../enum#to_i16:Int16-instance-method&quot;&gt;to_i16: Int16 to_i16&lt;/a&gt; , &lt;a href=&quot;../../enum#to_i16!:Int16-instance-method&quot;&gt;to_i16! : Int16 to_i16!&lt;/a&gt; ,&lt;a href=&quot;../../enum#to_i32:Int32-instance-method&quot;&gt;to_i32: Int32 to_i32&lt;/a&gt; , &lt;a href=&quot;../../enum#to_i32!:Int32-instance-method&quot;&gt;to_i32! : Int32 to_i32!&lt;/a&gt; , &lt;a href=&quot;../../enum#to_i64:Int64-instance-method&quot;&gt;to_i64: Int64 to_i64&lt;/a&gt; , &lt;a href=&quot;../../enum#to_i64!:Int64-instance-method&quot;&gt;to_i64! : Int64 to_i64!&lt;/a&gt; , &lt;a href=&quot;../../enum#to_i8:Int8-instance-method&quot;&gt;to_i8: Int8 to_i8&lt;/a&gt; , &lt;a href=&quot;../../enum#to_i8!:Int8-instance-method&quot;&gt;to_i8! : Int8 to_i8!&lt;/a&gt; , &lt;a href=&quot;../../enum#to_json(json:JSON::Builder)-instance-method&quot;&gt;to_json (json: JSON :: Builder) to_json&lt;/a&gt; , &lt;a href=&quot;../../enum#to_s(io:IO):Nil-instance-method&quot;&gt;to_s (io: IO): ноль &lt;br/&gt;to_s: строка to_s&lt;/a&gt; , &lt;a href=&quot;../../enum#to_u16:UInt16-instance-method&quot;&gt;to_u16: UInt16 to_u16&lt;/a&gt; , &lt;a href=&quot;../../enum#to_u16!:UInt16-instance-method&quot;&gt;to_u16! : UInt16 to_u16!&lt;/a&gt; , &lt;a href=&quot;../../enum#to_u32:UInt32-instance-method&quot;&gt;to_u32: UInt32 to_u32&lt;/a&gt; , &lt;a href=&quot;../../enum#to_u32!:UInt32-instance-method&quot;&gt;to_u32! : UInt32 to_u32!&lt;/a&gt; , &lt;a href=&quot;../../enum#to_u64:UInt64-instance-method&quot;&gt;to_u64: UInt64 to_u64&lt;/a&gt; , &lt;a href=&quot;../../enum#to_u64!:UInt64-instance-method&quot;&gt;to_u64! : UInt64 to_u64!&lt;/a&gt; , &lt;a href=&quot;../../enum#to_u8:UInt8-instance-method&quot;&gt;to_u8: UInt8 to_u8&lt;/a&gt; , &lt;a href=&quot;../../enum#to_u8!:UInt8-instance-method&quot;&gt;to_u8! : UInt8 to_u8!&lt;/a&gt; ,&lt;a href=&quot;../../enum#to_yaml(yaml:YAML::Nodes::Builder)-instance-method&quot;&gt;to_yaml (yaml: YAML :: Nodes :: Builder) to_yaml&lt;/a&gt; , &lt;a href=&quot;../../enum#%7C(other:self)-instance-method&quot;&gt;| (другое: self) | &lt;/a&gt;, &lt;a href=&quot;../../enum#~-instance-method&quot;&gt;~ ~&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="94f3edd99cae2854625246a7a3a87533e371bdf7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../enum#each(&amp;amp;block)-class-method&quot;&gt; each(&amp;amp;block) each&lt;/a&gt;, &lt;a href=&quot;../../enum#names:Array(String)-class-method&quot;&gt; names : Array(String) names&lt;/a&gt;, &lt;a href=&quot;../../enum#values:Array(self)-class-method&quot;&gt; values : Array(self) values&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../enum#each(&amp;amp;block)-class-method&quot;&gt;каждый (&amp;amp; блок) каждый&lt;/a&gt; , &lt;a href=&quot;../../enum#names:Array(String)-class-method&quot;&gt;имена: имена массивов (строк)&lt;/a&gt; , &lt;a href=&quot;../../enum#values:Array(self)-class-method&quot;&gt;значения: значения массивов (себя)&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a34e497fa911ec80230e7e0fd8373653c6db5c1c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../enum#from_value(value:Int):self-class-method&quot;&gt; from_value(value : Int) : self from_value&lt;/a&gt;, &lt;a href=&quot;../../enum#from_value?(value:Int):self?-class-method&quot;&gt; from_value?(value : Int) : self? from_value?&lt;/a&gt;, &lt;a href=&quot;../../enum#new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method&quot;&gt; new(ctx : YAML::ParseContext, node : YAML::Nodes::Node)&lt;br/&gt;new(pull : JSON::PullParser) new&lt;/a&gt;, &lt;a href=&quot;../../enum#parse(string:String):self-class-method&quot;&gt; parse(string : String) : self parse&lt;/a&gt;, &lt;a href=&quot;../../enum#parse?(string:String):self?-class-method&quot;&gt; parse?(string : String) : self? parse?&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../enum#from_value(value:Int):self-class-method&quot;&gt;from_value (значение: Int): self from_value&lt;/a&gt; , &lt;a href=&quot;../../enum#from_value?(value:Int):self?-class-method&quot;&gt;from_value? (значение: Int): self? from_value? &lt;/a&gt;, &lt;a href=&quot;../../enum#new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method&quot;&gt;new (ctx: YAML :: ParseContext, узел: YAML :: Nodes :: Node) &lt;br/&gt;new (pull: JSON :: PullParser) new&lt;/a&gt; , &lt;a href=&quot;../../enum#parse(string:String):self-class-method&quot;&gt;parse (строка: String): сам анализ&lt;/a&gt; , &lt;a href=&quot;../../enum#parse?(string:String):self?-class-method&quot;&gt;анализ? (строка: строка): self ? разобрать?&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="799d35e79bf96ca534a6495768d2581334a474f3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../enumerable&quot;&gt;Enumerable&lt;/a&gt;(&lt;a href=&quot;node&quot;&gt;YAML::Nodes::Node&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;../../enumerable&quot;&gt;Enumerable&lt;/a&gt;(&lt;a href=&quot;node&quot;&gt;YAML::Nodes::Node&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="3f8264965fc2c685b84108d732337e2bd8c43934" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../enumerable#all?(&amp;amp;block)-instance-method&quot;&gt; all?(&amp;amp;block)&lt;br/&gt;all?(pattern)&lt;br/&gt;all? all?&lt;/a&gt;, &lt;a href=&quot;../../enumerable#any?(&amp;amp;block)-instance-method&quot;&gt; any?(&amp;amp;block)&lt;br/&gt;any?(pattern)&lt;br/&gt;any? any?&lt;/a&gt;, &lt;a href=&quot;../../enumerable#chunks(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt; chunks(&amp;amp;block : T -&amp;gt; U) forall U chunks&lt;/a&gt;, &lt;a href=&quot;../../enumerable#compact_map(&amp;amp;block)-instance-method&quot;&gt; compact_map(&amp;amp;block) compact_map&lt;/a&gt;, &lt;a href=&quot;../../enumerable#count(item)-instance-method&quot;&gt; count(item)&lt;br/&gt;count(&amp;amp;block) count&lt;/a&gt;, &lt;a href=&quot;../../enumerable#cycle(&amp;amp;block)-instance-method&quot;&gt; cycle(&amp;amp;block)&lt;br/&gt;cycle(n, &amp;amp;block) cycle&lt;/a&gt;, &lt;a href=&quot;../../enumerable#each(&amp;amp;block:T-%3EUNDERSCORE)-instance-method&quot;&gt; each(&amp;amp;block : T -&amp;gt; UNDERSCORE) each&lt;/a&gt;, &lt;a href=&quot;../../enumerable#each_cons(count:Int,reuse=false,&amp;amp;block)-instance-method&quot;&gt; each_cons(count : Int, reuse = false, &amp;amp;block) each_cons&lt;/a&gt;, &lt;a href=&quot;../../enumerable#each_slice(count:Int,reuse=false,&amp;amp;block)-instance-method&quot;&gt; each_slice(count : Int, reuse = false, &amp;amp;block) each_slice&lt;/a&gt;, &lt;a href=&quot;../../enumerable#each_with_index(offset=0,&amp;amp;block)-instance-method&quot;&gt; each_with_index(offset = 0, &amp;amp;block) each_with_index&lt;/a&gt;, &lt;a href=&quot;../../enumerable#each_with_object(obj,&amp;amp;block)-instance-method&quot;&gt; each_with_object(obj, &amp;amp;block) each_with_object&lt;/a&gt;, &lt;a href=&quot;../../enumerable#find(if_none=nil,&amp;amp;block)-instance-method&quot;&gt; find(if_none = nil, &amp;amp;block) find&lt;/a&gt;, &lt;a href=&quot;../../enumerable#first(count:Int)-instance-method&quot;&gt; first(count : Int)&lt;br/&gt;first first&lt;/a&gt;, &lt;a href=&quot;../../enumerable#first?-instance-method&quot;&gt; first? first?&lt;/a&gt;, &lt;a href=&quot;../../enumerable#flat_map(&amp;amp;block:T-%3EArray(U)%7CIterator(U)%7CU)forallU-instance-method&quot;&gt; flat_map(&amp;amp;block : T -&amp;gt; Array(U) | Iterator(U) | U) forall U flat_map&lt;/a&gt;, &lt;a href=&quot;../../enumerable#grep(pattern)-instance-method&quot;&gt; grep(pattern) grep&lt;/a&gt;, &lt;a href=&quot;../../enumerable#group_by(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt; group_by(&amp;amp;block : T -&amp;gt; U) forall U group_by&lt;/a&gt;, &lt;a href=&quot;../../enumerable#in_groups_of(size:Int,filled_up_with:U=nil)forallU-instance-method&quot;&gt; in_groups_of(size : Int, filled_up_with : U = nil) forall U&lt;br/&gt;in_groups_of(size : Int, filled_up_with : U = nil, reuse = false, &amp;amp;block) forall U in_groups_of&lt;/a&gt;, &lt;a href=&quot;../../enumerable#includes?(obj)-instance-method&quot;&gt; includes?(obj) includes?&lt;/a&gt;, &lt;a href=&quot;../../enumerable#index(&amp;amp;block)-instance-method&quot;&gt; index(&amp;amp;block)&lt;br/&gt;index(obj) index&lt;/a&gt;, &lt;a href=&quot;../../enumerable#index_by(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt; index_by(&amp;amp;block : T -&amp;gt; U) forall U index_by&lt;/a&gt;,  join(separator = &quot;&quot;, &amp;amp;block)</source>
          <target state="translated">&lt;a href=&quot;../../enumerable#all?(&amp;amp;block)-instance-method&quot;&gt;все? (&amp;amp; блок) &lt;br/&gt;все? (шаблон) &lt;br/&gt;все? все?&lt;/a&gt; , &lt;a href=&quot;../../enumerable#any?(&amp;amp;block)-instance-method&quot;&gt;любой? (&amp;amp; блок) &lt;br/&gt;любой? (шаблон) &lt;br/&gt;любой? любой?&lt;/a&gt; , &lt;a href=&quot;../../enumerable#chunks(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;чанки (&amp;amp; block: T -&amp;gt; U) для U-чанков&lt;/a&gt; , &lt;a href=&quot;../../enumerable#compact_map(&amp;amp;block)-instance-method&quot;&gt;compact_map (&amp;amp; block) compact_map&lt;/a&gt; , &lt;a href=&quot;../../enumerable#count(item)-instance-method&quot;&gt;count (item) &lt;br/&gt;count (&amp;amp; block) count&lt;/a&gt; , &lt;a href=&quot;../../enumerable#cycle(&amp;amp;block)-instance-method&quot;&gt;цикл (&amp;amp; block) &lt;br/&gt;цикл (n, &amp;amp; block) цикл&lt;/a&gt; , &lt;a href=&quot;../../enumerable#each(&amp;amp;block:T-%3EUNDERSCORE)-instance-method&quot;&gt;каждый (&amp;amp; block: T -&amp;gt; UNDERSCORE ) each&lt;/a&gt; , &lt;a href=&quot;../../enumerable#each_cons(count:Int,reuse=false,&amp;amp;block)-instance-method&quot;&gt;each_cons (count: Int, reuse = false, &amp;amp; block) each_cons&lt;/a&gt; , &lt;a href=&quot;../../enumerable#each_slice(count:Int,reuse=false,&amp;amp;block)-instance-method&quot;&gt;each_slice (count: Int, reuse = false, &amp;amp; block) each_slice&lt;/a&gt; , &lt;a href=&quot;../../enumerable#each_with_index(offset=0,&amp;amp;block)-instance-method&quot;&gt;each_with_index (offset = 0, &amp;amp; block) each_with_index&lt;/a&gt; , &lt;a href=&quot;../../enumerable#each_with_object(obj,&amp;amp;block)-instance-method&quot;&gt;each_with_object (obj, &amp;amp; block) each_with_object&lt;/a&gt; ,&lt;a href=&quot;../../enumerable#find(if_none=nil,&amp;amp;block)-instance-method&quot;&gt;find (if_none = nil, &amp;amp; block) найти&lt;/a&gt; , &lt;a href=&quot;../../enumerable#first(count:Int)-instance-method&quot;&gt;сначала (число: Int) &lt;br/&gt;сначала, сначала&lt;/a&gt; , &lt;a href=&quot;../../enumerable#first?-instance-method&quot;&gt;сначала? первый?&lt;/a&gt; , &lt;a href=&quot;../../enumerable#flat_map(&amp;amp;block:T-%3EArray(U)%7CIterator(U)%7CU)forallU-instance-method&quot;&gt;flat_map (&amp;amp; block: T -&amp;gt; Array (U) | Iterator (U) | U) для U flat_map&lt;/a&gt; , &lt;a href=&quot;../../enumerable#grep(pattern)-instance-method&quot;&gt;grep (pattern) grep&lt;/a&gt; , &lt;a href=&quot;../../enumerable#group_by(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;group_by (&amp;amp; block: T -&amp;gt; U) для U group_by&lt;/a&gt; , &lt;a href=&quot;../../enumerable#in_groups_of(size:Int,filled_up_with:U=nil)forallU-instance-method&quot;&gt;in_groups_of (размер: Int, заполнен_up_with : U = nil) для U &lt;br/&gt;in_groups_of (размер: Int, заполнено_с_с: U = ноль, повторное использование = ложь и блокировка) для U in_groups_of&lt;/a&gt; , &lt;a href=&quot;../../enumerable#includes?(obj)-instance-method&quot;&gt;включает? (Obj) включает?&lt;/a&gt; , &lt;a href=&quot;../../enumerable#index(&amp;amp;block)-instance-method&quot;&gt;index (&amp;amp; block) &lt;br/&gt;index (obj) index&lt;/a&gt; , &lt;a href=&quot;../../enumerable#index_by(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;index_by (&amp;amp; block: T -&amp;gt; U) для всего U index_by&lt;/a&gt; , соединение (разделитель = &quot;&quot;, &amp;amp; block)</target>
        </trans-unit>
        <trans-unit id="b9e66dba69f1da641a33866ea1d1fccf2e5d22ee" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../exception#backtrace-instance-method&quot;&gt; backtrace backtrace&lt;/a&gt;, &lt;a href=&quot;../../exception#backtrace?-instance-method&quot;&gt; backtrace? backtrace?&lt;/a&gt;, &lt;a href=&quot;../../exception#callstack:CallStack?-instance-method&quot;&gt; callstack : CallStack? callstack&lt;/a&gt;, &lt;a href=&quot;../../exception#callstack=(callstack:CallStack?)-instance-method&quot;&gt; callstack=(callstack : CallStack?) callstack=&lt;/a&gt;, &lt;a href=&quot;../../exception#cause:Exception?-instance-method&quot;&gt; cause : Exception? cause&lt;/a&gt;, &lt;a href=&quot;../../exception#inspect(io:IO):Nil-instance-method&quot;&gt; inspect(io : IO) : Nil inspect&lt;/a&gt;, &lt;a href=&quot;../../exception#inspect_with_backtrace(io:IO):Nil-instance-method&quot;&gt; inspect_with_backtrace(io : IO) : Nil&lt;br/&gt;inspect_with_backtrace : String inspect_with_backtrace&lt;/a&gt;, &lt;a href=&quot;../../exception#message:String?-instance-method&quot;&gt; message : String? message&lt;/a&gt;, &lt;a href=&quot;../../exception#to_s(io:IO):Nil-instance-method&quot;&gt; to_s(io : IO) : Nil to_s&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../exception#backtrace-instance-method&quot;&gt;обратный ход обратный ход&lt;/a&gt; , &lt;a href=&quot;../../exception#backtrace?-instance-method&quot;&gt;обратный ход? трассировка? &lt;/a&gt;, &lt;a href=&quot;../../exception#callstack:CallStack?-instance-method&quot;&gt;callstack: CallStack? callstack&lt;/a&gt; , &lt;a href=&quot;../../exception#callstack=(callstack:CallStack?)-instance-method&quot;&gt;callstack = (callstack: CallStack?) callstack =&lt;/a&gt; , &lt;a href=&quot;../../exception#cause:Exception?-instance-method&quot;&gt;причина: исключение? причина&lt;/a&gt; , &lt;a href=&quot;../../exception#inspect(io:IO):Nil-instance-method&quot;&gt;проверка (io: IO): ноль проверка&lt;/a&gt; , &lt;a href=&quot;../../exception#inspect_with_backtrace(io:IO):Nil-instance-method&quot;&gt;inspect_with_backtrace (io: IO): ноль &lt;br/&gt;inspect_with_backtrace: строка inspect_with_backtrace&lt;/a&gt; , &lt;a href=&quot;../../exception#message:String?-instance-method&quot;&gt;сообщение: строка? сообщение&lt;/a&gt; , &lt;a href=&quot;../../exception#to_s(io:IO):Nil-instance-method&quot;&gt;to_s (Io: IO): Nil to_s&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="93042bafbdc482829fe1db4ab7cd870986b25337" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../io#copy(src,dst,limit:Int):UInt64-class-method&quot;&gt; copy(src, dst, limit : Int) : UInt64&lt;br/&gt;copy(src, dst) : UInt64 copy&lt;/a&gt;, &lt;a href=&quot;../../io#pipe(read_blocking=false,write_blocking=false):Tuple(IO::FileDescriptor,IO::FileDescriptor)-class-method&quot;&gt; pipe(read_blocking = false, write_blocking = false) : Tuple(IO::FileDescriptor, IO::FileDescriptor)&lt;br/&gt;pipe(read_blocking = false, write_blocking = false, &amp;amp;block) pipe&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../io#copy(src,dst,limit:Int):UInt64-class-method&quot;&gt;copy (src, dst, limit: Int): UInt64 &lt;br/&gt;copy (src, dst): UInt64 copy&lt;/a&gt; , &lt;a href=&quot;../../io#pipe(read_blocking=false,write_blocking=false):Tuple(IO::FileDescriptor,IO::FileDescriptor)-class-method&quot;&gt;pipe (read_blocking = false, write_blocking = false): Tuple (IO :: FileDescriptor, IO :: FileDescriptor) &lt;br/&gt;pipe (read_blocking = false , write_blocking = false, &amp;amp; block) pipe&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="72fb4032c1744fc09207e0cbfff74328933ae48e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../io#self-instance-method&quot;&gt; &amp;lt;self &amp;lt;&amp;lt;&lt;/a&gt;, &lt;a href=&quot;../../io#close-instance-method&quot;&gt; close close&lt;/a&gt;, &lt;a href=&quot;../../io#closed?-instance-method&quot;&gt; closed? closed?&lt;/a&gt;, &lt;a href=&quot;../../io#each_byte(&amp;amp;block):Nil-instance-method&quot;&gt; each_byte(&amp;amp;block) : Nil&lt;br/&gt;each_byte each_byte&lt;/a&gt;, &lt;a href=&quot;../../io#each_char(&amp;amp;block):Nil-instance-method&quot;&gt; each_char(&amp;amp;block) : Nil&lt;br/&gt;each_char each_char&lt;/a&gt;, &lt;a href=&quot;../../io#each_line(*args,**options,&amp;amp;block:String-%3E):Nil-instance-method&quot;&gt; each_line(*args, **options, &amp;amp;block : String -&amp;gt; ) : Nil&lt;br/&gt;each_line(*args, **options) each_line&lt;/a&gt;, &lt;a href=&quot;../../io#encoding:String-instance-method&quot;&gt; encoding : String encoding&lt;/a&gt;, &lt;a href=&quot;../../io#flush-instance-method&quot;&gt; flush flush&lt;/a&gt;, &lt;a href=&quot;../../io#gets(delimiter:Char,limit:Int,chomp=false):String?-instance-method&quot;&gt; gets(delimiter : Char, limit : Int, chomp = false) : String?&lt;br/&gt;gets(delimiter : Char, chomp = false) : String?&lt;br/&gt;gets(chomp = true) : String?&lt;br/&gt;gets(limit : Int, chomp = false) : String?&lt;br/&gt;gets(delimiter : String, chomp = false) : String? gets&lt;/a&gt;, &lt;a href=&quot;../../io#gets_to_end:String-instance-method&quot;&gt; gets_to_end : String gets_to_end&lt;/a&gt;, &lt;a href=&quot;../../io#peek:Bytes?-instance-method&quot;&gt; peek : Bytes? peek&lt;/a&gt;, &lt;a href=&quot;../../io#pos-instance-method&quot;&gt; pos pos&lt;/a&gt;, &lt;a href=&quot;../../io#pos=(value)-instance-method&quot;&gt; pos=(value) pos=&lt;/a&gt;, &lt;a href=&quot;../../io#print(*objects:UNDERSCORE):Nil-instance-method&quot;&gt; print(*objects : UNDERSCORE) : Nil&lt;br/&gt;print(obj) : Nil print&lt;/a&gt;, &lt;a href=&quot;../../io#printf(format_string,*args):Nil-instance-method&quot;&gt; printf(format_string, *args) : Nil&lt;br/&gt;printf(format_string, args : Array | Tuple) : Nil printf&lt;/a&gt;, &lt;a href=&quot;../../io#puts(*objects:UNDERSCORE):Nil-instance-method&quot;&gt; puts(*objects : UNDERSCORE) : Nil&lt;br/&gt;puts : Nil&lt;br/&gt;puts(obj) : Nil&lt;br/&gt;puts(string : String) : Nil puts&lt;/a&gt;, &lt;a href=&quot;../../io#read(slice:Bytes)-instance-method&quot;&gt; read(slice : Bytes) read&lt;/a&gt;, &lt;a href=&quot;../../io#read_at(offset,bytesize,&amp;amp;block)-instance-method&quot;&gt; read_at(offset, bytesize, &amp;amp;block) read_at&lt;/a&gt;, &lt;a href=&quot;../../io#read_byte:UInt8?-instance-method&quot;&gt; read_byte : UInt8? read_byte&lt;/a&gt;, &lt;a href=&quot;../../io#read_bytes(type,format:IO::ByteFormat=IO::ByteFormat::SystemEndian)-instance-method&quot;&gt; read_bytes(type, format : IO::ByteFormat = IO::ByteFormat::SystemEndian) read_bytes&lt;/a&gt;, &lt;a href=&quot;../../io#read_char:Char?-instance-method&quot;&gt; read_char : Char? read_char&lt;/a&gt;, &lt;a href=&quot;../../io#read_fully(slice:Bytes)-instance-method&quot;&gt; read_fully(slice : Bytes) read_fully&lt;/a&gt;, &lt;a href=&quot;../../io#read_fully?(slice:Bytes)-instance-method&quot;&gt; read_fully?(slice : Bytes) read_fully?&lt;/a&gt;, &lt;a href=&quot;../../io#read_line(*args,**options):String-instance-method&quot;&gt; read_line(*args, **options) : String read_line&lt;/a&gt;, &lt;a href=&quot;../../io#read_string(bytesize:Int):String-instance-method&quot;&gt; read_string(bytesize : Int) : String read_string&lt;/a&gt;, &lt;a href=&quot;../../io#read_utf8(slice:Bytes)-instance-method&quot;&gt; read_utf8(slice : Bytes) read_utf8&lt;/a&gt;, &lt;a href=&quot;../../io#read_utf8_byte-instance-method&quot;&gt; read_utf8_byte read_utf8_byte&lt;/a&gt;, &lt;a href=&quot;../../io#rewind-instance-method&quot;&gt; rewind rewind&lt;/a&gt;, &lt;a href=&quot;../../io#seek(offset,whence:Seek=Seek::Set)-instance-method&quot;&gt; seek(offset, whence : Seek = Seek::Set) seek&lt;/a&gt;, &lt;a href=&quot;../../io#set_encoding(encoding:String,invalid:Symbol?=nil)-instance-method&quot;&gt; set_encoding(encoding : String, invalid : Symbol? = nil) set_encoding&lt;/a&gt;, &lt;a href=&quot;../../io#skip(bytes_count:Int):Nil-instance-method&quot;&gt; skip(bytes_count : Int) : Nil skip&lt;/a&gt;, &lt;a href=&quot;../../io#skip_to_end:Nil-instance-method&quot;&gt; skip_to_end : Nil skip_to_end&lt;/a&gt;, &lt;a href=&quot;../../io#tell-instance-method&quot;&gt; tell tell&lt;/a&gt;, &lt;a href=&quot;../../io#tty?:Bool-instance-method&quot;&gt; tty? : Bool tty?&lt;/a&gt;, &lt;a href=&quot;../../io#write(slice:Bytes):Nil-instance-method&quot;&gt; write(slice : Bytes) : Nil write&lt;/a&gt;, &lt;a href=&quot;../../io#write_byte(byte:UInt8)-instance-method&quot;&gt; write_byte(byte : UInt8) write_byte&lt;/a&gt;, &lt;a href=&quot;../../io#write_bytes(object,format:IO::ByteFormat=IO::ByteFormat::SystemEndian)-instance-method&quot;&gt; write_bytes(object, format : IO::ByteFormat = IO::ByteFormat::SystemEndian) write_bytes&lt;/a&gt;, &lt;a href=&quot;../../io#write_utf8(slice:Bytes)-instance-method&quot;&gt; write_utf8(slice : Bytes) write_utf8&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../io#self-instance-method&quot;&gt;&amp;lt;self &amp;lt;&amp;lt;&lt;/a&gt; , &lt;a href=&quot;../../io#close-instance-method&quot;&gt;закрыть закрыть&lt;/a&gt; , &lt;a href=&quot;../../io#closed?-instance-method&quot;&gt;закрыть? закрыто?&lt;/a&gt; , &lt;a href=&quot;../../io#each_byte(&amp;amp;block):Nil-instance-method&quot;&gt;each_byte (&amp;amp; block): ноль &lt;br/&gt;each_byte each_byte&lt;/a&gt; , &lt;a href=&quot;../../io#each_char(&amp;amp;block):Nil-instance-method&quot;&gt;each_char (&amp;amp; block): ноль &lt;br/&gt;each_char each_char&lt;/a&gt; , &lt;a href=&quot;../../io#each_line(*args,**options,&amp;amp;block:String-%3E):Nil-instance-method&quot;&gt;each_line (* аргументы, ** параметры, &amp;amp; block: String -&amp;gt;): ноль &lt;br/&gt;each_line (* args, ** options) each_line&lt;/a&gt; , &lt;a href=&quot;../../io#encoding:String-instance-method&quot;&gt;кодировка: String кодирование&lt;/a&gt; , &lt;a href=&quot;../../io#flush-instance-method&quot;&gt;флэш-флэш&lt;/a&gt; , &lt;a href=&quot;../../io#gets(delimiter:Char,limit:Int,chomp=false):String?-instance-method&quot;&gt;получает (разделитель: Char, предел: Int, chomp = false): String? &lt;br/&gt;получает (разделитель: Char, chomp = false): строка? &lt;br/&gt;get (chomp = true): строка? &lt;br/&gt;get (limit: Int, chomp = false): Строка? &lt;br/&gt;get (разделитель: String, chomp = false): String? получает&lt;/a&gt; ,&lt;a href=&quot;../../io#gets_to_end:String-instance-method&quot;&gt;gets_to_end: String gets_to_end&lt;/a&gt; , &lt;a href=&quot;../../io#peek:Bytes?-instance-method&quot;&gt;peek: байт? peek&lt;/a&gt; , &lt;a href=&quot;../../io#pos-instance-method&quot;&gt;pos pos&lt;/a&gt; , &lt;a href=&quot;../../io#pos=(value)-instance-method&quot;&gt;pos = (значение) pos =&lt;/a&gt; , &lt;a href=&quot;../../io#print(*objects:UNDERSCORE):Nil-instance-method&quot;&gt;print (* объекты: UNDERSCORE): ноль &lt;br/&gt;print (obj): ноль print&lt;/a&gt; , &lt;a href=&quot;../../io#printf(format_string,*args):Nil-instance-method&quot;&gt;printf (format_string, * args): ноль &lt;br/&gt;printf (format_string, args: Array | Tuple): Ноль printf&lt;/a&gt; , &lt;a href=&quot;../../io#puts(*objects:UNDERSCORE):Nil-instance-method&quot;&gt;put (* объекты: UNDERSCORE): Ноль &lt;br/&gt;устанавливает: Нил &lt;br/&gt;ставит (obj): Ноль &lt;br/&gt;ставит (строка: строка): Ноль ставит&lt;/a&gt; , &lt;a href=&quot;../../io#read(slice:Bytes)-instance-method&quot;&gt;читает (фрагмент: байты), читает&lt;/a&gt; , &lt;a href=&quot;../../io#read_at(offset,bytesize,&amp;amp;block)-instance-method&quot;&gt;read_at (смещение, размер в байтах и ​​блокирует) read_at&lt;/a&gt; , &lt;a href=&quot;../../io#read_byte:UInt8?-instance-method&quot;&gt;read_byte : UInt8? read_byte&lt;/a&gt; , &lt;a href=&quot;../../io#read_bytes(type,format:IO::ByteFormat=IO::ByteFormat::SystemEndian)-instance-method&quot;&gt;read_bytes (тип, формат: IO :: ByteFormat = IO :: ByteFormat :: SystemEndian) read_bytes&lt;/a&gt;, &lt;a href=&quot;../../io#read_char:Char?-instance-method&quot;&gt;read_char: Char? read_char&lt;/a&gt; , &lt;a href=&quot;../../io#read_fully(slice:Bytes)-instance-method&quot;&gt;read_fully (slice: Bytes) read_fully&lt;/a&gt; , &lt;a href=&quot;../../io#read_fully?(slice:Bytes)-instance-method&quot;&gt;read_fully? (slice: Bytes) read_fully?&lt;/a&gt; , &lt;a href=&quot;../../io#read_line(*args,**options):String-instance-method&quot;&gt;read_line (* args, ** options): строка read_line&lt;/a&gt; , &lt;a href=&quot;../../io#read_string(bytesize:Int):String-instance-method&quot;&gt;read_string (bytesize: Int): строка read_string&lt;/a&gt; , &lt;a href=&quot;../../io#read_utf8(slice:Bytes)-instance-method&quot;&gt;read_utf8 (slice: Bytes) read_utf8&lt;/a&gt; , &lt;a href=&quot;../../io#read_utf8_byte-instance-method&quot;&gt;read_utf8_byte read_utf8_byte&lt;/a&gt; , &lt;a href=&quot;../../io#rewind-instance-method&quot;&gt;перемотка назад&lt;/a&gt; , перемотка назад , &lt;a href=&quot;../../io#seek(offset,whence:Seek=Seek::Set)-instance-method&quot;&gt;поиск (смещение, отсюда: Seek = Seek :: Set ) искать&lt;/a&gt; , &lt;a href=&quot;../../io#set_encoding(encoding:String,invalid:Symbol?=nil)-instance-method&quot;&gt;set_encoding (кодировка: строка, недействительный: символ? = ноль) set_encoding&lt;/a&gt; , &lt;a href=&quot;../../io#skip(bytes_count:Int):Nil-instance-method&quot;&gt;пропустить (bytes_count: Int): ноль пропустить&lt;/a&gt; , &lt;a href=&quot;../../io#skip_to_end:Nil-instance-method&quot;&gt;skip_to_end: ноль skip_to_end&lt;/a&gt; , &lt;a href=&quot;../../io#tell-instance-method&quot;&gt;сказать, сказать&lt;/a&gt; ,&lt;a href=&quot;../../io#tty?:Bool-instance-method&quot;&gt;терминал? : Bool tty?&lt;/a&gt; , &lt;a href=&quot;../../io#write(slice:Bytes):Nil-instance-method&quot;&gt;запись (фрагмент: байты): &lt;/a&gt;&lt;a href=&quot;../../io#write_byte(byte:UInt8)-instance-method&quot;&gt;нулевая &lt;/a&gt;запись , запись_байта (байт: UInt8) запись_байта , &lt;a href=&quot;../../io#write_bytes(object,format:IO::ByteFormat=IO::ByteFormat::SystemEndian)-instance-method&quot;&gt;запись_байта (объект, формат: IO :: ByteFormat = IO :: ByteFormat :: SystemEndian) запись_байта&lt;/a&gt; , &lt;a href=&quot;../../io#write_utf8(slice:Bytes)-instance-method&quot;&gt;запись_utf8 (фрагмент: байты) write_utf8&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8ad36b75ad455f2678033fef6db3764530a06dc7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../io/buffered#buffer_size-instance-method&quot;&gt; buffer_size buffer_size&lt;/a&gt;, &lt;a href=&quot;../../io/buffered#buffer_size=(value)-instance-method&quot;&gt; buffer_size=(value) buffer_size=&lt;/a&gt;, &lt;a href=&quot;../../io/buffered#close:Nil-instance-method&quot;&gt; close : Nil close&lt;/a&gt;, &lt;a href=&quot;../../io/buffered#flush-instance-method&quot;&gt; flush flush&lt;/a&gt;, &lt;a href=&quot;../../io/buffered#peek:Bytes?-instance-method&quot;&gt; peek : Bytes? peek&lt;/a&gt;, &lt;a href=&quot;../../io/buffered#read(slice:Bytes)-instance-method&quot;&gt; read(slice : Bytes) read&lt;/a&gt;, &lt;a href=&quot;../../io/buffered#read_buffering=(read_buffering)-instance-method&quot;&gt; read_buffering=(read_buffering) read_buffering=&lt;/a&gt;, &lt;a href=&quot;../../io/buffered#read_buffering?-instance-method&quot;&gt; read_buffering? read_buffering?&lt;/a&gt;, &lt;a href=&quot;../../io/buffered#rewind-instance-method&quot;&gt; rewind rewind&lt;/a&gt;, &lt;a href=&quot;../../io/buffered#sync=(sync)-instance-method&quot;&gt; sync=(sync) sync=&lt;/a&gt;, &lt;a href=&quot;../../io/buffered#sync?-instance-method&quot;&gt; sync? sync?&lt;/a&gt;, &lt;a href=&quot;../../io/buffered#unbuffered_close-instance-method&quot;&gt; unbuffered_close unbuffered_close&lt;/a&gt;, &lt;a href=&quot;../../io/buffered#unbuffered_flush-instance-method&quot;&gt; unbuffered_flush unbuffered_flush&lt;/a&gt;, &lt;a href=&quot;../../io/buffered#unbuffered_read(slice:Bytes)-instance-method&quot;&gt; unbuffered_read(slice : Bytes) unbuffered_read&lt;/a&gt;, &lt;a href=&quot;../../io/buffered#unbuffered_rewind-instance-method&quot;&gt; unbuffered_rewind unbuffered_rewind&lt;/a&gt;, &lt;a href=&quot;../../io/buffered#unbuffered_write(slice:Bytes)-instance-method&quot;&gt; unbuffered_write(slice : Bytes) unbuffered_write&lt;/a&gt;, &lt;a href=&quot;../../io/buffered#write(slice:Bytes):Nil-instance-method&quot;&gt; write(slice : Bytes) : Nil write&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../io/buffered#buffer_size-instance-method&quot;&gt;buffer_size buffer_size&lt;/a&gt; , &lt;a href=&quot;../../io/buffered#buffer_size=(value)-instance-method&quot;&gt;buffer_size = (значение) buffer_size =&lt;/a&gt; , &lt;a href=&quot;../../io/buffered#close:Nil-instance-method&quot;&gt;close: ноль закрыть&lt;/a&gt; , &lt;a href=&quot;../../io/buffered#flush-instance-method&quot;&gt;очистить флэш&lt;/a&gt; , &lt;a href=&quot;../../io/buffered#peek:Bytes?-instance-method&quot;&gt;посмотреть: байты? заглянуть&lt;/a&gt; , &lt;a href=&quot;../../io/buffered#read(slice:Bytes)-instance-method&quot;&gt;прочитать (фрагмент: байты), прочитать&lt;/a&gt; , &lt;a href=&quot;../../io/buffered#read_buffering=(read_buffering)-instance-method&quot;&gt;read_buffering = (read_buffering) read_buffering =&lt;/a&gt; , &lt;a href=&quot;../../io/buffered#read_buffering?-instance-method&quot;&gt;read_buffering? read_buffering?&lt;/a&gt; , &lt;a href=&quot;../../io/buffered#rewind-instance-method&quot;&gt;перемотка перемотка&lt;/a&gt; , &lt;a href=&quot;../../io/buffered#sync=(sync)-instance-method&quot;&gt;синхронизация = (синхронизация) синхронизация =&lt;/a&gt; , &lt;a href=&quot;../../io/buffered#sync?-instance-method&quot;&gt;синхронизация? синхронизация?&lt;/a&gt; , &lt;a href=&quot;../../io/buffered#unbuffered_close-instance-method&quot;&gt;unbuffered_close unbuffered_close&lt;/a&gt; , &lt;a href=&quot;../../io/buffered#unbuffered_flush-instance-method&quot;&gt;unbuffered_flush unbuffered_flush&lt;/a&gt; , &lt;a href=&quot;../../io/buffered#unbuffered_read(slice:Bytes)-instance-method&quot;&gt;unbuffered_read (фрагмент: байты) unbuffered_read&lt;/a&gt; , &lt;a href=&quot;../../io/buffered#unbuffered_rewind-instance-method&quot;&gt;unbuffered_rewind unbuffered_rewind&lt;/a&gt; ,&lt;a href=&quot;../../io/buffered#unbuffered_write(slice:Bytes)-instance-method&quot;&gt;unbuffered_write (фрагмент: байты) unbuffered_write&lt;/a&gt; , &lt;a href=&quot;../../io/buffered#write(slice:Bytes):Nil-instance-method&quot;&gt;запись (фрагмент: байты): нулевая запись&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="106c0db456ef0fe685caa03eec47e825b3fcd675" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../object#!=(other)-instance-method&quot;&gt; !=(other) !=&lt;/a&gt;, &lt;a href=&quot;../../object#!~(other)-instance-method&quot;&gt; !~(other) !~&lt;/a&gt;, &lt;a href=&quot;../../object#==(other)-instance-method&quot;&gt; ==(other) ==&lt;/a&gt;, &lt;a href=&quot;../../object#===(other:JSON::Any)-instance-method&quot;&gt; ===(other : JSON::Any)&lt;br/&gt;===(other : YAML::Any)&lt;br/&gt;===(other) ===&lt;/a&gt;, &lt;a href=&quot;../../object#=~(other)-instance-method&quot;&gt; =~(other) =~&lt;/a&gt;, &lt;a href=&quot;../../object#class-instance-method&quot;&gt; class class&lt;/a&gt;, &lt;a href=&quot;../../object#dup-instance-method&quot;&gt; dup dup&lt;/a&gt;, &lt;a href=&quot;../../object#hash(hasher)-instance-method&quot;&gt; hash(hasher)&lt;br/&gt;hash hash&lt;/a&gt;, &lt;a href=&quot;../../object#inspect(io:IO):Nil-instance-method&quot;&gt; inspect(io : IO) : Nil&lt;br/&gt;inspect : String inspect&lt;/a&gt;, &lt;a href=&quot;../../object#itself-instance-method&quot;&gt; itself itself&lt;/a&gt;, &lt;a href=&quot;../../object#not_nil!-instance-method&quot;&gt; not_nil! not_nil!&lt;/a&gt;,  pretty_inspect(width = 79, newline = &quot;\n&quot;, indent = 0) : String pretty_inspect, &lt;a href=&quot;../../object#pretty_print(pp:PrettyPrint):Nil-instance-method&quot;&gt; pretty_print(pp : PrettyPrint) : Nil pretty_print&lt;/a&gt;, &lt;a href=&quot;../../object#tap(&amp;amp;block)-instance-method&quot;&gt; tap(&amp;amp;block) tap&lt;/a&gt;, &lt;a href=&quot;../../object#to_json(io:IO)-instance-method&quot;&gt; to_json(io : IO)&lt;br/&gt;to_json to_json&lt;/a&gt;,  to_pretty_json(indent : String = &quot; &quot;)</source>
          <target state="translated">&lt;a href=&quot;../../object#!=(other)-instance-method&quot;&gt;! = (другое) =!&lt;/a&gt; , &lt;a href=&quot;../../object#!~(other)-instance-method&quot;&gt;~ (другой) ~!&lt;/a&gt; , &lt;a href=&quot;../../object#==(other)-instance-method&quot;&gt;== (другое) ==&lt;/a&gt; , &lt;a href=&quot;../../object#===(other:JSON::Any)-instance-method&quot;&gt;=== (другое: JSON :: Любой) &lt;br/&gt;=== (другое: YAML :: Любой) &lt;br/&gt;=== ( other) ===&lt;/a&gt; , &lt;a href=&quot;../../object#=~(other)-instance-method&quot;&gt;= ~ (other) = ~&lt;/a&gt; , &lt;a href=&quot;../../object#class-instance-method&quot;&gt;класс class&lt;/a&gt; , &lt;a href=&quot;../../object#dup-instance-method&quot;&gt;dup dup&lt;/a&gt; , &lt;a href=&quot;../../object#hash(hasher)-instance-method&quot;&gt;hash (hasher) &lt;br/&gt;hash hashes&lt;/a&gt; , &lt;a href=&quot;../../object#inspect(io:IO):Nil-instance-method&quot;&gt;inspect (io: IO): Nil &lt;br/&gt;inspect: проверка строки&lt;/a&gt; , &lt;a href=&quot;../../object#itself-instance-method&quot;&gt;сама по себе&lt;/a&gt; , &lt;a href=&quot;../../object#not_nil!-instance-method&quot;&gt;not_nil! not_nil!&lt;/a&gt; , Pretty_inspect (ширина = 79, перевод строка = &quot;\ п&quot;, отступ = 0): String pretty_inspect, &lt;a href=&quot;../../object#pretty_print(pp:PrettyPrint):Nil-instance-method&quot;&gt;pretty_print (стр: PrettyPrint): Ноль pretty_print&lt;/a&gt; , &lt;a href=&quot;../../object#tap(&amp;amp;block)-instance-method&quot;&gt;кран (&amp;amp; блок) кран&lt;/a&gt; , &lt;a href=&quot;../../object#to_json(io:IO)-instance-method&quot;&gt;to_json (Io: IO) &lt;br/&gt;to_json to_json&lt;/a&gt;, to_pretty_json (indent: String = &quot;&quot;)</target>
        </trans-unit>
        <trans-unit id="9476503aef29e2f088ca9831b9041606ac0b5b2a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../object#from_json(string_or_io,root:String):self-class-method&quot;&gt; from_json(string_or_io, root : String) : self&lt;br/&gt;from_json(string_or_io) : self from_json&lt;/a&gt;, &lt;a href=&quot;../../object#from_yaml(string_or_io:String%7CIO):self-class-method&quot;&gt; from_yaml(string_or_io : String | IO) : self from_yaml&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../object#from_json(string_or_io,root:String):self-class-method&quot;&gt;from_json (string_or_io, root: String): self &lt;br/&gt;from_json (string_or_io): self from_json&lt;/a&gt; , &lt;a href=&quot;../../object#from_yaml(string_or_io:String%7CIO):self-class-method&quot;&gt;from_yaml (string_or_io: String | IO): self from_yaml&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f9036be388aeb3c307194a07ec6247dea0dc2fee" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../reference#==(other:self)-instance-method&quot;&gt; ==(other : self)&lt;br/&gt;==(other : JSON::Any)&lt;br/&gt;==(other : YAML::Any)&lt;br/&gt;==(other) ==&lt;/a&gt;, &lt;a href=&quot;../../reference#dup-instance-method&quot;&gt; dup dup&lt;/a&gt;, &lt;a href=&quot;../../reference#hash(hasher)-instance-method&quot;&gt; hash(hasher) hash&lt;/a&gt;, &lt;a href=&quot;../../reference#inspect(io:IO):Nil-instance-method&quot;&gt; inspect(io : IO) : Nil inspect&lt;/a&gt;, &lt;a href=&quot;../../reference#object_id:UInt64-instance-method&quot;&gt; object_id : UInt64 object_id&lt;/a&gt;, &lt;a href=&quot;../../reference#pretty_print(pp):Nil-instance-method&quot;&gt; pretty_print(pp) : Nil pretty_print&lt;/a&gt;, &lt;a href=&quot;../../reference#same?(other:Reference)-instance-method&quot;&gt; same?(other : Reference)&lt;br/&gt;same?(other : Nil) same?&lt;/a&gt;, &lt;a href=&quot;../../reference#to_s(io:IO):Nil-instance-method&quot;&gt; to_s(io : IO) : Nil to_s&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../reference#==(other:self)-instance-method&quot;&gt;== (прочее: self) &lt;br/&gt;== (прочее: JSON :: Any) &lt;br/&gt;== (прочее: YAML :: Any) &lt;br/&gt;== (прочее) ==&lt;/a&gt; , &lt;a href=&quot;../../reference#dup-instance-method&quot;&gt;dup dup&lt;/a&gt; , &lt;a href=&quot;../../reference#hash(hasher)-instance-method&quot;&gt;hash (хэш)&lt;/a&gt; , &lt;a href=&quot;../../reference#inspect(io:IO):Nil-instance-method&quot;&gt;проверить (io: IO) : Ноль проверять&lt;/a&gt; , &lt;a href=&quot;../../reference#object_id:UInt64-instance-method&quot;&gt;object_id: UInt64 object_id&lt;/a&gt; , &lt;a href=&quot;../../reference#pretty_print(pp):Nil-instance-method&quot;&gt;pretty_print (pp): ноль pretty_print&lt;/a&gt; , то &lt;a href=&quot;../../reference#same?(other:Reference)-instance-method&quot;&gt;же самое? (Другое: ссылка) то &lt;br/&gt;же самое? (Другое: ноль) то же самое? &lt;/a&gt;, &lt;a href=&quot;../../reference#to_s(io:IO):Nil-instance-method&quot;&gt;to_s (io: IO): ноль to_s&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e72a0df48b6eed42f1d0e76cb77f8d181bcecc0e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../socket/server#accept:IO-instance-method&quot;&gt; accept : IO&lt;br/&gt;accept(&amp;amp;block) accept&lt;/a&gt;, &lt;a href=&quot;../../socket/server#accept?:IO?-instance-method&quot;&gt; accept? : IO?&lt;br/&gt;accept?(&amp;amp;block) accept?&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../socket/server#accept:IO-instance-method&quot;&gt;принять: IO &lt;br/&gt;принять (и заблокировать) принять&lt;/a&gt; , &lt;a href=&quot;../../socket/server#accept?:IO?-instance-method&quot;&gt;принять? : IO? &lt;br/&gt;принять? (&amp;amp; заблокировать) принять?&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bb5216838eda112c1ca1e9832a3722897f379046" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../struct#==(other):Bool-instance-method&quot;&gt; ==(other) : Bool ==&lt;/a&gt;, &lt;a href=&quot;../../struct#hash(hasher)-instance-method&quot;&gt; hash(hasher) hash&lt;/a&gt;, &lt;a href=&quot;../../struct#inspect(io:IO):Nil-instance-method&quot;&gt; inspect(io : IO) : Nil inspect&lt;/a&gt;, &lt;a href=&quot;../../struct#pretty_print(pp):Nil-instance-method&quot;&gt; pretty_print(pp) : Nil pretty_print&lt;/a&gt;, &lt;a href=&quot;../../struct#to_s(io:IO):Nil-instance-method&quot;&gt; to_s(io : IO) : Nil to_s&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../struct#==(other):Bool-instance-method&quot;&gt;== (прочее): Bool ==&lt;/a&gt; , &lt;a href=&quot;../../struct#hash(hasher)-instance-method&quot;&gt;хеш (хеш) хеш&lt;/a&gt; , &lt;a href=&quot;../../struct#inspect(io:IO):Nil-instance-method&quot;&gt;проверять (io: IO): ноль проверять&lt;/a&gt; , &lt;a href=&quot;../../struct#pretty_print(pp):Nil-instance-method&quot;&gt;pretty_print (pp): ноль pretty_print&lt;/a&gt; , &lt;a href=&quot;../../struct#to_s(io:IO):Nil-instance-method&quot;&gt;to_s (io: IO): ноль to_s&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="18f148482a64ab8f4526ebe6672f812bdddd8964" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../value#==(other:JSON::Any)-instance-method&quot;&gt; ==(other : JSON::Any)&lt;br/&gt;==(other : YAML::Any)&lt;br/&gt;==(other) ==&lt;/a&gt;, &lt;a href=&quot;../../value#dup-instance-method&quot;&gt; dup dup&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../value#==(other:JSON::Any)-instance-method&quot;&gt;== (другое: JSON :: Any) &lt;br/&gt;== (другое: YAML :: Any) &lt;br/&gt;== (другое) ==&lt;/a&gt; , &lt;a href=&quot;../../value#dup-instance-method&quot;&gt;dup dup&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3ffec79c224b2d49ccb5e79d8025fda1bffb4ceb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../abi#abi_info(atys:Array(Type),rty:Type,ret_def:Bool,context:Context)-instance-method&quot;&gt; abi_info(atys : Array(Type), rty : Type, ret_def : Bool, context : Context) abi_info&lt;/a&gt;, &lt;a href=&quot;../abi#align(type:Type,pointer_size)-instance-method&quot;&gt; align(type : Type, pointer_size)&lt;br/&gt;align(type : Type) align&lt;/a&gt;, &lt;a href=&quot;../abi#align_offset(offset,type)-instance-method&quot;&gt; align_offset(offset, type) align_offset&lt;/a&gt;, &lt;a href=&quot;../abi#osx?:Bool-instance-method&quot;&gt; osx? : Bool osx?&lt;/a&gt;, &lt;a href=&quot;../abi#size(type:Type,pointer_size)-instance-method&quot;&gt; size(type : Type, pointer_size)&lt;br/&gt;size(type : Type) size&lt;/a&gt;, &lt;a href=&quot;../abi#target_data:TargetData-instance-method&quot;&gt; target_data : TargetData target_data&lt;/a&gt;, &lt;a href=&quot;../abi#windows?:Bool-instance-method&quot;&gt; windows? : Bool windows?&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../abi#abi_info(atys:Array(Type),rty:Type,ret_def:Bool,context:Context)-instance-method&quot;&gt;abi_info (atys: Array (Type), rty: Type, ret_def: Bool, context: Context) abi_info&lt;/a&gt; , &lt;a href=&quot;../abi#align(type:Type,pointer_size)-instance-method&quot;&gt;align (тип: Type, pointer_size) &lt;br/&gt;align (тип: Type) align&lt;/a&gt; , &lt;a href=&quot;../abi#align_offset(offset,type)-instance-method&quot;&gt;align_offset (offset, type) align_offset&lt;/a&gt; , &lt;a href=&quot;../abi#osx?:Bool-instance-method&quot;&gt;osx? : Bool osx?&lt;/a&gt; , &lt;a href=&quot;../abi#size(type:Type,pointer_size)-instance-method&quot;&gt;размер (тип: Type, pointer_size) &lt;br/&gt;размер (тип: Type) размер&lt;/a&gt; , &lt;a href=&quot;../abi#target_data:TargetData-instance-method&quot;&gt;target_data: TargetData target_data&lt;/a&gt; , &lt;a href=&quot;../abi#windows?:Bool-instance-method&quot;&gt;windows? : Bool окна?&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="53286bd028546e00315548c6ea24a41ff02e14f7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../accesstoken#access_token:String-instance-method&quot;&gt; access_token : String access_token&lt;/a&gt;, &lt;a href=&quot;../accesstoken#access_token=(access_token:String)-instance-method&quot;&gt; access_token=(access_token : String) access_token=&lt;/a&gt;, &lt;a href=&quot;../accesstoken#authenticate(request:HTTP::Request,tls)-instance-method&quot;&gt; authenticate(request : HTTP::Request, tls)&lt;br/&gt;authenticate(client : HTTP::Client) authenticate&lt;/a&gt;, &lt;a href=&quot;../accesstoken#expires_in:Int64?-instance-method&quot;&gt; expires_in : Int64? expires_in&lt;/a&gt;, &lt;a href=&quot;../accesstoken#expires_in=(expires_in:Int64?)-instance-method&quot;&gt; expires_in=(expires_in : Int64?) expires_in=&lt;/a&gt;, &lt;a href=&quot;../accesstoken#extra:Hash(String,String)?-instance-method&quot;&gt; extra : Hash(String, String)? extra&lt;/a&gt;, &lt;a href=&quot;../accesstoken#extra=(extra:Hash(String,String)?)-instance-method&quot;&gt; extra=(extra : Hash(String, String)?) extra=&lt;/a&gt;, &lt;a href=&quot;../accesstoken#refresh_token:String?-instance-method&quot;&gt; refresh_token : String? refresh_token&lt;/a&gt;, &lt;a href=&quot;../accesstoken#refresh_token=(refresh_token:String?)-instance-method&quot;&gt; refresh_token=(refresh_token : String?) refresh_token=&lt;/a&gt;, &lt;a href=&quot;../accesstoken#scope:String?-instance-method&quot;&gt; scope : String? scope&lt;/a&gt;, &lt;a href=&quot;../accesstoken#scope=(scope:String?)-instance-method&quot;&gt; scope=(scope : String?) scope=&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../accesstoken#access_token:String-instance-method&quot;&gt;access_token: строка access_token&lt;/a&gt; , &lt;a href=&quot;../accesstoken#access_token=(access_token:String)-instance-method&quot;&gt;access_token = (access_token: String) access_token =&lt;/a&gt; , &lt;a href=&quot;../accesstoken#authenticate(request:HTTP::Request,tls)-instance-method&quot;&gt;аутентификация (запрос: HTTP :: Request, tls) &lt;br/&gt;аутентификация (клиент: HTTP :: Client) аутентификация&lt;/a&gt; , &lt;a href=&quot;../accesstoken#expires_in:Int64?-instance-method&quot;&gt;expires_in: Int64? expires_in&lt;/a&gt; , &lt;a href=&quot;../accesstoken#expires_in=(expires_in:Int64?)-instance-method&quot;&gt;expires_in = (expires_in: Int64?) expires_in =&lt;/a&gt; , &lt;a href=&quot;../accesstoken#extra:Hash(String,String)?-instance-method&quot;&gt;extra: Hash (String, String)? extra&lt;/a&gt; , &lt;a href=&quot;../accesstoken#extra=(extra:Hash(String,String)?)-instance-method&quot;&gt;extra = (extra: Hash (String, String)?) extra =&lt;/a&gt; , &lt;a href=&quot;../accesstoken#refresh_token:String?-instance-method&quot;&gt;refresh_token: String? refresh_token&lt;/a&gt; , &lt;a href=&quot;../accesstoken#refresh_token=(refresh_token:String?)-instance-method&quot;&gt;refresh_token = (refresh_token: String?) refresh_token =&lt;/a&gt; , &lt;a href=&quot;../accesstoken#scope:String?-instance-method&quot;&gt;scope: String? scope&lt;/a&gt; , &lt;a href=&quot;../accesstoken#scope=(scope:String?)-instance-method&quot;&gt;scope = (scope: String?) scope =&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2a93dd4c5dd324032a202e3509fa7823ff60c500" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;span&quot;&gt;Time::Span&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;../comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;span&quot;&gt;Time::Span&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="72461e5b39ae1635a75b9c3629757711a16a8288" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../comparable#%3C(other:T)-instance-method&quot;&gt;  &amp;lt;&lt;/a&gt;, &lt;a href=&quot;../comparable#%3C=(other:T)-instance-method&quot;&gt; &amp;lt;=(other : T) &amp;lt;=&lt;/a&gt;, &lt;a href=&quot;../comparable#(other:T)-instance-method&quot;&gt; &amp;lt;=&amp;gt;(other : T) &amp;lt;=&amp;gt;&lt;/a&gt;, &lt;a href=&quot;../comparable#==(other:T)-instance-method&quot;&gt; ==(other : T) ==&lt;/a&gt;, &lt;a href=&quot;../comparable#%3E(other:T)-instance-method&quot;&gt; &amp;gt;(other : T) &amp;gt;&lt;/a&gt;, &lt;a href=&quot;../comparable#%3E=(other:T)-instance-method&quot;&gt; &amp;gt;=(other : T) &amp;gt;=&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../comparable#%3C(other:T)-instance-method&quot;&gt; &amp;lt;&lt;/a&gt; , &lt;a href=&quot;../comparable#%3C=(other:T)-instance-method&quot;&gt;&amp;lt;= (другое: T) &amp;lt;=&lt;/a&gt; , &lt;a href=&quot;../comparable#(other:T)-instance-method&quot;&gt;&amp;lt;=&amp;gt; (другое: T) &amp;lt;=&amp;gt;&lt;/a&gt; , &lt;a href=&quot;../comparable#==(other:T)-instance-method&quot;&gt;== (другое: T) ==&lt;/a&gt; , &lt;a href=&quot;../comparable#%3E(other:T)-instance-method&quot;&gt;&amp;gt; (другое: T)&amp;gt;&lt;/a&gt; , &lt;a href=&quot;../comparable#%3E=(other:T)-instance-method&quot;&gt;&amp;gt; = (другое: T)&amp;gt; знак равно&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="88c0a0faf2b539286dd6be9a564ff4d315acf1f6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../context#add_modes(mode:OpenSSL::SSL::Modes)-instance-method&quot;&gt; add_modes(mode : OpenSSL::SSL::Modes) add_modes&lt;/a&gt;, &lt;a href=&quot;../context#add_options(options:OpenSSL::SSL::Options)-instance-method&quot;&gt; add_options(options : OpenSSL::SSL::Options) add_options&lt;/a&gt;, &lt;a href=&quot;../context#add_x509_verify_flags(flags:OpenSSL::X509VerifyFlags)-instance-method&quot;&gt; add_x509_verify_flags(flags : OpenSSL::X509VerifyFlags) add_x509_verify_flags&lt;/a&gt;, &lt;a href=&quot;../context#alpn_protocol=(protocol:String)-instance-method&quot;&gt; alpn_protocol=(protocol : String) alpn_protocol=&lt;/a&gt;, &lt;a href=&quot;../context#ca_certificates=(file_path:String)-instance-method&quot;&gt; ca_certificates=(file_path : String) ca_certificates=&lt;/a&gt;, &lt;a href=&quot;../context#ca_certificates_path=(dir_path:String)-instance-method&quot;&gt; ca_certificates_path=(dir_path : String) ca_certificates_path=&lt;/a&gt;, &lt;a href=&quot;../context#certificate_chain=(file_path:String)-instance-method&quot;&gt; certificate_chain=(file_path : String) certificate_chain=&lt;/a&gt;, &lt;a href=&quot;../context#ciphers=(ciphers:String)-instance-method&quot;&gt; ciphers=(ciphers : String) ciphers=&lt;/a&gt;, &lt;a href=&quot;../context#default_verify_param=(name:String)-instance-method&quot;&gt; default_verify_param=(name : String) default_verify_param=&lt;/a&gt;, &lt;a href=&quot;../context#finalize-instance-method&quot;&gt; finalize finalize&lt;/a&gt;, &lt;a href=&quot;../context#modes-instance-method&quot;&gt; modes modes&lt;/a&gt;, &lt;a href=&quot;../context#options-instance-method&quot;&gt; options options&lt;/a&gt;, &lt;a href=&quot;../context#private_key=(file_path:String)-instance-method&quot;&gt; private_key=(file_path : String) private_key=&lt;/a&gt;, &lt;a href=&quot;../context#remove_modes(mode:OpenSSL::SSL::Modes)-instance-method&quot;&gt; remove_modes(mode : OpenSSL::SSL::Modes) remove_modes&lt;/a&gt;, &lt;a href=&quot;../context#remove_options(options:OpenSSL::SSL::Options)-instance-method&quot;&gt; remove_options(options : OpenSSL::SSL::Options) remove_options&lt;/a&gt;, &lt;a href=&quot;../context#set_default_verify_paths-instance-method&quot;&gt; set_default_verify_paths set_default_verify_paths&lt;/a&gt;, &lt;a href=&quot;../context#set_tmp_ecdh_key(curve=LibCrypto::NID_X9_62_prime256v1)-instance-method&quot;&gt; set_tmp_ecdh_key(curve = LibCrypto::NID_X9_62_prime256v1) set_tmp_ecdh_key&lt;/a&gt;, &lt;a href=&quot;../context#to_unsafe:LibSSL::SSLContext-instance-method&quot;&gt; to_unsafe : LibSSL::SSLContext to_unsafe&lt;/a&gt;, &lt;a href=&quot;../context#verify_mode-instance-method&quot;&gt; verify_mode verify_mode&lt;/a&gt;, &lt;a href=&quot;../context#verify_mode=(mode:OpenSSL::SSL::VerifyMode)-instance-method&quot;&gt; verify_mode=(mode : OpenSSL::SSL::VerifyMode) verify_mode=&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../context#add_modes(mode:OpenSSL::SSL::Modes)-instance-method&quot;&gt;add_modes (режим: OpenSSL :: SSL :: режимы) add_modes&lt;/a&gt; , &lt;a href=&quot;../context#add_options(options:OpenSSL::SSL::Options)-instance-method&quot;&gt;add_options (варианты: OpenSSL :: SSL :: Options) add_options&lt;/a&gt; , &lt;a href=&quot;../context#add_x509_verify_flags(flags:OpenSSL::X509VerifyFlags)-instance-method&quot;&gt;add_x509_verify_flags (флаги: OpenSSL :: X509VerifyFlags) add_x509_verify_flags&lt;/a&gt; , &lt;a href=&quot;../context#alpn_protocol=(protocol:String)-instance-method&quot;&gt;alpn_protocol = (протокол: String) alpn_protocol =&lt;/a&gt; , &lt;a href=&quot;../context#ca_certificates=(file_path:String)-instance-method&quot;&gt;ca_certificates = (путь_к_файл: String) ca_certificates =&lt;/a&gt; , &lt;a href=&quot;../context#ca_certificates_path=(dir_path:String)-instance-method&quot;&gt;ca_certificates_path = (dir_path: String) ca_certificates_path =&lt;/a&gt; , &lt;a href=&quot;../context#certificate_chain=(file_path:String)-instance-method&quot;&gt;certificate_chain = (путь_к_файл: String) certificate_chain =&lt;/a&gt; , &lt;a href=&quot;../context#ciphers=(ciphers:String)-instance-method&quot;&gt;шифры = (шифры: String) шифры =&lt;/a&gt; , &lt;a href=&quot;../context#default_verify_param=(name:String)-instance-method&quot;&gt;default_verify_param = (имя: String) default_verify_param =&lt;/a&gt; , &lt;a href=&quot;../context#finalize-instance-method&quot;&gt;финализации финализировать&lt;/a&gt; , &lt;a href=&quot;../context#modes-instance-method&quot;&gt;режимы режимов&lt;/a&gt; ,&lt;a href=&quot;../context#options-instance-method&quot;&gt;опции options&lt;/a&gt; , &lt;a href=&quot;../context#private_key=(file_path:String)-instance-method&quot;&gt;private_key = (file_path: String) private_key =&lt;/a&gt; , &lt;a href=&quot;../context#remove_modes(mode:OpenSSL::SSL::Modes)-instance-method&quot;&gt;remove_modes (режим: OpenSSL :: SSL :: Modes) remove_modes&lt;/a&gt; , &lt;a href=&quot;../context#remove_options(options:OpenSSL::SSL::Options)-instance-method&quot;&gt;remove_options (опции: OpenSSL :: SSL :: Options) remove_options&lt;/a&gt; , &lt;a href=&quot;../context#set_default_verify_paths-instance-method&quot;&gt;set_default_verify_paths set_default_veathy_paths&lt;/a&gt; , &lt;a href=&quot;../context#set_tmp_ecdh_key(curve=LibCrypto::NID_X9_62_prime256v1)-instance-method&quot;&gt;set_tmptoc: : NID_X9_62_prime256v1) set_tmp_ecdh_key&lt;/a&gt; , &lt;a href=&quot;../context#to_unsafe:LibSSL::SSLContext-instance-method&quot;&gt;to_unsafe: LibSSL :: SSLContext to_unsafe&lt;/a&gt; , &lt;a href=&quot;../context#verify_mode-instance-method&quot;&gt;verify_mode verify_mode&lt;/a&gt; , &lt;a href=&quot;../context#verify_mode=(mode:OpenSSL::SSL::VerifyMode)-instance-method&quot;&gt;verify_mode = (режим: OpenSSL :: SSL :: VerifyMode) verify_mode =&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3c6c8b3972f723dc27885ab6ebabb5acde55a2f0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../crystal/system/filedescriptor#fcntl(fd,cmd,arg=0)-class-method&quot;&gt; fcntl(fd, cmd, arg = 0) fcntl&lt;/a&gt;, &lt;a href=&quot;../crystal/system/filedescriptor#pipe(read_blocking,write_blocking)-class-method&quot;&gt; pipe(read_blocking, write_blocking) pipe&lt;/a&gt;, &lt;a href=&quot;../crystal/system/filedescriptor#pread(fd,buffer,offset)-class-method&quot;&gt; pread(fd, buffer, offset) pread&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../crystal/system/filedescriptor#fcntl(fd,cmd,arg=0)-class-method&quot;&gt;fcntl (fd, cmd, arg = 0) fcntl&lt;/a&gt; , &lt;a href=&quot;../crystal/system/filedescriptor#pipe(read_blocking,write_blocking)-class-method&quot;&gt;труба (read_blocking, write_blocking) труба&lt;/a&gt; , &lt;a href=&quot;../crystal/system/filedescriptor#pread(fd,buffer,offset)-class-method&quot;&gt;pread (fd, буфер, смещение) pread&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f71e2dae9c05eaccce01594bfdd667e9f8df7037" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../enum#&amp;amp;(other:self)-instance-method&quot;&gt; &amp;amp;(other : self) &amp;amp;&lt;/a&gt;, &lt;a href=&quot;../enum#+(other:Int)-instance-method&quot;&gt; +(other : Int) +&lt;/a&gt;, &lt;a href=&quot;../enum#-(other:Int)-instance-method&quot;&gt; -(other : Int) -&lt;/a&gt;, &lt;a href=&quot;../enum#(other:self)-instance-method&quot;&gt; &amp;lt;=&amp;gt;(other : self) &amp;lt;=&amp;gt;&lt;/a&gt;, &lt;a href=&quot;../enum#==(other:self)-instance-method&quot;&gt; ==(other : self) ==&lt;/a&gt;, &lt;a href=&quot;../enum#%5E(other:self)-instance-method&quot;&gt; ^(other : self) ^&lt;/a&gt;, &lt;a href=&quot;../enum#clone-instance-method&quot;&gt; clone clone&lt;/a&gt;, &lt;a href=&quot;../enum#each(&amp;amp;block)-instance-method&quot;&gt; each(&amp;amp;block) each&lt;/a&gt;, &lt;a href=&quot;../enum#hash(hasher)-instance-method&quot;&gt; hash(hasher) hash&lt;/a&gt;, &lt;a href=&quot;../enum#includes?(other:self)-instance-method&quot;&gt; includes?(other : self) includes?&lt;/a&gt;, &lt;a href=&quot;../enum#to_f32:Float32-instance-method&quot;&gt; to_f32 : Float32 to_f32&lt;/a&gt;, &lt;a href=&quot;../enum#to_f32!:Float32-instance-method&quot;&gt; to_f32! : Float32 to_f32!&lt;/a&gt;, &lt;a href=&quot;../enum#to_f64:Float64-instance-method&quot;&gt; to_f64 : Float64 to_f64&lt;/a&gt;, &lt;a href=&quot;../enum#to_f64!:Float64-instance-method&quot;&gt; to_f64! : Float64 to_f64!&lt;/a&gt;, &lt;a href=&quot;../enum#to_i:Int32-instance-method&quot;&gt; to_i : Int32 to_i&lt;/a&gt;, &lt;a href=&quot;../enum#to_i16:Int16-instance-method&quot;&gt; to_i16 : Int16 to_i16&lt;/a&gt;, &lt;a href=&quot;../enum#to_i16!:Int16-instance-method&quot;&gt; to_i16! : Int16 to_i16!&lt;/a&gt;, &lt;a href=&quot;../enum#to_i32:Int32-instance-method&quot;&gt; to_i32 : Int32 to_i32&lt;/a&gt;, &lt;a href=&quot;../enum#to_i32!:Int32-instance-method&quot;&gt; to_i32! : Int32 to_i32!&lt;/a&gt;, &lt;a href=&quot;../enum#to_i64:Int64-instance-method&quot;&gt; to_i64 : Int64 to_i64&lt;/a&gt;, &lt;a href=&quot;../enum#to_i64!:Int64-instance-method&quot;&gt; to_i64! : Int64 to_i64!&lt;/a&gt;, &lt;a href=&quot;../enum#to_i8:Int8-instance-method&quot;&gt; to_i8 : Int8 to_i8&lt;/a&gt;, &lt;a href=&quot;../enum#to_i8!:Int8-instance-method&quot;&gt; to_i8! : Int8 to_i8!&lt;/a&gt;, &lt;a href=&quot;../enum#to_json(json:JSON::Builder)-instance-method&quot;&gt; to_json(json : JSON::Builder) to_json&lt;/a&gt;, &lt;a href=&quot;../enum#to_s(io:IO):Nil-instance-method&quot;&gt; to_s(io : IO) : Nil&lt;br/&gt;to_s : String to_s&lt;/a&gt;, &lt;a href=&quot;../enum#to_u16:UInt16-instance-method&quot;&gt; to_u16 : UInt16 to_u16&lt;/a&gt;, &lt;a href=&quot;../enum#to_u16!:UInt16-instance-method&quot;&gt; to_u16! : UInt16 to_u16!&lt;/a&gt;, &lt;a href=&quot;../enum#to_u32:UInt32-instance-method&quot;&gt; to_u32 : UInt32 to_u32&lt;/a&gt;, &lt;a href=&quot;../enum#to_u32!:UInt32-instance-method&quot;&gt; to_u32! : UInt32 to_u32!&lt;/a&gt;, &lt;a href=&quot;../enum#to_u64:UInt64-instance-method&quot;&gt; to_u64 : UInt64 to_u64&lt;/a&gt;, &lt;a href=&quot;../enum#to_u64!:UInt64-instance-method&quot;&gt; to_u64! : UInt64 to_u64!&lt;/a&gt;, &lt;a href=&quot;../enum#to_u8:UInt8-instance-method&quot;&gt; to_u8 : UInt8 to_u8&lt;/a&gt;, &lt;a href=&quot;../enum#to_u8!:UInt8-instance-method&quot;&gt; to_u8! : UInt8 to_u8!&lt;/a&gt;, &lt;a href=&quot;../enum#to_yaml(yaml:YAML::Nodes::Builder)-instance-method&quot;&gt; to_yaml(yaml : YAML::Nodes::Builder) to_yaml&lt;/a&gt;, &lt;a href=&quot;../enum#%7C(other:self)-instance-method&quot;&gt; |(other : self) |&lt;/a&gt;, &lt;a href=&quot;../enum#~-instance-method&quot;&gt; ~ ~&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../enum#&amp;amp;(other:self)-instance-method&quot;&gt;&amp;amp; (другое: self) &amp;amp;&lt;/a&gt; , &lt;a href=&quot;../enum#+(other:Int)-instance-method&quot;&gt;+ (другое: Int) +&lt;/a&gt; , &lt;a href=&quot;../enum#-(other:Int)-instance-method&quot;&gt;- (другое: Int) -&lt;/a&gt; , &lt;a href=&quot;../enum#(other:self)-instance-method&quot;&gt;&amp;lt;=&amp;gt; (другое: self) &amp;lt;=&amp;gt;&lt;/a&gt; , &lt;a href=&quot;../enum#==(other:self)-instance-method&quot;&gt;== (другое: self) ==&lt;/a&gt; , &lt;a href=&quot;../enum#%5E(other:self)-instance-method&quot;&gt;^ (other: self) ^&lt;/a&gt; , &lt;a href=&quot;../enum#clone-instance-method&quot;&gt;clone clone&lt;/a&gt; , &lt;a href=&quot;../enum#each(&amp;amp;block)-instance-method&quot;&gt;каждый (&amp;amp; block) каждый&lt;/a&gt; , &lt;a href=&quot;../enum#hash(hasher)-instance-method&quot;&gt;hash (hasher) hash&lt;/a&gt; , &lt;a href=&quot;../enum#includes?(other:self)-instance-method&quot;&gt;включает? (other: self) включает?&lt;/a&gt; , &lt;a href=&quot;../enum#to_f32:Float32-instance-method&quot;&gt;to_f32: Float32 to_f32&lt;/a&gt; , &lt;a href=&quot;../enum#to_f32!:Float32-instance-method&quot;&gt;to_f32! : Float32 to_f32!&lt;/a&gt; , &lt;a href=&quot;../enum#to_f64:Float64-instance-method&quot;&gt;to_f64: Float64 to_f64&lt;/a&gt; , &lt;a href=&quot;../enum#to_f64!:Float64-instance-method&quot;&gt;to_f64! : Float64 to_f64!&lt;/a&gt; , &lt;a href=&quot;../enum#to_i:Int32-instance-method&quot;&gt;to_i: Int32 to_i&lt;/a&gt; , &lt;a href=&quot;../enum#to_i16:Int16-instance-method&quot;&gt;to_i16: Int16 to_i16&lt;/a&gt; , &lt;a href=&quot;../enum#to_i16!:Int16-instance-method&quot;&gt;to_i16! : Int16 to_i16!&lt;/a&gt; ,&lt;a href=&quot;../enum#to_i32:Int32-instance-method&quot;&gt;to_i32: Int32 to_i32&lt;/a&gt; , &lt;a href=&quot;../enum#to_i32!:Int32-instance-method&quot;&gt;to_i32! : Int32 to_i32!&lt;/a&gt; , &lt;a href=&quot;../enum#to_i64:Int64-instance-method&quot;&gt;to_i64: Int64 to_i64&lt;/a&gt; , &lt;a href=&quot;../enum#to_i64!:Int64-instance-method&quot;&gt;to_i64! : Int64 to_i64!&lt;/a&gt; , &lt;a href=&quot;../enum#to_i8:Int8-instance-method&quot;&gt;to_i8: Int8 to_i8&lt;/a&gt; , &lt;a href=&quot;../enum#to_i8!:Int8-instance-method&quot;&gt;to_i8! : Int8 to_i8!&lt;/a&gt; , &lt;a href=&quot;../enum#to_json(json:JSON::Builder)-instance-method&quot;&gt;to_json (json: JSON :: Builder) to_json&lt;/a&gt; , &lt;a href=&quot;../enum#to_s(io:IO):Nil-instance-method&quot;&gt;to_s (io: IO): ноль &lt;br/&gt;to_s: строка to_s&lt;/a&gt; , &lt;a href=&quot;../enum#to_u16:UInt16-instance-method&quot;&gt;to_u16: UInt16 to_u16&lt;/a&gt; , &lt;a href=&quot;../enum#to_u16!:UInt16-instance-method&quot;&gt;to_u16! : UInt16 to_u16!&lt;/a&gt; , &lt;a href=&quot;../enum#to_u32:UInt32-instance-method&quot;&gt;to_u32: UInt32 to_u32&lt;/a&gt; , &lt;a href=&quot;../enum#to_u32!:UInt32-instance-method&quot;&gt;to_u32! : UInt32 to_u32!&lt;/a&gt; , &lt;a href=&quot;../enum#to_u64:UInt64-instance-method&quot;&gt;to_u64: UInt64 to_u64&lt;/a&gt; , &lt;a href=&quot;../enum#to_u64!:UInt64-instance-method&quot;&gt;to_u64! : UInt64 to_u64!&lt;/a&gt; , &lt;a href=&quot;../enum#to_u8:UInt8-instance-method&quot;&gt;to_u8: UInt8 to_u8&lt;/a&gt; , &lt;a href=&quot;../enum#to_u8!:UInt8-instance-method&quot;&gt;to_u8! : UInt8 to_u8!&lt;/a&gt; ,&lt;a href=&quot;../enum#to_yaml(yaml:YAML::Nodes::Builder)-instance-method&quot;&gt;to_yaml (yaml: YAML :: Nodes :: Builder) to_yaml&lt;/a&gt; , &lt;a href=&quot;../enum#%7C(other:self)-instance-method&quot;&gt;| (другое: self) | &lt;/a&gt;, &lt;a href=&quot;../enum#~-instance-method&quot;&gt;~ ~&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f6bfacbf12db0c7474e34dd616a19d6e6d9f7eab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../enum#each(&amp;amp;block)-class-method&quot;&gt; each(&amp;amp;block) each&lt;/a&gt;, &lt;a href=&quot;../enum#names:Array(String)-class-method&quot;&gt; names : Array(String) names&lt;/a&gt;, &lt;a href=&quot;../enum#values:Array(self)-class-method&quot;&gt; values : Array(self) values&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../enum#each(&amp;amp;block)-class-method&quot;&gt;каждый (&amp;amp; блок) каждый&lt;/a&gt; , &lt;a href=&quot;../enum#names:Array(String)-class-method&quot;&gt;имена: имена массивов (строк)&lt;/a&gt; , &lt;a href=&quot;../enum#values:Array(self)-class-method&quot;&gt;значения: значения массивов (себя)&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6bb3cc684a7979f49ce7b6cc6534a7e5cf079137" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../enum#from_value(value:Int):self-class-method&quot;&gt; from_value(value : Int) : self from_value&lt;/a&gt;, &lt;a href=&quot;../enum#from_value?(value:Int):self?-class-method&quot;&gt; from_value?(value : Int) : self? from_value?&lt;/a&gt;, &lt;a href=&quot;../enum#new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method&quot;&gt; new(ctx : YAML::ParseContext, node : YAML::Nodes::Node)&lt;br/&gt;new(pull : JSON::PullParser) new&lt;/a&gt;, &lt;a href=&quot;../enum#parse(string:String):self-class-method&quot;&gt; parse(string : String) : self parse&lt;/a&gt;, &lt;a href=&quot;../enum#parse?(string:String):self?-class-method&quot;&gt; parse?(string : String) : self? parse?&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../enum#from_value(value:Int):self-class-method&quot;&gt;from_value (значение: Int): self from_value&lt;/a&gt; , &lt;a href=&quot;../enum#from_value?(value:Int):self?-class-method&quot;&gt;from_value? (значение: Int): self? from_value? &lt;/a&gt;, &lt;a href=&quot;../enum#new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method&quot;&gt;new (ctx: YAML :: ParseContext, узел: YAML :: Nodes :: Node) &lt;br/&gt;new (pull: JSON :: PullParser) new&lt;/a&gt; , &lt;a href=&quot;../enum#parse(string:String):self-class-method&quot;&gt;parse (строка: String): сам анализ&lt;/a&gt; , &lt;a href=&quot;../enum#parse?(string:String):self?-class-method&quot;&gt;анализ? (строка: строка): self ? разобрать?&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="de3d263a1ababd4f7e8a6332571a5f569b105b91" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../enumerable&quot;&gt;Enumerable&lt;/a&gt;(&lt;a href=&quot;../char&quot;&gt;Char&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;../enumerable&quot;&gt;Enumerable&lt;/a&gt;(&lt;a href=&quot;../char&quot;&gt;Char&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="332670442f6e7df710fcc64202ee45c5e012bca7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../enumerable&quot;&gt;Enumerable&lt;/a&gt;(&lt;a href=&quot;cookie&quot;&gt;HTTP::Cookie&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;../enumerable&quot;&gt;Enumerable&lt;/a&gt;(&lt;a href=&quot;cookie&quot;&gt;HTTP::Cookie&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="6607369913de9155133fbff7f6475925ea8853d5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../enumerable&quot;&gt;Enumerable&lt;/a&gt;(&lt;a href=&quot;node&quot;&gt;XML::Node&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;../enumerable&quot;&gt;Enumerable&lt;/a&gt;(&lt;a href=&quot;node&quot;&gt;XML::Node&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="723859ce83fbed78ba784efd85ecbfcde22d06d3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../enumerable&quot;&gt;Enumerable&lt;/a&gt;({&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt;(&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;)})</source>
          <target state="translated">&lt;a href=&quot;../enumerable&quot;&gt;Enumerable&lt;/a&gt; ({ &lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt; , &lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt; ( &lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt; )})</target>
        </trans-unit>
        <trans-unit id="caadca61095ab77f24f07d6421ae3c87e97a3344" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../enumerable&quot;&gt;Enumerable&lt;/a&gt;({&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;})</source>
          <target state="translated">&lt;a href=&quot;../enumerable&quot;&gt;Enumerable&lt;/a&gt; ({ &lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt; , &lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt; })</target>
        </trans-unit>
        <trans-unit id="dad89a25fb8d957f3f07184ded9c454d037a0002" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../enumerable#all?(&amp;amp;block)-instance-method&quot;&gt; all?(&amp;amp;block)&lt;br/&gt;all?(pattern)&lt;br/&gt;all? all?&lt;/a&gt;, &lt;a href=&quot;../enumerable#any?(&amp;amp;block)-instance-method&quot;&gt; any?(&amp;amp;block)&lt;br/&gt;any?(pattern)&lt;br/&gt;any? any?&lt;/a&gt;, &lt;a href=&quot;../enumerable#chunks(&amp;amp;block:%7BString,Array(String)%7D-%3EU)forallU-instance-method&quot;&gt; chunks(&amp;amp;block : {String, Array(String)} -&amp;gt; U) forall U chunks&lt;/a&gt;, &lt;a href=&quot;../enumerable#compact_map(&amp;amp;block)-instance-method&quot;&gt; compact_map(&amp;amp;block) compact_map&lt;/a&gt;, &lt;a href=&quot;../enumerable#count(item)-instance-method&quot;&gt; count(item)&lt;br/&gt;count(&amp;amp;block) count&lt;/a&gt;, &lt;a href=&quot;../enumerable#cycle(&amp;amp;block)-instance-method&quot;&gt; cycle(&amp;amp;block)&lt;br/&gt;cycle(n, &amp;amp;block) cycle&lt;/a&gt;, &lt;a href=&quot;../enumerable#each(&amp;amp;block:%7BString,Array(String)%7D-%3EUNDERSCORE)-instance-method&quot;&gt; each(&amp;amp;block : {String, Array(String)} -&amp;gt; UNDERSCORE) each&lt;/a&gt;, &lt;a href=&quot;../enumerable#each_cons(count:Int,reuse=false,&amp;amp;block)-instance-method&quot;&gt; each_cons(count : Int, reuse = false, &amp;amp;block) each_cons&lt;/a&gt;, &lt;a href=&quot;../enumerable#each_slice(count:Int,reuse=false,&amp;amp;block)-instance-method&quot;&gt; each_slice(count : Int, reuse = false, &amp;amp;block) each_slice&lt;/a&gt;, &lt;a href=&quot;../enumerable#each_with_index(offset=0,&amp;amp;block)-instance-method&quot;&gt; each_with_index(offset = 0, &amp;amp;block) each_with_index&lt;/a&gt;, &lt;a href=&quot;../enumerable#each_with_object(obj,&amp;amp;block)-instance-method&quot;&gt; each_with_object(obj, &amp;amp;block) each_with_object&lt;/a&gt;, &lt;a href=&quot;../enumerable#find(if_none=nil,&amp;amp;block)-instance-method&quot;&gt; find(if_none = nil, &amp;amp;block) find&lt;/a&gt;, &lt;a href=&quot;../enumerable#first(count:Int)-instance-method&quot;&gt; first(count : Int)&lt;br/&gt;first first&lt;/a&gt;, &lt;a href=&quot;../enumerable#first?-instance-method&quot;&gt; first? first?&lt;/a&gt;, &lt;a href=&quot;../enumerable#flat_map(&amp;amp;block:%7BString,Array(String)%7D-%3EArray(U)%7CIterator(U)%7CU)forallU-instance-method&quot;&gt; flat_map(&amp;amp;block : {String, Array(String)} -&amp;gt; Array(U) | Iterator(U) | U) forall U flat_map&lt;/a&gt;, &lt;a href=&quot;../enumerable#grep(pattern)-instance-method&quot;&gt; grep(pattern) grep&lt;/a&gt;, &lt;a href=&quot;../enumerable#group_by(&amp;amp;block:%7BString,Array(String)%7D-%3EU)forallU-instance-method&quot;&gt; group_by(&amp;amp;block : {String, Array(String)} -&amp;gt; U) forall U group_by&lt;/a&gt;, &lt;a href=&quot;../enumerable#in_groups_of(size:Int,filled_up_with:U=nil)forallU-instance-method&quot;&gt; in_groups_of(size : Int, filled_up_with : U = nil) forall U&lt;br/&gt;in_groups_of(size : Int, filled_up_with : U = nil, reuse = false, &amp;amp;block) forall U in_groups_of&lt;/a&gt;, &lt;a href=&quot;../enumerable#includes?(obj)-instance-method&quot;&gt; includes?(obj) includes?&lt;/a&gt;, &lt;a href=&quot;../enumerable#index(&amp;amp;block)-instance-method&quot;&gt; index(&amp;amp;block)&lt;br/&gt;index(obj) index&lt;/a&gt;, &lt;a href=&quot;../enumerable#index_by(&amp;amp;block:%7BString,Array(String)%7D-%3EU)forallU-instance-method&quot;&gt; index_by(&amp;amp;block : {String, Array(String)} -&amp;gt; U) forall U index_by&lt;/a&gt;,  join(separator = &quot;&quot;, &amp;amp;block)</source>
          <target state="translated">&lt;a href=&quot;../enumerable#all?(&amp;amp;block)-instance-method&quot;&gt;все? (&amp;amp; блок) &lt;br/&gt;все? (шаблон) &lt;br/&gt;все? все?&lt;/a&gt; , &lt;a href=&quot;../enumerable#any?(&amp;amp;block)-instance-method&quot;&gt;любой? (&amp;amp; блок) &lt;br/&gt;любой? (шаблон) &lt;br/&gt;любой? любой?&lt;/a&gt; , &lt;a href=&quot;../enumerable#chunks(&amp;amp;block:%7BString,Array(String)%7D-%3EU)forallU-instance-method&quot;&gt;чанки (&amp;amp; block: {String, Array (String)} -&amp;gt; U) для всех U чанков&lt;/a&gt; , &lt;a href=&quot;../enumerable#compact_map(&amp;amp;block)-instance-method&quot;&gt;compact_map (&amp;amp; block) compact_map&lt;/a&gt; , &lt;a href=&quot;../enumerable#count(item)-instance-method&quot;&gt;счетчик (элемент) &lt;br/&gt;счетчик (&amp;amp; block) счетчик&lt;/a&gt; , &lt;a href=&quot;../enumerable#cycle(&amp;amp;block)-instance-method&quot;&gt;цикл (&amp;amp; block) &lt;br/&gt;цикл (n, &amp;amp; block) цикл&lt;/a&gt; , &lt;a href=&quot;../enumerable#each(&amp;amp;block:%7BString,Array(String)%7D-%3EUNDERSCORE)-instance-method&quot;&gt;каждый (&amp;amp; block: {String, Array (String)} -&amp;gt; UNDERSCORE) each&lt;/a&gt; , &lt;a href=&quot;../enumerable#each_cons(count:Int,reuse=false,&amp;amp;block)-instance-method&quot;&gt;each_cons (count: Int, reuse = false, &amp;amp; block) each_cons&lt;/a&gt; , &lt;a href=&quot;../enumerable#each_slice(count:Int,reuse=false,&amp;amp;block)-instance-method&quot;&gt;each_slice (count: Int, reuse = false, &amp;amp; block) each_slice&lt;/a&gt; , &lt;a href=&quot;../enumerable#each_with_index(offset=0,&amp;amp;block)-instance-method&quot;&gt;each_with_index (offset = 0 &amp;amp; block) each_with_index&lt;/a&gt; ,&lt;a href=&quot;../enumerable#each_with_object(obj,&amp;amp;block)-instance-method&quot;&gt;each_with_object (obj, &amp;amp; block) each_with_object&lt;/a&gt; , &lt;a href=&quot;../enumerable#find(if_none=nil,&amp;amp;block)-instance-method&quot;&gt;find (if_none = nil, &amp;amp; block) найти&lt;/a&gt; , &lt;a href=&quot;../enumerable#first(count:Int)-instance-method&quot;&gt;сначала (количество: Int) &lt;br/&gt;сначала первое&lt;/a&gt; , &lt;a href=&quot;../enumerable#first?-instance-method&quot;&gt;сначала? первый?&lt;/a&gt; , &lt;a href=&quot;../enumerable#flat_map(&amp;amp;block:%7BString,Array(String)%7D-%3EArray(U)%7CIterator(U)%7CU)forallU-instance-method&quot;&gt;flat_map (&amp;amp; block: {String, Array (String)} -&amp;gt; Array (U) | Iterator (U) | U) для U flat_map&lt;/a&gt; , &lt;a href=&quot;../enumerable#grep(pattern)-instance-method&quot;&gt;grep (pattern) grep&lt;/a&gt; , &lt;a href=&quot;../enumerable#group_by(&amp;amp;block:%7BString,Array(String)%7D-%3EU)forallU-instance-method&quot;&gt;group_by (&amp;amp; block: {String, Array (String)} - &amp;gt; U) для U group_by&lt;/a&gt; , &lt;a href=&quot;../enumerable#in_groups_of(size:Int,filled_up_with:U=nil)forallU-instance-method&quot;&gt;in_groups_of (размер: Int, заполненный_с_с: U = ноль) для U &lt;br/&gt;in_groups_of (размер: Int, заполненный_с_с: U = ноль, повторное использование = ложь, &amp;amp; блок) для U in_groups_of&lt;/a&gt; , &lt;a href=&quot;../enumerable#includes?(obj)-instance-method&quot;&gt;включает? (Obj) включает?&lt;/a&gt; , &lt;a href=&quot;../enumerable#index(&amp;amp;block)-instance-method&quot;&gt;index (&amp;amp; block) &lt;br/&gt;index (obj) index&lt;/a&gt; ,&lt;a href=&quot;../enumerable#index_by(&amp;amp;block:%7BString,Array(String)%7D-%3EU)forallU-instance-method&quot;&gt;index_by (&amp;amp; block: {String, Array (String)} -&amp;gt; U) для всего U index_by&lt;/a&gt; , соединение (разделитель = &quot;&quot;, &amp;amp; блок)</target>
        </trans-unit>
        <trans-unit id="82aa206c2b00960f37afbc872d42439c825f09dc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../enumerable#all?(&amp;amp;block)-instance-method&quot;&gt; all?(&amp;amp;block)&lt;br/&gt;all?(pattern)&lt;br/&gt;all? all?&lt;/a&gt;, &lt;a href=&quot;../enumerable#any?(&amp;amp;block)-instance-method&quot;&gt; any?(&amp;amp;block)&lt;br/&gt;any?(pattern)&lt;br/&gt;any? any?&lt;/a&gt;, &lt;a href=&quot;../enumerable#chunks(&amp;amp;block:%7BString,String%7D-%3EU)forallU-instance-method&quot;&gt; chunks(&amp;amp;block : {String, String} -&amp;gt; U) forall U chunks&lt;/a&gt;, &lt;a href=&quot;../enumerable#compact_map(&amp;amp;block)-instance-method&quot;&gt; compact_map(&amp;amp;block) compact_map&lt;/a&gt;, &lt;a href=&quot;../enumerable#count(item)-instance-method&quot;&gt; count(item)&lt;br/&gt;count(&amp;amp;block) count&lt;/a&gt;, &lt;a href=&quot;../enumerable#cycle(&amp;amp;block)-instance-method&quot;&gt; cycle(&amp;amp;block)&lt;br/&gt;cycle(n, &amp;amp;block) cycle&lt;/a&gt;, &lt;a href=&quot;../enumerable#each(&amp;amp;block:%7BString,String%7D-%3EUNDERSCORE)-instance-method&quot;&gt; each(&amp;amp;block : {String, String} -&amp;gt; UNDERSCORE) each&lt;/a&gt;, &lt;a href=&quot;../enumerable#each_cons(count:Int,reuse=false,&amp;amp;block)-instance-method&quot;&gt; each_cons(count : Int, reuse = false, &amp;amp;block) each_cons&lt;/a&gt;, &lt;a href=&quot;../enumerable#each_slice(count:Int,reuse=false,&amp;amp;block)-instance-method&quot;&gt; each_slice(count : Int, reuse = false, &amp;amp;block) each_slice&lt;/a&gt;, &lt;a href=&quot;../enumerable#each_with_index(offset=0,&amp;amp;block)-instance-method&quot;&gt; each_with_index(offset = 0, &amp;amp;block) each_with_index&lt;/a&gt;, &lt;a href=&quot;../enumerable#each_with_object(obj,&amp;amp;block)-instance-method&quot;&gt; each_with_object(obj, &amp;amp;block) each_with_object&lt;/a&gt;, &lt;a href=&quot;../enumerable#find(if_none=nil,&amp;amp;block)-instance-method&quot;&gt; find(if_none = nil, &amp;amp;block) find&lt;/a&gt;, &lt;a href=&quot;../enumerable#first(count:Int)-instance-method&quot;&gt; first(count : Int)&lt;br/&gt;first first&lt;/a&gt;, &lt;a href=&quot;../enumerable#first?-instance-method&quot;&gt; first? first?&lt;/a&gt;, &lt;a href=&quot;../enumerable#flat_map(&amp;amp;block:%7BString,String%7D-%3EArray(U)%7CIterator(U)%7CU)forallU-instance-method&quot;&gt; flat_map(&amp;amp;block : {String, String} -&amp;gt; Array(U) | Iterator(U) | U) forall U flat_map&lt;/a&gt;, &lt;a href=&quot;../enumerable#grep(pattern)-instance-method&quot;&gt; grep(pattern) grep&lt;/a&gt;, &lt;a href=&quot;../enumerable#group_by(&amp;amp;block:%7BString,String%7D-%3EU)forallU-instance-method&quot;&gt; group_by(&amp;amp;block : {String, String} -&amp;gt; U) forall U group_by&lt;/a&gt;, &lt;a href=&quot;../enumerable#in_groups_of(size:Int,filled_up_with:U=nil)forallU-instance-method&quot;&gt; in_groups_of(size : Int, filled_up_with : U = nil) forall U&lt;br/&gt;in_groups_of(size : Int, filled_up_with : U = nil, reuse = false, &amp;amp;block) forall U in_groups_of&lt;/a&gt;, &lt;a href=&quot;../enumerable#includes?(obj)-instance-method&quot;&gt; includes?(obj) includes?&lt;/a&gt;, &lt;a href=&quot;../enumerable#index(&amp;amp;block)-instance-method&quot;&gt; index(&amp;amp;block)&lt;br/&gt;index(obj) index&lt;/a&gt;, &lt;a href=&quot;../enumerable#index_by(&amp;amp;block:%7BString,String%7D-%3EU)forallU-instance-method&quot;&gt; index_by(&amp;amp;block : {String, String} -&amp;gt; U) forall U index_by&lt;/a&gt;,  join(separator = &quot;&quot;, &amp;amp;block)</source>
          <target state="translated">&lt;a href=&quot;../enumerable#all?(&amp;amp;block)-instance-method&quot;&gt;все? (&amp;amp; блок) &lt;br/&gt;все? (шаблон) &lt;br/&gt;все? все?&lt;/a&gt; , &lt;a href=&quot;../enumerable#any?(&amp;amp;block)-instance-method&quot;&gt;любой? (&amp;amp; блок) &lt;br/&gt;любой? (шаблон) &lt;br/&gt;любой? любой?&lt;/a&gt; , &lt;a href=&quot;../enumerable#chunks(&amp;amp;block:%7BString,String%7D-%3EU)forallU-instance-method&quot;&gt;чанки (&amp;amp; block: {String, String} -&amp;gt; U) для всех U чанков&lt;/a&gt; , &lt;a href=&quot;../enumerable#compact_map(&amp;amp;block)-instance-method&quot;&gt;compact_map (&amp;amp; block) compact_map&lt;/a&gt; , &lt;a href=&quot;../enumerable#count(item)-instance-method&quot;&gt;count (item) &lt;br/&gt;count (&amp;amp; block) count&lt;/a&gt; , &lt;a href=&quot;../enumerable#cycle(&amp;amp;block)-instance-method&quot;&gt;цикл (&amp;amp; block) &lt;br/&gt;цикл (n, &amp;amp; block) цикл&lt;/a&gt; , &lt;a href=&quot;../enumerable#each(&amp;amp;block:%7BString,String%7D-%3EUNDERSCORE)-instance-method&quot;&gt;каждый (&amp;amp; block: {String, String} -&amp;gt; UNDERSCORE) each&lt;/a&gt; , &lt;a href=&quot;../enumerable#each_cons(count:Int,reuse=false,&amp;amp;block)-instance-method&quot;&gt;each_cons (count: Int, reuse = false, &amp;amp; block) each_cons&lt;/a&gt; , &lt;a href=&quot;../enumerable#each_slice(count:Int,reuse=false,&amp;amp;block)-instance-method&quot;&gt;each_slice (count: Int, reuse = false, &amp;amp; block) each_slice&lt;/a&gt; , &lt;a href=&quot;../enumerable#each_with_index(offset=0,&amp;amp;block)-instance-method&quot;&gt;each_with_index (offset = 0, &amp;amp; block) each_with_index&lt;/a&gt; , &lt;a href=&quot;../enumerable#each_with_object(obj,&amp;amp;block)-instance-method&quot;&gt;each_with_object (объект &amp;amp;блок) each_with_object&lt;/a&gt;, &lt;a href=&quot;../enumerable#find(if_none=nil,&amp;amp;block)-instance-method&quot;&gt;find (if_none = nil, &amp;amp; block) найти&lt;/a&gt; , &lt;a href=&quot;../enumerable#first(count:Int)-instance-method&quot;&gt;сначала (кол-во: Int) &lt;br/&gt;сначала, сначала&lt;/a&gt; , &lt;a href=&quot;../enumerable#first?-instance-method&quot;&gt;сначала? первый?&lt;/a&gt; , &lt;a href=&quot;../enumerable#flat_map(&amp;amp;block:%7BString,String%7D-%3EArray(U)%7CIterator(U)%7CU)forallU-instance-method&quot;&gt;flat_map (&amp;amp; block: {String, String} -&amp;gt; Array (U) | Iterator (U) | U) для U flat_map&lt;/a&gt; , &lt;a href=&quot;../enumerable#grep(pattern)-instance-method&quot;&gt;grep (pattern) grep&lt;/a&gt; , &lt;a href=&quot;../enumerable#group_by(&amp;amp;block:%7BString,String%7D-%3EU)forallU-instance-method&quot;&gt;group_by (&amp;amp; block: {String, String} -&amp;gt; U) для U U group_by&lt;/a&gt; , &lt;a href=&quot;../enumerable#in_groups_of(size:Int,filled_up_with:U=nil)forallU-instance-method&quot;&gt;in_groups_of (размер: Int, fill_up_with: U = nil) для U &lt;br/&gt;in_groups_of (размер: Int, fill_up_with: U = nil, повторное использование = false, &amp;amp; block) для U in_groups_of&lt;/a&gt; , &lt;a href=&quot;../enumerable#includes?(obj)-instance-method&quot;&gt;включает? (obj) включает?&lt;/a&gt; , &lt;a href=&quot;../enumerable#index(&amp;amp;block)-instance-method&quot;&gt;index (&amp;amp; block) &lt;br/&gt;index (obj) index&lt;/a&gt; , &lt;a href=&quot;../enumerable#index_by(&amp;amp;block:%7BString,String%7D-%3EU)forallU-instance-method&quot;&gt;index_by (&amp;amp; block: {String, String} -&amp;gt; U) для всего U index_by&lt;/a&gt;, присоединиться (разделитель = &quot;&quot;, &amp;amp; блок)</target>
        </trans-unit>
        <trans-unit id="23fffe6a4d6856bb8dc89483e90285ff636a4119" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../enumerable#all?(&amp;amp;block)-instance-method&quot;&gt; all?(&amp;amp;block)&lt;br/&gt;all?(pattern)&lt;br/&gt;all? all?&lt;/a&gt;, &lt;a href=&quot;../enumerable#any?(&amp;amp;block)-instance-method&quot;&gt; any?(&amp;amp;block)&lt;br/&gt;any?(pattern)&lt;br/&gt;any? any?&lt;/a&gt;, &lt;a href=&quot;../enumerable#chunks(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt; chunks(&amp;amp;block : T -&amp;gt; U) forall U chunks&lt;/a&gt;, &lt;a href=&quot;../enumerable#compact_map(&amp;amp;block)-instance-method&quot;&gt; compact_map(&amp;amp;block) compact_map&lt;/a&gt;, &lt;a href=&quot;../enumerable#count(item)-instance-method&quot;&gt; count(item)&lt;br/&gt;count(&amp;amp;block) count&lt;/a&gt;, &lt;a href=&quot;../enumerable#cycle(&amp;amp;block)-instance-method&quot;&gt; cycle(&amp;amp;block)&lt;br/&gt;cycle(n, &amp;amp;block) cycle&lt;/a&gt;, &lt;a href=&quot;../enumerable#each(&amp;amp;block:T-%3EUNDERSCORE)-instance-method&quot;&gt; each(&amp;amp;block : T -&amp;gt; UNDERSCORE) each&lt;/a&gt;, &lt;a href=&quot;../enumerable#each_cons(count:Int,reuse=false,&amp;amp;block)-instance-method&quot;&gt; each_cons(count : Int, reuse = false, &amp;amp;block) each_cons&lt;/a&gt;, &lt;a href=&quot;../enumerable#each_slice(count:Int,reuse=false,&amp;amp;block)-instance-method&quot;&gt; each_slice(count : Int, reuse = false, &amp;amp;block) each_slice&lt;/a&gt;, &lt;a href=&quot;../enumerable#each_with_index(offset=0,&amp;amp;block)-instance-method&quot;&gt; each_with_index(offset = 0, &amp;amp;block) each_with_index&lt;/a&gt;, &lt;a href=&quot;../enumerable#each_with_object(obj,&amp;amp;block)-instance-method&quot;&gt; each_with_object(obj, &amp;amp;block) each_with_object&lt;/a&gt;, &lt;a href=&quot;../enumerable#find(if_none=nil,&amp;amp;block)-instance-method&quot;&gt; find(if_none = nil, &amp;amp;block) find&lt;/a&gt;, &lt;a href=&quot;../enumerable#first(count:Int)-instance-method&quot;&gt; first(count : Int)&lt;br/&gt;first first&lt;/a&gt;, &lt;a href=&quot;../enumerable#first?-instance-method&quot;&gt; first? first?&lt;/a&gt;, &lt;a href=&quot;../enumerable#flat_map(&amp;amp;block:T-%3EArray(U)%7CIterator(U)%7CU)forallU-instance-method&quot;&gt; flat_map(&amp;amp;block : T -&amp;gt; Array(U) | Iterator(U) | U) forall U flat_map&lt;/a&gt;, &lt;a href=&quot;../enumerable#grep(pattern)-instance-method&quot;&gt; grep(pattern) grep&lt;/a&gt;, &lt;a href=&quot;../enumerable#group_by(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt; group_by(&amp;amp;block : T -&amp;gt; U) forall U group_by&lt;/a&gt;, &lt;a href=&quot;../enumerable#in_groups_of(size:Int,filled_up_with:U=nil)forallU-instance-method&quot;&gt; in_groups_of(size : Int, filled_up_with : U = nil) forall U&lt;br/&gt;in_groups_of(size : Int, filled_up_with : U = nil, reuse = false, &amp;amp;block) forall U in_groups_of&lt;/a&gt;, &lt;a href=&quot;../enumerable#includes?(obj)-instance-method&quot;&gt; includes?(obj) includes?&lt;/a&gt;, &lt;a href=&quot;../enumerable#index(&amp;amp;block)-instance-method&quot;&gt; index(&amp;amp;block)&lt;br/&gt;index(obj) index&lt;/a&gt;, &lt;a href=&quot;../enumerable#index_by(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt; index_by(&amp;amp;block : T -&amp;gt; U) forall U index_by&lt;/a&gt;,  join(separator = &quot;&quot;, &amp;amp;block)</source>
          <target state="translated">&lt;a href=&quot;../enumerable#all?(&amp;amp;block)-instance-method&quot;&gt;все? (&amp;amp; блок) &lt;br/&gt;все? (шаблон) &lt;br/&gt;все? все?&lt;/a&gt; , &lt;a href=&quot;../enumerable#any?(&amp;amp;block)-instance-method&quot;&gt;любой? (&amp;amp; блок) &lt;br/&gt;любой? (шаблон) &lt;br/&gt;любой? любой?&lt;/a&gt; , &lt;a href=&quot;../enumerable#chunks(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;чанки (&amp;amp; block: T -&amp;gt; U) для U-чанков&lt;/a&gt; , &lt;a href=&quot;../enumerable#compact_map(&amp;amp;block)-instance-method&quot;&gt;compact_map (&amp;amp; block) compact_map&lt;/a&gt; , &lt;a href=&quot;../enumerable#count(item)-instance-method&quot;&gt;count (item) &lt;br/&gt;count (&amp;amp; block) count&lt;/a&gt; , &lt;a href=&quot;../enumerable#cycle(&amp;amp;block)-instance-method&quot;&gt;цикл (&amp;amp; block) &lt;br/&gt;цикл (n, &amp;amp; block) цикл&lt;/a&gt; , &lt;a href=&quot;../enumerable#each(&amp;amp;block:T-%3EUNDERSCORE)-instance-method&quot;&gt;каждый (&amp;amp; block: T -&amp;gt; UNDERSCORE ) each&lt;/a&gt; , &lt;a href=&quot;../enumerable#each_cons(count:Int,reuse=false,&amp;amp;block)-instance-method&quot;&gt;each_cons (count: Int, reuse = false, &amp;amp; block) each_cons&lt;/a&gt; , &lt;a href=&quot;../enumerable#each_slice(count:Int,reuse=false,&amp;amp;block)-instance-method&quot;&gt;each_slice (count: Int, reuse = false, &amp;amp; block) each_slice&lt;/a&gt; , &lt;a href=&quot;../enumerable#each_with_index(offset=0,&amp;amp;block)-instance-method&quot;&gt;each_with_index (offset = 0, &amp;amp; block) each_with_index&lt;/a&gt; , &lt;a href=&quot;../enumerable#each_with_object(obj,&amp;amp;block)-instance-method&quot;&gt;each_with_object (obj, &amp;amp; block) each_with_object&lt;/a&gt; ,&lt;a href=&quot;../enumerable#find(if_none=nil,&amp;amp;block)-instance-method&quot;&gt;find (if_none = nil, &amp;amp; block) найти&lt;/a&gt; , &lt;a href=&quot;../enumerable#first(count:Int)-instance-method&quot;&gt;сначала (число: Int) &lt;br/&gt;сначала, сначала&lt;/a&gt; , &lt;a href=&quot;../enumerable#first?-instance-method&quot;&gt;сначала? первый?&lt;/a&gt; , &lt;a href=&quot;../enumerable#flat_map(&amp;amp;block:T-%3EArray(U)%7CIterator(U)%7CU)forallU-instance-method&quot;&gt;flat_map (&amp;amp; block: T -&amp;gt; Array (U) | Iterator (U) | U) для U flat_map&lt;/a&gt; , &lt;a href=&quot;../enumerable#grep(pattern)-instance-method&quot;&gt;grep (pattern) grep&lt;/a&gt; , &lt;a href=&quot;../enumerable#group_by(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;group_by (&amp;amp; block: T -&amp;gt; U) для U group_by&lt;/a&gt; , &lt;a href=&quot;../enumerable#in_groups_of(size:Int,filled_up_with:U=nil)forallU-instance-method&quot;&gt;in_groups_of (размер: Int, заполнен_up_with : U = nil) для U &lt;br/&gt;in_groups_of (размер: Int, заполнено_с_с: U = ноль, повторное использование = ложь и блокировка) для U in_groups_of&lt;/a&gt; , &lt;a href=&quot;../enumerable#includes?(obj)-instance-method&quot;&gt;включает? (Obj) включает?&lt;/a&gt; , &lt;a href=&quot;../enumerable#index(&amp;amp;block)-instance-method&quot;&gt;index (&amp;amp; block) &lt;br/&gt;index (obj) index&lt;/a&gt; , &lt;a href=&quot;../enumerable#index_by(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;index_by (&amp;amp; block: T -&amp;gt; U) для всего U index_by&lt;/a&gt; , соединение (разделитель = &quot;&quot;, &amp;amp; block)</target>
        </trans-unit>
        <trans-unit id="131f7c1326f85671468a76e53a1def7f3acb3c66" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../error#code-instance-method&quot;&gt; code code&lt;/a&gt;, &lt;a href=&quot;../error#code?:UInt64?-instance-method&quot;&gt; code? : UInt64? code?&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../error#code-instance-method&quot;&gt;код код&lt;/a&gt; , &lt;a href=&quot;../error#code?:UInt64?-instance-method&quot;&gt;код? : UInt64? код?&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4c4d88815b18bb1b18863f87dc1b1cbcb5716523" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../exception#backtrace-instance-method&quot;&gt; backtrace backtrace&lt;/a&gt;, &lt;a href=&quot;../exception#backtrace?-instance-method&quot;&gt; backtrace? backtrace?&lt;/a&gt;, &lt;a href=&quot;../exception#callstack:CallStack?-instance-method&quot;&gt; callstack : CallStack? callstack&lt;/a&gt;, &lt;a href=&quot;../exception#callstack=(callstack:CallStack?)-instance-method&quot;&gt; callstack=(callstack : CallStack?) callstack=&lt;/a&gt;, &lt;a href=&quot;../exception#cause:Exception?-instance-method&quot;&gt; cause : Exception? cause&lt;/a&gt;, &lt;a href=&quot;../exception#inspect(io:IO):Nil-instance-method&quot;&gt; inspect(io : IO) : Nil inspect&lt;/a&gt;, &lt;a href=&quot;../exception#inspect_with_backtrace(io:IO):Nil-instance-method&quot;&gt; inspect_with_backtrace(io : IO) : Nil&lt;br/&gt;inspect_with_backtrace : String inspect_with_backtrace&lt;/a&gt;, &lt;a href=&quot;../exception#message:String?-instance-method&quot;&gt; message : String? message&lt;/a&gt;, &lt;a href=&quot;../exception#to_s(io:IO):Nil-instance-method&quot;&gt; to_s(io : IO) : Nil to_s&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../exception#backtrace-instance-method&quot;&gt;обратный ход обратный ход&lt;/a&gt; , &lt;a href=&quot;../exception#backtrace?-instance-method&quot;&gt;обратный ход? трассировка? &lt;/a&gt;, &lt;a href=&quot;../exception#callstack:CallStack?-instance-method&quot;&gt;callstack: CallStack? callstack&lt;/a&gt; , &lt;a href=&quot;../exception#callstack=(callstack:CallStack?)-instance-method&quot;&gt;callstack = (callstack: CallStack?) callstack =&lt;/a&gt; , &lt;a href=&quot;../exception#cause:Exception?-instance-method&quot;&gt;причина: исключение? причина&lt;/a&gt; , &lt;a href=&quot;../exception#inspect(io:IO):Nil-instance-method&quot;&gt;проверка (io: IO): ноль проверка&lt;/a&gt; , &lt;a href=&quot;../exception#inspect_with_backtrace(io:IO):Nil-instance-method&quot;&gt;inspect_with_backtrace (io: IO): ноль &lt;br/&gt;inspect_with_backtrace: строка inspect_with_backtrace&lt;/a&gt; , &lt;a href=&quot;../exception#message:String?-instance-method&quot;&gt;сообщение: строка? сообщение&lt;/a&gt; , &lt;a href=&quot;../exception#to_s(io:IO):Nil-instance-method&quot;&gt;to_s (Io: IO): Nil to_s&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d77f010ffadb08e7fe8978a0b666eb3eff7cb15b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../fileinfo#comment-instance-method&quot;&gt; comment comment&lt;/a&gt;, &lt;a href=&quot;../fileinfo#comment=(comment)-instance-method&quot;&gt; comment=(comment) comment=&lt;/a&gt;, &lt;a href=&quot;../fileinfo#compressed_size-instance-method&quot;&gt; compressed_size compressed_size&lt;/a&gt;, &lt;a href=&quot;../fileinfo#compressed_size=(compressed_size)-instance-method&quot;&gt; compressed_size=(compressed_size) compressed_size=&lt;/a&gt;, &lt;a href=&quot;../fileinfo#compression_method-instance-method&quot;&gt; compression_method compression_method&lt;/a&gt;, &lt;a href=&quot;../fileinfo#compression_method=(compression_method)-instance-method&quot;&gt; compression_method=(compression_method) compression_method=&lt;/a&gt;, &lt;a href=&quot;../fileinfo#crc32-instance-method&quot;&gt; crc32 crc32&lt;/a&gt;, &lt;a href=&quot;../fileinfo#crc32=(crc32)-instance-method&quot;&gt; crc32=(crc32) crc32=&lt;/a&gt;, &lt;a href=&quot;../fileinfo#dir?-instance-method&quot;&gt; dir? dir?&lt;/a&gt;, &lt;a href=&quot;../fileinfo#extra-instance-method&quot;&gt; extra extra&lt;/a&gt;, &lt;a href=&quot;../fileinfo#extra=(extra)-instance-method&quot;&gt; extra=(extra) extra=&lt;/a&gt;, &lt;a href=&quot;../fileinfo#file?-instance-method&quot;&gt; file? file?&lt;/a&gt;, &lt;a href=&quot;../fileinfo#filename-instance-method&quot;&gt; filename filename&lt;/a&gt;, &lt;a href=&quot;../fileinfo#filename=(filename)-instance-method&quot;&gt; filename=(filename) filename=&lt;/a&gt;, &lt;a href=&quot;../fileinfo#general_purpose_bit_flag-instance-method&quot;&gt; general_purpose_bit_flag general_purpose_bit_flag&lt;/a&gt;, &lt;a href=&quot;../fileinfo#general_purpose_bit_flag=(general_purpose_bit_flag)-instance-method&quot;&gt; general_purpose_bit_flag=(general_purpose_bit_flag) general_purpose_bit_flag=&lt;/a&gt;, &lt;a href=&quot;../fileinfo#offset-instance-method&quot;&gt; offset offset&lt;/a&gt;, &lt;a href=&quot;../fileinfo#offset=(offset)-instance-method&quot;&gt; offset=(offset) offset=&lt;/a&gt;, &lt;a href=&quot;../fileinfo#time:Time-instance-method&quot;&gt; time : Time time&lt;/a&gt;, &lt;a href=&quot;../fileinfo#time=(time:Time)-instance-method&quot;&gt; time=(time : Time) time=&lt;/a&gt;, &lt;a href=&quot;../fileinfo#uncompressed_size-instance-method&quot;&gt; uncompressed_size uncompressed_size&lt;/a&gt;, &lt;a href=&quot;../fileinfo#uncompressed_size=(uncompressed_size)-instance-method&quot;&gt; uncompressed_size=(uncompressed_size) uncompressed_size=&lt;/a&gt;, &lt;a href=&quot;../fileinfo#version:UInt16-instance-method&quot;&gt; version : UInt16 version&lt;/a&gt;, &lt;a href=&quot;../fileinfo#version=(version:UInt16)-instance-method&quot;&gt; version=(version : UInt16) version=&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../fileinfo#comment-instance-method&quot;&gt;комментарий комментарий&lt;/a&gt; , &lt;a href=&quot;../fileinfo#comment=(comment)-instance-method&quot;&gt;комментарий = (комментарий) комментарий =&lt;/a&gt; , &lt;a href=&quot;../fileinfo#compressed_size-instance-method&quot;&gt;compressed_size compressed_size&lt;/a&gt; , &lt;a href=&quot;../fileinfo#compressed_size=(compressed_size)-instance-method&quot;&gt;compressed_size = (compressed_size) compressed_size =&lt;/a&gt; , &lt;a href=&quot;../fileinfo#compression_method-instance-method&quot;&gt;compression_method compression_method&lt;/a&gt; , &lt;a href=&quot;../fileinfo#compression_method=(compression_method)-instance-method&quot;&gt;compression_method = (compression_method) compression_method =&lt;/a&gt; , &lt;a href=&quot;../fileinfo#crc32-instance-method&quot;&gt;crc32 crc32&lt;/a&gt; , &lt;a href=&quot;../fileinfo#crc32=(crc32)-instance-method&quot;&gt;crc32 = (crc32) crc32 =&lt;/a&gt; , &lt;a href=&quot;../fileinfo#dir?-instance-method&quot;&gt;реж? реж?&lt;/a&gt; , &lt;a href=&quot;../fileinfo#extra-instance-method&quot;&gt;дополнительный дополнительный&lt;/a&gt; , &lt;a href=&quot;../fileinfo#extra=(extra)-instance-method&quot;&gt;дополнительный = (дополнительный) дополнительный =&lt;/a&gt; , &lt;a href=&quot;../fileinfo#file?-instance-method&quot;&gt;файл? файл?&lt;/a&gt; , &lt;a href=&quot;../fileinfo#filename-instance-method&quot;&gt;имя файла имя файла&lt;/a&gt; , &lt;a href=&quot;../fileinfo#filename=(filename)-instance-method&quot;&gt;имя файла = (имя файла) имя файла =&lt;/a&gt; , &lt;a href=&quot;../fileinfo#general_purpose_bit_flag-instance-method&quot;&gt;general_purpose_bit_flag general_purpose_bit_flag&lt;/a&gt; ,&lt;a href=&quot;../fileinfo#general_purpose_bit_flag=(general_purpose_bit_flag)-instance-method&quot;&gt;general_purpose_bit_flag = (general_purpose_bit_flag) general_purpose_bit_flag =&lt;/a&gt; , &lt;a href=&quot;../fileinfo#offset-instance-method&quot;&gt;смещение смещение&lt;/a&gt; , &lt;a href=&quot;../fileinfo#offset=(offset)-instance-method&quot;&gt;смещение = (смещение) смещение =&lt;/a&gt; , &lt;a href=&quot;../fileinfo#time:Time-instance-method&quot;&gt;время: время время&lt;/a&gt; , &lt;a href=&quot;../fileinfo#time=(time:Time)-instance-method&quot;&gt;время = (время: время) время =&lt;/a&gt; , &lt;a href=&quot;../fileinfo#uncompressed_size-instance-method&quot;&gt;несжатый_размер несжатый_размер&lt;/a&gt; , &lt;a href=&quot;../fileinfo#uncompressed_size=(uncompressed_size)-instance-method&quot;&gt;несжатый_размер = (несжатый_размер) &lt;/a&gt;&lt;a href=&quot;../fileinfo#version:UInt16-instance-method&quot;&gt;версия &lt;/a&gt;без сжатия , размер версии16 , несжатый &lt;a href=&quot;../fileinfo#version=(version:UInt16)-instance-method&quot;&gt;версия = (версия: UInt16) версия =&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="33f6bb751768d9fa105d91a9d0156e9e1ca883f3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../indexable&quot;&gt;Indexable&lt;/a&gt;(&lt;a href=&quot;value&quot;&gt;LLVM::Value&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;../indexable&quot;&gt;Indexable&lt;/a&gt;(&lt;a href=&quot;value&quot;&gt;LLVM::Value&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="094d4df0a761a62b327548724e6b9de0d027c34c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../indexable#%5B%5D(index:Int)-instance-method&quot;&gt; [](index : Int) []&lt;/a&gt;, &lt;a href=&quot;../indexable#%5B%5D?(index:Int)-instance-method&quot;&gt; []?(index : Int) []?&lt;/a&gt;, &lt;a href=&quot;../indexable#bsearch(&amp;amp;block:T-%3EBool)-instance-method&quot;&gt; bsearch(&amp;amp;block : T -&amp;gt; Bool) bsearch&lt;/a&gt;, &lt;a href=&quot;../indexable#bsearch_index(&amp;amp;block:T,Int32-%3EBool)-instance-method&quot;&gt; bsearch_index(&amp;amp;block : T, Int32 -&amp;gt; Bool) bsearch_index&lt;/a&gt;, &lt;a href=&quot;../indexable#dig(index:Int,*subindexes)-instance-method&quot;&gt; dig(index : Int, *subindexes) dig&lt;/a&gt;, &lt;a href=&quot;../indexable#dig?(index:Int,*subindexes)-instance-method&quot;&gt; dig?(index : Int, *subindexes) dig?&lt;/a&gt;, &lt;a href=&quot;../indexable#each(*,start:Int,count:Int,&amp;amp;block)-instance-method&quot;&gt; each(*, start : Int, count : Int, &amp;amp;block)&lt;br/&gt;each(*, within range : Range, &amp;amp;block)&lt;br/&gt;each(&amp;amp;block)&lt;br/&gt;each each&lt;/a&gt;, &lt;a href=&quot;../indexable#each_index(*,start:Int,count:Int,&amp;amp;block)-instance-method&quot;&gt; each_index(*, start : Int, count : Int, &amp;amp;block)&lt;br/&gt;each_index(&amp;amp;block) : Nil&lt;br/&gt;each_index each_index&lt;/a&gt;, &lt;a href=&quot;../indexable#empty?-instance-method&quot;&gt; empty? empty?&lt;/a&gt;, &lt;a href=&quot;../indexable#equals?(other:Indexable,&amp;amp;block)-instance-method&quot;&gt; equals?(other : Indexable, &amp;amp;block)&lt;br/&gt;equals?(other, &amp;amp;block) equals?&lt;/a&gt;, &lt;a href=&quot;../indexable#fetch(index,default)-instance-method&quot;&gt; fetch(index, default)&lt;br/&gt;fetch(index : Int, &amp;amp;block) fetch&lt;/a&gt;, &lt;a href=&quot;../indexable#first-instance-method&quot;&gt; first&lt;br/&gt;first(&amp;amp;block) first&lt;/a&gt;, &lt;a href=&quot;../indexable#first?-instance-method&quot;&gt; first? first?&lt;/a&gt;, &lt;a href=&quot;../indexable#hash(hasher)-instance-method&quot;&gt; hash(hasher) hash&lt;/a&gt;, &lt;a href=&quot;../indexable#index(object,offset:Int=0)-instance-method&quot;&gt; index(object, offset : Int = 0)&lt;br/&gt;index(offset : Int = 0, &amp;amp;block) index&lt;/a&gt;,  join(separator = &quot;&quot;) join, &lt;a href=&quot;../indexable#last-instance-method&quot;&gt; last&lt;br/&gt;last(&amp;amp;block) last&lt;/a&gt;, &lt;a href=&quot;../indexable#last?-instance-method&quot;&gt; last? last?&lt;/a&gt;, &lt;a href=&quot;../indexable#reverse_each(&amp;amp;block):Nil-instance-method&quot;&gt; reverse_each(&amp;amp;block) : Nil&lt;br/&gt;reverse_each reverse_each&lt;/a&gt;, &lt;a href=&quot;../indexable#rindex(offset=size-1,&amp;amp;block)-instance-method&quot;&gt; rindex(offset = size - 1, &amp;amp;block)&lt;br/&gt;rindex(value, offset = size - 1) rindex&lt;/a&gt;, &lt;a href=&quot;../indexable#sample(random=Random::DEFAULT)-instance-method&quot;&gt; sample(random = Random::DEFAULT) sample&lt;/a&gt;, &lt;a href=&quot;../indexable#size-instance-method&quot;&gt; size size&lt;/a&gt;, &lt;a href=&quot;../indexable#to_a-instance-method&quot;&gt; to_a to_a&lt;/a&gt;, &lt;a href=&quot;../indexable#unsafe_fetch(index:Int)-instance-method&quot;&gt; unsafe_fetch(index : Int) unsafe_fetch&lt;/a&gt;, &lt;a href=&quot;../indexable#values_at(*indexes:Int)-instance-method&quot;&gt; values_at(*indexes : Int) values_at&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../indexable#%5B%5D(index:Int)-instance-method&quot;&gt;[] (индекс: Int) []&lt;/a&gt; , &lt;a href=&quot;../indexable#%5B%5D?(index:Int)-instance-method&quot;&gt;[]? (индекс: Int) []?&lt;/a&gt; , &lt;a href=&quot;../indexable#bsearch(&amp;amp;block:T-%3EBool)-instance-method&quot;&gt;bsearch (&amp;amp; block: T -&amp;gt; Bool) bsearch&lt;/a&gt; , &lt;a href=&quot;../indexable#bsearch_index(&amp;amp;block:T,Int32-%3EBool)-instance-method&quot;&gt;bsearch_index (&amp;amp; block: T, Int32 -&amp;gt; Bool) bsearch_index&lt;/a&gt; , &lt;a href=&quot;../indexable#dig(index:Int,*subindexes)-instance-method&quot;&gt;dig (индекс: Int, * субиндексы) dig&lt;/a&gt; , &lt;a href=&quot;../indexable#dig?(index:Int,*subindexes)-instance-method&quot;&gt;dig? (индекс: Int, * субиндексы) dig?&lt;/a&gt; , &lt;a href=&quot;../indexable#each(*,start:Int,count:Int,&amp;amp;block)-instance-method&quot;&gt;каждый (*, начало: Int, число: Int, &amp;amp; block) &lt;br/&gt;каждый (*, в пределах диапазона: Range, &amp;amp; block) &lt;br/&gt;каждый (&amp;amp; block) &lt;br/&gt;каждый каждый&lt;/a&gt; , &lt;a href=&quot;../indexable#each_index(*,start:Int,count:Int,&amp;amp;block)-instance-method&quot;&gt;each_index (*, start: Int, count: Int, &amp;amp; block) &lt;br/&gt;each_index (&amp;amp; block ): Nil &lt;br/&gt;each_index each_index&lt;/a&gt; , &lt;a href=&quot;../indexable#empty?-instance-method&quot;&gt;пусто? пустой?&lt;/a&gt; , &lt;a href=&quot;../indexable#equals?(other:Indexable,&amp;amp;block)-instance-method&quot;&gt;равно? (другое: индексируемое, &amp;amp; блок) &lt;br/&gt;равно? (другое: &amp;amp; блок) равно?&lt;/a&gt; ,&lt;a href=&quot;../indexable#fetch(index,default)-instance-method&quot;&gt;выборка (индекс, по умолчанию) &lt;br/&gt;выборка (индекс: Int, &amp;amp; block) выборка&lt;/a&gt; , &lt;a href=&quot;../indexable#first-instance-method&quot;&gt;сначала &lt;br/&gt;первая (&amp;amp; block) первая&lt;/a&gt; , &lt;a href=&quot;../indexable#first?-instance-method&quot;&gt;первая? первый?&lt;/a&gt; , &lt;a href=&quot;../indexable#hash(hasher)-instance-method&quot;&gt;hash (hasher) hash&lt;/a&gt; , &lt;a href=&quot;../indexable#index(object,offset:Int=0)-instance-method&quot;&gt;index (object, offset: Int = 0) &lt;br/&gt;index (offset: Int = 0, &amp;amp; block) index&lt;/a&gt; , join (разделитель = &quot;&quot;) join, &lt;a href=&quot;../indexable#last-instance-method&quot;&gt;последний &lt;br/&gt;последний (&amp;amp; block) последний&lt;/a&gt; , &lt;a href=&quot;../indexable#last?-instance-method&quot;&gt;последний? последний?&lt;/a&gt; , &lt;a href=&quot;../indexable#reverse_each(&amp;amp;block):Nil-instance-method&quot;&gt;reverse_each (&amp;amp; block): ноль &lt;br/&gt;reverse_each reverse_each&lt;/a&gt; , &lt;a href=&quot;../indexable#rindex(offset=size-1,&amp;amp;block)-instance-method&quot;&gt;rindex (смещение = размер - 1, &amp;amp; block) &lt;br/&gt;rindex (значение, смещение = размер - 1) rindex&lt;/a&gt; , &lt;a href=&quot;../indexable#sample(random=Random::DEFAULT)-instance-method&quot;&gt;sample (random = Random :: DEFAULT) выборка&lt;/a&gt; , &lt;a href=&quot;../indexable#size-instance-method&quot;&gt;размер размера&lt;/a&gt; , &lt;a href=&quot;../indexable#to_a-instance-method&quot;&gt;to_a to_a&lt;/a&gt; ,&lt;a href=&quot;../indexable#unsafe_fetch(index:Int)-instance-method&quot;&gt;unsafe_fetch (index: Int) unsafe_fetch&lt;/a&gt; , &lt;a href=&quot;../indexable#values_at(*indexes:Int)-instance-method&quot;&gt;values_at (* indexes: Int) values_at&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c6fab07a8b8d853ea68ee142430cda3b5bcec98f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../installation&quot;&gt;Install the latest Crystal release&lt;/a&gt;. To compile Crystal, you need Crystal :).</source>
          <target state="translated">&lt;a href=&quot;../installation&quot;&gt;Установите последнюю версию Crystal&lt;/a&gt; . Для компиляции Crystal вам нужен Crystal :).</target>
        </trans-unit>
        <trans-unit id="2c7449a71ecdbfa32a581b1e0468be8d7108821b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../io#copy(src,dst,limit:Int):UInt64-class-method&quot;&gt; copy(src, dst, limit : Int) : UInt64&lt;br/&gt;copy(src, dst) : UInt64 copy&lt;/a&gt;, &lt;a href=&quot;../io#pipe(read_blocking=false,write_blocking=false):Tuple(IO::FileDescriptor,IO::FileDescriptor)-class-method&quot;&gt; pipe(read_blocking = false, write_blocking = false) : Tuple(IO::FileDescriptor, IO::FileDescriptor)&lt;br/&gt;pipe(read_blocking = false, write_blocking = false, &amp;amp;block) pipe&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../io#copy(src,dst,limit:Int):UInt64-class-method&quot;&gt;copy (src, dst, limit: Int): UInt64 &lt;br/&gt;copy (src, dst): UInt64 copy&lt;/a&gt; , &lt;a href=&quot;../io#pipe(read_blocking=false,write_blocking=false):Tuple(IO::FileDescriptor,IO::FileDescriptor)-class-method&quot;&gt;pipe (read_blocking = false, write_blocking = false): Tuple (IO :: FileDescriptor, IO :: FileDescriptor) &lt;br/&gt;pipe (read_blocking = false , write_blocking = false, &amp;amp; block) pipe&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="de2782d5563a4d53ea1a5b0c3a327eaa0c20a6eb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../io#self-instance-method&quot;&gt; &amp;lt;self &amp;lt;&amp;lt;&lt;/a&gt;, &lt;a href=&quot;../io#close-instance-method&quot;&gt; close close&lt;/a&gt;, &lt;a href=&quot;../io#closed?-instance-method&quot;&gt; closed? closed?&lt;/a&gt;, &lt;a href=&quot;../io#each_byte(&amp;amp;block):Nil-instance-method&quot;&gt; each_byte(&amp;amp;block) : Nil&lt;br/&gt;each_byte each_byte&lt;/a&gt;, &lt;a href=&quot;../io#each_char(&amp;amp;block):Nil-instance-method&quot;&gt; each_char(&amp;amp;block) : Nil&lt;br/&gt;each_char each_char&lt;/a&gt;, &lt;a href=&quot;../io#each_line(*args,**options,&amp;amp;block:String-%3E):Nil-instance-method&quot;&gt; each_line(*args, **options, &amp;amp;block : String -&amp;gt; ) : Nil&lt;br/&gt;each_line(*args, **options) each_line&lt;/a&gt;, &lt;a href=&quot;../io#encoding:String-instance-method&quot;&gt; encoding : String encoding&lt;/a&gt;, &lt;a href=&quot;../io#flush-instance-method&quot;&gt; flush flush&lt;/a&gt;, &lt;a href=&quot;../io#gets(delimiter:Char,limit:Int,chomp=false):String?-instance-method&quot;&gt; gets(delimiter : Char, limit : Int, chomp = false) : String?&lt;br/&gt;gets(delimiter : Char, chomp = false) : String?&lt;br/&gt;gets(chomp = true) : String?&lt;br/&gt;gets(limit : Int, chomp = false) : String?&lt;br/&gt;gets(delimiter : String, chomp = false) : String? gets&lt;/a&gt;, &lt;a href=&quot;../io#gets_to_end:String-instance-method&quot;&gt; gets_to_end : String gets_to_end&lt;/a&gt;, &lt;a href=&quot;../io#peek:Bytes?-instance-method&quot;&gt; peek : Bytes? peek&lt;/a&gt;, &lt;a href=&quot;../io#pos-instance-method&quot;&gt; pos pos&lt;/a&gt;, &lt;a href=&quot;../io#pos=(value)-instance-method&quot;&gt; pos=(value) pos=&lt;/a&gt;, &lt;a href=&quot;../io#print(*objects:UNDERSCORE):Nil-instance-method&quot;&gt; print(*objects : UNDERSCORE) : Nil&lt;br/&gt;print(obj) : Nil print&lt;/a&gt;, &lt;a href=&quot;../io#printf(format_string,*args):Nil-instance-method&quot;&gt; printf(format_string, *args) : Nil&lt;br/&gt;printf(format_string, args : Array | Tuple) : Nil printf&lt;/a&gt;, &lt;a href=&quot;../io#puts(*objects:UNDERSCORE):Nil-instance-method&quot;&gt; puts(*objects : UNDERSCORE) : Nil&lt;br/&gt;puts : Nil&lt;br/&gt;puts(obj) : Nil&lt;br/&gt;puts(string : String) : Nil puts&lt;/a&gt;, &lt;a href=&quot;../io#read(slice:Bytes)-instance-method&quot;&gt; read(slice : Bytes) read&lt;/a&gt;, &lt;a href=&quot;../io#read_at(offset,bytesize,&amp;amp;block)-instance-method&quot;&gt; read_at(offset, bytesize, &amp;amp;block) read_at&lt;/a&gt;, &lt;a href=&quot;../io#read_byte:UInt8?-instance-method&quot;&gt; read_byte : UInt8? read_byte&lt;/a&gt;, &lt;a href=&quot;../io#read_bytes(type,format:IO::ByteFormat=IO::ByteFormat::SystemEndian)-instance-method&quot;&gt; read_bytes(type, format : IO::ByteFormat = IO::ByteFormat::SystemEndian) read_bytes&lt;/a&gt;, &lt;a href=&quot;../io#read_char:Char?-instance-method&quot;&gt; read_char : Char? read_char&lt;/a&gt;, &lt;a href=&quot;../io#read_fully(slice:Bytes)-instance-method&quot;&gt; read_fully(slice : Bytes) read_fully&lt;/a&gt;, &lt;a href=&quot;../io#read_fully?(slice:Bytes)-instance-method&quot;&gt; read_fully?(slice : Bytes) read_fully?&lt;/a&gt;, &lt;a href=&quot;../io#read_line(*args,**options):String-instance-method&quot;&gt; read_line(*args, **options) : String read_line&lt;/a&gt;, &lt;a href=&quot;../io#read_string(bytesize:Int):String-instance-method&quot;&gt; read_string(bytesize : Int) : String read_string&lt;/a&gt;, &lt;a href=&quot;../io#read_utf8(slice:Bytes)-instance-method&quot;&gt; read_utf8(slice : Bytes) read_utf8&lt;/a&gt;, &lt;a href=&quot;../io#read_utf8_byte-instance-method&quot;&gt; read_utf8_byte read_utf8_byte&lt;/a&gt;, &lt;a href=&quot;../io#rewind-instance-method&quot;&gt; rewind rewind&lt;/a&gt;, &lt;a href=&quot;../io#seek(offset,whence:Seek=Seek::Set)-instance-method&quot;&gt; seek(offset, whence : Seek = Seek::Set) seek&lt;/a&gt;, &lt;a href=&quot;../io#set_encoding(encoding:String,invalid:Symbol?=nil)-instance-method&quot;&gt; set_encoding(encoding : String, invalid : Symbol? = nil) set_encoding&lt;/a&gt;, &lt;a href=&quot;../io#skip(bytes_count:Int):Nil-instance-method&quot;&gt; skip(bytes_count : Int) : Nil skip&lt;/a&gt;, &lt;a href=&quot;../io#skip_to_end:Nil-instance-method&quot;&gt; skip_to_end : Nil skip_to_end&lt;/a&gt;, &lt;a href=&quot;../io#tell-instance-method&quot;&gt; tell tell&lt;/a&gt;, &lt;a href=&quot;../io#tty?:Bool-instance-method&quot;&gt; tty? : Bool tty?&lt;/a&gt;, &lt;a href=&quot;../io#write(slice:Bytes):Nil-instance-method&quot;&gt; write(slice : Bytes) : Nil write&lt;/a&gt;, &lt;a href=&quot;../io#write_byte(byte:UInt8)-instance-method&quot;&gt; write_byte(byte : UInt8) write_byte&lt;/a&gt;, &lt;a href=&quot;../io#write_bytes(object,format:IO::ByteFormat=IO::ByteFormat::SystemEndian)-instance-method&quot;&gt; write_bytes(object, format : IO::ByteFormat = IO::ByteFormat::SystemEndian) write_bytes&lt;/a&gt;, &lt;a href=&quot;../io#write_utf8(slice:Bytes)-instance-method&quot;&gt; write_utf8(slice : Bytes) write_utf8&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../io#self-instance-method&quot;&gt;&amp;lt;self &amp;lt;&amp;lt;&lt;/a&gt; , &lt;a href=&quot;../io#close-instance-method&quot;&gt;закрыть закрыть&lt;/a&gt; , &lt;a href=&quot;../io#closed?-instance-method&quot;&gt;закрыть? закрыто?&lt;/a&gt; , &lt;a href=&quot;../io#each_byte(&amp;amp;block):Nil-instance-method&quot;&gt;each_byte (&amp;amp; block): ноль &lt;br/&gt;each_byte each_byte&lt;/a&gt; , &lt;a href=&quot;../io#each_char(&amp;amp;block):Nil-instance-method&quot;&gt;each_char (&amp;amp; block): ноль &lt;br/&gt;each_char each_char&lt;/a&gt; , &lt;a href=&quot;../io#each_line(*args,**options,&amp;amp;block:String-%3E):Nil-instance-method&quot;&gt;each_line (* аргументы, ** параметры, &amp;amp; block: String -&amp;gt;): ноль &lt;br/&gt;each_line (* args, ** options) each_line&lt;/a&gt; , &lt;a href=&quot;../io#encoding:String-instance-method&quot;&gt;кодировка: String кодирование&lt;/a&gt; , &lt;a href=&quot;../io#flush-instance-method&quot;&gt;флэш-флэш&lt;/a&gt; , &lt;a href=&quot;../io#gets(delimiter:Char,limit:Int,chomp=false):String?-instance-method&quot;&gt;получает (разделитель: Char, предел: Int, chomp = false): String? &lt;br/&gt;получает (разделитель: Char, chomp = false): строка? &lt;br/&gt;get (chomp = true): строка? &lt;br/&gt;get (limit: Int, chomp = false): Строка? &lt;br/&gt;get (разделитель: String, chomp = false): String? получает&lt;/a&gt; ,&lt;a href=&quot;../io#gets_to_end:String-instance-method&quot;&gt;gets_to_end: String gets_to_end&lt;/a&gt; , &lt;a href=&quot;../io#peek:Bytes?-instance-method&quot;&gt;peek: байт? peek&lt;/a&gt; , &lt;a href=&quot;../io#pos-instance-method&quot;&gt;pos pos&lt;/a&gt; , &lt;a href=&quot;../io#pos=(value)-instance-method&quot;&gt;pos = (значение) pos =&lt;/a&gt; , &lt;a href=&quot;../io#print(*objects:UNDERSCORE):Nil-instance-method&quot;&gt;print (* объекты: UNDERSCORE): ноль &lt;br/&gt;print (obj): ноль print&lt;/a&gt; , &lt;a href=&quot;../io#printf(format_string,*args):Nil-instance-method&quot;&gt;printf (format_string, * args): ноль &lt;br/&gt;printf (format_string, args: Array | Tuple): Ноль printf&lt;/a&gt; , &lt;a href=&quot;../io#puts(*objects:UNDERSCORE):Nil-instance-method&quot;&gt;put (* объекты: UNDERSCORE): Ноль &lt;br/&gt;устанавливает: Нил &lt;br/&gt;ставит (obj): Ноль &lt;br/&gt;ставит (строка: строка): Ноль ставит&lt;/a&gt; , &lt;a href=&quot;../io#read(slice:Bytes)-instance-method&quot;&gt;читает (фрагмент: байты), читает&lt;/a&gt; , &lt;a href=&quot;../io#read_at(offset,bytesize,&amp;amp;block)-instance-method&quot;&gt;read_at (смещение, размер в байтах и ​​блокирует) read_at&lt;/a&gt; , &lt;a href=&quot;../io#read_byte:UInt8?-instance-method&quot;&gt;read_byte : UInt8? read_byte&lt;/a&gt; , &lt;a href=&quot;../io#read_bytes(type,format:IO::ByteFormat=IO::ByteFormat::SystemEndian)-instance-method&quot;&gt;read_bytes (тип, формат: IO :: ByteFormat = IO :: ByteFormat :: SystemEndian) read_bytes&lt;/a&gt;, &lt;a href=&quot;../io#read_char:Char?-instance-method&quot;&gt;read_char: Char? read_char&lt;/a&gt; , &lt;a href=&quot;../io#read_fully(slice:Bytes)-instance-method&quot;&gt;read_fully (slice: Bytes) read_fully&lt;/a&gt; , &lt;a href=&quot;../io#read_fully?(slice:Bytes)-instance-method&quot;&gt;read_fully? (slice: Bytes) read_fully?&lt;/a&gt; , &lt;a href=&quot;../io#read_line(*args,**options):String-instance-method&quot;&gt;read_line (* args, ** options): строка read_line&lt;/a&gt; , &lt;a href=&quot;../io#read_string(bytesize:Int):String-instance-method&quot;&gt;read_string (bytesize: Int): строка read_string&lt;/a&gt; , &lt;a href=&quot;../io#read_utf8(slice:Bytes)-instance-method&quot;&gt;read_utf8 (slice: Bytes) read_utf8&lt;/a&gt; , &lt;a href=&quot;../io#read_utf8_byte-instance-method&quot;&gt;read_utf8_byte read_utf8_byte&lt;/a&gt; , &lt;a href=&quot;../io#rewind-instance-method&quot;&gt;перемотка назад&lt;/a&gt; , перемотка назад , &lt;a href=&quot;../io#seek(offset,whence:Seek=Seek::Set)-instance-method&quot;&gt;поиск (смещение, отсюда: Seek = Seek :: Set ) искать&lt;/a&gt; , &lt;a href=&quot;../io#set_encoding(encoding:String,invalid:Symbol?=nil)-instance-method&quot;&gt;set_encoding (кодировка: строка, недействительный: символ? = ноль) set_encoding&lt;/a&gt; , &lt;a href=&quot;../io#skip(bytes_count:Int):Nil-instance-method&quot;&gt;пропустить (bytes_count: Int): ноль пропустить&lt;/a&gt; , &lt;a href=&quot;../io#skip_to_end:Nil-instance-method&quot;&gt;skip_to_end: ноль skip_to_end&lt;/a&gt; , &lt;a href=&quot;../io#tell-instance-method&quot;&gt;сказать, сказать&lt;/a&gt; ,&lt;a href=&quot;../io#tty?:Bool-instance-method&quot;&gt;терминал? : Bool tty?&lt;/a&gt; , &lt;a href=&quot;../io#write(slice:Bytes):Nil-instance-method&quot;&gt;запись (фрагмент: байты): &lt;/a&gt;&lt;a href=&quot;../io#write_byte(byte:UInt8)-instance-method&quot;&gt;нулевая &lt;/a&gt;запись , запись_байта (байт: UInt8) запись_байта , &lt;a href=&quot;../io#write_bytes(object,format:IO::ByteFormat=IO::ByteFormat::SystemEndian)-instance-method&quot;&gt;запись_байта (объект, формат: IO :: ByteFormat = IO :: ByteFormat :: SystemEndian) запись_байта&lt;/a&gt; , &lt;a href=&quot;../io#write_utf8(slice:Bytes)-instance-method&quot;&gt;запись_utf8 (фрагмент: байты) write_utf8&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5879682801f2c7d5a4aa27c31c8832911aa05fb6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../io/buffered#buffer_size-instance-method&quot;&gt; buffer_size buffer_size&lt;/a&gt;, &lt;a href=&quot;../io/buffered#buffer_size=(value)-instance-method&quot;&gt; buffer_size=(value) buffer_size=&lt;/a&gt;, &lt;a href=&quot;../io/buffered#close:Nil-instance-method&quot;&gt; close : Nil close&lt;/a&gt;, &lt;a href=&quot;../io/buffered#flush-instance-method&quot;&gt; flush flush&lt;/a&gt;, &lt;a href=&quot;../io/buffered#peek:Bytes?-instance-method&quot;&gt; peek : Bytes? peek&lt;/a&gt;, &lt;a href=&quot;../io/buffered#read(slice:Bytes)-instance-method&quot;&gt; read(slice : Bytes) read&lt;/a&gt;, &lt;a href=&quot;../io/buffered#read_buffering=(read_buffering)-instance-method&quot;&gt; read_buffering=(read_buffering) read_buffering=&lt;/a&gt;, &lt;a href=&quot;../io/buffered#read_buffering?-instance-method&quot;&gt; read_buffering? read_buffering?&lt;/a&gt;, &lt;a href=&quot;../io/buffered#rewind-instance-method&quot;&gt; rewind rewind&lt;/a&gt;, &lt;a href=&quot;../io/buffered#sync=(sync)-instance-method&quot;&gt; sync=(sync) sync=&lt;/a&gt;, &lt;a href=&quot;../io/buffered#sync?-instance-method&quot;&gt; sync? sync?&lt;/a&gt;, &lt;a href=&quot;../io/buffered#unbuffered_close-instance-method&quot;&gt; unbuffered_close unbuffered_close&lt;/a&gt;, &lt;a href=&quot;../io/buffered#unbuffered_flush-instance-method&quot;&gt; unbuffered_flush unbuffered_flush&lt;/a&gt;, &lt;a href=&quot;../io/buffered#unbuffered_read(slice:Bytes)-instance-method&quot;&gt; unbuffered_read(slice : Bytes) unbuffered_read&lt;/a&gt;, &lt;a href=&quot;../io/buffered#unbuffered_rewind-instance-method&quot;&gt; unbuffered_rewind unbuffered_rewind&lt;/a&gt;, &lt;a href=&quot;../io/buffered#unbuffered_write(slice:Bytes)-instance-method&quot;&gt; unbuffered_write(slice : Bytes) unbuffered_write&lt;/a&gt;, &lt;a href=&quot;../io/buffered#write(slice:Bytes):Nil-instance-method&quot;&gt; write(slice : Bytes) : Nil write&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../io/buffered#buffer_size-instance-method&quot;&gt;buffer_size buffer_size&lt;/a&gt; , &lt;a href=&quot;../io/buffered#buffer_size=(value)-instance-method&quot;&gt;buffer_size = (значение) buffer_size =&lt;/a&gt; , &lt;a href=&quot;../io/buffered#close:Nil-instance-method&quot;&gt;close: ноль закрыть&lt;/a&gt; , &lt;a href=&quot;../io/buffered#flush-instance-method&quot;&gt;очистить флэш&lt;/a&gt; , &lt;a href=&quot;../io/buffered#peek:Bytes?-instance-method&quot;&gt;посмотреть: байты? заглянуть&lt;/a&gt; , &lt;a href=&quot;../io/buffered#read(slice:Bytes)-instance-method&quot;&gt;прочитать (фрагмент: байты), прочитать&lt;/a&gt; , &lt;a href=&quot;../io/buffered#read_buffering=(read_buffering)-instance-method&quot;&gt;read_buffering = (read_buffering) read_buffering =&lt;/a&gt; , &lt;a href=&quot;../io/buffered#read_buffering?-instance-method&quot;&gt;read_buffering? read_buffering?&lt;/a&gt; , &lt;a href=&quot;../io/buffered#rewind-instance-method&quot;&gt;перемотка перемотка&lt;/a&gt; , &lt;a href=&quot;../io/buffered#sync=(sync)-instance-method&quot;&gt;синхронизация = (синхронизация) синхронизация =&lt;/a&gt; , &lt;a href=&quot;../io/buffered#sync?-instance-method&quot;&gt;синхронизация? синхронизация?&lt;/a&gt; , &lt;a href=&quot;../io/buffered#unbuffered_close-instance-method&quot;&gt;unbuffered_close unbuffered_close&lt;/a&gt; , &lt;a href=&quot;../io/buffered#unbuffered_flush-instance-method&quot;&gt;unbuffered_flush unbuffered_flush&lt;/a&gt; , &lt;a href=&quot;../io/buffered#unbuffered_read(slice:Bytes)-instance-method&quot;&gt;unbuffered_read (фрагмент: байты) unbuffered_read&lt;/a&gt; , &lt;a href=&quot;../io/buffered#unbuffered_rewind-instance-method&quot;&gt;unbuffered_rewind unbuffered_rewind&lt;/a&gt; ,&lt;a href=&quot;../io/buffered#unbuffered_write(slice:Bytes)-instance-method&quot;&gt;unbuffered_write (фрагмент: байты) unbuffered_write&lt;/a&gt; , &lt;a href=&quot;../io/buffered#write(slice:Bytes):Nil-instance-method&quot;&gt;запись (фрагмент: байты): нулевая запись&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5fa461d07b60342a130308042d824c8d2a94edbd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../iterable#chunk(reuse=false,&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt; chunk(reuse = false, &amp;amp;block : T -&amp;gt; U) forall U chunk&lt;/a&gt;, &lt;a href=&quot;../iterable#chunk_while(reuse:Bool%7CArray(T)=false,&amp;amp;block:T,T-%3EB)forallB-instance-method&quot;&gt; chunk_while(reuse : Bool | Array(T) = false, &amp;amp;block : T, T -&amp;gt; B) forall B chunk_while&lt;/a&gt;, &lt;a href=&quot;../iterable#cycle(n)-instance-method&quot;&gt; cycle(n)&lt;br/&gt;cycle cycle&lt;/a&gt;, &lt;a href=&quot;../iterable#each-instance-method&quot;&gt; each each&lt;/a&gt;, &lt;a href=&quot;../iterable#each_cons(count:Int,reuse=false)-instance-method&quot;&gt; each_cons(count : Int, reuse = false) each_cons&lt;/a&gt;, &lt;a href=&quot;../iterable#each_slice(count:Int,reuse=false)-instance-method&quot;&gt; each_slice(count : Int, reuse = false) each_slice&lt;/a&gt;, &lt;a href=&quot;../iterable#each_with_index(offset=0)-instance-method&quot;&gt; each_with_index(offset = 0) each_with_index&lt;/a&gt;, &lt;a href=&quot;../iterable#each_with_object(obj)-instance-method&quot;&gt; each_with_object(obj) each_with_object&lt;/a&gt;, &lt;a href=&quot;../iterable#slice_after(reuse:Bool%7CArray(T)=false,&amp;amp;block:T-%3EB)forallB-instance-method&quot;&gt; slice_after(reuse : Bool | Array(T) = false, &amp;amp;block : T -&amp;gt; B) forall B&lt;br/&gt;slice_after(pattern, reuse : Bool | Array(T) = false) slice_after&lt;/a&gt;, &lt;a href=&quot;../iterable#slice_before(reuse:Bool%7CArray(T)=false,&amp;amp;block:T-%3EB)forallB-instance-method&quot;&gt; slice_before(reuse : Bool | Array(T) = false, &amp;amp;block : T -&amp;gt; B) forall B&lt;br/&gt;slice_before(pattern, reuse : Bool | Array(T) = false) slice_before&lt;/a&gt;, &lt;a href=&quot;../iterable#slice_when(reuse:Bool%7CArray(T)=false,&amp;amp;block:T,T-%3EB)forallB-instance-method&quot;&gt; slice_when(reuse : Bool | Array(T) = false, &amp;amp;block : T, T -&amp;gt; B) forall B slice_when&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../iterable#chunk(reuse=false,&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;chunk (reuse = false, &amp;amp; block: T -&amp;gt; U) для U U чанк&lt;/a&gt; , &lt;a href=&quot;../iterable#chunk_while(reuse:Bool%7CArray(T)=false,&amp;amp;block:T,T-%3EB)forallB-instance-method&quot;&gt;chunk_ while (повторное использование: Bool | Array (T) = false, &amp;amp; block: T, T -&amp;gt; B) для B B chunk_ while&lt;/a&gt; , &lt;a href=&quot;../iterable#cycle(n)-instance-method&quot;&gt;цикл (n) &lt;br/&gt;цикл цикл&lt;/a&gt; , &lt;a href=&quot;../iterable#each-instance-method&quot;&gt;each each&lt;/a&gt; , &lt;a href=&quot;../iterable#each_cons(count:Int,reuse=false)-instance-method&quot;&gt;each_cons (count: Int, reuse = false) each_cons&lt;/a&gt; , &lt;a href=&quot;../iterable#each_slice(count:Int,reuse=false)-instance-method&quot;&gt;each_slice (count: Int, reuse = false) each_slice&lt;/a&gt; , &lt;a href=&quot;../iterable#each_with_index(offset=0)-instance-method&quot;&gt;each_with_index (offset = 0) each_with_index&lt;/a&gt; , &lt;a href=&quot;../iterable#each_with_object(obj)-instance-method&quot;&gt;each_with_object (obj) each_with_object&lt;/a&gt; , &lt;a href=&quot;../iterable#slice_after(reuse:Bool%7CArray(T)=false,&amp;amp;block:T-%3EB)forallB-instance-method&quot;&gt;slice_after (повторное использование: Bool | ) = false, &amp;amp; block: T -&amp;gt; B) для B B &lt;br/&gt;slice_after (pattern, reuse: Bool | Array (T) = false) slice_after&lt;/a&gt; , &lt;a href=&quot;../iterable#slice_before(reuse:Bool%7CArray(T)=false,&amp;amp;block:T-%3EB)forallB-instance-method&quot;&gt;slice_before (reuse: Bool | Array (T) = false, &amp;amp; block: T -&amp;gt; B) Форалл Б&lt;br/&gt;slice_before (pattern, reuse: Bool | Array (T) = false) slice_before&lt;/a&gt; , &lt;a href=&quot;../iterable#slice_when(reuse:Bool%7CArray(T)=false,&amp;amp;block:T,T-%3EB)forallB-instance-method&quot;&gt;slice_when (reuse: Bool | Array (T) = false, &amp;amp; block: T, T -&amp;gt; B) для всего B slice_when&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9d2034ae3dd5bfd612cca234f2ec5e050cc85f20" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../object#!=(other)-instance-method&quot;&gt; !=(other) !=&lt;/a&gt;, &lt;a href=&quot;../object#!~(other)-instance-method&quot;&gt; !~(other) !~&lt;/a&gt;, &lt;a href=&quot;../object#==(other)-instance-method&quot;&gt; ==(other) ==&lt;/a&gt;, &lt;a href=&quot;../object#===(other:JSON::Any)-instance-method&quot;&gt; ===(other : JSON::Any)&lt;br/&gt;===(other : YAML::Any)&lt;br/&gt;===(other) ===&lt;/a&gt;, &lt;a href=&quot;../object#=~(other)-instance-method&quot;&gt; =~(other) =~&lt;/a&gt;, &lt;a href=&quot;../object#class-instance-method&quot;&gt; class class&lt;/a&gt;, &lt;a href=&quot;../object#dup-instance-method&quot;&gt; dup dup&lt;/a&gt;, &lt;a href=&quot;../object#hash(hasher)-instance-method&quot;&gt; hash(hasher)&lt;br/&gt;hash hash&lt;/a&gt;, &lt;a href=&quot;../object#inspect(io:IO):Nil-instance-method&quot;&gt; inspect(io : IO) : Nil&lt;br/&gt;inspect : String inspect&lt;/a&gt;, &lt;a href=&quot;../object#itself-instance-method&quot;&gt; itself itself&lt;/a&gt;, &lt;a href=&quot;../object#not_nil!-instance-method&quot;&gt; not_nil! not_nil!&lt;/a&gt;,  pretty_inspect(width = 79, newline = &quot;\n&quot;, indent = 0) : String pretty_inspect, &lt;a href=&quot;../object#pretty_print(pp:PrettyPrint):Nil-instance-method&quot;&gt; pretty_print(pp : PrettyPrint) : Nil pretty_print&lt;/a&gt;, &lt;a href=&quot;../object#tap(&amp;amp;block)-instance-method&quot;&gt; tap(&amp;amp;block) tap&lt;/a&gt;, &lt;a href=&quot;../object#to_json(io:IO)-instance-method&quot;&gt; to_json(io : IO)&lt;br/&gt;to_json to_json&lt;/a&gt;,  to_pretty_json(indent : String = &quot; &quot;)</source>
          <target state="translated">&lt;a href=&quot;../object#!=(other)-instance-method&quot;&gt;! = (другое) =!&lt;/a&gt; , &lt;a href=&quot;../object#!~(other)-instance-method&quot;&gt;~ (другой) ~!&lt;/a&gt; , &lt;a href=&quot;../object#==(other)-instance-method&quot;&gt;== (другое) ==&lt;/a&gt; , &lt;a href=&quot;../object#===(other:JSON::Any)-instance-method&quot;&gt;=== (другое: JSON :: Любой) &lt;br/&gt;=== (другое: YAML :: Любой) &lt;br/&gt;=== ( other) ===&lt;/a&gt; , &lt;a href=&quot;../object#=~(other)-instance-method&quot;&gt;= ~ (other) = ~&lt;/a&gt; , &lt;a href=&quot;../object#class-instance-method&quot;&gt;класс class&lt;/a&gt; , &lt;a href=&quot;../object#dup-instance-method&quot;&gt;dup dup&lt;/a&gt; , &lt;a href=&quot;../object#hash(hasher)-instance-method&quot;&gt;hash (hasher) &lt;br/&gt;hash hashes&lt;/a&gt; , &lt;a href=&quot;../object#inspect(io:IO):Nil-instance-method&quot;&gt;inspect (io: IO): Nil &lt;br/&gt;inspect: проверка строки&lt;/a&gt; , &lt;a href=&quot;../object#itself-instance-method&quot;&gt;сама по себе&lt;/a&gt; , &lt;a href=&quot;../object#not_nil!-instance-method&quot;&gt;not_nil! not_nil!&lt;/a&gt; , Pretty_inspect (ширина = 79, перевод строка = &quot;\ п&quot;, отступ = 0): String pretty_inspect, &lt;a href=&quot;../object#pretty_print(pp:PrettyPrint):Nil-instance-method&quot;&gt;pretty_print (стр: PrettyPrint): Ноль pretty_print&lt;/a&gt; , &lt;a href=&quot;../object#tap(&amp;amp;block)-instance-method&quot;&gt;кран (&amp;amp; блок) кран&lt;/a&gt; , &lt;a href=&quot;../object#to_json(io:IO)-instance-method&quot;&gt;to_json (Io: IO) &lt;br/&gt;to_json to_json&lt;/a&gt;, to_pretty_json (indent: String = &quot;&quot;)</target>
        </trans-unit>
        <trans-unit id="f99dd689cccdf20d98a0babc70b98f08c1ce9759" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../object#from_json(string_or_io,root:String):self-class-method&quot;&gt; from_json(string_or_io, root : String) : self&lt;br/&gt;from_json(string_or_io) : self from_json&lt;/a&gt;, &lt;a href=&quot;../object#from_yaml(string_or_io:String%7CIO):self-class-method&quot;&gt; from_yaml(string_or_io : String | IO) : self from_yaml&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../object#from_json(string_or_io,root:String):self-class-method&quot;&gt;from_json (string_or_io, root: String): self &lt;br/&gt;from_json (string_or_io): self from_json&lt;/a&gt; , &lt;a href=&quot;../object#from_yaml(string_or_io:String%7CIO):self-class-method&quot;&gt;from_yaml (string_or_io: String | IO): self from_yaml&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="70bd99634417f7d5bbff76b29a278934866395e9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../random#base64(n:Int=16):String-instance-method&quot;&gt; base64(n : Int = 16) : String base64&lt;/a&gt;, &lt;a href=&quot;../random#hex(n:Int=16):String-instance-method&quot;&gt; hex(n : Int = 16) : String hex&lt;/a&gt;, &lt;a href=&quot;../random#next_bool:Bool-instance-method&quot;&gt; next_bool : Bool next_bool&lt;/a&gt;, &lt;a href=&quot;../random#next_float:Float64-instance-method&quot;&gt; next_float : Float64 next_float&lt;/a&gt;, &lt;a href=&quot;../random#next_int:Int32-instance-method&quot;&gt; next_int : Int32 next_int&lt;/a&gt;, &lt;a href=&quot;../random#next_u-instance-method&quot;&gt; next_u next_u&lt;/a&gt;, &lt;a href=&quot;../random#rand(range:Range(Int,Int)):Int-instance-method&quot;&gt; rand(range : Range(Int, Int)) : Int&lt;br/&gt;rand(max : Int) : Int&lt;br/&gt;rand : Float64&lt;br/&gt;rand(type : UInt64.class) : UInt64&lt;br/&gt;rand(type : Int64.class) : Int64&lt;br/&gt;rand(type : UInt32.class) : UInt32&lt;br/&gt;rand(type : Int32.class) : Int32&lt;br/&gt;rand(type : UInt16.class) : UInt16&lt;br/&gt;rand(type : Int16.class) : Int16&lt;br/&gt;rand(type : UInt8.class) : UInt8&lt;br/&gt;rand(type : Int8.class) : Int8&lt;br/&gt;rand(max : Float) : Float64&lt;br/&gt;rand(type : StaticArray(Int64, UNDERSCORE).class)&lt;br/&gt;rand(type : StaticArray(UInt32, UNDERSCORE).class)&lt;br/&gt;rand(type : StaticArray(Int32, UNDERSCORE).class)&lt;br/&gt;rand(type : StaticArray(UInt16, UNDERSCORE).class)&lt;br/&gt;rand(type : StaticArray(Int16, UNDERSCORE).class)&lt;br/&gt;rand(type : StaticArray(UInt8, UNDERSCORE).class)&lt;br/&gt;rand(type : StaticArray(Int8, UNDERSCORE).class)&lt;br/&gt;rand(range : Range(Float, Float)) : Float&lt;br/&gt;rand(type : StaticArray(UInt64, UNDERSCORE).class) rand&lt;/a&gt;, &lt;a href=&quot;../random#random_bytes(n:Int=16):Bytes-instance-method&quot;&gt; random_bytes(n : Int = 16) : Bytes&lt;br/&gt;random_bytes(buf : Bytes) : Nil random_bytes&lt;/a&gt;, &lt;a href=&quot;../random#urlsafe_base64(n:Int=16,padding=false):String-instance-method&quot;&gt; urlsafe_base64(n : Int = 16, padding = false) : String urlsafe_base64&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../random#base64(n:Int=16):String-instance-method&quot;&gt;base64 (n: Int = 16): строка base64&lt;/a&gt; , &lt;a href=&quot;../random#hex(n:Int=16):String-instance-method&quot;&gt;hex (n: Int = 16): строка hex&lt;/a&gt; , &lt;a href=&quot;../random#next_bool:Bool-instance-method&quot;&gt;next_bool: Bool next_bool&lt;/a&gt; , &lt;a href=&quot;../random#next_float:Float64-instance-method&quot;&gt;next_float: Float64 next_float&lt;/a&gt; , &lt;a href=&quot;../random#next_int:Int32-instance-method&quot;&gt;next_int: Int32 next_int&lt;/a&gt; , &lt;a href=&quot;../random#next_u-instance-method&quot;&gt;next_u next_u&lt;/a&gt; , &lt;a href=&quot;../random#rand(range:Range(Int,Int)):Int-instance-method&quot;&gt;rand (диапазон: диапазон (Int, Int)): Int &lt;br/&gt;rand (max: Int): Int &lt;br/&gt;rand: Float64 &lt;br/&gt;rand (тип: UInt64.class): UInt64 &lt;br/&gt;rand (тип: Int64.class): Int64 &lt;br/&gt;rand (тип: UInt32.class): UInt32 &lt;br/&gt;rand (тип: Int32.class): Int32 &lt;br/&gt;rand (тип: UInt16.class): UInt16 &lt;br/&gt;rand (тип: Int16.class): Int16 &lt;br/&gt;rand (тип: UInt8.class): UInt8 &lt;br/&gt;rand (тип: Int8.class): Int8 &lt;br/&gt;rand (максимум: Float): Float64&lt;br/&gt;rand (тип: StaticArray (Int64, UNDERSCORE) .class) &lt;br/&gt;rand (тип: StaticArray (UInt32, UNDERSCORE) .class) &lt;br/&gt;rand (тип: StaticArray (Int32, UNDERSCORE) .class) &lt;br/&gt;rand (тип: StaticArray (UInt16, UNDERSCORE). class) &lt;br/&gt;rand (тип: StaticArray (Int16, UNDERSCORE) .class) &lt;br/&gt;rand (тип: StaticArray (UInt8, UNDERSCORE) .class) &lt;br/&gt;rand (тип: StaticArray (Int8, UNDERSCORE) .class) &lt;br/&gt;rand (диапазон: диапазон (число с плавающей точкой, число с плавающей точкой) )): Float &lt;br/&gt;rand (тип: StaticArray (UInt64, UNDERSCORE) .class) rand&lt;/a&gt; , &lt;a href=&quot;../random#random_bytes(n:Int=16):Bytes-instance-method&quot;&gt;random_bytes (n: Int = 16): байт &lt;br/&gt;random_bytes (buf: Bytes): ноль random_bytes&lt;/a&gt; , &lt;a href=&quot;../random#urlsafe_base64(n:Int=16,padding=false):String-instance-method&quot;&gt;urlsafe_base64 (n: Int = 16, padding = false ): Строка urlsafe_base64&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="20020739e3fdf2902d5abbcad443221725c274e3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../reference#==(other:self)-instance-method&quot;&gt; ==(other : self)&lt;br/&gt;==(other : JSON::Any)&lt;br/&gt;==(other : YAML::Any)&lt;br/&gt;==(other) ==&lt;/a&gt;, &lt;a href=&quot;../reference#dup-instance-method&quot;&gt; dup dup&lt;/a&gt;, &lt;a href=&quot;../reference#hash(hasher)-instance-method&quot;&gt; hash(hasher) hash&lt;/a&gt;, &lt;a href=&quot;../reference#inspect(io:IO):Nil-instance-method&quot;&gt; inspect(io : IO) : Nil inspect&lt;/a&gt;, &lt;a href=&quot;../reference#object_id:UInt64-instance-method&quot;&gt; object_id : UInt64 object_id&lt;/a&gt;, &lt;a href=&quot;../reference#pretty_print(pp):Nil-instance-method&quot;&gt; pretty_print(pp) : Nil pretty_print&lt;/a&gt;, &lt;a href=&quot;../reference#same?(other:Reference)-instance-method&quot;&gt; same?(other : Reference)&lt;br/&gt;same?(other : Nil) same?&lt;/a&gt;, &lt;a href=&quot;../reference#to_s(io:IO):Nil-instance-method&quot;&gt; to_s(io : IO) : Nil to_s&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../reference#==(other:self)-instance-method&quot;&gt;== (прочее: self) &lt;br/&gt;== (прочее: JSON :: Any) &lt;br/&gt;== (прочее: YAML :: Any) &lt;br/&gt;== (прочее) ==&lt;/a&gt; , &lt;a href=&quot;../reference#dup-instance-method&quot;&gt;dup dup&lt;/a&gt; , &lt;a href=&quot;../reference#hash(hasher)-instance-method&quot;&gt;hash (хэш)&lt;/a&gt; , &lt;a href=&quot;../reference#inspect(io:IO):Nil-instance-method&quot;&gt;проверить (io: IO) : Ноль проверять&lt;/a&gt; , &lt;a href=&quot;../reference#object_id:UInt64-instance-method&quot;&gt;object_id: UInt64 object_id&lt;/a&gt; , &lt;a href=&quot;../reference#pretty_print(pp):Nil-instance-method&quot;&gt;pretty_print (pp): ноль pretty_print&lt;/a&gt; , то &lt;a href=&quot;../reference#same?(other:Reference)-instance-method&quot;&gt;же самое? (Другое: ссылка) то &lt;br/&gt;же самое? (Другое: ноль) то же самое? &lt;/a&gt;, &lt;a href=&quot;../reference#to_s(io:IO):Nil-instance-method&quot;&gt;to_s (io: IO): ноль to_s&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4cc1a2c68f42f005bcf057eab85b77df6d2aa78a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../socket#alpn_protocol-instance-method&quot;&gt; alpn_protocol alpn_protocol&lt;/a&gt;, &lt;a href=&quot;../socket#cipher:String-instance-method&quot;&gt; cipher : String cipher&lt;/a&gt;, &lt;a href=&quot;../socket#closed?:Bool-instance-method&quot;&gt; closed? : Bool closed?&lt;/a&gt;, &lt;a href=&quot;../socket#finalize-instance-method&quot;&gt; finalize finalize&lt;/a&gt;, &lt;a href=&quot;../socket#hostname:String?-instance-method&quot;&gt; hostname : String? hostname&lt;/a&gt;, &lt;a href=&quot;../socket#local_address-instance-method&quot;&gt; local_address local_address&lt;/a&gt;, &lt;a href=&quot;../socket#read_timeout-instance-method&quot;&gt; read_timeout read_timeout&lt;/a&gt;, &lt;a href=&quot;../socket#read_timeout=(value)-instance-method&quot;&gt; read_timeout=(value) read_timeout=&lt;/a&gt;, &lt;a href=&quot;../socket#remote_address-instance-method&quot;&gt; remote_address remote_address&lt;/a&gt;, &lt;a href=&quot;../socket#sync_close=(sync_close:Bool)-instance-method&quot;&gt; sync_close=(sync_close : Bool) sync_close=&lt;/a&gt;, &lt;a href=&quot;../socket#sync_close?:Bool-instance-method&quot;&gt; sync_close? : Bool sync_close?&lt;/a&gt;, &lt;a href=&quot;../socket#tls_version:String-instance-method&quot;&gt; tls_version : String tls_version&lt;/a&gt;, &lt;a href=&quot;../socket#unbuffered_close-instance-method&quot;&gt; unbuffered_close unbuffered_close&lt;/a&gt;, &lt;a href=&quot;../socket#unbuffered_flush-instance-method&quot;&gt; unbuffered_flush unbuffered_flush&lt;/a&gt;, &lt;a href=&quot;../socket#unbuffered_read(slice:Bytes)-instance-method&quot;&gt; unbuffered_read(slice : Bytes) unbuffered_read&lt;/a&gt;, &lt;a href=&quot;../socket#unbuffered_rewind-instance-method&quot;&gt; unbuffered_rewind unbuffered_rewind&lt;/a&gt;, &lt;a href=&quot;../socket#unbuffered_write(slice:Bytes)-instance-method&quot;&gt; unbuffered_write(slice : Bytes) unbuffered_write&lt;/a&gt;, &lt;a href=&quot;../socket#write_timeout-instance-method&quot;&gt; write_timeout write_timeout&lt;/a&gt;, &lt;a href=&quot;../socket#write_timeout=(value)-instance-method&quot;&gt; write_timeout=(value) write_timeout=&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../socket#alpn_protocol-instance-method&quot;&gt;alpn_protocol alpn_protocol&lt;/a&gt; , &lt;a href=&quot;../socket#cipher:String-instance-method&quot;&gt;cipher: строковый шифр&lt;/a&gt; , &lt;a href=&quot;../socket#closed?:Bool-instance-method&quot;&gt;закрыто? : Бул закрыто?&lt;/a&gt; , &lt;a href=&quot;../socket#finalize-instance-method&quot;&gt;финализировать финализировать&lt;/a&gt; , &lt;a href=&quot;../socket#hostname:String?-instance-method&quot;&gt;имя хоста: строка? имя хоста&lt;/a&gt; , &lt;a href=&quot;../socket#local_address-instance-method&quot;&gt;local_address local_address&lt;/a&gt; , &lt;a href=&quot;../socket#read_timeout-instance-method&quot;&gt;read_timeout read_timeout&lt;/a&gt; , &lt;a href=&quot;../socket#read_timeout=(value)-instance-method&quot;&gt;read_timeout = (значение) read_timeout =&lt;/a&gt; , &lt;a href=&quot;../socket#remote_address-instance-method&quot;&gt;remote_address remote_address&lt;/a&gt; , &lt;a href=&quot;../socket#sync_close=(sync_close:Bool)-instance-method&quot;&gt;sync_close = (sync_close: Bool) sync_close =&lt;/a&gt; , &lt;a href=&quot;../socket#sync_close?:Bool-instance-method&quot;&gt;sync_close? : Bool sync_close?&lt;/a&gt; , &lt;a href=&quot;../socket#tls_version:String-instance-method&quot;&gt;Tls_version: String tls_version&lt;/a&gt; , &lt;a href=&quot;../socket#unbuffered_close-instance-method&quot;&gt;unbuffered_close unbuffered_close&lt;/a&gt; , &lt;a href=&quot;../socket#unbuffered_flush-instance-method&quot;&gt;unbuffered_flush unbuffered_flush&lt;/a&gt; ,&lt;a href=&quot;../socket#unbuffered_read(slice:Bytes)-instance-method&quot;&gt;unbuffered_read (срез: Б) unbuffered_read&lt;/a&gt; , &lt;a href=&quot;../socket#unbuffered_rewind-instance-method&quot;&gt;unbuffered_rewind unbuffered_rewind&lt;/a&gt; , &lt;a href=&quot;../socket#unbuffered_write(slice:Bytes)-instance-method&quot;&gt;unbuffered_write (срез: Б) unbuffered_write&lt;/a&gt; , &lt;a href=&quot;../socket#write_timeout-instance-method&quot;&gt;write_timeout write_timeout&lt;/a&gt; , &lt;a href=&quot;../socket#write_timeout=(value)-instance-method&quot;&gt;write_timeout = (значение) = write_timeout&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d8e53f52b913a01cb3666e11d9962780add1c15f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../struct#==(other):Bool-instance-method&quot;&gt; ==(other) : Bool ==&lt;/a&gt;, &lt;a href=&quot;../struct#hash(hasher)-instance-method&quot;&gt; hash(hasher) hash&lt;/a&gt;, &lt;a href=&quot;../struct#inspect(io:IO):Nil-instance-method&quot;&gt; inspect(io : IO) : Nil inspect&lt;/a&gt;, &lt;a href=&quot;../struct#pretty_print(pp):Nil-instance-method&quot;&gt; pretty_print(pp) : Nil pretty_print&lt;/a&gt;, &lt;a href=&quot;../struct#to_s(io:IO):Nil-instance-method&quot;&gt; to_s(io : IO) : Nil to_s&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../struct#==(other):Bool-instance-method&quot;&gt;== (прочее): Bool ==&lt;/a&gt; , &lt;a href=&quot;../struct#hash(hasher)-instance-method&quot;&gt;хеш (хеш) хеш&lt;/a&gt; , &lt;a href=&quot;../struct#inspect(io:IO):Nil-instance-method&quot;&gt;проверять (io: IO): ноль проверять&lt;/a&gt; , &lt;a href=&quot;../struct#pretty_print(pp):Nil-instance-method&quot;&gt;pretty_print (pp): ноль pretty_print&lt;/a&gt; , &lt;a href=&quot;../struct#to_s(io:IO):Nil-instance-method&quot;&gt;to_s (io: IO): ноль to_s&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b5b3e3cf30e3a160e313d79fd37672ca9a6c9884" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../value#==(other:JSON::Any)-instance-method&quot;&gt; ==(other : JSON::Any)&lt;br/&gt;==(other : YAML::Any)&lt;br/&gt;==(other) ==&lt;/a&gt;, &lt;a href=&quot;../value#dup-instance-method&quot;&gt; dup dup&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../value#==(other:JSON::Any)-instance-method&quot;&gt;== (другое: JSON :: Any) &lt;br/&gt;== (другое: YAML :: Any) &lt;br/&gt;== (другое) ==&lt;/a&gt; , &lt;a href=&quot;../value#dup-instance-method&quot;&gt;dup dup&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="23f9db6f232397d70d7483bcc854ace69ed660ea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;address#==(other)-instance-method&quot;&gt; ==(other) ==&lt;/a&gt;, &lt;a href=&quot;address#family:Family-instance-method&quot;&gt; family : Family family&lt;/a&gt;, &lt;a href=&quot;address#size:Int32-instance-method&quot;&gt; size : Int32 size&lt;/a&gt;, &lt;a href=&quot;address#to_unsafe:Pointer(LibC::Sockaddr)-instance-method&quot;&gt; to_unsafe : Pointer(LibC::Sockaddr) to_unsafe&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;address#==(other)-instance-method&quot;&gt;== (другое) ==&lt;/a&gt; , &lt;a href=&quot;address#family:Family-instance-method&quot;&gt;семейство: семейное семейство&lt;/a&gt; , &lt;a href=&quot;address#size:Int32-instance-method&quot;&gt;размер: размер Int32&lt;/a&gt; , &lt;a href=&quot;address#to_unsafe:Pointer(LibC::Sockaddr)-instance-method&quot;&gt;to_unsafe: указатель (LibC :: Sockaddr) to_unsafe&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8122f58658cc3f9ef1468f2462407f1a80e29a47" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;address#from(sockaddr:Pointer(LibC::Sockaddr),addrlen):Address-class-method&quot;&gt; from(sockaddr : Pointer(LibC::Sockaddr), addrlen) : Address from&lt;/a&gt;, &lt;a href=&quot;address#new(family:Family,size:Int32)-class-method&quot;&gt; new(family : Family, size : Int32) new&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;address#from(sockaddr:Pointer(LibC::Sockaddr),addrlen):Address-class-method&quot;&gt;from (sockaddr: Pointer (LibC :: Sockaddr), addrlen): Адрес&lt;/a&gt; , &lt;a href=&quot;address#new(family:Family,size:Int32)-class-method&quot;&gt;новый (семейство: Family, размер: Int32) new&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="24118c556b2e579795821b284a3c5eb835b2b4aa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;astnode#!=(other:ASTNode):BoolLiteral-instance-method&quot;&gt; !=(other : ASTNode) : BoolLiteral !=&lt;/a&gt;, &lt;a href=&quot;astnode#==(other:ASTNode):BoolLiteral-instance-method&quot;&gt; ==(other : ASTNode) : BoolLiteral ==&lt;/a&gt;, &lt;a href=&quot;astnode#class_name:StringLiteral-instance-method&quot;&gt; class_name : StringLiteral class_name&lt;/a&gt;, &lt;a href=&quot;astnode#column_number:StringLiteral%7CNilLiteral-instance-method&quot;&gt; column_number : StringLiteral | NilLiteral column_number&lt;/a&gt;, &lt;a href=&quot;astnode#end_column_number:StringLiteral%7CNilLiteral-instance-method&quot;&gt; end_column_number : StringLiteral | NilLiteral end_column_number&lt;/a&gt;, &lt;a href=&quot;astnode#end_line_number:StringLiteral%7CNilLiteral-instance-method&quot;&gt; end_line_number : StringLiteral | NilLiteral end_line_number&lt;/a&gt;, &lt;a href=&quot;astnode#filename:StringLiteral%7CNilLiteral-instance-method&quot;&gt; filename : StringLiteral | NilLiteral filename&lt;/a&gt;, &lt;a href=&quot;astnode#id:MacroId-instance-method&quot;&gt; id : MacroId id&lt;/a&gt;, &lt;a href=&quot;astnode#line_number:StringLiteral%7CNilLiteral-instance-method&quot;&gt; line_number : StringLiteral | NilLiteral line_number&lt;/a&gt;, &lt;a href=&quot;astnode#raise(message):NoReturn-instance-method&quot;&gt; raise(message) : NoReturn raise&lt;/a&gt;, &lt;a href=&quot;astnode#stringify:StringLiteral-instance-method&quot;&gt; stringify : StringLiteral stringify&lt;/a&gt;, &lt;a href=&quot;astnode#symbolize:SymbolLiteral-instance-method&quot;&gt; symbolize : SymbolLiteral symbolize&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;astnode#!=(other:ASTNode):BoolLiteral-instance-method&quot;&gt;! = (другое: ASTNode): BoolLiteral! =&lt;/a&gt; , &lt;a href=&quot;astnode#==(other:ASTNode):BoolLiteral-instance-method&quot;&gt;== (другое: ASTNode): BoolLiteral ==&lt;/a&gt; , &lt;a href=&quot;astnode#class_name:StringLiteral-instance-method&quot;&gt;имя_класса: StringLiteral имя_класса&lt;/a&gt; , &lt;a href=&quot;astnode#column_number:StringLiteral%7CNilLiteral-instance-method&quot;&gt;номер_столбца: StringLiteral | NilLiteral column_number&lt;/a&gt; , &lt;a href=&quot;astnode#end_column_number:StringLiteral%7CNilLiteral-instance-method&quot;&gt;end_column_number: StringLiteral | NilLiteral end_column_number&lt;/a&gt; , &lt;a href=&quot;astnode#end_line_number:StringLiteral%7CNilLiteral-instance-method&quot;&gt;end_line_number: StringLiteral | NilLiteral end_line_number&lt;/a&gt; , &lt;a href=&quot;astnode#filename:StringLiteral%7CNilLiteral-instance-method&quot;&gt;имя файла: StringLiteral | NilLiteral имя файла&lt;/a&gt; , &lt;a href=&quot;astnode#id:MacroId-instance-method&quot;&gt;id: идентификатор &lt;/a&gt;&lt;a href=&quot;astnode#line_number:StringLiteral%7CNilLiteral-instance-method&quot;&gt;MacroId&lt;/a&gt; , номер строки: StringLiteral | NilLiteral line_number , &lt;a href=&quot;astnode#raise(message):NoReturn-instance-method&quot;&gt;повышение (сообщение): NoReturn повышение&lt;/a&gt; , &lt;a href=&quot;astnode#stringify:StringLiteral-instance-method&quot;&gt;stringify: StringLiteral stringify&lt;/a&gt; , &lt;a href=&quot;astnode#symbolize:SymbolLiteral-instance-method&quot;&gt;symbolize: SymbolLiteral symbolize&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f085101e99bff64ea0b911d80f4224bfb8df49ad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;base#base64digest(data):String-class-method&quot;&gt; base64digest(data) : String&lt;br/&gt;base64digest(&amp;amp;block) : String base64digest&lt;/a&gt;, &lt;a href=&quot;base#digest(data)-class-method&quot;&gt; digest(data)&lt;br/&gt;digest(&amp;amp;block) digest&lt;/a&gt;, &lt;a href=&quot;base#hexdigest(data):String-class-method&quot;&gt; hexdigest(data) : String&lt;br/&gt;hexdigest(&amp;amp;block) : String hexdigest&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;base#base64digest(data):String-class-method&quot;&gt;base64digest (данные): Строка &lt;br/&gt;base64digest (&amp;amp; блок): Строка base64digest&lt;/a&gt; , &lt;a href=&quot;base#digest(data)-class-method&quot;&gt;дайджест (данные) &lt;br/&gt;дайджест (&amp;amp; блок) переварить&lt;/a&gt; , &lt;a href=&quot;base#hexdigest(data):String-class-method&quot;&gt;hexdigest (данные): Строка &lt;br/&gt;hexdigest (&amp;amp; блок): String hexdigest&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7d1cf3ae61846c3c8f80656e0932717a61a4e448" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;binaryop#left:ASTNode-instance-method&quot;&gt; left : ASTNode left&lt;/a&gt;, &lt;a href=&quot;binaryop#right:ASTNode-instance-method&quot;&gt; right : ASTNode right&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;binaryop#left:ASTNode-instance-method&quot;&gt;слева: ASTNode слева&lt;/a&gt; , &lt;a href=&quot;binaryop#right:ASTNode-instance-method&quot;&gt;справа: ASTNode справа&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e60e84844774339b2de434c4cf11e535f349cea8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;buffered#buffer_size-instance-method&quot;&gt; buffer_size buffer_size&lt;/a&gt;, &lt;a href=&quot;buffered#buffer_size=(value)-instance-method&quot;&gt; buffer_size=(value) buffer_size=&lt;/a&gt;, &lt;a href=&quot;buffered#close:Nil-instance-method&quot;&gt; close : Nil close&lt;/a&gt;, &lt;a href=&quot;buffered#flush-instance-method&quot;&gt; flush flush&lt;/a&gt;, &lt;a href=&quot;buffered#peek:Bytes?-instance-method&quot;&gt; peek : Bytes? peek&lt;/a&gt;, &lt;a href=&quot;buffered#read(slice:Bytes)-instance-method&quot;&gt; read(slice : Bytes) read&lt;/a&gt;, &lt;a href=&quot;buffered#read_buffering=(read_buffering)-instance-method&quot;&gt; read_buffering=(read_buffering) read_buffering=&lt;/a&gt;, &lt;a href=&quot;buffered#read_buffering?-instance-method&quot;&gt; read_buffering? read_buffering?&lt;/a&gt;, &lt;a href=&quot;buffered#rewind-instance-method&quot;&gt; rewind rewind&lt;/a&gt;, &lt;a href=&quot;buffered#sync=(sync)-instance-method&quot;&gt; sync=(sync) sync=&lt;/a&gt;, &lt;a href=&quot;buffered#sync?-instance-method&quot;&gt; sync? sync?&lt;/a&gt;, &lt;a href=&quot;buffered#unbuffered_close-instance-method&quot;&gt; unbuffered_close unbuffered_close&lt;/a&gt;, &lt;a href=&quot;buffered#unbuffered_flush-instance-method&quot;&gt; unbuffered_flush unbuffered_flush&lt;/a&gt;, &lt;a href=&quot;buffered#unbuffered_read(slice:Bytes)-instance-method&quot;&gt; unbuffered_read(slice : Bytes) unbuffered_read&lt;/a&gt;, &lt;a href=&quot;buffered#unbuffered_rewind-instance-method&quot;&gt; unbuffered_rewind unbuffered_rewind&lt;/a&gt;, &lt;a href=&quot;buffered#unbuffered_write(slice:Bytes)-instance-method&quot;&gt; unbuffered_write(slice : Bytes) unbuffered_write&lt;/a&gt;, &lt;a href=&quot;buffered#write(slice:Bytes):Nil-instance-method&quot;&gt; write(slice : Bytes) : Nil write&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;buffered#buffer_size-instance-method&quot;&gt;buffer_size buffer_size&lt;/a&gt; , &lt;a href=&quot;buffered#buffer_size=(value)-instance-method&quot;&gt;buffer_size = (значение) buffer_size =&lt;/a&gt; , &lt;a href=&quot;buffered#close:Nil-instance-method&quot;&gt;close: ноль закрыть&lt;/a&gt; , &lt;a href=&quot;buffered#flush-instance-method&quot;&gt;очистить флэш&lt;/a&gt; , &lt;a href=&quot;buffered#peek:Bytes?-instance-method&quot;&gt;посмотреть: байты? заглянуть&lt;/a&gt; , &lt;a href=&quot;buffered#read(slice:Bytes)-instance-method&quot;&gt;прочитать (фрагмент: байты), прочитать&lt;/a&gt; , &lt;a href=&quot;buffered#read_buffering=(read_buffering)-instance-method&quot;&gt;read_buffering = (read_buffering) read_buffering =&lt;/a&gt; , &lt;a href=&quot;buffered#read_buffering?-instance-method&quot;&gt;read_buffering? read_buffering?&lt;/a&gt; , &lt;a href=&quot;buffered#rewind-instance-method&quot;&gt;перемотка перемотка&lt;/a&gt; , &lt;a href=&quot;buffered#sync=(sync)-instance-method&quot;&gt;синхронизация = (синхронизация) синхронизация =&lt;/a&gt; , &lt;a href=&quot;buffered#sync?-instance-method&quot;&gt;синхронизация? синхронизация?&lt;/a&gt; , &lt;a href=&quot;buffered#unbuffered_close-instance-method&quot;&gt;unbuffered_close unbuffered_close&lt;/a&gt; , &lt;a href=&quot;buffered#unbuffered_flush-instance-method&quot;&gt;unbuffered_flush unbuffered_flush&lt;/a&gt; , &lt;a href=&quot;buffered#unbuffered_read(slice:Bytes)-instance-method&quot;&gt;unbuffered_read (фрагмент: байты) unbuffered_read&lt;/a&gt; , &lt;a href=&quot;buffered#unbuffered_rewind-instance-method&quot;&gt;unbuffered_rewind unbuffered_rewind&lt;/a&gt; ,&lt;a href=&quot;buffered#unbuffered_write(slice:Bytes)-instance-method&quot;&gt;unbuffered_write (фрагмент: байты) unbuffered_write&lt;/a&gt; , &lt;a href=&quot;buffered#write(slice:Bytes):Nil-instance-method&quot;&gt;запись (фрагмент: байты): нулевая запись&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9ea665682e2787200c18db25a69d08dbd2bbc1e3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;array&quot;&gt;Array(T)&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;array&quot;&gt;Array(T)&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="568acb6969f8911af7cbfe9fbc234f220b404c98" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;bigdecimal&quot;&gt;BigDecimal&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;bigdecimal&quot;&gt;BigDecimal&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="18c88be2439a1f35aa587e08c248dd9239d442bf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;bigfloat&quot;&gt;BigFloat&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;bigfloat&quot;&gt;BigFloat&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="6328975d6a362b5f5bdd7d4d0a0e5579666f8224" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;bigint&quot;&gt;BigInt&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;bigint&quot;&gt;BigInt&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="8d1464f15d9729ff33e8ecb9028e0f55e28ec17f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;bigrational&quot;&gt;BigRational&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;bigrational&quot;&gt;BigRational&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="fd82196e95bca93f65360581350ea2c80c0612f1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;char&quot;&gt;Char&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;char&quot;&gt;Char&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="f9aeb5add2ced0e3076c2b56d80beaa17538894b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;enum&quot;&gt;Enum&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;enum&quot;&gt;Enum&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="99c9b2fcb2f126020d97dd6dd56f506b8077f202" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;float&quot;&gt;Float&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;float&quot;&gt;Float&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="8359a39b00cdbf91dd935dab96b9143c8ae30635" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="7329845b066eb01b37a0c706f88dedb1e5bcb977" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;int128&quot;&gt;Int128&lt;/a&gt; | &lt;a href=&quot;int16&quot;&gt;Int16&lt;/a&gt; | &lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt; | &lt;a href=&quot;int64&quot;&gt;Int64&lt;/a&gt; | &lt;a href=&quot;int8&quot;&gt;Int8&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;comparable&quot;&gt;Сравнимый&lt;/a&gt; ( &lt;a href=&quot;int128&quot;&gt;Int128&lt;/a&gt; | &lt;a href=&quot;int16&quot;&gt;Int16&lt;/a&gt; | &lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt; | &lt;a href=&quot;int64&quot;&gt;Int64&lt;/a&gt; | &lt;a href=&quot;int8&quot;&gt;Int8&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="e8430f6253e28c762fad4f3079e31b5e96c72606" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;number&quot;&gt;Number&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;number&quot;&gt;Number&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="d5ade85ea938ad5d9f4239612ee86e8c99d81d0f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;path&quot;&gt;Path&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;path&quot;&gt;Path&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="155888b7579c44bcba4061474e9eef365e573e4e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;pointer&quot;&gt;Pointer(T)&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;pointer&quot;&gt;Pointer(T)&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="4f457ed9490b55fd655068ef5c7b457754fa7291" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;semanticversion&quot;&gt;SemanticVersion&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;semanticversion&quot;&gt;SemanticVersion&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="0a5f16a1fa9770be519bae88bd5287628ae4229c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;slice&quot;&gt;Slice(T)&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;slice&quot;&gt;Slice(T)&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="9471f2d562375ecea7b6f0660ff1e39c30b21aa6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="8e9ba5ea19bf545c4678182f4eabffa35114c94c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;symbol&quot;&gt;Symbol&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;symbol&quot;&gt;Symbol&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="178d27e61c960fe72d1bc84ef1bd09faee20e297" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="661cee36b2d243d464ab438b0640a6bfe9193324" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;tuple&quot;&gt;Tuple(*T)&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;tuple&quot;&gt;Tuple(*T)&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="49c4001eaa296cd40f0ce0e9119ace43e24d7b9a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;uint128&quot;&gt;UInt128&lt;/a&gt; | &lt;a href=&quot;uint16&quot;&gt;UInt16&lt;/a&gt; | &lt;a href=&quot;uint32&quot;&gt;UInt32&lt;/a&gt; | &lt;a href=&quot;uint64&quot;&gt;UInt64&lt;/a&gt; | &lt;a href=&quot;uint8&quot;&gt;UInt8&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;comparable&quot;&gt;Сопоставимые&lt;/a&gt; ( &lt;a href=&quot;uint128&quot;&gt;UInt128&lt;/a&gt; | &lt;a href=&quot;uint16&quot;&gt;UInt16&lt;/a&gt; | &lt;a href=&quot;uint32&quot;&gt;UInt32&lt;/a&gt; | &lt;a href=&quot;uint64&quot;&gt;UInt64&lt;/a&gt; | &lt;a href=&quot;uint8&quot;&gt;Uint8&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="654348efcb111acea774a16f25780677dc40b912" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;comparable#%3C(other:T%7CT%7CT%7CT%7CT)-instance-method&quot;&gt;  &amp;lt;&lt;/a&gt;, &lt;a href=&quot;comparable#%3C=(other:T%7CT%7CT%7CT%7CT)-instance-method&quot;&gt; &amp;lt;=(other : T | T | T | T | T) &amp;lt;=&lt;/a&gt;, &lt;a href=&quot;comparable#(other:T%7CT%7CT%7CT%7CT)-instance-method&quot;&gt; &amp;lt;=&amp;gt;(other : T | T | T | T | T) &amp;lt;=&amp;gt;&lt;/a&gt;, &lt;a href=&quot;comparable#==(other:T%7CT%7CT%7CT%7CT)-instance-method&quot;&gt; ==(other : T | T | T | T | T) ==&lt;/a&gt;, &lt;a href=&quot;comparable#%3E(other:T%7CT%7CT%7CT%7CT)-instance-method&quot;&gt; &amp;gt;(other : T | T | T | T | T) &amp;gt;&lt;/a&gt;, &lt;a href=&quot;comparable#%3E=(other:T%7CT%7CT%7CT%7CT)-instance-method&quot;&gt; &amp;gt;=(other : T | T | T | T | T) &amp;gt;=&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;comparable#%3C(other:T%7CT%7CT%7CT%7CT)-instance-method&quot;&gt; &amp;lt;&lt;/a&gt; , &lt;a href=&quot;comparable#%3C=(other:T%7CT%7CT%7CT%7CT)-instance-method&quot;&gt;&amp;lt;= (другое: T | T | T | T | T) &amp;lt;=&lt;/a&gt; , &lt;a href=&quot;comparable#(other:T%7CT%7CT%7CT%7CT)-instance-method&quot;&gt;&amp;lt;=&amp;gt; (другое: T | T | T | T | T) &amp;lt;=&amp;gt;&lt;/a&gt; , &lt;a href=&quot;comparable#==(other:T%7CT%7CT%7CT%7CT)-instance-method&quot;&gt;== (другое: T | T | T | T | T) ==&lt;/a&gt; , &lt;a href=&quot;comparable#%3E(other:T%7CT%7CT%7CT%7CT)-instance-method&quot;&gt;&amp;gt; (другое: T | T | T | T | T)&amp;gt;&lt;/a&gt; , &lt;a href=&quot;comparable#%3E=(other:T%7CT%7CT%7CT%7CT)-instance-method&quot;&gt;&amp;gt; = (другое: T | T | T | T | T)&amp;gt; =&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8db436b50cccc1bb863accd717e886ba30de9a8d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;comparable#%3C(other:T(T))-instance-method&quot;&gt;  &amp;lt;&lt;/a&gt;, &lt;a href=&quot;comparable#%3C=(other:T(T))-instance-method&quot;&gt; &amp;lt;=(other : T(T)) &amp;lt;=&lt;/a&gt;, &lt;a href=&quot;comparable#(other:T(T))-instance-method&quot;&gt; &amp;lt;=&amp;gt;(other : T(T)) &amp;lt;=&amp;gt;&lt;/a&gt;, &lt;a href=&quot;comparable#==(other:T(T))-instance-method&quot;&gt; ==(other : T(T)) ==&lt;/a&gt;, &lt;a href=&quot;comparable#%3E(other:T(T))-instance-method&quot;&gt; &amp;gt;(other : T(T)) &amp;gt;&lt;/a&gt;, &lt;a href=&quot;comparable#%3E=(other:T(T))-instance-method&quot;&gt; &amp;gt;=(other : T(T)) &amp;gt;=&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;comparable#%3C(other:T(T))-instance-method&quot;&gt; &amp;lt;&lt;/a&gt; , &lt;a href=&quot;comparable#%3C=(other:T(T))-instance-method&quot;&gt;&amp;lt;= (другое: T (T)) &amp;lt;=&lt;/a&gt; , &lt;a href=&quot;comparable#(other:T(T))-instance-method&quot;&gt;&amp;lt;=&amp;gt; (другое: T (T)) &amp;lt;=&amp;gt;&lt;/a&gt; , &lt;a href=&quot;comparable#==(other:T(T))-instance-method&quot;&gt;== (другое: T (T)) ==&lt;/a&gt; , &lt;a href=&quot;comparable#%3E(other:T(T))-instance-method&quot;&gt;&amp;gt; (другое: T (T) ))&amp;gt;&lt;/a&gt; , &lt;a href=&quot;comparable#%3E=(other:T(T))-instance-method&quot;&gt;&amp;gt; = (другое: T (T))&amp;gt; =&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="51cdf81a98708fabf83211353e6edc73a3b29552" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;comparable#%3C(other:T)-instance-method&quot;&gt;  &amp;lt;&lt;/a&gt;, &lt;a href=&quot;comparable#%3C=(other:T)-instance-method&quot;&gt; &amp;lt;=(other : T) &amp;lt;=&lt;/a&gt;, &lt;a href=&quot;comparable#(other:T)-instance-method&quot;&gt; &amp;lt;=&amp;gt;(other : T) &amp;lt;=&amp;gt;&lt;/a&gt;, &lt;a href=&quot;comparable#==(other:T)-instance-method&quot;&gt; ==(other : T) ==&lt;/a&gt;, &lt;a href=&quot;comparable#%3E(other:T)-instance-method&quot;&gt; &amp;gt;(other : T) &amp;gt;&lt;/a&gt;, &lt;a href=&quot;comparable#%3E=(other:T)-instance-method&quot;&gt; &amp;gt;=(other : T) &amp;gt;=&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;comparable#%3C(other:T)-instance-method&quot;&gt; &amp;lt;&lt;/a&gt; , &lt;a href=&quot;comparable#%3C=(other:T)-instance-method&quot;&gt;&amp;lt;= (другое: T) &amp;lt;=&lt;/a&gt; , &lt;a href=&quot;comparable#(other:T)-instance-method&quot;&gt;&amp;lt;=&amp;gt; (другое: T) &amp;lt;=&amp;gt;&lt;/a&gt; , &lt;a href=&quot;comparable#==(other:T)-instance-method&quot;&gt;== (другое: T) ==&lt;/a&gt; , &lt;a href=&quot;comparable#%3E(other:T)-instance-method&quot;&gt;&amp;gt; (другое: T)&amp;gt;&lt;/a&gt; , &lt;a href=&quot;comparable#%3E=(other:T)-instance-method&quot;&gt;&amp;gt; = (другое: T)&amp;gt; знак равно&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="72d7fb7730b57846bf38259807fb602806fe20da" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;crystal/system/file#chmod(path,mode)-class-method&quot;&gt; chmod(path, mode) chmod&lt;/a&gt;, &lt;a href=&quot;crystal/system/file#chown(path,uid:Int,gid:Int,follow_symlinks)-class-method&quot;&gt; chown(path, uid : Int, gid : Int, follow_symlinks) chown&lt;/a&gt;, &lt;a href=&quot;crystal/system/file#delete(path)-class-method&quot;&gt; delete(path) delete&lt;/a&gt;, &lt;a href=&quot;crystal/system/file#executable?(path):Bool-class-method&quot;&gt; executable?(path) : Bool executable?&lt;/a&gt;, &lt;a href=&quot;crystal/system/file#exists?(path)-class-method&quot;&gt; exists?(path) exists?&lt;/a&gt;, &lt;a href=&quot;crystal/system/file#info?(path:String,follow_symlinks:Bool):::File::Info?-class-method&quot;&gt; info?(path : String, follow_symlinks : Bool) : ::File::Info? info?&lt;/a&gt;, &lt;a href=&quot;crystal/system/file#link(old_path,new_path)-class-method&quot;&gt; link(old_path, new_path) link&lt;/a&gt;, &lt;a href=&quot;crystal/system/file#mktemp(prefix,suffix,dir):Tuple(LibC::Int,String)-class-method&quot;&gt; mktemp(prefix, suffix, dir) : Tuple(LibC::Int, String) mktemp&lt;/a&gt;, &lt;a href=&quot;crystal/system/file#open(filename,mode,perm)-class-method&quot;&gt; open(filename, mode, perm) open&lt;/a&gt;, &lt;a href=&quot;crystal/system/file#readable?(path):Bool-class-method&quot;&gt; readable?(path) : Bool readable?&lt;/a&gt;, &lt;a href=&quot;crystal/system/file#readlink(path):String-class-method&quot;&gt; readlink(path) : String readlink&lt;/a&gt;, &lt;a href=&quot;crystal/system/file#real_path(path)-class-method&quot;&gt; real_path(path) real_path&lt;/a&gt;, &lt;a href=&quot;crystal/system/file#rename(old_filename,new_filename)-class-method&quot;&gt; rename(old_filename, new_filename) rename&lt;/a&gt;, &lt;a href=&quot;crystal/system/file#symlink(old_path,new_path)-class-method&quot;&gt; symlink(old_path, new_path) symlink&lt;/a&gt;, &lt;a href=&quot;crystal/system/file#utime(atime:::Time,mtime:::Time,filename:String):Nil-class-method&quot;&gt; utime(atime : ::Time, mtime : ::Time, filename : String) : Nil utime&lt;/a&gt;, &lt;a href=&quot;crystal/system/file#writable?(path):Bool-class-method&quot;&gt; writable?(path) : Bool writable?&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;crystal/system/file#chmod(path,mode)-class-method&quot;&gt;chmod (путь, режим) chmod&lt;/a&gt; , &lt;a href=&quot;crystal/system/file#chown(path,uid:Int,gid:Int,follow_symlinks)-class-method&quot;&gt;chown (путь, uid: Int, gid: Int, follow_symlinks) chown&lt;/a&gt; , &lt;a href=&quot;crystal/system/file#delete(path)-class-method&quot;&gt;delete (путь) delete&lt;/a&gt; , &lt;a href=&quot;crystal/system/file#executable?(path):Bool-class-method&quot;&gt;исполняемый файл (путь): Bool исполняемый файл?&lt;/a&gt; , &lt;a href=&quot;crystal/system/file#exists?(path)-class-method&quot;&gt;существует? (путь) существует?&lt;/a&gt; , &lt;a href=&quot;crystal/system/file#info?(path:String,follow_symlinks:Bool):::File::Info?-class-method&quot;&gt;информация? (путь: String, follow_symlinks: Bool): :: File :: Info? Информация?&lt;/a&gt; , &lt;a href=&quot;crystal/system/file#link(old_path,new_path)-class-method&quot;&gt;ссылка (old_path, new_path) ссылка&lt;/a&gt; , &lt;a href=&quot;crystal/system/file#mktemp(prefix,suffix,dir):Tuple(LibC::Int,String)-class-method&quot;&gt;mktemp (префикс, суффикс, dir): Tuple (LibC :: Int, String) mktemp&lt;/a&gt; , &lt;a href=&quot;crystal/system/file#open(filename,mode,perm)-class-method&quot;&gt;open (имя файла, режим, perm) открыт&lt;/a&gt; , доступен для &lt;a href=&quot;crystal/system/file#readable?(path):Bool-class-method&quot;&gt;чтения? (путь): Bool readable?&lt;/a&gt; , &lt;a href=&quot;crystal/system/file#readlink(path):String-class-method&quot;&gt;readlink (путь): строка readlink&lt;/a&gt; , &lt;a href=&quot;crystal/system/file#real_path(path)-class-method&quot;&gt;real_path (путь) real_path&lt;/a&gt; , &lt;a href=&quot;crystal/system/file#rename(old_filename,new_filename)-class-method&quot;&gt;переименование (old_filename, new_filename) переименование&lt;/a&gt; ,&lt;a href=&quot;crystal/system/file#symlink(old_path,new_path)-class-method&quot;&gt;symlink (old_path, new_path) symlink&lt;/a&gt; , &lt;a href=&quot;crystal/system/file#utime(atime:::Time,mtime:::Time,filename:String):Nil-class-method&quot;&gt;utime (atime: :: Time, mtime: :: Time, filename: String): ноль utime&lt;/a&gt; , &lt;a href=&quot;crystal/system/file#writable?(path):Bool-class-method&quot;&gt;доступный для записи? (путь): Bool writeable?&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fb80c3141c05a8313ffb80375843f77fd433a326" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;crystal/system/filedescriptor#fcntl(fd,cmd,arg=0)-class-method&quot;&gt; fcntl(fd, cmd, arg = 0) fcntl&lt;/a&gt;, &lt;a href=&quot;crystal/system/filedescriptor#pipe(read_blocking,write_blocking)-class-method&quot;&gt; pipe(read_blocking, write_blocking) pipe&lt;/a&gt;, &lt;a href=&quot;crystal/system/filedescriptor#pread(fd,buffer,offset)-class-method&quot;&gt; pread(fd, buffer, offset) pread&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;crystal/system/filedescriptor#fcntl(fd,cmd,arg=0)-class-method&quot;&gt;fcntl (fd, cmd, arg = 0) fcntl&lt;/a&gt; , &lt;a href=&quot;crystal/system/filedescriptor#pipe(read_blocking,write_blocking)-class-method&quot;&gt;труба (read_blocking, write_blocking) труба&lt;/a&gt; , &lt;a href=&quot;crystal/system/filedescriptor#pread(fd,buffer,offset)-class-method&quot;&gt;pread (fd, буфер, смещение) pread&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9f6cfa7222d1b46ad19d5b58c673867f4f353e08" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;digestbase#%3C%3C(data)-instance-method&quot;&gt; &amp;lt; &amp;lt;&amp;lt;&lt;/a&gt;, &lt;a href=&quot;digestbase#base64digest-instance-method&quot;&gt; base64digest base64digest&lt;/a&gt;, &lt;a href=&quot;digestbase#digest-instance-method&quot;&gt; digest digest&lt;/a&gt;, &lt;a href=&quot;digestbase#file(file_name)-instance-method&quot;&gt; file(file_name) file&lt;/a&gt;, &lt;a href=&quot;digestbase#hexdigest-instance-method&quot;&gt; hexdigest hexdigest&lt;/a&gt;, &lt;a href=&quot;digestbase#to_s(io:IO):Nil-instance-method&quot;&gt; to_s(io : IO) : Nil to_s&lt;/a&gt;, &lt;a href=&quot;digestbase#update(io:IO)-instance-method&quot;&gt; update(io : IO) update&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;digestbase#%3C%3C(data)-instance-method&quot;&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/a&gt; , &lt;a href=&quot;digestbase#base64digest-instance-method&quot;&gt;base64digest base64digest&lt;/a&gt; , &lt;a href=&quot;digestbase#digest-instance-method&quot;&gt;дайджест дайджеста&lt;/a&gt; , &lt;a href=&quot;digestbase#file(file_name)-instance-method&quot;&gt;файл (имя файла)&lt;/a&gt; , &lt;a href=&quot;digestbase#hexdigest-instance-method&quot;&gt;hexdigest hexdigest&lt;/a&gt; , &lt;a href=&quot;digestbase#to_s(io:IO):Nil-instance-method&quot;&gt;to_s (io: IO): ноль to_s&lt;/a&gt; , &lt;a href=&quot;digestbase#update(io:IO)-instance-method&quot;&gt;обновление (io: IO) обновление&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e0077253e22fd8fb74bb5d01e70f255839de255c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;enum#&amp;amp;(other:self)-instance-method&quot;&gt; &amp;amp;(other : self) &amp;amp;&lt;/a&gt;, &lt;a href=&quot;enum#+(other:Int)-instance-method&quot;&gt; +(other : Int) +&lt;/a&gt;, &lt;a href=&quot;enum#-(other:Int)-instance-method&quot;&gt; -(other : Int) -&lt;/a&gt;, &lt;a href=&quot;enum#(other:self)-instance-method&quot;&gt; &amp;lt;=&amp;gt;(other : self) &amp;lt;=&amp;gt;&lt;/a&gt;, &lt;a href=&quot;enum#==(other:self)-instance-method&quot;&gt; ==(other : self) ==&lt;/a&gt;, &lt;a href=&quot;enum#%5E(other:self)-instance-method&quot;&gt; ^(other : self) ^&lt;/a&gt;, &lt;a href=&quot;enum#clone-instance-method&quot;&gt; clone clone&lt;/a&gt;, &lt;a href=&quot;enum#each(&amp;amp;block)-instance-method&quot;&gt; each(&amp;amp;block) each&lt;/a&gt;, &lt;a href=&quot;enum#hash(hasher)-instance-method&quot;&gt; hash(hasher) hash&lt;/a&gt;, &lt;a href=&quot;enum#includes?(other:self)-instance-method&quot;&gt; includes?(other : self) includes?&lt;/a&gt;, &lt;a href=&quot;enum#to_f32:Float32-instance-method&quot;&gt; to_f32 : Float32 to_f32&lt;/a&gt;, &lt;a href=&quot;enum#to_f32!:Float32-instance-method&quot;&gt; to_f32! : Float32 to_f32!&lt;/a&gt;, &lt;a href=&quot;enum#to_f64:Float64-instance-method&quot;&gt; to_f64 : Float64 to_f64&lt;/a&gt;, &lt;a href=&quot;enum#to_f64!:Float64-instance-method&quot;&gt; to_f64! : Float64 to_f64!&lt;/a&gt;, &lt;a href=&quot;enum#to_i:Int32-instance-method&quot;&gt; to_i : Int32 to_i&lt;/a&gt;, &lt;a href=&quot;enum#to_i16:Int16-instance-method&quot;&gt; to_i16 : Int16 to_i16&lt;/a&gt;, &lt;a href=&quot;enum#to_i16!:Int16-instance-method&quot;&gt; to_i16! : Int16 to_i16!&lt;/a&gt;, &lt;a href=&quot;enum#to_i32:Int32-instance-method&quot;&gt; to_i32 : Int32 to_i32&lt;/a&gt;, &lt;a href=&quot;enum#to_i32!:Int32-instance-method&quot;&gt; to_i32! : Int32 to_i32!&lt;/a&gt;, &lt;a href=&quot;enum#to_i64:Int64-instance-method&quot;&gt; to_i64 : Int64 to_i64&lt;/a&gt;, &lt;a href=&quot;enum#to_i64!:Int64-instance-method&quot;&gt; to_i64! : Int64 to_i64!&lt;/a&gt;, &lt;a href=&quot;enum#to_i8:Int8-instance-method&quot;&gt; to_i8 : Int8 to_i8&lt;/a&gt;, &lt;a href=&quot;enum#to_i8!:Int8-instance-method&quot;&gt; to_i8! : Int8 to_i8!&lt;/a&gt;, &lt;a href=&quot;enum#to_json(json:JSON::Builder)-instance-method&quot;&gt; to_json(json : JSON::Builder) to_json&lt;/a&gt;, &lt;a href=&quot;enum#to_s(io:IO):Nil-instance-method&quot;&gt; to_s(io : IO) : Nil&lt;br/&gt;to_s : String to_s&lt;/a&gt;, &lt;a href=&quot;enum#to_u16:UInt16-instance-method&quot;&gt; to_u16 : UInt16 to_u16&lt;/a&gt;, &lt;a href=&quot;enum#to_u16!:UInt16-instance-method&quot;&gt; to_u16! : UInt16 to_u16!&lt;/a&gt;, &lt;a href=&quot;enum#to_u32:UInt32-instance-method&quot;&gt; to_u32 : UInt32 to_u32&lt;/a&gt;, &lt;a href=&quot;enum#to_u32!:UInt32-instance-method&quot;&gt; to_u32! : UInt32 to_u32!&lt;/a&gt;, &lt;a href=&quot;enum#to_u64:UInt64-instance-method&quot;&gt; to_u64 : UInt64 to_u64&lt;/a&gt;, &lt;a href=&quot;enum#to_u64!:UInt64-instance-method&quot;&gt; to_u64! : UInt64 to_u64!&lt;/a&gt;, &lt;a href=&quot;enum#to_u8:UInt8-instance-method&quot;&gt; to_u8 : UInt8 to_u8&lt;/a&gt;, &lt;a href=&quot;enum#to_u8!:UInt8-instance-method&quot;&gt; to_u8! : UInt8 to_u8!&lt;/a&gt;, &lt;a href=&quot;enum#to_yaml(yaml:YAML::Nodes::Builder)-instance-method&quot;&gt; to_yaml(yaml : YAML::Nodes::Builder) to_yaml&lt;/a&gt;, &lt;a href=&quot;enum#%7C(other:self)-instance-method&quot;&gt; |(other : self) |&lt;/a&gt;, &lt;a href=&quot;enum#~-instance-method&quot;&gt; ~ ~&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;enum#&amp;amp;(other:self)-instance-method&quot;&gt;&amp;amp; (другое: self) &amp;amp;&lt;/a&gt; , &lt;a href=&quot;enum#+(other:Int)-instance-method&quot;&gt;+ (другое: Int) +&lt;/a&gt; , &lt;a href=&quot;enum#-(other:Int)-instance-method&quot;&gt;- (другое: Int) -&lt;/a&gt; , &lt;a href=&quot;enum#(other:self)-instance-method&quot;&gt;&amp;lt;=&amp;gt; (другое: self) &amp;lt;=&amp;gt;&lt;/a&gt; , &lt;a href=&quot;enum#==(other:self)-instance-method&quot;&gt;== (другое: self) ==&lt;/a&gt; , &lt;a href=&quot;enum#%5E(other:self)-instance-method&quot;&gt;^ (other: self) ^&lt;/a&gt; , &lt;a href=&quot;enum#clone-instance-method&quot;&gt;clone clone&lt;/a&gt; , &lt;a href=&quot;enum#each(&amp;amp;block)-instance-method&quot;&gt;каждый (&amp;amp; block) каждый&lt;/a&gt; , &lt;a href=&quot;enum#hash(hasher)-instance-method&quot;&gt;hash (hasher) hash&lt;/a&gt; , &lt;a href=&quot;enum#includes?(other:self)-instance-method&quot;&gt;включает? (other: self) включает?&lt;/a&gt; , &lt;a href=&quot;enum#to_f32:Float32-instance-method&quot;&gt;to_f32: Float32 to_f32&lt;/a&gt; , &lt;a href=&quot;enum#to_f32!:Float32-instance-method&quot;&gt;to_f32! : Float32 to_f32!&lt;/a&gt; , &lt;a href=&quot;enum#to_f64:Float64-instance-method&quot;&gt;to_f64: Float64 to_f64&lt;/a&gt; , &lt;a href=&quot;enum#to_f64!:Float64-instance-method&quot;&gt;to_f64! : Float64 to_f64!&lt;/a&gt; , &lt;a href=&quot;enum#to_i:Int32-instance-method&quot;&gt;to_i: Int32 to_i&lt;/a&gt; , &lt;a href=&quot;enum#to_i16:Int16-instance-method&quot;&gt;to_i16: Int16 to_i16&lt;/a&gt; , &lt;a href=&quot;enum#to_i16!:Int16-instance-method&quot;&gt;to_i16! : Int16 to_i16!&lt;/a&gt; ,&lt;a href=&quot;enum#to_i32:Int32-instance-method&quot;&gt;to_i32: Int32 to_i32&lt;/a&gt; , &lt;a href=&quot;enum#to_i32!:Int32-instance-method&quot;&gt;to_i32! : Int32 to_i32!&lt;/a&gt; , &lt;a href=&quot;enum#to_i64:Int64-instance-method&quot;&gt;to_i64: Int64 to_i64&lt;/a&gt; , &lt;a href=&quot;enum#to_i64!:Int64-instance-method&quot;&gt;to_i64! : Int64 to_i64!&lt;/a&gt; , &lt;a href=&quot;enum#to_i8:Int8-instance-method&quot;&gt;to_i8: Int8 to_i8&lt;/a&gt; , &lt;a href=&quot;enum#to_i8!:Int8-instance-method&quot;&gt;to_i8! : Int8 to_i8!&lt;/a&gt; , &lt;a href=&quot;enum#to_json(json:JSON::Builder)-instance-method&quot;&gt;to_json (json: JSON :: Builder) to_json&lt;/a&gt; , &lt;a href=&quot;enum#to_s(io:IO):Nil-instance-method&quot;&gt;to_s (io: IO): ноль &lt;br/&gt;to_s: строка to_s&lt;/a&gt; , &lt;a href=&quot;enum#to_u16:UInt16-instance-method&quot;&gt;to_u16: UInt16 to_u16&lt;/a&gt; , &lt;a href=&quot;enum#to_u16!:UInt16-instance-method&quot;&gt;to_u16! : UInt16 to_u16!&lt;/a&gt; , &lt;a href=&quot;enum#to_u32:UInt32-instance-method&quot;&gt;to_u32: UInt32 to_u32&lt;/a&gt; , &lt;a href=&quot;enum#to_u32!:UInt32-instance-method&quot;&gt;to_u32! : UInt32 to_u32!&lt;/a&gt; , &lt;a href=&quot;enum#to_u64:UInt64-instance-method&quot;&gt;to_u64: UInt64 to_u64&lt;/a&gt; , &lt;a href=&quot;enum#to_u64!:UInt64-instance-method&quot;&gt;to_u64! : UInt64 to_u64!&lt;/a&gt; , &lt;a href=&quot;enum#to_u8:UInt8-instance-method&quot;&gt;to_u8: UInt8 to_u8&lt;/a&gt; , &lt;a href=&quot;enum#to_u8!:UInt8-instance-method&quot;&gt;to_u8! : UInt8 to_u8!&lt;/a&gt; ,&lt;a href=&quot;enum#to_yaml(yaml:YAML::Nodes::Builder)-instance-method&quot;&gt;to_yaml (yaml: YAML :: Nodes :: Builder) to_yaml&lt;/a&gt; , &lt;a href=&quot;enum#%7C(other:self)-instance-method&quot;&gt;| (другое: self) | &lt;/a&gt;, &lt;a href=&quot;enum#~-instance-method&quot;&gt;~ ~&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="60077153c9a74388bc6364130cc991de8415ec1e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;enum#each(&amp;amp;block)-class-method&quot;&gt; each(&amp;amp;block) each&lt;/a&gt;, &lt;a href=&quot;enum#names:Array(String)-class-method&quot;&gt; names : Array(String) names&lt;/a&gt;, &lt;a href=&quot;enum#values:Array(self)-class-method&quot;&gt; values : Array(self) values&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;enum#each(&amp;amp;block)-class-method&quot;&gt;каждый (&amp;amp; блок) каждый&lt;/a&gt; , &lt;a href=&quot;enum#names:Array(String)-class-method&quot;&gt;имена: имена массивов (строк)&lt;/a&gt; , &lt;a href=&quot;enum#values:Array(self)-class-method&quot;&gt;значения: значения массивов (себя)&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="698c0a8afff27295a693115017c50a989f7f9d8b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;enum#from_value(value:Int):self-class-method&quot;&gt; from_value(value : Int) : self from_value&lt;/a&gt;, &lt;a href=&quot;enum#from_value?(value:Int):self?-class-method&quot;&gt; from_value?(value : Int) : self? from_value?&lt;/a&gt;, &lt;a href=&quot;enum#new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method&quot;&gt; new(ctx : YAML::ParseContext, node : YAML::Nodes::Node)&lt;br/&gt;new(pull : JSON::PullParser) new&lt;/a&gt;, &lt;a href=&quot;enum#parse(string:String):self-class-method&quot;&gt; parse(string : String) : self parse&lt;/a&gt;, &lt;a href=&quot;enum#parse?(string:String):self?-class-method&quot;&gt; parse?(string : String) : self? parse?&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;enum#from_value(value:Int):self-class-method&quot;&gt;from_value (значение: Int): self from_value&lt;/a&gt; , &lt;a href=&quot;enum#from_value?(value:Int):self?-class-method&quot;&gt;from_value? (значение: Int): self? from_value? &lt;/a&gt;, &lt;a href=&quot;enum#new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method&quot;&gt;new (ctx: YAML :: ParseContext, узел: YAML :: Nodes :: Node) &lt;br/&gt;new (pull: JSON :: PullParser) new&lt;/a&gt; , &lt;a href=&quot;enum#parse(string:String):self-class-method&quot;&gt;parse (строка: String): сам анализ&lt;/a&gt; , &lt;a href=&quot;enum#parse?(string:String):self?-class-method&quot;&gt;анализ? (строка: строка): self ? разобрать?&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bcc7d16751f1ec5817997279f7cff4a6c3c0f444" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;enumerable&quot;&gt;Enumerable&lt;/a&gt;(&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;enumerable&quot;&gt;Enumerable&lt;/a&gt;(&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="573e2e08b324f18747d52c44ff0f75ba6c2735b1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;enumerable&quot;&gt;Enumerable&lt;/a&gt;({&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;})</source>
          <target state="translated">&lt;a href=&quot;enumerable&quot;&gt;Enumerable&lt;/a&gt; ({ &lt;a href=&quot;string&quot;&gt;String&lt;/a&gt; , &lt;a href=&quot;string&quot;&gt;String&lt;/a&gt; })</target>
        </trans-unit>
        <trans-unit id="c664b58947ba3709dcc5f4da86bec60c4156bc0b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;enumerable#all?(&amp;amp;block)-instance-method&quot;&gt; all?(&amp;amp;block)&lt;br/&gt;all?(pattern)&lt;br/&gt;all? all?&lt;/a&gt;, &lt;a href=&quot;enumerable#any?(&amp;amp;block)-instance-method&quot;&gt; any?(&amp;amp;block)&lt;br/&gt;any?(pattern)&lt;br/&gt;any? any?&lt;/a&gt;, &lt;a href=&quot;enumerable#chunks(&amp;amp;block:%7BK,V%7D-%3EU)forallU-instance-method&quot;&gt; chunks(&amp;amp;block : {K, V} -&amp;gt; U) forall U chunks&lt;/a&gt;, &lt;a href=&quot;enumerable#compact_map(&amp;amp;block)-instance-method&quot;&gt; compact_map(&amp;amp;block) compact_map&lt;/a&gt;, &lt;a href=&quot;enumerable#count(item)-instance-method&quot;&gt; count(item)&lt;br/&gt;count(&amp;amp;block) count&lt;/a&gt;, &lt;a href=&quot;enumerable#cycle(&amp;amp;block)-instance-method&quot;&gt; cycle(&amp;amp;block)&lt;br/&gt;cycle(n, &amp;amp;block) cycle&lt;/a&gt;, &lt;a href=&quot;enumerable#each(&amp;amp;block:%7BK,V%7D-%3EUNDERSCORE)-instance-method&quot;&gt; each(&amp;amp;block : {K, V} -&amp;gt; UNDERSCORE) each&lt;/a&gt;, &lt;a href=&quot;enumerable#each_cons(count:Int,reuse=false,&amp;amp;block)-instance-method&quot;&gt; each_cons(count : Int, reuse = false, &amp;amp;block) each_cons&lt;/a&gt;, &lt;a href=&quot;enumerable#each_slice(count:Int,reuse=false,&amp;amp;block)-instance-method&quot;&gt; each_slice(count : Int, reuse = false, &amp;amp;block) each_slice&lt;/a&gt;, &lt;a href=&quot;enumerable#each_with_index(offset=0,&amp;amp;block)-instance-method&quot;&gt; each_with_index(offset = 0, &amp;amp;block) each_with_index&lt;/a&gt;, &lt;a href=&quot;enumerable#each_with_object(obj,&amp;amp;block)-instance-method&quot;&gt; each_with_object(obj, &amp;amp;block) each_with_object&lt;/a&gt;, &lt;a href=&quot;enumerable#find(if_none=nil,&amp;amp;block)-instance-method&quot;&gt; find(if_none = nil, &amp;amp;block) find&lt;/a&gt;, &lt;a href=&quot;enumerable#first(count:Int)-instance-method&quot;&gt; first(count : Int)&lt;br/&gt;first first&lt;/a&gt;, &lt;a href=&quot;enumerable#first?-instance-method&quot;&gt; first? first?&lt;/a&gt;, &lt;a href=&quot;enumerable#flat_map(&amp;amp;block:%7BK,V%7D-%3EArray(U)%7CIterator(U)%7CU)forallU-instance-method&quot;&gt; flat_map(&amp;amp;block : {K, V} -&amp;gt; Array(U) | Iterator(U) | U) forall U flat_map&lt;/a&gt;, &lt;a href=&quot;enumerable#grep(pattern)-instance-method&quot;&gt; grep(pattern) grep&lt;/a&gt;, &lt;a href=&quot;enumerable#group_by(&amp;amp;block:%7BK,V%7D-%3EU)forallU-instance-method&quot;&gt; group_by(&amp;amp;block : {K, V} -&amp;gt; U) forall U group_by&lt;/a&gt;, &lt;a href=&quot;enumerable#in_groups_of(size:Int,filled_up_with:U=nil)forallU-instance-method&quot;&gt; in_groups_of(size : Int, filled_up_with : U = nil) forall U&lt;br/&gt;in_groups_of(size : Int, filled_up_with : U = nil, reuse = false, &amp;amp;block) forall U in_groups_of&lt;/a&gt;, &lt;a href=&quot;enumerable#includes?(obj)-instance-method&quot;&gt; includes?(obj) includes?&lt;/a&gt;, &lt;a href=&quot;enumerable#index(&amp;amp;block)-instance-method&quot;&gt; index(&amp;amp;block)&lt;br/&gt;index(obj) index&lt;/a&gt;, &lt;a href=&quot;enumerable#index_by(&amp;amp;block:%7BK,V%7D-%3EU)forallU-instance-method&quot;&gt; index_by(&amp;amp;block : {K, V} -&amp;gt; U) forall U index_by&lt;/a&gt;,  join(separator = &quot;&quot;, &amp;amp;block)</source>
          <target state="translated">&lt;a href=&quot;enumerable#all?(&amp;amp;block)-instance-method&quot;&gt;все? (&amp;amp; блок) &lt;br/&gt;все? (шаблон) &lt;br/&gt;все? все?&lt;/a&gt; , &lt;a href=&quot;enumerable#any?(&amp;amp;block)-instance-method&quot;&gt;любой? (&amp;amp; блок) &lt;br/&gt;любой? (шаблон) &lt;br/&gt;любой? любой?&lt;/a&gt; , &lt;a href=&quot;enumerable#chunks(&amp;amp;block:%7BK,V%7D-%3EU)forallU-instance-method&quot;&gt;чанки (&amp;amp; block: {K, V} -&amp;gt; U) для всех U чанков&lt;/a&gt; , &lt;a href=&quot;enumerable#compact_map(&amp;amp;block)-instance-method&quot;&gt;compact_map (&amp;amp; block) compact_map&lt;/a&gt; , &lt;a href=&quot;enumerable#count(item)-instance-method&quot;&gt;count (item) &lt;br/&gt;count (&amp;amp; block) count&lt;/a&gt; , &lt;a href=&quot;enumerable#cycle(&amp;amp;block)-instance-method&quot;&gt;цикл (&amp;amp; block) &lt;br/&gt;цикл (n, &amp;amp; block) цикл&lt;/a&gt; , &lt;a href=&quot;enumerable#each(&amp;amp;block:%7BK,V%7D-%3EUNDERSCORE)-instance-method&quot;&gt;каждый (&amp;amp; block: {K, V} -&amp;gt; UNDERSCORE) each&lt;/a&gt; , &lt;a href=&quot;enumerable#each_cons(count:Int,reuse=false,&amp;amp;block)-instance-method&quot;&gt;each_cons (count: Int, reuse = false, &amp;amp; block) each_cons&lt;/a&gt; , &lt;a href=&quot;enumerable#each_slice(count:Int,reuse=false,&amp;amp;block)-instance-method&quot;&gt;each_slice (count: Int, reuse = false, &amp;amp; block) each_slice&lt;/a&gt; , &lt;a href=&quot;enumerable#each_with_index(offset=0,&amp;amp;block)-instance-method&quot;&gt;each_with_index (offset = 0, &amp;amp; block) each_with_index&lt;/a&gt; , &lt;a href=&quot;enumerable#each_with_object(obj,&amp;amp;block)-instance-method&quot;&gt;each_with_object (объект &amp;amp;&lt;/a&gt;блок) each_with_object ,&lt;a href=&quot;enumerable#find(if_none=nil,&amp;amp;block)-instance-method&quot;&gt;find (if_none = nil, &amp;amp; block) найти&lt;/a&gt; , &lt;a href=&quot;enumerable#first(count:Int)-instance-method&quot;&gt;сначала (число: Int) &lt;br/&gt;сначала, сначала&lt;/a&gt; , &lt;a href=&quot;enumerable#first?-instance-method&quot;&gt;сначала? первый?&lt;/a&gt; , &lt;a href=&quot;enumerable#flat_map(&amp;amp;block:%7BK,V%7D-%3EArray(U)%7CIterator(U)%7CU)forallU-instance-method&quot;&gt;flat_map (&amp;amp; block: {K, V} -&amp;gt; Array (U) | Iterator (U) | U) для U flat_map&lt;/a&gt; , &lt;a href=&quot;enumerable#grep(pattern)-instance-method&quot;&gt;grep (pattern) grep&lt;/a&gt; , &lt;a href=&quot;enumerable#group_by(&amp;amp;block:%7BK,V%7D-%3EU)forallU-instance-method&quot;&gt;group_by (&amp;amp; block: {K, V} -&amp;gt; U) для U U group_by&lt;/a&gt; , &lt;a href=&quot;enumerable#in_groups_of(size:Int,filled_up_with:U=nil)forallU-instance-method&quot;&gt;in_groups_of (размер: Int, fill_up_with: U = nil) для U &lt;br/&gt;in_groups_of (размер: Int, fill_up_w: U = nil, повторное использование = false, &amp;amp; block) для U in_groups_of&lt;/a&gt; , &lt;a href=&quot;enumerable#includes?(obj)-instance-method&quot;&gt;включает? (obj) включает?&lt;/a&gt; , &lt;a href=&quot;enumerable#index(&amp;amp;block)-instance-method&quot;&gt;index (&amp;amp; block) &lt;br/&gt;index (obj) index&lt;/a&gt; , &lt;a href=&quot;enumerable#index_by(&amp;amp;block:%7BK,V%7D-%3EU)forallU-instance-method&quot;&gt;index_by (&amp;amp; block: {K, V} -&amp;gt; U) для всего U index_by&lt;/a&gt; , соединение (разделитель = &quot;&quot;, &amp;amp; block)</target>
        </trans-unit>
        <trans-unit id="85c1f4d5420f79b94f8e755fb7361372e20c64bf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;enumerable#all?(&amp;amp;block)-instance-method&quot;&gt; all?(&amp;amp;block)&lt;br/&gt;all?(pattern)&lt;br/&gt;all? all?&lt;/a&gt;, &lt;a href=&quot;enumerable#any?(&amp;amp;block)-instance-method&quot;&gt; any?(&amp;amp;block)&lt;br/&gt;any?(pattern)&lt;br/&gt;any? any?&lt;/a&gt;, &lt;a href=&quot;enumerable#chunks(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt; chunks(&amp;amp;block : T -&amp;gt; U) forall U chunks&lt;/a&gt;, &lt;a href=&quot;enumerable#compact_map(&amp;amp;block)-instance-method&quot;&gt; compact_map(&amp;amp;block) compact_map&lt;/a&gt;, &lt;a href=&quot;enumerable#count(item)-instance-method&quot;&gt; count(item)&lt;br/&gt;count(&amp;amp;block) count&lt;/a&gt;, &lt;a href=&quot;enumerable#cycle(&amp;amp;block)-instance-method&quot;&gt; cycle(&amp;amp;block)&lt;br/&gt;cycle(n, &amp;amp;block) cycle&lt;/a&gt;, &lt;a href=&quot;enumerable#each(&amp;amp;block:T-%3EUNDERSCORE)-instance-method&quot;&gt; each(&amp;amp;block : T -&amp;gt; UNDERSCORE) each&lt;/a&gt;, &lt;a href=&quot;enumerable#each_cons(count:Int,reuse=false,&amp;amp;block)-instance-method&quot;&gt; each_cons(count : Int, reuse = false, &amp;amp;block) each_cons&lt;/a&gt;, &lt;a href=&quot;enumerable#each_slice(count:Int,reuse=false,&amp;amp;block)-instance-method&quot;&gt; each_slice(count : Int, reuse = false, &amp;amp;block) each_slice&lt;/a&gt;, &lt;a href=&quot;enumerable#each_with_index(offset=0,&amp;amp;block)-instance-method&quot;&gt; each_with_index(offset = 0, &amp;amp;block) each_with_index&lt;/a&gt;, &lt;a href=&quot;enumerable#each_with_object(obj,&amp;amp;block)-instance-method&quot;&gt; each_with_object(obj, &amp;amp;block) each_with_object&lt;/a&gt;, &lt;a href=&quot;enumerable#find(if_none=nil,&amp;amp;block)-instance-method&quot;&gt; find(if_none = nil, &amp;amp;block) find&lt;/a&gt;, &lt;a href=&quot;enumerable#first(count:Int)-instance-method&quot;&gt; first(count : Int)&lt;br/&gt;first first&lt;/a&gt;, &lt;a href=&quot;enumerable#first?-instance-method&quot;&gt; first? first?&lt;/a&gt;, &lt;a href=&quot;enumerable#flat_map(&amp;amp;block:T-%3EArray(U)%7CIterator(U)%7CU)forallU-instance-method&quot;&gt; flat_map(&amp;amp;block : T -&amp;gt; Array(U) | Iterator(U) | U) forall U flat_map&lt;/a&gt;, &lt;a href=&quot;enumerable#grep(pattern)-instance-method&quot;&gt; grep(pattern) grep&lt;/a&gt;, &lt;a href=&quot;enumerable#group_by(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt; group_by(&amp;amp;block : T -&amp;gt; U) forall U group_by&lt;/a&gt;, &lt;a href=&quot;enumerable#in_groups_of(size:Int,filled_up_with:U=nil)forallU-instance-method&quot;&gt; in_groups_of(size : Int, filled_up_with : U = nil) forall U&lt;br/&gt;in_groups_of(size : Int, filled_up_with : U = nil, reuse = false, &amp;amp;block) forall U in_groups_of&lt;/a&gt;, &lt;a href=&quot;enumerable#includes?(obj)-instance-method&quot;&gt; includes?(obj) includes?&lt;/a&gt;, &lt;a href=&quot;enumerable#index(&amp;amp;block)-instance-method&quot;&gt; index(&amp;amp;block)&lt;br/&gt;index(obj) index&lt;/a&gt;, &lt;a href=&quot;enumerable#index_by(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt; index_by(&amp;amp;block : T -&amp;gt; U) forall U index_by&lt;/a&gt;,  join(separator = &quot;&quot;, &amp;amp;block)</source>
          <target state="translated">&lt;a href=&quot;enumerable#all?(&amp;amp;block)-instance-method&quot;&gt;все? (&amp;amp; блок) &lt;br/&gt;все? (шаблон) &lt;br/&gt;все? все?&lt;/a&gt; , &lt;a href=&quot;enumerable#any?(&amp;amp;block)-instance-method&quot;&gt;любой? (&amp;amp; блок) &lt;br/&gt;любой? (шаблон) &lt;br/&gt;любой? любой?&lt;/a&gt; , &lt;a href=&quot;enumerable#chunks(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;чанки (&amp;amp; block: T -&amp;gt; U) для U-чанков&lt;/a&gt; , &lt;a href=&quot;enumerable#compact_map(&amp;amp;block)-instance-method&quot;&gt;compact_map (&amp;amp; block) compact_map&lt;/a&gt; , &lt;a href=&quot;enumerable#count(item)-instance-method&quot;&gt;count (item) &lt;br/&gt;count (&amp;amp; block) count&lt;/a&gt; , &lt;a href=&quot;enumerable#cycle(&amp;amp;block)-instance-method&quot;&gt;цикл (&amp;amp; block) &lt;br/&gt;цикл (n, &amp;amp; block) цикл&lt;/a&gt; , &lt;a href=&quot;enumerable#each(&amp;amp;block:T-%3EUNDERSCORE)-instance-method&quot;&gt;каждый (&amp;amp; block: T -&amp;gt; UNDERSCORE ) each&lt;/a&gt; , &lt;a href=&quot;enumerable#each_cons(count:Int,reuse=false,&amp;amp;block)-instance-method&quot;&gt;each_cons (count: Int, reuse = false, &amp;amp; block) each_cons&lt;/a&gt; , &lt;a href=&quot;enumerable#each_slice(count:Int,reuse=false,&amp;amp;block)-instance-method&quot;&gt;each_slice (count: Int, reuse = false, &amp;amp; block) each_slice&lt;/a&gt; , &lt;a href=&quot;enumerable#each_with_index(offset=0,&amp;amp;block)-instance-method&quot;&gt;each_with_index (offset = 0, &amp;amp; block) each_with_index&lt;/a&gt; , &lt;a href=&quot;enumerable#each_with_object(obj,&amp;amp;block)-instance-method&quot;&gt;each_with_object (obj, &amp;amp; block) each_with_object&lt;/a&gt; ,&lt;a href=&quot;enumerable#find(if_none=nil,&amp;amp;block)-instance-method&quot;&gt;find (if_none = nil, &amp;amp; block) найти&lt;/a&gt; , &lt;a href=&quot;enumerable#first(count:Int)-instance-method&quot;&gt;сначала (число: Int) &lt;br/&gt;сначала, сначала&lt;/a&gt; , &lt;a href=&quot;enumerable#first?-instance-method&quot;&gt;сначала? первый?&lt;/a&gt; , &lt;a href=&quot;enumerable#flat_map(&amp;amp;block:T-%3EArray(U)%7CIterator(U)%7CU)forallU-instance-method&quot;&gt;flat_map (&amp;amp; block: T -&amp;gt; Array (U) | Iterator (U) | U) для U flat_map&lt;/a&gt; , &lt;a href=&quot;enumerable#grep(pattern)-instance-method&quot;&gt;grep (pattern) grep&lt;/a&gt; , &lt;a href=&quot;enumerable#group_by(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;group_by (&amp;amp; block: T -&amp;gt; U) для U group_by&lt;/a&gt; , &lt;a href=&quot;enumerable#in_groups_of(size:Int,filled_up_with:U=nil)forallU-instance-method&quot;&gt;in_groups_of (размер: Int, заполнен_up_with : U = nil) для U &lt;br/&gt;in_groups_of (размер: Int, заполнено_с_с: U = ноль, повторное использование = ложь и блокировка) для U in_groups_of&lt;/a&gt; , &lt;a href=&quot;enumerable#includes?(obj)-instance-method&quot;&gt;включает? (Obj) включает?&lt;/a&gt; , &lt;a href=&quot;enumerable#index(&amp;amp;block)-instance-method&quot;&gt;index (&amp;amp; block) &lt;br/&gt;index (obj) index&lt;/a&gt; , &lt;a href=&quot;enumerable#index_by(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;index_by (&amp;amp; block: T -&amp;gt; U) для всего U index_by&lt;/a&gt; , соединение (разделитель = &quot;&quot;, &amp;amp; block)</target>
        </trans-unit>
        <trans-unit id="15cd4e254cdb3726fa01f9f5195497cf98141123" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;enumerable#all?(&amp;amp;block)-instance-method&quot;&gt; all?(&amp;amp;block)&lt;br/&gt;all?(pattern)&lt;br/&gt;all? all?&lt;/a&gt;, &lt;a href=&quot;enumerable#any?(&amp;amp;block)-instance-method&quot;&gt; any?(&amp;amp;block)&lt;br/&gt;any?(pattern)&lt;br/&gt;any? any?&lt;/a&gt;, &lt;a href=&quot;enumerable#chunks(&amp;amp;block:Union(T)-%3EU)forallU-instance-method&quot;&gt; chunks(&amp;amp;block : Union(T) -&amp;gt; U) forall U chunks&lt;/a&gt;, &lt;a href=&quot;enumerable#compact_map(&amp;amp;block)-instance-method&quot;&gt; compact_map(&amp;amp;block) compact_map&lt;/a&gt;, &lt;a href=&quot;enumerable#count(item)-instance-method&quot;&gt; count(item)&lt;br/&gt;count(&amp;amp;block) count&lt;/a&gt;, &lt;a href=&quot;enumerable#cycle(&amp;amp;block)-instance-method&quot;&gt; cycle(&amp;amp;block)&lt;br/&gt;cycle(n, &amp;amp;block) cycle&lt;/a&gt;, &lt;a href=&quot;enumerable#each(&amp;amp;block:Union(T)-%3EUNDERSCORE)-instance-method&quot;&gt; each(&amp;amp;block : Union(T) -&amp;gt; UNDERSCORE) each&lt;/a&gt;, &lt;a href=&quot;enumerable#each_cons(count:Int,reuse=false,&amp;amp;block)-instance-method&quot;&gt; each_cons(count : Int, reuse = false, &amp;amp;block) each_cons&lt;/a&gt;, &lt;a href=&quot;enumerable#each_slice(count:Int,reuse=false,&amp;amp;block)-instance-method&quot;&gt; each_slice(count : Int, reuse = false, &amp;amp;block) each_slice&lt;/a&gt;, &lt;a href=&quot;enumerable#each_with_index(offset=0,&amp;amp;block)-instance-method&quot;&gt; each_with_index(offset = 0, &amp;amp;block) each_with_index&lt;/a&gt;, &lt;a href=&quot;enumerable#each_with_object(obj,&amp;amp;block)-instance-method&quot;&gt; each_with_object(obj, &amp;amp;block) each_with_object&lt;/a&gt;, &lt;a href=&quot;enumerable#find(if_none=nil,&amp;amp;block)-instance-method&quot;&gt; find(if_none = nil, &amp;amp;block) find&lt;/a&gt;, &lt;a href=&quot;enumerable#first(count:Int)-instance-method&quot;&gt; first(count : Int)&lt;br/&gt;first first&lt;/a&gt;, &lt;a href=&quot;enumerable#first?-instance-method&quot;&gt; first? first?&lt;/a&gt;, &lt;a href=&quot;enumerable#flat_map(&amp;amp;block:Union(T)-%3EArray(U)%7CIterator(U)%7CU)forallU-instance-method&quot;&gt; flat_map(&amp;amp;block : Union(T) -&amp;gt; Array(U) | Iterator(U) | U) forall U flat_map&lt;/a&gt;, &lt;a href=&quot;enumerable#grep(pattern)-instance-method&quot;&gt; grep(pattern) grep&lt;/a&gt;, &lt;a href=&quot;enumerable#group_by(&amp;amp;block:Union(T)-%3EU)forallU-instance-method&quot;&gt; group_by(&amp;amp;block : Union(T) -&amp;gt; U) forall U group_by&lt;/a&gt;, &lt;a href=&quot;enumerable#in_groups_of(size:Int,filled_up_with:U=nil)forallU-instance-method&quot;&gt; in_groups_of(size : Int, filled_up_with : U = nil) forall U&lt;br/&gt;in_groups_of(size : Int, filled_up_with : U = nil, reuse = false, &amp;amp;block) forall U in_groups_of&lt;/a&gt;, &lt;a href=&quot;enumerable#includes?(obj)-instance-method&quot;&gt; includes?(obj) includes?&lt;/a&gt;, &lt;a href=&quot;enumerable#index(&amp;amp;block)-instance-method&quot;&gt; index(&amp;amp;block)&lt;br/&gt;index(obj) index&lt;/a&gt;, &lt;a href=&quot;enumerable#index_by(&amp;amp;block:Union(T)-%3EU)forallU-instance-method&quot;&gt; index_by(&amp;amp;block : Union(T) -&amp;gt; U) forall U index_by&lt;/a&gt;,  join(separator = &quot;&quot;, &amp;amp;block)</source>
          <target state="translated">&lt;a href=&quot;enumerable#all?(&amp;amp;block)-instance-method&quot;&gt;все? (&amp;amp; блок) &lt;br/&gt;все? (шаблон) &lt;br/&gt;все? все?&lt;/a&gt; , &lt;a href=&quot;enumerable#any?(&amp;amp;block)-instance-method&quot;&gt;любой? (&amp;amp; блок) &lt;br/&gt;любой? (шаблон) &lt;br/&gt;любой? любой?&lt;/a&gt; , &lt;a href=&quot;enumerable#chunks(&amp;amp;block:Union(T)-%3EU)forallU-instance-method&quot;&gt;чанки (&amp;amp; block: Union (T) -&amp;gt; U) для U чанков&lt;/a&gt; , &lt;a href=&quot;enumerable#compact_map(&amp;amp;block)-instance-method&quot;&gt;compact_map (&amp;amp; block) compact_map&lt;/a&gt; , &lt;a href=&quot;enumerable#count(item)-instance-method&quot;&gt;count (item) &lt;br/&gt;count (&amp;amp; block) count&lt;/a&gt; , &lt;a href=&quot;enumerable#cycle(&amp;amp;block)-instance-method&quot;&gt;цикл (&amp;amp; block) &lt;br/&gt;цикл (n, &amp;amp; block) цикл&lt;/a&gt; , &lt;a href=&quot;enumerable#each(&amp;amp;block:Union(T)-%3EUNDERSCORE)-instance-method&quot;&gt;каждый (&amp;amp; block: Union (T) -&amp;gt; UNDERSCORE) each&lt;/a&gt; , &lt;a href=&quot;enumerable#each_cons(count:Int,reuse=false,&amp;amp;block)-instance-method&quot;&gt;each_cons (count: Int, reuse = false, &amp;amp; block) each_cons&lt;/a&gt; , &lt;a href=&quot;enumerable#each_slice(count:Int,reuse=false,&amp;amp;block)-instance-method&quot;&gt;each_slice (count: Int, reuse = false, &amp;amp; block) each_slice&lt;/a&gt; , &lt;a href=&quot;enumerable#each_with_index(offset=0,&amp;amp;block)-instance-method&quot;&gt;each_with_index (offset = 0, &amp;amp; block) each_with_index&lt;/a&gt; , &lt;a href=&quot;enumerable#each_with_object(obj,&amp;amp;block)-instance-method&quot;&gt;each_with_object (obj) &amp;amp;&lt;/a&gt;блок) each_with_object ,&lt;a href=&quot;enumerable#find(if_none=nil,&amp;amp;block)-instance-method&quot;&gt;find (if_none = nil, &amp;amp; block) найти&lt;/a&gt; , &lt;a href=&quot;enumerable#first(count:Int)-instance-method&quot;&gt;сначала (число: Int) &lt;br/&gt;сначала, сначала&lt;/a&gt; , &lt;a href=&quot;enumerable#first?-instance-method&quot;&gt;сначала? первый?&lt;/a&gt; , &lt;a href=&quot;enumerable#flat_map(&amp;amp;block:Union(T)-%3EArray(U)%7CIterator(U)%7CU)forallU-instance-method&quot;&gt;flat_map (&amp;amp; block: Union (T) -&amp;gt; Array (U) | Iterator (U) | U) для U flat_map&lt;/a&gt; , &lt;a href=&quot;enumerable#grep(pattern)-instance-method&quot;&gt;grep (pattern) grep&lt;/a&gt; , &lt;a href=&quot;enumerable#group_by(&amp;amp;block:Union(T)-%3EU)forallU-instance-method&quot;&gt;group_by (&amp;amp; block: Union (T) -&amp;gt; U) для U group_by&lt;/a&gt; , &lt;a href=&quot;enumerable#in_groups_of(size:Int,filled_up_with:U=nil)forallU-instance-method&quot;&gt;in_groups_of (размер: Int, fill_up_with: U = nil) для всего U &lt;br/&gt;in_groups_of (размер: Int, fill_up_with: U = nil, повторное использование = false, &amp;amp; block) для U in_groups_of&lt;/a&gt; , &lt;a href=&quot;enumerable#includes?(obj)-instance-method&quot;&gt;включает? (obj) включает в себя?&lt;/a&gt; , &lt;a href=&quot;enumerable#index(&amp;amp;block)-instance-method&quot;&gt;index (&amp;amp; block) &lt;br/&gt;index (obj) index&lt;/a&gt; , &lt;a href=&quot;enumerable#index_by(&amp;amp;block:Union(T)-%3EU)forallU-instance-method&quot;&gt;index_by (&amp;amp; block: Union (T) -&amp;gt; U) для всего U index_by&lt;/a&gt; , соединение (разделитель = &quot;&quot;, &amp;amp; block)</target>
        </trans-unit>
        <trans-unit id="f1addcb9c5cfb384b0f6054a9604fe8ca1a1ca80" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evented#evented_close-instance-method&quot;&gt; evented_close evented_close&lt;/a&gt;, &lt;a href=&quot;evented#evented_read(slice:Bytes,errno_msg:String,&amp;amp;block):Int32-instance-method&quot;&gt; evented_read(slice : Bytes, errno_msg : String, &amp;amp;block) : Int32 evented_read&lt;/a&gt;, &lt;a href=&quot;evented#evented_reopen-instance-method&quot;&gt; evented_reopen evented_reopen&lt;/a&gt;, &lt;a href=&quot;evented#evented_send(slice:Bytes,errno_msg:String,&amp;amp;block):Int32-instance-method&quot;&gt; evented_send(slice : Bytes, errno_msg : String, &amp;amp;block) : Int32 evented_send&lt;/a&gt;, &lt;a href=&quot;evented#evented_write(slice:Bytes,errno_msg:String,&amp;amp;block):Nil-instance-method&quot;&gt; evented_write(slice : Bytes, errno_msg : String, &amp;amp;block) : Nil evented_write&lt;/a&gt;, &lt;a href=&quot;evented#read_timeout:Time::Span?-instance-method&quot;&gt; read_timeout : Time::Span? read_timeout&lt;/a&gt;, &lt;a href=&quot;evented#read_timeout=(read_timeout:Number):Number-instance-method&quot;&gt; read_timeout=(read_timeout : Number) : Number&lt;br/&gt;read_timeout=(timeout : Time::Span?) : Time::Span? read_timeout=&lt;/a&gt;, &lt;a href=&quot;evented#write_timeout:Time::Span?-instance-method&quot;&gt; write_timeout : Time::Span? write_timeout&lt;/a&gt;, &lt;a href=&quot;evented#write_timeout=(write_timeout:Number):Number-instance-method&quot;&gt; write_timeout=(write_timeout : Number) : Number&lt;br/&gt;write_timeout=(timeout : Time::Span?) : Time::Span? write_timeout=&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;evented#evented_close-instance-method&quot;&gt;evented_close evented_close&lt;/a&gt; , &lt;a href=&quot;evented#evented_read(slice:Bytes,errno_msg:String,&amp;amp;block):Int32-instance-method&quot;&gt;evented_read (ломтик: Б, errno_msg: String, и блок): Int32 evented_read&lt;/a&gt; , &lt;a href=&quot;evented#evented_reopen-instance-method&quot;&gt;evented_reopen evented_reopen&lt;/a&gt; , &lt;a href=&quot;evented#evented_send(slice:Bytes,errno_msg:String,&amp;amp;block):Int32-instance-method&quot;&gt;evented_send (ломтик: Б, errno_msg: String, и блок): Int32 evented_send&lt;/a&gt; , &lt;a href=&quot;evented#evented_write(slice:Bytes,errno_msg:String,&amp;amp;block):Nil-instance-method&quot;&gt;evented_write (ломтик: Б, errno_msg: String, и блок) : Ноль evented_write&lt;/a&gt; , &lt;a href=&quot;evented#read_timeout:Time::Span?-instance-method&quot;&gt;read_timeout: Time :: Span? read_timeout&lt;/a&gt; , &lt;a href=&quot;evented#read_timeout=(read_timeout:Number):Number-instance-method&quot;&gt;read_timeout = (read_timeout: Number): число &lt;br/&gt;read_timeout = (timeout: Time :: Span?): Time :: Span? read_timeout =&lt;/a&gt; , &lt;a href=&quot;evented#write_timeout:Time::Span?-instance-method&quot;&gt;write_timeout: Time :: Span? write_timeout&lt;/a&gt; , &lt;a href=&quot;evented#write_timeout=(write_timeout:Number):Number-instance-method&quot;&gt;write_timeout = (write_timeout: Number): число &lt;br/&gt;write_timeout = (timeout: Time :: Span?): Time :: Span? write_timeout =&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d4fc311956b33fc172dad6ca9a048e3868b51e66" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;exception#backtrace-instance-method&quot;&gt; backtrace backtrace&lt;/a&gt;, &lt;a href=&quot;exception#backtrace?-instance-method&quot;&gt; backtrace? backtrace?&lt;/a&gt;, &lt;a href=&quot;exception#callstack:CallStack?-instance-method&quot;&gt; callstack : CallStack? callstack&lt;/a&gt;, &lt;a href=&quot;exception#callstack=(callstack:CallStack?)-instance-method&quot;&gt; callstack=(callstack : CallStack?) callstack=&lt;/a&gt;, &lt;a href=&quot;exception#cause:Exception?-instance-method&quot;&gt; cause : Exception? cause&lt;/a&gt;, &lt;a href=&quot;exception#inspect(io:IO):Nil-instance-method&quot;&gt; inspect(io : IO) : Nil inspect&lt;/a&gt;, &lt;a href=&quot;exception#inspect_with_backtrace(io:IO):Nil-instance-method&quot;&gt; inspect_with_backtrace(io : IO) : Nil&lt;br/&gt;inspect_with_backtrace : String inspect_with_backtrace&lt;/a&gt;, &lt;a href=&quot;exception#message:String?-instance-method&quot;&gt; message : String? message&lt;/a&gt;, &lt;a href=&quot;exception#to_s(io:IO):Nil-instance-method&quot;&gt; to_s(io : IO) : Nil to_s&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;exception#backtrace-instance-method&quot;&gt;обратный ход обратный ход&lt;/a&gt; , &lt;a href=&quot;exception#backtrace?-instance-method&quot;&gt;обратный ход? трассировка?&lt;/a&gt; , &lt;a href=&quot;exception#callstack:CallStack?-instance-method&quot;&gt;callstack: CallStack? callstack&lt;/a&gt; , &lt;a href=&quot;exception#callstack=(callstack:CallStack?)-instance-method&quot;&gt;callstack = (callstack: CallStack?) callstack =&lt;/a&gt; , &lt;a href=&quot;exception#cause:Exception?-instance-method&quot;&gt;причина: исключение? причина&lt;/a&gt; , &lt;a href=&quot;exception#inspect(io:IO):Nil-instance-method&quot;&gt;проверять (io: IO): ноль проверять&lt;/a&gt; , &lt;a href=&quot;exception#inspect_with_backtrace(io:IO):Nil-instance-method&quot;&gt;inspect_with_backtrace (io: IO): ноль &lt;br/&gt;inspect_with_backtrace: строка inspect_with_backtrace&lt;/a&gt; , &lt;a href=&quot;exception#message:String?-instance-method&quot;&gt;сообщение: строка? сообщение&lt;/a&gt; , &lt;a href=&quot;exception#to_s(io:IO):Nil-instance-method&quot;&gt;to_s (Io: IO): Nil to_s&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2a10984e6a0612a088f0c0cf7053ee2647e4faa6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;float#%25(other)-instance-method&quot;&gt; %(other) %&lt;/a&gt;, &lt;a href=&quot;float#--instance-method&quot;&gt; - -&lt;/a&gt;, &lt;a href=&quot;float#//(other)-instance-method&quot;&gt; //(other) //&lt;/a&gt;, &lt;a href=&quot;float#(other:BigDecimal)-instance-method&quot;&gt; &amp;lt;=&amp;gt;(other : BigDecimal)&lt;br/&gt;&amp;lt;=&amp;gt;(other : BigRational)&lt;br/&gt;&amp;lt;=&amp;gt;(other : BigInt) &amp;lt;=&amp;gt;&lt;/a&gt;, &lt;a href=&quot;float#days:Time::Span-instance-method&quot;&gt; days : Time::Span days&lt;/a&gt;, &lt;a href=&quot;float#fdiv(other):self-instance-method&quot;&gt; fdiv(other) : self fdiv&lt;/a&gt;, &lt;a href=&quot;float#finite?-instance-method&quot;&gt; finite? finite?&lt;/a&gt;, &lt;a href=&quot;float#hash(hasher)-instance-method&quot;&gt; hash(hasher) hash&lt;/a&gt;, &lt;a href=&quot;float#hours:Time::Span-instance-method&quot;&gt; hours : Time::Span hours&lt;/a&gt;, &lt;a href=&quot;float#infinite?-instance-method&quot;&gt; infinite? infinite?&lt;/a&gt;, &lt;a href=&quot;float#microseconds:Time::Span-instance-method&quot;&gt; microseconds : Time::Span microseconds&lt;/a&gt;, &lt;a href=&quot;float#milliseconds:Time::Span-instance-method&quot;&gt; milliseconds : Time::Span milliseconds&lt;/a&gt;, &lt;a href=&quot;float#minutes:Time::Span-instance-method&quot;&gt; minutes : Time::Span minutes&lt;/a&gt;, &lt;a href=&quot;float#modulo(other)-instance-method&quot;&gt; modulo(other) modulo&lt;/a&gt;, &lt;a href=&quot;float#nan?-instance-method&quot;&gt; nan? nan?&lt;/a&gt;, &lt;a href=&quot;float#nanoseconds:Time::Span-instance-method&quot;&gt; nanoseconds : Time::Span nanoseconds&lt;/a&gt;, &lt;a href=&quot;float#remainder(other)-instance-method&quot;&gt; remainder(other) remainder&lt;/a&gt;, &lt;a href=&quot;float#seconds:Time::Span-instance-method&quot;&gt; seconds : Time::Span seconds&lt;/a&gt;, &lt;a href=&quot;float#to_big_d-instance-method&quot;&gt; to_big_d to_big_d&lt;/a&gt;, &lt;a href=&quot;float#to_big_i:BigInt-instance-method&quot;&gt; to_big_i : BigInt to_big_i&lt;/a&gt;, &lt;a href=&quot;float#to_big_r-instance-method&quot;&gt; to_big_r to_big_r&lt;/a&gt;, &lt;a href=&quot;float#to_io(io:IO,format:IO::ByteFormat)-instance-method&quot;&gt; to_io(io : IO, format : IO::ByteFormat) to_io&lt;/a&gt;, &lt;a href=&quot;float#to_json(json:JSON::Builder)-instance-method&quot;&gt; to_json(json : JSON::Builder) to_json&lt;/a&gt;, &lt;a href=&quot;float#to_json_object_key-instance-method&quot;&gt; to_json_object_key to_json_object_key&lt;/a&gt;, &lt;a href=&quot;float#weeks:Time::Span-instance-method&quot;&gt; weeks : Time::Span weeks&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;float#%25(other)-instance-method&quot;&gt;% (другие)%&lt;/a&gt; , &lt;a href=&quot;float#--instance-method&quot;&gt;- -&lt;/a&gt; , &lt;a href=&quot;float#//(other)-instance-method&quot;&gt;// (другое) //&lt;/a&gt; , &lt;a href=&quot;float#(other:BigDecimal)-instance-method&quot;&gt;&amp;lt;=&amp;gt; (другое: BigDecimal) &lt;br/&gt;&amp;lt;=&amp;gt; (другой: BigRational) &lt;br/&gt;&amp;lt;=&amp;gt; (другие: BigInt) &amp;lt;=&amp;gt;&lt;/a&gt; , &lt;a href=&quot;float#days:Time::Span-instance-method&quot;&gt;дни: Время :: Span days&lt;/a&gt; , &lt;a href=&quot;float#fdiv(other):self-instance-method&quot;&gt;fdiv (другое): self fdiv&lt;/a&gt; , &lt;a href=&quot;float#finite?-instance-method&quot;&gt;конечно? конечноразностный?&lt;/a&gt; , &lt;a href=&quot;float#hash(hasher)-instance-method&quot;&gt;hash (hasher) hash&lt;/a&gt; , &lt;a href=&quot;float#hours:Time::Span-instance-method&quot;&gt;hours: Time :: Span hours&lt;/a&gt; , &lt;a href=&quot;float#infinite?-instance-method&quot;&gt;бесконечный? бесконечный?&lt;/a&gt; , &lt;a href=&quot;float#microseconds:Time::Span-instance-method&quot;&gt;микросекунды: время :: промежуток микросекунды&lt;/a&gt; , &lt;a href=&quot;float#milliseconds:Time::Span-instance-method&quot;&gt;миллисекунды: время :: промежуток миллисекунды&lt;/a&gt; , &lt;a href=&quot;float#minutes:Time::Span-instance-method&quot;&gt;минуты: время :: промежуток минут&lt;/a&gt; , &lt;a href=&quot;float#modulo(other)-instance-method&quot;&gt;по модулю (другое) по модулю&lt;/a&gt; , &lt;a href=&quot;float#nan?-instance-method&quot;&gt;нан? нан?&lt;/a&gt; , &lt;a href=&quot;float#nanoseconds:Time::Span-instance-method&quot;&gt;наносекунды: время :: интервал наносекунд&lt;/a&gt;, &lt;a href=&quot;float#remainder(other)-instance-method&quot;&gt;остаток (другой) остаток&lt;/a&gt; , &lt;a href=&quot;float#seconds:Time::Span-instance-method&quot;&gt;секунды: время :: &lt;/a&gt;&lt;a href=&quot;float#to_big_d-instance-method&quot;&gt;интервал &lt;/a&gt;секунд , to_big_d to_big_d , &lt;a href=&quot;float#to_big_i:BigInt-instance-method&quot;&gt;to_big_i: bigInt to_big_i&lt;/a&gt; , &lt;a href=&quot;float#to_big_r-instance-method&quot;&gt;to_big_r to_big_r&lt;/a&gt; , &lt;a href=&quot;float#to_io(io:IO,format:IO::ByteFormat)-instance-method&quot;&gt;to_io (io: IO, формат: IO :: ByteFormat) to_io&lt;/a&gt; , &lt;a href=&quot;float#to_json(json:JSON::Builder)-instance-method&quot;&gt;to_json (json: JSON: Buil) to_json&lt;/a&gt; , &lt;a href=&quot;float#to_json_object_key-instance-method&quot;&gt;to_json_object_key to_json_object_key&lt;/a&gt; , &lt;a href=&quot;float#weeks:Time::Span-instance-method&quot;&gt;недели: время :: интервал недель&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="23ecaab67f58412da777ec4e46bdac4e54b618cb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;handler#call(context:HTTP::Server::Context)-instance-method&quot;&gt; call(context : HTTP::Server::Context) call&lt;/a&gt;, &lt;a href=&quot;handler#call_next(context:HTTP::Server::Context)-instance-method&quot;&gt; call_next(context : HTTP::Server::Context) call_next&lt;/a&gt;, &lt;a href=&quot;handler#next:Handler%7CHandlerProc%7CNil-instance-method&quot;&gt; next : Handler | HandlerProc | Nil next&lt;/a&gt;, &lt;a href=&quot;handler#next=(next__arg0:Handler%7CHandlerProc%7CNil)-instance-method&quot;&gt; next=(next __arg0 : Handler | HandlerProc | Nil) next=&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;handler#call(context:HTTP::Server::Context)-instance-method&quot;&gt;вызов (контекст: HTTP :: Server :: Context) вызов&lt;/a&gt; , &lt;a href=&quot;handler#call_next(context:HTTP::Server::Context)-instance-method&quot;&gt;call_next (контекст: HTTP :: Server :: Context) call_next&lt;/a&gt; , &lt;a href=&quot;handler#next:Handler%7CHandlerProc%7CNil-instance-method&quot;&gt;следующий: Обработчик | HandlerProc | Nil next&lt;/a&gt; , &lt;a href=&quot;handler#next=(next__arg0:Handler%7CHandlerProc%7CNil)-instance-method&quot;&gt;next = (next __arg0: Handler | HandlerProc | Nil) next =&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="51516f6fd6f0924e82945def1ddbb2a1c5873c27" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://crystal-lang.org/api/Bool.html&quot;&gt;Bool&lt;/a&gt; has only two possible values: &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt;. They are constructed using the following literals:</source>
          <target state="translated">&lt;a href=&quot;http://crystal-lang.org/api/Bool.html&quot;&gt;Bool&lt;/a&gt; имеет только два возможных значения: &lt;code&gt;true&lt;/code&gt; и &lt;code&gt;false&lt;/code&gt; . Они построены с использованием следующих литералов:</target>
        </trans-unit>
        <trans-unit id="6aa9feaacebcaa5a83eaea499f43ce37e7ee60e9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://crystal-lang.org/reference/syntax_and_semantics/literals/hash.html&quot;&gt;Hash literals&lt;/a&gt; can also be used to create a &lt;code&gt;&lt;a href=&quot;hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">&lt;a href=&quot;http://crystal-lang.org/reference/syntax_and_semantics/literals/hash.html&quot;&gt;Хеш-литералы&lt;/a&gt; также можно использовать для создания &lt;code&gt;&lt;a href=&quot;hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b32a80ad9213b2baefdf4c8373b5e7a1ff90af2d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.travis-ci.com/user/deployment/pages/&quot;&gt;Click Here&lt;/a&gt; for the official documentation on deploying to GitHub-Pages with Travis CI.</source>
          <target state="translated">&lt;a href=&quot;https://docs.travis-ci.com/user/deployment/pages/&quot;&gt;Нажмите здесь,&lt;/a&gt; чтобы получить официальную документацию по развертыванию на GitHub-Pages с Travis CI.</target>
        </trans-unit>
        <trans-unit id="3cf808b0ef29aa77e986bc486725221cf86da558" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.travis-ci.com/user/environment-variables#defining-variables-in-repository-settings&quot;&gt;Set the Environment Variable&lt;/a&gt;, &lt;code&gt;GITHUB_TOKEN&lt;/code&gt;, with your &lt;a href=&quot;https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line/&quot;&gt;personal access token&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.travis-ci.com/user/environment-variables#defining-variables-in-repository-settings&quot;&gt;Установить переменную окружения&lt;/a&gt; , &lt;code&gt;GITHUB_TOKEN&lt;/code&gt; , с вашим &lt;a href=&quot;https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line/&quot;&gt;личным маркером доступа&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0ace43823e011e2ab3142e32413f7942c97c8c8b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/Regular_expression&quot;&gt;Regular expressions&lt;/a&gt; have their own language for describing strings.</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/Regular_expression&quot;&gt;Регулярные выражения&lt;/a&gt; имеют свой собственный язык для описания строк.</target>
        </trans-unit>
        <trans-unit id="032636f6379e6035b08b357674032a9faad32d0f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/crystal-lang/crystal-mysql&quot;&gt;crystal-lang/crystal-mysql&lt;/a&gt; for mysql &amp;amp; mariadb</source>
          <target state="translated">&lt;a href=&quot;https://github.com/crystal-lang/crystal-mysql&quot;&gt;crystal-lang / crystal-mysql&lt;/a&gt; для mysql &amp;amp; mariadb</target>
        </trans-unit>
        <trans-unit id="62fbf37a84a93b65632474f5f8461ad22f18a9c0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/crystal-lang/crystal-sqlite3&quot;&gt;crystal-lang/crystal-sqlite3&lt;/a&gt; for sqlite</source>
          <target state="translated">&lt;a href=&quot;https://github.com/crystal-lang/crystal-sqlite3&quot;&gt;кристалл-ланг / кристалл-sqlite3&lt;/a&gt; для sqlite</target>
        </trans-unit>
        <trans-unit id="f7bb1711c9ce6d6a91f8753627fbca7c627d310a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/crystal-lang/shards/blob/master/SPEC.md&quot;&gt;The spec&lt;/a&gt; is your rulebook. Follow it.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/crystal-lang/shards/blob/master/SPEC.md&quot;&gt;Спецификация&lt;/a&gt; - это ваш свод правил. Следуй за этим.</target>
        </trans-unit>
        <trans-unit id="9c95b906b8f4c6725cd494ba4ea8d2bfb813d139" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/will/crystal-pg&quot;&gt;will/crystal-pg&lt;/a&gt; for postgres</source>
          <target state="translated">&lt;a href=&quot;https://github.com/will/crystal-pg&quot;&gt;будет / Crystal-PG&lt;/a&gt; для Postgres</target>
        </trans-unit>
        <trans-unit id="abf6e1eac3df3cb53ab2314f13f03ab461b53c8a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;indexable&quot;&gt;Indexable&lt;/a&gt;(&lt;a href=&quot;bool&quot;&gt;Bool&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;indexable&quot;&gt;Indexable&lt;/a&gt;(&lt;a href=&quot;bool&quot;&gt;Bool&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="48f3db27b9ec77a3695b0d313e8bdd48ad792742" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;indexable#%5B%5D(index:Int)-instance-method&quot;&gt; [](index : Int) []&lt;/a&gt;, &lt;a href=&quot;indexable#%5B%5D?(index:Int)-instance-method&quot;&gt; []?(index : Int) []?&lt;/a&gt;, &lt;a href=&quot;indexable#bsearch(&amp;amp;block:T-%3EBool)-instance-method&quot;&gt; bsearch(&amp;amp;block : T -&amp;gt; Bool) bsearch&lt;/a&gt;, &lt;a href=&quot;indexable#bsearch_index(&amp;amp;block:T,Int32-%3EBool)-instance-method&quot;&gt; bsearch_index(&amp;amp;block : T, Int32 -&amp;gt; Bool) bsearch_index&lt;/a&gt;, &lt;a href=&quot;indexable#dig(index:Int,*subindexes)-instance-method&quot;&gt; dig(index : Int, *subindexes) dig&lt;/a&gt;, &lt;a href=&quot;indexable#dig?(index:Int,*subindexes)-instance-method&quot;&gt; dig?(index : Int, *subindexes) dig?&lt;/a&gt;, &lt;a href=&quot;indexable#each(*,start:Int,count:Int,&amp;amp;block)-instance-method&quot;&gt; each(*, start : Int, count : Int, &amp;amp;block)&lt;br/&gt;each(*, within range : Range, &amp;amp;block)&lt;br/&gt;each(&amp;amp;block)&lt;br/&gt;each each&lt;/a&gt;, &lt;a href=&quot;indexable#each_index(*,start:Int,count:Int,&amp;amp;block)-instance-method&quot;&gt; each_index(*, start : Int, count : Int, &amp;amp;block)&lt;br/&gt;each_index(&amp;amp;block) : Nil&lt;br/&gt;each_index each_index&lt;/a&gt;, &lt;a href=&quot;indexable#empty?-instance-method&quot;&gt; empty? empty?&lt;/a&gt;, &lt;a href=&quot;indexable#equals?(other:Indexable,&amp;amp;block)-instance-method&quot;&gt; equals?(other : Indexable, &amp;amp;block)&lt;br/&gt;equals?(other, &amp;amp;block) equals?&lt;/a&gt;, &lt;a href=&quot;indexable#fetch(index,default)-instance-method&quot;&gt; fetch(index, default)&lt;br/&gt;fetch(index : Int, &amp;amp;block) fetch&lt;/a&gt;, &lt;a href=&quot;indexable#first-instance-method&quot;&gt; first&lt;br/&gt;first(&amp;amp;block) first&lt;/a&gt;, &lt;a href=&quot;indexable#first?-instance-method&quot;&gt; first? first?&lt;/a&gt;, &lt;a href=&quot;indexable#hash(hasher)-instance-method&quot;&gt; hash(hasher) hash&lt;/a&gt;, &lt;a href=&quot;indexable#index(object,offset:Int=0)-instance-method&quot;&gt; index(object, offset : Int = 0)&lt;br/&gt;index(offset : Int = 0, &amp;amp;block) index&lt;/a&gt;,  join(separator = &quot;&quot;) join, &lt;a href=&quot;indexable#last-instance-method&quot;&gt; last&lt;br/&gt;last(&amp;amp;block) last&lt;/a&gt;, &lt;a href=&quot;indexable#last?-instance-method&quot;&gt; last? last?&lt;/a&gt;, &lt;a href=&quot;indexable#reverse_each(&amp;amp;block):Nil-instance-method&quot;&gt; reverse_each(&amp;amp;block) : Nil&lt;br/&gt;reverse_each reverse_each&lt;/a&gt;, &lt;a href=&quot;indexable#rindex(offset=size-1,&amp;amp;block)-instance-method&quot;&gt; rindex(offset = size - 1, &amp;amp;block)&lt;br/&gt;rindex(value, offset = size - 1) rindex&lt;/a&gt;, &lt;a href=&quot;indexable#sample(random=Random::DEFAULT)-instance-method&quot;&gt; sample(random = Random::DEFAULT) sample&lt;/a&gt;, &lt;a href=&quot;indexable#size-instance-method&quot;&gt; size size&lt;/a&gt;, &lt;a href=&quot;indexable#to_a-instance-method&quot;&gt; to_a to_a&lt;/a&gt;, &lt;a href=&quot;indexable#unsafe_fetch(index:Int)-instance-method&quot;&gt; unsafe_fetch(index : Int) unsafe_fetch&lt;/a&gt;, &lt;a href=&quot;indexable#values_at(*indexes:Int)-instance-method&quot;&gt; values_at(*indexes : Int) values_at&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;indexable#%5B%5D(index:Int)-instance-method&quot;&gt;[] (индекс: Int) []&lt;/a&gt; , &lt;a href=&quot;indexable#%5B%5D?(index:Int)-instance-method&quot;&gt;[]? (индекс: Int) []?&lt;/a&gt; , &lt;a href=&quot;indexable#bsearch(&amp;amp;block:T-%3EBool)-instance-method&quot;&gt;bsearch (&amp;amp; block: T -&amp;gt; Bool) bsearch&lt;/a&gt; , &lt;a href=&quot;indexable#bsearch_index(&amp;amp;block:T,Int32-%3EBool)-instance-method&quot;&gt;bsearch_index (&amp;amp; block: T, Int32 -&amp;gt; Bool) bsearch_index&lt;/a&gt; , &lt;a href=&quot;indexable#dig(index:Int,*subindexes)-instance-method&quot;&gt;dig (индекс: Int, * субиндексы) dig&lt;/a&gt; , &lt;a href=&quot;indexable#dig?(index:Int,*subindexes)-instance-method&quot;&gt;dig? (индекс: Int, * субиндексы) dig?&lt;/a&gt; , &lt;a href=&quot;indexable#each(*,start:Int,count:Int,&amp;amp;block)-instance-method&quot;&gt;каждый (*, начало: Int, число: Int, &amp;amp; block) &lt;br/&gt;каждый (*, в пределах диапазона: Range, &amp;amp; block) &lt;br/&gt;каждый (&amp;amp; block) &lt;br/&gt;каждый каждый&lt;/a&gt; , &lt;a href=&quot;indexable#each_index(*,start:Int,count:Int,&amp;amp;block)-instance-method&quot;&gt;each_index (*, start: Int, count: Int, &amp;amp; block) &lt;br/&gt;each_index (&amp;amp; block ): Nil &lt;br/&gt;each_index each_index&lt;/a&gt; , &lt;a href=&quot;indexable#empty?-instance-method&quot;&gt;пусто? пустой?&lt;/a&gt; , &lt;a href=&quot;indexable#equals?(other:Indexable,&amp;amp;block)-instance-method&quot;&gt;равно? (другое: индексируемое, &amp;amp; блок) &lt;br/&gt;равно? (другое: &amp;amp; блок) равно?&lt;/a&gt; ,&lt;a href=&quot;indexable#fetch(index,default)-instance-method&quot;&gt;выборка (индекс, по умолчанию) &lt;br/&gt;выборка (индекс: Int, &amp;amp; block) выборка&lt;/a&gt; , &lt;a href=&quot;indexable#first-instance-method&quot;&gt;сначала &lt;br/&gt;первая (&amp;amp; block) первая&lt;/a&gt; , &lt;a href=&quot;indexable#first?-instance-method&quot;&gt;первая? первый?&lt;/a&gt; , &lt;a href=&quot;indexable#hash(hasher)-instance-method&quot;&gt;hash (hasher) hash&lt;/a&gt; , &lt;a href=&quot;indexable#index(object,offset:Int=0)-instance-method&quot;&gt;index (object, offset: Int = 0) &lt;br/&gt;index (offset: Int = 0, &amp;amp; block) index&lt;/a&gt; , join (разделитель = &quot;&quot;) join, &lt;a href=&quot;indexable#last-instance-method&quot;&gt;последний &lt;br/&gt;последний (&amp;amp; block) последний&lt;/a&gt; , &lt;a href=&quot;indexable#last?-instance-method&quot;&gt;последний? последний?&lt;/a&gt; , &lt;a href=&quot;indexable#reverse_each(&amp;amp;block):Nil-instance-method&quot;&gt;reverse_each (&amp;amp; block): ноль &lt;br/&gt;reverse_each reverse_each&lt;/a&gt; , &lt;a href=&quot;indexable#rindex(offset=size-1,&amp;amp;block)-instance-method&quot;&gt;rindex (смещение = размер - 1, &amp;amp; block) &lt;br/&gt;rindex (значение, смещение = размер - 1) rindex&lt;/a&gt; , &lt;a href=&quot;indexable#sample(random=Random::DEFAULT)-instance-method&quot;&gt;sample (random = Random :: DEFAULT) выборка&lt;/a&gt; , &lt;a href=&quot;indexable#size-instance-method&quot;&gt;размер размера&lt;/a&gt; , &lt;a href=&quot;indexable#to_a-instance-method&quot;&gt;to_a to_a&lt;/a&gt; ,&lt;a href=&quot;indexable#unsafe_fetch(index:Int)-instance-method&quot;&gt;unsafe_fetch (index: Int) unsafe_fetch&lt;/a&gt; , &lt;a href=&quot;indexable#values_at(*indexes:Int)-instance-method&quot;&gt;values_at (* indexes: Int) values_at&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="946a7498386a7abc3fc27c19baad2464cd9be3a9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;indexable#%5B%5D(index:Int)-instance-method&quot;&gt; [](index : Int) []&lt;/a&gt;, &lt;a href=&quot;indexable#%5B%5D?(index:Int)-instance-method&quot;&gt; []?(index : Int) []?&lt;/a&gt;, &lt;a href=&quot;indexable#bsearch(&amp;amp;block:Union(T)-%3EBool)-instance-method&quot;&gt; bsearch(&amp;amp;block : Union(T) -&amp;gt; Bool) bsearch&lt;/a&gt;, &lt;a href=&quot;indexable#bsearch_index(&amp;amp;block:Union(T),Int32-%3EBool)-instance-method&quot;&gt; bsearch_index(&amp;amp;block : Union(T), Int32 -&amp;gt; Bool) bsearch_index&lt;/a&gt;, &lt;a href=&quot;indexable#dig(index:Int,*subindexes)-instance-method&quot;&gt; dig(index : Int, *subindexes) dig&lt;/a&gt;, &lt;a href=&quot;indexable#dig?(index:Int,*subindexes)-instance-method&quot;&gt; dig?(index : Int, *subindexes) dig?&lt;/a&gt;, &lt;a href=&quot;indexable#each(*,start:Int,count:Int,&amp;amp;block)-instance-method&quot;&gt; each(*, start : Int, count : Int, &amp;amp;block)&lt;br/&gt;each(*, within range : Range, &amp;amp;block)&lt;br/&gt;each(&amp;amp;block)&lt;br/&gt;each each&lt;/a&gt;, &lt;a href=&quot;indexable#each_index(*,start:Int,count:Int,&amp;amp;block)-instance-method&quot;&gt; each_index(*, start : Int, count : Int, &amp;amp;block)&lt;br/&gt;each_index(&amp;amp;block) : Nil&lt;br/&gt;each_index each_index&lt;/a&gt;, &lt;a href=&quot;indexable#empty?-instance-method&quot;&gt; empty? empty?&lt;/a&gt;, &lt;a href=&quot;indexable#equals?(other:Indexable,&amp;amp;block)-instance-method&quot;&gt; equals?(other : Indexable, &amp;amp;block)&lt;br/&gt;equals?(other, &amp;amp;block) equals?&lt;/a&gt;, &lt;a href=&quot;indexable#fetch(index,default)-instance-method&quot;&gt; fetch(index, default)&lt;br/&gt;fetch(index : Int, &amp;amp;block) fetch&lt;/a&gt;, &lt;a href=&quot;indexable#first-instance-method&quot;&gt; first&lt;br/&gt;first(&amp;amp;block) first&lt;/a&gt;, &lt;a href=&quot;indexable#first?-instance-method&quot;&gt; first? first?&lt;/a&gt;, &lt;a href=&quot;indexable#hash(hasher)-instance-method&quot;&gt; hash(hasher) hash&lt;/a&gt;, &lt;a href=&quot;indexable#index(object,offset:Int=0)-instance-method&quot;&gt; index(object, offset : Int = 0)&lt;br/&gt;index(offset : Int = 0, &amp;amp;block) index&lt;/a&gt;,  join(separator = &quot;&quot;) join, &lt;a href=&quot;indexable#last-instance-method&quot;&gt; last&lt;br/&gt;last(&amp;amp;block) last&lt;/a&gt;, &lt;a href=&quot;indexable#last?-instance-method&quot;&gt; last? last?&lt;/a&gt;, &lt;a href=&quot;indexable#reverse_each(&amp;amp;block):Nil-instance-method&quot;&gt; reverse_each(&amp;amp;block) : Nil&lt;br/&gt;reverse_each reverse_each&lt;/a&gt;, &lt;a href=&quot;indexable#rindex(offset=size-1,&amp;amp;block)-instance-method&quot;&gt; rindex(offset = size - 1, &amp;amp;block)&lt;br/&gt;rindex(value, offset = size - 1) rindex&lt;/a&gt;, &lt;a href=&quot;indexable#sample(random=Random::DEFAULT)-instance-method&quot;&gt; sample(random = Random::DEFAULT) sample&lt;/a&gt;, &lt;a href=&quot;indexable#size-instance-method&quot;&gt; size size&lt;/a&gt;, &lt;a href=&quot;indexable#to_a-instance-method&quot;&gt; to_a to_a&lt;/a&gt;, &lt;a href=&quot;indexable#unsafe_fetch(index:Int)-instance-method&quot;&gt; unsafe_fetch(index : Int) unsafe_fetch&lt;/a&gt;, &lt;a href=&quot;indexable#values_at(*indexes:Int)-instance-method&quot;&gt; values_at(*indexes : Int) values_at&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;indexable#%5B%5D(index:Int)-instance-method&quot;&gt;[] (индекс: Int) []&lt;/a&gt; , &lt;a href=&quot;indexable#%5B%5D?(index:Int)-instance-method&quot;&gt;[]? (индекс: Int) []?&lt;/a&gt; , &lt;a href=&quot;indexable#bsearch(&amp;amp;block:Union(T)-%3EBool)-instance-method&quot;&gt;bsearch (&amp;amp; block: Union (T) -&amp;gt; Bool) bsearch&lt;/a&gt; , &lt;a href=&quot;indexable#bsearch_index(&amp;amp;block:Union(T),Int32-%3EBool)-instance-method&quot;&gt;bsearch_index (&amp;amp; block: Union (T), Int32 -&amp;gt; Bool) bsearch_index&lt;/a&gt; , &lt;a href=&quot;indexable#dig(index:Int,*subindexes)-instance-method&quot;&gt;dig (индекс: Int, * субиндексы) dig&lt;/a&gt; , &lt;a href=&quot;indexable#dig?(index:Int,*subindexes)-instance-method&quot;&gt;dig? (индекс: Int, * субиндексы) копать?&lt;/a&gt; , &lt;a href=&quot;indexable#each(*,start:Int,count:Int,&amp;amp;block)-instance-method&quot;&gt;каждый (*, начало: Int, число: Int, &amp;amp; block) &lt;br/&gt;каждый (*, в пределах диапазона: Range, &amp;amp; block) &lt;br/&gt;каждый (&amp;amp; block) &lt;br/&gt;каждый каждый&lt;/a&gt; , &lt;a href=&quot;indexable#each_index(*,start:Int,count:Int,&amp;amp;block)-instance-method&quot;&gt;each_index (*, start: Int, count: Int, &amp;amp; block) &lt;br/&gt;each_index (&amp;amp; block ): Nil &lt;br/&gt;each_index each_index&lt;/a&gt; , &lt;a href=&quot;indexable#empty?-instance-method&quot;&gt;пусто? пустой?&lt;/a&gt; , &lt;a href=&quot;indexable#equals?(other:Indexable,&amp;amp;block)-instance-method&quot;&gt;равно? (другое: индексируемое, &amp;amp; блок) &lt;br/&gt;равно? (другое: &amp;amp; блок) равно?&lt;/a&gt; ,&lt;a href=&quot;indexable#fetch(index,default)-instance-method&quot;&gt;выборка (индекс, по умолчанию) &lt;br/&gt;выборка (индекс: Int, &amp;amp; block) выборка&lt;/a&gt; , &lt;a href=&quot;indexable#first-instance-method&quot;&gt;сначала &lt;br/&gt;первая (&amp;amp; block) первая&lt;/a&gt; , &lt;a href=&quot;indexable#first?-instance-method&quot;&gt;первая? первый?&lt;/a&gt; , &lt;a href=&quot;indexable#hash(hasher)-instance-method&quot;&gt;hash (hasher) hash&lt;/a&gt; , &lt;a href=&quot;indexable#index(object,offset:Int=0)-instance-method&quot;&gt;index (object, offset: Int = 0) &lt;br/&gt;index (offset: Int = 0, &amp;amp; block) index&lt;/a&gt; , join (разделитель = &quot;&quot;) join, &lt;a href=&quot;indexable#last-instance-method&quot;&gt;последний &lt;br/&gt;последний (&amp;amp; block) последний&lt;/a&gt; , &lt;a href=&quot;indexable#last?-instance-method&quot;&gt;последний? последний?&lt;/a&gt; , &lt;a href=&quot;indexable#reverse_each(&amp;amp;block):Nil-instance-method&quot;&gt;reverse_each (&amp;amp; block): ноль &lt;br/&gt;reverse_each reverse_each&lt;/a&gt; , &lt;a href=&quot;indexable#rindex(offset=size-1,&amp;amp;block)-instance-method&quot;&gt;rindex (смещение = размер - 1, &amp;amp; block) &lt;br/&gt;rindex (значение, смещение = размер - 1) rindex&lt;/a&gt; , &lt;a href=&quot;indexable#sample(random=Random::DEFAULT)-instance-method&quot;&gt;sample (random = Random :: DEFAULT) выборка&lt;/a&gt; , &lt;a href=&quot;indexable#size-instance-method&quot;&gt;размер размера&lt;/a&gt; , &lt;a href=&quot;indexable#to_a-instance-method&quot;&gt;to_a to_a&lt;/a&gt; ,&lt;a href=&quot;indexable#unsafe_fetch(index:Int)-instance-method&quot;&gt;unsafe_fetch (index: Int) unsafe_fetch&lt;/a&gt; , &lt;a href=&quot;indexable#values_at(*indexes:Int)-instance-method&quot;&gt;values_at (* indexes: Int) values_at&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="219c9f4d6147205f8cbd1cef68fb077a0f3f06a9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;int#%25(other:BigInt):BigInt-instance-method&quot;&gt; %(other : BigInt) : BigInt&lt;br/&gt;%(other : Int) %&lt;/a&gt;, &lt;a href=&quot;int#&amp;amp;*(other:BigInt):BigInt-instance-method&quot;&gt; &amp;amp;*(other : BigInt) : BigInt &amp;amp;*&lt;/a&gt;, &lt;a href=&quot;int#&amp;amp;**(exponent:Int):self-instance-method&quot;&gt; &amp;amp;**(exponent : Int) : self &amp;amp;**&lt;/a&gt;, &lt;a href=&quot;int#&amp;amp;+(other:BigInt):BigInt-instance-method&quot;&gt; &amp;amp;+(other : BigInt) : BigInt &amp;amp;+&lt;/a&gt;, &lt;a href=&quot;int#&amp;amp;-(other:BigInt):BigInt-instance-method&quot;&gt; &amp;amp;-(other : BigInt) : BigInt &amp;amp;-&lt;/a&gt;, &lt;a href=&quot;int#*(other:BigDecimal)-instance-method&quot;&gt; *(other : BigDecimal)&lt;br/&gt;*(other : BigRational)&lt;br/&gt;*(other : BigInt) : BigInt *&lt;/a&gt;, &lt;a href=&quot;int#**(exponent:Float):Float64-instance-method&quot;&gt; **(exponent : Float) : Float64&lt;br/&gt;**(exponent : Int) : self **&lt;/a&gt;, &lt;a href=&quot;int#+(other:BigDecimal)-instance-method&quot;&gt; +(other : BigDecimal)&lt;br/&gt;+(other : BigRational)&lt;br/&gt;+(other : BigInt) : BigInt +&lt;/a&gt;, &lt;a href=&quot;int#-(other:BigDecimal)-instance-method&quot;&gt; -(other : BigDecimal)&lt;br/&gt;-(other : BigInt) : BigInt&lt;br/&gt;-(other : BigRational) -&lt;/a&gt;, &lt;a href=&quot;int#/(other:BigRational)-instance-method&quot;&gt; /(other : BigRational) /&lt;/a&gt;, &lt;a href=&quot;int#//(other:Int::Primitive)-instance-method&quot;&gt; //(other : Int::Primitive) //&lt;/a&gt;, &lt;a href=&quot;int#%3C%3C(count:Int)-instance-method&quot;&gt; &amp;lt; &amp;lt;&amp;lt;&lt;/a&gt;, &lt;a href=&quot;int#(other:BigDecimal)-instance-method&quot;&gt; &amp;lt;=&amp;gt;(other : BigDecimal)&lt;br/&gt;&amp;lt;=&amp;gt;(other : BigRational)&lt;br/&gt;&amp;lt;=&amp;gt;(other : Int) : Int32&lt;br/&gt;&amp;lt;=&amp;gt;(other : BigInt) &amp;lt;=&amp;gt;&lt;/a&gt;, &lt;a href=&quot;int#===(char:Char)-instance-method&quot;&gt; ===(char : Char) ===&lt;/a&gt;, &lt;a href=&quot;int#%3E%3E(count:Int)-instance-method&quot;&gt; &amp;gt;&amp;gt;(count : Int) &amp;gt;&amp;gt;&lt;/a&gt;, &lt;a href=&quot;int#abs-instance-method&quot;&gt; abs abs&lt;/a&gt;, &lt;a href=&quot;int#bit(bit)-instance-method&quot;&gt; bit(bit) bit&lt;/a&gt;, &lt;a href=&quot;int#bits_set?(mask)-instance-method&quot;&gt; bits_set?(mask) bits_set?&lt;/a&gt;, &lt;a href=&quot;int#ceil-instance-method&quot;&gt; ceil ceil&lt;/a&gt;, &lt;a href=&quot;int#chr-instance-method&quot;&gt; chr chr&lt;/a&gt;, &lt;a href=&quot;int#day:Time::Span-instance-method&quot;&gt; day : Time::Span day&lt;/a&gt;, &lt;a href=&quot;int#days:Time::Span-instance-method&quot;&gt; days : Time::Span days&lt;/a&gt;, &lt;a href=&quot;int#divisible_by?(num)-instance-method&quot;&gt; divisible_by?(num) divisible_by?&lt;/a&gt;, &lt;a href=&quot;int#downto(to,&amp;amp;block:self-%3E):Nil-instance-method&quot;&gt; downto(to, &amp;amp;block : self -&amp;gt; ) : Nil&lt;br/&gt;downto(to) downto&lt;/a&gt;, &lt;a href=&quot;int#even?-instance-method&quot;&gt; even? even?&lt;/a&gt;, &lt;a href=&quot;int#fdiv(other)-instance-method&quot;&gt; fdiv(other) fdiv&lt;/a&gt;, &lt;a href=&quot;int#floor-instance-method&quot;&gt; floor floor&lt;/a&gt;, &lt;a href=&quot;int#gcd(other:Int)-instance-method&quot;&gt; gcd(other : Int) gcd&lt;/a&gt;, &lt;a href=&quot;int#gcm(other:BigInt):Int-instance-method&quot;&gt; gcm(other : BigInt) : Int gcm&lt;/a&gt;, &lt;a href=&quot;int#hash(hasher)-instance-method&quot;&gt; hash(hasher) hash&lt;/a&gt;, &lt;a href=&quot;int#hour:Time::Span-instance-method&quot;&gt; hour : Time::Span hour&lt;/a&gt;, &lt;a href=&quot;int#hours:Time::Span-instance-method&quot;&gt; hours : Time::Span hours&lt;/a&gt;, &lt;a href=&quot;int#humanize_bytes(io:IO,precision:Int=3,separator='.',*,significant:Bool=true,format:BinaryPrefixFormat=:IEC):Nil-instance-method&quot;&gt; humanize_bytes(io : IO, precision : Int = 3, separator = '.', *, significant : Bool = true, format : BinaryPrefixFormat = :IEC) : Nil&lt;br/&gt;humanize_bytes(precision : Int = 3, separator = '.', *, significant : Bool = true, format : BinaryPrefixFormat = :IEC) : String humanize_bytes&lt;/a&gt;, &lt;a href=&quot;int#lcm(other:Int)-instance-method&quot;&gt; lcm(other : Int)&lt;br/&gt;lcm(other : BigInt) : BigInt lcm&lt;/a&gt;, &lt;a href=&quot;int#microsecond:Time::Span-instance-method&quot;&gt; microsecond : Time::Span microsecond&lt;/a&gt;, &lt;a href=&quot;int#microseconds:Time::Span-instance-method&quot;&gt; microseconds : Time::Span microseconds&lt;/a&gt;, &lt;a href=&quot;int#millisecond:Time::Span-instance-method&quot;&gt; millisecond : Time::Span millisecond&lt;/a&gt;, &lt;a href=&quot;int#milliseconds:Time::Span-instance-method&quot;&gt; milliseconds : Time::Span milliseconds&lt;/a&gt;, &lt;a href=&quot;int#minute:Time::Span-instance-method&quot;&gt; minute : Time::Span minute&lt;/a&gt;, &lt;a href=&quot;int#minutes:Time::Span-instance-method&quot;&gt; minutes : Time::Span minutes&lt;/a&gt;, &lt;a href=&quot;int#modulo(other)-instance-method&quot;&gt; modulo(other) modulo&lt;/a&gt;, &lt;a href=&quot;int#month:Time::MonthSpan-instance-method&quot;&gt; month : Time::MonthSpan month&lt;/a&gt;, &lt;a href=&quot;int#months:Time::MonthSpan-instance-method&quot;&gt; months : Time::MonthSpan months&lt;/a&gt;, &lt;a href=&quot;int#nanosecond:Time::Span-instance-method&quot;&gt; nanosecond : Time::Span nanosecond&lt;/a&gt;, &lt;a href=&quot;int#nanoseconds:Time::Span-instance-method&quot;&gt; nanoseconds : Time::Span nanoseconds&lt;/a&gt;, &lt;a href=&quot;int#odd?-instance-method&quot;&gt; odd? odd?&lt;/a&gt;, &lt;a href=&quot;int#popcount-instance-method&quot;&gt; popcount popcount&lt;/a&gt;, &lt;a href=&quot;int#pred-instance-method&quot;&gt; pred pred&lt;/a&gt;, &lt;a href=&quot;int#remainder(other:Int)-instance-method&quot;&gt; remainder(other : Int) remainder&lt;/a&gt;, &lt;a href=&quot;int#round-instance-method&quot;&gt; round round&lt;/a&gt;, &lt;a href=&quot;int#second:Time::Span-instance-method&quot;&gt; second : Time::Span second&lt;/a&gt;, &lt;a href=&quot;int#seconds:Time::Span-instance-method&quot;&gt; seconds : Time::Span seconds&lt;/a&gt;, &lt;a href=&quot;int#succ-instance-method&quot;&gt; succ succ&lt;/a&gt;, &lt;a href=&quot;int#tdiv(other:Int)-instance-method&quot;&gt; tdiv(other : Int) tdiv&lt;/a&gt;, &lt;a href=&quot;int#times-instance-method&quot;&gt; times&lt;br/&gt;times(&amp;amp;block : self -&amp;gt; ) : Nil times&lt;/a&gt;, &lt;a href=&quot;int#to(to,&amp;amp;block:self-%3E):Nil-instance-method&quot;&gt; to(to, &amp;amp;block : self -&amp;gt; ) : Nil&lt;br/&gt;to(to) to&lt;/a&gt;, &lt;a href=&quot;int#to_big_d-instance-method&quot;&gt; to_big_d to_big_d&lt;/a&gt;, &lt;a href=&quot;int#to_big_i:BigInt-instance-method&quot;&gt; to_big_i : BigInt to_big_i&lt;/a&gt;, &lt;a href=&quot;int#to_big_r-instance-method&quot;&gt; to_big_r to_big_r&lt;/a&gt;, &lt;a href=&quot;int#to_io(io:IO,format:IO::ByteFormat)-instance-method&quot;&gt; to_io(io : IO, format : IO::ByteFormat) to_io&lt;/a&gt;, &lt;a href=&quot;int#to_json(json:JSON::Builder)-instance-method&quot;&gt; to_json(json : JSON::Builder) to_json&lt;/a&gt;, &lt;a href=&quot;int#to_json_object_key-instance-method&quot;&gt; to_json_object_key to_json_object_key&lt;/a&gt;, &lt;a href=&quot;int#to_s:String-instance-method&quot;&gt; to_s : String&lt;br/&gt;to_s(io : IO) : Nil&lt;br/&gt;to_s(base : Int, io : IO, upcase : Bool = false) : Nil&lt;br/&gt;to_s(base : Int, upcase : Bool = false) : String to_s&lt;/a&gt;, &lt;a href=&quot;int#trailing_zeros_count-instance-method&quot;&gt; trailing_zeros_count trailing_zeros_count&lt;/a&gt;, &lt;a href=&quot;int#trunc-instance-method&quot;&gt; trunc trunc&lt;/a&gt;, &lt;a href=&quot;int#upto(to)-instance-method&quot;&gt; upto(to)&lt;br/&gt;upto(to, &amp;amp;block : self -&amp;gt; ) : Nil upto&lt;/a&gt;, &lt;a href=&quot;int#week:Time::Span-instance-method&quot;&gt; week : Time::Span week&lt;/a&gt;, &lt;a href=&quot;int#weeks:Time::Span-instance-method&quot;&gt; weeks : Time::Span weeks&lt;/a&gt;, &lt;a href=&quot;int#year:Time::MonthSpan-instance-method&quot;&gt; year : Time::MonthSpan year&lt;/a&gt;, &lt;a href=&quot;int#years:Time::MonthSpan-instance-method&quot;&gt; years : Time::MonthSpan years&lt;/a&gt;, &lt;a href=&quot;int#~-instance-method&quot;&gt; ~ ~&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;int#%25(other:BigInt):BigInt-instance-method&quot;&gt;% (другое: BigInt): BigInt &lt;br/&gt;% (другое: Int)%&lt;/a&gt; , &lt;a href=&quot;int#&amp;amp;*(other:BigInt):BigInt-instance-method&quot;&gt;&amp;amp; * (другое: BigInt): BigInt &amp;amp; *&lt;/a&gt; , &lt;a href=&quot;int#&amp;amp;**(exponent:Int):self-instance-method&quot;&gt;&amp;amp; ** (экспонента: Int): self &amp;amp; **&lt;/a&gt; , &lt;a href=&quot;int#&amp;amp;+(other:BigInt):BigInt-instance-method&quot;&gt;&amp;amp; + (другое: BigInt): BigInt &amp;amp; +&lt;/a&gt; , &lt;a href=&quot;int#&amp;amp;-(other:BigInt):BigInt-instance-method&quot;&gt;&amp;amp; - (другое: BigInt): BigInt &amp;amp; -&lt;/a&gt; , &lt;a href=&quot;int#*(other:BigDecimal)-instance-method&quot;&gt;* (другое: BigDecimal) &lt;br/&gt;* (другое: BigRational) &lt;br/&gt;* (другое: BigInt): BigInt *&lt;/a&gt; , &lt;a href=&quot;int#**(exponent:Float):Float64-instance-method&quot;&gt;** (показатель степени: Float): Float64 &lt;br/&gt;** ( экспонента: Int): self **&lt;/a&gt; , &lt;a href=&quot;int#+(other:BigDecimal)-instance-method&quot;&gt;+ (другое: BigDecimal) &lt;br/&gt;+ (другое: BigRational) &lt;br/&gt;+ (другое: BigInt): BigInt +&lt;/a&gt; , &lt;a href=&quot;int#-(other:BigDecimal)-instance-method&quot;&gt;- (другое: BigDecimal) &lt;br/&gt;- (другое: BigInt): BigInt &lt;br/&gt;- (другое: BigRational ) -&lt;/a&gt; , &lt;a href=&quot;int#/(other:BigRational)-instance-method&quot;&gt;/ (другое: BigRational) /&lt;/a&gt; ,&lt;a href=&quot;int#//(other:Int::Primitive)-instance-method&quot;&gt;// (другое: Int :: Primitive) //&lt;/a&gt; , &lt;a href=&quot;int#%3C%3C(count:Int)-instance-method&quot;&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/a&gt; , &lt;a href=&quot;int#(other:BigDecimal)-instance-method&quot;&gt;&amp;lt;=&amp;gt; &lt;/a&gt;(другое: BigDecimal) &lt;br/&gt;&amp;lt;=&amp;gt; (другое: BigRational) &amp;lt;=&amp;gt; &lt;br/&gt;(другое: Int): Int32 &lt;br/&gt;&amp;lt;=&amp;gt; (другое: BigInt ) &amp;lt;=&amp;gt; , &lt;a href=&quot;int#===(char:Char)-instance-method&quot;&gt;=== (char: Char) ===&lt;/a&gt; , &lt;a href=&quot;int#%3E%3E(count:Int)-instance-method&quot;&gt;&amp;gt;&amp;gt; (count: Int) &amp;gt;&amp;gt;&lt;/a&gt; , &lt;a href=&quot;int#abs-instance-method&quot;&gt;abs abs&lt;/a&gt; , &lt;a href=&quot;int#bit(bit)-instance-method&quot;&gt;bit (bit) bit&lt;/a&gt; , &lt;a href=&quot;int#bits_set?(mask)-instance-method&quot;&gt;bits_set? (маска) bits_set?&lt;/a&gt; , &lt;a href=&quot;int#ceil-instance-method&quot;&gt;ceil ceil&lt;/a&gt; , &lt;a href=&quot;int#chr-instance-method&quot;&gt;chr chr&lt;/a&gt; , &lt;a href=&quot;int#day:Time::Span-instance-method&quot;&gt;day: Time :: Span day&lt;/a&gt; , &lt;a href=&quot;int#days:Time::Span-instance-method&quot;&gt;days: Time :: Span days&lt;/a&gt; , &lt;a href=&quot;int#divisible_by?(num)-instance-method&quot;&gt;divisible_by? (num) divisible_by?&lt;/a&gt; , &lt;a href=&quot;int#downto(to,&amp;amp;block:self-%3E):Nil-instance-method&quot;&gt;вниз (к, &amp;amp; block: self -&amp;gt;): ноль &lt;br/&gt;вниз (к) вниз&lt;/a&gt; , &lt;a href=&quot;int#even?-instance-method&quot;&gt;даже? четный?&lt;/a&gt; ,&lt;a href=&quot;int#fdiv(other)-instance-method&quot;&gt;fdiv (другое) fdiv&lt;/a&gt; , &lt;a href=&quot;int#floor-instance-method&quot;&gt;этаж этажа&lt;/a&gt; , &lt;a href=&quot;int#gcd(other:Int)-instance-method&quot;&gt;gcd (другое: Int) gcd&lt;/a&gt; , &lt;a href=&quot;int#gcm(other:BigInt):Int-instance-method&quot;&gt;gcm (другое: BigInt): Int gcm&lt;/a&gt; , &lt;a href=&quot;int#hash(hasher)-instance-method&quot;&gt;хэш (хеш) хэш&lt;/a&gt; , &lt;a href=&quot;int#hour:Time::Span-instance-method&quot;&gt;час: время :: время часа&lt;/a&gt; , &lt;a href=&quot;int#hours:Time::Span-instance-method&quot;&gt;часы: время :: часы часа&lt;/a&gt; , &lt;a href=&quot;int#humanize_bytes(io:IO,precision:Int=3,separator='.',*,significant:Bool=true,format:BinaryPrefixFormat=:IEC):Nil-instance-method&quot;&gt;humanize_bytes (io: IO, точность: Int = 3, разделитель = '.', *, значимый: Bool = true, формат: BinaryPrefixFormat =: IEC): ноль &lt;br/&gt;humanize_bytes (точность: Int = 3, разделитель = '.', *, значительное: Bool = истина, формат: BinaryPrefixFormat =: IEC): String humanize_bytes&lt;/a&gt; , &lt;a href=&quot;int#lcm(other:Int)-instance-method&quot;&gt;LCM (другой: Int) &lt;br/&gt;LCM (другой: BigInt): BigInt LCM&lt;/a&gt; , &lt;a href=&quot;int#microsecond:Time::Span-instance-method&quot;&gt;микросекунды: Время :: Span микросекунда&lt;/a&gt; ,&lt;a href=&quot;int#microseconds:Time::Span-instance-method&quot;&gt;микросекунды: время :: интервал микросекунд&lt;/a&gt; , &lt;a href=&quot;int#millisecond:Time::Span-instance-method&quot;&gt;миллисекунда: время :: интервал миллисекунды&lt;/a&gt; , &lt;a href=&quot;int#milliseconds:Time::Span-instance-method&quot;&gt;миллисекунды: время :: интервал миллисекунды&lt;/a&gt; , &lt;a href=&quot;int#minute:Time::Span-instance-method&quot;&gt;минуты: время :: интервал минуты&lt;/a&gt; , &lt;a href=&quot;int#minutes:Time::Span-instance-method&quot;&gt;минуты: время :: интервал минут&lt;/a&gt; , &lt;a href=&quot;int#modulo(other)-instance-method&quot;&gt;по модулю (прочее) по модулю&lt;/a&gt; , &lt;a href=&quot;int#month:Time::MonthSpan-instance-method&quot;&gt;месяц: время: : MonthSpan month&lt;/a&gt; , &lt;a href=&quot;int#months:Time::MonthSpan-instance-method&quot;&gt;месяцы: время :: MonthSpan месяцы&lt;/a&gt; , &lt;a href=&quot;int#nanosecond:Time::Span-instance-method&quot;&gt;наносекунда: время :: диапазон наносекунд&lt;/a&gt; , &lt;a href=&quot;int#nanoseconds:Time::Span-instance-method&quot;&gt;наносекунды: время :: интервал наносекунд&lt;/a&gt; , &lt;a href=&quot;int#odd?-instance-method&quot;&gt;нечетное? странный?&lt;/a&gt; , &lt;a href=&quot;int#popcount-instance-method&quot;&gt;Popcount popcount&lt;/a&gt; , &lt;a href=&quot;int#pred-instance-method&quot;&gt;пред пред&lt;/a&gt; , &lt;a href=&quot;int#remainder(other:Int)-instance-method&quot;&gt;остальное (другой: Int) Остаток&lt;/a&gt; , &lt;a href=&quot;int#round-instance-method&quot;&gt;круглый&lt;/a&gt; ,&lt;a href=&quot;int#second:Time::Span-instance-method&quot;&gt;second: Time :: Span секунда&lt;/a&gt; , &lt;a href=&quot;int#seconds:Time::Span-instance-method&quot;&gt;секунды: Time :: Span секунды&lt;/a&gt; , &lt;a href=&quot;int#succ-instance-method&quot;&gt;succ succ&lt;/a&gt; , &lt;a href=&quot;int#tdiv(other:Int)-instance-method&quot;&gt;tdiv (другие: Int) tdiv&lt;/a&gt; , &lt;a href=&quot;int#times-instance-method&quot;&gt;времена &lt;br/&gt;раз (&amp;amp; block: self -&amp;gt;): ноль раз&lt;/a&gt; , &lt;a href=&quot;int#to(to,&amp;amp;block:self-%3E):Nil-instance-method&quot;&gt;до (до, &amp;amp; block: self -&amp;gt;) : Ноль &lt;br/&gt;к (к) к&lt;/a&gt; , &lt;a href=&quot;int#to_big_d-instance-method&quot;&gt;to_big_d to_big_d&lt;/a&gt; , &lt;a href=&quot;int#to_big_i:BigInt-instance-method&quot;&gt;to_big_i: BigInt to_big_i&lt;/a&gt; , &lt;a href=&quot;int#to_big_r-instance-method&quot;&gt;to_big_r to_big_r&lt;/a&gt; , &lt;a href=&quot;int#to_io(io:IO,format:IO::ByteFormat)-instance-method&quot;&gt;to_io (Io: IO, формат: IO :: ByteFormat) to_io&lt;/a&gt; , &lt;a href=&quot;int#to_json(json:JSON::Builder)-instance-method&quot;&gt;to_json (JSON: JSON :: Builder) to_json&lt;/a&gt; , &lt;a href=&quot;int#to_json_object_key-instance-method&quot;&gt;to_json_object_key to_json_object_key&lt;/a&gt; , &lt;a href=&quot;int#to_s:String-instance-method&quot;&gt;to_s: Строка &lt;br/&gt;to_s (io: IO): ноль &lt;br/&gt;to_s (база: Int, io: IO, верхний регистр: Bool = false): ноль&lt;br/&gt;to_s (base: Int, upcase: Bool = false): строка to_s&lt;/a&gt; , &lt;a href=&quot;int#trailing_zeros_count-instance-method&quot;&gt;trailing_zeros_count trailing_zeros_count&lt;/a&gt; , &lt;a href=&quot;int#trunc-instance-method&quot;&gt;усечение trunc&lt;/a&gt; , &lt;a href=&quot;int#upto(to)-instance-method&quot;&gt;upto (to) &lt;br/&gt;upto (to, &amp;amp; block: self -&amp;gt;): ноль upto&lt;/a&gt; , &lt;a href=&quot;int#week:Time::Span-instance-method&quot;&gt;неделя: время :: неделя пролета&lt;/a&gt; , &lt;a href=&quot;int#weeks:Time::Span-instance-method&quot;&gt;недели: Время :: &lt;/a&gt;&lt;a href=&quot;int#year:Time::MonthSpan-instance-method&quot;&gt;Интервалы в годах&lt;/a&gt; , год: Время :: МесяцВремена года , &lt;a href=&quot;int#years:Time::MonthSpan-instance-method&quot;&gt;годы: Время :: МесяцВремя года&lt;/a&gt; , &lt;a href=&quot;int#~-instance-method&quot;&gt;~ ~&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="60454e9646653430b81a1a62ef074aa5b8f73883" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;io#copy(src,dst,limit:Int):UInt64-class-method&quot;&gt; copy(src, dst, limit : Int) : UInt64&lt;br/&gt;copy(src, dst) : UInt64 copy&lt;/a&gt;, &lt;a href=&quot;io#pipe(read_blocking=false,write_blocking=false):Tuple(IO::FileDescriptor,IO::FileDescriptor)-class-method&quot;&gt; pipe(read_blocking = false, write_blocking = false) : Tuple(IO::FileDescriptor, IO::FileDescriptor)&lt;br/&gt;pipe(read_blocking = false, write_blocking = false, &amp;amp;block) pipe&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;io#copy(src,dst,limit:Int):UInt64-class-method&quot;&gt;copy (src, dst, limit: Int): UInt64 &lt;br/&gt;copy (src, dst): UInt64 copy&lt;/a&gt; , &lt;a href=&quot;io#pipe(read_blocking=false,write_blocking=false):Tuple(IO::FileDescriptor,IO::FileDescriptor)-class-method&quot;&gt;pipe (read_blocking = false, write_blocking = false): Tuple (IO :: FileDescriptor, IO :: FileDescriptor) &lt;br/&gt;pipe (read_blocking = false , write_blocking = false, &amp;amp; block) pipe&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="17b693d8ab9fb1f89887a87f94e8d0cf21f2c246" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;io#self-instance-method&quot;&gt; &amp;lt;self &amp;lt;&amp;lt;&lt;/a&gt;, &lt;a href=&quot;io#close-instance-method&quot;&gt; close close&lt;/a&gt;, &lt;a href=&quot;io#closed?-instance-method&quot;&gt; closed? closed?&lt;/a&gt;, &lt;a href=&quot;io#each_byte(&amp;amp;block):Nil-instance-method&quot;&gt; each_byte(&amp;amp;block) : Nil&lt;br/&gt;each_byte each_byte&lt;/a&gt;, &lt;a href=&quot;io#each_char(&amp;amp;block):Nil-instance-method&quot;&gt; each_char(&amp;amp;block) : Nil&lt;br/&gt;each_char each_char&lt;/a&gt;, &lt;a href=&quot;io#each_line(*args,**options,&amp;amp;block:String-%3E):Nil-instance-method&quot;&gt; each_line(*args, **options, &amp;amp;block : String -&amp;gt; ) : Nil&lt;br/&gt;each_line(*args, **options) each_line&lt;/a&gt;, &lt;a href=&quot;io#encoding:String-instance-method&quot;&gt; encoding : String encoding&lt;/a&gt;, &lt;a href=&quot;io#flush-instance-method&quot;&gt; flush flush&lt;/a&gt;, &lt;a href=&quot;io#gets(delimiter:Char,limit:Int,chomp=false):String?-instance-method&quot;&gt; gets(delimiter : Char, limit : Int, chomp = false) : String?&lt;br/&gt;gets(delimiter : Char, chomp = false) : String?&lt;br/&gt;gets(chomp = true) : String?&lt;br/&gt;gets(limit : Int, chomp = false) : String?&lt;br/&gt;gets(delimiter : String, chomp = false) : String? gets&lt;/a&gt;, &lt;a href=&quot;io#gets_to_end:String-instance-method&quot;&gt; gets_to_end : String gets_to_end&lt;/a&gt;, &lt;a href=&quot;io#peek:Bytes?-instance-method&quot;&gt; peek : Bytes? peek&lt;/a&gt;, &lt;a href=&quot;io#pos-instance-method&quot;&gt; pos pos&lt;/a&gt;, &lt;a href=&quot;io#pos=(value)-instance-method&quot;&gt; pos=(value) pos=&lt;/a&gt;, &lt;a href=&quot;io#print(*objects:UNDERSCORE):Nil-instance-method&quot;&gt; print(*objects : UNDERSCORE) : Nil&lt;br/&gt;print(obj) : Nil print&lt;/a&gt;, &lt;a href=&quot;io#printf(format_string,*args):Nil-instance-method&quot;&gt; printf(format_string, *args) : Nil&lt;br/&gt;printf(format_string, args : Array | Tuple) : Nil printf&lt;/a&gt;, &lt;a href=&quot;io#puts(*objects:UNDERSCORE):Nil-instance-method&quot;&gt; puts(*objects : UNDERSCORE) : Nil&lt;br/&gt;puts : Nil&lt;br/&gt;puts(obj) : Nil&lt;br/&gt;puts(string : String) : Nil puts&lt;/a&gt;, &lt;a href=&quot;io#read(slice:Bytes)-instance-method&quot;&gt; read(slice : Bytes) read&lt;/a&gt;, &lt;a href=&quot;io#read_at(offset,bytesize,&amp;amp;block)-instance-method&quot;&gt; read_at(offset, bytesize, &amp;amp;block) read_at&lt;/a&gt;, &lt;a href=&quot;io#read_byte:UInt8?-instance-method&quot;&gt; read_byte : UInt8? read_byte&lt;/a&gt;, &lt;a href=&quot;io#read_bytes(type,format:IO::ByteFormat=IO::ByteFormat::SystemEndian)-instance-method&quot;&gt; read_bytes(type, format : IO::ByteFormat = IO::ByteFormat::SystemEndian) read_bytes&lt;/a&gt;, &lt;a href=&quot;io#read_char:Char?-instance-method&quot;&gt; read_char : Char? read_char&lt;/a&gt;, &lt;a href=&quot;io#read_fully(slice:Bytes)-instance-method&quot;&gt; read_fully(slice : Bytes) read_fully&lt;/a&gt;, &lt;a href=&quot;io#read_fully?(slice:Bytes)-instance-method&quot;&gt; read_fully?(slice : Bytes) read_fully?&lt;/a&gt;, &lt;a href=&quot;io#read_line(*args,**options):String-instance-method&quot;&gt; read_line(*args, **options) : String read_line&lt;/a&gt;, &lt;a href=&quot;io#read_string(bytesize:Int):String-instance-method&quot;&gt; read_string(bytesize : Int) : String read_string&lt;/a&gt;, &lt;a href=&quot;io#read_utf8(slice:Bytes)-instance-method&quot;&gt; read_utf8(slice : Bytes) read_utf8&lt;/a&gt;, &lt;a href=&quot;io#read_utf8_byte-instance-method&quot;&gt; read_utf8_byte read_utf8_byte&lt;/a&gt;, &lt;a href=&quot;io#rewind-instance-method&quot;&gt; rewind rewind&lt;/a&gt;, &lt;a href=&quot;io#seek(offset,whence:Seek=Seek::Set)-instance-method&quot;&gt; seek(offset, whence : Seek = Seek::Set) seek&lt;/a&gt;, &lt;a href=&quot;io#set_encoding(encoding:String,invalid:Symbol?=nil)-instance-method&quot;&gt; set_encoding(encoding : String, invalid : Symbol? = nil) set_encoding&lt;/a&gt;, &lt;a href=&quot;io#skip(bytes_count:Int):Nil-instance-method&quot;&gt; skip(bytes_count : Int) : Nil skip&lt;/a&gt;, &lt;a href=&quot;io#skip_to_end:Nil-instance-method&quot;&gt; skip_to_end : Nil skip_to_end&lt;/a&gt;, &lt;a href=&quot;io#tell-instance-method&quot;&gt; tell tell&lt;/a&gt;, &lt;a href=&quot;io#tty?:Bool-instance-method&quot;&gt; tty? : Bool tty?&lt;/a&gt;, &lt;a href=&quot;io#write(slice:Bytes):Nil-instance-method&quot;&gt; write(slice : Bytes) : Nil write&lt;/a&gt;, &lt;a href=&quot;io#write_byte(byte:UInt8)-instance-method&quot;&gt; write_byte(byte : UInt8) write_byte&lt;/a&gt;, &lt;a href=&quot;io#write_bytes(object,format:IO::ByteFormat=IO::ByteFormat::SystemEndian)-instance-method&quot;&gt; write_bytes(object, format : IO::ByteFormat = IO::ByteFormat::SystemEndian) write_bytes&lt;/a&gt;, &lt;a href=&quot;io#write_utf8(slice:Bytes)-instance-method&quot;&gt; write_utf8(slice : Bytes) write_utf8&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;io#self-instance-method&quot;&gt;&amp;lt;self &amp;lt;&amp;lt;&lt;/a&gt; , &lt;a href=&quot;io#close-instance-method&quot;&gt;закрыть закрыть&lt;/a&gt; , &lt;a href=&quot;io#closed?-instance-method&quot;&gt;закрыть? закрыто?&lt;/a&gt; , &lt;a href=&quot;io#each_byte(&amp;amp;block):Nil-instance-method&quot;&gt;each_byte (&amp;amp; block): ноль &lt;br/&gt;each_byte each_byte&lt;/a&gt; , &lt;a href=&quot;io#each_char(&amp;amp;block):Nil-instance-method&quot;&gt;each_char (&amp;amp; block): ноль &lt;br/&gt;each_char each_char&lt;/a&gt; , &lt;a href=&quot;io#each_line(*args,**options,&amp;amp;block:String-%3E):Nil-instance-method&quot;&gt;each_line (* аргументы, ** параметры, &amp;amp; block: String -&amp;gt;): ноль &lt;br/&gt;each_line (* args, ** options) each_line&lt;/a&gt; , &lt;a href=&quot;io#encoding:String-instance-method&quot;&gt;кодировка: String кодирование&lt;/a&gt; , &lt;a href=&quot;io#flush-instance-method&quot;&gt;флэш-флэш&lt;/a&gt; , &lt;a href=&quot;io#gets(delimiter:Char,limit:Int,chomp=false):String?-instance-method&quot;&gt;получает (разделитель: Char, предел: Int, chomp = false): String? &lt;br/&gt;получает (разделитель: Char, chomp = false): строка? &lt;br/&gt;get (chomp = true): строка? &lt;br/&gt;get (limit: Int, chomp = false): Строка? &lt;br/&gt;get (разделитель: String, chomp = false): String? получает&lt;/a&gt; ,&lt;a href=&quot;io#gets_to_end:String-instance-method&quot;&gt;gets_to_end: String gets_to_end&lt;/a&gt; , &lt;a href=&quot;io#peek:Bytes?-instance-method&quot;&gt;peek: байт? peek&lt;/a&gt; , &lt;a href=&quot;io#pos-instance-method&quot;&gt;pos pos&lt;/a&gt; , &lt;a href=&quot;io#pos=(value)-instance-method&quot;&gt;pos = (значение) pos =&lt;/a&gt; , &lt;a href=&quot;io#print(*objects:UNDERSCORE):Nil-instance-method&quot;&gt;print (* объекты: UNDERSCORE): ноль &lt;br/&gt;print (obj): ноль print&lt;/a&gt; , &lt;a href=&quot;io#printf(format_string,*args):Nil-instance-method&quot;&gt;printf (format_string, * args): ноль &lt;br/&gt;printf (format_string, args: Array | Tuple): Ноль printf&lt;/a&gt; , &lt;a href=&quot;io#puts(*objects:UNDERSCORE):Nil-instance-method&quot;&gt;put (* объекты: UNDERSCORE): Ноль &lt;br/&gt;устанавливает: Нил &lt;br/&gt;ставит (obj): Ноль &lt;br/&gt;ставит (строка: строка): Ноль ставит&lt;/a&gt; , &lt;a href=&quot;io#read(slice:Bytes)-instance-method&quot;&gt;читает (фрагмент: байты), читает&lt;/a&gt; , &lt;a href=&quot;io#read_at(offset,bytesize,&amp;amp;block)-instance-method&quot;&gt;read_at (смещение, размер в байтах и ​​блокирует) read_at&lt;/a&gt; , &lt;a href=&quot;io#read_byte:UInt8?-instance-method&quot;&gt;read_byte : UInt8? read_byte&lt;/a&gt; , &lt;a href=&quot;io#read_bytes(type,format:IO::ByteFormat=IO::ByteFormat::SystemEndian)-instance-method&quot;&gt;read_bytes (тип, формат: IO :: ByteFormat = IO :: ByteFormat :: SystemEndian) read_bytes&lt;/a&gt;, &lt;a href=&quot;io#read_char:Char?-instance-method&quot;&gt;read_char: Char? read_char&lt;/a&gt; , &lt;a href=&quot;io#read_fully(slice:Bytes)-instance-method&quot;&gt;read_fully (slice: Bytes) read_fully&lt;/a&gt; , &lt;a href=&quot;io#read_fully?(slice:Bytes)-instance-method&quot;&gt;read_fully? (slice: Bytes) read_fully?&lt;/a&gt; , &lt;a href=&quot;io#read_line(*args,**options):String-instance-method&quot;&gt;read_line (* args, ** options): строка read_line&lt;/a&gt; , &lt;a href=&quot;io#read_string(bytesize:Int):String-instance-method&quot;&gt;read_string (bytesize: Int): строка read_string&lt;/a&gt; , &lt;a href=&quot;io#read_utf8(slice:Bytes)-instance-method&quot;&gt;read_utf8 (slice: Bytes) read_utf8&lt;/a&gt; , &lt;a href=&quot;io#read_utf8_byte-instance-method&quot;&gt;read_utf8_byte read_utf8_byte&lt;/a&gt; , &lt;a href=&quot;io#rewind-instance-method&quot;&gt;перемотка назад&lt;/a&gt; , перемотка назад , &lt;a href=&quot;io#seek(offset,whence:Seek=Seek::Set)-instance-method&quot;&gt;поиск (смещение, отсюда: Seek = Seek :: Set ) искать&lt;/a&gt; , &lt;a href=&quot;io#set_encoding(encoding:String,invalid:Symbol?=nil)-instance-method&quot;&gt;set_encoding (кодировка: строка, недействительный: символ? = ноль) set_encoding&lt;/a&gt; , &lt;a href=&quot;io#skip(bytes_count:Int):Nil-instance-method&quot;&gt;пропустить (bytes_count: Int): ноль пропустить&lt;/a&gt; , &lt;a href=&quot;io#skip_to_end:Nil-instance-method&quot;&gt;skip_to_end: ноль skip_to_end&lt;/a&gt; , &lt;a href=&quot;io#tell-instance-method&quot;&gt;сказать, сказать&lt;/a&gt; ,&lt;a href=&quot;io#tty?:Bool-instance-method&quot;&gt;терминал? : Bool tty?&lt;/a&gt; , &lt;a href=&quot;io#write(slice:Bytes):Nil-instance-method&quot;&gt;запись (фрагмент: байты): &lt;/a&gt;&lt;a href=&quot;io#write_byte(byte:UInt8)-instance-method&quot;&gt;нулевая &lt;/a&gt;запись , запись_байта (байт: UInt8) запись_байта , &lt;a href=&quot;io#write_bytes(object,format:IO::ByteFormat=IO::ByteFormat::SystemEndian)-instance-method&quot;&gt;запись_байта (объект, формат: IO :: ByteFormat = IO :: ByteFormat :: SystemEndian) запись_байта&lt;/a&gt; , &lt;a href=&quot;io#write_utf8(slice:Bytes)-instance-method&quot;&gt;запись_utf8 (фрагмент: байты) write_utf8&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4ba1cc3eedaef6a4141c6c51e5f0b659ef5bbf4d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;io/buffered#buffer_size-instance-method&quot;&gt; buffer_size buffer_size&lt;/a&gt;, &lt;a href=&quot;io/buffered#buffer_size=(value)-instance-method&quot;&gt; buffer_size=(value) buffer_size=&lt;/a&gt;, &lt;a href=&quot;io/buffered#close:Nil-instance-method&quot;&gt; close : Nil close&lt;/a&gt;, &lt;a href=&quot;io/buffered#flush-instance-method&quot;&gt; flush flush&lt;/a&gt;, &lt;a href=&quot;io/buffered#peek:Bytes?-instance-method&quot;&gt; peek : Bytes? peek&lt;/a&gt;, &lt;a href=&quot;io/buffered#read(slice:Bytes)-instance-method&quot;&gt; read(slice : Bytes) read&lt;/a&gt;, &lt;a href=&quot;io/buffered#read_buffering=(read_buffering)-instance-method&quot;&gt; read_buffering=(read_buffering) read_buffering=&lt;/a&gt;, &lt;a href=&quot;io/buffered#read_buffering?-instance-method&quot;&gt; read_buffering? read_buffering?&lt;/a&gt;, &lt;a href=&quot;io/buffered#rewind-instance-method&quot;&gt; rewind rewind&lt;/a&gt;, &lt;a href=&quot;io/buffered#sync=(sync)-instance-method&quot;&gt; sync=(sync) sync=&lt;/a&gt;, &lt;a href=&quot;io/buffered#sync?-instance-method&quot;&gt; sync? sync?&lt;/a&gt;, &lt;a href=&quot;io/buffered#unbuffered_close-instance-method&quot;&gt; unbuffered_close unbuffered_close&lt;/a&gt;, &lt;a href=&quot;io/buffered#unbuffered_flush-instance-method&quot;&gt; unbuffered_flush unbuffered_flush&lt;/a&gt;, &lt;a href=&quot;io/buffered#unbuffered_read(slice:Bytes)-instance-method&quot;&gt; unbuffered_read(slice : Bytes) unbuffered_read&lt;/a&gt;, &lt;a href=&quot;io/buffered#unbuffered_rewind-instance-method&quot;&gt; unbuffered_rewind unbuffered_rewind&lt;/a&gt;, &lt;a href=&quot;io/buffered#unbuffered_write(slice:Bytes)-instance-method&quot;&gt; unbuffered_write(slice : Bytes) unbuffered_write&lt;/a&gt;, &lt;a href=&quot;io/buffered#write(slice:Bytes):Nil-instance-method&quot;&gt; write(slice : Bytes) : Nil write&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;io/buffered#buffer_size-instance-method&quot;&gt;buffer_size buffer_size&lt;/a&gt; , &lt;a href=&quot;io/buffered#buffer_size=(value)-instance-method&quot;&gt;buffer_size = (значение) buffer_size =&lt;/a&gt; , &lt;a href=&quot;io/buffered#close:Nil-instance-method&quot;&gt;close: ноль закрыть&lt;/a&gt; , &lt;a href=&quot;io/buffered#flush-instance-method&quot;&gt;очистить флэш&lt;/a&gt; , &lt;a href=&quot;io/buffered#peek:Bytes?-instance-method&quot;&gt;посмотреть: байты? заглянуть&lt;/a&gt; , &lt;a href=&quot;io/buffered#read(slice:Bytes)-instance-method&quot;&gt;прочитать (фрагмент: байты), прочитать&lt;/a&gt; , &lt;a href=&quot;io/buffered#read_buffering=(read_buffering)-instance-method&quot;&gt;read_buffering = (read_buffering) read_buffering =&lt;/a&gt; , &lt;a href=&quot;io/buffered#read_buffering?-instance-method&quot;&gt;read_buffering? read_buffering?&lt;/a&gt; , &lt;a href=&quot;io/buffered#rewind-instance-method&quot;&gt;перемотка перемотка&lt;/a&gt; , &lt;a href=&quot;io/buffered#sync=(sync)-instance-method&quot;&gt;синхронизация = (синхронизация) синхронизация =&lt;/a&gt; , &lt;a href=&quot;io/buffered#sync?-instance-method&quot;&gt;синхронизация? синхронизация?&lt;/a&gt; , &lt;a href=&quot;io/buffered#unbuffered_close-instance-method&quot;&gt;unbuffered_close unbuffered_close&lt;/a&gt; , &lt;a href=&quot;io/buffered#unbuffered_flush-instance-method&quot;&gt;unbuffered_flush unbuffered_flush&lt;/a&gt; , &lt;a href=&quot;io/buffered#unbuffered_read(slice:Bytes)-instance-method&quot;&gt;unbuffered_read (фрагмент: байты) unbuffered_read&lt;/a&gt; , &lt;a href=&quot;io/buffered#unbuffered_rewind-instance-method&quot;&gt;unbuffered_rewind unbuffered_rewind&lt;/a&gt; ,&lt;a href=&quot;io/buffered#unbuffered_write(slice:Bytes)-instance-method&quot;&gt;unbuffered_write (фрагмент: байты) unbuffered_write&lt;/a&gt; , &lt;a href=&quot;io/buffered#write(slice:Bytes):Nil-instance-method&quot;&gt;запись (фрагмент: байты): нулевая запись&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ce27b7a79f72a9f2bc4da2a6f25c1d243a4d730d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;io/evented#evented_close-instance-method&quot;&gt; evented_close evented_close&lt;/a&gt;, &lt;a href=&quot;io/evented#evented_read(slice:Bytes,errno_msg:String,&amp;amp;block):Int32-instance-method&quot;&gt; evented_read(slice : Bytes, errno_msg : String, &amp;amp;block) : Int32 evented_read&lt;/a&gt;, &lt;a href=&quot;io/evented#evented_reopen-instance-method&quot;&gt; evented_reopen evented_reopen&lt;/a&gt;, &lt;a href=&quot;io/evented#evented_send(slice:Bytes,errno_msg:String,&amp;amp;block):Int32-instance-method&quot;&gt; evented_send(slice : Bytes, errno_msg : String, &amp;amp;block) : Int32 evented_send&lt;/a&gt;, &lt;a href=&quot;io/evented#evented_write(slice:Bytes,errno_msg:String,&amp;amp;block):Nil-instance-method&quot;&gt; evented_write(slice : Bytes, errno_msg : String, &amp;amp;block) : Nil evented_write&lt;/a&gt;, &lt;a href=&quot;io/evented#read_timeout:Time::Span?-instance-method&quot;&gt; read_timeout : Time::Span? read_timeout&lt;/a&gt;, &lt;a href=&quot;io/evented#read_timeout=(read_timeout:Number):Number-instance-method&quot;&gt; read_timeout=(read_timeout : Number) : Number&lt;br/&gt;read_timeout=(timeout : Time::Span?) : Time::Span? read_timeout=&lt;/a&gt;, &lt;a href=&quot;io/evented#write_timeout:Time::Span?-instance-method&quot;&gt; write_timeout : Time::Span? write_timeout&lt;/a&gt;, &lt;a href=&quot;io/evented#write_timeout=(write_timeout:Number):Number-instance-method&quot;&gt; write_timeout=(write_timeout : Number) : Number&lt;br/&gt;write_timeout=(timeout : Time::Span?) : Time::Span? write_timeout=&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;io/evented#evented_close-instance-method&quot;&gt;evented_close evented_close&lt;/a&gt; , &lt;a href=&quot;io/evented#evented_read(slice:Bytes,errno_msg:String,&amp;amp;block):Int32-instance-method&quot;&gt;evented_read (ломтик: Б, errno_msg: String, и блок): Int32 evented_read&lt;/a&gt; , &lt;a href=&quot;io/evented#evented_reopen-instance-method&quot;&gt;evented_reopen evented_reopen&lt;/a&gt; , &lt;a href=&quot;io/evented#evented_send(slice:Bytes,errno_msg:String,&amp;amp;block):Int32-instance-method&quot;&gt;evented_send (ломтик: Б, errno_msg: String, и блок): Int32 evented_send&lt;/a&gt; , &lt;a href=&quot;io/evented#evented_write(slice:Bytes,errno_msg:String,&amp;amp;block):Nil-instance-method&quot;&gt;evented_write (ломтик: Б, errno_msg: String, и блок) : Ноль evented_write&lt;/a&gt; , &lt;a href=&quot;io/evented#read_timeout:Time::Span?-instance-method&quot;&gt;read_timeout: Time :: Span? read_timeout&lt;/a&gt; , &lt;a href=&quot;io/evented#read_timeout=(read_timeout:Number):Number-instance-method&quot;&gt;read_timeout = (read_timeout: Number): число &lt;br/&gt;read_timeout = (timeout: Time :: Span?): Time :: Span? read_timeout =&lt;/a&gt; , &lt;a href=&quot;io/evented#write_timeout:Time::Span?-instance-method&quot;&gt;write_timeout: Time :: Span? write_timeout&lt;/a&gt; , &lt;a href=&quot;io/evented#write_timeout=(write_timeout:Number):Number-instance-method&quot;&gt;write_timeout = (write_timeout: Number): число &lt;br/&gt;write_timeout = (timeout: Time :: Span?): Time :: Span? write_timeout =&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="076d216d94b1b060c79a373531caf31ab83f3ab4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;io/filedescriptor#blocking-instance-method&quot;&gt; blocking blocking&lt;/a&gt;, &lt;a href=&quot;io/filedescriptor#blocking=(value)-instance-method&quot;&gt; blocking=(value) blocking=&lt;/a&gt;, &lt;a href=&quot;io/filedescriptor#close_on_exec=(value:Bool)-instance-method&quot;&gt; close_on_exec=(value : Bool) close_on_exec=&lt;/a&gt;, &lt;a href=&quot;io/filedescriptor#close_on_exec?-instance-method&quot;&gt; close_on_exec? close_on_exec?&lt;/a&gt;, &lt;a href=&quot;io/filedescriptor#closed?:Bool-instance-method&quot;&gt; closed? : Bool closed?&lt;/a&gt;, &lt;a href=&quot;io/filedescriptor#cooked(&amp;amp;block)-instance-method&quot;&gt; cooked(&amp;amp;block) cooked&lt;/a&gt;, &lt;a href=&quot;io/filedescriptor#cooked!-instance-method&quot;&gt; cooked! cooked!&lt;/a&gt;, &lt;a href=&quot;io/filedescriptor#fcntl(cmd,arg=0)-instance-method&quot;&gt; fcntl(cmd, arg = 0) fcntl&lt;/a&gt;, &lt;a href=&quot;io/filedescriptor#fd:Int32-instance-method&quot;&gt; fd : Int32 fd&lt;/a&gt;, &lt;a href=&quot;io/filedescriptor#finalize-instance-method&quot;&gt; finalize finalize&lt;/a&gt;, &lt;a href=&quot;io/filedescriptor#info-instance-method&quot;&gt; info info&lt;/a&gt;, &lt;a href=&quot;io/filedescriptor#inspect(io:IO):Nil-instance-method&quot;&gt; inspect(io : IO) : Nil inspect&lt;/a&gt;, &lt;a href=&quot;io/filedescriptor#noecho(&amp;amp;block)-instance-method&quot;&gt; noecho(&amp;amp;block) noecho&lt;/a&gt;, &lt;a href=&quot;io/filedescriptor#noecho!-instance-method&quot;&gt; noecho! noecho!&lt;/a&gt;, &lt;a href=&quot;io/filedescriptor#pos-instance-method&quot;&gt; pos pos&lt;/a&gt;, &lt;a href=&quot;io/filedescriptor#pos=(value)-instance-method&quot;&gt; pos=(value) pos=&lt;/a&gt;, &lt;a href=&quot;io/filedescriptor#pretty_print(pp)-instance-method&quot;&gt; pretty_print(pp) pretty_print&lt;/a&gt;, &lt;a href=&quot;io/filedescriptor#raw(&amp;amp;block)-instance-method&quot;&gt; raw(&amp;amp;block) raw&lt;/a&gt;, &lt;a href=&quot;io/filedescriptor#raw!-instance-method&quot;&gt; raw! raw!&lt;/a&gt;, &lt;a href=&quot;io/filedescriptor#reopen(other:IO::FileDescriptor)-instance-method&quot;&gt; reopen(other : IO::FileDescriptor) reopen&lt;/a&gt;, &lt;a href=&quot;io/filedescriptor#seek(offset,whence:Seek=Seek::Set)-instance-method&quot;&gt; seek(offset, whence : Seek = Seek::Set)&lt;br/&gt;seek(offset, whence : Seek = Seek::Set, &amp;amp;block) seek&lt;/a&gt;, &lt;a href=&quot;io/filedescriptor#tty?-instance-method&quot;&gt; tty? tty?&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;io/filedescriptor#blocking-instance-method&quot;&gt;blocking blocking&lt;/a&gt; , &lt;a href=&quot;io/filedescriptor#blocking=(value)-instance-method&quot;&gt;blocking = (значение) blocking =&lt;/a&gt; , &lt;a href=&quot;io/filedescriptor#close_on_exec=(value:Bool)-instance-method&quot;&gt;close_on_exec = (значение: Bool) close_on_exec =&lt;/a&gt; , &lt;a href=&quot;io/filedescriptor#close_on_exec?-instance-method&quot;&gt;close_on_exec? close_on_exec?&lt;/a&gt; , &lt;a href=&quot;io/filedescriptor#closed?:Bool-instance-method&quot;&gt;Закрыты? : Бул закрыто?&lt;/a&gt; , &lt;a href=&quot;io/filedescriptor#cooked(&amp;amp;block)-instance-method&quot;&gt;приготовленный (и блок) приготовленный&lt;/a&gt; , &lt;a href=&quot;io/filedescriptor#cooked!-instance-method&quot;&gt;приготовленный! приготовлено!&lt;/a&gt; , &lt;a href=&quot;io/filedescriptor#fcntl(cmd,arg=0)-instance-method&quot;&gt;fcntl (cmd, arg = 0) fcntl&lt;/a&gt; , &lt;a href=&quot;io/filedescriptor#fd:Int32-instance-method&quot;&gt;fd: Int32 fd&lt;/a&gt; , &lt;a href=&quot;io/filedescriptor#finalize-instance-method&quot;&gt;финализировать финализировать&lt;/a&gt; , &lt;a href=&quot;io/filedescriptor#info-instance-method&quot;&gt;инфо-информацию&lt;/a&gt; , &lt;a href=&quot;io/filedescriptor#inspect(io:IO):Nil-instance-method&quot;&gt;инспектировать (io: IO): ноль инспектировать&lt;/a&gt; , &lt;a href=&quot;io/filedescriptor#noecho(&amp;amp;block)-instance-method&quot;&gt;noecho (&amp;amp; block) noecho&lt;/a&gt; , &lt;a href=&quot;io/filedescriptor#noecho!-instance-method&quot;&gt;noecho! NoEcho!&lt;/a&gt; , &lt;a href=&quot;io/filedescriptor#pos-instance-method&quot;&gt;pos pos&lt;/a&gt; , &lt;a href=&quot;io/filedescriptor#pos=(value)-instance-method&quot;&gt;pos = (значение) pos =&lt;/a&gt; , &lt;a href=&quot;io/filedescriptor#pretty_print(pp)-instance-method&quot;&gt;pretty_print (pp) pretty_print&lt;/a&gt; ,&lt;a href=&quot;io/filedescriptor#raw(&amp;amp;block)-instance-method&quot;&gt;сырье (и блок) сырье&lt;/a&gt; , &lt;a href=&quot;io/filedescriptor#raw!-instance-method&quot;&gt;сырье! сырье! &lt;/a&gt;, &lt;a href=&quot;io/filedescriptor#reopen(other:IO::FileDescriptor)-instance-method&quot;&gt;открыть (прочее: IO :: FileDescriptor) открыть&lt;/a&gt; , &lt;a href=&quot;io/filedescriptor#seek(offset,whence:Seek=Seek::Set)-instance-method&quot;&gt;искать (смещение, откуда: Seek = Seek :: Set) &lt;br/&gt;искать (смещение, откуда: Seek = Seek :: Set, &amp;amp; block) искать&lt;/a&gt; , &lt;a href=&quot;io/filedescriptor#tty?-instance-method&quot;&gt;tty? терминал?&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b90eec0d5a99bb8eab840695d337bde9e381618b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ipsocket#local_address-instance-method&quot;&gt; local_address local_address&lt;/a&gt;, &lt;a href=&quot;ipsocket#remote_address-instance-method&quot;&gt; remote_address remote_address&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ipsocket#local_address-instance-method&quot;&gt;local_address local_address&lt;/a&gt; , &lt;a href=&quot;ipsocket#remote_address-instance-method&quot;&gt;remote_address удаленный_адрес&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="548967b697f3b26d1baf221482acd999420c7f4f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;item#description:String-instance-method&quot;&gt; description : String description&lt;/a&gt;, &lt;a href=&quot;item#end_line:Int32-instance-method&quot;&gt; end_line : Int32 end_line&lt;/a&gt;, &lt;a href=&quot;item#file:String-instance-method&quot;&gt; file : String file&lt;/a&gt;, &lt;a href=&quot;item#focus?:Bool-instance-method&quot;&gt; focus? : Bool focus?&lt;/a&gt;, &lt;a href=&quot;item#line:Int32-instance-method&quot;&gt; line : Int32 line&lt;/a&gt;, &lt;a href=&quot;item#matches_line?(line:Int32):Bool-instance-method&quot;&gt; matches_line?(line : Int32) : Bool matches_line?&lt;/a&gt;, &lt;a href=&quot;item#matches_locations?(locations:Hash(String,Array(Int32))):Bool-instance-method&quot;&gt; matches_locations?(locations : Hash(String, Array(Int32))) : Bool matches_locations?&lt;/a&gt;, &lt;a href=&quot;item#matches_pattern?(pattern:Regex):Bool-instance-method&quot;&gt; matches_pattern?(pattern : Regex) : Bool matches_pattern?&lt;/a&gt;, &lt;a href=&quot;item#parent:Context-instance-method&quot;&gt; parent : Context parent&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;item#description:String-instance-method&quot;&gt;description: Строковое описание&lt;/a&gt; , &lt;a href=&quot;item#end_line:Int32-instance-method&quot;&gt;end_line: Int32 end_line&lt;/a&gt; , &lt;a href=&quot;item#file:String-instance-method&quot;&gt;файл: String file&lt;/a&gt; , &lt;a href=&quot;item#focus?:Bool-instance-method&quot;&gt;focus? : Бул фокус?&lt;/a&gt; , &lt;a href=&quot;item#line:Int32-instance-method&quot;&gt;строка: строка Int32&lt;/a&gt; , &lt;a href=&quot;item#matches_line?(line:Int32):Bool-instance-method&quot;&gt;match_line? (строка: Int32): Bool match_line?&lt;/a&gt; , &lt;a href=&quot;item#matches_locations?(locations:Hash(String,Array(Int32))):Bool-instance-method&quot;&gt;match_locations? (location: Hash (String, Array (Int32))): Bool match_locations?&lt;/a&gt; , &lt;a href=&quot;item#matches_pattern?(pattern:Regex):Bool-instance-method&quot;&gt;match_pattern? (pattern: Regex): Bool match_pattern?&lt;/a&gt; , &lt;a href=&quot;item#parent:Context-instance-method&quot;&gt;parent: Context parent&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="af7508ee9b71a61096b60f165261d2b713ac9369" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;iterable&quot;&gt;Iterable&lt;/a&gt;(&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;iterable&quot;&gt;Iterable&lt;/a&gt;(&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="f77c52c93dbe072f8d61e4e7de9dc4ac509fc7c5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;iterable#chunk(reuse=false,&amp;amp;block:%7BK,V%7D-%3EU)forallU-instance-method&quot;&gt; chunk(reuse = false, &amp;amp;block : {K, V} -&amp;gt; U) forall U chunk&lt;/a&gt;, &lt;a href=&quot;iterable#chunk_while(reuse:Bool%7CArray(%7BK,V%7D)=false,&amp;amp;block:%7BK,V%7D,%7BK,V%7D-%3EB)forallB-instance-method&quot;&gt; chunk_while(reuse : Bool | Array({K, V}) = false, &amp;amp;block : {K, V}, {K, V} -&amp;gt; B) forall B chunk_while&lt;/a&gt;, &lt;a href=&quot;iterable#cycle(n)-instance-method&quot;&gt; cycle(n)&lt;br/&gt;cycle cycle&lt;/a&gt;, &lt;a href=&quot;iterable#each-instance-method&quot;&gt; each each&lt;/a&gt;, &lt;a href=&quot;iterable#each_cons(count:Int,reuse=false)-instance-method&quot;&gt; each_cons(count : Int, reuse = false) each_cons&lt;/a&gt;, &lt;a href=&quot;iterable#each_slice(count:Int,reuse=false)-instance-method&quot;&gt; each_slice(count : Int, reuse = false) each_slice&lt;/a&gt;, &lt;a href=&quot;iterable#each_with_index(offset=0)-instance-method&quot;&gt; each_with_index(offset = 0) each_with_index&lt;/a&gt;, &lt;a href=&quot;iterable#each_with_object(obj)-instance-method&quot;&gt; each_with_object(obj) each_with_object&lt;/a&gt;, &lt;a href=&quot;iterable#slice_after(reuse:Bool%7CArray(%7BK,V%7D)=false,&amp;amp;block:%7BK,V%7D-%3EB)forallB-instance-method&quot;&gt; slice_after(reuse : Bool | Array({K, V}) = false, &amp;amp;block : {K, V} -&amp;gt; B) forall B&lt;br/&gt;slice_after(pattern, reuse : Bool | Array({K, V}) = false) slice_after&lt;/a&gt;, &lt;a href=&quot;iterable#slice_before(reuse:Bool%7CArray(%7BK,V%7D)=false,&amp;amp;block:%7BK,V%7D-%3EB)forallB-instance-method&quot;&gt; slice_before(reuse : Bool | Array({K, V}) = false, &amp;amp;block : {K, V} -&amp;gt; B) forall B&lt;br/&gt;slice_before(pattern, reuse : Bool | Array({K, V}) = false) slice_before&lt;/a&gt;, &lt;a href=&quot;iterable#slice_when(reuse:Bool%7CArray(%7BK,V%7D)=false,&amp;amp;block:%7BK,V%7D,%7BK,V%7D-%3EB)forallB-instance-method&quot;&gt; slice_when(reuse : Bool | Array({K, V}) = false, &amp;amp;block : {K, V}, {K, V} -&amp;gt; B) forall B slice_when&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;iterable#chunk(reuse=false,&amp;amp;block:%7BK,V%7D-%3EU)forallU-instance-method&quot;&gt;chunk (повторное использование = false, &amp;amp; block: {K, V} -&amp;gt; U) для всего U chunk&lt;/a&gt; , &lt;a href=&quot;iterable#chunk_while(reuse:Bool%7CArray(%7BK,V%7D)=false,&amp;amp;block:%7BK,V%7D,%7BK,V%7D-%3EB)forallB-instance-method&quot;&gt;chunk_ while (повторное использование: Bool | Array ({K, V}) = false, &amp;amp; block: {K, V}, {K, V } -&amp;gt; B) для всего B chunk_ Между тем&lt;/a&gt; , &lt;a href=&quot;iterable#cycle(n)-instance-method&quot;&gt;цикл (n) &lt;br/&gt;цикл&lt;/a&gt; , &lt;a href=&quot;iterable#each-instance-method&quot;&gt;каждый каждый&lt;/a&gt; , &lt;a href=&quot;iterable#each_cons(count:Int,reuse=false)-instance-method&quot;&gt;each_cons (count: Int, reuse = false) each_cons&lt;/a&gt; , &lt;a href=&quot;iterable#each_slice(count:Int,reuse=false)-instance-method&quot;&gt;each_slice (count: Int, reuse = false) each_slice&lt;/a&gt; , &lt;a href=&quot;iterable#each_with_index(offset=0)-instance-method&quot;&gt;each_with_index (offset = 0) each_with_index&lt;/a&gt; , &lt;a href=&quot;iterable#each_with_object(obj)-instance-method&quot;&gt;each_with_object (obj) each_with_object&lt;/a&gt; , &lt;a href=&quot;iterable#slice_after(reuse:Bool%7CArray(%7BK,V%7D)=false,&amp;amp;block:%7BK,V%7D-%3EB)forallB-instance-method&quot;&gt;slice_after (повторное использование: Bool | Array ({K, V}) = false, &amp;amp; block: {K, V} -&amp;gt; B) для B &lt;br/&gt;slice_after (шаблон, повторное использование: Bool | Array ({K, V}) = false) slice_after&lt;/a&gt; ,&lt;a href=&quot;iterable#slice_before(reuse:Bool%7CArray(%7BK,V%7D)=false,&amp;amp;block:%7BK,V%7D-%3EB)forallB-instance-method&quot;&gt;slice_before (повторное использование: Bool | Array ({K, V}) = false, &amp;amp; block: {K, V} -&amp;gt; B) для B &lt;br/&gt;slice_before (pattern, reuse: Bool | Array ({K, V}) = false) slice_before&lt;/a&gt; , &lt;a href=&quot;iterable#slice_when(reuse:Bool%7CArray(%7BK,V%7D)=false,&amp;amp;block:%7BK,V%7D,%7BK,V%7D-%3EB)forallB-instance-method&quot;&gt;slice_when (повторное использование: Bool | Array ({K, V}) = false, &amp;amp; block: {K, V}, {K, V} -&amp;gt; B) для всего B slice_when&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="33feb43c275a58a0b8897ea0265eb1bd72600ba9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;iterable#chunk(reuse=false,&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt; chunk(reuse = false, &amp;amp;block : T -&amp;gt; U) forall U chunk&lt;/a&gt;, &lt;a href=&quot;iterable#chunk_while(reuse:Bool%7CArray(T)=false,&amp;amp;block:T,T-%3EB)forallB-instance-method&quot;&gt; chunk_while(reuse : Bool | Array(T) = false, &amp;amp;block : T, T -&amp;gt; B) forall B chunk_while&lt;/a&gt;, &lt;a href=&quot;iterable#cycle(n)-instance-method&quot;&gt; cycle(n)&lt;br/&gt;cycle cycle&lt;/a&gt;, &lt;a href=&quot;iterable#each-instance-method&quot;&gt; each each&lt;/a&gt;, &lt;a href=&quot;iterable#each_cons(count:Int,reuse=false)-instance-method&quot;&gt; each_cons(count : Int, reuse = false) each_cons&lt;/a&gt;, &lt;a href=&quot;iterable#each_slice(count:Int,reuse=false)-instance-method&quot;&gt; each_slice(count : Int, reuse = false) each_slice&lt;/a&gt;, &lt;a href=&quot;iterable#each_with_index(offset=0)-instance-method&quot;&gt; each_with_index(offset = 0) each_with_index&lt;/a&gt;, &lt;a href=&quot;iterable#each_with_object(obj)-instance-method&quot;&gt; each_with_object(obj) each_with_object&lt;/a&gt;, &lt;a href=&quot;iterable#slice_after(reuse:Bool%7CArray(T)=false,&amp;amp;block:T-%3EB)forallB-instance-method&quot;&gt; slice_after(reuse : Bool | Array(T) = false, &amp;amp;block : T -&amp;gt; B) forall B&lt;br/&gt;slice_after(pattern, reuse : Bool | Array(T) = false) slice_after&lt;/a&gt;, &lt;a href=&quot;iterable#slice_before(reuse:Bool%7CArray(T)=false,&amp;amp;block:T-%3EB)forallB-instance-method&quot;&gt; slice_before(reuse : Bool | Array(T) = false, &amp;amp;block : T -&amp;gt; B) forall B&lt;br/&gt;slice_before(pattern, reuse : Bool | Array(T) = false) slice_before&lt;/a&gt;, &lt;a href=&quot;iterable#slice_when(reuse:Bool%7CArray(T)=false,&amp;amp;block:T,T-%3EB)forallB-instance-method&quot;&gt; slice_when(reuse : Bool | Array(T) = false, &amp;amp;block : T, T -&amp;gt; B) forall B slice_when&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;iterable#chunk(reuse=false,&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;chunk (reuse = false, &amp;amp; block: T -&amp;gt; U) для U U чанк&lt;/a&gt; , &lt;a href=&quot;iterable#chunk_while(reuse:Bool%7CArray(T)=false,&amp;amp;block:T,T-%3EB)forallB-instance-method&quot;&gt;chunk_ while (повторное использование: Bool | Array (T) = false, &amp;amp; block: T, T -&amp;gt; B) для B B chunk_ while&lt;/a&gt; , &lt;a href=&quot;iterable#cycle(n)-instance-method&quot;&gt;цикл (n) &lt;br/&gt;цикл цикл&lt;/a&gt; , &lt;a href=&quot;iterable#each-instance-method&quot;&gt;each each&lt;/a&gt; , &lt;a href=&quot;iterable#each_cons(count:Int,reuse=false)-instance-method&quot;&gt;each_cons (count: Int, reuse = false) each_cons&lt;/a&gt; , &lt;a href=&quot;iterable#each_slice(count:Int,reuse=false)-instance-method&quot;&gt;each_slice (count: Int, reuse = false) each_slice&lt;/a&gt; , &lt;a href=&quot;iterable#each_with_index(offset=0)-instance-method&quot;&gt;each_with_index (offset = 0) each_with_index&lt;/a&gt; , &lt;a href=&quot;iterable#each_with_object(obj)-instance-method&quot;&gt;each_with_object (obj) each_with_object&lt;/a&gt; , &lt;a href=&quot;iterable#slice_after(reuse:Bool%7CArray(T)=false,&amp;amp;block:T-%3EB)forallB-instance-method&quot;&gt;slice_after (повторное использование: Bool | ) = false, &amp;amp; block: T -&amp;gt; B) для B B &lt;br/&gt;slice_after (pattern, reuse: Bool | Array (T) = false) slice_after&lt;/a&gt; , &lt;a href=&quot;iterable#slice_before(reuse:Bool%7CArray(T)=false,&amp;amp;block:T-%3EB)forallB-instance-method&quot;&gt;slice_before (reuse: Bool | Array (T) = false, &amp;amp; block: T -&amp;gt; B) Форалл Б&lt;br/&gt;slice_before (pattern, reuse: Bool | Array (T) = false) slice_before&lt;/a&gt; , &lt;a href=&quot;iterable#slice_when(reuse:Bool%7CArray(T)=false,&amp;amp;block:T,T-%3EB)forallB-instance-method&quot;&gt;slice_when (reuse: Bool | Array (T) = false, &amp;amp; block: T, T -&amp;gt; B) для всего B slice_when&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="de729efb1dc5925cdfc61f167ff2ecd8fa419c6d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;iterable#chunk(reuse=false,&amp;amp;block:Union(T)-%3EU)forallU-instance-method&quot;&gt; chunk(reuse = false, &amp;amp;block : Union(T) -&amp;gt; U) forall U chunk&lt;/a&gt;, &lt;a href=&quot;iterable#chunk_while(reuse:Bool%7CArray(Union(T))=false,&amp;amp;block:Union(T),Union(T)-%3EB)forallB-instance-method&quot;&gt; chunk_while(reuse : Bool | Array(Union(T)) = false, &amp;amp;block : Union(T), Union(T) -&amp;gt; B) forall B chunk_while&lt;/a&gt;, &lt;a href=&quot;iterable#cycle(n)-instance-method&quot;&gt; cycle(n)&lt;br/&gt;cycle cycle&lt;/a&gt;, &lt;a href=&quot;iterable#each-instance-method&quot;&gt; each each&lt;/a&gt;, &lt;a href=&quot;iterable#each_cons(count:Int,reuse=false)-instance-method&quot;&gt; each_cons(count : Int, reuse = false) each_cons&lt;/a&gt;, &lt;a href=&quot;iterable#each_slice(count:Int,reuse=false)-instance-method&quot;&gt; each_slice(count : Int, reuse = false) each_slice&lt;/a&gt;, &lt;a href=&quot;iterable#each_with_index(offset=0)-instance-method&quot;&gt; each_with_index(offset = 0) each_with_index&lt;/a&gt;, &lt;a href=&quot;iterable#each_with_object(obj)-instance-method&quot;&gt; each_with_object(obj) each_with_object&lt;/a&gt;, &lt;a href=&quot;iterable#slice_after(reuse:Bool%7CArray(Union(T))=false,&amp;amp;block:Union(T)-%3EB)forallB-instance-method&quot;&gt; slice_after(reuse : Bool | Array(Union(T)) = false, &amp;amp;block : Union(T) -&amp;gt; B) forall B&lt;br/&gt;slice_after(pattern, reuse : Bool | Array(Union(T)) = false) slice_after&lt;/a&gt;, &lt;a href=&quot;iterable#slice_before(reuse:Bool%7CArray(Union(T))=false,&amp;amp;block:Union(T)-%3EB)forallB-instance-method&quot;&gt; slice_before(reuse : Bool | Array(Union(T)) = false, &amp;amp;block : Union(T) -&amp;gt; B) forall B&lt;br/&gt;slice_before(pattern, reuse : Bool | Array(Union(T)) = false) slice_before&lt;/a&gt;, &lt;a href=&quot;iterable#slice_when(reuse:Bool%7CArray(Union(T))=false,&amp;amp;block:Union(T),Union(T)-%3EB)forallB-instance-method&quot;&gt; slice_when(reuse : Bool | Array(Union(T)) = false, &amp;amp;block : Union(T), Union(T) -&amp;gt; B) forall B slice_when&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;iterable#chunk(reuse=false,&amp;amp;block:Union(T)-%3EU)forallU-instance-method&quot;&gt;chunk (reuse = false, &amp;amp; block: Union (T) -&amp;gt; U) для U chunk&lt;/a&gt; , &lt;a href=&quot;iterable#chunk_while(reuse:Bool%7CArray(Union(T))=false,&amp;amp;block:Union(T),Union(T)-%3EB)forallB-instance-method&quot;&gt;chunk_ while (повторное использование: Bool | Array (Union (T)) = false, &amp;amp; block: Union (T), Union (T) -&amp;gt; B ) для всего B chunk_ Между тем&lt;/a&gt; , &lt;a href=&quot;iterable#cycle(n)-instance-method&quot;&gt;цикл (n) &lt;br/&gt;цикл цикл&lt;/a&gt; , &lt;a href=&quot;iterable#each-instance-method&quot;&gt;каждый каждый&lt;/a&gt; , &lt;a href=&quot;iterable#each_cons(count:Int,reuse=false)-instance-method&quot;&gt;each_cons (количество: Int, повторное использование = false) each_cons&lt;/a&gt; , &lt;a href=&quot;iterable#each_slice(count:Int,reuse=false)-instance-method&quot;&gt;each_slice (count: Int, reuse = false) each_slice&lt;/a&gt; , &lt;a href=&quot;iterable#each_with_index(offset=0)-instance-method&quot;&gt;each_with_index (offset = 0) each_with_index&lt;/a&gt; , &lt;a href=&quot;iterable#each_with_object(obj)-instance-method&quot;&gt;each_with_object (obj) ) each_with_object&lt;/a&gt; , &lt;a href=&quot;iterable#slice_after(reuse:Bool%7CArray(Union(T))=false,&amp;amp;block:Union(T)-%3EB)forallB-instance-method&quot;&gt;slice_after (повторное использование: Bool | Array (Union (T)) = false, &amp;amp; block: Union (T) -&amp;gt; B) для B &lt;br/&gt;slice_after (pattern, reuse: Bool | Array (Union (T)) = false) slice_after&lt;/a&gt; ,&lt;a href=&quot;iterable#slice_before(reuse:Bool%7CArray(Union(T))=false,&amp;amp;block:Union(T)-%3EB)forallB-instance-method&quot;&gt;slice_before (повторное использование: Bool | Array (Union (T)) = false, &amp;amp; block: Union (T) -&amp;gt; B) для B &lt;br/&gt;slice_before (pattern, reuse: Bool | Array (Union (T)) = false) slice_before&lt;/a&gt; , &lt;a href=&quot;iterable#slice_when(reuse:Bool%7CArray(Union(T))=false,&amp;amp;block:Union(T),Union(T)-%3EB)forallB-instance-method&quot;&gt;slice_when ( повторное использование: Bool | Array (Union (T)) = false, &amp;amp; block: Union (T), Union (T) -&amp;gt; B) для всего B slice_when&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3b48bef43beff285c647f6a4d46ef2d7f9490424" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;node#anchor:String?-instance-method&quot;&gt; anchor : String? anchor&lt;/a&gt;, &lt;a href=&quot;node#anchor=(anchor:String?)-instance-method&quot;&gt; anchor=(anchor : String?) anchor=&lt;/a&gt;, &lt;a href=&quot;node#end_column:Int32-instance-method&quot;&gt; end_column : Int32 end_column&lt;/a&gt;, &lt;a href=&quot;node#end_column=(end_column)-instance-method&quot;&gt; end_column=(end_column) end_column=&lt;/a&gt;, &lt;a href=&quot;node#end_line:Int32-instance-method&quot;&gt; end_line : Int32 end_line&lt;/a&gt;, &lt;a href=&quot;node#end_line=(end_line)-instance-method&quot;&gt; end_line=(end_line) end_line=&lt;/a&gt;, &lt;a href=&quot;node#location:Tuple(Int32,Int32)-instance-method&quot;&gt; location : Tuple(Int32, Int32) location&lt;/a&gt;, &lt;a href=&quot;node#raise(message)-instance-method&quot;&gt; raise(message) raise&lt;/a&gt;, &lt;a href=&quot;node#start_column:Int32-instance-method&quot;&gt; start_column : Int32 start_column&lt;/a&gt;, &lt;a href=&quot;node#start_column=(start_column)-instance-method&quot;&gt; start_column=(start_column) start_column=&lt;/a&gt;, &lt;a href=&quot;node#start_line:Int32-instance-method&quot;&gt; start_line : Int32 start_line&lt;/a&gt;, &lt;a href=&quot;node#start_line=(start_line)-instance-method&quot;&gt; start_line=(start_line) start_line=&lt;/a&gt;, &lt;a href=&quot;node#tag:String?-instance-method&quot;&gt; tag : String? tag&lt;/a&gt;, &lt;a href=&quot;node#tag=(tag:String?)-instance-method&quot;&gt; tag=(tag : String?) tag=&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;node#anchor:String?-instance-method&quot;&gt;якорь: строка? anchor&lt;/a&gt; , &lt;a href=&quot;node#anchor=(anchor:String?)-instance-method&quot;&gt;anchor = (anchor: String?) anchor =&lt;/a&gt; , &lt;a href=&quot;node#end_column:Int32-instance-method&quot;&gt;end_column: Int32 end_column&lt;/a&gt; , &lt;a href=&quot;node#end_column=(end_column)-instance-method&quot;&gt;end_column = (end_column) end_column =&lt;/a&gt; , &lt;a href=&quot;node#end_line:Int32-instance-method&quot;&gt;end_line: Int32 end_line&lt;/a&gt; , &lt;a href=&quot;node#end_line=(end_line)-instance-method&quot;&gt;end_line = (end_line) end_line =&lt;/a&gt; , &lt;a href=&quot;node#location:Tuple(Int32,Int32)-instance-method&quot;&gt;местоположение: расположение кортежа (Int32, Int32)&lt;/a&gt; , &lt;a href=&quot;node#raise(message)-instance-method&quot;&gt;повышение (сообщение) повышение&lt;/a&gt; , &lt;a href=&quot;node#start_column:Int32-instance-method&quot;&gt;start_column: int32 start_column&lt;/a&gt; , &lt;a href=&quot;node#start_column=(start_column)-instance-method&quot;&gt;start_column = (start_column) start_column =&lt;/a&gt; , &lt;a href=&quot;node#start_line:Int32-instance-method&quot;&gt;start_line: Int32 start_line&lt;/a&gt; , &lt;a href=&quot;node#start_line=(start_line)-instance-method&quot;&gt;start_line = (start_line) start_line =&lt;/a&gt; , &lt;a href=&quot;node#tag:String?-instance-method&quot;&gt;тег: строка? tag&lt;/a&gt; , &lt;a href=&quot;node#tag=(tag:String?)-instance-method&quot;&gt;tag = (tag: String?) tag =&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3a5c5e024bea0cf63da47d964899627a9b7f68df" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;number#*(other:Complex)-instance-method&quot;&gt; *(other : Complex)&lt;br/&gt;*(other : BigFloat) *&lt;/a&gt;, &lt;a href=&quot;number#+(other:BigFloat)-instance-method&quot;&gt; +(other : BigFloat)&lt;br/&gt;+(other : Complex)&lt;br/&gt;+ +&lt;/a&gt;, &lt;a href=&quot;number#-(other:Complex)-instance-method&quot;&gt; -(other : Complex)&lt;br/&gt;-(other : BigFloat) -&lt;/a&gt;, &lt;a href=&quot;number#/(other:Complex)-instance-method&quot;&gt; /(other : Complex)&lt;br/&gt;/(other : BigFloat) /&lt;/a&gt;, &lt;a href=&quot;number#//(other)-instance-method&quot;&gt; //(other) //&lt;/a&gt;, &lt;a href=&quot;number#(other:BigFloat)-instance-method&quot;&gt; &amp;lt;=&amp;gt;(other : BigFloat)&lt;br/&gt;&amp;lt;=&amp;gt;(other) : Int32? &amp;lt;=&amp;gt;&lt;/a&gt;, &lt;a href=&quot;number#==(other:Complex)-instance-method&quot;&gt; ==(other : Complex) ==&lt;/a&gt;, &lt;a href=&quot;number#abs-instance-method&quot;&gt; abs abs&lt;/a&gt;, &lt;a href=&quot;number#abs2-instance-method&quot;&gt; abs2 abs2&lt;/a&gt;, &lt;a href=&quot;number#cis-instance-method&quot;&gt; cis cis&lt;/a&gt;, &lt;a href=&quot;number#clamp(range:Range)-instance-method&quot;&gt; clamp(range : Range)&lt;br/&gt;clamp(min, max) clamp&lt;/a&gt;, &lt;a href=&quot;number#divmod(number)-instance-method&quot;&gt; divmod(number) divmod&lt;/a&gt;, &lt;a href=&quot;number#format(separator='.',delimiter=',',decimal_places:Int?=nil,*,group:Int=3,only_significant:Bool=false):String-instance-method&quot;&gt; format(separator = '.', delimiter = ',', decimal_places : Int? = nil, *, group : Int = 3, only_significant : Bool = false) : String&lt;br/&gt;format(io : IO, separator = '.', delimiter = ',', decimal_places : Int? = nil, *, group : Int = 3, only_significant : Bool = false) : Nil format&lt;/a&gt;, &lt;a href=&quot;number#humanize(io:IO,precision=3,separator='.',delimiter=',',*,base=10**3,significant=true,prefixes:Indexable=SI_PREFIXES):Nil-instance-method&quot;&gt; humanize(io : IO, precision = 3, separator = '.', delimiter = ',', *, base = 10 ** 3, significant = true, prefixes : Indexable = SI_PREFIXES) : Nil&lt;br/&gt;humanize(io : IO, precision = 3, separator = '.', delimiter = ',', *, base = 10 ** 3, significant = true, prefixes : Proc) : Nil&lt;br/&gt;humanize(precision = 3, separator = '.', delimiter = ',', *, base = 10 ** 3, significant = true, prefixes = SI_PREFIXES) : String&lt;br/&gt;humanize(io : IO, precision = 3, separator = '.', delimiter = ',', *, base = 10 ** 3, significant = true, &amp;amp;prefixes : Int32, Float64 -&amp;gt; Tuple(Int32, UNDERSCORE) | Tuple(Int32, UNDERSCORE, Bool)) : Nil&lt;br/&gt;humanize(precision = 3, separator = '.', delimiter = ',', *, base = 10 ** 3, significant = true, &amp;amp;block) : String&lt;br/&gt;humanize(precision = 3, separator = '.', delimiter = ',', *, base = 10 ** 3, significant = true, prefixes : Proc) : Nil humanize&lt;/a&gt;, &lt;a href=&quot;number#i-instance-method&quot;&gt; i i&lt;/a&gt;, &lt;a href=&quot;number#round(digits=0,base=10)-instance-method&quot;&gt; round(digits = 0, base = 10) round&lt;/a&gt;, &lt;a href=&quot;number#sign-instance-method&quot;&gt; sign sign&lt;/a&gt;, &lt;a href=&quot;number#significant(digits,base=10)-instance-method&quot;&gt; significant(digits, base = 10) significant&lt;/a&gt;, &lt;a href=&quot;number#step(*,to=nil,by=1)-instance-method&quot;&gt; step(*, to = nil, by = 1)&lt;br/&gt;step(*, to = nil, by = 1, &amp;amp;block) step&lt;/a&gt;, &lt;a href=&quot;number#to_big_f-instance-method&quot;&gt; to_big_f to_big_f&lt;/a&gt;, &lt;a href=&quot;number#to_c-instance-method&quot;&gt; to_c to_c&lt;/a&gt;, &lt;a href=&quot;number#to_yaml(yaml:YAML::Nodes::Builder)-instance-method&quot;&gt; to_yaml(yaml : YAML::Nodes::Builder) to_yaml&lt;/a&gt;, &lt;a href=&quot;number#zero?:Bool-instance-method&quot;&gt; zero? : Bool zero?&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;number#*(other:Complex)-instance-method&quot;&gt;* (прочее: сложное) &lt;br/&gt;* (прочее: BigFloat) *&lt;/a&gt; , &lt;a href=&quot;number#+(other:BigFloat)-instance-method&quot;&gt;+ (прочее: BigFloat) &lt;br/&gt;+ (прочее: сложное) &lt;br/&gt;+ +&lt;/a&gt; , &lt;a href=&quot;number#-(other:Complex)-instance-method&quot;&gt;- (прочее: сложное) &lt;br/&gt;- (прочее: BigFloat) -&lt;/a&gt; , &lt;a href=&quot;number#/(other:Complex)-instance-method&quot;&gt;/ (прочее: сложное) &lt;br/&gt;/ (другое: BigFloat) /&lt;/a&gt; , &lt;a href=&quot;number#//(other)-instance-method&quot;&gt;// (другое) //&lt;/a&gt; , &lt;a href=&quot;number#(other:BigFloat)-instance-method&quot;&gt;&amp;lt;=&amp;gt; (другое: BigFloat) &amp;lt;=&amp;gt; &lt;br/&gt;(другое): Int32? &amp;lt;=&amp;gt;&lt;/a&gt; , &lt;a href=&quot;number#==(other:Complex)-instance-method&quot;&gt;== (другое: сложное) ==&lt;/a&gt; , &lt;a href=&quot;number#abs-instance-method&quot;&gt;abs abs&lt;/a&gt; , &lt;a href=&quot;number#abs2-instance-method&quot;&gt;abs2 abs2&lt;/a&gt; , &lt;a href=&quot;number#cis-instance-method&quot;&gt;цис-цис&lt;/a&gt; , &lt;a href=&quot;number#clamp(range:Range)-instance-method&quot;&gt;зажим (диапазон: диапазон) &lt;br/&gt;зажим (мин., макс.) зажим&lt;/a&gt; , &lt;a href=&quot;number#divmod(number)-instance-method&quot;&gt;divmod (число) divmod&lt;/a&gt; ,&lt;a href=&quot;number#format(separator='.',delimiter=',',decimal_places:Int?=nil,*,group:Int=3,only_significant:Bool=false):String-instance-method&quot;&gt;format (separator = '.', delimiter = ',', decimal_places: Int? = nil, *, group: Int = 3, only_significant: Bool = false): &lt;br/&gt;формат строки (io: IO, separator = '.', разделитель = ',', decimal_places: Int? = nil, *, группа: Int = 3, only_significant: Bool = false): формат ноль&lt;/a&gt; , &lt;a href=&quot;number#humanize(io:IO,precision=3,separator='.',delimiter=',',*,base=10**3,significant=true,prefixes:Indexable=SI_PREFIXES):Nil-instance-method&quot;&gt;гуманизация (io: IO, точность = 3, разделитель = '.', разделитель = ', ', *, base = 10 ** 3, значимый = true, префиксы: Indexable = SI_PREFIXES): ноль &lt;br/&gt;гуманизируется (io: IO, точность = 3, разделитель ='. ', разделитель =', ', *, base = 10 ** 3, значимый = true, префиксы: Proc): ноль &lt;br/&gt;гуманизированный (точность = 3, разделитель = '.', Разделитель = ',', *, base = 10 ** 3, значительный = true, префиксы = SI_PREFIXES): строка&lt;br/&gt;гуманизировать (io: IO, точность = 3, разделитель = '.', разделитель = ',', *, base = 10 ** 3, значительный = true, &amp;amp; префиксы: Int32, Float64 -&amp;gt; Tuple (Int32, UNDERSCORE) | Tuple (Int32, UNDERSCORE, Bool)): &lt;br/&gt;гуманизировать ноль (точность = 3, разделитель = '.', Разделитель = ',', *, base = 10 ** 3, значительный = true, &amp;amp; block): &lt;br/&gt;гуманизация строки (точность = 3 , разделитель = '.', разделитель = ',', *, base = 10 ** 3, значительный = true, префиксы: Proc): ноль гуманизированный&lt;/a&gt; , &lt;a href=&quot;number#i-instance-method&quot;&gt;ii&lt;/a&gt; , &lt;a href=&quot;number#round(digits=0,base=10)-instance-method&quot;&gt;раунд (цифры = 0, основание = 10) раунд&lt;/a&gt; , &lt;a href=&quot;number#sign-instance-method&quot;&gt;знак знака&lt;/a&gt; , &lt;a href=&quot;number#significant(digits,base=10)-instance-method&quot;&gt;значимые (цифры, базовая = 10) значительная&lt;/a&gt; , &lt;a href=&quot;number#step(*,to=nil,by=1)-instance-method&quot;&gt;стадии (*, к = нулю, по = 1) &lt;br/&gt;стадии (*, к = нулю, по = 1, блок) и стадия&lt;/a&gt; ,&lt;a href=&quot;number#to_big_f-instance-method&quot;&gt;to_big_f to_big_f&lt;/a&gt; ,&lt;a href=&quot;number#to_c-instance-method&quot;&gt;to_c to_c&lt;/a&gt; , &lt;a href=&quot;number#to_yaml(yaml:YAML::Nodes::Builder)-instance-method&quot;&gt;to_yaml (yaml: YAML :: Nodes :: Builder) to_yaml&lt;/a&gt; , &lt;a href=&quot;number#zero?:Bool-instance-method&quot;&gt;ноль? : Бул ноль?&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dd42488e0d0924679b132270be6a2238d7762c38" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;object#!=(other)-instance-method&quot;&gt; !=(other) !=&lt;/a&gt;, &lt;a href=&quot;object#!~(other)-instance-method&quot;&gt; !~(other) !~&lt;/a&gt;, &lt;a href=&quot;object#==(other)-instance-method&quot;&gt; ==(other) ==&lt;/a&gt;, &lt;a href=&quot;object#===(other:JSON::Any)-instance-method&quot;&gt; ===(other : JSON::Any)&lt;br/&gt;===(other : YAML::Any)&lt;br/&gt;===(other) ===&lt;/a&gt;, &lt;a href=&quot;object#=~(other)-instance-method&quot;&gt; =~(other) =~&lt;/a&gt;, &lt;a href=&quot;object#class-instance-method&quot;&gt; class class&lt;/a&gt;, &lt;a href=&quot;object#dup-instance-method&quot;&gt; dup dup&lt;/a&gt;, &lt;a href=&quot;object#hash(hasher)-instance-method&quot;&gt; hash(hasher)&lt;br/&gt;hash hash&lt;/a&gt;, &lt;a href=&quot;object#inspect(io:IO):Nil-instance-method&quot;&gt; inspect(io : IO) : Nil&lt;br/&gt;inspect : String inspect&lt;/a&gt;, &lt;a href=&quot;object#itself-instance-method&quot;&gt; itself itself&lt;/a&gt;, &lt;a href=&quot;object#not_nil!-instance-method&quot;&gt; not_nil! not_nil!&lt;/a&gt;,  pretty_inspect(width = 79, newline = &quot;\n&quot;, indent = 0) : String pretty_inspect, &lt;a href=&quot;object#pretty_print(pp:PrettyPrint):Nil-instance-method&quot;&gt; pretty_print(pp : PrettyPrint) : Nil pretty_print&lt;/a&gt;, &lt;a href=&quot;object#tap(&amp;amp;block)-instance-method&quot;&gt; tap(&amp;amp;block) tap&lt;/a&gt;, &lt;a href=&quot;object#to_json(io:IO)-instance-method&quot;&gt; to_json(io : IO)&lt;br/&gt;to_json to_json&lt;/a&gt;,  to_pretty_json(indent : String = &quot; &quot;)</source>
          <target state="translated">&lt;a href=&quot;object#!=(other)-instance-method&quot;&gt;! = (другое) =!&lt;/a&gt; , &lt;a href=&quot;object#!~(other)-instance-method&quot;&gt;~ (другой) ~!&lt;/a&gt; , &lt;a href=&quot;object#==(other)-instance-method&quot;&gt;== (другое) ==&lt;/a&gt; , &lt;a href=&quot;object#===(other:JSON::Any)-instance-method&quot;&gt;=== (другое: JSON :: Любой) &lt;br/&gt;=== (другое: YAML :: Любой) &lt;br/&gt;=== ( other) ===&lt;/a&gt; , &lt;a href=&quot;object#=~(other)-instance-method&quot;&gt;= ~ (other) = ~&lt;/a&gt; , &lt;a href=&quot;object#class-instance-method&quot;&gt;класс class&lt;/a&gt; , &lt;a href=&quot;object#dup-instance-method&quot;&gt;dup dup&lt;/a&gt; , &lt;a href=&quot;object#hash(hasher)-instance-method&quot;&gt;hash (hasher) &lt;br/&gt;hash hashes&lt;/a&gt; , &lt;a href=&quot;object#inspect(io:IO):Nil-instance-method&quot;&gt;inspect (io: IO): Nil &lt;br/&gt;inspect: проверка строки&lt;/a&gt; , &lt;a href=&quot;object#itself-instance-method&quot;&gt;сама по себе&lt;/a&gt; , &lt;a href=&quot;object#not_nil!-instance-method&quot;&gt;not_nil! not_nil!&lt;/a&gt; , Pretty_inspect (ширина = 79, перевод строка = &quot;\ п&quot;, отступ = 0): String pretty_inspect, &lt;a href=&quot;object#pretty_print(pp:PrettyPrint):Nil-instance-method&quot;&gt;pretty_print (стр: PrettyPrint): Ноль pretty_print&lt;/a&gt; , &lt;a href=&quot;object#tap(&amp;amp;block)-instance-method&quot;&gt;кран (&amp;amp; блок) кран&lt;/a&gt; , &lt;a href=&quot;object#to_json(io:IO)-instance-method&quot;&gt;to_json (Io: IO) &lt;br/&gt;to_json to_json&lt;/a&gt;, to_pretty_json (indent: String = &quot;&quot;)</target>
        </trans-unit>
        <trans-unit id="aebe6066ac5685202c314a2313093bcda26118a3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;object#from_json(string_or_io,root:String):self-class-method&quot;&gt; from_json(string_or_io, root : String) : self&lt;br/&gt;from_json(string_or_io) : self from_json&lt;/a&gt;, &lt;a href=&quot;object#from_yaml(string_or_io:String%7CIO):self-class-method&quot;&gt; from_yaml(string_or_io : String | IO) : self from_yaml&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;object#from_json(string_or_io,root:String):self-class-method&quot;&gt;from_json (string_or_io, root: String): self &lt;br/&gt;from_json (string_or_io): self from_json&lt;/a&gt; , &lt;a href=&quot;object#from_yaml(string_or_io:String%7CIO):self-class-method&quot;&gt;from_yaml (string_or_io: String | IO): self from_yaml&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="32bebb1b1dee126e39cffb245dd743f50ca43d95" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;parseexception#column_number:Int32-instance-method&quot;&gt; column_number : Int32 column_number&lt;/a&gt;, &lt;a href=&quot;parseexception#line_number:Int32-instance-method&quot;&gt; line_number : Int32 line_number&lt;/a&gt;, &lt;a href=&quot;parseexception#location-instance-method&quot;&gt; location location&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;parseexception#column_number:Int32-instance-method&quot;&gt;column_number: Int32 column_number&lt;/a&gt; , &lt;a href=&quot;parseexception#line_number:Int32-instance-method&quot;&gt;line_number: Int32 line_number&lt;/a&gt; , &lt;a href=&quot;parseexception#location-instance-method&quot;&gt;местоположение местоположения&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ae144ef1a1b677440948d49ed009490fa3b0f57a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reference#==(other:self)-instance-method&quot;&gt; ==(other : self)&lt;br/&gt;==(other : JSON::Any)&lt;br/&gt;==(other : YAML::Any)&lt;br/&gt;==(other) ==&lt;/a&gt;, &lt;a href=&quot;reference#dup-instance-method&quot;&gt; dup dup&lt;/a&gt;, &lt;a href=&quot;reference#hash(hasher)-instance-method&quot;&gt; hash(hasher) hash&lt;/a&gt;, &lt;a href=&quot;reference#inspect(io:IO):Nil-instance-method&quot;&gt; inspect(io : IO) : Nil inspect&lt;/a&gt;, &lt;a href=&quot;reference#object_id:UInt64-instance-method&quot;&gt; object_id : UInt64 object_id&lt;/a&gt;, &lt;a href=&quot;reference#pretty_print(pp):Nil-instance-method&quot;&gt; pretty_print(pp) : Nil pretty_print&lt;/a&gt;, &lt;a href=&quot;reference#same?(other:Reference)-instance-method&quot;&gt; same?(other : Reference)&lt;br/&gt;same?(other : Nil) same?&lt;/a&gt;, &lt;a href=&quot;reference#to_s(io:IO):Nil-instance-method&quot;&gt; to_s(io : IO) : Nil to_s&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;reference#==(other:self)-instance-method&quot;&gt;== (прочее: self) &lt;br/&gt;== (прочее: JSON :: Any) &lt;br/&gt;== (прочее: YAML :: Any) &lt;br/&gt;== (прочее) ==&lt;/a&gt; , &lt;a href=&quot;reference#dup-instance-method&quot;&gt;dup dup&lt;/a&gt; , &lt;a href=&quot;reference#hash(hasher)-instance-method&quot;&gt;hash (хэш)&lt;/a&gt; , &lt;a href=&quot;reference#inspect(io:IO):Nil-instance-method&quot;&gt;проверить (io: IO) : Ноль проверять&lt;/a&gt; , &lt;a href=&quot;reference#object_id:UInt64-instance-method&quot;&gt;object_id: UInt64 object_id&lt;/a&gt; , &lt;a href=&quot;reference#pretty_print(pp):Nil-instance-method&quot;&gt;pretty_print (pp): ноль pretty_print&lt;/a&gt; , то &lt;a href=&quot;reference#same?(other:Reference)-instance-method&quot;&gt;же самое? (Другое: ссылка) то &lt;br/&gt;же самое? (Другое: ноль) то же самое?&lt;/a&gt; , &lt;a href=&quot;reference#to_s(io:IO):Nil-instance-method&quot;&gt;to_s (io: IO): ноль to_s&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="30cc821a2d152d176713ec3c1f796b6dfe1fa0cf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;socket#accept:Socket-instance-method&quot;&gt; accept : Socket accept&lt;/a&gt;, &lt;a href=&quot;socket#accept?-instance-method&quot;&gt; accept? accept?&lt;/a&gt;, &lt;a href=&quot;socket#bind(addr,&amp;amp;block)-instance-method&quot;&gt; bind(addr, &amp;amp;block)&lt;br/&gt;bind(host : String, port : Int)&lt;br/&gt;bind(port : Int)&lt;br/&gt;bind(addr) bind&lt;/a&gt;, &lt;a href=&quot;socket#blocking-instance-method&quot;&gt; blocking blocking&lt;/a&gt;, &lt;a href=&quot;socket#blocking=(value)-instance-method&quot;&gt; blocking=(value) blocking=&lt;/a&gt;, &lt;a href=&quot;socket#broadcast=(val:Bool)-instance-method&quot;&gt; broadcast=(val : Bool) broadcast=&lt;/a&gt;, &lt;a href=&quot;socket#broadcast?-instance-method&quot;&gt; broadcast? broadcast?&lt;/a&gt;, &lt;a href=&quot;socket#close_on_exec=(arg:Bool)-instance-method&quot;&gt; close_on_exec=(arg : Bool) close_on_exec=&lt;/a&gt;, &lt;a href=&quot;socket#close_on_exec?-instance-method&quot;&gt; close_on_exec? close_on_exec?&lt;/a&gt;, &lt;a href=&quot;socket#close_read-instance-method&quot;&gt; close_read close_read&lt;/a&gt;, &lt;a href=&quot;socket#close_write-instance-method&quot;&gt; close_write close_write&lt;/a&gt;, &lt;a href=&quot;socket#closed?:Bool-instance-method&quot;&gt; closed? : Bool closed?&lt;/a&gt;, &lt;a href=&quot;socket#connect(addr,timeout=nil,&amp;amp;block)-instance-method&quot;&gt; connect(addr, timeout = nil, &amp;amp;block)&lt;br/&gt;connect(addr, timeout = nil) : Nil&lt;br/&gt;connect(host : String, port : Int, connect_timeout = nil) connect&lt;/a&gt;, &lt;a href=&quot;socket#family:Family-instance-method&quot;&gt; family : Family family&lt;/a&gt;, &lt;a href=&quot;socket#fcntl(cmd,arg=0)-instance-method&quot;&gt; fcntl(cmd, arg = 0) fcntl&lt;/a&gt;, &lt;a href=&quot;socket#fd:Int32-instance-method&quot;&gt; fd : Int32 fd&lt;/a&gt;, &lt;a href=&quot;socket#finalize-instance-method&quot;&gt; finalize finalize&lt;/a&gt;, &lt;a href=&quot;socket#getsockopt(optname,optval,level=LibC::SOL_SOCKET)-instance-method&quot;&gt; getsockopt(optname, optval, level = LibC::SOL_SOCKET) getsockopt&lt;/a&gt;, &lt;a href=&quot;socket#inspect(io:IO):Nil-instance-method&quot;&gt; inspect(io : IO) : Nil inspect&lt;/a&gt;, &lt;a href=&quot;socket#keepalive=(val:Bool)-instance-method&quot;&gt; keepalive=(val : Bool) keepalive=&lt;/a&gt;, &lt;a href=&quot;socket#keepalive?-instance-method&quot;&gt; keepalive? keepalive?&lt;/a&gt;, &lt;a href=&quot;socket#linger-instance-method&quot;&gt; linger linger&lt;/a&gt;, &lt;a href=&quot;socket#linger=(val:Int?)-instance-method&quot;&gt; linger=(val : Int?) linger=&lt;/a&gt;, &lt;a href=&quot;socket#listen(backlog:Int=SOMAXCONN)-instance-method&quot;&gt; listen(backlog : Int = SOMAXCONN)&lt;br/&gt;listen(backlog : Int = SOMAXCONN, &amp;amp;block) listen&lt;/a&gt;, &lt;a href=&quot;socket#protocol:Protocol-instance-method&quot;&gt; protocol : Protocol protocol&lt;/a&gt;, &lt;a href=&quot;socket#receive(max_message_size=512):Tuple(String,Address)-instance-method&quot;&gt; receive(max_message_size = 512) : Tuple(String, Address)&lt;br/&gt;receive(message : Bytes) : Tuple(Int32, Address) receive&lt;/a&gt;, &lt;a href=&quot;socket#recv_buffer_size-instance-method&quot;&gt; recv_buffer_size recv_buffer_size&lt;/a&gt;, &lt;a href=&quot;socket#recv_buffer_size=(val:Int32)-instance-method&quot;&gt; recv_buffer_size=(val : Int32) recv_buffer_size=&lt;/a&gt;, &lt;a href=&quot;socket#reuse_address=(val:Bool)-instance-method&quot;&gt; reuse_address=(val : Bool) reuse_address=&lt;/a&gt;, &lt;a href=&quot;socket#reuse_address?-instance-method&quot;&gt; reuse_address? reuse_address?&lt;/a&gt;, &lt;a href=&quot;socket#reuse_port=(val:Bool)-instance-method&quot;&gt; reuse_port=(val : Bool) reuse_port=&lt;/a&gt;, &lt;a href=&quot;socket#reuse_port?-instance-method&quot;&gt; reuse_port? reuse_port?&lt;/a&gt;, &lt;a href=&quot;socket#send(message,toaddr:Address):Int32-instance-method&quot;&gt; send(message, to addr : Address) : Int32&lt;br/&gt;send(message) : Int32 send&lt;/a&gt;, &lt;a href=&quot;socket#send_buffer_size-instance-method&quot;&gt; send_buffer_size send_buffer_size&lt;/a&gt;, &lt;a href=&quot;socket#send_buffer_size=(val:Int32)-instance-method&quot;&gt; send_buffer_size=(val : Int32) send_buffer_size=&lt;/a&gt;, &lt;a href=&quot;socket#setsockopt(optname,optval,level=LibC::SOL_SOCKET)-instance-method&quot;&gt; setsockopt(optname, optval, level = LibC::SOL_SOCKET) setsockopt&lt;/a&gt;, &lt;a href=&quot;socket#tty?-instance-method&quot;&gt; tty? tty?&lt;/a&gt;, &lt;a href=&quot;socket#type:Type-instance-method&quot;&gt; type : Type type&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;socket#accept:Socket-instance-method&quot;&gt;принять: гнездо принять&lt;/a&gt; , &lt;a href=&quot;socket#accept?-instance-method&quot;&gt;принять? принимать?&lt;/a&gt; , &lt;a href=&quot;socket#bind(addr,&amp;amp;block)-instance-method&quot;&gt;bind (addr, &amp;amp; block) &lt;br/&gt;bind (host: String, port: Int) &lt;br/&gt;bind (port: Int) &lt;br/&gt;bind (addr) bind&lt;/a&gt; , &lt;a href=&quot;socket#blocking-instance-method&quot;&gt;блокировка блокировки&lt;/a&gt; , &lt;a href=&quot;socket#blocking=(value)-instance-method&quot;&gt;блокировка = (значение) блокировка =&lt;/a&gt; , &lt;a href=&quot;socket#broadcast=(val:Bool)-instance-method&quot;&gt;широковещание = (val: Bool) широковещание =&lt;/a&gt; , &lt;a href=&quot;socket#broadcast?-instance-method&quot;&gt;трансляции? трансляции?&lt;/a&gt; , &lt;a href=&quot;socket#close_on_exec=(arg:Bool)-instance-method&quot;&gt;close_on_exec = (arg: Bool) close_on_exec =&lt;/a&gt; , &lt;a href=&quot;socket#close_on_exec?-instance-method&quot;&gt;close_on_exec? close_on_exec?&lt;/a&gt; , &lt;a href=&quot;socket#close_read-instance-method&quot;&gt;close_read close_read&lt;/a&gt; , &lt;a href=&quot;socket#close_write-instance-method&quot;&gt;close_write close_write&lt;/a&gt; , &lt;a href=&quot;socket#closed?:Bool-instance-method&quot;&gt;закрыто? : Бул закрыто?&lt;/a&gt; , &lt;a href=&quot;socket#connect(addr,timeout=nil,&amp;amp;block)-instance-method&quot;&gt;connect (addr, timeout = nil, &amp;amp; block) &lt;br/&gt;connect (addr, timeout = nil): ноль&lt;br/&gt;connect, (host: String, порт: Int, connect_timeout = nil) connect&lt;/a&gt; , &lt;a href=&quot;socket#family:Family-instance-method&quot;&gt;family: Family family&lt;/a&gt; , &lt;a href=&quot;socket#fcntl(cmd,arg=0)-instance-method&quot;&gt;fcntl (cmd, arg = 0) fcntl&lt;/a&gt; , &lt;a href=&quot;socket#fd:Int32-instance-method&quot;&gt;fd: Int32 fd&lt;/a&gt; , &lt;a href=&quot;socket#finalize-instance-method&quot;&gt;завершить финализацию&lt;/a&gt; , &lt;a href=&quot;socket#getsockopt(optname,optval,level=LibC::SOL_SOCKET)-instance-method&quot;&gt;getsockopt (optname, optval, level = LibC :: SOL_SOCKET) getsockopt&lt;/a&gt; , &lt;a href=&quot;socket#inspect(io:IO):Nil-instance-method&quot;&gt;проверять (io: IO): Nil проверять&lt;/a&gt; , &lt;a href=&quot;socket#keepalive=(val:Bool)-instance-method&quot;&gt;keepalive = (val: Bool) keepalive =&lt;/a&gt; , &lt;a href=&quot;socket#keepalive?-instance-method&quot;&gt;keepalive? Keepalive?&lt;/a&gt; , &lt;a href=&quot;socket#linger-instance-method&quot;&gt;linger linger&lt;/a&gt; , &lt;a href=&quot;socket#linger=(val:Int?)-instance-method&quot;&gt;linger = (val: Int?) linger =&lt;/a&gt; , &lt;a href=&quot;socket#listen(backlog:Int=SOMAXCONN)-instance-method&quot;&gt;listen (backlog: Int = SOMAXCONN) &lt;br/&gt;listen (backlog: Int = SOMAXCONN, &amp;amp; block) listen&lt;/a&gt; , &lt;a href=&quot;socket#protocol:Protocol-instance-method&quot;&gt;протокол: протокол протокола&lt;/a&gt; ,&lt;a href=&quot;socket#receive(max_message_size=512):Tuple(String,Address)-instance-method&quot;&gt;receive (max_message_size = 512): кортеж (строка, адрес), &lt;br/&gt;прием (сообщение: байты): кортеж (Int32, адрес), получение&lt;/a&gt; , &lt;a href=&quot;socket#recv_buffer_size-instance-method&quot;&gt;recv_buffer_size, recv_buffer_size&lt;/a&gt; , &lt;a href=&quot;socket#recv_buffer_size=(val:Int32)-instance-method&quot;&gt;recv_buffer_size = (val: Int32) recv_buffer_size =&lt;/a&gt; , &lt;a href=&quot;socket#reuse_address=(val:Bool)-instance-method&quot;&gt;reuse_address = (reuse_adol) =&lt;/a&gt; , &lt;a href=&quot;socket#reuse_address?-instance-method&quot;&gt;reuse_address? reuse_address?&lt;/a&gt; , &lt;a href=&quot;socket#reuse_port=(val:Bool)-instance-method&quot;&gt;reuse_port = (val: Bool) reuse_port =&lt;/a&gt; , &lt;a href=&quot;socket#reuse_port?-instance-method&quot;&gt;reuse_port? reuse_port?&lt;/a&gt; , &lt;a href=&quot;socket#send(message,toaddr:Address):Int32-instance-method&quot;&gt;отправить (сообщение, адрес: адрес): Int32 &lt;br/&gt;отправить (сообщение): отправка Int32&lt;/a&gt; , &lt;a href=&quot;socket#send_buffer_size-instance-method&quot;&gt;send_buffer_size send_buffer_size&lt;/a&gt; , &lt;a href=&quot;socket#send_buffer_size=(val:Int32)-instance-method&quot;&gt;send_buffer_size = (val: Int32) send_buffer_size =&lt;/a&gt; ,&lt;a href=&quot;socket#setsockopt(optname,optval,level=LibC::SOL_SOCKET)-instance-method&quot;&gt;setsockopt (optname, optval, level = LibC :: SOL_SOCKET) setsockopt&lt;/a&gt; , &lt;a href=&quot;socket#tty?-instance-method&quot;&gt;tty? терминал? &lt;/a&gt;, &lt;a href=&quot;socket#type:Type-instance-method&quot;&gt;Тип: Тип Тип&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e041d92710218695715688244a02c7d9caa3f475" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;socket#fcntl(fd,cmd,arg=0)-class-method&quot;&gt; fcntl(fd, cmd, arg = 0) fcntl&lt;/a&gt;, &lt;a href=&quot;socket#ip?(string:String)-class-method&quot;&gt; ip?(string : String) ip?&lt;/a&gt;, &lt;a href=&quot;socket#tcp(family:Family,blocking=false)-class-method&quot;&gt; tcp(family : Family, blocking = false) tcp&lt;/a&gt;, &lt;a href=&quot;socket#udp(family:Family,blocking=false)-class-method&quot;&gt; udp(family : Family, blocking = false) udp&lt;/a&gt;, &lt;a href=&quot;socket#unix(type:Type=Type::STREAM,blocking=false)-class-method&quot;&gt; unix(type : Type = Type::STREAM, blocking = false) unix&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;socket#fcntl(fd,cmd,arg=0)-class-method&quot;&gt;fcntl (fd, cmd, arg = 0) fcntl&lt;/a&gt; , &lt;a href=&quot;socket#ip?(string:String)-class-method&quot;&gt;ip? (строка: строка) ip? &lt;/a&gt;, &lt;a href=&quot;socket#tcp(family:Family,blocking=false)-class-method&quot;&gt;tcp (семейство: семейство, блокировка = false) tcp&lt;/a&gt; , &lt;a href=&quot;socket#udp(family:Family,blocking=false)-class-method&quot;&gt;udp (семейство: семейство, блокировка = false) udp&lt;/a&gt; , &lt;a href=&quot;socket#unix(type:Type=Type::STREAM,blocking=false)-class-method&quot;&gt;unix (тип: Type = Type :: STREAM, blocking = false) unix&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="854097c31eea40ed495be72c0dac5055571c76da" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;socket/server#accept:IO-instance-method&quot;&gt; accept : IO&lt;br/&gt;accept(&amp;amp;block) accept&lt;/a&gt;, &lt;a href=&quot;socket/server#accept?:IO?-instance-method&quot;&gt; accept? : IO?&lt;br/&gt;accept?(&amp;amp;block) accept?&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;socket/server#accept:IO-instance-method&quot;&gt;принять: IO &lt;br/&gt;принять (и заблокировать) принять&lt;/a&gt; , &lt;a href=&quot;socket/server#accept?:IO?-instance-method&quot;&gt;принять? : IO? &lt;br/&gt;принять? (&amp;amp; заблокировать) принять?&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b57c9525f38760884f9ee9a384f629dbe9034e30" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;spec/expectations#be(value)-instance-method&quot;&gt; be(value)&lt;br/&gt;be be&lt;/a&gt;, &lt;a href=&quot;spec/expectations#be_close(expected,delta)-instance-method&quot;&gt; be_close(expected, delta) be_close&lt;/a&gt;, &lt;a href=&quot;spec/expectations#be_empty-instance-method&quot;&gt; be_empty be_empty&lt;/a&gt;, &lt;a href=&quot;spec/expectations#be_false-instance-method&quot;&gt; be_false be_false&lt;/a&gt;, &lt;a href=&quot;spec/expectations#be_falsey-instance-method&quot;&gt; be_falsey be_falsey&lt;/a&gt;, &lt;a href=&quot;spec/expectations#be_nil-instance-method&quot;&gt; be_nil be_nil&lt;/a&gt;, &lt;a href=&quot;spec/expectations#be_true-instance-method&quot;&gt; be_true be_true&lt;/a&gt;, &lt;a href=&quot;spec/expectations#be_truthy-instance-method&quot;&gt; be_truthy be_truthy&lt;/a&gt;, &lt;a href=&quot;spec/expectations#contain(expected)-instance-method&quot;&gt; contain(expected) contain&lt;/a&gt;, &lt;a href=&quot;spec/expectations#end_with(expected)-instance-method&quot;&gt; end_with(expected) end_with&lt;/a&gt;, &lt;a href=&quot;spec/expectations#eq(value)-instance-method&quot;&gt; eq(value) eq&lt;/a&gt;, &lt;a href=&quot;spec/expectations#expect_raises(klass:T.class,message=nil,file=__FILE__,line=__LINE__,&amp;amp;block)forallT-instance-method&quot;&gt; expect_raises(klass : T.class, message = nil, file = __FILE__, line = __LINE__, &amp;amp;block) forall T expect_raises&lt;/a&gt;, &lt;a href=&quot;spec/expectations#match(value)-instance-method&quot;&gt; match(value) match&lt;/a&gt;, &lt;a href=&quot;spec/expectations#start_with(expected)-instance-method&quot;&gt; start_with(expected) start_with&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;spec/expectations#be(value)-instance-method&quot;&gt;быть (значение) &lt;br/&gt;будет иметь&lt;/a&gt; , &lt;a href=&quot;spec/expectations#be_close(expected,delta)-instance-method&quot;&gt;be_close (ожидался, дельта) be_close&lt;/a&gt; , &lt;a href=&quot;spec/expectations#be_empty-instance-method&quot;&gt;be_empty be_empty&lt;/a&gt; , &lt;a href=&quot;spec/expectations#be_false-instance-method&quot;&gt;be_false be_false&lt;/a&gt; , &lt;a href=&quot;spec/expectations#be_falsey-instance-method&quot;&gt;be_falsey be_falsey&lt;/a&gt; , &lt;a href=&quot;spec/expectations#be_nil-instance-method&quot;&gt;be_nil be_nil&lt;/a&gt; , &lt;a href=&quot;spec/expectations#be_true-instance-method&quot;&gt;be_true be_true&lt;/a&gt; , &lt;a href=&quot;spec/expectations#be_truthy-instance-method&quot;&gt;be_truthy be_truthy&lt;/a&gt; , &lt;a href=&quot;spec/expectations#contain(expected)-instance-method&quot;&gt;содержит (ожидаемый) содержит&lt;/a&gt; , &lt;a href=&quot;spec/expectations#end_with(expected)-instance-method&quot;&gt;end_with (ожидаемый) end_with&lt;/a&gt; , &lt;a href=&quot;spec/expectations#eq(value)-instance-method&quot;&gt;э (значение) э&lt;/a&gt; , &lt;a href=&quot;spec/expectations#expect_raises(klass:T.class,message=nil,file=__FILE__,line=__LINE__,&amp;amp;block)forallT-instance-method&quot;&gt;wait_raises (klass: T.class, message = nil, file = __FILE__, line = __LINE__, &amp;amp; block) для T T wait_raises&lt;/a&gt; , &lt;a href=&quot;spec/expectations#match(value)-instance-method&quot;&gt;match (значение) match&lt;/a&gt; , &lt;a href=&quot;spec/expectations#start_with(expected)-instance-method&quot;&gt;start_with (ожидаемое) start_with&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0f4abdf1f134559a503333f105af6177c7865080" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;spec/methods#assert(file=__FILE__,line=__LINE__,end_line=__END_LINE__,&amp;amp;block)-instance-method&quot;&gt; assert(file = __FILE__, line = __LINE__, end_line = __END_LINE__, &amp;amp;block) assert&lt;/a&gt;, &lt;a href=&quot;spec/methods#context(description,file=__FILE__,line=__LINE__,end_line=__END_LINE__,focus:Bool=false,&amp;amp;block)-instance-method&quot;&gt; context(description, file = __FILE__, line = __LINE__, end_line = __END_LINE__, focus : Bool = false, &amp;amp;block) context&lt;/a&gt;, &lt;a href=&quot;spec/methods#describe(description,file=__FILE__,line=__LINE__,end_line=__END_LINE__,focus:Bool=false,&amp;amp;block)-instance-method&quot;&gt; describe(description, file = __FILE__, line = __LINE__, end_line = __END_LINE__, focus : Bool = false, &amp;amp;block) describe&lt;/a&gt;, &lt;a href=&quot;spec/methods#fail(msg,file=__FILE__,line=__LINE__)-instance-method&quot;&gt; fail(msg, file = __FILE__, line = __LINE__) fail&lt;/a&gt;,  it(description = &quot;assert&quot;, file = __FILE__, line = __LINE__, end_line = __END_LINE__, focus : Bool = false, &amp;amp;block) it,  pending(description = &quot;assert&quot;, file = __FILE__, line = __LINE__, end_line = __END_LINE__, focus : Bool = false, &amp;amp;block)</source>
          <target state="translated">&lt;a href=&quot;spec/methods#assert(file=__FILE__,line=__LINE__,end_line=__END_LINE__,&amp;amp;block)-instance-method&quot;&gt;assert (file = __FILE__, line = __LINE__, end_line = __END_LINE__, &amp;amp; block) assert&lt;/a&gt; , &lt;a href=&quot;spec/methods#context(description,file=__FILE__,line=__LINE__,end_line=__END_LINE__,focus:Bool=false,&amp;amp;block)-instance-method&quot;&gt;контекст (описание, file = __FILE__, line = __LINE__, end_line = __END_LINE__, focus: Bool = false, &amp;amp; block) контекст&lt;/a&gt; , &lt;a href=&quot;spec/methods#describe(description,file=__FILE__,line=__LINE__,end_line=__END_LINE__,focus:Bool=false,&amp;amp;block)-instance-method&quot;&gt;описать (описание, file = __FILE__, line = __LINE__, end_line = __END_LINE__, focus: Bool = false, &amp;amp; block) описать&lt;/a&gt; , &lt;a href=&quot;spec/methods#fail(msg,file=__FILE__,line=__LINE__)-instance-method&quot;&gt;потерпеть неудачу (msg, file = __FILE__, line = __LINE__) завершиться неудачей&lt;/a&gt; , это (description = &quot;assert&quot;, file = __FILE__, line = __LINE__, end_line = __END_LINE__, focus: Bool = false, &amp;amp; block) it, ожидающий (description = &quot;assert&quot;, file = __FILE__, line = __LINE__, end_line = __END_LINE__, focus: Bool = false, &amp;amp; block)</target>
        </trans-unit>
        <trans-unit id="e0087f1d1cda38de34923c965b75a813b75d1a2e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;spec/objectextensions#should(expectation,file=__FILE__,line=__LINE__)-instance-method&quot;&gt; should(expectation, file = __FILE__, line = __LINE__) should&lt;/a&gt;, &lt;a href=&quot;spec/objectextensions#should_not(expectation,file=__FILE__,line=__LINE__)-instance-method&quot;&gt; should_not(expectation, file = __FILE__, line = __LINE__) should_not&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;spec/objectextensions#should(expectation,file=__FILE__,line=__LINE__)-instance-method&quot;&gt;Следует (ожидание, файл = __FILE__, строка = __LINE__) следует&lt;/a&gt; , &lt;a href=&quot;spec/objectextensions#should_not(expectation,file=__FILE__,line=__LINE__)-instance-method&quot;&gt;следует_от (ожидание, файл = __FILE__, строка = __LINE__)&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ea38a455b6eafeb5c6f5e0c1f4bb6cd979ec83b9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;string#percent-string-array-literal&quot;&gt;Arrays of strings&lt;/a&gt; and &lt;a href=&quot;symbol#percent-symbol-array-literal&quot;&gt;arrays of symbols&lt;/a&gt; can be created with percent array literals:</source>
          <target state="translated">&lt;a href=&quot;string#percent-string-array-literal&quot;&gt;Массивы строк&lt;/a&gt; и &lt;a href=&quot;symbol#percent-symbol-array-literal&quot;&gt;массивы символов&lt;/a&gt; могут быть созданы с литералами массива процентов:</target>
        </trans-unit>
        <trans-unit id="278c218d13424b5ee437df576fab40f81c52d9bc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;struct#==(other):Bool-instance-method&quot;&gt; ==(other) : Bool ==&lt;/a&gt;, &lt;a href=&quot;struct#hash(hasher)-instance-method&quot;&gt; hash(hasher) hash&lt;/a&gt;, &lt;a href=&quot;struct#inspect(io:IO):Nil-instance-method&quot;&gt; inspect(io : IO) : Nil inspect&lt;/a&gt;, &lt;a href=&quot;struct#pretty_print(pp):Nil-instance-method&quot;&gt; pretty_print(pp) : Nil pretty_print&lt;/a&gt;, &lt;a href=&quot;struct#to_s(io:IO):Nil-instance-method&quot;&gt; to_s(io : IO) : Nil to_s&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;struct#==(other):Bool-instance-method&quot;&gt;== (прочее): Bool ==&lt;/a&gt; , &lt;a href=&quot;struct#hash(hasher)-instance-method&quot;&gt;хеш (хеш) хеш&lt;/a&gt; , &lt;a href=&quot;struct#inspect(io:IO):Nil-instance-method&quot;&gt;проверять (io: IO): ноль проверять&lt;/a&gt; , &lt;a href=&quot;struct#pretty_print(pp):Nil-instance-method&quot;&gt;pretty_print (pp): ноль pretty_print&lt;/a&gt; , &lt;a href=&quot;struct#to_s(io:IO):Nil-instance-method&quot;&gt;to_s (io: IO): ноль to_s&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="057d5c7bb1620dc3eae3871e388d21bc750c89a1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tcpsocket#tcp_keepalive_count-instance-method&quot;&gt; tcp_keepalive_count tcp_keepalive_count&lt;/a&gt;, &lt;a href=&quot;tcpsocket#tcp_keepalive_count=(val:Int)-instance-method&quot;&gt; tcp_keepalive_count=(val : Int) tcp_keepalive_count=&lt;/a&gt;, &lt;a href=&quot;tcpsocket#tcp_keepalive_idle-instance-method&quot;&gt; tcp_keepalive_idle tcp_keepalive_idle&lt;/a&gt;, &lt;a href=&quot;tcpsocket#tcp_keepalive_idle=(val:Int)-instance-method&quot;&gt; tcp_keepalive_idle=(val : Int) tcp_keepalive_idle=&lt;/a&gt;, &lt;a href=&quot;tcpsocket#tcp_keepalive_interval-instance-method&quot;&gt; tcp_keepalive_interval tcp_keepalive_interval&lt;/a&gt;, &lt;a href=&quot;tcpsocket#tcp_keepalive_interval=(val:Int)-instance-method&quot;&gt; tcp_keepalive_interval=(val : Int) tcp_keepalive_interval=&lt;/a&gt;, &lt;a href=&quot;tcpsocket#tcp_nodelay=(val:Bool)-instance-method&quot;&gt; tcp_nodelay=(val : Bool) tcp_nodelay=&lt;/a&gt;, &lt;a href=&quot;tcpsocket#tcp_nodelay?-instance-method&quot;&gt; tcp_nodelay? tcp_nodelay?&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;tcpsocket#tcp_keepalive_count-instance-method&quot;&gt;tcp_keepalive_count tcp_keepalive_count&lt;/a&gt; , &lt;a href=&quot;tcpsocket#tcp_keepalive_count=(val:Int)-instance-method&quot;&gt;tcp_keepalive_count = (значение: Int) tcp_keepalive_count =&lt;/a&gt; , &lt;a href=&quot;tcpsocket#tcp_keepalive_idle-instance-method&quot;&gt;tcp_keepalive_idle tcp_keepalive_idle&lt;/a&gt; , &lt;a href=&quot;tcpsocket#tcp_keepalive_idle=(val:Int)-instance-method&quot;&gt;tcp_keepalive_idle = (значение: Int) tcp_keepalive_idle =&lt;/a&gt; , &lt;a href=&quot;tcpsocket#tcp_keepalive_interval-instance-method&quot;&gt;tcp_keepalive_interval tcp_keepalive_interval&lt;/a&gt; , &lt;a href=&quot;tcpsocket#tcp_keepalive_interval=(val:Int)-instance-method&quot;&gt;tcp_keepalive_interval = (значение: Int) tcp_keepalive_interval =&lt;/a&gt; , &lt;a href=&quot;tcpsocket#tcp_nodelay=(val:Bool)-instance-method&quot;&gt;tcp_nodelay = (Val: Bool) tcp_nodelay =&lt;/a&gt; , &lt;a href=&quot;tcpsocket#tcp_nodelay?-instance-method&quot;&gt;tcp_nodelay ? tcp_nodelay?&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="310c1adacb9f66621053af2c2d2a99050b224175" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;unixsocket#local_address-instance-method&quot;&gt; local_address local_address&lt;/a&gt;, &lt;a href=&quot;unixsocket#path:String?-instance-method&quot;&gt; path : String? path&lt;/a&gt;, &lt;a href=&quot;unixsocket#receive-instance-method&quot;&gt; receive receive&lt;/a&gt;, &lt;a href=&quot;unixsocket#remote_address-instance-method&quot;&gt; remote_address remote_address&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;unixsocket#local_address-instance-method&quot;&gt;local_address local_address&lt;/a&gt; , &lt;a href=&quot;unixsocket#path:String?-instance-method&quot;&gt;путь: строка? путь&lt;/a&gt; , &lt;a href=&quot;unixsocket#receive-instance-method&quot;&gt;получить, получить&lt;/a&gt; , &lt;a href=&quot;unixsocket#remote_address-instance-method&quot;&gt;удаленный_адрес удаленный_адрес&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6cf90bc955696db416ca5381cb831813e7b7b8cb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;unixsocket#open(path,type:Type=Type::STREAM,&amp;amp;block)-class-method&quot;&gt; open(path, type : Type = Type::STREAM, &amp;amp;block) open&lt;/a&gt;, &lt;a href=&quot;unixsocket#pair(type:Type=Type::STREAM)-class-method&quot;&gt; pair(type : Type = Type::STREAM)&lt;br/&gt;pair(type : Type = Type::STREAM, &amp;amp;block) pair&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;unixsocket#open(path,type:Type=Type::STREAM,&amp;amp;block)-class-method&quot;&gt;открытый (путь, типа: Тип = Тип :: ПОТОК, и блок) открыта&lt;/a&gt; , &lt;a href=&quot;unixsocket#pair(type:Type=Type::STREAM)-class-method&quot;&gt;пара (типа: Тип = Тип :: ПОТОК) &lt;br/&gt;пара (типа: Тип = Тип :: ПОТОК, и блок) пара&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eed8740cef29d5851c0f8a925fad7ce6b9e443e8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;value#==(other:JSON::Any)-instance-method&quot;&gt; ==(other : JSON::Any)&lt;br/&gt;==(other : YAML::Any)&lt;br/&gt;==(other) ==&lt;/a&gt;, &lt;a href=&quot;value#dup-instance-method&quot;&gt; dup dup&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;value#==(other:JSON::Any)-instance-method&quot;&gt;== (другое: JSON :: Any) &lt;br/&gt;== (другое: YAML :: Any) &lt;br/&gt;== (другое) ==&lt;/a&gt; , &lt;a href=&quot;value#dup-instance-method&quot;&gt;dup dup&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e9ba5ab4e73d19d8bf2d7d87f7edde726e6b4931" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;valuemethods#add_instruction_attribute(index:Int,attribute:LLVM::Attribute,context:LLVM::Context)-instance-method&quot;&gt; add_instruction_attribute(index : Int, attribute : LLVM::Attribute, context : LLVM::Context) add_instruction_attribute&lt;/a&gt;, &lt;a href=&quot;valuemethods#alignment=(bytes)-instance-method&quot;&gt; alignment=(bytes) alignment=&lt;/a&gt;, &lt;a href=&quot;valuemethods#call_convention-instance-method&quot;&gt; call_convention call_convention&lt;/a&gt;, &lt;a href=&quot;valuemethods#call_convention=(call_convention)-instance-method&quot;&gt; call_convention=(call_convention) call_convention=&lt;/a&gt;, &lt;a href=&quot;valuemethods#const_int_get_sext_value-instance-method&quot;&gt; const_int_get_sext_value const_int_get_sext_value&lt;/a&gt;, &lt;a href=&quot;valuemethods#const_int_get_zext_value-instance-method&quot;&gt; const_int_get_zext_value const_int_get_zext_value&lt;/a&gt;, &lt;a href=&quot;valuemethods#constant?-instance-method&quot;&gt; constant? constant?&lt;/a&gt;, &lt;a href=&quot;valuemethods#dump-instance-method&quot;&gt; dump dump&lt;/a&gt;, &lt;a href=&quot;valuemethods#global_constant=(global_constant)-instance-method&quot;&gt; global_constant=(global_constant) global_constant=&lt;/a&gt;, &lt;a href=&quot;valuemethods#global_constant?-instance-method&quot;&gt; global_constant? global_constant?&lt;/a&gt;, &lt;a href=&quot;valuemethods#initializer-instance-method&quot;&gt; initializer initializer&lt;/a&gt;, &lt;a href=&quot;valuemethods#initializer=(initializer)-instance-method&quot;&gt; initializer=(initializer) initializer=&lt;/a&gt;, &lt;a href=&quot;valuemethods#inspect(io:IO):Nil-instance-method&quot;&gt; inspect(io : IO) : Nil inspect&lt;/a&gt;, &lt;a href=&quot;valuemethods#kind-instance-method&quot;&gt; kind kind&lt;/a&gt;, &lt;a href=&quot;valuemethods#linkage-instance-method&quot;&gt; linkage linkage&lt;/a&gt;, &lt;a href=&quot;valuemethods#linkage=(linkage)-instance-method&quot;&gt; linkage=(linkage) linkage=&lt;/a&gt;, &lt;a href=&quot;valuemethods#name-instance-method&quot;&gt; name name&lt;/a&gt;, &lt;a href=&quot;valuemethods#name=(name)-instance-method&quot;&gt; name=(name) name=&lt;/a&gt;, &lt;a href=&quot;valuemethods#ordering=(ordering)-instance-method&quot;&gt; ordering=(ordering) ordering=&lt;/a&gt;, &lt;a href=&quot;valuemethods#thread_local=(thread_local)-instance-method&quot;&gt; thread_local=(thread_local) thread_local=&lt;/a&gt;, &lt;a href=&quot;valuemethods#thread_local?-instance-method&quot;&gt; thread_local? thread_local?&lt;/a&gt;, &lt;a href=&quot;valuemethods#to_unsafe-instance-method&quot;&gt; to_unsafe to_unsafe&lt;/a&gt;, &lt;a href=&quot;valuemethods#to_value-instance-method&quot;&gt; to_value to_value&lt;/a&gt;, &lt;a href=&quot;valuemethods#type-instance-method&quot;&gt; type type&lt;/a&gt;, &lt;a href=&quot;valuemethods#volatile=(volatile)-instance-method&quot;&gt; volatile=(volatile) volatile=&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;valuemethods#add_instruction_attribute(index:Int,attribute:LLVM::Attribute,context:LLVM::Context)-instance-method&quot;&gt;add_instruction_attribute (индекс: Int, атрибут: LLVM :: Атрибут, контекст: LLVM :: Context) add_instruction_attribute&lt;/a&gt; , &lt;a href=&quot;valuemethods#alignment=(bytes)-instance-method&quot;&gt;выравнивание = (байт) выравнивание =&lt;/a&gt; , &lt;a href=&quot;valuemethods#call_convention-instance-method&quot;&gt;call_convention call_convention&lt;/a&gt; , &lt;a href=&quot;valuemethods#call_convention=(call_convention)-instance-method&quot;&gt;call_convention = (call_convention) call_convention =&lt;/a&gt; , &lt;a href=&quot;valuemethods#const_int_get_sext_value-instance-method&quot;&gt;const_int_get_sext_value const_int_get_sext_value&lt;/a&gt; , &lt;a href=&quot;valuemethods#const_int_get_zext_value-instance-method&quot;&gt;const_int_get_zext_value const_int_get_zext_value&lt;/a&gt; , &lt;a href=&quot;valuemethods#constant?-instance-method&quot;&gt;постоянная? постоянная?&lt;/a&gt; , &lt;a href=&quot;valuemethods#dump-instance-method&quot;&gt;дамп дамп&lt;/a&gt; , &lt;a href=&quot;valuemethods#global_constant=(global_constant)-instance-method&quot;&gt;global_constant = (global_constant) global_constant =&lt;/a&gt; , &lt;a href=&quot;valuemethods#global_constant?-instance-method&quot;&gt;global_constant? global_constant?&lt;/a&gt; , &lt;a href=&quot;valuemethods#initializer-instance-method&quot;&gt;инициализатор инициализатора&lt;/a&gt; , &lt;a href=&quot;valuemethods#initializer=(initializer)-instance-method&quot;&gt;инициализатор = (инициализатор) инициализатор =&lt;/a&gt; ,&lt;a href=&quot;valuemethods#inspect(io:IO):Nil-instance-method&quot;&gt;проверять (io: IO): ноль проверять&lt;/a&gt; , &lt;a href=&quot;valuemethods#kind-instance-method&quot;&gt;добрый вид&lt;/a&gt; , &lt;a href=&quot;valuemethods#linkage-instance-method&quot;&gt;связывание&lt;/a&gt; , &lt;a href=&quot;valuemethods#linkage=(linkage)-instance-method&quot;&gt;связывание = (связывание) связывание =&lt;/a&gt; , &lt;a href=&quot;valuemethods#name-instance-method&quot;&gt;имя&lt;/a&gt; , &lt;a href=&quot;valuemethods#name=(name)-instance-method&quot;&gt;имя = (имя) имя =&lt;/a&gt; , &lt;a href=&quot;valuemethods#ordering=(ordering)-instance-method&quot;&gt;упорядочивание = (упорядочение) упорядочивание =&lt;/a&gt; , &lt;a href=&quot;valuemethods#thread_local=(thread_local)-instance-method&quot;&gt;thread_local = (thread_local) thread_local =&lt;/a&gt; , &lt;a href=&quot;valuemethods#thread_local?-instance-method&quot;&gt;thread_local? thread_local? &lt;/a&gt;, &lt;a href=&quot;valuemethods#to_unsafe-instance-method&quot;&gt;to_unsafe to_unsafe&lt;/a&gt; , &lt;a href=&quot;valuemethods#to_value-instance-method&quot;&gt;to_value to_value&lt;/a&gt; , &lt;a href=&quot;valuemethods#type-instance-method&quot;&gt;тип type&lt;/a&gt; , &lt;a href=&quot;valuemethods#volatile=(volatile)-instance-method&quot;&gt;volatile = (volatile) volatile =&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6cf8b2f84857c80b132da69e98e0a22ca1f2e52d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;!=&lt;/code&gt; &amp;ndash; not equals</source>
          <target state="translated">&lt;code&gt;!=&lt;/code&gt; - не равно</target>
        </trans-unit>
        <trans-unit id="727e18fa4ca6f54b3b1cb3c7b4549b41f08b1ff7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;*&quot;&lt;/code&gt; matches all regular files.</source>
          <target state="translated">&lt;code&gt;&quot;*&quot;&lt;/code&gt; соответствует всем обычным файлам.</target>
        </trans-unit>
        <trans-unit id="e6ecc84b725f5a81c6fbea24186bf66b66c830d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;*c&quot;&lt;/code&gt; matches all files ending with &lt;code&gt;c&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;*c&quot;&lt;/code&gt; соответствует всем файлам, оканчивающимся на &lt;code&gt;c&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="88733c612bd2ab367bbbd5d13a9a3d769af01a28" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;*c*&quot;&lt;/code&gt; matches all files that have &lt;code&gt;c&lt;/code&gt; in them (including at the beginning or end).</source>
          <target state="translated">&lt;code&gt;&quot;*c*&quot;&lt;/code&gt; соответствует всем файлам, в которых есть &lt;code&gt;c&lt;/code&gt; (включая начало или конец).</target>
        </trans-unit>
        <trans-unit id="f4e9de796e94fcb2c3e55b42c57feb7fccd6b37a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;&lt;a href=&quot;location#UTC&quot;&gt;UTC&lt;/a&gt;&quot;&lt;/code&gt; and empty string (&lt;code&gt;&quot;&quot;&lt;/code&gt;) return &lt;code&gt;&lt;a href=&quot;location#UTC&quot;&gt;Location::UTC&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&quot;&lt;a href=&quot;location#UTC&quot;&gt;UTC&lt;/a&gt;&quot;&lt;/code&gt; и пустая строка ( &lt;code&gt;&quot;&quot;&lt;/code&gt; ) возвращают &lt;code&gt;&lt;a href=&quot;location#UTC&quot;&gt;Location::UTC&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="062367d403e815b63958af43f7fdc9fb5cc17d98" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;c*&quot;&lt;/code&gt; matches all files beginning with &lt;code&gt;c&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;c*&quot;&lt;/code&gt; соответствует всем файлам, начинающимся с &lt;code&gt;c&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a49b53350d3b5b94d377b37c661d1382996eea04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;foo\tbar&quot;&lt;/code&gt;, &lt;code&gt;%(&quot;あ&quot;)&lt;/code&gt;, &lt;code&gt;%q(foo #{foo})&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&quot;foo\tbar&quot;&lt;/code&gt; , &lt;code&gt;%(&quot;あ&quot;)&lt;/code&gt; , &lt;code&gt;%q(foo #{foo})&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8df46063854e1e85351279b1ab9ab1095e83da25" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#value&lt;/code&gt; returns this ordinal number. It can easily be converted to the also common numbering based on &lt;code&gt;&lt;a href=&quot;dayofweek#Sunday&quot;&gt;Sunday&lt;/a&gt; = 0&lt;/code&gt; using &lt;code&gt;value % 7&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;#value&lt;/code&gt; возвращает этот порядковый номер. Его можно легко преобразовать в обычную нумерацию на основе &lt;code&gt;&lt;a href=&quot;dayofweek#Sunday&quot;&gt;Sunday&lt;/a&gt; = 0&lt;/code&gt; используя &lt;code&gt;value % 7&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3214c5c2007c3b10f5c7dd9dd3c0dac986ef91fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%&lt;/code&gt; &amp;ndash; modulo</source>
          <target state="translated">&lt;code&gt;%&lt;/code&gt; - по модулю</target>
        </trans-unit>
        <trans-unit id="6e847b2cbac21918e62f4af07f3b13f1fe32bdcf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;&lt;/code&gt; &amp;ndash; bitwise and</source>
          <target state="translated">&lt;code&gt;&amp;amp;&lt;/code&gt; - поразрядно и</target>
        </trans-unit>
        <trans-unit id="d0131e40d8d2930f5532fd7c8427253e4fcd9148" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; &amp;ndash; shift right</source>
          <target state="translated">&lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; - сдвиг вправо</target>
        </trans-unit>
        <trans-unit id="7b38d888d09148487e96d0edcf60799c33ebdc7e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;gt;&lt;/code&gt; &amp;ndash; greater</source>
          <target state="translated">&lt;code&gt;&amp;gt;&lt;/code&gt; - больше</target>
        </trans-unit>
        <trans-unit id="d04324242fa44903fe8143f9fdd146cee2ebfd0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;gt;=1&lt;/code&gt;: abort after &lt;code&gt;&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; seconds on close. Linux and Cygwin may block on close.</source>
          <target state="translated">&lt;code&gt;&amp;gt;=1&lt;/code&gt; : отменить после &lt;code&gt;&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; секунд при закрытии. Linux и Cygwin могут блокироваться при закрытии.</target>
        </trans-unit>
        <trans-unit id="db66630810fbe839879bee9daf82d10089bb3c13" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;gt;=&lt;/code&gt; &amp;ndash; greater or equal</source>
          <target state="translated">&lt;code&gt;&amp;gt;=&lt;/code&gt; - больше или равно</target>
        </trans-unit>
        <trans-unit id="c2b229998cffa90970eb9b5a186b0808f178345e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt; &amp;ndash; shift left, append</source>
          <target state="translated">&lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt; - сдвинуть влево, добавить</target>
        </trans-unit>
        <trans-unit id="ac457514e7bdff589c124b5bb1db0e038b05ed31" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;&lt;/code&gt; &amp;ndash; less</source>
          <target state="translated">&lt;code&gt;&amp;lt;&lt;/code&gt; - меньше</target>
        </trans-unit>
        <trans-unit id="11e7e9cdb4ab5a9df0d731cc31024fd4b1be323b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; &amp;ndash; comparison</source>
          <target state="translated">&lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; - сравнение</target>
        </trans-unit>
        <trans-unit id="79c988ad35d520e66ea2eba61c8064e42f6bef6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;=&lt;/code&gt; &amp;ndash; less or equal</source>
          <target state="translated">&lt;code&gt;&amp;lt;=&lt;/code&gt; - меньше или равно</target>
        </trans-unit>
        <trans-unit id="5b0d1f9cf7f75ebbafe47a9dc209de8ce8a2c5fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'a'&lt;/code&gt;, &lt;code&gt;'\n'&lt;/code&gt;, &lt;code&gt;'あ'&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;'a'&lt;/code&gt; , &lt;code&gt;'\n'&lt;/code&gt; , &lt;code&gt;'あ'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ae4be69c1688eac587fe5824bf6b3f021b7965ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;**&lt;/code&gt; &amp;ndash; exponentiation</source>
          <target state="translated">&lt;code&gt;**&lt;/code&gt; - возведение в степень</target>
        </trans-unit>
        <trans-unit id="8b9d2dcccfa3872322a6a6a1294d53084f372cc2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;**&lt;/code&gt; matches an unlimited number of arbitrary characters including &lt;code&gt;/&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;**&lt;/code&gt; соответствует неограниченному количеству произвольных символов, включая &lt;code&gt;/&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dcf268a84d22ef038796cda9f341a547bbc4f556" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*&lt;/code&gt; &amp;ndash; multiplication</source>
          <target state="translated">&lt;code&gt;*&lt;/code&gt; - умножение</target>
        </trans-unit>
        <trans-unit id="366656fdad415b1e8c6ea6f9355448aa2823dddc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*&lt;/code&gt; matches an unlimited number of arbitrary characters excluding &lt;code&gt;/&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;*&lt;/code&gt; соответствует неограниченному количеству произвольных символов, исключая &lt;code&gt;/&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="338a062a7565baacbaf3c97c8bccf1dd6fb7c51a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;+&lt;/code&gt; &amp;ndash; addition</source>
          <target state="translated">&lt;code&gt;+&lt;/code&gt; - дополнение</target>
        </trans-unit>
        <trans-unit id="d263a71b120b4133210668110e586c5b6e8fe1a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--canonical-base-url=URL, -b URL&lt;/code&gt;: Set the &lt;a href=&quot;https://en.wikipedia.org/wiki/Canonical_link_element&quot;&gt;canonical base url&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;--canonical-base-url=URL, -b URL&lt;/code&gt; : установить &lt;a href=&quot;https://en.wikipedia.org/wiki/Canonical_link_element&quot;&gt;канонический базовый URL&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6df17ed2506342180665afb17f56dc2fd6172e08" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--cross-compile&lt;/code&gt;: When given enables cross compilation mode</source>
          <target state="translated">&lt;code&gt;--cross-compile&lt;/code&gt; : если задано, включает режим кросс-компиляции</target>
        </trans-unit>
        <trans-unit id="3b3d1184ec022a66bc7da840f55f49736c7c4c53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--example &amp;lt;name&amp;gt;&lt;/code&gt;: Runs examples whose full nested names include &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;--example &amp;lt;name&amp;gt;&lt;/code&gt; : запускает примеры, полные вложенные имена которых включают &lt;code&gt;name&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e4af5a09bef06206c911820be2fb71dde7cbc3c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--fail-fast&lt;/code&gt;: Abort the spec run on first failure.</source>
          <target state="translated">&lt;code&gt;--fail-fast&lt;/code&gt; : прервать запуск спецификации при первом сбое.</target>
        </trans-unit>
        <trans-unit id="4ad13f7c23fdf5c462803d66c11aa881319cdf59" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--junit_output &amp;lt;output_dir&amp;gt;&lt;/code&gt;: Generates JUnit XML output.</source>
          <target state="translated">&lt;code&gt;--junit_output &amp;lt;output_dir&amp;gt;&lt;/code&gt; : генерирует вывод JUnit XML.</target>
        </trans-unit>
        <trans-unit id="8170a489423c1604cbf7ebe5897519f2f3b8fe6e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--line &amp;lt;line&amp;gt;&lt;/code&gt;: Runs examples whose line matches &lt;code&gt;line&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;--line &amp;lt;line&amp;gt;&lt;/code&gt; : запускает примеры, строка которых соответствует &lt;code&gt;line&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4b31d3b4e9fe4a13c0f92357dec5dd2beb2183bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--location &amp;lt;file&amp;gt;:&amp;lt;line&amp;gt;&lt;/code&gt;: Runs example(s) at &lt;code&gt;line&lt;/code&gt; in &lt;code&gt;file&lt;/code&gt; (multiple options allowed).</source>
          <target state="translated">&lt;code&gt;--location &amp;lt;file&amp;gt;:&amp;lt;line&amp;gt;&lt;/code&gt; : запускать примеры в &lt;code&gt;line&lt;/code&gt; в &lt;code&gt;file&lt;/code&gt; (допускается несколько параметров).</target>
        </trans-unit>
        <trans-unit id="bc315109730f619dc4d8300f3dbad3097c699005" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--lto=thin&lt;/code&gt;: Use ThinLTO, improves performance.</source>
          <target state="translated">&lt;code&gt;--lto=thin&lt;/code&gt; : использовать ThinLTO, улучшает производительность.</target>
        </trans-unit>
        <trans-unit id="1a27af94a4125385d2f42277aca2f5da77222ccb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--lto=thin&lt;/code&gt;: Use ThinLTO, improving performance on release builds.</source>
          <target state="translated">&lt;code&gt;--lto=thin&lt;/code&gt; : использовать ThinLTO, улучшая производительность при сборке релизов.</target>
        </trans-unit>
        <trans-unit id="86233ba3b3f9ba4c83d28582ea588f5ead0e03a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--no-color&lt;/code&gt;: Disabled colored output.</source>
          <target state="translated">&lt;code&gt;--no-color&lt;/code&gt; : отключен цветной вывод.</target>
        </trans-unit>
        <trans-unit id="124be197ef89e5679f616356170d8f157c9acdce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--no-debug&lt;/code&gt;: Skip any symbolic debug info, reducing the output file size.</source>
          <target state="translated">&lt;code&gt;--no-debug&lt;/code&gt; : пропустить любую символическую информацию отладки, уменьшив размер выходного файла.</target>
        </trans-unit>
        <trans-unit id="2c49ecac760283afefebd587e1ff08289afb7b89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--output=DIR, -o DIR&lt;/code&gt;: Set the output directory (default: &lt;code&gt;./docs&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;--output=DIR, -o DIR&lt;/code&gt; : установить выходной каталог (по умолчанию: &lt;code&gt;./docs&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="d8b6cc3f53c2fea4c9ed647063e4b470e9b0924e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--production&lt;/code&gt;: Runs in release mode. Development dependencies won't be installed and only locked dependencies will be installed. Commands will fail if dependencies in &lt;code&gt;shard.yml&lt;/code&gt; and &lt;code&gt;shard.lock&lt;/code&gt; are out of sync (used by &lt;code&gt;install&lt;/code&gt;, &lt;code&gt;update&lt;/code&gt;, &lt;code&gt;check&lt;/code&gt; and &lt;code&gt;list&lt;/code&gt; command)</source>
          <target state="translated">&lt;code&gt;--production&lt;/code&gt; : работает в режиме выпуска. Зависимости разработки не будут установлены, а будут установлены только заблокированные зависимости. Команды не будут выполнены, если зависимости в &lt;code&gt;shard.yml&lt;/code&gt; и &lt;code&gt;shard.lock&lt;/code&gt; не синхронизированы (используется командами &lt;code&gt;install&lt;/code&gt; , &lt;code&gt;update&lt;/code&gt; , &lt;code&gt;check&lt;/code&gt; и &lt;code&gt;list&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="62c573e57f076d70f3c6928b0e2f6983c44a755b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--profile&lt;/code&gt;: Prints the 10 slowest specs.</source>
          <target state="translated">&lt;code&gt;--profile&lt;/code&gt; : печатает 10 самых медленных характеристик.</target>
        </trans-unit>
        <trans-unit id="e2818c357a576739bfe4ecb347c2816b46068fde" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--progress&lt;/code&gt;: Show progress during compilation.</source>
          <target state="translated">&lt;code&gt;--progress&lt;/code&gt; : показать прогресс во время компиляции.</target>
        </trans-unit>
        <trans-unit id="ac950ac4d9cc7f1fb53d629f908bf4f119a117d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--release&lt;/code&gt;: Compile in release mode, doing extra work to apply optimizations to the generated code.</source>
          <target state="translated">&lt;code&gt;--release&lt;/code&gt; : компилировать в режиме выпуска, выполняя дополнительную работу для применения оптимизаций к сгенерированному коду.</target>
        </trans-unit>
        <trans-unit id="b055dc51d49c96eebafd1fcff3ca9ca4b809bba6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--static&lt;/code&gt;: Link statically.</source>
          <target state="translated">&lt;code&gt;--static&lt;/code&gt; : ссылка статическая.</target>
        </trans-unit>
        <trans-unit id="1f59f027ab1768e15536927d62ea8e21743ae13d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--target&lt;/code&gt;: the &lt;a href=&quot;http://llvm.org/docs/LangRef.html#target-triple&quot;&gt;LLVM Target Triple&lt;/a&gt; to use and set the default &lt;a href=&quot;compile_time_flags&quot;&gt;compile-time flags&lt;/a&gt; from</source>
          <target state="translated">&lt;code&gt;--target&lt;/code&gt; : &lt;a href=&quot;http://llvm.org/docs/LangRef.html#target-triple&quot;&gt;LLVM Target Triple&lt;/a&gt; для использования и установки &lt;a href=&quot;compile_time_flags&quot;&gt;флагов времени компиляции&lt;/a&gt; по умолчанию из</target>
        </trans-unit>
        <trans-unit id="48fdd3ebcbbe84386326baf293973af2cd28ccfd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--verbose&lt;/code&gt;: Prints verbose output, including all example names.</source>
          <target state="translated">&lt;code&gt;--verbose&lt;/code&gt; : выводит подробный вывод, включая все имена примеров.</target>
        </trans-unit>
        <trans-unit id="b8d695fe23842096e5068cc0f5aef364cbffbe16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--version&lt;/code&gt;: Prints the version of &lt;code&gt;shards&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;--version&lt;/code&gt; : печатает версию &lt;code&gt;shards&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3f4c7d846816b988e0ff39ec96117e0426c1a91f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-1&lt;/code&gt; if &lt;code&gt;self&lt;/code&gt; is greater than &lt;em&gt;other&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;-1&lt;/code&gt; если &amp;laquo; &lt;code&gt;self&lt;/code&gt; больше &lt;em&gt;других&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dd8e4df265dcbebcfd64d260b6b3503d98ffaa96" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-1&lt;/code&gt; if &lt;code&gt;self&lt;/code&gt; is less than &lt;em&gt;other&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;-1&lt;/code&gt; , если &lt;code&gt;self&lt;/code&gt; меньше &lt;em&gt;других&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="15ad6650ef267073fa10a561024a3aad9ba1cb2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-1&lt;/code&gt; if this number is negative</source>
          <target state="translated">&lt;code&gt;-1&lt;/code&gt; если это число отрицательно</target>
        </trans-unit>
        <trans-unit id="d89f29c787b9302ed6e5aa3cace7bdb6d8da4acb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-&lt;/code&gt; &amp;ndash; subtraction</source>
          <target state="translated">&lt;code&gt;-&lt;/code&gt; - вычитание</target>
        </trans-unit>
        <trans-unit id="619607ff324ec2ac2d298c0f47c519c737a404bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-a&lt;/code&gt;, &lt;code&gt;-B&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;-a&lt;/code&gt; , &lt;code&gt;-B&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e63540459d0bb92351cb6f45c934a8e749726e35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-f FILE&lt;/code&gt;, &lt;code&gt;--file FILE&lt;/code&gt;, &lt;code&gt;--file=FILE&lt;/code&gt; (these will yield the passed value to the block as a string)</source>
          <target state="translated">&lt;code&gt;-f FILE&lt;/code&gt; , &lt;code&gt;--file FILE&lt;/code&gt; , &lt;code&gt;--file=FILE&lt;/code&gt; (они передадут переданное значение в блок в виде строки)</target>
        </trans-unit>
        <trans-unit id="fd5ffb582f900512a5afd94eb6d37185571f74d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-h, --help&lt;/code&gt;: Prints usage synopsis.</source>
          <target state="translated">&lt;code&gt;-h, --help&lt;/code&gt; : Печатает краткий обзор использования.</target>
        </trans-unit>
        <trans-unit id="4b64f17da65a7f4c5c2aeadbab1173a5e39d92e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-o &amp;lt;output_file&amp;gt;&lt;/code&gt;: Define the name of the binary executable.</source>
          <target state="translated">&lt;code&gt;-o &amp;lt;output_file&amp;gt;&lt;/code&gt; : определить имя двоичного исполняемого файла.</target>
        </trans-unit>
        <trans-unit id="213f208f92f4a4f9235f516c359ed770229d2e86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-q, --quiet&lt;/code&gt;: Decreases the log verbosity, printing only warnings and errors.</source>
          <target state="translated">&lt;code&gt;-q, --quiet&lt;/code&gt; : уменьшает детализацию журнала, печатая только предупреждения и ошибки.</target>
        </trans-unit>
        <trans-unit id="fb184844b5b7013eefe6083d6ba23ed3fd5042c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-v, --verbose&lt;/code&gt;: Increases the log verbosity, printing all debug statements.</source>
          <target state="translated">&lt;code&gt;-v, --verbose&lt;/code&gt; : увеличивает детализацию журнала, печатая все операторы отладки.</target>
        </trans-unit>
        <trans-unit id="4901007555dc5119d44d23f5705940d1e61811ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/(foo)?bar/&lt;/code&gt;, &lt;code&gt;/foo #{foo}/imx&lt;/code&gt;, &lt;code&gt;%r(foo/)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;/(foo)?bar/&lt;/code&gt; , &lt;code&gt;/foo #{foo}/imx&lt;/code&gt; , &lt;code&gt;%r(foo/)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7ad7d400f56cf67bd33bb057f3d2a4ab1e62d243" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/&lt;/code&gt; &amp;ndash; division</source>
          <target state="translated">&lt;code&gt;/&lt;/code&gt; - деление</target>
        </trans-unit>
        <trans-unit id="319b573c5748d37cf7882296f1667e3eedc16867" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/&lt;/code&gt; contains a readme, any project configurations (eg, CI or editor configs), and any other project-level documentation (eg, changelog or contributing guide).</source>
          <target state="translated">&lt;code&gt;/&lt;/code&gt; содержит файл readme, любые конфигурации проекта (например, CI или конфигурации редактора) и любую другую документацию на уровне проекта (например, журнал изменений или руководство по внесению изменений).</target>
        </trans-unit>
        <trans-unit id="887480c8a89e178d3db88af96eca10ac59287663" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0&lt;/code&gt; if &lt;code&gt;self&lt;/code&gt; is equal to &lt;em&gt;other&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; , если &lt;code&gt;self&lt;/code&gt; равно &lt;em&gt;другим&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8d3981bf79cb7d7c19767129d041e59f07b760f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0&lt;/code&gt; if &lt;code&gt;self&lt;/code&gt; is equal to the other object</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; , если &lt;code&gt;self&lt;/code&gt; равно другому объекту</target>
        </trans-unit>
        <trans-unit id="fe87e05131908472363da2eb6391c28f60ba127e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0&lt;/code&gt; if this number is zero</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; , если это число равно нулю</target>
        </trans-unit>
        <trans-unit id="c0aa2d1b9059429cdacb68e91d0ca0b7e7622d85" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0&lt;/code&gt;: Dependencies are satisfied.</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; : Зависимости удовлетворены.</target>
        </trans-unit>
        <trans-unit id="86babbf43f0b4b42472ca5675b8dcffd06b41fa9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0&lt;/code&gt;: abort on close (socket buffer is discarded and RST sent to peer). Depends on platform and whether &lt;code&gt;shutdown()&lt;/code&gt; was called first.</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; : прервать при закрытии (буфер сокета отбрасывается и RST отправляется одноранговому узлу). Зависит от платформы и от того, был ли первый вызов &lt;code&gt;shutdown()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2b63f20dbd38918c3142687c335beb0854aab44f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1..9&lt;/code&gt;, &lt;code&gt;1...10&lt;/code&gt;, &lt;code&gt;0..var&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;1..9&lt;/code&gt; , &lt;code&gt;1...10&lt;/code&gt; , &lt;code&gt;0..var&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0657711f08b73c0e05e3a6c697b54967c403ad00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1.0&lt;/code&gt;, &lt;code&gt;1.0_f32&lt;/code&gt;, &lt;code&gt;1e10&lt;/code&gt;, &lt;code&gt;-0.5&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;1.0&lt;/code&gt; , &lt;code&gt;1.0_f32&lt;/code&gt; , &lt;code&gt;1e10&lt;/code&gt; , &lt;code&gt;-0.5&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1ac5028a4d6ca330af185ec5960dfb4803410953" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;18&lt;/code&gt;, &lt;code&gt;-12&lt;/code&gt;, &lt;code&gt;19_i64&lt;/code&gt;, &lt;code&gt;14_u32&lt;/code&gt;,&lt;code&gt;64_u8&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;18&lt;/code&gt; , &lt;code&gt;-12&lt;/code&gt; , &lt;code&gt;19_i64&lt;/code&gt; , &lt;code&gt;14_u32&lt;/code&gt; , &lt;code&gt;64_u8&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7662099e41a9e7c24d63e32954ba33cd5581fdc0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1&lt;/code&gt; if this number is positive</source>
          <target state="translated">&lt;code&gt;1&lt;/code&gt; , если это число положительное</target>
        </trans-unit>
        <trans-unit id="190fcb12c70d37bc453df8b55ccef9b97c6903e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1&lt;/code&gt;: Dependencies are not satisfied.</source>
          <target state="translated">&lt;code&gt;1&lt;/code&gt; : Зависимости не удовлетворены.</target>
        </trans-unit>
        <trans-unit id="a83aaa5bcc1009f1737969f3536d414f4500142a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:skip&lt;/code&gt;: invalid byte sequences are ignored</source>
          <target state="translated">&lt;code&gt;:skip&lt;/code&gt; : неверные последовательности байтов игнорируются</target>
        </trans-unit>
        <trans-unit id="5b1edb8f1623ce164715ff5cc74bfa821f20b33b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:symbol&lt;/code&gt;, &lt;code&gt;:&quot;foo bar&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:symbol&lt;/code&gt; , &lt;code&gt;:&quot;foo bar&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="096642c6c63fcf1823ab184e7f97f7927f2bd907" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; defines returns &lt;code&gt;false&lt;/code&gt;, but including types may override.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; определяет возвращает &lt;code&gt;false&lt;/code&gt; , но включение типов может переопределить.</target>
        </trans-unit>
        <trans-unit id="66a66dae86ce3cb3ca128e4d316a54a13bdbb328" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../indexable&quot;&gt;Indexable&lt;/a&gt;&lt;/code&gt; makes sure to invoke this method with &lt;em&gt;index&lt;/em&gt; in &lt;code&gt;0..&lt;a href=&quot;parametercollection#size-instance-method&quot;&gt;.size&lt;/a&gt;&lt;/code&gt;, so converting negative indices to positive ones is not needed here.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../indexable&quot;&gt;Indexable&lt;/a&gt;&lt;/code&gt; обязательно вызывает этот метод с&lt;em&gt; индексом&lt;/em&gt; в &lt;code&gt;0..&lt;a href=&quot;parametercollection#size-instance-method&quot;&gt;.size&lt;/a&gt;&lt;/code&gt; , поэтому преобразование отрицательных индексов в положительные здесь не требуется.</target>
        </trans-unit>
        <trans-unit id="7124b7b8fb18769908db7f473fa952000838908d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; defines returns &lt;code&gt;false&lt;/code&gt;, but including types may override.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; определяет возвращает &lt;code&gt;false&lt;/code&gt; , но включение типов может переопределить.</target>
        </trans-unit>
        <trans-unit id="b708f830431fb71071ef6ee0e25f79793eb9ded2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; defines this is a no-op method, but including types may override.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; определяет, что это неоперативный метод, но включение типов может переопределить.</target>
        </trans-unit>
        <trans-unit id="6736fef0f0942973b91e9dc07552a28480fcd5b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; uses this property as default value for most method arguments expecting a &lt;code&gt;&lt;a href=&quot;location&quot;&gt;Location&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; использует это свойство в качестве значения по умолчанию для большинства аргументов метода, ожидающих &lt;code&gt;&lt;a href=&quot;location&quot;&gt;Location&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="662b27e15c33fb9819b87e2b635a397eaba712b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;any&quot;&gt;JSON::Any&lt;/a&gt;&lt;/code&gt; is a convenient wrapper around all possible JSON types (&lt;code&gt;&lt;a href=&quot;any/type&quot;&gt;JSON::Any::Type&lt;/a&gt;&lt;/code&gt;) and can be used for traversing dynamic or unknown JSON structures.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;any&quot;&gt;JSON::Any&lt;/a&gt;&lt;/code&gt; является удобной оболочкой для всех возможных типов JSON ( &lt;code&gt;&lt;a href=&quot;any/type&quot;&gt;JSON::Any::Type&lt;/a&gt;&lt;/code&gt; ) и может использоваться для обхода динамических или неизвестных структур JSON.</target>
        </trans-unit>
        <trans-unit id="7bb5128abac7bd2917521b3b1fd303c82977ad55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;any&quot;&gt;YAML::Any&lt;/a&gt;&lt;/code&gt; is a convenient wrapper around all possible YAML core types (&lt;code&gt;&lt;a href=&quot;any/type&quot;&gt;YAML::Any::Type&lt;/a&gt;&lt;/code&gt;) and can be used for traversing dynamic or unknown YAML structures.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;any&quot;&gt;YAML::Any&lt;/a&gt;&lt;/code&gt; является удобной оболочкой для всех возможных типов ядра YAML ( &lt;code&gt;&lt;a href=&quot;any/type&quot;&gt;YAML::Any::Type&lt;/a&gt;&lt;/code&gt; ) и может использоваться для обхода динамических или неизвестных структур YAML.</target>
        </trans-unit>
        <trans-unit id="6c7abd89d293c6c8503164925accaf57d04915d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;benchmark/ips&quot;&gt;Benchmark::IPS&lt;/a&gt;&lt;/code&gt; defaults to 2 seconds of warmup time and 5 seconds of calculation time. This can be configured:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;benchmark/ips&quot;&gt;Benchmark::IPS&lt;/a&gt;&lt;/code&gt; умолчанию составляет 2 секунды времени прогрева и 5 секунд времени расчета. Это можно настроить:</target>
        </trans-unit>
        <trans-unit id="ef731adc466e1f287ae1cac1129cf47dfa137c60" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;bigrational#inspect:String-instance-method&quot;&gt;#inspect&lt;/a&gt;&lt;/code&gt; (and &lt;code&gt;&lt;a href=&quot;bigrational#inspect(io:IO):Nil-instance-method&quot;&gt;#inspect(io)&lt;/a&gt;&lt;/code&gt;) are the methods used when you invoke &lt;code&gt;&lt;a href=&quot;bigrational#to_s(io:IO,base:Int=10):Nil-instance-method&quot;&gt;#to_s&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;bigrational#inspect:String-instance-method&quot;&gt;#inspect&lt;/a&gt;&lt;/code&gt; on an object that holds other objects and wants to show them. For example when you invoke &lt;code&gt;&lt;a href=&quot;array#to_s(io:IO):Nil-instance-method&quot;&gt;Array#to_s&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;bigrational#inspect:String-instance-method&quot;&gt;#inspect&lt;/a&gt;&lt;/code&gt; will be invoked on each element:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;bigrational#inspect:String-instance-method&quot;&gt;#inspect&lt;/a&gt;&lt;/code&gt; (и &lt;code&gt;&lt;a href=&quot;bigrational#inspect(io:IO):Nil-instance-method&quot;&gt;#inspect(io)&lt;/a&gt;&lt;/code&gt; ) - это методы, используемые при вызове &lt;code&gt;&lt;a href=&quot;bigrational#to_s(io:IO,base:Int=10):Nil-instance-method&quot;&gt;#to_s&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;bigrational#inspect:String-instance-method&quot;&gt;#inspect&lt;/a&gt;&lt;/code&gt; для объекта, который содержит другие объекты и хочет их показать. Например, когда вы вызываете &lt;code&gt;&lt;a href=&quot;array#to_s(io:IO):Nil-instance-method&quot;&gt;Array#to_s&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;bigrational#inspect:String-instance-method&quot;&gt;#inspect&lt;/a&gt;&lt;/code&gt; будет вызываться для каждого элемента:</target>
        </trans-unit>
        <trans-unit id="5fbe2d4cfdbc26f8f104999371723a4e22eb3c8c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;bitarray&quot;&gt;BitArray&lt;/a&gt;&lt;/code&gt; includes all the methods in &lt;code&gt;&lt;a href=&quot;enumerable&quot;&gt;Enumerable&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;bitarray&quot;&gt;BitArray&lt;/a&gt;&lt;/code&gt; включает в себя все методы в &lt;code&gt;&lt;a href=&quot;enumerable&quot;&gt;Enumerable&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="75d49966a3a728a440a44d0a2191a0bf0ebb52d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;&lt;/code&gt; uses &lt;code&gt;&lt;a href=&quot;comparable#(other:T)-instance-method&quot;&gt;#&amp;lt;=&amp;gt;&lt;/a&gt;&lt;/code&gt; to implement the conventional comparison operators (&lt;code&gt;&lt;a href=&quot;comparable#%3C(other:T)-instance-method&quot;&gt;#&amp;lt;&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;comparable#%3C=(other:T)-instance-method&quot;&gt;#&amp;lt;=&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;comparable#==(other:T)-instance-method&quot;&gt;#==&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;comparable#%3E=(other:T)-instance-method&quot;&gt;#&amp;gt;=&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;comparable#%3E(other:T)-instance-method&quot;&gt;#&amp;gt;&lt;/a&gt;&lt;/code&gt;). All of these return &lt;code&gt;false&lt;/code&gt; when &lt;code&gt;&lt;a href=&quot;comparable#(other:T)-instance-method&quot;&gt;#&amp;lt;=&amp;gt;&lt;/a&gt;&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;&lt;/code&gt; использует &lt;code&gt;&lt;a href=&quot;comparable#(other:T)-instance-method&quot;&gt;#&amp;lt;=&amp;gt;&lt;/a&gt;&lt;/code&gt; для реализации обычных операторов сравнения ( &lt;code&gt;&lt;a href=&quot;comparable#%3C(other:T)-instance-method&quot;&gt;#&amp;lt;&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;comparable#%3C=(other:T)-instance-method&quot;&gt;#&amp;lt;=&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;comparable#==(other:T)-instance-method&quot;&gt;#==&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;comparable#%3E=(other:T)-instance-method&quot;&gt;#&amp;gt;=&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;comparable#%3E(other:T)-instance-method&quot;&gt;#&amp;gt;&lt;/a&gt;&lt;/code&gt; ). Все они возвращают &lt;code&gt;false&lt;/code&gt; , когда &lt;code&gt;&lt;a href=&quot;comparable#(other:T)-instance-method&quot;&gt;#&amp;lt;=&amp;gt;&lt;/a&gt;&lt;/code&gt; возвращает &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4c91a9782612ee4155b106533c72fe1baa3b173f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;complex#sqrt-instance-method&quot;&gt;Complex#sqrt&lt;/a&gt;&lt;/code&gt; was inspired by the &lt;a href=&quot;https://pavpanchekha.com/casio/&quot;&gt;following blog post&lt;/a&gt; of Pavel Panchekha on floating point precision.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;complex#sqrt-instance-method&quot;&gt;Complex#sqrt&lt;/a&gt;&lt;/code&gt; был вдохновлен&lt;a href=&quot;https://pavpanchekha.com/casio/&quot;&gt; следующим сообщением в блоге&lt;/a&gt; Павла Панчеха о точности с плавающей точкой.</target>
        </trans-unit>
        <trans-unit id="6548975a23dc6b942d888c141895465f612e13fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;dayofweek&quot;&gt;DayOfWeek&lt;/a&gt;&lt;/code&gt; represents a day of the week in the Gregorian calendar.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;dayofweek&quot;&gt;DayOfWeek&lt;/a&gt;&lt;/code&gt; представляет день недели в григорианском календаре.</target>
        </trans-unit>
        <trans-unit id="9f46fabe60d6acf2e6dbd0d8bcd82af28b879a9a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;enumerable/chunk/alone&quot;&gt;Enumerable::Chunk::Alone&lt;/a&gt;&lt;/code&gt; specifies that the element should be chunked by itself</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;enumerable/chunk/alone&quot;&gt;Enumerable::Chunk::Alone&lt;/a&gt;&lt;/code&gt; указывает, что элемент должен быть разбит на части</target>
        </trans-unit>
        <trans-unit id="d19d42ac7a401d1829854503d5e3536d69e876f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;enumerable/chunk/drop&quot;&gt;Enumerable::Chunk::Drop&lt;/a&gt;&lt;/code&gt; specifies that the elements should be dropped</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;enumerable/chunk/drop&quot;&gt;Enumerable::Chunk::Drop&lt;/a&gt;&lt;/code&gt; указывает, что элементы должны быть удалены</target>
        </trans-unit>
        <trans-unit id="7a94a0ec84ec4ccfd2f291b8f07c202b492afa9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;env&quot;&gt;ENV&lt;/a&gt;&lt;/code&gt; is a hash-like accessor for environment variables.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;env&quot;&gt;ENV&lt;/a&gt;&lt;/code&gt; - это хеш-подобный метод доступа к переменным среды.</target>
        </trans-unit>
        <trans-unit id="e809996e28a2ea0ff0fced3a803b39114342ac53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;field&quot;&gt;JSON::Field&lt;/a&gt;&lt;/code&gt; properties:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;field&quot;&gt;JSON::Field&lt;/a&gt;&lt;/code&gt; Свойства поля :</target>
        </trans-unit>
        <trans-unit id="63f88c51fc9cf11d078458a3a1df1f2f96f69812" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;field&quot;&gt;YAML::Field&lt;/a&gt;&lt;/code&gt; properties:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;field&quot;&gt;YAML::Field&lt;/a&gt;&lt;/code&gt; Свойства месторождения :</target>
        </trans-unit>
        <trans-unit id="f0639e71a6839d92cfcc62c034c09954ca578c34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;indexable&quot;&gt;Indexable&lt;/a&gt;&lt;/code&gt; makes sure to invoke this method with &lt;em&gt;index&lt;/em&gt; in &lt;code&gt;0..&lt;a href=&quot;array#size:Int32-instance-method&quot;&gt;.size&lt;/a&gt;&lt;/code&gt;, so converting negative indices to positive ones is not needed here.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;indexable&quot;&gt;Indexable&lt;/a&gt;&lt;/code&gt; обязательно вызывает этот метод с&lt;em&gt; индексом&lt;/em&gt; в &lt;code&gt;0..&lt;a href=&quot;array#size:Int32-instance-method&quot;&gt;.size&lt;/a&gt;&lt;/code&gt; , поэтому преобразование отрицательных индексов в положительные здесь не требуется.</target>
        </trans-unit>
        <trans-unit id="75730cc9d1a0c83495b18a0bf36e720aa6af63bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;indexable&quot;&gt;Indexable&lt;/a&gt;&lt;/code&gt; makes sure to invoke this method with &lt;em&gt;index&lt;/em&gt; in &lt;code&gt;0..&lt;a href=&quot;bitarray#size:Int32-instance-method&quot;&gt;.size&lt;/a&gt;&lt;/code&gt;, so converting negative indices to positive ones is not needed here.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;indexable&quot;&gt;Indexable&lt;/a&gt;&lt;/code&gt; обязательно вызывает этот метод с&lt;em&gt; индексом&lt;/em&gt; в &lt;code&gt;0..&lt;a href=&quot;bitarray#size:Int32-instance-method&quot;&gt;.size&lt;/a&gt;&lt;/code&gt; , поэтому преобразование отрицательных индексов в положительные здесь не требуется.</target>
        </trans-unit>
        <trans-unit id="5572278147cc5f600c9b972c52423d7034e86abf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;indexable&quot;&gt;Indexable&lt;/a&gt;&lt;/code&gt; makes sure to invoke this method with &lt;em&gt;index&lt;/em&gt; in &lt;code&gt;0..&lt;a href=&quot;deque#size-instance-method&quot;&gt;.size&lt;/a&gt;&lt;/code&gt;, so converting negative indices to positive ones is not needed here.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;indexable&quot;&gt;Indexable&lt;/a&gt;&lt;/code&gt; обязательно вызывает этот метод с&lt;em&gt; индексом&lt;/em&gt; в &lt;code&gt;0..&lt;a href=&quot;deque#size-instance-method&quot;&gt;.size&lt;/a&gt;&lt;/code&gt; , поэтому преобразование отрицательных индексов в положительные здесь не требуется.</target>
        </trans-unit>
        <trans-unit id="693d84d7c4dcabe15d06451b9db2499eeed0ec5e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;indexable&quot;&gt;Indexable&lt;/a&gt;&lt;/code&gt; makes sure to invoke this method with &lt;em&gt;index&lt;/em&gt; in &lt;code&gt;0..&lt;a href=&quot;indexable#size-instance-method&quot;&gt;.size&lt;/a&gt;&lt;/code&gt;, so converting negative indices to positive ones is not needed here.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;indexable&quot;&gt;Indexable&lt;/a&gt;&lt;/code&gt; обязательно вызывает этот метод с&lt;em&gt; индексом&lt;/em&gt; в &lt;code&gt;0..&lt;a href=&quot;indexable#size-instance-method&quot;&gt;.size&lt;/a&gt;&lt;/code&gt; , поэтому преобразование отрицательных индексов в положительные здесь не требуется.</target>
        </trans-unit>
        <trans-unit id="67e05a891666b74f6a4b089360ea70fa449b265d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;indexable&quot;&gt;Indexable&lt;/a&gt;&lt;/code&gt; makes sure to invoke this method with &lt;em&gt;index&lt;/em&gt; in &lt;code&gt;0..&lt;a href=&quot;slice#size:Int32-instance-method&quot;&gt;.size&lt;/a&gt;&lt;/code&gt;, so converting negative indices to positive ones is not needed here.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;indexable&quot;&gt;Indexable&lt;/a&gt;&lt;/code&gt; обязательно вызывает этот метод с&lt;em&gt; индексом&lt;/em&gt; в &lt;code&gt;0..&lt;a href=&quot;slice#size:Int32-instance-method&quot;&gt;.size&lt;/a&gt;&lt;/code&gt; , поэтому преобразование отрицательных индексов в положительные здесь не требуется.</target>
        </trans-unit>
        <trans-unit id="847004bc7fa1526d9ad85f23bb34fcbc06287165" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;indexable&quot;&gt;Indexable&lt;/a&gt;&lt;/code&gt; makes sure to invoke this method with &lt;em&gt;index&lt;/em&gt; in &lt;code&gt;0..&lt;a href=&quot;staticarray#size-instance-method&quot;&gt;.size&lt;/a&gt;&lt;/code&gt;, so converting negative indices to positive ones is not needed here.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;indexable&quot;&gt;Indexable&lt;/a&gt;&lt;/code&gt; обязательно вызывает этот метод с&lt;em&gt; индексом&lt;/em&gt; в &lt;code&gt;0..&lt;a href=&quot;staticarray#size-instance-method&quot;&gt;.size&lt;/a&gt;&lt;/code&gt; , поэтому преобразование отрицательных индексов в положительные здесь не требуется.</target>
        </trans-unit>
        <trans-unit id="e8635f79bdca94b476cf904ce140e63ba4cf672e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;indexable&quot;&gt;Indexable&lt;/a&gt;&lt;/code&gt; makes sure to invoke this method with &lt;em&gt;index&lt;/em&gt; in &lt;code&gt;0..&lt;a href=&quot;tuple#size-instance-method&quot;&gt;.size&lt;/a&gt;&lt;/code&gt;, so converting negative indices to positive ones is not needed here.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;indexable&quot;&gt;Indexable&lt;/a&gt;&lt;/code&gt; обязательно вызывает этот метод с&lt;em&gt; индексом&lt;/em&gt; в &lt;code&gt;0..&lt;a href=&quot;tuple#size-instance-method&quot;&gt;.size&lt;/a&gt;&lt;/code&gt; , поэтому преобразование отрицательных индексов в положительные здесь не требуется.</target>
        </trans-unit>
        <trans-unit id="e85b1a7310bfbf25b06fd06b06b507e354bc8303" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;: enable &lt;code&gt;SO_LINGER&lt;/code&gt; and set timeout to &lt;code&gt;&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; seconds</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; : включить &lt;code&gt;SO_LINGER&lt;/code&gt; и установить время ожидания в &lt;code&gt;&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; секунд</target>
        </trans-unit>
        <trans-unit id="e742134c1fa9f989b256393a5ee32f07ff43180b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;invalidlocationnameerror&quot;&gt;InvalidLocationNameError&lt;/a&gt;&lt;/code&gt; is raised if a location name cannot be found in the time zone database.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;invalidlocationnameerror&quot;&gt;InvalidLocationNameError&lt;/a&gt;&lt;/code&gt; возникает, если имя местоположения не может быть найдено в базе данных часовых поясов.</target>
        </trans-unit>
        <trans-unit id="96f9f0c61edff5aadd92531f56d35adcbe83b9e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;invalidtimezoneoffseterror&quot;&gt;InvalidTimezoneOffsetError&lt;/a&gt;&lt;/code&gt; is raised if &lt;code&gt;&lt;a href=&quot;zone#new(name:String?,offset:Int32,dst:Bool)-class-method&quot;&gt;Time::Location::Zone.new&lt;/a&gt;&lt;/code&gt; receives an invalid time zone offset.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;invalidtimezoneoffseterror&quot;&gt;InvalidTimezoneOffsetError&lt;/a&gt;&lt;/code&gt; возникает, если &lt;code&gt;&lt;a href=&quot;zone#new(name:String?,offset:Int32,dst:Bool)-class-method&quot;&gt;Time::Location::Zone.new&lt;/a&gt;&lt;/code&gt; получает недопустимое смещение часового пояса.</target>
        </trans-unit>
        <trans-unit id="42407023169cbb2023c7e4f9f675845747cf102f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;invalidtzdataerror&quot;&gt;InvalidTZDataError&lt;/a&gt;&lt;/code&gt; is raised if a zoneinfo file contains invalid time zone data.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;invalidtzdataerror&quot;&gt;InvalidTZDataError&lt;/a&gt;&lt;/code&gt; возникает, если файл zoneinfo содержит недопустимые данные часового пояса.</target>
        </trans-unit>
        <trans-unit id="557ba62d9c4dd1ec653df0b683f80955f2ae33f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; defines returns &lt;code&gt;false&lt;/code&gt;, but including types may override.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; определяет возвращает &lt;code&gt;false&lt;/code&gt; , но включение типов может переопределить.</target>
        </trans-unit>
        <trans-unit id="a1adc966e03accb4b70bc16346d536846c686d79" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; defines this is a no-op method, but including types may override.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; определяет, что это неоперативный метод, но включение типов может переопределить.</target>
        </trans-unit>
        <trans-unit id="6cd78a250365b959ea09828f1883488dd8430182" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;io#read(slice:Bytes)-instance-method&quot;&gt;#read(slice : Bytes)&lt;/a&gt;&lt;/code&gt;: read at most &lt;em&gt;slice.size&lt;/em&gt; bytes from IO into &lt;em&gt;slice&lt;/em&gt; and return the number of bytes read</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;io#read(slice:Bytes)-instance-method&quot;&gt;#read(slice : Bytes)&lt;/a&gt;&lt;/code&gt; : прочитать не более&lt;em&gt; slice.size&lt;/em&gt; байтов из IO в&lt;em&gt; slice&lt;/em&gt; и вернуть количество прочитанных байтов</target>
        </trans-unit>
        <trans-unit id="284319b4a1bf6dcde7bd85294943695edb13d633" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;io#write(slice:Bytes):Nil-instance-method&quot;&gt;#write(slice : Bytes)&lt;/a&gt;&lt;/code&gt;: write the whole &lt;em&gt;slice&lt;/em&gt; into the IO</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;io#write(slice:Bytes):Nil-instance-method&quot;&gt;#write(slice : Bytes)&lt;/a&gt;&lt;/code&gt; : записать весь&lt;em&gt; фрагмент&lt;/em&gt; в IO</target>
        </trans-unit>
        <trans-unit id="acb5180f7bbfda83a361773121bce47ada1d35a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ipaddress&quot;&gt;IPAddress&lt;/a&gt;&lt;/code&gt; won't resolve domains, including &lt;code&gt;localhost&lt;/code&gt;. If you must resolve an IP, or don't know whether a &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; constains an IP or a domain name, you should use &lt;code&gt;&lt;a href=&quot;addrinfo#resolve(domain,service,family:Family?=nil,type:Type=nil,protocol:Protocol=Protocol::IP,timeout=nil):Array(Addrinfo)-class-method&quot;&gt;Addrinfo.resolve&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ipaddress&quot;&gt;IPAddress&lt;/a&gt;&lt;/code&gt; не разрешает домены, включая &lt;code&gt;localhost&lt;/code&gt; . Если вам необходимо разрешить IP-адрес или вы не знаете, содержит ли &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; IP-адрес или доменное имя, вам следует использовать &lt;code&gt;&lt;a href=&quot;addrinfo#resolve(domain,service,family:Family?=nil,type:Type=nil,protocol:Protocol=Protocol::IP,timeout=nil):Array(Addrinfo)-class-method&quot;&gt;Addrinfo.resolve&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aeec33f556b316756ec1a4d500b2eb51a04b661e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;iterator&quot;&gt;Iterator&lt;/a&gt;&lt;/code&gt; redefines many of &lt;code&gt;&lt;a href=&quot;enumerable&quot;&gt;Enumerable&lt;/a&gt;&lt;/code&gt;'s method in a lazy way, returning iterators instead of arrays.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;iterator&quot;&gt;Iterator&lt;/a&gt;&lt;/code&gt; переопределяет многиеметоды &lt;code&gt;&lt;a href=&quot;enumerable&quot;&gt;Enumerable&lt;/a&gt;&lt;/code&gt; ленивым способом, возвращая итераторы вместо массивов.</target>
        </trans-unit>
        <trans-unit id="c99f38e240cb4a16069e5a58b5f570a8d9e1975c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;iteratorwrapper&quot;&gt;IteratorWrapper&lt;/a&gt;&lt;/code&gt; eliminates some boilerplate when defining an &lt;code&gt;&lt;a href=&quot;../iterator&quot;&gt;Iterator&lt;/a&gt;&lt;/code&gt; that wraps another iterator.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;iteratorwrapper&quot;&gt;IteratorWrapper&lt;/a&gt;&lt;/code&gt; устраняет некоторые шаблоны при определении &lt;code&gt;&lt;a href=&quot;../iterator&quot;&gt;Iterator&lt;/a&gt;&lt;/code&gt; который оборачивает другой итератор.</target>
        </trans-unit>
        <trans-unit id="e47a42daac6a57741d08231169ecfd93a2843106" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;json#mapping(**_properties_)-macro&quot;&gt;JSON.mapping&lt;/a&gt;&lt;/code&gt; must receive a series of named arguments, or a named tuple literal, or a hash literal, whose keys will define Crystal properties.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;json#mapping(**_properties_)-macro&quot;&gt;JSON.mapping&lt;/a&gt;&lt;/code&gt; должен получить серию именованных аргументов, или именованный литерал кортежа, или хеш-литерал, ключи которого будут определять свойства Crystal.</target>
        </trans-unit>
        <trans-unit id="6a958397db2db12bde95c78996e7a57c0f0a1d37" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;json#parse(input:String%7CIO):Any-class-method&quot;&gt;JSON.parse&lt;/a&gt;&lt;/code&gt; can read from an &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; directly (such as a file) which saves allocating a string:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;json#parse(input:String%7CIO):Any-class-method&quot;&gt;JSON.parse&lt;/a&gt;&lt;/code&gt; может читать из &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; напрямую (например, из файла), что сохраняет выделение строки:</target>
        </trans-unit>
        <trans-unit id="4ee805b544c76402f490ac1485d4100dae864153" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;json#parse(input:String%7CIO):Any-class-method&quot;&gt;JSON.parse&lt;/a&gt;&lt;/code&gt; will return an &lt;code&gt;&lt;a href=&quot;json/any&quot;&gt;Any&lt;/a&gt;&lt;/code&gt;, which is a convenient wrapper around all possible JSON types, making it easy to traverse a complex JSON structure but requires some casts from time to time, mostly via some method invocations.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;json#parse(input:String%7CIO):Any-class-method&quot;&gt;JSON.parse&lt;/a&gt;&lt;/code&gt; будет возвращать &lt;code&gt;&lt;a href=&quot;json/any&quot;&gt;Any&lt;/a&gt;&lt;/code&gt; , который является удобной оболочкой для всех возможных типов JSON, облегчая обход сложной структуры JSON, но время от времени требует некоторого приведения, в основном через некоторые вызовы методов.</target>
        </trans-unit>
        <trans-unit id="f9c2e6f43da64d7679e873e68c397aab963bb453" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;location&quot;&gt;Location&lt;/a&gt;&lt;/code&gt; maps time instants to the zone in use at that time. It typically represents the collection of time offsets observed in a certain geographical area.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;location&quot;&gt;Location&lt;/a&gt;&lt;/code&gt; отображает моменты времени для зоны, используемой в то время. Обычно он представляет собой совокупность временных смещений, наблюдаемых в определенной географической области.</target>
        </trans-unit>
        <trans-unit id="7782c3d560ba85c826d8e56cd743f9ef5049efbe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;matchdata&quot;&gt;Regex::MatchData&lt;/a&gt;&lt;/code&gt; is the type of the special variable &lt;code&gt;$~&lt;/code&gt;, and is the type returned by &lt;code&gt;&lt;a href=&quot;../regex#match(str,pos=0,options=Regex::Options::None):MatchData?-instance-method&quot;&gt;Regex#match&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../string#match(regex:Regex,pos=0):Regex::MatchData?-instance-method&quot;&gt;String#match&lt;/a&gt;&lt;/code&gt;. It encapsulates all the results of a regular expression match.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;matchdata&quot;&gt;Regex::MatchData&lt;/a&gt;&lt;/code&gt; является типом специальной переменной &lt;code&gt;$~&lt;/code&gt; и является типом, возвращаемым &lt;code&gt;&lt;a href=&quot;../regex#match(str,pos=0,options=Regex::Options::None):MatchData?-instance-method&quot;&gt;Regex#match&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;../string#match(regex:Regex,pos=0):Regex::MatchData?-instance-method&quot;&gt;String#match&lt;/a&gt;&lt;/code&gt; . Он инкапсулирует все результаты совпадения регулярного выражения.</target>
        </trans-unit>
        <trans-unit id="b9513d86446dfeee17dbcc2d684e951e3a0ee366" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;object&quot;&gt;Object&lt;/a&gt;&lt;/code&gt; is the base type of all Crystal objects.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;object&quot;&gt;Object&lt;/a&gt;&lt;/code&gt; является базовым типом всех объектов Crystal.</target>
        </trans-unit>
        <trans-unit id="dca2c68d1f5589d0f8aecc467ffe5797ff8e2dac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;object#inspect:String-instance-method&quot;&gt;#inspect&lt;/a&gt;&lt;/code&gt; (and &lt;code&gt;&lt;a href=&quot;object#inspect(io:IO):Nil-instance-method&quot;&gt;#inspect(io)&lt;/a&gt;&lt;/code&gt;) are the methods used when you invoke &lt;code&gt;&lt;a href=&quot;object#to_s:String-instance-method&quot;&gt;#to_s&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;object#inspect:String-instance-method&quot;&gt;#inspect&lt;/a&gt;&lt;/code&gt; on an object that holds other objects and wants to show them. For example when you invoke &lt;code&gt;&lt;a href=&quot;array#to_s(io:IO):Nil-instance-method&quot;&gt;Array#to_s&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;object#inspect:String-instance-method&quot;&gt;#inspect&lt;/a&gt;&lt;/code&gt; will be invoked on each element:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;object#inspect:String-instance-method&quot;&gt;#inspect&lt;/a&gt;&lt;/code&gt; (и &lt;code&gt;&lt;a href=&quot;object#inspect(io:IO):Nil-instance-method&quot;&gt;#inspect(io)&lt;/a&gt;&lt;/code&gt; ) - это методы, используемые при вызове &lt;code&gt;&lt;a href=&quot;object#to_s:String-instance-method&quot;&gt;#to_s&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;object#inspect:String-instance-method&quot;&gt;#inspect&lt;/a&gt;&lt;/code&gt; для объекта, который содержит другие объекты и хочет их показать. Например, когда вы вызываете &lt;code&gt;&lt;a href=&quot;array#to_s(io:IO):Nil-instance-method&quot;&gt;Array#to_s&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;object#inspect:String-instance-method&quot;&gt;#inspect&lt;/a&gt;&lt;/code&gt; будет вызываться для каждого элемента:</target>
        </trans-unit>
        <trans-unit id="f12ca9426d158bae768e251e29e3c57438fc88c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;optionparser&quot;&gt;OptionParser&lt;/a&gt;&lt;/code&gt; is a class for command-line options processing. It supports:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;optionparser&quot;&gt;OptionParser&lt;/a&gt;&lt;/code&gt; - это класс для обработки параметров командной строки. Поддерживает:</target>
        </trans-unit>
        <trans-unit id="0dc5754da5a7603be157db58a3eb0db821a33fc4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;parsecontext#read_alias(node,type:T.class,&amp;amp;block)forallT-instance-method&quot;&gt;#read_alias&lt;/a&gt;&lt;/code&gt; must be invoked before an instance is created</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;parsecontext#read_alias(node,type:T.class,&amp;amp;block)forallT-instance-method&quot;&gt;#read_alias&lt;/a&gt;&lt;/code&gt; должен быть вызван до создания экземпляра</target>
        </trans-unit>
        <trans-unit id="281734edbf581fd013256959bb06ae6edd10727b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;parsecontext#record_anchor(node,object:T):NilforallT-instance-method&quot;&gt;#record_anchor&lt;/a&gt;&lt;/code&gt; must be invoked after an instance is created and before its members are deserialized.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;parsecontext#record_anchor(node,object:T):NilforallT-instance-method&quot;&gt;#record_anchor&lt;/a&gt;&lt;/code&gt; должен вызываться после создания экземпляра и до десериализации его членов.</target>
        </trans-unit>
        <trans-unit id="d1bbac570cd565067fffc23abe1eb3804ef2c781" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;partialcomparable&quot;&gt;PartialComparable&lt;/a&gt;&lt;/code&gt; uses &lt;code&gt;&lt;a href=&quot;partialcomparable#(other:T)-instance-method&quot;&gt;#&amp;lt;=&amp;gt;&lt;/a&gt;&lt;/code&gt; to implement the conventional comparison operators (&lt;code&gt;&lt;a href=&quot;partialcomparable#%3C(other:T)-instance-method&quot;&gt;#&amp;lt;&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;partialcomparable#%3C=(other:T)-instance-method&quot;&gt;#&amp;lt;=&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;partialcomparable#==(other:T)-instance-method&quot;&gt;#==&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;partialcomparable#%3E=(other:T)-instance-method&quot;&gt;#&amp;gt;=&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;partialcomparable#%3E(other:T)-instance-method&quot;&gt;#&amp;gt;&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;partialcomparable&quot;&gt;PartialComparable&lt;/a&gt;&lt;/code&gt; использует &lt;code&gt;&lt;a href=&quot;partialcomparable#(other:T)-instance-method&quot;&gt;#&amp;lt;=&amp;gt;&lt;/a&gt;&lt;/code&gt; &amp;lt;=&amp;gt; для реализации обычных операторов сравнения ( &lt;code&gt;&lt;a href=&quot;partialcomparable#%3C(other:T)-instance-method&quot;&gt;#&amp;lt;&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;partialcomparable#%3C=(other:T)-instance-method&quot;&gt;#&amp;lt;=&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;partialcomparable#==(other:T)-instance-method&quot;&gt;#==&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;partialcomparable#%3E=(other:T)-instance-method&quot;&gt;#&amp;gt;=&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;partialcomparable#%3E(other:T)-instance-method&quot;&gt;#&amp;gt;&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="63b7837b0102a7735b2fb1efeda573ded938028f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;random&quot;&gt;Random&lt;/a&gt;&lt;/code&gt; provides an interface for random values generation, using a pseudo random number generator (PRNG).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;random&quot;&gt;Random&lt;/a&gt;&lt;/code&gt; обеспечивает интерфейс для генерации случайных значений, используя генератор псевдослучайных чисел (PRNG).</target>
        </trans-unit>
        <trans-unit id="2fb4d4f99666c7273cfa3c23205d2585bff7c688" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;reference&quot;&gt;Reference&lt;/a&gt;&lt;/code&gt; is the base class of classes you define in your program. It is set as a class' superclass when you don't specify one:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;reference&quot;&gt;Reference&lt;/a&gt;&lt;/code&gt; - это базовый класс классов, которые вы определяете в своей программе. Он устанавливается как суперкласс класса, когда вы его не указали:</target>
        </trans-unit>
        <trans-unit id="9433f0de2b29f54486561553ea4bc398a5b8efd5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;server&quot;&gt;HTTP::Server&lt;/a&gt;&lt;/code&gt; will try to fill this property, and its value will have a format like &quot;IP:port&quot;, but this format is not guaranteed. Middlewares can overwrite this value.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;server&quot;&gt;HTTP::Server&lt;/a&gt;&lt;/code&gt; попытается заполнить это свойство, и его значение будет иметь формат, подобный &amp;laquo;IP: порт&amp;raquo;, но этот формат не гарантируется. Промежуточное ПО может перезаписать это значение.</target>
        </trans-unit>
        <trans-unit id="94a676f7b243b2a762043c72fa75cf636ad78a44" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;server#bind(socket:Socket::Server):Nil-instance-method&quot;&gt;#bind(uri : URI)&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;server#bind(socket:Socket::Server):Nil-instance-method&quot;&gt;#bind(uri : String)&lt;/a&gt;&lt;/code&gt; parse socket configuration for one of these types from an &lt;code&gt;&lt;a href=&quot;../uri&quot;&gt;URI&lt;/a&gt;&lt;/code&gt;. This can be useful for injecting plain text configuration values.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;server#bind(socket:Socket::Server):Nil-instance-method&quot;&gt;#bind(uri : URI)&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;server#bind(socket:Socket::Server):Nil-instance-method&quot;&gt;#bind(uri : String)&lt;/a&gt;&lt;/code&gt; анализируют конфигурацию сокета для одного из этих типов из &lt;code&gt;&lt;a href=&quot;../uri&quot;&gt;URI&lt;/a&gt;&lt;/code&gt; . Это может быть полезно для ввода значений конфигурации простого текста.</target>
        </trans-unit>
        <trans-unit id="a5e224939335e12b92a665ffd6b5ec68a4c9a081" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;set&quot;&gt;Set&lt;/a&gt;&lt;/code&gt; assumes that the identity of each element does not change while it is stored. Modifying an element of a set will render the set to an unreliable state.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;set&quot;&gt;Set&lt;/a&gt;&lt;/code&gt; предполагает, что идентичность каждого элемента не изменяется, пока он хранится. Изменение элемента набора приведет к ненадежному состоянию набора.</target>
        </trans-unit>
        <trans-unit id="1a27262b7fce762e0b83e8c680dd38dd43b2def0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;set&quot;&gt;Set&lt;/a&gt;&lt;/code&gt; implements a collection of unordered values with no duplicates.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;set&quot;&gt;Set&lt;/a&gt;&lt;/code&gt; реализует коллекцию неупорядоченных значений без дубликатов.</target>
        </trans-unit>
        <trans-unit id="24a9d3806a42fe37fd2a5e1202a6a56c93c26873" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;set&quot;&gt;Set&lt;/a&gt;&lt;/code&gt; uses &lt;code&gt;&lt;a href=&quot;hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; as storage, so you must note the following points:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;set&quot;&gt;Set&lt;/a&gt;&lt;/code&gt; использует &lt;code&gt;&lt;a href=&quot;hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; в качестве хранилища, поэтому вы должны отметить следующие моменты:</target>
        </trans-unit>
        <trans-unit id="1a3167f1a6f37fe89db792b1f28663eb066ec958" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;span&quot;&gt;Time::Span&lt;/a&gt;&lt;/code&gt; represents one period of time.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;span&quot;&gt;Time::Span&lt;/a&gt;&lt;/code&gt; представляет один период времени.</target>
        </trans-unit>
        <trans-unit id="05154658b8e2a5f36dde3cdb3625daf9e7dc403c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;staticarray&quot;&gt;StaticArray&lt;/a&gt;&lt;/code&gt; is a generic type with type argument &lt;code&gt;T&lt;/code&gt; specifying the type of its elements and &lt;code&gt;N&lt;/code&gt; the fixed size. For example &lt;code&gt;&lt;a href=&quot;staticarray&quot;&gt;StaticArray&lt;/a&gt;(&lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt;, 3)&lt;/code&gt; is a static array of &lt;code&gt;&lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; with three elements.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;staticarray&quot;&gt;StaticArray&lt;/a&gt;&lt;/code&gt; - универсальный тип с аргументом типа &lt;code&gt;T&lt;/code&gt; , определяющим тип его элементов, а &lt;code&gt;N&lt;/code&gt; - фиксированный размер. Например, &lt;code&gt;&lt;a href=&quot;staticarray&quot;&gt;StaticArray&lt;/a&gt;(&lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt;, 3)&lt;/code&gt; является статическим массивом &lt;code&gt;&lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; с тремя элементами.</target>
        </trans-unit>
        <trans-unit id="b8c162189a068676e9efac764ef23216776e3a26" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;stringscanner&quot;&gt;StringScanner&lt;/a&gt;&lt;/code&gt; provides for lexical scanning operations on a &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;stringscanner&quot;&gt;StringScanner&lt;/a&gt;&lt;/code&gt; обеспечивает лексическое сканирование &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="76e695cc043510e387eab2318b28c609311f2569" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;struct&quot;&gt;Struct&lt;/a&gt;&lt;/code&gt; is the base type of structs you create in your program. It is set as a struct's superstruct when you don't specify one:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;struct&quot;&gt;Struct&lt;/a&gt;&lt;/code&gt; - это базовый тип структур, которые вы создаете в своей программе. Он устанавливается как надстройка структуры, если вы не указали ее:</target>
        </trans-unit>
        <trans-unit id="5214f63d8b539be4b03278201f849c56e0fc8505" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; instances representing a specific instant can be created by &lt;code&gt;&lt;a href=&quot;time#utc:Time-class-method&quot;&gt;.utc&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;time#new(year:Int32,month:Int32,day:Int32,hour:Int32=0,minute:Int32=0,second:Int32=0,*,nanosecond:Int32=0,location:Location=Location.local):Time-class-method&quot;&gt;.new&lt;/a&gt;&lt;/code&gt; with the date-time specified as individual arguments:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; экземплярыпредставляющие определенный моментможет быть создан &lt;code&gt;&lt;a href=&quot;time#utc:Time-class-method&quot;&gt;.utc&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;time#new(year:Int32,month:Int32,day:Int32,hour:Int32=0,minute:Int32=0,second:Int32=0,*,nanosecond:Int32=0,location:Location=Location.local):Time-class-method&quot;&gt;.new&lt;/a&gt;&lt;/code&gt; с указанием даты-времениуказанногокачестве отдельных аргументов:</target>
        </trans-unit>
        <trans-unit id="176f32e569e4d4df548769ed0f77e4c63354cb09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; represents a date-time instant in &lt;a href=&quot;https://www.w3.org/International/articles/definitions-time/#incremental_time&quot;&gt;incremental time&lt;/a&gt; observed in a specific time zone.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; представляет собой момент времени даты в&lt;a href=&quot;https://www.w3.org/International/articles/definitions-time/#incremental_time&quot;&gt; инкрементном времени,&lt;/a&gt; наблюдаемый в конкретном часовом поясе.</target>
        </trans-unit>
        <trans-unit id="9d8a449b1f11236dc61f56d01e0dba556d465ca9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;time#day:Int32-instance-method&quot;&gt;#day&lt;/a&gt;&lt;/code&gt;: &lt;code&gt;1&lt;/code&gt; - &lt;code&gt;28&lt;/code&gt;/&lt;code&gt;29&lt;/code&gt;/&lt;code&gt;30&lt;/code&gt;/&lt;code&gt;31&lt;/code&gt; (depending on month and year)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;time#day:Int32-instance-method&quot;&gt;#day&lt;/a&gt;&lt;/code&gt; : &lt;code&gt;1&lt;/code&gt; - &lt;code&gt;28&lt;/code&gt; / &lt;code&gt;29&lt;/code&gt; / &lt;code&gt;30&lt;/code&gt; / &lt;code&gt;31&lt;/code&gt; (зависимости от месяца и года)</target>
        </trans-unit>
        <trans-unit id="38984c47a1ec0860d411c7fe93d404e2d387b12f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;time#day_of_week:Time::DayOfWeek-instance-method&quot;&gt;#day_of_week&lt;/a&gt;&lt;/code&gt;: &lt;code&gt;1..7&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;time#day_of_week:Time::DayOfWeek-instance-method&quot;&gt;#day_of_week&lt;/a&gt;&lt;/code&gt; : &lt;code&gt;1..7&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4161087c2b39aca1e6b2aa5c877dd8c2e1365fa6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;time#hour:Int32-instance-method&quot;&gt;#hour&lt;/a&gt;&lt;/code&gt;: &lt;code&gt;0..23&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;time#hour:Int32-instance-method&quot;&gt;#hour&lt;/a&gt;&lt;/code&gt; : &lt;code&gt;0..23&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dacecd8ccfcdd512f9572afa2463a9ba865e66d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;time#minute:Int32-instance-method&quot;&gt;#minute&lt;/a&gt;&lt;/code&gt;: &lt;code&gt;0..59&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;time#minute:Int32-instance-method&quot;&gt;#minute&lt;/a&gt;&lt;/code&gt; : &lt;code&gt;0..59&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="16e53a0f36e0871071db4a73fe2574c423ffb0cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;time#month:Int32-instance-method&quot;&gt;#month&lt;/a&gt;&lt;/code&gt;: &lt;code&gt;1..12&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;time#month:Int32-instance-method&quot;&gt;#month&lt;/a&gt;&lt;/code&gt; : &lt;code&gt;1..12&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bd9ecc49d9a40c2c08244ca4753df54c3bd967a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;time#nanosecond:Int32-instance-method&quot;&gt;#nanosecond&lt;/a&gt;&lt;/code&gt;: &lt;code&gt;0..999_999_999&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;time#nanosecond:Int32-instance-method&quot;&gt;#nanosecond&lt;/a&gt;&lt;/code&gt; : &lt;code&gt;0..999_999_999&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1997613fe07cea7e7c2209989b3ce7a3ddf738b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;time#second:Int32-instance-method&quot;&gt;#second&lt;/a&gt;&lt;/code&gt;: &lt;code&gt;0..59&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;time#second:Int32-instance-method&quot;&gt;#second&lt;/a&gt;&lt;/code&gt; : &lt;code&gt;0..59&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4a6f68f8979073fd89941e87698f5c855625089d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;time#to_local_in(location:Location)-instance-method&quot;&gt;#to_local_in&lt;/a&gt;&lt;/code&gt; allows changing the time zone while keeping the same local date-time (wall clock) which results in a different instant on the time line.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;time#to_local_in(location:Location)-instance-method&quot;&gt;#to_local_in&lt;/a&gt;&lt;/code&gt; позволяет изменять часовой пояс, сохраняя при этом ту же местную дату-время (настенные часы), что приводит к другому моменту на временной шкале.</target>
        </trans-unit>
        <trans-unit id="9572e77acbe644ddb829440cc90365db134468d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;time#year:Int32-instance-method&quot;&gt;#year&lt;/a&gt;&lt;/code&gt;: &lt;code&gt;1..9999&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;time#year:Int32-instance-method&quot;&gt;#year&lt;/a&gt;&lt;/code&gt; : &lt;code&gt;1..9999&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="068b36689da22c617e4d4491569982df7412d52b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;time/location#UTC&quot;&gt;Time::Location::UTC&lt;/a&gt;&lt;/code&gt; will only be used as &lt;code&gt;&lt;a href=&quot;time#location:Location-instance-method&quot;&gt;#location&lt;/a&gt;&lt;/code&gt; if the formatted time does not contain any time zone information. The return value can't be assumed to be a UTC time (this can be achieved by calling &lt;code&gt;&lt;a href=&quot;time#to_utc:Time-instance-method&quot;&gt;#to_utc&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;time/location#UTC&quot;&gt;Time::Location::UTC&lt;/a&gt;&lt;/code&gt; будет использоваться только как &lt;code&gt;&lt;a href=&quot;time#location:Location-instance-method&quot;&gt;#location&lt;/a&gt;&lt;/code&gt; , если отформатированное время не содержит никакой информации о часовом поясе. Нельзя предположить, что возвращаемое значение будет временем UTC (это может быть достигнуто путем вызова &lt;code&gt;&lt;a href=&quot;time#to_utc:Time-instance-method&quot;&gt;#to_utc&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="d3590b75c9a013fa400419ce712fa7404159180a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;time/location#local-class-method&quot;&gt;Time::Location.local&lt;/a&gt;&lt;/code&gt; will only be used as &lt;code&gt;&lt;a href=&quot;time#location:Location-instance-method&quot;&gt;#location&lt;/a&gt;&lt;/code&gt; if the formatted time does not contain any time zone information. The return value can't be assumed to be a UTC time (this can be achieved by calling &lt;code&gt;&lt;a href=&quot;time#to_local:Time-instance-method&quot;&gt;#to_local&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;time/location#local-class-method&quot;&gt;Time::Location.local&lt;/a&gt;&lt;/code&gt; будет использоваться только как &lt;code&gt;&lt;a href=&quot;time#location:Location-instance-method&quot;&gt;#location&lt;/a&gt;&lt;/code&gt; , если отформатированное время не содержит никакой информации о часовом поясе. Возвращаемое значение не может быть принято как время UTC (это может быть достигнуто путем вызова &lt;code&gt;&lt;a href=&quot;time#to_local:Time-instance-method&quot;&gt;#to_local&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="17969937fcad851ad277d8e4cf81b5256b65dcc3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;uri#decode(string:String,*,plus_to_space:Bool=false):String-class-method&quot;&gt;.decode(string : String, *, plus_to_space : Bool = false)&lt;/a&gt; : &lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;: Decodes a URL-encoded string.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;uri#decode(string:String,*,plus_to_space:Bool=false):String-class-method&quot;&gt;.decode(string : String, *, plus_to_space : Bool = false)&lt;/a&gt; : &lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; : Декодирует строку в кодировке URL.</target>
        </trans-unit>
        <trans-unit id="46696f6fd24f1475f53ee4a15022d7b289d8d936" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;uri#decode(string:String,io:IO,*,plus_to_space:Bool=false):Nil-class-method&quot;&gt;.decode(string : String, io : IO, *, plus_to_space : Bool = false)&lt;/a&gt; : &lt;a href=&quot;nil&quot;&gt;Nil&lt;/a&gt;&lt;/code&gt;: Decodes a URL-encoded string to an IO.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;uri#decode(string:String,io:IO,*,plus_to_space:Bool=false):Nil-class-method&quot;&gt;.decode(string : String, io : IO, *, plus_to_space : Bool = false)&lt;/a&gt; : &lt;a href=&quot;nil&quot;&gt;Nil&lt;/a&gt;&lt;/code&gt; : Декодирует строку в кодировке URL в IO.</target>
        </trans-unit>
        <trans-unit id="bd6d246f69b6bad5bf7af8e85ad79f35e9ae71fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;uri#decode(string:String,io:IO,*,plus_to_space:Bool=false):Nil-class-method&quot;&gt;.decode&lt;/a&gt;&lt;/code&gt; encodes plus literally by default.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;uri#decode(string:String,io:IO,*,plus_to_space:Bool=false):Nil-class-method&quot;&gt;.decode&lt;/a&gt;&lt;/code&gt; кодирует плюс буквально по умолчанию.</target>
        </trans-unit>
        <trans-unit id="851f635a66a7d8f35acc9053240765131d35a21d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;uri#decode(string:String,io:IO,*,plus_to_space:Bool=false):Nil-class-method&quot;&gt;.decode&lt;/a&gt;&lt;/code&gt; is the reverse operation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;uri#decode(string:String,io:IO,*,plus_to_space:Bool=false):Nil-class-method&quot;&gt;.decode&lt;/a&gt;&lt;/code&gt; - обратная операция.</target>
        </trans-unit>
        <trans-unit id="dec74dffd3ccb556686dc0eb11f02a16c7d181fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;uri#decode_www_form(string:String,*,plus_to_space:Bool=true):String-class-method&quot;&gt;.decode_www_form(string : String, *, plus_to_space : Bool = true)&lt;/a&gt; : &lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;: Decodes an &lt;code&gt;x-www-form-urlencoded&lt;/code&gt; string component.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;uri#decode_www_form(string:String,*,plus_to_space:Bool=true):String-class-method&quot;&gt;.decode_www_form(string : String, *, plus_to_space : Bool = true)&lt;/a&gt; : &lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; : Декодируеткомпонент строки &lt;code&gt;x-www-form-urlencoded&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ba5b11f582f57148a494bd7be9bfed1e2f75b799" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;uri#decode_www_form(string:String,io:IO,*,plus_to_space:Bool=true):Nil-class-method&quot;&gt;.decode_www_form(string : String, io : IO, *, plus_to_space : Bool = true)&lt;/a&gt; : &lt;a href=&quot;nil&quot;&gt;Nil&lt;/a&gt;&lt;/code&gt;: Decodes an &lt;code&gt;x-www-form-urlencoded&lt;/code&gt; string component to an IO.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;uri#decode_www_form(string:String,io:IO,*,plus_to_space:Bool=true):Nil-class-method&quot;&gt;.decode_www_form(string : String, io : IO, *, plus_to_space : Bool = true)&lt;/a&gt; : &lt;a href=&quot;nil&quot;&gt;Nil&lt;/a&gt;&lt;/code&gt; : Декодируетстроковый компонент &lt;code&gt;x-www-form-urlencoded&lt;/code&gt; в IO.</target>
        </trans-unit>
        <trans-unit id="fca055a9cb25859644ee985246d3945d85eac3df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;uri#decode_www_form(string:String,io:IO,*,plus_to_space:Bool=true):Nil-class-method&quot;&gt;.decode_www_form&lt;/a&gt;&lt;/code&gt; encodes plus to space by default.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;uri#decode_www_form(string:String,io:IO,*,plus_to_space:Bool=true):Nil-class-method&quot;&gt;.decode_www_form&lt;/a&gt;&lt;/code&gt; кодирует плюс в пробел по умолчанию.</target>
        </trans-unit>
        <trans-unit id="c8011049facdd2d605dcecb5b201bca67d078f26" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;uri#decode_www_form(string:String,io:IO,*,plus_to_space:Bool=true):Nil-class-method&quot;&gt;.decode_www_form&lt;/a&gt;&lt;/code&gt; is the reverse operation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;uri#decode_www_form(string:String,io:IO,*,plus_to_space:Bool=true):Nil-class-method&quot;&gt;.decode_www_form&lt;/a&gt;&lt;/code&gt; - обратная операция.</target>
        </trans-unit>
        <trans-unit id="be26d9f9ece715d8a9cc6b1686e77a2ac1ff7a6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;uri#encode(string:String,*,space_to_plus:Bool=false):String-class-method&quot;&gt;.encode(string : String, *, space_to_plus : Bool = false)&lt;/a&gt; : &lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;: URL-encodes a string.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;uri#encode(string:String,*,space_to_plus:Bool=false):String-class-method&quot;&gt;.encode(string : String, *, space_to_plus : Bool = false)&lt;/a&gt; : &lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; : URL-кодирует строку.</target>
        </trans-unit>
        <trans-unit id="ed3c2714bf855ab6edfb89a88113116e66484b0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;uri#encode(string:String,io:IO,*,space_to_plus:Bool=false):Nil-class-method&quot;&gt;.encode(string : String, io : IO, *, space_to_plus : Bool = false)&lt;/a&gt; : &lt;a href=&quot;nil&quot;&gt;Nil&lt;/a&gt;&lt;/code&gt;: URL-encodes a string to an IO.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;uri#encode(string:String,io:IO,*,space_to_plus:Bool=false):Nil-class-method&quot;&gt;.encode(string : String, io : IO, *, space_to_plus : Bool = false)&lt;/a&gt; : &lt;a href=&quot;nil&quot;&gt;Nil&lt;/a&gt;&lt;/code&gt; : URL-кодирует строку в IO.</target>
        </trans-unit>
        <trans-unit id="d443775c26a185d502532483f3b8dd5a00ce9688" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;uri#encode(string:String,io:IO,*,space_to_plus:Bool=false):Nil-class-method&quot;&gt;.encode&lt;/a&gt;&lt;/code&gt; does not escape reserved characters.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;uri#encode(string:String,io:IO,*,space_to_plus:Bool=false):Nil-class-method&quot;&gt;.encode&lt;/a&gt;&lt;/code&gt; не экранирует зарезервированные символы.</target>
        </trans-unit>
        <trans-unit id="5046950462972dadf5c3674c0d877a61bf08cb18" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;uri#encode(string:String,io:IO,*,space_to_plus:Bool=false):Nil-class-method&quot;&gt;.encode&lt;/a&gt;&lt;/code&gt; is the reverse operation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;uri#encode(string:String,io:IO,*,space_to_plus:Bool=false):Nil-class-method&quot;&gt;.encode&lt;/a&gt;&lt;/code&gt; - обратная операция.</target>
        </trans-unit>
        <trans-unit id="32b275606a8094bc5b0609c37922d574a68c3676" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;uri#encode_www_form(string:String,*,space_to_plus:Bool=true):String-class-method&quot;&gt;.encode_www_form(string : String, *, space_to_plus : Bool = true)&lt;/a&gt; : &lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;: Encodes a string as a &lt;code&gt;x-www-form-urlencoded&lt;/code&gt; component.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;uri#encode_www_form(string:String,*,space_to_plus:Bool=true):String-class-method&quot;&gt;.encode_www_form(string : String, *, space_to_plus : Bool = true)&lt;/a&gt; : &lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; : кодирует строку каккомпонент,кодированный по &lt;code&gt;x-www-form-urlencoded&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b1bdc3032da9fe68c3f27c9b1048c8de112c78a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;uri#encode_www_form(string:String,*,space_to_plus:Bool=true):String-class-method&quot;&gt;.encode_www_form&lt;/a&gt;&lt;/code&gt; also escapes reserved characters.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;uri#encode_www_form(string:String,*,space_to_plus:Bool=true):String-class-method&quot;&gt;.encode_www_form&lt;/a&gt;&lt;/code&gt; также экранирует зарезервированные символы.</target>
        </trans-unit>
        <trans-unit id="25593e5e41a025f7fd8a2d89bbf56e140dc451b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;uri#encode_www_form(string:String,*,space_to_plus:Bool=true):String-class-method&quot;&gt;.encode_www_form&lt;/a&gt;&lt;/code&gt; is the reverse operation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;uri#encode_www_form(string:String,*,space_to_plus:Bool=true):String-class-method&quot;&gt;.encode_www_form&lt;/a&gt;&lt;/code&gt; - обратная операция.</target>
        </trans-unit>
        <trans-unit id="0b643df2361141386606456ddc1f3c87d35537be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;uri#encode_www_form(string:String,io:IO,*,space_to_plus:Bool=true):Nil-class-method&quot;&gt;.encode_www_form(string : String, io : IO, *, space_to_plus : Bool = true)&lt;/a&gt; : &lt;a href=&quot;nil&quot;&gt;Nil&lt;/a&gt;&lt;/code&gt;: Encodes a string as a &lt;code&gt;x-www-form-urlencoded&lt;/code&gt; component to an IO.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;uri#encode_www_form(string:String,io:IO,*,space_to_plus:Bool=true):Nil-class-method&quot;&gt;.encode_www_form(string : String, io : IO, *, space_to_plus : Bool = true)&lt;/a&gt; : &lt;a href=&quot;nil&quot;&gt;Nil&lt;/a&gt;&lt;/code&gt; : кодирует строку каккомпонент,кодированный по &lt;code&gt;x-www-form-urlencoded&lt;/code&gt; , для ввода-вывода.</target>
        </trans-unit>
        <trans-unit id="1552c2db50389cffa78000ac74d99d8c5fd587a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;uri#host:String?-instance-method&quot;&gt;#host&lt;/a&gt;&lt;/code&gt; is lowercased.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;uri#host:String?-instance-method&quot;&gt;#host&lt;/a&gt;&lt;/code&gt; находится в нижнем регистре.</target>
        </trans-unit>
        <trans-unit id="31ef7e36718796b0eba3db251094dc8a3cf8aab0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;uri#path:String-instance-method&quot;&gt;#path&lt;/a&gt;&lt;/code&gt; is resolved to a minimal, semantical equivalent representation removing dot segments &lt;code&gt;/.&lt;/code&gt; and &lt;code&gt;/..&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;uri#path:String-instance-method&quot;&gt;#path&lt;/a&gt;&lt;/code&gt; разрешается до минимального семантического эквивалентного представления, удаляющего точечные сегменты &lt;code&gt;/.&lt;/code&gt; и &lt;code&gt;/..&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bdf02311d14b23294ccdbb153d06b54838fa51d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;uri#port:Int32?-instance-method&quot;&gt;#port&lt;/a&gt;&lt;/code&gt; is removed if it is the &lt;code&gt;.default_port?&lt;/code&gt; of the scheme.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;uri#port:Int32?-instance-method&quot;&gt;#port&lt;/a&gt;&lt;/code&gt; удаляется, если это &lt;code&gt;.default_port?&lt;/code&gt; схемы.</target>
        </trans-unit>
        <trans-unit id="143e62541812bc43d08bd84f373b82aa5790814d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;uri#scheme:String?-instance-method&quot;&gt;#scheme&lt;/a&gt;&lt;/code&gt; is lowercased.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;uri#scheme:String?-instance-method&quot;&gt;#scheme&lt;/a&gt;&lt;/code&gt; в нижнем регистре.</target>
        </trans-unit>
        <trans-unit id="67b59b8cab46acb5563118af01361d8096779c25" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;value&quot;&gt;Value&lt;/a&gt;&lt;/code&gt; is the base type of the primitive types (&lt;code&gt;&lt;a href=&quot;nil&quot;&gt;Nil&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;bool&quot;&gt;Bool&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;number&quot;&gt;Number&lt;/a&gt;&lt;/code&gt;), &lt;code&gt;&lt;a href=&quot;symbol&quot;&gt;Symbol&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;pointer&quot;&gt;Pointer&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;tuple&quot;&gt;Tuple&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;staticarray&quot;&gt;StaticArray&lt;/a&gt;&lt;/code&gt; and all structs.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;value&quot;&gt;Value&lt;/a&gt;&lt;/code&gt; - это базовый тип примитивных типов ( &lt;code&gt;&lt;a href=&quot;nil&quot;&gt;Nil&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;bool&quot;&gt;Bool&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;number&quot;&gt;Number&lt;/a&gt;&lt;/code&gt; ), &lt;code&gt;&lt;a href=&quot;symbol&quot;&gt;Symbol&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;pointer&quot;&gt;Pointer&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;tuple&quot;&gt;Tuple&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;staticarray&quot;&gt;StaticArray&lt;/a&gt;&lt;/code&gt; и всех структур.</target>
        </trans-unit>
        <trans-unit id="90ee166e3a28efc4d88f701636d77af7b9f97a81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;xml#parse(string:String,options:ParserOptions=ParserOptions.default):Node-class-method&quot;&gt;XML#parse&lt;/a&gt;&lt;/code&gt; will parse xml from &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; and return xml document as an &lt;code&gt;&lt;a href=&quot;xml/node&quot;&gt;XML::Node&lt;/a&gt;&lt;/code&gt; which represents all kinds of xml nodes.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;xml#parse(string:String,options:ParserOptions=ParserOptions.default):Node-class-method&quot;&gt;XML#parse&lt;/a&gt;&lt;/code&gt; будет анализировать XML из &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; и возвращать XML-документ в виде &lt;code&gt;&lt;a href=&quot;xml/node&quot;&gt;XML::Node&lt;/a&gt;&lt;/code&gt; который представляет все виды узлов XML.</target>
        </trans-unit>
        <trans-unit id="7a93a17df81c6a37abbf98877ba63609a68dc483" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;yaml#dump(object,io:IO)-class-method&quot;&gt;YAML.dump&lt;/a&gt;&lt;/code&gt; generates the YAML representation for an object. An &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; can be passed and it will be written there, otherwise it will be returned as a string. Similarly, &lt;code&gt;#to_yaml&lt;/code&gt; (with or without an &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;) on any object does the same.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;yaml#dump(object,io:IO)-class-method&quot;&gt;YAML.dump&lt;/a&gt;&lt;/code&gt; генерирует представление YAML для объекта. &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; может быть принят и будет там написано,противном случае он будет возвращен в виде строки. Точно так же &lt;code&gt;#to_yaml&lt;/code&gt; (с &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; или без) для любого объекта делает то же самое.</target>
        </trans-unit>
        <trans-unit id="9407662ea14799adfa9b290094943565e989a144" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;yaml#parse(data:String%7CIO):Any-class-method&quot;&gt;YAML.parse&lt;/a&gt;&lt;/code&gt; can read from an &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; directly (such as a file) which saves allocating a string:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;yaml#parse(data:String%7CIO):Any-class-method&quot;&gt;YAML.parse&lt;/a&gt;&lt;/code&gt; может читать из &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; напрямую (например, из файла), что сохраняет выделение строки:</target>
        </trans-unit>
        <trans-unit id="9ca997e9f013ba6c30e8388fed933310cfe80846" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;yaml#parse(data:String%7CIO):Any-class-method&quot;&gt;YAML.parse&lt;/a&gt;&lt;/code&gt; will return an &lt;code&gt;&lt;a href=&quot;yaml/any&quot;&gt;Any&lt;/a&gt;&lt;/code&gt;, which is a convenient wrapper around all possible YAML core types, making it easy to traverse a complex YAML structure but requires some casts from time to time, mostly via some method invocations.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;yaml#parse(data:String%7CIO):Any-class-method&quot;&gt;YAML.parse&lt;/a&gt;&lt;/code&gt; будет возвращать &lt;code&gt;&lt;a href=&quot;yaml/any&quot;&gt;Any&lt;/a&gt;&lt;/code&gt; , который является удобной оболочкой для всех возможных типов ядра YAML, облегчая обход сложной структуры YAML, но время от времени требует некоторых приведений, в основном через некоторые вызовы методов.</target>
        </trans-unit>
        <trans-unit id="74e7557535fecf90c57a220f267c58964d3907d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;zip/file&quot;&gt;Zip::File&lt;/a&gt;&lt;/code&gt; is the preferred method to read zip files if you can provide a &lt;code&gt;&lt;a href=&quot;zip/file&quot;&gt;File&lt;/a&gt;&lt;/code&gt;, because it's a bit more flexible and provides more complete information for zip entries (such as comments).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;zip/file&quot;&gt;Zip::File&lt;/a&gt;&lt;/code&gt; является предпочтительным методом для чтения zip-файлов, если вы можете предоставить &lt;code&gt;&lt;a href=&quot;zip/file&quot;&gt;File&lt;/a&gt;&lt;/code&gt; , потому что он немного более гибкий и предоставляет более полную информацию для zip-записей (таких как комментарии).</target>
        </trans-unit>
        <trans-unit id="d5d50cfa4931554180fe95ab88e2037119eeab0c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;zip/file&quot;&gt;Zip::File&lt;/a&gt;&lt;/code&gt;: can read zip entries from a &lt;code&gt;&lt;a href=&quot;zip/file&quot;&gt;File&lt;/a&gt;&lt;/code&gt; or from an &lt;code&gt;&lt;a href=&quot;io/memory&quot;&gt;IO::Memory&lt;/a&gt;&lt;/code&gt; and provides random read access to its entries.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;zip/file&quot;&gt;Zip::File&lt;/a&gt;&lt;/code&gt; : может читать zip-записи из &lt;code&gt;&lt;a href=&quot;zip/file&quot;&gt;File&lt;/a&gt;&lt;/code&gt; или из &lt;code&gt;&lt;a href=&quot;io/memory&quot;&gt;IO::Memory&lt;/a&gt;&lt;/code&gt; и обеспечивает произвольный доступ для чтения к его записям.</target>
        </trans-unit>
        <trans-unit id="32e8411c2398041caf02dd9aee656ad9ceb3c9a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;zip/reader&quot;&gt;Zip::Reader&lt;/a&gt;&lt;/code&gt;: can only read zip entries sequentially from any &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;zip/reader&quot;&gt;Zip::Reader&lt;/a&gt;&lt;/code&gt; : может только читать записи zip последовательно из любого &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6acfca44ac2b42553d8da6f104eefabd5d125690" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;==&lt;/code&gt; &amp;ndash; equals</source>
          <target state="translated">&lt;code&gt;==&lt;/code&gt; - равно</target>
        </trans-unit>
        <trans-unit id="5346f143130a1650dda696e4bafc3e08303c9d50" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;===&lt;/code&gt; &amp;ndash; &lt;a href=&quot;case&quot;&gt;case equality&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;===&lt;/code&gt; - &lt;a href=&quot;case&quot;&gt;регистр равенства&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c41f6638706362b055946939c973e5c6b5a19d76" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;?&lt;/code&gt; matches any one character excluding &lt;code&gt;/&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;?&lt;/code&gt; соответствует любому одному символу, исключая &lt;code&gt;/&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5be6c8b8f40f2d92e3ecd4e678a94444ac7bd950" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@[&lt;a href=&quot;link&quot;&gt;Link&lt;/a&gt;(&quot;pcre&quot;)]&lt;/code&gt; will lookup for a shared library.</source>
          <target state="translated">&lt;code&gt;@[&lt;a href=&quot;link&quot;&gt;Link&lt;/a&gt;(&quot;pcre&quot;)]&lt;/code&gt; будет искать общую библиотеку.</target>
        </trans-unit>
        <trans-unit id="f879c00e4286eb2990e44a37d8628dc80592a294" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@[&lt;a href=&quot;link&quot;&gt;Link&lt;/a&gt;(&quot;pcre&quot;, static: true)]&lt;/code&gt; will favor static libraries over shared libraries.</source>
          <target state="translated">&lt;code&gt;@[&lt;a href=&quot;link&quot;&gt;Link&lt;/a&gt;(&quot;pcre&quot;, static: true)]&lt;/code&gt; будет отдавать предпочтение статическим библиотекам перед общими библиотеками.</target>
        </trans-unit>
        <trans-unit id="83f2f7b2735218899f4dd5f460916c90b8abd84a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@[&lt;a href=&quot;link&quot;&gt;Link&lt;/a&gt;(framework: &quot;Cocoa&quot;)]&lt;/code&gt; will pass &lt;code&gt;-framework Cocoa&lt;/code&gt; to the linker.</source>
          <target state="translated">&lt;code&gt;@[&lt;a href=&quot;link&quot;&gt;Link&lt;/a&gt;(framework: &quot;Cocoa&quot;)]&lt;/code&gt; передаст &lt;code&gt;-framework Cocoa&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2da01a37bb7ff5c1836f95aad0456c15b571b643" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@[&lt;a href=&quot;link&quot;&gt;Link&lt;/a&gt;(ldflags: &quot;-lpcre&quot;)]&lt;/code&gt; will pass &lt;code&gt;-lpcre&lt;/code&gt; straight to the linker.</source>
          <target state="translated">&lt;code&gt;@[&lt;a href=&quot;link&quot;&gt;Link&lt;/a&gt;(ldflags: &quot;-lpcre&quot;)]&lt;/code&gt; передаст &lt;code&gt;-lpcre&lt;/code&gt; напрямую компоновщику.</target>
        </trans-unit>
        <trans-unit id="d86977e0bd5338b777b9a56fe6d77dcaa80006f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@[Link(&quot;pcre&quot;)]&lt;/code&gt; will pass &lt;code&gt;-lpcre&lt;/code&gt; to the linker, but the compiler will first try to use &lt;a href=&quot;http://en.wikipedia.org/wiki/Pkg-config&quot;&gt;pkg-config&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;@[Link(&quot;pcre&quot;)]&lt;/code&gt; передаст &lt;code&gt;-lpcre&lt;/code&gt; компоновщику, но компилятор сначала попытается использовать &lt;a href=&quot;http://en.wikipedia.org/wiki/Pkg-config&quot;&gt;pkg-config&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0ddc84ac69e4a40f8728cc3e1afe2c39ff2f0802" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@[Link(framework: &quot;Cocoa&quot;)]&lt;/code&gt; will pass &lt;code&gt;-framework Cocoa&lt;/code&gt; to the linker (only useful in macOS).</source>
          <target state="translated">&lt;code&gt;@[Link(framework: &quot;Cocoa&quot;)]&lt;/code&gt; передаст &lt;code&gt;-framework Cocoa&lt;/code&gt; компоновщику (полезно только в macOS).</target>
        </trans-unit>
        <trans-unit id="d0fb34cba5401627a6e33b6ba41f1659fd638d8f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@[Link(ldflags: &quot;...&quot;)]&lt;/code&gt; will pass those flags directly to the linker, without modification. For example: &lt;code&gt;@[Link(ldflags: &quot;-lpcre&quot;)]&lt;/code&gt;. A common technique is to use backticks to execute commands: &lt;code&gt;@[Link(ldflags: &quot;`pkg-config libpcre --libs`&quot;)]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;@[Link(ldflags: &quot;...&quot;)]&lt;/code&gt; передаст эти флаги непосредственно компоновщику без изменений. Например: &lt;code&gt;@[Link(ldflags: &quot;-lpcre&quot;)]&lt;/code&gt; . Обычная техника - использование обратных галочек для выполнения команд: &lt;code&gt;@[Link(ldflags: &quot;`pkg-config libpcre --libs`&quot;)]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="97bd45a84ae432477e929837851b51ff93a33f42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Array&lt;/code&gt; is passed by reference, so the reference to &lt;code&gt;[&quot;str&quot;]&lt;/code&gt; is stored in the property of &lt;code&gt;strukt&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Array&lt;/code&gt; передается по ссылке, поэтому ссылка на &lt;code&gt;[&quot;str&quot;]&lt;/code&gt; сохраняется в свойстве &lt;code&gt;strukt&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="617e83d0c8eacbd97e0aae12df99b3254ed88698" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CRYSTAL_CACHE_DIR&lt;/code&gt;: Defines path where Crystal caches partial compilation results for faster subsequent builds. This path is also used to temporarily store executables when Crystal programs are run with &lt;a href=&quot;#crystal-run&quot;&gt;&lt;code&gt;crystal run&lt;/code&gt;&lt;/a&gt; rather than &lt;a href=&quot;#crystal-build&quot;&gt;&lt;code&gt;crystal build&lt;/code&gt;&lt;/a&gt;. Default value is the first directory that either exists or can be created of &lt;code&gt;${XDG_CACHE_HOME}/crystal&lt;/code&gt; (if &lt;code&gt;XDG_CACHE_HOME&lt;/code&gt; is defined), &lt;code&gt;${HOME}/.cache/crystal&lt;/code&gt;, &lt;code&gt;${HOME}/.crystal&lt;/code&gt;, &lt;code&gt;./.crystal&lt;/code&gt;. If &lt;code&gt;CRYSTAL_CACHE_DIR&lt;/code&gt; is set but points to a path that is not writeable, the default values are used instead.</source>
          <target state="translated">&lt;code&gt;CRYSTAL_CACHE_DIR&lt;/code&gt; : определяет путь, по которому Crystal кэширует результаты частичной компиляции для более быстрой последующей сборки. Этот путь также используется для временного хранения исполняемых файлов, когда программы Crystal запускаются с Crystal &lt;a href=&quot;#crystal-run&quot;&gt; &lt;code&gt;crystal run&lt;/code&gt; &lt;/a&gt; а не Crystal &lt;a href=&quot;#crystal-build&quot;&gt; &lt;code&gt;crystal build&lt;/code&gt; &lt;/a&gt; . Значением по умолчанию является первый каталог, который либо существует, либо может быть создан из &lt;code&gt;${XDG_CACHE_HOME}/crystal&lt;/code&gt; (если определено &lt;code&gt;XDG_CACHE_HOME&lt;/code&gt; ), &lt;code&gt;${HOME}/.cache/crystal&lt;/code&gt; , &lt;code&gt;${HOME}/.crystal&lt;/code&gt; &lt;code&gt;./.crystal&lt;/code&gt; , ./.crystal . Если &lt;code&gt;CRYSTAL_CACHE_DIR&lt;/code&gt; установлен, но указывает на путь, который не доступен для записи, вместо него используются значения по умолчанию.</target>
        </trans-unit>
        <trans-unit id="9ad4b1cec0ff6eca01c48368a7bca30d1a35ab75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CRYSTAL_LIBRARY_PATH&lt;/code&gt;: The compiler uses the paths in this variable as a first lookup destination for static and dynamic libraries that are to be linked. For example, if static libraries are put in &lt;code&gt;build/libs&lt;/code&gt;, setting the environment variable accordingly will tell the compiler to look for libraries there.</source>
          <target state="translated">&lt;code&gt;CRYSTAL_LIBRARY_PATH&lt;/code&gt; : компилятор использует пути в этой переменной в качестве первого места поиска для статических и динамических библиотек, которые должны быть связаны. Например, если статические библиотеки помещаются в &lt;code&gt;build/libs&lt;/code&gt; , соответствующая установка переменной среды скажет компилятору искать там библиотеки.</target>
        </trans-unit>
        <trans-unit id="7919bde6d012b641d1cb0c6c0cf8eb73aedb9838" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CRYSTAL_PATH&lt;/code&gt;: Defines paths where Crystal searches for required files.</source>
          <target state="translated">&lt;code&gt;CRYSTAL_PATH&lt;/code&gt; : определяет пути, по которым Crystal выполняет поиск необходимых файлов.</target>
        </trans-unit>
        <trans-unit id="1ce1b8947f837844d63a6151112b7067f336b461" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CRYSTAL_VERSION&lt;/code&gt; is only available as output of &lt;a href=&quot;#crystal-env&quot;&gt;&lt;code&gt;crystal env&lt;/code&gt;&lt;/a&gt;. The compiler neither sets nor reads it.</source>
          <target state="translated">&lt;code&gt;CRYSTAL_VERSION&lt;/code&gt; доступен только как выходной &lt;a href=&quot;#crystal-env&quot;&gt; &lt;code&gt;crystal env&lt;/code&gt; &lt;/a&gt; . Компилятор не устанавливает и не читает его.</target>
        </trans-unit>
        <trans-unit id="4c0ca7b105a3171b7ccd6c28faa1bcac37d5910a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DB.open&lt;/code&gt; will allow you to easily connect to a database using a connection uri. The schema of the uri determines the expected driver. The following sample connects to a local mysql database named test with user root and password blank.</source>
          <target state="translated">&lt;code&gt;DB.open&lt;/code&gt; позволит вам легко подключаться к базе данных, используя URI подключения. Схема URI определяет ожидаемый драйвер. Следующий пример подключается к локальной базе данных mysql с именем test с пользователем root и пустым паролем.</target>
        </trans-unit>
        <trans-unit id="8a405391dc1fdb098cdf0d947c8176fd33c6be42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Database#query&lt;/code&gt; returns a &lt;code&gt;ResultSet&lt;/code&gt; that needs to be closed. As in &lt;code&gt;Database#open&lt;/code&gt;, if called with a block, the &lt;code&gt;ResultSet&lt;/code&gt; will be closed implicitly.</source>
          <target state="translated">&lt;code&gt;Database#query&lt;/code&gt; возвращает &lt;code&gt;ResultSet&lt;/code&gt; , который необходимо закрыть. Как и в &lt;code&gt;Database#open&lt;/code&gt; , если вызывается с блоком, &lt;code&gt;ResultSet&lt;/code&gt; будет закрыт неявно.</target>
        </trans-unit>
        <trans-unit id="e85184b5089758b6a97b9486daa72a1d1ad2fd09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Klass&lt;/code&gt; is a class, so it is passed by reference to &lt;code&gt;modify&lt;/code&gt;, and &lt;code&gt;object.array = [&quot;new&quot;]&lt;/code&gt; saves the reference to the newly created array in the original &lt;code&gt;klass&lt;/code&gt; object, not in the copy as it was with the &lt;code&gt;strukt&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Klass&lt;/code&gt; - это класс, поэтому он передается по ссылке для &lt;code&gt;modify&lt;/code&gt; , а &lt;code&gt;object.array = [&quot;new&quot;]&lt;/code&gt; сохраняет ссылку на вновь созданный массив в исходном объекте &lt;code&gt;klass&lt;/code&gt; , а не в копии, как это было в &lt;code&gt;strukt&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4fcbe2a574f720d694858cb34ca91acadd070dcb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Lib&lt;/code&gt; names are prefixed with &lt;code&gt;Lib&lt;/code&gt;. For example: &lt;code&gt;LibC&lt;/code&gt;, &lt;code&gt;LibEvent2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Lib&lt;/code&gt; Имена Lib имеют префикс &lt;code&gt;Lib&lt;/code&gt; . Например: &lt;code&gt;LibC&lt;/code&gt; , &lt;code&gt;LibEvent2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a051a95c444f07859b7447628376695436b010b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MyBox.new(value)&lt;/code&gt; delegates to &lt;code&gt;initialize(@value : T)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;MyBox.new(value)&lt;/code&gt; делегирует для &lt;code&gt;initialize(@value : T)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bc81d6b2bf3bdb53b05b4f03c01929524e14257e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NoReturn&lt;/code&gt; can be explicitly set as return type of a method or function definition but will usually be inferred by the compiler.</source>
          <target state="translated">&lt;code&gt;NoReturn&lt;/code&gt; может быть явно установлен в качестве возвращаемого типа определения метода или функции, но обычно выводится компилятором.</target>
        </trans-unit>
        <trans-unit id="c8a1483b2601eebda8f2d1a043fc58a3bacab672" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NoReturn&lt;/code&gt;: similar to &lt;code&gt;Void&lt;/code&gt;, but the compiler understands that no code can be executed after that invocation.</source>
          <target state="translated">&lt;code&gt;NoReturn&lt;/code&gt; : аналогично &lt;code&gt;Void&lt;/code&gt; , но компилятор понимает, что после этого вызова код не может быть выполнен.</target>
        </trans-unit>
        <trans-unit id="88f505fd7b9a95f54524d6c8bee5e1c18154c318" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PCRE_DOTALL&lt;/code&gt; changes the &quot;&lt;code&gt;.&lt;/code&gt;&quot; meaning</source>
          <target state="translated">&lt;code&gt;PCRE_DOTALL&lt;/code&gt; меняет значение &quot; &lt;code&gt;.&lt;/code&gt; &quot;</target>
        </trans-unit>
        <trans-unit id="bcd1cfe5d03f14c1a912299c84b26351983cb365" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PCRE_MULTILINE&lt;/code&gt; changes &quot;&lt;code&gt;^&lt;/code&gt;&quot; and &quot;&lt;code&gt;$&lt;/code&gt;&quot; meanings</source>
          <target state="translated">&lt;code&gt;PCRE_MULTILINE&lt;/code&gt; меняет значения &amp;laquo; &lt;code&gt;^&lt;/code&gt; &amp;raquo; и &amp;laquo; &lt;code&gt;$&lt;/code&gt; &amp;raquo;</target>
        </trans-unit>
        <trans-unit id="3909fe8f56b1a541cd6d4525f8ef7f8b8a7c59c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Path.new()&lt;/code&gt; means &lt;code&gt;Path.posix&lt;/code&gt; on POSIX platforms and &lt;code&gt;Path.windows()&lt;/code&gt; on Windows platforms.</source>
          <target state="translated">&lt;code&gt;Path.new()&lt;/code&gt; означает &lt;code&gt;Path.posix&lt;/code&gt; на платформах POSIX и &lt;code&gt;Path.windows()&lt;/code&gt; на платформах Windows.</target>
        </trans-unit>
        <trans-unit id="46cb9401862d472a03ed8ccffc6170f77419b675" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Path.posix()&lt;/code&gt; creates a new POSIX path</source>
          <target state="translated">&lt;code&gt;Path.posix()&lt;/code&gt; создает новый путь POSIX</target>
        </trans-unit>
        <trans-unit id="9fc38a742318d39af2b2c7df4367966234f70a36" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Path.windows()&lt;/code&gt; creates a new Windows path</source>
          <target state="translated">&lt;code&gt;Path.windows()&lt;/code&gt; создает новый путь Windows</target>
        </trans-unit>
        <trans-unit id="5901152464bb481de5ac2c36696592c770948377" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; isn't bound to a type yet, so the compiler binds it to the type of the given argument</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; еще не связан с типом, поэтому компилятор связывает его с типом данного аргумента</target>
        </trans-unit>
        <trans-unit id="bcce04aa5358fd8f8a99be414929dedf13ba9cfc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Void&lt;/code&gt;: the absence of a return value.</source>
          <target state="translated">&lt;code&gt;Void&lt;/code&gt; : отсутствие возвращаемого значения.</target>
        </trans-unit>
        <trans-unit id="fcc6131cb0f2b53a9ba60bfc9aace46bdc47cf38" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[1, 2, 3]&lt;/code&gt;, &lt;code&gt;[1, 2, 3] of Int32&lt;/code&gt;, &lt;code&gt;%w(one two three)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;[1, 2, 3]&lt;/code&gt; , &lt;code&gt;[1, 2, 3] of Int32&lt;/code&gt; , &lt;code&gt;%w(one two three)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e04c806af0a2dda5b03db5671518aba1ce97bd86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[^abc]&lt;/code&gt; matches any one character other than these.</source>
          <target state="translated">&lt;code&gt;[^abc]&lt;/code&gt; соответствует любому другому символу, кроме этих.</target>
        </trans-unit>
        <trans-unit id="b3e2a7192e0b16766e923c49c32540a72ede243f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[a-z]&lt;/code&gt; matches any one character in the range.</source>
          <target state="translated">&lt;code&gt;[a-z]&lt;/code&gt; соответствует любому одному символу в диапазоне.</target>
        </trans-unit>
        <trans-unit id="ec3f7b2a7808dab128c09c0c5e2ddd8ed740335c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[abc]&lt;/code&gt; matches any one of these character.</source>
          <target state="translated">&lt;code&gt;[abc]&lt;/code&gt; соответствует любому из этих символов.</target>
        </trans-unit>
        <trans-unit id="3c365a129ea545241910ae0154cf999783f1ab3e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\\&lt;/code&gt; escapes the next character.</source>
          <target state="translated">&lt;code&gt;\\&lt;/code&gt; избегает следующего символа.</target>
        </trans-unit>
        <trans-unit id="bebea4557f4b5b763c9c266021aa7db770d12bb6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;^&lt;/code&gt; &amp;ndash; bitwise xor</source>
          <target state="translated">&lt;code&gt;^&lt;/code&gt; - побитовый xor</target>
        </trans-unit>
        <trans-unit id="b0bfad34d92a796ea90eaf85270894aa92689066" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__DIR__&lt;/code&gt; references the full path to the directory where the currently executing crystal file is located.</source>
          <target state="translated">&lt;code&gt;__DIR__&lt;/code&gt; указывает полный путь к каталогу, в котором находится исполняемый в данный момент кристаллический файл.</target>
        </trans-unit>
        <trans-unit id="028b797a284a04149af2b0a7ce9d86271c0da1b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__END_LINE__&lt;/code&gt; is the line number of the &lt;code&gt;end&lt;/code&gt; of the calling block. Can only be used as a default value to a method parameter.</source>
          <target state="translated">&lt;code&gt;__END_LINE__&lt;/code&gt; - номер строки &lt;code&gt;end&lt;/code&gt; вызывающего блока. Может использоваться только как значение по умолчанию для параметра метода.</target>
        </trans-unit>
        <trans-unit id="4171bd99a501811c1e602265d539e55a1a8f239d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__FILE__&lt;/code&gt; references the full path to the currently executing crystal file.</source>
          <target state="translated">&lt;code&gt;__FILE__&lt;/code&gt; указывает полный путь к текущему исполняемому кристаллическому файлу.</target>
        </trans-unit>
        <trans-unit id="553103f9774c804cd0962abf92f5baae3f2a88f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__LINE__&lt;/code&gt; is the current line number in the currently executing crystal file. When &lt;code&gt;__LINE__&lt;/code&gt; is declared as the default value to a method parameter, it represents the line number at the location of the method call.</source>
          <target state="translated">&lt;code&gt;__LINE__&lt;/code&gt; - номер текущей строки в текущем исполняемом кристаллическом файле. Когда &lt;code&gt;__LINE__&lt;/code&gt; объявляется в качестве значения по умолчанию для параметра метода, он представляет номер строки в месте вызова метода.</target>
        </trans-unit>
        <trans-unit id="c33af70e73070ef9d17ac112f9c120d9f01acba1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;`echo foo` &lt;/code&gt;, &lt;code&gt;%x(echo foo)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;`echo foo` &lt;/code&gt; , &lt;code&gt;%x(echo foo)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bc7ddda35445794223915bf504d1bf708311783d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bin/&lt;/code&gt; contains any executables.</source>
          <target state="translated">&lt;code&gt;bin/&lt;/code&gt; содержит любые исполняемые файлы.</target>
        </trans-unit>
        <trans-unit id="53718d276502d9f31b8b3732e4eb52823dcc737d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;break&lt;/code&gt; and &lt;code&gt;next&lt;/code&gt; can also be used inside an &lt;code&gt;until&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;break&lt;/code&gt; и &lt;code&gt;next&lt;/code&gt; также могут использоваться внутри &lt;code&gt;until&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="639d837400c885d5c475b2df1935490991c20484" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;break&lt;/code&gt; can also accept arguments: these become the method's return value. For example:</source>
          <target state="translated">&lt;code&gt;break&lt;/code&gt; также может принимать аргументы: они становятся возвращаемым значением метода. Например:</target>
        </trans-unit>
        <trans-unit id="1844c1b618530280b5e5b1b776d33d7a663a8d97" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;break&lt;/code&gt; can also take a parameter which will then be the value that gets returned:</source>
          <target state="translated">&lt;code&gt;break&lt;/code&gt; также может принимать параметр, который затем будет возвращаемым значением:</target>
        </trans-unit>
        <trans-unit id="f327c8103db6676cba851e931150195437dc7868" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ca&lt;/code&gt;: Path to a file containing the CA certificate chain or a directory containing all CA certificates. See &lt;code&gt;#ca_certificates=&lt;/code&gt; and &lt;code&gt;#ca_certificates_path=&lt;/code&gt;, respectively. Required if &lt;code&gt;verify_mode&lt;/code&gt; is &lt;code&gt;peer&lt;/code&gt; or &lt;code&gt;force-peer&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ca&lt;/code&gt; : Путь к файлу, содержащему цепочку сертификатов CA или каталог, содержащий все сертификаты CA. Смотрите &lt;code&gt;#ca_certificates=&lt;/code&gt; и &lt;code&gt;#ca_certificates_path=&lt;/code&gt; , соответственно. Требуется, если &lt;code&gt;verify_mode&lt;/code&gt; является &lt;code&gt;peer&lt;/code&gt; или &lt;code&gt;force-peer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f7ad068e182f82e03f5963401acf5b2ab769b12f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ca&lt;/code&gt;: Path to a file containing the CA certificate chain or a directory containing all CA certificates. See &lt;code&gt;#ca_certificates=&lt;/code&gt; and &lt;code&gt;#ca_certificates_path=&lt;/code&gt;, respectively. Required if &lt;code&gt;verify_mode&lt;/code&gt; is &lt;code&gt;peer&lt;/code&gt;, &lt;code&gt;force-peer&lt;/code&gt; or empty.</source>
          <target state="translated">&lt;code&gt;ca&lt;/code&gt; : Путь к файлу, содержащему цепочку сертификатов CA или каталог, содержащий все сертификаты CA. Смотрите &lt;code&gt;#ca_certificates=&lt;/code&gt; и &lt;code&gt;#ca_certificates_path=&lt;/code&gt; , соответственно. Требуется, если &lt;code&gt;verify_mode&lt;/code&gt; равен &lt;code&gt;peer&lt;/code&gt; , &lt;code&gt;force-peer&lt;/code&gt; или пуст.</target>
        </trans-unit>
        <trans-unit id="1f5af57a933b1d62d860c6704d0218cdf220d701" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cert&lt;/code&gt;&lt;em&gt;(required)&lt;/em&gt;: Path to the file containing the public certificate chain. See &lt;code&gt;#certificate_chain=&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;cert&lt;/code&gt; &lt;em&gt;(обязательно)&lt;/em&gt; : путь к файлу, содержащему общедоступную цепочку сертификатов. Смотрите &lt;code&gt;#certificate_chain=&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cd90d218f9da4fba1e6bb982b1dc623186be40ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class&lt;/code&gt; is also useful for creating arrays and collections of class type:</source>
          <target state="translated">&lt;code&gt;class&lt;/code&gt; также полезен для создания массивов и коллекций типа класса:</target>
        </trans-unit>
        <trans-unit id="07f518282c92dc3766d69985a674b7d75e086525" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class&lt;/code&gt; is used to refer to a class type, instead of an instance type.</source>
          <target state="translated">&lt;code&gt;class&lt;/code&gt; используется для ссылки на тип класса, а не на тип экземпляра.</target>
        </trans-unit>
        <trans-unit id="b84e527b9abf30ef03cdec5c1530836aa8072710" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;crystal help&lt;/code&gt;: show help about commands and options</source>
          <target state="translated">&lt;code&gt;crystal help&lt;/code&gt; : показать справку о командах и опциях</target>
        </trans-unit>
        <trans-unit id="b41947c7c91507447125fbb186b707f510fc9b2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;crystal tool context&lt;/code&gt;: Show context for given location</source>
          <target state="translated">&lt;code&gt;crystal tool context&lt;/code&gt; : Показать контекст для данного местоположения</target>
        </trans-unit>
        <trans-unit id="b8c297bd481a3a73bb9697e32655bb841e126bb1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;crystal tool expand&lt;/code&gt;: Show macro expansion for given location</source>
          <target state="translated">&lt;code&gt;crystal tool expand&lt;/code&gt; : показать расширение макроса для данного местоположения</target>
        </trans-unit>
        <trans-unit id="c08d58bef1ac5e1e2aa3c17aac2e7a3edf1e4566" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;crystal tool hierarchy&lt;/code&gt;: Show type hierarchy</source>
          <target state="translated">&lt;code&gt;crystal tool hierarchy&lt;/code&gt; : Показать иерархию типов</target>
        </trans-unit>
        <trans-unit id="afc0062ccc7d5c3b83b56e42786716e7a56afc7b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;crystal tool implementations&lt;/code&gt;: Show implementations for given call in location</source>
          <target state="translated">&lt;code&gt;crystal tool implementations&lt;/code&gt; : Показать реализации для данного вызова в местоположении</target>
        </trans-unit>
        <trans-unit id="3c90eeef391ad2fc595295e306b814a7c8df0f9f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;crystal tool types&lt;/code&gt;: Show types of main variables</source>
          <target state="translated">&lt;code&gt;crystal tool types&lt;/code&gt; : Показать типы основных переменных</target>
        </trans-unit>
        <trans-unit id="015fe739c7e6098ce7b5606b6d3847d7fa170e7f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;describe&lt;/code&gt; and &lt;code&gt;context&lt;/code&gt; take a description as argument (which should usually be a string) and a block containing the individual specs or nested groupings.</source>
          <target state="translated">&lt;code&gt;describe&lt;/code&gt; и &lt;code&gt;context&lt;/code&gt; , взять описание в качестве аргумента (который , как правило , должен быть строкой) и блок , содержащий отдельные функции или вложенные группировки.</target>
        </trans-unit>
        <trans-unit id="97e772098a0e9e9b87a004d2ababfaa5af9a8fae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ensure&lt;/code&gt; clauses are usually used for clean up, freeing resources, etc.</source>
          <target state="translated">&lt;code&gt;ensure&lt;/code&gt; пункты обычно используются для очистки, освобождения ресурсов и т. д.</target>
        </trans-unit>
        <trans-unit id="cd33cb3474a3cd89dd62f4d38a805c600ef515cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extended&lt;/code&gt; is invoked when a module is extended. &lt;code&gt;@type&lt;/code&gt; is the extending type.</source>
          <target state="translated">&lt;code&gt;extended&lt;/code&gt; вызывается при расширении модуля. &lt;code&gt;@type&lt;/code&gt; это расширяющий тип.</target>
        </trans-unit>
        <trans-unit id="0f63a300cea0ef13546df1dc2b27567f635bc4ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;finished&lt;/code&gt; is called once a type has been completely defined - this includes extensions on that class. Consider the following program:</source>
          <target state="translated">&lt;code&gt;finished&lt;/code&gt; вызывается после того, как тип полностью определен - это включает в себя расширения для этого класса. Рассмотрим следующую программу:</target>
        </trans-unit>
        <trans-unit id="852f841b8f35c1416848d114ee3293eeb4b9096d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;finished&lt;/code&gt; is invoked after instance variable types for all classes are known.</source>
          <target state="translated">&lt;code&gt;finished&lt;/code&gt; вызывается после того, как типы переменных экземпляра для всех классов известны.</target>
        </trans-unit>
        <trans-unit id="5f970ede1517e51f2051f5b8e54ed16f80f8acdf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;flag?&lt;/code&gt; returns a boolean, so you can use it with &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; and &lt;code&gt;||&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;flag?&lt;/code&gt; возвращает логическое значение, так что вы можете использовать его с &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; и &lt;code&gt;||&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="e10df003f3901c7218ec045d7d166fdca6bb4ec0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;host&lt;/code&gt; must be an IP address (v4 or v6), otherwise &lt;code&gt;&lt;a href=&quot;error&quot;&gt;Socket::Error&lt;/a&gt;&lt;/code&gt; will be raised. Domain names will not be resolved.</source>
          <target state="translated">&lt;code&gt;host&lt;/code&gt; должен быть IP-адресом (v4 или v6), в противном случае будет &lt;code&gt;&lt;a href=&quot;error&quot;&gt;Socket::Error&lt;/a&gt;&lt;/code&gt; . Доменные имена не будут разрешены.</target>
        </trans-unit>
        <trans-unit id="6c241fd7fbb6b3f3c979f1c10e27e20b99f9e6fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;i&lt;/code&gt;: case-insensitive matching (&lt;code&gt;PCRE_CASELESS&lt;/code&gt;): Unicode letters in the pattern match both upper and lower case letters in the subject string.</source>
          <target state="translated">&lt;code&gt;i&lt;/code&gt; : сопоставление без &lt;code&gt;PCRE_CASELESS&lt;/code&gt; регистра ( PCRE_CASELESS ): буквы Юникода в шаблоне соответствуют буквам верхнего и нижнего регистра в строке темы.</target>
        </trans-unit>
        <trans-unit id="0f1192996f8155a53b0fc27fff8de539cfea806b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;i&lt;/code&gt;: ignore case (PCRE_CASELESS)</source>
          <target state="translated">&lt;code&gt;i&lt;/code&gt; : игнорировать регистр (PCRE_CASELESS)</target>
        </trans-unit>
        <trans-unit id="2147026552ac41cf4d776b2bd4db51f43e33273f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;included&lt;/code&gt; is invoked when a module is included. &lt;code&gt;@type&lt;/code&gt; is the including type.</source>
          <target state="translated">&lt;code&gt;included&lt;/code&gt; вызывается, когда модуль включен. &lt;code&gt;@type&lt;/code&gt; это включающий тип.</target>
        </trans-unit>
        <trans-unit id="6c59a4a58e0f3d6789d17148539597cf9405d22b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;inherited&lt;/code&gt; is invoked when a subclass is defined. &lt;code&gt;@type&lt;/code&gt; is the inheriting type.</source>
          <target state="translated">&lt;code&gt;inherited&lt;/code&gt; вызывается, когда определен подкласс. &lt;code&gt;@type&lt;/code&gt; - это наследующий тип.</target>
        </trans-unit>
        <trans-unit id="b843a80d13c0d2e51435e6bc4edb5c3308410bcf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;key&lt;/code&gt;&lt;em&gt;(required)&lt;/em&gt;: Path to private key file. See &lt;code&gt;#private_key=&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; &lt;em&gt;(обязательно)&lt;/em&gt; : путь к файлу закрытого ключа. Смотрите &lt;code&gt;#private_key=&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="81471a768640d38ee463cd6a871cf9048608529a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;m&lt;/code&gt;: multiline (PCRE_MULTILINE and PCRE_DOTALL)</source>
          <target state="translated">&lt;code&gt;m&lt;/code&gt; : многострочный (PCRE_MULTILINE и PCRE_DOTALL)</target>
        </trans-unit>
        <trans-unit id="6cdfedb9f54ca78ba585cd82bad6d409f12a351a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;m&lt;/code&gt;: multiline matching (&lt;code&gt;PCRE_MULTILINE&lt;/code&gt;): The &lt;em&gt;start of line&lt;/em&gt; (&lt;code&gt;^&lt;/code&gt;) and &lt;em&gt;end of line&lt;/em&gt; (&lt;code&gt;$&lt;/code&gt;) metacharacters match immediately following or immediately before internal newlines in the subject string, respectively, as well as at the very start and end.</source>
          <target state="translated">&lt;code&gt;m&lt;/code&gt; : многострочное сопоставление ( &lt;code&gt;PCRE_MULTILINE&lt;/code&gt; ): метасимволы &lt;em&gt;начала строки&lt;/em&gt; ( &lt;code&gt;^&lt;/code&gt; ) и &lt;em&gt;конца строки&lt;/em&gt; ( &lt;code&gt;$&lt;/code&gt; ) совпадают непосредственно после или непосредственно перед внутренними символами новой строки в строке темы соответственно, а также в самом начале и конце.</target>
        </trans-unit>
        <trans-unit id="05c4736f339e8d92f22940e62a8827af2e9f7b8e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;method_added&lt;/code&gt; is invoked when a new method is defined in the current scope.</source>
          <target state="translated">&lt;code&gt;method_added&lt;/code&gt; вызывается, когда новый метод определен в текущей области.</target>
        </trans-unit>
        <trans-unit id="aa1c981ee3a6ab70dfa3a42b2842500fc307d95d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;method_missing&lt;/code&gt; is invoked when a method is not found.</source>
          <target state="translated">&lt;code&gt;method_missing&lt;/code&gt; вызывается, когда метод не найден.</target>
        </trans-unit>
        <trans-unit id="4fb0ceb7c05b774ad246fde3071251a3decb3132" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;modify&lt;/code&gt; returns the reference to this new array and its content is printed</source>
          <target state="translated">&lt;code&gt;modify&lt;/code&gt; возвращает ссылку на этот новый массив, и его содержимое печатается</target>
        </trans-unit>
        <trans-unit id="8a16eccfda38bed9352683d07f7e34d7c02c5173" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;next&lt;/code&gt; can also be used to exit from a block, for example:</source>
          <target state="translated">&lt;code&gt;next&lt;/code&gt; также можно использовать для выхода из блока, например:</target>
        </trans-unit>
        <trans-unit id="ee4bcbd6449fedeba1325e27dcbc3dfde717a946" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nil&lt;/code&gt; if &lt;code&gt;self&lt;/code&gt; and the other object are not comparable</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; если &lt;code&gt;self&lt;/code&gt; и другой объект не сопоставимы</target>
        </trans-unit>
        <trans-unit id="b9bdf1152d91f64b505846757773f65da78d9571" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nil&lt;/code&gt; if self is &lt;code&gt;NaN&lt;/code&gt; or &lt;em&gt;other&lt;/em&gt; is &lt;code&gt;NaN&lt;/code&gt;, because &lt;code&gt;NaN&lt;/code&gt; values are not comparable</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; если self - это &lt;code&gt;NaN&lt;/code&gt; или &lt;em&gt;другое&lt;/em&gt; - &lt;code&gt;NaN&lt;/code&gt; , потому что значения &lt;code&gt;NaN&lt;/code&gt; не сравнимы</target>
        </trans-unit>
        <trans-unit id="38832aa72bb66df9ed2341531b94fe2c9395b420" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nil&lt;/code&gt; if this IO isn't peekable</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; если это IO не выглядят</target>
        </trans-unit>
        <trans-unit id="dbdf70ead3b44921a3e6e5b5d636f1d02ae5f2de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nil&lt;/code&gt; is commonly used to represent the absence of a value. For example, &lt;code&gt;&lt;a href=&quot;string#index(search:Char,offset=0)-instance-method&quot;&gt;String#index&lt;/a&gt;&lt;/code&gt; returns the position of the character or &lt;code&gt;nil&lt;/code&gt; if it's not in the string:</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; обычно используется для представления отсутствия значения. Например, &lt;code&gt;&lt;a href=&quot;string#index(search:Char,offset=0)-instance-method&quot;&gt;String#index&lt;/a&gt;&lt;/code&gt; возвращает позицию символа или &lt;code&gt;nil&lt;/code&gt; , если его нет в строке:</target>
        </trans-unit>
        <trans-unit id="e61cbecf5cfd650cd7c2fe1e97e4299b07779df7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nil&lt;/code&gt;: an exception is raised on invalid byte sequences</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; : на недопустимых байтовых последовательностях возникает исключение</target>
        </trans-unit>
        <trans-unit id="bb1cb38c4ca93aa518893526e5e86486784bb832" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nil&lt;/code&gt;: disable &lt;code&gt;SO_LINGER&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; : отключить &lt;code&gt;SO_LINGER&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ac71b1f4b80d6e580de447225b7a8a30bea76855" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;object.array &amp;lt;&amp;lt; &quot;bar&quot;&lt;/code&gt; appends to this newly created array</source>
          <target state="translated">&lt;code&gt;object.array &amp;lt;&amp;lt; &quot;bar&quot;&lt;/code&gt; добавляет к этому вновь созданному массиву</target>
        </trans-unit>
        <trans-unit id="84b791d8c0b64fe15bb27fde90d0675629278485" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;object.array = [&quot;new&quot;]&lt;/code&gt; replaces the reference in the &lt;em&gt;copy&lt;/em&gt; of &lt;code&gt;strukt&lt;/code&gt; with the reference to the new array</source>
          <target state="translated">&lt;code&gt;object.array = [&quot;new&quot;]&lt;/code&gt; заменяет ссылку на &lt;em&gt;копию&lt;/em&gt; в &lt;code&gt;strukt&lt;/code&gt; с ссылкой на новый массив</target>
        </trans-unit>
        <trans-unit id="d4183fbc7e29a1f00b7244ab3dc56f2f60f1ce6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;path&lt;/code&gt; can be a file or folder name and include all Crystal files in that folder tree. Omitting &lt;code&gt;path&lt;/code&gt; is equal to specifying the current working directory.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; может быть именем файла или папки и включать все файлы Crystal в это дерево папок. Опуская &lt;code&gt;path&lt;/code&gt; равно с указанием текущего рабочего каталога.</target>
        </trans-unit>
        <trans-unit id="5b9e3a2f03ecfd98955c96a5a5b92346524a640f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pointerof(x)&lt;/code&gt;, where &lt;em&gt;x&lt;/em&gt; is a variable or an instance variable, returns a pointer to that variable:</source>
          <target state="translated">&lt;code&gt;pointerof(x)&lt;/code&gt; , где &lt;em&gt;x&lt;/em&gt; - переменная или переменная экземпляра, возвращает указатель на эту переменную:</target>
        </trans-unit>
        <trans-unit id="3da5e35cfa2c31956b23b2439accb12f04051810" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;private&lt;/code&gt; can be used with &lt;code&gt;class&lt;/code&gt;, &lt;code&gt;module&lt;/code&gt;, &lt;code&gt;lib&lt;/code&gt;, &lt;code&gt;enum&lt;/code&gt;, &lt;code&gt;alias&lt;/code&gt; and constants:</source>
          <target state="translated">&lt;code&gt;private&lt;/code&gt; может использоваться с &lt;code&gt;class&lt;/code&gt; , &lt;code&gt;module&lt;/code&gt; , &lt;code&gt;lib&lt;/code&gt; , &lt;code&gt;enum&lt;/code&gt; , &lt;code&gt;alias&lt;/code&gt; и константой:</target>
        </trans-unit>
        <trans-unit id="a96c02650abf0f2f7369ef722d091f83ae265046" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;program.cr&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;program.cr&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="d5cb2d8bbe9c198be7bb0bbe30aab9099292f5ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;q = x&lt;a href=&quot;bigint#tdiv(other:Int):BigInt-instance-method&quot;&gt;.tdiv(y)&lt;/a&gt;&lt;/code&gt; is rounded toward zero</source>
          <target state="translated">&lt;code&gt;q = x&lt;a href=&quot;bigint#tdiv(other:Int):BigInt-instance-method&quot;&gt;.tdiv(y)&lt;/a&gt;&lt;/code&gt; округляется до нуля</target>
        </trans-unit>
        <trans-unit id="52dedccdb88cdac591c1f4eb716cb994b637ce7d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;q = x&lt;a href=&quot;int#tdiv(other:Int)-instance-method&quot;&gt;.tdiv(y)&lt;/a&gt;&lt;/code&gt; is rounded toward zero</source>
          <target state="translated">&lt;code&gt;q = x&lt;a href=&quot;int#tdiv(other:Int)-instance-method&quot;&gt;.tdiv(y)&lt;/a&gt;&lt;/code&gt; округляется до нуля</target>
        </trans-unit>
        <trans-unit id="d98957d715baed72245006861daee1841e882226" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;r = x&lt;a href=&quot;bigint#remainder(other:Int):BigInt-instance-method&quot;&gt;.remainder(y)&lt;/a&gt;&lt;/code&gt; has the sign of the first argument</source>
          <target state="translated">&lt;code&gt;r = x&lt;a href=&quot;bigint#remainder(other:Int):BigInt-instance-method&quot;&gt;.remainder(y)&lt;/a&gt;&lt;/code&gt; имеет знак первого аргумента</target>
        </trans-unit>
        <trans-unit id="c3d35505ff6f66b9c78583e941313fbac46bffcd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;r = x&lt;a href=&quot;int#remainder(other:Int)-instance-method&quot;&gt;.remainder(y)&lt;/a&gt;&lt;/code&gt; has the sign of the first argument</source>
          <target state="translated">&lt;code&gt;r = x&lt;a href=&quot;int#remainder(other:Int)-instance-method&quot;&gt;.remainder(y)&lt;/a&gt;&lt;/code&gt; имеет знак первого аргумента</target>
        </trans-unit>
        <trans-unit id="80066318a5ad94fabe1391cd3989f61cc0387be7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;require &quot;./foo/bar/baz&quot;&lt;/code&gt; will lookup &quot;foo/bar/baz.cr&quot; or &quot;foo/bar/baz/baz.cr&quot; relative to the current file.</source>
          <target state="translated">&lt;code&gt;require &quot;./foo/bar/baz&quot;&lt;/code&gt; будет искать &quot;foo / bar / baz.cr&quot; или &quot;foo / bar / baz / baz.cr&quot; относительно текущего файла.</target>
        </trans-unit>
        <trans-unit id="ef0fb31774df7066093a47c7512d1131474068fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;require &quot;foo/*&quot;&lt;/code&gt; will require all &quot;.cr&quot; files below the &quot;foo&quot; directory, but not below directories inside &quot;foo&quot;.</source>
          <target state="translated">&lt;code&gt;require &quot;foo/*&quot;&lt;/code&gt; потребует все файлы &quot;.cr&quot; ниже каталога &quot;foo&quot;, но не ниже каталогов внутри &quot;foo&quot;.</target>
        </trans-unit>
        <trans-unit id="c4fa9323a9c5f47df82cdfded4b9b6c427f03bbe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;require &quot;foo/**&quot;&lt;/code&gt; will require all &quot;.cr&quot; files below the &quot;foo&quot; directory, and below directories inside &quot;foo&quot;, recursively.</source>
          <target state="translated">&lt;code&gt;require &quot;foo/**&quot;&lt;/code&gt; потребует все файлы &quot;.cr&quot; в каталоге &quot;foo&quot; и ниже каталогов внутри &quot;foo&quot;, рекурсивно.</target>
        </trans-unit>
        <trans-unit id="c2c2cba165aa774aa25ecb0902b84d143f9ab6cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;require &quot;foo/bar/baz&quot;&lt;/code&gt; will lookup &quot;foo/bar/baz.cr&quot;, &quot;foo/bar/baz/baz.cr&quot;, &quot;foo/src/bar/baz.cr&quot; or &quot;foo/src/bar/baz/baz.cr&quot; in the require path.</source>
          <target state="translated">&lt;code&gt;require &quot;foo/bar/baz&quot;&lt;/code&gt; будет искать &quot;foo / bar / baz.cr&quot;, &quot;foo / bar / baz / baz.cr&quot;, &quot;foo / src / bar / baz.cr&quot; или &quot;foo / src / bar /baz/baz.cr &quot;в требуемом пути.</target>
        </trans-unit>
        <trans-unit id="4902ece830bb60018e9bc2e0744068ae3f8da844" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;return&lt;/code&gt; and &lt;code&gt;break&lt;/code&gt; can't be used inside a captured block. &lt;code&gt;next&lt;/code&gt; can be used and will exit and give the value of the captured block.</source>
          <target state="translated">&lt;code&gt;return&lt;/code&gt; и &lt;code&gt;break&lt;/code&gt; нельзя использовать внутри захваченного блока. &lt;code&gt;next&lt;/code&gt; можно использовать и будет выход и дать значение захваченного блока.</target>
        </trans-unit>
        <trans-unit id="487b95a45ed4a3467cdfd883569f4d0dace70f63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;runner_options&lt;/code&gt; are provided to the compiled binary executable which runs the specs. They should be separated from the other arguments by a double dash (&lt;code&gt;--&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;runner_options&lt;/code&gt; предоставляются скомпилированному двоичному исполняемому файлу, который запускает спецификации. Они должны быть отделены от других аргументов двойной чертой ( &lt;code&gt;--&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="8e77e74406c196d0cc5c371b64efaf5a72ea5b41" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;self&lt;/code&gt; can be used in the type grammar to denote a &lt;code&gt;self&lt;/code&gt; type. Refer to the &lt;a href=&quot;type_restrictions&quot;&gt;type restrictions&lt;/a&gt; section.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; может использоваться в грамматике типов для обозначения типа &lt;code&gt;self&lt;/code&gt; . Обратитесь к разделу &lt;a href=&quot;type_restrictions&quot;&gt;ограничений типа&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3bb1d888efa1b0ab39699381f04ec3295ac332de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;shards&lt;/code&gt; requires the presence of a &lt;code&gt;shard.yml&lt;/code&gt; file in the project folder (working directory). This file describes the project and lists dependencies that are required to build it. A default file can be created by running &lt;a href=&quot;#shards-install&quot;&gt;&lt;code&gt;shards init&lt;/code&gt;&lt;/a&gt;. The file's contents are explained in the &lt;a href=&quot;../guides/writing_shards&quot;&gt;&lt;em&gt;Writing a Shard&lt;/em&gt; guide&lt;/a&gt; and a detailed description of the file format is provided by the &lt;a href=&quot;https://github.com/crystal-lang/shards/blob/master/SPEC.md&quot;&gt;shard.yml specification&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;shards&lt;/code&gt; требует присутствия &lt;code&gt;shard.yml&lt;/code&gt; файла в папке проекта (рабочий каталог). Этот файл описывает проект и перечисляет зависимости, необходимые для его создания. Файл по умолчанию можно создать, запустив &lt;a href=&quot;#shards-install&quot;&gt; &lt;code&gt;shards init&lt;/code&gt; &lt;/a&gt; . Содержимое файла поясняются в &lt;a href=&quot;../guides/writing_shards&quot;&gt;&lt;em&gt;Написание осколок&lt;/em&gt; руководство&lt;/a&gt; и подробное описание формата файла обеспечивается &lt;a href=&quot;https://github.com/crystal-lang/shards/blob/master/SPEC.md&quot;&gt;спецификацией shard.yml&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="aa7715e98d72752ada6e922a69908994550127ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;spec/&lt;/code&gt; contains the &lt;a href=&quot;../guides/testing&quot;&gt;project's specs&lt;/a&gt;, which can be run with &lt;code&gt;crystal spec&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;spec/&lt;/code&gt; содержит спецификации &lt;a href=&quot;../guides/testing&quot;&gt;проекта&lt;/a&gt; , которые могут быть запущены с помощью &lt;code&gt;crystal spec&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="380e6da48e11df13ee2b74a66278a1120568c29a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;src/&lt;/code&gt; contains the project's source code.</source>
          <target state="translated">&lt;code&gt;src/&lt;/code&gt; содержит исходный код проекта.</target>
        </trans-unit>
        <trans-unit id="ac1b538a7cb723ec490ad9e1b7f57ff46b129a42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;to_json&lt;/code&gt;, &lt;code&gt;to_json(&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;)&lt;/code&gt; and &lt;code&gt;to_json(&lt;a href=&quot;json/builder&quot;&gt;JSON::Builder&lt;/a&gt;)&lt;/code&gt; methods are provided for primitive types, but you need to define &lt;code&gt;to_json(&lt;a href=&quot;json/builder&quot;&gt;JSON::Builder&lt;/a&gt;)&lt;/code&gt; for custom objects, either manually or using &lt;code&gt;&lt;a href=&quot;json#mapping(**_properties_)-macro&quot;&gt;JSON.mapping&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;to_json&lt;/code&gt; , &lt;code&gt;to_json(&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;)&lt;/code&gt; и &lt;code&gt;to_json(&lt;a href=&quot;json/builder&quot;&gt;JSON::Builder&lt;/a&gt;)&lt;/code&gt; предоставляются для примитивных типов, но вам нужно определить &lt;code&gt;to_json(&lt;a href=&quot;json/builder&quot;&gt;JSON::Builder&lt;/a&gt;)&lt;/code&gt; для пользовательских объектов, либо вручную, либо с помощью &lt;code&gt;&lt;a href=&quot;json#mapping(**_properties_)-macro&quot;&gt;JSON.mapping&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bdaf0b3eb81d501252bc01a931dbd778cfe346b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; , &lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c1fd28236fd6ce4c9cf8ec516712d1769a8d204d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;typeof&lt;/code&gt; is allowed in the type grammar. It returns a union type of the type of the passed expressions:</source>
          <target state="translated">&lt;code&gt;typeof&lt;/code&gt; разрешен в грамматике типа. Возвращает тип объединения типа переданных выражений:</target>
        </trans-unit>
        <trans-unit id="13459ee8efc02268ca49b21f8ff6afcab89604a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;verify_mode&lt;/code&gt;: Either &lt;code&gt;peer&lt;/code&gt;, &lt;code&gt;force-peer&lt;/code&gt;, &lt;code&gt;none&lt;/code&gt; or empty (default: &lt;code&gt;none&lt;/code&gt;). See &lt;code&gt;verify_mode=&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;verify_mode&lt;/code&gt; : либо &lt;code&gt;peer&lt;/code&gt; , &lt;code&gt;force-peer&lt;/code&gt; , &lt;code&gt;none&lt;/code&gt; или пустой (по умолчанию: &lt;code&gt;none&lt;/code&gt; ). Смотрите &lt;code&gt;verify_mode=&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="06d1fdfbdaddb0c9315d1d6859b2bc6e6d0c0f88" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;verify_mode&lt;/code&gt;: Either &lt;code&gt;peer&lt;/code&gt;, &lt;code&gt;force-peer&lt;/code&gt;, &lt;code&gt;none&lt;/code&gt; or empty (default: &lt;code&gt;peer&lt;/code&gt;). See &lt;code&gt;verify_mode=&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;verify_mode&lt;/code&gt; : либо &lt;code&gt;peer&lt;/code&gt; , &lt;code&gt;force-peer&lt;/code&gt; , &lt;code&gt;none&lt;/code&gt; или пустой (по умолчанию: &lt;code&gt;peer&lt;/code&gt; ). Смотрите &lt;code&gt;verify_mode=&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0b0ab84f2a1bbf667569df1bda2ca95a22ee7db2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;week&lt;/code&gt;: &lt;code&gt;1..53&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;week&lt;/code&gt; : &lt;code&gt;1..53&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fbd683bf98dba3bf02587315cceea2f5ca6ed7a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x...y&lt;/code&gt;: Three dots denote an exclusive range, including &lt;code&gt;x&lt;/code&gt; and all values up to but not including &lt;code&gt;y&lt;/code&gt; (in mathematics: &lt;code&gt;[x, y)&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;x...y&lt;/code&gt; : три точки обозначают исключительный диапазон, включая &lt;code&gt;x&lt;/code&gt; и все значения до, но не включая &lt;code&gt;y&lt;/code&gt; (в математике: &lt;code&gt;[x, y)&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="e5604e36620e32fe1696df19f5aa033edd9370ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x..y&lt;/code&gt;: Two dots denote an inclusive range, including &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; and all values in between (in mathematics: &lt;code&gt;[x, y]&lt;/code&gt;) .</source>
          <target state="translated">&lt;code&gt;x..y&lt;/code&gt; : две точки обозначают включающий диапазон, включая &lt;code&gt;x&lt;/code&gt; и &lt;code&gt;y&lt;/code&gt; и все промежуточные значения (в математике: &lt;code&gt;[x, y]&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="49a27fc7a20d67b8271e82f759930d3bc730d63f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt;: extended (PCRE_EXTENDED)</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; : расширенный (PCRE_EXTENDED)</target>
        </trans-unit>
        <trans-unit id="849c8fa185ade3259e49ac00b13e56e37f97522f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt;: extended whitespace matching (&lt;code&gt;PCRE_EXTENDED&lt;/code&gt;): Most white space characters in the pattern are totally ignored except when ignore or inside a character class. Unescaped hash characters &lt;code&gt;#&lt;/code&gt; denote the start of a comment ranging to the end of the line.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; : расширенное сопоставление пробелов ( &lt;code&gt;PCRE_EXTENDED&lt;/code&gt; ): большинство символов пробела в шаблоне полностью игнорируются, кроме случаев, когда они игнорируются или находятся внутри класса символов. Неэкранированные хеш-символы &lt;code&gt;#&lt;/code&gt; обозначают начало комментария, начиная с конца строки.</target>
        </trans-unit>
        <trans-unit id="edb44515282fef8014e85b3d3dfa47ddf2aa2c21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{&quot;foo&quot; =&amp;gt; 2}&lt;/code&gt;, &lt;code&gt;{} of String =&amp;gt; Int32&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;{&quot;foo&quot; =&amp;gt; 2}&lt;/code&gt; , &lt;code&gt;{} of String =&amp;gt; Int32&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6f699fd2f19f66e5c5ea2fc79ff7661c702ce867" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{a,b}&lt;/code&gt; matches subpattern &lt;code&gt;a&lt;/code&gt; or &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{a,b}&lt;/code&gt; соответствует подшаблону &lt;code&gt;a&lt;/code&gt; или &lt;code&gt;b&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="061190fa53c23da14e62c1e4b491e92bd94c1227" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{name: &quot;Crystal&quot;, year: 2011}&lt;/code&gt;, &lt;code&gt;{&quot;this is a key&quot;: 1}&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;{name: &quot;Crystal&quot;, year: 2011}&lt;/code&gt; , &lt;code&gt;{&quot;this is a key&quot;: 1}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="33c898b55fed5a4971087c53b8504b3193eeb882" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;|&lt;/code&gt; &amp;ndash; bitwise or</source>
          <target state="translated">&lt;code&gt;|&lt;/code&gt; - поразрядно или</target>
        </trans-unit>
        <trans-unit id="47766f5d3234477e16ffab3f1d2726cd169a0e89" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&amp;amp;block&lt;/em&gt; is never evaluated. It can be used to describe behaviour that is not yet implemented.</source>
          <target state="translated">&lt;em&gt;&amp;amp; блок&lt;/em&gt; никогда не оценивается. Его можно использовать для описания поведения, которое еще не реализовано.</target>
        </trans-unit>
        <trans-unit id="a4fd4731d853684f9c741b8491154929e790933c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Relativization&lt;/em&gt; is the inverse of resolution as that it procudes an URI that resolves to the original when resolved against the base.</source>
          <target state="translated">&lt;em&gt;Релятивизация&lt;/em&gt; является обратной разрешающей способностью, поскольку она обрабатывает URI, который разрешается к оригиналу при сопоставлении с основанием.</target>
        </trans-unit>
        <trans-unit id="eafe24d487ca714e0c38fda17a654166dc9eff41" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Resolution&lt;/em&gt; is the process of resolving one URI against another, &lt;em&gt;base&lt;/em&gt; URI. The resulting URI is constructed from components of both URIs in the manner specified by &lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-5.2.2&quot;&gt;RFC 3986 section 5.2&lt;/a&gt;, taking components from the base URI for those not specified in the original. For hierarchical URIs, the path of the original is resolved against the path of the base and then normalized. See &lt;code&gt;&lt;a href=&quot;uri#resolve(uri:URI%7CString):URI-instance-method&quot;&gt;#resolve&lt;/a&gt;&lt;/code&gt; for examples.</source>
          <target state="translated">&lt;em&gt;Разрешение&lt;/em&gt; - это процесс преобразования одного URI в другой, &lt;em&gt;базовый&lt;/em&gt; URI. Результирующий URI создается из компонентов обоих URI способом, указанным в &lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-5.2.2&quot;&gt;разделе 5.2 RFC 3986&lt;/a&gt; , с использованием компонентов из базового URI для тех, которые не указаны в оригинале. Для иерархических URI путь оригинала сопоставляется с путем базы, а затем нормализуется. Смотрите &lt;code&gt;&lt;a href=&quot;uri#resolve(uri:URI%7CString):URI-instance-method&quot;&gt;#resolve&lt;/a&gt;&lt;/code&gt; для примеров.</target>
        </trans-unit>
        <trans-unit id="d887b3779f0668de0fcba3377d98e823c8230e74" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;What's a Shard?&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Что такое осколок?&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="06c334d4510e54bf8fe16b02cdc32bd5c3737af1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;access_token&lt;/em&gt;: the OAuth2::AccessToken to make requests.</source>
          <target state="translated">&lt;em&gt;access_token&lt;/em&gt; : OAuth2 :: AccessToken для выполнения запросов.</target>
        </trans-unit>
        <trans-unit id="b7a5e49b65075a94f3416ff7b22f3fe7077617ae" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;algorithm&lt;/em&gt; specifies which &lt;code&gt;&lt;a href=&quot;algorithm&quot;&gt;OpenSSL::Algorithm&lt;/a&gt;&lt;/code&gt; is to be used.</source>
          <target state="translated">&lt;em&gt;Алгоритм&lt;/em&gt; определяет, какой &lt;code&gt;&lt;a href=&quot;algorithm&quot;&gt;OpenSSL::Algorithm&lt;/a&gt;&lt;/code&gt; должен использоваться.</target>
        </trans-unit>
        <trans-unit id="d231e68d5ba1c68db6f882c1cbe3c7eb2e3b347f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;backlog&lt;/em&gt; to specify how many pending connections are allowed;</source>
          <target state="translated">&lt;em&gt;отставание,&lt;/em&gt; чтобы указать, сколько разрешенных подключений разрешено;</target>
        </trans-unit>
        <trans-unit id="970221270157ca2fcbfffda037e97a1e22199e87" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;callback&lt;/em&gt;: invoked when an access token is refreshed, giving you a chance to persist it.</source>
          <target state="translated">&lt;em&gt;обратный вызов&lt;/em&gt; : вызывается при обновлении токена доступа, давая вам возможность сохранить его.</target>
        </trans-unit>
        <trans-unit id="c04acc14ce5395b5229908f8f9e1ad16fa5b4827" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;context&lt;/em&gt; configures the SSL options, see &lt;code&gt;&lt;a href=&quot;context/server&quot;&gt;OpenSSL::SSL::Context::Server&lt;/a&gt;&lt;/code&gt; for details</source>
          <target state="translated">&lt;em&gt;Контекст&lt;/em&gt; настраивает параметры SSL см &lt;code&gt;&lt;a href=&quot;context/server&quot;&gt;OpenSSL::SSL::Context::Server&lt;/a&gt;&lt;/code&gt; для подробной информации</target>
        </trans-unit>
        <trans-unit id="30bd223ea4ea1a8c46a1f672bad6b7b3cbe081a4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;converter&lt;/em&gt; takes an alternate type for parsing. It requires a &lt;code&gt;#from_yaml&lt;/code&gt; method in that class, and returns an instance of the given type. Examples of converters are &lt;code&gt;&lt;a href=&quot;time/format&quot;&gt;Time::Format&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;time/epochconverter&quot;&gt;Time::EpochConverter&lt;/a&gt;&lt;/code&gt; for &lt;code&gt;&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;Конвертер&lt;/em&gt; принимает альтернативный тип для анализа. Для этого требуется метод &lt;code&gt;#from_yaml&lt;/code&gt; в этом классе, и он возвращает экземпляр данного типа. Примерами преобразователей являются &lt;code&gt;&lt;a href=&quot;time/format&quot;&gt;Time::Format&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;time/epochconverter&quot;&gt;Time::EpochConverter&lt;/a&gt;&lt;/code&gt; for &lt;code&gt;&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8f23d7bbb7ce4b8bd2faeb6394c92080382acbca" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;cstime&lt;/em&gt;: CPU time a processes terminated children (and their terminated children) spent in the kernel.</source>
          <target state="translated">&lt;em&gt;cstime&lt;/em&gt; : процессорное время, которое дочерние процессы (и их дочерние процессы) провели в ядре.</target>
        </trans-unit>
        <trans-unit id="87db034ca751e499464f8d8602d53b8c946d160a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;cutime&lt;/em&gt;: CPU time a processes terminated children (and their terminated children) spent in the userland.</source>
          <target state="translated">&lt;em&gt;cutime&lt;/em&gt; : процессорное время, которое дочерние процессы (и их дочерние процессы) провели в пользовательском пространстве.</target>
        </trans-unit>
        <trans-unit id="b69ee0e180cd9d3aaeecd0b17d10c82161dd6941" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;domain&lt;/em&gt; may be an IP address or a domain name.</source>
          <target state="translated">&lt;em&gt;домен&lt;/em&gt; может быть IP-адресом или доменным именем.</target>
        </trans-unit>
        <trans-unit id="926891845fa77e21dfb97948367c38d13ee05d08" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;encoding&lt;/em&gt; and &lt;em&gt;invalid&lt;/em&gt; are passed to &lt;code&gt;&lt;a href=&quot;io#set_encoding(encoding:String,invalid:Symbol?=nil)-instance-method&quot;&gt;IO#set_encoding&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;Кодировка&lt;/em&gt; и &lt;em&gt;недействительные&lt;/em&gt; передаются в &lt;code&gt;&lt;a href=&quot;io#set_encoding(encoding:String,invalid:Symbol?=nil)-instance-method&quot;&gt;IO#set_encoding&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="af4b1a713320d70a594ac4d6c6ac6971515f06bb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;expires_at&lt;/em&gt;: the Time when the access token expires.</source>
          <target state="translated">&lt;em&gt;expires_at&lt;/em&gt; : Время истечения срока действия токена доступа.</target>
        </trans-unit>
        <trans-unit id="90b400582b1731ad7615258e8ccf225bb08990ce" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;extension&lt;/em&gt; must start with a dot (&lt;code&gt;.&lt;/code&gt;) and must not contain any null bytes.</source>
          <target state="translated">&lt;em&gt;расширение&lt;/em&gt; должно начинаться с точки ( &lt;code&gt;.&lt;/code&gt; ) и не должно содержать нулевых байтов.</target>
        </trans-unit>
        <trans-unit id="82d9e7624b3627c0f5aceb75904caeb1257fddc8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;family&lt;/em&gt; is optional and defaults to &lt;code&gt;&lt;a href=&quot;family#UNSPEC&quot;&gt;Family::UNSPEC&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;семья&lt;/em&gt; является необязательной и по умолчанию имеет значение &lt;code&gt;&lt;a href=&quot;family#UNSPEC&quot;&gt;Family::UNSPEC&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="efe061b7574c6ba9049c2cd80318707d0c2e5f09" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;filename&lt;/em&gt; will be created if it does not already exist.</source>
          <target state="translated">&lt;em&gt;Имя файла&lt;/em&gt; будет создано, если оно еще не существует.</target>
        </trans-unit>
        <trans-unit id="0fb753eff02fc2351fb2f03951c36ca1052dc3d2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;format&lt;/em&gt; can be set to use the extended range of JEDEC units (&lt;code&gt;K&lt;/code&gt;, &lt;code&gt;M&lt;/code&gt;, &lt;code&gt;G&lt;/code&gt;, &lt;code&gt;T&lt;/code&gt;, &lt;code&gt;P&lt;/code&gt;, &lt;code&gt;E&lt;/code&gt;, &lt;code&gt;Z&lt;/code&gt;, &lt;code&gt;Y&lt;/code&gt;) which equals to the prefixes of the SI system except for uppercase &lt;code&gt;K&lt;/code&gt; and is based on powers of 1024 (see &lt;code&gt;&lt;a href=&quot;int/binaryprefixformat#JEDEC&quot;&gt;BinaryPrefixFormat::JEDEC&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">&lt;em&gt;формат&lt;/em&gt; может быть установлен для использования расширенного диапазона единиц JEDEC ( &lt;code&gt;K&lt;/code&gt; , &lt;code&gt;M&lt;/code&gt; , &lt;code&gt;G&lt;/code&gt; , &lt;code&gt;T&lt;/code&gt; , &lt;code&gt;P&lt;/code&gt; , &lt;code&gt;E&lt;/code&gt; , &lt;code&gt;Z&lt;/code&gt; , &lt;code&gt;Y&lt;/code&gt; ), который равен префиксам системы SI за исключением заглавных букв &lt;code&gt;K&lt;/code&gt; и основан на степенях 1024 ( см. &lt;code&gt;&lt;a href=&quot;int/binaryprefixformat#JEDEC&quot;&gt;BinaryPrefixFormat::JEDEC&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="37f74cd29108552cd7922a920646fccde93e3f43" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;home&lt;/em&gt; specifies the home directory which &lt;code&gt;~&lt;/code&gt; will expand to. If not given (or &lt;code&gt;nil&lt;/code&gt; is given) then &lt;code&gt;&lt;a href=&quot;path#home:Path-class-method&quot;&gt;Path.home&lt;/a&gt;&lt;/code&gt; will be used. If &lt;em&gt;expand_base&lt;/em&gt; is &lt;code&gt;true&lt;/code&gt;, &lt;em&gt;base&lt;/em&gt; itself will be exanded in &lt;code&gt;&lt;a href=&quot;dir#current:String-class-method&quot;&gt;Dir.current&lt;/a&gt;&lt;/code&gt; if it is not an absolute path. This guarantees the method returns an absolute path (assuming that &lt;code&gt;&lt;a href=&quot;dir#current:String-class-method&quot;&gt;Dir.current&lt;/a&gt;&lt;/code&gt; is absolute).</source>
          <target state="translated">&lt;em&gt;home&lt;/em&gt; указывает домашний каталог, в который будет расширяться &lt;code&gt;~&lt;/code&gt; . Если не указано (или указано &lt;code&gt;nil&lt;/code&gt; ), будет использован &lt;code&gt;&lt;a href=&quot;path#home:Path-class-method&quot;&gt;Path.home&lt;/a&gt;&lt;/code&gt; . Если значение параметра &lt;em&gt;expand_base&lt;/em&gt; равно &lt;code&gt;true&lt;/code&gt; , сама &lt;em&gt;база&lt;/em&gt; будет расширена в &lt;code&gt;&lt;a href=&quot;dir#current:String-class-method&quot;&gt;Dir.current&lt;/a&gt;&lt;/code&gt; , если это не абсолютный путь. Это гарантирует, что метод возвращает абсолютный путь (при условии, что &lt;code&gt;&lt;a href=&quot;dir#current:String-class-method&quot;&gt;Dir.current&lt;/a&gt;&lt;/code&gt; является абсолютным).</target>
        </trans-unit>
        <trans-unit id="54696c8ccb4e43728f090fd9a8506eedef8d9c1c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;initial&lt;/em&gt; optionally sets the starting value, &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;, for all bits in the array.</source>
          <target state="translated">&lt;em&gt;initial&lt;/em&gt; дополнительно устанавливает начальное значение &lt;code&gt;true&lt;/code&gt; или &lt;code&gt;false&lt;/code&gt; для всех битов в массиве.</target>
        </trans-unit>
        <trans-unit id="3f596385ff2da91e4580cec4ab7d58ab08564736" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;key&lt;/em&gt; defines which key to read from a YAML document. It defaults to the name of the property.</source>
          <target state="translated">&lt;em&gt;ключ&lt;/em&gt; определяет, какой ключ читать из документа YAML. По умолчанию используется имя свойства.</target>
        </trans-unit>
        <trans-unit id="cb196a573e945130e0e02d6055e97bb86f898339" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;mode&lt;/em&gt; must be one of the following file open modes:</source>
          <target state="translated">&lt;em&gt;режим&lt;/em&gt; должен быть одним из следующих режимов открытия файлов:</target>
        </trans-unit>
        <trans-unit id="c14d1ac839300fbcb7cf09d4ccaf0be1c0be153d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;name&lt;/em&gt; is understood to be a location name in the IANA Time Zone database, such as &lt;code&gt;&quot;America/New_York&quot;&lt;/code&gt;. As special cases, &lt;code&gt;&quot;&lt;a href=&quot;location#UTC&quot;&gt;UTC&lt;/a&gt;&quot;&lt;/code&gt; and empty string (&lt;code&gt;&quot;&quot;&lt;/code&gt;) return &lt;code&gt;&lt;a href=&quot;location#UTC&quot;&gt;Location::UTC&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&quot;Local&quot;&lt;/code&gt; returns &lt;code&gt;&lt;a href=&quot;location#local-class-method&quot;&gt;Location.local&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;имя&lt;/em&gt; понимается как имя местоположения в базе данных часового пояса IANA, например &lt;code&gt;&quot;America/New_York&quot;&lt;/code&gt; . В особых случаях &lt;code&gt;&quot;&lt;a href=&quot;location#UTC&quot;&gt;UTC&lt;/a&gt;&quot;&lt;/code&gt; и пустая строка ( &lt;code&gt;&quot;&quot;&lt;/code&gt; ) возвращают &lt;code&gt;&lt;a href=&quot;location#UTC&quot;&gt;Location::UTC&lt;/a&gt;&lt;/code&gt; , а &lt;code&gt;&quot;Local&quot;&lt;/code&gt; возвращает &lt;code&gt;&lt;a href=&quot;location#local-class-method&quot;&gt;Location.local&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="169aaf62e57ed85d7badf5bc4cd8bf8d2354ae6b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;nilable&lt;/em&gt; defines if a property can be a &lt;code&gt;&lt;a href=&quot;nil&quot;&gt;Nil&lt;/a&gt;&lt;/code&gt;. Passing &lt;code&gt;T?&lt;/code&gt; as a type has the same effect.</source>
          <target state="translated">&lt;em&gt;nilable&lt;/em&gt; определяет, может ли свойство быть &lt;code&gt;&lt;a href=&quot;nil&quot;&gt;Nil&lt;/a&gt;&lt;/code&gt; . Проходя &lt;code&gt;T?&lt;/code&gt; как тип имеет тот же эффект.</target>
        </trans-unit>
        <trans-unit id="bf83d27ed666498c37864c7063d240b003fa111e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;oauth2_client&lt;/em&gt;: the OAuth2::Client used to refresh an access token.</source>
          <target state="translated">&lt;em&gt;oauth2_client&lt;/em&gt; : OAuth2 :: Client, используемый для обновления токена доступа.</target>
        </trans-unit>
        <trans-unit id="55a31cd5469ce51a819019d8f51941fa405dafad" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;prefix&lt;/em&gt; and &lt;em&gt;suffix&lt;/em&gt; are appended to the front and end of the file name, respectively. These values may contain directory separators.</source>
          <target state="translated">&lt;em&gt;префикс&lt;/em&gt; и &lt;em&gt;суффикс&lt;/em&gt; добавляются в начало и конец имени файла соответственно. Эти значения могут содержать разделители каталогов.</target>
        </trans-unit>
        <trans-unit id="f8ec535a9d760081f0850e7ed6453e594c54f8b2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;protocol&lt;/em&gt; is the intended socket protocol (e.g. &lt;code&gt;&lt;a href=&quot;protocol#TCP&quot;&gt;Protocol::TCP&lt;/a&gt;&lt;/code&gt;) and should be specified.</source>
          <target state="translated">&lt;em&gt;протокол&lt;/em&gt; является предполагаемым протоколом сокета (например, &lt;code&gt;&lt;a href=&quot;protocol#TCP&quot;&gt;Protocol::TCP&lt;/a&gt;&lt;/code&gt; ) и должен быть указан.</target>
        </trans-unit>
        <trans-unit id="b0757bafd0368014d40702811700ac94900d65f2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;reuse_port&lt;/em&gt; to enable multiple processes to bind to the same port (&lt;code&gt;SO_REUSEPORT&lt;/code&gt;).</source>
          <target state="translated">&lt;em&gt;reuse_port,&lt;/em&gt; чтобы позволить нескольким процессам связываться с одним и тем же портом ( &lt;code&gt;SO_REUSEPORT&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="b8f8334872eefab373a2e177a6a9bf7d4ee3be54" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;separator&lt;/em&gt; describes the decimal separator, &lt;em&gt;delimiter&lt;/em&gt; the thousands delimiter (see &lt;code&gt;&lt;a href=&quot;number#format(separator='.',delimiter=',',decimal_places:Int?=nil,*,group:Int=3,only_significant:Bool=false):String-instance-method&quot;&gt;#format&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">&lt;em&gt;Разделитель&lt;/em&gt; описывает десятичный разделитель, &lt;em&gt;разделитель разделитель&lt;/em&gt; тысяч (см. &lt;code&gt;&lt;a href=&quot;number#format(separator='.',delimiter=',',decimal_places:Int?=nil,*,group:Int=3,only_significant:Bool=false):String-instance-method&quot;&gt;#format&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="7f9dcc182591b19be7deefc4728cf885176f351d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;separator&lt;/em&gt; is used as decimal separator, &lt;em&gt;delimiter&lt;/em&gt; as thousands delimiter between batches of &lt;em&gt;group&lt;/em&gt; digits.</source>
          <target state="translated">&lt;em&gt;Разделитель&lt;/em&gt; используется как десятичный разделитель, а &lt;em&gt;разделитель -&lt;/em&gt; как разделитель тысяч между партиями &lt;em&gt;групповых&lt;/em&gt; цифр.</target>
        </trans-unit>
        <trans-unit id="9ed8772b697b08c734c715b74c806a4c95c819b8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;service&lt;/em&gt; may be a port number or a service name. It must be specified, because different servers may handle the &lt;code&gt;mail&lt;/code&gt; or &lt;code&gt;http&lt;/code&gt; services for example.</source>
          <target state="translated">&lt;em&gt;услуга&lt;/em&gt; может быть номером порта или именем службы. Это должно быть указано, потому что разные серверы могут обрабатывать &lt;code&gt;mail&lt;/code&gt; или &lt;code&gt;http&lt;/code&gt; сервисы, например.</target>
        </trans-unit>
        <trans-unit id="f877f4511de8c901d388be2e9ea7b1133b67c403" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;status&lt;/em&gt; is the exit status of the current process.</source>
          <target state="translated">&lt;em&gt;статус&lt;/em&gt; - это статус выхода текущего процесса.</target>
        </trans-unit>
        <trans-unit id="cd1de7458b64d26b2b82d64d143c6a6cdc38b833" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;stime&lt;/em&gt;: CPU time a process spent in the kernel.</source>
          <target state="translated">&lt;em&gt;stime&lt;/em&gt; : процессорное время процесс, проведенный в ядре.</target>
        </trans-unit>
        <trans-unit id="9a8c44e98d5a8635973a9eba791da161ccdea2f7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;time&lt;/em&gt; is always converted to UTC.</source>
          <target state="translated">&lt;em&gt;время&lt;/em&gt; всегда конвертируется в UTC.</target>
        </trans-unit>
        <trans-unit id="7239f797b2bc16a11d41d14980623489d059e05c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;type&lt;/em&gt; (required) defines its type. In the example above, &lt;em&gt;title: String&lt;/em&gt; is a shortcut to &lt;em&gt;title: {type: String}&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;Тип&lt;/em&gt; (обязательно) определяет его тип. В приведенном выше примере &lt;em&gt;title: String&lt;/em&gt; является ярлыком для &lt;em&gt;title: {type: String}&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="d3c0c7b942e1ac71bced0fb3cea03fe68acf9416" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;type&lt;/em&gt; is the intended socket type (e.g. &lt;code&gt;&lt;a href=&quot;type#STREAM&quot;&gt;Type::STREAM&lt;/a&gt;&lt;/code&gt;) and must be specified.</source>
          <target state="translated">&lt;em&gt;тип&lt;/em&gt; является предполагаемым типом сокета (например, &lt;code&gt;&lt;a href=&quot;type#STREAM&quot;&gt;Type::STREAM&lt;/a&gt;&lt;/code&gt; ) и должен быть указан.</target>
        </trans-unit>
        <trans-unit id="a397f407d11d41468bdc2ec0e16ba10d41a90d7c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;unix_seconds&lt;/em&gt; expresses the number of seconds since UNIX epoch (&lt;code&gt;1970-01-01 00:00:00 &lt;a href=&quot;location#UTC&quot;&gt;UTC&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">&lt;em&gt;unix_seconds&lt;/em&gt; выражает количество секунд с начала UNIX ( &lt;code&gt;1970-01-01 00:00:00 &lt;a href=&quot;location#UTC&quot;&gt;UTC&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="f512f0573ace13f49f6a4fbfd72d6c2e90cfd96b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;utime&lt;/em&gt;: CPU time a process spent in userland.</source>
          <target state="translated">&lt;em&gt;utime&lt;/em&gt; : процессорное время процесс, проведенный в пользовательском пространстве.</target>
        </trans-unit>
        <trans-unit id="e317fb33167f85960be1b41a9a3d32f654bdf768" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;years&lt;/em&gt; is equivalent to &lt;code&gt;12&lt;/code&gt; months and &lt;em&gt;weeks&lt;/em&gt; is equivalent to &lt;code&gt;7&lt;/code&gt; days.</source>
          <target state="translated">&lt;em&gt;годы&lt;/em&gt; эквивалентны &lt;code&gt;12&lt;/code&gt; месяцам, а &lt;em&gt;недели&lt;/em&gt; - &lt;code&gt;7&lt;/code&gt; дням.</target>
        </trans-unit>
        <trans-unit id="f5fa0e4aec6c34b9fa5f07685762a00dabdf657d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#!=&lt;/strong&gt;(other : ASTNode) : BoolLiteral</source>
          <target state="translated">&lt;strong&gt;#! =&lt;/strong&gt; (другое: ASTNode): BoolLiteral</target>
        </trans-unit>
        <trans-unit id="6e7acc99dbfdd6b0a64badcf1f04e8de29a83c45" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#!=&lt;/strong&gt;(other : Bool) : Bool</source>
          <target state="translated">&lt;strong&gt;#! =&lt;/strong&gt; (другое: Bool): Bool</target>
        </trans-unit>
        <trans-unit id="69eb5dcfa4dc99e7976a1197f39923f1d8b8b45b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#!=&lt;/strong&gt;(other : Char) : Bool</source>
          <target state="translated">&lt;strong&gt;#! =&lt;/strong&gt; (другое: Char): Bool</target>
        </trans-unit>
        <trans-unit id="b1001014c0e3e9aaa26e7713b443d40b3028a947" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#!=&lt;/strong&gt;(other : Float32) : Bool</source>
          <target state="translated">&lt;strong&gt;#! =&lt;/strong&gt; (другое: Float32): Bool</target>
        </trans-unit>
        <trans-unit id="0dd2999fac26f64314f9a34af7994e8885fdfc6b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#!=&lt;/strong&gt;(other : Float64) : Bool</source>
          <target state="translated">&lt;strong&gt;#! =&lt;/strong&gt; (другое: Float64): Bool</target>
        </trans-unit>
        <trans-unit id="a81afe4674ae903f85db1226c81dc9028d9b0803" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#!=&lt;/strong&gt;(other : Int128) : Bool</source>
          <target state="translated">&lt;strong&gt;#! =&lt;/strong&gt; (другое: Int128): Bool</target>
        </trans-unit>
        <trans-unit id="83ad1a6cc85954499cb989a87386fe45b7d272ce" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#!=&lt;/strong&gt;(other : Int16) : Bool</source>
          <target state="translated">&lt;strong&gt;#! =&lt;/strong&gt; (другое: Int16): Bool</target>
        </trans-unit>
        <trans-unit id="cee521abcb1885cd7ae27b6591f01af73812bce7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#!=&lt;/strong&gt;(other : Int32) : Bool</source>
          <target state="translated">&lt;strong&gt;#! =&lt;/strong&gt; (другое: Int32): Bool</target>
        </trans-unit>
        <trans-unit id="915f3102056c3959559585d7d68c37666bbaf6bf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#!=&lt;/strong&gt;(other : Int64) : Bool</source>
          <target state="translated">&lt;strong&gt;#! =&lt;/strong&gt; (другое: Int64): Bool</target>
        </trans-unit>
        <trans-unit id="e40ec3a46150c71018ec837f1de7a2e5eebfbdf7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#!=&lt;/strong&gt;(other : Int8) : Bool</source>
          <target state="translated">&lt;strong&gt;#! =&lt;/strong&gt; (другое: Int8): Bool</target>
        </trans-unit>
        <trans-unit id="a577bdf3e1051976a633c58d8fc9ff26330f7b6c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#!=&lt;/strong&gt;(other : Symbol) : Bool</source>
          <target state="translated">&lt;strong&gt;#! =&lt;/strong&gt; (другое: Symbol): Bool</target>
        </trans-unit>
        <trans-unit id="9c0a92225ecb3b9a1de7f125213d1f65c1ab0085" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#!=&lt;/strong&gt;(other : UInt128) : Bool</source>
          <target state="translated">&lt;strong&gt;#! =&lt;/strong&gt; (другое: UInt128): Bool</target>
        </trans-unit>
        <trans-unit id="24a5b9afee391cd04c8eb1485a5855f5719f9107" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#!=&lt;/strong&gt;(other : UInt16) : Bool</source>
          <target state="translated">&lt;strong&gt;#! =&lt;/strong&gt; (другое: UInt16): Bool</target>
        </trans-unit>
        <trans-unit id="7c05a9acda15b4d97a14f1c08e83d73624838ca3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#!=&lt;/strong&gt;(other : UInt32) : Bool</source>
          <target state="translated">&lt;strong&gt;#! =&lt;/strong&gt; (другое: UInt32): Bool</target>
        </trans-unit>
        <trans-unit id="656c2be3708466f095b11897af5f202910db518a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#!=&lt;/strong&gt;(other : UInt64) : Bool</source>
          <target state="translated">&lt;strong&gt;#! =&lt;/strong&gt; (другое: UInt64): Bool</target>
        </trans-unit>
        <trans-unit id="e2b74dc274ac10edd21cddb9fb48c8c170943a51" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#!=&lt;/strong&gt;(other : UInt8) : Bool</source>
          <target state="translated">&lt;strong&gt;#! =&lt;/strong&gt; (другое: UInt8): Bool</target>
        </trans-unit>
        <trans-unit id="10ff942a68c160be1e73987c0e2937d8a724de43" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#!=&lt;/strong&gt;(other)</source>
          <target state="translated">&lt;strong&gt;#!=&lt;/strong&gt;(other)</target>
        </trans-unit>
        <trans-unit id="0862cf16159adb79da4e333feecc4ad2901d8eb9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#!~&lt;/strong&gt;(other)</source>
          <target state="translated">&lt;strong&gt;#!~&lt;/strong&gt;(other)</target>
        </trans-unit>
        <trans-unit id="d05554cbdcb45d3b31321328953d9730390674a1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#%&lt;/strong&gt;(other : BigInt) : BigInt</source>
          <target state="translated">&lt;strong&gt;#%&lt;/strong&gt; (другое: BigInt): BigInt</target>
        </trans-unit>
        <trans-unit id="c2eac438b3dd65c265c378a79db91a8d4e12b530" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#%&lt;/strong&gt;(other : Int)</source>
          <target state="translated">&lt;strong&gt;#%&lt;/strong&gt; (другое: Int)</target>
        </trans-unit>
        <trans-unit id="59ca0824e41029a8690c141e2ee4e031645e43bb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#%&lt;/strong&gt;(other : Int) : BigInt</source>
          <target state="translated">&lt;strong&gt;#%&lt;/strong&gt; (другое: Int): BigInt</target>
        </trans-unit>
        <trans-unit id="1730b20b5d2e1a685de11d30f597fe7847ba273d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#%&lt;/strong&gt;(other : NumberLiteral) : NumberLiteral</source>
          <target state="translated">&lt;strong&gt;#%&lt;/strong&gt; (другое: NumberLiteral): NumberLiteral</target>
        </trans-unit>
        <trans-unit id="9b4f257e41253814ead9b805bc9ddadc5abae813" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#%&lt;/strong&gt;(other)</source>
          <target state="translated">&lt;strong&gt;#%&lt;/strong&gt;(other)</target>
        </trans-unit>
        <trans-unit id="9ef2f33fd08f52a809934cd152bfaa98bffa0263" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;**&lt;/strong&gt;(exponent : Int) : self</source>
          <target state="translated">&lt;strong&gt;# &amp;amp; **&lt;/strong&gt; (экспонента: Int): self</target>
        </trans-unit>
        <trans-unit id="4bcda843b0018e79cf160e080c61a7deb6140e16" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;*&lt;/strong&gt;(other : BigInt) : BigInt</source>
          <target state="translated">&lt;strong&gt;# &amp;amp; *&lt;/strong&gt; (другое: BigInt): BigInt</target>
        </trans-unit>
        <trans-unit id="d1ab580c5b016840bbd32e6b028e669138f06e53" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;*&lt;/strong&gt;(other : Int128) : self</source>
          <target state="translated">&lt;strong&gt;# &amp;amp; *&lt;/strong&gt; (другое: Int128): self</target>
        </trans-unit>
        <trans-unit id="227d74c66fad11e24da60b7e5d5a8a831be91a9a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;*&lt;/strong&gt;(other : Int16) : self</source>
          <target state="translated">&lt;strong&gt;# &amp;amp; *&lt;/strong&gt; (другое: Int16): self</target>
        </trans-unit>
        <trans-unit id="ce7b4024e3f8f1df74bac45a9ce80a11769d8512" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;*&lt;/strong&gt;(other : Int32) : self</source>
          <target state="translated">&lt;strong&gt;# &amp;amp; *&lt;/strong&gt; (другое: Int32): self</target>
        </trans-unit>
        <trans-unit id="3fdf119ccee09a71a4072e6e5e1bd56467d893ff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;*&lt;/strong&gt;(other : Int64) : self</source>
          <target state="translated">&lt;strong&gt;# &amp;amp; *&lt;/strong&gt; (другое: Int64): self</target>
        </trans-unit>
        <trans-unit id="841cd251127081a4e5f51a15a3720f76dd5d2e6f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;*&lt;/strong&gt;(other : Int8) : self</source>
          <target state="translated">&lt;strong&gt;# &amp;amp; *&lt;/strong&gt; (другое: Int8): self</target>
        </trans-unit>
        <trans-unit id="281c885fd1a5473e7a37dd243ade7ed3b5e18e27" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;*&lt;/strong&gt;(other : UInt128) : self</source>
          <target state="translated">&lt;strong&gt;# &amp;amp; *&lt;/strong&gt; (другое: UInt128): self</target>
        </trans-unit>
        <trans-unit id="8920463e360af2d1dc763d2dc0968c122279ce3a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;*&lt;/strong&gt;(other : UInt16) : self</source>
          <target state="translated">&lt;strong&gt;# &amp;amp; *&lt;/strong&gt; (другое: UInt16): self</target>
        </trans-unit>
        <trans-unit id="d1b6a91057545afeda79474d3e3456d9f0a1b030" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;*&lt;/strong&gt;(other : UInt32) : self</source>
          <target state="translated">&lt;strong&gt;# &amp;amp; *&lt;/strong&gt; (другое: UInt32): self</target>
        </trans-unit>
        <trans-unit id="808e6ebccf45fc524dca70224bfc9ea5da37a467" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;*&lt;/strong&gt;(other : UInt64) : self</source>
          <target state="translated">&lt;strong&gt;# &amp;amp; *&lt;/strong&gt; (другое: UInt64): self</target>
        </trans-unit>
        <trans-unit id="97f8f511aa9fd0fc780ed45fc0af9b77c4c7a199" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;*&lt;/strong&gt;(other : UInt8) : self</source>
          <target state="translated">&lt;strong&gt;# &amp;amp; *&lt;/strong&gt; (другое: UInt8): self</target>
        </trans-unit>
        <trans-unit id="a0617b8257110d0c3bbacc1ac007688bd4cd9a7e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;*&lt;/strong&gt;(other) : BigInt</source>
          <target state="translated">&lt;strong&gt;# &amp;amp; *&lt;/strong&gt; (другие): BigInt</target>
        </trans-unit>
        <trans-unit id="0491463917f74441e49131b8809f4b5612718c8a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;+&lt;/strong&gt;(other : BigInt) : BigInt</source>
          <target state="translated">&lt;strong&gt;# &amp;amp; +&lt;/strong&gt; (другое: BigInt): BigInt</target>
        </trans-unit>
        <trans-unit id="fb69302fe3312da75d6c508215c467511792ce24" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;+&lt;/strong&gt;(other : Int128) : self</source>
          <target state="translated">&lt;strong&gt;# &amp;amp; +&lt;/strong&gt; (другое: Int128): self</target>
        </trans-unit>
        <trans-unit id="8f736975ef68e6dfebd782d701b91f1d0d7c6829" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;+&lt;/strong&gt;(other : Int16) : self</source>
          <target state="translated">&lt;strong&gt;# &amp;amp; +&lt;/strong&gt; (другое: Int16): self</target>
        </trans-unit>
        <trans-unit id="e572fdcb49349f69ec91442b4bd6ae8e6986f775" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;+&lt;/strong&gt;(other : Int32) : self</source>
          <target state="translated">&lt;strong&gt;# &amp;amp; +&lt;/strong&gt; (другое: Int32): self</target>
        </trans-unit>
        <trans-unit id="935948a639889c4a8f8754c039bffcf0aa0dbaeb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;+&lt;/strong&gt;(other : Int64) : self</source>
          <target state="translated">&lt;strong&gt;# &amp;amp; +&lt;/strong&gt; (другое: Int64): self</target>
        </trans-unit>
        <trans-unit id="36fe3116a30fee904cc496b0f80c70f6146a33c9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;+&lt;/strong&gt;(other : Int8) : self</source>
          <target state="translated">&lt;strong&gt;# &amp;amp; +&lt;/strong&gt; (другое: Int8): self</target>
        </trans-unit>
        <trans-unit id="cfa3cf9d7c06c1fe4edafc61523d71205ac4b8a6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;+&lt;/strong&gt;(other : UInt128) : self</source>
          <target state="translated">&lt;strong&gt;# &amp;amp; +&lt;/strong&gt; (другое: UInt128): self</target>
        </trans-unit>
        <trans-unit id="f3161d025782560be6eba304c56a4ee3f06f7aca" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;+&lt;/strong&gt;(other : UInt16) : self</source>
          <target state="translated">&lt;strong&gt;# &amp;amp; +&lt;/strong&gt; (другое: UInt16): self</target>
        </trans-unit>
        <trans-unit id="b889ddfb96c6c7130539e0eacbd7951124fb5dd0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;+&lt;/strong&gt;(other : UInt32) : self</source>
          <target state="translated">&lt;strong&gt;# &amp;amp; +&lt;/strong&gt; (другое: UInt32): self</target>
        </trans-unit>
        <trans-unit id="661641ab5f348d4fb856c3a11b241280a18742aa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;+&lt;/strong&gt;(other : UInt64) : self</source>
          <target state="translated">&lt;strong&gt;# &amp;amp; +&lt;/strong&gt; (другое: UInt64): self</target>
        </trans-unit>
        <trans-unit id="e9d187e75248c5ad4600a1fb616deb439dd5fbc1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;+&lt;/strong&gt;(other : UInt8) : self</source>
          <target state="translated">&lt;strong&gt;# &amp;amp; +&lt;/strong&gt; (другое: UInt8): self</target>
        </trans-unit>
        <trans-unit id="d15e64499630d49126edfc208e3f3cb80e63ef67" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;+&lt;/strong&gt;(other) : BigInt</source>
          <target state="translated">&lt;strong&gt;# &amp;amp; +&lt;/strong&gt; (другое): BigInt</target>
        </trans-unit>
        <trans-unit id="6dc74f6fb40b219265278d4e076ec9f61773bd47" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;-&lt;/strong&gt;(other : BigInt) : BigInt</source>
          <target state="translated">&lt;strong&gt;# &amp;amp; -&lt;/strong&gt; (другое: BigInt): BigInt</target>
        </trans-unit>
        <trans-unit id="e2d154b2a380b53b53a12dd9aa7bb5564d57c017" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;-&lt;/strong&gt;(other : Int128) : self</source>
          <target state="translated">&lt;strong&gt;# &amp;amp; -&lt;/strong&gt; (другое: Int128): self</target>
        </trans-unit>
        <trans-unit id="29abeadf8c658ee1442c7778bcbac4d75386f6d8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;-&lt;/strong&gt;(other : Int16) : self</source>
          <target state="translated">&lt;strong&gt;# &amp;amp; -&lt;/strong&gt; (другое: Int16): self</target>
        </trans-unit>
        <trans-unit id="37a3b306b761c671a5fccdd4b52589a873954a20" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;-&lt;/strong&gt;(other : Int32) : self</source>
          <target state="translated">&lt;strong&gt;# &amp;amp; -&lt;/strong&gt; (другое: Int32): self</target>
        </trans-unit>
        <trans-unit id="83a467744d102f239aa1d0095ea238f9e154673f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;-&lt;/strong&gt;(other : Int64) : self</source>
          <target state="translated">&lt;strong&gt;# &amp;amp; -&lt;/strong&gt; (другое: Int64): self</target>
        </trans-unit>
        <trans-unit id="34527e1a16a2050526c7f29cd56b49a17b236e4d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;-&lt;/strong&gt;(other : Int8) : self</source>
          <target state="translated">&lt;strong&gt;# &amp;amp; -&lt;/strong&gt; (другое: Int8): self</target>
        </trans-unit>
        <trans-unit id="86903c66de24027a285300e041fb90715ff212df" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;-&lt;/strong&gt;(other : UInt128) : self</source>
          <target state="translated">&lt;strong&gt;# &amp;amp; -&lt;/strong&gt; (другое: UInt128): self</target>
        </trans-unit>
        <trans-unit id="d5783372e89f4fbba4ca38c6894664f36fcaea57" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;-&lt;/strong&gt;(other : UInt16) : self</source>
          <target state="translated">&lt;strong&gt;# &amp;amp; -&lt;/strong&gt; (другое: UInt16): self</target>
        </trans-unit>
        <trans-unit id="89ef794ab04ab47ce66eda8c492699a5e638dc14" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;-&lt;/strong&gt;(other : UInt32) : self</source>
          <target state="translated">&lt;strong&gt;# &amp;amp; -&lt;/strong&gt; (другое: UInt32): self</target>
        </trans-unit>
        <trans-unit id="d18094121d8fef23801c2bb958a4c8a41f41a906" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;-&lt;/strong&gt;(other : UInt64) : self</source>
          <target state="translated">&lt;strong&gt;# &amp;amp; -&lt;/strong&gt; (другое: UInt64): self</target>
        </trans-unit>
        <trans-unit id="c68a90940214de43d3848c74771f06044c9fde1e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;-&lt;/strong&gt;(other : UInt8) : self</source>
          <target state="translated">&lt;strong&gt;# &amp;amp; -&lt;/strong&gt; (другое: UInt8): self</target>
        </trans-unit>
        <trans-unit id="ea4d140351f3f8e5b05949e74bb602142be1eed1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;-&lt;/strong&gt;(other) : BigInt</source>
          <target state="translated">&lt;strong&gt;# &amp;amp; -&lt;/strong&gt; (другие): BigInt</target>
        </trans-unit>
        <trans-unit id="c4a35dbe43c05377695176bd05b6287333d179a9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;&lt;/strong&gt;(other : Array(U)) forall U</source>
          <target state="translated">&lt;strong&gt;# &amp;amp;&lt;/strong&gt; (другое: Array (U)) для U</target>
        </trans-unit>
        <trans-unit id="4d3b04ad23620f59b29a2a3f7e5cae0cd0ca1b6b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;&lt;/strong&gt;(other : Bool) : Bool</source>
          <target state="translated">&lt;strong&gt;# &amp;amp;&lt;/strong&gt; (другое: Bool): Bool</target>
        </trans-unit>
        <trans-unit id="0f2258a4a1dd9485634c691339b0d47211b3c42d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;&lt;/strong&gt;(other : Int) : BigInt</source>
          <target state="translated">&lt;strong&gt;# &amp;amp;&lt;/strong&gt; (прочее: Int): BigInt</target>
        </trans-unit>
        <trans-unit id="704877ec224fe87f6d8736c252fa4bdb70d45843" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;&lt;/strong&gt;(other : Int128) : self</source>
          <target state="translated">&lt;strong&gt;# &amp;amp;&lt;/strong&gt; (прочее: Int128): self</target>
        </trans-unit>
        <trans-unit id="35234c01e335dda39c8a9b0462f68203383fff01" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;&lt;/strong&gt;(other : Int16) : self</source>
          <target state="translated">&lt;strong&gt;# &amp;amp;&lt;/strong&gt; (прочее: Int16): self</target>
        </trans-unit>
        <trans-unit id="72b7f46d2e500b41a2fbfce3a483654d8f9786ac" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;&lt;/strong&gt;(other : Int32) : self</source>
          <target state="translated">&lt;strong&gt;# &amp;amp;&lt;/strong&gt; (прочее: Int32): self</target>
        </trans-unit>
        <trans-unit id="43ce191c188dbec5e16248102c6ec24b03af4bad" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;&lt;/strong&gt;(other : Int64) : self</source>
          <target state="translated">&lt;strong&gt;# &amp;amp;&lt;/strong&gt; (другое: Int64): self</target>
        </trans-unit>
        <trans-unit id="6dfab307408f9bd0a156ea76c9032cf2977863b7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;&lt;/strong&gt;(other : Int8) : self</source>
          <target state="translated">&lt;strong&gt;# &amp;amp;&lt;/strong&gt; (другое: Int8): self</target>
        </trans-unit>
        <trans-unit id="bcb80f431afc39702eeb69ecf9dded7a954cf49a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;&lt;/strong&gt;(other : NumberLiteral) : NumberLiteral</source>
          <target state="translated">&lt;strong&gt;# &amp;amp;&lt;/strong&gt; (другое: NumberLiteral): NumberLiteral</target>
        </trans-unit>
        <trans-unit id="e3a355b18ae2f41bf6b2aaedaa83ca91c8b6db7d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;&lt;/strong&gt;(other : Set)</source>
          <target state="translated">&lt;strong&gt;# &amp;amp;&lt;/strong&gt; (другое: Установить)</target>
        </trans-unit>
        <trans-unit id="c3dd8723fe29937f358f4432abeb900d5782477d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;&lt;/strong&gt;(other : UInt128) : self</source>
          <target state="translated">&lt;strong&gt;# &amp;amp;&lt;/strong&gt; (прочее: UInt128): self</target>
        </trans-unit>
        <trans-unit id="7cdc3857c50aea51e1327d2e3ff6516957612343" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;&lt;/strong&gt;(other : UInt16) : self</source>
          <target state="translated">&lt;strong&gt;# &amp;amp;&lt;/strong&gt; (другое: UInt16): self</target>
        </trans-unit>
        <trans-unit id="80adca1719197a1e223b4033ba7c37872d1a30d8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;&lt;/strong&gt;(other : UInt32) : self</source>
          <target state="translated">&lt;strong&gt;# &amp;amp;&lt;/strong&gt; (прочее: UInt32): self</target>
        </trans-unit>
        <trans-unit id="b9584d49238496b5ef16046aa801e34e301345fe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;&lt;/strong&gt;(other : UInt64) : self</source>
          <target state="translated">&lt;strong&gt;# &amp;amp;&lt;/strong&gt; (прочее: UInt64): self</target>
        </trans-unit>
        <trans-unit id="f3d7e537bd3ac527438ef0c40349735f2523debf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;&lt;/strong&gt;(other : UInt8) : self</source>
          <target state="translated">&lt;strong&gt;# &amp;amp;&lt;/strong&gt; (другое: UInt8): self</target>
        </trans-unit>
        <trans-unit id="eb68f1b73bd111c592e8326f5b16397972500744" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;amp;&lt;/strong&gt;(other : self)</source>
          <target state="translated">&lt;strong&gt;# &amp;amp;&lt;/strong&gt; (другое: self)</target>
        </trans-unit>
        <trans-unit id="4e54f1e5e4a0932241079b30a256c4f5ff33f068" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;gt;&amp;gt;&lt;/strong&gt;(count : Int)</source>
          <target state="translated">&lt;strong&gt;# &amp;gt;&amp;gt;&lt;/strong&gt; (количество: Int)</target>
        </trans-unit>
        <trans-unit id="b2bb4021de72b8af886ca7fe941751eee6b1f1c6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;gt;&amp;gt;&lt;/strong&gt;(other : Int)</source>
          <target state="translated">&lt;strong&gt;# &amp;gt;&amp;gt;&lt;/strong&gt; (другое: Int)</target>
        </trans-unit>
        <trans-unit id="abbd71dc0031ef0033edc17173f43dc5edac880a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;gt;&amp;gt;&lt;/strong&gt;(other : Int) : BigInt</source>
          <target state="translated">&lt;strong&gt;# &amp;gt;&amp;gt;&lt;/strong&gt; (другое: Int): BigInt</target>
        </trans-unit>
        <trans-unit id="2a58378603fd127fef695a3bc8cb79f03150fd63" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;gt;&amp;gt;&lt;/strong&gt;(other : NumberLiteral) : NumberLiteral</source>
          <target state="translated">&lt;strong&gt;# &amp;gt;&amp;gt;&lt;/strong&gt; (другое: NumberLiteral): NumberLiteral</target>
        </trans-unit>
        <trans-unit id="a57bf05dfc3ee5c27041049adfcf0749a9005ef5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;gt;&lt;/strong&gt;(other : Char) : Bool</source>
          <target state="translated">&lt;strong&gt;#&amp;gt;&lt;/strong&gt; (другое: Char): Bool</target>
        </trans-unit>
        <trans-unit id="1d24e2ccc57fb7878ec042d3dcb77228ae4bd6ce" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;gt;&lt;/strong&gt;(other : Float32) : Bool</source>
          <target state="translated">&lt;strong&gt;#&amp;gt;&lt;/strong&gt; (другое: Float32): Bool</target>
        </trans-unit>
        <trans-unit id="14576bf6b566ff3f7a2d67024a398ef51ddb8231" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;gt;&lt;/strong&gt;(other : Float64) : Bool</source>
          <target state="translated">&lt;strong&gt;#&amp;gt;&lt;/strong&gt; (другое: Float64): Bool</target>
        </trans-unit>
        <trans-unit id="187b02b32b6c303e433ef4a964562a23e296b739" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;gt;&lt;/strong&gt;(other : Int128) : Bool</source>
          <target state="translated">&lt;strong&gt;#&amp;gt;&lt;/strong&gt; (другое: Int128): Bool</target>
        </trans-unit>
        <trans-unit id="a72c2cdabe021251d447c0609b4f9660f0bea9c3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;gt;&lt;/strong&gt;(other : Int16) : Bool</source>
          <target state="translated">&lt;strong&gt;#&amp;gt;&lt;/strong&gt; (прочее: Int16): Bool</target>
        </trans-unit>
        <trans-unit id="d43985ab07e4bd435acd2dba9afcfbb696fa4fc2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;gt;&lt;/strong&gt;(other : Int32) : Bool</source>
          <target state="translated">&lt;strong&gt;#&amp;gt;&lt;/strong&gt; (прочее: Int32): Bool</target>
        </trans-unit>
        <trans-unit id="7e32e30de1d1a8087c14bd45cd2fb38bd4b95f82" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;gt;&lt;/strong&gt;(other : Int64) : Bool</source>
          <target state="translated">&lt;strong&gt;#&amp;gt;&lt;/strong&gt; (прочее: Int64): Bool</target>
        </trans-unit>
        <trans-unit id="b3e16d8374d5ea748ebc11db685490409cd7dcbc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;gt;&lt;/strong&gt;(other : Int8) : Bool</source>
          <target state="translated">&lt;strong&gt;#&amp;gt;&lt;/strong&gt; (другое: Int8): Bool</target>
        </trans-unit>
        <trans-unit id="a3f08d0e3b22571acf26c5acd67b5c2f9d6f5387" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;gt;&lt;/strong&gt;(other : NumberLiteral) : BoolLiteral</source>
          <target state="translated">&lt;strong&gt;#&amp;gt;&lt;/strong&gt; (другое: NumberLiteral): BoolLiteral</target>
        </trans-unit>
        <trans-unit id="9071b6d81047bf21a39cfb430ea7d78d27ad843d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;gt;&lt;/strong&gt;(other : StringLiteral | MacroId) : BoolLiteral</source>
          <target state="translated">&lt;strong&gt;#&amp;gt;&lt;/strong&gt; (прочее: StringLiteral | MacroId): BoolLiteral</target>
        </trans-unit>
        <trans-unit id="78fcb15296d780015046fe13381223f58b330868" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;gt;&lt;/strong&gt;(other : T)</source>
          <target state="translated">&lt;strong&gt;#&amp;gt;&lt;/strong&gt; (другое: T)</target>
        </trans-unit>
        <trans-unit id="0c1b0af42bf7f4b0c4417ed5ac16c5c8fb4cb89b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;gt;&lt;/strong&gt;(other : T.class) forall T</source>
          <target state="translated">&lt;strong&gt;#&amp;gt;&lt;/strong&gt; (другое: T.class) для T</target>
        </trans-unit>
        <trans-unit id="6813b82f1564644fb6618a39260bf62aade2b311" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;gt;&lt;/strong&gt;(other : TypeNode) : BoolLiteral</source>
          <target state="translated">&lt;strong&gt;#&amp;gt;&lt;/strong&gt; (другое: TypeNode): BoolLiteral</target>
        </trans-unit>
        <trans-unit id="ea6f8d7829283c5001cccc61f3bfab7e1f2a3f94" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;gt;&lt;/strong&gt;(other : UInt128) : Bool</source>
          <target state="translated">&lt;strong&gt;#&amp;gt;&lt;/strong&gt; (другое: UInt128): Bool</target>
        </trans-unit>
        <trans-unit id="f6e0f42e97606e7c1b3b758d92bed9c8c285770e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;gt;&lt;/strong&gt;(other : UInt16) : Bool</source>
          <target state="translated">&lt;strong&gt;#&amp;gt;&lt;/strong&gt; (другое: UInt16): Bool</target>
        </trans-unit>
        <trans-unit id="235a898e53e76091e94a6c1e072e527f47492e78" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;gt;&lt;/strong&gt;(other : UInt32) : Bool</source>
          <target state="translated">&lt;strong&gt;#&amp;gt;&lt;/strong&gt; (прочее: UInt32): Bool</target>
        </trans-unit>
        <trans-unit id="4f86fdd05a9f1fa2857b26366e7852f2bee4e4dc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;gt;&lt;/strong&gt;(other : UInt64) : Bool</source>
          <target state="translated">&lt;strong&gt;#&amp;gt;&lt;/strong&gt; (другое: UInt64): Bool</target>
        </trans-unit>
        <trans-unit id="7ddf4ea6b1a5029822a001e61f56073ca5ce79c3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;gt;&lt;/strong&gt;(other : UInt8) : Bool</source>
          <target state="translated">&lt;strong&gt;#&amp;gt;&lt;/strong&gt; (другое: UInt8): Bool</target>
        </trans-unit>
        <trans-unit id="80e2ce4fedf7d90a5c0267e92649d201d140a300" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;gt;=&lt;/strong&gt;(other : Char) : Bool</source>
          <target state="translated">&lt;strong&gt;#&amp;gt; =&lt;/strong&gt; (другое: Char): Bool</target>
        </trans-unit>
        <trans-unit id="1c721a8579a4a4f8ce37a19fa6349a934bec4e09" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;gt;=&lt;/strong&gt;(other : Float32) : Bool</source>
          <target state="translated">&lt;strong&gt;#&amp;gt; =&lt;/strong&gt; (другое: Float32): Bool</target>
        </trans-unit>
        <trans-unit id="0b5d82196ab443c6be363f645f955638f608cbde" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;gt;=&lt;/strong&gt;(other : Float64) : Bool</source>
          <target state="translated">&lt;strong&gt;#&amp;gt; =&lt;/strong&gt; (другое: Float64): Bool</target>
        </trans-unit>
        <trans-unit id="95f16e9a91909095bb0bfb88d70f86f5ca792817" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;gt;=&lt;/strong&gt;(other : Int128) : Bool</source>
          <target state="translated">&lt;strong&gt;#&amp;gt; =&lt;/strong&gt; (другое: Int128): Bool</target>
        </trans-unit>
        <trans-unit id="0e508476ada4fde27fb9eb6042326cde460a8295" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;gt;=&lt;/strong&gt;(other : Int16) : Bool</source>
          <target state="translated">&lt;strong&gt;#&amp;gt; =&lt;/strong&gt; (другое: Int16): Bool</target>
        </trans-unit>
        <trans-unit id="82d4f99342b95bce809541674599b0c7b8c6f67f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;gt;=&lt;/strong&gt;(other : Int32) : Bool</source>
          <target state="translated">&lt;strong&gt;#&amp;gt; =&lt;/strong&gt; (другое: Int32): Bool</target>
        </trans-unit>
        <trans-unit id="9840cfd32f588ca165b3ea11f2765f183afd11b4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;gt;=&lt;/strong&gt;(other : Int64) : Bool</source>
          <target state="translated">&lt;strong&gt;#&amp;gt; =&lt;/strong&gt; (другое: Int64): Bool</target>
        </trans-unit>
        <trans-unit id="b84f0b35021ace06507008324d2acf74ab87764f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;gt;=&lt;/strong&gt;(other : Int8) : Bool</source>
          <target state="translated">&lt;strong&gt;#&amp;gt; =&lt;/strong&gt; (другое: Int8): Bool</target>
        </trans-unit>
        <trans-unit id="ea3a8ea13b277ca0f28c55a692abdf87b7ce3f7f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;gt;=&lt;/strong&gt;(other : NumberLiteral) : BoolLiteral</source>
          <target state="translated">&lt;strong&gt;#&amp;gt; =&lt;/strong&gt; (другое: NumberLiteral): BoolLiteral</target>
        </trans-unit>
        <trans-unit id="ec2e7a5246de9a784d6a671490e7f1c3f50800b8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;gt;=&lt;/strong&gt;(other : T)</source>
          <target state="translated">&lt;strong&gt;#&amp;gt; =&lt;/strong&gt; (другое: T)</target>
        </trans-unit>
        <trans-unit id="9915ff18ba3d6678ec00e1a400cd19ffb479eda8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;gt;=&lt;/strong&gt;(other : T.class) forall T</source>
          <target state="translated">&lt;strong&gt;#&amp;gt; =&lt;/strong&gt; (другое: T.class) для T</target>
        </trans-unit>
        <trans-unit id="9fb01ae2a612f68151eda62582363f9065e58274" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;gt;=&lt;/strong&gt;(other : TypeNode) : BoolLiteral</source>
          <target state="translated">&lt;strong&gt;#&amp;gt; =&lt;/strong&gt; (другое: TypeNode): BoolLiteral</target>
        </trans-unit>
        <trans-unit id="7650ed846370578e767a25ff2affc6b997de729e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;gt;=&lt;/strong&gt;(other : UInt128) : Bool</source>
          <target state="translated">&lt;strong&gt;#&amp;gt; =&lt;/strong&gt; (other: UInt128): Bool</target>
        </trans-unit>
        <trans-unit id="f19704847670be809fb0d91fb187f3a35a854a71" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;gt;=&lt;/strong&gt;(other : UInt16) : Bool</source>
          <target state="translated">&lt;strong&gt;#&amp;gt; =&lt;/strong&gt; (other: UInt16): Bool</target>
        </trans-unit>
        <trans-unit id="f68d2cac5727e772fee001898bc730746bc71940" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;gt;=&lt;/strong&gt;(other : UInt32) : Bool</source>
          <target state="translated">&lt;strong&gt;#&amp;gt; =&lt;/strong&gt; (other: UInt32): Bool</target>
        </trans-unit>
        <trans-unit id="c6fcb78bded3ea39e2634d3fae7012af4eb2f579" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;gt;=&lt;/strong&gt;(other : UInt64) : Bool</source>
          <target state="translated">&lt;strong&gt;#&amp;gt; =&lt;/strong&gt; (other: UInt64): Bool</target>
        </trans-unit>
        <trans-unit id="90f4e2fd6da5bec80ac8f561488d25ffaad9b403" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;gt;=&lt;/strong&gt;(other : UInt8) : Bool</source>
          <target state="translated">&lt;strong&gt;#&amp;gt; =&lt;/strong&gt; (другое: UInt8): Bool</target>
        </trans-unit>
        <trans-unit id="6b91d775a069a6b92162cc41a6684f2229555e14" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;lt;&amp;lt;&lt;/strong&gt;(cookie : Cookie)</source>
          <target state="translated">&lt;strong&gt;# &amp;lt;&amp;lt;&lt;/strong&gt; (cookie: Cookie)</target>
        </trans-unit>
        <trans-unit id="23faec762dc27bb0400a6903dd2bd33be9ef54f6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;lt;&amp;lt;&lt;/strong&gt;(count : Int)</source>
          <target state="translated">&lt;strong&gt;# &amp;lt;&amp;lt;&lt;/strong&gt; (количество: Int)</target>
        </trans-unit>
        <trans-unit id="e3e8a81d8006189becd876cc3520cd7deeb8e4e8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;lt;&amp;lt;&lt;/strong&gt;(data)</source>
          <target state="translated">&lt;strong&gt;#&amp;lt;&amp;lt;&lt;/strong&gt;(data)</target>
        </trans-unit>
        <trans-unit id="64e6b930db3cb936f3b38a125db978916c5a8c8b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;lt;&amp;lt;&lt;/strong&gt;(node)</source>
          <target state="translated">&lt;strong&gt;#&amp;lt;&amp;lt;&lt;/strong&gt;(node)</target>
        </trans-unit>
        <trans-unit id="972ba14c6c20968c665d7fc82a1ed7f4e700bbdc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;lt;&amp;lt;&lt;/strong&gt;(obj) : self</source>
          <target state="translated">&lt;strong&gt;# &amp;lt;&amp;lt;&lt;/strong&gt; (obj): self</target>
        </trans-unit>
        <trans-unit id="adc228674e05c8d62e97a333cd7d5e0045b2b536" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;lt;&amp;lt;&lt;/strong&gt;(object : T)</source>
          <target state="translated">&lt;strong&gt;# &amp;lt;&amp;lt;&lt;/strong&gt; (объект: T)</target>
        </trans-unit>
        <trans-unit id="77809e26c818206af1caea5965d732567aefbb15" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;lt;&amp;lt;&lt;/strong&gt;(other : Int)</source>
          <target state="translated">&lt;strong&gt;# &amp;lt;&amp;lt;&lt;/strong&gt; (другое: Int)</target>
        </trans-unit>
        <trans-unit id="7053d6435c8444a6a8571b2b76a7efaf7b5ce5d1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;lt;&amp;lt;&lt;/strong&gt;(other : Int) : BigInt</source>
          <target state="translated">&lt;strong&gt;# &amp;lt;&amp;lt;&lt;/strong&gt; (прочее: Int): BigInt</target>
        </trans-unit>
        <trans-unit id="1aa3b061025bfc9163774ae3c32229f62fd3eb75" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;lt;&amp;lt;&lt;/strong&gt;(other : NumberLiteral) : NumberLiteral</source>
          <target state="translated">&lt;strong&gt;# &amp;lt;&amp;lt;&lt;/strong&gt; (другое: NumberLiteral): NumberLiteral</target>
        </trans-unit>
        <trans-unit id="fac7a10b7a863eeef5b560227f28dbc41882ebdb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;lt;&amp;lt;&lt;/strong&gt;(value : ASTNode) : ArrayLiteral</source>
          <target state="translated">&lt;strong&gt;# &amp;lt;&amp;lt;&lt;/strong&gt; (значение: ASTNode): ArrayLiteral</target>
        </trans-unit>
        <trans-unit id="8437a1469c2ddd7271481eb22eb7a278ab6cf0b2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;lt;&amp;lt;&lt;/strong&gt;(value : Nil | Bool | Number)</source>
          <target state="translated">&lt;strong&gt;# &amp;lt;&amp;lt;&lt;/strong&gt; (значение: Nil | Bool | Number)</target>
        </trans-unit>
        <trans-unit id="a1cee60d4fdd55de8715fe276de4b055b9fd5935" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;lt;&amp;lt;&lt;/strong&gt;(value : String)</source>
          <target state="translated">&lt;strong&gt;# &amp;lt;&amp;lt;&lt;/strong&gt; (значение: строка)</target>
        </trans-unit>
        <trans-unit id="5ddfa5c107b5093d3d87859767af67d20eaaa961" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;lt;&amp;lt;&lt;/strong&gt;(value : T)</source>
          <target state="translated">&lt;strong&gt;# &amp;lt;&amp;lt;&lt;/strong&gt; (значение: T)</target>
        </trans-unit>
        <trans-unit id="52119728b1aeefc3fd37bb9e2ff25660f46f9ac9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;lt;&amp;lt;&lt;/strong&gt;(value)</source>
          <target state="translated">&lt;strong&gt;#&amp;lt;&amp;lt;&lt;/strong&gt;(value)</target>
        </trans-unit>
        <trans-unit id="1897047dc969500f8ddb0a5b5eaf47d52f941ea8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;lt;&lt;/strong&gt;(other : Char) : Bool</source>
          <target state="translated">&lt;strong&gt;# &amp;lt;&lt;/strong&gt; (другое: Char): Bool</target>
        </trans-unit>
        <trans-unit id="fe982d12929219182fb0cd86c786b908edc428d5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;lt;&lt;/strong&gt;(other : Float32) : Bool</source>
          <target state="translated">&lt;strong&gt;# &amp;lt;&lt;/strong&gt; (прочее: Float32): Bool</target>
        </trans-unit>
        <trans-unit id="31a36141b1c3d11b08309099ec20a9fd1545dffb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;lt;&lt;/strong&gt;(other : Float64) : Bool</source>
          <target state="translated">&lt;strong&gt;# &amp;lt;&lt;/strong&gt; (прочее: Float64): Bool</target>
        </trans-unit>
        <trans-unit id="0ced733e29fa3a245341f1c2fb4fdfd37553433c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;lt;&lt;/strong&gt;(other : Int128) : Bool</source>
          <target state="translated">&lt;strong&gt;# &amp;lt;&lt;/strong&gt; (прочее: Int128): Bool</target>
        </trans-unit>
        <trans-unit id="3300428bf012dce02d950cc59e3c5f889fb503d1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;lt;&lt;/strong&gt;(other : Int16) : Bool</source>
          <target state="translated">&lt;strong&gt;# &amp;lt;&lt;/strong&gt; (прочее: Int16): Bool</target>
        </trans-unit>
        <trans-unit id="d201b50217969e214a535fd4772c85032b555b27" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;lt;&lt;/strong&gt;(other : Int32) : Bool</source>
          <target state="translated">&lt;strong&gt;# &amp;lt;&lt;/strong&gt; (прочее: Int32): Bool</target>
        </trans-unit>
        <trans-unit id="dfb63a7da1ba492af50f6c8e88599a97be00bf52" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;lt;&lt;/strong&gt;(other : Int64) : Bool</source>
          <target state="translated">&lt;strong&gt;# &amp;lt;&lt;/strong&gt; (прочее: Int64): Bool</target>
        </trans-unit>
        <trans-unit id="1c3141b3f24d0f7c1f71db080283e2dd5ed222de" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;lt;&lt;/strong&gt;(other : Int8) : Bool</source>
          <target state="translated">&lt;strong&gt;# &amp;lt;&lt;/strong&gt; (прочее: Int8): Bool</target>
        </trans-unit>
        <trans-unit id="8f8a10a5705fbb525dd6230f955d313956c2bbc7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;lt;&lt;/strong&gt;(other : NumberLiteral) : BoolLiteral</source>
          <target state="translated">&lt;strong&gt;# &amp;lt;&lt;/strong&gt; (другие: NumberLiteral): BoolLiteral</target>
        </trans-unit>
        <trans-unit id="fd6df2d054ad90cb5c7cb113ba963526f6b97008" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;lt;&lt;/strong&gt;(other : StringLiteral | MacroId) : BoolLiteral</source>
          <target state="translated">&lt;strong&gt;# &amp;lt;&lt;/strong&gt; (прочее: StringLiteral | MacroId): BoolLiteral</target>
        </trans-unit>
        <trans-unit id="ab6b57321a4a9fcd88cbe92540e5088492a1384a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;lt;&lt;/strong&gt;(other : T)</source>
          <target state="translated">&lt;strong&gt;# &amp;lt;&lt;/strong&gt; (другое: T)</target>
        </trans-unit>
        <trans-unit id="09a6215d0d2b1acb43de0c7292e1af6f78fc2cad" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;lt;&lt;/strong&gt;(other : T.class) : Bool forall T</source>
          <target state="translated">&lt;strong&gt;# &amp;lt;&lt;/strong&gt; (другое: T.class): Bool forall T</target>
        </trans-unit>
        <trans-unit id="fd5ca3eed496a9a61f505036ab2123d63629ecfb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;lt;&lt;/strong&gt;(other : TypeNode) : BoolLiteral</source>
          <target state="translated">&lt;strong&gt;# &amp;lt;&lt;/strong&gt; (other: TypeNode): BoolLiteral</target>
        </trans-unit>
        <trans-unit id="1c62ab00a460e30a3824936da1f6598aa15f9c7a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;lt;&lt;/strong&gt;(other : UInt128) : Bool</source>
          <target state="translated">&lt;strong&gt;# &amp;lt;&lt;/strong&gt; (прочее: UInt128): Bool</target>
        </trans-unit>
        <trans-unit id="6f5160915dafcc26aa773e7690aa13702b88b530" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;lt;&lt;/strong&gt;(other : UInt16) : Bool</source>
          <target state="translated">&lt;strong&gt;# &amp;lt;&lt;/strong&gt; (прочее: UInt16): Bool</target>
        </trans-unit>
        <trans-unit id="23301336101c2d53123101ebb48a5c1cabaf5c96" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;lt;&lt;/strong&gt;(other : UInt32) : Bool</source>
          <target state="translated">&lt;strong&gt;# &amp;lt;&lt;/strong&gt; (прочее: UInt32): Bool</target>
        </trans-unit>
        <trans-unit id="f269517187a72ee6885e711de9205db229f36b15" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;lt;&lt;/strong&gt;(other : UInt64) : Bool</source>
          <target state="translated">&lt;strong&gt;# &amp;lt;&lt;/strong&gt; (прочее: UInt64): Bool</target>
        </trans-unit>
        <trans-unit id="dbd3351d31e265ef511809b06d3aaf6197ba4175" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;lt;&lt;/strong&gt;(other : UInt8) : Bool</source>
          <target state="translated">&lt;strong&gt;# &amp;lt;&lt;/strong&gt; (прочее: UInt8): Bool</target>
        </trans-unit>
        <trans-unit id="b755eb6a43e337f9a6b5ec6068f603671ce45c4e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;lt;=&amp;gt;&lt;/strong&gt;(other : Array)</source>
          <target state="translated">&lt;strong&gt;# &amp;lt;=&amp;gt;&lt;/strong&gt; (другое: массив)</target>
        </trans-unit>
        <trans-unit id="d8d9bb9f5bc8534956350d7ef01f31541e19e9e9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;lt;=&amp;gt;&lt;/strong&gt;(other : BigDecimal)</source>
          <target state="translated">&lt;strong&gt;# &amp;lt;=&amp;gt;&lt;/strong&gt; (другое: BigDecimal)</target>
        </trans-unit>
        <trans-unit id="0f9089d37439ff1d874101ea14374add1420ab2a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;lt;=&amp;gt;&lt;/strong&gt;(other : BigDecimal) : Int32</source>
          <target state="translated">&lt;strong&gt;# &amp;lt;=&amp;gt;&lt;/strong&gt; (другое: BigDecimal): Int32</target>
        </trans-unit>
        <trans-unit id="333995c30fa044537d60670809a2aadd47397ad4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;lt;=&amp;gt;&lt;/strong&gt;(other : BigFloat)</source>
          <target state="translated">&lt;strong&gt;#&lt;/strong&gt; &amp;lt;=&amp;gt; (другое: BigFloat)</target>
        </trans-unit>
        <trans-unit id="8bfee7e64b5c730401b09528706642d8e9b8120e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;lt;=&amp;gt;&lt;/strong&gt;(other : BigInt)</source>
          <target state="translated">&lt;strong&gt;#&lt;/strong&gt; &amp;lt;=&amp;gt; (другое: BigInt)</target>
        </trans-unit>
        <trans-unit id="040ca957ad297d3436e6156e10d6d7dc394d1cc7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;lt;=&amp;gt;&lt;/strong&gt;(other : BigRational)</source>
          <target state="translated">&lt;strong&gt;#&lt;/strong&gt; &amp;lt;=&amp;gt; (другое: BigRational)</target>
        </trans-unit>
        <trans-unit id="2a3ca99c8be46a004b8d5d311b583ef99a4c1a2b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;lt;=&amp;gt;&lt;/strong&gt;(other : Char)</source>
          <target state="translated">&lt;strong&gt;# &amp;lt;=&amp;gt;&lt;/strong&gt; (другое: Char)</target>
        </trans-unit>
        <trans-unit id="2f6a89d170085aafd3a1eaaa9895ffc2aa31ee86" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;lt;=&amp;gt;&lt;/strong&gt;(other : Float)</source>
          <target state="translated">&lt;strong&gt;# &amp;lt;=&amp;gt;&lt;/strong&gt; (другое: Float)</target>
        </trans-unit>
        <trans-unit id="990c722b5de18c04b8ee74b14efb740dd0f9d574" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;lt;=&amp;gt;&lt;/strong&gt;(other : Float32 | Float64)</source>
          <target state="translated">&lt;strong&gt;#&lt;/strong&gt; &amp;lt;=&amp;gt; (другое: Float32 | Float64)</target>
        </trans-unit>
        <trans-unit id="508b44d9a5983ff70a628b1526529e28b9575e37" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;lt;=&amp;gt;&lt;/strong&gt;(other : Int | Float | BigRational)</source>
          <target state="translated">&lt;strong&gt;#&lt;/strong&gt; &amp;lt;=&amp;gt; (прочее: Int | Float | BigRational)</target>
        </trans-unit>
        <trans-unit id="376ba53c79abe0385cb57cd19554d189b924a678" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;lt;=&amp;gt;&lt;/strong&gt;(other : Int)</source>
          <target state="translated">&lt;strong&gt;# &amp;lt;=&amp;gt;&lt;/strong&gt; (другое: Int)</target>
        </trans-unit>
        <trans-unit id="f43b928d5003428ae761017d478a72b0043be290" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;lt;=&amp;gt;&lt;/strong&gt;(other : Int) : Int32</source>
          <target state="translated">&lt;strong&gt;# &amp;lt;=&amp;gt;&lt;/strong&gt; (другое: Int): Int32</target>
        </trans-unit>
        <trans-unit id="9e5e650f2e40982c2d7a41f0d3366fd1fa82acd7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;lt;=&amp;gt;&lt;/strong&gt;(other : Int::Signed)</source>
          <target state="translated">&lt;strong&gt;# &amp;lt;=&amp;gt;&lt;/strong&gt; (другое: Int :: Signed)</target>
        </trans-unit>
        <trans-unit id="9dd46f5dc4460d1c16cb61c65631aa806e82b8f3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;lt;=&amp;gt;&lt;/strong&gt;(other : Int::Unsigned)</source>
          <target state="translated">&lt;strong&gt;# &amp;lt;=&amp;gt;&lt;/strong&gt; (другое: Int :: Unsigned)</target>
        </trans-unit>
        <trans-unit id="15e3e780e7d9c30861c583051a5c935cfa99a673" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;lt;=&amp;gt;&lt;/strong&gt;(other : Number)</source>
          <target state="translated">&lt;strong&gt;# &amp;lt;=&amp;gt;&lt;/strong&gt; (другое: номер)</target>
        </trans-unit>
        <trans-unit id="95c53a26125b1585e8fcd9bd130d432aacc9ad39" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;lt;=&amp;gt;&lt;/strong&gt;(other : NumberLiteral) : NumberLiteral</source>
          <target state="translated">&lt;strong&gt;#&lt;/strong&gt; &amp;lt;=&amp;gt; (другое: NumberLiteral): NumberLiteral</target>
        </trans-unit>
        <trans-unit id="c96f31aa5604d096638ffba99e07c079720e3656" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;lt;=&amp;gt;&lt;/strong&gt;(other : Path)</source>
          <target state="translated">&lt;strong&gt;# &amp;lt;=&amp;gt;&lt;/strong&gt; (другое: путь)</target>
        </trans-unit>
        <trans-unit id="46681872c6c8761e0bab14aa093ff532b0e7a4d6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;lt;=&amp;gt;&lt;/strong&gt;(other : Slice(U)) forall U</source>
          <target state="translated">&lt;strong&gt;# &amp;lt;=&amp;gt;&lt;/strong&gt; (другое: Slice (U)) для U</target>
        </trans-unit>
        <trans-unit id="6d8b7fd042a18914cd207340973f8e7ce7502a2c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;lt;=&amp;gt;&lt;/strong&gt;(other : Symbol)</source>
          <target state="translated">&lt;strong&gt;# &amp;lt;=&amp;gt;&lt;/strong&gt; (другое: символ)</target>
        </trans-unit>
        <trans-unit id="c66742447a212185e16b9d7a34d76516f51cef7d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;lt;=&amp;gt;&lt;/strong&gt;(other : T)</source>
          <target state="translated">&lt;strong&gt;# &amp;lt;=&amp;gt;&lt;/strong&gt; (другое: T)</target>
        </trans-unit>
        <trans-unit id="d364636e2a1d42de230fa148b812547b8b172fe3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;lt;=&amp;gt;&lt;/strong&gt;(other : Time) : Int32</source>
          <target state="translated">&lt;strong&gt;# &amp;lt;=&amp;gt;&lt;/strong&gt; (другое: время): Int32</target>
        </trans-unit>
        <trans-unit id="e83d41375a956939e16b3dd793f90ca02bf21f69" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;lt;=&amp;gt;&lt;/strong&gt;(other : Tuple)</source>
          <target state="translated">&lt;strong&gt;# &amp;lt;=&amp;gt;&lt;/strong&gt; (другое: кортеж)</target>
        </trans-unit>
        <trans-unit id="db13cac3d9084b2e0754826cecb473fe246d7457" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;lt;=&amp;gt;&lt;/strong&gt;(other : self)</source>
          <target state="translated">&lt;strong&gt;# &amp;lt;=&amp;gt;&lt;/strong&gt; (другое: self)</target>
        </trans-unit>
        <trans-unit id="e65c418341dacc8c3fe7a2090baf0346002d1e58" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;lt;=&amp;gt;&lt;/strong&gt;(other : self) : Int32</source>
          <target state="translated">&lt;strong&gt;# &amp;lt;=&amp;gt;&lt;/strong&gt; (другое: self): Int32</target>
        </trans-unit>
        <trans-unit id="d8d2af4022e8c6c95a4ce207f8216edef3366dd9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;lt;=&amp;gt;&lt;/strong&gt;(other) : Int32?</source>
          <target state="translated">&lt;strong&gt;# &amp;lt;=&amp;gt;&lt;/strong&gt; (другое): Int32?</target>
        </trans-unit>
        <trans-unit id="aae6109a978c0c8b68e6f8ef177d0fe771b2421e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;lt;=&lt;/strong&gt;(other : Char) : Bool</source>
          <target state="translated">&lt;strong&gt;# &amp;lt;=&lt;/strong&gt; (другое: Char): Bool</target>
        </trans-unit>
        <trans-unit id="938a402b219f33282175cf750c5705d75d48a5a6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;lt;=&lt;/strong&gt;(other : Float32) : Bool</source>
          <target state="translated">&lt;strong&gt;# &amp;lt;=&lt;/strong&gt; (другое: Float32): Bool</target>
        </trans-unit>
        <trans-unit id="f60a24243036defdb99d11a709b53bc8c3f7faec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;lt;=&lt;/strong&gt;(other : Float64) : Bool</source>
          <target state="translated">&lt;strong&gt;# &amp;lt;=&lt;/strong&gt; (другое: Float64): Bool</target>
        </trans-unit>
        <trans-unit id="184c5d4df80ed231ccba6108b42b73ea4c1ca514" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;lt;=&lt;/strong&gt;(other : Int128) : Bool</source>
          <target state="translated">&lt;strong&gt;# &amp;lt;=&lt;/strong&gt; (другое: Int128): Bool</target>
        </trans-unit>
        <trans-unit id="015980dda84af80ab9dcecd9ee31045eeb6292b0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;lt;=&lt;/strong&gt;(other : Int16) : Bool</source>
          <target state="translated">&lt;strong&gt;# &amp;lt;=&lt;/strong&gt; (прочее: Int16): Bool</target>
        </trans-unit>
        <trans-unit id="1fb03f43734d55f6828ad5e20eb2631dc20fb08a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;lt;=&lt;/strong&gt;(other : Int32) : Bool</source>
          <target state="translated">&lt;strong&gt;# &amp;lt;=&lt;/strong&gt; (прочее: Int32): Bool</target>
        </trans-unit>
        <trans-unit id="8c345ce419f6db186205225fb3528cd7b5ad984d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;lt;=&lt;/strong&gt;(other : Int64) : Bool</source>
          <target state="translated">&lt;strong&gt;# &amp;lt;=&lt;/strong&gt; (прочее: Int64): Bool</target>
        </trans-unit>
        <trans-unit id="c5985e1a4d150a0b33946e0027d12262d0faf4d9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;lt;=&lt;/strong&gt;(other : Int8) : Bool</source>
          <target state="translated">&lt;strong&gt;# &amp;lt;=&lt;/strong&gt; (другое: Int8): Bool</target>
        </trans-unit>
        <trans-unit id="eb84535264e4728433e8f2285e513c8188d6305c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;lt;=&lt;/strong&gt;(other : NumberLiteral) : BoolLiteral</source>
          <target state="translated">&lt;strong&gt;# &amp;lt;=&lt;/strong&gt; (другое: NumberLiteral): BoolLiteral</target>
        </trans-unit>
        <trans-unit id="b5cbb49df1147c9af6a484b3a843f3b37c350fbc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;lt;=&lt;/strong&gt;(other : T)</source>
          <target state="translated">&lt;strong&gt;# &amp;lt;=&lt;/strong&gt; (другое: T)</target>
        </trans-unit>
        <trans-unit id="6c25bc9fe3be56945fb303b030114ea2756d30e3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;lt;=&lt;/strong&gt;(other : T.class) : Bool forall T</source>
          <target state="translated">&lt;strong&gt;# &amp;lt;=&lt;/strong&gt; (другое: T.class): Bool forall T</target>
        </trans-unit>
        <trans-unit id="942880dd0b9d305d70f5d24d53b830a598297162" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;lt;=&lt;/strong&gt;(other : TypeNode) : BoolLiteral</source>
          <target state="translated">&lt;strong&gt;# &amp;lt;=&lt;/strong&gt; (other: TypeNode): BoolLiteral</target>
        </trans-unit>
        <trans-unit id="d4ba47369bb72323c46927e276544169b4b114a7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;lt;=&lt;/strong&gt;(other : UInt128) : Bool</source>
          <target state="translated">&lt;strong&gt;# &amp;lt;=&lt;/strong&gt; (other: UInt128): Bool</target>
        </trans-unit>
        <trans-unit id="4638727aab96aa1f9ca11e25510f390a6ac7cca2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;lt;=&lt;/strong&gt;(other : UInt16) : Bool</source>
          <target state="translated">&lt;strong&gt;# &amp;lt;=&lt;/strong&gt; (other: UInt16): Bool</target>
        </trans-unit>
        <trans-unit id="00d277c218d5889af04886fee69d0b4fbeae8911" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;lt;=&lt;/strong&gt;(other : UInt32) : Bool</source>
          <target state="translated">&lt;strong&gt;# &amp;lt;=&lt;/strong&gt; (other: UInt32): Bool</target>
        </trans-unit>
        <trans-unit id="97474ce098cb447046b87e3c6569b4c0c2c5117a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;lt;=&lt;/strong&gt;(other : UInt64) : Bool</source>
          <target state="translated">&lt;strong&gt;# &amp;lt;=&lt;/strong&gt; (other: UInt64): Bool</target>
        </trans-unit>
        <trans-unit id="edc58523f25bd71c44948475e9dc168764da1166" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#&amp;lt;=&lt;/strong&gt;(other : UInt8) : Bool</source>
          <target state="translated">&lt;strong&gt;# &amp;lt;=&lt;/strong&gt; (другое: UInt8): Bool</target>
        </trans-unit>
        <trans-unit id="2ff5cc8b14ab2e772749ce9c5f8042ce1151f36d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#**&lt;/strong&gt;(exponent : Float) : Float64</source>
          <target state="translated">&lt;strong&gt;# **&lt;/strong&gt; (экспонента: Float): Float64</target>
        </trans-unit>
        <trans-unit id="e9b7469801362d09a340af316b30288564f7b397" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#**&lt;/strong&gt;(exponent : Int) : self</source>
          <target state="translated">&lt;strong&gt;# **&lt;/strong&gt; (экспонента: Int): self</target>
        </trans-unit>
        <trans-unit id="dba0685f3738341fca9ae49ed25b0158f39060e7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#**&lt;/strong&gt;(other : Float32)</source>
          <target state="translated">&lt;strong&gt;# **&lt;/strong&gt; (другое: Float32)</target>
        </trans-unit>
        <trans-unit id="e80b6556421ca46c37a7dbcb94aea169ddb9c349" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#**&lt;/strong&gt;(other : Float64)</source>
          <target state="translated">&lt;strong&gt;# **&lt;/strong&gt; (другое: Float64)</target>
        </trans-unit>
        <trans-unit id="2e68bdf8073b7d19aa83d1875f6da45b2239ed1c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#**&lt;/strong&gt;(other : Int)</source>
          <target state="translated">&lt;strong&gt;# **&lt;/strong&gt; (другое: Int)</target>
        </trans-unit>
        <trans-unit id="9b3b140b3d2fe7a5687ba0b02adc703a056159f6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#**&lt;/strong&gt;(other : Int) : BigDecimal</source>
          <target state="translated">&lt;strong&gt;# **&lt;/strong&gt; (другое: Int): BigDecimal</target>
        </trans-unit>
        <trans-unit id="4a3b6c55406d41ff27aa889ca256baaf5cb3ac2e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#**&lt;/strong&gt;(other : Int) : BigInt</source>
          <target state="translated">&lt;strong&gt;# **&lt;/strong&gt; (другое: Int): BigInt</target>
        </trans-unit>
        <trans-unit id="f4cea46d169cea7cd972217671ecb5d841afbdf9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#**&lt;/strong&gt;(other : Int) : BigRational</source>
          <target state="translated">&lt;strong&gt;# **&lt;/strong&gt; (другое: Int): BigRational</target>
        </trans-unit>
        <trans-unit id="53d2cb65a9d76d82ff6415d4fa946d943eb8b88e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#**&lt;/strong&gt;(other : Int32)</source>
          <target state="translated">&lt;strong&gt;# **&lt;/strong&gt; (другое: Int32)</target>
        </trans-unit>
        <trans-unit id="877d857cf4b25a6a2011ac24fe0b6937ce06c6b4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#**&lt;/strong&gt;(other : NumberLiteral) : NumberLiteral</source>
          <target state="translated">&lt;strong&gt;# **&lt;/strong&gt; (другое: NumberLiteral): NumberLiteral</target>
        </trans-unit>
        <trans-unit id="7abffd6362d7c4b74b4bcb6f81a0a25a8d1b8511" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#**&lt;/strong&gt;(other)</source>
          <target state="translated">&lt;strong&gt;#**&lt;/strong&gt;(other)</target>
        </trans-unit>
        <trans-unit id="858c1de3755ba4dd3631417dd454f4781f23eb7d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#*&lt;/strong&gt;(number : Float) : Time::Span</source>
          <target state="translated">&lt;strong&gt;# *&lt;/strong&gt; (число: Float): время :: диапазон</target>
        </trans-unit>
        <trans-unit id="a90eaa98e1af39d189913af16ea64bbdec0d670d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#*&lt;/strong&gt;(number : Int) : Time::Span</source>
          <target state="translated">&lt;strong&gt;# *&lt;/strong&gt; (число: Int): время :: диапазон</target>
        </trans-unit>
        <trans-unit id="cf907ed3896252a59735de6f55cd1ffbe96e673f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#*&lt;/strong&gt;(other : BigDecimal)</source>
          <target state="translated">&lt;strong&gt;# *&lt;/strong&gt; (другое: BigDecimal)</target>
        </trans-unit>
        <trans-unit id="db9c51e9da3dc2178cf12a87122287700786b8a9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#*&lt;/strong&gt;(other : BigDecimal) : BigDecimal</source>
          <target state="translated">&lt;strong&gt;# *&lt;/strong&gt; (другое: BigDecimal): BigDecimal</target>
        </trans-unit>
        <trans-unit id="7d6a0045fe1add2309c58d1a1c35db99da86ec56" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#*&lt;/strong&gt;(other : BigFloat)</source>
          <target state="translated">&lt;strong&gt;# *&lt;/strong&gt; (другое: BigFloat)</target>
        </trans-unit>
        <trans-unit id="5251713b1cd917480007fee723a1fa9c5746ce2e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#*&lt;/strong&gt;(other : BigInt) : BigInt</source>
          <target state="translated">&lt;strong&gt;# *&lt;/strong&gt; (другое: BigInt): BigInt</target>
        </trans-unit>
        <trans-unit id="e91beaaeaaf802c319bfde3b1ca12cab8effd2b7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#*&lt;/strong&gt;(other : BigRational)</source>
          <target state="translated">&lt;strong&gt;# *&lt;/strong&gt; (другое: BigRational)</target>
        </trans-unit>
        <trans-unit id="8308caf92415493f536f946062307c4adb0d2bfb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#*&lt;/strong&gt;(other : Complex)</source>
          <target state="translated">&lt;strong&gt;# *&lt;/strong&gt; (другое: сложное)</target>
        </trans-unit>
        <trans-unit id="9395130c5e5aaf022ab0eba0e55fcb7d34f69107" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#*&lt;/strong&gt;(other : Float32) : Float32</source>
          <target state="translated">&lt;strong&gt;# *&lt;/strong&gt; (другое: Float32): Float32</target>
        </trans-unit>
        <trans-unit id="d6f9c8234b0c7d02e64b02b6cb844a613ce46ae0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#*&lt;/strong&gt;(other : Float32) : self</source>
          <target state="translated">&lt;strong&gt;# *&lt;/strong&gt; (другое: Float32): self</target>
        </trans-unit>
        <trans-unit id="ef28233442628a7224ff2115461ef21ab3b1cdb3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#*&lt;/strong&gt;(other : Float64) : Float64</source>
          <target state="translated">&lt;strong&gt;# *&lt;/strong&gt; (другое: Float64): Float64</target>
        </trans-unit>
        <trans-unit id="c3e5ffbff674bbc816266fc7af257d3278d11b2f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#*&lt;/strong&gt;(other : Float64) : self</source>
          <target state="translated">&lt;strong&gt;# *&lt;/strong&gt; (другое: Float64): self</target>
        </trans-unit>
        <trans-unit id="c48071075e3fd975df2541d20f9d074c6ac53e04" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#*&lt;/strong&gt;(other : Int)</source>
          <target state="translated">&lt;strong&gt;# *&lt;/strong&gt; (другое: Int)</target>
        </trans-unit>
        <trans-unit id="b516ae2fb81a042a0cae45255248384c114537ce" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#*&lt;/strong&gt;(other : Int) : BigInt</source>
          <target state="translated">&lt;strong&gt;# *&lt;/strong&gt; (другое: Int): BigInt</target>
        </trans-unit>
        <trans-unit id="bbdf48e0c7e9e990d183e3972cbb2c3c6f5ac338" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#*&lt;/strong&gt;(other : Int128) : self</source>
          <target state="translated">&lt;strong&gt;# *&lt;/strong&gt; (другое: Int128): self</target>
        </trans-unit>
        <trans-unit id="382e190df03455e924e7b23344ea79d5f501b576" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#*&lt;/strong&gt;(other : Int16) : self</source>
          <target state="translated">&lt;strong&gt;# *&lt;/strong&gt; (другое: Int16): self</target>
        </trans-unit>
        <trans-unit id="9e90671b6f66f06f5a49d3b7b46e61f19282dc7b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#*&lt;/strong&gt;(other : Int32) : self</source>
          <target state="translated">&lt;strong&gt;# *&lt;/strong&gt; (другое: Int32): self</target>
        </trans-unit>
        <trans-unit id="8df4e3a555611479e8e62ef70c420ec35ec0a4ae" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#*&lt;/strong&gt;(other : Int64) : self</source>
          <target state="translated">&lt;strong&gt;# *&lt;/strong&gt; (другое: Int64): self</target>
        </trans-unit>
        <trans-unit id="7ad3d8b6039283992f97b96f07c6c5d6bc21e5d2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#*&lt;/strong&gt;(other : Int8) : self</source>
          <target state="translated">&lt;strong&gt;# *&lt;/strong&gt; (другое: Int8): self</target>
        </trans-unit>
        <trans-unit id="028462a0a6596900e05488c749b8bdad5e66fcd0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#*&lt;/strong&gt;(other : LibGMP::IntPrimitiveSigned) : BigInt</source>
          <target state="translated">&lt;strong&gt;# *&lt;/strong&gt; (другое: LibGMP :: IntPrimitiveSigned): BigInt</target>
        </trans-unit>
        <trans-unit id="d75465f4d7d1345a1ded8ed3e263f2442dd61a4c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#*&lt;/strong&gt;(other : LibGMP::IntPrimitiveUnsigned) : BigInt</source>
          <target state="translated">&lt;strong&gt;# *&lt;/strong&gt; (другое: LibGMP :: IntPrimitiveUnsigned): BigInt</target>
        </trans-unit>
        <trans-unit id="f170937e8a943082ed9468b7d3d08526b187111b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#*&lt;/strong&gt;(other : Number)</source>
          <target state="translated">&lt;strong&gt;# *&lt;/strong&gt; (другое: номер)</target>
        </trans-unit>
        <trans-unit id="a34a0c87889db339e71a9f2e3ca3dfe0323f3d5c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#*&lt;/strong&gt;(other : NumberLiteral) : NumberLiteral</source>
          <target state="translated">&lt;strong&gt;# *&lt;/strong&gt; (другое: NumberLiteral): NumberLiteral</target>
        </trans-unit>
        <trans-unit id="609d054d07de495ae8cd0f11232af0f2021b4707" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#*&lt;/strong&gt;(other : UInt128) : self</source>
          <target state="translated">&lt;strong&gt;# *&lt;/strong&gt; (другое: UInt128): self</target>
        </trans-unit>
        <trans-unit id="779c6b9dff78533e4b7154f47d85d8e89ee65ae6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#*&lt;/strong&gt;(other : UInt16) : self</source>
          <target state="translated">&lt;strong&gt;# *&lt;/strong&gt; (другое: UInt16): self</target>
        </trans-unit>
        <trans-unit id="54f7fa4fa2872bc35094224f139c69bd89a290df" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#*&lt;/strong&gt;(other : UInt32) : self</source>
          <target state="translated">&lt;strong&gt;# *&lt;/strong&gt; (другое: UInt32): self</target>
        </trans-unit>
        <trans-unit id="32eb5dfc847b1a6010b605a150eda6acd5dad096" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#*&lt;/strong&gt;(other : UInt64) : self</source>
          <target state="translated">&lt;strong&gt;# *&lt;/strong&gt; (другое: UInt64): self</target>
        </trans-unit>
        <trans-unit id="4e51aff112df02c599ad88d7ce957c221d94e674" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#*&lt;/strong&gt;(other : UInt8) : self</source>
          <target state="translated">&lt;strong&gt;# *&lt;/strong&gt; (другое: UInt8): self</target>
        </trans-unit>
        <trans-unit id="5bf016728e86ef1abf180905068a5040744bfcfb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#*&lt;/strong&gt;(times : Int)</source>
          <target state="translated">&lt;strong&gt;# *&lt;/strong&gt; (времена: Int)</target>
        </trans-unit>
        <trans-unit id="5011e72d9b478fbc8362991fe8e14503e32c53a1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#+&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;#+&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="63444f07bacc5a69703690e3957d5afbb0a2c120" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#+&lt;/strong&gt; : NumberLiteral</source>
          <target state="translated">&lt;strong&gt;# +&lt;/strong&gt; : NumberLiteral</target>
        </trans-unit>
        <trans-unit id="6913319757e9e27a503d5e9227846b81fee3b2bc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#+&lt;/strong&gt; : self</source>
          <target state="translated">&lt;strong&gt;# +&lt;/strong&gt; : сам</target>
        </trans-unit>
        <trans-unit id="4284679c7a2eda8af016e964ebc2c0be4613adfd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#+&lt;/strong&gt;(char : Char)</source>
          <target state="translated">&lt;strong&gt;# +&lt;/strong&gt; (символ: символ)</target>
        </trans-unit>
        <trans-unit id="4cfe5c5de2ec1f9f496302410e90acf1674df02e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#+&lt;/strong&gt;(offset : Int)</source>
          <target state="translated">&lt;strong&gt;# +&lt;/strong&gt; (смещение: Int)</target>
        </trans-unit>
        <trans-unit id="42ec4921a808833b32fa3650e49a7d7be773ec34" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#+&lt;/strong&gt;(offset : Int64) : self</source>
          <target state="translated">&lt;strong&gt;# +&lt;/strong&gt; (смещение: Int64): self</target>
        </trans-unit>
        <trans-unit id="0e42fbb81d8c4cb493c254e9e63d19aa9bb5f2bf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#+&lt;/strong&gt;(other : Array(U)) forall U</source>
          <target state="translated">&lt;strong&gt;# +&lt;/strong&gt; (другое: Array (U)) для U</target>
        </trans-unit>
        <trans-unit id="74bbd3bca44341a180c85a026eff03410568cfb5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#+&lt;/strong&gt;(other : ArrayLiteral) : ArrayLiteral</source>
          <target state="translated">&lt;strong&gt;# +&lt;/strong&gt; (другое: ArrayLiteral): ArrayLiteral</target>
        </trans-unit>
        <trans-unit id="2661f03ed66dca0b598bfb0e289da182133a131a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#+&lt;/strong&gt;(other : BigDecimal)</source>
          <target state="translated">&lt;strong&gt;# +&lt;/strong&gt; (другое: BigDecimal)</target>
        </trans-unit>
        <trans-unit id="6b5bf4ee7ec4cdd7ba0345c834171de8f41f2f01" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#+&lt;/strong&gt;(other : BigDecimal) : BigDecimal</source>
          <target state="translated">&lt;strong&gt;# +&lt;/strong&gt; (другое: BigDecimal): BigDecimal</target>
        </trans-unit>
        <trans-unit id="c603534213dd1f3f0f28aada417fd3863e906ff4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#+&lt;/strong&gt;(other : BigFloat)</source>
          <target state="translated">&lt;strong&gt;# +&lt;/strong&gt; (другое: BigFloat)</target>
        </trans-unit>
        <trans-unit id="426b398968e00e66eff14b9b0aebe0a6c30b4fa3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#+&lt;/strong&gt;(other : BigInt) : BigInt</source>
          <target state="translated">&lt;strong&gt;# +&lt;/strong&gt; (другое: BigInt): BigInt</target>
        </trans-unit>
        <trans-unit id="7abc1c17ee90855dc7e43e4f73c04984f9d5c43d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#+&lt;/strong&gt;(other : BigRational)</source>
          <target state="translated">&lt;strong&gt;# +&lt;/strong&gt; (другое: BigRational)</target>
        </trans-unit>
        <trans-unit id="1c6baa890f09cc8640e1f63aa78102837552c70b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#+&lt;/strong&gt;(other : Complex)</source>
          <target state="translated">&lt;strong&gt;# +&lt;/strong&gt; (другое: сложное)</target>
        </trans-unit>
        <trans-unit id="5b9378a456b98163a380817d1cc10e0740c1ff00" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#+&lt;/strong&gt;(other : Deque(U)) forall U</source>
          <target state="translated">&lt;strong&gt;# +&lt;/strong&gt; (другое: Deque (U)) для U</target>
        </trans-unit>
        <trans-unit id="7d57943806381743c763ba3bbd124898b78123c5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#+&lt;/strong&gt;(other : Float32) : Float32</source>
          <target state="translated">&lt;strong&gt;# +&lt;/strong&gt; (другое: Float32): Float32</target>
        </trans-unit>
        <trans-unit id="dfa290ffe2dba8cc7c84496e3a00635b56c33d47" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#+&lt;/strong&gt;(other : Float32) : self</source>
          <target state="translated">&lt;strong&gt;# +&lt;/strong&gt; (другое: Float32): self</target>
        </trans-unit>
        <trans-unit id="d8861e560fcf5c42e443de9839ecc929b1ded6a7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#+&lt;/strong&gt;(other : Float64) : Float64</source>
          <target state="translated">&lt;strong&gt;# +&lt;/strong&gt; (другое: Float64): Float64</target>
        </trans-unit>
        <trans-unit id="3ebcd772d406a3775563ab7a0cc536e5b8090c38" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#+&lt;/strong&gt;(other : Float64) : self</source>
          <target state="translated">&lt;strong&gt;# +&lt;/strong&gt; (другое: Float64): self</target>
        </trans-unit>
        <trans-unit id="4ded983afa97045ec263c8b66fd0ada2a5555ce8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#+&lt;/strong&gt;(other : Int)</source>
          <target state="translated">&lt;strong&gt;# +&lt;/strong&gt; (другое: Int)</target>
        </trans-unit>
        <trans-unit id="76a283569f2daa033ecb573fa5cb4975dbe65d53" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#+&lt;/strong&gt;(other : Int) : BigInt</source>
          <target state="translated">&lt;strong&gt;# +&lt;/strong&gt; (другое: Int): BigInt</target>
        </trans-unit>
        <trans-unit id="d3bd69c2ea7d9b5745a64eabe9b8c732c68c27d3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#+&lt;/strong&gt;(other : Int) : Char</source>
          <target state="translated">&lt;strong&gt;# +&lt;/strong&gt; (другое: Int): Char</target>
        </trans-unit>
        <trans-unit id="3f21f0ee326ab1084ca1493ad478c34446870802" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#+&lt;/strong&gt;(other : Int128) : self</source>
          <target state="translated">&lt;strong&gt;# +&lt;/strong&gt; (другое: Int128): self</target>
        </trans-unit>
        <trans-unit id="b6d5fa0ee0044c52b729219fcc5819ef50f539ef" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#+&lt;/strong&gt;(other : Int16) : self</source>
          <target state="translated">&lt;strong&gt;# +&lt;/strong&gt; (другое: Int16): self</target>
        </trans-unit>
        <trans-unit id="929c4fbc075ccb7bfe58d5ceea6c104697200626" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#+&lt;/strong&gt;(other : Int32) : self</source>
          <target state="translated">&lt;strong&gt;# +&lt;/strong&gt; (другое: Int32): self</target>
        </trans-unit>
        <trans-unit id="91d14a5f3fce2005d278e12a1edaa3d8940ff7a9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#+&lt;/strong&gt;(other : Int64) : self</source>
          <target state="translated">&lt;strong&gt;# +&lt;/strong&gt; (другое: Int64): self</target>
        </trans-unit>
        <trans-unit id="20ed8fcdcb2cf86aa549f1f168388af674d329af" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#+&lt;/strong&gt;(other : Int8) : self</source>
          <target state="translated">&lt;strong&gt;# +&lt;/strong&gt; (другое: Int8): self</target>
        </trans-unit>
        <trans-unit id="4b264a7e9913bc8c9c945be768c73839ea7330e8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#+&lt;/strong&gt;(other : Number)</source>
          <target state="translated">&lt;strong&gt;# +&lt;/strong&gt; (другое: номер)</target>
        </trans-unit>
        <trans-unit id="e97e09cf00da94af90e4d857bc69a9af72161beb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#+&lt;/strong&gt;(other : NumberLiteral) : NumberLiteral</source>
          <target state="translated">&lt;strong&gt;# +&lt;/strong&gt; (другое: NumberLiteral): NumberLiteral</target>
        </trans-unit>
        <trans-unit id="91d9b17e4779bffe9e0b3a21fd5dc00ad1784bd8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#+&lt;/strong&gt;(other : Set(U)) forall U</source>
          <target state="translated">&lt;strong&gt;# +&lt;/strong&gt; (другое: Set (U)) для U</target>
        </trans-unit>
        <trans-unit id="d32650cf01a31f5c2e97554b77c44c6d6b2cc35f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#+&lt;/strong&gt;(other : StringLiteral | CharLiteral) : MacroId</source>
          <target state="translated">&lt;strong&gt;# +&lt;/strong&gt; (другое: StringLiteral | CharLiteral): MacroId</target>
        </trans-unit>
        <trans-unit id="af2465f392864c05408803ce884a2bcb58dedec7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#+&lt;/strong&gt;(other : StringLiteral | CharLiteral) : StringLiteral</source>
          <target state="translated">&lt;strong&gt;# +&lt;/strong&gt; (другое: StringLiteral | CharLiteral): StringLiteral</target>
        </trans-unit>
        <trans-unit id="5ae5568896612511249ea8dcfcf0b791641662c5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#+&lt;/strong&gt;(other : StringLiteral | CharLiteral) : SymbolLiteral</source>
          <target state="translated">&lt;strong&gt;# +&lt;/strong&gt; (другое: StringLiteral | CharLiteral): SymbolLiteral</target>
        </trans-unit>
        <trans-unit id="10f0267054fb2952fbe91cca74a731b530f36300" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#+&lt;/strong&gt;(other : Tuple)</source>
          <target state="translated">&lt;strong&gt;# +&lt;/strong&gt; (другое: кортеж)</target>
        </trans-unit>
        <trans-unit id="fc17dbc8a796bb55f55074cfe90f3f4b42233d2c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#+&lt;/strong&gt;(other : UInt128) : self</source>
          <target state="translated">&lt;strong&gt;# +&lt;/strong&gt; (другое: UInt128): self</target>
        </trans-unit>
        <trans-unit id="e00dd8cf6570c3188be95d73a199ff298a4b9428" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#+&lt;/strong&gt;(other : UInt16) : self</source>
          <target state="translated">&lt;strong&gt;# +&lt;/strong&gt; (другое: UInt16): self</target>
        </trans-unit>
        <trans-unit id="cba74d439b80bfc888c181be1791a4a74fa9ca62" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#+&lt;/strong&gt;(other : UInt32) : self</source>
          <target state="translated">&lt;strong&gt;# +&lt;/strong&gt; (другое: UInt32): self</target>
        </trans-unit>
        <trans-unit id="f01a5ac7e06960e5e1c9d9bf729eb8d6cacb19fc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#+&lt;/strong&gt;(other : UInt64) : self</source>
          <target state="translated">&lt;strong&gt;# +&lt;/strong&gt; (другое: UInt64): self</target>
        </trans-unit>
        <trans-unit id="5564300b7243c46b8f9b4f88644f1c78ee5a322f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#+&lt;/strong&gt;(other : UInt8) : self</source>
          <target state="translated">&lt;strong&gt;# +&lt;/strong&gt; (другое: UInt8): self</target>
        </trans-unit>
        <trans-unit id="368da4150e1156809ccfda063fa1e036a9d075f7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#+&lt;/strong&gt;(other : self)</source>
          <target state="translated">&lt;strong&gt;# +&lt;/strong&gt; (другое: self)</target>
        </trans-unit>
        <trans-unit id="0c933d508588330bf4c32e6e5988078692865b19" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#+&lt;/strong&gt;(other : self) : Time::Span</source>
          <target state="translated">&lt;strong&gt;# +&lt;/strong&gt; (другое: self): Time :: Span</target>
        </trans-unit>
        <trans-unit id="06c010164db6041c2cb0e5597f0f2242fa9db297" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#+&lt;/strong&gt;(other)</source>
          <target state="translated">&lt;strong&gt;#+&lt;/strong&gt;(other)</target>
        </trans-unit>
        <trans-unit id="ab2ff2fb7c8b0245f0b482b8f081881dae502157" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#+&lt;/strong&gt;(span : Time::MonthSpan) : Time</source>
          <target state="translated">&lt;strong&gt;# +&lt;/strong&gt; (span: Time :: MonthSpan): время</target>
        </trans-unit>
        <trans-unit id="567749b391558b37a28e7665b471f95de610d9b0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#+&lt;/strong&gt;(span : Time::Span) : Time</source>
          <target state="translated">&lt;strong&gt;# +&lt;/strong&gt; (диапазон: время :: диапазон): время</target>
        </trans-unit>
        <trans-unit id="ed7882552e5d83393d6929d446819d39a26e0943" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#+&lt;/strong&gt;(str : String)</source>
          <target state="translated">&lt;strong&gt;# +&lt;/strong&gt; (строка: строка)</target>
        </trans-unit>
        <trans-unit id="3842b823e6db7b445f812a925d172ec07b43dab2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#-&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;#-&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="19736ea07c234352bba31fa0e437ccb93c720797" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#-&lt;/strong&gt; : BigDecimal</source>
          <target state="translated">&lt;strong&gt;# -&lt;/strong&gt; : BigDecimal</target>
        </trans-unit>
        <trans-unit id="056b8f7f4712c0036e226e9fa2eb383eb81e3d0d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#-&lt;/strong&gt; : BigInt</source>
          <target state="translated">&lt;strong&gt;# -&lt;/strong&gt; : BigInt</target>
        </trans-unit>
        <trans-unit id="fefb18f29e14f550b45e7122b23b941b36b8ec15" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#-&lt;/strong&gt; : NumberLiteral</source>
          <target state="translated">&lt;strong&gt;# -&lt;/strong&gt; : NumberLiteral</target>
        </trans-unit>
        <trans-unit id="85add0f6efead56b4e86d3ba0d1181d78bffa434" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#-&lt;/strong&gt; : Time::Span</source>
          <target state="translated">&lt;strong&gt;# -&lt;/strong&gt; : Время :: Диапазон</target>
        </trans-unit>
        <trans-unit id="16b091b3b982c54499438e7e4a6aa0ffa2169746" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#-&lt;/strong&gt;(other : Array(U)) forall U</source>
          <target state="translated">&lt;strong&gt;# -&lt;/strong&gt; (другое: Array (U)) для U</target>
        </trans-unit>
        <trans-unit id="93af4a4b85307a6c3f8cd7204d365eb176b12e62" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#-&lt;/strong&gt;(other : BigDecimal)</source>
          <target state="translated">&lt;strong&gt;# -&lt;/strong&gt; (другое: BigDecimal)</target>
        </trans-unit>
        <trans-unit id="686b9ba6eacab6cb7bc8e48f0572e793d1cfdd0d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#-&lt;/strong&gt;(other : BigDecimal) : BigDecimal</source>
          <target state="translated">&lt;strong&gt;# -&lt;/strong&gt; (другое: BigDecimal): BigDecimal</target>
        </trans-unit>
        <trans-unit id="872a60524fe85e250298944a3da38ab957b74b3c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#-&lt;/strong&gt;(other : BigFloat)</source>
          <target state="translated">&lt;strong&gt;# -&lt;/strong&gt; (другое: BigFloat)</target>
        </trans-unit>
        <trans-unit id="a71b56d9fe2f4692e7a39e190835a320fa945901" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#-&lt;/strong&gt;(other : BigInt) : BigInt</source>
          <target state="translated">&lt;strong&gt;# -&lt;/strong&gt; (другое: BigInt): BigInt</target>
        </trans-unit>
        <trans-unit id="e043b7dd0257ab2821e33a9b71ff16b219ec9c9e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#-&lt;/strong&gt;(other : BigRational)</source>
          <target state="translated">&lt;strong&gt;# -&lt;/strong&gt; (другое: BigRational)</target>
        </trans-unit>
        <trans-unit id="ed0d989359b4e7bc6796b46b5865e0619d26a791" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#-&lt;/strong&gt;(other : Char)</source>
          <target state="translated">&lt;strong&gt;# -&lt;/strong&gt; (другое: Char)</target>
        </trans-unit>
        <trans-unit id="0bf6fc65769669d888e6b043a535ff49c4b4b0e8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#-&lt;/strong&gt;(other : Complex)</source>
          <target state="translated">&lt;strong&gt;# -&lt;/strong&gt; (другое: сложное)</target>
        </trans-unit>
        <trans-unit id="589103cc0b4ec383d80957e1827a4b69f1802afa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#-&lt;/strong&gt;(other : Enumerable)</source>
          <target state="translated">&lt;strong&gt;# -&lt;/strong&gt; (другое: перечислимое)</target>
        </trans-unit>
        <trans-unit id="c08714eb4369a14b047febe579895fb8e45e30db" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#-&lt;/strong&gt;(other : Float32) : Float32</source>
          <target state="translated">&lt;strong&gt;# -&lt;/strong&gt; (другое: Float32): Float32</target>
        </trans-unit>
        <trans-unit id="a21c1c4f86c4f085946c9a4fa619eb96bfa68958" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#-&lt;/strong&gt;(other : Float32) : self</source>
          <target state="translated">&lt;strong&gt;# -&lt;/strong&gt; (другое: Float32): self</target>
        </trans-unit>
        <trans-unit id="1ce4b162aaac64e06e7196db005f42575990d911" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#-&lt;/strong&gt;(other : Float64) : Float64</source>
          <target state="translated">&lt;strong&gt;# -&lt;/strong&gt; (другое: Float64): Float64</target>
        </trans-unit>
        <trans-unit id="0f1e146f7abf8c03dc5d56e574ebf0c05c83cc2b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#-&lt;/strong&gt;(other : Float64) : self</source>
          <target state="translated">&lt;strong&gt;# -&lt;/strong&gt; (другое: Float64): self</target>
        </trans-unit>
        <trans-unit id="817eed0967e9ddc0576358f89a7bf58d5c41a947" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#-&lt;/strong&gt;(other : Int)</source>
          <target state="translated">&lt;strong&gt;# -&lt;/strong&gt; (другое: Int)</target>
        </trans-unit>
        <trans-unit id="6b7570cef4a70e014019641f050e43601172df6d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#-&lt;/strong&gt;(other : Int) : BigInt</source>
          <target state="translated">&lt;strong&gt;# -&lt;/strong&gt; (другое: Int): BigInt</target>
        </trans-unit>
        <trans-unit id="3501490d8686bb4fa0edf2c8562369dca0e88611" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#-&lt;/strong&gt;(other : Int) : Char</source>
          <target state="translated">&lt;strong&gt;# -&lt;/strong&gt; (другое: Int): Char</target>
        </trans-unit>
        <trans-unit id="cdcd2a38201a4e6b9821be1457d3c588197601da" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#-&lt;/strong&gt;(other : Int128) : self</source>
          <target state="translated">&lt;strong&gt;# -&lt;/strong&gt; (другое: Int128): self</target>
        </trans-unit>
        <trans-unit id="6cfa558679c9f0f8a57334e3718063dd0502896b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#-&lt;/strong&gt;(other : Int16) : self</source>
          <target state="translated">&lt;strong&gt;# -&lt;/strong&gt; (другое: Int16): self</target>
        </trans-unit>
        <trans-unit id="4e35917a6ce132444b522b7f802ba1737563aa25" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#-&lt;/strong&gt;(other : Int32) : self</source>
          <target state="translated">&lt;strong&gt;# -&lt;/strong&gt; (другое: Int32): self</target>
        </trans-unit>
        <trans-unit id="47ae6a067cc53837bbe27dba429c51a235fc5c5d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#-&lt;/strong&gt;(other : Int64) : self</source>
          <target state="translated">&lt;strong&gt;# -&lt;/strong&gt; (другое: Int64): self</target>
        </trans-unit>
        <trans-unit id="85eee028a1810d24a9cc23c4be8ef8e9d3f22d23" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#-&lt;/strong&gt;(other : Int8) : self</source>
          <target state="translated">&lt;strong&gt;# -&lt;/strong&gt; (другое: Int8): self</target>
        </trans-unit>
        <trans-unit id="61ac43dcc580dd412e213b33133d1385bfd368f9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#-&lt;/strong&gt;(other : Number)</source>
          <target state="translated">&lt;strong&gt;# -&lt;/strong&gt; (другое: номер)</target>
        </trans-unit>
        <trans-unit id="d10f716f44c44bab5515c0a2cf667de064b647e1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#-&lt;/strong&gt;(other : NumberLiteral) : NumberLiteral</source>
          <target state="translated">&lt;strong&gt;# -&lt;/strong&gt; (другое: NumberLiteral): NumberLiteral</target>
        </trans-unit>
        <trans-unit id="cdfc72712a2c269e15b49105ce80c50404a70ba4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#-&lt;/strong&gt;(other : Set)</source>
          <target state="translated">&lt;strong&gt;# -&lt;/strong&gt; (другое: Установить)</target>
        </trans-unit>
        <trans-unit id="c0c12a8410ba6387b1eb1d28fdf5df3dc3f1739a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#-&lt;/strong&gt;(other : Time) : Time::Span</source>
          <target state="translated">&lt;strong&gt;# -&lt;/strong&gt; (другое: Время): Время :: Диапазон</target>
        </trans-unit>
        <trans-unit id="9c0ef8e08e05df7d4d0722c95f856d9330998a6a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#-&lt;/strong&gt;(other : UInt128) : self</source>
          <target state="translated">&lt;strong&gt;# -&lt;/strong&gt; (другое: UInt128): self</target>
        </trans-unit>
        <trans-unit id="e624c4300a56b09c2ac8279921efb7f089e5c411" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#-&lt;/strong&gt;(other : UInt16) : self</source>
          <target state="translated">&lt;strong&gt;# -&lt;/strong&gt; (другое: UInt16): self</target>
        </trans-unit>
        <trans-unit id="c4be268f2bd6c2efd423fad53712abd9c32f1960" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#-&lt;/strong&gt;(other : UInt32) : self</source>
          <target state="translated">&lt;strong&gt;# -&lt;/strong&gt; (другое: UInt32): self</target>
        </trans-unit>
        <trans-unit id="79e15b381655a6d1c9628ad40f22e106f2ce160b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#-&lt;/strong&gt;(other : UInt64) : self</source>
          <target state="translated">&lt;strong&gt;# -&lt;/strong&gt; (другое: UInt64): self</target>
        </trans-unit>
        <trans-unit id="60b008d6ca6d4eb6b890a35a01e41f6f130dbc10" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#-&lt;/strong&gt;(other : UInt8) : self</source>
          <target state="translated">&lt;strong&gt;# -&lt;/strong&gt; (другое: UInt8): self</target>
        </trans-unit>
        <trans-unit id="2b499c012bfa5d11d4a71cd5897462bdfc44c77d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#-&lt;/strong&gt;(other : self) : Int64</source>
          <target state="translated">&lt;strong&gt;# -&lt;/strong&gt; (другое: self): Int64</target>
        </trans-unit>
        <trans-unit id="adb7913a7b2e2ef5997097fd4ccd495d83f444bf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#-&lt;/strong&gt;(other : self) : Time::Span</source>
          <target state="translated">&lt;strong&gt;# -&lt;/strong&gt; (другое: self): Time :: Span</target>
        </trans-unit>
        <trans-unit id="7716a74fea09f4f4e66e6ce5d763d3808eba3d3d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#-&lt;/strong&gt;(span : Time::MonthSpan) : Time</source>
          <target state="translated">&lt;strong&gt;# -&lt;/strong&gt; (span: Time :: MonthSpan): время</target>
        </trans-unit>
        <trans-unit id="a331417df4e9cb421cbb901ace5f9d6287d97183" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#-&lt;/strong&gt;(span : Time::Span) : Time</source>
          <target state="translated">&lt;strong&gt;# -&lt;/strong&gt; (диапазон: время :: диапазон): время</target>
        </trans-unit>
        <trans-unit id="e7f8999023eb6fc657b268d326c3b4846b9ebd40" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#//&lt;/strong&gt;(other : Int) : BigInt</source>
          <target state="translated">&lt;strong&gt;# //&lt;/strong&gt; (прочее: Int): BigInt</target>
        </trans-unit>
        <trans-unit id="8f564358919f02d49bec245f2d498b110bd31860" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#//&lt;/strong&gt;(other : Int::Primitive)</source>
          <target state="translated">&lt;strong&gt;# //&lt;/strong&gt; (прочее: Int :: Primitive)</target>
        </trans-unit>
        <trans-unit id="730a74e25d8f72780a6c666f3d95ee9352412e98" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#//&lt;/strong&gt;(other : Int::Unsigned) : BigInt</source>
          <target state="translated">&lt;strong&gt;# //&lt;/strong&gt; (прочее: Int :: Unsigned): BigInt</target>
        </trans-unit>
        <trans-unit id="8f36412cee8e0443cd278b9f5653a5eb421d204b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#//&lt;/strong&gt;(other : NumberLiteral) : NumberLiteral</source>
          <target state="translated">&lt;strong&gt;# //&lt;/strong&gt; (другое: NumberLiteral): NumberLiteral</target>
        </trans-unit>
        <trans-unit id="36be4b4916122dba0ee3d89c1ee1bc8f909a19a5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#//&lt;/strong&gt;(other)</source>
          <target state="translated">&lt;strong&gt;#//&lt;/strong&gt;(other)</target>
        </trans-unit>
        <trans-unit id="bd495cd7b255de44d199e11db84552ad49650208" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#/&lt;/strong&gt;(number : Float) : Time::Span</source>
          <target state="translated">&lt;strong&gt;# /&lt;/strong&gt; (число: Float): время :: диапазон</target>
        </trans-unit>
        <trans-unit id="7b744349526982982823dd252f30e8f4496281e6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#/&lt;/strong&gt;(number : Int) : Time::Span</source>
          <target state="translated">&lt;strong&gt;# /&lt;/strong&gt; (число: Int): Time :: Span</target>
        </trans-unit>
        <trans-unit id="235685427eaea1e7f5a8295af2d6feebdc409441" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#/&lt;/strong&gt;(other : BigDecimal) : BigDecimal</source>
          <target state="translated">&lt;strong&gt;# /&lt;/strong&gt; (другое: BigDecimal): BigDecimal</target>
        </trans-unit>
        <trans-unit id="4eb43fb8d774e6b3ee7a903f47fa619b9b519430" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#/&lt;/strong&gt;(other : BigDecimal) : BigRational</source>
          <target state="translated">&lt;strong&gt;# /&lt;/strong&gt; (другое: BigDecimal): BigRational</target>
        </trans-unit>
        <trans-unit id="b18a98d1395af1287919b217549d3ca6889a39ee" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#/&lt;/strong&gt;(other : BigFloat)</source>
          <target state="translated">&lt;strong&gt;# /&lt;/strong&gt; (другое: BigFloat)</target>
        </trans-unit>
        <trans-unit id="3299695107f78ffe2d4369c8b5eebbeb59aeafa9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#/&lt;/strong&gt;(other : BigFloat) : BigDecimal</source>
          <target state="translated">&lt;strong&gt;# /&lt;/strong&gt; (другое: BigFloat): BigDecimal</target>
        </trans-unit>
        <trans-unit id="3e21cfded4c6bfd5b6e18d73ef37320e46457cff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#/&lt;/strong&gt;(other : BigFloat) : BigFloat</source>
          <target state="translated">&lt;strong&gt;# /&lt;/strong&gt; (другое: BigFloat): BigFloat</target>
        </trans-unit>
        <trans-unit id="68a32d8dd7f2648926394f0414cec73555a389e3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#/&lt;/strong&gt;(other : BigFloat) : BigRational</source>
          <target state="translated">&lt;strong&gt;# /&lt;/strong&gt; (другое: BigFloat): BigRational</target>
        </trans-unit>
        <trans-unit id="1379b2cd4a4f20d884c6d035fdc9a6a68a306411" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#/&lt;/strong&gt;(other : BigInt) : BigDecimal</source>
          <target state="translated">&lt;strong&gt;# /&lt;/strong&gt; (другое: BigInt): BigDecimal</target>
        </trans-unit>
        <trans-unit id="ff90e6d6a00294e07fbb2e411d2839008242d1d3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#/&lt;/strong&gt;(other : BigInt) : BigFloat</source>
          <target state="translated">&lt;strong&gt;# /&lt;/strong&gt; (другое: BigInt): BigFloat</target>
        </trans-unit>
        <trans-unit id="555773f51edc4dd1232f752b8daee4aace5e3de9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#/&lt;/strong&gt;(other : BigInt) : BigRational</source>
          <target state="translated">&lt;strong&gt;# /&lt;/strong&gt; (другое: BigInt): BigRational</target>
        </trans-unit>
        <trans-unit id="6796c7bf529e38356ff220602598e86ab5aa6df6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#/&lt;/strong&gt;(other : BigRational)</source>
          <target state="translated">&lt;strong&gt;# /&lt;/strong&gt; (другое: BigRational)</target>
        </trans-unit>
        <trans-unit id="a75e9b5172c183fa52446f675398459c90cfaf96" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#/&lt;/strong&gt;(other : BigRational) : BigRational</source>
          <target state="translated">&lt;strong&gt;# /&lt;/strong&gt; (другое: BigRational): BigRational</target>
        </trans-unit>
        <trans-unit id="0b64d66791b648e18d4e12aa790e8cbe9973317f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#/&lt;/strong&gt;(other : Complex)</source>
          <target state="translated">&lt;strong&gt;# /&lt;/strong&gt; (другое: сложное)</target>
        </trans-unit>
        <trans-unit id="bea2026e74fdbcddcfaab86ffdb8b605235ee0b5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#/&lt;/strong&gt;(other : Float32) : BigDecimal</source>
          <target state="translated">&lt;strong&gt;# /&lt;/strong&gt; (другое: Float32): BigDecimal</target>
        </trans-unit>
        <trans-unit id="ee6613ec576d29c6b2b88f83bbbfa44e4ab018e0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#/&lt;/strong&gt;(other : Float32) : BigFloat</source>
          <target state="translated">&lt;strong&gt;# /&lt;/strong&gt; (другое: Float32): BigFloat</target>
        </trans-unit>
        <trans-unit id="62d015c90d94c7d1be4c41afd04274785a32af87" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#/&lt;/strong&gt;(other : Float32) : BigRational</source>
          <target state="translated">&lt;strong&gt;# /&lt;/strong&gt; (другое: Float32): BigRational</target>
        </trans-unit>
        <trans-unit id="744ba82675850b2c491a521815b00e1ad92ea498" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#/&lt;/strong&gt;(other : Float32) : Float32</source>
          <target state="translated">&lt;strong&gt;# /&lt;/strong&gt; (другое: Float32): Float32</target>
        </trans-unit>
        <trans-unit id="2e07b8b95a844ede3a22f8c07b05ca69c71e3454" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#/&lt;/strong&gt;(other : Float32) : Float64</source>
          <target state="translated">&lt;strong&gt;# /&lt;/strong&gt; (другое: Float32): Float64</target>
        </trans-unit>
        <trans-unit id="8f8793d5a6eda84919665f3fe871b57db67d2215" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#/&lt;/strong&gt;(other : Float64) : BigDecimal</source>
          <target state="translated">&lt;strong&gt;# /&lt;/strong&gt; (другое: Float64): BigDecimal</target>
        </trans-unit>
        <trans-unit id="59be0eb1aa0766112265c73306cacaba52350c51" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#/&lt;/strong&gt;(other : Float64) : BigFloat</source>
          <target state="translated">&lt;strong&gt;# /&lt;/strong&gt; (другое: Float64): BigFloat</target>
        </trans-unit>
        <trans-unit id="14728bdc7aa93301b809e2f8f72c360e2fa33fe7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#/&lt;/strong&gt;(other : Float64) : BigRational</source>
          <target state="translated">&lt;strong&gt;# /&lt;/strong&gt; (другое: Float64): BigRational</target>
        </trans-unit>
        <trans-unit id="12e92ef189aaee5612f3f85369ff07519d6d84e0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#/&lt;/strong&gt;(other : Float64) : Float64</source>
          <target state="translated">&lt;strong&gt;# /&lt;/strong&gt; (другое: Float64): Float64</target>
        </trans-unit>
        <trans-unit id="65192d17bfd5f55d22949008c91c7a06c573b81b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#/&lt;/strong&gt;(other : Int128) : BigDecimal</source>
          <target state="translated">&lt;strong&gt;# /&lt;/strong&gt; (другое: Int128): BigDecimal</target>
        </trans-unit>
        <trans-unit id="cc18b893cb8e92c7c88d968ec4314b8e6afd922a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#/&lt;/strong&gt;(other : Int128) : BigFloat</source>
          <target state="translated">&lt;strong&gt;# /&lt;/strong&gt; (другое: Int128): BigFloat</target>
        </trans-unit>
        <trans-unit id="364a2825110b77e2dda1490b47537b0f200a47a3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#/&lt;/strong&gt;(other : Int128) : BigRational</source>
          <target state="translated">&lt;strong&gt;# /&lt;/strong&gt; (другое: Int128): BigRational</target>
        </trans-unit>
        <trans-unit id="9758b3578014cc0da924223570e2cc4279f280dc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#/&lt;/strong&gt;(other : Int128) : Float32</source>
          <target state="translated">&lt;strong&gt;# /&lt;/strong&gt; (другое: Int128): Float32</target>
        </trans-unit>
        <trans-unit id="a08942cffc88da73a2a94f6dbfa9ce6f2d3baaab" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#/&lt;/strong&gt;(other : Int128) : Float64</source>
          <target state="translated">&lt;strong&gt;# /&lt;/strong&gt; (другое: Int128): Float64</target>
        </trans-unit>
        <trans-unit id="3c569201694db5810cd096246994e46c0934ab7b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#/&lt;/strong&gt;(other : Int16) : BigDecimal</source>
          <target state="translated">&lt;strong&gt;# /&lt;/strong&gt; (другое: Int16): BigDecimal</target>
        </trans-unit>
        <trans-unit id="e6d3421cc9a1e6302809e7162b43fd37d7ad828d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#/&lt;/strong&gt;(other : Int16) : BigFloat</source>
          <target state="translated">&lt;strong&gt;# /&lt;/strong&gt; (другое: Int16): BigFloat</target>
        </trans-unit>
        <trans-unit id="c1c42f5295312651470bfb27496d7fda51129530" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#/&lt;/strong&gt;(other : Int16) : BigRational</source>
          <target state="translated">&lt;strong&gt;# /&lt;/strong&gt; (другое: Int16): BigRational</target>
        </trans-unit>
        <trans-unit id="017cd29af87d7cd91dae8092ec63ea4921834f82" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#/&lt;/strong&gt;(other : Int16) : Float32</source>
          <target state="translated">&lt;strong&gt;# /&lt;/strong&gt; (другое: Int16): Float32</target>
        </trans-unit>
        <trans-unit id="2ef6c7a33e59adaf5f9415ac20d80b191ce01570" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#/&lt;/strong&gt;(other : Int16) : Float64</source>
          <target state="translated">&lt;strong&gt;# /&lt;/strong&gt; (другое: Int16): Float64</target>
        </trans-unit>
        <trans-unit id="f1d1156f1cdebc2ec23108e44f4c410cb6349ed9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#/&lt;/strong&gt;(other : Int32) : BigDecimal</source>
          <target state="translated">&lt;strong&gt;# /&lt;/strong&gt; (другое: Int32): BigDecimal</target>
        </trans-unit>
        <trans-unit id="e955ad1c5d32e06aa719c208281687ae452eeffa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#/&lt;/strong&gt;(other : Int32) : BigFloat</source>
          <target state="translated">&lt;strong&gt;# /&lt;/strong&gt; (другое: Int32): BigFloat</target>
        </trans-unit>
        <trans-unit id="139ec9af04957015e2ea5691c3fe7649742deff7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#/&lt;/strong&gt;(other : Int32) : BigRational</source>
          <target state="translated">&lt;strong&gt;# /&lt;/strong&gt; (другое: Int32): BigRational</target>
        </trans-unit>
        <trans-unit id="003cc82741caf528f57d276ec6f8f6a922b729da" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#/&lt;/strong&gt;(other : Int32) : Float32</source>
          <target state="translated">&lt;strong&gt;# /&lt;/strong&gt; (другое: Int32): Float32</target>
        </trans-unit>
        <trans-unit id="dfada29be2c884808b20c6ad691575d7d3597a01" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#/&lt;/strong&gt;(other : Int32) : Float64</source>
          <target state="translated">&lt;strong&gt;# /&lt;/strong&gt; (другое: Int32): Float64</target>
        </trans-unit>
        <trans-unit id="41cd8c2e7756b170a7bb5f5c9b5e543d33c7ae2c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#/&lt;/strong&gt;(other : Int64) : BigDecimal</source>
          <target state="translated">&lt;strong&gt;# /&lt;/strong&gt; (другое: Int64): BigDecimal</target>
        </trans-unit>
        <trans-unit id="b68f0f7905c4c3bf4e3cc21437dd106a7df25f7a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#/&lt;/strong&gt;(other : Int64) : BigFloat</source>
          <target state="translated">&lt;strong&gt;# /&lt;/strong&gt; (другое: Int64): BigFloat</target>
        </trans-unit>
        <trans-unit id="4a9f67efe1e58397cae7903ad85c74b8db851a1e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#/&lt;/strong&gt;(other : Int64) : BigRational</source>
          <target state="translated">&lt;strong&gt;# /&lt;/strong&gt; (другое: Int64): BigRational</target>
        </trans-unit>
        <trans-unit id="4a39e04960300b5454f0ee172d8fd7512fb61c2c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#/&lt;/strong&gt;(other : Int64) : Float32</source>
          <target state="translated">&lt;strong&gt;# /&lt;/strong&gt; (другое: Int64): Float32</target>
        </trans-unit>
        <trans-unit id="a0329c13e186cfd6b5a080ede994edd5e3ec2b7b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#/&lt;/strong&gt;(other : Int64) : Float64</source>
          <target state="translated">&lt;strong&gt;# /&lt;/strong&gt; (другое: Int64): Float64</target>
        </trans-unit>
        <trans-unit id="cd6724ab97a2dcebc4aa858243850fae151b2cc9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#/&lt;/strong&gt;(other : Int8) : BigDecimal</source>
          <target state="translated">&lt;strong&gt;# /&lt;/strong&gt; (другое: Int8): BigDecimal</target>
        </trans-unit>
        <trans-unit id="f7fe163d53e11dcd1a1bb4db0d13d92539fdeccf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#/&lt;/strong&gt;(other : Int8) : BigFloat</source>
          <target state="translated">&lt;strong&gt;# /&lt;/strong&gt; (другое: Int8): BigFloat</target>
        </trans-unit>
        <trans-unit id="b89e02115db2dd3ea91dd96868407c7b5753fe43" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#/&lt;/strong&gt;(other : Int8) : BigRational</source>
          <target state="translated">&lt;strong&gt;# /&lt;/strong&gt; (другое: Int8): BigRational</target>
        </trans-unit>
        <trans-unit id="7e752ac2b60fc6706db51821ae171fe619193cba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#/&lt;/strong&gt;(other : Int8) : Float32</source>
          <target state="translated">&lt;strong&gt;# /&lt;/strong&gt; (другое: Int8): Float32</target>
        </trans-unit>
        <trans-unit id="785cd4b2ca5f3a6c5e347600e17f26ce6d7effb0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#/&lt;/strong&gt;(other : Int8) : Float64</source>
          <target state="translated">&lt;strong&gt;# /&lt;/strong&gt; (другое: Int8): Float64</target>
        </trans-unit>
        <trans-unit id="159ab8cfef9ef7e69077fe4cfbf15d3f0e4294e0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#/&lt;/strong&gt;(other : Number)</source>
          <target state="translated">&lt;strong&gt;# /&lt;/strong&gt; (другое: номер)</target>
        </trans-unit>
        <trans-unit id="1206a2b783416d5661112dbfad254fa732492910" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#/&lt;/strong&gt;(other : UInt128) : BigDecimal</source>
          <target state="translated">&lt;strong&gt;# /&lt;/strong&gt; (другое: UInt128): BigDecimal</target>
        </trans-unit>
        <trans-unit id="079059237dbf405a54c3b8479c59356af8e86a35" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#/&lt;/strong&gt;(other : UInt128) : BigFloat</source>
          <target state="translated">&lt;strong&gt;# /&lt;/strong&gt; (другое: UInt128): BigFloat</target>
        </trans-unit>
        <trans-unit id="b0ade7d4b1a39005b98f278166674c0b7d8265c2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#/&lt;/strong&gt;(other : UInt128) : BigRational</source>
          <target state="translated">&lt;strong&gt;# /&lt;/strong&gt; (другое: UInt128): BigRational</target>
        </trans-unit>
        <trans-unit id="8fa74478e10277e6c25cd3c61526a2a1a0fc6bb3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#/&lt;/strong&gt;(other : UInt128) : Float32</source>
          <target state="translated">&lt;strong&gt;# /&lt;/strong&gt; (другое: UInt128): Float32</target>
        </trans-unit>
        <trans-unit id="74041153d92cccc15717524326fd8cd0ae448fa9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#/&lt;/strong&gt;(other : UInt128) : Float64</source>
          <target state="translated">&lt;strong&gt;# /&lt;/strong&gt; (другое: UInt128): Float64</target>
        </trans-unit>
        <trans-unit id="e8549e8110693a008e2c34d558c9327edf0fdd5b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#/&lt;/strong&gt;(other : UInt16) : BigDecimal</source>
          <target state="translated">&lt;strong&gt;# /&lt;/strong&gt; (другое: UInt16): BigDecimal</target>
        </trans-unit>
        <trans-unit id="94a16e3551fb7b7ceda6d7c1bb8f969350a6c8ef" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#/&lt;/strong&gt;(other : UInt16) : BigFloat</source>
          <target state="translated">&lt;strong&gt;# /&lt;/strong&gt; (другое: UInt16): BigFloat</target>
        </trans-unit>
        <trans-unit id="0764c0a737ab1dfd5e8b7b085f79fb1d83e4962b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#/&lt;/strong&gt;(other : UInt16) : BigRational</source>
          <target state="translated">&lt;strong&gt;# /&lt;/strong&gt; (другое: UInt16): BigRational</target>
        </trans-unit>
        <trans-unit id="cd30b4696ff77fbe07ddf98bc1e109d4c343bf54" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#/&lt;/strong&gt;(other : UInt16) : Float32</source>
          <target state="translated">&lt;strong&gt;# /&lt;/strong&gt; (другое: UInt16): Float32</target>
        </trans-unit>
        <trans-unit id="4a27aa47dae2dcb0a5cd4e5c7951c8d281024205" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#/&lt;/strong&gt;(other : UInt16) : Float64</source>
          <target state="translated">&lt;strong&gt;# /&lt;/strong&gt; (другое: UInt16): Float64</target>
        </trans-unit>
        <trans-unit id="4c0634bda8c1510095fccc157698101a5646f0e4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#/&lt;/strong&gt;(other : UInt32) : BigDecimal</source>
          <target state="translated">&lt;strong&gt;# /&lt;/strong&gt; (другое: UInt32): BigDecimal</target>
        </trans-unit>
        <trans-unit id="3452ed38b9690cb5cda46680a42be092f7b35766" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#/&lt;/strong&gt;(other : UInt32) : BigFloat</source>
          <target state="translated">&lt;strong&gt;# /&lt;/strong&gt; (другое: UInt32): BigFloat</target>
        </trans-unit>
        <trans-unit id="ea1ad7fd7f9e4e0f26a9a7e19a0c740e2dfcdef5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#/&lt;/strong&gt;(other : UInt32) : BigRational</source>
          <target state="translated">&lt;strong&gt;# /&lt;/strong&gt; (другое: UInt32): BigRational</target>
        </trans-unit>
        <trans-unit id="f046afd8a1380d1ed9be4c0aac3c79a12ed1c412" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#/&lt;/strong&gt;(other : UInt32) : Float32</source>
          <target state="translated">&lt;strong&gt;# /&lt;/strong&gt; (другое: UInt32): Float32</target>
        </trans-unit>
        <trans-unit id="89edef53fe4e596d03bbfeebba3601d90cfbf96d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#/&lt;/strong&gt;(other : UInt32) : Float64</source>
          <target state="translated">&lt;strong&gt;# /&lt;/strong&gt; (другое: UInt32): Float64</target>
        </trans-unit>
        <trans-unit id="3aa35a72cf5edde86128350df5c6e17e501c1c2d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#/&lt;/strong&gt;(other : UInt64) : BigDecimal</source>
          <target state="translated">&lt;strong&gt;# /&lt;/strong&gt; (другое: UInt64): BigDecimal</target>
        </trans-unit>
        <trans-unit id="14e706ef9da4f2aa7bc8f9a65639529c5fcdda77" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#/&lt;/strong&gt;(other : UInt64) : BigFloat</source>
          <target state="translated">&lt;strong&gt;# /&lt;/strong&gt; (другое: UInt64): BigFloat</target>
        </trans-unit>
        <trans-unit id="b910d301499e78a4551be22105500519e1bd47ef" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#/&lt;/strong&gt;(other : UInt64) : BigRational</source>
          <target state="translated">&lt;strong&gt;# /&lt;/strong&gt; (другое: UInt64): BigRational</target>
        </trans-unit>
        <trans-unit id="0b168c2ae0dcbd6481a285330dabc1b2663a935a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#/&lt;/strong&gt;(other : UInt64) : Float32</source>
          <target state="translated">&lt;strong&gt;# /&lt;/strong&gt; (другое: UInt64): Float32</target>
        </trans-unit>
        <trans-unit id="d498f7120a87692e0d73b6a3794c8a71fc1985df" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#/&lt;/strong&gt;(other : UInt64) : Float64</source>
          <target state="translated">&lt;strong&gt;# /&lt;/strong&gt; (другое: UInt64): Float64</target>
        </trans-unit>
        <trans-unit id="14861b35ef01e3b33eb915ba5290a4bc413592d5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#/&lt;/strong&gt;(other : UInt8 | UInt16 | UInt32 | UInt64)</source>
          <target state="translated">&lt;strong&gt;# /&lt;/strong&gt; (другое: UInt8 | UInt16 | UInt32 | UInt64)</target>
        </trans-unit>
        <trans-unit id="cd71a1a953b69a70dc423433137f44a8ac948ad8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#/&lt;/strong&gt;(other : UInt8) : BigDecimal</source>
          <target state="translated">&lt;strong&gt;# /&lt;/strong&gt; (другое: UInt8): BigDecimal</target>
        </trans-unit>
        <trans-unit id="7a04012a23eff40f6fe9680cc5c18edd5ac93de5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#/&lt;/strong&gt;(other : UInt8) : BigFloat</source>
          <target state="translated">&lt;strong&gt;# /&lt;/strong&gt; (другое: UInt8): BigFloat</target>
        </trans-unit>
        <trans-unit id="cf1a65d74376dea0a9d3a9d41dc144c9141e31b8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#/&lt;/strong&gt;(other : UInt8) : BigRational</source>
          <target state="translated">&lt;strong&gt;# /&lt;/strong&gt; (другое: UInt8): BigRational</target>
        </trans-unit>
        <trans-unit id="65c3997de41a40eb05d33dab97109d1160d98110" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#/&lt;/strong&gt;(other : UInt8) : Float32</source>
          <target state="translated">&lt;strong&gt;# /&lt;/strong&gt; (другое: UInt8): Float32</target>
        </trans-unit>
        <trans-unit id="0f0a7adb2ed012c6a5a98dda47b31bbce44776be" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#/&lt;/strong&gt;(other : UInt8) : Float64</source>
          <target state="translated">&lt;strong&gt;# /&lt;/strong&gt; (другое: UInt8): Float64</target>
        </trans-unit>
        <trans-unit id="7180f45da507ce37748d90a7e7fc7c4b4670f1c3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#/&lt;/strong&gt;(other : self) : Float64</source>
          <target state="translated">&lt;strong&gt;# /&lt;/strong&gt; (другое: self): Float64</target>
        </trans-unit>
        <trans-unit id="5ce79ec17e003f535acfeaaa04e4286af3618842" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#/&lt;/strong&gt;(part : Path | String) : Path</source>
          <target state="translated">&lt;strong&gt;# /&lt;/strong&gt; (part: Path | String): путь</target>
        </trans-unit>
        <trans-unit id="aa1b2060d7f976233bb37fc4d87a6eaddb52425b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#==&lt;/strong&gt;(other : ASTNode) : BoolLiteral</source>
          <target state="translated">&lt;strong&gt;# ==&lt;/strong&gt; (другое: ASTNode): BoolLiteral</target>
        </trans-unit>
        <trans-unit id="7933ac70cf04c832eaf54d0012b49b9619a61b95" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#==&lt;/strong&gt;(other : Array)</source>
          <target state="translated">&lt;strong&gt;# ==&lt;/strong&gt; (другое: массив)</target>
        </trans-unit>
        <trans-unit id="4de637f87ed4f5fb3ea1260115bb14e142edd432" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#==&lt;/strong&gt;(other : BigDecimal) : Bool</source>
          <target state="translated">&lt;strong&gt;# ==&lt;/strong&gt; (другое: BigDecimal): Bool</target>
        </trans-unit>
        <trans-unit id="78fec68d68c77281f364e3de541f11b6d095d4bb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#==&lt;/strong&gt;(other : BitArray)</source>
          <target state="translated">&lt;strong&gt;# ==&lt;/strong&gt; (другое: BitArray)</target>
        </trans-unit>
        <trans-unit id="5b4784be068c2d3f9c6225533eefd9809e909270" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#==&lt;/strong&gt;(other : Bool) : Bool</source>
          <target state="translated">&lt;strong&gt;# ==&lt;/strong&gt; (другое: Bool): Bool</target>
        </trans-unit>
        <trans-unit id="82fd4746e12b104136346a098702a8c8dafd5c03" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#==&lt;/strong&gt;(other : Char) : Bool</source>
          <target state="translated">&lt;strong&gt;# ==&lt;/strong&gt; (другое: Char): Bool</target>
        </trans-unit>
        <trans-unit id="eca8a74a05aa5c3fdb9e2ef6a13d2ed1259c54f4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#==&lt;/strong&gt;(other : Class) : Bool</source>
          <target state="translated">&lt;strong&gt;# ==&lt;/strong&gt; (другое: Класс): Bool</target>
        </trans-unit>
        <trans-unit id="6fb7400da1e37ce4f72d68b554ec3683f008c5aa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#==&lt;/strong&gt;(other : Complex)</source>
          <target state="translated">&lt;strong&gt;# ==&lt;/strong&gt; (другое: сложное)</target>
        </trans-unit>
        <trans-unit id="851542c908054d5b1a75b17d1420a7784ebbc035" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#==&lt;/strong&gt;(other : Deque)</source>
          <target state="translated">&lt;strong&gt;# ==&lt;/strong&gt; (другое: Deque)</target>
        </trans-unit>
        <trans-unit id="a697c84c6a685fc620be61d43ccff83c50485392" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#==&lt;/strong&gt;(other : Float32) : Bool</source>
          <target state="translated">&lt;strong&gt;# ==&lt;/strong&gt; (другое: Float32): Bool</target>
        </trans-unit>
        <trans-unit id="a6ca6dc8b65338ae39635ec87383928937de9646" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#==&lt;/strong&gt;(other : Float64) : Bool</source>
          <target state="translated">&lt;strong&gt;# ==&lt;/strong&gt; (другое: Float64): Bool</target>
        </trans-unit>
        <trans-unit id="6df0c801290ef946f7a152515e5d06c23a284308" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#==&lt;/strong&gt;(other : Hash)</source>
          <target state="translated">&lt;strong&gt;# ==&lt;/strong&gt; (другое: Hash)</target>
        </trans-unit>
        <trans-unit id="fdddca8105c0ee470a0d18139ea9a15db6524884" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#==&lt;/strong&gt;(other : IPAddress)</source>
          <target state="translated">&lt;strong&gt;# ==&lt;/strong&gt; (другое: IP-адрес)</target>
        </trans-unit>
        <trans-unit id="4ac63f2e622ae0abbaef09d6b1f0e727ab861662" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#==&lt;/strong&gt;(other : Int128) : Bool</source>
          <target state="translated">&lt;strong&gt;# ==&lt;/strong&gt; (другое: Int128): Bool</target>
        </trans-unit>
        <trans-unit id="75da25955585d4ef6eb55eceaf006f58b3a328e6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#==&lt;/strong&gt;(other : Int16) : Bool</source>
          <target state="translated">&lt;strong&gt;# ==&lt;/strong&gt; (другое: Int16): Bool</target>
        </trans-unit>
        <trans-unit id="56979daa3c5e6a9094d259789c0cfa9899b8425c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#==&lt;/strong&gt;(other : Int32) : Bool</source>
          <target state="translated">&lt;strong&gt;# ==&lt;/strong&gt; (прочее: Int32): Bool</target>
        </trans-unit>
        <trans-unit id="38838bc70bdc082073b7576ff10d7bd94c999d54" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#==&lt;/strong&gt;(other : Int64) : Bool</source>
          <target state="translated">&lt;strong&gt;# ==&lt;/strong&gt; (другое: Int64): Bool</target>
        </trans-unit>
        <trans-unit id="a938c6b2ecc65d50756abdae02e5fe6f43c5a8cd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#==&lt;/strong&gt;(other : Int8) : Bool</source>
          <target state="translated">&lt;strong&gt;# ==&lt;/strong&gt; (другое: Int8): Bool</target>
        </trans-unit>
        <trans-unit id="8a0a0754e6407f364e870cc773eba22323c52910" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#==&lt;/strong&gt;(other : JSON::Any)</source>
          <target state="translated">&lt;strong&gt;# ==&lt;/strong&gt; (другое: JSON :: Any)</target>
        </trans-unit>
        <trans-unit id="b8a22514d8576dac957a12fe1abfaf9fa9a1a306" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#==&lt;/strong&gt;(other : JSON::PullParser::Kind)</source>
          <target state="translated">&lt;strong&gt;# ==&lt;/strong&gt; (другое: JSON :: PullParser :: Kind)</target>
        </trans-unit>
        <trans-unit id="153cef6e21fa1efb94b1a63fe0ef648e281d1ad0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#==&lt;/strong&gt;(other : NamedTuple)</source>
          <target state="translated">&lt;strong&gt;# ==&lt;/strong&gt; (другое: NamedTuple)</target>
        </trans-unit>
        <trans-unit id="58b6352c3a4b40cf567a27aaa137176aae48c9e8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#==&lt;/strong&gt;(other : Nil)</source>
          <target state="translated">&lt;strong&gt;# ==&lt;/strong&gt; (другое: ноль)</target>
        </trans-unit>
        <trans-unit id="f65cd31348702841dee0b72efce4b344166b2689" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#==&lt;/strong&gt;(other : Node)</source>
          <target state="translated">&lt;strong&gt;# ==&lt;/strong&gt; (другое: узел)</target>
        </trans-unit>
        <trans-unit id="9728276e449026cd4b39a3a96f22e5f88de60361" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#==&lt;/strong&gt;(other : Number)</source>
          <target state="translated">&lt;strong&gt;# ==&lt;/strong&gt; (другое: номер)</target>
        </trans-unit>
        <trans-unit id="21bc58c29b8d7233102b244c172736b6f1a4099b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#==&lt;/strong&gt;(other : Regex)</source>
          <target state="translated">&lt;strong&gt;# ==&lt;/strong&gt; (другое: Regex)</target>
        </trans-unit>
        <trans-unit id="e92a64bc1c35798ef66b42e3845b7334d8be5810" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#==&lt;/strong&gt;(other : Regex::MatchData)</source>
          <target state="translated">&lt;strong&gt;# ==&lt;/strong&gt; (другое: Regex :: MatchData)</target>
        </trans-unit>
        <trans-unit id="4787d83e304848ebeb85c85373e0679a66dcdf85" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#==&lt;/strong&gt;(other : Set)</source>
          <target state="translated">&lt;strong&gt;# ==&lt;/strong&gt; (другое: установлено)</target>
        </trans-unit>
        <trans-unit id="698316d7dc13555f52b36cde0035de9cb163cc32" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#==&lt;/strong&gt;(other : Slice(U)) : Bool forall U</source>
          <target state="translated">&lt;strong&gt;# ==&lt;/strong&gt; (другое: Slice (U)): Bool для U</target>
        </trans-unit>
        <trans-unit id="53d13229421c20a4b941a2f97b3a347f02c11888" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#==&lt;/strong&gt;(other : StaticArray)</source>
          <target state="translated">&lt;strong&gt;# ==&lt;/strong&gt; (другое: StaticArray)</target>
        </trans-unit>
        <trans-unit id="553dde804b7583a1ec169659ed4b116958e69ab6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#==&lt;/strong&gt;(other : Symbol)</source>
          <target state="translated">&lt;strong&gt;# ==&lt;/strong&gt; (другое: символ)</target>
        </trans-unit>
        <trans-unit id="5e9d652127e041c3452be5069565c6d7627529a2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#==&lt;/strong&gt;(other : Symbol) : Bool</source>
          <target state="translated">&lt;strong&gt;# ==&lt;/strong&gt; (другое: Symbol): Bool</target>
        </trans-unit>
        <trans-unit id="eb341fe232e4e2d39fe25cb350903ea8a24aaa05" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#==&lt;/strong&gt;(other : T)</source>
          <target state="translated">&lt;strong&gt;# ==&lt;/strong&gt; (другое: T)</target>
        </trans-unit>
        <trans-unit id="6b3db535a2b29b81f61e4faa3659ac6e93aa2a97" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#==&lt;/strong&gt;(other : Time) : Bool</source>
          <target state="translated">&lt;strong&gt;# ==&lt;/strong&gt; (другое: Время): Bool</target>
        </trans-unit>
        <trans-unit id="27be7aa398e923ca1753ba0f64dab46e760ff81a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#==&lt;/strong&gt;(other : Tuple)</source>
          <target state="translated">&lt;strong&gt;# ==&lt;/strong&gt; (другое: кортеж)</target>
        </trans-unit>
        <trans-unit id="aa4dce840318c95be99411d27288608c85f85e5e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#==&lt;/strong&gt;(other : UInt128) : Bool</source>
          <target state="translated">&lt;strong&gt;# ==&lt;/strong&gt; (другое: UInt128): Bool</target>
        </trans-unit>
        <trans-unit id="d43f424d795efa47e88107261ea4c2f608fe676b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#==&lt;/strong&gt;(other : UInt16) : Bool</source>
          <target state="translated">&lt;strong&gt;# ==&lt;/strong&gt; (другое: UInt16): Bool</target>
        </trans-unit>
        <trans-unit id="e65bdcca4e579615aba9947da736da4462e6f887" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#==&lt;/strong&gt;(other : UInt32) : Bool</source>
          <target state="translated">&lt;strong&gt;# ==&lt;/strong&gt; (другое: UInt32): Bool</target>
        </trans-unit>
        <trans-unit id="7d804c0b68b89c93407a79833979274d9630a746" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#==&lt;/strong&gt;(other : UInt64) : Bool</source>
          <target state="translated">&lt;strong&gt;# ==&lt;/strong&gt; (другое: UInt64): Bool</target>
        </trans-unit>
        <trans-unit id="82ad487988bcd55864ea0237c959845b215b2ba3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#==&lt;/strong&gt;(other : UInt8) : Bool</source>
          <target state="translated">&lt;strong&gt;# ==&lt;/strong&gt; (другое: UInt8): Bool</target>
        </trans-unit>
        <trans-unit id="dfae08bc80fb0c67c0f581bc39bb02b5151249e8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#==&lt;/strong&gt;(other : UNIXAddress)</source>
          <target state="translated">&lt;strong&gt;# ==&lt;/strong&gt; (другое: UNIXAddress)</target>
        </trans-unit>
        <trans-unit id="98cf3cb8c32104a5de440c63f30a96bd7b3ebf66" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;#==&lt;/strong&gt;(other : UUID)</source>
          <target state="translated">&lt;strong&gt;# ==&lt;/strong&gt; (другое: UUID)</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
