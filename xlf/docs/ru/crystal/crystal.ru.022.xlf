<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="crystal">
    <body>
      <group id="crystal">
        <trans-unit id="2dce443fc82545ac8deb87af8402c994251dd6e8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://crystal-lang.org/api/Nil.html&quot;&gt;Nil&lt;/a&gt; type is used to represent the absence of a value, similar to &lt;code&gt;null&lt;/code&gt; in other languages. It only has a single value:</source>
          <target state="translated">Тип &lt;a href=&quot;http://crystal-lang.org/api/Nil.html&quot;&gt;Nil&lt;/a&gt; используется для представления отсутствия значения, аналогичного &lt;code&gt;null&lt;/code&gt; в других языках. Он имеет только одно значение:</target>
        </trans-unit>
        <trans-unit id="17c4a5ba983843f5aea4e11e5a0fc1f27ac55eb0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://tools.ietf.org/html/rfc2822&quot;&gt;RFC 2822&lt;/a&gt; datetime format.</source>
          <target state="translated">Формат даты и времени &lt;a href=&quot;https://tools.ietf.org/html/rfc2822&quot;&gt;RFC 2822&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4ab4eff1bdc42eaac909d9835213e75bfab5898a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://tools.ietf.org/html/rfc3339&quot;&gt;RFC 3339&lt;/a&gt; datetime format (&lt;a href=&quot;http://xml.coverpages.org/ISO-FDIS-8601.pdf&quot;&gt;ISO 8601&lt;/a&gt; profile).</source>
          <target state="translated">Формат даты и времени &lt;a href=&quot;https://tools.ietf.org/html/rfc3339&quot;&gt;RFC 3339&lt;/a&gt; ( профиль &lt;a href=&quot;http://xml.coverpages.org/ISO-FDIS-8601.pdf&quot;&gt;ISO 8601&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="fcc87f605187cae7714783b0008eb3aeb91780a9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;macros#type-information&quot;&gt;&lt;code&gt;@type&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;macros#method-information&quot;&gt;&lt;code&gt;@def&lt;/code&gt;&lt;/a&gt; variables can be used to get a &lt;code&gt;TypeNode&lt;/code&gt; or &lt;code&gt;Def&lt;/code&gt; object to use the &lt;code&gt;.annotation&lt;/code&gt; method on. However, it is also possible to get &lt;code&gt;TypeNode&lt;/code&gt;/&lt;code&gt;Def&lt;/code&gt; types using other methods on &lt;code&gt;TypeNode&lt;/code&gt;. For example &lt;code&gt;TypeNode.all_subclasses&lt;/code&gt; or &lt;code&gt;TypeNode.methods&lt;/code&gt;, respectively.</source>
          <target state="translated">В &lt;a href=&quot;macros#type-information&quot;&gt; &lt;code&gt;@type&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;macros#method-information&quot;&gt; &lt;code&gt;@def&lt;/code&gt; &lt;/a&gt; переменные могут быть использованы для получения &lt;code&gt;TypeNode&lt;/code&gt; или &lt;code&gt;Def&lt;/code&gt; объекта использовать &lt;code&gt;.annotation&lt;/code&gt; метод на. Однако также возможно получить &lt;code&gt;TypeNode&lt;/code&gt; / &lt;code&gt;Def&lt;/code&gt; , используя другие методы &lt;code&gt;TypeNode&lt;/code&gt; . Например, &lt;code&gt;TypeNode.all_subclasses&lt;/code&gt; или &lt;code&gt;TypeNode.methods&lt;/code&gt; , соответственно.</target>
        </trans-unit>
        <trans-unit id="e285c46b0b0caa88d830ae22cec9c07461edbc2a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;new,_initialize_and_allocate&quot;&gt;allocate&lt;/a&gt; class method.</source>
          <target state="translated">Метод &lt;a href=&quot;new,_initialize_and_allocate&quot;&gt;выделения&lt;/a&gt; класса.</target>
        </trans-unit>
        <trans-unit id="4a5ddc72996f1445364e8e166d40e3844178b506" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;ternary_if&quot;&gt;conditional operator (&lt;code&gt;? :&lt;/code&gt;)&lt;/a&gt; is internally rewritten to an &lt;code&gt;if&lt;/code&gt; expression by the compiler.</source>
          <target state="translated">&lt;a href=&quot;ternary_if&quot;&gt;Условный оператор ( &lt;code&gt;? :&lt;/code&gt; )&lt;/a&gt; Внутренне переписывается на , &lt;code&gt;if&lt;/code&gt; выражение компилятором.</target>
        </trans-unit>
        <trans-unit id="d4f72334cc91327c1234f2b172d59aa15c18d9ad" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;ternary_if&quot;&gt;conditional operator (&lt;code&gt;? :&lt;/code&gt;)&lt;/a&gt; is the only ternary operator. It not parsed as a method, and its meaning cannot be changed. The compiler transforms it to an &lt;code&gt;if&lt;/code&gt; expression.</source>
          <target state="translated">&lt;a href=&quot;ternary_if&quot;&gt;Условный оператор ( &lt;code&gt;? :&lt;/code&gt; )&lt;/a&gt; Является единственным Тернарным оператором. Он не анализируется как метод, и его значение нельзя изменить. Компилятор преобразует его в выражение &lt;code&gt;if&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="96253c38579dc948c432deceeb44fa844060b4e9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;!&lt;/code&gt; operator returns a &lt;code&gt;Bool&lt;/code&gt; that results from negating the &lt;a href=&quot;truthy_and_falsey_values&quot;&gt;truthiness&lt;/a&gt; of a value.</source>
          <target state="translated">&lt;code&gt;!&lt;/code&gt; Оператор возвращает &lt;code&gt;Bool&lt;/code&gt; , который является результатом отрицания &lt;a href=&quot;truthy_and_falsey_values&quot;&gt;истинности&lt;/a&gt; значения.</target>
        </trans-unit>
        <trans-unit id="8ffe618e2a8ef01a20272c5e56b48b0b333e5993" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;!&lt;/code&gt; operator returns a &lt;code&gt;Bool&lt;/code&gt; that results from negating the &lt;a href=&quot;truthy_and_falsey_values&quot;&gt;truthyness&lt;/a&gt; of a value.</source>
          <target state="translated">&lt;code&gt;!&lt;/code&gt; Оператор возвращает &lt;code&gt;Bool&lt;/code&gt; , который возникает в результате отрицания &lt;a href=&quot;truthy_and_falsey_values&quot;&gt;истинности&lt;/a&gt; значения.</target>
        </trans-unit>
        <trans-unit id="490b93fa8a1e27c8567b9c416cb939c87b9f2632" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--static&lt;/code&gt; flag can be used to build a statically-linked executable:</source>
          <target state="translated">&lt;code&gt;--static&lt;/code&gt; флаг может быть использован для создания статический связанный исполняемого файла:</target>
        </trans-unit>
        <trans-unit id="ea6e15fc185b6dfeac938fd9a1ffd46ffc3d358a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; to which output is written.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; , к которому вывод записывается.</target>
        </trans-unit>
        <trans-unit id="ac6f996083ee75513b9c0622ab116bc40fbbfd0d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; to which output is written. This can be changed/wrapped to filter the response body (for example to compress the output).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; , к которому вывод записывается. Это можно изменить / обернуть для фильтрации тела ответа (например, для сжатия вывода).</target>
        </trans-unit>
        <trans-unit id="3d606796b7ffef005975a53d91be2922acb7c88a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; class raises on this method, but some subclasses, notable &lt;code&gt;&lt;a href=&quot;filedescriptor&quot;&gt;IO::FileDescriptor&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;memory&quot;&gt;IO::Memory&lt;/a&gt;&lt;/code&gt; implement it.</source>
          <target state="translated">Класс &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; возникает в этом методе, но некоторые подклассы, в частности &lt;code&gt;&lt;a href=&quot;filedescriptor&quot;&gt;IO::FileDescriptor&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;memory&quot;&gt;IO::Memory&lt;/a&gt;&lt;/code&gt; реализуют его.</target>
        </trans-unit>
        <trans-unit id="2bfb537ff65327de4be88b51937e23fd9a3c3222" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; starts at position zero for reading.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; начинается в положении нулевой для чтения.</target>
        </trans-unit>
        <trans-unit id="a2d8623f015a9cb39650eea2561c1944b60bbbe4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../request&quot;&gt;HTTP::Request&lt;/a&gt;&lt;/code&gt; to process.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../request&quot;&gt;HTTP::Request&lt;/a&gt;&lt;/code&gt; процессу.</target>
        </trans-unit>
        <trans-unit id="2449083bb09518a3085fda8069a88dd99b5c3ddf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;base64&quot;&gt;Base64&lt;/a&gt;&lt;/code&gt; module provides for the encoding (&lt;code&gt;&lt;a href=&quot;base64#encode(data,io:IO)-instance-method&quot;&gt;#encode&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;base64#strict_encode(data,io:IO)-instance-method&quot;&gt;#strict_encode&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;base64#urlsafe_encode(data,io:IO)-instance-method&quot;&gt;#urlsafe_encode&lt;/a&gt;&lt;/code&gt;) and decoding (&lt;code&gt;&lt;a href=&quot;base64#decode(data,io:IO)-instance-method&quot;&gt;#decode&lt;/a&gt;&lt;/code&gt;) of binary data using a base64 representation.</source>
          <target state="translated">Модуль &lt;code&gt;&lt;a href=&quot;base64&quot;&gt;Base64&lt;/a&gt;&lt;/code&gt; обеспечивает кодирование ( &lt;code&gt;&lt;a href=&quot;base64#encode(data,io:IO)-instance-method&quot;&gt;#encode&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;base64#strict_encode(data,io:IO)-instance-method&quot;&gt;#strict_encode&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;base64#urlsafe_encode(data,io:IO)-instance-method&quot;&gt;#urlsafe_encode&lt;/a&gt;&lt;/code&gt; ) и декодирование ( &lt;code&gt;&lt;a href=&quot;base64#decode(data,io:IO)-instance-method&quot;&gt;#decode&lt;/a&gt;&lt;/code&gt; ) двоичных данных с использованием представления base64.</target>
        </trans-unit>
        <trans-unit id="a6ee35869cac14a531a7b253e35d51d63147cd54" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;buffered&quot;&gt;IO::Buffered&lt;/a&gt;&lt;/code&gt; mixin enhances an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; with input/output buffering.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;buffered&quot;&gt;IO::Buffered&lt;/a&gt;&lt;/code&gt; Mixin увеличивает в &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; с входной / выходной буферизации.</target>
        </trans-unit>
        <trans-unit id="a4baf8b05e49b63254c86b0bfb6a0362441300b0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;class#===(other)-instance-method&quot;&gt;#===&lt;/a&gt;&lt;/code&gt; method is used in a &lt;code&gt;case ... when ... end&lt;/code&gt; expression.</source>
          <target state="translated">Метод &lt;code&gt;&lt;a href=&quot;class#===(other)-instance-method&quot;&gt;#===&lt;/a&gt;&lt;/code&gt; используется в &lt;code&gt;case ... when ... end&lt;/code&gt; выражения.</target>
        </trans-unit>
        <trans-unit id="5d24ad40f5b83fac23ce884f3cf12cda69553f89" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;&lt;/code&gt; mixin is used by classes whose objects may be ordered.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;&lt;/code&gt; Mixin используется классы, объекты могут быть упорядочены.</target>
        </trans-unit>
        <trans-unit id="376b7efcb75448c308ba7fb6037def1bb1b983be" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;crystal#main(&amp;amp;)-class-method&quot;&gt;Crystal.main&lt;/a&gt;&lt;/code&gt; can also be passed as a callback:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;crystal#main(&amp;amp;)-class-method&quot;&gt;Crystal.main&lt;/a&gt;&lt;/code&gt; также может быть передан в качестве обратного вызова:</target>
        </trans-unit>
        <trans-unit id="ad8290bb90b5f1437858cfc323146ec24775e9b9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;crystal#main(&amp;amp;block)-class-method&quot;&gt;Crystal.main&lt;/a&gt;&lt;/code&gt; can also be passed as a callback:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;crystal#main(&amp;amp;block)-class-method&quot;&gt;Crystal.main&lt;/a&gt;&lt;/code&gt; также может быть передан в качестве обратного вызова:</target>
        </trans-unit>
        <trans-unit id="e2dd8eefa52d45bf3a68c64c8b6b0cedf86a5ea3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;ecr#embed(filename,io_name)-macro&quot;&gt;ECR.embed&lt;/a&gt;&lt;/code&gt; line basically generates this Crystal code:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ecr#embed(filename,io_name)-macro&quot;&gt;ECR.embed&lt;/a&gt;&lt;/code&gt; линия в основном генерирует этот кристалл код:</target>
        </trans-unit>
        <trans-unit id="d212ff4d4b9a5d2a262b63edb9e728cd1a862022" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;ecr#render(filename)-macro&quot;&gt;ECR.render&lt;/a&gt;&lt;/code&gt; basically generates this Crystal code:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ecr#render(filename)-macro&quot;&gt;ECR.render&lt;/a&gt;&lt;/code&gt; в основном генерирует этот кристалл код:</target>
        </trans-unit>
        <trans-unit id="a29e0025fd93ab543490b6942bf347c950434113" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;enumerable&quot;&gt;Enumerable&lt;/a&gt;&lt;/code&gt; mixin provides collection classes with several traversal, searching, filtering and querying methods.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;enumerable&quot;&gt;Enumerable&lt;/a&gt;&lt;/code&gt; Mixin предоставляет классы коллекций с несколькими обхода, поиска, фильтрации и запрашивая методы.</target>
        </trans-unit>
        <trans-unit id="89001ef56839eb3ae93f9aab3105d47bc183f8f8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; class is the basis for all input and output in Crystal.</source>
          <target state="translated">Класс &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; является основой для всего ввода и вывода в Crystal.</target>
        </trans-unit>
        <trans-unit id="3d97a52980050bd221d532fed1a43c7e655ca59f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; class raises on this method, but some subclasses, notable &lt;code&gt;&lt;a href=&quot;file&quot;&gt;File&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;io/memory&quot;&gt;IO::Memory&lt;/a&gt;&lt;/code&gt; implement it.</source>
          <target state="translated">Класс &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; возникает в этом методе, но некоторые подклассы, известные &lt;code&gt;&lt;a href=&quot;file&quot;&gt;File&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;io/memory&quot;&gt;IO::Memory&lt;/a&gt;&lt;/code&gt; реализуют его.</target>
        </trans-unit>
        <trans-unit id="bdaab05f0c1838055646bb0617187a2febb2cccb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; class raises on this method, but some subclasses, notable &lt;code&gt;&lt;a href=&quot;io/filedescriptor&quot;&gt;IO::FileDescriptor&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;io/memory&quot;&gt;IO::Memory&lt;/a&gt;&lt;/code&gt; implement it.</source>
          <target state="translated">Класс &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; возникает в этом методе, но некоторые подклассы, такие как &lt;code&gt;&lt;a href=&quot;io/filedescriptor&quot;&gt;IO::FileDescriptor&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;io/memory&quot;&gt;IO::Memory&lt;/a&gt;&lt;/code&gt; реализуют его.</target>
        </trans-unit>
        <trans-unit id="e66da5ecce6c6e96db5f8e4765ae5c097d33c613" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;iterable&quot;&gt;Iterable&lt;/a&gt;&lt;/code&gt; mixin provides convenience methods to collection classes that provide an &lt;code&gt;&lt;a href=&quot;iterable#each-instance-method&quot;&gt;#each&lt;/a&gt;&lt;/code&gt; method that returns an &lt;code&gt;&lt;a href=&quot;iterator&quot;&gt;Iterator&lt;/a&gt;&lt;/code&gt; over the collection.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;iterable&quot;&gt;Iterable&lt;/a&gt;&lt;/code&gt; Mixin предоставляет удобные методы для классов коллекций , которые обеспечивают &lt;code&gt;&lt;a href=&quot;iterable#each-instance-method&quot;&gt;#each&lt;/a&gt;&lt;/code&gt; метод , который возвращает &lt;code&gt;&lt;a href=&quot;iterator&quot;&gt;Iterator&lt;/a&gt;&lt;/code&gt; по коллекции.</target>
        </trans-unit>
        <trans-unit id="f36f5d1994a6867a3e2f50a5f5be8afac215659f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;json#mapping(**_properties_)-macro&quot;&gt;JSON.mapping&lt;/a&gt;&lt;/code&gt; macro defines how an object is mapped to JSON.</source>
          <target state="translated">В &lt;code&gt;&lt;a href=&quot;json#mapping(**_properties_)-macro&quot;&gt;JSON.mapping&lt;/a&gt;&lt;/code&gt; макро определяет , как объект отображается в JSON.</target>
        </trans-unit>
        <trans-unit id="0916309fbd2e5a0b9ab03c37d215c0445540109b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;log&quot;&gt;Log&lt;/a&gt;&lt;/code&gt; class provides a logging utility that you can use to output messages.</source>
          <target state="translated">Класс &lt;code&gt;&lt;a href=&quot;log&quot;&gt;Log&lt;/a&gt;&lt;/code&gt; предоставляет утилиту ведения журнала, которую вы можете использовать для вывода сообщений.</target>
        </trans-unit>
        <trans-unit id="d5cf6b45cfcd7d76e10e9132b2e9c19b5a51a967" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;log/entrieschecker&quot;&gt;EntriesChecker&lt;/a&gt;&lt;/code&gt; will hold a list of emitted entries.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;log/entrieschecker&quot;&gt;EntriesChecker&lt;/a&gt;&lt;/code&gt; проведет список испускаемых записей.</target>
        </trans-unit>
        <trans-unit id="014421491d70ac6b110faecf08d5240d3ff0fe32" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;logger&quot;&gt;Logger&lt;/a&gt;&lt;/code&gt; class provides a simple but sophisticated logging utility that you can use to output messages.</source>
          <target state="translated">Класс &lt;code&gt;&lt;a href=&quot;logger&quot;&gt;Logger&lt;/a&gt;&lt;/code&gt; предоставляет простую, но сложную утилиту ведения журнала, которую вы можете использовать для вывода сообщений.</target>
        </trans-unit>
        <trans-unit id="38e8da265a75e7cd0e55b8ead7b933806679cfbe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;macros&quot;&gt;Macros&lt;/a&gt;&lt;/code&gt; module is a fictitious module used to document macros and macro methods.</source>
          <target state="translated">Модуль &lt;code&gt;&lt;a href=&quot;macros&quot;&gt;Macros&lt;/a&gt;&lt;/code&gt; - это вымышленный модуль, используемый для документирования макросов и методов макросов.</target>
        </trans-unit>
        <trans-unit id="ef3cc6f44cf00521552efdff0ffaccd2b27cc9d7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;macros#run(filename,*args):MacroId-instance-method&quot;&gt;#run&lt;/a&gt;&lt;/code&gt; macro is useful when the subset of available macro methods are not enough for your purposes and you need something more powerful. With &lt;code&gt;&lt;a href=&quot;macros#run(filename,*args):MacroId-instance-method&quot;&gt;#run&lt;/a&gt;&lt;/code&gt; you can read files at compile time, connect to the internet or to a database.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;macros#run(filename,*args):MacroId-instance-method&quot;&gt;#run&lt;/a&gt;&lt;/code&gt; макрос полезен , когда подмножество доступных макросов методов не достаточно для ваших целей , и вам нужно что - то более мощное. С &lt;code&gt;&lt;a href=&quot;macros#run(filename,*args):MacroId-instance-method&quot;&gt;#run&lt;/a&gt;&lt;/code&gt; вы можете читать файлы во время компиляции, подключаться к Интернету или к базе данных.</target>
        </trans-unit>
        <trans-unit id="bb4ee1bfa6b4f83e99821f279a58d860dc36da7c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;multipart&quot;&gt;MIME::Multipart&lt;/a&gt;&lt;/code&gt; module contains utilities for parsing MIME multipart messages, which contain multiple body parts, each containing a header section and binary body. The &lt;code&gt;multipart/form-data&lt;/code&gt; content-type has a separate set of utilities in the &lt;code&gt;&lt;a href=&quot;../http/formdata&quot;&gt;HTTP::FormData&lt;/a&gt;&lt;/code&gt; module.</source>
          <target state="translated">Модуль &lt;code&gt;&lt;a href=&quot;multipart&quot;&gt;MIME::Multipart&lt;/a&gt;&lt;/code&gt; содержит утилиты для анализа составных сообщений MIME, которые содержат несколько частей тела, каждая из которых содержит раздел заголовка и двоичное тело. Тип содержимого &lt;code&gt;multipart/form-data&lt;/code&gt; имеет отдельный набор утилит в модуле &lt;code&gt;&lt;a href=&quot;../http/formdata&quot;&gt;HTTP::FormData&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fa9e51617d0ad128757f472750772087db256fa3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;nil&quot;&gt;Nil&lt;/a&gt;&lt;/code&gt; type has only one possible value: &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Тип &lt;code&gt;&lt;a href=&quot;nil&quot;&gt;Nil&lt;/a&gt;&lt;/code&gt; имеет только одно возможное значение: &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="78aab377343729c1663654f961a01fd4ecf2a0dd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;object#===(other:JSON::Any)-instance-method&quot;&gt;#===&lt;/a&gt;&lt;/code&gt; method is used in a &lt;code&gt;case ... when ... end&lt;/code&gt; expression.</source>
          <target state="translated">Метод &lt;code&gt;&lt;a href=&quot;object#===(other:JSON::Any)-instance-method&quot;&gt;#===&lt;/a&gt;&lt;/code&gt; используется в &lt;code&gt;case ... when ... end&lt;/code&gt; выражения.</target>
        </trans-unit>
        <trans-unit id="f40a434b8438c33291cb8865734695ab8703dc78" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;partialcomparable&quot;&gt;PartialComparable&lt;/a&gt;&lt;/code&gt; mixin is used by classes whose objects may be partially ordered.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;partialcomparable&quot;&gt;PartialComparable&lt;/a&gt;&lt;/code&gt; Mixin используется классов, объекты могут быть частично упорядочены.</target>
        </trans-unit>
        <trans-unit id="c7c09b196866b6574ae333546e8a67f52b3f88ca" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;proc#===(other:self)-instance-method&quot;&gt;#===&lt;/a&gt;&lt;/code&gt; method is used in a &lt;code&gt;case ... when ... end&lt;/code&gt; expression.</source>
          <target state="translated">Метод &lt;code&gt;&lt;a href=&quot;proc#===(other:self)-instance-method&quot;&gt;#===&lt;/a&gt;&lt;/code&gt; используется в &lt;code&gt;case ... when ... end&lt;/code&gt; выражения.</target>
        </trans-unit>
        <trans-unit id="56f748afe57b86f344e57a94faaf29a894bcfb7d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;response&quot;&gt;HTTP::Server::Response&lt;/a&gt;&lt;/code&gt; is a write-only &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;, so all &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; methods are available in it.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;response&quot;&gt;HTTP::Server::Response&lt;/a&gt;&lt;/code&gt; это только для записи &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; , поэтому все &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; методы доступны в нем.</target>
        </trans-unit>
        <trans-unit id="f22660ac8d42e93feed30daded69488777847c0c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;response&quot;&gt;HTTP::Server::Response&lt;/a&gt;&lt;/code&gt; to configure and write to.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;response&quot;&gt;HTTP::Server::Response&lt;/a&gt;&lt;/code&gt; для настройки и записи в.</target>
        </trans-unit>
        <trans-unit id="7b4eddb6add6350ed80b4785e1894f732898b535" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;serializable&quot;&gt;JSON::Serializable&lt;/a&gt;&lt;/code&gt; module automatically generates methods for JSON serialization when included.</source>
          <target state="translated">Модуль &lt;code&gt;&lt;a href=&quot;serializable&quot;&gt;JSON::Serializable&lt;/a&gt;&lt;/code&gt; автоматически генерирует методы для сериализации JSON при включении.</target>
        </trans-unit>
        <trans-unit id="75fe18a3714f0812cf8057f8e6835b0ed0d25d90" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;serializable&quot;&gt;YAML::Serializable&lt;/a&gt;&lt;/code&gt; module automatically generates methods for YAML serialization when included.</source>
          <target state="translated">Модуль &lt;code&gt;&lt;a href=&quot;serializable&quot;&gt;YAML::Serializable&lt;/a&gt;&lt;/code&gt; автоматически генерирует методы для сериализации YAML при включении.</target>
        </trans-unit>
        <trans-unit id="77f52696379fafc552f322224eb96d3c5b2a9bfd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;server/response&quot;&gt;HTTP::Server::Response&lt;/a&gt;&lt;/code&gt; is a write-only &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;, so all &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; methods are available on it for sending the response body.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;server/response&quot;&gt;HTTP::Server::Response&lt;/a&gt;&lt;/code&gt; это только для записи &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; , поэтому все &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; методы доступны на нем для отправки тела ответа.</target>
        </trans-unit>
        <trans-unit id="e4c8345788aed6fad6d47b4bce5124005fdcff72" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;server/response&quot;&gt;HTTP::Server::Response&lt;/a&gt;&lt;/code&gt; object has &lt;code&gt;status&lt;/code&gt; and &lt;code&gt;headers&lt;/code&gt; properties that can be configured before writing the response body. Once any response output has been written, changing the &lt;code&gt;status&lt;/code&gt; and &lt;code&gt;headers&lt;/code&gt; properties has no effect.</source>
          <target state="translated">Объект &lt;code&gt;&lt;a href=&quot;server/response&quot;&gt;HTTP::Server::Response&lt;/a&gt;&lt;/code&gt; имеет свойства &lt;code&gt;status&lt;/code&gt; и &lt;code&gt;headers&lt;/code&gt; , которые можно настроить перед записью тела ответа. Как только любой ответный ответ был записан, изменение &lt;code&gt;status&lt;/code&gt; и свойств &lt;code&gt;headers&lt;/code&gt; не имеет никакого эффекта.</target>
        </trans-unit>
        <trans-unit id="136d0870e5c874f19d02d21425b27db16d59ca13" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;token/kind&quot;&gt;Kind&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;token/kind&quot;&gt;Kind&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a9c3ef6a4b6c110967f8aa9adbdac35c23ad7701" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;yaml#mapping(**_properties_)-macro&quot;&gt;YAML.mapping&lt;/a&gt;&lt;/code&gt; macro defines how an object is mapped to YAML.</source>
          <target state="translated">В &lt;code&gt;&lt;a href=&quot;yaml#mapping(**_properties_)-macro&quot;&gt;YAML.mapping&lt;/a&gt;&lt;/code&gt; макро определяет , как объект отображается на YAML.</target>
        </trans-unit>
        <trans-unit id="f942e7c831d9e0546a5c9c83000e42a6e941c257" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;=&lt;/code&gt; operator syntax sugar is also available to setters and indexers. Note that &lt;code&gt;||&lt;/code&gt; and &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; use the &lt;code&gt;[]?&lt;/code&gt; method to check for key presence.</source>
          <target state="translated">&lt;code&gt;=&lt;/code&gt; Синтаксис оператора сахар также доступен для инкубационных и индексаторов. Обратите внимание, что &lt;code&gt;||&lt;/code&gt; и &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; использовать &lt;code&gt;[]?&lt;/code&gt; метод проверки наличия ключа.</target>
        </trans-unit>
        <trans-unit id="a61b8948bb1cbdac7600998768b7bd5447d1eaf7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@[Flags]&lt;/code&gt; attribute makes the first constant's value be &lt;code&gt;1&lt;/code&gt;, and successive constants are multiplied by &lt;code&gt;2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;@[Flags]&lt;/code&gt; атрибут делает значение первой константы, будет &lt;code&gt;1&lt;/code&gt; , а последовательные константы умножается на &lt;code&gt;2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="98c426dfe2ef0e17e729dcdbe617dd04191cfe70" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@[ThreadLocal]&lt;/code&gt; attribute can be applied to class variables and C external variables. It makes them be thread local.</source>
          <target state="translated">&lt;code&gt;@[ThreadLocal]&lt;/code&gt; атрибут может быть применен к переменным класса и C внешних переменных. Это делает их локальными.</target>
        </trans-unit>
        <trans-unit id="75f6774d031682ec26bb77e23ce1ef7148016bb6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Array#map&lt;/code&gt; method uses the block's type as the generic type for the Array. Without the &lt;code&gt;as&lt;/code&gt; pseudo-method, the inferred type would have been &lt;code&gt;Int32&lt;/code&gt; and we wouldn't have been able to add a &lt;code&gt;Float64&lt;/code&gt; into it.</source>
          <target state="translated">Метод &lt;code&gt;Array#map&lt;/code&gt; использует тип блока в качестве универсального типа для Array. Без , &lt;code&gt;as&lt;/code&gt; псевдо-метод, выведенный тип был бы &lt;code&gt;Int32&lt;/code&gt; , и мы не смогли бы добавить &lt;code&gt;Float64&lt;/code&gt; в него.</target>
        </trans-unit>
        <trans-unit id="02d67663b426c4e4ee4f49cf674951a5c07b82e9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TypeNode.instance_vars&lt;/code&gt; can be used to get an array of instance variable &lt;code&gt;MetaVar&lt;/code&gt; objects that would allow reading annotations defined on those instance variables.</source>
          <target state="translated">В &lt;code&gt;TypeNode.instance_vars&lt;/code&gt; можно использовать , чтобы получить массив переменных экземпляра &lt;code&gt;MetaVar&lt;/code&gt; объектов , которые позволили бы чтение аннотаций , определенных на этих переменных экземпляра.</target>
        </trans-unit>
        <trans-unit id="c1c71c557cb5fd0dfc5542f6e3e69672bbc48e5c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;args&lt;/code&gt; method can be used to read all positional arguments on an annotation as a &lt;code&gt;TupleLiteral&lt;/code&gt;. This method is defined on all annotations by default, and is unique to each applied annotation.</source>
          <target state="translated">Метод &lt;code&gt;args&lt;/code&gt; может использоваться для чтения всех позиционных аргументов в аннотации как &lt;code&gt;TupleLiteral&lt;/code&gt; . Этот метод определен для всех аннотаций по умолчанию и уникален для каждой примененной аннотации.</target>
        </trans-unit>
        <trans-unit id="ff32ae2e211e5b829fc4b02241f187117313fb6e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;as&lt;/code&gt; pseudo-method also allows to cast between pointer types:</source>
          <target state="translated">&lt;code&gt;as&lt;/code&gt; псевдо-метод также позволяет гипс между типами указателей:</target>
        </trans-unit>
        <trans-unit id="9cf0bccfbd5465269b0fc897a739f18a7f32078e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;as&lt;/code&gt; pseudo-method can be used to cast an expression to a &quot;bigger&quot; type. For example:</source>
          <target state="translated">&lt;code&gt;as&lt;/code&gt; псевдо-метод может быть использован , чтобы бросить выражение к &amp;laquo;большому&amp;raquo; типу. Например:</target>
        </trans-unit>
        <trans-unit id="1bf4746dbe840506cfd688dcb7378d52bf83d129" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;as&lt;/code&gt; pseudo-method performs a runtime check: if &lt;code&gt;a&lt;/code&gt; wasn't an &lt;code&gt;Int32&lt;/code&gt;, an &lt;a href=&quot;exception_handling&quot;&gt;exception&lt;/a&gt; is raised.</source>
          <target state="translated">&lt;code&gt;as&lt;/code&gt; псевдо-метод выполняет проверку выполнения: если не был &lt;code&gt;Int32&lt;/code&gt; , &lt;a href=&quot;exception_handling&quot;&gt;исключение&lt;/a&gt; поднимается. &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b7083725c498987142961bc69f0999a8244ccbcb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;as&lt;/code&gt; pseudo-method restricts the types of an expression. For example:</source>
          <target state="translated">&lt;code&gt;as&lt;/code&gt; псевдо-метод ограничивает типы выражения. Например:</target>
        </trans-unit>
        <trans-unit id="3d693b0558df5298a67bda8eeaab65d621969f9a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;as?&lt;/code&gt; pseudo-method is similar to &lt;code&gt;as&lt;/code&gt;, except that it returns &lt;code&gt;nil&lt;/code&gt; instead of raising an exception when the type doesn't match. It also can't be used to cast between pointer types and other types.</source>
          <target state="translated">То &lt;code&gt;as?&lt;/code&gt; псевдо-метод аналогичен , &lt;code&gt;as&lt;/code&gt; , за исключением того, что она возвращает &lt;code&gt;nil&lt;/code&gt; , а не поднимать исключение , если тип не соответствует. Его также нельзя использовать для приведения типов указателей к другим типам.</target>
        </trans-unit>
        <trans-unit id="11271dbd4a41bb6c28e6c54c4a9891f7760b2a50" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;before_script&lt;/code&gt; and &lt;code&gt;cache&lt;/code&gt; keys in the file are for running the same script in every job (&lt;code&gt;shards install&lt;/code&gt;) and for hanging onto the files that were created (&lt;code&gt;cache&lt;/code&gt;). They're not necessary if your shard doesn't have any dependencies.</source>
          <target state="translated">В &lt;code&gt;before_script&lt;/code&gt; и &lt;code&gt;cache&lt;/code&gt; ключей в файле, для запуска такой же сценарий в каждом задании ( &lt;code&gt;shards install&lt;/code&gt; ) и для подвешивания на файлы , которые были созданы ( &lt;code&gt;cache&lt;/code&gt; ). Они не нужны, если у вашего шарда нет зависимостей.</target>
        </trans-unit>
        <trans-unit id="3d86936accd4124dfa11b13017f14d802e431fe8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;colorize&lt;/code&gt; method returns a &lt;code&gt;&lt;a href=&quot;colorize/object&quot;&gt;Colorize::Object&lt;/a&gt;&lt;/code&gt; instance, which allows chaining methods together:</source>
          <target state="translated">Метод &lt;code&gt;colorize&lt;/code&gt; возвращает экземпляр &lt;code&gt;&lt;a href=&quot;colorize/object&quot;&gt;Colorize::Object&lt;/a&gt;&lt;/code&gt; , который позволяет объединять методы в цепочку:</target>
        </trans-unit>
        <trans-unit id="cfca9acc6bc8418967a49de47b0288f159aedc8b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;crystal build&lt;/code&gt; command builds a dynamically-linked binary executable.</source>
          <target state="translated">Команда &lt;code&gt;crystal build&lt;/code&gt; создает динамически связанный двоичный исполняемый файл.</target>
        </trans-unit>
        <trans-unit id="60221ce8357bf9321701766410a8923a503e839e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;crystal docs&lt;/code&gt; command generates API documentation from inline docstrings in Crystal files (see &lt;a href=&quot;../conventions/documenting_code&quot;&gt;documenting code&lt;/a&gt;).</source>
          <target state="translated">Команда &lt;code&gt;crystal docs&lt;/code&gt; генерирует документацию API из встроенных строк документации в файлах Crystal (см. &lt;a href=&quot;../conventions/documenting_code&quot;&gt;Документирование кода&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="8c7d32d461b915e078b01a181c6ef731e1790e95" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;crystal docs&lt;/code&gt; command generates API documentation from inline docstrings in Crystal files (see &lt;a href=&quot;https://crystal-lang.org/conventions/documenting_code.html&quot;&gt;documenting code&lt;/a&gt;).</source>
          <target state="translated">Команда &lt;code&gt;crystal docs&lt;/code&gt; генерирует документацию API из встроенных строк документации в файлах Crystal (см. &lt;a href=&quot;https://crystal-lang.org/conventions/documenting_code.html&quot;&gt;Документирование кода&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="a2c6ba6f58687334d3ce5f4efc30d9224dd3394b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;crystal env&lt;/code&gt; command prints environment variables used by Crystal.</source>
          <target state="translated">Команда &lt;code&gt;crystal env&lt;/code&gt; печатает переменные окружения, используемые Crystal.</target>
        </trans-unit>
        <trans-unit id="0448efad7e7e9e9d6b2b2403e407507671bde6b3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;crystal eval&lt;/code&gt; command reads Crystal source code from command line or stdin, compiles it to a binary executable and immediately runs it.</source>
          <target state="translated">Команда &lt;code&gt;crystal eval&lt;/code&gt; читает исходный код Crystal из командной строки или стандартного ввода, компилирует его в двоичный исполняемый файл и сразу же запускает его.</target>
        </trans-unit>
        <trans-unit id="b4766b0e054c96a1444b51194810fba9b9ca962d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;crystal init&lt;/code&gt; command initializes a Crystal project folder.</source>
          <target state="translated">Команда Crystal &lt;code&gt;crystal init&lt;/code&gt; инициализирует папку проекта Crystal.</target>
        </trans-unit>
        <trans-unit id="314bbca54f3cda66d2f8a21d16cd2b1ddb8452d9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;crystal play&lt;/code&gt; command starts a webserver serving an interactive Crystal playground.</source>
          <target state="translated">Команда Crystal &lt;code&gt;crystal play&lt;/code&gt; запускает веб-сервер, обслуживающий интерактивную игровую площадку Crystal.</target>
        </trans-unit>
        <trans-unit id="079101a55486986035bb64f5bf65982ae4a436f7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;crystal spec&lt;/code&gt; command compiles and runs a Crystal spec suite.</source>
          <target state="translated">В &lt;code&gt;crystal spec&lt;/code&gt; команда компилирует и запускает Кристал SPEC люкс.</target>
        </trans-unit>
        <trans-unit id="5b9dd66653d154a0ea34d6e3ef2e24d3481cc389" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;crystal tool format&lt;/code&gt; command applies default format to Crystal source files.</source>
          <target state="translated">Команда &lt;code&gt;crystal tool format&lt;/code&gt; Crystal применяет формат по умолчанию к исходным файлам Crystal.</target>
        </trans-unit>
        <trans-unit id="59a50dec667b4c30684788f9d54879f6a7c8ef68" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;crystal version&lt;/code&gt; command prints the Crystal version, LLVM version and default target triple.</source>
          <target state="translated">&lt;code&gt;crystal version&lt;/code&gt; команда выводит версию Crystal, версия LLVM и целевой по умолчанию в три раза.</target>
        </trans-unit>
        <trans-unit id="963b27b62eb97bed4b0c40e8b7b3272de351411e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;describe&lt;/code&gt;/&lt;code&gt;context&lt;/code&gt; that wraps this example or example group.</source>
          <target state="translated">&lt;code&gt;describe&lt;/code&gt; / &lt;code&gt;context&lt;/code&gt; , который обертывает этот пример или пример группы.</target>
        </trans-unit>
        <trans-unit id="0344dc160755c1bdcfefcc0e04e8d1c88539a83f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;finalize&lt;/code&gt; method will only be invoked once the object has been fully initialized via the &lt;code&gt;initialize&lt;/code&gt; method. If an exception is raised inside the &lt;code&gt;initialize&lt;/code&gt; method, &lt;code&gt;finalize&lt;/code&gt; won't be invoked. If your class defines a &lt;code&gt;finalize&lt;/code&gt; method, be sure to catch any exceptions that might be raised in the &lt;code&gt;initialize&lt;/code&gt; methods and free resources.</source>
          <target state="translated">Метод &lt;code&gt;finalize&lt;/code&gt; будет вызываться только после полной инициализации объекта с помощью метода &lt;code&gt;initialize&lt;/code&gt; . Если исключение возникает внутри метода &lt;code&gt;initialize&lt;/code&gt; , &lt;code&gt;finalize&lt;/code&gt; вызываться не будет. Если ваш класс определяет метод &lt;code&gt;finalize&lt;/code&gt; , обязательно перехватывайте любые исключения, которые могут возникнуть в методах &lt;code&gt;initialize&lt;/code&gt; и свободных ресурсах.</target>
        </trans-unit>
        <trans-unit id="2dc586d8c7772c2c755777f82871627e4adcf488" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;index&lt;/code&gt; variable in the above example is optional.</source>
          <target state="translated">&lt;code&gt;index&lt;/code&gt; переменной в приведенном выше примере является необязательным.</target>
        </trans-unit>
        <trans-unit id="828105cb7c8e8451e77576d83d5623cb1be400bd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;initial_capacity&lt;/code&gt; is useful to avoid unnecessary reallocations of the internal buffer in case of growth. If you have an estimate of the maximum number of elements a deque will hold, you should initialize it with that capacity for improved execution performance.</source>
          <target state="translated">&lt;code&gt;initial_capacity&lt;/code&gt; полезно , чтобы избежать ненужных перераспределений внутреннего буфера в случае роста. Если у вас есть оценка максимального количества элементов, которое будет содержать deque, вы должны инициализировать его с такой емкостью для повышения производительности выполнения.</target>
        </trans-unit>
        <trans-unit id="04b8e83cea5b8056c015a394838a2e84063296b7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;instance_sizeof&lt;/code&gt; expression returns an &lt;code&gt;Int32&lt;/code&gt; with the instance size of a given class. For example:</source>
          <target state="translated">&lt;code&gt;instance_sizeof&lt;/code&gt; выражение возвращает &lt;code&gt;Int32&lt;/code&gt; с размером экземпляра данного класса. Например:</target>
        </trans-unit>
        <trans-unit id="86e9f68437efb6eb33253ee818d7638c1e457ac7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;named_args&lt;/code&gt; method can be used to read all key/value pairs on an annotation as a &lt;code&gt;NamedTupleLiteral&lt;/code&gt;. This method is defined on all annotations by default, and is unique to each applied annotation.</source>
          <target state="translated">Метод &lt;code&gt;named_args&lt;/code&gt; может использоваться для чтения всех пар ключ / значение в аннотации как &lt;code&gt;NamedTupleLiteral&lt;/code&gt; . Этот метод определен для всех аннотаций по умолчанию и уникален для каждой примененной аннотации.</target>
        </trans-unit>
        <trans-unit id="5d1ce040c9328b66d9cae0bb66bf2d14c5a09455" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;next&lt;/code&gt; expression accepts arguments, and these give the value of the &lt;code&gt;yield&lt;/code&gt; expression that invoked the block:</source>
          <target state="translated">&lt;code&gt;next&lt;/code&gt; выражение принимает аргументы, и они дают значение &lt;code&gt;yield&lt;/code&gt; выражения, вызвавшей блок:</target>
        </trans-unit>
        <trans-unit id="f4ede1d2e182ddeaf133f3b20cd92f8fe7ba0c4d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;next&lt;/code&gt; expression inside a block exits early from the block (not the method). For example:</source>
          <target state="translated">&lt;code&gt;next&lt;/code&gt; выражение внутри блока выходит рано из блока (не метод). Например:</target>
        </trans-unit>
        <trans-unit id="59f8b8a3b88edee4251d8666694afb2946c6ee92" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pointerof&lt;/code&gt; expression returns a &lt;a href=&quot;http://crystal-lang.org/api/Pointer.html&quot;&gt;Pointer&lt;/a&gt; that points to the contents of a variable or instance variable.</source>
          <target state="translated">В &lt;code&gt;pointerof&lt;/code&gt; выражение возвращает &lt;a href=&quot;http://crystal-lang.org/api/Pointer.html&quot;&gt;указатель&lt;/a&gt; , который указывает на содержимое переменной переменной или экземпляра.</target>
        </trans-unit>
        <trans-unit id="640e2f0e04734dc60523f591a269ce6ea2deeb35" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;print_methods&lt;/code&gt; macro will be run as soon as it is encountered - and will print an empty list as there are no methods defined at that point. Once the second declaration of &lt;code&gt;Foo&lt;/code&gt; is compiled the &lt;code&gt;finished&lt;/code&gt; macro will be run, which will print &lt;code&gt;[bar]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;print_methods&lt;/code&gt; макрос будет работать , как только он встречается - и напечатает пустой список , так как не существует методов , определенных в этой точке. Как только второе объявление &lt;code&gt;Foo&lt;/code&gt; скомпилировано, будет запущен &lt;code&gt;finished&lt;/code&gt; макрос, который напечатает &lt;code&gt;[bar]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7769a33217f60d148a4093f91a18ee3f3d9cb487" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;run&lt;/code&gt; command compiles a source file to a binary executable and immediately runs it.</source>
          <target state="translated">Команда &lt;code&gt;run&lt;/code&gt; компилирует исходный файл в двоичный исполняемый файл и сразу же запускает его.</target>
        </trans-unit>
        <trans-unit id="9b6626f886032f0831007e66731f4767216020a7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;run&lt;/code&gt; command compiles the source file &lt;code&gt;hello_world.cr&lt;/code&gt; to a binary executable in a temporary location and immediately executes it.</source>
          <target state="translated">Команда &lt;code&gt;run&lt;/code&gt; компилирует исходный файл &lt;code&gt;hello_world.cr&lt;/code&gt; в двоичный исполняемый файл во временной папке и немедленно выполняет его.</target>
        </trans-unit>
        <trans-unit id="476c39fdfd41c30f38a5774c70eeba5ebe895ef6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;send&lt;/code&gt; methods may sporadically fail with &lt;code&gt;&lt;a href=&quot;errno#ECONNREFUSED&quot;&gt;Errno::ECONNREFUSED&lt;/a&gt;&lt;/code&gt; when sending datagrams to a non-listening server. Wrap with an exception handler to prevent raising. Example:</source>
          <target state="translated">В &lt;code&gt;send&lt;/code&gt; метода может спорадический неудача с &lt;code&gt;&lt;a href=&quot;errno#ECONNREFUSED&quot;&gt;Errno::ECONNREFUSED&lt;/a&gt;&lt;/code&gt; при передаче дейтаграмм на сервер без прослушивания. Оберните с помощью обработчика исключений для предотвращения повышения. Пример:</target>
        </trans-unit>
        <trans-unit id="53312acf6ae771222e3c1652706e0816074f801e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;send&lt;/code&gt; methods may sporadically fail with &lt;code&gt;&lt;a href=&quot;socket/connecterror&quot;&gt;Socket::ConnectError&lt;/a&gt;&lt;/code&gt; when sending datagrams to a non-listening server. Wrap with an exception handler to prevent raising. Example:</source>
          <target state="translated">В &lt;code&gt;send&lt;/code&gt; метода может спорадический неудача с &lt;code&gt;&lt;a href=&quot;socket/connecterror&quot;&gt;Socket::ConnectError&lt;/a&gt;&lt;/code&gt; при передаче дейтаграмм на сервер без прослушивания. Оберните обработчиком исключения, чтобы предотвратить повышение. Пример:</target>
        </trans-unit>
        <trans-unit id="a36cde71d7e58f2803f86c4457bfeab51950dc07" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sizeof&lt;/code&gt; expression returns an &lt;code&gt;Int32&lt;/code&gt; with the size in bytes of a given type. For example:</source>
          <target state="translated">&lt;code&gt;sizeof&lt;/code&gt; выражение возвращает &lt;code&gt;Int32&lt;/code&gt; с размером в байтах данного типа. Например:</target>
        </trans-unit>
        <trans-unit id="050175522f85efb6178a3193491b00060fcd72c7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;typeof&lt;/code&gt; expression returns the type of an expression:</source>
          <target state="translated">&lt;code&gt;typeof&lt;/code&gt; выражение возвращает тип выражения:</target>
        </trans-unit>
        <trans-unit id="f23b20935a9489a4485479be788dd6cd79706638" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;uri&lt;/code&gt; for this example is &lt;code&gt;mysql://root:root@localhost/test&lt;/code&gt;, and so the module will use the &lt;code&gt;mysql driver&lt;/code&gt; to connect to the MySQL database.</source>
          <target state="translated">&lt;code&gt;uri&lt;/code&gt; для этого примера &lt;code&gt;mysql://root:root@localhost/test&lt;/code&gt; , и поэтому модуль будет использовать &lt;code&gt;mysql driver&lt;/code&gt; для подключения к базе данных MySQL.</target>
        </trans-unit>
        <trans-unit id="c494b62b15d69a92665ae4b4ff266e06fe21f5bc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;yield&lt;/code&gt; expression is similar to a call and can receive arguments. For example:</source>
          <target state="translated">&lt;code&gt;yield&lt;/code&gt; выражение аналогично вызову и может принимать аргументы. Например:</target>
        </trans-unit>
        <trans-unit id="d0274a3410c672dca60fd3803cdf66a4f06d7a20" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;yield&lt;/code&gt; expression itself has a value: the last expression of the block. For example:</source>
          <target state="translated">Само выражение &lt;code&gt;yield&lt;/code&gt; имеет значение: последнее выражение блока. Например:</target>
        </trans-unit>
        <trans-unit id="84f2a4702b412b7487dc6196411fce9ee9b4f5e8" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;initial_capacity&lt;/em&gt; is useful to avoid unnecessary reallocations of the internal buffer in case of growth. If the number of elements a hash will hold is known, the hash should be initialized with that capacity for improved performance. Otherwise, the default is 11 and inputs less than 11 are ignored.</source>
          <target state="translated">&lt;em&gt;Initial_capacity&lt;/em&gt; полезно , чтобы избежать ненужных перераспределений внутреннего буфера в случае роста. Если число элементов, которое будет содержать хеш, известно, хеш должен быть инициализирован с такой емкостью для повышения производительности. В противном случае значение по умолчанию равно 11, а входные значения меньше 11 игнорируются.</target>
        </trans-unit>
        <trans-unit id="c6da883de0395a540f3169fd41268ac260cf90f5" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;initial_capacity&lt;/em&gt; is useful to avoid unnecessary reallocations of the internal buffer in case of growth. If the number of elements a hash will hold is known, the hash should be initialized with that capacity for improved performance. Otherwise, the default is 8. Inputs lower than 8 are ignored.</source>
          <target state="translated">Параметр &lt;em&gt;initial_capacity&lt;/em&gt; полезен, чтобы избежать ненужного перераспределения внутреннего буфера в случае роста. Если известно количество элементов, которые будет содержать хэш, хеш должен быть инициализирован с этой емкостью для повышения производительности. В противном случае значение по умолчанию - 8. Входы ниже 8 игнорируются.</target>
        </trans-unit>
        <trans-unit id="2ed78875a62987193980f5047120cbd761267d03" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;initial_capacity&lt;/em&gt; is useful to avoid unnecessary reallocations of the internal buffer in case of growth. If you have an estimate of the maximum number of elements an array will hold, the array should be initialized with that capacity for improved performance.</source>
          <target state="translated">&lt;em&gt;Initial_capacity&lt;/em&gt; полезно , чтобы избежать ненужных перераспределений внутреннего буфера в случае роста. Если у вас есть оценка максимального количества элементов, которые будет содержать массив, массив должен быть инициализирован с такой емкостью для повышения производительности.</target>
        </trans-unit>
        <trans-unit id="7baf271fb624856a3469e176c34f8fa3b89283f6" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;initial_capacity&lt;/em&gt; is useful to avoid unnecessary reallocations of the internal buffers in case of growth. If you have an estimate of the maximum number of elements the pool will hold it should be initialized with that capacity for improved performance.</source>
          <target state="translated">&lt;em&gt;Initial_capacity&lt;/em&gt; полезно , чтобы избежать ненужного перераспределения внутренних буферов в случае роста. Если у вас есть оценка максимального количества элементов, которые будет содержать пул, его следует инициализировать с этой емкостью для повышения производительности.</target>
        </trans-unit>
        <trans-unit id="082a9afbda2cb1b0f6552fd53000193048db0545" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;invalid&lt;/em&gt; argument can be:</source>
          <target state="translated">&lt;em&gt;Недействительный&lt;/em&gt; аргумент может быть:</target>
        </trans-unit>
        <trans-unit id="116ceb0ceef4ca1cee47533c2e118c6a52fb9b9a" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;other&lt;/em&gt; must have the same or fewer elements than this set, and all of elements in the &lt;em&gt;other&lt;/em&gt; set must be present in this set.</source>
          <target state="translated">У &lt;em&gt;другого&lt;/em&gt; должно быть такое же или меньшее количество элементов, чем у этого набора, и все элементы в &lt;em&gt;другом&lt;/em&gt; наборе должны присутствовать в этом наборе.</target>
        </trans-unit>
        <trans-unit id="6ffc77fd23d96be3ef2345da029c01227c05e67f" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;padding&lt;/em&gt; parameter defaults to &lt;code&gt;true&lt;/code&gt;. When &lt;code&gt;false&lt;/code&gt;, enough &lt;code&gt;=&lt;/code&gt; characters are not added to make the output divisible by 4.</source>
          <target state="translated">Параметр &lt;em&gt;заполнения по&lt;/em&gt; умолчанию имеет значение &lt;code&gt;true&lt;/code&gt; . Когда &lt;code&gt;false&lt;/code&gt; , достаточно &lt;code&gt;=&lt;/code&gt; символы не будут добавлены , чтобы сделать выходной делится на 4.</target>
        </trans-unit>
        <trans-unit id="45ed0a950ff4677992ea3425dd1059324956f95b" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;start&lt;/em&gt; argument can be negative to start counting from the end of the string.</source>
          <target state="translated">&lt;em&gt;Начала&lt;/em&gt; аргумент может быть отрицательным , чтобы начать отсчет с конца строки.</target>
        </trans-unit>
        <trans-unit id="26c74a8102f56eb2c014c035dc7e9ffee86aa61e" translate="yes" xml:space="preserve">
          <source>The Benchmark module provides methods for benchmarking Crystal code, giving detailed reports on the time and memory taken for each task.</source>
          <target state="translated">Модуль Бенчмарк предоставляет методы бенчмаркинга Кристаллического кода,давая детальные отчеты о затраченном времени и памяти для каждой задачи.</target>
        </trans-unit>
        <trans-unit id="43eea8c10c8c90a84f34a4b4355976aab9f9896e" translate="yes" xml:space="preserve">
          <source>The C name can be put in quotes to be able to write a name that is not a valid identifier:</source>
          <target state="translated">Имя C может быть заключено в кавычки,чтобы иметь возможность написать имя,которое не является допустимым идентификатором:</target>
        </trans-unit>
        <trans-unit id="06b113212ff65a376be85230db339448ba08baf9" translate="yes" xml:space="preserve">
          <source>The Compress::Zip module contains readers and writers of the zip file format, described at &lt;a href=&quot;https://pkware.cachefly.net/webdocs/APPNOTE/APPNOTE-6.3.3.TXT&quot;&gt;PKWARE's site&lt;/a&gt;.</source>
          <target state="translated">Модуль Compress :: Zip содержит программы для чтения и записи файлов формата zip, описанных на &lt;a href=&quot;https://pkware.cachefly.net/webdocs/APPNOTE/APPNOTE-6.3.3.TXT&quot;&gt;сайте PKWARE&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="aa2f817b2d97c10cf60b8f8fbcf0b8338c76aec2" translate="yes" xml:space="preserve">
          <source>The Compress::Zlib module contains readers and writers of zlib format compressed data, as specified in &lt;a href=&quot;https://www.ietf.org/rfc/rfc1950.txt&quot;&gt;RFC 1950&lt;/a&gt;.</source>
          <target state="translated">Модуль Compress :: Zlib содержит средства чтения и записи сжатых данных в формате zlib, как указано в &lt;a href=&quot;https://www.ietf.org/rfc/rfc1950.txt&quot;&gt;RFC 1950&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ebded078f2c9bc998559ff22d6a51ef0c260511f" translate="yes" xml:space="preserve">
          <source>The Crystal &lt;a href=&quot;https://crystal-lang.org/api&quot;&gt;Standard Library&lt;/a&gt; provides macros which simplify the definition of getter and setter methods:</source>
          <target state="translated">&lt;a href=&quot;https://crystal-lang.org/api&quot;&gt;Стандартная библиотека&lt;/a&gt; Crystal предоставляет макросы, которые упрощают определение методов получения и установки:</target>
        </trans-unit>
        <trans-unit id="11bcce27589af8645d623b8e1591692cd37533a1" translate="yes" xml:space="preserve">
          <source>The Crystal compiler doesn't run on Windows &lt;em&gt;yet&lt;/em&gt;. But Crystal can be used with the &lt;a href=&quot;https://msdn.microsoft.com/en-us/commandline/wsl/about&quot;&gt;Windows Subsystem for Linux&lt;/a&gt;, a compatibility-layer for Linux executables running natively on Windows 10.</source>
          <target state="translated">Компилятор Кристалл не работает на Windows , &lt;em&gt;тем не менее&lt;/em&gt; . Но Crystal можно использовать с &lt;a href=&quot;https://msdn.microsoft.com/en-us/commandline/wsl/about&quot;&gt;подсистемой Windows для Linux&lt;/a&gt; , уровнем совместимости для исполняемых файлов Linux, работающих в Windows 10.</target>
        </trans-unit>
        <trans-unit id="246a934abe5eec85f56c980a571d87666319f371" translate="yes" xml:space="preserve">
          <source>The Crystal compiler has a &lt;code&gt;spec&lt;/code&gt; command with tools to constrain which examples get run and tailor the output.</source>
          <target state="translated">Компилятор Crystal имеет команду &lt;code&gt;spec&lt;/code&gt; с инструментами, позволяющими определить, какие примеры запускаются, и настроить вывод.</target>
        </trans-unit>
        <trans-unit id="ac9f8bc907d9554b2d118c48b43c52ba78e9435e" translate="yes" xml:space="preserve">
          <source>The Crystal compiler has a &lt;code&gt;spec&lt;/code&gt; command with tools to constrain which examples get run and tailor the output. All specs of a project are compiled and executed through the command &lt;code&gt;crystal spec&lt;/code&gt;.</source>
          <target state="translated">Компилятор Crystal имеет команду &lt;code&gt;spec&lt;/code&gt; с инструментами, позволяющими определить, какие примеры запускаются, и настроить вывод. Все спецификации проекта компилируются и выполняются с помощью команды &lt;code&gt;crystal spec&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d2853e9df7bba5ea8d57e5fe8ef5ae7ad099086e" translate="yes" xml:space="preserve">
          <source>The Crystal compiler will by default use pkg-config to find the locations of libraries to link with.</source>
          <target state="translated">Компилятор Crystal по умолчанию будет использовать pkg-config для поиска мест расположения библиотек,с которыми можно установить связь.</target>
        </trans-unit>
        <trans-unit id="e8ec4c6d13530e32fb0a267e4fcd82138d0748b0" translate="yes" xml:space="preserve">
          <source>The Crystal repository is hosted at &lt;a href=&quot;https://github.com/crystal-lang/crystal&quot;&gt;crystal-lang/crystal&lt;/a&gt; on GitHub.</source>
          <target state="translated">Репозиторий Crystal находится на сайте &lt;a href=&quot;https://github.com/crystal-lang/crystal&quot;&gt;crystal-lang / crystal&lt;/a&gt; на GitHub.</target>
        </trans-unit>
        <trans-unit id="496565dce03820f56e8fc9474e24b5e134107258" translate="yes" xml:space="preserve">
          <source>The Crystal standard library includes some pre-defined annotations:</source>
          <target state="translated">Стандартная библиотека Crystal включает некоторые предопределенные аннотации:</target>
        </trans-unit>
        <trans-unit id="513ed30279f67f9dd200d1c674eced1ee2bd6317" translate="yes" xml:space="preserve">
          <source>The DB module, is our place to stand when working with databases in Crystal. As written in the documentation: &lt;em&gt;is a unified interface for database access&lt;/em&gt;.</source>
          <target state="translated">Модуль БД - это то, что нам нужно при работе с базами данных в Crystal. Как написано в документации: &lt;em&gt;это единый интерфейс для доступа к базе данных&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="167999917301411bb58f0f7dfb463b58db11dbc9" translate="yes" xml:space="preserve">
          <source>The Digest module contains implementations of hashing algorithms like &lt;code&gt;&lt;a href=&quot;digest/md5&quot;&gt;Digest::MD5&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;digest/sha1&quot;&gt;Digest::SHA1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Модуль Digest содержит реализации алгоритмов хеширования, таких как &lt;code&gt;&lt;a href=&quot;digest/md5&quot;&gt;Digest::MD5&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;digest/sha1&quot;&gt;Digest::SHA1&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5aaa7997408fd8ef83f3611fed91d6c095d4826b" translate="yes" xml:space="preserve">
          <source>The Event Loop, which is just another fiber, being in charge of async tasks, like for example files, sockets, pipes, signals and timers (like doing a &lt;code&gt;sleep&lt;/code&gt;).</source>
          <target state="translated">Цикл событий, который является просто еще одним волокном, отвечает за асинхронные задачи, такие как, например, файлы, сокеты, каналы, сигналы и таймеры (например, выполнение &lt;code&gt;sleep&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="2932829212c0aedee2b68bf1bf885f260e8e48c8" translate="yes" xml:space="preserve">
          <source>The Flate module contains readers and writers of DEFLATE format compressed data, as specified in &lt;a href=&quot;https://www.ietf.org/rfc/rfc1951.txt&quot;&gt;RFC 1951&lt;/a&gt;.</source>
          <target state="translated">Модуль Flate содержит устройства чтения и записи сжатых данных в формате DEFLATE, как указано в &lt;a href=&quot;https://www.ietf.org/rfc/rfc1951.txt&quot;&gt;RFC 1951&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d1a3a6862df64d2244b0c478f207f1efd99cc6a8" translate="yes" xml:space="preserve">
          <source>The Gzip module contains readers and writers of gzip format compressed data, as specified in &lt;a href=&quot;https://www.ietf.org/rfc/rfc1952.txt&quot;&gt;RFC 1952&lt;/a&gt;.</source>
          <target state="translated">Модуль Gzip содержит программы чтения и записи сжатых данных в формате gzip, как указано в &lt;a href=&quot;https://www.ietf.org/rfc/rfc1952.txt&quot;&gt;RFC 1952&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="80874a7a6067509ab808ed784692c5048c982967" translate="yes" xml:space="preserve">
          <source>The HTTP module contains &lt;code&gt;&lt;a href=&quot;http/client&quot;&gt;HTTP::Client&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;http/server&quot;&gt;HTTP::Server&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;http/websocket&quot;&gt;HTTP::WebSocket&lt;/a&gt;&lt;/code&gt; implementations.</source>
          <target state="translated">Модуль HTTP содержит реализации &lt;code&gt;&lt;a href=&quot;http/client&quot;&gt;HTTP::Client&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;http/server&quot;&gt;HTTP::Server&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;http/websocket&quot;&gt;HTTP::WebSocket&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7210a8d45812f1f6ad2d64962710554d301159a0" translate="yes" xml:space="preserve">
          <source>The IEC standard prefixes (&lt;code&gt;Ki&lt;/code&gt;, &lt;code&gt;Mi&lt;/code&gt;, &lt;code&gt;Gi&lt;/code&gt;, &lt;code&gt;Ti&lt;/code&gt;, &lt;code&gt;Pi&lt;/code&gt;, &lt;code&gt;Ei&lt;/code&gt;, &lt;code&gt;Zi&lt;/code&gt;, &lt;code&gt;Yi&lt;/code&gt;) based on powers of 1000.</source>
          <target state="translated">Стандартные префиксы IEC ( &lt;code&gt;Ki&lt;/code&gt; , &lt;code&gt;Mi&lt;/code&gt; , &lt;code&gt;Gi&lt;/code&gt; , &lt;code&gt;Ti&lt;/code&gt; , &lt;code&gt;Pi&lt;/code&gt; , &lt;code&gt;Ei&lt;/code&gt; , &lt;code&gt;Zi&lt;/code&gt; , &lt;code&gt;Yi&lt;/code&gt; ) основаны на мощностях 1000.</target>
        </trans-unit>
        <trans-unit id="17b7c182b134c533f4686ee776344c3a59482ff5" translate="yes" xml:space="preserve">
          <source>The IO starts at position zero for reading.</source>
          <target state="translated">IO начинается с нулевой позиции для считывания.</target>
        </trans-unit>
        <trans-unit id="6bafde48904d0ae0de3bcde7c34c01518d44c6c9" translate="yes" xml:space="preserve">
          <source>The ISO 8601 date format.</source>
          <target state="translated">Формат даты ISO 8601.</target>
        </trans-unit>
        <trans-unit id="a04d481795c047179a2ee48089b718eba567f7e5" translate="yes" xml:space="preserve">
          <source>The ISO 8601 date time format.</source>
          <target state="translated">Формат даты ISO 8601.</target>
        </trans-unit>
        <trans-unit id="1c961e8e18cc38295c61b2a7222c42aefba3c770" translate="yes" xml:space="preserve">
          <source>The ISO 8601 time format.</source>
          <target state="translated">Формат времени ISO 8601.</target>
        </trans-unit>
        <trans-unit id="43ed1dc44d29b51880fe516a3a988e2cf78bc72f" translate="yes" xml:space="preserve">
          <source>The ISO calendar year to which the week belongs is not always in the same as the year of the regular calendar date. The first three days of January sometimes belong to week 52 (or 53) of the previous year; equally the last three days of December sometimes are already in week 1 of the following year.</source>
          <target state="translated">Календарный год ИСО,которому принадлежит неделя,не всегда совпадает с годом обычной календарной даты.Первые три дня января иногда относятся к 52-й (или 53-й)неделе предыдущего года;равно как и последние три дня декабря,иногда уже относятся к 1-й неделе следующего года.</target>
        </trans-unit>
        <trans-unit id="228dafd6179d5875e92d7f01e81f1934d3aa42c8" translate="yes" xml:space="preserve">
          <source>The JSON format itself does not specify a time data type, this method just assumes that a string holding a ISO 8601 time format can be interpreted as a time value.</source>
          <target state="translated">Сам по себе формат JSON не указывает тип данных о времени,этот метод просто предполагает,что строка,содержащая формат времени ISO 8601,может быть интерпретирована как значение времени.</target>
        </trans-unit>
        <trans-unit id="1185e96419d9d1ed2f07417c50469963555dc1b6" translate="yes" xml:space="preserve">
          <source>The JSON format itself does not specify a time data type, this method just assumes that a string holding a RFC 3339 time format will be interpreted as a time value.</source>
          <target state="translated">Сам по себе формат JSON не указывает тип данных о времени,этот метод просто предполагает,что строка,содержащая формат времени RFC 3339,будет интерпретирована как значение времени.</target>
        </trans-unit>
        <trans-unit id="e3f3b7b16cf17dc7e84258d17d1db205edf18511" translate="yes" xml:space="preserve">
          <source>The JSON module allows parsing and generating &lt;a href=&quot;http://json.org/&quot;&gt;JSON&lt;/a&gt; documents.</source>
          <target state="translated">Модуль JSON позволяет анализировать и генерировать документы &lt;a href=&quot;http://json.org/&quot;&gt;JSON&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9f5c6c0766cb92bf425f36b14da6f837c49d4740" translate="yes" xml:space="preserve">
          <source>The OAuth module provides an &lt;code&gt;&lt;a href=&quot;oauth/consumer&quot;&gt;OAuth::Consumer&lt;/a&gt;&lt;/code&gt; as specified by &lt;a href=&quot;https://tools.ietf.org/html/rfc5849&quot;&gt;RFC 5849&lt;/a&gt;.</source>
          <target state="translated">Модуль OAuth предоставляет &lt;code&gt;&lt;a href=&quot;oauth/consumer&quot;&gt;OAuth::Consumer&lt;/a&gt;&lt;/code&gt; как указано в &lt;a href=&quot;https://tools.ietf.org/html/rfc5849&quot;&gt;RFC 5849&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5e0019e40cebf225476af7fc5485763fd0ab22a9" translate="yes" xml:space="preserve">
          <source>The OAuth module provides an &lt;code&gt;&lt;a href=&quot;oauth2/client&quot;&gt;OAuth2::Client&lt;/a&gt;&lt;/code&gt; as specified by &lt;a href=&quot;https://tools.ietf.org/html/rfc6749&quot;&gt;RFC 6749&lt;/a&gt;.</source>
          <target state="translated">Модуль OAuth предоставляет &lt;code&gt;&lt;a href=&quot;oauth2/client&quot;&gt;OAuth2::Client&lt;/a&gt;&lt;/code&gt; как указано в &lt;a href=&quot;https://tools.ietf.org/html/rfc6749&quot;&gt;RFC 6749&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e3d5ad4cc469d2e7b77356056225510ee84b1bf1" translate="yes" xml:space="preserve">
          <source>The Proc type</source>
          <target state="translated">Тип Proc</target>
        </trans-unit>
        <trans-unit id="fce18036495868d9659f03df3d44dfcec351c534" translate="yes" xml:space="preserve">
          <source>The Program</source>
          <target state="translated">Программа</target>
        </trans-unit>
        <trans-unit id="3f4b331987b1aaf724056fe853e6d70f80673e09" translate="yes" xml:space="preserve">
          <source>The Runtime Scheduler</source>
          <target state="translated">Планировщик выполнения</target>
        </trans-unit>
        <trans-unit id="102e2b07fdae53df53734526fd9c2db526c4e21b" translate="yes" xml:space="preserve">
          <source>The Runtime Scheduler, in charge of executing all fibers when the time is right.</source>
          <target state="translated">Планировщик времени выполнения,отвечающий за выполнение всех волокон в нужное время.</target>
        </trans-unit>
        <trans-unit id="e127a192f2256e22ef64756febf709a2977a36a8" translate="yes" xml:space="preserve">
          <source>The SSL server wraps a &lt;code&gt;&lt;a href=&quot;../tcpserver&quot;&gt;TCPServer&lt;/a&gt;&lt;/code&gt; listening on &lt;code&gt;host:port&lt;/code&gt;.</source>
          <target state="translated">Сервер SSL &lt;code&gt;&lt;a href=&quot;../tcpserver&quot;&gt;TCPServer&lt;/a&gt;&lt;/code&gt; прослушивающий &lt;code&gt;host:port&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="993cd52af8f852fbc873f8473c1d225a3a5acc7e" translate="yes" xml:space="preserve">
          <source>The SSL server wraps a &lt;code&gt;&lt;a href=&quot;../tcpserver&quot;&gt;TCPServer&lt;/a&gt;&lt;/code&gt; listening on an unused port on &lt;em&gt;host&lt;/em&gt;.</source>
          <target state="translated">Сервер SSL оборачивает &lt;code&gt;&lt;a href=&quot;../tcpserver&quot;&gt;TCPServer&lt;/a&gt;&lt;/code&gt; , прослушивающий неиспользуемый порт на &lt;em&gt;хосте&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="c1595db4bc4b8523c7b00f405e76d7d591c1dd0a" translate="yes" xml:space="preserve">
          <source>The String version just creates a new &lt;a href=&quot;http://crystal-lang.org/api/Exception.html&quot;&gt;Exception&lt;/a&gt; instance with that message.</source>
          <target state="translated">Версия String просто создает новый экземпляр &lt;a href=&quot;http://crystal-lang.org/api/Exception.html&quot;&gt;Exception&lt;/a&gt; с этим сообщением.</target>
        </trans-unit>
        <trans-unit id="8c80d2df18a6198b85456576a2042aee2a69b82d" translate="yes" xml:space="preserve">
          <source>The XML module allows parsing and generating &lt;a href=&quot;https://www.w3.org/XML/&quot;&gt;XML&lt;/a&gt; documents.</source>
          <target state="translated">Модуль XML позволяет анализировать и генерировать документы &lt;a href=&quot;https://www.w3.org/XML/&quot;&gt;XML&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8fb09953e062ea577b5ddb247457a645d3fb45fa" translate="yes" xml:space="preserve">
          <source>The YAML module provides serialization and deserialization of YAML version 1.1 to/from native Crystal data structures, with the additional independent types specified in http://yaml.org/type/</source>
          <target state="translated">Модуль YAML обеспечивает сериализацию и десериализацию YAML версии 1.1 в/из нативных структур данных Crystal,с дополнительными независимыми типами,указанными на http://yaml.org/type/.</target>
        </trans-unit>
        <trans-unit id="a44017a79d04272fe9a78e56baad945f7ca46c5b" translate="yes" xml:space="preserve">
          <source>The YAML::Nodes module provides an implementation of an in-memory YAML document tree. This tree can be generated with the &lt;code&gt;&lt;a href=&quot;nodes#parse(string_or_io:String%7CIO):Document-class-method&quot;&gt;YAML::Nodes.parse&lt;/a&gt;&lt;/code&gt; method or created with a &lt;code&gt;&lt;a href=&quot;nodes/builder&quot;&gt;YAML::Nodes::Builder&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Модуль YAML :: Nodes обеспечивает реализацию дерева документов YAML в памяти. Это дерево может быть сгенерировано с &lt;code&gt;&lt;a href=&quot;nodes#parse(string_or_io:String%7CIO):Document-class-method&quot;&gt;YAML::Nodes.parse&lt;/a&gt;&lt;/code&gt; метода YAML :: Nodes.parse или с помощью &lt;code&gt;&lt;a href=&quot;nodes/builder&quot;&gt;YAML::Nodes::Builder&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2c8dbee7cb1cee8bef1459835cb0aff74e8e33f2" translate="yes" xml:space="preserve">
          <source>The Zip module contains readers and writers of the zip file format, described at &lt;a href=&quot;https://pkware.cachefly.net/webdocs/APPNOTE/APPNOTE-6.3.3.TXT&quot;&gt;PKWARE's site&lt;/a&gt;.</source>
          <target state="translated">Модуль Zip содержит программы чтения и записи в формате ZIP, описанном на &lt;a href=&quot;https://pkware.cachefly.net/webdocs/APPNOTE/APPNOTE-6.3.3.TXT&quot;&gt;сайте PKWARE&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1ce59e4bdd57d98f027a247e2e6e5544e94683b0" translate="yes" xml:space="preserve">
          <source>The Zlib module contains readers and writers of zlib format compressed data, as specified in &lt;a href=&quot;https://www.ietf.org/rfc/rfc1950.txt&quot;&gt;RFC 1950&lt;/a&gt;.</source>
          <target state="translated">Модуль Zlib содержит программы чтения и записи сжатых данных в формате zlib, как указано в &lt;a href=&quot;https://www.ietf.org/rfc/rfc1950.txt&quot;&gt;RFC 1950&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="04ab87542e1530d800ac1df658fae4cbe6b51c49" translate="yes" xml:space="preserve">
          <source>The ability of having immediate feedback on what we are working should be one of the most important characteristics in software development. Imagine making one change to our source code and having to wait 2 weeks to see if it broke something? oh! That would be a nightmare! For this, Continuous Integration will help a team to have immediate and frequent feedback about the status of what they are building.</source>
          <target state="translated">Способность иметь немедленную обратную связь о том,над чем мы работаем,должна быть одной из важнейших характеристик при разработке программного обеспечения.Представьте себе,как мы вносим одно изменение в наш исходный код и вынуждены ждать 2 недели,чтобы увидеть,не сломал ли он что-нибудь? о! Это был бы кошмар! Для этого Постоянная Интеграция поможет команде иметь немедленную и частую обратную связь о состоянии того,что они собирают.</target>
        </trans-unit>
        <trans-unit id="4b5f00738405f1ed3933e935ceb50dd3dea27652" translate="yes" xml:space="preserve">
          <source>The above &lt;strong&gt;doesn&amp;rsquo;t&lt;/strong&gt; work with instance variables or class variables. To work with these, first assign them to a variable:</source>
          <target state="translated">Выше &lt;strong&gt;не&lt;/strong&gt; работает с переменными экземпляра или переменными класса. Для работы с ними сначала назначьте их переменной:</target>
        </trans-unit>
        <trans-unit id="a804ccbb78c43a03510970e8c8f2e9338d5413d2" translate="yes" xml:space="preserve">
          <source>The above also works if there are ands (&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;) in the condition:</source>
          <target state="translated">Вышеприведенное также работает, если в условии есть ands ( &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; ):</target>
        </trans-unit>
        <trans-unit id="54c602bba78ff08495ac576d900850a987bc8493" translate="yes" xml:space="preserve">
          <source>The above code captures the block of code passed to &lt;code&gt;int_to_int&lt;/code&gt; in the &lt;code&gt;block&lt;/code&gt; variable, and returns it from the method. The type of &lt;code&gt;proc&lt;/code&gt; is &lt;a href=&quot;http://crystal-lang.org/api/Proc.html&quot;&gt;Proc(Int32, Int32)&lt;/a&gt;, a function that accepts a single &lt;code&gt;Int32&lt;/code&gt; argument and returns an &lt;code&gt;Int32&lt;/code&gt;.</source>
          <target state="translated">Приведенный выше код захватывает блок кода, переданный в &lt;code&gt;int_to_int&lt;/code&gt; в переменной &lt;code&gt;block&lt;/code&gt; , и возвращает его из метода. Тип &lt;code&gt;proc&lt;/code&gt; - это &lt;a href=&quot;http://crystal-lang.org/api/Proc.html&quot;&gt;Proc (Int32, Int32)&lt;/a&gt; , функция, которая принимает один аргумент &lt;code&gt;Int32&lt;/code&gt; и возвращает &lt;code&gt;Int32&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="482726665ac9e182f65bd69d3da115ac7a67df13" translate="yes" xml:space="preserve">
          <source>The above code gives this compile error:</source>
          <target state="translated">Приведенный выше код дает эту ошибку компиляции:</target>
        </trans-unit>
        <trans-unit id="a6405d5019e9bc272db6cdff6739c053f2522b0b" translate="yes" xml:space="preserve">
          <source>The above code will make sense once you read the whole language reference, but we can already learn some things.</source>
          <target state="translated">Приведенный выше код будет иметь смысл,как только вы прочитаете всю ссылку на язык,но некоторые вещи мы уже можем изучить.</target>
        </trans-unit>
        <trans-unit id="5706d80d8aec1ab71b41a3a63a014d3965e051b9" translate="yes" xml:space="preserve">
          <source>The above could also be implemented with a Symbol:</source>
          <target state="translated">Вышеизложенное также может быть реализовано с помощью символа:</target>
        </trans-unit>
        <trans-unit id="2c83f99c41c0bff6b77243fc1d08e0f9b2324ef9" translate="yes" xml:space="preserve">
          <source>The above examples use unbuffered channels: when sending a value, if a fiber is waiting on that channel then execution continues on that fiber.</source>
          <target state="translated">Приведенные выше примеры используют небуферизованные каналы:при отправке значения,если волокно ждет на этом канале,то выполнение продолжается на этом волокне.</target>
        </trans-unit>
        <trans-unit id="656d5d691a11dc89cab934b727b7b657f2a26bf2" translate="yes" xml:space="preserve">
          <source>The above generates a program that will have the contents of &lt;code&gt;some_file.txt&lt;/code&gt;. The file, however, is read at compile time and will not be needed at runtime.</source>
          <target state="translated">Выше генерируется программа, которая будет иметь содержимое &lt;code&gt;some_file.txt&lt;/code&gt; . Файл, однако, читается во время компиляции и не понадобится во время выполнения.</target>
        </trans-unit>
        <trans-unit id="e6c433adda1b56a97e3e970be41047634b01806e" translate="yes" xml:space="preserve">
          <source>The above happens even if &lt;code&gt;something_dangerous_that_returns_Int32&lt;/code&gt; never raises, or if &lt;code&gt;a&lt;/code&gt; was assigned a value and then a method that potentially raises is executed:</source>
          <target state="translated">Вышеперечисленное происходит даже в том случае, если &lt;code&gt;something_dangerous_that_returns_Int32&lt;/code&gt; не так, а что-то опасное, никогда не повышается, или если &lt;code&gt;a&lt;/code&gt; было присвоено значение, а затем выполняется метод, который потенциально вызывает:</target>
        </trans-unit>
        <trans-unit id="bcb9caec3740c65229c0b2a54051836485d126ee" translate="yes" xml:space="preserve">
          <source>The above is mostly useful with flag enums.</source>
          <target state="translated">Вышеуказанное особенно полезно при использовании флаг-перечислений.</target>
        </trans-unit>
        <trans-unit id="1621fe8a8f7d10296061ab3f96abd962a66da91a" translate="yes" xml:space="preserve">
          <source>The above is simply rewritten to:</source>
          <target state="translated">Все вышесказанное просто переписано:</target>
        </trans-unit>
        <trans-unit id="9768279392033a963a63cadc30475985e7e4b6bb" translate="yes" xml:space="preserve">
          <source>The above is simply syntax sugar of this:</source>
          <target state="translated">Это просто синтаксис сахара:</target>
        </trans-unit>
        <trans-unit id="2a07a4b43f1d70c3a43cc842b0248805bbd090f0" translate="yes" xml:space="preserve">
          <source>The above is the same as this:</source>
          <target state="translated">Все то же самое:</target>
        </trans-unit>
        <trans-unit id="57a8c9f43fefd72d2d0f7808adbb754a2c6bc9c7" translate="yes" xml:space="preserve">
          <source>The above is useful for providing overloads based on types, not instances:</source>
          <target state="translated">Вышеуказанное полезно для обеспечения перегрузок по типам,а не по экземплярам:</target>
        </trans-unit>
        <trans-unit id="dbbbdd4bb540a3091716b8351544904cd0edd01b" translate="yes" xml:space="preserve">
          <source>The above logic works &lt;strong&gt;only for local variables&lt;/strong&gt;. It doesn&amp;rsquo;t work with instance variables, class variables, or variables bound in a closure. The value of these kinds of variables could potentially be affected by another fiber after the condition was checked, rendering it &lt;code&gt;nil&lt;/code&gt;. It also does not work with constants.</source>
          <target state="translated">Вышеприведенная логика работает &lt;strong&gt;только для локальных переменных&lt;/strong&gt; . Он не работает с переменными экземпляра, переменными класса или связанными в замыкании переменными. На значение этих типов переменных потенциально может влиять другое волокно после проверки условия, что делает его &lt;code&gt;nil&lt;/code&gt; . Это также не работает с константами.</target>
        </trans-unit>
        <trans-unit id="2a6b864cceaad721862897225ec878ce0958f539" translate="yes" xml:space="preserve">
          <source>The above methods delegate to a &lt;code&gt;&lt;a href=&quot;random&quot;&gt;Random&lt;/a&gt;&lt;/code&gt; instance.</source>
          <target state="translated">Вышеуказанные методы делегируют &lt;code&gt;&lt;a href=&quot;random&quot;&gt;Random&lt;/a&gt;&lt;/code&gt; экземпляр.</target>
        </trans-unit>
        <trans-unit id="b46c5f49ab483965caa577aae8f803d42b87ba7e" translate="yes" xml:space="preserve">
          <source>The above might not seem to be useful, but it is when, for example, mapping an array of elements:</source>
          <target state="translated">Вышеизложенное может показаться нецелесообразным,но это когда,например,наносится на карту массив элементов:</target>
        </trans-unit>
        <trans-unit id="2832d8248ae199f774368b1d496760735fcebca3" translate="yes" xml:space="preserve">
          <source>The above prints &quot;2&quot; and &quot;3&quot;.</source>
          <target state="translated">Вышеупомянутые отпечатки &quot;2&quot; и &quot;3&quot;.</target>
        </trans-unit>
        <trans-unit id="d90554e7b062fa330c4bc308bb8a055de1f577ae" translate="yes" xml:space="preserve">
          <source>The above prints &quot;Before 1&quot; and &quot;Before 2&quot;. The &lt;code&gt;thrice&lt;/code&gt; method didn't execute the &lt;code&gt;puts &quot;Before 3&quot;&lt;/code&gt; expression because of the &lt;code&gt;break&lt;/code&gt;.</source>
          <target state="translated">Выше приведены отпечатки &amp;laquo;До 1&amp;raquo; и &amp;laquo;До 2&amp;raquo;. &lt;code&gt;thrice&lt;/code&gt; метод не выполнить &lt;code&gt;puts &quot;Before 3&quot;&lt;/code&gt; выражения из-за &lt;code&gt;break&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3beb91c1e0a6c3144834c6803392d4652beaa01a" translate="yes" xml:space="preserve">
          <source>The above prints &quot;Got 1&quot; and &quot;Got 2&quot;.</source>
          <target state="translated">Вышеупомянутые отпечатки &quot;Получил 1&quot; и &quot;Получил 2&quot;.</target>
        </trans-unit>
        <trans-unit id="b44d7fd3b0fe5efd71b4f239ad69d0fc010d3afb" translate="yes" xml:space="preserve">
          <source>The above produces:</source>
          <target state="translated">Вышеупомянутое производит:</target>
        </trans-unit>
        <trans-unit id="5ca4589dcb158eaa50f8ae74813c4cf8260fdaa6" translate="yes" xml:space="preserve">
          <source>The above program prints &quot;10&quot; ten times. The problem is that there's only one variable &lt;code&gt;i&lt;/code&gt; that all spawned fibers refer to, and when &lt;code&gt;Fiber.yield&lt;/code&gt; is executed its value is 10.</source>
          <target state="translated">Вышеприведенная программа печатает &amp;laquo;10&amp;raquo; десять раз. Проблема в том, что есть только одна переменная &lt;code&gt;i&lt;/code&gt; ,к которой относятся все порожденные волокна, и когда &lt;code&gt;Fiber.yield&lt;/code&gt; выполняется, его значение равно 10.</target>
        </trans-unit>
        <trans-unit id="54d023ab647646c46ff7e0e093c24819eab0a23a" translate="yes" xml:space="preserve">
          <source>The above program prints &quot;Hello!&quot; twice, once for each &lt;code&gt;yield&lt;/code&gt;.</source>
          <target state="translated">Вышеприведенная программа печатает &quot;Привет!&quot; дважды, один раз для каждого &lt;code&gt;yield&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="078b0861ba82af5a528dc088249014a70f5efb1d" translate="yes" xml:space="preserve">
          <source>The above program spawns two fibers. The first one creates a TCPServer, accepts one connection and reads lines from it, sending them to the channel. There's a second fiber reading lines from standard input. The main fiber reads the first 3 messages sent to the channel, either from the socket or stdin, then the program exits. The &lt;code&gt;gets&lt;/code&gt; calls will block the fibers and tell the Event Loop to continue from there if data comes.</source>
          <target state="translated">Вышеуказанная программа порождает два волокна. Первый создает TCPServer, принимает одно соединение и читает строки из него, отправляя их на канал. Есть вторая линия считывания волокна из стандартного ввода. Основное волокно считывает первые 3 сообщения, отправленные на канал, либо из сокета, либо из stdin, затем программа завершается. &lt;code&gt;gets&lt;/code&gt; вызовы будут блокировать волокна и сказать цикл событий , чтобы продолжить оттуда , если приходит данные.</target>
        </trans-unit>
        <trans-unit id="11999f0a14eb703100105bc7165779496f6db462" translate="yes" xml:space="preserve">
          <source>The above program works but has a big performance problem: on every iteration a new array is created for &lt;code&gt;[&quot;crystal&quot;, &quot;ruby&quot;, &quot;java&quot;]&lt;/code&gt;. Remember: an array literal is just syntax sugar for creating an instance of an array and adding some values to it, and this will happen over and over on each iteration.</source>
          <target state="translated">Вышеприведенная программа работает, но имеет большую проблему с производительностью: на каждой итерации создается новый массив для &lt;code&gt;[&quot;crystal&quot;, &quot;ruby&quot;, &quot;java&quot;]&lt;/code&gt; . Помните: литерал массива - это просто синтаксический сахар для создания экземпляра массива и добавления к нему некоторых значений, и это будет происходить снова и снова на каждой итерации.</target>
        </trans-unit>
        <trans-unit id="f7e34974f2e9b5ad2ea8f1d31587680590b5c371" translate="yes" xml:space="preserve">
          <source>The above works, but creates many intermediate arrays: one for the &lt;em&gt;select&lt;/em&gt; call, one for the &lt;em&gt;map&lt;/em&gt; call and one for the &lt;em&gt;take&lt;/em&gt; call. A more efficient way is to invoke &lt;code&gt;&lt;a href=&quot;range#each(&amp;amp;):Nil-instance-method&quot;&gt;Range#each&lt;/a&gt;&lt;/code&gt; without a block, which gives us an &lt;code&gt;&lt;a href=&quot;iterator&quot;&gt;Iterator&lt;/a&gt;&lt;/code&gt; so we can process the operations lazily:</source>
          <target state="translated">Вышеупомянутое работает, но создает много промежуточных массивов: один для вызова &lt;em&gt;select&lt;/em&gt; , один для вызова &lt;em&gt;карты&lt;/em&gt; и один для вызова &lt;em&gt;take&lt;/em&gt; . Более эффективный способ - вызвать &lt;code&gt;&lt;a href=&quot;range#each(&amp;amp;):Nil-instance-method&quot;&gt;Range#each&lt;/a&gt;&lt;/code&gt; без блока, что дает нам &lt;code&gt;&lt;a href=&quot;iterator&quot;&gt;Iterator&lt;/a&gt;&lt;/code&gt; , чтобы мы могли лениво обрабатывать операции:</target>
        </trans-unit>
        <trans-unit id="7a7ff822add2855066bbeb49a4b5413bd1d285fb" translate="yes" xml:space="preserve">
          <source>The above works, but creates many intermediate arrays: one for the &lt;em&gt;select&lt;/em&gt; call, one for the &lt;em&gt;map&lt;/em&gt; call and one for the &lt;em&gt;take&lt;/em&gt; call. A more efficient way is to invoke &lt;code&gt;&lt;a href=&quot;range#each(&amp;amp;block):Nil-instance-method&quot;&gt;Range#each&lt;/a&gt;&lt;/code&gt; without a block, which gives us an &lt;code&gt;&lt;a href=&quot;iterator&quot;&gt;Iterator&lt;/a&gt;&lt;/code&gt; so we can process the operations lazily:</source>
          <target state="translated">Вышеописанное работает, но создает много промежуточных массивов: один для вызова &lt;em&gt;select&lt;/em&gt; , один для вызова &lt;em&gt;карты&lt;/em&gt; и один для вызова &lt;em&gt;take&lt;/em&gt; . Более эффективный способ - вызывать &lt;code&gt;&lt;a href=&quot;range#each(&amp;amp;block):Nil-instance-method&quot;&gt;Range#each&lt;/a&gt;&lt;/code&gt; без блока, что дает нам &lt;code&gt;&lt;a href=&quot;iterator&quot;&gt;Iterator&lt;/a&gt;&lt;/code&gt; чтобы мы могли обрабатывать операции лениво:</target>
        </trans-unit>
        <trans-unit id="4319040e3f3e88a7eb1830b2d394e99ce08e01cf" translate="yes" xml:space="preserve">
          <source>The advantage of being cooperative is that a lot of the overhead of doing a context switch (switching between threads) is gone.</source>
          <target state="translated">Преимущество сотрудничества заключается в том,что многие накладные расходы,связанные с переключением контекста (переключением между потоками),ушли в прошлое.</target>
        </trans-unit>
        <trans-unit id="a0483a1a0c683c09f20ecc1fd6d2bcfd420e1d72" translate="yes" xml:space="preserve">
          <source>The algorithm has a maximum password length limit of 71 characters (see &lt;a href=&quot;https://security.stackexchange.com/questions/39849/does-bcrypt-have-a-maximum-password-length#answer-39851&quot;&gt;this comment&lt;/a&gt; on stackoverflow).</source>
          <target state="translated">Алгоритм имеет максимальную длину пароля, равную 71 символу (см. &lt;a href=&quot;https://security.stackexchange.com/questions/39849/does-bcrypt-have-a-maximum-password-length#answer-39851&quot;&gt;Этот комментарий&lt;/a&gt; к stackoverflow).</target>
        </trans-unit>
        <trans-unit id="3294db75e75614f5dd83452e28cedbf76148708a" translate="yes" xml:space="preserve">
          <source>The alphabet uses &lt;code&gt;'-'&lt;/code&gt; instead of &lt;code&gt;'+'&lt;/code&gt; and &lt;code&gt;'_'&lt;/code&gt; instead of &lt;code&gt;'/'&lt;/code&gt;.</source>
          <target state="translated">Алфавит использует &lt;code&gt;'-'&lt;/code&gt; вместо &lt;code&gt;'+'&lt;/code&gt; и &lt;code&gt;'_'&lt;/code&gt; вместо &lt;code&gt;'/'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="035793fc19fac18085aa0de163c96552ee327c1a" translate="yes" xml:space="preserve">
          <source>The amount of time in seconds between keepalive probes.</source>
          <target state="translated">Количество времени в секундах между зондами keepalive.</target>
        </trans-unit>
        <trans-unit id="33aeecac47306b5c4fc40f7e0d08938931d0cd08" translate="yes" xml:space="preserve">
          <source>The amount of time in seconds the connection must be idle before sending keepalive probes.</source>
          <target state="translated">Время в секундах должно быть в режиме ожидания перед отправкой зондов keepalive.</target>
        </trans-unit>
        <trans-unit id="3194bc97bbc1a908e06eeb6fcf94b91e73e87ffb" translate="yes" xml:space="preserve">
          <source>The annotation can then be applied to various items, including:</source>
          <target state="translated">Аннотация может быть применена к различным позициям,в том числе:</target>
        </trans-unit>
        <trans-unit id="d085207e361cfeb24b4e38a7420e6c26047be8ad" translate="yes" xml:space="preserve">
          <source>The answer is that when we defined an &lt;code&gt;initialize&lt;/code&gt; method Crystal defined a &lt;code&gt;new&lt;/code&gt; method for us, like this:</source>
          <target state="translated">Ответ таков: когда мы определили метод &lt;code&gt;initialize&lt;/code&gt; Crystal определил для нас &lt;code&gt;new&lt;/code&gt; метод, например:</target>
        </trans-unit>
        <trans-unit id="f5ee68dc06a5633f096fb966481951f55ea2e0bc" translate="yes" xml:space="preserve">
          <source>The argument to sizeof is a &lt;a href=&quot;type_grammar&quot;&gt;type&lt;/a&gt; and is often combined with &lt;a href=&quot;typeof&quot;&gt;typeof&lt;/a&gt;:</source>
          <target state="translated">Аргумент для sizeof является &lt;a href=&quot;type_grammar&quot;&gt;типом&lt;/a&gt; и часто комбинируется с &lt;a href=&quot;typeof&quot;&gt;typeof&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="323085345e91d82985e77cff6266ff2095686196" translate="yes" xml:space="preserve">
          <source>The argument to the expression is a &lt;a href=&quot;type_grammar&quot;&gt;type&lt;/a&gt;.</source>
          <target state="translated">Аргументом выражения является &lt;a href=&quot;type_grammar&quot;&gt;тип&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="da9759706afb143256972cc4ed251794bf1313f8" translate="yes" xml:space="preserve">
          <source>The arguments are packed into an &lt;a href=&quot;https://crystal-lang.org/api/Crystal/Macros/ArrayLiteral.html&quot;&gt;&lt;code&gt;ArrayLiteral&lt;/code&gt;&lt;/a&gt; and passed to the macro.</source>
          <target state="translated">Аргументы упаковываются в &lt;a href=&quot;https://crystal-lang.org/api/Crystal/Macros/ArrayLiteral.html&quot;&gt; &lt;code&gt;ArrayLiteral&lt;/code&gt; &lt;/a&gt; и передаются в макрос.</target>
        </trans-unit>
        <trans-unit id="a91dcd292727eb9f345153e9183d1ce699549f42" translate="yes" xml:space="preserve">
          <source>The arguments can be string literals, symbol literals or plain names:</source>
          <target state="translated">Аргументами могут быть строковые литералы,символьные литералы или простые имена:</target>
        </trans-unit>
        <trans-unit id="a636e8953678708ca0f21117f0ec983b750f49f3" translate="yes" xml:space="preserve">
          <source>The array's generic type argument &lt;code&gt;T&lt;/code&gt; is inferred from the types of the elements inside the literal. When all elements of the array have the same type, &lt;code&gt;T&lt;/code&gt; equals to that. Otherwise it will be a union of all element types.</source>
          <target state="translated">Аргумент общего типа массива &lt;code&gt;T&lt;/code&gt; выводится из типов элементов внутри литерала. Когда все элементы массива имеют одинаковый тип, &lt;code&gt;T&lt;/code&gt; равен этому. В противном случае это будет объединение всех типов элементов.</target>
        </trans-unit>
        <trans-unit id="9f7094e46a09112bb790b3b6e2395450f11027f3" translate="yes" xml:space="preserve">
          <source>The assignment operator &lt;code&gt;=&lt;/code&gt; assigns the value of the second operand to the first operand. The first operand is either a variable (in this case the operator can't be redefined) or a call (in this case the operator can be redefined). See &lt;a href=&quot;assignment&quot;&gt;assignment&lt;/a&gt; for details.</source>
          <target state="translated">Оператор присваивания &lt;code&gt;=&lt;/code&gt; присваивает значение второго операнда первому операнду. Первый операнд - это либо переменная (в этом случае оператор не может быть переопределен), либо вызов (в этом случае оператор может быть переопределен). Подробности смотрите в &lt;a href=&quot;assignment&quot;&gt;задании&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d0e4d47921b9b0ea4286891ab14c908e3d50fef4" translate="yes" xml:space="preserve">
          <source>The assignment operator &lt;code&gt;=&lt;/code&gt; is the basis for all operators that combine an operator with assignment. The general form is &lt;code&gt;a &amp;lt;op&amp;gt;= b&lt;/code&gt; and the compiler transform that into &lt;code&gt;a = a &amp;lt;op&amp;gt; b&lt;/code&gt;.</source>
          <target state="translated">Оператор присваивания &lt;code&gt;=&lt;/code&gt; является основой для всех операторов, которые объединяют оператор с присваиванием. Общая форма - &lt;code&gt;a &amp;lt;op&amp;gt;= b&lt;/code&gt; и компилятор преобразует ее в &lt;code&gt;a = a &amp;lt;op&amp;gt; b&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="02666c97b2fb79ea47a69ae6a189d86846914eff" translate="yes" xml:space="preserve">
          <source>The backslash character \ can be used to escape ^ or - and is otherwise ignored unless it appears at the end of a range or set.</source>
          <target state="translated">Символ обратного слеша \ может быть использован для экранирования ^ или-и в противном случае игнорируется,если он не появляется в конце диапазона или набора.</target>
        </trans-unit>
        <trans-unit id="5d86a5e86d7e691edfb9db88221d3ee7f764eb3b" translate="yes" xml:space="preserve">
          <source>The begin and end values do not necessarily need to be of the same type: &lt;code&gt;true..1&lt;/code&gt; is a valid range, although pretty useless &lt;code&gt;Enumerable&lt;/code&gt; methods won't work with incompatible types. They need at least to be comparable.</source>
          <target state="translated">&lt;code&gt;true..1&lt;/code&gt; и конечное значения не обязательно должны быть одного типа: true..1 - допустимый диапазон, хотя довольно бесполезные методы &lt;code&gt;Enumerable&lt;/code&gt; не будут работать с несовместимыми типами. Они должны быть хотя бы сопоставимы.</target>
        </trans-unit>
        <trans-unit id="cd4ddc951b26d069c0e772446bd498bd0bee508a" translate="yes" xml:space="preserve">
          <source>The behavior of the pool can be configured from a set of parameters that can appear as query string in the connection URI.</source>
          <target state="translated">Поведение пула можно настроить из набора параметров,которые могут отображаться в URI соединения как строка запроса.</target>
        </trans-unit>
        <trans-unit id="669ab7eefaa697304280f141aa155d3622171703" translate="yes" xml:space="preserve">
          <source>The binary representation of this enum is defined to be same representation as the permission bits of a unix &lt;code&gt;st_mode&lt;/code&gt; field. &lt;code&gt;&lt;a href=&quot;permissions&quot;&gt;File::Permissions&lt;/a&gt;&lt;/code&gt; can also be compared to its underlying bitset, for example &lt;code&gt;File::Permissions::All == 0o777&lt;/code&gt; will always be &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Двоичное представление этого перечисления определяется как то же представление, что и биты разрешения поля unix &lt;code&gt;st_mode&lt;/code&gt; . &lt;code&gt;&lt;a href=&quot;permissions&quot;&gt;File::Permissions&lt;/a&gt;&lt;/code&gt; также можно сравнить с базовым &lt;code&gt;File::Permissions::All == 0o777&lt;/code&gt; , например File :: Permissions :: All == 0o777 всегда будет &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1ab2f00524963337e2687e919d2ba4266b9852d6" translate="yes" xml:space="preserve">
          <source>The block is called for each ascii character (codepoint less than &lt;code&gt;0x80&lt;/code&gt;) and determines whether the value is to be encoded. When the return value is falsey, the character is encoded. Non-ASCII characters are always encoded.</source>
          <target state="translated">Блок вызывается для каждого символа ascii (кодовая точка меньше &lt;code&gt;0x80&lt;/code&gt; ) и определяет, должно ли значение быть закодировано. Когда возвращаемое значение равно false, символ кодируется. Не-ASCII символы всегда кодируются.</target>
        </trans-unit>
        <trans-unit id="8735c5f0fae248dce7382e805df5c3e5cb97abe9" translate="yes" xml:space="preserve">
          <source>The block is called for each percent-encoded ASCII character and determines whether the value is to be decoded. When the return value is falsey, the character is decoded. Non-ASCII characters are always decoded.</source>
          <target state="translated">Блок вызывается для каждого процента закодированного ASCII символа и определяет,нужно ли декодировать значение.Когда возвращаемое значение ложно,символ декодируется.Символы,не относящиеся к ASCII,всегда декодируются.</target>
        </trans-unit>
        <trans-unit id="b678bb8396299b5eef554b024d236c7cd2a38419" translate="yes" xml:space="preserve">
          <source>The block is only evaluated if the current message is to be emitted to some &lt;code&gt;&lt;a href=&quot;log/backend&quot;&gt;Log::Backend&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Блок оценивается только в том случае, если текущее сообщение должно быть отправлено в некоторый &lt;code&gt;&lt;a href=&quot;log/backend&quot;&gt;Log::Backend&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8043c4c54dcf85a8a523df43794f910f810416a4" translate="yes" xml:space="preserve">
          <source>The block must call &lt;code&gt;run&lt;/code&gt; on the given &lt;code&gt;&lt;a href=&quot;example/procsy&quot;&gt;Example::Procsy&lt;/a&gt;&lt;/code&gt; object.</source>
          <target state="translated">Блок должен вызывать &lt;code&gt;run&lt;/code&gt; для данного объекта &lt;code&gt;&lt;a href=&quot;example/procsy&quot;&gt;Example::Procsy&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="170bf1c092f78ac38eb3948095b650af7a241e1f" translate="yes" xml:space="preserve">
          <source>The block must call &lt;code&gt;run&lt;/code&gt; on the given &lt;code&gt;&lt;a href=&quot;spec/example/procsy&quot;&gt;Example::Procsy&lt;/a&gt;&lt;/code&gt; object.</source>
          <target state="translated">Блок должен вызывать &lt;code&gt;run&lt;/code&gt; для данного объекта &lt;code&gt;&lt;a href=&quot;spec/example/procsy&quot;&gt;Example::Procsy&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="36ae9e679c7dc429ba208022cdd5e73ce2ddbf96" translate="yes" xml:space="preserve">
          <source>The block must call &lt;code&gt;run&lt;/code&gt; on the given &lt;code&gt;Context::Procsy&lt;/code&gt; object.</source>
          <target state="translated">Блок должен вызывать &lt;code&gt;run&lt;/code&gt; для данного объекта &lt;code&gt;Context::Procsy&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b40db3eab6d1f82e10559b92e03e896430461fe8" translate="yes" xml:space="preserve">
          <source>The block must implement a comparison between two elements &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt;, where &lt;code&gt;a &amp;lt; b&lt;/code&gt; returns &lt;code&gt;-1&lt;/code&gt;, &lt;code&gt;a == b&lt;/code&gt; returns &lt;code&gt;0&lt;/code&gt;, and &lt;code&gt;a &amp;gt; b&lt;/code&gt; returns &lt;code&gt;1&lt;/code&gt;. The comparison operator &lt;code&gt;&lt;a href=&quot;array#(other:Array)-instance-method&quot;&gt;#&amp;lt;=&amp;gt;&lt;/a&gt;&lt;/code&gt; can be used for this.</source>
          <target state="translated">Блок должен реализовать сравнение между двумя элементами &lt;em&gt;a&lt;/em&gt; и &lt;em&gt;b&lt;/em&gt; , где &lt;code&gt;a &amp;lt; b&lt;/code&gt; возвращает &lt;code&gt;-1&lt;/code&gt; , &lt;code&gt;a == b&lt;/code&gt; возвращает &lt;code&gt;0&lt;/code&gt; , а &lt;code&gt;a &amp;gt; b&lt;/code&gt; возвращает &lt;code&gt;1&lt;/code&gt; . Для этого можно использовать оператор сравнения &lt;code&gt;&lt;a href=&quot;array#(other:Array)-instance-method&quot;&gt;#&amp;lt;=&amp;gt;&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aa9315c1524c78e7c0ddfc771ed7729a661d31c6" translate="yes" xml:space="preserve">
          <source>The block must implement a comparison between two elements &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt;, where &lt;code&gt;a &amp;lt; b&lt;/code&gt; returns &lt;code&gt;-1&lt;/code&gt;, &lt;code&gt;a == b&lt;/code&gt; returns &lt;code&gt;0&lt;/code&gt;, and &lt;code&gt;a &amp;gt; b&lt;/code&gt; returns &lt;code&gt;1&lt;/code&gt;. The comparison operator &lt;code&gt;&lt;a href=&quot;slice#(other:Slice(U))forallU-instance-method&quot;&gt;#&amp;lt;=&amp;gt;&lt;/a&gt;&lt;/code&gt; can be used for this.</source>
          <target state="translated">Блок должен реализовать сравнение между двумя элементами &lt;em&gt;a&lt;/em&gt; и &lt;em&gt;b&lt;/em&gt; , где &lt;code&gt;a &amp;lt; b&lt;/code&gt; возвращает &lt;code&gt;-1&lt;/code&gt; , &lt;code&gt;a == b&lt;/code&gt; возвращает &lt;code&gt;0&lt;/code&gt; , а &lt;code&gt;a &amp;gt; b&lt;/code&gt; возвращает &lt;code&gt;1&lt;/code&gt; . Для этого можно использовать оператор сравнения &lt;code&gt;&lt;a href=&quot;slice#(other:Slice(U))forallU-instance-method&quot;&gt;#&amp;lt;=&amp;gt;&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d4af3fea31bddb946015db5a49cbbc1446d44eaf" translate="yes" xml:space="preserve">
          <source>The block variable &lt;code&gt;second&lt;/code&gt; also includes the &lt;code&gt;Nil&lt;/code&gt; type because the last &lt;code&gt;yield&lt;/code&gt; expression didn't include a second argument.</source>
          <target state="translated">Переменная block &lt;code&gt;second&lt;/code&gt; также включает тип &lt;code&gt;Nil&lt;/code&gt; , поскольку последнее выражение &lt;code&gt;yield&lt;/code&gt; не содержит второго аргумента.</target>
        </trans-unit>
        <trans-unit id="65004e032fc6f16412331ec9e39888aa714ed45c" translate="yes" xml:space="preserve">
          <source>The buffer is allocated on the stack, avoiding a heap allocation.</source>
          <target state="translated">Буфер распределяется по стеку,избегая выделения кучи.</target>
        </trans-unit>
        <trans-unit id="5e281794f250e6bc9b7f49810850e5b085ce50f5" translate="yes" xml:space="preserve">
          <source>The buffering behaviour can be turned on/off with the &lt;code&gt;&lt;a href=&quot;buffered#sync=(sync)-instance-method&quot;&gt;#sync=&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;buffered#read_buffering=(read_buffering)-instance-method&quot;&gt;#read_buffering=&lt;/a&gt;&lt;/code&gt; methods.</source>
          <target state="translated">Поведение буферизации может быть включено / выключено с помощью методов &lt;code&gt;&lt;a href=&quot;buffered#sync=(sync)-instance-method&quot;&gt;#sync=&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;buffered#read_buffering=(read_buffering)-instance-method&quot;&gt;#read_buffering=&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c5fac4f5ddc22b92b6edab3ab53e0bf3578ea340" translate="yes" xml:space="preserve">
          <source>The build metadata of this semantic version</source>
          <target state="translated">Метаданные сборки этой семантической версии</target>
        </trans-unit>
        <trans-unit id="8c028c8d7c168ec897f0714ce745b6b98bb2fdf8" translate="yes" xml:space="preserve">
          <source>The byte following the end of this slice (but not included in it) is defined to be zero. This allows passing the result of this function into C functions that expect a null-terminated &lt;code&gt;&lt;a href=&quot;uint16&quot;&gt;UInt16&lt;/a&gt;*&lt;/code&gt;.</source>
          <target state="translated">Байт, следующий за концом этого фрагмента (но не включенный в него), определен равным нулю. Это позволяет передавать результат этой функции в функции C, которые ожидают &lt;code&gt;&lt;a href=&quot;uint16&quot;&gt;UInt16&lt;/a&gt;*&lt;/code&gt; с нулевым символом в конце .</target>
        </trans-unit>
        <trans-unit id="12a7044b83e5b65e1f3f0799be7549d67873e29d" translate="yes" xml:space="preserve">
          <source>The bytes are encoded into a string of two-digit hexadecimal number (00-ff) per byte.</source>
          <target state="translated">Байты кодируются в строку двузначного шестнадцатеричного числа (00-ff)на байт.</target>
        </trans-unit>
        <trans-unit id="b1dc181c589c2c81315127fbf5bd01314efb8a97" translate="yes" xml:space="preserve">
          <source>The bytesize returned by the block must be less than or equal to the capacity given to this String, otherwise &lt;code&gt;&lt;a href=&quot;argumenterror&quot;&gt;ArgumentError&lt;/a&gt;&lt;/code&gt; is raised.</source>
          <target state="translated">Размер байта, возвращаемый блоком, должен быть меньше или равен емкости, данной этой строке, в противном случае &lt;code&gt;&lt;a href=&quot;argumenterror&quot;&gt;ArgumentError&lt;/a&gt;&lt;/code&gt; повышается.</target>
        </trans-unit>
        <trans-unit id="4ac8f2a086d4777e7a9b6e99489d3c44dad2d5b4" translate="yes" xml:space="preserve">
          <source>The calculation defaults to 5 seconds. During this stage we run the block in sets of the size calculated in the warmup stage. The measurements for those sets are then used to calculate the mean and standard deviation, which are then reported. Additionally we compare the means to that of the fastest.</source>
          <target state="translated">По умолчанию расчет производится в течение 5 секунд.На этом этапе мы запускаем блок в наборах размеров,рассчитанных на этапе прогрева.Измерения для этих наборов затем используются для вычисления среднего и стандартного отклонения,которые затем сообщаются.Дополнительно мы сравниваем средства с самыми быстрыми.</target>
        </trans-unit>
        <trans-unit id="59713a7aaa52a5d1c1bd0110014985176aee3f58" translate="yes" xml:space="preserve">
          <source>The calendaric calculations are based on the rules of the proleptic Gregorian calendar as specified in &lt;a href=&quot;http://xml.coverpages.org/ISO-FDIS-8601.pdf&quot;&gt;ISO 8601&lt;/a&gt;. Leap seconds are ignored.</source>
          <target state="translated">Календарные расчеты основаны на правилах пролептического григорианского календаря, как указано в &lt;a href=&quot;http://xml.coverpages.org/ISO-FDIS-8601.pdf&quot;&gt;ISO 8601&lt;/a&gt; . Дополнительные секунды игнорируются.</target>
        </trans-unit>
        <trans-unit id="e3e66a336341e952658cec3e2d3462555ba10f88" translate="yes" xml:space="preserve">
          <source>The chained assignment is not only available to &lt;a href=&quot;local_variables&quot;&gt;local variables&lt;/a&gt; but also to &lt;a href=&quot;methods_and_instance_variables&quot;&gt;instance variables&lt;/a&gt;, &lt;a href=&quot;class_variables&quot;&gt;class variables&lt;/a&gt; and setter methods (methods that end with &lt;code&gt;=&lt;/code&gt;).</source>
          <target state="translated">Прикованное назначение не доступно только для &lt;a href=&quot;local_variables&quot;&gt;локальных переменных&lt;/a&gt; , но и &lt;a href=&quot;methods_and_instance_variables&quot;&gt;переменного экземпляра&lt;/a&gt; , &lt;a href=&quot;class_variables&quot;&gt;переменного класса&lt;/a&gt; и сеттеров (методы , которые заканчиваются &lt;code&gt;=&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="35a8e6b73f0e3868ba4897491ad122eaaa7fc6aa" translate="yes" xml:space="preserve">
          <source>The character representing the end of a C string.</source>
          <target state="translated">Символ,представляющий конец строки C.</target>
        </trans-unit>
        <trans-unit id="c910e16543eb6089a1ced423cb3d9a507173e278" translate="yes" xml:space="preserve">
          <source>The child method can use &lt;code&gt;:inherit:&lt;/code&gt; to explicitly copy the parent's documentation, without the &lt;code&gt;Description copied from ...&lt;/code&gt; text. &lt;code&gt;:inherit:&lt;/code&gt; can also be used to inject the parent's documentation into additional documentation on the child.</source>
          <target state="translated">Дочерний метод может использовать &lt;code&gt;:inherit:&lt;/code&gt; для явного копирования родительской документации без &lt;code&gt;Description copied from ...&lt;/code&gt; текста. &lt;code&gt;:inherit:&lt;/code&gt; также можно использовать для добавления документации родителя в дополнительную документацию дочернего элемента.</target>
        </trans-unit>
        <trans-unit id="208619b92138c118ddc080424dc40dd23a936289" translate="yes" xml:space="preserve">
          <source>The class that signals that there are no more elements in an &lt;code&gt;&lt;a href=&quot;../iterator&quot;&gt;Iterator&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Класс, который сигнализирует, что в &lt;code&gt;&lt;a href=&quot;../iterator&quot;&gt;Iterator&lt;/a&gt;&lt;/code&gt; больше нет элементов .</target>
        </trans-unit>
        <trans-unit id="246e83a0b2cce47050e6415df87dfb215152ad82" translate="yes" xml:space="preserve">
          <source>The classic &quot;hello world&quot; program looks like this in Crystal:</source>
          <target state="translated">Классическая программа &quot;Привет,мир&quot; выглядит так в Кристалле:</target>
        </trans-unit>
        <trans-unit id="14e81c614990e3fc64f551193ff5594abcd10c89" translate="yes" xml:space="preserve">
          <source>The closing delimiter may be followed by a number of optional modifiers to adjust the matching behaviour of the regular expression.</source>
          <target state="translated">За закрывающим разделителем может следовать ряд опциональных модификаторов для настройки поведения регулярного выражения на соответствие.</target>
        </trans-unit>
        <trans-unit id="7486c68cd22b715cee9aba70b79ecf03143997ff" translate="yes" xml:space="preserve">
          <source>The code you write is up to you, but how you write it impacts whether people want to use your library and/or help you maintain it.</source>
          <target state="translated">Код,который вы пишете,зависит от вас,но то,как вы его пишете,влияет на то,хотят ли люди пользоваться вашей библиотекой и/или помогать вам в ее обслуживании.</target>
        </trans-unit>
        <trans-unit id="60347285fa183e9559a829be9b82c53c06646d0f" translate="yes" xml:space="preserve">
          <source>The codepoint is the integer representation. The Universal Coded Character Set (UCS) standard, commonly known as Unicode, assigns names and meanings to numbers, these numbers are called codepoints.</source>
          <target state="translated">Кодовая точка является целочисленным представлением.Стандарт Universal Coded Character Set (UCS),широко известный как Unicode,присваивает имена и значения числам,эти числа называются кодовыми точками.</target>
        </trans-unit>
        <trans-unit id="330d01950261d11e512866b0d0ec968a379ddfe6" translate="yes" xml:space="preserve">
          <source>The color &lt;code&gt;:default&lt;/code&gt; will just leave the object as it is (but it's an &lt;code&gt;&lt;a href=&quot;colorize/object&quot;&gt;Colorize::Object&lt;/a&gt;(&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;)&lt;/code&gt; then). That's handy in for example conditions:</source>
          <target state="translated">Color &lt;code&gt;:default&lt;/code&gt; просто оставит объект как есть (но тогда это &lt;code&gt;&lt;a href=&quot;colorize/object&quot;&gt;Colorize::Object&lt;/a&gt;(&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;)&lt;/code&gt; ). Это удобно, например, в условиях:</target>
        </trans-unit>
        <trans-unit id="abea7844f29e40b2cc5ce68386f0a7ee86b755a3" translate="yes" xml:space="preserve">
          <source>The column where this node ends.</source>
          <target state="translated">Столбец,где заканчивается этот узел.</target>
        </trans-unit>
        <trans-unit id="660441ea48991c5819506361f40f8e3d2e10c1f2" translate="yes" xml:space="preserve">
          <source>The column where this node starts.</source>
          <target state="translated">Столбец,где начинается этот узел.</target>
        </trans-unit>
        <trans-unit id="6ec5d7f24e502f7603f8d48f715a8f383deed6ff" translate="yes" xml:space="preserve">
          <source>The command creates a static website in &lt;code&gt;output_dir&lt;/code&gt; (default &lt;code&gt;./docs&lt;/code&gt;), consisting of HTML files for each Crystal type, in a folder structure mirroring the Crystal namespaces. The entrypoint &lt;code&gt;docs/index.html&lt;/code&gt; can be opened by any web browser. The entire API docs are also stored as a JSON document in &lt;code&gt;$output_dir/index.json&lt;/code&gt;.</source>
          <target state="translated">Команда создает статический веб-сайт в &lt;code&gt;output_dir&lt;/code&gt; (по умолчанию &lt;code&gt;./docs&lt;/code&gt; ), состоящем из файлов HTML для каждого типа Crystal, в структуре папок, отражающей пространства имен Crystal. Точка входа &lt;code&gt;docs/index.html&lt;/code&gt; может быть открыта любым веб-браузером. Все документы API также хранятся в виде документа JSON в &lt;code&gt;$output_dir/index.json&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d213795e162c8a7f9cc897850b304185dc131844" translate="yes" xml:space="preserve">
          <source>The comparison is based on the instant time-line, even if the local date-time representation (wall clock) would compare differently.</source>
          <target state="translated">Сравнение основано на мгновенной временной линии,даже если местное представление даты-времени (настенные часы)будет сравниваться по-разному.</target>
        </trans-unit>
        <trans-unit id="bccff557d651a67be956e45704f6c6d9373e2852" translate="yes" xml:space="preserve">
          <source>The comparison is performed strictly lexically: &lt;code&gt;foo&lt;/code&gt; and &lt;code&gt;./foo&lt;/code&gt; are &lt;em&gt;not&lt;/em&gt; treated as equal. To compare paths semantically, they need to be normalized and converted to the same kind.</source>
          <target state="translated">Сравнение выполняется строго лексически: &lt;code&gt;foo&lt;/code&gt; и &lt;code&gt;./foo&lt;/code&gt; которые &lt;em&gt;не&lt;/em&gt; рассматриваются как равные. Для семантического сравнения путей их необходимо нормализовать и преобразовать в один и тот же вид.</target>
        </trans-unit>
        <trans-unit id="9c5e704caf82b468bda81e87129e91c0a1ad8163" translate="yes" xml:space="preserve">
          <source>The comparison operator is usually used to sort values:</source>
          <target state="translated">Оператор сравнения обычно используется для сортировки значений:</target>
        </trans-unit>
        <trans-unit id="8f30e226d5c7e4d38dd234fed09b1a41dc52b2ae" translate="yes" xml:space="preserve">
          <source>The comparison operator.</source>
          <target state="translated">Оператор сравнения.</target>
        </trans-unit>
        <trans-unit id="0fa25ea08f80503e909fd965e8fb970b9b1b0f4e" translate="yes" xml:space="preserve">
          <source>The comparison operator. Returns &lt;code&gt;0&lt;/code&gt; if the two objects are equal, a negative number if this object is considered less than &lt;em&gt;other&lt;/em&gt;, a positive number if this object is considered greter than &lt;em&gt;other&lt;/em&gt;, or &lt;code&gt;nil&lt;/code&gt; if the two objects are not comparable.</source>
          <target state="translated">Оператор сравнения. Возвращает &lt;code&gt;0&lt;/code&gt; , если два объекта равны, отрицательное число, если этот объект считается меньше, чем &lt;em&gt;другие&lt;/em&gt; , положительное число, если этот объект считается больше, чем &lt;em&gt;другие&lt;/em&gt; , или &lt;code&gt;nil&lt;/code&gt; если два объекта не сравнимы.</target>
        </trans-unit>
        <trans-unit id="0b20f37bebb82e98c5c70ee9f85d2cc23547b285" translate="yes" xml:space="preserve">
          <source>The compile-time type can be seen by using &lt;a href=&quot;typeof&quot;&gt;typeof&lt;/a&gt;:</source>
          <target state="translated">Тип времени компиляции можно увидеть с помощью &lt;a href=&quot;typeof&quot;&gt;typeof&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="901b23955e8f736b478daa8b55c41b490c08a203" translate="yes" xml:space="preserve">
          <source>The compiler infers this attribute for a method if it invokes a method that is marked as &lt;code&gt;@[Raises]&lt;/code&gt; or raises (recursively).</source>
          <target state="translated">Компилятор выводит этот атрибут для метода, если он вызывает метод, помеченный как &lt;code&gt;@[Raises]&lt;/code&gt; или повышается (рекурсивно).</target>
        </trans-unit>
        <trans-unit id="4f88ccffd3e268d871f2056efb1090cfcf65873f" translate="yes" xml:space="preserve">
          <source>The compiler is usually moderately smart about the type of local variables. For example:</source>
          <target state="translated">Компилятор,как правило,в меру умён в отношении типа локальных переменных.Например:</target>
        </trans-unit>
        <trans-unit id="e296b93503486e9e50ffce4c0ba5d7e1f49d91f4" translate="yes" xml:space="preserve">
          <source>The compiler knows that after the block, &lt;code&gt;x&lt;/code&gt; can be Int32 or String (it could know that it will always be String because the method always yields; this may improve in the future).</source>
          <target state="translated">Компилятор знает, что после блока &lt;code&gt;x&lt;/code&gt; может быть Int32 или String (он может знать, что это всегда будет String, потому что метод всегда дает результат; это может улучшиться в будущем).</target>
        </trans-unit>
        <trans-unit id="53f8ad6624549840c274a29bc1f7426230ff0a0e" translate="yes" xml:space="preserve">
          <source>The compiler knows what types are in each key, so when indexing a named tuple with a symbol literal the compiler will return the value for that key and with the expected type, like in the above snippet. Indexing with a symbol literal for which there's no key will give a compile-time error.</source>
          <target state="translated">Компилятор знает,какие типы присутствуют в каждом ключе,поэтому при индексации именованного кортежа буквой символа компилятор вернёт значение для этого ключа и с ожидаемым типом,как в приведённом выше фрагменте.Индексация символьным литералом,для которого нет ключа,даст ошибку во время компиляции.</target>
        </trans-unit>
        <trans-unit id="1bc6bfc0d4c299392bdbd27356b3219c7f083103" translate="yes" xml:space="preserve">
          <source>The compiler knows what types are in each position, so when indexing a tuple with an integer literal the compiler will return the value in that index and with the expected type, like in the above snippet. Indexing with an integer literal outside the bounds of the tuple will give a compile-time error.</source>
          <target state="translated">Компилятор знает,какие типы находятся в каждой позиции,поэтому при индексации кортежа целочисленным литералом компилятор вернет значение в этом индексе и с ожидаемым типом,как в приведенном выше фрагменте.Индексация целочисленным литералом за пределами кортежа даст ошибку во время компиляции.</target>
        </trans-unit>
        <trans-unit id="bbe6a33fa8b555c81cd9d23de5cc4566013ad8b2" translate="yes" xml:space="preserve">
          <source>The compiler recognizes that in case &lt;code&gt;string&lt;/code&gt; is &lt;code&gt;Nil&lt;/code&gt;, the right hand side of the expression &lt;code&gt;string || raise&lt;/code&gt; will be evaluated. Since &lt;code&gt;typeof(raise &quot;Empty input&quot;)&lt;/code&gt; is &lt;code&gt;NoReturn&lt;/code&gt; the execution would not return to the current scope in that case. That leaves only &lt;code&gt;String&lt;/code&gt; as resulting type of the expression.</source>
          <target state="translated">Компилятор распознает, что в случае, если &lt;code&gt;string&lt;/code&gt; равна &lt;code&gt;Nil&lt;/code&gt; , правая часть &lt;code&gt;string || raise&lt;/code&gt; выражения || повышение будет оценено. Поскольку &lt;code&gt;typeof(raise &quot;Empty input&quot;)&lt;/code&gt; равно &lt;code&gt;NoReturn&lt;/code&gt; , выполнение в этом случае не вернется к текущей области. Это оставляет только &lt;code&gt;String&lt;/code&gt; как результирующий тип выражения.</target>
        </trans-unit>
        <trans-unit id="9fd63548bcd1f9432f120809cb637de7949597f1" translate="yes" xml:space="preserve">
          <source>The compiler uses the &lt;code&gt;CRYSTAL_LIBRARY_PATH&lt;/code&gt; environment variable as a first lookup destination for static and dynamic libraries that are to be linked. This can be used to provide static versions of libraries that are also available as dynamic libraries.</source>
          <target state="translated">Компилятор использует &lt;code&gt;CRYSTAL_LIBRARY_PATH&lt;/code&gt; среды CRYSTAL_LIBRARY_PATH в качестве первого места назначения для поиска статических и динамических библиотек, которые должны быть связаны. Это может использоваться для предоставления статических версий библиотек, которые также доступны как динамические библиотеки.</target>
        </trans-unit>
        <trans-unit id="d112ea3968e90628ecef4e96c3f030557bcc29d4" translate="yes" xml:space="preserve">
          <source>The compiler will always do this for classes and structs under the same hierarchy: it will find the first superclass from which all types inherit from (excluding &lt;code&gt;Reference&lt;/code&gt;, &lt;code&gt;Value&lt;/code&gt;, &lt;code&gt;Int&lt;/code&gt; and &lt;code&gt;Float&lt;/code&gt;). If it can't find one, the type union remains.</source>
          <target state="translated">Компилятор всегда будет делать это для классов и структур с одинаковой иерархией: он найдет первый суперкласс, от которого наследуются все типы (кроме &lt;code&gt;Reference&lt;/code&gt; , &lt;code&gt;Value&lt;/code&gt; , &lt;code&gt;Int&lt;/code&gt; и &lt;code&gt;Float&lt;/code&gt; ). Если он не может его найти, объединение типов остается.</target>
        </trans-unit>
        <trans-unit id="9aa42ab2fbe7576856d80d14142091ab932b6491" translate="yes" xml:space="preserve">
          <source>The compiler will always resolve a type union to a virtual type if they are under the same hierarchy:</source>
          <target state="translated">Компилятор всегда будет разрешать объединение типов в виртуальный,если они находятся под одной и той же иерархией:</target>
        </trans-unit>
        <trans-unit id="f6a828022c5a606925e47b002f9dc2a5f92de454" translate="yes" xml:space="preserve">
          <source>The compiler will automatically declare a &lt;code&gt;status_ptr&lt;/code&gt; variable of type &lt;code&gt;Int32&lt;/code&gt;, because the argument is an &lt;code&gt;Int32*&lt;/code&gt;.</source>
          <target state="translated">Компилятор автоматически объявит переменную &lt;code&gt;status_ptr&lt;/code&gt; типа &lt;code&gt;Int32&lt;/code&gt; , потому что аргумент - &lt;code&gt;Int32*&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7116ec73e25c2ce43e86e6ce030554ec2d346a16" translate="yes" xml:space="preserve">
          <source>The compiler will try to be as smart as possible to require less explicit type restrictions. For example, if assigning an &lt;code&gt;if&lt;/code&gt; expression, type will be inferred from the &lt;code&gt;then&lt;/code&gt; and &lt;code&gt;else&lt;/code&gt; branches:</source>
          <target state="translated">Компилятор постарается быть настолько умным, насколько это возможно, чтобы требовать менее явных ограничений типов. Например, если назначить выражение &lt;code&gt;if&lt;/code&gt; , тип будет выведен из ветвей &lt;code&gt;then&lt;/code&gt; и &lt;code&gt;else&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="a27fbf176c173a4869ddaa838718beb1520d753e" translate="yes" xml:space="preserve">
          <source>The condition is first tested and, if &lt;em&gt;truthy&lt;/em&gt;, the body is executed. That is, the body might never be executed.</source>
          <target state="translated">Условие сначала проверено, и, если &lt;em&gt;правдиво&lt;/em&gt; , тело выполнено. То есть тело никогда не может быть казнено.</target>
        </trans-unit>
        <trans-unit id="45d26e86bf874f16afbe8a5db86b9dcf4fbd0f35" translate="yes" xml:space="preserve">
          <source>The current event kind.</source>
          <target state="translated">Текущий вид мероприятия.</target>
        </trans-unit>
        <trans-unit id="16bde7a043bf01f1b6c0a902d4c5a199b7b8753b" translate="yes" xml:space="preserve">
          <source>The current fiber will resume after a period of time and have the property &lt;code&gt;timed_out&lt;/code&gt; set to true.</source>
          <target state="translated">Текущее волокно возобновит работу через некоторое время, а для свойства &lt;code&gt;timed_out&lt;/code&gt; будет установлено значение true.</target>
        </trans-unit>
        <trans-unit id="fc0b1ad9eec889bdcd71bc817e8e53befda88330" translate="yes" xml:space="preserve">
          <source>The current fiber will resume after a period of time and have the property &lt;code&gt;timed_out&lt;/code&gt; set to true. The timeout can be cancelled with &lt;code&gt;&lt;a href=&quot;fiber#cancel_timeout-class-method&quot;&gt;.cancel_timeout&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">Текущее волокно возобновит работу через некоторое время, а для свойства &lt;code&gt;timed_out&lt;/code&gt; будет установлено значение true. &lt;code&gt;&lt;a href=&quot;fiber#cancel_timeout-class-method&quot;&gt;.cancel_timeout&lt;/a&gt;&lt;/code&gt; аут можно отменить с помощью .cancel_timeout</target>
        </trans-unit>
        <trans-unit id="bef575a1ccf5aba6c5ce468bf3a521910a0c63c5" translate="yes" xml:space="preserve">
          <source>The data format must follow the format of &lt;code&gt;mime.types&lt;/code&gt;: Each line declares a MIME type followed by a whitespace-separated list of extensions mapped to this type. Everything following a &lt;code&gt;#&lt;/code&gt; is considered a comment until the end of line. Empty lines are ignored.</source>
          <target state="translated">Формат данных должен соответствовать формату &lt;code&gt;mime.types&lt;/code&gt; : каждая строка объявляет тип MIME, за которым следует разделенный пробелами список расширений, сопоставленных с этим типом. Все, что следует за &lt;code&gt;#&lt;/code&gt; , считается комментарием до конца строки. Пустые строки игнорируются.</target>
        </trans-unit>
        <trans-unit id="e5b5bca50bbcb72e98e43922b4012518a5698ff3" translate="yes" xml:space="preserve">
          <source>The data format must follow the format of &lt;code&gt;mime.types&lt;/code&gt;: Each line declares a MIME type followed by a whitespace-separated list of extensions mapped to this type. Everything following a &lt;code&gt;#&lt;/code&gt; is considered a comment until the end of line. Empy line are ignored.</source>
          <target state="translated">Формат данных должен соответствовать формату &lt;code&gt;mime.types&lt;/code&gt; : каждая строка объявляет тип MIME, за которым следует разделенный пробелами список расширений, сопоставленных с этим типом. Все, что следует за &lt;code&gt;#&lt;/code&gt; , считается комментарием до конца строки. Эмпиры игнорируются.</target>
        </trans-unit>
        <trans-unit id="b6ac557b14252defbc297671bb0f85f77d4fcb5f" translate="yes" xml:space="preserve">
          <source>The default PRNG is &lt;code&gt;&lt;a href=&quot;random/pcg32&quot;&gt;Random::PCG32&lt;/a&gt;&lt;/code&gt; which has a good overall statistical distribution (low bias of generated numbers) and is fast for overall usages on different platforms, but isn't cryptographically secure. If a third party has access to some generated numbers, she may deduce incoming numbers, putting your application at risk.</source>
          <target state="translated">PRNG по умолчанию - &lt;code&gt;&lt;a href=&quot;random/pcg32&quot;&gt;Random::PCG32&lt;/a&gt;&lt;/code&gt; который имеет хорошее общее статистическое распределение (низкое смещение генерируемых чисел) и быстр для общего использования на разных платформах, но не криптографически безопасен. Если третья сторона имеет доступ к некоторым сгенерированным номерам, она может вывести входящие номера, подвергая риску ваше приложение.</target>
        </trans-unit>
        <trans-unit id="bdd51ac360b10bcd84b0c8f91e4e2989fd2773ff" translate="yes" xml:space="preserve">
          <source>The default behaviour is to load the internal defaults as well as the OS-provided MIME database. This can be disabled with &lt;em&gt;load_defaults&lt;/em&gt; set to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Поведение по умолчанию заключается в загрузке внутренних значений по умолчанию, а также предоставленной ОС базы данных MIME. Это может быть отключено, &lt;em&gt;если&lt;/em&gt; для &lt;em&gt;load_defaults&lt;/em&gt; установлено значение &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dad7af7b0f876da9aa949c42f24000929273f588" translate="yes" xml:space="preserve">
          <source>The default formatter outputs the file and line style command for failing specs which makes it easy to rerun just this individual spec.</source>
          <target state="translated">По умолчанию Formatter выводит команду в стиле файла и строки для неудачных спецификаций,что упрощает повторный запуск только этой индивидуальной спецификации.</target>
        </trans-unit>
        <trans-unit id="25b8cc0309c25e817367b59837ebb7571042e378" translate="yes" xml:space="preserve">
          <source>The default receiver within a captured block can't be changed by using &lt;code&gt;with ... yield&lt;/code&gt;.</source>
          <target state="translated">Получатель по умолчанию в захваченном блоке не может быть изменен с помощью &lt;code&gt;with ... yield&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f44188190e8ff07b62a15512f4e2653bbf1da67d" translate="yes" xml:space="preserve">
          <source>The default value can also be a &lt;code&gt;Type.new(...)&lt;/code&gt; method or a class method with a return type restriction.</source>
          <target state="translated">Значением по умолчанию также может быть &lt;code&gt;Type.new(...)&lt;/code&gt; или метод класса с ограничением возвращаемого типа.</target>
        </trans-unit>
        <trans-unit id="af976fa886c4f7b664fc57e291778fd6b49e246c" translate="yes" xml:space="preserve">
          <source>The default value is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Значением по умолчанию является &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2405836e0455b607d437f1441a12ee51443e3dfc" translate="yes" xml:space="preserve">
          <source>The definitions of &quot;concurrency&quot; and &quot;parallelism&quot; sometimes get mixed up, but they are not the same.</source>
          <target state="translated">Определения &quot;параллелизм&quot; и &quot;параллелизм&quot; иногда путают,но это не одно и то же.</target>
        </trans-unit>
        <trans-unit id="56cc8132a44e585c5a836cac7589ad9dd027f5da" translate="yes" xml:space="preserve">
          <source>The delimiter character &lt;code&gt;/&lt;/code&gt; must be escaped inside slash-delimited regular expression literals. Note that special characters of the PCRE syntax need to be escaped if they are intended as literal characters.</source>
          <target state="translated">Символ-разделитель &lt;code&gt;/&lt;/code&gt; должен быть экранирован внутри литералов регулярных выражений, разделенных косой чертой. Обратите внимание, что специальные символы синтаксиса PCRE необходимо экранировать, если они предназначены для буквенных символов.</target>
        </trans-unit>
        <trans-unit id="c9653a8d1e950042ca9213746780e7bc8b914379" translate="yes" xml:space="preserve">
          <source>The development is possible thanks to the community's effort and the continued support of &lt;a href=&quot;https://www.84codes.com/&quot;&gt;84codes&lt;/a&gt;, &lt;a href=&quot;https://nikolamotor.com/&quot;&gt;Nikola Motor Company&lt;/a&gt; and every other &lt;a href=&quot;https://crystal-lang.org/sponsors&quot;&gt;sponsor&lt;/a&gt;.</source>
          <target state="translated">Развитие возможно благодаря усилиям сообщества и постоянной поддержке &lt;a href=&quot;https://www.84codes.com/&quot;&gt;84codes&lt;/a&gt; , &lt;a href=&quot;https://nikolamotor.com/&quot;&gt;Nikola Motor Company&lt;/a&gt; и всех других &lt;a href=&quot;https://crystal-lang.org/sponsors&quot;&gt;спонсоров&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="005cdeadc39a856e459e5bd8473d96fd7f82d81a" translate="yes" xml:space="preserve">
          <source>The development is possible thanks to the community's effort, &lt;a href=&quot;https://www.84codes.com/&quot;&gt;84codes&lt;/a&gt;' support, and every &lt;a href=&quot;https://crystal-lang.org/sponsors&quot;&gt;BountySource supporter&lt;/a&gt;.</source>
          <target state="translated">Разработка возможна благодаря усилиям сообщества, поддержке &lt;a href=&quot;https://www.84codes.com/&quot;&gt;84 кодов&lt;/a&gt; и всем &lt;a href=&quot;https://crystal-lang.org/sponsors&quot;&gt;сторонникам BountySource&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e7896d2ab08699e91d14ae92a8d97f1b60ffffbf" translate="yes" xml:space="preserve">
          <source>The difference between using &lt;code&gt;do ... end&lt;/code&gt; and &lt;code&gt;{ ... }&lt;/code&gt; is that &lt;code&gt;do ... end&lt;/code&gt; binds to the left-most call, while &lt;code&gt;{ ... }&lt;/code&gt; binds to the right-most call:</source>
          <target state="translated">Разница между использованием &lt;code&gt;do ... end&lt;/code&gt; и &lt;code&gt;{ ... }&lt;/code&gt; заключается в том, что &lt;code&gt;do ... end&lt;/code&gt; связывается с крайним левым вызовом, а &lt;code&gt;{ ... }&lt;/code&gt; крайним правым вызовом:</target>
        </trans-unit>
        <trans-unit id="d932293ad1229ee6d59947cbf56bffd1ddfe6045" translate="yes" xml:space="preserve">
          <source>The directives are:</source>
          <target state="translated">Директивы:</target>
        </trans-unit>
        <trans-unit id="d3bece92e462e673997e5de7aea3061108ec3fdb" translate="yes" xml:space="preserve">
          <source>The directory used in these examples contains the two regular files (&lt;code&gt;config.h&lt;/code&gt; and &lt;code&gt;main.rb&lt;/code&gt;), the parent directory (&lt;code&gt;..&lt;/code&gt;), and the directory itself (&lt;code&gt;.&lt;/code&gt;).</source>
          <target state="translated">Каталог, используемый в этих примерах, содержит два обычных файла ( &lt;code&gt;config.h&lt;/code&gt; и &lt;code&gt;main.rb&lt;/code&gt; ), родительский каталог ( &lt;code&gt;..&lt;/code&gt; ) и сам каталог ( &lt;code&gt;.&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="8c6593ecc33a17f47a51d532e371454d0a2e960a" translate="yes" xml:space="preserve">
          <source>The document this builder builds.</source>
          <target state="translated">Документ,который строит этот строитель.</target>
        </trans-unit>
        <trans-unit id="dc120a6a054db66ae816e454062bb51eeda15057" translate="yes" xml:space="preserve">
          <source>The documentation for &lt;code&gt;Child#id&lt;/code&gt; would be:</source>
          <target state="translated">Документация для &lt;code&gt;Child#id&lt;/code&gt; будет следующей:</target>
        </trans-unit>
        <trans-unit id="b848e705cf22eebab3ac54f82de9a55a1df65b7b" translate="yes" xml:space="preserve">
          <source>The documentation for &lt;code&gt;Unicorn#name&lt;/code&gt; would be:</source>
          <target state="translated">Документация для &lt;code&gt;Unicorn#name&lt;/code&gt; будет:</target>
        </trans-unit>
        <trans-unit id="a72fae4adb9e9233849f2511abb367174fc0113f" translate="yes" xml:space="preserve">
          <source>The documentation of a method is included into the method summary and the method details. The former includes only the first line, the latter includes the entire documentation. In short, it is preferred to:</source>
          <target state="translated">Документация по методу включена в краткое описание метода и подробности метода.Первая включает только первую строку,вторая-всю документацию.Короче говоря,предпочтительнее:</target>
        </trans-unit>
        <trans-unit id="0937a36b3d81ac8458f6ad89ee30d846b74b3e12" translate="yes" xml:space="preserve">
          <source>The documentation of the function says:</source>
          <target state="translated">Документация о функции говорит:</target>
        </trans-unit>
        <trans-unit id="f728086ed3dbe17bdbffeaac3d2343ad483c9c5f" translate="yes" xml:space="preserve">
          <source>The dot (&lt;code&gt;.&lt;/code&gt;) usually put between receiver and method name (i.e. the &lt;em&gt;operator&lt;/em&gt;) can be omitted.</source>
          <target state="translated">Точку ( &lt;code&gt;.&lt;/code&gt; ), Обычно помещаемую между получателем и именем метода (т. Е. &lt;em&gt;Оператора&lt;/em&gt; ), можно опустить.</target>
        </trans-unit>
        <trans-unit id="672cec25fd6cd4f425093ea7d30c2cab847d8cd3" translate="yes" xml:space="preserve">
          <source>The duration amounts to the actual time elapsed between both instances, on the instant time-line. The difference between local date-time representations may equal to a different duration, depending on time zone transitions.</source>
          <target state="translated">Продолжительность составляет фактическое время,прошедшее между обоими случаями,на мгновенной временной линии.Разница между локальными представлениями дата-время может быть равна разной продолжительности,в зависимости от переходов во временном поясе.</target>
        </trans-unit>
        <trans-unit id="c37ea0ffdf358cedefc364ad6f8b92588cd577ca" translate="yes" xml:space="preserve">
          <source>The easiest, but probably most tedious, way is to use explicit type restrictions.</source>
          <target state="translated">Самый простой,но,наверное,самый утомительный способ-использовать явные ограничения типов.</target>
        </trans-unit>
        <trans-unit id="63bbeb85167187d17ca0803b3e824665527089f0" translate="yes" xml:space="preserve">
          <source>The empty node. Similar to a &lt;code&gt;&lt;a href=&quot;nilliteral&quot;&gt;NilLiteral&lt;/a&gt;&lt;/code&gt; but its textual representation is the empty string. This corresponds, for example, to the missing &lt;code&gt;else&lt;/code&gt; branch of an &lt;code&gt;if&lt;/code&gt; without an &lt;code&gt;else&lt;/code&gt;.</source>
          <target state="translated">Пустой узел. Похож на &lt;code&gt;&lt;a href=&quot;nilliteral&quot;&gt;NilLiteral&lt;/a&gt;&lt;/code&gt; , но его текстовое представление - пустая строка. Это соответствует, например, отсутствующей ветви &lt;code&gt;else&lt;/code&gt; оператора &lt;code&gt;if&lt;/code&gt; без &lt;code&gt;else&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6f0e9c0ed65ebb143261ec014d66c5e246230b63" translate="yes" xml:space="preserve">
          <source>The encoded string returned from this method can be used as name or value components for a &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; format serialization. &lt;code&gt;&lt;a href=&quot;http/params&quot;&gt;HTTP::Params&lt;/a&gt;&lt;/code&gt; provides a higher-level API for this use case.</source>
          <target state="translated">Закодированная строка, возвращаемая этим методом, может использоваться в качестве компонентов имени или значения для сериализации формата &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; . &lt;code&gt;&lt;a href=&quot;http/params&quot;&gt;HTTP::Params&lt;/a&gt;&lt;/code&gt; предоставляет высокоуровневый API для этого варианта использования.</target>
        </trans-unit>
        <trans-unit id="19a501ac3170a7625cc3d06fca03beaa27abcd04" translate="yes" xml:space="preserve">
          <source>The enumeration follows the order the keys were inserted.</source>
          <target state="translated">Перечисление происходит в порядке,в котором были вставлены клавиши.</target>
        </trans-unit>
        <trans-unit id="334b8883ac89ea1d46fa3c575e4dc24d15abe6b9" translate="yes" xml:space="preserve">
          <source>The environment variable &lt;code&gt;&lt;a href=&quot;../env&quot;&gt;ENV&lt;/a&gt;[&quot;TZ&quot;]&lt;/code&gt; is consulted for finding the time zone to use.</source>
          <target state="translated">Переменная среды &lt;code&gt;&lt;a href=&quot;../env&quot;&gt;ENV&lt;/a&gt;[&quot;TZ&quot;]&lt;/code&gt; используется для поиска часового пояса для использования.</target>
        </trans-unit>
        <trans-unit id="20eff9782cd8ee2b8d19c2f0c13ee7dcc10fba8b" translate="yes" xml:space="preserve">
          <source>The environment variable &lt;code&gt;LOG_LEVEL&lt;/code&gt; is used to indicate which severity level to emit. By default entries from all sources with &lt;code&gt;Info&lt;/code&gt; and above severity will be logged to &lt;code&gt;&lt;a href=&quot;toplevel#STDOUT&quot;&gt;STDOUT&lt;/a&gt;&lt;/code&gt; using the &lt;code&gt;&lt;a href=&quot;log/iobackend&quot;&gt;Log::IOBackend&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Переменная окружения &lt;code&gt;LOG_LEVEL&lt;/code&gt; используется, чтобы указать, какой уровень серьезности следует передать. По умолчанию записи из всех источников с уровнем серьезности &lt;code&gt;Info&lt;/code&gt; и выше будут регистрироваться в &lt;code&gt;&lt;a href=&quot;toplevel#STDOUT&quot;&gt;STDOUT&lt;/a&gt;&lt;/code&gt; с помощью &lt;code&gt;&lt;a href=&quot;log/iobackend&quot;&gt;Log::IOBackend&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d576bfb871feb5067668752916908d478022d4d5" translate="yes" xml:space="preserve">
          <source>The event loop is responsible for keeping track of sleeping fibers waiting for notifications that IO is ready or a timeout reached. When a fiber can be woken, the event loop enqueues it in the scheduler</source>
          <target state="translated">Петля событий отвечает за отслеживание спальных волокон,ожидающих уведомления о том,что IO готов,или о наступлении таймаута.Когда волокно может быть разбуждено,цикл событий запрашивает его в планировщике событий</target>
        </trans-unit>
        <trans-unit id="289939042a809d4b4c05c5f43058ca29ae965fdf" translate="yes" xml:space="preserve">
          <source>The event loop: which is another fiber. When there are no other fibers ready to be executed, the event loop checks if there is any async operation that is ready, and then executes the fiber waiting for that operation. The event loop is currently implemented with &lt;code&gt;libevent&lt;/code&gt;, which is an abstraction of other event mechanisms like &lt;code&gt;epoll&lt;/code&gt; and &lt;code&gt;kqueue&lt;/code&gt;.</source>
          <target state="translated">Цикл событий: который является еще одним волокном. Когда нет других готовых к выполнению волокон, цикл обработки событий проверяет, готова ли какая-либо асинхронная операция, и затем выполняет волокно, ожидающее эту операцию. Цикл событий в настоящее время реализован с &lt;code&gt;libevent&lt;/code&gt; , который является абстракцией других механизмов событий, таких как &lt;code&gt;epoll&lt;/code&gt; и &lt;code&gt;kqueue&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6511f81d54c1d1f0e5e4fd06a18a8fbc9143e415" translate="yes" xml:space="preserve">
          <source>The example application</source>
          <target state="translated">Пример применения</target>
        </trans-unit>
        <trans-unit id="a6d3f4ac0f6da0eaae0f6daef5498357f181fbab" translate="yes" xml:space="preserve">
          <source>The example or example group's description.</source>
          <target state="translated">Пример или описание группы.</target>
        </trans-unit>
        <trans-unit id="c26aa8f871e400d70954a0adeef1d6debf5c615c" translate="yes" xml:space="preserve">
          <source>The example that will eventually run when calling &lt;code&gt;&lt;a href=&quot;procsy#run-instance-method&quot;&gt;#run&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Пример, который в конечном итоге будет запущен при вызове &lt;code&gt;&lt;a href=&quot;procsy#run-instance-method&quot;&gt;#run&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dfbe06a290759cb035c2f02fdd4943aed0c8dcec" translate="yes" xml:space="preserve">
          <source>The executable path will be canonicalized (all symlinks and relative paths will be expanded).</source>
          <target state="translated">Исполняемый путь будет канонизирован (все симлинки и относительные пути будут расширены).</target>
        </trans-unit>
        <trans-unit id="599aa940baa0b3158257fa7fb63e0524db4d0bad" translate="yes" xml:space="preserve">
          <source>The execution time of a block can be measured using &lt;code&gt;&lt;a href=&quot;time#measure(&amp;amp;):Time::Span-class-method&quot;&gt;.measure&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Время выполнения блока можно измерить с помощью &lt;code&gt;&lt;a href=&quot;time#measure(&amp;amp;):Time::Span-class-method&quot;&gt;.measure&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7b7e3538d35750a6c80b1f95878fe176505dfa93" translate="yes" xml:space="preserve">
          <source>The execution time of a block can be measured using &lt;code&gt;&lt;a href=&quot;time#measure(&amp;amp;):Time::Span-class-method&quot;&gt;.measure&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">Время выполнения блока можно измерить с помощью &lt;code&gt;&lt;a href=&quot;time#measure(&amp;amp;):Time::Span-class-method&quot;&gt;.measure&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="1bfa0e0ddd888170dfb91065ef7f439d633802bf" translate="yes" xml:space="preserve">
          <source>The execution time of a block can be measured using &lt;code&gt;&lt;a href=&quot;time#measure(&amp;amp;block):Time::Span-class-method&quot;&gt;.measure&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Время выполнения блока можно измерить с помощью &lt;code&gt;&lt;a href=&quot;time#measure(&amp;amp;block):Time::Span-class-method&quot;&gt;.measure&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="89a823a74578974bd0a0c7713f0c6c71b0b85cc0" translate="yes" xml:space="preserve">
          <source>The execution time of a block can be measured using &lt;code&gt;&lt;a href=&quot;time#measure(&amp;amp;block):Time::Span-class-method&quot;&gt;.measure&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">Время выполнения блока можно измерить с помощью &lt;code&gt;&lt;a href=&quot;time#measure(&amp;amp;block):Time::Span-class-method&quot;&gt;.measure&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="59153738139b6eac2a19ed68700b834e55f846f3" translate="yes" xml:space="preserve">
          <source>The exit status code that will be returned by this program is passed to the block as its first argument. In case of any unhandled exception, it is passed as the second argument to the block, if the program terminates normally or &lt;code&gt;&lt;a href=&quot;toplevel#exit(status=0):NoReturn-class-method&quot;&gt;exit(status)&lt;/a&gt;&lt;/code&gt; is called explicitly, then the second argument will be &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Код статуса выхода, который будет возвращен этой программой, передается блоку в качестве его первого аргумента. В случае любого необработанного исключения оно передается блоку в качестве второго аргумента, если программа завершается нормально или явно вызывается &lt;code&gt;&lt;a href=&quot;toplevel#exit(status=0):NoReturn-class-method&quot;&gt;exit(status)&lt;/a&gt;&lt;/code&gt; , то второй аргумент будет равен &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d9fd89c2a234ddba0ffc9a9f1fae9c1be8096dcb" translate="yes" xml:space="preserve">
          <source>The exit status code that will be returned by this program is passed to the block as its first argument. In case of any unhandled exception, it is passed as the second argument to the block, if the program terminates normally or &lt;code&gt;&lt;a href=&quot;toplevel#exit(status=0):NoReturn-class-method&quot;&gt;exit(status)&lt;/a&gt;&lt;/code&gt; is called explicitly, then the second argument will be nil.</source>
          <target state="translated">Код состояния выхода, который будет возвращен этой программой, передается в блок в качестве первого аргумента. В случае любого необработанного исключения оно передается в качестве второго аргумента в блок, если программа завершается нормально или явно вызывается &lt;code&gt;&lt;a href=&quot;toplevel#exit(status=0):NoReturn-class-method&quot;&gt;exit(status)&lt;/a&gt;&lt;/code&gt; , тогда вторым аргументом будет ноль.</target>
        </trans-unit>
        <trans-unit id="4a045abc5c5e3370ee556095656967fe483ef308" translate="yes" xml:space="preserve">
          <source>The expression above will result in no output.</source>
          <target state="translated">Выражение,приведенное выше,не даст никакого результата.</target>
        </trans-unit>
        <trans-unit id="14a80cbc06cf77621027d850abe1bc366da3c3a6" translate="yes" xml:space="preserve">
          <source>The expressions passed as arguments to &lt;code&gt;&lt;a href=&quot;toplevel#typeof(*expression):Class-class-method&quot;&gt;typeof&lt;/a&gt;&lt;/code&gt; do not evaluate. The compiler only analyzes their return type.</source>
          <target state="translated">Выражения, переданные в качестве аргументов &lt;code&gt;&lt;a href=&quot;toplevel#typeof(*expression):Class-class-method&quot;&gt;typeof&lt;/a&gt;&lt;/code&gt; , не оцениваются. Компилятор анализирует только их возвращаемый тип.</target>
        </trans-unit>
        <trans-unit id="9f46241c26ff01da7f3b3d6385013f970c5e0bdc" translate="yes" xml:space="preserve">
          <source>The fiber's proc has terminated, and the fiber is now considered dead.</source>
          <target state="translated">Затягивание волокна прекратилось,и теперь волокно считается мертвым.</target>
        </trans-unit>
        <trans-unit id="0f4c121cdb610ad81756083bed036f80561110e6" translate="yes" xml:space="preserve">
          <source>The fiber's proc has terminated, and the fiber is now considered dead. The fiber is impossible to resume, ever.</source>
          <target state="translated">Затягивание волокна прекратилось,и теперь волокно считается мертвым.Волокно невозможно возобновить,никогда.</target>
        </trans-unit>
        <trans-unit id="d0d403944bf6fed71d4adbaf5d43a604d67a030f" translate="yes" xml:space="preserve">
          <source>The fiber's proc is currently not running and fully saved its context.</source>
          <target state="translated">Волокно proc в настоящее время не работает и полностью сохранило свой контекст.</target>
        </trans-unit>
        <trans-unit id="50ad807d3af39a32f5f08b0259dde9b52a3b978b" translate="yes" xml:space="preserve">
          <source>The fiber's proc is currently not running and fully saved its context. The fiber can be resumed safely.</source>
          <target state="translated">Волокно proc в настоящее время не работает и полностью сохранило свой контекст.Волокно можно безопасно возобновить.</target>
        </trans-unit>
        <trans-unit id="0c6f5ccd21c6daa06fd34c08cdb6f256203067ea" translate="yes" xml:space="preserve">
          <source>The fiber's proc is currently running or didn't fully save its context.</source>
          <target state="translated">Прокурор волокна в настоящее время работает или не полностью сохранил свой контекст.</target>
        </trans-unit>
        <trans-unit id="a786767a12553cf62d379e1ba32bb2dc888b542c" translate="yes" xml:space="preserve">
          <source>The fiber's proc is currently running or didn't fully save its context. The fiber can't be resumed.</source>
          <target state="translated">Прокурор волокна в настоящее время работает или не полностью сохранил свой контекст.Волокно не может быть возобновлено.</target>
        </trans-unit>
        <trans-unit id="1bee5d440fe98063654d400b6134543e61b6bc0d" translate="yes" xml:space="preserve">
          <source>The field type characters are:</source>
          <target state="translated">Символы типа поля:</target>
        </trans-unit>
        <trans-unit id="afe1f9f4b67401c1810db8891ab5bbcec3861b72" translate="yes" xml:space="preserve">
          <source>The field type controls how the corresponding &lt;code&gt;&lt;a href=&quot;toplevel#sprintf(format_string,args:Array%7CTuple):String-class-method&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt; argument is to be interpreted, while the flags modify that interpretation.</source>
          <target state="translated">Тип поля определяет, как должен интерпретироваться соответствующий аргумент &lt;code&gt;&lt;a href=&quot;toplevel#sprintf(format_string,args:Array%7CTuple):String-class-method&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt; , а флаги изменяют эту интерпретацию.</target>
        </trans-unit>
        <trans-unit id="3d0cabb0dec3924f84ac20c0ab88719a5fa4fc4b" translate="yes" xml:space="preserve">
          <source>The field width is an optional integer, followed optionally by a period and a precision. The width specifies the minimum number of characters that will be written to the result for this field.</source>
          <target state="translated">Ширина поля-это необязательное целое число,за которым,по желанию,следует период и точность.Ширина определяет минимальное количество символов,которое будет записано в результат для данного поля.</target>
        </trans-unit>
        <trans-unit id="4b6d10aefdcc16f0633d9b2f1665f19c6f5de57f" translate="yes" xml:space="preserve">
          <source>The file denoted by &lt;em&gt;filename&lt;/em&gt; must be a valid Crystal program. This macro invocation passes &lt;em&gt;args&lt;/em&gt; to the program as regular program arguments. The program must output a valid Crystal expression. This output is the result of this macro invocation, as a &lt;code&gt;&lt;a href=&quot;macros/macroid&quot;&gt;MacroId&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Файл, обозначенный &lt;em&gt;именем файла,&lt;/em&gt; должен быть допустимой программой Crystal. Этот вызов макроса передает &lt;em&gt;аргументы&lt;/em&gt; программе как обычные программные аргументы. Программа должна вывести правильное выражение Crystal. Этот вывод является результатом этого вызова макроса, как &lt;code&gt;&lt;a href=&quot;macros/macroid&quot;&gt;MacroId&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e84e468fa38ebbfa041310765aa747a443561fed" translate="yes" xml:space="preserve">
          <source>The file where the example or example group is defined.</source>
          <target state="translated">Файл,в котором определяется пример или группа примера.</target>
        </trans-unit>
        <trans-unit id="4bb08622a576d8d4f5169eceb64b0143f36aba6f" translate="yes" xml:space="preserve">
          <source>The file will be placed in &lt;em&gt;dir&lt;/em&gt; which defaults to the standard temporary directory &lt;code&gt;&lt;a href=&quot;dir#tempdir:String-class-method&quot;&gt;Dir.tempdir&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Файл будет помещен в каталог &lt;em&gt;dir, по&lt;/em&gt; умолчанию это стандартный временный каталог &lt;code&gt;&lt;a href=&quot;dir#tempdir:String-class-method&quot;&gt;Dir.tempdir&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a7f1640403d9f182a77e3019950bddcdb6697b5b" translate="yes" xml:space="preserve">
          <source>The file/directory separator character. &lt;code&gt;'/'&lt;/code&gt; on all platforms.</source>
          <target state="translated">Символ разделителя файла / каталога. &lt;code&gt;'/'&lt;/code&gt; на всех платформах.</target>
        </trans-unit>
        <trans-unit id="30c3dc3998a9c5f84132da6d3eec00f1eb4d2eba" translate="yes" xml:space="preserve">
          <source>The file/directory separator characters of the current platform. &lt;code&gt;{'/'}&lt;/code&gt; on POSIX, &lt;code&gt;{'\\', '/'}&lt;/code&gt; on Windows.</source>
          <target state="translated">Символ разделителя файла / каталога текущей платформы. &lt;code&gt;{'/'}&lt;/code&gt; в POSIX, &lt;code&gt;{'\\', '/'}&lt;/code&gt; в Windows.</target>
        </trans-unit>
        <trans-unit id="ef624ff911ca746c85289883981086d69233acc2" translate="yes" xml:space="preserve">
          <source>The file/directory separator string. &lt;code&gt;&quot;/&quot;&lt;/code&gt; on all platforms.</source>
          <target state="translated">Строка разделителя файла / каталога. &lt;code&gt;&quot;/&quot;&lt;/code&gt; на всех платформах.</target>
        </trans-unit>
        <trans-unit id="f3d50190f7ff29511807626569fb6160233f5396" translate="yes" xml:space="preserve">
          <source>The first alternative is long and cumbersome, while the second one is much easier.</source>
          <target state="translated">Первый вариант длинный и громоздкий,а второй гораздо проще.</target>
        </trans-unit>
        <trans-unit id="31061b68dd407b09235c7c1ef9a26c76d6b04315" translate="yes" xml:space="preserve">
          <source>The first argument is either &lt;code&gt;lib&lt;/code&gt; or &lt;code&gt;app&lt;/code&gt;. A &lt;code&gt;lib&lt;/code&gt; is a reusable library whereas &lt;code&gt;app&lt;/code&gt; describes an application not intended to be used as a dependency. A library doesn't have a &lt;code&gt;shard.lock&lt;/code&gt; file in its repository and no build target in &lt;code&gt;shard.yml&lt;/code&gt;, but instructions for using it as a dependency.</source>
          <target state="translated">Первый аргумент - либо &lt;code&gt;lib&lt;/code&gt; , либо &lt;code&gt;app&lt;/code&gt; . &lt;code&gt;lib&lt;/code&gt; является многоразовой библиотекой , тогда как &lt;code&gt;app&lt;/code&gt; описывает приложение не предназначено для использования в качестве зависимости. В библиотеке нет файла &lt;code&gt;shard.lock&lt;/code&gt; в репозитории и нет цели сборки в &lt;code&gt;shard.yml&lt;/code&gt; , но есть инструкции по его использованию в качестве зависимости.</target>
        </trans-unit>
        <trans-unit id="4f2b0f830f3e3c9d2c0fadd8f67d8f7eed5680ed" translate="yes" xml:space="preserve">
          <source>The first call's value is 3 because the last expression of the &lt;code&gt;twice&lt;/code&gt; method is &lt;code&gt;yield&lt;/code&gt;, which gets the value of the block. The second call's value is &quot;hello&quot; because a &lt;code&gt;break&lt;/code&gt; was performed.</source>
          <target state="translated">Значение Первый вызов является 3 , так как последнее выражение &lt;code&gt;twice&lt;/code&gt; метода является &lt;code&gt;yield&lt;/code&gt; , который получает значение блока. Значение второго вызова &quot;привет&quot;, потому что был сделан &lt;code&gt;break&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3fbfa33b37cfbb072d1b127aa2dce98fa6f5e510" translate="yes" xml:space="preserve">
          <source>The first column number in a line is &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">Номер первого столбца в строке - &lt;code&gt;1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1cf05659ff2d94c8303ab1881055ee47c442c275" translate="yes" xml:space="preserve">
          <source>The first line number in a file is 1.</source>
          <target state="translated">Номер первой строки в файле-1.</target>
        </trans-unit>
        <trans-unit id="29746ec8cc3c8ed07d200a43767fe0becddc922c" translate="yes" xml:space="preserve">
          <source>The first line number in a file is &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">Номер первой строки в файле - &lt;code&gt;1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8ad2055a017dbc22ca82f59ff581b5668a2f7435" translate="yes" xml:space="preserve">
          <source>The first two operators also have inversion operators (&lt;code&gt;!=&lt;/code&gt; and &lt;code&gt;!~&lt;/code&gt;) whose semantical intention is just the inverse of the base operator: &lt;code&gt;a != b&lt;/code&gt; is supposed to be equivalent to &lt;code&gt;!(a == b)&lt;/code&gt; and &lt;code&gt;a !~ b&lt;/code&gt; to &lt;code&gt;!(a =~ b)&lt;/code&gt;. Nevertheless, these inversions can be defined with a custom implementation. This can be useful for example to improve performance (non-equality can often be proven faster than equality).</source>
          <target state="translated">Первые два оператора также имеют операторы инверсии ( &lt;code&gt;!=&lt;/code&gt; И &lt;code&gt;!~&lt;/code&gt; ), Семантическое предназначение которых просто инверсия базового оператора: &lt;code&gt;a != b&lt;/code&gt; должно быть эквивалентно &lt;code&gt;!(a == b)&lt;/code&gt; и &lt;code&gt;a !~ b&lt;/code&gt; для &lt;code&gt;!(a =~ b)&lt;/code&gt; . Тем не менее, эти инверсии можно определить с помощью специальной реализации. Это может быть полезно, например, для повышения производительности (неравенство часто может быть доказано быстрее, чем равенство).</target>
        </trans-unit>
        <trans-unit id="7282b6d781cdedc397bb9f92b08cb71c689472a6" translate="yes" xml:space="preserve">
          <source>The first use case is using keywords as named arguments:</source>
          <target state="translated">Первый вариант использования-использование ключевых слов в качестве именованных аргументов:</target>
        </trans-unit>
        <trans-unit id="944607c5718cd118bb1cd25f452f563fd505d548" translate="yes" xml:space="preserve">
          <source>The flags modifies the behavior of the formats. The flag characters are:</source>
          <target state="translated">Флаги изменяют поведение форматов.Символы флагов:</target>
        </trans-unit>
        <trans-unit id="d9db0de34324fd35a0db1036bf4e44f8fe23ba11" translate="yes" xml:space="preserve">
          <source>The following configuration will setup for all sources to emit warnings (or higher) to &lt;code&gt;&lt;a href=&quot;toplevel#STDOUT&quot;&gt;STDOUT&lt;/a&gt;&lt;/code&gt;, allow any of the &lt;code&gt;db.*&lt;/code&gt; and nested source to emit debug (or higher), and to also emit for all sources errors (or higher) to an elasticsearch backend.</source>
          <target state="translated">Следующая конфигурация настроит для всех источников выдачу предупреждений (или выше) в &lt;code&gt;&lt;a href=&quot;toplevel#STDOUT&quot;&gt;STDOUT&lt;/a&gt;&lt;/code&gt; , разрешит любому из &lt;code&gt;db.*&lt;/code&gt; И вложенному источнику выдавать отладку (или выше), а также выдавать ошибки для всех источников (или выше) в бэкэнд elasticsearch.</target>
        </trans-unit>
        <trans-unit id="e6efa2cf6ab96201c82623d35b55f95ec36e4f81" translate="yes" xml:space="preserve">
          <source>The following environment variables are used by the Crystal compiler if set in the environment. Otherwise the compiler will populate them with default values. Their values can be inspected using &lt;a href=&quot;#crystal-env&quot;&gt;&lt;code&gt;crystal env&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Следующие переменные среды используются компилятором Crystal, если они установлены в среде. В противном случае компилятор заполнит их значениями по умолчанию. Их значения могут быть проверены с помощью &lt;a href=&quot;#crystal-env&quot;&gt; &lt;code&gt;crystal env&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b7401660e992738d61209507d4a620dd6d6b26e3" translate="yes" xml:space="preserve">
          <source>The following example demonstrates the &lt;code&gt;Vector2&lt;/code&gt; type as a two-dimensional vector with a binary operator method &lt;code&gt;+&lt;/code&gt; for vector addition.</source>
          <target state="translated">В следующем примере тип &lt;code&gt;Vector2&lt;/code&gt; демонстрируется как двумерный вектор с методом двоичного оператора &lt;code&gt;+&lt;/code&gt; для сложения векторов.</target>
        </trans-unit>
        <trans-unit id="979ce118433b9e43e3a661e508d42f6d8e9b0d8f" translate="yes" xml:space="preserve">
          <source>The following example demonstrates the &lt;code&gt;Vector2&lt;/code&gt; type as a two-dimensional vector with a unary operator method &lt;code&gt;-&lt;/code&gt; for vector inversion.</source>
          <target state="translated">В следующем примере тип &lt;code&gt;Vector2&lt;/code&gt; демонстрируется как двумерный вектор с унарным операторным методом &lt;code&gt;-&lt;/code&gt; для обращения вектора.</target>
        </trans-unit>
        <trans-unit id="3983fe891f5d77f5ef28a06038cb3661047a64b0" translate="yes" xml:space="preserve">
          <source>The following example is the classic Hello World. In Crystal it looks like this:</source>
          <target state="translated">Следующий пример-классический Hello World.В Кристалле это выглядит так:</target>
        </trans-unit>
        <trans-unit id="9cc7eb726ec3a5d3307d840aa0563e35c2723422" translate="yes" xml:space="preserve">
          <source>The following key values have special meaning:</source>
          <target state="translated">Следующие ключевые значения имеют особое значение:</target>
        </trans-unit>
        <trans-unit id="d7023ad60a85970889177c2463c53776a3c26ce2" translate="yes" xml:space="preserve">
          <source>The following normalizations are applied to the individual components (if available):</source>
          <target state="translated">К отдельным компонентам (при наличии)применяются следующие нормализации:</target>
        </trans-unit>
        <trans-unit id="32d153db4deb3628c27875d40cf8d305733ccd36" translate="yes" xml:space="preserve">
          <source>The following options can be combined to filter the list of specs to run.</source>
          <target state="translated">Следующие опции могут быть объединены для фильтрации списка выполняемых спецификаций.</target>
        </trans-unit>
        <trans-unit id="0016c7b15769c3e1fd83dd79375297c7acf71246" translate="yes" xml:space="preserve">
          <source>The following packages are compliant with crystal-db</source>
          <target state="translated">Следующие пакеты соответствуют кристаллу-db</target>
        </trans-unit>
        <trans-unit id="ed4a566b4ccf42840a4e12dadfcc10d7098e35b2" translate="yes" xml:space="preserve">
          <source>The following packages are not required, but recommended for using the respective features in the standard library:</source>
          <target state="translated">Следующие пакеты не требуются,но рекомендуются для использования соответствующих возможностей стандартной библиотеки:</target>
        </trans-unit>
        <trans-unit id="df2f6f226ab11b061d48e88e2f779470aed4df0a" translate="yes" xml:space="preserve">
          <source>The following program will print the current time from MySQL but if the connection is lost or the whole server is down for a few seconds the program will still run without raising exceptions.</source>
          <target state="translated">Следующая программа распечатает текущее время из MySQL,но если соединение будет потеряно или весь сервер не будет работать в течение нескольких секунд,то программа все равно будет работать без увеличения исключений.</target>
        </trans-unit>
        <trans-unit id="f65de8007c538aaa6706cdfae0b7fef84f90beff" translate="yes" xml:space="preserve">
          <source>The following rules only mention instance variables, but they apply to class variables as well. They are:</source>
          <target state="translated">Следующие правила упоминают только переменные экземпляра,но они применимы и к переменным класса.Так и есть:</target>
        </trans-unit>
        <trans-unit id="0dbd1e5907988d5a9b86e8a44f0b23026d0438da" translate="yes" xml:space="preserve">
          <source>The format follows that of &lt;code&gt;mime.types&lt;/code&gt;: Each line is list of MIME type and zero or more extensions, separated by whitespace.</source>
          <target state="translated">Формат соответствует формату &lt;code&gt;mime.types&lt;/code&gt; : каждая строка представляет собой список типа MIME и ноль или более расширений, разделенных пробелами.</target>
        </trans-unit>
        <trans-unit id="4236b918ce2dedb4ff39d640ea5ef84abf8e19ea" translate="yes" xml:space="preserve">
          <source>The formatted &lt;em&gt;offset&lt;/em&gt; is used as name.</source>
          <target state="translated">Отформатированное &lt;em&gt;смещение&lt;/em&gt; используется как имя.</target>
        </trans-unit>
        <trans-unit id="5e9084c0683429eb40329f37c13c0d6d200d202a" translate="yes" xml:space="preserve">
          <source>The formatter is also fast, so very little time is lost if you format the entire project instead of a single file.</source>
          <target state="translated">Форматирование также происходит быстро,поэтому очень мало времени теряется,если вы отформатируете весь проект вместо одного файла.</target>
        </trans-unit>
        <trans-unit id="05b48edc5cca42e2789ffc8837a2004918c00d01" translate="yes" xml:space="preserve">
          <source>The fourth rule is the second rule applied to the third rule.</source>
          <target state="translated">Четвертое правило является вторым правилом,применяемым к третьему правилу.</target>
        </trans-unit>
        <trans-unit id="875553d741f0131d3a1471771af261d1e9e2f076" translate="yes" xml:space="preserve">
          <source>The general idea and some of the arithmetic algorithms were adapted from the MIT/APACHE-licensed &lt;a href=&quot;https://github.com/akubera/bigdecimal-rs&quot;&gt;bigdecimal-rs&lt;/a&gt;.</source>
          <target state="translated">Общая идея и некоторые арифметические алгоритмы были адаптированы из &lt;a href=&quot;https://github.com/akubera/bigdecimal-rs&quot;&gt;bigdecimal-rs,&lt;/a&gt; лицензированной MIT / APACHE .</target>
        </trans-unit>
        <trans-unit id="bc894b0b17eb5fe1f8d04334d39d3eabd11f375d" translate="yes" xml:space="preserve">
          <source>The general type-safe interface for parsing JSON is to invoke &lt;code&gt;T.from_json&lt;/code&gt; on a target type &lt;code&gt;T&lt;/code&gt; and pass either a &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; as an argument.</source>
          <target state="translated">Общий типобезопасный интерфейс для анализа JSON состоит в том, чтобы вызывать &lt;code&gt;T.from_json&lt;/code&gt; для целевого типа &lt;code&gt;T&lt;/code&gt; и передавать в качестве аргумента либо &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; , либо &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e33ed10eb7e2b4410d4055c2b4e5f7f6dff7cad5" translate="yes" xml:space="preserve">
          <source>The generated &lt;code&gt;&lt;a href=&quot;object#==(other)-instance-method&quot;&gt;#==&lt;/a&gt;&lt;/code&gt; method has a &lt;code&gt;self&lt;/code&gt; restriction.</source>
          <target state="translated">Сгенерированный метод &lt;code&gt;&lt;a href=&quot;object#==(other)-instance-method&quot;&gt;#==&lt;/a&gt;&lt;/code&gt; имеет &lt;code&gt;self&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="161b9b9b4d7ee5f3338616ad526cac2a1b891f99" translate="yes" xml:space="preserve">
          <source>The generated code is the result of translating the contents of the ECR file to Crystal, a program that appends to an IO and returns a string.</source>
          <target state="translated">Сгенерированный код является результатом трансляции содержимого ECR-файла в Crystal,программу,которая присоединяется к IO и возвращает строку.</target>
        </trans-unit>
        <trans-unit id="850640a99607c250d09463c5d4d44a7952067ec8" translate="yes" xml:space="preserve">
          <source>The generated code is the result of translating the contents of the ECR file to Crystal, a program that appends to an IO.</source>
          <target state="translated">Сгенерированный код является результатом трансляции содержимого ECR-файла в Crystal,программу,которая прилагается к IO.</target>
        </trans-unit>
        <trans-unit id="d2927bf521c3240a458f018c8d8c7f2666a4b79c" translate="yes" xml:space="preserve">
          <source>The generated struct has a constructor with the given properties in the same order as declared. The struct only provides getters, not setters, making it immutable by default.</source>
          <target state="translated">Генерируемая структура имеет конструктор с заданными свойствами в том же порядке,что и объявленная.Структура предоставляет только геттеры,а не сеттеры,что делает ее неизменяемой по умолчанию.</target>
        </trans-unit>
        <trans-unit id="7ea3417d731136bbc84a172b8a9ec5bb44115268" translate="yes" xml:space="preserve">
          <source>The generic argument type &lt;code&gt;N&lt;/code&gt; is a special case in the type grammar as it doesn't specify a type but a size. Its value can be an &lt;code&gt;&lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; literal or constant.</source>
          <target state="translated">Универсальный тип аргумента &lt;code&gt;N&lt;/code&gt; является особым случаем в грамматике типа, так как он не указывает тип, а размер. Его значение может быть литералом &lt;code&gt;&lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; или константой.</target>
        </trans-unit>
        <trans-unit id="83da50509ca833b11f166b7098db606858beaa10" translate="yes" xml:space="preserve">
          <source>The generic type arguments for keys &lt;code&gt;K&lt;/code&gt; and values &lt;code&gt;V&lt;/code&gt; are inferred from the types of the keys or values inside the literal, respectively. When all have the same type, &lt;code&gt;K&lt;/code&gt;/&lt;code&gt;V&lt;/code&gt; equals to that. Otherwise it will be a union of all key types or value types respectively.</source>
          <target state="translated">Аргументы универсального типа для ключей &lt;code&gt;K&lt;/code&gt; и значений &lt;code&gt;V&lt;/code&gt; выводятся из типов ключей или значений внутри литерала, соответственно. Когда все имеют одинаковый тип, &lt;code&gt;K&lt;/code&gt; / &lt;code&gt;V&lt;/code&gt; равен этому. В противном случае это будет объединение всех типов ключей или типов значений соответственно.</target>
        </trans-unit>
        <trans-unit id="c0f491fd27dcca34e08785bd778bcdd9fbc7d310" translate="yes" xml:space="preserve">
          <source>The given block must implement a comparison between two elements &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt;, where &lt;code&gt;a &amp;lt; b&lt;/code&gt; returns &lt;code&gt;-1&lt;/code&gt;, &lt;code&gt;a == b&lt;/code&gt; returns &lt;code&gt;0&lt;/code&gt;, and &lt;code&gt;a &amp;gt; b&lt;/code&gt; returns &lt;code&gt;1&lt;/code&gt;. The comparison operator &lt;code&gt;&lt;a href=&quot;array#(other:Array)-instance-method&quot;&gt;#&amp;lt;=&amp;gt;&lt;/a&gt;&lt;/code&gt; can be used for this.</source>
          <target state="translated">Данный блок должен реализовать сравнение между двумя элементами &lt;em&gt;a&lt;/em&gt; и &lt;em&gt;b&lt;/em&gt; , где &lt;code&gt;a &amp;lt; b&lt;/code&gt; возвращает &lt;code&gt;-1&lt;/code&gt; , &lt;code&gt;a == b&lt;/code&gt; возвращает &lt;code&gt;0&lt;/code&gt; , а &lt;code&gt;a &amp;gt; b&lt;/code&gt; возвращает &lt;code&gt;1&lt;/code&gt; . Для этого можно использовать оператор сравнения &lt;code&gt;&lt;a href=&quot;array#(other:Array)-instance-method&quot;&gt;#&amp;lt;=&amp;gt;&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ba2c2765b46b6a78d9039aea25933b142ce4dcdb" translate="yes" xml:space="preserve">
          <source>The given block must implement a comparison between two elements &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt;, where &lt;code&gt;a &amp;lt; b&lt;/code&gt; returns &lt;code&gt;-1&lt;/code&gt;, &lt;code&gt;a == b&lt;/code&gt; returns &lt;code&gt;0&lt;/code&gt;, and &lt;code&gt;a &amp;gt; b&lt;/code&gt; returns &lt;code&gt;1&lt;/code&gt;. The comparison operator &lt;code&gt;&lt;a href=&quot;slice#(other:Slice(U))forallU-instance-method&quot;&gt;#&amp;lt;=&amp;gt;&lt;/a&gt;&lt;/code&gt; can be used for this.</source>
          <target state="translated">Данный блок должен реализовать сравнение между двумя элементами &lt;em&gt;a&lt;/em&gt; и &lt;em&gt;b&lt;/em&gt; , где &lt;code&gt;a &amp;lt; b&lt;/code&gt; возвращает &lt;code&gt;-1&lt;/code&gt; , &lt;code&gt;a == b&lt;/code&gt; возвращает &lt;code&gt;0&lt;/code&gt; , а &lt;code&gt;a &amp;gt; b&lt;/code&gt; возвращает &lt;code&gt;1&lt;/code&gt; . Для этого можно использовать оператор сравнения &lt;code&gt;&lt;a href=&quot;slice#(other:Slice(U))forallU-instance-method&quot;&gt;#&amp;lt;=&amp;gt;&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aba3c60d8e4ce8ec19e0181810c4cfbaaedf9003" translate="yes" xml:space="preserve">
          <source>The group ID that the file belongs to.</source>
          <target state="translated">Идентификатор группы,к которой принадлежит файл.</target>
        </trans-unit>
        <trans-unit id="5235400099bafbbbc2e0e548c45b0be465ae73c6" translate="yes" xml:space="preserve">
          <source>The group that will eventually run when calling &lt;code&gt;&lt;a href=&quot;procsy#run-instance-method&quot;&gt;#run&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Группа, которая в конечном итоге будет запущена при вызове &lt;code&gt;&lt;a href=&quot;procsy#run-instance-method&quot;&gt;#run&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1d63cffc2e9e719f4e3ebd2eeb037ae1637a0fb0" translate="yes" xml:space="preserve">
          <source>The group's identifier.</source>
          <target state="translated">Идентификатор группы.</target>
        </trans-unit>
        <trans-unit id="f305e58025f637bd1bb3abad3fefbca0047ef4dc" translate="yes" xml:space="preserve">
          <source>The group's name.</source>
          <target state="translated">Название группы.</target>
        </trans-unit>
        <trans-unit id="2052a3c1bb6b28b6bc273e30084593c5dba96709" translate="yes" xml:space="preserve">
          <source>The handler chain receives an instance of &lt;code&gt;&lt;a href=&quot;server/context&quot;&gt;HTTP::Server::Context&lt;/a&gt;&lt;/code&gt; that holds the &lt;code&gt;&lt;a href=&quot;request&quot;&gt;HTTP::Request&lt;/a&gt;&lt;/code&gt; to process and a &lt;code&gt;&lt;a href=&quot;server/response&quot;&gt;HTTP::Server::Response&lt;/a&gt;&lt;/code&gt; which it can configure and write to.</source>
          <target state="translated">Цепочка обработчиков получает экземпляр &lt;code&gt;&lt;a href=&quot;server/context&quot;&gt;HTTP::Server::Context&lt;/a&gt;&lt;/code&gt; который содержит &lt;code&gt;&lt;a href=&quot;request&quot;&gt;HTTP::Request&lt;/a&gt;&lt;/code&gt; для обработки, и &lt;code&gt;&lt;a href=&quot;server/response&quot;&gt;HTTP::Server::Response&lt;/a&gt;&lt;/code&gt; который он может настраивать и записывать.</target>
        </trans-unit>
        <trans-unit id="3281389107b6c7f72f81900bfaa5b500e9cdeb5a" translate="yes" xml:space="preserve">
          <source>The handler given to a server can simply be a block that receives an &lt;code&gt;&lt;a href=&quot;server/context&quot;&gt;HTTP::Server::Context&lt;/a&gt;&lt;/code&gt;, or it can be an instance of &lt;code&gt;&lt;a href=&quot;handler&quot;&gt;HTTP::Handler&lt;/a&gt;&lt;/code&gt;. An &lt;code&gt;&lt;a href=&quot;handler&quot;&gt;HTTP::Handler&lt;/a&gt;&lt;/code&gt; has a &lt;code&gt;#next&lt;/code&gt; method to forward processing to the next handler in the chain.</source>
          <target state="translated">Обработчик, данный серверу, может просто быть блоком, который получает &lt;code&gt;&lt;a href=&quot;server/context&quot;&gt;HTTP::Server::Context&lt;/a&gt;&lt;/code&gt; , или это может быть экземпляр &lt;code&gt;&lt;a href=&quot;handler&quot;&gt;HTTP::Handler&lt;/a&gt;&lt;/code&gt; . &lt;code&gt;&lt;a href=&quot;handler&quot;&gt;HTTP::Handler&lt;/a&gt;&lt;/code&gt; имеет &lt;code&gt;#next&lt;/code&gt; метод для обработки вперед к следующему обработчику в цепочке.</target>
        </trans-unit>
        <trans-unit id="e7fca7732240d34903abd174e4d0486dc5880a17" translate="yes" xml:space="preserve">
          <source>The hash value is used along with &lt;code&gt;&lt;a href=&quot;object#==(other)-instance-method&quot;&gt;#==&lt;/a&gt;&lt;/code&gt; by the &lt;code&gt;&lt;a href=&quot;hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; class to determine if two objects reference the same hash key.</source>
          <target state="translated">Значение хеш - функции используется вместе с &lt;code&gt;&lt;a href=&quot;object#==(other)-instance-method&quot;&gt;#==&lt;/a&gt;&lt;/code&gt; с помощью &lt;code&gt;&lt;a href=&quot;hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; - класса , чтобы определить , если два объекта ссылаются на тот же хэш - ключ.</target>
        </trans-unit>
        <trans-unit id="4296f7705e65b93fe2d747f546b9085bc93e071d" translate="yes" xml:space="preserve">
          <source>The hash value is used along with &lt;code&gt;==&lt;/code&gt; by the &lt;code&gt;&lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; class to determine if two objects reference the same hash key.</source>
          <target state="translated">Значение хеш - функции используется вместе с &lt;code&gt;==&lt;/code&gt; с помощью &lt;code&gt;&lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; - класса , чтобы определить , если два объекта ссылаются на один хэш - ключ.</target>
        </trans-unit>
        <trans-unit id="16d3793c30a780cf4f54bb683fa465b418aa48f7" translate="yes" xml:space="preserve">
          <source>The header to write to the gzip stream.</source>
          <target state="translated">Заголовок для записи в gzip-поток.</target>
        </trans-unit>
        <trans-unit id="fcc96ce881395326c49c3bd18847ce9208819136" translate="yes" xml:space="preserve">
          <source>The header to write to the gzip stream. It will be written just before the first write to this writer. Changes to the header after the first write are ignored.</source>
          <target state="translated">Заголовок для записи в gzip-поток.Он будет написан непосредственно перед первой записью этому писателю.Изменения в заголовке после первой записи игнорируются.</target>
        </trans-unit>
        <trans-unit id="22aee03c041742fe85df9b9e026008d04cf773b8" translate="yes" xml:space="preserve">
          <source>The implementation uses a list of system-specifc paths to look for a time zone database. The first time zone database entry matching the given name that is successfully loaded and parsed is returned. Typical paths on Unix-based operating systems are &lt;code&gt;/usr/share/zoneinfo/&lt;/code&gt;, &lt;code&gt;/usr/share/lib/zoneinfo/&lt;/code&gt;, or &lt;code&gt;/usr/lib/locale/TZ/&lt;/code&gt;.</source>
          <target state="translated">Реализация использует список системных путей для поиска базы данных часовых поясов. Возвращается первая запись базы данных часовых поясов, соответствующая заданному имени, которая успешно загружена и проанализирована. Типичные пути в операционных системах на основе Unix: &lt;code&gt;/usr/share/zoneinfo/&lt;/code&gt; , &lt;code&gt;/usr/share/lib/zoneinfo/&lt;/code&gt; или &lt;code&gt;/usr/lib/locale/TZ/&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="551883aa2990efd8eb5d4be92ebed96eae1f59aa" translate="yes" xml:space="preserve">
          <source>The initial value depends on the current application environment, see &lt;code&gt;&lt;a href=&quot;location#load_local:Location-class-method&quot;&gt;.load_local&lt;/a&gt;&lt;/code&gt; for details.</source>
          <target state="translated">Начальное значение зависит от текущей среды приложения, подробности смотрите в &lt;code&gt;&lt;a href=&quot;location#load_local:Location-class-method&quot;&gt;.load_local&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7029c3307fafac8110eb16f73429676ca35bcb88" translate="yes" xml:space="preserve">
          <source>The integers must be uniformly distributed between &lt;code&gt;0&lt;/code&gt; and the maximal value for the chosen type.</source>
          <target state="translated">Целые числа должны быть равномерно распределены между &lt;code&gt;0&lt;/code&gt; и максимальным значением для выбранного типа.</target>
        </trans-unit>
        <trans-unit id="926dd5e448113cba2500b56bfc57b8b5d6768ae8" translate="yes" xml:space="preserve">
          <source>The internal bindings to the &lt;code&gt;LibCrypto&lt;/code&gt; digest operations sometimes require a hash algorithm implementation to be passed as one of the arguments.</source>
          <target state="translated">Внутренние привязки к &lt;code&gt;LibCrypto&lt;/code&gt; дайджеста LibCrypto иногда требуют, чтобы реализация алгоритма хеширования была передана в качестве одного из аргументов.</target>
        </trans-unit>
        <trans-unit id="25f7c6863f521bdd9ec42e3a206a1f95cdfc1cf8" translate="yes" xml:space="preserve">
          <source>The internal buffer can be resizeable and/or writeable depending on how an &lt;code&gt;&lt;a href=&quot;memory&quot;&gt;IO::Memory&lt;/a&gt;&lt;/code&gt; is constructed.</source>
          <target state="translated">Внутренний буфер может быть изменяемого размера и / или записи в зависимости от того, как устроен &lt;code&gt;&lt;a href=&quot;memory&quot;&gt;IO::Memory&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="45606955e8cce931909a6c69d5ede679a4b15aee" translate="yes" xml:space="preserve">
          <source>The iteration will be stopped once the block returns something that isn't an &lt;code&gt;&lt;a href=&quot;../exception&quot;&gt;Exception&lt;/a&gt;&lt;/code&gt; (e.g. a &lt;code&gt;&lt;a href=&quot;../socket&quot;&gt;Socket&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;nil&lt;/code&gt;).</source>
          <target state="translated">Итерация будет остановлена, как только блок вернет что-то, что не является &lt;code&gt;&lt;a href=&quot;../exception&quot;&gt;Exception&lt;/a&gt;&lt;/code&gt; (например, &lt;code&gt;&lt;a href=&quot;../socket&quot;&gt;Socket&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;nil&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="3de70595cf93069e85ebe84d6457f06c459c743c" translate="yes" xml:space="preserve">
          <source>The label associated with this measure</source>
          <target state="translated">Этикетка,связанная с этой мерой</target>
        </trans-unit>
        <trans-unit id="57d320a91ddd2ac3c63bd9cb42a7f749663eebb6" translate="yes" xml:space="preserve">
          <source>The language and the standard library provide short, readable, easy ways to deal with &lt;code&gt;nil&lt;/code&gt;, such as &lt;code&gt;&lt;a href=&quot;object#try(&amp;amp;)-instance-method&quot;&gt;Object#try&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;object#not_nil!-instance-method&quot;&gt;Object#not_nil!&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">Язык и стандартная библиотека предоставляют короткие, удобочитаемые и простые способы работы с &lt;code&gt;nil&lt;/code&gt; , такие как &lt;code&gt;&lt;a href=&quot;object#try(&amp;amp;)-instance-method&quot;&gt;Object#try&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;object#not_nil!-instance-method&quot;&gt;Object#not_nil!&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="0c961f49abfbcb5c3bb290b23e0091e5688b3672" translate="yes" xml:space="preserve">
          <source>The language and the standard library provide short, readable, easy ways to deal with &lt;code&gt;nil&lt;/code&gt;, such as &lt;code&gt;&lt;a href=&quot;object#try(&amp;amp;block)-instance-method&quot;&gt;Object#try&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;object#not_nil!-instance-method&quot;&gt;Object#not_nil!&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">Язык и стандартная библиотека предоставляют короткие, удобочитаемые и простые способы работы с &lt;code&gt;nil&lt;/code&gt; , такие как &lt;code&gt;&lt;a href=&quot;object#try(&amp;amp;block)-instance-method&quot;&gt;Object#try&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;object#not_nil!-instance-method&quot;&gt;Object#not_nil!&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="627158d44810f0a6c7e5859fc56380ad01ee04a5" translate="yes" xml:space="preserve">
          <source>The last time this file was modified.</source>
          <target state="translated">Последний раз этот файл был изменен.</target>
        </trans-unit>
        <trans-unit id="c51aa65ff430b4020b0598581342b2d9c53c76cc" translate="yes" xml:space="preserve">
          <source>The last two definitions are invalid and so will give a compile-time error.</source>
          <target state="translated">Последние два определения являются недействительными,что приводит к ошибке во время компиляции.</target>
        </trans-unit>
        <trans-unit id="3d46ef3cd6d700f9d2f8be43c61a3e6f036414ea" translate="yes" xml:space="preserve">
          <source>The latest files can be found on the Releases page at GitHub: &lt;a href=&quot;https://github.com/crystal-lang/crystal/releases&quot;&gt;https://github.com/crystal-lang/crystal/releases&lt;/a&gt;</source>
          <target state="translated">Последние файлы можно найти на странице релизов на GitHub: &lt;a href=&quot;https://github.com/crystal-lang/crystal/releases&quot;&gt;https://github.com/crystal-lang/crystal/releases.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e45bae2af6044b01904d8c087fbbd7d764ef7120" translate="yes" xml:space="preserve">
          <source>The line where the example or example group ends.</source>
          <target state="translated">Строка,где заканчивается пример или группа примеров.</target>
        </trans-unit>
        <trans-unit id="f950369918dda495a30052c744c751fa7e48ac2c" translate="yes" xml:space="preserve">
          <source>The line where the example or example group starts.</source>
          <target state="translated">Строка,в которой начинается пример или группа примеров.</target>
        </trans-unit>
        <trans-unit id="35dbb84b4256926f3ab51300c4ed1ac0f729b277" translate="yes" xml:space="preserve">
          <source>The line where this node ends.</source>
          <target state="translated">Строка,где заканчивается этот узел.</target>
        </trans-unit>
        <trans-unit id="4a892453dc7603d33c3517f69db5942483971c7d" translate="yes" xml:space="preserve">
          <source>The line where this node starts.</source>
          <target state="translated">Линия,где начинается этот узел.</target>
        </trans-unit>
        <trans-unit id="bedd54aa13c2cb76927bb6b0d17610a9102fc5b2" translate="yes" xml:space="preserve">
          <source>The list of secure ciphers (intermediate security) as of May 2016 as per https://wiki.mozilla.org/Security/Server_Side_TLS</source>
          <target state="translated">Список защищенных шифров (промежуточная безопасность)по состоянию на май 2016 года по адресу https://wiki.mozilla.org/Security/Server_Side_TLS.</target>
        </trans-unit>
        <trans-unit id="334ab5a5dd9046b31057b4fa736050116313f335" translate="yes" xml:space="preserve">
          <source>The list of secure ciphers on &lt;strong&gt;intermediate&lt;/strong&gt; compatibility level as per Mozilla recommendations.</source>
          <target state="translated">Список безопасных шифров на &lt;strong&gt;промежуточном&lt;/strong&gt; уровне совместимости согласно рекомендациям Mozilla.</target>
        </trans-unit>
        <trans-unit id="9bec8b58159c32b70423479e67a93fef86c51316" translate="yes" xml:space="preserve">
          <source>The list of secure ciphers on &lt;strong&gt;modern&lt;/strong&gt; compatibility level as per Mozilla recommendations.</source>
          <target state="translated">Список безопасных шифров на &lt;strong&gt;современном&lt;/strong&gt; уровне совместимости согласно рекомендациям Mozilla.</target>
        </trans-unit>
        <trans-unit id="8f1d5f708715ea37c51acf659245c003d445345d" translate="yes" xml:space="preserve">
          <source>The list of secure ciphers on &lt;strong&gt;old&lt;/strong&gt; compatibility level as per Mozilla recommendations.</source>
          <target state="translated">Список безопасных шифров на &lt;strong&gt;старом&lt;/strong&gt; уровне совместимости согласно рекомендациям Mozilla.</target>
        </trans-unit>
        <trans-unit id="2f7f1512675cd07ffa18f48d9a4fccdb4ae2ec35" translate="yes" xml:space="preserve">
          <source>The list of valid call conventions is:</source>
          <target state="translated">Список действительных соглашений о вызовах:</target>
        </trans-unit>
        <trans-unit id="837ef61d38d181f259cc57a7840d151fb3ec7fb2" translate="yes" xml:space="preserve">
          <source>The literal &lt;code&gt;x..y&lt;/code&gt; is semantically equivalent to the explicit constructor &lt;code&gt;Range.new(x, y)&lt;/code&gt; and &lt;code&gt;x...y&lt;/code&gt; to &lt;code&gt;Range.new(x, y, true)&lt;/code&gt;.</source>
          <target state="translated">Литерал &lt;code&gt;x..y&lt;/code&gt; семантически эквивалентен явному конструктору &lt;code&gt;Range.new(x, y)&lt;/code&gt; а &lt;code&gt;x...y&lt;/code&gt; - &lt;code&gt;Range.new(x, y, true)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="443382cb3c25faa904e8e39d00f50b9475f6c0fc" translate="yes" xml:space="preserve">
          <source>The local date-time is formatted as date string &lt;code&gt;YYYY-MM-DD HH:mm:ss +ZZ:ZZ:ZZ&lt;/code&gt;. Nanoseconds are always omitted. When the location is &lt;code&gt;UTC&lt;/code&gt;, the offset is replaced with the string &lt;code&gt;UTC&lt;/code&gt;. Offset seconds are omitted if &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">Местная дата и время форматируются в виде строки даты &lt;code&gt;YYYY-MM-DD HH:mm:ss +ZZ:ZZ:ZZ&lt;/code&gt; . Наносекунды всегда опускаются. Если местоположение &lt;code&gt;UTC&lt;/code&gt; , смещение заменяется строкой &lt;code&gt;UTC&lt;/code&gt; . Смещение секунд опускается, если &lt;code&gt;0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b65b3c1c821ed13bb28df926804f32c12f3596c8" translate="yes" xml:space="preserve">
          <source>The local date-time is formatted as date string &lt;code&gt;YYYY-MM-DD HH:mm:ss.nnnnnnnnn +ZZ:ZZ:ZZ&lt;/code&gt;. Nanoseconds are omitted if &lt;em&gt;with_nanoseconds&lt;/em&gt; is &lt;code&gt;false&lt;/code&gt;. When the location is &lt;code&gt;UTC&lt;/code&gt;, the offset is omitted. Offset seconds are omitted if &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">Местная дата и время форматируются в виде строки даты &lt;code&gt;YYYY-MM-DD HH:mm:ss.nnnnnnnnn +ZZ:ZZ:ZZ&lt;/code&gt; . Наносекунды опускаются, если &lt;em&gt;with_nanoseconds&lt;/em&gt; имеет значение &lt;code&gt;false&lt;/code&gt; . Когда местоположение &lt;code&gt;UTC&lt;/code&gt; , смещение не указывается. Смещение секунд опускается, если &lt;code&gt;0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="184d719b08c2753a11c73738ee57380c402105b8" translate="yes" xml:space="preserve">
          <source>The local date-time representation is resolved to a single instant based on the offset observed in the &lt;em&gt;location&lt;/em&gt; at this time.</source>
          <target state="translated">Локальное представление даты и времени разрешается в один момент времени на основе смещения, наблюдаемого в &lt;em&gt;местоположении&lt;/em&gt; в это время.</target>
        </trans-unit>
        <trans-unit id="d2875926d172f8d83bdeccbac97d0322873b8baa" translate="yes" xml:space="preserve">
          <source>The local time zone can be accessed as &lt;code&gt;&lt;a href=&quot;location#local-class-method&quot;&gt;Time::Location.local&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Местный часовой пояс доступен как &lt;code&gt;&lt;a href=&quot;location#local-class-method&quot;&gt;Time::Location.local&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="28617c980adc3b58be7a49ee8fd40b74ec9bb1ec" translate="yes" xml:space="preserve">
          <source>The local time zone can be accessed as &lt;code&gt;&lt;a href=&quot;location#local:Location?-class-method&quot;&gt;Time::Location.local&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Доступ к местному часовому поясу можно получить как &lt;code&gt;&lt;a href=&quot;location#local:Location?-class-method&quot;&gt;Time::Location.local&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="90eeed6293d92c74a1e69b07b8426101885fd4b8" translate="yes" xml:space="preserve">
          <source>The lookup goes like this:</source>
          <target state="translated">Взгляд идет вот так:</target>
        </trans-unit>
        <trans-unit id="bb7ce699e9b0bc8557c425725e6e5fe9464c66ee" translate="yes" xml:space="preserve">
          <source>The machine epsilon (difference between 1.0 and the next representable value)</source>
          <target state="translated">Аппаратный эпсилон (разница между 1,0 и следующим представляемым значением)</target>
        </trans-unit>
        <trans-unit id="c390bce9391403d5c083998ebdf467a8babab09a" translate="yes" xml:space="preserve">
          <source>The macro basically defines a constructor accepting a &lt;code&gt;&lt;a href=&quot;json/pullparser&quot;&gt;JSON::PullParser&lt;/a&gt;&lt;/code&gt; that reads from it and initializes this type's instance variables. It also defines a &lt;code&gt;to_json(&lt;a href=&quot;json/builder&quot;&gt;JSON::Builder&lt;/a&gt;)&lt;/code&gt; method by invoking &lt;code&gt;to_json(&lt;a href=&quot;json/builder&quot;&gt;JSON::Builder&lt;/a&gt;)&lt;/code&gt; on each of the properties (unless a converter is specified, in which case &lt;code&gt;to_json(value, &lt;a href=&quot;json/builder&quot;&gt;JSON::Builder&lt;/a&gt;)&lt;/code&gt; is invoked).</source>
          <target state="translated">Макрос в основном определяет конструктор, принимающий &lt;code&gt;&lt;a href=&quot;json/pullparser&quot;&gt;JSON::PullParser&lt;/a&gt;&lt;/code&gt; который читает из него и инициализирует переменные экземпляра этого типа. Он также определяет &lt;code&gt;to_json(&lt;a href=&quot;json/builder&quot;&gt;JSON::Builder&lt;/a&gt;)&lt;/code&gt; , вызывая &lt;code&gt;to_json(&lt;a href=&quot;json/builder&quot;&gt;JSON::Builder&lt;/a&gt;)&lt;/code&gt; для каждого из свойств (если не указан конвертер, и в этом случае &lt;code&gt;to_json(value, &lt;a href=&quot;json/builder&quot;&gt;JSON::Builder&lt;/a&gt;)&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="613f7556e399e351df8b8582fba7c1a7af627c5d" translate="yes" xml:space="preserve">
          <source>The macro basically defines a constructor accepting a &lt;code&gt;&lt;a href=&quot;yaml/pullparser&quot;&gt;YAML::PullParser&lt;/a&gt;&lt;/code&gt; that reads from it and initializes this type's instance variables.</source>
          <target state="translated">Макрос в основном определяет конструктор, принимающий &lt;code&gt;&lt;a href=&quot;yaml/pullparser&quot;&gt;YAML::PullParser&lt;/a&gt;&lt;/code&gt; который читает из него и инициализирует переменные экземпляра этого типа.</target>
        </trans-unit>
        <trans-unit id="66bec5e4d79d31c55fd05c99468c37789fb1e9e9" translate="yes" xml:space="preserve">
          <source>The macro basically translates the text inside the given file to Crystal code that appends to the IO:</source>
          <target state="translated">Макрос в основном транслирует текст внутри данного файла в Crystal код,который добавляется к IO:</target>
        </trans-unit>
        <trans-unit id="24cc5d7baa9f7f8a604002182c5829a497d36738" translate="yes" xml:space="preserve">
          <source>The main difference is that &lt;code&gt;&lt;a href=&quot;uri#encode_www_form(string:String,*,space_to_plus:Bool=true):String-class-method&quot;&gt;.encode_www_form&lt;/a&gt;&lt;/code&gt; encodes reserved characters (see &lt;code&gt;&lt;a href=&quot;uri#reserved?(byte):Bool-class-method&quot;&gt;.reserved?&lt;/a&gt;&lt;/code&gt;), while &lt;code&gt;&lt;a href=&quot;uri#encode(string:String,io:IO,*,space_to_plus:Bool=false):Nil-class-method&quot;&gt;.encode&lt;/a&gt;&lt;/code&gt; does not. The decode methods are identical except for the handling of &lt;code&gt;+&lt;/code&gt; characters.</source>
          <target state="translated">Основное отличие состоит в том, что &lt;code&gt;&lt;a href=&quot;uri#encode_www_form(string:String,*,space_to_plus:Bool=true):String-class-method&quot;&gt;.encode_www_form&lt;/a&gt;&lt;/code&gt; кодирует зарезервированные символы (см. &lt;code&gt;&lt;a href=&quot;uri#reserved?(byte):Bool-class-method&quot;&gt;.reserved?&lt;/a&gt;&lt;/code&gt; ), А &lt;code&gt;&lt;a href=&quot;uri#encode(string:String,io:IO,*,space_to_plus:Bool=false):Nil-class-method&quot;&gt;.encode&lt;/a&gt;&lt;/code&gt; - нет. Методы декодирования идентичны, за исключением обработки символов &lt;code&gt;+&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="477ff84a12e6ba25cdd1acfd1d9c58d4ff17d1cb" translate="yes" xml:space="preserve">
          <source>The main difference is that &lt;code&gt;&lt;a href=&quot;uri#encode_www_form(string:String,io:IO,*,space_to_plus:Bool=true):Nil-class-method&quot;&gt;.encode_www_form&lt;/a&gt;&lt;/code&gt; encodes reserved characters (see &lt;code&gt;&lt;a href=&quot;uri#reserved?(byte):Bool-class-method&quot;&gt;.reserved?&lt;/a&gt;&lt;/code&gt;), while &lt;code&gt;&lt;a href=&quot;uri#encode(string:String,io:IO,*,space_to_plus:Bool=false):Nil-class-method&quot;&gt;.encode&lt;/a&gt;&lt;/code&gt; does not. The decode methods are identical except for the handling of &lt;code&gt;+&lt;/code&gt; characters.</source>
          <target state="translated">Основное отличие состоит в том, что &lt;code&gt;&lt;a href=&quot;uri#encode_www_form(string:String,io:IO,*,space_to_plus:Bool=true):Nil-class-method&quot;&gt;.encode_www_form&lt;/a&gt;&lt;/code&gt; кодирует зарезервированные символы (см. &lt;code&gt;&lt;a href=&quot;uri#reserved?(byte):Bool-class-method&quot;&gt;.reserved?&lt;/a&gt;&lt;/code&gt; ), А &lt;code&gt;&lt;a href=&quot;uri#encode(string:String,io:IO,*,space_to_plus:Bool=false):Nil-class-method&quot;&gt;.encode&lt;/a&gt;&lt;/code&gt; - нет. Методы декодирования идентичны, за исключением обработки символов &lt;code&gt;+&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0fd8c5f9386095d91293b8f358c5e30735f376f5" translate="yes" xml:space="preserve">
          <source>The main differences between Windows and POSIX paths:</source>
          <target state="translated">Основные различия между путями Windows и POSIX:</target>
        </trans-unit>
        <trans-unit id="92b88c577a0a19817b0fd3b6204cf9c516c60358" translate="yes" xml:space="preserve">
          <source>The major version of this semantic version</source>
          <target state="translated">Основная версия этой семантической версии</target>
        </trans-unit>
        <trans-unit id="a542a8312c005e7f8ee22608266bfa27fba9017c" translate="yes" xml:space="preserve">
          <source>The maximum character.</source>
          <target state="translated">Максимальный характер.</target>
        </trans-unit>
        <trans-unit id="2e7ee3b80c77b27f4c54e9f5e5f26120adf74568" translate="yes" xml:space="preserve">
          <source>The maximum possible normal power of 2 exponent</source>
          <target state="translated">Максимально возможная нормальная мощность 2 экспонента</target>
        </trans-unit>
        <trans-unit id="5d749b04f26091a11fffc09985e539c3f4376a94" translate="yes" xml:space="preserve">
          <source>The maximum possible power of 10 exponent (such that 10**MAX_10_EXP is representable)</source>
          <target state="translated">Максимально возможная мощность 10 экспонентов (так что 10**MAX_10_EXP репрезентативна)</target>
        </trans-unit>
        <trans-unit id="efacea0a3e6d127c843098e6e5a8441a58d7fe7e" translate="yes" xml:space="preserve">
          <source>The maximum valid codepoint for a character.</source>
          <target state="translated">Максимально допустимая кодовая точка для символа.</target>
        </trans-unit>
        <trans-unit id="4f1540445e5df2982cad31413cb4389367488faa" translate="yes" xml:space="preserve">
          <source>The measurement relies on the monotonic clock and is not affected by fluctuations of the system clock (see &lt;code&gt;&lt;a href=&quot;time#monotonic:Time::Span-class-method&quot;&gt;#monotonic&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">Измерение основано на монотонных часах и не зависит от колебаний системных часов (см. # &lt;code&gt;&lt;a href=&quot;time#monotonic:Time::Span-class-method&quot;&gt;#monotonic&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="9785cceeff3afbae34b0159f6356ee230b9c1dbf" translate="yes" xml:space="preserve">
          <source>The memory is allocated by the &lt;code&gt;&lt;a href=&quot;gc&quot;&gt;GC&lt;/a&gt;&lt;/code&gt;, so when there are no pointers to this memory, it will be automatically freed.</source>
          <target state="translated">Память выделяется &lt;code&gt;&lt;a href=&quot;gc&quot;&gt;GC&lt;/a&gt;&lt;/code&gt; , поэтому, когда нет указателей на эту память, она будет автоматически освобождена.</target>
        </trans-unit>
        <trans-unit id="2a9acbe90587d703a07c3a5d3669e351d458e4b9" translate="yes" xml:space="preserve">
          <source>The messages have associated levels, such as &lt;code&gt;&lt;a href=&quot;logger#INFO&quot;&gt;INFO&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;logger#ERROR&quot;&gt;ERROR&lt;/a&gt;&lt;/code&gt; that indicate their importance. You can then give the &lt;code&gt;&lt;a href=&quot;logger&quot;&gt;Logger&lt;/a&gt;&lt;/code&gt; a level, and only messages at that level or higher will be printed.</source>
          <target state="translated">Сообщения имеют связанные уровни, такие как &lt;code&gt;&lt;a href=&quot;logger#INFO&quot;&gt;INFO&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;logger#ERROR&quot;&gt;ERROR&lt;/a&gt;&lt;/code&gt; , которые указывают на их важность. Затем вы можете &lt;code&gt;&lt;a href=&quot;logger&quot;&gt;Logger&lt;/a&gt;&lt;/code&gt; уровень, и будут печататься только сообщения этого уровня или выше.</target>
        </trans-unit>
        <trans-unit id="85073eca0fab4ff6430711f9a21a414a7b80bc72" translate="yes" xml:space="preserve">
          <source>The messages, or &lt;code&gt;&lt;a href=&quot;log/entry&quot;&gt;Log::Entry&lt;/a&gt;&lt;/code&gt; have associated levels, such as &lt;code&gt;Info&lt;/code&gt; or &lt;code&gt;Error&lt;/code&gt; that indicate their importance. See &lt;code&gt;&lt;a href=&quot;log/severity&quot;&gt;Log::Severity&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Сообщения или &lt;code&gt;&lt;a href=&quot;log/entry&quot;&gt;Log::Entry&lt;/a&gt;&lt;/code&gt; имеют связанные уровни, такие как &lt;code&gt;Info&lt;/code&gt; или &lt;code&gt;Error&lt;/code&gt; , которые указывают на их важность. См. &lt;code&gt;&lt;a href=&quot;log/severity&quot;&gt;Log::Severity&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6a325dabdd4e7156d25135a862cc70b6e8c694cf" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://crystal-lang.org/api/latest/toplevel.html#gets%28*args,**options%29-class-method&quot;&gt;&lt;code&gt;gets&lt;/code&gt;&lt;/a&gt; will &lt;strong&gt;pause&lt;/strong&gt; the execution of the application, until the user finishes entering the input (pressing the &lt;code&gt;Enter&lt;/code&gt; key). When the user presses &lt;code&gt;Enter&lt;/code&gt;, then the execution will continue and &lt;code&gt;user_input&lt;/code&gt; will have the user value.</source>
          <target state="translated">Метод &lt;a href=&quot;https://crystal-lang.org/api/latest/toplevel.html#gets%28*args,**options%29-class-method&quot;&gt; &lt;code&gt;gets&lt;/code&gt; &lt;/a&gt; будет &lt;strong&gt;приостановить&lt;/strong&gt; выполнение приложения, до тех пор , пока пользователь не заканчивается , поступающий на вход (нажимать &lt;code&gt;Enter&lt;/code&gt; ключ). Когда пользователь нажимает &lt;code&gt;Enter&lt;/code&gt; , выполнение будет продолжено, и &lt;code&gt;user_input&lt;/code&gt; будет иметь значение пользователя.</target>
        </trans-unit>
        <trans-unit id="79059b37ccde55e0de51ec59b6bc7015df02202c" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;&lt;a href=&quot;time#to_s(format:String):String-instance-method&quot;&gt;#to_s&lt;/a&gt;&lt;/code&gt; formats the date-time according to a specified pattern.</source>
          <target state="translated">Метод &lt;code&gt;&lt;a href=&quot;time#to_s(format:String):String-instance-method&quot;&gt;#to_s&lt;/a&gt;&lt;/code&gt; форматирует дату и время в соответствии с указанным шаблоном.</target>
        </trans-unit>
        <trans-unit id="b5f1647fa4d472453be3476f0555d8c316c55797" translate="yes" xml:space="preserve">
          <source>The minimum possible normal power of 2 exponent</source>
          <target state="translated">Минимальная возможная нормальная мощность 2 экспонента</target>
        </trans-unit>
        <trans-unit id="26806f6ed283af57d43319fb6240eff3c52738e3" translate="yes" xml:space="preserve">
          <source>The minimum possible power of 10 exponent (such that 10**MIN_10_EXP is representable)</source>
          <target state="translated">Минимально возможная мощность 10 экспонентов (так что 10**MIN_10_EXP репрезентативна)</target>
        </trans-unit>
        <trans-unit id="02879b0ef4ab29b6647d81af88e6c64df344a41b" translate="yes" xml:space="preserve">
          <source>The minor version of this semantic version</source>
          <target state="translated">Миниатюрная версия этой семантической версии</target>
        </trans-unit>
        <trans-unit id="699d0fce28e9c2d7583b258bd7c662d9d3baaac5" translate="yes" xml:space="preserve">
          <source>The most typical use case of a Deque is a queue: use &lt;code&gt;&lt;a href=&quot;deque#push(value:T)-instance-method&quot;&gt;#push&lt;/a&gt;&lt;/code&gt; to add items to the end of the queue and &lt;code&gt;&lt;a href=&quot;deque#shift-instance-method&quot;&gt;#shift&lt;/a&gt;&lt;/code&gt; to get and remove the item at the beginning of the queue.</source>
          <target state="translated">Наиболее типичный вариант использования &lt;code&gt;&lt;a href=&quot;deque#push(value:T)-instance-method&quot;&gt;#push&lt;/a&gt;&lt;/code&gt; - это очередь: используйте #push для добавления элементов в конец очереди и &lt;code&gt;&lt;a href=&quot;deque#shift-instance-method&quot;&gt;#shift&lt;/a&gt;&lt;/code&gt; для получения и удаления элемента в начале очереди.</target>
        </trans-unit>
        <trans-unit id="ab75b012f87e2f58693175b5170d0957e5f7aa7a" translate="yes" xml:space="preserve">
          <source>The multicast hops option controls the &lt;code&gt;hoplimit&lt;/code&gt; field on uni-cast packets.</source>
          <target state="translated">Параметр многоадресных прыжков управляет полем &lt;code&gt;hoplimit&lt;/code&gt; в одноадресных пакетах.</target>
        </trans-unit>
        <trans-unit id="376fe9ebc2a1cd19b33ca38e7c489c42078eb66c" translate="yes" xml:space="preserve">
          <source>The multicast hops option controls the &lt;code&gt;hoplimit&lt;/code&gt; field on uni-cast packets. If &lt;code&gt;-1&lt;/code&gt; is specified, the kernel will use a default value. If a value of &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;255&lt;/code&gt; is specified, the packet will have the specified value as &lt;code&gt;hoplimit&lt;/code&gt;. Other values are considered invalid and &lt;code&gt;&lt;a href=&quot;errno&quot;&gt;Errno&lt;/a&gt;&lt;/code&gt; will be raised. Datagrams with a &lt;code&gt;hoplimit&lt;/code&gt; of &lt;code&gt;1&lt;/code&gt; are not forwarded beyond the local network. Multicast datagrams with a &lt;code&gt;hoplimit&lt;/code&gt; of &lt;code&gt;0&lt;/code&gt; will not be transmitted on any network, but may be delivered locally if the sending host belongs to the destination group and multicast loopback is enabled.</source>
          <target state="translated">Параметр многоадресных прыжков управляет полем &lt;code&gt;hoplimit&lt;/code&gt; в одноадресных пакетах. Если указано &lt;code&gt;-1&lt;/code&gt; , ядро ​​будет использовать значение по умолчанию. Если указано значение от &lt;code&gt;0&lt;/code&gt; до &lt;code&gt;255&lt;/code&gt; , пакет будет иметь указанное значение как &lt;code&gt;hoplimit&lt;/code&gt; . Другие значения считаются недействительными, и &lt;code&gt;&lt;a href=&quot;errno&quot;&gt;Errno&lt;/a&gt;&lt;/code&gt; будет повышен. Датаграммы с &lt;code&gt;hoplimit&lt;/code&gt; из &lt;code&gt;1&lt;/code&gt; не передаются за пределы локальной сети. Multicast дейтаграммы с &lt;code&gt;hoplimit&lt;/code&gt; от &lt;code&gt;0&lt;/code&gt; не будет передаваться в любой сети, но могут быть доставлены локально , если посылающий хост принадлежит к группе назначения и многоадресной петлевой включен.</target>
        </trans-unit>
        <trans-unit id="dc418ba88e0fe15c8a9672a23317d75e2a4acef4" translate="yes" xml:space="preserve">
          <source>The multicast hops option controls the &lt;code&gt;hoplimit&lt;/code&gt; field on uni-cast packets. If &lt;code&gt;-1&lt;/code&gt; is specified, the kernel will use a default value. If a value of &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;255&lt;/code&gt; is specified, the packet will have the specified value as &lt;code&gt;hoplimit&lt;/code&gt;. Other values are considered invalid and &lt;code&gt;&lt;a href=&quot;socket/error&quot;&gt;Socket::Error&lt;/a&gt;&lt;/code&gt; will be raised. Datagrams with a &lt;code&gt;hoplimit&lt;/code&gt; of &lt;code&gt;1&lt;/code&gt; are not forwarded beyond the local network. Multicast datagrams with a &lt;code&gt;hoplimit&lt;/code&gt; of &lt;code&gt;0&lt;/code&gt; will not be transmitted on any network, but may be delivered locally if the sending host belongs to the destination group and multicast loopback is enabled.</source>
          <target state="translated">Опция многоадресных переходов управляет полем &lt;code&gt;hoplimit&lt;/code&gt; в одноадресных пакетах. Если указано &lt;code&gt;-1&lt;/code&gt; , ядро ​​будет использовать значение по умолчанию. Если указано значение от &lt;code&gt;0&lt;/code&gt; до &lt;code&gt;255&lt;/code&gt; , пакет будет иметь указанное значение как &lt;code&gt;hoplimit&lt;/code&gt; . Остальные значения считаются недопустимыми, и вызывается &lt;code&gt;&lt;a href=&quot;socket/error&quot;&gt;Socket::Error&lt;/a&gt;&lt;/code&gt; . Датаграммы с &lt;code&gt;hoplimit&lt;/code&gt; из &lt;code&gt;1&lt;/code&gt; не передаются за пределы локальной сети. Multicast дейтаграммы с &lt;code&gt;hoplimit&lt;/code&gt; от &lt;code&gt;0&lt;/code&gt; не будет передаваться в любой сети, но могут быть доставлены локально , если посылающий хост принадлежит к группе назначения и многоадресной петлевой включен.</target>
        </trans-unit>
        <trans-unit id="104f47f2cc5a5abd173a75e9507ec460a87beeaa" translate="yes" xml:space="preserve">
          <source>The name of the fiber, used as internal reference.</source>
          <target state="translated">Название волокна,используемое в качестве внутренней ссылки.</target>
        </trans-unit>
        <trans-unit id="4e758fd8fecf2be686c56b541c8c809b3067485d" translate="yes" xml:space="preserve">
          <source>The name of the location is appended unless it is a fixed zone offset.</source>
          <target state="translated">Название местоположения добавляется,если только оно не является фиксированным смещением зоны.</target>
        </trans-unit>
        <trans-unit id="bb028927b758c34b9bde7df608f21b7744ef223a" translate="yes" xml:space="preserve">
          <source>The name of the null device on the host platform. &lt;code&gt;/dev/null&lt;/code&gt; on UNIX and &lt;code&gt;NUL&lt;/code&gt; on win32.</source>
          <target state="translated">Имя нулевого устройства на платформе хоста. &lt;code&gt;/dev/null&lt;/code&gt; в UNIX и &lt;code&gt;NUL&lt;/code&gt; в win32.</target>
        </trans-unit>
        <trans-unit id="03761e66dc106f1ff0d2f9d8bf80811bd74655c6" translate="yes" xml:space="preserve">
          <source>The name, the program was called with.</source>
          <target state="translated">Название,с которым называлась программа.</target>
        </trans-unit>
        <trans-unit id="998e11cdecb726392509593efacde54c0ef63c06" translate="yes" xml:space="preserve">
          <source>The names of required named arguments</source>
          <target state="translated">Имена требуемых именованных аргументов</target>
        </trans-unit>
        <trans-unit id="fe3101e5381913cbe1fe94ba506dd0a8d9967d33" translate="yes" xml:space="preserve">
          <source>The network address that sent the request to an HTTP server.</source>
          <target state="translated">Сетевой адрес,который отправил запрос на HTTP-сервер.</target>
        </trans-unit>
        <trans-unit id="eeaf65de799d8a96e82b49ec64d24bf6f6adcc89" translate="yes" xml:space="preserve">
          <source>The newly created fiber doesn't run as soon as spawned.</source>
          <target state="translated">Вновь созданное волокно не работает,как только оно появляется.</target>
        </trans-unit>
        <trans-unit id="78546fe92ed6fb2bc339f577731c0dfa103602db" translate="yes" xml:space="preserve">
          <source>The next sections will assume you know what &lt;a href=&quot;http://en.wikipedia.org/wiki/Object-oriented_programming&quot;&gt;object oriented programming&lt;/a&gt; is, as well as the concepts of &lt;a href=&quot;http://en.wikipedia.org/wiki/Class_%28computer_programming%29&quot;&gt;classes&lt;/a&gt; and &lt;a href=&quot;http://en.wikipedia.org/wiki/Method_%28computer_programming%29&quot;&gt;methods&lt;/a&gt;.</source>
          <target state="translated">В следующих разделах предполагается, что вы знаете, что такое &lt;a href=&quot;http://en.wikipedia.org/wiki/Object-oriented_programming&quot;&gt;объектно-ориентированное программирование&lt;/a&gt; , а также понятия &lt;a href=&quot;http://en.wikipedia.org/wiki/Class_%28computer_programming%29&quot;&gt;классов&lt;/a&gt; и &lt;a href=&quot;http://en.wikipedia.org/wiki/Method_%28computer_programming%29&quot;&gt;методов&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="84b6a8ec5662f00d33bad19190ac9fa3fe3b584b" translate="yes" xml:space="preserve">
          <source>The nil literal.</source>
          <target state="translated">Ноль буквально.</target>
        </trans-unit>
        <trans-unit id="9b372dff10b7db41b2b38e60b2637ac657fa7e7d" translate="yes" xml:space="preserve">
          <source>The node this alias points to.</source>
          <target state="translated">Узел,на который указывает этот псевдоним.</target>
        </trans-unit>
        <trans-unit id="a5d79ff59503ed5a2b6e2a0095ca398a969d5aed" translate="yes" xml:space="preserve">
          <source>The node this alias points to. This is set by &lt;code&gt;&lt;a href=&quot;../nodes#parse(string_or_io:String%7CIO):Document-class-method&quot;&gt;YAML::Nodes.parse&lt;/a&gt;&lt;/code&gt;, and is &lt;code&gt;nil&lt;/code&gt; by default.</source>
          <target state="translated">Узел, на который указывает этот псевдоним. Это устанавливается &lt;code&gt;&lt;a href=&quot;../nodes#parse(string_or_io:String%7CIO):Document-class-method&quot;&gt;YAML::Nodes.parse&lt;/a&gt;&lt;/code&gt; и по умолчанию равно &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="28778dee70b04f98759125cf3fc5bb7f4cbd09e0" translate="yes" xml:space="preserve">
          <source>The nodes in this sequence.</source>
          <target state="translated">Узлы в этой последовательности.</target>
        </trans-unit>
        <trans-unit id="4f34511776ef20fe5fe37858e9a7500523697d6f" translate="yes" xml:space="preserve">
          <source>The nodes inside this document.</source>
          <target state="translated">Узлы внутри этого документа.</target>
        </trans-unit>
        <trans-unit id="2e01fbb822b433fee2ee41c5d94d65e6bee0ae25" translate="yes" xml:space="preserve">
          <source>The nodes inside this mapping, stored linearly as key1 - value1 - key2 - value2 - etc.</source>
          <target state="translated">Узлы внутри этого отображения,хранящиеся линейно как ключ1-значение1-ключ2-значение2-и т.д.</target>
        </trans-unit>
        <trans-unit id="3d8239dccc739a59a3b15148a539406e9882bd09" translate="yes" xml:space="preserve">
          <source>The number of arguments</source>
          <target state="translated">Количество аргументов</target>
        </trans-unit>
        <trans-unit id="2d7047afe7f2ecf95be173685099de7fb2d47de5" translate="yes" xml:space="preserve">
          <source>The number of bits the BitArray stores</source>
          <target state="translated">Количество битов в магазинах BitArray</target>
        </trans-unit>
        <trans-unit id="932f50d2358bc832f13ffe65aea2d8ccd4f87f12" translate="yes" xml:space="preserve">
          <source>The number of decimal digits that can be represented without losing precision</source>
          <target state="translated">Количество десятичных цифр,которые могут быть представлены без потери точности.</target>
        </trans-unit>
        <trans-unit id="149402a56e543f699a338dcf5bd5983e726d28d9" translate="yes" xml:space="preserve">
          <source>The number of digits that can be represented without losing precision (in base RADIX)</source>
          <target state="translated">Количество цифр,которые могут быть представлены без потери точности (в базовом RADIX).</target>
        </trans-unit>
        <trans-unit id="d7af8f92e80d575a308150c0f91dc9b8fb13e781" translate="yes" xml:space="preserve">
          <source>The number of months.</source>
          <target state="translated">Количество месяцев.</target>
        </trans-unit>
        <trans-unit id="c16a1a82cd0e589217f9fa691b14825aefa0cf34" translate="yes" xml:space="preserve">
          <source>The number of probes sent, without response before dropping the connection.</source>
          <target state="translated">Количество отправленных зондов без ответа до разрыва соединения.</target>
        </trans-unit>
        <trans-unit id="d3811a0131b55024431ec7bed658225d7b97cb55" translate="yes" xml:space="preserve">
          <source>The number of remaining bytes to be read.</source>
          <target state="translated">Количество оставшихся байтов для чтения.</target>
        </trans-unit>
        <trans-unit id="cf43a2809ea6d373d29ac2cdaad4c2c1bd4d6349" translate="yes" xml:space="preserve">
          <source>The oldest clients supported by this configuration are:</source>
          <target state="translated">Самые старые клиенты,поддерживаемые этой конфигурацией:</target>
        </trans-unit>
        <trans-unit id="f338fe73db5a49e1625a8e98ce8a3f1c3f45295a" translate="yes" xml:space="preserve">
          <source>The only difference is that the first error message is a little more clear, but both definitions are safe in that you will get a compile time error anyway. So, in general, it's preferable not to specify type restrictions and almost only use them to define different method overloads. This results in more generic, reusable code. For example, if we define a class that has a &lt;code&gt;+&lt;/code&gt; method but isn't a &lt;code&gt;Number&lt;/code&gt;, we can use the &lt;code&gt;add&lt;/code&gt; method that doesn't have type restrictions, but we can't use the &lt;code&gt;add&lt;/code&gt; method that has restrictions.</source>
          <target state="translated">Единственное отличие состоит в том, что первое сообщение об ошибке немного более понятно, но оба определения безопасны, так как в любом случае вы получите ошибку времени компиляции. Таким образом, в общем случае предпочтительно не указывать ограничения типов, а почти только использовать их для определения различных перегрузок методов. Это приводит к более универсальному, многократно используемому коду. Например, если мы определяем класс, который имеет метод &lt;code&gt;+&lt;/code&gt; , но не является &lt;code&gt;Number&lt;/code&gt; , мы можем использовать метод &lt;code&gt;add&lt;/code&gt; , который не имеет ограничений типа, но мы не можем использовать метод &lt;code&gt;add&lt;/code&gt; , который имеет ограничения.</target>
        </trans-unit>
        <trans-unit id="f16ae79b25ed11b7aa9209daf53be8357e5448f0" translate="yes" xml:space="preserve">
          <source>The only falsey values are &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt; and null pointers (pointers whose memory address is zero). Any other value is truthy.</source>
          <target state="translated">Только falsey значения &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;false&lt;/code&gt; и нулевые указатели (указатели, память адрес равен нулю). Любая другая ценность правдива.</target>
        </trans-unit>
        <trans-unit id="d2ba520fa51fd8d8b9e4a636c0e3159d95a00a2a" translate="yes" xml:space="preserve">
          <source>The only requirement for a type including the &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; module is to define these two methods:</source>
          <target state="translated">Единственное требование к типу, включающему модуль &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; , - определить эти два метода:</target>
        </trans-unit>
        <trans-unit id="35c3020364682ec2b277f82b96428ea6e1c5b328" translate="yes" xml:space="preserve">
          <source>The only time zone offset in this location is &lt;code&gt;&lt;a href=&quot;location/zone#UTC&quot;&gt;Zone::UTC&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Единственное смещение часового пояса в этом месте - &lt;code&gt;&lt;a href=&quot;location/zone#UTC&quot;&gt;Zone::UTC&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bad3c4ba1e595dfe6ef41f8dda662776cbc13df2" translate="yes" xml:space="preserve">
          <source>The optional anchor of a node.</source>
          <target state="translated">Дополнительный якорь узла.</target>
        </trans-unit>
        <trans-unit id="a23d3869181b7966eed7da248d4c565267255680" translate="yes" xml:space="preserve">
          <source>The optional parameters &lt;em&gt;calculation&lt;/em&gt; and &lt;em&gt;warmup&lt;/em&gt; set the duration of those stages in seconds. For more detail on these stages see &lt;code&gt;&lt;a href=&quot;benchmark/ips&quot;&gt;Benchmark::IPS&lt;/a&gt;&lt;/code&gt;. When the &lt;em&gt;interactive&lt;/em&gt; parameter is &lt;code&gt;true&lt;/code&gt;, results are displayed and updated as they are calculated, otherwise all at once.</source>
          <target state="translated">Дополнительные параметры &lt;em&gt;расчета&lt;/em&gt; и &lt;em&gt;прогрева&lt;/em&gt; устанавливают продолжительность этих этапов в секундах. Для получения более подробной информации об этих этапах см. &lt;code&gt;&lt;a href=&quot;benchmark/ips&quot;&gt;Benchmark::IPS&lt;/a&gt;&lt;/code&gt; . Когда &lt;em&gt;интерактивный&lt;/em&gt; параметр имеет значение &lt;code&gt;true&lt;/code&gt; , результаты отображаются и обновляются по мере их расчета, в противном случае все сразу.</target>
        </trans-unit>
        <trans-unit id="908488df9900589a734ddda7befd0be561a2bb36" translate="yes" xml:space="preserve">
          <source>The optional tag of a node.</source>
          <target state="translated">Дополнительный тег узла.</target>
        </trans-unit>
        <trans-unit id="95ea40b7b8d6666434328bce32ed79b31e257999" translate="yes" xml:space="preserve">
          <source>The order of the array follows the order the keys were inserted in the Hash.</source>
          <target state="translated">Порядок расположения массива следует за порядком вставки ключей в Hash.</target>
        </trans-unit>
        <trans-unit id="bcd1e063d92bbe1e8714e2ac9c830c4af18736b0" translate="yes" xml:space="preserve">
          <source>The parser doesn't create this nodes. Instead, you create them by invoking &lt;code&gt;&lt;a href=&quot;macroid#id:MacroId-instance-method&quot;&gt;#id&lt;/a&gt;&lt;/code&gt; on some nodes. For example, invoking &lt;code&gt;&lt;a href=&quot;macroid#id:MacroId-instance-method&quot;&gt;#id&lt;/a&gt;&lt;/code&gt; on a &lt;code&gt;&lt;a href=&quot;stringliteral&quot;&gt;StringLiteral&lt;/a&gt;&lt;/code&gt; returns a &lt;code&gt;&lt;a href=&quot;macroid&quot;&gt;MacroId&lt;/a&gt;&lt;/code&gt; for the string's content. Similarly, invoking ID on a &lt;code&gt;&lt;a href=&quot;symbolliteral&quot;&gt;SymbolLiteral&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;call&quot;&gt;Call&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;var&quot;&gt;Var&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;path&quot;&gt;Path&lt;/a&gt;&lt;/code&gt; return MacroIds for the node's content.</source>
          <target state="translated">Парсер не создает эти узлы. Вместо этого вы создаете их, вызывая &lt;code&gt;&lt;a href=&quot;macroid#id:MacroId-instance-method&quot;&gt;#id&lt;/a&gt;&lt;/code&gt; на некоторых узлах. Например, &lt;code&gt;&lt;a href=&quot;stringliteral&quot;&gt;StringLiteral&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;macroid#id:MacroId-instance-method&quot;&gt;#id&lt;/a&gt;&lt;/code&gt; для StringLiteral возвращает &lt;code&gt;&lt;a href=&quot;macroid&quot;&gt;MacroId&lt;/a&gt;&lt;/code&gt; для содержимого строки. Точно так же, вызывая ID для &lt;code&gt;&lt;a href=&quot;symbolliteral&quot;&gt;SymbolLiteral&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;call&quot;&gt;Call&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;var&quot;&gt;Var&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;path&quot;&gt;Path&lt;/a&gt;&lt;/code&gt; , возвращают MacroIds для содержимого узла.</target>
        </trans-unit>
        <trans-unit id="9c6ed999e32833699167efee30205c6dfdd62852" translate="yes" xml:space="preserve">
          <source>The passed arguments become a &lt;a href=&quot;http://crystal-lang.org/api/Tuple.html&quot;&gt;Tuple&lt;/a&gt; in the method's body:</source>
          <target state="translated">Переданные аргументы становятся &lt;a href=&quot;http://crystal-lang.org/api/Tuple.html&quot;&gt;кортежами&lt;/a&gt; в теле метода:</target>
        </trans-unit>
        <trans-unit id="a7cc3f4b05b7a37abb5d8eddb88666e0d6ce2da3" translate="yes" xml:space="preserve">
          <source>The patch version of this semantic version</source>
          <target state="translated">Патч-версия этой семантической версии</target>
        </trans-unit>
        <trans-unit id="abef7a9a36ac8826e0db03a19e466cedc6f95840" translate="yes" xml:space="preserve">
          <source>The path will be placed in &lt;em&gt;dir&lt;/em&gt; which defaults to the standard temporary directory &lt;code&gt;&lt;a href=&quot;dir#tempdir:String-class-method&quot;&gt;Dir.tempdir&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Путь будет помещен в каталог &lt;em&gt;dir, по&lt;/em&gt; умолчанию это стандартный временный каталог &lt;code&gt;&lt;a href=&quot;dir#tempdir:String-class-method&quot;&gt;Dir.tempdir&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3a42b6a28a3631b4b8690c59ec23c2cf33ba5461" translate="yes" xml:space="preserve">
          <source>The pattern of a format is a &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; with directives. Directives being with a percent (&lt;code&gt;%&lt;/code&gt;) character. Any text not listed as a directive will be passed/parsed through the output/input string.</source>
          <target state="translated">Шаблон формата - это &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; с директивами. Директивы, имеющие символ процента ( &lt;code&gt;%&lt;/code&gt; ). Любой текст, не указанный в качестве директивы, будет передан / проанализирован через строку вывода / ввода.</target>
        </trans-unit>
        <trans-unit id="63fcbfebaa791ff8cd52d2e73c34aadd82558129" translate="yes" xml:space="preserve">
          <source>The pattern syntax is similar to shell filename globbing, see &lt;code&gt;&lt;a href=&quot;file#match?(pattern:String,path:Path%7CString)-class-method&quot;&gt;File.match?&lt;/a&gt;&lt;/code&gt; for details.</source>
          <target state="translated">Синтаксис шаблона аналогичен &lt;code&gt;&lt;a href=&quot;file#match?(pattern:String,path:Path%7CString)-class-method&quot;&gt;File.match?&lt;/a&gt;&lt;/code&gt; имени файла оболочки, см. File.match? для деталей.</target>
        </trans-unit>
        <trans-unit id="b8c653ef61db759eaee9f377523533373a490dfb" translate="yes" xml:space="preserve">
          <source>The pattern syntax is similar to shell filename globbing. It may contain the following metacharacters:</source>
          <target state="translated">Синтаксис шаблона похож на глобус с именами оболочек.Он может содержать следующие мета-символы:</target>
        </trans-unit>
        <trans-unit id="81cfa925e735950ad01227d0c7931b35b21fdca9" translate="yes" xml:space="preserve">
          <source>The permissions of the file.</source>
          <target state="translated">Разрешения файла.</target>
        </trans-unit>
        <trans-unit id="2cb51394b11ccdeba5fb3a77769718aec470abb3" translate="yes" xml:space="preserve">
          <source>The pipe (&lt;code&gt;|&lt;/code&gt;) in types creates a union type. &lt;code&gt;Int32 | String&lt;/code&gt; is read &quot;Int32 or String&quot;. In regular code, &lt;code&gt;Int32 | String&lt;/code&gt; means invoking the method &lt;code&gt;|&lt;/code&gt; on &lt;code&gt;Int32&lt;/code&gt; with &lt;code&gt;String&lt;/code&gt; as an argument.</source>
          <target state="translated">Канал ( &lt;code&gt;|&lt;/code&gt; ) в типах создает тип объединения. &lt;code&gt;Int32 | String&lt;/code&gt; читается как &amp;laquo;Int32 или String&amp;raquo;. В обычном коде &lt;code&gt;Int32 | String&lt;/code&gt; означает вызов метода &lt;code&gt;|&lt;/code&gt; на &lt;code&gt;Int32&lt;/code&gt; с &lt;code&gt;String&lt;/code&gt; в качестве аргумента.</target>
        </trans-unit>
        <trans-unit id="233339fd0b1f8ab1f56c72f3df860dc75ecd12fd" translate="yes" xml:space="preserve">
          <source>The port of the HTTP server is set by using the method bind_tcp on the object HTTP::Server (the port set to 8080).</source>
          <target state="translated">Порт HTTP-сервера устанавливается методом bind_tcp на объекте HTTP::Server (порт установлен на 8080).</target>
        </trans-unit>
        <trans-unit id="32fc4b8244c63bfc760d47d4cab241e356f6f852" translate="yes" xml:space="preserve">
          <source>The pre-release version of this semantic version</source>
          <target state="translated">Предварительная версия этой семантической версии</target>
        </trans-unit>
        <trans-unit id="05a899a7976a7c20096dbfcb3e00d17266d2e22d" translate="yes" xml:space="preserve">
          <source>The primary purpose of this method is to &quot;tap into&quot; a method chain, in order to perform operations on intermediate results within the chain.</source>
          <target state="translated">Основная цель этого метода-&quot;подключиться&quot; к цепочке методов,чтобы выполнить операции по промежуточным результатам внутри цепочки.</target>
        </trans-unit>
        <trans-unit id="ff2bfab5292b6da8c94127d4e62ad66fb860ebee" translate="yes" xml:space="preserve">
          <source>The program is a global object in which you can define types, methods and file-local variables.</source>
          <target state="translated">Программа представляет собой глобальный объект,в котором можно определять типы,методы и файлово-локальные переменные.</target>
        </trans-unit>
        <trans-unit id="d250f1a238217f17d5b9bf9fa4b3b314cfefb9d7" translate="yes" xml:space="preserve">
          <source>The program name used for log entries</source>
          <target state="translated">Имя программы,используемое для записей журнала</target>
        </trans-unit>
        <trans-unit id="410f4045bdc9aa8c631b549d702681603bdcd1db" translate="yes" xml:space="preserve">
          <source>The program&amp;rsquo;s source code must be encoded in UTF-8.</source>
          <target state="translated">Исходный код программы должен быть закодирован в UTF-8.</target>
        </trans-unit>
        <trans-unit id="d2b5672b6507164d54702ad6643e33f901bb8b66" translate="yes" xml:space="preserve">
          <source>The properties can be type declarations or assignments.</source>
          <target state="translated">Свойствами могут быть объявления типов или назначения.</target>
        </trans-unit>
        <trans-unit id="41aac7aa54673bdaa8c5b39c8053f16352cd59e1" translate="yes" xml:space="preserve">
          <source>The pseudo-method &lt;code&gt;is_a?&lt;/code&gt; determines whether an expression's runtime type inherits or includes another type. For example:</source>
          <target state="translated">Псевдо-метод &lt;code&gt;is_a?&lt;/code&gt; определяет, наследует ли тип времени выполнения выражения или включает другой тип. Например:</target>
        </trans-unit>
        <trans-unit id="1f507cd5dd906a5abf05bd1ee75a2fac5c1c15a6" translate="yes" xml:space="preserve">
          <source>The pseudo-method &lt;code&gt;nil?&lt;/code&gt; determines whether an expression's runtime type is &lt;code&gt;Nil&lt;/code&gt;. For example:</source>
          <target state="translated">Псевдо-метод &lt;code&gt;nil?&lt;/code&gt; определяет, является ли тип времени выполнения выражения &lt;code&gt;Nil&lt;/code&gt; . Например:</target>
        </trans-unit>
        <trans-unit id="932b82bb016d54d7c862b35543ed93ac64fae6f3" translate="yes" xml:space="preserve">
          <source>The pseudo-method &lt;code&gt;responds_to?&lt;/code&gt; determines whether a type has a method with the given name. For example:</source>
          <target state="translated">Псевдо-метод &lt;code&gt;responds_to?&lt;/code&gt; определяет, есть ли у типа метод с заданным именем. Например:</target>
        </trans-unit>
        <trans-unit id="f110f55fd959c5e5afa44c1cdba8507d00eed545" translate="yes" xml:space="preserve">
          <source>The purpose of using base64 to encode data is that it translates any binary data into purely printable characters.</source>
          <target state="translated">Целью использования base64 для кодирования данных является преобразование любых двоичных данных в чисто печатные символы.</target>
        </trans-unit>
        <trans-unit id="20db04bff4ecb2dbf646dff1c64a3b517788a585" translate="yes" xml:space="preserve">
          <source>The radix or integer base used by the internal representation</source>
          <target state="translated">Радикс или целочисленная база,используемая внутренним представлением</target>
        </trans-unit>
        <trans-unit id="b879630d8049f81a21f22cfc58e5f4bc5cb9d8da" translate="yes" xml:space="preserve">
          <source>The range operators are used in &lt;a href=&quot;literals/range&quot;&gt;Range&lt;/a&gt; literals.</source>
          <target state="translated">Операторы диапазона используются в литералах &lt;a href=&quot;literals/range&quot;&gt;диапазона&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d428f13bac087ac4e3400df32671a4193fd24329" translate="yes" xml:space="preserve">
          <source>The raw file-descriptor.</source>
          <target state="translated">Необработанный файл-дизайнер.</target>
        </trans-unit>
        <trans-unit id="b778b37dfbc8f3ee7e3ed2bdf2dd7305706404db" translate="yes" xml:space="preserve">
          <source>The raw file-descriptor. It is defined to be an &lt;code&gt;&lt;a href=&quot;../int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;, but its size is platform-specific.</source>
          <target state="translated">Необработанный файл-дескриптор. Он определен как &lt;code&gt;&lt;a href=&quot;../int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; , но его размер зависит от платформы.</target>
        </trans-unit>
        <trans-unit id="8db9410acd7129114bee57055d831caef51f8eca" translate="yes" xml:space="preserve">
          <source>The real reason the compiler does this is to be able to compile programs faster by not creating all kinds of different similar unions, also making the generated code smaller in size. But, on the other hand, it makes sense: classes under the same hierarchy should behave in a similar way.</source>
          <target state="translated">Настоящая причина,по которой компилятор делает это,заключается в том,что он может компилировать программы быстрее,не создавая всевозможных схожих союзов,а также уменьшая размер генерируемого кода.Но,с другой стороны,это имеет смысл:классы,находящиеся под одной и той же иерархией,должны вести себя подобным образом.</target>
        </trans-unit>
        <trans-unit id="76a389bb689114456985a25fbbce6ca4de3e5f74" translate="yes" xml:space="preserve">
          <source>The reason for allowing strings that don't have a valid UTF-8 sequence is that the world is full of content that isn't properly encoded, and having a program raise an exception or stop because of this is not good. It's better if programs are more resilient, but show a replacement character when there's an error in incoming data.</source>
          <target state="translated">Причина,по которой разрешается использование строк,не имеющих действительной последовательности UTF-8,заключается в том,что мир полон содержания,которое не закодировано должным образом,а наличие программы вызывает исключение или остановку из-за этого нехорошо.Лучше,если программы более устойчивы,но показывают символ замены,когда есть ошибка во входящих данных.</target>
        </trans-unit>
        <trans-unit id="32f40650fb7ccf8892e0237620999a8152370e25" translate="yes" xml:space="preserve">
          <source>The reason for this is that a fiber is not executed as soon as it is spawned. So, the main fiber, the one that spawns the above fiber, finishes its execution and the program exits.</source>
          <target state="translated">Причина этого заключается в том,что волокно не выполняется,как только оно рождается.Таким образом,основное волокно,то,которое порождает вышеуказанное волокно,завершает свое выполнение и программа выходит из строя.</target>
        </trans-unit>
        <trans-unit id="ff10dcb440a08b16e31eefc8ffaede37d73590f0" translate="yes" xml:space="preserve">
          <source>The reason for this is to allow creating Domain Specific Languages (DSLs) using &lt;code&gt;do ... end&lt;/code&gt; to have them be read as plain English:</source>
          <target state="translated">Причина этого состоит в том, чтобы позволить создавать доменные языки (DSL) с использованием &lt;code&gt;do ... end&lt;/code&gt; чтобы они читались как обычный английский:</target>
        </trans-unit>
        <trans-unit id="d78935ddfd4649c6aa2826ace20fab5bbc112bc0" translate="yes" xml:space="preserve">
          <source>The reason why &lt;code&gt;socket.gets&lt;/code&gt; and &lt;code&gt;sleep&lt;/code&gt; behave like this is because their implementations talk directly with the Runtime Scheduler and the Event Loop, there's nothing magical about it. In general, the standard library already takes care of doing all of this so you don't have to.</source>
          <target state="translated">Причина, по которой &lt;code&gt;socket.gets&lt;/code&gt; и &lt;code&gt;sleep&lt;/code&gt; ведут себя так, заключается в том, что их реализации взаимодействуют напрямую с Runtime Scheduler и Event Loop, в этом нет ничего волшебного. В общем, стандартная библиотека уже позаботится обо всем этом, так что вам не нужно этого делать.</target>
        </trans-unit>
        <trans-unit id="574c2ce94e0fe34bb694689f6855ce71540ac54a" translate="yes" xml:space="preserve">
          <source>The receiver can't be anything else than a variable or call.</source>
          <target state="translated">Приемник не может быть ничем иным,как переменной или вызовом.</target>
        </trans-unit>
        <trans-unit id="871034b7273a5a75ceafcc5e70590aba4b1c957a" translate="yes" xml:space="preserve">
          <source>The recommended thing to do is to use enums whenever possible, only use symbols for the internal implementation of an API, and avoid symbols for public APIs. But you are free to do what you want.</source>
          <target state="translated">Рекомендуется по возможности использовать перечисления,использовать только символы для внутренней реализации API и избегать символов для публичных API.Но вы можете делать все,что захотите.</target>
        </trans-unit>
        <trans-unit id="87e3477255e26528fbd308bbff78570c498d50ce" translate="yes" xml:space="preserve">
          <source>The reentrant protection maintains a lock count. Attempting to re-lock the mutex from the same fiber will increment the lock count. Attempting to unlock the counter from the same fiber will decrement the lock count, eventually releasing the lock when the lock count returns to 0. Attempting to unlock an unlocked mutex, or a mutex locked by another fiber will raise an exception.</source>
          <target state="translated">Защита от возврата поддерживает счетчик замков.Попытка повторной блокировки мьютекса из того же самого волокна увеличит счетчик замков.Попытка разблокировать счетчик из того же самого волокна приведет к уменьшению числа блокировок,в конечном счете,к разблокировке замка,когда число блокировок вернется к 0.Попытка разблокировать разблокированный мьютекс или мьютекс,заблокированный другим волокном,приведет к увеличению числа блокировок.</target>
        </trans-unit>
        <trans-unit id="ed914447670b399ebc6cc6e220541dba265b2d70" translate="yes" xml:space="preserve">
          <source>The registry will be populated with some default values (see &lt;code&gt;&lt;a href=&quot;mime#DEFAULT_TYPES&quot;&gt;DEFAULT_TYPES&lt;/a&gt;&lt;/code&gt;) as well as the operating system's MIME database.</source>
          <target state="translated">Реестр будет заполнен некоторыми значениями по умолчанию (см. &lt;code&gt;&lt;a href=&quot;mime#DEFAULT_TYPES&quot;&gt;DEFAULT_TYPES&lt;/a&gt;&lt;/code&gt; ), а также базой данных MIME операционной системы.</target>
        </trans-unit>
        <trans-unit id="4b847bda892ee576c2c6d6db160250aaf567ab70" translate="yes" xml:space="preserve">
          <source>The regular expression language can be used to match much more than just the static substrings in the above examples. Certain characters, called &lt;a href=&quot;http://www.pcre.org/original/doc/html/pcrepattern.html#SEC4&quot;&gt;metacharacters&lt;/a&gt;, are given special treatment in regular expressions, and can be used to describe more complex patterns. To match metacharacters literally in a regular expression, they must be escaped by being preceded with a backslash (&lt;code&gt;\&lt;/code&gt;). &lt;code&gt;&lt;a href=&quot;regex#escape(str):String-class-method&quot;&gt;.escape&lt;/a&gt;&lt;/code&gt; will do this automatically for a given String.</source>
          <target state="translated">Язык регулярных выражений можно использовать для сопоставления гораздо большего, чем просто статические подстроки в приведенных выше примерах. Некоторым символам, называемым &lt;a href=&quot;http://www.pcre.org/original/doc/html/pcrepattern.html#SEC4&quot;&gt;метасимволами&lt;/a&gt; , в регулярных выражениях предоставляется специальная обработка, и они могут использоваться для описания более сложных шаблонов. Чтобы сопоставлять метасимволы буквально в регулярном выражении, они должны быть экранированы, если им предшествует обратная косая черта ( &lt;code&gt;\&lt;/code&gt; ). &lt;code&gt;&lt;a href=&quot;regex#escape(str):String-class-method&quot;&gt;.escape&lt;/a&gt;&lt;/code&gt; сделает это автоматически для данной строки.</target>
        </trans-unit>
        <trans-unit id="e24cf27decc46c3ee89d81610dfaa54465672459" translate="yes" xml:space="preserve">
          <source>The replacement character, used on invalid UTF-8 byte sequences.</source>
          <target state="translated">Символ замены,используемый на недействительных последовательностях UTF-8 байт.</target>
        </trans-unit>
        <trans-unit id="d1b8275b80e6086dd1f4f8d0cc0a9b6f3288eaa7" translate="yes" xml:space="preserve">
          <source>The request line is the first line of a request, consisting of method, resource and HTTP version and the delimiting line break. If the request line has a larger byte size than the permitted size, the server responds with the status code &lt;code&gt;414 &lt;a href=&quot;../uri&quot;&gt;URI&lt;/a&gt; Too Long&lt;/code&gt; (see &lt;code&gt;&lt;a href=&quot;status#URI_TOO_LONG&quot;&gt;HTTP::Status::URI_TOO_LONG&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">Строка запроса - это первая строка запроса, состоящая из метода, ресурса и версии HTTP и разрыва строки разграничения. Если строка запроса имеет больший размер в байтах, чем допустимый размер, сервер отвечает кодом состояния &lt;code&gt;414 &lt;a href=&quot;../uri&quot;&gt;URI&lt;/a&gt; Too Long&lt;/code&gt; (см. &lt;code&gt;&lt;a href=&quot;status#URI_TOO_LONG&quot;&gt;HTTP::Status::URI_TOO_LONG&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="e105b4ab54d3af5634616d46ec5b245306ef0d26" translate="yes" xml:space="preserve">
          <source>The request processor supports reusing a connection for subsequent requests. This is used by default for HTTP/1.1 or when requested by the &lt;code&gt;Connection: keep-alive&lt;/code&gt; header. This is signalled by this header being set on the &lt;code&gt;&lt;a href=&quot;server/response&quot;&gt;HTTP::Server::Response&lt;/a&gt;&lt;/code&gt; when it's passed into the handler chain.</source>
          <target state="translated">Обработчик запросов поддерживает повторное использование соединения для последующих запросов. Это используется по умолчанию для HTTP / 1.1 или по запросу заголовка &lt;code&gt;Connection: keep-alive&lt;/code&gt; . Это сигнализируется тем, что этот заголовок устанавливается в &lt;code&gt;&lt;a href=&quot;server/response&quot;&gt;HTTP::Server::Response&lt;/a&gt;&lt;/code&gt; когда он передается в цепочку обработчика.</target>
        </trans-unit>
        <trans-unit id="b88ba33ed5a8577d60c284544ff80c1a4e44897f" translate="yes" xml:space="preserve">
          <source>The response &lt;code&gt;&lt;a href=&quot;response#status:HTTP::Status-instance-method&quot;&gt;#status&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;response#headers:HTTP::Headers-instance-method&quot;&gt;#headers&lt;/a&gt;&lt;/code&gt; must be configured before writing the response body. Once response output is written, changing the &lt;code&gt;&lt;a href=&quot;response#status:HTTP::Status-instance-method&quot;&gt;#status&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;response#headers:HTTP::Headers-instance-method&quot;&gt;#headers&lt;/a&gt;&lt;/code&gt; properties has no effect.</source>
          <target state="translated">Ответ &lt;code&gt;&lt;a href=&quot;response#status:HTTP::Status-instance-method&quot;&gt;#status&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;response#headers:HTTP::Headers-instance-method&quot;&gt;#headers&lt;/a&gt;&lt;/code&gt; должны быть настроены до написания тела ответа. Как только вывод ответа записан, изменение свойств &lt;code&gt;&lt;a href=&quot;response#status:HTTP::Status-instance-method&quot;&gt;#status&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;response#headers:HTTP::Headers-instance-method&quot;&gt;#headers&lt;/a&gt;&lt;/code&gt; не имеет никакого эффекта.</target>
        </trans-unit>
        <trans-unit id="47dfc21a6b581b0ebea4ce9ed874b44dcdaf9b21" translate="yes" xml:space="preserve">
          <source>The response headers (&lt;code&gt;&lt;a href=&quot;../headers&quot;&gt;HTTP::Headers&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">Заголовки ответа ( &lt;code&gt;&lt;a href=&quot;../headers&quot;&gt;HTTP::Headers&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="ea18b79598116138833c1343a63330dce641f749" translate="yes" xml:space="preserve">
          <source>The response headers (&lt;code&gt;&lt;a href=&quot;../headers&quot;&gt;HTTP::Headers&lt;/a&gt;&lt;/code&gt;). These must be set before writing to the response.</source>
          <target state="translated">Заголовки ответа ( &lt;code&gt;&lt;a href=&quot;../headers&quot;&gt;HTTP::Headers&lt;/a&gt;&lt;/code&gt; ). Они должны быть установлены до записи в ответ.</target>
        </trans-unit>
        <trans-unit id="8b8a7f07b6cad51f233e3cc0b531514a07faa6f1" translate="yes" xml:space="preserve">
          <source>The response to configure and write to in an &lt;code&gt;&lt;a href=&quot;../server&quot;&gt;HTTP::Server&lt;/a&gt;&lt;/code&gt; handler.</source>
          <target state="translated">Ответ для настройки и записи в обработчик &lt;code&gt;&lt;a href=&quot;../server&quot;&gt;HTTP::Server&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8ea472b957543179abb9f5f5e9132e8059deb490" translate="yes" xml:space="preserve">
          <source>The result of naming this job &lt;code&gt;pages&lt;/code&gt; and putting our docs in the &lt;code&gt;public&lt;/code&gt; directory and specifying it as an &lt;code&gt;artifact&lt;/code&gt; is that GitLab will deploy the site in that directory to the default URL &lt;code&gt;https://&amp;lt;YOUR-GITLAB-USERNAME&amp;gt;.gitlab.io/&amp;lt;YOUR-REPOSITORY-NAME&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">В результате присвоения этим &lt;code&gt;pages&lt;/code&gt; вакансий названия и помещения наших документов в &lt;code&gt;public&lt;/code&gt; каталог и указания его как &lt;code&gt;artifact&lt;/code&gt; GitLab развернет сайт в этом каталоге по URL-адресу по умолчанию &lt;code&gt;https://&amp;lt;YOUR-GITLAB-USERNAME&amp;gt;.gitlab.io/&amp;lt;YOUR-REPOSITORY-NAME&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e077049fc5824d3c9902b59488bdf5a911e88436" translate="yes" xml:space="preserve">
          <source>The result of the last expression is &lt;code&gt;2&lt;/code&gt; because the last expression of the &lt;code&gt;transform&lt;/code&gt; method is &lt;code&gt;yield&lt;/code&gt;, whose value is the last expression of the block.</source>
          <target state="translated">Результатом последнего выражения является &lt;code&gt;2&lt;/code&gt; , потому что последним выражением метода &lt;code&gt;transform&lt;/code&gt; является &lt;code&gt;yield&lt;/code&gt; , значение которого является последним выражением блока.</target>
        </trans-unit>
        <trans-unit id="733d3c8c44e34a101276d18fb937671155352537" translate="yes" xml:space="preserve">
          <source>The result will be of the same type as &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">Результат будет того же типа, что и &lt;code&gt;self&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="01be55a0c09b1d115faa58cff213ed7e949d0a99" translate="yes" xml:space="preserve">
          <source>The result:</source>
          <target state="translated">Результат:</target>
        </trans-unit>
        <trans-unit id="5a1e8d996521c557bb0b6c523dcd3bbfc54c3cbb" translate="yes" xml:space="preserve">
          <source>The resulting &lt;code&gt;&lt;a href=&quot;time/span&quot;&gt;Time::Span&lt;/a&gt;&lt;/code&gt; could be anything, even negative, if the computer's wall clock has changed between both calls.</source>
          <target state="translated">В результате &lt;code&gt;&lt;a href=&quot;time/span&quot;&gt;Time::Span&lt;/a&gt;&lt;/code&gt; может быть любым, даже отрицательным, если настенные часы компьютера менялись между обоими вызовами.</target>
        </trans-unit>
        <trans-unit id="1374f2a214fc29ec026b6560950190d2f27a5380" translate="yes" xml:space="preserve">
          <source>The retry logic only happens when the statement is sent through the &lt;code&gt;DB::Database&lt;/code&gt; . If it is sent through a &lt;code&gt;DB::Connection&lt;/code&gt; or &lt;code&gt;DB::Transaction&lt;/code&gt; no retry is performed since the code will state that certain connection object was expected to be used.</source>
          <target state="translated">Логика повторения происходит только тогда, когда инструкция отправляется через &lt;code&gt;DB::Database&lt;/code&gt; . Если он отправляется через &lt;code&gt;DB::Connection&lt;/code&gt; или &lt;code&gt;DB::Transaction&lt;/code&gt; повторная попытка не выполняется, поскольку в коде будет указано, что определенный объект подключения должен был использоваться.</target>
        </trans-unit>
        <trans-unit id="a8540bd690510195f15e7931fe703f354a5f3b1d" translate="yes" xml:space="preserve">
          <source>The return type (&lt;code&gt;R&lt;/code&gt;) is inferred from the proc's body.</source>
          <target state="translated">Тип возврата ( &lt;code&gt;R&lt;/code&gt; ) выводится из тела процедуры.</target>
        </trans-unit>
        <trans-unit id="758c3df4fe5522cca716f4959d3984d4de00a83d" translate="yes" xml:space="preserve">
          <source>The return type always matches the supplied argument.</source>
          <target state="translated">Тип возврата всегда соответствует указанному аргументу.</target>
        </trans-unit>
        <trans-unit id="3448118a3edd919f25ef0f0dc09cb242f5fb6078" translate="yes" xml:space="preserve">
          <source>The return type follows the &lt;a href=&quot;type_grammar&quot;&gt;type grammar&lt;/a&gt;.</source>
          <target state="translated">Тип возврата следует &lt;a href=&quot;type_grammar&quot;&gt;грамматике типа&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d6e8f1d3f064b877d12e7e77276c1b261bc1301c" translate="yes" xml:space="preserve">
          <source>The return type is inferred from the proc's body.</source>
          <target state="translated">Тип возврата выведен из тела прокурора.</target>
        </trans-unit>
        <trans-unit id="ba15146dddd3805e6aafd90ca92392fc02411153" translate="yes" xml:space="preserve">
          <source>The return value is URL encoded (see &lt;code&gt;&lt;a href=&quot;uri#encode_www_form(string:String,*,space_to_plus:Bool=true):String-class-method&quot;&gt;#encode_www_form&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">Возвращаемое значение кодируется URL (см. &lt;code&gt;&lt;a href=&quot;uri#encode_www_form(string:String,*,space_to_plus:Bool=true):String-class-method&quot;&gt;#encode_www_form&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="7ae265c92e23255384e92fcba0e93a3397ca8705" translate="yes" xml:space="preserve">
          <source>The return value is URL encoded (see &lt;code&gt;&lt;a href=&quot;uri#encode_www_form(string:String,io:IO,*,space_to_plus:Bool=true):Nil-class-method&quot;&gt;#encode_www_form&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">Возвращаемое значение закодировано в URL (см. &lt;code&gt;&lt;a href=&quot;uri#encode_www_form(string:String,io:IO,*,space_to_plus:Bool=true):Nil-class-method&quot;&gt;#encode_www_form&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="a41b98c60f13bd33f50de5987af41c1bc1f24355" translate="yes" xml:space="preserve">
          <source>The returned bytes are only valid data until a next call to any method that reads from this IO is invoked.</source>
          <target state="translated">Возвращаемые байты являются только действительными данными до тех пор,пока не будет вызван следующий вызов любого метода,который читает из этого IO.</target>
        </trans-unit>
        <trans-unit id="ca10f5bd23d19910cc3b5a5821662339a7fc01fd" translate="yes" xml:space="preserve">
          <source>The returned iterator keeps a reference to &lt;code&gt;self&lt;/code&gt;. If the array changes, the returned values of the iterator will change as well.</source>
          <target state="translated">Возвращенный итератор сохраняет ссылку на &lt;code&gt;self&lt;/code&gt; . Если массив изменяется, возвращаемые значения итератора также изменятся.</target>
        </trans-unit>
        <trans-unit id="c163c2e4a8684eaec7ec7ef40e2ef6f82f70a679" translate="yes" xml:space="preserve">
          <source>The returned iterator keeps a reference to &lt;code&gt;self&lt;/code&gt;: if the array changes, the returned values of the iterator change as well.</source>
          <target state="translated">Возвращенный итератор сохраняет ссылку на &lt;code&gt;self&lt;/code&gt; : если массив изменяется, возвращаемые значения итератора также меняются.</target>
        </trans-unit>
        <trans-unit id="eaaf8298a043e29b9f15d7afcbed3821bc33033d" translate="yes" xml:space="preserve">
          <source>The returned path ends in a slash only if it is the root (&lt;code&gt;&quot;/&quot;&lt;/code&gt;, &lt;code&gt;\&lt;/code&gt;, or &lt;code&gt;C:\&lt;/code&gt;).</source>
          <target state="translated">Возвращенный путь заканчивается косой чертой, только если это корень ( &lt;code&gt;&quot;/&quot;&lt;/code&gt; , &lt;code&gt;\&lt;/code&gt; или &lt;code&gt;C:\&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="246aef20e15ba401b3f48ea6131daf88f05508b9" translate="yes" xml:space="preserve">
          <source>The returned path is in normalized form.</source>
          <target state="translated">Возвращаемый путь находится в нормализованной форме.</target>
        </trans-unit>
        <trans-unit id="7ba84998e4083bf39c469e9128922bd4627ee050" translate="yes" xml:space="preserve">
          <source>The returned slice is read-only.</source>
          <target state="translated">Возвращаемый кусок доступен только для чтения.</target>
        </trans-unit>
        <trans-unit id="b0aa3484b0f403290cf3456d517f45e1f05be144" translate="yes" xml:space="preserve">
          <source>The returned value is either &lt;code&gt;28&lt;/code&gt;, &lt;code&gt;29&lt;/code&gt;, &lt;code&gt;30&lt;/code&gt; or &lt;code&gt;31&lt;/code&gt; depending on the month and whether &lt;em&gt;year&lt;/em&gt; is leap.</source>
          <target state="translated">Возвращаемое значение равно &lt;code&gt;28&lt;/code&gt; , &lt;code&gt;29&lt;/code&gt; , &lt;code&gt;30&lt;/code&gt; или &lt;code&gt;31&lt;/code&gt; в зависимости от месяца и того, является ли &lt;em&gt;год&lt;/em&gt; високосным.</target>
        </trans-unit>
        <trans-unit id="60f43ae195a0414e9e0d780a03fd061aa5077ba3" translate="yes" xml:space="preserve">
          <source>The returned value is the memory address of this object.</source>
          <target state="translated">Возвращаемым значением является адрес памяти этого объекта.</target>
        </trans-unit>
        <trans-unit id="817be2696fc8bda33f1d0dfcf9b344691071ceb3" translate="yes" xml:space="preserve">
          <source>The rollback place in the &lt;code&gt;outer_tx&lt;/code&gt; block, rolled back all the changes including the ones in the &lt;code&gt;inner_tx&lt;/code&gt; block (the same happens if we use an &lt;strong&gt;explicit&lt;/strong&gt; rollback).</source>
          <target state="translated">Место отката в блоке &lt;code&gt;outer_tx&lt;/code&gt; , откатило все изменения, включая изменения в блоке &lt;code&gt;inner_tx&lt;/code&gt; (то же самое происходит, если мы используем &lt;strong&gt;явный&lt;/strong&gt; откат).</target>
        </trans-unit>
        <trans-unit id="4aaf57eeda40665f5d6ffd28fb9d4804a63cc6dc" translate="yes" xml:space="preserve">
          <source>The rules are many, but usually the first three are most used. There's no need to remember them all. If the compiler gives an error saying that the type of an instance variable can't be inferred you can always add an explicit type restriction.</source>
          <target state="translated">Правил много,но,как правило,наиболее часто используются первые три.Нет необходимости запоминать их все.Если компилятор выдает ошибку,говоря,что тип переменной экземпляра не может быть выведен,то всегда можно добавить явное ограничение типа.</target>
        </trans-unit>
        <trans-unit id="7fbfc3c71a4a49bb24ab10244af977b1a02a7857" translate="yes" xml:space="preserve">
          <source>The same &lt;a href=&quot;string#escaping&quot;&gt;escaping&lt;/a&gt; and &lt;a href=&quot;string#interpolation&quot;&gt;interpolation rules&lt;/a&gt; apply as for regular strings.</source>
          <target state="translated">То же &lt;a href=&quot;string#escaping&quot;&gt;Escaping&lt;/a&gt; и &lt;a href=&quot;string#interpolation&quot;&gt;интерполяция правила&lt;/a&gt; применяются , как для обычных строк.</target>
        </trans-unit>
        <trans-unit id="2b5de9d90094355e321e66335957f0ad9d297b31" translate="yes" xml:space="preserve">
          <source>The same as &lt;code&gt;&lt;a href=&quot;iterator#chain(other:Iterator(U))forallU-instance-method&quot;&gt;#chain&lt;/a&gt;&lt;/code&gt;, but have better performance when the quantity of iterators to chain is large (usually greater than 4) or undetermined.</source>
          <target state="translated">Аналогично &lt;code&gt;&lt;a href=&quot;iterator#chain(other:Iterator(U))forallU-instance-method&quot;&gt;#chain&lt;/a&gt;&lt;/code&gt; , но имеет лучшую производительность, когда количество итераторов в цепочке велико (обычно больше 4) или не определено.</target>
        </trans-unit>
        <trans-unit id="d0a69615b60b24353d9e889ae458216733c9db37" translate="yes" xml:space="preserve">
          <source>The same happens if a &lt;code&gt;DB::Rollback&lt;/code&gt; exception is raised in the &lt;code&gt;inner-transaction&lt;/code&gt; block.</source>
          <target state="translated">То же самое происходит, если исключение &lt;code&gt;DB::Rollback&lt;/code&gt; возникает в блоке &lt;code&gt;inner-transaction&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aa6a16ecf1926d76b19dc30a2621c84ff610a5f5" translate="yes" xml:space="preserve">
          <source>The scheduler has a queue of:</source>
          <target state="translated">У планировщика есть очередь:</target>
        </trans-unit>
        <trans-unit id="e5faa60b79497768401699ecbc6952402943aa59" translate="yes" xml:space="preserve">
          <source>The second point has a reason to it: a struct has a very well defined memory layout. For example, the above &lt;code&gt;Point&lt;/code&gt; struct occupies 8 bytes. If you have an array of points the points are embedded inside the array's buffer:</source>
          <target state="translated">Второй пункт имеет причину: структура имеет очень хорошо определенную структуру памяти. Например, приведенная выше структура &lt;code&gt;Point&lt;/code&gt; занимает 8 байтов. Если у вас есть массив точек, точки встраиваются в буфер массива:</target>
        </trans-unit>
        <trans-unit id="58837c746502875a30ca81ecee4f35665f085248" translate="yes" xml:space="preserve">
          <source>The second rule means that in addition to having this:</source>
          <target state="translated">Второе правило означает,что в дополнение к этому:</target>
        </trans-unit>
        <trans-unit id="280264e5f00aefda967a507dcc2d0993a8f297f0" translate="yes" xml:space="preserve">
          <source>The second use case is making a method argument more readable inside a method body:</source>
          <target state="translated">Второй случай использования делает аргумент метода более читабельным внутри тела метода:</target>
        </trans-unit>
        <trans-unit id="7815aa7b63e5cf450e5da058b4fe88113046ac95" translate="yes" xml:space="preserve">
          <source>The server can be bound to one ore more server sockets (see &lt;code&gt;&lt;a href=&quot;server#bind(socket:Socket::Server):Nil-instance-method&quot;&gt;#bind&lt;/a&gt;&lt;/code&gt;)</source>
          <target state="translated">Сервер может быть привязан к одному или нескольким &lt;code&gt;&lt;a href=&quot;server#bind(socket:Socket::Server):Nil-instance-method&quot;&gt;#bind&lt;/a&gt;&lt;/code&gt; сервера (см. #Bind )</target>
        </trans-unit>
        <trans-unit id="3c269eabfaf8d5876dd6cce873c27fe43e504a55" translate="yes" xml:space="preserve">
          <source>The server is closed after the block returns.</source>
          <target state="translated">После возвращения блока сервер закрывается.</target>
        </trans-unit>
        <trans-unit id="8e2c928c628330386116b324976d603f532b3d1e" translate="yes" xml:space="preserve">
          <source>The server is of stream type by default, but this can be changed for another type. For example datagram messages:</source>
          <target state="translated">По умолчанию сервер имеет тип потока,но его можно изменить на другой тип.Например,сообщения датаграмм:</target>
        </trans-unit>
        <trans-unit id="1d8d131af24fedcb05379bb424565311ccabb7b4" translate="yes" xml:space="preserve">
          <source>The set of possible valid body types.</source>
          <target state="translated">Набор возможных действительных типов кузова.</target>
        </trans-unit>
        <trans-unit id="e0a0f26cd8826d6609eb76ff98b7304117eb9322" translate="yes" xml:space="preserve">
          <source>The shards command</source>
          <target state="translated">Командование осколками</target>
        </trans-unit>
        <trans-unit id="d360149d4d7970bf59a8f5f65d6616a53b982bb0" translate="yes" xml:space="preserve">
          <source>The slice is allocated on the heap.</source>
          <target state="translated">Кусок выделяется на кучу.</target>
        </trans-unit>
        <trans-unit id="6e9e1697b3dfa252df86406c37c107a81b41c91e" translate="yes" xml:space="preserve">
          <source>The source can be used to identify the module or part of the application that is logging. You can configure for each source a different level to filter the messages.</source>
          <target state="translated">Источник может быть использован для идентификации модуля или части приложения,которая ведет журнал.Для каждого источника можно настроить свой уровень фильтрации сообщений.</target>
        </trans-unit>
        <trans-unit id="6a6e46f46717c7f49e7376a0bdbcc3ffb03b2720" translate="yes" xml:space="preserve">
          <source>The special flags this file has set.</source>
          <target state="translated">Специальные флаги,установленные в этом файле.</target>
        </trans-unit>
        <trans-unit id="115ebf7822765608fcd39b3ed96add2129447699" translate="yes" xml:space="preserve">
          <source>The special variable &lt;code&gt;$?&lt;/code&gt; holds the exit status of the command as a &lt;a href=&quot;https://crystal-lang.org/api/0.27.0/Process/Status.html&quot;&gt;&lt;code&gt;Process::Status&lt;/code&gt;&lt;/a&gt;. It is only available in the same scope as the command literal.</source>
          <target state="translated">Специальная переменная &lt;code&gt;$?&lt;/code&gt; содержит состояние выхода команды как &lt;a href=&quot;https://crystal-lang.org/api/0.27.0/Process/Status.html&quot;&gt; &lt;code&gt;Process::Status&lt;/code&gt; &lt;/a&gt; . Он доступен только в той же области, что и командный литерал.</target>
        </trans-unit>
        <trans-unit id="3e3557d004003192cd5542d3fc51ebf51e51916e" translate="yes" xml:space="preserve">
          <source>The splat argument can also be left unnamed, with the meaning &quot;after this, named arguments follow&quot;:</source>
          <target state="translated">Аргумент splat также можно оставить без имени,имея в виду &quot;после этого следуют именованные аргументы&quot;:</target>
        </trans-unit>
        <trans-unit id="e1dc669a05db5c0342be9ec8b5a7d8be9bb1fd07" translate="yes" xml:space="preserve">
          <source>The standard &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; configuration of a process.</source>
          <target state="translated">Стандартная конфигурация &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; процесса.</target>
        </trans-unit>
        <trans-unit id="06ccce70ab599789110874bf990f283bccb902c9" translate="yes" xml:space="preserve">
          <source>The standard error file descriptor.</source>
          <target state="translated">Стандартный дескриптор файла ошибки.</target>
        </trans-unit>
        <trans-unit id="ed95cff6c55ece7cd2f7db46939b98071cc0bd1d" translate="yes" xml:space="preserve">
          <source>The standard input file descriptor. Contains data piped to the program.</source>
          <target state="translated">Стандартный дескриптор входного файла.Содержит данные,передаваемые в программу.</target>
        </trans-unit>
        <trans-unit id="0647c890a1da53d6297b74b407afd68f13114f12" translate="yes" xml:space="preserve">
          <source>The standard library defines the &lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/master/src/lib_c.cr&quot;&gt;LibC&lt;/a&gt; lib with aliases for common C types, like &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;short&lt;/code&gt;, &lt;code&gt;size_t&lt;/code&gt;. Use them in bindings like this:</source>
          <target state="translated">Стандартная библиотека определяет &lt;a href=&quot;https://github.com/crystal-lang/crystal/blob/master/src/lib_c.cr&quot;&gt;libC&lt;/a&gt; lib с псевдонимами для распространенных типов C, таких как &lt;code&gt;int&lt;/code&gt; , &lt;code&gt;short&lt;/code&gt; , &lt;code&gt;size_t&lt;/code&gt; . Используйте их в привязках, как это:</target>
        </trans-unit>
        <trans-unit id="b7487ca8fa2486d67a8aee18fce65b6a02c53afb" translate="yes" xml:space="preserve">
          <source>The standard library provides a useful &lt;code&gt;&lt;a href=&quot;toplevel#record(name,*properties)-macro&quot;&gt;record&lt;/a&gt;&lt;/code&gt; macro that allows you to create immutable structs with some fields, similar to a &lt;code&gt;&lt;a href=&quot;tuple&quot;&gt;Tuple&lt;/a&gt;&lt;/code&gt; but using names instead of indices.</source>
          <target state="translated">Стандартная библиотека предоставляет полезный макрос &lt;code&gt;&lt;a href=&quot;toplevel#record(name,*properties)-macro&quot;&gt;record&lt;/a&gt;&lt;/code&gt; который позволяет создавать неизменяемые структуры с некоторыми полями, похожими на &lt;code&gt;&lt;a href=&quot;tuple&quot;&gt;Tuple&lt;/a&gt;&lt;/code&gt; но с использованием имен вместо индексов.</target>
        </trans-unit>
        <trans-unit id="9ad70d1504d698d2fa851744f3b13ca5f52cdae4" translate="yes" xml:space="preserve">
          <source>The standard library provides iterators for many classes, like &lt;code&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;range&quot;&gt;Range&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;. Usually to get an iterator you invoke a method that would usually yield elements to a block, but without passing a block: &lt;code&gt;Array#each&lt;/code&gt;, &lt;code&gt;Array#each_index&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;hash#each(&amp;amp;block):Nil-instance-method&quot;&gt;Hash#each&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;string#each_char-instance-method&quot;&gt;String#each_char&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;io#each_line(*args,**options,&amp;amp;block:String-%3E):Nil-instance-method&quot;&gt;IO#each_line&lt;/a&gt;&lt;/code&gt;, etc.</source>
          <target state="translated">Стандартная библиотека предоставляет итераторы для многих классов, таких как &lt;code&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;range&quot;&gt;Range&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; . Обычно, чтобы получить итератор, вы вызываете метод, который обычно выдает элементы в блок, но без передачи блока: &lt;code&gt;Array#each&lt;/code&gt; , &lt;code&gt;Array#each_index&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;hash#each(&amp;amp;block):Nil-instance-method&quot;&gt;Hash#each&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;string#each_char-instance-method&quot;&gt;String#each_char&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;io#each_line(*args,**options,&amp;amp;block:String-%3E):Nil-instance-method&quot;&gt;IO#each_line&lt;/a&gt;&lt;/code&gt; и т. Д.</target>
        </trans-unit>
        <trans-unit id="57c7d853af4150be9eafe1bc5efbbf1b8a0b9b22" translate="yes" xml:space="preserve">
          <source>The standard library provides iterators for many classes, like &lt;code&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;range&quot;&gt;Range&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;. Usually to get an iterator you invoke a method that would usually yield elements to a block, but without passing a block: &lt;code&gt;Array#each&lt;/code&gt;, &lt;code&gt;Array#each_index&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;hash#each-instance-method&quot;&gt;Hash#each&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;string#each_char-instance-method&quot;&gt;String#each_char&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;io#each_line(*args,**options,&amp;amp;block:String-%3E):Nil-instance-method&quot;&gt;IO#each_line&lt;/a&gt;&lt;/code&gt;, etc.</source>
          <target state="translated">Стандартная библиотека предоставляет итераторы для многих классов, таких как &lt;code&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;range&quot;&gt;Range&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; . Обычно, чтобы получить итератор, вы вызываете метод, который обычно передает элементы в блок, но без передачи блока: &lt;code&gt;Array#each&lt;/code&gt; , &lt;code&gt;Array#each_index&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;hash#each-instance-method&quot;&gt;Hash#each&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;string#each_char-instance-method&quot;&gt;String#each_char&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;io#each_line(*args,**options,&amp;amp;block:String-%3E):Nil-instance-method&quot;&gt;IO#each_line&lt;/a&gt;&lt;/code&gt; и т. Д.</target>
        </trans-unit>
        <trans-unit id="f60661aded41cff7237ed66bcbec411c36098f17" translate="yes" xml:space="preserve">
          <source>The standard library usually provides a couple of methods to accomplish something: one raises, one returns &lt;code&gt;nil&lt;/code&gt;. For example:</source>
          <target state="translated">Стандартная библиотека обычно предоставляет несколько методов для достижения чего-либо: один поднимает, другой возвращает &lt;code&gt;nil&lt;/code&gt; . Например:</target>
        </trans-unit>
        <trans-unit id="515a59cec9777bfc48a2ecc2cc13aa8b380be2d0" translate="yes" xml:space="preserve">
          <source>The standard output file descriptor.</source>
          <target state="translated">Стандартный дескриптор выходного файла.</target>
        </trans-unit>
        <trans-unit id="85ba3435f5bade942bd58c3feaaf3b56970c4fd2" translate="yes" xml:space="preserve">
          <source>The status code of this response, which must be set before writing the response body.</source>
          <target state="translated">Код статуса этого ответа,который должен быть установлен перед написанием тела ответа.</target>
        </trans-unit>
        <trans-unit id="c59be19bf92d9ab26cce394a18e174fd9a969f08" translate="yes" xml:space="preserve">
          <source>The status code of this response, which must be set before writing the response body. If not set, the default value is 200 (OK).</source>
          <target state="translated">Код статуса этого ответа,который должен быть установлен перед написанием тела ответа.Если он не установлен,то значение по умолчанию равно 200 (ОК).</target>
        </trans-unit>
        <trans-unit id="3a11fe500e3f850f00e6cd9e0bba9dd68f20ab69" translate="yes" xml:space="preserve">
          <source>The status of a terminated process.</source>
          <target state="translated">Статус завершенного процесса.</target>
        </trans-unit>
        <trans-unit id="8692cd6c1e460d8d56975cc9b8b1ff056ccf3461" translate="yes" xml:space="preserve">
          <source>The status of a terminated process. Returned by &lt;code&gt;&lt;a href=&quot;../process#wait:Process::Status-instance-method&quot;&gt;Process#wait&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Статус завершенного процесса. Возвращено &lt;code&gt;&lt;a href=&quot;../process#wait:Process::Status-instance-method&quot;&gt;Process#wait&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6b860b97ae2648994958ff5f145b7575c2d21991" translate="yes" xml:space="preserve">
          <source>The string value.</source>
          <target state="translated">Строковое значение.</target>
        </trans-unit>
        <trans-unit id="abd29b3ac753265d0c8451b4c56af4a5829cf90f" translate="yes" xml:space="preserve">
          <source>The string value. Only makes sense for a &lt;code&gt;Cell&lt;/code&gt;.</source>
          <target state="translated">Строковое значение. Имеет смысл только для &lt;code&gt;Cell&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bef8dbcb6094fea728ae1348a427a648823eaecf" translate="yes" xml:space="preserve">
          <source>The style of this scalar.</source>
          <target state="translated">Стиль этого скаляра.</target>
        </trans-unit>
        <trans-unit id="61ed4a1fd638ad01f7858319d3a71c8d51e79551" translate="yes" xml:space="preserve">
          <source>The style of this sequence.</source>
          <target state="translated">Стиль этой последовательности.</target>
        </trans-unit>
        <trans-unit id="5b14384994a6a3814e57411408f7f21ea58ef302" translate="yes" xml:space="preserve">
          <source>The supported date range is &lt;code&gt;0001-01-01 00:00:00.0&lt;/code&gt; to &lt;code&gt;9999-12-31 23:59:59.999_999_999&lt;/code&gt; in any local time zone.</source>
          <target state="translated">Поддерживаемый диапазон &lt;code&gt;0001-01-01 00:00:00.0&lt;/code&gt; до &lt;code&gt;9999-12-31 23:59:59.999_999_999&lt;/code&gt; в любом местном часовом поясе.</target>
        </trans-unit>
        <trans-unit id="4503a73f7c127c408ab781d1b0fac75a8017a56c" translate="yes" xml:space="preserve">
          <source>The supported flag keywords are:</source>
          <target state="translated">Поддерживаются ключевые слова флага:</target>
        </trans-unit>
        <trans-unit id="6e218ceebba6ea54e2006ba0c7c6e7def70ac615" translate="yes" xml:space="preserve">
          <source>The syntax for a format specifier is:</source>
          <target state="translated">Синтаксис спецификатора формата:</target>
        </trans-unit>
        <trans-unit id="b0021c19912d1e999084687b97057bfc0b4788f8" translate="yes" xml:space="preserve">
          <source>The tags defined on this example or example group</source>
          <target state="translated">Теги,определенные в данном примере или группе примеров</target>
        </trans-unit>
        <trans-unit id="55bd38b7daa1bdf9cc8a6ed62f94bd5f0ddb042f" translate="yes" xml:space="preserve">
          <source>The techniques described above for instance variables will also work for proc and method calls.</source>
          <target state="translated">Методы,описанные выше,например,переменные,также будут работать для proc и вызовов методов.</target>
        </trans-unit>
        <trans-unit id="a5f08511b105744daa389a7297da93cef97ae79c" translate="yes" xml:space="preserve">
          <source>The ternary &lt;code&gt;if&lt;/code&gt; allows writing an &lt;code&gt;if&lt;/code&gt; in a shorter way:</source>
          <target state="translated">Троичный &lt;code&gt;if&lt;/code&gt; позволяет писать &lt;code&gt;if&lt;/code&gt; более коротким способом:</target>
        </trans-unit>
        <trans-unit id="8bd92a9a3ced6519c7c84778a4996693c92e674e" translate="yes" xml:space="preserve">
          <source>The test is performed by the block supplied to &lt;em&gt;&amp;amp;block&lt;/em&gt;.</source>
          <target state="translated">Тест выполняется блоком, поставляемым в &lt;em&gt;&amp;amp; block&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="3496448917ada5aa324a728463e698336aac5477" translate="yes" xml:space="preserve">
          <source>The test stage of the pipeline will either pass (each element of the array returned a healthy exit code) or it will fail (one of the elements returned an error).</source>
          <target state="translated">Этап тестирования трубопровода либо пройдет (каждый элемент массива вернул здоровый код выхода),либо не пройдет (один из элементов вернул ошибку).</target>
        </trans-unit>
        <trans-unit id="30e4b606f413274e66088db5b0b29adc0fbe5ce6" translate="yes" xml:space="preserve">
          <source>The third rule is very convenient because of the typical directory structure of a project:</source>
          <target state="translated">Третье правило очень удобно из-за типичной структуры каталога проекта:</target>
        </trans-unit>
        <trans-unit id="a8fa55a537511eec3a9b51c9a830cf74f0aa2604" translate="yes" xml:space="preserve">
          <source>The time span is negative if &lt;code&gt;self&lt;/code&gt; is before &lt;em&gt;other&lt;/em&gt;.</source>
          <target state="translated">Промежуток времени отрицательно , если &lt;code&gt;self&lt;/code&gt; это прежде , чем &lt;em&gt;другие&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="741a69c6248954ce047ac81f471742b0273d79f3" translate="yes" xml:space="preserve">
          <source>The time zone is always UTC.</source>
          <target state="translated">Часовой пояс всегда UTC.</target>
        </trans-unit>
        <trans-unit id="cebb87b4a01c495d99b26ca4cb0c3f1e5a6a37dd" translate="yes" xml:space="preserve">
          <source>The time-of-day can be omitted and defaults to midnight (start of day):</source>
          <target state="translated">Время суток может быть опущено,а по умолчанию-до полуночи (начало дня):</target>
        </trans-unit>
        <trans-unit id="64ebdf1f1b3c564f37485bf9df3d06ef472ab0fb" translate="yes" xml:space="preserve">
          <source>The top-level number type.</source>
          <target state="translated">Тип номера верхнего уровня.</target>
        </trans-unit>
        <trans-unit id="1b33f83ef6cfe3aff507232296b953456b923ac8" translate="yes" xml:space="preserve">
          <source>The type after the &lt;code&gt;uninitialized&lt;/code&gt; keyword follows the &lt;a href=&quot;type_grammar&quot;&gt;type grammar&lt;/a&gt;.</source>
          <target state="translated">Тип после &lt;code&gt;uninitialized&lt;/code&gt; ключевого слова следует за &lt;a href=&quot;type_grammar&quot;&gt;грамматикой типа&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="15070dd3707e9d802a1fc0d25b1367c6f1003eef" translate="yes" xml:space="preserve">
          <source>The type arguments can be explicitly specified as part of the type name:</source>
          <target state="translated">Аргументы типа могут быть явно указаны как часть имени типа:</target>
        </trans-unit>
        <trans-unit id="02c4c08c93b67fc8ff8e11b395e7bcf85287380e" translate="yes" xml:space="preserve">
          <source>The type declaration can also include an initial value:</source>
          <target state="translated">Декларация типа может также включать начальное значение:</target>
        </trans-unit>
        <trans-unit id="6319b04ab143b210e9d97f792b86ed20bfe9f3d5" translate="yes" xml:space="preserve">
          <source>The type is not obvious for a human reading the code: they would also have to check all uses of &lt;code&gt;Person&lt;/code&gt; to find this out.</source>
          <target state="translated">Тип не очевиден для человека, читающего код: ему также необходимо проверить все варианты использования &lt;code&gt;Person&lt;/code&gt; , чтобы выяснить это.</target>
        </trans-unit>
        <trans-unit id="108c562214c93f386be1f162f0a0650b00bb7835" translate="yes" xml:space="preserve">
          <source>The type of a proc or block argument, like &lt;code&gt;&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../../int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Тип аргумента proc или block, например &lt;code&gt;&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../../int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2c42ac6401595769255c826b0b78eead029847e3" translate="yes" xml:space="preserve">
          <source>The type of a variable after a &lt;code&gt;while&lt;/code&gt; depends on the type it had before the &lt;code&gt;while&lt;/code&gt; and the type it had before leaving the &lt;code&gt;while&lt;/code&gt;'s body:</source>
          <target state="translated">Тип переменной через некоторое &lt;code&gt;while&lt;/code&gt; зависит от типа, который у нее был до того &lt;code&gt;while&lt;/code&gt; и типа, который у нее был до того, &lt;code&gt;while&lt;/code&gt; он покинул тело while :</target>
        </trans-unit>
        <trans-unit id="259c38c35a5373fad42e97eeb369785d902a0de1" translate="yes" xml:space="preserve">
          <source>The type of a variable or expression can consist of multiple types. This is called a union type. For example, when assigning to a same variable inside different &lt;a href=&quot;if&quot;&gt;if&lt;/a&gt; branches:</source>
          <target state="translated">Тип переменной или выражения может состоять из нескольких типов. Это называется типом объединения. Например, при назначении одной и той же переменной внутри разных ветвей &lt;a href=&quot;if&quot;&gt;if&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="857e9dd350d838b33e88e5bbd6617c80d3f3dee6" translate="yes" xml:space="preserve">
          <source>The type of an enum member is &lt;code&gt;Int32&lt;/code&gt; by default, even if you specify a different type in a constant value:</source>
          <target state="translated">Тип члена перечисления &lt;code&gt;Int32&lt;/code&gt; по умолчанию, даже если вы указываете другой тип в константном значении:</target>
        </trans-unit>
        <trans-unit id="22138fae9fc7f0f887fdce6335e5ef6cec7cbfa5" translate="yes" xml:space="preserve">
          <source>The type of the block in a method that uses &lt;code&gt;yield&lt;/code&gt; can be restricted using the &lt;code&gt;&amp;amp;block&lt;/code&gt; syntax. For example:</source>
          <target state="translated">Тип блока в методе, который использует &lt;code&gt;yield&lt;/code&gt; , может быть ограничен с помощью синтаксиса &lt;code&gt;&amp;amp;block&lt;/code&gt; . Например:</target>
        </trans-unit>
        <trans-unit id="fb4be47d081c9f00e1e008293842739b1e591c97" translate="yes" xml:space="preserve">
          <source>The type of the file.</source>
          <target state="translated">Тип файла.</target>
        </trans-unit>
        <trans-unit id="f81c742ee16652716e8606c185384a6c25c4887b" translate="yes" xml:space="preserve">
          <source>The type of the literal: &lt;code&gt;:i32&lt;/code&gt;, &lt;code&gt;:u16&lt;/code&gt;, &lt;code&gt;:f32&lt;/code&gt;, &lt;code&gt;:f64&lt;/code&gt;, etc.</source>
          <target state="translated">Тип буквального: &lt;code&gt;:i32&lt;/code&gt; , &lt;code&gt;:u16&lt;/code&gt; , &lt;code&gt;:f32&lt;/code&gt; , &lt;code&gt;:f64&lt;/code&gt; , и т.д.</target>
        </trans-unit>
        <trans-unit id="7aae3e7ec12ca924c59121098a0fb5438695876c" translate="yes" xml:space="preserve">
          <source>The type of the value is &lt;code&gt;Int32&lt;/code&gt; by default but can be changed:</source>
          <target state="translated">Тип значения по умолчанию &lt;code&gt;Int32&lt;/code&gt; , но его можно изменить:</target>
        </trans-unit>
        <trans-unit id="07407b35ba208a8a320f5b6e55c3b67f2dcba23e" translate="yes" xml:space="preserve">
          <source>The type of this expression is restricted to &lt;em&gt;type&lt;/em&gt; by the compiler. &lt;em&gt;type&lt;/em&gt; must be a constant or &lt;code&gt;typeof()&lt;/code&gt; expression. It cannot be evaluated at runtime.</source>
          <target state="translated">Тип этого выражения ограничивается &lt;em&gt;типом&lt;/em&gt; компилятора. &lt;em&gt;type&lt;/em&gt; должен быть константой или выражением &lt;code&gt;typeof()&lt;/code&gt; . Его нельзя оценить во время выполнения.</target>
        </trans-unit>
        <trans-unit id="fe7ab94d37aed65c7576f1ca405c59ffc8aee667" translate="yes" xml:space="preserve">
          <source>The type of this expression is restricted to &lt;em&gt;type&lt;/em&gt; by the compiler. If &lt;em&gt;type&lt;/em&gt; is not a valid type restriction for the expression type, then it is restricted to &lt;code&gt;&lt;a href=&quot;nil&quot;&gt;Nil&lt;/a&gt;&lt;/code&gt;. &lt;em&gt;type&lt;/em&gt; must be a constant or &lt;code&gt;typeof()&lt;/code&gt; expression. It cannot be evaluated at runtime.</source>
          <target state="translated">Тип этого выражения ограничивается &lt;em&gt;типом&lt;/em&gt; компилятора. Если &lt;em&gt;тип&lt;/em&gt; не является допустимым ограничением типа для типа выражения, то он ограничивается значением &lt;code&gt;&lt;a href=&quot;nil&quot;&gt;Nil&lt;/a&gt;&lt;/code&gt; . &lt;em&gt;type&lt;/em&gt; должен быть константой или выражением &lt;code&gt;typeof()&lt;/code&gt; . Его нельзя оценить во время выполнения.</target>
        </trans-unit>
        <trans-unit id="d710c89f96aa8fa61f94c283654a65cfc9df9fb9" translate="yes" xml:space="preserve">
          <source>The type restrictions applied to arguments</source>
          <target state="translated">Ограничения типа,применяемые к аргументам</target>
        </trans-unit>
        <trans-unit id="781e05338a9f46dedea33ad16c1f22747e5115a6" translate="yes" xml:space="preserve">
          <source>The types of the arguments (&lt;code&gt;T&lt;/code&gt;) are mandatory, except when directly sending a proc literal to a lib fun in C bindings.</source>
          <target state="translated">Типы аргументов ( &lt;code&gt;T&lt;/code&gt; ) являются обязательными, за исключением прямой отправки литерала proc в lib fun в привязках C.</target>
        </trans-unit>
        <trans-unit id="754e54b54ea2a8a8e371a7eb0db016dac368170a" translate="yes" xml:space="preserve">
          <source>The types of the arguments are mandatory, except when directly sending a proc literal to a lib &lt;code&gt;fun&lt;/code&gt; in C bindings.</source>
          <target state="translated">Типы аргументов являются обязательными, за исключением прямой отправки литерала proc в lib &lt;code&gt;fun&lt;/code&gt; в привязках C.</target>
        </trans-unit>
        <trans-unit id="ba85644bef24b13fb47d42733d7413b1308f1b35" translate="yes" xml:space="preserve">
          <source>The typical time representation provided by the operating system is based on a &quot;wall clock&quot; which is subject to changes for clock synchronization. This can result in discontinuous jumps in the time-line making it not suitable for accurately measuring elapsed time.</source>
          <target state="translated">Типичное представление времени,предоставляемое операционной системой,основано на &quot;настенных часах&quot;,которые могут быть изменены для синхронизации часов.Это может привести к прерывистым скачкам во временной линии,что сделает ее непригодной для точного измерения истекшего времени.</target>
        </trans-unit>
        <trans-unit id="2f96074085125d1425fe1b8d9419c01d3ff9fddb" translate="yes" xml:space="preserve">
          <source>The underscore &lt;code&gt;_&lt;/code&gt; before the suffix is optional.</source>
          <target state="translated">Подчеркивание &lt;code&gt;_&lt;/code&gt; перед суффиксом необязательно.</target>
        </trans-unit>
        <trans-unit id="067ddac2edd17a7efd366d05bd39d5795ee39b9c" translate="yes" xml:space="preserve">
          <source>The union of two named tuples with the same keys (regardless of their order) results in a named tuple type that has the union of the types in each key. The order of the keys will be the ones from the tuple on the left hand side.</source>
          <target state="translated">Объединение двух именованных кортежей с одинаковыми ключами (независимо от их порядка)приводит к созданию именованного типа кортежа,который имеет объединение типов в каждом ключе.Порядок следования ключей будет таким же,как и у кортежа с левой стороны.</target>
        </trans-unit>
        <trans-unit id="4f2e60460d67626b22b346567f965156512777d3" translate="yes" xml:space="preserve">
          <source>The union of two tuples of the same size results in a tuple type that has the union of the types in each position.</source>
          <target state="translated">В результате объединения двух кортежей одного размера получается тип кортежа,имеющий объединение типов в каждой позиции.</target>
        </trans-unit>
        <trans-unit id="8afd92c5041f6e9ec4f4074058c75c942c73b7bb" translate="yes" xml:space="preserve">
          <source>The user ID of the file's owner.</source>
          <target state="translated">Идентификатор пользователя владельца файла.</target>
        </trans-unit>
        <trans-unit id="ef454f879d517fb81ee7f5054a2b34243db1f835" translate="yes" xml:space="preserve">
          <source>The user ID that the file belongs to.</source>
          <target state="translated">Идентификатор пользователя,к которому принадлежит файл.</target>
        </trans-unit>
        <trans-unit id="2b0c36a0d949f9008775425905192f1ed66ad726" translate="yes" xml:space="preserve">
          <source>The user's home directory.</source>
          <target state="translated">Домашний каталог пользователя.</target>
        </trans-unit>
        <trans-unit id="69297ec8c8b14f2c05921e647c9fc36149e74468" translate="yes" xml:space="preserve">
          <source>The user's identifier.</source>
          <target state="translated">Идентификатор пользователя.</target>
        </trans-unit>
        <trans-unit id="168516e5f12f280f75fdcbfbaef516955a0c5e4c" translate="yes" xml:space="preserve">
          <source>The user's login shell.</source>
          <target state="translated">Оболочка входа пользователя.</target>
        </trans-unit>
        <trans-unit id="f398a07d224999258456b0de430a4e0072f6caf7" translate="yes" xml:space="preserve">
          <source>The user's primary group identifier.</source>
          <target state="translated">Основной идентификатор группы пользователя.</target>
        </trans-unit>
        <trans-unit id="4ff9593149ef2ba9900fb804c6007eb3805c2cb2" translate="yes" xml:space="preserve">
          <source>The user's real or full name.</source>
          <target state="translated">Настоящее или полное имя пользователя.</target>
        </trans-unit>
        <trans-unit id="1ca94ead58af110ad6f863fda49b90f7d5569c70" translate="yes" xml:space="preserve">
          <source>The user's username.</source>
          <target state="translated">Имя пользователя.</target>
        </trans-unit>
        <trans-unit id="b7ab44265ee3c1a2128b252ac0fbcaf236e9b12e" translate="yes" xml:space="preserve">
          <source>The usual convention is to provide an alternative &quot;question&quot; method to signal that this variant of the method returns &lt;code&gt;nil&lt;/code&gt; instead of raising. This lets the user choose whether she wants to deal with exceptions or with &lt;code&gt;nil&lt;/code&gt;. Note, however, that this is not available for every method out there, as exceptions are still the preferred way because they don't pollute the code with error handling logic.</source>
          <target state="translated">Обычное соглашение состоит в том, чтобы предоставить альтернативный метод &amp;laquo;вопрос&amp;raquo;, чтобы сигнализировать, что этот вариант метода возвращает &lt;code&gt;nil&lt;/code&gt; вместо повышения. Это позволяет пользователю выбирать, хочет ли он иметь дело с исключениями или с &lt;code&gt;nil&lt;/code&gt; . Однако обратите внимание, что это доступно не для каждого метода, поскольку исключения по-прежнему являются предпочтительным способом, поскольку они не загрязняют код логикой обработки ошибок.</target>
        </trans-unit>
        <trans-unit id="59ce3a47e8cc9701295cd89ed345c7526071cbbd" translate="yes" xml:space="preserve">
          <source>The valid types to use in C bindings are:</source>
          <target state="translated">Действительные типы для использования в переплетах C:</target>
        </trans-unit>
        <trans-unit id="a20a0d836d43b221dba43e371e3ece40ad64b317" translate="yes" xml:space="preserve">
          <source>The value assigned to the variable, if any.</source>
          <target state="translated">Значение,присваиваемое переменной,если таковая имеется.</target>
        </trans-unit>
        <trans-unit id="fcfa57e04fde68f0ab4098abfb5554b71327e65b" translate="yes" xml:space="preserve">
          <source>The value can also be another hash literal with the following options:</source>
          <target state="translated">Значение может быть еще одним хэшем буквально со следующими опциями:</target>
        </trans-unit>
        <trans-unit id="913440c9a45b0fb480154450d045729b273b2aef" translate="yes" xml:space="preserve">
          <source>The value can be changed to overwrite the system default:</source>
          <target state="translated">Значение может быть изменено на перезапись системы по умолчанию:</target>
        </trans-unit>
        <trans-unit id="fc06e0ddb6f726f165264966f85aba06f284c6aa" translate="yes" xml:space="preserve">
          <source>The value is &lt;code&gt;1&lt;/code&gt; for &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;0&lt;/code&gt; for &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Значение равно &lt;code&gt;1&lt;/code&gt; для &lt;code&gt;true&lt;/code&gt; и &lt;code&gt;0&lt;/code&gt; для &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bf5b165e811f3256ead60c619f132cce199cb310" translate="yes" xml:space="preserve">
          <source>The value of an &lt;code&gt;if&lt;/code&gt; is the value of the last expression found in each of its branches:</source>
          <target state="translated">Значение &lt;code&gt;if&lt;/code&gt; - это значение последнего выражения, найденного в каждой из его ветвей:</target>
        </trans-unit>
        <trans-unit id="5eed3fa4c0b1823d58a8c6bf72da684208a7433b" translate="yes" xml:space="preserve">
          <source>The value of each key can be a type. Primitive types (numbers, string, boolean and nil) are supported, as well as custom objects which use &lt;code&gt;&lt;a href=&quot;json#mapping(**_properties_)-macro&quot;&gt;JSON.mapping&lt;/a&gt;&lt;/code&gt; or define a &lt;code&gt;new&lt;/code&gt; method that accepts a &lt;code&gt;&lt;a href=&quot;json/pullparser&quot;&gt;JSON::PullParser&lt;/a&gt;&lt;/code&gt; and returns an object from it. Union types are supported, if multiple types in the union can be mapped from the JSON, it is undefined which one will be chosen.</source>
          <target state="translated">Значение каждого ключа может быть типом. Поддерживаются примитивные типы (числа, строки, логические и ноль), а также пользовательские объекты, которые используют &lt;code&gt;&lt;a href=&quot;json#mapping(**_properties_)-macro&quot;&gt;JSON.mapping&lt;/a&gt;&lt;/code&gt; или определяют &lt;code&gt;new&lt;/code&gt; метод, который принимает &lt;code&gt;&lt;a href=&quot;json/pullparser&quot;&gt;JSON::PullParser&lt;/a&gt;&lt;/code&gt; и возвращает объект из него. Типы объединения поддерживаются, если из JSON могут быть сопоставлены несколько типов в объединении, не определено, какой из них будет выбран.</target>
        </trans-unit>
        <trans-unit id="5d00003fd331dd99edd991c23f3a360f8d0b8a9c" translate="yes" xml:space="preserve">
          <source>The value of this scalar.</source>
          <target state="translated">Значение этого скаляра.</target>
        </trans-unit>
        <trans-unit id="506a8109e608aea8ae4ab3b097dd3374dd8ab16e" translate="yes" xml:space="preserve">
          <source>The value range is &lt;code&gt;1..365&lt;/code&gt; in normal yars and &lt;code&gt;1..366&lt;/code&gt; in leap years.</source>
          <target state="translated">Диапазон значений составляет &lt;code&gt;1..365&lt;/code&gt; в нормальных &lt;code&gt;1..366&lt;/code&gt; и 1,3666 в високосных годах.</target>
        </trans-unit>
        <trans-unit id="737d355efb7ce1fb61687ce2dd59678f249b6230" translate="yes" xml:space="preserve">
          <source>The values of annotation key/value pairs can be accessed at compile time via the &lt;a href=&quot;https://crystal-lang.org/api/Crystal/Macros/Annotation.html#%5B%5D%28name%3ASymbolLiteral%7CStringLiteral%7CMacroId%29%3AASTNode-instance-method&quot;&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">К значениям пар ключ / значение аннотации можно получить доступ во время компиляции через метод &lt;a href=&quot;https://crystal-lang.org/api/Crystal/Macros/Annotation.html#%5B%5D%28name%3ASymbolLiteral%7CStringLiteral%7CMacroId%29%3AASTNode-instance-method&quot;&gt; &lt;code&gt;[]&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="069c7c9593f2e7c47e6a8c7723ea194ef1eba5fb" translate="yes" xml:space="preserve">
          <source>The version of the HTTP::Request that created this response.</source>
          <target state="translated">Версия HTTP::Request,которая создала этот ответ.</target>
        </trans-unit>
        <trans-unit id="22c5f3a3c46bff9cadece027c89e96d0529eb330" translate="yes" xml:space="preserve">
          <source>The warmup phase defaults to 2 seconds. During this stage we figure out how many cycles are needed to run the block for roughly 100ms, and record it.</source>
          <target state="translated">По умолчанию фаза разогрева устанавливается на 2 секунды.На этом этапе мы выясняем,сколько циклов нужно для запуска блока примерно на 100 мс,и записываем его.</target>
        </trans-unit>
        <trans-unit id="46266782916c37f0489de1ece340ef09c81505e3" translate="yes" xml:space="preserve">
          <source>The way to improve performance in this case is to either use one of the iteration methods (&lt;code&gt;each_char&lt;/code&gt;, &lt;code&gt;each_byte&lt;/code&gt;, &lt;code&gt;each_codepoint&lt;/code&gt;), or use the more low-level &lt;code&gt;Char::Reader&lt;/code&gt; struct. For example, using &lt;code&gt;each_char&lt;/code&gt;:</source>
          <target state="translated">Способ повышения производительности в этом случае состоит в том, чтобы либо использовать один из методов итерации ( &lt;code&gt;each_char&lt;/code&gt; , &lt;code&gt;each_byte&lt;/code&gt; , &lt;code&gt;each_codepoint&lt;/code&gt; ), либо использовать более низкоуровневую структуру &lt;code&gt;Char::Reader&lt;/code&gt; . Например, используя &lt;code&gt;each_char&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="337ea97d4e3978ad9ffa54460e9435b596c6f608" translate="yes" xml:space="preserve">
          <source>The yielded object has an &lt;code&gt;&lt;a href=&quot;params#add(name,value)-instance-method&quot;&gt;#add&lt;/a&gt;&lt;/code&gt; method that accepts two arguments, a key (&lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;) and a value (&lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../nil&quot;&gt;Nil&lt;/a&gt;&lt;/code&gt;). Keys and values are escaped using &lt;code&gt;&lt;a href=&quot;../uri#encode_www_form(string:String,*,space_to_plus:Bool=true):String-class-method&quot;&gt;URI.encode_www_form&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">У &lt;code&gt;&lt;a href=&quot;params#add(name,value)-instance-method&quot;&gt;#add&lt;/a&gt;&lt;/code&gt; объекта есть метод #add, который принимает два аргумента: ключ ( &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; ) и значение ( &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;../nil&quot;&gt;Nil&lt;/a&gt;&lt;/code&gt; ). Ключи и значения экранируются с использованием &lt;code&gt;&lt;a href=&quot;../uri#encode_www_form(string:String,*,space_to_plus:Bool=true):String-class-method&quot;&gt;URI.encode_www_form&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7f5b823543dd77d3734be23420eece15b05c269d" translate="yes" xml:space="preserve">
          <source>The yielded object has an &lt;code&gt;&lt;a href=&quot;params#add(name,value)-instance-method&quot;&gt;#add&lt;/a&gt;&lt;/code&gt; method that accepts two arguments, a key (&lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;) and a value (&lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../nil&quot;&gt;Nil&lt;/a&gt;&lt;/code&gt;). Keys and values are escaped using &lt;code&gt;&lt;a href=&quot;../uri#encode_www_form(string:String,io:IO,*,space_to_plus:Bool=true):Nil-class-method&quot;&gt;URI.encode_www_form&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Полученный объект имеет метод &lt;code&gt;&lt;a href=&quot;params#add(name,value)-instance-method&quot;&gt;#add&lt;/a&gt;&lt;/code&gt; , который принимает два аргумента: ключ ( &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; ) и значение ( &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;../nil&quot;&gt;Nil&lt;/a&gt;&lt;/code&gt; ). Ключи и значения экранируются с помощью &lt;code&gt;&lt;a href=&quot;../uri#encode_www_form(string:String,io:IO,*,space_to_plus:Bool=true):Nil-class-method&quot;&gt;URI.encode_www_form&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aaad6ca40d977cb492cea395430d88e3875865bb" translate="yes" xml:space="preserve">
          <source>Their type is inferred from their usage, not only from their initializer. In general, they are just value holders associated with the type that the programmer expects them to have according to their location and usage on the program.</source>
          <target state="translated">Их тип выводится из их использования,а не только из их инициализатора.Вообще,они являются просто обладателями значений,связанных с тем типом,который программист ожидает от них в соответствии с их расположением и использованием в программе.</target>
        </trans-unit>
        <trans-unit id="ed36c8d7efa814982a1bcb38f471b6e7b33b12f3" translate="yes" xml:space="preserve">
          <source>Their type is inferred using the &lt;a href=&quot;type_inference&quot;&gt;global type inference algorithm&lt;/a&gt;.</source>
          <target state="translated">Их тип выводится с использованием &lt;a href=&quot;type_inference&quot;&gt;алгоритма глобального вывода типов&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a596befb5ab412bfec59b1ee23ba998b1572a8fb" translate="yes" xml:space="preserve">
          <source>Then &lt;code&gt;add&lt;/code&gt; &amp;amp; &lt;code&gt;commit&lt;/code&gt; to start tracking the files with Git:</source>
          <target state="translated">Затем &lt;code&gt;add&lt;/code&gt; &amp;amp; &lt;code&gt;commit&lt;/code&gt; , чтобы начать отслеживать файлы с помощью Git:</target>
        </trans-unit>
        <trans-unit id="53aa884bdfb9b146ca586b2f1bff6004bcea5458" translate="yes" xml:space="preserve">
          <source>Then it can be get and set:</source>
          <target state="translated">Тогда его можно взять и установить:</target>
        </trans-unit>
        <trans-unit id="5e7ac9a6a4d85e91d8fdcbb9eda94da14e4434ce" translate="yes" xml:space="preserve">
          <source>Then named arguments are matched, by name, with any argument in the method (it can be before or after the splat method argument). If an argument was already filled by a positional argument then it's an error.</source>
          <target state="translated">Затем именованные аргументы сопоставляются по имени с любым аргументом метода (это может быть до или после аргумента метода splat).Если аргумент уже был заполнен позиционным аргументом,то это ошибка.</target>
        </trans-unit>
        <trans-unit id="7fb23335a8cb62994b6de5487ae6e83d8d3c186a" translate="yes" xml:space="preserve">
          <source>Then you can invoke the compiler by just typing &lt;code&gt;crystal&lt;/code&gt;.</source>
          <target state="translated">Затем вы можете вызвать компилятор, просто набрав &lt;code&gt;crystal&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e37e885ec74c274941734c4f9ff31dd391af29e2" translate="yes" xml:space="preserve">
          <source>Then you can pass a function (a &lt;a href=&quot;http://crystal-lang.org/api/Proc.html&quot;&gt;Proc&lt;/a&gt;) like this:</source>
          <target state="translated">Затем вы можете передать функцию ( &lt;a href=&quot;http://crystal-lang.org/api/Proc.html&quot;&gt;Proc&lt;/a&gt; ) следующим образом:</target>
        </trans-unit>
        <trans-unit id="3d4a5cfd422762c83f968181fb2673335ae29b56" translate="yes" xml:space="preserve">
          <source>There are  and  syntax. The former will render returned values. The latter will not, but instead serve to control the structure as we do in Crystal.</source>
          <target state="translated">Есть и синтаксис.Первый отрисовывает возвращаемые значения.Последнее не будет,а вместо этого будет служить для управления структурой,как мы делаем это в Crystal.</target>
        </trans-unit>
        <trans-unit id="1bacc9714424057814e44c792dedc8e0a456c143" translate="yes" xml:space="preserve">
          <source>There are also two special methods for converting to UTC and local time zone:</source>
          <target state="translated">Существуют также два специальных метода преобразования в UTC и местный часовой пояс:</target>
        </trans-unit>
        <trans-unit id="842520affd12c1e57a52e3ffbca245c2ee663233" translate="yes" xml:space="preserve">
          <source>There are alternative ways to change the foreground color:</source>
          <target state="translated">Есть альтернативные способы изменить цвет переднего плана:</target>
        </trans-unit>
        <trans-unit id="922c400cf5752073dc87977a7821e90bef8e3f64" translate="yes" xml:space="preserve">
          <source>There are four signed integer types, and four unsigned integer types:</source>
          <target state="translated">Существует четыре знаковых целочисленных типа и четыре беззнаковых целых типа:</target>
        </trans-unit>
        <trans-unit id="f6ef70215a67446a14d9e7e800fc787c86aba718" translate="yes" xml:space="preserve">
          <source>There are four signed integer types: &lt;code&gt;&lt;a href=&quot;int8&quot;&gt;Int8&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;int16&quot;&gt;Int16&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt;, being able to represent numbers of 8, 16, 32 and 64 bits respectively. There are four unsigned integer types: &lt;code&gt;&lt;a href=&quot;uint8&quot;&gt;UInt8&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;uint16&quot;&gt;UInt16&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;uint32&quot;&gt;UInt32&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;uint64&quot;&gt;UInt64&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Существует четыре типа целых чисел со &lt;code&gt;&lt;a href=&quot;int8&quot;&gt;Int8&lt;/a&gt;&lt;/code&gt; : Int8 , &lt;code&gt;&lt;a href=&quot;int16&quot;&gt;Int16&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; , которые могут представлять числа 8, 16, 32 и 64 бита соответственно. Есть четыре беззнаковых целых типов: &lt;code&gt;&lt;a href=&quot;uint8&quot;&gt;UInt8&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;uint16&quot;&gt;UInt16&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;uint32&quot;&gt;UInt32&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;uint64&quot;&gt;UInt64&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="840dc3d87218acf0124cec8936faf4397855ab70" translate="yes" xml:space="preserve">
          <source>There are however some special rules regarding operator syntax:</source>
          <target state="translated">Однако существуют специальные правила,касающиеся синтаксиса операторов:</target>
        </trans-unit>
        <trans-unit id="512b0b0a764ab382af28ad714d03b3b1b5f90a88" translate="yes" xml:space="preserve">
          <source>There are many convenient query methods built on top of &lt;code&gt;#query&lt;/code&gt;.</source>
          <target state="translated">Есть много удобных методов запросов, построенных поверх &lt;code&gt;#query&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0540a12666f72e39d5c840798fd1cf96d9186e81" translate="yes" xml:space="preserve">
          <source>There are methods to create expectations which test for equivalence (&lt;code&gt;eq&lt;/code&gt;), identity (&lt;code&gt;be&lt;/code&gt;), type (&lt;code&gt;be_a&lt;/code&gt;), and nil (&lt;code&gt;be_nil&lt;/code&gt;). Note that the identity expectation uses &lt;code&gt;.same?&lt;/code&gt; which tests if &lt;a href=&quot;https://crystal-lang.org/api/latest/Reference.html#object_id%3AUInt64-instance-method&quot;&gt;&lt;code&gt;#object_id&lt;/code&gt;&lt;/a&gt; are identical. This is only true if the expected value points to &lt;em&gt;the same object&lt;/em&gt; instead of &lt;em&gt;an equivalent one&lt;/em&gt;. This is only possible for reference types and won't work for value types like structs or numbers.</source>
          <target state="translated">Существуют методы для создания ожиданий, которые проверяют эквивалентность ( &lt;code&gt;eq&lt;/code&gt; ), идентичность ( &lt;code&gt;be&lt;/code&gt; ), тип ( &lt;code&gt;be_a&lt;/code&gt; ) и nil ( &lt;code&gt;be_nil&lt;/code&gt; ). Обратите внимание, что ожидание идентичности использует &lt;code&gt;.same?&lt;/code&gt; какие тесты, если &lt;a href=&quot;https://crystal-lang.org/api/latest/Reference.html#object_id%3AUInt64-instance-method&quot;&gt; &lt;code&gt;#object_id&lt;/code&gt; &lt;/a&gt; идентичны. Это верно только в том случае, если ожидаемое значение указывает на один и &lt;em&gt;тот же объект&lt;/em&gt; вместо &lt;em&gt;эквивалентного&lt;/em&gt; . Это возможно только для ссылочных типов и не будет работать для типов значений, таких как структуры или числа.</target>
        </trans-unit>
        <trans-unit id="25508cf1fa434da49c56f3aa2985851460362c8c" translate="yes" xml:space="preserve">
          <source>There are no provisions for resuming the current fiber (where this method is called). Unless it is explicitly added for rescheduling (for example using &lt;code&gt;&lt;a href=&quot;fiber#enqueue-instance-method&quot;&gt;#enqueue&lt;/a&gt;&lt;/code&gt;) the current fiber won't ever reach any instructions after the call to this method.</source>
          <target state="translated">Нет никаких условий для возобновления текущего волокна (где этот метод вызывается). Если он явно не добавлен для перепланирования (например, с помощью &lt;code&gt;&lt;a href=&quot;fiber#enqueue-instance-method&quot;&gt;#enqueue&lt;/a&gt;&lt;/code&gt; ), текущий файбер никогда не достигнет каких-либо инструкций после вызова этого метода.</target>
        </trans-unit>
        <trans-unit id="8665b9ce7005cbef306e0775d40ccc93ff049b72" translate="yes" xml:space="preserve">
          <source>There are people looking for the &lt;em&gt;exact&lt;/em&gt; functionality of our library and the &lt;em&gt;general&lt;/em&gt; functionality of our library. e.g. Bob needs a palindrome library, but Felipe is just looking for libraries involving text and Susan is looking for libraries involving spelling.</source>
          <target state="translated">Есть люди, которые ищут &lt;em&gt;точную&lt;/em&gt; функциональность нашей библиотеки и &lt;em&gt;общую&lt;/em&gt; функциональность нашей библиотеки. например, Бобу нужна библиотека палиндрома, но Фелипе просто ищет библиотеки, содержащие текст, а Сьюзен ищет библиотеки, содержащие орфографию.</target>
        </trans-unit>
        <trans-unit id="15833e4fae44677e5aef19597668e8b099aa34dd" translate="yes" xml:space="preserve">
          <source>There are several methods to retrieve a &lt;code&gt;&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; instance representing the current time:</source>
          <target state="translated">Есть несколько методов для получения экземпляра &lt;code&gt;&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; , представляющего текущее время:</target>
        </trans-unit>
        <trans-unit id="e831d0e1ff9abcb6d2f8ca9921871d9cff763b05" translate="yes" xml:space="preserve">
          <source>There are several ways to avoid heap memory allocations. The standard library is designed in a way to help you do that.</source>
          <target state="translated">Существует несколько способов избежать выделения кучи памяти.Стандартная библиотека разработана таким образом,чтобы помочь вам в этом.</target>
        </trans-unit>
        <trans-unit id="2975438e927a4d7f9683bb1a51e8eb7ce9c022ce" translate="yes" xml:space="preserve">
          <source>There are several ways to let Crystal know this.</source>
          <target state="translated">Есть несколько способов сообщить об этом Кристал.</target>
        </trans-unit>
        <trans-unit id="8a72b96ca552df5e83dc14ec3a46f7f9ea7c5609" translate="yes" xml:space="preserve">
          <source>There are two floating point types, &lt;a href=&quot;http://crystal-lang.org/api/Float32.html&quot;&gt;Float32&lt;/a&gt; and &lt;a href=&quot;http://crystal-lang.org/api/Float64.html&quot;&gt;Float64&lt;/a&gt;, which correspond to the &lt;a href=&quot;http://en.wikipedia.org/wiki/Single_precision_floating-point_format&quot;&gt;binary32&lt;/a&gt; and &lt;a href=&quot;http://en.wikipedia.org/wiki/Double_precision_floating-point_format&quot;&gt;binary64&lt;/a&gt; types defined by IEEE.</source>
          <target state="translated">Существует два типа с плавающей точкой, &lt;a href=&quot;http://crystal-lang.org/api/Float32.html&quot;&gt;Float32&lt;/a&gt; и &lt;a href=&quot;http://crystal-lang.org/api/Float64.html&quot;&gt;Float64&lt;/a&gt; , которые соответствуют &lt;a href=&quot;http://en.wikipedia.org/wiki/Single_precision_floating-point_format&quot;&gt;типам binary32&lt;/a&gt; и &lt;a href=&quot;http://en.wikipedia.org/wiki/Double_precision_floating-point_format&quot;&gt;binary64,&lt;/a&gt; определенным IEEE.</target>
        </trans-unit>
        <trans-unit id="35b8024484d51c08919d7d33510f5de3f987837e" translate="yes" xml:space="preserve">
          <source>There are two floating point types, &lt;code&gt;&lt;a href=&quot;float32&quot;&gt;Float32&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;float64&quot;&gt;Float64&lt;/a&gt;&lt;/code&gt;, which correspond to the &lt;a href=&quot;http://en.wikipedia.org/wiki/Single_precision_floating-point_format&quot;&gt;binary32&lt;/a&gt; and &lt;a href=&quot;http://en.wikipedia.org/wiki/Double_precision_floating-point_format&quot;&gt;binary64&lt;/a&gt; types defined by IEEE.</source>
          <target state="translated">Существует два типа с плавающей точкой, &lt;code&gt;&lt;a href=&quot;float32&quot;&gt;Float32&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;float64&quot;&gt;Float64&lt;/a&gt;&lt;/code&gt; , которые соответствуют &lt;a href=&quot;http://en.wikipedia.org/wiki/Single_precision_floating-point_format&quot;&gt;типам binary32&lt;/a&gt; и &lt;a href=&quot;http://en.wikipedia.org/wiki/Double_precision_floating-point_format&quot;&gt;binary64,&lt;/a&gt; определенным IEEE.</target>
        </trans-unit>
        <trans-unit id="e806e5ba2d29799e2dcd9daf07237f2d6c0ef4cc" translate="yes" xml:space="preserve">
          <source>There are two main topics when building a CLI application:</source>
          <target state="translated">При создании приложения CLI есть две основные темы:</target>
        </trans-unit>
        <trans-unit id="697020fc37bddf0093745ab213eb084879041a18" translate="yes" xml:space="preserve">
          <source>There are two ways to solve this:</source>
          <target state="translated">Есть два способа решить эту проблему:</target>
        </trans-unit>
        <trans-unit id="b372dc0271f26d904bde368ff92af43659289eda" translate="yes" xml:space="preserve">
          <source>There is a way to rollback the changes in the &lt;code&gt;inner-transaction&lt;/code&gt; but keep the ones in the &lt;code&gt;outer-transaction&lt;/code&gt;. Use &lt;code&gt;rollback&lt;/code&gt; in the &lt;code&gt;inner_tx&lt;/code&gt; object. This will rollback &lt;strong&gt;only&lt;/strong&gt; then inner-transaction. Here is the example:</source>
          <target state="translated">Есть способ откатить изменения во &lt;code&gt;inner-transaction&lt;/code&gt; но сохранить их во &lt;code&gt;outer-transaction&lt;/code&gt; . Используйте &lt;code&gt;rollback&lt;/code&gt; в объекте &lt;code&gt;inner_tx&lt;/code&gt; . Это будет откат &lt;strong&gt;только&lt;/strong&gt; тогда внутренняя транзакция. Вот пример:</target>
        </trans-unit>
        <trans-unit id="c7e08c01da28270c73ccef2c650dfccc7946fbdc" translate="yes" xml:space="preserve">
          <source>There is also a helper macro to generate these formatters. Here's an example that generates the same result:</source>
          <target state="translated">Существует также вспомогательный макрос для генерации этих форматировщиков.Вот пример,который генерирует тот же результат:</target>
        </trans-unit>
        <trans-unit id="55ea1e248c53f4931fd7f81fa204e9b44e81271d" translate="yes" xml:space="preserve">
          <source>There is another special case when &lt;code&gt;a&lt;/code&gt; is an index accessor (&lt;code&gt;[]&lt;/code&gt;), it is changed to the nilable variant (&lt;code&gt;[]?&lt;/code&gt; on the right hand side:</source>
          <target state="translated">Есть еще один особый случай, когда &lt;code&gt;a&lt;/code&gt; является методом доступа к индексу ( &lt;code&gt;[]&lt;/code&gt; ), он изменяется на вариант с нулевым значением ( &lt;code&gt;[]?&lt;/code&gt; В правой части:</target>
        </trans-unit>
        <trans-unit id="d1fc1a4586629630f7e45274573602d5fbf3b217" translate="yes" xml:space="preserve">
          <source>There is no explicit limit on the input values but the addition must result in a valid time between &lt;code&gt;0001-01-01 00:00:00.0&lt;/code&gt; and &lt;code&gt;9999-12-31 23:59:59.999_999_999&lt;/code&gt;. Otherwise &lt;code&gt;&lt;a href=&quot;argumenterror&quot;&gt;ArgumentError&lt;/a&gt;&lt;/code&gt; is raised.</source>
          <target state="translated">Не существует явного ограничения на входные значения, но добавление должно привести к допустимому времени между &lt;code&gt;0001-01-01 00:00:00.0&lt;/code&gt; и &lt;code&gt;9999-12-31 23:59:59.999_999_999&lt;/code&gt; . В противном случае &lt;code&gt;&lt;a href=&quot;argumenterror&quot;&gt;ArgumentError&lt;/a&gt;&lt;/code&gt; повышается.</target>
        </trans-unit>
        <trans-unit id="bb5bf545a7e2854b2d0be84ded507a04958791e2" translate="yes" xml:space="preserve">
          <source>There is no explicit limit on the input values but the shift must result in a valid time between &lt;code&gt;0001-01-01 00:00:00.0&lt;/code&gt; and &lt;code&gt;9999-12-31 23:59:59.999_999_999&lt;/code&gt;. Otherwise &lt;code&gt;&lt;a href=&quot;argumenterror&quot;&gt;ArgumentError&lt;/a&gt;&lt;/code&gt; is raised.</source>
          <target state="translated">Нет явного ограничения на входные значения, но сдвиг должен привести к допустимому времени между &lt;code&gt;0001-01-01 00:00:00.0&lt;/code&gt; и &lt;code&gt;9999-12-31 23:59:59.999_999_999&lt;/code&gt; . В противном случае &lt;code&gt;&lt;a href=&quot;argumenterror&quot;&gt;ArgumentError&lt;/a&gt;&lt;/code&gt; повышается.</target>
        </trans-unit>
        <trans-unit id="f38cee4e5f6d302c1d80d85a1a600c40b70cebce" translate="yes" xml:space="preserve">
          <source>There is no need to explicitly require &lt;code&gt;crystal-lang/crystal-db&lt;/code&gt;</source>
          <target state="translated">Нет необходимости явно требовать &lt;code&gt;crystal-lang/crystal-db&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="06b30029a569ea96f99cdff82bb1a1a33f5f5175" translate="yes" xml:space="preserve">
          <source>There is one &lt;code&gt;exception&lt;/code&gt; with a different behaviour. If a &lt;code&gt;DB::Rollback&lt;/code&gt; is raised within the block, the implicit rollback will happen, but the exception will not be raised outside the block.</source>
          <target state="translated">Есть одно &lt;code&gt;exception&lt;/code&gt; с другим поведением. Если &lt;code&gt;DB::Rollback&lt;/code&gt; вызывается внутри блока, происходит неявный откат, но исключение не будет вызываться вне блока.</target>
        </trans-unit>
        <trans-unit id="5d04f34bb755ae26b5dfd48d5d9baf367179e79c" translate="yes" xml:space="preserve">
          <source>There's a second problem with the above: computing the &lt;code&gt;size&lt;/code&gt; of a String is also slow, because it's not simply the number of bytes in the string (the &lt;code&gt;bytesize&lt;/code&gt;). However, once a String's size has been computed, it is cached.</source>
          <target state="translated">Есть еще одна проблема с вышесказанным: вычисление &lt;code&gt;size&lt;/code&gt; строки также является медленным, потому что это не просто количество байтов в строке ( &lt;code&gt;bytesize&lt;/code&gt; ). Однако, как только размер строки был вычислен, он кэшируется.</target>
        </trans-unit>
        <trans-unit id="4704a94ef37f1a3b7256f98864eae80e83c79302" translate="yes" xml:space="preserve">
          <source>There's a simpler way to write the above by using an &lt;code&gt;out&lt;/code&gt; parameter:</source>
          <target state="translated">Есть более простой способ написать выше, используя параметр &lt;code&gt;out&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="833d4e9abecd6e3e8399fe0f3887e1d1cf701417" translate="yes" xml:space="preserve">
          <source>There's also the possibility of making a method only receive named arguments (and list them), by placing the star at the beginning:</source>
          <target state="translated">Также существует возможность сделать так,чтобы метод получал только именованные аргументы (и перечислял их),помещая звездочку в начало:</target>
        </trans-unit>
        <trans-unit id="f16baa65237c3959bd05d621bb9f4b7195f62a93" translate="yes" xml:space="preserve">
          <source>Therefore structs are mostly useful for immutable data types and/or stateless wrappers of other types, usually for performance reasons to avoid lots of small memory allocations when passing small copies might be more efficient (for more details, see the &lt;a href=&quot;../guides/performance#use-structs-when-possible&quot;&gt;performance guide&lt;/a&gt;).</source>
          <target state="translated">Поэтому структуры в основном полезны для неизменяемых типов данных и / или оболочек без сохранения состояния других типов, обычно из соображений производительности, чтобы избежать большого количества небольших выделений памяти, когда передача небольших копий может быть более эффективной (подробнее см. &lt;a href=&quot;../guides/performance#use-structs-when-possible&quot;&gt;Руководство&lt;/a&gt; по производительности ).</target>
        </trans-unit>
        <trans-unit id="f61f8922910bd58a08bdaaffc3decb97c2516227" translate="yes" xml:space="preserve">
          <source>Therefore, HTTP Basic is preferred, and Request Body should only be used if the server does not support HTTP Basic.</source>
          <target state="translated">Поэтому предпочтительнее использовать HTTP Basic,а Тело запроса должно использоваться только в том случае,если сервер не поддерживает HTTP Basic.</target>
        </trans-unit>
        <trans-unit id="eee92756be584f64d5bc56365f0f367ad17d2a42" translate="yes" xml:space="preserve">
          <source>These alternate between &lt;code&gt;&lt;a href=&quot;stringliteral&quot;&gt;StringLiteral&lt;/a&gt;&lt;/code&gt; for the plaintext parts and &lt;code&gt;&lt;a href=&quot;astnode&quot;&gt;ASTNode&lt;/a&gt;&lt;/code&gt;s of any type for the interpolated expressions.</source>
          <target state="translated">Они чередуются между &lt;code&gt;&lt;a href=&quot;stringliteral&quot;&gt;StringLiteral&lt;/a&gt;&lt;/code&gt; для частей открытого текста и &lt;code&gt;&lt;a href=&quot;astnode&quot;&gt;ASTNode&lt;/a&gt;&lt;/code&gt; любого типа для интерполированных выражений.</target>
        </trans-unit>
        <trans-unit id="52462b1c60032326e14014f4c5bfcae1c58f65f3" translate="yes" xml:space="preserve">
          <source>These are defined without arguments. For example</source>
          <target state="translated">Они определены без аргументов.Например</target>
        </trans-unit>
        <trans-unit id="e8180d4636bc06ee71ab5679ae69e58040058d3e" translate="yes" xml:space="preserve">
          <source>These are handy to write regular expressions that include slashes which would have to be escaped in slash-delimited literals.</source>
          <target state="translated">Они удобны для написания регулярных выражений,включающих косые черты,которые должны быть экранированы в литералах,разделенных косой чертой.</target>
        </trans-unit>
        <trans-unit id="dc10ca4e01d7a135d8ffb35a404ded61daa207f4" translate="yes" xml:space="preserve">
          <source>These are handy to write strings that include double quotes which would have to be escaped in double-quoted strings.</source>
          <target state="translated">Это удобно для записи строк,которые содержат двойные кавычки,которые должны быть экранированы в строках с двойными кавычками.</target>
        </trans-unit>
        <trans-unit id="0d3ba592af6e825f0110f0417c77a0807b693560" translate="yes" xml:space="preserve">
          <source>These can be included into classes:</source>
          <target state="translated">Они могут быть включены в классы:</target>
        </trans-unit>
        <trans-unit id="c5ac138599d0a4f2720ae8403888c676ba7af7ba" translate="yes" xml:space="preserve">
          <source>These flags are generally used in C bindings to conditionally define types and functions. For example, the very well known &lt;code&gt;size_t&lt;/code&gt; type is defined like this in Crystal:</source>
          <target state="translated">Эти флаги обычно используются в привязках C для условного определения типов и функций. Например, очень известный тип &lt;code&gt;size_t&lt;/code&gt; определяется в Crystal следующим образом:</target>
        </trans-unit>
        <trans-unit id="3328184f79d428d1cdba1a7b601e49684f8db2d1" translate="yes" xml:space="preserve">
          <source>These matchers run a block and pass if it raises a certain exception.</source>
          <target state="translated">Эти матчи прогоняют блок и проходят,если это вызывает определенное исключение.</target>
        </trans-unit>
        <trans-unit id="0c9e9b99ed1db33822e0001fe19d63beb30df5f0" translate="yes" xml:space="preserve">
          <source>These methods usually imply a side effect.</source>
          <target state="translated">Эти методы обычно подразумевают побочный эффект.</target>
        </trans-unit>
        <trans-unit id="ec6ca5f54090a8947e07a52adbdec5ff5edfd58a" translate="yes" xml:space="preserve">
          <source>These parts of the language are considered unsafe:</source>
          <target state="translated">Эти части языка считаются небезопасными:</target>
        </trans-unit>
        <trans-unit id="2a5cb449c652a8d3cad8971a908adf09c5315ce6" translate="yes" xml:space="preserve">
          <source>These tools not only will let us build and test our code each time the source has changed but also deploy the result (if the build was successful) or use automatic builds, and maybe test against different platforms, to mention a few.</source>
          <target state="translated">Эти инструменты позволят нам не только собирать и тестировать наш код каждый раз,когда исходный код изменяется,но и развертывать результат (если сборка прошла успешно)или использовать автоматические сборки,а также,возможно,тестировать его на разных платформах,и это лишь некоторые из них.</target>
        </trans-unit>
        <trans-unit id="6d2b6a3e66f06b30694b98b640803a3ea88b27ad" translate="yes" xml:space="preserve">
          <source>They allow communicating data between fibers without sharing memory and without having to worry about locks, semaphores or other special structures.</source>
          <target state="translated">Они позволяют передавать данные между волокнами без совместного использования памяти и без необходимости беспокоиться о замках,семафорах или других специальных структурах.</target>
        </trans-unit>
        <trans-unit id="7f394867a5d293f5b8d8a58cc4a912b45c6a8578" translate="yes" xml:space="preserve">
          <source>They are explained &lt;a href=&quot;http://llvm.org/docs/LangRef.html#calling-conventions&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">Они объясняются &lt;a href=&quot;http://llvm.org/docs/LangRef.html#calling-conventions&quot;&gt;здесь&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6a79d299bb92be8426f3c6903a9d162db6534c06" translate="yes" xml:space="preserve">
          <source>They can also be defined in classes and modules, and are visible in those scopes. Macros are also looked-up in the ancestors chain (superclasses and included modules).</source>
          <target state="translated">Они также могут быть определены в классах и модулях и видны в этих диапазонах.Макросы также просматриваются в цепочке предков (суперклассы и входящие в них модули).</target>
        </trans-unit>
        <trans-unit id="804bc537ae6f4a7386c98efeb9e2fc19229f8bd5" translate="yes" xml:space="preserve">
          <source>They return the rescued exception so it can be used for further expectations, for example to verify specific properties of the exception.</source>
          <target state="translated">Они возвращают спасенное исключение,чтобы его можно было использовать для дальнейших ожиданий,например,для проверки конкретных свойств исключения.</target>
        </trans-unit>
        <trans-unit id="940284502d1ed20ae98c767eff3b9d5f29075a3e" translate="yes" xml:space="preserve">
          <source>This Deque is implemented with a &lt;a href=&quot;http://en.wikipedia.org/wiki/Dynamic_array&quot;&gt;dynamic array&lt;/a&gt; used as a &lt;a href=&quot;https://en.wikipedia.org/wiki/Circular_buffer&quot;&gt;circular buffer&lt;/a&gt;.</source>
          <target state="translated">Этот Deque реализован с &lt;a href=&quot;http://en.wikipedia.org/wiki/Dynamic_array&quot;&gt;динамическим массивом,&lt;/a&gt; используемым в качестве &lt;a href=&quot;https://en.wikipedia.org/wiki/Circular_buffer&quot;&gt;кольцевого буфера&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d00e2309d8d14a793dd4162170eeeb8a6389e487" translate="yes" xml:space="preserve">
          <source>This affects only TLSv1.2 and below.</source>
          <target state="translated">Это касается только TLSv1.2 и ниже.</target>
        </trans-unit>
        <trans-unit id="4a893c0c045eb46234c00e09d1504b97ad0f7082" translate="yes" xml:space="preserve">
          <source>This allocates a new object and copies the contents of &lt;code&gt;self&lt;/code&gt; into it.</source>
          <target state="translated">Это выделяет новый объект и копирует содержимое &lt;code&gt;self&lt;/code&gt; в него.</target>
        </trans-unit>
        <trans-unit id="8772cd98aed338697c76d9394bc311fe22b0e008" translate="yes" xml:space="preserve">
          <source>This allocates the struct on the stack.</source>
          <target state="translated">Это распределяет структуру на стеке.</target>
        </trans-unit>
        <trans-unit id="45a0cdda2fbf946e775052aa4818961d112501a1" translate="yes" xml:space="preserve">
          <source>This allocates the union on the stack.</source>
          <target state="translated">Это распределяет профсоюз по стопке.</target>
        </trans-unit>
        <trans-unit id="cd5b485625c53ffbb51fbc1a22e7e9d6dde6937a" translate="yes" xml:space="preserve">
          <source>This allows you to define arrays and methods based on module type instead of class:</source>
          <target state="translated">Это позволяет определять массивы и методы на основе типа модуля,а не класса:</target>
        </trans-unit>
        <trans-unit id="89252758af63a847860957aa9da7700be5c4f8f0" translate="yes" xml:space="preserve">
          <source>This allows you to define helper methods in a file that will only be known in that file.</source>
          <target state="translated">Это позволяет определить вспомогательные методы в файле,который будет известен только в этом файле.</target>
        </trans-unit>
        <trans-unit id="43896ca6eada4a6a152d7197dc01153de171de19" translate="yes" xml:space="preserve">
          <source>This allows you to easily pass a hash as individual named arguments to a method.</source>
          <target state="translated">Это позволяет легко передать хэш в качестве индивидуальных именованных аргументов методу.</target>
        </trans-unit>
        <trans-unit id="48bda246c4232e755a841e76ef71277dbce3590e" translate="yes" xml:space="preserve">
          <source>This allows you to easily pass an array as individual arguments to a method.</source>
          <target state="translated">Это позволяет легко передавать массив в качестве индивидуальных аргументов в метод.</target>
        </trans-unit>
        <trans-unit id="11c1f0225f2fc4dc9ae274431682ca45cbdc6094" translate="yes" xml:space="preserve">
          <source>This allows you to treat strings, symbols, variables and calls uniformly. For example:</source>
          <target state="translated">Это позволяет единообразно обрабатывать строки,символы,переменные и вызовы.Например:</target>
        </trans-unit>
        <trans-unit id="985c89bbce1f242112f0eea387ee135995956f57" translate="yes" xml:space="preserve">
          <source>This also applies when a variable is assigned in an &lt;code&gt;if&lt;/code&gt;'s condition:</source>
          <target state="translated">Это также применимо, когда переменная назначается в &lt;code&gt;if&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="7525704cb029c1388cb3009876fa72ad59abdf42" translate="yes" xml:space="preserve">
          <source>This also happens with regular proc literals, even if it's evident that the proc wasn't invoked or stored:</source>
          <target state="translated">Это также происходит с обычными буквами &quot;proc&quot;,даже если очевидно,что &quot;proc&quot; не был вызван или сохранен:</target>
        </trans-unit>
        <trans-unit id="9988407bcb9d63feae9fc976466e9bdd7ad12705" translate="yes" xml:space="preserve">
          <source>This also is applied to generic types. Here &lt;code&gt;@values&lt;/code&gt; is inferred to be &lt;code&gt;Array(Int32)&lt;/code&gt;.</source>
          <target state="translated">Это также применяется к универсальным типам. Здесь &lt;code&gt;@values&lt;/code&gt; выводится как &lt;code&gt;Array(Int32)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7b7f7f4a266adf1c28f807ca3c9ed3978e576578" translate="yes" xml:space="preserve">
          <source>This annotation marks methods, classes, constants, and macros as deprecated.</source>
          <target state="translated">В этой аннотации методы,классы,константы и макросы обозначаются как устаревшие.</target>
        </trans-unit>
        <trans-unit id="4751c5f627c499e44007864f299d67e531169b3b" translate="yes" xml:space="preserve">
          <source>This annotation marks methods, classes, constants, and macros as experimental.</source>
          <target state="translated">Эта аннотация отмечает методы,классы,константы и макросы как экспериментальные.</target>
        </trans-unit>
        <trans-unit id="a59ff08fc13601d64759154db5c0018630125c45" translate="yes" xml:space="preserve">
          <source>This annotations marks methods, classes, constants, and macros as deprecated.</source>
          <target state="translated">Эти аннотации отмечают методы,классы,константы и макросы как устаревшие.</target>
        </trans-unit>
        <trans-unit id="81bec1181a948a798dc2a1e99836a1c9b7bcc142" translate="yes" xml:space="preserve">
          <source>This appends this char's bytes as encoded by UTF-8 to the given &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Это добавляет байты этого символа в кодировке UTF-8 к данному &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="da0f7f0a8e3f8df5455b6557aee9dc259a631d6a" translate="yes" xml:space="preserve">
          <source>This backend is not to be used explicitly. It is used by &lt;code&gt;&lt;a href=&quot;builder&quot;&gt;Log::Builder&lt;/a&gt;&lt;/code&gt; configuration to allow a given source to emit to multiple backends.</source>
          <target state="translated">Этот бэкэнд не должен использоваться явно. Он используется конфигурацией &lt;code&gt;&lt;a href=&quot;builder&quot;&gt;Log::Builder&lt;/a&gt;&lt;/code&gt; чтобы разрешить заданному источнику отправлять сообщения в несколько бэкэндов.</target>
        </trans-unit>
        <trans-unit id="248796d8d9934bbe14e20f2b2504914ba28d35bf" translate="yes" xml:space="preserve">
          <source>This builder is similar to &lt;code&gt;&lt;a href=&quot;../builder&quot;&gt;YAML::Builder&lt;/a&gt;&lt;/code&gt;, but instead of directly emitting the output to an IO it builds a YAML document tree in memory.</source>
          <target state="translated">Этот конструктор похож на &lt;code&gt;&lt;a href=&quot;../builder&quot;&gt;YAML::Builder&lt;/a&gt;&lt;/code&gt; , но вместо непосредственного вывода вывода в IO он строит дерево документов YAML в памяти.</target>
        </trans-unit>
        <trans-unit id="d2fa87d3879858b4853188bf95255ef603ec97a9" translate="yes" xml:space="preserve">
          <source>This can also be used to give shorter, nicer names to C functions, as these tend to be long and are usually prefixed with the library name.</source>
          <target state="translated">Это также может быть использовано для того,чтобы дать более короткие и красивые имена функциям C,так как они,как правило,длинные и,как правило,имеют префикс с именем библиотеки.</target>
        </trans-unit>
        <trans-unit id="507eacbc1bf0d16243a0bb3a476918e772e63734" translate="yes" xml:space="preserve">
          <source>This can be circumvented by assigning the value to a new local variable:</source>
          <target state="translated">Это можно обойти,присвоив значение новой локальной переменной:</target>
        </trans-unit>
        <trans-unit id="1f2bc8c72bc0aa46c1e0d9852985b434e6d7d9a8" translate="yes" xml:space="preserve">
          <source>This can be found at &lt;code&gt;https://github.com/&amp;lt;YOUR-GITHUB-NAME&amp;gt;/&amp;lt;YOUR-REPOSITORY-NAME&amp;gt;/releases&lt;/code&gt;</source>
          <target state="translated">Это можно найти по адресу &lt;code&gt;https://github.com/&amp;lt;YOUR-GITHUB-NAME&amp;gt;/&amp;lt;YOUR-REPOSITORY-NAME&amp;gt;/releases&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ffd27003f6f34584a3555328bd566670a8fde55d" translate="yes" xml:space="preserve">
          <source>This can be mitigated by using the nilable version of the above: $N?, (e.g., $1? $2?, $3?, ...). Changing the above to use &lt;code&gt;$2?&lt;/code&gt; instead of &lt;code&gt;$2&lt;/code&gt; would return &lt;code&gt;nil&lt;/code&gt;. &lt;code&gt;$2?.nil?&lt;/code&gt; would return &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Это может быть смягчено с помощью нильв версии выше: $ N ?, (например, $ 1? $ 2 ?, $ 3 ?, ...). Менять вышеперечисленное на &lt;code&gt;$2?&lt;/code&gt; вместо 2 &lt;code&gt;$2&lt;/code&gt; вернул бы &lt;code&gt;nil&lt;/code&gt; . &lt;code&gt;$2?.nil?&lt;/code&gt; вернул бы &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="12b21e5f6bdac9d403b7334eaf4f7413aa131f10" translate="yes" xml:space="preserve">
          <source>This can be used either to stub out method bodies, or when the method is not implemented on the current platform.</source>
          <target state="translated">Это может быть использовано как для сбрасывания тел метода,так и в случае,когда метод не реализован на текущей платформе.</target>
        </trans-unit>
        <trans-unit id="1f0e0dd5e017f72f1e84e12688991f21509576ec" translate="yes" xml:space="preserve">
          <source>This can be used to create efficient formatters:</source>
          <target state="translated">Это может быть использовано для создания эффективных форматоров:</target>
        </trans-unit>
        <trans-unit id="290297a08de042185c1c84c038c10066109d7785" translate="yes" xml:space="preserve">
          <source>This can be used to prevent many memory allocations when each slice of interest is to be used in a read-only fashion.</source>
          <target state="translated">Это может быть использовано для предотвращения многих распределений памяти,когда каждый интересующий фрагмент должен быть использован только для чтения.</target>
        </trans-unit>
        <trans-unit id="cb50edfa23bcef6f6011e63d4071b8d122b296f0" translate="yes" xml:space="preserve">
          <source>This can sometimes be useful to avoid repetitive code by deliberately reading/writing local variables, but can also overwrite local variables by mistake. To avoid this, fresh variables can be declared with &lt;code&gt;%name&lt;/code&gt;:</source>
          <target state="translated">Иногда это может быть полезно, чтобы избежать повторяющегося кода путем преднамеренного чтения / записи локальных переменных, но может также перезаписать локальные переменные по ошибке. Чтобы избежать этого, свежие переменные могут быть объявлены с &lt;code&gt;%name&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c74e7cb6f57fd33f489fc0dd5d3e1634927b4408" translate="yes" xml:space="preserve">
          <source>This capture will even work if there are currently no backends configured, effectively adding a temporary backend.</source>
          <target state="translated">Этот снимок даже будет работать,если на данный момент нет настроенных бэкэндов,фактически добавляя временный бэкэнд.</target>
        </trans-unit>
        <trans-unit id="9d0016fb953e5977cad8c4754588413f0a3ed185" translate="yes" xml:space="preserve">
          <source>This class allows you to consume JSON on demand, token by token.</source>
          <target state="translated">Этот класс позволяет потреблять JSON по требованию,токен за токеном.</target>
        </trans-unit>
        <trans-unit id="fddc331d6ec149095268659cb395c5d85a698137" translate="yes" xml:space="preserve">
          <source>This class also provides methods to build authorize URIs and get access tokens with different methods, as specified by &lt;a href=&quot;https://tools.ietf.org/html/rfc6749&quot;&gt;RFC 6749&lt;/a&gt;.</source>
          <target state="translated">Этот класс также предоставляет методы для создания URI авторизации и получения маркеров доступа различными методами, как указано в &lt;a href=&quot;https://tools.ietf.org/html/rfc6749&quot;&gt;RFC 6749&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="51830efb40e10d23f3abf190c9ab320a6da39cdd" translate="yes" xml:space="preserve">
          <source>This class also provides methods to get request tokens, build authorize URIs and get access tokens, as specified by &lt;a href=&quot;https://tools.ietf.org/html/rfc5849&quot;&gt;RFC 5849&lt;/a&gt;.</source>
          <target state="translated">Этот класс также предоставляет методы для получения токенов запроса, создания URI авторизации и получения токенов доступа, как указано в &lt;a href=&quot;https://tools.ietf.org/html/rfc5849&quot;&gt;RFC 5849&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="005e91e2755cb7746b08c1fd6a1089edd3980f74" translate="yes" xml:space="preserve">
          <source>This class implements a pretty printing algorithm. It finds line breaks and nice indentations for grouped structure.</source>
          <target state="translated">В этом классе реализован красивый алгоритм печати.Он находит разрывы строк и красивые отступы для сгруппированной структуры.</target>
        </trans-unit>
        <trans-unit id="7b193332d3e7ac21a2ef720c48e8a13290f8da7e" translate="yes" xml:space="preserve">
          <source>This class is inherited by types like &lt;code&gt;&lt;a href=&quot;file&quot;&gt;File&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;socket&quot;&gt;Socket&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;io/memory&quot;&gt;IO::Memory&lt;/a&gt;&lt;/code&gt; and provides many useful methods for reading from and writing to an IO, like &lt;code&gt;&lt;a href=&quot;io#print(*objects:UNDERSCORE):Nil-instance-method&quot;&gt;#print&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;io#puts:Nil-instance-method&quot;&gt;#puts&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;io#gets(delimiter:Char,limit:Int,chomp=false):String?-instance-method&quot;&gt;#gets&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;io#printf(format_string,*args):Nil-instance-method&quot;&gt;#printf&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Этот класс наследуется такими типами, как &lt;code&gt;&lt;a href=&quot;file&quot;&gt;File&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;socket&quot;&gt;Socket&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;io/memory&quot;&gt;IO::Memory&lt;/a&gt;&lt;/code&gt; и предоставляет множество полезных методов для чтения и записи в IO, таких как &lt;code&gt;&lt;a href=&quot;io#print(*objects:UNDERSCORE):Nil-instance-method&quot;&gt;#print&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;io#puts:Nil-instance-method&quot;&gt;#puts&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;io#gets(delimiter:Char,limit:Int,chomp=false):String?-instance-method&quot;&gt;#gets&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;io#printf(format_string,*args):Nil-instance-method&quot;&gt;#printf&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cb43ad97c50ed3f8a3e7b1cb45900cadd876d9c6" translate="yes" xml:space="preserve">
          <source>This class is inherited by types like &lt;code&gt;&lt;a href=&quot;file&quot;&gt;File&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;socket&quot;&gt;Socket&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;io/memory&quot;&gt;IO::Memory&lt;/a&gt;&lt;/code&gt; and provides many useful methods for reading from and writing to an IO, like &lt;code&gt;&lt;a href=&quot;io#print(*objects:_):Nil-instance-method&quot;&gt;#print&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;io#puts:Nil-instance-method&quot;&gt;#puts&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;io#gets(delimiter:Char,limit:Int,chomp=false):String?-instance-method&quot;&gt;#gets&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;io#printf(format_string,*args):Nil-instance-method&quot;&gt;#printf&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Этот класс наследуется такими типами, как &lt;code&gt;&lt;a href=&quot;file&quot;&gt;File&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;socket&quot;&gt;Socket&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;io/memory&quot;&gt;IO::Memory&lt;/a&gt;&lt;/code&gt; и предоставляет множество полезных методов для чтения и записи в IO, например &lt;code&gt;&lt;a href=&quot;io#print(*objects:_):Nil-instance-method&quot;&gt;#print&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;io#puts:Nil-instance-method&quot;&gt;#puts&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;io#gets(delimiter:Char,limit:Int,chomp=false):String?-instance-method&quot;&gt;#gets&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;io#printf(format_string,*args):Nil-instance-method&quot;&gt;#printf&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="31bbc4cb995f23a911d22e5e5e2b913518e6c310" translate="yes" xml:space="preserve">
          <source>This class is the exception thrown when errno errors are encountered.</source>
          <target state="translated">Этот класс является исключением,брошенным при возникновении ошибок errno.</target>
        </trans-unit>
        <trans-unit id="5abeadb5bb3efabaad829e19c08976dd58b3d9fd" translate="yes" xml:space="preserve">
          <source>This class provides a number of methods for encoding and decoding strings using URL Encoding (also known as Percent Encoding) as defined in &lt;a href=&quot;https://www.ietf.org/rfc/rfc3986.txt&quot;&gt;RFC 3986&lt;/a&gt; as well as &lt;a href=&quot;https://url.spec.whatwg.org/#urlencoded-serializing&quot;&gt;&lt;code&gt;x-www-form-urlencoded&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Этот класс предоставляет ряд методов для кодирования и декодирования строк с использованием URL-кодирования (также известного как процентное кодирование), как определено в &lt;a href=&quot;https://www.ietf.org/rfc/rfc3986.txt&quot;&gt;RFC 3986,&lt;/a&gt; а также &lt;a href=&quot;https://url.spec.whatwg.org/#urlencoded-serializing&quot;&gt; &lt;code&gt;x-www-form-urlencoded&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="176d7dbe8031aa71aff24aca941ce1ab05a1d3d0" translate="yes" xml:space="preserve">
          <source>This class provides constructors for creating URI instances from their components or by parsing their string forms and methods for accessing the various components of an instance.</source>
          <target state="translated">Этот класс предоставляет конструкторы для создания экземпляров URI из своих компонентов или путем разбора их строковых форм и методов для доступа к различным компонентам экземпляра.</target>
        </trans-unit>
        <trans-unit id="82500e146b4ef44a1f1dda0397e58e0120ec75b0" translate="yes" xml:space="preserve">
          <source>This class represents a URI reference as defined by &lt;a href=&quot;https://www.ietf.org/rfc/rfc3986.txt&quot;&gt;RFC 3986: Uniform Resource Identifier (URI): Generic Syntax&lt;/a&gt;.</source>
          <target state="translated">Этот класс представляет ссылку на URI, как определено в &lt;a href=&quot;https://www.ietf.org/rfc/rfc3986.txt&quot;&gt;RFC 3986: универсальный идентификатор ресурса (URI): общий синтаксис&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d92467a1ebd54ee2626a8826007b25b0ab9f1b59" translate="yes" xml:space="preserve">
          <source>This class staples together two unidirectional &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;s to form a single, bidirectional &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Этот класс объединяет два однонаправленных &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; для формирования одного двунаправленного &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e73af425ad3a2ff6fa73d0afa1e584f684932012" translate="yes" xml:space="preserve">
          <source>This class wraps another &lt;code&gt;&lt;a href=&quot;../../socket/server&quot;&gt;::Socket::Server&lt;/a&gt;&lt;/code&gt; in an SSL layer.</source>
          <target state="translated">Этот класс оборачивает другой &lt;code&gt;&lt;a href=&quot;../../socket/server&quot;&gt;::Socket::Server&lt;/a&gt;&lt;/code&gt; в слой SSL.</target>
        </trans-unit>
        <trans-unit id="1776e307c121681e53f8c19a0a7a184cfe531a3e" translate="yes" xml:space="preserve">
          <source>This clock should be independent from discontinuous jumps in the system time, such as leap seconds, time zone adjustments or manual changes to the computer's clock.</source>
          <target state="translated">Эти часы должны быть независимы от прерывистых скачков системного времени,таких как прыжковые секунды,регулировка часового пояса или ручные изменения в часах компьютера.</target>
        </trans-unit>
        <trans-unit id="d28537f2d1d725c35f1636b8d0c2dfbe4ba0c293" translate="yes" xml:space="preserve">
          <source>This command will write &lt;code&gt;hello&lt;/code&gt; and subsequently delete all files and folders in the current working directory.</source>
          <target state="translated">Эта команда напишет &lt;code&gt;hello&lt;/code&gt; и впоследствии удалит все файлы и папки в текущем рабочем каталоге.</target>
        </trans-unit>
        <trans-unit id="e7ff54e18af98cd3ffdf3df24c6450032d8767e8" translate="yes" xml:space="preserve">
          <source>This constant is defined to be &quot;1970-01-01 00:00:00 UTC&quot;. Can be used to create a &lt;code&gt;&lt;a href=&quot;time/span&quot;&gt;Time::Span&lt;/a&gt;&lt;/code&gt; that represents an Unix Epoch time duration.</source>
          <target state="translated">Эта константа определена как &amp;laquo;1970-01-01 00:00:00 UTC&amp;raquo;. Может использоваться для создания &lt;code&gt;&lt;a href=&quot;time/span&quot;&gt;Time::Span&lt;/a&gt;&lt;/code&gt; , представляющего продолжительность времени Unix Epoch.</target>
        </trans-unit>
        <trans-unit id="a45bd7af59946b2a334031775a47a6e9a021531c" translate="yes" xml:space="preserve">
          <source>This constructor will &lt;em&gt;ignore&lt;/em&gt; any path or query segments in the URI as those will need to be passed to the client when a request is made.</source>
          <target state="translated">Этот конструктор будет &lt;em&gt;игнорировать&lt;/em&gt; любые пути или сегменты запроса в URI, так как они должны быть переданы клиенту при выполнении запроса.</target>
        </trans-unit>
        <trans-unit id="a3406bd6a5b767e93fac04fc21d6da07c89f17e6" translate="yes" xml:space="preserve">
          <source>This constructor will raise an exception if any scheme but HTTP or HTTPS is used.</source>
          <target state="translated">Этот конструктор поднимет исключение,если используется какая-либо схема,кроме HTTP или HTTPS.</target>
        </trans-unit>
        <trans-unit id="fd7237b6baa5ece029d338b82602580b42a87ed0" translate="yes" xml:space="preserve">
          <source>This covers two uses cases.</source>
          <target state="translated">Это касается двух случаев использования.</target>
        </trans-unit>
        <trans-unit id="d71e26587af83aa7ce2d4b43555f5703ec675c25" translate="yes" xml:space="preserve">
          <source>This creates a new instance with the same string representation but with &lt;code&gt;&lt;a href=&quot;path/kind#WINDOWS&quot;&gt;Kind::WINDOWS&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Это создает новый экземпляр с тем же строковым представлением, но с &lt;code&gt;&lt;a href=&quot;path/kind#WINDOWS&quot;&gt;Kind::WINDOWS&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="91f087610a2831cfacb8986f5510f43514a450a4" translate="yes" xml:space="preserve">
          <source>This creates two jobs. The first one is titled &quot;spec &amp;amp; format&quot; (you can use any name you like) and by default goes in the &quot;test&quot; stage of the pipeline. It just runs the array of commands in &lt;code&gt;script&lt;/code&gt; on a brand new instance of the docker container specified by &lt;code&gt;image&lt;/code&gt;. You'll probably want to lock that container to the version of crystal you're using (the one specified in your shard.yml) but for this example we'll just use the &lt;code&gt;latest&lt;/code&gt; tag.</source>
          <target state="translated">Это создает две рабочие места. Первый называется &amp;laquo;spec &amp;amp; format&amp;raquo; (вы можете использовать любое имя) и по умолчанию переходит в стадию &amp;laquo;test&amp;raquo; конвейера. Он просто запускает массив команд в &lt;code&gt;script&lt;/code&gt; на новом экземпляре контейнера докеров, указанном в &lt;code&gt;image&lt;/code&gt; . Вероятно, вы захотите заблокировать этот контейнер для используемой вами версии кристалла (той, которая указана в вашем shard.yml), но для этого примера мы просто будем использовать &lt;code&gt;latest&lt;/code&gt; тег.</target>
        </trans-unit>
        <trans-unit id="29b9aa4580cc6ed55353a8702da056f1635f9be3" translate="yes" xml:space="preserve">
          <source>This document tree can then be converted to YAML be invoking &lt;code&gt;to_yaml&lt;/code&gt; on the document object.</source>
          <target state="translated">Это дерево документа затем может быть преобразовано в YAML, вызывая &lt;code&gt;to_yaml&lt;/code&gt; для объекта документа.</target>
        </trans-unit>
        <trans-unit id="39154e3473a0dc991c568ac27b3f2440313ad34a" translate="yes" xml:space="preserve">
          <source>This ends up invoking &lt;code&gt;&lt;a href=&quot;object#to_s(io:IO):Nil-instance-method&quot;&gt;Object#to_s(IO)&lt;/a&gt;&lt;/code&gt; on each expression enclosed by &lt;code&gt;#{...}&lt;/code&gt;.</source>
          <target state="translated">В результате вызывается &lt;code&gt;&lt;a href=&quot;object#to_s(io:IO):Nil-instance-method&quot;&gt;Object#to_s(IO)&lt;/a&gt;&lt;/code&gt; для каждого выражения, заключенного в &lt;code&gt;#{...}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="060c58baa29e1fcb98dcf6a86e23ec4c882ea63c" translate="yes" xml:space="preserve">
          <source>This ends up invoking &lt;code&gt;object.to_io(self, format)&lt;/code&gt;, so any object defining a &lt;code&gt;to_io(io : &lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;, format : &lt;a href=&quot;io/byteformat&quot;&gt;IO::ByteFormat&lt;/a&gt; = &lt;a href=&quot;io/byteformat/systemendian&quot;&gt;IO::ByteFormat::SystemEndian&lt;/a&gt;)&lt;/code&gt; method can be written in this way.</source>
          <target state="translated">В результате вызывается &lt;code&gt;object.to_io(self, format)&lt;/code&gt; , поэтому любой объект, определяющий &lt;code&gt;to_io(io : &lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;, format : &lt;a href=&quot;io/byteformat&quot;&gt;IO::ByteFormat&lt;/a&gt; = &lt;a href=&quot;io/byteformat/systemendian&quot;&gt;IO::ByteFormat::SystemEndian&lt;/a&gt;)&lt;/code&gt; может быть записан таким образом.</target>
        </trans-unit>
        <trans-unit id="cb5dc44fe685bf23c6f2a42b59ae9f6d1d4af375" translate="yes" xml:space="preserve">
          <source>This ends up invoking &lt;code&gt;type.from_io(self, format)&lt;/code&gt;, so any type defining a &lt;code&gt;from_io(io : &lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;, format : &lt;a href=&quot;io/byteformat&quot;&gt;IO::ByteFormat&lt;/a&gt; = &lt;a href=&quot;io/byteformat/systemendian&quot;&gt;IO::ByteFormat::SystemEndian&lt;/a&gt;)&lt;/code&gt; method can be read in this way.</source>
          <target state="translated">В результате вызывается &lt;code&gt;type.from_io(self, format)&lt;/code&gt; , поэтому любой тип, определяющий &lt;code&gt;from_io(io : &lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;, format : &lt;a href=&quot;io/byteformat&quot;&gt;IO::ByteFormat&lt;/a&gt; = &lt;a href=&quot;io/byteformat/systemendian&quot;&gt;IO::ByteFormat::SystemEndian&lt;/a&gt;)&lt;/code&gt; может быть прочитан таким образом.</target>
        </trans-unit>
        <trans-unit id="848435bb3324ae976c11c3cb776d5fc697e9bd2d" translate="yes" xml:space="preserve">
          <source>This equates to the results from &lt;code&gt;&lt;a href=&quot;time#calendar_week:Tuple(Int32,Int32)-instance-method&quot;&gt;#calendar_week&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;time#day_of_week:Time::DayOfWeek-instance-method&quot;&gt;#day_of_week&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Это соответствует результатам от &lt;code&gt;&lt;a href=&quot;time#calendar_week:Tuple(Int32,Int32)-instance-method&quot;&gt;#calendar_week&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;time#day_of_week:Time::DayOfWeek-instance-method&quot;&gt;#day_of_week&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="afbaccbf56819a8b62afa62f6cd2562c851e8ae5" translate="yes" xml:space="preserve">
          <source>This essentially scaps off &lt;code&gt;nanoseconds&lt;/code&gt;.</source>
          <target state="translated">Это по существу отбрасывает &lt;code&gt;nanoseconds&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="721d4c9ca7c16a340c6aae88c2f31873c331a514" translate="yes" xml:space="preserve">
          <source>This evaluation applies to both interpolation and directives. As a result of this, macros cannot be commented out.</source>
          <target state="translated">Эта оценка относится как к интерполяции,так и к директивам.В результате этого макросы не могут быть прокомментированы.</target>
        </trans-unit>
        <trans-unit id="ffc1b3edbbf38b05a0ee3f094ab36d4fb3ce5295" translate="yes" xml:space="preserve">
          <source>This explanation should include a few examples along with subheadings.</source>
          <target state="translated">Это объяснение должно включать несколько примеров наряду с подзаголовками.</target>
        </trans-unit>
        <trans-unit id="8aa426b4a863c63113851317019c903a9b399921" translate="yes" xml:space="preserve">
          <source>This expression is also available in the &lt;a href=&quot;type_grammar&quot;&gt;type grammar&lt;/a&gt;.</source>
          <target state="translated">Это выражение также доступно в &lt;a href=&quot;type_grammar&quot;&gt;грамматике типа&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2b72baa812d61ece5decfb24ec25e9c34062d798" translate="yes" xml:space="preserve">
          <source>This extra rule is very convenient because it's very common to have &quot;constructor-like&quot; class methods in addition to &lt;code&gt;new&lt;/code&gt;.</source>
          <target state="translated">Это дополнительное правило очень удобно, потому что в дополнение к &lt;code&gt;new&lt;/code&gt; очень распространено использование методов класса &amp;laquo;конструктор&amp;raquo; .</target>
        </trans-unit>
        <trans-unit id="88a8efe3fa756c00e20ace6147aa9004dfe45bf9" translate="yes" xml:space="preserve">
          <source>This file is used to require &lt;code&gt;spec&lt;/code&gt; and other includes like code from the project needed for every spec file. This is also a good place to define global helper methods that make writing specs easier and avoid code duplication.</source>
          <target state="translated">Этот файл используется для запроса &lt;code&gt;spec&lt;/code&gt; и других включений, таких как код проекта, необходимый для каждого спецификационного файла. Это также хорошее место для определения глобальных вспомогательных методов, которые облегчают написание спецификаций и позволяют избежать дублирования кода.</target>
        </trans-unit>
        <trans-unit id="c68257bbe42e4b6932347e56617681dc1006cd33" translate="yes" xml:space="preserve">
          <source>This form allows you to specify the return type and to check it against the proc's body.</source>
          <target state="translated">Эта форма позволяет указать тип возврата и сверить его с телом proc.</target>
        </trans-unit>
        <trans-unit id="685485e2edc62b0420c3e833489e240b8333d814" translate="yes" xml:space="preserve">
          <source>This generates the following output showing the mean iterations per second, the mean times per iteration, the standard deviation relative to the mean, and a comparison:</source>
          <target state="translated">В результате получается следующий вывод,показывающий средние значения итераций в секунду,среднее время за одну итерацию,стандартное отклонение относительно среднего и сравнение:</target>
        </trans-unit>
        <trans-unit id="cef42efc62c5a598403b41b6864adca576c540ce" translate="yes" xml:space="preserve">
          <source>This generates the following output:</source>
          <target state="translated">При этом генерируется следующий вывод:</target>
        </trans-unit>
        <trans-unit id="8563101441b8caea1f946cd2dcc00e0fff6fd76e" translate="yes" xml:space="preserve">
          <source>This guide presents the api of crystal-db, the sql commands might need to be adapted for the concrete driver due to differences between postgres, mysql and sqlite.</source>
          <target state="translated">В этом руководстве представлены api кристалла-db,команды sql,возможно,придется адаптировать для конкретного водителя из-за различий между postgres,mysql и sqlite.</target>
        </trans-unit>
        <trans-unit id="70c26d06eed479af9c1fb47b4dd6229529ea3f80" translate="yes" xml:space="preserve">
          <source>This handler also logs the exceptions to the specified logger or the logger for the source &quot;http.server&quot; by default.</source>
          <target state="translated">Этот обработчик также регистрирует исключения из указанного логгера или логгера для исходного &quot;http.server&quot; по умолчанию.</target>
        </trans-unit>
        <trans-unit id="96ed9d68319f2b0bd7158dce5969429c473b2c10" translate="yes" xml:space="preserve">
          <source>This implementation of Bcrypt is currently 50% slower than pure C solutions, so keep this in mind when selecting your cost. It may be wise to test with Ruby's &lt;a href=&quot;https://github.com/codahale/bcrypt-ruby&quot;&gt;bcrypt gem&lt;/a&gt; which is a binding to OpenBSD's implementation.</source>
          <target state="translated">Эта реализация Bcrypt в настоящее время на 50% медленнее, чем решения на чистом C, поэтому имейте это в виду при выборе стоимости. Может быть целесообразно протестировать &lt;a href=&quot;https://github.com/codahale/bcrypt-ruby&quot;&gt;гем&lt;/a&gt; Ruby bcrypt, который является обязательным для реализации OpenBSD.</target>
        </trans-unit>
        <trans-unit id="67d51a88c6db05098f9b5a707ccc79ae0d34eaf5" translate="yes" xml:space="preserve">
          <source>This implementation supports both IPv4 and IPv6 addresses. For IPv4 addresses you must use &lt;code&gt;&lt;a href=&quot;socket/family#INET&quot;&gt;Socket::Family::INET&lt;/a&gt;&lt;/code&gt; family (default) or &lt;code&gt;&lt;a href=&quot;socket/family#INET6&quot;&gt;Socket::Family::INET6&lt;/a&gt;&lt;/code&gt; for IPv6 # addresses.</source>
          <target state="translated">Эта реализация поддерживает адреса IPv4 и IPv6. Для адресов IPv4 вы должны использовать &lt;code&gt;&lt;a href=&quot;socket/family#INET&quot;&gt;Socket::Family::INET&lt;/a&gt;&lt;/code&gt; (по умолчанию) или &lt;code&gt;&lt;a href=&quot;socket/family#INET6&quot;&gt;Socket::Family::INET6&lt;/a&gt;&lt;/code&gt; для адресов IPv6 #.</target>
        </trans-unit>
        <trans-unit id="e6ce8e3e44aae5b88d2909e4c16dca95dba30407" translate="yes" xml:space="preserve">
          <source>This is &lt;a href=&quot;unsafe&quot;&gt;unsafe&lt;/a&gt; code and is almost always used in low-level code for declaring uninitialized &lt;a href=&quot;http://crystal-lang.org/api/StaticArray.html&quot;&gt;StaticArray&lt;/a&gt; buffers without a performance penalty:</source>
          <target state="translated">Это &lt;a href=&quot;unsafe&quot;&gt;небезопасный&lt;/a&gt; код и почти всегда используется в низкоуровневом коде для объявления неинициализированных буферов &lt;a href=&quot;http://crystal-lang.org/api/StaticArray.html&quot;&gt;StaticArray&lt;/a&gt; без потери производительности:</target>
        </trans-unit>
        <trans-unit id="632a34c3007c26c97734bd84e5e0be3f30f8d0e3" translate="yes" xml:space="preserve">
          <source>This is &lt;code&gt;Int#times&lt;/code&gt; definition:</source>
          <target state="translated">Это определение &lt;code&gt;Int#times&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c668fa989e55efeeecfc94f0c60618b6423f1d4d" translate="yes" xml:space="preserve">
          <source>This is a convenience method to allow invoking &lt;code&gt;&lt;a href=&quot;json#mapping(**_properties_)-macro&quot;&gt;JSON.mapping&lt;/a&gt;&lt;/code&gt; with named arguments instead of with a hash/named-tuple literal.</source>
          <target state="translated">Это удобный метод, позволяющий &lt;code&gt;&lt;a href=&quot;json#mapping(**_properties_)-macro&quot;&gt;JSON.mapping&lt;/a&gt;&lt;/code&gt; с именованными аргументами вместо литерала hash / named-tuple.</target>
        </trans-unit>
        <trans-unit id="6ef92f89c3db410d172018d00077e09a212a4874" translate="yes" xml:space="preserve">
          <source>This is a convenience method to allow invoking &lt;code&gt;&lt;a href=&quot;yaml#mapping(**_properties_)-macro&quot;&gt;YAML.mapping&lt;/a&gt;&lt;/code&gt; with named arguments instead of with a hash/named-tuple literal.</source>
          <target state="translated">Это удобный метод, позволяющий &lt;code&gt;&lt;a href=&quot;yaml#mapping(**_properties_)-macro&quot;&gt;YAML.mapping&lt;/a&gt;&lt;/code&gt; с именованными аргументами вместо литерала hash / named-tuple.</target>
        </trans-unit>
        <trans-unit id="30d559b41aae00e4148c999f88a873b235e4915a" translate="yes" xml:space="preserve">
          <source>This is a low-level primitive and only useful if a C API needs to directly interface with the data layout of a Crystal type.</source>
          <target state="translated">Это низкоуровневый примитив,и он полезен только в том случае,если C API должен напрямую взаимодействовать с компоновкой данных типа Crystal.</target>
        </trans-unit>
        <trans-unit id="0b974d586221716666c5b40df54db4b1a11dfcda" translate="yes" xml:space="preserve">
          <source>This is a push mirror and that means changes will only propagate one way. So be sure to let potential collaborators know that pull requests and issues should be submitted to your GitLab project.</source>
          <target state="translated">Это зеркало толкания,и это означает,что изменения будут распространяться только в одном направлении.Поэтому обязательно сообщите потенциальным сотрудникам,что в проект GitLab следует отправлять запросы и вопросы.</target>
        </trans-unit>
        <trans-unit id="73ddca3219f717b051a6ded485d83b6fa803e12f" translate="yes" xml:space="preserve">
          <source>This is also compatible to &lt;a href=&quot;https://tools.ietf.org/html/rfc882&quot;&gt;RFC 882&lt;/a&gt; and &lt;a href=&quot;https://tools.ietf.org/html/rfc1123#page-55&quot;&gt;RFC 1123&lt;/a&gt;.</source>
          <target state="translated">Это также совместимо с &lt;a href=&quot;https://tools.ietf.org/html/rfc882&quot;&gt;RFC 882&lt;/a&gt; и &lt;a href=&quot;https://tools.ietf.org/html/rfc1123#page-55&quot;&gt;RFC 1123&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8eab074e1c7ffcac7682224edeb76f35f174906a" translate="yes" xml:space="preserve">
          <source>This is because a &lt;code&gt;&lt;a href=&quot;reference&quot;&gt;Reference&lt;/a&gt;&lt;/code&gt;'s memory is allocated on the heap and a pointer to it is passed around. The size of a class on the heap can be determined using &lt;code&gt;&lt;a href=&quot;toplevel#instance_sizeof(type:Class):Int32-class-method&quot;&gt;#instance_sizeof&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Это потому, что память &lt;code&gt;&lt;a href=&quot;reference&quot;&gt;Reference&lt;/a&gt;&lt;/code&gt; выделяется в куче, и указатель на нее передается. Размер класса в куче можно определить с помощью &lt;code&gt;&lt;a href=&quot;toplevel#instance_sizeof(type:Class):Int32-class-method&quot;&gt;#instance_sizeof&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c68376c0667e18f7a382b86a544065d7e53d580b" translate="yes" xml:space="preserve">
          <source>This is because a Reference's memory is allocated on the heap and a pointer to it is passed around. To get the effective size of a class, use &lt;a href=&quot;instance_sizeof&quot;&gt;instance_sizeof&lt;/a&gt;.</source>
          <target state="translated">Это связано с тем, что память ссылки размещается в куче, а указатель на нее передается. Чтобы получить эффективный размер класса, используйте &lt;a href=&quot;instance_sizeof&quot;&gt;instance_sizeof&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4eca2fa8fad65eb1231ee4c3f04f7c430eebc7ac" translate="yes" xml:space="preserve">
          <source>This is because in the first case all spawned fibers refer to the same local variable, while in the second example copies of &lt;em&gt;i&lt;/em&gt; are passed to a &lt;code&gt;&lt;a href=&quot;proc&quot;&gt;Proc&lt;/a&gt;&lt;/code&gt; that eventually invokes the call.</source>
          <target state="translated">Это связано с тем, что в первом случае все порожденные волокна ссылаются на одну и ту же локальную переменную, а во втором примере копии &lt;em&gt;i&lt;/em&gt; передаются в &lt;code&gt;&lt;a href=&quot;proc&quot;&gt;Proc&lt;/a&gt;&lt;/code&gt; , который в конечном итоге вызывает вызов.</target>
        </trans-unit>
        <trans-unit id="fcd7f3ba18ba9e17570b1b0e53cc1b5e8d8b9512" translate="yes" xml:space="preserve">
          <source>This is because the captured block could have been potentially stored in a class or instance variable and invoked in a separate thread in between the instructions. The compiler doesn't do an exhaustive analysis of this: it just assumes that if a variable is captured by a proc, the time of that proc invocation is unknown.</source>
          <target state="translated">Это связано с тем,что захваченный блок мог потенциально храниться в переменной класса или экземпляра и вызываться в отдельном потоке между инструкциями.Компилятор не делает исчерпывающего анализа:он просто предполагает,что если переменная перехвачена proc,то время вызова этой proc неизвестно.</target>
        </trans-unit>
        <trans-unit id="fd54023c6204f1d90016305f2a3d17147b84f8e2" translate="yes" xml:space="preserve">
          <source>This is because when you invoke &lt;code&gt;add&lt;/code&gt;, it is instantiated with the types of the arguments: every method invocation with a different type combination results in a different method instantiation.</source>
          <target state="translated">Это потому, что когда вы вызываете &lt;code&gt;add&lt;/code&gt; , он создается с типами аргументов: каждый вызов метода с другой комбинацией типов приводит к созданию другого экземпляра метода.</target>
        </trans-unit>
        <trans-unit id="af7abaf72beea84936719d7cea52eba04777347e" translate="yes" xml:space="preserve">
          <source>This is better understood with an example:</source>
          <target state="translated">Это лучше понять на примере:</target>
        </trans-unit>
        <trans-unit id="b18c7290adfec84504b1a4877c69b353776ca115" translate="yes" xml:space="preserve">
          <source>This is done automatically when &lt;code&gt;crystal tool format&lt;/code&gt; is invoked, which will automatically format all &lt;code&gt;.cr&lt;/code&gt; files in current directory.</source>
          <target state="translated">Это делается автоматически при вызове &lt;code&gt;crystal tool format&lt;/code&gt; &lt;code&gt;.cr&lt;/code&gt; , который автоматически отформатирует все файлы .cr в текущем каталоге.</target>
        </trans-unit>
        <trans-unit id="e59cd3a6458de6c686b54b8d0400a89e9b601941" translate="yes" xml:space="preserve">
          <source>This is equivalent to &lt;code&gt;sleep 0.seconds&lt;/code&gt;. It gives the scheduler an option to interrupt the current fiber's execution. If no other fibers are ready to be resumed, it immediately resumes the current fiber.</source>
          <target state="translated">Это эквивалентно 0 &lt;code&gt;sleep 0.seconds&lt;/code&gt; . Это дает планировщику возможность прервать выполнение текущего волокна. Если другие волокна не готовы к возобновлению, немедленно возобновляется текущее волокно.</target>
        </trans-unit>
        <trans-unit id="91073a8ebd255c745f3396ef35b162c27b3bb870" translate="yes" xml:space="preserve">
          <source>This is equivalent to creating a &lt;code&gt;&lt;a href=&quot;time/span&quot;&gt;Time::Span&lt;/a&gt;&lt;/code&gt; from the time-of-day fields:</source>
          <target state="translated">Это эквивалентно созданию &lt;code&gt;&lt;a href=&quot;time/span&quot;&gt;Time::Span&lt;/a&gt;&lt;/code&gt; из полей времени дня:</target>
        </trans-unit>
        <trans-unit id="bba1b6acebcc63f3157a11d36c9e5fc224d8357e" translate="yes" xml:space="preserve">
          <source>This is essentially a &lt;code&gt;&lt;a href=&quot;methods#before_all(&amp;amp;block)-instance-method&quot;&gt;#before_all&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;methods#after_all(&amp;amp;block)-instance-method&quot;&gt;#after_all&lt;/a&gt;&lt;/code&gt; hook combined into one. It is useful for example when setup and teardown steps need shared state.</source>
          <target state="translated">По сути, это &lt;code&gt;&lt;a href=&quot;methods#before_all(&amp;amp;block)-instance-method&quot;&gt;#before_all&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;methods#after_all(&amp;amp;block)-instance-method&quot;&gt;#after_all&lt;/a&gt;&lt;/code&gt; , объединенный в один. Это полезно, например, когда на этапах настройки и демонтажа требуется общее состояние.</target>
        </trans-unit>
        <trans-unit id="63941e9cd5a357b71dbeada9aac198d75d33cb45" translate="yes" xml:space="preserve">
          <source>This is essentially a &lt;code&gt;&lt;a href=&quot;methods#before_each(&amp;amp;block)-instance-method&quot;&gt;#before_each&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;methods#after_each(&amp;amp;block)-instance-method&quot;&gt;#after_each&lt;/a&gt;&lt;/code&gt; hook combined into one. It is useful for example when setup and teardown steps need shared state.</source>
          <target state="translated">По сути, это &lt;code&gt;&lt;a href=&quot;methods#before_each(&amp;amp;block)-instance-method&quot;&gt;#before_each&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;methods#after_each(&amp;amp;block)-instance-method&quot;&gt;#after_each&lt;/a&gt;&lt;/code&gt; , объединенный в один. Это полезно, например, когда на этапах настройки и демонтажа требуется общее состояние.</target>
        </trans-unit>
        <trans-unit id="dfca88e8493ed6d6c8920bcc9d7e06f379cc0d79" translate="yes" xml:space="preserve">
          <source>This is everything you can know about an object: its type and whether it responds to some method.</source>
          <target state="translated">Это все,что вы можете знать об объекте:его тип и реагирует ли он на какой-то метод.</target>
        </trans-unit>
        <trans-unit id="664081d7cf972a751025c22c5dc7255042548b08" translate="yes" xml:space="preserve">
          <source>This is for example useful for deconstructing union types:</source>
          <target state="translated">Это,например,полезно при деконструкции типов соединений:</target>
        </trans-unit>
        <trans-unit id="79f0d29001d1769f206501b875fe2a4be959d263" translate="yes" xml:space="preserve">
          <source>This is implemented with &lt;code&gt;&lt;a href=&quot;http/client#before_request(&amp;amp;callback:HTTP::Request-%3E)-instance-method&quot;&gt;HTTP::Client#before_request&lt;/a&gt;&lt;/code&gt; to add an authorization header to every request.</source>
          <target state="translated">Это реализовано с помощью &lt;code&gt;&lt;a href=&quot;http/client#before_request(&amp;amp;callback:HTTP::Request-%3E)-instance-method&quot;&gt;HTTP::Client#before_request&lt;/a&gt;&lt;/code&gt; для добавления заголовка авторизации к каждому запросу.</target>
        </trans-unit>
        <trans-unit id="93c98b3533b696f4b265f2ddae4194beb8d972a7" translate="yes" xml:space="preserve">
          <source>This is just one type (Array) and one operation (assignment), the logic of the above will be applied differently for other types and assignments, in general &lt;a href=&quot;https://en.wikipedia.org/wiki/Covariance_and_contravariance_%28computer_science%29&quot;&gt;Covariance and Contravariance&lt;/a&gt; is not fully supported.</source>
          <target state="translated">Это всего лишь один тип (массив) и одна операция (назначение), логика выше будет применяться по-разному для других типов и назначений, в общем случае &lt;a href=&quot;https://en.wikipedia.org/wiki/Covariance_and_contravariance_%28computer_science%29&quot;&gt;ковариация и контравариантность&lt;/a&gt; поддерживаются не полностью.</target>
        </trans-unit>
        <trans-unit id="ce0c6cf5aa7169f819d2d736ee90776ca387cefc" translate="yes" xml:space="preserve">
          <source>This is mostly useful with local variables that change at iterations. This doesn't happen with block arguments. For example, this works as expected:</source>
          <target state="translated">Это особенно полезно при работе с локальными переменными,которые изменяются при итерациях.Это не происходит с блочными аргументами.Например,это работает,как и ожидалось:</target>
        </trans-unit>
        <trans-unit id="5a0992e1a80d3e4aab5a27e49eddb6a4c8048563" translate="yes" xml:space="preserve">
          <source>This is particularly useful if a number can have a wide value range and the &lt;em&gt;exact&lt;/em&gt; value is less relevant.</source>
          <target state="translated">Это особенно полезно, если число может иметь широкий диапазон значений, а &lt;em&gt;точное&lt;/em&gt; значение менее актуально.</target>
        </trans-unit>
        <trans-unit id="5364ea4cf5554cdeb55193ac67c0fb4222bb4698" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;code&gt;&lt;a href=&quot;time#parse_rfc3339(time:String)-class-method&quot;&gt;.parse_rfc3339&lt;/a&gt;&lt;/code&gt; but RFC 3339 defines a more strict format. In ISO 8601 for examples, field delimiters (&lt;code&gt;&lt;a href=&quot;time#-(other:Time):Time::Span-instance-method&quot;&gt;#-&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;:&lt;/code&gt;) are optional.</source>
          <target state="translated">Это похоже на &lt;code&gt;&lt;a href=&quot;time#parse_rfc3339(time:String)-class-method&quot;&gt;.parse_rfc3339&lt;/a&gt;&lt;/code&gt; , но RFC 3339 определяет более строгий формат. Например, в стандарте ISO 8601 разделители полей ( &lt;code&gt;&lt;a href=&quot;time#-(other:Time):Time::Span-instance-method&quot;&gt;#-&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;:&lt;/code&gt; ) являются необязательными.</target>
        </trans-unit>
        <trans-unit id="52223d3b04e04f466e8a8705f6a156d0834f52fc" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;code&gt;&lt;a href=&quot;time#parse_rfc3339(time:String)-class-method&quot;&gt;.parse_rfc3339&lt;/a&gt;&lt;/code&gt; but RFC 3339 defines a more strict format. In ISO 8601 for examples, field delimiters (&lt;code&gt;&lt;a href=&quot;time#-(span:Time::MonthSpan):Time-instance-method&quot;&gt;#-&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;:&lt;/code&gt;) are optional.</source>
          <target state="translated">Это похоже на &lt;code&gt;&lt;a href=&quot;time#parse_rfc3339(time:String)-class-method&quot;&gt;.parse_rfc3339&lt;/a&gt;&lt;/code&gt; , но RFC 3339 определяет более строгий формат. В ISO 8601, например, разделители полей ( &lt;code&gt;&lt;a href=&quot;time#-(span:Time::MonthSpan):Time-instance-method&quot;&gt;#-&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;:&lt;/code&gt; )не являются обязательными.</target>
        </trans-unit>
        <trans-unit id="250bf5a8b00d1f7cd791eee40b73a5cf04cfc0a2" translate="yes" xml:space="preserve">
          <source>This is the &lt;code&gt;&lt;a href=&quot;zone#UTC&quot;&gt;UTC&lt;/a&gt;&lt;/code&gt; time zone with offset &lt;code&gt;+00:00&lt;/code&gt;.</source>
          <target state="translated">Это часовой пояс &lt;code&gt;&lt;a href=&quot;zone#UTC&quot;&gt;UTC&lt;/a&gt;&lt;/code&gt; со смещением &lt;code&gt;+00:00&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8048727c8234993d8a5603cf23d4eb243123a864" translate="yes" xml:space="preserve">
          <source>This is the base class of all AST nodes. This methods are available to all AST nodes.</source>
          <target state="translated">Это базовый класс всех узлов АСТ.Эти методы доступны для всех узлов АСТ.</target>
        </trans-unit>
        <trans-unit id="98b840bba8d77d2469d9697df6f696e784ce6c1c" translate="yes" xml:space="preserve">
          <source>This is the formal specification of method and call arguments.</source>
          <target state="translated">Это формальная спецификация метода и аргументов вызова.</target>
        </trans-unit>
        <trans-unit id="3a96f07459b7208207e134ed71189ac50df50dea" translate="yes" xml:space="preserve">
          <source>This is the language reference for the Crystal programming language.</source>
          <target state="translated">Это ссылка на язык программирования Crystal.</target>
        </trans-unit>
        <trans-unit id="545dbbaa58655b1b054f6a7d8c72f5c89bb6c9d0" translate="yes" xml:space="preserve">
          <source>This is the only unsafe type in Crystal. If you are using a pointer, you are writing unsafe code because a pointer doesn't know where it's pointing to nor how much memory starting from it is valid. However, pointers make it possible to interface with C and to implement efficient data structures. For example, both &lt;code&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; are implemented using pointers.</source>
          <target state="translated">Это единственный небезопасный тип в Crystal. Если вы используете указатель, вы пишете небезопасный код, потому что указатель не знает, куда он указывает, и сколько памяти, начиная с него, является действительным. Однако указатели позволяют взаимодействовать с C и реализовывать эффективные структуры данных. Например, &lt;code&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; реализованы с использованием указателей.</target>
        </trans-unit>
        <trans-unit id="4515edf50a067229e0e7eda1b93dee9d3077b41c" translate="yes" xml:space="preserve">
          <source>This is the same as using &lt;code&gt;as&lt;/code&gt;, but allows the class to be passed around as an argument. See the &lt;a href=&quot;../../docs/syntax_and_semantics/as&quot;&gt;documentation on as&lt;/a&gt; for more information.</source>
          <target state="translated">Это то же самое, что и использование &lt;code&gt;as&lt;/code&gt; , но позволяет передавать класс в качестве аргумента. См. &lt;a href=&quot;../../docs/syntax_and_semantics/as&quot;&gt;Документацию&lt;/a&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="fc2db5d64c33ec2d824900edde2cb9c586a6ad28" translate="yes" xml:space="preserve">
          <source>This is then safe to pass as part of the command when using &lt;code&gt;shell: true&lt;/code&gt; or &lt;code&gt;system()&lt;/code&gt;.</source>
          <target state="translated">Затем это можно безопасно передать как часть команды при использовании &lt;code&gt;shell: true&lt;/code&gt; или &lt;code&gt;system()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eea165f9532b9c9354b0282961da26042d18ca1c" translate="yes" xml:space="preserve">
          <source>This is then safe to pass to a POSIX shell.</source>
          <target state="translated">Тогда это можно безопасно передать в оболочку POSIX.</target>
        </trans-unit>
        <trans-unit id="39052dac05dacfea2b321976622c6881f8fee6d2" translate="yes" xml:space="preserve">
          <source>This is useful for exposing part of an underlying stream to a client.</source>
          <target state="translated">Это полезно для передачи части основного потока клиенту.</target>
        </trans-unit>
        <trans-unit id="40d1de068db96b91cef4b055764a503963b9cf23" translate="yes" xml:space="preserve">
          <source>This is useful for two reasons:</source>
          <target state="translated">Это полезно по двум причинам:</target>
        </trans-unit>
        <trans-unit id="d89f4023c0e9b9c432dcbf2c74989c25293766ca" translate="yes" xml:space="preserve">
          <source>This is very convenient in &lt;code&gt;case&lt;/code&gt; expressions:</source>
          <target state="translated">Это очень удобно в &lt;code&gt;case&lt;/code&gt; выражений:</target>
        </trans-unit>
        <trans-unit id="0a50b57903b64f2c7c8a3d039dbee7449f283aac" translate="yes" xml:space="preserve">
          <source>This is very useful for defining wrappers of C types without having to explicitly transform them to their wrapped values.</source>
          <target state="translated">Это очень полезно для определения оберток типов С без необходимости явного преобразования их в оберточные значения.</target>
        </trans-unit>
        <trans-unit id="4ff9edea32baf1a3bdb16cc51fbf9af7d8477d4c" translate="yes" xml:space="preserve">
          <source>This list is sorted by precedence, so upper entries bind stronger than lower ones.</source>
          <target state="translated">Этот список отсортирован по старшинству,поэтому верхние записи привязываются сильнее нижних.</target>
        </trans-unit>
        <trans-unit id="64848e0279f58a2eb76664c7ab73ea64be03b44b" translate="yes" xml:space="preserve">
          <source>This list represents version 5.4 of the intermediate configuration available at https://ssl-config.mozilla.org/guidelines/5.4.json.</source>
          <target state="translated">Этот список представляет собой версию 5.4 промежуточной конфигурации,доступной по адресу https://ssl-config.mozilla.org/guidelines/5.4.json.</target>
        </trans-unit>
        <trans-unit id="aaf9e6c6eddc2b3bf36927462d1a0da634ae14d8" translate="yes" xml:space="preserve">
          <source>This list represents version 5.4 of the modern configuration available at https://ssl-config.mozilla.org/guidelines/5.4.json.</source>
          <target state="translated">Этот список представляет собой версию 5.4 современной конфигурации,доступной по адресу https://ssl-config.mozilla.org/guidelines/5.4.json.</target>
        </trans-unit>
        <trans-unit id="4457be54a4d18cef857e53c4a4056932ba0e1e3d" translate="yes" xml:space="preserve">
          <source>This list represents version 5.4 of the old configuration available at https://ssl-config.mozilla.org/guidelines/5.4.json.</source>
          <target state="translated">Этот список представляет собой версию 5.4 старой конфигурации,доступной по адресу https://ssl-config.mozilla.org/guidelines/5.4.json.</target>
        </trans-unit>
        <trans-unit id="cf97a41abfcb211c83d6d5b49f2e738fde8a0d1a" translate="yes" xml:space="preserve">
          <source>This literal can be used with any type as long as it has an argless constructor and responds to &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt;.</source>
          <target state="translated">Этот литерал может использоваться с любым типом, если он имеет конструктор без аргументов и отвечает на &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f3b7949166254a30289854bd34a8746a15f08640" translate="yes" xml:space="preserve">
          <source>This literal can be used with any type as long as it has an argless constructor and responds to &lt;code&gt;[]=&lt;/code&gt;.</source>
          <target state="translated">Этот литерал можно использовать с любым типом, если он имеет конструктор без аргументов и отвечает на &lt;code&gt;[]=&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4e04e4dfcae0f1da86f93f68805a481ead2f3cf3" translate="yes" xml:space="preserve">
          <source>This logic also applies if there are ands (&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;) in the condition:</source>
          <target state="translated">Эта логика также применяется, если в условии есть ands ( &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; ):</target>
        </trans-unit>
        <trans-unit id="1e0d40403d0fb3af87493347eb75affb4d82e65c" translate="yes" xml:space="preserve">
          <source>This looks up &quot;filename&quot; in the require path.</source>
          <target state="translated">Это выглядит как &quot;имя файла&quot; в требуемом пути.</target>
        </trans-unit>
        <trans-unit id="02b666351739e8df630e195dd5876f8ab2fbf2d7" translate="yes" xml:space="preserve">
          <source>This looks up &quot;filename&quot; relative to the file containing the require expression.</source>
          <target state="translated">Это ищет &quot;имя файла&quot; относительно файла,содержащего требуемое выражение.</target>
        </trans-unit>
        <trans-unit id="2ab59e555766a52026ea5b3d2c2a19fd4e20a6af" translate="yes" xml:space="preserve">
          <source>This looks very fancy, but is it as fast as a C for loop? The answer is: yes!</source>
          <target state="translated">Выглядит очень причудливо,но так же быстро,как &quot;С&quot; для петли? Ответ:да!</target>
        </trans-unit>
        <trans-unit id="8b6184f21171f25107a2ac683d8c6894f82542b9" translate="yes" xml:space="preserve">
          <source>This macro also declares instance variables of the types given in the mapping.</source>
          <target state="translated">Данный макрос также объявляет переменные экземпляров типов,указанных в отображении.</target>
        </trans-unit>
        <trans-unit id="b2d0d78d660060de2cbed03d7173e382c1204b9d" translate="yes" xml:space="preserve">
          <source>This macro also provides a &lt;code&gt;copy_with&lt;/code&gt; method which returns a copy of the record with the provided properties altered.</source>
          <target state="translated">Этот макрос также предоставляет метод &lt;code&gt;copy_with&lt;/code&gt; , который возвращает копию записи с измененными предоставленными свойствами.</target>
        </trans-unit>
        <trans-unit id="d81c22d82ab054ab6073357b0043598ce14efbcc" translate="yes" xml:space="preserve">
          <source>This macro by default defines getters and setters for each variable (this can be overrided with &lt;em&gt;setter&lt;/em&gt; and &lt;em&gt;getter&lt;/em&gt;). The mapping doesn't define a constructor accepting these variables as arguments, but you can provide an overload.</source>
          <target state="translated">Этот макрос по умолчанию определяет методы получения и установки для каждого переменного (это может быть перекрытой с &lt;em&gt;сеттеров&lt;/em&gt; и &lt;em&gt;геттером&lt;/em&gt; ). Отображение не определяет конструктор, принимающий эти переменные в качестве аргументов, но вы можете обеспечить перегрузку.</target>
        </trans-unit>
        <trans-unit id="a49b61072cd1f4d994675e912b4c5252a36758cb" translate="yes" xml:space="preserve">
          <source>This method allocates memory for the slice copy and duplicates the values.</source>
          <target state="translated">Этот метод выделяет память для копии среза и дублирует значения.</target>
        </trans-unit>
        <trans-unit id="1fc1ff3b014b53619b8bfb952dda2082d153d03a" translate="yes" xml:space="preserve">
          <source>This method allocates memory for the slice copy and stores the return values from calling &lt;code&gt;&lt;a href=&quot;slice#clone-instance-method&quot;&gt;#clone&lt;/a&gt;&lt;/code&gt; on each item.</source>
          <target state="translated">Этот метод выделяет память для копии слайса и сохраняет возвращаемые значения от вызова &lt;code&gt;&lt;a href=&quot;slice#clone-instance-method&quot;&gt;#clone&lt;/a&gt;&lt;/code&gt; для каждого элемента.</target>
        </trans-unit>
        <trans-unit id="3ffc762b0fa54672474374b2e8dff624af1fbed0" translate="yes" xml:space="preserve">
          <source>This method allows creating a &lt;code&gt;&lt;a href=&quot;range&quot;&gt;Range&lt;/a&gt;&lt;/code&gt; of chars.</source>
          <target state="translated">Этот метод позволяет создать &lt;code&gt;&lt;a href=&quot;range&quot;&gt;Range&lt;/a&gt;&lt;/code&gt; символов.</target>
        </trans-unit>
        <trans-unit id="de40eee84880ab1581a5f5076ca5d5b101ef5a29" translate="yes" xml:space="preserve">
          <source>This method also accepts &lt;code&gt;0&lt;/code&gt; to identify &lt;code&gt;&lt;a href=&quot;dayofweek#Sunday&quot;&gt;Sunday&lt;/a&gt;&lt;/code&gt; in order to be compliant with the &lt;code&gt;&lt;a href=&quot;dayofweek#Sunday&quot;&gt;Sunday&lt;/a&gt; = 0&lt;/code&gt; numbering. All other days are equal in both formats.</source>
          <target state="translated">Этот метод также принимает &lt;code&gt;0&lt;/code&gt; для идентификации &lt;code&gt;&lt;a href=&quot;dayofweek#Sunday&quot;&gt;Sunday&lt;/a&gt;&lt;/code&gt; , чтобы соответствовать нумерации &lt;code&gt;&lt;a href=&quot;dayofweek#Sunday&quot;&gt;Sunday&lt;/a&gt; = 0&lt;/code&gt; . Все остальные дни равны в обоих форматах.</target>
        </trans-unit>
        <trans-unit id="a804975c90be266f4bd9934431ac6b0117a7a3c1" translate="yes" xml:space="preserve">
          <source>This method calls &lt;code&gt;#reset&lt;/code&gt; to remove any previous settings and writes the given &lt;em&gt;status&lt;/em&gt; and &lt;em&gt;message&lt;/em&gt; to the response IO. Finally, it closes the response.</source>
          <target state="translated">Этот метод вызывает &lt;code&gt;#reset&lt;/code&gt; для удаления любых предыдущих настроек и записывает данный &lt;em&gt;статус&lt;/em&gt; и &lt;em&gt;сообщение&lt;/em&gt; в ответ IO. Наконец, он закрывает ответ.</target>
        </trans-unit>
        <trans-unit id="876ed2a7e2571907a92804ebfdfb5c32fcf2d101" translate="yes" xml:space="preserve">
          <source>This method calls &lt;code&gt;@wrapped&lt;a href=&quot;server#accept:OpenSSL::SSL::Socket::Server-instance-method&quot;&gt;.accept&lt;/a&gt;&lt;/code&gt; and wraps the resulting IO in a SSL socket (&lt;code&gt;&lt;a href=&quot;socket/server&quot;&gt;OpenSSL::SSL::Socket::Server&lt;/a&gt;&lt;/code&gt;) with &lt;code&gt;&lt;a href=&quot;server#context:OpenSSL::SSL::Context::Server-instance-method&quot;&gt;#context&lt;/a&gt;&lt;/code&gt; configuration.</source>
          <target state="translated">Этот метод вызывает &lt;code&gt;@wrapped&lt;a href=&quot;server#accept:OpenSSL::SSL::Socket::Server-instance-method&quot;&gt;.accept&lt;/a&gt;&lt;/code&gt; и помещает полученный IO в сокет SSL ( &lt;code&gt;&lt;a href=&quot;socket/server&quot;&gt;OpenSSL::SSL::Socket::Server&lt;/a&gt;&lt;/code&gt; ) с конфигурацией &lt;code&gt;&lt;a href=&quot;server#context:OpenSSL::SSL::Context::Server-instance-method&quot;&gt;#context&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="80fa8b3ce296002e2382ec789a479a1aec82c056" translate="yes" xml:space="preserve">
          <source>This method calls &lt;code&gt;@wrapped&lt;a href=&quot;server#accept?:OpenSSL::SSL::Socket::Server?-instance-method&quot;&gt;.accept?&lt;/a&gt;&lt;/code&gt; and wraps the resulting IO in a SSL socket (&lt;code&gt;&lt;a href=&quot;socket/server&quot;&gt;OpenSSL::SSL::Socket::Server&lt;/a&gt;&lt;/code&gt;) with &lt;code&gt;&lt;a href=&quot;server#context:OpenSSL::SSL::Context::Server-instance-method&quot;&gt;#context&lt;/a&gt;&lt;/code&gt; configuration.</source>
          <target state="translated">Этот метод вызывает &lt;code&gt;@wrapped&lt;a href=&quot;server#accept?:OpenSSL::SSL::Socket::Server?-instance-method&quot;&gt;.accept?&lt;/a&gt;&lt;/code&gt; и оборачивает полученный ввод-вывод в сокет SSL ( &lt;code&gt;&lt;a href=&quot;socket/server&quot;&gt;OpenSSL::SSL::Socket::Server&lt;/a&gt;&lt;/code&gt; ) с конфигурацией &lt;code&gt;&lt;a href=&quot;server#context:OpenSSL::SSL::Context::Server-instance-method&quot;&gt;#context&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="110bbb23114f80368a621ef48c06272849dba2f9" translate="yes" xml:space="preserve">
          <source>This method can also be used to write the name of an object field.</source>
          <target state="translated">Этот метод также может быть использован для написания имени поля объекта.</target>
        </trans-unit>
        <trans-unit id="f43eccd5c568a2a2f76820b8c8229fa24a237d06" translate="yes" xml:space="preserve">
          <source>This method can be invoked if you need to define a custom main (as in C main) function, doing all the above steps.</source>
          <target state="translated">Этот метод может быть вызван,если вам нужно определить пользовательскую главную (как в C main)функцию,выполнив все вышеперечисленные действия.</target>
        </trans-unit>
        <trans-unit id="07c49154a6dfeb600685b04ea81731ffbadfa9d7" translate="yes" xml:space="preserve">
          <source>This method can be used to manually fail an example defined in an &lt;code&gt;#it&lt;/code&gt; block.</source>
          <target state="translated">Этот метод можно использовать для ручного сбоя примера, определенного в блоке &lt;code&gt;#it&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f7ab759482e3724d677024c80dfa4d1df68a0b87" translate="yes" xml:space="preserve">
          <source>This method can only be called once and raises &lt;code&gt;&lt;a href=&quot;finalizederror&quot;&gt;FinalizedError&lt;/a&gt;&lt;/code&gt; on subsequent calls.</source>
          <target state="translated">Этот метод может быть вызван только один раз и вызывает &lt;code&gt;&lt;a href=&quot;finalizederror&quot;&gt;FinalizedError&lt;/a&gt;&lt;/code&gt; при последующих вызовах.</target>
        </trans-unit>
        <trans-unit id="8a3b403803b3e2898c855162b3d133ab7e6aaad3" translate="yes" xml:space="preserve">
          <source>This method changes the time zone and retains the instant, which will usually result in a different representation of local date-time (unless both locations have the same offset).</source>
          <target state="translated">Этот метод изменяет часовой пояс и сохраняет мгновение,что обычно приводит к различному представлению локального дата-времени (если только оба местоположения не имеют одинакового смещения).</target>
        </trans-unit>
        <trans-unit id="71254f8f1f1ac03231cb7a3a2658052200785c63" translate="yes" xml:space="preserve">
          <source>This method enables some customization, but typical use cases can be implemented by either &lt;code&gt;&lt;a href=&quot;uri#decode(string:String,*,plus_to_space:Bool=false):String-class-method&quot;&gt;.decode(string : String, *, plus_to_space : Bool = false)&lt;/a&gt; : &lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;.deode_www_form(string : String, *, plus_to_space : Bool = true) : &lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Этот метод допускает некоторую настройку, но типичные варианты использования могут быть реализованы с помощью &lt;code&gt;&lt;a href=&quot;uri#decode(string:String,*,plus_to_space:Bool=false):String-class-method&quot;&gt;.decode(string : String, *, plus_to_space : Bool = false)&lt;/a&gt; : &lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;.deode_www_form(string : String, *, plus_to_space : Bool = true) : &lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="66fb97869fc5212ab96dadd23532f875642eb2d8" translate="yes" xml:space="preserve">
          <source>This method enables some customization, but typical use cases can be implemented by either &lt;code&gt;&lt;a href=&quot;uri#encode(string:String,*,space_to_plus:Bool=false):String-class-method&quot;&gt;.encode(string : String, *, space_to_plus : Bool = false)&lt;/a&gt; : &lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;uri#encode_www_form(string:String,*,space_to_plus:Bool=true):String-class-method&quot;&gt;.encode_www_form(string : String, *, space_to_plus : Bool = true)&lt;/a&gt; : &lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Этот метод допускает некоторую настройку, но типичные варианты использования могут быть реализованы с помощью &lt;code&gt;&lt;a href=&quot;uri#encode(string:String,*,space_to_plus:Bool=false):String-class-method&quot;&gt;.encode(string : String, *, space_to_plus : Bool = false)&lt;/a&gt; : &lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;uri#encode_www_form(string:String,*,space_to_plus:Bool=true):String-class-method&quot;&gt;.encode_www_form(string : String, *, space_to_plus : Bool = true)&lt;/a&gt; : &lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="543c64a9546cd1816d1a00aa3905da29065cb26c" translate="yes" xml:space="preserve">
          <source>This method is &lt;strong&gt;unsafe&lt;/strong&gt; because it behaves unpredictably when the given &lt;code&gt;type&lt;/code&gt; doesn't have the same bytesize as the receiver, or when the given &lt;code&gt;type&lt;/code&gt; representation doesn't semantically match the underlying bytes.</source>
          <target state="translated">Этот метод &lt;strong&gt;небезопасен,&lt;/strong&gt; потому что он ведет себя непредсказуемо, когда данный &lt;code&gt;type&lt;/code&gt; не имеет тот же размер байта, что и получатель, или когда данное представление &lt;code&gt;type&lt;/code&gt; не семантически соответствует базовым байтам.</target>
        </trans-unit>
        <trans-unit id="b5cbc5a629094572b5cae34df050919f9fe50bca" translate="yes" xml:space="preserve">
          <source>This method is &lt;strong&gt;unsafe&lt;/strong&gt; because it returns a pointer, and the pointed might eventually not be that of &lt;code&gt;self&lt;/code&gt; if the array grows and its internal buffer is reallocated.</source>
          <target state="translated">Этот метод &lt;strong&gt;небезопасен,&lt;/strong&gt; потому что он возвращает указатель, и указатель может в конечном итоге не быть указателем &lt;code&gt;self&lt;/code&gt; , если массив увеличивается и его внутренний буфер перераспределяется.</target>
        </trans-unit>
        <trans-unit id="9bcfc5121e3fcaeeab6ad40e3bd6aee85d973a99" translate="yes" xml:space="preserve">
          <source>This method is &lt;strong&gt;unsafe&lt;/strong&gt;, but is usually used to initialize the buffer by passing it to a C function.</source>
          <target state="translated">Этот метод &lt;strong&gt;небезопасен&lt;/strong&gt; , но обычно используется для инициализации буфера путем передачи его в функцию C.</target>
        </trans-unit>
        <trans-unit id="14321e39d197f6c1679a31b60eb9fba345489c89" translate="yes" xml:space="preserve">
          <source>This method is &lt;strong&gt;unsafe&lt;/strong&gt;: the pointer must point to data that eventually contains a zero byte that indicates the ends of the string. Otherwise, the result of this method is undefined and might cause a segmentation fault.</source>
          <target state="translated">Этот метод &lt;strong&gt;небезопасен&lt;/strong&gt; : указатель должен указывать на данные, которые в конечном итоге содержат нулевой байт, обозначающий концы строки. В противном случае результат этого метода не определен и может вызвать ошибку сегментации.</target>
        </trans-unit>
        <trans-unit id="c85f0df7d857e88bebe2fa6338a1727a05b52dcc" translate="yes" xml:space="preserve">
          <source>This method is a unary operator and usually written in prefix notation (&lt;code&gt;!foo&lt;/code&gt;) but it can also be written as a regular method call (&lt;code&gt;foo&lt;a href=&quot;object#!:Bool-instance-method&quot;&gt;.!&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">Этот метод является унарным оператором и обычно записывается в виде префикса ( &lt;code&gt;!foo&lt;/code&gt; ), но его также можно записать как обычный вызов метода ( &lt;code&gt;foo&lt;a href=&quot;object#!:Bool-instance-method&quot;&gt;.!&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="6ab980b8075db8f065c8f6c51a0c2bd59a577ec5" translate="yes" xml:space="preserve">
          <source>This method is always safe to call, and the resulting string will have the contents and size of the slice.</source>
          <target state="translated">Этот метод всегда безопасен для вызова,а результирующая строка будет иметь содержимое и размер среза.</target>
        </trans-unit>
        <trans-unit id="cf8c7ff1e18f6211fa80b57a21af687888058dc1" translate="yes" xml:space="preserve">
          <source>This method is automatically invoked for you, so you don't need to invoke it.</source>
          <target state="translated">Этот метод автоматически вызывается для вас,так что вам не нужно его вызывать.</target>
        </trans-unit>
        <trans-unit id="29a475f6a3debf4758fd938d8d77eeedfddd2709" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;code&gt;&lt;a href=&quot;object#is_a?(type:Class):Bool-instance-method&quot;&gt;#is_a?(Nil)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Этот метод эквивалентен &lt;code&gt;&lt;a href=&quot;object#is_a?(type:Class):Bool-instance-method&quot;&gt;#is_a?(Nil)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1d83bafe31e3643b12d002caba871495df77db30" translate="yes" xml:space="preserve">
          <source>This method is mainly intended to convert integers from C to enums in Crystal.</source>
          <target state="translated">Этот метод в основном предназначен для преобразования целых чисел из C в перечисления в Crystal.</target>
        </trans-unit>
        <trans-unit id="7b7e65fc77b25a08e2a12b71af2dcd0ece534fd6" translate="yes" xml:space="preserve">
          <source>This method is particularly useful to break up tight loops which are only computation intensive and don't offer natural opportunities for swapping fibers as with IO operations.</source>
          <target state="translated">Этот метод особенно полезен для разделения узких циклов,которые являются только интенсивными вычислениями и не предоставляют естественных возможностей для замены волокон,как при операциях ввода-вывода.</target>
        </trans-unit>
        <trans-unit id="10fc8f745b12a33607325325d055ac6d307f9324" translate="yes" xml:space="preserve">
          <source>This method is the inverse operation to &lt;code&gt;&lt;a href=&quot;uri#relativize(uri:URI%7CString):URI-instance-method&quot;&gt;#relativize&lt;/a&gt;&lt;/code&gt; (see &lt;a href=&quot;#Resolution%20and%20Relativization&quot;&gt;Resolution and Relativization&lt;/a&gt;).</source>
          <target state="translated">Этот метод является обратной операцией для &lt;code&gt;&lt;a href=&quot;uri#relativize(uri:URI%7CString):URI-instance-method&quot;&gt;#relativize&lt;/a&gt;&lt;/code&gt; (см. &lt;a href=&quot;#Resolution%20and%20Relativization&quot;&gt;Разрешение и релятивизация&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="79f2ef5ab90e3a8738a37aed767115a397e15aba" translate="yes" xml:space="preserve">
          <source>This method is the inverse operation to &lt;code&gt;&lt;a href=&quot;uri#resolve(uri:URI%7CString):URI-instance-method&quot;&gt;#resolve&lt;/a&gt;&lt;/code&gt; (see &lt;a href=&quot;#Resolution%20and%20Relativization&quot;&gt;Resolution and Relativization&lt;/a&gt;).</source>
          <target state="translated">Этот метод является обратной операцией к &lt;code&gt;&lt;a href=&quot;uri#resolve(uri:URI%7CString):URI-instance-method&quot;&gt;#resolve&lt;/a&gt;&lt;/code&gt; (см. &lt;a href=&quot;#Resolution%20and%20Relativization&quot;&gt;Разрешение и релятивизация&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="a666cc527ca8b43282f1ede4f1744600df5f756b" translate="yes" xml:space="preserve">
          <source>This method is the same as &lt;code&gt;&lt;a href=&quot;stringscanner#scan(pattern)-instance-method&quot;&gt;#scan&lt;/a&gt;&lt;/code&gt;, but without returning the matched string.</source>
          <target state="translated">Этот метод такой же, как &lt;code&gt;&lt;a href=&quot;stringscanner#scan(pattern)-instance-method&quot;&gt;#scan&lt;/a&gt;&lt;/code&gt; , но без возврата соответствующей строки.</target>
        </trans-unit>
        <trans-unit id="6c8c40735837bf50315a9cfb6667abdad0d7f275" translate="yes" xml:space="preserve">
          <source>This method is the same as &lt;code&gt;&lt;a href=&quot;stringscanner#scan_until(pattern)-instance-method&quot;&gt;#scan_until&lt;/a&gt;&lt;/code&gt;, but without returning the matched string.</source>
          <target state="translated">Этот метод такой же, как &lt;code&gt;&lt;a href=&quot;stringscanner#scan_until(pattern)-instance-method&quot;&gt;#scan_until&lt;/a&gt;&lt;/code&gt; , но без возврата соответствующей строки.</target>
        </trans-unit>
        <trans-unit id="0bb21be8b188c3a362afbdf538e490cfff2b5a0a" translate="yes" xml:space="preserve">
          <source>This method is typically used in C bindings, where you get a &lt;code&gt;char*&lt;/code&gt; from a library and the library guarantees that this pointer eventually has an ending zero byte.</source>
          <target state="translated">Этот метод обычно используется в привязках C, где вы получаете &lt;code&gt;char*&lt;/code&gt; из библиотеки, и библиотека гарантирует, что этот указатель в конечном итоге будет иметь конечный нулевой байт.</target>
        </trans-unit>
        <trans-unit id="bc47d62663f52dafb03da6c2b69547adb50f68fa" translate="yes" xml:space="preserve">
          <source>This method is useful for dealing with nilable types, to safely perform operations only when the value is not &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Этот метод полезен для работы с nilable типами, чтобы безопасно выполнять операции только тогда, когда значение не равно &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d52e6cffffcfea09e2979e5b48f2c15d49e1eac0" translate="yes" xml:space="preserve">
          <source>This method is useful in macros and generic code because with it you can create empty tuples, something that you can't do with a tuple literal.</source>
          <target state="translated">Этот метод полезен в макросах и общем коде,потому что с его помощью можно создавать пустые кортежи,что-то,что нельзя сделать с буквальным кортежом.</target>
        </trans-unit>
        <trans-unit id="9e189ba2199c84eed3718c288cd96471cb504b30" translate="yes" xml:space="preserve">
          <source>This method is useful in macros and generic code because with it you can creates empty named tuples, something that you can't do with a tuple literal.</source>
          <target state="translated">Этот метод полезен в макросах и общем коде,потому что с его помощью можно создавать пустые именованные кортежи,что-то,что нельзя сделать с буквальным кортежом.</target>
        </trans-unit>
        <trans-unit id="c912bee98c99ac38403dfcb10a3bd634650f827b" translate="yes" xml:space="preserve">
          <source>This method is useful to treat a type that is represented as a chunk of bytes as another type where those bytes convey useful information. As an example, you can check the individual bytes of an &lt;code&gt;&lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">Этот метод полезен для обработки типа, представленного в виде байта, как другого типа, в котором эти байты передают полезную информацию. Например, вы можете проверить отдельные байты &lt;code&gt;&lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="19eea505855cc0210c1b92472e2a60293b570c37" translate="yes" xml:space="preserve">
          <source>This method isn't usually used directly. Instead, &lt;code&gt;&lt;a href=&quot;box#box(r:Reference?):Pointer(Void)-class-method&quot;&gt;Box.box&lt;/a&gt;&lt;/code&gt; is used.</source>
          <target state="translated">Этот метод обычно не используется напрямую. Вместо этого используется &lt;code&gt;&lt;a href=&quot;box#box(r:Reference?):Pointer(Void)-class-method&quot;&gt;Box.box&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1197afc812e6fc70baa998134563bed7f2085c44" translate="yes" xml:space="preserve">
          <source>This method must have the property that &lt;code&gt;a == b&lt;/code&gt; implies &lt;code&gt;a&lt;a href=&quot;entry#hash-instance-method&quot;&gt;.hash&lt;/a&gt; == b&lt;a href=&quot;entry#hash-instance-method&quot;&gt;.hash&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Этот метод должен обладать свойством , что &lt;code&gt;a == b&lt;/code&gt; подразумевает &lt;code&gt;a&lt;a href=&quot;entry#hash-instance-method&quot;&gt;.hash&lt;/a&gt; == b&lt;a href=&quot;entry#hash-instance-method&quot;&gt;.hash&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="47729461eef607d08960810a64f22def6ef8a562" translate="yes" xml:space="preserve">
          <source>This method must have the property that &lt;code&gt;a == b&lt;/code&gt; implies &lt;code&gt;a&lt;a href=&quot;object#hash-instance-method&quot;&gt;.hash&lt;/a&gt; == b&lt;a href=&quot;object#hash-instance-method&quot;&gt;.hash&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Этот метод должен обладать свойством , что &lt;code&gt;a == b&lt;/code&gt; подразумевает &lt;code&gt;a&lt;a href=&quot;object#hash-instance-method&quot;&gt;.hash&lt;/a&gt; == b&lt;a href=&quot;object#hash-instance-method&quot;&gt;.hash&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8a90186c6146674e3e7ef361cc7cc1b26068df08" translate="yes" xml:space="preserve">
          <source>This method only performs a read to return peek data if the current buffer is empty: otherwise no read is performed and whatever is in the buffer is returned.</source>
          <target state="translated">Этот метод выполняет чтение для возврата данных peek только в том случае,если текущий буфер пуст:в противном случае чтение не выполняется и возвращается все,что находится в буфере.</target>
        </trans-unit>
        <trans-unit id="ed2a383fb699dde9e1533f4af7a6692504f3bb02" translate="yes" xml:space="preserve">
          <source>This method returns the same namespaces as &lt;code&gt;&lt;a href=&quot;node#namespace_scopes-instance-method&quot;&gt;#namespace_scopes&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Этот метод возвращает те же пространства имен, что и &lt;code&gt;&lt;a href=&quot;node#namespace_scopes-instance-method&quot;&gt;#namespace_scopes&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="565497f6eca43074a894d5151d278bb80e8c5904" translate="yes" xml:space="preserve">
          <source>This method returns the same namespaces as &lt;code&gt;&lt;a href=&quot;node#namespace_scopes:Array(Namespace)-instance-method&quot;&gt;#namespace_scopes&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Этот метод возвращает те же пространства имен, что и &lt;code&gt;&lt;a href=&quot;node#namespace_scopes:Array(Namespace)-instance-method&quot;&gt;#namespace_scopes&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4c0089422223e3efc08acb13dca4fc182fc6047a" translate="yes" xml:space="preserve">
          <source>This method should be avoided, unless the string is proven to be ASCII-only (for example &lt;code&gt;&lt;a href=&quot;string#ascii_only?-instance-method&quot;&gt;#ascii_only?&lt;/a&gt;&lt;/code&gt;), or the byte positions are known to be at character boundaries. Otherwise, multi-byte characters may be split, leading to an invalid UTF-8 encoding.</source>
          <target state="translated">Этого метода следует избегать, если только не доказано, что строка содержит только ASCII (например, &lt;code&gt;&lt;a href=&quot;string#ascii_only?-instance-method&quot;&gt;#ascii_only?&lt;/a&gt;&lt;/code&gt; ), Или если известно, что позиции байтов находятся на границах символов. В противном случае многобайтовые символы могут быть разделены, что приведет к неправильной кодировке UTF-8.</target>
        </trans-unit>
        <trans-unit id="b2d1ee8cd64f3b3676979d7591c596fc8ed6d870" translate="yes" xml:space="preserve">
          <source>This method should only be directly invoked if you are absolutely sure the index is in bounds, to avoid a bounds check for a small boost of performance.</source>
          <target state="translated">Этот метод следует напрямую вызывать только в том случае,если вы абсолютно уверены,что индекс находится в границах,чтобы избежать проверки границ для небольшого прироста производительности.</target>
        </trans-unit>
        <trans-unit id="c5b1576a5fca213095e97f27f1bbc043c9560882" translate="yes" xml:space="preserve">
          <source>This method should sometimes be called before passing a &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; to a C function.</source>
          <target state="translated">Этот метод иногда следует вызывать перед передачей &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; в функцию C.</target>
        </trans-unit>
        <trans-unit id="a4e0deb49c8f4340fdd9a131432eaf0af24b6109" translate="yes" xml:space="preserve">
          <source>This method takes into account the possibility that an downcase version of a char might result in multiple chars, like for 'İ', which results in 'i' and a dot mark.</source>
          <target state="translated">Этот метод учитывает возможность того,что понижающая версия графика может привести к появлению множества графиков,как,например,для 'İ',что приводит к появлению 'i' и метки точки.</target>
        </trans-unit>
        <trans-unit id="cc68b5f7db9e81404c09ccaa273be5676eccd6d8" translate="yes" xml:space="preserve">
          <source>This method takes into account the possibility that an upcase version of a char might result in multiple chars, like for 'ﬄ', which results in 'F', 'F' and 'L'.</source>
          <target state="translated">В этом методе учитывается возможность того,что восходящая версия char может привести к нескольким chars,как,например,для 'ﬄ',что приводит к 'F','F' и 'L'.</target>
        </trans-unit>
        <trans-unit id="1e00cd560926f03ce357aa52106e39137e95ab6c" translate="yes" xml:space="preserve">
          <source>This method usually doesn't need to be called explicitly when the default behaviour is expected. It will be called implicitly with &lt;code&gt;load_defaults: true&lt;/code&gt; when a query method is called and the MIME database has not been initialized before.</source>
          <target state="translated">Этот метод обычно не нужно вызывать явно, когда ожидается поведение по умолчанию. Он будет вызываться неявно с &lt;code&gt;load_defaults: true&lt;/code&gt; когда вызывается метод запроса и база данных MIME не была инициализирована ранее.</target>
        </trans-unit>
        <trans-unit id="3a5edfda3cb0e0e647d156b5a991a6b768edd899" translate="yes" xml:space="preserve">
          <source>This method yields once instead of returning the values, because the IO object yielded to the block is only valid while the block is executing. The IO object will be closed as soon as the block returns. To store the content of the body part for longer than the block, the IO must be read into memory.</source>
          <target state="translated">Этот метод дает один раз вместо того,чтобы возвращать значения,потому что объект IO,переданный блоку,действителен только во время выполнения блока.Объект IO будет закрыт,как только блок вернется.Чтобы хранить содержимое части тела дольше,чем блок,IO должен быть прочитан в памяти.</target>
        </trans-unit>
        <trans-unit id="51e8c2a0cd5329af392ba2518f88ca9cf8a35b80" translate="yes" xml:space="preserve">
          <source>This methods yields the order of magnitude and &lt;code&gt;self&lt;/code&gt; and expects the block to return a &lt;code&gt;&lt;a href=&quot;tuple&quot;&gt;Tuple&lt;/a&gt;(&lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt;, _)&lt;/code&gt; containing the (adjusted) magnitude and unit. The magnitude is typically adjusted to a multiple of &lt;code&gt;3&lt;/code&gt;.</source>
          <target state="translated">Этот метод возвращает порядок величины и &lt;code&gt;self&lt;/code&gt; и ожидает, что блок вернет &lt;code&gt;&lt;a href=&quot;tuple&quot;&gt;Tuple&lt;/a&gt;(&lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt;, _)&lt;/code&gt; содержащий (скорректированные) величину и единицу измерения. Величина обычно настраивается на кратное &lt;code&gt;3&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="62426ddc1b8c4721acf93078455ae0f39d239320" translate="yes" xml:space="preserve">
          <source>This module also defines a global method &lt;code&gt;&lt;a href=&quot;random#rand:Float64-instance-method&quot;&gt;#rand&lt;/a&gt;&lt;/code&gt;, which &lt;code&gt;&lt;a href=&quot;array#sample(n:Int,random=Random::DEFAULT)-instance-method&quot;&gt;Array#sample&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;array#shuffle(random=Random::DEFAULT)-instance-method&quot;&gt;Array#shuffle&lt;/a&gt;&lt;/code&gt; delegates.</source>
          <target state="translated">Этот модуль также определяет глобальный метод &lt;code&gt;&lt;a href=&quot;random#rand:Float64-instance-method&quot;&gt;#rand&lt;/a&gt;&lt;/code&gt; , которому делегируются &lt;code&gt;&lt;a href=&quot;array#sample(n:Int,random=Random::DEFAULT)-instance-method&quot;&gt;Array#sample&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;array#shuffle(random=Random::DEFAULT)-instance-method&quot;&gt;Array#shuffle&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4edc0be33dff41532ff7a2c915d58dbe8012b79c" translate="yes" xml:space="preserve">
          <source>This module can be included in any &lt;code&gt;&lt;a href=&quot;exception&quot;&gt;Exception&lt;/a&gt;&lt;/code&gt; subclass that is used to wrap some system error (&lt;code&gt;&lt;a href=&quot;errno&quot;&gt;Errno&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;WinError&lt;/code&gt;)</source>
          <target state="translated">Этот модуль может быть включен в любой подкласс &lt;code&gt;&lt;a href=&quot;exception&quot;&gt;Exception&lt;/a&gt;&lt;/code&gt; , который используется для &lt;code&gt;&lt;a href=&quot;errno&quot;&gt;Errno&lt;/a&gt;&lt;/code&gt; некоторой системной ошибки ( Errno или &lt;code&gt;WinError&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="75bda1245302220c674f57b233bbd6c1619cbf1b" translate="yes" xml:space="preserve">
          <source>This module conforms to &lt;a href=&quot;https://tools.ietf.org/html/rfc4180&quot;&gt;RFC 4180&lt;/a&gt;.</source>
          <target state="translated">Этот модуль соответствует &lt;a href=&quot;https://tools.ietf.org/html/rfc4180&quot;&gt;RFC 4180&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f36bf7fc88f3d7e2acf2d7488c604ff22c154e16" translate="yes" xml:space="preserve">
          <source>This module defines a number of methods to create expectations, which are automatically included into the top level namespace.</source>
          <target state="translated">Этот модуль определяет ряд методов создания ожиданий,которые автоматически включаются в пространство имен верхнего уровня.</target>
        </trans-unit>
        <trans-unit id="8ef2aac295915a70eb298437ad90c977a8e82a34" translate="yes" xml:space="preserve">
          <source>This module implements a global MIME registry.</source>
          <target state="translated">Этот модуль реализует глобальный MIME реестр.</target>
        </trans-unit>
        <trans-unit id="97ee9e8267f97333d03d6d7ac70d5aec355de137" translate="yes" xml:space="preserve">
          <source>This monotonic clock should always be used for measuring elapsed time.</source>
          <target state="translated">Эти монотонные часы всегда должны использоваться для измерения прошедшего времени.</target>
        </trans-unit>
        <trans-unit id="76eed7e1078f4676da5877d91557fa7850731a4a" translate="yes" xml:space="preserve">
          <source>This of course also works with the short syntax:</source>
          <target state="translated">Это,конечно же,работает и с коротким синтаксисом:</target>
        </trans-unit>
        <trans-unit id="bb9ed4011966335dc5ee5afee070bdb3ee3a010c" translate="yes" xml:space="preserve">
          <source>This operates on the instant time-line, such that adding the equivalent of one hour will always be a duration of one hour later. The local date-time representation may change by a different amount, depending on time zone transitions.</source>
          <target state="translated">Это работает на мгновенной временной линии,так что добавление эквивалента одного часа всегда будет длиться на один час позже.Местное представление дата-время может меняться на другую величину в зависимости от переходов часового пояса.</target>
        </trans-unit>
        <trans-unit id="689b61b343ffbccdbdcb0fa7201504543e3cd9c8" translate="yes" xml:space="preserve">
          <source>This operates on the local time-line, such that the local date-time represenation of the result will be apart by the specified amounts, but the elapsed time between both instances might not equal to the combined default durations This is the case for example when adding a day over a daylight-savings time change:</source>
          <target state="translated">Это работает на местной временной линии,так что местное представление результата по дате-времени будет разделено на указанные суммы,но истекшее время между обоими случаями может не совпадать с общим временем по умолчанию Это происходит,например,при добавлении дня за изменение летнего времени:</target>
        </trans-unit>
        <trans-unit id="8054f1719741cee4f425263c3995947f7fa96063" translate="yes" xml:space="preserve">
          <source>This operates on the local time-line, such that the local date-time represenations of month and year are decreased by the specified amount.</source>
          <target state="translated">Это работает по местному времени,так что местные представления данных за месяц и год уменьшаются на указанную сумму.</target>
        </trans-unit>
        <trans-unit id="f79406c77945d14f81970afd66d037ffdbb5eda0" translate="yes" xml:space="preserve">
          <source>This operates on the local time-line, such that the local date-time represenations of month and year are increased by the specified amount.</source>
          <target state="translated">Это работает по местному времени,так что местные представления данных по месяцам и годам увеличиваются на указанную сумму.</target>
        </trans-unit>
        <trans-unit id="0cba38acc0940abf0c7fbacb6a6afe3ac1c1933e" translate="yes" xml:space="preserve">
          <source>This operates on the local time-line, such that the local date-time representation of the result will be apart by the specified amounts, but the elapsed time between both instances might not equal to the combined default durations This is the case for example when adding a day over a daylight-savings time change:</source>
          <target state="translated">Это работает на локальной временной линии,так что локальное представление результата на дату-время будет разделено на указанные суммы,но прошедшее время между двумя случаями может не совпадать с комбинированной продолжительностью по умолчанию Это происходит,например,при добавлении дня за изменение летнего времени:</target>
        </trans-unit>
        <trans-unit id="4dcf0ee2f6fdf3917e32df47707c61c1e54afb89" translate="yes" xml:space="preserve">
          <source>This operation is often useful when constructing a document containing URIs that must be made relative to the base URI of the document wherever possible.</source>
          <target state="translated">Эта операция часто полезна при построении документа,содержащего URI,которые должны быть сделаны относительно базового URI документа везде,где это возможно.</target>
        </trans-unit>
        <trans-unit id="244bd5d3f005fbcff84b4546a3b5a36d42fd938e" translate="yes" xml:space="preserve">
          <source>This overload returns a value whose type is restricted to be not &lt;code&gt;&lt;a href=&quot;../nil&quot;&gt;Nil&lt;/a&gt;&lt;/code&gt;. For example:</source>
          <target state="translated">Эта перегрузка возвращает значение, тип которого не может быть равен &lt;code&gt;&lt;a href=&quot;../nil&quot;&gt;Nil&lt;/a&gt;&lt;/code&gt; . Например:</target>
        </trans-unit>
        <trans-unit id="3ff9c4601b6718642cc9f79cc1c96305eab52780" translate="yes" xml:space="preserve">
          <source>This overload returns a value whose type is restricted to exclude the given type in &lt;code&gt;should_not be_a&lt;/code&gt;. For example:</source>
          <target state="translated">Эта перегрузка возвращает значение, тип которого ограничен, чтобы исключить данный тип в &lt;code&gt;should_not be_a&lt;/code&gt; . Например:</target>
        </trans-unit>
        <trans-unit id="2f847bfbabbc47c3bc11bc794d7bda974b507b0c" translate="yes" xml:space="preserve">
          <source>This overload returns a value whose type is restricted to the expected type. For example:</source>
          <target state="translated">Эта перегрузка возвращает значение,тип которого ограничен ожидаемым типом.Например:</target>
        </trans-unit>
        <trans-unit id="0358a14c793d7b599d3ce27a3c57a46685678281" translate="yes" xml:space="preserve">
          <source>This philosophy of appending to an IO instead of returning an intermediate string results in better performance than handling intermediate strings. You should use this strategy in your API definitions too.</source>
          <target state="translated">Эта философия добавления в IO вместо возврата промежуточной строки приводит к лучшей производительности,чем работа с промежуточными строками.Эту стратегию следует использовать и в определениях API.</target>
        </trans-unit>
        <trans-unit id="345205710c1209079bdf05b4d146f25fe0a01f36" translate="yes" xml:space="preserve">
          <source>This prints:</source>
          <target state="translated">Это отпечатки:</target>
        </trans-unit>
        <trans-unit id="0731dc79f56c5a5399cdd125c11e0e16381f03fa" translate="yes" xml:space="preserve">
          <source>This procedure is usually done with the compiler itself to port it to new platforms where a compiler is not yet available. Because in order to compile a Crystal compiler we need an older Crystal compiler, the only two ways to generate a compiler for a system where there isn't a compiler yet are:</source>
          <target state="translated">Эта процедура обычно выполняется самим компилятором для переноса на новые платформы,где компилятор еще не доступен.Потому что для того,чтобы скомпилировать компилятор Crystal нам нужен более старый компилятор Crystal,единственные два способа сгенерировать компилятор для системы,где еще нет компилятора:</target>
        </trans-unit>
        <trans-unit id="f4f30c3e0066d3a8e63a8ffbeed56fdd87c8d84a" translate="yes" xml:space="preserve">
          <source>This process can sometimes be ambiguous, mostly due skipping or repeating times at time zone transitions. For example, in &lt;code&gt;America/New_York&lt;/code&gt; the date-time &lt;code&gt;2011-03-13 02:15:00&lt;/code&gt; never occurred, there is a gap between time zones. In return, &lt;code&gt;2011-11-06 01:15:00&lt;/code&gt; occurred twice because of overlapping time zones.</source>
          <target state="translated">Этот процесс иногда может быть неоднозначным, в основном из-за пропуска или повторения времени при переходах часового пояса. Например, в &lt;code&gt;America/New_York&lt;/code&gt; дата-время &lt;code&gt;2011-03-13 02:15:00&lt;/code&gt; никогда не возникала, между часовыми поясами существует разрыв. Взамен &lt;code&gt;2011-11-06 01:15:00&lt;/code&gt; произошло дважды из-за перекрытия часовых поясов.</target>
        </trans-unit>
        <trans-unit id="7da89f81a6359e1270db436a8688ea3526540d3d" translate="yes" xml:space="preserve">
          <source>This program will now print &quot;Hello!&quot; for one second and then exit. This is because the &lt;code&gt;sleep&lt;/code&gt; call will schedule the main fiber to be executed in a second, and then executes another &quot;ready to execute&quot; fiber, which in this case is the one above.</source>
          <target state="translated">Эта программа теперь будет печатать &quot;Привет!&quot; на одну секунду, а затем выход. Это связано с тем, что &lt;code&gt;sleep&lt;/code&gt; вызов запланирует выполнение основного волокна в секунду, а затем выполнит другое волокно &amp;laquo;готово к выполнению&amp;raquo;, которое в данном случае является приведенным выше.</target>
        </trans-unit>
        <trans-unit id="74c0ac4de62bc9d3b7a85cce5fd828fd7bb4a2b0" translate="yes" xml:space="preserve">
          <source>This property is not used by &lt;code&gt;&lt;a href=&quot;client&quot;&gt;HTTP::Client&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Это свойство не используется &lt;code&gt;&lt;a href=&quot;client&quot;&gt;HTTP::Client&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c8794cafe5b797061ff826222c6c552391384571" translate="yes" xml:space="preserve">
          <source>This refers to the key type after brackets in &lt;code&gt;{} of &lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt; =&amp;gt; &lt;a href=&quot;../../int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Это относится к типу ключа после скобок в &lt;code&gt;{} of &lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt; =&amp;gt; &lt;a href=&quot;../../int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c7278b89ebc4f3fabb567a7bd24e0a5313fc445f" translate="yes" xml:space="preserve">
          <source>This refers to the part after brackets in &lt;code&gt;[] of &lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Это относится к части после скобок в &lt;code&gt;[] of &lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="697d7116d5f364c69ea8f55b62982b8f1f4059b9" translate="yes" xml:space="preserve">
          <source>This refers to the part before brackets in &lt;code&gt;MyArray{1, 2, 3}&lt;/code&gt;</source>
          <target state="translated">Это относится к части перед скобками в &lt;code&gt;MyArray{1, 2, 3}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7bc977bb2fc0b4c01d75516a5a45dde31530727e" translate="yes" xml:space="preserve">
          <source>This refers to the part before brackets in &lt;code&gt;MyHash{'a' =&amp;gt; 1, 'b' =&amp;gt; 2}&lt;/code&gt;</source>
          <target state="translated">Это относится к части перед скобками в &lt;code&gt;MyHash{'a' =&amp;gt; 1, 'b' =&amp;gt; 2}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e5f920536af30024ac5594d12b099fada1081a08" translate="yes" xml:space="preserve">
          <source>This refers to the value type after brackets in &lt;code&gt;{} of &lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt; =&amp;gt; &lt;a href=&quot;../../int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Это относится к типу значения после скобок в &lt;code&gt;{} of &lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt; =&amp;gt; &lt;a href=&quot;../../int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2e61f408c66d2ef06ad806d64eaa7b58ca292228" translate="yes" xml:space="preserve">
          <source>This relative is mostly used inside a project to refer to other files inside it. It is also used to refer to code from &lt;a href=&quot;../guides/testing&quot;&gt;specs&lt;/a&gt;:</source>
          <target state="translated">Этот родственник в основном используется внутри проекта для ссылки на другие файлы внутри него. Он также используется для ссылки на код из &lt;a href=&quot;../guides/testing&quot;&gt;спецификации&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="9ea34ae3b77ad69c508d28fc2b46f4924528c9b8" translate="yes" xml:space="preserve">
          <source>This report shows the user CPU time, system CPU time, the sum of the user and system CPU times, and the elapsed real time. The unit of time is seconds.</source>
          <target state="translated">В данном отчете отображается процессорное время пользователя,системное процессорное время,сумма процессорного времени пользователя и системы,а также прошедшее время в реальном времени.Единицей времени являются секунды.</target>
        </trans-unit>
        <trans-unit id="28c2258bbc71d1f49bb9629ab15d81f27a6243cb" translate="yes" xml:space="preserve">
          <source>This returns &lt;code&gt;true&lt;/code&gt; if this string has &lt;code&gt;'\\'&lt;/code&gt; in it.</source>
          <target state="translated">Возвращает &lt;code&gt;true&lt;/code&gt; , если в этой строке есть &lt;code&gt;'\\'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0d63ed5386acee7fbcae7bcc58193fbf54c6d7a4" translate="yes" xml:space="preserve">
          <source>This returns &lt;code&gt;true&lt;/code&gt; if this string has &lt;code&gt;'\\'&lt;/code&gt; in it. It might not be a back reference, but &lt;code&gt;'\\'&lt;/code&gt; is probably used for back references, so this check is faster than parsing the whole thing.</source>
          <target state="translated">Возвращает &lt;code&gt;true&lt;/code&gt; , если в этой строке есть &lt;code&gt;'\\'&lt;/code&gt; . Возможно, это не обратная ссылка, но, вероятно, для обратных ссылок используется &lt;code&gt;'\\'&lt;/code&gt; , так что эта проверка быстрее, чем разбор всего.</target>
        </trans-unit>
        <trans-unit id="be08ec13ad9411238deedacbc59aa2fdcd06dff9" translate="yes" xml:space="preserve">
          <source>This rule, and every following rule, will also be applied in methods other than &lt;code&gt;initialize&lt;/code&gt;. For example:</source>
          <target state="translated">Это правило и каждое последующее правило также будут применяться в методах, отличных от &lt;code&gt;initialize&lt;/code&gt; . Например:</target>
        </trans-unit>
        <trans-unit id="35fd6a2d0fbee4824cffb18179c1cc6fe1309793" translate="yes" xml:space="preserve">
          <source>This set must have fewer elements than the &lt;em&gt;other&lt;/em&gt; set, and all of elements in this set must be present in the &lt;em&gt;other&lt;/em&gt; set.</source>
          <target state="translated">Этот набор должен иметь меньше элементов, чем &lt;em&gt;другой&lt;/em&gt; набор, и все элементы этого набора должны присутствовать в &lt;em&gt;другом&lt;/em&gt; наборе.</target>
        </trans-unit>
        <trans-unit id="4e39714594b95b24fdb97211c25e93b7a6033812" translate="yes" xml:space="preserve">
          <source>This set must have the same or fewer elements than the &lt;em&gt;other&lt;/em&gt; set, and all of elements in this set must be present in the &lt;em&gt;other&lt;/em&gt; set.</source>
          <target state="translated">Этот набор должен иметь то же или меньшее количество элементов, чем &lt;em&gt;другой&lt;/em&gt; набор, и все элементы этого набора должны присутствовать в &lt;em&gt;другом&lt;/em&gt; наборе.</target>
        </trans-unit>
        <trans-unit id="cd46145a937322b3092ef850ea2e72579163510e" translate="yes" xml:space="preserve">
          <source>This setups up the GC, invokes your program, rescuing any handled exception, and then runs &lt;code&gt;at_exit&lt;/code&gt; handlers.</source>
          <target state="translated">Это настраивает GC, вызывает вашу программу, спасает любое обработанное исключение, а затем запускает обработчики &lt;code&gt;at_exit&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aff6a2d80bc83a410080ff7846bfd3daa91e2627" translate="yes" xml:space="preserve">
          <source>This signals to the scheduler that the fiber is eligible for being resumed the next time it has the opportunity to reschedule to an other fiber. There are no guarantees when that will happen.</source>
          <target state="translated">Это сигнализирует планировщику,что оптоволокно может быть возобновлено в следующий раз,когда у него появится возможность переназначения на другое волокно.Нет никаких гарантий,когда это произойдет.</target>
        </trans-unit>
        <trans-unit id="4d49f58b302655fd388385ae9fd8b219fde17efe" translate="yes" xml:space="preserve">
          <source>This sometimes leads to code that is more natural to read.</source>
          <target state="translated">Иногда это приводит к более естественному для чтения коду.</target>
        </trans-unit>
        <trans-unit id="93bbe2592bf3a8fdab8e221dd33651441190a20c" translate="yes" xml:space="preserve">
          <source>This style is used in the standard library. You can use it in your own project to make it familiar to other developers.</source>
          <target state="translated">Этот стиль используется в стандартной библиотеке.Вы можете использовать его в своем собственном проекте,чтобы познакомить с ним других разработчиков.</target>
        </trans-unit>
        <trans-unit id="e3e7e5d2187cbc2ccc0a5384d88c714acaa4e8d6" translate="yes" xml:space="preserve">
          <source>This takes time and, on the other hand, these libraries might not change as often as our application, so it looks like we may cache them and save time.</source>
          <target state="translated">Это занимает время и,с другой стороны,эти библиотеки могут меняться не так часто,как наше приложение,так что,похоже,мы можем кэшировать их и экономить время.</target>
        </trans-unit>
        <trans-unit id="f79ff816778bb65cd18c1cfa96c8948218bf293e" translate="yes" xml:space="preserve">
          <source>This tells Travis CI to generate your documentation.</source>
          <target state="translated">Это говорит Трэвису КИ,чтобы он создал вашу документацию.</target>
        </trans-unit>
        <trans-unit id="359fdc4110e121a56bf92d5d6db9ba14ec114d47" translate="yes" xml:space="preserve">
          <source>This tells Travis CI to run your tests. Accordingly with the outcome of this command, Travis CI will return a &lt;a href=&quot;https://docs.travis-ci.com/user/for-beginners/#breaking-the-build&quot;&gt;build status&lt;/a&gt; of &quot;passed&quot;, &quot;errored&quot;, &quot;failed&quot; or &quot;canceled&quot;.</source>
          <target state="translated">Это говорит Travis CI, чтобы запустить ваши тесты. В соответствии с результатом этой команды Travis CI вернет &lt;a href=&quot;https://docs.travis-ci.com/user/for-beginners/#breaking-the-build&quot;&gt;статус сборки&lt;/a&gt; &amp;laquo;пройден&amp;raquo;, &amp;laquo;с ошибкой&amp;raquo;, &amp;laquo;сбой&amp;raquo; или &amp;laquo;отменен&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="35c7ea27f4db8675a4d025c0b83e21b4e148643b" translate="yes" xml:space="preserve">
          <source>This time &lt;code&gt;Fiber.yield&lt;/code&gt; will tell the scheduler to execute the other fiber. This will print &quot;Hello!&quot; until the standard output blocks (the system call will tell us we have to wait until the output is ready), and then execution continues with the main fiber and the program exits. Here the standard output &lt;em&gt;might&lt;/em&gt; never block so the program will continue executing forever.</source>
          <target state="translated">На этот раз &lt;code&gt;Fiber.yield&lt;/code&gt; скажет планировщику выполнить другое волокно. Это напечатает &quot;Привет!&quot; до стандартных блоков вывода (системный вызов скажет нам, что мы должны ждать, пока вывод не будет готов), а затем выполнение продолжается с основным волокном и программа завершается. Здесь стандартный вывод &lt;em&gt;может&lt;/em&gt; никогда не блокироваться, поэтому программа будет выполняться вечно.</target>
        </trans-unit>
        <trans-unit id="71fb327098b7baf0cc66d1daba9db4e0db057454" translate="yes" xml:space="preserve">
          <source>This topic covers all things related to:</source>
          <target state="translated">Эта тема охватывает все,что связано с ней:</target>
        </trans-unit>
        <trans-unit id="a01b739b2d64e03fccf6df0598fa7fde0aa0b5d2" translate="yes" xml:space="preserve">
          <source>This type can also be expressed as &lt;code&gt;&lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt;[3]&lt;/code&gt; (only in type grammar). A typical use case is in combination with &lt;code&gt;uninitialized&lt;/code&gt;:</source>
          <target state="translated">Этот тип также может быть выражен как &lt;code&gt;&lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt;[3]&lt;/code&gt; (только в грамматике типа). Типичный вариант использования в сочетании с &lt;code&gt;uninitialized&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="6229a1a148d5519da2a6720bbf382ade9765c401" translate="yes" xml:space="preserve">
          <source>This uses floored division.</source>
          <target state="translated">Здесь используется половое деление.</target>
        </trans-unit>
        <trans-unit id="b7718aa3828a878d42553e8a71799c5eb9b69d5f" translate="yes" xml:space="preserve">
          <source>This uses truncated division.</source>
          <target state="translated">Здесь используется усеченное деление.</target>
        </trans-unit>
        <trans-unit id="16aca72f740ab8cf3e740de83d1220c1fdd6dc05" translate="yes" xml:space="preserve">
          <source>This way, you can group the different options in an easier to read way.</source>
          <target state="translated">Таким образом,вы можете сгруппировать различные опции более удобным для чтения способом.</target>
        </trans-unit>
        <trans-unit id="eaa64b75c35bfed1e3e6a283a8c2f966dab1cb82" translate="yes" xml:space="preserve">
          <source>This will generate a &lt;code&gt;.o&lt;/code&gt; (&lt;a href=&quot;http://en.wikipedia.org/wiki/Object_file&quot;&gt;Object file&lt;/a&gt;) and will print a line with a command to execute on the system we are trying to cross-compile to. For example:</source>
          <target state="translated">Это сгенерирует &lt;code&gt;.o&lt;/code&gt; ( &lt;a href=&quot;http://en.wikipedia.org/wiki/Object_file&quot;&gt;объектный файл&lt;/a&gt; ) и напечатает строку с командой для выполнения в системе, к которой мы пытаемся выполнить кросс-компиляцию. Например:</target>
        </trans-unit>
        <trans-unit id="8a3848df82fc2fd9b15053b5a8fb1d53ba4f2d64" translate="yes" xml:space="preserve">
          <source>This will initialize &lt;code&gt;@age&lt;/code&gt; to zero in every constructor. This is useful to avoid duplication, but also to avoid the &lt;code&gt;Nil&lt;/code&gt; type when reopening a class and adding instance variables to it.</source>
          <target state="translated">Это инициализирует &lt;code&gt;@age&lt;/code&gt; в ноль в каждом конструкторе. Это полезно во избежание дублирования, но также во избежание использования типа &lt;code&gt;Nil&lt;/code&gt; при повторном открытии класса и добавлении в него переменных экземпляра.</target>
        </trans-unit>
        <trans-unit id="f6862c62808e64a2961983e12fec5639b646a395" translate="yes" xml:space="preserve">
          <source>This will neither load the internal defaults nor the OS-provided MIME database, only the database at &lt;em&gt;filename&lt;/em&gt; (using &lt;code&gt;&lt;a href=&quot;mime#load_mime_database(io:IO):Nil-class-method&quot;&gt;.load_mime_database&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">Это не будет загружать ни внутренние значения по умолчанию, ни предоставленную ОС базу данных MIME, а только базу данных с &lt;em&gt;именем файла&lt;/em&gt; (используя &lt;code&gt;&lt;a href=&quot;mime#load_mime_database(io:IO):Nil-class-method&quot;&gt;.load_mime_database&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="8e4a064d6bf07aff1893264ade18bd386c01f8fd" translate="yes" xml:space="preserve">
          <source>This will raise &lt;code&gt;&lt;a href=&quot;divisionbyzeroerror&quot;&gt;DivisionByZeroError&lt;/a&gt;&lt;/code&gt; if rational is 0 and &lt;em&gt;other&lt;/em&gt; is negative.</source>
          <target state="translated">Это вызовет &lt;code&gt;&lt;a href=&quot;divisionbyzeroerror&quot;&gt;DivisionByZeroError&lt;/a&gt;&lt;/code&gt; , если рациональное значение равно 0, а &lt;em&gt;другое&lt;/em&gt; отрицательное.</target>
        </trans-unit>
        <trans-unit id="540e962c82e56e9933ab55514ce46937307ada13" translate="yes" xml:space="preserve">
          <source>This will raise an exception if rational is 0.</source>
          <target state="translated">Это вызовет исключение,если рационально-0.</target>
        </trans-unit>
        <trans-unit id="0d0cf7b07e430ad34c34e0cf85d620cc7694ee5a" translate="yes" xml:space="preserve">
          <source>This will set the exception's callstack if it hasn't been already. Re-raising a previously catched exception won't replace the callstack.</source>
          <target state="translated">Это установит стэк вызова исключения,если его еще не было.Повторное восхваление ранее пойманного исключения не заменит пакет вызовов.</target>
        </trans-unit>
        <trans-unit id="809c1055c5940964d4d7581463d92e0e6d06f1df" translate="yes" xml:space="preserve">
          <source>This will work for any type, as long as the argument is a pointer of that type (and, of course, as long as the function does fill the value the pointer is pointing to).</source>
          <target state="translated">Это будет работать для любого типа,пока аргумент является указателем этого типа (и,конечно,пока функция заполняет значение,на которое указывает указатель).</target>
        </trans-unit>
        <trans-unit id="fbfcd91687de411957f59850ee0cc89d23d975f4" translate="yes" xml:space="preserve">
          <source>This writes the severity in uppercase and left padded with enough space so all the severities fit</source>
          <target state="translated">Это пишет тяжесть в верхнем регистре и левой мягкой с достаточным пространством,так что все тяжести подходят.</target>
        </trans-unit>
        <trans-unit id="cf5b7c750a4b16617dfd7cff20be48990a9d7985" translate="yes" xml:space="preserve">
          <source>This:</source>
          <target state="translated">This:</target>
        </trans-unit>
        <trans-unit id="8a77bfd3db44e0aeb0a80c2f055eea2ff97f89d4" translate="yes" xml:space="preserve">
          <source>ThreadLocal</source>
          <target state="translated">ThreadLocal</target>
        </trans-unit>
        <trans-unit id="fbf56acd9949ce8c53320dc8f269c4b59f93aa99" translate="yes" xml:space="preserve">
          <source>ThreadLocal is used in the standard library to implement the runtime and shouldn't be needed or used outside it.</source>
          <target state="translated">ThreadLocal используется в стандартной библиотеке для реализации времени исполнения и не должен нуждаться или использоваться вне ее.</target>
        </trans-unit>
        <trans-unit id="a8e7ba2c5a63488f6f05a58bcd2c92172f79cbad" translate="yes" xml:space="preserve">
          <source>Three base operators test equality:</source>
          <target state="translated">Три базовых оператора тестируют равенство:</target>
        </trans-unit>
        <trans-unit id="998f079f3e9b6086578875da92b3d4bf7fe6c208" translate="yes" xml:space="preserve">
          <source>Thus, a &lt;code&gt;type&lt;/code&gt; declaration is useful for opaque types that are created by the C library you are wrapping. An example of this is the C &lt;code&gt;FILE&lt;/code&gt; type, which you can obtain with &lt;code&gt;fopen&lt;/code&gt;.</source>
          <target state="translated">Таким образом, объявление &lt;code&gt;type&lt;/code&gt; полезно для непрозрачных типов, которые создаются библиотекой C, которую вы упаковываете. Примером этого является тип C &lt;code&gt;FILE&lt;/code&gt; , который вы можете получить с помощью &lt;code&gt;fopen&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6c82e6dd86807ee3db07e3c82bec1ae1ce00b08b" translate="yes" xml:space="preserve">
          <source>Time</source>
          <target state="translated">Time</target>
        </trans-unit>
        <trans-unit id="fd6da341ee1e31055bdb0caea844b3bc49547757" translate="yes" xml:space="preserve">
          <source>Time Zones</source>
          <target state="translated">Часовые пояса</target>
        </trans-unit>
        <trans-unit id="45f7f84e23d3cbf45aa1ad361f6150ffb2c92505" translate="yes" xml:space="preserve">
          <source>Time#+</source>
          <target state="translated">Time#+</target>
        </trans-unit>
        <trans-unit id="82f05dbf9bd40d142582cbabaf13c9ec714f7fc8" translate="yes" xml:space="preserve">
          <source>Time#-</source>
          <target state="translated">Time#-</target>
        </trans-unit>
        <trans-unit id="59b32578d4ec6a3cc2791de03553ad374274f316" translate="yes" xml:space="preserve">
          <source>Time#==</source>
          <target state="translated">Time#==</target>
        </trans-unit>
        <trans-unit id="f2feb8d3a9f9729c7dd237750cf97897794db323" translate="yes" xml:space="preserve">
          <source>Time#date</source>
          <target state="translated">Time#date</target>
        </trans-unit>
        <trans-unit id="0b05268d69de72bf3cf71eb5d37bad28df9f4d08" translate="yes" xml:space="preserve">
          <source>Time#day</source>
          <target state="translated">Time#day</target>
        </trans-unit>
        <trans-unit id="05b0096476e0652794d07097242aab93643f47d1" translate="yes" xml:space="preserve">
          <source>Time#hash</source>
          <target state="translated">Time#hash</target>
        </trans-unit>
        <trans-unit id="bbe5b4f8a1918bd78d0f9bd714e6515621591498" translate="yes" xml:space="preserve">
          <source>Time#hour</source>
          <target state="translated">Time#hour</target>
        </trans-unit>
        <trans-unit id="f49e737bf31856a03111c5200f6835d9c041ed09" translate="yes" xml:space="preserve">
          <source>Time#in</source>
          <target state="translated">Time#in</target>
        </trans-unit>
        <trans-unit id="9a4fe8b3bc5da5b531b4d49404f6219c94b730de" translate="yes" xml:space="preserve">
          <source>Time#to_s</source>
          <target state="translated">Time#to_s</target>
        </trans-unit>
        <trans-unit id="d9d23eef1492cd8ad949d2ff8fad84b96a1a3b02" translate="yes" xml:space="preserve">
          <source>Time#utc?</source>
          <target state="translated">Time#utc?</target>
        </trans-unit>
        <trans-unit id="040f33dd2545d6fa394e0ef9c046c373098a5df7" translate="yes" xml:space="preserve">
          <source>Time#year</source>
          <target state="translated">Time#year</target>
        </trans-unit>
        <trans-unit id="31815efc02346bf97f32722d1e3c12ed1375078e" translate="yes" xml:space="preserve">
          <source>Time#zone</source>
          <target state="translated">Time#zone</target>
        </trans-unit>
        <trans-unit id="d69c277d397226ffd5d29be1efa076fab3595c89" translate="yes" xml:space="preserve">
          <source>Time.new</source>
          <target state="translated">Time.new</target>
        </trans-unit>
        <trans-unit id="e767cb22ffdfe0fac52dd6a3515aa1c63ca17a9f" translate="yes" xml:space="preserve">
          <source>Time.now</source>
          <target state="translated">Time.now</target>
        </trans-unit>
        <trans-unit id="21e0e4ac341fddd059f695dd40bcae69f90c407a" translate="yes" xml:space="preserve">
          <source>Time.unix</source>
          <target state="translated">Time.unix</target>
        </trans-unit>
        <trans-unit id="a9fcd04edaf1c5d8460989020bfddb6579a8bdbd" translate="yes" xml:space="preserve">
          <source>Time.utc</source>
          <target state="translated">Time.utc</target>
        </trans-unit>
        <trans-unit id="f44b0e0a08860f6a162180fdf57208b3bcce3d0d" translate="yes" xml:space="preserve">
          <source>Time::FloatingTimeConversionError</source>
          <target state="translated">Time::FloatingTimeConversionError</target>
        </trans-unit>
        <trans-unit id="7a098ad63e917713957bcae62de5cd5c1c449249" translate="yes" xml:space="preserve">
          <source>Time::Format</source>
          <target state="translated">Time::Format</target>
        </trans-unit>
        <trans-unit id="56710586bed64419abaf48d0f831ee9464ec508c" translate="yes" xml:space="preserve">
          <source>Time::Format::Error</source>
          <target state="translated">Time::Format::Error</target>
        </trans-unit>
        <trans-unit id="baa031128f6b2507a115abee138b00d81a633515" translate="yes" xml:space="preserve">
          <source>Time::Location</source>
          <target state="translated">Time::Location</target>
        </trans-unit>
        <trans-unit id="dc6a2efc72278c880fc60060c2d08d93e23c1e28" translate="yes" xml:space="preserve">
          <source>Time::Location::InvalidLocationNameError</source>
          <target state="translated">Time::Location::InvalidLocationNameError</target>
        </trans-unit>
        <trans-unit id="f91332a9279dc7d848b29b5473e36752d4953473" translate="yes" xml:space="preserve">
          <source>Time::Location::InvalidLocationNameError#name</source>
          <target state="translated">Time::Location::InvalidLocationNameError#name</target>
        </trans-unit>
        <trans-unit id="a948227bdbd25b65a4e9af5b7b937de5629c59d7" translate="yes" xml:space="preserve">
          <source>Time::Location::InvalidLocationNameError#source</source>
          <target state="translated">Time::Location::InvalidLocationNameError#source</target>
        </trans-unit>
        <trans-unit id="4ea7211d3230d3f1ecdc1167c8550e981df7a4db" translate="yes" xml:space="preserve">
          <source>Time::Location::InvalidLocationNameError.new</source>
          <target state="translated">Time::Location::InvalidLocationNameError.new</target>
        </trans-unit>
        <trans-unit id="0fdcacac6a1e9187d91ce20efc85545810f229dd" translate="yes" xml:space="preserve">
          <source>Time::Location::InvalidTZDataError</source>
          <target state="translated">Time::Location::InvalidTZDataError</target>
        </trans-unit>
        <trans-unit id="bc216615b11bf27a3151249129f35639ad5d24a5" translate="yes" xml:space="preserve">
          <source>Time::Location::InvalidTZDataError.initialize</source>
          <target state="translated">Time::Location::InvalidTZDataError.initialize</target>
        </trans-unit>
        <trans-unit id="65d4d84ecc4be644dad457ad4fafa880dd536fb7" translate="yes" xml:space="preserve">
          <source>Time::Location::InvalidTimezoneOffsetError</source>
          <target state="translated">Time::Location::InvalidTimezoneOffsetError</target>
        </trans-unit>
        <trans-unit id="19f9453978106d020ce7026eeab03b75ae3add7c" translate="yes" xml:space="preserve">
          <source>Time::Location::InvalidTimezoneOffsetError.new</source>
          <target state="translated">Time::Location::InvalidTimezoneOffsetError.new</target>
        </trans-unit>
        <trans-unit id="29a9bbf22513f625f690aa9a2dd33414751923ef" translate="yes" xml:space="preserve">
          <source>Time::Location::Zone</source>
          <target state="translated">Time::Location::Zone</target>
        </trans-unit>
        <trans-unit id="2be65a98e315e2bb7f266f763512cf37b737e902" translate="yes" xml:space="preserve">
          <source>Time::MonthSpan</source>
          <target state="translated">Time::MonthSpan</target>
        </trans-unit>
        <trans-unit id="8583045f3f38250efb8a738945625c5346eda8aa" translate="yes" xml:space="preserve">
          <source>Time::Span</source>
          <target state="translated">Time::Span</target>
        </trans-unit>
        <trans-unit id="cdc7c35cf55f4f5cb04b709316c1a34f12493114" translate="yes" xml:space="preserve">
          <source>Timeout keyword for use in &lt;code&gt;select&lt;/code&gt;.</source>
          <target state="translated">Ключевое слово тайм-аута для использования в &lt;code&gt;select&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5b1360323be02bac91d3fb16b5e60a2642cebe3c" translate="yes" xml:space="preserve">
          <source>Tms#clone</source>
          <target state="translated">Tms#clone</target>
        </trans-unit>
        <trans-unit id="b6b38b40d8ade3a34b035c71c1043de1e9b15483" translate="yes" xml:space="preserve">
          <source>Tms#copy_with</source>
          <target state="translated">Tms#copy_with</target>
        </trans-unit>
        <trans-unit id="237d7decf7e22ee908bb0f7d2580488ded837f85" translate="yes" xml:space="preserve">
          <source>Tms#cstime</source>
          <target state="translated">Tms#cstime</target>
        </trans-unit>
        <trans-unit id="2fc0591049ba9e9822a714f7d969af278d50111d" translate="yes" xml:space="preserve">
          <source>Tms#cutime</source>
          <target state="translated">Tms#cutime</target>
        </trans-unit>
        <trans-unit id="8422313ae0bab325ba717d9618a6e293996e28c7" translate="yes" xml:space="preserve">
          <source>Tms#stime</source>
          <target state="translated">Tms#stime</target>
        </trans-unit>
        <trans-unit id="5662c42e96a18176be559403c86b70887bc97b8f" translate="yes" xml:space="preserve">
          <source>Tms#utime</source>
          <target state="translated">Tms#utime</target>
        </trans-unit>
        <trans-unit id="f34a4c31f00cf9686ba812c79c21089d8e554f3b" translate="yes" xml:space="preserve">
          <source>Tms.new</source>
          <target state="translated">Tms.new</target>
        </trans-unit>
        <trans-unit id="3e157859d37349b0562be4bb6321220fc506e6b4" translate="yes" xml:space="preserve">
          <source>To access a relational database you will need a shard designed for the database server you want to use. The package &lt;a href=&quot;https://github.com/crystal-lang/crystal-db&quot;&gt;crystal-lang/crystal-db&lt;/a&gt; offers a unified api across different drivers.</source>
          <target state="translated">Для доступа к реляционной базе данных вам понадобится шард, разработанный для сервера базы данных, который вы хотите использовать. Пакет &lt;a href=&quot;https://github.com/crystal-lang/crystal-db&quot;&gt;crystal-lang / crystal-db&lt;/a&gt; предлагает унифицированный API для разных драйверов.</target>
        </trans-unit>
        <trans-unit id="afd01e7ef4d7b6612c6ee2c6d02466e6f5171167" translate="yes" xml:space="preserve">
          <source>To access the rescued exception you can specify a variable in the &lt;code&gt;rescue&lt;/code&gt; clause:</source>
          <target state="translated">Чтобы получить доступ к спасенному исключению, вы можете указать переменную в предложении &lt;code&gt;rescue&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="485f36f282d6385c195446ef9544721f3cd84e71" translate="yes" xml:space="preserve">
          <source>To accomplish this we are going to use a &lt;a href=&quot;https://docs.docker.com/engine/reference/builder/&quot;&gt;Dockerfile&lt;/a&gt;:</source>
          <target state="translated">Для этого мы воспользуемся &lt;a href=&quot;https://docs.docker.com/engine/reference/builder/&quot;&gt;Dockerfile&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="d11efe79bc139c0303e61a991e7d650d3715247a" translate="yes" xml:space="preserve">
          <source>To achieve concurrency, Crystal has fibers. A fiber is in a way similar to an operating system thread except that it's much more lightweight and its execution is managed internally by the process. So, a program will spawn multiple fibers and Crystal will make sure to execute them when the time is right.</source>
          <target state="translated">Для достижения совпадения Кристалл имеет волокна.Волокно похоже на нить операционной системы,за исключением того,что оно намного легче,и его исполнение управляется внутренним процессом.Таким образом,программа породит несколько волокон,и Crystal позаботится о том,чтобы выполнить их,когда придет время.</target>
        </trans-unit>
        <trans-unit id="67026b084ea2754e35875e26a4f20b44f35af95e" translate="yes" xml:space="preserve">
          <source>To add a page, create a markdown file in the desired location. Example: &lt;code&gt;overview/hello_world.md&lt;/code&gt;. Then, add a link in the &lt;code&gt;SUMMARY.md&lt;/code&gt; file which acts as the navigation for the language reference.</source>
          <target state="translated">Чтобы добавить страницу, создайте файл уценки в нужном месте. Пример: &lt;code&gt;overview/hello_world.md&lt;/code&gt; . Затем добавьте ссылку в файле &lt;code&gt;SUMMARY.md&lt;/code&gt; , которая служит навигацией для ссылки на язык.</target>
        </trans-unit>
        <trans-unit id="0b64c6371e377e492837b9076a1171925657b851" translate="yes" xml:space="preserve">
          <source>To add structured information to the message you can use the &lt;code&gt;&lt;a href=&quot;log/context&quot;&gt;Log::Context&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Чтобы добавить структурированную информацию в сообщение, вы можете использовать &lt;code&gt;&lt;a href=&quot;log/context&quot;&gt;Log::Context&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1fcf706c2c28fa515134ca8b1587dbba1a669bda" translate="yes" xml:space="preserve">
          <source>To address this issues usually a connection pool is a neat solution.</source>
          <target state="translated">Для решения этих проблем обычно используется аккуратный пул соединений.</target>
        </trans-unit>
        <trans-unit id="f68c28137aed34c8af3b6b0d8658e573eb903aa1" translate="yes" xml:space="preserve">
          <source>To automatically link to methods in other types, do &lt;code&gt;OtherType#method(arg1, arg2)&lt;/code&gt; or just &lt;code&gt;OtherType#method&lt;/code&gt;, and enclose it with single backticks.</source>
          <target state="translated">Чтобы автоматически связать методы с другими типами, выполните &lt;code&gt;OtherType#method(arg1, arg2)&lt;/code&gt; или просто &lt;code&gt;OtherType#method&lt;/code&gt; и заключите его в одинарные обратные метки.</target>
        </trans-unit>
        <trans-unit id="581260c43f5d38d9836815f60285c1c4b50711b8" translate="yes" xml:space="preserve">
          <source>To automatically link to methods of the currently documented type, use a hash like &lt;code&gt;#horns&lt;/code&gt; or &lt;code&gt;#index(char)&lt;/code&gt;, and enclose it with single backticks.</source>
          <target state="translated">Чтобы автоматически ссылаться на методы текущего документированного типа, используйте хеш, такой как &lt;code&gt;#horns&lt;/code&gt; или &lt;code&gt;#index(char)&lt;/code&gt; , и заключайте его в одинарные обратные ноты.</target>
        </trans-unit>
        <trans-unit id="1b0c5080015c4d51b4b12f087aef38376e409c4f" translate="yes" xml:space="preserve">
          <source>To automatically link to other types, enclose them with single backticks.</source>
          <target state="translated">Чтобы автоматически связываться с другими типами,приложите их с помощью одинарных черных фишек.</target>
        </trans-unit>
        <trans-unit id="5538505ba55a925f0515271f09e67414b274967a" translate="yes" xml:space="preserve">
          <source>To avoid &lt;a href=&quot;https://owasp.org/www-community/attacks/SQL_Injection&quot;&gt;SQL injection&lt;/a&gt; values can be provided as query parameters. The syntax for using query parameters depends on the database driver because they are typically just passed through to the database. MySQL uses &lt;code&gt;?&lt;/code&gt; for parameter expansion and assignment is based on argument order. PostgreSQL uses &lt;code&gt;$n&lt;/code&gt; where &lt;code&gt;n&lt;/code&gt; is the ordinal number of the argument (starting with 1).</source>
          <target state="translated">Чтобы избежать &lt;a href=&quot;https://owasp.org/www-community/attacks/SQL_Injection&quot;&gt;SQL-инъекции,&lt;/a&gt; значения могут быть предоставлены как параметры запроса. Синтаксис использования параметров запроса зависит от драйвера базы данных, поскольку они обычно просто передаются в базу данных. MySQL использует &lt;code&gt;?&lt;/code&gt; для раскрытия и назначения параметров зависит от порядка аргументов. PostgreSQL использует &lt;code&gt;$n&lt;/code&gt; где &lt;code&gt;n&lt;/code&gt; - порядковый номер аргумента (начиная с 1).</target>
        </trans-unit>
        <trans-unit id="4c0b6097d8e06f6d4ca904661bd25a30521d1f51" translate="yes" xml:space="preserve">
          <source>To avoid all this boilerplate, the standard library provides a &lt;code&gt;spawn&lt;/code&gt; macro that accepts a call expression and basically rewrites it to do the above. Using it, we end up with:</source>
          <target state="translated">Чтобы избежать всего этого стандартного шаблона, стандартная библиотека предоставляет &lt;code&gt;spawn&lt;/code&gt; - макрос, который принимает выражение вызова и в основном переписывает его для выполнения вышеприведенного. Используя его, мы получаем:</target>
        </trans-unit>
        <trans-unit id="ba2c1ad65898fb4badaeeacba3a01797c503475c" translate="yes" xml:space="preserve">
          <source>To avoid building LLVM from source (which can take a long time), you can first install it from binary packages if you don't have it installed yet:</source>
          <target state="translated">Чтобы избежать сборки LLVM из исходных текстов (что может занять много времени),вы можете сначала установить ее из бинарных пакетов,если она еще не установлена:</target>
        </trans-unit>
        <trans-unit id="f7f543192a4e6afdf161421377c7d153c8ec5f89" translate="yes" xml:space="preserve">
          <source>To avoid sql injection use parameters to submit data</source>
          <target state="translated">Чтобы избежать инъекций кв.м.параметры использования для представления данных</target>
        </trans-unit>
        <trans-unit id="8b6fd1bdb4498ebccf26ab096a8e4ad5d4c1e3fe" translate="yes" xml:space="preserve">
          <source>To avoid this initialization you can use &lt;code&gt;uninitialized&lt;/code&gt;:</source>
          <target state="translated">Чтобы избежать этой инициализации, вы можете использовать &lt;code&gt;uninitialized&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="3b407f439ed92707a8a3b7a8453a6a3a14dbcf57" translate="yes" xml:space="preserve">
          <source>To avoid this, command literals should generally not be used with interpolated user input. &lt;a href=&quot;https://crystal-lang.org/api/latest/Process.html&quot;&gt;&lt;code&gt;Process&lt;/code&gt;&lt;/a&gt; from the standard library offers a safe way to provide user input as command arguments:</source>
          <target state="translated">Чтобы избежать этого, командные литералы, как правило, не должны использоваться с интерполированным пользовательским вводом. &lt;a href=&quot;https://crystal-lang.org/api/latest/Process.html&quot;&gt; &lt;code&gt;Process&lt;/code&gt; &lt;/a&gt; из стандартной библиотеки предлагает безопасный способ предоставления пользовательского ввода в качестве аргументов команды:</target>
        </trans-unit>
        <trans-unit id="b62a2f24708e08a5a378dfd1f86978c3a1616b1b" translate="yes" xml:space="preserve">
          <source>To capture a block you must specify it as a method's block argument, give it a name and specify the input and output types. For example:</source>
          <target state="translated">Для захвата блока необходимо указать его в качестве аргумента блока метода,дать ему имя и указать входной и выходной типы.Например:</target>
        </trans-unit>
        <trans-unit id="160feb3e042b4da9fdc2ead43043bf7e99340f12" translate="yes" xml:space="preserve">
          <source>To change how individual instance variables are parsed and serialized, the annotation &lt;code&gt;&lt;a href=&quot;field&quot;&gt;JSON::Field&lt;/a&gt;&lt;/code&gt; can be placed on the instance variable. Annotating property, getter and setter macros is also allowed.</source>
          <target state="translated">Чтобы изменить способ анализа и сериализации отдельных переменных экземпляра, в переменную экземпляра можно поместить аннотацию &lt;code&gt;&lt;a href=&quot;field&quot;&gt;JSON::Field&lt;/a&gt;&lt;/code&gt; . Также допускается аннотирование свойств, макросов get и setter.</target>
        </trans-unit>
        <trans-unit id="1ee29fe879b2d99217a00125d95417eef2ee23ca" translate="yes" xml:space="preserve">
          <source>To change how individual instance variables are parsed and serialized, the annotation &lt;code&gt;&lt;a href=&quot;field&quot;&gt;YAML::Field&lt;/a&gt;&lt;/code&gt; can be placed on the instance variable. Annotating property, getter and setter macros is also allowed.</source>
          <target state="translated">Чтобы изменить способ анализа и сериализации отдельных переменных экземпляра, в переменную экземпляра можно поместить аннотацию &lt;code&gt;&lt;a href=&quot;field&quot;&gt;YAML::Field&lt;/a&gt;&lt;/code&gt; . Также допускается аннотирование свойств, макросов get и setter.</target>
        </trans-unit>
        <trans-unit id="a8ab23358f7d8d3dae6e24847de5cb10278825ac" translate="yes" xml:space="preserve">
          <source>To change the background color, the following methods are available:</source>
          <target state="translated">Для изменения цвета фона доступны следующие методы:</target>
        </trans-unit>
        <trans-unit id="4163aca474633e5717845a8aebd70e703b0a1f2e" translate="yes" xml:space="preserve">
          <source>To change the level and sources change the environment variable value:</source>
          <target state="translated">Для изменения уровня и источников изменить значение переменной окружения:</target>
        </trans-unit>
        <trans-unit id="dcf9239dd07dc7a3b710ae0004aa9dd56dd5b6c3" translate="yes" xml:space="preserve">
          <source>To check if your code is formatted correctly, or to check if using the formatter wouldn't produce any changes, simply add &lt;code&gt;--check&lt;/code&gt; to the end of this command.</source>
          <target state="translated">Чтобы проверить, правильно ли отформатирован ваш код, или чтобы убедиться, что использование средства форматирования не приведет к каким-либо изменениям, просто добавьте &lt;code&gt;--check&lt;/code&gt; в конец этой команды.</target>
        </trans-unit>
        <trans-unit id="0bd470d9cfaf6bbd3411722b1e8f56b0dd5d4031" translate="yes" xml:space="preserve">
          <source>To compile and run a program in a single shot, invoke &lt;a href=&quot;#crystal-run&quot;&gt;&lt;code&gt;crystal run&lt;/code&gt;&lt;/a&gt; with a single filename:</source>
          <target state="translated">Чтобы скомпилировать и запустить программу за один раз, вызовите &lt;a href=&quot;#crystal-run&quot;&gt; &lt;code&gt;crystal run&lt;/code&gt; &lt;/a&gt; с одним именем файла:</target>
        </trans-unit>
        <trans-unit id="ee5e4fe90a5757a251d6078cc3599bc18d661c5e" translate="yes" xml:space="preserve">
          <source>To create CSV data, check &lt;code&gt;&lt;a href=&quot;csv#build(separator:Char=DEFAULT_SEPARATOR,quote_char:Char=DEFAULT_QUOTE_CHAR,quoting:Builder::Quoting=Builder::Quoting::RFC,&amp;amp;):String-class-method&quot;&gt;CSV#build&lt;/a&gt;&lt;/code&gt; and the &lt;code&gt;&lt;a href=&quot;csv/builder&quot;&gt;CSV::Builder&lt;/a&gt;&lt;/code&gt; class.</source>
          <target state="translated">Чтобы создать данные CSV, проверьте &lt;code&gt;&lt;a href=&quot;csv#build(separator:Char=DEFAULT_SEPARATOR,quote_char:Char=DEFAULT_QUOTE_CHAR,quoting:Builder::Quoting=Builder::Quoting::RFC,&amp;amp;):String-class-method&quot;&gt;CSV#build&lt;/a&gt;&lt;/code&gt; и класс &lt;code&gt;&lt;a href=&quot;csv/builder&quot;&gt;CSV::Builder&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="44f2e55e263cca82d33245736b0aa7d4658e8c9f" translate="yes" xml:space="preserve">
          <source>To create CSV data, check &lt;code&gt;&lt;a href=&quot;csv#build(separator:Char=DEFAULT_SEPARATOR,quote_char:Char=DEFAULT_QUOTE_CHAR,quoting:Builder::Quoting=Builder::Quoting::RFC,&amp;amp;block):String-class-method&quot;&gt;CSV#build&lt;/a&gt;&lt;/code&gt; and the &lt;code&gt;&lt;a href=&quot;csv/builder&quot;&gt;CSV::Builder&lt;/a&gt;&lt;/code&gt; class.</source>
          <target state="translated">Чтобы создать данные CSV, проверьте &lt;code&gt;&lt;a href=&quot;csv#build(separator:Char=DEFAULT_SEPARATOR,quote_char:Char=DEFAULT_QUOTE_CHAR,quoting:Builder::Quoting=Builder::Quoting::RFC,&amp;amp;block):String-class-method&quot;&gt;CSV#build&lt;/a&gt;&lt;/code&gt; и класс &lt;code&gt;&lt;a href=&quot;csv/builder&quot;&gt;CSV::Builder&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1da599af8bc9b4e0cbb7f31d925a8a7cb6b6a0f3" translate="yes" xml:space="preserve">
          <source>To create a &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; with embedded expressions, you can use string interpolation:</source>
          <target state="translated">Чтобы создать &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; со встроенными выражениями, вы можете использовать интерполяцию строк:</target>
        </trans-unit>
        <trans-unit id="74bff9cf19307860dba9215ea04d96d1210e0995" translate="yes" xml:space="preserve">
          <source>To create a method that accepts a type name, rather than an instance of a type, append &lt;code&gt;.class&lt;/code&gt; to a free variable in the type restriction:</source>
          <target state="translated">Чтобы создать метод, который принимает имя типа, а не экземпляр типа, добавьте &lt;code&gt;.class&lt;/code&gt; к свободной переменной в ограничении типа:</target>
        </trans-unit>
        <trans-unit id="c822a10e2a69e24f65e61788603a1e03389c38e6" translate="yes" xml:space="preserve">
          <source>To create an empty tuple use &lt;a href=&quot;https://crystal-lang.org/api/Tuple.html#new%28%2Aargs%3A%2AT%29-class-method&quot;&gt;Tuple.new&lt;/a&gt;.</source>
          <target state="translated">Для создания пустого кортежа используйте &lt;a href=&quot;https://crystal-lang.org/api/Tuple.html#new%28%2Aargs%3A%2AT%29-class-method&quot;&gt;Tuple.new&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8875b0739c4c85a3fbe08d2001dc0bd7dd888845" translate="yes" xml:space="preserve">
          <source>To create an instance of a struct use &lt;code&gt;new&lt;/code&gt;:</source>
          <target state="translated">Чтобы создать экземпляр структуры, используйте &lt;code&gt;new&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="ff87c259e02405c350bf039b75adf461c67217e4" translate="yes" xml:space="preserve">
          <source>To create an instance of a union use &lt;code&gt;new&lt;/code&gt;:</source>
          <target state="translated">Чтобы создать экземпляр объединения, используйте &lt;code&gt;new&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="350576382e03e71cf1d7dddb1d7d574b2c7d0619" translate="yes" xml:space="preserve">
          <source>To define a custom exception type, just subclass from &lt;a href=&quot;http://crystal-lang.org/api/Exception.html&quot;&gt;Exception&lt;/a&gt;:</source>
          <target state="translated">Чтобы определить пользовательский тип исключения, просто создайте подкласс из &lt;a href=&quot;http://crystal-lang.org/api/Exception.html&quot;&gt;Exception&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="99d09b37f33a49d1e11a96eff487e9e19489b722" translate="yes" xml:space="preserve">
          <source>To define a flag, simply use the &lt;code&gt;--define&lt;/code&gt; or &lt;code&gt;-D&lt;/code&gt; option, like so:</source>
          <target state="translated">Чтобы определить флаг, просто используйте параметр &lt;code&gt;--define&lt;/code&gt; или &lt;code&gt;-D&lt;/code&gt; , например так:</target>
        </trans-unit>
        <trans-unit id="157c11d641b035bf1f8f85fd5664cf15e55f25af" translate="yes" xml:space="preserve">
          <source>To define a method that receives a block, simply use &lt;code&gt;yield&lt;/code&gt; inside it and the compiler will know. You can make this more evident by declaring a dummy block argument, indicated as a last argument prefixed with ampersand (&lt;code&gt;&amp;amp;&lt;/code&gt;):</source>
          <target state="translated">Чтобы определить метод, который получает блок, просто используйте &lt;code&gt;yield&lt;/code&gt; внутри него, и компилятор узнает. Вы можете сделать это более очевидным, объявив фиктивный аргумент блока, обозначенный как последний аргумент с префиксом амперсанда ( &lt;code&gt;&amp;amp;&lt;/code&gt; ):</target>
        </trans-unit>
        <trans-unit id="8b22016984dbb7347b880cb3c69445ba7cb4dd72" translate="yes" xml:space="preserve">
          <source>To denote a Proc type you can write:</source>
          <target state="translated">Чтобы обозначить тип Proc,вы можете написать:</target>
        </trans-unit>
        <trans-unit id="7550aab501a1c8caaa7d7d6ad482e4e9849b0dc6" translate="yes" xml:space="preserve">
          <source>To denote a heredoc without interpolation or escapes, the opening heredoc identifier is enclosed in single quotes:</source>
          <target state="translated">Для обозначения гередока без интерполяции или экранирования,идентификатор открывающего гередока заключен в одиночные кавычки:</target>
        </trans-unit>
        <trans-unit id="867f43768b0ef892faffb539b98358d23d37336f" translate="yes" xml:space="preserve">
          <source>To denote a named tuple type you can write:</source>
          <target state="translated">Для обозначения именованного типа кортежа можно написать:</target>
        </trans-unit>
        <trans-unit id="bfcf8fce49c52dfd01caebb8edf932202a5222a3" translate="yes" xml:space="preserve">
          <source>To denote a tuple type you can write:</source>
          <target state="translated">Для обозначения типа кортежа можно написать:</target>
        </trans-unit>
        <trans-unit id="874d6e0e60d2b081647b4a3151910755d832a726" translate="yes" xml:space="preserve">
          <source>To easily install Crystal on Mac you can use &lt;a href=&quot;http://brew.sh/&quot;&gt;Homebrew&lt;/a&gt;.</source>
          <target state="translated">Чтобы легко установить Crystal на Mac, вы можете использовать &lt;a href=&quot;http://brew.sh/&quot;&gt;Homebrew&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3a3fa055e9dd3433646539ae53ec5d897352e5be" translate="yes" xml:space="preserve">
          <source>To easily install Crystal on a Linux distribution you can use &lt;a href=&quot;http://linuxbrew.sh/&quot;&gt;Linuxbrew&lt;/a&gt;.</source>
          <target state="translated">Чтобы легко установить Crystal в дистрибутив Linux, вы можете использовать &lt;a href=&quot;http://linuxbrew.sh/&quot;&gt;Linuxbrew&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c154d82a6009b78a7be6f3cf9c32009f998413fd" translate="yes" xml:space="preserve">
          <source>To easily install Crystal on a Linux distribution you can use &lt;a href=&quot;https://snapcraft.io/crystal&quot;&gt;Snap&lt;/a&gt;. See the &lt;a href=&quot;https://crystal-lang.org/2019/06/19/snapcraft-summit-montreal.html&quot;&gt;blog post&lt;/a&gt; for additional information.</source>
          <target state="translated">Чтобы легко установить Crystal в дистрибутив Linux, вы можете использовать &lt;a href=&quot;https://snapcraft.io/crystal&quot;&gt;Snap&lt;/a&gt; . Смотрите &lt;a href=&quot;https://crystal-lang.org/2019/06/19/snapcraft-summit-montreal.html&quot;&gt;сообщение&lt;/a&gt; в блоге для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="28c3747ada5d17d819f9d3db87e61e5c3e1bcc22" translate="yes" xml:space="preserve">
          <source>To ensure the comparison is also true for local wall clock, both date-times need to be transformed to the same time zone.</source>
          <target state="translated">Для того,чтобы сравнение было верным и для местных настенных часов,оба дата-времени должны быть преобразованы в один и тот же часовой пояс.</target>
        </trans-unit>
        <trans-unit id="650afee4ead30a5ced59297b61e986072d1af295" translate="yes" xml:space="preserve">
          <source>To establish certain contexts - think &lt;em&gt;empty array&lt;/em&gt; versus &lt;em&gt;array with elements&lt;/em&gt; - the &lt;code&gt;context&lt;/code&gt; method may be used to communicate this to the reader. It has a different name, but behaves exactly like &lt;code&gt;describe&lt;/code&gt;.</source>
          <target state="translated">Чтобы установить определенные контексты - например, &lt;em&gt;пустой массив&lt;/em&gt; или &lt;em&gt;массив с элементами&lt;/em&gt; - можно использовать метод &lt;code&gt;context&lt;/code&gt; чтобы сообщить об этом читателю. Он имеет другое название, но ведет себя точно как &lt;code&gt;describe&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a8d04d4c0059669e92d410cfdc7170b492ceca11" translate="yes" xml:space="preserve">
          <source>To execute sql statements you can use &lt;code&gt;Database#exec&lt;/code&gt;</source>
          <target state="translated">Для выполнения операторов SQL вы можете использовать &lt;code&gt;Database#exec&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0f3c3d6cbb8ad73ed8673d578519609dac05fb0b" translate="yes" xml:space="preserve">
          <source>To format a single file:</source>
          <target state="translated">Для форматирования одного файла:</target>
        </trans-unit>
        <trans-unit id="dd173ad1b26365da78f9985ee0d8bc437bbc72e8" translate="yes" xml:space="preserve">
          <source>To format all &lt;code&gt;.cr&lt;/code&gt; files within a directory:</source>
          <target state="translated">Чтобы отформатировать все файлы &lt;code&gt;.cr&lt;/code&gt; в каталоге:</target>
        </trans-unit>
        <trans-unit id="d47e60f3725574c7685439648f00bc798ba7db18" translate="yes" xml:space="preserve">
          <source>To forward captured blocks, you use a block argument, prefixing an expression with &lt;code&gt;&amp;amp;&lt;/code&gt;:</source>
          <target state="translated">Для пересылки захваченных блоков вы используете аргумент блока, добавляя к выражению префикс &lt;code&gt;&amp;amp;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="ff327c417e5ee0740965ae1df0f9c2cc10df560e" translate="yes" xml:space="preserve">
          <source>To forward non-captured blocks, you must use &lt;code&gt;yield&lt;/code&gt;:</source>
          <target state="translated">Чтобы переслать не захваченные блоки, вы должны использовать &lt;code&gt;yield&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="ef3de580f601e1866d1a7c3fc757cd95fea67d7b" translate="yes" xml:space="preserve">
          <source>To generate documentation for a project, invoke &lt;code&gt;crystal docs&lt;/code&gt;. By default this will create a &lt;code&gt;docs&lt;/code&gt; directory, with a &lt;code&gt;docs/index.html&lt;/code&gt; entry point. For more details see &lt;a href=&quot;../using_the_compiler#crystal-docs&quot;&gt;Using the compiler &amp;ndash; Creating documentation&lt;/a&gt;.</source>
          <target state="translated">Чтобы создать документацию для проекта, вызовите &lt;code&gt;crystal docs&lt;/code&gt; . По умолчанию это создаст каталог &lt;code&gt;docs&lt;/code&gt; с точкой входа &lt;code&gt;docs/index.html&lt;/code&gt; . Для получения дополнительной информации см. &lt;a href=&quot;../using_the_compiler#crystal-docs&quot;&gt;Использование компилятора - Создание документации&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="248654c867c4cd2b5e014eb06664ec1f3e491240" translate="yes" xml:space="preserve">
          <source>To get the &lt;code&gt;--target&lt;/code&gt; flags you can execute &lt;code&gt;llvm-config --host-target&lt;/code&gt; using an installed LLVM 3.5. For example on a Linux it could say &quot;x86_64-unknown-linux-gnu&quot;.</source>
          <target state="translated">Чтобы получить флаги &lt;code&gt;--target&lt;/code&gt; , вы можете выполнить &lt;code&gt;llvm-config --host-target&lt;/code&gt; , используя установленный LLVM 3.5. Например, в Linux он может сказать &amp;laquo;x86_64-unknown-linux-gnu&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="e1140041b350e878a7ace6222c96112b7b9f8fd1" translate="yes" xml:space="preserve">
          <source>To get the underlying value you invoke &lt;code&gt;value&lt;/code&gt; on it:</source>
          <target state="translated">Чтобы получить базовое значение, вы вызываете &lt;code&gt;value&lt;/code&gt; на нем:</target>
        </trans-unit>
        <trans-unit id="a2ed1097eb466585fe9e191ffed061144745c522" translate="yes" xml:space="preserve">
          <source>To get the underlying value you invoke value on it:</source>
          <target state="translated">Чтобы получить базовую стоимость,на которую вы ссылаетесь:</target>
        </trans-unit>
        <trans-unit id="1f7d011bd62bfc3a881899fea0b04442b2c5f1d9" translate="yes" xml:space="preserve">
          <source>To have something returned, either specify the return type or use an underscore to allow any return type:</source>
          <target state="translated">Чтобы что-то вернуть,либо укажите тип возврата,либо используйте подчеркивание,чтобы разрешить любой тип возврата:</target>
        </trans-unit>
        <trans-unit id="cffc6af7d2caf539b014cbd60280db9027e87ed1" translate="yes" xml:space="preserve">
          <source>To implement an &lt;code&gt;&lt;a href=&quot;iterator&quot;&gt;Iterator&lt;/a&gt;&lt;/code&gt; you need to define a &lt;code&gt;&lt;a href=&quot;iterator#next-instance-method&quot;&gt;#next&lt;/a&gt;&lt;/code&gt; method that must return the next element in the sequence or &lt;code&gt;&lt;a href=&quot;iterator/stop#INSTANCE&quot;&gt;Iterator::Stop::INSTANCE&lt;/a&gt;&lt;/code&gt;, which signals the end of the sequence (you can invoke &lt;code&gt;&lt;a href=&quot;iterator#stop-instance-method&quot;&gt;#stop&lt;/a&gt;&lt;/code&gt; inside an iterator as a shortcut).</source>
          <target state="translated">Чтобы реализовать &lt;code&gt;&lt;a href=&quot;iterator&quot;&gt;Iterator&lt;/a&gt;&lt;/code&gt; , вам нужно определить метод &lt;code&gt;&lt;a href=&quot;iterator#next-instance-method&quot;&gt;#next&lt;/a&gt;&lt;/code&gt; , который должен возвращать следующий элемент в последовательности, или &lt;code&gt;&lt;a href=&quot;iterator/stop#INSTANCE&quot;&gt;Iterator::Stop::INSTANCE&lt;/a&gt;&lt;/code&gt; , который сигнализирует об окончании последовательности (вы можете вызвать &lt;code&gt;&lt;a href=&quot;iterator#stop-instance-method&quot;&gt;#stop&lt;/a&gt;&lt;/code&gt; внутри итератора в качестве ярлыка) ,</target>
        </trans-unit>
        <trans-unit id="f4fe39b7728eb47d6e1caa2547de31807a3cdf50" translate="yes" xml:space="preserve">
          <source>To install from source, download or clone &lt;a href=&quot;https://github.com/crystal-lang/shards&quot;&gt;the repository&lt;/a&gt; and run &lt;code&gt;make CRFLAGS=--release&lt;/code&gt;. The compiled binary is in &lt;code&gt;bin/shards&lt;/code&gt; and should be added to &lt;code&gt;PATH&lt;/code&gt;.</source>
          <target state="translated">Чтобы установить из исходного кода, загрузите или &lt;code&gt;make CRFLAGS=--release&lt;/code&gt; &lt;a href=&quot;https://github.com/crystal-lang/shards&quot;&gt;репозиторий&lt;/a&gt; и запустите make CRFLAGS = - release . Скомпилированный двоичный файл находится в &lt;code&gt;bin/shards&lt;/code&gt; и должен быть добавлен в &lt;code&gt;PATH&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fadaa3d53eae8935a4ae8c1d26caff6cc0eeacdc" translate="yes" xml:space="preserve">
          <source>To invoke a Proc, you invoke the &lt;code&gt;call&lt;/code&gt; method on it. The number of arguments must match the proc's type:</source>
          <target state="translated">Чтобы вызвать Proc, вы вызываете метод &lt;code&gt;call&lt;/code&gt; для него. Количество аргументов должно соответствовать типу процедуры:</target>
        </trans-unit>
        <trans-unit id="727bae5340494da603d5e1ee3f857c54bc1e0f53" translate="yes" xml:space="preserve">
          <source>To invoke a method and pass a block, you use &lt;code&gt;do ... end&lt;/code&gt; or &lt;code&gt;{ ... }&lt;/code&gt;. All of these are equivalent:</source>
          <target state="translated">Чтобы вызвать метод и передать блок, вы используете &lt;code&gt;do ... end&lt;/code&gt; или &lt;code&gt;{ ... }&lt;/code&gt; . Все они эквивалентны:</target>
        </trans-unit>
        <trans-unit id="c1261081dc0aed6d942e1635fc8e72e85dcb6bfa" translate="yes" xml:space="preserve">
          <source>To iterate a &lt;a href=&quot;https://crystal-lang.org/api/Crystal/Macros/HashLiteral.html&quot;&gt;&lt;code&gt;HashLiteral&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Чтобы &lt;a href=&quot;https://crystal-lang.org/api/Crystal/Macros/HashLiteral.html&quot;&gt; &lt;code&gt;HashLiteral&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="b7cdf18a9a50a75deff88f7987d095f62acaf389" translate="yes" xml:space="preserve">
          <source>To iterate an &lt;a href=&quot;https://crystal-lang.org/api/Crystal/Macros/ArrayLiteral.html&quot;&gt;&lt;code&gt;ArrayLiteral&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Чтобы &lt;a href=&quot;https://crystal-lang.org/api/Crystal/Macros/ArrayLiteral.html&quot;&gt; &lt;code&gt;ArrayLiteral&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="dcdcd4f5025f01cc6bd68254afdb203a18abe523" translate="yes" xml:space="preserve">
          <source>To load a custom MIME database, &lt;code&gt;&lt;a href=&quot;mime#load_mime_database(io:IO):Nil-class-method&quot;&gt;.load_mime_database&lt;/a&gt;&lt;/code&gt; can be called with an &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; to read the database from.</source>
          <target state="translated">Чтобы загрузить пользовательскую базу данных MIME, &lt;code&gt;&lt;a href=&quot;mime#load_mime_database(io:IO):Nil-class-method&quot;&gt;.load_mime_database&lt;/a&gt;&lt;/code&gt; может быть вызван с &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; для чтения базы данных.</target>
        </trans-unit>
        <trans-unit id="239781e06d7d9d2d3050b58686eccae3afc7f7a1" translate="yes" xml:space="preserve">
          <source>To log a message &lt;code&gt;&lt;a href=&quot;log#trace(*,exception:Exception?=nil,&amp;amp;)-instance-method&quot;&gt;#trace&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;log#debug(*,exception:Exception?=nil,&amp;amp;)-instance-method&quot;&gt;#debug&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;log#info(*,exception:Exception?=nil,&amp;amp;)-instance-method&quot;&gt;#info&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;log#notice(*,exception:Exception?=nil,&amp;amp;)-instance-method&quot;&gt;#notice&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;log#warn(*,exception:Exception?=nil,&amp;amp;)-instance-method&quot;&gt;#warn&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;log#error(*,exception:Exception?=nil,&amp;amp;)-instance-method&quot;&gt;#error&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;log#fatal(*,exception:Exception?=nil,&amp;amp;)-instance-method&quot;&gt;#fatal&lt;/a&gt;&lt;/code&gt; methods can be used. They expect a block that will evaluate to the message of the entry.</source>
          <target state="translated">Для регистрации сообщения можно использовать методы &lt;code&gt;&lt;a href=&quot;log#trace(*,exception:Exception?=nil,&amp;amp;)-instance-method&quot;&gt;#trace&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;log#debug(*,exception:Exception?=nil,&amp;amp;)-instance-method&quot;&gt;#debug&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;log#info(*,exception:Exception?=nil,&amp;amp;)-instance-method&quot;&gt;#info&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;log#notice(*,exception:Exception?=nil,&amp;amp;)-instance-method&quot;&gt;#notice&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;log#warn(*,exception:Exception?=nil,&amp;amp;)-instance-method&quot;&gt;#warn&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;log#error(*,exception:Exception?=nil,&amp;amp;)-instance-method&quot;&gt;#error&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;log#fatal(*,exception:Exception?=nil,&amp;amp;)-instance-method&quot;&gt;#fatal&lt;/a&gt;&lt;/code&gt; . Они ожидают блок, который будет оценивать сообщение записи.</target>
        </trans-unit>
        <trans-unit id="a9d586ad9a3f3a11302d206a41a30e2de70ae3f7" translate="yes" xml:space="preserve">
          <source>To make date-time instances exchangeable between different computer systems or readable to humans, they are usually converted to and from a string representation.</source>
          <target state="translated">Чтобы сделать экземпляры данных-времени взаимозаменяемыми между различными компьютерными системами или читаемыми для человека,они обычно преобразуются в строковое представление и из него.</target>
        </trans-unit>
        <trans-unit id="62f08f3614272636ba328403e5b5b95a15d91b34" translate="yes" xml:space="preserve">
          <source>To make it appear in documentation comments</source>
          <target state="translated">Чтобы оно появилось в комментариях к документации</target>
        </trans-unit>
        <trans-unit id="a018c8727d46091a749a9a7c72774cc49a12f392" translate="yes" xml:space="preserve">
          <source>To make it more explicit that an &lt;code&gt;Animal&lt;/code&gt; must define a &lt;code&gt;talk&lt;/code&gt; method, we can add it to &lt;code&gt;Animal&lt;/code&gt; as an abstract method:</source>
          <target state="translated">Чтобы было более очевидно, что &lt;code&gt;Animal&lt;/code&gt; должен определять метод &lt;code&gt;talk&lt;/code&gt; , мы можем добавить его в &lt;code&gt;Animal&lt;/code&gt; как абстрактный метод:</target>
        </trans-unit>
        <trans-unit id="e838d807157c0c216a557a02e8791944341a904c" translate="yes" xml:space="preserve">
          <source>To make it simpler to use, you can create a symbolic link available in the path:</source>
          <target state="translated">Чтобы сделать его более простым в использовании,можно создать символическую ссылку,доступную в пути:</target>
        </trans-unit>
        <trans-unit id="84e56e7d982e727b8efdaec27e50d073b21555a3" translate="yes" xml:space="preserve">
          <source>To make sure that the method returns the type that you want</source>
          <target state="translated">Чтобы убедиться,что метод возвращает тип,который вы хотите.</target>
        </trans-unit>
        <trans-unit id="e18e86a8ee0876d3e85736a18888d23b54e9ec6b" translate="yes" xml:space="preserve">
          <source>To make the compiler process other files you use &lt;code&gt;require &quot;...&quot;&lt;/code&gt;. It accepts a single argument, a string literal, and it can come in many flavors.</source>
          <target state="translated">Чтобы заставить компилятор обрабатывать другие файлы, которые вы используете, &lt;code&gt;require &quot;...&quot;&lt;/code&gt; . Он принимает один аргумент, строковый литерал, и может иметь разные варианты.</target>
        </trans-unit>
        <trans-unit id="3c490ef83c83d8cde412be2d4b0ce1919c2a8f36" translate="yes" xml:space="preserve">
          <source>To parse a CSV in an efficient way, optionally being able to access row values from header names, create an instance of a &lt;code&gt;&lt;a href=&quot;csv&quot;&gt;CSV&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Чтобы эффективно проанализировать CSV, при желании можно получить доступ к значениям строк из имен заголовков, создайте экземпляр &lt;code&gt;&lt;a href=&quot;csv&quot;&gt;CSV&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="52203019ab16fe64462b71ebbcafca3fc553e030" translate="yes" xml:space="preserve">
          <source>To parse and get an &lt;code&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt;, use the block-less overload.</source>
          <target state="translated">Для анализа и получения &lt;code&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; используйте перегрузку без блоков.</target>
        </trans-unit>
        <trans-unit id="ab29093970d13acb8d97742fb04af5b62b673fae" translate="yes" xml:space="preserve">
          <source>To perform a query and get the result set use &lt;code&gt;Database#query&lt;/code&gt;, arguments can be used as in &lt;code&gt;Database#exec&lt;/code&gt;.</source>
          <target state="translated">Для выполнения запроса и получения результирующего набора используйте &lt;code&gt;Database#query&lt;/code&gt; , аргументы можно использовать как в &lt;code&gt;Database#exec&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="00a19595f306c6540d920f1a69b4294225e2b20c" translate="yes" xml:space="preserve">
          <source>To print a number to the standard output you write:</source>
          <target state="translated">Чтобы распечатать номер на стандартный вывод,который вы пишете:</target>
        </trans-unit>
        <trans-unit id="97c76781da7eebfc5ea1337f129276882395075e" translate="yes" xml:space="preserve">
          <source>To properly define a wrapper for this function we must send the &lt;code&gt;&lt;a href=&quot;proc&quot;&gt;Proc&lt;/a&gt;&lt;/code&gt; as the callback data, and then convert that callback data to the &lt;code&gt;&lt;a href=&quot;proc&quot;&gt;Proc&lt;/a&gt;&lt;/code&gt; and finally invoke it.</source>
          <target state="translated">Чтобы правильно определить оболочку для этой функции, мы должны отправить &lt;code&gt;&lt;a href=&quot;proc&quot;&gt;Proc&lt;/a&gt;&lt;/code&gt; в качестве данных обратного вызова, а затем преобразовать эти данные обратного вызова в &lt;code&gt;&lt;a href=&quot;proc&quot;&gt;Proc&lt;/a&gt;&lt;/code&gt; и, наконец, вызвать его.</target>
        </trans-unit>
        <trans-unit id="caa9d763bb22b3320770353054692e18f01408eb" translate="yes" xml:space="preserve">
          <source>To properly define a wrapper for this function we must send the Proc as the callback data, and then convert that callback data to the Proc and finally invoke it.</source>
          <target state="translated">Чтобы правильно определить обертку для этой функции,мы должны отправить Proc как данные для обратного вызова,а затем преобразовать эти данные в Proc и,наконец,вызвать его.</target>
        </trans-unit>
        <trans-unit id="6f00b4a1fc6440105d7c1a5bd08dc07fc67c647f" translate="yes" xml:space="preserve">
          <source>To read a file relative to where the macro is defined, use:</source>
          <target state="translated">Чтобы прочитать файл относительно места,где определен макрос,используйте его:</target>
        </trans-unit>
        <trans-unit id="50b99d4c097d2ca1857411e52eccf76e190c65e4" translate="yes" xml:space="preserve">
          <source>To reduce the binary size for distributable files, the &lt;code&gt;--no-debug&lt;/code&gt; flag can be used. This removes debug symbols reducing file size, but obviously making debugging more difficult.</source>
          <target state="translated">Чтобы уменьшить двоичный размер распространяемых файлов, можно использовать флаг &lt;code&gt;--no-debug&lt;/code&gt; . Это удаляет символы отладки, уменьшая размер файла, но очевидно усложняя отладку.</target>
        </trans-unit>
        <trans-unit id="34c625702ae15f9abda81ae4dc740dd2d4f61545" translate="yes" xml:space="preserve">
          <source>To rescue any exception use a &lt;code&gt;begin ... rescue ... end&lt;/code&gt; expression:</source>
          <target state="translated">Чтобы спасти любое исключение, используйте выражение &lt;code&gt;begin ... rescue ... end&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="38e0d8a6b1edffe2a3499f0ea80fd4de2f3c4b84" translate="yes" xml:space="preserve">
          <source>To rescue just one type of exception (or any of its subclasses):</source>
          <target state="translated">Чтобы спасти только один тип исключения (или любой из его подклассов):</target>
        </trans-unit>
        <trans-unit id="de1a957059f77f9b151934d63ec30dd084b5a782" translate="yes" xml:space="preserve">
          <source>To see the available options for a particular command, use &lt;code&gt;--help&lt;/code&gt; after a command.</source>
          <target state="translated">Чтобы увидеть доступные параметры для конкретной команды, используйте &lt;code&gt;--help&lt;/code&gt; после команды.</target>
        </trans-unit>
        <trans-unit id="abea0f3f8704b252835992cf74a7b160fd5dca6b" translate="yes" xml:space="preserve">
          <source>To see the available options for a particular command, use &lt;code&gt;--help&lt;/code&gt; after a command:</source>
          <target state="translated">Чтобы увидеть доступные параметры для конкретной команды, используйте &lt;code&gt;--help&lt;/code&gt; после команды:</target>
        </trans-unit>
        <trans-unit id="bc556fd1593f459d4e76eb134a04736eab2ee31d" translate="yes" xml:space="preserve">
          <source>To show the value of an expression inside code blocks, use &lt;code&gt;# =&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Чтобы показать значение выражения внутри блоков кода, используйте &lt;code&gt;# =&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5197526bb89db50ae33697f518e18c00cd24f7c2" translate="yes" xml:space="preserve">
          <source>To solve this, we can do this:</source>
          <target state="translated">Чтобы решить это,мы можем сделать это:</target>
        </trans-unit>
        <trans-unit id="5446868b005c13d5d7b309de1bd1152d9a70bc94" translate="yes" xml:space="preserve">
          <source>To spawn a fiber you use &lt;code&gt;spawn&lt;/code&gt; with a block:</source>
          <target state="translated">Чтобы создать волокно, вы используете &lt;code&gt;spawn&lt;/code&gt; с блоком:</target>
        </trans-unit>
        <trans-unit id="da33071868fade85d0fe07f4580a14e41e9a2a15" translate="yes" xml:space="preserve">
          <source>To specify a Proc without arguments:</source>
          <target state="translated">Указать Proc без аргументов:</target>
        </trans-unit>
        <trans-unit id="afd1c83afd3d5a833f4853a56d5f08a35feb7737" translate="yes" xml:space="preserve">
          <source>To specify multiple arguments:</source>
          <target state="translated">Для указания нескольких аргументов:</target>
        </trans-unit>
        <trans-unit id="088c3e80b57c909c8767e72f28da62eb02f87994" translate="yes" xml:space="preserve">
          <source>To switch to &lt;code&gt;latest&lt;/code&gt; for quicker updates, create a file &lt;code&gt;/usr/local/etc/pkg/repos/FreeBSD.conf&lt;/code&gt; with the following contents:</source>
          <target state="translated">Чтобы перейти на &lt;code&gt;latest&lt;/code&gt; версию для более быстрого обновления, создайте файл &lt;code&gt;/usr/local/etc/pkg/repos/FreeBSD.conf&lt;/code&gt; со следующим содержимым:</target>
        </trans-unit>
        <trans-unit id="52c20d34160a9b32c0b4c932b0bee8121b1c10f9" translate="yes" xml:space="preserve">
          <source>To test the server, use the curl command below.</source>
          <target state="translated">Чтобы протестировать сервер,воспользуйтесь командой скручивания,приведенной ниже.</target>
        </trans-unit>
        <trans-unit id="09f10fcb8b3a6c3a4fb5c4cea8db86560eaefebe" translate="yes" xml:space="preserve">
          <source>To the extent possible under law, the persons who contributed to this workhave waived</source>
          <target state="translated">По мере возможности в соответствии с законом лица,внесшие свой вклад в эту работу,освобождались от обязанности</target>
        </trans-unit>
        <trans-unit id="31217910df272b1f25ece09faa304c39aefdc3a5" translate="yes" xml:space="preserve">
          <source>To this:</source>
          <target state="translated">За это:</target>
        </trans-unit>
        <trans-unit id="fd18bcd9d849c73003b6bfe85fe99d038af363d3" translate="yes" xml:space="preserve">
          <source>To use a module as a partial type you use &lt;code&gt;include&lt;/code&gt; or &lt;code&gt;extend&lt;/code&gt;.</source>
          <target state="translated">Чтобы использовать модуль как частичный тип, вы используете &lt;code&gt;include&lt;/code&gt; или &lt;code&gt;extend&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3341895f45bd304e9e010d592eace0f802d01add" translate="yes" xml:space="preserve">
          <source>To use a value:</source>
          <target state="translated">Чтобы использовать значение:</target>
        </trans-unit>
        <trans-unit id="40d041eb687c5d9c41332d8805009da93eeabd18" translate="yes" xml:space="preserve">
          <source>To use it, include this module in your iterator and make sure that the wrapped iterator is stored in the &lt;code&gt;@iterator&lt;/code&gt; instance variable.</source>
          <target state="translated">Чтобы использовать его, включите этот модуль в свой итератор и убедитесь, что упакованный итератор хранится в переменной экземпляра &lt;code&gt;@iterator&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="da553b1420ac33bfd3b0e4ce859b7b021ea74786" translate="yes" xml:space="preserve">
          <source>To use the spec module and DSL, you need to add &lt;code&gt;require &quot;spec&quot;&lt;/code&gt; to your spec files. Many projects use a custom &lt;a href=&quot;#spec-helper&quot;&gt;spec helper&lt;/a&gt; which organizes these includes.</source>
          <target state="translated">Чтобы использовать модуль спецификации и DSL, вам нужно добавить &lt;code&gt;require &quot;spec&quot;&lt;/code&gt; в ваши файлы спецификации. Во многих проектах используется специальный &lt;a href=&quot;#spec-helper&quot;&gt;помощник по спецификациям,&lt;/a&gt; который организует их.</target>
        </trans-unit>
        <trans-unit id="1296b2b434113e871db7177e5a43c2f292a8a353" translate="yes" xml:space="preserve">
          <source>To wait for it to finish, invoke &lt;code&gt;&lt;a href=&quot;process#wait:Process::Status-instance-method&quot;&gt;#wait&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Чтобы дождаться его завершения, вызовите &lt;code&gt;&lt;a href=&quot;process#wait:Process::Status-instance-method&quot;&gt;#wait&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f177b9ae2819b53c30fb23a3369899b07f15a314" translate="yes" xml:space="preserve">
          <source>To write a chain of if-else-if you use &lt;code&gt;elsif&lt;/code&gt;:</source>
          <target state="translated">Чтобы написать цепочку if-else-if, если вы используете &lt;code&gt;elsif&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="be6716112727391fe917c145b829f2ba915eba9e" translate="yes" xml:space="preserve">
          <source>Together with &lt;code&gt;&lt;a href=&quot;time#day_of_week:Time::DayOfWeek-instance-method&quot;&gt;#day_of_week&lt;/a&gt;&lt;/code&gt; this represents a specific day as commercial or week date format &lt;code&gt;year, week, day_of_week&lt;/code&gt; in the same way as the typical format &lt;code&gt;year, month, day&lt;/code&gt;. &lt;code&gt;&lt;a href=&quot;time#week_date(year:Int32,week:Int32,day_of_week:Int32%7CDayOfWeek,hour:Int32=0,minute:Int32=0,second:Int32=0,*,nanosecond:Int32=0,location:Location=Location.local):self-class-method&quot;&gt;.week_date&lt;/a&gt;&lt;/code&gt; creates a &lt;code&gt;&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; instance from a week date.</source>
          <target state="translated">Вместе с &lt;code&gt;&lt;a href=&quot;time#day_of_week:Time::DayOfWeek-instance-method&quot;&gt;#day_of_week&lt;/a&gt;&lt;/code&gt; он представляет конкретный день как коммерческий или недельный формат даты &lt;code&gt;year, week, day_of_week&lt;/code&gt; же, как типичный формат &lt;code&gt;year, month, day&lt;/code&gt; . &lt;code&gt;&lt;a href=&quot;time#week_date(year:Int32,week:Int32,day_of_week:Int32%7CDayOfWeek,hour:Int32=0,minute:Int32=0,second:Int32=0,*,nanosecond:Int32=0,location:Location=Location.local):self-class-method&quot;&gt;.week_date&lt;/a&gt;&lt;/code&gt; создает экземпляр &lt;code&gt;&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; из недели.</target>
        </trans-unit>
        <trans-unit id="a1f392b8b5ec3e60f49fefbec4147b99fae2de08" translate="yes" xml:space="preserve">
          <source>Toggles the bit at the given &lt;em&gt;index&lt;/em&gt;.</source>
          <target state="translated">Переключает бит по заданному &lt;em&gt;индексу&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="0245b740561399d7d6391e6c13b4b6c4f785ce9c" translate="yes" xml:space="preserve">
          <source>Toggles the bit at the given &lt;em&gt;index&lt;/em&gt;. A false bit becomes a &lt;code&gt;true&lt;/code&gt; bit, and vice versa. Negative indices can be used to start counting from the end of the array. Raises &lt;code&gt;&lt;a href=&quot;indexerror&quot;&gt;IndexError&lt;/a&gt;&lt;/code&gt; if trying to access a bit outside the array's range.</source>
          <target state="translated">Переключает бит по заданному &lt;em&gt;индексу&lt;/em&gt; . Ложный бит становится &lt;code&gt;true&lt;/code&gt; , и наоборот. Отрицательные индексы можно использовать, чтобы начать отсчет с конца массива. Поднимает &lt;code&gt;&lt;a href=&quot;indexerror&quot;&gt;IndexError&lt;/a&gt;&lt;/code&gt; при попытке доступа немного за пределами диапазона массива.</target>
        </trans-unit>
        <trans-unit id="bd6413c51a2682c3fc71e1e55728f7a0d5fc6168" translate="yes" xml:space="preserve">
          <source>Token kinds.</source>
          <target state="translated">Дитя Жетонов.</target>
        </trans-unit>
        <trans-unit id="a8d651139915c982a0b3682ed05931830cbc6c96" translate="yes" xml:space="preserve">
          <source>Token#column_number</source>
          <target state="translated">Token#column_number</target>
        </trans-unit>
        <trans-unit id="8ec5045436899dd388aa1e7fc879c39da59e262b" translate="yes" xml:space="preserve">
          <source>Token#column_number=</source>
          <target state="translated">Token#column_number=</target>
        </trans-unit>
        <trans-unit id="d39b811b08f82972dd235985343deaaa58f35c2b" translate="yes" xml:space="preserve">
          <source>Token#float_value</source>
          <target state="translated">Token#float_value</target>
        </trans-unit>
        <trans-unit id="d342122f36d8b6d8811f0494ad27ff6b590794dd" translate="yes" xml:space="preserve">
          <source>Token#float_value=</source>
          <target state="translated">Token#float_value=</target>
        </trans-unit>
        <trans-unit id="5dee9f081919dd845e1ff2e0f5b8c13a5b48f46e" translate="yes" xml:space="preserve">
          <source>Token#int_value</source>
          <target state="translated">Token#int_value</target>
        </trans-unit>
        <trans-unit id="ec620ba967a2b92b4ee8eff86dda4b0baf4978eb" translate="yes" xml:space="preserve">
          <source>Token#int_value=</source>
          <target state="translated">Token#int_value=</target>
        </trans-unit>
        <trans-unit id="c2e204c23faca8bb6370e1f51ef9203d99341a52" translate="yes" xml:space="preserve">
          <source>Token#kind</source>
          <target state="translated">Token#kind</target>
        </trans-unit>
        <trans-unit id="0544e63aaf05664475d71b90f1a1f71e39da6b17" translate="yes" xml:space="preserve">
          <source>Token#kind=</source>
          <target state="translated">Token#kind=</target>
        </trans-unit>
        <trans-unit id="832350d7582bb9914ec219c2cbf5287e5764dc96" translate="yes" xml:space="preserve">
          <source>Token#line_number</source>
          <target state="translated">Token#line_number</target>
        </trans-unit>
        <trans-unit id="fea18a586a4238217c56f770e6bfcda4223dcecf" translate="yes" xml:space="preserve">
          <source>Token#line_number=</source>
          <target state="translated">Token#line_number=</target>
        </trans-unit>
        <trans-unit id="49955717130865e9b711c81801a573db2917d445" translate="yes" xml:space="preserve">
          <source>Token#raw_value</source>
          <target state="translated">Token#raw_value</target>
        </trans-unit>
        <trans-unit id="6793f0b4c84e3891c93500ae8ef1a128e57724e9" translate="yes" xml:space="preserve">
          <source>Token#raw_value=</source>
          <target state="translated">Token#raw_value=</target>
        </trans-unit>
        <trans-unit id="e5e5b69ff19589f626f983a5dbd4a48b9a076b73" translate="yes" xml:space="preserve">
          <source>Token#string_value</source>
          <target state="translated">Token#string_value</target>
        </trans-unit>
        <trans-unit id="31380e9a9615e0e4947d968c30bf17dfdb3c45cd" translate="yes" xml:space="preserve">
          <source>Token#string_value=</source>
          <target state="translated">Token#string_value=</target>
        </trans-unit>
        <trans-unit id="c29acfefaadea10b896c4e948c662ab0fe3d7fcb" translate="yes" xml:space="preserve">
          <source>Token#to_s</source>
          <target state="translated">Token#to_s</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
