<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="d">
    <body>
      <group id="d">
        <trans-unit id="542fd90ba6cbd8b9af6efe448db44ca3b7f41894" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;fsave&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;fsave&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4353d69e346d15e34b0921e56d589c72bfb17930" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;fscale&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;fscale&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1527105c7d5fb635cf68b1959ea899b72b958045" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;fsetpm&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;fsetpm&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="679cb278df119f9b2b29a01ea611361f27cd1546" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;fsin&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;fsin&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a5b5c410474117dcd1d1f6246b841df95f2f80d4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;fsincos&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;fsincos&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0e2bf87e1bf945e11de4d46ad699978e43c3fbc7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;fsqrt&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;fsqrt&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a94baa2dadbdaa1c96749af8a280ab4f676ce1d9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;fst&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;fst&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fb332b994ae4a735595b023c2f87901fa1fa22bc" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;fstcw&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;fstcw&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="35fc2a08a777b970107bad42fab6dbed7bda4d79" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;fstenv&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;fstenv&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5aeadbcf07b56a9ed65fa38d4022a30f52171ade" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;fstp&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;fstp&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b7666a0e377fc5c25a38d9f7b560acb65c3862df" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;fstsw&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;fstsw&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0b63e40b49b3f7e4e5b437c9c719c66b26cffaf7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;fsub&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;fsub&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9627258be361dde4d2fae30809784e64c54c2268" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;fsubp&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;fsubp&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0427a5ff5b8b2ac62292c03e55f263f42b9f8932" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;fsubr&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;fsubr&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6245d566f1c28d0a57c2f9cb729b62df10201b42" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;fsubrp&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;fsubrp&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5adc9195aa3ddb60a91f0d2a38a57924d986b940" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ftst&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;ftst&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b0fbdeb52eb50e91f393a62b50a88035fbe870a3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;fucom&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;fucom&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4adc9289775c608f6393070fe40939a159568549" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;fucomi&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;fucomi&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="85523a80a3e094bc8fc21f86e0c0cdbf7b4065db" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;fucomip&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;fucomip&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9120e73b1b9d2d2e6ec1b845b6c60709d991a85f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;fucomp&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;fucomp&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="24e0e8fc6b5f909712fdcdc0aeab807bc1aa2e13" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;fucompp&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;fucompp&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e0d9714d7fd92bef03ebc419f57ed7c72eddfcb1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;fwait&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;fwait&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9866205612d1c89de6a4d6df1890593bae79b32f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;fxam&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;fxam&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ba18fc6695006911b5629d21e39f3da7ddf1c69f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;fxch&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;fxch&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0d052b56ebb3d493c606438892aac06463030c54" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;fxrstor&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;fxrstor&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="deacdebf502c28aae9af6ec1117c488b88d1d7c2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;fxsave&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;fxsave&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5794b6416f1e6b62947bb87895fcfae12ef8a8bd" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;fxtract&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;fxtract&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3f79538da73424cc0382ff1de3f6801f802a8fc7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;fyl2x&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;fyl2x&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fafa2ecff105e877f3be9ee3c46d85c7a8c36135" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;fyl2xp1&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;fyl2xp1&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="20c858a92e43e7661b37b3ffa5939bfda14ab389" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;haddpd&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;haddpd&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3beeb6887c0719570afc5f982669320d7a198c12" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;haddps&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;haddps&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="45cb14d001d0da90f34eae7fefb5a8247618a48e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;hlt&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;hlt&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4d8ffa2a045c0b37df7466c31ee3bebbe2a2684d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;hsubpd&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;hsubpd&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="70a97fdb902c908748d157c3c351b56baa5bc07a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;hsubps&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;hsubps&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="085d51681222eb72eb912d9f07588adea107141f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;idiv&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;idiv&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6d999b603f0f4949cb6eed8b67f00803c4a88fe2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;imul&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;imul&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d654558d26a0da4835f9150288d1c97cf9f38d34" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;in&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;in&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f09b93b0baa4ddd445337a5477690a191317b517" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;inc&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;inc&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bc4be128b413e1a656489659157243f06d9f08e2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ins&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;ins&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c05b270a21175053045c032fc20de38399f4f368" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;insb&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;insb&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4f0e868624308afb1adf064fde3934e55ed42fef" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;insd&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;insd&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c7593d021a33f17f10af7fc058d8dc2bf10e4579" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;insw&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;insw&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2565e5b16910946a04c7b1678772d9197e2afff0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;int&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;int&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5a5795727b14e515a0d679c01befdc82378b2fe1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;into&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;into&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d0a7bc2abf696816444475c1df665fbbbbf6087a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;invd&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;invd&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a1c949ea43cfd6a544fd6e0a1cc69350798f545b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;invlpg&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;invlpg&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4e868e8886a43306cd51cba7ee37d7902a55a56b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;iret&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;iret&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d9d2769523225bd23d226495ecc46fb3c8a6cc0a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;iretd&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;iretd&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="754c4bf28471696ad79b4420d1a12395a7dbfa10" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;iretq&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;iretq&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3462f97a0c25dbb74e21b311fd3e0ccc56c7fc44" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;isIdentical&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;isIdentical&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f38c76d498bfa2e2240bd2bc5e7eb4ea5cc1818f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;isNumeric&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;isNumeric&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="49d57acbe14bad6a774410f14aac8f3a1d7ca7d9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ja&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;ja&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4918f991d5646c9eaebb716514206a4c10a594da" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;jae&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;jae&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="70f1001337dc4fbfa34ae6487df3458f15026850" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;jb&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;jb&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f7b68b38328e5b219d531d9f2fdb18d40db82ab1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;jbe&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;jbe&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c514992832f9af1547ae7c98a1b847d3f830b23b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;jc&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;jc&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8989c3baa870e72d0bb39adcecb414e6c301f797" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;jcxz&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;jcxz&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5cb2f1e9779895634604d887b309716ed76293bd" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;je&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;je&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4286414d7089d343f025148e8474505f821d9f9f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;jecxz&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;jecxz&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9e68ba937ebb705868c3524a0b1041afe43027f4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;jg&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;jg&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c8a20a56e239d04372aa483a6e163034e6aee8eb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;jge&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;jge&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4160196c95de34f0bce2b9882da2c83765726b85" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;jl&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;jl&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bea001b0b8a097cf513db9ed2e0d756ddfcf33a7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;jle&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;jle&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5d7091ba2c5c5064abdbf0b5dc40e77bbd8ef93d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;jmp&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;jmp&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d039ffc7f42797c60ca6b465b3edbf451a3ff189" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;jna&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;jna&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9b386a3ae18397e04fc038cc430017fb945e3076" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;jnae&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;jnae&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f41a0fcc573435ecb54754ae04f83c2bf5f1f551" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;jnb&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;jnb&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="360b7864a53f3b7b3793c61f98dc77a953a0e0eb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;jnbe&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;jnbe&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="755d53d24bb027d7bf486af25f0452f9e0e34acf" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;jnc&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;jnc&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d248d45cb24a839554bb8af269e1a17c0bc8ea44" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;jne&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;jne&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2117246e9c868145c8a43e6a1830f7a0a3575787" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;jng&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;jng&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b3482ede34cb0f6619d7955e475e0bd3617dd574" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;jnge&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;jnge&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="595cb68eea167073a35b177613126b29c4f4c4ef" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;jnl&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;jnl&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cb0f33627ada8fbb7d61150329ffdd0b76b3684b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;jnle&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;jnle&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bd0b1f73ea624e7becc9f7aa73e95ae2f65e2de9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;jno&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;jno&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ecee99029c1684e0f17fa0f70b7427ae9d0782d4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;jnp&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;jnp&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="be4652549da15f72c40fbe3659813800744766ce" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;jns&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;jns&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ba9986a6f3cb890aa64fd42848e8d859c8b46070" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;jnz&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;jnz&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="82244af2a214c97f7f1de015cae06b7d6de029b4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;jo&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;jo&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a01f0ae01f1f469ecae663bbc1e76fe103c2e302" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;jp&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;jp&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6b3a4ef810507f794a6bbc832248043d0ac1354c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;jpe&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;jpe&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1162e1807d4bb5c4bd5d180df11d631379a1956e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;jpo&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;jpo&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6a955c94edad9e47afe03e3d39a910e85e08cfc1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;js&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;js&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9304e65ca4a41b76608e472921b7964e11497c21" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;jz&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;jz&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5f878b6f6f09d551e5e7ea6b70d8e900db9f9f64" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;lahf&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;lahf&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ec1e0e6843254e1830e869891462fb794def4ffb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;lar&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;lar&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="52d06b8575a38412c63c5943c2af34c049a370d7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;lddqu&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;lddqu&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7137e166e4dfac97259bc2ad3fcc11ea53abdd12" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ldmxcsr&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;ldmxcsr&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="96d1e6c7b45d5d3eecec5a694643bfef51260506" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;lds&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;lds&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="623c361b96c5472b78eb3728478da32ee15816d5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;lea&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;lea&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c0f683df4d24cd4e12714ae798265d1de0d137cf" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;leave&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;leave&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3d71f93a79d7f0afa3513b6957791b9d39cccae6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;les&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;les&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="62be2d40f233266784cbe4be1243f1316a7f7310" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;lfence&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;lfence&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4759c2090863bb0ca2efb1719a87aec75eae7fb6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;lfs&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;lfs&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="941bd4178676f65da09e96d0468f0ddcfe004665" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;lgdt&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;lgdt&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0baf7614855e77efdddbe24e8111651e44bcafa1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;lgs&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;lgs&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ab994175f6b4c71e18080bc02204f16d494cfb59" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;lidt&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;lidt&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="431eee839f0f89e95de9659e6046dfd338799230" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;lldt&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;lldt&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3e2865d4b94ebc0ef7de93200f69899a680dd41b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;lmsw&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;lmsw&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a32d77d6820a3650e8c5842a04de6e865081e98e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;lock&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;lock&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ccbaa74aa50b0cc3745acbaafc53e22bbc5c13ce" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;lods&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;lods&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="382cc5547010ad70a4fffc8f0a3e64580c56a03c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;lodsb&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;lodsb&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="626f86146898b398a476d6975f8d0b892d6a5c3c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;lodsd&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;lodsd&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="738f335db5251291b8e94acfcea26b69ce728a6f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;lodsw&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;lodsw&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4144c1d287f3f6dc3f5f31585af4eea0b85ee07b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;loop&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;loop&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2c3606791021d1b4a72ba3b5e14f852d98fe95f3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;loope&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;loope&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="afc39328ef3cca052bc525e8ad01be8deaa6bc37" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;loopne&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;loopne&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="37da31b2d085420c0165fdb1a0625a58ae2c194b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;loopnz&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;loopnz&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="91d72b1fc71b4e477ef5865971df096bb695a3c9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;loopz&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;loopz&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="17e01c34445be9278a3a35278e51291929d8eddf" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;lsl&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;lsl&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d0612ac31c0297282f6ff18a1492229c2a38cb1b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;lss&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;lss&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="968018e63bc966f089c36cc66e975e0ff1789eeb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ltr&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;ltr&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fc62f654fd98e336dfcb7bd892b3a13af947c15d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;maskmovdqu&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;maskmovdqu&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a63030c931ba34fad967a1d1f285a67de1389fb2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;maskmovq&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;maskmovq&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="60729f9ff8bda2ab3ff39d040f9addd6993f5cac" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;maxpd&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;maxpd&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="12ea7903cbe1b0c9828003f4ea73ced365e2b729" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;maxps&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;maxps&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1500f4c5be73de1049ca2fa1f3a7bfe508d62e8e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;maxsd&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;maxsd&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0fe0ff6e48d996ffea76678b54d92f66aa1ec5cb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;maxss&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;maxss&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a618a466ab51c915d1ba6cbe9aea3547d5f7882e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;md5Of&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;md5Of&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bc24be85f1e6f509d98625edbdf1759ad6bb3b51" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;mfence&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;mfence&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="04e4b7686f63050b8f85f42eb120b40fe4bb0be2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;minpd&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;minpd&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9df005aa95a3ff845689b32196f30050516b0705" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;minps&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;minps&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f2df76bc6e7b2e07bdfdc5d2e61daecb68abfa54" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;minsd&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;minsd&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dea37787a0c5d8c6d5756a3079ba365b4ecdb823" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;minss&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;minss&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="edb36672da16f98a4014b870d19034b3c113d28e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;module a&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;модуль а&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="07b1ff5782b5553856625515436ec43dde000d64" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;module b&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;модуль б&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="54b0eab402e5938a9c9db5c8fcb7d797cc1d92a4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;monitor&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;monitor&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="78091acd2c81c8e17da8ec2c9225c99cef309537" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;mov&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;mov&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="32cd5f583e607206a749ff4ef1ca2e0e442984e2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;movapd&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;movapd&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1e1de68ba6f05d66db7e7f8710dec9d359341fb7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;movaps&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;movaps&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7da03c472ca1bbbfb8310dcb7bcdeacc7994773c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;movd&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;movd&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7a787085cde75c6fc210845694be077d82b5493b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;movddup&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;movddup&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="34b68bd4cd2f5c474b8f1811ecece856b68a2e0d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;movdq2q&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;movdq2q&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="45ed7fdd4687a6f9c2b770ec4395e84809801780" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;movdqa&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;movdqa&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="076f68667342aac6e208fff48b49a5f8e506b65b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;movdqu&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;movdqu&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="26a6d50a05cba558b34242f748c9b33905672587" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;movhlps&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;movhlps&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2f8d91cb7a2bfc1cd7a8bba17ecab4dec97106f2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;movhpd&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;movhpd&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="109ee80c831640ebeb484b3349a6111f92e569c0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;movhps&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;movhps&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8402d3ad8cba057dc6321d12d6a43bf11a0be821" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;movlhps&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;movlhps&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="acee3ede68e3b924e217b4236cf1b37aa78cda41" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;movlpd&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;movlpd&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f5d520bd4468750e6f27acbc94d628dad9a4265b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;movlps&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;movlps&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="73ec1070b6d0afb0cfcab9cc72ee23c5f2e9827c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;movmskpd&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;movmskpd&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="074f176599b2850b6a3c56cd7fa5e7aa5a3dd852" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;movmskps&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;movmskps&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b790e459e718455789d61b9e6984aa6ab2843bb1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;movntdq&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;movntdq&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6c433cb2f03227bbb1101284ef2bf96ac2b48331" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;movnti&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;movnti&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="beb0f3e1e61aae096fa3404e2e548b4cf015d48d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;movntpd&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;movntpd&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="50bf25e58d446dc5e995bd5565645d81afcfdebb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;movntps&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;movntps&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bb1faaf3e90d4c2eeeb82904036cf8b8c68b7149" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;movntq&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;movntq&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="062354c47582a6abfeaf37d71c5f1bb05cc0b53d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;movq2dq&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;movq2dq&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ca5d1817d87e4c6b217ff76ce382e1ba5d1597a2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;movq&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;movq&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b76b329cdebc7c42b443db8deec98a236effb51a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;movs&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;movs&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="45a150f228a1aa3f7c673d71ff1f131f7b615d14" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;movsb&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;movsb&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="78459faaf8d4d56f97d59d93036c7f99be7beb86" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;movsd&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;movsd&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e6233caed275d7b0239b15ff310074df3d100378" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;movshdup&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;movshdup&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d795a00a39f1ff31645cb3f83753886b01585c3d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;movsldup&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;movsldup&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9a0d6de2feb688a20da28a1804a8bbee2dd421f4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;movss&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;movss&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7c1534c8e1f2eda8dec4efd8fe9148b63012a7a7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;movsw&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;movsw&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="960481ffa9a9c91c643184763679d15dd61e6bfa" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;movsx&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;movsx&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7aeb4d05dc5471f0cbbc98cccd96363e73e4adbc" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;movupd&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;movupd&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="861a3597b512b1abc5c048e35f102378f24123a4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;movups&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;movups&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5ae9da9ef46bc8770936090b3f51bb0072255292" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;movzx&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;movzx&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="619210afb7e4dca154b9c8f0c3001cad3d8afde0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;mul&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;mul&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9faa18e24cbe7e48b63bda8b86951a4553dac958" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;mulpd&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;mulpd&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="28291b4ef901bcadcb83bb1b0682eae6e484bd4e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;mulps&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;mulps&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c10653f79e8a0742146b59aacd39d13bcbaa787c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;mulsd&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;mulsd&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e2afc8b6ffe8112ff716d8c693e9d02789c43030" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;mulss&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;mulss&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b7a425954f4b98b0679c785f1e89733ff3f0c6c7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;mwait&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;mwait&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="51dc4baaebfbc8f758eb113ce23c618cb466ef9d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;neg&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;neg&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bf60a3844d6c91139defba1f05001596f3ce5636" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;nop&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;nop&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9f3e8c6275270eb932e42e295e4b2b9f236df555" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;not&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;not&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d8d22cc104a692c502f9dcdf46a40697fc074e64" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;or&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;or&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b477413fbe74861a12b10a3aaae3e1293ba8aee4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;orpd&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;orpd&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="07147e271510504952effa5ddb4712145df5c7b8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;orps&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;orps&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1f9b275f33941b7b65604bd06896f61cf4836ed1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;out&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;out&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="803a3262a5f96a49832a02622eb4cf957667e7a6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;outs&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;outs&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8c7a47ff0d19b192b4e8ac27118cfcc1e4ad9f1b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;outsb&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;outsb&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c6f757ab1a3f05b7f47494b1e142c12ce1505e93" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;outsd&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;outsd&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="931de1947727c9e659048a92cca5832064845e59" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;outsw&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;outsw&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="90b8b21f27582d7e38ace380551e7980869769ae" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;packssdw&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;packssdw&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="12eacf54c4c8a1479b3a10e417e172f19f2e909b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;packsswb&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;packsswb&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5ae553e5bc4bffb0ae7c8d4b77a4140696b39bc9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;packuswb&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;packuswb&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fbc224493326efa2a1604a56df18e59412dc4623" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;paddb&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;paddb&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="da354bc9608ef150ccdedc2b665d058e4e042a3e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;paddd&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;paddd&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cdf60f1f097e0ef0c2944f24189f272b9b50fd89" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;paddq&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;paddq&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9ec1b0becbc1560876a1f90290cf90c6c9e6225f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;paddsb&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;paddsb&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="545b6d9b64ba5b5f890af0b818540fda1e70214d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;paddsw&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;paddsw&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8cbf16231df7c5631a784f302689b1eb6864cad6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;paddusb&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;paddusb&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="831844caf1980b4e06ef610e25d156083c212cff" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;paddusw&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;paddusw&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f5acebf09de9274308011e66a7c209936bfe40c6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;paddw&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;paddw&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6e426719f8518912148f2003eeee3ea491baee33" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pand&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;pand&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="21e9808a3ffbbb7005dd172f126b44ec6816ff1a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pandn&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;pandn&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ac073b445708f506df7125b66996dba43df7e1cc" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pavgb&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;pavgb&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="494888a44e29ce7afe786417820583b1783221e1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pavgusb&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;pavgusb&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="164f4b203e1d35a32c3dc31050af314e9ba200aa" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pavgw&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;pavgw&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="19eb8eb6c331896431ec0b8d9ca04f7eb84a504b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pcmpeqb&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;pcmpeqb&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5b18a549676c736ac52896fb24052384b658bb01" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pcmpeqd&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;pcmpeqd&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8625db986549ef9314832be0321d53bee30e7b86" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pcmpeqw&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;pcmpeqw&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8e29376c288f5a4c13b4772a7c157463cadea475" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pcmpgtb&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;pcmpgtb&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a62c1307ae6e0c8d719a77eae5c36e9b0a4936f4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pcmpgtd&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;pcmpgtd&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1194455a8dc85c9aa858820b71cffb59df4e23a6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pcmpgtw&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;pcmpgtw&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1d7a9b3f17b0c6a007a5584bba12c7b2cd97bac5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pextrw&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;pextrw&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="781f6e80dbeee560e702660d6f485f783fbeed18" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pf2id&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;pf2id&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bfedceee491afc2e76ae02efc568ed1371f33680" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pfacc&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;pfacc&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="63beb3b207a956068d1d4f9a06bca20e2854bc15" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pfadd&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;pfadd&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e987e624a8f3c79cf9d2590c41be16f3db439fc3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pfcmpeq&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;pfcmpeq&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="329b94e56a1841d948b3999bdb1ab8998c5e01b2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pfcmpge&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;pfcmpge&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ce03616a232a6f309e337e14fd3cf877acb4f250" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pfcmpgt&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;pfcmpgt&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f27232638a700d5c6e1b0e803e0adee5ea9e3df2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pfmax&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;pfmax&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1265e6e329552551b7af04aaae1a2036458458fe" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pfmin&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;pfmin&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a06d7a25dd325b4ed55f047e3c8b081676b0697f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pfmul&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;pfmul&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8661b5dcd85bb8fe565d9a97b516125e7754f0fc" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pfnacc&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;pfnacc&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="13dbe826cac9e53f4a0ec3af1711e87545492094" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pfpnacc&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;pfpnacc&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6b0ca9a4b913e14e398efeabb4e69bb6a7c82594" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pfrcp&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;pfrcp&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3a642f996903293e46016568a3003b0631d4b6bc" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pfrcpit1&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;pfrcpit1&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fb8f653d0cc24166c5dda18680ddaddbb7dc8900" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pfrcpit2&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;pfrcpit2&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="43d858526aa7e888c711b8d942a60cd1947d9469" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pfrsqit1&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;pfrsqit1&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a9b65958f58bb36e1527170e34cf2dce38bc1a87" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pfrsqrt&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;pfrsqrt&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="158470f493be33661441867810ed621d96dd5af1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pfsub&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;pfsub&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="101ea4b5c5eaa11df4363de6df71e65a156dd012" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pfsubr&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;pfsubr&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8fcc2b9a64b3bb8725bc66befa8062b9410dec53" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pi2fd&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;pi2fd&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c15d055d12129b2631d2f5c7c94a8e6664e29667" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pinsrw&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;pinsrw&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6659180cf1fac48157d42f34de1e815bea4099b4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pmaddwd&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;pmaddwd&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4ed553224ff6fd27f57b0c75af8c008bb0ab6586" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pmaxsw&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;pmaxsw&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5ae703a5b3fc552a73eb9409653a79d842912967" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pmaxub&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;pmaxub&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d9571b08e56effb90b687ccdd2932a05febd70ae" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pminsw&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;pminsw&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e807957d59d51d6b577adec978b114a93641a554" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pminub&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;pminub&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0a76c12e59c30620b6613d11036789d2dee3a3fa" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pmovmskb&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;pmovmskb&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a99578c6946a95ffe895954af4911dbaedb2780b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pmulhrw&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;pmulhrw&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b3a274643f883eea4f707351b165b451d4252e32" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pmulhuw&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;pmulhuw&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="98327d7a82f80fa6b0f7b7de6af559fb5cd697ed" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pmulhw&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;pmulhw&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="74a0a4400c0dc424997128fd16d50b280a10534a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pmullw&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;pmullw&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3d62b5a845aba151d51adb48dcbc601d914b7230" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pmuludq&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;pmuludq&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b9c69566fe24b086fc61c3288cb2936659b9c9d1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pop&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;pop&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="72b4ae9407b12cee08bf130df34a8f2d85011900" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;popa&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;popa&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="45a53eb04526fa7bf1b8287163d89b0d908d58b5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;popad&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;popad&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0135f8b3aaee77787246ebf7eeea017e2e475c0f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;popf&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;popf&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="599279b614e6588caa03275cb110f40d9dfd2a08" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;popfd&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;popfd&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bf7fff8843ff230a46c3b82c6eaff15db55e906c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;por&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;por&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="137c579eb2f86cc2443a7187b338fb9bc94e07e0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;prefetchnta&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;prefetchnta&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="81a3d233a4cca3efb6bbbcf643518f5508504cbe" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;prefetcht0&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;prefetcht0&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="056163f05801fa90a93dface2be39729ee6a0751" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;prefetcht1&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;prefetcht1&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="786b86f1cc932623a9eac071d1ecabcb5c838d2b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;prefetcht2&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;prefetcht2&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9f0a7721fa24ac816c9fa5e6afb83c1b611cc960" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;psadbw&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;psadbw&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3eb5654ecbfd101c6184c165eb9d0fa46b5acf47" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pshufd&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;pshufd&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5f9cefb15d07d098469448bdc9f6df5867c5c851" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pshufhw&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;pshufhw&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fde06ede79ce7cbb3c6664714cd8325d7bd6e900" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pshuflw&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;pshuflw&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0c719a6d0430bc9f69f2a3bfaad59fcf953dd0bd" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pshufw&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;pshufw&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="016371eec9bd3c7a145d035d09d106ac1fb3965d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pslld&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;pslld&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4882406692de086e482ebf0a8972384e21bbf7c6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pslldq&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;pslldq&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4a5d8863ca8296716c04a93b940f8d433d0412b7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;psllq&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;psllq&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0b900ff81d220b5d9e62e2521bda4747abbf2195" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;psllw&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;psllw&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6dbd0fa2514b94616a7ac71d7aee819b1cdf1ec3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;psrad&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;psrad&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4cf190e9c44ecb216164198d1f6a539bf5a7eb74" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;psraw&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;psraw&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="012eb900b370f6f5287fb080916ab4b5613fa7db" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;psrld&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;psrld&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="df500f5c6beaf8d9b392e0ce19514d522208aada" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;psrldq&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;psrldq&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9c5d01055390caf7651bd113085ec9e1bc31a4a3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;psrlq&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;psrlq&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0e376870016daa21c1fd2c9eb95387111d120fad" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;psrlw&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;psrlw&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a513f71622479cf5f43c6fb0e3868525426c5da5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;psubb&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;psubb&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b9415748a34ae31de1dde684fe5528fdf38ed38d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;psubd&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;psubd&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="76fa3cb8840132ee6c3cd3401b50052579c244cb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;psubq&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;psubq&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a2d94fe2a30e4ff40fbfb6772639d7755d12b454" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;psubsb&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;psubsb&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="be066df1ab4b9e62bc8e98f1030d9472308e7b93" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;psubsw&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;psubsw&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="45fd18da9fd6e9d48ac53388cf5d3fc041474b6b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;psubusb&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;psubusb&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4748cc901ce7d4cc81618f73b2144133894b6f82" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;psubusw&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;psubusw&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="77ce6e8aa0a679261c3ce4fd91f54a47bb8e5ac1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;psubw&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;psubw&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d0af3d6fd152a0c3bb82edd4116e6e704c5364b7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pswapd&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;pswapd&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="239c076b73908f04631bedb4ab175bfef8efd37c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;punpckhbw&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;punpckhbw&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5084c8c4c222ed5767690e6a3d843aa7973ed6d0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;punpckhdq&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;punpckhdq&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fa461b920473141950d73e927e80064e0a431dc7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;punpckhqdq&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;punpckhqdq&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6547a3fb2a6fbcd8e81fb455aa907662497e7018" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;punpckhwd&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;punpckhwd&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1891d9ea65a74eaaad4c56bdf18458f5a6daa8e8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;punpcklbw&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;punpcklbw&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e8ee905762bef59a204ec8c8bac7e1a5e846bb71" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;punpckldq&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;punpckldq&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="edcd228772197fde66f349a935e38f8c0a80ff13" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;punpcklqdq&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;punpcklqdq&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6d2d10060b30362bf849ad16e388cd28d4e8683e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;punpcklwd&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;punpcklwd&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dd31fb337461755bb5e3e31aef446948ecaa910d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;push&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;push&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="57f9a59fdf59fe724eec9abe3103a8e3b8e77cdc" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pusha&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;pusha&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6ad16b9c056681db97b3c52682a0dd6d3695c3be" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pushad&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;pushad&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="34999a27c8bdbd022ae7581a57d81ef5bd2ac756" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pushf&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;pushf&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9f53c6a024ec4c89c9849feb8cd582820e3bd1cb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pushfd&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;pushfd&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f6512315692aa92e1db5392e293703477c1f7364" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pxor&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;pxor&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1c94460fb88ad9b066253516996aa288a0a0146f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;rcl&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;rcl&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cd3f839dd328eacf1c098cc880cf51d04ef491c5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;rcpps&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;rcpps&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0693e77fa4d59ec353f2dcd4215cbd90086c3cd2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;rcpss&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;rcpss&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="157d2992839522ecb86638053433abf0367e0861" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;rcr&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;rcr&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="73df528a8b27a47229d9aed4ff16ede9ae64e6ec" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;rdmsr&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;rdmsr&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="999e301bd0dabba38b71e1da4f20d3585776295a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;rdpmc&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;rdpmc&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5a34d377a60a731bbd737b8d133ec3a9b1b592c8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;rdtsc&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;rdtsc&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c86e8881f6a10c72680701007255719595725b1a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;rep&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;rep&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3af94ef7c5b08bac784cb7cc92b82c30e32d8502" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;repe&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;repe&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9218c7011bd9aaec82e5344fa4531abab1696aa7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;repne&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;repne&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fdd63001c060b4bf3513e15b47832b96bdba7d3b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;repnz&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;repnz&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="498ea9ee6dcb6d635c12e909cbcaf9d5db347327" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;repz&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;repz&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5f7f3ecf768aaa16da456de5ff8f8f191e6a70af" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ret&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;ret&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d9ade37e0c4ead29c92e6c7637bf5d3637cf51e2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;retf&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;retf&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="31714686692921c45c701f9b36887fc1598b4a4d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ripemd160Of&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;ripemd160Of&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3d83be0e598ade483222d7ad91bc13451e3d9e92" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;rol&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;rol&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="896e8ba67aa3aa7d555b24ffa9e90ece24744804" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ror&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;ror&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9f73a534a7e5cbf806ae271d242f34503e9ab9ec" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;rsm&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;rsm&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="30d0be78db23b7f7d25517f46b06ec19b67c9b28" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;rsqrtps&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;rsqrtps&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c12cf34cb8ac38e749cba2de6b95f164379c17e1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;rsqrtss&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;rsqrtss&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e2822783cb138304ba93ec65853d8a71d3501a8a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;sahf&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;sahf&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="49ed066c370542ae65c1d8dcb35a2e65e2e7d633" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;sal&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;sal&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8fa75c57039f96e361cefd9f82e55ede64a6c817" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;sar&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;sar&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0ff6c022e49b205dba1e5f3c54bf4000ed4bdda5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;sbb&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;sbb&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="78be0982bbd9f0d4417ad86f2e5605403c4c9634" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;scas&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;scas&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="35b398cd62c842f676f60d041b681d6907c39f09" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;scasb&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;scasb&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9a710c62d259a91dc2b6db1c4ec1c83e521b0f4b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;scasd&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;scasd&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="79e349825faadbdca7a5892075d769984e06c674" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;scasw&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;scasw&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b9ed0b993d499304bf628f39ad96ac4129e6c385" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;seta&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;seta&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3fba2c5d56cc64efd8e23dad327b2c60e230ab60" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;setae&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;setae&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9bb80785f439e08e67c9d1c48a254bb6e83cb350" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;setb&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;setb&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e42e76e0760a2cbfd6763bcf5d7fa69ee7f4e93a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;setbe&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;setbe&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c75c1ad13bd2c88219531e7478718ab660257495" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;setc&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;setc&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b83b2935c8f99e92da09f59a54c7cd9f21ff5168" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;sete&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;sete&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b6da303ef13cfe9969674f3223cd205dd3ea94b3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;setg&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;setg&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bb983c7a296d6a9930df781163200a9272f23098" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;setge&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;setge&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a4066a41c9a93c64831cf0dff2c9dd02443d1ad1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;setl&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;setl&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7b1b2ca8f4f5dd74e44bd858c52a9818fab180cf" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;setle&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;setle&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="160bf7e4324f03c4834cdb652a0ba480354a2916" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;setna&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;setna&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="81512e3cd02ad2bb7e96f57df199723b76a097bc" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;setnae&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;setnae&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="56a8e81946ef3fb52e7793cdaa971b96cac702c9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;setnb&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;setnb&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e39875e8171df99d5cec3c06087a13c216770b78" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;setnbe&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;setnbe&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="24f18d09624ace56c82c2c6d6da1839e414b37fb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;setnc&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;setnc&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f8d36ceb1ac5c0fa397db4cdd60186c14ce1dc26" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;setne&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;setne&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b6585eea0f68ff418f9d5bc9b6ed466ba4750738" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;setng&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;setng&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fccccd74cd69ae72e8e2982ee6fce2374ac54fd0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;setnge&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;setnge&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8a354a41a4b2b7a791ec1462b6e0fdf7fb3b0883" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;setnl&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;setnl&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ac0431b248bea31ceab4117a082194dc79dd5cb1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;setnle&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;setnle&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2e8f160abd79aa66e7ba053e94ddda50a370395b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;setno&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;setno&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1cda1bde3e98fa295c85c4936c7c11630d58f43f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;setnp&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;setnp&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0714c508d0f078717c2af9e9bd85f88c8a769ace" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;setns&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;setns&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9da9621ada65e48575799acba0bbde261a0b680e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;setnz&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;setnz&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d60cbb22c58c94140b5cfb5c76cfc80e8a9a5c70" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;seto&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;seto&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2e4dba05afd9521ace32384bdf9b230f86e54cd7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;setp&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;setp&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="74745d068ccef851d04dad1dbc93942536a70470" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;setpe&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;setpe&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1670f7f920ca578ea50aeaee6edb2185521a7a44" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;setpo&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;setpo&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bc4686b36a31eff522f0f82610840949ce6ee7fa" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;sets&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;sets&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a3b0d160b496d2b92be3a35e4a898c1d29cac500" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;setz&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;setz&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1cd8a46916a50ce5d9023b3ce99f2443a3b8eb84" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;sfence&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;sfence&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="79904dc6119983645890443f537fa01c996ae6e3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;sgdt&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;sgdt&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="48432a75aa8badd8058f2e21f073c6a9af7ba377" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;sha1Of&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;sha1Of&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2180faab6b00fdfa3e973ebb6c1ea4ccd5890734" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;shl&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;shl&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5961c1a5f7c254381eda811d3a7158e69c84a622" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;shld&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;shld&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0f841c1b6a346b90c1f5ba9f8446df27c1ce969f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;shr&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;shr&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="709f8bbdf84ecc14136ee102719217150e09e3d2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;shrd&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;shrd&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8f355ca779af616cabe46c8593a79f3cb1a14382" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;shufpd&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;shufpd&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2afb6170cb5b2542080b5ee446902828193d7902" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;shufps&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;shufps&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ecc1c970ad0efc6bd88877e6bc7ca3ebdca79c29" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;sidt&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;sidt&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="00c8cc30d9dbd7e4ea4eb8386caca111f5840869" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;sldt&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;sldt&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6268fe87c06c30829cfc884accef090e5a332cbc" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;smsw&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;smsw&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="247e2be61a83c8b9102e84da20cce208be09c76c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;sqrtpd&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;sqrtpd&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b73eff6caf2794741bcdb0e8f398d71a1db9d8d8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;sqrtps&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;sqrtps&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="731f6c5aa8758117cac827d33ad0213dcb7acf9e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;sqrtsd&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;sqrtsd&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="327db206cd15466495c7622f213c9c1442a099f3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;sqrtss&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;sqrtss&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="720e85cb5ca5a146a7cafa9cb5de85e60856c771" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;stc&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;stc&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2d198ef62b93c3fa492bd03c57dff08cbf357726" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;std&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;std&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="60617084f0ebe05a22cfcedfc35842c5cc4ecbd2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;sti&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;sti&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="54e47ab74c8779901be71b4b89c89c5a8cded575" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;stmxcsr&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;stmxcsr&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2e0d0437049ba75af9711bba98feb9ddcc6e5598" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;stos&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;stos&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dc5846639683fc3b5b31b9a0c6a120c15ba75fa9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;stosb&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;stosb&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e3ce0211fdcb563720f5a0ff9b2fe005620536a4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;stosd&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;stosd&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a5fb974641bb5b02c152b14d1f36431c22adc771" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;stosw&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;stosw&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="61adbe2003ac91f62cad29602dee7fc4275ecf8f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;str&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;str&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b52c1783b543bd6491136a2a82034beddde5de8f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;sub&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;sub&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9420eb09389f43254389cfafaf9c42d3c8f51e70" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;subpd&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;subpd&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6cd43df496558d339541ac0b63d460c4c40eb3d8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;subps&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;subps&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c40fe3b0934e00b49a03d7304f012e18ea91847a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;subsd&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;subsd&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d80f8e71d416c180b97b1721daeba9620e5982c0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;subss&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;subss&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7097844477894f70c2eb8cbb2558c375c2ce1c9e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;syscall&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;syscall&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d4e08ce1cf22e07d305579de6e700477ca2306ee" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;sysenter&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;sysenter&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="31a4b8aa532429ea5909e8e4144b237b6366d247" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;sysexit&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;sysexit&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="69bc03a67071d6107741c815bd2455616a66aacf" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;sysret&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;sysret&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a098a7a90c1a066f05f9dc3183cd1cb9a431e679" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;test&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;test&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7ec798afbf99ffe557ef28dae916fd1f503a2de8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ucomisd&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;ucomisd&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="02270b6af7651b2e3e441241eaa504045e5ecc9b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ucomiss&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;ucomiss&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="30ed2734ead8845140c82d372418b0131f9c4947" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ud2&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;ud2&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e51cbeb2ddfe75b83e5bf8b3d08c4740eef01027" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;unpckhpd&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;unpckhpd&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9a6cc0aab84a4dab378d1a94452549378f1bd3ea" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;unpckhps&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;unpckhps&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="13271e169c0d4096a61306fe1ac45aea2ccc1434" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;unpcklpd&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;unpcklpd&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a0c1dce3a9c9a38d19a67063741bcacd36612562" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;unpcklps&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;unpcklps&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="69d865965f948019f96ab373614a88813d1c11cd" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;verr&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;verr&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="218fd17ea68ca00faf765fd7bf4647ed401654bc" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;verw&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;verw&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="216b116f0530f4a53d2f8b9dceb61edfe1f971ba" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;wait&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;wait&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="395f6a637f6281cc2e4b147ec739ddf45fe96348" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;wbinvd&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;wbinvd&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6b1c116a7738216e5ae55d3a00dfa36fc12bec19" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;wrmsr&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;wrmsr&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="50477c549eadd395ec41037c63d225f8337fdd68" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;xadd&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;xadd&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e27395db9c3a40ed4c08cdea7b9025170aa75e45" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;xchg&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;xchg&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c5f8c0256e68500d86d676c9fc0c5f74ca8bf578" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;xlat&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;xlat&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b156eff46f76b7d549df10bdb9972d77cdf48ee9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;xlatb&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;xlatb&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9a3b058327751ce50b1bb1cb895e9ae337fb532c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;xor&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;xor&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a535c8e85b6f97589dafa719fc8b0382384e64b0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;xorpd&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;xorpd&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8c12dc3362aa1f2efba5c9c87df32e6520c9bc0b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;xorps&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;xorps&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b1696879273c89f2475b29865e10a02651adacbb" translate="yes" xml:space="preserve">
          <source>&lt;i&gt;NewExpression&lt;/i&gt;</source>
          <target state="translated">&lt;i&gt;NewExpression&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="641b3303c536c2f2e005540da162ce7633d60e56" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (!(isAutodecodableString!(T[]) &amp;amp;&amp;amp; !isAggregateType!(T[])) &amp;amp;&amp;amp; !is(T[] == void[])); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (! (IsAutodecodableString! (T []) &amp;amp;&amp;amp;! IsAggregateType! (T [])) &amp;amp;&amp;amp;! Is (T [] == void [])); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="1f23fa53c8c28c49c40790033bacafe2f226fe0d" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (!allSatisfy!(isForwardRange, R1, R2) || anySatisfy!(isInfinite, R1, R2)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (! AllSatisfy! (IsForwardRange, R1, R2) || anySatisfy! (IsInfinite, R1, R2)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="7895ddb523630cd7e84f4b0a47c3e0c00bc83f73" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (!allSatisfy!(isForwardRange, R1, R2, RR) || anySatisfy!(isInfinite, R1, R2, RR)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (! AllSatisfy! (IsForwardRange, R1, R2, RR) || anySatisfy! (IsInfinite, R1, R2, RR)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="5123d3cdb970b0abcf4dbe9d270552ba8f2992f8" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (!is(CommonType!(T1, T2) == void)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (! Is (CommonType! (T1, T2) == void)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="255c8c1ef8ef761a813c742b7644b12700c42b70" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (!is(CommonType!Values == void) || Values.length == 0); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (! Is (CommonType! Values ​​== void) || Values.length == 0); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="e814c21f3f28c77da2939f4612e97ad8b164f1f8" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (!is(Sentinel == OpenRight)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (! Is (Sentinel == OpenRight)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="38c49f16df04af92bbd55a414ace6f01e6ee20bd" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (!is(T : VariantN) &amp;amp;&amp;amp; (Types.length &amp;gt; 0) &amp;amp;&amp;amp; allSatisfy!(allowed, Types)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (! Is (T: VariantN) &amp;amp;&amp;amp; (Types.length&amp;gt; 0) &amp;amp;&amp;amp; allSatisfy! (Разрешено, Types)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="d477557c974deeedc06626896f1b173f2c3596c6" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (!is(T == class) &amp;amp;&amp;amp; !is(T U : U*) &amp;amp;&amp;amp; __traits(compiles, () { *here = exchangeWith; } )); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (! Is (T == class) &amp;amp;&amp;amp;! Is (TU: U *) &amp;amp;&amp;amp; __traits (compiles, () {* here = exchangeWith;})); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="2eb7e95686dfe23cb5b1ab0939b632abdd5f641e" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (!is(T == class) &amp;amp;&amp;amp; !is(T U : U*) &amp;amp;&amp;amp; __traits(compiles, () { *here = writeThis; } )); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (! Is (T == class) &amp;amp;&amp;amp;! Is (TU: U *) &amp;amp;&amp;amp; __traits (compiles, () {* here = writeThis;})); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="ad1113058e82966ed4459b66144cc74c17e1b52b" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (!is(T == class)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (! Is (T == class)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="bc32840a9b6d21636089a83a622bdaed4cecc8a3" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (!is(T == enum) &amp;amp;&amp;amp; (isIntegral!T || isSomeChar!T) &amp;amp;&amp;amp; isUniformRNG!UniformRandomNumberGenerator); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (! Is (T == enum) &amp;amp;&amp;amp; (isIntegral! T || isSomeChar! T) &amp;amp;&amp;amp; isUniformRNG! UniformRandomNumberGenerator); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="681db8a39e79f2f332499a842a9b970dc559cd50" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (!is(T == enum) &amp;amp;&amp;amp; (isIntegral!T || isSomeChar!T)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (! Is (T == enum) &amp;amp;&amp;amp; (isIntegral! T || isSomeChar! T)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="a42319c6d3138d3d1b1e84ba75d9ba9a375cb45f" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (!is(T == struct) &amp;amp;&amp;amp; !is(T == interface) &amp;amp;&amp;amp; !is(T == class) &amp;amp;&amp;amp; !__traits(isStaticArray, T)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (! Is (T == struct) &amp;amp;&amp;amp;! Is (T == interface) &amp;amp;&amp;amp;! Is (T == class) &amp;amp;&amp;amp;! __ traits (isStaticArray, T)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="157f1a1d97ea91017ed2e8ef3a8c8bcf85755f4e" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (!is(T == struct)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (! Is (T == struct)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="21bb3be8a35bc8399b77afb13b9c4a7d3ebb1dfb" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (!is(T[0] : File)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (! Is (T [0]: File)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="f7cbf0bc0301edcc21718445fd5dc260ca9831c4" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (!is(const(T) : T)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (! Is (const (T): T)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="a6464a42788b45e10242c21efd781e528414b0d9" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (!isArray!R1 &amp;amp;&amp;amp; isInputRange!R1 &amp;amp;&amp;amp; is(ElementType!R1 : dchar) &amp;amp;&amp;amp; hasLength!R1 &amp;amp;&amp;amp; !is(R2 == ubyte[]) &amp;amp;&amp;amp; isOutputRange!(R2, ubyte)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (! IsArray! R1 &amp;amp;&amp;amp; isInputRange! R1 &amp;amp;&amp;amp; is (ElementType! R1: dchar) &amp;amp;&amp;amp; hasLength! R1 &amp;amp;&amp;amp;! Is (R2 == ubyte []) &amp;amp;&amp;amp; isOutputRange! (R2, ubyte)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="e80bdf18a08d0c0b7d6f0e82404335dbc288758c" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (!isArray!R1 &amp;amp;&amp;amp; isInputRange!R1 &amp;amp;&amp;amp; is(ElementType!R1 : dchar) &amp;amp;&amp;amp; hasLength!R1 &amp;amp;&amp;amp; is(R2 == ubyte[]) &amp;amp;&amp;amp; isOutputRange!(R2, ubyte)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (! IsArray! R1 &amp;amp;&amp;amp; isInputRange! R1 &amp;amp;&amp;amp; is (ElementType! R1: dchar) &amp;amp;&amp;amp; hasLength! R1 &amp;amp;&amp;amp; is (R2 == ubyte []) &amp;amp;&amp;amp; isOutputRange! (R2, ubyte)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="792a281be223e8c794dacd5772aaf8727695523d" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (!isArray!R1 &amp;amp;&amp;amp; isInputRange!R1 &amp;amp;&amp;amp; is(ElementType!R1 : ubyte) &amp;amp;&amp;amp; hasLength!R1 &amp;amp;&amp;amp; !is(R2 == char[]) &amp;amp;&amp;amp; isOutputRange!(R2, char)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (! IsArray! R1 &amp;amp;&amp;amp; isInputRange! R1 &amp;amp;&amp;amp; is (ElementType! R1: ubyte) &amp;amp;&amp;amp; hasLength! R1 &amp;amp;&amp;amp;! Is (R2 == char []) &amp;amp;&amp;amp; isOutputRange! (R2, char)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="b4deeb48c346ef3fb2016152d8d6f62b79ca7c00" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (!isArray!R1 &amp;amp;&amp;amp; isInputRange!R1 &amp;amp;&amp;amp; is(ElementType!R1 : ubyte) &amp;amp;&amp;amp; hasLength!R1 &amp;amp;&amp;amp; is(R2 == char[])); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (! IsArray! R1 &amp;amp;&amp;amp; isInputRange! R1 &amp;amp;&amp;amp; is (ElementType! R1: ubyte) &amp;amp;&amp;amp; hasLength! R1 &amp;amp;&amp;amp; is (R2 == char [])); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="15b824455619b066757ec65334c75157e2b9b62f" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (!isArray!Range &amp;amp;&amp;amp; isDigestibleRange!Range); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (! IsArray! Range &amp;amp;&amp;amp; isDigestibleRange! Range); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="5e4633203c4d8b63b7ef7d2af145b3c8999377f7" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (!isArray!Range &amp;amp;&amp;amp; isInputRange!Range &amp;amp;&amp;amp; is(ElementType!Range : dchar) &amp;amp;&amp;amp; hasLength!Range); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (! IsArray! Range &amp;amp;&amp;amp; isInputRange! Range &amp;amp;&amp;amp; is (ElementType! Range: dchar) &amp;amp;&amp;amp; hasLength! Range); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="f9e01c5b96b9ceda7099c900bd0410f1d123ae01" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (!isArray!Range &amp;amp;&amp;amp; isInputRange!Range &amp;amp;&amp;amp; is(ElementType!Range : ubyte) &amp;amp;&amp;amp; hasLength!Range); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (! IsArray! Range &amp;amp;&amp;amp; isInputRange! Range &amp;amp;&amp;amp; is (ElementType! Range: ubyte) &amp;amp;&amp;amp; hasLength! Range); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="41a7402ec5f4dd72f6665346bad866f0250fb1fa" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (!isDynamicArray!Input &amp;amp;&amp;amp; isInputRange!Input &amp;amp;&amp;amp; is(ElementType!Input : dchar)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (! IsDynamicArray! Input &amp;amp;&amp;amp; isInputRange! Input &amp;amp;&amp;amp; is (ElementType! Input: dchar)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="c31a38c6b497802f07f00cd099ff64f3230653dd" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (!isForeachIterable!Range &amp;amp;&amp;amp; (isRangeIterable!Range || __traits(compiles, typeof(r.front).length))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (! IsForeachIterable! Range &amp;amp;&amp;amp; (isRangeIterable! Range || __traits (компилируется, typeof (r.front) .length))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="10d435cc89a6c80784516d8d0605500d5a4ff14e" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (!isIntegral!(CommonType!(B, E)) &amp;amp;&amp;amp; !isFloatingPoint!(CommonType!(B, E)) &amp;amp;&amp;amp; !isPointer!(CommonType!(B, E)) &amp;amp;&amp;amp; is(typeof((ref B b) { ++b; } )) &amp;amp;&amp;amp; (is(typeof(B.init &amp;lt; E.init)) || is(typeof(B.init == E.init)))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (! IsIntegral! (CommonType! (B, E)) &amp;amp;&amp;amp;! IsFloatingPoint! (CommonType! (B, E)) &amp;amp;&amp;amp;! IsPointer! (CommonType! (B, E)) &amp;amp;&amp;amp; is (typeof ((ref B b) {++ b;})) &amp;amp;&amp;amp; (is (typeof (B.init &amp;lt;E.init)) || is (typeof (B.init == E.init)))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="8b989f28e3497cb9b4077bf9daa67839d8bf2109" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (!isIntegral!T &amp;amp;&amp;amp; is(typeof(T.init % T.init)) &amp;amp;&amp;amp; is(typeof(T.init == 0 || T.init &amp;gt; 0))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (! IsIntegral! T &amp;amp;&amp;amp; is (typeof (T.init% T.init)) &amp;amp;&amp;amp; is (typeof (T.init == 0 || T.init&amp;gt; 0))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="a49a1a30539689933bd6d2250e1cd5f5d04c3982" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (!isPointer!A); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (! IsPointer! A); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="d3a28776cd06cf45e32b99170a15aef84e26be11" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (!isSafe!(() { StopWatch sw; unaryFun!func(sw.peek()); } )); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (! IsSafe! (() {StopWatch sw; unaryFun! Func (sw.peek ());})); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="f433fa109fdc67d1e50112036197c12948f5d9d0" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (!isSafeReturn!(typeof(*task))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (! IsSafeReturn! (Typeof (* task))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="27c25b49bda8b9d98859072f4f36344488216414" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (!isSafeReturn!(typeof(task))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (! IsSafeReturn! (Typeof (task))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="c4aa90bc36c605ee983c0a6f119fd6613f16a7c7" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (!isSomeString!(T[]) &amp;amp;&amp;amp; allSatisfy!(isInputRangeOrConvertible!T, U) &amp;amp;&amp;amp; (U.length &amp;gt; 0)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (! IsSomeString! (T []) &amp;amp;&amp;amp; allSatisfy! (IsInputRangeOrConvertible! T, U) &amp;amp;&amp;amp; (U.length&amp;gt; 0)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="39e3c20f8e6b33c5da20cb359ed081b3a0f2eb0f" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (!isSomeString!S &amp;amp;&amp;amp; isInputRange!S &amp;amp;&amp;amp; isSomeChar!(ElementType!S)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (! IsSomeString! S &amp;amp;&amp;amp; isInputRange! S &amp;amp;&amp;amp; isSomeChar! (ElementType! S)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="6dbd702e4ed0228226955c5e64ff12b25f3bfd2b" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (!isSomeString!S &amp;amp;&amp;amp; isRandomAccessRange!S &amp;amp;&amp;amp; hasSlicing!S &amp;amp;&amp;amp; hasLength!S &amp;amp;&amp;amp; isSomeChar!(ElementType!S)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (! IsSomeString! S &amp;amp;&amp;amp; isRandomAccessRange! S &amp;amp;&amp;amp; hasSlicing! S &amp;amp;&amp;amp; hasLength! S &amp;amp;&amp;amp; isSomeChar! (ElementType! S)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="27cf04bc2daf5093c084d79df866ae1a2aca6316" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (!isSomeString!S &amp;amp;&amp;amp; isSomeChar!(ElementType!S) &amp;amp;&amp;amp; isBidirectionalRange!S &amp;amp;&amp;amp; (isRandomAccessRange!S &amp;amp;&amp;amp; hasLength!S || !isRandomAccessRange!S)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (! IsSomeString! S &amp;amp;&amp;amp; isSomeChar! (ElementType! S) &amp;amp;&amp;amp; isBidirectionalRange! S &amp;amp;&amp;amp; (isRandomAccessRange! S &amp;amp;&amp;amp; hasLength! S ||! IsRandomAccessRange! S)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="c890da63a418c2442782e8c6f9facec647bb0671" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (!isSomeString!Source &amp;amp;&amp;amp; isInputRange!Source &amp;amp;&amp;amp; isSomeChar!(ElementType!Source) &amp;amp;&amp;amp; isSomeChar!Target &amp;amp;&amp;amp; (Target.sizeof &amp;gt;= ElementType!Source.sizeof) &amp;amp;&amp;amp; !is(Target == enum)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (! IsSomeString! Source &amp;amp;&amp;amp; isInputRange! Source &amp;amp;&amp;amp; isSomeChar! (ElementType! Source) &amp;amp;&amp;amp; isSomeChar! Target &amp;amp;&amp;amp; (Target.sizeof&amp;gt; = ElementType! Source.sizeof) &amp;amp;&amp;amp;! Is (Target == enum)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="1ae6fd2b42861a6db996cf4cbf0fc5a23de0aea3" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (!isStaticArray!T); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (! IsStaticArray! T); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="10091ee1e0ee7a6ca37a40a8c77a3640449702a3" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if ((from == &quot;weeks&quot; || from == &quot;days&quot; || from == &quot;hours&quot; || from == &quot;minutes&quot; || from == &quot;seconds&quot; || from == &quot;msecs&quot; || from == &quot;usecs&quot; || from == &quot;hnsecs&quot; || from == &quot;nsecs&quot;) &amp;amp;&amp;amp; (to == &quot;weeks&quot; || to == &quot;days&quot; || to == &quot;hours&quot; || to == &quot;minutes&quot; || to == &quot;seconds&quot; || to == &quot;msecs&quot; || to == &quot;usecs&quot; || to == &quot;hnsecs&quot; || to == &quot;nsecs&quot;) || (from == &quot;years&quot; || from == &quot;months&quot;) &amp;amp;&amp;amp; (to == &quot;years&quot; || to == &quot;months&quot;)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if ((от == &quot;недели&quot; || от == &quot;дни&quot; || от == &quot;часы&quot; || от == &quot;минуты&quot; || от == &quot;секунды&quot; || от == &quot;msecs &quot;|| from ==&quot; usecs &quot;|| from ==&quot; hnsecs &quot;|| from ==&quot; nsecs &quot;) &amp;amp;&amp;amp; (to ==&quot; недели &quot;|| to ==&quot; дни &quot;|| to ==&quot; часы &quot; || to == &quot;минуты&quot; || to == &quot;секунды&quot; || to == &quot;msecs&quot; || to == &quot;usecs&quot; || to == &quot;hnsecs&quot; || to == &quot;nsecs&quot;) | | (от == &quot;лет&quot; || от == &quot;месяцев&quot;) &amp;amp;&amp;amp; (до == &quot;лет&quot; || до == &quot;месяцев&quot;)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="623b49192f59d0d1ca0d39dc5a0d8422b5a8b6fb" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if ((isBidirectionalRange!Range &amp;amp;&amp;amp; isSomeChar!(ElementEncodingType!Range) || isConvertibleToString!Range) &amp;amp;&amp;amp; isSomeChar!Char); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if ((isBidirectionalRange! Range &amp;amp;&amp;amp; isSomeChar! (ElementEncodingType! Range) || isConvertibleToString! Range) &amp;amp;&amp;amp; isSomeChar! Char); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="e546f1e9afca224c01b7d3eceb2c07c49f1ad8dd" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if ((isBidirectionalRange!Range &amp;amp;&amp;amp; isSomeChar!(ElementEncodingType!Range) || isNarrowString!Range) &amp;amp;&amp;amp; !isConvertibleToString!Range &amp;amp;&amp;amp; isSomeChar!C2); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if ((isBidirectionalRange! Range &amp;amp;&amp;amp; isSomeChar! (ElementEncodingType! Range) || isNarrowString! Range) &amp;amp;&amp;amp;! IsConvertibleToString! Range &amp;amp;&amp;amp; isSomeChar! C2); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="ebbb796b1dae46576f5b3fb3775ce7d141586f0a" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if ((isBidirectionalRange!Range &amp;amp;&amp;amp; isSomeChar!(ElementEncodingType!Range) || isNarrowString!Range) &amp;amp;&amp;amp; !isConvertibleToString!Range); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if ((isBidirectionalRange! Range &amp;amp;&amp;amp; isSomeChar! (ElementEncodingType! Range) || isNarrowString! Range) &amp;amp;&amp;amp;! IsConvertibleToString! Range); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="779b8ff86f5d8fdb8c955f07b9007fd4299b0b8f" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if ((isForwardRange!Range &amp;amp;&amp;amp; isSomeChar!(ElementEncodingType!Range) || isConvertibleToString!Range) &amp;amp;&amp;amp; isSomeChar!Char); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if ((isForwardRange! Range &amp;amp;&amp;amp; isSomeChar! (ElementEncodingType! Range) || isConvertibleToString! Range) &amp;amp;&amp;amp; isSomeChar! Char); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="67342898bd312a85842b62f84d4dfc43ef2b724f" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if ((isForwardRange!Range &amp;amp;&amp;amp; isSomeChar!(ElementEncodingType!Range) || isNarrowString!Range) &amp;amp;&amp;amp; !isConvertibleToString!Range &amp;amp;&amp;amp; isSomeChar!C2); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if ((isForwardRange! Range &amp;amp;&amp;amp; isSomeChar! (ElementEncodingType! Range) || isNarrowString! Range) &amp;amp;&amp;amp;! IsConvertibleToString! Range &amp;amp;&amp;amp; isSomeChar! C2); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="88171cb148507752c5b18095b770835b99dd5860" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if ((isInputRange!R &amp;amp;&amp;amp; !isInfinite!R &amp;amp;&amp;amp; isSomeChar!(ElementEncodingType!R) || isSomeString!R) &amp;amp;&amp;amp; !isConvertibleToString!R); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if ((isInputRange! R &amp;amp;&amp;amp;! IsInfinite! R &amp;amp;&amp;amp; isSomeChar! (ElementEncodingType! R) || isSomeString! R) &amp;amp;&amp;amp;! IsConvertibleToString! R); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="249186f848c40d5814c5ad7f01b27bce74cfca47" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if ((isInputRange!R &amp;amp;&amp;amp; hasLength!R || isForwardRange!R) &amp;amp;&amp;amp; !is(CommonType!(ElementType!R, E) == void)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if ((isInputRange! R &amp;amp;&amp;amp; hasLength! R || isForwardRange! R) &amp;amp;&amp;amp;! Is (CommonType! (ElementType! R, E) == void)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="035ecc29a55524f40b72bfefc19ddd5121e6074c" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if ((isInputRange!R1 &amp;amp;&amp;amp; isSomeChar!(ElementEncodingType!R1) || isSomeString!R1) &amp;amp;&amp;amp; (isInputRange!R2 &amp;amp;&amp;amp; isSomeChar!(ElementEncodingType!R2) || isSomeString!R2)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if ((isInputRange! R1 &amp;amp;&amp;amp; isSomeChar! (ElementEncodingType! R1) || isSomeString! R1) &amp;amp;&amp;amp; (isInputRange! R2 &amp;amp;&amp;amp; isSomeChar! (ElementEncodingType! R2) || isSomeString! R2)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="268dd39733625685876e0d11ab967bbebcc14c62" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if ((isInputRange!RF &amp;amp;&amp;amp; !isInfinite!RF &amp;amp;&amp;amp; isSomeChar!(ElementEncodingType!RF) || isSomeString!RF) &amp;amp;&amp;amp; !isConvertibleToString!RF &amp;amp;&amp;amp; (isInputRange!RT &amp;amp;&amp;amp; !isInfinite!RT &amp;amp;&amp;amp; isSomeChar!(ElementEncodingType!RT) || isSomeString!RT) &amp;amp;&amp;amp; !isConvertibleToString!RT); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if ((isInputRange! RF &amp;amp;&amp;amp;! IsInfinite! RF &amp;amp;&amp;amp; isSomeChar! (ElementEncodingType! RF) || isSomeString! RF) &amp;amp;&amp;amp;! IsConvertibleToString! RF &amp;amp;&amp;amp; (isInputRange! RT &amp;amp;&amp;amp;! IsInfinite! RT &amp;amp;&amp;amp; isSyCoNE) || isSomeString! RT) &amp;amp;&amp;amp;! isConvertibleToString! RT); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="3ca35d0ee288b59ef58f36885001e1476316efd4" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if ((isInputRange!RO &amp;amp;&amp;amp; !isInfinite!RO &amp;amp;&amp;amp; isSomeChar!(ElementEncodingType!RO) || isConvertibleToString!RO) &amp;amp;&amp;amp; (isInputRange!RL &amp;amp;&amp;amp; !isInfinite!RL &amp;amp;&amp;amp; isSomeChar!(ElementEncodingType!RL) || isConvertibleToString!RL)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if ((isInputRange! RO &amp;amp;&amp;amp;! IsInfinite! RO &amp;amp;&amp;amp; isSomeChar! (ElementEncodingType! RO) || isConvertibleToString! RO) &amp;amp;&amp;amp; (isInputRange! RL &amp;amp;&amp;amp;! IsInfinite! RL &amp;amp;&amp;amp; isSomeChar! (ElementEl) )); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="0658df65aa5e082202e69bff52569056e8f0cdd9" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if ((isInputRange!Range &amp;amp;&amp;amp; isSomeChar!(Unqual!(ElementEncodingType!Range)) || isNarrowString!Range) &amp;amp;&amp;amp; !isConvertibleToString!Range); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if ((isInputRange! Range &amp;amp;&amp;amp; isSomeChar! (Unqual! (ElementEncodingType! Range)) || isNarrowString! Range) &amp;amp;&amp;amp;! IsConvertibleToString! Range); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="cc70a07fe309f86d65afb760c5b5a12e7f30de97" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if ((isIntegral!(CommonType!(B, E)) || isPointer!(CommonType!(B, E))) &amp;amp;&amp;amp; isIntegral!S); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if ((isIntegral! (CommonType! (B, E)) || isPointer! (CommonType! (B, E))) &amp;amp;&amp;amp; isIntegral! S); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="4ce634765ff6e4ecfc30f730ab8be1ed439d0997" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if ((isNarrowString!R1 || isRandomAccessRange!R1 &amp;amp;&amp;amp; hasSlicing!R1 &amp;amp;&amp;amp; isSomeChar!(ElementType!R1) &amp;amp;&amp;amp; !isConvertibleToString!R1) &amp;amp;&amp;amp; (isNarrowString!R2 || isRandomAccessRange!R2 &amp;amp;&amp;amp; hasSlicing!R2 &amp;amp;&amp;amp; isSomeChar!(ElementType!R2) &amp;amp;&amp;amp; !isConvertibleToString!R2)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if ((isNarrowString! R1 || isRandomAccessRange! R1 &amp;amp;&amp;amp; имеет срез! ! R2) &amp;amp;&amp;amp;! IsConvertibleToString! R2)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="dee987c834d057d8ca918dcabdcb094704f0ca96" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if ((isRandomAccessRange!R &amp;amp;&amp;amp; hasSlicing!R || isNarrowString!R) &amp;amp;&amp;amp; !isConvertibleToString!R); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if ((isRandomAccessRange! R &amp;amp;&amp;amp; hasSlicing! R || isNarrowString! R) &amp;amp;&amp;amp;! IsConvertibleToString! R); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="398616d1c0fd6ddf469287c7ce5ace8a567d341d" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if ((isRandomAccessRange!R &amp;amp;&amp;amp; isSomeChar!(ElementType!R) || isNarrowString!R) &amp;amp;&amp;amp; !isConvertibleToString!R); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if ((isRandomAccessRange! R &amp;amp;&amp;amp; isSomeChar! (ElementType! R) || isNarrowString! R) &amp;amp;&amp;amp;! IsConvertibleToString! R); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="87f923c28d98bb0b1ef327c35d8d6a00720e64a1" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if ((isRandomAccessRange!R1 &amp;amp;&amp;amp; hasSlicing!R1 &amp;amp;&amp;amp; hasLength!R1 &amp;amp;&amp;amp; isSomeChar!(ElementType!R1) || isNarrowString!R1 &amp;amp;&amp;amp; !isConvertibleToString!R1) &amp;amp;&amp;amp; (isRandomAccessRange!R2 &amp;amp;&amp;amp; hasSlicing!R2 &amp;amp;&amp;amp; hasLength!R2 &amp;amp;&amp;amp; isSomeChar!(ElementType!R2) || isNarrowString!R2 &amp;amp;&amp;amp; !isConvertibleToString!R2) &amp;amp;&amp;amp; (Ranges.length == 0 || is(typeof(chainPath(r2, ranges))))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if ((isRandomAccessRange! R1 &amp;amp;&amp;amp; hasSlicing! R1 &amp;amp;&amp;amp; hasLength! R1 &amp;amp;&amp;amp; isSomeChar! (ElementType! R1) || isNarrowString! R1 &amp;amp;&amp;amp;! IsConvertibleToString! R1) &amp;amp;&amp;amp; (isRandomAccessRansh R2) R2 ! (ElementType! R2) || isNarrowString! R2 &amp;amp;&amp;amp;! IsConvertibleToString! R2) &amp;amp;&amp;amp; (Ranges.length == 0 || is (typeof (chainPath (r2, range))))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="12a188057aa6e19bc4baff3db37bfd316c3ee084" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if ((isRandomAccessRange!Range &amp;amp;&amp;amp; hasLength!Range &amp;amp;&amp;amp; hasSlicing!Range &amp;amp;&amp;amp; isSomeChar!(ElementEncodingType!Range) || isNarrowString!Range) &amp;amp;&amp;amp; !isConvertibleToString!Range); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if ((isRandomAccessRange! Range &amp;amp;&amp;amp; hasLength! Range &amp;amp;&amp;amp; hasSlicing! Range &amp;amp;&amp;amp; isSomeChar! (ElementEncodingType! Range) || isNarrowString! Range) &amp;amp;&amp;amp;! IsConvertibleToString! Range); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="6a3792374fb98223ab19254de0b5cbad0fb8fccc" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if ((isRandomAccessRange!Range &amp;amp;&amp;amp; isSomeChar!(ElementEncodingType!Range) || isNarrowString!Range) &amp;amp;&amp;amp; !isConvertibleToString!Range); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if ((isRandomAccessRange! Range &amp;amp;&amp;amp; isSomeChar! (ElementEncodingType! Range) || isNarrowString! Range) &amp;amp;&amp;amp;! IsConvertibleToString! Range); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="012e959a3c3ca02cfa8dddef31282ada49b8c1f8" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if ((op == &quot;%&quot; || op == &quot;/&quot;) &amp;amp;&amp;amp; isIntegral!T); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if ((op == &quot;%&quot; || op == &quot;/&quot;) &amp;amp;&amp;amp; isIntegral! T); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="f5769eb2381fa00ae26725375edfe12e668ca999" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if ((op == &quot;&amp;amp;&quot; || op == &quot;|&quot; || op == &quot;^&quot; || op == &quot;&amp;gt;&amp;gt;&quot; || op == &quot;&amp;lt;&amp;lt;&quot; || op == &quot;&amp;gt;&amp;gt;&amp;gt;&quot;) &amp;amp;&amp;amp; is(typeof(opLogic!(T, op)(rhs)))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if ((op == &quot;&amp;amp;&quot; || op == &quot;|&quot; || op == &quot;^&quot; || op == &quot;&amp;gt;&amp;gt;&quot; || op == &quot;&amp;lt;&amp;lt;&quot; || op == &quot;&amp;gt;&amp;gt;&amp;gt;&quot;) &amp;amp;&amp;amp; is (typeof (opLogic! (T, op) (rhs)))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="a3b832aaa86c8e44f5a23fc1f0c41fafafd2c18a" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if ((op == &quot;&amp;amp;&quot; || op == &quot;|&quot; || op == &quot;^&quot;) &amp;amp;&amp;amp; is(typeof(opLogic!(T, op)(lhs)))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if ((op == &quot;&amp;amp;&quot; || op == &quot;|&quot; || op == &quot;^&quot;) &amp;amp;&amp;amp; is (typeof (opLogic! (T, op) (lhs)))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="ec879841d8c651dd6bd809e154e69b7e23e848cb" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if ((op == &quot;+&quot; || op == &quot;*&quot; || op == &quot;-&quot; || op == &quot;/&quot; || op == &quot;|&quot; || op == &quot;&amp;amp;&quot; || op == &quot;^&quot; || op == &quot;&amp;gt;&amp;gt;&quot; || op == &quot;&amp;lt;&amp;lt;&quot; || op == &quot;^^&quot;) &amp;amp;&amp;amp; isIntegral!T); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if ((op == &quot;+&quot; || op == &quot;*&quot; || op == &quot;-&quot; || op == &quot;/&quot; || op == &quot;|&quot; || op == &quot;&amp;amp; &quot;|| op ==&quot; ^ &quot;|| op ==&quot; &amp;gt;&amp;gt; &quot;|| op ==&quot; &amp;lt;&amp;lt; &quot;|| op ==&quot; ^^ &quot;) &amp;amp;&amp;amp; isIntegral! T); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="e35a4c8a5ca0d437ee9f752ba6cc9750a83832f0" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if ((op == &quot;+&quot; || op == &quot;*&quot; || op == &quot;-&quot; || op == &quot;|&quot; || op == &quot;&amp;amp;&quot; || op == &quot;^&quot; || op == &quot;/&quot; || op == &quot;%&quot;) &amp;amp;&amp;amp; is(T : BigInt)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if ((op == &quot;+&quot; || op == &quot;*&quot; || op == &quot;-&quot; || op == &quot;|&quot; || op == &quot;&amp;amp;&quot; || op == &quot;^ &quot;|| op ==&quot; / &quot;|| op ==&quot;% &quot;) &amp;amp;&amp;amp; is (T: BigInt)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="0d1c9e80cc6dfba48c66d333219569c17bfab46e" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if ((op == &quot;+&quot; || op == &quot;*&quot; || op == &quot;|&quot; || op == &quot;&amp;amp;&quot; || op == &quot;^&quot;) &amp;amp;&amp;amp; isIntegral!T); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if ((op == &quot;+&quot; || op == &quot;*&quot; || op == &quot;|&quot; || op == &quot;&amp;amp;&quot; || op == &quot;^&quot;) &amp;amp;&amp;amp; isIntegral! T); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="a5d7ca10523acf8fb5ab73ceae2b88a7c69b8d56" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if ((op == &quot;+&quot; || op == &quot;*&quot;) &amp;amp;&amp;amp; is(typeof(opArithmetic!(T, op)(lhs)))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if ((op == &quot;+&quot; || op == &quot;*&quot;) &amp;amp;&amp;amp; is (typeof (opArithmetic! (T, op) (lhs)))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="78b31d227cae55b1717b051135cff3d35aaaa1d2" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if ((op == &quot;+&quot; || op == &quot;-&quot; || op == &quot;%&quot;) &amp;amp;&amp;amp; is(_Unqual!D == Duration) || (op == &quot;+&quot; || op == &quot;-&quot;) &amp;amp;&amp;amp; is(_Unqual!D == TickDuration)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if ((op == &quot;+&quot; || op == &quot;-&quot; || op == &quot;%&quot;) &amp;amp;&amp;amp; равно (_Unqual! D == Duration) || (op == &quot;+&quot; || op == &quot;-&quot;) &amp;amp;&amp;amp; is (_Unqual! D == TickDuration)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="5c54d8f240e3f45a50191e3c245e6e65b5467516" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if ((op == &quot;+&quot; || op == &quot;-&quot; || op == &quot;*&quot; || op == &quot;/&quot; || op == &quot;%&quot; || op == &quot;&amp;gt;&amp;gt;&quot; || op == &quot;&amp;lt;&amp;lt;&quot; || op == &quot;^^&quot; || op == &quot;|&quot; || op == &quot;&amp;amp;&quot; || op == &quot;^&quot;) &amp;amp;&amp;amp; isIntegral!T); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if ((op == &quot;+&quot; || op == &quot;-&quot; || op == &quot;*&quot; || op == &quot;/&quot; || op == &quot;%&quot; || op == &quot;&amp;gt; &amp;gt; &quot;|| op ==&quot; &amp;lt;&amp;lt; &quot;|| op ==&quot; ^^ &quot;|| op ==&quot; | &quot;|| op ==&quot; &amp;amp; &quot;|| op ==&quot; ^ &quot;) &amp;amp;&amp;amp; isIntegral! T) ; &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="d1e3a5e469d12d5de2d3238168b2ace2f056a15c" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if ((op == &quot;+&quot; || op == &quot;-&quot; || op == &quot;*&quot; || op == &quot;/&quot; || op == &quot;^^&quot; || op == &quot;%&quot;) &amp;amp;&amp;amp; is(typeof(opArithmetic!(T, op)(rhs)))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if ((op == &quot;+&quot; || op == &quot;-&quot; || op == &quot;*&quot; || op == &quot;/&quot; || op == &quot;^^&quot; || op == &quot; % &quot;) &amp;amp;&amp;amp; is (typeof (opArithmetic! (T, op) (rhs)))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="fa10cab0a4b7f726dba8702b2e003788a7686c30" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if ((op == &quot;+&quot; || op == &quot;-&quot; || op == &quot;*&quot; || op == &quot;|&quot; || op == &quot;&amp;amp;&quot; || op == &quot;^&quot; || op == &quot;/&quot; || op == &quot;%&quot;) &amp;amp;&amp;amp; is(T : BigInt)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if ((op == &quot;+&quot; || op == &quot;-&quot; || op == &quot;*&quot; || op == &quot;|&quot; || op == &quot;&amp;amp;&quot; || op == &quot;^ &quot;|| op ==&quot; / &quot;|| op ==&quot;% &quot;) &amp;amp;&amp;amp; is (T: BigInt)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="f0a3381f9af27bedc9aae8ae9a705c98b75dc08c" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if ((op == &quot;+&quot; || op == &quot;-&quot;) &amp;amp;&amp;amp; is(_Unqual!D == TickDuration)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if ((op == &quot;+&quot; || op == &quot;-&quot;) &amp;amp;&amp;amp; равно (_Unqual! D == TickDuration)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="e7597f4ad6bd49a7d79205a15c3e0ef6557e11e9" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if ((radix == 2 || radix == 8 || radix == 10 || radix == 16) &amp;amp;&amp;amp; (is(Unqual!T == uint) || is(Unqual!T == ulong) || radix == 10 &amp;amp;&amp;amp; (is(Unqual!T == int) || is(Unqual!T == long)))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: если ((radix == 2 || radix == 8 || radix == 10 || radix == 16) &amp;amp;&amp;amp; (есть (Unqual! T == uint) || есть (Unqual! T == ulong) || radix == 10 &amp;amp;&amp;amp; (is (Unqual! T == int) || is (Unqual! T == long)))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="b93d15dba0d418c1e2c1dd99cc92d0464880dbf3" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if ((ss == SwapStrategy.unstable &amp;amp;&amp;amp; (hasSwappableElements!Range || hasAssignableElements!Range) || ss != SwapStrategy.unstable &amp;amp;&amp;amp; hasAssignableElements!Range) &amp;amp;&amp;amp; isRandomAccessRange!Range &amp;amp;&amp;amp; hasSlicing!Range &amp;amp;&amp;amp; hasLength!Range); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if ((ss == SwapStrategy.unstable &amp;amp;&amp;amp; (hasSwappableElements! Range || hasAssignableElements! Range) || ss! = SwapStrategy.unstable &amp;amp;&amp;amp; hasAssignableElements! Range) &amp;amp;&amp;amp; isRandomAccessRange! Range &amp;amp;&amp;amp; hasSlicingth!) Range &amp;amp;&amp;amp; hasSlicingth!) &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="e44fb8c1dadb3da0fa5ae1f3871c31ad53e9a599" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (A.length &amp;gt; 0); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (A.length&amp;gt; 0); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="5f574a71592b36456eef3dce20b8f6e5d0e590a4" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (N &amp;lt;= 16); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: если (N &amp;lt;= 16); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="a8ab206c08f4c0a3724c479c9470b14fdee67a15" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (Offset.length &amp;gt;= 1 &amp;amp;&amp;amp; allSatisfy!(isValidIntegralTuple, Offset)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (Offset.length&amp;gt; = 1 &amp;amp;&amp;amp; allSatisfy! (IsValidIntegralTuple, Offset)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="64c316620c07295ec121f87ea75762bd05812d3f" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (R.length &amp;gt; 1 &amp;amp;&amp;amp; areCompatibleTuples!(typeof(this), Tuple!R, &quot;==&quot;)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (R.length&amp;gt; 1 &amp;amp;&amp;amp; areCompatibleTuples! (Typeof (this), Tuple! R, &quot;==&quot;)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="e9cefa6a665b3e3a374fca33c54853e5e67e2702" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (Ranges.length &amp;amp;&amp;amp; allSatisfy!(isInputRange, Ranges)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (Ranges.length &amp;amp;&amp;amp; allSatisfy! (IsInputRange, Ranges)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="7bd3ca33c56a0948c93f2aff6bfd91eea3704c9f" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (Ranges.length &amp;gt; 0 &amp;amp;&amp;amp; allSatisfy!(isInputRange, staticMap!(Unqual, Ranges)) &amp;amp;&amp;amp; !is(CommonType!(staticMap!(ElementType, staticMap!(Unqual, Ranges))) == void)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (Ranges.length&amp;gt; 0 &amp;amp;&amp;amp; allSatisfy! (IsInputRange, staticMap! (Unqual, Ranges)) &amp;amp;&amp;amp;! Is (CommonType! (StaticMap! (ElementType, staticMap! (Unqual, Ranges))) == void)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="e0cf392f23d51b335819f5d7f0842e5ce915a55d" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (Ranges.length &amp;gt; 1 &amp;amp;&amp;amp; allSatisfy!(isForwardRange, Ranges) &amp;amp;&amp;amp; is(typeof(find!pred(haystack, needles)))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (Ranges.length&amp;gt; 1 &amp;amp;&amp;amp; allSatisfy! (IsForwardRange, Ranges) &amp;amp;&amp;amp; is (typeof (find! Pred (стог сена, иглы)))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="4f0450de4fb01387d01f6d0f19b171a8ce30f075" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (Ranges.length &amp;gt; 1 &amp;amp;&amp;amp; is(typeof(startsWith!pred(haystack, needles)))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (Ranges.length&amp;gt; 1 &amp;amp;&amp;amp; is (typeof (начинается с! Pred (стог сена, иглы)))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="e62bc270b7e46d9c11ce494cbcd3673713821a77" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (Ranges.length &amp;gt;= 2 &amp;amp;&amp;amp; allSatisfy!(isInputRange, staticMap!(Unqual, Ranges)) &amp;amp;&amp;amp; !is(CommonType!(staticMap!(ElementType, Ranges)) == void)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (Ranges.length&amp;gt; = 2 &amp;amp;&amp;amp; allSatisfy! (IsInputRange, staticMap! (Unqual, Ranges)) &amp;amp;&amp;amp;! Is (CommonType! (StaticMap! (ElementType, Ranges)) == void)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="26e5c398708ab4d27846f7f800ccfdd81ff933a2" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (Rs.length &amp;gt; 1 &amp;amp;&amp;amp; allSatisfy!(isInputRange, staticMap!(Unqual, Rs))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (Rs.length&amp;gt; 1 &amp;amp;&amp;amp; allSatisfy! (IsInputRange, staticMap! (Unqual, Rs))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="72320294dd978ed731b266d6486f4dcd1bb77147" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (Rs.length &amp;gt;= 2 &amp;amp;&amp;amp; allSatisfy!(isInputRange, Rs) &amp;amp;&amp;amp; !is(CommonType!(staticMap!(ElementType, Rs)) == void)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (Rs.length&amp;gt; = 2 &amp;amp;&amp;amp; allSatisfy! (IsInputRange, Rs) &amp;amp;&amp;amp;! Is (CommonType! (StaticMap! (ElementType, Rs)) == void)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="2e20c654caa6fec77f97679cda25bc5eff65ad29" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (T.length &amp;gt; 0); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (T.length&amp;gt; 0); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="1f6193a6a10122cc7c94c9aed606b6364aa8bb5c" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (T.length &amp;gt;= 2); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (T.length&amp;gt; = 2); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="bde3151bed60a381bba9625a59cfc1d75d971c09" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (T.length == 2 &amp;amp;&amp;amp; is(typeof(binaryFun!less(values[1], values[0])) : bool) || T.length &amp;gt; 2 &amp;amp;&amp;amp; is(typeof(ordered!less(values[0..1 + $ / 2]))) &amp;amp;&amp;amp; is(typeof(ordered!less(values[$ / 2..$])))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (T.length == 2 &amp;amp;&amp;amp; is (typeof (binaryFun! Less (values ​​[1], values ​​[0])): bool) || T.length&amp;gt; 2 &amp;amp;&amp;amp; is (typeof (упорядоченный! Less (значения) [0..1 + $ / 2]))) &amp;amp;&amp;amp; is (typeof (упорядочено! Меньше (значения [$ / 2 .. $])))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="ec0daf7253ec7f68bb13ef06cbd9c195b21a808b" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (Values.length != 0); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (Values.length! = 0); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="8447559a4ce58558cc9c8958460ab5c41cebfd80" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (__traits(compiles, () { val = newval; } )); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (__traits (compiles, () {val = newval;})); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="9f9cc7d773be4ee9c0a082b06c4a7e0c528e27d3" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (__traits(compiles, (Appender!A a) =&amp;gt; mixin(&quot;a.&quot; ~ fn ~ &quot;(args)&quot;))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (__traits (компилируется, (Appender! A a) =&amp;gt; mixin (&quot;a.&quot; ~ Fn ~ &quot;(args)&quot;))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="b42a52640aab102db6bee59705ad2fd185eb9c21" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (__traits(compiles, (Appender!A a) { a.put(rhs); } )); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (__traits (компилируется, (Appender! A a) {a.put (rhs);})); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="8ef971a682c9f303f306f17a484bf925da5bf221" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (__traits(compiles, begin + duration)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (__traits (compiles, begin + duration)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="ebcb2cf38f3ff9f33da588ecbbe2a445b478443c" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (__traits(compiles, end + duration)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (__traits (compiles, end + duration)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="48577fd6936505bf97dc2a5530dd3efc2d488752" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (__traits(compiles, mixin(&quot;*cast(T*)&amp;amp;val&quot; ~ op ~ &quot;mod&quot;))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (__traits (compiles, mixin (&quot;* cast (T *) &amp;amp; val&quot; ~ op ~ &quot;mod&quot;))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="71c9a68bf9bbf17bac38dbda2ab72abc85bba16f" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (__traits(compiles, new T(args))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (__traits (compiles, new T (args))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="32e84a0f972ed265b5bafb4578af6e7233c37271" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (__traits(isIntegral, T) &amp;amp;&amp;amp; __traits(isUnsigned, T)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (__traits (isIntegral, T) &amp;amp;&amp;amp; __traits (isUnsigned, T)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="2d2c2598c74f4efda5db8e8c9787b66b985d38f1" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (__traits(isRef, source) || isDynamicArray!S || isPointer!S || is(S == class)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (__traits (isRef, source) || isDynamicArray! S || isPointer! S || is (S == класс)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="2bc853e4941c6c333ee26bb12202f067b004e51b" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (allSatisfy!(isArray, typeof(data))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (allSatisfy! (IsArray, typeof (data))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="8c210cc3878d9c923a5606586efe124cbdc252bf" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (allSatisfy!(isImplicitlyConvertibleToElem, U)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (allSatisfy! (IsImplicitlyConvertibleToElem, U)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="78df4fce3725c3458574b377d315b945cb33e35e" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (allSatisfy!(isInputRange, Ranges)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (allSatisfy! (IsInputRange, Ranges)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="1738772dc7fa03adc88e0bbb962a7113f44d7b9f" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (allocate_gc == Yes.allocateGC &amp;amp;&amp;amp; isForwardRange!Range1 &amp;amp;&amp;amp; isForwardRange!Range2 &amp;amp;&amp;amp; !isInfinite!Range1 &amp;amp;&amp;amp; !isInfinite!Range2); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (allocate_gc == Yes.allocateGC &amp;amp;&amp;amp; isForwardRange! Range1 &amp;amp;&amp;amp; isForwardRange! Range2 &amp;amp;&amp;amp;! IsInfinite! Range1 &amp;amp;&amp;amp;! IsInfinite! Range2); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="de38a49771c49684105da28ca4649fe0a7ad40e6" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (allowed!T || is(Unqual!T == VariantN)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (разрешено! T || is (Unqual! T == VariantN)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="aa4f3e55cbc49324859b8cd46d1c32b612912108" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (allowed!T); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: если (разрешено! T); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="a3b77bc03e7479ff7c0e8009812536bfaa8392cc" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (alternatives.length &amp;gt;= 1 &amp;amp;&amp;amp; !is(CommonType!(T, Ts) == void) &amp;amp;&amp;amp; allSatisfy!(ifTestable, T, Ts)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (alternatives.length&amp;gt; = 1 &amp;amp;&amp;amp;! Is (CommonType! (T, Ts) == void) &amp;amp;&amp;amp; allSatisfy! (IfTestable, T, Ts)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="d8c168580d21306a10b25fbaafc73278aa425aa0" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (areBuildCompatibleTuples!(typeof(this), U)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (areBuildCompatibleTuples! (Typeof (this), U)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="f8ff0f2e13d75c6eedc115a3bb27f99a86d1f634" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (areCompatibleTuples!(typeof(this), R, &quot;&amp;lt;&quot;)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (areCompatibleTuples! (Typeof (this), R, &quot;&amp;lt;&quot;)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="5d1b3c382ddd18ba6996a02c7ee956a226792d26" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (areCompatibleTuples!(typeof(this), R, &quot;=&quot;)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (areCompatibleTuples! (Typeof (this), R, &quot;=&quot;)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="21bad270f59fa84792e1b3acad112710847de897" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (areCompatibleTuples!(typeof(this), R, &quot;==&quot;)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (areCompatibleTuples! (Typeof (this), R, &quot;==&quot;)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="90bceb4e0db39eae2ec5cdf835b4681cd0305fca" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (args.length != 1); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (args.length! = 1); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="c99e08edbd2579257e142e4a4000f20a846f1f24" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (args.length &amp;gt; 1 &amp;amp;&amp;amp; !is(Unqual!(A[0]) : bool) &amp;amp;&amp;amp; !is(Unqual!(A[0]) == LogLevel) || args.length == 0); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (args.length&amp;gt; 1 &amp;amp;&amp;amp;! Is (Unqual! (A [0]): bool) &amp;amp;&amp;amp;! Is (Unqual! (A [0]) == LogLevel) || args.length == 0); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="fe53fe73d3090722500f74b9b8f7eac89cb4b392" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (args.length &amp;gt; 1 &amp;amp;&amp;amp; !is(Unqual!(A[0]) : bool) || args.length == 0); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (args.length&amp;gt; 1 &amp;amp;&amp;amp;! Is (Unqual! (A [0]): bool) || args.length == 0); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="9f0f065f42cd6152b0ac2e7da30f684cdc2c3af1" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (args.length &amp;gt; 1 &amp;amp;&amp;amp; !is(Unqual!(A[0]) : bool)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (args.length&amp;gt; 1 &amp;amp;&amp;amp;! Is (Unqual! (A [0]): bool)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="98efb605fee9453f23ec9afed67a93fbe3006fa3" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (args.length == 0 || args.length &amp;gt; 0 &amp;amp;&amp;amp; !is(A[0] : bool)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (args.length == 0 || args.length&amp;gt; 0 &amp;amp;&amp;amp;! Is (A [0]: bool)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="c44bf5a598eb79320aa5476d0cc00d6cf54d6f9d" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (canPutItem!U); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (canPutItem! U); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="43c8ecfa1eb70479ddb160b9426a866fa56e1963" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (canPutRange!Range); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (canPutRange! Range); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="2d2cc68ea6c919b7424faee57ce773c714987cf4" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (canSwapEndianness!T &amp;amp;&amp;amp; (n == T.sizeof)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (canSwapEndianness! T &amp;amp;&amp;amp; (n == T.sizeof)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="1ab60ac3cd08e503961d480b0f74ba36a837500f" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (canSwapEndianness!T &amp;amp;&amp;amp; isForwardRange!R &amp;amp;&amp;amp; hasSlicing!R &amp;amp;&amp;amp; is(ElementType!R : const(ubyte))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (canSwapEndianness! T &amp;amp;&amp;amp; isForwardRange! R &amp;amp;&amp;amp; hasSlicing! R &amp;amp;&amp;amp; is (ElementType! R: const (ubyte))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="621ff3d02b4f80ceb29be2f8914607591bfb677e" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (canSwapEndianness!T &amp;amp;&amp;amp; isForwardRange!R &amp;amp;&amp;amp; hasSlicing!R &amp;amp;&amp;amp; is(ElementType!R : ubyte)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (canSwapEndianness! T &amp;amp;&amp;amp; isForwardRange! R &amp;amp;&amp;amp; hasSlicing! R &amp;amp;&amp;amp; is (ElementType! R: ubyte)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="a97b01a0f9e451194428b9a903bd87300a4202a7" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (canSwapEndianness!T &amp;amp;&amp;amp; isForwardRange!R &amp;amp;&amp;amp; is(ElementType!R : const(ubyte))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (canSwapEndianness! T &amp;amp;&amp;amp; isForwardRange! R &amp;amp;&amp;amp; is (ElementType! R: const (ubyte))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="8703a9d6946b2d0b121d74164ddbbaceff29c0d2" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (canSwapEndianness!T &amp;amp;&amp;amp; isInputRange!R &amp;amp;&amp;amp; is(ElementType!R : const(ubyte))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (canSwapEndianness! T &amp;amp;&amp;amp; isInputRange! R &amp;amp;&amp;amp; is (ElementType! R: const (ubyte))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="4b374d355acb32e407a573790faa4c933cbbea0b" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (canSwapEndianness!T &amp;amp;&amp;amp; isOutputRange!(R, ubyte)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (canSwapEndianness! T &amp;amp;&amp;amp; isOutputRange! (R, ubyte)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="236cd30acdc1892a5781d68dceecfa51f349f372" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (canSwapEndianness!T); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (canSwapEndianness! T); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="78779908f9367b6c843ed1ab9c3f74b18be9c2fc" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (from &amp;lt;= to &amp;amp;&amp;amp; (to &amp;lt;= Types.length)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (от &amp;lt;= до &amp;amp;&amp;amp; (до &amp;lt;= Types.length)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="a03b08705955058b1574bae15f880e8039745b25" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (hasLength!Rhs &amp;amp;&amp;amp; hasSlicing!Rhs &amp;amp;&amp;amp; hasSwappableElements!Lhs &amp;amp;&amp;amp; hasSwappableElements!Rhs); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (hasLength! Rhs &amp;amp;&amp;amp; hasSlicing! Rhs &amp;amp;&amp;amp; hasSwappableElements! Lhs &amp;amp;&amp;amp; hasSwappableElements! Rhs); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="2fd7211c393dc986910345a7abc2578a6ed23b26" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (hasMember!(Allocator, &quot;alignedAllocate&quot;)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (hasMember! (Allocator, &quot;alignAllocate&quot;)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="c091efdefab0c867bb967924cfc005c7081bea66" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (hasSlicing!Range &amp;amp;&amp;amp; hasLength!Range &amp;amp;&amp;amp; isSomeChar!(ElementType!Range) &amp;amp;&amp;amp; !isSomeString!Range); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (hasSlicing! Range &amp;amp;&amp;amp; hasLength! Range &amp;amp;&amp;amp; isSomeChar! (ElementType! Range) &amp;amp;&amp;amp;! IsSomeString! Range); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="6becaeabf811c8c3cc52a63bd1ecc91956222f66" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (hasSwappableElements!InputRange1 &amp;amp;&amp;amp; hasSwappableElements!InputRange2 &amp;amp;&amp;amp; is(ElementType!InputRange1 == ElementType!InputRange2)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (hasSwappableElements! InputRange1 &amp;amp;&amp;amp; hasSwappableElements! InputRange2 &amp;amp;&amp;amp; is (ElementType! InputRange1 == ElementType! InputRange2)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="1bbec56c0bff9af8fdbeed879d6fdbd1fa15ae44" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (implementsInterface!(Source, Targets)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (ImplementsInterface! (Source, Targets)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="5ebee28ded09a3e0253dcf25de20d32db4cad9e1" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (index &amp;lt; AllowedTypes.length); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (index &amp;lt;AllowedTypes.length); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="6e9de95dfa7638f1cd52958763f89dc2ecb24e27" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(BasicElementOf!Range : dchar) &amp;amp;&amp;amp; isRegexFor!(RegEx, Range)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (is (BasicElementOf! Range: dchar) &amp;amp;&amp;amp; isRegexFor! (RegEx, Range)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="5e64ffc06fd9af18062a6e15629285767176b756" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(C : dchar)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: если (есть (C: dchar)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="13c4a3c81c4a4e05fe6dc7cd666c1365dcdb3bf0" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(C == char) || is(C == wchar) || is(C == dchar)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: если (есть (C == char) || есть (C == wchar) || есть (C == dchar)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="4a703c3042f61c21b6da6bf0c283d69e4aa6af93" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(Delegate == delegate)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (is (Делегат == делегат)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="40787b21fabb2957509ec07fa5a4f08ab5eb28a1" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(E : ubyte) &amp;amp;&amp;amp; isOutputRange!(R, char) &amp;amp;&amp;amp; !is(R == char[])); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (is (E: ubyte) &amp;amp;&amp;amp; isOutputRange! (R, char) &amp;amp;&amp;amp;! Is (R == char [])); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="326433c01e00f535dda3f4880641f8ee08b1b922" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(E == enum) &amp;amp;&amp;amp; isUniformRNG!UniformRandomNumberGenerator); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (is (E == enum) &amp;amp;&amp;amp; isUniformRNG! UniformRandomNumberGenerator); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="916c3f6f298cbe2277f0f2185823b2b5f6101023" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(E == enum)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (is (E == enum)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="d0c5835957213f534ccd76ed1656ad2f1e210ef2" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(FT == function)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: если (есть (FT == функция)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="b59bb31ddd351cfba617a7ea7afc4f56304071bd" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(Q == Mutex) || is(Q == shared(Mutex))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (is (Q == Mutex) || is (Q == shared (Mutex))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="f14827446992ecfc276bb94e2bde59ef107de685" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(R : double) &amp;amp;&amp;amp; is(I : double)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (is (R: double) &amp;amp;&amp;amp; is (I: double)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="ff517fd93bbb10a48d6e5b31ed7f26c2087cd806" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(R : double)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: если (есть (R: double)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="6002e4a28c52a04db037125823001150f1da1bbd" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(Range == char[]) || is(Range == wchar[])); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (is (Range == char []) || is (Range == wchar [])); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="83b23d308f2b97450eef500c52f127a413c722e9" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(Rhs == Checked!(RhsT, RhsHook), RhsT, RhsHook)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: если (есть (Rhs == Проверено! (RhsT, RhsHook), RhsT, RhsHook)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="ca1d8253bc1a774b445e535e74b2ea2eec112b3a" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(S : const(char[])) || isInputRange!S &amp;amp;&amp;amp; is(Unqual!(ElementType!S) == char)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (is (S: const (char [])) || isInputRange! S &amp;amp;&amp;amp; is (Unqual! (ElementType! S) == char)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="f580891bab47439b3800eb65a91a16ba09e712c4" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(S : const(char[])) || isRandomAccessRange!S &amp;amp;&amp;amp; hasLength!S &amp;amp;&amp;amp; is(Unqual!(ElementType!S) == char)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (is (S: const (char [])) || isRandomAccessRange! S &amp;amp;&amp;amp; hasLength! S &amp;amp;&amp;amp; is (Unqual! (ElementType! S) == char)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="e723d974b34d78a9f2b813e3b8113abbf2ece7a6" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(S : const(char[])) || isRandomAccessRange!S &amp;amp;&amp;amp; is(Unqual!(ElementType!S) == char)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (is (S: const (char [])) || isRandomAccessRange! S &amp;amp;&amp;amp; is (Unqual! (ElementType! S) == char)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="35e6c37cd37ef8d305dd50e78cdca8526947e92b" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(S : const(dchar[])) || isInputRange!S &amp;amp;&amp;amp; is(Unqual!(ElementEncodingType!S) == dchar)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (is (S: const (dchar [])) || isInputRange! S &amp;amp;&amp;amp; is (Unqual! (ElementEncodingType! S) == dchar)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="fe43837a8cf59d99e48229822ea61029e5d9d4a8" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(S : const(wchar[])) || isBidirectionalRange!S &amp;amp;&amp;amp; is(Unqual!(ElementType!S) == wchar)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (is (S: const (wchar [])) || isBidirectionalRange! S &amp;amp;&amp;amp; is (Unqual! (ElementType! S) == wchar)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="864c8b7ed72f5e87bedd0c8032f56fa097478cf9" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(S : const(wchar[])) || isRandomAccessRange!S &amp;amp;&amp;amp; is(Unqual!(ElementType!S) == wchar)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (is (S: const (wchar [])) || isRandomAccessRange! S &amp;amp;&amp;amp; is (Unqual! (ElementType! S) == wchar)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="0c371f683d2e01bb340305b99e9841c20be6c32a" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(S : const(wchar[]))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (is (S: const (wchar []))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="934709489f72cde02cab30d670811ff95fbbd3ec" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(S == struct)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (is (S == struct)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="55cf47656edbd9451f0a4f8f4230f95c00425ca7" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(Stuff : bool)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: если (есть (Stuff: bool)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="d0c2f77da24386d604dee47d093d74eb7a031243" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(T == char) || is(T == ubyte)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (is (T == char) || is (T == ubyte)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="84222588fe5f3e04e4af51c7cad8ea572fb8ac5f" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(T == class) &amp;amp;&amp;amp; __traits(compiles, () { *here = exchangeWith; } )); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (is (T == class) &amp;amp;&amp;amp; __traits (compiles, () {* here = exchangeWith;})); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="02ed4172888549ab11f9821c54e9ec3c0d9cc65a" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(T == class) &amp;amp;&amp;amp; __traits(compiles, () { *here = writeThis; } )); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (is (T == class) &amp;amp;&amp;amp; __traits (compiles, () {* here = writeThis;})); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="b0f64a2b1a839a5b202792f47ef8a4358bcd415e" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(T == class) || is(T == interface) || isDynamicArray!T || isAssociativeArray!T); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (is (T == class) || is (T == interface) || isDynamicArray! T || isAssociativeArray! T); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="d521d5adf54c42ff19a811d3e81fe67cc8e8c58a" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(T == class) || is(T == interface)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (is (T == class) || is (T == interface)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="a6e21b8d1c9700521bdaaa8d2d7b254fb6c81b52" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(T == class)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: если (есть (T == класс)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="28faa6af92d30c37ed7dade4ce13b054377929e1" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(T == int) || is(T == long)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (is (T == int) || is (T == long)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="0466d4ba98dd4042a54e9cf2f0a8a3ea047a8c5f" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(T == interface)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: если (есть (T == интерфейс)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="59fe0dca81d42b330f93118bcc512d949604aef4" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(T == struct) || Args.length == 1); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (is (T == struct) || Args.length == 1); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="e80f1bd2f38e627cddcb3d81f9b775f0847afa4b" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(T == struct)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (is (T == struct)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="b0dea0980518591a00d808f2007b00418e6a6fc0" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(T == ulong) || is(T == uint)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (is (T == ulong) || is (T == uint)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="83d71e660ace0d80c9e53c011f11da39cee3d5e0" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(T U : U*) &amp;amp;&amp;amp; __traits(compiles, () { *here = exchangeWith; } )); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (is (TU: U *) &amp;amp;&amp;amp; __traits (compiles, () {* here = exchangeWith;})); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="4dc53f799375278af3ab0862dd72ff0a5ac0e896" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(T U : U*) &amp;amp;&amp;amp; __traits(compiles, () { *here = writeThis; } )); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (is (TU: U *) &amp;amp;&amp;amp; __traits (compiles, () {* here = writeThis;})); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="5c6e573851af9b2a0f04504fa5795a8d9ee31b38" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(U : dchar)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (is (U: dchar)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="ae9264c5d1e3fe1ef5fb0f5e583c0cd5a22eaf7d" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(Unqual!(ElementEncodingType!Terminator) == Char)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (is (Unqual! (ElementEncodingType! Terminator) == Char)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="2ee22d046048ffd180b3e013e643c9371aa347c6" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(Unqual!(ElementEncodingType!Terminator) == Unqual!Char)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (is (Unqual! (ElementEncodingType! Terminator) == Unqual! Char)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="762b801b72fd93db63fad3f6fbc884dea1062b0d" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(Unqual!C == char) &amp;amp;&amp;amp; isOutputRange!(Buffer, char)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (is (Unqual! C == char) &amp;amp;&amp;amp; isOutputRange! (Buffer, char)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="01677a8b47949a90471471cb4292cbd6dbee2c21" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(Unqual!C == char)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (is (Unqual! C == char)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="cc4fbb8323032f6881f5a633cf89a50a9b7f8e99" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(Unqual!Num == short) || is(Unqual!Num == byte) || is(typeof(Num.init &amp;gt;= 0)) &amp;amp;&amp;amp; is(typeof(-Num.init))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (is (Unqual! Num == short) || is (Unqual! Num == byte) || is (typeof (Num.init&amp;gt; = 0)) &amp;amp;&amp;amp; is (typeof (-Num.init))) ; &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="259d9a1a80450217ac13749e5594a0d874870c75" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(Unqual!T == BigInt)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (is (Unqual! T == BigInt)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="5b4b96b2184aa8f5e6390a7fcd598da52da4a286" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(Unqual!T == Date)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (is (Unqual! T == Date)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="1d14ac39f97b6737f2d803ace57e2c3b30468ccb" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(Unqual!T == DateTime)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (is (Unqual! T == DateTime)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="791f4270dd2891af13dd8339590a03d03bd28715" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(Unqual!T == TimeOfDay)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (is (Unqual! T == TimeOfDay)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="46894c887f68f29ce90c3a294eba9fbcf5f2fd99" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(Unqual!TP == Unqual!U)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (is (Unqual! TP == Unqual! U)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="a8d229fb5935095b1e315366e6eb2e2c21a52c7b" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(V == void16) || is(V == byte16) || is(V == ubyte16) || is(V == short8) || is(V == ushort8) || is(V == int4) || is(V == uint4) || is(V == long2) || is(V == ulong2) || is(V == double2) || is(V == float4)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: если (есть (V == void16) || есть (V == byte16) || есть (V == ubyte16) || есть (V == short8) || есть (V == ushort8) || есть (V == int4) || есть (V == uint4) || есть (V == long2) || есть (V == ulong2) || есть (V == double2) || есть (V == float4 )); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="d6107afaaf81543aa0fa439d4c615b2da4ae5c2f" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(V1 == __vector) &amp;amp;&amp;amp; is(V2 == __vector)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (is (V1 == __vector) &amp;amp;&amp;amp; is (V2 == __vector)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="1c60915aa922e4de517609b0303c242a0b198dd9" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(V1 == __vector)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (is (V1 == __vector)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="79dbf2293df154461f056a603f11b91d37b8c2a6" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(_Unqual!D == TickDuration) &amp;amp;&amp;amp; (units == &quot;seconds&quot; || units == &quot;msecs&quot; || units == &quot;usecs&quot; || units == &quot;hnsecs&quot; || units == &quot;nsecs&quot;)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (is (_Unqual! D == TickDuration) &amp;amp;&amp;amp; (единицы == &quot;секунды&quot; || единицы == &quot;msecs&quot; || единицы == &quot;usecs&quot; || единицы == &quot;hnsecs&quot; || единицы == &quot;НСКИ&quot;)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="f7bafe11725f923d1723e8a0fa4b6e595717bec1" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(_Unqual!T == Duration)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (is (_Unqual! T == Duration)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="ee339af44fc8f45dbf254a4dad0cebef7699f192" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(_Unqual!T == TickDuration)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (is (_Unqual! T == TickDuration)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="839a0a98efb61a85314a3a8a25ccf9dbd2260219" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(const(T) : T)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: если (есть (const (T): T)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="1e15b4379d28146268516d5f52d082e70a5f8b15" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(typeof(() { if (!value) { } } ))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (is (typeof (() {if (! Value) {}}))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="0a92099037058901ee398ebff225959b7670e3f8" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(typeof(C2.init()) : bool) &amp;amp;&amp;amp; (Parameters!C1.length == 1) &amp;amp;&amp;amp; (Parameters!C2.length == 0) &amp;amp;&amp;amp; isArray!(Parameters!C1[0])); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (is (typeof (C2.init ()): bool) &amp;amp;&amp;amp; (Параметры! C1.length == 1) &amp;amp;&amp;amp; (Параметры! C2.length == 0) &amp;amp;&amp;amp; isArray! (Параметры! C1 [0]) ); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="ad752a96530c6dd6042d0853fd634ca7a48a5b25" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(typeof(Checked!(T, Hook)(rhs)))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (is (typeof (Проверено! (T, Hook) (rhs)))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="b6b078f829fccacdd642bb7c6807e498ccd1ba4f" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(typeof(Checked!(T, Hook)(value)))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (is (typeof (Проверено! (T, Hook) (значение)))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="e3485eaecf2dddab9567a8ea8837dc84f8ae584c" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(typeof(a.length) : size_t)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (is (typeof (a.length): size_t)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="d5dc30448eae18bff16ac5310de1cf76749df54c" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(typeof(a.ptr &amp;lt; b.ptr) == bool)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (is (typeof (a.ptr &amp;lt;b.ptr) == bool)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="d0c9f0a86957e8bf9d061c72b1d10640cb4b1bbc" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(typeof(binaryFun!less((ElementType!Stuff).init, (ElementType!Stuff).init))) &amp;amp;&amp;amp; isInputRange!Stuff &amp;amp;&amp;amp; !isArray!Stuff); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (is (typeof (binaryFun! Less ((ElementType! Stuff) .init, (ElementType! Stuff) .init))) &amp;amp;&amp;amp; isInputRange! Stuff &amp;amp;&amp;amp;! IsArray! Stuff); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="3118e6e6b98033852221bc8d6f759fc1cf413e25" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(typeof(binaryFun!less(E.init, E.init)))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (is (typeof (binaryFun! Less (E.init, E.init)))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="17bf4dec2258d51901c59d222b46a8feaabc873d" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(typeof(binaryFun!pred(haystack.front, needles[0].front))) &amp;amp;&amp;amp; isForwardRange!Haystack &amp;amp;&amp;amp; allSatisfy!(isInputRange, Needles) &amp;amp;&amp;amp; !is(CommonType!(staticMap!(ElementType, staticMap!(Unqual, Needles))) == void)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (is (typeof (binaryFun! Pred (haystack.front, Needles [0] .front))) &amp;amp;&amp;amp; isForwardRange! Haystack &amp;amp;&amp;amp; allSatisfy! (IsInputRange, Needles) &amp;amp;&amp;amp;! Is (CommonType! (StaticMap! (ElementType, staticMap) ! (Unqual, иглы))) == пустота)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="f4098686386470cb8544d6f7b41617e82a031cfb" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(typeof(binaryFun!pred(r.front, s)) : bool) &amp;amp;&amp;amp; (hasSlicing!Range &amp;amp;&amp;amp; hasLength!Range || isNarrowString!Range)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (is (typeof (binaryFun! Pred (r.front, s)): bool) &amp;amp;&amp;amp; (hasSlicing! Range &amp;amp;&amp;amp; hasLength! Range || isNarrowString! Range)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="3b96536599167b2b78774a888abba851a687b8c0" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(typeof(binaryFun!pred(r.front, s.front)) : bool) &amp;amp;&amp;amp; (hasSlicing!Range || isNarrowString!Range) &amp;amp;&amp;amp; isForwardRange!Separator &amp;amp;&amp;amp; (hasLength!Separator || isNarrowString!Separator)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (is (typeof (binaryFun! Pred (r.front, s.front)): bool) &amp;amp;&amp;amp; (hasSlicing! Range || isNarrowString! Range) &amp;amp;&amp;amp; isForwardRange! Separator &amp;amp;&amp;amp; (hasLength! Separator || isNarrowString! Separator) ); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="faeebcec40af752a4b480f69c1b38e3e87b73ee2" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(typeof(binaryFun!pred)) &amp;amp;&amp;amp; isForwardRange!Range1 &amp;amp;&amp;amp; isForwardRange!Range2 &amp;amp;&amp;amp; !isInfinite!Range1 &amp;amp;&amp;amp; !isInfinite!Range2); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (is (typeof (binaryFun! Pred)) &amp;amp;&amp;amp; isForwardRange! Range1 &amp;amp;&amp;amp; isForwardRange! Range2 &amp;amp;&amp;amp;! IsInfinite! Range1 &amp;amp;&amp;amp;! IsInfinite! Range2); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="ea1b33ec3e71890c52855a270089a84466e16162" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(typeof(copy(data, stdout.lockingBinaryWriter)))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (is (typeof (copy (data, stdout.lockingBinaryWriter)))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="8d02830c9f207fd1a6f2eefe1e5467558d32acb9" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(typeof(create()) : V) &amp;amp;&amp;amp; is(typeof(update(aa[K.init])) : V)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (is (typeof (create ()): V) &amp;amp;&amp;amp; is (typeof (update (aa [K.init])): V)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="33fbd5fe98c59d900330781424056fe05c1d7ad9" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(typeof(delegateOrFp(args))) &amp;amp;&amp;amp; !isSafeTask!F); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (is (typeof (DelegateOrFp (args))) &amp;amp;&amp;amp;! IsSafeTask! F); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="ab3b87a975bc1c267921ba4197bafd2e33801919" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(typeof(find!pred(haystack)))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (is (typeof (find! Pred (haystack)))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="667f156e9cadc0b2ac402f130bbc5af849a3b651" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(typeof(find!pred(haystack, needle)))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (is (typeof (find! Pred (стог сена, игла)))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="6132d6624af648dae109c44e58ec3b5476830d59" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(typeof(front == front))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (is (typeof (front == front))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="eae0b0dcf992043120a385fe6feb63826383c4c5" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(typeof(fun(args))) &amp;amp;&amp;amp; isSafeTask!F); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (is (typeof (fun (args))) &amp;amp;&amp;amp; isSafeTask! F); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="44d14aff5d04511ec1d8684d779899b82333db2a" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(typeof(fun) == void) || isSomeFunction!fun); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (is (typeof (fun) == void) || isSomeFunction! Fun); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="f83a28ad2e632c2e1c8320c4419c326fed18cf5f" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(typeof(iota(E(0), end)))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (is (typeof (йота (E (0), конец)))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="5af292ec99106c86e3dfe52c11506bc1663338a7" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(typeof(lhs.proxySwap(rhs)))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (is (typeof (lhs.proxySwap (rhs))))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="3a0e4b6af5d8fec401579d51253c93fba7090252" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(typeof(nullValue) == T)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (is (typeof (nullValue) == T)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="037f895e2b9523e922c1e3f6bde881e6cca4603c" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(typeof(ordered!less(values)))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (is (typeof (упорядоченный! Less (значения)))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="9f61f5bb5e36b65754edcedbc51065c7d964cb1e" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(typeof(replace(array, from, to, stuff)))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (is (typeof (replace (array, from, to, stuff)))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="ffbc4bb419eed18ede202b0e08c1c588865d54bc" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(typeof(rfunc(F.init)) : F) &amp;amp;&amp;amp; isFloatingPoint!F &amp;amp;&amp;amp; isIntegral!E); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (is (typeof (rfunc (F.init)): F) &amp;amp;&amp;amp; isFloatingPoint! F &amp;amp;&amp;amp; isIntegral! E); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="3be7857bf4c95e66ff1439d60945cc4c5286e5de" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(typeof(rfunc(F.init)) : F) &amp;amp;&amp;amp; isFloatingPoint!F); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (is (typeof (rfunc (F.init)): F) &amp;amp;&amp;amp; isFloatingPoint! F); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="3c804c5033334e2ff89a66a655f27e700fdee77e" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(typeof(this.get == rhs))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (is (typeof (this.get == rhs))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="b937969bb417a3d073bfa39987fcb9d8a38aac2e" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(typeof(translate) : V[K], V, K) &amp;amp;&amp;amp; isSomeString!V &amp;amp;&amp;amp; (isSomeString!K || is(K : size_t))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: если (есть (typeof (перевод): V [K], V, K) &amp;amp;&amp;amp; isSomeString! V &amp;amp;&amp;amp; (isSomeString! K || is (K: size_t))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="be8bc1b2deb9980b7b6554f35fbff4cedf535f76" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (is(u.RefT : RefT)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (is (u.RefT: RefT)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="21da92275ba23116e2627f758bfc0f80457465e7" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isAlgebraic!VariantType); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isAlgebraic! VariantType); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="16b50ca2f55ab66dc157fb16393fb15b8737e764" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isArray!R1 &amp;amp;&amp;amp; is(ElementType!R1 : dchar) &amp;amp;&amp;amp; !is(R2 == ubyte[]) &amp;amp;&amp;amp; isOutputRange!(R2, ubyte)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isArray! R1 &amp;amp;&amp;amp; is (ElementType! R1: dchar) &amp;amp;&amp;amp;! Is (R2 == ubyte []) &amp;amp;&amp;amp; isOutputRange! (R2, ubyte)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="913befea12879df1be712c08c707dcb3f0904539" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isArray!R1 &amp;amp;&amp;amp; is(ElementType!R1 : dchar) &amp;amp;&amp;amp; is(R2 == ubyte[]) &amp;amp;&amp;amp; isOutputRange!(R2, ubyte)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isArray! R1 &amp;amp;&amp;amp; is (ElementType! R1: dchar) &amp;amp;&amp;amp; is (R2 == ubyte []) &amp;amp;&amp;amp; isOutputRange! (R2, ubyte)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="a53cb15efc745fe00df7725c8fcc05afa4871e72" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isArray!R1 &amp;amp;&amp;amp; is(ElementType!R1 : ubyte) &amp;amp;&amp;amp; is(R2 == char[])); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isArray! R1 &amp;amp;&amp;amp; is (ElementType! R1: ubyte) &amp;amp;&amp;amp; is (R2 == char [])); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="5ea86d7dbfaa37170e4cd79d6a0e8c59bc3c2739" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isArray!Range &amp;amp;&amp;amp; is(ElementType!Range : dchar)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isArray! Range &amp;amp;&amp;amp; is (ElementType! Range: dchar)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="cf6adc6975ff79c7024520af02fa095d59ddf391" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isArray!Range &amp;amp;&amp;amp; is(ElementType!Range : ubyte)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isArray! Range &amp;amp;&amp;amp; is (ElementType! Range: ubyte)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="01af5661f964552b0905dd7818d8d7b931c0f0d7" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isAssignable!T); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isAssignable! T); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="b84b3da49be1dc2abb75bc06b19d55f1b23d9f6b" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isAssociativeArray!AA); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isAssociativeArray! AA); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="8231cc99fabe62905b6751f123003e52e3b76d16" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isAutodecodableString!(C[]) &amp;amp;&amp;amp; !isAggregateType!(C[])); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isAutodecodableString! (C []) &amp;amp;&amp;amp;! IsAggregateType! (C [])); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="e5482cc9e7f9705a9b0184a8aef6cb9e7617df04" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isAutodecodableString!(T[]) &amp;amp;&amp;amp; !isAggregateType!(T[])); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isAutodecodableString! (T []) &amp;amp;&amp;amp;! IsAggregateType! (T [])); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="965fcd43074b03648d8906895e99cb1e6bb2d48e" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isAutodecodableString!R || isInputRange!R &amp;amp;&amp;amp; isSomeChar!(ElementEncodingType!R) || is(R : const(dchar[])) &amp;amp;&amp;amp; !isStaticArray!R); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isAutodecodableString! R || isInputRange! R &amp;amp;&amp;amp; isSomeChar! (ElementEncodingType! R) || is (R: const (dchar [])) &amp;amp;&amp;amp;! IsStaticArray! R); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="050408b3b7d800c89d66ad12ad825b1e04e34cb9" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isBidirectionalRange!(Unqual!Range)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isBidirectionalRange! (Unqual! Range)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="77d1657d3770508e3529f73d03ba1a41adf127bc" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isBidirectionalRange!BidirectionalRange &amp;amp;&amp;amp; hasSwappableElements!BidirectionalRange); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isBidirectionalRange! BidirectionalRange &amp;amp;&amp;amp; hasSwappableElements! BidirectionalRange); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="6d153ac3dc0f02e925c571cfcafcaad06a7162f4" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isBidirectionalRange!R &amp;amp;&amp;amp; is(typeof(binaryFun!pred(doesThisEnd.back, withThis)) : bool)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isBidirectionalRange! R &amp;amp;&amp;amp; is (typeof (binaryFun! Pred (doesThisEnd.back, withThis)): bool)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="c6ee3565483efd02fd31926326b17125a4144ab5" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isBidirectionalRange!R); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isBidirectionalRange! R); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="6ef9791ab02a949a543edad3428f045fa9299f7e" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isBidirectionalRange!R1 &amp;amp;&amp;amp; isBidirectionalRange!R2 &amp;amp;&amp;amp; is(typeof(binaryFun!pred(doesThisEnd.back, withThis.back)) : bool)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isBidirectionalRange! R1 &amp;amp;&amp;amp; isBidirectionalRange! R2 &amp;amp;&amp;amp; is (typeof (binaryFun! Pred (doesThisEnd.back, withThis.back)): bool)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="8f39c05fd9bc6c7dbd389f6b8d42aeafad33cfa2" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isBidirectionalRange!Range &amp;amp;&amp;amp; (Needles.length &amp;gt; 1) &amp;amp;&amp;amp; is(typeof(.endsWith!pred(doesThisEnd, withOneOfThese[0])) : bool) &amp;amp;&amp;amp; is(typeof(.endsWith!pred(doesThisEnd, withOneOfThese[1..$])) : uint)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isBidirectionalRange! Range &amp;amp;&amp;amp; (Needles.length&amp;gt; 1) &amp;amp;&amp;amp; is (typeof (.endsWith! Pred (doThisEnd, withOneOfThese [0])): bool) &amp;amp;&amp;amp; is (typeof (.endsWith! Pred (didThisEnd, withOneOfThese [ 1 .. $])): uint)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="cae6b17cce73bc2832bfe166aa6ea66b986abdce" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isBidirectionalRange!Range &amp;amp;&amp;amp; (hasSwappableElements!Range || hasAssignableElements!Range &amp;amp;&amp;amp; hasLength!Range &amp;amp;&amp;amp; isRandomAccessRange!Range || isNarrowString!Range &amp;amp;&amp;amp; isAssignable!(ElementType!Range))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isBidirectionalRange! Range &amp;amp;&amp;amp; (hasSwappableElements! Range || hasAssignableElements! Range &amp;amp;&amp;amp; hasLength! Range &amp;amp;&amp;amp; isRandomAccessRange! Range || isNarrowString! Range &amp;amp;&amp;amp; isAssignable! (ElementType! Range))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="e18a4bf75eaafcac3dd3f2e875fbd84b78af6c02" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isBidirectionalRange!Range &amp;amp;&amp;amp; is(typeof(pred(range.back)) : bool)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isBidirectionalRange! Range &amp;amp;&amp;amp; is (typeof (pred (range.back)): bool)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="2e4c2517d32490f9a1b02d075e2d9abedd0cf453" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isBidirectionalRange!Range &amp;amp;&amp;amp; is(typeof(range.back == element) : bool)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isBidirectionalRange! Range &amp;amp;&amp;amp; is (typeof (range.back == element): bool)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="ece5e3a4aff204e3c6b9772499416bef615cd666" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isBidirectionalRange!Range &amp;amp;&amp;amp; is(typeof(range.front == element) : bool)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isBidirectionalRange! Range &amp;amp;&amp;amp; is (typeof (range.front == element): bool)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="fb1952576a5525db527a0524b1e9a090ca81f58e" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isBidirectionalRange!Range &amp;amp;&amp;amp; isSomeChar!(ElementType!Range) &amp;amp;&amp;amp; !isInfinite!Range &amp;amp;&amp;amp; !isNarrowString!Range); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isBidirectionalRange! Range &amp;amp;&amp;amp; isSomeChar! (ElementType! Range) &amp;amp;&amp;amp;! IsInfinite! Range &amp;amp;&amp;amp;! IsNarrowString! Range); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="799e721918a7e411a4d6b2a9d0f2242864a625b2" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isBidirectionalRange!Range); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isBidirectionalRange! Range); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="4739748ba92081d580c5e686857ac16c210c0c74" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isBidirectionalRange!S &amp;amp;&amp;amp; is(Unqual!(ElementEncodingType!S) == dchar)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isBidirectionalRange! S &amp;amp;&amp;amp; is (Unqual! (ElementEncodingType! S) == dchar)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="1c15a80fa5576853ef165068e0e75cba1bf77c16" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isBidirectionalRange!S &amp;amp;&amp;amp; is(Unqual!(ElementType!S) == char) &amp;amp;&amp;amp; !isRandomAccessRange!S); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isBidirectionalRange! S &amp;amp;&amp;amp; is (Unqual! (ElementType! S) == char) &amp;amp;&amp;amp;! IsRandomAccessRange! S); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="8168b5c859e82b0b5715f3508230273bbe58a0e4" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isBlitAssignable!T &amp;amp;&amp;amp; !is(typeof(lhs.proxySwap(rhs)))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isBlitAssignable! T &amp;amp;&amp;amp;! Is (typeof (lhs.proxySwap (rhs)))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="4463db328fad3df93fbd89a2576ea0ebb7020622" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isCallable!F); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isCallable! F); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="1db0dfca5a3fe0d5ae8ce6bdf759d0b5df772b8a" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isCallable!fun); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isCallable! Fun); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="62343884693e417a50e0a93dfc7de012eb12bd07" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isCodepointSet!Set); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isCodepointSet! Set); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="8ad8f6ad7c3ed581ee5efc1bb0c74de36419717e" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isCodepointSet!U || is(U : dchar)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isCodepointSet! U || is (U: dchar)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="3d5720103a25407cc700a8e1e1ca733555b49836" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isConvertibleToString!R); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isConvertibleToString! R); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="5595c94f0bccefcf94c6069dfb8603873f2a0be3" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isConvertibleToString!RF || isConvertibleToString!RT); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isConvertibleToString! RF || isConvertibleToString! RT); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="1e09899babb02829dd13de301d2301999171e0be" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isConvertibleToString!Range); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isConvertibleToString! Range); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="c6d6ea40e78d33d642ba19a040262408bc16d995" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isConvertibleToString!Range1 || isConvertibleToString!Range2); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isConvertibleToString! Range1 || isConvertibleToString! Range2); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="2a129eb927ac68075984713542161220949b5aae" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isCurlConn!Conn &amp;amp;&amp;amp; (is(T == char) || is(T == ubyte))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isCurlConn! Conn &amp;amp;&amp;amp; (is (T == char) || is (T == ubyte))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="c39a26502907650d937332d11214efa2dabb8567" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isCurlConn!Conn &amp;amp;&amp;amp; isSomeChar!Char &amp;amp;&amp;amp; isSomeChar!Terminator); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isCurlConn! Conn &amp;amp;&amp;amp; isSomeChar! Char &amp;amp;&amp;amp; isSomeChar! Terminator); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="84037409f96dbe4deec4d12c5bcacd3ebf559d48" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isCurlConn!Conn); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isCurlConn! Conn); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="170a5cc9d04120820bc02d25a2e1c1ca58d4fbdc" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isDigest!H); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isDigest! H); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="f694d66f054b3b7a0a910cad5c98567ccaed99e4" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isDynamicArray!(E[]) &amp;amp;&amp;amp; isForwardRange!R1 &amp;amp;&amp;amp; is(typeof(appender!(E[])().put(from[0..1]))) &amp;amp;&amp;amp; isForwardRange!R2 &amp;amp;&amp;amp; is(typeof(appender!(E[])().put(to[0..1])))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isDynamicArray! (E []) &amp;amp;&amp;amp; isForwardRange! R1 &amp;amp;&amp;amp; is (typeof (appender! (E []) (). Put (from [0..1]))) &amp;amp;&amp;amp; isForwardRange! R2 &amp;amp;&amp;amp; is (typeof )) (Appender (E []) () ставить (на [0..1]!).); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="9b5cb0ba893e29194d66d75f95c3eb57ab80481b" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isDynamicArray!A); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isDynamicArray! A); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="e6287e595e3ca2788ef9c22d59e1d506bb5cf9cb" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isDynamicArray!S); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isDynamicArray! S); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="3e871173189fcf580a2a3f0fe080ffbf759c5fd6" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isDynamicArray!T &amp;amp;&amp;amp; allSatisfy!(isIntegral, I) &amp;amp;&amp;amp; !hasIndirections!(ElementEncodingType!T)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isDynamicArray! T &amp;amp;&amp;amp; allSatisfy! (IsIntegral, I) &amp;amp;&amp;amp;! HasIndirections! (ElementEncodingType! T)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="ef7490d00e16f402da2cc840676c09de80db63b5" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isDynamicArray!T &amp;amp;&amp;amp; allSatisfy!(isIntegral, I) &amp;amp;&amp;amp; hasIndirections!(ElementEncodingType!T)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isDynamicArray! T &amp;amp;&amp;amp; allSatisfy! (IsIntegral, I) &amp;amp;&amp;amp; hasIndirections! (ElementEncodingType! T)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="0fd7403c50401620756a900a61fccc48866b99b1" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isDynamicArray!T &amp;amp;&amp;amp; allSatisfy!(isIntegral, I)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isDynamicArray! T &amp;amp;&amp;amp; allSatisfy! (IsIntegral, I)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="783508a05bdb8c67d8b3149ec4303513410e5aa5" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isExactSomeString!Source &amp;amp;&amp;amp; isStaticArray!Target &amp;amp;&amp;amp; !is(Target == enum)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isExactSomeString! Source &amp;amp;&amp;amp; isStaticArray! Target &amp;amp;&amp;amp;! Is (Target == enum)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="33267f1f00c9d570d6967ae4015bf484f2f6fe34" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isFloatingPoint!(CommonType!(B, E))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isFloatingPoint! (CommonType! (B, E))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="ac1b61fdb4d7a1d9b2e4296530d84ad2d091cb32" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isFloatingPoint!(CommonType!(B, E, S))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isFloatingPoint! (CommonType! (B, E, S))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="a0c77edb7ade256668a5f585d01dba51882a0cc5" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isFloatingPoint!(CommonType!(T1, T2)) &amp;amp;&amp;amp; isUniformRNG!UniformRandomNumberGenerator); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isFloatingPoint! (CommonType! (T1, T2)) &amp;amp;&amp;amp; isUniformRNG! UniformRandomNumberGenerator); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="bc26994d8618c4b0e1c40b48d8dd6fed9ed32a97" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isFloatingPoint!F &amp;amp;&amp;amp; isFloatingPoint!G); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isFloatingPoint! F &amp;amp;&amp;amp; isFloatingPoint! G); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="7a540aa76e1ceb7b557b85268045fcb627defa8f" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isFloatingPoint!F &amp;amp;&amp;amp; isIntegral!G); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isFloatingPoint! F &amp;amp;&amp;amp; isIntegral! G); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="1dcb943c063b18c4268c93cb1c9d5fdd17c8c3e9" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isFloatingPoint!F &amp;amp;&amp;amp; isRandomAccessRange!R); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isFloatingPoint! F &amp;amp;&amp;amp; isRandomAccessRange! R); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="3dff68d5f065221d428ac59b8a4ac401c7626c1a" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isFloatingPoint!F || isIntegral!F); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isFloatingPoint! F || isIntegral! F); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="a7ba3c65aa51ede11402eb899e3da155295c76b0" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isFloatingPoint!F); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isFloatingPoint! F); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="64869155caf512f3e8b9f55840cea19ff59cd5d0" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isFloatingPoint!R &amp;amp;&amp;amp; isFloatingPoint!X); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isFloatingPoint! R &amp;amp;&amp;amp; isFloatingPoint! X); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="5e33332d404b252c66834d92f75a501570011487" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isFloatingPoint!T &amp;amp;&amp;amp; __traits(compiles, () { T _ = DF.init(T.init); } )); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isFloatingPoint! T &amp;amp;&amp;amp; __traits (compiles, () {T _ = DF.init (T.init);})); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="2f1f52ad7776aed412d0a0d6c718273ec9bf6d23" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isFloatingPoint!T &amp;amp;&amp;amp; is(typeof(tolerance(T.init, T.init)) : bool) &amp;amp;&amp;amp; is(typeof(f(T.init)) == R) &amp;amp;&amp;amp; isFloatingPoint!R); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isFloatingPoint! T &amp;amp;&amp;amp; is (typeof (допуск (T.init, T.init)): bool) &amp;amp;&amp;amp; is (typeof (f (T.init)) == R) &amp;amp;&amp;amp; isFloatingPoint! R); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="6c482bcea1d8c28ac568a91548c94e33b85995cb" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isFloatingPoint!T &amp;amp;&amp;amp; is(typeof(tolerance(T.init, T.init)) : bool) &amp;amp;&amp;amp; is(typeof(f(T.init)) == R, R) &amp;amp;&amp;amp; isFloatingPoint!R); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isFloatingPoint! T &amp;amp;&amp;amp; is (typeof (допуск (T.init, T.init)): bool) &amp;amp;&amp;amp; is (typeof (f (T.init)) == R, R) &amp;amp;&amp;amp; isFloatingPoint! R); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="028333510582e47293ce4a08f2fc1911003c3548" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isFloatingPoint!T &amp;amp;&amp;amp; isUniformRNG!UniformRNG); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isFloatingPoint! T &amp;amp;&amp;amp; isUniformRNG! UniformRNG); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="cdeca644988371fd48aaefa50020f572701aeca0" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isFloatingPoint!T); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isFloatingPoint! T); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="e972903486d336b8cb49f74cb2526654a3cded02" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isFloatingPoint!T1 &amp;amp;&amp;amp; isFloatingPoint!T2 &amp;amp;&amp;amp; (N &amp;gt; 0) &amp;amp;&amp;amp; (N &amp;lt;= 10)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isFloatingPoint! T1 &amp;amp;&amp;amp; isFloatingPoint! T2 &amp;amp;&amp;amp; (N&amp;gt; 0) &amp;amp;&amp;amp; (N &amp;lt;= 10)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="c2c0478952ed45ed836918bd6a40ecc1b0cb300e" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isFloatingPoint!T1 &amp;amp;&amp;amp; isFloatingPoint!T2); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isFloatingPoint! T1 &amp;amp;&amp;amp; isFloatingPoint! T2); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="8c7bd61b74598b98a09960739004cc7c9b50a71e" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isFloatingPoint!X); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isFloatingPoint! X); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="4786f48d687a573c88b6ee47667c945771e4587f" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isForeachIterable!Iterable || __traits(compiles, Parameters!(Parameters!(r.opApply)))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isForeachIterable! Iterable || __traits (компилирует, Parameters! (Parameters! (R.opApply)))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="efc2a2dd9c09053b5d284fe50dda4bc56f3e2b0e" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isForwardRange!R &amp;amp;&amp;amp; (Rs.length &amp;gt; 0) &amp;amp;&amp;amp; (isForwardRange!(Rs[0]) == isInputRange!(Rs[0])) &amp;amp;&amp;amp; is(typeof(startsWith!pred(haystack, needles[0]))) &amp;amp;&amp;amp; (Rs.length == 1 || is(typeof(countUntil!pred(haystack, needles[1..$]))))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isForwardRange! R &amp;amp;&amp;amp; (Rs.length&amp;gt; 0) &amp;amp;&amp;amp; (isForwardRange! (Rs [0]) == isInputRange! (Rs [0])) &amp;amp;&amp;amp; is (typeof (startWith! Pred (стог сена, иголки [0] ]))) &amp;amp;&amp;amp; (Rs.length == 1 || is (typeof (countUntil! Pred (стог сена, иглы [1 .. $]))))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="76342802302831baa84b510ec81291e85e49285e" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isForwardRange!R &amp;amp;&amp;amp; ifTestable!(typeof(r1.front), unaryFun!pred)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isForwardRange! R &amp;amp;&amp;amp; ifTestable! (Typeof (r1.front), unaryFun! Pred)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="a0863fa365c228e8c31bbed66a168480ca38c76b" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isForwardRange!R); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isForwardRange! R); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="2e88896335ed246c94ca57d4ebf5d58b59a42449" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isForwardRange!R1 &amp;amp;&amp;amp; !isInfinite!R1 &amp;amp;&amp;amp; isForwardRange!R2 &amp;amp;&amp;amp; is(typeof(binaryFun!pred(haystack.front, needle.front)) : bool)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isForwardRange! R1 &amp;amp;&amp;amp;! IsInfinite! R1 &amp;amp;&amp;amp; isForwardRange! R2 &amp;amp;&amp;amp; is (typeof (binaryFun! Pred (haystack.front, needle.front)): bool)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="829660ffa648e5ab0c73063ec87d6b11c7deaca2" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isForwardRange!R1 &amp;amp;&amp;amp; ifTestable!(typeof(haystack.front), unaryFun!pred)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isForwardRange! R1 &amp;amp;&amp;amp; ifTestable! (Typeof (haystack.front), unaryFun! Pred)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="a493cff3ccf3db5fcefba9edc2d02b4750afdb5d" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isForwardRange!R1 &amp;amp;&amp;amp; isForwardRange!R2 &amp;amp;&amp;amp; (hasLength!R2 || isSomeString!R2) || is(Unqual!E : Unqual!R1)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isForwardRange! R1 &amp;amp;&amp;amp; isForwardRange! R2 &amp;amp;&amp;amp; (hasLength! R2 || isSomeString! R2) || is (Unqual! E: Unqual! R1)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="ddbdead6d6bb6763eb9da40924d3c4eaf131d295" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isForwardRange!R1 &amp;amp;&amp;amp; isForwardRange!R2 &amp;amp;&amp;amp; is(typeof(binaryFun!pred(haystack.front, needle.front)) : bool)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isForwardRange! R1 &amp;amp;&amp;amp; isForwardRange! R2 &amp;amp;&amp;amp; is (typeof (binaryFun! Pred (haystack.front, needle.front)): bool)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="b4499840fcb9cc96cf27a4106f7849fb84097ce8" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isForwardRange!R1 &amp;amp;&amp;amp; isForwardRange!R2 &amp;amp;&amp;amp; is(typeof(binaryFun!pred(haystack.front, needle.front)))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isForwardRange! R1 &amp;amp;&amp;amp; isForwardRange! R2 &amp;amp;&amp;amp; is (typeof (binaryFun! Pred (haystack.front, needle.front)))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="82e7275d0b7314da63a3790be193dcaba6fea74c" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isForwardRange!R1 &amp;amp;&amp;amp; isForwardRange!R2); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isForwardRange! R1 &amp;amp;&amp;amp; isForwardRange! R2); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="7d1545f763de85ffac6469b81478cba5dd500730" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isForwardRange!R1 &amp;amp;&amp;amp; isInputRange!R2 &amp;amp;&amp;amp; !isNarrowString!R1 &amp;amp;&amp;amp; is(typeof(binaryFun!pred(r1.front, r2.front)))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isForwardRange! R1 &amp;amp;&amp;amp; isInputRange! R2 &amp;amp;&amp;amp;! IsNarrowString! R1 &amp;amp;&amp;amp; is (typeof (binaryFun! Pred (r1.front, r2.front)))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="a2cfc3377d49b03499e51618cb5181048a8c0b6e" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isForwardRange!Range &amp;amp;&amp;amp; !isConvertibleToString!Range); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isForwardRange! Range &amp;amp;&amp;amp;! IsConvertibleToString! Range); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="466d66843f5df84cbd746f1efee46024a337eb55" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isForwardRange!Range &amp;amp;&amp;amp; !isInfinite!Range &amp;amp;&amp;amp; is(typeof(binaryFun!pred(range.front, range.front)))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isForwardRange! Range &amp;amp;&amp;amp;! IsInfinite! Range &amp;amp;&amp;amp; is (typeof (binaryFun! Pred (range.front, range.front)))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="a3db32024b9df10b1b90ca665f4691af3c11fc79" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isForwardRange!Range &amp;amp;&amp;amp; !isInfinite!Range &amp;amp;&amp;amp; isSomeChar!(ElementEncodingType!Range) &amp;amp;&amp;amp; !isConvertibleToString!Range &amp;amp;&amp;amp; isSomeChar!C &amp;amp;&amp;amp; is(Unqual!C == Unqual!(ElementEncodingType!Range))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isForwardRange! Range &amp;amp;&amp;amp;! IsInfinite! Range &amp;amp;&amp;amp; isSomeChar! (ElementEncodingType! Range) &amp;amp;&amp;amp;! IsConvertibleToString! Range &amp;amp;&amp;amp; isSomeChar! C &amp;amp;&amp;amp; is (Unqual! C == Unqual! (ElementEncodingType!)) &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="75eb6c56dbf07da34b15229f8a9c7af754eca396" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isForwardRange!Range &amp;amp;&amp;amp; (is(typeof(ElementType!Range.init == Separator.init)) || is(typeof(ElementType!Range.init == ElementType!Separator.init)) &amp;amp;&amp;amp; isForwardRange!Separator)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isForwardRange! Range &amp;amp;&amp;amp; (is (typeof (ElementType! Range.init == Separator.init)) || is (typeof (ElementType! Range.init == ElementType! Separator.init)) &amp;amp;&amp;amp; isForwardRange! Separator) ); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="4f458a72104c0d4fcfb8b65fbbdbf852a8fce5e0" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isForwardRange!Range &amp;amp;&amp;amp; is(Unqual!(ElementType!Range) == ubyte)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isForwardRange! Range &amp;amp;&amp;amp; is (Unqual! (ElementType! Range) == ubyte)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="932fcc801c1d0e5525d9051867cde7fd6b1dff07" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isForwardRange!Range &amp;amp;&amp;amp; is(typeof(unaryFun!isTerminator(r.front)))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isForwardRange! Range &amp;amp;&amp;amp; is (typeof (unaryFun! IsTerminator (r.front)))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="a29671ede98f335eeb5d5c2fc8d3c83da9748ab8" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isForwardRange!Range &amp;amp;&amp;amp; is(typeof(unaryFun!isTerminator(range.front)))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isForwardRange! Range &amp;amp;&amp;amp; is (typeof (unaryFun! IsTerminator (range.front)))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="9b9e885fd85253a3a76b2baa27806bc6cbc9ea4e" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isForwardRange!Range &amp;amp;&amp;amp; isIntegralPair!(ElementType!Range)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isForwardRange! Range &amp;amp;&amp;amp; isIntegralPair! (ElementType! Range)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="0238223b39b7e4ce1ddbb3da2a000dacbb7a9714" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isForwardRange!Range &amp;amp;&amp;amp; isNumeric!(ElementType!Range) &amp;amp;&amp;amp; !isArray!Range); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isForwardRange! Range &amp;amp;&amp;amp; isNumeric! (ElementType! Range) &amp;amp;&amp;amp;! IsArray! Range); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="74f7265896c7d19146c22acbe97f4efbf8cc77b4" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isForwardRange!Range &amp;amp;&amp;amp; isRandomAccessRange!RangeIndex &amp;amp;&amp;amp; is(ElementType!RangeIndex : ElementType!Range*) &amp;amp;&amp;amp; hasAssignableElements!RangeIndex); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isForwardRange! Range &amp;amp;&amp;amp; isRandomAccessRange! RangeIndex &amp;amp;&amp;amp; is (ElementType! RangeIndex: ElementType! Range *) &amp;amp;&amp;amp; hasAssignableElements! RangeIndex); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="e074892392fbc725b8f3ff6ebe7071077dfc9702" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isForwardRange!Range &amp;amp;&amp;amp; isSomeChar!(ElementEncodingType!Range) &amp;amp;&amp;amp; !isConvertibleToString!Range); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isForwardRange! Range &amp;amp;&amp;amp; isSomeChar! (ElementEncodingType! Range) &amp;amp;&amp;amp;! IsConvertibleToString! Range); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="e063d67ee51501b8c6bdc453d577c7ad90964269" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isForwardRange!Range &amp;amp;&amp;amp; isSomeChar!(ElementEncodingType!Range) &amp;amp;&amp;amp; !isInfinite!Range &amp;amp;&amp;amp; !isConvertibleToString!Range); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isForwardRange! Range &amp;amp;&amp;amp; isSomeChar! (ElementEncodingType! Range) &amp;amp;&amp;amp;! IsInfinite! Range &amp;amp;&amp;amp;! IsConvertibleToString! Range); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="010d46ba350773ed78eb73a9362eea42c443ad19" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isForwardRange!Range &amp;amp;&amp;amp; isSomeChar!(ElementEncodingType!Range) &amp;amp;&amp;amp; isSomeChar!Char); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isForwardRange! Range &amp;amp;&amp;amp; isSomeChar! (ElementEncodingType! Range) &amp;amp;&amp;amp; isSomeChar! Char); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="ebcb3acad395923d34be64760fb0603b3dacba37" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isForwardRange!Range &amp;amp;&amp;amp; isSomeChar!(ElementEncodingType!Range) || __traits(compiles, StringTypeOf!Range)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isForwardRange! Range &amp;amp;&amp;amp; isSomeChar! (ElementEncodingType! Range) || __traits (compiles, StringTypeOf! Range)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="7ea008311521b42f7178df5343547055fc27c5f9" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isForwardRange!Range &amp;amp;&amp;amp; isSomeChar!(ElementEncodingType!Range)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isForwardRange! Range &amp;amp;&amp;amp; isSomeChar! (ElementEncodingType! Range)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="477b9103b60a920e3e59ce1c61b42baf3d428a3a" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isForwardRange!Range); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isForwardRange! Range); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="db844d69f08b7b8aa2017c9bfc3b07f54e961c31" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isForwardRange!Range1 &amp;amp;&amp;amp; isForwardRange!Range2); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isForwardRange! Range1 &amp;amp;&amp;amp; isForwardRange! Range2); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="f85ca2a326742e00e2792ae8adea54325b262335" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isForwardRange!RangeOfRanges &amp;amp;&amp;amp; isInputRange!(ElementType!RangeOfRanges) &amp;amp;&amp;amp; hasAssignableElements!RangeOfRanges); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isForwardRange! RangeOfRanges &amp;amp;&amp;amp; isInputRange! (ElementType! RangeOfRanges) &amp;amp;&amp;amp; hasAssignableElements! RangeOfRanges); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="035ecfa522e34b113c07cfea30dc4b8ef9f8d7d1" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isForwardRange!S1 &amp;amp;&amp;amp; isSomeChar!(ElementEncodingType!S1) &amp;amp;&amp;amp; isForwardRange!S2 &amp;amp;&amp;amp; isSomeChar!(ElementEncodingType!S2)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isForwardRange! S1 &amp;amp;&amp;amp; isSomeChar! (ElementEncodingType! S1) &amp;amp;&amp;amp; isForwardRange! S2 &amp;amp;&amp;amp; isSomeChar! (ElementEncodingType! S2)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="fde6908670b47bfc4b3c51f1f10c3850741c02b7" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isForwardRange!Source &amp;amp;&amp;amp; hasLength!Source); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isForwardRange! Source &amp;amp;&amp;amp; hasLength! Source); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="b881bcc90dd8afd661328adbdd49e6b88a6b58b6" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isForwardRange!Source); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isForwardRange! Source); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="82ee94a45797e0e7658815a7bb2b98834f2fb372" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isImplicitlyConvertible!(Stuff, Elem)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isImplicitlyConvertible! (Stuff, Elem)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="124a734caed632c03c1c92147c5c1e6006fa8310" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isImplicitlyConvertible!(Stuff, T) || isInputRange!Stuff &amp;amp;&amp;amp; isImplicitlyConvertible!(ElementType!Stuff, T)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isImplicitlyConvertible! (Stuff, T) || isInputRange! Stuff &amp;amp;&amp;amp; isImplicitlyConvertible! (ElementType! Stuff, T)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="c27b783c017fdefd6b7648bee72991ea439c8296" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isImplicitlyConvertible!(Stuff, T)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isImplicitlyConvertible! (Stuff, T)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="b5d15b11bc361c01b1c90c6e37ede0e271d7eeb5" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isImplicitlyConvertible!(U, Elem)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isImplicitlyConvertible! (U, Elem)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="e3774da4cda6afac70fb0f2e0f1f3b7d187009c0" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isImplicitlyConvertible!(U, T)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isImplicitlyConvertible! (U, T)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="760225b8349c2b67c0fbb71e26f42fbfca486df1" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!(Unqual!R)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! (Unqual! R)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="5911430b78ca7236da831278e6e24874a467b6f2" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!(Unqual!R1) &amp;amp;&amp;amp; isInputRange!(Unqual!R2) &amp;amp;&amp;amp; !is(CommonType!(ElementType!(Unqual!R1), ElementType!(Unqual!R2)) == void)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! (Unqual! R1) &amp;amp;&amp;amp; isInputRange! (Unqual! R2) &amp;amp;&amp;amp;! Is (CommonType! (ElementType! (Unqual! R1), ElementType! (Unqual! R2)) == void)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="92640ea616b608768ab1727970ff2551ce0840f8" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!(Unqual!Range)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! (Unqual! Range)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="21fbc19c248de2fc05639d56f8041a560369e627" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!(typeof(a))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! (Typeof (a))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="fd07472f8f77d19ff94313ea6170baaf5dc08d39" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!Input &amp;amp;&amp;amp; is(ElementType!Input : dchar)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! Input &amp;amp;&amp;amp; is (ElementType! Input: dchar)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="263e7ff324ffab20b724ad83aab4cc205d577603" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!Input &amp;amp;&amp;amp; is(Unqual!(ElementType!Input) == dchar)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! Input &amp;amp;&amp;amp; is (Unqual! (ElementType! Input) == dchar)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="48961c1589aecb1d81a4a733fa51010eca94914a" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!InputRange &amp;amp;&amp;amp; !isInfinite!InputRange &amp;amp;&amp;amp; is(ElementType!InputRange : dchar)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! InputRange &amp;amp;&amp;amp;! IsInfinite! InputRange &amp;amp;&amp;amp; is (ElementType! InputRange: dchar)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="fb3c1991a4ef8e28e0b4c01ba3f5c2bb4e6ec5a9" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!InputRange &amp;amp;&amp;amp; (isForwardRange!ForwardRange || isInputRange!ForwardRange &amp;amp;&amp;amp; isInfinite!ForwardRange) &amp;amp;&amp;amp; is(typeof(InputRange.init.front = ForwardRange.init.front))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! InputRange &amp;amp;&amp;amp; (isForwardRange! ForwardRange || isInputRange! ForwardRange &amp;amp;&amp;amp; isInfinite! ForwardRange) &amp;amp;&amp;amp; is (typeof (InputRange.init.front = ForwardRange.init.front))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="d065c5e578c0ded47351a6d60712a8b94e5da3b8" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!InputRange &amp;amp;&amp;amp; is(typeof(binaryFun!pred(haystack.front, needle)) : bool)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! InputRange &amp;amp;&amp;amp; is (typeof (binaryFun! Pred (haystack.front, needle)): bool)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="ccad40608e5a390013600ce67cd80fb72e81b8d8" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!InputRange &amp;amp;&amp;amp; isForwardRange!ForwardRange); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! InputRange &amp;amp;&amp;amp; isForwardRange! ForwardRange); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="8b7a0b3aa3dd2ce1f52dc397d009afe880409d2f" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!InputRange); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! InputRange); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="db91b964c5e3f6a225094a4d9b69e8ebea142b14" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!InputRange1 &amp;amp;&amp;amp; isInputRange!InputRange2 &amp;amp;&amp;amp; is(typeof(move(src.front, tgt.front)))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! InputRange1 &amp;amp;&amp;amp; isInputRange! InputRange2 &amp;amp;&amp;amp; is (typeof (move (src.front, tgt.front))))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="c25bf168a30b5c066dce61687b127d632c669db3" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!InputRange1 &amp;amp;&amp;amp; isInputRange!InputRange2 &amp;amp;&amp;amp; is(typeof(moveEmplace(src.front, tgt.front)))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! InputRange1 &amp;amp;&amp;amp; isInputRange! InputRange2 &amp;amp;&amp;amp; is (typeof (moveEmplace (src.front, tgt.front)))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="0e75c95c97228e31e9d7375e0629495bb926168f" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!R &amp;amp;&amp;amp; !isInfinite!R &amp;amp;&amp;amp; !is(CommonType!(ElementType!R, E) == void)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! R &amp;amp;&amp;amp;! IsInfinite! R &amp;amp;&amp;amp;! Is (CommonType! (ElementType! R, E) == void)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="1f059390c5d589dcba4942d26368a29f53562d6d" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!R &amp;amp;&amp;amp; !isInfinite!R &amp;amp;&amp;amp; is(typeof(r.front + r.front))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! R &amp;amp;&amp;amp;! IsInfinite! R &amp;amp;&amp;amp; is (typeof (r.front + r.front))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="0bc09ed81583d7cfededea5d4d0f5dbde5d0c4ee" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!R &amp;amp;&amp;amp; !isInfinite!R &amp;amp;&amp;amp; is(typeof(seed = seed + r.front))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! R &amp;amp;&amp;amp;! IsInfinite! R &amp;amp;&amp;amp; is (typeof (seed = seed + r.front))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="14d019dfe72d206b83416aadee5ef14a10e9ac73" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!R &amp;amp;&amp;amp; !isInfinite!R &amp;amp;&amp;amp; is(typeof(unaryFun!pred(haystack.front)) : bool)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! R &amp;amp;&amp;amp;! IsInfinite! R &amp;amp;&amp;amp; is (typeof (unaryFun! Pred (haystack.front)): bool)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="55e1262c092838a0c7e89aec09f41138f31a3117" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!R &amp;amp;&amp;amp; !isInfinite!R &amp;amp;&amp;amp; isSomeChar!(ElementEncodingType!R) &amp;amp;&amp;amp; !isConvertibleToString!R); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! R &amp;amp;&amp;amp;! IsInfinite! R &amp;amp;&amp;amp; isSomeChar! (ElementEncodingType! R) &amp;amp;&amp;amp;! IsConvertibleToString! R); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="13de19ce8507c5877e6ec01c06aa198559a85d33" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!R &amp;amp;&amp;amp; !isInfinite!R &amp;amp;&amp;amp; isSomeChar!(ElementEncodingType!R) || isConvertibleToString!R); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! R &amp;amp;&amp;amp;! IsInfinite! R &amp;amp;&amp;amp; isSomeChar! (ElementEncodingType! R) || isConvertibleToString! R); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="278419d1fe57e5ad5d4bb233b9a5bf1f3e4c427c" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!R &amp;amp;&amp;amp; !isInfinite!R &amp;amp;&amp;amp; isSomeChar!(ElementEncodingType!R)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! R &amp;amp;&amp;amp;! IsInfinite! R &amp;amp;&amp;amp; isSomeChar! (ElementEncodingType! R)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="a0b8c82637bd468f24d86fc764f9242b923cc161" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!R &amp;amp;&amp;amp; !isInfinite!R); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! R &amp;amp;&amp;amp;! IsInfinite! R); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="317d6efa39834014771b5042c23a0a1b96db8141" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!R &amp;amp;&amp;amp; !isNumeric!(ElementType!R) &amp;amp;&amp;amp; is(typeof(r.front + seed)) &amp;amp;&amp;amp; is(typeof(r.front / size_t(1))) &amp;amp;&amp;amp; !isInfinite!R); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! R &amp;amp;&amp;amp;! IsNumeric! (ElementType! R) &amp;amp;&amp;amp; is (typeof (r.front + seed)) &amp;amp;&amp;amp; is (typeof (r.front / size_t (1))) &amp;amp;&amp;amp;! IsInfinite! R); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="071617f0e72ec15153a380911520891e0056c33d" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!R &amp;amp;&amp;amp; (Substs.length &amp;gt;= 2) &amp;amp;&amp;amp; !is(CommonType!Substs == void)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! R &amp;amp;&amp;amp; (Substs.length&amp;gt; = 2) &amp;amp;&amp;amp;! Is (CommonType! Substs == void)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="00c3891d01cfa76b38a70e20ceff2b3ab993f0d2" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!R &amp;amp;&amp;amp; ifTestable!(typeof(doesThisEnd.front), unaryFun!pred)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! R &amp;amp;&amp;amp; ifTestable! (Typeof (doesThisEnd.front), unaryFun! Pred)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="8b674739798deaca5fc5802ec3d8ef5bc0a85097" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!R &amp;amp;&amp;amp; ifTestable!(typeof(doesThisStart.front), unaryFun!pred)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! R &amp;amp;&amp;amp; ifTestable! (Typeof (doesThisStart.front), unaryFun! Pred)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="1a7f2f86376697b31a1316d8930f4828a913483f" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!R &amp;amp;&amp;amp; is(typeof(ElementType!R.init[0]) : T) &amp;amp;&amp;amp; is(typeof(ElementType!R.init[1]) : dchar)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! R &amp;amp;&amp;amp; is (typeof (ElementType! R.init [0]): T) &amp;amp;&amp;amp; is (typeof (ElementType! R.init [1]): dchar)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="de42e8a0bf1c5844532a412aa5851d2bf326a2ee" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!R &amp;amp;&amp;amp; is(typeof(binaryFun!pred(doesThisStart.front, withThis)) : bool)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! R &amp;amp;&amp;amp; is (typeof (binaryFun! Pred (doesThisStart.front, withThis)): bool)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="eacaf8279e3aff2b62072052f7dfc29c7a2c4151" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!R &amp;amp;&amp;amp; is(typeof(binaryFun!pred(haystack.front, needle)) : bool)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! R &amp;amp;&amp;amp; is (typeof (binaryFun! Pred (haystack.front, needle)): bool)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="5b785e01de639c181f0aa80cbdafbe35073f1621" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!R &amp;amp;&amp;amp; is(typeof(binaryFun!pred(r.front, es[0])))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! R &amp;amp;&amp;amp; is (typeof (binaryFun! Pred (r.front, es [0])))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="aa2aa98b9fd836379927d39deba123be3bb92d4f" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!R &amp;amp;&amp;amp; is(typeof(unaryFun!pred(haystack.front)) : bool)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! R &amp;amp;&amp;amp; is (typeof (unaryFun! Pred (haystack.front)): bool)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="778ac902de4ebdbd170acd4f4b09fb53f6e84d51" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!R &amp;amp;&amp;amp; isIntegral!(ElementType!R)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! R &amp;amp;&amp;amp; isIntegral! (ElementType! R)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="2a5be21fdab3f3b0f560a8d1ea2e90a9298124ba" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!R &amp;amp;&amp;amp; isNumeric!(ElementType!R) &amp;amp;&amp;amp; !isInfinite!R); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! R &amp;amp;&amp;amp; isNumeric! (ElementType! R) &amp;amp;&amp;amp;! IsInfinite! R); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="837573a7d9157d19961737b67ba31e4f2b2debe4" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!R &amp;amp;&amp;amp; isSomeChar!(ElementEncodingType!R) &amp;amp;&amp;amp; !isInfinite!R &amp;amp;&amp;amp; !isConvertibleToString!R); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! R &amp;amp;&amp;amp; isSomeChar! (ElementEncodingType! R) &amp;amp;&amp;amp;! IsInfinite! R &amp;amp;&amp;amp;! IsConvertibleToString! R); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="a02d87f6e241ad588d4cf77fa3ac863a9673af85" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!R); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! R); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="09fa7a218c4a40d663274c108611803533c1864f" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!R1 &amp;amp;&amp;amp; isInputRange!R2 &amp;amp;&amp;amp; !isInfinite!R1 &amp;amp;&amp;amp; !isInfinite!R2 &amp;amp;&amp;amp; (isIntegral!(ElementEncodingType!R1) || isSomeChar!(ElementEncodingType!R1)) &amp;amp;&amp;amp; !is(CommonType!(ElementEncodingType!R1, ElementEncodingType!R2) == void)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! R1 &amp;amp;&amp;amp; isInputRange! R2 &amp;amp;&amp;amp;! IsInfinite! R1 &amp;amp;&amp;amp;! IsInfinite! R2 &amp;amp;&amp;amp; (isIntegral! (ElementEncodingType! R1) || isSomeChar! (ElementEncodingType! R1) )TepeR , ElementEncodingType! R2) == void)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="6a68f124638f2b19c8d57ca1058be91ee1c3549a" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!R1 &amp;amp;&amp;amp; isInputRange!R2 &amp;amp;&amp;amp; is(typeof(binaryFun!pred(doesThisStart.front, withThis.front)) : bool)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! R1 &amp;amp;&amp;amp; isInputRange! R2 &amp;amp;&amp;amp; is (typeof (binaryFun! Pred (doesThisStart.front, withThis.front)): bool)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="86a7aa66a78b88372f5b27c90ca841347c90d42c" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!R1 &amp;amp;&amp;amp; isInputRange!R2); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! R1 &amp;amp;&amp;amp; isInputRange! R2); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="73d68d1b982334f9de2c8f98c5409fc61725574a" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!R1 &amp;amp;&amp;amp; isOutputRange!(R2, ElementType!R1)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! R1 &amp;amp;&amp;amp; isOutputRange! (R2, ElementType! R1)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="955c25cdd3c4e9a04fc2ea952a94fe53efd8bac0" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!R1 &amp;amp;&amp;amp; isSomeChar!(ElementEncodingType!R1) &amp;amp;&amp;amp; isInputRange!R2 &amp;amp;&amp;amp; isSomeChar!(ElementEncodingType!R2)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! R1 &amp;amp;&amp;amp; isSomeChar! (ElementEncodingType! R1) &amp;amp;&amp;amp; isInputRange! R2 &amp;amp;&amp;amp; isSomeChar! (ElementEncodingType! R2)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="480579aefe7dac76ac938ae4c6a6349a6e57e6f2" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!R1 &amp;amp;&amp;amp; isSomeChar!(ElementEncodingType!R1)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! R1 &amp;amp;&amp;amp; isSomeChar! (ElementEncodingType! R1)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="99db272aa20ec5ec409e0e1685a6be927f2d5145" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!RF &amp;amp;&amp;amp; !isInfinite!RF &amp;amp;&amp;amp; isSomeChar!(ElementEncodingType!RF) &amp;amp;&amp;amp; !isConvertibleToString!RF &amp;amp;&amp;amp; isInputRange!RT &amp;amp;&amp;amp; !isInfinite!RT &amp;amp;&amp;amp; isSomeChar!(ElementEncodingType!RT) &amp;amp;&amp;amp; !isConvertibleToString!RT); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! RF &amp;amp;&amp;amp;! IsInfinite! RF &amp;amp;&amp;amp; isSomeChar! (ElementEncodingType! RF) &amp;amp;&amp;amp;! IsConvertibleToString! RF &amp;amp;&amp;amp; isInputRange! RT &amp;amp;&amp;amp;! IsInfinite! RT &amp;amp;&amp;amp; isSomeChar!; RT!!! RTF &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="57b9250d314c269b2d56dddcb31d639368d543d0" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!RNG &amp;amp;&amp;amp; isIntegral!(ElementType!RNG)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! RNG &amp;amp;&amp;amp; isIntegral! (ElementType! RNG)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="3079d04ef670522ecf6af787819bff56a77317e3" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!Range &amp;amp;&amp;amp; !is(CommonType!(ElementType!Range, F) == void)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! Range &amp;amp;&amp;amp;! Is (CommonType! (ElementType! Range, F) == void)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="9837738313be266e296750e175ed75e125e86b8a" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!Range &amp;amp;&amp;amp; !isInfinite!Range &amp;amp;&amp;amp; !is(CommonType!(ElementType!Range, RangeElementType) == void)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! Range &amp;amp;&amp;amp;! IsInfinite! Range &amp;amp;&amp;amp;! Is (CommonType! (ElementType! Range, RangeElementType) == void)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="9ac5c5b507dcaba4e711b5fa34c921a054a482f1" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!Range &amp;amp;&amp;amp; !isInfinite!Range &amp;amp;&amp;amp; (hasLength!Range || isForwardRange!Range)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! Range &amp;amp;&amp;amp;! IsInfinite! Range &amp;amp;&amp;amp; (hasLength! Range || isForwardRange! Range)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="bcd23470b5a56fec5fc85cd0c1052ab57ac51959" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!Range &amp;amp;&amp;amp; !isInfinite!Range &amp;amp;&amp;amp; is(typeof(binaryFun!pred(haystack.front, needle)) : bool)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! Range &amp;amp;&amp;amp;! IsInfinite! Range &amp;amp;&amp;amp; is (typeof (binaryFun! Pred (haystack.front, needle)): bool)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="e53c2858f58a173ad9c9867c78b2d0d9acd51653" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!Range &amp;amp;&amp;amp; !isInfinite!Range &amp;amp;&amp;amp; is(typeof(binaryFun!pred(range.front, range.front)))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! Range &amp;amp;&amp;amp;! IsInfinite! Range &amp;amp;&amp;amp; is (typeof (binaryFun! Pred (range.front, range.front)))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="d02433cbea1520f47ea21818c1444a3009eaf857" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!Range &amp;amp;&amp;amp; !isInfinite!Range &amp;amp;&amp;amp; isSomeString!(ElementType!Range)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! Range &amp;amp;&amp;amp;! IsInfinite! Range &amp;amp;&amp;amp; isSomeString! (ElementType! Range)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="c22a158bed5ffb75cad2183548821bfbe2db2643" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!Range &amp;amp;&amp;amp; !isInfinite!Range); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! Range &amp;amp;&amp;amp;! IsInfinite! Range); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="9bb5b5aefec81f99a2708366c6cd1200f30e98dc" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!Range &amp;amp;&amp;amp; (Needles.length &amp;gt; 1) &amp;amp;&amp;amp; is(typeof(.startsWith!pred(doesThisStart, withOneOfThese[0])) : bool) &amp;amp;&amp;amp; is(typeof(.startsWith!pred(doesThisStart, withOneOfThese[1..$])) : uint)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! Range &amp;amp;&amp;amp; (Needles.length&amp;gt; 1) &amp;amp;&amp;amp; is (typeof (.startsWith! Pred (didThisStart, withOneOfThese [0])): bool) &amp;amp;&amp;amp; is (typeof (.startsWith! Pred (didThisStart, withOneOfThese [ 1 .. $])): uint)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="8b25d7a869777779dea179bd80c7a89c7e1b3891" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!Range &amp;amp;&amp;amp; (is(ElementType!Range : T) || isSomeString!(T[]) &amp;amp;&amp;amp; is(ElementType!Range : dchar))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! Range &amp;amp;&amp;amp; (is (ElementType! Range: T) || isSomeString! (T []) &amp;amp;&amp;amp; is (ElementType! Range: dchar))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="f62db5c587e3a3fc03dabac14e6dc61bab9d5400" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!Range &amp;amp;&amp;amp; hasLength!Range &amp;amp;&amp;amp; isUniformRNG!UniformRNG); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! Range &amp;amp;&amp;amp; hasLength! Range &amp;amp;&amp;amp; isUniformRNG! UniformRNG); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="e76644d78f9e3aaec956dbee0ebc32c0887e69ab" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!Range &amp;amp;&amp;amp; hasLength!Range); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! Range &amp;amp;&amp;amp; hasLength! Range); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="021ed563cbefb99bd9dca9cb9b644874479cc9ea" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!Range &amp;amp;&amp;amp; hasLvalueElements!Range &amp;amp;&amp;amp; hasAssignableElements!Range); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! Range &amp;amp;&amp;amp; hasLvalueElements! Range &amp;amp;&amp;amp; hasAssignableElements! Range); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="9460a7c90d7e93045cd14f94bf6c18d2cee7025b" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!Range &amp;amp;&amp;amp; hasLvalueElements!Range &amp;amp;&amp;amp; is(typeof(range.front = value))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! Range &amp;amp;&amp;amp; hasLvalueElements! Range &amp;amp;&amp;amp; is (typeof (range.front = value))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="003135ad1e1df0d42387936a11965e41a5403624" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!Range &amp;amp;&amp;amp; is(ElementType!Range : dchar)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! Range &amp;amp;&amp;amp; is (ElementType! Range: dchar)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="07c5d5cdb698f2f06306993cb732c31475f44a8d" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!Range &amp;amp;&amp;amp; is(Unqual!(ElementType!Range) == Grapheme)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! Range &amp;amp;&amp;amp; is (Unqual! (ElementType! Range) == Графема)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="ae215d2e93e52a7feea90213c27e96d0d227bde4" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!Range &amp;amp;&amp;amp; is(Unqual!(ElementType!Range) == dchar) &amp;amp;&amp;amp; isSomeChar!Separator &amp;amp;&amp;amp; !is(Contents T : T[U], U : string)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! Range &amp;amp;&amp;amp; is (Unqual! (ElementType! Range) == dchar) &amp;amp;&amp;amp; isSomeChar! Разделитель &amp;amp;&amp;amp;! Is (Содержимое T: T [U], U: строка)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="8cf443227392c82fddc62670c1c73c89a166691b" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!Range &amp;amp;&amp;amp; is(Unqual!(ElementType!Range) == dchar) &amp;amp;&amp;amp; isSomeChar!Separator &amp;amp;&amp;amp; is(Header : typeof(null))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! Range &amp;amp;&amp;amp; is (Unqual! (ElementType! Range) == dchar) &amp;amp;&amp;amp; isSomeChar! Разделитель &amp;amp;&amp;amp; is (Header: typeof (null))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="97942198d724fc0c353b72e14c562ee98b5bb60c" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!Range &amp;amp;&amp;amp; is(Unqual!(ElementType!Range) == dchar) &amp;amp;&amp;amp; isSomeChar!Separator &amp;amp;&amp;amp; isForwardRange!Header &amp;amp;&amp;amp; isSomeString!(ElementType!Header)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! Range &amp;amp;&amp;amp; is (Unqual! (ElementType! Range) == dchar) &amp;amp;&amp;amp; isSomeChar! Разделитель &amp;amp;&amp;amp; isForwardRange! Header &amp;amp;&amp;amp; isSomeString! (ElementType! Header)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="2f93f2dd86944ca8f13a0f41ccb2a195aa16ac81" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!Range &amp;amp;&amp;amp; is(Unqual!(ElementType!Range) == dchar)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! Range &amp;amp;&amp;amp; is (Unqual! (ElementType! Range) == dchar)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="525a24bd28f011ae204fe1b7da541d3e8b9bfc80" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!Range &amp;amp;&amp;amp; is(typeof(binaryFun!pred(r.front, r.front)) == bool)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! Range &amp;amp;&amp;amp; is (typeof (binaryFun! Pred (r.front, r.front)) == bool)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="90ac1f92ccaed00326d725fffd59b06f43bcfbc7" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!Range &amp;amp;&amp;amp; is(typeof(pred(range.front)) : bool)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! Range &amp;amp;&amp;amp; is (typeof (pred (range.front)): bool)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="cb0623102741c4b330cae8317cbe007f8bbe55fc" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!Range &amp;amp;&amp;amp; is(typeof(r.front == lPar))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! Range &amp;amp;&amp;amp; is (typeof (r.front == lPar))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="dc3cc82ae37ab4091301e05972262fc363098462" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!Range &amp;amp;&amp;amp; is(typeof(range.front = value)) || isSomeChar!Value &amp;amp;&amp;amp; is(typeof(range[] = value))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! Range &amp;amp;&amp;amp; is (typeof (range.front = value)) || isSomeChar! Value &amp;amp;&amp;amp; is (typeof (range [] = value))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="1278a1af1c5da3a0b41733267c3969a75eb61906" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!Range &amp;amp;&amp;amp; is(typeof(range.front == element) : bool)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! Range &amp;amp;&amp;amp; is (typeof (range.front == element): bool)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="a44f65b5d8bec9c43808cdb91eff4734681f1add" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!Range &amp;amp;&amp;amp; is(typeof(unaryFun!pred(range.front)))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! Range &amp;amp;&amp;amp; is (typeof (unaryFun! Pred (range.front)))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="b74e822342bc1d6d04ec465a0757f630209e6f84" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!Range &amp;amp;&amp;amp; isFloatingPoint!(ElementType!Range)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! Range &amp;amp;&amp;amp; isFloatingPoint! (ElementType! Range)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="8f615867a1c0307ef28ae9677ca1347b95097b83" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!Range &amp;amp;&amp;amp; isImplicitlyConvertible!(ElementType!Range, T) &amp;amp;&amp;amp; !is(Range == T[])); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! Range &amp;amp;&amp;amp; isImplicitlyConvertible! (ElementType! Range, T) &amp;amp;&amp;amp;! Is (Range == T [])); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="4b456905240ecf0e352f2f6382e1429e7759c2d2" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!Range &amp;amp;&amp;amp; isSomeChar!(ElementEncodingType!Range) &amp;amp;&amp;amp; !isConvertibleToString!Range); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! Range &amp;amp;&amp;amp; isSomeChar! (ElementEncodingType! Range) &amp;amp;&amp;amp;! IsConvertibleToString! Range); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="1681619be49610e165c928a5b0d21e65750d4ff8" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!Range &amp;amp;&amp;amp; isSomeChar!(ElementType!Range) &amp;amp;&amp;amp; !isSomeString!Range); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! Range &amp;amp;&amp;amp; isSomeChar! (ElementType! Range) &amp;amp;&amp;amp;! IsSomeString! Range); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="1a5457a177a2c2605c913d261ecab4ac1c922ddd" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!Range &amp;amp;&amp;amp; isUniformRNG!UniformRNG); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! Range &amp;amp;&amp;amp; isUniformRNG! UniformRNG); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="8f98996ab9915c2649df0a4d059ca003e85e3010" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!Range); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! Range); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="b158da28197a18edb99f30aab032fd20dc846972" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!Range1 &amp;amp;&amp;amp; !isInfinite!Range1 &amp;amp;&amp;amp; isSomeChar!(ElementEncodingType!Range1) &amp;amp;&amp;amp; !isConvertibleToString!Range1 &amp;amp;&amp;amp; isInputRange!Range2 &amp;amp;&amp;amp; !isInfinite!Range2 &amp;amp;&amp;amp; isSomeChar!(ElementEncodingType!Range2) &amp;amp;&amp;amp; !isConvertibleToString!Range2); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! Range1 &amp;amp;&amp;amp;! IsInfinite! Range1 &amp;amp;&amp;amp; isSomeChar! (ElementEncodingType! Range1) &amp;amp;&amp;amp;! IsConvertibleToString! Range1 &amp;amp;&amp;amp; isInputRange! Range2 &amp;amp;&amp;amp;! IsInfinite! Range2 &amp;amp;&amp;amp; isSomeChar! Range2ЛИ! Range! &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="f0ac02de58714d3bec5894647ad0c5e0cfe022a5" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!Range1 &amp;amp;&amp;amp; isInputRange!Range2 &amp;amp;&amp;amp; !(isArray!Range1 &amp;amp;&amp;amp; isArray!Range2)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! Range1 &amp;amp;&amp;amp; isInputRange! Range2 &amp;amp;&amp;amp;! (IsArray! Range1 &amp;amp;&amp;amp; isArray! Range2)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="68b00c9b2f4a690f2daec263eec3413edc01269f" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!Range1 &amp;amp;&amp;amp; isInputRange!Range2 &amp;amp;&amp;amp; !isInfinite!Range1 &amp;amp;&amp;amp; !isInfinite!Range2); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! Range1 &amp;amp;&amp;amp; isInputRange! Range2 &amp;amp;&amp;amp;! IsInfinite! Range1 &amp;amp;&amp;amp;! IsInfinite! Range2); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="587d21b7cea3b535fa364b822bb030aa4edfb0ba" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!Range1 &amp;amp;&amp;amp; isInputRange!Range2 &amp;amp;&amp;amp; is(CommonType!(ElementType!Range1, ElementType!Range2))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! Range1 &amp;amp;&amp;amp; isInputRange! Range2 &amp;amp;&amp;amp; is (CommonType! (ElementType! Range1, ElementType! Range2))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="652da8d7cff83a97c5c3dcc66be066ed7229d7b5" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!Range1 &amp;amp;&amp;amp; isInputRange!Range2 &amp;amp;&amp;amp; is(typeof(CommonType!(ElementType!Range1, ElementType!Range2).init &amp;gt;= F.init) : bool)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! Range1 &amp;amp;&amp;amp; isInputRange! Range2 &amp;amp;&amp;amp; is (typeof (CommonType! (ElementType! Range1, ElementType! Range2) .init&amp;gt; = F.init): bool)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="614a4181263b3e494fa4736a722214ee675c35c3" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!Range1 &amp;amp;&amp;amp; isInputRange!Range2 &amp;amp;&amp;amp; is(typeof(binaryFun!pred(r1.front, r2.front)))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! Range1 &amp;amp;&amp;amp; isInputRange! Range2 &amp;amp;&amp;amp; is (typeof (binaryFun! Pred (r1.front, r2.front)))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="0aba6f223e9d2b6898c20bac8e73cafde5b086c7" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!Range1 &amp;amp;&amp;amp; isInputRange!Range2); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! Range1 &amp;amp;&amp;amp; isInputRange! Range2); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="8b689183ff75abb7d563f0655fea1f4e0e39eeaf" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!RoR &amp;amp;&amp;amp; isInputRange!(ElementType!RoR) &amp;amp;&amp;amp; isForwardRange!Separator &amp;amp;&amp;amp; is(ElementType!Separator : ElementType!(ElementType!RoR))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! RoR &amp;amp;&amp;amp; isInputRange! (ElementType! RoR) &amp;amp;&amp;amp; isForwardRange! Разделитель &amp;amp;&amp;amp; is (ElementType! Separator: ElementType! (ElementType! RoR))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="c2e375bde69a00296a78c59302c4495bd93b4b64" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!RoR &amp;amp;&amp;amp; isInputRange!(ElementType!RoR)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! RoR &amp;amp;&amp;amp; isInputRange! (ElementType! RoR)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="be99a5caf36b0552ac4f77f0791cb2b4de6bc068" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!RoR &amp;amp;&amp;amp; isInputRange!(Unqual!(ElementType!RoR)) &amp;amp;&amp;amp; is(E : ElementType!(ElementType!RoR))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! RoR &amp;amp;&amp;amp; isInputRange! (Unqual! (ElementType! RoR)) &amp;amp;&amp;amp; is (E: ElementType! (ElementType! RoR))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="e1bed7cc09ab8d477981abddbf4d6954a5685b41" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!RoR &amp;amp;&amp;amp; isInputRange!(Unqual!(ElementType!RoR)) &amp;amp;&amp;amp; isInputRange!R &amp;amp;&amp;amp; is(Unqual!(ElementType!(ElementType!RoR)) == Unqual!(ElementType!R))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! RoR &amp;amp;&amp;amp; isInputRange! (Unqual! (ElementType! RoR)) &amp;amp;&amp;amp; isInputRange! R &amp;amp;&amp;amp; is (Unqual! (ElementType! (ElementType! RoR)) == Unqual! (ElementType! R))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="1490f7566cf9bb7bb74043d651445221d28508e8" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!RoR &amp;amp;&amp;amp; isInputRange!(Unqual!(ElementType!RoR))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! RoR &amp;amp;&amp;amp; isInputRange! (Unqual! (ElementType! RoR))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="3eb04257599b26fa0a9dac0a421191020dc1c24e" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!S &amp;amp;&amp;amp; !isDynamicArray!S); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! S &amp;amp;&amp;amp;! IsDynamicArray! S); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="715b698937170a2a15924536b7dc776c6327f573" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!S &amp;amp;&amp;amp; !isInfinite!S &amp;amp;&amp;amp; isSomeChar!(ElementEncodingType!S)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! S &amp;amp;&amp;amp;! IsInfinite! S &amp;amp;&amp;amp; isSomeChar! (ElementEncodingType! S)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="70e1e1e6da6c3b7092aa81b9dd4990cb99e0448d" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!S &amp;amp;&amp;amp; is(Unqual!(ElementType!S) == wchar)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! S &amp;amp;&amp;amp; is (Unqual! (ElementType! S) == wchar)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="d32964e4ca07728ed582e5b8a3231e5f1c267b21" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!S &amp;amp;&amp;amp; isSomeChar!(ElementType!S)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! S &amp;amp;&amp;amp; isSomeChar! (ElementType! S)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="f05c5e46b5c17703ca89eeae8a9365889ee4ac8a" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!S); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! S); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="691490d46b34a95b24b75a397a8283290e93e887" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!S1 &amp;amp;&amp;amp; isSomeChar!(ElementEncodingType!S1) &amp;amp;&amp;amp; isInputRange!S2 &amp;amp;&amp;amp; isSomeChar!(ElementEncodingType!S2)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! S1 &amp;amp;&amp;amp; isSomeChar! (ElementEncodingType! S1) &amp;amp;&amp;amp; isInputRange! S2 &amp;amp;&amp;amp; isSomeChar! (ElementEncodingType! S2)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="e0f9690fa843ef1ae6ca116e9df6a174b125dafe" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!SRange &amp;amp;&amp;amp; isRandomAccessRange!TRange &amp;amp;&amp;amp; hasLength!TRange &amp;amp;&amp;amp; hasSlicing!TRange); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! SRange &amp;amp;&amp;amp; isRandomAccessRange! TRange &amp;amp;&amp;amp; hasLength! TRange &amp;amp;&amp;amp; hasSlicing! TRange); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="fec72abd65b9642c0e5a2162d9646cf737e98d33" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!Source &amp;amp;&amp;amp; isSomeChar!(ElementType!Source) &amp;amp;&amp;amp; !is(Source == enum) &amp;amp;&amp;amp; isFloatingPoint!Target &amp;amp;&amp;amp; !is(Target == enum)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! Source &amp;amp;&amp;amp; isSomeChar! (ElementType! Source) &amp;amp;&amp;amp;! Is (Source == enum) &amp;amp;&amp;amp; isFloatingPoint! Target &amp;amp;&amp;amp;! Is (Target == enum)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="8e2918c268432f0e85b47edca41f3b0c7c2c60b6" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!Source &amp;amp;&amp;amp; isSomeChar!(ElementType!Source) &amp;amp;&amp;amp; is(Unqual!Target == bool)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! Source &amp;amp;&amp;amp; isSomeChar! (ElementType! Source) &amp;amp;&amp;amp; is (Unqual! Target == bool)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="2bf2ae37bbf199edbb4174e46f14b080a59a89be" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!Source &amp;amp;&amp;amp; isSomeChar!(ElementType!Source) &amp;amp;&amp;amp; is(Unqual!Target == typeof(null))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! Source &amp;amp;&amp;amp; isSomeChar! (ElementType! Source) &amp;amp;&amp;amp; is (Unqual! Target == typeof (null))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="7bba63fece89915f5139895354d244b2b24253ac" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!Source); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! Source); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="91cf1f52c6e55cb48f0757a064cdaeff1d5af66a" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!SourceRange &amp;amp;&amp;amp; isOutputRange!(TargetRange, ElementType!SourceRange)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! SourceRange &amp;amp;&amp;amp; isOutputRange! (TargetRange, ElementType! SourceRange)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="ce87368f183de6436cd8749661ebf39b46d643ec" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!Stuff &amp;amp;&amp;amp; !isArray!Stuff); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! Stuff &amp;amp;&amp;amp;! IsArray! Stuff); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="4d065d5dbe2c700b30d4a489c041b787da63f3d6" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!Stuff &amp;amp;&amp;amp; is(ElementType!Stuff : bool)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! Stuff &amp;amp;&amp;amp; is (ElementType! Stuff: bool)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="ffbbb9381a0a2e23f2dc9e8fbe18bf96f7226c7b" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!Stuff &amp;amp;&amp;amp; isImplicitlyConvertible!(ElementType!Stuff, Elem) &amp;amp;&amp;amp; !isDynamicArray!Stuff); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! Stuff &amp;amp;&amp;amp; isImplicitlyConvertible! (ElementType! Stuff, Elem) &amp;amp;&amp;amp;! IsDynamicArray! Stuff); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="78266872a6d02d89e3f866b1b1e717a0d5d65261" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!Stuff &amp;amp;&amp;amp; isImplicitlyConvertible!(ElementType!Stuff, Elem)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! Stuff &amp;amp;&amp;amp; isImplicitlyConvertible! (ElementType! Stuff, Elem)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="6fed1556f48200304bc4aaafbc5406e50ede6023" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!Stuff &amp;amp;&amp;amp; isImplicitlyConvertible!(ElementType!Stuff, T) &amp;amp;&amp;amp; !is(Stuff == T[])); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! Stuff &amp;amp;&amp;amp; isImplicitlyConvertible! (ElementType! Stuff, T) &amp;amp;&amp;amp;! Is (Stuff == T [])); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="b5040d5973bb48fbec8572fb7ecc5aa6ad233bff" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!Stuff &amp;amp;&amp;amp; isImplicitlyConvertible!(ElementType!Stuff, T)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! Stuff &amp;amp;&amp;amp; isImplicitlyConvertible! (ElementType! Stuff, T)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="79ad160bb33b13d0dfd49e8f9fa89f83b0c6ab29" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!Stuff || isImplicitlyConvertible!(Stuff, T)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! Stuff || isImplicitlyConvertible! (Stuff, T)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="aabf3c85bcf08b618aeadd63ee490363b5877222" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!T &amp;amp;&amp;amp; !isInfinite!T &amp;amp;&amp;amp; isSomeChar!(ElementEncodingType!T)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! T &amp;amp;&amp;amp;! IsInfinite! T &amp;amp;&amp;amp; isSomeChar! (ElementEncodingType! T)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="6356c4a56beddcd7e0bf0d4a7fbd7db3013bdaeb" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!T &amp;amp;&amp;amp; is(ElementType!T : U)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! T &amp;amp;&amp;amp; is (ElementType! T: U)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="c550c14ef992dc727e897fb46d67fdb95e83493a" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!T &amp;amp;&amp;amp; is(Unqual!(ElementType!T) == UIntType)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! T &amp;amp;&amp;amp; is (Unqual! (ElementType! T) == UIntType)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="b13eb2ac1b5fb0a51f1ab209516b3f18d88d39e2" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!T); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! T); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="42319ee8960b5199a1a5b3fe8d647f0434e18be5" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!Value || !is(CommonType!(Value, typeof(substs[0])) == void)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! Value ||! Is (CommonType! (Value, typeof (substs [0])) == void)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="68f3dff8e639cb948883b0c7ffa63fff7643d495" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isInputRange!Values &amp;amp;&amp;amp; isInputRange!Keys); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isInputRange! Values ​​&amp;amp;&amp;amp; isInputRange! Keys); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="4e80851daa2cdcb686cbfe35e680120ff1777638" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isIntegral!(CommonType!(B, E)) || isPointer!(CommonType!(B, E))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isIntegral! (CommonType! (B, E)) || isPointer! (CommonType! (B, E))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="aaad85758a9ca83bf6d8a373035cd5d7bc265994" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isIntegral!Enumerator &amp;amp;&amp;amp; isInputRange!Range); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isIntegral! Enumerator &amp;amp;&amp;amp; isInputRange! Range); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="0820719ca02fee0ddde47a46542a5e866623089b" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isIntegral!F &amp;amp;&amp;amp; isIntegral!G); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isIntegral! F &amp;amp;&amp;amp; isIntegral! G); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="68d5da5eb6a4d50b167325cd40a0e0b4a01319c7" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isIntegral!I &amp;amp;&amp;amp; isFloatingPoint!F); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isIntegral! I &amp;amp;&amp;amp; isFloatingPoint! F); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="4dc0cf5dd7178e4547ddd8bc70d60e4d7fd91b39" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isIntegral!L &amp;amp;&amp;amp; isIntegral!R); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isIntegral! L &amp;amp;&amp;amp; isIntegral! R); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="0ec43d885396e9c406431d7039245e3d915bd516" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isIntegral!Lhs || isFloatingPoint!Lhs || is(Lhs == bool)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isIntegral! Lhs || isFloatingPoint! Lhs || is (Lhs == bool)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="382ecb1a4a227d960d9cdb0824f4aa8debe3cd82" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isIntegral!Rhs || isFloatingPoint!Rhs || is(Rhs == bool)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isIntegral! Rhs || isFloatingPoint! Rhs || is (Rhs == bool)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="8a0443885b130797ea6370eb1fee77816b2610ca" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isIntegral!T &amp;amp;&amp;amp; isSigned!T); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isIntegral! T &amp;amp;&amp;amp; isSigned! T); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="bbe143ac28947236c75e6f33fa7386c7a1c0896d" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isIntegral!T &amp;amp;&amp;amp; isUnsigned!T); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isIntegral! T &amp;amp;&amp;amp; isUnsigned! T); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="c19e63f046dd6ede29683a4f6ee3804b440d4872" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isIntegral!T || isSomeChar!T || isBoolean!T); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isIntegral! T || isSomeChar! T || isBoolean! T); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="0bcf8fa926493e941d7b6377e247e9c70f61f85d" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isIntegral!T); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isIntegral! T); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="ef6ad691fbbc1273905a7d744d8eb7ab2c626e01" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isIntegral!U || isFloatingPoint!U || is(U == bool) || is(U == Checked!(V, W), V, W) &amp;amp;&amp;amp; is(typeof(this == rhs.payload))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: если (isIntegral! U || isFloatingPoint! U || is (U == bool) || is (U == Проверено! (V, W), V, W) &amp;amp;&amp;amp; is (typeof (this == rhs. полезная нагрузка))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="232325f14363b4f734dd8a3b0f820dab514e7454" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isIntegral!U || isFloatingPoint!U || is(U == bool)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isIntegral! U || isFloatingPoint! U || is (U == bool)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="9c667bc40ea563efd660a64591dc3226efb46fd2" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isIntegral!X &amp;amp;&amp;amp; isFloatingPoint!R); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isIntegral! X &amp;amp;&amp;amp; isFloatingPoint! R); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="75ebde434aeeb6393b8374247198d50e0e939dad" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isIterable!R); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isIterable! R); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="14cd385776fce591dd0b007f1f524e32455306e4" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isIterable!Range &amp;amp;&amp;amp; !isNarrowString!Range &amp;amp;&amp;amp; !isInfinite!Range); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isIterable! Range &amp;amp;&amp;amp;! IsNarrowString! Range &amp;amp;&amp;amp;! IsInfinite! Range); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="3fe076bbb2e06e3a8c6f74b1ab6cf8a9e73bb810" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isNarrowString!R1 &amp;amp;&amp;amp; isInputRange!R2 &amp;amp;&amp;amp; !isNarrowString!R2 &amp;amp;&amp;amp; is(typeof(r1.front == r2.front))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isNarrowString! R1 &amp;amp;&amp;amp; isInputRange! R2 &amp;amp;&amp;amp;! IsNarrowString! R2 &amp;amp;&amp;amp; is (typeof (r1.front == r2.front))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="fded4cf07780e498c98c10801b9a6cbd837f63da" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isNarrowString!R1 &amp;amp;&amp;amp; isInputRange!R2 &amp;amp;&amp;amp; is(typeof(binaryFun!pred(r1.front, r2.front)))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isNarrowString! R1 &amp;amp;&amp;amp; isInputRange! R2 &amp;amp;&amp;amp; is (typeof (binaryFun! Pred (r1.front, r2.front)))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="89aabac2c127038098a574f8c434841a820d6129" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isNarrowString!R1 &amp;amp;&amp;amp; isNarrowString!R2); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isNarrowString! R1 &amp;amp;&amp;amp; isNarrowString! R2); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="82b9eabd52988df46d2a5da214b11d6a2f9ea8ea" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isNarrowString!Range); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isNarrowString! Range); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="a28453e95b5fdd1d86bfd4b19545183a0a72f874" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isNarrowString!String); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isNarrowString! String); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="69a79f5190ed5651d9ff9c5dd7c15d452e1e0544" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isNumeric!Num &amp;amp;&amp;amp; isForwardRange!Rng); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isNumeric! Num &amp;amp;&amp;amp; isForwardRange! Rng); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="d0f0be514b52335e3b061b92b0560d32b95d3359" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isNumeric!Num); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isNumeric! Num); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="ac82b3921d50bab18ac0788be0a1f96c69723431" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isNumeric!X); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isNumeric! X); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="3b0d5657192e92fed7dcff9dfc5d2e33ccba1c29" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isOutputRange!(OutputRange, char)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isOutputRange! (OutputRange, char)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="4f5136941f5857050e1d77e1af48e70abd3fb20a" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isOutputRange!(Sink, E) &amp;amp;&amp;amp; (isForwardRange!R1 &amp;amp;&amp;amp; isForwardRange!R2 &amp;amp;&amp;amp; (hasLength!R2 || isSomeString!R2) || is(Unqual!E : Unqual!R1))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isOutputRange! (Sink, E) &amp;amp;&amp;amp; (isForwardRange! R1 &amp;amp;&amp;amp; isForwardRange! R2 &amp;amp;&amp;amp; (hasLength! R2 || isSomeString! R2) || is (Unqual! E: Unqual! R1))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="e47829a0f828ecd1447bffabea3c6a725b812d7a" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isOutputRange!(Sink, dchar) &amp;amp;&amp;amp; isSomeString!R &amp;amp;&amp;amp; is(C : dchar) &amp;amp;&amp;amp; isRegexFor!(RegEx, R)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isOutputRange! (Sink, dchar) &amp;amp;&amp;amp; isSomeString! R &amp;amp;&amp;amp; is (C: dchar) &amp;amp;&amp;amp; isRegexFor! (RegEx, R)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="8906e0e6f1be3c34318559884dc8f061fe670644" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isOutputRange!(Sink, dchar) &amp;amp;&amp;amp; isSomeString!R &amp;amp;&amp;amp; isRegexFor!(RegEx, R)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isOutputRange! (Sink, dchar) &amp;amp;&amp;amp; isSomeString! R &amp;amp;&amp;amp; isRegexFor! (RegEx, R)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="c913ce2f80911402cc9c8d3cb07fdc4b1ff12d1d" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isOutputRange!(W, char)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isOutputRange! (W, char)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="468160d52b0b0e286516c2ec3c1cb8c70b6703b8" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isOutputRange!(Writer, char)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isOutputRange! (Writer, char)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="93668e46227bcb7eb4e69ab3c3c546fa4023a47c" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isOutputRange!(Writer, const(Char)[])); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isOutputRange! (Writer, const (Char) [])); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="eb7b5e8659f4901004e0131d6b9005f5b620721d" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isPointer!Range &amp;amp;&amp;amp; isIterable!(PointerTarget!Range) &amp;amp;&amp;amp; !isNarrowString!Range &amp;amp;&amp;amp; !isInfinite!Range); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isPointer! Range &amp;amp;&amp;amp; isIterable! (PointerTarget! Range) &amp;amp;&amp;amp;! IsNarrowString! Range &amp;amp;&amp;amp;! IsInfinite! Range); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="fa180333b5d237ec5c3453713cb849b5a2c01c74" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isRandomAccessRange!(Args[0])); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isRandomAccessRange! (Args [0])); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="f0bdaef8b926ce38e77ae46bd0e5332093e75304" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isRandomAccessRange!(Unqual!R) &amp;amp;&amp;amp; hasLength!(Unqual!R) &amp;amp;&amp;amp; hasSlicing!(Unqual!R)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isRandomAccessRange! (Unqual! R) &amp;amp;&amp;amp; hasLength! (Unqual! R) &amp;amp;&amp;amp; hasSlicing! (Unqual! R)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="7ba70a17252e68b45b5c2273b6fad3abe43e1446" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isRandomAccessRange!(Unqual!Range) &amp;amp;&amp;amp; hasLength!(Unqual!Range) &amp;amp;&amp;amp; hasSlicing!(Unqual!Range) &amp;amp;&amp;amp; isIntegral!I); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isRandomAccessRange! (Unqual! Range) &amp;amp;&amp;amp; hasLength! (Unqual! Range) &amp;amp;&amp;amp; hasSlicing! (Unqual! Range) &amp;amp;&amp;amp; isIntegral! I); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="796031cdaa8bdfc3d51f4f2218b9800e96043eca" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isRandomAccessRange!R &amp;amp;&amp;amp; !isInfinite!R); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isRandomAccessRange! R &amp;amp;&amp;amp;! IsInfinite! R); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="5618b22d6d4b5c4551a854e697fb31f6e16368d9" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isRandomAccessRange!R &amp;amp;&amp;amp; hasLength!R &amp;amp;&amp;amp; hasSwappableElements!R &amp;amp;&amp;amp; !is(typeof(binaryFun!less) == SwapStrategy)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isRandomAccessRange! R &amp;amp;&amp;amp; hasLength! R &amp;amp;&amp;amp; hasSwappableElements! R &amp;amp;&amp;amp;! Is (typeof (binaryFun! Less) == SwapStrategy)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="f82570c2953bb22b547a295bc4c4aa37235a3006" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isRandomAccessRange!R &amp;amp;&amp;amp; hasLength!R &amp;amp;&amp;amp; hasSwappableElements!R); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isRandomAccessRange! R &amp;amp;&amp;amp; hasLength! R &amp;amp;&amp;amp; hasSwappableElements! R); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="2084dcdcb6377b48668e59a68a7648ef980e1055" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isRandomAccessRange!R &amp;amp;&amp;amp; hasSlicing!R &amp;amp;&amp;amp; hasLength!R &amp;amp;&amp;amp; (is(Unqual!(ElementType!R) == char) || is(Unqual!(ElementType!R) == ubyte))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isRandomAccessRange! R &amp;amp;&amp;amp; hasSlicing! R &amp;amp;&amp;amp; hasLength! R &amp;amp;&amp;amp; (is (Unqual! (ElementType! R) == char) || is (Unqual! (ElementType! R) == ubyte))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="b3c9c096b9486b4233a949278542c2c7b8ce229b" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isRandomAccessRange!R &amp;amp;&amp;amp; hasSlicing!R &amp;amp;&amp;amp; hasLength!R &amp;amp;&amp;amp; isSomeChar!(ElementType!R) &amp;amp;&amp;amp; !isSomeString!R &amp;amp;&amp;amp; isSomeChar!C); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isRandomAccessRange! R &amp;amp;&amp;amp; hasSlicing! R &amp;amp;&amp;amp; hasLength! R &amp;amp;&amp;amp; isSomeChar! (ElementType! R) &amp;amp;&amp;amp;! IsSomeString! R &amp;amp;&amp;amp; isSomeChar! C); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="5754707da033374be722a08294be23ffb20655b6" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isRandomAccessRange!R &amp;amp;&amp;amp; hasSlicing!R &amp;amp;&amp;amp; hasLength!R &amp;amp;&amp;amp; isSomeChar!(ElementType!R) &amp;amp;&amp;amp; !isSomeString!R); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isRandomAccessRange! R &amp;amp;&amp;amp; hasSlicing! R &amp;amp;&amp;amp; hasLength! R &amp;amp;&amp;amp; isSomeChar! (ElementType! R) &amp;amp;&amp;amp;! IsSomeString! R); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="9e787410adbfb65499db80b25b16ec6c6a8be14f" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isRandomAccessRange!R &amp;amp;&amp;amp; hasSlicing!R &amp;amp;&amp;amp; isSomeChar!(ElementType!R) &amp;amp;&amp;amp; !isSomeString!R); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isRandomAccessRange! R &amp;amp;&amp;amp; hasSlicing! R &amp;amp;&amp;amp; isSomeChar! (ElementType! R) &amp;amp;&amp;amp;! IsSomeString! R); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="eb3a3e2a281e37b992307e4b9e2ee6a0088bb4f3" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isRandomAccessRange!R &amp;amp;&amp;amp; hasSlicing!R &amp;amp;&amp;amp; isSomeChar!(ElementType!R) || is(StringTypeOf!R)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isRandomAccessRange! R &amp;amp;&amp;amp; hasSlicing! R &amp;amp;&amp;amp; isSomeChar! (ElementType! R) || is (StringTypeOf! R)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="8ad5a4b54373ae1c09eeaffb3a62726f49a3d868" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isRandomAccessRange!R &amp;amp;&amp;amp; isComplexLike!(ElementType!R) &amp;amp;&amp;amp; isFloatingPoint!F); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isRandomAccessRange! R &amp;amp;&amp;amp; isComplexLike! (ElementType! R) &amp;amp;&amp;amp; isFloatingPoint! F); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="202b913ad83317e913f7d06bee4ce0ae960f4128" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isRandomAccessRange!R &amp;amp;&amp;amp; isSomeChar!(ElementType!R) || is(StringTypeOf!R)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isRandomAccessRange! R &amp;amp;&amp;amp; isSomeChar! (ElementType! R) || is (StringTypeOf! R)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="3347c64d86c4af7901cbec5a70f6164f470eccc3" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isRandomAccessRange!R1 &amp;amp;&amp;amp; hasLength!R1 &amp;amp;&amp;amp; isRandomAccessRange!R2 &amp;amp;&amp;amp; hasLength!R2); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isRandomAccessRange! R1 &amp;amp;&amp;amp; hasLength! R1 &amp;amp;&amp;amp; isRandomAccessRange! R2 &amp;amp;&amp;amp; hasLength! R2); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="6b282a49ee068e582cd7a4d25944bdb2b7f66ef8" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isRandomAccessRange!Range &amp;amp;&amp;amp; !isInfinite!Range &amp;amp;&amp;amp; isRandomAccessRange!RangeIndex &amp;amp;&amp;amp; !isInfinite!RangeIndex &amp;amp;&amp;amp; isIntegral!(ElementType!RangeIndex) &amp;amp;&amp;amp; hasAssignableElements!RangeIndex); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isRandomAccessRange! Range &amp;amp;&amp;amp;! IsInfinite! Range &amp;amp;&amp;amp; isRandomAccessRange! RangeIndex &amp;amp;&amp;amp;! IsInfinite! RangeIndex &amp;amp;&amp;amp; isIntegral! (ElementType! RangeIndex) &amp;amp;&amp;amp; hasAssignableElements! RangeIndex); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="8b65fd0d73b84fde9ba23ff54a0c826a8073bba1" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isRandomAccessRange!Range &amp;amp;&amp;amp; hasLength!Range &amp;amp;&amp;amp; hasSlicing!Range &amp;amp;&amp;amp; hasAssignableElements!Range); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isRandomAccessRange! Range &amp;amp;&amp;amp; hasLength! Range &amp;amp;&amp;amp; hasSlicing! Range &amp;amp;&amp;amp; hasAssignableElements! Range); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="9e024a6767100fa9f952adfbde978fce7db8201e" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isRandomAccessRange!Range &amp;amp;&amp;amp; hasLength!Range &amp;amp;&amp;amp; hasSlicing!Range); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isRandomAccessRange! Range &amp;amp;&amp;amp; hasLength! Range &amp;amp;&amp;amp; hasSlicing! Range); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="c6304646493ce6fc2dc7ba856b56cfb9532e73a0" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isRandomAccessRange!Range &amp;amp;&amp;amp; hasLength!Range &amp;amp;&amp;amp; isUniformRNG!RandomGen); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isRandomAccessRange! Range &amp;amp;&amp;amp; hasLength! Range &amp;amp;&amp;amp; isUniformRNG! RandomGen); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="7a111523dda76ebe1e8605b5417be65b4be29ccf" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isRandomAccessRange!Range &amp;amp;&amp;amp; hasLength!Range); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isRandomAccessRange! Range &amp;amp;&amp;amp; hasLength! Range); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="e2731db513c1a99e24a9fb4012ee88f8b3ac895a" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isRandomAccessRange!Range &amp;amp;&amp;amp; hasSlicing!Range || isSomeString!Range); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isRandomAccessRange! Range &amp;amp;&amp;amp; hasSlicing! Range || isSomeString! Range); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="754ce5b85f1206e5b4a8843181cd38541ff296ad" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isRandomAccessRange!Range &amp;amp;&amp;amp; is(ElementType!Range : char)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isRandomAccessRange! Range &amp;amp;&amp;amp; is (ElementType! Range: char)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="2b26477789a30f103b0af758300eff4b001bcd06" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isRandomAccessRange!Range &amp;amp;&amp;amp; isRandomAccessRange!RangeIndex &amp;amp;&amp;amp; hasAssignableElements!RangeIndex); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isRandomAccessRange! Range &amp;amp;&amp;amp; isRandomAccessRange! RangeIndex &amp;amp;&amp;amp; hasAssignableElements! RangeIndex); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="b53a666f197dddbf7f4dcf5c80ee10ff3769d012" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isRandomAccessRange!Range &amp;amp;&amp;amp; isUniformRNG!RandomGen); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isRandomAccessRange! Range &amp;amp;&amp;amp; isUniformRNG! RandomGen); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="aafd41219bdcbe4dc651547843e5813d25d86c9b" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isRandomAccessRange!Range &amp;amp;&amp;amp; isUniformRNG!UniformRNG); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isRandomAccessRange! Range &amp;amp;&amp;amp; isUniformRNG! UniformRNG); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="6abe71abab6626d0a875f89313fe9d2fa15df825" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isRandomAccessRange!Range); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isRandomAccessRange! Range); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="1d1dc5cdf6d80fcfb6a63d92c7ae5ed5a525ee31" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isRandomAccessRange!Range1 &amp;amp;&amp;amp; hasLength!Range1 &amp;amp;&amp;amp; isInputRange!Range2 &amp;amp;&amp;amp; is(ElementType!Range1 == ElementType!Range2) &amp;amp;&amp;amp; hasLvalueElements!Range1 &amp;amp;&amp;amp; hasLvalueElements!Range2); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isRandomAccessRange! Range1 &amp;amp;&amp;amp; hasLength! Range1 &amp;amp;&amp;amp; isInputRange! Range2 &amp;amp;&amp;amp; is (ElementType! Range1 == ElementType! Range2) &amp;amp;&amp;amp; hasLvalueElements! Range1 &amp;amp;&amp;amp; hasLvalueElements! Range2); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="47c30e3fad536a99f138ec3196224cc384778fbc" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isRandomAccessRange!Ret &amp;amp;&amp;amp; isComplexLike!(ElementType!Ret) &amp;amp;&amp;amp; hasSlicing!Ret); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isRandomAccessRange! Ret &amp;amp;&amp;amp; isComplexLike! (ElementType! Ret) &amp;amp;&amp;amp; hasSlicing! Ret); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="4d98634b1e949a6b8c73fe717bae7083e6c73c4e" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isRandomAccessRange!S &amp;amp;&amp;amp; is(Unqual!(ElementEncodingType!S) == dchar)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isRandomAccessRange! S &amp;amp;&amp;amp; is (Unqual! (ElementEncodingType! S) == dchar)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="9bb35a524cfe21380658aaf6d923431268dfa3bf" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isSafe!(() { StopWatch sw; unaryFun!func(sw.peek()); } )); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isSafe! (() {StopWatch sw; unaryFun! Func (sw.peek ());})); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="9a8b1f61dadc2230140646e836a31edd30d25b44" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isScalarType!Terminator); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isScalarType! Terminator); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="9dd8aa0c5731cf5ea5bf23c0c31210f99fcd5583" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isSearchFunction!dg); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isSearchFunction! Dg); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="6e9ef00dab6255740196811f3e1366d25087bc2e" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isSomeChar!(ElementEncodingType!R) &amp;amp;&amp;amp; (isRandomAccessRange!R &amp;amp;&amp;amp; hasSlicing!R &amp;amp;&amp;amp; hasLength!R || isNarrowString!R) &amp;amp;&amp;amp; !isConvertibleToString!R); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isSomeChar! (ElementEncodingType! R) &amp;amp;&amp;amp; (isRandomAccessRange! R &amp;amp;&amp;amp; hasSlicing! R &amp;amp;&amp;amp; hasLength! R || isNarrowString! R) &amp;amp;&amp;amp;! IsConvertibleToString! R); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="df5fa348864f08b2e436a11afa4772ec94a3b5c6" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isSomeChar!(ElementType!Source) &amp;amp;&amp;amp; isIntegral!Target &amp;amp;&amp;amp; !is(Target == enum)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isSomeChar! (ElementType! Source) &amp;amp;&amp;amp; isIntegral! Target &amp;amp;&amp;amp;! Is (Target == enum)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="f1e74ba5823f61c6bddd11f972a4e3f26213cdde" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isSomeChar!(Unqual!T)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isSomeChar! (Unqual! T)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="52f756207fd9fdc50a47de4d18825cda2ef643df" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isSomeChar!C &amp;amp;&amp;amp; is(Unqual!C == C) &amp;amp;&amp;amp; !is(C == enum) &amp;amp;&amp;amp; isBidirectionalRange!R &amp;amp;&amp;amp; is(typeof(terminator.front == (dchar).init))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isSomeChar! C &amp;amp;&amp;amp; is (Unqual! C == C) &amp;amp;&amp;amp;! Is (C == enum) &amp;amp;&amp;amp; isBidirectionalRange! R &amp;amp;&amp;amp; is (typeof (terminator.front == (dchar) .init))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="b9f0f23a4645ba5b179bd8b40ceb71a2f612884c" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isSomeChar!C &amp;amp;&amp;amp; is(Unqual!C == C) &amp;amp;&amp;amp; !is(C == enum)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isSomeChar! C &amp;amp;&amp;amp; is (Unqual! C == C) &amp;amp;&amp;amp;! Is (C == enum)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="c99864e6d96f1cb4a7aedbf4d23652f6639dff98" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isSomeChar!C &amp;amp;&amp;amp; isSomeChar!C1); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isSomeChar! C &amp;amp;&amp;amp; isSomeChar! C1); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="bff63e024b42702434ca78f5cfd1a5d79110ea3b" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isSomeChar!C); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isSomeChar! C); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="b304943a5a9aeec2ebeb999e2dfc3009627266bd" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isSomeChar!C1 &amp;amp;&amp;amp; !is(C1 == immutable) &amp;amp;&amp;amp; is(Unqual!C1 == Unqual!C2)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isSomeChar! C1 &amp;amp;&amp;amp;! Is (C1 == неизменяемый) &amp;amp;&amp;amp; is (Unqual! C1 == Unqual! C2)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="54a123129ae79a72aa5394cb9eb35d699566fe29" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isSomeChar!C1 &amp;amp;&amp;amp; is(Unqual!C1 == Unqual!C2)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isSomeChar! C1 &amp;amp;&amp;amp; is (Unqual! C1 == Unqual! C2)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="53e2ad87c1fda33bf5c1c9d55a8fc99c1983a9e5" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isSomeChar!C1 &amp;amp;&amp;amp; isSomeChar!C2 &amp;amp;&amp;amp; isOutputRange!(Buffer, C1)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isSomeChar! C1 &amp;amp;&amp;amp; isSomeChar! C2 &amp;amp;&amp;amp; isOutputRange! (Buffer, C1)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="188b042360e12ea814aa1ea1525186ac4a14e06d" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isSomeChar!C1 &amp;amp;&amp;amp; isSomeChar!C2); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isSomeChar! C1 &amp;amp;&amp;amp; isSomeChar! C2); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="eb91d99d491bda0b6f75faf46289c723cf27805e" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isSomeChar!C1 &amp;amp;&amp;amp; isSomeString!S &amp;amp;&amp;amp; isSomeChar!C2 &amp;amp;&amp;amp; isOutputRange!(Buffer, S)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isSomeChar! C1 &amp;amp;&amp;amp; isSomeString! S &amp;amp;&amp;amp; isSomeChar! C2 &amp;amp;&amp;amp; isOutputRange! (Buffer, S)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="e45dfa81e03d09e274d5e3225a2a30e1cd828681" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isSomeChar!C1 &amp;amp;&amp;amp; isSomeString!S &amp;amp;&amp;amp; isSomeChar!C2); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isSomeChar! C1 &amp;amp;&amp;amp; isSomeString! S &amp;amp;&amp;amp; isSomeChar! C2);&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="045e2dd51209f49cf7e8ef8605c85bc2fb8f85b3" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isSomeChar!Char &amp;amp;&amp;amp; isSomeChar!Char2); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isSomeChar! Char &amp;amp;&amp;amp; isSomeChar! Char2); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="664a1538d53eb09e067d2309c0f5df2625c990dc" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isSomeChar!Char); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isSomeChar! Char); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="c1f371acff80421baf83f171b5abc84eed253fe9" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isSomeChar!Char1 &amp;amp;&amp;amp; isSomeChar!Char2); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isSomeChar! Char1 &amp;amp;&amp;amp; isSomeChar! Char2); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="2b4c96888c1f003031f6f298d44940833d2f78f6" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isSomeChar!Separator &amp;amp;&amp;amp; isInputRange!Range &amp;amp;&amp;amp; is(Unqual!(ElementType!Range) == dchar) &amp;amp;&amp;amp; isOutputRange!(Output, dchar)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isSomeChar! Разделитель &amp;amp;&amp;amp; isInputRange! Range &amp;amp;&amp;amp; is (Unqual! (ElementType! Range) == dchar) &amp;amp;&amp;amp; isOutputRange! (Output, dchar)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="738a8ce96a9d01adef010860d06db8f1c17cd3b3" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isSomeFunction!Dg &amp;amp;&amp;amp; is(typeof(dg())) &amp;amp;&amp;amp; is(typeof(() { if (!value) { } } ))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isSomeFunction! Dg &amp;amp;&amp;amp; is (typeof (dg ())) &amp;amp;&amp;amp; is (typeof (() {if (! Value) {}}))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="0c6e1acfa308723ea24193a0c4005a47acfeac37" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isSomeString!(T[]) &amp;amp;&amp;amp; allSatisfy!(isCharOrStringOrDcharRange, U)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isSomeString! (T []) &amp;amp;&amp;amp; allSatisfy! (IsCharOrStringOrDcharRange, U)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="966b37f13688b8830abcc36b7cd8b0ddb8a73760" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isSomeString!(typeof(fmt))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isSomeString! (Typeof (fmt))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="8b11181a4b160324eabff713e8ab479a13349158" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isSomeString!(typeof(format))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isSomeString! (Typeof (format))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="7ba47fbf576cd6609ed813b33a15b787dd4172c0" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isSomeString!R &amp;amp;&amp;amp; is(C : dchar) &amp;amp;&amp;amp; isRegexFor!(RegEx, R)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isSomeString! R &amp;amp;&amp;amp; is (C: dchar) &amp;amp;&amp;amp; isRegexFor! (RegEx, R)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="d1169efa235652255c132cd0fa63dbddc6f05da2" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isSomeString!R &amp;amp;&amp;amp; isRegexFor!(RegEx, R)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isSomeString! R &amp;amp;&amp;amp; isRegexFor! (RegEx, R)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="b7b27558ceddb1754cce4d5b522ef3956eb59b4d" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isSomeString!R &amp;amp;&amp;amp; isSomeString!String); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isSomeString! R &amp;amp;&amp;amp; isSomeString! String); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="a3e89359b91cbdf4c202ca8bf54e6e495637d793" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isSomeString!Range || isRandomAccessRange!Range &amp;amp;&amp;amp; hasLength!Range &amp;amp;&amp;amp; hasSlicing!Range &amp;amp;&amp;amp; !isConvertibleToString!Range &amp;amp;&amp;amp; isSomeChar!(ElementEncodingType!Range)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isSomeString! Range || isRandomAccessRange! Range &amp;amp;&amp;amp; hasLength! Range &amp;amp;&amp;amp; hasSlicing! Range &amp;amp;&amp;amp;! IsConvertibleToString! Range &amp;amp;&amp;amp; isSomeChar! (ElementEncodingType! Range)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="3603b7c8c5b7bb381fbd9ca7285b627febf8d48f" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isSomeString!S &amp;amp;&amp;amp; (isInputRange!R &amp;amp;&amp;amp; !isInfinite!R &amp;amp;&amp;amp; isSomeChar!(ElementType!R) || is(StringTypeOf!R))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isSomeString! S &amp;amp;&amp;amp; (isInputRange! R &amp;amp;&amp;amp;! IsInfinite! R &amp;amp;&amp;amp; isSomeChar! (ElementType! R) || is (StringTypeOf! R))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="6fc3020876c5905db47743e092451e8d449847f5" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isSomeString!S || isRandomAccessRange!S &amp;amp;&amp;amp; hasLength!S &amp;amp;&amp;amp; hasSlicing!S &amp;amp;&amp;amp; isSomeChar!(ElementType!S)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isSomeString! S || isRandomAccessRange! S &amp;amp;&amp;amp; hasLength! S &amp;amp;&amp;amp; hasSlicing! S &amp;amp;&amp;amp; isSomeChar! (ElementType! S)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="9a048386a3966dbcd4c01a2d21b475067992568f" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isSomeString!S || isRandomAccessRange!S &amp;amp;&amp;amp; hasLength!S &amp;amp;&amp;amp; isSomeChar!(ElementType!S) || !isRandomAccessRange!S &amp;amp;&amp;amp; isBidirectionalRange!S &amp;amp;&amp;amp; isSomeChar!(ElementType!S)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isSomeString! S || isRandomAccessRange! S &amp;amp;&amp;amp; hasLength! S &amp;amp;&amp;amp; isSomeChar! (ElementType! S) ||! IsRandomAccessRange! S &amp;amp;&amp;amp; isBidirectionalRange! S &amp;amp;&amp;amp; isSomeChar! (ElementType!) &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="7fd9e6e0c63ddc9867d971d2b8cc844c27e396cb" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isSomeString!S || isRandomAccessRange!S &amp;amp;&amp;amp; hasSlicing!S &amp;amp;&amp;amp; isSomeChar!(ElementType!S) &amp;amp;&amp;amp; !isInfinite!S); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isSomeString! S || isRandomAccessRange! S &amp;amp;&amp;amp; hasSlicing! S &amp;amp;&amp;amp; isSomeChar! (ElementType! S) &amp;amp;&amp;amp;! IsInfinite! S); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="99ce8b9b7595787ee278a31c757ffe0124bb423b" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isSomeString!S); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isSomeString! S); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="5d99d17389d81c5d32b95d9ca4b9d10910140826" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isSomeString!Source &amp;amp;&amp;amp; !is(Source == enum) &amp;amp;&amp;amp; (staticIndexOf!(Unqual!Target, dchar, Unqual!(ElementEncodingType!Source)) &amp;gt;= 0)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isSomeString! Source &amp;amp;&amp;amp;! Is (Source == enum) &amp;amp;&amp;amp; (staticIndexOf! (Unqual! Target, dchar, Unqual! (ElementEncodingType! Source))&amp;gt; = 0)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="e0fc8adee42cf171d5ff1a8802a74868035705a9" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isSomeString!Source &amp;amp;&amp;amp; !is(Source == enum) &amp;amp;&amp;amp; is(Target == enum)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isSomeString! Source &amp;amp;&amp;amp;! Is (Source == enum) &amp;amp;&amp;amp; is (Target == enum)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="8995d6075a1e983a2a3d3e77cc6a5b7db6fd38c6" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isSomeString!Source &amp;amp;&amp;amp; !is(Source == enum) &amp;amp;&amp;amp; isAssociativeArray!Target &amp;amp;&amp;amp; !is(Target == enum)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isSomeString! Source &amp;amp;&amp;amp;! Is (Source == enum) &amp;amp;&amp;amp; isAssociativeArray! Target &amp;amp;&amp;amp;! Is (Target == enum)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="c0784818412297fd358de1279066b20b04fd458b" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isSomeString!Source &amp;amp;&amp;amp; !is(Source == enum) &amp;amp;&amp;amp; isDynamicArray!Target &amp;amp;&amp;amp; !is(Target == enum)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isSomeString! Source &amp;amp;&amp;amp;! Is (Source == enum) &amp;amp;&amp;amp; isDynamicArray! Target &amp;amp;&amp;amp;! Is (Target == enum)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="d02972cdf336b40ebaebb5b04e70787408de02bc" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isSomeString!String &amp;amp;&amp;amp; isRegexFor!(RegEx, String)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isSomeString! String &amp;amp;&amp;amp; isRegexFor! (RegEx, String)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="771e7e60c1f8dc01bdb5808cf184dfff0ecf3b91" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isSomeString!String); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isSomeString! String); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="9ca0a997adbdccc08c375f5eb5ab72db4ea4a124" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isSomeString!T); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isSomeString! T); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="50dbcc1095c1257290542fc7317b7f4776a4ebb6" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isSpawnable!(F, T)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isSpawnable! (F, T)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="27f389605631ab4f147196c37531913af4b0e600" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isStaticArray!R); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isStaticArray! R); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="8efa2c5d63f84f6fe8c1d5c24bd3326835d605bd" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isStaticArray!T); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isStaticArray! T); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="841d104c4e667e720b5bd8bc2a497fc5e39fa9c0" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isTimePoint!TP &amp;amp;&amp;amp; (dir == Direction.fwd || dir == Direction.bwd) &amp;amp;&amp;amp; __traits(hasMember, TP, &quot;dayOfWeek&quot;) &amp;amp;&amp;amp; !__traits(isStaticFunction, TP.dayOfWeek) &amp;amp;&amp;amp; is(typeof(TP.dayOfWeek) == DayOfWeek)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isTimePoint! TP &amp;amp;&amp;amp; (dir == Direction.fwd || dir == Direction.bwd) &amp;amp;&amp;amp; __traits (hasMember, TP, &quot;dayOfWeek&quot;) &amp;amp;&amp;amp;! __ traits (isStaticFunction, TP.dayOfWeek) &amp;amp;&amp;amp; is (typeof ( TP.dayOfWeek) == DayOfWeek)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="2cf6585ec8cdf85cdf5e4d0512aab2717a086f0d" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isTimePoint!TP &amp;amp;&amp;amp; (dir == Direction.fwd || dir == Direction.bwd) &amp;amp;&amp;amp; __traits(hasMember, TP, &quot;month&quot;) &amp;amp;&amp;amp; !__traits(isStaticFunction, TP.month) &amp;amp;&amp;amp; is(typeof(TP.month) == Month)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isTimePoint! TP &amp;amp;&amp;amp; (dir == Direction.fwd || dir == Direction.bwd) &amp;amp;&amp;amp; __traits (hasMember, TP, &quot;month&quot;) &amp;amp;&amp;amp;! __ traits (isStaticFunction, TP.month) &amp;amp;&amp;amp; is (typeof ( TP.month) == месяц)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="0dde656f26fe778a33356eb009c2051b1622fc0d" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isTimePoint!TP &amp;amp;&amp;amp; __traits(compiles, TP.init + duration) &amp;amp;&amp;amp; (dir == Direction.fwd || dir == Direction.bwd)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isTimePoint! TP &amp;amp;&amp;amp; __traits (компилирует, TP.init + duration) &amp;amp;&amp;amp; (dir == Direction.fwd || dir == Direction.bwd)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="9e37519a452c80f8bad3c4de5667ea3f6768ed52" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isTimePoint!TP &amp;amp;&amp;amp; __traits(compiles, TP.init + duration) &amp;amp;&amp;amp; __traits(compiles, TP.init.add!&quot;years&quot;(years)) &amp;amp;&amp;amp; __traits(compiles, TP.init.add!&quot;months&quot;(months)) &amp;amp;&amp;amp; (dir == Direction.fwd || dir == Direction.bwd)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isTimePoint! TP &amp;amp;&amp;amp; __traits (компилирует, TP.init + duration) &amp;amp;&amp;amp; __traits (компилирует, TP.init.add! &quot;Years&quot; (годы)) &amp;amp;&amp;amp; __traits (компилирует, TP.init.add! &quot;Months&quot; (месяцы)) &amp;amp;&amp;amp; (dir == Direction.fwd || dir == Direction.bwd)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="a3677a0c9a9dd8618faf5d5801a1994aad182a3e" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isTuple!T); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isTuple! T); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="90b74e86aed0b8f71a2ec3909a3f82eb8ed4ffb8" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isTwoWayCompatible!(predFun, ElementType!Range, V) &amp;amp;&amp;amp; hasSlicing!Range); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isTwoWayCompatible! (PredFun, ElementType! Range, V) &amp;amp;&amp;amp; hasSlicing! Range); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="f98c54e8a8eca2a3518356a1496fc55f2da4504e" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isTwoWayCompatible!(predFun, ElementType!Range, V) &amp;amp;&amp;amp; isRandomAccessRange!Range &amp;amp;&amp;amp; hasLength!Range); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isTwoWayCompatible! (PredFun, ElementType! Range, V) &amp;amp;&amp;amp; isRandomAccessRange! Range &amp;amp;&amp;amp; hasLength! Range); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="6227cf94f5a998b409ced5c3baffe1735bebc258" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isTwoWayCompatible!(predFun, ElementType!Range, V) &amp;amp;&amp;amp; isRandomAccessRange!Range); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isTwoWayCompatible! (PredFun, ElementType! Range, V) &amp;amp;&amp;amp; isRandomAccessRange! Range); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="ba65e423c29efefdab9bace16bba119dcab1ea09" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isTwoWayCompatible!(predFun, ElementType!Range, V)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isTwoWayCompatible! (PredFun, ElementType! Range, V)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="28ddcf62ef798e46955af17654c9c6c6e201f176" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (isUnsigned!F &amp;amp;&amp;amp; isUnsigned!G &amp;amp;&amp;amp; isUnsigned!H); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (isUnsigned! F &amp;amp;&amp;amp; isUnsigned! G &amp;amp;&amp;amp; isUnsigned! H); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="3773b870b0686f453a0e4296d5f15013967cb3af" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (n == Types.length &amp;amp;&amp;amp; allSatisfy!(isBuildableFrom!U, Types)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (n == Types.length &amp;amp;&amp;amp; allSatisfy! (IsBuildableFrom! U, Types)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="694ed99580add05532f0bad2ebd57634156f4544" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (names.length == 0 || allSatisfy!(isSomeString, typeof(names))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (names.length == 0 || allSatisfy! (IsSomeString, typeof (names))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="8b199dc37d4fd925e4fcc627e905bf1af8e0e5e1" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (op == &quot;%&quot; &amp;amp;&amp;amp; isIntegral!T); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (op == &quot;%&quot; &amp;amp;&amp;amp; isIntegral! T); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="bf0d28f2b197dd94525043095c4f760642e0ab34" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (op == &quot;&amp;gt;&amp;gt;&quot;); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (op == &quot;&amp;gt;&amp;gt;&quot;); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="ac766b5b549d24515f4e281dae47c4ed439a3a9c" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (op == &quot;&amp;lt;&amp;lt;&quot;); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (op == &quot;&amp;lt;&amp;lt;&quot;); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="f7705e8fa062f2174f7a362c62f7e7651ba109ee" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (op == &quot;*&quot; &amp;amp;&amp;amp; (__traits(isIntegral, T) || __traits(isFloating, T))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (op == &quot;*&quot; &amp;amp;&amp;amp; (__traits (isIntegral, T) || __traits (isFloating, T))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="3f5db4e3f835778dfeb2f8bccdd44af07b0897a8" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (op == &quot;*&quot; || op == &quot;/&quot;); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (op == &quot;*&quot; || op == &quot;/&quot;); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="0d74c4d8bac04e9a82dac2d46d23ccf1ea46844f" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (op == &quot;*&quot;); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (op == &quot;*&quot;); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="13f39d9605258ce4f2b1bf440cfa2c9a227b8e4f" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (op == &quot;+&quot; || op == &quot;-&quot; || op == &quot;~&quot;); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (op == &quot;+&quot; || op == &quot;-&quot; || op == &quot;~&quot;); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="ab527d5db78559104af47875b2f3d3b9084c8182" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (op == &quot;+&quot; || op == &quot;-&quot;); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (op == &quot;+&quot; || op == &quot;-&quot;); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="0a1fb0229c2cc0708995966861c91964e9ff898a" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (op == &quot;++&quot; || op == &quot;--&quot;); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (op == &quot;++&quot; || op == &quot;-&quot;); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="0075b3a0429cb84e72f79188c182abb6641f915b" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (op == &quot;-&quot; &amp;amp;&amp;amp; isIntegral!T); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (op == &quot;-&quot; &amp;amp;&amp;amp; isIntegral! T); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="05fdfa300e44a180bb36bbeb97ab0c56e0d74e4e" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (op == &quot;-&quot; || op == &quot;&amp;amp;&quot; || op == &quot;|&quot; || op == &quot;^&quot;); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (op == &quot;-&quot; || op == &quot;&amp;amp;&quot; || op == &quot;|&quot; || op == &quot;^&quot;); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="231ad413b1872e76f71876e377c77a1fcd5d905d" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (op == &quot;-&quot;); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (op == &quot;-&quot;); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="a6c67194ade3745b45784cf9db60970ba6446622" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (op == &quot;/&quot; &amp;amp;&amp;amp; (__traits(isIntegral, T) || __traits(isFloating, T))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (op == &quot;/&quot; &amp;amp;&amp;amp; (__traits (isIntegral, T) || __traits (isFloating, T))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="e5b2954819f6e964184c2b47f69f2f9b3257dde8" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (op == &quot;/&quot;); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (op == &quot;/&quot;); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="23023af8accc75efff74e3067f514a3fb4507d43" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (op == &quot;in&quot; &amp;amp;&amp;amp; isRandomAccessRange!Range); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (op == &quot;in&quot; &amp;amp;&amp;amp; isRandomAccessRange! Range); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="ffa87ff1da7f932f3592dbf50b2c5287b1f20503" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (op == &quot;in&quot;); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (op == &quot;in&quot;); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="723c5656ead07aa0af1f146809037c73efd0b697" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (op == &quot;~&quot; &amp;amp;&amp;amp; !(is(T : U[], U) &amp;amp;&amp;amp; isTuple!U)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (op == &quot;~&quot; &amp;amp;&amp;amp;! (Is (T: U [], U) &amp;amp;&amp;amp; isTuple! U)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="33061def3b9bb4959afd754fcbc2ad38f5520b3b" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (op == &quot;~&quot; &amp;amp;&amp;amp; !is(typeof(lhs.opBinary!&quot;~&quot;(this))) &amp;amp;&amp;amp; is(typeof(SList(lhs)))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (op == &quot;~&quot; &amp;amp;&amp;amp;! Is (typeof (lhs.opBinary! &quot;~&quot; (This))) &amp;amp;&amp;amp; is (typeof (SList (lhs)))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="70b1ca02532398f6295f87b73c62fdd6685cc462" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (op == &quot;~&quot; &amp;amp;&amp;amp; is(typeof(SList(rhs)))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (op == &quot;~&quot; &amp;amp;&amp;amp; is (typeof (SList (rhs)))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="7b4b05702e0f18078b61a039d2248580e6a1cc02" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (op == &quot;~&quot; &amp;amp;&amp;amp; is(typeof(insertBack(rhs)))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (op == &quot;~&quot; &amp;amp;&amp;amp; is (typeof (insertBack (rhs)))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="8614a9c1dd7af990cee4dd5521a876ce468aca98" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (op == &quot;~&quot; &amp;amp;&amp;amp; is(typeof(insertFront(lhs)))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (op == &quot;~&quot; &amp;amp;&amp;amp; is (typeof (insertFront (lhs)))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="c0160b75b873fb31e33f1d5a7ff6490da20114ac" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (op == &quot;~&quot;); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (op == &quot;~&quot;); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="b5aae0cf649422c71d7ed064e7dfbf0f373efab6" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (ranges.length &amp;gt;= 2 &amp;amp;&amp;amp; allSatisfy!(isForwardRange, RR) &amp;amp;&amp;amp; !anySatisfy!(isInfinite, RR)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (range.length&amp;gt; = 2 &amp;amp;&amp;amp; allSatisfy! (IsForwardRange, RR) &amp;amp;&amp;amp;! AnySatisfy! (IsInfinite, RR)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="0fe96147cad9ad259806b3638800d1f602737090" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (s == &quot;&amp;amp;&quot;); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (s == &quot;&amp;amp;&quot;); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="62fe39aea2a64dc6158e7cbbaa6fbce1408d305e" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (s == &quot;^&quot;); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (s == &quot;^&quot;); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="80d97a456c904efd047c023754bf96600da9911b" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (s == &quot;|&quot; || s == &quot;&amp;amp;&quot; || s == &quot;^&quot;); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (s == &quot;|&quot; || s == &quot;&amp;amp;&quot; || s == &quot;^&quot;); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="6277ee0974f748bcb90b98b8d1579b7a5dc66d1a" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (s == &quot;|&quot;); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (s == &quot;|&quot;); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="bd8a916b0990e1923e583f41bc1bcffb7a8d6419" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (s == &quot;~&quot;); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (s == &quot;~&quot;); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="b03a6f3aa378d6e245b1f5ad130457cd43a681bb" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (ss != SwapStrategy.stable &amp;amp;&amp;amp; isInputRange!Range &amp;amp;&amp;amp; hasSwappableElements!Range); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (ss! = SwapStrategy.stable &amp;amp;&amp;amp; isInputRange! Range &amp;amp;&amp;amp; hasSwappableElements! Range); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="100e05c3f65a44552c98cfbb455256414e881b76" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (ss == SwapStrategy.stable &amp;amp;&amp;amp; isRandomAccessRange!Range &amp;amp;&amp;amp; hasLength!Range &amp;amp;&amp;amp; hasSlicing!Range &amp;amp;&amp;amp; hasSwappableElements!Range); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (ss == SwapStrategy.stable &amp;amp;&amp;amp; isRandomAccessRange! Range &amp;amp;&amp;amp; hasLength! Range &amp;amp;&amp;amp; hasSlicing! Range &amp;amp;&amp;amp; hasSwappableElements! Range); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="33d31983c454fd7f2be24e35d242aaaec6e8d3ea" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (ss == SwapStrategy.unstable &amp;amp;&amp;amp; isRandomAccessRange!Range &amp;amp;&amp;amp; hasSwappableElements!Range &amp;amp;&amp;amp; hasLength!Range &amp;amp;&amp;amp; hasSlicing!Range &amp;amp;&amp;amp; is(typeof(binaryFun!less(r.front, pivot)) == bool) &amp;amp;&amp;amp; is(typeof(binaryFun!less(pivot, r.front)) == bool) &amp;amp;&amp;amp; is(typeof(binaryFun!less(r.front, r.front)) == bool)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (ss == SwapStrategy.unstable &amp;amp;&amp;amp; isRandomAccessRange! Range &amp;amp;&amp;amp; hasSwappableElements! Range &amp;amp;&amp;amp; hasLength! Range &amp;amp;&amp;amp; hasSlicing! Range &amp;amp;&amp;amp; is (typeof (binaryFun! Less (r.front, pivot)) == bool) &amp;amp;&amp;amp; is (typeof) (binaryFun! less (pivot, r.front)) == bool) &amp;amp;&amp;amp; is (typeof (binaryFun! less (r.front, r.front)) == bool)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="d0b414c37db590e6e308c5356a3906380db371ec" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (staticIndexOf!(Unqual!T, ubyte, ushort, uint) != -1); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (staticIndexOf! (Unqual! T, ubyte, ushort, uint)! = -1); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="6993bfeba07a9a4f202beb4b18bb6b306083b058" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (units == &quot;days&quot;); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (unit == &quot;days&quot;); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="05a7d471d5c9a3a9cb6b880d853b9e9ea83a40bd" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (units == &quot;hours&quot; || units == &quot;minutes&quot; || units == &quot;seconds&quot;); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (единицы измерения == &quot;часы&quot; || единицы == &quot;минуты&quot; || единицы == &quot;секунды&quot;); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="67de572331204eb183660fcc615828e346b3482d" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (units == &quot;hours&quot;); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: если (единицы == &quot;часы&quot;); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="7bf8e46401d2b5d0535ee1de339cd6a8d5236378" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (units == &quot;minutes&quot; || units == &quot;seconds&quot;); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (единицы измерения == &quot;минуты&quot; || единицы == &quot;секунды&quot;); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="6985f8ebd67c0c7d1498e761e62879ad8d04813f" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (units == &quot;months&quot; || units == &quot;hours&quot; || units == &quot;minutes&quot; || units == &quot;seconds&quot;); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (единицы == &quot;месяцы&quot; || единицы == &quot;часы&quot; || единицы == &quot;минуты&quot; || единицы == &quot;секунды&quot;); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="11e9f2f51c1d8bf93a618fae2b847ec5db16873e" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (units == &quot;seconds&quot; || units == &quot;msecs&quot; || units == &quot;usecs&quot; || units == &quot;hnsecs&quot; || units == &quot;nsecs&quot;); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (единицы измерения == &quot;секунды&quot; || единицы == &quot;msecs&quot; || единицы == &quot;usecs&quot; || единицы == &quot;hnsecs&quot; || единицы == &quot;nsecs&quot;); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="2f400445e3e4c27ee18c2df9d39de591f4f46295" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (units == &quot;weeks&quot; || units == &quot;days&quot; || units == &quot;hours&quot; || units == &quot;minutes&quot; || units == &quot;seconds&quot; || units == &quot;msecs&quot; || units == &quot;usecs&quot; || units == &quot;hnsecs&quot; || units == &quot;nsecs&quot;); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: если (единицы == &quot;недели&quot; || единицы == &quot;дни&quot; || единицы == &quot;часы&quot; || единицы == &quot;минуты&quot; || единицы == &quot;секунды&quot; || единицы == &quot;msecs&quot; || единицы == &quot;usecs&quot; || единицы == &quot;hnsecs&quot; || единицы == &quot;nsecs&quot;); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="a30eacf3cf22bf0de853c09ec319275ec7856102" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (units == &quot;years&quot; || units == &quot;months&quot;); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: если (единицы == &quot;годы&quot; || единицы == &quot;месяцы&quot;); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="da4327061c4633e5b3bd165d0b50ecea339f3388" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (units == &quot;years&quot;); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: если (единицы == &quot;годы&quot;); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="3227bda2723f050b415f9e30249e519c4ec6c7a8" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (units.length != 0 &amp;amp;&amp;amp; (args.length == units.length) &amp;amp;&amp;amp; allAreMutableIntegralTypes!Args); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (units.length! = 0 &amp;amp;&amp;amp; (args.length == units.length) &amp;amp;&amp;amp; allAreMutableIntegralTypes! Args); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="acfb4a74d779a7d87fb7956486a5f2f207d1450c" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (uuidData.length == 16 &amp;amp;&amp;amp; allSatisfy!(isIntegral, T)); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (uuidData.length == 16 &amp;amp;&amp;amp; allSatisfy! (IsIntegral, T)); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="5df4b0232e67d6e48cee21e4144980da7e2f861a" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;  Constraints: if (valueConvertible!(U, T) || !isIntegral!T &amp;amp;&amp;amp; is(typeof(T(rhs))) || is(U == Checked!(V, W), V, W) &amp;amp;&amp;amp; is(typeof(Checked!(T, Hook)(rhs.get)))); &lt;/small&gt;</source>
          <target state="translated">&lt;small&gt; Ограничения: if (valueConvertible! (U, T) ||! IsIntegral! T &amp;amp;&amp;amp; is (typeof (T (rhs))) || is (U == Проверено! (V, W), V, W) &amp;amp;&amp;amp; is ( typeof (Проверено! (T, Hook) (rhs.get)))); &lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="6b5b124d18df20bc299f5332a4f1dfd6ac5eb404" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;&lt;i&gt;Post:&lt;/i&gt; `!&lt;i&gt;result&lt;/i&gt; || b.length == &lt;i&gt;old&lt;/i&gt;(b).length + delta`&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;&lt;i&gt;Пост:&lt;/i&gt; `! &lt;i&gt;результат&lt;/i&gt; || b.length == &lt;i&gt;старый&lt;/i&gt; (b) .length + delta`&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="433a4916ba66fc68d7d0ab64eb2bbf928ccc20eb" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;&lt;i&gt;Post:&lt;/i&gt; `!&lt;i&gt;result&lt;/i&gt; || b.length == s`&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;&lt;i&gt;Пост:&lt;/i&gt; `! &lt;i&gt;результат&lt;/i&gt; || b.length == s`&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="03679860b321e5be4676d7561f41f6e8dfd67ee0" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;&lt;i&gt;Post:&lt;/i&gt; `&lt;i&gt;result&lt;/i&gt; &amp;gt; 0`&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;&lt;i&gt;Пост:&lt;/i&gt; ` &lt;i&gt;результат&lt;/i&gt; &amp;gt; 0`&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="fcfb10267574c0f572592c5ee988bc54a2ac4b21" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;&lt;i&gt;Post:&lt;/i&gt; `&lt;i&gt;result&lt;/i&gt; &amp;gt;= n`&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;&lt;i&gt;Пост:&lt;/i&gt; ` &lt;i&gt;result&lt;/i&gt; &amp;gt; = n`&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="9fb8ee9545c827b4c845e3a07f30a47346169b7d" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;&lt;i&gt;Post:&lt;/i&gt; `&lt;i&gt;result&lt;/i&gt; is null || &lt;i&gt;result&lt;/i&gt;.length == s`&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;&lt;i&gt;Пост:&lt;/i&gt; ` &lt;i&gt;результат&lt;/i&gt; равен нулю || &lt;i&gt;результат.&lt;/i&gt; длина == с`&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="75405017a083f1fe74e3d4307cf38984e0f5f70e" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;&lt;i&gt;Post:&lt;/i&gt; `empty`&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;&lt;i&gt;Пост:&lt;/i&gt; `пусто`&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="381122b721f0d6e8ff9c31d9a241d9390341c76d" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;&lt;i&gt;Post:&lt;/i&gt; `instance &lt;i&gt;is a valid&lt;/i&gt; Allocator &lt;i&gt;object&lt;/i&gt;`&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;&lt;i&gt;Сообщение:&lt;/i&gt; `экземпляр &lt;i&gt;является действительным&lt;/i&gt; Allocator &lt;i&gt;объект&lt;/i&gt; `&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="eb4faa183bd61422156faeed8bf929e7d4caef22" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;`std.experimental.allocator.building_blocks.affix_allocator`&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;`std.experimental.allocator.building_blocks.affix_allocator`&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="574e6273626200dc138f92464e820a11c400909a" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;`std.experimental.allocator.building_blocks.aligned_block_list`&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;`std.experimental.allocator.building_blocks.aligned_block_list`&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="6516644074d0d7761fe997e77d1fc3e9ecd1364d" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;`std.experimental.allocator.building_blocks.allocator_list`&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;`std.experimental.allocator.building_blocks.allocator_list`&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="cb6b0b90663b9137371839085dfe56dad61f5a75" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;`std.experimental.allocator.building_blocks.ascending_page_allocator`&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;`std.experimental.allocator.building_blocks.ascending_page_allocator`&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="7f898de19a6a9863e4f9f101d4c8858ea9836f15" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;`std.experimental.allocator.building_blocks.bitmapped_block`&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;`std.experimental.allocator.building_blocks.bitmapped_block`&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="9dd06c9ef7593e0eba87fbcfd545a252bec4e038" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;`std.experimental.allocator.building_blocks.bucketizer`&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;`std.experimental.allocator.building_blocks.bucketizer`&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="36c0d24ddc0ea20460b44dfcea4dfa464604180c" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;`std.experimental.allocator.building_blocks.fallback_allocator`&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;`std.experimental.allocator.building_blocks.fallback_allocator`&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="cf0d4e055f60be51e951bd86279eb013afdb6d40" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;`std.experimental.allocator.building_blocks.free_list`&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;`std.experimental.allocator.building_blocks.free_list`&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="13ecdcec235c76a2c99831dffce6d89cae6acbf4" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;`std.experimental.allocator.building_blocks.free_tree`&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;`std.experimental.allocator.building_blocks.free_tree`&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="0e70caa5019bd49fb11309761e663c13c7117216" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;`std.experimental.allocator.building_blocks.null_allocator`&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;`std.experimental.allocator.building_blocks.null_allocator`&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="fa9edd8798a6047253e3d2154fe01cef346efb72" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;`std.experimental.allocator.building_blocks.quantizer`&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;`std.experimental.allocator.building_blocks.quantizer`&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="8c6793df7c186317a0516b6856919f7442345305" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;`std.experimental.allocator.building_blocks.region`&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;`std.experimental.allocator.building_blocks.region`&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="3e90ecdbcee1db5d3ece8edcd7c282a1151a8653" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;`std.experimental.allocator.building_blocks.segregator`&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;`std.experimental.allocator.building_blocks.segregator`&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="d1dbfb7aeafba89b66045d37365078e77f2fa504" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;`std.experimental.allocator.building_blocks.stats_collector`&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;`std.experimental.allocator.building_blocks.stats_collector`&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="367b6e57bf9a39d1bb4711a4d6b63481813a8e99" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;`std.experimental.allocator.gc_allocator`&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;`std.experimental.allocator.gc_allocator`&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="88df82ce44d0d26693fa3713bdf2f0422df4531e" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;`std.experimental.allocator.mallocator`&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;`std.experimental.allocator.mallocator`&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="c15fc7391b617680629e8021061b3187f894a62e" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;`std.experimental.allocator.mmap_allocator`&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;`std.experimental.allocator.mmap_allocator`&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="858fd60f633e95035d21273597369464e5c233e7" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;AliasThis&quot;&gt;Alias This&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;AliasThis&quot;&gt;Алиас это&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="821a16abc5a9e933525d332198122bd6a3e9e700" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Array&quot;&gt;Index Operator Overloading&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Array&quot;&gt;Перегрузка оператора индекса&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="878f0a6c7631eb674d7f0581661a877c3bca5ba8" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;ArrayOps&quot;&gt;Array Indexing and Slicing Operators Overloading&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;ArrayOps&quot;&gt;Перегрузка операторов индексирования и нарезки массивов&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="bc997888a02333834645ff61c6dfec410d071295" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;AssignOverload&quot;&gt;Identity Assignment Overload&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;AssignOverload&quot;&gt;Перегрузка присвоения идентификационных данных&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="04b15cbaac141fe05c4e055c9368c26d9becfe8b" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;Assignment&quot;&gt;Assignment Operator Overloading&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;Assignment&quot;&gt;Перегрузка оператора присваивания&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6aa3d4e3089d6237c623bb25c22a76086fa23d41" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;AutoDeclaration&quot;&gt;Implicit Type Inference&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;AutoDeclaration&quot;&gt;Неявный вывод типа&lt;/span&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
