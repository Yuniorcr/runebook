<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="d">
    <body>
      <group id="d">
        <trans-unit id="73452a97f008435fbe0f0b3d0ee3f1a418dddd2c" translate="yes" xml:space="preserve">
          <source>Newly created temporary variable.</source>
          <target state="translated">Вновь созданная временная переменная.</target>
        </trans-unit>
        <trans-unit id="e302c64310a9ca244fa110a87de65f2e1a592e89" translate="yes" xml:space="preserve">
          <source>Newton iterations or interval halving is used.</source>
          <target state="translated">Используются ньютоновские итерации или уменьшение интервала наполовину.</target>
        </trans-unit>
        <trans-unit id="ddc9b12c0e2ac408af04a6464da02c9fab4fbf61" translate="yes" xml:space="preserve">
          <source>Next, if the</source>
          <target state="translated">Далее,если</target>
        </trans-unit>
        <trans-unit id="55674258a28777513c3ee8a1247d68d39b7e5128" translate="yes" xml:space="preserve">
          <source>Nko</source>
          <target state="translated">Nko</target>
        </trans-unit>
        <trans-unit id="4dd2d83410062286116bfd3474723788ce66b385" translate="yes" xml:space="preserve">
          <source>Nl</source>
          <target state="translated">Nl</target>
        </trans-unit>
        <trans-unit id="816c52fd2bdd94a63cd0944823a6c0aa9384c103" translate="yes" xml:space="preserve">
          <source>No</source>
          <target state="translated">No</target>
        </trans-unit>
        <trans-unit id="d53788aa816acff93069d1b59d3bb9bffba09d17" translate="yes" xml:space="preserve">
          <source>No &lt;a href=&quot;#CaseRangeStatement&quot;&gt;&lt;i&gt;CaseRangeStatement&lt;/i&gt;&lt;/a&gt;s are allowed.</source>
          <target state="translated">Нет &lt;a href=&quot;#CaseRangeStatement&quot;&gt;&lt;i&gt;CaseRangeStatement&lt;/i&gt;&lt;/a&gt; s допускается.</target>
        </trans-unit>
        <trans-unit id="5df4eb877482a34133026cdb08bb53e2da2f886c" translate="yes" xml:space="preserve">
          <source>No &lt;a href=&quot;#DefaultStatement&quot;&gt;&lt;i&gt;DefaultStatement&lt;/i&gt;&lt;/a&gt; is allowed.</source>
          <target state="translated">Нет &lt;a href=&quot;#DefaultStatement&quot;&gt;&lt;i&gt;DefaultStatement&lt;/i&gt;&lt;/a&gt; допускается.</target>
        </trans-unit>
        <trans-unit id="8c0f12b769823d7fd1937e52e1988a020c1b079c" translate="yes" xml:space="preserve">
          <source>No Documentation</source>
          <target state="translated">Нет Документация</target>
        </trans-unit>
        <trans-unit id="b083b669fe03ec7d0a1f3bf704ff111420546cb5" translate="yes" xml:space="preserve">
          <source>No argument types are composed of inout types.</source>
          <target state="translated">Типы аргументов не формируются из типов inout.</target>
        </trans-unit>
        <trans-unit id="05a28f52a1c146ef4b20ec452938cfe8a22f2f90" translate="yes" xml:space="preserve">
          <source>No attributes set.</source>
          <target state="translated">Атрибуты не установлены.</target>
        </trans-unit>
        <trans-unit id="f1563df863c77d6e7fa91961ad8c317b0e5242ee" translate="yes" xml:space="preserve">
          <source>No casting from a pointer type to any type other than &lt;code&gt;void*&lt;/code&gt;.</source>
          <target state="translated">Нет приведения типа указателя к какому-либо типу, кроме &lt;code&gt;void*&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e4eccf0778d2081320adaf4c9dc6b743373b86ae" translate="yes" xml:space="preserve">
          <source>No casting from any non-pointer type to a pointer type.</source>
          <target state="translated">Нет приведения от любого не указателя к типу указателя.</target>
        </trans-unit>
        <trans-unit id="5c470bb022340ab631092bbc23badd4bdd7c168d" translate="yes" xml:space="preserve">
          <source>No catching of exceptions that are not derived from &lt;code&gt;class Exception&lt;/code&gt;.</source>
          <target state="translated">Нет перехвата исключений, которые не являются производными от &lt;code&gt;class Exception&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fbac8274a33fb459b7645c36c3607643d6b98cfe" translate="yes" xml:space="preserve">
          <source>No compression, just archiving</source>
          <target state="translated">Никакого сжатия,просто архивирование</target>
        </trans-unit>
        <trans-unit id="6579f4713f1ca4f2cacddaf325e194df56d72c76" translate="yes" xml:space="preserve">
          <source>No documentation is generated for the following constructs, even if they have a documentation comment:</source>
          <target state="translated">Документация не генерируется для следующих конструкций,даже если они имеют комментарий к документации:</target>
        </trans-unit>
        <trans-unit id="c5f9dc057bfe284b0c9c0f7b4ca23ad4c81ff2b1" translate="yes" xml:space="preserve">
          <source>No errors get inadvertently ignored.</source>
          <target state="translated">Никакие ошибки не будут случайно проигнорированы.</target>
        </trans-unit>
        <trans-unit id="50aeb67eaf0b0cda9c958bef425109300bb895b8" translate="yes" xml:space="preserve">
          <source>No exceptions are thrown due to incorrect CSV.</source>
          <target state="translated">Исключения не делаются из-за неправильного CSV.</target>
        </trans-unit>
        <trans-unit id="dc51393e7f92e68cd01f568a57bc078ab0b1db70" translate="yes" xml:space="preserve">
          <source>No explicit casting of immutable objects to mutable.</source>
          <target state="translated">Нет явного приведения к мутациям непреложных объектов.</target>
        </trans-unit>
        <trans-unit id="e4d9d68fd7f6457d876881ca9bddb464171be02d" translate="yes" xml:space="preserve">
          <source>No explicit casting of mutable objects to immutable.</source>
          <target state="translated">Нет явного приведения мутирующих объектов к неизменяемым.</target>
        </trans-unit>
        <trans-unit id="775074d6faaec2b5829ecb6995107bffdb44ed81" translate="yes" xml:space="preserve">
          <source>No explicit casting of shared objects to thread local.</source>
          <target state="translated">Нет явного приведения общих объектов к локальному потоку.</target>
        </trans-unit>
        <trans-unit id="0117ad0eedc8f9fbd21fb52bc04392fa4d19b224" translate="yes" xml:space="preserve">
          <source>No explicit casting of thread local objects to shared.</source>
          <target state="translated">Отсутствует явное приведение локальных объектов потока к общему.</target>
        </trans-unit>
        <trans-unit id="ea0b61f64bab381eec1afb06029d67d731142c75" translate="yes" xml:space="preserve">
          <source>No immutables</source>
          <target state="translated">Нет неизменных</target>
        </trans-unit>
        <trans-unit id="c1cfcdaf8da9814719d81beadb47a10db90d633b" translate="yes" xml:space="preserve">
          <source>No longer used</source>
          <target state="translated">Больше не используется</target>
        </trans-unit>
        <trans-unit id="f2b30c37a539bfa2c82d0314aa5de0494ad94e1d" translate="yes" xml:space="preserve">
          <source>No longer used, kept as alias to Regex for backwards compatibility.</source>
          <target state="translated">Больше не используется,сохраняется как псевдоним Regex для обратной совместимости.</target>
        </trans-unit>
        <trans-unit id="00ef7d44f74673ea0171f0ade11b4f235bf2603b" translate="yes" xml:space="preserve">
          <source>No new scope is introduced, even if the</source>
          <target state="translated">Новые рамки не вводятся,даже если</target>
        </trans-unit>
        <trans-unit id="f181ddb7a18d67a4be3a457ae7b06e8eba4e6364" translate="yes" xml:space="preserve">
          <source>No pointer arithmetic (including pointer indexing).</source>
          <target state="translated">Нет арифметики с указателями (включая индексирование указателей).</target>
        </trans-unit>
        <trans-unit id="e48360ebcff22ce8f91aabe6500b37ca86c8ef0e" translate="yes" xml:space="preserve">
          <source>No taking the address of a local variable or function parameter.</source>
          <target state="translated">Не брать адрес локальной переменной или параметра функции.</target>
        </trans-unit>
        <trans-unit id="16d169fc62706e94837dca4e7304ed543a25d932" translate="yes" xml:space="preserve">
          <source>No-GC Functions</source>
          <target state="translated">Функции без ГК</target>
        </trans-unit>
        <trans-unit id="12e519130ae384b81c85660c8490969df2fb8431" translate="yes" xml:space="preserve">
          <source>No-GC functions are functions marked with the &lt;code&gt;@nogc&lt;/code&gt; attribute. Those functions do not allocate memory on the GC heap, through the following language features:</source>
          <target state="translated">Функции без GC - это функции, помеченные атрибутом &lt;code&gt;@nogc&lt;/code&gt; . Эти функции не выделяют память в куче GC с помощью следующих возможностей языка:</target>
        </trans-unit>
        <trans-unit id="0c64e8cc83777da3ceeb6f24324ae0cad20ddc48" translate="yes" xml:space="preserve">
          <source>No-GC functions cannot be closures.</source>
          <target state="translated">Функции No-GC не могут быть закрыты.</target>
        </trans-unit>
        <trans-unit id="e71ecc7f1b6436e6f38e1a5ba5a26ba864e8984e" translate="yes" xml:space="preserve">
          <source>No-GC functions cannot call functions that are not &lt;code&gt;@nogc&lt;/code&gt;.</source>
          <target state="translated">Функции без GC не могут вызывать функции, которые не являются &lt;code&gt;@nogc&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ea249cedbd757dbfa8a8d6da523734c90b706a5c" translate="yes" xml:space="preserve">
          <source>No-op.</source>
          <target state="translated">No-op.</target>
        </trans-unit>
        <trans-unit id="1f9e31c476e79b885710c0e54c00dae29e759873" translate="yes" xml:space="preserve">
          <source>No-seed version. The first element of &lt;code&gt;r&lt;/code&gt; is used as the seed's value.</source>
          <target state="translated">Версия без семян. Первый элемент &lt;code&gt;r&lt;/code&gt; используется как значение начального числа.</target>
        </trans-unit>
        <trans-unit id="2d2d6976f81cfe20333afbe24adc3861a20e45ae" translate="yes" xml:space="preserve">
          <source>No-seed version. The first element of &lt;code&gt;r&lt;/code&gt; is used as the seed's value. For each function &lt;code&gt;f&lt;/code&gt; in &lt;code&gt;fun&lt;/code&gt;, the corresponding seed type &lt;code&gt;S&lt;/code&gt; is &lt;code&gt;Unqual!(typeof(f(e, e)))&lt;/code&gt;, where &lt;code&gt;e&lt;/code&gt; is an element of &lt;code&gt;r&lt;/code&gt;: &lt;code&gt;ElementType!R&lt;/code&gt;. Once &lt;code&gt;S&lt;/code&gt; has been determined, then &lt;code&gt;S s = e;&lt;/code&gt; and &lt;code&gt;s = f(s, e);&lt;/code&gt; must both be legal.</source>
          <target state="translated">Версия без семян. Первый элемент &lt;code&gt;r&lt;/code&gt; используется как значение начального числа. Для каждой функции &lt;code&gt;f&lt;/code&gt; в &lt;code&gt;fun&lt;/code&gt; , то соответствующий тип семян &lt;code&gt;S&lt;/code&gt; является &lt;code&gt;Unqual!(typeof(f(e, e)))&lt;/code&gt; , Где &lt;code&gt;e&lt;/code&gt; является элементом &lt;code&gt;r&lt;/code&gt; : &lt;code&gt;ElementType!R&lt;/code&gt; . Как только &lt;code&gt;S&lt;/code&gt; определено, тогда &lt;code&gt;S s = e;&lt;/code&gt; и &lt;code&gt;s = f(s, e);&lt;/code&gt; оба должны быть законными.</target>
        </trans-unit>
        <trans-unit id="b0f4acc87a789952bfc1b197631323f519961850" translate="yes" xml:space="preserve">
          <source>Node to represent a version condition</source>
          <target state="translated">Узел для представления состояния версии</target>
        </trans-unit>
        <trans-unit id="b467c97e1e04e6dfe215b8ccc5a464d40fdfc31c" translate="yes" xml:space="preserve">
          <source>Nominally the result is the desired value of the cast operation, which will be forwarded as the result of the cast. For &lt;code&gt;Abort&lt;/code&gt;, the function never returns because it aborts the program.</source>
          <target state="translated">Номинально результатом является желаемое значение операции приведения, которое будет передано в результате приведения. Для &lt;code&gt;Abort&lt;/code&gt; функция никогда не возвращается, потому что она прерывает программу.</target>
        </trans-unit>
        <trans-unit id="11768937dad6c4d6650b30ee482657c917bafca3" translate="yes" xml:space="preserve">
          <source>Nominally the result is the desired value of the cast operation, which will be forwarded as the result of the cast. For &lt;code&gt;Throw&lt;/code&gt;, the function never returns because it throws an exception.</source>
          <target state="translated">Номинально результатом является желаемое значение операции приведения, которое будет передано в результате приведения. Для &lt;code&gt;Throw&lt;/code&gt; функция никогда не возвращается, потому что выдает исключение.</target>
        </trans-unit>
        <trans-unit id="1b2c041885adf1fc88ecec500a0190e9f4cf26cd" translate="yes" xml:space="preserve">
          <source>Nominally the result is the desired value of the operator, which will be forwarded as result. For &lt;code&gt;Abort&lt;/code&gt;, the function never returns because it aborts the program.</source>
          <target state="translated">Номинально результатом является желаемое значение оператора, которое будет передано как результат. Для &lt;code&gt;Abort&lt;/code&gt; функция никогда не возвращается, потому что она прерывает программу.</target>
        </trans-unit>
        <trans-unit id="058f4352276fbd832056c1654d0a5c83818f3abd" translate="yes" xml:space="preserve">
          <source>Nominally the result is the desired value of the operator, which will be forwarded as result. For &lt;code&gt;Throw&lt;/code&gt;, the function never returns because it throws an exception.</source>
          <target state="translated">Номинально результатом является желаемое значение оператора, которое будет передано как результат. Для &lt;code&gt;Throw&lt;/code&gt; функция никогда не возвращается, потому что выдает исключение.</target>
        </trans-unit>
        <trans-unit id="95ff8049ae0af803b72d929b70cdc7bd1428c808" translate="yes" xml:space="preserve">
          <source>Nominally the result is the desired value of the operator, which will be forwarded as result. For &lt;code&gt;Throw&lt;/code&gt;, the function never returns because it throws.</source>
          <target state="translated">Номинально результатом является желаемое значение оператора, которое будет передано как результат. Для &lt;code&gt;Throw&lt;/code&gt; функция никогда не возвращается, потому что она бросает.</target>
        </trans-unit>
        <trans-unit id="7f89b59a9068926b546bf9dc745b7cf2ad0322d0" translate="yes" xml:space="preserve">
          <source>Non-IEEE 128 bit Big-endian 'doubledouble' (eg PowerPC) has partial support</source>
          <target state="translated">Не-IEEE 128-битный Big-endian 'двойной' (например PowerPC)имеет частичную поддержку</target>
        </trans-unit>
        <trans-unit id="81fddc68dfa81833c1f14ca92fdbdf8790a22085" translate="yes" xml:space="preserve">
          <source>Non-allocating forward range option: &amp;Omicron;(&lt;code&gt;n^2&lt;/code&gt;) Non-allocating forward range option with custom &lt;code&gt;pred&lt;/code&gt;: &amp;Omicron;(&lt;code&gt;n^2&lt;/code&gt;) Allocating forward range option: amortized &amp;Omicron;(&lt;code&gt;r1.length&lt;/code&gt;) + &amp;Omicron;(&lt;code&gt;r2.length&lt;/code&gt;)</source>
          <target state="translated">Non-выделения опции вперед диапазона: О ( &lt;code&gt;n^2&lt;/code&gt; ) Non-выделения опции вперед диапазона с пользовательскими &lt;code&gt;pred&lt;/code&gt; : О ( &lt;code&gt;n^2&lt;/code&gt; ) Выделяя вариант вперед диапазон: амортизируется О ( &lt;code&gt;r1.length&lt;/code&gt; ) + О ( &lt;code&gt;r2.length&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="a578c05b9c2826b19b96d5e16a0ceb9b0ece04e0" translate="yes" xml:space="preserve">
          <source>Non-copyable structs can still be moved:</source>
          <target state="translated">Некопируемые структуры все еще можно перемещать:</target>
        </trans-unit>
        <trans-unit id="6a1e5ae49f7fbd3b1306db6c5fe5107b5dbc51c5" translate="yes" xml:space="preserve">
          <source>Non-forward input ranges are supported, but with limited semantics.</source>
          <target state="translated">Поддерживаются не форвардные диапазоны ввода,но с ограниченной семантикой.</target>
        </trans-unit>
        <trans-unit id="9d73b158c3cbb9c0c20029958a34f23570ec9b1c" translate="yes" xml:space="preserve">
          <source>Non-portable casts (eg, from &lt;code&gt;int[]&lt;/code&gt; to &lt;code&gt;float[]&lt;/code&gt;), including casts which depend on endianness, are not permitted. Casts between signed and unsigned types are permitted</source>
          <target state="translated">Непереносимые приведения (например, от &lt;code&gt;int[]&lt;/code&gt; к &lt;code&gt;float[]&lt;/code&gt; ), включая приведение, которые зависят от порядкового номера, не допускаются. Разрешены приведения между типами со знаком и без знака</target>
        </trans-unit>
        <trans-unit id="61e065b3de2ba702e71857963714ee2de3918409" translate="yes" xml:space="preserve">
          <source>Non-recoverable errors (such as assert failures) do not throw exceptions; instead, they end interpretation immediately.</source>
          <target state="translated">Неустранимые ошибки (такие как неудачные утверждения)не бросают исключений;вместо этого они немедленно прекращают интерпретацию.</target>
        </trans-unit>
        <trans-unit id="d74bfb7bba1e55d60fe9becbe7df81d0fef5ea9e" translate="yes" xml:space="preserve">
          <source>Non-shared static constructors and destructors are run whenever threads are created or destroyed, including the main thread.</source>
          <target state="translated">Неразделенные статические конструкторы и деструкторы запускаются всякий раз,когда создаются или разрушаются потоки,в том числе и главный поток.</target>
        </trans-unit>
        <trans-unit id="c605ebf3ce46a504feb4b640239e7ba60285c122" translate="yes" xml:space="preserve">
          <source>Non-shared static constructors and destructors are used to initialize and terminate thread local data.</source>
          <target state="translated">Для инициализации и завершения локальных данных потока используются неразделенные статические конструкторы и деструкторы.</target>
        </trans-unit>
        <trans-unit id="d96909cc07f8b70370f0c23c993424d8363fc715" translate="yes" xml:space="preserve">
          <source>Non-static &lt;a href=&quot;#nested&quot;&gt;function-nested D structs&lt;/a&gt;, which access the context of their enclosing scope, have an extra field.</source>
          <target state="translated">Нестатическая &lt;a href=&quot;#nested&quot;&gt;функция вложенного D Структура&lt;/a&gt; , которые получают доступ к контексту их области видимости, имеет дополнительное поле.</target>
        </trans-unit>
        <trans-unit id="b3b2dbc478b4150312eab6be4bc6d5c0decce954" translate="yes" xml:space="preserve">
          <source>Non-static member functions can have, in addition to the usual &lt;a href=&quot;function#FunctionAttribute&quot;&gt;&lt;i&gt;FunctionAttribute&lt;/i&gt;&lt;/a&gt;s, the attributes &lt;code&gt;const&lt;/code&gt;, &lt;code&gt;immutable&lt;/code&gt;, &lt;code&gt;shared&lt;/code&gt;, or &lt;code&gt;inout&lt;/code&gt;. These attributes apply to the hidden</source>
          <target state="translated">Нестатические функции-члены могут иметь, в дополнение к обычным атрибутам &lt;a href=&quot;function#FunctionAttribute&quot;&gt;&lt;i&gt;FunctionAttribute&lt;/i&gt;&lt;/a&gt; , атрибуты &lt;code&gt;const&lt;/code&gt; , &lt;code&gt;immutable&lt;/code&gt; , &lt;code&gt;shared&lt;/code&gt; или &lt;code&gt;inout&lt;/code&gt; . Эти атрибуты применяются к скрытому</target>
        </trans-unit>
        <trans-unit id="7a196514d4f0d0eafb3a4cd25af29fefa694ba14" translate="yes" xml:space="preserve">
          <source>Non-static member functions or static member functions with &lt;code&gt;Objective-C&lt;/code&gt; linkage have an extra hidden parameter called</source>
          <target state="translated">Нестатические функции-члены или статические функции-члены со связью &lt;code&gt;Objective-C&lt;/code&gt; имеют дополнительный скрытый параметр, называемый</target>
        </trans-unit>
        <trans-unit id="f3b4db56d91106facfca56b48e63a8bae5d8e3b2" translate="yes" xml:space="preserve">
          <source>Non-static nested classes work by containing an extra hidden member (called the context pointer) that is the frame pointer of the enclosing function if it is nested inside a function, or the &lt;code&gt;this&lt;/code&gt; of the enclosing class's instance if it is nested inside a class.</source>
          <target state="translated">Нестатические вложенные классы работают, содержащие дополнительный скрытый элемент ( так называемый указателем на контекст) , который является указателем кадра функции ограждающей , если он вложен внутри функции, или тому &lt;code&gt;this&lt;/code&gt; экземпляр класса приложения, если он вложен в классе ,</target>
        </trans-unit>
        <trans-unit id="3ea89d244aa398e61a240d02e563d9e920cc1cfb" translate="yes" xml:space="preserve">
          <source>Non-zero value means to use the global dns cache</source>
          <target state="translated">Ненулевое значение означает использование глобального кэша dns.</target>
        </trans-unit>
        <trans-unit id="1aafcdc0be4becd732b9a3ad04759d113484d426" translate="yes" xml:space="preserve">
          <source>NonEmptyStatement</source>
          <target state="translated">NonEmptyStatement</target>
        </trans-unit>
        <trans-unit id="d42bc2090abcd86d6431b50ed9070e084b02b130" translate="yes" xml:space="preserve">
          <source>NonVoidInitializer</source>
          <target state="translated">NonVoidInitializer</target>
        </trans-unit>
        <trans-unit id="1179ca48470076675d205adcff73d6d61f15f34a" translate="yes" xml:space="preserve">
          <source>Noncharacter_Code_Point</source>
          <target state="translated">Noncharacter_Code_Point</target>
        </trans-unit>
        <trans-unit id="36dc33e9395aef9881b08cdb0dd1daef6114c736" translate="yes" xml:space="preserve">
          <source>Nonspacing_Mark</source>
          <target state="translated">Nonspacing_Mark</target>
        </trans-unit>
        <trans-unit id="429802f981d76022956f28768dab516f8772bd42" translate="yes" xml:space="preserve">
          <source>Nonstandard function that minimizes the memory usage of the freelist by freeing each element in turn. Defined only if &lt;code&gt;ParentAllocator&lt;/code&gt; defines &lt;code&gt;deallocate&lt;/code&gt;.</source>
          <target state="translated">Нестандартная функция, которая сводит к минимуму использование памяти freelist, освобождая каждый элемент по очереди. Определяется, только если &lt;code&gt;ParentAllocator&lt;/code&gt; определяет &lt;code&gt;deallocate&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="57b001c8ba41b4ad340a0d783255e54cfd3c3bce" translate="yes" xml:space="preserve">
          <source>Nonstandard function that minimizes the memory usage of the freelist by freeing each element in turn. Defined only if &lt;code&gt;ParentAllocator&lt;/code&gt; defines &lt;code&gt;deallocate&lt;/code&gt;. &lt;code&gt;FreeList!(0, unbounded)&lt;/code&gt; does not have this function.</source>
          <target state="translated">Нестандартная функция, которая сводит к минимуму использование памяти freelist, освобождая каждый элемент по очереди. Определяется, только если &lt;code&gt;ParentAllocator&lt;/code&gt; определяет &lt;code&gt;deallocate&lt;/code&gt; . &lt;code&gt;FreeList!(0, unbounded)&lt;/code&gt; не имеет этой функции.</target>
        </trans-unit>
        <trans-unit id="e3b494dd74c014fe5ba2aa220f7424fbd28b5b50" translate="yes" xml:space="preserve">
          <source>Nonstandard function that returns the bytes available for allocation.</source>
          <target state="translated">Нестандартная функция,которая возвращает байты,доступные для распределения.</target>
        </trans-unit>
        <trans-unit id="1b4df24b03c214a98bd7860dd19d472f2804640a" translate="yes" xml:space="preserve">
          <source>Nonstandard property that returns bytes available for allocation.</source>
          <target state="translated">Нестандартное свойство,которое возвращает байты,доступные для распределения.</target>
        </trans-unit>
        <trans-unit id="3412d111007fbeb4dae75cdce13533138e69acc1" translate="yes" xml:space="preserve">
          <source>Nonzero for on.</source>
          <target state="translated">Нулевой для включения.</target>
        </trans-unit>
        <trans-unit id="46931da5935530c974e152c2caa633195ab79b11" translate="yes" xml:space="preserve">
          <source>Normal distribution function.</source>
          <target state="translated">Функция нормального распределения.</target>
        </trans-unit>
        <trans-unit id="b8c54e5e1e867a54e9d75697c450f4be835f910e" translate="yes" xml:space="preserve">
          <source>Normalization</source>
          <target state="translated">Normalization</target>
        </trans-unit>
        <trans-unit id="80b6124577fc42c3b7c1e6bbf615255e8605397d" translate="yes" xml:space="preserve">
          <source>Normalization Form C (NFC): The canonical composition of the &lt;a href=&quot;#Canonical%20decomposition&quot;&gt;canonical decomposition&lt;/a&gt; of a coded character sequence.</source>
          <target state="translated">Форма нормализации C (NFC): каноническая композиция &lt;a href=&quot;#Canonical%20decomposition&quot;&gt;канонического разложения&lt;/a&gt; кодированной последовательности символов.</target>
        </trans-unit>
        <trans-unit id="0418119af85721c4087c8e6f6b3159c547d399f2" translate="yes" xml:space="preserve">
          <source>Normalization Form D (NFD): The &lt;a href=&quot;#Canonical%20decomposition&quot;&gt; canonical decomposition&lt;/a&gt; of a character sequence.</source>
          <target state="translated">Форма нормализации D (NFD): &lt;a href=&quot;#Canonical%20decomposition&quot;&gt;каноническое разложение&lt;/a&gt; последовательности символов.</target>
        </trans-unit>
        <trans-unit id="138b8bb2fbf469c965274f2588f5cf860f8e57f2" translate="yes" xml:space="preserve">
          <source>Normalization Form KC (NFKC): The canonical composition of the &lt;a href=&quot;#Compatibility%20decomposition&quot;&gt; compatibility decomposition&lt;/a&gt; of a character sequence</source>
          <target state="translated">Форма нормализации KC (NFKC): каноническая композиция &lt;a href=&quot;#Compatibility%20decomposition&quot;&gt;разложения совместимости&lt;/a&gt; последовательности символов</target>
        </trans-unit>
        <trans-unit id="031a463d0092b90e5f527a2e15b37690c30120f9" translate="yes" xml:space="preserve">
          <source>Normalization Form KD (NFKD): The &lt;a href=&quot;#Compatibility%20decomposition&quot;&gt; compatibility decomposition&lt;/a&gt; of a character sequence.</source>
          <target state="translated">Форма нормализации KD (NFKD): &lt;a href=&quot;#Compatibility%20decomposition&quot;&gt;Декомпозиция совместимости&lt;/a&gt; символьной последовательности.</target>
        </trans-unit>
        <trans-unit id="9fc9758024af9fe044b26fa95babda5e385e2a92" translate="yes" xml:space="preserve">
          <source>Normalize a path by resolving current/parent directory symbols (&lt;code&gt;&quot;.&quot;&lt;/code&gt; and &lt;code&gt;&quot;..&quot;&lt;/code&gt;) and removing superfluous directory separators. It will return &quot;.&quot; if the path leads to the starting directory. On Windows, slashes are replaced with backslashes.</source>
          <target state="translated">Нормализуйте путь, разрешив символы текущего / родительского каталога ( &lt;code&gt;&quot;.&quot;&lt;/code&gt; И &lt;code&gt;&quot;..&quot;&lt;/code&gt; ) и удалив лишние разделители каталогов. Он вернется &quot;.&quot; если путь ведет к начальному каталогу. В Windows косая черта заменяется обратной косой чертой.</target>
        </trans-unit>
        <trans-unit id="8001671105bf59f11468e49232cdcf7930cadfe8" translate="yes" xml:space="preserve">
          <source>Normalize path by turning forward slashes into backslashes</source>
          <target state="translated">Нормализуйте путь,поворачивая передние косынки в обратные.</target>
        </trans-unit>
        <trans-unit id="9e6f99e9fe995a304393f1d99580068a9cbfde06" translate="yes" xml:space="preserve">
          <source>Normalizes values in &lt;code&gt;range&lt;/code&gt; by multiplying each element with a number chosen such that values sum up to &lt;code&gt;sum&lt;/code&gt;. If elements in &lt;code&gt;range&lt;/code&gt; sum to zero, assigns &lt;code&gt;sum / range.length&lt;/code&gt; to all. Normalization makes sense only if all elements in &lt;code&gt;range&lt;/code&gt; are positive. &lt;code&gt;normalize&lt;/code&gt; assumes that is the case without checking it.</source>
          <target state="translated">Нормализует значения в &lt;code&gt;range&lt;/code&gt; , умножая каждый элемент на число, выбранное таким образом, чтобы значения суммировались до &lt;code&gt;sum&lt;/code&gt; . Если элементы в &lt;code&gt;range&lt;/code&gt; суммируют до нуля, присваивает &lt;code&gt;sum / range.length&lt;/code&gt; всем. Нормализация имеет смысл, только если все элементы в &lt;code&gt;range&lt;/code&gt; являются положительными. &lt;code&gt;normalize&lt;/code&gt; предполагает, что это так, не проверяя его.</target>
        </trans-unit>
        <trans-unit id="661d479c1dc56a2c85105c1a989fb99e1258f06c" translate="yes" xml:space="preserve">
          <source>Normally it is not necessary to do this manually, as &lt;a href=&quot;std_stdio#File&quot;&gt;&lt;code&gt;std.stdio.File&lt;/code&gt;&lt;/a&gt; objects are automatically closed when there are no more references to them.</source>
          <target state="translated">Обычно это не нужно делать вручную, поскольку объекты &lt;a href=&quot;std_stdio#File&quot;&gt; &lt;code&gt;std.stdio.File&lt;/code&gt; &lt;/a&gt; автоматически закрываются, когда на них больше нет ссылок.</target>
        </trans-unit>
        <trans-unit id="adfa9c0b301a56712a5c4c9dfdc57e862274cd5a" translate="yes" xml:space="preserve">
          <source>Normally the entire range is iterated. If partial iteration (early stopping) is desired, &lt;code&gt;fun&lt;/code&gt; needs to return a value of type &lt;a href=&quot;std_typecons#Flag&quot;&gt;&lt;code&gt;std.typecons.Flag&lt;/code&gt;&lt;/a&gt;&lt;code&gt;!&quot;each&quot;&lt;/code&gt; (&lt;code&gt;Yes.each&lt;/code&gt; to continue iteration, or &lt;code&gt;No.each&lt;/code&gt; to stop iteration).</source>
          <target state="translated">Обычно весь диапазон повторяется. Если требуется частичная итерация (ранняя остановка), &lt;code&gt;fun&lt;/code&gt; должна возвращать значение типа &lt;a href=&quot;std_typecons#Flag&quot;&gt; &lt;code&gt;std.typecons.Flag&lt;/code&gt; &lt;/a&gt; &lt;code&gt;!&quot;each&quot;&lt;/code&gt; &lt;code&gt;Yes.each&lt;/code&gt; &quot; ( Yes.each, чтобы продолжить итерацию, или &lt;code&gt;No.each&lt;/code&gt; , чтобы остановить итерацию).</target>
        </trans-unit>
        <trans-unit id="29618eee34797a5a2f7a6b8c7471e6891e8c6f72" translate="yes" xml:space="preserve">
          <source>Normally this will be a representation of some substitution character, such as U+FFFD or '?'.</source>
          <target state="translated">Обычно это будет представление какого-то символа подстановки,например,U+FFFD или '?'.</target>
        </trans-unit>
        <trans-unit id="616330b39a091db71ac93a24fa21496f28c24b0e" translate="yes" xml:space="preserve">
          <source>Normally, all threads other than the collector thread must be halted while the collection is in progress.</source>
          <target state="translated">Обычно все резьбы,кроме резьбы коллектора,должны быть остановлены во время сбора.</target>
        </trans-unit>
        <trans-unit id="d2cdadd59c9faa6f566843af471118acedd006a9" translate="yes" xml:space="preserve">
          <source>Normally, variables are initialized either with an explicit &lt;a href=&quot;#Initializer&quot;&gt;&lt;i&gt;Initializer&lt;/i&gt;&lt;/a&gt; or are set to the default value for the type of the variable. If the</source>
          <target state="translated">Обычно переменные инициализируются либо с помощью явного &lt;a href=&quot;#Initializer&quot;&gt;&lt;i&gt;инициализатора,&lt;/i&gt;&lt;/a&gt; либо для них устанавливается значение по умолчанию для типа переменной. Если</target>
        </trans-unit>
        <trans-unit id="b33c1ae2bc162cf47c63d7dd7001c6d16ef1d3ab" translate="yes" xml:space="preserve">
          <source>Not &lt;code&gt;null&lt;/code&gt; iff the &lt;code&gt;static foreach&lt;/code&gt; is over a range. Exactly one of the &lt;code&gt;aggrefe&lt;/code&gt; and &lt;code&gt;rangefe&lt;/code&gt; fields is not null. See &lt;code&gt;aggrfe&lt;/code&gt; field for more details.</source>
          <target state="translated">Не &lt;code&gt;null&lt;/code&gt; если &lt;code&gt;static foreach&lt;/code&gt; находится за пределами диапазона. Ровно одно из полей &lt;code&gt;aggrefe&lt;/code&gt; и &lt;code&gt;rangefe&lt;/code&gt; не является нулевым. Смотрите поле &lt;code&gt;aggrfe&lt;/code&gt; для более подробной информации.</target>
        </trans-unit>
        <trans-unit id="53a3a9472c8c6ede9ddff52aba2954163c06cc47" translate="yes" xml:space="preserve">
          <source>Not &lt;code&gt;null&lt;/code&gt; iff the &lt;code&gt;static foreach&lt;/code&gt; is over an aggregate. In this case, it contains the corresponding ForeachStatement. For StaticForeachDeclaration, the body is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">Не &lt;code&gt;null&lt;/code&gt; если &lt;code&gt;static foreach&lt;/code&gt; находится над совокупностью. В этом случае он содержит соответствующий ForeachStatement. Для StaticForeachDeclaration тело является &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="97057bfa10cf793926cfd87b11566cdc01e1cb3c" translate="yes" xml:space="preserve">
          <source>Not all NFS implementations correctly implement file locking.</source>
          <target state="translated">Не во всех реализациях NFS корректно реализована блокировка файлов.</target>
        </trans-unit>
        <trans-unit id="01a3e29cd96b83aac5cafcd85558e38b6683f44f" translate="yes" xml:space="preserve">
          <source>Not currently implemented - rounds twice.</source>
          <target state="translated">В настоящее время не реализуется-раунды дважды.</target>
        </trans-unit>
        <trans-unit id="8c8eaa281c14ceaa91826c9250d9cfd83ad9d40f" translate="yes" xml:space="preserve">
          <source>Not everything can be directly aliased. An alias cannot be declared of - for example - a literal:</source>
          <target state="translated">Не все может быть прямо указано под псевдонимом.Псевдоним не может быть объявлен,например,буквально:</target>
        </trans-unit>
        <trans-unit id="4fb931cd85c14975fa02ea3e36a9938b47df2d71" translate="yes" xml:space="preserve">
          <source>Not implemented for Microsoft C Runtime</source>
          <target state="translated">Не реализовано для Microsoft C Runtime</target>
        </trans-unit>
        <trans-unit id="d1cd7a5726d3f1a764ca2fc961231d11bd265912" translate="yes" xml:space="preserve">
          <source>Not only functions, but also instantiated class and struct types can become nested via implicitly captured context.</source>
          <target state="translated">Не только функции,но и инстанцированные типы классов и структур могут быть вложены через неявно захваченный контекст.</target>
        </trans-unit>
        <trans-unit id="370f69da05a7f1c2f2916dfb7540ce12b5251753" translate="yes" xml:space="preserve">
          <source>Not sequenced. Corresponds to &lt;a href=&quot;https://llvm.org/docs/Atomics.html#monotonic&quot;&gt;LLVM AtomicOrdering.Monotonic&lt;/a&gt; and C++11/C11 &lt;code&gt;memory_order_relaxed&lt;/code&gt;.</source>
          <target state="translated">Не упорядочено. Соответствует &lt;a href=&quot;https://llvm.org/docs/Atomics.html#monotonic&quot;&gt;LLVM AtomicOrdering.Monotonic&lt;/a&gt; и C ++ 11 / C11 &lt;code&gt;memory_order_relaxed&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="72a8611375e3228ee97719b4aa70e9a3728d46c5" translate="yes" xml:space="preserve">
          <source>Not used</source>
          <target state="translated">Не использованный</target>
        </trans-unit>
        <trans-unit id="82ecf8fc619ffac944a052c932297b27a382324f" translate="yes" xml:space="preserve">
          <source>Notably absent from the list of overloaded unary operators is the ! logical negation operator. More obscurely absent is a unary operator to convert to a bool result. Instead, these are covered by a rewrite to:</source>
          <target state="translated">Примечательно,что в списке перегруженных унарных операторов отсутствует логический оператор-негатив.Более непонятно отсутствие унарного оператора для преобразования в результат bool.Вместо этого они покрываются перезаписью в:</target>
        </trans-unit>
        <trans-unit id="2c924e3088204ee77ba681f72be3444357932fca" translate="yes" xml:space="preserve">
          <source>Note</source>
          <target state="translated">Note</target>
        </trans-unit>
        <trans-unit id="d0ac0232e6dce0f6fe6e5dd1148acf7178ea46fa" translate="yes" xml:space="preserve">
          <source>Note how in the above example, the constructor is not bindable and is instead disabled on the D side; an alternative would be to reimplement the constructor in D. See the &lt;a href=&quot;cpp_interface#lifetime-management&quot;&gt;section below on lifetime management&lt;/a&gt; for more information.</source>
          <target state="translated">Обратите внимание, что в приведенном выше примере конструктор не является привязываемым и вместо этого отключен на стороне D; альтернативой было бы переопределить конструктор в D. Для получения дополнительной информации см. &lt;a href=&quot;cpp_interface#lifetime-management&quot;&gt;раздел ниже об управлении временем жизни&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d63d9fe9d0db7f9d24974a2fa9eef608eb74e8f0" translate="yes" xml:space="preserve">
          <source>Note how the gaps in matching are simply ignored, for example (&lt;code&gt;&quot;Hello&quot;, &quot;new&quot;&lt;/code&gt;) is deemed as good a match as (&lt;code&gt;&quot;new&quot;, &quot;world&quot;&lt;/code&gt;). This may be too permissive for some applications. To eliminate gapped matches entirely, use &lt;code&gt;lambda = 0&lt;/code&gt;:</source>
          <target state="translated">Обратите внимание, что пропуски в сопоставлении просто игнорируются, например ( &lt;code&gt;&quot;Hello&quot;, &quot;new&quot;&lt;/code&gt; ) считается таким же хорошим соответствием, как ( &lt;code&gt;&quot;new&quot;, &quot;world&quot;&lt;/code&gt; ). Это может быть слишком допустимым для некоторых приложений. Чтобы полностью устранить пробелы, используйте &lt;code&gt;lambda = 0&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="a1e8204a558e9a55cf2fa37f85f947f27510f23e" translate="yes" xml:space="preserve">
          <source>Note however that you need to mark the &lt;b&gt;mixin&lt;/b&gt; line with at least a minimal (i.e. just &lt;b&gt;///&lt;/b&gt;) DDoc comment if you want the mixed-in constructors to be documented in the newly created Exception subclass.</source>
          <target state="translated">Однако обратите внимание, что вам нужно пометить строку &lt;b&gt;mixin&lt;/b&gt; как минимум минимальным (т.е. просто &lt;b&gt;///&lt;/b&gt; ) комментарием DDoc, если вы хотите, чтобы смешанные конструкторы были документированы во вновь созданном подклассе Exception.</target>
        </trans-unit>
        <trans-unit id="49782e4f0e6f78442cd5999d6960bb6410f594b1" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;expression#Expression&quot;&gt;&lt;i&gt;Expression&lt;/i&gt;&lt;/a&gt; only gets evaluated once and is not copied. The with statement does not change what &lt;code&gt;this&lt;/code&gt; or &lt;code&gt;super&lt;/code&gt; refer to.</source>
          <target state="translated">Обратите внимание, что &lt;a href=&quot;expression#Expression&quot;&gt;&lt;i&gt;выражение&lt;/i&gt;&lt;/a&gt; выражается только один раз и не копируется. Оператор with не меняет того, на что &lt;code&gt;this&lt;/code&gt; или &lt;code&gt;super&lt;/code&gt; ссылаются.</target>
        </trans-unit>
        <trans-unit id="e4659f73d3ae58eed0197c3a42a85e74bfb19d3b" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;SpanMode.breadth&lt;/code&gt; will not result in all directory members occurring before any subdirectory members, i.e. it is not true &lt;a href=&quot;https://en.wikipedia.org/wiki/Tree_traversal#Breadth-first_search&quot;&gt; breadth-first traversal&lt;/a&gt;.</source>
          <target state="translated">Обратите внимание, что &lt;code&gt;SpanMode.breadth&lt;/code&gt; не приведет к тому, что все члены каталога появятся перед любыми членами подкаталога, то есть это не настоящий &lt;a href=&quot;https://en.wikipedia.org/wiki/Tree_traversal#Breadth-first_search&quot;&gt;обход в ширину&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="42e0aef8adc72b9023bfd746db5bfa57d6852029" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;extern(C)&lt;/code&gt; can be provided for all types of declarations, including &lt;code&gt;struct&lt;/code&gt; or &lt;code&gt;class&lt;/code&gt;, even though there is no corresponding match on the &lt;code&gt;C&lt;/code&gt; side. In that case, the attribute is ignored. This behavior applies for nested functions and nested variables as well. However, for &lt;code&gt;static&lt;/code&gt; member methods and &lt;code&gt;static&lt;/code&gt; nested functions, adding &lt;code&gt;extern(C)&lt;/code&gt; will change the calling convention, but not the mangling.</source>
          <target state="translated">Обратите внимание, что &lt;code&gt;extern(C)&lt;/code&gt; может быть предоставлен для всех типов объявлений, включая &lt;code&gt;struct&lt;/code&gt; или &lt;code&gt;class&lt;/code&gt; , даже если на стороне &lt;code&gt;C&lt;/code&gt; нет соответствующего соответствия . В этом случае атрибут игнорируется. Такое поведение применимо и для вложенных функций и вложенных переменных. Однако для &lt;code&gt;static&lt;/code&gt; методов-членов и &lt;code&gt;static&lt;/code&gt; вложенных функций добавление &lt;code&gt;extern(C)&lt;/code&gt; изменит соглашение о вызовах, но не искажение.</target>
        </trans-unit>
        <trans-unit id="c694f9520df240fcfb4f1d45e61d464f651b858d" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;length&lt;/code&gt; is an optional primitive as no range must implement it. Some ranges do not store their length explicitly, some cannot compute it without actually exhausting the range (e.g. socket streams), and some other ranges may be infinite.</source>
          <target state="translated">Обратите внимание, что &lt;code&gt;length&lt;/code&gt; является необязательным примитивом, поскольку ни один диапазон не должен его реализовывать. Некоторые диапазоны не хранят свою длину явно, некоторые не могут вычислить ее без фактического исчерпания диапазона (например, потоков сокетов), а некоторые другие диапазоны могут быть бесконечными.</target>
        </trans-unit>
        <trans-unit id="1985cc6351c47a8eb8f5d167c16f6d5887181cf3" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;make&lt;/code&gt; can infer the element type from the given arguments.</source>
          <target state="translated">Обратите внимание, что &lt;code&gt;make&lt;/code&gt; может вывести тип элемента из заданных аргументов.</target>
        </trans-unit>
        <trans-unit id="0d177ff7ae98932b810bf22e27225c171a711978" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;opCast&lt;/code&gt; is only ever used with an explicit &lt;code&gt;cast&lt;/code&gt; expression, except in the case of boolean operations (see next section)</source>
          <target state="translated">Обратите внимание , что &lt;code&gt;opCast&lt;/code&gt; только когда - либо использовали с явной &lt;code&gt;cast&lt;/code&gt; выражения, за исключением случая булевых операций (смотрите следующий раздел)</target>
        </trans-unit>
        <trans-unit id="0819f08e5482b36a26eff5fe36779d0358954a41" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;opCmp&lt;/code&gt; is only used for the inequality operators; expressions like &lt;code&gt;a == b&lt;/code&gt; always uses &lt;code&gt;opEquals&lt;/code&gt;. If &lt;code&gt;opCmp&lt;/code&gt; is defined but &lt;code&gt;opEquals&lt;/code&gt; isn't, the compiler will supply a default version of &lt;code&gt;opEquals&lt;/code&gt; that performs member-wise comparison. If this member-wise comparison is not consistent with the user-defined &lt;code&gt;opCmp&lt;/code&gt;, then it is up to the programmer to supply an appropriate version of &lt;code&gt;opEquals&lt;/code&gt;. Otherwise, inequalities like &lt;code&gt;a &amp;lt;= b&lt;/code&gt; will behave inconsistently with equalities like &lt;code&gt;a == b&lt;/code&gt;.</source>
          <target state="translated">Обратите внимание, что &lt;code&gt;opCmp&lt;/code&gt; используется только для операторов неравенства; выражения типа &lt;code&gt;a == b&lt;/code&gt; всегда используют &lt;code&gt;opEquals&lt;/code&gt; . Если &lt;code&gt;opCmp&lt;/code&gt; определен, но &lt;code&gt;opEquals&lt;/code&gt; нет, компилятор предоставит версию &lt;code&gt;opEquals&lt;/code&gt; по умолчанию, которая выполняет сравнение по элементам. Если это сравнение по элементам не согласуется с пользовательским &lt;code&gt;opCmp&lt;/code&gt; , то программист должен предоставить соответствующую версию &lt;code&gt;opEquals&lt;/code&gt; . В противном случае неравенства, такие как &lt;code&gt;a &amp;lt;= b&lt;/code&gt; будут вести себя несовместимо с равенствами, такими как &lt;code&gt;a == b&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1bdba074265129732a88d63db9be3f0813532fc0" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;opDollar!i&lt;/code&gt; is only evaluated once for each &lt;code&gt;i&lt;/code&gt; where &lt;code&gt;$&lt;/code&gt; occurs in the corresponding position in the indexing operation. Thus, an expression like &lt;code&gt;arr[$-sqrt($), 0, $-1]&lt;/code&gt; has the effect of:</source>
          <target state="translated">Обратите внимание, что &lt;code&gt;opDollar!i&lt;/code&gt; вычисляется только один раз для каждого &lt;code&gt;i&lt;/code&gt; , где &lt;code&gt;$&lt;/code&gt; находится в соответствующей позиции в операции индексации. Таким образом, выражение типа &lt;code&gt;arr[$-sqrt($), 0, $-1]&lt;/code&gt; имеет эффект:</target>
        </trans-unit>
        <trans-unit id="d28a332cf4afd40dd7792fd4da1375ef4f81f0a1" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;opIn&lt;/code&gt; and &lt;code&gt;opIn_r&lt;/code&gt; have been deprecated in favor of &lt;code&gt;opBinary!&quot;in&quot;&lt;/code&gt; and &lt;code&gt;opBinaryRight!&quot;in&quot;&lt;/code&gt; respectively.</source>
          <target state="translated">Обратите внимание, что &lt;code&gt;opIn&lt;/code&gt; и &lt;code&gt;opIn_r&lt;/code&gt; устарели в пользу &lt;code&gt;opBinary!&quot;in&quot;&lt;/code&gt; &lt;code&gt;opBinaryRight!&quot;in&quot;&lt;/code&gt; &quot; и opBinaryRight! &quot;In&quot; соответственно.</target>
        </trans-unit>
        <trans-unit id="9fe998aedd3f2332b372e13ad892064966a05a40" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;p[0 .. sz]&lt;/code&gt; is treated as an opaque range of memory assumed to be suitably managed by the caller. In particular, if p points into a GC-managed memory block, addRange does</source>
          <target state="translated">Обратите внимание, что &lt;code&gt;p[0 .. sz]&lt;/code&gt; рассматривается как непрозрачный диапазон памяти, который, как предполагается, соответствующим образом управляется вызывающей стороной. В частности, если p указывает на блок памяти, управляемый GC, addRange делает</target>
        </trans-unit>
        <trans-unit id="446697cde3fce65ea1af249f991e067ee7a7126c" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;remove&lt;/code&gt; does not change the length of the original range directly; instead, it returns the shortened range. If its return value is not assigned to the original range, the original range will retain its original length, though its contents will have changed:</source>
          <target state="translated">Обратите внимание, что &lt;code&gt;remove&lt;/code&gt; не изменяет длину исходного диапазона напрямую; вместо этого он возвращает сокращенный диапазон. Если его возвращаемое значение не назначено исходному диапазону, исходный диапазон сохранит свою первоначальную длину, хотя его содержимое будет изменено:</target>
        </trans-unit>
        <trans-unit id="bd79b3c280c7d264b68b6cb7886d544b94d51de2" translate="yes" xml:space="preserve">
          <source>Note that DDoc comments may embed raw HTML, including &amp;lt;script&amp;gt; tags. Be careful when publishing or distributing rendered DDoc HTML generated from untrusted sources, as this may allow &lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-site_scripting&quot;&gt; cross-site scripting&lt;/a&gt;.</source>
          <target state="translated">Обратите внимание, что комментарии DDoc могут включать необработанный HTML, включая теги &amp;lt;script&amp;gt;. Будьте осторожны при публикации или распространении визуализированного HTML-кода DDoc, созданного из ненадежных источников, так как это может разрешить &lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-site_scripting&quot;&gt;межсайтовый скриптинг&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0036754838cdb2ff3f71827ebae24962a2f81ac6" translate="yes" xml:space="preserve">
          <source>Note that a lone &lt;code&gt;extern&lt;/code&gt; declaration is used as a &lt;a href=&quot;declaration#extern&quot;&gt;storage class&lt;/a&gt;.</source>
          <target state="translated">Обратите внимание , что одинокий &lt;code&gt;extern&lt;/code&gt; декларация используется в качестве &lt;a href=&quot;declaration#extern&quot;&gt;класса для хранения&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d2f839e70486c3b3c3b2b7c5e6ccf35d0c885cd8" translate="yes" xml:space="preserve">
          <source>Note that all instantiations used in D code must be provided by linking to C++ object code or shared libraries containing the instantiations.</source>
          <target state="translated">Обратите внимание,что все инстанцинации,используемые в D-коде,должны предоставляться путем связывания с объектным кодом C++или общими библиотеками,содержащими эти инстанцинации.</target>
        </trans-unit>
        <trans-unit id="115633c56a2153ab4afb3286ea8d9b5f88ac33a5" translate="yes" xml:space="preserve">
          <source>Note that any &lt;a href=&quot;expression#FunctionLiteral&quot;&gt;&lt;i&gt;FunctionLiteral&lt;/i&gt;&lt;/a&gt; should be inlined when used in its declaration scope.</source>
          <target state="translated">Обратите внимание, что любой &lt;a href=&quot;expression#FunctionLiteral&quot;&gt;&lt;i&gt;FunctionLiteral&lt;/i&gt;&lt;/a&gt; должен быть встроен при использовании в своей области объявления.</target>
        </trans-unit>
        <trans-unit id="912ae4118da5ae88c104ee54cbc7ed752a73a626" translate="yes" xml:space="preserve">
          <source>Note that because &lt;a href=&quot;#SysTime&quot;&gt;&lt;code&gt;SysTime&lt;/code&gt;&lt;/a&gt; does not currently support having a second value of 60 (as is sometimes done for leap seconds), if the date-time value does have a value of 60 for the seconds, it is treated as 59.</source>
          <target state="translated">Обратите внимание, что поскольку &lt;a href=&quot;#SysTime&quot;&gt; &lt;code&gt;SysTime&lt;/code&gt; в&lt;/a&gt; настоящее время не поддерживает наличие второго значения 60 (как это иногда делается для високосных секунд), если значение даты-времени имеет значение 60 для секунд, оно рассматривается как 59.</target>
        </trans-unit>
        <trans-unit id="f6dc1eb334587071e774c1938dbe1cdce303845a" translate="yes" xml:space="preserve">
          <source>Note that built-in comparison operators operate on a &lt;a href=&quot;http://www.unicode.org/glossary/#code_unit&quot;&gt;code unit&lt;/a&gt; basis. The end result for valid strings is the same as that of &lt;a href=&quot;http://www.unicode.org/glossary/#code_point&quot;&gt;code point&lt;/a&gt; for &lt;a href=&quot;http://www.unicode.org/glossary/#code_point&quot;&gt;code point&lt;/a&gt; comparison as long as both strings are in the same &lt;a href=&quot;http://www.unicode.org/glossary/#normalization_form&quot;&gt;normalization form&lt;/a&gt;. Since normalization is a costly operation not suitable for language primitives it's assumed to be enforced by the user.</source>
          <target state="translated">Обратите внимание, что встроенные операторы сравнения работают на основе &lt;a href=&quot;http://www.unicode.org/glossary/#code_unit&quot;&gt;единиц кода&lt;/a&gt; . Конечный результат для допустимых строк такой же, как и для &lt;a href=&quot;http://www.unicode.org/glossary/#code_point&quot;&gt;кодовой точки&lt;/a&gt; для сравнения &lt;a href=&quot;http://www.unicode.org/glossary/#code_point&quot;&gt;кодовой точки,&lt;/a&gt; если обе строки находятся в одной и той же &lt;a href=&quot;http://www.unicode.org/glossary/#normalization_form&quot;&gt;форме нормализации&lt;/a&gt; . Поскольку нормализация является дорогостоящей операцией, не подходящей для языковых примитивов, предполагается, что она выполняется пользователем.</target>
        </trans-unit>
        <trans-unit id="9b28b1e383cdef82230e59abe072f131bbfb679e" translate="yes" xml:space="preserve">
          <source>Note that by default an import expression will not compile unless you pass one or more paths via the &lt;b&gt;-J&lt;/b&gt; switch. This tells the compiler where it should look for the files to import. This is a security feature.</source>
          <target state="translated">Обратите внимание, что по умолчанию выражение импорта не будет компилироваться, если вы не передадите один или несколько путей через ключ &lt;b&gt;-J&lt;/b&gt; . Это говорит компилятору, где он должен искать файлы для импорта. Это функция безопасности.</target>
        </trans-unit>
        <trans-unit id="f443bcce9cbaf4b849f4fec4e4d01fac263bc259" translate="yes" xml:space="preserve">
          <source>Note that casting away a const qualifier and then mutating is undefined behavior, too, even when the referenced data is mutable. This is so that compilers and programmers can make assumptions based on const alone. For example, here it may be assumed that &lt;code&gt;f&lt;/code&gt; does not alter &lt;code&gt;x&lt;/code&gt;:</source>
          <target state="translated">Обратите внимание, что отбрасывание квалификатора const и последующее изменение - это тоже неопределенное поведение, даже когда данные, на которые ссылаются, являются изменяемыми. Это сделано для того, чтобы компиляторы и программисты могли делать предположения только на основе const. Например, здесь можно предположить, что &lt;code&gt;f&lt;/code&gt; не меняет &lt;code&gt;x&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="a47b32f03830e6e76bd154f4549ffa1d22b1729d" translate="yes" xml:space="preserve">
          <source>Note that dimensions and indices appear in opposite orders. Dimensions in the &lt;a href=&quot;#declarations&quot;&gt;declaration&lt;/a&gt; are read right to left whereas indices are read left to right:</source>
          <target state="translated">Обратите внимание, что размеры и индексы отображаются в противоположных порядках. Размеры в &lt;a href=&quot;#declarations&quot;&gt;объявлении&lt;/a&gt; читаются справа налево, а индексы читаются слева направо:</target>
        </trans-unit>
        <trans-unit id="51822d7a0b3604134aaf4375e4432a320cf932bc" translate="yes" xml:space="preserve">
          <source>Note that directory separators and dots don't stop a meta-character from matching further portions of the path.</source>
          <target state="translated">Обратите внимание,что разделители каталогов и точки не останавливают мета-символ от соответствия дальнейшим частям пути.</target>
        </trans-unit>
        <trans-unit id="8e6cafb39971b4ab5ce4fa0e09eee1340357d767" translate="yes" xml:space="preserve">
          <source>Note that hypot(x, y), hypot(y, x) and hypot(x, -y) are equivalent.</source>
          <target state="translated">Обратите внимание,что hypot(x,y),hypot(y,x)и hypot(x,-y)эквивалентны.</target>
        </trans-unit>
        <trans-unit id="7d64153396681f56405a98e9a94c523f4293a81b" translate="yes" xml:space="preserve">
          <source>Note that if day overflow is allowed, and the date with the adjusted year/month overflows the number of days in the new month, then the month will be incremented by one, and the day set to the number of days overflowed. (e.g. if the day were 31 and the new month were June, then the month would be incremented to July, and the new day would be 1). If day overflow is not allowed, then the day will be set to the last valid day in the month (e.g. June 31st would become June 30th).</source>
          <target state="translated">Обратите внимание,что если переполнение дней разрешено,а дата с учетом корректировки года/месяца переполняет количество дней в новом месяце,то месяц увеличивается на единицу,а день,установленный на количество дней,переполняется.(например,если бы день был 31 и новый месяц был июнем,то месяц увеличивался бы до июля,а новый день был бы 1).Если переполнение дня не разрешено,то день устанавливается последним действительным днем в месяце (например,31 июня стало бы 30 июня).</target>
        </trans-unit>
        <trans-unit id="ad6965a043b0f438ffed7d142808cac0176fe172" translate="yes" xml:space="preserve">
          <source>Note that if either end of the pipe has been passed to a child process, it will only be closed in the parent process. (What happens in the child process is platform dependent.)</source>
          <target state="translated">Обратите внимание,что если один из концов трубы был передан дочернему процессу,то он будет закрыт только в родительском процессе.(То,что происходит в дочернем процессе,зависит от платформы).</target>
        </trans-unit>
        <trans-unit id="641b8bad6eb393e831a191963ea178efc311a8dd" translate="yes" xml:space="preserve">
          <source>Note that if iterating forward, &lt;code&gt;add!&quot;years&quot;()&lt;/code&gt; is called on the given time point, then &lt;code&gt;add!&quot;months&quot;()&lt;/code&gt;, and finally the duration is added to it. However, if iterating backwards, the duration is added first, then &lt;code&gt;add!&quot;months&quot;()&lt;/code&gt; is called, and finally &lt;code&gt;add!&quot;years&quot;()&lt;/code&gt; is called. That way, going backwards generates close to the same time points that iterating forward does, but since adding years and months is not entirely reversible (due to possible day overflow, regardless of whether &lt;code&gt;AllowDayOverflow.yes&lt;/code&gt; or &lt;code&gt;AllowDayOverflow.no&lt;/code&gt; is used), it can't be guaranteed that iterating backwards will give the same time points as iterating forward would have (even assuming that the end of the range is a time point which would be returned by the delegate when iterating forward from &lt;code&gt;begin&lt;/code&gt;).</source>
          <target state="translated">Обратите внимание , что если итерация вперед, &lt;code&gt;add!&quot;years&quot;()&lt;/code&gt; вызывается на данный момент времени, а затем &lt;code&gt;add!&quot;months&quot;()&lt;/code&gt; , и , наконец , продолжительность добавляется к нему. Однако, если выполнить итерацию в обратном направлении, сначала добавляется длительность, затем вызывается &lt;code&gt;add!&quot;months&quot;()&lt;/code&gt; и, наконец, вызывается &lt;code&gt;add!&quot;years&quot;()&lt;/code&gt; . Таким образом, при движении назад генерируются те же моменты времени, что и при итерации вперед, но поскольку добавление лет и месяцев не является полностью обратимым (из-за возможного переполнения дня, независимо от того, &lt;code&gt;AllowDayOverflow.yes&lt;/code&gt; или &lt;code&gt;AllowDayOverflow.no&lt;/code&gt; используется), нельзя гарантировать, что итерация в обратном направлении даст те же моменты времени, которые имели бы итерации в прямом направлении (даже если предположить, что конец диапазона является моментом времени, который будет возвращен делегатом при итерации вперед с &lt;code&gt;begin&lt;/code&gt; ) ,</target>
        </trans-unit>
        <trans-unit id="9e24d541ab43dc77168136d6d96c2ec6d9cd50de" translate="yes" xml:space="preserve">
          <source>Note that if the extended unit test handler is set, this handler will be ignored.</source>
          <target state="translated">Обратите внимание,что если установлен расширенный обработчик юнит-тестов,то этот обработчик будет проигнорирован.</target>
        </trans-unit>
        <trans-unit id="09f09d5fb056a58012c263581462eef772037e06" translate="yes" xml:space="preserve">
          <source>Note that if you pass a &lt;code&gt;File&lt;/code&gt; object that is</source>
          <target state="translated">Обратите внимание, что если вы передаете объект &lt;code&gt;File&lt;/code&gt; , который</target>
        </trans-unit>
        <trans-unit id="ae86af4bef5c6e75e79e1cb92f184299576a6121" translate="yes" xml:space="preserve">
          <source>Note that in UTF-32, a code unit is a code point and is represented by the D &lt;code&gt;dchar&lt;/code&gt; type.</source>
          <target state="translated">Обратите внимание, что в UTF-32 кодовая единица является кодовой точкой и представлена типом D &lt;code&gt;dchar&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b8fbb5eacdc4154a5078a8de39a2ed8fa4ea03d3" translate="yes" xml:space="preserve">
          <source>Note that in all cases, &lt;code&gt;arr&lt;/code&gt; is only evaluated once. Thus, an expression like &lt;code&gt;getArray()[1, 2..3, $-1]=c&lt;/code&gt; has the effect of:</source>
          <target state="translated">Обратите внимание, что во всех случаях &lt;code&gt;arr&lt;/code&gt; оценивается только один раз. Таким образом, выражение типа &lt;code&gt;getArray()[1, 2..3, $-1]=c&lt;/code&gt; имеет эффект:</target>
        </trans-unit>
        <trans-unit id="e006ced4b4958bf488f02e8e58d1bf92ac15c8b1" translate="yes" xml:space="preserve">
          <source>Note that in the above example the documentation comment uses the /++ ... +/ form so that /* ... */ can be used inside the code section.</source>
          <target state="translated">Обратите внимание,что в приведенном выше примере комментарий к документации использует /++...+/так что /*...*/можно использовать внутри секции кода.</target>
        </trans-unit>
        <trans-unit id="13e74cc91272ec9b2bfdce2ef0b3c810ab9c9367" translate="yes" xml:space="preserve">
          <source>Note that in this example, the first &lt;code&gt;wait&lt;/code&gt; call will have no effect if the process has already terminated by the time &lt;code&gt;tryWait&lt;/code&gt; is called. In the opposite case, however, the &lt;code&gt;scope&lt;/code&gt; statement ensures that we always wait for the process if it hasn't terminated by the time we reach the end of the scope.</source>
          <target state="translated">Обратите внимание, что в этом примере первый &lt;code&gt;wait&lt;/code&gt; вызов не будет иметь эффекта, если процесс уже завершится к моменту &lt;code&gt;tryWait&lt;/code&gt; . В противоположном случае, однако, оператор &lt;code&gt;scope&lt;/code&gt; гарантирует, что мы всегда будем ждать процесса, если он не завершился к тому времени, когда мы достигнем конца области.</target>
        </trans-unit>
        <trans-unit id="80bddd1ea633b51a86fe0e551b1923914b6691c0" translate="yes" xml:space="preserve">
          <source>Note that less should produce a strict ordering. That is, for two unequal elements &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;, &lt;code&gt;less(a, b) == !less(b, a)&lt;/code&gt;. &lt;code&gt;less(a, a)&lt;/code&gt; should always equal &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Обратите внимание, что меньше должно производить строгий порядок. То есть для двух неравных элементов &lt;code&gt;a&lt;/code&gt; и &lt;code&gt;b&lt;/code&gt; , &lt;code&gt;less(a, b) == !less(b, a)&lt;/code&gt; . &lt;code&gt;less(a, a)&lt;/code&gt; всегда должен быть равен &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="70bbeb274fea359aae2d040c8c2296e15c498ac2" translate="yes" xml:space="preserve">
          <source>Note that like all conversions in std.datetime, this is a truncating conversion.</source>
          <target state="translated">Обратите внимание,что,как и все преобразования в std.datetime,это усечение преобразования.</target>
        </trans-unit>
        <trans-unit id="44035a71fb744a3041456ec9cbdeceb03e62e357" translate="yes" xml:space="preserve">
          <source>Note that many file systems do not update the access time for files (generally for performance reasons), so there's a good chance that &lt;code&gt;timeLastAccessed&lt;/code&gt; will return the same value as &lt;code&gt;timeLastModified&lt;/code&gt;.</source>
          <target state="translated">Обратите внимание, что многие файловые системы не обновляют время доступа к файлам (как правило, из соображений производительности), поэтому есть большая вероятность, что &lt;code&gt;timeLastAccessed&lt;/code&gt; вернет то же значение, что и &lt;code&gt;timeLastModified&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="36dba645f22a44df55465946f776825de4b8109a" translate="yes" xml:space="preserve">
          <source>Note that merely declaring &lt;code&gt;opCall&lt;/code&gt; automatically disables &lt;a href=&quot;struct#StructLiteral&quot;&gt;struct literal&lt;/a&gt; syntax. To avoid the limitation, you need to also declare a &lt;a href=&quot;struct#Struct-Constructor&quot;&gt;constructor&lt;/a&gt; so that it takes priority over &lt;code&gt;opCall&lt;/code&gt; in &lt;code&gt;Type(...)&lt;/code&gt; syntax.</source>
          <target state="translated">Обратите внимание, что простое объявление &lt;code&gt;opCall&lt;/code&gt; автоматически отключает синтаксис &lt;a href=&quot;struct#StructLiteral&quot;&gt;struct literal&lt;/a&gt; . Чтобы избежать ограничения, вам также нужно объявить &lt;a href=&quot;struct#Struct-Constructor&quot;&gt;конструктор,&lt;/a&gt; чтобы он &lt;code&gt;opCall&lt;/code&gt; приоритет над opCall в синтаксисе &lt;code&gt;Type(...)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c19df3c7c698492518d32c4e38e6a62e58e238c9" translate="yes" xml:space="preserve">
          <source>Note that on Windows, both the backslash (&lt;code&gt;\&lt;/code&gt;) and the slash (&lt;code&gt;/&lt;/code&gt;) are in principle valid directory separators. This module treats them both on equal footing, but in cases where a</source>
          <target state="translated">Обратите внимание, что в Windows как обратная косая черта ( &lt;code&gt;\&lt;/code&gt; ), так и косая черта ( &lt;code&gt;/&lt;/code&gt; ) в принципе являются допустимыми разделителями каталогов. Этот модуль рассматривает их обоих на равных, но в тех случаях, когда</target>
        </trans-unit>
        <trans-unit id="f0f97f096be5401c7d3f862a606a79cf1362201a" translate="yes" xml:space="preserve">
          <source>Note that only positive numbers can be integer powers of two. This function always return &lt;code&gt;false&lt;/code&gt; if &lt;code&gt;x&lt;/code&gt; is negative or zero.</source>
          <target state="translated">Обратите внимание, что только положительные числа могут быть целыми степенями двух. Эта функция всегда возвращает &lt;code&gt;false&lt;/code&gt; , если &lt;code&gt;x&lt;/code&gt; отрицателен или равен нулю.</target>
        </trans-unit>
        <trans-unit id="eda6c02b923a2ed1d7a7c278f61d78d88a3639e6" translate="yes" xml:space="preserve">
          <source>Note that since scripts and blocks overlap the usual trick to disambiguate is used - to get a block use &lt;code&gt;unicode.InBlockName&lt;/code&gt;, to search a script use &lt;code&gt;unicode.ScriptName&lt;/code&gt;.</source>
          <target state="translated">Обратите внимание, что, поскольку сценарии и блоки перекрываются, используется обычный способ устранения неоднозначности - для получения блока используйте &lt;code&gt;unicode.InBlockName&lt;/code&gt; , для поиска сценария используйте &lt;code&gt;unicode.ScriptName&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="22cc19be60608f85b4e4dfefb9bd5fe35fe1487b" translate="yes" xml:space="preserve">
          <source>Note that some attributes can be inferred. For example:</source>
          <target state="translated">Обратите внимание,что некоторые атрибуты могут быть выведены.Например:</target>
        </trans-unit>
        <trans-unit id="f18ac40c792f74fb305df69994445a32bfe7fcb9" translate="yes" xml:space="preserve">
          <source>Note that the &quot;mode&quot; parameter can be one of DecodeMode.NONE (do not decode), DecodeMode.LOOSE (decode, but ignore errors), or DecodeMode.STRICT (decode, and throw a DecodeException in the event of an error).</source>
          <target state="translated">Обратите внимание,что параметр &quot;mode&quot; может быть одним из DecodeMode.NONE (не декодируйте),DecodeMode.LOOSE (декодируйте,но игнорируйте ошибки)или DecodeMode.STRICT (декодируйте и бросайте DecodeException в случае ошибки).</target>
        </trans-unit>
        <trans-unit id="c9454f9715d5041deb694a9a0e0b28ae86a7f41f" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;strip&lt;/code&gt; and &lt;code&gt;stripRight&lt;/code&gt; functions require the range to be a &lt;a href=&quot;#BidirectionalRange&quot;&gt;&lt;code&gt;BidirectionalRange&lt;/code&gt;&lt;/a&gt; range.</source>
          <target state="translated">Обратите внимание, что функции &lt;code&gt;strip&lt;/code&gt; и &lt;code&gt;stripRight&lt;/code&gt; требуют, чтобы диапазон был диапазоном &lt;a href=&quot;#BidirectionalRange&quot;&gt; &lt;code&gt;BidirectionalRange&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="105b64c754d996e053dd0d505eb33e6917a0a7c3" translate="yes" xml:space="preserve">
          <source>Note that the above restrictions apply only to expressions which are actually executed. For example:</source>
          <target state="translated">Обратите внимание,что вышеуказанные ограничения применяются только к выражениям,которые фактически выполняются.Например:</target>
        </trans-unit>
        <trans-unit id="0f56ed4aac2dbf1ced449f72f5d0793404a040ac" translate="yes" xml:space="preserve">
          <source>Note that the file attributes on Windows and Posix systems are completely different. On Windows, they're what is returned by &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/aa364944(v=vs.85).aspx&quot;&gt; GetFileAttributes&lt;/a&gt;, whereas on Posix systems, they're the &lt;code&gt;st_mode&lt;/code&gt; value which is part of the &lt;code&gt;stat struct&lt;/code&gt; gotten by calling the &lt;a href=&quot;http://en.wikipedia.org/wiki/Stat_%28Unix%29&quot;&gt;&lt;code&gt;stat&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">Обратите внимание, что атрибуты файлов в системах Windows и Posix совершенно разные. В Windows это то, что возвращает &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/aa364944(v=vs.85).aspx&quot;&gt;GetFileAttributes&lt;/a&gt; , тогда как в системах &lt;code&gt;st_mode&lt;/code&gt; значение st_mode, которое является частью &lt;code&gt;stat struct&lt;/code&gt; путем вызова функции &lt;a href=&quot;http://en.wikipedia.org/wiki/Stat_%28Unix%29&quot;&gt; &lt;code&gt;stat&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="58b3a122bcf863a6e06a86f361dfc75dff88483d" translate="yes" xml:space="preserve">
          <source>Note that the file attributes on Windows and Posix systems are completely different. On, Windows, they're what is returned by &lt;code&gt;GetFileAttributes&lt;/code&gt;&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/aa364944(v=vs.85).aspx&quot;&gt;GetFileAttributes&lt;/a&gt; Whereas, an Posix systems, they're the &lt;code&gt;st_mode&lt;/code&gt; value which is part of the &lt;code&gt;stat&lt;/code&gt; struct gotten by calling &lt;code&gt;stat&lt;/code&gt;.</source>
          <target state="translated">Обратите внимание, что атрибуты файлов в системах Windows и Posix совершенно разные. В Windows они возвращаются &lt;code&gt;GetFileAttributes&lt;/code&gt; &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/aa364944(v=vs.85).aspx&quot;&gt;GetFileAttributes, в&lt;/a&gt; то время как системы &lt;code&gt;st_mode&lt;/code&gt; значение st_mode, которое является частью структуры &lt;code&gt;stat&lt;/code&gt; , получаемой при вызове &lt;code&gt;stat&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ac0d5de26025de020503b24834bbc1e01d074910" translate="yes" xml:space="preserve">
          <source>Note that the number of days in the months or how far into the month either &lt;a href=&quot;#Date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; is is irrelevant. It is the difference in the month property combined with the difference in years * 12. So, for instance, December 31st and January 1st are one month apart just as December 1st and January 31st are one month apart.</source>
          <target state="translated">Обратите внимание, что количество дней в месяцах или как далеко в месяце либо &lt;a href=&quot;#Date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; не имеет значения. Это разница в месячной собственности в сочетании с разницей в годах * 12. Так, например, 31 декабря и 1 января разделены на один месяц, так же как 1 декабря и 31 января - один месяц.</target>
        </trans-unit>
        <trans-unit id="3b7532f9c55c33a0ea3ab36928dfa00325e43b78" translate="yes" xml:space="preserve">
          <source>Note that the number of days in the months or how far into the month either date is is irrelevant. It is the difference in the month property combined with the difference in years * 12. So, for instance, December 31st and January 1st are one month apart just as December 1st and January 31st are one month apart.</source>
          <target state="translated">Обратите внимание,что количество дней в месяцах или расстояние до любой из дат месяца не имеет значения.Это разница в свойствах месяца в сочетании с разницей в годах*12.Так,например,31 декабря и 1 января-с разницей в один месяц так же,как 1 декабря и 31 января-с разницей в один месяц.</target>
        </trans-unit>
        <trans-unit id="7def91aa85d70e11e052a5c942f5159d4bbd2f46" translate="yes" xml:space="preserve">
          <source>Note that the number of digits in the fractional seconds varies with the number of fractional seconds. It's a maximum of 7 (which would be hnsecs), but only has as many as are necessary to hold the correct value (so no trailing zeroes), and if there are no fractional seconds, then there is no decimal point.</source>
          <target state="translated">Обратите внимание,что количество цифр в дробных секундах варьируется в зависимости от количества дробных секунд.Это максимум 7 (что было бы гнсек),но имеет только столько,сколько необходимо для удержания правильного значения (поэтому нет следящих нулей),а если нет дробных секунд,то нет и десятичной запятой.</target>
        </trans-unit>
        <trans-unit id="ed9272ebf234b02f1f0545ae76356a3b0ec23a8c" translate="yes" xml:space="preserve">
          <source>Note that the parameter to &lt;code&gt;opEquals&lt;/code&gt; is of type &lt;code&gt;Object&lt;/code&gt;, not the type of the class in which it is defined.</source>
          <target state="translated">Обратите внимание, что параметр &lt;code&gt;opEquals&lt;/code&gt; имеет тип &lt;code&gt;Object&lt;/code&gt; , а не тип класса, в котором он определен.</target>
        </trans-unit>
        <trans-unit id="3bcdcd90f9f0d2f4085e68b75a145415970ef1fe" translate="yes" xml:space="preserve">
          <source>Note that the parameter to the generated &lt;code&gt;opAssign&lt;/code&gt; is passed by value, which means that the postblit is going to be called (if it is defined) in both of the above situations before entering the body of &lt;code&gt;opAssign&lt;/code&gt;. The assignments in the above generated function bodies are blit expressions, so they can be regarded as &lt;code&gt;memcpy&lt;/code&gt;s (&lt;code&gt;opAssign&lt;/code&gt; is not called as this will result in an infinite recursion; the postblit is not called because it has already been called when the parameter was passed by value).</source>
          <target state="translated">Обратите внимание, что параметр сгенерированного &lt;code&gt;opAssign&lt;/code&gt; передается по значению, что означает, что postblit будет вызываться (если он определен) в обеих вышеупомянутых ситуациях перед вводом тела &lt;code&gt;opAssign&lt;/code&gt; . Назначения в сгенерированных выше телах функций являются блитовыми выражениями, поэтому их можно рассматривать как &lt;code&gt;memcpy&lt;/code&gt; s ( &lt;code&gt;opAssign&lt;/code&gt; не вызывается, так как это приведет к бесконечной рекурсии; postblit не вызывается, потому что он уже был вызван при передаче параметра по стоимости).</target>
        </trans-unit>
        <trans-unit id="cfca2dafa198ccff289d808ee6e617972ea3da55" translate="yes" xml:space="preserve">
          <source>Note that the precision of StopWatch differs from system to system. It is impossible for it to be the same for all systems, since the precision of the system clock and other system-dependent and situation-dependent factors (such as the overhead of a context switch between threads) varies from system to system and can affect StopWatch's accuracy.</source>
          <target state="translated">Обратите внимание,что точность работы секундомера отличается от системы к системе.Невозможно,чтобы она была одинаковой для всех систем,поскольку точность системных часов и других системных и ситуационно-зависимых факторов (таких как накладные расходы на переключение между потоками)варьируется от системы к системе и может влиять на точность работы StopWatch.</target>
        </trans-unit>
        <trans-unit id="013108e934bb36b82a19ea994bcf87182beae597" translate="yes" xml:space="preserve">
          <source>Note that the result is always mutable even if the original type was const or immutable. In order to retain the constness, use &lt;a href=&quot;std_traits#Signed&quot;&gt;&lt;code&gt;std.traits.Signed&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Обратите внимание, что результат всегда изменчив, даже если исходный тип был постоянным или неизменным. Чтобы сохранить постоянство, используйте &lt;a href=&quot;std_traits#Signed&quot;&gt; &lt;code&gt;std.traits.Signed&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b9fc2a3abef27f02d267911870b28cef9c5fce9d" translate="yes" xml:space="preserve">
          <source>Note that the result is always mutable even if the original type was const or immutable. In order to retain the constness, use &lt;a href=&quot;std_traits#Unsigned&quot;&gt;&lt;code&gt;std.traits.Unsigned&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Обратите внимание, что результат всегда изменчив, даже если исходный тип был постоянным или неизменным. Чтобы сохранить постоянство, используйте &lt;a href=&quot;std_traits#Unsigned&quot;&gt; &lt;code&gt;std.traits.Unsigned&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="97a6bd409b0edfaeec19001e1e4b496e335537bd" translate="yes" xml:space="preserve">
          <source>Note that the template mixin is evaluated in the context of its instantiation, not declaration. If this is a problem, the template mixin can use local imports, or have the member functions forward to the actual functions.</source>
          <target state="translated">Обратите внимание,что смесь шаблонов оценивается в контексте ее инстанцирования,а не декларирования.Если это проблема,смесь шаблонов может использовать локальный импорт,или же функции-члены могут перенаправляться к реальным функциям.</target>
        </trans-unit>
        <trans-unit id="90520f60d5001fa0deb6ccd61eaac980e05c6894" translate="yes" xml:space="preserve">
          <source>Note that the time zone is ignored. Only the internal std times (which are in UTC) are compared.</source>
          <target state="translated">Обратите внимание,что часовой пояс игнорируется.Сравниваются только внутренние std-времени (которые находятся в UTC).</target>
        </trans-unit>
        <trans-unit id="347830fe2dab68c08b8a8c382421a6b59d1a9414" translate="yes" xml:space="preserve">
          <source>Note that there is no trailing &lt;code&gt;;&lt;/code&gt; after the closing &lt;code&gt;}&lt;/code&gt; of the class definition. It is also not possible to declare a variable var like:</source>
          <target state="translated">Обратите внимание, что нет трейлинга &lt;code&gt;;&lt;/code&gt; после закрытия &lt;code&gt;}&lt;/code&gt; определения класса. Также невозможно объявить переменную var как:</target>
        </trans-unit>
        <trans-unit id="e2ce7a1307c873540e8c4568f17f9cb7d94fa592" translate="yes" xml:space="preserve">
          <source>Note that these specialized summing algorithms execute more primitive operations than vanilla summation. Therefore, if in certain cases maximum speed is required at expense of precision, one can use &lt;code&gt;fold!((a, b) =&amp;gt; a + b)(r, 0)&lt;/code&gt;, which is not specialized for summation.</source>
          <target state="translated">Обратите внимание, что эти специализированные алгоритмы суммирования выполняют больше примитивных операций, чем ванильное суммирование. Поэтому, если в определенных случаях требуется максимальная скорость за счет точности, можно использовать &lt;code&gt;fold!((a, b) =&amp;gt; a + b)(r, 0)&lt;/code&gt; , которое не специализируется для суммирования.</target>
        </trans-unit>
        <trans-unit id="66ceba8ad81e64e59b5bf6adfb9a8515853d4ada" translate="yes" xml:space="preserve">
          <source>Note that this class, like &lt;code&gt;Nspace&lt;/code&gt;, matches only one identifier part of a namespace. For the namespace &lt;code&gt;&quot;foo::bar&quot;&lt;/code&gt;, the will be a &lt;code&gt;CPPNamespaceDeclaration&lt;/code&gt; with its &lt;code&gt;ident&lt;/code&gt; set to &lt;code&gt;&quot;bar&quot;&lt;/code&gt;, and its &lt;code&gt;namespace&lt;/code&gt; field pointing to another &lt;code&gt;CPPNamespaceDeclaration&lt;/code&gt; with its &lt;code&gt;ident&lt;/code&gt; set to &lt;code&gt;&quot;foo&quot;&lt;/code&gt;.</source>
          <target state="translated">Обратите внимание, что этот класс, как и &lt;code&gt;Nspace&lt;/code&gt; , соответствует только одной части идентификатора пространства имен. Для пространства имен &lt;code&gt;&quot;foo::bar&quot;&lt;/code&gt; будет &lt;code&gt;CPPNamespaceDeclaration&lt;/code&gt; с его &lt;code&gt;ident&lt;/code&gt; установленным на &lt;code&gt;&quot;bar&quot;&lt;/code&gt; , и его полем &lt;code&gt;namespace&lt;/code&gt; указывающим на другое &lt;code&gt;CPPNamespaceDeclaration&lt;/code&gt; с его &lt;code&gt;ident&lt;/code&gt; установленным на &lt;code&gt;&quot;foo&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c21c11195a0d1c7a31fd4780e9a08c186e540bb2" translate="yes" xml:space="preserve">
          <source>Note that this function can be used in conjunction with logGamma(x) to evaluate gamma for very large values of x.</source>
          <target state="translated">Обратите внимание,что эта функция может быть использована совместно с logGamma(x)для оценки гаммы при очень больших значениях x.</target>
        </trans-unit>
        <trans-unit id="0bf2881edd5d472dbfdc4275277886cc17c5a866" translate="yes" xml:space="preserve">
          <source>Note that this function does not resolve symbolic links.</source>
          <target state="translated">Обратите внимание,что эта функция не разрешает символические связи.</target>
        </trans-unit>
        <trans-unit id="21e585872c0d53f25db7173b27751038000ea37f" translate="yes" xml:space="preserve">
          <source>Note that this includes the non-character code points U+FFFE and U+FFFF, since these are valid code points (even though they are not valid characters).</source>
          <target state="translated">Обратите внимание,что это включает в себя несимвольные точки кода U+FFFE и U+FFFF,так как это действительные точки кода (даже если они не являются действительными символами).</target>
        </trans-unit>
        <trans-unit id="9e54e3f648dff697f15989171e1f17afab1f263c" translate="yes" xml:space="preserve">
          <source>Note that unary &lt;code&gt;-&lt;/code&gt; is considered to overflow if &lt;code&gt;T&lt;/code&gt; is a signed integral of 32 or 64 bits and is equal to the most negative value. This is because that value has no positive negation.</source>
          <target state="translated">Обратите внимание, что унарный &lt;code&gt;-&lt;/code&gt; считается переполнением, если &lt;code&gt;T&lt;/code&gt; представляет собой интеграл со знаком из 32 или 64 бит и равен наиболее отрицательному значению. Это потому, что это значение не имеет положительного отрицания.</target>
        </trans-unit>
        <trans-unit id="e22da1f09943bc1bd2194eb52462e47725243938" translate="yes" xml:space="preserve">
          <source>Note that using immutable on the left hand side of a method does not apply to the return type:</source>
          <target state="translated">Обратите внимание,что использование метода неизменяемого с левой стороны не относится к типу возврата:</target>
        </trans-unit>
        <trans-unit id="918640f380644b341ffcec2196c90d882dd46a65" translate="yes" xml:space="preserve">
          <source>Note that using the &lt;code&gt;~user&lt;/code&gt; syntax may give different values from just &lt;code&gt;~&lt;/code&gt; if the environment variable doesn't match the value stored in the user database.</source>
          <target state="translated">Обратите внимание, что использование синтаксиса &lt;code&gt;~user&lt;/code&gt; может давать значения, отличные от &lt;code&gt;~&lt;/code&gt; , если переменная окружения не совпадает со значением, хранящимся в пользовательской базе данных.</target>
        </trans-unit>
        <trans-unit id="d08e2d88ab7d380019dd445d33fece11f314cccc" translate="yes" xml:space="preserve">
          <source>Note that when &lt;code&gt;const&lt;/code&gt; and &lt;code&gt;immutable&lt;/code&gt; are used to explicitly qualify a postblit as in &lt;code&gt;this(this) const immutable;&lt;/code&gt; or &lt;code&gt;const immutable this(this);&lt;/code&gt; - the order in which the qualifiers are declared does not matter - the compiler generates a conflicting attribute error, however declaring the struct as &lt;code&gt;const&lt;/code&gt;/&lt;code&gt;immutable&lt;/code&gt; and the postblit as &lt;code&gt;immutable&lt;/code&gt;/&lt;code&gt;const&lt;/code&gt; achieves the effect of applying both qualifiers to the postblit. In both cases the postblit is qualified with the more restrictive qualifier, which is &lt;code&gt;immutable&lt;/code&gt;.</source>
          <target state="translated">Обратите внимание, что когда &lt;code&gt;const&lt;/code&gt; и &lt;code&gt;immutable&lt;/code&gt; используются для явного определения postblit, как в &lt;code&gt;this(this) const immutable;&lt;/code&gt; или &lt;code&gt;const immutable this(this);&lt;/code&gt; - порядок, в котором объявляются квалификаторы, не имеет значения - компилятор генерирует конфликтующую ошибку атрибута, однако объявление структуры как &lt;code&gt;const&lt;/code&gt; / &lt;code&gt;immutable&lt;/code&gt; и postblit как &lt;code&gt;immutable&lt;/code&gt; / &lt;code&gt;const&lt;/code&gt; обеспечивает эффект применения обоих квалификаторов к postblit. В обоих случаях постблит квалифицируется более строгим классификатором, который является &lt;code&gt;immutable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="db6f486afc782e7d8d40d6176273ffd0a92d6589" translate="yes" xml:space="preserve">
          <source>Note that when rolling msecs, usecs or hnsecs, they all add up to a second. So, for example, rolling 1000 msecs is exactly the same as rolling 100,000 usecs.</source>
          <target state="translated">Обратите внимание,что при прокатке мсеков,юзеков или хенсеков все они складываются до секунды.Так,например,прокатка 1000 мсек-это точно то же самое,что прокатка 100 000 усеков.</target>
        </trans-unit>
        <trans-unit id="72c082db4e1807b855106dcd51e06ae543e5a663" translate="yes" xml:space="preserve">
          <source>Note that while &lt;code&gt;collectException&lt;/code&gt;</source>
          <target state="translated">Обратите внимание, что пока &lt;code&gt;collectException&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a633cde16fe0b35262b02b2b40dcd83110f14198" translate="yes" xml:space="preserve">
          <source>Note that while &lt;code&gt;collectExceptionMsg&lt;/code&gt;</source>
          <target state="translated">Обратите внимание, что пока &lt;code&gt;collectExceptionMsg&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fb0030eca3940263d99b92bc47097ce8c0e84a35" translate="yes" xml:space="preserve">
          <source>Note that your function will be called for both start tags and empty tags. That is, we make no distinction between &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; and &amp;lt;br/&amp;gt;.</source>
          <target state="translated">Обратите внимание, что ваша функция будет вызываться как для начальных тегов, так и для пустых тегов. То есть мы не делаем различий между &amp;lt;br&amp;gt; &amp;lt;/br&amp;gt; и &amp;lt;br/&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="9b9f74a3e01b56fbe0b6285c40c17c1416f204c3" translate="yes" xml:space="preserve">
          <source>Note that, currently, foreach (c:codePoints(s)) is superior to foreach (c;s) in that the latter will fall over on encountering U+FFFF.</source>
          <target state="translated">Обратите внимание,что в настоящее время foreach (c:codePoints(s))превосходит foreach (c;s)в том,что последний падает при столкновении с U+FFFF.</target>
        </trans-unit>
        <trans-unit id="1b30eb201d301a49862249a5a39c27627b493d38" translate="yes" xml:space="preserve">
          <source>Note that, since &lt;code&gt;functions&lt;/code&gt; are assumed to be associative, additional optimizations are made to the serial portion of the reduction algorithm. These take advantage of the instruction level parallelism of modern CPUs, in addition to the thread-level parallelism that the rest of this module exploits. This can lead to better than linear speedups relative to &lt;a href=&quot;std_algorithm_iteration#reduce&quot;&gt;&lt;code&gt;std.algorithm.iteration.reduce&lt;/code&gt;&lt;/a&gt;, especially for fine-grained benchmarks like dot products.</source>
          <target state="translated">Обратите внимание, что, поскольку &lt;code&gt;functions&lt;/code&gt; предполагаются ассоциативными, в последовательную часть алгоритма редукции вносятся дополнительные оптимизации. Они используют преимущества параллелизма на уровне команд современных процессоров, в дополнение к параллелизму на уровне потоков, который используется остальной частью этого модуля. Это может привести к &lt;a href=&quot;std_algorithm_iteration#reduce&quot;&gt; &lt;code&gt;std.algorithm.iteration.reduce&lt;/code&gt; &lt;/a&gt; по сравнению с линейным ускорением по сравнению с std.algorithm.iteration.reduce , особенно для мелкозернистых тестов, таких как точечные продукты.</target>
        </trans-unit>
        <trans-unit id="3b050c108011d5c83aae9e488ace3162ed4d3888" translate="yes" xml:space="preserve">
          <source>Note the double asterisks in the example above. This is because the list is inside a documentation comment that is delimited with asterisks, so the initial asterisk is considered part of the documentation comment, not a list item. This is even true when other lines don't start with an asterisk:</source>
          <target state="translated">Обратите внимание на двойные звездочки в примере выше.Это происходит потому,что список находится внутри комментария к документации,отмеченного звездочками,поэтому начальная звездочка считается частью комментария к документации,а не элементом списка.Это даже справедливо,когда другие строки не начинаются со звездочки:</target>
        </trans-unit>
        <trans-unit id="77a42fc96213541cea82021eba50295b8b065cb7" translate="yes" xml:space="preserve">
          <source>Note there is also LARGE version which adds large file support for platforms which have larger off_t sizes. See MAXFILESIZE_LARGE below.</source>
          <target state="translated">Обратите внимание,что существует также LARGE версия,которая добавляет поддержку больших файлов для платформ,которые имеют больший размер off_t.См.раздел MAXFILESIZE_LARGE ниже.</target>
        </trans-unit>
        <trans-unit id="14c50f05b7dc80a74871bb2afa89104fae9ab95b" translate="yes" xml:space="preserve">
          <source>Note there is also a LARGE version of this key which uses off_t types, allowing for large file offsets on platforms which use larger-than-32-bit off_t's. Look below for RESUME_FROM_LARGE.</source>
          <target state="translated">Обратите внимание,что существует также БОЛЬШАЯ версия этого ключа,использующая типы off_t,что позволяет использовать большие файловые смещения на платформах,использующих более крупные,чем 32-битные off_t.Смотрите ниже для RESUME_FROM_LARGE.</target>
        </trans-unit>
        <trans-unit id="83423c198b6099edba08f185f940042d5dba3b79" translate="yes" xml:space="preserve">
          <source>Note:</source>
          <target state="translated">Note:</target>
        </trans-unit>
        <trans-unit id="474b920eed351c384de7672326f5263e20997572" translate="yes" xml:space="preserve">
          <source>Note: &lt;code&gt;static opCall&lt;/code&gt; can be used to simulate struct constructors with no arguments, but this is not recommended practice. Instead, the preferred solution is to use a factory function to create struct instances.</source>
          <target state="translated">Примечание: &lt;code&gt;static opCall&lt;/code&gt; может использоваться для имитации конструкторов структуры без аргументов, но это не рекомендуемая практика. Вместо этого предпочтительным решением является использование фабричной функции для создания экземпляров структуры.</target>
        </trans-unit>
        <trans-unit id="b6757b7ec836c02379870ff926a56d3f1c2de6cf" translate="yes" xml:space="preserve">
          <source>Note: Although the definition is straightforward, a few subtleties exist related to function literals. In the statement &lt;code&gt;return (() =&amp;gt; x + f())() * g();&lt;/code&gt;, the full expression of &lt;code&gt;f()&lt;/code&gt; is &lt;code&gt;x + f()&lt;/code&gt;, not the expression passed to &lt;code&gt;return&lt;/code&gt;. This is because the parent of &lt;code&gt;x + f()&lt;/code&gt; has function literal type, not expression type.</source>
          <target state="translated">Примечание. Хотя определение является простым, существует несколько тонкостей, связанных с функциональными литералами. В операторе &lt;code&gt;return (() =&amp;gt; x + f())() * g();&lt;/code&gt; полное выражение функции &lt;code&gt;f()&lt;/code&gt; - это &lt;code&gt;x + f()&lt;/code&gt; , а не выражение, переданное для &lt;code&gt;return&lt;/code&gt; . Это потому, что родительский элемент функции &lt;code&gt;x + f()&lt;/code&gt; имеет литеральный тип функции, а не тип выражения.</target>
        </trans-unit>
        <trans-unit id="8786381c9a210d5e82b40aa9d7e16a168f4d8ef9" translate="yes" xml:space="preserve">
          <source>Note: An intuition behind these rules is that destructors of temporaries are deferred to the end of full expression and in reverse order of construction, with the exception that the right-hand side of &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; and &lt;code&gt;||&lt;/code&gt; are considered their own full expressions even when part of larger expressions.</source>
          <target state="translated">Примечание: интуиция за этими правилами состоит в том, что деструкторы временных объектов откладываются до конца полного выражения и в обратном порядке построения, за исключением того, что правая часть &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; и &lt;code&gt;||&lt;/code&gt; считаются их собственными полными выражениями, даже если они являются частью больших выражений.</target>
        </trans-unit>
        <trans-unit id="aa74ddd8151c0e8c6ba91a90babe4e4a7f4d559e" translate="yes" xml:space="preserve">
          <source>Note: Hex Strings are &lt;b&gt;deprecated&lt;/b&gt;. Please use &lt;a href=&quot;https://dlang.org/phobos/std_conv.html#hexString&quot;&gt;&lt;code&gt;std.conv.hexString&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">Примечание: шестнадцатеричные строки &lt;b&gt;устарели&lt;/b&gt; . Пожалуйста, используйте вместо этого &lt;a href=&quot;https://dlang.org/phobos/std_conv.html#hexString&quot;&gt; &lt;code&gt;std.conv.hexString&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ab44e664d0fb73e17b2d788f273100f8a9756fcb" translate="yes" xml:space="preserve">
          <source>Note: Rvalues include all literals, special value keywords such as &lt;code&gt;__FILE__&lt;/code&gt; and &lt;code&gt;__LINE__&lt;/code&gt;, &lt;code&gt;enum&lt;/code&gt; values, and the result of expressions not defined as lvalues above.</source>
          <target state="translated">Примечание: R-значения включают в себя все литералы, ключевые слова с особыми значениями, такие как &lt;code&gt;__FILE__&lt;/code&gt; и &lt;code&gt;__LINE__&lt;/code&gt; , значения &lt;code&gt;enum&lt;/code&gt; и результат выражений, не указанных выше как l-значения.</target>
        </trans-unit>
        <trans-unit id="065a513243cfbfb6ba132105f812e5a75641d676" translate="yes" xml:space="preserve">
          <source>Note: The &lt;code&gt;return&lt;/code&gt; attribute is currently only enforced by &lt;code&gt;dmd&lt;/code&gt; when the &lt;code&gt;-dip25&lt;/code&gt; switch is passed.</source>
          <target state="translated">Примечание. Атрибут &lt;code&gt;return&lt;/code&gt; в настоящее время применяется только &lt;code&gt;dmd&lt;/code&gt; , когда &lt;code&gt;-dip25&lt;/code&gt; ключ -dip25 .</target>
        </trans-unit>
        <trans-unit id="93747fb439b767f7416b2ece9f49c1ec18c64ad0" translate="yes" xml:space="preserve">
          <source>Note: The ternary expression</source>
          <target state="translated">Примечание:Тернарное выражение</target>
        </trans-unit>
        <trans-unit id="ee4e59bed66f02dc6f460df8e2185e7345a20b4e" translate="yes" xml:space="preserve">
          <source>Note: for 32 bit gcc, it's &lt;code&gt;long long&lt;/code&gt; instead of &lt;code&gt;long&lt;/code&gt;.</source>
          <target state="translated">Примечание: для 32-битного gcc это &lt;code&gt;long long&lt;/code&gt; вместо &lt;code&gt;long&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="70440046a3dc2e079f23ee1c57dfa76669b732aa" translate="yes" xml:space="preserve">
          <source>Notes</source>
          <target state="translated">Notes</target>
        </trans-unit>
        <trans-unit id="3f5230b128c9da8ca00898450d16b6f3d9dd7622" translate="yes" xml:space="preserve">
          <source>Notes to implementors</source>
          <target state="translated">Примечания для исполнителей</target>
        </trans-unit>
        <trans-unit id="f7c7e2b89a99758727779c65c16d4c60e658ae08" translate="yes" xml:space="preserve">
          <source>Notes to users</source>
          <target state="translated">Примечания для пользователей</target>
        </trans-unit>
        <trans-unit id="011fcd843da8c529c1fa3883c7f45aba859be2bf" translate="yes" xml:space="preserve">
          <source>Nothrow Functions</source>
          <target state="translated">Nothrow Функции</target>
        </trans-unit>
        <trans-unit id="bd69d0c378869da8300879aa2418a7369c07459a" translate="yes" xml:space="preserve">
          <source>Nothrow functions are covariant with throwing ones.</source>
          <target state="translated">Ни одна функция не является ковариантной с бросками.</target>
        </trans-unit>
        <trans-unit id="621c7bb048303809630a2eae2cfb3587611e1c2f" translate="yes" xml:space="preserve">
          <source>Nothrow functions can only throw exceptions derived from class</source>
          <target state="translated">Функции Nothrow могут бросать только исключения,производные от класса</target>
        </trans-unit>
        <trans-unit id="8a581796a24d10c48d25cf2bf5de6850099d5228" translate="yes" xml:space="preserve">
          <source>Notice that neither example accesses the line data returned by &lt;code&gt;front&lt;/code&gt; after the corresponding &lt;code&gt;popFront&lt;/code&gt; call is made (because the contents may well have changed).</source>
          <target state="translated">Обратите внимание, что ни один из примеров не обращается к &lt;code&gt;popFront&lt;/code&gt; данным, возвращаемым &lt;code&gt;front&lt;/code&gt; после соответствующего вызова popFront (потому что содержимое вполне могло измениться).</target>
        </trans-unit>
        <trans-unit id="dcd4250a12512a2c398c7fe01f5bc68a926da35d" translate="yes" xml:space="preserve">
          <source>Notice that several callbacks can be done for each call to &lt;code&gt;perform()&lt;/code&gt; due to redirections.</source>
          <target state="translated">Обратите внимание, что из-за перенаправлений можно выполнить несколько обратных вызовов для каждого вызова &lt;code&gt;perform()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7c222c11980679caccf67c7a85849f0e950edc28" translate="yes" xml:space="preserve">
          <source>Notifies all waiters.</source>
          <target state="translated">Сообщает всем официантам.</target>
        </trans-unit>
        <trans-unit id="cbc750275e7d97cd8c120ef91be05291f0103743" translate="yes" xml:space="preserve">
          <source>Notifies one waiter.</source>
          <target state="translated">Известить одного официанта.</target>
        </trans-unit>
        <trans-unit id="b94b032502f2f9d495a4f02e02f68111a39d131a" translate="yes" xml:space="preserve">
          <source>Novell IPX</source>
          <target state="translated">Novell IPX</target>
        </trans-unit>
        <trans-unit id="109085beaaa80ac89858b283a64f7c75d7e5bb12" translate="yes" xml:space="preserve">
          <source>Null</source>
          <target state="translated">Null</target>
        </trans-unit>
        <trans-unit id="447e3998fb0128904fe3329e53a4e7a27cefac16" translate="yes" xml:space="preserve">
          <source>Null values</source>
          <target state="translated">Нулевые значения</target>
        </trans-unit>
        <trans-unit id="dec14193294f19de7c47f5a56980f3295c70ec10" translate="yes" xml:space="preserve">
          <source>Null-terminated string representing parameters.</source>
          <target state="translated">Нуль-терминированная строка,представляющая параметры.</target>
        </trans-unit>
        <trans-unit id="1804c90829b7f01abfd49841af3caae85ad51299" translate="yes" xml:space="preserve">
          <source>Nullable</source>
          <target state="translated">Nullable</target>
        </trans-unit>
        <trans-unit id="8a24e40402207b8b70cc14eba1867548ac1b09e9" translate="yes" xml:space="preserve">
          <source>Num</source>
          <target state="translated">Num</target>
        </trans-unit>
        <trans-unit id="227a24a3e4141a9ac40b8fdf7fd5c2ffacf8d89f" translate="yes" xml:space="preserve">
          <source>Num &lt;code&gt;x&lt;/code&gt;</source>
          <target state="translated">Число &lt;code&gt;x&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d7588782f3d53157aff69b1bffa0181c62154c99" translate="yes" xml:space="preserve">
          <source>Num[] &lt;code&gt;proportions&lt;/code&gt;</source>
          <target state="translated">Num [] &lt;code&gt;proportions&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b7baa1d40c4ea29afc9098732bffee2a861a6c44" translate="yes" xml:space="preserve">
          <source>Number</source>
          <target state="translated">Number</target>
        </trans-unit>
        <trans-unit id="dd451df143db1883131677d43c7f1a93144a6224" translate="yes" xml:space="preserve">
          <source>Number Forms</source>
          <target state="translated">Формы заявок на номера</target>
        </trans-unit>
        <trans-unit id="eb0f5a21c19313cdefd12cf556538964ec1b60c1" translate="yes" xml:space="preserve">
          <source>Number Of Columns In A Result Set</source>
          <target state="translated">Количество столбцов в наборе результатов</target>
        </trans-unit>
        <trans-unit id="29a85c89c3b665d61a62026778cb1a84d89e00ac" translate="yes" xml:space="preserve">
          <source>Number Of SQL Parameters</source>
          <target state="translated">Количество параметров SQL</target>
        </trans-unit>
        <trans-unit id="a22e9e0b736b63398e30b2dc8f5160ec0610321d" translate="yes" xml:space="preserve">
          <source>Number of &lt;a href=&quot;#Code%20point&quot;&gt;code points&lt;/a&gt; in this set</source>
          <target state="translated">Количество &lt;a href=&quot;#Code%20point&quot;&gt;кодовых точек&lt;/a&gt; в этом наборе</target>
        </trans-unit>
        <trans-unit id="dced2e36ae14ec7a69ee28b0add25c818b2b4655" translate="yes" xml:space="preserve">
          <source>Number of additional microseconds.</source>
          <target state="translated">Количество дополнительных микросекунд.</target>
        </trans-unit>
        <trans-unit id="0d2fad8cfb1c2fbe8652c823ff48cfedc04bfb72" translate="yes" xml:space="preserve">
          <source>Number of bits in each size_t</source>
          <target state="translated">Количество бит в каждом size_t</target>
        </trans-unit>
        <trans-unit id="a93803f4135c13b69cc5979ce910aec164759875" translate="yes" xml:space="preserve">
          <source>Number of bits in the &lt;code&gt;BitArray&lt;/code&gt;.</source>
          <target state="translated">Количество битов в &lt;code&gt;BitArray&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="07597dee353e144af76fdefb2c5ac5332f4fcf87" translate="yes" xml:space="preserve">
          <source>Number of bits to be mapped from the source array, i.e. length of the created &lt;code&gt;BitArray&lt;/code&gt;.</source>
          <target state="translated">Количество битов, которые должны быть отображены из исходного массива, т.е. длина созданного &lt;code&gt;BitArray&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="65c610ddbb8967f4ab1b1f258ae1d73dd7fc506f" translate="yes" xml:space="preserve">
          <source>Number of bytes read into the cache when a cache miss occurs.</source>
          <target state="translated">Количество байт,считанных в кэш при пропуске кэша.</target>
        </trans-unit>
        <trans-unit id="93e4ee2802912bc9542ff03c865140e0975aff48" translate="yes" xml:space="preserve">
          <source>Number of columns in a result set</source>
          <target state="translated">Количество столбцов в результирующем наборе</target>
        </trans-unit>
        <trans-unit id="bf960b6a4005bb2d8ceff632ab3a6e2d4f800bfc" translate="yes" xml:space="preserve">
          <source>Number of digits printed between separators.</source>
          <target state="translated">Количество цифр,напечатанных между разделителями.</target>
        </trans-unit>
        <trans-unit id="014bdfb1fc4a2ab03418a68a5de4668cdfda5a8c" translate="yes" xml:space="preserve">
          <source>Number of elements to increment on each iteration. Can't be &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">Количество элементов для увеличения на каждой итерации. Не может быть &lt;code&gt;0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b3cc33728b84226726cec7ea6692b1f2ec781dcd" translate="yes" xml:space="preserve">
          <source>Number of entries in aConstraint</source>
          <target state="translated">Количество записей в aConstraint</target>
        </trans-unit>
        <trans-unit id="ce0515ee85716ef2446a29c50ffe921e9b963466" translate="yes" xml:space="preserve">
          <source>Number of errors diagnosed</source>
          <target state="translated">Количество диагностированных ошибок</target>
        </trans-unit>
        <trans-unit id="e24daa30f457f98d16ad81a8cd1b686a780b57bc" translate="yes" xml:space="preserve">
          <source>Number of matches in this object.</source>
          <target state="translated">Количество совпадений в этом объекте.</target>
        </trans-unit>
        <trans-unit id="1dac03e71ace427dad9e6b7ffe2927de0a46070f" translate="yes" xml:space="preserve">
          <source>Number of modules passed the unittests</source>
          <target state="translated">Количество модулей,прошедших юнит-тесты</target>
        </trans-unit>
        <trans-unit id="eede2a1147dee400c67d4557443a83e95e2ed490" translate="yes" xml:space="preserve">
          <source>Number of modules which were tested</source>
          <target state="translated">Количество протестированных модулей</target>
        </trans-unit>
        <trans-unit id="7438e82b6c23c1a6a50ced05d87fbc419c638058" translate="yes" xml:space="preserve">
          <source>Number of pattern matched counting, where 1 - the first pattern. Returns 0 on no match.</source>
          <target state="translated">Количество совпадений шаблонов,где 1-первый шаблон.Возвращает 0 на отсутствие совпадения.</target>
        </trans-unit>
        <trans-unit id="922cca92f6321c3aaf3d76ca4f48884a73b7acfb" translate="yes" xml:space="preserve">
          <source>Number of ports to try, including the first one set with LOCALPORT. Thus, setting it to 1 will make no additional attempts but the first.</source>
          <target state="translated">Количество портов,которые нужно попробовать,включая первый набор с LOCALPORT.Таким образом,установка его в 1 не сделает никаких дополнительных попыток,кроме первой.</target>
        </trans-unit>
        <trans-unit id="d04f19934163f0381d14164007519a392b8483aa" translate="yes" xml:space="preserve">
          <source>Number of seconds between when successive keep-alive packets are sent if no acknowledgement is received.</source>
          <target state="translated">Количество секунд между отправкой последовательных keep-alive пакетов,если подтверждение не получено.</target>
        </trans-unit>
        <trans-unit id="0bc72a7cc11fac0901c32b98ed01a772c919d228" translate="yes" xml:space="preserve">
          <source>Number of seconds with no activity until the first keep-alive packet is sent.</source>
          <target state="translated">Количество секунд без активности до отправки первого пакета keep-alive.</target>
        </trans-unit>
        <trans-unit id="8dbf01ad892fef3cbce4edb89d69f81c5f0de924" translate="yes" xml:space="preserve">
          <source>Number of seconds.</source>
          <target state="translated">Количество секунд.</target>
        </trans-unit>
        <trans-unit id="c214b9bdd41903556e087fe149c81c976a0f4498" translate="yes" xml:space="preserve">
          <source>Number of significant &lt;code&gt;uint&lt;/code&gt;s which are used in storing this number. The absolute value of this &lt;code&gt;BigInt&lt;/code&gt; is always &amp;lt; 2&lt;sup&gt;32*uintLength&lt;/sup&gt;</source>
          <target state="translated">Количество значимых &lt;code&gt;uint&lt;/code&gt; которые используются для хранения этого числа. Абсолютное значение этого &lt;code&gt;BigInt&lt;/code&gt; всегда &amp;lt;2 &lt;sup&gt;32 * uintLength&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="4bdce26619426ae548a19f521bd66b45e9ee23da" translate="yes" xml:space="preserve">
          <source>Number of significant &lt;code&gt;ulong&lt;/code&gt;s which are used in storing this number. The absolute value of this &lt;code&gt;BigInt&lt;/code&gt; is always &amp;lt; 2&lt;sup&gt;64*ulongLength&lt;/sup&gt;</source>
          <target state="translated">Количество значимых &lt;code&gt;ulong&lt;/code&gt; которые используются при хранении этого числа. Абсолютное значение этого &lt;code&gt;BigInt&lt;/code&gt; всегда &amp;lt;2 &lt;sup&gt;64 * ulongLength&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="64b3ecb75c4dfda2a446b2f4f3b2871ac03979f3" translate="yes" xml:space="preserve">
          <source>Number of terms in the ORDER BY clause</source>
          <target state="translated">Количество терминов в пункте &quot;ЗАКАЗАТЬ ПО ЗАКАЗЧИКУ&quot;.</target>
        </trans-unit>
        <trans-unit id="5888fcbbf39aff14a132b0aa33a185d58c5a3831" translate="yes" xml:space="preserve">
          <source>Number of warnings diagnosed</source>
          <target state="translated">Количество диагностированных предупреждений</target>
        </trans-unit>
        <trans-unit id="561f30d62b1a6200b9732c30482b0463610d0115" translate="yes" xml:space="preserve">
          <source>Number of ways of associativity, eg:</source>
          <target state="translated">Количество способов ассоциативности,например:</target>
        </trans-unit>
        <trans-unit id="cd3b1b068542b26d45d6b3ef969ff75d18222dc4" translate="yes" xml:space="preserve">
          <source>Number used to identify the index</source>
          <target state="translated">Номер,используемый для идентификации индекса</target>
        </trans-unit>
        <trans-unit id="c25ed4b26440772f57732268d4988021acc7b988" translate="yes" xml:space="preserve">
          <source>Numbering of both row and col start at one and corresponds to the location in the file rather than any specified header. Special consideration should be made when there is failure to match the header see &lt;a href=&quot;#%20HeaderMismatchException&quot;&gt;&lt;code&gt; HeaderMismatchException&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">Нумерация строк и столбцов начинается с одного и соответствует местоположению в файле, а не указанному заголовку. Особое внимание следует уделить, когда не удается сопоставить заголовок, см. &lt;a href=&quot;#%20HeaderMismatchException&quot;&gt; &lt;code&gt; HeaderMismatchException&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="043b9f0681a8dd4b8f64327c866f7055557d443c" translate="yes" xml:space="preserve">
          <source>Numbers in back references are encoded with base 26 by upper case letters &lt;b&gt;A&lt;/b&gt; - &lt;b&gt;Z&lt;/b&gt; for higher digits but lower case letters &lt;b&gt;a&lt;/b&gt; - &lt;b&gt;z&lt;/b&gt; for the last digit.</source>
          <target state="translated">Числа в обратных ссылках кодируются с помощью базы 26 заглавными буквами &lt;b&gt;A&lt;/b&gt; - &lt;b&gt;Z&lt;/b&gt; для старших цифр, но строчными буквами &lt;b&gt;a&lt;/b&gt; - &lt;b&gt;z&lt;/b&gt; для последней цифры.</target>
        </trans-unit>
        <trans-unit id="30a62380404b3b267a5c4e21b5e111455d09031e" translate="yes" xml:space="preserve">
          <source>Numeric</source>
          <target state="translated">Numeric</target>
        </trans-unit>
        <trans-unit id="7fcd839a0c3a9bfde44006032939e1a31c5868bc" translate="yes" xml:space="preserve">
          <source>Numeric options.</source>
          <target state="translated">Числовые опции.</target>
        </trans-unit>
        <trans-unit id="270e362a8583599d25044ab02934c1f0544031a5" translate="yes" xml:space="preserve">
          <source>O(n) Exactly &lt;code&gt;n - 1&lt;/code&gt; comparisons are needed.</source>
          <target state="translated">O (n) Требуется ровно &lt;code&gt;n - 1&lt;/code&gt; сравнений.</target>
        </trans-unit>
        <trans-unit id="8ebce3c4279d1345740690ecbe2cb5d8468c3d5b" translate="yes" xml:space="preserve">
          <source>ODBC API Reference on MSN Online</source>
          <target state="translated">ODBC API Ссылка на MSN Онлайн</target>
        </trans-unit>
        <trans-unit id="8b5eff42232707634349636f92675ea68779d3cd" translate="yes" xml:space="preserve">
          <source>OEM</source>
          <target state="translated">OEM</target>
        </trans-unit>
        <trans-unit id="557b1e3dfa4d6c186eed45510ad708c5febe6794" translate="yes" xml:space="preserve">
          <source>OOP API</source>
          <target state="translated">ООП API</target>
        </trans-unit>
        <trans-unit id="6921936df35e74323acb623a59db8353c959e5ec" translate="yes" xml:space="preserve">
          <source>OOP API CRC32 implementation. See &lt;code&gt;std.digest&lt;/code&gt; for differences between template and OOP API.</source>
          <target state="translated">Реализация ООП API CRC32. См. &lt;code&gt;std.digest&lt;/code&gt; для различий между шаблоном и ООП API.</target>
        </trans-unit>
        <trans-unit id="ecc5ce592d40207f7cf51c58cc165c87d26dfe71" translate="yes" xml:space="preserve">
          <source>OOP API CRC64-ECMA implementation. See &lt;code&gt;std.digest.digest&lt;/code&gt; for differences between template and OOP API.</source>
          <target state="translated">Реализация ООП API CRC64-ECMA. См. &lt;code&gt;std.digest.digest&lt;/code&gt; для различия между шаблоном и ООП API.</target>
        </trans-unit>
        <trans-unit id="f12b177dd99fc261f8c72b1e0213b2e6e7b80d50" translate="yes" xml:space="preserve">
          <source>OOP API CRC64-ISO implementation. See &lt;code&gt;std.digest.digest&lt;/code&gt; for differences between template and OOP API.</source>
          <target state="translated">Реализация ООП API CRC64-ISO. См. &lt;code&gt;std.digest.digest&lt;/code&gt; для различия между шаблоном и ООП API.</target>
        </trans-unit>
        <trans-unit id="4435eff46cba37f8974382bdc1da051288640e06" translate="yes" xml:space="preserve">
          <source>OOP API MD5 implementation. See &lt;code&gt;std.digest&lt;/code&gt; for differences between template and OOP API.</source>
          <target state="translated">Реализация ООП API MD5. См. &lt;code&gt;std.digest&lt;/code&gt; для различий между шаблоном и ООП API.</target>
        </trans-unit>
        <trans-unit id="f868a309d4075e7e6d29d7ba2d8755b13e54f79b" translate="yes" xml:space="preserve">
          <source>OOP API RIPEMD160 implementation. See &lt;code&gt;std.digest&lt;/code&gt; for differences between template and OOP API.</source>
          <target state="translated">Реализация ООП API RIPEMD160. См. &lt;code&gt;std.digest&lt;/code&gt; для различий между шаблоном и ООП API.</target>
        </trans-unit>
        <trans-unit id="c7dfbc3d2d3fbec054ee506d60faed523760f1e0" translate="yes" xml:space="preserve">
          <source>OOP API SHA1 and SHA2 implementations. See &lt;code&gt;std.digest&lt;/code&gt; for differences between template and OOP API.</source>
          <target state="translated">ООП API реализации SHA1 и SHA2. См. &lt;code&gt;std.digest&lt;/code&gt; для различий между шаблоном и ООП API.</target>
        </trans-unit>
        <trans-unit id="df7ef594df8b60ce4c07238616bdf42e033977bc" translate="yes" xml:space="preserve">
          <source>OPER &lt;code&gt;op&lt;/code&gt;</source>
          <target state="translated">OPER &lt;code&gt;op&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6259a657ea98cbfae3336dd19e405644a8e8c23e" translate="yes" xml:space="preserve">
          <source>OR CSX bits to &lt;code&gt;this&lt;/code&gt;</source>
          <target state="translated">ИЛИ биты CSX к &lt;code&gt;this&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7ea1a5ba1dffba576fe0a188bb466f1a65ef5c2d" translate="yes" xml:space="preserve">
          <source>OS Interface File Virtual Methods Object</source>
          <target state="translated">Файл интерфейса ОС Файл виртуальных методов Объект</target>
        </trans-unit>
        <trans-unit id="2fdd9f0dd04e20b2da0185c9864ac62e0fd49b33" translate="yes" xml:space="preserve">
          <source>OS Interface Object</source>
          <target state="translated">Объект интерфейса ОС</target>
        </trans-unit>
        <trans-unit id="e502b880ac4721322e02bb29b5215f15ab6c97e9" translate="yes" xml:space="preserve">
          <source>OS Interface Open File Handle</source>
          <target state="translated">Интерфейс ОС Открыть файловую ручку</target>
        </trans-unit>
        <trans-unit id="1c57744725eab7d96ac80db864a93aca09030a50" translate="yes" xml:space="preserve">
          <source>OS Specific Code</source>
          <target state="translated">Специфический код ОС</target>
        </trans-unit>
        <trans-unit id="9954b5cb646af3e1d62f8936ee802e399e164efe" translate="yes" xml:space="preserve">
          <source>OS X</source>
          <target state="translated">ОС X</target>
        </trans-unit>
        <trans-unit id="816f2c01635dcd191ef472eb81837ab4764ba659" translate="yes" xml:space="preserve">
          <source>OS error code.</source>
          <target state="translated">Код ошибки операционной системы.</target>
        </trans-unit>
        <trans-unit id="c5964b15914a0f20d38705c40412632aaea2180a" translate="yes" xml:space="preserve">
          <source>OS/host/cpu/machine when configured</source>
          <target state="translated">ОС/хост/процессор/машина при настройке</target>
        </trans-unit>
        <trans-unit id="35acf96a362a15aaca94167666a925df3fe080f1" translate="yes" xml:space="preserve">
          <source>ObjcClassDeclaration &lt;strong id=&quot;objc&quot;&gt;objc&lt;/strong&gt;;</source>
          <target state="translated">ObjcClassDeclaration &lt;strong id=&quot;objc&quot;&gt;objc&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="5e48ba2904324f04728f2234033c5d7007795ec3" translate="yes" xml:space="preserve">
          <source>ObjcSelector* &lt;strong id=&quot;selector&quot;&gt;selector&lt;/strong&gt;;</source>
          <target state="translated">ObjcSelector * &lt;strong id=&quot;selector&quot;&gt;селектор&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="a124d6d00ec7f85d42323b621f494c2cd12184cc" translate="yes" xml:space="preserve">
          <source>Object &lt;code&gt;switchObject&lt;/code&gt;</source>
          <target state="translated">Объект &lt;code&gt;switchObject&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ece8bdfc268974984201b8d682070a5edffce7a2" translate="yes" xml:space="preserve">
          <source>Object &lt;strong id=&quot;_d_newclass&quot;&gt;_d_newclass&lt;/strong&gt;(const ClassInfo ci);</source>
          <target state="translated">Объект &lt;strong id=&quot;_d_newclass&quot;&gt;_d_newclass&lt;/strong&gt; (const ClassInfo ci);</target>
        </trans-unit>
        <trans-unit id="ddc38e05a9ed06d0994faa2bc5bcaf09ff87a879" translate="yes" xml:space="preserve">
          <source>Object &lt;strong id=&quot;_d_toObject&quot;&gt;_d_toObject&lt;/strong&gt;(void* p);</source>
          <target state="translated">Объект &lt;strong id=&quot;_d_toObject&quot;&gt;_d_toObject&lt;/strong&gt; (void * p);</target>
        </trans-unit>
        <trans-unit id="732daf7f402fda71346fc5973740764129bee2f3" translate="yes" xml:space="preserve">
          <source>Object Pinning and a Moving Garbage Collector</source>
          <target state="translated">Пиннинг объектов и передвижной сборщик мусора</target>
        </trans-unit>
        <trans-unit id="3ecabb74a2c93b43f3577af0a26092db2efdcfb6" translate="yes" xml:space="preserve">
          <source>Object completely outside of query region</source>
          <target state="translated">Объект полностью за пределами области запроса</target>
        </trans-unit>
        <trans-unit id="6cf94223be079da3fbcb13c64cfc6ed135fdad80" translate="yes" xml:space="preserve">
          <source>Object fully contained within query region</source>
          <target state="translated">Объект полностью содержится в области запроса</target>
        </trans-unit>
        <trans-unit id="cb01dc2819651d214c0a4eb512d158aeef9a6b70" translate="yes" xml:space="preserve">
          <source>Object partially overlaps query region</source>
          <target state="translated">Объект частично перекрывает область запроса</target>
        </trans-unit>
        <trans-unit id="0ded44e81d1421792f7fc6112d1cfca42b60744c" translate="yes" xml:space="preserve">
          <source>Object representing the entire archive. ZipArchives are collections of ArchiveMembers.</source>
          <target state="translated">Объект,представляющий весь архив.ZipArchives-это коллекции ArchiveMember.</target>
        </trans-unit>
        <trans-unit id="ecae80279dd422f8944cb69fbb2f5b597c9f19cc" translate="yes" xml:space="preserve">
          <source>Object to string conversion calls &lt;code&gt;toString&lt;/code&gt; against the object or returns &lt;code&gt;&quot;null&quot;&lt;/code&gt; if the object is null.</source>
          <target state="translated">Преобразование объекта в строку вызывает &lt;code&gt;toString&lt;/code&gt; для объекта или возвращает &lt;code&gt;&quot;null&quot;&lt;/code&gt; если объект равен нулю.</target>
        </trans-unit>
        <trans-unit id="034dc42255fa6bafb6326377d2645e95c07ee389" translate="yes" xml:space="preserve">
          <source>Object to throw</source>
          <target state="translated">Объект для броска</target>
        </trans-unit>
        <trans-unit id="b72ead77472cd34b4701daf055c4eb79c6a81e4a" translate="yes" xml:space="preserve">
          <source>Object which contains &lt;a href=&quot;std_stdio#File&quot;&gt;&lt;code&gt;std.stdio.File&lt;/code&gt;&lt;/a&gt; handles that allow communication with a child process through its standard streams.</source>
          <target state="translated">Объект, который содержит &lt;a href=&quot;std_stdio#File&quot;&gt; &lt;code&gt;std.stdio.File&lt;/code&gt; &lt;/a&gt; дескрипторы которые обеспечивают связь с дочерним процессом через его стандартные потоки.</target>
        </trans-unit>
        <trans-unit id="a5f374a039e07f85b267c41c18b5e4564272df79" translate="yes" xml:space="preserve">
          <source>Object-to-object conversions by dynamic casting throw exception when the source is non-null and the target is null.</source>
          <target state="translated">Преобразование объекта в объект путем динамического исключения броска броска,когда источник не является нулевым,а цель-нулевой.</target>
        </trans-unit>
        <trans-unit id="99e277264a83dccb794e12be27e133211daf2991" translate="yes" xml:space="preserve">
          <source>Objective-C Linkage</source>
          <target state="translated">Связь &quot;Цель-С</target>
        </trans-unit>
        <trans-unit id="b0459b002183c075496ce13224dd6546ac66c7e6" translate="yes" xml:space="preserve">
          <source>Objective-C class reference expression.</source>
          <target state="translated">Ссылочное выражение класса &quot;Цель-С&quot;.</target>
        </trans-unit>
        <trans-unit id="54d74c41d0f52e19ffb24eaa1df21cfde1c3609d" translate="yes" xml:space="preserve">
          <source>Objective-C implicit selector parameter</source>
          <target state="translated">Задача-С неявный параметр селектора</target>
        </trans-unit>
        <trans-unit id="215e38e2c0c8e6165a5d19476eb05da7a2d96f1b" translate="yes" xml:space="preserve">
          <source>Objective-C linkage is achieved by attaching the &lt;code&gt;extern (Objective-C)&lt;/code&gt; attribute to a class. Example:</source>
          <target state="translated">Связь Objective-C достигается путем прикрепления &lt;code&gt;extern (Objective-C)&lt;/code&gt; атрибута к классу. Пример:</target>
        </trans-unit>
        <trans-unit id="d0b17723f1650f620f6ed1dc84f453d083a59561" translate="yes" xml:space="preserve">
          <source>Objective-C method selector (member function only)</source>
          <target state="translated">Селектор метода &quot;Цель-С&quot; (только функция-член)</target>
        </trans-unit>
        <trans-unit id="72a83add2c5ede877c10d23f302d3e17accbadab" translate="yes" xml:space="preserve">
          <source>Objects</source>
          <target state="translated">Objects</target>
        </trans-unit>
        <trans-unit id="8b9e450214fb7eb03791dd522d5ab5d9060d4e6c" translate="yes" xml:space="preserve">
          <source>Objects of types &lt;code&gt;string&lt;/code&gt;, &lt;code&gt;wstring&lt;/code&gt;, and &lt;code&gt;dstring&lt;/code&gt; are value types and cannot be mutated element-by-element. For using mutation during building strings, use &lt;code&gt;char[]&lt;/code&gt;, &lt;code&gt;wchar[]&lt;/code&gt;, or &lt;code&gt;dchar[]&lt;/code&gt;. The &lt;code&gt;xxxstring&lt;/code&gt; types are preferable because they don't exhibit undesired aliasing, thus making code more robust.</source>
          <target state="translated">Объекты типов &lt;code&gt;string&lt;/code&gt; , &lt;code&gt;wstring&lt;/code&gt; и &lt;code&gt;dstring&lt;/code&gt; являются типами значений и не могут быть видоизменены по элементам. Для использования мутации во время построения строк используйте &lt;code&gt;char[]&lt;/code&gt; , &lt;code&gt;wchar[]&lt;/code&gt; или &lt;code&gt;dchar[]&lt;/code&gt; . В &lt;code&gt;xxxstring&lt;/code&gt; типов являются предпочтительными , поскольку они не проявляют нежелательную ступенчатость, что делает код более устойчивым.</target>
        </trans-unit>
        <trans-unit id="26fcfe297b1b850d8b9dff28561f4b9b1ce56f00" translate="yes" xml:space="preserve">
          <source>Objects referenced from the data segment never get collected by the gc.</source>
          <target state="translated">Объекты,на которые ссылаются из сегмента данных,никогда не собираются gc.</target>
        </trans-unit>
        <trans-unit id="6a4f0f9bbfc4a160ef93e1d60e94318e4b881b61" translate="yes" xml:space="preserve">
          <source>Objects* &lt;code&gt;tiargs&lt;/code&gt;</source>
          <target state="translated">Объекты * &lt;code&gt;tiargs&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ecc00047669613c320e2b8a081aa7c82aa8f91c6" translate="yes" xml:space="preserve">
          <source>Objects* &lt;strong id=&quot;opToArg&quot;&gt;opToArg&lt;/strong&gt;(Scope* sc, TOK op);</source>
          <target state="translated">Объекты * &lt;strong id=&quot;opToArg&quot;&gt;opToArg&lt;/strong&gt; (Scope * sc, TOK op);</target>
        </trans-unit>
        <trans-unit id="1cd772265dd23d3a0ed79c300af6b5bbcbce033e" translate="yes" xml:space="preserve">
          <source>Observer pattern</source>
          <target state="translated">Наблюдательный шаблон</target>
        </trans-unit>
        <trans-unit id="f036e380a093cadb7b7384e4b591b8c75c1ba145" translate="yes" xml:space="preserve">
          <source>Obtain Aggregate Function Context</source>
          <target state="translated">Получить контекст функции агрегата</target>
        </trans-unit>
        <trans-unit id="077c26082590279e5f39ea62e9c34ff3f445683c" translate="yes" xml:space="preserve">
          <source>Obtain a textual representation of this InversionList in form of open-right intervals.</source>
          <target state="translated">Получить текстовое представление этого InversionList'а в виде открытых правых интервалов.</target>
        </trans-unit>
        <trans-unit id="9955193cbfed75c0d6fc873fae9a5c26061d84dc" translate="yes" xml:space="preserve">
          <source>Obtaining SQL Function Parameter Values</source>
          <target state="translated">Получение значений параметров SQL-функции</target>
        </trans-unit>
        <trans-unit id="6149db4fff5ac75f11f401b9918f00840c3dba03" translate="yes" xml:space="preserve">
          <source>Obtains a set that is the inversion of this set.</source>
          <target state="translated">Получает набор,который является инверсией этого набора.</target>
        </trans-unit>
        <trans-unit id="bc3e5f94349cc9f5746dcb1e65b92691d9d6aed1" translate="yes" xml:space="preserve">
          <source>Obtains a subclass of EncodingScheme which is capable of encoding and decoding the named encoding scheme.</source>
          <target state="translated">Получает подкласс EncodingScheme,который способен кодировать и декодировать именованную схему кодирования.</target>
        </trans-unit>
        <trans-unit id="ba7c16645de19d70bbf51df86b8b25f634669237" translate="yes" xml:space="preserve">
          <source>Obtains the next value from the underlying function.</source>
          <target state="translated">Получает следующее значение из базовой функции.</target>
        </trans-unit>
        <trans-unit id="10500e54805775e3d661be35724e87f0b1dbc4c9" translate="yes" xml:space="preserve">
          <source>Octal</source>
          <target state="translated">Octal</target>
        </trans-unit>
        <trans-unit id="0daf1c539c30bf40547a057c7075740c9c50e77c" translate="yes" xml:space="preserve">
          <source>Odd numbers, using function in string form:</source>
          <target state="translated">Нечетные числа,используя функцию в виде строки:</target>
        </trans-unit>
        <trans-unit id="1a245d243a2742055ac1b3dfb70948e781eb208b" translate="yes" xml:space="preserve">
          <source>Of course the tuple types can be used to declare things:</source>
          <target state="translated">Конечно,типы кортежей можно использовать для объявления вещей:</target>
        </trans-unit>
        <trans-unit id="62fa90ec5148fa0e0f3ac3986984deff76df1822" translate="yes" xml:space="preserve">
          <source>Of course, the real value of UDAs is to be able to create user-defined types with specific values. Having attribute values of basic types does not scale. The attribute tuples can be manipulated like any other tuple, and can be passed as the argument list to a template.</source>
          <target state="translated">Конечно,реальное значение UDA состоит в том,чтобы иметь возможность создавать пользовательские типы с определенными значениями.Наличие значений атрибутов базовых типов не масштабируется.Атрибутом кортежей можно манипулировать,как и любым другим кортежом,и передавать в шаблон в качестве списка аргументов.</target>
        </trans-unit>
        <trans-unit id="11fc1982f3e473014c90d340826a6dd1a575af7b" translate="yes" xml:space="preserve">
          <source>Of course, transformations that would alter side effects are also invalid.</source>
          <target state="translated">Конечно,трансформации,которые изменят побочные эффекты,также недействительны.</target>
        </trans-unit>
        <trans-unit id="a25b627c05fa6788c3c361e7833cb2ca525e070c" translate="yes" xml:space="preserve">
          <source>Offers all of allocator's memory to the caller, so it's usually defined by fixed-size allocators. If the allocator is currently NOT managing any memory, then &lt;code&gt;allocateAll()&lt;/code&gt; shall allocate and return all memory available to the allocator, and subsequent calls to all allocation primitives should not succeed (e.g. &lt;code&gt;allocate&lt;/code&gt; shall return &lt;code&gt;null&lt;/code&gt; etc). Otherwise, &lt;code&gt;allocateAll&lt;/code&gt; only works on a best-effort basis, and the allocator is allowed to return &lt;code&gt;null&lt;/code&gt; even if does have available memory. Memory allocated with &lt;code&gt;allocateAll&lt;/code&gt; is not otherwise special (e.g. can be reallocated or deallocated with the usual primitives, if defined).</source>
          <target state="translated">Предоставляет вызывающей стороне всю память распределителя, поэтому обычно она определяется распределителями фиксированного размера. Если распределитель в настоящее время НЕ управляет какой-либо памятью, &lt;code&gt;allocateAll()&lt;/code&gt; должен выделить и вернуть всю память, доступную распределителю, и последующие вызовы для всех примитивов выделения не должны быть успешными (например, &lt;code&gt;allocate&lt;/code&gt; возвращает &lt;code&gt;null&lt;/code&gt; и т. Д.). В противном случае &lt;code&gt;allocateAll&lt;/code&gt; работает только на основе максимальных усилий, и распределителю разрешается возвращать &lt;code&gt;null&lt;/code&gt; даже если у него есть доступная память. Память выделена с помощью &lt;code&gt;allocateAll&lt;/code&gt; , не является чем-то особенным (например, может быть перераспределена или освобождена с помощью обычных примитивов, если они определены).</target>
        </trans-unit>
        <trans-unit id="b8e254b5857bb996007e86e42f91a92a6fe49956" translate="yes" xml:space="preserve">
          <source>Offset &lt;code&gt;offset&lt;/code&gt;</source>
          <target state="translated">Смещение &lt;code&gt;offset&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8e8c6ead4fb6cb7f2c973d4188b3da2d45612843" translate="yes" xml:space="preserve">
          <source>Offset from symbol</source>
          <target state="translated">Смещение от символа</target>
        </trans-unit>
        <trans-unit id="5244f072c2bc40432333ca8bae11450eb7f1cd34" translate="yes" xml:space="preserve">
          <source>Offset in bytes of field from beginning of struct</source>
          <target state="translated">Смещение в байтах поля от начала структуры</target>
        </trans-unit>
        <trans-unit id="8e33b5cfe09a13b536b5161336efb8ad6830ec37" translate="yes" xml:space="preserve">
          <source>Offset is relative to the beginning</source>
          <target state="translated">Смещение относительно начала</target>
        </trans-unit>
        <trans-unit id="99bd2ecc0f5280a8901a4ed0e050abb97a414e2f" translate="yes" xml:space="preserve">
          <source>Offset is relative to the current position</source>
          <target state="translated">Смещение относительно текущей позиции</target>
        </trans-unit>
        <trans-unit id="c47d1f5c9f6a5ff920bded63466f4748ace14da1" translate="yes" xml:space="preserve">
          <source>Offset is relative to the end</source>
          <target state="translated">Смещение относительно конца</target>
        </trans-unit>
        <trans-unit id="b485855fd43092cb4450e8db11b22aad8322f41e" translate="yes" xml:space="preserve">
          <source>Offset of member from start of object</source>
          <target state="translated">Смещение участника от начала объекта</target>
        </trans-unit>
        <trans-unit id="c21c3314a2e6470603bd3c8f84047cb484b50ba5" translate="yes" xml:space="preserve">
          <source>Ogham</source>
          <target state="translated">Ogham</target>
        </trans-unit>
        <trans-unit id="93a70c2b646c1ffdd73eb435b17f35f88e31d121" translate="yes" xml:space="preserve">
          <source>Ok for sqlite3_open_v2()</source>
          <target state="translated">Ok для sqlite3_open_v2()</target>
        </trans-unit>
        <trans-unit id="c6e702e40cc2159bb79f5ccec78973bfdae19eaa" translate="yes" xml:space="preserve">
          <source>Ol Chiki</source>
          <target state="translated">Ол Чики</target>
        </trans-unit>
        <trans-unit id="5f8e3c9a997d8c6ac6d8e0cee37f365cfccbf2c1" translate="yes" xml:space="preserve">
          <source>Ol_Chiki</source>
          <target state="translated">Ol_Chiki</target>
        </trans-unit>
        <trans-unit id="833ad68a2db2dced5d16ece61a3b16b08ed22e87" translate="yes" xml:space="preserve">
          <source>Old API for replacement, operation depends on flags of pattern &lt;code&gt;re&lt;/code&gt;. With &quot;g&quot; flag it performs the equivalent of &lt;a href=&quot;#replaceAll&quot;&gt;&lt;code&gt;replaceAll&lt;/code&gt;&lt;/a&gt; otherwise it works the same as &lt;a href=&quot;#replaceFirst&quot;&gt;&lt;code&gt;replaceFirst&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Старый API для замены, работа зависит от флагов шаблона &lt;code&gt;re&lt;/code&gt; . С флагом &amp;laquo;g&amp;raquo; он выполняет эквивалент &lt;a href=&quot;#replaceAll&quot;&gt; &lt;code&gt;replaceAll&lt;/code&gt; ,в&lt;/a&gt; противном случае он работает так же, как &lt;a href=&quot;#replaceFirst&quot;&gt; &lt;code&gt;replaceFirst&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="02359709d1a195a0128ca35b8d6f25fc1d92a7a7" translate="yes" xml:space="preserve">
          <source>Old Italic</source>
          <target state="translated">старый курсив</target>
        </trans-unit>
        <trans-unit id="f3e69230d34ad29f5b4402e08ffd22711717b552" translate="yes" xml:space="preserve">
          <source>Old Persian</source>
          <target state="translated">старый перс</target>
        </trans-unit>
        <trans-unit id="7261101e4dfe036338fab16980dc651a26f87786" translate="yes" xml:space="preserve">
          <source>Old South Arabian</source>
          <target state="translated">старый южный аравийский</target>
        </trans-unit>
        <trans-unit id="7e504d6f4cf5594ab525495944059dd3ab354803" translate="yes" xml:space="preserve">
          <source>Old Turkic</source>
          <target state="translated">древнетюркский</target>
        </trans-unit>
        <trans-unit id="6affc5b51d0bdbad1e9ae41385b26f980a6f3eb2" translate="yes" xml:space="preserve">
          <source>Old code can be reused with new code without having to modify the old code to be compatible with new error types.</source>
          <target state="translated">Старый код может быть использован повторно с новым кодом без необходимости изменять старый код,чтобы быть совместимым с новыми типами ошибок.</target>
        </trans-unit>
        <trans-unit id="1e3a00bb450715730bc19d8deeddada5bc22e8d7" translate="yes" xml:space="preserve">
          <source>Old code can decide to catch all errors, or only specific ones, propagating the rest upwards. In any case, there is no more need to correlate error numbers with messages, the correct message is always supplied.</source>
          <target state="translated">Старый код может решить поймать все ошибки,или только специфические,распространяя остальные вверх.В любом случае,больше нет необходимости соотносить номера ошибок с сообщениями,всегда поставляется правильное сообщение.</target>
        </trans-unit>
        <trans-unit id="d31721795f21dfce26688a7f8239a17ca4259705" translate="yes" xml:space="preserve">
          <source>Old_Italic</source>
          <target state="translated">Old_Italic</target>
        </trans-unit>
        <trans-unit id="40f6b23336b20230fad65810979b94941509719d" translate="yes" xml:space="preserve">
          <source>Old_Persian</source>
          <target state="translated">Old_Persian</target>
        </trans-unit>
        <trans-unit id="338432c6b8828a6dc79884aa878e0a2867c42479" translate="yes" xml:space="preserve">
          <source>Old_South_Arabian</source>
          <target state="translated">Old_South_Arabian</target>
        </trans-unit>
        <trans-unit id="3641abb7a588932eef54e644e9d1dff8f948abbf" translate="yes" xml:space="preserve">
          <source>Old_Turkic</source>
          <target state="translated">Old_Turkic</target>
        </trans-unit>
        <trans-unit id="80b8a312a311fc13e2451870de177f83f79912eb" translate="yes" xml:space="preserve">
          <source>On ARM FPU registers are not saved if druntime was compiled as ARM_SoftFloat. If such a build is used on a ARM_SoftFP system which actually has got a FPU and other libraries are using the FPU registers (other code is compiled as ARM_SoftFP) this can cause problems. Druntime must be compiled as ARM_SoftFP in this case.</source>
          <target state="translated">На ARM FPU регистры не сохраняются,если druntime был скомпилирован как ARM_SoftFloat.Если такая сборка используется на системе ARM_SoftFP,которая на самом деле имеет FPU,а другие библиотеки используют регистры FPU (другой код компилируется как ARM_SoftFP),то это может привести к проблемам.В этом случае Druntime должен быть скомпилирован как ARM_SoftFP.</target>
        </trans-unit>
        <trans-unit id="b5359584dd1684a0f13decf91973ad69920c046f" translate="yes" xml:space="preserve">
          <source>On POSIX systems &lt;code&gt;deallocate&lt;/code&gt; calls &lt;code&gt;mmap&lt;/code&gt; with `MAP_FIXED' a second time to decommit the memory. On Windows, it uses &lt;code&gt;VirtualFree&lt;/code&gt; with &lt;code&gt;MEM_DECOMMIT&lt;/code&gt;.</source>
          <target state="translated">В системах POSIX &lt;code&gt;deallocate&lt;/code&gt; вызовы &lt;code&gt;mmap&lt;/code&gt; с помощью `MAP_FIXED 'во второй раз, чтобы извлечь память. В Windows он использует &lt;code&gt;VirtualFree&lt;/code&gt; с &lt;code&gt;MEM_DECOMMIT&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="11fb04b0e94adc4b37deadc7deec14c85b8112c4" translate="yes" xml:space="preserve">
          <source>On POSIX systems, the signals SIGUSR1 and SIGUSR2 are reserved by this module for use in the garbage collector implementation. Typically, they will be used to stop and resume other threads when performing a collection, but an implementation may choose not to use this mechanism (or not stop the world at all, in the case of concurrent garbage collectors).</source>
          <target state="translated">В системах POSIX сигналы SIGUSR1 и SIGUSR2 зарезервированы этим модулем для использования в реализации мусорного контейнера.Как правило,они используются для остановки и возобновления других потоков при выполнении сборки,но реализация может решить не использовать этот механизм (или не останавливать мир вообще,в случае одновременных сборщиков мусора).</target>
        </trans-unit>
        <trans-unit id="634f31050bfb94bec5bce1f9c660501b7d894e03" translate="yes" xml:space="preserve">
          <source>On POSIX, &lt;code&gt;filename&lt;/code&gt; may not contain a forward slash (&lt;code&gt;'/'&lt;/code&gt;) or the null character (&lt;code&gt;'\0'&lt;/code&gt;).</source>
          <target state="translated">В POSIX &lt;code&gt;filename&lt;/code&gt; не может содержать косую черту ( &lt;code&gt;'/'&lt;/code&gt; ) или нулевой символ ( &lt;code&gt;'\0'&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="d0e0b90e35d552ed53d8451ae83171f83caea058" translate="yes" xml:space="preserve">
          <source>On POSIX, &lt;code&gt;userShell&lt;/code&gt; returns the contents of the SHELL environment variable, if it exists and is non-empty. Otherwise, it returns the result of &lt;a href=&quot;#nativeShell&quot;&gt;&lt;code&gt;nativeShell&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">В POSIX &lt;code&gt;userShell&lt;/code&gt; возвращает содержимое переменной среды SHELL, если она существует и не является пустой. В противном случае он возвращает результат &lt;a href=&quot;#nativeShell&quot;&gt; &lt;code&gt;nativeShell&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4a3691fb3a429f6f16c74dbb648019d4ea541a0d" translate="yes" xml:space="preserve">
          <source>On POSIX, an absolute path starts at the root directory. (In fact, &lt;code&gt;_isAbsolute&lt;/code&gt; is just an alias for &lt;a href=&quot;#isRooted&quot;&gt;&lt;code&gt;isRooted&lt;/code&gt;&lt;/a&gt;.)</source>
          <target state="translated">В POSIX абсолютный путь начинается с корневого каталога. (На самом деле &lt;code&gt;_isAbsolute&lt;/code&gt; - это просто псевдоним &lt;a href=&quot;#isRooted&quot;&gt; &lt;code&gt;isRooted&lt;/code&gt; &lt;/a&gt; .)</target>
        </trans-unit>
        <trans-unit id="9328600ddd5da0c6e6153313212760496891e5c2" translate="yes" xml:space="preserve">
          <source>On POSIX, open &lt;a href=&quot;http://en.wikipedia.org/wiki/File_descriptor&quot;&gt;file descriptors&lt;/a&gt; are by default inherited by the child process. As this may lead to subtle bugs when pipes or multiple threads are involved, &lt;a href=&quot;#spawnProcess&quot;&gt;&lt;code&gt;spawnProcess&lt;/code&gt;&lt;/a&gt; ensures that all file descriptors except the ones that correspond to standard input/output/error are closed in the child process when it starts. Use &lt;code&gt;inheritFDs&lt;/code&gt; to prevent this.</source>
          <target state="translated">В POSIX &lt;a href=&quot;http://en.wikipedia.org/wiki/File_descriptor&quot;&gt;дескрипторы&lt;/a&gt; открытых файлов по умолчанию наследуются дочерним процессом. Поскольку это может привести к незначительным ошибкам, когда задействованы каналы или несколько потоков, &lt;a href=&quot;#spawnProcess&quot;&gt; &lt;code&gt;spawnProcess&lt;/code&gt; &lt;/a&gt; гарантирует, что все файловые дескрипторы, кроме тех, которые соответствуют стандартному вводу / выводу / ошибке, закрываются в дочернем процессе при его запуске. Используйте для этого &lt;code&gt;inheritFDs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b54b1b6297751d78c6140482c90352354099820f" translate="yes" xml:space="preserve">
          <source>On Posix systems, if &lt;code&gt;attrIsFile&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, that indicates that the file is a regular file (e.g. not a block not device). So, on Posix systems, it's possible for both &lt;code&gt;attrIsFile&lt;/code&gt; and &lt;code&gt;attrIsDir&lt;/code&gt; to be &lt;code&gt;false&lt;/code&gt; for a particular file (in which case, it's a special file). If a file is a special file, you can use the attributes to check what type of special file it is (see the man page for &lt;code&gt;stat&lt;/code&gt; for more information).</source>
          <target state="translated">В системах Posix, если &lt;code&gt;attrIsFile&lt;/code&gt; равен &lt;code&gt;true&lt;/code&gt; , это означает, что файл является обычным файлом (например, не блоком, а устройством). Таким образом, в системах Posix оба &lt;code&gt;attrIsFile&lt;/code&gt; и &lt;code&gt;attrIsDir&lt;/code&gt; могут иметь значение &lt;code&gt;false&lt;/code&gt; для определенного файла (в этом случае это специальный файл). Если файл является специальным файлом, вы можете использовать атрибуты, чтобы проверить, к какому типу он относится (для получения дополнительной информации см. Справочную страницу для &lt;code&gt;stat&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="a2aa8805027298573b997badd9027bbd45a19fdf" translate="yes" xml:space="preserve">
          <source>On Posix systems, if &lt;code&gt;isFile&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, that indicates that the file is a regular file (e.g. not a block not device). So, on Posix systems, it's possible for both &lt;code&gt;isFile&lt;/code&gt; and &lt;code&gt;isDir&lt;/code&gt; to be &lt;code&gt;false&lt;/code&gt; for a particular file (in which case, it's a special file). You can use &lt;code&gt;attributes&lt;/code&gt; or &lt;code&gt;statBuf&lt;/code&gt; to get more information about a special file (see the stat man page for more details).</source>
          <target state="translated">В системах Posix, если &lt;code&gt;isFile&lt;/code&gt; имеет значение &lt;code&gt;true&lt;/code&gt; , это означает, что файл является обычным файлом (например, не блоком, а устройством). Таким образом, в системах Posix для &lt;code&gt;isFile&lt;/code&gt; и &lt;code&gt;isDir&lt;/code&gt; может быть значение &lt;code&gt;false&lt;/code&gt; для определенного файла (в этом случае это специальный файл). Вы можете использовать &lt;code&gt;attributes&lt;/code&gt; или &lt;code&gt;statBuf&lt;/code&gt; , чтобы получить больше информации о специальном файле (см. Man-страницу stat для более подробной информации).</target>
        </trans-unit>
        <trans-unit id="7fd705ae13245d54c6aa5a4b39418f4284c68396" translate="yes" xml:space="preserve">
          <source>On Posix systems, if &lt;code&gt;isFile&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, that indicates that the file is a regular file (e.g. not a block not device). So, on Posix systems, it's possible for both &lt;code&gt;isFile&lt;/code&gt; and &lt;code&gt;isDir&lt;/code&gt; to be &lt;code&gt;false&lt;/code&gt; for a particular file (in which case, it's a special file). You can use &lt;code&gt;getAttributes&lt;/code&gt; to get the attributes to figure out what type of special it is, or you can use &lt;code&gt;DirEntry&lt;/code&gt; to get at its &lt;code&gt;statBuf&lt;/code&gt;, which is the result from &lt;code&gt;stat&lt;/code&gt;. In either case, see the man page for &lt;code&gt;stat&lt;/code&gt; for more information.</source>
          <target state="translated">В системах Posix, если &lt;code&gt;isFile&lt;/code&gt; имеет значение &lt;code&gt;true&lt;/code&gt; , это означает, что файл является обычным файлом (например, не блоком, а устройством). Таким образом, в системах Posix для &lt;code&gt;isFile&lt;/code&gt; и &lt;code&gt;isDir&lt;/code&gt; может быть значение &lt;code&gt;false&lt;/code&gt; для определенного файла (в этом случае это специальный файл). Вы можете использовать &lt;code&gt;getAttributes&lt;/code&gt; , чтобы получить атрибуты, чтобы выяснить, какой это особенный тип, или вы можете использовать &lt;code&gt;DirEntry&lt;/code&gt; , чтобы получить его &lt;code&gt;statBuf&lt;/code&gt; , который является результатом &lt;code&gt;stat&lt;/code&gt; . В любом случае, смотрите man-страницу для &lt;code&gt;stat&lt;/code&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="b683a2ff2d5b15178674a689248bb8e41c5208aa" translate="yes" xml:space="preserve">
          <source>On Posix systems, if the file represented by this &lt;code&gt;DirEntry&lt;/code&gt; is a symbolic link, then &lt;code&gt;linkAttributes&lt;/code&gt; are the attributes of the symbolic link itself. Otherwise, &lt;code&gt;linkAttributes&lt;/code&gt; is identical to &lt;code&gt;attributes&lt;/code&gt;.</source>
          <target state="translated">В системах Posix, если файл, представленный этим &lt;code&gt;DirEntry&lt;/code&gt; , является символической ссылкой, то &lt;code&gt;linkAttributes&lt;/code&gt; являются атрибутами самой символической ссылки. В противном случае &lt;code&gt;linkAttributes&lt;/code&gt; идентичен &lt;code&gt;attributes&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ffa58299e8f3542f3a6b4fc5fadc8c5816787d74" translate="yes" xml:space="preserve">
          <source>On Posix systems, if the file represented by this &lt;code&gt;DirEntry&lt;/code&gt; is a symbolic link, then attributes are the attributes of the file pointed to by the symbolic link.</source>
          <target state="translated">В системах Posix, если файл, представленный этим &lt;code&gt;DirEntry&lt;/code&gt; , является символической ссылкой, тогда атрибуты - это атрибуты файла, на которые указывает символическая ссылка.</target>
        </trans-unit>
        <trans-unit id="ecc95bd9a69a6a3b0487f7891f64eaab98150bdc" translate="yes" xml:space="preserve">
          <source>On Posix systems, if the given file is a symbolic link, then attributes are the attributes of the file pointed to by the symbolic link.</source>
          <target state="translated">В системах Posix,если данный файл является символической ссылкой,то атрибутами файла являются атрибуты,на которые указывает символическая ссылка.</target>
        </trans-unit>
        <trans-unit id="636f726f7fefb1663dba5a570f41553d8ae54c00" translate="yes" xml:space="preserve">
          <source>On Windows, &lt;code&gt;QueryPerformanceCounter&lt;/code&gt; is used. On Mac OS X, &lt;code&gt;mach_absolute_time&lt;/code&gt; is used, while on other POSIX systems, &lt;code&gt;clock_gettime&lt;/code&gt; is used.</source>
          <target state="translated">В Windows используется &lt;code&gt;QueryPerformanceCounter&lt;/code&gt; . В Mac OS X используется &lt;code&gt;mach_absolute_time&lt;/code&gt; , в то время как в других системах POSIX используется &lt;code&gt;clock_gettime&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4d2300d27b62da0d46cd201ca4d3f5410d7109c6" translate="yes" xml:space="preserve">
          <source>On Windows, &lt;code&gt;QueryPerformanceCounter&lt;/code&gt; is used. On Mac OS X, &lt;code&gt;mach_absolute_time&lt;/code&gt; is used, while on other Posix systems, &lt;code&gt;clock_gettime&lt;/code&gt; is used. If &lt;code&gt;mach_absolute_time&lt;/code&gt; or &lt;code&gt;clock_gettime&lt;/code&gt; is unavailable, then Posix systems use &lt;code&gt;gettimeofday&lt;/code&gt; (the decision is made when &lt;code&gt;TickDuration&lt;/code&gt; is compiled), which unfortunately, is not monotonic, but if &lt;code&gt;mach_absolute_time&lt;/code&gt; and &lt;code&gt;clock_gettime&lt;/code&gt; aren't available, then &lt;code&gt;gettimeofday&lt;/code&gt; is the the best that there is.</source>
          <target state="translated">В Windows используется &lt;code&gt;QueryPerformanceCounter&lt;/code&gt; . В Mac OS X используется &lt;code&gt;mach_absolute_time&lt;/code&gt; , а в других системах &lt;code&gt;clock_gettime&lt;/code&gt; используется clock_gettime . Если &lt;code&gt;mach_absolute_time&lt;/code&gt; или &lt;code&gt;clock_gettime&lt;/code&gt; недоступны, то системы Posix используют &lt;code&gt;gettimeofday&lt;/code&gt; (решение принимается при &lt;code&gt;TickDuration&lt;/code&gt; ), что, к сожалению, не монотонно, но если &lt;code&gt;mach_absolute_time&lt;/code&gt; и &lt;code&gt;clock_gettime&lt;/code&gt; недоступны, тогда &lt;code&gt;gettimeofday&lt;/code&gt; - лучшее, что есть.</target>
        </trans-unit>
        <trans-unit id="b48a1d53fa4c43afbbe7a02df0466a054d761a29" translate="yes" xml:space="preserve">
          <source>On Windows, &lt;code&gt;linkAttributes&lt;/code&gt; is identical to &lt;code&gt;attributes&lt;/code&gt;. It exists on Windows so that you don't have to special-case code for Windows when dealing with symbolic links.</source>
          <target state="translated">В Windows &lt;code&gt;linkAttributes&lt;/code&gt; идентичны &lt;code&gt;attributes&lt;/code&gt; . Он существует в Windows, поэтому вам не нужно использовать специальный код для Windows при работе с символическими ссылками.</target>
        </trans-unit>
        <trans-unit id="351080dce35982b0252c23f3a69184cf9d5c3306" translate="yes" xml:space="preserve">
          <source>On Windows, an absolute path starts at the root directory of a specific drive. Hence, it must start with &lt;code&gt;d:\&lt;/code&gt; or &lt;code&gt;d:/&lt;/code&gt;, where &lt;code&gt;d&lt;/code&gt; is the drive letter. Alternatively, it may be a network path, i.e. a path starting with a double (back)slash.</source>
          <target state="translated">В Windows абсолютный путь начинается с корневого каталога определенного диска. Следовательно, он должен начинаться с &lt;code&gt;d:\&lt;/code&gt; или &lt;code&gt;d:/&lt;/code&gt; , где &lt;code&gt;d&lt;/code&gt; - буква диска. Альтернативно, это может быть сетевой путь, то есть путь, начинающийся с двойной (обратной) косой черты.</target>
        </trans-unit>
        <trans-unit id="ef889b88d5f8d9f110b38f728621564638f95148" translate="yes" xml:space="preserve">
          <source>On Windows, getLinkAttributes is identical to getAttributes. It exists on Windows so that you don't have to special-case code for Windows when dealing with symbolic links.</source>
          <target state="translated">В Windows,getLinkAttributes идентичен getAttributes.Он существует в Windows,так что вам не придется использовать специальный код для Windows при работе с символическими ссылками.</target>
        </trans-unit>
        <trans-unit id="83d56815cf3e0a92c059f5d90df1eac05f0a2d5a" translate="yes" xml:space="preserve">
          <source>On Windows, if a file is not a directory, it's a file. So, either &lt;code&gt;attrIsFile&lt;/code&gt; or &lt;code&gt;attrIsDir&lt;/code&gt; will return &lt;code&gt;true&lt;/code&gt; for the attributes of any given file.</source>
          <target state="translated">В Windows, если файл не является каталогом, это файл. Таким образом, &lt;code&gt;attrIsFile&lt;/code&gt; или &lt;code&gt;attrIsDir&lt;/code&gt; вернет &lt;code&gt;true&lt;/code&gt; для атрибутов любого данного файла.</target>
        </trans-unit>
        <trans-unit id="1aab655e5665ce1bcef7e3ab64bb515a54733705" translate="yes" xml:space="preserve">
          <source>On Windows, if a file is not a directory, then it's a file. So, either &lt;code&gt;isFile&lt;/code&gt; or &lt;code&gt;isDir&lt;/code&gt; will return &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">В Windows, если файл не является каталогом, то это файл. Итак, &lt;code&gt;isFile&lt;/code&gt; или &lt;code&gt;isDir&lt;/code&gt; вернут &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ea0db99b4ebaafbafa1c6111ac04353baf182a15" translate="yes" xml:space="preserve">
          <source>On Windows, if a file is not a directory, then it's a file. So, either &lt;code&gt;isFile&lt;/code&gt; or &lt;code&gt;isDir&lt;/code&gt; will return true for any given file.</source>
          <target state="translated">В Windows, если файл не является каталогом, то это файл. Таким образом, &lt;code&gt;isFile&lt;/code&gt; или &lt;code&gt;isDir&lt;/code&gt; вернет true для любого данного файла.</target>
        </trans-unit>
        <trans-unit id="fa47af1c2c285a0bc4fbd19f4b9ef76dfda0eeac" translate="yes" xml:space="preserve">
          <source>On Windows, if one of the path segments are rooted, but not absolute (e.g. &lt;code&gt;\foo&lt;/code&gt;), all preceding path segments down to the previous root will be dropped. (See below for an example.)</source>
          <target state="translated">В Windows, если один из сегментов пути является корневым, но не абсолютным (например, &lt;code&gt;\foo&lt;/code&gt; ), все предыдущие сегменты пути вплоть до предыдущего корня будут удалены. (См. Пример ниже.)</target>
        </trans-unit>
        <trans-unit id="04bdf7dfecb2b33004ea9f8e5d6767d50c5920f7" translate="yes" xml:space="preserve">
          <source>On Windows, if the child process is a console application, this flag will prevent the creation of a console window. Otherwise, it will be ignored. On POSIX, &lt;code&gt;suppressConsole&lt;/code&gt; has no effect.</source>
          <target state="translated">В Windows, если дочерний процесс является консольным приложением, этот флаг будет препятствовать созданию консольного окна. В противном случае оно будет проигнорировано. На POSIX &lt;code&gt;suppressConsole&lt;/code&gt; не действует.</target>
        </trans-unit>
        <trans-unit id="aad4687f823a3f85d5221f0d0f2539e9f2c12f2e" translate="yes" xml:space="preserve">
          <source>On Windows, return &lt;code&gt;true&lt;/code&gt; when the file is either a symbolic link or a junction point.</source>
          <target state="translated">В Windows верните &lt;code&gt;true&lt;/code&gt; , если файл является символической ссылкой или точкой соединения.</target>
        </trans-unit>
        <trans-unit id="7b3d24f7c6deac05d17ed8c47b6c79d39c04c3ba" translate="yes" xml:space="preserve">
          <source>On Windows, returns &lt;code&gt;true&lt;/code&gt; when the file is either a symbolic link or a junction point.</source>
          <target state="translated">В Windows возвращает &lt;code&gt;true&lt;/code&gt; , если файл является символической ссылкой или точкой соединения.</target>
        </trans-unit>
        <trans-unit id="f9d78f59bff80dcbd1041e4971f0971b9fc3cd58" translate="yes" xml:space="preserve">
          <source>On Windows, some special rules apply:</source>
          <target state="translated">В Windows применяются некоторые специальные правила:</target>
        </trans-unit>
        <trans-unit id="433c117c547e883a7bdf6c423ef1bcfb810068f6" translate="yes" xml:space="preserve">
          <source>On Windows, the backslash and slash characters (&lt;code&gt;\&lt;/code&gt; and &lt;code&gt;/&lt;/code&gt;) are considered equal.</source>
          <target state="translated">В Windows символы обратной и косой черты ( &lt;code&gt;\&lt;/code&gt; и &lt;code&gt;/&lt;/code&gt; ) считаются равными.</target>
        </trans-unit>
        <trans-unit id="4a88c798e54629c5adeb41273aa766dfd9577b5b" translate="yes" xml:space="preserve">
          <source>On Windows, the following criteria must be satisfied (&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/aa365247(v=vs.85).aspx&quot;&gt;source&lt;/a&gt;):</source>
          <target state="translated">В Windows должны соблюдаться следующие критерии ( &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/aa365247(v=vs.85).aspx&quot;&gt;источник&lt;/a&gt; ):</target>
        </trans-unit>
        <trans-unit id="f9779d7c68a633ae64f68af4b0e5a5c47a042da7" translate="yes" xml:space="preserve">
          <source>On Windows, this function returns the contents of the COMSPEC environment variable, if it exists. Otherwise, it returns the result of &lt;a href=&quot;#nativeShell&quot;&gt;&lt;code&gt;nativeShell&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">В Windows эта функция возвращает содержимое переменной среды COMSPEC, если она существует. В противном случае он возвращает результат &lt;a href=&quot;#nativeShell&quot;&gt; &lt;code&gt;nativeShell&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="79eb2a6d7769617f87ca1be1841f02158f05836a" translate="yes" xml:space="preserve">
          <source>On Windows, this function returns the result of calling the Windows API function &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/windows/desktop/aa364992.aspx&quot;&gt;&lt;code&gt;GetTempPath&lt;/code&gt;&lt;/a&gt;.  On POSIX platforms, it searches through the following list of directories and returns the first one which is found to exist:</source>
          <target state="translated">В Windows эта функция возвращает результат вызова функции Windows API &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/windows/desktop/aa364992.aspx&quot;&gt; &lt;code&gt;GetTempPath&lt;/code&gt; &lt;/a&gt; . На платформах POSIX он просматривает следующий список каталогов и возвращает первый найденный каталог:</target>
        </trans-unit>
        <trans-unit id="fc8accd97298f49fccac8e9aa1187ff12d77a0a0" translate="yes" xml:space="preserve">
          <source>On Windows, this includes both &lt;code&gt;\&lt;/code&gt; and &lt;code&gt;/&lt;/code&gt;. On POSIX, it's just &lt;code&gt;/&lt;/code&gt;.</source>
          <target state="translated">В Windows это включает как &lt;code&gt;\&lt;/code&gt; ,так и &lt;code&gt;/&lt;/code&gt; . На POSIX это просто &lt;code&gt;/&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="275ea90ff2dff3a9dead6ab2157264ecd02c6a5b" translate="yes" xml:space="preserve">
          <source>On Windows, this option has no effect, and any handles which have been explicitly marked as inheritable will always be inherited by the child process.</source>
          <target state="translated">В Windows эта опция не имеет никакого эффекта,и любые дескрипторы,которые были явно помечены как наследуемые,всегда будут унаследованы дочерним процессом.</target>
        </trans-unit>
        <trans-unit id="e85c0978a77279c90b22ae8dd33a1d55444d1a0f" translate="yes" xml:space="preserve">
          <source>On all platforms, &lt;code&gt;tempDir&lt;/code&gt; returns &lt;code&gt;&quot;.&quot;&lt;/code&gt; on failure, representing the current working directory.</source>
          <target state="translated">На всех платформах &lt;code&gt;tempDir&lt;/code&gt; возвращает &lt;code&gt;&quot;.&quot;&lt;/code&gt; в случае неудачи, представляющий текущий рабочий каталог.</target>
        </trans-unit>
        <trans-unit id="8adc4328682a5c7505adf3df0ba7bb17ee427f01" translate="yes" xml:space="preserve">
          <source>On function literals, return type may be modified based on the context type after its semantic3 is done, in FuncExp::implicitCastTo.</source>
          <target state="translated">На литералах функции тип возврата может быть изменен на основе типа контекста после выполнения его семантического3,в FuncExp::implicitCastTo.</target>
        </trans-unit>
        <trans-unit id="a2267eb64b3a3d0bdb354c3d04c12d89c9a317c3" translate="yes" xml:space="preserve">
          <source>On many computers, greater precision operations do not take any longer than lesser precision operations, so it makes numerical sense to use the greatest precision available for internal temporaries. The philosophy is not to dumb down the language to the lowest common hardware denominator, but to enable the exploitation of the best capabilities of target hardware.</source>
          <target state="translated">На многих компьютерах более точные операции не занимают больше времени,чем менее точные операции,поэтому имеет смысл использовать самую высокую точность,доступную для внутренних временных систем.Философия заключается не в том,чтобы отуплять язык до самого низкого общего аппаратного знаменателя,а в том,чтобы дать возможность использовать наилучшие возможности целевой аппаратуры.</target>
        </trans-unit>
        <trans-unit id="53a5882afe52725f67a0137bd88f746ad80234d9" translate="yes" xml:space="preserve">
          <source>On many platforms, catching C++ class objects is supported. Catching C++ objects and D objects cannot both be done in the same</source>
          <target state="translated">На многих платформах поддерживается отлов объектов класса C++.Поймать объекты C++и D нельзя в одном и том же классе</target>
        </trans-unit>
        <trans-unit id="b9cd670388212aa6ebdb79e448445941831f1d67" translate="yes" xml:space="preserve">
          <source>On single-core machines, the primitives provided by &lt;code&gt;TaskPool&lt;/code&gt; operate transparently in single-threaded mode.</source>
          <target state="translated">На одноядерных компьютерах примитивы, предоставляемые &lt;code&gt;TaskPool&lt;/code&gt; , работают прозрачно в однопоточном режиме.</target>
        </trans-unit>
        <trans-unit id="65eeec28a4ec73def9ce753282e4a733d2b218e6" translate="yes" xml:space="preserve">
          <source>On some platforms, modifying environment variables may not be allowed in multi-threaded programs. See e.g. &lt;a href=&quot;https://www.gnu.org/software/libc/manual/html_node/Environment-Access.html#Environment-Access&quot;&gt;glibc&lt;/a&gt;.</source>
          <target state="translated">На некоторых платформах изменение переменных среды может быть запрещено в многопоточных программах. Смотрите, например, &lt;a href=&quot;https://www.gnu.org/software/libc/manual/html_node/Environment-Access.html#Environment-Access&quot;&gt;glibc&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2579191de4bc3eb8840f26a4ccade11d869046e5" translate="yes" xml:space="preserve">
          <source>On success returns the composed LV or LVT hangul syllable.</source>
          <target state="translated">На успех возвращает составленный LV или LVT ангальный слог.</target>
        </trans-unit>
        <trans-unit id="1e477d55ecee9b240368d12b85daa6ac9107cc3f" translate="yes" xml:space="preserve">
          <source>On success, the function returns the number of variables filled. This count can match the expected number of readings or fewer, even zero, if a matching failure happens.</source>
          <target state="translated">При успешном выполнении функция возвращает количество заполненных переменных.Это количество может соответствовать ожидаемому числу показаний или даже нулю,если происходит сбой при совпадении.</target>
        </trans-unit>
        <trans-unit id="9423c42e5e2d607971a466fc971dcc3d4c06beee" translate="yes" xml:space="preserve">
          <source>On systems which do not support a coarser clock, &lt;code&gt;MonoTimeImpl!(ClockType.coarse)&lt;/code&gt; will internally use the same clock as &lt;code&gt;Monotime&lt;/code&gt; does, and &lt;code&gt;Clock.currTime!(ClockType.coarse)&lt;/code&gt; will use the same clock as &lt;code&gt;Clock.currTime&lt;/code&gt;. This is because the coarse clock is doing the same thing as the normal clock (just at lower precision), whereas some of the other clock types (e.g. &lt;code&gt;ClockType.processCPUTime&lt;/code&gt;) mean something fundamentally different. So, treating those as &lt;code&gt;ClockType.normal&lt;/code&gt; on systems where they weren't natively supported would give misleading results.</source>
          <target state="translated">В системах, которые не поддерживают более грубые часы, &lt;code&gt;MonoTimeImpl!(ClockType.coarse)&lt;/code&gt; будет внутренне использовать те же часы, что и &lt;code&gt;Monotime&lt;/code&gt; , а &lt;code&gt;Clock.currTime!(ClockType.coarse)&lt;/code&gt; будет использовать те же часы, что и &lt;code&gt;Clock.currTime&lt;/code&gt; . Это потому, что грубые часы делают то же самое, что и обычные часы (только с меньшей точностью), тогда как некоторые другие типы часов (например, &lt;code&gt;ClockType.processCPUTime&lt;/code&gt; ) означают нечто принципиально иное. Таким образом, обработка их как &lt;code&gt;ClockType.normal&lt;/code&gt; в системах, где они не поддерживаются изначально, может привести к вводящим в заблуждение результатам.</target>
        </trans-unit>
        <trans-unit id="5b968233be4d9a26515726f1fa55ef5fc7adc2c1" translate="yes" xml:space="preserve">
          <source>On the other hand, disabling the bounds check in &lt;code&gt;@safe&lt;/code&gt; code will break the guaranteed memory safety by compiler. It's not recommended unless motivated by speed measurements.</source>
          <target state="translated">С другой стороны, отключение проверки границ в коде &lt;code&gt;@safe&lt;/code&gt; нарушит гарантированную безопасность памяти компилятором. Это не рекомендуется, если не мотивировано измерениями скорости.</target>
        </trans-unit>
        <trans-unit id="5686721515d33ea6d5f3f835d28e7583ce16b2b0" translate="yes" xml:space="preserve">
          <source>OnCrowding &lt;code&gt;doThis&lt;/code&gt;</source>
          <target state="translated">На &lt;code&gt;doThis&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="136de9961eb08dceeff5dec3d02243e1d4794113" translate="yes" xml:space="preserve">
          <source>Once &lt;a href=&quot;#wait&quot;&gt;&lt;code&gt;wait&lt;/code&gt;&lt;/a&gt; has been called on the &lt;a href=&quot;#Pid&quot;&gt;&lt;code&gt;Pid&lt;/code&gt;&lt;/a&gt;, this method will return an invalid handle.</source>
          <target state="translated">Как только &lt;a href=&quot;#wait&quot;&gt; &lt;code&gt;wait&lt;/code&gt; &lt;/a&gt; было &lt;a href=&quot;#Pid&quot;&gt; &lt;code&gt;Pid&lt;/code&gt; &lt;/a&gt; , этот метод вернет недопустимый дескриптор.</target>
        </trans-unit>
        <trans-unit id="1cdbbf32331fe81da47f44a31f5d3b1a122a8e37" translate="yes" xml:space="preserve">
          <source>Once S has been determined, then &lt;code&gt;S s = e;&lt;/code&gt; and &lt;code&gt;s = f(s, e);&lt;/code&gt; must both be legal.</source>
          <target state="translated">Как только S определено, тогда &lt;code&gt;S s = e;&lt;/code&gt; и &lt;code&gt;s = f(s, e);&lt;/code&gt; оба должны быть законными.</target>
        </trans-unit>
        <trans-unit id="fce1b7cfb7dff703df3fdeab9bc79a1b2ae11a43" translate="yes" xml:space="preserve">
          <source>Once instantiated, the declarations inside the template, called the template members, are in the scope of the</source>
          <target state="translated">После того,как декларации внутри шаблона,называемые членами шаблона,инстанциированы,они попадают в сферу охвата</target>
        </trans-unit>
        <trans-unit id="f63c93929ae7b3005633933b34e6827b3a5df78e" translate="yes" xml:space="preserve">
          <source>Once slice are used everywhere and &lt;code&gt;\0&lt;/code&gt; is not assumed, this can be turned into a simple slicing.</source>
          <target state="translated">Если срез используется везде и &lt;code&gt;\0&lt;/code&gt; не предполагается, это можно превратить в простую нарезку.</target>
        </trans-unit>
        <trans-unit id="177b7637cfdda24d637e80021941e40011fc4e80" translate="yes" xml:space="preserve">
          <source>Once the chunk is exhausted, the Kernighan-Ritchie allocator allocates another chunk using operating system primitives. For better composability, &lt;code&gt;KRRegion&lt;/code&gt; just gets full (returns &lt;code&gt;null&lt;/code&gt; on new allocation requests). The decision to allocate more blocks is deferred to a higher-level entity. For an example, see the example below using &lt;code&gt;AllocatorList&lt;/code&gt; in conjunction with &lt;code&gt;KRRegion&lt;/code&gt;.</source>
          <target state="translated">Как только чанк исчерпан, распределитель Кернигана-Ричи выделяет другой чанк, используя примитивы операционной системы. Для лучшего компонуемости, &lt;code&gt;KRRegion&lt;/code&gt; просто получает полный (возвращает &lt;code&gt;null&lt;/code&gt; новых запросов на выделение памяти). Решение о выделении большего количества блоков откладывается до объекта более высокого уровня. Для примера, смотрите пример ниже, используя &lt;code&gt;AllocatorList&lt;/code&gt; вместе с &lt;code&gt;KRRegion&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f58a3a2810943bb8e1377bf6e7c64c4eacbf25ce" translate="yes" xml:space="preserve">
          <source>Once the delegate constructor returns, all fields are considered constructed.</source>
          <target state="translated">После возвращения конструктора делегата все поля считаются построенными.</target>
        </trans-unit>
        <trans-unit id="b11a10ea8965ed2cfd66ad0ada41f8d84d4d8538" translate="yes" xml:space="preserve">
          <source>Once the region cannot serve an &lt;code&gt;allocate&lt;/code&gt; request, &lt;code&gt;KRRegion&lt;/code&gt; switches to &quot;free list&quot; mode. It sorts the list of previously deallocated blocks by address and serves allocation requests off that free list. The allocation and deallocation follow the pattern described by Kernighan and Ritchie.</source>
          <target state="translated">Когда регион не может обслуживать запрос на &lt;code&gt;allocate&lt;/code&gt; &lt;code&gt;KRRegion&lt;/code&gt; , KRRegion переключается в режим &amp;laquo;свободный список&amp;raquo;. Он сортирует список ранее освобожденных блоков по адресу и обслуживает запросы выделения из этого свободного списка. Распределение и освобождение следуют шаблону, описанному Kernighan и Ritchie.</target>
        </trans-unit>
        <trans-unit id="ca3be77a39a2b5fa5cbfec1787bdf7c9ae146013" translate="yes" xml:space="preserve">
          <source>One allocation pattern used in multithreaded applications is to share memory across threads, and to deallocate blocks in a different thread than the one that allocated it.</source>
          <target state="translated">Один из паттернов распределения,используемый в многопоточных приложениях,-это совместное использование памяти между потоками,а также разделение блоков в другом потоке,отличном от того,который его выделял.</target>
        </trans-unit>
        <trans-unit id="e48630c4869fa52074205f4f0540ce50688f767d" translate="yes" xml:space="preserve">
          <source>One can also generate the</source>
          <target state="translated">Можно также сгенерировать</target>
        </trans-unit>
        <trans-unit id="a2aff6d254edcd8887f3a6f1cc2a273d785eb489" translate="yes" xml:space="preserve">
          <source>One can also hash ubyte data piecewise by instanciating a hasher and call the 'put' method.</source>
          <target state="translated">Можно также кусочками хэшировать данные из буфера,инстанцируя хэш и вызывая метод 'put'.</target>
        </trans-unit>
        <trans-unit id="f741df140a81582ebc9d066ceb30b9c0a1abe1d0" translate="yes" xml:space="preserve">
          <source>One can avoid using pointers anyway for most tasks. D provides features rendering most explicit pointer uses obsolete, such as reference objects, dynamic arrays, and garbage collection. Pointers are provided in order to interface successfully with C APIs and for some low level work.</source>
          <target state="translated">В любом случае можно избежать использования указателей для большинства задач.D предоставляет возможности рендеринга наиболее явных указателей,использующих устаревшие,такие как опорные объекты,динамические массивы и сборка мусора.Указатели предоставляются для того,чтобы успешно взаимодействовать с C API и для некоторых низкоуровневой работы.</target>
        </trans-unit>
        <trans-unit id="90d544a3f6a256ab611c54b6c404983ee546b81c" translate="yes" xml:space="preserve">
          <source>One can thus generate the even permutations of a range with unique elements by starting with the lexicographically smallest permutation, and repeatedly calling nextEvenPermutation until it returns false.</source>
          <target state="translated">Таким образом,можно генерировать ровные перестановки диапазона с уникальными элементами,начиная с лексикографически самой маленькой перестановки,и многократно вызывая следующуюEvenPermutation до тех пор,пока она не вернет false.</target>
        </trans-unit>
        <trans-unit id="534eda1fa053a01173b27dcb3d6cc652086074b9" translate="yes" xml:space="preserve">
          <source>One important consequence of &lt;code&gt;destroy&lt;/code&gt; is that it will call the destructor of the &lt;code&gt;T&lt;/code&gt; payload. GC-managed references are not guaranteed to be valid during a destructor call, but other members of &lt;code&gt;T&lt;/code&gt;, such as file handles or pointers to &lt;code&gt;malloc&lt;/code&gt; memory, will still be valid during the destructor call. This allows the &lt;code&gt;T&lt;/code&gt; to deallocate or clean up any non-GC resources immediately after the reference count has reached zero.</source>
          <target state="translated">Одним из важных последствий &lt;code&gt;destroy&lt;/code&gt; является то, что он вызовет деструктор полезной нагрузки &lt;code&gt;T&lt;/code&gt; . Ссылки, управляемые GC, не гарантируются действительными во время вызова деструктора, но другие члены &lt;code&gt;T&lt;/code&gt; , такие как файловые дескрипторы или указатели на память &lt;code&gt;malloc&lt;/code&gt; , все еще будут действительны во время вызова деструктора. Это позволяет &lt;code&gt;T&lt;/code&gt; освобождать или очищать любые не-GC ресурсы сразу после того, как счетчик ссылок достигнет нуля.</target>
        </trans-unit>
        <trans-unit id="d289613b2b905b9b8c968b576d93e4b8155280ac" translate="yes" xml:space="preserve">
          <source>One instantiation is of particular interest: &lt;code&gt;FreeList!(0, unbounded)&lt;/code&gt; puts every deallocation in the freelist, and subsequently serves any allocation from the freelist (if not empty). There is no checking of size matching, which would be incorrect for a freestanding allocator but is both correct and fast when an owning allocator on top of the free list allocator (such as &lt;code&gt;Segregator&lt;/code&gt;) is already in charge of handling size checking.</source>
          <target state="translated">Один экземпляр представляет особый интерес: &lt;code&gt;FreeList!(0, unbounded)&lt;/code&gt; помещает каждое освобождение в список freelist, а затем обслуживает любое выделение из списка freelist (если не пустой). Нет проверки соответствия размера, что было бы некорректно для автономного распределителя, но одновременно и правильно, и быстро, когда владелец-распределитель поверх свободного распределителя списка (например, &lt;code&gt;Segregator&lt;/code&gt; ) уже отвечает за обработку проверки размера.</target>
        </trans-unit>
        <trans-unit id="b8bb08b9cf98dd6c73c6dc0c7e52247a78ee67c4" translate="yes" xml:space="preserve">
          <source>One of</source>
          <target state="translated">Один из</target>
        </trans-unit>
        <trans-unit id="6b6f69412e7b5746bc4bc3d10bafa7869eb676ad" translate="yes" xml:space="preserve">
          <source>One of the following UTF BOMs (Byte Order Marks) can be present at the beginning of the source text:</source>
          <target state="translated">В начале исходного текста может присутствовать одна из следующих UTF-ИЗОБРАЖЕНИЙ (Byte Order Marks):</target>
        </trans-unit>
        <trans-unit id="187dc51ce92272932644e64e0c07f2ddfef5985d" translate="yes" xml:space="preserve">
          <source>One or more items to search for. Each of &lt;code&gt;needles&lt;/code&gt; must be either comparable to one element in &lt;code&gt;haystack&lt;/code&gt;, or be itself a forward range with elements comparable with elements in &lt;code&gt;haystack&lt;/code&gt;.</source>
          <target state="translated">Один или несколько предметов для поиска. Каждая из &lt;code&gt;needles&lt;/code&gt; должна быть либо сопоставима с одним элементом в &lt;code&gt;haystack&lt;/code&gt; , либо сама должна быть передовой по дальности с элементами, сопоставимыми с элементами в &lt;code&gt;haystack&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b04f89f4dcaf4692c37fd3a834b169482f64078c" translate="yes" xml:space="preserve">
          <source>One reason a custom &lt;code&gt;opAssign&lt;/code&gt; might be more efficient is if the struct has a reference to a local buffer:</source>
          <target state="translated">Одна из причин, по которой пользовательский &lt;code&gt;opAssign&lt;/code&gt; может быть более эффективным, заключается в том, что структура имеет ссылку на локальный буфер:</target>
        </trans-unit>
        <trans-unit id="17f5a4fe2f5c62ecd81776d246b8c0c725190c25" translate="yes" xml:space="preserve">
          <source>One-Step Query Execution Interface</source>
          <target state="translated">Интерфейс выполнения одношаговых запросов</target>
        </trans-unit>
        <trans-unit id="84ecd14ddbadabe468f63832d803f2392f405f33" translate="yes" xml:space="preserve">
          <source>Online Backup API.</source>
          <target state="translated">API Онлайн Резервного Копирования.</target>
        </trans-unit>
        <trans-unit id="df4435ab96f572a5ddc0d0575dab3a2326c426c1" translate="yes" xml:space="preserve">
          <source>Online Backup Object</source>
          <target state="translated">объект онлайн-безопасного копирования</target>
        </trans-unit>
        <trans-unit id="e405ce24fb1f95bf28e59992555ee4472e0a1bb7" translate="yes" xml:space="preserve">
          <source>Only Zip version 20 formats are supported.</source>
          <target state="translated">Поддерживаются только форматы Zip версии 20.</target>
        </trans-unit>
        <trans-unit id="5c244cec2fec4515775043a5c26290f2816cde2e" translate="yes" xml:space="preserve">
          <source>Only called from the driver after platform detection, and internally.</source>
          <target state="translated">Звонок от водителя только после обнаружения платформы,и внутренне.</target>
        </trans-unit>
        <trans-unit id="ecb587b264a111fa4057abd83cb3c0390dc38177" translate="yes" xml:space="preserve">
          <source>Only called from the driver for &lt;code&gt;-version=Ident&lt;/code&gt; parameters. Will raise an error if the identifier is reserved.</source>
          <target state="translated">Вызывается только из драйвера для параметров &lt;code&gt;-version=Ident&lt;/code&gt; . Возникнет ошибка, если идентификатор зарезервирован.</target>
        </trans-unit>
        <trans-unit id="cce934e34ed04bb926cd8169afbbec8aaf23e272" translate="yes" xml:space="preserve">
          <source>Only defined if &lt;code&gt;hasLength!R&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Определяется, только если &lt;code&gt;hasLength!R&lt;/code&gt; имеет значение &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="862399b467677fba43c9d502817d5f0b7647d65a" translate="yes" xml:space="preserve">
          <source>Only defined if &lt;code&gt;hasMobileElements!R&lt;/code&gt; and &lt;code&gt;isBidirectionalRange!R&lt;/code&gt; are &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Определяется, только если &lt;code&gt;hasMobileElements!R&lt;/code&gt; и &lt;code&gt;isBidirectionalRange!R&lt;/code&gt; имеют значение &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1d299cfaa7b726004904048bdbbeff2a23f9537e" translate="yes" xml:space="preserve">
          <source>Only defined if &lt;code&gt;hasMobileElements!R&lt;/code&gt; and &lt;code&gt;isForwardRange!R&lt;/code&gt; are &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Определяется, только если &lt;code&gt;hasMobileElements!R&lt;/code&gt; и &lt;code&gt;isForwardRange!R&lt;/code&gt; имеют значение &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f0e1549e42e36af6cc4f14382860c43f58ce9d4a" translate="yes" xml:space="preserve">
          <source>Only defined if &lt;code&gt;hasMobileElements!R&lt;/code&gt; and &lt;code&gt;isRandomAccessRange!R&lt;/code&gt; are &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Определяется, только если &lt;code&gt;hasMobileElements!R&lt;/code&gt; и &lt;code&gt;isRandomAccessRange!R&lt;/code&gt; имеют значение &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fd3e276381109f7d629a5c36b61768f82d6512c0" translate="yes" xml:space="preserve">
          <source>Only defined if &lt;code&gt;hasSlicing!R&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Определяется только если &lt;code&gt;hasSlicing!R&lt;/code&gt; имеет значение &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3d00e6646d856997df194a6a9af40811b56eb10b" translate="yes" xml:space="preserve">
          <source>Only defined if &lt;code&gt;isBidirectionalRange!R&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Определяется, только если &lt;code&gt;isBidirectionalRange!R&lt;/code&gt; имеет значение &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dd62d4c49545ff383b28dc672873e780186fe504" translate="yes" xml:space="preserve">
          <source>Only defined if &lt;code&gt;isForwardRange!R&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Определяется, только если &lt;code&gt;isForwardRange!R&lt;/code&gt; имеет значение &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9b544462107afa42f4718c874cde66fe7b0ee37b" translate="yes" xml:space="preserve">
          <source>Only defined if &lt;code&gt;isRandomAccesRange!R&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Определяется, только если &lt;code&gt;isRandomAccesRange!R&lt;/code&gt; имеет значение &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9236b4e0fe39b6bde2da99e0cff381a33d1b78c9" translate="yes" xml:space="preserve">
          <source>Only do checking in &lt;code&gt;@safe&lt;/code&gt; functions</source>
          <target state="translated">&lt;code&gt;@safe&lt;/code&gt; только в функциях @safe</target>
        </trans-unit>
        <trans-unit id="2a79fded6bf47650a5682e0a8be99f79c6ff2e9c" translate="yes" xml:space="preserve">
          <source>Only one module per file.</source>
          <target state="translated">Только один модуль на файл.</target>
        </trans-unit>
        <trans-unit id="129f862b4645a9b5bc42ca61dd870b0c6bcad71c" translate="yes" xml:space="preserve">
          <source>Only spans one directory.</source>
          <target state="translated">Простирается только один каталог.</target>
        </trans-unit>
        <trans-unit id="df00b3a1891c04db004975eb707f42e43dced5b0" translate="yes" xml:space="preserve">
          <source>Only supports compression modes 0 (no compression) and 8 (deflate).</source>
          <target state="translated">Поддерживаются только режимы сжатия 0 (без сжатия)и 8 (сдутие).</target>
        </trans-unit>
        <trans-unit id="e57c5241662851c301803a684716b28d4ece2aaf" translate="yes" xml:space="preserve">
          <source>Only the following characters are considered whitespace in XML - space, tab, carriage return and linefeed</source>
          <target state="translated">В XML пробелами считаются только следующие символы-пробел,табуляция,возврат каретки и поток строк</target>
        </trans-unit>
        <trans-unit id="9f64b8772cea113059e2d85e8c2f762ed6fbe026" translate="yes" xml:space="preserve">
          <source>Only the option directly following &lt;code&gt;std.getopt.config.required&lt;/code&gt; is required.</source>
          <target state="translated">Требуется только опция, следующая непосредственно за &lt;code&gt;std.getopt.config.required&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f6005ab5c2001db5a0f58c1bdc79e5b2f49a7e5f" translate="yes" xml:space="preserve">
          <source>Only valid after semantic analysis.</source>
          <target state="translated">Действительно только после семантического анализа.</target>
        </trans-unit>
        <trans-unit id="56c1872362aaadddaf17d1f0853543a1c5383ad6" translate="yes" xml:space="preserve">
          <source>Only works on Linux</source>
          <target state="translated">Работает только под Linux</target>
        </trans-unit>
        <trans-unit id="9cbedc3b0f2aeb7733345bed14e006cfa949d8b9" translate="yes" xml:space="preserve">
          <source>Only works well with English names.</source>
          <target state="translated">Хорошо работает только с английскими именами.</target>
        </trans-unit>
        <trans-unit id="46ef769c4a078e6997164d1bdec7d4e9aaa7c5ce" translate="yes" xml:space="preserve">
          <source>Only works with the Digital Mars C Runtime.</source>
          <target state="translated">Работает только с Digital Mars C Runtime.</target>
        </trans-unit>
        <trans-unit id="d868746314878f673eaeb7cab7885b539498ab59" translate="yes" xml:space="preserve">
          <source>Op Assignment Operator Overloading</source>
          <target state="translated">Перегрузка оператора</target>
        </trans-unit>
        <trans-unit id="aa42ddca3527c3262305947b13219762ea1c8d73" translate="yes" xml:space="preserve">
          <source>Opaque AA wrapper</source>
          <target state="translated">непрозрачная упаковка типа АА</target>
        </trans-unit>
        <trans-unit id="581bbfacbdf2dcb0762e876472d6d3e3e356f89d" translate="yes" xml:space="preserve">
          <source>Opaque Structs and Unions</source>
          <target state="translated">Прозрачные струны и союзы</target>
        </trans-unit>
        <trans-unit id="1ad7e0054470d6dbdf375fa4c9c53332e963b6e3" translate="yes" xml:space="preserve">
          <source>Opaque struct and union declarations do not have a &lt;a href=&quot;#AggregateBody&quot;&gt;&lt;i&gt;AggregateBody&lt;/i&gt;&lt;/a&gt;:</source>
          <target state="translated">Непрозрачные объявления структуры и объединения не имеют &lt;a href=&quot;#AggregateBody&quot;&gt;&lt;i&gt;AggregateBody&lt;/i&gt;&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="7524f3aa077afff7785a23fcd72580f55d33ff80" translate="yes" xml:space="preserve">
          <source>Opcodes</source>
          <target state="translated">Opcodes</target>
        </trans-unit>
        <trans-unit id="d145964ace4c15a7eff46c943cbea00eff09f07f" translate="yes" xml:space="preserve">
          <source>Opcodes Supported</source>
          <target state="translated">Поддерживаемые опкоды</target>
        </trans-unit>
        <trans-unit id="313411b9bd1b97b8fcd666d91d350cb8e6bed0d1" translate="yes" xml:space="preserve">
          <source>Open A BLOB For Incremental I/O</source>
          <target state="translated">Открыть BLOB для инкрементального ввода/вывода</target>
        </trans-unit>
        <trans-unit id="9a5db6b9f07fe0f6737e3037148bbc246c9b1140" translate="yes" xml:space="preserve">
          <source>Open memory mapped file filename for reading. File is closed when the object instance is deleted.</source>
          <target state="translated">Открыть в памяти mapped файл имя файла для чтения.Файл закрывается при удалении экземпляра объекта.</target>
        </trans-unit>
        <trans-unit id="28b52b272c32e6d9c6e60e9eb9e62876583fe9a0" translate="yes" xml:space="preserve">
          <source>Open memory mapped file filename in mode. File is closed when the object instance is deleted.</source>
          <target state="translated">Имя файла отображенного файла в режиме открытой памяти.Файл закрывается при удалении экземпляра объекта.</target>
        </trans-unit>
        <trans-unit id="db3951317261fd51cb4c1a3e01c4748b4896c421" translate="yes" xml:space="preserve">
          <source>OpenBSD</source>
          <target state="translated">OpenBSD</target>
        </trans-unit>
        <trans-unit id="d864d3a0cba2629540ad6005310a4e1e9f9110a2" translate="yes" xml:space="preserve">
          <source>OpenRight &lt;code&gt;openRight&lt;/code&gt;</source>
          <target state="translated">OpenRight &lt;code&gt;openRight&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4aacf309ba9d8f7213885764ccd6340aa313658b" translate="yes" xml:space="preserve">
          <source>Open_Punctuation</source>
          <target state="translated">Open_Punctuation</target>
        </trans-unit>
        <trans-unit id="f1ba5b2c8dba45952ee1dd4e3e5587becf1e4832" translate="yes" xml:space="preserve">
          <source>Opening A New Database Connection</source>
          <target state="translated">Открытие нового соединения с базой данных</target>
        </trans-unit>
        <trans-unit id="8ca64c0c572cb68fa4f2ce914ea9b27b8a345ff6" translate="yes" xml:space="preserve">
          <source>Opens a TCP connection to the given host and port, then returns a File struct with read and write access through the same interface as any other file (meaning writef and the byLine ranges work!).</source>
          <target state="translated">Открывает TCP-соединение с заданным хостом и портом,затем возвращает структуру файла с доступом на чтение и запись через тот же самый интерфейс,что и любой другой файл (имеется в виду работа диапазонов writeef и byLine!).</target>
        </trans-unit>
        <trans-unit id="64bfbb68768403159904c1e04d1ec395011c0a93" translate="yes" xml:space="preserve">
          <source>Operand Types</source>
          <target state="translated">Типы операндов</target>
        </trans-unit>
        <trans-unit id="c47fc2f4dad35c7e07dd9ed3c2d29ef84ea7cc74" translate="yes" xml:space="preserve">
          <source>Operand swap</source>
          <target state="translated">Обмен операми</target>
        </trans-unit>
        <trans-unit id="a2b8c4621b34e3c27498c6c8832719e530f09634" translate="yes" xml:space="preserve">
          <source>Operands</source>
          <target state="translated">Operands</target>
        </trans-unit>
        <trans-unit id="27ca5c239713ff8f578577200fe8706af71773d3" translate="yes" xml:space="preserve">
          <source>Operates on all threads currently being tracked by the system. The result of deleting any Thread object is undefined. Note that threads passed to the callback might no longer run (see &lt;code&gt;Thread.&lt;/code&gt;&lt;a href=&quot;#isRunning&quot;&gt;&lt;code&gt;isRunning&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">Работает со всеми потоками, отслеживаемыми в данный момент системой. Результат удаления любого объекта Thread не определен. Обратите внимание, что потоки, переданные &lt;a href=&quot;#isRunning&quot;&gt; &lt;code&gt;isRunning&lt;/code&gt; &lt;/a&gt; вызову, могут больше не работать (см. &lt;code&gt;Thread.&lt;/code&gt; IsRunning ).</target>
        </trans-unit>
        <trans-unit id="1ceccd51e36cd099776635232a115dbf0c8ddbbd" translate="yes" xml:space="preserve">
          <source>Operates on all threads currently tracked by this object.</source>
          <target state="translated">Работает со всеми потоками,отслеживаемыми в данный момент этим объектом.</target>
        </trans-unit>
        <trans-unit id="5fab1578993e130d7e185a769a8e7d10165a4ce2" translate="yes" xml:space="preserve">
          <source>Operating system error code.</source>
          <target state="translated">Код ошибки операционной системы.</target>
        </trans-unit>
        <trans-unit id="8f5dbd7c97b01eae443b983fcb062faa3e56f50c" translate="yes" xml:space="preserve">
          <source>Operating system.</source>
          <target state="translated">Операционная система.</target>
        </trans-unit>
        <trans-unit id="5cc46d2eac1c8b0a848f98a788fe90ffd7043281" translate="yes" xml:space="preserve">
          <source>Operation NULL</source>
          <target state="translated">Операция NULL</target>
        </trans-unit>
        <trans-unit id="7c206b387173fa63aaa15f71f0e946eceea43069" translate="yes" xml:space="preserve">
          <source>Operation Savepoint Name</source>
          <target state="translated">Имя сохраняемой точки операции</target>
        </trans-unit>
        <trans-unit id="dc2db8ab152ae696d77bdc87d45929deb94de5dc" translate="yes" xml:space="preserve">
          <source>Operation terminated by sqlite3_interrupt()</source>
          <target state="translated">Операция завершена функцией sqlite3_interrupt().</target>
        </trans-unit>
        <trans-unit id="d0e687b079fb70f2208d1f8d2c75d64d74925496" translate="yes" xml:space="preserve">
          <source>Operator</source>
          <target state="translated">Operator</target>
        </trans-unit>
        <trans-unit id="b2c30e50457298624b96ccb9dc57c58e04b9cd54" translate="yes" xml:space="preserve">
          <source>Operator &lt;code&gt;&amp;gt;&amp;gt;=&lt;/code&gt; support.</source>
          <target state="translated">Оператор &lt;code&gt;&amp;gt;&amp;gt;=&lt;/code&gt; поддержка.</target>
        </trans-unit>
        <trans-unit id="c056556bd6106804af09418fad3513c58dd3ce25" translate="yes" xml:space="preserve">
          <source>Operator &lt;code&gt;&amp;lt;&amp;lt;=&lt;/code&gt; support.</source>
          <target state="translated">Оператор &lt;code&gt;&amp;lt;&amp;lt;=&lt;/code&gt; поддержка.</target>
        </trans-unit>
        <trans-unit id="f299c884a708c75ca75144e361f0c5cf282b235f" translate="yes" xml:space="preserve">
          <source>Operator Overloading</source>
          <target state="translated">Перегрузка оператора</target>
        </trans-unit>
        <trans-unit id="658fcb31752209aa14d15f945731a7c73323992e" translate="yes" xml:space="preserve">
          <source>Operator overload. Check for operator overload, if so, replace with function call.</source>
          <target state="translated">Перегрузка оператора.Проверьте перегрузку оператора,если да,замените на вызов функции.</target>
        </trans-unit>
        <trans-unit id="0881519d8f6e3133862fd99cd3f26c97bd8c5241" translate="yes" xml:space="preserve">
          <source>Operator overloading for a number of operators can be done at the same time. For example, if only the + or - operators are supported:</source>
          <target state="translated">Одновременно может быть произведена перегрузка оператора для нескольких операторов.Например,если поддерживаются только операторы+или -:</target>
        </trans-unit>
        <trans-unit id="a79cd265a6b171f4cb1a52d3f639986ca2f05ce4" translate="yes" xml:space="preserve">
          <source>Operator overloading is accomplished by rewriting operators whose operands are class or struct objects into calls to specially named members. No additional syntax is used.</source>
          <target state="translated">Перегрузка операторов осуществляется путем переписывания операторов,операндами которых являются классы или структурные объекты,в вызовы специально названных членов.Дополнительный синтаксис не используется.</target>
        </trans-unit>
        <trans-unit id="eacd76902a11d7e0e3df7b94d293ad81fec39f59" translate="yes" xml:space="preserve">
          <source>Operator sets &lt;code&gt;value&lt;/code&gt; for element of JSON object by &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">Оператор устанавливает &lt;code&gt;value&lt;/code&gt; для элемента объекта JSON по &lt;code&gt;key&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="942d310c4eece12c0b6eb787bdd18914ed43a921" translate="yes" xml:space="preserve">
          <source>Operators not listed are not supported at all.</source>
          <target state="translated">Операторы,не перечисленные в списке,вообще не поддерживаются.</target>
        </trans-unit>
        <trans-unit id="105f14774b9dc4fd12fb78b69309a3c1d98f98f5" translate="yes" xml:space="preserve">
          <source>Optical Character Recognition</source>
          <target state="translated">Оптическое распознавание символов</target>
        </trans-unit>
        <trans-unit id="4635b8a94bf8d2a8157ac8f48eae6326d6299a58" translate="yes" xml:space="preserve">
          <source>Optimisation hints for assembly code.</source>
          <target state="translated">Подсказки по оптимизации для ассемблерного кода.</target>
        </trans-unit>
        <trans-unit id="2a03d18f56e01d18b8faf1e7c5daa696b62b96a8" translate="yes" xml:space="preserve">
          <source>Optimization is an optional pass that tries to rewrite the program in a semantically equivalent, but faster executing, version.</source>
          <target state="translated">Оптимизация-это необязательный проход,который пытается переписать программу в семантически эквивалентном,но более быстром исполнении,варианте.</target>
        </trans-unit>
        <trans-unit id="e7750f07400d449f606de01fdfb52aae1fd21fce" translate="yes" xml:space="preserve">
          <source>Optimize common special case alignSize(2)</source>
          <target state="translated">Оптимизация общего особого случаяСразмер(2)</target>
        </trans-unit>
        <trans-unit id="af308e3b0590ac25521d185bafdd2fc15fc1c44b" translate="yes" xml:space="preserve">
          <source>Optimize common special case alignSize(4)</source>
          <target state="translated">Оптимизация общего особого случаяСразмер(4)</target>
        </trans-unit>
        <trans-unit id="e4a193f0de6267241861c2d42d5a4c6cc2a9b046" translate="yes" xml:space="preserve">
          <source>Option[] &lt;code&gt;opt&lt;/code&gt;</source>
          <target state="translated">Опция [] &lt;code&gt;opt&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8d1a750a57d5ed1164a68ce6fe48eb75219856e9" translate="yes" xml:space="preserve">
          <source>Option[] &lt;strong id=&quot;options&quot;&gt;options&lt;/strong&gt;;</source>
          <target state="translated">Опция [] &lt;strong id=&quot;options&quot;&gt;опции&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="7d85f397e20f87376d5a77c0d5a7c922b7e4be12" translate="yes" xml:space="preserve">
          <source>Optional 4 char array to put the resulting Soundex characters into. If null, the return value buffer will be allocated on the heap.</source>
          <target state="translated">Необязательный 4-х символьный массив,в который помещаются результирующие символы Soundex.Если ноль,то буфер возвращаемого значения будет выделен на куче.</target>
        </trans-unit>
        <trans-unit id="d00ac75ec10fc459fe79ad686a447767b4094900" translate="yes" xml:space="preserve">
          <source>Optional Parentheses</source>
          <target state="translated">Дополнительные скобки</target>
        </trans-unit>
        <trans-unit id="038e563ee642144905db080ffd8ae1bf79d33e01" translate="yes" xml:space="preserve">
          <source>Optional arguments used for initializing the created object. If not present, the object is default constructed.</source>
          <target state="translated">Необязательные аргументы,используемые для инициализации созданного объекта.Если их нет,то объект по умолчанию построен.</target>
        </trans-unit>
        <trans-unit id="fdcdde29a4f281b516f2ccc0b86b05e8a9f79eaa" translate="yes" xml:space="preserve">
          <source>Optional initial value for the new type.</source>
          <target state="translated">Необязательное начальное значение для нового типа.</target>
        </trans-unit>
        <trans-unit id="6d59ad8cf4d8ef8301a7aaf80bd895b2ba04a3f4" translate="yes" xml:space="preserve">
          <source>Optional message to output on test failure.</source>
          <target state="translated">Необязательное сообщение для вывода при сбое теста.</target>
        </trans-unit>
        <trans-unit id="f30ef832425c5a7898fe008b0347b287bbe11286" translate="yes" xml:space="preserve">
          <source>Optional message to output on test failure. If msg is empty, and the thrown exception has a non-empty msg field, the exception's msg field will be output on test failure.</source>
          <target state="translated">Необязательное сообщение для вывода при сбое теста.Если msg пустое,а брошенное исключение имеет непустое поле msg,то поле msg исключения будет выведено при сбое теста.</target>
        </trans-unit>
        <trans-unit id="e22e0e7dfcab51210e2c1324ad28b24761a1cc15" translate="yes" xml:space="preserve">
          <source>Optional parentheses are not applied to delegates or function pointers.</source>
          <target state="translated">Дополнительные скобки не применяются к делегатам или указателям на функции.</target>
        </trans-unit>
        <trans-unit id="092c132b404aff7b3204e00316cdb117ca456851" translate="yes" xml:space="preserve">
          <source>Optional string with wildcards, such as  &quot;*.d&quot;. When present, it is used to filter the results by their file name. The supported wildcard strings are described under &lt;a href=&quot;std_path#globMatch&quot;&gt;&lt;code&gt; std.path.globMatch&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Необязательная строка с подстановочными знаками, например &quot;* .d&quot;. Когда он присутствует, он используется для фильтрации результатов по имени файла. Поддерживаемые подстановочные строки описаны в &lt;a href=&quot;std_path#globMatch&quot;&gt; &lt;code&gt; std.path.globMatch&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5003de64d53361cf50d9ac6aa9cf977dcc7c6c5a" translate="yes" xml:space="preserve">
          <source>Optional, used to create multiple unique types which are based on the same origin type &lt;code&gt;T&lt;/code&gt;</source>
          <target state="translated">Необязательно, используется для создания нескольких уникальных типов, основанных на одном и том же типе происхождения &lt;code&gt;T&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d4544162ebd3cc17060bab5af2189803c9093909" translate="yes" xml:space="preserve">
          <source>Optionally a string literal or manifest constant can be used to provide additional information in the deprecation message.</source>
          <target state="translated">Опционально строковый литерал или явная константа могут быть использованы для предоставления дополнительной информации в сообщении об аннулировании.</target>
        </trans-unit>
        <trans-unit id="3fcf22d9a17be7e076745071fa3d0b3148122d91" translate="yes" xml:space="preserve">
          <source>Options Terminator</source>
          <target state="translated">Опции Терминатор</target>
        </trans-unit>
        <trans-unit id="84ad00011b95818e19ed121e47fc0a5a9da924de" translate="yes" xml:space="preserve">
          <source>Options for &lt;code&gt;StatsCollector&lt;/code&gt; defined below. Each enables during compilation one specific counter, statistic, or other piece of information.</source>
          <target state="translated">Параметры для &lt;code&gt;StatsCollector&lt;/code&gt; определены ниже. Каждый включает во время компиляции один конкретный счетчик, статистику или другую часть информации.</target>
        </trans-unit>
        <trans-unit id="2c3004f998d37dff4cdd5bfe04bd588d9585293d" translate="yes" xml:space="preserve">
          <source>Options for the &lt;a href=&quot;#FrontTransversal&quot;&gt;&lt;code&gt;FrontTransversal&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#Transversal&quot;&gt;&lt;code&gt;Transversal&lt;/code&gt;&lt;/a&gt; ranges (below).</source>
          <target state="translated">Опции для диапазонов &lt;a href=&quot;#FrontTransversal&quot;&gt; &lt;code&gt;FrontTransversal&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;#Transversal&quot;&gt; &lt;code&gt;Transversal&lt;/code&gt; &lt;/a&gt; (ниже).</target>
        </trans-unit>
        <trans-unit id="e73dd1bfc6de45893094d39a0b8c52fd15136773" translate="yes" xml:space="preserve">
          <source>Options regarding auto-initialization of a &lt;code&gt;RefCounted&lt;/code&gt; object (see the definition of &lt;code&gt;RefCounted&lt;/code&gt; below).</source>
          <target state="translated">Параметры, касающиеся автоматической инициализации объекта &lt;code&gt;RefCounted&lt;/code&gt; (см. Определение &lt;code&gt;RefCounted&lt;/code&gt; ниже).</target>
        </trans-unit>
        <trans-unit id="fa0185ff06c2b5e2963d7b06c5172c58d05f4dc8" translate="yes" xml:space="preserve">
          <source>Options supported by -check</source>
          <target state="translated">Опции поддерживаются с помощью -check</target>
        </trans-unit>
        <trans-unit id="d52742178e23e949c60c1d5e040ad60b9387322e" translate="yes" xml:space="preserve">
          <source>Options supported by -checkaction=</source>
          <target state="translated">Опции поддерживаются с помощью -checkaction=</target>
        </trans-unit>
        <trans-unit id="363dac403a2a83e25797a3d9c9ee22f4611eaac4" translate="yes" xml:space="preserve">
          <source>Options supported by -extern-std</source>
          <target state="translated">Опции,поддерживаемые -extern-std</target>
        </trans-unit>
        <trans-unit id="60f84bb401de02d865a716cc0a5e1289035f7821" translate="yes" xml:space="preserve">
          <source>Options with multiple names</source>
          <target state="translated">Опции с несколькими названиями</target>
        </trans-unit>
        <trans-unit id="19c159a25d07edf6bd220009e32de0cdee356e75" translate="yes" xml:space="preserve">
          <source>Options[] &lt;strong id=&quot;opts&quot;&gt;opts&lt;/strong&gt;;</source>
          <target state="translated">Опции [] &lt;strong id=&quot;opts&quot;&gt;opts&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="edace25305092565e308d9146174a0a2938df434" translate="yes" xml:space="preserve">
          <source>Or Expressions</source>
          <target state="translated">Или Выражения</target>
        </trans-unit>
        <trans-unit id="4f2ce19ebdea19c7f2e73deccf0f96bba95a0a64" translate="yes" xml:space="preserve">
          <source>OrOr Expressions</source>
          <target state="translated">ИлиОр Выражения</target>
        </trans-unit>
        <trans-unit id="2386e5c9e2c936e53415bc77759add97d38ae88d" translate="yes" xml:space="preserve">
          <source>OrOrExpression</source>
          <target state="translated">OrOrExpression</target>
        </trans-unit>
        <trans-unit id="7845f6223be30b5297bf59f283a22a525e6c7aca" translate="yes" xml:space="preserve">
          <source>Order Of Evaluation</source>
          <target state="translated">Порядок оценки</target>
        </trans-unit>
        <trans-unit id="972733ae150ac5a0d4141ce4b0e555b5149be952" translate="yes" xml:space="preserve">
          <source>Order did not match that found in the input</source>
          <target state="translated">Порядок не совпадает с тем,что было найдено на входе</target>
        </trans-unit>
        <trans-unit id="15526c521fbddfecba053d2b9bd9f4f2d40a4fcf" translate="yes" xml:space="preserve">
          <source>Order of Static Construction</source>
          <target state="translated">Порядок статического строительства</target>
        </trans-unit>
        <trans-unit id="c3fec94dee877456604b578bf17a9f503a832939" translate="yes" xml:space="preserve">
          <source>Order of Static Construction within a Module</source>
          <target state="translated">Порядок статического строительства внутри модуля</target>
        </trans-unit>
        <trans-unit id="b07e4919a91d40cd506173a6c238d70b4d2b5a5c" translate="yes" xml:space="preserve">
          <source>Order of Static Destruction</source>
          <target state="translated">Порядок статического разрушения</target>
        </trans-unit>
        <trans-unit id="03669ae8e7b2e4ca8ca78be6c322b755b43c766a" translate="yes" xml:space="preserve">
          <source>Order of Unit tests</source>
          <target state="translated">Порядок проведения единичных испытаний</target>
        </trans-unit>
        <trans-unit id="c478a3b39efae7d0d0a63d69e6666965308c26b2" translate="yes" xml:space="preserve">
          <source>Order the provided members to minimize size while preserving alignment. Alignment is not always optimal for 80-bit reals, nor for structs declared as align(1).</source>
          <target state="translated">Закажите предоставленным членам,чтобы минимизировать размер при сохранении выравнивания.Выравнивание не всегда оптимально ни для 80-битных реалов,ни для структур,объявленных align(1).</target>
        </trans-unit>
        <trans-unit id="c3d3d13178dc609ab5facd250c988ab12f4ba7bb" translate="yes" xml:space="preserve">
          <source>Ordering comparison used by the &quot;&amp;lt;&quot;, &quot;&amp;lt;=&quot;, &quot;&amp;gt;&quot;, and &quot;&amp;gt;=&quot; operators. In case comparison is not sensible between the held value and &lt;code&gt;rhs&lt;/code&gt;, an exception is thrown.</source>
          <target state="translated">Сравнение порядка, используемое операторами &quot;&amp;lt;&quot;, &quot;&amp;lt;=&quot;, &quot;&amp;gt;&quot; и &quot;&amp;gt; =&quot;. В случае, если сравнение между удерживаемым значением и &lt;code&gt;rhs&lt;/code&gt; не имеет смысла, выдается исключение.</target>
        </trans-unit>
        <trans-unit id="483f66f6d26b7cb776d522769f431003c3f9bfb5" translate="yes" xml:space="preserve">
          <source>Organizes one contiguous chunk of memory in equal-size blocks and tracks allocation status at the cost of one bit per block.</source>
          <target state="translated">Организует один смежный фрагмент памяти в блоках одинакового размера и отслеживает состояние распределения по стоимости одного бита на блок.</target>
        </trans-unit>
        <trans-unit id="0111ae8997cfd3379765a4a4e0e5efb36400d9f8" translate="yes" xml:space="preserve">
          <source>OriginalType!E &lt;strong id=&quot;asOriginalType&quot;&gt;asOriginalType&lt;/strong&gt;(E)(E value)</source>
          <target state="translated">OriginalType! E &lt;strong id=&quot;asOriginalType&quot;&gt;asOriginalType&lt;/strong&gt; (E) (значение E)</target>
        </trans-unit>
        <trans-unit id="c10643b85fbfbd4fbb63e61c52588993e2ffbfa5" translate="yes" xml:space="preserve">
          <source>Oriya</source>
          <target state="translated">Oriya</target>
        </trans-unit>
        <trans-unit id="42cb2600c161bf7bf85310fb50b63266488059bf" translate="yes" xml:space="preserve">
          <source>Osmanya</source>
          <target state="translated">Osmanya</target>
        </trans-unit>
        <trans-unit id="6e6a6f2086bb5fe5dbfd17d8d5f502d48759834b" translate="yes" xml:space="preserve">
          <source>Other</source>
          <target state="translated">Other</target>
        </trans-unit>
        <trans-unit id="9aaa73eee9cf49714bdd9258a2956f335d4eeec0" translate="yes" xml:space="preserve">
          <source>Other &lt;a href=&quot;https://python.org/sigs/doc-sig/otherlangs.html&quot;&gt;documentation tools&lt;/a&gt;</source>
          <target state="translated">Другие &lt;a href=&quot;https://python.org/sigs/doc-sig/otherlangs.html&quot;&gt;инструменты документации&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bd6313338475c9071259ef3238ae97dbbd791a4d" translate="yes" xml:space="preserve">
          <source>Other Posix Systems</source>
          <target state="translated">Другие системы Posix</target>
        </trans-unit>
        <trans-unit id="5e7b0a895f475b6f28b441a465421ad29d8e0322" translate="yes" xml:space="preserve">
          <source>Other date types</source>
          <target state="translated">Другие даты</target>
        </trans-unit>
        <trans-unit id="26fa36aba9abb20b0516eee338a081a64cf71284" translate="yes" xml:space="preserve">
          <source>Other early CPUs (Nx586, AMD K5, K6, Centaur C3, Transmeta, Cyrix, Rise) were mostly in-order.</source>
          <target state="translated">Другие ранние процессоры (Nx586,AMD K5,K6,Centaur C3,Transmeta,Cyrix,Rise)были в основном в порядке.</target>
        </trans-unit>
        <trans-unit id="b65c561a3ed0f4f2558514b426246a99c9d341a5" translate="yes" xml:space="preserve">
          <source>Other functionality</source>
          <target state="translated">Другая функциональность</target>
        </trans-unit>
        <trans-unit id="f3ce46edeed2ba5081d15973ee7b8fd78b33a5e9" translate="yes" xml:space="preserve">
          <source>Other non-binary properties (once supported) follow the same notation - &lt;code&gt;unicode.propertyName.propertyValue&lt;/code&gt; for compile-time checked access and &lt;code&gt;unicode.propertyName(propertyValue)&lt;/code&gt; for run-time checked one.</source>
          <target state="translated">Другие недвоичные свойства (когда-то поддерживаемые) следуют той же нотации - &lt;code&gt;unicode.propertyName.propertyValue&lt;/code&gt; для проверенного доступа во время компиляции и &lt;code&gt;unicode.propertyName(propertyValue)&lt;/code&gt; для проверенного во время выполнения.</target>
        </trans-unit>
        <trans-unit id="315b2283e70ed5c9b3a32d956573fa52bcf2327a" translate="yes" xml:space="preserve">
          <source>Other_Alphabetic</source>
          <target state="translated">Other_Alphabetic</target>
        </trans-unit>
        <trans-unit id="3576c30ed2a7456b454a6df0f1d356a6a5b81854" translate="yes" xml:space="preserve">
          <source>Other_Default_Ignorable_Code_Point</source>
          <target state="translated">Other_Default_Ignorable_Code_Point</target>
        </trans-unit>
        <trans-unit id="b8a4e9e3315108565913f1214d70e6ab06305fea" translate="yes" xml:space="preserve">
          <source>Other_Grapheme_Extend</source>
          <target state="translated">Other_Grapheme_Extend</target>
        </trans-unit>
        <trans-unit id="1eafede4d641ad77c5e7696525a5726a3b1e25e2" translate="yes" xml:space="preserve">
          <source>Other_ID_Continue</source>
          <target state="translated">Other_ID_Continue</target>
        </trans-unit>
        <trans-unit id="20de61891c461dc1d0740d06823ad7c655241aae" translate="yes" xml:space="preserve">
          <source>Other_ID_Start</source>
          <target state="translated">Other_ID_Start</target>
        </trans-unit>
        <trans-unit id="28d3f28453d83a9d4de7288e2adc6832cacb17eb" translate="yes" xml:space="preserve">
          <source>Other_Letter</source>
          <target state="translated">Other_Letter</target>
        </trans-unit>
        <trans-unit id="01c4b64406b7699bf365d87632f6ecac32fc9e72" translate="yes" xml:space="preserve">
          <source>Other_Lowercase</source>
          <target state="translated">Other_Lowercase</target>
        </trans-unit>
        <trans-unit id="85b8947a3c801b69f490df8abb132c7f38d3815e" translate="yes" xml:space="preserve">
          <source>Other_Math</source>
          <target state="translated">Other_Math</target>
        </trans-unit>
        <trans-unit id="05fb43438f8add5bc5e520c7162cafcff5568073" translate="yes" xml:space="preserve">
          <source>Other_Number</source>
          <target state="translated">Other_Number</target>
        </trans-unit>
        <trans-unit id="6a6c035052d2fcea5bd0994c7e06947db784b476" translate="yes" xml:space="preserve">
          <source>Other_Punctuation</source>
          <target state="translated">Other_Punctuation</target>
        </trans-unit>
        <trans-unit id="ecc700e8bf50c329823e4432669e2e0f13941414" translate="yes" xml:space="preserve">
          <source>Other_Symbol</source>
          <target state="translated">Other_Symbol</target>
        </trans-unit>
        <trans-unit id="8f9fafd248962959d08eb0fc0b6409cc5836d1a0" translate="yes" xml:space="preserve">
          <source>Other_Uppercase</source>
          <target state="translated">Other_Uppercase</target>
        </trans-unit>
        <trans-unit id="45d9c732939826aeca03102c6b35f994d91fb0c2" translate="yes" xml:space="preserve">
          <source>Others will be added as they make sense and new implementations appear.</source>
          <target state="translated">Другие будут добавляться по мере того,как они будут иметь смысл,и появляться новые реализации.</target>
        </trans-unit>
        <trans-unit id="1b108b5414366434a06640c1cfb85f59ec1fb998" translate="yes" xml:space="preserve">
          <source>Otherwise if set to &lt;code&gt;CheckDns.yes&lt;/code&gt;, isEmail performs DNS checking.</source>
          <target state="translated">В противном случае, если установлено значение &lt;code&gt;CheckDns.yes&lt;/code&gt; , isEmail выполняет проверку DNS.</target>
        </trans-unit>
        <trans-unit id="4feb189ac05b2fa8c8a6112ed39f3df4fa83a432" translate="yes" xml:space="preserve">
          <source>Otherwise if set to &lt;code&gt;OpenRight.no&lt;/code&gt;, then the interval is closed to the right (last element included).</source>
          <target state="translated">В противном случае, если установлено значение &lt;code&gt;OpenRight.no&lt;/code&gt; , интервал будет закрыт вправо (последний элемент включен).</target>
        </trans-unit>
        <trans-unit id="631af2017187f4c3448d0a2a40a3b795c4cc9643" translate="yes" xml:space="preserve">
          <source>Otherwise if set to &lt;code&gt;SortOutput.yes&lt;/code&gt;, the output should be sorted.</source>
          <target state="translated">В противном случае, если установлено значение &lt;code&gt;SortOutput.yes&lt;/code&gt; , выходные данные должны быть отсортированы.</target>
        </trans-unit>
        <trans-unit id="49e81a26951cdd4a294c1a637fe5c96588287a18" translate="yes" xml:space="preserve">
          <source>Otherwise the expressions &lt;code&gt;a.opEquals(b)&lt;/code&gt; and &lt;code&gt;b.opEquals(a)&lt;/code&gt; are tried. If both resolve to the same &lt;code&gt;opEquals&lt;/code&gt; function, then the expression is rewritten to be &lt;code&gt;a.opEquals(b)&lt;/code&gt;.</source>
          <target state="translated">В противном случае используются выражения &lt;code&gt;a.opEquals(b)&lt;/code&gt; и &lt;code&gt;b.opEquals(a)&lt;/code&gt; . Если оба разрешают одну и &lt;code&gt;opEquals&lt;/code&gt; же функцию opEquals , то выражение переписывается так, чтобы оно было &lt;code&gt;a.opEquals(b)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fad059114d46d5cf546ef929c09cba6cc729966b" translate="yes" xml:space="preserve">
          <source>Otherwise, a &lt;a href=&quot;expression#CastExpression&quot;&gt;&lt;i&gt;CastExpression&lt;/i&gt;&lt;/a&gt; can be used to force a conversion when an implicit version is disallowed, but this cannot be done in &lt;code&gt;@safe&lt;/code&gt; code, and the correctness of it must be verified by the user.</source>
          <target state="translated">В противном случае &lt;a href=&quot;expression#CastExpression&quot;&gt;&lt;i&gt;CastExpression&lt;/i&gt;&lt;/a&gt; может использоваться для принудительного преобразования, когда неявная версия запрещена, но это не может быть сделано в коде &lt;code&gt;@safe&lt;/code&gt; , и правильность его должна проверяться пользователем.</target>
        </trans-unit>
        <trans-unit id="e27183018d554dc439f94eb91f969f3c9943015f" translate="yes" xml:space="preserve">
          <source>Otherwise, a new memory block of size &lt;code&gt;sz&lt;/code&gt; will be allocated as if by a call to &lt;code&gt;malloc&lt;/code&gt;, or the implementation may instead resize or shrink the memory block in place. The contents of the new memory block will be the same as the contents of the old memory block, up to the lesser of the new and old sizes.</source>
          <target state="translated">В противном случае новый блок памяти размером &lt;code&gt;sz&lt;/code&gt; будет выделен как при вызове &lt;code&gt;malloc&lt;/code&gt; , или реализация может вместо этого изменить размер или уменьшить блок памяти на месте. Содержимое нового блока памяти будет таким же, как содержимое старого блока памяти, вплоть до меньшего из нового и старого размеров.</target>
        </trans-unit>
        <trans-unit id="20322615ab9d65b2f51081694c4503aec51c6ded" translate="yes" xml:space="preserve">
          <source>Otherwise, an error results.</source>
          <target state="translated">В противном случае-ошибка.</target>
        </trans-unit>
        <trans-unit id="e0dc160c40a7011aff692c332c1e49596e1e4b69" translate="yes" xml:space="preserve">
          <source>Otherwise, append &lt;code&gt;path&lt;/code&gt; to &lt;code&gt;base&lt;/code&gt; and return the result. If &lt;code&gt;base&lt;/code&gt; is not specified, the current working directory is used.</source>
          <target state="translated">В противном случае добавьте &lt;code&gt;path&lt;/code&gt; к &lt;code&gt;base&lt;/code&gt; и верните результат. Если &lt;code&gt;base&lt;/code&gt; не указана, используется текущий рабочий каталог.</target>
        </trans-unit>
        <trans-unit id="4cd7b69fd1f55506fef8b49f409733c40cf8d99e" translate="yes" xml:space="preserve">
          <source>Otherwise, append &lt;code&gt;path&lt;/code&gt; to the current working directory, which allocates memory.</source>
          <target state="translated">В противном случае добавьте &lt;code&gt;path&lt;/code&gt; к текущему рабочему каталогу, который выделяет память.</target>
        </trans-unit>
        <trans-unit id="93d2d0917f1e44edec12baf0dd8089b83f8b9dfd" translate="yes" xml:space="preserve">
          <source>Otherwise, are formatted just as their type name.</source>
          <target state="translated">В противном случае они форматируются так же,как и их имя типа.</target>
        </trans-unit>
        <trans-unit id="d3b40053dd280e0bf88f12f740348b76f024645a" translate="yes" xml:space="preserve">
          <source>Otherwise, both constructors are defined. The &lt;code&gt;data&lt;/code&gt;-based constructor assumes memory has been allocated with the parent allocator. The &lt;code&gt;capacity&lt;/code&gt;-based constructor uses &lt;code&gt;ParentAllocator&lt;/code&gt; to allocate an appropriate contiguous hunk of memory. Regardless of the constructor used, the destructor releases the memory by using &lt;code&gt;ParentAllocator.deallocate&lt;/code&gt;.</source>
          <target state="translated">В противном случае оба конструктора определены. Конструктор на основе &lt;code&gt;data&lt;/code&gt; предполагает, что память была выделена родительским распределителем. Конструктор на основе &lt;code&gt;capacity&lt;/code&gt; использует &lt;code&gt;ParentAllocator&lt;/code&gt; для выделения соответствующего непрерывного фрагмента памяти. Независимо от используемого конструктора деструктор освобождает память с помощью &lt;code&gt;ParentAllocator.deallocate&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="98265553c41f7942d874dfa06e7085c989a0b6c9" translate="yes" xml:space="preserve">
          <source>Otherwise, elements are moved incrementally towards the front of &lt;code&gt;range&lt;/code&gt;; a given element is never moved several times, but more elements are moved than in the previous cases.</source>
          <target state="translated">В противном случае элементы перемещаются постепенно по направлению к передней части &lt;code&gt;range&lt;/code&gt; ; данный элемент никогда не перемещается несколько раз, но перемещается больше элементов, чем в предыдущих случаях.</target>
        </trans-unit>
        <trans-unit id="d7b4269e42ae4fd84359bf3507bfdbea02d65c5e" translate="yes" xml:space="preserve">
          <source>Otherwise, if &lt;code&gt;S&lt;/code&gt; defines a postblit, the generated code for &lt;code&gt;opAssign&lt;/code&gt; is:</source>
          <target state="translated">В противном случае, если &lt;code&gt;S&lt;/code&gt; определяет постблит, сгенерированный код для &lt;code&gt;opAssign&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="34d83f38a3798f99d8cf552fcbf4e3fb59e56355" translate="yes" xml:space="preserve">
          <source>Otherwise, if &lt;code&gt;s == SwapStrategy.unstable &amp;amp;&amp;amp; isBidirectionalRange!Range &amp;amp;&amp;amp; hasLength!Range &amp;amp;&amp;amp; hasLvalueElements!Range&lt;/code&gt;, then elements are still moved from the end of the range, but time is spent on advancing between slots by repeated calls to &lt;code&gt;range.popFront&lt;/code&gt;.</source>
          <target state="translated">В противном случае, если &lt;code&gt;s == SwapStrategy.unstable &amp;amp;&amp;amp; isBidirectionalRange!Range &amp;amp;&amp;amp; hasLength!Range &amp;amp;&amp;amp; hasLvalueElements!Range&lt;/code&gt; , то элементы по-прежнему перемещаются из конца диапазона, но время затрачивается на продвижение между слотами при повторных вызовах &lt;code&gt;range.popFront&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ba7fb1afa41d072823200e973c8318d1043c883c" translate="yes" xml:space="preserve">
          <source>Otherwise, if set to &lt;code&gt;AllowDayOverflow.yes&lt;/code&gt;, then day overflow is allowed.</source>
          <target state="translated">В противном случае, если установлено значение &lt;code&gt;AllowDayOverflow.yes&lt;/code&gt; , допустимо переполнение дня.</target>
        </trans-unit>
        <trans-unit id="be83c3911232bf57584017e6a89fc54168a20468" translate="yes" xml:space="preserve">
          <source>Otherwise, if set to &lt;code&gt;AutoStart.yes&lt;/code&gt;, then the StopWatch is started when it is constructed.</source>
          <target state="translated">В противном случае, если установлено значение &lt;code&gt;AutoStart.yes&lt;/code&gt; , StopWatch запускается при его создании.</target>
        </trans-unit>
        <trans-unit id="d43b8e9c68a2b3e8bf2cef3f5678116c8f717c33" translate="yes" xml:space="preserve">
          <source>Otherwise, if set to &lt;code&gt;AutoStart.yes&lt;/code&gt;, then the stopwatch is started when it is constructed.</source>
          <target state="translated">В противном случае, если установлено значение &lt;code&gt;AutoStart.yes&lt;/code&gt; , секундомер запускается при его создании.</target>
        </trans-unit>
        <trans-unit id="10c743c1cc7b3a7cf0661dbb3eeb470fb9ca7f88" translate="yes" xml:space="preserve">
          <source>Otherwise, if set to &lt;code&gt;PopFirst.yes&lt;/code&gt;, then popFront is called before returning the range.</source>
          <target state="translated">В противном случае, если установлено значение &lt;code&gt;PopFirst.yes&lt;/code&gt; , то popFront вызывается перед возвратом диапазона.</target>
        </trans-unit>
        <trans-unit id="1dea9b190a18c52440448cc36e1cc9a993d73f06" translate="yes" xml:space="preserve">
          <source>Otherwise, set &lt;code&gt;overflow&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; and return an unspecified value</source>
          <target state="translated">В противном случае установите для &lt;code&gt;overflow&lt;/code&gt; значение &lt;code&gt;true&lt;/code&gt; и верните неопределенное значение.</target>
        </trans-unit>
        <trans-unit id="df4b2321350bd78d5e59c9f4b65b664ab9f798a6" translate="yes" xml:space="preserve">
          <source>Otherwise, the garbage collector is called to immediately free the memory allocated for the class instance or struct instance.</source>
          <target state="translated">В противном случае вызывается сборщик мусора,чтобы немедленно освободить память,выделенную для экземпляра класса или структурного экземпляра.</target>
        </trans-unit>
        <trans-unit id="51f2bf5052af0a341395b6e5f55714745316c9a3" translate="yes" xml:space="preserve">
          <source>Otherwise, the matching delimiter is the same as the delimiter character:</source>
          <target state="translated">В противном случае,совпадающий разделитель будет таким же,как и символ разделителя:</target>
        </trans-unit>
        <trans-unit id="5e12d941f654871ede52074458d874bcdb81f831" translate="yes" xml:space="preserve">
          <source>Otherwise, the objects are formatted as input range.</source>
          <target state="translated">В противном случае объекты форматируются как диапазон ввода.</target>
        </trans-unit>
        <trans-unit id="96b3aee374e1357ece2d5f44dff187e4382dceae" translate="yes" xml:space="preserve">
          <source>Otherwise, the operator first evaluates &lt;code&gt;auto result = opBinary!op(payload, rhs).payload&lt;/code&gt;, which is subject to the hooks in &lt;code&gt;opBinary&lt;/code&gt;. Then, if &lt;code&gt;result&lt;/code&gt; is less than &lt;code&gt;Checked!(T, Hook).min&lt;/code&gt; and if &lt;code&gt;Hook&lt;/code&gt; defines &lt;code&gt;onLowerBound&lt;/code&gt;, the payload is assigned from &lt;code&gt; hook.onLowerBound(result, min)&lt;/code&gt;. If &lt;code&gt;result&lt;/code&gt; is greater than &lt;code&gt;Checked!(T, Hook).max&lt;/code&gt; and if &lt;code&gt;Hook&lt;/code&gt; defines &lt;code&gt;onUpperBound&lt;/code&gt;, the payload is assigned from &lt;code&gt;hook.onUpperBound(result, min)&lt;/code&gt;.</source>
          <target state="translated">В противном случае оператор сначала оценивает &lt;code&gt;auto result = opBinary!op(payload, rhs).payload&lt;/code&gt; , который подчиняется &lt;code&gt;opBinary&lt;/code&gt; в opBinary . Затем, если &lt;code&gt;result&lt;/code&gt; меньше чем &lt;code&gt;Checked!(T, Hook).min&lt;/code&gt; и если &lt;code&gt;Hook&lt;/code&gt; определяет &lt;code&gt;onLowerBound&lt;/code&gt; , полезная нагрузка назначается из &lt;code&gt; hook.onLowerBound(result, min)&lt;/code&gt; . Если &lt;code&gt;result&lt;/code&gt; больше чем &lt;code&gt;Checked!(T, Hook).max&lt;/code&gt; и если &lt;code&gt;Hook&lt;/code&gt; определяет &lt;code&gt;onUpperBound&lt;/code&gt; , полезная нагрузка назначается из &lt;code&gt;hook.onUpperBound(result, min)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="48528efcc3f9a77bb45e05946e171bb9ab922461" translate="yes" xml:space="preserve">
          <source>Otherwise, they are formatted like &lt;code&gt;Type(field1, filed2, ...)&lt;/code&gt;.</source>
          <target state="translated">В противном случае они форматируются как &lt;code&gt;Type(field1, filed2, ...)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a6ad8c0de5c848abc87bb5a19ad55877fbb13f5f" translate="yes" xml:space="preserve">
          <source>Otherwise, walks the range through its length and returns the number of elements seen. Performes &amp;Omicron;(&lt;code&gt;n&lt;/code&gt;) evaluations of &lt;code&gt;range.empty&lt;/code&gt; and &lt;code&gt;range.popFront()&lt;/code&gt;, where &lt;code&gt;n&lt;/code&gt; is the effective length of &lt;code&gt;range&lt;/code&gt;.</source>
          <target state="translated">В противном случае, проходит диапазон по его длине и возвращает количество увиденных элементов. Выполняет &amp;Omicron; ( &lt;code&gt;n&lt;/code&gt; ) вычислений &lt;code&gt;range.empty&lt;/code&gt; и &lt;code&gt;range.popFront()&lt;/code&gt; , где &lt;code&gt;n&lt;/code&gt; - эффективная длина &lt;code&gt;range&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ff8db6ada06f83227eed246c83cc3693d4063c57" translate="yes" xml:space="preserve">
          <source>Our label symbol, with vector to keep track of forward references.</source>
          <target state="translated">Символ нашего лейбла,с вектором для отслеживания прямых ссылок.</target>
        </trans-unit>
        <trans-unit id="84996582614366aed96d409996a95b59874ed607" translate="yes" xml:space="preserve">
          <source>Out of disk space.</source>
          <target state="translated">Из дискового пространства.</target>
        </trans-unit>
        <trans-unit id="8287615f2ac89aad252242dec878907206c5210b" translate="yes" xml:space="preserve">
          <source>Out of memory.</source>
          <target state="translated">Из памяти.</target>
        </trans-unit>
        <trans-unit id="4ec60c716ead5ac12059fc839ab1f661a44d5058" translate="yes" xml:space="preserve">
          <source>OutBuffer &lt;code&gt;buf&lt;/code&gt;</source>
          <target state="translated">OutBuffer &lt;code&gt;buf&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f0ab7a95451a4e0b671e325269d07a5d314844a6" translate="yes" xml:space="preserve">
          <source>OutBuffer provides a way to build up an array of bytes out of raw data. It is useful for things like preparing an array of bytes to write out to a file. OutBuffer's byte order is the format native to the computer. To control the byte order (endianness), use a class derived from OutBuffer. OutBuffer's internal buffer is allocated with the GC. Pointers stored into the buffer are scanned by the GC, but you have to ensure proper alignment, e.g. by using alignSize((void*).sizeof).</source>
          <target state="translated">OutBuffer предоставляет способ построения массива байт из необработанных данных.Это полезно для таких вещей,как подготовка массива байт для записи в файл.Порядок байт OutBuffer-это формат,родной для компьютера.Для управления порядком байт (endianness)используйте класс,полученный из OutBuffer.Внутренний буфер OutBuffer выделяется вместе с GC.Хранящиеся в буфере указатели сканируются ГК,но необходимо обеспечить их правильное выравнивание,например,с помощью функции alignSize((void*).sizeof).</target>
        </trans-unit>
        <trans-unit id="d15970d277dc3b3ea6e3907fe5ae14f4e7d68498" translate="yes" xml:space="preserve">
          <source>OutBuffer* &lt;code&gt;buf&lt;/code&gt;</source>
          <target state="translated">OutBuffer * &lt;code&gt;buf&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="52d9787a72c9469cdbcb944e5fe679a9d46f4b4d" translate="yes" xml:space="preserve">
          <source>OutOfMemoryError on allocation failure.</source>
          <target state="translated">OutOfMemoryError on allocation failure.</target>
        </trans-unit>
        <trans-unit id="7e451bc39b00e365a897773c4075f46ce2440988" translate="yes" xml:space="preserve">
          <source>Outbuffer &lt;strong id=&quot;objbuf&quot;&gt;objbuf&lt;/strong&gt;;</source>
          <target state="translated">Outbuffer &lt;strong id=&quot;objbuf&quot;&gt;objbuf&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="4bed336194a9a5c86b6a734f03b3570d2aae1a68" translate="yes" xml:space="preserve">
          <source>Output</source>
          <target state="translated">Output</target>
        </trans-unit>
        <trans-unit id="2c747a01339ff37505e527737a9546e3714554ca" translate="yes" xml:space="preserve">
          <source>Output &lt;code&gt;ans&lt;/code&gt;</source>
          <target state="translated">Выходной &lt;code&gt;ans&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d14ab80d73c6910ed8c82cf0b5de89687b958ffe" translate="yes" xml:space="preserve">
          <source>Output &lt;code&gt;output&lt;/code&gt;</source>
          <target state="translated">Выходной &lt;code&gt;output&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e311d4b15d04097b72fdbeebaf0cb4db252e1942" translate="yes" xml:space="preserve">
          <source>Output is sent to this writer. Typical output writers include &lt;a href=&quot;std_array#Appender!string&quot;&gt;&lt;code&gt;std.array.Appender!string&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;std_stdio#LockingTextWriter&quot;&gt;&lt;code&gt;std.stdio.LockingTextWriter&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Вывод отправляется этому автору. Типичные средства вывода включают &lt;a href=&quot;std_array#Appender!string&quot;&gt; &lt;code&gt;std.array.Appender!string&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;std_stdio#LockingTextWriter&quot;&gt; &lt;code&gt;std.stdio.LockingTextWriter&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9a955eff9acd789cc5203dc93f25956ae2aba50f" translate="yes" xml:space="preserve">
          <source>Output range which locks the file when created, and unlocks the file when it goes out of scope.</source>
          <target state="translated">Выходной диапазон,который блокирует файл при создании,и разблокирует файл,когда он выходит за рамки видимости.</target>
        </trans-unit>
        <trans-unit id="feaa8d97ca89d32a72e3374b3d9efe87224820f5" translate="yes" xml:space="preserve">
          <source>Output range.</source>
          <target state="translated">Выходной диапазон.</target>
        </trans-unit>
        <trans-unit id="f3c8c95c5e534bcd2ea0034a0d83177efa6923f4" translate="yes" xml:space="preserve">
          <source>Output:</source>
          <target state="translated">Output:</target>
        </trans-unit>
        <trans-unit id="bd2c85794fdb242bd898f477b91a4d9ddc3f1715" translate="yes" xml:space="preserve">
          <source>OutputRange &lt;code&gt;writer&lt;/code&gt;</source>
          <target state="translated">OutputRange &lt;code&gt;writer&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f87baece393f11d2ebd7d34364434c48c4a02484" translate="yes" xml:space="preserve">
          <source>OutputRange or writeable array at least 36 entries long</source>
          <target state="translated">OutputRange или массив с возможностью записи длиной не менее 36 записей</target>
        </trans-unit>
        <trans-unit id="13e210f0c6fb1ed7f5c6dbe5107c577b2e60ca5f" translate="yes" xml:space="preserve">
          <source>OutputRangeObject!(R, E) &lt;strong id=&quot;outputRangeObject&quot;&gt;outputRangeObject&lt;/strong&gt;(R)(R range);</source>
          <target state="translated">OutputRangeObject! (R, E) &lt;strong id=&quot;outputRangeObject&quot;&gt;outputRangeObject&lt;/strong&gt; (R) (диапазон R);</target>
        </trans-unit>
        <trans-unit id="e85d6164bf319f351741910ab97e716a962afc3a" translate="yes" xml:space="preserve">
          <source>Outputs &lt;code&gt;e&lt;/code&gt; to &lt;code&gt;r&lt;/code&gt;. The exact effect is dependent upon the two types. Several cases are accepted, as described below. The code snippets are attempted in order, and the first to compile &quot;wins&quot; and gets evaluated.</source>
          <target state="translated">Выходы от &lt;code&gt;e&lt;/code&gt; до &lt;code&gt;r&lt;/code&gt; . Точный эффект зависит от двух типов. Принимаются несколько случаев, как описано ниже. Фрагменты кода выполняются по порядку, и первый компилирует &amp;laquo;выигрывает&amp;raquo; и оценивается.</target>
        </trans-unit>
        <trans-unit id="a1bb1dbd2d84148a196dd74f5ae5a0467c419f1c" translate="yes" xml:space="preserve">
          <source>Outputs element &lt;code&gt;e&lt;/code&gt; to a range.</source>
          <target state="translated">Выводит элемент &lt;code&gt;e&lt;/code&gt; в диапазон.</target>
        </trans-unit>
        <trans-unit id="4da7bc9200c71949eae8135d4a25bb5b299cf7cc" translate="yes" xml:space="preserve">
          <source>Overflow</source>
          <target state="translated">Overflow</target>
        </trans-unit>
        <trans-unit id="cf31b736962d25ed4317259b0c7493d64da74b0f" translate="yes" xml:space="preserve">
          <source>Overlapping Copying</source>
          <target state="translated">Перекрывающееся копирование</target>
        </trans-unit>
        <trans-unit id="1df91417e6e2a1e93fd773916d0eacc3cee16a1e" translate="yes" xml:space="preserve">
          <source>Overlapping copies are an error:</source>
          <target state="translated">Перекрывающиеся копии-это ошибка:</target>
        </trans-unit>
        <trans-unit id="26c78f2170e31758038f3bb0a52b3d4d222f938f" translate="yes" xml:space="preserve">
          <source>Overload A Function For A Virtual Table</source>
          <target state="translated">Перегрузка функции для виртуальной таблицы</target>
        </trans-unit>
        <trans-unit id="158045726a48723e8e24b0a391a82a31e3194519" translate="yes" xml:space="preserve">
          <source>Overload Set</source>
          <target state="translated">Перегрузочный комплект</target>
        </trans-unit>
        <trans-unit id="8886e8c38f58ad0262aa71aa1b3e45c6e90e8134" translate="yes" xml:space="preserve">
          <source>Overload Sets</source>
          <target state="translated">перегрузочные комплекты</target>
        </trans-unit>
        <trans-unit id="67ecd6530cb09f0a6a1016e4b467ebf1b14e8282" translate="yes" xml:space="preserve">
          <source>Overload existing TemplateDeclaration 'this' with the new one 's'. Return true if successful; i.e. no conflict.</source>
          <target state="translated">Перегрузите существующий шаблон-декларацию 'this' новой 's'.Возвращать true в случае успеха,т.е.без конфликтов.</target>
        </trans-unit>
        <trans-unit id="eae487bc2f0194066ba0b4a013c5fcf7636c06a2" translate="yes" xml:space="preserve">
          <source>Overload of &lt;a href=&quot;#rename&quot;&gt;&lt;code&gt;rename&lt;/code&gt;&lt;/a&gt; that takes an associative array &lt;code&gt;translate&lt;/code&gt; as a template parameter, where the keys are either the names or indices of the members to be changed and the new names are the corresponding values. Every key in &lt;code&gt;translate&lt;/code&gt; must be the name of a member of the &lt;a href=&quot;#tuple&quot;&gt;&lt;code&gt;tuple&lt;/code&gt;&lt;/a&gt;. The same rules for empty strings apply as for the variadic template overload of &lt;a href=&quot;#rename&quot;&gt;&lt;code&gt;rename&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Перегрузка &lt;a href=&quot;#rename&quot;&gt; &lt;code&gt;rename&lt;/code&gt; &lt;/a&gt; которая принимает ассоциативный массив &lt;code&gt;translate&lt;/code&gt; в качестве параметра шаблона, где ключами являются либо имена, либо индексы членов, которые необходимо изменить, а новым именам - соответствующие значения. Каждый ключ в &lt;code&gt;translate&lt;/code&gt; должен быть именем члена &lt;a href=&quot;#tuple&quot;&gt; &lt;code&gt;tuple&lt;/code&gt; &lt;/a&gt; . Применительно к пустым строкам применяются те же правила, что и при перегрузке шаблона переменным при &lt;a href=&quot;#rename&quot;&gt; &lt;code&gt;rename&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bb1730cb64cea0f7fd90a729f4e52146c5ec87e6" translate="yes" xml:space="preserve">
          <source>Overload of HMAC to be used if H doesn't provide information about its block size.</source>
          <target state="translated">Перегрузка HMAC для использования,если H не предоставляет информацию о размере блока.</target>
        </trans-unit>
        <trans-unit id="d69b02266b4564b8b1a2868be5966a7c16753f43" translate="yes" xml:space="preserve">
          <source>Overload sets can be merged with an alias declaration:</source>
          <target state="translated">Наборы перегрузки могут быть объединены с декларацией псевдонима:</target>
        </trans-unit>
        <trans-unit id="0dfd02f023aa40beb746d9cc077ec573c5ad785e" translate="yes" xml:space="preserve">
          <source>Overload taking &lt;code&gt;CodepointSet&lt;/code&gt;s will naturally convert only to bool mapping &lt;code&gt;Trie&lt;/code&gt;s.</source>
          <target state="translated">Принимая перегрузку &lt;code&gt;CodepointSet&lt;/code&gt; s, естественно, преобразуется только в bool-отображение &lt;code&gt;Trie&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c42a6c022fe7418d8db213b725de386aa93c918b" translate="yes" xml:space="preserve">
          <source>Overload this FuncDeclaration with the new one f. Return true if successful; i.e. no conflict.</source>
          <target state="translated">Перегрузите эту FuncDeclaration новой f.Возвращать true в случае успеха,т.е.без конфликтов.</target>
        </trans-unit>
        <trans-unit id="c5ecac5efe300a95c2fed1c87f55f61b868e7be6" translate="yes" xml:space="preserve">
          <source>Overloadable Binary Operators</source>
          <target state="translated">Перегружаемые двоичные операторы</target>
        </trans-unit>
        <trans-unit id="0c91984df423d8adc0ea28e04634eb6436d66740" translate="yes" xml:space="preserve">
          <source>Overloadable Index Unary Operators</source>
          <target state="translated">Перегрузочный индекс Унарных операторов</target>
        </trans-unit>
        <trans-unit id="40c29eefdaaea03e00d053015d5c30e435d99ba5" translate="yes" xml:space="preserve">
          <source>Overloadable Op Assignment Operators</source>
          <target state="translated">Перегрузочные операторы Назначение операторов</target>
        </trans-unit>
        <trans-unit id="868004b3cb4783ac2e0f7bbd6f12e4efe1b9741d" translate="yes" xml:space="preserve">
          <source>Overloadable Slice Unary Operators</source>
          <target state="translated">Перегружаемые операторы</target>
        </trans-unit>
        <trans-unit id="187c02a81ab8dd7735cd108b2d2d5d80603a58c8" translate="yes" xml:space="preserve">
          <source>Overloadable Unary Operators</source>
          <target state="translated">Перегружаемые операторы</target>
        </trans-unit>
        <trans-unit id="0c7d142daaca9406f218da735b2626a59df3fc79" translate="yes" xml:space="preserve">
          <source>Overloading &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt;&lt;code&gt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;, and &lt;code&gt;&amp;gt;&lt;/code&gt;&lt;code&gt;=&lt;/code&gt;</source>
          <target state="translated">Перегрузка &lt;code&gt;&amp;lt;&lt;/code&gt; , &lt;code&gt;&amp;lt;&lt;/code&gt; &lt;code&gt;=&lt;/code&gt; , &lt;code&gt;&amp;gt;&lt;/code&gt; и &lt;code&gt;&amp;gt;&lt;/code&gt; &lt;code&gt;=&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="82107b43f4305c149a257571647eee584e5a427e" translate="yes" xml:space="preserve">
          <source>Overloading &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;, and &lt;code&gt;&amp;gt;=&lt;/code&gt;</source>
          <target state="translated">Перегрузка &lt;code&gt;&amp;lt;&lt;/code&gt; , &lt;code&gt;&amp;lt;=&lt;/code&gt; , &lt;code&gt;&amp;gt;&lt;/code&gt; и &lt;code&gt;&amp;gt;=&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ba3190914d282ad78492c1e46480b8bf4e1649b2" translate="yes" xml:space="preserve">
          <source>Overloading &lt;code&gt;==&lt;/code&gt; and &lt;code&gt;!=&lt;/code&gt;</source>
          <target state="translated">Перегрузка &lt;code&gt;==&lt;/code&gt; и &lt;code&gt;!=&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d9bb19726f9a0a8594fcdb690b64ba87e32bcce1" translate="yes" xml:space="preserve">
          <source>Overloading Index Unary Operators</source>
          <target state="translated">Индекс перегрузки Унарные операторы</target>
        </trans-unit>
        <trans-unit id="452176c507c63d99fdcd25f67549f4401bd31c52" translate="yes" xml:space="preserve">
          <source>Overloading Slice Unary Operators</source>
          <target state="translated">Перегрузка срезов Унарные операторы</target>
        </trans-unit>
        <trans-unit id="04d7d655cce557095f8ad6c19c35e3d39b26d4ac" translate="yes" xml:space="preserve">
          <source>Overloading the Comparison Operators</source>
          <target state="translated">Перегрузка операторов сравнения</target>
        </trans-unit>
        <trans-unit id="343733174446e2662ee66d02bbdff2d89203838e" translate="yes" xml:space="preserve">
          <source>Overloading the slicing operator means overloading expressions like &lt;code&gt;a[]&lt;/code&gt; or &lt;code&gt;a[&lt;/code&gt;</source>
          <target state="translated">Перегрузка оператора среза означает перегрузку выражений, таких &lt;code&gt;a[]&lt;/code&gt; или &lt;code&gt;a[&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="28e9f60b000902c4ad6c539ce60cae3d5517be74" translate="yes" xml:space="preserve">
          <source>Override so it can work even if semantic() hasn't yet been run.</source>
          <target state="translated">Отмена,чтобы она могла работать,даже если семантическая()еще не была запущена.</target>
        </trans-unit>
        <trans-unit id="1225901c0967c3137622abc4eda5e2ca4282d06d" translate="yes" xml:space="preserve">
          <source>Override to use a derived class. The returned socket's handle must not be set.</source>
          <target state="translated">Отмена для использования производного класса.Ручка возвращаемого гнезда не должна быть установлена.</target>
        </trans-unit>
        <trans-unit id="7b278a3abe635e243893eb9ee9520d47934c806e" translate="yes" xml:space="preserve">
          <source>Overrides &lt;code&gt;Object.toString&lt;/code&gt; and returns the error message. Internally this forwards to the &lt;code&gt;toString&lt;/code&gt; overload that takes a sink delegate.</source>
          <target state="translated">Переопределяет &lt;code&gt;Object.toString&lt;/code&gt; и возвращает сообщение об ошибке. Внутренне это пересылает перегрузку &lt;code&gt;toString&lt;/code&gt; , которая принимает делегат приемника.</target>
        </trans-unit>
        <trans-unit id="434b5085b3ba9a70b1f949c6e9087acb372b2be9" translate="yes" xml:space="preserve">
          <source>Overrides the default collect hander with a user-supplied version. This routine will be called for each resource object that is finalized in a non-deterministic manner--typically during a garbage collection cycle. If the supplied routine returns true then the object's dtor will called as normal, but if the routine returns false than the dtor will not be called. The default behavior is for all object dtors to be called.</source>
          <target state="translated">Отменяет стандартную версию сборщика с версией,поставляемой пользователем.Эта рутина будет вызываться для каждого ресурсного объекта,завершенного недетерминированным способом-как правило,во время цикла сбора мусора.Если поставляемая рутина возвращает true,то будет вызван дтор объекта как обычно,но если рутина возвращает false,то дтор не будет вызван.Поведение по умолчанию-вызов всех дторов объекта.</target>
        </trans-unit>
        <trans-unit id="c2a6071ecd521a52b7d732960a323e428b0a4624" translate="yes" xml:space="preserve">
          <source>Overrides the default mangling for a symbol.</source>
          <target state="translated">Отменяет стандартное искажение символа.</target>
        </trans-unit>
        <trans-unit id="bf25c93e3d705c28b6d8ec638ddf35dc53074d1e" translate="yes" xml:space="preserve">
          <source>Overrides the default module unit tester with a user-supplied version. This routine will be called once on program initialization. The return value of this routine indicates to the runtime whether the tests ran without error.</source>
          <target state="translated">Переопределяет тестер модульных блоков по умолчанию версией,поставляемой пользователем.Эта рутина будет вызвана один раз при инициализации программы.Возвращаемое значение этой рутины указывает,работали ли тесты без ошибок.</target>
        </trans-unit>
        <trans-unit id="e40ec95fc8ad1ad3aefaa28bd8731b6a04320d70" translate="yes" xml:space="preserve">
          <source>Overrides the default trace hander with a user-supplied version.</source>
          <target state="translated">Отменяет стандартную версию трассировки на пользовательскую.</target>
        </trans-unit>
        <trans-unit id="cf266c19b70edb5e7f009d3790d662d578ec4941" translate="yes" xml:space="preserve">
          <source>Overrides the default trace mechanism with a user-supplied version. A trace represents the context from which an exception was thrown, and the trace handler will be called when this occurs. The pointer supplied to this routine indicates the base address from which tracing should occur. If the supplied pointer is null then the trace routine should determine an appropriate calling context from which to begin the trace.</source>
          <target state="translated">Заменяет механизм трассировки по умолчанию на пользовательскую версию.Трасса представляет собой контекст,из которого было выброшено исключение,и обработчик трассы будет вызван,когда это произойдет.Указатель,поставляемый для этой рутины,указывает базовый адрес,с которого должна произойти трассировка.Если поставляемый указатель равен нулю,то программа трассировки должна определить соответствующий вызывающий контекст,с которого следует начать трассировку.</target>
        </trans-unit>
        <trans-unit id="74feeb6178fa5b23446dfd16c8978129d74b1bd2" translate="yes" xml:space="preserve">
          <source>Owns a (rmem-managed) file buffer.</source>
          <target state="translated">Владеет (rmem-управляемым)файловым буфером.</target>
        </trans-unit>
        <trans-unit id="511993d3c99719e38a6779073019dacd7178ddb9" translate="yes" xml:space="preserve">
          <source>P</source>
          <target state="translated">P</target>
        </trans-unit>
        <trans-unit id="16309e2b3bedf0b1c2ca1cd681b84c8d2ee0bc98" translate="yes" xml:space="preserve">
          <source>PARC Universal Packet Protocol</source>
          <target state="translated">Универсальный пакетный протокол PARC</target>
        </trans-unit>
        <trans-unit id="11850638f643ba7850d11f7ddcec0964d655b890" translate="yes" xml:space="preserve">
          <source>PARC Universal Packet Protocol level</source>
          <target state="translated">Уровень универсального пакетного протокола PARC</target>
        </trans-unit>
        <trans-unit id="328336a5067c796e3099da705902a551e91ac694" translate="yes" xml:space="preserve">
          <source>PHOBOS_VERSION</source>
          <target state="translated">PHOBOS_VERSION</target>
        </trans-unit>
        <trans-unit id="bd6d55722c91f9838a18dc678fa82fff08090ff7" translate="yes" xml:space="preserve">
          <source>PIException if the segment body is illegal (contains &quot;?&amp;gt;&quot;)</source>
          <target state="translated">PIException, если тело сегмента недопустимо (содержит &quot;?&amp;gt;&quot;)</target>
        </trans-unit>
        <trans-unit id="b79d0f29fffcde427896ae2e08789531e1def379" translate="yes" xml:space="preserve">
          <source>POD is defined as:</source>
          <target state="translated">POD определяется как:</target>
        </trans-unit>
        <trans-unit id="fec3b8a0dd6b51f5966e330783d67a4a5db1cc08" translate="yes" xml:space="preserve">
          <source>POSIX specific</source>
          <target state="translated">специфический POSIX</target>
        </trans-unit>
        <trans-unit id="5920724eeffca91f7f6adab2e15742b13168e721" translate="yes" xml:space="preserve">
          <source>POST static input fields.</source>
          <target state="translated">POST статические поля ввода.</target>
        </trans-unit>
        <trans-unit id="9111ca243bfe057abc22f66b97b7e326a80a3a08" translate="yes" xml:space="preserve">
          <source>POST volatile input fields.</source>
          <target state="translated">POST волатильные поля ввода.</target>
        </trans-unit>
        <trans-unit id="536eb8d5f513c1dccc601b700a5bc1cf4cff7823" translate="yes" xml:space="preserve">
          <source>PREC[TOK.max_] &lt;strong id=&quot;precedence&quot;&gt;precedence&lt;/strong&gt;;</source>
          <target state="translated">PREC [TOK.max_] &lt;strong id=&quot;precedence&quot;&gt;приоритет&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="9b655813c0be05ad826fd70e726125de35fc2f50" translate="yes" xml:space="preserve">
          <source>PUBLIC FUNCTIONS</source>
          <target state="translated">ГОСУДАРСТВЕННЫЕ ФУНКЦИИ</target>
        </trans-unit>
        <trans-unit id="6edd3b1108776883868715a89627fccc1922179c" translate="yes" xml:space="preserve">
          <source>Package &lt;code&gt;p&lt;/code&gt;</source>
          <target state="translated">Пакет &lt;code&gt;p&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fe45845b0cf0e4b5ad1d088d74ee6c6714a4e668" translate="yes" xml:space="preserve">
          <source>Package &lt;code&gt;pkg&lt;/code&gt;</source>
          <target state="translated">Пакет &lt;code&gt;pkg&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c1c83923c5bf4fb42b6715d534ec4a4410b11428" translate="yes" xml:space="preserve">
          <source>Package &lt;strong id=&quot;resolveIsPackage&quot;&gt;resolveIsPackage&lt;/strong&gt;(Dsymbol sym);</source>
          <target state="translated">Пакет &lt;strong id=&quot;resolveIsPackage&quot;&gt;resolIsPackage&lt;/strong&gt; (Dsymbol sym);</target>
        </trans-unit>
        <trans-unit id="2f81d5fc2134a962ec93de8ce6eebd789d867168" translate="yes" xml:space="preserve">
          <source>Package Module</source>
          <target state="translated">Пакетный модуль</target>
        </trans-unit>
        <trans-unit id="0a999012ffb87b3edac99adbdfc498b12831a1e2" translate="yes" xml:space="preserve">
          <source>Packages</source>
          <target state="translated">Packages</target>
        </trans-unit>
        <trans-unit id="5bf83a475305a8a5e5f13b2d29274d98303c1d0f" translate="yes" xml:space="preserve">
          <source>Packing and Alignment</source>
          <target state="translated">Упаковка и выравнивание</target>
        </trans-unit>
        <trans-unit id="527b6c0dc92a4c896664b2f08b6671179844b2cb" translate="yes" xml:space="preserve">
          <source>Pads a range to a specified length by adding a given element to the front of the range. Is lazy if the range has a known length.</source>
          <target state="translated">Подводит диапазон к заданной длине,добавляя данный элемент к передней части диапазона.Ленивый,если диапазон имеет известную длину.</target>
        </trans-unit>
        <trans-unit id="1a3fe2a8ab75f618f4a19bf2dac2c84e666392b1" translate="yes" xml:space="preserve">
          <source>Pairs of test expressions and return expressions. The test expressions will be the second argument for the predicate, and the return expression will be returned if the predicate yields true with &lt;code&gt;switchExpression&lt;/code&gt; and the test expression as arguments. May also have a default return expression, that needs to be the last expression without a test expression before it. A return expression may be of void type only if it always throws.</source>
          <target state="translated">Пары тестовых выражений и обратных выражений. Тестовые выражения будут вторым аргументом для предиката, и возвращаемое выражение будет возвращено, если предикат возвращает true с &lt;code&gt;switchExpression&lt;/code&gt; и тестовым выражением в качестве аргументов. Может также иметь возвращаемое выражение по умолчанию, которое должно быть последним выражением без тестового выражения перед ним. Возвращаемое выражение может иметь тип void, только если оно всегда выбрасывает.</target>
        </trans-unit>
        <trans-unit id="5a59f0eb1f60143691b85b6c69dd1f1a53159158" translate="yes" xml:space="preserve">
          <source>Paragraph_Separator</source>
          <target state="translated">Paragraph_Separator</target>
        </trans-unit>
        <trans-unit id="e32c4eb3da79aeddb942c05de64aaff19b75096a" translate="yes" xml:space="preserve">
          <source>Parallel marking</source>
          <target state="translated">Параллельная маркировка</target>
        </trans-unit>
        <trans-unit id="acc6f793dede04624d00eb05042ec34065c433d0" translate="yes" xml:space="preserve">
          <source>Parallel reduce on a random access range. Except as otherwise noted, usage is similar to &lt;a href=&quot;std_algorithm_iteration#reduce&quot;&gt;&lt;code&gt;std.algorithm.iteration.reduce&lt;/code&gt;&lt;/a&gt;. There is also &lt;a href=&quot;#fold&quot;&gt;&lt;code&gt;fold&lt;/code&gt;&lt;/a&gt; which does the same thing with a different parameter order.</source>
          <target state="translated">Параллельно уменьшите диапазон произвольного доступа. Если не указано иное, использование аналогично &lt;a href=&quot;std_algorithm_iteration#reduce&quot;&gt; &lt;code&gt;std.algorithm.iteration.reduce&lt;/code&gt; &lt;/a&gt; . Также есть &lt;a href=&quot;#fold&quot;&gt; &lt;code&gt;fold&lt;/code&gt; &lt;/a&gt; которое делает то же самое с другим порядком параметров.</target>
        </trans-unit>
        <trans-unit id="64c0a305b25b3c5cd3ace12be0a7a18b3ad03f48" translate="yes" xml:space="preserve">
          <source>Parallel reduce supports multiple functions, like &lt;code&gt;std.algorithm.reduce&lt;/code&gt;.</source>
          <target state="translated">Параллельное уменьшение поддерживает несколько функций, таких как &lt;code&gt;std.algorithm.reduce&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7564a5560d76d7619eabad0cf5b241d011ae8e5e" translate="yes" xml:space="preserve">
          <source>ParallelForeach!R &lt;strong id=&quot;parallel&quot;&gt;parallel&lt;/strong&gt;(R)(R range);</source>
          <target state="translated">ParallelForeach! R &lt;strong id=&quot;parallel&quot;&gt;параллельный&lt;/strong&gt; (R) (диапазон R);</target>
        </trans-unit>
        <trans-unit id="706e0f72ea7909cb27d89524808db6808cb50661" translate="yes" xml:space="preserve">
          <source>ParallelForeach!R &lt;strong id=&quot;parallel&quot;&gt;parallel&lt;/strong&gt;(R)(R range, size_t workUnitSize);</source>
          <target state="translated">ParallelForeach! R &lt;strong id=&quot;parallel&quot;&gt;параллельный&lt;/strong&gt; (R) (диапазон R, size_t workUnitSize);</target>
        </trans-unit>
        <trans-unit id="c65074d6db6bccb661f4773c38d3324964921272" translate="yes" xml:space="preserve">
          <source>Param &lt;code&gt;params&lt;/code&gt;</source>
          <target state="translated">Param &lt;code&gt;params&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="19f29f198f4dec4eb5c8f9b8be59082811067ae8" translate="yes" xml:space="preserve">
          <source>Parameter &lt;code&gt;p&lt;/code&gt;</source>
          <target state="translated">Параметр &lt;code&gt;p&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4b71e169e1a186fb6f6f76028af43dfbd5d2d9bc" translate="yes" xml:space="preserve">
          <source>Parameter &lt;code&gt;par&lt;/code&gt;</source>
          <target state="translated">Параметр &lt;code&gt;par&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="84083975aaa4d13fa2983979d72578766d2ff82b" translate="yes" xml:space="preserve">
          <source>Parameter &lt;code&gt;parameter&lt;/code&gt;</source>
          <target state="translated">Параметр &lt;code&gt;parameter&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="23c85a1fcaf0a5cf78d51f0fe59e5d98d3c0a372" translate="yes" xml:space="preserve">
          <source>Parameter Storage Classes</source>
          <target state="translated">Классы хранения параметров</target>
        </trans-unit>
        <trans-unit id="db82d68363ec6e38305dc78db53ba4671015a864" translate="yes" xml:space="preserve">
          <source>Parameter may be returned or copied to the first parameter, but otherwise does not escape from the function. Such copies are required not to outlive the argument(s) they were derived from. Ignored for parameters with no references. See &lt;a href=&quot;memory-safe-d#scope-return-params&quot;&gt;Scope Parameters&lt;/a&gt;.</source>
          <target state="translated">Параметр может быть возвращен или скопирован в первый параметр, но в противном случае не выходит из функции. Такие копии необходимы, чтобы не пережить аргумент (ы), из которого они были получены. Игнорируется для параметров без ссылок. См. &lt;a href=&quot;memory-safe-d#scope-return-params&quot;&gt;Параметры области&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1a8ada0f324dda2754e9706db00c66db9f30cac7" translate="yes" xml:space="preserve">
          <source>Parameter storage classes are &lt;code&gt;in&lt;/code&gt;, &lt;code&gt;out&lt;/code&gt;, &lt;code&gt;ref&lt;/code&gt;, &lt;code&gt;lazy&lt;/code&gt;, &lt;code&gt;const&lt;/code&gt;, &lt;code&gt;immutable&lt;/code&gt;, &lt;code&gt;shared&lt;/code&gt;, &lt;code&gt;inout&lt;/code&gt; or &lt;code&gt;scope&lt;/code&gt;. For example:</source>
          <target state="translated">Классы хранения параметров: &lt;code&gt;in&lt;/code&gt; , &lt;code&gt;out&lt;/code&gt; , &lt;code&gt;ref&lt;/code&gt; , &lt;code&gt;lazy&lt;/code&gt; , &lt;code&gt;const&lt;/code&gt; , &lt;code&gt;immutable&lt;/code&gt; , &lt;code&gt;shared&lt;/code&gt; , &lt;code&gt;inout&lt;/code&gt; или &lt;code&gt;scope&lt;/code&gt; . Например:</target>
        </trans-unit>
        <trans-unit id="a71c366db210cd4901a72bb5ff201e1d4ea42b76" translate="yes" xml:space="preserve">
          <source>Parameter to compare with</source>
          <target state="translated">Параметр для сравнения с</target>
        </trans-unit>
        <trans-unit id="4bef6f8918d2b6dbb2184051845a0c285876469b" translate="yes" xml:space="preserve">
          <source>Parameter* nth Parameter NULL not found, *pn gets incremented by the number of Parameters</source>
          <target state="translated">Параметр*nth Параметр NULL не найден,*pn увеличивается на количество Параметров</target>
        </trans-unit>
        <trans-unit id="acdf35da4c553e1dfc2210109486c37c589cbf86" translate="yes" xml:space="preserve">
          <source>ParameterList</source>
          <target state="translated">ParameterList</target>
        </trans-unit>
        <trans-unit id="dc69505d72ec1dc997f6344835bf90cc49a5fc7d" translate="yes" xml:space="preserve">
          <source>ParameterList &lt;code&gt;pl&lt;/code&gt;</source>
          <target state="translated">ParameterList &lt;code&gt;pl&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a975eea30db9fa05003e3b5097688bd49ec7e01b" translate="yes" xml:space="preserve">
          <source>Parameters</source>
          <target state="translated">Parameters</target>
        </trans-unit>
        <trans-unit id="e23226b56e57669c7eee387e75bb0eeb4eacb099" translate="yes" xml:space="preserve">
          <source>Parameters are always pushed as multiples of 4 bytes, rounding upwards, so the stack is always aligned on 4 byte boundaries. They are pushed most significant first. &lt;b&gt;out&lt;/b&gt; and &lt;b&gt;ref&lt;/b&gt; are passed as pointers. Static arrays are passed as pointers to their first element. On Windows, a real is pushed as a 10 byte quantity, a creal is pushed as a 20 byte quantity. On Linux, a real is pushed as a 12 byte quantity, a creal is pushed as two 12 byte quantities. The extra two bytes of pad occupy the &amp;lsquo;most significant&amp;rsquo; position.</source>
          <target state="translated">Параметры всегда помещаются в кратные 4 байта, округляясь вверх, поэтому стек всегда выравнивается по границам 4 байтов. Они выдвигаются наиболее значимыми первыми. &lt;b&gt;out&lt;/b&gt; и &lt;b&gt;ref&lt;/b&gt; передаются как указатели. Статические массивы передаются как указатели на их первый элемент. В Windows реальное значение выдвигается как 10-байтовое количество, а creal - как 20-байтовое количество. В Linux реальное значение выдвигается как 12-байтовое количество, а creal - как два 12-байтовых значения. Два дополнительных байта пада занимают наиболее значимую позицию.</target>
        </trans-unit>
        <trans-unit id="2788d7232604fa7de143f891d6677fee828b587d" translate="yes" xml:space="preserve">
          <source>Parameters for the generator.</source>
          <target state="translated">Параметры генератора.</target>
        </trans-unit>
        <trans-unit id="d306b7545fffdce649df065d88dd5bff37d729ec" translate="yes" xml:space="preserve">
          <source>Parameters marked as &lt;code&gt;ref return scope&lt;/code&gt; come in two forms:</source>
          <target state="translated">Параметры, помеченные как &lt;code&gt;ref return scope&lt;/code&gt; имеют две формы:</target>
        </trans-unit>
        <trans-unit id="9cbfd0370d2df7813205bb7b748f4a1db07a858e" translate="yes" xml:space="preserve">
          <source>Parameters marked as &lt;code&gt;return scope&lt;/code&gt; that contain indirections can only escape those indirections via the function's return value.</source>
          <target state="translated">Параметры, помеченные как &lt;code&gt;return scope&lt;/code&gt; , содержащие косвенные ссылки, могут избежать этих косвенных значений только через возвращаемое значение функции.</target>
        </trans-unit>
        <trans-unit id="502a49319f9747d485d0e90ac781bf4a89a3c3b9" translate="yes" xml:space="preserve">
          <source>Parameters passed to SQL geom function</source>
          <target state="translated">Параметры,переданные в геометрическую функцию SQL</target>
        </trans-unit>
        <trans-unit id="25ba1dff4c429f0d3704cf2f68f66eb3b3ee6f38" translate="yes" xml:space="preserve">
          <source>Parameters that will be used to call &lt;code&gt;Hook&lt;/code&gt;</source>
          <target state="translated">Параметры, которые будут использоваться для вызова &lt;code&gt;Hook&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="069dcf15e5fa7ccfab22c19c69c59b0dc2aac4bf" translate="yes" xml:space="preserve">
          <source>Parameters!Hook &lt;code&gt;parameters&lt;/code&gt;</source>
          <target state="translated">Параметры! Крюк &lt;code&gt;parameters&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="381c775599d6e4185d4410725809e360928357cd" translate="yes" xml:space="preserve">
          <source>Parameters:</source>
          <target state="translated">Parameters:</target>
        </trans-unit>
        <trans-unit id="dc124689c7040d627a2c6490eec999443990ba30" translate="yes" xml:space="preserve">
          <source>Params</source>
          <target state="translated">Params</target>
        </trans-unit>
        <trans-unit id="4ed743af9079012d0a99ea8273ea7148ae91ca44" translate="yes" xml:space="preserve">
          <source>Parent allocator. For construction from stateless allocators, use their &lt;code&gt;instance&lt;/code&gt; static member.</source>
          <target state="translated">Родительский распределитель. Для построения из распределителей без сохранения состояния используйте их статический член &lt;code&gt;instance&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d4de297e82ffd6596306e4e19bbc9ab418447bf3" translate="yes" xml:space="preserve">
          <source>Parent in hierarchy</source>
          <target state="translated">Родитель в иерархии</target>
        </trans-unit>
        <trans-unit id="a02d47ba7fa60fd2ab7f1a415fe78a36422c1536" translate="yes" xml:space="preserve">
          <source>ParentAllocator</source>
          <target state="translated">ParentAllocator</target>
        </trans-unit>
        <trans-unit id="5208ea3f897cc37caf351c89b3fed673268fa9dc" translate="yes" xml:space="preserve">
          <source>ParentAllocator &lt;code&gt;parent&lt;/code&gt;</source>
          <target state="translated">ParentAllocator &lt;code&gt;parent&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b0ef7ffe567a6538a14ef66b4087f755c7083c14" translate="yes" xml:space="preserve">
          <source>ParentAllocator &lt;strong id=&quot;parent&quot;&gt;parent&lt;/strong&gt;;</source>
          <target state="translated">ParentAllocator &lt;strong id=&quot;parent&quot;&gt;parent&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="20cf2e4a28aece4982d86333c6a7c89937b5f638" translate="yes" xml:space="preserve">
          <source>Parse a Type or an Expression</source>
          <target state="translated">Разбор типа или выражения</target>
        </trans-unit>
        <trans-unit id="0e5ba08ab31df24d5fcda076622754be8a9e95a4" translate="yes" xml:space="preserve">
          <source>Parse a UUID from its canonical string form. An UUID in its canonical form looks like this: 8ab3060e-2cba-4f23-b74c-b52db3bdfb46</source>
          <target state="translated">Разобрать UUID из его канонической строковой формы.UUID в его канонической форме выглядит следующим образом:8ab3060e-2cba-4f23-b74c-b52db3bdfb46</target>
        </trans-unit>
        <trans-unit id="b51f894038d0008dfbaa74d81a6b8df2bd125491" translate="yes" xml:space="preserve">
          <source>Parse a module from a string.</source>
          <target state="translated">Разобрать модуль из строки.</target>
        </trans-unit>
        <trans-unit id="b116297c1a492c7acb3eb37d11ee586ead05b0ff" translate="yes" xml:space="preserve">
          <source>Parse an IPv4 address string in the dotted-decimal form</source>
          <target state="translated">Разбор строки адресов IPv4 в пунктирно-десятичном виде</target>
        </trans-unit>
        <trans-unit id="67d488bcba9b3f579efe720c5d6e269019c76b78" translate="yes" xml:space="preserve">
          <source>Parse an IPv6 host address string as described in RFC 2373, and return the address.</source>
          <target state="translated">Разберите строку адреса хоста IPv6,как описано в RFC 2373,и верните адрес.</target>
        </trans-unit>
        <trans-unit id="0c6ef6ffd6736f6311741aad939e47729e152363" translate="yes" xml:space="preserve">
          <source>Parse an XML element.</source>
          <target state="translated">Разобрать элемент XML.</target>
        </trans-unit>
        <trans-unit id="89da31932d3708e3b7f3503b77f46c37056d3caf" translate="yes" xml:space="preserve">
          <source>Parse and remove command line options from a string array.</source>
          <target state="translated">Разбор и удаление опций командной строки из строкового массива.</target>
        </trans-unit>
        <trans-unit id="e78dfe1951ae384f0bb186772bb44b9d1b41fc31" translate="yes" xml:space="preserve">
          <source>Parse and run semantic analysis on a GccAsmStatement.</source>
          <target state="translated">Проанализируйте и запустите семантический анализ на GccAsmStatement.</target>
        </trans-unit>
        <trans-unit id="d6a83ca7d0d7d4947b1a0c1ec0d979ee479df908" translate="yes" xml:space="preserve">
          <source>Parse command line arguments for the last instance of -conf=path.</source>
          <target state="translated">Разобрать аргументы командной строки для последнего экземпляра -conf=path.</target>
        </trans-unit>
        <trans-unit id="3da392b34053839507509c2ba69da833f60b469e" translate="yes" xml:space="preserve">
          <source>Parse command line arguments for the last instance of -m32, -m64 or -m32mscoff to detect the desired architecture.</source>
          <target state="translated">Разберите аргументы командной строки для последнего экземпляра -m32,-m64 или -m32mscoff,чтобы определить желаемую архитектуру.</target>
        </trans-unit>
        <trans-unit id="16dac6c4d17dadf18f0e007b7333e3ad86945a6a" translate="yes" xml:space="preserve">
          <source>Parse command line arguments.</source>
          <target state="translated">Разобрать аргументы командной строки.</target>
        </trans-unit>
        <trans-unit id="76560b479dcbd840417cf615a5d133fe4aeeebec" translate="yes" xml:space="preserve">
          <source>Parse escapes of the form: /c/string/ where c is a single character. Multiple escapes can be separated by whitespace and/or commas.</source>
          <target state="translated">Бегство от формы:/c/string/где c-одиночный персонаж.Несколько экранировок могут быть разделены пробелами и/или запятыми.</target>
        </trans-unit>
        <trans-unit id="94b991a478ac4b7e91a93538b4ab0b1f64db972e" translate="yes" xml:space="preserve">
          <source>Parse macros out of Macros: section. Macros are of the form: name1 = value1</source>
          <target state="translated">Разобрать макросы из раздела &quot;Макросы:&quot;.Макросы имеют вид:name1=value1</target>
        </trans-unit>
        <trans-unit id="ae17436f43a711859e6e5f23964c5153a1bfdd8e" translate="yes" xml:space="preserve">
          <source>Parse next paragraph out of *pcomment. Update *pcomment to point past paragraph. Returns NULL if no more paragraphs. If paragraph ends in 'identifier:', then (*pcomment)[0 .. idlen] is the identifier.</source>
          <target state="translated">Разберите следующий абзац из *комментария.Обновите *комментарий,чтобы указать на предыдущий абзац.Возвращает NULL,если больше нет абзацев.Если абзац заканчивается на 'identifier:',то (*pcomment)[0 ...idlen]является идентификатором.</target>
        </trans-unit>
        <trans-unit id="450dba0c77946e5c69e86c55b859d9b21735d00b" translate="yes" xml:space="preserve">
          <source>Parse the given &lt;code&gt;fieldName&lt;/code&gt; and return its corresponding JsonFieldFlags value.</source>
          <target state="translated">&lt;code&gt;fieldName&lt;/code&gt; данное fieldName и вернуть соответствующее ему значение JsonFieldFlags.</target>
        </trans-unit>
        <trans-unit id="7f72edc0b8c3b6f31c38aaff9b2735f81dc8dd93" translate="yes" xml:space="preserve">
          <source>Parse unicode codepoint set from given &lt;code&gt;range&lt;/code&gt; using standard regex syntax '[...]'. The range is advanced skiping over regex set definition. &lt;code&gt;casefold&lt;/code&gt; parameter determines if the set should be casefolded - that is include both lower and upper case versions for any letters in the set.</source>
          <target state="translated">Анализировать кодовую точку Юникода из заданного &lt;code&gt;range&lt;/code&gt; используя стандартный синтаксис регулярных выражений '[...]' Диапазон - это расширенный пропуск определения регулярных выражений. Параметр &lt;code&gt;casefold&lt;/code&gt; определяет, должен ли набор быть сложен в регистр - то есть включать в себя как строчные, так и прописные версии для любых букв в наборе.</target>
        </trans-unit>
        <trans-unit id="a01a2b8150c64549e9cd4c96ee16b8a26bcdaaf2" translate="yes" xml:space="preserve">
          <source>ParserHandler[string] &lt;strong id=&quot;onStartTag&quot;&gt;onStartTag&lt;/strong&gt;;</source>
          <target state="translated">ParserHandler [string] &lt;strong id=&quot;onStartTag&quot;&gt;onStartTag&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="8b0d0e766dced46908a81c9cd127077bfd46fd30" translate="yes" xml:space="preserve">
          <source>Parses a &lt;code&gt;dmd.conf&lt;/code&gt; or &lt;code&gt;ldc2.conf&lt;/code&gt; config file and returns defined import paths.</source>
          <target state="translated">Анализирует файл конфигурации &lt;code&gt;dmd.conf&lt;/code&gt; или &lt;code&gt;ldc2.conf&lt;/code&gt; и возвращает определенные пути импорта.</target>
        </trans-unit>
        <trans-unit id="f512da601d22b0ee2b2cf1c48af79181f827811e" translate="yes" xml:space="preserve">
          <source>Parses a character &lt;a href=&quot;std_range_primitives#isInputRange&quot;&gt;input range&lt;/a&gt; to an integral value.</source>
          <target state="translated">Анализирует &lt;a href=&quot;std_range_primitives#isInputRange&quot;&gt;диапазон ввода&lt;/a&gt; символов до интегрального значения.</target>
        </trans-unit>
        <trans-unit id="2fd2971a74ccde0fbdc27f87fc034b74ba2c4cde" translate="yes" xml:space="preserve">
          <source>Parses a character range to a floating point number.</source>
          <target state="translated">Разбирает диапазон символов до числа с плавающей точкой.</target>
        </trans-unit>
        <trans-unit id="9e8db731dd580734da1b87439d32c23c6c0b87c3" translate="yes" xml:space="preserve">
          <source>Parses a serialized string and returns a tree of JSON values.</source>
          <target state="translated">Обрабатывает сериализованную строку и возвращает дерево JSON-значений.</target>
        </trans-unit>
        <trans-unit id="010c8d1e4fe323ec58d09feb50b1819dc73f74ee" translate="yes" xml:space="preserve">
          <source>Parses an array from a string given the left bracket (default &lt;code&gt; '['&lt;/code&gt;), right bracket (default &lt;code&gt;']'&lt;/code&gt;), and element separator (by default &lt;code&gt;','&lt;/code&gt;). A trailing separator is allowed.</source>
          <target state="translated">Анализирует массив из строки с учетом левой скобки (по умолчанию &lt;code&gt; '['&lt;/code&gt; ), правой скобки (по умолчанию &lt;code&gt;']'&lt;/code&gt; ) и разделителя элементов (по умолчанию &lt;code&gt;','&lt;/code&gt; ). Конечный разделитель разрешен.</target>
        </trans-unit>
        <trans-unit id="fea81b03a9b6108256fd6dbd49ffa4e506987c1b" translate="yes" xml:space="preserve">
          <source>Parses an associative array from a string given the left bracket (default &lt;code&gt; '['&lt;/code&gt;), right bracket (default &lt;code&gt;']'&lt;/code&gt;), key-value separator (default &lt;code&gt; ':'&lt;/code&gt;), and element seprator (by default &lt;code&gt;','&lt;/code&gt;).</source>
          <target state="translated">Анализирует ассоциативный массив из строки с учетом левой скобки (по умолчанию &lt;code&gt; '['&lt;/code&gt; ), правой скобки (по умолчанию &lt;code&gt;']'&lt;/code&gt; ), разделителя значения ключа (по умолчанию &lt;code&gt; ':'&lt;/code&gt; ) и разделителя элементов (по умолчанию &lt;code&gt;','&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="29a5987ba0d6709de3c0fabafe685ca0830538a2" translate="yes" xml:space="preserve">
          <source>Parses an environment variable containing command-line flags and append them to &lt;code&gt;args&lt;/code&gt;.</source>
          <target state="translated">Анализирует переменную окружения, содержащую флаги командной строки, и добавляет их к &lt;code&gt;args&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7294d33710169103141018bfcb0ee5ad3daa81e2" translate="yes" xml:space="preserve">
          <source>Parsing</source>
          <target state="translated">Parsing</target>
        </trans-unit>
        <trans-unit id="01fb58e60a8182fb22f2e27607c68467bfc3bdb1" translate="yes" xml:space="preserve">
          <source>Parsing - documentation comments are associated with specific declarations and combined.</source>
          <target state="translated">Разбор-комментарии к документации ассоциируются с конкретными декларациями и комбинируются.</target>
        </trans-unit>
        <trans-unit id="671420d39349223d076271ea629f4c237238047b" translate="yes" xml:space="preserve">
          <source>Parsing UUIDs</source>
          <target state="translated">Парсинг UUID</target>
        </trans-unit>
        <trans-unit id="c3a20404291f5cb0bb0fa13bb84a38c285e4f8ae" translate="yes" xml:space="preserve">
          <source>Parsing a character range to &lt;code&gt;typeof(null)&lt;/code&gt; returns &lt;code&gt;null&lt;/code&gt; if the range spells &lt;code&gt;&quot;null&quot;&lt;/code&gt;. This function is case insensitive.</source>
          <target state="translated">Синтаксический анализ диапазона символов для &lt;code&gt;typeof(null)&lt;/code&gt; возвращает значение &lt;code&gt;null&lt;/code&gt; , если диапазон означает &lt;code&gt;&quot;null&quot;&lt;/code&gt; . Эта функция не чувствительна к регистру.</target>
        </trans-unit>
        <trans-unit id="acb8728b53850d44b474cf8209395699a79a166a" translate="yes" xml:space="preserve">
          <source>Parsing of command-line arguments.</source>
          <target state="translated">Разбор аргументов командной строки.</target>
        </trans-unit>
        <trans-unit id="2e18e65dcec5e7545a8602e57cc211ae0081392b" translate="yes" xml:space="preserve">
          <source>Parsing one character off a range returns the first element and calls &lt;code&gt;popFront&lt;/code&gt;.</source>
          <target state="translated">Разбор одного символа вне диапазона возвращает первый элемент и вызывает &lt;code&gt;popFront&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2dad0714188f44cd45907047ae561e99a63a08c9" translate="yes" xml:space="preserve">
          <source>Parsing will continue until the end of the current element. Any items encountered for which a handler has been registered will invoke that handler.</source>
          <target state="translated">Разбор будет продолжаться до конца текущего элемента.Любой встречный элемент,для которого был зарегистрирован обработчик,будет вызывать этот обработчик.</target>
        </trans-unit>
        <trans-unit id="a46e9f47f04b2771004f9c356a6d8ef5ab1cf5ec" translate="yes" xml:space="preserve">
          <source>Part of the compiler implementation of the &lt;a href=&quot;http://www.dlang.org&quot;&gt;D programming language&lt;/a&gt;.</source>
          <target state="translated">Часть реализации компилятора на &lt;a href=&quot;http://www.dlang.org&quot;&gt;языке программирования D&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2c7d58db405da47a0ea70ef1084b0193adb3b219" translate="yes" xml:space="preserve">
          <source>Partial initialization is done for types with indirections, for preservation of memory safety. Note that elements will only be initialized to 0, but not necessarily the element type's &lt;code&gt;.init&lt;/code&gt;.</source>
          <target state="translated">Частичная инициализация выполняется для типов с косвенными ссылками, для сохранения безопасности памяти. Обратите внимание, что элементы будут инициализированы только 0, но не обязательно &lt;code&gt;.init&lt;/code&gt; типа элемента .</target>
        </trans-unit>
        <trans-unit id="e5c165ff2135d9bd04e4f69754b1ce23000c2a39" translate="yes" xml:space="preserve">
          <source>Partial instantiation</source>
          <target state="translated">Частичная инстанциация</target>
        </trans-unit>
        <trans-unit id="552793e4d3491d3b039b2e499862419408241568" translate="yes" xml:space="preserve">
          <source>Partially shuffles the elements of &lt;code&gt;r&lt;/code&gt; such that upon returning &lt;code&gt;r[0 .. n]&lt;/code&gt; is a random subset of &lt;code&gt;r&lt;/code&gt; and is randomly ordered. &lt;code&gt;r[n .. r.length]&lt;/code&gt; will contain the elements not in &lt;code&gt;r[0 .. n]&lt;/code&gt;. These will be in an undefined order, but will not be random in the sense that their order after &lt;code&gt;partialShuffle&lt;/code&gt; returns will not be independent of their order before &lt;code&gt;partialShuffle&lt;/code&gt; was called.</source>
          <target state="translated">Частично тасует элементы &lt;code&gt;r&lt;/code&gt; так , что при возврате &lt;code&gt;r[0 .. n]&lt;/code&gt; является случайным подмножеством &lt;code&gt;r&lt;/code&gt; и случайным образом упорядочивается. &lt;code&gt;r[n .. r.length]&lt;/code&gt; будет содержать элементы, не входящие в &lt;code&gt;r[0 .. n]&lt;/code&gt; . Они будут в неопределенном порядке, но не будут случайными в том смысле, что их порядок после &lt;code&gt;partialShuffle&lt;/code&gt; возвратов не будет независимым от их порядка до того, как &lt;code&gt;partialShuffle&lt;/code&gt; вызван PartualShuffle .</target>
        </trans-unit>
        <trans-unit id="6deb7e3f7b32019949732214ec87ba853c993108" translate="yes" xml:space="preserve">
          <source>Particular keys in an associative array can be removed with the &lt;code&gt;remove&lt;/code&gt; function:</source>
          <target state="translated">Отдельные ключи в ассоциативном массиве могут быть удалены с помощью функции &lt;code&gt;remove&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="4d8d29c37cfa9d2ee47bae5429be39d9f989f27b" translate="yes" xml:space="preserve">
          <source>Partitioning</source>
          <target state="translated">Partitioning</target>
        </trans-unit>
        <trans-unit id="b04b13ef82480fe65f509b932faa4e4d3aa51b27" translate="yes" xml:space="preserve">
          <source>Partitions &lt;code&gt;r&lt;/code&gt; around &lt;code&gt;pivot&lt;/code&gt; using comparison function &lt;code&gt;less&lt;/code&gt;, algorithm akin to &lt;a href=&quot;https://en.wikipedia.org/wiki/Quicksort#Hoare_partition_scheme&quot;&gt;Hoare partition&lt;/a&gt;. Specifically, permutes elements of &lt;code&gt;r&lt;/code&gt; and returns an index &lt;code&gt;k &amp;lt; r.length&lt;/code&gt; such that:</source>
          <target state="translated">Перегородки &lt;code&gt;r&lt;/code&gt; вокруг &lt;code&gt;pivot&lt;/code&gt; , используя функцию сравнения &lt;code&gt;less&lt;/code&gt; , алгоритм сродни &lt;a href=&quot;https://en.wikipedia.org/wiki/Quicksort#Hoare_partition_scheme&quot;&gt;Хоара раздела&lt;/a&gt; . В частности, переставляет элементы &lt;code&gt;r&lt;/code&gt; и возвращает индекс &lt;code&gt;k &amp;lt; r.length&lt;/code&gt; такой что:</target>
        </trans-unit>
        <trans-unit id="f79755d9888b3272c0008f26ee250ed68d156755" translate="yes" xml:space="preserve">
          <source>Partitions a range according to a binary predicate in three parts (less than, equal, greater than the given pivot). Pivot is not given as an index, but instead as an element independent from the range's content.</source>
          <target state="translated">Разбивает диапазон согласно двоичному предикату на три части (меньше,равно,больше заданного поворота).Поворот дается не как индекс,а как элемент,не зависящий от содержания диапазона.</target>
        </trans-unit>
        <trans-unit id="93b7b53fcf2afd03f0b9c28b1730d679f111ebc2" translate="yes" xml:space="preserve">
          <source>Partitions a range according to a binary predicate in two parts: less than or equal, and greater than or equal to the given pivot, passed as an index in the range.</source>
          <target state="translated">Разделяет диапазон согласно двоичному предикату на две части:меньшую или равную,и большую или равную заданному повороту,передаваемую в качестве индекса в диапазоне.</target>
        </trans-unit>
        <trans-unit id="ac2a297ca539adc310f95ab7029aa05a0e235c5d" translate="yes" xml:space="preserve">
          <source>Partitions a range according to a unary predicate.</source>
          <target state="translated">Разделы диапазона согласно унарному предикату.</target>
        </trans-unit>
        <trans-unit id="f25bf3d69c2aa505fafd2a2553231a4df6e4f1b8" translate="yes" xml:space="preserve">
          <source>Partitions a range in two using the given &lt;code&gt;predicate&lt;/code&gt;. Specifically, reorders the range &lt;code&gt;r = [left, right)&lt;/code&gt; using &lt;code&gt;swap&lt;/code&gt; such that all elements &lt;code&gt;i&lt;/code&gt; for which &lt;code&gt;predicate(i)&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; come before all elements &lt;code&gt;j&lt;/code&gt; for which &lt;code&gt;predicate(j)&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Разбивает диапазон на два, используя данный &lt;code&gt;predicate&lt;/code&gt; . В частности, переупорядочиваем диапазон &lt;code&gt;r = [left, right)&lt;/code&gt; с помощью &lt;code&gt;swap&lt;/code&gt; , так что все элементы &lt;code&gt;i&lt;/code&gt; , для которых &lt;code&gt;predicate(i)&lt;/code&gt; равен &lt;code&gt;true&lt;/code&gt; , предшествуют всем элементам &lt;code&gt;j&lt;/code&gt; , для которых &lt;code&gt;predicate(j)&lt;/code&gt; возвращает &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0f75fc950076ea23262b37e57dc6555e4d8852e7" translate="yes" xml:space="preserve">
          <source>Pass a long set to 1 to get the date of the requested document (if possible)! Pass a zero to shut it off.</source>
          <target state="translated">Передайте длинный набор на 1,чтобы получить дату запрашиваемого документа (если это возможно)! Передайте ноль,чтобы выключить его.</target>
        </trans-unit>
        <trans-unit id="3f5674a1b58ad7659cf778d1abbfee0c9e1ed868" translate="yes" xml:space="preserve">
          <source>Pass a pointer to string of the output using full variable-replacement as described elsewhere.</source>
          <target state="translated">Передайте указатель на строку вывода,используя полную замену переменных,как описано в другом месте.</target>
        </trans-unit>
        <trans-unit id="52eba02333e380244052de14b336d30251cdb44e" translate="yes" xml:space="preserve">
          <source>Pass a range by reference. Both the original range and the RefRange will always have the exact same elements. Any operation done on one will affect the other.</source>
          <target state="translated">Перейти диапазон по ссылке.И исходный диапазон,и диапазон RefRange всегда будут иметь одни и те же элементы.Любая операция,выполненная над одним из них,повлияет на другой.</target>
        </trans-unit>
        <trans-unit id="ac35e3c93500b335f934dc933300ae8ca4d024c6" translate="yes" xml:space="preserve">
          <source>Pass unrecognized arguments through</source>
          <target state="translated">Пропустите непризнанные аргументы через</target>
        </trans-unit>
        <trans-unit id="44bd5cb378ee1ee4f1228ce102d89ccec6984f72" translate="yes" xml:space="preserve">
          <source>Passing &lt;code&gt;NullAllocator&lt;/code&gt; as &lt;code&gt;ParentAllocator&lt;/code&gt; (the default) means user code manages allocation of the memory block from the outside; in that case &lt;code&gt;BitmappedBlock&lt;/code&gt; must be constructed with a &lt;code&gt;ubyte[]&lt;/code&gt; preallocated block and has no responsibility regarding the lifetime of its support underlying storage. If another allocator type is passed, &lt;code&gt;BitmappedBlock&lt;/code&gt; defines a destructor that uses the parent allocator to release the memory block. That makes the combination of &lt;code&gt;AllocatorList&lt;/code&gt;, &lt;code&gt;BitmappedBlock&lt;/code&gt;, and a back-end allocator such as &lt;code&gt;MmapAllocator&lt;/code&gt; a simple and scalable solution for memory allocation.</source>
          <target state="translated">Передача &lt;code&gt;NullAllocator&lt;/code&gt; как &lt;code&gt;ParentAllocator&lt;/code&gt; (по умолчанию) означает, что пользовательский код управляет выделением блока памяти извне; в этом случае &lt;code&gt;BitmappedBlock&lt;/code&gt; должен быть создан с предварительно &lt;code&gt;ubyte[]&lt;/code&gt; блоком ubyte [] и не несет ответственности за время жизни своей поддержки, лежащей в основе хранилища. Если передается другой тип распределителя, &lt;code&gt;BitmappedBlock&lt;/code&gt; определяет деструктор, который использует родительский распределитель для освобождения блока памяти. Это делает комбинацию &lt;code&gt;AllocatorList&lt;/code&gt; , &lt;code&gt;BitmappedBlock&lt;/code&gt; и внутреннего распределителя, такого как &lt;code&gt;MmapAllocator&lt;/code&gt; , простым и масштабируемым решением для выделения памяти.</target>
        </trans-unit>
        <trans-unit id="5d0b17b99c1c31f95b843582b717ee3647838d67" translate="yes" xml:space="preserve">
          <source>Passing D Array Arguments to C Functions</source>
          <target state="translated">Передача Аргументов Массива D в функции C</target>
        </trans-unit>
        <trans-unit id="eab9975f41d5c74a2370c8f84743e69843a5e474" translate="yes" xml:space="preserve">
          <source>Passing unrecognized options through</source>
          <target state="translated">Прохождение непризнанных опционов через</target>
        </trans-unit>
        <trans-unit id="245e083e1de3b281962953ef4c8bba890cc16972" translate="yes" xml:space="preserve">
          <source>Path separator string. A colon under POSIX, a semicolon under Windows.</source>
          <target state="translated">Строка разделителя путей.Двоеточие под POSIX,точка с запятой под Windows.</target>
        </trans-unit>
        <trans-unit id="8a0630dfd701136ea97bb93baa3f48f2f71f6dea" translate="yes" xml:space="preserve">
          <source>Path to append the extension to</source>
          <target state="translated">Путь,чтобы добавить расширение к</target>
        </trans-unit>
        <trans-unit id="7879e48604fb8a9352e65e81497109347fdf13ce" translate="yes" xml:space="preserve">
          <source>Path to append to</source>
          <target state="translated">Путь к</target>
        </trans-unit>
        <trans-unit id="871b729292ecc14b245e2db0bdadacebeffad0e9" translate="yes" xml:space="preserve">
          <source>Path to escape</source>
          <target state="translated">Путь к бегству</target>
        </trans-unit>
        <trans-unit id="ee9a42a975678be8d750fa1e306adc2573e3c20e" translate="yes" xml:space="preserve">
          <source>Path to file</source>
          <target state="translated">Путь к файлам</target>
        </trans-unit>
        <trans-unit id="ead499111ecd4dc6ec4cbcffe1b1a34907e01dae" translate="yes" xml:space="preserve">
          <source>Pattern element</source>
          <target state="translated">Элемент узора</target>
        </trans-unit>
        <trans-unit id="bc76225c74f5799424ec5c0bcc1a8bb1758d6b49" translate="yes" xml:space="preserve">
          <source>Pattern syntax</source>
          <target state="translated">Синтаксис моделей</target>
        </trans-unit>
        <trans-unit id="ae34ebfd21aa731bd17545dfb65562d51ef9cefc" translate="yes" xml:space="preserve">
          <source>Pattern_Syntax</source>
          <target state="translated">Pattern_Syntax</target>
        </trans-unit>
        <trans-unit id="fa2b00d38cc48111285d15ff11e6749be9586681" translate="yes" xml:space="preserve">
          <source>Pattern_White_Space</source>
          <target state="translated">Pattern_White_Space</target>
        </trans-unit>
        <trans-unit id="2773f73c1260fdec728435d456edb08be91eaf8e" translate="yes" xml:space="preserve">
          <source>Pausing and continuing transfers.</source>
          <target state="translated">Паузы и продолжающиеся переводы.</target>
        </trans-unit>
        <trans-unit id="a9825d613366c20e6809b1ce3e60e5a34a14dd1a" translate="yes" xml:space="preserve">
          <source>Pavel &quot;EvilOne&quot; Minayev, Alex R&amp;oslash;nne Petersen, Johannes Pfau</source>
          <target state="translated">Павел &quot;EvilOne&quot; Минаев, Алекс Ронне Петерсен, Йоханнес Пфау</target>
        </trans-unit>
        <trans-unit id="fa22cd0363497002cc358c8b4b6ff84f5941b5c4" translate="yes" xml:space="preserve">
          <source>Pc</source>
          <target state="translated">Pc</target>
        </trans-unit>
        <trans-unit id="76a62826607c85765e35f282cd82db5a3e6bbe06" translate="yes" xml:space="preserve">
          <source>Pd</source>
          <target state="translated">Pd</target>
        </trans-unit>
        <trans-unit id="b5034c4cb6e7781f4f1616341f8f6731b9bca6e2" translate="yes" xml:space="preserve">
          <source>Pe</source>
          <target state="translated">Pe</target>
        </trans-unit>
        <trans-unit id="737b6ba72b87c53c37d0b001c2aa00d7d1551419" translate="yes" xml:space="preserve">
          <source>Peek at the amount of time that the the StopWatch has been running.</source>
          <target state="translated">Посмотрите,сколько времени работает секундомер.</target>
        </trans-unit>
        <trans-unit id="ba8e29927006e6152b4f643044adfec962f7e76c" translate="yes" xml:space="preserve">
          <source>Peek at the amount of time which has passed since the stop watch was started.</source>
          <target state="translated">Посмотрите,сколько времени прошло с момента запуска стоп-часов.</target>
        </trans-unit>
        <trans-unit id="c291bbfff282d82d34ba5468ffd4ea28a98b87c3" translate="yes" xml:space="preserve">
          <source>Pentium 4 (Prescott) Opcodes Supported</source>
          <target state="translated">Pentium 4 (Prescott)Поддерживаемые опкоды</target>
        </trans-unit>
        <trans-unit id="0a5cbdbd4ebf4f323d8c911e71d85e0d86957bd0" translate="yes" xml:space="preserve">
          <source>Pentium 4 Opcodes</source>
          <target state="translated">Пентиум 4 Опкоды</target>
        </trans-unit>
        <trans-unit id="b95531d61182885c855fd4e357f3a17ac6875cfe" translate="yes" xml:space="preserve">
          <source>Per thread record to store thread associated data for garbage collection.</source>
          <target state="translated">На каждую запись потока для хранения данных,связанных с потоком для сбора мусора.</target>
        </trans-unit>
        <trans-unit id="03a06ad8bd49d2e4b75d4adff803a56ee9bba6c2" translate="yes" xml:space="preserve">
          <source>Perform &lt;code&gt;static foreach&lt;/code&gt; lowerings that are necessary in order to finally expand the &lt;code&gt;static foreach&lt;/code&gt; using &lt;code&gt;dmd.statementsem.makeTupleForeach&lt;/code&gt;.</source>
          <target state="translated">Выполните понижения &lt;code&gt;static foreach&lt;/code&gt; , которые необходимы для окончательного расширения &lt;code&gt;static foreach&lt;/code&gt; используя &lt;code&gt;dmd.statementsem.makeTupleForeach&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6881379825244d35d3e8d9a76db4341cbfb7cf3b" translate="yes" xml:space="preserve">
          <source>Perform a http request.</source>
          <target state="translated">Выполните http запрос.</target>
        </trans-unit>
        <trans-unit id="9e8bf93c00f6d0187fa920c5e2e73b433a1a8816" translate="yes" xml:space="preserve">
          <source>Perform a semantic equivalent 2 operations: decoding a &lt;a href=&quot;#Code%20point&quot;&gt;code point&lt;/a&gt; at front of &lt;code&gt;inp&lt;/code&gt; and testing if it belongs to the set of &lt;a href=&quot;#Code%20point&quot;&gt;code points&lt;/a&gt; of this matcher.</source>
          <target state="translated">Выполните семантически эквивалентные 2 операции: декодирование &lt;a href=&quot;#Code%20point&quot;&gt;кодовой точки&lt;/a&gt; перед &lt;code&gt;inp&lt;/code&gt; и тестирование, если оно принадлежит набору &lt;a href=&quot;#Code%20point&quot;&gt;кодовых точек&lt;/a&gt; этого сопоставителя.</target>
        </trans-unit>
        <trans-unit id="270a7cd4b73a5b4c8e1329fbcbf3a7a8d8f1d4a2" translate="yes" xml:space="preserve">
          <source>Perform buffered I/O.</source>
          <target state="translated">Выполните буферизацию ввода-вывода.</target>
        </trans-unit>
        <trans-unit id="3dce937804704adcedb8a3097f48c2d0bc2d294f" translate="yes" xml:space="preserve">
          <source>Perform semantic analysis and CTFE on expressions to produce a string.</source>
          <target state="translated">Выполнение семантического анализа и CTFE на выражениях для получения строки.</target>
        </trans-unit>
        <trans-unit id="a3329e2a22d0cffbeb60b029314ab72b31e6cebc" translate="yes" xml:space="preserve">
          <source>Perform semantic analysis on InlineAsmStatement.</source>
          <target state="translated">Выполните семантический анализ на InlineAsmStatement.</target>
        </trans-unit>
        <trans-unit id="9770620faed7403bb8c0ecc06d0e36a7f5251164" translate="yes" xml:space="preserve">
          <source>Perform semantic analysis on a type.</source>
          <target state="translated">Выполнять семантический анализ по типу.</target>
        </trans-unit>
        <trans-unit id="a7f660ada612d7566103025f0017720a6ab15950" translate="yes" xml:space="preserve">
          <source>Perform semantic analysis on init.</source>
          <target state="translated">Выполните семантический анализ на init.</target>
        </trans-unit>
        <trans-unit id="f3bec592477a6e10ca8657fca997d67349936f34" translate="yes" xml:space="preserve">
          <source>Perform semantic() on an array of Expressions.</source>
          <target state="translated">Выполните семантическую()на массиве выражений.</target>
        </trans-unit>
        <trans-unit id="d80d3e557db27f6dafd2b8a5e1f5d0b5a1124a0a" translate="yes" xml:space="preserve">
          <source>Perform the &quot;inline copying&quot; of a default argument for a function parameter.</source>
          <target state="translated">Выполните &quot;встроенное копирование&quot; аргумента по умолчанию для параметра функции.</target>
        </trans-unit>
        <trans-unit id="69cc04c0fc19d1f6ca88e58a0f4c875dd2042d44" translate="yes" xml:space="preserve">
          <source>Perform the operation in infinite precision</source>
          <target state="translated">Выполните операцию с бесконечной точностью</target>
        </trans-unit>
        <trans-unit id="dbb33629b27f400be6080e4a52ca1b7eeddba75f" translate="yes" xml:space="preserve">
          <source>Performance is optimized for numbers below ~1000 decimal digits. For X86 machines, highly optimised assembly routines are used.</source>
          <target state="translated">Производительность оптимизирована для чисел до ~1000 знаков после запятой.Для станков X86 используются оптимизированные процедуры сборки.</target>
        </trans-unit>
        <trans-unit id="0fcaad6a9538475080af9cc6d30bbac007d9ec46" translate="yes" xml:space="preserve">
          <source>Performing parallel reductions with an imperative, as opposed to functional, programming style. In this case, it's useful to treat &lt;code&gt;WorkerLocalStorageStorage&lt;/code&gt; as local to each thread for only the parallel portion of an algorithm.</source>
          <target state="translated">Выполнение параллельных сокращений с обязательным, а не функциональным стилем программирования. В этом случае полезно рассматривать &lt;code&gt;WorkerLocalStorageStorage&lt;/code&gt; как локальный для каждого потока только для параллельной части алгоритма.</target>
        </trans-unit>
        <trans-unit id="a79e877a4a8d751b334bc1205fab1f501d2da5e7" translate="yes" xml:space="preserve">
          <source>Performs &amp;Omicron;(&lt;code&gt;max(front.length, back.length)&lt;/code&gt;) evaluations of &lt;code&gt;swap&lt;/code&gt;.</source>
          <target state="translated">Выполняет &lt;code&gt;max(front.length, back.length)&lt;/code&gt; ( max (front.length, back.length) ) оценки &lt;code&gt;swap&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="27b39dff0e45fd8fe7d05db83b932261b700cb97" translate="yes" xml:space="preserve">
          <source>Performs &amp;Omicron;(&lt;code&gt;r.length&lt;/code&gt;) (if unstable or semistable) or &amp;Omicron;(&lt;code&gt;r.length * log(r.length)&lt;/code&gt;) (if stable) evaluations of &lt;code&gt;less&lt;/code&gt; and &lt;code&gt;swap&lt;/code&gt;. The unstable version computes the minimum possible evaluations of &lt;code&gt;swap&lt;/code&gt; (roughly half of those performed by the semistable version).</source>
          <target state="translated">Выполняет &lt;code&gt;r.length&lt;/code&gt; ( r.length ) (если нестабильно или полустабильно) или &amp;Omicron; ( &lt;code&gt;r.length * log(r.length)&lt;/code&gt; ) (если стабильно) оценки &lt;code&gt;less&lt;/code&gt; и &lt;code&gt;swap&lt;/code&gt; . Нестабильная версия вычисляет минимально возможные оценки &lt;code&gt;swap&lt;/code&gt; (примерно половина тех, которые выполняются в полустабильной версии).</target>
        </trans-unit>
        <trans-unit id="7049fba4f4d6daf9ed4727bd1cf2d991410e1334" translate="yes" xml:space="preserve">
          <source>Performs a &lt;a href=&quot;https://en.wikipedia.org/wiki/Exponential_search&quot;&gt; galloping search algorithm&lt;/a&gt;, i.e. searches with a step that doubles every time, (1, 2, 4, 8, ...) leading to an exponential search schedule (indexes tried are 0, 1, 3, 7, 15, 31, 63,...) Once the search overshoots its target, the remaining interval is searched using binary search. A value is found in &amp;Omicron;(&lt;code&gt;log(n)&lt;/code&gt;) time.</source>
          <target state="translated">Выполняет &lt;a href=&quot;https://en.wikipedia.org/wiki/Exponential_search&quot;&gt;скачкообразный алгоритм поиска&lt;/a&gt; , то есть выполняет поиск с шагом, который удваивается каждый раз (1, 2, 4, 8, ...), что приводит к экспоненциальному расписанию поиска (пробуются индексы 0, 1, 3, 7, 15, 31 , 63, ...) Как только поиск выходит за пределы цели, оставшийся интервал ищется с использованием бинарного поиска. Значение находится за время &lt;code&gt;log(n)&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="a4b95a2b7c7b269fa91631feadfef7e99a6021a5" translate="yes" xml:space="preserve">
          <source>Performs a lexicographical comparison on two &lt;a href=&quot;std_range_primitives#isInputRange&quot;&gt;input ranges&lt;/a&gt;. Iterating &lt;code&gt;r1&lt;/code&gt; and &lt;code&gt;r2&lt;/code&gt; in lockstep, &lt;code&gt;cmp&lt;/code&gt; compares each element &lt;code&gt;e1&lt;/code&gt; of &lt;code&gt;r1&lt;/code&gt; with the corresponding element &lt;code&gt;e2&lt;/code&gt; in &lt;code&gt;r2&lt;/code&gt;. If one of the ranges has been finished, &lt;code&gt;cmp&lt;/code&gt; returns a negative value if &lt;code&gt;r1&lt;/code&gt; has fewer elements than &lt;code&gt;r2&lt;/code&gt;, a positive value if &lt;code&gt;r1&lt;/code&gt; has more elements than &lt;code&gt;r2&lt;/code&gt;, and &lt;code&gt;0&lt;/code&gt; if the ranges have the same number of elements.</source>
          <target state="translated">Выполняет лексикографическое сравнение двух &lt;a href=&quot;std_range_primitives#isInputRange&quot;&gt;входных диапазонов&lt;/a&gt; . Перебирая &lt;code&gt;r1&lt;/code&gt; и &lt;code&gt;r2&lt;/code&gt; на шаге, &lt;code&gt;cmp&lt;/code&gt; сравнивает каждый элемент &lt;code&gt;e1&lt;/code&gt; из &lt;code&gt;r1&lt;/code&gt; с соответствующим элементом &lt;code&gt;e2&lt;/code&gt; в &lt;code&gt;r2&lt;/code&gt; . Если один из диапазонов был завершен, &lt;code&gt;cmp&lt;/code&gt; возвращает отрицательное значение, если &lt;code&gt;r1&lt;/code&gt; имеет меньше элементов, чем &lt;code&gt;r2&lt;/code&gt; , положительное значение, если &lt;code&gt;r1&lt;/code&gt; имеет больше элементов, чем &lt;code&gt;r2&lt;/code&gt; , и &lt;code&gt;0&lt;/code&gt; , если диапазоны имеют одинаковое количество элементов.</target>
        </trans-unit>
        <trans-unit id="125bedfc6490366279c7f8e529677bc639cfff43" translate="yes" xml:space="preserve">
          <source>Performs read-modify-write operation at specified index into the container.</source>
          <target state="translated">Выполняет операцию чтения-изменения-записи при указанном индексе в контейнер.</target>
        </trans-unit>
        <trans-unit id="a3373eec995027ee6a7bacd42ba54d403267caec" translate="yes" xml:space="preserve">
          <source>Performs semantic on TemplateParameter AST nodes.</source>
          <target state="translated">Выполняет семантику на узлах TemplateParameter AST.</target>
        </trans-unit>
        <trans-unit id="2c7b10877a602224a5ce8fabad8229c99d42b2b7" translate="yes" xml:space="preserve">
          <source>Performs the binary operation 'op' on val using 'mod' as the modifier.</source>
          <target state="translated">Выполняет двоичную операцию 'op' на val,используя 'mod' в качестве модификатора.</target>
        </trans-unit>
        <trans-unit id="8fb9c991fb0173deed6c7ec1a030027befb93171" translate="yes" xml:space="preserve">
          <source>Performs the ftp request as it has been configured.</source>
          <target state="translated">Выполняет ftp-запрос в том виде,в котором он был настроен.</target>
        </trans-unit>
        <trans-unit id="49a882c0eaebe773b4d43b5c1340a25d26b54f1a" translate="yes" xml:space="preserve">
          <source>Performs the lookup of set of &lt;a href=&quot;#Code%20point&quot;&gt;code points&lt;/a&gt; with compile-time correctness checking. This short-cut version combines 3 searches: across blocks, scripts, and common binary properties.</source>
          <target state="translated">Выполняет поиск набора &lt;a href=&quot;#Code%20point&quot;&gt;точек кода&lt;/a&gt; с проверкой корректности во время компиляции. Эта сокращенная версия объединяет 3 поиска: по блокам, сценариям и общим двоичным свойствам.</target>
        </trans-unit>
        <trans-unit id="adceff9860a6c21999e0bdf69ad270c04b8f427c" translate="yes" xml:space="preserve">
          <source>Performs the request as configured.</source>
          <target state="translated">Выполняет запрос в соответствии с настройками.</target>
        </trans-unit>
        <trans-unit id="45a792110f052e24be5dc1e7a32ab8481f32dde5" translate="yes" xml:space="preserve">
          <source>Performs the same task as &lt;a href=&quot;#buildPath&quot;&gt;&lt;code&gt;buildPath&lt;/code&gt;&lt;/a&gt;, while at the same time resolving current/parent directory symbols (&lt;code&gt;&quot;.&quot;&lt;/code&gt; and &lt;code&gt;&quot;..&quot;&lt;/code&gt;) and removing superfluous directory separators. It will return &quot;.&quot; if the path leads to the starting directory. On Windows, slashes are replaced with backslashes.</source>
          <target state="translated">Выполняет ту же задачу, что и &lt;a href=&quot;#buildPath&quot;&gt; &lt;code&gt;buildPath&lt;/code&gt; &lt;/a&gt; , одновременно разрешая символы текущего / родительского каталога ( &lt;code&gt;&quot;.&quot;&lt;/code&gt; И &lt;code&gt;&quot;..&quot;&lt;/code&gt; ) и удаляя лишние разделители каталогов. Он вернется &quot;.&quot; если путь ведет к начальному каталогу. В Windows косая черта заменяется обратной косой чертой.</target>
        </trans-unit>
        <trans-unit id="2d95c20aebc021d83537913ab5e8c2caaa3c4c7f" translate="yes" xml:space="preserve">
          <source>Performs tilde expansion in paths on POSIX systems. On Windows, this function does nothing.</source>
          <target state="translated">Выполняет тильдовое расширение траекторий в системах POSIX.В Windows эта функция ничего не делает.</target>
        </trans-unit>
        <trans-unit id="1a08bc377528194036561375e26f9d9fa5984f3c" translate="yes" xml:space="preserve">
          <source>Period is &lt;code&gt;2 ^^ nbits - 1&lt;/code&gt; except for a legacy 192-bit uint version (see note below).</source>
          <target state="translated">Период составляет &lt;code&gt;2 ^^ nbits - 1&lt;/code&gt; за исключением устаревшей 192-битной версии uint (см. Примечание ниже).</target>
        </trans-unit>
        <trans-unit id="171c5560fc34e8a8a4af348c5e5f4ecdb2765fc4" translate="yes" xml:space="preserve">
          <source>Permission used when creating new files and directories on the remote server for protocols that support it, SFTP/SCP/FILE</source>
          <target state="translated">Разрешение,используемое при создании новых файлов и каталогов на удаленном сервере для протоколов,поддерживающих его,SFTP/SCP/FILE</target>
        </trans-unit>
        <trans-unit id="20240c4f510895ba885486432888b65c0241d82d" translate="yes" xml:space="preserve">
          <source>PermissiveVisitor overrides all the visit methods in the parent class that assert(0) in order to facilitate the traversal of subsets of the AST. It does not implement any visiting logic.</source>
          <target state="translated">PermissiveVisitor переопределяет все методы посещения в родительском классе,которые утверждают(0),чтобы облегчить обход подмножеств AST.Он не реализует никакой логики посещения.</target>
        </trans-unit>
        <trans-unit id="f4f192f4cb2e3ed05cc4e9839c0ce15a34e4dec6" translate="yes" xml:space="preserve">
          <source>Permutations!Range &lt;strong id=&quot;permutations&quot;&gt;permutations&lt;/strong&gt;(Range)(Range r)</source>
          <target state="translated">Перестановки! Диапазон &lt;strong id=&quot;permutations&quot;&gt;перестановок&lt;/strong&gt; (Range) (Диапазон r)</target>
        </trans-unit>
        <trans-unit id="9814ff21659d24b67c90ccf4b1670f3530e3e4ea" translate="yes" xml:space="preserve">
          <source>Permutes &lt;code&gt;range&lt;/code&gt; in-place to the next lexicographically greater</source>
          <target state="translated">&lt;code&gt;range&lt;/code&gt; перестановок на месте до следующего лексикографически больше</target>
        </trans-unit>
        <trans-unit id="47d68c1d1d8f096dc79c29a375f3002be6a50e66" translate="yes" xml:space="preserve">
          <source>Permutes &lt;code&gt;range&lt;/code&gt; in-place to the next lexicographically greater permutation.</source>
          <target state="translated">Пермуты &lt;code&gt;range&lt;/code&gt; на месте до следующей лексикографически большей перестановки.</target>
        </trans-unit>
        <trans-unit id="bc4059a2c730084630f46b548fe60ee6f2f7260d" translate="yes" xml:space="preserve">
          <source>Permutes &lt;code&gt;range&lt;/code&gt; into the &lt;code&gt;perm&lt;/code&gt; permutation. The algorithm has a constant runtime complexity with respect to the number of permutations created. Due to the number of unique values of &lt;code&gt;ulong&lt;/code&gt; only the first 21 elements of &lt;code&gt;range&lt;/code&gt; can be permuted. The rest of the range will therefore not be permuted. This algorithm uses the &lt;a href=&quot;http://en.wikipedia.org/wiki/Lehmer_code&quot;&gt;Lehmer Code&lt;/a&gt;.</source>
          <target state="translated">Переставляет &lt;code&gt;range&lt;/code&gt; в &lt;code&gt;perm&lt;/code&gt; перестановки. Алгоритм имеет постоянную сложность времени выполнения по отношению к числу созданных перестановок. Из-за количества уникальных значений &lt;code&gt;ulong&lt;/code&gt; можно переставить только первые 21 элемент &lt;code&gt;range&lt;/code&gt; . Поэтому остальная часть диапазона не будет переставлена. Этот алгоритм использует &lt;a href=&quot;http://en.wikipedia.org/wiki/Lehmer_code&quot;&gt;код Лемера&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="40d6660e437b349bdcacf2f3e77734577c86a86d" translate="yes" xml:space="preserve">
          <source>Pf</source>
          <target state="translated">Pf</target>
        </trans-unit>
        <trans-unit id="0b8800ca3abc78cb24f838a046a98f359b8f828e" translate="yes" xml:space="preserve">
          <source>Phags-pa</source>
          <target state="translated">Phags-pa</target>
        </trans-unit>
        <trans-unit id="a1fbe41a1fd16bc593d390402b8a1d609687aad4" translate="yes" xml:space="preserve">
          <source>Phags_Pa</source>
          <target state="translated">Phags_Pa</target>
        </trans-unit>
        <trans-unit id="690f59d7fc7811f820e457a94560e3193f08fc84" translate="yes" xml:space="preserve">
          <source>Phaistos Disc</source>
          <target state="translated">Фестский диск</target>
        </trans-unit>
        <trans-unit id="2f8d593b2f2f827f8bfaa4cd70608d331d03efeb" translate="yes" xml:space="preserve">
          <source>Phases of Compilation</source>
          <target state="translated">Фазы компиляции</target>
        </trans-unit>
        <trans-unit id="2de5476a4ccc050377fe5448cfcedc724b906da9" translate="yes" xml:space="preserve">
          <source>Phases of Processing</source>
          <target state="translated">Фазы обработки</target>
        </trans-unit>
        <trans-unit id="75f01355c8572c29448739b8c1da01c02b9b2517" translate="yes" xml:space="preserve">
          <source>Phobos Runtime Library</source>
          <target state="translated">Библиотека исполнения Фобос</target>
        </trans-unit>
        <trans-unit id="4bf0ae86028cd4735fa6d30d00b782060cf1c131" translate="yes" xml:space="preserve">
          <source>Phobos is the standard runtime library that comes with the D language compiler.</source>
          <target state="translated">Phobos-это стандартная библиотека времени выполнения,которая поставляется в комплекте с компилятором языка D.</target>
        </trans-unit>
        <trans-unit id="2f182fe170adaf16b14bcef0b9bb20b231bf94f0" translate="yes" xml:space="preserve">
          <source>Phobos provides the following functionality for time:    This functionality is separated into the following modules</source>
          <target state="translated">Фобос обеспечивает следующую функциональность на время:Эта функциональность разделена на следующие модули</target>
        </trans-unit>
        <trans-unit id="6908ab9bda0e225ecfd064a3d987f42cfc69e74c" translate="yes" xml:space="preserve">
          <source>Phoenician</source>
          <target state="translated">Phoenician</target>
        </trans-unit>
        <trans-unit id="39ead51340b227e68cc17352e9842e3846b38635" translate="yes" xml:space="preserve">
          <source>Phonetic Extensions</source>
          <target state="translated">Расширения для телефонов</target>
        </trans-unit>
        <trans-unit id="652915d71b26e32e7a6a196e8ba77ddfdb77afcf" translate="yes" xml:space="preserve">
          <source>Phonetic Extensions Supplement</source>
          <target state="translated">Дополнение к фонетическим расширениям</target>
        </trans-unit>
        <trans-unit id="a13438854aceabf5a965c5bd61f9c40684610db5" translate="yes" xml:space="preserve">
          <source>Pi</source>
          <target state="translated">Pi</target>
        </trans-unit>
        <trans-unit id="f398c7e78f56808cbcbff7a50fe6e2ac8277c2b8" translate="yes" xml:space="preserve">
          <source>Pick off one of the storage classes from stc, and return a string representation of it. stc is reduced by the one picked.</source>
          <target state="translated">Выберите один из классов хранилища из stc и верните ему строковое представление.stc уменьшается на выбранную.</target>
        </trans-unit>
        <trans-unit id="8244da7920c1ba38d0c027418ea1aae6493f1225" translate="yes" xml:space="preserve">
          <source>Picking a good initial guess is an art, but you usually can pick a value covering 99% of the cases. For example, when gathering user input from the console - it's unlikely to be longer than 80.</source>
          <target state="translated">Выбор хорошей первоначальной догадки-это искусство,но обычно можно выбрать значение,охватывающее 99% случаев.Например,при сборе пользовательского ввода с консоли-вряд ли оно будет длиннее 80.</target>
        </trans-unit>
        <trans-unit id="e53f69a39919b0a915ebc9873dad685de7a8a9ff" translate="yes" xml:space="preserve">
          <source>Picks one value in an unspecified position in the container, removes it from the container, and returns it. The stable version behaves the same, but guarantees that ranges iterating over the container are never invalidated.</source>
          <target state="translated">Выбирает одно значение в неопределённой позиции в контейнере,удаляет его из контейнера и возвращает.Стабильная версия ведет себя так же,но гарантирует,что диапазоны итераций по контейнеру никогда не будут недействительны.</target>
        </trans-unit>
        <trans-unit id="ff2655a1a6e1bb2c64ceacb981dca367486334be" translate="yes" xml:space="preserve">
          <source>Piotr Szturmaj, Kai Nacke, Johannes Pfau</source>
          <target state="translated">Петр Штурмай,Кай Накке,Иоганнес Пфау</target>
        </trans-unit>
        <trans-unit id="56cdfa6aa8a28243be7e1b4e2cea18c6dba33f79" translate="yes" xml:space="preserve">
          <source>Pipes can, for example, be used for interprocess communication by spawning a new process and passing one end of the pipe to the child, while the parent uses the other end. (See also &lt;a href=&quot;#pipeProcess&quot;&gt;&lt;code&gt;pipeProcess&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#pipeShell&quot;&gt;&lt;code&gt;pipeShell&lt;/code&gt;&lt;/a&gt; for an easier way of doing this.)</source>
          <target state="translated">Каналы могут, например, использоваться для межпроцессного взаимодействия, порождая новый процесс и передавая один конец канала дочернему элементу, в то время как родительский использует другой конец. (См. Также &lt;a href=&quot;#pipeProcess&quot;&gt; &lt;code&gt;pipeProcess&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;#pipeShell&quot;&gt; &lt;code&gt;pipeShell&lt;/code&gt; &lt;/a&gt; для более простого способа сделать это.)</target>
        </trans-unit>
        <trans-unit id="f1162801a99a1678f4365b1437f7ee26e2b17365" translate="yes" xml:space="preserve">
          <source>Pipes functions in sequence. Offers the same functionality as &lt;code&gt; compose&lt;/code&gt;, but with functions specified in reverse order. This may lead to more readable code in some situation because the order of execution is the same as lexical order.</source>
          <target state="translated">Трубы функционируют в последовательности. Предоставляет те же функциональные возможности, что и &lt;code&gt; compose&lt;/code&gt; , но с функциями, указанными в обратном порядке. Это может привести к более читаемому коду в некоторых ситуациях, потому что порядок выполнения такой же, как и в лексическом порядке.</target>
        </trans-unit>
        <trans-unit id="dc1a73c3606a15a51213cdf1942786e4857d3599" translate="yes" xml:space="preserve">
          <source>Place a member (mem) into an aggregate (agg), which can be a struct, union or class</source>
          <target state="translated">Поместить члена (мем)в агрегат (агрегат),который может быть структурой,союзом или классом</target>
        </trans-unit>
        <trans-unit id="695bd0b5f8fdfe3e3a5361a7c79d6090a91b51df" translate="yes" xml:space="preserve">
          <source>Places &lt;code&gt;b&lt;/code&gt; into the free tree.</source>
          <target state="translated">Места &lt;code&gt;b&lt;/code&gt; в свободном дереве.</target>
        </trans-unit>
        <trans-unit id="e0d23f9eee6541877d2307c6f58578451428b4f6" translate="yes" xml:space="preserve">
          <source>Places the values as a message at the back of tid's message queue.</source>
          <target state="translated">Размещает значения в виде сообщения в задней части очереди сообщений tid.</target>
        </trans-unit>
        <trans-unit id="a5b257314e0f4709f60ae804ac7e7f2b742ae21e" translate="yes" xml:space="preserve">
          <source>Places the values as a message on the front of tid's message queue.</source>
          <target state="translated">Размещает значения как сообщение на передней стороне очереди сообщений tid.</target>
        </trans-unit>
        <trans-unit id="94226d2878e7c617f3b3f1f3719eb4bde4fad02b" translate="yes" xml:space="preserve">
          <source>Plain Old Data</source>
          <target state="translated">Простые старые данные</target>
        </trans-unit>
        <trans-unit id="a1493d685490e2464f09fa1850399f813e512165" translate="yes" xml:space="preserve">
          <source>Plain string(s), in which case it's compiled to bytecode before matching.</source>
          <target state="translated">Обычная строка(и),в этом случае она компилируется в байткод перед совпадением.</target>
        </trans-unit>
        <trans-unit id="cb23ee720e4a8686c2c10bf8539ba0643cdd0071" translate="yes" xml:space="preserve">
          <source>Platform-specific error code.</source>
          <target state="translated">Код ошибки для конкретной платформы.</target>
        </trans-unit>
        <trans-unit id="027a81920a729c2258e1d82d39649acdc7dffe11" translate="yes" xml:space="preserve">
          <source>Playing Cards</source>
          <target state="translated">Игровые карты</target>
        </trans-unit>
        <trans-unit id="03706f3dc028771782bc46899efa2883e38b6817" translate="yes" xml:space="preserve">
          <source>Please note that this mutex is not recursive and is intended to guard access to data only. Also, no deadlock checking is in place because doing so would require dynamic memory allocation, which would reduce performance by an unacceptable amount. As a result, any attempt to recursively acquire this mutex may well deadlock the caller, particularly if a write lock is acquired while holding a read lock, or vice-versa. In practice, this should not be an issue however, because it is uncommon to call deeply into unknown code while holding a lock that simply protects data.</source>
          <target state="translated">Пожалуйста,обратите внимание,что этот мьютекс не является рекурсивным и предназначен только для защиты доступа к данным.Кроме того,отсутствует проверка на тупик,так как для этого потребуется динамическое выделение памяти,что снизит производительность на недопустимое количество.В результате любая попытка рекурсивного приобретения данного мьютекса вполне может завести вызывающего абонента в тупик,особенно если блокировка записи получена при удержании блокировки чтения,или наоборот.На практике,однако,это не должно быть проблемой,потому что редки случаи глубокого проникновения в неизвестный код при удержании блокировки,которая просто защищает данные.</target>
        </trans-unit>
        <trans-unit id="5d56891bc4466df536e092c37941f4065e37d9b8" translate="yes" xml:space="preserve">
          <source>Please see the documentation of function &lt;a href=&quot;#formattedWrite&quot;&gt;&lt;code&gt;formattedWrite&lt;/code&gt;&lt;/a&gt; for a description of the format string.</source>
          <target state="translated">Пожалуйста, смотрите документацию функции &lt;a href=&quot;#formattedWrite&quot;&gt; &lt;code&gt;formattedWrite&lt;/code&gt; &lt;/a&gt; для описания строки формата.</target>
        </trans-unit>
        <trans-unit id="1cddd8e6f160f9c012ad14047eb479084fe64ddb" translate="yes" xml:space="preserve">
          <source>Po</source>
          <target state="translated">Po</target>
        </trans-unit>
        <trans-unit id="98c8146cc9957cbbd6191153319b7d3f7d45b96d" translate="yes" xml:space="preserve">
          <source>Pointer Arithmetic</source>
          <target state="translated">Арифметика указателей</target>
        </trans-unit>
        <trans-unit id="e6a2fdb11c42c1ae52e79abd0552ecd4e047a046" translate="yes" xml:space="preserve">
          <source>Pointer Conversions</source>
          <target state="translated">Преобразование указателей</target>
        </trans-unit>
        <trans-unit id="969e7d33b963ce1f275892b62721d3ce0b9f1543" translate="yes" xml:space="preserve">
          <source>Pointer comparisons between independent memory blocks will generate a compile-time error, unless two such comparisons are combined using &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; or &lt;code&gt;|&lt;/code&gt;&lt;code&gt;|&lt;/code&gt; to yield a result which is independent of the ordering of memory blocks. Each comparison must consist of two pointer expressions compared with &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt;&lt;code&gt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;, or &lt;code&gt;&amp;gt;&lt;/code&gt;&lt;code&gt;=&lt;/code&gt;, and may optionally be negated with &lt;code&gt;!&lt;/code&gt;.</source>
          <target state="translated">Сравнение указателей между независимыми блоками памяти приведет к ошибке времени компиляции, если только два таких сравнения не объединены с использованием &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; или &lt;code&gt;|&lt;/code&gt; &lt;code&gt;|&lt;/code&gt; чтобы получить результат, который не зависит от порядка блоков памяти. Каждое сравнение должно состоять из двух выражений указателя, сравниваемых с &lt;code&gt;&amp;lt;&lt;/code&gt; , &lt;code&gt;&amp;lt;&lt;/code&gt; &lt;code&gt;=&lt;/code&gt; , &lt;code&gt;&amp;gt;&lt;/code&gt; или &lt;code&gt;&amp;gt;&lt;/code&gt; &lt;code&gt;=&lt;/code&gt; , и может быть опционально отменено с &lt;code&gt;!&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="8d8ba274f62726cd16cfdb74920784e055bc3fed" translate="yes" xml:space="preserve">
          <source>Pointer operations</source>
          <target state="translated">Указательные операции</target>
        </trans-unit>
        <trans-unit id="f73f4002533a013222fe5260f3358d17ac5e821c" translate="yes" xml:space="preserve">
          <source>Pointer to an array. Must not be null.</source>
          <target state="translated">Указатель на массив.Не должен быть нулевым.</target>
        </trans-unit>
        <trans-unit id="5076bca24670e24c6621a2cb89582af335d5f43f" translate="yes" xml:space="preserve">
          <source>Pointer to command string to send if USER/PASS fails.</source>
          <target state="translated">Указатель на командную строку для отправки,если USER/PASS не удается.</target>
        </trans-unit>
        <trans-unit id="06f9d51c1c7abebe17ab3977ba3899554ca3ab4c" translate="yes" xml:space="preserve">
          <source>Pointer to freeing function for the data pointer (use FPNULL if none)</source>
          <target state="translated">Указатель на функцию освобождения указателя на данные (используйте FPNULL,если нет)</target>
        </trans-unit>
        <trans-unit id="dc0cefd5a5a7541421f720b0bffc14b9f52d1fb1" translate="yes" xml:space="preserve">
          <source>Pointer to list to free</source>
          <target state="translated">Указатель,чтобы получить список бесплатно</target>
        </trans-unit>
        <trans-unit id="68f4cf9a19016a952bc2822c32f67d451b70e07f" translate="yes" xml:space="preserve">
          <source>Pointer to string conversions prints the pointer as a &lt;code&gt;size_t&lt;/code&gt; value. If pointer is &lt;code&gt;char*&lt;/code&gt;, treat it as C-style strings. In that case, this function is &lt;code&gt;@system&lt;/code&gt;.</source>
          <target state="translated">Преобразование указателя в строку печатает указатель как значение &lt;code&gt;size_t&lt;/code&gt; . Если указатель &lt;code&gt;char*&lt;/code&gt; , обрабатывайте его как строки в стиле C. В этом случае эта функция является &lt;code&gt;@system&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c5b722fc5ad9faac57dfe90f51b7e6e51ad5a968" translate="yes" xml:space="preserve">
          <source>Pointers</source>
          <target state="translated">Pointers</target>
        </trans-unit>
        <trans-unit id="ff4be6e4f9b5590ddf9dfe02916964c4f8ab7d67" translate="yes" xml:space="preserve">
          <source>Pointers and object references will increase in size from 4 bytes to 8 bytes going from 32 to 64 bit code.</source>
          <target state="translated">Размер указателей и ссылок на объекты увеличится с 4 байт до 8 байт и составит от 32 до 64 битного кода.</target>
        </trans-unit>
        <trans-unit id="7f833d9959f6dc21eb0139b1e1d09ff93afcd672" translate="yes" xml:space="preserve">
          <source>Pointers and the Garbage Collector</source>
          <target state="translated">Указатели и мусорщик</target>
        </trans-unit>
        <trans-unit id="b62503261da1d0e85d8812c54a796b3826868e30" translate="yes" xml:space="preserve">
          <source>Pointers are 32 bits, but words are still 64 bits (x32 ABI) (This can be defined in parallel to &lt;code&gt;X86_64&lt;/code&gt;)</source>
          <target state="translated">Указатели 32-битные, но слова по-прежнему 64-битные (x32 ABI) (это можно определить параллельно с &lt;code&gt;X86_64&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="ee00272ddc3bae06ffd868c358f7dc324ab87c5e" translate="yes" xml:space="preserve">
          <source>Pointers are 64 bits (command line switch &lt;a href=&quot;https://dlang.org/dmd.html#switch-m64&quot;&gt;&lt;em&gt;-m64&lt;/em&gt;&lt;/a&gt;). (Do not confuse this with C's LP64 model)</source>
          <target state="translated">Указатели 64- &lt;a href=&quot;https://dlang.org/dmd.html#switch-m64&quot;&gt;&lt;em&gt;битные&lt;/em&gt;&lt;/a&gt; (переключатель командной строки &lt;em&gt;-m64&lt;/em&gt; ). (Не путайте это с моделью C64 LP64)</target>
        </trans-unit>
        <trans-unit id="8299cb78e9d5361ffb94a50c6be3064ecd777f86" translate="yes" xml:space="preserve">
          <source>Pointers are formatted as hex integers.</source>
          <target state="translated">Указатели отформатированы в виде шестнадцатиричных целых чисел.</target>
        </trans-unit>
        <trans-unit id="81beea5be49de828523c7b83cb83e263a8c723ad" translate="yes" xml:space="preserve">
          <source>Pointers are initialized to &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">Указатели инициализируются &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b564720393e1a126ee7c19e9b2ab29ecee13c4aa" translate="yes" xml:space="preserve">
          <source>Pointers are permitted in CTFE, provided they are used safely:</source>
          <target state="translated">Указатели разрешены в CTFE при условии их безопасного использования:</target>
        </trans-unit>
        <trans-unit id="33b50f6cb0549c10f645097a33ea92d4e40b3b8e" translate="yes" xml:space="preserve">
          <source>Pointers in D can be broadly divided into two categories: Those that point to garbage collected memory, and those that do not. Examples of the latter are pointers created by calls to C's malloc(), pointers received from C library routines, pointers to static data, pointers to objects on the stack, etc. For those pointers, anything that is legal in C can be done with them.</source>
          <target state="translated">Указатели в D можно широко разделить на две категории:Те,которые указывают на мусор,собранный в памяти,и те,которые не указывают.Примерами последних являются указатели,созданные вызовами malloc()в Си,указатели,полученные из процедур библиотеки Си,указатели на статические данные,указатели на объекты на стеке и т.д.Для этих указателей можно сделать все,что легально в Си.</target>
        </trans-unit>
        <trans-unit id="07f1578da80dda793e1b2a12af8d61bddaecaaca" translate="yes" xml:space="preserve">
          <source>Pointers to data</source>
          <target state="translated">Указатели на данные</target>
        </trans-unit>
        <trans-unit id="3e95a08c7f10554dbb4f1d987f31459800a05579" translate="yes" xml:space="preserve">
          <source>Pointers to functions are declared using the &lt;code&gt;function&lt;/code&gt; keyword:</source>
          <target state="translated">Указатели на функции объявляются с помощью ключевого слова &lt;code&gt;function&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="ba2ae989bf15107b84383ac16b45e244a6749266" translate="yes" xml:space="preserve">
          <source>Points in Time</source>
          <target state="translated">Очки во времени</target>
        </trans-unit>
        <trans-unit id="8d61184962dda249c7c096096c40ff46b825f4a7" translate="yes" xml:space="preserve">
          <source>Policies</source>
          <target state="translated">Policies</target>
        </trans-unit>
        <trans-unit id="af58401ee9469729541dac0b751cce965eea718d" translate="yes" xml:space="preserve">
          <source>Policy &lt;code&gt;policy&lt;/code&gt;</source>
          <target state="translated">Политика &lt;code&gt;policy&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fc91f995ebb93a2f7e56c21f73e82fc61f5b2a4c" translate="yes" xml:space="preserve">
          <source>Policy used with the searching primitives &lt;code&gt;lowerBound&lt;/code&gt;, &lt;code&gt; upperBound&lt;/code&gt;, and &lt;code&gt;equalRange&lt;/code&gt; of &lt;a href=&quot;#SortedRange&quot;&gt;&lt;code&gt;SortedRange&lt;/code&gt;&lt;/a&gt; below.</source>
          <target state="translated">Политика, используемая с поисковыми примитивами &lt;code&gt;lowerBound&lt;/code&gt; , &lt;code&gt; upperBound&lt;/code&gt; и &lt;code&gt;equalRange&lt;/code&gt; из &lt;a href=&quot;#SortedRange&quot;&gt; &lt;code&gt;SortedRange&lt;/code&gt; &lt;/a&gt; ниже.</target>
        </trans-unit>
        <trans-unit id="3a08168a4a6e709754913e5ffddfbc3155fa15c7" translate="yes" xml:space="preserve">
          <source>Pop and return top of chained exception stack.</source>
          <target state="translated">Спрыгивай и возвращай верх стопки прикованных исключений.</target>
        </trans-unit>
        <trans-unit id="e3b2083d9073caa149a44c741a28f14a49836e82" translate="yes" xml:space="preserve">
          <source>PopFirst &lt;code&gt;popFirst&lt;/code&gt;</source>
          <target state="translated">PopFirst &lt;code&gt;popFirst&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="39b1331a2764ebac317450573122cb14748e0954" translate="yes" xml:space="preserve">
          <source>Pops &lt;code&gt;front&lt;/code&gt; from the range, using &lt;code&gt;func&lt;/code&gt; to generate the next time point in the range.</source>
          <target state="translated">Выдвигает &lt;code&gt;front&lt;/code&gt; из диапазона, используя &lt;code&gt;func&lt;/code&gt; для генерации следующего момента времени в диапазоне.</target>
        </trans-unit>
        <trans-unit id="dcdc71ebe929973a390e8aff45bb2f4747f7dcd1" translate="yes" xml:space="preserve">
          <source>Pops &lt;code&gt;front&lt;/code&gt; from the range, using &lt;code&gt;func&lt;/code&gt; to generate the next time point in the range. If the generated time point is beyond the edge of the range, then &lt;code&gt;front&lt;/code&gt; is set to that edge, and the range is then empty. So, if iterating forwards, and the generated time point is greater than the interval's &lt;code&gt;end&lt;/code&gt;, then &lt;code&gt;front&lt;/code&gt; is set to &lt;code&gt;end&lt;/code&gt;. If iterating backwards, and the generated time point is less than the interval's &lt;code&gt;begin&lt;/code&gt;, then &lt;code&gt;front&lt;/code&gt; is set to &lt;code&gt;begin&lt;/code&gt;.</source>
          <target state="translated">Выдвигает &lt;code&gt;front&lt;/code&gt; из диапазона, используя &lt;code&gt;func&lt;/code&gt; для генерации следующего момента времени в диапазоне. Если сгенерированный момент времени находится за границей диапазона, тогда &lt;code&gt;front&lt;/code&gt; устанавливается на этот край, и тогда диапазон пуст. Итак, если итерация вперед и сгенерированный момент времени больше &lt;code&gt;end&lt;/code&gt; интервала , то &lt;code&gt;front&lt;/code&gt; устанавливается на &lt;code&gt;end&lt;/code&gt; . Если перебор в обратном направлении, и генерируемый момент времени меньше , чем интервал - х &lt;code&gt;begin&lt;/code&gt; , то &lt;code&gt;front&lt;/code&gt; будет установлено &lt;code&gt;begin&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9bd2debd0b1b27ed7de52611ae792c23ffd10295" translate="yes" xml:space="preserve">
          <source>Populates the identifier pool with all predefined symbols.</source>
          <target state="translated">Заполняет пул идентификаторов со всеми предопределенными символами.</target>
        </trans-unit>
        <trans-unit id="f5507f8b7f675f44d3633ef363280afbef63c166" translate="yes" xml:space="preserve">
          <source>Port number to connect to, if other than default.</source>
          <target state="translated">Номер порта для подключения,если не по умолчанию.</target>
        </trans-unit>
        <trans-unit id="5c5ce787a818b8d8650eac948c2f4482fe2163c4" translate="yes" xml:space="preserve">
          <source>Port of the proxy, can be set in the proxy string as well with: &lt;code&gt;[host]:[port]&lt;/code&gt;</source>
          <target state="translated">Порт прокси, также может быть установлен в строке прокси с помощью: &lt;code&gt;[host]:[port]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b307b88c84327b1804aee227595be53342245965" translate="yes" xml:space="preserve">
          <source>Portability</source>
          <target state="translated">Portability</target>
        </trans-unit>
        <trans-unit id="5fc28461e5419ac5858beeeb37e698425c2fea75" translate="yes" xml:space="preserve">
          <source>PosInfInterval &lt;code&gt;interval&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;interval&lt;/code&gt; PosInfInterval</target>
        </trans-unit>
        <trans-unit id="2d5085fcde3a9c261b3b04bd4f501bcfa1288c06" translate="yes" xml:space="preserve">
          <source>PosInfInterval &lt;code&gt;rhs&lt;/code&gt;</source>
          <target state="translated">PosInfInterval &lt;code&gt;rhs&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="129a356d8768561b072b73ccccbf992888bea8b7" translate="yes" xml:space="preserve">
          <source>PosInfInterval!TP &lt;code&gt;interval&lt;/code&gt;</source>
          <target state="translated">PosInfInterval! TP &lt;code&gt;interval&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fd0df76a280f9a11a50dd203f053db771fafee40" translate="yes" xml:space="preserve">
          <source>PosInfIntervalRange &lt;code&gt;rhs&lt;/code&gt;</source>
          <target state="translated">PosInfIntervalRange &lt;code&gt;rhs&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f9877fc3f2623b3f50c8f3184bd7c3fe011d61d3" translate="yes" xml:space="preserve">
          <source>Position Independent Code (command line switch &lt;a href=&quot;https://dlang.org/dmd-linux.html#switch-fPIC&quot;&gt;&lt;em&gt;-fPIC&lt;/em&gt;&lt;/a&gt;) is being generated</source>
          <target state="translated">Независимый от позиции код (параметр командной строки &lt;a href=&quot;https://dlang.org/dmd-linux.html#switch-fPIC&quot;&gt;&lt;em&gt;-fPIC&lt;/em&gt;&lt;/a&gt; ) генерируется</target>
        </trans-unit>
        <trans-unit id="94ff21187708025ec06734808a8ffcba3f1255a0" translate="yes" xml:space="preserve">
          <source>Position in source file</source>
          <target state="translated">Положение в исходном файле</target>
        </trans-unit>
        <trans-unit id="1c7d2a41182aaf6cac883c7a26f3e0458f6613a7" translate="yes" xml:space="preserve">
          <source>Positive and negative zeroes are distinct.</source>
          <target state="translated">Положительный и отрицательный нули различаются.</target>
        </trans-unit>
        <trans-unit id="0d9f8a6fbaa2f747fe41cdbb5779f42c76054a43" translate="yes" xml:space="preserve">
          <source>Possible to cast to one type while painting to another type</source>
          <target state="translated">Возможность отбрасывания на один тип во время рисования на другой тип</target>
        </trans-unit>
        <trans-unit id="a595496b70e4ac0dcaad132b95d982296d4ece9c" translate="yes" xml:space="preserve">
          <source>Postblits</source>
          <target state="translated">Postblits</target>
        </trans-unit>
        <trans-unit id="b67cda929c621b7238e8e7b18624e89e3d600ab4" translate="yes" xml:space="preserve">
          <source>Postblits cannot be overloaded. If two or more postblits are defined, even if the signatures differ, the compiler assigns the &lt;code&gt;__postblit&lt;/code&gt; name to both and later issues a conflicting function name error:</source>
          <target state="translated">Постблиты не могут быть перегружены. Если определены два или более постблитов, даже если подписи различаются, компилятор присваивает имя &lt;code&gt;__postblit&lt;/code&gt; обоим, а затем выдает ошибку имени конфликтующей функции:</target>
        </trans-unit>
        <trans-unit id="03b0a5668a78a6c73799b480ad3c40d5053795e5" translate="yes" xml:space="preserve">
          <source>Postcondition</source>
          <target state="translated">Postcondition</target>
        </trans-unit>
        <trans-unit id="fd99975cb3b791e05b83de3f8d3df7dec73b171c" translate="yes" xml:space="preserve">
          <source>Postcondition checks (out contract).</source>
          <target state="translated">Проверка постусловий (аут-контракт).</target>
        </trans-unit>
        <trans-unit id="82ecf35c1a8706936b0e8617bb976a01dca6b88c" translate="yes" xml:space="preserve">
          <source>Postconditions</source>
          <target state="translated">Postconditions</target>
        </trans-unit>
        <trans-unit id="040b4a736abe1da53bd8406f166c0e2e85d95807" translate="yes" xml:space="preserve">
          <source>Postfix Expressions</source>
          <target state="translated">Постфиксные выражения</target>
        </trans-unit>
        <trans-unit id="da4d207f33d1c8c4edafd10628aaf54446134448" translate="yes" xml:space="preserve">
          <source>Postfix Operator Rewrites</source>
          <target state="translated">Перезапись постфиксных операторов</target>
        </trans-unit>
        <trans-unit id="b4dbcceb0733332ed7b3413421a4224fc70b00ed" translate="yes" xml:space="preserve">
          <source>PostfixExpression</source>
          <target state="translated">PostfixExpression</target>
        </trans-unit>
        <trans-unit id="18a58057ccb77e5dd8b91625ed5dc6fc94061fa7" translate="yes" xml:space="preserve">
          <source>Postincrement</source>
          <target state="translated">Postincrement</target>
        </trans-unit>
        <trans-unit id="bf82bfcd8a75fe25a9a0c5cbb6104e08332d21e4" translate="yes" xml:space="preserve">
          <source>Postincrement &lt;i&gt;e&lt;/i&gt;&lt;code&gt;++&lt;/code&gt; and Postdecrement &lt;i&gt;e&lt;/i&gt;&lt;code&gt;--&lt;/code&gt; Operators</source>
          <target state="translated">Postincrement &lt;i&gt;e &lt;/i&gt; &lt;code&gt;++&lt;/code&gt; и Postdecrement &lt;i&gt;e &lt;/i&gt; &lt;code&gt;--&lt;/code&gt; операторы</target>
        </trans-unit>
        <trans-unit id="0df8c37cc9a164b7729795ce2b2b74064c3959ba" translate="yes" xml:space="preserve">
          <source>Pow Expressions</source>
          <target state="translated">Pow-выражения</target>
        </trans-unit>
        <trans-unit id="b53ac0458a706a39c9484ec5fec9c84db97eddcc" translate="yes" xml:space="preserve">
          <source>PowExpression</source>
          <target state="translated">PowExpression</target>
        </trans-unit>
        <trans-unit id="aa445acda25547a9330f5709468bd87dd13af4d6" translate="yes" xml:space="preserve">
          <source>Practical Example</source>
          <target state="translated">Практический пример</target>
        </trans-unit>
        <trans-unit id="3e092163716f376bb86566aa4ec6fc840c95baff" translate="yes" xml:space="preserve">
          <source>Practically &lt;code&gt;Nullable!T&lt;/code&gt; stores a &lt;code&gt;T&lt;/code&gt; and a &lt;code&gt;bool&lt;/code&gt;.</source>
          <target state="translated">Практически &lt;code&gt;Nullable!T&lt;/code&gt; хранит &lt;code&gt;T&lt;/code&gt; и &lt;code&gt;bool&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="38f93d32853eca4603a582eb7a404079e10b855d" translate="yes" xml:space="preserve">
          <source>Pragma</source>
          <target state="translated">Pragma</target>
        </trans-unit>
        <trans-unit id="4228470908b356987cf1925969b1a8dc591738f4" translate="yes" xml:space="preserve">
          <source>Pragma Name 1st arg or NULL</source>
          <target state="translated">Прагма Название 1 аргумент или NULL</target>
        </trans-unit>
        <trans-unit id="fa87f38bf7181908ef6bd8c17c24a2033e6d6d85" translate="yes" xml:space="preserve">
          <source>Pragma Statement</source>
          <target state="translated">Заявление о прагматизме</target>
        </trans-unit>
        <trans-unit id="d857c4a3cba6bb11f909b140e46311890f7f21c4" translate="yes" xml:space="preserve">
          <source>Pragmas</source>
          <target state="translated">Pragmas</target>
        </trans-unit>
        <trans-unit id="6100c56545314ca2ea6d26d66d469384e927114e" translate="yes" xml:space="preserve">
          <source>Pragmas are a way to pass special information to the compiler and to add vendor specific extensions to D. Pragmas can be used by themselves terminated with a &amp;lsquo;;&amp;rsquo;, they can influence a statement, a block of statements, a declaration, or a block of declarations.</source>
          <target state="translated">Прагмы - это способ передачи специальной информации компилятору и добавления специфических расширений к D. Прагмы могут использоваться сами по себе, заканчиваясь на &amp;laquo;;&amp;raquo;, они могут влиять на оператор, блок операторов, объявление или блок. объявлений.</target>
        </trans-unit>
        <trans-unit id="f20744406e393916e9a8767156242954d148dbd7" translate="yes" xml:space="preserve">
          <source>Pragmas can appear as either declarations,</source>
          <target state="translated">Прагмы могут выглядеть как обе декларации,</target>
        </trans-unit>
        <trans-unit id="8561ddc56be7aa47f035e75aa500fe4607b514ed" translate="yes" xml:space="preserve">
          <source>Pre and Post Contracts</source>
          <target state="translated">До-и пост-договоры</target>
        </trans-unit>
        <trans-unit id="2e4d2b399ceb179d2394b94e69e13a5a0cfc7116" translate="yes" xml:space="preserve">
          <source>Pre and post contracts can be written either in expression form (feature introduced in DMD 2.081.0), with a syntax similar to &lt;b&gt;assert&lt;/b&gt;, or as block statements containing arbitrary code.</source>
          <target state="translated">Предварительные и последующие контракты могут быть написаны либо в форме выражения (функция введена в DMD 2.081.0), с синтаксисом, похожим на &lt;b&gt;assert&lt;/b&gt; , либо в виде блочных операторов, содержащих произвольный код.</target>
        </trans-unit>
        <trans-unit id="baaef1b79330fb3733e1029bb05c865b513dfa63" translate="yes" xml:space="preserve">
          <source>Preallocate more memory than requested such that later on, when reallocation is needed (e.g. to grow an array), expansion can be done quickly in place. Reallocation to smaller sizes is also fast (in-place) when the new size requested is within the same quantum as the existing size. Code that's reallocation-heavy can therefore benefit from fronting a generic allocator with a &lt;code&gt;Quantizer&lt;/code&gt;. These advantages are present even if &lt;code&gt;ParentAllocator&lt;/code&gt; does not support reallocation at all.</source>
          <target state="translated">Предварительно выделите больше памяти, чем запрошено, так что позже, когда потребуется перераспределение (например, для увеличения массива), расширение может быть выполнено быстро на месте. Перераспределение на меньшие размеры также происходит быстро (на месте), когда запрашиваемый новый размер находится в пределах того же кванта, что и существующий размер. Поэтому для кода, требующего значительного перераспределения, может быть полезно использовать общий распределитель с помощью &lt;code&gt;Quantizer&lt;/code&gt; . Эти преимущества присутствуют, даже если &lt;code&gt;ParentAllocator&lt;/code&gt; вообще не поддерживает перераспределение.</target>
        </trans-unit>
        <trans-unit id="5b802de09c547c0729edb51e5e2e3cebfb6707e5" translate="yes" xml:space="preserve">
          <source>Preallocate nbytes more to the size of the internal buffer.</source>
          <target state="translated">Предварительно распределить нбайты больше к размеру внутреннего буфера.</target>
        </trans-unit>
        <trans-unit id="67791177460b7a42d60af39e539c1ca510749619" translate="yes" xml:space="preserve">
          <source>Precise Heap Scanning</source>
          <target state="translated">Точное сканирование кучи</target>
        </trans-unit>
        <trans-unit id="1ddcbf2bc07417bcf100ff586767615466b08676" translate="yes" xml:space="preserve">
          <source>Precise Scanning of the DATA and TLS segment</source>
          <target state="translated">Точное сканирование сегмента DATA и TLS</target>
        </trans-unit>
        <trans-unit id="825cff2fca8c64366258f1a1ce51f8e555e73a45" translate="yes" xml:space="preserve">
          <source>Precise scanning can be enabled with the D runtime option &quot;scanDataSeg&quot;. Possible option values are &quot;conservative&quot; (default) and &quot;precise&quot;. As with the GC options, it can be specified on the command line, in the environment or embedded into the executable, e.g.</source>
          <target state="translated">Точное сканирование может быть включено с помощью опции D runtime &quot;scanDataSeg&quot;.Возможные значения опции-&quot;консервативные&quot; (по умолчанию)и &quot;точные&quot;.Как и в случае с опциями GC,они могут быть указаны в командной строке,в окружении или встроены в исполняемый файл,например</target>
        </trans-unit>
        <trans-unit id="3dd4db5ce7ea626f59e720f0c27096a22aa1ecd0" translate="yes" xml:space="preserve">
          <source>Precision</source>
          <target state="translated">Precision</target>
        </trans-unit>
        <trans-unit id="ddb5cb78dc037fe6c2aeded0e6b974e03a4651fe" translate="yes" xml:space="preserve">
          <source>Precision. Its semantics depends on the argument type. For floating point numbers, precision dictates the number of decimals printed.</source>
          <target state="translated">Точность.Его семантика зависит от типа аргумента.Для чисел с плавающей точкой точность диктует количество напечатанных десятичных знаков.</target>
        </trans-unit>
        <trans-unit id="646ad9740d80073615a87f1e15d4c39112839036" translate="yes" xml:space="preserve">
          <source>Precondition</source>
          <target state="translated">Precondition</target>
        </trans-unit>
        <trans-unit id="030e7d448ce8d11254c73a2fd0da828600bdd8f4" translate="yes" xml:space="preserve">
          <source>Precondition checks (in contract).</source>
          <target state="translated">Проверка предварительного состояния (в контракте).</target>
        </trans-unit>
        <trans-unit id="eec67145e07c78272a2a8e16aa54643dd652ed96" translate="yes" xml:space="preserve">
          <source>Preconditions</source>
          <target state="translated">Preconditions</target>
        </trans-unit>
        <trans-unit id="69c23fde13319243d13a72e36ae957a78f698a9e" translate="yes" xml:space="preserve">
          <source>Predefined Formatting Macros</source>
          <target state="translated">Макросы предопределённого форматирования</target>
        </trans-unit>
        <trans-unit id="f574f2822e5c3af2cfb42d326ba7b141732bc4e6" translate="yes" xml:space="preserve">
          <source>Predefined Macros</source>
          <target state="translated">Предопределённые макросы</target>
        </trans-unit>
        <trans-unit id="ba0569b596744d1ce75b051b455ee817f31fc211" translate="yes" xml:space="preserve">
          <source>Predefined Pragmas</source>
          <target state="translated">предопределённые прагмы</target>
        </trans-unit>
        <trans-unit id="f694c553eb504db7a181a57928a8f49aff6fc3c5" translate="yes" xml:space="preserve">
          <source>Predefined Version Identifiers</source>
          <target state="translated">Предопределенные идентификаторы версий</target>
        </trans-unit>
        <trans-unit id="650eab2526d17b9e8d42a3dbc822ea4d5cc1cab0" translate="yes" xml:space="preserve">
          <source>Predefined Version Identifiers (deprecated)</source>
          <target state="translated">Предопределенные идентификаторы версий (устаревшие)</target>
        </trans-unit>
        <trans-unit id="db1fc02b034fcc8cf516995fb58bfacb21d666ee" translate="yes" xml:space="preserve">
          <source>Predefined Versions</source>
          <target state="translated">Предопределённые версии</target>
        </trans-unit>
        <trans-unit id="6d6fa6ffb57b4fc430272a48656dc44e4d33384e" translate="yes" xml:space="preserve">
          <source>Predefined how-policies for &lt;code&gt;AutoImplement&lt;/code&gt;. These templates are also used by &lt;code&gt;BlackHole&lt;/code&gt; and &lt;code&gt;WhiteHole&lt;/code&gt;, respectively.</source>
          <target state="translated">Предопределенные как-политики для &lt;code&gt;AutoImplement&lt;/code&gt; . Эти шаблоны также используются &lt;code&gt;BlackHole&lt;/code&gt; и &lt;code&gt;WhiteHole&lt;/code&gt; соответственно.</target>
        </trans-unit>
        <trans-unit id="18360332b07be143cc4f1da02b06ba76ff2987a0" translate="yes" xml:space="preserve">
          <source>Predefined macros.</source>
          <target state="translated">Предопределенные макросы.</target>
        </trans-unit>
        <trans-unit id="d210d4faef2ed863019beead1daefcae8123fa30" translate="yes" xml:space="preserve">
          <source>Predicate for determining equivalence between range elements.</source>
          <target state="translated">Предикат для определения эквивалентности между элементами диапазона.</target>
        </trans-unit>
        <trans-unit id="f19fd9d32d5055cf82846584da77887fff117d42" translate="yes" xml:space="preserve">
          <source>Predicate for determining equivalence.</source>
          <target state="translated">Предикат для определения эквивалентности.</target>
        </trans-unit>
        <trans-unit id="a93b98110ad3e2b516ed91d743153796a0e28ab9" translate="yes" xml:space="preserve">
          <source>Predicate that returns a &amp;gt; b. Correctly compares signed and unsigned integers, ie. 2U &amp;gt; -1.</source>
          <target state="translated">Предикат, который возвращает a&amp;gt; b. Правильно сравнивает целые числа со знаком и без знака, т.е. 2U&amp;gt; -1.</target>
        </trans-unit>
        <trans-unit id="2247c29ba644eef54ffa265596621906f85bd2d2" translate="yes" xml:space="preserve">
          <source>Predicate that returns a &amp;lt; b. Correctly compares signed and unsigned integers, ie. -1 &amp;lt; 2U.</source>
          <target state="translated">Предикат, который возвращает a &amp;lt;b. Правильно сравнивает целые числа со знаком и без знака, т.е. -1 &amp;lt;2U.</target>
        </trans-unit>
        <trans-unit id="26756cd5052d3a034d5614a5454264ad1e804a2e" translate="yes" xml:space="preserve">
          <source>Predicate that returns a == b. Correctly compares signed and unsigned integers, ie. !(-1 == ~0U).</source>
          <target state="translated">Предикат,возвращающий a ==b.Правильно сравнивает знаковые и неподписанные целые числа,т.е.!(-1 ==~0U).</target>
        </trans-unit>
        <trans-unit id="aec40ac3dd710bdedb7c27ab3c63cbe9f18eca0e" translate="yes" xml:space="preserve">
          <source>Predicate that reverses the order of its arguments.</source>
          <target state="translated">Предсказать,что меняет порядок аргументов.</target>
        </trans-unit>
        <trans-unit id="16636ca0b74fb2ab0a70fb6627626ffc2cf1d0e7" translate="yes" xml:space="preserve">
          <source>Predicate the given ranges are sorted by.</source>
          <target state="translated">Проредикатируйте заданные диапазоны,по которым они отсортированы.</target>
        </trans-unit>
        <trans-unit id="1a38d124cb8a3b1e47307840e450ae91589d602f" translate="yes" xml:space="preserve">
          <source>Predicate the range should be sorted by.</source>
          <target state="translated">Предсказать диапазон должен быть отсортирован.</target>
        </trans-unit>
        <trans-unit id="b2a7231686de07e79eb8b0d9844880c7ef14cedf" translate="yes" xml:space="preserve">
          <source>Predicate to determine when to stop.</source>
          <target state="translated">Предсказать,когда остановиться.</target>
        </trans-unit>
        <trans-unit id="546312872400f2b7fe55f05c3ab6277445097f85" translate="yes" xml:space="preserve">
          <source>Predicate to use for comparing needle against haystack.</source>
          <target state="translated">Предикатно использовать для сравнения иглы со стоге сена.</target>
        </trans-unit>
        <trans-unit id="70a5a11e1d7c6f98b55a8869acfad5cf195cf8e4" translate="yes" xml:space="preserve">
          <source>Predicate to use in comparing the elements of the haystack and the needle(s). Mandatory if no needles are given.</source>
          <target state="translated">Предсказать использование при сравнении элементов стога сена и иглы (игл).Обязательно использовать,если иглы не даны.</target>
        </trans-unit>
        <trans-unit id="3412ea0e9183eafcad5437bc1beda80c905fce06" translate="yes" xml:space="preserve">
          <source>Predicate used for comparison. Without a predicate specified the ordering implied by &lt;code&gt;opCmp&lt;/code&gt; is used.</source>
          <target state="translated">Предикат используется для сравнения. Без &lt;code&gt;opCmp&lt;/code&gt; предиката используется порядок, подразумеваемый opCmp .</target>
        </trans-unit>
        <trans-unit id="bb58a86d3182e26b59f94be7cbbda2124f6c452f" translate="yes" xml:space="preserve">
          <source>Predicate used to compare elements.</source>
          <target state="translated">Предикат используется для сравнения элементов.</target>
        </trans-unit>
        <trans-unit id="b0cca7e5cdbdfdcfacaf2626d35398cb9ce852dc" translate="yes" xml:space="preserve">
          <source>Prefix Sum</source>
          <target state="translated">Префикс Сумма</target>
        </trans-unit>
        <trans-unit id="4440f6ead8de15bb428fb83460c2f9fb1d3d6664" translate="yes" xml:space="preserve">
          <source>Prefix positive numbers in a signed conversion with a +. It overrides any</source>
          <target state="translated">Префиксация положительных чисел в подписанном преобразовании с помощью символа +.Он отменяет любой</target>
        </trans-unit>
        <trans-unit id="9d20134bf9ae9a5a55d77e7c52ee03334b676050" translate="yes" xml:space="preserve">
          <source>Prefix positive numbers in a signed conversion with a space.</source>
          <target state="translated">Префиксация положительных чисел в подписанном преобразовании с пробелом.</target>
        </trans-unit>
        <trans-unit id="4b62ff682f634c873eaf7673a8c2dfbc17ca9e6e" translate="yes" xml:space="preserve">
          <source>Prepare a string with as many &lt;code&gt;../&lt;/code&gt; or &lt;code&gt;..\&lt;/code&gt; as necessary to reach the common root from base path.</source>
          <target state="translated">Подготовьте строку с таким количеством &lt;code&gt;../&lt;/code&gt; или &lt;code&gt;..\&lt;/code&gt; , сколько необходимо для достижения общего корня из базового пути.</target>
        </trans-unit>
        <trans-unit id="415f781b04702ed4c2fb18fdbfc0c62c0bfdfc34" translate="yes" xml:space="preserve">
          <source>Prepare for generating obj file.</source>
          <target state="translated">Подготовьтесь к генерации объектного файла.</target>
        </trans-unit>
        <trans-unit id="2f5da103100b3440f26c60eb3e05807f62717d70" translate="yes" xml:space="preserve">
          <source>Prepared Statement Status</source>
          <target state="translated">Статус готового заявления</target>
        </trans-unit>
        <trans-unit id="8a00f68e210aed91d87587585896acbb4f68a3e9" translate="yes" xml:space="preserve">
          <source>Prepend integer item to list.</source>
          <target state="translated">Подготовьте целочисленный элемент к списку.</target>
        </trans-unit>
        <trans-unit id="2bc658c404b7b5169d7e796d80f53ca674f8dbcd" translate="yes" xml:space="preserve">
          <source>Prepend ptr to *plist.</source>
          <target state="translated">Подготовьте птр к *сплисту.</target>
        </trans-unit>
        <trans-unit id="a7e0dfaf80613ad95f56924d0ddc7d620003b7ee" translate="yes" xml:space="preserve">
          <source>Preserve the relative ordering of elements to the largest extent allowed by the algorithm's requirements.</source>
          <target state="translated">Сохранять относительную упорядоченность элементов в наибольшей степени,допускаемой требованиями алгоритма.</target>
        </trans-unit>
        <trans-unit id="7d7712a544e0581dd899ab39e86edb57d9684fe7" translate="yes" xml:space="preserve">
          <source>PreserveAttributes &lt;code&gt;preserve&lt;/code&gt;</source>
          <target state="translated">PreserveAttributes &lt;code&gt;preserve&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2f9b1f72e64b514a1faab078b4c60a83aa1be354" translate="yes" xml:space="preserve">
          <source>PreserveAttributes &lt;strong id=&quot;preserveAttributesDefault&quot;&gt;preserveAttributesDefault&lt;/strong&gt;;</source>
          <target state="translated">PreserveAttributes &lt;strong id=&quot;preserveAttributesDefault&quot;&gt;preserveAttributesDefault&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="3625fc12c04fb48d484d9798778432e4646c44a6" translate="yes" xml:space="preserve">
          <source>Pretty advanced function for building multi-part formposts. Each invoke adds one part that together construct a full post. Then use CURLOPT_HTTPPOST to send it off to libcurl.</source>
          <target state="translated">Довольно продвинутая функция для создания многокомпонентных формпостов.Каждый вызов добавляет одну часть,которая вместе строит полный пост.Затем используйте CURLOPT_HTTPPOST,чтобы отправить его на libcurl.</target>
        </trans-unit>
        <trans-unit id="7c6267ddd51b4b8a86f5124efee427639efeca08" translate="yes" xml:space="preserve">
          <source>Pretty print a module.</source>
          <target state="translated">Симпатичная печать модуля.</target>
        </trans-unit>
        <trans-unit id="000bfc178c61f018242fa09e44055036aac73316" translate="yes" xml:space="preserve">
          <source>Pretty print function parameter.</source>
          <target state="translated">Симпатичный параметр функции печати.</target>
        </trans-unit>
        <trans-unit id="446abdf27012e485e2e624c0190dfffb42d444b3" translate="yes" xml:space="preserve">
          <source>Pretty print function parameters.</source>
          <target state="translated">Симпатичные параметры функции печати.</target>
        </trans-unit>
        <trans-unit id="adf658a27711e59b6f616cbc30d0286f5d85f134" translate="yes" xml:space="preserve">
          <source>Pretty printed module as string.</source>
          <target state="translated">Симпатичный распечатанный модуль в виде строки.</target>
        </trans-unit>
        <trans-unit id="bbe02dc8d90c522cd731d7f77d7a60e956659ce7" translate="yes" xml:space="preserve">
          <source>Previous versions of &lt;code&gt;XorshiftEngine&lt;/code&gt; did not provide any mechanism to specify the directions of the shifts, taking each shift as an unsigned magnitude. For backwards compatibility, because three shifts in the same direction cannot result in a full-period XorshiftEngine, when all three of &lt;code&gt;sa&lt;/code&gt;, &lt;code&gt;sb&lt;/code&gt;, &lt;code&gt;sc, are positive &lt;/code&gt;XorshiftEngine` treats them as unsigned magnitudes and uses shift directions to match the old behavior of &lt;code&gt;XorshiftEngine&lt;/code&gt;.  Not every set of shifts results in a full-period xorshift generator. The template does not currently at compile-time perform a full check for maximum period but in a future version might reject parameters resulting in shorter periods.</source>
          <target state="translated">В предыдущих версиях &lt;code&gt;XorshiftEngine&lt;/code&gt; не было никакого механизма для определения направлений сдвигов, принимая каждую смену за величину без знака. Для обратной совместимости, поскольку три сдвига в одном направлении не могут привести к полному периоду XorshiftEngine, когда все три из &lt;code&gt;sa&lt;/code&gt; , &lt;code&gt;sb&lt;/code&gt; , &lt;code&gt;sc, are positive &lt;/code&gt; XorshiftEngine` рассматривает их как величины без знака и использует направления сдвига, чтобы соответствовать старому поведению &lt;code&gt;XorshiftEngine&lt;/code&gt; , Не каждый набор сдвигов приводит к полнопериодному генератору ксоршифтов. В настоящее время шаблон во время компиляции не выполняет полную проверку максимального периода, но в будущей версии могут быть отклонены параметры, что приведет к более коротким периодам.</target>
        </trans-unit>
        <trans-unit id="3499b7593c8190fb7c47376aee73c9e820543602" translate="yes" xml:space="preserve">
          <source>Primary &lt;strong id=&quot;primary&quot;&gt;primary&lt;/strong&gt;;</source>
          <target state="translated">Первичный &lt;strong id=&quot;primary&quot;&gt;первичный&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="b3a2f356577f35c5a2c27fdf8b798609c666a3cb" translate="yes" xml:space="preserve">
          <source>Primary Expressions</source>
          <target state="translated">Основные выражения</target>
        </trans-unit>
        <trans-unit id="4e8f8df8afc826ac060bfb0d62e551d0ff99da1a" translate="yes" xml:space="preserve">
          <source>PrimaryAllocator</source>
          <target state="translated">PrimaryAllocator</target>
        </trans-unit>
        <trans-unit id="d857a8da372b74a1cc781b95e1edf9b095a2c086" translate="yes" xml:space="preserve">
          <source>Primitive flow analysis for constructors</source>
          <target state="translated">Примитивный анализ потока для конструкторов</target>
        </trans-unit>
        <trans-unit id="e444e1937adba3a1cfd5d90963ca115ff04f5ee0" translate="yes" xml:space="preserve">
          <source>Print AST data structure in a nice format.</source>
          <target state="translated">Печать структуры данных AST в красивом формате.</target>
        </trans-unit>
        <trans-unit id="52d58b69adddcbb01a0d9fb00892b30fc79f820b" translate="yes" xml:space="preserve">
          <source>Print DMD's logo with more debug information and error-reporting pointers.</source>
          <target state="translated">Распечатайте логотип DMD с дополнительной отладочной информацией и указателями на ошибки.</target>
        </trans-unit>
        <trans-unit id="741a8cf16a2a94a93e81f8799e908f88729eaa78" translate="yes" xml:space="preserve">
          <source>Print a deprecation message, may increase the global warning or error count depending on whether deprecations are ignored.</source>
          <target state="translated">Распечатка сообщения об утрате прав может увеличить количество глобальных предупреждений или ошибок в зависимости от того,игнорируются ли утраты прав.</target>
        </trans-unit>
        <trans-unit id="781d287d963aa57ac1be0813cd2b7893ed3e2f42" translate="yes" xml:space="preserve">
          <source>Print a tip message with the prefix and highlighting.</source>
          <target state="translated">Печать сообщения с префиксом и подсветкой.</target>
        </trans-unit>
        <trans-unit id="5c7e6858b23f26e525078100ff725440333b762c" translate="yes" xml:space="preserve">
          <source>Print a verbose message. Doesn't prefix or highlight messages.</source>
          <target state="translated">Распечатайте многословное сообщение.Не префикс и не выделение сообщений.</target>
        </trans-unit>
        <trans-unit id="939daf2f0bcc7e74350bd013cf922548480474bd" translate="yes" xml:space="preserve">
          <source>Print a warning message, increasing the global warning count.</source>
          <target state="translated">Распечатать предупредительное сообщение,увеличив глобальное количество предупреждений.</target>
        </trans-unit>
        <trans-unit id="a5099c933532cca0e3d4637739e21ce65a47b1f3" translate="yes" xml:space="preserve">
          <source>Print additional details about a deprecation message. Doesn't increase the error count, or print an additional deprecation prefix.</source>
          <target state="translated">Распечатайте дополнительные сведения о сообщении об удалении.Не увеличивает количество ошибок и не печатает дополнительный префикс удаления.</target>
        </trans-unit>
        <trans-unit id="0133338c129646ea634be83fd6cd4d3657feeeb0" translate="yes" xml:space="preserve">
          <source>Print additional details about a warning message. Doesn't increase the warning count or print an additional warning prefix.</source>
          <target state="translated">Печать дополнительных сведений о предупредительном сообщении.Не увеличивает количество предупреждений и не печатает дополнительный префикс предупреждения.</target>
        </trans-unit>
        <trans-unit id="33c24f38922d7036946f23bec89d0ce87ce561bc" translate="yes" xml:space="preserve">
          <source>Print additional details about an error message. Doesn't increase the error count or print an additional error prefix.</source>
          <target state="translated">Распечатайте дополнительные сведения об ошибке.Не увеличивает количество ошибок и не печатает дополнительный префикс ошибки.</target>
        </trans-unit>
        <trans-unit id="058c115cad6e2e81008fb7ad2950801f7eec7c85" translate="yes" xml:space="preserve">
          <source>Print an error message, increasing the global error count.</source>
          <target state="translated">Распечатайте сообщение об ошибке,увеличивая общее количество ошибок.</target>
        </trans-unit>
        <trans-unit id="32c85c57b0adc1c6b315e954d6c08dd2ae33e959" translate="yes" xml:space="preserve">
          <source>Print error message about invalid array operation.</source>
          <target state="translated">Сообщение об ошибке печати о неправильной работе с массивом.</target>
        </trans-unit>
        <trans-unit id="2134fe32d9505f6bba77dbd00ce388244749ad04" translate="yes" xml:space="preserve">
          <source>Print out debugging information.</source>
          <target state="translated">Распечатайте отладочную информацию.</target>
        </trans-unit>
        <trans-unit id="8057a71a3d3cdf62ae7ce1600345941a68ef4657" translate="yes" xml:space="preserve">
          <source>Printf Style Logging</source>
          <target state="translated">Заготовка леса в стиле Printf</target>
        </trans-unit>
        <trans-unit id="a4ad095c527676644a2ddd8b5dfe7833cc2fa256" translate="yes" xml:space="preserve">
          <source>Prints message(s) if there are errors.</source>
          <target state="translated">Печатает сообщение(и),если есть ошибки.</target>
        </trans-unit>
        <trans-unit id="53bea7b855c92761fc53db7e7e657329722ff553" translate="yes" xml:space="preserve">
          <source>Prints:</source>
          <target state="translated">Prints:</target>
        </trans-unit>
        <trans-unit id="200585a082f7fe89384cf8d9108f15dc9692123d" translate="yes" xml:space="preserve">
          <source>Private Use Area</source>
          <target state="translated">Зона частного пользования</target>
        </trans-unit>
        <trans-unit id="e67d49b8486a78488c9fa13a7655377f61af5ded" translate="yes" xml:space="preserve">
          <source>Private_Use</source>
          <target state="translated">Private_Use</target>
        </trans-unit>
        <trans-unit id="0588b71974aef4ab5b2e1fdf75767f0460174967" translate="yes" xml:space="preserve">
          <source>Process handling</source>
          <target state="translated">обработка процесса</target>
        </trans-unit>
        <trans-unit id="81e395fd50ec55eed1a5348cc557a1f4263ca816" translate="yes" xml:space="preserve">
          <source>Processing of command line options.</source>
          <target state="translated">Обработка опций командной строки.</target>
        </trans-unit>
        <trans-unit id="79ead62511e5ad3925246bd4a8ac726a0bf71b22" translate="yes" xml:space="preserve">
          <source>ProcessingInstruction &lt;code&gt;item&lt;/code&gt;</source>
          <target state="translated">ProcessingInstruction &lt;code&gt;item&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e2f47028d237ad837b8d24f2b1944ca76172bb96" translate="yes" xml:space="preserve">
          <source>ProcessingInstruction[] &lt;strong id=&quot;pis&quot;&gt;pis&lt;/strong&gt;;</source>
          <target state="translated">ProcessingInstruction [] &lt;strong id=&quot;pis&quot;&gt;pis&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="c489df222ae40007dc782a56c157e5129ac37a34" translate="yes" xml:space="preserve">
          <source>Processor type (vendor-dependent). This should be visible ONLY for display purposes.</source>
          <target state="translated">Тип процессора (зависит от поставщика).Он должен быть виден ТОЛЬКО для отображения.</target>
        </trans-unit>
        <trans-unit id="1eed910bf79a6d98b77187f35780c01e434b332a" translate="yes" xml:space="preserve">
          <source>Produce a grayscale image of the &lt;a href=&quot;https://en.wikipedia.org/wiki/Mandelbrot_set&quot;&gt;Mandelbrot set&lt;/a&gt; in binary &lt;a href=&quot;https://en.wikipedia.org/wiki/Netpbm_format&quot;&gt;Netpbm format&lt;/a&gt; to standard output.</source>
          <target state="translated">Создайте в градациях серого изображение &lt;a href=&quot;https://en.wikipedia.org/wiki/Mandelbrot_set&quot;&gt;набора Мандельброта&lt;/a&gt; в двоичном &lt;a href=&quot;https://en.wikipedia.org/wiki/Netpbm_format&quot;&gt;формате Netpbm&lt;/a&gt; для стандартного вывода.</target>
        </trans-unit>
        <trans-unit id="3862ac3aed81b0f225a849a90d5cc5f40be9aa3c" translate="yes" xml:space="preserve">
          <source>Produce elem which increments the usage count for a particular line. Sets corresponding bit in bitmap &lt;code&gt;m.covb[linnum]&lt;/code&gt;. Used to implement -cov switch (coverage analysis).</source>
          <target state="translated">Создайте элемент, который увеличивает счетчик использования для конкретной строки. Устанавливает соответствующий бит в битовой карте &lt;code&gt;m.covb[linnum]&lt;/code&gt; . Используется для реализации ключа -cov (анализ покрытия).</target>
        </trans-unit>
        <trans-unit id="2ee701351b350f0300426cd783822031fe44f5fb" translate="yes" xml:space="preserve">
          <source>Programmers accustomed to explicitly managing memory allocation and deallocation will likely be skeptical of the benefits and efficacy of garbage collection. Experience both with new projects written with garbage collection in mind, and converting existing projects to garbage collection shows that:</source>
          <target state="translated">Программисты,привыкшие явно управлять распределением памяти и раздачей,скорее всего,будут скептически относиться к преимуществам и эффективности сбора мусора.Опыт работы как с новыми проектами,написанными с учетом сбора мусора,так и с преобразованием существующих проектов в сборщики мусора показывает это:</target>
        </trans-unit>
        <trans-unit id="bc6c88db2f0703a9e2461a4a8060ccf1cb881998" translate="yes" xml:space="preserve">
          <source>Properties</source>
          <target state="translated">Properties</target>
        </trans-unit>
        <trans-unit id="dd387eddd2291f436a15934f732eb070c13f983c" translate="yes" xml:space="preserve">
          <source>Properties are functions that can be syntactically treated as if they were fields or variables. Properties can be read from or written to. A property is read by calling a method or function with no arguments; a property is written by calling a method or function with its argument being the value it is set to.</source>
          <target state="translated">Свойства-это функции,которые можно синтаксически трактовать как поля или переменные.Свойства можно читать из или записывать в.Свойство читается путем вызова метода или функции без аргументов;свойство записывается путем вызова метода или функции,аргументом которой является значение,которому оно установлено.</target>
        </trans-unit>
        <trans-unit id="6d46d3190705bb371f9868ed9bf90c5d4d753b97" translate="yes" xml:space="preserve">
          <source>Properties for All Types</source>
          <target state="translated">Свойства для всех типов</target>
        </trans-unit>
        <trans-unit id="272b8921ce7d353cb8f3cf4775d9f488ee2f569c" translate="yes" xml:space="preserve">
          <source>Properties for Class Types</source>
          <target state="translated">Свойства для типов класса</target>
        </trans-unit>
        <trans-unit id="895079fe34a3fbf080ac0e62bf915acb42b2bc99" translate="yes" xml:space="preserve">
          <source>Properties for Floating Point Types</source>
          <target state="translated">Свойства для типов с плавающей точкой</target>
        </trans-unit>
        <trans-unit id="fc0bfcb689361cebbe86638a9e8cd2b0d58550ef" translate="yes" xml:space="preserve">
          <source>Properties for Integral Types</source>
          <target state="translated">Свойства для интегральных типов</target>
        </trans-unit>
        <trans-unit id="7c12bf8aa65674a95589ff691b3585505400d756" translate="yes" xml:space="preserve">
          <source>Properties for associative arrays are:</source>
          <target state="translated">Свойствами для ассоциативных массивов являются:</target>
        </trans-unit>
        <trans-unit id="ebb627686689409a93bdc19fa3a749dd5b3039f5" translate="yes" xml:space="preserve">
          <source>Properties for getting (and possibly setting) the approximate maximum length of a shared freelist.</source>
          <target state="translated">Свойства для получения (и возможной установки)приблизительной максимальной длины общего фрилиста.</target>
        </trans-unit>
        <trans-unit id="d8ca5bf11ef59c3e8e3df9efe7fd4dd627f9d892" translate="yes" xml:space="preserve">
          <source>Properties for getting (and possibly setting) the bounds. Setting bounds is allowed only once , and before any allocation takes place. Otherwise, the primitives have the same semantics as those of &lt;code&gt;FreeList&lt;/code&gt;.</source>
          <target state="translated">Свойства для получения (и, возможно, установки) границ. Установка границ допускается только один раз и до любого выделения. В противном случае примитивы имеют ту же семантику, что и &lt;code&gt;FreeList&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2b393346b666625fd355fd7149a1980f7d9e6881" translate="yes" xml:space="preserve">
          <source>Property Examples</source>
          <target state="translated">Примеры недвижимости</target>
        </trans-unit>
        <trans-unit id="14fa0a936b7797ccd49640d8abe1784758e3862e" translate="yes" xml:space="preserve">
          <source>Property Functions</source>
          <target state="translated">Функции собственности</target>
        </trans-unit>
        <trans-unit id="5dbcb2d0cc6ae723ca2eccf347d83251ccd8b303" translate="yes" xml:space="preserve">
          <source>Property returning &lt;code&gt;true&lt;/code&gt; if and only if the array has no elements.</source>
          <target state="translated">Свойство, возвращающее &lt;code&gt;true&lt;/code&gt; тогда и только тогда, когда массив не имеет элементов.</target>
        </trans-unit>
        <trans-unit id="065210cf38be02dc39be511bd0b3551ba9de6228" translate="yes" xml:space="preserve">
          <source>Property returning &lt;code&gt;true&lt;/code&gt; if and only if the container has no elements.</source>
          <target state="translated">Свойство возвращает &lt;code&gt;true&lt;/code&gt; тогда и только тогда, когда контейнер не имеет элементов.</target>
        </trans-unit>
        <trans-unit id="40a7205dce63e4d8a540ba5fc2d7d36f2cc7edd8" translate="yes" xml:space="preserve">
          <source>Property that indicates if this is a valid, alive socket.</source>
          <target state="translated">Свойство,указывающее,является ли это действительным,живым гнездом.</target>
        </trans-unit>
        <trans-unit id="aafe895a0026094ff428b9d225a89af65181ecb4" translate="yes" xml:space="preserve">
          <source>Prot &lt;code&gt;protection&lt;/code&gt;</source>
          <target state="translated">Прот &lt;code&gt;protection&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1ed77c3f7ffc41a33eadccef5727dc7c97079235" translate="yes" xml:space="preserve">
          <source>Protocol</source>
          <target state="translated">Protocol</target>
        </trans-unit>
        <trans-unit id="07c6a3380801fe033fe48fab273c8c480f2ce675" translate="yes" xml:space="preserve">
          <source>ProtocolType &lt;strong id=&quot;protocol&quot;&gt;protocol&lt;/strong&gt;;</source>
          <target state="translated">ProtocolType &lt;strong id=&quot;protocol&quot;&gt;протокол&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="1acbf21228a87baaefe83afa17793b9744907136" translate="yes" xml:space="preserve">
          <source>ProtocolType &lt;strong id=&quot;type&quot;&gt;type&lt;/strong&gt;;</source>
          <target state="translated">ProtocolType &lt;strong id=&quot;type&quot;&gt;type&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="7c56749d7bcd9cdca2934b133e033e63522d618f" translate="yes" xml:space="preserve">
          <source>Provide a CURLShare for mutexing non-ts data</source>
          <target state="translated">Предоставьте CURLShare для мутирования нестандартных данных.</target>
        </trans-unit>
        <trans-unit id="1929edddaabf41eee663a24b280cada674c28d3e" translate="yes" xml:space="preserve">
          <source>Provide a human readable representation</source>
          <target state="translated">Обеспечить удобочитаемое представление</target>
        </trans-unit>
        <trans-unit id="e164562de1900a7450845d929e5ec99bafad7e86" translate="yes" xml:space="preserve">
          <source>Provide out-of-band access to the original C argc/argv passed to this program via main(argc,argv).</source>
          <target state="translated">Предоставить внеполосный доступ к исходному Си аргументу/аргву,переданному этой программе через main(argc,argv).</target>
        </trans-unit>
        <trans-unit id="b0d43391e49e267e8e9c3011757825bb2e5aba5c" translate="yes" xml:space="preserve">
          <source>Provide the .dup array property.</source>
          <target state="translated">Предоставьте свойство .dup array.</target>
        </trans-unit>
        <trans-unit id="884cd93143fb3cc6d0b5ce44736f5e3b20a102a8" translate="yes" xml:space="preserve">
          <source>Provide the .idup array property.</source>
          <target state="translated">Предоставьте свойство массива .idup.</target>
        </trans-unit>
        <trans-unit id="f41856ba90560f011a0a6b5a85e291fe656f3fca" translate="yes" xml:space="preserve">
          <source>Provided Logger</source>
          <target state="translated">Предоставленный журнал</target>
        </trans-unit>
        <trans-unit id="e1a88ee373473fd057a8492c11452ee411c1a4f5" translate="yes" xml:space="preserve">
          <source>Provided for de-allocation in the same translation unit that did the allocation. Added in libcurl 7.10</source>
          <target state="translated">Предусматривает перераспределение ассигнований в том же подразделении письменного перевода,которое их выделило.Добавлено в libcurl 7.10</target>
        </trans-unit>
        <trans-unit id="1f2030ef991f6e1b4bbd9b294ac641d24cefdf25" translate="yes" xml:space="preserve">
          <source>Provides a list of all threads currently being tracked by the system. Note that threads in the returned array might no longer run (see &lt;code&gt;Thread.&lt;/code&gt;&lt;a href=&quot;#isRunning&quot;&gt;&lt;code&gt;isRunning&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">Предоставляет список всех потоков, отслеживаемых в данный момент системой. Обратите внимание, что потоки в возвращенном массиве могут больше не работать (см. &lt;code&gt;Thread.&lt;/code&gt; &lt;a href=&quot;#isRunning&quot;&gt; &lt;code&gt;isRunning&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="4c7af553837fa20372e82bd10fd1fbdacc0fefe6" translate="yes" xml:space="preserve">
          <source>Provides a new scope with &lt;code&gt;STC.deprecated_&lt;/code&gt; and &lt;code&gt;Scope.depdecl&lt;/code&gt; set</source>
          <target state="translated">Предоставляет новую область с &lt;code&gt;STC.deprecated_&lt;/code&gt; и &lt;code&gt;Scope.depdecl&lt;/code&gt; набор</target>
        </trans-unit>
        <trans-unit id="8bf9f03cd2cf31405fbc05f388ba616c27769697" translate="yes" xml:space="preserve">
          <source>Provides a reference to the calling fiber or null if no fiber is currently active.</source>
          <target state="translated">Предоставляет ссылку на вызывающее волокно или ноль,если волокно в данный момент не активно.</target>
        </trans-unit>
        <trans-unit id="23bb9371df7b9c17559203a212a9ba678642eb9a" translate="yes" xml:space="preserve">
          <source>Provides a reference to the calling thread.</source>
          <target state="translated">Предоставляет ссылку на вызывающий поток.</target>
        </trans-unit>
        <trans-unit id="ee41bee9bb183a410298e4abe02e56b8aa459d71" translate="yes" xml:space="preserve">
          <source>Provides an explanation for and corrective action to take if the associated declaration is marked as deprecated.</source>
          <target state="translated">Предоставляет объяснение и корректирующие меры,которые необходимо принять в случае,если связанная с этим декларация отмечена как &quot;устаревшая&quot;.</target>
        </trans-unit>
        <trans-unit id="7acadd30bb0f6451e04d1ebd324866714956a1be" translate="yes" xml:space="preserve">
          <source>Provides convenient access to date and time representations.</source>
          <target state="translated">Обеспечивает удобный доступ к представлению даты и времени.</target>
        </trans-unit>
        <trans-unit id="2e43a7b7c99235aea804390e292b91087037668d" translate="yes" xml:space="preserve">
          <source>Provides indexed access into the container. The index type is container-defined. A container may define several index types (and consequently overloaded indexing).</source>
          <target state="translated">Обеспечивает индексированный доступ в контейнер.Тип индекса определяется контейнером.Контейнер может определять несколько типов индексов (и,соответственно,перегруженную индексацию).</target>
        </trans-unit>
        <trans-unit id="6421abde57ae539842411bf094700ed30d80091f" translate="yes" xml:space="preserve">
          <source>Provides protocol-independent parsing of network addresses. Does not attempt name resolution. Uses &lt;code&gt;getAddressInfo&lt;/code&gt; with &lt;code&gt;AddressInfoFlags.NUMERICHOST&lt;/code&gt; if the current system supports it, and &lt;code&gt;InternetAddress&lt;/code&gt; otherwise.</source>
          <target state="translated">Обеспечивает независимый от протокола анализ сетевых адресов. Не пытается разрешить имя. Использует &lt;code&gt;getAddressInfo&lt;/code&gt; с &lt;code&gt;AddressInfoFlags.NUMERICHOST&lt;/code&gt; , если текущая система поддерживает его, и &lt;code&gt;InternetAddress&lt;/code&gt; в противном случае.</target>
        </trans-unit>
        <trans-unit id="31663ee024ce588c5fc30aa3c89a97bcb8794f25" translate="yes" xml:space="preserve">
          <source>Provides protocol-independent translation from host names to socket addresses. If advanced functionality is not required, consider using &lt;code&gt;getAddress&lt;/code&gt; for compatibility with older systems.</source>
          <target state="translated">Обеспечивает независимый от протокола перевод имен хостов в адреса сокетов. Если расширенная функциональность не требуется, рассмотрите возможность использования &lt;code&gt;getAddress&lt;/code&gt; для совместимости со старыми системами.</target>
        </trans-unit>
        <trans-unit id="35232085e7ae211b046c3d788222344964d18067" translate="yes" xml:space="preserve">
          <source>Provides protocol-independent translation from host names to socket addresses. Uses &lt;code&gt;getAddressInfo&lt;/code&gt; if the current system supports it, and &lt;code&gt;InternetHost&lt;/code&gt; otherwise.</source>
          <target state="translated">Обеспечивает независимый от протокола перевод имен хостов в адреса сокетов. Использует &lt;code&gt;getAddressInfo&lt;/code&gt; , если текущая система поддерживает его, и &lt;code&gt;InternetHost&lt;/code&gt; в противном случае.</target>
        </trans-unit>
        <trans-unit id="a49a0184f0557159ebb6d84a10307308b1e09f15" translate="yes" xml:space="preserve">
          <source>Provides the conversions between the IANA time zone database time zone names (which POSIX systems use) and the time zone names that Windows uses.</source>
          <target state="translated">Обеспечивает преобразование имен часовых поясов базы данных IANA (которые используются в системах POSIX)в имена часовых поясов,используемые Windows.</target>
        </trans-unit>
        <trans-unit id="c0979b8d4efc2e480740645f6f1ca0dee4fd8c8b" translate="yes" xml:space="preserve">
          <source>Providing a sub-name narrows down the list of time zones (which can number in the thousands). For example, passing in &quot;America&quot; as the sub-name returns only the time zones which begin with &quot;America&quot;.</source>
          <target state="translated">Предоставление подзаголовка сужает список часовых поясов (которые могут исчисляться тысячами).Например,передача в качестве подзаголовка &quot;Америка&quot; возвращает только те часовые пояса,которые начинаются с &quot;Америка&quot;.</target>
        </trans-unit>
        <trans-unit id="9db0b745b6fa2951c35528cc5a431b74d851a2e8" translate="yes" xml:space="preserve">
          <source>Proxies</source>
          <target state="translated">Proxies</target>
        </trans-unit>
        <trans-unit id="d1cea344353e26ba6f1565ed661d94f610ce9e4f" translate="yes" xml:space="preserve">
          <source>Proxy</source>
          <target state="translated">Proxy</target>
        </trans-unit>
        <trans-unit id="b9644c1f78e0b772779a500097a7b6c2cd225a38" translate="yes" xml:space="preserve">
          <source>Proxy port</source>
          <target state="translated">Прокси-порт</target>
        </trans-unit>
        <trans-unit id="8ee0476a1b3f68f2a8b1652de253e3231c5a30a9" translate="yes" xml:space="preserve">
          <source>Proxy type</source>
          <target state="translated">Тип прокси</target>
        </trans-unit>
        <trans-unit id="b269c29253f44a590c2375615bb821fb27b24ed8" translate="yes" xml:space="preserve">
          <source>Pruning and Filling</source>
          <target state="translated">Обрезка и заправка</target>
        </trans-unit>
        <trans-unit id="7e4b062c9df92c18899e0d640bf2c977c25ac1c4" translate="yes" xml:space="preserve">
          <source>Ps</source>
          <target state="translated">Ps</target>
        </trans-unit>
        <trans-unit id="bfec143c19b8a7da8ef2986bfdff976c6539b3dc" translate="yes" xml:space="preserve">
          <source>Pseudo-Random Number Generator</source>
          <target state="translated">Генератор псевдослучайных чисел</target>
        </trans-unit>
        <trans-unit id="2275514eead6bd6a3b3aecc0fd0641f0d282d668" translate="yes" xml:space="preserve">
          <source>Pseudo-random number generators.</source>
          <target state="translated">Генераторы псевдослучайных чисел.</target>
        </trans-unit>
        <trans-unit id="1d68a19c2870443aa0522030150bb71ec07a7c22" translate="yes" xml:space="preserve">
          <source>Public API enums for RTSP requests</source>
          <target state="translated">Публичные перечисления API для запросов RTSP</target>
        </trans-unit>
        <trans-unit id="c0ddaff13e39f258c8525deac888ae91ddab69de" translate="yes" xml:space="preserve">
          <source>Public Imports</source>
          <target state="translated">Общественный Импорт</target>
        </trans-unit>
        <trans-unit id="3bc0e9d0786bebb377ec905ced131e92536f610b" translate="yes" xml:space="preserve">
          <source>Public or exported non-static member functions cannot be called from within an invariant.</source>
          <target state="translated">Публичные или экспортируемые нестатические функции членов не могут быть вызваны из инварианта.</target>
        </trans-unit>
        <trans-unit id="68fc7bd4bc44e3818645b5f17ee1089ffb95b680" translate="yes" xml:space="preserve">
          <source>Punctuation</source>
          <target state="translated">Punctuation</target>
        </trans-unit>
        <trans-unit id="531399b1b6f34aa45ee64387cb3aca5b2ccb7f93" translate="yes" xml:space="preserve">
          <source>Punctuation Escapes</source>
          <target state="translated">Пейзажи пунктуации</target>
        </trans-unit>
        <trans-unit id="ea63ccb580688f825b1a702a02a1126819fcc769" translate="yes" xml:space="preserve">
          <source>Pure Functions</source>
          <target state="translated">Чистые функции</target>
        </trans-unit>
        <trans-unit id="315b76c64c484cf690522b3a45fd3980c19e88bf" translate="yes" xml:space="preserve">
          <source>Pure destructors do not benefit of special elision.</source>
          <target state="translated">Чистые деструкторы не выигрывают от особого эликсирования.</target>
        </trans-unit>
        <trans-unit id="6dfc0292d2db1992a61938a7d5118720b35feada" translate="yes" xml:space="preserve">
          <source>Pure functions are functions that cannot directly access global or static mutable state. &lt;code&gt;pure&lt;/code&gt; guarantees that a pure function call won't access or modify any implicit state in the program.</source>
          <target state="translated">Чистые функции - это функции, которые не могут напрямую обращаться к глобальному или статическому изменяемому состоянию. &lt;code&gt;pure&lt;/code&gt; гарантирует, что чистый вызов функции не будет обращаться или изменять какое-либо неявное состояние в программе.</target>
        </trans-unit>
        <trans-unit id="117c6cb152c7552d6af480d72545b235ac1e0db2" translate="yes" xml:space="preserve">
          <source>Pure real FFTs are automatically detected and the relevant optimizations are performed.</source>
          <target state="translated">Чисто-реальные БПФ автоматически определяются и выполняются соответствующие оптимизации.</target>
        </trans-unit>
        <trans-unit id="dc905a4c2483255a5cc6406f4bafbb5f6c6e5b25" translate="yes" xml:space="preserve">
          <source>Pure variants of C's memory allocation functions &lt;code&gt;malloc&lt;/code&gt;, &lt;code&gt;calloc&lt;/code&gt;, and &lt;code&gt;realloc&lt;/code&gt; and deallocation function &lt;code&gt;free&lt;/code&gt;.</source>
          <target state="translated">Чистые варианты функций выделения памяти в C: &lt;code&gt;malloc&lt;/code&gt; , &lt;code&gt;calloc&lt;/code&gt; , &lt;code&gt;realloc&lt;/code&gt; и освобождают функцию &lt;code&gt;free&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5338b2491e024cedccb4669dda5e88c429cbc759" translate="yes" xml:space="preserve">
          <source>Push this onto stack of chained exceptions.</source>
          <target state="translated">Засуньте это в стопку прикованных исключений.</target>
        </trans-unit>
        <trans-unit id="6c8ff93bbe2e1f6cd06cf16810831791e43f1aba" translate="yes" xml:space="preserve">
          <source>Pushes an array of elements at once. It is more efficient to push as much data as possible in a single call. On platforms that do not support unaligned reads (MIPS or old ARM chips), the compiler may produce slower code to ensure correctness.</source>
          <target state="translated">Толкает массив элементов сразу.Более эффективно проталкивать как можно больше данных за один вызов.На платформах,не поддерживающих выравнивание чтения (MIPS или старые ARM-чипы),компилятор может выдавать более медленный код для обеспечения корректности.</target>
        </trans-unit>
        <trans-unit id="f02cd2c1d42500d205a7a9f6e31677df9e57402e" translate="yes" xml:space="preserve">
          <source>Put a &lt;code&gt;Task&lt;/code&gt; object on the back of the task queue. The &lt;code&gt;Task&lt;/code&gt; object may be passed by pointer or reference.</source>
          <target state="translated">Поместите &lt;code&gt;Task&lt;/code&gt; объект на задней часть очереди задач. Объект &lt;code&gt;Task&lt;/code&gt; может передаваться указателем или ссылкой.</target>
        </trans-unit>
        <trans-unit id="8aff8881ff753eff33815e662bf18604194c6243" translate="yes" xml:space="preserve">
          <source>Put remainder bytes. This must be called only once after &lt;code&gt;putElement&lt;/code&gt; and before &lt;code&gt;finalize&lt;/code&gt;.</source>
          <target state="translated">Положите оставшиеся байты. Это должно быть &lt;code&gt;putElement&lt;/code&gt; только один раз после putElement и перед &lt;code&gt;finalize&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7c24540773c24c1085b8ed53542711eb6b9d88cc" translate="yes" xml:space="preserve">
          <source>Puts the formatting result into a preallocated array.</source>
          <target state="translated">Выводит результат форматирования в предварительно выделенный массив.</target>
        </trans-unit>
        <trans-unit id="c3156e00d3c2588c639e0d3cf6821258b05761c7" translate="yes" xml:space="preserve">
          <source>Q</source>
          <target state="translated">Q</target>
        </trans-unit>
        <trans-unit id="fbeba94c4e9b16a43991c5615fab8c4406d33231" translate="yes" xml:space="preserve">
          <source>Qt</source>
          <target state="translated">Qt</target>
        </trans-unit>
        <trans-unit id="e1acf66aec4ab7e4378cf35aa85b3c0a8f0caa32" translate="yes" xml:space="preserve">
          <source>Qualifier Groups</source>
          <target state="translated">Группы классификаторов</target>
        </trans-unit>
        <trans-unit id="e3dc7b91ec0fe4c470a2d5bf2412ad40efa0845e" translate="yes" xml:space="preserve">
          <source>Qualifying an entire struct as &lt;code&gt;shared&lt;/code&gt; correctly propagates the attribute to the generated postblits:</source>
          <target state="translated">Квалификация всей структуры как &lt;code&gt;shared&lt;/code&gt; правильно распространяет атрибут в сгенерированные постблиты:</target>
        </trans-unit>
        <trans-unit id="6078532ab203b30b0c8e32bb799fd87d65f55236" translate="yes" xml:space="preserve">
          <source>Quantifiers</source>
          <target state="translated">Quantifiers</target>
        </trans-unit>
        <trans-unit id="aa41452b81cfc8871bafa9d988f53a1bb4ce356d" translate="yes" xml:space="preserve">
          <source>Queries whether &lt;code&gt;b&lt;/code&gt; has been allocated with this region.</source>
          <target state="translated">Запрашивает, был ли &lt;code&gt;b&lt;/code&gt; выделен для этого региона.</target>
        </trans-unit>
        <trans-unit id="57517f03e9aaf59c82ec84806650edb8f5d7492d" translate="yes" xml:space="preserve">
          <source>Queries whether a &lt;code&gt;Checked!(T, WithNaN)&lt;/code&gt; object is not a number (NaN).</source>
          <target state="translated">Запрашивает, является ли объект &lt;code&gt;Checked!(T, WithNaN)&lt;/code&gt; не числом (NaN).</target>
        </trans-unit>
        <trans-unit id="625af40606e435d60c7571eb3eaed21802aa70ee" translate="yes" xml:space="preserve">
          <source>Query Progress Callbacks</source>
          <target state="translated">Обратный звонок по вопросам прогресса</target>
        </trans-unit>
        <trans-unit id="e1fe6e5e1618fc5d36b948e04dffddb60ff1e31e" translate="yes" xml:space="preserve">
          <source>Query the text for a Windows error code, as returned by &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/windows/desktop/ms679360.aspx&quot;&gt; &lt;code&gt;GetLastError&lt;/code&gt;&lt;/a&gt;, as a D string.</source>
          <target state="translated">Запросите текст кода ошибки Windows, возвращаемый &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/windows/desktop/ms679360.aspx&quot;&gt; &lt;code&gt;GetLastError&lt;/code&gt; &lt;/a&gt; , в виде строки D.</target>
        </trans-unit>
        <trans-unit id="be0224eb0002c0644b5fe076b5840980c58dd4dc" translate="yes" xml:space="preserve">
          <source>Queueing all unreachable memory that needs destructors to run.</source>
          <target state="translated">Постановка в очередь всей недоступной памяти,для работы которой нужны деструкторы.</target>
        </trans-unit>
        <trans-unit id="a56dc6a151cbc05cb8609d8f932b0767b30f6d0e" translate="yes" xml:space="preserve">
          <source>Quick and dirty code need not write any error handling code at all, and don't need to check for errors. The errors will be caught, an appropriate message displayed, and the program gracefully shut down all by default.</source>
          <target state="translated">Быстрый и грязный код вообще не нужно писать и проверять на ошибки.Ошибки будут перехвачены,на экран будет выведено соответствующее сообщение,и программа по умолчанию будет грациозно закрыта.</target>
        </trans-unit>
        <trans-unit id="f833b1b092080445c51762180493fddf5376651b" translate="yes" xml:space="preserve">
          <source>Quick and dirty programs are not worth writing tedious error handling code for, and so such utilities tend to be like using a table saw with no blade guards.</source>
          <target state="translated">Быстрые и грязные программы не стоят того,чтобы писать утомительный код обработки ошибок,поэтому такие утилиты,как правило,похожи на использование настольной пилы без защиты от лезвий.</target>
        </trans-unit>
        <trans-unit id="3c8b0af5874919bbda28b1f5afc70b825a7fdc39" translate="yes" xml:space="preserve">
          <source>Quotation_Mark</source>
          <target state="translated">Quotation_Mark</target>
        </trans-unit>
        <trans-unit id="7b0257ce75add65485cb879a8ababbebc2270b68" translate="yes" xml:space="preserve">
          <source>Quotes</source>
          <target state="translated">Quotes</target>
        </trans-unit>
        <trans-unit id="8cf3dc59ab6c635606edde6eb01c2303741881c7" translate="yes" xml:space="preserve">
          <source>Quotes a command-line argument in a manner conforming to the behavior of &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/windows/desktop/bb776391(v=vs.85).aspx&quot;&gt;CommandLineToArgvW&lt;/a&gt;.</source>
          <target state="translated">Кавычки аргумент командной строки в соответствии с поведением &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/windows/desktop/bb776391(v=vs.85).aspx&quot;&gt;CommandLineToArgvW&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="06576556d1ad802f247cad11ae748be47b70cd9c" translate="yes" xml:space="preserve">
          <source>R</source>
          <target state="translated">R</target>
        </trans-unit>
        <trans-unit id="46b2a3379a4b9c621f2cae3cf633f16ef00c9de0" translate="yes" xml:space="preserve">
          <source>R &lt;code&gt;choices&lt;/code&gt;</source>
          <target state="translated">R &lt;code&gt;choices&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7266e22ca42368c5ac28f6cdad79f6a1c7516362" translate="yes" xml:space="preserve">
          <source>R &lt;code&gt;fax&lt;/code&gt;</source>
          <target state="translated">R &lt;code&gt;fax&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e25e4996cd19545180422dc753d9814e4b846890" translate="yes" xml:space="preserve">
          <source>R &lt;code&gt;fbx&lt;/code&gt;</source>
          <target state="translated">R &lt;code&gt;fbx&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e55fb466207612f43c06a1f232ada1085268cc4e" translate="yes" xml:space="preserve">
          <source>R &lt;code&gt;haystack&lt;/code&gt;</source>
          <target state="translated">Стог &lt;code&gt;haystack&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="424b7c75c63229e3fcc721a2f15ae19e6dbfa620" translate="yes" xml:space="preserve">
          <source>R &lt;code&gt;input&lt;/code&gt;</source>
          <target state="translated">R &lt;code&gt;input&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="71188bd33ad186c201291e74f2ea18f5a3641f40" translate="yes" xml:space="preserve">
          <source>R &lt;code&gt;name&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; R</target>
        </trans-unit>
        <trans-unit id="13640b2ef57c08e53edacc90554f201319c4bd93" translate="yes" xml:space="preserve">
          <source>R &lt;code&gt;path&lt;/code&gt;</source>
          <target state="translated">R &lt;code&gt;path&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cfca0b9b62f6dec32b0f106ee7bd90408f6db66d" translate="yes" xml:space="preserve">
          <source>R &lt;code&gt;pathname&lt;/code&gt;</source>
          <target state="translated">R &lt;code&gt;pathname&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ebe092c47cea2696cd458501faa3c0952875efca" translate="yes" xml:space="preserve">
          <source>R &lt;code&gt;r&lt;/code&gt;</source>
          <target state="translated">R &lt;code&gt;r&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ab468fbdc306faaa419a93d0688406232175b4c8" translate="yes" xml:space="preserve">
          <source>R &lt;code&gt;range&lt;/code&gt;</source>
          <target state="translated">R &lt;code&gt;range&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e695ad661c9be1e85180c63d44f9ddf593365841" translate="yes" xml:space="preserve">
          <source>R &lt;code&gt;re&lt;/code&gt;</source>
          <target state="translated">R &lt;code&gt;re&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="97fe6c090c86e02140df1df65d1dc3a2d3f9a4bd" translate="yes" xml:space="preserve">
          <source>R &lt;code&gt;rhs&lt;/code&gt;</source>
          <target state="translated">R &lt;code&gt;rhs&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4452828287fae2c2221b85f0d6fd57783e9416bf" translate="yes" xml:space="preserve">
          <source>R &lt;code&gt;sep&lt;/code&gt;</source>
          <target state="translated">R &lt;code&gt;sep&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d10d6d4b9dfbf3470b6476d9b518976a16168f99" translate="yes" xml:space="preserve">
          <source>R &lt;code&gt;to&lt;/code&gt;</source>
          <target state="translated">R &lt;code&gt;to&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="50863302124895c67709c985bbc8750a0dc5ed66" translate="yes" xml:space="preserve">
          <source>R &lt;strong id=&quot;drop&quot;&gt;drop&lt;/strong&gt;(R)(R range, size_t n)</source>
          <target state="translated">R &lt;strong id=&quot;drop&quot;&gt;drop&lt;/strong&gt; (R) (диапазон R, размер_t n)</target>
        </trans-unit>
        <trans-unit id="fb325cd844a163a42462ecda91c85f8764d32e50" translate="yes" xml:space="preserve">
          <source>R &lt;strong id=&quot;dropBack&quot;&gt;dropBack&lt;/strong&gt;(R)(R range, size_t n)</source>
          <target state="translated">R &lt;strong id=&quot;dropBack&quot;&gt;dropBack&lt;/strong&gt; (R) (диапазон R, размер_t n)</target>
        </trans-unit>
        <trans-unit id="1a4956e36adf7f6c345474abdad19d0416fb6771" translate="yes" xml:space="preserve">
          <source>R &lt;strong id=&quot;dropBackExactly&quot;&gt;dropBackExactly&lt;/strong&gt;(R)(R range, size_t n)</source>
          <target state="translated">R &lt;strong id=&quot;dropBackExactly&quot;&gt;dropBackExactly&lt;/strong&gt; (R) (диапазон R, размер_t n)</target>
        </trans-unit>
        <trans-unit id="5636cd7e75f55155f0813afda029b296c014e5f0" translate="yes" xml:space="preserve">
          <source>R &lt;strong id=&quot;dropBackOne&quot;&gt;dropBackOne&lt;/strong&gt;(R)(R range)</source>
          <target state="translated">R &lt;strong id=&quot;dropBackOne&quot;&gt;dropBackOne&lt;/strong&gt; (R) (диапазон R)</target>
        </trans-unit>
        <trans-unit id="85883c8c957d5efc82ef442a74c58c532150dd43" translate="yes" xml:space="preserve">
          <source>R &lt;strong id=&quot;dropExactly&quot;&gt;dropExactly&lt;/strong&gt;(R)(R range, size_t n)</source>
          <target state="translated">R &lt;strong id=&quot;dropExactly&quot;&gt;dropExactly&lt;/strong&gt; (R) (диапазон R, размер_t n)</target>
        </trans-unit>
        <trans-unit id="f9cad92fc189a821863e6343ed3112c5c45f7ef5" translate="yes" xml:space="preserve">
          <source>R &lt;strong id=&quot;dropOne&quot;&gt;dropOne&lt;/strong&gt;(R)(R range)</source>
          <target state="translated">R &lt;strong id=&quot;dropOne&quot;&gt;dropOne&lt;/strong&gt; (R) (диапазон R)</target>
        </trans-unit>
        <trans-unit id="11e2a417124b25e85e961d2746bff4dcf2ee0fa8" translate="yes" xml:space="preserve">
          <source>R &lt;strong id=&quot;opIndex&quot;&gt;opIndex&lt;/strong&gt;(String)(String i)</source>
          <target state="translated">R &lt;strong id=&quot;opIndex&quot;&gt;opIndex&lt;/strong&gt; (String) (Строка i)</target>
        </trans-unit>
        <trans-unit id="e8c816cd865443df3fb58bfeee9cf533972311c0" translate="yes" xml:space="preserve">
          <source>R &lt;strong id=&quot;replace&quot;&gt;replace&lt;/strong&gt;(alias fun, R, RegEx)(R input, RegEx re)</source>
          <target state="translated">R &lt;strong id=&quot;replace&quot;&gt;заменить&lt;/strong&gt; (псевдоним весело, R, RegEx) (R вход, RegEx re)</target>
        </trans-unit>
        <trans-unit id="366f82d7690e508f3f12c24c9b5263e1348fd152" translate="yes" xml:space="preserve">
          <source>R &lt;strong id=&quot;replace&quot;&gt;replace&lt;/strong&gt;(alias scheme = match, R, C, RegEx)(R input, RegEx re, const(C)[] format)</source>
          <target state="translated">R &lt;strong id=&quot;replace&quot;&gt;replace&lt;/strong&gt; (псевдоним схемы = match, R, C, RegEx) (R input, RegEx re, const (C) [] формат)</target>
        </trans-unit>
        <trans-unit id="7d01ce94655a4a56f469c103c1d6a5369ff08a56" translate="yes" xml:space="preserve">
          <source>R &lt;strong id=&quot;replaceFirst&quot;&gt;replaceFirst&lt;/strong&gt;(R, C, RegEx)(R input, RegEx re, const(C)[] format)</source>
          <target state="translated">R &lt;strong id=&quot;replaceFirst&quot;&gt;replaceFirst&lt;/strong&gt; (R, C, RegEx) (R input, RegEx re, const (C) [] формат)</target>
        </trans-unit>
        <trans-unit id="20a08fddc23874fdd02d8fa4d8a4a5267450724d" translate="yes" xml:space="preserve">
          <source>R &lt;strong id=&quot;replaceFirst&quot;&gt;replaceFirst&lt;/strong&gt;(alias fun, R, RegEx)(R input, RegEx re)</source>
          <target state="translated">R &lt;strong id=&quot;replaceFirst&quot;&gt;replaceFirst&lt;/strong&gt; (псевдоним веселья, R, RegEx) (R вход, RegEx re)</target>
        </trans-unit>
        <trans-unit id="067f32da0babc4ff738d19aab110dc4b8e9152a3" translate="yes" xml:space="preserve">
          <source>R r</source>
          <target state="translated">R r</target>
        </trans-unit>
        <trans-unit id="8a02cd9a7652426a1cc33b70edf17e072b64bb13" translate="yes" xml:space="preserve">
          <source>R* &lt;code&gt;range&lt;/code&gt;</source>
          <target state="translated">R * &lt;code&gt;range&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d3c006177515d161711463dc36ea326d00dd6c50" translate="yes" xml:space="preserve">
          <source>R-03371-37637</source>
          <target state="translated">R-03371-37637</target>
        </trans-unit>
        <trans-unit id="ed224262865068e4e98f69898960d0c04f8bcdf2" translate="yes" xml:space="preserve">
          <source>R-37514-35566</source>
          <target state="translated">R-37514-35566</target>
        </trans-unit>
        <trans-unit id="aa18ab4548b06f1904b620f598aa53d4dd7a5133" translate="yes" xml:space="preserve">
          <source>R-51971-34154</source>
          <target state="translated">R-51971-34154</target>
        </trans-unit>
        <trans-unit id="791a7d0746cccccb32d298c2a7ae029256ba4f41" translate="yes" xml:space="preserve">
          <source>R1 &lt;code&gt;from&lt;/code&gt;</source>
          <target state="translated">R1 &lt;code&gt;from&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a50f0d4d22cfd7772851244d5316a7272acc327a" translate="yes" xml:space="preserve">
          <source>R1 &lt;code&gt;haystack&lt;/code&gt;</source>
          <target state="translated">R1 &lt;code&gt;haystack&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3d30d08fbaf4f299a6ce6f18a5caaa4b5e3a4bc8" translate="yes" xml:space="preserve">
          <source>R1 &lt;code&gt;inputRange&lt;/code&gt;</source>
          <target state="translated">R1 &lt;code&gt;inputRange&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="56e3536a8b44d4a1bd8b6852808418db9282c982" translate="yes" xml:space="preserve">
          <source>R1 &lt;code&gt;path&lt;/code&gt;</source>
          <target state="translated">R1 &lt;code&gt;path&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8ce974c87042be5646c37a9d903e4dc28ffe45da" translate="yes" xml:space="preserve">
          <source>R1 &lt;code&gt;r1&lt;/code&gt;</source>
          <target state="translated">R1 &lt;code&gt;r1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f79e33e37a7032419b3c7f02e2aeab2ab3a99cb8" translate="yes" xml:space="preserve">
          <source>R1 &lt;code&gt;range1&lt;/code&gt;</source>
          <target state="translated">R1 &lt;code&gt;range1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5b7bb559e01e420d7f99325c9034331e25d0feda" translate="yes" xml:space="preserve">
          <source>R1 &lt;code&gt;source&lt;/code&gt;</source>
          <target state="translated">R1 &lt;code&gt;source&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cec38db6f44458a89fca4706fe9db3eeb0925121" translate="yes" xml:space="preserve">
          <source>R1 &lt;strong id=&quot;find&quot;&gt;find&lt;/strong&gt;(alias pred = &quot;a == b&quot;, R1, R2)(R1 haystack, scope R2 needle)</source>
          <target state="translated">R1 &lt;strong id=&quot;find&quot;&gt;найти&lt;/strong&gt; (псевдоним pred = &quot;a == b&quot;, R1, R2) (стог сена R1, область действия иглы R2)</target>
        </trans-unit>
        <trans-unit id="416e9ded6d684411bfae7ab98068a6cf65ed7a00" translate="yes" xml:space="preserve">
          <source>R2 &lt;code&gt;base&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;base&lt;/code&gt; R2</target>
        </trans-unit>
        <trans-unit id="6d762f078c8aae67290247417557af653d4c9d42" translate="yes" xml:space="preserve">
          <source>R2 &lt;code&gt;buffer&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;buffer&lt;/code&gt; R2</target>
        </trans-unit>
        <trans-unit id="6e17c192b2f05c757416a29ee552d3ef90c36764" translate="yes" xml:space="preserve">
          <source>R2 &lt;code&gt;needle&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;needle&lt;/code&gt; R2</target>
        </trans-unit>
        <trans-unit id="d8a873ced34d741501067e5dbac4f4230c5409e3" translate="yes" xml:space="preserve">
          <source>R2 &lt;code&gt;outputRange&lt;/code&gt;</source>
          <target state="translated">R2 &lt;code&gt;outputRange&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cd423d90d919393604a7c9af9f9e726e3ee924bf" translate="yes" xml:space="preserve">
          <source>R2 &lt;code&gt;r2&lt;/code&gt;</source>
          <target state="translated">R2 &lt;code&gt;r2&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="712752c9f8be3668be2612d41bc3fc1045f791e0" translate="yes" xml:space="preserve">
          <source>R2 &lt;code&gt;range2&lt;/code&gt;</source>
          <target state="translated">R2 &lt;code&gt;range2&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="10ae534e9e912c0a565bb612503cd04d4b6c3d8e" translate="yes" xml:space="preserve">
          <source>R2 &lt;code&gt;range&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;range&lt;/code&gt; R2</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
