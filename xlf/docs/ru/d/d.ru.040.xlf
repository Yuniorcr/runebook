<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="d">
    <body>
      <group id="d">
        <trans-unit id="bb574cae4639f21d96320a096ed7df019aefd16d" translate="yes" xml:space="preserve">
          <source>std.file.read</source>
          <target state="translated">std.file.read</target>
        </trans-unit>
        <trans-unit id="0553b000c85273d99306dc095d8456f8c029e4b6" translate="yes" xml:space="preserve">
          <source>std.format</source>
          <target state="translated">std.format</target>
        </trans-unit>
        <trans-unit id="b72e4f4c5aefd9185eeb87f5a04736d50bb1b59f" translate="yes" xml:space="preserve">
          <source>std.format.FormatSpec!char &lt;code&gt;fmt&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7f74f3e08f31d88cea93be28f0ee1723f89ab16" translate="yes" xml:space="preserve">
          <source>std.functional</source>
          <target state="translated">std.functional</target>
        </trans-unit>
        <trans-unit id="229d30dbac25b0c43b4a1110901775b469afeb98" translate="yes" xml:space="preserve">
          <source>std.functional.not</source>
          <target state="translated">std.functional.not</target>
        </trans-unit>
        <trans-unit id="da4a7997f7175560b7ec8edb5959caa776c01da8" translate="yes" xml:space="preserve">
          <source>std.functional.pipe</source>
          <target state="translated">std.functional.pipe</target>
        </trans-unit>
        <trans-unit id="48e2e7dca22cf93bcb6ca2a82be8473b9d69a3fc" translate="yes" xml:space="preserve">
          <source>std.getopt</source>
          <target state="translated">std.getopt</target>
        </trans-unit>
        <trans-unit id="7d66a9fc9f5736ddc2ba6a38beeb2b80ea9fbc8d" translate="yes" xml:space="preserve">
          <source>std.json</source>
          <target state="translated">std.json</target>
        </trans-unit>
        <trans-unit id="05e6cf7097a5320b055631a808140c932335465f" translate="yes" xml:space="preserve">
          <source>std.math</source>
          <target state="translated">std.math</target>
        </trans-unit>
        <trans-unit id="61d59011ac3fb283634031c28535342bf7a95a66" translate="yes" xml:space="preserve">
          <source>std.math.E</source>
          <target state="translated">std.math.E</target>
        </trans-unit>
        <trans-unit id="b2ae92df483722e6d196b40012c6252fd3c4aa28" translate="yes" xml:space="preserve">
          <source>std.math.LN10</source>
          <target state="translated">std.math.LN10</target>
        </trans-unit>
        <trans-unit id="e12a21dc8f3ae547fadd15c6bb7be0935c344395" translate="yes" xml:space="preserve">
          <source>std.math.LN2</source>
          <target state="translated">std.math.LN2</target>
        </trans-unit>
        <trans-unit id="bf1cda960a1d759fe5f15642c521e4d0349b7bb0" translate="yes" xml:space="preserve">
          <source>std.math.LOG2</source>
          <target state="translated">std.math.LOG2</target>
        </trans-unit>
        <trans-unit id="aad69d5adfc4fc92fd3cb5c50784aa7b9f96fee4" translate="yes" xml:space="preserve">
          <source>std.math.NaN</source>
          <target state="translated">std.math.NaN</target>
        </trans-unit>
        <trans-unit id="5d1e6fca06779b774b635a7fa94432c4b5e66138" translate="yes" xml:space="preserve">
          <source>std.math.PI</source>
          <target state="translated">std.math.PI</target>
        </trans-unit>
        <trans-unit id="b3209a79df65f8ae2202ded9e6c11394e0a604f7" translate="yes" xml:space="preserve">
          <source>std.math.PI_2</source>
          <target state="translated">std.math.PI_2</target>
        </trans-unit>
        <trans-unit id="cafa05476cfdc4d507a85e4d11ef3b444828250a" translate="yes" xml:space="preserve">
          <source>std.math.PI_4</source>
          <target state="translated">std.math.PI_4</target>
        </trans-unit>
        <trans-unit id="51e7c9330655241637703abab7c8c23657850911" translate="yes" xml:space="preserve">
          <source>std.math.abs</source>
          <target state="translated">std.math.abs</target>
        </trans-unit>
        <trans-unit id="dbf1edf2115ea49b555b6f08dc8e74a63bef9eeb" translate="yes" xml:space="preserve">
          <source>std.math.acos</source>
          <target state="translated">std.math.acos</target>
        </trans-unit>
        <trans-unit id="8cc03b6dcffbc8315a7a3b751b92c08e191a079d" translate="yes" xml:space="preserve">
          <source>std.math.asin</source>
          <target state="translated">std.math.asin</target>
        </trans-unit>
        <trans-unit id="3f00eef566bdd227e9ee94f8f44d20a931a96fd5" translate="yes" xml:space="preserve">
          <source>std.math.atan</source>
          <target state="translated">std.math.atan</target>
        </trans-unit>
        <trans-unit id="5b7e05783dee49b8a8adc648293f560dc5b71f68" translate="yes" xml:space="preserve">
          <source>std.math.cbrt</source>
          <target state="translated">std.math.cbrt</target>
        </trans-unit>
        <trans-unit id="8b027a9edba14f29966e023c735ff98bd9206f8e" translate="yes" xml:space="preserve">
          <source>std.math.ceil</source>
          <target state="translated">std.math.ceil</target>
        </trans-unit>
        <trans-unit id="0b366cd13d58dcff000d77ebe911d488a3d24b93" translate="yes" xml:space="preserve">
          <source>std.math.cmp</source>
          <target state="translated">std.math.cmp</target>
        </trans-unit>
        <trans-unit id="8ecee47a0b466ece7dbba29ddf1611ee98693a37" translate="yes" xml:space="preserve">
          <source>std.math.cos</source>
          <target state="translated">std.math.cos</target>
        </trans-unit>
        <trans-unit id="91025fe6f330d9a756d4fc1e4d2e39b191b6e5dc" translate="yes" xml:space="preserve">
          <source>std.math.cosh</source>
          <target state="translated">std.math.cosh</target>
        </trans-unit>
        <trans-unit id="fa558286f750cf943533edb80d6424f78e767bdf" translate="yes" xml:space="preserve">
          <source>std.math.exp</source>
          <target state="translated">std.math.exp</target>
        </trans-unit>
        <trans-unit id="488657a71fefbf670a89ef36a4cd70fdd0cd9bcb" translate="yes" xml:space="preserve">
          <source>std.math.exp2</source>
          <target state="translated">std.math.exp2</target>
        </trans-unit>
        <trans-unit id="d7ad7d38d9f677982c25638fe642303d2c50f3ce" translate="yes" xml:space="preserve">
          <source>std.math.fabs</source>
          <target state="translated">std.math.fabs</target>
        </trans-unit>
        <trans-unit id="e049b1f058e60a32a61fea431c5395c76e8a2731" translate="yes" xml:space="preserve">
          <source>std.math.fdim</source>
          <target state="translated">std.math.fdim</target>
        </trans-unit>
        <trans-unit id="2170fd8c5f5b2cd58cf257c09a66f476b219eb6b" translate="yes" xml:space="preserve">
          <source>std.math.fma</source>
          <target state="translated">std.math.fma</target>
        </trans-unit>
        <trans-unit id="e73676d8d0b6ee11e9ea2695564c150a70555eb0" translate="yes" xml:space="preserve">
          <source>std.math.fmax</source>
          <target state="translated">std.math.fmax</target>
        </trans-unit>
        <trans-unit id="49ac35d82db53e320de3af4b706114df005d6c87" translate="yes" xml:space="preserve">
          <source>std.math.fmin</source>
          <target state="translated">std.math.fmin</target>
        </trans-unit>
        <trans-unit id="dea5f3883750bd847c2242b5e32c723d0b8828de" translate="yes" xml:space="preserve">
          <source>std.math.fmod</source>
          <target state="translated">std.math.fmod</target>
        </trans-unit>
        <trans-unit id="ed315b94b955c995c20e28fd5cd6cb7d654e37bd" translate="yes" xml:space="preserve">
          <source>std.math.log</source>
          <target state="translated">std.math.log</target>
        </trans-unit>
        <trans-unit id="90946dba7dc815a0723533c5235f7e1724a927e2" translate="yes" xml:space="preserve">
          <source>std.math.log2</source>
          <target state="translated">std.math.log2</target>
        </trans-unit>
        <trans-unit id="15e42abeb55b415848245870a4f6b39037d626ba" translate="yes" xml:space="preserve">
          <source>std.math.logb</source>
          <target state="translated">std.math.logb</target>
        </trans-unit>
        <trans-unit id="56732e40726646cfd4b4635f2939fde6dcb1cc56" translate="yes" xml:space="preserve">
          <source>std.math.modf</source>
          <target state="translated">std.math.modf</target>
        </trans-unit>
        <trans-unit id="1947852f10e8826dbcf9ccbe01e6dfc4d5f516ed" translate="yes" xml:space="preserve">
          <source>std.math.poly</source>
          <target state="translated">std.math.poly</target>
        </trans-unit>
        <trans-unit id="1134cc9f5988168a84cca6933f40a2324dc56a03" translate="yes" xml:space="preserve">
          <source>std.math.pow</source>
          <target state="translated">std.math.pow</target>
        </trans-unit>
        <trans-unit id="e7039834e42b69ffeace681697f792d269b0cf8b" translate="yes" xml:space="preserve">
          <source>std.math.rint</source>
          <target state="translated">std.math.rint</target>
        </trans-unit>
        <trans-unit id="0ffab147d0ed6172c65b005cb936686918d9b3f3" translate="yes" xml:space="preserve">
          <source>std.math.sgn</source>
          <target state="translated">std.math.sgn</target>
        </trans-unit>
        <trans-unit id="ebbc553a0d91fbe651f609b96b9bdbc7293d5d75" translate="yes" xml:space="preserve">
          <source>std.math.sin</source>
          <target state="translated">std.math.sin</target>
        </trans-unit>
        <trans-unit id="57b1af832337b06423526033325aa25afd2b90cf" translate="yes" xml:space="preserve">
          <source>std.math.sinh</source>
          <target state="translated">std.math.sinh</target>
        </trans-unit>
        <trans-unit id="4d102880170c44fb6b6fc845fb83a899b1aa0cd4" translate="yes" xml:space="preserve">
          <source>std.math.sqrt</source>
          <target state="translated">std.math.sqrt</target>
        </trans-unit>
        <trans-unit id="200a7dcc7917d097b1cbbc557df6d60d7bce2296" translate="yes" xml:space="preserve">
          <source>std.math.tan</source>
          <target state="translated">std.math.tan</target>
        </trans-unit>
        <trans-unit id="7f4e9136839961466f09bf9ea10b485f269fa1e8" translate="yes" xml:space="preserve">
          <source>std.math.tanh</source>
          <target state="translated">std.math.tanh</target>
        </trans-unit>
        <trans-unit id="85c93f51eeccf7a6a9800310e58276f039a8ef12" translate="yes" xml:space="preserve">
          <source>std.mathspecial</source>
          <target state="translated">std.mathspecial</target>
        </trans-unit>
        <trans-unit id="ccc5c2c01fda1dee850e4d21037950a44131edd8" translate="yes" xml:space="preserve">
          <source>std.mathspecial.beta</source>
          <target state="translated">std.mathspecial.beta</target>
        </trans-unit>
        <trans-unit id="20d972271e800f4c5b096e8652586df4d4069211" translate="yes" xml:space="preserve">
          <source>std.mathspecial.erf</source>
          <target state="translated">std.mathspecial.erf</target>
        </trans-unit>
        <trans-unit id="a5ff032954368a13da1a20b40a5a36b857b1e461" translate="yes" xml:space="preserve">
          <source>std.mathspecial.erfc</source>
          <target state="translated">std.mathspecial.erfc</target>
        </trans-unit>
        <trans-unit id="ae5ad64855a37438fdea7f7515adba5e7e9439a7" translate="yes" xml:space="preserve">
          <source>std.meta</source>
          <target state="translated">std.meta</target>
        </trans-unit>
        <trans-unit id="741bbcfb06e780fc46ec5d6cdcd743fe8a07d09b" translate="yes" xml:space="preserve">
          <source>std.mmfile</source>
          <target state="translated">std.mmfile</target>
        </trans-unit>
        <trans-unit id="9a8d5a480864a62e100c6e8221480aa868a9add6" translate="yes" xml:space="preserve">
          <source>std.net</source>
          <target state="translated">std.net</target>
        </trans-unit>
        <trans-unit id="c759767ac15362a4a0cd38c1911b6f4f4fdd4c68" translate="yes" xml:space="preserve">
          <source>std.net.curl</source>
          <target state="translated">std.net.curl</target>
        </trans-unit>
        <trans-unit id="d36e29d8b65fa3523ee872962d6548e2f27d21a8" translate="yes" xml:space="preserve">
          <source>std.net.isemail</source>
          <target state="translated">std.net.isemail</target>
        </trans-unit>
        <trans-unit id="1267ff2f54a4453e2d5e55a7c07b3db96bc3c2a8" translate="yes" xml:space="preserve">
          <source>std.numeric</source>
          <target state="translated">std.numeric</target>
        </trans-unit>
        <trans-unit id="0c1e3b89809ad225586c21c35b56d2f4a7c708dc" translate="yes" xml:space="preserve">
          <source>std.numeric.Fft</source>
          <target state="translated">std.numeric.Fft</target>
        </trans-unit>
        <trans-unit id="20f8c4e7506de31ff9a2c48faa2156ad38184f6f" translate="yes" xml:space="preserve">
          <source>std.numeric.fft</source>
          <target state="translated">std.numeric.fft</target>
        </trans-unit>
        <trans-unit id="a9394fa21caf022eecf5352d162c8d3689fdf65d" translate="yes" xml:space="preserve">
          <source>std.numeric.gcd</source>
          <target state="translated">std.numeric.gcd</target>
        </trans-unit>
        <trans-unit id="4c2fe44eccb74c7b24353ade21cb4dfedaba32ce" translate="yes" xml:space="preserve">
          <source>std.outbuffer</source>
          <target state="translated">std.outbuffer</target>
        </trans-unit>
        <trans-unit id="0f35878401c917b465dcdd5dd7454753f95d845d" translate="yes" xml:space="preserve">
          <source>std.parallelism</source>
          <target state="translated">std.parallelism</target>
        </trans-unit>
        <trans-unit id="d1b0c7900ec9f11b7493498c7aff4aec69dc4b85" translate="yes" xml:space="preserve">
          <source>std.parallelism.Task</source>
          <target state="translated">std.parallelism.Task</target>
        </trans-unit>
        <trans-unit id="baad7882ac63e7d61d8947c7979e2395fce9e74e" translate="yes" xml:space="preserve">
          <source>std.parallelism.task</source>
          <target state="translated">std.parallelism.task</target>
        </trans-unit>
        <trans-unit id="5ae30135c80512bdf161b168f3553e8040440d00" translate="yes" xml:space="preserve">
          <source>std.path</source>
          <target state="translated">std.path</target>
        </trans-unit>
        <trans-unit id="e76b50eb51222d124d831e7f6d6c7aaa8d8c67a6" translate="yes" xml:space="preserve">
          <source>std.process</source>
          <target state="translated">std.process</target>
        </trans-unit>
        <trans-unit id="cd53d2a118b636dc07f37b29f89e690c8df3243a" translate="yes" xml:space="preserve">
          <source>std.process.Pid</source>
          <target state="translated">std.process.Pid</target>
        </trans-unit>
        <trans-unit id="4e8adec3aa3ff02434e37ffbd378ae4ed82ec918" translate="yes" xml:space="preserve">
          <source>std.process.Pipe</source>
          <target state="translated">std.process.Pipe</target>
        </trans-unit>
        <trans-unit id="89922e6b150b63d0aecdf488ecbe19e789102d3a" translate="yes" xml:space="preserve">
          <source>std.process.kill</source>
          <target state="translated">std.process.kill</target>
        </trans-unit>
        <trans-unit id="995fb4194febd03c059043edfe90f45b8a4b9c5e" translate="yes" xml:space="preserve">
          <source>std.process.pipe</source>
          <target state="translated">std.process.pipe</target>
        </trans-unit>
        <trans-unit id="632ece83a52b6ef6f6d26b6ee442c6187c279e03" translate="yes" xml:space="preserve">
          <source>std.process.wait</source>
          <target state="translated">std.process.wait</target>
        </trans-unit>
        <trans-unit id="5123215a2270a289b31ed9dd72e783e02a670b49" translate="yes" xml:space="preserve">
          <source>std.random</source>
          <target state="translated">std.random</target>
        </trans-unit>
        <trans-unit id="224b1422ad975bc5c6c126ba05acdfc1b516ce63" translate="yes" xml:space="preserve">
          <source>std.random.dice</source>
          <target state="translated">std.random.dice</target>
        </trans-unit>
        <trans-unit id="97fa24a5620fd76dca57fd7cd9cbacfd35c4e222" translate="yes" xml:space="preserve">
          <source>std.range</source>
          <target state="translated">std.range</target>
        </trans-unit>
        <trans-unit id="744d524e6047ce691e36f51c48780b2db9da92b3" translate="yes" xml:space="preserve">
          <source>std.range.Flag</source>
          <target state="translated">std.range.Flag</target>
        </trans-unit>
        <trans-unit id="7804e412b234090209adaff907e22a0db4209768" translate="yes" xml:space="preserve">
          <source>std.range.No</source>
          <target state="translated">std.range.No</target>
        </trans-unit>
        <trans-unit id="e84f9e6d39115332ac587ad4523430a0d6ccc444" translate="yes" xml:space="preserve">
          <source>std.range.Take</source>
          <target state="translated">std.range.Take</target>
        </trans-unit>
        <trans-unit id="3b2576f4f682d1f506734eb07d3d8b3e43de1970" translate="yes" xml:space="preserve">
          <source>std.range.Yes</source>
          <target state="translated">std.range.Yes</target>
        </trans-unit>
        <trans-unit id="939833854e1b2afa04a3ad4f2bd6c318252201df" translate="yes" xml:space="preserve">
          <source>std.range.Zip</source>
          <target state="translated">std.range.Zip</target>
        </trans-unit>
        <trans-unit id="0a460a1eaba30a00e97afccb8d3bf76ecbbbb992" translate="yes" xml:space="preserve">
          <source>std.range.drop</source>
          <target state="translated">std.range.drop</target>
        </trans-unit>
        <trans-unit id="5d12ad826bf79ee30dab8bd1c2095144d889ef8a" translate="yes" xml:space="preserve">
          <source>std.range.interfaces</source>
          <target state="translated">std.range.interfaces</target>
        </trans-unit>
        <trans-unit id="58205e4a0e886eabf33da98ea150241a91187cad" translate="yes" xml:space="preserve">
          <source>std.range.iota</source>
          <target state="translated">std.range.iota</target>
        </trans-unit>
        <trans-unit id="27464b88b9bd541231c729be668ab65d2a8da742" translate="yes" xml:space="preserve">
          <source>std.range.only</source>
          <target state="translated">std.range.only</target>
        </trans-unit>
        <trans-unit id="78e86c163e624af530aedef7d9a1f89b6a559d90" translate="yes" xml:space="preserve">
          <source>std.range.primitives</source>
          <target state="translated">std.range.primitives</target>
        </trans-unit>
        <trans-unit id="42dc2fcaa6382d973189b475928dfddcec7214ad" translate="yes" xml:space="preserve">
          <source>std.range.tail</source>
          <target state="translated">std.range.tail</target>
        </trans-unit>
        <trans-unit id="41e92a64e60a56eb3f325c66b90d8abea45db360" translate="yes" xml:space="preserve">
          <source>std.range.take</source>
          <target state="translated">std.range.take</target>
        </trans-unit>
        <trans-unit id="321717ab98da5f285b19a3ecb7a608a66b66bbf7" translate="yes" xml:space="preserve">
          <source>std.range.tee</source>
          <target state="translated">std.range.tee</target>
        </trans-unit>
        <trans-unit id="8646168166c428b95ed9097d7201654e1b9716ab" translate="yes" xml:space="preserve">
          <source>std.range.zip</source>
          <target state="translated">std.range.zip</target>
        </trans-unit>
        <trans-unit id="3cf2c11eb623dddc7a553ed9a26d72f50c1c6b9f" translate="yes" xml:space="preserve">
          <source>std.regex</source>
          <target state="translated">std.regex</target>
        </trans-unit>
        <trans-unit id="272bf343913938b0a4ce96447ebfa1aadfd5ea97" translate="yes" xml:space="preserve">
          <source>std.regex operates on codepoint level, 'character' in this table denotes a single Unicode codepoint.</source>
          <target state="translated">std.regex работает на уровне кодовых точек,'символ' в этой таблице обозначает одну единственную кодовую точку Юникода.</target>
        </trans-unit>
        <trans-unit id="4ed29d94cf59e89c797209d845c9d44041c68058" translate="yes" xml:space="preserve">
          <source>std.signals</source>
          <target state="translated">std.signals</target>
        </trans-unit>
        <trans-unit id="23342618f5adcf1469a63e0c29c3cf4502706fa0" translate="yes" xml:space="preserve">
          <source>std.socket</source>
          <target state="translated">std.socket</target>
        </trans-unit>
        <trans-unit id="5cf7bf523cc6a5de049edc0380dcae9217d464e7" translate="yes" xml:space="preserve">
          <source>std.stdint</source>
          <target state="translated">std.stdint</target>
        </trans-unit>
        <trans-unit id="bba95c9c3fc083fb36ad416d72d3a65278009ec0" translate="yes" xml:space="preserve">
          <source>std.stdio</source>
          <target state="translated">std.stdio</target>
        </trans-unit>
        <trans-unit id="15de5b2f68068b4342f01c12c95b14ae1ca70cc5" translate="yes" xml:space="preserve">
          <source>std.stdio.File</source>
          <target state="translated">std.stdio.File</target>
        </trans-unit>
        <trans-unit id="324c4f43f5ab234dd5320d689c23dfd47524a781" translate="yes" xml:space="preserve">
          <source>std.string</source>
          <target state="translated">std.string</target>
        </trans-unit>
        <trans-unit id="595579a7a44cfe3fc72b18541595b8c06f51d668" translate="yes" xml:space="preserve">
          <source>std.string.chop</source>
          <target state="translated">std.string.chop</target>
        </trans-unit>
        <trans-unit id="14df3d5be293012e93a3ec5450db3921ba34911f" translate="yes" xml:space="preserve">
          <source>std.string.cmp</source>
          <target state="translated">std.string.cmp</target>
        </trans-unit>
        <trans-unit id="c62b67496b2cde66faf2e80049d2c626a928b4c4" translate="yes" xml:space="preserve">
          <source>std.string.icmp</source>
          <target state="translated">std.string.icmp</target>
        </trans-unit>
        <trans-unit id="a4e15feb8c051f830e10baeacc030e6d62e1aec6" translate="yes" xml:space="preserve">
          <source>std.string.join</source>
          <target state="translated">std.string.join</target>
        </trans-unit>
        <trans-unit id="70b35b158961217cf038ed17031e116b16585418" translate="yes" xml:space="preserve">
          <source>std.string.succ</source>
          <target state="translated">std.string.succ</target>
        </trans-unit>
        <trans-unit id="16eae36065a4bbcb22f6c550d0f84eb51adb236c" translate="yes" xml:space="preserve">
          <source>std.string.tr</source>
          <target state="translated">std.string.tr</target>
        </trans-unit>
        <trans-unit id="7f5fd141329ee6472373cd9a76a89012a5bafb28" translate="yes" xml:space="preserve">
          <source>std.string.wrap</source>
          <target state="translated">std.string.wrap</target>
        </trans-unit>
        <trans-unit id="e2ec7189cac8dbc680c53d7c384528a1b3daedba" translate="yes" xml:space="preserve">
          <source>std.system</source>
          <target state="translated">std.system</target>
        </trans-unit>
        <trans-unit id="cf7172dbd26a5cdb4228255052bea89a020e2954" translate="yes" xml:space="preserve">
          <source>std.system.OS</source>
          <target state="translated">std.system.OS</target>
        </trans-unit>
        <trans-unit id="8e6d16f3b752ea9a42adeaba3b36e25b2a194b69" translate="yes" xml:space="preserve">
          <source>std.system.os</source>
          <target state="translated">std.system.os</target>
        </trans-unit>
        <trans-unit id="8c21fb3b93d815cf4724ca5047a87f3aca9d88db" translate="yes" xml:space="preserve">
          <source>std.traits</source>
          <target state="translated">std.traits</target>
        </trans-unit>
        <trans-unit id="4e847ef5670dd02ac1930aef6ad5a52aefbc8659" translate="yes" xml:space="preserve">
          <source>std.typecons</source>
          <target state="translated">std.typecons</target>
        </trans-unit>
        <trans-unit id="a81cd4435b8db38735b59cdf0f33cc13f3dfeb43" translate="yes" xml:space="preserve">
          <source>std.typecons.Flag</source>
          <target state="translated">std.typecons.Flag</target>
        </trans-unit>
        <trans-unit id="f07cd35e6e948ea1ae787bf9735cb2750df84ffd" translate="yes" xml:space="preserve">
          <source>std.typecons.No</source>
          <target state="translated">std.typecons.No</target>
        </trans-unit>
        <trans-unit id="447d9ac56740b5668e668a27f951f6e6b9708888" translate="yes" xml:space="preserve">
          <source>std.typecons.Yes</source>
          <target state="translated">std.typecons.Yes</target>
        </trans-unit>
        <trans-unit id="a0dc7b343fcd0f4181881b6b511e3e791cecdba6" translate="yes" xml:space="preserve">
          <source>std.typecons.wrap</source>
          <target state="translated">std.typecons.wrap</target>
        </trans-unit>
        <trans-unit id="8c13a789551485a4f7b1acfb8a381e93ee56ac50" translate="yes" xml:space="preserve">
          <source>std.uni</source>
          <target state="translated">std.uni</target>
        </trans-unit>
        <trans-unit id="4e541e99b2b81b5df213170a9403ba0fe9cb2a98" translate="yes" xml:space="preserve">
          <source>std.uni.NFC</source>
          <target state="translated">std.uni.NFC</target>
        </trans-unit>
        <trans-unit id="0df4a6605d5e84daa7fef384f85d619e29db527a" translate="yes" xml:space="preserve">
          <source>std.uni.NFD</source>
          <target state="translated">std.uni.NFD</target>
        </trans-unit>
        <trans-unit id="bec5a32d3b2bbb799228904eeaa5293810b482ea" translate="yes" xml:space="preserve">
          <source>std.uni.NFKC</source>
          <target state="translated">std.uni.NFKC</target>
        </trans-unit>
        <trans-unit id="4ffd1a4f6fccfacbc1234e58073f180ad2e18ced" translate="yes" xml:space="preserve">
          <source>std.uni.NFKD</source>
          <target state="translated">std.uni.NFKD</target>
        </trans-unit>
        <trans-unit id="a0197f3b26cdc2186f96ba0fe3c081fe1cc87b88" translate="yes" xml:space="preserve">
          <source>std.uni.icmp</source>
          <target state="translated">std.uni.icmp</target>
        </trans-unit>
        <trans-unit id="78baa86ada93c4214599aa95c54d63e20b21f240" translate="yes" xml:space="preserve">
          <source>std.uri</source>
          <target state="translated">std.uri</target>
        </trans-unit>
        <trans-unit id="4afa182f98fb3a0d86f5bfec14062735dd20910c" translate="yes" xml:space="preserve">
          <source>std.utf</source>
          <target state="translated">std.utf</target>
        </trans-unit>
        <trans-unit id="225e3dd1adbf0acfd183fbf223c212dec82e9de9" translate="yes" xml:space="preserve">
          <source>std.uuid</source>
          <target state="translated">std.uuid</target>
        </trans-unit>
        <trans-unit id="430adfffec893f1b6b4c91fab2019018ec9c33f2" translate="yes" xml:space="preserve">
          <source>std.uuid.UUID</source>
          <target state="translated">std.uuid.UUID</target>
        </trans-unit>
        <trans-unit id="d76124e26cdc740d53466c9c3a4b557b6ba9430b" translate="yes" xml:space="preserve">
          <source>std.variant</source>
          <target state="translated">std.variant</target>
        </trans-unit>
        <trans-unit id="15e763f0c519c67a6ddbd6ea69a5516920816bc0" translate="yes" xml:space="preserve">
          <source>std.windows</source>
          <target state="translated">std.windows</target>
        </trans-unit>
        <trans-unit id="8dadddc5c218045277635fee3dd0d735df5e9b17" translate="yes" xml:space="preserve">
          <source>std.windows.charset</source>
          <target state="translated">std.windows.charset</target>
        </trans-unit>
        <trans-unit id="96b3ee241432f46794046984833998741b12d7c9" translate="yes" xml:space="preserve">
          <source>std.windows.syserror</source>
          <target state="translated">std.windows.syserror</target>
        </trans-unit>
        <trans-unit id="01dd1949ccc8a86726ce7e8c43e230e0d208be08" translate="yes" xml:space="preserve">
          <source>std.xml</source>
          <target state="translated">std.xml</target>
        </trans-unit>
        <trans-unit id="5367604fa6eee1413cba469bbabb8add02be7c87" translate="yes" xml:space="preserve">
          <source>std.xml.Item</source>
          <target state="translated">std.xml.Item</target>
        </trans-unit>
        <trans-unit id="178e5863790f6f1bd057d203d0ca3e3aeba73e44" translate="yes" xml:space="preserve">
          <source>std.xml.Tag</source>
          <target state="translated">std.xml.Tag</target>
        </trans-unit>
        <trans-unit id="788329214259f20bdfef12d45c1450203dc0affc" translate="yes" xml:space="preserve">
          <source>std.xml.Text</source>
          <target state="translated">std.xml.Text</target>
        </trans-unit>
        <trans-unit id="455a45c10eac95fbeb9d5f9c0eec4ec9d77caa0d" translate="yes" xml:space="preserve">
          <source>std.zip</source>
          <target state="translated">std.zip</target>
        </trans-unit>
        <trans-unit id="f4b8c69ec86aa50b7977e3225bb6d2c96bb9d0bc" translate="yes" xml:space="preserve">
          <source>std.zlib</source>
          <target state="translated">std.zlib</target>
        </trans-unit>
        <trans-unit id="e406470a84589bc7852a8d611531c1c99e09c0c3" translate="yes" xml:space="preserve">
          <source>std/algorithm/comparison.d</source>
          <target state="translated">std/algorithm/comparison.d</target>
        </trans-unit>
        <trans-unit id="91b113da15ad3da637bca21499a7ab8f17895ac7" translate="yes" xml:space="preserve">
          <source>std/algorithm/iteration.d</source>
          <target state="translated">std/algorithm/iteration.d</target>
        </trans-unit>
        <trans-unit id="9c6c8e12d593570739a8e1743e21b35f52ded01c" translate="yes" xml:space="preserve">
          <source>std/algorithm/mutation.d</source>
          <target state="translated">std/algorithm/mutation.d</target>
        </trans-unit>
        <trans-unit id="9aeecf79b281a4623d59e5e00df6a05bfebd46c6" translate="yes" xml:space="preserve">
          <source>std/algorithm/package.d</source>
          <target state="translated">std/algorithm/package.d</target>
        </trans-unit>
        <trans-unit id="443ffe5d235f2d699f509fcec6687d01cb405815" translate="yes" xml:space="preserve">
          <source>std/algorithm/searching.d</source>
          <target state="translated">std/algorithm/searching.d</target>
        </trans-unit>
        <trans-unit id="3a92362d8cba5059f8072a76e148dce273026b77" translate="yes" xml:space="preserve">
          <source>std/algorithm/setops.d</source>
          <target state="translated">std/algorithm/setops.d</target>
        </trans-unit>
        <trans-unit id="260e4901921cc00b7f3e418bfd97ba7415ee6d2e" translate="yes" xml:space="preserve">
          <source>std/algorithm/sorting.d</source>
          <target state="translated">std/algorithm/sorting.d</target>
        </trans-unit>
        <trans-unit id="984112afcb509427075b7077e28fb46f0b9a18a4" translate="yes" xml:space="preserve">
          <source>std/array.d</source>
          <target state="translated">std/array.d</target>
        </trans-unit>
        <trans-unit id="18af05dce5bfa51182b8e319a833c1ebd02219e2" translate="yes" xml:space="preserve">
          <source>std/ascii.d</source>
          <target state="translated">std/ascii.d</target>
        </trans-unit>
        <trans-unit id="86e899671f82983723b458386159d5a537454225" translate="yes" xml:space="preserve">
          <source>std/base64.d</source>
          <target state="translated">std/base64.d</target>
        </trans-unit>
        <trans-unit id="0144b79a235e78dfdca335233fdf76656ac4ebe9" translate="yes" xml:space="preserve">
          <source>std/bigint.d</source>
          <target state="translated">std/bigint.d</target>
        </trans-unit>
        <trans-unit id="e832d2b5bc9d6e432d7c3866faca9127f70db926" translate="yes" xml:space="preserve">
          <source>std/bitmanip.d</source>
          <target state="translated">std/bitmanip.d</target>
        </trans-unit>
        <trans-unit id="d72d3447bde1329a0c76bc9639fdb460736dd3db" translate="yes" xml:space="preserve">
          <source>std/compiler.d</source>
          <target state="translated">std/compiler.d</target>
        </trans-unit>
        <trans-unit id="f9d1721de9a098c7481a24a67925a5497aff858c" translate="yes" xml:space="preserve">
          <source>std/complex.d</source>
          <target state="translated">std/complex.d</target>
        </trans-unit>
        <trans-unit id="48e1990e3ac4d07f84397de70d2ed894a1271f79" translate="yes" xml:space="preserve">
          <source>std/concurrency.d</source>
          <target state="translated">std/concurrency.d</target>
        </trans-unit>
        <trans-unit id="10374bb6edeae703399fd1d0f0ed5bdc18632fe7" translate="yes" xml:space="preserve">
          <source>std/container/array.d</source>
          <target state="translated">std/container/array.d</target>
        </trans-unit>
        <trans-unit id="d87dd7491ff0357a2c073b4b65d3ee3fa93bcde1" translate="yes" xml:space="preserve">
          <source>std/container/binaryheap.d</source>
          <target state="translated">std/container/binaryheap.d</target>
        </trans-unit>
        <trans-unit id="b53e710f8dc50539b3a20884e095c0a4dcc67431" translate="yes" xml:space="preserve">
          <source>std/container/dlist.d</source>
          <target state="translated">std/container/dlist.d</target>
        </trans-unit>
        <trans-unit id="8d04d0673d67aa0398749d176cb04e4de9cca2fe" translate="yes" xml:space="preserve">
          <source>std/container/package.d</source>
          <target state="translated">std/container/package.d</target>
        </trans-unit>
        <trans-unit id="c36f3b0be8d164a666a5dfdfc8f69d7348235338" translate="yes" xml:space="preserve">
          <source>std/container/rbtree.d</source>
          <target state="translated">std/container/rbtree.d</target>
        </trans-unit>
        <trans-unit id="aa491a614c0f024e3496f81a75dfdc17ed43798d" translate="yes" xml:space="preserve">
          <source>std/container/slist.d</source>
          <target state="translated">std/container/slist.d</target>
        </trans-unit>
        <trans-unit id="a67bdee4716898ac7a4c48fb470a6a92d8d66ff4" translate="yes" xml:space="preserve">
          <source>std/container/util.d</source>
          <target state="translated">std/container/util.d</target>
        </trans-unit>
        <trans-unit id="7f478329770c5894f50d88f59eb9cbb71988053f" translate="yes" xml:space="preserve">
          <source>std/conv.d</source>
          <target state="translated">std/conv.d</target>
        </trans-unit>
        <trans-unit id="c65381c2f0f14e721039ceaf67d4b2db245a3abb" translate="yes" xml:space="preserve">
          <source>std/csv.d</source>
          <target state="translated">std/csv.d</target>
        </trans-unit>
        <trans-unit id="cbd5b6d3e9bcf3163fd27c02f6e204dcb5042dfd" translate="yes" xml:space="preserve">
          <source>std/datetime/date.d</source>
          <target state="translated">std/datetime/date.d</target>
        </trans-unit>
        <trans-unit id="45cb2dc32ea7d204330331b6ded35340558ed075" translate="yes" xml:space="preserve">
          <source>std/datetime/interval.d</source>
          <target state="translated">std/datetime/interval.d</target>
        </trans-unit>
        <trans-unit id="dad29c41470e08a5fd90bf2f8babe75a88546985" translate="yes" xml:space="preserve">
          <source>std/datetime/package.d</source>
          <target state="translated">std/datetime/package.d</target>
        </trans-unit>
        <trans-unit id="92b85c90658dd19c58f26599a90cdb3b178fba4c" translate="yes" xml:space="preserve">
          <source>std/datetime/stopwatch.d</source>
          <target state="translated">std/datetime/stopwatch.d</target>
        </trans-unit>
        <trans-unit id="a01c714be668e0659175acbd8ea7881daf2079ee" translate="yes" xml:space="preserve">
          <source>std/datetime/systime.d</source>
          <target state="translated">std/datetime/systime.d</target>
        </trans-unit>
        <trans-unit id="e1e85d6149bc5b2a47eee86ca14915585eceb591" translate="yes" xml:space="preserve">
          <source>std/datetime/timezone.d</source>
          <target state="translated">std/datetime/timezone.d</target>
        </trans-unit>
        <trans-unit id="ed5497f02c243d94da3036baf2ab4c5e1e3d3f34" translate="yes" xml:space="preserve">
          <source>std/demangle.d</source>
          <target state="translated">std/demangle.d</target>
        </trans-unit>
        <trans-unit id="d929a4df8fc21cf9c3e30753be8c43f5740e55dd" translate="yes" xml:space="preserve">
          <source>std/digest/crc.d</source>
          <target state="translated">std/digest/crc.d</target>
        </trans-unit>
        <trans-unit id="0f3a344af0df3ad317e1233e8d9ddc735617e942" translate="yes" xml:space="preserve">
          <source>std/digest/hmac.d</source>
          <target state="translated">std/digest/hmac.d</target>
        </trans-unit>
        <trans-unit id="8e15b4367a3b7c5ee7eb5c57417602b660000c4c" translate="yes" xml:space="preserve">
          <source>std/digest/md.d</source>
          <target state="translated">std/digest/md.d</target>
        </trans-unit>
        <trans-unit id="18242d415ba1a79bc74308d275e99d1a478ccc6d" translate="yes" xml:space="preserve">
          <source>std/digest/murmurhash.d</source>
          <target state="translated">std/digest/murmurhash.d</target>
        </trans-unit>
        <trans-unit id="71f757b6b6f46157f6ea67fe0b8f99b89d4caa10" translate="yes" xml:space="preserve">
          <source>std/digest/package.d</source>
          <target state="translated">std/digest/package.d</target>
        </trans-unit>
        <trans-unit id="26ab0fc9b494ec1588873f8db9167ae865b3257c" translate="yes" xml:space="preserve">
          <source>std/digest/ripemd.d</source>
          <target state="translated">std/digest/ripemd.d</target>
        </trans-unit>
        <trans-unit id="0543c79606124b547007ba417b5b66e62f812e27" translate="yes" xml:space="preserve">
          <source>std/digest/sha.d</source>
          <target state="translated">std/digest/sha.d</target>
        </trans-unit>
        <trans-unit id="8c31218892be1219bdaed84fd23cef835508ec77" translate="yes" xml:space="preserve">
          <source>std/encoding.d</source>
          <target state="translated">std/encoding.d</target>
        </trans-unit>
        <trans-unit id="593b55e2d9d67b0ef6778c0f863acabab46fe280" translate="yes" xml:space="preserve">
          <source>std/exception.d</source>
          <target state="translated">std/exception.d</target>
        </trans-unit>
        <trans-unit id="3a064678c0fd65ae29f52f7d3169d6d705078a87" translate="yes" xml:space="preserve">
          <source>std/experimental/allocator</source>
          <target state="translated">std/experimental/allocator</target>
        </trans-unit>
        <trans-unit id="c8e284d463128be8a6eeffea61670e60b71efbf6" translate="yes" xml:space="preserve">
          <source>std/experimental/allocator/building_blocks/affix_allocator.d</source>
          <target state="translated">std/experimental/allocator/building_blocks/affix_allocator.d</target>
        </trans-unit>
        <trans-unit id="502b0f81e7491bfab61bb09885fae05e4188c33b" translate="yes" xml:space="preserve">
          <source>std/experimental/allocator/building_blocks/aligned_block_list.d</source>
          <target state="translated">std/experimental/allocator/building_blocks/aligned_block_list.d</target>
        </trans-unit>
        <trans-unit id="2e2c7649b5ca33d0a2ffde469fbc1fea0a40e709" translate="yes" xml:space="preserve">
          <source>std/experimental/allocator/building_blocks/allocator_list.d</source>
          <target state="translated">std/experimental/allocator/building_blocks/allocator_list.d</target>
        </trans-unit>
        <trans-unit id="05d19bddfbbe4b9717f1b5c19f9e88feb8c588d7" translate="yes" xml:space="preserve">
          <source>std/experimental/allocator/building_blocks/ascending_page_allocator.d</source>
          <target state="translated">std/experimental/allocator/building_blocks/ascending_page_allocator.d</target>
        </trans-unit>
        <trans-unit id="05c96c9117b493b96b417490e34f61afb11429c3" translate="yes" xml:space="preserve">
          <source>std/experimental/allocator/building_blocks/bitmapped_block.d</source>
          <target state="translated">std/experimental/allocator/building_blocks/bitmapped_block.d</target>
        </trans-unit>
        <trans-unit id="da4d0fcafb373f662fdab3a81fbb54121fd6799d" translate="yes" xml:space="preserve">
          <source>std/experimental/allocator/building_blocks/bucketizer.d</source>
          <target state="translated">std/experimental/allocator/building_blocks/bucketizer.d</target>
        </trans-unit>
        <trans-unit id="8a1e60a1488eec2f8e56dd8ae0eace62b9e96283" translate="yes" xml:space="preserve">
          <source>std/experimental/allocator/building_blocks/fallback_allocator.d</source>
          <target state="translated">std/experimental/allocator/building_blocks/fallback_allocator.d</target>
        </trans-unit>
        <trans-unit id="2b4849699d91d8081844bbce76da1703f8da06c8" translate="yes" xml:space="preserve">
          <source>std/experimental/allocator/building_blocks/free_list.d</source>
          <target state="translated">std/experimental/allocator/building_blocks/free_list.d</target>
        </trans-unit>
        <trans-unit id="25ebf16770c16b6e8dd4a407285c56e67dc56b78" translate="yes" xml:space="preserve">
          <source>std/experimental/allocator/building_blocks/free_tree.d</source>
          <target state="translated">std/experimental/allocator/building_blocks/free_tree.d</target>
        </trans-unit>
        <trans-unit id="9fdde922b5ea56f9da725ab47b0ba7d6bbaf4453" translate="yes" xml:space="preserve">
          <source>std/experimental/allocator/building_blocks/kernighan_ritchie.d</source>
          <target state="translated">std/experimental/allocator/building_blocks/kernighan_ritchie.d</target>
        </trans-unit>
        <trans-unit id="237f58dc3fcacc0ab7d91727d22885bffed76b48" translate="yes" xml:space="preserve">
          <source>std/experimental/allocator/building_blocks/null_allocator.d</source>
          <target state="translated">std/experimental/allocator/building_blocks/null_allocator.d</target>
        </trans-unit>
        <trans-unit id="16ea9ea4194cbd933ad6c9f616b0beb0eeca026b" translate="yes" xml:space="preserve">
          <source>std/experimental/allocator/building_blocks/package.d</source>
          <target state="translated">std/experimental/allocator/building_blocks/package.d</target>
        </trans-unit>
        <trans-unit id="580794967c256da2b5272e5181bfc6f816f75eca" translate="yes" xml:space="preserve">
          <source>std/experimental/allocator/building_blocks/quantizer.d</source>
          <target state="translated">std/experimental/allocator/building_blocks/quantizer.d</target>
        </trans-unit>
        <trans-unit id="9d3952727fcbbbf929f69d69ffb8621591b03be1" translate="yes" xml:space="preserve">
          <source>std/experimental/allocator/building_blocks/region.d</source>
          <target state="translated">std/experimental/allocator/building_blocks/region.d</target>
        </trans-unit>
        <trans-unit id="f7b0839def02a96da165f94f023c997072d49fb5" translate="yes" xml:space="preserve">
          <source>std/experimental/allocator/building_blocks/scoped_allocator.d</source>
          <target state="translated">std/experimental/allocator/building_blocks/scoped_allocator.d</target>
        </trans-unit>
        <trans-unit id="4765ad89f0217fcbb1cf2f74486f1cccad2e462e" translate="yes" xml:space="preserve">
          <source>std/experimental/allocator/building_blocks/segregator.d</source>
          <target state="translated">std/experimental/allocator/building_blocks/segregator.d</target>
        </trans-unit>
        <trans-unit id="f2b37e78ee7c0fd38caa3c09511f1df1e990b131" translate="yes" xml:space="preserve">
          <source>std/experimental/allocator/building_blocks/stats_collector.d</source>
          <target state="translated">std/experimental/allocator/building_blocks/stats_collector.d</target>
        </trans-unit>
        <trans-unit id="b4088bcac99238b8edc0de7933717bdac9a4959f" translate="yes" xml:space="preserve">
          <source>std/experimental/allocator/common.d</source>
          <target state="translated">std/experimental/allocator/common.d</target>
        </trans-unit>
        <trans-unit id="e121d59baf27030ba1f901ace88a24b162859bd1" translate="yes" xml:space="preserve">
          <source>std/experimental/allocator/gc_allocator.d</source>
          <target state="translated">std/experimental/allocator/gc_allocator.d</target>
        </trans-unit>
        <trans-unit id="d6ddf722aec829c55474590b0f93512489e70cc3" translate="yes" xml:space="preserve">
          <source>std/experimental/allocator/mallocator.d</source>
          <target state="translated">std/experimental/allocator/mallocator.d</target>
        </trans-unit>
        <trans-unit id="ffd51480f9c77c3e49cd11fc5193d0c0949bd08f" translate="yes" xml:space="preserve">
          <source>std/experimental/allocator/mmap_allocator.d</source>
          <target state="translated">std/experimental/allocator/mmap_allocator.d</target>
        </trans-unit>
        <trans-unit id="1cea0da5443ec3f7addc6e04f395712cf7baea15" translate="yes" xml:space="preserve">
          <source>std/experimental/allocator/showcase.d</source>
          <target state="translated">std/experimental/allocator/showcase.d</target>
        </trans-unit>
        <trans-unit id="fe153343dbce5f4370a4f4d67a8c655920df7074" translate="yes" xml:space="preserve">
          <source>std/experimental/allocator/typed.d</source>
          <target state="translated">std/experimental/allocator/typed.d</target>
        </trans-unit>
        <trans-unit id="fe095186ee60d51dae111e361dfb9ff7ef692bf8" translate="yes" xml:space="preserve">
          <source>std/experimental/checkedint.d</source>
          <target state="translated">std/experimental/checkedint.d</target>
        </trans-unit>
        <trans-unit id="4793164110ec1f0f99d11718c8be0cda5848cf3f" translate="yes" xml:space="preserve">
          <source>std/experimental/logger/core.d</source>
          <target state="translated">std/experimental/logger/core.d</target>
        </trans-unit>
        <trans-unit id="881aee63fc3ffd029c469db254a9bc3a3a32b491" translate="yes" xml:space="preserve">
          <source>std/experimental/logger/filelogger.d</source>
          <target state="translated">std/experimental/logger/filelogger.d</target>
        </trans-unit>
        <trans-unit id="20fd070979949dc4410a673a0a0f973be1228210" translate="yes" xml:space="preserve">
          <source>std/experimental/logger/multilogger.d</source>
          <target state="translated">std/experimental/logger/multilogger.d</target>
        </trans-unit>
        <trans-unit id="d0a947f068c23cde89db246d309d8c4413cb135e" translate="yes" xml:space="preserve">
          <source>std/experimental/logger/nulllogger.d</source>
          <target state="translated">std/experimental/logger/nulllogger.d</target>
        </trans-unit>
        <trans-unit id="3d968538b26a4e703748a996b6d03c00ae366b2c" translate="yes" xml:space="preserve">
          <source>std/experimental/logger/package.d</source>
          <target state="translated">std/experimental/logger/package.d</target>
        </trans-unit>
        <trans-unit id="1a3fbe2577daa75b8526e0d60f695d349ba78152" translate="yes" xml:space="preserve">
          <source>std/experimental/typecons.d</source>
          <target state="translated">std/experimental/typecons.d</target>
        </trans-unit>
        <trans-unit id="938773ceaa46c9ba37489fde91dd48cddb2af3ab" translate="yes" xml:space="preserve">
          <source>std/file.d</source>
          <target state="translated">std/file.d</target>
        </trans-unit>
        <trans-unit id="87705f78116cc799fdf9901a408a6be3992630ba" translate="yes" xml:space="preserve">
          <source>std/format.d</source>
          <target state="translated">std/format.d</target>
        </trans-unit>
        <trans-unit id="dc7bc7a53a113849c5cd2f7fae830d70600c0582" translate="yes" xml:space="preserve">
          <source>std/functional.d</source>
          <target state="translated">std/functional.d</target>
        </trans-unit>
        <trans-unit id="ff41e81372f348502adde1dc388af43fd74be01c" translate="yes" xml:space="preserve">
          <source>std/getopt.d</source>
          <target state="translated">std/getopt.d</target>
        </trans-unit>
        <trans-unit id="ebeb224a148d0f61232ae08022981dc2d65b6451" translate="yes" xml:space="preserve">
          <source>std/json.d</source>
          <target state="translated">std/json.d</target>
        </trans-unit>
        <trans-unit id="dd691263596f1f2fa7c9cf3ce5ddddf1583f8efb" translate="yes" xml:space="preserve">
          <source>std/math.d</source>
          <target state="translated">std/math.d</target>
        </trans-unit>
        <trans-unit id="a0e624399a3d171faf0ee590173fbce78cb89cd8" translate="yes" xml:space="preserve">
          <source>std/mathspecial.d</source>
          <target state="translated">std/mathspecial.d</target>
        </trans-unit>
        <trans-unit id="2e2a1c65aff0927e1dcf75bed5fe8666894afb94" translate="yes" xml:space="preserve">
          <source>std/meta.d</source>
          <target state="translated">std/meta.d</target>
        </trans-unit>
        <trans-unit id="7e3d4596c6e96bf85e4a0243e291b7bbf12c2674" translate="yes" xml:space="preserve">
          <source>std/mmfile.d</source>
          <target state="translated">std/mmfile.d</target>
        </trans-unit>
        <trans-unit id="514be3483bad817c70ef76ff8d7ea7dd3d60a9f3" translate="yes" xml:space="preserve">
          <source>std/net/curl.d</source>
          <target state="translated">std/net/curl.d</target>
        </trans-unit>
        <trans-unit id="1f0119448b1b4354220b44c91db2801058a2aff3" translate="yes" xml:space="preserve">
          <source>std/net/isemail.d</source>
          <target state="translated">std/net/isemail.d</target>
        </trans-unit>
        <trans-unit id="69fc22b16310dabfc37ab29f6f8414660b6ff713" translate="yes" xml:space="preserve">
          <source>std/numeric.d</source>
          <target state="translated">std/numeric.d</target>
        </trans-unit>
        <trans-unit id="1b7c5fd84f9ade48aca0e5efd6371b7bf242fa23" translate="yes" xml:space="preserve">
          <source>std/outbuffer.d</source>
          <target state="translated">std/outbuffer.d</target>
        </trans-unit>
        <trans-unit id="d06358c61e73c0d8ed1ed14613ac20c887e2e14f" translate="yes" xml:space="preserve">
          <source>std/parallelism.d</source>
          <target state="translated">std/parallelism.d</target>
        </trans-unit>
        <trans-unit id="5316bb675b6496aec253521456b2fa7f86ce41db" translate="yes" xml:space="preserve">
          <source>std/path.d</source>
          <target state="translated">std/path.d</target>
        </trans-unit>
        <trans-unit id="d1493b2d1ef5b4dd255179b047a14353feb25b8b" translate="yes" xml:space="preserve">
          <source>std/process.d</source>
          <target state="translated">std/process.d</target>
        </trans-unit>
        <trans-unit id="136020b54cfe201de1bf53f03de639352fc69274" translate="yes" xml:space="preserve">
          <source>std/random.d</source>
          <target state="translated">std/random.d</target>
        </trans-unit>
        <trans-unit id="0535a01e03c43f20e0d1733efb504274407f7913" translate="yes" xml:space="preserve">
          <source>std/range/interfaces.d</source>
          <target state="translated">std/range/interfaces.d</target>
        </trans-unit>
        <trans-unit id="a0fb795b1491de0392b43c95c212abf8f57d8430" translate="yes" xml:space="preserve">
          <source>std/range/package.d</source>
          <target state="translated">std/range/package.d</target>
        </trans-unit>
        <trans-unit id="01bc50503e3bb00f1559619cdf1ccb30bd197cd0" translate="yes" xml:space="preserve">
          <source>std/range/primitives.d</source>
          <target state="translated">std/range/primitives.d</target>
        </trans-unit>
        <trans-unit id="495561b8c801e134496c9f63c0e490a9cc370c7d" translate="yes" xml:space="preserve">
          <source>std/regex/package.d</source>
          <target state="translated">std/regex/package.d</target>
        </trans-unit>
        <trans-unit id="0fa0aeb4b3544347d2c84af010c1c2db6e9709cd" translate="yes" xml:space="preserve">
          <source>std/signals.d</source>
          <target state="translated">std/signals.d</target>
        </trans-unit>
        <trans-unit id="b4c28b7f5326add5952ea2c09242f07ff5d89d58" translate="yes" xml:space="preserve">
          <source>std/socket.d</source>
          <target state="translated">std/socket.d</target>
        </trans-unit>
        <trans-unit id="05bffd7ca2b450f8c909944f9a6ba7b08d6444fd" translate="yes" xml:space="preserve">
          <source>std/stdint.d</source>
          <target state="translated">std/stdint.d</target>
        </trans-unit>
        <trans-unit id="6894338f242d7857fb91fcd59b9cf6d5cc0e10f0" translate="yes" xml:space="preserve">
          <source>std/stdio.d</source>
          <target state="translated">std/stdio.d</target>
        </trans-unit>
        <trans-unit id="809f5da512f8393efd6face5274ea7d73ac23403" translate="yes" xml:space="preserve">
          <source>std/string.d</source>
          <target state="translated">std/string.d</target>
        </trans-unit>
        <trans-unit id="9c2575400cf4ece7c5c6844991d6931bbdd62ec0" translate="yes" xml:space="preserve">
          <source>std/system.d</source>
          <target state="translated">std/system.d</target>
        </trans-unit>
        <trans-unit id="9af44bc7bb26765eec6e8d2d5604c00fd7218f68" translate="yes" xml:space="preserve">
          <source>std/traits.d</source>
          <target state="translated">std/traits.d</target>
        </trans-unit>
        <trans-unit id="2bc8a743cfb4cdfcc7d0c9b23c02b24192f82bbe" translate="yes" xml:space="preserve">
          <source>std/typecons.d</source>
          <target state="translated">std/typecons.d</target>
        </trans-unit>
        <trans-unit id="76bf16183a7373851b5323643e457c2d4034c253" translate="yes" xml:space="preserve">
          <source>std/uni.d</source>
          <target state="translated">std/uni.d</target>
        </trans-unit>
        <trans-unit id="c9792b6fba39a8b7f867d28a1b3ec58e1f9e1699" translate="yes" xml:space="preserve">
          <source>std/uri.d</source>
          <target state="translated">std/uri.d</target>
        </trans-unit>
        <trans-unit id="76b03bb5b2a4052a522d75dd996eca5a09939ff8" translate="yes" xml:space="preserve">
          <source>std/utf.d</source>
          <target state="translated">std/utf.d</target>
        </trans-unit>
        <trans-unit id="eaaf63f3bee08164658552c38deb741620675903" translate="yes" xml:space="preserve">
          <source>std/uuid.d</source>
          <target state="translated">std/uuid.d</target>
        </trans-unit>
        <trans-unit id="b617d79d3d9f806c26062b247cfe06bdeae96624" translate="yes" xml:space="preserve">
          <source>std/variant.d</source>
          <target state="translated">std/variant.d</target>
        </trans-unit>
        <trans-unit id="9fa534584aacfb984e11c9eb49a7174e1fa53254" translate="yes" xml:space="preserve">
          <source>std/xml.d</source>
          <target state="translated">std/xml.d</target>
        </trans-unit>
        <trans-unit id="0d5d74aec94f2693cc989ad23f35e1212652e731" translate="yes" xml:space="preserve">
          <source>std/zip.d</source>
          <target state="translated">std/zip.d</target>
        </trans-unit>
        <trans-unit id="793174696dc5ce49ab6bd0e595042b5ba41350bd" translate="yes" xml:space="preserve">
          <source>std/zlib.d</source>
          <target state="translated">std/zlib.d</target>
        </trans-unit>
        <trans-unit id="fd7c7f5524202d89c131ae3494c359d3a2bd35b9" translate="yes" xml:space="preserve">
          <source>stderr as a &lt;a href=&quot;#File&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">stderr как &lt;a href=&quot;#File&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c61ab8664bdcc5ad16dece5d5a7799b97c528165" translate="yes" xml:space="preserve">
          <source>stdin as a &lt;a href=&quot;#File&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">стандартный как &lt;a href=&quot;#File&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="68540e76b98146991e1a52893b3b43d06d4e9fe8" translate="yes" xml:space="preserve">
          <source>stdint.h</source>
          <target state="translated">stdint.h</target>
        </trans-unit>
        <trans-unit id="d6be04c2e0152fb3da44695e948821acd4c1b64b" translate="yes" xml:space="preserve">
          <source>stdout as a &lt;a href=&quot;#File&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">стандартный вывод в виде &lt;a href=&quot;#File&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="456c6aa47eb6e4079ca7d74ec22558ce506ef9de" translate="yes" xml:space="preserve">
          <source>stepSize</source>
          <target state="translated">stepSize</target>
        </trans-unit>
        <trans-unit id="c4d846503265324347e593b1a8e1a07fc0631489" translate="yes" xml:space="preserve">
          <source>stop should not be called if the StopWatch is not running.</source>
          <target state="translated">Стоп не должен вызываться,если секундомер не работает.</target>
        </trans-unit>
        <trans-unit id="0b6031dec034a5639d7a7a9cef9896155d32b7d4" translate="yes" xml:space="preserve">
          <source>storage class</source>
          <target state="translated">класс хранения</target>
        </trans-unit>
        <trans-unit id="c75d645d4eeb41f2fceb01a0c80d09dfd7f2c858" translate="yes" xml:space="preserve">
          <source>storage class for template onemember's</source>
          <target state="translated">класс хранения шаблона на запоминающем устройстве</target>
        </trans-unit>
        <trans-unit id="0a013fea765dde94b82e4350d0e238a8c43ad629" translate="yes" xml:space="preserve">
          <source>storage class to merge into</source>
          <target state="translated">класс хранения для объединения в</target>
        </trans-unit>
        <trans-unit id="1f1d536f125d47fb78122eb0a10a7069c27826c7" translate="yes" xml:space="preserve">
          <source>storage class with STC.scope_ or STC.return_ OR'd in</source>
          <target state="translated">класс хранения с STC.scope_или STC.return_ИЛИ 'd в</target>
        </trans-unit>
        <trans-unit id="507ec7cdab8c3b93364e510e8e313d96d351cfa5" translate="yes" xml:space="preserve">
          <source>storage classes will be added to the made temporary variable</source>
          <target state="translated">классы хранения будут добавлены к сделанной временной переменной</target>
        </trans-unit>
        <trans-unit id="b8c5c27d87f1bc467762e99984c6576bdf36481e" translate="yes" xml:space="preserve">
          <source>storage implementation struct</source>
          <target state="translated">структурное подразделение хранилища</target>
        </trans-unit>
        <trans-unit id="b33a88913c6e6f8fbe363aed204cf7e0257abd86" translate="yes" xml:space="preserve">
          <source>storage is allocated for it (such as a local variable on the stack), which places the pointer in the Undefined state</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a21295d813c26eb287fc6b59454fb37858d63e6" translate="yes" xml:space="preserve">
          <source>store</source>
          <target state="translated">store</target>
        </trans-unit>
        <trans-unit id="ecb252044b5ea0f679ee78ec1a12904739e2904d" translate="yes" xml:space="preserve">
          <source>string</source>
          <target state="translated">string</target>
        </trans-unit>
        <trans-unit id="f26fb3fb626fedee105bcf35e6bbb19ae741e033" translate="yes" xml:space="preserve">
          <source>string (must be valid UTF)</source>
          <target state="translated">строка (должна быть действительной UTF)</target>
        </trans-unit>
        <trans-unit id="28b5385072e1b7b27f01c61c24d7ffde3c31abea" translate="yes" xml:space="preserve">
          <source>string (not zero terminated)</source>
          <target state="translated">строка (не завершённая нулем)</target>
        </trans-unit>
        <trans-unit id="2c3dc6c98020ade1f5fe7e0eff36c9428f07edcb" translate="yes" xml:space="preserve">
          <source>string &lt;code&gt;base&lt;/code&gt;</source>
          <target state="translated">струнная &lt;code&gt;base&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="aea527f72bdf541186bb92a4424970e706cbbda7" translate="yes" xml:space="preserve">
          <source>string &lt;code&gt;content&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;content&lt;/code&gt; строки</target>
        </trans-unit>
        <trans-unit id="237a94561e23d6abd8348fbfa5dac39bf436be16" translate="yes" xml:space="preserve">
          <source>string &lt;code&gt;contentType&lt;/code&gt;</source>
          <target state="translated">строка &lt;code&gt;contentType&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fb2cff51f97e0a366d063cb5d584e9d1ad80dcac" translate="yes" xml:space="preserve">
          <source>string &lt;code&gt;ddocText&lt;/code&gt;</source>
          <target state="translated">строка &lt;code&gt;ddocText&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="23f6f893f9ef495ccf9e6f9589ed2d91491827e0" translate="yes" xml:space="preserve">
          <source>string &lt;code&gt;defaultValue&lt;/code&gt;</source>
          <target state="translated">строка &lt;code&gt;defaultValue&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1ada448c78c1fce41246ff4859173b9bc4f93a65" translate="yes" xml:space="preserve">
          <source>string &lt;code&gt;description&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;description&lt;/code&gt; строки</target>
        </trans-unit>
        <trans-unit id="4042b16f654f73d8026a8ef700f4b8a4d865d7df" translate="yes" xml:space="preserve">
          <source>string &lt;code&gt;dstName&lt;/code&gt;</source>
          <target state="translated">строка &lt;code&gt;dstName&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c905476c2719651c5b791b156f50ab30f2f8841f" translate="yes" xml:space="preserve">
          <source>string &lt;code&gt;file&lt;/code&gt;</source>
          <target state="translated">строковый &lt;code&gt;file&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3d3807df4fe4e3b23cee2dccf49f9065ae22936b" translate="yes" xml:space="preserve">
          <source>string &lt;code&gt;filename&lt;/code&gt;</source>
          <target state="translated">строка &lt;code&gt;filename&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b78c04c93f9981f97c0009a3daf93328d8c52c81" translate="yes" xml:space="preserve">
          <source>string &lt;code&gt;flag&lt;/code&gt;</source>
          <target state="translated">строковый &lt;code&gt;flag&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="71e37d3c69cf0dc43f9ba84950e34a3820a78056" translate="yes" xml:space="preserve">
          <source>string &lt;code&gt;fn&lt;/code&gt;</source>
          <target state="translated">строка &lt;code&gt;fn&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="44e8aca992bfd595a5d9471a2c9760a909d8c742" translate="yes" xml:space="preserve">
          <source>string &lt;code&gt;format&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;format&lt;/code&gt; строки</target>
        </trans-unit>
        <trans-unit id="c212ccae1a0b3f1c8c8fd9c41671309f9227d40f" translate="yes" xml:space="preserve">
          <source>string &lt;code&gt;formatString&lt;/code&gt;</source>
          <target state="translated">строка &lt;code&gt;formatString&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4f87f6c504edf900d50a51ed621a91146f42b795" translate="yes" xml:space="preserve">
          <source>string &lt;code&gt;funcname&lt;/code&gt;</source>
          <target state="translated">строка &lt;code&gt;funcname&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1cfcdc4350177ef18937638b3d0ceb8b0ea9883b" translate="yes" xml:space="preserve">
          <source>string &lt;code&gt;helpText&lt;/code&gt;</source>
          <target state="translated">строка &lt;code&gt;helpText&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5674a6efd395a6b7be83136512cd506fce16f0c7" translate="yes" xml:space="preserve">
          <source>string &lt;code&gt;inputPath&lt;/code&gt;</source>
          <target state="translated">строка &lt;code&gt;inputPath&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="57b11b41a07c596d3226124d8761998491057373" translate="yes" xml:space="preserve">
          <source>string &lt;code&gt;interior&lt;/code&gt;</source>
          <target state="translated">струнный &lt;code&gt;interior&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="92dc4f342ced3d283b50a30f3b0e63161f90c624" translate="yes" xml:space="preserve">
          <source>string &lt;code&gt;loadFromPath&lt;/code&gt;</source>
          <target state="translated">строка &lt;code&gt;loadFromPath&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e709e008b351205e8ff5aeac50adf7751a92945c" translate="yes" xml:space="preserve">
          <source>string &lt;code&gt;msg&lt;/code&gt;</source>
          <target state="translated">строка &lt;code&gt;msg&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b0baf85d1dbd9cb09477d43a6baf65cff575aa04" translate="yes" xml:space="preserve">
          <source>string &lt;code&gt;name&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; строки</target>
        </trans-unit>
        <trans-unit id="9a44bce42edca96c52ec8d00a014849b4ebd89ec" translate="yes" xml:space="preserve">
          <source>string &lt;code&gt;path&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; строки</target>
        </trans-unit>
        <trans-unit id="1d81daf93e128f4327a266c1895df84d71a40855" translate="yes" xml:space="preserve">
          <source>string &lt;code&gt;pathname&lt;/code&gt;</source>
          <target state="translated">строка &lt;code&gt;pathname&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="40ce11b2e8137812ba041908dfd68ac665036115" translate="yes" xml:space="preserve">
          <source>string &lt;code&gt;pattern&lt;/code&gt;</source>
          <target state="translated">струнный &lt;code&gt;pattern&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="04a57ba4383475f44438e8f95c9d77f06b9365ea" translate="yes" xml:space="preserve">
          <source>string &lt;code&gt;prefix&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;prefix&lt;/code&gt; строки</target>
        </trans-unit>
        <trans-unit id="750d7cf29e760fb2690fbfc7e616e38016733fd4" translate="yes" xml:space="preserve">
          <source>string &lt;code&gt;s&lt;/code&gt;</source>
          <target state="translated">строка &lt;code&gt;s&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c9004eb20c382fe0ba124f2e385a788e847b9a5f" translate="yes" xml:space="preserve">
          <source>string &lt;code&gt;saveToPath&lt;/code&gt;</source>
          <target state="translated">строка &lt;code&gt;saveToPath&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="732169908011d707ca4011fb7674040db961ba40" translate="yes" xml:space="preserve">
          <source>string &lt;code&gt;shellPath&lt;/code&gt;</source>
          <target state="translated">строка &lt;code&gt;shellPath&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b89dbf2b91c8151432d06e6dc1d2728a35e7dd5b" translate="yes" xml:space="preserve">
          <source>string &lt;code&gt;stdName&lt;/code&gt;</source>
          <target state="translated">строка &lt;code&gt;stdName&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fdd7adf66455118c8557481caef5a6b6ac681110" translate="yes" xml:space="preserve">
          <source>string &lt;code&gt;style&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5d68c472fab6cd55f6fd252ed5bf716563cf29a" translate="yes" xml:space="preserve">
          <source>string &lt;code&gt;subName&lt;/code&gt;</source>
          <target state="translated">Строка &lt;code&gt;subName&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d2ddfac5e2d239c564f8e645ca72b4e9d1ea0135" translate="yes" xml:space="preserve">
          <source>string &lt;code&gt;text&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;text&lt;/code&gt; строки</target>
        </trans-unit>
        <trans-unit id="8743a29f72bf04306bc900336c20b01fd1bc2e8a" translate="yes" xml:space="preserve">
          <source>string &lt;code&gt;tzDatabaseDir&lt;/code&gt;</source>
          <target state="translated">строка &lt;code&gt;tzDatabaseDir&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3867646aed849ff2578866cc4b908c6602b67222" translate="yes" xml:space="preserve">
          <source>string &lt;code&gt;val&lt;/code&gt;</source>
          <target state="translated">строка &lt;code&gt;val&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="34d38570f682a723b7e67e790276d6a009a93456" translate="yes" xml:space="preserve">
          <source>string &lt;code&gt;w&lt;/code&gt;</source>
          <target state="translated">строка &lt;code&gt;w&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b9cb32e644a2fba885729011857c2e4d808dfc4e" translate="yes" xml:space="preserve">
          <source>string &lt;code&gt;windowsZonesXMLText&lt;/code&gt;</source>
          <target state="translated">строка &lt;code&gt;windowsZonesXMLText&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8583a5373bcfb28eb37a7ef7ad295d40ef2e1ed9" translate="yes" xml:space="preserve">
          <source>string &lt;code&gt;xmlText_&lt;/code&gt;</source>
          <target state="translated">строка &lt;code&gt;xmlText_&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="67b849170d3c524b78a91c96b952b7568fa7227b" translate="yes" xml:space="preserve">
          <source>string &lt;strong id=&quot;alignForSize&quot;&gt;alignForSize&lt;/strong&gt;(E...)(const char[][] names...);</source>
          <target state="translated">string &lt;strong id=&quot;alignForSize&quot;&gt;alignForSize&lt;/strong&gt; (E ...) (const char [] [] names ...);</target>
        </trans-unit>
        <trans-unit id="7446935e29637cc5f63b2877261f522c7b3935dc" translate="yes" xml:space="preserve">
          <source>string &lt;strong id=&quot;arraySep&quot;&gt;arraySep&lt;/strong&gt;;</source>
          <target state="translated">строка &lt;strong id=&quot;arraySep&quot;&gt;arraySep&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="98195ee14a08b2666e0c5eb284e0262521c32de1" translate="yes" xml:space="preserve">
          <source>string &lt;strong id=&quot;canonicalName&quot;&gt;canonicalName&lt;/strong&gt;;</source>
          <target state="translated">строка &lt;strong id=&quot;canonicalName&quot;&gt;canonicalName&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="b74cf6813c792a5cf78dd8f35f817b5368c94737" translate="yes" xml:space="preserve">
          <source>string &lt;strong id=&quot;collectExceptionMsg&quot;&gt;collectExceptionMsg&lt;/strong&gt;(T = Exception, E)(lazy E expression);</source>
          <target state="translated">строка &lt;strong id=&quot;collectExceptionMsg&quot;&gt;collectExceptionMsg&lt;/strong&gt; (T = Exception, E) (ленивое выражение E);</target>
        </trans-unit>
        <trans-unit id="6366b143f001f2ad4c1711d50a46e92bb1fb859d" translate="yes" xml:space="preserve">
          <source>string &lt;strong id=&quot;comment&quot;&gt;comment&lt;/strong&gt;;</source>
          <target state="translated">строковый &lt;strong id=&quot;comment&quot;&gt;комментарий&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="e9e13fd70e26c08fc8843a7e49c7984e165e082a" translate="yes" xml:space="preserve">
          <source>string &lt;strong id=&quot;decode&quot;&gt;decode&lt;/strong&gt;(Char)(scope const(Char)[] encodedURI)</source>
          <target state="translated">&lt;strong id=&quot;decode&quot;&gt;декодирование&lt;/strong&gt; строки (Char) (объем const (Char) [] encodedURI)</target>
        </trans-unit>
        <trans-unit id="3c568f4b3fa2432f9ef9a8001495b7da1188d924" translate="yes" xml:space="preserve">
          <source>string &lt;strong id=&quot;decodeComponent&quot;&gt;decodeComponent&lt;/strong&gt;(Char)(scope const(Char)[] encodedURIComponent)</source>
          <target state="translated">string &lt;strong id=&quot;decodeComponent&quot;&gt;decodeComponent&lt;/strong&gt; (Char) (область действия const (Char) [] encodedURIComponent)</target>
        </trans-unit>
        <trans-unit id="589ebc9bee8747136256615f41b49210185bb278" translate="yes" xml:space="preserve">
          <source>string &lt;strong id=&quot;determineDefaultCompiler&quot;&gt;determineDefaultCompiler&lt;/strong&gt;();</source>
          <target state="translated">string &lt;strong id=&quot;determineDefaultCompiler&quot;&gt;defineDefaultCompiler&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="dee002a36f9c6fbb503b038951a4f3c421142105" translate="yes" xml:space="preserve">
          <source>string &lt;strong id=&quot;encode&quot;&gt;encode&lt;/strong&gt;(Char)(scope const(Char)[] uri)</source>
          <target state="translated">строковое &lt;strong id=&quot;encode&quot;&gt;кодирование&lt;/strong&gt; (Char) (область действия const (Char) [] uri)</target>
        </trans-unit>
        <trans-unit id="47638065656881754ae194ff16c722a1f690aaac" translate="yes" xml:space="preserve">
          <source>string &lt;strong id=&quot;encodeComponent&quot;&gt;encodeComponent&lt;/strong&gt;(Char)(scope const(Char)[] uriComponent)</source>
          <target state="translated">string &lt;strong id=&quot;encodeComponent&quot;&gt;encodeComponent&lt;/strong&gt; (Char) (область действия const (Char) [] uriComponent)</target>
        </trans-unit>
        <trans-unit id="23c9180ec248520d13a16f372560a575a26f8746" translate="yes" xml:space="preserve">
          <source>string &lt;strong id=&quot;endOfOptions&quot;&gt;endOfOptions&lt;/strong&gt;;</source>
          <target state="translated">строка &lt;strong id=&quot;endOfOptions&quot;&gt;endOfOptions&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="c3ba93ef0ed2bbd5f5156a0ab99a78d2c3e0a707" translate="yes" xml:space="preserve">
          <source>string &lt;strong id=&quot;epilog&quot;&gt;epilog&lt;/strong&gt;;</source>
          <target state="translated">струнный &lt;strong id=&quot;epilog&quot;&gt;эпилог&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="425930b77578e4cbf3fdb6effe9f8f7cdf5dfa4c" translate="yes" xml:space="preserve">
          <source>string &lt;strong id=&quot;file&quot;&gt;file&lt;/strong&gt;;</source>
          <target state="translated">строковый &lt;strong id=&quot;file&quot;&gt;файл&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="3b9cf7e2e95b8e724bef6bf62b530244ea9af779" translate="yes" xml:space="preserve">
          <source>string &lt;strong id=&quot;findDMDConfig&quot;&gt;findDMDConfig&lt;/strong&gt;(const(char)[] dmdFilePath);</source>
          <target state="translated">строка &lt;strong id=&quot;findDMDConfig&quot;&gt;findDMDConfig&lt;/strong&gt; (const (char) [] dmdFilePath);</target>
        </trans-unit>
        <trans-unit id="292c1eaac05dfc4e31ae2892f55ff9ca6a68df39" translate="yes" xml:space="preserve">
          <source>string &lt;strong id=&quot;findLDCConfig&quot;&gt;findLDCConfig&lt;/strong&gt;(const(char)[] ldcFilePath);</source>
          <target state="translated">строка &lt;strong id=&quot;findLDCConfig&quot;&gt;findLDCConfig&lt;/strong&gt; (const (char) [] ldcFilePath);</target>
        </trans-unit>
        <trans-unit id="40390be53c5563d0b9de050f0fde5cd085f1a59b" translate="yes" xml:space="preserve">
          <source>string &lt;strong id=&quot;flag&quot;&gt;flag&lt;/strong&gt;;</source>
          <target state="translated">строковый &lt;strong id=&quot;flag&quot;&gt;флаг&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="cce383dc9982e9e6e64c2ea2d611ab96387f4989" translate="yes" xml:space="preserve">
          <source>string &lt;strong id=&quot;forwardToMember&quot;&gt;forwardToMember&lt;/strong&gt;(string member, string[] funs...);</source>
          <target state="translated">string &lt;strong id=&quot;forwardToMember&quot;&gt;forwardToMember&lt;/strong&gt; (строковый член, string [] funs ...);</target>
        </trans-unit>
        <trans-unit id="d9d1ddc743949fbd742fea7e0260deca6b1ac070" translate="yes" xml:space="preserve">
          <source>string &lt;strong id=&quot;fromMBSz&quot;&gt;fromMBSz&lt;/strong&gt;(immutable(char)* s, int codePage = 0);</source>
          <target state="translated">строка &lt;strong id=&quot;fromMBSz&quot;&gt;fromMBSz&lt;/strong&gt; (неизменяемый (char) * s, int codePage = 0);</target>
        </trans-unit>
        <trans-unit id="640a0305088fb7c4b05ec72a772ce0b588b97405" translate="yes" xml:space="preserve">
          <source>string &lt;strong id=&quot;funcName&quot;&gt;funcName&lt;/strong&gt;;</source>
          <target state="translated">строка &lt;strong id=&quot;funcName&quot;&gt;funcName&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="8b47f53b9102c14ad7824499a9866489c115dfd5" translate="yes" xml:space="preserve">
          <source>string &lt;strong id=&quot;getFilename&quot;&gt;getFilename&lt;/strong&gt;();</source>
          <target state="translated">строка &lt;strong id=&quot;getFilename&quot;&gt;getFilename&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="4ae38980ca66b2e081b595e3206da73ed0fd4a0e" translate="yes" xml:space="preserve">
          <source>string &lt;strong id=&quot;help&quot;&gt;help&lt;/strong&gt;;</source>
          <target state="translated">струнная &lt;strong id=&quot;help&quot;&gt;помощь&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="a75a9967dfd59c94ec118354cc469bcd6012f5e3" translate="yes" xml:space="preserve">
          <source>string &lt;strong id=&quot;helpText&quot;&gt;helpText&lt;/strong&gt;;</source>
          <target state="translated">строка &lt;strong id=&quot;helpText&quot;&gt;helpText&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="aa3eeea5b8c70f7293ff22e0d53add1a7e956e15" translate="yes" xml:space="preserve">
          <source>string &lt;strong id=&quot;input&quot;&gt;input&lt;/strong&gt;;</source>
          <target state="translated">строковый &lt;strong id=&quot;input&quot;&gt;ввод&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="7215483b9c5bf27b1941c016c04d5064766bec28" translate="yes" xml:space="preserve">
          <source>string &lt;strong id=&quot;moduleName&quot;&gt;moduleName&lt;/strong&gt;;</source>
          <target state="translated">строка &lt;strong id=&quot;moduleName&quot;&gt;moduleName&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="754d5d1c610e6f17bfcf1c42df764392ae8d7aac" translate="yes" xml:space="preserve">
          <source>string &lt;strong id=&quot;msg&quot;&gt;msg&lt;/strong&gt;;</source>
          <target state="translated">строка &lt;strong id=&quot;msg&quot;&gt;сообщения&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="84e5fc4dce48ec922163d6898debbe80ca8d8492" translate="yes" xml:space="preserve">
          <source>string &lt;strong id=&quot;name&quot;&gt;name&lt;/strong&gt;;</source>
          <target state="translated">&lt;strong id=&quot;name&quot;&gt;имя&lt;/strong&gt; строки ;</target>
        </trans-unit>
        <trans-unit id="7cb91ca188892b73cccd72e2bf2167999e87e50c" translate="yes" xml:space="preserve">
          <source>string &lt;strong id=&quot;optLong&quot;&gt;optLong&lt;/strong&gt;;</source>
          <target state="translated">строка &lt;strong id=&quot;optLong&quot;&gt;optLong&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="f2117712bd15a5355474204ac0e8a5a2fb5932d4" translate="yes" xml:space="preserve">
          <source>string &lt;strong id=&quot;optShort&quot;&gt;optShort&lt;/strong&gt;;</source>
          <target state="translated">строка &lt;strong id=&quot;optShort&quot;&gt;optShort&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="f0130e59cffce865fd4a2a9da7933e494af30a16" translate="yes" xml:space="preserve">
          <source>string &lt;strong id=&quot;prettyFuncName&quot;&gt;prettyFuncName&lt;/strong&gt;;</source>
          <target state="translated">строка &lt;strong id=&quot;prettyFuncName&quot;&gt;prettyFuncName&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="6c05d39bfbc7bdea62b9f043d2fcf876d495753f" translate="yes" xml:space="preserve">
          <source>string &lt;strong id=&quot;prettyPrint&quot;&gt;prettyPrint&lt;/strong&gt;(Module m);</source>
          <target state="translated">строка &lt;strong id=&quot;prettyPrint&quot;&gt;prettyPrint&lt;/strong&gt; (модуль m);</target>
        </trans-unit>
        <trans-unit id="c19541de03e79ccfc808f890f2ee0f7e1533f07e" translate="yes" xml:space="preserve">
          <source>string &lt;strong id=&quot;prolog&quot;&gt;prolog&lt;/strong&gt;;</source>
          <target state="translated">струнный &lt;strong id=&quot;prolog&quot;&gt;пролог&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="1054828b4e70a02f741defc3bd8c2a0c52aa0146" translate="yes" xml:space="preserve">
          <source>string &lt;strong id=&quot;protocolName&quot;&gt;protocolName&lt;/strong&gt;;</source>
          <target state="translated">строка &lt;strong id=&quot;protocolName&quot;&gt;protocolName&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="8e41e12a2193a820c7b48a8a4e62e6220fc663eb" translate="yes" xml:space="preserve">
          <source>string &lt;strong id=&quot;readLink&quot;&gt;readLink&lt;/strong&gt;(R)(R link)</source>
          <target state="translated">строка &lt;strong id=&quot;readLink&quot;&gt;readLink&lt;/strong&gt; (R) (ссылка R)</target>
        </trans-unit>
        <trans-unit id="dec9168262e98d9c7ee09e913a4f3c82b843be9d" translate="yes" xml:space="preserve">
          <source>string &lt;strong id=&quot;reason&quot;&gt;reason&lt;/strong&gt;;</source>
          <target state="translated">строковая &lt;strong id=&quot;reason&quot;&gt;причина&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="8c8af7f5ebc4e27800d80738efb22345108ca61d" translate="yes" xml:space="preserve">
          <source>string &lt;strong id=&quot;relativePath&quot;&gt;relativePath&lt;/strong&gt;(CaseSensitive cs = CaseSensitive.osDefault)(string path, lazy string base = getcwd());</source>
          <target state="translated">Строка &lt;strong id=&quot;relativePath&quot;&gt;relativePath&lt;/strong&gt; (CaseSensitive CS = CaseSensitive.osDefault) (строка путь, ленивая строка базовой = getcwd ());</target>
        </trans-unit>
        <trans-unit id="3ba114ab9f8d206718aee876bfc1b4826ce6e1c0" translate="yes" xml:space="preserve">
          <source>string &lt;strong id=&quot;stcToString&quot;&gt;stcToString&lt;/strong&gt;(ref StorageClass stc);</source>
          <target state="translated">строка &lt;strong id=&quot;stcToString&quot;&gt;stcToString&lt;/strong&gt; (ref StorageClass stc);</target>
        </trans-unit>
        <trans-unit id="9c7e8bde8b903ac3130c1700baa879248756ea0a" translate="yes" xml:space="preserve">
          <source>string &lt;strong id=&quot;text&quot;&gt;text&lt;/strong&gt;(T...)(T args)</source>
          <target state="translated">&lt;strong id=&quot;text&quot;&gt;текст&lt;/strong&gt; строки (T ...) (T args)</target>
        </trans-unit>
        <trans-unit id="da529493a12f9cf49f0508aed45daf89002cc7b8" translate="yes" xml:space="preserve">
          <source>string &lt;strong id=&quot;toHex&quot;&gt;toHex&lt;/strong&gt;(const(BigInt) x);</source>
          <target state="translated">строка &lt;strong id=&quot;toHex&quot;&gt;toHex&lt;/strong&gt; (const (BigInt) x);</target>
        </trans-unit>
        <trans-unit id="88d40160e975558df99445d1d9b9003a5ac6cf71" translate="yes" xml:space="preserve">
          <source>string &lt;strong id=&quot;toHexString&quot;&gt;toHexString&lt;/strong&gt;(LetterCase letterCase, Order order = Order.increasing)(in ubyte[] digest);</source>
          <target state="translated">строка &lt;strong id=&quot;toHexString&quot;&gt;toHexString&lt;/strong&gt; (LetterCase letterCase, Order order = Order.increasing) (в дайджесте ubyte []);</target>
        </trans-unit>
        <trans-unit id="b7c72bcccd23a63550f6d32675fa7fc94e8a401c" translate="yes" xml:space="preserve">
          <source>string &lt;strong id=&quot;toHexString&quot;&gt;toHexString&lt;/strong&gt;(Order order = Order.increasing, LetterCase letterCase = LetterCase.upper)(in ubyte[] digest);</source>
          <target state="translated">строка &lt;strong id=&quot;toHexString&quot;&gt;toHexString&lt;/strong&gt; (Order order = Order.increasing, LetterCase letterCase = LetterCase.upper) (в ubyte [] дайджесте);</target>
        </trans-unit>
        <trans-unit id="bfa30fa944928ae557fff6e3080c73ac869c8680" translate="yes" xml:space="preserve">
          <source>string &lt;strong id=&quot;toSourceCode&quot;&gt;toSourceCode&lt;/strong&gt;(string funcName = &quot;&quot;);</source>
          <target state="translated">string &lt;strong id=&quot;toSourceCode&quot;&gt;toSourceCode&lt;/strong&gt; (string funcName = &quot;&quot;);</target>
        </trans-unit>
        <trans-unit id="628f2ec531bcef75723d55ff0f041953e7abdb90" translate="yes" xml:space="preserve">
          <source>string &lt;strong id=&quot;toString&quot;&gt;toString&lt;/strong&gt;();</source>
          <target state="translated">строка &lt;strong id=&quot;toString&quot;&gt;toString&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="d1a5777a52c7f6c30d92ddacf950552d47565eea" translate="yes" xml:space="preserve">
          <source>string &lt;strong id=&quot;toString&quot;&gt;toString&lt;/strong&gt;(this T)();</source>
          <target state="translated">строка &lt;strong id=&quot;toString&quot;&gt;toString&lt;/strong&gt; (это T) ();</target>
        </trans-unit>
        <trans-unit id="0770fa7b8d7acb29228d6d37fc33adb257b9b67e" translate="yes" xml:space="preserve">
          <source>string &lt;strong id=&quot;toUTF8&quot;&gt;toUTF8&lt;/strong&gt;(S)(S s)</source>
          <target state="translated">строка &lt;strong id=&quot;toUTF8&quot;&gt;toUTF8&lt;/strong&gt; (S) (S s)</target>
        </trans-unit>
        <trans-unit id="da3d43f187be9febd0cc198920fa5afa90fee478" translate="yes" xml:space="preserve">
          <source>string containing host name or numeric address</source>
          <target state="translated">строка,содержащая имя или цифровой адрес хоста</target>
        </trans-unit>
        <trans-unit id="be8528c5a58dbabec37994ca3dfb9b99bcb2f71c" translate="yes" xml:space="preserve">
          <source>string file</source>
          <target state="translated">строковый файл</target>
        </trans-unit>
        <trans-unit id="6bb0c2da582e4a55fb315b35594ceafca476c154" translate="yes" xml:space="preserve">
          <source>string if type is mangled specially on target null if unhandled</source>
          <target state="translated">строка,если тип специально искажается на целевом нуле,если не обрабатывается</target>
        </trans-unit>
        <trans-unit id="cc31b40da2912c2fdb6ff1d446bc02abb52cf195" translate="yes" xml:space="preserve">
          <source>string import to add</source>
          <target state="translated">импорт строк для добавления</target>
        </trans-unit>
        <trans-unit id="631a0e1c56354104a9d4c245be5254d5eaf5e4bf" translate="yes" xml:space="preserve">
          <source>string literal of the date and time of compilation &quot;</source>
          <target state="translated">строковый литерал даты и времени компиляции&quot;.</target>
        </trans-unit>
        <trans-unit id="1a59c92f84732fbd43554e78aa2677bd4b4944b5" translate="yes" xml:space="preserve">
          <source>string literal of the date of compilation &quot;</source>
          <target state="translated">строковый литерал даты составления &quot;</target>
        </trans-unit>
        <trans-unit id="332e6fc46d9e6de285dbd73f75574add1dec59ea" translate="yes" xml:space="preserve">
          <source>string literal of the time of compilation &quot;</source>
          <target state="translated">строковый литерал времени компиляции &quot;</target>
        </trans-unit>
        <trans-unit id="8b807e7a1c763f88bff7b7ed6b74645e56d9447f" translate="yes" xml:space="preserve">
          <source>string literal to non-const</source>
          <target state="translated">строка буквально до бесконечности</target>
        </trans-unit>
        <trans-unit id="41cdacc06343bb87e56abad627b1654a974645bb" translate="yes" xml:space="preserve">
          <source>string mangling of C++ typeinfo</source>
          <target state="translated">переключение строк информации типа C++</target>
        </trans-unit>
        <trans-unit id="e79ef3058471ace3574b308c949c98c11634e798" translate="yes" xml:space="preserve">
          <source>string mangling of symbol</source>
          <target state="translated">искажение символа</target>
        </trans-unit>
        <trans-unit id="bcadfd3dfac7280822689e9f0c1e06d5175bf06f" translate="yes" xml:space="preserve">
          <source>string msg</source>
          <target state="translated">струна мсг</target>
        </trans-unit>
        <trans-unit id="3c31fefc6512a9453eee34b0c80fa83529de9581" translate="yes" xml:space="preserve">
          <source>string of characters to be sliced off end of str[]</source>
          <target state="translated">строка символов,которые должны быть срезаны с конца str[].</target>
        </trans-unit>
        <trans-unit id="c790749747ea9066dae55c74d6ba2ce5fafabf22" translate="yes" xml:space="preserve">
          <source>string of characters to be sliced off front of str[]</source>
          <target state="translated">строка символов,которые должны быть срезаны перед str[].</target>
        </trans-unit>
        <trans-unit id="a6076532f8ee18cceafce05624744d2239b4b4a1" translate="yes" xml:space="preserve">
          <source>string of characters to be stripped</source>
          <target state="translated">строка символов,которую необходимо удалить</target>
        </trans-unit>
        <trans-unit id="0e0ad9904c1dfde44fe125a8b8646d89a7a4856e" translate="yes" xml:space="preserve">
          <source>string of leading characters to be stripped</source>
          <target state="translated">строка лидирующих символов,которую необходимо удалить</target>
        </trans-unit>
        <trans-unit id="a5e465474c36342b10c75ee823b0c4fa6900c5d8" translate="yes" xml:space="preserve">
          <source>string of trailing characters to be stripped</source>
          <target state="translated">строка снимаемых символов</target>
        </trans-unit>
        <trans-unit id="4a6cd8da692cd715d7821ccf8e79f3bb55b70de5" translate="yes" xml:space="preserve">
          <source>string of transformed path</source>
          <target state="translated">строка преобразованного пути</target>
        </trans-unit>
        <trans-unit id="7a4c705af578a569412c53ba04000a750663d330" translate="yes" xml:space="preserve">
          <source>string or &lt;a href=&quot;std_range_primitives#isForwardRange&quot;&gt;forward range&lt;/a&gt;</source>
          <target state="translated">строка или &lt;a href=&quot;std_range_primitives#isForwardRange&quot;&gt;диапазон вперед&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f94175483a4cd3172787d65301b38f57ddfd276b" translate="yes" xml:space="preserve">
          <source>string or &lt;a href=&quot;std_range_primitives#isForwardRange&quot;&gt;forward range&lt;/a&gt; of characters</source>
          <target state="translated">строка или &lt;a href=&quot;std_range_primitives#isForwardRange&quot;&gt;прямой диапазон&lt;/a&gt; символов</target>
        </trans-unit>
        <trans-unit id="74cc38de1130b894db35d9c7d5e3d95749572b93" translate="yes" xml:space="preserve">
          <source>string or ForwardRange of characters to search in correct UTF format</source>
          <target state="translated">строка или ForwardRange символов для поиска в правильном формате UTF</target>
        </trans-unit>
        <trans-unit id="5cdcdaca047c65886052f2da3db790248203b0de" translate="yes" xml:space="preserve">
          <source>string or InputRange of characters to search in correct UTF format</source>
          <target state="translated">строка или InputRange символов для поиска в правильном формате UTF</target>
        </trans-unit>
        <trans-unit id="ea123d0242e6c0b3798742105a0cbaeed0f5c22e" translate="yes" xml:space="preserve">
          <source>string or InputRange to be analyzed</source>
          <target state="translated">строка или InputRange для анализа</target>
        </trans-unit>
        <trans-unit id="aeb9ac5795f9fa056a00694212d54fb8d701a4dd" translate="yes" xml:space="preserve">
          <source>string or Range of characters to check</source>
          <target state="translated">строка или диапазон символов для проверки</target>
        </trans-unit>
        <trans-unit id="649bd84d77587f58ffe473502409d7fd8a204b3d" translate="yes" xml:space="preserve">
          <source>string or indexable range of characters</source>
          <target state="translated">строковый или индексируемый диапазон символов</target>
        </trans-unit>
        <trans-unit id="6560b4e6c8615c590a7ea5ae1c430681e54c3a74" translate="yes" xml:space="preserve">
          <source>string or random access range of characters</source>
          <target state="translated">строка или диапазон произвольного доступа</target>
        </trans-unit>
        <trans-unit id="02977e02759ce4b34bdee48fc9b05ecf5c8ea0cf" translate="yes" xml:space="preserve">
          <source>string or random access range representing a filespec</source>
          <target state="translated">строка или диапазон произвольного доступа,представляющий собой файлpec</target>
        </trans-unit>
        <trans-unit id="9795fdb598f9d844256113c490dbb06013432bac" translate="yes" xml:space="preserve">
          <source>string or random access range representing the path to normalize</source>
          <target state="translated">строка или случайный диапазон доступа,представляющий путь к нормализации</target>
        </trans-unit>
        <trans-unit id="4f1f45821287cf325d867a08e030194ebd0b9080" translate="yes" xml:space="preserve">
          <source>string or range of characters</source>
          <target state="translated">строка или диапазон символов</target>
        </trans-unit>
        <trans-unit id="062f7cd3e776a2c54c697aa89ab2c1e63b85a5c6" translate="yes" xml:space="preserve">
          <source>string or range of characters representing the existing file name</source>
          <target state="translated">строка или диапазон символов,представляющих имя существующего файла</target>
        </trans-unit>
        <trans-unit id="19272dfcf316520ca3bc46a840286e93f32226eb" translate="yes" xml:space="preserve">
          <source>string or range of characters representing the file name</source>
          <target state="translated">строка или диапазон символов,представляющих имя файла</target>
        </trans-unit>
        <trans-unit id="abb5b641c55de9e50135cc298b464b78816ff941" translate="yes" xml:space="preserve">
          <source>string or range of characters representing the target file name</source>
          <target state="translated">строка или диапазон символов,представляющих имя целевого файла</target>
        </trans-unit>
        <trans-unit id="f949905b2628aaad5b383b1178b89b5e7e90b211" translate="yes" xml:space="preserve">
          <source>string or range to be sliced</source>
          <target state="translated">строка или диапазон нарезки</target>
        </trans-unit>
        <trans-unit id="8e41c3332c64073eab015d85fe5eacc61053939f" translate="yes" xml:space="preserve">
          <source>string or slicable random access range</source>
          <target state="translated">строка или нарезной диапазон произвольного доступа</target>
        </trans-unit>
        <trans-unit id="e118cc2168bb60b82aa3cc2d72aa188542f87027" translate="yes" xml:space="preserve">
          <source>string representation of floating-point Infinity</source>
          <target state="translated">строковое представление бесконечности с плавающей точкой</target>
        </trans-unit>
        <trans-unit id="f856015016b810ba2c1cffe072e176d72303da39" translate="yes" xml:space="preserve">
          <source>string representation of floating-point NaN</source>
          <target state="translated">строковое представление NaN с плавающей точкой</target>
        </trans-unit>
        <trans-unit id="d2b7f334d58ce47f623fbd580905256dbcf52045" translate="yes" xml:space="preserve">
          <source>string representation of floating-point negative Infinity</source>
          <target state="translated">строковое представление отрицательной величины бесконечности с плавающей точкой</target>
        </trans-unit>
        <trans-unit id="51237e72cb97c9e20b61596b2625fa443e6ca77f" translate="yes" xml:space="preserve">
          <source>string representing the &amp;lsquo;mangled&amp;rsquo; representation of the type</source>
          <target state="translated">строка, представляющая искаженное представление типа</target>
        </trans-unit>
        <trans-unit id="ab213f5df6e2da1f56be48e5ed4670c726a7f157" translate="yes" xml:space="preserve">
          <source>string representing the source representation of the type</source>
          <target state="translated">строка,представляющая исходное представление типа</target>
        </trans-unit>
        <trans-unit id="65b945936ddf4ce820bd471fa4b3d783591047c0" translate="yes" xml:space="preserve">
          <source>string to be converted.</source>
          <target state="translated">строка,которая должна быть преобразована.</target>
        </trans-unit>
        <trans-unit id="587f36c81824f036a8212fc1ecc1e2c4e1b272c7" translate="yes" xml:space="preserve">
          <source>string to check</source>
          <target state="translated">строка для проверки</target>
        </trans-unit>
        <trans-unit id="440d3b3129f8ac7393507694336febc3ae259831" translate="yes" xml:space="preserve">
          <source>string to compare</source>
          <target state="translated">строка для сравнения</target>
        </trans-unit>
        <trans-unit id="64bc28319d5b8f966b45d8d523788eefb18025e3" translate="yes" xml:space="preserve">
          <source>string to copy</source>
          <target state="translated">строка для копирования</target>
        </trans-unit>
        <trans-unit id="ba738d37b0b3ab15d28c6a322d936a01da1c8fab" translate="yes" xml:space="preserve">
          <source>string to search</source>
          <target state="translated">строка поиска</target>
        </trans-unit>
        <trans-unit id="1455fe82eb69ffda0cda2c4480e7d71a417fd18b" translate="yes" xml:space="preserve">
          <source>string to use to indent following lines of the paragraph</source>
          <target state="translated">строка,которую следует использовать для отступов от следующих строк абзаца</target>
        </trans-unit>
        <trans-unit id="4493c2ff7b45724773f201c695d2c3d531af8258" translate="yes" xml:space="preserve">
          <source>string types</source>
          <target state="translated">струнные типы</target>
        </trans-unit>
        <trans-unit id="ea492129cf673ea53083ac9184f559030e244b3c" translate="yes" xml:space="preserve">
          <source>string used to indent first line of the paragraph</source>
          <target state="translated">строка,используемая для отступа первой строки абзаца</target>
        </trans-unit>
        <trans-unit id="4b35be0f7818df6954737ab957f691eb72a389d2" translate="yes" xml:space="preserve">
          <source>string1</source>
          <target state="translated">string1</target>
        </trans-unit>
        <trans-unit id="62fb1585fd37a03b137afeeedaada345f5537a00" translate="yes" xml:space="preserve">
          <source>string2</source>
          <target state="translated">string2</target>
        </trans-unit>
        <trans-unit id="98027b48979900d2f42a1d22e4d7d8dd9216a7e0" translate="yes" xml:space="preserve">
          <source>string[] &lt;strong id=&quot;aliases&quot;&gt;aliases&lt;/strong&gt;;</source>
          <target state="translated">строка [] &lt;strong id=&quot;aliases&quot;&gt;псевдонимы&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="7c1a4150fa0ef4cd34931ffd0fd44572d0e181df" translate="yes" xml:space="preserve">
          <source>string[][string] &lt;strong id=&quot;fromWindows&quot;&gt;fromWindows&lt;/strong&gt;;</source>
          <target state="translated">string [] [string] &lt;strong id=&quot;fromWindows&quot;&gt;fromWindows&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="28ed2d9fb4a3d8fb6de0ac1b893a304869339eba" translate="yes" xml:space="preserve">
          <source>string[][string] &lt;strong id=&quot;toWindows&quot;&gt;toWindows&lt;/strong&gt;;</source>
          <target state="translated">string [] [string] &lt;strong id=&quot;toWindows&quot;&gt;toWindows&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="0671bfd94d833c09038ed096f3682efcc1c3ce59" translate="yes" xml:space="preserve">
          <source>string[string] &lt;code&gt;env&lt;/code&gt;</source>
          <target state="translated">string [string] &lt;code&gt;env&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="12bde3d401b8035c02e43397e2ce01a2850fd660" translate="yes" xml:space="preserve">
          <source>string[string] &lt;code&gt;postDict&lt;/code&gt;</source>
          <target state="translated">string [string] &lt;code&gt;postDict&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="17c43e207435466f48de033ea1580275be3b706d" translate="yes" xml:space="preserve">
          <source>string[string] &lt;strong id=&quot;attr&quot;&gt;attr&lt;/strong&gt;;</source>
          <target state="translated">string [string] &lt;strong id=&quot;attr&quot;&gt;attr&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="eff6b60182a70c6c79075ce4dc558661e5e60ff5" translate="yes" xml:space="preserve">
          <source>strips away the specified suffix, which doesn't necessarily have to represent an extension. To remove the extension from a path, regardless of what the extension is, use &lt;a href=&quot;#stripExtension&quot;&gt;&lt;code&gt;stripExtension&lt;/code&gt;&lt;/a&gt;. To obtain the filename without leading directories and without an extension, combine the functions like this:</source>
          <target state="translated">удаляет указанный суффикс, который не обязательно должен представлять расширение. Чтобы удалить расширение из пути, независимо от того, что это расширение, используйте &lt;a href=&quot;#stripExtension&quot;&gt; &lt;code&gt;stripExtension&lt;/code&gt; &lt;/a&gt; . Чтобы получить имя файла без ведущих каталогов и без расширения, объедините функции следующим образом:</target>
        </trans-unit>
        <trans-unit id="660043d00d0f20e4da9a39305dc51d2399f48d50" translate="yes" xml:space="preserve">
          <source>strongly &lt;code&gt;pure&lt;/code&gt;</source>
          <target state="translated">сильно &lt;code&gt;pure&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d118e5a3cc15b182d1286373a60c787e58d3166f" translate="yes" xml:space="preserve">
          <source>struct</source>
          <target state="translated">struct</target>
        </trans-unit>
        <trans-unit id="131f65e357b7f717ad9220b8edb27c1925485f30" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;AA&quot;&gt;AA&lt;/strong&gt;;</source>
          <target state="translated">структура &lt;strong id=&quot;AA&quot;&gt;АА&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="7826ae9afa3034ee566eb3d09c5ea38249e61472" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;ASTBase&quot;&gt;ASTBase&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;ASTBase&quot;&gt;ASTBase&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="90305fb49f22496778e58f0ce668299fa15d5cb9" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;ASTCodegen&quot;&gt;ASTCodegen&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;ASTCodegen&quot;&gt;ASTCodegen&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="f9de7f938b67ade46ef7efb0e3d59d800fff51cd" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Abort&quot;&gt;Abort&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;Abort&quot;&gt;Abort&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="e4cda89eba09b8a860e79a58db31a3f0ba539b3f" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;AddressInfo&quot;&gt;AddressInfo&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;AddressInfo&quot;&gt;AddressInfo&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="10133341195873e415804758664906dc994b7e8f" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;AffixAllocator&quot;&gt;AffixAllocator&lt;/strong&gt;(Allocator, Prefix, Suffix = void);</source>
          <target state="translated">struct &lt;strong id=&quot;AffixAllocator&quot;&gt;AffixAllocator&lt;/strong&gt; (Allocator, Prefix, Suffix = void);</target>
        </trans-unit>
        <trans-unit id="2cd8e6b8c85de818631dd3701e10fbcf754a60b8" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;AlignedBlockList&quot;&gt;AlignedBlockList&lt;/strong&gt;(Allocator, ParentAllocator, ulong theAlignment = 1 &amp;lt;&amp;lt; 21);</source>
          <target state="translated">struct &lt;strong id=&quot;AlignedBlockList&quot;&gt;AlignedBlockList&lt;/strong&gt; (Allocator, ParentAllocator, в дополнение к Alignment = 1 &amp;lt;&amp;lt; 21);</target>
        </trans-unit>
        <trans-unit id="a746b8ea5a663350f0f53928fb113d67ebfd8733" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;AlignedMallocator&quot;&gt;AlignedMallocator&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;AlignedMallocator&quot;&gt;AlignedMallocator&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="610afde4b21883673d4bebbd2aba7975966e3b6b" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;AllocatorList&quot;&gt;AllocatorList&lt;/strong&gt;(Factory, BookkeepingAllocator = GCAllocator);</source>
          <target state="translated">struct &lt;strong id=&quot;AllocatorList&quot;&gt;AllocatorList&lt;/strong&gt; (Factory, BookkeepingAllocator = GCAllocator);</target>
        </trans-unit>
        <trans-unit id="a6f786c471b0f07db1b9623510331bd70962735b" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Appender&quot;&gt;Appender&lt;/strong&gt;(A) if (isDynamicArray!A);</source>
          <target state="translated">struct &lt;strong id=&quot;Appender&quot;&gt;Appender&lt;/strong&gt; (A) if (isDynamicArray! A);</target>
        </trans-unit>
        <trans-unit id="4a0414bb490fdb796436f05896ea1b18a823348f" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Array&quot;&gt;Array&lt;/strong&gt;(T) if (!is(Unqual!T == bool));</source>
          <target state="translated">struct &lt;strong id=&quot;Array&quot;&gt;Array&lt;/strong&gt; (T) if (! is (Unqual! T == bool));</target>
        </trans-unit>
        <trans-unit id="9ea792f85bea2a880c8e33cf44d40b4e30410081" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Array&quot;&gt;Array&lt;/strong&gt;(T) if (!is(immutable(T) == immutable(bool)));</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b62c4c0393ed4931cf4109696e0f3370169f8dbb" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Array&quot;&gt;Array&lt;/strong&gt;(T) if (is(Unqual!T == bool));</source>
          <target state="translated">struct &lt;strong id=&quot;Array&quot;&gt;Array&lt;/strong&gt; (T) if (is (Unqual! T == bool));</target>
        </trans-unit>
        <trans-unit id="c80a021f1613d75af817fd9e4796d4a4a076e094" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Array&quot;&gt;Array&lt;/strong&gt;(T) if (is(immutable(T) == immutable(bool)));</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="357e55a6d226b6d8c448296f4164136c7cdf3821" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Array&quot;&gt;Array&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;Array&quot;&gt;Array&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="5f6c6e2975685c73a5d6cb80deef16b97e17cead" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;AscendingPageAllocator&quot;&gt;AscendingPageAllocator&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;AscendingPageAllocator&quot;&gt;AscendingPageAllocator&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="1db14ccf6970ea6b82b737d5c4cbfa91c7d36a2c" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;AutoProtocol&quot;&gt;AutoProtocol&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;AutoProtocol&quot;&gt;AutoProtocol&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="f96d6ac8bcea5877e81b8edbb64047228854759f" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;BaseClass&quot;&gt;BaseClass&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;BaseClass&quot;&gt;BaseClass&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="5d48c402a810005b57b6f6871f57af73cbe5744d" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;BigInt&quot;&gt;BigInt&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;BigInt&quot;&gt;BigInt&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="5b5e9fc4749b8fed66bb4111b8e30e9883f8dbc0" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;BinaryHeap&quot;&gt;BinaryHeap&lt;/strong&gt;(Store, alias less = &quot;a &amp;lt; b&quot;) if (isRandomAccessRange!Store || isRandomAccessRange!(typeof(Store.init[])));</source>
          <target state="translated">struct &lt;strong id=&quot;BinaryHeap&quot;&gt;BinaryHeap&lt;/strong&gt; (Store, псевдоним less = &quot;a &amp;lt;b&quot;) if (isRandomAccessRange! Store || isRandomAccessRange! (typeof (Store.init [])));</target>
        </trans-unit>
        <trans-unit id="d40d0cd05dac84aa443b1dcbfa7019776228f9b9" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;BitArray&quot;&gt;BitArray&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;BitArray&quot;&gt;BitArray&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="6f2ea2915f6e5b3256f24c2e4f4821af91ee1e78" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;BitFlags&quot;&gt;BitFlags&lt;/strong&gt;(E, Flag!&quot;unsafe&quot; unsafe = No.unsafe) if (unsafe || isBitFlagEnum!E);</source>
          <target state="translated">struct &lt;strong id=&quot;BitFlags&quot;&gt;BitFlags&lt;/strong&gt; (E, Flag! &quot;unsafe&quot; unsafe = No.unsafe) if (unsafe || isBitFlagEnum! E);</target>
        </trans-unit>
        <trans-unit id="4b1985cabeade075c8121946e9e9151bd9fbdae1" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;BitRange&quot;&gt;BitRange&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;BitRange&quot;&gt;BitRange&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="2db275d09ddd0d70ecfc1ce367de4d3b53429f4c" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;BitmappedBlock&quot;&gt;BitmappedBlock&lt;/strong&gt;(size_t theBlockSize, uint theAlignment = platformAlignment, ParentAllocator = NullAllocator, Flag!&quot;multiblock&quot; f = Yes.multiblock);</source>
          <target state="translated">struct &lt;strong id=&quot;BitmappedBlock&quot;&gt;BitmappedBlock&lt;/strong&gt; (size_t theBlockSize, uint theAlignment = platformAlignment, ParentAllocator = NullAllocator, Flag! &quot;multiblock&quot; f = Yes.multiblock);</target>
        </trans-unit>
        <trans-unit id="23051bcc872a2bdd853b9d451c5aed348f6e1d31" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;BitmappedBlockWithInternalPointers&quot;&gt;BitmappedBlockWithInternalPointers&lt;/strong&gt;(size_t theBlockSize, uint theAlignment = platformAlignment, ParentAllocator = NullAllocator);</source>
          <target state="translated">struct &lt;strong id=&quot;BitmappedBlockWithInternalPointers&quot;&gt;BitmappedBlockWithInternalPointers&lt;/strong&gt; (size_t theBlockSize, uint theAlignment = platformAlignment, ParentAllocator = NullAllocator);</target>
        </trans-unit>
        <trans-unit id="7164d0510c9c9611bbb2f2e73ba312dd9dc8f377" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;BlockRange&quot;&gt;BlockRange&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;BlockRange&quot;&gt;BlockRange&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="535fa76220a3768c64ad370fd79b23f86de19bf3" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;BoyerMooreFinder&quot;&gt;BoyerMooreFinder&lt;/strong&gt;(alias pred, Range);</source>
          <target state="translated">struct &lt;strong id=&quot;BoyerMooreFinder&quot;&gt;BoyerMooreFinder&lt;/strong&gt; (псевдоним &lt;strong id=&quot;BoyerMooreFinder&quot;&gt;pred&lt;/strong&gt; , Range);</target>
        </trans-unit>
        <trans-unit id="73cbd611119855284897c2081eadeaf42668fdb7" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Bucketizer&quot;&gt;Bucketizer&lt;/strong&gt;(Allocator, size_t min, size_t max, size_t step);</source>
          <target state="translated">struct &lt;strong id=&quot;Bucketizer&quot;&gt;Bucketizer&lt;/strong&gt; (Allocator, size_t min, size_t max, size_t step);</target>
        </trans-unit>
        <trans-unit id="a3ec0a534c5f2c561e8bd9fefcdb338e6e5e29f5" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;CArgs&quot;&gt;CArgs&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;CArgs&quot;&gt;CArgs&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="39d74e5d67199645378448c1c7a77d523afd06d8" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;CGstate&quot;&gt;CGstate&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;CGstate&quot;&gt;CGstate&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="2612ceff1bf08f598a42e2d882217e9fa7278096" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;CLIUsage&quot;&gt;CLIUsage&lt;/strong&gt;;</source>
          <target state="translated">структура &lt;strong id=&quot;CLIUsage&quot;&gt;CLIUsage&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="7ecd9cb92385646a463c9231fe8e74c05c2e4df5" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;CRC&quot;&gt;CRC&lt;/strong&gt;(uint N, ulong P) if (N == 32 || N == 64);</source>
          <target state="translated">struct &lt;strong id=&quot;CRC&quot;&gt;CRC&lt;/strong&gt; (uint N, ulong P) if (N == 32 || N == 64);</target>
        </trans-unit>
        <trans-unit id="ac7470373a9df99958f59cb96d89c254635f5da1" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;CURLMsg&quot;&gt;CURLMsg&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;CURLMsg&quot;&gt;CURLMsg&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="d38c0527f3dc9aaec9b49213c1d2fec3dabe0e6b" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;CacheInfo&quot;&gt;CacheInfo&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;CacheInfo&quot;&gt;CacheInfo&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="46da7711d9d906e6ef2e2030baed57afcee68ac3" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Captures&quot;&gt;Captures&lt;/strong&gt;(R) if (isSomeString!R);</source>
          <target state="translated">struct &lt;strong id=&quot;Captures&quot;&gt;Captures&lt;/strong&gt; (R) if (isSomeString! R);</target>
        </trans-unit>
        <trans-unit id="778bea8b12d629d361d0f363e96b77870f2fed29" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Cent&quot;&gt;Cent&lt;/strong&gt;;</source>
          <target state="translated">структура &lt;strong id=&quot;Cent&quot;&gt;цент&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="b71f8907a8a994ebe39906bec199e91184c2f772" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Checked&quot;&gt;Checked&lt;/strong&gt;(T, Hook = Abort) if (isIntegral!T || is(T == &lt;strong id=&quot;Checked&quot;&gt;Checked&lt;/strong&gt;!(U, H), U, H));</source>
          <target state="translated">struct &lt;strong id=&quot;Checked&quot;&gt;Checked&lt;/strong&gt; (T, Hook = Abort) if (isIntegral! T || is (T == &lt;strong id=&quot;Checked&quot;&gt;Проверено&lt;/strong&gt; ! (U, H), U, H));</target>
        </trans-unit>
        <trans-unit id="84a8b75ff6a3a8932893a8b66bf4c101001431b3" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Chunks&quot;&gt;Chunks&lt;/strong&gt;(Source) if (isInputRange!Source);</source>
          <target state="translated">struct &lt;strong id=&quot;Chunks&quot;&gt;Chunks&lt;/strong&gt; (Source) if (isInputRange! Source);</target>
        </trans-unit>
        <trans-unit id="c7fd25cd4d689c9a74b734ce91034ae1e974e18a" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;CodepointInterval&quot;&gt;CodepointInterval&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;CodepointInterval&quot;&gt;CodepointInterval&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="44047deca5eb8c04f6782f316be6f667fafd9aee" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;ComparingBenchmarkResult&quot;&gt;ComparingBenchmarkResult&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;ComparingBenchmarkResult&quot;&gt;ComparingBenchmarkResult&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="46c256a81d7001585b332b18767fd4c389effa23" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;CompiledCtfeFunctionPimpl&quot;&gt;CompiledCtfeFunctionPimpl&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;CompiledCtfeFunctionPimpl&quot;&gt;CompiledCtfeFunctionPimpl&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="f87f8dda512c9f64b00d55548dab3193de061ea7" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Compiler&quot;&gt;Compiler&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;Compiler&quot;&gt;Compiler&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="9c5d699b5093c6faf518316e087d4272c492fa7f" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Complex&quot;&gt;Complex&lt;/strong&gt;(T) if (isFloatingPoint!T);</source>
          <target state="translated">struct &lt;strong id=&quot;Complex&quot;&gt;Complex&lt;/strong&gt; (T) if (isFloatingPoint! T);</target>
        </trans-unit>
        <trans-unit id="5930902546622cb5be14ee05f858ef27f31fed9f" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;ContiguousFreeList&quot;&gt;ContiguousFreeList&lt;/strong&gt;(ParentAllocator, size_t minSize, size_t maxSize = minSize);</source>
          <target state="translated">struct &lt;strong id=&quot;ContiguousFreeList&quot;&gt;ContiguousFreeList&lt;/strong&gt; (ParentAllocator, size_t minSize, size_t maxSize = minSize);</target>
        </trans-unit>
        <trans-unit id="5ed1c4955e67ada2e2b2b68c20190108a49cf400" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;ContractChecks&quot;&gt;ContractChecks&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;ContractChecks&quot;&gt;ContractChecks&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="4d936ad10771c821e97a3df5a9746d55a44cc8be" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;CppExceptionHeader&quot;&gt;CppExceptionHeader&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;CppExceptionHeader&quot;&gt;CppExceptionHeader&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="68a99f624a2f7d8c4d48554a17edb8e5ca127d55" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Cstate&quot;&gt;Cstate&lt;/strong&gt;;</source>
          <target state="translated">структура &lt;strong id=&quot;Cstate&quot;&gt;Cstate&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="1c84da57d8f3fcfed86e241927d52ac4be003410" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;CtfeStatus&quot;&gt;CtfeStatus&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;CtfeStatus&quot;&gt;CtfeStatus&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="cea7da423f87c311c27d5d9b44824f875a052c9e" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;CtorFlow&quot;&gt;CtorFlow&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;CtorFlow&quot;&gt;CtorFlow&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="4acc0d169ffc462e9ad6aada3e2cdb5019cf880f" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Curl&quot;&gt;Curl&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;Curl&quot;&gt;Curl&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="5e158a573aed55374b9a9876a94d1674edff2cb1" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;CustomFloat&quot;&gt;CustomFloat&lt;/strong&gt;(uint precision, uint exponentWidth, CustomFloatFlags flags, uint bias) if (((flags &amp;amp; flags.signed) + precision + exponentWidth) % 8 == 0 &amp;amp;&amp;amp; (precision + exponentWidth &amp;gt; 0));</source>
          <target state="translated">struct &lt;strong id=&quot;CustomFloat&quot;&gt;CustomFloat&lt;/strong&gt; (точность uint, uint exponentWidth, флаги CustomFloatFlags, смещение uint) if (((flags &amp;amp; flags.signed) + precision + exponentWidth)% 8 == 0 &amp;amp;&amp;amp; (точность + exponentWidth&amp;gt; 0));</target>
        </trans-unit>
        <trans-unit id="8016a098fae6cde900fb82afdc7e86dcccd11d3d" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;CustomFloat&quot;&gt;CustomFloat&lt;/strong&gt;(uint precision, uint exponentWidth, CustomFloatFlags flags, uint bias) if (isCorrectCustomFloat(precision, exponentWidth, flags));</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f75feb9b287a7c22161a4ad4e3041b30b4f3768" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Cycle&quot;&gt;Cycle&lt;/strong&gt;(R) if (isForwardRange!R &amp;amp;&amp;amp; !isInfinite!R);</source>
          <target state="translated">struct &lt;strong id=&quot;Cycle&quot;&gt;Cycle&lt;/strong&gt; (R) if (isForwardRange! R &amp;amp;&amp;amp;! isInfinite! R);</target>
        </trans-unit>
        <trans-unit id="ea0b9091f597f4e160e6a44ca4edcaebb8f06f99" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Cycle&quot;&gt;Cycle&lt;/strong&gt;(R) if (isStaticArray!R);</source>
          <target state="translated">struct &lt;strong id=&quot;Cycle&quot;&gt;Cycle&lt;/strong&gt; (R) if (isStaticArray! R);</target>
        </trans-unit>
        <trans-unit id="0d815cbd7a44f5384a94edfa40ddc16040fba1f2" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;DList&quot;&gt;DList&lt;/strong&gt;(T);</source>
          <target state="translated">struct &lt;strong id=&quot;DList&quot;&gt;DList&lt;/strong&gt; (T);</target>
        </trans-unit>
        <trans-unit id="a6a7903ebf6b96648dae224d353a84330ca60ac0" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Data&quot;&gt;Data&lt;/strong&gt;;</source>
          <target state="translated">структура &lt;strong id=&quot;Data&quot;&gt;данных&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="52360f7e91403266791f0c0808253d63e3912a31" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Date&quot;&gt;Date&lt;/strong&gt;;</source>
          <target state="translated">структура &lt;strong id=&quot;Date&quot;&gt;Дата&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="322df14ad3a5b653abfe8496282bbf8459763dac" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;DateTime&quot;&gt;DateTime&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;DateTime&quot;&gt;DateTime&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="26d9202270813050f17e3fbc03d75e8edb7f4053" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Decoder&quot;&gt;Decoder&lt;/strong&gt;(Range) if (isInputRange!Range &amp;amp;&amp;amp; (is(ElementType!Range : const(char)[]) || is(ElementType!Range : const(ubyte)[])));</source>
          <target state="translated">struct &lt;strong id=&quot;Decoder&quot;&gt;Decoder&lt;/strong&gt; (Range) if (isInputRange! Range &amp;amp;&amp;amp; (is (ElementType! Range: const (char) []) || is (ElementType! Range: const (ubyte) [])));</target>
        </trans-unit>
        <trans-unit id="00a9086c905b50ba21f06340d0e85b12ee86fecb" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Decoder&quot;&gt;Decoder&lt;/strong&gt;(Range) if (isInputRange!Range &amp;amp;&amp;amp; is(ElementType!Range : char));</source>
          <target state="translated">struct &lt;strong id=&quot;Decoder&quot;&gt;Decoder&lt;/strong&gt; (Range) if (isInputRange! Range &amp;amp;&amp;amp; is (ElementType! Range: char));</target>
        </trans-unit>
        <trans-unit id="7f5aee028545bab6ee39ccb7724426c4cad355ac" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Diagnostics&quot;&gt;Diagnostics&lt;/strong&gt;;</source>
          <target state="translated">структура &lt;strong id=&quot;Diagnostics&quot;&gt;Диагностика&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="f888822eb760ccf3864b6c6c99a18bf604bbc57f" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;DirEntry&quot;&gt;DirEntry&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;DirEntry&quot;&gt;DirEntry&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="f8ef1171e719bb748e316b4f9466b3a44a912b66" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;DocComment&quot;&gt;DocComment&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;DocComment&quot;&gt;DocComment&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="6e6c542d537dc8289c46e6f0b8a76a67f731d36a" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;DoubleRep&quot;&gt;DoubleRep&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;DoubleRep&quot;&gt;DoubleRep&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="5f7a59efa725a7c8efecf22f1e7a401a714c9fd8" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;DtBuilder&quot;&gt;DtBuilder&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;DtBuilder&quot;&gt;DtBuilder&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="89c12b96b47f19e2d20e9c23b89b9ab65f688d5f" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Duration&quot;&gt;Duration&lt;/strong&gt;;</source>
          <target state="translated">структура &lt;strong id=&quot;Duration&quot;&gt;Длительность&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="4096a41288fe0ec904e370daa884eb11d8868318" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;EEcontext&quot;&gt;EEcontext&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;EEcontext&quot;&gt;EEcontext&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="d12fab7b586a71e851637368d817bff2545d1bd7" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;EmailStatus&quot;&gt;EmailStatus&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;EmailStatus&quot;&gt;EmailStatus&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="a3e93d00bf65c7eab1561fec70a4a7f1e0ac495d" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Encoder&quot;&gt;Encoder&lt;/strong&gt;(Range) if (isInputRange!Range &amp;amp;&amp;amp; (is(ElementType!Range : const(ubyte)[]) || is(ElementType!Range : const(char)[])));</source>
          <target state="translated">struct &lt;strong id=&quot;Encoder&quot;&gt;Encoder&lt;/strong&gt; (Range) if (isInputRange! Range &amp;amp;&amp;amp; (is (ElementType! Range: const (ubyte) []) || is (ElementType! Range: const (char) [])));</target>
        </trans-unit>
        <trans-unit id="7bd30884b4e4bebe624c5006dc22c99dd084218f" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Encoder&quot;&gt;Encoder&lt;/strong&gt;(Range) if (isInputRange!Range &amp;amp;&amp;amp; is(ElementType!Range : ubyte));</source>
          <target state="translated">struct &lt;strong id=&quot;Encoder&quot;&gt;Encoder&lt;/strong&gt; (Range) if (isInputRange! Range &amp;amp;&amp;amp; is (ElementType! Range: ubyte));</target>
        </trans-unit>
        <trans-unit id="f9a6b6cc6ed4d242a9622ff91b3d04dc8600aefe" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Ensure&quot;&gt;Ensure&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;Ensure&quot;&gt;Ensure&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="95840fee324dd1067468c5f182d2d46fe281d8f4" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;EvenChunks&quot;&gt;EvenChunks&lt;/strong&gt;(Source) if (isForwardRange!Source &amp;amp;&amp;amp; hasLength!Source);</source>
          <target state="translated">struct &lt;strong id=&quot;EvenChunks&quot;&gt;EvenChunks&lt;/strong&gt; (Source) if (isForwardRange! Source &amp;amp;&amp;amp; hasLength! Source);</target>
        </trans-unit>
        <trans-unit id="7f5fcbe258b1794d755f38e5a35a3a1666c36b7e" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Event&quot;&gt;Event&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;Event&quot;&gt;Event&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="53e7b3b562affaee7896927df8f1c046cc793670" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;ExampleDigest&quot;&gt;ExampleDigest&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;ExampleDigest&quot;&gt;ExampleDigest&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="cd170e91811d392509d7df25e362b8ac466532e1" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;ExceptionHeader&quot;&gt;ExceptionHeader&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;ExceptionHeader&quot;&gt;ExceptionHeader&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="dafde2ae73540088ba421c9306949cf26cf7c7d0" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;FPTypeProperties&quot;&gt;FPTypeProperties&lt;/strong&gt;(T);</source>
          <target state="translated">struct &lt;strong id=&quot;FPTypeProperties&quot;&gt;FPTypeProperties&lt;/strong&gt; (T);</target>
        </trans-unit>
        <trans-unit id="6998a21d2fc8706f97c46dcfb4430fc0eb67a1a7" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;FTP&quot;&gt;FTP&lt;/strong&gt;;</source>
          <target state="translated">структура &lt;strong id=&quot;FTP&quot;&gt;FTP&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="bb0434d6b263b8ab1f61457b7f4a533e0d676294" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;FallbackAllocator&quot;&gt;FallbackAllocator&lt;/strong&gt;(Primary, Fallback);</source>
          <target state="translated">struct &lt;strong id=&quot;FallbackAllocator&quot;&gt;FallbackAllocator&lt;/strong&gt; (Primary, Fallback);</target>
        </trans-unit>
        <trans-unit id="9e26dbd037db9ffb7a70ebeb6f659e1532d769db" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Feature&quot;&gt;Feature&lt;/strong&gt;;</source>
          <target state="translated">&lt;strong id=&quot;Feature&quot;&gt;особенность&lt;/strong&gt; структуры ;</target>
        </trans-unit>
        <trans-unit id="a14d04b991180654246774b80a5a76f9098523f3" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;FieldInit&quot;&gt;FieldInit&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;FieldInit&quot;&gt;FieldInit&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="eaf1aea7b0dd4160c7bd93ac14daf600ec7eb3df" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;File&quot;&gt;File&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;File&quot;&gt;File&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="19e5062562d9f0811d1339cd543344c3490f24c8" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;FileBuffer&quot;&gt;FileBuffer&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;FileBuffer&quot;&gt;FileBuffer&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="ab268d407bbec1d9c6ae3e42839bfd24213faed6" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;FileCache&quot;&gt;FileCache&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;FileCache&quot;&gt;FileCache&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="8c2f37b98f0240d73b7aea1b8ab181413e353d4c" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;FileName&quot;&gt;FileName&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;FileName&quot;&gt;FileName&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="49a69cdc36c658964434009daad6dc9a21bbe558" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;FloatRep&quot;&gt;FloatRep&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;FloatRep&quot;&gt;FloatRep&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="9e2196890d9e6645e86eb9e396c2c962e780b79e" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;FloatingPointControl&quot;&gt;FloatingPointControl&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;FloatingPointControl&quot;&gt;FloatingPointControl&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="9452a083c5c6fd5240ef2152ab5f655a39efc1e4" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;FormatSpec&quot;&gt;FormatSpec&lt;/strong&gt;(Char) if (is(Unqual!Char == Char));</source>
          <target state="translated">struct &lt;strong id=&quot;FormatSpec&quot;&gt;FormatSpec&lt;/strong&gt; (Char) if (is (Unqual! Char == Char));</target>
        </trans-unit>
        <trans-unit id="fc0979167d850b4ae25c2380ada2cc098e0f9ef4" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;FreeList&quot;&gt;FreeList&lt;/strong&gt;(ParentAllocator, size_t minSize, size_t maxSize = minSize, Flag!&quot;adaptive&quot; adaptive = No.adaptive);</source>
          <target state="translated">struct &lt;strong id=&quot;FreeList&quot;&gt;FreeList&lt;/strong&gt; (ParentAllocator, size_t minSize, size_t maxSize = minSize, Flag! &quot;adaptive&quot; adaptive = No.adaptive);</target>
        </trans-unit>
        <trans-unit id="d320c8553117c77bb3146880eccecccabb4b428e" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;FreeTree&quot;&gt;FreeTree&lt;/strong&gt;(ParentAllocator);</source>
          <target state="translated">struct &lt;strong id=&quot;FreeTree&quot;&gt;FreeTree&lt;/strong&gt; (ParentAllocator);</target>
        </trans-unit>
        <trans-unit id="cfd998b4a97b81ed037de97a916124210b2f81f8" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;FrontTransversal&quot;&gt;FrontTransversal&lt;/strong&gt;(Ror, TransverseOptions opt = TransverseOptions.assumeJagged);</source>
          <target state="translated">struct &lt;strong id=&quot;FrontTransversal&quot;&gt;FrontTransversal&lt;/strong&gt; ( &lt;strong id=&quot;FrontTransversal&quot;&gt;Ror&lt;/strong&gt; , TransverseOptions opt = TransverseOptions.assumeJagged);</target>
        </trans-unit>
        <trans-unit id="8e6911c6b63f0b8e4fc70343d5b8dec0e9720923" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Fts5Context&quot;&gt;Fts5Context&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;Fts5Context&quot;&gt;Fts5Context&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="8b87931f76e664efb63a763d9c31b675cd6a8695" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Fts5ExtensionApi&quot;&gt;Fts5ExtensionApi&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;Fts5ExtensionApi&quot;&gt;Fts5ExtensionApi&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="f46997cd56597050f4213509f450c3c6298cc05d" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Fts5PhraseIter&quot;&gt;Fts5PhraseIter&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;Fts5PhraseIter&quot;&gt;Fts5PhraseIter&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="ea44b5f897b0feff9eb8fc9ef65c013c2089bb63" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Fts5Tokenizer&quot;&gt;Fts5Tokenizer&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;Fts5Tokenizer&quot;&gt;Fts5Tokenizer&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="61318d1065be69aa3a7a7edc5ea084f896613951" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;FuncParamRegs&quot;&gt;FuncParamRegs&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;FuncParamRegs&quot;&gt;FuncParamRegs&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="4ca3d04b943bc99f87827c3e4a06537485599ad9" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;GC&quot;&gt;GC&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;GC&quot;&gt;GC&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="af1ad028d53bffe4b4ec58dbdcabd354b53995d6" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;GCAllocator&quot;&gt;GCAllocator&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;GCAllocator&quot;&gt;GCAllocator&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="c815350945287db2b237c3ce98d22bf21fcad076" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;GapWeightedSimilarityIncremental&quot;&gt;GapWeightedSimilarityIncremental&lt;/strong&gt;(Range, F = double) if (isRandomAccessRange!Range &amp;amp;&amp;amp; hasLength!Range);</source>
          <target state="translated">struct &lt;strong id=&quot;GapWeightedSimilarityIncremental&quot;&gt;GapWeightedSdentifityIncremental&lt;/strong&gt; (Range, F = double) if (isRandomAccessRange! Range &amp;amp;&amp;amp; hasLength! Range);</target>
        </trans-unit>
        <trans-unit id="5dd20f9f9fc486f9779fd950780e02745e1517eb" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;GetoptResult&quot;&gt;GetoptResult&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;GetoptResult&quot;&gt;GetoptResult&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="dc0d110d40f43b7f1c7121ecc3856f49350ed971" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Grapheme&quot;&gt;Grapheme&lt;/strong&gt;;</source>
          <target state="translated">структура &lt;strong id=&quot;Grapheme&quot;&gt;графема&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="6a2f53d501b1b9f4dd34365068199390198c946f" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Group&quot;&gt;Group&lt;/strong&gt;(alias pred, R) if (isInputRange!R);</source>
          <target state="translated">struct &lt;strong id=&quot;Group&quot;&gt;Group&lt;/strong&gt; (псевдоним pred, R) if (isInputRange! R);</target>
        </trans-unit>
        <trans-unit id="5ff84c0ddf622016dcfc60403373698117cd9590" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;HMAC&quot;&gt;HMAC&lt;/strong&gt;(H, size_t hashBlockSize) if (hashBlockSize % 8 == 0);</source>
          <target state="translated">struct &lt;strong id=&quot;HMAC&quot;&gt;HMAC&lt;/strong&gt; (H, size_t hashBlockSize) if (hashBlockSize% 8 == 0);</target>
        </trans-unit>
        <trans-unit id="d6839b6efa0288b7967f1f4ec02cbf627edcbf7b" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;HTTP&quot;&gt;HTTP&lt;/strong&gt;;</source>
          <target state="translated">структура &lt;strong id=&quot;HTTP&quot;&gt;HTTP&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="82cc946750873056ddf3b57baaa8b68f8a0ca622" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;HiddenParameters&quot;&gt;HiddenParameters&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;HiddenParameters&quot;&gt;HiddenParameters&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="9fbdc637f1afd0b76c0631249f861e640457dba5" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;IRState&quot;&gt;IRState&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;IRState&quot;&gt;IRState&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="0e1601fd2d525b95751703552449b0ea5ff7db2b" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Id&quot;&gt;Id&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;Id&quot;&gt;Id&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="bc188cdfc5f54c8bfda40ef4eff9907ddb50e0d0" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;IeeeFlags&quot;&gt;IeeeFlags&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;IeeeFlags&quot;&gt;IeeeFlags&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="b4be15df83e9365917bebee9efe3d0b8ce9d702a" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;InSituRegion&quot;&gt;InSituRegion&lt;/strong&gt;(size_t size, size_t minAlign = platformAlignment);</source>
          <target state="translated">struct &lt;strong id=&quot;InSituRegion&quot;&gt;InSituRegion&lt;/strong&gt; (size_t size, size_t minAlign = platformAlignment);</target>
        </trans-unit>
        <trans-unit id="ab038929f488e699359c37acebf69cc12e908115" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Indexed&quot;&gt;Indexed&lt;/strong&gt;(Source, Indices) if (isRandomAccessRange!Source &amp;amp;&amp;amp; isInputRange!Indices &amp;amp;&amp;amp; is(typeof(Source.init[ElementType!Indices.init])));</source>
          <target state="translated">struct &lt;strong id=&quot;Indexed&quot;&gt;Indexed&lt;/strong&gt; (Source, Indices) if (isRandomAccessRange! Source &amp;amp;&amp;amp; isInputRange! Indices &amp;amp;&amp;amp; is (typeof (Source.init [ElementType! Indices.init])));</target>
        </trans-unit>
        <trans-unit id="784de4ab97830a7ce76acc44eb8e2095a383eb0b" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Interface&quot;&gt;Interface&lt;/strong&gt;;</source>
          <target state="translated">&lt;strong id=&quot;Interface&quot;&gt;интерфейс&lt;/strong&gt; структуры ;</target>
        </trans-unit>
        <trans-unit id="2586ce17c37584596546869546f13e1fbf736bdb" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Interval&quot;&gt;Interval&lt;/strong&gt;(TP);</source>
          <target state="translated">struct &lt;strong id=&quot;Interval&quot;&gt;Interval&lt;/strong&gt; (TP);</target>
        </trans-unit>
        <trans-unit id="c34758007db4f44a58a5a82a90720dba98887518" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;IntervalRange&quot;&gt;IntervalRange&lt;/strong&gt;(TP, Direction dir) if (isTimePoint!TP &amp;amp;&amp;amp; (dir != Direction.both));</source>
          <target state="translated">struct &lt;strong id=&quot;IntervalRange&quot;&gt;IntervalRange&lt;/strong&gt; (TP, Direction dir) if (isTimePoint! TP &amp;amp;&amp;amp; (dir! = Direction.both));</target>
        </trans-unit>
        <trans-unit id="dc3c9ca1c0cfe4e3b310ab0a6dfc0cbc302733b8" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;InversionList&quot;&gt;InversionList&lt;/strong&gt;(SP = GcPolicy);</source>
          <target state="translated">struct &lt;strong id=&quot;InversionList&quot;&gt;InversionList&lt;/strong&gt; (SP = GcPolicy);</target>
        </trans-unit>
        <trans-unit id="2da6254fdfc5412ac7d0595ebeb66fa0574b0fbc" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;JSONValue&quot;&gt;JSONValue&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;JSONValue&quot;&gt;JSONValue&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="f86a48421927844609ed95758351876776688b5e" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;KRRegion&quot;&gt;KRRegion&lt;/strong&gt;(ParentAllocator = NullAllocator);</source>
          <target state="translated">struct &lt;strong id=&quot;KRRegion&quot;&gt;KRRegion&lt;/strong&gt; (ParentAllocator = NullAllocator);</target>
        </trans-unit>
        <trans-unit id="603682a0369afa824fcc7952964abbaa72d1f0f8" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Label&quot;&gt;Label&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;Label&quot;&gt;Label&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="e0b83fee5983beda3e2ffae1a32f82f35eb3d2c4" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;LinearCongruentialEngine&quot;&gt;LinearCongruentialEngine&lt;/strong&gt;(UIntType, UIntType a, UIntType c, UIntType m) if (isUnsigned!UIntType);</source>
          <target state="translated">struct &lt;strong id=&quot;LinearCongruentialEngine&quot;&gt;LinearCongruentialEngine&lt;/strong&gt; (UIntType, UIntType a, UIntType c, UIntType m) if (isUnsigned! UIntType);</target>
        </trans-unit>
        <trans-unit id="091ba0bc99fcd6dd96b6584643af9df0af816f49" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Linger&quot;&gt;Linger&lt;/strong&gt;;</source>
          <target state="translated">структура &lt;strong id=&quot;Linger&quot;&gt;Лингер&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="411bcc9c33e19902e01db640ea1543853d485113" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;ListRange&quot;&gt;ListRange&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;ListRange&quot;&gt;ListRange&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="d9d622fed09fe1c851061ea54584290242dc8e7e" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;LocalSection&quot;&gt;LocalSection&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;LocalSection&quot;&gt;LocalSection&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="1e7e9f6c5f719e56a6a249d16b6956cc496a636e" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Lockstep&quot;&gt;Lockstep&lt;/strong&gt;(Ranges...) if (Ranges.length &amp;gt; 1 &amp;amp;&amp;amp; allSatisfy!(isInputRange, Ranges));</source>
          <target state="translated">struct &lt;strong id=&quot;Lockstep&quot;&gt;Lockstep&lt;/strong&gt; (Ranges ...) if (Ranges.length&amp;gt; 1 &amp;amp;&amp;amp; allSatisfy! (isInputRange, Ranges));</target>
        </trans-unit>
        <trans-unit id="d92dcd860c9357704bf0f2f81ea5083006f2ac1c" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;LogEntry&quot;&gt;LogEntry&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;LogEntry&quot;&gt;LogEntry&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="bc026d1d11c2d8782e9c5f4e9d2abd16292a70eb" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;MD5&quot;&gt;MD5&lt;/strong&gt;;</source>
          <target state="translated">структура &lt;strong id=&quot;MD5&quot;&gt;MD5&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="e16a98cfea7d07d51c5dd7248fda3fe0abd3da02" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Mallocator&quot;&gt;Mallocator&lt;/strong&gt;;</source>
          <target state="translated">структура &lt;strong id=&quot;Mallocator&quot;&gt;Mallocator&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="1c72b8596e3762716651ade6d49793c6f3ec4975" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;MatcherConcept&quot;&gt;MatcherConcept&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;MatcherConcept&quot;&gt;MatcherConcept&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="e1af84def20fba2921db87bfddce9b18559cc772" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;MersenneTwisterEngine&quot;&gt;MersenneTwisterEngine&lt;/strong&gt;(UIntType, size_t w, size_t n, size_t m, size_t r, UIntType a, size_t u, UIntType d, size_t s, UIntType b, size_t t, UIntType c, size_t l, UIntType f) if (isUnsigned!UIntType);</source>
          <target state="translated">struct &lt;strong id=&quot;MersenneTwisterEngine&quot;&gt;MersenneTwisterEngine&lt;/strong&gt; (UIntType, size_t w, size_t n, size_t m, size_t r, UIntType a, size_t u, UIntType d, size_t s, UIntType b, size_t t, UIntType c, size_t l, UIntType ;</target>
        </trans-unit>
        <trans-unit id="ba8ec43e0deac0337b7c7f2d65fda2515a45114a" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;MmapAllocator&quot;&gt;MmapAllocator&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;MmapAllocator&quot;&gt;MmapAllocator&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="d77db10c5fae2271b649945bd95cd2abbb3d4538" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;ModuleDeclaration&quot;&gt;ModuleDeclaration&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;ModuleDeclaration&quot;&gt;ModuleDeclaration&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="e99062120daffdee5a9be2c77098d6f91cd57b17" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;ModuleGroup&quot;&gt;ModuleGroup&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;ModuleGroup&quot;&gt;ModuleGroup&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="64d80d386708c992a7f6b7f05ece30e7adfefeff" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;ModuleInfo&quot;&gt;ModuleInfo&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;ModuleInfo&quot;&gt;ModuleInfo&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="13b2cfcb60263f47239340ae4a2ff563239a179a" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;MonoTimeImpl&quot;&gt;MonoTimeImpl&lt;/strong&gt;(ClockType clockType);</source>
          <target state="translated">struct &lt;strong id=&quot;MonoTimeImpl&quot;&gt;MonoTimeImpl&lt;/strong&gt; (ClockType clockType);</target>
        </trans-unit>
        <trans-unit id="b7c8f3275e68e3c6a7f24363ad40a12af63e2705" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;MultiLoggerEntry&quot;&gt;MultiLoggerEntry&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;MultiLoggerEntry&quot;&gt;MultiLoggerEntry&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="c6a9b869dae9e5dc473260152256a5c4254ab1c7" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;MultiwayMerge&quot;&gt;MultiwayMerge&lt;/strong&gt;(alias less, RangeOfRanges);</source>
          <target state="translated">struct &lt;strong id=&quot;MultiwayMerge&quot;&gt;MultiwayMerge&lt;/strong&gt; (без псевдонима, RangeOfRanges);</target>
        </trans-unit>
        <trans-unit id="dccadc550a9d9673757c96ea14ff36253b374aaf" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;MurmurHash3&quot;&gt;MurmurHash3&lt;/strong&gt;(uint size, uint opt = size_t.sizeof == 8 ? 64 : 32);</source>
          <target state="translated">struct &lt;strong id=&quot;MurmurHash3&quot;&gt;MurmurHash3&lt;/strong&gt; (размер uint, uint opt ​​= size_t.sizeof == 8? 64: 32);</target>
        </trans-unit>
        <trans-unit id="c283d86624cf9ba50adc48762cc9d58c2d597ba7" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;NDP&quot;&gt;NDP&lt;/strong&gt;;</source>
          <target state="translated">структура &lt;strong id=&quot;NDP&quot;&gt;НДП&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="de62d2e6aad239d1342457c524bac032c4212fb2" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;NegInfInterval&quot;&gt;NegInfInterval&lt;/strong&gt;(TP);</source>
          <target state="translated">struct &lt;strong id=&quot;NegInfInterval&quot;&gt;NegInfInterval&lt;/strong&gt; (TP);</target>
        </trans-unit>
        <trans-unit id="f74948acf783b138c20971443e1cea977c4bef90" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;NegInfIntervalRange&quot;&gt;NegInfIntervalRange&lt;/strong&gt;(TP) if (isTimePoint!TP);</source>
          <target state="translated">struct &lt;strong id=&quot;NegInfIntervalRange&quot;&gt;NegInfIntervalRange&lt;/strong&gt; (TP) if (isTimePoint! TP);</target>
        </trans-unit>
        <trans-unit id="f23eb3faf7234153925edc47ba2f61fc177c0f2c" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;No&quot;&gt;No&lt;/strong&gt;;</source>
          <target state="translated">структура &lt;strong id=&quot;No&quot;&gt;№&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="d5f9cede9599d6942a06643477b0700cd03248b0" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;NullAllocator&quot;&gt;NullAllocator&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;NullAllocator&quot;&gt;NullAllocator&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="bd05b6d1852ecc826581d16502e2def46b329ffe" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;NullSink&quot;&gt;NullSink&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;NullSink&quot;&gt;NullSink&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="cdf8e0b7b1edbe90d7f4634bc9313ee33b74f268" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Nullable&quot;&gt;Nullable&lt;/strong&gt;(T);</source>
          <target state="translated">struct &lt;strong id=&quot;Nullable&quot;&gt;Nullable&lt;/strong&gt; (T);</target>
        </trans-unit>
        <trans-unit id="eccc60f1cde62f1266bf02d0c3662c6d95c693c5" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Nullable&quot;&gt;Nullable&lt;/strong&gt;(T, T nullValue);</source>
          <target state="translated">struct &lt;strong id=&quot;Nullable&quot;&gt;Nullable&lt;/strong&gt; (T, T nullValue);</target>
        </trans-unit>
        <trans-unit id="e4294a6ba64f6181a84373cad79cd9a97248dd6b" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;NullableRef&quot;&gt;NullableRef&lt;/strong&gt;(T);</source>
          <target state="translated">struct &lt;strong id=&quot;NullableRef&quot;&gt;NullableRef&lt;/strong&gt; (T);</target>
        </trans-unit>
        <trans-unit id="8a66c7978921b6c638af05b5b4caa2430bfc3f5a" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;ObjcClassDeclaration&quot;&gt;ObjcClassDeclaration&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;ObjcClassDeclaration&quot;&gt;ObjcClassDeclaration&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="48c1603a26e0a95e2b33d4f4549cd8e2df27b240" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;OffsetTypeInfo&quot;&gt;OffsetTypeInfo&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;OffsetTypeInfo&quot;&gt;OffsetTypeInfo&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="bdae7167779a5c307fcc239e4cc8e258d8b018ec" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Option&quot;&gt;Option&lt;/strong&gt;;</source>
          <target state="translated">&lt;strong id=&quot;Option&quot;&gt;Опция&lt;/strong&gt; структуры ;</target>
        </trans-unit>
        <trans-unit id="27671e33ea4237b3461a3f5595b7501fe7da4b64" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;ParameterList&quot;&gt;ParameterList&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;ParameterList&quot;&gt;ParameterList&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="bffd240c9371c8d0c70f668395022848391d6d09" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;PerCallStatistics&quot;&gt;PerCallStatistics&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;PerCallStatistics&quot;&gt;PerCallStatistics&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="8f08a23ccfea9e0669256742c945c44a6405a349" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Permutations&quot;&gt;Permutations&lt;/strong&gt;(Range) if (isRandomAccessRange!Range &amp;amp;&amp;amp; hasLength!Range);</source>
          <target state="translated">struct &lt;strong id=&quot;Permutations&quot;&gt;Permutations&lt;/strong&gt; (Range) if (isRandomAccessRange! Range &amp;amp;&amp;amp; hasLength! Range);</target>
        </trans-unit>
        <trans-unit id="2178d89871dc505971b0cab15c1d6888b6660e54" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Pipe&quot;&gt;Pipe&lt;/strong&gt;;</source>
          <target state="translated">структура &lt;strong id=&quot;Pipe&quot;&gt;Труба&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="0db783d0126e1ba431b16138515821bb1940e8cd" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;PosInfInterval&quot;&gt;PosInfInterval&lt;/strong&gt;(TP);</source>
          <target state="translated">struct &lt;strong id=&quot;PosInfInterval&quot;&gt;PosInfInterval&lt;/strong&gt; (TP);</target>
        </trans-unit>
        <trans-unit id="973572ba7e0aeca617c21241b327241da6ceb4ea" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;PosInfIntervalRange&quot;&gt;PosInfIntervalRange&lt;/strong&gt;(TP) if (isTimePoint!TP);</source>
          <target state="translated">struct &lt;strong id=&quot;PosInfIntervalRange&quot;&gt;PosInfIntervalRange&lt;/strong&gt; (TP) if (isTimePoint! TP);</target>
        </trans-unit>
        <trans-unit id="72e22aab24f1d5dcbc01bb6bbb206c7d6476b042" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;ProcessPipes&quot;&gt;ProcessPipes&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;ProcessPipes&quot;&gt;ProcessPipes&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="d042b9a43a3dfef4f84f50c1afc91dd8845ac554" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;ProfileStats&quot;&gt;ProfileStats&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;ProfileStats&quot;&gt;ProfileStats&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="b74a7e33aae2332e61b0724e7040c727456b2b94" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;ProperCompare&quot;&gt;ProperCompare&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;ProperCompare&quot;&gt;ProperCompare&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="ee664684174b696459415660d5b3c5550894af0b" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Pstate&quot;&gt;Pstate&lt;/strong&gt;;</source>
          <target state="translated">структура &lt;strong id=&quot;Pstate&quot;&gt;Pstate&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="5b0e3e0437ddc61285253dc1fbd8646745f85f02" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Quantizer&quot;&gt;Quantizer&lt;/strong&gt;(ParentAllocator, alias roundingFunction);</source>
          <target state="translated">struct &lt;strong id=&quot;Quantizer&quot;&gt;Quantizer&lt;/strong&gt; (ParentAllocator, псевдоним roundingFunction);</target>
        </trans-unit>
        <trans-unit id="7607f1b36eeee17e17c35740f28f764aad1a9760" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;RCIAllocator&quot;&gt;RCIAllocator&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;RCIAllocator&quot;&gt;RCIAllocator&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="81f871cd9c663212ca1858c57927ca5218e1d98e" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;RCISharedAllocator&quot;&gt;RCISharedAllocator&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;RCISharedAllocator&quot;&gt;RCISharedAllocator&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="53c7585818afc9efc63f520aa66440dc7646af53" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;REGSAVE&quot;&gt;REGSAVE&lt;/strong&gt;;</source>
          <target state="translated">структура &lt;strong id=&quot;REGSAVE&quot;&gt;REGSAVE&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="e888f3450b342995dfb6c0192e755ba5d126956d" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;RIPEMD160&quot;&gt;RIPEMD160&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;RIPEMD160&quot;&gt;RIPEMD160&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="cab96e48e76c77600116899096f72c6cfaca0c5a" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;RandomCover&quot;&gt;RandomCover&lt;/strong&gt;(Range, UniformRNG = void) if (isRandomAccessRange!Range &amp;amp;&amp;amp; (isUniformRNG!UniformRNG || is(UniformRNG == void)));</source>
          <target state="translated">struct &lt;strong id=&quot;RandomCover&quot;&gt;RandomCover&lt;/strong&gt; (Range, UniformRNG = void) if (isRandomAccessRange! Range &amp;amp;&amp;amp; (isUniformRNG! UniformRNG || есть (UniformRNG == void)));</target>
        </trans-unit>
        <trans-unit id="30e32fe3f70ee3031f79f1e2d1a2a1a8381ddd4e" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;RandomSample&quot;&gt;RandomSample&lt;/strong&gt;(Range, UniformRNG = void) if (isInputRange!Range &amp;amp;&amp;amp; (isUniformRNG!UniformRNG || is(UniformRNG == void)));</source>
          <target state="translated">struct &lt;strong id=&quot;RandomSample&quot;&gt;RandomSample&lt;/strong&gt; (Range, UniformRNG = void) if (isInputRange! Range &amp;amp;&amp;amp; (isUniformRNG! UniformRNG || is (UniformRNG == void)));</target>
        </trans-unit>
        <trans-unit id="fd612cfd9b7227c8662044e30d25b03fb572cdc6" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Range&quot;&gt;Range&lt;/strong&gt;;</source>
          <target state="translated">структура &lt;strong id=&quot;Range&quot;&gt;Range&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="176cfe84310fd4baa46d5253d91c98a21f9876c7" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;ReadResult&quot;&gt;ReadResult&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;ReadResult&quot;&gt;ReadResult&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="aba49fd83752c412881c50a4b44a0c520fbaffb1" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Recurrence&quot;&gt;Recurrence&lt;/strong&gt;(alias fun, StateType, size_t stateSize);</source>
          <target state="translated">struct &lt;strong id=&quot;Recurrence&quot;&gt;Recurrence&lt;/strong&gt; (псевдоним fun, StateType, size_t stateSize);</target>
        </trans-unit>
        <trans-unit id="03cdcce9f4ad452b1b4fb06b8f7040ef9a8ab7f5" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;RefAppender&quot;&gt;RefAppender&lt;/strong&gt;(A) if (isDynamicArray!A);</source>
          <target state="translated">struct &lt;strong id=&quot;RefAppender&quot;&gt;RefAppender&lt;/strong&gt; (A) if (isDynamicArray! A);</target>
        </trans-unit>
        <trans-unit id="1299047516a35705f2007856a835da781819d776" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;RefCounted&quot;&gt;RefCounted&lt;/strong&gt;(T, RefCountedAutoInitialize autoInit = RefCountedAutoInitialize.yes) if (!is(T == class) &amp;amp;&amp;amp; !is(T == interface));</source>
          <target state="translated">struct &lt;strong id=&quot;RefCounted&quot;&gt;RefCounts&lt;/strong&gt; (T, RefCountingAutoInitialize autoInit = RefCountingAutoInitialize.yes) if (! is (T == class) &amp;amp;&amp;amp;! is (T == interface));</target>
        </trans-unit>
        <trans-unit id="34d6470aaf9b19e1c3e59059267cef9e3326a60a" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;RefCountedStore&quot;&gt;RefCountedStore&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;RefCountedStore&quot;&gt;RefCountingStore&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="0d4d521cdbc08c384a6c6f08962dbb24fd860a93" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;RefRange&quot;&gt;RefRange&lt;/strong&gt;(R) if (isInputRange!R);</source>
          <target state="translated">struct &lt;strong id=&quot;RefRange&quot;&gt;RefRange&lt;/strong&gt; (R) if (isInputRange! R);</target>
        </trans-unit>
        <trans-unit id="47624ea320183ed2a65847329100b89689568f80" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;RegexMatch&quot;&gt;RegexMatch&lt;/strong&gt;(R) if (isSomeString!R);</source>
          <target state="translated">struct &lt;strong id=&quot;RegexMatch&quot;&gt;RegexMatch&lt;/strong&gt; (R) if (isSomeString! R);</target>
        </trans-unit>
        <trans-unit id="45b3e8f3732d78957e9ba7d2d63ddba84ec6bc15" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Region&quot;&gt;Region&lt;/strong&gt;(ParentAllocator = NullAllocator, uint minAlign = platformAlignment, Flag!&quot;growDownwards&quot; growDownwards = No.growDownwards);</source>
          <target state="translated">struct &lt;strong id=&quot;Region&quot;&gt;Region&lt;/strong&gt; (ParentAllocator = NullAllocator, uint minAlign = platformAlignment, Flag! &quot;growDownwards&quot; growDownwards = No.growDownwards);</target>
        </trans-unit>
        <trans-unit id="ba1f61de44768aed9faccde51bef2be9a2443e8d" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Repeat&quot;&gt;Repeat&lt;/strong&gt;(T);</source>
          <target state="translated">структура &lt;strong id=&quot;Repeat&quot;&gt;Repeat&lt;/strong&gt; (T);</target>
        </trans-unit>
        <trans-unit id="bdcada47c89bd2859944f6d9aac40cc6b298b0e8" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Runtime&quot;&gt;Runtime&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;Runtime&quot;&gt;Runtime&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="3563548107e82b1203b73f045e028c7bedcdf4e3" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;SHA&quot;&gt;SHA&lt;/strong&gt;(uint hashBlockSize, uint digestSize);</source>
          <target state="translated">struct &lt;strong id=&quot;SHA&quot;&gt;SHA&lt;/strong&gt; (uint hashBlockSize, uint digestSize);</target>
        </trans-unit>
        <trans-unit id="839e536d9a216fe33ab64baf7ef4fb2d23e2c1e1" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;SList&quot;&gt;SList&lt;/strong&gt;(T) if (!is(T == shared));</source>
          <target state="translated">struct &lt;strong id=&quot;SList&quot;&gt;SList&lt;/strong&gt; (T) if (! is (T == общая));</target>
        </trans-unit>
        <trans-unit id="01612cb14259fc68e400eba23f5ca80c09f66637" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;SMTP&quot;&gt;SMTP&lt;/strong&gt;;</source>
          <target state="translated">структура &lt;strong id=&quot;SMTP&quot;&gt;SMTP&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="8d317d6a64185671f1409685d60d9f4af0810e5c" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Saturate&quot;&gt;Saturate&lt;/strong&gt;;</source>
          <target state="translated">структура &lt;strong id=&quot;Saturate&quot;&gt;насыщать&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="374e280005379ef15f937700973b88bd8974bb55" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;SbrkRegion&quot;&gt;SbrkRegion&lt;/strong&gt;(uint minAlign = platformAlignment);</source>
          <target state="translated">struct &lt;strong id=&quot;SbrkRegion&quot;&gt;SbrkRegion&lt;/strong&gt; (uint minAlign = platformAlignment);</target>
        </trans-unit>
        <trans-unit id="9b1c686a7c9596906b9a7a531c2393f71f00710f" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;ScopedAllocator&quot;&gt;ScopedAllocator&lt;/strong&gt;(ParentAllocator);</source>
          <target state="translated">struct &lt;strong id=&quot;ScopedAllocator&quot;&gt;ScopedAllocator&lt;/strong&gt; (ParentAllocator);</target>
        </trans-unit>
        <trans-unit id="ea325c33da4ccbaf4c1d779599585a8f0bc871ab" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Segregator&quot;&gt;Segregator&lt;/strong&gt;(size_t threshold, SmallAllocator, LargeAllocator);</source>
          <target state="translated">struct &lt;strong id=&quot;Segregator&quot;&gt;Segregator&lt;/strong&gt; (размер_порог, SmallAllocator, LargeAllocator);</target>
        </trans-unit>
        <trans-unit id="f5d0ce963e2318a53847d5a7e41a3cb6e76ad15e" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Sequence&quot;&gt;Sequence&lt;/strong&gt;(alias fun, State);</source>
          <target state="translated">struct &lt;strong id=&quot;Sequence&quot;&gt;Sequence&lt;/strong&gt; (псевдоним fun, State);</target>
        </trans-unit>
        <trans-unit id="2beafb765ec0434658f8f3d48a435851c46087d6" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;SetDifference&quot;&gt;SetDifference&lt;/strong&gt;(alias less = &quot;a &amp;lt; b&quot;, R1, R2) if (isInputRange!R1 &amp;amp;&amp;amp; isInputRange!R2);</source>
          <target state="translated">struct &lt;strong id=&quot;SetDifference&quot;&gt;SetDifference&lt;/strong&gt; (псевдоним less = &quot;a &amp;lt;b&quot;, R1, R2) if (isInputRange! R1 &amp;amp;&amp;amp; isInputRange! R2);</target>
        </trans-unit>
        <trans-unit id="b4b39b361b2af7561da5affef20d56086aeb0459" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;SetIntersection&quot;&gt;SetIntersection&lt;/strong&gt;(alias less = &quot;a &amp;lt; b&quot;, Rs...) if (Rs.length &amp;gt;= 2 &amp;amp;&amp;amp; allSatisfy!(isInputRange, Rs) &amp;amp;&amp;amp; !is(CommonType!(staticMap!(ElementType, Rs)) == void));</source>
          <target state="translated">struct &lt;strong id=&quot;SetIntersection&quot;&gt;SetIntersection&lt;/strong&gt; (псевдоним less = &quot;a &amp;lt;b&quot;, Rs ...) if (Rs.length&amp;gt; = 2 &amp;amp;&amp;amp; allSatisfy! (isInputRange, Rs) &amp;amp;&amp;amp;! is (CommonType! (staticMap! (ElementType, Rs)) == аннулированию));</target>
        </trans-unit>
        <trans-unit id="35dcf0d2756223da33fa15bf0071f3541c48fdbe" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;SetSymmetricDifference&quot;&gt;SetSymmetricDifference&lt;/strong&gt;(alias less = &quot;a &amp;lt; b&quot;, R1, R2) if (isInputRange!R1 &amp;amp;&amp;amp; isInputRange!R2);</source>
          <target state="translated">struct &lt;strong id=&quot;SetSymmetricDifference&quot;&gt;SetSymmetricDifference&lt;/strong&gt; (псевдоним less = &quot;a &amp;lt;b&quot;, R1, R2) if (isInputRange! R1 &amp;amp;&amp;amp; isInputRange! R2);</target>
        </trans-unit>
        <trans-unit id="fdba2c29a203984b0189c023dd461b9f9474eeb2" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;SharedAlignedBlockList&quot;&gt;SharedAlignedBlockList&lt;/strong&gt;(Allocator, ParentAllocator, ulong theAlignment = 1 &amp;lt;&amp;lt; 21);</source>
          <target state="translated">struct &lt;strong id=&quot;SharedAlignedBlockList&quot;&gt;SharedAlignedBlockList&lt;/strong&gt; (Allocator, ParentAllocator, в дополнение к Alignment = 1 &amp;lt;&amp;lt; 21);</target>
        </trans-unit>
        <trans-unit id="6d0ebb73eb6bf23e72ed4371519fbe2329d52be6" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;SharedAscendingPageAllocator&quot;&gt;SharedAscendingPageAllocator&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;SharedAscendingPageAllocator&quot;&gt;SharedAscendingPageAllocator&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="7e176aa58d823a8d19d96d8d52bd5315c6d39e0c" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;SharedBitmappedBlock&quot;&gt;SharedBitmappedBlock&lt;/strong&gt;(size_t theBlockSize, uint theAlignment = platformAlignment, ParentAllocator = NullAllocator, Flag!&quot;multiblock&quot; f = Yes.multiblock);</source>
          <target state="translated">struct &lt;strong id=&quot;SharedBitmappedBlock&quot;&gt;SharedBitmappedBlock&lt;/strong&gt; (size_t theBlockSize, uint theAlignment = platformAlignment, ParentAllocator = NullAllocator, Flag! &quot;multiblock&quot; f = Yes.multiblock);</target>
        </trans-unit>
        <trans-unit id="e4ec6bde0f2bce664d59fa1b8776455a73cd3c31" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;SharedFreeList&quot;&gt;SharedFreeList&lt;/strong&gt;(ParentAllocator, size_t minSize, size_t maxSize = minSize, size_t approxMaxNodes = unbounded);</source>
          <target state="translated">struct &lt;strong id=&quot;SharedFreeList&quot;&gt;SharedFreeList&lt;/strong&gt; (ParentAllocator, size_t minSize, size_t maxSize = minSize, size_t оксMaxNodes = неограниченный);</target>
        </trans-unit>
        <trans-unit id="7f5836fcd34eb236fb2313b54b2437513d6e4342" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;SharedRegion&quot;&gt;SharedRegion&lt;/strong&gt;(ParentAllocator = NullAllocator, uint minAlign = platformAlignment, Flag!&quot;growDownwards&quot; growDownwards = No.growDownwards);</source>
          <target state="translated">struct &lt;strong id=&quot;SharedRegion&quot;&gt;SharedRegion&lt;/strong&gt; (ParentAllocator = NullAllocator, uint minAlign = platformAlignment, Flag! &quot;growDownwards&quot; growDownwards = No.growDownwards);</target>
        </trans-unit>
        <trans-unit id="f57b11011223e9cdee267fcc0447657e7624009a" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;SortedRange&quot;&gt;SortedRange&lt;/strong&gt;(Range, alias pred = &quot;a &amp;lt; b&quot;) if (isInputRange!Range &amp;amp;&amp;amp; !isInstanceOf!(&lt;strong id=&quot;SortedRange&quot;&gt;SortedRange&lt;/strong&gt;, Range));</source>
          <target state="translated">struct &lt;strong id=&quot;SortedRange&quot;&gt;SortedRange&lt;/strong&gt; (Range, псевдоним pred = &quot;a &amp;lt;b&quot;) if (isInputRange! Range &amp;amp;&amp;amp;! isInstanceOf! ( &lt;strong id=&quot;SortedRange&quot;&gt;SortedRange&lt;/strong&gt; , Range));</target>
        </trans-unit>
        <trans-unit id="5a9896d79bfe47f3c5df475a2e8f2040e060c730" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;SortedRange&quot;&gt;SortedRange&lt;/strong&gt;(Range, alias pred = &quot;a &amp;lt; b&quot;, SortedRangeOptions opt = SortedRangeOptions.assumeSorted) if (isInputRange!Range &amp;amp;&amp;amp; !isInstanceOf!(&lt;strong id=&quot;SortedRange&quot;&gt;SortedRange&lt;/strong&gt;, Range));</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95bf300fdc9098f6555f12fef3c2904c628cccf3" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Splitter&quot;&gt;Splitter&lt;/strong&gt;(Flag!&quot;keepSeparators&quot; keepSeparators = No.keepSeparators, Range, alias RegEx = Regex) if (isSomeString!Range &amp;amp;&amp;amp; isRegexFor!(RegEx, Range));</source>
          <target state="translated">struct &lt;strong id=&quot;Splitter&quot;&gt;Splitter&lt;/strong&gt; (Flag! &quot;keepSeparators&quot; keepSeparators = No.keepSeparators, Range, псевдоним RegEx = Regex) if (isSomeString! Range &amp;amp;&amp;amp; isRegexFor! (RegEx, Range));</target>
        </trans-unit>
        <trans-unit id="c3a8e92b8e10ce84ba7c8549c4878a3feb27bba1" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Srcpos&quot;&gt;Srcpos&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;Srcpos&quot;&gt;Srcpos&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="531d2d8fb5e088a99e91d4cb968bc9d0a5d53a53" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Stack&quot;&gt;Stack&lt;/strong&gt;;</source>
          <target state="translated">структура &lt;strong id=&quot;Stack&quot;&gt;стека&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="cf2130d113b44095c160b4ccb22c065b7ee3ce6e" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Stats&quot;&gt;Stats&lt;/strong&gt;;</source>
          <target state="translated">структура &lt;strong id=&quot;Stats&quot;&gt;Stats&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="d646b738aa7ce30957d65a8c9d10b48eb7824fca" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;StatsCollector&quot;&gt;StatsCollector&lt;/strong&gt;(Allocator, ulong flags = Options.all, ulong perCallFlags = 0);</source>
          <target state="translated">struct &lt;strong id=&quot;StatsCollector&quot;&gt;StatsCollector&lt;/strong&gt; (Allocator, ulong flags = Options.all, ulong perCallFlags = 0);</target>
        </trans-unit>
        <trans-unit id="aeb255abb236b83ece812bea9f547836dd601430" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;StatusLine&quot;&gt;StatusLine&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;StatusLine&quot;&gt;StatusLine&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="cd6a8ecaf428f2ffaec21d86e220f0a4f0798afc" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;StopWatch&quot;&gt;StopWatch&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;StopWatch&quot;&gt;StopWatch&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="6adcfe7e9d084f600cedaf5846ee13211d9c9467" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;SymPair&quot;&gt;SymPair&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;SymPair&quot;&gt;SymPair&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="ba752dc09733390e2fd964cf64269cc158cac476" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Symbol&quot;&gt;Symbol&lt;/strong&gt;;</source>
          <target state="translated">структура &lt;strong id=&quot;Symbol&quot;&gt;Symbol&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="9ecd65185e9b91b30d4a12a34f3c9b1a5d27ae6e" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;SysTime&quot;&gt;SysTime&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;SysTime&quot;&gt;SysTime&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="dcc3949e0d018545f6b0e65593f9de3b3a63b70f" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;TME&quot;&gt;TME&lt;/strong&gt;;</source>
          <target state="translated">структура &lt;strong id=&quot;TME&quot;&gt;ТМЕ&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="df58fd4353d6eb6fc645447880c2ba9ce90e6b51" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;TMF&quot;&gt;TMF&lt;/strong&gt;;</source>
          <target state="translated">структура &lt;strong id=&quot;TMF&quot;&gt;TMF&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="85d27a6687957186fc0226845a5521353ad61475" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;TMNE&quot;&gt;TMNE&lt;/strong&gt;;</source>
          <target state="translated">структура &lt;strong id=&quot;TMNE&quot;&gt;TMNE&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="92f3b71d4a555359bd1261d89d72904be93c925f" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;TMNF&quot;&gt;TMNF&lt;/strong&gt;;</source>
          <target state="translated">структура &lt;strong id=&quot;TMNF&quot;&gt;ТМНФ&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="ed62f9314abeef55fef978b147d742bfc3df8bdf" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;TZConversions&quot;&gt;TZConversions&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;TZConversions&quot;&gt;TZConversions&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="97d191b25d0d17fa82ef2fb3f79679e1a7c7edfc" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Take&quot;&gt;Take&lt;/strong&gt;(Range) if (isInputRange!(Unqual!Range) &amp;amp;&amp;amp; !(!isInfinite!(Unqual!Range) &amp;amp;&amp;amp; hasSlicing!(Unqual!Range) || is(Range T == &lt;strong id=&quot;Take&quot;&gt;Take&lt;/strong&gt;!T)));</source>
          <target state="translated">struct &lt;strong id=&quot;Take&quot;&gt;Take&lt;/strong&gt; (Range) if (isInputRange! (Unqual! Range) &amp;amp;&amp;amp;! (! isInfinite! (Unqual! Range) &amp;amp;&amp;amp; hasSlicing! (Unqual! Range) || is (Диапазон T == &lt;strong id=&quot;Take&quot;&gt;Take&lt;/strong&gt; ! T)));</target>
        </trans-unit>
        <trans-unit id="2a317ed77b2b787578edd624adb9412369989333" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Target&quot;&gt;Target&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;Target&quot;&gt;Target&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="58e773831572ea725bd5a4d33a2d36540e5adef1" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;TargetC&quot;&gt;TargetC&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;TargetC&quot;&gt;TargetC&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="b9f6285da1b478b1f2bdbbbed420be1095bc457e" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;TargetCPP&quot;&gt;TargetCPP&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;TargetCPP&quot;&gt;TargetCPP&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="cf5d6c2234ec24d349da20857fd263a323114f47" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Task&quot;&gt;Task&lt;/strong&gt;(alias fun, Args...);</source>
          <target state="translated">struct &lt;strong id=&quot;Task&quot;&gt;Task&lt;/strong&gt; (псевдоним fun, Args ...);</target>
        </trans-unit>
        <trans-unit id="480c32318c25134ea220042137a1fa403059a4cf" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;TemplateInstanceBox&quot;&gt;TemplateInstanceBox&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;TemplateInstanceBox&quot;&gt;TemplateInstanceBox&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="024d264fdd23be16414b89b55dc35647b8231835" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Ternary&quot;&gt;Ternary&lt;/strong&gt;;</source>
          <target state="translated">структура &lt;strong id=&quot;Ternary&quot;&gt;тройной&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="5fd19b9f6e76c1181fc09ae1a9fe78f7ef6d5fa9" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;ThreadInfo&quot;&gt;ThreadInfo&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;ThreadInfo&quot;&gt;ThreadInfo&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="4a40a48f60f0c9843c36cad1d1cb39c25f989295" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Throw&quot;&gt;Throw&lt;/strong&gt;;</source>
          <target state="translated">структурировать &lt;strong id=&quot;Throw&quot;&gt;бросок&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="794c457e64d6adef9007a5625dd098a4a6fa6813" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;TickDuration&quot;&gt;TickDuration&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;TickDuration&quot;&gt;TickDuration&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="51a6af83575003b161d970f53d6777632d7421cf" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Tid&quot;&gt;Tid&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;Tid&quot;&gt;Tid&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="4a069f7714661e2e1bc98837302913e0da441c61" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;TimeOfDay&quot;&gt;TimeOfDay&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;TimeOfDay&quot;&gt;TimeOfDay&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="87805925dcb1cfa2b00d528681964eede00ab269" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;TimeVal&quot;&gt;TimeVal&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;TimeVal&quot;&gt;TimeVal&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="e45e6fa02986f354e8c1c9d0c44f99843005b94a" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Token&quot;&gt;Token&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;Token&quot;&gt;Token&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="4339c953d317a7603ca6ac82b73a1818aef8cff0" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Transversal&quot;&gt;Transversal&lt;/strong&gt;(Ror, TransverseOptions opt = TransverseOptions.assumeJagged);</source>
          <target state="translated">struct &lt;strong id=&quot;Transversal&quot;&gt;Transversal&lt;/strong&gt; (Ror, TransverseOptions opt = TransverseOptions.assumeJagged);</target>
        </trans-unit>
        <trans-unit id="9abba431d6f35e2cdcff3912e40a4bc46a7179ba" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Tuple&quot;&gt;Tuple&lt;/strong&gt;(Specs...) if (distinctFieldNames!Specs);</source>
          <target state="translated">struct &lt;strong id=&quot;Tuple&quot;&gt;Tuple&lt;/strong&gt; (Specs ...) if (differentFieldNames! Specs);</target>
        </trans-unit>
        <trans-unit id="3e6b443e06cd5348c5c41483cf22974db88a221c" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;TypedAllocator&quot;&gt;TypedAllocator&lt;/strong&gt;(PrimaryAllocator, Policies...);</source>
          <target state="translated">struct &lt;strong id=&quot;TypedAllocator&quot;&gt;TypedAllocator&lt;/strong&gt; (PrimaryAllocator, Policies ...);</target>
        </trans-unit>
        <trans-unit id="0d40eb4c174fbe53db79df9276e6216299e21c12" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Typedef&quot;&gt;Typedef&lt;/strong&gt;(T, T init = T.init, string cookie = null);</source>
          <target state="translated">struct &lt;strong id=&quot;Typedef&quot;&gt;Typedef&lt;/strong&gt; (T, T init = T.init, строка cookie = null);</target>
        </trans-unit>
        <trans-unit id="d8373bff7751486b29d3ada687c4b39595e12881" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;UUID&quot;&gt;UUID&lt;/strong&gt;;</source>
          <target state="translated">структура &lt;strong id=&quot;UUID&quot;&gt;UUID&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="ffb23d2215437ffb172bd2097be702578bb7beba" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;UnionExp&quot;&gt;UnionExp&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;UnionExp&quot;&gt;UnionExp&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="adb6d7319e09b83cecad391ecc74b7feb495d786" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Unique&quot;&gt;Unique&lt;/strong&gt;(T);</source>
          <target state="translated">struct &lt;strong id=&quot;Unique&quot;&gt;Unique&lt;/strong&gt; (T);</target>
        </trans-unit>
        <trans-unit id="205df9b7c27becb874d81942cf987e1eab803432" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;UnitTestResult&quot;&gt;UnitTestResult&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;UnitTestResult&quot;&gt;UnitTestResult&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="4d156922593aa8379b08fb36e7d7bd87d93ddb32" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Until&quot;&gt;Until&lt;/strong&gt;(alias pred, Range, Sentinel) if (isInputRange!Range);</source>
          <target state="translated">не STRUCT &lt;strong id=&quot;Until&quot;&gt;До&lt;/strong&gt; (псевдоним Range, пред, Страж) , если (isInputRange Range!);</target>
        </trans-unit>
        <trans-unit id="018b77c489575296749e075266683b2c543055c6" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Usage&quot;&gt;Usage&lt;/strong&gt;;</source>
          <target state="translated">&lt;strong id=&quot;Usage&quot;&gt;Использование&lt;/strong&gt; структуры ;</target>
        </trans-unit>
        <trans-unit id="56e00407c75b2dafb6f4369492a304cfcdd183f9" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;VariantN&quot;&gt;VariantN&lt;/strong&gt;(size_t maxDataSize, AllowedTypesParam...);</source>
          <target state="translated">struct &lt;strong id=&quot;VariantN&quot;&gt;VariantN&lt;/strong&gt; (size_t maxDataSize, AllowedTypesParam ...);</target>
        </trans-unit>
        <trans-unit id="ef476008805c78fadca0296aa1215c23cde61e47" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Warn&quot;&gt;Warn&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;Warn&quot;&gt;Warn&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="2f4953d83831b57874a33bf8358f02c1082b4b8b" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;WithNaN&quot;&gt;WithNaN&lt;/strong&gt;;</source>
          <target state="translated">структура &lt;strong id=&quot;WithNaN&quot;&gt;WithNaN&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="4d61cdf0860b1223ba7f0dc1ecee880b5ba42203" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;WorkerLocalStorage&quot;&gt;WorkerLocalStorage&lt;/strong&gt;(T);</source>
          <target state="translated">struct &lt;strong id=&quot;WorkerLocalStorage&quot;&gt;WorkerLocalStorage&lt;/strong&gt; (T);</target>
        </trans-unit>
        <trans-unit id="4bf94ea454355bd3ff7d708ca70f9ca573e802ab" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;WorkerLocalStorageRange&quot;&gt;WorkerLocalStorageRange&lt;/strong&gt;(T);</source>
          <target state="translated">struct &lt;strong id=&quot;WorkerLocalStorageRange&quot;&gt;WorkerLocalStorageRange&lt;/strong&gt; (T);</target>
        </trans-unit>
        <trans-unit id="ccc9c957111dd2997f3468dc7371827c266e6685" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;XorshiftEngine&quot;&gt;XorshiftEngine&lt;/strong&gt;(UIntType, uint nbits, int sa, int sb, int sc) if (isUnsigned!UIntType &amp;amp;&amp;amp; !(sa &amp;gt; 0 &amp;amp;&amp;amp; (sb &amp;gt; 0) &amp;amp;&amp;amp; (sc &amp;gt; 0)));</source>
          <target state="translated">struct &lt;strong id=&quot;XorshiftEngine&quot;&gt;XorshiftEngine&lt;/strong&gt; (UIntType, uint nbits, int sa, int sb, int sc) if (isUnsigned! UIntType &amp;amp;&amp;amp;! (sa&amp;gt; 0 &amp;amp;&amp;amp; (sb&amp;gt; 0) &amp;amp;&amp;amp; (sc&amp;gt; 0)));</target>
        </trans-unit>
        <trans-unit id="4142baae376ce4eef6333088f4119e11c22a3177" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Yes&quot;&gt;Yes&lt;/strong&gt;;</source>
          <target state="translated">структура &lt;strong id=&quot;Yes&quot;&gt;Да&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="acbac98a9ed6ad0e8f6c3dd3faf37dd45d943956" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;Zip&quot;&gt;Zip&lt;/strong&gt;(Ranges...) if (Ranges.length &amp;amp;&amp;amp; allSatisfy!(isInputRange, Ranges));</source>
          <target state="translated">struct &lt;strong id=&quot;Zip&quot;&gt;Zip&lt;/strong&gt; (Ranges ...) if (Ranges.length &amp;amp;&amp;amp; allSatisfy! (isInputRange, Ranges));</target>
        </trans-unit>
        <trans-unit id="fda47f2475960d953c0ae9f5072345952e6c7bb1" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;_Declaration&quot;&gt;_Declaration&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;_Declaration&quot;&gt;_Declaration&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="ee47f64889557a04a81703edaa9b7b348475c28d" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;_IO_FILE&quot;&gt;_IO_FILE&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;_IO_FILE&quot;&gt;_IO_FILE&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="206e597ac97f9a134f4f4368453334df6322e498" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;_N2&quot;&gt;_N2&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;_N2&quot;&gt;_N2&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="7e144f03d38bd9714bbd87c78b5f9c187afbf07d" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;_N28&quot;&gt;_N28&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;_N28&quot;&gt;_N28&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="d2291d51a6c680a021abb8863c3dfc8287d2f1bc" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;allocator&quot;&gt;allocator&lt;/strong&gt;(T);</source>
          <target state="translated">&lt;strong id=&quot;allocator&quot;&gt;распределитель&lt;/strong&gt; структуры (T);</target>
        </trans-unit>
        <trans-unit id="6e04dbf42d3fba5a198fb10ab985ea44b12eeaf6" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;allocator_traits&quot;&gt;allocator_traits&lt;/strong&gt;(Alloc);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c005bcbaea94694d33b2263e64fefdcb5a59352" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;array&quot;&gt;array&lt;/strong&gt;(T, size_t N);</source>
          <target state="translated">структура &lt;strong id=&quot;array&quot;&gt;массива&lt;/strong&gt; (Т, size_t N);</target>
        </trans-unit>
        <trans-unit id="fd3468d43adb4fdef004be3e1756b70a9c424de8" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;baseclass_t&quot;&gt;baseclass_t&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;baseclass_t&quot;&gt;baseclass_t&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="b48717d487f4d71ba1084acac1ad74c4f46dbf7b" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;basic_string&quot;&gt;basic_string&lt;/strong&gt;(T, Traits = char_traits!T, Alloc = allocator!T);</source>
          <target state="translated">struct &lt;strong id=&quot;basic_string&quot;&gt;basic_string&lt;/strong&gt; (T, Traits = char_traits! T, Alloc = allocator! T);</target>
        </trans-unit>
        <trans-unit id="510c507271d4a508c5941efa8f4c6667d1766e08" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;basic_string_view&quot;&gt;basic_string_view&lt;/strong&gt;(T, Traits = char_traits!T);</source>
          <target state="translated">struct &lt;strong id=&quot;basic_string_view&quot;&gt;basic_string_view&lt;/strong&gt; (T, Traits = char_traits! T);</target>
        </trans-unit>
        <trans-unit id="666f4664e25c5077422ce63005ba8eab45ebe62b" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;block&quot;&gt;block&lt;/strong&gt;;</source>
          <target state="translated">структурный &lt;strong id=&quot;block&quot;&gt;блок&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="ec05748a17a546568405cbc0e60ac01eb7f67d8d" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;char_traits&quot;&gt;char_traits&lt;/strong&gt;(CharT);</source>
          <target state="translated">struct &lt;strong id=&quot;char_traits&quot;&gt;char_traits&lt;/strong&gt; (CharT);</target>
        </trans-unit>
        <trans-unit id="0f8e98104c3195c756628d0197d1e4e63ad89862" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;curl_certinfo&quot;&gt;curl_certinfo&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;curl_certinfo&quot;&gt;curl_certinfo&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="961428fa1093893dc4aa2eca510951255402f6e0" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;curl_fileinfo&quot;&gt;curl_fileinfo&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;curl_fileinfo&quot;&gt;curl_fileinfo&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="10a548885ab87c43d9bd3a630ae86680d54b7bda" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;curl_forms&quot;&gt;curl_forms&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;curl_forms&quot;&gt;curl_forms&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="2fce05ff5f1daca24964b0d4ec34daabf6cf0c0b" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;curl_httppost&quot;&gt;curl_httppost&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;curl_httppost&quot;&gt;curl_httppost&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="7e596021e7da67e919b8ce7710a1d9045a21f5d4" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;curl_khkey&quot;&gt;curl_khkey&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;curl_khkey&quot;&gt;curl_khkey&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="8357867a25f422bba52596959edd5d952e5a90b9" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;curl_slist&quot;&gt;curl_slist&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;curl_slist&quot;&gt;curl_slist&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="7dae24671bc7b92c780967491edae6b8ff453f1f" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;curl_sockaddr&quot;&gt;curl_sockaddr&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;curl_sockaddr&quot;&gt;curl_sockaddr&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="1a44583007353a778a8f6257b6a1856d2c8c9952" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;div_t&quot;&gt;div_t&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;div_t&quot;&gt;div_t&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="3ea6382f621283524e0dd87cd6a0654ef7b7e11c" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;dt_t&quot;&gt;dt_t&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;dt_t&quot;&gt;dt_t&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="f6e78d1bb3c5a8dcb6c99bd65a3b5f1a4210bbcd" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;elem&quot;&gt;elem&lt;/strong&gt;;</source>
          <target state="translated">структура &lt;strong id=&quot;elem&quot;&gt;элемент&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="9771811dca4b39a876997a8b3b402ea66789478e" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;fpos_t&quot;&gt;fpos_t&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;fpos_t&quot;&gt;fpos_t&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="3a6c74690d58e5f01b6deba016042f47c269bc16" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;fts5_api&quot;&gt;fts5_api&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;fts5_api&quot;&gt;fts5_api&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="a00b91977134c7120d2e1562d9ee0f706b56442f" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;gnuAbiTag&quot;&gt;gnuAbiTag&lt;/strong&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="875de95c96b878ccfbfeab8f900e6c764163128f" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;hangulSyllableType&quot;&gt;hangulSyllableType&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;hangulSyllableType&quot;&gt;hangulSyllableType&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="717d2deede12305c1161b424da902b405c64640c" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;imaxdiv_t&quot;&gt;imaxdiv_t&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;imaxdiv_t&quot;&gt;imaxdiv_t&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="cb6b8116acb93703c9f3e8dca618babbe2ab74ef" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;integral_constant&quot;&gt;integral_constant&lt;/strong&gt;(T, T Val);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f0422b09ea3f4b0dba9773672dc6ad12102839e" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;is_empty&quot;&gt;is_empty&lt;/strong&gt;(T);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e1d49971ee9725b09c72c275264d46489e61e58" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;lconv&quot;&gt;lconv&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;lconv&quot;&gt;lconv&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="c0806b9beb91c2458187fdcd4d6a278b1907e595" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;ldiv_t&quot;&gt;ldiv_t&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;ldiv_t&quot;&gt;ldiv_t&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="d8c26013453ac206cbc89ac2a9a75486d65f0856" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;lines&quot;&gt;lines&lt;/strong&gt;;</source>
          <target state="translated">структурировать &lt;strong id=&quot;lines&quot;&gt;линии&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="99e9318df12de9eb37368f82ce6fe5e70ed64f9a" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;lldiv_t&quot;&gt;lldiv_t&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;lldiv_t&quot;&gt;lldiv_t&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="19633537b9aad7949e0c9b34c312c3cc457c4ac5" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;mbstate_t&quot;&gt;mbstate_t&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;mbstate_t&quot;&gt;mbstate_t&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="7535008b2463d69e631ab5b506a3dcc15be1b25c" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;meminit_t&quot;&gt;meminit_t&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;meminit_t&quot;&gt;meminit_t&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="6a8c4ceff5b741d5cea44cfbe19a57411e95ca7c" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;nothrow_t&quot;&gt;nothrow_t&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;nothrow_t&quot;&gt;nothrow_t&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="f638b21b14698d082143e5380c800d2be973009f" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;script&quot;&gt;script&lt;/strong&gt;;</source>
          <target state="translated">структурный &lt;strong id=&quot;script&quot;&gt;скрипт&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="e537df3135ae494b85eb05c65709b767b5d66a37" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;selector&quot;&gt;selector&lt;/strong&gt;;</source>
          <target state="translated">&lt;strong id=&quot;selector&quot;&gt;селектор&lt;/strong&gt; структуры ;</target>
        </trans-unit>
        <trans-unit id="6e1c944841b3afc9b7b1557e2502f5e06f427115" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;sqlite3&quot;&gt;sqlite3&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;sqlite3&quot;&gt;sqlite3&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="7c121471bd48e3de87211010535e736cf080ebb3" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;sqlite3_api_routines&quot;&gt;sqlite3_api_routines&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;sqlite3_api_routines&quot;&gt;sqlite3_api_routines&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="c9d8aafb1b75c0e0305c053bc9e4e3bf0fe53b30" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;sqlite3_backup&quot;&gt;sqlite3_backup&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;sqlite3_backup&quot;&gt;sqlite3_backup&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="66ad2653b32cee9bdcc84cfbd076b8bb50c4e0dc" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;sqlite3_blob&quot;&gt;sqlite3_blob&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;sqlite3_blob&quot;&gt;sqlite3_blob&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="ec4c06d1c4446254338edcd89345343416558974" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;sqlite3_context&quot;&gt;sqlite3_context&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;sqlite3_context&quot;&gt;sqlite3_context&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="8c585455850db211c62bf9772bb4f5b7c1fbfc98" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;sqlite3_file&quot;&gt;sqlite3_file&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;sqlite3_file&quot;&gt;sqlite3_file&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="12a67eb099c0a7ddc0dcfcfef2db206a99d2487c" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;sqlite3_index_info&quot;&gt;sqlite3_index_info&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;sqlite3_index_info&quot;&gt;sqlite3_index_info&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="dd243ecdc22292013d2f8f23c703f1a7b51bbe8d" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;sqlite3_io_methods&quot;&gt;sqlite3_io_methods&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;sqlite3_io_methods&quot;&gt;sqlite3_io_methods&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="4272774ce8bff089c5e0732d62f368a04ce50f0d" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;sqlite3_mem_methods&quot;&gt;sqlite3_mem_methods&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;sqlite3_mem_methods&quot;&gt;sqlite3_mem_methods&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="aef6b2f59655285fe921231a46ed8c19af068890" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;sqlite3_module&quot;&gt;sqlite3_module&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;sqlite3_module&quot;&gt;sqlite3_module&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="6099d6510e2bc9cdd6ca5b8dd0f03891f2129a3f" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;sqlite3_mutex&quot;&gt;sqlite3_mutex&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;sqlite3_mutex&quot;&gt;sqlite3_mutex&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="13ae64bd2ed3a155a417f9bdb179b8a0624afbbe" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;sqlite3_mutex_methods&quot;&gt;sqlite3_mutex_methods&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;sqlite3_mutex_methods&quot;&gt;sqlite3_mutex_methods&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="4f68a0fdcf9ce0e432490b772c8146ea37136d7d" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;sqlite3_pcache&quot;&gt;sqlite3_pcache&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;sqlite3_pcache&quot;&gt;sqlite3_pcache&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="0d87f6b88a23b66d71b8dcac5b2caa479ef9cf88" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;sqlite3_pcache_methods2&quot;&gt;sqlite3_pcache_methods2&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;sqlite3_pcache_methods2&quot;&gt;sqlite3_pcache_methods2&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="c24db3addfb34808b6429917ddd9b6f7bf17a327" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;sqlite3_pcache_page&quot;&gt;sqlite3_pcache_page&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;sqlite3_pcache_page&quot;&gt;sqlite3_pcache_page&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="57a8ddaae27c8f115d5702a51da7647c18e8990e" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;sqlite3_rtree_geometry&quot;&gt;sqlite3_rtree_geometry&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;sqlite3_rtree_geometry&quot;&gt;sqlite3_rtree_geometry&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="32c46f9cbe2b3d1c6b4c4a821d8cd3a83a587351" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;sqlite3_stmt&quot;&gt;sqlite3_stmt&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;sqlite3_stmt&quot;&gt;sqlite3_stmt&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="131a2913f3fb3f1f4e1f56597299b2e13093007f" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;sqlite3_str&quot;&gt;sqlite3_str&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;sqlite3_str&quot;&gt;sqlite3_str&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="fd94439b40707d24f75de2f5ad8fc134452c9177" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;sqlite3_value&quot;&gt;sqlite3_value&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;sqlite3_value&quot;&gt;sqlite3_value&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="83629614863c19edb5d5b564eeb366c0bcfec1eb" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;sqlite3_vtab&quot;&gt;sqlite3_vtab&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;sqlite3_vtab&quot;&gt;sqlite3_vtab&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="669d850cd5ef2e5f965db9aa4c6dd6de305b453b" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;sqlite3_vtab_cursor&quot;&gt;sqlite3_vtab_cursor&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;sqlite3_vtab_cursor&quot;&gt;sqlite3_vtab_cursor&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="9c0fbe1af8a76906ecf8271650eb1d1ead2da181" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;symtab_t&quot;&gt;symtab_t&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;symtab_t&quot;&gt;symtab_t&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="08ec9a33fbc9e8a1e8041d88d595abd0448401bd" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;template_t&quot;&gt;template_t&lt;/strong&gt;;</source>
          <target state="translated">struct &lt;strong id=&quot;template_t&quot;&gt;template_t&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="177b150bb78394596cbe1def4e9a48cbbfc8726b" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;tm&quot;&gt;tm&lt;/strong&gt;;</source>
          <target state="translated">структура &lt;strong id=&quot;tm&quot;&gt;тм&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="84c25286bf61b7ae2f29c2a933c2f1ee9563be49" translate="yes" xml:space="preserve">
          <source>struct &lt;strong id=&quot;unicode&quot;&gt;unicode&lt;/strong&gt;;</source>
          <target state="translated">структура &lt;strong id=&quot;unicode&quot;&gt;юникод&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="20e240478497517929dad3ab32b9e8a9e3df31d7" translate="yes" xml:space="preserve">
          <source>struct alignment that is in effect</source>
          <target state="translated">выравнивание структуры,которое фактически</target>
        </trans-unit>
        <trans-unit id="523604e327a33d7a0e7fb03564bda67db860efc0" translate="yes" xml:space="preserve">
          <source>struct arguments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c52aac47da5d7d29453a160ded6ad76f17d2e531" translate="yes" xml:space="preserve">
          <source>struct declaration to search</source>
          <target state="translated">структурированная декларация для поиска</target>
        </trans-unit>
        <trans-unit id="6b585490dd12cd9a33991ee1e32f8575e48d16d3" translate="yes" xml:space="preserve">
          <source>struct fields</source>
          <target state="translated">структурные поля</target>
        </trans-unit>
        <trans-unit id="817a53a5b24064a16736dbaab103649f91f6cc93" translate="yes" xml:space="preserve">
          <source>struct or class</source>
          <target state="translated">структурировать или класс</target>
        </trans-unit>
        <trans-unit id="670618df687e95f161d1da663e2ad4a395918da1" translate="yes" xml:space="preserve">
          <source>struct or class to build destructor for</source>
          <target state="translated">структурировать или класс для построения деструктора для</target>
        </trans-unit>
        <trans-unit id="40a584e794ae3180f1f1a7f00da616b13c9d5a48" translate="yes" xml:space="preserve">
          <source>struct or class we need the correct &lt;code&gt;this&lt;/code&gt; for</source>
          <target state="translated">структура или класс нам нужно исправить &lt;code&gt;this&lt;/code&gt; для</target>
        </trans-unit>
        <trans-unit id="678acb565aa7cda4f260e9dfaa24d87f3d44fd25" translate="yes" xml:space="preserve">
          <source>struct or class with no member fields</source>
          <target state="translated">структурировать или класс без полей членов</target>
        </trans-unit>
        <trans-unit id="0f31b5d11c4a75b10223369815d184db3cd0b366" translate="yes" xml:space="preserve">
          <source>struct to generate opAssign for</source>
          <target state="translated">структурировать для генерации опАзнака</target>
        </trans-unit>
        <trans-unit id="dcaf6a49b8313cd7e4bdd6b941fe201fe8c222a4" translate="yes" xml:space="preserve">
          <source>struct, array and slice arguments are not allowed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0131e99ebfe5d26f391cff3575c2d202e6ff9b3f" translate="yes" xml:space="preserve">
          <source>struct, union, and class types</source>
          <target state="translated">типы структуры,объединения и класса</target>
        </trans-unit>
        <trans-unit id="b7f8f135d65557e22cad7b0e59cef268a26cbed2" translate="yes" xml:space="preserve">
          <source>structalign_t &lt;code&gt;alignment&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;alignment&lt;/code&gt; structalign_t</target>
        </trans-unit>
        <trans-unit id="f49f11075fcb2097ab0672ac48c2787c8201bfab" translate="yes" xml:space="preserve">
          <source>structalign_t &lt;strong id=&quot;alignment&quot;&gt;alignment&lt;/strong&gt;();</source>
          <target state="translated">structalign_t &lt;strong id=&quot;alignment&quot;&gt;alignment&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="4bd3363439c4bcabb1a22ac447e31eab3ae39e9c" translate="yes" xml:space="preserve">
          <source>structs</source>
          <target state="translated">structs</target>
        </trans-unit>
        <trans-unit id="a303e006b3afe1605bd23095aadc697ac8122f93" translate="yes" xml:space="preserve">
          <source>structs need to pass the address of an instance</source>
          <target state="translated">структурам необходимо передать адрес экземпляра</target>
        </trans-unit>
        <trans-unit id="17ba6a2e4e5e996865f378cf89c7bc27b89ec3ca" translate="yes" xml:space="preserve">
          <source>structurally conform</source>
          <target state="translated">структурное соответствие</target>
        </trans-unit>
        <trans-unit id="7803562f4f19cd54e69e2f0cd6068aa01fd7819c" translate="yes" xml:space="preserve">
          <source>structure to be used as parameter for CURLFORM_ARRAY</source>
          <target state="translated">структура,используемая в качестве параметра для CURLFORM_ARRAY</target>
        </trans-unit>
        <trans-unit id="36fc7df87f72ca920d2f6165305bc1c7ea6ab596" translate="yes" xml:space="preserve">
          <source>submatch number 1 to 99 respectively.</source>
          <target state="translated">субматчевые номера с 1 по 99 соответственно.</target>
        </trans-unit>
        <trans-unit id="832c96dd459e81ccc22f73492aa50e87f038b768" translate="yes" xml:space="preserve">
          <source>subobjects</source>
          <target state="translated">subobjects</target>
        </trans-unit>
        <trans-unit id="b733be285addb4629a6479d3821a9397146311e6" translate="yes" xml:space="preserve">
          <source>substring to search for</source>
          <target state="translated">подстрока для поиска</target>
        </trans-unit>
        <trans-unit id="148d46fb75d907f1fd6bcb109cb532d2ed504a21" translate="yes" xml:space="preserve">
          <source>subtraction</source>
          <target state="translated">subtraction</target>
        </trans-unit>
        <trans-unit id="693fabfc6ea748260c798354a153cab3b33c1d0e" translate="yes" xml:space="preserve">
          <source>such that value =</source>
          <target state="translated">такое значение =</target>
        </trans-unit>
        <trans-unit id="8451ba8a14d79753d34cb33b51ba46b4b025eb81" translate="yes" xml:space="preserve">
          <source>super</source>
          <target state="translated">super</target>
        </trans-unit>
        <trans-unit id="984448a143394872bdc99054be22b46d7803bfb2" translate="yes" xml:space="preserve">
          <source>super's non-static fields and super's interface vptrs, from least to most derived</source>
          <target state="translated">нестатические поля супер и vptrs интерфейса супер,от наименее до наиболее производных</target>
        </trans-unit>
        <trans-unit id="c9ca3affea80ad37a2d8c2cfbd7c9890e33fa851" translate="yes" xml:space="preserve">
          <source>supplied by the user</source>
          <target state="translated">предоставленный пользователем</target>
        </trans-unit>
        <trans-unit id="070e3544155322ef6ba6c5e87890c55681f8a93c" translate="yes" xml:space="preserve">
          <source>support added in 7.15.2, enum existed already in 7.10</source>
          <target state="translated">поддержка добавлена в 7.15.2,перечисление уже существовало в 7.10</target>
        </trans-unit>
        <trans-unit id="7b09aab9839a622e870dd995b2ca276a6db1d405" translate="yes" xml:space="preserve">
          <source>supports files bigger than 2GB</source>
          <target state="translated">поддержка файлов размером более 2 ГБ</target>
        </trans-unit>
        <trans-unit id="64cd6e26ff45e466adfb704af87930844eb0c18a" translate="yes" xml:space="preserve">
          <source>switch(condition)</source>
          <target state="translated">switch(condition)</target>
        </trans-unit>
        <trans-unit id="810a25d76c31e495cc070bdf42e076f7c9b0a1cd" translate="yes" xml:space="preserve">
          <source>symbol</source>
          <target state="translated">symbol</target>
        </trans-unit>
        <trans-unit id="5610f15e0855c92e5922f83af4eccc2a1443fadc" translate="yes" xml:space="preserve">
          <source>symbol found, NULL if not</source>
          <target state="translated">символ найден,если нет,то NULL</target>
        </trans-unit>
        <trans-unit id="8091e3089dad6eeb127f88453c33e9040140edf5" translate="yes" xml:space="preserve">
          <source>symbol of instance of _cpp_type_info_ptr</source>
          <target state="translated">символ экземпляра _cpp_type_info_ptr</target>
        </trans-unit>
        <trans-unit id="7781fd152134e207782ea51d2b3a340b01abf201" translate="yes" xml:space="preserve">
          <source>symbol that contains the data</source>
          <target state="translated">символ,содержащий данные</target>
        </trans-unit>
        <trans-unit id="13475fe625079d0d7e4077e004a85af0c5b062dd" translate="yes" xml:space="preserve">
          <source>symbol that might be a function template</source>
          <target state="translated">символ,который может быть шаблоном функции</target>
        </trans-unit>
        <trans-unit id="bfecc6b6c62c686b9d239e50ffe9edb6a9b2e460" translate="yes" xml:space="preserve">
          <source>symbol to check for visibility</source>
          <target state="translated">символ для проверки видимости</target>
        </trans-unit>
        <trans-unit id="35a4bcf4331dba158ba426f35374d3dc18a01884" translate="yes" xml:space="preserve">
          <source>symbol to resolve</source>
          <target state="translated">символ решения</target>
        </trans-unit>
        <trans-unit id="5dae263232082fbc575e5cb03ae55a7374e0d3a9" translate="yes" xml:space="preserve">
          <source>symbol to start from</source>
          <target state="translated">символ для начала</target>
        </trans-unit>
        <trans-unit id="5e1086a7c83fd45623bfb97a74383a8b0a1cfc3e" translate="yes" xml:space="preserve">
          <source>symbols to use with CURLOPT_POSTREDIR. CURL_REDIR_POST_301 and CURL_REDIR_POST_302 can be bitwise ORed so that CURL_REDIR_POST_301 | CURL_REDIR_POST_302 == CURL_REDIR_POST_ALL</source>
          <target state="translated">символы для использования с CURLOPT_POSTREDIR.CURL_REDIR_POST_301 и CURL_REDIR_POST_302 могут быть битовыми ORed,поэтому CURL_REDIR_POST_301 | CURL_REDIR_POST_302 ==CURL_REDIR_POST_ALL</target>
        </trans-unit>
        <trans-unit id="7dc89ae9b32066bc1685a7e13eb0ce442db1922f" translate="yes" xml:space="preserve">
          <source>symmetric set difference i.e. (a &amp;cup; b) \ (a &amp;cap; b)</source>
          <target state="translated">разность симметричных множеств, т.е. (a &amp;cup; b) \ (a &amp;cap; b)</target>
        </trans-unit>
        <trans-unit id="3153e5902c852136486ca741168209fd495d6122" translate="yes" xml:space="preserve">
          <source>syntactic parse</source>
          <target state="translated">синтаксический разбор</target>
        </trans-unit>
        <trans-unit id="3eb70a0c50d13e5476d84881767130ffc77bfa9d" translate="yes" xml:space="preserve">
          <source>syntax may be appear in any order, where</source>
          <target state="translated">синтаксис может появиться в любом порядке,когда</target>
        </trans-unit>
        <trans-unit id="b5ce4a4af74754a24de88fc33e9ace77302487a0" translate="yes" xml:space="preserve">
          <source>system. It can be state as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="188b00d7083e0240f9aeeb1a1833d8fd221e0654" translate="yes" xml:space="preserve">
          <source>t = Throwable</source>
          <target state="translated">t=бросаемый</target>
        </trans-unit>
        <trans-unit id="14631f966a2c33733089c45eef6eb97a9533cf26" translate="yes" xml:space="preserve">
          <source>t must not be null.</source>
          <target state="translated">не должно быть недействительным.</target>
        </trans-unit>
        <trans-unit id="8127c6fed3361f06195d512d246d277580786204" translate="yes" xml:space="preserve">
          <source>t redone as Expression, null if cannot</source>
          <target state="translated">t redone as Expression,null if cannot</target>
        </trans-unit>
        <trans-unit id="e81ee228c70ade56065805e549c9dee25b8bd200" translate="yes" xml:space="preserve">
          <source>take leap seconds into account even though they're in the file).</source>
          <target state="translated">учитывать високосные секунды,даже если они есть в файле).</target>
        </trans-unit>
        <trans-unit id="57215275b95532f7ed1dd4468f0245bdf4ac4315" translate="yes" xml:space="preserve">
          <source>takes an arbitrary set of declarations from the body of a</source>
          <target state="translated">принимает произвольный набор деклараций из тела</target>
        </trans-unit>
        <trans-unit id="b07c67c93299d7920c354ac76805c06a3218f5b9" translate="yes" xml:space="preserve">
          <source>talk a lot</source>
          <target state="translated">много говорить</target>
        </trans-unit>
        <trans-unit id="104cd618c2f9eb378255e17bd33bdc23e652b4a4" translate="yes" xml:space="preserve">
          <source>tan(x)</source>
          <target state="translated">tan(x)</target>
        </trans-unit>
        <trans-unit id="160dac239a306eb6dfc8d958c89ea9e59df0c800" translate="yes" xml:space="preserve">
          <source>tanh(x)</source>
          <target state="translated">tanh(x)</target>
        </trans-unit>
        <trans-unit id="f4e600ef22c8fc0aa7a4121ca5b0972f92e88c02" translate="yes" xml:space="preserve">
          <source>targ_size_t &lt;strong id=&quot;_align&quot;&gt;_align&lt;/strong&gt;(targ_size_t size, targ_size_t offset);</source>
          <target state="translated">targ_size_t &lt;strong id=&quot;_align&quot;&gt;_align&lt;/strong&gt; (размер targ_size_t, смещение targ_size_t);</target>
        </trans-unit>
        <trans-unit id="c7c2bfdfcebcf4958197d388d92941d990cab3cc" translate="yes" xml:space="preserve">
          <source>targ_size_t &lt;strong id=&quot;size&quot;&gt;size&lt;/strong&gt;(tym_t ty);</source>
          <target state="translated">targ_size_t &lt;strong id=&quot;size&quot;&gt;size&lt;/strong&gt; (tym_t ty);</target>
        </trans-unit>
        <trans-unit id="6d5724506af84f0646c524a63051b7dfa66cea04" translate="yes" xml:space="preserve">
          <source>target C++ ABI puts deleting and non-deleting destructor into vtable</source>
          <target state="translated">целевой C++ABI помещает удаляющий и неудаляющий деструктор в vtable</target>
        </trans-unit>
        <trans-unit id="c793b2d6a621d82f3fbed2082c56c15e760bfcc3" translate="yes" xml:space="preserve">
          <source>target function that will take the &lt;code&gt;this&lt;/code&gt; argument</source>
          <target state="translated">целевая функция, которая будет принимать &lt;code&gt;this&lt;/code&gt; аргумент</target>
        </trans-unit>
        <trans-unit id="960d83e1455398d9b7914b3204baea619a16a30a" translate="yes" xml:space="preserve">
          <source>target of call</source>
          <target state="translated">объект звонка</target>
        </trans-unit>
        <trans-unit id="fb825a363545eaf9d5bb3306f172a80316610c88" translate="yes" xml:space="preserve">
          <source>target type of operation</source>
          <target state="translated">целевой тип работы</target>
        </trans-unit>
        <trans-unit id="dd9ae33f057ec93c58a65eba38989608873f5f07" translate="yes" xml:space="preserve">
          <source>target type of the result</source>
          <target state="translated">целевой тип результата</target>
        </trans-unit>
        <trans-unit id="e0e46543ea4954776e364b8ab714de0ffb649dd5" translate="yes" xml:space="preserve">
          <source>target.d</source>
          <target state="translated">target.d</target>
        </trans-unit>
        <trans-unit id="261a6d9d6776519034433e9acce136081717e786" translate="yes" xml:space="preserve">
          <source>targetFunc</source>
          <target state="translated">targetFunc</target>
        </trans-unit>
        <trans-unit id="cf31b254e416e93a6a7ffa5dcbe3cbaa382522e9" translate="yes" xml:space="preserve">
          <source>tell libcurl seeking can't be done, so libcurl might try other means instead</source>
          <target state="translated">сказать,что поиск libcurl не может быть выполнен,так что libcurl может попробовать другие средства вместо этого.</target>
        </trans-unit>
        <trans-unit id="c7db691ae3bef02ed884e77c9a723706d5742eb5" translate="yes" xml:space="preserve">
          <source>tell the lib to end the task</source>
          <target state="translated">говорить либби,чтобы закончить работу</target>
        </trans-unit>
        <trans-unit id="875cf3eaad196e8f653092690653af2965ef090a" translate="yes" xml:space="preserve">
          <source>tells the scanner to ignore everything after this token</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e93f37a90232e137fb9b208e3de821d143008b6b" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;Algebraic&quot;&gt;Algebraic&lt;/strong&gt;(T...)</source>
          <target state="translated">шаблон &lt;strong id=&quot;Algebraic&quot;&gt;алгебраический&lt;/strong&gt; (T ...)</target>
        </trans-unit>
        <trans-unit id="548d2326c790ad04dbe93ca5e681ab006b558610" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;Alias&quot;&gt;Alias&lt;/strong&gt;(T)</source>
          <target state="translated">шаблон &lt;strong id=&quot;Alias&quot;&gt;Alias&lt;/strong&gt; (T)</target>
        </trans-unit>
        <trans-unit id="a92f3b6f243e9ec7ed058a08f4675c698ff9d399" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;Alias&quot;&gt;Alias&lt;/strong&gt;(alias a)</source>
          <target state="translated">шаблон &lt;strong id=&quot;Alias&quot;&gt;Alias&lt;/strong&gt; (псевдоним а)</target>
        </trans-unit>
        <trans-unit id="e74acb82f8d79e733b425b9dd43e31a49395e1cf" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;AliasSeq&quot;&gt;AliasSeq&lt;/strong&gt;(TList...)</source>
          <target state="translated">шаблон &lt;strong id=&quot;AliasSeq&quot;&gt;AliasSeq&lt;/strong&gt; (TList ...)</target>
        </trans-unit>
        <trans-unit id="b406f10e85d4f7c68278f805c16957aa8d9bf0f5" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;AllocatorList&quot;&gt;AllocatorList&lt;/strong&gt;(alias factoryFunction, BookkeepingAllocator = GCAllocator)</source>
          <target state="translated">шаблон &lt;strong id=&quot;AllocatorList&quot;&gt;AllocatorList&lt;/strong&gt; (псевдоним factoryFunction, BookkeepingAllocator = GCAllocator)</target>
        </trans-unit>
        <trans-unit id="a213656e9fd918707336d18361aa3d2c8443aec1" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;ApplyLeft&quot;&gt;ApplyLeft&lt;/strong&gt;(alias Template, args...)</source>
          <target state="translated">шаблон &lt;strong id=&quot;ApplyLeft&quot;&gt;ApplyLeft&lt;/strong&gt; (псевдоним Template, args ...)</target>
        </trans-unit>
        <trans-unit id="b18be561ceabe7053ba4dfeea2903fcb349df283" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;ApplyRight&quot;&gt;ApplyRight&lt;/strong&gt;(alias Template, args...)</source>
          <target state="translated">шаблон &lt;strong id=&quot;ApplyRight&quot;&gt;ApplyRight&lt;/strong&gt; (псевдоним Template, args ...)</target>
        </trans-unit>
        <trans-unit id="bf03a35c18b2fc2591ba7bdb24d7dd5a0b79257c" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;Base64Impl&quot;&gt;Base64Impl&lt;/strong&gt;(char Map62th, char Map63th, char Padding = '=')</source>
          <target state="translated">шаблон &lt;strong id=&quot;Base64Impl&quot;&gt;Base64Impl&lt;/strong&gt; (char Map62th, char Map63th, char Padding = '=')</target>
        </trans-unit>
        <trans-unit id="e60a77b9834eee752f132834f026f36908259766" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;BaseClassesTuple&quot;&gt;BaseClassesTuple&lt;/strong&gt;(T) if (is(T == class))</source>
          <target state="translated">шаблон &lt;strong id=&quot;BaseClassesTuple&quot;&gt;BaseClassesTuple&lt;/strong&gt; (T), если (есть (T == класс))</target>
        </trans-unit>
        <trans-unit id="80e9905e0aa039db68cfdda69177e05c570db824" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;BaseTypeTuple&quot;&gt;BaseTypeTuple&lt;/strong&gt;(A)</source>
          <target state="translated">шаблон &lt;strong id=&quot;BaseTypeTuple&quot;&gt;BaseTypeTuple&lt;/strong&gt; (A)</target>
        </trans-unit>
        <trans-unit id="869c64b4168238dcd49f5f3261e2fc8aaa7f77f1" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;BlackHole&quot;&gt;BlackHole&lt;/strong&gt;(Base)</source>
          <target state="translated">шаблон &lt;strong id=&quot;BlackHole&quot;&gt;BlackHole&lt;/strong&gt; (база)</target>
        </trans-unit>
        <trans-unit id="a8894bc4dec37e220368fe3e2222df36904552f0" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;CmpTimeUnits&quot;&gt;CmpTimeUnits&lt;/strong&gt;(string lhs, string rhs) if (validTimeUnits(lhs, rhs))</source>
          <target state="translated">шаблон &lt;strong id=&quot;CmpTimeUnits&quot;&gt;CmpTimeUnits&lt;/strong&gt; (строка lhs, строка rhs) if (validTimeUnits (lhs, rhs))</target>
        </trans-unit>
        <trans-unit id="aa9e3674b608b49c002fa5c8f06ea215e4443ffd" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;CodepointSetTrie&quot;&gt;CodepointSetTrie&lt;/strong&gt;(sizes...) if (sumOfIntegerTuple!sizes == 21)</source>
          <target state="translated">шаблон &lt;strong id=&quot;CodepointSetTrie&quot;&gt;CodepointSetTrie&lt;/strong&gt; (размеры ...) if (sumOfIntegerTuple! sizes == 21)</target>
        </trans-unit>
        <trans-unit id="226b49b3c5168ea1422dfd9b816322c6e2f0927e" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;CodepointTrie&quot;&gt;CodepointTrie&lt;/strong&gt;(T, sizes...) if (sumOfIntegerTuple!sizes == 21)</source>
          <target state="translated">шаблон &lt;strong id=&quot;CodepointTrie&quot;&gt;CodepointTrie&lt;/strong&gt; (T, размеры ...) if (sumOfIntegerTuple! sizes == 21)</target>
        </trans-unit>
        <trans-unit id="9cfbdbe2d454a44a5efa2bb7753a6ff7c495a78b" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;CommonType&quot;&gt;CommonType&lt;/strong&gt;(T...)</source>
          <target state="translated">шаблон &lt;strong id=&quot;CommonType&quot;&gt;CommonType&lt;/strong&gt; (T ...)</target>
        </trans-unit>
        <trans-unit id="434bc49172a5dc7be49a5de3ce7702f0f226c39d" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;ConstOf&quot;&gt;ConstOf&lt;/strong&gt;(T)</source>
          <target state="translated">шаблон &lt;strong id=&quot;ConstOf&quot;&gt;ConstOf&lt;/strong&gt; (T)</target>
        </trans-unit>
        <trans-unit id="7c605dcd081b54964a20ebeb78b53903887c0998" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;CopyConstness&quot;&gt;CopyConstness&lt;/strong&gt;(FromType, ToType)</source>
          <target state="translated">шаблон &lt;strong id=&quot;CopyConstness&quot;&gt;CopyConstness&lt;/strong&gt; (FromType, ToType)</target>
        </trans-unit>
        <trans-unit id="a7308f79fe586f4bbee1f0977d53e03608fb122e" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;CopyTypeQualifiers&quot;&gt;CopyTypeQualifiers&lt;/strong&gt;(FromType, ToType)</source>
          <target state="translated">шаблон &lt;strong id=&quot;CopyTypeQualifiers&quot;&gt;CopyTypeQualifiers&lt;/strong&gt; (FromType, ToType)</target>
        </trans-unit>
        <trans-unit id="81ca2520b0a49441cfe14550a30fc6495b748cef" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;CustomFloat&quot;&gt;CustomFloat&lt;/strong&gt;(uint bits) if (bits == 8 || bits == 16 || bits == 32 || bits == 64 || bits == 80)</source>
          <target state="translated">шаблон &lt;strong id=&quot;CustomFloat&quot;&gt;CustomFloat&lt;/strong&gt; (биты uint) if (биты == 8 || битов == 16 || битов == 32 || битов == 64 || битов == 80)</target>
        </trans-unit>
        <trans-unit id="8fb0cfad0a5b0dbda8de55649ae5bb41e1ce653e" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;CustomFloat&quot;&gt;CustomFloat&lt;/strong&gt;(uint precision, uint exponentWidth, CustomFloatFlags flags = CustomFloatFlags.ieee) if (((flags &amp;amp; flags.signed) + precision + exponentWidth) % 8 == 0 &amp;amp;&amp;amp; (precision + exponentWidth &amp;gt; 0))</source>
          <target state="translated">шаблон &lt;strong id=&quot;CustomFloat&quot;&gt;CustomFloat&lt;/strong&gt; (точность uint, uint exponentWidth, CustomFloatFlags flags = CustomFloatFlags.ieee) if (((flags &amp;amp; flags.signed) + precision + exponentWidth)% 8 == 0 &amp;amp;&amp;amp; (точность + exponentWidth&amp;gt; 0))</target>
        </trans-unit>
        <trans-unit id="778ff1b06c575d789712ca3eaafad818414ffed5" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;Cycle&quot;&gt;Cycle&lt;/strong&gt;(R) if (isInfinite!R)</source>
          <target state="translated">Шаблон &lt;strong id=&quot;Cycle&quot;&gt;Cycle&lt;/strong&gt; (R) if (isInfinite! R)</target>
        </trans-unit>
        <trans-unit id="540879f3c047740d6537170ab3a1bc4171843ffa" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;DerivedToFront&quot;&gt;DerivedToFront&lt;/strong&gt;(TList...)</source>
          <target state="translated">шаблон &lt;strong id=&quot;DerivedToFront&quot;&gt;DerivedToFront&lt;/strong&gt; (TList ...)</target>
        </trans-unit>
        <trans-unit id="ab53773e0cdc64c3ee94add91e85117ddcd02eb2" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;DigestType&quot;&gt;DigestType&lt;/strong&gt;(T)</source>
          <target state="translated">шаблон &lt;strong id=&quot;DigestType&quot;&gt;DigestType&lt;/strong&gt; (T)</target>
        </trans-unit>
        <trans-unit id="730cb5cf96c2580566a542f37dcbc5807f44b2b3" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;ElementEncodingType&quot;&gt;ElementEncodingType&lt;/strong&gt;(R)</source>
          <target state="translated">шаблон &lt;strong id=&quot;ElementEncodingType&quot;&gt;ElementEncodingType&lt;/strong&gt; (R)</target>
        </trans-unit>
        <trans-unit id="5146a2ec87422fa225b3e6775c79fc96074fed96" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;ElementType&quot;&gt;ElementType&lt;/strong&gt;(R)</source>
          <target state="translated">шаблон &lt;strong id=&quot;ElementType&quot;&gt;ElementType&lt;/strong&gt; (R)</target>
        </trans-unit>
        <trans-unit id="ae650dffb948985089688f70bf2a26129140a668" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;EnumMembers&quot;&gt;EnumMembers&lt;/strong&gt;(E) if (is(E == enum))</source>
          <target state="translated">шаблон &lt;strong id=&quot;EnumMembers&quot;&gt;EnumMembers&lt;/strong&gt; (E) if (is (E == enum))</target>
        </trans-unit>
        <trans-unit id="f52d049f49717ac342d76efc5510447e7cec33c0" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;Erase&quot;&gt;Erase&lt;/strong&gt;(T, TList...)</source>
          <target state="translated">&lt;strong id=&quot;Erase&quot;&gt;удаление&lt;/strong&gt; шаблона (T, TList ...)</target>
        </trans-unit>
        <trans-unit id="723c4eeedeac657af4d90b4d6b56c7df90b8ff76" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;Erase&quot;&gt;Erase&lt;/strong&gt;(alias T, TList...)</source>
          <target state="translated">Шаблон &lt;strong id=&quot;Erase&quot;&gt;Erase&lt;/strong&gt; (псевдоним T, TList ...)</target>
        </trans-unit>
        <trans-unit id="b7c140688f7c199d642938df4c3bc2744519b34e" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;EraseAll&quot;&gt;EraseAll&lt;/strong&gt;(T, TList...)</source>
          <target state="translated">шаблон &lt;strong id=&quot;EraseAll&quot;&gt;EraseAll&lt;/strong&gt; (T, TList ...)</target>
        </trans-unit>
        <trans-unit id="5d9eebebb24bf105117cf284c74eb5f92943deb0" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;EraseAll&quot;&gt;EraseAll&lt;/strong&gt;(alias T, TList...)</source>
          <target state="translated">шаблон &lt;strong id=&quot;EraseAll&quot;&gt;EraseAll&lt;/strong&gt; (псевдоним T, TList ...)</target>
        </trans-unit>
        <trans-unit id="5924bd22ac0b92c1f991bb3bcedb0b651947766b" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;FPTemporary&quot;&gt;FPTemporary&lt;/strong&gt;(F) if (isFloatingPoint!F)</source>
          <target state="translated">шаблон &lt;strong id=&quot;FPTemporary&quot;&gt;FPTeorary&lt;/strong&gt; (F) if (isFloatingPoint! F)</target>
        </trans-unit>
        <trans-unit id="64596fb6d57b4a72264ea0ee36c99f126e978e10" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;FieldNameTuple&quot;&gt;FieldNameTuple&lt;/strong&gt;(T)</source>
          <target state="translated">шаблон &lt;strong id=&quot;FieldNameTuple&quot;&gt;FieldNameTuple&lt;/strong&gt; (T)</target>
        </trans-unit>
        <trans-unit id="60a36c9b3ba947ddd740df3401004c2e9900cb1b" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;Fields&quot;&gt;Fields&lt;/strong&gt;(T)</source>
          <target state="translated">&lt;strong id=&quot;Fields&quot;&gt;Поля&lt;/strong&gt; шаблона (T)</target>
        </trans-unit>
        <trans-unit id="6b9aacd9a40be1dd726bacf3a282aaa08b652f95" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;Filter&quot;&gt;Filter&lt;/strong&gt;(alias pred, TList...)</source>
          <target state="translated">&lt;strong id=&quot;Filter&quot;&gt;Фильтр&lt;/strong&gt; шаблона (псевдоним pred, TList ...)</target>
        </trans-unit>
        <trans-unit id="749abc470c90790b2034ec1a638a3629dee19456" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;Final&quot;&gt;Final&lt;/strong&gt;(T)</source>
          <target state="translated">шаблон &lt;strong id=&quot;Final&quot;&gt;Final&lt;/strong&gt; (T)</target>
        </trans-unit>
        <trans-unit id="b52859b3fcac3050bd9f4b815a14e636129ff65e" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;Flag&quot;&gt;Flag&lt;/strong&gt;(string name)</source>
          <target state="translated">&lt;strong id=&quot;Flag&quot;&gt;Флаг&lt;/strong&gt; шаблона (имя строки)</target>
        </trans-unit>
        <trans-unit id="eddd5657ca9f61341c03e8db1a6b8dab60258d86" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;ForeachType&quot;&gt;ForeachType&lt;/strong&gt;(T)</source>
          <target state="translated">шаблон &lt;strong id=&quot;ForeachType&quot;&gt;ForeachType&lt;/strong&gt; (T)</target>
        </trans-unit>
        <trans-unit id="0b4ccf901be6a15c352c867cff22a9fb511ab1a8" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;FunctionTypeOf&quot;&gt;FunctionTypeOf&lt;/strong&gt;(func...) if (func.length == 1 &amp;amp;&amp;amp; isCallable!func)</source>
          <target state="translated">шаблон &lt;strong id=&quot;FunctionTypeOf&quot;&gt;FunctionTypeOf&lt;/strong&gt; (func ...) if (func.length == 1 &amp;amp;&amp;amp; isCallable! func)</target>
        </trans-unit>
        <trans-unit id="636f97668b49b110ef957f111c1bb50724d53937" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;ImmutableOf&quot;&gt;ImmutableOf&lt;/strong&gt;(T)</source>
          <target state="translated">шаблон &lt;strong id=&quot;ImmutableOf&quot;&gt;ImmutableOf&lt;/strong&gt; (T)</target>
        </trans-unit>
        <trans-unit id="2004a575b6d33b3b1a9671cff8db23e8d5ed859b" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;ImplicitConversionTargets&quot;&gt;ImplicitConversionTargets&lt;/strong&gt;(T)</source>
          <target state="translated">шаблон &lt;strong id=&quot;ImplicitConversionTargets&quot;&gt;ImplicitConversionTargets&lt;/strong&gt; (T)</target>
        </trans-unit>
        <trans-unit id="46b1681ff5eb38e79d2c433677ea4010c0202b31" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;InoutOf&quot;&gt;InoutOf&lt;/strong&gt;(T)</source>
          <target state="translated">шаблон &lt;strong id=&quot;InoutOf&quot;&gt;InoutOf&lt;/strong&gt; (T)</target>
        </trans-unit>
        <trans-unit id="9e8f15956db23fb743e20799071b31eef7e7cccd" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;InputRangeObject&quot;&gt;InputRangeObject&lt;/strong&gt;(R) if (isInputRange!(Unqual!R))</source>
          <target state="translated">шаблон &lt;strong id=&quot;InputRangeObject&quot;&gt;InputRangeObject&lt;/strong&gt; (R) if (isInputRange! (Unqual! R))</target>
        </trans-unit>
        <trans-unit id="18dfed67d5a43fdc1615161d2fcd3457558ff308" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;Instantiate&quot;&gt;Instantiate&lt;/strong&gt;(alias Template, Params...)</source>
          <target state="translated">Шаблон &lt;strong id=&quot;Instantiate&quot;&gt;Instantiate&lt;/strong&gt; (псевдоним Template, Params ...)</target>
        </trans-unit>
        <trans-unit id="7dc75588bf4f67d6e9be29c3219ab54aed8a30ea" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;InterfacesTuple&quot;&gt;InterfacesTuple&lt;/strong&gt;(T)</source>
          <target state="translated">Шаблон &lt;strong id=&quot;InterfacesTuple&quot;&gt;InterfacesTuple&lt;/strong&gt; (T)</target>
        </trans-unit>
        <trans-unit id="b48ed5f1bb67bf9b20734d35d2d62dbcf6db3000" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;KeyType&quot;&gt;KeyType&lt;/strong&gt;(V : V[K], K)</source>
          <target state="translated">шаблон &lt;strong id=&quot;KeyType&quot;&gt;KeyType&lt;/strong&gt; (V: V [K], K)</target>
        </trans-unit>
        <trans-unit id="f8a833f052c45ae21de49b9e6073e8305416ca9a" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;Largest&quot;&gt;Largest&lt;/strong&gt;(T...) if (T.length &amp;gt;= 1)</source>
          <target state="translated">шаблон &lt;strong id=&quot;Largest&quot;&gt;Largest&lt;/strong&gt; (T ...) if (T.length&amp;gt; = 1)</target>
        </trans-unit>
        <trans-unit id="7d39e6d7c33d4b5c31ef8c273205a0b47fea7a10" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;MemberFunctionsTuple&quot;&gt;MemberFunctionsTuple&lt;/strong&gt;(C, string name) if (is(C == class) || is(C == interface))</source>
          <target state="translated">template &lt;strong id=&quot;MemberFunctionsTuple&quot;&gt;MemberFunctionsTuple&lt;/strong&gt; (C, имя строки) if (is (C == class) || is (C == interface))</target>
        </trans-unit>
        <trans-unit id="0dbb609b58513e6b21b4771392ccfd426e0a35c7" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;MostDerived&quot;&gt;MostDerived&lt;/strong&gt;(T, TList...)</source>
          <target state="translated">шаблон &lt;strong id=&quot;MostDerived&quot;&gt;MostDerived&lt;/strong&gt; (T, TList ...)</target>
        </trans-unit>
        <trans-unit id="645caf2e4250851003ba8c15e58b705acb37ab60" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;MostDerivedInputRange&quot;&gt;MostDerivedInputRange&lt;/strong&gt;(R) if (isInputRange!(Unqual!R))</source>
          <target state="translated">шаблон &lt;strong id=&quot;MostDerivedInputRange&quot;&gt;MostDerivedInputRange&lt;/strong&gt; (R) if (isInputRange! (Unqual! R))</target>
        </trans-unit>
        <trans-unit id="3e10e7dd04677bcd6c50c9ddebf76400db601c29" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;NoDuplicates&quot;&gt;NoDuplicates&lt;/strong&gt;(TList...)</source>
          <target state="translated">шаблон &lt;strong id=&quot;NoDuplicates&quot;&gt;NoDuplicates&lt;/strong&gt; (TList ...)</target>
        </trans-unit>
        <trans-unit id="ae5991189bee208ed98d1479d31a15332df8ed94" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;OriginalType&quot;&gt;OriginalType&lt;/strong&gt;(T)</source>
          <target state="translated">шаблон &lt;strong id=&quot;OriginalType&quot;&gt;OriginalType&lt;/strong&gt; (T)</target>
        </trans-unit>
        <trans-unit id="fdaebae5ab7dbe886c616fbbb2da6968f3465f61" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;ParameterDefaults&quot;&gt;ParameterDefaults&lt;/strong&gt;(func...) if (func.length == 1 &amp;amp;&amp;amp; isCallable!func)</source>
          <target state="translated">шаблон &lt;strong id=&quot;ParameterDefaults&quot;&gt;ParameterDefaults&lt;/strong&gt; (func ...) if (func.length == 1 &amp;amp;&amp;amp; isCallable! func)</target>
        </trans-unit>
        <trans-unit id="e8b7f5e8936739b24eb6b061d93a3dc5e253b51b" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;ParameterIdentifierTuple&quot;&gt;ParameterIdentifierTuple&lt;/strong&gt;(func...) if (func.length == 1 &amp;amp;&amp;amp; isCallable!func)</source>
          <target state="translated">шаблон &lt;strong id=&quot;ParameterIdentifierTuple&quot;&gt;ParameterIdentifierTuple&lt;/strong&gt; (func ...) if (func.length == 1 &amp;amp;&amp;amp; isCallable! func)</target>
        </trans-unit>
        <trans-unit id="9504db4b08d986e10ce5a4bb57d8e6a0d028a855" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;ParameterStorageClassTuple&quot;&gt;ParameterStorageClassTuple&lt;/strong&gt;(func...) if (func.length == 1 &amp;amp;&amp;amp; isCallable!func)</source>
          <target state="translated">шаблон &lt;strong id=&quot;ParameterStorageClassTuple&quot;&gt;ParameterStorageClassTuple&lt;/strong&gt; (func ...) if (func.length == 1 &amp;amp;&amp;amp; isCallable! func)</target>
        </trans-unit>
        <trans-unit id="d7cc965e727b306711ebe87a94cddc9ca417479f" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;Parameters&quot;&gt;Parameters&lt;/strong&gt;(func...) if (func.length == 1 &amp;amp;&amp;amp; isCallable!func)</source>
          <target state="translated">&lt;strong id=&quot;Parameters&quot;&gt;Параметры&lt;/strong&gt; шаблона (func ...) if (func.length == 1 &amp;amp;&amp;amp; isCallable! func)</target>
        </trans-unit>
        <trans-unit id="4522189b6c8517e90c015808c237032ea5ca5350" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;PointerTarget&quot;&gt;PointerTarget&lt;/strong&gt;(T : T*)</source>
          <target state="translated">шаблон &lt;strong id=&quot;PointerTarget&quot;&gt;PointerTarget&lt;/strong&gt; (T: T *)</target>
        </trans-unit>
        <trans-unit id="146fcf1d57bcb3816d8dafd48664a8118a362f9d" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;Promoted&quot;&gt;Promoted&lt;/strong&gt;(T) if (isScalarType!T)</source>
          <target state="translated">шаблон &lt;strong id=&quot;Promoted&quot;&gt;повышен&lt;/strong&gt; (T), если (isScalarType! T)</target>
        </trans-unit>
        <trans-unit id="478016980817d7040588e5a4330a0d3650da4df2" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;Proxy&quot;&gt;Proxy&lt;/strong&gt;(alias a)</source>
          <target state="translated">Шаблон &lt;strong id=&quot;Proxy&quot;&gt;Proxy&lt;/strong&gt; (псевдоним а)</target>
        </trans-unit>
        <trans-unit id="410bec192a8f4267c16c23612680e0372ea3fa57" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;QualifierOf&quot;&gt;QualifierOf&lt;/strong&gt;(T)</source>
          <target state="translated">шаблон &lt;strong id=&quot;QualifierOf&quot;&gt;QualifierOf&lt;/strong&gt; (T)</target>
        </trans-unit>
        <trans-unit id="de95cb84b957a3f5dc80c6046994980f2d858fb7" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;Rebindable&quot;&gt;Rebindable&lt;/strong&gt;(T) if (is(T == class) || is(T == interface) || isDynamicArray!T || isAssociativeArray!T)</source>
          <target state="translated">шаблон &lt;strong id=&quot;Rebindable&quot;&gt;Rebindable&lt;/strong&gt; (T), если (есть (T == класс) || есть (T == интерфейс) || isDynamicArray! T || isAssociativeArray! T)</target>
        </trans-unit>
        <trans-unit id="3bd63da084f79e1839251315dea04c1dada5c109" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;Regex&quot;&gt;Regex&lt;/strong&gt;(Char)</source>
          <target state="translated">шаблон &lt;strong id=&quot;Regex&quot;&gt;Regex&lt;/strong&gt; (Char)</target>
        </trans-unit>
        <trans-unit id="f988443e3ea3d31691ca9e98f6be98445b3ffb06" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;Repeat&quot;&gt;Repeat&lt;/strong&gt;(size_t n, TList...)</source>
          <target state="translated">шаблон &lt;strong id=&quot;Repeat&quot;&gt;повтора&lt;/strong&gt; (size_t n, TList ...)</target>
        </trans-unit>
        <trans-unit id="1f303239669b5b71d51818db5f8a8d6628549694" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;Replace&quot;&gt;Replace&lt;/strong&gt;(T, U, TList...)</source>
          <target state="translated">&lt;strong id=&quot;Replace&quot;&gt;Заменить&lt;/strong&gt; шаблон (T, U, TList ...)</target>
        </trans-unit>
        <trans-unit id="7bf7eb21761d43b887be720f592be9873bc5edd0" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;Replace&quot;&gt;Replace&lt;/strong&gt;(T, alias U, TList...)</source>
          <target state="translated">&lt;strong id=&quot;Replace&quot;&gt;Заменить&lt;/strong&gt; шаблон (T, псевдоним U, TList ...)</target>
        </trans-unit>
        <trans-unit id="a4ae539a54108bdef26ebd1117bc0c1c6ea33d42" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;Replace&quot;&gt;Replace&lt;/strong&gt;(alias T, U, TList...)</source>
          <target state="translated">&lt;strong id=&quot;Replace&quot;&gt;Заменить&lt;/strong&gt; шаблон (псевдоним T, U, TList ...)</target>
        </trans-unit>
        <trans-unit id="c503fe9b9387428b8065d937442f4ce5062b56eb" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;Replace&quot;&gt;Replace&lt;/strong&gt;(alias T, alias U, TList...)</source>
          <target state="translated">&lt;strong id=&quot;Replace&quot;&gt;Заменить&lt;/strong&gt; шаблон (псевдоним T, псевдоним U, TList ...)</target>
        </trans-unit>
        <trans-unit id="f47762484d84528a6a939d36a9c495069f1d69fe" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;ReplaceAll&quot;&gt;ReplaceAll&lt;/strong&gt;(T, U, TList...)</source>
          <target state="translated">Шаблон &lt;strong id=&quot;ReplaceAll&quot;&gt;ReplaceAll&lt;/strong&gt; (T, U, TList ...)</target>
        </trans-unit>
        <trans-unit id="968ed668307e585ac9fe9903a52f5395c41e31dd" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;ReplaceAll&quot;&gt;ReplaceAll&lt;/strong&gt;(T, alias U, TList...)</source>
          <target state="translated">Шаблон &lt;strong id=&quot;ReplaceAll&quot;&gt;ReplaceAll&lt;/strong&gt; (T, псевдоним U, TList ...)</target>
        </trans-unit>
        <trans-unit id="9022eb9b897dc1787213af89699335fef7161ad8" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;ReplaceAll&quot;&gt;ReplaceAll&lt;/strong&gt;(alias T, U, TList...)</source>
          <target state="translated">Шаблон &lt;strong id=&quot;ReplaceAll&quot;&gt;ReplaceAll&lt;/strong&gt; (псевдоним T, U, TList ...)</target>
        </trans-unit>
        <trans-unit id="d03a36c8ad410bd7ddf9a6d8e4a1dc46754f8e5d" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;ReplaceAll&quot;&gt;ReplaceAll&lt;/strong&gt;(alias T, alias U, TList...)</source>
          <target state="translated">Шаблон &lt;strong id=&quot;ReplaceAll&quot;&gt;ReplaceAll&lt;/strong&gt; (псевдоним T, псевдоним U, TList ...)</target>
        </trans-unit>
        <trans-unit id="3730e20d98c16e5b4d994959fb7974f3c03d3a6d" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;ReplaceType&quot;&gt;ReplaceType&lt;/strong&gt;(From, To, T...)</source>
          <target state="translated">шаблон &lt;strong id=&quot;ReplaceType&quot;&gt;ReplaceType&lt;/strong&gt; (From, To, T ...)</target>
        </trans-unit>
        <trans-unit id="7b40d5a88df0ddbbc31b216e907b5a2a9fe14387" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;ReplaceTypeUnless&quot;&gt;ReplaceTypeUnless&lt;/strong&gt;(alias pred, From, To, T...)</source>
          <target state="translated">шаблон &lt;strong id=&quot;ReplaceTypeUnless&quot;&gt;ReplaceTypeUnless&lt;/strong&gt; (псевдоним pred, From, To, T ...)</target>
        </trans-unit>
        <trans-unit id="1d0a3acbef109705f9ef67543feac637109ddd4d" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;RepresentationTypeTuple&quot;&gt;RepresentationTypeTuple&lt;/strong&gt;(T)</source>
          <target state="translated">шаблон &lt;strong id=&quot;RepresentationTypeTuple&quot;&gt;PresentationTypeTuple&lt;/strong&gt; (T)</target>
        </trans-unit>
        <trans-unit id="5fa71c4f946fb6e2b3a173b894870874211608c5" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;ReturnType&quot;&gt;ReturnType&lt;/strong&gt;(func...) if (func.length == 1 &amp;amp;&amp;amp; isCallable!func)</source>
          <target state="translated">шаблон &lt;strong id=&quot;ReturnType&quot;&gt;ReturnType&lt;/strong&gt; (func ...) if (func.length == 1 &amp;amp;&amp;amp; isCallable! func)</target>
        </trans-unit>
        <trans-unit id="0e74b9376f17dae9a108be896859df8a2f6596b0" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;Reverse&quot;&gt;Reverse&lt;/strong&gt;(TList...)</source>
          <target state="translated">&lt;strong id=&quot;Reverse&quot;&gt;обратный&lt;/strong&gt; шаблон (TList ...)</target>
        </trans-unit>
        <trans-unit id="20e9bf747912abd421eb71b63d1610c01cf1954d" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;Segregator&quot;&gt;Segregator&lt;/strong&gt;(Args...) if (Args.length &amp;gt; 3)</source>
          <target state="translated">шаблон &lt;strong id=&quot;Segregator&quot;&gt;Segregator&lt;/strong&gt; (Args ...) if (Args.length&amp;gt; 3)</target>
        </trans-unit>
        <trans-unit id="1e4f581a4a16d959b68305ebe366c5ef0c735f7c" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;Select&quot;&gt;Select&lt;/strong&gt;(bool condition, T...) if (T.length == 2)</source>
          <target state="translated">шаблон &lt;strong id=&quot;Select&quot;&gt;Выберите&lt;/strong&gt; (условие bool, T ...) if (T.length == 2)</target>
        </trans-unit>
        <trans-unit id="0b2acec42a1765bb5264e9b933e86f24baab8c4a" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;SetFunctionAttributes&quot;&gt;SetFunctionAttributes&lt;/strong&gt;(T, string linkage, uint attrs) if (is(T == function))</source>
          <target state="translated">шаблон &lt;strong id=&quot;SetFunctionAttributes&quot;&gt;SetFunctionAttributes&lt;/strong&gt; (T, строковое связывание, &lt;strong id=&quot;SetFunctionAttributes&quot;&gt;атрибуты&lt;/strong&gt; uint), если (есть (функция T ==))</target>
        </trans-unit>
        <trans-unit id="9b43259fc673df7ba2a13aad22b2c539a66b4980" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;SetFunctionAttributes&quot;&gt;SetFunctionAttributes&lt;/strong&gt;(T, string linkage, uint attrs) if (isFunctionPointer!T || isDelegate!T)</source>
          <target state="translated">шаблон &lt;strong id=&quot;SetFunctionAttributes&quot;&gt;SetFunctionAttributes&lt;/strong&gt; (T, строковое связывание, атрибуты uint) if (isFunctionPointer! T || isDelegate! T)</target>
        </trans-unit>
        <trans-unit id="f09a82348859629ebfb99b4fe4e1949c4f1e1c7f" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;SharedConstOf&quot;&gt;SharedConstOf&lt;/strong&gt;(T)</source>
          <target state="translated">шаблон &lt;strong id=&quot;SharedConstOf&quot;&gt;SharedConstOf&lt;/strong&gt; (T)</target>
        </trans-unit>
        <trans-unit id="9f2ba804bdaa070c6250fa5210ccf5e92e5da33c" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;SharedInoutOf&quot;&gt;SharedInoutOf&lt;/strong&gt;(T)</source>
          <target state="translated">шаблон &lt;strong id=&quot;SharedInoutOf&quot;&gt;SharedInoutOf&lt;/strong&gt; (T)</target>
        </trans-unit>
        <trans-unit id="8e6f6611efa16d6a1cb7b54a48568b7f1be99bf0" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;SharedOf&quot;&gt;SharedOf&lt;/strong&gt;(T)</source>
          <target state="translated">шаблон &lt;strong id=&quot;SharedOf&quot;&gt;SharedOf&lt;/strong&gt; (T)</target>
        </trans-unit>
        <trans-unit id="e68094b32a85ba93af03e3ce6aa7393a2573415f" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;Signal&quot;&gt;Signal&lt;/strong&gt;(T1...)</source>
          <target state="translated">шаблон &lt;strong id=&quot;Signal&quot;&gt;Сигнал&lt;/strong&gt; (T1 ...)</target>
        </trans-unit>
        <trans-unit id="8c4b6f367f6d6cdc1669c14ed0f562e295aa38ea" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;Signed&quot;&gt;Signed&lt;/strong&gt;(T)</source>
          <target state="translated">шаблон &lt;strong id=&quot;Signed&quot;&gt;Подпись&lt;/strong&gt; (T)</target>
        </trans-unit>
        <trans-unit id="549bc01faddfa7272664dc63dc34756fafec8743" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;SortedRange&quot;&gt;SortedRange&lt;/strong&gt;(Range, alias pred = &quot;a &amp;lt; b&quot;) if (isInstanceOf!(&lt;strong id=&quot;SortedRange&quot;&gt;SortedRange&lt;/strong&gt;, Range))</source>
          <target state="translated">шаблон &lt;strong id=&quot;SortedRange&quot;&gt;SortedRange&lt;/strong&gt; (Range, псевдоним pred = &quot;a &amp;lt;b&quot;) if (isInstanceOf! ( &lt;strong id=&quot;SortedRange&quot;&gt;SortedRange&lt;/strong&gt; , Range))</target>
        </trans-unit>
        <trans-unit id="467ec774c3395e20a0d2d6e417817503cedc44d3" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;SortedRange&quot;&gt;SortedRange&lt;/strong&gt;(Range, alias pred = &quot;a &amp;lt; b&quot;, SortedRangeOptions opt = SortedRangeOptions.assumeSorted) if (isInstanceOf!(&lt;strong id=&quot;SortedRange&quot;&gt;SortedRange&lt;/strong&gt;, Range))</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e14adaa192e55d94baf7c75d76af08e8f16361c0" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;StackFront&quot;&gt;StackFront&lt;/strong&gt;(size_t stackSize, Allocator = GCAllocator)</source>
          <target state="translated">шаблон &lt;strong id=&quot;StackFront&quot;&gt;StackFront&lt;/strong&gt; (size_t stackSize, Allocator = GCAllocator)</target>
        </trans-unit>
        <trans-unit id="64a9d16d68d0ec63c3e4d7255066a73827031a79" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;Stride&quot;&gt;Stride&lt;/strong&gt;(int stepSize, Args...) if (stepSize != 0)</source>
          <target state="translated">шаблон &lt;strong id=&quot;Stride&quot;&gt;Stride&lt;/strong&gt; (int stepSize, Args ...) if (stepSize! = 0)</target>
        </trans-unit>
        <trans-unit id="77d13ba79894fc29da0e55acaf8fa1b6f0ba9adb" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;Take&quot;&gt;Take&lt;/strong&gt;(R) if (isInputRange!(Unqual!R) &amp;amp;&amp;amp; (!isInfinite!(Unqual!R) &amp;amp;&amp;amp; hasSlicing!(Unqual!R) || is(R T == &lt;strong id=&quot;Take&quot;&gt;Take&lt;/strong&gt;!T)))</source>
          <target state="translated">шаблон &lt;strong id=&quot;Take&quot;&gt;Take&lt;/strong&gt; (R) if (isInputRange! (Unqual! R) &amp;amp;&amp;amp; (! isInfinite! (Unqual! R) &amp;amp;&amp;amp; hasSlicing! (Unqual! R) || is (RT == &lt;strong id=&quot;Take&quot;&gt;Take&lt;/strong&gt; ! T)))</target>
        </trans-unit>
        <trans-unit id="7cdd4824e3c49eb8da90105c20b581e76e0ed3cb" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;TemplateArgsOf&quot;&gt;TemplateArgsOf&lt;/strong&gt;(T : Base!Args, alias Base, Args...)</source>
          <target state="translated">template &lt;strong id=&quot;TemplateArgsOf&quot;&gt;TemplateArgsOf&lt;/strong&gt; (T: Base! Args, псевдоним Base, Args ...)</target>
        </trans-unit>
        <trans-unit id="6c6ffdfee4786e695a1e7594d9e550c244108d85" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;TemplateArgsOf&quot;&gt;TemplateArgsOf&lt;/strong&gt;(alias T : Base!Args, alias Base, Args...)</source>
          <target state="translated">template &lt;strong id=&quot;TemplateArgsOf&quot;&gt;TemplateArgsOf&lt;/strong&gt; (псевдоним T: Base! Args, псевдоним Base, Args ...)</target>
        </trans-unit>
        <trans-unit id="444b96c055501e86dca5a4a794de4fd3664c4b9a" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;TemplateOf&quot;&gt;TemplateOf&lt;/strong&gt;(T : Base!Args, alias Base, Args...)</source>
          <target state="translated">template &lt;strong id=&quot;TemplateOf&quot;&gt;TemplateOf&lt;/strong&gt; (T: Base! Args, псевдоним Base, Args ...)</target>
        </trans-unit>
        <trans-unit id="a6f20a1d49ea566fb028e1f0ee12eb07e7ed9429" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;TemplateOf&quot;&gt;TemplateOf&lt;/strong&gt;(T)</source>
          <target state="translated">шаблон &lt;strong id=&quot;TemplateOf&quot;&gt;TemplateOf&lt;/strong&gt; (T)</target>
        </trans-unit>
        <trans-unit id="9423a619a27915c4a96e7e69d6094d62122ecb35" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;TemplateOf&quot;&gt;TemplateOf&lt;/strong&gt;(alias T : Base!Args, alias Base, Args...)</source>
          <target state="translated">template &lt;strong id=&quot;TemplateOf&quot;&gt;TemplateOf&lt;/strong&gt; (псевдоним T: Base! Args, псевдоним Base, Args ...)</target>
        </trans-unit>
        <trans-unit id="6be9e93fa3bb227e9ef729e686709532104eb63e" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;TransitiveBaseTypeTuple&quot;&gt;TransitiveBaseTypeTuple&lt;/strong&gt;(T)</source>
          <target state="translated">шаблон &lt;strong id=&quot;TransitiveBaseTypeTuple&quot;&gt;TransitiveBaseTypeTuple&lt;/strong&gt; (T)</target>
        </trans-unit>
        <trans-unit id="0b2d7ea2855bfa8465406e9f627a3708575d9e40" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;TupleForeachArgs&quot;&gt;TupleForeachArgs&lt;/strong&gt;(bool isStatic, bool isDecl)</source>
          <target state="translated">шаблон &lt;strong id=&quot;TupleForeachArgs&quot;&gt;TupleForeachArgs&lt;/strong&gt; (bool isStatic, bool isDecl)</target>
        </trans-unit>
        <trans-unit id="fa9b28e0fc0f5a6d47604d09878e6709795a7a3b" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;TupleForeachRet&quot;&gt;TupleForeachRet&lt;/strong&gt;(bool isStatic, bool isDecl)</source>
          <target state="translated">шаблон &lt;strong id=&quot;TupleForeachRet&quot;&gt;TupleForeachRet&lt;/strong&gt; (bool isStatic, bool isDecl)</target>
        </trans-unit>
        <trans-unit id="69a7c261838935f88a0252e9076b9f914333de02" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;TypedefType&quot;&gt;TypedefType&lt;/strong&gt;(T)</source>
          <target state="translated">шаблон &lt;strong id=&quot;TypedefType&quot;&gt;TypedefType&lt;/strong&gt; (T)</target>
        </trans-unit>
        <trans-unit id="b8c2ea53d04aeb1f8b269d26ee113717c1442397" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;Unconst&quot;&gt;Unconst&lt;/strong&gt;(T)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffac74af06744d238c88b0b5414330ad0ef1902d" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;Unqual&quot;&gt;Unqual&lt;/strong&gt;(T)</source>
          <target state="translated">шаблон &lt;strong id=&quot;Unqual&quot;&gt;Unqual&lt;/strong&gt; (T)</target>
        </trans-unit>
        <trans-unit id="fdb78b1ad80d8bbb25e538f10cd0a78e77bb8892" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;UnqualRef&quot;&gt;UnqualRef&lt;/strong&gt;(T) if (is(T == class) || is(T == interface))</source>
          <target state="translated">шаблон &lt;strong id=&quot;UnqualRef&quot;&gt;UnqualRef&lt;/strong&gt; (T), если (есть (T == класс) || есть (T == интерфейс))</target>
        </trans-unit>
        <trans-unit id="d6a87505ce2dcfbfc6a538636cd895155e5ccf51" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;Unsigned&quot;&gt;Unsigned&lt;/strong&gt;(T)</source>
          <target state="translated">шаблон &lt;strong id=&quot;Unsigned&quot;&gt;без знака&lt;/strong&gt; (T)</target>
        </trans-unit>
        <trans-unit id="1c214661b1e6ab6793cb8df71cba248d4a32c28f" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;ValueType&quot;&gt;ValueType&lt;/strong&gt;(V : V[K], K)</source>
          <target state="translated">шаблон &lt;strong id=&quot;ValueType&quot;&gt;ValueType&lt;/strong&gt; (V: V [K], K)</target>
        </trans-unit>
        <trans-unit id="b5cc4542e543cb6c6485f7fcf42f88fc5b530103" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;Vector&quot;&gt;Vector&lt;/strong&gt;(T)</source>
          <target state="translated">шаблон &lt;strong id=&quot;Vector&quot;&gt;Вектор&lt;/strong&gt; (T)</target>
        </trans-unit>
        <trans-unit id="02bc08873e7eb96113d28c64cfdb698acaba082d" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;WhiteHole&quot;&gt;WhiteHole&lt;/strong&gt;(Base)</source>
          <target state="translated">шаблон &lt;strong id=&quot;WhiteHole&quot;&gt;WhiteHole&lt;/strong&gt; (база)</target>
        </trans-unit>
        <trans-unit id="9ea9c8c58c824ea3ce788957df1526eb8d06137f" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;XorshiftEngine&quot;&gt;XorshiftEngine&lt;/strong&gt;(UIntType, int bits, int a, int b, int c) if (isUnsigned!UIntType &amp;amp;&amp;amp; (a &amp;gt; 0) &amp;amp;&amp;amp; (b &amp;gt; 0) &amp;amp;&amp;amp; (c &amp;gt; 0))</source>
          <target state="translated">шаблон &lt;strong id=&quot;XorshiftEngine&quot;&gt;XorshiftEngine&lt;/strong&gt; (UIntType, биты int, int a, int b, int c) if (isUnsigned! UIntType &amp;amp;&amp;amp; (a&amp;gt; 0) &amp;amp;&amp;amp; (b&amp;gt; 0) &amp;amp;&amp;amp; (c&amp;gt; 0))</target>
        </trans-unit>
        <trans-unit id="fb501127169f3365a037a04e5a656a20210eaaa6" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;_d_arrayappendTImpl&quot;&gt;_d_arrayappendTImpl&lt;/strong&gt;(Tarr : T[], T)</source>
          <target state="translated">шаблон &lt;strong id=&quot;_d_arrayappendTImpl&quot;&gt;_d_arrayappendTImpl&lt;/strong&gt; (Tarr: T [], T)</target>
        </trans-unit>
        <trans-unit id="b0e266a9a3a65f244b6117425d5838bd52f5b125" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;_d_arrayappendcTXImpl&quot;&gt;_d_arrayappendcTXImpl&lt;/strong&gt;(Tarr : T[], T)</source>
          <target state="translated">шаблон &lt;strong id=&quot;_d_arrayappendcTXImpl&quot;&gt;_d_arrayappendcTXImpl&lt;/strong&gt; (Tarr: T [], T)</target>
        </trans-unit>
        <trans-unit id="33e603122c36d7b18be644589efb98550a389ddb" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;_d_arraycatnTXImpl&quot;&gt;_d_arraycatnTXImpl&lt;/strong&gt;(Tarr : ResultArrT[], ResultArrT : T[], T)</source>
          <target state="translated">шаблон &lt;strong id=&quot;_d_arraycatnTXImpl&quot;&gt;_d_arraycatnTXImpl&lt;/strong&gt; (Tarr: ResultArrT [], ResultArrT: T [], T)</target>
        </trans-unit>
        <trans-unit id="f4ce812d49f8727d6b7386b72d314e9a2dcd0a7d" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;_d_arraysetlengthTImpl&quot;&gt;_d_arraysetlengthTImpl&lt;/strong&gt;(Tarr : T[], T)</source>
          <target state="translated">шаблон &lt;strong id=&quot;_d_arraysetlengthTImpl&quot;&gt;_d_arraysetlengthTImpl&lt;/strong&gt; (Tarr: T [], T)</target>
        </trans-unit>
        <trans-unit id="de884c6790fb12821904c87ae906bb630dc1e1ac" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;adjoin&quot;&gt;adjoin&lt;/strong&gt;(F...) if (F.length &amp;gt; 1)</source>
          <target state="translated">шаблон &lt;strong id=&quot;adjoin&quot;&gt;примыкает&lt;/strong&gt; (F ...) if (F.length&amp;gt; 1)</target>
        </trans-unit>
        <trans-unit id="0a1a25cc5ab2c6dded9bf989980327f0ab009c2c" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;adjoin&quot;&gt;adjoin&lt;/strong&gt;(F...) if (F.length == 1)</source>
          <target state="translated">шаблон &lt;strong id=&quot;adjoin&quot;&gt;примыкает&lt;/strong&gt; (F ...) if (F.length == 1)</target>
        </trans-unit>
        <trans-unit id="5c29a21fe6550090ef801706ec326da503deb35e" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;aliasSeqOf&quot;&gt;aliasSeqOf&lt;/strong&gt;(alias iter) if (isIterable!(typeof(iter)) &amp;amp;&amp;amp; !isInfinite!(typeof(iter)))</source>
          <target state="translated">шаблон &lt;strong id=&quot;aliasSeqOf&quot;&gt;aliasSeqOf&lt;/strong&gt; (псевдоним iter) if (isIterable! (typeof (iter)) &amp;amp;&amp;amp;! isInfinite! (typeof (iter)))</target>
        </trans-unit>
        <trans-unit id="b06b6d10105af2117a9779572ef5577c11f1f9b9" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;all&quot;&gt;all&lt;/strong&gt;(alias pred = &quot;a&quot;)</source>
          <target state="translated">шаблон &lt;strong id=&quot;all&quot;&gt;все&lt;/strong&gt; (псевдоним pred = &quot;a&quot;)</target>
        </trans-unit>
        <trans-unit id="d442b616617941c36092e9bd8e2458cc26ed95fc" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;allSameType&quot;&gt;allSameType&lt;/strong&gt;(T...)</source>
          <target state="translated">шаблон &lt;strong id=&quot;allSameType&quot;&gt;allSameType&lt;/strong&gt; (T ...)</target>
        </trans-unit>
        <trans-unit id="b792ef63b052042139814d383f8727bb2b94e7b0" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;allSatisfy&quot;&gt;allSatisfy&lt;/strong&gt;(alias F, T...)</source>
          <target state="translated">Шаблон &lt;strong id=&quot;allSatisfy&quot;&gt;allSatisfy&lt;/strong&gt; (псевдоним F, T ...)</target>
        </trans-unit>
        <trans-unit id="daa605617368e37c2b2f5b7ce39630d6cdaf919a" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;amap&quot;&gt;amap&lt;/strong&gt;(functions...)</source>
          <target state="translated">шаблон &lt;strong id=&quot;amap&quot;&gt;amap&lt;/strong&gt; (функции ...)</target>
        </trans-unit>
        <trans-unit id="652118a6e3c467e110a68ad64f378936565dcd30" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;among&quot;&gt;among&lt;/strong&gt;(values...) if (isExpressionTuple!values)</source>
          <target state="translated">шаблон &lt;strong id=&quot;among&quot;&gt;среди&lt;/strong&gt; (значений ...) if (isExpressionTuple! values)</target>
        </trans-unit>
        <trans-unit id="5fcb2b89bb6f1b813d93ef669dfd4bcf2a6da9b4" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;any&quot;&gt;any&lt;/strong&gt;(alias pred = &quot;a&quot;)</source>
          <target state="translated">шаблон &lt;strong id=&quot;any&quot;&gt;любой&lt;/strong&gt; (псевдоним pred = &quot;a&quot;)</target>
        </trans-unit>
        <trans-unit id="7f5aff8e4e397c39265b7331b5c907f7a11f74bf" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;anySatisfy&quot;&gt;anySatisfy&lt;/strong&gt;(alias F, T...)</source>
          <target state="translated">шаблон &lt;strong id=&quot;anySatisfy&quot;&gt;anySatisfy&lt;/strong&gt; (псевдоним F, T ...)</target>
        </trans-unit>
        <trans-unit id="b699f9b7f92e1a63777cdd593b98fed16c4b48f8" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;apply&quot;&gt;apply&lt;/strong&gt;(alias fun)</source>
          <target state="translated">шаблон &lt;strong id=&quot;apply&quot;&gt;применяется&lt;/strong&gt; (псевдоним весело)</target>
        </trans-unit>
        <trans-unit id="d55b4a1d2b9e7d33e461dade425794938a834d7b" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;arity&quot;&gt;arity&lt;/strong&gt;(func...) if (func.length == 1 &amp;amp;&amp;amp; isCallable!func &amp;amp;&amp;amp; (variadicFunctionStyle!func == Variadic.no))</source>
          <target state="translated">шаблон &lt;strong id=&quot;arity&quot;&gt;arity&lt;/strong&gt; (func ...) if (func.length == 1 &amp;amp;&amp;amp; isCallable! func &amp;amp;&amp;amp; (variadicFunctionStyle! func == Variadic.no))</target>
        </trans-unit>
        <trans-unit id="14cb03978457323a16e0f7dcc048dd58e6579346" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;basicExceptionCtors&quot;&gt;basicExceptionCtors&lt;/strong&gt;()</source>
          <target state="translated">шаблон &lt;strong id=&quot;basicExceptionCtors&quot;&gt;basicExceptionCtors&lt;/strong&gt; ()</target>
        </trans-unit>
        <trans-unit id="f7b7b5f6a61db5bff022fff21a15f531c3fcfcca" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;binaryFun&quot;&gt;binaryFun&lt;/strong&gt;(alias fun, string parm1Name = &quot;a&quot;, string parm2Name = &quot;b&quot;)</source>
          <target state="translated">шаблон &lt;strong id=&quot;binaryFun&quot;&gt;binaryFun&lt;/strong&gt; (псевдоним веселья, строка parm1Name = &quot;a&quot;, строка parm2Name = &quot;b&quot;)</target>
        </trans-unit>
        <trans-unit id="b3fdc3ec2f75ff9cf632b4dbfd1e165548f9e49a" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;binaryReverseArgs&quot;&gt;binaryReverseArgs&lt;/strong&gt;(alias pred)</source>
          <target state="translated">шаблон &lt;strong id=&quot;binaryReverseArgs&quot;&gt;binaryReverseArgs&lt;/strong&gt; (псевдоним &lt;strong id=&quot;binaryReverseArgs&quot;&gt;pred&lt;/strong&gt; )</target>
        </trans-unit>
        <trans-unit id="099479a5b9b276cb0be3c6d105df8bb8537189d5" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;bitfields&quot;&gt;bitfields&lt;/strong&gt;(T...)</source>
          <target state="translated">&lt;strong id=&quot;bitfields&quot;&gt;битовые поля&lt;/strong&gt; шаблона (T ...)</target>
        </trans-unit>
        <trans-unit id="c8e2e7456d628284814e3b2eae815daf3d23fed5" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;bool_constant&quot;&gt;bool_constant&lt;/strong&gt;(bool b)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2034337467aac77369fdddaad0528b3c3176b1bf" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;byUTF&quot;&gt;byUTF&lt;/strong&gt;(C) if (isSomeChar!C)</source>
          <target state="translated">шаблон &lt;strong id=&quot;byUTF&quot;&gt;byUTF&lt;/strong&gt; (C) if (isSomeChar! C)</target>
        </trans-unit>
        <trans-unit id="550401cad2f28486f2bd7689ac5cbea288833531" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;byUTF&quot;&gt;byUTF&lt;/strong&gt;(C, UseReplacementDchar useReplacementDchar = Yes.useReplacementDchar) if (isSomeChar!C)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d547f10a5761f9a6e7c127f37733a2bce25f7afa" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;canFind&quot;&gt;canFind&lt;/strong&gt;(alias pred = &quot;a == b&quot;)</source>
          <target state="translated">шаблон &lt;strong id=&quot;canFind&quot;&gt;canFind&lt;/strong&gt; (псевдоним &lt;strong id=&quot;canFind&quot;&gt;pred&lt;/strong&gt; = &quot;a == b&quot;)</target>
        </trans-unit>
        <trans-unit id="ebdba0bbfc07b6f6093dd99cc280d99ba6ad489f" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;cas&quot;&gt;cas&lt;/strong&gt;(MemoryOrder succ = MemoryOrder.seq, MemoryOrder fail = MemoryOrder.seq)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9103b56378fc1e5ab347900c721a09cec08892e9" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;castFrom&quot;&gt;castFrom&lt;/strong&gt;(From)</source>
          <target state="translated">шаблон &lt;strong id=&quot;castFrom&quot;&gt;castFrom&lt;/strong&gt; (с)</target>
        </trans-unit>
        <trans-unit id="285b5aca974892fd251c9ffb8b13ddb5115669ea" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;classInstanceAlignment&quot;&gt;classInstanceAlignment&lt;/strong&gt;(T) if (is(T == class))</source>
          <target state="translated">шаблон &lt;strong id=&quot;classInstanceAlignment&quot;&gt;classInstanceAlignment&lt;/strong&gt; (T), если (есть (T == класс))</target>
        </trans-unit>
        <trans-unit id="eeb92f774b65f6fb248c5dd4e66992976421274f" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;codepointSetTrie&quot;&gt;codepointSetTrie&lt;/strong&gt;(sizes...) if (sumOfIntegerTuple!sizes == 21)</source>
          <target state="translated">шаблон &lt;strong id=&quot;codepointSetTrie&quot;&gt;codepointSetTrie&lt;/strong&gt; (размеры ...) if (sumOfIntegerTuple! sizes == 21)</target>
        </trans-unit>
        <trans-unit id="2767d6515d31752135f08d0da4c1c8a088d315b2" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;codepointTrie&quot;&gt;codepointTrie&lt;/strong&gt;(T, sizes...) if (sumOfIntegerTuple!sizes == 21)</source>
          <target state="translated">шаблон &lt;strong id=&quot;codepointTrie&quot;&gt;codepointTrie&lt;/strong&gt; (T, размеры ...) if (sumOfIntegerTuple! sizes == 21)</target>
        </trans-unit>
        <trans-unit id="1234c8cc015a14e0ae6ee1e8ac63cc8fb1dbbf9d" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;compose&quot;&gt;compose&lt;/strong&gt;(fun...)</source>
          <target state="translated">шаблон &lt;strong id=&quot;compose&quot;&gt;сочинения&lt;/strong&gt; (прикол ...)</target>
        </trans-unit>
        <trans-unit id="036265a56be1efbe23220135569f0613da1b8dac" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;cumulativeFold&quot;&gt;cumulativeFold&lt;/strong&gt;(fun...) if (fun.length &amp;gt;= 1)</source>
          <target state="translated">шаблон &lt;strong id=&quot;cumulativeFold&quot;&gt;cumulativeFold&lt;/strong&gt; (fun ...) if (fun.length&amp;gt; = 1)</target>
        </trans-unit>
        <trans-unit id="56289c24c64449ba2dc697a85b24885b8ce36aa3" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;defaultLogFunction&quot;&gt;defaultLogFunction&lt;/strong&gt;(LogLevel ll)</source>
          <target state="translated">шаблон &lt;strong id=&quot;defaultLogFunction&quot;&gt;defaultLogFunction&lt;/strong&gt; (LogLevel ll)</target>
        </trans-unit>
        <trans-unit id="2aaae79ed335925ccd67d33f4fc219030266590e" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;defaultLogFunctionf&quot;&gt;defaultLogFunctionf&lt;/strong&gt;(LogLevel ll)</source>
          <target state="translated">шаблон &lt;strong id=&quot;defaultLogFunctionf&quot;&gt;defaultLogFunctionf&lt;/strong&gt; (LogLevel ll)</target>
        </trans-unit>
        <trans-unit id="81c4cc7aac2bc92717620e39691d2cc2fc884d06" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;each&quot;&gt;each&lt;/strong&gt;(alias fun = &quot;a&quot;)</source>
          <target state="translated">шаблон &lt;strong id=&quot;each&quot;&gt;каждого&lt;/strong&gt; (псевдоним веселья = &quot;а&quot;)</target>
        </trans-unit>
        <trans-unit id="64ae9fdfbb907ac4c9fd089f01bfc908d61650bd" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;enforce&quot;&gt;enforce&lt;/strong&gt;(E : Throwable = Exception) if (is(typeof(new E(&quot;&quot;, string.init, size_t.init)) : Throwable) || is(typeof(new E(string.init, size_t.init)) : Throwable))</source>
          <target state="translated">шаблон &lt;strong id=&quot;enforce&quot;&gt;принудительного исполнения&lt;/strong&gt; (E: Throwable = Exception) if (is (is (typeof (new E (&quot;, string.init, size_t.init)): Throwable) || is (typeof (new E (string.init, size_t.init) ): Бросаемый))</target>
        </trans-unit>
        <trans-unit id="1b548cbffd334df15e8d3444dc0063efeee05235" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;enforceEx&quot;&gt;enforceEx&lt;/strong&gt;(E : Throwable) if (is(typeof(new E(&quot;&quot;, string.init, size_t.init))))</source>
          <target state="translated">шаблон &lt;strong id=&quot;enforceEx&quot;&gt;forceceEx&lt;/strong&gt; (E: Throwable) if (is (is (typeof (new E (&quot;&quot;, string.init, size_t.init))))</target>
        </trans-unit>
        <trans-unit id="62d638afe5d507bcebecd61ec88c90799afa3311" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;equal&quot;&gt;equal&lt;/strong&gt;(alias pred = &quot;a == b&quot;)</source>
          <target state="translated">шаблон &lt;strong id=&quot;equal&quot;&gt;равен&lt;/strong&gt; (псевдоним pred = &quot;a == b&quot;)</target>
        </trans-unit>
        <trans-unit id="2daa33fbfc24f7f2aa04c3dc2b8948a985a4d0cb" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;filter&quot;&gt;filter&lt;/strong&gt;(alias predicate) if (is(typeof(unaryFun!predicate)))</source>
          <target state="translated">&lt;strong id=&quot;filter&quot;&gt;Фильтр&lt;/strong&gt; шаблона (предикат псевдонима) if (is (typeof (unaryFun! Предикат)))</target>
        </trans-unit>
        <trans-unit id="edf60757a202bfc980e42fd6aba5b71d06227a5b" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;filterBidirectional&quot;&gt;filterBidirectional&lt;/strong&gt;(alias pred)</source>
          <target state="translated">шаблон &lt;strong id=&quot;filterBidirectional&quot;&gt;filterBidirectional&lt;/strong&gt; (псевдоним &lt;strong id=&quot;filterBidirectional&quot;&gt;pred&lt;/strong&gt; )</target>
        </trans-unit>
        <trans-unit id="accbe22a042dd9ad3967960ff0002524b4e8184c" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;fold&quot;&gt;fold&lt;/strong&gt;(fun...) if (fun.length &amp;gt;= 1)</source>
          <target state="translated">шаблон &lt;strong id=&quot;fold&quot;&gt;раза&lt;/strong&gt; (весело ...) если (fun.length&amp;gt; = 1)</target>
        </trans-unit>
        <trans-unit id="df62802a603784d83573a69620dc52b154088308" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;fold&quot;&gt;fold&lt;/strong&gt;(functions...)</source>
          <target state="translated">&lt;strong id=&quot;fold&quot;&gt;сгиб&lt;/strong&gt; шаблона (функции ...)</target>
        </trans-unit>
        <trans-unit id="232c07d70712ffe71070d25a2963dc7da72391df" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;forward&quot;&gt;forward&lt;/strong&gt;(args...)</source>
          <target state="translated">шаблон &lt;strong id=&quot;forward&quot;&gt;вперед&lt;/strong&gt; (аргументы ...)</target>
        </trans-unit>
        <trans-unit id="a45e70de246995ee363dc87001aa1f888b243935" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;fullyQualifiedName&quot;&gt;fullyQualifiedName&lt;/strong&gt;(T...) if (T.length == 1)</source>
          <target state="translated">шаблон &lt;strong id=&quot;fullyQualifiedName&quot;&gt;полностью определено&lt;/strong&gt; (T ...) if (T.length == 1)</target>
        </trans-unit>
        <trans-unit id="8e1bcceeebc6b35c85dc9ff04145aa85845ba2c5" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;functionAttributes&quot;&gt;functionAttributes&lt;/strong&gt;(func...) if (func.length == 1 &amp;amp;&amp;amp; isCallable!func)</source>
          <target state="translated">шаблон &lt;strong id=&quot;functionAttributes&quot;&gt;functionAttributes&lt;/strong&gt; (функ ...) , если (func.length == 1 &amp;amp;&amp;amp; isCallable! функ)</target>
        </trans-unit>
        <trans-unit id="c72db16dfda3567f2c95509cd3ae5b1c7747d050" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;functionLinkage&quot;&gt;functionLinkage&lt;/strong&gt;(func...) if (func.length == 1 &amp;amp;&amp;amp; isCallable!func)</source>
          <target state="translated">шаблон &lt;strong id=&quot;functionLinkage&quot;&gt;functionLinkage&lt;/strong&gt; (func ...) if (func.length == 1 &amp;amp;&amp;amp; isCallable! func)</target>
        </trans-unit>
        <trans-unit id="59f02f640cb9be8eb3f712e92c5960947c5899dd" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;generateEmptyFunction&quot;&gt;generateEmptyFunction&lt;/strong&gt;(C, func...)</source>
          <target state="translated">шаблон &lt;strong id=&quot;generateEmptyFunction&quot;&gt;generateEmptyFunction&lt;/strong&gt; (C, func ...)</target>
        </trans-unit>
        <trans-unit id="7da14c997dded9fabe260daab16e58bbef6e4eef" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;getSymbolsByUDA&quot;&gt;getSymbolsByUDA&lt;/strong&gt;(alias symbol, alias attribute)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2da36ef7f53b6b9e4f30c628f1d97a9e4033a0f" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;getSymbolsByUDA&quot;&gt;getSymbolsByUDA&lt;/strong&gt;(alias symbol, alias attribute) if (isAggregateType!symbol)</source>
          <target state="translated">шаблон &lt;strong id=&quot;getSymbolsByUDA&quot;&gt;getSymbolsByUDA&lt;/strong&gt; (символ псевдонима, атрибут псевдонима) if (isAggregateType! symbol)</target>
        </trans-unit>
        <trans-unit id="2d666c3249129dc767c07a312c7707b415be9c85" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;getUDAs&quot;&gt;getUDAs&lt;/strong&gt;(alias symbol, alias attribute)</source>
          <target state="translated">шаблон &lt;strong id=&quot;getUDAs&quot;&gt;getUDAs&lt;/strong&gt; (символ псевдонима, атрибут псевдонима)</target>
        </trans-unit>
        <trans-unit id="634891a612cf8afcf4202ec263edd2604da48116" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;hasBlockSize&quot;&gt;hasBlockSize&lt;/strong&gt;(T) if (isDigest!T)</source>
          <target state="translated">шаблон &lt;strong id=&quot;hasBlockSize&quot;&gt;hasBlockSize&lt;/strong&gt; (T) if (isDigest! T)</target>
        </trans-unit>
        <trans-unit id="25c4cf55ff10f0abadab25f1af5372fb852b0bde" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;hasElaborateAssign&quot;&gt;hasElaborateAssign&lt;/strong&gt;(S)</source>
          <target state="translated">шаблон &lt;strong id=&quot;hasElaborateAssign&quot;&gt;hasElaborateAssign&lt;/strong&gt; (S)</target>
        </trans-unit>
        <trans-unit id="ea4971b43b3340970c99b5d413c8c3b6e3d62f7a" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;hasElaborateCopyConstructor&quot;&gt;hasElaborateCopyConstructor&lt;/strong&gt;(S)</source>
          <target state="translated">шаблон &lt;strong id=&quot;hasElaborateCopyConstructor&quot;&gt;hasElaborateCopyConstructor&lt;/strong&gt; (S)</target>
        </trans-unit>
        <trans-unit id="5859f432463fc8b8d4334f3479c8761fe6c74688" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;hasElaborateDestructor&quot;&gt;hasElaborateDestructor&lt;/strong&gt;(S)</source>
          <target state="translated">шаблон &lt;strong id=&quot;hasElaborateDestructor&quot;&gt;hasElaborateDestructor&lt;/strong&gt; (S)</target>
        </trans-unit>
        <trans-unit id="363e61430d10f4208ecf6c4c530c243fd636dbff" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;hasElaborateMove&quot;&gt;hasElaborateMove&lt;/strong&gt;(S)</source>
          <target state="translated">шаблон &lt;strong id=&quot;hasElaborateMove&quot;&gt;hasElaborateMove&lt;/strong&gt; (S)</target>
        </trans-unit>
        <trans-unit id="bb490efa5f59d4a6cc571ee2745db0e8954ee1d1" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;hasFunctionAttributes&quot;&gt;hasFunctionAttributes&lt;/strong&gt;(args...) if (args.length &amp;gt; 0 &amp;amp;&amp;amp; isCallable!(args[0]) &amp;amp;&amp;amp; allSatisfy!(isSomeString, typeof(args[1..$])))</source>
          <target state="translated">шаблон &lt;strong id=&quot;hasFunctionAttributes&quot;&gt;hasFunctionAttributes&lt;/strong&gt; (args ...) if (args.length&amp;gt; 0 &amp;amp;&amp;amp; isCallable! (args [0]) &amp;amp;&amp;amp; allSatisfy! (isSomeString, typeof (args [1 .. $])))</target>
        </trans-unit>
        <trans-unit id="f01dc163150971b0928eafd3ab91012a9a228331" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;hasIndirections&quot;&gt;hasIndirections&lt;/strong&gt;(T)</source>
          <target state="translated">Шаблон &lt;strong id=&quot;hasIndirections&quot;&gt;hasIndirections&lt;/strong&gt; (T)</target>
        </trans-unit>
        <trans-unit id="9365cba6f057997ee87a6c45f3f8244ebbb519f8" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;hasLength&quot;&gt;hasLength&lt;/strong&gt;(R)</source>
          <target state="translated">шаблон &lt;strong id=&quot;hasLength&quot;&gt;hasLength&lt;/strong&gt; (R)</target>
        </trans-unit>
        <trans-unit id="3d3a6289565830bc4a375f59be09041594b9f366" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;hasNested&quot;&gt;hasNested&lt;/strong&gt;(T)</source>
          <target state="translated">шаблон &lt;strong id=&quot;hasNested&quot;&gt;hasNested&lt;/strong&gt; (T)</target>
        </trans-unit>
        <trans-unit id="0edfbc5114d1a098eb7c0374583fda7ff312de94" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;hasStaticMember&quot;&gt;hasStaticMember&lt;/strong&gt;(T, string member)</source>
          <target state="translated">шаблон &lt;strong id=&quot;hasStaticMember&quot;&gt;hasStaticMember&lt;/strong&gt; (T, строковый член)</target>
        </trans-unit>
        <trans-unit id="8f253e384cf428b5c108071ff8b8343b4cd86302" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;hexString&quot;&gt;hexString&lt;/strong&gt;(dstring hexData) if (hexData.isHexLiteral)</source>
          <target state="translated">шаблон &lt;strong id=&quot;hexString&quot;&gt;hexString&lt;/strong&gt; (dstring hexData) if (hexData.isHexLiteral)</target>
        </trans-unit>
        <trans-unit id="68f2f3d502711d43effa4fea3f743d28cb900265" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;hexString&quot;&gt;hexString&lt;/strong&gt;(string hexData) if (hexData.isHexLiteral)</source>
          <target state="translated">шаблон &lt;strong id=&quot;hexString&quot;&gt;hexString&lt;/strong&gt; (строка hexData) if (hexData.isHexLiteral)</target>
        </trans-unit>
        <trans-unit id="f30894ebc4a14f5019d5dae669d397a94bec9d64" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;hexString&quot;&gt;hexString&lt;/strong&gt;(wstring hexData) if (hexData.isHexLiteral)</source>
          <target state="translated">шаблон &lt;strong id=&quot;hexString&quot;&gt;hexString&lt;/strong&gt; (wstring hexData) if (hexData.isHexLiteral)</target>
        </trans-unit>
        <trans-unit id="f33b551175386cffd125a61afad34b9bbfa33cad" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;hmac&quot;&gt;hmac&lt;/strong&gt;(H) if (isDigest!H &amp;amp;&amp;amp; hasBlockSize!H)</source>
          <target state="translated">шаблон &lt;strong id=&quot;hmac&quot;&gt;hmac&lt;/strong&gt; (H) if (isDigest! H &amp;amp;&amp;amp; hasBlockSize! H)</target>
        </trans-unit>
        <trans-unit id="eac0b5d6b8ff2c0581823799995799f27235ba9e" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;isAbstractClass&quot;&gt;isAbstractClass&lt;/strong&gt;(T...) if (T.length == 1)</source>
          <target state="translated">шаблон &lt;strong id=&quot;isAbstractClass&quot;&gt;isAbstractClass&lt;/strong&gt; (T ...) if (T.length == 1)</target>
        </trans-unit>
        <trans-unit id="eccfa2066c96bb5967f9df6a2fc000d3ef9e10be" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;isAbstractFunction&quot;&gt;isAbstractFunction&lt;/strong&gt;(T...) if (T.length == 1)</source>
          <target state="translated">шаблон &lt;strong id=&quot;isAbstractFunction&quot;&gt;isAbstractFunction&lt;/strong&gt; (T ...) if (T.length == 1)</target>
        </trans-unit>
        <trans-unit id="ee8e8fd1c9c004853411b084651062d0544e2ade" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;isBitFlagEnum&quot;&gt;isBitFlagEnum&lt;/strong&gt;(E)</source>
          <target state="translated">шаблон &lt;strong id=&quot;isBitFlagEnum&quot;&gt;isBitFlagEnum&lt;/strong&gt; (E)</target>
        </trans-unit>
        <trans-unit id="36b53dcccfa5dda2e648528210aecc3a0819fd0d" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;isCallable&quot;&gt;isCallable&lt;/strong&gt;(T...) if (T.length == 1)</source>
          <target state="translated">шаблон &lt;strong id=&quot;isCallable&quot;&gt;isCallable&lt;/strong&gt; (T ...) if (T.length == 1)</target>
        </trans-unit>
        <trans-unit id="171a21e05246e794bb2b523bb3556817309bb31f" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;isCodepointSet&quot;&gt;isCodepointSet&lt;/strong&gt;(T)</source>
          <target state="translated">шаблон &lt;strong id=&quot;isCodepointSet&quot;&gt;isCodepointSet&lt;/strong&gt; (T)</target>
        </trans-unit>
        <trans-unit id="71a8a8baba1bd042d8bd4418e6420b0c074cafab" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;isCovariantWith&quot;&gt;isCovariantWith&lt;/strong&gt;(F, G) if (is(F == function) &amp;amp;&amp;amp; is(G == function) || is(F == delegate) &amp;amp;&amp;amp; is(G == delegate) || isFunctionPointer!F &amp;amp;&amp;amp; isFunctionPointer!G)</source>
          <target state="translated">шаблон &lt;strong id=&quot;isCovariantWith&quot;&gt;isCovariantWith&lt;/strong&gt; (F, G), если (есть (F == функция) &amp;amp;&amp;amp; есть (G == функция) || есть (F == делегат) &amp;amp;&amp;amp; is (G == делегат) || isFunctionPointer! F &amp;amp;&amp;amp; isFunctionPointer! G )</target>
        </trans-unit>
        <trans-unit id="b24853b87fc46e15d17ae5fb1183a4a95e54376c" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;isDelegate&quot;&gt;isDelegate&lt;/strong&gt;(T...) if (T.length == 1)</source>
          <target state="translated">шаблон &lt;strong id=&quot;isDelegate&quot;&gt;isDelegate&lt;/strong&gt; (T ...) if (T.length == 1)</target>
        </trans-unit>
        <trans-unit id="b8ae8c048cdc43c5f8aabc447264921a96deb9d8" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;isExpressions&quot;&gt;isExpressions&lt;/strong&gt;(T...)</source>
          <target state="translated">Шаблон &lt;strong id=&quot;isExpressions&quot;&gt;isExpressions&lt;/strong&gt; (T ...)</target>
        </trans-unit>
        <trans-unit id="29cf28219a2d9a05af91b1cbb73a75f100b13683" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;isFinal&quot;&gt;isFinal&lt;/strong&gt;(X...) if (X.length == 1)</source>
          <target state="translated">шаблон &lt;strong id=&quot;isFinal&quot;&gt;isFinal&lt;/strong&gt; (X ...) if (X.length == 1)</target>
        </trans-unit>
        <trans-unit id="f025678f999be882921f961bb19c2b9dfd8906fd" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;isFinalClass&quot;&gt;isFinalClass&lt;/strong&gt;(T...) if (T.length == 1)</source>
          <target state="translated">шаблон &lt;strong id=&quot;isFinalClass&quot;&gt;isFinalClass&lt;/strong&gt; (T ...) if (T.length == 1)</target>
        </trans-unit>
        <trans-unit id="ec03eae46fc7f1d423c1ad46deff2d075bcac691" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;isFinalFunction&quot;&gt;isFinalFunction&lt;/strong&gt;(T...) if (T.length == 1)</source>
          <target state="translated">шаблон &lt;strong id=&quot;isFinalFunction&quot;&gt;isFinalFunction&lt;/strong&gt; (T ...) if (T.length == 1)</target>
        </trans-unit>
        <trans-unit id="c668217e815fa48b91e684c8730f6cf21db07378" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;isFunction&quot;&gt;isFunction&lt;/strong&gt;(X...) if (X.length == 1)</source>
          <target state="translated">шаблон &lt;strong id=&quot;isFunction&quot;&gt;isFunction&lt;/strong&gt; (X ...) if (X.length == 1)</target>
        </trans-unit>
        <trans-unit id="58d21083c590a1472da726cd8e99d9f83ca434b3" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;isFunctionPointer&quot;&gt;isFunctionPointer&lt;/strong&gt;(T...) if (T.length == 1)</source>
          <target state="translated">шаблон &lt;strong id=&quot;isFunctionPointer&quot;&gt;isFunctionPointer&lt;/strong&gt; (T ...) if (T.length == 1)</target>
        </trans-unit>
        <trans-unit id="fb23ba471479e2a68b5c0a4d5bab5ecf04da85cd" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;isInfinite&quot;&gt;isInfinite&lt;/strong&gt;(R)</source>
          <target state="translated">шаблон &lt;strong id=&quot;isInfinite&quot;&gt;isInfinite&lt;/strong&gt; (R)</target>
        </trans-unit>
        <trans-unit id="9c2711095bbe6ae8af2bb2597cf2f97d2eaf5939" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;isInnerClass&quot;&gt;isInnerClass&lt;/strong&gt;(T) if (is(T == class))</source>
          <target state="translated">шаблон &lt;strong id=&quot;isInnerClass&quot;&gt;isInnerClass&lt;/strong&gt; (T), если (есть (T == класс))</target>
        </trans-unit>
        <trans-unit id="98f4c8e42dd3b2c747c948eed3670338ec59b278" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;isLoggingActiveAt&quot;&gt;isLoggingActiveAt&lt;/strong&gt;(LogLevel ll)</source>
          <target state="translated">шаблон &lt;strong id=&quot;isLoggingActiveAt&quot;&gt;isLoggingActiveAt&lt;/strong&gt; (LogLevel ll)</target>
        </trans-unit>
        <trans-unit id="ca3391eea333cbfb38f4a4bcf577415373a2518e" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;isNested&quot;&gt;isNested&lt;/strong&gt;(T) if (is(T == class) || is(T == struct) || is(T == union))</source>
          <target state="translated">шаблон &lt;strong id=&quot;isNested&quot;&gt;isNested&lt;/strong&gt; (T), если (есть (T == класс) || есть (T == struct) || есть (T == union))</target>
        </trans-unit>
        <trans-unit id="411dd0c8505fc52dd6028bff33cd25c2b68a086a" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;isPostblitNoThrow&quot;&gt;isPostblitNoThrow&lt;/strong&gt;(T)</source>
          <target state="translated">шаблон &lt;strong id=&quot;isPostblitNoThrow&quot;&gt;isPostblitNoThrow&lt;/strong&gt; (T)</target>
        </trans-unit>
        <trans-unit id="c0181f4a206f292ca2d9320d9d756dc51f68666a" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;isSafe&quot;&gt;isSafe&lt;/strong&gt;(alias func) if (isCallable!func)</source>
          <target state="translated">шаблон &lt;strong id=&quot;isSafe&quot;&gt;isSafe&lt;/strong&gt; (псевдоним func) if (isCallable! func)</target>
        </trans-unit>
        <trans-unit id="a43e4a2c375f95df3259cb683027a6c6b053565b" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;isSomeFunction&quot;&gt;isSomeFunction&lt;/strong&gt;(T...) if (T.length == 1)</source>
          <target state="translated">шаблон &lt;strong id=&quot;isSomeFunction&quot;&gt;isSomeFunction&lt;/strong&gt; (T ...) if (T.length == 1)</target>
        </trans-unit>
        <trans-unit id="96699f00db78584c1a00e9f50adf356f417b3d1c" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;isType&quot;&gt;isType&lt;/strong&gt;(X...) if (X.length == 1)</source>
          <target state="translated">шаблон &lt;strong id=&quot;isType&quot;&gt;isType&lt;/strong&gt; (X ...) if (X.length == 1)</target>
        </trans-unit>
        <trans-unit id="18e3defeeea96f355aae46c866a7e5d3e488ec89" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;isTypeTuple&quot;&gt;isTypeTuple&lt;/strong&gt;(T...)</source>
          <target state="translated">шаблон &lt;strong id=&quot;isTypeTuple&quot;&gt;isTypeTuple&lt;/strong&gt; (T ...)</target>
        </trans-unit>
        <trans-unit id="034c615e7cc5897a7fa19680fd2243567bc5be4a" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;make&quot;&gt;make&lt;/strong&gt;(T) if (is(T == struct) || is(T == class))</source>
          <target state="translated">шаблон &lt;strong id=&quot;make&quot;&gt;make&lt;/strong&gt; (T) if (is (T == struct) || is (T == class))</target>
        </trans-unit>
        <trans-unit id="e223927c1f6321e2efc491f561827b03163f6a0f" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;make&quot;&gt;make&lt;/strong&gt;(alias Container, Args...) if (!is(Container))</source>
          <target state="translated">шаблон &lt;strong id=&quot;make&quot;&gt;make&lt;/strong&gt; (псевдоним Container, Args ...) if (! is (Container))</target>
        </trans-unit>
        <trans-unit id="2318029114edc123b65fae13a9c5c521cf1c34b0" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;mangledName&quot;&gt;mangledName&lt;/strong&gt;(sth...) if (sth.length == 1)</source>
          <target state="translated">шаблон &lt;strong id=&quot;mangledName&quot;&gt;mangledName&lt;/strong&gt; (sth ...) if (sth.length == 1)</target>
        </trans-unit>
        <trans-unit id="a2465ee3250e3b3be56f819bdfe4023029fd4d7c" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;map&quot;&gt;map&lt;/strong&gt;(fun...) if (fun.length &amp;gt;= 1)</source>
          <target state="translated">шаблон &lt;strong id=&quot;map&quot;&gt;карты&lt;/strong&gt; (fun ...) if (fun.length&amp;gt; = 1)</target>
        </trans-unit>
        <trans-unit id="99d679059f08d68210bbbc6de00c86b66fd443f1" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;map&quot;&gt;map&lt;/strong&gt;(functions...)</source>
          <target state="translated">шаблон &lt;strong id=&quot;map&quot;&gt;карты&lt;/strong&gt; (функции ...)</target>
        </trans-unit>
        <trans-unit id="d32bf6dcc69ade9fbc6aae099c71d53f6e0e6c8d" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;maxSize&quot;&gt;maxSize&lt;/strong&gt;(T...)</source>
          <target state="translated">шаблон &lt;strong id=&quot;maxSize&quot;&gt;maxSize&lt;/strong&gt; (T ...)</target>
        </trans-unit>
        <trans-unit id="a551efa965dd3a5db58c1661d905b8ca1f1b6490" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;memLogFunctions&quot;&gt;memLogFunctions&lt;/strong&gt;(LogLevel ll)</source>
          <target state="translated">шаблон &lt;strong id=&quot;memLogFunctions&quot;&gt;memLogFunctions&lt;/strong&gt; (LogLevel ll)</target>
        </trans-unit>
        <trans-unit id="29440f0ac2c27b343adbe81b21de1a8f6458f8fc" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;moduleLogLevel&quot;&gt;moduleLogLevel&lt;/strong&gt;(string moduleName) if (!moduleName.length)</source>
          <target state="translated">шаблон &lt;strong id=&quot;moduleLogLevel&quot;&gt;moduleLogLevel&lt;/strong&gt; (строка moduleName) if (! moduleName.length)</target>
        </trans-unit>
        <trans-unit id="72e08ec897cfee999cccb52920b04b9a1e07fc3a" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;moduleLogLevel&quot;&gt;moduleLogLevel&lt;/strong&gt;(string moduleName) if (moduleName.length)</source>
          <target state="translated">шаблон &lt;strong id=&quot;moduleLogLevel&quot;&gt;moduleLogLevel&lt;/strong&gt; (строка moduleName) if (moduleName.length)</target>
        </trans-unit>
        <trans-unit id="175bccce32c35a90a659451b06478bf467f43f1a" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;moduleName&quot;&gt;moduleName&lt;/strong&gt;(alias T)</source>
          <target state="translated">шаблон &lt;strong id=&quot;moduleName&quot;&gt;moduleName&lt;/strong&gt; (псевдоним T)</target>
        </trans-unit>
        <trans-unit id="7d4136642c11ac93cf44ffafcde172cd0b439a0e" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;mostNegative&quot;&gt;mostNegative&lt;/strong&gt;(T) if (isNumeric!T || isSomeChar!T || isBoolean!T)</source>
          <target state="translated">шаблон &lt;strong id=&quot;mostNegative&quot;&gt;самый отрицательный&lt;/strong&gt; (T) if (isNumeric! T || isSomeChar! T || isBoolean! T)</target>
        </trans-unit>
        <trans-unit id="a3e431fe268079d8206651a8b43a75ccf757b856" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;multiSort&quot;&gt;multiSort&lt;/strong&gt;(less...)</source>
          <target state="translated">шаблон &lt;strong id=&quot;multiSort&quot;&gt;multiSort&lt;/strong&gt; (меньше ...)</target>
        </trans-unit>
        <trans-unit id="57c684f14cf7749decea3867c3688ca86e6d03b1" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;not&quot;&gt;not&lt;/strong&gt;(alias pred)</source>
          <target state="translated">шаблон &lt;strong id=&quot;not&quot;&gt;не&lt;/strong&gt; (псевдоним пред)</target>
        </trans-unit>
        <trans-unit id="9e81e8235299c25168d39b1fc8549b8854595ba6" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;octal&quot;&gt;octal&lt;/strong&gt;(alias decimalInteger) if (is(typeof(decimalInteger)) &amp;amp;&amp;amp; isIntegral!(typeof(decimalInteger)))</source>
          <target state="translated">&lt;strong id=&quot;octal&quot;&gt;восьмеричный&lt;/strong&gt; шаблон (псевдоним decimalInteger) if (is (typeof (decimalInteger)) &amp;amp;&amp;amp; isIntegral! (typeof (decimalInteger))))</target>
        </trans-unit>
        <trans-unit id="3d890c4c8e1b82af9940032179497b3177cbd990" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;octal&quot;&gt;octal&lt;/strong&gt;(string num) if (isOctalLiteral(num))</source>
          <target state="translated">&lt;strong id=&quot;octal&quot;&gt;восьмеричный&lt;/strong&gt; шаблон (строка num) if (isOctalLiteral (num))</target>
        </trans-unit>
        <trans-unit id="938cd99b3fdd1b7afb37a712a18ce15f4dabaf96" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;opOpAssign&quot;&gt;opOpAssign&lt;/strong&gt;(string op : &quot;~&quot;)</source>
          <target state="translated">шаблон &lt;strong id=&quot;opOpAssign&quot;&gt;opOpAssign&lt;/strong&gt; (строка op: &quot;~&quot;)</target>
        </trans-unit>
        <trans-unit id="344194dc4bccac28780c06cd2d1221d2c76df9f3" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;outputRangeObject&quot;&gt;outputRangeObject&lt;/strong&gt;(E...)</source>
          <target state="translated">шаблон &lt;strong id=&quot;outputRangeObject&quot;&gt;outputRangeObject&lt;/strong&gt; (E ...)</target>
        </trans-unit>
        <trans-unit id="71b1521c2b3995248795f5abcce5d239467314de" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;packageName&quot;&gt;packageName&lt;/strong&gt;(alias T)</source>
          <target state="translated">шаблон &lt;strong id=&quot;packageName&quot;&gt;packageName&lt;/strong&gt; (псевдоним T)</target>
        </trans-unit>
        <trans-unit id="3caf67cd0fb9baac348624266f00543dd1e05b3f" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;partial&quot;&gt;partial&lt;/strong&gt;(alias fun, alias arg)</source>
          <target state="translated">шаблон &lt;strong id=&quot;partial&quot;&gt;частичного&lt;/strong&gt; (псевдоним забава, псевдоним Arg)</target>
        </trans-unit>
        <trans-unit id="fa891fc835ba4471f4d8281b3fbe9bdfef404756" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;pipe&quot;&gt;pipe&lt;/strong&gt;(fun...)</source>
          <target state="translated">шаблон &lt;strong id=&quot;pipe&quot;&gt;трубы&lt;/strong&gt; (весело ...)</target>
        </trans-unit>
        <trans-unit id="86a77f50c808a10e0ca54ba1ad518a589cb7aa60" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;rebind&quot;&gt;rebind&lt;/strong&gt;(U)</source>
          <target state="translated">&lt;strong id=&quot;rebind&quot;&gt;повторная привязка&lt;/strong&gt; шаблона (U)</target>
        </trans-unit>
        <trans-unit id="e9eaef5d74c5d6afa2791b059e35cdc7f261372e" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;rebind_alloc&quot;&gt;rebind_alloc&lt;/strong&gt;(U)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed3daf4e0cb8de311181bb1fe031083492f1c31e" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;rebind_traits&quot;&gt;rebind_traits&lt;/strong&gt;(U)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67d7203ab49cbf8913a0c22f5d2c15c552b9c9da" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;reduce&quot;&gt;reduce&lt;/strong&gt;(fun...) if (fun.length &amp;gt;= 1)</source>
          <target state="translated">шаблон &lt;strong id=&quot;reduce&quot;&gt;уменьшить&lt;/strong&gt; (весело ...) if (fun.length&amp;gt; = 1)</target>
        </trans-unit>
        <trans-unit id="d3b0c93cc0107364797a32adeb6670e9f21a0060" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;reduce&quot;&gt;reduce&lt;/strong&gt;(functions...)</source>
          <target state="translated">шаблон &lt;strong id=&quot;reduce&quot;&gt;уменьшить&lt;/strong&gt; (функции ...)</target>
        </trans-unit>
        <trans-unit id="3141e1fcb6b256a2c87648ecdb51820cab7a4ba8" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;reverseArgs&quot;&gt;reverseArgs&lt;/strong&gt;(alias pred)</source>
          <target state="translated">шаблон &lt;strong id=&quot;reverseArgs&quot;&gt;reverseArgs&lt;/strong&gt; (псевдоним pred)</target>
        </trans-unit>
        <trans-unit id="61fed3182e4bea23a8ed46db6166206c327eadfc" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;roundTo&quot;&gt;roundTo&lt;/strong&gt;(Target)</source>
          <target state="translated">шаблон &lt;strong id=&quot;roundTo&quot;&gt;roundTo&lt;/strong&gt; (Target)</target>
        </trans-unit>
        <trans-unit id="d9b02bf38767f63e54854372119f8116d8ed897c" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;scoped&quot;&gt;scoped&lt;/strong&gt;(T) if (is(T == class))</source>
          <target state="translated">&lt;strong id=&quot;scoped&quot;&gt;область действия&lt;/strong&gt; шаблона (T), если (есть (T == класс))</target>
        </trans-unit>
        <trans-unit id="c1b70b0a74fc925ba011a54b7b89e6503a530314" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;secantMethod&quot;&gt;secantMethod&lt;/strong&gt;(alias fun)</source>
          <target state="translated">шаблон &lt;strong id=&quot;secantMethod&quot;&gt;secantMethod&lt;/strong&gt; (псевдоним веселья)</target>
        </trans-unit>
        <trans-unit id="a4a19028c2744e7bf27a1cf0c1f5cdd351595464" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;skipOver&quot;&gt;skipOver&lt;/strong&gt;(alias pred = (a, b) =&amp;gt; a == b)</source>
          <target state="translated">шаблон &lt;strong id=&quot;skipOver&quot;&gt;skipOver&lt;/strong&gt; (псевдоним &lt;strong id=&quot;skipOver&quot;&gt;pred&lt;/strong&gt; = (a, b) =&amp;gt; a == b)</target>
        </trans-unit>
        <trans-unit id="307ec36c6131c20a1124a6187d0a4a1a535f894f" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;split&quot;&gt;split&lt;/strong&gt;(units...) if (allAreAcceptedUnits!(&quot;weeks&quot;, &quot;days&quot;, &quot;hours&quot;, &quot;minutes&quot;, &quot;seconds&quot;, &quot;msecs&quot;, &quot;usecs&quot;, &quot;hnsecs&quot;, &quot;nsecs&quot;)(units) &amp;amp;&amp;amp; unitsAreInDescendingOrder(units))</source>
          <target state="translated">шаблон &lt;strong id=&quot;split&quot;&gt;разделить&lt;/strong&gt; (единицы ...) if (allAreAcceptedUnits! (&quot;недели&quot;, &quot;дни&quot;, &quot;часы&quot;, &quot;минуты&quot;, &quot;секунды&quot;, &quot;msecs&quot;, &quot;usecs&quot;, &quot;hnsecs&quot;, &quot;nsecs&quot;) ( ед.) &amp;amp;&amp;amp; unitsAreInDescendingOrder (ед.))</target>
        </trans-unit>
        <trans-unit id="d5d3f8d64f1275fa8799d332f6aede17b3af9167" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;stateSize&quot;&gt;stateSize&lt;/strong&gt;(T)</source>
          <target state="translated">шаблон &lt;strong id=&quot;stateSize&quot;&gt;stateSize&lt;/strong&gt; (T)</target>
        </trans-unit>
        <trans-unit id="1162fb39c66205a032c1e2e21cf86341667be132" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;staticIsSorted&quot;&gt;staticIsSorted&lt;/strong&gt;(alias cmp, Seq...)</source>
          <target state="translated">шаблон &lt;strong id=&quot;staticIsSorted&quot;&gt;staticIsSorted&lt;/strong&gt; (псевдоним cmp, Seq ...)</target>
        </trans-unit>
        <trans-unit id="fb713b885c2887a8219d3e5eba7bde8235402851" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;staticMap&quot;&gt;staticMap&lt;/strong&gt;(alias F, Args...)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e724541307f8f100bc85be91d94fdd79b8dc5bff" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;staticMap&quot;&gt;staticMap&lt;/strong&gt;(alias F, T...)</source>
          <target state="translated">шаблон &lt;strong id=&quot;staticMap&quot;&gt;staticMap&lt;/strong&gt; (псевдоним F, T ...)</target>
        </trans-unit>
        <trans-unit id="d23aeb253d66765b04e4b3658647e776edf109b6" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;staticSort&quot;&gt;staticSort&lt;/strong&gt;(alias cmp, Seq...)</source>
          <target state="translated">шаблон &lt;strong id=&quot;staticSort&quot;&gt;staticSort&lt;/strong&gt; (псевдоним cmp, Seq ...)</target>
        </trans-unit>
        <trans-unit id="6bed1c57c7c2496d11558bab7f8413b43c086bb4" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;substitute&quot;&gt;substitute&lt;/strong&gt;(substs...) if (substs.length &amp;gt;= 2 &amp;amp;&amp;amp; isExpressions!substs)</source>
          <target state="translated">&lt;strong id=&quot;substitute&quot;&gt;замена&lt;/strong&gt; шаблона (substs ...) if (substs.length&amp;gt; = 2 &amp;amp;&amp;amp; isExpressions! substs)</target>
        </trans-unit>
        <trans-unit id="1c0ed2bc1eaaf8c2082d5733788eddd78d94b551" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;taggedClassRef&quot;&gt;taggedClassRef&lt;/strong&gt;(T, string name, Ts...) if (is(T == class))</source>
          <target state="translated">шаблон &lt;strong id=&quot;taggedClassRef&quot;&gt;taggedClassRef&lt;/strong&gt; (T, имя строки, Ts ...) if (is (T == class))</target>
        </trans-unit>
        <trans-unit id="161190795879cf4a97867c8020124937e79b69e1" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;templateAnd&quot;&gt;templateAnd&lt;/strong&gt;(Preds...)</source>
          <target state="translated">шаблон &lt;strong id=&quot;templateAnd&quot;&gt;templateAnd&lt;/strong&gt; (Preds ...)</target>
        </trans-unit>
        <trans-unit id="a4dcc0f219deb93011bbccf5ff16157d137df8d7" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;templateNot&quot;&gt;templateNot&lt;/strong&gt;(alias pred)</source>
          <target state="translated">шаблон &lt;strong id=&quot;templateNot&quot;&gt;templateNot&lt;/strong&gt; (псевдоним pred)</target>
        </trans-unit>
        <trans-unit id="31d7aa8c15990fffd624d1b494ca75dfe5ee85f6" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;templateOr&quot;&gt;templateOr&lt;/strong&gt;(Preds...)</source>
          <target state="translated">шаблон &lt;strong id=&quot;templateOr&quot;&gt;templateOr&lt;/strong&gt; (Preds ...)</target>
        </trans-unit>
        <trans-unit id="390984a8fa4f6852f6a556bb6e70a9fc94966ad6" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;to&quot;&gt;to&lt;/strong&gt;(T)</source>
          <target state="translated">шаблон &lt;strong id=&quot;to&quot;&gt;для&lt;/strong&gt; (T)</target>
        </trans-unit>
        <trans-unit id="6610b2a3818c1a8882badf268ee8f8335a834477" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;toUTFz&quot;&gt;toUTFz&lt;/strong&gt;(P)</source>
          <target state="translated">шаблон для &lt;strong id=&quot;toUTFz&quot;&gt;UTFz&lt;/strong&gt; (P)</target>
        </trans-unit>
        <trans-unit id="d88ad038a17d074016f5c4e085dce4354dc2a505" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;tryVisit&quot;&gt;tryVisit&lt;/strong&gt;(Handlers...) if (Handlers.length &amp;gt; 0)</source>
          <target state="translated">шаблон &lt;strong id=&quot;tryVisit&quot;&gt;tryVisit&lt;/strong&gt; (Handlers ...) if (Handlers.length&amp;gt; 0)</target>
        </trans-unit>
        <trans-unit id="37a8346c23fa8e4cb6591418e10f47e1c1a10297" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;tuple&quot;&gt;tuple&lt;/strong&gt;(Names...)</source>
          <target state="translated">шаблон &lt;strong id=&quot;tuple&quot;&gt;кортежа&lt;/strong&gt; (имена ...)</target>
        </trans-unit>
        <trans-unit id="6064f1646fa1eb84b6fa5f05ece513c3d7812b04" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;unaryFun&quot;&gt;unaryFun&lt;/strong&gt;(alias fun, string parmName = &quot;a&quot;)</source>
          <target state="translated">шаблон &lt;strong id=&quot;unaryFun&quot;&gt;unaryFun&lt;/strong&gt; (псевдоним весёлый, строка parmName = &quot;a&quot;)</target>
        </trans-unit>
        <trans-unit id="1fa82150533e69767360aac613676494ad0e13ed" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;unpredictableSeed&quot;&gt;unpredictableSeed&lt;/strong&gt;(UIntType) if (isUnsigned!UIntType)</source>
          <target state="translated">шаблон &lt;strong id=&quot;unpredictableSeed&quot;&gt;unpredictableSeed&lt;/strong&gt; (UIntType) if (isUnsigned! UIntType)</target>
        </trans-unit>
        <trans-unit id="3c2651e33c99671220c707c01e94f2d079a69847" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;unwrap&quot;&gt;unwrap&lt;/strong&gt;(Target) if (!isMutable!Target)</source>
          <target state="translated">&lt;strong id=&quot;unwrap&quot;&gt;развернуть&lt;/strong&gt; шаблон (Target), если (! isMutable! Target)</target>
        </trans-unit>
        <trans-unit id="091b55e7bdaa7a4d32d3e9dcfa089f8125019b9c" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;unwrap&quot;&gt;unwrap&lt;/strong&gt;(Target) if (isMutable!Target)</source>
          <target state="translated">&lt;strong id=&quot;unwrap&quot;&gt;развернуть&lt;/strong&gt; шаблон (Target) if (isMutable! Target)</target>
        </trans-unit>
        <trans-unit id="6a603415103fb98b339948282a2f7e1fd3b6260d" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;variadicFunctionStyle&quot;&gt;variadicFunctionStyle&lt;/strong&gt;(func...) if (func.length == 1 &amp;amp;&amp;amp; isCallable!func)</source>
          <target state="translated">шаблон &lt;strong id=&quot;variadicFunctionStyle&quot;&gt;variadicFunctionStyle&lt;/strong&gt; (func ...) if (func.length == 1 &amp;amp;&amp;amp; isCallable! func)</target>
        </trans-unit>
        <trans-unit id="3f9e484cedf2f478885124dcab85bfa29c96449f" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;visit&quot;&gt;visit&lt;/strong&gt;(Handlers...) if (Handlers.length &amp;gt; 0)</source>
          <target state="translated">шаблон &lt;strong id=&quot;visit&quot;&gt;посещения&lt;/strong&gt; (обработчики ...) if (Handlers.length&amp;gt; 0)</target>
        </trans-unit>
        <trans-unit id="80f3735aad78e561965c77efeb858bd2f64ff9a3" translate="yes" xml:space="preserve">
          <source>template &lt;strong id=&quot;wrap&quot;&gt;wrap&lt;/strong&gt;(Targets...) if (Targets.length &amp;gt;= 1 &amp;amp;&amp;amp; !allSatisfy!(isMutable, Targets))</source>
          <target state="translated">&lt;strong id=&quot;wrap&quot;&gt;перенос&lt;/strong&gt; шаблона (Targets ...) if (Targets.length&amp;gt; = 1 &amp;amp;&amp;amp;! allSatisfy! (isMutable, Targets))</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
